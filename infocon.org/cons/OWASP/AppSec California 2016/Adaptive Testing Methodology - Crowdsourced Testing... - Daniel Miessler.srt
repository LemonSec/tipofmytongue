1
00:00:18,470 --> 00:00:27,630
started my name is Daniel India director
of advisory services that I liked it and

2
00:00:27,630 --> 00:00:37,550
want to talk today about web testing
methodologies so who here has either

3
00:00:37,550 --> 00:00:49,180
done web hosting or manage 110 testers
some combination thereof so me ask you

4
00:00:49,180 --> 00:00:57,530
this have you ever given the same up to
the two different web testers has anyone

5
00:00:57,530 --> 00:01:00,530
ever got back the exact same results

6
00:01:03,059 --> 00:01:09,140
similar results sometimes somewhere
hopefully similar but it's hard to get

7
00:01:09,140 --> 00:01:15,710
the same results because people have
different methodologies so I'm gonna

8
00:01:15,710 --> 00:01:21,939
jump through a few concepts that sort of
jump around through security but come

9
00:01:21,939 --> 00:01:29,000
back to methodology so anyone familiar
with gonna Patterson really smart guy

10
00:01:29,000 --> 00:01:35,110
says I used to think we had security
problems and then figured out how to

11
00:01:35,110 --> 00:01:41,580
integrate the security solution but
security basics basically already

12
00:01:41,580 --> 00:01:47,630
handled and it's the integration that's
the problem so basically we don't have a

13
00:01:47,630 --> 00:01:51,759
problem with integration requirements we
have an immigration problem with

14
00:01:51,760 --> 00:01:56,100
security requirements and that this is
really smart so it's not that when

15
00:01:56,100 --> 00:01:59,229
testers were security testers don't know
what to do

16
00:01:59,229 --> 00:02:04,820
oftentimes oftentimes that the
methodology in the steps that they're

17
00:02:04,820 --> 00:02:09,090
going through as part of whatever
company process they have simply in

18
00:02:09,090 --> 00:02:13,840
motion and it's hard to take what you
know about security in integrated into

19
00:02:13,840 --> 00:02:22,470
that so my take on nurses sort of a
simplification which is security as an

20
00:02:22,470 --> 00:02:27,080
immigration problem it's not that we
don't know what to do is just we don't

21
00:02:27,080 --> 00:02:30,180
know how to integrate what we know what
we learn

22
00:02:30,180 --> 00:02:35,560
into what we're doing so short version

23
00:02:35,560 --> 00:02:43,480
security is an immigration problem so
next contact is two different ways to

24
00:02:43,480 --> 00:02:48,988
learn I did I say about this recently so
basically two different ways to learn

25
00:02:48,989 --> 00:02:55,790
one being osmotic which is actually the
word for relating to us Moses which is

26
00:02:55,790 --> 00:03:04,720
just sort of absorbing and then
algorithmic so I was learning is

27
00:03:04,720 --> 00:03:11,459
basically when you consume a video or a
talk or a book whatever it is about say

28
00:03:11,459 --> 00:03:17,680
testing ASAP right so you're consuming
this content right you're presumably not

29
00:03:17,680 --> 00:03:21,180
falling asleep you're mostly paying
attention to what you're reading or

30
00:03:21,180 --> 00:03:25,859
seeing in a few times throughout whether
it's a talker presentation you kind of

31
00:03:25,859 --> 00:03:31,299
say to yourself that's an interesting
and maybe one step further you might

32
00:03:31,299 --> 00:03:38,449
actually got something done about right
but then whatever a week later six

33
00:03:38,449 --> 00:03:44,489
months later you're testing ASAP and the
only thing you can remember is that you

34
00:03:44,489 --> 00:03:49,829
should be remembering something you
remember I saw talker I read that book

35
00:03:49,829 --> 00:03:56,790
there was a bunch of course steps but I
don't know what they are so that's one

36
00:03:56,790 --> 00:04:02,429
way to approach things which is how I've
been doing most of my life when you have

37
00:04:02,430 --> 00:04:08,099
a rhythmic learning which which is
basically you define that you care about

38
00:04:08,099 --> 00:04:13,819
this AP testing a lot that's the first
thing you sort of just declare and then

39
00:04:13,819 --> 00:04:19,589
you build an algorithm for testing ASAP
you do this in notes forget however

40
00:04:19,589 --> 00:04:22,690
whatever and you keep track

41
00:04:22,690 --> 00:04:28,170
of what your exact steps are and then
you go about learning more about it

42
00:04:28,170 --> 00:04:33,420
however you do that talks videos
whatever when you learn something new

43
00:04:33,420 --> 00:04:39,900
you actively right then and there you
update your system for doing it right

44
00:04:39,900 --> 00:04:44,429
now you're changing your algorithm based
on new inputs which means you're not

45
00:04:44,430 --> 00:04:47,080
trusting osmosis stored for you

46
00:04:47,080 --> 00:04:53,289
six months in the future so I've been
doing this in a number of different ways

47
00:04:53,290 --> 00:04:57,900
on the personal side as well as
professional but I've got like bucket

48
00:04:57,900 --> 00:05:01,020
list bug out bag daily routine this is a
really big one

49
00:05:01,590 --> 00:05:06,070
you read like a story on your new york
times or something it says you know must

50
00:05:06,070 --> 00:05:06,820
go to bed

51
00:05:06,820 --> 00:05:11,230
whatever before 5 p.m. if you think
that's a good enough step this is the

52
00:05:11,230 --> 00:05:15,940
challenge for everything you learn is
this thing good enough for me to change

53
00:05:15,940 --> 00:05:22,270
my daily methodology if not then you
just need to discard it and you could do

54
00:05:22,270 --> 00:05:28,270
it for all sorts of things including
testing ASAP or any kind of web so

55
00:05:28,270 --> 00:05:37,299
that's a concept algorithmic vs Arsenal
vs based learning so much problem is

56
00:05:37,300 --> 00:05:45,430
where methodologies of the traditional
ones are large very large and so if

57
00:05:45,430 --> 00:05:50,730
you're managing web testers are your
testing out yourself and you open up one

58
00:05:50,730 --> 00:05:56,790
of these things and looked at a much of
them again just just for this got 100

59
00:05:56,790 --> 00:06:03,330
pages and it just seems like you're
giving a little more work and it's very

60
00:06:03,330 --> 00:06:07,460
opaque it's hard for them to get through
this stuff is actually in as you pick

61
00:06:07,460 --> 00:06:10,630
through it it's great content which is
so hard to get through

62
00:06:14,700 --> 00:06:17,920
reproduces there's this feeling that you
see on the right

63
00:06:18,420 --> 00:06:29,420
anyone recognize this person a lot of
people so that's prob problem is well

64
00:06:29,420 --> 00:06:32,610
geez don't have context

65
00:06:34,640 --> 00:06:38,830
methodology doesn't know what you were
testing doesn't know if you're testing

66
00:06:38,830 --> 00:06:45,310
WordPress or engine access AP or a
patchy or whatever it's just giving you

67
00:06:45,310 --> 00:06:52,780
exactly what is going to give you with
no modifications what methodologies also

68
00:06:52,780 --> 00:06:57,299
don't know how big your problems are
they don't know what you're facing at

69
00:06:57,300 --> 00:07:03,180
the moment right sometimes you might get
a trade your request from Abbas customer

70
00:07:03,180 --> 00:07:10,150
once you find everything you can you
have 30 minutes it's it's hard to test

71
00:07:10,150 --> 00:07:14,260
in that amount of time and your web
methodology presents all two hundred

72
00:07:14,260 --> 00:07:15,920
pages

73
00:07:15,920 --> 00:07:22,540
despite the challenges of raising
methodology is also a hard update

74
00:07:22,540 --> 00:07:28,050
especially the big ones and the really
good ones they tend to be by committee

75
00:07:28,050 --> 00:07:32,530
right you haven't heard much people get
together in the room every six months or

76
00:07:32,530 --> 00:07:39,239
six years or whatever it happens and you
know ratification and yes and no and

77
00:07:39,240 --> 00:07:40,280
fight about it

78
00:07:40,280 --> 00:07:47,650
mailing list for quite some time and you
end up with an update but it's it's

79
00:07:47,650 --> 00:07:52,520
difficult to get the updates in it's
difficult to submit input to get it

80
00:07:52,520 --> 00:08:01,849
added in a lot of cases in the optimism
come very often so immigration different

81
00:08:01,850 --> 00:08:09,440
type of learning context sensitive
understanding how much time you have it

82
00:08:09,440 --> 00:08:12,870
difficult to update that's kind of what
we're talking about here

83
00:08:14,639 --> 00:08:19,919
so whatever together is basically an
attempt early attempts at trying to

84
00:08:19,919 --> 00:08:27,370
solve the problem through through
technology so when you start first with

85
00:08:27,370 --> 00:08:33,140
the methodology that's that's used so
the methodology is held in a hurry post

86
00:08:33,140 --> 00:08:40,789
which is located here will be later as
well but it starts with a good

87
00:08:40,789 --> 00:08:46,310
foundation of methodologies that I've
used over the years for probably about

88
00:08:46,310 --> 00:08:51,029
ten years so web application hacker's
handbook everyone's familiar with this

89
00:08:51,029 --> 00:08:57,220
imagine I don't know ask conference
pretty common so this one is excellent

90
00:08:57,220 --> 00:09:01,970
is probably the the deepest foundation
of methodologies that I like to use sort

91
00:09:01,970 --> 00:09:09,610
of the most of the content is based on
this stuff has to be a sorry guys use

92
00:09:09,610 --> 00:09:14,670
this methodology of this project with no
loss product is phenomenal

93
00:09:15,230 --> 00:09:19,690
so basically you see these three columns
those are the levels of the app that you

94
00:09:19,690 --> 00:09:23,890
need to deal with so basically one is
you don't even care that much about it

95
00:09:23,890 --> 00:09:29,449
pretty low risk much data in it choose
the middle and blue is the most

96
00:09:29,449 --> 00:09:31,430
important and it gives you

97
00:09:31,430 --> 00:09:36,269
prescriptive checks on what to look for
a great project so that's another source

98
00:09:36,269 --> 00:09:38,779
of methodology

99
00:09:38,779 --> 00:09:46,279
testing guide this is a great great
resource it's pretty large but very

100
00:09:46,279 --> 00:09:52,000
detailed so also a good source of
methodology then there's this guy

101
00:09:52,000 --> 00:09:59,980
sitting over there so the bug hundred
methodology by by Jason Haddix he did a

102
00:09:59,980 --> 00:10:05,839
series of talks on this in 2015 and
coming out from a bug hundreds perhaps

103
00:10:05,839 --> 00:10:12,890
perspective because he works a bug trap
and yes to all these are basically a

104
00:10:12,890 --> 00:10:19,520
good foundation on top of which to build
so the core concepts of this

105
00:10:19,520 --> 00:10:27,790
adaptive testing methodology concept or
having steps in the methodology that are

106
00:10:27,790 --> 00:10:32,780
very crisp that are efficient and you
kind of always when I have you don't

107
00:10:32,780 --> 00:10:38,560
have too much extra willingness to use
other tools so the web methodology

108
00:10:38,560 --> 00:10:44,079
approach here is to have not just web
tools in there but also network based

109
00:10:44,080 --> 00:10:50,330
tools lot of big schools because you can
just gather lots of information from

110
00:10:50,330 --> 00:10:52,740
existing resources and bring it in

111
00:10:52,740 --> 00:10:59,510
flexibility based on conditions is
another big thing that I'm trying to

112
00:10:59,510 --> 00:11:06,520
build around transparency this one is a
big one text files open source

113
00:11:06,520 --> 00:11:12,610
visibility into how everything works
right that's a big one so now I want to

114
00:11:12,610 --> 00:11:17,160
sort of talk about the structure of the
methodologies so this is what they look

115
00:11:17,160 --> 00:11:26,839
like they are text files and what it
does is it's basically combines inside

116
00:11:26,840 --> 00:11:34,110
of a single check a technology that the
check applies to combine with time

117
00:11:34,110 --> 00:11:40,500
frames that each roles associated so
basically each rule is defined as being

118
00:11:40,500 --> 00:11:45,160
is this a thirty-minute check if I'm
testing a web app than 30 minutes which

119
00:11:45,160 --> 00:11:52,300
we've all had to do if I only have 30
minutes what scheck should I run right

120
00:11:52,300 --> 00:11:59,209
and combine that with what technologies
or act in my actually running against so

121
00:11:59,210 --> 00:12:08,350
each rule is defined according to
protocol stack and time and they're also

122
00:12:08,350 --> 00:12:14,710
doing so this is currently structure so
this the technology comes first so in

123
00:12:14,710 --> 00:12:19,370
this case it's a universal technology
which means this rule applies to any

124
00:12:19,370 --> 00:12:27,970
technology that you're testing so some
examples in Apache it's a work for us

125
00:12:27,970 --> 00:12:32,290
and you see that you have times there as
well and then you have

126
00:12:32,290 --> 00:12:43,170
tax for the check that's technology when
you have time so 30 minutes one hour one

127
00:12:43,170 --> 00:12:50,160
day two days and unlimited and the use
of messing with and I would love to hear

128
00:12:50,160 --> 00:12:55,019
feedback on all these too small to large
whatever but the idea is someone could

129
00:12:55,019 --> 00:13:00,040
come to you and say maybe it's a friend
that says I'm about to go live in 45

130
00:13:00,040 --> 00:13:04,769
minutes I don't have any money can you
please look and see if I side is broken

131
00:13:05,579 --> 00:13:10,959
course the answer there is you going
live anyway why are you asking me but at

132
00:13:10,959 --> 00:13:17,560
least you would know what to look for 30
minutes to help them out so could be a

133
00:13:17,560 --> 00:13:25,279
day could be unlimited so basically all
other methodology use that we want to

134
00:13:25,279 --> 00:13:29,899
make up additional checks or existing
methodologies text that we like we could

135
00:13:29,899 --> 00:13:35,610
bring over and if they're really really
deep we add him to the unlimited right

136
00:13:35,610 --> 00:13:39,800
so that just means that you have
unlimited time the methodology will get

137
00:13:39,800 --> 00:13:48,519
very large so how's it work so basically
this is a service that runs its on the

138
00:13:48,519 --> 00:13:54,250
internet the client makes a request to
the ATM service you send two things you

139
00:13:54,250 --> 00:14:02,100
send domain and you send time scope and
the ATM service checks the stack of the

140
00:14:02,100 --> 00:14:07,350
site in question is very non-intrusive
just looks like a a web query basically

141
00:14:07,350 --> 00:14:14,000
the service receives the stock
information we parse the current

142
00:14:14,000 --> 00:14:21,130
methodology that matches the stack and
time combination and we give the results

143
00:14:21,130 --> 00:14:23,490
back to the client it's that simple

144
00:14:23,490 --> 00:14:34,089
so remaining time to ATM its young
chicks stack forces the church and then

145
00:14:34,089 --> 00:14:37,089
returns the checks to the client

146
00:14:39,160 --> 00:14:51,769
and now we try and do Thomas yes so
first first I want to show what it looks

147
00:14:51,769 --> 00:15:00,339
like on the claim I don't know if I have
an internet connection because there is

148
00:15:00,339 --> 00:15:03,339
constructed

149
00:15:14,410 --> 00:15:21,000
so this is the script that is behind the
scenes during just the static analysis

150
00:15:42,510 --> 00:16:04,310
this is actually easy to fall this
because we are basically looking at

151
00:16:04,310 --> 00:16:10,479
better contact the idea is to have a
free service that replaces does it

152
00:16:10,480 --> 00:16:16,280
replace but it's a free alternative to
things like bill which controlled pretty

153
00:16:16,280 --> 00:16:21,579
serious amount of money if you create a
lot and I get to see under the covers

154
00:16:21,580 --> 00:16:30,610
what we're actually doing which when you
look at me like well it's super easy I

155
00:16:30,610 --> 00:16:36,100
don't know why the service didn't
already exists for free you can just

156
00:16:36,100 --> 00:16:41,710
create whenever you want so you can look
for all sorts of things WordPress admin

157
00:16:41,710 --> 00:16:48,110
but you're there check sections so I've
got like 30 or 40 checks and here you ma

158
00:16:48,110 --> 00:16:55,230
Pachi and genetics I feel as if it's a
sell-side or not

159
00:16:55,230 --> 00:17:03,020
lots of different identification of
platform a lot of these are headers but

160
00:17:03,020 --> 00:17:09,050
they don't have to be heard as they can
also be a request for files that exist

161
00:17:09,050 --> 00:17:15,440
in certain locations returnees /
administrator certain javascript files

162
00:17:15,440 --> 00:17:25,350
for Joomla or whatever so here's what it
looks like in the browser if it works

163
00:17:39,779 --> 00:17:42,779
which I'm speeding up right now

164
00:17:47,570 --> 00:17:54,220
wordPress is running these things so TLS
so this is an example of where the

165
00:17:54,220 --> 00:17:58,340
dynamic methodology is useful you could
have a whole bunch of checks that you

166
00:17:58,340 --> 00:18:05,850
run against heal us but you only run
them if the site is yours right so with

167
00:18:05,850 --> 00:18:10,600
WordPress you can spawn off and the
methodology already has a knitwear if

168
00:18:10,600 --> 00:18:16,809
it's WordPress that's going to spawn off
CMS map WP scan whatever you can to

169
00:18:16,809 --> 00:18:19,809
branch out but if the stuff is there

170
00:18:21,120 --> 00:18:30,449
told you so much smaller so this is what
it is or the project

171
00:18:30,450 --> 00:18:43,899
adaptive testing methodology is calling
calling this first so it looks like so

172
00:18:43,899 --> 00:18:49,629
it's a similar sort of interface except
were here we have the the the marker for

173
00:18:49,629 --> 00:18:58,500
term limits so we can say we don't have
any time I've just got to get the most

174
00:18:58,500 --> 00:19:02,690
important stuff by new methodology

175
00:19:09,590 --> 00:19:12,590
works for sure will

176
00:19:18,659 --> 00:19:34,019
determine how long you have to
acknowledge he's telling us what to run

177
00:19:34,019 --> 00:19:43,009
against that site and here's a look at
some of the methodology so for 30

178
00:19:43,009 --> 00:19:46,139
minutes you have to really trim down and
that's where it comes down to

179
00:19:46,139 --> 00:19:53,178
determining what shocks run at what
times right and this is where the Met

180
00:19:53,179 --> 00:19:57,840
Sally methodology gets really
interesting because when you come up

181
00:19:57,840 --> 00:20:00,899
with a new check that you find you know
you're in some chocolate store and they

182
00:20:00,899 --> 00:20:04,309
say oh you should definitely check for
this you know what's the school move on

183
00:20:04,309 --> 00:20:08,899
me to check for it when you go to add it
weird you out in the methodology is

184
00:20:08,899 --> 00:20:15,469
applied one technology or another and at
what time limit so that's what happened

185
00:20:15,470 --> 00:20:27,749
so 3039 checks here we're gonna change
the sub 24 hours which is more like a

186
00:20:27,749 --> 00:20:36,929
regular tests although a good test of
courses one or two weeks and we should

187
00:20:36,929 --> 00:20:41,739
go more than 39 checks yeah

188
00:20:55,160 --> 00:21:04,870
right now what it's doing so we went
from thirty 92104 so those checks will

189
00:21:04,870 --> 00:21:17,489
still exist you'll just get deeper
checks in addition yeah yeah it does it

190
00:21:17,490 --> 00:21:23,650
does it does exactly what its doing so
basically you could have one check for

191
00:21:23,650 --> 00:21:28,170
30 minutes is looking at the same
content but it's saying for example

192
00:21:28,170 --> 00:21:35,880
Jason I men managed a bunch of security
less like discovery lists well one less

193
00:21:35,880 --> 00:21:41,850
than they have in the 30 minute window
looks for only a thousand the top

194
00:21:41,850 --> 00:21:47,409
directors and then as we go up to more
and more time we're we're looking for

195
00:21:47,410 --> 00:21:52,020
ten thousand four hundred thousand
directories so it is scaling based on

196
00:21:52,020 --> 00:21:55,020
how much time that you have

197
00:21:56,770 --> 00:22:09,580
so for example in the automation section
in 30 minutes it only has you during a

198
00:22:09,580 --> 00:22:11,060
perp skin

199
00:22:11,060 --> 00:22:16,090
automated and then as you go longer time
frames that saying at this school at

200
00:22:16,090 --> 00:22:22,010
this tool you know in a number of tools
that you have to your merits because you

201
00:22:22,010 --> 00:22:30,820
have the extra time so now when I want
to do is

202
00:22:49,299 --> 00:22:55,779
because this is not a concept this is an
adaptive methodology concept we should

203
00:22:55,779 --> 00:23:03,299
be able to say I want to brush up on my
nutsack which I do what are their top

204
00:23:03,299 --> 00:23:11,100
techniques for getting domain admin on a
network if you only have an hour right

205
00:23:11,100 --> 00:23:16,029
you have 30 minutes worth of the top 10
things that you should do but I don't

206
00:23:16,029 --> 00:23:20,230
want to write a top 10 methodology and
then have the southern methodology for

207
00:23:20,230 --> 00:23:23,960
if I have more time I just want to have
it dynamically adjust according to my

208
00:23:23,960 --> 00:23:33,750
situation so I'm gonna reach out to Rob
fuller rubik's and basically try and get

209
00:23:33,750 --> 00:23:39,809
him a bunch of rules internetwork exact
same format exact same interface crap

210
00:23:39,809 --> 00:23:44,899
about forensics and have someone do it
for forensics as well right so this is a

211
00:23:44,899 --> 00:23:56,860
concept that apply some places so going
into work though so we're very large

212
00:23:56,860 --> 00:24:04,658
display a lot of rap over but you see
it's just very intuitive obvious sort of

213
00:24:04,659 --> 00:24:10,950
tax rate so are the top when we say this

214
00:24:23,490 --> 00:24:46,910
and we'll just say I did it for us and
we're going to going to we're gonna

215
00:24:46,910 --> 00:24:56,380
commit first then we're going to push it
and then have to do one stupid thing

216
00:24:56,380 --> 00:24:59,380
which is clean up

217
00:25:02,809 --> 00:25:13,730
and now when I run a test at the one
hour mark storfer gotta stop

218
00:25:27,120 --> 00:25:31,959
doing this over a network

219
00:25:41,100 --> 00:25:49,689
so the idea here is is simple right we
want to have a crowd-sourced methodology

220
00:25:49,690 --> 00:25:57,080
handled by get her all the best testers
in the world basically can come in here

221
00:25:57,080 --> 00:26:02,649
and say switches sharp that's dumb never
used that I hate chrome use Firefox

222
00:26:02,650 --> 00:26:08,700
cement pull request I go in there pull
it down it's a simple text format than

223
00:26:08,700 --> 00:26:15,760
everyone can read and now this
methodology grows and updates and the

224
00:26:15,760 --> 00:26:20,460
very next time someone execute the
service they get the freshest stuff

225
00:26:26,039 --> 00:26:35,049
crowdsourced updates that's that's
really the key that I'm excited about is

226
00:26:35,049 --> 00:26:39,860
having people community cooperate and
bring the stuff together in one place

227
00:26:39,860 --> 00:26:46,189
which doesn't have to be here there'll
be many forks adjust your time

228
00:26:46,190 --> 00:26:52,940
constraints produces customized testing
for the app and their budget stuff I'm

229
00:26:52,940 --> 00:26:56,590
gonna do with this right so basically
improving the methodologies is one thing

230
00:26:56,590 --> 00:27:03,090
right now it's a decent methodology it
works I use it already but I've got tons

231
00:27:03,090 --> 00:27:06,500
more content to bring over into it

232
00:27:06,500 --> 00:27:13,500
another thing I would do is right now it
only checks the stack from the outside

233
00:27:13,500 --> 00:27:18,280
with curl right so you're hitting the
outside as an unaffiliated user with

234
00:27:18,280 --> 00:27:22,120
curl in your checking the stock and
that's why it works you reading headers

235
00:27:22,120 --> 00:27:27,129
and that's fine but what if I could be
looking at bir plugs in the meantime

236
00:27:27,130 --> 00:27:32,260
because after I get past login now I see
flash no I see a bunch of other

237
00:27:32,260 --> 00:27:36,059
technologies so that could be updated on
the fly

238
00:27:36,059 --> 00:27:45,960
feeling you new methodology with Ajax
basically so other types of context

239
00:27:45,960 --> 00:27:50,970
beyond stock in time so stuck right now
is is a context there's just a

240
00:27:50,970 --> 00:27:53,830
methodology time as one but there could
be others

241
00:27:53,830 --> 00:27:57,110
just a methodology as well

242
00:27:57,110 --> 00:28:02,449
other types of testing talked about that
network forensics whatever determine the

243
00:28:02,450 --> 00:28:08,110
best time increments maybe 30 minutes
one hour a day maybe those aren't the

244
00:28:08,110 --> 00:28:13,908
best to treat those performance of the
stock detection and basically a

245
00:28:13,909 --> 00:28:22,169
multi-thread that and then the idea that
I like the most about is treating this

246
00:28:22,169 --> 00:28:26,779
as a public service where it's just out
there on the internet you can have any

247
00:28:26,779 --> 00:28:32,779
finance and even any methodology so you
have another pool down that points to a

248
00:28:32,779 --> 00:28:39,460
fork of the methodology that you like
better and cold out there that will call

249
00:28:39,460 --> 00:28:49,870
it and interact with it in real time
that's one of the things I wanna show so

250
00:28:49,870 --> 00:28:52,889
there's also this

251
00:29:01,539 --> 00:29:09,559
directly by domain so you can actually
put the domain in the URL on queries

252
00:29:09,559 --> 00:29:14,899
that way the result back I'm trying to
make it super easy just scrape and use

253
00:29:14,899 --> 00:29:22,609
so that's just a regular web response so
this particular site was expressed in

254
00:29:22,609 --> 00:29:41,639
node here's another one so any client
can use it from anywhere so I mean a

255
00:29:41,639 --> 00:29:44,899
bunch of demands I actually just
recently moved its my domain like couple

256
00:29:44,899 --> 00:29:48,998
days ago but I mean some other demands
in case it was just a public service out

257
00:29:48,999 --> 00:29:55,309
there now too excited about the demands
but the other thing I want to do is turn

258
00:29:55,309 --> 00:29:59,840
this into a local implementation that
can be used inside of products

259
00:29:59,840 --> 00:30:05,970
themselves right because I don't like
the idea if I'm running so whatever

260
00:30:05,970 --> 00:30:10,889
product I don't like the idea of anyone
who test the site using my product is

261
00:30:10,889 --> 00:30:17,139
calling some service which receives the
domain and whatever it's like that's

262
00:30:17,139 --> 00:30:21,330
leakage that the site is being tested
possible have an IP so we gotta have

263
00:30:21,330 --> 00:30:30,849
some sort of local option brings a
Cornell SMent so this will be built into

264
00:30:30,849 --> 00:30:38,340
work very soon so basically I was
talking to die for building this and he

265
00:30:38,340 --> 00:30:44,320
is looking to add methodology support
into it and he's basically excited about

266
00:30:44,320 --> 00:30:52,849
the notion of having the methodology be
adjusted based on what your testing

267
00:30:52,849 --> 00:30:57,259
right now we haven't worked out exactly
how the service will work where it will

268
00:30:57,259 --> 00:31:00,909
live but we're definitely gonna address
the issue that we don't want leakage

269
00:31:00,909 --> 00:31:06,139
coming up perp doing some service that
may be a service that he controls

270
00:31:06,139 --> 00:31:10,029
similar to a collaborator but but

271
00:31:10,700 --> 00:31:21,720
thanks to 44 looking at this Jason
active

272
00:32:02,610 --> 00:32:14,159
makes the check a little bit more ugly
but it's basically a group statement

273
00:32:14,160 --> 00:32:40,070
that does this and it's just really easy
to to build the chess is having each

274
00:32:40,070 --> 00:32:44,820
yeah that's no problem yeah

275
00:32:48,160 --> 00:33:11,430
first there will be bias for whatever
reason there's already bias in it

276
00:33:11,430 --> 00:33:18,540
because i mean but there will be biased
but if you just use is gonna sound dumb

277
00:33:18,540 --> 00:33:22,100
but if you just use people who are well
known as being too soon and in the

278
00:33:22,100 --> 00:33:28,379
industry and then you get people like in
the room say hey you wanna help moderate

279
00:33:28,380 --> 00:33:35,130
or whatever and you could just say this
he works for the company and he's

280
00:33:35,130 --> 00:33:39,720
pitching that he wants this in the thing
and maybe it's super obvious other than

281
00:33:39,720 --> 00:33:44,590
that I feel like we don't have too much
friction to stuff going in but I think

282
00:33:44,590 --> 00:33:49,740
if you just have a few decent people
were helping curate and you have good

283
00:33:49,740 --> 00:33:54,020
people with write access it should work
itself out it's a good conservative

284
00:33:54,020 --> 00:33:57,020
think about

285
00:33:58,559 --> 00:34:03,980
mostly open source lottery kanji

286
00:34:06,840 --> 00:34:13,690
which is not open source I consider open
source comes through in the box but yeah

287
00:34:13,690 --> 00:34:19,159
so there's no other named commercial
scanners are so expensive but I say next

288
00:34:19,159 --> 00:34:35,639
and scanner next and scanner so oh
that's the second year so yeah there's

289
00:34:35,639 --> 00:34:40,829
one thing I'm worried about the data
format but don't that seems like a

290
00:34:40,829 --> 00:34:45,379
really cool tag like you click the don't
have money like what it looked like

291
00:34:45,379 --> 00:34:49,940
about the interface right what I like
about the interfaces you just click all

292
00:34:49,940 --> 00:34:54,530
your contacts and like I said there's
only two contexts right now but that's

293
00:34:54,530 --> 00:34:58,390
that's another context don't have money
now the commercial scanner stuff has

294
00:34:58,390 --> 00:35:01,390
gone great and you

295
00:35:04,950 --> 00:35:11,618
it's no its just text files and their
empty files

296
00:35:29,119 --> 00:35:38,549
yeah yeah absolutely it is taken into
account in order so the ordered that

297
00:35:38,549 --> 00:35:43,950
it's in the methodologies the order that
spits out notwithstanding contact

298
00:35:43,950 --> 00:35:46,950
spalding steps out but

299
00:35:54,530 --> 00:36:01,830
sure it would be like if account locked
out and methodology ya know it's good

300
00:36:01,830 --> 00:36:04,830
point

301
00:36:23,740 --> 00:36:31,509
because some random check which is the
results are gonna be imperfect but

302
00:36:31,510 --> 00:36:34,950
others are recon in G which are
capturing a state file which are adding

303
00:36:34,950 --> 00:36:37,910
up and the idea

304
00:36:37,910 --> 00:36:43,379
ultimately we'd like to be putting
everything into one place it's a good

305
00:36:43,380 --> 00:36:49,369
point I don't know how to solve that but
it's a good thing yeah

306
00:37:02,520 --> 00:37:10,630
the context for a little bit mixed right
now where I had some more like commands

307
00:37:10,630 --> 00:37:17,330
like good you this summer like this just
clean up I have to do some are filled to

308
00:37:17,330 --> 00:37:24,890
make response identical or something
like that so some checks are the answer

309
00:37:24,890 --> 00:37:32,460
that's broken and some are go do this
but that's because summer mixed from SBS

310
00:37:32,460 --> 00:37:35,460
there's a mix from other sources

311
00:37:44,620 --> 00:38:06,470
to you

312
00:38:39,030 --> 00:38:45,760
that's a great idea so I'm actually
looking for a bunch of these more

313
00:38:45,760 --> 00:38:50,260
contacts that are radio buttons or or
whatever

314
00:38:51,020 --> 00:39:03,490
checkboxes compliance basically activate
all those 65 checks yeah you're totally

315
00:39:03,490 --> 00:39:07,620
right

