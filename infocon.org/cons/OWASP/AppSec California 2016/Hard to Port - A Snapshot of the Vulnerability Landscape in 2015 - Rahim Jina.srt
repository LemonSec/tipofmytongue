1
00:00:18,470 --> 00:00:27,859
hi everybody my name is Raheem Gina so
we're we're going to look at the US was

2
00:00:27,859 --> 00:00:34,710
a snapshot of the vulnerability
landscape over the last year 2015 just a

3
00:00:34,710 --> 00:00:38,970
quick overview of what I'm gonna be
talking about answer hopefully a few

4
00:00:38,970 --> 00:00:43,680
questions such as who am i why am I here
what am I talking about you know those

5
00:00:43,680 --> 00:00:46,879
kind of things so quickly

6
00:00:47,420 --> 00:00:54,640
just a little thing on myself and the
team Gina I i dont have an Irish name

7
00:00:54,640 --> 00:01:01,890
and i dont probably look very sexy iris
I currently am a director with Khaled

8
00:01:01,890 --> 00:01:08,250
sconce very brief piece on that coming
up because the day we're talking about

9
00:01:08,250 --> 00:01:14,729
is gathered from this it's it's a
managed service I was head of security

10
00:01:14,729 --> 00:01:18,630
for come to go for knowledge base their
Los Angeles lived here for a number of

11
00:01:18,630 --> 00:01:24,920
years I lived quite host here so sexy
lovely to be back and thankfully my wife

12
00:01:24,920 --> 00:01:28,790
allowed me to come all the way over
because we well we have a three-year-old

13
00:01:28,790 --> 00:01:32,920
I abandon her with her three-year-old
and her three-month-old so very thankful

14
00:01:32,920 --> 00:01:42,440
for her for that so yeah I worked in los
Angeles is going to back to back I've

15
00:01:42,440 --> 00:01:47,149
been driving my balance the last two
days has been extra west in the last

16
00:01:47,150 --> 00:01:54,760
period regarding OWASP I have been
participate ur contributor since 2008

17
00:01:54,760 --> 00:01:59,650
went to north so Mets supposed
contribution wise would have been

18
00:01:59,650 --> 00:02:04,440
involved in the cut the first code
review guide along with my co-director

19
00:02:04,440 --> 00:02:08,098
and CTO of it's kind of scary who's
actually talking tomorrow

20
00:02:08,908 --> 00:02:13,629
interesting guy and you know it has been
generally involved all this for a long

21
00:02:13,629 --> 00:02:16,799
time was part of the Irish chapter

22
00:02:16,800 --> 00:02:20,890
that kind of stuff as well I've been in
application security I guess for about

23
00:02:20,890 --> 00:02:27,179
the past 11 years was a developer in in
a former life then I decided was more

24
00:02:27,180 --> 00:02:31,810
fun to break things so I went on this or
the attack side and you know what that's

25
00:02:31,810 --> 00:02:36,230
all well and good and it's fun and it's
interesting but I suppose getting a

26
00:02:36,230 --> 00:02:40,970
little bit older now more interested in
in you know that there is always tax and

27
00:02:40,970 --> 00:02:45,520
there's always breaches and hawks and
everything but I suppose bigger problems

28
00:02:45,520 --> 00:02:51,430
trying to fix fix these things so trying
to spend more of my time doing that and

29
00:02:51,430 --> 00:02:57,140
that's really what we're where we are
going to be part of that so why are we

30
00:02:57,140 --> 00:03:02,510
here where we're here to look at the
statistics i spose try to make

31
00:03:02,510 --> 00:03:06,090
statistics a little bit sexy you know
that we're gonna be looking at a spill

32
00:03:06,090 --> 00:03:10,270
is the snapshot of the different types
of vulnerabilities that we've seen over

33
00:03:10,270 --> 00:03:14,580
the last year but it was before we even
get to that point I suppose I need to

34
00:03:14,580 --> 00:03:19,450
give you better context around where the
data came from and you know just to see

35
00:03:19,450 --> 00:03:26,790
how it in your head where where where we
got these things so I suppose regarding

36
00:03:26,790 --> 00:03:32,769
how we measure risk you know what is a
risk you know what is the probability of

37
00:03:32,770 --> 00:03:38,459
an undesired outcomes and it was the
same here you know is to reduce this

38
00:03:38,459 --> 00:03:41,790
probability that's what we all want to
do to you know better security posture

39
00:03:41,790 --> 00:03:47,769
regarding how we measure risk suppose
that the platform itself ex-cons said

40
00:03:47,770 --> 00:03:52,660
briefly its money serves this this is
pretty much all I'm gonna go into Ghana

41
00:03:52,660 --> 00:03:59,420
as a as a piece but the background it's
helped frame where we got the data it's

42
00:03:59,420 --> 00:04:03,329
a continuous testing platform and its
full stock so we're looking at web apps

43
00:04:03,330 --> 00:04:09,500
hosts servers are we looking at
everything and we're doing continuously

44
00:04:09,500 --> 00:04:15,760
what continues mean can be anything it's
at least monthly and then as granular is

45
00:04:15,760 --> 00:04:20,940
nearly every week or every few days so
it depends on the the the host or

46
00:04:20,940 --> 00:04:21,839
whatever we're

47
00:04:21,839 --> 00:04:27,060
testing this human involved in
verification so whatever vulnerabilities

48
00:04:27,060 --> 00:04:31,120
are found one of our engineers are soft
at the house actually looked at it and I

49
00:04:31,120 --> 00:04:34,910
said yes this is actually a
vulnerability so we're hoping to sell

50
00:04:34,910 --> 00:04:38,139
false positives in there but I suppose
you never really say that nobody

51
00:04:38,139 --> 00:04:42,370
complained yet anyway that's sure you
know that then feed into our own ethics

52
00:04:42,370 --> 00:04:46,070
and metrics and then reduced River Delta
analysis and that way we can track

53
00:04:46,070 --> 00:04:52,210
trending overtime for our clients are
they getting better getting more

54
00:04:52,210 --> 00:05:00,130
insecure this kind of stuff so why do an
annual report

55
00:05:00,130 --> 00:05:04,450
well as the service itself is in the
third year first year you know we we

56
00:05:04,450 --> 00:05:09,370
didn't you know we we had a starting off
so we we had a certain today that last

57
00:05:09,370 --> 00:05:16,289
year was the first year we did a stock
reports the 2014 one at that point we we

58
00:05:16,289 --> 00:05:20,940
decided we had an off day to their to to
actually get a good statistical sample

59
00:05:20,940 --> 00:05:26,800
the difference in the sample racine 2014
15 has increased quite dramatically so

60
00:05:26,800 --> 00:05:32,320
all the time we're sort of gotten more
information and I suppose you know we

61
00:05:32,320 --> 00:05:36,370
sort of felt ourselves we we have all
this data to do something cool with it

62
00:05:36,370 --> 00:05:40,060
you know we we we have all these
different types of clients across

63
00:05:40,060 --> 00:05:45,460
different industries you know and it's
good to see the different types of

64
00:05:45,460 --> 00:05:50,560
problems that there are facing and then
obviously that the aim is we can ask

65
00:05:50,560 --> 00:05:53,550
yourself these questions such as you
know what's the most effective thing I

66
00:05:53,550 --> 00:05:57,889
can do as a business owner security
person in my organization to improve my

67
00:05:57,889 --> 00:06:02,000
security posture you know we want to
know what the what the root causes a lot

68
00:06:02,000 --> 00:06:07,750
of the issues are water and basically
you know the aim of this whole

69
00:06:07,750 --> 00:06:12,460
presentation and and a status report
itself is too maybe give organizations a

70
00:06:12,460 --> 00:06:19,190
few things they can do a few other
processes they can improve on a few

71
00:06:19,190 --> 00:06:22,360
different policies or whatever that you
know a few different ways that you can

72
00:06:22,360 --> 00:06:24,020
make an impact on your own

73
00:06:24,020 --> 00:06:29,500
security posture as well as always good
to know what other people are doing you

74
00:06:29,500 --> 00:06:34,879
know it's good to know what your
neighbors doing so where the numbers

75
00:06:34,879 --> 00:06:40,590
come from this is a quick industries
place across different verticals and the

76
00:06:40,590 --> 00:06:46,789
sample space that the timing I suppose
it's the 2015 report but we played at

77
00:06:46,789 --> 00:06:52,789
the end of we publish it in December
last year so the data was from 1st

78
00:06:52,789 --> 00:07:00,130
December 2014 to the end of November
2015 the sample size when I get into

79
00:07:00,130 --> 00:07:05,930
exact numbers we're talking about
thousands of assets now how we classify

80
00:07:05,930 --> 00:07:10,449
I said is it depends on a number of
different things and I can be a single

81
00:07:10,449 --> 00:07:15,090
web application and I said can be a
single IP address and I said could be a

82
00:07:15,090 --> 00:07:16,400
combination of both

83
00:07:16,400 --> 00:07:23,448
it could be a block 256 IP's kabhi kabhi
10,000 so we classify things based on

84
00:07:23,449 --> 00:07:29,150
how our customers want their view of the
world so and from there then that's

85
00:07:29,150 --> 00:07:38,568
where we were we we we draw the lines of
the different silos of data so you're in

86
00:07:38,569 --> 00:07:44,610
Review well I suppose every year you
know if you read Verizon breach reports

87
00:07:44,610 --> 00:07:48,599
and all these other reports everyone
always goes on this year is the year of

88
00:07:48,599 --> 00:07:52,919
the breach you know they just keep
happening they just keep getting worse

89
00:07:52,919 --> 00:07:59,139
every year this year the breach you know
like I suppose that this data only go up

90
00:07:59,139 --> 00:08:04,750
to September but you know I suppose
fighting bulls and hawks are you know

91
00:08:04,750 --> 00:08:05,990
they're easier

92
00:08:05,990 --> 00:08:10,599
people are people to the industry itself
that this band is increasing

93
00:08:10,599 --> 00:08:16,090
dramatically problems seem to be getting
better seems to be getting worse it

94
00:08:16,090 --> 00:08:21,849
interesting that even the Experian one
was through the tmobile I actually had

95
00:08:21,849 --> 00:08:25,550
my own personal data taken as well as
well so it's weird that you know you

96
00:08:25,550 --> 00:08:29,120
trust your data with with with certain
companies and it's not even their fault

97
00:08:29,120 --> 00:08:33,719
they may have a good posture through the
day they share to somebody else that

98
00:08:33,719 --> 00:08:35,930
there is a need there is a records

99
00:08:35,929 --> 00:08:41,179
so it's it's it's interesting that an
individual to be affected by these types

100
00:08:41,179 --> 00:08:48,060
of large breasts and again it's a little
bit of a groundhog day with the with the

101
00:08:48,060 --> 00:08:53,739
overview there there was a huge
difference between the 2014 review in

102
00:08:53,740 --> 00:08:58,120
the 2015 one we did do the start a
little bit differently to tease out a

103
00:08:58,120 --> 00:09:03,160
few different sort of trends that will
get to the very end but you know again

104
00:09:03,160 --> 00:09:07,740
you're the breach it keeps getting worse
I think the Verizon reach report this

105
00:09:07,740 --> 00:09:12,350
year there was an estimated 400 million
dollar loss on seven hundred million

106
00:09:12,350 --> 00:09:22,160
records so that's pretty phenomenal so
into the statistics are things ok we're

107
00:09:22,160 --> 00:09:27,189
gonna start off with web apps so these
are the likelihood of these different

108
00:09:27,190 --> 00:09:31,520
types of classes vulnerability to be
discovered in a web of now when we talk

109
00:09:31,520 --> 00:09:37,439
about Hausler stuff go through it up
this way but on the bottom end we've got

110
00:09:37,440 --> 00:09:40,910
injection attacks you know there is is
everything from you

111
00:09:40,910 --> 00:09:44,430
action command injection that kind of
thing sequel injection thankfully

112
00:09:44,430 --> 00:09:49,180
actually it seems to be having a lower
so that's good I suppose you know the

113
00:09:49,180 --> 00:09:54,270
different types of frameworks that are
out there if you if you're using the

114
00:09:54,270 --> 00:09:59,010
framer says they're intended to be used
the they're protecting against a lot of

115
00:09:59,010 --> 00:10:04,860
you know it's making it harder to two
bright bots sequel code to you know out

116
00:10:04,860 --> 00:10:09,330
of the box so that that's a good thing
again the impact on those kind of issues

117
00:10:09,330 --> 00:10:14,160
can be quite big for access

118
00:10:14,160 --> 00:10:17,160
eat that's actually knew on the list
this year

119
00:10:17,800 --> 00:10:25,569
external entity tax external and so
that's why I think that there have been

120
00:10:25,570 --> 00:10:29,130
improvements in all of the tools that
test with these things over the last

121
00:10:29,130 --> 00:10:38,470
year to actually making finding these
issues but more and more accurate what's

122
00:10:38,470 --> 00:10:43,709
next few more things authentication
information leakage and session

123
00:10:43,709 --> 00:10:47,130
management issues they're all sort of
racking up their little bit

124
00:10:47,130 --> 00:10:51,310
session management issues there anything
relating to five sessions there between

125
00:10:51,310 --> 00:10:54,359
the cookies and all those types of
things

126
00:10:54,360 --> 00:11:01,260
content injection access access is
nearly always high on the list in fact I

127
00:11:01,260 --> 00:11:09,080
think the density of an ex ex ex s issue
was I think we had four point eight

128
00:11:09,080 --> 00:11:14,830
seven instances per per web app in our
system now I thought to say every web

129
00:11:14,830 --> 00:11:21,620
access issue we had obviously known some
sites with nothing and then we actually

130
00:11:21,620 --> 00:11:26,990
had one site with clothes on a thousands
instances so you know that the

131
00:11:26,990 --> 00:11:32,510
prevalence can be quite big sum up sent
hundreds as well so access as always it

132
00:11:32,510 --> 00:11:37,290
is always a big one and to be honest not
really improving in what we're seeing at

133
00:11:37,290 --> 00:11:44,770
all why I do this probably a number of
reasons but content injection there is

134
00:11:44,770 --> 00:11:51,020
an interesting one to what we're talking
about there is was broadly peterman HTML

135
00:11:51,020 --> 00:11:56,130
injection basically everything you can
do it access but you're not injecting

136
00:11:56,130 --> 00:12:01,420
scripts are you able to inject arbitrary
HTML you can use offered certain types

137
00:12:01,420 --> 00:12:07,079
of phishing attacks psyche face and
things like that so that was pretty

138
00:12:07,080 --> 00:12:16,460
problems as well as was the worst was
SSL issues raised by far nearly

139
00:12:16,460 --> 00:12:23,940
two-thirds of the web us that we had
under management had some kind of issue

140
00:12:23,940 --> 00:12:28,019
right

141
00:12:28,019 --> 00:12:33,009
root cause now hosting Larry so we
decided to split and hosting a little

142
00:12:33,009 --> 00:12:38,519
bit just made sense to group all
abilities that way what we did hear

143
00:12:38,519 --> 00:12:46,600
those we grouped by root cause instead
of tissue-type vulnerability type so

144
00:12:46,600 --> 00:12:49,949
there was a few reasons for that what is
that a large part of the issues that

145
00:12:49,949 --> 00:12:54,649
we'll see what we got to the the worst
part of this you know if you think about

146
00:12:54,649 --> 00:12:58,459
hosting their stuff it's known
vulnerabilities things with TVs attached

147
00:12:58,459 --> 00:13:05,290
to them very specific issues that are
found in very specific technologies if

148
00:13:05,290 --> 00:13:08,699
we have grouped in that way we probably
would have ended up with twenty thirty

149
00:13:08,699 --> 00:13:12,639
different lollipops there each maybe one
to two percent for each specific issue

150
00:13:12,639 --> 00:13:17,369
did released seem to make sense to do it
that way so we agree with this way and

151
00:13:17,369 --> 00:13:23,660
unsupported system $0.05 a system that
they're actually they are deprecated so

152
00:13:23,660 --> 00:13:28,379
did not even party's been being released
for them expose services things like

153
00:13:28,379 --> 00:13:32,389
your web app you've got to tell that
opened things like that silly little

154
00:13:32,389 --> 00:13:36,129
things just that should be locked down
this configuration that sort of the

155
00:13:36,129 --> 00:13:40,110
brought on as well but also covers
things like you know you're out of the

156
00:13:40,110 --> 00:13:44,660
box a default settings on different
services but both are the worst was

157
00:13:44,660 --> 00:13:48,309
partying and actually this sort of an
overarching trend coming through with

158
00:13:48,309 --> 00:13:53,969
touching you know you'd like to think
the worst vulnerabilities are going to

159
00:13:53,970 --> 00:13:58,709
be something really cool or whatever but
it actually watching was was the main

160
00:13:58,709 --> 00:14:01,709
reason actually for a lot of these
problems

161
00:14:06,620 --> 00:14:12,410
so all in all we 15.1 percent of our
assets had higher critical risk

162
00:14:12,410 --> 00:14:17,260
vulnerability I mean that's that's very
high to me if you think about an

163
00:14:17,260 --> 00:14:19,970
enterprise application that so your
large enterprise you have a hundred

164
00:14:19,970 --> 00:14:25,020
applications may be business critical
systems 15 of them have a higher

165
00:14:25,020 --> 00:14:30,910
critical risk issue that's huge you know
if you think a critical risk there were

166
00:14:30,910 --> 00:14:36,790
racy saying you are in imminent threat
of being breached or you already have

167
00:14:36,790 --> 00:14:42,230
been breached high risk then as well
it's it its likelihood is pretty high

168
00:14:42,230 --> 00:14:47,050
that a breach could happen at any point
I mainly don't through the fact that the

169
00:14:47,050 --> 00:14:52,449
the issue the vulnerability is easy to
exploit freely available for the impact

170
00:14:52,450 --> 00:15:01,350
if it is breaches actually very high so
yeah pretty pretty pretty hi there just

171
00:15:01,350 --> 00:15:05,230
a quick slide on the risk density then
as broken down perot player forces

172
00:15:05,230 --> 00:15:11,260
hosting their I thought the the root
cause for love the up their stuff there

173
00:15:11,260 --> 00:15:19,020
were it scare coding practices and then
actually support component management

174
00:15:19,020 --> 00:15:22,710
which is a big trend that all talk about
another in a few slides from their

175
00:15:22,710 --> 00:15:30,490
abilities include remote code execution
that kind of thing in the host later a

176
00:15:30,490 --> 00:15:34,070
lot of it was a lot of SSL related stuff
last year I suppose if you think about

177
00:15:34,070 --> 00:15:41,000
all the different types of problems that
were with crypto the last year too large

178
00:15:41,000 --> 00:15:47,610
and things like that they were very
common and interesting enough actually a

179
00:15:47,610 --> 00:15:53,470
paci Adobe Microsoft were the most
common systems and services that pod

180
00:15:53,470 --> 00:15:58,780
with high-stress density now I suppose I
would hate you know it's not as well

181
00:15:58,780 --> 00:16:02,670
though how to draw a conclusion that
it's down to problems in those specific

182
00:16:02,670 --> 00:16:07,060
problem technology Saturday me think
about it it's a popularity thing as well

183
00:16:07,060 --> 00:16:10,790
you know most of the systems that we
would find what would have water

184
00:16:11,449 --> 00:16:17,099
combination products that they have the
range is so broad as well as opposed to

185
00:16:17,100 --> 00:16:21,619
more niche technologies so I wouldn't I
would hate to say you know it's

186
00:16:21,619 --> 00:16:25,029
Microsoft products are you know you draw
a conclusion there that they're not

187
00:16:25,029 --> 00:16:34,519
secure in some way my favorite start
time to remediation so this was this was

188
00:16:34,519 --> 00:16:40,379
down 24 critical high risk issues and it
was well we'll take it on and turn their

189
00:16:40,379 --> 00:16:44,499
component security component management
was pretty much one of the main things

190
00:16:44,499 --> 00:16:50,819
seems to be nearly forgotten now what
we're saying here is we've got green as

191
00:16:50,819 --> 00:16:56,259
best-case average now and then the Blues
worst-case average so for component

192
00:16:56,259 --> 00:17:00,339
security and you know what we what are
we supposed security all the frameworks

193
00:17:00,339 --> 00:17:01,100
that we use

194
00:17:01,100 --> 00:17:07,279
you know dotnet NBC then strut spring
all those different types of frameworks

195
00:17:07,279 --> 00:17:13,579
hibernate all the things we're saying is
it that you know the the best case it

196
00:17:13,579 --> 00:17:17,658
might take a month to two parties issue
there is an issue where the case was

197
00:17:17,659 --> 00:17:22,470
closed to new year and this is for a
critical such high risk issue that's

198
00:17:22,470 --> 00:17:27,010
been reported for that particular
framework so your your your your window

199
00:17:27,010 --> 00:17:34,340
for attack there is huge now we will go
into component security a little bit

200
00:17:36,200 --> 00:17:46,860
little bit but it was his issues there
when you think about it so developer

201
00:17:46,860 --> 00:17:51,019
code this is the stuff that your dads
are in charge of that your dads right

202
00:17:52,299 --> 00:17:56,639
best-case 22 again average them some
people were on top of stuff has been

203
00:17:56,639 --> 00:18:03,178
fixed with a day or two worst case a
little bit longer for developers it did

204
00:18:03,179 --> 00:18:10,380
seem to make sense as well if you think
about a logically or older web web

205
00:18:10,380 --> 00:18:13,990
deployment see older code legacy code
obviously that took longer because you

206
00:18:13,990 --> 00:18:18,190
know the people who remembered you know
what was there they might have to bring

207
00:18:18,190 --> 00:18:24,679
in third parties but as opposed to you
know your products and your your system

208
00:18:24,679 --> 00:18:31,700
that they're working on and then OS host
partying there at the bottom it's it

209
00:18:31,700 --> 00:18:36,510
interesting though I suppose I will
always think of watching I would group

210
00:18:36,510 --> 00:18:41,470
with the components other things as well
personally a lot of organizations to

211
00:18:41,470 --> 00:18:46,100
think about their past management
policies you know everyone's used to it

212
00:18:46,100 --> 00:18:49,049
passed Tuesday you gotta run your
party's you are you know you gotta party

213
00:18:49,049 --> 00:18:52,649
OSU servers all those stuff you're used
to it there's organizations have

214
00:18:52,649 --> 00:18:57,820
policies in place there for that
component side of things is where people

215
00:18:57,820 --> 00:19:02,539
tend to sort of either forget or there
is just extra difficulty there in doing

216
00:19:02,539 --> 00:19:07,850
it and I suppose the problem with a lot
of the components stuff is that often

217
00:19:07,850 --> 00:19:10,010
the newer versions are released

218
00:19:10,010 --> 00:19:13,230
they're not compatible with the Cody
written for them so view of the smoke

219
00:19:13,230 --> 00:19:17,539
shop that uses particulars starts
framework and need you change your store

220
00:19:17,539 --> 00:19:21,480
framework your code doesn't work anymore
so I mean that's the biggest biggest

221
00:19:21,480 --> 00:19:31,549
barrier supposed to 222 addressing the
topic there quickly just on SSL we found

222
00:19:31,549 --> 00:19:35,789
that two out of every three service that
hard at the Hadassah cell service

223
00:19:35,789 --> 00:19:37,710
running on it

224
00:19:37,710 --> 00:19:42,690
high / medium risk issues and again
that's also pretty significant i mean

225
00:19:42,690 --> 00:19:49,279
you're talking I think it was 61.4% of
your your service your service the

226
00:19:49,279 --> 00:19:53,149
handle transactions e-commerce all that
kind of stuff they're vulnerable to

227
00:19:53,149 --> 00:19:57,799
attackers trying to attack the private
communications between the web server on

228
00:19:57,799 --> 00:20:03,100
your users browsers due to whatever
issues miss configurations or weak

229
00:20:03,100 --> 00:20:08,719
ciphers or just general issues there so
that's pretty significant also we found

230
00:20:08,720 --> 00:20:15,270
last year for the 2015 period 25%
servers with a cell service without a

231
00:20:15,270 --> 00:20:19,940
cell service on it we're vulnerable to
pool so that was another big win their

232
00:20:19,940 --> 00:20:25,649
last year as well I think the the reason
that the starts are are so high the fact

233
00:20:25,649 --> 00:20:28,939
that I sell is deprecated than last year
as well so I didn't help other people

234
00:20:28,940 --> 00:20:32,490
sort of the fear 222 just shut it off
and moved to tell us

235
00:20:36,620 --> 00:20:41,229
so we're just getting too few hearts
were you thinking about where we're

236
00:20:41,230 --> 00:20:42,800
looking at all these numbers

237
00:20:42,800 --> 00:20:46,740
hated to be security holders is an
interesting one so what do we mean by

238
00:20:46,740 --> 00:20:51,780
that we mean the likes of these
different types of headers we only found

239
00:20:51,780 --> 00:20:57,770
1.73 your assets actually used an
adequate ACB security header so that

240
00:20:57,770 --> 00:21:01,540
doesn't really seem to be widespread
adoption now and then we looked at the

241
00:21:01,540 --> 00:21:05,070
flip side of that and we we looked at
the summit of all abilities that were

242
00:21:05,070 --> 00:21:10,120
there and had some or more of these
headers been in place we figured out

243
00:21:10,120 --> 00:21:14,639
that 15% of the would have had either
risk mitigation or risk reduction how

244
00:21:14,640 --> 00:21:19,300
they had these headers in place so that
was kind of an interesting what some of

245
00:21:19,300 --> 00:21:23,090
these things are relatively easy to
implement you throw them in there said a

246
00:21:23,090 --> 00:21:27,649
few parameters and should be good that
should work fairly well so I like on

247
00:21:27,650 --> 00:21:31,250
security policy maybe not so much you
actually bit of work to do in your code

248
00:21:31,250 --> 00:21:35,660
X trademarks and things like that and
strict transport security where we're

249
00:21:35,660 --> 00:21:40,309
sort of easy wins quick wins but again
we didn't really see widespread adoption

250
00:21:40,309 --> 00:21:46,750
of them and I'm not sure if that means
that you know this is something that is

251
00:21:46,750 --> 00:21:50,640
just got a third fizzle out or a
pay-per-article start adopting them you

252
00:21:50,640 --> 00:21:54,460
know the the big guys now Google
Facebook all those guys they have a lot

253
00:21:54,460 --> 00:21:58,860
of these headers all their three news in
the for a while now and maybe just sort

254
00:21:58,860 --> 00:22:02,370
of people are going to eventually follow
suit

255
00:22:08,330 --> 00:22:14,340
so you thought on component security so
you know who wrote the code your

256
00:22:14,340 --> 00:22:17,649
developer you know you've got a really
cool developer see really happy with

257
00:22:17,649 --> 00:22:20,649
that and if you think about it who wrote
the code

258
00:22:20,649 --> 00:22:24,719
developers use other people's code part
of the heart of the frameworks or

259
00:22:24,720 --> 00:22:30,039
whatever other guy wrote . you don't
know who that guy is hot guys use code

260
00:22:30,039 --> 00:22:33,419
by somebody else so you know we're kind
of like losing it down and then before

261
00:22:33,419 --> 00:22:37,299
you know it you know you've got piece of
your enterprise code in there thats been

262
00:22:37,299 --> 00:22:42,889
written by while Ralph Wiggum so you
know looking at that a little bit back

263
00:22:42,889 --> 00:22:47,289
as well you know that the software food
chain know you've got your code and then

264
00:22:47,289 --> 00:22:51,649
use piece of commercial off-the-shelf
software you bought it in and then you

265
00:22:51,649 --> 00:22:55,699
know you outsource that bit you some
third-party API's and then some

266
00:22:55,700 --> 00:23:00,159
subcontractors somewhere is written and
then he's Palazzo from the ghetto but it

267
00:23:00,159 --> 00:23:05,260
worked well and you really it's amazing
when you think about all the different

268
00:23:05,260 --> 00:23:09,690
places where your code comes from and it
slows down you know we can have this

269
00:23:09,690 --> 00:23:14,370
reflect degree of trust you know we
trust our developers we trust the guys

270
00:23:14,370 --> 00:23:17,809
we train them we know what their coding
stuff they follow the standards and we

271
00:23:17,809 --> 00:23:21,330
review their code when it comes down to
all these are the bits that were were

272
00:23:21,330 --> 00:23:27,439
using as part of a lot less so the
dreary of trust sort of tends to

273
00:23:27,440 --> 00:23:35,210
diminish and then with a nice poses as a
ballpark but 90% of our application code

274
00:23:35,210 --> 00:23:39,260
is actually framework code and the other
code surrounding that our code uses the

275
00:23:39,260 --> 00:23:47,539
not actually written by our own
developers and that 63% start there was

276
00:23:47,539 --> 00:23:51,908
taken from the sauna type report
actually 2014 reported combined a

277
00:23:51,909 --> 00:23:56,630
similar one for 2015 but that was quite
interesting again we talk about

278
00:23:56,630 --> 00:23:59,630
frameworks we're talking about spring
jQuery and

279
00:24:00,419 --> 00:24:07,279
all those guys with component security
like it's kind of scary to think about

280
00:24:07,279 --> 00:24:14,109
it we we're on these these numbers just
as an example you know if you look at us

281
00:24:14,109 --> 00:24:18,049
known vulnerabilities that have been
reported in some of these things she

282
00:24:18,049 --> 00:24:24,739
struts 2 there there's a remote code
injection huge risk CVSS score of 10 and

283
00:24:24,739 --> 00:24:29,580
yet it's been downloaded nearly 200,000
times since that issues being reported

284
00:24:29,580 --> 00:24:35,299
now I don't know what percentage of them
end up being used in production code or

285
00:24:35,299 --> 00:24:41,059
whatever but I mean chances are it's
going to be running somewhere so kind of

286
00:24:41,059 --> 00:24:48,668
interesting watching a good hotel
management through the hole then think

287
00:24:48,669 --> 00:24:53,059
about it we will pull out the numbers
63% of issues that could have been

288
00:24:53,059 --> 00:24:58,999
mitigated had we had a proper proper
pots management which included

289
00:24:58,999 --> 00:25:04,989
components security Capodimonte combined
that's a huge number and you know those

290
00:25:04,989 --> 00:25:10,070
people understand the need for potting
you know it's really there was it about

291
00:25:10,070 --> 00:25:15,710
maybe being able to expand that out to
include all these these other bits of

292
00:25:15,710 --> 00:25:19,039
code that you really think about that
you had to pot but it's kind of funny

293
00:25:19,039 --> 00:25:22,720
because you know we we know we have to
potty we put everything let me put your

294
00:25:22,720 --> 00:25:28,399
OS firewalls firmware all that stuff we
kind of forget about lair 7 a bit you

295
00:25:28,399 --> 00:25:32,809
know the code under coach uses you know
this

296
00:25:33,489 --> 00:25:39,049
the dependency check project by Jeremy
long its cool if you haven't checked

297
00:25:39,049 --> 00:25:43,899
today should check the known
vulnerabilities across a wide range of

298
00:25:43,899 --> 00:25:50,498
different languages and technologies or
issues and then it'll let you know what

299
00:25:50,499 --> 00:25:55,619
what what library using are vulnerable
to watch that way then you can you can

300
00:25:55,619 --> 00:25:58,619
properly a player parties etc

301
00:26:00,220 --> 00:26:08,620
so what we did as well as part of the
the stock reports or or review we did

302
00:26:08,620 --> 00:26:14,178
notice that some of our customers
actually hired tended to do quite well

303
00:26:14,179 --> 00:26:19,080
and we were curious as to how they're
able to turn around fixes so quickly you

304
00:26:19,080 --> 00:26:23,120
know their their postures were grace you
know it and even sometimes we would find

305
00:26:23,120 --> 00:26:25,139
a lot of issues but they have them

306
00:26:25,140 --> 00:26:28,480
remediated quite quickly so we
approached some of them and then we just

307
00:26:28,480 --> 00:26:32,640
sort of under the tease out what
different types of practices they use

308
00:26:32,640 --> 00:26:37,070
throughout their SDLC operations just to
see if there's anything that we can

309
00:26:37,070 --> 00:26:42,510
maybe clean like okay will you guys are
doing this that sounds cool maybe other

310
00:26:42,510 --> 00:26:47,169
people doctors similar approach may be
that nearly every light up their game a

311
00:26:47,169 --> 00:26:56,340
little bit so whether the notion of
pushing left so I suppose just a quick

312
00:26:56,340 --> 00:27:04,129
demonstrate the concept I guess you know
the different coding methodologies you

313
00:27:04,130 --> 00:27:09,659
know for between Waterfall and Agile
waterfall you know we got our garments

314
00:27:09,659 --> 00:27:15,049
we got our attack specs all that stuff
Dylan the product is all developed at

315
00:27:15,049 --> 00:27:19,679
the at the end of it echoes of products
ready to go to that point if there's

316
00:27:19,679 --> 00:27:23,760
serious problems in it it's nearly too
late or its costs have a lot of movies

317
00:27:23,760 --> 00:27:27,900
go back and trying to rework whereas i
ja you know that the the mantra there is

318
00:27:27,900 --> 00:27:31,870
a fairly fairly often so we will keep
trying something you know it doesn't

319
00:27:31,870 --> 00:27:35,520
work breaks great if you're kinda like
spread betting so at least at the end

320
00:27:35,520 --> 00:27:38,820
there's a chance that the whole project
might be failure

321
00:27:43,490 --> 00:27:51,809
so some of the things then that our best
I called my best that our clients who

322
00:27:51,809 --> 00:27:55,809
seem to fare the best came to
remediating issues some of the practices

323
00:27:55,809 --> 00:27:56,780
that they were doing

324
00:27:56,780 --> 00:28:03,200
continuous testing and dust dust dynamic
security testing so you know running

325
00:28:03,200 --> 00:28:07,360
things like cops gone and all of
different types of tests scanning

326
00:28:07,360 --> 00:28:11,620
engines continue assessing there was
kind of a weird one because in a weird

327
00:28:11,620 --> 00:28:16,709
way there are customers so they use
continuous testing platform that's gone

328
00:28:16,710 --> 00:28:21,620
so they all do consider assessing but
looking at it erupts Rocklea a lot of

329
00:28:21,620 --> 00:28:26,919
these guys we found that our customers
were you know as part of their when

330
00:28:26,920 --> 00:28:30,190
there were pushing out new bills and
stuff like that they were running das

331
00:28:30,190 --> 00:28:36,110
tools even open source of birth which
you know you to pay for you can run a

332
00:28:36,110 --> 00:28:40,780
lot of these things and headless mode
and then you know your security team

333
00:28:40,780 --> 00:28:44,120
reviewing them and they were doing this
quite frequently throughout the build

334
00:28:44,120 --> 00:28:48,750
process as well so that seem to be
effective and then on the flip side

335
00:28:48,750 --> 00:28:52,300
we're looking at the dynamic side on the
static side then

336
00:28:52,900 --> 00:28:58,770
coupling selleck analysis tools into
their continuous integration process as

337
00:28:58,770 --> 00:29:02,210
well so every time the check engine code
every night or whatever when you build

338
00:29:02,210 --> 00:29:03,120
gets come up

339
00:29:03,120 --> 00:29:08,699
kicks off themselves tangen looks over
their code they find you on the reels

340
00:29:08,700 --> 00:29:14,100
and you know that's their cutting boards
way before they got to the point where

341
00:29:14,100 --> 00:29:16,480
you your closer to finished product

342
00:29:16,480 --> 00:29:21,980
threat modeling a lot of them seem to
utilize threat modeling which is grace

343
00:29:21,980 --> 00:29:29,220
we found though that I suppose to scale
very well however doing it at the stars

344
00:29:29,220 --> 00:29:37,440
of a project seem to be quite effective
dedicated security teams with probably

345
00:29:37,440 --> 00:29:42,260
not that much of a surprise yes they did
have dedicated team so the surprise a

346
00:29:42,260 --> 00:29:45,410
little bit was that they didn't
necessarily have a large security teams

347
00:29:45,410 --> 00:29:50,120
you know be great to throw all this
money and have large security teams

348
00:29:50,120 --> 00:29:54,550
fantastic actually some of the better
ones that we found we're actually quite

349
00:29:54,550 --> 00:29:59,389
small teams but just teams that seemed
to utilize automation very well and very

350
00:29:59,390 --> 00:30:04,850
effectively know the advantages of where
automation to be leveraged to you know

351
00:30:04,850 --> 00:30:10,379
to to to do what it does good out I
don't know where the human needs to be

352
00:30:10,380 --> 00:30:14,270
involved and that's where they'd spend
their personal time so I think that was

353
00:30:14,270 --> 00:30:24,310
cool that develops as those who wear in
the Davis world go into it very much but

354
00:30:24,310 --> 00:30:31,879
you know we're we're merging sort of the
application and hosts development and

355
00:30:31,880 --> 00:30:36,360
system administration and then we're
putting security 22 points in there too

356
00:30:36,360 --> 00:30:46,290
at that processes while the seem to be
quite effective and the last item there

357
00:30:46,290 --> 00:30:53,760
is basically Capodimonte Anastos coupled
with some kind of a continuous asset

358
00:30:53,760 --> 00:30:58,420
profiling I we're checking our
dependencies they're checking to see you

359
00:30:58,420 --> 00:31:03,690
know you know even on a regular basis

360
00:31:03,690 --> 00:31:09,679
issues are are raising their components
and then there you know I suppose that

361
00:31:09,679 --> 00:31:13,490
the problem with composer management
does tend to come down to the extra

362
00:31:13,490 --> 00:31:17,200
development time that's needed to be
involved to get your code working with

363
00:31:17,200 --> 00:31:28,509
the newer versions of the the frameworks
that whatever so as we're suppose with

364
00:31:28,509 --> 00:31:33,320
the pushing left mantra you know the
traditional attacker defender schedule

365
00:31:33,320 --> 00:31:40,158
you know used to be you know maybe you
do point in time for one year or few

366
00:31:40,159 --> 00:31:45,539
different things at certain times of the
year whereas trying to utilize all of

367
00:31:45,539 --> 00:31:51,590
these different types of change the way
you do things you you're you're open

368
00:31:51,590 --> 00:31:54,139
your game you're you're you're you're
getting in there you're finding things

369
00:31:54,139 --> 00:32:05,070
quicker quicker than used so to wrap up
then you know we see transport sector

370
00:32:05,070 --> 00:32:12,100
you know utilizing doesn't cost engine
into your build process just be quite

371
00:32:12,100 --> 00:32:16,789
effective definitely component security
and component management is is one of

372
00:32:16,789 --> 00:32:22,960
the big ones you know definitely been
overlooked for for various reasons maybe

373
00:32:22,960 --> 00:32:26,759
something that you know if if if you've
done in your organization something it

374
00:32:26,759 --> 00:32:30,230
may be a need to bring into your pocket
management policy Europe US management

375
00:32:30,230 --> 00:32:37,090
process and again then you know . as
well as both just focusing on web after

376
00:32:37,090 --> 00:32:41,970
focusing on your iOS / Hausler you know
I suppose from an attacker's respective

377
00:32:41,970 --> 00:32:47,299
they don't care if they find a way to
your web or the underlying host the

378
00:32:47,299 --> 00:32:55,490
breaches the breach so putting the two
together ok that's pretty much it

379
00:32:56,770 --> 00:33:06,180
you can download the start of what if
you if you want it it's not a huge read

380
00:33:06,180 --> 00:33:11,490
so it's it's quite we try to make a
white lace therefore it so yes some

381
00:33:11,490 --> 00:33:19,670
questions see one already there is that
should be ok thank you can you speak to

382
00:33:19,670 --> 00:33:24,460
a couple of things I don't know if I
missed part of this but the holistic

383
00:33:24,460 --> 00:33:30,240
approach you you seem to touch upon a
bit but a holistic approach of like

384
00:33:30,240 --> 00:33:35,680
let's say I T hygiene your that term
would encompass asset management

385
00:33:35,680 --> 00:33:40,640
configuration management and
vulnerability management and also talked

386
00:33:40,640 --> 00:33:46,360
to the drivers for this is what I'm
seeing in very large enterprises the

387
00:33:46,360 --> 00:33:54,070
complexity makes it very painful almost
seemingly impossible to meet some of the

388
00:33:54,070 --> 00:34:00,350
cev requirements remediation radicals on
high assets for instance might be five

389
00:34:00,350 --> 00:34:02,919
days that's not gonna happen

390
00:34:02,920 --> 00:34:07,500
30 days and then you also have a driver
right now and all the people here are

391
00:34:07,500 --> 00:34:12,630
familiar with this is the Federal Trade
Commission this past year through the

392
00:34:12,630 --> 00:34:18,990
Wyndham data breach came out with a
ruling where they were able to find and

393
00:34:18,989 --> 00:34:25,239
penalize a private organization that
wasn't beholden to PCI HIPAA but just

394
00:34:25,239 --> 00:34:28,979
because they weren't diligently taking
care of preventing a data breach for

395
00:34:28,980 --> 00:34:30,469
customers

396
00:34:30,469 --> 00:34:37,459
win them had many millions of dollars
punitive lead to satisfy that that

397
00:34:37,460 --> 00:34:44,010
ruling and the bar has been raised
before you step 18 months from the time

398
00:34:44,010 --> 00:34:47,110
of discovery to demonstrate do care

399
00:34:47,679 --> 00:34:53,250
six months due diligence another six
months and then once you hit the 18th

400
00:34:53,250 --> 00:34:58,990
month then you're into gross negligence
of fuel remediate it's now seen by legal

401
00:34:58,990 --> 00:35:04,529
experts is six months before he becomes
grossly negligent don't know whether or

402
00:35:04,530 --> 00:35:05,510
not you can speak then

403
00:35:05,510 --> 00:35:12,880
those things I know it's a broad base of
topics yeah I suppose it is interesting

404
00:35:12,880 --> 00:35:17,310
that you say you know it's hard to get a
handle on addressing all the different

405
00:35:17,310 --> 00:35:23,590
TVs are coming out you know me but I
suppose you know a lot of it comes down

406
00:35:23,590 --> 00:35:30,950
to categorizing your your your your your
business assets effectively you know

407
00:35:30,950 --> 00:35:37,319
just because you have particular CVE a
critical one reported for you know your

408
00:35:37,320 --> 00:35:41,760
your enterprise ecommerce op versus an
OP that you sort of have some general

409
00:35:41,760 --> 00:35:46,610
information on doesn't mean you need to
fix them both at the same time so as

410
00:35:46,610 --> 00:35:52,210
well as having some kind of process
there that you know you you've you've

411
00:35:52,210 --> 00:35:57,560
read all your apps to certain way and
maybe try to focus on on the issues that

412
00:35:57,560 --> 00:36:03,290
are you know folks on the on the on the
assets that are more critical to your

413
00:36:03,290 --> 00:36:04,460
business first

414
00:36:04,460 --> 00:36:08,790
filtering down that way I I dunno if
there was a lot of stuff in their

415
00:36:08,790 --> 00:36:12,340
specific question or just a general
thought

416
00:36:36,290 --> 00:36:59,930
well you know i i dont really yeah
alright

417
00:37:05,300 --> 00:37:16,260
yes it can be a range of last different
things to think about all the different

418
00:37:16,260 --> 00:37:22,450
crypto problems over the last two years
in particular things like poodle is big

419
00:37:22,450 --> 00:37:27,930
12 can be arranged I can be seen in this
configuration still feel like you know

420
00:37:27,930 --> 00:37:33,500
ciphers with with with with wikis and
stuff like that all the way up to then

421
00:37:33,500 --> 00:37:38,230
it was you think the web player issues
related to you know cokie session

422
00:37:38,230 --> 00:37:43,480
management that kind of stuff you know
you missing security headers security

423
00:37:43,480 --> 00:37:46,110
secure flag and things like that

424
00:37:46,110 --> 00:37:51,130
a range of different things and as well
as you know known vulnerabilities in

425
00:37:51,130 --> 00:37:53,910
OpenSSL that kind of stuff as well

426
00:37:53,910 --> 00:38:06,980
the actual vulnerability wise or it is a
really big area and no

427
00:38:11,830 --> 00:38:23,090
I'm not sure of this I suppose the what
the percentages are to them off the top

428
00:38:23,090 --> 00:38:26,400
of my head but I suppose yeah i mean
you're you're talking about every aspect

429
00:38:26,400 --> 00:38:30,690
of it so yeah I mean there are there are
a lot of different aspects are Verona

430
00:38:30,690 --> 00:38:35,460
cell and that's probably why it's so big
as well you know

431
00:38:35,960 --> 00:38:47,650
alright thank you very much

