1
00:00:18,460 --> 00:00:28,480
ok so we're gonna do this tag teaming
and yesterday you saw a lot of nonsense

2
00:00:28,480 --> 00:00:34,579
about me if you came to my talk I been
around for a while and you know you have

3
00:00:34,579 --> 00:00:38,040
to figure out when I show you the money
in this in this talk whether it was

4
00:00:38,040 --> 00:00:44,500
worth your while I am the lead for STL
architecture at Intel security which is

5
00:00:44,500 --> 00:00:50,010
a BU at Intel and got seventy architects
that I work with security architects

6
00:00:50,010 --> 00:00:56,410
that is and I know down from a lot of
things but basically we're both on that

7
00:00:56,410 --> 00:01:03,739
I Tripoli's senator security zone they
could get it so my doctor so I worked

8
00:01:03,739 --> 00:01:07,820
for digital I run the architecture
analysis practice there which pretty

9
00:01:07,820 --> 00:01:14,110
much means I spend all of my almost all
my time helping companies find flaws in

10
00:01:14,110 --> 00:01:17,880
the designs of systems so we have groups
that do things like education testing

11
00:01:17,880 --> 00:01:21,089
your groups that do code review and we
have a group that does architecture

12
00:01:21,090 --> 00:01:24,740
analysis and groups to do all kinds of
things so for those that came earlier

13
00:01:24,740 --> 00:01:27,658
this week you know there's all different
activities for softer security

14
00:01:27,659 --> 00:01:31,009
initiatives threat modeling and
architecture analysis is one of those

15
00:01:31,009 --> 00:01:36,659
activities so what what this talk is
going to cover is 63 just call them six

16
00:01:36,659 --> 00:01:41,210
minutes we were with lots of different
organizations we work with you know lots

17
00:01:41,210 --> 00:01:45,649
of different folks in different
capacities sometimes we hear these are

18
00:01:45,649 --> 00:01:50,079
no excuse whatever you wanna call it as
to why threat modeling can be done so we

19
00:01:50,079 --> 00:01:54,189
wanted to talk about six common myths
about threat modeling and as Brooks said

20
00:01:54,189 --> 00:01:59,179
we do work with the actual police and
prosecutors on just a quick little plug

21
00:01:59,180 --> 00:02:04,409
for that if you're interested in helping
with that group it's actually it's you

22
00:02:04,409 --> 00:02:08,109
know it's open to the public anybody can
join do a search for center for scholars

23
00:02:08,109 --> 00:02:11,880
I'm with a triple hit their site its I
think they've gotten better about how

24
00:02:11,880 --> 00:02:14,600
you can actually volunteer for it used
to be a little squirrely to try to

25
00:02:14,600 --> 00:02:17,680
figure out how you volunteer but send an
email to one of their

26
00:02:17,680 --> 00:02:21,290
email addresses you can get involved if
you want what the Center for secure

27
00:02:21,290 --> 00:02:25,709
design is focusing on by its name is
secure design things they are only

28
00:02:25,709 --> 00:02:31,040
looking at focusing on design software
and all kinds of aspects so if you're

29
00:02:31,040 --> 00:02:37,739
interested so it really number these but
the first myth that we come across is we

30
00:02:37,739 --> 00:02:43,329
already do Penn tests with tools and
with people we are totally covered you

31
00:02:43,329 --> 00:02:47,269
don't need to do anything else I can say
this after every one of these myths

32
00:02:47,269 --> 00:02:51,939
that's total nonsense but will not
actually say that so just a couple

33
00:02:51,939 --> 00:02:55,319
things to think about if you are doing
if you want to those folks that say

34
00:02:55,319 --> 00:02:59,858
we're doing pen testing recovered were
good so did you actually pen test the

35
00:02:59,859 --> 00:03:03,950
entire system or application was really
the whole thing that got been tested we

36
00:03:03,950 --> 00:03:08,578
see how companies get bitten in real
life where parts of the upper parts of

37
00:03:08,579 --> 00:03:12,819
the system maybe got tested but not the
entire thing there's there's a lot to a

38
00:03:12,819 --> 00:03:17,768
complex system how much of it really got
10 tested if you're going to invest

39
00:03:17,769 --> 00:03:21,859
based on some data I've been hearing
this week it sounds like a week or three

40
00:03:21,859 --> 00:03:26,079
his action may be a pretty large number
even if you're spending a week or two or

41
00:03:26,079 --> 00:03:29,889
three pen testing a large system and
realistically do you think you're

42
00:03:29,889 --> 00:03:35,239
finding all the defects that exists with
that pen test highly unlikely after

43
00:03:35,239 --> 00:03:40,639
using a tool or person can you find
every defect with a pen test can almost

44
00:03:40,639 --> 00:03:44,370
every one of these answers should be no
in your head that's not possible to do

45
00:03:44,370 --> 00:03:49,720
that when you're doing a release are
free chapter you always been testing the

46
00:03:49,720 --> 00:03:55,699
entire system again part of it for the
whole thing it just kind of depends so

47
00:03:55,699 --> 00:04:00,269
maybe you're one of those more advanced
folks for a more advanced groups we are

48
00:04:00,269 --> 00:04:04,489
also doing code reviews we don't just
doing Penn tests were also doing cody's

49
00:04:04,489 --> 00:04:08,699
that is great news that is a no direct
nuts another capability in a softer

50
00:04:08,699 --> 00:04:12,849
security initiatives gonna find
different things that's really good so

51
00:04:12,849 --> 00:04:16,959
you're doing code reviews too so let's
look at the previous line and see how

52
00:04:16,959 --> 00:04:21,168
this now plays out with code of you
while did you code review the whole

53
00:04:21,168 --> 00:04:24,780
system you can take every one of these
questions and go through the exact same

54
00:04:24,780 --> 00:04:27,900
cycle I mean did you code of you the
whole system did you find every defect

55
00:04:27,900 --> 00:04:28,810
with a code

56
00:04:28,810 --> 00:04:32,919
who is the person gonna be able to find
it and no no no no no

57
00:04:32,919 --> 00:04:37,919
almost always know so every time there's
a change are you doing a code review of

58
00:04:37,919 --> 00:04:41,200
just what changed you actually know how
that change impacts something else

59
00:04:41,200 --> 00:04:44,630
probably the answer is No

60
00:04:44,630 --> 00:04:50,169
so we think about 10 testing and code
review their findings specific types of

61
00:04:50,169 --> 00:04:54,539
defects totally necessary to do you
don't get a you don't get a pass on that

62
00:04:54,540 --> 00:05:01,750
you do need to do that was activities
but I would be I feel pretty confident

63
00:05:01,750 --> 00:05:05,090
when I say 10 testing code of you was
not gonna find the floor that allows

64
00:05:05,090 --> 00:05:08,979
your HVAC vendor to access your data
center it's not gonna be found to

65
00:05:08,979 --> 00:05:13,330
repentance encoded you most likely I
would feel pretty comfortable saying

66
00:05:13,330 --> 00:05:17,349
it's not gonna find this law where you
use the confidentiality controller and

67
00:05:17,350 --> 00:05:20,460
integrity control is supposed to be
there if you're looking at gibberish

68
00:05:20,460 --> 00:05:23,930
data from Penn test point of view I have
no idea what it's really supposed to de

69
00:05:23,930 --> 00:05:29,510
you can't tell encrypted data from Matt
data you don't know what the data is you

70
00:05:29,510 --> 00:05:34,270
just know it's garbage but if I know I
need to prevent tampering encryptions on

71
00:05:34,270 --> 00:05:37,299
the answer right back of some sort

72
00:05:37,300 --> 00:05:41,090
dentist encourage use not gonna find
that missing audit control that's

73
00:05:41,090 --> 00:05:44,950
keeping track of people accessing
critical systems it's not gonna find it

74
00:05:44,950 --> 00:05:48,860
you have to be doing something else so
the fact that you're doing a pen test

75
00:05:48,860 --> 00:05:53,060
affect your door code of you great news
about eighteen other things you have to

76
00:05:53,060 --> 00:05:57,450
do this is one of them you need to drive
model or something that looks at the

77
00:05:57,450 --> 00:06:03,680
Securities I so that the myth that I'm
doing this one thing and I'm good no no

78
00:06:03,680 --> 00:06:10,700
not true you have to do others gotta do
this type of stuff just to add and that

79
00:06:10,700 --> 00:06:18,479
is 10 tests at the state of the art
today is a very unique combination of

80
00:06:18,479 --> 00:06:26,849
tool and tester no to pin tests are
equivalent so that's kind of you have to

81
00:06:26,850 --> 00:06:31,560
sort of put that in your head and think
wow its threat modeling the same but

82
00:06:31,560 --> 00:06:36,410
you're getting one or two testers and
you're getting their unique combination

83
00:06:36,410 --> 00:06:38,129
and so you

84
00:06:38,129 --> 00:06:43,319
easy to have to paint tester not
comparable so it's a point in time and

85
00:06:43,319 --> 00:06:48,860
it's a useful test don't get me wrong
but the problem is you can't be used all

86
00:06:48,860 --> 00:06:55,689
alone because it's so unique that's 12
it's awfully late in order to Pinterest

87
00:06:55,689 --> 00:06:59,779
you have to have the complete system and
if you can drive and will talk about

88
00:06:59,779 --> 00:07:06,050
this myth in a moment but if you can
drive something else around design much

89
00:07:06,050 --> 00:07:09,429
earlier its way better cause he might
actually catch stuff when you can do

90
00:07:09,429 --> 00:07:16,869
something about it totally agree okay so
then we come to i dont wanna threat

91
00:07:16,869 --> 00:07:20,639
model my systems built its already
deployed you know what am I gonna learn

92
00:07:20,639 --> 00:07:24,909
here is this useful now that was a
design thing and we missed it so we're

93
00:07:24,909 --> 00:07:30,699
good besides weekend as the code of the
next slide so do you like living in the

94
00:07:30,699 --> 00:07:32,729
dark

95
00:07:32,729 --> 00:07:38,719
security people and do due diligence
right even yeah I always consider my job

96
00:07:38,719 --> 00:07:44,579
being someone who has to raise risk if I
can solve the risk and mitigate it great

97
00:07:44,579 --> 00:07:50,009
but if I can not at least people ought
to know what they've deployed so that's

98
00:07:50,009 --> 00:07:56,059
like the first thing you won't know and
your attackers will know because they'll

99
00:07:56,059 --> 00:08:01,039
be probing your system and finding out
all of its weaknesses for you and then

100
00:08:01,039 --> 00:08:10,009
it will be late the next slide but more
than that you want a system to be your

101
00:08:10,009 --> 00:08:15,019
threat model to be holistic now there is
one thing about this that I will note if

102
00:08:15,019 --> 00:08:18,809
you're doing very standard applications
and they're going right down the

103
00:08:18,809 --> 00:08:22,899
standard track and you've already gotten
that together and you really do

104
00:08:22,899 --> 00:08:27,909
understand your infrastructure and how
it works you can avoid not every

105
00:08:27,909 --> 00:08:32,409
application in every context needs
threat modeling so with that place that

106
00:08:32,409 --> 00:08:36,838
to the side and then consider the
situation where you don't have that then

107
00:08:36,839 --> 00:08:41,050
you're sitting in a situation where you
don't have a whole picture and threat

108
00:08:41,049 --> 00:08:42,120
models work better

109
00:08:42,120 --> 00:08:46,699
holistically you know sort of like
getting here you sit in the full lotus

110
00:08:46,699 --> 00:08:49,120
position and you consider everything

111
00:08:49,120 --> 00:08:56,170
next slide please and if you understand
even if you have to deploy a bunch of

112
00:08:56,170 --> 00:09:02,260
stuff that's ugly and scary at least you
can plan to the future and you can also

113
00:09:02,260 --> 00:09:08,160
monitor that which is present better so
you can react better knowing what your

114
00:09:08,160 --> 00:09:13,910
limitations are and what the problems
are just saying I don't know I have no

115
00:09:13,910 --> 00:09:18,319
idea what it is you can react and and
monitor and be on top of what your

116
00:09:18,320 --> 00:09:23,339
limitations are and be there rather than
just kind of guessing you're doing what

117
00:09:23,339 --> 00:09:27,770
the industry does really stuff is very
situational and so you want to be very

118
00:09:27,770 --> 00:09:34,069
specific if you can be and so also you
can drive to the desired security

119
00:09:34,070 --> 00:09:37,070
posture over time if you know what's the
problem is today

120
00:09:37,630 --> 00:09:40,689
think I have one more slide maybe

121
00:09:40,690 --> 00:09:46,560
so this is sort of recommendations in
this situation you can use exceptions

122
00:09:46,560 --> 00:09:48,589
and risks assumptions

123
00:09:48,590 --> 00:09:52,790
kind of you know bridge the gap as it
were you not really doing anything but

124
00:09:52,790 --> 00:09:56,699
at least you're making the people who
are responsible for having not modeled

125
00:09:56,700 --> 00:10:01,710
aware of that and guaranteeing action in
the future which is better than nothing

126
00:10:01,710 --> 00:10:06,820
but also when you get a whole lot of
exceptions you can say look that bu they

127
00:10:06,820 --> 00:10:10,630
just have tons of exceptions what's
wrong with those folks you know and you

128
00:10:10,630 --> 00:10:14,140
can go to their management you can go to
your management can get everybody

129
00:10:14,140 --> 00:10:18,600
starting to talk at the more senior
level and get them to you know start

130
00:10:18,600 --> 00:10:24,010
problem-solving around that and you know
I'll just quote Brad Arkin never waste a

131
00:10:24,010 --> 00:10:27,730
crisis in this case I would say never
waste an exception because thats

132
00:10:27,730 --> 00:10:32,650
leverage and just to add on to that
again with this whole idea that the

133
00:10:32,650 --> 00:10:34,620
systems already built it's too late

134
00:10:34,620 --> 00:10:39,990
clearly there is a huge advantage to do
this activity at the beginning of the

135
00:10:39,990 --> 00:10:44,850
creation of some software but the thing
to remember is if you haven't done this

136
00:10:44,850 --> 00:10:48,980
type of activity it doesn't matter when
you do it it's going to find things that

137
00:10:48,980 --> 00:10:53,450
cannot be found any other way there is
never too late if you've got stuff

138
00:10:53,450 --> 00:10:58,260
deployed but you didn't do this type of
analysis the flaws are there if they

139
00:10:58,260 --> 00:11:01,640
didn't magically disappear because you
didn't you know under the covers and see

140
00:11:01,640 --> 00:11:05,040
what's going wrong that they're so he
should be under the covers and see

141
00:11:05,040 --> 00:11:08,880
what's wrong so that you can get nothing
else and again when I'm sure there are

142
00:11:08,880 --> 00:11:12,130
saying that you should go fix maybe some
of the things you find but at least

143
00:11:12,130 --> 00:11:16,450
you'll stop doing the bad behavior right
if you if you look for these flaws even

144
00:11:16,450 --> 00:11:19,670
at systems that are deployed and you see
that you did something that maybe wasn't

145
00:11:19,670 --> 00:11:23,199
as good as it could be or we now know
something and we want to do something

146
00:11:23,200 --> 00:11:27,060
better you can take that information and
at least take the next system that

147
00:11:27,060 --> 00:11:29,880
you're gonna build the next at that
you're gonna build and take those better

148
00:11:29,880 --> 00:11:34,820
you know those those those better ways
of doing things into the next versions

149
00:11:34,820 --> 00:11:39,200
of software so whether you choose to fix
things are not okay that's a business

150
00:11:39,200 --> 00:11:44,930
choice but not knowing that there there
that's that's kind of a bad kind of a

151
00:11:44,930 --> 00:11:45,849
bad idea

152
00:11:45,850 --> 00:11:49,770
there there someone's going to find them
yes and probably someone you don't want

153
00:11:49,770 --> 00:11:51,990
this question there

154
00:11:51,990 --> 00:12:00,149
when you have enough market is you don't
mind if I take that when you have enough

155
00:12:00,149 --> 00:12:09,510
architecture to understand the flows and
the major building blocks and and it's

156
00:12:09,510 --> 00:12:14,000
not so sad that you can't change it so
that it's a delicate balance but I would

157
00:12:14,000 --> 00:12:18,240
also say a threat model is a living
document when you change the

158
00:12:18,240 --> 00:12:23,520
architecture even some design choices
will change the threat model and so it's

159
00:12:23,520 --> 00:12:27,939
not something you do once ideally it's
something you revisit and work with

160
00:12:27,940 --> 00:12:33,060
teams and if you're in an agile
environment it is critical that people

161
00:12:33,060 --> 00:12:37,729
revisit the threat model because stuff
changes in and child of our environment

162
00:12:37,730 --> 00:12:41,170
you want to learn from your coding you
want to learn from the design and say I

163
00:12:41,170 --> 00:12:44,979
that's crappy design lets go down
different paths what happens is security

164
00:12:44,980 --> 00:12:47,160
people sending think I've got your
requirements

165
00:12:47,160 --> 00:12:51,660
don't you dare touch them but thats
antithetical to what can happen in a

166
00:12:51,660 --> 00:12:57,060
child's environment where your security
might get better too so let it breathe

167
00:12:57,060 --> 00:12:58,029
let it

168
00:12:58,029 --> 00:13:02,790
revisited keep revisiting it the problem
there becomes when is it done and that's

169
00:13:02,790 --> 00:13:06,390
a tricky question let's not take it up
unless you wanna get it we'll get to

170
00:13:06,390 --> 00:13:11,250
that in a sec but yes far left and the
SDLC has normal certainly when you are

171
00:13:11,250 --> 00:13:15,110
you gonna go through the normal design
process so when you're having that part

172
00:13:15,110 --> 00:13:19,230
of the conversation that's when you want
to be thinking about who's going to try

173
00:13:19,230 --> 00:13:22,000
to break into the system and if you got
security requirements great those are

174
00:13:22,000 --> 00:13:25,959
gonna work into the thinking you can
think about misuse and abuse cases

175
00:13:25,959 --> 00:13:29,149
there's gonna work into your thinking
because if you can do it at the

176
00:13:29,149 --> 00:13:32,380
beginning you may actually have to
change the design you may have to change

177
00:13:32,380 --> 00:13:35,959
requirements there maybe requirements
that are being laid down by the business

178
00:13:35,959 --> 00:13:40,430
that are impossible to do securely that
they just don't recognize so if you go

179
00:13:40,430 --> 00:13:43,189
to them with a business case and say hey
I know you wanted this requirement but

180
00:13:43,190 --> 00:13:47,170
oh by the way you're going to create
this vulnerable situation that there

181
00:13:47,170 --> 00:13:50,380
isn't really a good solution for maybe
they'll change their thinking maybe

182
00:13:50,380 --> 00:13:53,790
they'll change their requirements may be
though not you know put all of this

183
00:13:53,790 --> 00:13:57,110
sensitive data on a device that cannot
be protected you mean that that

184
00:13:57,110 --> 00:14:00,750
requirement that says system will be
secure and then the other requirement

185
00:14:00,750 --> 00:14:03,750
this is system will be easy to use your
writing

186
00:14:04,279 --> 00:14:07,839
seen those multiple times in my career
both of those citing security

187
00:14:07,839 --> 00:14:10,189
requirements to itself

188
00:14:10,189 --> 00:14:17,360
telling me to secure the database
doesn't really help me so whatever so

189
00:14:17,360 --> 00:14:21,300
another myth he is regarded the threat
model when it was built right we

190
00:14:21,300 --> 00:14:25,459
followed we followed the advice we heard
at various talks and we built the system

191
00:14:25,459 --> 00:14:29,689
we did the threat model we don't ever
have to do this again again

192
00:14:30,449 --> 00:14:37,519
know there are lots of reasons that you
want to come back and revisit Brooke

193
00:14:37,519 --> 00:14:40,709
just kind of alluded to one example
where did something change in the system

194
00:14:40,709 --> 00:14:45,079
when something does change in the system
he may not have to revisit the entire

195
00:14:45,079 --> 00:14:49,180
threat model but what do you need to
revisit the parts of the system that are

196
00:14:49,180 --> 00:14:53,050
affected by the change so you need to
know about things like you know the

197
00:14:53,050 --> 00:14:55,959
attack surface where can somebody break
you know where somebody gonna try to

198
00:14:55,959 --> 00:14:59,189
attack the system but I create a new a
new entry point into place for somebody

199
00:14:59,189 --> 00:15:02,849
to attack the system is there something
now a value that wasn't there before

200
00:15:02,850 --> 00:15:06,999
that I know somebody is now in scented
to try to go get to are we going to use

201
00:15:06,999 --> 00:15:10,410
a control that has historically
difficult problem to actually do well

202
00:15:10,410 --> 00:15:14,389
but this is all the kinds of things that
we can take into our decision-making of

203
00:15:14,389 --> 00:15:18,959
do we need to do the threat model again
so you know features being added remove

204
00:15:18,959 --> 00:15:23,319
change of course as you ask yourself
that question may be the answer is yes

205
00:15:23,319 --> 00:15:29,610
maybe the answers now in either case it
doesn't matter if nothing has changed in

206
00:15:29,610 --> 00:15:32,930
your software that the universe is
changing all the time

207
00:15:32,930 --> 00:15:37,819
your software is built on top of other
software and lo and behold that software

208
00:15:37,819 --> 00:15:41,699
has problems with it and sometimes those
problems are severe enough that we have

209
00:15:41,699 --> 00:15:45,979
to put a compensating control and are
designed to deal with some other piece

210
00:15:45,980 --> 00:15:49,639
of broken software has anybody ever had
to do that there are some vulnerability

211
00:15:49,639 --> 00:15:55,230
found yet never never never never
happens it happens it absolutely happens

212
00:15:55,230 --> 00:16:00,540
so something breaks in either a
framework of course the GOS level so we

213
00:16:00,540 --> 00:16:04,498
talk about threat modeling I'm pretty
much an application-layer but obviously

214
00:16:04,499 --> 00:16:07,120
you can throw model all kinds of things
you can throw model the network you can

215
00:16:07,120 --> 00:16:11,279
threat model the building model all
kinds of things but even if you're only

216
00:16:11,279 --> 00:16:15,120
at application layer security it's the
kind of interesting to know if there's

217
00:16:15,120 --> 00:16:18,050
some sort of vulnerability in the
operating system that matters to how

218
00:16:18,050 --> 00:16:21,800
you're interacting with the OS generally
were higher than that but obviously

219
00:16:21,800 --> 00:16:25,770
things like frameworks totally and play
if there's a vulnerability and rails are

220
00:16:25,770 --> 00:16:30,120
you know JBoss wherever you happen to be
using all that matters if the

221
00:16:30,120 --> 00:16:35,070
vulnerability can be exploited from a
threat agent in Iraq there with the

222
00:16:35,070 --> 00:16:37,930
attack surface somehow all of you have
to be looking for these kinds of things

223
00:16:37,930 --> 00:16:41,770
so when we discover these new
vulnerabilities out in the world we have

224
00:16:41,770 --> 00:16:46,220
to at least be thinking does that change
my threat model so even if my stuff

225
00:16:46,220 --> 00:16:52,500
didn't change I still have to think
about this so that's one aspect but we

226
00:16:52,500 --> 00:16:56,150
also discover new types of attacks right
so when there's a new attack that's

227
00:16:56,150 --> 00:16:59,319
discovered and this is why if you look
at like you know software security

228
00:16:59,320 --> 00:17:02,190
initiative capabilities things like
threat intelligence is one of those

229
00:17:02,190 --> 00:17:07,850
things somebody somewhere is hopefully
keeping track of new ways of attacking

230
00:17:07,849 --> 00:17:12,839
systems when there's a new way to attack
some piece of software some way to break

231
00:17:12,839 --> 00:17:15,780
into something we gotta come back and
revisit the threat model does that

232
00:17:15,780 --> 00:17:17,439
matter what we're doing

233
00:17:17,439 --> 00:17:19,980
maybe the answer is No maybe the answer
just sticking your head in the sand

234
00:17:19,980 --> 00:17:22,980
isn't really a good solution

235
00:17:24,609 --> 00:17:33,580
ok is it to impossible that's a fair
question and you know I'll see what I

236
00:17:33,580 --> 00:17:38,169
can do here let's go on to the next
slide so first off start with something

237
00:17:38,170 --> 00:17:45,179
simple strides been out there for years
I think close to eight years something

238
00:17:45,179 --> 00:17:48,360
like that and that's you know a place to
start

239
00:17:49,050 --> 00:17:53,928
you can try at as in which is in my book
it's really simple to think about

240
00:17:53,929 --> 00:17:59,150
because I need something really simple
cuz i'm dumb and this is what those

241
00:17:59,150 --> 00:18:07,360
things mean tell them or you know stride
whatever just get started is maybe the

242
00:18:07,360 --> 00:18:13,350
the basic message going here and start
simple start easy so one of the big

243
00:18:13,350 --> 00:18:18,209
mistakes I see alot is people think ok
this is important so therefore we're

244
00:18:18,210 --> 00:18:21,210
gonna have to build two hundred and
fifty

245
00:18:21,710 --> 00:18:26,230
age architectural documents that then
sit on a shelf and nobody ever reads

246
00:18:26,230 --> 00:18:31,190
them don't do that really you'll find
out what you need

247
00:18:31,190 --> 00:18:34,740
once you get started it may be that you
just have drawings that show where the

248
00:18:34,740 --> 00:18:38,640
threat they attack services are and
lists of requirements and mitigations

249
00:18:38,640 --> 00:18:45,059
that's enough and it's really easy to do
when I'm really pushed and shoved I got

250
00:18:45,059 --> 00:18:51,539
15 threat models I have to complete a
week that's all I do is I list the

251
00:18:51,539 --> 00:18:55,570
requirements and all that mitigate
existing medications because the threat

252
00:18:55,570 --> 00:18:59,379
model can be inferred from that and you
know that the work is done that's all

253
00:18:59,380 --> 00:19:05,010
you need so start really simple stay
away from my personal styles from long

254
00:19:05,010 --> 00:19:09,320
lists that are going to be used that
nobody's ever gonna look at again in

255
00:19:09,320 --> 00:19:15,158
time you'll know what you need to know
if you if you have a very process that

256
00:19:15,159 --> 00:19:19,000
needs to be very assured because you
have regulations or whatever then you

257
00:19:19,000 --> 00:19:24,380
might need more documentation but you'll
figure that out and also say that

258
00:19:24,380 --> 00:19:29,510
creative people love puzzles when you
give a bunch of creative innovative

259
00:19:29,510 --> 00:19:33,408
people like software developers often
are not always but often dark and to

260
00:19:33,409 --> 00:19:36,640
give them a puzzle and you say hey
here's a puzzle let's figure this out

261
00:19:36,640 --> 00:19:39,640
you get a lot more engagement go the
next slide

262
00:19:42,220 --> 00:19:51,179
avoid falling into the classic engineers
trap of saying oh my god if I don't do

263
00:19:51,179 --> 00:19:54,490
this completely I haven't done it
therefore I shouldn't even get started

264
00:19:54,490 --> 00:20:03,260
remember one serious flaws just wait
Dell and his crew like the car call them

265
00:20:03,260 --> 00:20:08,220
but one serious miss in the architecture
they haven't mitigated attack surface

266
00:20:08,220 --> 00:20:13,270
that's unmitigated that has profound
effects if you get that out of there

267
00:20:13,270 --> 00:20:19,440
you're one step closer to better and so
you know if you catch one thing at first

268
00:20:19,440 --> 00:20:26,510
that's good and so you know avoid
falling in the trap that I shouldn't

269
00:20:26,510 --> 00:20:31,129
start this cause I can't get anything
done you will get something one of the

270
00:20:31,130 --> 00:20:31,960
things that

271
00:20:31,960 --> 00:20:36,120
this kind of an interesting story when I
first got to McAfee three and a half

272
00:20:36,120 --> 00:20:41,080
years ago I team said we're going to
we're we're training ourselves how to do

273
00:20:41,080 --> 00:20:45,250
threat modeling and so we want you to
review this rat model we did and while

274
00:20:45,250 --> 00:20:49,320
they had missed an important attack
surface so I did add value to that

275
00:20:49,320 --> 00:20:54,950
discussion they had gotten most of them
really really well and they I wanted to

276
00:20:54,950 --> 00:20:58,770
impress them with guys you should be
really proud of yourselves that you did

277
00:20:58,770 --> 00:21:03,970
this much great work rather than hanging
on the one miss that they've gotten it

278
00:21:03,970 --> 00:21:08,770
was an important miss but nevertheless
you know I've done well over a thousand

279
00:21:08,770 --> 00:21:13,470
threat models in my career so it's fast
for me you can't expect people when they

280
00:21:13,470 --> 00:21:19,090
first started doing that ok over time
you know your experience is going to

281
00:21:19,090 --> 00:21:22,649
increase and you get better results and
because these are living documents just

282
00:21:22,650 --> 00:21:28,270
let people keep revisiting them because
the next light thanks I can't deny that

283
00:21:28,270 --> 00:21:34,060
being a master threat modeler require
significant experience usually not

284
00:21:34,060 --> 00:21:39,950
always but usually years of experience
and hundreds of architectures ok but

285
00:21:39,950 --> 00:21:47,320
both Dell and I have trained hundreds of
people to do this and those people are

286
00:21:47,320 --> 00:21:51,740
all delivering valuable results so you
know don't be afraid to just get in

287
00:21:51,740 --> 00:21:53,170
there and get going

288
00:21:53,170 --> 00:21:56,420
my starter classes are just two hours
long

289
00:21:56,420 --> 00:22:01,330
ask me why that's true at Intel security
concerns some assumptions I can make

290
00:22:01,330 --> 00:22:07,240
that you can't necessarily make you know
if you're going in cold but ask me you

291
00:22:07,240 --> 00:22:12,600
know I don't go into that now let me see
what the next slide is a plier senior

292
00:22:12,600 --> 00:22:19,760
people like schools like surgeons one of
the greatest things you can do is you

293
00:22:19,760 --> 00:22:24,770
start people off and they work on a sort
of under the tutelage but they get to go

294
00:22:24,770 --> 00:22:28,530
and you get review layers of review and
that's the way you can take one or two

295
00:22:28,530 --> 00:22:33,899
really experienced modelers and scale of
duck hundreds of projects to get all

296
00:22:33,900 --> 00:22:37,980
these other people doing it but then the
people were a little more experienced

297
00:22:37,980 --> 00:22:41,920
review their stuff and then they can
turn to the experts who revere their

298
00:22:41,920 --> 00:22:42,600
stuff

299
00:22:42,600 --> 00:22:47,909
and you can get layers of of hierarchy
here to scale 22 literally hundreds of

300
00:22:47,910 --> 00:22:53,500
projects fairly quickly and and the
other thing I will say is this journeys

301
00:22:53,500 --> 00:22:59,429
along journey I play a very long so you
know when I first started told

302
00:22:59,429 --> 00:23:02,940
management look nobody knows how to
threat model that's ok you can get a lot

303
00:23:02,940 --> 00:23:06,250
of mistakes I'll try to keep the
terrible things from happening you know

304
00:23:06,250 --> 00:23:10,120
that's why you're hired me but let
people learn let them make some mistakes

305
00:23:10,120 --> 00:23:15,629
let them but let's go and we'll get
better and I've done it four times now

306
00:23:15,630 --> 00:23:20,289
with different organizations and I'm
pretty convinced this works this is a

307
00:23:20,289 --> 00:23:23,460
model that's really scalable cause
you're not going to be able to hire 20

308
00:23:23,460 --> 00:23:29,900
great threat models you be lucky if you
can hire two editions know that that's

309
00:23:29,900 --> 00:23:35,450
probably exactly right it's it is
absolutely a teachable thing to a point

310
00:23:35,450 --> 00:23:42,169
I think one of the I think one of the
harder things about this is actually

311
00:23:42,169 --> 00:23:44,830
kind of it's kind of interesting it's
the next month we're gonna get to but

312
00:23:44,830 --> 00:23:49,658
without jumping too far ahead it is a
skill that can be taught again to a

313
00:23:49,659 --> 00:23:53,159
point I don't think you can I think
nobody would agree that anybody can

314
00:23:53,159 --> 00:23:56,690
become a good software architect rate
not everyone has milk is meant to build

315
00:23:56,690 --> 00:24:00,980
systems some people are just better
coders and then they are builders and

316
00:24:00,980 --> 00:24:06,090
designers are very true so you should
and there's better coders then there are

317
00:24:06,090 --> 00:24:11,039
testers and there's better testers in
our winter your other activity so don't

318
00:24:11,039 --> 00:24:15,260
treat this as something different that
you know anybody can do threatening know

319
00:24:15,260 --> 00:24:19,429
we can teach anybody to do it but not
everyone will succeed right I can try to

320
00:24:19,429 --> 00:24:22,510
teach everyone how to be a race car
driver and some people will crash and

321
00:24:22,510 --> 00:24:26,179
burn and they should be driving race
cars so they're still there are some

322
00:24:26,179 --> 00:24:30,950
skills that can be taught it's still
something that has this is how we just

323
00:24:30,950 --> 00:24:35,419
call it apprenticeship at our place
where it is one of those things I think

324
00:24:35,419 --> 00:24:40,000
there's apprenticeship in any activity
unless you've got some natural ability

325
00:24:40,000 --> 00:24:43,909
probably didn't just turn up when they
become this great pen tester you've got

326
00:24:43,909 --> 00:24:47,480
this natural ability to think think
maliciously and you get very good at

327
00:24:47,480 --> 00:24:50,570
breaking in the systems but you filled
out those skills over time

328
00:24:51,149 --> 00:24:54,959
coding is maybe a little different but
not not much you still take time and you

329
00:24:54,960 --> 00:24:59,549
become a good coder threat modeling and
looking at Sakura designs understanding

330
00:24:59,549 --> 00:25:04,089
where are the likely places that some
weakness could exist in the design of a

331
00:25:04,089 --> 00:25:08,849
system that you're going to develop that
over time just like people know I don't

332
00:25:08,849 --> 00:25:11,950
know if I guess the closest thing I can
equate it to his you know kind of chess

333
00:25:11,950 --> 00:25:15,409
you play chess more and more people that
are better better than you get better at

334
00:25:15,409 --> 00:25:19,729
chess you will stop making bad choices
do you know why you make bad choices no

335
00:25:19,729 --> 00:25:23,239
you're not a machine you can't figure
out 35 moves ahead that that's going to

336
00:25:23,239 --> 00:25:28,080
bite you in the ass will direct modeling
and making secure design choices is kind

337
00:25:28,080 --> 00:25:32,468
of the same thing you just stop making
bad decisions earlier and so you don't

338
00:25:32,469 --> 00:25:35,460
back yourself into a corner but that's
how you learn about yourself into a

339
00:25:35,460 --> 00:25:39,629
corner back out and then the next time
he do it you're not going to go down

340
00:25:39,629 --> 00:25:43,449
that path you will learn to stop doing
bad things now there are people that

341
00:25:43,450 --> 00:25:46,460
will not learn to do bad things those
are the people that cannot be threat

342
00:25:46,460 --> 00:25:56,039
modeling well I think I'll note that you
know coding and highly recursive Petry

343
00:25:56,039 --> 00:25:59,190
is not the same as hello world correct

344
00:26:00,870 --> 00:26:06,770
alright so another myth we don't have
softer security experts so we can't do

345
00:26:06,770 --> 00:26:15,930
threat modeling so it's this kind of
sort of true / math you don't have to be

346
00:26:15,930 --> 00:26:21,130
the crypto wizard you don't have to be
you know the guy that can recite you

347
00:26:21,130 --> 00:26:24,850
know CVE from wooden backwards you know
everyone ability that exists or is it

348
00:26:24,850 --> 00:26:25,649
good to know that stuff

349
00:26:25,650 --> 00:26:32,120
absolutely the more you know the better
it is we would rather take a good coder

350
00:26:32,120 --> 00:26:36,330
and someone who has like you know built
systems and teach them security and

351
00:26:36,330 --> 00:26:39,159
someone who comes in with a security
only background try to teach them how to

352
00:26:39,160 --> 00:26:41,600
build systems or where things can be
broken

353
00:26:41,600 --> 00:26:48,530
that is way harder to do so we can you
can learn security it's very difficult

354
00:26:48,530 --> 00:26:52,160
to learn design if you've got good
design skills we can teach you the

355
00:26:52,160 --> 00:26:55,480
breaking part of breaking park and come
along there will be different techniques

356
00:26:55,480 --> 00:26:58,350
I'm sure we teach our folks differently
than you know Brooke does so there's

357
00:26:58,350 --> 00:27:03,580
lots of different ways you can teach
this skill but it's it's just because

358
00:27:03,580 --> 00:27:08,070
you don't have you know a person who is
the security group doesn't mean you

359
00:27:08,070 --> 00:27:11,428
can't do some stuff you know what the
you know enough about security that

360
00:27:11,429 --> 00:27:15,170
you're going to know where certain
things could go wrong and it could be as

361
00:27:15,170 --> 00:27:19,190
big as let's not put a security control
on the client even if you're not a

362
00:27:19,190 --> 00:27:23,860
security expert you know that you're not
going to want to do that but if you're

363
00:27:23,860 --> 00:27:27,090
not thinking about a system because
somebody didn't sit down and think about

364
00:27:27,090 --> 00:27:30,300
where is this control really gonna live
it's like well it's gonna live in this

365
00:27:30,300 --> 00:27:34,340
GOP JavaScript they were going down to
the client like well that's dumb you

366
00:27:34,340 --> 00:27:36,899
know it's gonna not be in a place where
you can control where it's going to

367
00:27:36,900 --> 00:27:40,840
execute you have to be you have some
knowledge of course you have to know how

368
00:27:40,840 --> 00:27:44,649
some attacks work but you don't have to
be the security girl if you are a

369
00:27:44,650 --> 00:27:47,120
security group rate you'll do better

370
00:27:47,120 --> 00:27:54,809
most likely at this so there's security
experts ok but certainly different types

371
00:27:54,809 --> 00:27:58,540
of systems have got completely different
types of ways to break into it so even

372
00:27:58,540 --> 00:28:03,790
if I'm good you know if I'm a good
threat model of a web application I may

373
00:28:03,790 --> 00:28:05,960
be really bad at threat modeling

374
00:28:05,960 --> 00:28:10,419
medical device it's not I got domain
experience i dont have there are things

375
00:28:10,419 --> 00:28:13,750
that are still gonna matter right I
still understand attacks are officially

376
00:28:13,750 --> 00:28:17,179
still understand assets are still
understand controls I have to now map in

377
00:28:17,179 --> 00:28:20,590
my head what does that look like in a
medical device what does that look like

378
00:28:20,590 --> 00:28:24,480
in a mobile application so I can still
take a bunch of skills and apply them to

379
00:28:24,480 --> 00:28:27,799
different domains so even though I don't
have the security expertise of a

380
00:28:27,799 --> 00:28:32,918
particular platform I can still function
and of course these extreme levels of

381
00:28:32,919 --> 00:28:36,240
experience are all over the map just
like you have good quarterback Cody

382
00:28:36,240 --> 00:28:43,860
testers bad testers so one way I try to
look at this we tell our folks think

383
00:28:43,860 --> 00:28:47,840
like an attacker and that kind of didn't
make so much sense it's like trying to

384
00:28:47,840 --> 00:28:51,418
tell them how to be a good cook so I
kinda thought about this for a minute

385
00:28:51,419 --> 00:28:55,020
and say well maybe threat modeling is
kinda like cooking if you suck at

386
00:28:55,020 --> 00:28:59,658
cooking you can maybe boil water I can
boil water I can never make some rice

387
00:28:59,659 --> 00:29:03,309
and that's about it and maybe a master
chef and I can do a lot of really good

388
00:29:03,309 --> 00:29:09,908
things just like I can become I can most
likely become better at cooking if I

389
00:29:09,909 --> 00:29:15,000
actually cared and didn't like syria so
much I could probably become better as a

390
00:29:15,000 --> 00:29:20,390
chef overtime and the more you do the
better you'll get the more types of

391
00:29:20,390 --> 00:29:24,510
systems you throw at me are you do this
activity for you'll get better the more

392
00:29:24,510 --> 00:29:27,529
types of frameworks you look like you're
you'll get better you'll start to think

393
00:29:27,529 --> 00:29:31,909
about things and ask the right questions
you should be doing this all the time

394
00:29:31,909 --> 00:29:35,279
anytime where we have a change in the
system and I think about this

395
00:29:36,159 --> 00:29:42,010
you at least need to boil water right
you have to be doing something if you do

396
00:29:42,010 --> 00:29:47,210
this activity I can almost guarantee you
will find something you'll find a flaw

397
00:29:47,210 --> 00:29:51,820
in the system that you did not know if
they're just just because we are not

398
00:29:51,820 --> 00:29:57,139
infallible rebuilt systems that have
these flaws in them I would almost

399
00:29:57,140 --> 00:29:58,190
guarantee it

400
00:29:58,190 --> 00:30:04,129
we've never done this activity on a
system and not found a flaw that's in 10

401
00:30:04,129 --> 00:30:10,500
years hasn't happened so the one thing I
would say what was I going to see a lot

402
00:30:10,500 --> 00:30:18,690
they forget it I lost it oh yeah I know
I have found I have I have found a

403
00:30:18,690 --> 00:30:23,620
system every once in a while and that's
why I take a very listen first attitude

404
00:30:23,620 --> 00:30:27,918
let them explain to me what their
security isn't often it's well we have

405
00:30:27,919 --> 00:30:33,549
HTTPS pls so are we secure and you know
it's like the big peanut butter as I

406
00:30:33,549 --> 00:30:39,269
said yesterday but ignoring that
occasionally they describe their their

407
00:30:39,269 --> 00:30:43,759
threat model in their controls and they
go well you got everything covered every

408
00:30:43,759 --> 00:30:48,820
once in awhile people do think about
this and they're trying so you know I

409
00:30:48,820 --> 00:30:52,850
find it very useful to encourage people
so my experience slightly different than

410
00:30:52,850 --> 00:30:53,580
yours

411
00:30:53,580 --> 00:31:02,820
oh alright so right so let's let's look
the other way we've looked at this way

412
00:31:02,820 --> 00:31:07,580
I'm pen testing now let's let's turn
that around the inverse so if I'm doing

413
00:31:07,580 --> 00:31:10,668
threat modeling I don't have to do all
this other stuff right

414
00:31:12,370 --> 00:31:19,049
no silver bullets please no silver
bullets the reason at this current state

415
00:31:19,049 --> 00:31:23,490
of the art the reason that in STL is
actually kind of complex in a signing

416
00:31:23,490 --> 00:31:27,580
the right activities is a complex
activity that should be done by an

417
00:31:27,580 --> 00:31:32,539
expert at least in part though we've
made some I've made some strides in my

418
00:31:32,539 --> 00:31:37,820
career around doing some stuff
deterministically they're still expert

419
00:31:37,820 --> 00:31:42,200
opinion they're the reason that is is
because it's complex and none of these

420
00:31:42,200 --> 00:31:46,629
things is a silver bullet but not only
that their complementary and synergistic

421
00:31:46,629 --> 00:31:56,649
so a threat model is a design-time
activity a pen test is a last before I

422
00:31:56,649 --> 00:32:02,320
go to production to make sure I didn't
screw up in all my other STL activities

423
00:32:02,320 --> 00:32:08,960
it's the final often or near the final
validation that I actually got from the

424
00:32:08,960 --> 00:32:10,320
attackers view

425
00:32:10,320 --> 00:32:15,200
close as I could to my security posture
that I want to get to next slide the oh

426
00:32:15,200 --> 00:32:21,470
and it takes a village to do in STL very
important little little thing I like to

427
00:32:21,470 --> 00:32:27,399
make it takes a lot of experts to really
execute the SDL complete ustal well and

428
00:32:27,399 --> 00:32:34,959
it should not be a solo activity ok you
get synergies and complimentary things I

429
00:32:34,960 --> 00:32:40,190
listed the design-time activities here
at least how I like to divide it up and

430
00:32:40,190 --> 00:32:43,250
you notice that included code review
because it could code reviewer can

431
00:32:43,250 --> 00:32:50,039
sometimes find design flaws by reading
the code and so while code reviews tend

432
00:32:50,039 --> 00:32:55,158
to be focused on logic and
implementation errors they can sometimes

433
00:32:55,159 --> 00:33:00,980
also find design issues as well so it's
kind of in there you know you should

434
00:33:00,980 --> 00:33:04,710
have some people who can look at the
design through the code because it helps

435
00:33:04,710 --> 00:33:09,259
but these other three activities are
part of the design you do a risk

436
00:33:09,259 --> 00:33:14,519
assessment or analysis at the very
beginning its ideal even when the

437
00:33:14,519 --> 00:33:18,370
product manager saying I want this bunch
of features are I want this new widget

438
00:33:18,370 --> 00:33:23,309
you want to look at that and say how
will people likely attack this and what

439
00:33:23,309 --> 00:33:27,759
do customers expect for security in this
thing and get a bunch of very high level

440
00:33:27,759 --> 00:33:31,509
things you'll need authentication and
authorization you know I need to protect

441
00:33:31,509 --> 00:33:35,000
the financial data so that really high
level stuff and you can get that into

442
00:33:35,000 --> 00:33:37,509
the requirements and as I said yesterday

443
00:33:37,509 --> 00:33:42,549
early requirements get the mindshare so
that's important than you threat model

444
00:33:42,549 --> 00:33:45,799
and your little bit further along and
you come up with some more much more

445
00:33:45,799 --> 00:33:49,769
specific stuff and then you want to take
a look at the design somewhere along the

446
00:33:49,769 --> 00:33:56,279
way or continuously as it changes in
agile environments a house the security

447
00:33:56,279 --> 00:34:02,000
thanks very much so you know these
things are not the each of these is not

448
00:34:02,000 --> 00:34:05,100
the same thing it's a little different
and they add to each other and their

449
00:34:05,100 --> 00:34:11,909
dependent on each other next slide
please and so pen testing generally and

450
00:34:11,909 --> 00:34:16,629
static analysis and they they they're
looking for a different class of

451
00:34:16,629 --> 00:34:17,790
problems

452
00:34:17,790 --> 00:34:22,879
implementation airs coding bugs logic
errors if the pin testers real good

453
00:34:22,879 --> 00:34:27,500
good but not all investors will come up
with the real logic errors but some of

454
00:34:27,500 --> 00:34:31,389
them well so it's a different class of
bugs in in in general

455
00:34:31,389 --> 00:34:36,619
been designed missus are authentication
credentials are all available with me in

456
00:34:36,619 --> 00:34:41,009
the data base and we designed it so that
the keys for the encryption of the

457
00:34:41,009 --> 00:34:44,759
credentials are sitting right in the
database right next to the right next to

458
00:34:44,759 --> 00:34:50,969
the the things that are encrypted that's
a bad design or we decided to design it

459
00:34:50,969 --> 00:34:56,689
with one universal credential like a
certificate or password that juniper

460
00:34:56,690 --> 00:35:01,569
thing and I had up there the other day
whatever those are design issues and

461
00:35:01,569 --> 00:35:02,579
they're not going to be found

462
00:35:02,579 --> 00:35:10,349
necessarily buy Pinterest next and just
let's get really clear the purpose of a

463
00:35:10,349 --> 00:35:17,440
threat model is to find out what attack
surfaces and assets have not been

464
00:35:17,440 --> 00:35:23,980
properly protected and generate a series
of requirements that then can be built

465
00:35:23,980 --> 00:35:27,460
or decided not to be built because you
don't care you know whatever the

466
00:35:27,460 --> 00:35:32,660
prioritization so hard hard job there I
don't mean to do that to get the right

467
00:35:32,660 --> 00:35:44,078
security stuff built threat modeling
does not magically replace your STL so

468
00:35:44,079 --> 00:35:48,230
just a couple of things I gotta roll
back through the Commons ahead in my

469
00:35:48,230 --> 00:35:48,579
head

470
00:35:48,579 --> 00:35:54,940
extract them so one of the one of the
comment that was made was you know that

471
00:35:54,940 --> 00:35:58,950
option I can replace these other things
but I don't know about any anybody here

472
00:35:58,950 --> 00:36:04,808
but I have absolutely works with
executives who want to they they love

473
00:36:04,809 --> 00:36:09,490
the idea of doing this secure design
thing and they have literally let's

474
00:36:09,490 --> 00:36:16,709
start doing threat modeling so I can
replace my pen test program no let's do

475
00:36:16,710 --> 00:36:19,549
this so we can get rid of our static
analysis tool

476
00:36:19,549 --> 00:36:24,690
know it's not going to get rid of those
things in in fact what what you can do

477
00:36:24,690 --> 00:36:28,609
with this though is you can use the
information from this activity to make

478
00:36:28,609 --> 00:36:31,740
the other activities better right if i'm
looking at

479
00:36:31,740 --> 00:36:37,180
at a complex system and it's got just
gonna arbitrarily say it's got fifty

480
00:36:37,180 --> 00:36:41,640
entry points but the fact is ten of
those entry point for protecting ninety

481
00:36:41,640 --> 00:36:44,509
percent of the valuable information
wouldn't it be good information for your

482
00:36:44,510 --> 00:36:49,250
pen tester chanel Coco pound on these 10
entry points that's where the goods are

483
00:36:49,250 --> 00:36:54,590
that's good information if I know that
I've got the security control that is

484
00:36:54,590 --> 00:36:58,610
protecting that incredibly valuable
asset couldn't that be a good thing to

485
00:36:58,610 --> 00:37:03,190
make sure my static analysis tools never
fails to analyze the code that's related

486
00:37:03,190 --> 00:37:06,420
to that control if you're looking at two
million lines of code and I don't know

487
00:37:06,420 --> 00:37:09,890
how big the systems are and if you're
using static analysis tools but I know

488
00:37:09,890 --> 00:37:13,430
we work with plenty of vendors are
plenty of clients of ours that when

489
00:37:13,430 --> 00:37:17,270
there's errors in the static code if
it's less than a certain percentage you

490
00:37:17,270 --> 00:37:22,350
invested time to fix it if that part of
the code that wasn't being analyzed was

491
00:37:22,350 --> 00:37:25,890
the most critical security control to
your system could find out what's wrong

492
00:37:25,890 --> 00:37:28,490
you want that stuff scanned

493
00:37:28,490 --> 00:37:32,859
you did good information for other
activities so i cant remember the other

494
00:37:32,860 --> 00:37:34,740
thing what the hell was it

495
00:37:34,740 --> 00:37:40,979
00 the coding and designers so one of
the slides I like to use is the overlap

496
00:37:40,980 --> 00:37:47,869
of 10 test code review and and designer
of you and and the one very common sadly

497
00:37:47,869 --> 00:37:48,980
today

498
00:37:48,980 --> 00:37:54,230
coding example that rears its head as a
coating bug any design problem is

499
00:37:54,230 --> 00:37:57,800
hardcoded grads in something either
hardcoded crowds in the client are

500
00:37:57,800 --> 00:38:03,030
graded kids on the server where things
are hard coded yes that's what they are

501
00:38:03,030 --> 00:38:07,590
any kind of key material is going to be
hardcoded somewhere so that is of course

502
00:38:07,590 --> 00:38:12,050
an implementation but what's the design
flaw if you've got something hard coded

503
00:38:12,050 --> 00:38:15,000
in the code

504
00:38:15,000 --> 00:38:21,470
sorry the answer is you don't have an
appropriate means for tracking those

505
00:38:21,470 --> 00:38:25,299
credentials changing them you don't have
to have a rotation policy what happens

506
00:38:25,300 --> 00:38:29,100
on a compromise with there's all kinds
of things that are now kind of rearing

507
00:38:29,100 --> 00:38:34,130
its head as the flaw but it is going to
be found in the coding in a code review

508
00:38:34,130 --> 00:38:38,140
and there's other examples so there
there is this bleed over but but don't

509
00:38:38,140 --> 00:38:40,830
think that if you find that kind of
thing you doing threat modeling you

510
00:38:40,830 --> 00:38:45,130
stumbled across a flaw by doing a code
review but Cody doesn't find flaws it

511
00:38:45,130 --> 00:39:02,150
did find bugs for the most part yes yes
there's other types of issues with us to

512
00:39:02,150 --> 00:39:06,430
be sure but just to turn the floor for
questions any kind of questions on a few

513
00:39:06,430 --> 00:39:10,859
guys seeing any these kind of a kind of
the one last thing i sorry just because

514
00:39:10,860 --> 00:39:16,240
I just thought of it so along these
lines of you know will this replace our

515
00:39:16,240 --> 00:39:20,609
other thing when a bender comes to you
and says let's let this appliance in

516
00:39:20,610 --> 00:39:23,650
front of your web server because it's
going to find these types of defects you

517
00:39:23,650 --> 00:39:29,390
don't have to do this stuff yourself one
in hyde right it's not it may be very

518
00:39:29,390 --> 00:39:32,830
good at what it does you still have to
do the other stuff and this is one of

519
00:39:32,830 --> 00:39:36,900
those other things and as far as I know
there is no tool that does this this is

520
00:39:36,900 --> 00:39:42,660
done by humans with all due respect to
the vendors that are here many of whom

521
00:39:42,660 --> 00:39:48,859
are my personal friends and I respect
their work greatly but there's a lot of

522
00:39:48,860 --> 00:39:56,300
hype be suspicious of the hype no point
tool is going to quote solves your

523
00:39:56,300 --> 00:40:00,340
security problem just walk around and
RSA San Francisco on the vendor floor

524
00:40:00,340 --> 00:40:03,120
about

525
00:40:03,120 --> 00:40:08,720
one-half to two-thirds of the signs say
something of the order world's greatest

526
00:40:08,720 --> 00:40:12,080
will solve your security problem

527
00:40:13,340 --> 00:40:19,840
be suspicious be nasty and also say to
that marketing person take that sign

528
00:40:19,840 --> 00:40:26,160
down because obviously a static analyzer
doesn't solve you security problem it's

529
00:40:26,160 --> 00:40:31,640
a key piece in my world of my STL but it
doesn't replace remodeling it doesn't

530
00:40:31,640 --> 00:40:36,230
replace dynamic analysis their
complementary each thing an

531
00:40:36,230 --> 00:40:41,900
authentication system does not solve any
problem it solves the authentication

532
00:40:41,900 --> 00:40:45,950
problem which is one kind of control
which is a very complex controlled by

533
00:40:45,950 --> 00:40:46,680
the way

534
00:40:46,680 --> 00:40:50,129
think about authentication the moment
you stick authentication in there have

535
00:40:50,130 --> 00:40:57,370
you protected anything answer is no you
readers reduce the attack surface why

536
00:40:57,370 --> 00:41:01,960
because I'd authenticated user
especially if you think about a facebook

537
00:41:01,960 --> 00:41:05,920
situation they know darn well that their
authentication there's nothing you can

538
00:41:05,920 --> 00:41:10,740
get an address and start up an account
how many birds and dogs have accounts on

539
00:41:10,740 --> 00:41:14,899
Facebook I haven't met the dog that
actually uses Facebook by the way

540
00:41:14,900 --> 00:41:21,080
forward so you know I think about that
very easy to get an account so they know

541
00:41:21,080 --> 00:41:25,060
that at Facebook perfectly well they
know their authentication is just a way

542
00:41:25,060 --> 00:41:30,860
of saying that count is misbehaving I
oughta kill it that's all it's useful

543
00:41:30,860 --> 00:41:33,980
this is from a security perspective so
it's on occasion you guys think about

544
00:41:33,980 --> 00:41:39,610
how good is your credential how good is
your trust of the principal that's using

545
00:41:39,610 --> 00:41:43,810
that authentication all of that very
important but authenticated users do

546
00:41:43,810 --> 00:41:49,910
what tax systems therefore you have to
think it's just a way of closing or

547
00:41:49,910 --> 00:41:53,960
tying you know it's it's complex and you
also have the problem of securing the

548
00:41:53,960 --> 00:41:59,360
authentication which is a whole big
problem so you know just taking that one

549
00:41:59,360 --> 00:42:04,720
thing is is a way of thinking about this
you know all of these things sit in a

550
00:42:04,720 --> 00:42:07,899
place here in STL at today's art

551
00:42:10,370 --> 00:42:24,569
hear such a great question you want a
cat or shall I take a whack at it

552
00:42:24,570 --> 00:42:28,470
alright so that's great question

553
00:42:28,470 --> 00:42:34,919
continuous integration because molly is
an expert activity it doesn't fit into

554
00:42:34,920 --> 00:42:38,510
the continuous integration instead you
have to make it a trial which is

555
00:42:38,510 --> 00:42:42,810
different when i mean a July mean
letting it breathe letting it change

556
00:42:42,810 --> 00:42:47,850
being living revisiting it with human
actors thinking about these problems and

557
00:42:47,850 --> 00:42:51,080
probably quite a few Assamese who
understand the system in different ways

558
00:42:51,080 --> 00:42:55,890
I can't tell you how many times I've
come into a threat model and said now

559
00:42:55,890 --> 00:42:59,120
explain the architecture to me you guys
have been living with it but explained

560
00:42:59,120 --> 00:43:02,569
it to me and one person goes to the
drawing board and they draw budget stuff

561
00:43:02,570 --> 00:43:05,740
and another person gets up and says wait
a minute the system doesn't work that

562
00:43:05,740 --> 00:43:07,330
way it works like this

563
00:43:07,330 --> 00:43:12,580
and half the learning that's going on in
that room is that the people who design

564
00:43:12,580 --> 00:43:15,930
that system are now becoming to really
understand just exactly what they've

565
00:43:15,930 --> 00:43:20,149
designed and built because nobody has a
complete picture will be getting a bunch

566
00:43:20,150 --> 00:43:24,730
of experts together you get them you
know a job as an example of of why it's

567
00:43:24,730 --> 00:43:28,690
important to leave that is annexed
productivity that really needs humans

568
00:43:28,690 --> 00:43:32,540
that's the state of the art today may
change but today that's the state of the

569
00:43:32,540 --> 00:43:38,170
art ok in terms of continuous
integration you want to get your tools

570
00:43:38,170 --> 00:43:42,490
that are checking for implementation
errors however you're doing that

571
00:43:42,490 --> 00:43:47,180
get those to be part of the flow very
quickly so we like to say is if we're

572
00:43:47,180 --> 00:43:52,279
going to be doing a turnaround of one
week say on our own are you know or or

573
00:43:52,280 --> 00:43:56,320
daily builds you do like I'm actually
happened to notice from Salesforce cuz

574
00:43:56,320 --> 00:44:00,500
they told it to me and I think it's
probably pretty public information no

575
00:44:00,500 --> 00:44:06,050
NDA's there that what they do is they
have all their tools there but they'd

576
00:44:06,050 --> 00:44:08,870
force people into a particular
architecture which has been thoroughly

577
00:44:08,870 --> 00:44:12,880
threat model do you see the difference
so you you're writing to that threat

578
00:44:12,880 --> 00:44:17,770
model from the infrastructure and then
you're inside that pipeline looking for

579
00:44:17,770 --> 00:44:21,140
implementation errors and protected by
the existing threat model

580
00:44:21,890 --> 00:44:26,370
yeah so the only thing I would say
slightly different is at some point

581
00:44:26,900 --> 00:44:31,470
continuous integration or not you're
you're you're operating on some change

582
00:44:31,470 --> 00:44:35,569
that you're implementing the system when
that change was thought about that is

583
00:44:35,570 --> 00:44:38,960
when you think about does it change my
threat model new assets new controls new

584
00:44:38,960 --> 00:44:42,470
attack surface you go through your
laundry list of what does this change

585
00:44:42,470 --> 00:44:46,319
can actually do when the answer is it
doesn't really affect my threat model

586
00:44:46,320 --> 00:44:49,820
you have done your exercise of ivory
visited the three mile if I create a new

587
00:44:49,820 --> 00:44:53,660
entry point you have to revisit that if
I created a new piece of data on Ibiza

588
00:44:53,660 --> 00:44:56,879
functionality that a threat a Johnson
get through to revisit the threat model

589
00:44:56,880 --> 00:45:00,470
if you can change of control and a
control unit to revisit their model so

590
00:45:00,470 --> 00:45:05,379
CI does does it change anything that you
doing I don't think so i think you have

591
00:45:05,380 --> 00:45:10,100
to be a little bit quicker at it you may
not spend as much time thinking about it

592
00:45:10,100 --> 00:45:13,020
as you would in other types of
situations but you had to design the

593
00:45:13,020 --> 00:45:17,130
system at some point you've got a threat
model and if you don't you should go

594
00:45:17,130 --> 00:45:20,450
build one and that's going to be a burn
but you can invest in time to go built

595
00:45:20,450 --> 00:45:24,480
so you goin you build your throat while
you have your threat model and then CIA

596
00:45:24,480 --> 00:45:28,780
or not you look at the change that
you're about to make does it affect my

597
00:45:28,780 --> 00:45:34,830
threat model yes or no so CI is yes
you're building stuff constantly but

598
00:45:34,830 --> 00:45:37,819
based on changes and when you're looking
at those changes that's when you ask

599
00:45:37,820 --> 00:45:43,810
yourself that it changed my 30 I would
totally can work but you know you're not

600
00:45:43,810 --> 00:45:47,130
going to just like he wouldn't use a
tool that takes a week to scan code in a

601
00:45:47,130 --> 00:45:48,160
CIA environments

602
00:45:48,160 --> 00:45:53,089
your your threat model activity is going
to be enough to answer these important

603
00:45:53,090 --> 00:45:58,080
questions of did my threat model change
even if an important point del that's

604
00:45:58,080 --> 00:46:03,590
really important here if you haven't
done the threat model and you've just

605
00:46:03,590 --> 00:46:07,100
been assuming architecture is you know
when you're just designing you just

606
00:46:07,100 --> 00:46:11,360
writing to that architecture and I
actually just did one of these last year

607
00:46:11,360 --> 00:46:15,700
where they'd been doing a very
successful product for years they'd

608
00:46:15,700 --> 00:46:19,600
never done a threat model of the
complete system so then you just back up

609
00:46:19,600 --> 00:46:23,759
and do the threat model and figure out
again what you got and what you don't

610
00:46:23,760 --> 00:46:28,800
have and then you start you let the
continuous integration process work to

611
00:46:28,800 --> 00:46:30,470
that threat models that makes sense

612
00:46:30,470 --> 00:47:07,930
I'm sorry yeah a couple things on the
business impact threat modeling so one

613
00:47:07,930 --> 00:47:11,848
of the hurdles that we've seen a large
number of clients come across

614
00:47:11,849 --> 00:47:15,980
you have you measure the effectiveness
of your pen test program you run a pen

615
00:47:15,980 --> 00:47:20,160
test you find 25 vulnerabilities run it
again you find twenty run it again you

616
00:47:20,160 --> 00:47:23,920
find fifteen your program you're
improving that the number of defects is

617
00:47:23,920 --> 00:47:28,140
decreasing code of you same thing here
in your code of you we found a hundred

618
00:47:28,140 --> 00:47:31,140
bugs and it was ninety then it was 85
hey we're getting better

619
00:47:31,730 --> 00:47:35,550
there's just not that kind of
measurement and in the threat model

620
00:47:35,550 --> 00:47:42,300
world and even when there is such a
measurement the impact or the risk

621
00:47:42,300 --> 00:47:45,930
rating if you would have a floor you
find is all over the map for different

622
00:47:45,930 --> 00:47:50,240
applications for different situations so
when we're going to you know businesses

623
00:47:50,240 --> 00:47:54,500
to try to tell them why do you need to
do this I want them to target my point

624
00:47:54,500 --> 00:47:58,930
in the Home Depot and like this shit
happens so do you want to be on the

625
00:47:58,930 --> 00:48:02,589
front page of the paper that we have we
had looked at the system a certain way

626
00:48:02,589 --> 00:48:07,279
we could have avoided this problem but
you have to make sure the business folks

627
00:48:07,280 --> 00:48:12,040
understand the metrics that exists for
forgetting an ROI on this as far as I

628
00:48:12,040 --> 00:48:16,210
know they're not there when we're gonna
find a problem we're gonna let you know

629
00:48:16,210 --> 00:48:20,369
he would just found this killer problem
hope that was valuable but how do we

630
00:48:20,369 --> 00:48:23,369
know that weird you know continuing do
great work

631
00:48:25,339 --> 00:48:31,920
there's a long tail to architecture and
business has to understand that there is

632
00:48:31,920 --> 00:48:38,410
a very long tail and also Cincy shows
and CSI shows that the average tenure is

633
00:48:38,410 --> 00:48:42,890
18 months they're going to want to prove
themselves with quick win activities

634
00:48:42,890 --> 00:48:49,180
architecture is not a quick it takes
about have done this for times and i'm

635
00:48:49,180 --> 00:48:55,109
i'm convinced it works now with
different organizations it takes about

636
00:48:55,109 --> 00:48:58,890
two to three years to really start
seeing the results of this activity

637
00:48:58,890 --> 00:49:03,069
really seeing it especially when a lot
of legacy code gonna carry a lot of

638
00:49:03,069 --> 00:49:06,999
legacy debt no matter what you do need
to be aware of it you know all of that's

639
00:49:06,999 --> 00:49:12,229
true but you start seeing improvements
in the field and what will happen which

640
00:49:12,229 --> 00:49:16,239
is interesting as as you start getting
the low-hanging fruit from threat

641
00:49:16,239 --> 00:49:21,180
modeling your attackers will begin to
get frustrated and start find here

642
00:49:21,180 --> 00:49:26,710
hi you know difficult hi hanging fruit
for you and you know you'll have more

643
00:49:26,710 --> 00:49:30,690
difficult more intractable problems so
you have to sort of prepared management

644
00:49:30,690 --> 00:49:36,579
for the entire thing the other thing I
wanted to say is I had a big learning

645
00:49:36,579 --> 00:49:42,660
when I was the senior security architect
head team of eight that time and I got a

646
00:49:42,660 --> 00:49:45,129
team of seventies little different

647
00:49:45,130 --> 00:49:53,059
just my guess that's career growth is it
I think sure but when I was at WebEx or

648
00:49:53,059 --> 00:49:56,920
Cisco and eventually we did all this ass
products but that was a little test bed

649
00:49:56,920 --> 00:50:04,150
we stumbled into and it was a great
learning that if we could help sales

650
00:50:04,150 --> 00:50:08,859
make work with their security
departments by understanding our

651
00:50:08,859 --> 00:50:12,109
security posture really really well that
is we had threat model it really really

652
00:50:12,109 --> 00:50:17,589
well then and we could explain that an
articulated that brought us over to

653
00:50:17,589 --> 00:50:21,769
product management who then became our
best friends and so instead of being

654
00:50:21,769 --> 00:50:26,718
really late on the draw or just having
engineering go and do stuff without us

655
00:50:26,719 --> 00:50:31,039
because Product Management said while
you guys are great when you talk to

656
00:50:31,039 --> 00:50:34,210
those other security people we want to
have you worked planning this new which

657
00:50:34,210 --> 00:50:34,640
it

658
00:50:34,640 --> 00:50:38,250
can you guys get involved right now so
we understand what our customers are

659
00:50:38,250 --> 00:50:41,829
going to want cause you seem to
understand really well so you know get

660
00:50:41,829 --> 00:50:47,609
up front and be valuable to the people
who sell your products to the people who

661
00:50:47,609 --> 00:50:51,640
start thinking like their customers and
what are the customers want if you

662
00:50:51,640 --> 00:50:53,259
become valuable to them

663
00:50:53,260 --> 00:50:57,900
your STL will your you all your design
activities will start to flow really

664
00:50:57,900 --> 00:51:02,119
naturally because instead of chasing
them they'll be chasing you they see you

665
00:51:02,119 --> 00:51:06,019
as adding value is a very powerful
lesson and I will never forget it we

666
00:51:06,019 --> 00:51:10,979
always touch product management first
now and try to start getting with them

667
00:51:10,980 --> 00:51:15,690
because then they start seeing as their
friend who will get stuff right and then

668
00:51:15,690 --> 00:51:18,690
you know it just is makes life easier

669
00:51:28,990 --> 00:52:31,390
why you should be doing great threat
models are people who have architectural

670
00:52:31,390 --> 00:52:35,100
mindset and people who have to wait
mindset right sometimes you find that in

671
00:52:35,100 --> 00:52:38,609
one person you're lucky but a lot of
times you know you find that into

672
00:52:38,609 --> 00:52:42,520
different people so your task is gonna
do have these two guys work together

673
00:52:42,520 --> 00:52:53,080
what I discovered after doing 47 threat
modeling trainings participatory like

674
00:52:53,080 --> 00:52:59,049
sorta like what I was doing yesterday
but but deeper and longer is that threat

675
00:52:59,050 --> 00:53:04,470
modeling if you're building a program
it's a key activity for the STL and this

676
00:53:04,470 --> 00:53:09,080
is sort of magical I don't understand
why yet but if you get everybody on the

677
00:53:09,080 --> 00:53:13,759
team involved at least listening to the
threat model they suddenly understand

678
00:53:13,760 --> 00:53:21,430
why the other STL activities matter and
they take it seriously it's it's if

679
00:53:21,430 --> 00:53:26,690
there's magic in the world it's right
here that in or magic insecurity it's

680
00:53:26,690 --> 00:53:30,390
right here there's something social that
I don't understand completely or

681
00:53:30,390 --> 00:53:35,020
psychological that goes on if you get
everybody to threat model they will walk

682
00:53:35,020 --> 00:53:38,960
away and they look at the test plan and
there's a security items they go I know

683
00:53:38,960 --> 00:53:40,110
why this is important

684
00:53:40,110 --> 00:53:44,500
and I will prioritize this and and be
effective at it instead of all there's

685
00:53:44,500 --> 00:53:48,060
another thing I have to do I don't
understand what it is they understand

686
00:53:48,060 --> 00:53:51,910
why oh my gosh if we had only gotten
these requirements earlier it would've

687
00:53:51,910 --> 00:53:55,870
been better on the design side and I
need to be involved in the building of

688
00:53:55,870 --> 00:54:00,600
the architecture it's you know doesn't
matter what the role is they all know

689
00:54:00,600 --> 00:54:03,580
have to know how to keep secrets used to
be the threat models in most secret

690
00:54:03,580 --> 00:54:08,799
thing or very secret we have abandoned
that because we believe that everyone on

691
00:54:08,800 --> 00:54:12,040
the engineering team already knows they
have to keep what they're building

692
00:54:12,040 --> 00:54:17,500
secret until it's announced they already
do that if they break that they've

693
00:54:17,500 --> 00:54:21,190
broken their contract with Intel so they
you know that's a problem it's a

694
00:54:21,190 --> 00:54:26,290
management problem so by involving
everyone in the in the in the threat

695
00:54:26,290 --> 00:54:31,480
model we're getting this whole
excitement about the SDL that I haven't

696
00:54:31,480 --> 00:54:38,690
ever been able to achieve any other way
you want to add anything that's a great

697
00:54:38,690 --> 00:54:47,440
point thank you very much

