1
00:00:18,470 --> 00:00:23,070
so high thank you all for coming

2
00:00:23,820 --> 00:00:28,689
my name is affirmed or for those of you
don't know me a few things about myself

3
00:00:28,689 --> 00:00:36,329
I work for Synopsys how many of you know
the name synopsis it's getting better so

4
00:00:36,329 --> 00:00:43,140
for those you dunno sinopsis is building
one of the strongest forces in software

5
00:00:43,140 --> 00:00:47,899
testing security testing as well by
acquiring Coverity into phnom akin and

6
00:00:47,899 --> 00:00:51,589
seeker which would like company in a few
more and if you want to hear more about

7
00:00:51,589 --> 00:00:56,400
it we have a booth and by that I and my
commercial pug I was the founder of

8
00:00:56,400 --> 00:01:01,100
seeker I was a pioneer for what caused
you called ISDN interactive application

9
00:01:01,100 --> 00:01:04,939
security testing which I mentioned today
in the context of what we do

10
00:01:05,810 --> 00:01:09,689
I'm a hacker it hard have been doing
security and pension scheme for twenty

11
00:01:09,689 --> 00:01:17,309
years now and I've been with ASP almost
as long as long as it existed I'm also a

12
00:01:17,310 --> 00:01:20,720
photographer and I always had rather
talk about my last trip to Africa than

13
00:01:20,720 --> 00:01:26,190
about security but apparently that
doesn't get you accepted into a box so

14
00:01:26,190 --> 00:01:32,720
that's the closest thing I could find
for agile you know she does her yeah I

15
00:01:32,720 --> 00:01:36,950
took the picture she does her a job so
you know and that that that will be my

16
00:01:36,950 --> 00:01:44,240
last blog on Africa unfortunately for
this talk so what I'm here to talk about

17
00:01:44,240 --> 00:01:51,240
is address security and I know everybody
talks about added security so I want to

18
00:01:51,240 --> 00:01:55,548
do my own taken it in my own take on it
is is real world so we've been working a

19
00:01:55,549 --> 00:02:00,869
lot with customers my product on trying
to help build security testing into the

20
00:02:00,869 --> 00:02:05,299
address world and what this talk will be
about how about technologies gonna be

21
00:02:05,299 --> 00:02:10,659
about the process on how to do that and
not how to do that in theory and in the

22
00:02:10,658 --> 00:02:15,379
good ideas and best practices but how
sri very different organizations with

23
00:02:15,379 --> 00:02:20,140
different maturity levels have done this
and this is what I'll talk about and

24
00:02:20,140 --> 00:02:24,059
just to get a little bit context will
talk about the challenges majority of

25
00:02:24,060 --> 00:02:29,170
you are aware of it but when we look at
a gel security right so it's really

26
00:02:29,170 --> 00:02:31,920
security software security as part

27
00:02:31,920 --> 00:02:36,670
of an agile development life cycle in
theory we have the same challenges of

28
00:02:36,670 --> 00:02:41,349
problems as we have with normal software
security right we have developers to try

29
00:02:41,349 --> 00:02:46,390
code they probably don't know much about
security that's a reality and we need to

30
00:02:46,390 --> 00:02:50,769
help them the only problem is it's in
much shorter cycles right so we have a

31
00:02:50,770 --> 00:02:56,310
very short cycles very rapid delivery we
see this going from four weeks prints

32
00:02:56,310 --> 00:03:01,450
two three weeks friends 21 weeks print
to daily sprints to rapid deployment and

33
00:03:01,450 --> 00:03:06,390
you know three thousand pushes to
production there a day that's that's the

34
00:03:06,390 --> 00:03:13,119
world and so we need the security to be
done as part of the development by the

35
00:03:13,120 --> 00:03:17,250
developers and developers to ensure
security they don't like security they

36
00:03:17,250 --> 00:03:21,489
don't care about security and when we
train them about security after five

37
00:03:21,489 --> 00:03:24,390
months to go to a new job and we get a
new developer that doesn't know security

38
00:03:24,390 --> 00:03:33,399
just the truth I love training I love
training I've been pushing training

39
00:03:33,400 --> 00:03:37,989
added security training for developers
before it was popular but the reality is

40
00:03:37,989 --> 00:03:44,989
it's difficult as the main solution
right and so wheat Sao case let's bring

41
00:03:44,989 --> 00:03:48,950
out all those testing tools automated
testing tools and used them and that's

42
00:03:48,950 --> 00:03:52,730
not a bad idea but we need the right
tools because a lot of these tools tend

43
00:03:52,730 --> 00:03:57,230
to generate too much data that requires
sifting through right and we see that

44
00:03:57,230 --> 00:04:01,488
some companies solve this by offering
product and service but that has a

45
00:04:01,489 --> 00:04:07,609
turnaround time of seven days baby and
that's a very long and some companies

46
00:04:07,609 --> 00:04:12,540
just hire experts but that's again a
very slow right we i talked a lot of

47
00:04:12,540 --> 00:04:16,289
customers and have all kinds of solution
and have a team of people sifting

48
00:04:16,289 --> 00:04:20,529
through false positives and that doesn't
work when you need something done from

49
00:04:20,529 --> 00:04:26,900
today to tomorrow and so we need an
ability to sift through the data but we

50
00:04:26,900 --> 00:04:31,729
also need an ability to build something
practical which realizes that when you

51
00:04:31,729 --> 00:04:37,150
push code every day you're gonna push
code with vulnerability sometimes and

52
00:04:37,150 --> 00:04:40,390
that's fine as long as you manage your
risk correctly

53
00:04:41,350 --> 00:04:45,550
and you're aware of what you're doing
and so this is a little bit about the

54
00:04:45,550 --> 00:04:51,740
challenge and what we're trying to do
and so the solution and that's true for

55
00:04:51,740 --> 00:04:55,910
anything in a draw is automation
automation is key

56
00:04:55,910 --> 00:05:03,370
anything you think you're going to do
manually is an automatic fail it can't

57
00:05:03,370 --> 00:05:08,450
work I seen customers are just talked to
a customer they bought one of one of our

58
00:05:08,450 --> 00:05:11,620
competitors static analysis has nothing
to do with the competitors specifically

59
00:05:11,620 --> 00:05:18,530
to build a program where everything hi
breaks to build and then somebody has to

60
00:05:18,530 --> 00:05:22,469
look at it and say if it's a false
positive or not and I was working very

61
00:05:22,470 --> 00:05:26,630
cool when they started one system but
now they're trying to expand it and they

62
00:05:26,630 --> 00:05:33,060
need fifty more security people to do
that fast enough so we need automation

63
00:05:33,060 --> 00:05:36,960
so we need something that's automated we
need something that continues to work

64
00:05:36,960 --> 00:05:41,330
all the time and we need something
that's practical and practical is

65
00:05:41,330 --> 00:05:45,840
important because it's very easy to look
at a code and say look there five

66
00:05:45,840 --> 00:05:51,010
hundred problems here but we're not
gonna fix 500 problems from today to

67
00:05:51,010 --> 00:05:57,010
tomorrow when we pushed the built so
let's look a little bit of what we did

68
00:05:57,010 --> 00:06:03,370
with some of our customers and what they
did to to do that so the first company

69
00:06:03,370 --> 00:06:10,650
to an insurance company they were the
least mature of our customers in that

70
00:06:10,650 --> 00:06:16,200
context they didn't really have a child
is still don't entirely have a job to

71
00:06:16,200 --> 00:06:23,349
have a jail in some places they don't
have automation at all not for other

72
00:06:23,350 --> 00:06:27,000
things the security so bringing in
security automation with a big challenge

73
00:06:27,000 --> 00:06:32,420
and XenApp 6 they were pretty good
because their insurance company

74
00:06:32,420 --> 00:06:36,110
financial services so they used to have
a lot of pen testing and consulting and

75
00:06:36,110 --> 00:06:41,470
so on but as they were thinking on
moving to address all this started

76
00:06:41,470 --> 00:06:47,050
becoming a problem so we came there they
insurance company mostly home-grown

77
00:06:47,050 --> 00:06:52,690
applications about 15 systems that they
want to bring in was very different

78
00:06:52,690 --> 00:06:54,390
level of maturity

79
00:06:54,390 --> 00:06:58,590
and that's one of the things you get
when you go to a customer we are all a

80
00:06:58,590 --> 00:07:05,590
joke today if you go to customers via
ask you are you add we're all exile who

81
00:07:05,590 --> 00:07:08,789
isn't a joke in this room 201

82
00:07:09,520 --> 00:07:17,520
but the reality is at best they have
some at Joe probably not fully

83
00:07:17,520 --> 00:07:21,710
implemented at most large organizations
would have different apartments a

84
00:07:21,710 --> 00:07:27,109
different maturity levels and you can
just try and plug in this great solution

85
00:07:27,110 --> 00:07:30,960
that works for everything because it
doesn't work you need to be able to

86
00:07:30,960 --> 00:07:36,599
adapt so they were very they still are
working with them for a year they're

87
00:07:36,600 --> 00:07:43,090
still very different in different places
so some of their one project the new

88
00:07:43,090 --> 00:07:47,359
project which is really a down and then
the majority of the others have just

89
00:07:47,360 --> 00:07:54,710
continues integration servers and they
call it a trail right so the focus was

90
00:07:54,710 --> 00:07:58,789
out of these systems to focus first on
the new systems and then expand were

91
00:07:58,790 --> 00:08:06,340
still in the process and then they had a
lot of challenges so obviously its

92
00:08:06,340 --> 00:08:12,590
insurance company a lot of older
developers people that are not used to

93
00:08:12,590 --> 00:08:17,469
the fast-paced a Joe world and security
problems been working there for 15 20

94
00:08:17,470 --> 00:08:22,910
years most of them know nothing about
security and they said different a Joe

95
00:08:22,910 --> 00:08:28,170
maturity and insufficient test
automation so one of the things with our

96
00:08:28,170 --> 00:08:32,659
product when we come in we integrate to
your test automation and so if you have

97
00:08:32,659 --> 00:08:36,179
test automation it's great because then
we can leverage off that for the

98
00:08:36,179 --> 00:08:41,380
security testing if you don't have test
automation well it's harder so that's

99
00:08:41,380 --> 00:08:47,160
another challenge and their security
department is really small right we're

100
00:08:47,160 --> 00:08:51,120
talking about a medium-sized insurance
company and they have about 45 people

101
00:08:51,120 --> 00:08:55,740
insecurity that includes network
security and you know policy and

102
00:08:55,740 --> 00:08:57,110
training and everything

103
00:08:57,110 --> 00:09:03,410
at the same time they're very strong
regulatory requirements so they need to

104
00:09:03,410 --> 00:09:07,949
meet regulation and a lot of
technologies for those who are the

105
00:09:07,950 --> 00:09:14,130
challenges and what we did and the first
thing and this will I repeat that thing

106
00:09:14,130 --> 00:09:20,180
a lot right it's all about creating the
right process because to do this right

107
00:09:20,180 --> 00:09:26,029
we need to get support from R&D or
develops and I'll tell you right away if

108
00:09:26,029 --> 00:09:31,029
you're trying to do that this is your
first challenge get the support from the

109
00:09:31,029 --> 00:09:35,660
R&D endeavor up if they're opposing
you're not gonna be sixty successful

110
00:09:35,660 --> 00:09:40,339
it's it is not gonna work this has to go
into their hands at the end of the day

111
00:09:40,339 --> 00:09:45,029
when you wanna do security and adderall
it has to be done by the people who

112
00:09:45,029 --> 00:09:49,079
build the application everyday not by
the security people you're just not

113
00:09:49,079 --> 00:09:54,489
going to be able to keep up but at the
same time the security wanted visibility

114
00:09:54,490 --> 00:10:02,040
so we created a committee that works
together thats insurance companies the

115
00:10:02,040 --> 00:10:07,819
committee's says we can call the
workgroup so they created a committee

116
00:10:07,820 --> 00:10:13,410
that meets once a week they're not very
fast a joke they do you like three four

117
00:10:13,410 --> 00:10:18,490
weeks Prince not continuous delivery and
talks about all the project and give a

118
00:10:18,490 --> 00:10:25,380
go no-go for going life but the same
time the all the daily work is managed

119
00:10:25,380 --> 00:10:30,390
by the R&D but the security can open and
look at all the findings so the security

120
00:10:30,390 --> 00:10:34,230
feels comfortable they have visibility
but they don't have to actually spend

121
00:10:34,230 --> 00:10:38,940
resources on a daily basis on it just
before the weekly committee they get a

122
00:10:38,940 --> 00:10:46,240
reports they can dive into the details
and make the decision we did very basic

123
00:10:46,240 --> 00:10:50,529
R&D training and when I say very basic
we're talking about like a couple of

124
00:10:50,529 --> 00:10:55,189
hours of security awareness the point
was not to make the developers security

125
00:10:55,190 --> 00:10:58,570
experts because we are going on that
that doesn't really work

126
00:10:59,209 --> 00:11:03,880
the point was to get them aware of
what's going to happen and why security

127
00:11:03,880 --> 00:11:07,959
importance of the first hour was fun you
know just look how I can a cure

128
00:11:08,529 --> 00:11:09,689
insurance company

129
00:11:09,690 --> 00:11:14,300
and then the second hour was well here
are some things like sequence action

130
00:11:14,300 --> 00:11:18,270
france's crippling you should try and
avoid but the point is that the product

131
00:11:18,270 --> 00:11:23,410
gives them the findings they just need
to be aware that they should care about

132
00:11:23,410 --> 00:11:31,240
that and then we created a risk palsy
and for them what they said was we want

133
00:11:31,240 --> 00:11:37,740
only high or critical vulnerabilities to
be blockers because this is as much as

134
00:11:37,740 --> 00:11:43,080
we can handle right now maybe later we
mature better and that's fine but for

135
00:11:43,080 --> 00:11:48,790
now so we built the process that
everybody everything to get tested if

136
00:11:48,790 --> 00:11:54,240
it's medium or lower it's gone going to
the queue for fixing but it doesn't

137
00:11:54,240 --> 00:12:00,250
block the process and higher critical
thats block and then we created multiple

138
00:12:00,250 --> 00:12:04,930
output channels meaning for every time
we have findings some can go in

139
00:12:04,930 --> 00:12:10,079
ticketing so the developers can get it
and in reports so the security guys can

140
00:12:10,080 --> 00:12:15,420
get it and there's an HTML and PDF and
everything for everybody that feels they

141
00:12:15,420 --> 00:12:18,329
need to know something because they're a
lot of stakeholders in a large company

142
00:12:18,330 --> 00:12:23,210
and they won't feel like they should get
the reports even though most of them

143
00:12:23,210 --> 00:12:32,640
don't look at the reality so we had
obviously like with any environment we

144
00:12:32,640 --> 00:12:37,540
have to integrate into the existing
agile that pops framework so they had

145
00:12:37,540 --> 00:12:46,240
Jenkins for CI pretty standard T eighty
percent of our customers do that pulls

146
00:12:46,240 --> 00:12:50,740
code from the Java and.net repositories
they had HP Quality Center for ticketing

147
00:12:50,740 --> 00:12:56,320
we don't care they had some static
analysis in place which was mainly for

148
00:12:56,320 --> 00:13:03,920
quality not for security wasn't our
product somebody else's product but

149
00:13:03,920 --> 00:13:08,709
funnily enough Dayton integrate that
into the continuous integration process

150
00:13:08,710 --> 00:13:13,280
because that static analysis created so
many false positives and they couldn't

151
00:13:13,280 --> 00:13:15,150
use right

152
00:13:15,150 --> 00:13:21,350
and so they have continuous integration
artifacts are deployed to a test

153
00:13:21,350 --> 00:13:25,720
environment that was very simple there's
a static environment meaning there's

154
00:13:25,720 --> 00:13:30,750
same server gets a new version gets
around the tests pretty straightforward

155
00:13:30,750 --> 00:13:36,180
there was almost no test automation
they're working on that but almost

156
00:13:36,180 --> 00:13:39,829
nothing again

157
00:13:39,830 --> 00:13:44,980
reality you go to customers do you do
test automation sure how much what

158
00:13:44,980 --> 00:13:53,630
percentage of your test is automated
three and so sometimes I say all of it

159
00:13:53,630 --> 00:13:58,420
and then you know their line but if if
you can get the seventy eighty percent

160
00:13:58,420 --> 00:14:06,180
you're doing really good majority of
people are way far than that we read

161
00:14:06,180 --> 00:14:15,079
about 70 80% and then all of the
functionality testing was manual so I we

162
00:14:15,080 --> 00:14:22,560
did so we integrated our products seeker
and timecode announces that its

163
00:14:22,560 --> 00:14:26,119
forerunner abilities we integrated to
launch from the continuous integration

164
00:14:26,120 --> 00:14:32,250
so every time there is a new build
product is launched for them that's

165
00:14:32,250 --> 00:14:37,810
about Wednesday integration with
automated and manual testing so this is

166
00:14:37,810 --> 00:14:44,790
important because their automated
testing is very limited and the way our

167
00:14:44,790 --> 00:14:50,290
product works is it leverages off the
testing to better land application we

168
00:14:50,290 --> 00:14:54,780
did it set up an initial setup where we
integrated with their manual testing so

169
00:14:54,780 --> 00:14:59,300
we recorded all their manual testing and
put it into a product which could then

170
00:14:59,300 --> 00:15:03,760
replay it because if you now change a
small piece of code you have to test it

171
00:15:03,760 --> 00:15:07,910
for security and if it's not covered by
the automated testing will not see that

172
00:15:07,910 --> 00:15:16,079
and then we created multiple outputs
rate so Jenkins integration so the test

173
00:15:16,080 --> 00:15:21,880
results go or no go to the Jenkins if
it's higher higher we break the build

174
00:15:21,880 --> 00:15:25,060
and so the Jenkins can break the build
like I don't think skin prick the bill

175
00:15:25,060 --> 00:15:28,290
even their test the little test
automation they had

176
00:15:28,290 --> 00:15:34,930
break the build only on very rare cases
and everything else or everything

177
00:15:34,930 --> 00:15:39,138
actually was pushed into the
backtracking ok one of the way our

178
00:15:39,139 --> 00:15:44,100
product works is that it's very intense
song on verifying their ability and

179
00:15:44,100 --> 00:15:50,029
creating exploit so you don't get false
positives you get just a small amount of

180
00:15:50,029 --> 00:15:55,290
actual findings and that is something
that the R&D can work with and then a

181
00:15:55,290 --> 00:16:00,509
PDF report was automatically generated
an email for a mailbox where I don't

182
00:16:00,509 --> 00:16:07,130
think anybody reviews it but it's
therefore it's there now they used it

183
00:16:07,130 --> 00:16:12,069
for the committee to once a week they
sit and look at all these reports from

184
00:16:12,069 --> 00:16:18,099
the different systems and they decide
can we push the next version right so

185
00:16:18,100 --> 00:16:22,449
even though things there were in high
and didn't break the security guy can

186
00:16:22,449 --> 00:16:27,569
say well I still don't feel comfortable
or whatever so that's you know that was

187
00:16:27,569 --> 00:16:33,420
11 case and this is how our jenkins
looks there these are the different

188
00:16:33,420 --> 00:16:41,529
systems you see all the green ones are
ones where we're fine these may be ones

189
00:16:41,529 --> 00:16:44,819
that we have problems and and broke and
so on

190
00:16:45,779 --> 00:16:58,149
gives a pretty nice you to the bill guys
ok time good so effective case was a

191
00:16:58,149 --> 00:17:04,599
little more interesting in the sense
that we got into a customer that new 0

192
00:17:04,599 --> 00:17:10,418
about security but was very mature in
terms of a challenge automation so that

193
00:17:10,419 --> 00:17:16,439
makes it I tell you are our deployment
there's more interesting but so it's a

194
00:17:16,439 --> 00:17:23,230
UK retailer ecommerce platform it's a
single platform it has flavors you know

195
00:17:23,230 --> 00:17:29,049
different brands but it's the same
platform really end their run of the

196
00:17:29,049 --> 00:17:34,290
mill a joke shop scrum base three weeks
Prince very strict enforcement I

197
00:17:34,290 --> 00:17:35,580
actually really like them

198
00:17:35,580 --> 00:17:38,750
day they work their way

199
00:17:38,750 --> 00:17:41,830
a jealous planned meaning if something
doesn't work at the end

200
00:17:41,830 --> 00:17:46,799
three weeks it's they don't say well
then this bill will come out on Tuesday

201
00:17:46,799 --> 00:17:52,860
instead of Monday know they come out on
Monday every three weeks now they're out

202
00:17:52,860 --> 00:17:58,139
and very strong animation I wouldn't say
a hundred percent but they had almost

203
00:17:58,140 --> 00:18:06,429
really close the main challenges were
they didn't know anything about security

204
00:18:06,429 --> 00:18:11,110
the reason they talk to us was because
they got hacked it got hacked on this

205
00:18:11,110 --> 00:18:19,000
really lame samples equal injections
sorry I mean they used to have dispensed

206
00:18:19,000 --> 00:18:21,820
company during the dentists twice a week

207
00:18:21,820 --> 00:18:27,439
appendix company that obviously can't
pen test because we ran our the first

208
00:18:27,440 --> 00:18:32,240
time we came for POC ran our product and
we found like 15 you know simple cross

209
00:18:32,240 --> 00:18:37,029
site scripting and sequins actions I I'm
not even talking about fancy stuff just

210
00:18:37,029 --> 00:18:42,990
as they show me a report from a month
then we have nothing really change the

211
00:18:42,990 --> 00:18:49,399
company so very limited security very
limited security staff they had two

212
00:18:49,399 --> 00:18:55,820
people in security and that included
physical security for their stores the

213
00:18:55,820 --> 00:18:59,428
guy with the head of security
information security or security

214
00:18:59,429 --> 00:19:08,360
ex-police and obviously to developers
didn't know anything about security and

215
00:19:08,360 --> 00:19:13,178
there was no process was nothing we came
in there was nothing but the good thing

216
00:19:13,179 --> 00:19:21,289
was that after the incident the guy that
I actually picked it up was the guy from

217
00:19:21,289 --> 00:19:25,990
the R&D from the democrats site and
after the security brought us into the

218
00:19:25,990 --> 00:19:31,559
PC and said about the product works and
we like the whole thing was run by R&D

219
00:19:31,559 --> 00:19:37,330
security was pushed out and that's the
best way to do it and when I say pushed

220
00:19:37,330 --> 00:19:40,570
out it's not the didn't care they knew
what was happening they were involved

221
00:19:40,570 --> 00:19:45,439
they got information on what we're
planning to do but they didn't interfere

222
00:19:45,440 --> 00:19:50,600
at all with the process they led the R&D
people drive it because the R&D people

223
00:19:50,600 --> 00:19:53,100
need to use it right

224
00:19:53,100 --> 00:20:01,070
so we created a workflow with R&D that
they liked it said we will do security

225
00:20:01,070 --> 00:20:06,490
testing just once a week we had a pretty
large platform the test took a few hours

226
00:20:06,490 --> 00:20:11,500
and because they were very heavy on
automation they didn't wanna slow down

227
00:20:11,500 --> 00:20:18,309
their regular automation just yet to
push it in between something it so they

228
00:20:18,309 --> 00:20:19,950
said we want to do

229
00:20:19,950 --> 00:20:24,480
security testing to the waivers Prince
worked three weeks two weeks they write

230
00:20:24,480 --> 00:20:28,929
new functionality third week is just
fixing in and making sure everything is

231
00:20:28,929 --> 00:20:32,590
in place so at the end of week one at
the end of week 2 over the weekend when

232
00:20:32,590 --> 00:20:39,129
they have more slots for automation they
would run the test and then at the third

233
00:20:39,130 --> 00:20:43,809
weekend which is the pre-built weekend
they would run the verification if this

234
00:20:43,809 --> 00:20:52,289
fails at breaking medium or higher and I
said very strict three weeks policy and

235
00:20:52,289 --> 00:20:57,440
that wasn't easy to get in it wasn't
easy to get in the thing that says the

236
00:20:57,440 --> 00:21:02,210
same way you pushed out of functionality
that doesn't work you push out of

237
00:21:02,210 --> 00:21:09,490
functionality that isn't secure it took
some persuasion again we're just working

238
00:21:09,490 --> 00:21:13,539
with our India's security warning and in
those meetings but eventually they

239
00:21:13,539 --> 00:21:17,350
agreed and this works this actually
works till today you'll see some of

240
00:21:17,350 --> 00:21:22,059
these files are about two years old this
still works and I i really like the way

241
00:21:22,059 --> 00:21:28,700
they work so week 1 week 2 finds new
vulnerabilities week 3 verified them

242
00:21:28,700 --> 00:21:34,400
something feels strictly out everything
on the side gets reported to the

243
00:21:34,400 --> 00:21:39,090
security group they don't have the
recent series they really don't look at

244
00:21:39,090 --> 00:21:44,059
it there's no committee they don't care
it's mostly for auditing purposes it's

245
00:21:44,059 --> 00:21:48,610
all stored answer you later their logs
you can see the reports back going years

246
00:21:48,610 --> 00:21:53,809
and you can make sure that the process
worked in the next incident that

247
00:21:53,809 --> 00:21:57,570
hopefully will never happen you'll be
able to go back and see that work has

248
00:21:57,570 --> 00:22:00,168
been done and things have been fixed and
so on

249
00:22:00,169 --> 00:22:06,480
so in terms of environment it's pretty
standard and Jenkins

250
00:22:06,480 --> 00:22:12,019
you know the usual suspect the one more
interesting challenges we had there was

251
00:22:12,019 --> 00:22:18,269
that everything was in the clout so they
don't have testing environments they

252
00:22:18,269 --> 00:22:23,320
have cloud testing environment and they
rebuild them every time it's not a

253
00:22:23,320 --> 00:22:28,230
single environment that gets the same
code but rather have the script it

254
00:22:28,230 --> 00:22:33,179
creates Amazon machines pushes the code
pushes the database pushes the market

255
00:22:33,179 --> 00:22:37,889
data and pushes everything set up an
environment runs a test on that senate

256
00:22:37,889 --> 00:22:43,639
races and I see more and more of this
now when we came there two years ago

257
00:22:43,639 --> 00:22:50,570
it's pretty impressive days becoming
more so each environment is for servers

258
00:22:50,570 --> 00:22:55,830
initially when we came they wanted to
put our products as part of their normal

259
00:22:55,830 --> 00:23:00,090
test environment and they said that the
full test took a few hours even for the

260
00:23:00,090 --> 00:23:04,499
weekend that was a little bit difficult
for them to push and so we decided to

261
00:23:04,499 --> 00:23:09,090
create a new environment for security
testing one of the benefits of these

262
00:23:09,090 --> 00:23:15,928
scripts it's very easy to spin a new
machine and so once a week the spin a

263
00:23:15,929 --> 00:23:19,869
new environment just for security
purposes they we had to help them they

264
00:23:19,869 --> 00:23:25,199
automatically deploy after the depot
their product they deploy our product on

265
00:23:25,200 --> 00:23:38,929
that and launch and launch that I ran
ahead of myself so we integrate their

266
00:23:38,929 --> 00:23:43,210
with selenium all of their observations
down with selenium so we recorded their

267
00:23:43,210 --> 00:23:48,389
selenium so in fact when they deploy
their existing testing environment with

268
00:23:48,389 --> 00:23:52,678
the latest test automation we deploy
something small just to record that

269
00:23:52,679 --> 00:23:58,239
traffic and get all the latest test data
and then we used that on our

270
00:23:58,239 --> 00:24:04,379
orchestrated environment than the tests
resolve get integrated back into the

271
00:24:04,379 --> 00:24:09,879
Jenkins there is an HTML reports and of
course we can break bills

272
00:24:11,230 --> 00:24:17,169
so that's that's the result of a single
run that's an HTML that gets embedded

273
00:24:17,169 --> 00:24:21,679
into the Jenkins you can click on it
from the Jenkins and the Jenkins parses

274
00:24:21,679 --> 00:24:27,840
there's a script in Jenkins that parses
this and if their medium higher critical

275
00:24:27,840 --> 00:24:35,750
vulnerabilities it will break and then
this is the PDF reports that our store

276
00:24:35,750 --> 00:24:42,820
and barely see anything but it just goes
a long way back and they can click this

277
00:24:42,820 --> 00:24:49,100
then they get their report so we
scripted with them all that have them

278
00:24:49,100 --> 00:24:51,799
build all that and they have all the
reports from there we started working

279
00:24:51,799 --> 00:24:53,010
there

280
00:24:53,010 --> 00:24:56,740
security can access this at any time the
security here don't want any access to

281
00:24:56,740 --> 00:25:01,860
the ticketing to the GAO did that's not
our world just give us a PDF report we

282
00:25:01,860 --> 00:25:18,820
can go and look questions ok so my last
case after case was a little bit tricky

283
00:25:18,820 --> 00:25:23,330
here just because it was a much bigger
organization until now we've dealt with

284
00:25:23,330 --> 00:25:31,260
one group you know pretty simple this
company's the very large e-commerce

285
00:25:31,260 --> 00:25:39,629
retailer among the top 10 the USS
they're very much or in every possible

286
00:25:39,630 --> 00:25:44,669
aspect you can see they are mature and
security they have a bunch of static

287
00:25:44,669 --> 00:25:49,250
analyzers and scanners and Penn tests
and everything you want you can think

288
00:25:49,250 --> 00:25:54,130
about and they're maturing terms of a
gel they've been doing this huge

289
00:25:54,130 --> 00:25:59,150
transformation process for a long time
like all the retailers if you don't know

290
00:25:59,150 --> 00:26:04,090
you see the second retailer Amazon is
driving everybody in retail to a job

291
00:26:04,090 --> 00:26:13,860
because they're killing everybody so
very advanced a job that pops process

292
00:26:13,860 --> 00:26:18,590
everything's orchestrated everything's
automated

293
00:26:19,149 --> 00:26:25,799
and one of the challenges that we seen
was it's a very complex site its

294
00:26:25,799 --> 00:26:31,989
hundreds of developers it's a couple of
dozen different groups that develop

295
00:26:31,989 --> 00:26:36,039
different parts of the front in
different parts of the back in and some

296
00:26:36,039 --> 00:26:41,759
of them have different processes and
different ownership and so each part

297
00:26:41,759 --> 00:26:46,149
needs to be dealt with the findings you
know when we look an application we live

298
00:26:46,149 --> 00:26:50,859
in an entire application but findings
may be related to different divisions in

299
00:26:50,859 --> 00:27:00,759
different departments and so that was
part of the challenge there so the first

300
00:27:00,759 --> 00:27:05,519
challenge was introduction of security
automation in QA and DevOps before that

301
00:27:05,519 --> 00:27:09,940
all the security tests were done either
at the development level is tapping our

302
00:27:09,940 --> 00:27:16,849
users or post-production by scanners and
security people the QA team that pops

303
00:27:16,849 --> 00:27:23,769
are not in the loop until we came the
second challenge as I said multiple

304
00:27:23,769 --> 00:27:29,330
components from multiple teams which
I'll get into a bit later but traded all

305
00:27:29,330 --> 00:27:33,609
kinds of problems in in getting the
results in the right path

306
00:27:34,759 --> 00:27:39,479
extremely dynamic testing environment
what do you mean so just like the

307
00:27:39,479 --> 00:27:43,320
previous example they had everything
orchestrated but unlike the previous

308
00:27:43,320 --> 00:27:47,809
example wasn't a nice set of four
servers that gets orchestrated their

309
00:27:47,809 --> 00:27:52,989
system could be one day 5 servers and
the next day twenty servers because they

310
00:27:52,989 --> 00:27:58,330
decided they need more search testing
and created 15 instances of the server

311
00:27:58,330 --> 00:28:07,489
and so on the other issue was day being
that they are a large retailer and

312
00:28:07,489 --> 00:28:11,950
Amazon is obviously their competitor
they don't want to use Amazon Cloud

313
00:28:11,950 --> 00:28:22,139
that's pretty common and so they saw
some of them some of them would just go

314
00:28:22,139 --> 00:28:26,019
to things like Google Microsoft they
built their own

315
00:28:28,450 --> 00:28:35,940
so they had their own CI their own cloud
which is essentially a big very true

316
00:28:35,940 --> 00:28:42,090
machine servers that can orchestrate new
machines and so on everything except for

317
00:28:42,090 --> 00:28:48,179
selenium which the used and I think 0
everything else he used words their own

318
00:28:48,180 --> 00:28:56,480
which we had to work with and as I said
very high we need a job rapid

319
00:28:56,480 --> 00:29:03,980
environment daily deals daily delivery
as as we see with modern things and so

320
00:29:03,980 --> 00:29:08,240
we needed a past that can be allow for
writing code in testing for

321
00:29:08,240 --> 00:29:15,870
functionality insecurity and delivering
in less than 24 hours obviously security

322
00:29:15,870 --> 00:29:20,199
could not be involved in the process of
previous example security didn't have

323
00:29:20,200 --> 00:29:24,850
the resources and don't want to be
involved but here the paces just just

324
00:29:24,850 --> 00:29:31,120
too fast they can't be involved they can
only add it and in the end we see more

325
00:29:31,120 --> 00:29:36,489
and more of this we just I just made a
customer or prospect last week that has

326
00:29:36,490 --> 00:29:40,860
over 300 pushes a day into production

327
00:29:45,030 --> 00:29:48,030
sorry

328
00:29:52,039 --> 00:29:57,090
this is not a result this is a challenge
this is you need to be able to write

329
00:29:57,090 --> 00:30:00,120
code and push it in less than 24 hours

330
00:30:00,120 --> 00:30:07,030
the problem is if you go to certain
technologies like static analysis some

331
00:30:07,030 --> 00:30:11,750
of their slow but even if they're fast
they generally tend to generate false

332
00:30:11,750 --> 00:30:16,660
positives at some degree some better
some worse but they generate false

333
00:30:16,660 --> 00:30:20,620
positives and it also generates things
that are more around now bad coding

334
00:30:20,620 --> 00:30:25,979
practices so you need somebody to look
at that and say this needs to be fixed

335
00:30:25,980 --> 00:30:31,700
and this can wait and this somebody's to
slow you need something that's more

336
00:30:31,700 --> 00:30:38,890
automated anything that's not fully
automated brakes on these speeds you can

337
00:30:38,890 --> 00:30:43,500
later and look at all the rest of the
things that you decided as not critical

338
00:30:43,500 --> 00:30:50,429
so I said you have to be able to go with
someone or abilities life as long as you

339
00:30:50,429 --> 00:30:53,120
have a process for dealing with them
later

340
00:30:53,120 --> 00:31:00,030
reasonable time frame but you can have
something that requires human interface

341
00:31:00,030 --> 00:31:13,480
interference in such short cycle is just
too slow so in this case we were brought

342
00:31:13,480 --> 00:31:18,200
in by the security was a nice story so
they have static analyzer and

343
00:31:18,200 --> 00:31:19,690
development which is used

344
00:31:19,690 --> 00:31:26,590
I don't know exactly what process and
they have black box scanner that the use

345
00:31:26,590 --> 00:31:33,049
in production and the black box scanner
found for her abilities so obviously the

346
00:31:33,049 --> 00:31:38,600
static analysis process wasn't good
enough just the way they sought thing

347
00:31:38,600 --> 00:31:44,110
they run into production is just to make
sure nothing slip through the cracks if

348
00:31:44,110 --> 00:31:49,178
it finds something it's a fail and that
was actually we met the customer and

349
00:31:49,179 --> 00:31:55,400
they told us the PRC will do with you is
do that in the process of getting things

350
00:31:55,400 --> 00:31:59,790
done if we find something after you guys
are done then you're not helpful

351
00:32:00,550 --> 00:32:04,540
we need to make sure that a black box
scanner doesn't find anything in

352
00:32:04,540 --> 00:32:11,490
production ever they're very
security-conscious so it was initiated

353
00:32:11,490 --> 00:32:18,280
by the security but they got DevOps on
board it has to be endemic and so we

354
00:32:18,280 --> 00:32:23,280
gave devil and QA training but the
training was not at all about security

355
00:32:23,280 --> 00:32:27,620
they don't know security they don't care
about security they don't actually deal

356
00:32:27,620 --> 00:32:31,449
with the security because they just run
a tool and the developers have to fix it

357
00:32:31,450 --> 00:32:38,150
right but the training was was on the
proccess why do you do why do you do it

358
00:32:38,150 --> 00:32:41,650
when does it break when doesn't break
when do you need to shower in the

359
00:32:41,650 --> 00:32:50,710
developers and so on and they want
security tests to run as part of the

360
00:32:50,710 --> 00:32:57,490
other testing so in the same environment
as not once a week but daily Bild over

361
00:32:57,490 --> 00:33:02,500
whenever you build and run functionality
testing UN security testing as well and

362
00:33:02,500 --> 00:33:07,410
that require some resources but they own
the cloud so they just pumped up the

363
00:33:07,410 --> 00:33:14,370
machine lebed to support that and for
them as I said medium already blocks if

364
00:33:14,370 --> 00:33:17,310
they have a medium finding which
shouldn't be in the first place because

365
00:33:17,310 --> 00:33:21,320
they were supposed to find it during the
early stages of development was static

366
00:33:21,320 --> 00:33:27,360
analysis but we know things slip through
the cracks so medium blocks the only

367
00:33:27,360 --> 00:33:32,090
thing they allowed was low if its low
they put it in

368
00:33:32,090 --> 00:33:38,320
backtracking and deal with it but medium
or higher breaks to build said from

369
00:33:38,320 --> 00:33:44,960
their diversification metrics was if we
see in production and he think we failed

370
00:33:44,960 --> 00:33:51,770
this has to resolve that until now we're
good and then security group just

371
00:33:51,770 --> 00:33:55,220
supervises the process and has
visibility to reports again that's the

372
00:33:55,220 --> 00:34:02,300
same message you get here every time so
as it said they have their own CI

373
00:34:02,300 --> 00:34:09,190
orchestration cloud everything we didn't
care that much because we have pre-built

374
00:34:09,190 --> 00:34:13,330
integration but seriously we have a
bunch of Web services can work with so

375
00:34:13,330 --> 00:34:20,650
so they do daily builds daily creation
of cloud environment orchestration build

376
00:34:20,650 --> 00:34:24,870
a whole system builder on testing build
our product into that run their own

377
00:34:24,870 --> 00:34:33,239
testing ran our product get results yet
a bunch of different animations part

378
00:34:33,239 --> 00:34:36,750
with selenium part with their own
scripts required some more integration

379
00:34:36,750 --> 00:34:37,590
on our part

380
00:34:37,590 --> 00:34:48,400
pretty standard and then as i said the
orchestration script that normally build

381
00:34:48,400 --> 00:34:54,040
their test environments were adapted to
include in that and if they created

382
00:34:54,040 --> 00:34:58,580
multiple load balanced instances than we
would appear at all of them to make sure

383
00:34:58,580 --> 00:35:06,690
that we don't miss anything for CIA
integration and every single automation

384
00:35:06,690 --> 00:35:12,510
test that ran was directed to run
through our product for recording so we

385
00:35:12,510 --> 00:35:15,880
saw everything that happens in
automation and we could do the full

386
00:35:15,880 --> 00:35:21,890
security test daily for whatever part
and part of this from their perspective

387
00:35:21,890 --> 00:35:23,129
again

388
00:35:23,130 --> 00:35:27,890
automation proper they don't want to
test everything every day just to

389
00:35:27,890 --> 00:35:32,640
changes but their scripts already
support that so they only run the new

390
00:35:32,640 --> 00:35:36,420
things and then we recorded test
whatever they decide to run their

391
00:35:36,420 --> 00:35:41,910
automation so that's another big issue
you might encounter if it's a big system

392
00:35:41,910 --> 00:35:47,450
you might not always want to test all of
it every day but if you have a mature

393
00:35:47,450 --> 00:35:54,460
customer from automation perspective
they already understand that and then we

394
00:35:54,460 --> 00:35:58,280
did JIRA bug tracking integration and
actually this press it was the first

395
00:35:58,280 --> 00:36:03,650
time and we developed this capability so
as I mentioned we have different they

396
00:36:03,650 --> 00:36:07,700
have different groups different teams
different parts and then what do you do

397
00:36:07,700 --> 00:36:12,089
with it if you just open a ticket who
deals with it so you need somebody to

398
00:36:12,090 --> 00:36:16,730
allocate ticket to the right group
that's a person and as we said people

399
00:36:16,730 --> 00:36:21,190
are not wanted in this process so we
actually developed capability to

400
00:36:21,190 --> 00:36:25,310
discover based on the classes are the
codebase

401
00:36:25,310 --> 00:36:29,890
which team it belongs to an
automatically allocate debt in the Giro

402
00:36:29,890 --> 00:36:35,170
so everything goes directly to where it
needs to go automatically I use the word

403
00:36:35,170 --> 00:36:41,220
automation a lot in this lecture but it
really is the only way to go about that

404
00:36:41,220 --> 00:36:45,819
and then they still run after they
deploy to production they run their

405
00:36:45,820 --> 00:36:52,250
black box scanner and for now we're
doing good that's it

406
00:36:52,790 --> 00:37:06,270
questions go ahead how long these
products he sits very different between

407
00:37:06,270 --> 00:37:11,509
the different cases the last one was
almost a year even though they're mature

408
00:37:11,510 --> 00:37:17,400
because they're a big company and it
takes longer than the second one the

409
00:37:17,400 --> 00:37:21,430
British retailer was three months
because they were in a hurry as they got

410
00:37:21,430 --> 00:37:30,230
hacked and that kind of helps and
insurance company between 88 well we're

411
00:37:30,230 --> 00:37:33,880
selling prices with them we got it took
us about half a year to get them up and

412
00:37:33,880 --> 00:37:38,020
running but only on some of the systems
and then we're still working with them

413
00:37:38,020 --> 00:37:44,580
and the rest of the systems how do we
know we're successful process wise or

414
00:37:44,580 --> 00:37:50,720
security wise the process now it's a
process wise you see you see when the

415
00:37:50,720 --> 00:37:55,379
process working you see when new code is
checked and it being tested by the

416
00:37:55,380 --> 00:38:04,390
system we have to find things they get
fixed they get free verified so only the

417
00:38:04,390 --> 00:38:08,779
last one and I said the last one have
very strict goals 0 findings with a

418
00:38:08,780 --> 00:38:14,800
backpack scanner which is I don't know
if it will last forever but you know

419
00:38:14,800 --> 00:38:19,720
it's it's a good goal and for now we are
we're doing well I think for other

420
00:38:19,720 --> 00:38:25,870
customers did just wanted to to see that
it works I think we all understand the

421
00:38:25,870 --> 00:38:30,670
Securities about risk management and if
you set a goal like I will never ever

422
00:38:30,670 --> 00:38:35,120
having their ability in May code again
we all know thats not a realistic go

423
00:38:37,630 --> 00:38:56,339
no mention we move from originally
wanted to do a daily test and we moved

424
00:38:56,339 --> 00:39:02,480
to a weekly test because for them the
resources required were so that it was

425
00:39:02,480 --> 00:39:07,410
too much for them and they wanted to do
it once a week and was enough for them

426
00:39:07,410 --> 00:39:19,730
from their internal process for doing in
fixing it more questions no questions

427
00:39:19,730 --> 00:39:26,480
about South Africa know it's great you
should go there it's much more fun than

428
00:39:26,480 --> 00:39:39,180
application security they're actually
pretty nice too cheap as they don't go

429
00:39:39,180 --> 00:39:41,950
after people most of the time

430
00:39:41,950 --> 00:39:47,058
good thank you all for coming especially
for the last talked of the day

