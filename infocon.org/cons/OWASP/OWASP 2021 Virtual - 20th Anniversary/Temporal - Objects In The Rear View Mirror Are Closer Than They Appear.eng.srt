1
00:00:01,410 --> 00:00:06,030
[Music]

2
00:00:08,080 --> 00:00:11,200
thank you so much for this uh

3
00:00:11,200 --> 00:00:13,200
great

4
00:00:13,200 --> 00:00:16,480
intro so i'm very happy to be here today

5
00:00:16,480 --> 00:00:18,080
with all of you

6
00:00:18,080 --> 00:00:21,359
in this great celebration of os 20th

7
00:00:21,359 --> 00:00:24,000
anniversary um

8
00:00:24,000 --> 00:00:27,359
i guess uh us has one more year before

9
00:00:27,359 --> 00:00:29,920
they can drink in the us but

10
00:00:29,920 --> 00:00:32,399
you are more than welcome to visit us

11
00:00:32,399 --> 00:00:33,920
all over the world

12
00:00:33,920 --> 00:00:36,320
so let's start talking about the big

13
00:00:36,320 --> 00:00:37,440
challenges

14
00:00:37,440 --> 00:00:39,440
from the past

15
00:00:39,440 --> 00:00:41,200
and unfortunately

16
00:00:41,200 --> 00:00:44,160
also the present that's trying to hold

17
00:00:44,160 --> 00:00:46,160
us back and how we need to make sure

18
00:00:46,160 --> 00:00:48,719
that we're moving forward

19
00:00:48,719 --> 00:00:50,399
to the future

20
00:00:50,399 --> 00:00:54,000
so to be honest we are

21
00:00:54,000 --> 00:00:56,239
in the future already we live in the

22
00:00:56,239 --> 00:00:58,960
future at the moment how do i know i

23
00:00:58,960 --> 00:01:00,160
know because

24
00:01:00,160 --> 00:01:03,840
our previous generations told us

25
00:01:03,840 --> 00:01:06,880
for example this is what

26
00:01:06,880 --> 00:01:07,920
was

27
00:01:07,920 --> 00:01:10,799
thought in the 1960s

28
00:01:10,799 --> 00:01:13,040
how a car would look like as you can see

29
00:01:13,040 --> 00:01:15,119
it is self-driving car

30
00:01:15,119 --> 00:01:16,400
um

31
00:01:16,400 --> 00:01:18,640
i guess that we're definitely in the

32
00:01:18,640 --> 00:01:20,400
future in that term

33
00:01:20,400 --> 00:01:22,400
um here is another

34
00:01:22,400 --> 00:01:25,280
a way in the 1930s

35
00:01:25,280 --> 00:01:27,600
how schools were imagined

36
00:01:27,600 --> 00:01:31,360
i guess we are almost there where

37
00:01:31,360 --> 00:01:34,240
were we using more podcasts

38
00:01:34,240 --> 00:01:36,960
and i think this is just a step from the

39
00:01:36,960 --> 00:01:38,720
current

40
00:01:38,720 --> 00:01:40,720
let's call it studying from home or

41
00:01:40,720 --> 00:01:42,880
school from home that we have in this uh

42
00:01:42,880 --> 00:01:44,240
era

43
00:01:44,240 --> 00:01:46,240
and the last one my favorite probably

44
00:01:46,240 --> 00:01:48,640
that proves that we're in the future um

45
00:01:48,640 --> 00:01:52,399
again from the 1930s

46
00:01:52,399 --> 00:01:54,799
i guess this is the first people who

47
00:01:54,799 --> 00:01:58,479
thought about smartphones um facetime

48
00:01:58,479 --> 00:02:01,360
so we're definitely in the future

49
00:02:01,360 --> 00:02:03,280
so why do i care about the past and the

50
00:02:03,280 --> 00:02:05,520
future or how the future looks from the

51
00:02:05,520 --> 00:02:08,479
past or the other way around so much

52
00:02:08,479 --> 00:02:11,200
so um as introduced i'm the head of

53
00:02:11,200 --> 00:02:13,760
security research in check marks i'm a

54
00:02:13,760 --> 00:02:15,520
security researcher i used to be a

55
00:02:15,520 --> 00:02:17,440
developer until i found out that i'm

56
00:02:17,440 --> 00:02:19,120
better at breaking things than building

57
00:02:19,120 --> 00:02:20,560
them

58
00:02:20,560 --> 00:02:23,280
i lead several oas projects including uh

59
00:02:23,280 --> 00:02:26,720
the api security one that is moving

60
00:02:26,720 --> 00:02:29,840
towards uh a new addition um in the next

61
00:02:29,840 --> 00:02:31,040
year

62
00:02:31,040 --> 00:02:33,120
and also i'm the founder of the apsec

63
00:02:33,120 --> 00:02:34,879
village in this court

64
00:02:34,879 --> 00:02:37,599
but to be honest i have one superpower

65
00:02:37,599 --> 00:02:39,360
and the superpower

66
00:02:39,360 --> 00:02:42,239
that is fueled mainly by my research in

67
00:02:42,239 --> 00:02:44,560
checkmarks is the ability to see

68
00:02:44,560 --> 00:02:45,840
mistakes

69
00:02:45,840 --> 00:02:47,760
and to look at the mistakes

70
00:02:47,760 --> 00:02:49,280
in the eyes of

71
00:02:49,280 --> 00:02:52,000
a researcher to see them how they look

72
00:02:52,000 --> 00:02:54,640
like in real life in the industry

73
00:02:54,640 --> 00:02:56,480
trying to think what changed from past

74
00:02:56,480 --> 00:02:58,640
mistakes to current mistakes

75
00:02:58,640 --> 00:03:01,519
and definitely thinking about

76
00:03:01,519 --> 00:03:04,159
how we're seeing the trends move forward

77
00:03:04,159 --> 00:03:05,920
and what we can do to avoid these

78
00:03:05,920 --> 00:03:09,200
mistakes and problems in the future

79
00:03:09,200 --> 00:03:12,879
so let's take a very quick glimpse on

80
00:03:12,879 --> 00:03:14,640
memory boulevard

81
00:03:14,640 --> 00:03:17,599
how we got from

82
00:03:17,599 --> 00:03:20,080
around 2000 from the non-virtualized

83
00:03:20,080 --> 00:03:23,519
however to to where we are uh today in

84
00:03:23,519 --> 00:03:27,360
the very modern cloud native era

85
00:03:27,360 --> 00:03:28,560
so

86
00:03:28,560 --> 00:03:30,480
after having uh

87
00:03:30,480 --> 00:03:32,959
actual hardware in actual rooms with

88
00:03:32,959 --> 00:03:35,920
actual shelves from ireland usually and

89
00:03:35,920 --> 00:03:38,239
making sure that we have all the fire

90
00:03:38,239 --> 00:03:41,200
extinguishers and air conditions

91
00:03:41,200 --> 00:03:43,200
um

92
00:03:43,200 --> 00:03:46,159
fixed to that to the lowest temperature

93
00:03:46,159 --> 00:03:48,239
we moved forward

94
00:03:48,239 --> 00:03:49,360
to

95
00:03:49,360 --> 00:03:51,680
the era of virtualization

96
00:03:51,680 --> 00:03:53,680
virtualization did not really cut all

97
00:03:53,680 --> 00:03:55,200
the cables

98
00:03:55,200 --> 00:03:57,360
we moved later to infrastructure as a

99
00:03:57,360 --> 00:03:59,439
service i think that amazon is is

100
00:03:59,439 --> 00:04:01,920
probably the best example for that in

101
00:04:01,920 --> 00:04:04,159
this era

102
00:04:04,159 --> 00:04:05,280
obviously

103
00:04:05,280 --> 00:04:06,400
and

104
00:04:06,400 --> 00:04:08,640
others followed later

105
00:04:08,640 --> 00:04:13,280
um then around 2009 we saw the wake of

106
00:04:13,280 --> 00:04:15,760
platforms as a service

107
00:04:15,760 --> 00:04:18,399
followed by open source

108
00:04:18,399 --> 00:04:20,160
infrastructure

109
00:04:20,160 --> 00:04:22,479
as a service like openstack

110
00:04:22,479 --> 00:04:25,280
later we saw open source platforms as a

111
00:04:25,280 --> 00:04:28,479
service and then um just to make sure

112
00:04:28,479 --> 00:04:30,000
that we managed to bounce into the

113
00:04:30,000 --> 00:04:31,040
future

114
00:04:31,040 --> 00:04:33,520
we saw containers right in time for all

115
00:04:33,520 --> 00:04:36,080
the micro services that we needed

116
00:04:36,080 --> 00:04:37,919
and this is obviously a very very big

117
00:04:37,919 --> 00:04:38,880
portion

118
00:04:38,880 --> 00:04:41,120
of how cloud native architecture is

119
00:04:41,120 --> 00:04:43,120
built this day

120
00:04:43,120 --> 00:04:44,960
um i think there is

121
00:04:44,960 --> 00:04:48,160
another way to look at this history um

122
00:04:48,160 --> 00:04:50,479
this is my way of looking at it

123
00:04:50,479 --> 00:04:52,400
and this is the buzzword of the year

124
00:04:52,400 --> 00:04:54,000
along the hills

125
00:04:54,000 --> 00:04:56,639
you think that buzzwords move business

126
00:04:56,639 --> 00:04:59,520
more than modern technology these days

127
00:04:59,520 --> 00:05:01,680
so let's see the buzzwords of the year

128
00:05:01,680 --> 00:05:04,880
so around 2005 application security was

129
00:05:04,880 --> 00:05:07,360
the buzzword of the year um around the

130
00:05:07,360 --> 00:05:11,440
time that uh checkmarks was founded

131
00:05:11,440 --> 00:05:13,199
and it's not a mistake i think that

132
00:05:13,199 --> 00:05:15,440
every buzzword brings a lot of vendors

133
00:05:15,440 --> 00:05:16,560
around it

134
00:05:16,560 --> 00:05:20,479
um around 2010 open source security

135
00:05:20,479 --> 00:05:23,400
became the buzzword of the year around

136
00:05:23,400 --> 00:05:26,240
2015 container security

137
00:05:26,240 --> 00:05:27,280
um

138
00:05:27,280 --> 00:05:29,440
around the same time also serverless

139
00:05:29,440 --> 00:05:32,960
security 2019 brought the api security

140
00:05:32,960 --> 00:05:35,919
to become a very very common buzzword

141
00:05:35,919 --> 00:05:37,120
and this is

142
00:05:37,120 --> 00:05:40,160
uh this was one of the reasons that um

143
00:05:40,160 --> 00:05:41,520
the

144
00:05:41,520 --> 00:05:42,639
osp

145
00:05:42,639 --> 00:05:47,039
api security top 10 was founded

146
00:05:47,039 --> 00:05:48,880
and then the last

147
00:05:48,880 --> 00:05:50,800
component

148
00:05:50,800 --> 00:05:54,000
at the moment is uh infrastructure is

149
00:05:54,000 --> 00:05:54,880
called

150
00:05:54,880 --> 00:05:57,199
or some people say everything is code

151
00:05:57,199 --> 00:06:00,560
basically and the security around it so

152
00:06:00,560 --> 00:06:03,680
every buzzword along along the years

153
00:06:03,680 --> 00:06:06,000
brought many many vendors with a similar

154
00:06:06,000 --> 00:06:07,360
challenge

155
00:06:07,360 --> 00:06:09,199
all of them wanted to give

156
00:06:09,199 --> 00:06:11,520
a very good solution for the security

157
00:06:11,520 --> 00:06:12,560
they are

158
00:06:12,560 --> 00:06:13,680
handling

159
00:06:13,680 --> 00:06:15,600
but they had to choose they had to

160
00:06:15,600 --> 00:06:17,440
choose if they want to give

161
00:06:17,440 --> 00:06:19,280
an early solution

162
00:06:19,280 --> 00:06:21,520
or an actionable solution

163
00:06:21,520 --> 00:06:24,720
and let me explain what i mean here

164
00:06:24,720 --> 00:06:26,960
um

165
00:06:27,199 --> 00:06:29,440
the shift left approach which is also

166
00:06:29,440 --> 00:06:31,120
known as the developer first approach

167
00:06:31,120 --> 00:06:33,280
this is something that a lot of us is

168
00:06:33,280 --> 00:06:36,800
automatically moved towards these days

169
00:06:36,800 --> 00:06:38,880
and there are very very good reasons for

170
00:06:38,880 --> 00:06:40,720
that we see that the results are shown

171
00:06:40,720 --> 00:06:42,160
early

172
00:06:42,160 --> 00:06:44,880
early means easier easier means cheaper

173
00:06:44,880 --> 00:06:46,000
to fix

174
00:06:46,000 --> 00:06:47,919
and also it's better for security

175
00:06:47,919 --> 00:06:50,560
education now a developer did something

176
00:06:50,560 --> 00:06:52,479
very early finds out there is an error

177
00:06:52,479 --> 00:06:54,639
or a mistake and they can still fix it

178
00:06:54,639 --> 00:06:56,639
and learn from the experience which is

179
00:06:56,639 --> 00:06:57,759
great

180
00:06:57,759 --> 00:06:58,639
but

181
00:06:58,639 --> 00:07:00,479
not everything is great with early

182
00:07:00,479 --> 00:07:02,400
because there are very high

183
00:07:02,400 --> 00:07:04,960
percentages of false positives everyone

184
00:07:04,960 --> 00:07:06,560
who ran who ran

185
00:07:06,560 --> 00:07:08,720
solution knows that

186
00:07:08,720 --> 00:07:10,720
and also the reason the results are a

187
00:07:10,720 --> 00:07:12,400
big general and i will show in a second

188
00:07:12,400 --> 00:07:14,960
what i mean about that

189
00:07:14,960 --> 00:07:16,720
the other option

190
00:07:16,720 --> 00:07:20,000
is to go for actionable results this is

191
00:07:20,000 --> 00:07:22,319
kind of the the right the

192
00:07:22,319 --> 00:07:24,880
the shift right approach when you have

193
00:07:24,880 --> 00:07:27,120
results that arrive much later in the

194
00:07:27,120 --> 00:07:29,440
process sometimes in runtime

195
00:07:29,440 --> 00:07:31,840
sometimes when it's too late and

196
00:07:31,840 --> 00:07:35,039
obviously not a very good solution

197
00:07:35,039 --> 00:07:36,880
the good thing is that they have a very

198
00:07:36,880 --> 00:07:39,360
low of relatively low percentage of

199
00:07:39,360 --> 00:07:41,840
false positives and the results are

200
00:07:41,840 --> 00:07:44,800
specific and actionable this is the

201
00:07:44,800 --> 00:07:46,319
first challenge this is the first

202
00:07:46,319 --> 00:07:48,240
challenge of every vendor and obviously

203
00:07:48,240 --> 00:07:50,560
the first challenge of every company

204
00:07:50,560 --> 00:07:52,879
that uses a security product they need

205
00:07:52,879 --> 00:07:55,039
to choose if they want something early

206
00:07:55,039 --> 00:07:56,479
or actionable

207
00:07:56,479 --> 00:07:58,560
and here here's an example of how early

208
00:07:58,560 --> 00:08:00,319
versus actionable looks like in real

209
00:08:00,319 --> 00:08:01,440
life

210
00:08:01,440 --> 00:08:04,720
um let's say that the code was written

211
00:08:04,720 --> 00:08:07,120
not it did not run yet not even all the

212
00:08:07,120 --> 00:08:09,520
code just out of the code it was written

213
00:08:09,520 --> 00:08:12,479
tested and got this result the result

214
00:08:12,479 --> 00:08:14,240
says the open source package in your

215
00:08:14,240 --> 00:08:15,599
applications

216
00:08:15,599 --> 00:08:18,160
manifest is found vulnerable to cve

217
00:08:18,160 --> 00:08:20,800
something something

218
00:08:20,800 --> 00:08:24,160
this is not a real cv i hope anyway

219
00:08:24,160 --> 00:08:25,440
um

220
00:08:25,440 --> 00:08:27,199
i have a lot of questions after this

221
00:08:27,199 --> 00:08:30,080
message is my app really exploitable

222
00:08:30,080 --> 00:08:32,240
do i really use that in an in an

223
00:08:32,240 --> 00:08:34,719
exploitable way how do i prioritize the

224
00:08:34,719 --> 00:08:37,120
fix of it maybe it's okay maybe it's not

225
00:08:37,120 --> 00:08:38,958
should i wait for a patch should i fix

226
00:08:38,958 --> 00:08:40,479
it myself

227
00:08:40,479 --> 00:08:42,719
maybe i should use something else

228
00:08:42,719 --> 00:08:46,640
these are many many questions that i get

229
00:08:47,360 --> 00:08:50,000
but i do get the result early

230
00:08:50,000 --> 00:08:52,720
now on the adult side of the spectrum

231
00:08:52,720 --> 00:08:54,720
there is the actionable result

232
00:08:54,720 --> 00:08:56,640
for example i'm running a solution it's

233
00:08:56,640 --> 00:08:58,800
not in the code anymore it's in runtime

234
00:08:58,800 --> 00:09:01,040
running solution tested and i actually

235
00:09:01,040 --> 00:09:03,839
get the following message your method

236
00:09:03,839 --> 00:09:06,320
let's say important stuff is getting

237
00:09:06,320 --> 00:09:08,320
tainted data from the exploitable open

238
00:09:08,320 --> 00:09:11,120
source vulnerability the same one

239
00:09:11,120 --> 00:09:13,360
obviously i have much more information

240
00:09:13,360 --> 00:09:15,440
here it is definitely a problem i know

241
00:09:15,440 --> 00:09:18,480
that i see that it is getting data data

242
00:09:18,480 --> 00:09:20,640
i should definitely patch or fix or use

243
00:09:20,640 --> 00:09:23,040
something else but

244
00:09:23,040 --> 00:09:25,519
maybe it's months since i actually wrote

245
00:09:25,519 --> 00:09:27,680
this code it's the first build we're

246
00:09:27,680 --> 00:09:29,600
doing the first time we're running it

247
00:09:29,600 --> 00:09:31,440
it's the first detection

248
00:09:31,440 --> 00:09:33,839
back to the drawing board what does that

249
00:09:33,839 --> 00:09:37,680
mean for me it might be a huge waste of

250
00:09:37,680 --> 00:09:40,160
time and obviously money

251
00:09:40,160 --> 00:09:42,640
so this is a very very clear challenge

252
00:09:42,640 --> 00:09:43,920
um

253
00:09:43,920 --> 00:09:46,320
this is a polling question that i give

254
00:09:46,320 --> 00:09:47,519
to a lot of

255
00:09:47,519 --> 00:09:48,959
people i meet

256
00:09:48,959 --> 00:09:51,360
and what kind of results do you prefer

257
00:09:51,360 --> 00:09:53,279
i'll be happy if some of you will write

258
00:09:53,279 --> 00:09:55,040
your opinions

259
00:09:55,040 --> 00:09:56,000
in the

260
00:09:56,000 --> 00:09:58,480
in the slack channel so we can see it

261
00:09:58,480 --> 00:09:59,600
later

262
00:09:59,600 --> 00:10:01,760
but i'm going to tell you the results

263
00:10:01,760 --> 00:10:03,680
that i usually see

264
00:10:03,680 --> 00:10:05,839
so

265
00:10:06,000 --> 00:10:07,680
when i ask people what kind of results

266
00:10:07,680 --> 00:10:09,760
do you prefer early in general latent

267
00:10:09,760 --> 00:10:12,880
specific or maybe not sure

268
00:10:12,880 --> 00:10:16,640
usually most of the answers are around a

269
00:10:16,640 --> 00:10:17,760
and c

270
00:10:17,760 --> 00:10:21,120
a is because we learned that being the

271
00:10:21,120 --> 00:10:22,720
very very early in the process of

272
00:10:22,720 --> 00:10:25,680
shifting left is the right thing to do

273
00:10:25,680 --> 00:10:27,279
i tend to agree

274
00:10:27,279 --> 00:10:28,880
and not sure

275
00:10:28,880 --> 00:10:30,959
also it's a good answer because many

276
00:10:30,959 --> 00:10:33,360
people are not really sure there are

277
00:10:33,360 --> 00:10:36,240
pros and cons for each of them

278
00:10:36,240 --> 00:10:37,920
i can tell you that for big

279
00:10:37,920 --> 00:10:40,640
organizations where they have dedicated

280
00:10:40,640 --> 00:10:42,480
professional personnel

281
00:10:42,480 --> 00:10:45,839
most of them prefer to start

282
00:10:45,839 --> 00:10:48,560
to have results early in general just

283
00:10:48,560 --> 00:10:50,079
because they have the

284
00:10:50,079 --> 00:10:52,800
the firepower to handle that

285
00:10:52,800 --> 00:10:55,600
the triage and false positives etc

286
00:10:55,600 --> 00:10:58,560
other organizations that are sometimes

287
00:10:58,560 --> 00:11:00,160
smaller or less professional around

288
00:11:00,160 --> 00:11:02,160
security or have less

289
00:11:02,160 --> 00:11:04,959
manpower around

290
00:11:04,959 --> 00:11:09,360
this type of task you usually

291
00:11:09,360 --> 00:11:11,040
tend to choose

292
00:11:11,040 --> 00:11:12,959
more latent specific

293
00:11:12,959 --> 00:11:16,160
um no surprising

294
00:11:16,160 --> 00:11:17,600
so that was the first challenge the

295
00:11:17,600 --> 00:11:20,399
second challenge i want to talk about

296
00:11:20,399 --> 00:11:23,920
is the fragmentation in the market

297
00:11:23,920 --> 00:11:26,839
so we saw along the history of the

298
00:11:26,839 --> 00:11:29,200
technology how things move so in the

299
00:11:29,200 --> 00:11:31,839
past we had our applications later we

300
00:11:31,839 --> 00:11:33,920
had different services or even micro

301
00:11:33,920 --> 00:11:35,519
services that's fine

302
00:11:35,519 --> 00:11:37,600
but we had a very very clear solution

303
00:11:37,600 --> 00:11:40,399
for that we had a sas solution or we had

304
00:11:40,399 --> 00:11:42,880
some sort of a code scanner that is

305
00:11:42,880 --> 00:11:44,320
going to take

306
00:11:44,320 --> 00:11:45,760
take a look at my code and tell me

307
00:11:45,760 --> 00:11:46,880
what's wrong

308
00:11:46,880 --> 00:11:49,279
and what should i fix

309
00:11:49,279 --> 00:11:51,440
that was great for the past

310
00:11:51,440 --> 00:11:54,399
what happens now when i add open source

311
00:11:54,399 --> 00:11:56,560
i have a lot of open source components

312
00:11:56,560 --> 00:11:59,600
now and these components need some sort

313
00:11:59,600 --> 00:12:01,440
of dedicated tool to check them

314
00:12:01,440 --> 00:12:04,000
obviously

315
00:12:04,000 --> 00:12:05,360
we call that software software

316
00:12:05,360 --> 00:12:07,360
composition analysis

317
00:12:07,360 --> 00:12:09,360
also we have containers

318
00:12:09,360 --> 00:12:11,040
how do i know that my containers are

319
00:12:11,040 --> 00:12:13,839
fine this is somewhat related to open

320
00:12:13,839 --> 00:12:15,600
source but i still need to know that my

321
00:12:15,600 --> 00:12:19,120
containers are okay that i'm using

322
00:12:19,120 --> 00:12:20,800
clean containers

323
00:12:20,800 --> 00:12:23,360
also there is some sort of orchestration

324
00:12:23,360 --> 00:12:25,279
layer that is running everything because

325
00:12:25,279 --> 00:12:26,959
everything there is okay i need to check

326
00:12:26,959 --> 00:12:28,079
that also

327
00:12:28,079 --> 00:12:30,880
what about my apis api can be handled in

328
00:12:30,880 --> 00:12:32,480
the code in api gateways and the

329
00:12:32,480 --> 00:12:34,480
infrastructure so many places

330
00:12:34,480 --> 00:12:36,880
is my api cq

331
00:12:36,880 --> 00:12:39,200
and uh the last building block that we

332
00:12:39,200 --> 00:12:41,279
see is the infrastructure that now moves

333
00:12:41,279 --> 00:12:44,320
to become an infrastructure as code with

334
00:12:44,320 --> 00:12:45,279
uh

335
00:12:45,279 --> 00:12:47,839
with tools like uh terraform and cloud

336
00:12:47,839 --> 00:12:50,320
formation etc we have everything in

337
00:12:50,320 --> 00:12:51,120
there

338
00:12:51,120 --> 00:12:54,240
i need to somehow test that as well

339
00:12:54,240 --> 00:12:55,600
so

340
00:12:55,600 --> 00:12:58,240
each one of those needs some sort of

341
00:12:58,240 --> 00:13:00,399
dedicated tool really

342
00:13:00,399 --> 00:13:02,079
so we all know the joke of how many

343
00:13:02,079 --> 00:13:04,320
engineers you need to replace one light

344
00:13:04,320 --> 00:13:05,519
bulb

345
00:13:05,519 --> 00:13:07,600
my variation here is how many vendors

346
00:13:07,600 --> 00:13:10,000
does it take to secure a cloud native or

347
00:13:10,000 --> 00:13:12,480
modern architecture architecture these

348
00:13:12,480 --> 00:13:15,040
days this is a real challenge

349
00:13:15,040 --> 00:13:17,040
which brings me to the next polling

350
00:13:17,040 --> 00:13:18,800
question how many security vendors

351
00:13:18,800 --> 00:13:20,560
either commercial or open source

352
00:13:20,560 --> 00:13:21,760
solutions

353
00:13:21,760 --> 00:13:23,279
do you need to cover the different

354
00:13:23,279 --> 00:13:24,720
components of your cloud native

355
00:13:24,720 --> 00:13:27,360
architecture

356
00:13:27,600 --> 00:13:30,399
again this is a question that i ask a

357
00:13:30,399 --> 00:13:32,959
lot of time when i'm giving lectures or

358
00:13:32,959 --> 00:13:34,560
even talking to

359
00:13:34,560 --> 00:13:37,200
csos or other upset professionals in the

360
00:13:37,200 --> 00:13:39,040
organizations

361
00:13:39,040 --> 00:13:41,360
um

362
00:13:41,360 --> 00:13:44,959
i'll give you 10 seconds to think

363
00:13:45,600 --> 00:13:49,920
okay so most of the answers are uh c and

364
00:13:49,920 --> 00:13:52,880
d usually uh i think more than 50 of the

365
00:13:52,880 --> 00:13:55,120
answers are usually around more than

366
00:13:55,120 --> 00:13:57,040
five or they don't even know i'm not

367
00:13:57,040 --> 00:13:57,920
sure

368
00:13:57,920 --> 00:14:00,320
um the lucky ones that somehow manage to

369
00:14:00,320 --> 00:14:03,519
aggregate things are around b

370
00:14:03,519 --> 00:14:06,160
and those who say one to two are very

371
00:14:06,160 --> 00:14:09,600
very few and usually very very wrong

372
00:14:09,600 --> 00:14:11,120
maybe not all of them i don't maybe

373
00:14:11,120 --> 00:14:13,600
there is some sort of magic solution

374
00:14:13,600 --> 00:14:14,639
but

375
00:14:14,639 --> 00:14:17,440
this is what we see usually and this is

376
00:14:17,440 --> 00:14:18,959
this is a really issue this is a real

377
00:14:18,959 --> 00:14:20,560
problem in a real pain

378
00:14:20,560 --> 00:14:23,600
i think that everyone hates to to juggle

379
00:14:23,600 --> 00:14:25,360
between very

380
00:14:25,360 --> 00:14:27,680
various tools and different approaches

381
00:14:27,680 --> 00:14:29,440
and different solutions

382
00:14:29,440 --> 00:14:32,320
for problems that are part of the same

383
00:14:32,320 --> 00:14:34,160
issue

384
00:14:34,160 --> 00:14:36,240
the third challenge the third challenge

385
00:14:36,240 --> 00:14:37,360
is known

386
00:14:37,360 --> 00:14:40,480
both to parents and children

387
00:14:40,480 --> 00:14:44,480
we call it legalization um

388
00:14:44,480 --> 00:14:46,480
i think that every parent knows that the

389
00:14:46,480 --> 00:14:50,079
the how the substance uh in the universe

390
00:14:50,079 --> 00:14:52,959
is a lego brick

391
00:14:53,040 --> 00:14:54,959
but it doesn't really matter how hard

392
00:14:54,959 --> 00:14:56,720
and secure it is

393
00:14:56,720 --> 00:14:59,199
every child and to be honest

394
00:14:59,199 --> 00:15:02,480
every malicious malicious attacker also

395
00:15:02,480 --> 00:15:03,920
knows that it's not the brick that

396
00:15:03,920 --> 00:15:06,959
important but the way you build it

397
00:15:06,959 --> 00:15:09,519
and the way the other bricks hold it and

398
00:15:09,519 --> 00:15:11,040
support it

399
00:15:11,040 --> 00:15:12,639
so um

400
00:15:12,639 --> 00:15:15,120
here's an example

401
00:15:15,120 --> 00:15:17,199
here is a brick

402
00:15:17,199 --> 00:15:19,040
application code this is one of the

403
00:15:19,040 --> 00:15:21,760
bricks i'm going to scan it like in the

404
00:15:21,760 --> 00:15:22,959
past

405
00:15:22,959 --> 00:15:25,120
and i see that the sensitive data is

406
00:15:25,120 --> 00:15:27,199
written to an s3 bucket

407
00:15:27,199 --> 00:15:28,720
this is the the knowledge i have about

408
00:15:28,720 --> 00:15:31,680
this brick is it okay is it not okay i

409
00:15:31,680 --> 00:15:32,639
mean

410
00:15:32,639 --> 00:15:34,480
this is where data is written to these

411
00:15:34,480 --> 00:15:36,639
days right into some sort of bucket or

412
00:15:36,639 --> 00:15:38,079
storage device

413
00:15:38,079 --> 00:15:40,560
um is it supposed to be there

414
00:15:40,560 --> 00:15:42,480
i guess so i mean what's the problem

415
00:15:42,480 --> 00:15:45,279
here no problem that i can see

416
00:15:45,279 --> 00:15:46,800
in a different scan

417
00:15:46,800 --> 00:15:48,800
of a different block of the of the

418
00:15:48,800 --> 00:15:51,120
infrastructure i scan again and i see

419
00:15:51,120 --> 00:15:54,079
that an s3 bucket is open to the public

420
00:15:54,079 --> 00:15:55,279
um

421
00:15:55,279 --> 00:15:57,839
okay i don't know if that is an issue

422
00:15:57,839 --> 00:16:00,240
i'm looking at this specific brick

423
00:16:00,240 --> 00:16:01,759
i'm seeing that the bucket is open to

424
00:16:01,759 --> 00:16:03,279
the public

425
00:16:03,279 --> 00:16:05,279
that's fine i mean some buckets should

426
00:16:05,279 --> 00:16:07,279
be open to the public obviously for

427
00:16:07,279 --> 00:16:09,279
example if i hold

428
00:16:09,279 --> 00:16:11,839
i don't know the graphics of the logo of

429
00:16:11,839 --> 00:16:14,320
my company or it can be profile pictures

430
00:16:14,320 --> 00:16:16,720
or whatever

431
00:16:16,720 --> 00:16:18,639
some buckets are open to the public and

432
00:16:18,639 --> 00:16:20,079
that's fine

433
00:16:20,079 --> 00:16:21,680
where is the glue between that and the

434
00:16:21,680 --> 00:16:23,199
glue between them is some sort of

435
00:16:23,199 --> 00:16:26,000
correlation if i correlate these results

436
00:16:26,000 --> 00:16:28,320
i can see that sensitive data is written

437
00:16:28,320 --> 00:16:31,120
to an open s3 bucket this is obviously a

438
00:16:31,120 --> 00:16:32,800
very very problematic

439
00:16:32,800 --> 00:16:35,120
leak of information

440
00:16:35,120 --> 00:16:37,040
another example

441
00:16:37,040 --> 00:16:39,199
in the first case we have

442
00:16:39,199 --> 00:16:41,120
application code

443
00:16:41,120 --> 00:16:43,199
this is my first brick or my standalone

444
00:16:43,199 --> 00:16:45,040
brick and i see the data is read and

445
00:16:45,040 --> 00:16:48,639
written to and from mountain storage

446
00:16:48,639 --> 00:16:50,959
if i look at kubernetes configuration i

447
00:16:50,959 --> 00:16:52,880
can see that the storage has

448
00:16:52,880 --> 00:16:53,759
uh

449
00:16:53,759 --> 00:16:55,920
read and write permissions

450
00:16:55,920 --> 00:16:58,399
i mean when i look at them um

451
00:16:58,399 --> 00:17:00,720
separately it looks fine to be honest

452
00:17:00,720 --> 00:17:02,880
even if i look at them correlated it

453
00:17:02,880 --> 00:17:04,880
seems fine

454
00:17:04,880 --> 00:17:07,439
but in a very very similar case i can

455
00:17:07,439 --> 00:17:09,919
see an application code that the data is

456
00:17:09,919 --> 00:17:12,400
read from mounted storage

457
00:17:12,400 --> 00:17:14,559
and i've seen the core in the kubernetes

458
00:17:14,559 --> 00:17:16,319
configuration the nostalgia has read and

459
00:17:16,319 --> 00:17:18,079
write permissions

460
00:17:18,079 --> 00:17:20,720
so i agree this is not as serious as the

461
00:17:20,720 --> 00:17:23,439
data leak we saw in the first example

462
00:17:23,439 --> 00:17:25,839
but if i have the glue between these

463
00:17:25,839 --> 00:17:28,720
bricks the mesh up the correlation

464
00:17:28,720 --> 00:17:30,960
i can definitely see that there is an

465
00:17:30,960 --> 00:17:33,520
unnecessary write permissions

466
00:17:33,520 --> 00:17:35,840
in case two and this is something i

467
00:17:35,840 --> 00:17:37,120
cannot see

468
00:17:37,120 --> 00:17:38,720
in the way that

469
00:17:38,720 --> 00:17:41,440
we're currently testing and looking at

470
00:17:41,440 --> 00:17:42,320
our

471
00:17:42,320 --> 00:17:44,320
applications and this is the third

472
00:17:44,320 --> 00:17:45,440
challenge

473
00:17:45,440 --> 00:17:47,200
what we see here is that application

474
00:17:47,200 --> 00:17:50,160
security is not only application code

475
00:17:50,160 --> 00:17:52,320
security separated from infrastructure

476
00:17:52,320 --> 00:17:54,080
as good security separated from third

477
00:17:54,080 --> 00:17:56,000
party components etc

478
00:17:56,000 --> 00:17:58,840
we need a holistic approach here

479
00:17:58,840 --> 00:18:01,760
and i'm going to propose a vision here

480
00:18:01,760 --> 00:18:05,039
that we're currently uh playing with

481
00:18:05,039 --> 00:18:07,520
and this is a single repo to hold them

482
00:18:07,520 --> 00:18:08,480
all

483
00:18:08,480 --> 00:18:11,120
we know that git today holds everything

484
00:18:11,120 --> 00:18:15,399
right all the components we saw before

485
00:18:15,760 --> 00:18:17,679
we want to create some sort of

486
00:18:17,679 --> 00:18:20,960
application security testing platform or

487
00:18:20,960 --> 00:18:23,840
measure player or correlation layer or

488
00:18:23,840 --> 00:18:26,320
whatever we want to call it

489
00:18:26,320 --> 00:18:29,200
to scan and to make sure that we see not

490
00:18:29,200 --> 00:18:31,760
only the components but the glue between

491
00:18:31,760 --> 00:18:34,400
them everything between each and every

492
00:18:34,400 --> 00:18:35,840
component

493
00:18:35,840 --> 00:18:37,600
should be meshed up

494
00:18:37,600 --> 00:18:40,480
to have this correlation in results and

495
00:18:40,480 --> 00:18:43,440
understanding of what's happening though

496
00:18:43,440 --> 00:18:46,240
the mesha player can give me

497
00:18:46,240 --> 00:18:48,320
the connection of different things for

498
00:18:48,320 --> 00:18:50,559
example exploit explainability of open

499
00:18:50,559 --> 00:18:52,400
source vulnerabilities this is the

500
00:18:52,400 --> 00:18:55,039
example we saw in the beginning with the

501
00:18:55,039 --> 00:18:58,240
made up cve so now i have not only open

502
00:18:58,240 --> 00:19:00,320
source and software composition analysis

503
00:19:00,320 --> 00:19:03,039
but i can mesh it with the sas results

504
00:19:03,039 --> 00:19:06,240
and see how it actually affects my code

505
00:19:06,240 --> 00:19:08,160
i can look at overly permissive docker

506
00:19:08,160 --> 00:19:10,640
configuration for example when i scan

507
00:19:10,640 --> 00:19:13,919
sas and docker and i mesh the mesh

508
00:19:13,919 --> 00:19:15,039
results

509
00:19:15,039 --> 00:19:18,880
ssrf that affects kubernetes for example

510
00:19:18,880 --> 00:19:21,840
kubernetes management api suddenly if i

511
00:19:21,840 --> 00:19:24,240
scan all of them i have the scan of code

512
00:19:24,240 --> 00:19:27,039
by sas i can look at my kubernetes files

513
00:19:27,039 --> 00:19:29,760
i can look at my api security

514
00:19:29,760 --> 00:19:31,200
if i can mesh them together and

515
00:19:31,200 --> 00:19:33,039
correlate them together i can find that

516
00:19:33,039 --> 00:19:36,160
kind of specific

517
00:19:36,240 --> 00:19:39,360
complex to detect issues and find them

518
00:19:39,360 --> 00:19:40,400
quickly

519
00:19:40,400 --> 00:19:42,480
um it's important to say that it's how

520
00:19:42,480 --> 00:19:44,960
to detect but these are exactly the

521
00:19:44,960 --> 00:19:47,679
vulnerabilities that malicious attackers

522
00:19:47,679 --> 00:19:49,679
are looking for they don't really care

523
00:19:49,679 --> 00:19:52,160
about how things go behind the scenes

524
00:19:52,160 --> 00:19:54,799
behind the scenes is our problem their

525
00:19:54,799 --> 00:19:57,440
problem is to try and just find a weak

526
00:19:57,440 --> 00:19:59,760
link and they usually do

527
00:19:59,760 --> 00:20:02,400
more examples overly broad permissions

528
00:20:02,400 --> 00:20:04,720
or unprotected sensitive resources if i

529
00:20:04,720 --> 00:20:07,200
have access to my infrastructure's code

530
00:20:07,200 --> 00:20:10,080
files and also to the code itself

531
00:20:10,080 --> 00:20:12,240
i can make these connections

532
00:20:12,240 --> 00:20:14,559
um and the examples go on and on

533
00:20:14,559 --> 00:20:16,320
obviously and we see that the

534
00:20:16,320 --> 00:20:18,159
exploitability of imported container

535
00:20:18,159 --> 00:20:20,000
layers vulnerabilities

536
00:20:20,000 --> 00:20:22,640
become suddenly simpler when we have

537
00:20:22,640 --> 00:20:24,960
vision into code and open source and

538
00:20:24,960 --> 00:20:26,240
containers

539
00:20:26,240 --> 00:20:27,760
and a lot of

540
00:20:27,760 --> 00:20:29,760
things that run in lambdas are also

541
00:20:29,760 --> 00:20:31,120
relevant we can see serverless

542
00:20:31,120 --> 00:20:33,840
vulnerabilities and misconfigurations

543
00:20:33,840 --> 00:20:36,080
when we look at the code of the lambdas

544
00:20:36,080 --> 00:20:38,080
and the infrastructures code

545
00:20:38,080 --> 00:20:41,360
configurations so basically

546
00:20:41,360 --> 00:20:43,679
we see everything we have not only the

547
00:20:43,679 --> 00:20:45,760
code we suddenly have the context and

548
00:20:45,760 --> 00:20:48,400
the code is something that we always had

549
00:20:48,400 --> 00:20:50,720
when we shift left but the context

550
00:20:50,720 --> 00:20:53,039
was always missing and only appeared

551
00:20:53,039 --> 00:20:54,480
when we shifted

552
00:20:54,480 --> 00:20:55,679
right

553
00:20:55,679 --> 00:20:58,720
so a unified ast mesh up solves these

554
00:20:58,720 --> 00:21:00,400
challenges because we have a single

555
00:21:00,400 --> 00:21:03,120
polymorphic engine that points to a repo

556
00:21:03,120 --> 00:21:04,559
with all application codes and

557
00:21:04,559 --> 00:21:06,480
infrastructures code

558
00:21:06,480 --> 00:21:08,400
we see different engines running behind

559
00:21:08,400 --> 00:21:10,799
the scenes and connecting everything

560
00:21:10,799 --> 00:21:12,799
and the the first challenge we talked

561
00:21:12,799 --> 00:21:14,400
about the stubborn trade-off of early

562
00:21:14,400 --> 00:21:17,440
and actionable it disappears all is code

563
00:21:17,440 --> 00:21:19,360
so the mesh up is the glue that combines

564
00:21:19,360 --> 00:21:21,280
all results and supports both

565
00:21:21,280 --> 00:21:22,960
requirements of shift left and

566
00:21:22,960 --> 00:21:24,080
actionable

567
00:21:24,080 --> 00:21:25,280
results

568
00:21:25,280 --> 00:21:26,960
the annoying market fragmentation we

569
00:21:26,960 --> 00:21:29,039
talked about it's not needed anymore

570
00:21:29,039 --> 00:21:30,799
because the mesh up aggregates or even

571
00:21:30,799 --> 00:21:33,520
unifies the results to give us

572
00:21:33,520 --> 00:21:36,559
better context and also new results that

573
00:21:36,559 --> 00:21:38,960
we never had before

574
00:21:38,960 --> 00:21:39,919
and

575
00:21:39,919 --> 00:21:42,880
this vision shows

576
00:21:42,880 --> 00:21:44,480
also

577
00:21:44,480 --> 00:21:47,280
a kind of a bonus i think when we look

578
00:21:47,280 --> 00:21:48,960
at the stakeholders and the time it

579
00:21:48,960 --> 00:21:52,159
takes so if in the past we could look at

580
00:21:52,159 --> 00:21:54,159
an application code

581
00:21:54,159 --> 00:21:56,799
after it was coded and builded

582
00:21:56,799 --> 00:21:59,360
by developers then we could run some

583
00:21:59,360 --> 00:22:01,360
sort of vulnerability scan

584
00:22:01,360 --> 00:22:04,240
um then maybe the devops would need to

585
00:22:04,240 --> 00:22:06,159
run some sort of container security

586
00:22:06,159 --> 00:22:08,159
protection or testing to check the

587
00:22:08,159 --> 00:22:09,280
containers

588
00:22:09,280 --> 00:22:12,640
and then until production we need i.t to

589
00:22:12,640 --> 00:22:15,280
make sure that the net network is okay

590
00:22:15,280 --> 00:22:17,360
again it's multiple products multiple

591
00:22:17,360 --> 00:22:20,159
processes multiple stakeholders and

592
00:22:20,159 --> 00:22:21,919
we're missing the correlated results

593
00:22:21,919 --> 00:22:24,240
that we saw earlier

594
00:22:24,240 --> 00:22:27,120
in the future um

595
00:22:27,120 --> 00:22:29,679
i'm hoping that and not in the next 20

596
00:22:29,679 --> 00:22:31,360
years but less than that

597
00:22:31,360 --> 00:22:32,880
we're going to see

598
00:22:32,880 --> 00:22:33,919
um

599
00:22:33,919 --> 00:22:36,080
a one click and one click that starts

600
00:22:36,080 --> 00:22:38,080
everything and all the and all the scans

601
00:22:38,080 --> 00:22:40,400
and testing done in the same place

602
00:22:40,400 --> 00:22:42,880
so we can see uh

603
00:22:42,880 --> 00:22:45,840
as soon as the code is built or

604
00:22:45,840 --> 00:22:47,120
or

605
00:22:47,120 --> 00:22:49,360
started to be built by developers we can

606
00:22:49,360 --> 00:22:51,280
look at the application code for

607
00:22:51,280 --> 00:22:54,400
vulnerability scanned by sas or sca look

608
00:22:54,400 --> 00:22:55,840
at the containers look at the

609
00:22:55,840 --> 00:22:57,600
infrastructure's code

610
00:22:57,600 --> 00:23:00,559
and have all the information in a single

611
00:23:00,559 --> 00:23:02,559
product in a single process

612
00:23:02,559 --> 00:23:04,880
by a single stakeholder and basically

613
00:23:04,880 --> 00:23:06,640
have here the synergy that we like so

614
00:23:06,640 --> 00:23:07,679
much

615
00:23:07,679 --> 00:23:10,080
to talk about

616
00:23:10,080 --> 00:23:11,600
um so

617
00:23:11,600 --> 00:23:14,159
just to summarize i think that we

618
00:23:14,159 --> 00:23:16,240
definitely see a vital future

619
00:23:16,240 --> 00:23:17,200
and

620
00:23:17,200 --> 00:23:19,120
i think that our summary needs to be

621
00:23:19,120 --> 00:23:21,120
what the developers and security staff

622
00:23:21,120 --> 00:23:22,000
wants

623
00:23:22,000 --> 00:23:23,919
and we know that we want seamless

624
00:23:23,919 --> 00:23:25,600
integration because we don't want to

625
00:23:25,600 --> 00:23:27,840
handle so many vandals we want very

626
00:23:27,840 --> 00:23:30,799
intuitive point and go point at a single

627
00:23:30,799 --> 00:23:32,240
single repo

628
00:23:32,240 --> 00:23:33,520
and go

629
00:23:33,520 --> 00:23:36,000
we want early results shift left we want

630
00:23:36,000 --> 00:23:38,799
actionable results shift right and to be

631
00:23:38,799 --> 00:23:40,720
honest we want to eat the cake and have

632
00:23:40,720 --> 00:23:43,360
it too especially if it's an awesome

633
00:23:43,360 --> 00:23:46,400
20th anniversary cake

634
00:23:46,400 --> 00:23:47,360
so

635
00:23:47,360 --> 00:23:50,799
thank you so much and i hope to see you

636
00:23:50,799 --> 00:23:52,480
and your questions

637
00:23:52,480 --> 00:23:54,640
in the slack channel that is currently

638
00:23:54,640 --> 00:23:58,720
on the screen thank you

