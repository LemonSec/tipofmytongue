1
00:00:00,220 --> 00:00:06,160
[Music]

2
00:00:08,000 --> 00:00:11,360
uh okay uh hello everyone i hope you can

3
00:00:11,360 --> 00:00:12,960
hear me i hope you can see my

4
00:00:12,960 --> 00:00:15,839
presentation so as michelle said i'm

5
00:00:15,839 --> 00:00:18,800
going to tell a bit more about security

6
00:00:18,800 --> 00:00:21,199
of your build and deployment environment

7
00:00:21,199 --> 00:00:23,760
so this is not an application security

8
00:00:23,760 --> 00:00:27,039
topic as such but it is very closely

9
00:00:27,039 --> 00:00:29,599
linked to application security so i

10
00:00:29,599 --> 00:00:31,599
think that it's worth spreading the

11
00:00:31,599 --> 00:00:32,800
message

12
00:00:32,800 --> 00:00:36,160
to all security people and developers uh

13
00:00:36,160 --> 00:00:40,320
who are members of this os community

14
00:00:40,320 --> 00:00:41,200
so

15
00:00:41,200 --> 00:00:44,719
michel already provided an introduction

16
00:00:44,719 --> 00:00:47,920
of of myself uh however what i think is

17
00:00:47,920 --> 00:00:50,480
important just two more things to add so

18
00:00:50,480 --> 00:00:53,039
i'm the second practitioner so i believe

19
00:00:53,039 --> 00:00:55,440
that developers freedom and security can

20
00:00:55,440 --> 00:00:57,199
go well together

21
00:00:57,199 --> 00:00:58,399
however

22
00:00:58,399 --> 00:01:01,440
freedom doesn't mean that everyone can

23
00:01:01,440 --> 00:01:03,600
go

24
00:01:03,600 --> 00:01:06,080
happily without them security controls i

25
00:01:06,080 --> 00:01:08,640
still believe that developers freedom

26
00:01:08,640 --> 00:01:10,840
requires some security

27
00:01:10,840 --> 00:01:13,200
controls just to make sure that our

28
00:01:13,200 --> 00:01:15,680
ultimate product is secure and its

29
00:01:15,680 --> 00:01:18,000
integrity is on the right level

30
00:01:18,000 --> 00:01:19,680
uh i'm also a head of application

31
00:01:19,680 --> 00:01:21,840
security in a global company however

32
00:01:21,840 --> 00:01:23,520
what's important to mention that's

33
00:01:23,520 --> 00:01:26,320
opinions which i'm presenting today on

34
00:01:26,320 --> 00:01:27,920
my own

35
00:01:27,920 --> 00:01:29,759
if you want to follow me you can just

36
00:01:29,759 --> 00:01:33,360
check my twitter and medium account

37
00:01:33,360 --> 00:01:36,159
my handle is security ksl

38
00:01:36,159 --> 00:01:37,600
and i will be also sharing my

39
00:01:37,600 --> 00:01:39,360
presentation there my presentation has a

40
00:01:39,360 --> 00:01:41,600
lot of hyperlinks with it within it so

41
00:01:41,600 --> 00:01:43,200
if you believe that

42
00:01:43,200 --> 00:01:46,159
uh you are interested in them just feel

43
00:01:46,159 --> 00:01:48,240
free to go there and and check the

44
00:01:48,240 --> 00:01:50,159
presentation

45
00:01:50,159 --> 00:01:53,040
uh so just a bit of background why i'm

46
00:01:53,040 --> 00:01:55,520
even presenting on the topic

47
00:01:55,520 --> 00:01:58,960
the reason is very simple so

48
00:01:58,960 --> 00:02:00,479
historically

49
00:02:00,479 --> 00:02:01,600
we had

50
00:02:01,600 --> 00:02:03,119
a

51
00:02:03,119 --> 00:02:04,960
very well defined change management

52
00:02:04,960 --> 00:02:07,200
process so it all started with change

53
00:02:07,200 --> 00:02:09,360
being requested then we had some sign

54
00:02:09,360 --> 00:02:11,920
offs we had some security reviews then

55
00:02:11,920 --> 00:02:13,760
the change was obviously developed by a

56
00:02:13,760 --> 00:02:17,120
group of developers uh then

57
00:02:17,120 --> 00:02:19,280
we had a build process peer review

58
00:02:19,280 --> 00:02:21,520
process a lot of tests from from

59
00:02:21,520 --> 00:02:24,400
different angles so security qa unit

60
00:02:24,400 --> 00:02:27,280
test integration test uats and so on and

61
00:02:27,280 --> 00:02:30,000
only after all these steps were

62
00:02:30,000 --> 00:02:31,200
completed

63
00:02:31,200 --> 00:02:34,239
uh we uh went to our tested

64
00:02:34,239 --> 00:02:37,120
administrator and we we asked him or her

65
00:02:37,120 --> 00:02:39,280
to move this change to environment of

66
00:02:39,280 --> 00:02:41,599
our choice so it was either qa or

67
00:02:41,599 --> 00:02:43,680
pre-production or production

68
00:02:43,680 --> 00:02:46,720
dependent on the on our process however

69
00:02:46,720 --> 00:02:48,560
what is important that this process was

70
00:02:48,560 --> 00:02:50,959
very well structured with a lot of

71
00:02:50,959 --> 00:02:53,280
manual or semi-manual work

72
00:02:53,280 --> 00:02:55,680
however in agile change management

73
00:02:55,680 --> 00:02:57,200
management process

74
00:02:57,200 --> 00:02:59,519
it's a bit different the reason is that

75
00:02:59,519 --> 00:03:02,640
we rely a lot on automation because we

76
00:03:02,640 --> 00:03:04,560
have a lot of changes which are

77
00:03:04,560 --> 00:03:07,760
happening frequently so we can no longer

78
00:03:07,760 --> 00:03:11,040
uh rely on the cynos manual reviews and

79
00:03:11,040 --> 00:03:12,080
so on

80
00:03:12,080 --> 00:03:13,760
uh we

81
00:03:13,760 --> 00:03:15,760
implement all of these things inside our

82
00:03:15,760 --> 00:03:17,599
pipeline and we believe that our

83
00:03:17,599 --> 00:03:20,879
pipeline will do a good job for us so

84
00:03:20,879 --> 00:03:22,800
apparently

85
00:03:22,800 --> 00:03:24,799
ci tool of your choice

86
00:03:24,799 --> 00:03:26,879
will do a lot of things for us like

87
00:03:26,879 --> 00:03:30,080
testing security testing and some other

88
00:03:30,080 --> 00:03:32,480
things as well it can also deploy things

89
00:03:32,480 --> 00:03:34,080
to production environment or any other

90
00:03:34,080 --> 00:03:36,159
environment of your choice obviously

91
00:03:36,159 --> 00:03:37,599
that

92
00:03:37,599 --> 00:03:40,000
strictly depends on your organization

93
00:03:40,000 --> 00:03:42,640
risk appetite

94
00:03:42,640 --> 00:03:44,319
so how do we make sure that our

95
00:03:44,319 --> 00:03:46,159
application is secure so in this

96
00:03:46,159 --> 00:03:49,519
traditional model it was

97
00:03:49,519 --> 00:03:51,760
relying heavily on the step that every

98
00:03:51,760 --> 00:03:54,400
process is manually reviewed there is a

99
00:03:54,400 --> 00:03:57,040
sign-off that some false from security

100
00:03:57,040 --> 00:03:59,519
or some business user will tell you okay

101
00:03:59,519 --> 00:04:01,439
that is something i approve please

102
00:04:01,439 --> 00:04:02,480
proceed

103
00:04:02,480 --> 00:04:04,640
with that change and we also rely on the

104
00:04:04,640 --> 00:04:06,000
fact that we have this trusted

105
00:04:06,000 --> 00:04:08,959
administrator who knows exactly what he

106
00:04:08,959 --> 00:04:10,879
or she should be doing and he moves the

107
00:04:10,879 --> 00:04:14,560
change to production uh environment uh

108
00:04:14,560 --> 00:04:18,399
without any any any uh

109
00:04:18,399 --> 00:04:20,639
let's say reform problems

110
00:04:20,639 --> 00:04:22,560
now in agile devops

111
00:04:22,560 --> 00:04:26,000
it's it's a bit different because uh

112
00:04:26,000 --> 00:04:28,080
most of the time we have everything as a

113
00:04:28,080 --> 00:04:31,040
code so our code is our let's say count

114
00:04:31,040 --> 00:04:33,120
jewel in this configuration because if

115
00:04:33,120 --> 00:04:35,440
we can change the code you can pretty

116
00:04:35,440 --> 00:04:37,199
much impact not only your application

117
00:04:37,199 --> 00:04:40,800
but also the environment and even the

118
00:04:40,800 --> 00:04:42,479
pipeline configuration

119
00:04:42,479 --> 00:04:44,639
so we need to rely on the thing that

120
00:04:44,639 --> 00:04:47,440
code is reviewed so no unauthorized

121
00:04:47,440 --> 00:04:49,840
change are introduced that tools can

122
00:04:49,840 --> 00:04:52,639
detect security issues or some other

123
00:04:52,639 --> 00:04:55,040
developers mistakes and that process is

124
00:04:55,040 --> 00:04:56,000
fully

125
00:04:56,000 --> 00:04:59,120
repeatable so every build and every

126
00:04:59,120 --> 00:05:01,039
deployment is exactly the same and

127
00:05:01,039 --> 00:05:03,199
probably the most important thing that

128
00:05:03,199 --> 00:05:06,160
humans do not have a direct uncontrolled

129
00:05:06,160 --> 00:05:09,120
access to the environments

130
00:05:09,120 --> 00:05:10,479
because obviously if we are building

131
00:05:10,479 --> 00:05:12,400
that thing and if we want our process to

132
00:05:12,400 --> 00:05:15,120
be fully repeatable we cannot really

133
00:05:15,120 --> 00:05:17,759
uh introduce humans

134
00:05:17,759 --> 00:05:20,240
to it because simply humans make things

135
00:05:20,240 --> 00:05:23,199
manual and there is a chance that

136
00:05:23,199 --> 00:05:24,800
they will

137
00:05:24,800 --> 00:05:27,120
do this process a bit differently

138
00:05:27,120 --> 00:05:27,840
so

139
00:05:27,840 --> 00:05:29,280
jumping to the

140
00:05:29,280 --> 00:05:32,160
main uh reason why i'm

141
00:05:32,160 --> 00:05:34,000
discussing this topic today is that

142
00:05:34,000 --> 00:05:35,199
obviously

143
00:05:35,199 --> 00:05:38,160
if you can bypass or circumvent any of

144
00:05:38,160 --> 00:05:40,320
these steps which you can see in the

145
00:05:40,320 --> 00:05:43,199
violet box we have a problem because if

146
00:05:43,199 --> 00:05:45,440
we are able to circumvent any of these

147
00:05:45,440 --> 00:05:46,400
steps

148
00:05:46,400 --> 00:05:49,600
uh malicious insider or some developer

149
00:05:49,600 --> 00:05:52,240
who is not that familiar with security

150
00:05:52,240 --> 00:05:54,400
can basically impact the final shape and

151
00:05:54,400 --> 00:05:56,720
security posture of our application by

152
00:05:56,720 --> 00:06:01,199
modifying uh its configuration

153
00:06:01,199 --> 00:06:04,000
so what is the problem statement is that

154
00:06:04,000 --> 00:06:05,039
uh

155
00:06:05,039 --> 00:06:07,039
for the last couple of years we focused

156
00:06:07,039 --> 00:06:09,919
a lot on the topics related to security

157
00:06:09,919 --> 00:06:12,080
inside the pipeline so all the tools

158
00:06:12,080 --> 00:06:15,759
like sas dust sca and so on but it seems

159
00:06:15,759 --> 00:06:16,639
that

160
00:06:16,639 --> 00:06:18,880
we had a lot of situations when the

161
00:06:18,880 --> 00:06:21,680
pipeline itself wasn't totally secured

162
00:06:21,680 --> 00:06:23,759
so when i started let's say researching

163
00:06:23,759 --> 00:06:25,759
a bit on that topic i called someone

164
00:06:25,759 --> 00:06:27,840
with some of my friends who are also in

165
00:06:27,840 --> 00:06:30,720
security industry and i asked them look

166
00:06:30,720 --> 00:06:32,720
do you know any guideline how to secure

167
00:06:32,720 --> 00:06:35,840
pipeline properly and you know all the

168
00:06:35,840 --> 00:06:37,280
all the

169
00:06:37,280 --> 00:06:39,199
answers which i received were something

170
00:06:39,199 --> 00:06:41,280
like ah you know you just need to limit

171
00:06:41,280 --> 00:06:43,440
the permissions you just need to enable

172
00:06:43,440 --> 00:06:45,520
logging and and that was pretty much it

173
00:06:45,520 --> 00:06:46,880
right so

174
00:06:46,880 --> 00:06:49,360
by that time there was no

175
00:06:49,360 --> 00:06:51,840
guideline how you should secure the

176
00:06:51,840 --> 00:06:54,080
pipeline properly and what are the

177
00:06:54,080 --> 00:06:55,919
things that you should care of

178
00:06:55,919 --> 00:06:58,479
what is even worse is that

179
00:06:58,479 --> 00:06:59,919
some of

180
00:06:59,919 --> 00:07:02,720
uh teams some of companies they would do

181
00:07:02,720 --> 00:07:04,479
a configuration review

182
00:07:04,479 --> 00:07:06,560
for example of your ci component in the

183
00:07:06,560 --> 00:07:09,039
pipeline but the problem is that it only

184
00:07:09,039 --> 00:07:11,120
gives a false sense of security

185
00:07:11,120 --> 00:07:12,960
simply because you are reviewing only

186
00:07:12,960 --> 00:07:16,639
one of the multiple components

187
00:07:16,639 --> 00:07:18,800
of your entire pipeline right so we are

188
00:07:18,800 --> 00:07:20,960
for example reviewing your ci tool not

189
00:07:20,960 --> 00:07:23,599
paying enough attention to your scm tool

190
00:07:23,599 --> 00:07:25,360
to your uh

191
00:07:25,360 --> 00:07:27,120
i don't know cloud environment where

192
00:07:27,120 --> 00:07:28,800
you're going to deploy it or to your

193
00:07:28,800 --> 00:07:32,560
artifact management system

194
00:07:32,560 --> 00:07:34,800
so if you go to google and if you google

195
00:07:34,800 --> 00:07:38,240
cicd pipeline security

196
00:07:38,240 --> 00:07:41,120
that's pretty much how it looked like so

197
00:07:41,120 --> 00:07:44,080
in early 2020 it was very hard to find

198
00:07:44,080 --> 00:07:45,840
something about that topic so you can

199
00:07:45,840 --> 00:07:47,440
only find

200
00:07:47,440 --> 00:07:49,919
some few articles here and there

201
00:07:49,919 --> 00:07:51,759
just briefly touching that topic or

202
00:07:51,759 --> 00:07:53,120
different

203
00:07:53,120 --> 00:07:55,840
areas of the topic later on it became

204
00:07:55,840 --> 00:07:56,840
more

205
00:07:56,840 --> 00:07:59,440
popular and probably starting from q1

206
00:07:59,440 --> 00:08:01,919
2021 it became even more popular after

207
00:08:01,919 --> 00:08:04,479
solarwinds attack when people

208
00:08:04,479 --> 00:08:06,800
realized that

209
00:08:06,800 --> 00:08:09,120
security of the pipeline and integrity

210
00:08:09,120 --> 00:08:11,440
of all the artifacts is extremely

211
00:08:11,440 --> 00:08:13,919
important simply because

212
00:08:13,919 --> 00:08:15,759
cicd pipeline

213
00:08:15,759 --> 00:08:17,039
uh can

214
00:08:17,039 --> 00:08:19,520
impact the ultimate shape and ultimate

215
00:08:19,520 --> 00:08:21,599
security posture of your

216
00:08:21,599 --> 00:08:22,720
uh

217
00:08:22,720 --> 00:08:24,800
of your product of your application so

218
00:08:24,800 --> 00:08:27,840
currently we have a lot of

219
00:08:27,840 --> 00:08:30,800
articles tools guidelines which can give

220
00:08:30,800 --> 00:08:34,240
us some information so even recently a

221
00:08:34,240 --> 00:08:37,279
couple of new ones like salsa or cyber

222
00:08:37,279 --> 00:08:38,799
cyber supply chain risk management

223
00:08:38,799 --> 00:08:40,799
practices from nist

224
00:08:40,799 --> 00:08:42,399
that is something which is definitely

225
00:08:42,399 --> 00:08:44,240
worth having a look at

226
00:08:44,240 --> 00:08:46,000
however they are still quite high level

227
00:08:46,000 --> 00:08:47,600
and what i'm planning to show in the

228
00:08:47,600 --> 00:08:50,080
presentation uh is

229
00:08:50,080 --> 00:08:51,680
some of the actual things which you can

230
00:08:51,680 --> 00:08:53,760
do right away and you can implement in

231
00:08:53,760 --> 00:08:58,240
your organization pretty much next week

232
00:08:58,320 --> 00:08:59,680
so i think that the

233
00:08:59,680 --> 00:09:01,440
question that we need to ask ourselves

234
00:09:01,440 --> 00:09:03,519
is what can go wrong so what are the

235
00:09:03,519 --> 00:09:04,959
components of

236
00:09:04,959 --> 00:09:06,000
let's say

237
00:09:06,000 --> 00:09:07,519
software development

238
00:09:07,519 --> 00:09:11,120
tool chain and what that can happen for

239
00:09:11,120 --> 00:09:13,760
each and every of them

240
00:09:13,760 --> 00:09:15,279
this is a picture which is coming

241
00:09:15,279 --> 00:09:18,080
actually from that salsa framework which

242
00:09:18,080 --> 00:09:20,800
i totally recommend you to to to read

243
00:09:20,800 --> 00:09:23,839
because it also gives a nice perspective

244
00:09:23,839 --> 00:09:25,600
of what are the threats

245
00:09:25,600 --> 00:09:28,320
but as you can see here

246
00:09:28,320 --> 00:09:30,240
uh

247
00:09:30,240 --> 00:09:33,600
people from south standard they

248
00:09:33,600 --> 00:09:35,839
presented some high level threats at

249
00:09:35,839 --> 00:09:37,519
each stage of

250
00:09:37,519 --> 00:09:39,120
software uh

251
00:09:39,120 --> 00:09:41,360
development tool chain

252
00:09:41,360 --> 00:09:43,040
so

253
00:09:43,040 --> 00:09:44,800
now we can discuss because you can tell

254
00:09:44,800 --> 00:09:47,040
me look but my pipeline or my tool chain

255
00:09:47,040 --> 00:09:48,800
looks a bit different because i'm

256
00:09:48,800 --> 00:09:51,120
relying on cloud or i'm using

257
00:09:51,120 --> 00:09:53,120
cloud formation or

258
00:09:53,120 --> 00:09:55,680
terraform or ansible or whatever else

259
00:09:55,680 --> 00:09:58,160
however these threads

260
00:09:58,160 --> 00:09:59,120
are

261
00:09:59,120 --> 00:10:00,800
quite common

262
00:10:00,800 --> 00:10:05,279
across all of these tools

263
00:10:05,279 --> 00:10:07,680
so starting with the with the very first

264
00:10:07,680 --> 00:10:08,640
one

265
00:10:08,640 --> 00:10:11,680
uh with the first problem which impacts

266
00:10:11,680 --> 00:10:13,519
all the

267
00:10:13,519 --> 00:10:16,720
components in in cicd pipeline

268
00:10:16,720 --> 00:10:19,279
its lack of basic security hygiene

269
00:10:19,279 --> 00:10:21,519
which means that we are running the

270
00:10:21,519 --> 00:10:23,200
tools which are

271
00:10:23,200 --> 00:10:24,560
extremely

272
00:10:24,560 --> 00:10:26,800
important and extremely critical which

273
00:10:26,800 --> 00:10:29,760
have access to multiple systems of our

274
00:10:29,760 --> 00:10:31,360
organization

275
00:10:31,360 --> 00:10:34,240
but we forget about some really basic

276
00:10:34,240 --> 00:10:36,320
security measures like patching these

277
00:10:36,320 --> 00:10:39,440
systems properly like enforcing

278
00:10:39,440 --> 00:10:41,360
multi-factor authentication we are

279
00:10:41,360 --> 00:10:43,920
exposing the systems to the internet

280
00:10:43,920 --> 00:10:45,680
we are not monitoring them properly and

281
00:10:45,680 --> 00:10:48,079
so on and so forth the problem is that

282
00:10:48,079 --> 00:10:50,640
if any of these

283
00:10:50,640 --> 00:10:53,920
components like scm or ci tool gets

284
00:10:53,920 --> 00:10:56,240
compromised we have a huge problem

285
00:10:56,240 --> 00:10:58,320
because if we are

286
00:10:58,320 --> 00:10:59,519
[Music]

287
00:10:59,519 --> 00:11:00,640
relying

288
00:11:00,640 --> 00:11:03,120
on everything as a code approach if

289
00:11:03,120 --> 00:11:05,440
someone has unrestricted access to our

290
00:11:05,440 --> 00:11:08,320
scm tool this person can literally

291
00:11:08,320 --> 00:11:10,240
introduce the changes on our production

292
00:11:10,240 --> 00:11:11,279
environment

293
00:11:11,279 --> 00:11:13,920
same for ci tool if we are running a ci

294
00:11:13,920 --> 00:11:16,160
tool usually your ci tool will have

295
00:11:16,160 --> 00:11:19,279
access to some of your secrets

296
00:11:19,279 --> 00:11:21,200
this might be sequence to a qa or dive

297
00:11:21,200 --> 00:11:23,200
environment but if attacker is lucky

298
00:11:23,200 --> 00:11:25,040
enough he can get also seekers to

299
00:11:25,040 --> 00:11:27,279
production environment so if we are not

300
00:11:27,279 --> 00:11:29,680
protecting these systems adequately we

301
00:11:29,680 --> 00:11:32,399
may have a huge problem

302
00:11:32,399 --> 00:11:35,120
uh what is even more problematic is that

303
00:11:35,120 --> 00:11:36,880
some of the systems of some of the

304
00:11:36,880 --> 00:11:38,480
well-known tools

305
00:11:38,480 --> 00:11:39,839
uh

306
00:11:39,839 --> 00:11:41,600
in the past were not that secular by

307
00:11:41,600 --> 00:11:42,480
default

308
00:11:42,480 --> 00:11:45,200
so if some of you have worked as a

309
00:11:45,200 --> 00:11:47,120
penetration tester or reptimer in the

310
00:11:47,120 --> 00:11:49,200
past you probably know that one of the

311
00:11:49,200 --> 00:11:51,360
first things you would be looking for is

312
00:11:51,360 --> 00:11:54,959
an in unsecured jenkins instance running

313
00:11:54,959 --> 00:11:58,320
in environment because it was quite

314
00:11:58,320 --> 00:12:00,720
popular thing for companies to do to run

315
00:12:00,720 --> 00:12:02,240
a jenkins instance

316
00:12:02,240 --> 00:12:04,399
without any authentication in place

317
00:12:04,399 --> 00:12:06,959
which pretty much results in remote code

318
00:12:06,959 --> 00:12:09,279
execution by default

319
00:12:09,279 --> 00:12:11,600
now it looks a little bit better but as

320
00:12:11,600 --> 00:12:13,920
you can see

321
00:12:13,920 --> 00:12:15,920
creating a setting where anyone can do

322
00:12:15,920 --> 00:12:17,519
anything is still something you can

323
00:12:17,519 --> 00:12:19,440
configure right so

324
00:12:19,440 --> 00:12:20,959
if i can recommend you one thing just

325
00:12:20,959 --> 00:12:22,959
please have a look what's your

326
00:12:22,959 --> 00:12:26,480
ci2 configuration just to avoid it

327
00:12:26,480 --> 00:12:28,480
so what are the recommendations here

328
00:12:28,480 --> 00:12:31,440
obviously security hardening and basic

329
00:12:31,440 --> 00:12:34,560
security hygiene so each of the main ci

330
00:12:34,560 --> 00:12:37,200
tools but also scm tools

331
00:12:37,200 --> 00:12:39,839
usually gives you some recommendations

332
00:12:39,839 --> 00:12:40,959
how you should

333
00:12:40,959 --> 00:12:43,440
secure it adequately so i include a

334
00:12:43,440 --> 00:12:45,440
couple of hyperlinks here

335
00:12:45,440 --> 00:12:47,760
for jenkins for gitlab for github and so

336
00:12:47,760 --> 00:12:48,560
on

337
00:12:48,560 --> 00:12:51,280
but most of the well-known

338
00:12:51,280 --> 00:12:52,720
[Music]

339
00:12:52,720 --> 00:12:53,760
software

340
00:12:53,760 --> 00:12:56,160
development tools gives

341
00:12:56,160 --> 00:12:59,279
similar recommendations if they don't

342
00:12:59,279 --> 00:13:00,079
just

343
00:13:00,079 --> 00:13:03,279
please uh use some your your security

344
00:13:03,279 --> 00:13:04,720
instinct right so you should you

345
00:13:04,720 --> 00:13:07,360
shouldn't probably expose it in an

346
00:13:07,360 --> 00:13:10,560
unprotected way to the internet and you

347
00:13:10,560 --> 00:13:12,090
should not

348
00:13:12,090 --> 00:13:13,360
[Music]

349
00:13:13,360 --> 00:13:16,800
make everyone a newspaper

350
00:13:17,120 --> 00:13:19,519
the second problem or the second group

351
00:13:19,519 --> 00:13:22,639
of problems is lack of branch protection

352
00:13:22,639 --> 00:13:25,920
mechanism if you're in your software uh

353
00:13:25,920 --> 00:13:27,680
source code management tool

354
00:13:27,680 --> 00:13:30,000
so what is branch protection mechanism

355
00:13:30,000 --> 00:13:32,079
it's basically a mechanism which allows

356
00:13:32,079 --> 00:13:35,279
you to enforce certain rules in your

357
00:13:35,279 --> 00:13:37,200
source code management tool

358
00:13:37,200 --> 00:13:39,519
so one of the

359
00:13:39,519 --> 00:13:41,360
one of the rules which you may want to

360
00:13:41,360 --> 00:13:42,959
enforce and i would totally recommend

361
00:13:42,959 --> 00:13:44,160
you to do so

362
00:13:44,160 --> 00:13:46,480
is that every

363
00:13:46,480 --> 00:13:49,279
pull request to your master branch or

364
00:13:49,279 --> 00:13:51,680
some other branch which basically

365
00:13:51,680 --> 00:13:53,360
triggers your pipeline

366
00:13:53,360 --> 00:13:56,639
needs to be reviewed before it's merged

367
00:13:56,639 --> 00:13:59,760
so obviously the reason for that is that

368
00:13:59,760 --> 00:14:02,880
you want to make sure that no

369
00:14:02,880 --> 00:14:06,160
single developer can introduce changes

370
00:14:06,160 --> 00:14:08,320
directly to the production term

371
00:14:08,320 --> 00:14:10,480
okay so that's the that's the high level

372
00:14:10,480 --> 00:14:12,480
idea here that

373
00:14:12,480 --> 00:14:14,480
you just want

374
00:14:14,480 --> 00:14:17,120
you just want to be sure that uh

375
00:14:17,120 --> 00:14:19,680
developers cannot modify the

376
00:14:19,680 --> 00:14:21,839
your production environments

377
00:14:21,839 --> 00:14:23,120
in

378
00:14:23,120 --> 00:14:25,760
in uncontrolled way

379
00:14:25,760 --> 00:14:29,399
okay just a second

380
00:14:30,800 --> 00:14:32,000
okay

381
00:14:32,000 --> 00:14:32,800
so

382
00:14:32,800 --> 00:14:33,920
that's it

383
00:14:33,920 --> 00:14:35,519
uh sorry for all the noises my kids are

384
00:14:35,519 --> 00:14:37,519
running around until that's a bit of a

385
00:14:37,519 --> 00:14:38,720
mess

386
00:14:38,720 --> 00:14:41,279
so uh next thing which is also quite

387
00:14:41,279 --> 00:14:42,560
important here

388
00:14:42,560 --> 00:14:43,600
is that

389
00:14:43,600 --> 00:14:46,079
what you can do is first of all you can

390
00:14:46,079 --> 00:14:48,720
go to uh

391
00:14:48,720 --> 00:14:50,240
let's say your

392
00:14:50,240 --> 00:14:52,399
documentation and have a look how you

393
00:14:52,399 --> 00:14:54,800
can enable these things but what you can

394
00:14:54,800 --> 00:14:56,240
also do

395
00:14:56,240 --> 00:14:58,959
is you can for example use uh some of

396
00:14:58,959 --> 00:15:00,079
the tools

397
00:15:00,079 --> 00:15:01,199
which

398
00:15:01,199 --> 00:15:03,519
can perform this checks for you so for

399
00:15:03,519 --> 00:15:06,079
example you can go to

400
00:15:06,079 --> 00:15:07,600
github app

401
00:15:07,600 --> 00:15:10,160
which is known as all-star which allows

402
00:15:10,160 --> 00:15:11,920
you to enforce

403
00:15:11,920 --> 00:15:14,320
certain rules on your organization level

404
00:15:14,320 --> 00:15:15,440
and again

405
00:15:15,440 --> 00:15:16,880
i included some

406
00:15:16,880 --> 00:15:19,199
hyperlinks here which you can just visit

407
00:15:19,199 --> 00:15:21,519
and you can just

408
00:15:21,519 --> 00:15:24,800
enforce this this was

409
00:15:25,360 --> 00:15:27,199
uh next thing is about principle of

410
00:15:27,199 --> 00:15:29,440
least privilege which is not followed so

411
00:15:29,440 --> 00:15:31,839
again one of the basic things when it

412
00:15:31,839 --> 00:15:34,480
comes to security however it's

413
00:15:34,480 --> 00:15:37,360
not that well known when it comes to

414
00:15:37,360 --> 00:15:39,360
software development tools what is the

415
00:15:39,360 --> 00:15:41,519
reason for that the reason is that

416
00:15:41,519 --> 00:15:43,199
developers they like to have a lot of

417
00:15:43,199 --> 00:15:47,120
freedom they like to run with highest

418
00:15:47,120 --> 00:15:49,360
permissions possible so they can fix the

419
00:15:49,360 --> 00:15:51,600
problems why they occur

420
00:15:51,600 --> 00:15:54,240
the problem is that if we have very good

421
00:15:54,240 --> 00:15:56,160
permissions uh

422
00:15:56,160 --> 00:15:57,279
on the

423
00:15:57,279 --> 00:15:59,360
in our systems in our software

424
00:15:59,360 --> 00:16:02,160
development tool chain basically we are

425
00:16:02,160 --> 00:16:04,639
uh having a problem that people can do

426
00:16:04,639 --> 00:16:06,800
whatever they want and then

427
00:16:06,800 --> 00:16:09,920
bank they can bypass all of the things

428
00:16:09,920 --> 00:16:12,000
uh which we defined previously so for

429
00:16:12,000 --> 00:16:14,240
example when we are speaking about this

430
00:16:14,240 --> 00:16:16,560
branch protection mechanism uh if

431
00:16:16,560 --> 00:16:18,079
someone is running uh with

432
00:16:18,079 --> 00:16:19,440
administration

433
00:16:19,440 --> 00:16:22,720
permissions on your scm tool this person

434
00:16:22,720 --> 00:16:25,120
person can simply disable it

435
00:16:25,120 --> 00:16:27,519
same applies to every other component

436
00:16:27,519 --> 00:16:29,600
which you have in place

437
00:16:29,600 --> 00:16:31,040
so

438
00:16:31,040 --> 00:16:33,199
again some examples

439
00:16:33,199 --> 00:16:35,360
uh if someone has excessive permission

440
00:16:35,360 --> 00:16:37,839
or ci tool this person can literally

441
00:16:37,839 --> 00:16:39,360
modify

442
00:16:39,360 --> 00:16:41,199
all the

443
00:16:41,199 --> 00:16:42,720
all of the configuration and start

444
00:16:42,720 --> 00:16:44,959
deploying insecure applications to

445
00:16:44,959 --> 00:16:46,639
your production environment

446
00:16:46,639 --> 00:16:49,600
and what is uh even worse than that

447
00:16:49,600 --> 00:16:51,040
probably this person can have

448
00:16:51,040 --> 00:16:53,360
unrestricted access to secrets to which

449
00:16:53,360 --> 00:16:55,759
your ci tool has access to

450
00:16:55,759 --> 00:16:58,959
uh same for cloud infrastructure so why

451
00:16:58,959 --> 00:17:01,040
are we even securing the pipeline and

452
00:17:01,040 --> 00:17:02,800
why we why are we even discussing

453
00:17:02,800 --> 00:17:05,039
pipeline security if we have developers

454
00:17:05,039 --> 00:17:07,760
with full access to your cloud info so

455
00:17:07,760 --> 00:17:08,959
that's yet another question that you

456
00:17:08,959 --> 00:17:10,880
need to ask yourself and basically

457
00:17:10,880 --> 00:17:12,720
ensure that if you are securing your

458
00:17:12,720 --> 00:17:15,439
pipeline you are not giving any other

459
00:17:15,439 --> 00:17:17,679
possibility to bypass it

460
00:17:17,679 --> 00:17:20,160
for artifact management tool again it's

461
00:17:20,160 --> 00:17:22,079
the very same case that we had

462
00:17:22,079 --> 00:17:25,039
previously so we have our

463
00:17:25,039 --> 00:17:27,919
pipeline we are doing a lot of stuff to

464
00:17:27,919 --> 00:17:30,400
ensure that our

465
00:17:30,400 --> 00:17:33,039
images and our artifacts are built

466
00:17:33,039 --> 00:17:34,400
securely

467
00:17:34,400 --> 00:17:35,919
and if we have excessive permissions

468
00:17:35,919 --> 00:17:36,960
there

469
00:17:36,960 --> 00:17:38,880
people can pretty much bypass everything

470
00:17:38,880 --> 00:17:41,039
we defined and they can start uploading

471
00:17:41,039 --> 00:17:44,160
their own artifacts

472
00:17:44,960 --> 00:17:46,559
so again what are the recommendations

473
00:17:46,559 --> 00:17:47,760
here

474
00:17:47,760 --> 00:17:49,360
basic security hygiene and least

475
00:17:49,360 --> 00:17:51,360
privileged principle everywhere so

476
00:17:51,360 --> 00:17:53,039
probably if you are

477
00:17:53,039 --> 00:17:55,120
some big organization

478
00:17:55,120 --> 00:17:57,360
uh you don't want to give everyone

479
00:17:57,360 --> 00:18:00,640
administered permissions on your scm

480
00:18:00,640 --> 00:18:01,440
tool

481
00:18:01,440 --> 00:18:02,720
you don't want

482
00:18:02,720 --> 00:18:05,200
people to have full access to your ci

483
00:18:05,200 --> 00:18:08,080
tool and similarly with any other tool

484
00:18:08,080 --> 00:18:08,799
so

485
00:18:08,799 --> 00:18:11,120
it's especially important for for

486
00:18:11,120 --> 00:18:12,880
developers so these developers they

487
00:18:12,880 --> 00:18:17,039
shouldn't have access to to the tools

488
00:18:17,039 --> 00:18:19,440
so they cannot really bypass things

489
00:18:19,440 --> 00:18:22,480
which we defined there

490
00:18:22,480 --> 00:18:24,799
if there is a need to have an emergency

491
00:18:24,799 --> 00:18:26,720
access obviously

492
00:18:26,720 --> 00:18:28,720
you can create the procedures to do it

493
00:18:28,720 --> 00:18:32,799
but you can also use some tools uh so if

494
00:18:32,799 --> 00:18:34,480
emergency access is required that is

495
00:18:34,480 --> 00:18:36,320
still possible

496
00:18:36,320 --> 00:18:38,400
again at the bottom of the slide i

497
00:18:38,400 --> 00:18:41,120
included a couple of hyperlinks which

498
00:18:41,120 --> 00:18:43,280
you can find interesting

499
00:18:43,280 --> 00:18:45,600
as they are also providing some

500
00:18:45,600 --> 00:18:47,679
more details how you can implement that

501
00:18:47,679 --> 00:18:50,720
and what is important

502
00:18:51,360 --> 00:18:52,640
next thing is about important

503
00:18:52,640 --> 00:18:54,880
segregation so it's a bit

504
00:18:54,880 --> 00:18:56,720
related to what we discussed in the

505
00:18:56,720 --> 00:18:58,320
previous section

506
00:18:58,320 --> 00:18:59,679
but it's

507
00:18:59,679 --> 00:19:03,440
more specific to ci tool permission so

508
00:19:03,440 --> 00:19:05,200
what is the idea here

509
00:19:05,200 --> 00:19:07,520
that you need to pay special attention

510
00:19:07,520 --> 00:19:08,480
how you

511
00:19:08,480 --> 00:19:11,120
segregate between workspaces between

512
00:19:11,120 --> 00:19:12,720
projects or between different

513
00:19:12,720 --> 00:19:15,280
environments not only in your cloud

514
00:19:15,280 --> 00:19:18,720
infrastructure but also in your ci tool

515
00:19:18,720 --> 00:19:20,960
so what is the reason for that again the

516
00:19:20,960 --> 00:19:24,240
reason is simple so if there is a

517
00:19:24,240 --> 00:19:25,440
situation

518
00:19:25,440 --> 00:19:27,760
that you're running a

519
00:19:27,760 --> 00:19:30,320
single workspace and then

520
00:19:30,320 --> 00:19:32,080
in this workspace you're configuring

521
00:19:32,080 --> 00:19:34,559
your pipelines to all your environments

522
00:19:34,559 --> 00:19:36,240
you're going to have a huge problem

523
00:19:36,240 --> 00:19:38,880
because most of the times or for certain

524
00:19:38,880 --> 00:19:41,280
tools it means that

525
00:19:41,280 --> 00:19:44,080
people are able to reach

526
00:19:44,080 --> 00:19:45,280
secrets

527
00:19:45,280 --> 00:19:48,320
for higher environments so for example

528
00:19:48,320 --> 00:19:50,960
if you are not segregating

529
00:19:50,960 --> 00:19:52,640
access properly

530
00:19:52,640 --> 00:19:56,000
your developer will be able to reach

531
00:19:56,000 --> 00:19:58,480
secrets from your production and deploy

532
00:19:58,480 --> 00:20:00,799
to production automatically

533
00:20:00,799 --> 00:20:02,159
so

534
00:20:02,159 --> 00:20:04,080
if you don't believe that's true again

535
00:20:04,080 --> 00:20:06,000
just go to one of these two links which

536
00:20:06,000 --> 00:20:08,240
i'm sharing at the bottom of the slide

537
00:20:08,240 --> 00:20:09,840
because these attacks are really

538
00:20:09,840 --> 00:20:12,720
happening so they're especially

539
00:20:12,720 --> 00:20:14,640
problematic when we are having a

540
00:20:14,640 --> 00:20:16,159
configuration

541
00:20:16,159 --> 00:20:17,840
where we

542
00:20:17,840 --> 00:20:20,480
run a pipeline on a pull request because

543
00:20:20,480 --> 00:20:23,120
it's common in organization

544
00:20:23,120 --> 00:20:24,880
just to run the pipeline on pull

545
00:20:24,880 --> 00:20:27,520
requests to verify if code created by

546
00:20:27,520 --> 00:20:30,480
developer is building successfully

547
00:20:30,480 --> 00:20:31,280
so

548
00:20:31,280 --> 00:20:33,520
if we have the situation that we are

549
00:20:33,520 --> 00:20:36,880
executing final pipeline on pull request

550
00:20:36,880 --> 00:20:39,840
and we have a situation that we are

551
00:20:39,840 --> 00:20:41,120
uh

552
00:20:41,120 --> 00:20:43,280
storing or all the let's say secrets in

553
00:20:43,280 --> 00:20:44,880
a single bucket

554
00:20:44,880 --> 00:20:47,200
person with who can run pull requests

555
00:20:47,200 --> 00:20:50,080
can literally execute codes in our

556
00:20:50,080 --> 00:20:52,559
environments

557
00:20:52,559 --> 00:20:55,520
so again recommendations here just

558
00:20:55,520 --> 00:20:57,440
please make sure that you're segregating

559
00:20:57,440 --> 00:20:58,720
access

560
00:20:58,720 --> 00:21:00,840
to to the environments that

561
00:21:00,840 --> 00:21:03,760
your again it can be done by having

562
00:21:03,760 --> 00:21:06,400
multiple workspaces it can be done by

563
00:21:06,400 --> 00:21:08,880
restricting permissions some of the ci

564
00:21:08,880 --> 00:21:13,120
tools also a way how to how how you can

565
00:21:13,120 --> 00:21:16,159
let's say give only access to specific

566
00:21:16,159 --> 00:21:18,240
seekers to specific pipelines so

567
00:21:18,240 --> 00:21:20,159
basically you have multiple options you

568
00:21:20,159 --> 00:21:22,320
can do it but just please make sure that

569
00:21:22,320 --> 00:21:24,080
you

570
00:21:24,080 --> 00:21:25,679
that you are aware of the problem and

571
00:21:25,679 --> 00:21:27,280
you can configure it

572
00:21:27,280 --> 00:21:29,520
however you like and also if you're

573
00:21:29,520 --> 00:21:31,039
running this

574
00:21:31,039 --> 00:21:33,600
uh configuration when you are executing

575
00:21:33,600 --> 00:21:36,080
the pipeline on pull request

576
00:21:36,080 --> 00:21:39,120
again just please reconsider that idea

577
00:21:39,120 --> 00:21:41,200
i'm not saying it's bad i'm just saying

578
00:21:41,200 --> 00:21:44,080
that please be aware that it's risky so

579
00:21:44,080 --> 00:21:46,480
please make sure that your configuration

580
00:21:46,480 --> 00:21:48,960
is is protecting you from from this kind

581
00:21:48,960 --> 00:21:51,280
of attacks where someone

582
00:21:51,280 --> 00:21:53,840
runs some fantastic boat and is able to

583
00:21:53,840 --> 00:21:54,960
reach your

584
00:21:54,960 --> 00:21:58,159
production environments

585
00:21:58,159 --> 00:22:00,400
last but not least lack of integrity

586
00:22:00,400 --> 00:22:01,280
checks

587
00:22:01,280 --> 00:22:03,600
again uh what

588
00:22:03,600 --> 00:22:05,760
we would like to achieve here is we want

589
00:22:05,760 --> 00:22:07,760
to make sure that the code that

590
00:22:07,760 --> 00:22:10,400
developer created in the very first step

591
00:22:10,400 --> 00:22:12,720
and which has been reviewed by his

592
00:22:12,720 --> 00:22:15,679
colleague is the same code which is

593
00:22:15,679 --> 00:22:16,880
going to run on the production

594
00:22:16,880 --> 00:22:18,960
environment so basically we want to make

595
00:22:18,960 --> 00:22:21,440
sure that we have some checks in place

596
00:22:21,440 --> 00:22:23,200
which will uh

597
00:22:23,200 --> 00:22:26,799
basically ensure that only this tested

598
00:22:26,799 --> 00:22:29,039
code is run on production

599
00:22:29,039 --> 00:22:31,760
uh obviously these are some threats

600
00:22:31,760 --> 00:22:33,280
which you can see

601
00:22:33,280 --> 00:22:35,120
so for example

602
00:22:35,120 --> 00:22:37,200
we are creating an artifact but then

603
00:22:37,200 --> 00:22:39,039
someone decides to upload some other

604
00:22:39,039 --> 00:22:41,440
artifact manually and run this artifact

605
00:22:41,440 --> 00:22:43,760
in our production environment so we want

606
00:22:43,760 --> 00:22:46,240
to make sure that this is not happening

607
00:22:46,240 --> 00:22:48,159
and that is why

608
00:22:48,159 --> 00:22:50,080
when it's something which is called uh

609
00:22:50,080 --> 00:22:51,360
polvanas

610
00:22:51,360 --> 00:22:52,320
so

611
00:22:52,320 --> 00:22:54,159
if you want to know it's it's a very

612
00:22:54,159 --> 00:22:55,840
interesting concept and you should

613
00:22:55,840 --> 00:22:57,840
definitely check for example some

614
00:22:57,840 --> 00:23:01,280
standards and frameworks like salsa.dev

615
00:23:01,280 --> 00:23:03,280
so that is a link which i'm including at

616
00:23:03,280 --> 00:23:05,840
the bottom of the slide but the idea is

617
00:23:05,840 --> 00:23:09,520
that during the build process

618
00:23:09,520 --> 00:23:11,760
we generate so-called provenance which

619
00:23:11,760 --> 00:23:14,720
is pretty much a confirmation that

620
00:23:14,720 --> 00:23:18,240
this thing was built in a tested

621
00:23:18,240 --> 00:23:19,919
ti in a tested tool

622
00:23:19,919 --> 00:23:22,240
and it also gives some information what

623
00:23:22,240 --> 00:23:25,280
steps were conducted during the build

624
00:23:25,280 --> 00:23:27,200
so what we can do on top of that we can

625
00:23:27,200 --> 00:23:29,919
also assign that to the nas and store it

626
00:23:29,919 --> 00:23:32,080
in a tested location and then when we

627
00:23:32,080 --> 00:23:33,280
are deploying this artifact to

628
00:23:33,280 --> 00:23:35,120
production environment we can create a

629
00:23:35,120 --> 00:23:36,720
simple mechanism which is going to

630
00:23:36,720 --> 00:23:39,200
verify the signature and allow the

631
00:23:39,200 --> 00:23:40,960
deployment only if it's coming from the

632
00:23:40,960 --> 00:23:43,039
trusted source so basically if someone

633
00:23:43,039 --> 00:23:45,520
would like to bypass the

634
00:23:45,520 --> 00:23:47,919
the pipeline and upload something

635
00:23:47,919 --> 00:23:50,720
fantastic source it's going to be

636
00:23:50,720 --> 00:23:52,559
impossible so

637
00:23:52,559 --> 00:23:54,480
simple as that again this is a huge

638
00:23:54,480 --> 00:23:56,480
topic it's very broad topic

639
00:23:56,480 --> 00:23:58,240
but some of the hype links in the bottom

640
00:23:58,240 --> 00:24:00,559
of your page can help you to

641
00:24:00,559 --> 00:24:04,640
to get more familiar with it

642
00:24:04,640 --> 00:24:08,240
uh so that's it uh just couple of things

643
00:24:08,240 --> 00:24:10,880
which i want to to mention so first of

644
00:24:10,880 --> 00:24:12,640
all security of the pipeline is as

645
00:24:12,640 --> 00:24:15,760
important as security in the pipeline uh

646
00:24:15,760 --> 00:24:17,679
security of your pipeline in your

647
00:24:17,679 --> 00:24:20,240
company in your organization might be a

648
00:24:20,240 --> 00:24:22,799
bit different because obviously it

649
00:24:22,799 --> 00:24:25,360
depends on the organization size on your

650
00:24:25,360 --> 00:24:26,799
risk appetite or size of your

651
00:24:26,799 --> 00:24:28,960
development team and a lot of other

652
00:24:28,960 --> 00:24:30,240
factors

653
00:24:30,240 --> 00:24:32,240
so basically you can tell me look martin

654
00:24:32,240 --> 00:24:34,880
what you presented today uh is you know

655
00:24:34,880 --> 00:24:36,960
it's not for me because the size of my

656
00:24:36,960 --> 00:24:39,440
team is limited to five people

657
00:24:39,440 --> 00:24:41,360
that's fine but you can still use some

658
00:24:41,360 --> 00:24:43,440
of the recommendations which are

659
00:24:43,440 --> 00:24:45,840
provided in this presentation but if you

660
00:24:45,840 --> 00:24:47,760
have a huge organization

661
00:24:47,760 --> 00:24:50,880
uh controlled or which is subject to

662
00:24:50,880 --> 00:24:53,919
some external regulations you may want

663
00:24:53,919 --> 00:24:56,159
to consider implementing more and more

664
00:24:56,159 --> 00:24:59,120
of these recommendations

665
00:24:59,120 --> 00:25:01,520
what is also important is that

666
00:25:01,520 --> 00:25:03,679
i would totally recommend to start with

667
00:25:03,679 --> 00:25:06,559
the basics but then aim for the moon

668
00:25:06,559 --> 00:25:08,880
which means that it's very unlikely that

669
00:25:08,880 --> 00:25:10,400
you are going to deploy all of the

670
00:25:10,400 --> 00:25:12,799
things uh over the weekend

671
00:25:12,799 --> 00:25:15,279
so as a first step i would probably

672
00:25:15,279 --> 00:25:17,120
recommend you to think about basic

673
00:25:17,120 --> 00:25:18,640
security hygiene

674
00:25:18,640 --> 00:25:20,159
and only if you have that if you are

675
00:25:20,159 --> 00:25:21,840
protecting yourselves from external

676
00:25:21,840 --> 00:25:24,000
threats you should focus on the internal

677
00:25:24,000 --> 00:25:25,679
threats so

678
00:25:25,679 --> 00:25:27,679
if you are

679
00:25:27,679 --> 00:25:29,440
if you believe that you're secure from

680
00:25:29,440 --> 00:25:30,240
all the

681
00:25:30,240 --> 00:25:31,679
uh

682
00:25:31,679 --> 00:25:33,360
attackers which are there on the

683
00:25:33,360 --> 00:25:36,000
internet that is good enough as a first

684
00:25:36,000 --> 00:25:38,000
step and only then you can also think

685
00:25:38,000 --> 00:25:40,480
about all the other things which we

686
00:25:40,480 --> 00:25:43,200
discussed today

687
00:25:43,200 --> 00:25:45,520
uh so that's it uh again i will be

688
00:25:45,520 --> 00:25:48,880
sharing this uh slice on twitter and

689
00:25:48,880 --> 00:25:51,120
probably on my linkedin so if you're

690
00:25:51,120 --> 00:25:52,640
interested if you would like to check

691
00:25:52,640 --> 00:25:54,400
some of the hyperlinks

692
00:25:54,400 --> 00:25:55,440
please

693
00:25:55,440 --> 00:25:57,279
visit it

694
00:25:57,279 --> 00:26:00,000
and and have a look and i'm also waiting

695
00:26:00,000 --> 00:26:01,760
for all your questions

696
00:26:01,760 --> 00:26:05,720
on our slack channel

