1
00:00:01,410 --> 00:00:06,030
[Music]

2
00:00:07,919 --> 00:00:09,440
hi

3
00:00:09,440 --> 00:00:11,759
hello everyone and welcome to this talk

4
00:00:11,759 --> 00:00:14,160
called your eater are belong to us or

5
00:00:14,160 --> 00:00:18,080
how to hack ethereum basic dots

6
00:00:19,119 --> 00:00:21,840
who am i my name is luis quispe gonzalez

7
00:00:21,840 --> 00:00:24,960
i've been having fun for around 11 years

8
00:00:24,960 --> 00:00:27,279
working for offensive security field you

9
00:00:27,279 --> 00:00:29,519
know ethical hacking regime and all that

10
00:00:29,519 --> 00:00:31,599
kind of stuff currently i'm working as a

11
00:00:31,599 --> 00:00:33,200
lead offensive security engineer at

12
00:00:33,200 --> 00:00:35,440
caldwell it's a specialized company for

13
00:00:35,440 --> 00:00:37,760
cyber security in blockchain and

14
00:00:37,760 --> 00:00:40,079
cryptoworld also i'm postgraduate

15
00:00:40,079 --> 00:00:42,160
instructor in ethical hacking courses if

16
00:00:42,160 --> 00:00:44,399
you enjoy this talk please reach out to

17
00:00:44,399 --> 00:00:46,640
me in linkedin and telegram and say

18
00:00:46,640 --> 00:00:49,920
hello i really appreciate it

19
00:00:49,920 --> 00:00:51,039
okay

20
00:00:51,039 --> 00:00:53,039
what are we going to see today

21
00:00:53,039 --> 00:00:55,920
we are do a recap about blockchain uh

22
00:00:55,920 --> 00:00:57,920
we'll have a gentle introduction about

23
00:00:57,920 --> 00:01:00,399
smart contracts and the meat of this

24
00:01:00,399 --> 00:01:02,800
talk what are decentralized applications

25
00:01:02,800 --> 00:01:05,280
of dapps how they work and especially

26
00:01:05,280 --> 00:01:07,119
how to hack them

27
00:01:07,119 --> 00:01:08,400
let's begin

28
00:01:08,400 --> 00:01:11,280
blockchain 101

29
00:01:11,280 --> 00:01:12,880
what is blockchain

30
00:01:12,880 --> 00:01:15,200
as the name suggests is a change of

31
00:01:15,200 --> 00:01:18,080
blocks that contain some information

32
00:01:18,080 --> 00:01:20,159
blockchain became popular for around

33
00:01:20,159 --> 00:01:23,119
2009 with appearance of bitcoin but be

34
00:01:23,119 --> 00:01:25,680
careful because it's just one of the

35
00:01:25,680 --> 00:01:27,759
main applications that blockchain can

36
00:01:27,759 --> 00:01:28,799
have

37
00:01:28,799 --> 00:01:31,119
actually blockchain is a distributed

38
00:01:31,119 --> 00:01:34,479
ledger so it's completely open to anyone

39
00:01:34,479 --> 00:01:36,720
who wants to participate

40
00:01:36,720 --> 00:01:39,040
and they have an interesting property

41
00:01:39,040 --> 00:01:42,079
once some data is recorded in a black in

42
00:01:42,079 --> 00:01:44,640
the blockchain it's extremely extremely

43
00:01:44,640 --> 00:01:47,119
difficult to modify it

44
00:01:47,119 --> 00:01:49,200
so how does it work let's take a closer

45
00:01:49,200 --> 00:01:50,640
look to a block

46
00:01:50,640 --> 00:01:53,920
a block has data has a hash of the block

47
00:01:53,920 --> 00:01:55,040
and

48
00:01:55,040 --> 00:01:57,600
has a hash of a previous block

49
00:01:57,600 --> 00:01:59,840
what kind of data has developed well it

50
00:01:59,840 --> 00:02:02,479
depends on the blockchain for example if

51
00:02:02,479 --> 00:02:04,799
we are talking about a blockchain for

52
00:02:04,799 --> 00:02:07,119
ethereum we have detail about a

53
00:02:07,119 --> 00:02:09,199
transaction so we have

54
00:02:09,199 --> 00:02:11,360
the sender we have the receiver and of

55
00:02:11,360 --> 00:02:13,200
course we have the amount of coin

56
00:02:13,200 --> 00:02:15,840
involved in that transaction

57
00:02:15,840 --> 00:02:18,319
then we have the hash of the block we

58
00:02:18,319 --> 00:02:20,560
can compare the hash with a fingerprint

59
00:02:20,560 --> 00:02:21,360
so

60
00:02:21,360 --> 00:02:24,160
every block has a unique hash

61
00:02:24,160 --> 00:02:28,080
and let's see if we modify just one bit

62
00:02:28,080 --> 00:02:30,959
on the block the hash now it's

63
00:02:30,959 --> 00:02:33,200
completely different if we modify

64
00:02:33,200 --> 00:02:36,319
another bit of the block the hash is

65
00:02:36,319 --> 00:02:39,200
completely different so that's why hash

66
00:02:39,200 --> 00:02:41,920
is very useful to verify if someone has

67
00:02:41,920 --> 00:02:44,800
tampered our block

68
00:02:44,800 --> 00:02:46,640
finally we have the hash of a preview

69
00:02:46,640 --> 00:02:49,040
block with these three elements we can

70
00:02:49,040 --> 00:02:52,319
create a change of blocks or blockchain

71
00:02:52,319 --> 00:02:54,959
the big question here is what happens if

72
00:02:54,959 --> 00:02:57,440
an attacker wants to wants to modify or

73
00:02:57,440 --> 00:03:00,720
tamper our block well blockchain has two

74
00:03:00,720 --> 00:03:02,959
two powerful mechanisms to avoid it the

75
00:03:02,959 --> 00:03:06,000
first one is called consensus regarding

76
00:03:06,000 --> 00:03:07,920
deteriorate and bitcoin the consensus

77
00:03:07,920 --> 00:03:10,000
mechanism is called proof of work how

78
00:03:10,000 --> 00:03:11,200
does it work

79
00:03:11,200 --> 00:03:13,599
we have to solve a crypto challenge

80
00:03:13,599 --> 00:03:14,879
what does it mean

81
00:03:14,879 --> 00:03:17,120
if you want to create a

82
00:03:17,120 --> 00:03:20,959
block you have to find a number that

83
00:03:20,959 --> 00:03:23,200
makes your block compliant with a

84
00:03:23,200 --> 00:03:26,239
specific numerical condition

85
00:03:26,239 --> 00:03:27,280
and

86
00:03:27,280 --> 00:03:28,799
as far as we know

87
00:03:28,799 --> 00:03:30,959
there is no mathematical formula to

88
00:03:30,959 --> 00:03:33,120
calculate the number the only way is to

89
00:03:33,120 --> 00:03:35,360
guess the number and because you have to

90
00:03:35,360 --> 00:03:37,519
guess it the more computational

91
00:03:37,519 --> 00:03:39,599
resources you have it's more likely that

92
00:03:39,599 --> 00:03:42,080
you will be able to create the block

93
00:03:42,080 --> 00:03:44,640
the mean time for block creation in

94
00:03:44,640 --> 00:03:46,720
bitcoin is around 10 minutes another

95
00:03:46,720 --> 00:03:49,599
blockchain is varies and this process is

96
00:03:49,599 --> 00:03:51,920
called mining obviously the ones who

97
00:03:51,920 --> 00:03:53,680
participate in the process are called

98
00:03:53,680 --> 00:03:56,000
miners

99
00:03:56,000 --> 00:03:57,840
the second mechanism is called

100
00:03:57,840 --> 00:04:00,319
peer-to-peer network let's remember that

101
00:04:00,319 --> 00:04:03,360
blockchain is a distributed ledger so

102
00:04:03,360 --> 00:04:05,920
every participant in the network has its

103
00:04:05,920 --> 00:04:10,080
own local copy of the blockchain right

104
00:04:10,080 --> 00:04:12,879
so imagine a user wants to create a new

105
00:04:12,879 --> 00:04:16,320
block he shares the block to everyone in

106
00:04:16,320 --> 00:04:17,680
the network

107
00:04:17,680 --> 00:04:18,399
so

108
00:04:18,399 --> 00:04:20,720
every participant is going to verify if

109
00:04:20,720 --> 00:04:22,880
the block is comply with the specific

110
00:04:22,880 --> 00:04:24,960
numerical condition i mentioned earlier

111
00:04:24,960 --> 00:04:28,560
if so then we add that new block to the

112
00:04:28,560 --> 00:04:31,440
blockchain to their own local copy of

113
00:04:31,440 --> 00:04:32,639
the blockchain

114
00:04:32,639 --> 00:04:35,680
that's how they get consensus awesome

115
00:04:35,680 --> 00:04:38,400
now what happens if an attackers want to

116
00:04:38,400 --> 00:04:41,759
create a fake block so the participant

117
00:04:41,759 --> 00:04:44,800
will be able to to verify that the new

118
00:04:44,800 --> 00:04:47,840
blog is not compliant and

119
00:04:47,840 --> 00:04:51,520
the new blog will be rejected

120
00:04:51,520 --> 00:04:52,479
perfect

121
00:04:52,479 --> 00:04:56,560
now what are smart contracts

122
00:04:56,560 --> 00:04:58,720
well smart contracts are very similar to

123
00:04:58,720 --> 00:05:01,120
traditional contracts they would have

124
00:05:01,120 --> 00:05:03,360
interest and conditions

125
00:05:03,360 --> 00:05:04,960
the big difference is that the smart

126
00:05:04,960 --> 00:05:07,840
contract is digital so that's why data

127
00:05:07,840 --> 00:05:11,039
conditions are expressed in code

128
00:05:11,039 --> 00:05:14,240
when you compile that code you can store

129
00:05:14,240 --> 00:05:16,400
it in the blockchain

130
00:05:16,400 --> 00:05:17,360
so

131
00:05:17,360 --> 00:05:19,680
due to the fact the smart contract is

132
00:05:19,680 --> 00:05:21,520
inside the blockchain

133
00:05:21,520 --> 00:05:23,600
it's accessible for everyone everyone

134
00:05:23,600 --> 00:05:25,840
can read the code

135
00:05:25,840 --> 00:05:27,520
everyone can interact with the smart

136
00:05:27,520 --> 00:05:29,680
contract obviously depending on your

137
00:05:29,680 --> 00:05:32,000
authorization level you can do a stuff

138
00:05:32,000 --> 00:05:33,680
or another but at the end of the day you

139
00:05:33,680 --> 00:05:35,840
can interact with smart contracts and

140
00:05:35,840 --> 00:05:38,880
there is consensus about the outcome

141
00:05:38,880 --> 00:05:40,800
let's see an example

142
00:05:40,800 --> 00:05:42,639
for sure everyone knows about

143
00:05:42,639 --> 00:05:44,639
crowdfunding platform for example peter

144
00:05:44,639 --> 00:05:48,320
started indigo etc so we have a product

145
00:05:48,320 --> 00:05:50,160
team who wants to raise

146
00:05:50,160 --> 00:05:52,560
money and we have supporters

147
00:05:52,560 --> 00:05:54,560
if that product team

148
00:05:54,560 --> 00:05:57,600
gets uh or reached a monetary goal the

149
00:05:57,600 --> 00:06:00,080
money goes to the product team otherwise

150
00:06:00,080 --> 00:06:02,560
if you don't get the goal the money is

151
00:06:02,560 --> 00:06:04,960
returned to the supporters how does it

152
00:06:04,960 --> 00:06:07,120
work in the blockchain world

153
00:06:07,120 --> 00:06:07,840
so

154
00:06:07,840 --> 00:06:10,800
instead of having a company like like it

155
00:06:10,800 --> 00:06:13,520
started we have a smart contract so the

156
00:06:13,520 --> 00:06:16,560
supporters give money to the contract

157
00:06:16,560 --> 00:06:19,600
and the contract verify if the monetary

158
00:06:19,600 --> 00:06:22,720
goal is met if so they give the money to

159
00:06:22,720 --> 00:06:25,120
the pro team otherwise if the goal is

160
00:06:25,120 --> 00:06:26,960
not met they return the money to the

161
00:06:26,960 --> 00:06:29,759
supporters what is the logic inside the

162
00:06:29,759 --> 00:06:32,240
contract easy we have a conditional

163
00:06:32,240 --> 00:06:33,600
expression

164
00:06:33,600 --> 00:06:35,520
very very straightforward the goal is

165
00:06:35,520 --> 00:06:36,560
met

166
00:06:36,560 --> 00:06:38,319
then give money to the product team

167
00:06:38,319 --> 00:06:39,520
otherwise

168
00:06:39,520 --> 00:06:43,120
return the money to the supporters

169
00:06:43,120 --> 00:06:45,840
there are many uses cases for many

170
00:06:45,840 --> 00:06:48,160
industries for banking insurance

171
00:06:48,160 --> 00:06:50,720
delivery music services streaming video

172
00:06:50,720 --> 00:06:53,280
games exchange application and a huge

173
00:06:53,280 --> 00:06:56,800
etc very interesting

174
00:06:56,800 --> 00:06:58,639
where the blockchain that supports smart

175
00:06:58,639 --> 00:07:00,639
content nowadays well we have many of

176
00:07:00,639 --> 00:07:01,440
them

177
00:07:01,440 --> 00:07:02,960
the main one

178
00:07:02,960 --> 00:07:05,680
is ethereum and if you want to create

179
00:07:05,680 --> 00:07:07,919
smart contracts for ethereum

180
00:07:07,919 --> 00:07:09,520
you have to

181
00:07:09,520 --> 00:07:11,759
use solidity programming language it's

182
00:07:11,759 --> 00:07:13,199
not the only one but it's the most

183
00:07:13,199 --> 00:07:15,599
popular

184
00:07:15,599 --> 00:07:16,400
okay

185
00:07:16,400 --> 00:07:18,880
regarding ethereum

186
00:07:18,880 --> 00:07:21,199
and we have external juicer and we have

187
00:07:21,199 --> 00:07:23,199
a smart contract they both are

188
00:07:23,199 --> 00:07:26,880
identified with a with a 20 byte xml

189
00:07:26,880 --> 00:07:28,400
address

190
00:07:28,400 --> 00:07:30,800
and what what can we do inside the

191
00:07:30,800 --> 00:07:34,000
blockchain for example we can send money

192
00:07:34,000 --> 00:07:36,800
the native coin inside ethereum it's

193
00:07:36,800 --> 00:07:39,360
called eater so you can send either to

194
00:07:39,360 --> 00:07:42,000
another user for example or you can

195
00:07:42,000 --> 00:07:44,000
interact with a smart contract and what

196
00:07:44,000 --> 00:07:45,280
does it mean

197
00:07:45,280 --> 00:07:47,680
that you call a function from the smart

198
00:07:47,680 --> 00:07:50,240
contract and the smart contract can

199
00:07:50,240 --> 00:07:52,720
interact with another user we also can

200
00:07:52,720 --> 00:07:55,360
have chain reaction a user call a

201
00:07:55,360 --> 00:07:57,759
function from a smart contact the smart

202
00:07:57,759 --> 00:07:59,440
contract interact with another smart

203
00:07:59,440 --> 00:08:01,039
contract and this contract interacts

204
00:08:01,039 --> 00:08:03,599
with a user a chain reaction

205
00:08:03,599 --> 00:08:05,680
great

206
00:08:05,680 --> 00:08:08,800
okay we have a user that wants to call a

207
00:08:08,800 --> 00:08:11,680
function from a smart contract

208
00:08:11,680 --> 00:08:14,720
i mean he wants to transact

209
00:08:14,720 --> 00:08:15,759
and

210
00:08:15,759 --> 00:08:18,160
for the user to transact he have to sign

211
00:08:18,160 --> 00:08:20,080
the transaction why

212
00:08:20,080 --> 00:08:22,319
is a way to demonstrate you are the

213
00:08:22,319 --> 00:08:25,039
owner of the transaction so you need a

214
00:08:25,039 --> 00:08:26,720
private key

215
00:08:26,720 --> 00:08:29,360
once you sign the transaction you send

216
00:08:29,360 --> 00:08:31,919
to the network that you're in blockchain

217
00:08:31,919 --> 00:08:32,719
so

218
00:08:32,719 --> 00:08:33,519
a

219
00:08:33,519 --> 00:08:35,519
participant can decrypt the transaction

220
00:08:35,519 --> 00:08:36,958
because there are public keys in the

221
00:08:36,958 --> 00:08:39,039
network because they are public

222
00:08:39,039 --> 00:08:41,120
in a day-to-day operation the private

223
00:08:41,120 --> 00:08:43,120
judicial sign the transaction in a

224
00:08:43,120 --> 00:08:44,320
manual way

225
00:08:44,320 --> 00:08:46,880
there is a tool in this case a crypto

226
00:08:46,880 --> 00:08:50,240
wallet that you use to store and manage

227
00:08:50,240 --> 00:08:52,480
the different keys you can have

228
00:08:52,480 --> 00:08:55,680
you have you can have many examples we

229
00:08:55,680 --> 00:08:57,920
have metamask a tracer et cetera for

230
00:08:57,920 --> 00:08:59,600
example metamask

231
00:08:59,600 --> 00:09:02,320
that is here it can be used like a

232
00:09:02,320 --> 00:09:05,519
plugin in the browser very easy

233
00:09:05,519 --> 00:09:06,880
so

234
00:09:06,880 --> 00:09:08,880
what are decentralized applications or

235
00:09:08,880 --> 00:09:10,160
dabs

236
00:09:10,160 --> 00:09:12,240
let's see

237
00:09:12,240 --> 00:09:14,000
the best way to understand is to see a

238
00:09:14,000 --> 00:09:16,399
real example so i introduced you to

239
00:09:16,399 --> 00:09:18,080
synthetics it's a

240
00:09:18,080 --> 00:09:18,880
dab

241
00:09:18,880 --> 00:09:20,560
that allows you to interact with

242
00:09:20,560 --> 00:09:23,760
financial assets so as you can see it

243
00:09:23,760 --> 00:09:26,000
looks like a normal web page

244
00:09:26,000 --> 00:09:28,320
we can go to the stacking option for

245
00:09:28,320 --> 00:09:30,399
example and we can see in the upper

246
00:09:30,399 --> 00:09:33,839
corner that we are not connected so

247
00:09:33,839 --> 00:09:35,920
we try to connect with a wallet appear

248
00:09:35,920 --> 00:09:37,920
many options i will try to connect with

249
00:09:37,920 --> 00:09:39,440
my meta mask

250
00:09:39,440 --> 00:09:40,800
wallet

251
00:09:40,800 --> 00:09:42,000
and then

252
00:09:42,000 --> 00:09:44,480
i select the first address here as you

253
00:09:44,480 --> 00:09:45,440
can see

254
00:09:45,440 --> 00:09:50,480
the address finishes in d1 e6

255
00:09:50,480 --> 00:09:52,880
now you can see in the upper corner that

256
00:09:52,880 --> 00:09:55,200
i connect connected with the others that

257
00:09:55,200 --> 00:09:58,880
end in d1 e6 that's it now i'm connected

258
00:09:58,880 --> 00:10:01,200
with adapt and i can interact with the

259
00:10:01,200 --> 00:10:02,560
different

260
00:10:02,560 --> 00:10:05,120
menus in the dashboard here

261
00:10:05,120 --> 00:10:06,079
great

262
00:10:06,079 --> 00:10:08,800
we can have many examples a financial

263
00:10:08,800 --> 00:10:10,560
application or defy

264
00:10:10,560 --> 00:10:13,760
we have marketplace similar to amazon

265
00:10:13,760 --> 00:10:16,000
similar to ebay we can have social

266
00:10:16,000 --> 00:10:18,000
network like youtube for example similar

267
00:10:18,000 --> 00:10:19,440
to youtube

268
00:10:19,440 --> 00:10:21,600
we can have video games we can have

269
00:10:21,600 --> 00:10:23,920
exchange application and many other

270
00:10:23,920 --> 00:10:26,640
other kinds of applications

271
00:10:26,640 --> 00:10:27,680
great

272
00:10:27,680 --> 00:10:29,279
what is architecture

273
00:10:29,279 --> 00:10:31,440
inside adapter we can compare it with a

274
00:10:31,440 --> 00:10:33,440
web application for example in a web

275
00:10:33,440 --> 00:10:35,440
application we have a browser that

276
00:10:35,440 --> 00:10:36,480
retrieve

277
00:10:36,480 --> 00:10:38,640
the static files from a web server with

278
00:10:38,640 --> 00:10:41,839
the static files i mean html css

279
00:10:41,839 --> 00:10:43,040
javascript

280
00:10:43,040 --> 00:10:45,680
and then the browser connects to a back

281
00:10:45,680 --> 00:10:47,920
for example through api the backend

282
00:10:47,920 --> 00:10:50,079
connects to a database and so on

283
00:10:50,079 --> 00:10:52,399
on the other hand the decentralized

284
00:10:52,399 --> 00:10:55,600
application or that we have that static

285
00:10:55,600 --> 00:10:59,040
files and backend is stored inside a

286
00:10:59,040 --> 00:11:00,560
blockchain

287
00:11:00,560 --> 00:11:02,720
the most used architecture is a hybrid

288
00:11:02,720 --> 00:11:03,680
one

289
00:11:03,680 --> 00:11:05,760
that static files are retrieved from a

290
00:11:05,760 --> 00:11:08,480
web server and that backend is

291
00:11:08,480 --> 00:11:10,560
inside double option

292
00:11:10,560 --> 00:11:14,240
the big question here is how is possible

293
00:11:14,240 --> 00:11:17,040
to store back-end inside blockchain what

294
00:11:17,040 --> 00:11:21,200
is the magic behind that let's see

295
00:11:21,200 --> 00:11:23,279
in the left and in the left side we have

296
00:11:23,279 --> 00:11:24,800
the browser and the web server and in

297
00:11:24,800 --> 00:11:26,079
the right side we have the junior

298
00:11:26,079 --> 00:11:27,279
blockchain

299
00:11:27,279 --> 00:11:30,240
for them to communicate we need a bridge

300
00:11:30,240 --> 00:11:33,360
a bridge can be any computer any server

301
00:11:33,360 --> 00:11:35,200
any cloud services

302
00:11:35,200 --> 00:11:37,600
and the key here is to turn this bridge

303
00:11:37,600 --> 00:11:40,560
this computer to itunes

304
00:11:40,560 --> 00:11:43,040
how can we get that we can install a

305
00:11:43,040 --> 00:11:45,360
tool like get we can use a cloud

306
00:11:45,360 --> 00:11:48,160
services like infura etc

307
00:11:48,160 --> 00:11:51,279
the thing is once you have an eq node

308
00:11:51,279 --> 00:11:53,920
you have your own local copy of the

309
00:11:53,920 --> 00:11:55,040
blockchain

310
00:11:55,040 --> 00:11:57,920
first then you install

311
00:11:57,920 --> 00:11:59,920
with a smart contact then then we

312
00:11:59,920 --> 00:12:02,079
install a component called ethereum

313
00:12:02,079 --> 00:12:04,639
virtual machine that allows to interpret

314
00:12:04,639 --> 00:12:07,040
the commands to the smart content and we

315
00:12:07,040 --> 00:12:08,720
have interfaces

316
00:12:08,720 --> 00:12:12,160
interfaces are the doors that allows us

317
00:12:12,160 --> 00:12:14,000
to communicate with external work and

318
00:12:14,000 --> 00:12:15,839
within internal process

319
00:12:15,839 --> 00:12:18,639
so the browser retrieve

320
00:12:18,639 --> 00:12:21,279
septic files from the web server

321
00:12:21,279 --> 00:12:24,880
html css javascript one of the many

322
00:12:24,880 --> 00:12:26,560
javascript files

323
00:12:26,560 --> 00:12:29,680
is a one that allows us to build the

324
00:12:29,680 --> 00:12:32,560
transaction in this case i'm using v3

325
00:12:32,560 --> 00:12:35,200
dot gs very popular one not the only one

326
00:12:35,200 --> 00:12:35,920
but

327
00:12:35,920 --> 00:12:38,399
it's one of the most used now

328
00:12:38,399 --> 00:12:41,279
the javascript build the transaction but

329
00:12:41,279 --> 00:12:43,120
remember we need to sign

330
00:12:43,120 --> 00:12:45,279
with a private key and what is a private

331
00:12:45,279 --> 00:12:48,320
key obviously in our crypto wallet

332
00:12:48,320 --> 00:12:50,639
as i told you a metamask for example is

333
00:12:50,639 --> 00:12:52,560
a crypto wallet we can

334
00:12:52,560 --> 00:12:55,360
install like applied in our browser once

335
00:12:55,360 --> 00:12:58,000
we have built and signed our transaction

336
00:12:58,000 --> 00:13:02,160
we send for example through http

337
00:13:02,160 --> 00:13:03,600
now

338
00:13:03,600 --> 00:13:07,120
if our transaction is a query

339
00:13:07,120 --> 00:13:08,720
for example how much

340
00:13:08,720 --> 00:13:10,959
eater i have in my balance if it's a

341
00:13:10,959 --> 00:13:13,760
query a read only question

342
00:13:13,760 --> 00:13:16,639
it is read from the local

343
00:13:16,639 --> 00:13:20,399
smart a blockchain and it returns the

344
00:13:20,399 --> 00:13:22,399
answer to the browser

345
00:13:22,399 --> 00:13:23,360
but

346
00:13:23,360 --> 00:13:25,279
if your transaction implies a

347
00:13:25,279 --> 00:13:28,000
modification for example send three

348
00:13:28,000 --> 00:13:30,639
eater to this smart contract

349
00:13:30,639 --> 00:13:34,160
so now you create a new block in your

350
00:13:34,160 --> 00:13:35,440
local

351
00:13:35,440 --> 00:13:38,959
each you know for your local blockchain

352
00:13:38,959 --> 00:13:39,920
and then

353
00:13:39,920 --> 00:13:42,480
through ethereum protocol you are going

354
00:13:42,480 --> 00:13:43,680
to share

355
00:13:43,680 --> 00:13:45,279
this block

356
00:13:45,279 --> 00:13:47,760
to other nodes and if they verify it's a

357
00:13:47,760 --> 00:13:50,240
compliant block they will join the block

358
00:13:50,240 --> 00:13:53,600
two hour to their local copy of luxury

359
00:13:53,600 --> 00:13:56,399
that's the magic

360
00:13:56,399 --> 00:13:59,279
between that's imagine behind

361
00:13:59,279 --> 00:14:00,160
dabs

362
00:14:00,160 --> 00:14:02,800
very interesting

363
00:14:02,800 --> 00:14:04,079
okay

364
00:14:04,079 --> 00:14:07,680
now moment of the truth are tabs secure

365
00:14:07,680 --> 00:14:09,279
well as far as we know

366
00:14:09,279 --> 00:14:10,959
they are immutable

367
00:14:10,959 --> 00:14:13,199
no one can modify the smart contract

368
00:14:13,199 --> 00:14:16,959
because they are inside a blockchain

369
00:14:16,959 --> 00:14:18,959
they are secure because

370
00:14:18,959 --> 00:14:20,480
all of us

371
00:14:20,480 --> 00:14:23,440
sign the transaction

372
00:14:23,440 --> 00:14:25,279
and anyone can verify the code of the

373
00:14:25,279 --> 00:14:27,440
smart contact so

374
00:14:27,440 --> 00:14:29,519
can go wrong

375
00:14:29,519 --> 00:14:31,199
well

376
00:14:31,199 --> 00:14:35,199
we have a steel of 10 million here

377
00:14:35,199 --> 00:14:36,880
30 millions there

378
00:14:36,880 --> 00:14:39,920
60 million over there so many many still

379
00:14:39,920 --> 00:14:41,279
of many

380
00:14:41,279 --> 00:14:43,600
millions of dollars

381
00:14:43,600 --> 00:14:45,519
so

382
00:14:45,519 --> 00:14:46,720
fun time

383
00:14:46,720 --> 00:14:48,480
how to hack

384
00:14:48,480 --> 00:14:50,800
dabs

385
00:14:52,160 --> 00:14:54,800
our first example is about an encrypted

386
00:14:54,800 --> 00:14:57,360
private data

387
00:14:57,360 --> 00:14:59,519
let's see this example we have a betting

388
00:14:59,519 --> 00:15:00,560
dab

389
00:15:00,560 --> 00:15:02,480
so player one

390
00:15:02,480 --> 00:15:03,440
bet

391
00:15:03,440 --> 00:15:07,279
one eater for a number and one

392
00:15:07,279 --> 00:15:09,199
nobody except the player one and the

393
00:15:09,199 --> 00:15:12,480
contract itself knows what is the number

394
00:15:12,480 --> 00:15:15,199
on the other hand player two bets one

395
00:15:15,199 --> 00:15:17,519
eater two number and two

396
00:15:17,519 --> 00:15:18,720
again

397
00:15:18,720 --> 00:15:20,800
nobody except the player two and the

398
00:15:20,800 --> 00:15:23,040
counter itself know what is the number

399
00:15:23,040 --> 00:15:24,160
and two

400
00:15:24,160 --> 00:15:27,680
so if the assume of the numbers

401
00:15:27,680 --> 00:15:30,959
is even the money goes to player one

402
00:15:30,959 --> 00:15:32,240
otherwise

403
00:15:32,240 --> 00:15:34,000
goes to player two

404
00:15:34,000 --> 00:15:37,040
that's a a fair game fifty fifty percent

405
00:15:37,040 --> 00:15:40,560
of of likelihood for each player so

406
00:15:40,560 --> 00:15:42,560
let's see a call

407
00:15:42,560 --> 00:15:45,199
we have here an instructor

408
00:15:45,199 --> 00:15:46,959
that represents a player and the number

409
00:15:46,959 --> 00:15:48,720
he plays

410
00:15:48,720 --> 00:15:51,680
then we have a public function

411
00:15:51,680 --> 00:15:54,320
why is public because there is a way how

412
00:15:54,320 --> 00:15:56,560
user in this case player interact with a

413
00:15:56,560 --> 00:15:57,519
contract

414
00:15:57,519 --> 00:16:00,000
and this is a public function that

415
00:16:00,000 --> 00:16:02,160
allows players to play

416
00:16:02,160 --> 00:16:04,959
and then we have a private function

417
00:16:04,959 --> 00:16:07,839
quite private because nobody except that

418
00:16:07,839 --> 00:16:10,079
contact itself can interact with this

419
00:16:10,079 --> 00:16:11,839
function this function contains the

420
00:16:11,839 --> 00:16:14,800
logic of how how to win

421
00:16:14,800 --> 00:16:17,600
and finally we have uh

422
00:16:17,600 --> 00:16:20,000
players data that are private obviously

423
00:16:20,000 --> 00:16:21,920
it's private because nobody knows what

424
00:16:21,920 --> 00:16:25,279
is a number that the player is betting

425
00:16:25,279 --> 00:16:26,639
but

426
00:16:26,639 --> 00:16:28,880
at first it seems secure

427
00:16:28,880 --> 00:16:30,800
what can go wrong here

428
00:16:30,800 --> 00:16:31,680
well

429
00:16:31,680 --> 00:16:33,839
let's see

430
00:16:33,839 --> 00:16:35,440
here i show you

431
00:16:35,440 --> 00:16:36,800
an ide

432
00:16:36,800 --> 00:16:40,000
and this is the the id that allows to

433
00:16:40,000 --> 00:16:43,040
to simulate some test scenarios and here

434
00:16:43,040 --> 00:16:46,800
i have the contact deploy this is the

435
00:16:46,800 --> 00:16:49,279
the financial play it's a

436
00:16:49,279 --> 00:16:51,199
public function so

437
00:16:51,199 --> 00:16:53,440
in this part we have the players let's

438
00:16:53,440 --> 00:16:56,800
say this is player 1 he has a 100 eater

439
00:16:56,800 --> 00:17:00,079
and player 2 he has 100 eater so player

440
00:17:00,079 --> 00:17:02,480
1 is going to let's say

441
00:17:02,480 --> 00:17:06,640
he wants to play for the number four

442
00:17:07,119 --> 00:17:09,119
play

443
00:17:09,119 --> 00:17:11,520
a second please

444
00:17:11,520 --> 00:17:13,919
we're going to

445
00:17:13,919 --> 00:17:16,559
we're going to restart our test

446
00:17:16,559 --> 00:17:17,679
blockchain

447
00:17:17,679 --> 00:17:19,839
great

448
00:17:20,640 --> 00:17:22,160
now we have a

449
00:17:22,160 --> 00:17:23,839
we are going to deploy at first we are

450
00:17:23,839 --> 00:17:25,039
going to deploy

451
00:17:25,039 --> 00:17:27,919
the smart contracts it's it's easier for

452
00:17:27,919 --> 00:17:30,080
example here we have the smart contract

453
00:17:30,080 --> 00:17:32,720
we are going to deploy

454
00:17:32,720 --> 00:17:34,799
here we have the contract again

455
00:17:34,799 --> 00:17:37,600
i'm going to be clear one

456
00:17:37,600 --> 00:17:38,880
i'm going to

457
00:17:38,880 --> 00:17:42,840
play for number four

458
00:17:47,520 --> 00:17:49,200
oops

459
00:17:49,200 --> 00:17:52,720
it tell let's see the transaction

460
00:17:53,360 --> 00:17:54,559
okay

461
00:17:54,559 --> 00:17:57,520
here we can see that every transaction

462
00:17:57,520 --> 00:17:59,200
we we do

463
00:17:59,200 --> 00:18:01,520
is going to be recorded in a blockchain

464
00:18:01,520 --> 00:18:02,320
so

465
00:18:02,320 --> 00:18:03,760
uh

466
00:18:03,760 --> 00:18:06,720
despite the contracts protects a number

467
00:18:06,720 --> 00:18:09,360
we if we see the transaction inside the

468
00:18:09,360 --> 00:18:11,760
blockchain here we have that this number

469
00:18:11,760 --> 00:18:14,640
that at first makes no sense at the end

470
00:18:14,640 --> 00:18:17,919
is is saying that this is the identifier

471
00:18:17,919 --> 00:18:18,960
of the

472
00:18:18,960 --> 00:18:21,360
function and this is the argument of the

473
00:18:21,360 --> 00:18:24,320
function and as you can see this is the

474
00:18:24,320 --> 00:18:26,840
number four in

475
00:18:26,840 --> 00:18:29,679
hexadecimal so

476
00:18:29,679 --> 00:18:32,320
we are going to move to

477
00:18:32,320 --> 00:18:34,000
player number

478
00:18:34,000 --> 00:18:35,440
two

479
00:18:35,440 --> 00:18:37,360
and we are going to

480
00:18:37,360 --> 00:18:40,960
i'm going to play one eater

481
00:18:40,960 --> 00:18:44,320
for number seven

482
00:18:45,760 --> 00:18:48,320
and as you can see

483
00:18:48,320 --> 00:18:51,200
in the transaction

484
00:18:51,200 --> 00:18:54,000
then the second player has played for

485
00:18:54,000 --> 00:18:55,280
number seven

486
00:18:55,280 --> 00:18:56,640
so at the end

487
00:18:56,640 --> 00:18:59,280
at the end player player number two wins

488
00:18:59,280 --> 00:19:00,640
the game

489
00:19:00,640 --> 00:19:03,200
so every transaction what is a lesson

490
00:19:03,200 --> 00:19:05,200
every transaction

491
00:19:05,200 --> 00:19:07,280
is going to be visible in the blockchain

492
00:19:07,280 --> 00:19:09,760
so be careful with what you do in the

493
00:19:09,760 --> 00:19:10,720
blockchain

494
00:19:10,720 --> 00:19:13,440
and remediation any private data should

495
00:19:13,440 --> 00:19:16,000
be either stored off-chain or carefully

496
00:19:16,000 --> 00:19:17,679
encrypted

497
00:19:17,679 --> 00:19:20,080
there are some references in the slide

498
00:19:20,080 --> 00:19:22,080
for you to see them

499
00:19:22,080 --> 00:19:23,520
the next example

500
00:19:23,520 --> 00:19:25,280
integral overflow

501
00:19:25,280 --> 00:19:27,760
integral overflow uh we can think uh

502
00:19:27,760 --> 00:19:30,240
about this with an odometer in an old

503
00:19:30,240 --> 00:19:31,200
car

504
00:19:31,200 --> 00:19:33,200
let's say the diameter reached the

505
00:19:33,200 --> 00:19:34,720
maximum value

506
00:19:34,720 --> 00:19:35,520
then

507
00:19:35,520 --> 00:19:38,080
if the car go over another mile he

508
00:19:38,080 --> 00:19:42,480
becomes zero that's an overflow

509
00:19:42,480 --> 00:19:44,799
an example we have a user

510
00:19:44,799 --> 00:19:48,559
he pays for example one meter and

511
00:19:48,559 --> 00:19:49,600
he

512
00:19:49,600 --> 00:19:52,559
obtains one token this token can be

513
00:19:52,559 --> 00:19:54,480
anything could be for example points in

514
00:19:54,480 --> 00:19:57,440
a platform a number of miles in a in a

515
00:19:57,440 --> 00:19:58,799
flight a

516
00:19:58,799 --> 00:20:00,799
company etc

517
00:20:00,799 --> 00:20:02,320
so

518
00:20:02,320 --> 00:20:04,320
this is the code for for this smart

519
00:20:04,320 --> 00:20:06,240
contract

520
00:20:06,240 --> 00:20:08,799
here we have a variable called balance

521
00:20:08,799 --> 00:20:10,080
off

522
00:20:10,080 --> 00:20:12,240
this represents the token balance for

523
00:20:12,240 --> 00:20:15,200
each user and the balance it's

524
00:20:15,200 --> 00:20:18,080
represented in this kind of

525
00:20:18,080 --> 00:20:19,200
structure

526
00:20:19,200 --> 00:20:21,679
here we have unsigned integer

527
00:20:21,679 --> 00:20:22,640
to

528
00:20:22,640 --> 00:20:24,960
256

529
00:20:24,960 --> 00:20:27,440
so the number of eater and i mean the

530
00:20:27,440 --> 00:20:30,400
number of token comparison from 0 to 2

531
00:20:30,400 --> 00:20:33,600
power 256 minus 1.

532
00:20:33,600 --> 00:20:37,039
what happens if we add another

533
00:20:37,039 --> 00:20:38,400
unit

534
00:20:38,400 --> 00:20:39,679
to this value

535
00:20:39,679 --> 00:20:42,159
it will become zero again as the

536
00:20:42,159 --> 00:20:43,200
odometer

537
00:20:43,200 --> 00:20:44,559
okay

538
00:20:44,559 --> 00:20:47,039
and here we have the token price that is

539
00:20:47,039 --> 00:20:48,640
one meter

540
00:20:48,640 --> 00:20:51,120
we have to know that one meter is equal

541
00:20:51,120 --> 00:20:54,080
to 10 powers 18 way

542
00:20:54,080 --> 00:20:56,000
weight is the minimum unit it's like

543
00:20:56,000 --> 00:20:58,240
dollar and cent here we have heater and

544
00:20:58,240 --> 00:20:59,120
weight

545
00:20:59,120 --> 00:21:00,320
okay

546
00:21:00,320 --> 00:21:02,159
we have finally a public function to buy

547
00:21:02,159 --> 00:21:03,760
talking obviously we need a pallet

548
00:21:03,760 --> 00:21:06,320
function so what is that

549
00:21:06,320 --> 00:21:09,200
how much money do we pay we have here

550
00:21:09,200 --> 00:21:11,679
number of tokens and here we have the

551
00:21:11,679 --> 00:21:14,240
price per okay it makes sense

552
00:21:14,240 --> 00:21:16,720
so how much to pay

553
00:21:16,720 --> 00:21:17,760
um

554
00:21:17,760 --> 00:21:19,520
well we have that

555
00:21:19,520 --> 00:21:21,280
we have a multiplication between number

556
00:21:21,280 --> 00:21:24,000
of token and price per token we know uh

557
00:21:24,000 --> 00:21:27,120
price per token is one ether and one

558
00:21:27,120 --> 00:21:28,559
meter is 10

559
00:21:28,559 --> 00:21:30,720
powers 18 way

560
00:21:30,720 --> 00:21:31,760
now

561
00:21:31,760 --> 00:21:34,559
what we are looking for it's a number

562
00:21:34,559 --> 00:21:36,400
number of token that make this

563
00:21:36,400 --> 00:21:39,520
multiplication to overflow

564
00:21:39,520 --> 00:21:40,320
so

565
00:21:40,320 --> 00:21:41,200
if we

566
00:21:41,200 --> 00:21:44,880
for example use this huge number

567
00:21:44,880 --> 00:21:46,880
huge really huge number and multiply

568
00:21:46,880 --> 00:21:49,039
with this value we obtain

569
00:21:49,039 --> 00:21:50,480
this new value

570
00:21:50,480 --> 00:21:53,520
how is it possible that this huge number

571
00:21:53,520 --> 00:21:56,559
multiplied by 10 power 18

572
00:21:56,559 --> 00:21:58,400
gives as a result this value

573
00:21:58,400 --> 00:21:59,600
easy

574
00:21:59,600 --> 00:22:01,200
we are talking about

575
00:22:01,200 --> 00:22:05,039
unsigned interior and we have overflow

576
00:22:05,039 --> 00:22:07,039
so this amount of money

577
00:22:07,039 --> 00:22:08,320
is the same

578
00:22:08,320 --> 00:22:09,679
than

579
00:22:09,679 --> 00:22:13,520
uh less than a half eater so in theory

580
00:22:13,520 --> 00:22:15,039
if we

581
00:22:15,039 --> 00:22:16,640
if we

582
00:22:16,640 --> 00:22:19,120
pay less than a half eater we are going

583
00:22:19,120 --> 00:22:20,799
to obtain this

584
00:22:20,799 --> 00:22:24,720
huge amount of token let's see in action

585
00:22:24,720 --> 00:22:26,720
so let's return

586
00:22:26,720 --> 00:22:27,520
uh

587
00:22:27,520 --> 00:22:29,120
here we have

588
00:22:29,120 --> 00:22:31,200
here we have another

589
00:22:31,200 --> 00:22:33,440
another uh

590
00:22:33,440 --> 00:22:35,600
another contract and we are going to

591
00:22:35,600 --> 00:22:38,320
deploy this this smart contract so let

592
00:22:38,320 --> 00:22:40,159
me change

593
00:22:40,159 --> 00:22:44,000
for this user i'm going to deploy it

594
00:22:44,130 --> 00:22:47,439
[Music]

595
00:22:49,679 --> 00:22:51,919
okay

596
00:22:52,559 --> 00:22:55,760
let's see ah here we have

597
00:22:55,760 --> 00:22:58,159
we need eater

598
00:22:58,159 --> 00:23:00,960
okay i'm going to play it again okay

599
00:23:00,960 --> 00:23:01,760
now

600
00:23:01,760 --> 00:23:04,320
here we have the smart contract deploy

601
00:23:04,320 --> 00:23:07,520
we have a buy cell etc

602
00:23:07,520 --> 00:23:08,799
let's

603
00:23:08,799 --> 00:23:12,480
use this new address that has 100 liter

604
00:23:12,480 --> 00:23:14,640
okay we're going to see what is that the

605
00:23:14,640 --> 00:23:16,960
initial balance of these others

606
00:23:16,960 --> 00:23:20,320
at first we have zero

607
00:23:20,320 --> 00:23:21,200
okay

608
00:23:21,200 --> 00:23:24,159
now we are going to buy a

609
00:23:24,159 --> 00:23:25,600
some tokens

610
00:23:25,600 --> 00:23:27,280
let's see if we

611
00:23:27,280 --> 00:23:28,480
for example

612
00:23:28,480 --> 00:23:31,440
buy this amount of token

613
00:23:31,440 --> 00:23:32,480
uh

614
00:23:32,480 --> 00:23:35,200
where is it we are going to buy this

615
00:23:35,200 --> 00:23:38,000
amount of token

616
00:23:38,000 --> 00:23:39,200
we just need

617
00:23:39,200 --> 00:23:42,799
to pay this amount of of way that it's

618
00:23:42,799 --> 00:23:44,000
very long

619
00:23:44,000 --> 00:23:46,799
so here we're going to

620
00:23:46,799 --> 00:23:48,880
send this amount of

621
00:23:48,880 --> 00:23:53,200
weight and let's see if it works

622
00:23:53,360 --> 00:23:54,640
okay

623
00:23:54,640 --> 00:23:57,760
the transaction is okay and let's query

624
00:23:57,760 --> 00:24:00,240
again the balance of the user

625
00:24:00,240 --> 00:24:02,080
at first we have zero

626
00:24:02,080 --> 00:24:05,919
and now we have this huge amount of of

627
00:24:05,919 --> 00:24:09,760
token and we only spend

628
00:24:09,760 --> 00:24:11,600
less let's see the

629
00:24:11,600 --> 00:24:14,880
the amount less than a half of each

630
00:24:14,880 --> 00:24:16,559
awesome

631
00:24:16,559 --> 00:24:19,360
believe me i'm not a romantic guy but

632
00:24:19,360 --> 00:24:23,679
this this is a love poem for hacking

633
00:24:23,679 --> 00:24:25,760
okay let's return

634
00:24:25,760 --> 00:24:27,120
great

635
00:24:27,120 --> 00:24:28,720
remediation

636
00:24:28,720 --> 00:24:30,159
we have to use

637
00:24:30,159 --> 00:24:32,159
mat libraries to handle internal

638
00:24:32,159 --> 00:24:34,360
overflow from solidity

639
00:24:34,360 --> 00:24:37,360
0.8 onwards

640
00:24:37,360 --> 00:24:38,559
they manage

641
00:24:38,559 --> 00:24:41,520
integral overflow in a native way but

642
00:24:41,520 --> 00:24:43,600
before that version you need to use a

643
00:24:43,600 --> 00:24:46,080
matte library

644
00:24:46,080 --> 00:24:48,720
final thoughts

645
00:24:49,919 --> 00:24:52,480
smart contracts and apps in general are

646
00:24:52,480 --> 00:24:55,520
in adoption fail so you have to use

647
00:24:55,520 --> 00:24:56,640
with care

648
00:24:56,640 --> 00:24:58,400
because if not

649
00:24:58,400 --> 00:25:01,279
it can lead to huge and sometimes

650
00:25:01,279 --> 00:25:03,679
millionaire breaches

651
00:25:03,679 --> 00:25:06,480
so you have to use a secure design

652
00:25:06,480 --> 00:25:08,799
patterns when you develop the smart

653
00:25:08,799 --> 00:25:11,440
contract we have to be to born

654
00:25:11,440 --> 00:25:15,679
from since the creation in a secure way

655
00:25:15,679 --> 00:25:17,360
it's important

656
00:25:17,360 --> 00:25:19,360
a continuous security training for all

657
00:25:19,360 --> 00:25:21,440
the team involved in the creation

658
00:25:21,440 --> 00:25:23,840
development maintenance and deployment

659
00:25:23,840 --> 00:25:25,840
of a smart contract

660
00:25:25,840 --> 00:25:28,799
and finally you can use strong automated

661
00:25:28,799 --> 00:25:31,760
scans but they have a limited scope so

662
00:25:31,760 --> 00:25:33,279
it's important to complement those

663
00:25:33,279 --> 00:25:36,000
scanning with manual security testing

664
00:25:36,000 --> 00:25:38,159
carried out but especially a staff who

665
00:25:38,159 --> 00:25:40,240
knows how to read a code how to to

666
00:25:40,240 --> 00:25:42,240
understand the logic and obviously how

667
00:25:42,240 --> 00:25:46,720
to personalize and customize the test

668
00:25:47,440 --> 00:25:48,480
that's it

669
00:25:48,480 --> 00:25:52,440
thank you very much for your assistance

