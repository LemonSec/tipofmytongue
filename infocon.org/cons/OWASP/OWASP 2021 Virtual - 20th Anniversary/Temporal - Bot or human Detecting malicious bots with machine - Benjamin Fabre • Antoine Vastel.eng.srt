1
00:00:01,410 --> 00:00:06,030
[Music]

2
00:00:08,320 --> 00:00:11,120
so we are protecting websites and mobile

3
00:00:11,120 --> 00:00:13,280
applications all around the world in

4
00:00:13,280 --> 00:00:16,720
here in the us in europe and asia

5
00:00:16,720 --> 00:00:18,960
and that's how we can collect a huge

6
00:00:18,960 --> 00:00:22,000
amount of data to train our ai and to

7
00:00:22,000 --> 00:00:22,960
run the

8
00:00:22,960 --> 00:00:24,880
bud detection part

9
00:00:24,880 --> 00:00:27,199
we are focused on the

10
00:00:27,199 --> 00:00:30,080
owasp category around automatic threats

11
00:00:30,080 --> 00:00:33,840
so the wasp is classifying those threats

12
00:00:33,840 --> 00:00:35,360
like a can't take over credential

13
00:00:35,360 --> 00:00:38,719
stuffing denial of services and scalping

14
00:00:38,719 --> 00:00:40,559
and of course as

15
00:00:40,559 --> 00:00:44,239
all of us we've seen a huge increase in

16
00:00:44,239 --> 00:00:47,280
threats like credential surfing lately

17
00:00:47,280 --> 00:00:49,280
so the agenda today will be around the

18
00:00:49,280 --> 00:00:50,640
bad but

19
00:00:50,640 --> 00:00:53,039
how sophisticated are there today in

20
00:00:53,039 --> 00:00:55,920
2021 then antoine will talk about the

21
00:00:55,920 --> 00:00:57,520
detection techniques

22
00:00:57,520 --> 00:01:00,079
and finally we will have a zoom on one

23
00:01:00,079 --> 00:01:01,840
of the machine learning algorithm that

24
00:01:01,840 --> 00:01:03,840
we are using at data

25
00:01:03,840 --> 00:01:06,400
to detect the most sophisticated buds

26
00:01:06,400 --> 00:01:10,479
that have never been seen before

27
00:01:10,479 --> 00:01:11,280
so

28
00:01:11,280 --> 00:01:15,040
what does a bad bot look like in 2021

29
00:01:15,040 --> 00:01:17,200
so we are facing many different

30
00:01:17,200 --> 00:01:20,159
challenges first the bots are targeting

31
00:01:20,159 --> 00:01:23,200
every single endpoint so let's take an

32
00:01:23,200 --> 00:01:25,680
example of a standard application today

33
00:01:25,680 --> 00:01:28,320
so we have servers and apis labeled

34
00:01:28,320 --> 00:01:30,880
publicly and then we have uh the

35
00:01:30,880 --> 00:01:33,200
consumer or on the client side like a

36
00:01:33,200 --> 00:01:36,400
mobile application a web application or

37
00:01:36,400 --> 00:01:38,799
an html website so that's what we are

38
00:01:38,799 --> 00:01:41,119
calling the client side

39
00:01:41,119 --> 00:01:43,360
what we are seeing is obviously that the

40
00:01:43,360 --> 00:01:45,439
the bad guys are trying to reach the

41
00:01:45,439 --> 00:01:47,840
servers and the apis and that's

42
00:01:47,840 --> 00:01:50,240
something that must be protected

43
00:01:50,240 --> 00:01:52,640
but by the time we've seen that the bad

44
00:01:52,640 --> 00:01:54,960
guys are also trying to reach the mobile

45
00:01:54,960 --> 00:01:57,200
application the web application and the

46
00:01:57,200 --> 00:02:01,040
html website that must be protected

47
00:02:01,040 --> 00:02:03,600
in general the hackers will try to find

48
00:02:03,600 --> 00:02:06,640
the weakest spot on any website or

49
00:02:06,640 --> 00:02:08,160
application

50
00:02:08,160 --> 00:02:11,920
where they could get access to the data

51
00:02:11,920 --> 00:02:14,239
the second big challenge is that bots

52
00:02:14,239 --> 00:02:16,640
are using the same technologies

53
00:02:16,640 --> 00:02:18,000
as human

54
00:02:18,000 --> 00:02:20,319
so they are using a real browser for

55
00:02:20,319 --> 00:02:23,840
instance like a puppeteer or comet less

56
00:02:23,840 --> 00:02:26,959
to get access to websites and to evade

57
00:02:26,959 --> 00:02:28,640
the basic detection

58
00:02:28,640 --> 00:02:30,959
the hackers are not using curl anymore

59
00:02:30,959 --> 00:02:32,480
because this is too abused to be

60
00:02:32,480 --> 00:02:34,080
detected

61
00:02:34,080 --> 00:02:36,239
and on the mobile part they are using

62
00:02:36,239 --> 00:02:38,000
real mobile device i don't know if you

63
00:02:38,000 --> 00:02:40,640
have seen this video but today you can

64
00:02:40,640 --> 00:02:43,519
run thousands of free mobile device that

65
00:02:43,519 --> 00:02:44,239
can

66
00:02:44,239 --> 00:02:47,040
execute real native application to

67
00:02:47,040 --> 00:02:50,400
generate fake views they click fake

68
00:02:50,400 --> 00:02:52,400
reviews or

69
00:02:52,400 --> 00:02:54,959
scrap the content

70
00:02:54,959 --> 00:02:57,680
the first biggest challenge is that the

71
00:02:57,680 --> 00:03:00,879
attacks now are heavily distributed

72
00:03:00,879 --> 00:03:02,800
it's not like a few years ago where the

73
00:03:02,800 --> 00:03:04,879
cat and mouse game was around just

74
00:03:04,879 --> 00:03:08,159
blocking the most important ip addresses

75
00:03:08,159 --> 00:03:10,720
in your ip table list

76
00:03:10,720 --> 00:03:12,560
this is an example of a recent attack

77
00:03:12,560 --> 00:03:14,239
that we've seen on one of our customers

78
00:03:14,239 --> 00:03:15,519
website

79
00:03:15,519 --> 00:03:17,599
the attack was coming from millions of

80
00:03:17,599 --> 00:03:19,680
different ip addresses

81
00:03:19,680 --> 00:03:21,840
and each of those rp addresses they were

82
00:03:21,840 --> 00:03:24,560
just doing one or two login attempts so

83
00:03:24,560 --> 00:03:26,799
that means any approach that is trying

84
00:03:26,799 --> 00:03:29,680
to catch the the bad but just

85
00:03:29,680 --> 00:03:32,159
being eyepie centric cannot catch those

86
00:03:32,159 --> 00:03:35,040
kind of attack

87
00:03:35,440 --> 00:03:37,920
also the bots now are using super clean

88
00:03:37,920 --> 00:03:40,319
ip addresses so of course they are still

89
00:03:40,319 --> 00:03:42,400
using data centers ip addresses so you

90
00:03:42,400 --> 00:03:44,640
can see a huge amount of traffic coming

91
00:03:44,640 --> 00:03:45,519
from

92
00:03:45,519 --> 00:03:48,959
aws as your gcp or some cheaper club

93
00:03:48,959 --> 00:03:51,200
provider

94
00:03:51,200 --> 00:03:53,360
of course we still see some ip addresses

95
00:03:53,360 --> 00:03:57,280
coming from a organization but the rise

96
00:03:57,280 --> 00:04:00,080
of the residential ip addresses involved

97
00:04:00,080 --> 00:04:00,799
in

98
00:04:00,799 --> 00:04:02,159
bot attacks

99
00:04:02,159 --> 00:04:05,519
is just insane today it's 30 percent

100
00:04:05,519 --> 00:04:07,680
but this number is growing

101
00:04:07,680 --> 00:04:10,959
and doubling every year

102
00:04:11,040 --> 00:04:13,760
why because it's now available super

103
00:04:13,760 --> 00:04:15,840
easy so you can just pay a few hundreds

104
00:04:15,840 --> 00:04:18,000
of dollars to get access for instance

105
00:04:18,000 --> 00:04:21,120
here in the us to ip addresses coming

106
00:04:21,120 --> 00:04:23,840
from comcast he or cox

107
00:04:23,840 --> 00:04:27,199
or mobile isps like sprint verizon or

108
00:04:27,199 --> 00:04:29,120
t-mobile

109
00:04:29,120 --> 00:04:30,960
that's globally

110
00:04:30,960 --> 00:04:33,680
infected mobile device that will be

111
00:04:33,680 --> 00:04:36,000
using those high priorities and that you

112
00:04:36,000 --> 00:04:38,080
can use as a proxy

113
00:04:38,080 --> 00:04:42,160
using just a few command lines

114
00:04:42,160 --> 00:04:44,800
and also now bots they are able to pass

115
00:04:44,800 --> 00:04:47,280
captcha so you know that uh during the

116
00:04:47,280 --> 00:04:49,840
last few years uh websites and mobile

117
00:04:49,840 --> 00:04:52,160
applications tend to use capture to be

118
00:04:52,160 --> 00:04:54,240
protected against the bots

119
00:04:54,240 --> 00:04:55,120
but

120
00:04:55,120 --> 00:04:57,680
with two different uh techniques they

121
00:04:57,680 --> 00:05:00,479
can invade those kind of protection uh

122
00:05:00,479 --> 00:05:02,000
we can see that they can pass the

123
00:05:02,000 --> 00:05:04,479
captcha using the cometless puppeteer

124
00:05:04,479 --> 00:05:08,080
for instance uh and using ai and machine

125
00:05:08,080 --> 00:05:10,960
to run a image recognition

126
00:05:10,960 --> 00:05:14,000
and on the other side they can use um

127
00:05:14,000 --> 00:05:16,479
solutions like to capture where human

128
00:05:16,479 --> 00:05:18,720
will be involved sometimes it's even

129
00:05:18,720 --> 00:05:21,919
cheaper to involve human rather than

130
00:05:21,919 --> 00:05:23,440
using a lot of

131
00:05:23,440 --> 00:05:26,479
cpu to compute some

132
00:05:26,479 --> 00:05:28,800
ai

133
00:05:28,800 --> 00:05:31,039
and finally and that's probably the

134
00:05:31,039 --> 00:05:34,240
most sad part of the story that it's not

135
00:05:34,240 --> 00:05:36,800
only available for the most advanced

136
00:05:36,800 --> 00:05:39,680
engineers and and hackers

137
00:05:39,680 --> 00:05:41,840
you doesn't you don't need to be part of

138
00:05:41,840 --> 00:05:44,000
a huge hacker group

139
00:05:44,000 --> 00:05:46,320
because today this is available through

140
00:05:46,320 --> 00:05:49,360
some solution as a service you can on

141
00:05:49,360 --> 00:05:51,360
one side get access to

142
00:05:51,360 --> 00:05:53,440
the best advanced

143
00:05:53,440 --> 00:05:55,440
browser as a service solution like

144
00:05:55,440 --> 00:05:57,840
others for instance and use it in

145
00:05:57,840 --> 00:06:00,800
combination of a mobile residential ipad

146
00:06:00,800 --> 00:06:04,160
vs proxy as a service like illuminati

147
00:06:04,160 --> 00:06:06,080
and without any specific knowledge you

148
00:06:06,080 --> 00:06:08,880
can just start creating a very advanced

149
00:06:08,880 --> 00:06:10,319
bot actually

150
00:06:10,319 --> 00:06:11,840
and that's for instance the move that

151
00:06:11,840 --> 00:06:14,080
luminati did uh by

152
00:06:14,080 --> 00:06:16,479
moving from just a residential proxy ip

153
00:06:16,479 --> 00:06:17,840
addresses

154
00:06:17,840 --> 00:06:19,440
to add

155
00:06:19,440 --> 00:06:23,199
the scraping part and and the other part

156
00:06:23,199 --> 00:06:26,160
so now anyone any newbie can just run a

157
00:06:26,160 --> 00:06:29,280
massive attack using just a few dollars

158
00:06:29,280 --> 00:06:33,039
and one of those solutions

159
00:06:33,120 --> 00:06:36,160
so now antoine the floor is you

160
00:06:36,160 --> 00:06:37,440
thank you

161
00:06:37,440 --> 00:06:38,880
can you hear me

162
00:06:38,880 --> 00:06:39,840
yeah

163
00:06:39,840 --> 00:06:41,440
okay so now i'm going to talk about the

164
00:06:41,440 --> 00:06:43,120
bud detection techniques that we use to

165
00:06:43,120 --> 00:06:45,199
catch these bad bots and later i will

166
00:06:45,199 --> 00:06:47,680
finish by describing one of the machine

167
00:06:47,680 --> 00:06:50,240
learning approach that we use to detect

168
00:06:50,240 --> 00:06:53,120
credential stating attacks

169
00:06:53,120 --> 00:06:55,440
so when it comes to having the best bug

170
00:06:55,440 --> 00:06:57,840
detection it requires to collect as many

171
00:06:57,840 --> 00:07:00,080
signals as possible and being able to

172
00:07:00,080 --> 00:07:02,400
process them in real time that's why

173
00:07:02,400 --> 00:07:04,720
datadome collects billions of signals a

174
00:07:04,720 --> 00:07:06,639
day ranging from browser fingerprinting

175
00:07:06,639 --> 00:07:08,319
attributes connecting with our

176
00:07:08,319 --> 00:07:10,479
javascript tag running on hundreds of

177
00:07:10,479 --> 00:07:12,639
millions of browsers every day

178
00:07:12,639 --> 00:07:14,560
to mobile fingerprints that we collect

179
00:07:14,560 --> 00:07:16,960
with the help of our sdk on millions of

180
00:07:16,960 --> 00:07:18,400
devices

181
00:07:18,400 --> 00:07:20,080
in addition to the signals we also

182
00:07:20,080 --> 00:07:21,680
collect information like the user

183
00:07:21,680 --> 00:07:23,840
behavior

184
00:07:23,840 --> 00:07:26,400
and so what do we do with the signals so

185
00:07:26,400 --> 00:07:29,199
first when we receive an http request we

186
00:07:29,199 --> 00:07:30,880
will enrich it

187
00:07:30,880 --> 00:07:32,400
by adding new signals such as the

188
00:07:32,400 --> 00:07:34,000
country

189
00:07:34,000 --> 00:07:35,680
around the iprs like the countries

190
00:07:35,680 --> 00:07:37,680
autonomous system whether or not the

191
00:07:37,680 --> 00:07:39,680
station or the iep has recently

192
00:07:39,680 --> 00:07:41,919
conducted malicious activity

193
00:07:41,919 --> 00:07:44,560
then in parallel we will execute in less

194
00:07:44,560 --> 00:07:46,479
than two milliseconds a set of different

195
00:07:46,479 --> 00:07:48,639
approaches that are all necessary to

196
00:07:48,639 --> 00:07:50,639
obtain the best butt detection as

197
00:07:50,639 --> 00:07:52,000
possible

198
00:07:52,000 --> 00:07:53,840
so first we will verify

199
00:07:53,840 --> 00:07:56,080
if the request is coming from a verified

200
00:07:56,080 --> 00:07:58,160
bot or a good bot like google bots and

201
00:07:58,160 --> 00:08:00,160
whether or not much custom rule created

202
00:08:00,160 --> 00:08:02,800
by our customers in their dashboard

203
00:08:02,800 --> 00:08:05,599
we'll verify if it match a set of known

204
00:08:05,599 --> 00:08:07,039
signature

205
00:08:07,039 --> 00:08:09,280
of bots for example

206
00:08:09,280 --> 00:08:11,520
bots with a discriminating

207
00:08:11,520 --> 00:08:12,800
your pre-inter

208
00:08:12,800 --> 00:08:15,039
but that have no client-side

209
00:08:15,039 --> 00:08:16,400
fingerprints

210
00:08:16,400 --> 00:08:18,879
and then we will apply a set of machine

211
00:08:18,879 --> 00:08:21,280
learning detection techniques

212
00:08:21,280 --> 00:08:22,960
i will provide more details on this

213
00:08:22,960 --> 00:08:26,080
topic after

214
00:08:26,080 --> 00:08:27,039
so

215
00:08:27,039 --> 00:08:30,319
regarding verified but uh

216
00:08:30,319 --> 00:08:32,320
and none yeah

217
00:08:32,320 --> 00:08:33,200
well

218
00:08:33,200 --> 00:08:35,519
we're getting verified but it's uh often

219
00:08:35,519 --> 00:08:38,000
another estimated task in bot detection

220
00:08:38,000 --> 00:08:39,039
because we think it's easy to

221
00:08:39,039 --> 00:08:41,440
authenticate good bots but it's common

222
00:08:41,440 --> 00:08:43,440
for attackers to lie about their

223
00:08:43,440 --> 00:08:47,200
identity to try to fool a defender

224
00:08:47,200 --> 00:08:49,519
so for example according to our own

225
00:08:49,519 --> 00:08:51,920
statistics around 30 of all bots

226
00:08:51,920 --> 00:08:53,600
claiming to be googlebots are not

227
00:08:53,600 --> 00:08:54,800
googlebots

228
00:08:54,800 --> 00:08:56,959
to conceal their true nature that bots

229
00:08:56,959 --> 00:08:59,839
hijack the official googlebot user agent

230
00:08:59,839 --> 00:09:02,080
and use ip addresses from google cloud

231
00:09:02,080 --> 00:09:03,120
platform

232
00:09:03,120 --> 00:09:06,480
to pretend to be a legitimate google bot

233
00:09:06,480 --> 00:09:08,800
and if you want to apply google's own

234
00:09:08,800 --> 00:09:11,040
authentication recommendations it can be

235
00:09:11,040 --> 00:09:13,680
cumbersome to apply in real time

236
00:09:13,680 --> 00:09:16,399
that's why at data room uh we have an

237
00:09:16,399 --> 00:09:18,320
in-memory database of this kind of bot

238
00:09:18,320 --> 00:09:20,399
patterns to reliably and safely

239
00:09:20,399 --> 00:09:22,720
authenticate good buds and very fine

240
00:09:22,720 --> 00:09:25,040
bots

241
00:09:25,680 --> 00:09:26,720
also

242
00:09:26,720 --> 00:09:29,600
constant vigilance is still required

243
00:09:29,600 --> 00:09:31,760
required as hackers keep coming up with

244
00:09:31,760 --> 00:09:34,320
new ways to disguise their bots as being

245
00:09:34,320 --> 00:09:35,600
good buds

246
00:09:35,600 --> 00:09:37,920
for example recently the threat research

247
00:09:37,920 --> 00:09:39,760
team discovered that facebook link's

248
00:09:39,760 --> 00:09:42,160
preview feature was being used as a

249
00:09:42,160 --> 00:09:44,800
proxy by web scraping bots

250
00:09:44,800 --> 00:09:45,680
because

251
00:09:45,680 --> 00:09:48,080
facebook bots are typically authorized

252
00:09:48,080 --> 00:09:50,320
or whitelisted by website administrators

253
00:09:50,320 --> 00:09:53,200
the preview api opened a back door for

254
00:09:53,200 --> 00:09:55,600
bad bot operators so we contacted

255
00:09:55,600 --> 00:09:57,360
facebook and they now applied rate

256
00:09:57,360 --> 00:10:01,680
limiting to fix this issue

257
00:10:03,680 --> 00:10:06,560
now uh there is a another set of but

258
00:10:06,560 --> 00:10:08,480
that we can identify uh based on their

259
00:10:08,480 --> 00:10:10,480
signature so the least significant

260
00:10:10,480 --> 00:10:12,560
sophisticated bad bots are relatively

261
00:10:12,560 --> 00:10:14,880
easy to detect by looking at non-bird

262
00:10:14,880 --> 00:10:16,000
signatures

263
00:10:16,000 --> 00:10:17,760
these are specific patterns in the

264
00:10:17,760 --> 00:10:19,920
incoming http request which we know

265
00:10:19,920 --> 00:10:22,800
belong to bots

266
00:10:23,440 --> 00:10:25,920
so bad signatures can be extracted from

267
00:10:25,920 --> 00:10:28,000
different categories of signals such as

268
00:10:28,000 --> 00:10:30,480
http requests and headers tls

269
00:10:30,480 --> 00:10:32,640
fingerprints browser fingerprint so

270
00:10:32,640 --> 00:10:34,720
fingerprint connected with javascript

271
00:10:34,720 --> 00:10:36,800
attributes and mobile fingerprint

272
00:10:36,800 --> 00:10:40,320
connected with the user for sdk

273
00:10:40,320 --> 00:10:42,560
so for example uh when we will receive a

274
00:10:42,560 --> 00:10:45,279
request we look for inconsistent http

275
00:10:45,279 --> 00:10:46,160
errors

276
00:10:46,160 --> 00:10:48,640
if i use a visitor pretends to be a

277
00:10:48,640 --> 00:10:51,120
legitimate chrome browser but doesn't

278
00:10:51,120 --> 00:10:53,920
send the appropriate errors that should

279
00:10:53,920 --> 00:10:56,560
be present with this chrome version or

280
00:10:56,560 --> 00:10:58,320
sends error with values that are not

281
00:10:58,320 --> 00:10:59,839
consistent then

282
00:10:59,839 --> 00:11:01,440
it will deflect the suspicious because

283
00:11:01,440 --> 00:11:02,320
it has

284
00:11:02,320 --> 00:11:05,360
an invaded signature

285
00:11:06,880 --> 00:11:09,519
and now i'm going to explain how we use

286
00:11:09,519 --> 00:11:11,519
machine learning approaches for bot

287
00:11:11,519 --> 00:11:14,000
detection

288
00:11:14,000 --> 00:11:16,880
so a data loan detection engine leverage

289
00:11:16,880 --> 00:11:18,320
a wide range of machine learning

290
00:11:18,320 --> 00:11:21,600
approaches to detect malicious traffic

291
00:11:21,600 --> 00:11:23,760
the the philosophy of machine learning

292
00:11:23,760 --> 00:11:26,160
at data dome is to use a wide range of

293
00:11:26,160 --> 00:11:28,000
machine learning model each run

294
00:11:28,000 --> 00:11:31,440
responsible for a particular task

295
00:11:31,440 --> 00:11:32,800
for example

296
00:11:32,800 --> 00:11:34,640
we leverage supervised learning to

297
00:11:34,640 --> 00:11:37,600
analyze consistency of fingerprints

298
00:11:37,600 --> 00:11:38,880
and determine

299
00:11:38,880 --> 00:11:41,760
the reputation of an ip address

300
00:11:41,760 --> 00:11:44,320
we leverage unsupervised learning to

301
00:11:44,320 --> 00:11:46,000
apply outlier detection on website

302
00:11:46,000 --> 00:11:46,959
traffic

303
00:11:46,959 --> 00:11:49,839
and detect when there is an anomaly and

304
00:11:49,839 --> 00:11:51,839
we also use semi-supervised

305
00:11:51,839 --> 00:11:53,680
learning to detect capture funds for

306
00:11:53,680 --> 00:11:55,120
example

307
00:11:55,120 --> 00:11:57,600
the output of all these models is

308
00:11:57,600 --> 00:11:59,519
combined using a technique called model

309
00:11:59,519 --> 00:12:02,160
stacking and then it enables us to take

310
00:12:02,160 --> 00:12:04,240
a final decision so whether or not we

311
00:12:04,240 --> 00:12:08,760
allow or block the traffic

312
00:12:10,079 --> 00:12:14,240
now i'm going to present a use case so

313
00:12:14,240 --> 00:12:16,320
of applying machine learning to bot

314
00:12:16,320 --> 00:12:18,560
detection so that's an approach that we

315
00:12:18,560 --> 00:12:20,639
call the ai login response which is

316
00:12:20,639 --> 00:12:23,200
specialized in detecting heavy

317
00:12:23,200 --> 00:12:25,200
credential staffing attacks

318
00:12:25,200 --> 00:12:27,360
so attacks conducting are conducted on

319
00:12:27,360 --> 00:12:29,440
the login endpoints where each ip makes

320
00:12:29,440 --> 00:12:31,040
few requests

321
00:12:31,040 --> 00:12:32,880
so it's a combination of outlier

322
00:12:32,880 --> 00:12:35,040
detection and malicious traffic

323
00:12:35,040 --> 00:12:37,200
isolation specialized for financial

324
00:12:37,200 --> 00:12:39,839
staffing

325
00:12:40,639 --> 00:12:42,959
but first how can we apply machine

326
00:12:42,959 --> 00:12:44,959
learning for bot detection

327
00:12:44,959 --> 00:12:46,480
machine learning for that detection can

328
00:12:46,480 --> 00:12:49,200
be applied at different granularities we

329
00:12:49,200 --> 00:12:52,320
can apply it under each http request to

330
00:12:52,320 --> 00:12:54,720
classify for example whether or not the

331
00:12:54,720 --> 00:12:58,240
signature is legitimate or not

332
00:12:58,240 --> 00:12:59,279
we can

333
00:12:59,279 --> 00:13:02,480
apply it on iprs or on session to

334
00:13:02,480 --> 00:13:04,240
observe whether or not the behavior of

335
00:13:04,240 --> 00:13:06,639
the session of this iep is legitimate or

336
00:13:06,639 --> 00:13:09,600
if it can be linked to that activity

337
00:13:09,600 --> 00:13:12,399
and we can also observe the wall traffic

338
00:13:12,399 --> 00:13:14,560
of a website or of a mobile app to

339
00:13:14,560 --> 00:13:16,399
determine if globally

340
00:13:16,399 --> 00:13:19,440
the traffic is legitimate or if a

341
00:13:19,440 --> 00:13:21,200
significant part of the nature of the

342
00:13:21,200 --> 00:13:23,120
traffic changed and is linked to

343
00:13:23,120 --> 00:13:25,600
malicious activity

344
00:13:25,600 --> 00:13:29,120
the approach that we will present today

345
00:13:29,120 --> 00:13:31,760
operates on two granularities to

346
00:13:31,760 --> 00:13:35,360
optimize the detection first we monitor

347
00:13:35,360 --> 00:13:37,040
all the website traffic

348
00:13:37,040 --> 00:13:39,760
so all the website traffic is

349
00:13:39,760 --> 00:13:41,360
monitored using different techniques

350
00:13:41,360 --> 00:13:43,199
that i will present after

351
00:13:43,199 --> 00:13:45,760
and then we operate also on the http

352
00:13:45,760 --> 00:13:47,279
request

353
00:13:47,279 --> 00:13:49,440
the idea is to be efficient against

354
00:13:49,440 --> 00:13:51,360
heavily distributed attacks because they

355
00:13:51,360 --> 00:13:52,320
are

356
00:13:52,320 --> 00:13:54,880
they cannot be detected by looking only

357
00:13:54,880 --> 00:13:57,120
at each request we need to monitor the

358
00:13:57,120 --> 00:13:59,440
world website traffic and also to be

359
00:13:59,440 --> 00:14:01,519
efficient against bots that constantly

360
00:14:01,519 --> 00:14:03,920
modify their fingerprints in order to

361
00:14:03,920 --> 00:14:06,560
avoid detection

362
00:14:06,560 --> 00:14:08,240
so this solution

363
00:14:08,240 --> 00:14:11,680
is in three steps first we identify the

364
00:14:11,680 --> 00:14:13,120
blocking patterns

365
00:14:13,120 --> 00:14:14,560
that the blocking patterns need to

366
00:14:14,560 --> 00:14:15,920
update so it means that we need to

367
00:14:15,920 --> 00:14:19,120
detect that there is an attack going on

368
00:14:19,120 --> 00:14:21,040
then we will infer the set of malicious

369
00:14:21,040 --> 00:14:23,440
fingerprints among all the website

370
00:14:23,440 --> 00:14:24,720
traffic

371
00:14:24,720 --> 00:14:26,639
and generate blocking patterns to block

372
00:14:26,639 --> 00:14:28,800
only these malicious parts

373
00:14:28,800 --> 00:14:30,720
and finally

374
00:14:30,720 --> 00:14:33,360
we will enforce these blocking patterns

375
00:14:33,360 --> 00:14:36,800
in real time so that all the requests

376
00:14:36,800 --> 00:14:40,319
part of the attack are blocked

377
00:14:41,360 --> 00:14:42,399
so

378
00:14:42,399 --> 00:14:43,360
first

379
00:14:43,360 --> 00:14:45,440
let's look at how we detect ongoing

380
00:14:45,440 --> 00:14:48,639
attacks in real time

381
00:14:48,880 --> 00:14:50,800
so for every customer

382
00:14:50,800 --> 00:14:53,760
we monitor a set of aggregate statistics

383
00:14:53,760 --> 00:14:55,680
on the login endpoint for example on the

384
00:14:55,680 --> 00:14:57,440
login we will monitor the distinct

385
00:14:57,440 --> 00:14:59,040
number of user agents the distinct

386
00:14:59,040 --> 00:15:01,440
number of uh iprc's

387
00:15:01,440 --> 00:15:03,600
of countries making requests on this

388
00:15:03,600 --> 00:15:06,800
endpoint and we will apply outlier

389
00:15:06,800 --> 00:15:09,120
detection on this time series so as you

390
00:15:09,120 --> 00:15:11,360
can see on the picture

391
00:15:11,360 --> 00:15:14,320
uh it's only with four time series but

392
00:15:14,320 --> 00:15:16,480
these are signals that we monitor

393
00:15:16,480 --> 00:15:18,800
and for each of them we apply an outlier

394
00:15:18,800 --> 00:15:21,120
detection algorithm in real time in a

395
00:15:21,120 --> 00:15:23,040
streaming detection engine that will

396
00:15:23,040 --> 00:15:24,160
detect

397
00:15:24,160 --> 00:15:25,760
when an anomaly

398
00:15:25,760 --> 00:15:27,760
starts to happen and if we detect an

399
00:15:27,760 --> 00:15:29,360
anomaly then

400
00:15:29,360 --> 00:15:31,759
we will push an event uh describing the

401
00:15:31,759 --> 00:15:33,360
attack so we'll send an event saying

402
00:15:33,360 --> 00:15:35,040
that for a given customer at a given

403
00:15:35,040 --> 00:15:36,399
time

404
00:15:36,399 --> 00:15:37,600
a given

405
00:15:37,600 --> 00:15:41,839
attribute starting varying abnormally

406
00:15:43,120 --> 00:15:44,880
so now that we know that an attack is

407
00:15:44,880 --> 00:15:47,279
going on we need to identify the subset

408
00:15:47,279 --> 00:15:49,040
of malicious traffic among all the

409
00:15:49,040 --> 00:15:51,680
website or application traffic

410
00:15:51,680 --> 00:15:55,040
and how do we do that so

411
00:15:55,040 --> 00:15:57,279
for this particular

412
00:15:57,279 --> 00:15:59,040
machine learning approach we focus on

413
00:15:59,040 --> 00:16:01,920
server side fingerprints so by server

414
00:16:01,920 --> 00:16:03,440
cycling and prints we mean attributes

415
00:16:03,440 --> 00:16:05,440
that can be accessed when we retrieve a

416
00:16:05,440 --> 00:16:08,560
request such as an ap address along with

417
00:16:08,560 --> 00:16:10,560
all the information that can be enriched

418
00:16:10,560 --> 00:16:12,160
with an ap address such as the

419
00:16:12,160 --> 00:16:14,560
autonomous system the country whether or

420
00:16:14,560 --> 00:16:16,720
not it's a proxy

421
00:16:16,720 --> 00:16:18,480
we will also use information from the

422
00:16:18,480 --> 00:16:21,279
http traders the tls fingerprint as well

423
00:16:21,279 --> 00:16:23,680
as your ability and we can use basically

424
00:16:23,680 --> 00:16:25,440
any attribute available on the server

425
00:16:25,440 --> 00:16:26,320
side

426
00:16:26,320 --> 00:16:29,759
we will call it a fingerprint

427
00:16:29,759 --> 00:16:30,880
and then

428
00:16:30,880 --> 00:16:32,480
the goal is

429
00:16:32,480 --> 00:16:33,519
to

430
00:16:33,519 --> 00:16:35,920
analyze each request so for each request

431
00:16:35,920 --> 00:16:38,560
we will extract a given fingerprint

432
00:16:38,560 --> 00:16:41,199
fingerprint so from a mathematical point

433
00:16:41,199 --> 00:16:43,440
of view a fingerprint can be seen as a

434
00:16:43,440 --> 00:16:46,720
set of categorical variables a i that

435
00:16:46,720 --> 00:16:49,279
have a possible set of values

436
00:16:49,279 --> 00:16:51,360
and we'll try to generate blocking

437
00:16:51,360 --> 00:16:53,040
patterns so what we call a blocking

438
00:16:53,040 --> 00:16:54,079
patterns

439
00:16:54,079 --> 00:16:56,560
is simply a conjunction of attribute

440
00:16:56,560 --> 00:16:58,000
value pairs

441
00:16:58,000 --> 00:17:00,160
so to give you an example

442
00:17:00,160 --> 00:17:02,880
uh it could be something like user agent

443
00:17:02,880 --> 00:17:06,559
is a chrome 92 and tls fingerprint equal

444
00:17:06,559 --> 00:17:08,720
133 in 93

445
00:17:08,720 --> 00:17:11,359
and other attributes so we can add as

446
00:17:11,359 --> 00:17:14,000
many clothes as we want to

447
00:17:14,000 --> 00:17:15,679
generate the patterns linked to

448
00:17:15,679 --> 00:17:18,880
malicious activity

449
00:17:18,880 --> 00:17:21,679
how do we do do it so to give you an

450
00:17:21,679 --> 00:17:24,319
intuition behind our approach the idea

451
00:17:24,319 --> 00:17:26,799
is to find discriminating attributes to

452
00:17:26,799 --> 00:17:29,600
identify what change

453
00:17:29,600 --> 00:17:31,679
before between before and after the

454
00:17:31,679 --> 00:17:33,200
attack started

455
00:17:33,200 --> 00:17:36,080
so the graph that you see on the screen

456
00:17:36,080 --> 00:17:37,679
shows the evolution of different

457
00:17:37,679 --> 00:17:39,600
attributes and values such as the list

458
00:17:39,600 --> 00:17:41,760
of errors the autonomous systems that

459
00:17:41,760 --> 00:17:42,960
are targeting

460
00:17:42,960 --> 00:17:45,039
the logging endpoint of a customer and

461
00:17:45,039 --> 00:17:47,360
for all of them we see a spike for

462
00:17:47,360 --> 00:17:49,280
certain values

463
00:17:49,280 --> 00:17:50,880
which are linked probably to the

464
00:17:50,880 --> 00:17:52,880
fingerprint of the attacker

465
00:17:52,880 --> 00:17:55,120
the goal of our approach is to do it but

466
00:17:55,120 --> 00:17:57,280
not only in two dimensions but

467
00:17:57,280 --> 00:17:59,120
it's to mine

468
00:17:59,120 --> 00:18:01,679
discriminating blocking patterns linked

469
00:18:01,679 --> 00:18:04,559
to the attacker

470
00:18:05,280 --> 00:18:06,880
so how do we do it

471
00:18:06,880 --> 00:18:09,440
so we started by using a modified

472
00:18:09,440 --> 00:18:11,520
version of an algorithm called stucco

473
00:18:11,520 --> 00:18:14,000
which is a contrast set mining algorithm

474
00:18:14,000 --> 00:18:16,880
and we adapt we adapted it to address

475
00:18:16,880 --> 00:18:18,799
the real-time requirements that we have

476
00:18:18,799 --> 00:18:20,640
at that time

477
00:18:20,640 --> 00:18:22,080
because we need to react as fast as

478
00:18:22,080 --> 00:18:24,640
possible to the to detect and stop

479
00:18:24,640 --> 00:18:26,720
attacks on the login endpoint

480
00:18:26,720 --> 00:18:29,039
the code of the algorithm

481
00:18:29,039 --> 00:18:31,039
that find the contrast set is to find

482
00:18:31,039 --> 00:18:34,880
contrast set so is to find what differs

483
00:18:34,880 --> 00:18:36,799
between before and after the attack

484
00:18:36,799 --> 00:18:38,480
started

485
00:18:38,480 --> 00:18:39,520
and so

486
00:18:39,520 --> 00:18:41,200
to do it we apply the contrast set

487
00:18:41,200 --> 00:18:43,600
algorithm on two groups of data before

488
00:18:43,600 --> 00:18:46,640
the attack during the attack

489
00:18:46,640 --> 00:18:48,559
our approach our approach generates

490
00:18:48,559 --> 00:18:51,360
contrast set which in our case we call

491
00:18:51,360 --> 00:18:52,720
blocking patterns since they

492
00:18:52,720 --> 00:18:54,880
characterize the potentially malicious

493
00:18:54,880 --> 00:18:58,000
traffic of the attacker

494
00:18:58,000 --> 00:19:01,440
once we have identified a set of

495
00:19:01,440 --> 00:19:02,559
potential

496
00:19:02,559 --> 00:19:04,640
quantitative blocking patterns

497
00:19:04,640 --> 00:19:06,880
we define evaluation metric to choose

498
00:19:06,880 --> 00:19:08,240
the best ones

499
00:19:08,240 --> 00:19:10,960
by best ones we mean the ones that block

500
00:19:10,960 --> 00:19:12,960
the most traffic malicious traffic all

501
00:19:12,960 --> 00:19:15,520
while allowing human traffic

502
00:19:15,520 --> 00:19:18,480
and if it satisfies our accept

503
00:19:18,480 --> 00:19:20,240
acceptance criteria

504
00:19:20,240 --> 00:19:22,559
we enforce this bloc these blocking

505
00:19:22,559 --> 00:19:25,840
patterns in real time

506
00:19:28,000 --> 00:19:30,400
so one thing that i feel is important to

507
00:19:30,400 --> 00:19:32,799
say is that our blocking pattern this

508
00:19:32,799 --> 00:19:34,640
approach is really safe

509
00:19:34,640 --> 00:19:37,120
against legitimate spikes of traffic

510
00:19:37,120 --> 00:19:39,679
because all e-commerce website all news

511
00:19:39,679 --> 00:19:41,120
websites

512
00:19:41,120 --> 00:19:42,160
will have

513
00:19:42,160 --> 00:19:46,640
spikes of human traffic maybe because

514
00:19:46,720 --> 00:19:49,360
they buy advertising or they organize

515
00:19:49,360 --> 00:19:51,280
the flash sales or there is black friday

516
00:19:51,280 --> 00:19:53,200
or maybe it will be unplanned there will

517
00:19:53,200 --> 00:19:55,360
be there will be a

518
00:19:55,360 --> 00:19:56,640
breaking news

519
00:19:56,640 --> 00:19:59,919
so our approach is resilient against

520
00:19:59,919 --> 00:20:03,360
this kind of situations

521
00:20:03,600 --> 00:20:05,600
indeed the goal is to detect a

522
00:20:05,600 --> 00:20:08,559
distribution oh

523
00:20:08,559 --> 00:20:11,840
uh yeah yeah

524
00:20:12,159 --> 00:20:14,799
we don't see okay i will continue but uh

525
00:20:14,799 --> 00:20:16,480
our approach

526
00:20:16,480 --> 00:20:20,080
aims to detect a shift in distribution

527
00:20:20,080 --> 00:20:22,320
between before and after the attack in

528
00:20:22,320 --> 00:20:24,559
case of a legitimate

529
00:20:24,559 --> 00:20:25,520
event

530
00:20:25,520 --> 00:20:28,400
then we will see only we'll see the same

531
00:20:28,400 --> 00:20:30,240
distribution but with the different

532
00:20:30,240 --> 00:20:32,799
scaling factors so our approach will be

533
00:20:32,799 --> 00:20:34,880
resilient

534
00:20:34,880 --> 00:20:36,400
moreover

535
00:20:36,400 --> 00:20:38,480
in the previous slide i talked about

536
00:20:38,480 --> 00:20:40,960
acceptance criteria and evaluation

537
00:20:40,960 --> 00:20:42,960
matrix it means that

538
00:20:42,960 --> 00:20:44,799
we don't accept all the

539
00:20:44,799 --> 00:20:47,039
all the blocking patterns we evaluate

540
00:20:47,039 --> 00:20:49,760
them against some metrics and also we

541
00:20:49,760 --> 00:20:51,520
evaluate how they would have performed

542
00:20:51,520 --> 00:20:53,200
in the past to ensure that it wouldn't

543
00:20:53,200 --> 00:20:55,320
block any human traffic

544
00:20:55,320 --> 00:20:56,880
[Music]

545
00:20:56,880 --> 00:20:58,159
and once

546
00:20:58,159 --> 00:21:00,240
we have identified this set of

547
00:21:00,240 --> 00:21:02,000
legitimate blocking patents we enforce

548
00:21:02,000 --> 00:21:04,320
them in real time and as we see on the

549
00:21:04,320 --> 00:21:06,480
screen so it's the the result of this

550
00:21:06,480 --> 00:21:09,840
algorithm apply on a credential staffing

551
00:21:09,840 --> 00:21:12,240
attack on a customer customer or mobile

552
00:21:12,240 --> 00:21:14,840
login endpoint

553
00:21:14,840 --> 00:21:18,000
so the vertical grey line

554
00:21:18,000 --> 00:21:20,080
represents when the attack was detected

555
00:21:20,080 --> 00:21:22,960
by our outlier detection model

556
00:21:22,960 --> 00:21:23,919
then

557
00:21:23,919 --> 00:21:25,919
our contrast set mining algorithm

558
00:21:25,919 --> 00:21:28,159
starting to generate

559
00:21:28,159 --> 00:21:31,440
and find malicious blocking patterns

560
00:21:31,440 --> 00:21:33,679
and so in red the red line

561
00:21:33,679 --> 00:21:35,280
represents the traffic that has been

562
00:21:35,280 --> 00:21:36,880
blocked

563
00:21:36,880 --> 00:21:39,120
by the blocking pattern generated by ai

564
00:21:39,120 --> 00:21:41,440
login response

565
00:21:41,440 --> 00:21:42,799
in green

566
00:21:42,799 --> 00:21:44,640
the good news is that in green which is

567
00:21:44,640 --> 00:21:46,400
the low traffic we see that the holo

568
00:21:46,400 --> 00:21:48,480
traffic remains stable over time which

569
00:21:48,480 --> 00:21:50,400
is a good sign because it means that

570
00:21:50,400 --> 00:21:52,960
human activity remains stable it means

571
00:21:52,960 --> 00:21:55,440
that it was not impacted by our blocking

572
00:21:55,440 --> 00:21:58,159
patterns

573
00:21:58,159 --> 00:22:00,720
and so that our blocking patterns were

574
00:22:00,720 --> 00:22:02,159
responsible only for blocking the

575
00:22:02,159 --> 00:22:04,720
malicious part of the attack and not

576
00:22:04,720 --> 00:22:06,880
manage the legitimate part of the

577
00:22:06,880 --> 00:22:08,320
traffic

578
00:22:08,320 --> 00:22:10,400
thanks to this approach we were capable

579
00:22:10,400 --> 00:22:12,559
to quickly detect an abnormal change at

580
00:22:12,559 --> 00:22:14,880
the wall website scale and generate

581
00:22:14,880 --> 00:22:16,640
several blocking patterns to block the

582
00:22:16,640 --> 00:22:19,919
malicious part of the traffic

583
00:22:21,679 --> 00:22:24,320
yeah thank you so to to wrap up the key

584
00:22:24,320 --> 00:22:26,960
takeaway around the automated

585
00:22:26,960 --> 00:22:29,679
traffic and the different threats is

586
00:22:29,679 --> 00:22:31,840
that today the bots and the human are

587
00:22:31,840 --> 00:22:34,080
using the same technologies and ip

588
00:22:34,080 --> 00:22:35,440
addresses

589
00:22:35,440 --> 00:22:36,320
that the

590
00:22:36,320 --> 00:22:37,919
the event tracking and the behavioral

591
00:22:37,919 --> 00:22:41,760
detection is key in this fight against

592
00:22:41,760 --> 00:22:43,600
the automatic traffic

593
00:22:43,600 --> 00:22:45,840
but but protection must be done in real

594
00:22:45,840 --> 00:22:48,799
time using automated process

595
00:22:48,799 --> 00:22:51,919
because attacks are going super fast

596
00:22:51,919 --> 00:22:53,120
and that

597
00:22:53,120 --> 00:22:55,679
we have to leverage all the different

598
00:22:55,679 --> 00:22:58,000
machine learning solutions

599
00:22:58,000 --> 00:23:00,720
using supervised unsupervised and super

600
00:23:00,720 --> 00:23:03,280
supervised to be able to detect evenly

601
00:23:03,280 --> 00:23:05,280
distributed attacks

602
00:23:05,280 --> 00:23:08,080
and that can change in terms of shape in

603
00:23:08,080 --> 00:23:10,159
real time

604
00:23:10,159 --> 00:23:12,640
so thank you for your attention

605
00:23:12,640 --> 00:23:15,520
for any questions we have the q a coming

606
00:23:15,520 --> 00:23:16,880
and i guess

607
00:23:16,880 --> 00:23:19,440
we will have the slack also open

608
00:23:19,440 --> 00:23:22,679
to discussion

