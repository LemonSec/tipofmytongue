1
00:00:01,410 --> 00:00:06,030
[Music]

2
00:00:07,759 --> 00:00:09,440
so thank you all for being here uh so

3
00:00:09,440 --> 00:00:11,040
the title of my talk is a little bit a

4
00:00:11,040 --> 00:00:12,559
long one so it's everything you always

5
00:00:12,559 --> 00:00:13,840
wanted to know about fingerprinting

6
00:00:13,840 --> 00:00:15,519
browser extensions but we're afraid to

7
00:00:15,519 --> 00:00:17,760
ask so hopefully you learn and you can

8
00:00:17,760 --> 00:00:19,760
also not be afraid to ask afterwards in

9
00:00:19,760 --> 00:00:22,960
the slack channel so uh in short i'm an

10
00:00:22,960 --> 00:00:24,240
associate professor at stony brook

11
00:00:24,240 --> 00:00:26,400
university in long island new york

12
00:00:26,400 --> 00:00:28,480
i work in all types of web security and

13
00:00:28,480 --> 00:00:30,480
network security and privacy

14
00:00:30,480 --> 00:00:32,079
you can see there a few of the areas

15
00:00:32,079 --> 00:00:33,920
that i work in working online tracking

16
00:00:33,920 --> 00:00:36,160
which is the focus of today's talk uh

17
00:00:36,160 --> 00:00:37,760
dns security web application

18
00:00:37,760 --> 00:00:39,760
fingerprinting mobile browser security

19
00:00:39,760 --> 00:00:41,520
so how are mobile browsers different

20
00:00:41,520 --> 00:00:42,879
than desktop browsers in terms of the

21
00:00:42,879 --> 00:00:45,280
security attack surface reduction can we

22
00:00:45,280 --> 00:00:47,039
take large web applications and shrink

23
00:00:47,039 --> 00:00:48,559
them down to the parts that we want to

24
00:00:48,559 --> 00:00:51,199
keep uh and get rid of the rest and the

25
00:00:51,199 --> 00:00:53,360
the vulnerabilities in in that rest of

26
00:00:53,360 --> 00:00:56,480
the code um how can we use honeypots and

27
00:00:56,480 --> 00:00:59,120
deception technologies for defenses in

28
00:00:59,120 --> 00:01:01,600
web applications and finally anti-bot

29
00:01:01,600 --> 00:01:02,960
technologies so

30
00:01:02,960 --> 00:01:04,720
uh as i mentioned the talk will be

31
00:01:04,720 --> 00:01:06,560
focused on online tracking but

32
00:01:06,560 --> 00:01:08,640
please feel free to to look me up and

33
00:01:08,640 --> 00:01:10,479
see all the other work that we've done

34
00:01:10,479 --> 00:01:13,200
in all these other spaces so

35
00:01:13,200 --> 00:01:14,720
i'll start by just mentioning something

36
00:01:14,720 --> 00:01:16,320
that should be obvious to anyone who's a

37
00:01:16,320 --> 00:01:18,560
web user the browser extensions are very

38
00:01:18,560 --> 00:01:20,560
very popular right so

39
00:01:20,560 --> 00:01:23,360
browser extensions allow us to customize

40
00:01:23,360 --> 00:01:25,119
our browsers in a way

41
00:01:25,119 --> 00:01:26,880
that we want to do it and it's not

42
00:01:26,880 --> 00:01:29,600
supported out of the box by by browser

43
00:01:29,600 --> 00:01:31,920
vendor and so

44
00:01:31,920 --> 00:01:33,439
probably the vast majority of the people

45
00:01:33,439 --> 00:01:35,920
attending this uh talk will have at

46
00:01:35,920 --> 00:01:38,880
least an ad block excuse me an ad

47
00:01:38,880 --> 00:01:41,520
blocker installed right and then

48
00:01:41,520 --> 00:01:44,000
probably some a good chunk are using

49
00:01:44,000 --> 00:01:46,320
some form of online password manager

50
00:01:46,320 --> 00:01:48,640
right so such as lastpass uh and then

51
00:01:48,640 --> 00:01:50,240
there is really you know the sky's the

52
00:01:50,240 --> 00:01:52,399
limit in terms of extensions so you have

53
00:01:52,399 --> 00:01:55,759
extensions that check the text that you

54
00:01:55,759 --> 00:01:57,360
type and make sure that your syntax is

55
00:01:57,360 --> 00:01:58,719
nice and clean right they have

56
00:01:58,719 --> 00:02:00,240
extensions that are searching for

57
00:02:00,240 --> 00:02:02,240
coupons when you're trying to purchase

58
00:02:02,240 --> 00:02:04,320
something so you get a better price

59
00:02:04,320 --> 00:02:06,320
right you have extensions that

60
00:02:06,320 --> 00:02:07,920
if you're a pinterest user you can save

61
00:02:07,920 --> 00:02:10,560
things your pinterest right and uh

62
00:02:10,560 --> 00:02:13,200
you can even interface with antivirus uh

63
00:02:13,200 --> 00:02:15,360
software that has trouble otherwise

64
00:02:15,360 --> 00:02:17,200
looking into your browser because of the

65
00:02:17,200 --> 00:02:19,120
end-to-end encryption these days so

66
00:02:19,120 --> 00:02:20,959
browse exchanges are very popular and

67
00:02:20,959 --> 00:02:22,560
many many users are using particularly

68
00:02:22,560 --> 00:02:24,879
power users

69
00:02:24,879 --> 00:02:27,280
the from a privacy perspective they're

70
00:02:27,280 --> 00:02:29,840
also considered to be somewhat private

71
00:02:29,840 --> 00:02:31,440
right so if you if you're not familiar

72
00:02:31,440 --> 00:02:32,640
with browser fingerprinting it's this

73
00:02:32,640 --> 00:02:34,319
idea that

74
00:02:34,319 --> 00:02:35,920
you can extract information from a

75
00:02:35,920 --> 00:02:37,200
user's browser

76
00:02:37,200 --> 00:02:40,000
combine that information um

77
00:02:40,000 --> 00:02:41,680
into a fingerprint and that fingerprint

78
00:02:41,680 --> 00:02:44,160
turns out to be quite unique so if i if

79
00:02:44,160 --> 00:02:45,280
you come to my website and i use

80
00:02:45,280 --> 00:02:47,120
javascript for example read your screen

81
00:02:47,120 --> 00:02:49,680
resolution uh extract your list of fonts

82
00:02:49,680 --> 00:02:52,640
that are installed on your machine uh

83
00:02:52,640 --> 00:02:56,160
draw a complex 3d object in a canvas and

84
00:02:56,160 --> 00:02:58,080
then read it back as bytes

85
00:02:58,080 --> 00:03:00,080
uh it turns out that all of these right

86
00:03:00,080 --> 00:03:02,879
have effectively uh characteristics that

87
00:03:02,879 --> 00:03:04,319
are very dependent on your hardware

88
00:03:04,319 --> 00:03:05,680
stack on your software stack on your

89
00:03:05,680 --> 00:03:08,239
choices as a user so this fingerprinting

90
00:03:08,239 --> 00:03:11,360
idea is well known right and so um

91
00:03:11,360 --> 00:03:14,080
plugins right such as java and flash and

92
00:03:14,080 --> 00:03:15,920
so on you could actually read this when

93
00:03:15,920 --> 00:03:18,080
you were doing this fingerprinting and

94
00:03:18,080 --> 00:03:19,599
incorporate them into your fingerprint

95
00:03:19,599 --> 00:03:20,800
and

96
00:03:20,800 --> 00:03:23,040
a few years back plugins were quite a

97
00:03:23,040 --> 00:03:24,319
big source of

98
00:03:24,319 --> 00:03:25,519
um

99
00:03:25,519 --> 00:03:27,120
of uniqueness right so there was they

100
00:03:27,120 --> 00:03:28,080
were considered a powerful

101
00:03:28,080 --> 00:03:30,720
fingerprinting vector however as you may

102
00:03:30,720 --> 00:03:32,879
already know uh plugins

103
00:03:32,879 --> 00:03:34,640
are going or have gone the way of the

104
00:03:34,640 --> 00:03:37,519
dodo uh so we don't really like plugins

105
00:03:37,519 --> 00:03:39,120
anymore we think they're buggy right

106
00:03:39,120 --> 00:03:40,959
there's like third-party code running

107
00:03:40,959 --> 00:03:42,560
natively into your browser with high

108
00:03:42,560 --> 00:03:44,080
privileges

109
00:03:44,080 --> 00:03:44,879
so

110
00:03:44,879 --> 00:03:46,480
flash is deprecated

111
00:03:46,480 --> 00:03:47,840
java

112
00:03:47,840 --> 00:03:50,080
kind of in your browser right so most

113
00:03:50,080 --> 00:03:52,319
users these days don't really have

114
00:03:52,319 --> 00:03:54,720
uh plugins anymore but they do have

115
00:03:54,720 --> 00:03:56,799
extensions right and so

116
00:03:56,799 --> 00:03:58,720
just to make it clear extensions are

117
00:03:58,720 --> 00:04:01,280
built using javascript css and html

118
00:04:01,280 --> 00:04:03,200
right and they that's it you just build

119
00:04:03,200 --> 00:04:05,360
an extension uh you have access to

120
00:04:05,360 --> 00:04:07,680
privileged apis so that you can access

121
00:04:07,680 --> 00:04:09,599
cookies across all websites you can

122
00:04:09,599 --> 00:04:10,959
access tabs you can do all sorts of

123
00:04:10,959 --> 00:04:12,640
things but you're not running code

124
00:04:12,640 --> 00:04:14,560
anymore native code in the way that

125
00:04:14,560 --> 00:04:17,120
plugins used to right so

126
00:04:17,120 --> 00:04:18,160
um

127
00:04:18,160 --> 00:04:19,918
if you compare plugins to extensions

128
00:04:19,918 --> 00:04:22,880
extensions are not

129
00:04:22,880 --> 00:04:25,360
there is no way for a page to list the

130
00:04:25,360 --> 00:04:27,199
browser extensions that a user has

131
00:04:27,199 --> 00:04:28,479
installed and the reason for this is

132
00:04:28,479 --> 00:04:30,160
that extensions for the most part are

133
00:04:30,160 --> 00:04:32,320
not meant to be there to help the page

134
00:04:32,320 --> 00:04:34,240
right so a page in the past would check

135
00:04:34,240 --> 00:04:36,320
if you support flash in order to show

136
00:04:36,320 --> 00:04:37,919
you a flash app

137
00:04:37,919 --> 00:04:39,440
but when you have an app blocker all

138
00:04:39,440 --> 00:04:40,960
right obviously the page kind of doesn't

139
00:04:40,960 --> 00:04:42,560
want you to be using an ad blocker right

140
00:04:42,560 --> 00:04:45,199
but these are installed by users

141
00:04:45,199 --> 00:04:48,160
to um to augment their experience and to

142
00:04:48,160 --> 00:04:49,520
better their experience of browsing

143
00:04:49,520 --> 00:04:51,360
they're not for the most part again

144
00:04:51,360 --> 00:04:52,960
they're not meant to be somehow

145
00:04:52,960 --> 00:04:55,280
collaborating with a website to better

146
00:04:55,280 --> 00:04:57,440
your experience so the long the the

147
00:04:57,440 --> 00:04:59,280
short story of this is that there is no

148
00:04:59,280 --> 00:05:01,280
api that a web page can use that says

149
00:05:01,280 --> 00:05:03,440
give me your list of browser extensions

150
00:05:03,440 --> 00:05:05,520
that doesn't exist okay

151
00:05:05,520 --> 00:05:07,600
so that would lead us to the question

152
00:05:07,600 --> 00:05:09,759
are these extensions undetectable so is

153
00:05:09,759 --> 00:05:10,479
it

154
00:05:10,479 --> 00:05:13,520
is it not possible really for a

155
00:05:13,520 --> 00:05:15,520
web page to discover what extensions you

156
00:05:15,520 --> 00:05:16,639
have installed

157
00:05:16,639 --> 00:05:18,240
and if you've been using the web for

158
00:05:18,240 --> 00:05:19,840
more than a day

159
00:05:19,840 --> 00:05:21,520
you most likely know that no that

160
00:05:21,520 --> 00:05:23,280
doesn't seem to be the case right so

161
00:05:23,280 --> 00:05:25,199
there's a lot of websites that are

162
00:05:25,199 --> 00:05:27,440
actually able to detect that you're

163
00:05:27,440 --> 00:05:30,240
using an app blocker for example right

164
00:05:30,240 --> 00:05:31,919
and then they ask you to either pay for

165
00:05:31,919 --> 00:05:33,440
a subscription or turn it off or do

166
00:05:33,440 --> 00:05:35,520
something else right and

167
00:05:35,520 --> 00:05:38,080
so we know that clearly it's possible

168
00:05:38,080 --> 00:05:40,000
but the question is how is it possible

169
00:05:40,000 --> 00:05:42,240
right if there is no api that a website

170
00:05:42,240 --> 00:05:45,600
can use to inquire uh into your browser

171
00:05:45,600 --> 00:05:47,600
how is it that the website knows that

172
00:05:47,600 --> 00:05:49,039
you're actually using an ad blocker

173
00:05:49,039 --> 00:05:50,400
right so that's part of what we will

174
00:05:50,400 --> 00:05:51,600
cover today

175
00:05:51,600 --> 00:05:54,080
the next question is okay so what are

176
00:05:54,080 --> 00:05:55,919
the implications of a website knowing

177
00:05:55,919 --> 00:05:57,680
that you have extension installed right

178
00:05:57,680 --> 00:05:59,840
so if you have an ad blocker installed

179
00:05:59,840 --> 00:06:01,360
they can force you to

180
00:06:01,360 --> 00:06:04,000
disable it or pay them right but other

181
00:06:04,000 --> 00:06:05,680
than that what are the implications of a

182
00:06:05,680 --> 00:06:06,960
website knowing what it is that you're

183
00:06:06,960 --> 00:06:09,120
running right the first one is sort of

184
00:06:09,120 --> 00:06:11,280
the obvious one uh is that if i know

185
00:06:11,280 --> 00:06:13,440
what extensions you have installed i can

186
00:06:13,440 --> 00:06:15,759
actually tailor my exploits so maybe i

187
00:06:15,759 --> 00:06:17,600
know i have a vulnerability for a given

188
00:06:17,600 --> 00:06:19,360
extension i know that you're running

189
00:06:19,360 --> 00:06:21,120
that extension i being the malicious

190
00:06:21,120 --> 00:06:24,240
website uh so i can now launch

191
00:06:24,240 --> 00:06:26,479
that uh exploit against the extension

192
00:06:26,479 --> 00:06:28,000
that you know have installed right so

193
00:06:28,000 --> 00:06:30,080
that's problem number one uh problem

194
00:06:30,080 --> 00:06:34,800
number two is that it turns out that um

195
00:06:35,039 --> 00:06:37,039
because users choose to install

196
00:06:37,039 --> 00:06:38,319
extensions

197
00:06:38,319 --> 00:06:40,160
your list of extension reveals something

198
00:06:40,160 --> 00:06:42,560
about you right and about me so for

199
00:06:42,560 --> 00:06:44,000
instance if you look there at the bottom

200
00:06:44,000 --> 00:06:45,600
of the screen

201
00:06:45,600 --> 00:06:47,600
if you have an extension that

202
00:06:47,600 --> 00:06:49,759
does like gpg in your emails

203
00:06:49,759 --> 00:06:51,199
that means that you are technically

204
00:06:51,199 --> 00:06:53,039
savvy and a website if it's able to

205
00:06:53,039 --> 00:06:54,720
detect the presence of that extension

206
00:06:54,720 --> 00:06:57,199
can actually already put a label on you

207
00:06:57,199 --> 00:06:58,319
about what it is that you know and you

208
00:06:58,319 --> 00:07:00,319
don't know right if you have some sort

209
00:07:00,319 --> 00:07:02,800
of coupon finding extension

210
00:07:02,800 --> 00:07:05,120
now as a website i know that you're

211
00:07:05,120 --> 00:07:07,280
price sensitive right i can place you in

212
00:07:07,280 --> 00:07:09,919
a certain socioeconomic category right

213
00:07:09,919 --> 00:07:12,720
um if you have a favorite politician or

214
00:07:12,720 --> 00:07:14,400
a hated politician

215
00:07:14,400 --> 00:07:15,840
chances are that someone has built an

216
00:07:15,840 --> 00:07:18,080
extension that whenever they find their

217
00:07:18,080 --> 00:07:19,919
name on the internet they will hide the

218
00:07:19,919 --> 00:07:22,080
article or they replace it with some

219
00:07:22,080 --> 00:07:23,599
sort of swear words such as the two

220
00:07:23,599 --> 00:07:25,360
extensions there on the bottom

221
00:07:25,360 --> 00:07:26,240
so

222
00:07:26,240 --> 00:07:28,960
again if i if i'm able to discover that

223
00:07:28,960 --> 00:07:30,479
you have such an extension installed i

224
00:07:30,479 --> 00:07:32,319
can immediately peg you

225
00:07:32,319 --> 00:07:34,639
uh and peg your uh your political

226
00:07:34,639 --> 00:07:37,199
leanings right uh and the same goes for

227
00:07:37,199 --> 00:07:39,360
religious leanings and for for all sorts

228
00:07:39,360 --> 00:07:41,360
of other things that i can infer about

229
00:07:41,360 --> 00:07:42,880
because of your choice to install a

230
00:07:42,880 --> 00:07:45,039
given extension or not right so that's a

231
00:07:45,039 --> 00:07:47,440
problem number two and the third problem

232
00:07:47,440 --> 00:07:49,039
which is also in the privacy space has

233
00:07:49,039 --> 00:07:50,960
to do now with actually using this to be

234
00:07:50,960 --> 00:07:53,199
anonymized right so if you see there on

235
00:07:53,199 --> 00:07:55,440
the right we have a bunch of users and

236
00:07:55,440 --> 00:07:56,400
on the left we have a bunch of

237
00:07:56,400 --> 00:07:58,800
extensions and the whole idea now is

238
00:07:58,800 --> 00:08:01,759
that if i as a user

239
00:08:01,759 --> 00:08:04,240
have chosen a unique set of extensions

240
00:08:04,240 --> 00:08:05,520
to install

241
00:08:05,520 --> 00:08:08,160
and the website can

242
00:08:08,160 --> 00:08:09,759
can figure out that i have this

243
00:08:09,759 --> 00:08:11,120
extension installed

244
00:08:11,120 --> 00:08:13,440
these effectively become a fingerprint

245
00:08:13,440 --> 00:08:15,599
of me right so if no other user for

246
00:08:15,599 --> 00:08:17,520
example if i'm user one and i have

247
00:08:17,520 --> 00:08:20,160
installed ghostary adblock plus and

248
00:08:20,160 --> 00:08:21,759
smart video let's say and there's no

249
00:08:21,759 --> 00:08:23,520
other user that has installed this

250
00:08:23,520 --> 00:08:25,840
specific combination of extensions now

251
00:08:25,840 --> 00:08:28,160
i'm again unique so i can leave this

252
00:08:28,160 --> 00:08:30,240
website i can delete my cookies right i

253
00:08:30,240 --> 00:08:31,840
can do all the all the right things

254
00:08:31,840 --> 00:08:33,679
let's say from a private perspective but

255
00:08:33,679 --> 00:08:35,599
then when i come back the same three

256
00:08:35,599 --> 00:08:37,120
extensions are installed the same three

257
00:08:37,120 --> 00:08:38,958
extensions are detected and now the

258
00:08:38,958 --> 00:08:40,559
website can detect that it's actually

259
00:08:40,559 --> 00:08:43,120
still the user from yesterday but now we

260
00:08:43,120 --> 00:08:46,080
deleted cookies right so uh and even if

261
00:08:46,080 --> 00:08:48,399
it's not unique right now we're actually

262
00:08:48,399 --> 00:08:50,480
placing users into so-called anonymity

263
00:08:50,480 --> 00:08:52,720
sets so maybe there's only 100 users

264
00:08:52,720 --> 00:08:54,480
that have your specific

265
00:08:54,480 --> 00:08:56,720
combination of extensions installed

266
00:08:56,720 --> 00:08:57,920
uh and now i can use other

267
00:08:57,920 --> 00:08:59,760
fingerprinting vectors to to uniquely

268
00:08:59,760 --> 00:09:02,240
identify you within the group of 100 as

269
00:09:02,240 --> 00:09:03,839
opposed to trying to identify you within

270
00:09:03,839 --> 00:09:05,519
the group of you know billions of chrome

271
00:09:05,519 --> 00:09:07,440
users or billions of firefox users all

272
00:09:07,440 --> 00:09:09,040
right so these are our issues from a

273
00:09:09,040 --> 00:09:11,200
privacy in a security perspective so now

274
00:09:11,200 --> 00:09:13,360
let's discuss how is it that an

275
00:09:13,360 --> 00:09:15,120
extension can be fingerprinted or can be

276
00:09:15,120 --> 00:09:17,440
detected rather

277
00:09:17,440 --> 00:09:19,519
even though there are no official apis

278
00:09:19,519 --> 00:09:21,200
for a website to use

279
00:09:21,200 --> 00:09:24,240
and we will look at two types of uh

280
00:09:24,240 --> 00:09:26,480
attacks or two types of techniques

281
00:09:26,480 --> 00:09:27,839
the first one is related to web

282
00:09:27,839 --> 00:09:29,360
accessible resources and the second one

283
00:09:29,360 --> 00:09:30,959
is related to the

284
00:09:30,959 --> 00:09:32,880
to the artifacts of an extension running

285
00:09:32,880 --> 00:09:34,880
in a page so let's focus first on the

286
00:09:34,880 --> 00:09:37,680
web accessible resources

287
00:09:37,680 --> 00:09:38,880
so

288
00:09:38,880 --> 00:09:40,720
if unless you have tried to code a

289
00:09:40,720 --> 00:09:43,680
browser extension you may not know that

290
00:09:43,680 --> 00:09:45,519
you have a number of files like i

291
00:09:45,519 --> 00:09:46,959
mentioned earlier your extension is

292
00:09:46,959 --> 00:09:49,680
comprised out of css html and javascript

293
00:09:49,680 --> 00:09:51,600
but these files are part of your

294
00:09:51,600 --> 00:09:53,279
extension so they are not meant to be

295
00:09:53,279 --> 00:09:55,360
accessible from outside your extension

296
00:09:55,360 --> 00:09:56,320
right that

297
00:09:56,320 --> 00:09:58,399
actually originally in in the first days

298
00:09:58,399 --> 00:10:00,160
of extension frameworks this could be

299
00:10:00,160 --> 00:10:01,680
done and this led to all social security

300
00:10:01,680 --> 00:10:04,079
problems so by default all the files in

301
00:10:04,079 --> 00:10:05,760
your packaged extension are only

302
00:10:05,760 --> 00:10:07,360
accessible from within the extension

303
00:10:07,360 --> 00:10:08,959
right however

304
00:10:08,959 --> 00:10:11,120
uh developers so browser extensions at

305
00:10:11,120 --> 00:10:13,120
times need to be able to refer to these

306
00:10:13,120 --> 00:10:14,880
packaged objects from outside their

307
00:10:14,880 --> 00:10:16,320
extension right

308
00:10:16,320 --> 00:10:17,519
and you can make

309
00:10:17,519 --> 00:10:19,440
uh you can consider various options for

310
00:10:19,440 --> 00:10:20,800
that if i for example if you just

311
00:10:20,800 --> 00:10:22,399
donated my extension

312
00:10:22,399 --> 00:10:23,600
excuse me if you just installed my

313
00:10:23,600 --> 00:10:25,279
extension and i want to ask you for a

314
00:10:25,279 --> 00:10:28,800
donation i can open up uh a website and

315
00:10:28,800 --> 00:10:31,519
then i can actually reference files from

316
00:10:31,519 --> 00:10:33,600
within the packaged extension but if i'm

317
00:10:33,600 --> 00:10:35,519
referencing these files outside of the

318
00:10:35,519 --> 00:10:37,680
extension somehow i need to be able to

319
00:10:37,680 --> 00:10:39,600
access these files so we have this

320
00:10:39,600 --> 00:10:41,519
special tag for extension called web

321
00:10:41,519 --> 00:10:42,959
accessible resources you can see it

322
00:10:42,959 --> 00:10:44,720
highlighted there on the slide

323
00:10:44,720 --> 00:10:46,560
and there a developer of a browser

324
00:10:46,560 --> 00:10:49,279
extension lists all the extensions that

325
00:10:49,279 --> 00:10:51,839
they want to be available outside of

326
00:10:51,839 --> 00:10:53,519
their browser extension so websites

327
00:10:53,519 --> 00:10:55,279
effectively can reference these extents

328
00:10:55,279 --> 00:10:57,360
these these files that are part of their

329
00:10:57,360 --> 00:10:59,040
extension right and this can be

330
00:10:59,040 --> 00:11:00,720
javascript libraries right this can be

331
00:11:00,720 --> 00:11:03,200
images like i mentioned earlier

332
00:11:03,200 --> 00:11:04,560
so this is what the mechanism is

333
00:11:04,560 --> 00:11:06,480
supposed to do it's supposed to allow a

334
00:11:06,480 --> 00:11:08,399
developer of a browser extension the

335
00:11:08,399 --> 00:11:10,560
ability to reference objects of that

336
00:11:10,560 --> 00:11:12,880
extension outside of the privileged

337
00:11:12,880 --> 00:11:15,120
extension space right so that's the

338
00:11:15,120 --> 00:11:16,160
intention

339
00:11:16,160 --> 00:11:18,160
um and you can see here how that would

340
00:11:18,160 --> 00:11:21,360
work out if i'm building a page right

341
00:11:21,360 --> 00:11:23,200
i can reference

342
00:11:23,200 --> 00:11:24,800
for example an image i can say chrome

343
00:11:24,800 --> 00:11:27,120
extension instead of let's say https i

344
00:11:27,120 --> 00:11:29,279
have my package id and then i'm

345
00:11:29,279 --> 00:11:31,600
referencing the specific file that i'm

346
00:11:31,600 --> 00:11:33,360
trying to include into that page right

347
00:11:33,360 --> 00:11:34,480
and the same thing for a script

348
00:11:34,480 --> 00:11:36,800
underneath so that's the intention the

349
00:11:36,800 --> 00:11:38,079
problem is

350
00:11:38,079 --> 00:11:40,079
that browsers do not differentiate

351
00:11:40,079 --> 00:11:41,600
between the links

352
00:11:41,600 --> 00:11:44,240
that somehow your extension has created

353
00:11:44,240 --> 00:11:46,320
and is injecting in public pages

354
00:11:46,320 --> 00:11:48,240
referencing its own files

355
00:11:48,240 --> 00:11:50,000
versus links that are just part of the

356
00:11:50,000 --> 00:11:51,920
page itself so you now visit

357
00:11:51,920 --> 00:11:54,560
attacker.com or tracker.com and now

358
00:11:54,560 --> 00:11:56,399
tracker.com can actually try to be

359
00:11:56,399 --> 00:11:58,240
referencing files

360
00:11:58,240 --> 00:12:01,120
from popular extensions right and so you

361
00:12:01,120 --> 00:12:03,279
can see here the problem that the page

362
00:12:03,279 --> 00:12:06,560
can just try to load a given war if i if

363
00:12:06,560 --> 00:12:08,000
i want to know if you have an ad blocker

364
00:12:08,000 --> 00:12:09,279
installed

365
00:12:09,279 --> 00:12:12,000
i can just try to load web accessible

366
00:12:12,000 --> 00:12:14,560
resources of popular

367
00:12:14,560 --> 00:12:15,839
ad blockers

368
00:12:15,839 --> 00:12:18,000
and if the resource loads so if i

369
00:12:18,000 --> 00:12:20,560
actually do find you know an image from

370
00:12:20,560 --> 00:12:23,040
a popular ad block ad blocker then as a

371
00:12:23,040 --> 00:12:25,760
page i can straightforwardly conclude

372
00:12:25,760 --> 00:12:28,079
that you as a user have actually

373
00:12:28,079 --> 00:12:30,079
installed that ad blocker right and now

374
00:12:30,079 --> 00:12:32,079
i can show you that banner that says

375
00:12:32,079 --> 00:12:34,399
your ad blocker is installed you need to

376
00:12:34,399 --> 00:12:37,200
disable it or pay me money right and so

377
00:12:37,200 --> 00:12:38,560
this actually leads to a very

378
00:12:38,560 --> 00:12:40,480
straightforward and somewhat easy i

379
00:12:40,480 --> 00:12:42,240
would say attack right so you can see

380
00:12:42,240 --> 00:12:44,079
there are the steps of this attack so we

381
00:12:44,079 --> 00:12:46,320
can first collect as many extensions as

382
00:12:46,320 --> 00:12:47,680
possible from an extension store so we

383
00:12:47,680 --> 00:12:49,360
can go out and crawl and collect a few

384
00:12:49,360 --> 00:12:51,920
hundred thousands of extensions right

385
00:12:51,920 --> 00:12:53,920
and we can then statically analyze them

386
00:12:53,920 --> 00:12:55,680
and look in their manifest files like i

387
00:12:55,680 --> 00:12:57,519
showed you earlier look for those that

388
00:12:57,519 --> 00:13:00,560
use at least one web accessible resource

389
00:13:00,560 --> 00:13:03,040
and just isolate that and then we just

390
00:13:03,040 --> 00:13:04,399
write the script that pretty much just

391
00:13:04,399 --> 00:13:06,560
loops through a giant array trying to

392
00:13:06,560 --> 00:13:08,000
load

393
00:13:08,000 --> 00:13:09,760
a web accessible resource from each of

394
00:13:09,760 --> 00:13:11,839
these extensions on the public page

395
00:13:11,839 --> 00:13:14,320
and then i have an event handler and if

396
00:13:14,320 --> 00:13:16,959
if it's an on error i know that this

397
00:13:16,959 --> 00:13:18,480
object was not present therefore the

398
00:13:18,480 --> 00:13:20,720
extension is not installed if there's no

399
00:13:20,720 --> 00:13:22,959
one ever firing right then i know that

400
00:13:22,959 --> 00:13:25,200
actually this file was present therefore

401
00:13:25,200 --> 00:13:27,680
you have that extension installed right

402
00:13:27,680 --> 00:13:29,519
and there's been a number of academic

403
00:13:29,519 --> 00:13:30,880
studies here that i'm referencing at the

404
00:13:30,880 --> 00:13:31,760
bottom

405
00:13:31,760 --> 00:13:33,760
where you can see that people have

406
00:13:33,760 --> 00:13:35,120
actually found like for example the

407
00:13:35,120 --> 00:13:37,680
first one in 2017 uh charleston at all

408
00:13:37,680 --> 00:13:38,880
they found that

409
00:13:38,880 --> 00:13:40,000
half of the extensions that they

410
00:13:40,000 --> 00:13:42,160
evaluated actually had web accessible

411
00:13:42,160 --> 00:13:43,199
resources and they were there for

412
00:13:43,199 --> 00:13:45,040
fingerprintable and then once people

413
00:13:45,040 --> 00:13:46,480
have started looking at larger and

414
00:13:46,480 --> 00:13:48,720
larger sets this number drops but it

415
00:13:48,720 --> 00:13:50,320
still is a quarter of the extension so

416
00:13:50,320 --> 00:13:51,920
it's really a fish in a barrel kind of

417
00:13:51,920 --> 00:13:53,920
situation right you just it's a very

418
00:13:53,920 --> 00:13:56,000
simple attack that anyone could just sit

419
00:13:56,000 --> 00:13:57,199
down and do

420
00:13:57,199 --> 00:13:59,440
right so that's web accessible resources

421
00:13:59,440 --> 00:14:01,920
as an attack that can be used to unmask

422
00:14:01,920 --> 00:14:04,399
browser extensions right a second one is

423
00:14:04,399 --> 00:14:06,880
related to the extension side effects

424
00:14:06,880 --> 00:14:08,639
if you think about this the reason why

425
00:14:08,639 --> 00:14:09,920
you're installing an extension is

426
00:14:09,920 --> 00:14:11,040
because you want it to offer you

427
00:14:11,040 --> 00:14:13,199
something right so for example you want

428
00:14:13,199 --> 00:14:14,959
the tab manager that your browser

429
00:14:14,959 --> 00:14:16,800
doesn't have present you want a password

430
00:14:16,800 --> 00:14:18,560
manager that will nicely auto complete

431
00:14:18,560 --> 00:14:20,079
your passwords and will sync them from a

432
00:14:20,079 --> 00:14:22,480
cloud that you prefer right

433
00:14:22,480 --> 00:14:24,639
you have reminders that will just add

434
00:14:24,639 --> 00:14:26,000
things to web pages you have

435
00:14:26,000 --> 00:14:27,760
proofreaders right like the grammarly

436
00:14:27,760 --> 00:14:29,760
extension that will look at your text so

437
00:14:29,760 --> 00:14:31,440
you really expect extension to do

438
00:14:31,440 --> 00:14:33,760
something right and typically in this

439
00:14:33,760 --> 00:14:35,760
category you expect it to add

440
00:14:35,760 --> 00:14:38,000
functionality that you like right

441
00:14:38,000 --> 00:14:39,600
other extensions remove things that you

442
00:14:39,600 --> 00:14:41,120
don't like right so for example

443
00:14:41,120 --> 00:14:42,240
obviously if you're running an ad

444
00:14:42,240 --> 00:14:44,240
blocker you wanted to remove things from

445
00:14:44,240 --> 00:14:46,880
the pages that you go to um or you want

446
00:14:46,880 --> 00:14:48,720
it to be you know to remove bloat in

447
00:14:48,720 --> 00:14:49,920
general you want them to be more

448
00:14:49,920 --> 00:14:52,079
readable right so you sort of align the

449
00:14:52,079 --> 00:14:53,440
text differently

450
00:14:53,440 --> 00:14:55,040
and finally we just want changes right

451
00:14:55,040 --> 00:14:56,480
you may want to just do simplify things

452
00:14:56,480 --> 00:14:57,760
you may want to change background colors

453
00:14:57,760 --> 00:14:59,360
for whatever reason right so that's why

454
00:14:59,360 --> 00:15:00,720
people install extensions because they

455
00:15:00,720 --> 00:15:02,959
expect these extensions to offer them

456
00:15:02,959 --> 00:15:04,399
something and that something is

457
00:15:04,399 --> 00:15:06,399
typically manifested by changes in the

458
00:15:06,399 --> 00:15:08,320
page itself right so i have here an

459
00:15:08,320 --> 00:15:10,240
example so you can see here a trailer of

460
00:15:10,240 --> 00:15:12,959
the hackers movie right and this is just

461
00:15:12,959 --> 00:15:14,560
loading youtube with no extensions

462
00:15:14,560 --> 00:15:15,920
present

463
00:15:15,920 --> 00:15:17,600
and here on the next slide you will see

464
00:15:17,600 --> 00:15:19,360
that we have the same

465
00:15:19,360 --> 00:15:22,079
video roughly the same timestamp with an

466
00:15:22,079 --> 00:15:24,079
extension called magic actions for

467
00:15:24,079 --> 00:15:25,920
youtube which has more than a million

468
00:15:25,920 --> 00:15:28,480
users installed right and i have circled

469
00:15:28,480 --> 00:15:31,440
the differences so if you look here uh

470
00:15:31,440 --> 00:15:33,759
if you compare the before and the after

471
00:15:33,759 --> 00:15:35,600
right we have that light switch on the

472
00:15:35,600 --> 00:15:37,279
top left

473
00:15:37,279 --> 00:15:39,199
which actually allows you to sort of you

474
00:15:39,199 --> 00:15:41,279
know go dark and just make the page

475
00:15:41,279 --> 00:15:43,279
black so i guess it's a nicer viewing

476
00:15:43,279 --> 00:15:45,360
experience right and you have an extra

477
00:15:45,360 --> 00:15:47,440
menu down here that allows you to do

478
00:15:47,440 --> 00:15:48,959
things like find subtitles potentially

479
00:15:48,959 --> 00:15:50,639
download movies all sorts of things that

480
00:15:50,639 --> 00:15:53,199
users may want right so this extension

481
00:15:53,199 --> 00:15:54,800
does exactly what the user wanted to do

482
00:15:54,800 --> 00:15:56,320
right it has added functionalities

483
00:15:56,320 --> 00:15:58,880
augmented the ui of youtube the question

484
00:15:58,880 --> 00:16:00,800
is however

485
00:16:00,800 --> 00:16:03,120
are these changes now discoverable by

486
00:16:03,120 --> 00:16:05,199
the page itself right and the answer is

487
00:16:05,199 --> 00:16:07,920
yes and we will we will we will see this

488
00:16:07,920 --> 00:16:10,079
together another example is lastpass

489
00:16:10,079 --> 00:16:13,199
right lastpass will add special buttons

490
00:16:13,199 --> 00:16:15,040
uh in your in the forms of websites that

491
00:16:15,040 --> 00:16:17,680
you go to and again these these extra

492
00:16:17,680 --> 00:16:20,160
buttons are part of the pages dom right

493
00:16:20,160 --> 00:16:22,480
so if it's if a website just knew where

494
00:16:22,480 --> 00:16:24,240
to look it would say oh look there is

495
00:16:24,240 --> 00:16:27,040
this button in that form and i know that

496
00:16:27,040 --> 00:16:29,440
i didn't place it there therefore

497
00:16:29,440 --> 00:16:31,600
the user the current user has lastpass

498
00:16:31,600 --> 00:16:34,399
installed right and so it turns out that

499
00:16:34,399 --> 00:16:35,920
extensions have visible side effects

500
00:16:35,920 --> 00:16:37,600
right because that's exactly what you

501
00:16:37,600 --> 00:16:38,800
install them because they offer you

502
00:16:38,800 --> 00:16:41,279
something right and so with what we did

503
00:16:41,279 --> 00:16:43,759
in 2017 is we sat down and we built a

504
00:16:43,759 --> 00:16:46,959
system that will automatically compare

505
00:16:46,959 --> 00:16:49,199
a page with and without an extension for

506
00:16:49,199 --> 00:16:50,880
a very large number of extensions and it

507
00:16:50,880 --> 00:16:52,639
will tell you whether an extension makes

508
00:16:52,639 --> 00:16:55,120
changes to a page that could be used to

509
00:16:55,120 --> 00:16:57,279
fingerprint right and so i won't go into

510
00:16:57,279 --> 00:16:58,560
too much detail in this talk but

511
00:16:58,560 --> 00:17:01,759
effectively you can see here that

512
00:17:01,759 --> 00:17:04,640
we are loading pages into chrome we are

513
00:17:04,640 --> 00:17:07,599
analyzing the doms we have honey pages

514
00:17:07,599 --> 00:17:08,959
that allow

515
00:17:08,959 --> 00:17:11,359
uh extensions to manifest themselves so

516
00:17:11,359 --> 00:17:13,199
there will be pages with images and

517
00:17:13,199 --> 00:17:14,959
pages with phone numbers and pages with

518
00:17:14,959 --> 00:17:16,480
links so that different extensions will

519
00:17:16,480 --> 00:17:18,400
discover them and sort of do things to

520
00:17:18,400 --> 00:17:19,599
them because again that's why you

521
00:17:19,599 --> 00:17:21,359
install an extension and then we have an

522
00:17:21,359 --> 00:17:23,039
automatic module that just compares the

523
00:17:23,039 --> 00:17:26,079
before and the after dom and it finds

524
00:17:26,079 --> 00:17:27,520
what are the unique changes that we can

525
00:17:27,520 --> 00:17:29,360
attribute back to the current extension

526
00:17:29,360 --> 00:17:31,520
that we're analyzing right

527
00:17:31,520 --> 00:17:32,799
and there is a paper that you can find

528
00:17:32,799 --> 00:17:34,480
online with all the technical details

529
00:17:34,480 --> 00:17:36,880
with that same title uh so the results

530
00:17:36,880 --> 00:17:38,799
for that experiment was that for the top

531
00:17:38,799 --> 00:17:40,480
10 000 extensions

532
00:17:40,480 --> 00:17:42,720
we found that 10 of them roughly

533
00:17:42,720 --> 00:17:44,720
introduced detectable changes on any

534
00:17:44,720 --> 00:17:46,880
arbitrary url right so if you would go

535
00:17:46,880 --> 00:17:48,720
to any website on the internet that

536
00:17:48,720 --> 00:17:50,960
website had the power to fingerprint

537
00:17:50,960 --> 00:17:52,000
roughly 10

538
00:17:52,000 --> 00:17:53,440
of extensions

539
00:17:53,440 --> 00:17:55,440
however if you were actually looking at

540
00:17:55,440 --> 00:17:57,600
popular sites such as twitter.com and

541
00:17:57,600 --> 00:17:59,679
you know gmail and so on these sites

542
00:17:59,679 --> 00:18:02,640
could actually unmask 16 of extensions

543
00:18:02,640 --> 00:18:04,720
and the reason for this is because

544
00:18:04,720 --> 00:18:06,559
these websites are very popular and you

545
00:18:06,559 --> 00:18:08,000
have a lot of developers who are making

546
00:18:08,000 --> 00:18:09,840
browser extensions specifically for

547
00:18:09,840 --> 00:18:11,840
these websites so these are extensions

548
00:18:11,840 --> 00:18:13,520
that are only

549
00:18:13,520 --> 00:18:15,520
revealing themselves on gmail.com on

550
00:18:15,520 --> 00:18:17,360
twitter.com and therefore these sites

551
00:18:17,360 --> 00:18:18,880
now have the ability to fingerprint

552
00:18:18,880 --> 00:18:21,280
extra uh extensions right and you can

553
00:18:21,280 --> 00:18:22,480
see there on the graph on the bottom

554
00:18:22,480 --> 00:18:24,400
that we have actually

555
00:18:24,400 --> 00:18:26,640
a positive relationship between rank and

556
00:18:26,640 --> 00:18:28,320
fingerprintability so the more popular

557
00:18:28,320 --> 00:18:29,840
an extension is the more fingerprintable

558
00:18:29,840 --> 00:18:31,760
it is and as you go down in popularity

559
00:18:31,760 --> 00:18:33,760
you go down infinite ability and the

560
00:18:33,760 --> 00:18:36,080
reason for this uh has to do with

561
00:18:36,080 --> 00:18:37,760
offered functionality right so the more

562
00:18:37,760 --> 00:18:39,039
functionality you're offered the more

563
00:18:39,039 --> 00:18:41,440
popular you're offering the more popular

564
00:18:41,440 --> 00:18:43,120
your extension will be

565
00:18:43,120 --> 00:18:44,240
and the more functionality you're

566
00:18:44,240 --> 00:18:46,480
offering the more chances that the

567
00:18:46,480 --> 00:18:49,280
extension will be fingerprinted right so

568
00:18:49,280 --> 00:18:51,520
um and what we discovered is that from

569
00:18:51,520 --> 00:18:54,080
all of these extensions 86

570
00:18:54,080 --> 00:18:55,840
actually had were making at least one

571
00:18:55,840 --> 00:18:57,440
change that was unique to them right so

572
00:18:57,440 --> 00:18:58,799
you didn't have like two extensions

573
00:18:58,799 --> 00:19:00,640
making the exact same change

574
00:19:00,640 --> 00:19:02,720
for 86 percent of the extensions they

575
00:19:02,720 --> 00:19:05,039
were making a unique change which means

576
00:19:05,039 --> 00:19:07,039
that if you detect that change you can

577
00:19:07,039 --> 00:19:08,480
attribute it back to a specific

578
00:19:08,480 --> 00:19:09,919
extension right and you don't have to

579
00:19:09,919 --> 00:19:11,760
sort of try to guess which of the ten

580
00:19:11,760 --> 00:19:14,160
extensions that do this exact same thing

581
00:19:14,160 --> 00:19:17,039
the user has installed and we also

582
00:19:17,039 --> 00:19:18,559
checked the same extensions after four

583
00:19:18,559 --> 00:19:19,440
months

584
00:19:19,440 --> 00:19:21,360
and we saw that

585
00:19:21,360 --> 00:19:23,039
you have roughly the same percentage of

586
00:19:23,039 --> 00:19:24,640
extensions in the store that remain

587
00:19:24,640 --> 00:19:26,480
fingerprintable four months later after

588
00:19:26,480 --> 00:19:29,039
many updates so the thinking probability

589
00:19:29,039 --> 00:19:30,799
of an extension is a stable property of

590
00:19:30,799 --> 00:19:32,480
that extension and won't go away unless

591
00:19:32,480 --> 00:19:33,840
the developer does something to that

592
00:19:33,840 --> 00:19:35,039
extension right and you can see their

593
00:19:35,039 --> 00:19:36,799
statistics at the bottom in terms of

594
00:19:36,799 --> 00:19:38,880
what the extensions did such as 78

595
00:19:38,880 --> 00:19:41,360
removing dom nodes uh and so on all

596
00:19:41,360 --> 00:19:43,679
right so let me now contrast the two

597
00:19:43,679 --> 00:19:44,960
types of fingerprinting that we talked

598
00:19:44,960 --> 00:19:46,559
about on the left we have more

599
00:19:46,559 --> 00:19:48,160
fingerprinting web accessible resourcing

600
00:19:48,160 --> 00:19:49,600
and printing and on the right we have

601
00:19:49,600 --> 00:19:51,600
behavioral fingerprinting right so on

602
00:19:51,600 --> 00:19:54,240
the left we see that okay for wars

603
00:19:54,240 --> 00:19:55,760
it's easy to extract signatures you can

604
00:19:55,760 --> 00:19:57,679
do it statically uh it's easy to perform

605
00:19:57,679 --> 00:19:59,280
in the user's browser there's no user

606
00:19:59,280 --> 00:20:00,799
interaction necessary you just cycle

607
00:20:00,799 --> 00:20:03,120
through a long list of words but the

608
00:20:03,120 --> 00:20:05,200
developers could just straightforwardly

609
00:20:05,200 --> 00:20:06,159
stop this right they can start

610
00:20:06,159 --> 00:20:08,000
referencing images and css from the

611
00:20:08,000 --> 00:20:09,840
websites or from cdns and just stop with

612
00:20:09,840 --> 00:20:11,679
this all together right on the right we

613
00:20:11,679 --> 00:20:13,200
have behavioral fingerprinting that's

614
00:20:13,200 --> 00:20:14,880
easy to perform in the user's browser

615
00:20:14,880 --> 00:20:16,240
and it's actually quite more difficult

616
00:20:16,240 --> 00:20:18,480
to get rid of it because you really want

617
00:20:18,480 --> 00:20:20,320
these extra ui buttons and you want the

618
00:20:20,320 --> 00:20:23,039
ad blocker to be removing ads so how is

619
00:20:23,039 --> 00:20:24,559
it that you can stop these changes that

620
00:20:24,559 --> 00:20:25,600
are the same changes that make that

621
00:20:25,600 --> 00:20:27,679
extension fingerprintable right on the

622
00:20:27,679 --> 00:20:29,200
negative side it's more difficult to

623
00:20:29,200 --> 00:20:30,960
extract signatures now you need a system

624
00:20:30,960 --> 00:20:32,400
right that will exercise the extension

625
00:20:32,400 --> 00:20:34,640
will reveal what it does and it may even

626
00:20:34,640 --> 00:20:35,919
need user interaction that we haven't

627
00:20:35,919 --> 00:20:37,039
accounted for

628
00:20:37,039 --> 00:20:37,840
so

629
00:20:37,840 --> 00:20:39,360
what we did this year is we introduced

630
00:20:39,360 --> 00:20:40,720
the third way which we call here the

631
00:20:40,720 --> 00:20:43,360
middleway which at least uh you know in

632
00:20:43,360 --> 00:20:45,200
our minds this combines the best of both

633
00:20:45,200 --> 00:20:47,600
worlds in beth's best for the tracker

634
00:20:47,600 --> 00:20:49,679
right so we have easy extraction

635
00:20:49,679 --> 00:20:51,440
fingerprints we don't need user

636
00:20:51,440 --> 00:20:53,120
interaction and it's difficult for

637
00:20:53,120 --> 00:20:54,320
developers to make their extensions

638
00:20:54,320 --> 00:20:55,679
nothing incredible

639
00:20:55,679 --> 00:20:58,400
and our tool our technique is

640
00:20:58,400 --> 00:20:59,679
quite deceptive it's obvious in

641
00:20:59,679 --> 00:21:01,840
hindsight it's css based extension

642
00:21:01,840 --> 00:21:03,760
fingerprinting and so again if you're a

643
00:21:03,760 --> 00:21:05,520
developer you love css or you don't but

644
00:21:05,520 --> 00:21:07,360
you still have to use them and extension

645
00:21:07,360 --> 00:21:09,039
developers also need css right when

646
00:21:09,039 --> 00:21:10,559
they're creating their own buttons and

647
00:21:10,559 --> 00:21:12,559
their own menus and their own forms they

648
00:21:12,559 --> 00:21:14,400
also need css to make them look the way

649
00:21:14,400 --> 00:21:16,480
that they want to look right so actually

650
00:21:16,480 --> 00:21:18,720
what's happening is that extensions come

651
00:21:18,720 --> 00:21:20,400
packaged with their own cascading style

652
00:21:20,400 --> 00:21:22,400
sheets which are then injected in the

653
00:21:22,400 --> 00:21:25,039
page right so that when the extension

654
00:21:25,039 --> 00:21:27,039
adds a button or does other things that

655
00:21:27,039 --> 00:21:28,480
button and these other things will be

656
00:21:28,480 --> 00:21:31,440
styled according to that css

657
00:21:31,440 --> 00:21:33,280
you may see where this is going now so

658
00:21:33,280 --> 00:21:35,679
here we have an example extension called

659
00:21:35,679 --> 00:21:38,000
dr web link checker and the whole point

660
00:21:38,000 --> 00:21:39,600
of this is that you know you're visiting

661
00:21:39,600 --> 00:21:42,080
websites and if this extension discovers

662
00:21:42,080 --> 00:21:44,880
a link on the website that is malicious

663
00:21:44,880 --> 00:21:45,919
it will

664
00:21:45,919 --> 00:21:48,320
add you know this little flag there this

665
00:21:48,320 --> 00:21:50,159
little shield that tells you that okay

666
00:21:50,159 --> 00:21:52,240
that's something that is going on right

667
00:21:52,240 --> 00:21:53,600
and you can see here that effectively

668
00:21:53,600 --> 00:21:55,600
the extension when it discovers

669
00:21:55,600 --> 00:21:59,200
uh a malicious link it will add

670
00:21:59,200 --> 00:22:01,039
this simple

671
00:22:01,039 --> 00:22:02,799
uh div element right

672
00:22:02,799 --> 00:22:04,960
uh and if you look at the css

673
00:22:04,960 --> 00:22:06,720
effectively that's you know how that

674
00:22:06,720 --> 00:22:08,480
element is styled right

675
00:22:08,480 --> 00:22:10,960
and so we have the injected element

676
00:22:10,960 --> 00:22:12,720
and now we have the injected style for

677
00:22:12,720 --> 00:22:14,400
that element okay

678
00:22:14,400 --> 00:22:16,480
now let's talk again about the problem

679
00:22:16,480 --> 00:22:19,039
again no differentiation between things

680
00:22:19,039 --> 00:22:21,280
that the extension did and things that

681
00:22:21,280 --> 00:22:24,400
the page did right so

682
00:22:24,400 --> 00:22:27,280
what can happen is that the page itself

683
00:22:27,280 --> 00:22:30,480
can have a div with the right class

684
00:22:30,480 --> 00:22:32,480
and if it happens that the css of that

685
00:22:32,480 --> 00:22:34,480
extension is present that div will

686
00:22:34,480 --> 00:22:37,120
inherit all the styles from that css and

687
00:22:37,120 --> 00:22:40,720
so you can see here we can we have this

688
00:22:40,720 --> 00:22:42,000
empty div

689
00:22:42,000 --> 00:22:42,720
if

690
00:22:42,720 --> 00:22:44,480
you don't have uh that specific

691
00:22:44,480 --> 00:22:46,480
extension installed if you do have that

692
00:22:46,480 --> 00:22:48,720
specific extension installed suddenly we

693
00:22:48,720 --> 00:22:50,400
have that nice style diff with the

694
00:22:50,400 --> 00:22:54,080
shield okay so again now we have a

695
00:22:54,080 --> 00:22:56,880
differentiating or a diverging behavior

696
00:22:56,880 --> 00:22:59,120
and we can use that as uh as a building

697
00:22:59,120 --> 00:23:01,520
block for an attack right so pretty much

698
00:23:01,520 --> 00:23:03,760
you can see here on the left

699
00:23:03,760 --> 00:23:06,000
we can focus on the extensions that

700
00:23:06,000 --> 00:23:08,799
inject css the pages and we have found

701
00:23:08,799 --> 00:23:10,400
experimentally that

702
00:23:10,400 --> 00:23:13,280
more than 98 of css is inject statically

703
00:23:13,280 --> 00:23:14,880
so you can actually detect it again at

704
00:23:14,880 --> 00:23:16,320
the manifest file

705
00:23:16,320 --> 00:23:19,200
we can identify what are the css rules

706
00:23:19,200 --> 00:23:21,520
then the tracker can build decoy

707
00:23:21,520 --> 00:23:23,360
elements empty elements that just have

708
00:23:23,360 --> 00:23:25,280
the right class names that ask the the

709
00:23:25,280 --> 00:23:27,039
right tag names the right class names

710
00:23:27,039 --> 00:23:29,840
the right ids and then just sprinkle

711
00:23:29,840 --> 00:23:32,320
them into a page that the user will

712
00:23:32,320 --> 00:23:35,039
visit and so once the user visits that

713
00:23:35,039 --> 00:23:38,240
page and his extensions add to the dom

714
00:23:38,240 --> 00:23:41,120
all the css rules now now these elements

715
00:23:41,120 --> 00:23:43,279
will actually start inheriting styles

716
00:23:43,279 --> 00:23:45,520
from this is injected css

717
00:23:45,520 --> 00:23:47,200
and now the tracker the page can

718
00:23:47,200 --> 00:23:49,520
actually use quite a large number

719
00:23:49,520 --> 00:23:50,799
of methods

720
00:23:50,799 --> 00:23:52,799
to find out that the size of that div

721
00:23:52,799 --> 00:23:54,720
has changed right this used to be a

722
00:23:54,720 --> 00:23:57,279
blank empty div and now suddenly it's

723
00:23:57,279 --> 00:24:00,320
100 pixels wide why because it inherited

724
00:24:00,320 --> 00:24:02,799
some css and something changed within it

725
00:24:02,799 --> 00:24:04,880
right so we can actually use this to

726
00:24:04,880 --> 00:24:07,200
again find out that a browser extension

727
00:24:07,200 --> 00:24:08,240
is present

728
00:24:08,240 --> 00:24:11,039
even if uh no nothing has been injected

729
00:24:11,039 --> 00:24:12,640
from the page no buttons nothing's been

730
00:24:12,640 --> 00:24:14,880
removed just the css is there right but

731
00:24:14,880 --> 00:24:16,240
now we're actually

732
00:24:16,240 --> 00:24:19,039
abusing the css to uncover the presence

733
00:24:19,039 --> 00:24:20,799
of a given extension

734
00:24:20,799 --> 00:24:22,000
and i can tell you quickly about our

735
00:24:22,000 --> 00:24:24,240
results so we evaluated this attack on

736
00:24:24,240 --> 00:24:26,559
116 000 extensions

737
00:24:26,559 --> 00:24:29,279
6000 of these inject style sheets on all

738
00:24:29,279 --> 00:24:30,880
websites that you visit

739
00:24:30,880 --> 00:24:33,600
half of them have at least one

740
00:24:33,600 --> 00:24:35,360
css trigger that's unique to them so

741
00:24:35,360 --> 00:24:37,520
again if you get the specific element

742
00:24:37,520 --> 00:24:39,679
styled it can only be one extension that

743
00:24:39,679 --> 00:24:42,080
has styled that element all right

744
00:24:42,080 --> 00:24:43,440
and

745
00:24:43,440 --> 00:24:44,960
you can see here on the top right we

746
00:24:44,960 --> 00:24:46,960
have this venn diagram where we compare

747
00:24:46,960 --> 00:24:48,880
different kinds of uh extension

748
00:24:48,880 --> 00:24:51,120
fingerprinting so this is the web

749
00:24:51,120 --> 00:24:53,039
accessible resource post message

750
00:24:53,039 --> 00:24:54,240
fingerprinting that i didn't talk about

751
00:24:54,240 --> 00:24:56,320
today due to lack of time

752
00:24:56,320 --> 00:24:58,880
dom so the side effects on a page and

753
00:24:58,880 --> 00:25:01,440
css and what's important to note is this

754
00:25:01,440 --> 00:25:04,640
number here right so we have 1074

755
00:25:04,640 --> 00:25:06,640
extensions that we can uncover using

756
00:25:06,640 --> 00:25:08,960
this css fingerprinting that we couldn't

757
00:25:08,960 --> 00:25:10,480
do before right so these were

758
00:25:10,480 --> 00:25:12,480
effectively invisible extensions by all

759
00:25:12,480 --> 00:25:15,440
the prior methods but now our tool and

760
00:25:15,440 --> 00:25:17,039
our method has actually been able to

761
00:25:17,039 --> 00:25:18,880
figure them out and on the bottom you

762
00:25:18,880 --> 00:25:21,840
can see a performance graph of the

763
00:25:21,840 --> 00:25:24,080
number of extensions on the x-axis and

764
00:25:24,080 --> 00:25:25,600
the time that it takes to detect them on

765
00:25:25,600 --> 00:25:27,840
the y-axis and so you can see here that

766
00:25:27,840 --> 00:25:29,919
even if you have a user who's a little

767
00:25:29,919 --> 00:25:32,000
bit on the crazy side and has like 20

768
00:25:32,000 --> 00:25:34,159
extensions installed we're talking about

769
00:25:34,159 --> 00:25:36,159
you know 15 milliseconds that it takes

770
00:25:36,159 --> 00:25:38,640
for the page to just run through all of

771
00:25:38,640 --> 00:25:41,039
your uh dom elements

772
00:25:41,039 --> 00:25:42,799
find out using these methods that they

773
00:25:42,799 --> 00:25:45,760
have been styled and infer the presence

774
00:25:45,760 --> 00:25:47,760
of a browser extension right

775
00:25:47,760 --> 00:25:50,159
i have a video that uh

776
00:25:50,159 --> 00:25:52,000
you know i think i actually we do have

777
00:25:52,000 --> 00:25:54,559
some time so let me try to do that uh i

778
00:25:54,559 --> 00:25:56,640
was thinking of skipping it so let me

779
00:25:56,640 --> 00:26:00,400
quickly share that video

780
00:26:02,799 --> 00:26:04,799
uh and

781
00:26:04,799 --> 00:26:06,000
yeah i've split it up a little bit you

782
00:26:06,000 --> 00:26:07,520
can see we have a page that pretty much

783
00:26:07,520 --> 00:26:09,039
shows you that we are currently

784
00:26:09,039 --> 00:26:11,440
detecting 20 browser extensions

785
00:26:11,440 --> 00:26:14,400
uh and again we're just abusing this css

786
00:26:14,400 --> 00:26:16,320
fingerprinting no apis there for us to

787
00:26:16,320 --> 00:26:18,799
use and now what we're doing here is

788
00:26:18,799 --> 00:26:20,400
we're actually these are the 20

789
00:26:20,400 --> 00:26:22,559
installed extensions we will go in and

790
00:26:22,559 --> 00:26:26,400
we will disable uh three extensions

791
00:26:26,400 --> 00:26:27,679
just to prove to you that this is you

792
00:26:27,679 --> 00:26:29,360
know that this is all working well so

793
00:26:29,360 --> 00:26:30,799
we're disabling three extensions and we

794
00:26:30,799 --> 00:26:32,640
go back and we can refresh and you can

795
00:26:32,640 --> 00:26:34,320
see immediately that we've dropped down

796
00:26:34,320 --> 00:26:37,039
to 17. so we were quite

797
00:26:37,039 --> 00:26:40,240
uh quickly able to discover that uh an

798
00:26:40,240 --> 00:26:42,400
extension is no longer present because

799
00:26:42,400 --> 00:26:44,880
the decoy elements that we're injecting

800
00:26:44,880 --> 00:26:46,960
are no longer inheriting any style

801
00:26:46,960 --> 00:26:48,880
sheets right so that's that's the attack

802
00:26:48,880 --> 00:26:53,720
really so let me go back to our slides

803
00:26:58,480 --> 00:27:00,720
all right so let's talk about defenses

804
00:27:00,720 --> 00:27:03,200
and then i'll wrap it up

805
00:27:03,200 --> 00:27:05,120
the most realistic defenses in terms of

806
00:27:05,120 --> 00:27:06,559
adoption are access control based

807
00:27:06,559 --> 00:27:08,640
defenses so you may have noticed in the

808
00:27:08,640 --> 00:27:10,320
last couple of years probably two at

809
00:27:10,320 --> 00:27:12,720
most that you actually have the ability

810
00:27:12,720 --> 00:27:14,480
to tell it to tell your browser that the

811
00:27:14,480 --> 00:27:16,000
extension should not be

812
00:27:16,000 --> 00:27:17,039
available

813
00:27:17,039 --> 00:27:18,640
kind of by default everywhere you should

814
00:27:18,640 --> 00:27:20,159
first interact with it in order to make

815
00:27:20,159 --> 00:27:21,600
it available right it's still something

816
00:27:21,600 --> 00:27:23,120
that's opt-in it's still something that

817
00:27:23,120 --> 00:27:25,520
you have to do it's not there by default

818
00:27:25,520 --> 00:27:27,919
uh but it is the right the right a step

819
00:27:27,919 --> 00:27:30,240
in the right direction right and the the

820
00:27:30,240 --> 00:27:32,320
example that i'd like to give is that

821
00:27:32,320 --> 00:27:34,240
yes you probably want your ad blocker to

822
00:27:34,240 --> 00:27:35,760
be enabled in general when you're

823
00:27:35,760 --> 00:27:37,520
browsing the web but do you want it to

824
00:27:37,520 --> 00:27:39,360
be there on your banking website when

825
00:27:39,360 --> 00:27:41,600
you're logged in do you want to have

826
00:27:41,600 --> 00:27:42,880
you know a code base of hundreds of

827
00:27:42,880 --> 00:27:44,240
thousands of lines of javascript that

828
00:27:44,240 --> 00:27:46,159
someone else has provided do you want it

829
00:27:46,159 --> 00:27:49,440
to have access to your logged in page

830
00:27:49,440 --> 00:27:51,279
in your banking site i think the answer

831
00:27:51,279 --> 00:27:53,120
is most likely no so we need better

832
00:27:53,120 --> 00:27:55,120
access control and some way

833
00:27:55,120 --> 00:27:57,039
of syncing

834
00:27:57,039 --> 00:27:58,559
site preferences

835
00:27:58,559 --> 00:27:59,600
with

836
00:27:59,600 --> 00:28:01,679
a developer extension developer

837
00:28:01,679 --> 00:28:03,360
preferences with the user somehow being

838
00:28:03,360 --> 00:28:05,039
the arbiter and it's very difficult you

839
00:28:05,039 --> 00:28:06,799
know all the user study

840
00:28:06,799 --> 00:28:09,440
parts are missing for for uh sort of

841
00:28:09,440 --> 00:28:11,440
deciding that this is going to work but

842
00:28:11,440 --> 00:28:13,039
i i think it's the right way forward

843
00:28:13,039 --> 00:28:14,640
right and then we have deception-based

844
00:28:14,640 --> 00:28:16,159
defenses that are more academic at the

845
00:28:16,159 --> 00:28:17,919
moment but pretty much what we can do is

846
00:28:17,919 --> 00:28:19,679
we can just fake the presence of

847
00:28:19,679 --> 00:28:23,039
extensions by just having decoy css and

848
00:28:23,039 --> 00:28:25,200
decoy elements so that the next so that

849
00:28:25,200 --> 00:28:26,799
the page thinks that you have one set of

850
00:28:26,799 --> 00:28:28,480
extension installed but you actually

851
00:28:28,480 --> 00:28:29,840
have a different set of extensions and

852
00:28:29,840 --> 00:28:32,159
stuff right so again i'm not saying that

853
00:28:32,159 --> 00:28:33,760
this is ready for you know for prime

854
00:28:33,760 --> 00:28:35,520
time but it is a direction that at least

855
00:28:35,520 --> 00:28:38,000
academics are investigating

856
00:28:38,000 --> 00:28:40,640
uh and with that i want to conclude so

857
00:28:40,640 --> 00:28:43,440
user customization has driven the web

858
00:28:43,440 --> 00:28:45,840
a lot right and so the ability for users

859
00:28:45,840 --> 00:28:47,520
to really customize websites and

860
00:28:47,520 --> 00:28:49,120
customize their browsers

861
00:28:49,120 --> 00:28:50,880
but the effects of this customization

862
00:28:50,880 --> 00:28:52,880
unfortunately can be used against users

863
00:28:52,880 --> 00:28:55,279
uh through browser fingerprinting uh

864
00:28:55,279 --> 00:28:57,120
access control like i mentioned is the

865
00:28:57,120 --> 00:28:59,039
right way forward and on the right there

866
00:28:59,039 --> 00:29:00,640
of that slide i have three papers that

867
00:29:00,640 --> 00:29:03,520
have my that have come out of my lab on

868
00:29:03,520 --> 00:29:04,960
fingerprinting browser extensions over

869
00:29:04,960 --> 00:29:06,880
the years that i would encourage you to

870
00:29:06,880 --> 00:29:09,039
look into uh if you're interested and

871
00:29:09,039 --> 00:29:11,600
i'm happy to take questions uh

872
00:29:11,600 --> 00:29:16,279
in the right slack channel thank you

