1
00:00:01,410 --> 00:00:06,030
[Music]

2
00:00:08,160 --> 00:00:10,000
yeah hello everyone so this is this is

3
00:00:10,000 --> 00:00:13,200
scaling up tech through education um

4
00:00:13,200 --> 00:00:15,679
just a quick who we are secure delivery

5
00:00:15,679 --> 00:00:17,680
um the takeaways from the slide are that

6
00:00:17,680 --> 00:00:19,119
we do the sort of thing commercially we

7
00:00:19,119 --> 00:00:20,720
do this at scale with some large

8
00:00:20,720 --> 00:00:21,760
companies

9
00:00:21,760 --> 00:00:24,640
um but it's all built on os projects

10
00:00:24,640 --> 00:00:26,880
especially the over open application

11
00:00:26,880 --> 00:00:28,800
security curriculum

12
00:00:28,800 --> 00:00:30,800
of which i am one of the project leads

13
00:00:30,800 --> 00:00:33,120
um i also lead the awas cornucopia

14
00:00:33,120 --> 00:00:34,800
project with colin wilson and i'm

15
00:00:34,800 --> 00:00:36,880
currently on the global board

16
00:00:36,880 --> 00:00:38,760
takeaway from this slide is my handle

17
00:00:38,760 --> 00:00:41,280
rewtd root demon under which you'll find

18
00:00:41,280 --> 00:00:44,079
me on the rslac on twitter linkedin my

19
00:00:44,079 --> 00:00:46,079
dms are open so please give me feedback

20
00:00:46,079 --> 00:00:49,360
on the things that you hear today

21
00:00:49,520 --> 00:00:51,440
so this is scaling application security

22
00:00:51,440 --> 00:00:53,520
in large organizations

23
00:00:53,520 --> 00:00:55,840
and we have very little time so

24
00:00:55,840 --> 00:00:57,680
i forgive me up front this is going to

25
00:00:57,680 --> 00:01:01,440
be a a very uh compact very dense talk

26
00:01:01,440 --> 00:01:03,359
um but let's continue the conversation

27
00:01:03,359 --> 00:01:05,438
afterwards

28
00:01:05,438 --> 00:01:06,720
so to start thinking about application

29
00:01:06,720 --> 00:01:08,479
security we're going to first define it

30
00:01:08,479 --> 00:01:10,080
put a little box around it so we're

31
00:01:10,080 --> 00:01:13,280
clear on what it is exactly recovering

32
00:01:13,280 --> 00:01:15,520
cyber security is very broad

33
00:01:15,520 --> 00:01:16,720
it covers

34
00:01:16,720 --> 00:01:18,720
corporate identity email security

35
00:01:18,720 --> 00:01:20,880
desktop os updating

36
00:01:20,880 --> 00:01:22,159
file shares

37
00:01:22,159 --> 00:01:24,880
especially recently printers and there's

38
00:01:24,880 --> 00:01:27,040
a lot going on um but we're concerned

39
00:01:27,040 --> 00:01:28,320
with the part of cyber security that you

40
00:01:28,320 --> 00:01:29,360
have to deal with

41
00:01:29,360 --> 00:01:31,600
when you're building your own software

42
00:01:31,600 --> 00:01:33,280
um so the systems can be as secure as

43
00:01:33,280 --> 00:01:35,119
designed and built but they're also the

44
00:01:35,119 --> 00:01:37,439
ways that how you're building them can

45
00:01:37,439 --> 00:01:38,720
screw you over from security point of

46
00:01:38,720 --> 00:01:39,520
view

47
00:01:39,520 --> 00:01:40,880
so someone could push you know

48
00:01:40,880 --> 00:01:43,119
production passwords uh cloud api keys

49
00:01:43,119 --> 00:01:45,600
to a public repository a sketchy person

50
00:01:45,600 --> 00:01:46,960
can approach one of the developers on

51
00:01:46,960 --> 00:01:48,640
your team outside of work and offer them

52
00:01:48,640 --> 00:01:50,799
an eye-watering amount of money

53
00:01:50,799 --> 00:01:52,840
just add a little backdoor

54
00:01:52,840 --> 00:01:55,920
um supply chain attack uh open source

55
00:01:55,920 --> 00:01:57,439
library used gets a nasty code

56
00:01:57,439 --> 00:01:58,719
introduced to it

57
00:01:58,719 --> 00:02:00,640
um and you put it on on the next build

58
00:02:00,640 --> 00:02:02,079
of your system you're not aware that

59
00:02:02,079 --> 00:02:04,960
it's there there are many many more ways

60
00:02:04,960 --> 00:02:06,159
so if we're talking about the quality of

61
00:02:06,159 --> 00:02:08,160
supply chains materials value-add

62
00:02:08,160 --> 00:02:10,160
activities and design and manufacturing

63
00:02:10,160 --> 00:02:11,280
processes

64
00:02:11,280 --> 00:02:12,720
then what we actually mean by

65
00:02:12,720 --> 00:02:14,400
application security

66
00:02:14,400 --> 00:02:17,520
is product security

67
00:02:17,520 --> 00:02:19,599
that's pretty clear but security is an

68
00:02:19,599 --> 00:02:21,520
intrinsic quality system sounds a bit

69
00:02:21,520 --> 00:02:24,080
philosophical so let's try and define

70
00:02:24,080 --> 00:02:27,440
that a little bit too

71
00:02:28,000 --> 00:02:31,519
this is the iso iec 25010

72
00:02:31,519 --> 00:02:34,319
the system and software quality model

73
00:02:34,319 --> 00:02:35,440
it's generally

74
00:02:35,440 --> 00:02:37,519
iso models are designed left to right of

75
00:02:37,519 --> 00:02:39,599
importance quality model is connected to

76
00:02:39,599 --> 00:02:41,840
how systems provide value

77
00:02:41,840 --> 00:02:44,640
so you know most important is furthest

78
00:02:44,640 --> 00:02:45,599
left

79
00:02:45,599 --> 00:02:47,360
you might think that reliability is more

80
00:02:47,360 --> 00:02:49,200
important but with a system if your

81
00:02:49,200 --> 00:02:51,440
system has five nines uptime but that's

82
00:02:51,440 --> 00:02:53,519
incredibly slow to use you're gonna see

83
00:02:53,519 --> 00:02:55,519
that that you know your customers drop

84
00:02:55,519 --> 00:02:56,720
off and your customers will find it

85
00:02:56,720 --> 00:02:58,879
completely useless

86
00:02:58,879 --> 00:03:00,480
now

87
00:03:00,480 --> 00:03:02,959
security sits on the border between

88
00:03:02,959 --> 00:03:04,239
things that people care about the

89
00:03:04,239 --> 00:03:06,159
non-functionals that people care about

90
00:03:06,159 --> 00:03:07,840
and they can easily see and the

91
00:03:07,840 --> 00:03:09,519
non-functionals that people don't care

92
00:03:09,519 --> 00:03:13,040
about much and can't really see

93
00:03:13,920 --> 00:03:15,599
for example if i pushed a change to

94
00:03:15,599 --> 00:03:17,519
production that negatively impacted

95
00:03:17,519 --> 00:03:19,280
performance it would immediately be

96
00:03:19,280 --> 00:03:21,360
visible our customers would know it uh

97
00:03:21,360 --> 00:03:23,200
they would they would complain they'd be

98
00:03:23,200 --> 00:03:26,560
that they'd be held to pay

99
00:03:27,360 --> 00:03:29,200
if i pushed a change to production that

100
00:03:29,200 --> 00:03:30,840
negatively impacted

101
00:03:30,840 --> 00:03:33,519
security something might happen but

102
00:03:33,519 --> 00:03:35,519
something might never happen

103
00:03:35,519 --> 00:03:37,840
and as toby is fond of saying hope is

104
00:03:37,840 --> 00:03:39,519
not a strategy

105
00:03:39,519 --> 00:03:41,519
when deadlines pinch or resource get

106
00:03:41,519 --> 00:03:43,360
limited it's pretty predictable that

107
00:03:43,360 --> 00:03:44,640
you'll see these qualities will drop

108
00:03:44,640 --> 00:03:45,680
away

109
00:03:45,680 --> 00:03:47,280
from right to left leaving ultimately

110
00:03:47,280 --> 00:03:48,720
just functional

111
00:03:48,720 --> 00:03:50,959
the thing works

112
00:03:50,959 --> 00:03:51,760
um

113
00:03:51,760 --> 00:03:52,720
this

114
00:03:52,720 --> 00:03:55,280
in addition to you know a team simply

115
00:03:55,280 --> 00:03:57,200
being unaware of the requirements that

116
00:03:57,200 --> 00:03:59,040
might be in place for security for a

117
00:03:59,040 --> 00:04:00,959
particular non-functional security in my

118
00:04:00,959 --> 00:04:01,840
case

119
00:04:01,840 --> 00:04:04,480
is when you end up with technical debt

120
00:04:04,480 --> 00:04:06,400
whenever i say that we're technical debt

121
00:04:06,400 --> 00:04:07,760
or whenever somebody particularly says

122
00:04:07,760 --> 00:04:08,959
we're a technical debt what you should

123
00:04:08,959 --> 00:04:11,439
think about is low quality because it's

124
00:04:11,439 --> 00:04:13,680
all about quality

125
00:04:13,680 --> 00:04:15,680
so product security is one aspect of its

126
00:04:15,680 --> 00:04:17,199
overall quality

127
00:04:17,199 --> 00:04:18,798
so how do we ensure appropriate high

128
00:04:18,798 --> 00:04:22,880
levels of security quality exist

129
00:04:22,880 --> 00:04:23,919
well

130
00:04:23,919 --> 00:04:25,120
a pretty common way to think about

131
00:04:25,120 --> 00:04:26,800
maintenance security is this this line

132
00:04:26,800 --> 00:04:28,400
where rapid delivery

133
00:04:28,400 --> 00:04:30,720
of changes to production so one end of

134
00:04:30,720 --> 00:04:31,759
the scale

135
00:04:31,759 --> 00:04:33,520
uh being secure is at the other end and

136
00:04:33,520 --> 00:04:35,520
as an organization you kind of pick

137
00:04:35,520 --> 00:04:37,759
somewhere on there this is where our

138
00:04:37,759 --> 00:04:39,280
comfortable spot is this is what we're

139
00:04:39,280 --> 00:04:41,120
happy with

140
00:04:41,120 --> 00:04:43,040
it makes into a sense because as human

141
00:04:43,040 --> 00:04:45,520
beings we we think about moving quickly

142
00:04:45,520 --> 00:04:46,800
as carrying

143
00:04:46,800 --> 00:04:49,360
some level of risk like driving a car at

144
00:04:49,360 --> 00:04:50,880
high speeds

145
00:04:50,880 --> 00:04:52,800
um the problem with that intuition when

146
00:04:52,800 --> 00:04:54,160
applied to application delivery is that

147
00:04:54,160 --> 00:04:57,680
it's completely wrong um i'm not saying

148
00:04:57,680 --> 00:04:59,120
that we should rush everything it'll be

149
00:04:59,120 --> 00:05:00,320
fine

150
00:05:00,320 --> 00:05:01,919
but rapid delivery and high quality are

151
00:05:01,919 --> 00:05:03,600
not opposed to each other in fact they

152
00:05:03,600 --> 00:05:05,039
complement each other they work well

153
00:05:05,039 --> 00:05:07,120
together having the ability to develop

154
00:05:07,120 --> 00:05:08,320
and release changes to production

155
00:05:08,320 --> 00:05:09,360
quickly

156
00:05:09,360 --> 00:05:11,759
means that you can more quickly respond

157
00:05:11,759 --> 00:05:13,440
to issues find the issues and fix them

158
00:05:13,440 --> 00:05:14,720
quicker

159
00:05:14,720 --> 00:05:17,440
security issues quicker

160
00:05:17,440 --> 00:05:18,800
you probably have automated deployment

161
00:05:18,800 --> 00:05:20,880
processes which removes you know an

162
00:05:20,880 --> 00:05:23,520
error an element of human error

163
00:05:23,520 --> 00:05:26,639
opportunities for malicious intent or

164
00:05:26,639 --> 00:05:29,520
other reliability on other aspects

165
00:05:29,520 --> 00:05:30,800
you probably have automated testing

166
00:05:30,800 --> 00:05:32,880
processes which increases the functional

167
00:05:32,880 --> 00:05:34,160
correctness the things that we care

168
00:05:34,160 --> 00:05:36,960
about things that most people care about

169
00:05:36,960 --> 00:05:38,800
and the other non-functionals because

170
00:05:38,800 --> 00:05:40,479
you're regularly testing that you're not

171
00:05:40,479 --> 00:05:44,240
seeing any backsliding in that area

172
00:05:44,400 --> 00:05:46,000
um you've probably got code that's clear

173
00:05:46,000 --> 00:05:48,080
straightforward easy to extend

174
00:05:48,080 --> 00:05:49,360
you're not handing off changes to other

175
00:05:49,360 --> 00:05:52,400
teams for assurance or deployment

176
00:05:52,400 --> 00:05:54,720
these things are just advantages both

177
00:05:54,720 --> 00:05:56,880
from a security point of view and from a

178
00:05:56,880 --> 00:05:58,960
quality point of view

179
00:05:58,960 --> 00:06:01,360
you can't deliver at pace unless you're

180
00:06:01,360 --> 00:06:02,800
paying attention to the non-functions

181
00:06:02,800 --> 00:06:04,319
it's just not possible

182
00:06:04,319 --> 00:06:06,240
performance interoperable reliable

183
00:06:06,240 --> 00:06:08,880
usable maintainable secure systems can

184
00:06:08,880 --> 00:06:10,800
be changed with confidence

185
00:06:10,800 --> 00:06:12,560
low quality systems that are harder to

186
00:06:12,560 --> 00:06:13,520
change

187
00:06:13,520 --> 00:06:15,680
tend to be brittle unmaintainable and

188
00:06:15,680 --> 00:06:19,120
reliable and secure slow

189
00:06:19,120 --> 00:06:21,120
this low quality system simply can't be

190
00:06:21,120 --> 00:06:22,880
changed quickly uh they'll functionally

191
00:06:22,880 --> 00:06:24,560
fall apart if you try to and everyone is

192
00:06:24,560 --> 00:06:26,639
quite correctly scared to even attempt

193
00:06:26,639 --> 00:06:27,680
it

194
00:06:27,680 --> 00:06:29,600
every change leads to unpredictable

195
00:06:29,600 --> 00:06:32,800
failures and overly complex systems

196
00:06:32,800 --> 00:06:34,800
slowest release card projects tend to be

197
00:06:34,800 --> 00:06:38,000
the ones that have the lowest quality

198
00:06:38,000 --> 00:06:40,400
delivering slowly isn't more secure

199
00:06:40,400 --> 00:06:41,919
it's fearful and if you're afraid of

200
00:06:41,919 --> 00:06:43,600
changing your system that system is not

201
00:06:43,600 --> 00:06:46,000
secure

202
00:06:46,880 --> 00:06:48,560
taking all this into account

203
00:06:48,560 --> 00:06:50,080
security incidents are training

204
00:06:50,080 --> 00:06:52,319
indicators of low software quality uh

205
00:06:52,319 --> 00:06:54,400
the problem set in long before that

206
00:06:54,400 --> 00:06:55,919
incident happened

207
00:06:55,919 --> 00:06:57,680
training indicators confirm long-term

208
00:06:57,680 --> 00:06:59,039
trends but they don't really help to

209
00:06:59,039 --> 00:07:00,479
predict them

210
00:07:00,479 --> 00:07:01,680
they're a terrible measure to bash

211
00:07:01,680 --> 00:07:03,919
organization decision making on and

212
00:07:03,919 --> 00:07:05,199
you shouldn't be choosing how you spend

213
00:07:05,199 --> 00:07:07,599
money uh that way either

214
00:07:07,599 --> 00:07:09,599
um which is why you know massive

215
00:07:09,599 --> 00:07:11,039
re-budgeting and shake-up when you're

216
00:07:11,039 --> 00:07:13,759
responding to an incident is terrible uh

217
00:07:13,759 --> 00:07:15,840
but you know that's generally where

218
00:07:15,840 --> 00:07:18,400
budget funding comes from

219
00:07:18,400 --> 00:07:20,479
so how do we manage manage security

220
00:07:20,479 --> 00:07:21,680
quality when we only have training

221
00:07:21,680 --> 00:07:23,039
indicators

222
00:07:23,039 --> 00:07:24,080
well what we need to do is find

223
00:07:24,080 --> 00:07:25,360
something that on trading we need to

224
00:07:25,360 --> 00:07:27,039
find some leading indicators of software

225
00:07:27,039 --> 00:07:28,160
quality

226
00:07:28,160 --> 00:07:30,560
get ahead of any potential incidents so

227
00:07:30,560 --> 00:07:32,240
if we had trading indicators then uh

228
00:07:32,240 --> 00:07:33,440
sorry leading indicators then we'd have

229
00:07:33,440 --> 00:07:37,280
a good measure to base our decisions on

230
00:07:37,440 --> 00:07:39,599
so the four metrics that matter these

231
00:07:39,599 --> 00:07:40,800
are i'm not going to go into a lot of

232
00:07:40,800 --> 00:07:42,560
detail on them if you don't know about

233
00:07:42,560 --> 00:07:44,160
the formation matter you need to go out

234
00:07:44,160 --> 00:07:46,240
and get a copy of accelerate you need to

235
00:07:46,240 --> 00:07:48,240
read it

236
00:07:48,240 --> 00:07:49,840
but if you're doing

237
00:07:49,840 --> 00:07:51,759
well with these four metrics

238
00:07:51,759 --> 00:07:53,280
you're delivering

239
00:07:53,280 --> 00:07:55,919
product at you know to your business to

240
00:07:55,919 --> 00:07:57,919
your organization at the right speed

241
00:07:57,919 --> 00:07:59,120
you're doing things the right way you're

242
00:07:59,120 --> 00:08:01,360
delivering high quality product

243
00:08:01,360 --> 00:08:03,759
you have good leading indicators of how

244
00:08:03,759 --> 00:08:05,840
high performing your high software

245
00:08:05,840 --> 00:08:07,840
quality delivery is

246
00:08:07,840 --> 00:08:10,560
now these are obviously not you know

247
00:08:10,560 --> 00:08:12,000
absolute figures they're very much

248
00:08:12,000 --> 00:08:13,919
relative

249
00:08:13,919 --> 00:08:16,639
but um

250
00:08:16,639 --> 00:08:17,759
if you notice that that functional

251
00:08:17,759 --> 00:08:19,120
correctness

252
00:08:19,120 --> 00:08:20,400
doesn't actually impact any of these

253
00:08:20,400 --> 00:08:22,240
things right you can build a

254
00:08:22,240 --> 00:08:23,840
completely wrong system a system that

255
00:08:23,840 --> 00:08:25,039
doesn't work and that doesn't do what

256
00:08:25,039 --> 00:08:26,479
your customers need it to

257
00:08:26,479 --> 00:08:28,639
but we're really high quality

258
00:08:28,639 --> 00:08:30,720
but non-functionals do impact all of

259
00:08:30,720 --> 00:08:33,919
these so any one of the non-functionals

260
00:08:33,919 --> 00:08:35,839
is affecting

261
00:08:35,839 --> 00:08:37,839
a great deal of a great

262
00:08:37,839 --> 00:08:38,719
deal

263
00:08:38,719 --> 00:08:41,519
affecting these these by these

264
00:08:41,519 --> 00:08:43,919
these four metrics

265
00:08:43,919 --> 00:08:46,160
so security is interesting uh in that

266
00:08:46,160 --> 00:08:47,839
providing improving security of systems

267
00:08:47,839 --> 00:08:50,480
doesn't actually improve these metrics

268
00:08:50,480 --> 00:08:53,120
except if that we do it the wrong way if

269
00:08:53,120 --> 00:08:55,279
we if we implement security features or

270
00:08:55,279 --> 00:08:57,519
implement security processes wrong then

271
00:08:57,519 --> 00:08:59,920
we will negatively impact these things

272
00:08:59,920 --> 00:09:02,480
so we need to aim for a

273
00:09:02,480 --> 00:09:06,160
as little a minimal impact as possible

274
00:09:06,160 --> 00:09:08,160
while improving security and we need to

275
00:09:08,160 --> 00:09:09,519
keep track of these metrics while doing

276
00:09:09,519 --> 00:09:10,160
it

277
00:09:10,160 --> 00:09:12,160
so these metrics are useful to tell us

278
00:09:12,160 --> 00:09:14,240
that we're producing quality software

279
00:09:14,240 --> 00:09:16,160
these metrics are also useful to tell us

280
00:09:16,160 --> 00:09:17,279
that we're not

281
00:09:17,279 --> 00:09:19,279
impeding the ability of the business to

282
00:09:19,279 --> 00:09:21,920
create software or to produce new

283
00:09:21,920 --> 00:09:22,959
versions

284
00:09:22,959 --> 00:09:26,640
with our security effects

285
00:09:29,200 --> 00:09:30,399
in this study

286
00:09:30,399 --> 00:09:32,480
of root causes of all common

287
00:09:32,480 --> 00:09:34,800
vulnerabilities and exposures reported

288
00:09:34,800 --> 00:09:38,480
in the eight years from 2008 to 2016

289
00:09:38,480 --> 00:09:40,000
um

290
00:09:40,000 --> 00:09:43,279
essentially said that almost all

291
00:09:43,279 --> 00:09:45,120
of our problems are in implementation in

292
00:09:45,120 --> 00:09:49,800
code and it makes sense right there's

293
00:09:50,080 --> 00:09:51,920
there's only so many ways

294
00:09:51,920 --> 00:09:53,519
um that you can

295
00:09:53,519 --> 00:09:54,880
mess up the configuration there's only

296
00:09:54,880 --> 00:09:56,320
so many ways that you can design

297
00:09:56,320 --> 00:09:58,080
something incorrectly

298
00:09:58,080 --> 00:09:59,680
um

299
00:09:59,680 --> 00:10:00,880
there are countless ways that you can

300
00:10:00,880 --> 00:10:03,040
scroll by coding it's an incredibly

301
00:10:03,040 --> 00:10:06,320
complex endeavor it's really hard to do

302
00:10:06,320 --> 00:10:09,680
the traditional focus of cyber security

303
00:10:09,680 --> 00:10:11,920
design reviews config hardening

304
00:10:11,920 --> 00:10:14,000
it it tends to sit in this little box

305
00:10:14,000 --> 00:10:15,920
it's useful but it's it's not the whole

306
00:10:15,920 --> 00:10:17,200
picture it's definitely not the whole

307
00:10:17,200 --> 00:10:18,480
picture

308
00:10:18,480 --> 00:10:20,160
so most product security lies in

309
00:10:20,160 --> 00:10:21,680
preventing security defects in code from

310
00:10:21,680 --> 00:10:23,360
reaching production fixing the ones that

311
00:10:23,360 --> 00:10:25,040
are already there

312
00:10:25,040 --> 00:10:27,839
having a measure for security defect

313
00:10:27,839 --> 00:10:29,440
density encode from a security testing

314
00:10:29,440 --> 00:10:31,600
tool it's a good direct measure metric

315
00:10:31,600 --> 00:10:33,680
for security quality

316
00:10:33,680 --> 00:10:35,920
um

317
00:10:36,079 --> 00:10:39,519
but what is one of the next steps

318
00:10:41,200 --> 00:10:43,760
well if we wanted to ensure performance

319
00:10:43,760 --> 00:10:44,880
in systems

320
00:10:44,880 --> 00:10:47,279
right performance is easy because it's

321
00:10:47,279 --> 00:10:48,880
it's something we measure

322
00:10:48,880 --> 00:10:50,800
uh we we have we have a pretty good

323
00:10:50,800 --> 00:10:52,160
understanding of what performance code

324
00:10:52,160 --> 00:10:53,839
should look like and what that means for

325
00:10:53,839 --> 00:10:56,480
our end users

326
00:10:56,480 --> 00:10:57,839
so let's start with performance and move

327
00:10:57,839 --> 00:11:01,839
on to security um

328
00:11:02,079 --> 00:11:03,360
if we're going to be doing something

329
00:11:03,360 --> 00:11:05,120
from a security point of view from a

330
00:11:05,120 --> 00:11:06,560
from a performance point of view we want

331
00:11:06,560 --> 00:11:08,640
to think about what that impact will be

332
00:11:08,640 --> 00:11:09,680
think about the performance impact of

333
00:11:09,680 --> 00:11:11,680
any change that we're going to make

334
00:11:11,680 --> 00:11:13,440
we're going to plan our architecture

335
00:11:13,440 --> 00:11:15,440
with performance in mind

336
00:11:15,440 --> 00:11:16,640
we want to ensure that everyone knows

337
00:11:16,640 --> 00:11:18,399
how to write performant code in the

338
00:11:18,399 --> 00:11:19,519
languages and frameworks that we're

339
00:11:19,519 --> 00:11:20,800
using

340
00:11:20,800 --> 00:11:22,640
we want to hire people with domain

341
00:11:22,640 --> 00:11:24,399
expertise on performance so they can

342
00:11:24,399 --> 00:11:26,640
help push performance as a as a key

343
00:11:26,640 --> 00:11:28,240
component of what we're doing so they

344
00:11:28,240 --> 00:11:30,399
can train our other users to make use of

345
00:11:30,399 --> 00:11:32,320
that

346
00:11:32,320 --> 00:11:33,920
we're going to do we're going to do peer

347
00:11:33,920 --> 00:11:35,680
review of code changes looking for

348
00:11:35,680 --> 00:11:38,320
performance issues because yeah we now

349
00:11:38,320 --> 00:11:40,800
know what we should be looking for

350
00:11:40,800 --> 00:11:42,079
we're going to share known performed

351
00:11:42,079 --> 00:11:44,720
code with the rest of the organization

352
00:11:44,720 --> 00:11:46,000
if we have

353
00:11:46,000 --> 00:11:47,040
internal libraries that are

354
00:11:47,040 --> 00:11:48,320
exceptionally performed we'll make sure

355
00:11:48,320 --> 00:11:51,600
that we use those everywhere

356
00:11:51,600 --> 00:11:52,800
we'll make performance a key

357
00:11:52,800 --> 00:11:54,880
consideration when we select

358
00:11:54,880 --> 00:11:56,480
third third-party services or

359
00:11:56,480 --> 00:11:58,079
third-party libraries or third-party

360
00:11:58,079 --> 00:12:00,638
components

361
00:12:00,720 --> 00:12:03,440
we'll automatically test all changes for

362
00:12:03,440 --> 00:12:05,360
any performance defects any performance

363
00:12:05,360 --> 00:12:07,200
regressions

364
00:12:07,200 --> 00:12:09,040
on every commit so that developers can

365
00:12:09,040 --> 00:12:11,120
see immediately hey i made a change here

366
00:12:11,120 --> 00:12:12,320
and it affected the performance of the

367
00:12:12,320 --> 00:12:15,200
system catch it early fix it early

368
00:12:15,200 --> 00:12:16,720
we'll prioritize performance fixes in

369
00:12:16,720 --> 00:12:18,880
our backlogs in our development cycles

370
00:12:18,880 --> 00:12:21,279
because it's important to us

371
00:12:21,279 --> 00:12:22,959
we'll inject telemetry to measure

372
00:12:22,959 --> 00:12:24,720
performance in production just to show

373
00:12:24,720 --> 00:12:27,200
how performant our systems are

374
00:12:27,200 --> 00:12:28,480
we'll investigate and fix any

375
00:12:28,480 --> 00:12:30,079
performance issues that we find in

376
00:12:30,079 --> 00:12:31,200
production

377
00:12:31,200 --> 00:12:33,040
making sure that we keep that you know

378
00:12:33,040 --> 00:12:34,800
that standard high and publish our

379
00:12:34,800 --> 00:12:36,560
findings and publish what we've done to

380
00:12:36,560 --> 00:12:38,480
ensure it stayed performant across the

381
00:12:38,480 --> 00:12:41,519
organization to improve more learning

382
00:12:41,519 --> 00:12:42,639
we'll have responsibility and

383
00:12:42,639 --> 00:12:44,639
accountability for performance

384
00:12:44,639 --> 00:12:46,160
with the people who are building the

385
00:12:46,160 --> 00:12:47,680
systems we'll make it their

386
00:12:47,680 --> 00:12:48,959
responsibility to make sure it stays

387
00:12:48,959 --> 00:12:51,959
performant

388
00:12:52,959 --> 00:12:54,240
if we're going to do the same thing for

389
00:12:54,240 --> 00:12:56,079
security it's going to be exactly the

390
00:12:56,079 --> 00:12:58,079
same right

391
00:12:58,079 --> 00:12:59,600
now some of this we can measure and we

392
00:12:59,600 --> 00:13:01,120
can make physical you can have a record

393
00:13:01,120 --> 00:13:03,040
of developers who've had secure coding

394
00:13:03,040 --> 00:13:05,120
training

395
00:13:05,120 --> 00:13:07,040
we can have a team with only developers

396
00:13:07,040 --> 00:13:09,200
who haven't had uh

397
00:13:09,200 --> 00:13:10,480
security training we know that they're

398
00:13:10,480 --> 00:13:12,959
more likely to make security issues

399
00:13:12,959 --> 00:13:15,200
cause security issues so

400
00:13:15,200 --> 00:13:17,440
lower security quality

401
00:13:17,440 --> 00:13:19,519
we can check gitlab or github or

402
00:13:19,519 --> 00:13:22,480
whatever your version control system is

403
00:13:22,480 --> 00:13:23,839
for evidence of pull requests and

404
00:13:23,839 --> 00:13:25,279
reviews that show that peer review is

405
00:13:25,279 --> 00:13:26,240
happening

406
00:13:26,240 --> 00:13:28,720
uh we can check jira or any other work

407
00:13:28,720 --> 00:13:30,480
tracking system for the age of items

408
00:13:30,480 --> 00:13:31,680
marked as security work to show that

409
00:13:31,680 --> 00:13:32,800
known issues aren't just being

410
00:13:32,800 --> 00:13:34,959
de-prioritized or ignored

411
00:13:34,959 --> 00:13:37,120
we can check build logs test logs in our

412
00:13:37,120 --> 00:13:39,120
orchestration platforms for evidence of

413
00:13:39,120 --> 00:13:41,360
security tool test runs

414
00:13:41,360 --> 00:13:43,279
and we should have the security tools in

415
00:13:43,279 --> 00:13:45,760
place daniel pointed out

416
00:13:45,760 --> 00:13:47,040
and we can pull all these delivery

417
00:13:47,040 --> 00:13:48,639
metrics direct code level security

418
00:13:48,639 --> 00:13:50,000
testing output evidence good ways of

419
00:13:50,000 --> 00:13:51,040
working together to create strong

420
00:13:51,040 --> 00:13:52,880
indicators we have good product security

421
00:13:52,880 --> 00:13:55,839
under under control

422
00:13:56,639 --> 00:13:59,199
how do we do that at pace though

423
00:13:59,199 --> 00:14:01,920
well we've already got an example an sre

424
00:14:01,920 --> 00:14:03,279
right we have experts in the field of

425
00:14:03,279 --> 00:14:04,720
reliability

426
00:14:04,720 --> 00:14:06,959
they build self-service platforms which

427
00:14:06,959 --> 00:14:08,240
is important they don't become the

428
00:14:08,240 --> 00:14:09,760
bottleneck themselves

429
00:14:09,760 --> 00:14:12,399
we have uh slo service level objectives

430
00:14:12,399 --> 00:14:14,320
because it costs a lot more to build a

431
00:14:14,320 --> 00:14:16,639
five nines or six nine system then a two

432
00:14:16,639 --> 00:14:18,000
nines one

433
00:14:18,000 --> 00:14:19,360
um

434
00:14:19,360 --> 00:14:21,120
so agreeing what product requirements is

435
00:14:21,120 --> 00:14:23,199
pretty essential we have service level

436
00:14:23,199 --> 00:14:24,720
indicators which are relatively

437
00:14:24,720 --> 00:14:26,240
straightforward for reliability what is

438
00:14:26,240 --> 00:14:28,000
the system up or down how long has it

439
00:14:28,000 --> 00:14:30,560
been down this month so far

440
00:14:30,560 --> 00:14:32,000
the offering model is pretty pretty

441
00:14:32,000 --> 00:14:34,560
basic too it's simple it's data driven

442
00:14:34,560 --> 00:14:36,320
takes away all of that that emotion

443
00:14:36,320 --> 00:14:38,399
about uh about what's going on

444
00:14:38,399 --> 00:14:40,160
um it provides a self-regulating back

445
00:14:40,160 --> 00:14:42,000
pressure on the product team so daily

446
00:14:42,000 --> 00:14:43,920
reliability go down we change the system

447
00:14:43,920 --> 00:14:46,480
over time they get to push back them

448
00:14:46,480 --> 00:14:48,160
protein that has production support

449
00:14:48,160 --> 00:14:50,079
responsibility handed back to them

450
00:14:50,079 --> 00:14:52,160
has a strong incentive to now focus on

451
00:14:52,160 --> 00:14:53,920
those those non-functionals right to get

452
00:14:53,920 --> 00:14:56,480
reliability back to where it needs to be

453
00:14:56,480 --> 00:14:58,000
sre won't take production sport again

454
00:14:58,000 --> 00:14:59,519
until you know reliability is back where

455
00:14:59,519 --> 00:15:01,440
it needs to be developers don't like

456
00:15:01,440 --> 00:15:03,760
being woken up 3 30 in the morning

457
00:15:03,760 --> 00:15:04,560
so

458
00:15:04,560 --> 00:15:07,040
yeah can we apply the same approach

459
00:15:07,040 --> 00:15:09,279
to security

460
00:15:09,279 --> 00:15:12,600
sure we can

461
00:15:12,880 --> 00:15:15,120
product security engineering

462
00:15:15,120 --> 00:15:16,880
it's basically the same same as being

463
00:15:16,880 --> 00:15:17,839
part of it

464
00:15:17,839 --> 00:15:18,880
it's just part of an engineering

465
00:15:18,880 --> 00:15:20,000
function

466
00:15:20,000 --> 00:15:21,440
there's an adjustment required for some

467
00:15:21,440 --> 00:15:23,120
security teams to become that internal

468
00:15:23,120 --> 00:15:25,440
consultancy with an education focus but

469
00:15:25,440 --> 00:15:27,199
a lot of teams are already doing that a

470
00:15:27,199 --> 00:15:28,560
lot of organizations are regrouping

471
00:15:28,560 --> 00:15:31,040
systems based on credibility

472
00:15:31,040 --> 00:15:33,040
with greater security requirements so

473
00:15:33,040 --> 00:15:34,560
critical systems

474
00:15:34,560 --> 00:15:37,360
uh are also have also higher security

475
00:15:37,360 --> 00:15:39,600
requirements associated to them

476
00:15:39,600 --> 00:15:41,440
so we just need to specify where the

477
00:15:41,440 --> 00:15:43,120
security level indicators need to be for

478
00:15:43,120 --> 00:15:45,120
each of those groups

479
00:15:45,120 --> 00:15:47,279
we don't yet have one we don't have one

480
00:15:47,279 --> 00:15:49,199
clear service level indicator

481
00:15:49,199 --> 00:15:50,320
so we have to combine multiple

482
00:15:50,320 --> 00:15:52,639
indicators to create composite s-line so

483
00:15:52,639 --> 00:15:54,399
we'll go out and get some other metrics

484
00:15:54,399 --> 00:15:55,600
around that

485
00:15:55,600 --> 00:15:57,040
like whether the devs have done the

486
00:15:57,040 --> 00:15:59,040
training that sort of thing

487
00:15:59,040 --> 00:16:00,800
um and how it is to provide back

488
00:16:00,800 --> 00:16:02,079
pressure is going to vary from

489
00:16:02,079 --> 00:16:03,920
organization to organization right we we

490
00:16:03,920 --> 00:16:06,399
made security visible through slice

491
00:16:06,399 --> 00:16:08,079
without back pressure the product teams

492
00:16:08,079 --> 00:16:10,240
can't self-regulate for security and

493
00:16:10,240 --> 00:16:11,440
unlike security you're not going to get

494
00:16:11,440 --> 00:16:13,199
a series of like smaller security

495
00:16:13,199 --> 00:16:15,199
incidents that lead up to a big one

496
00:16:15,199 --> 00:16:16,560
um failure

497
00:16:16,560 --> 00:16:17,920
failure mode and security is pretty

498
00:16:17,920 --> 00:16:20,399
immediate

499
00:16:20,399 --> 00:16:22,240
so you won't hear this month we've

500
00:16:22,240 --> 00:16:24,399
briefly been hacked twice um so we need

501
00:16:24,399 --> 00:16:25,920
to ease back on feature work and focus

502
00:16:25,920 --> 00:16:27,279
more on security

503
00:16:27,279 --> 00:16:29,199
so we don't get hacked anymore that's

504
00:16:29,199 --> 00:16:31,440
not that's not something

505
00:16:31,440 --> 00:16:33,040
you'll ever hear

506
00:16:33,040 --> 00:16:34,560
so we need to have strong incentives for

507
00:16:34,560 --> 00:16:36,160
product teams to keep the indicators

508
00:16:36,160 --> 00:16:38,639
where they need to be

509
00:16:38,639 --> 00:16:40,240
um

510
00:16:40,240 --> 00:16:41,360
you'll need to be able to answer these

511
00:16:41,360 --> 00:16:42,880
questions who's contributing to the

512
00:16:42,880 --> 00:16:44,800
system who's helping with the code he's

513
00:16:44,800 --> 00:16:45,920
helping with the design who's making the

514
00:16:45,920 --> 00:16:47,279
product decisions

515
00:16:47,279 --> 00:16:48,880
what subsystems make up the system what

516
00:16:48,880 --> 00:16:50,240
components make the subsystems which

517
00:16:50,240 --> 00:16:52,240
code repositories map to those and from

518
00:16:52,240 --> 00:16:53,600
the bottom up you need to go from source

519
00:16:53,600 --> 00:16:55,120
code that might be demonstrating a

520
00:16:55,120 --> 00:16:57,440
problem right away components subsystems

521
00:16:57,440 --> 00:16:58,480
systems that are built from that

522
00:16:58,480 --> 00:17:00,560
repository without ever asking people

523
00:17:00,560 --> 00:17:02,240
right people come and go software tends

524
00:17:02,240 --> 00:17:03,360
to stick around

525
00:17:03,360 --> 00:17:06,160
usually longer than it should

526
00:17:06,160 --> 00:17:07,439
if you can't do this from an engineering

527
00:17:07,439 --> 00:17:08,559
point of view then the organization has

528
00:17:08,559 --> 00:17:10,640
no chance of getting its act together

529
00:17:10,640 --> 00:17:12,640
and it will no chance have no chance to

530
00:17:12,640 --> 00:17:14,559
build high quality secure systems

531
00:17:14,559 --> 00:17:16,959
or respond to identified problems

532
00:17:16,959 --> 00:17:19,839
in the right way

533
00:17:20,000 --> 00:17:22,160
so

534
00:17:24,799 --> 00:17:28,439
i'm going to

535
00:17:32,160 --> 00:17:34,160
this brings us to secure software

536
00:17:34,160 --> 00:17:36,160
development training so the how of it

537
00:17:36,160 --> 00:17:37,679
all

538
00:17:37,679 --> 00:17:39,120
um

539
00:17:39,120 --> 00:17:40,240
so

540
00:17:40,240 --> 00:17:41,440
today i want to talk about the latest

541
00:17:41,440 --> 00:17:43,440
attempt owasp has made to standardize

542
00:17:43,440 --> 00:17:44,880
and codify curriculum secure software

543
00:17:44,880 --> 00:17:47,039
development it is an ostomy initiative

544
00:17:47,039 --> 00:17:49,039
and i'm a huge os fan i'm a huge fan of

545
00:17:49,039 --> 00:17:50,400
the open source approach to building

546
00:17:50,400 --> 00:17:51,520
stuff

547
00:17:51,520 --> 00:17:53,200
um because things then happen in the

548
00:17:53,200 --> 00:17:55,760
open everyone anyone can contribute it

549
00:17:55,760 --> 00:17:57,200
doesn't make sense to all use os

550
00:17:57,200 --> 00:17:58,480
projects that set the standard for

551
00:17:58,480 --> 00:18:00,960
measuring software quality like the acs

552
00:18:00,960 --> 00:18:02,160
and that

553
00:18:02,160 --> 00:18:03,760
the

554
00:18:03,760 --> 00:18:05,200
and the standards for development

555
00:18:05,200 --> 00:18:07,760
maturity like sam

556
00:18:07,760 --> 00:18:09,520
and to use the great work done in those

557
00:18:09,520 --> 00:18:12,080
areas we also leveraged cornucopia

558
00:18:12,080 --> 00:18:13,760
although that's because it leverages the

559
00:18:13,760 --> 00:18:15,760
same projects and covers everything uh

560
00:18:15,760 --> 00:18:17,840
from design principles as well and the

561
00:18:17,840 --> 00:18:19,840
top ten because that's where everything

562
00:18:19,840 --> 00:18:22,160
starts

563
00:18:22,160 --> 00:18:23,280
till you're starting let's keep going

564
00:18:23,280 --> 00:18:24,640
with fundamentals

565
00:18:24,640 --> 00:18:26,240
uh top ten

566
00:18:26,240 --> 00:18:29,440
although there are uh several of them

567
00:18:29,440 --> 00:18:30,640
is where most teams start to look at

568
00:18:30,640 --> 00:18:32,799
product security and it's from the most

569
00:18:32,799 --> 00:18:34,400
common defects rather than how to build

570
00:18:34,400 --> 00:18:35,600
things right

571
00:18:35,600 --> 00:18:36,960
but the original top 10 the one that's

572
00:18:36,960 --> 00:18:38,720
being updated this year

573
00:18:38,720 --> 00:18:40,559
going to be talked about a lot today

574
00:18:40,559 --> 00:18:43,840
over the course of the next 24 hours

575
00:18:44,320 --> 00:18:46,240
is still indirectly referenced by the

576
00:18:46,240 --> 00:18:49,280
pci dss despite not being a standard it

577
00:18:49,280 --> 00:18:51,280
is a good place to start though

578
00:18:51,280 --> 00:18:53,200
uh andrew van stock

579
00:18:53,200 --> 00:18:55,039
who is the current top 10 project lead

580
00:18:55,039 --> 00:18:57,120
and the edie for owasp

581
00:18:57,120 --> 00:18:58,640
said at this year's developer summit

582
00:18:58,640 --> 00:19:00,080
that top 10 is a good place to learn to

583
00:19:00,080 --> 00:19:03,280
call from so let's start there

584
00:19:03,280 --> 00:19:05,200
this is the new top 10

585
00:19:05,200 --> 00:19:06,320
briefly as i said because there's going

586
00:19:06,320 --> 00:19:08,160
to be lots of presentations on it today

587
00:19:08,160 --> 00:19:09,760
and lots of people will be talking about

588
00:19:09,760 --> 00:19:10,880
it over the course of the next couple

589
00:19:10,880 --> 00:19:11,760
weeks

590
00:19:11,760 --> 00:19:13,039
are the items on the right side of this

591
00:19:13,039 --> 00:19:15,039
list and the updates made a couple of

592
00:19:15,039 --> 00:19:16,640
changes to the list although it seems

593
00:19:16,640 --> 00:19:17,760
that we're still stuck with interesting

594
00:19:17,760 --> 00:19:19,280
with injection tax

595
00:19:19,280 --> 00:19:22,160
but they have dropped slightly lower now

596
00:19:22,160 --> 00:19:24,240
mostly attention's been made to to

597
00:19:24,240 --> 00:19:25,919
naming it's been key

598
00:19:25,919 --> 00:19:27,440
grouping of types of attacks that we've

599
00:19:27,440 --> 00:19:29,039
seen previously

600
00:19:29,039 --> 00:19:32,240
and there are a few new ones

601
00:19:32,240 --> 00:19:34,720
so if you look at the top 10 just broken

602
00:19:34,720 --> 00:19:36,160
up here a little bit you're seeing that

603
00:19:36,160 --> 00:19:37,440
there's a lot more happening in building

604
00:19:37,440 --> 00:19:39,280
errors there's been some renaming and

605
00:19:39,280 --> 00:19:41,840
shifting around of things and as i said

606
00:19:41,840 --> 00:19:43,360
there will be lots of discussion about

607
00:19:43,360 --> 00:19:45,840
it today

608
00:19:46,559 --> 00:19:49,919
now the asc 101 or the asu foundation

609
00:19:49,919 --> 00:19:50,960
application security curriculum

610
00:19:50,960 --> 00:19:52,960
foundation covers the top 10.

611
00:19:52,960 --> 00:19:54,880
uh this slide is directly taken out of

612
00:19:54,880 --> 00:19:56,240
the the

613
00:19:56,240 --> 00:19:58,320
sample presentation material for the asc

614
00:19:58,320 --> 00:19:59,520
101

615
00:19:59,520 --> 00:20:01,280
um and this is what it covers it's it's

616
00:20:01,280 --> 00:20:03,919
who's aimed at and and it's

617
00:20:03,919 --> 00:20:06,799
what you need to know going into it

618
00:20:06,799 --> 00:20:07,600
um

619
00:20:07,600 --> 00:20:09,679
there's a slide like this one

620
00:20:09,679 --> 00:20:11,280
for each of the top 10

621
00:20:11,280 --> 00:20:13,200
with some speaker notes

622
00:20:13,200 --> 00:20:15,280
that are based off of our expert

623
00:20:15,280 --> 00:20:17,200
experiences team that's been involved in

624
00:20:17,200 --> 00:20:18,880
building it

625
00:20:18,880 --> 00:20:20,799
definitely go check it out

626
00:20:20,799 --> 00:20:24,080
it can be found over here

627
00:20:24,080 --> 00:20:26,799
i'd like to just a quick shout out to uh

628
00:20:26,799 --> 00:20:28,960
hmrc uh her majesty's revenue and

629
00:20:28,960 --> 00:20:31,039
customs the uk tax department who

630
00:20:31,039 --> 00:20:32,240
actually helped us build this piece of

631
00:20:32,240 --> 00:20:34,080
work and you know we're welcome we're

632
00:20:34,080 --> 00:20:36,559
happy to contribute back to owasp and to

633
00:20:36,559 --> 00:20:39,520
to us as a foundation

634
00:20:39,520 --> 00:20:41,919
but what comes after that basics

635
00:20:41,919 --> 00:20:45,840
well for me it's cornucopia um

636
00:20:45,840 --> 00:20:47,360
because architectures are evolutionary

637
00:20:47,360 --> 00:20:49,200
and cornucopia allows developers to use

638
00:20:49,200 --> 00:20:50,880
knowledge they learn through the game to

639
00:20:50,880 --> 00:20:53,520
evolve thinking about threads modeling

640
00:20:53,520 --> 00:20:55,760
as the architectures evolve

641
00:20:55,760 --> 00:20:57,760
protocopia itself stands on the the

642
00:20:57,760 --> 00:20:59,360
giants that follow

643
00:20:59,360 --> 00:21:01,440
but it simplifies the more complex

644
00:21:01,440 --> 00:21:03,200
standards we're going to try and get to

645
00:21:03,200 --> 00:21:05,039
and it creates a top five of places to

646
00:21:05,039 --> 00:21:07,520
consider doing security user stories or

647
00:21:07,520 --> 00:21:09,840
a spike or adding a security nfr or some

648
00:21:09,840 --> 00:21:12,799
acceptance criteria

649
00:21:13,679 --> 00:21:15,840
if you don't know cornucopia is a game a

650
00:21:15,840 --> 00:21:17,679
card game to be precise it's based off

651
00:21:17,679 --> 00:21:19,600
of adam shostak's eop elevation of

652
00:21:19,600 --> 00:21:20,559
privilege

653
00:21:20,559 --> 00:21:23,039
eop covers gamifying threat modeling for

654
00:21:23,039 --> 00:21:25,120
security teams while cornucopia does the

655
00:21:25,120 --> 00:21:27,120
same thing for developers

656
00:21:27,120 --> 00:21:29,280
the point of view simply shifted that

657
00:21:29,280 --> 00:21:30,799
slightly now i have hours of

658
00:21:30,799 --> 00:21:32,159
presentation and demonstration materials

659
00:21:32,159 --> 00:21:33,919
in cornucopia if you want to learn how

660
00:21:33,919 --> 00:21:36,880
to play then this video is a good place

661
00:21:36,880 --> 00:21:37,919
to start

662
00:21:37,919 --> 00:21:41,760
and feel free to reach out to me at rdwt

663
00:21:41,760 --> 00:21:43,520
for deck of cards or for b access to

664
00:21:43,520 --> 00:21:45,039
online version that we're currently

665
00:21:45,039 --> 00:21:47,600
working on

666
00:21:48,080 --> 00:21:49,679
uh i have hours on these slides so i'll

667
00:21:49,679 --> 00:21:51,600
just click straight through them

668
00:21:51,600 --> 00:21:53,440
the top five as i said is made up of six

669
00:21:53,440 --> 00:21:55,360
suits

670
00:21:55,360 --> 00:21:58,000
there is authentication who you are

671
00:21:58,000 --> 00:22:00,080
authorization what you're allowed to do

672
00:22:00,080 --> 00:22:02,159
session management often we check the

673
00:22:02,159 --> 00:22:03,280
auth

674
00:22:03,280 --> 00:22:06,000
cryptography the secrets the hashes the

675
00:22:06,000 --> 00:22:08,559
poor choices you know what i mean

676
00:22:08,559 --> 00:22:10,080
anyway moving right along

677
00:22:10,080 --> 00:22:11,919
data validation and coding making sure

678
00:22:11,919 --> 00:22:13,280
that everything crosses the security

679
00:22:13,280 --> 00:22:15,039
trust boundary is safe

680
00:22:15,039 --> 00:22:16,960
and then a catch-all because stuff just

681
00:22:16,960 --> 00:22:19,200
never works out

682
00:22:19,200 --> 00:22:20,159
um

683
00:22:20,159 --> 00:22:21,440
so how do we use cornucopia as an

684
00:22:21,440 --> 00:22:23,919
educative tooler well we play the game

685
00:22:23,919 --> 00:22:26,320
um actually a security person what you

686
00:22:26,320 --> 00:22:28,400
do is you teach developers the game and

687
00:22:28,400 --> 00:22:30,240
you give them the materials that come

688
00:22:30,240 --> 00:22:32,799
with the game and then let them play

689
00:22:32,799 --> 00:22:34,720
otherwise it's a little bit like

690
00:22:34,720 --> 00:22:37,039
playing cards against humanity

691
00:22:37,039 --> 00:22:39,440
with your parents

692
00:22:39,440 --> 00:22:41,360
um

693
00:22:41,360 --> 00:22:43,520
to cover off the do threat modeling part

694
00:22:43,520 --> 00:22:45,120
of things from a compliance perspective

695
00:22:45,120 --> 00:22:47,440
you tag your stories and ethics in jira

696
00:22:47,440 --> 00:22:49,679
you scan in your school sheet

697
00:22:49,679 --> 00:22:51,280
and that gives you uh something to show

698
00:22:51,280 --> 00:22:53,919
the auditors to to feel fuzzy about

699
00:22:53,919 --> 00:22:55,200
while you know that things are being

700
00:22:55,200 --> 00:22:57,919
done the right way

701
00:23:00,400 --> 00:23:02,240
but how do you level up from that

702
00:23:02,240 --> 00:23:04,320
um well there are two possibilities and

703
00:23:04,320 --> 00:23:05,679
this is where most the work is still

704
00:23:05,679 --> 00:23:06,720
happening

705
00:23:06,720 --> 00:23:08,880
to begin with uh wanting to make secure

706
00:23:08,880 --> 00:23:10,000
software development a skill that

707
00:23:10,000 --> 00:23:11,600
developers can gain while learning to

708
00:23:11,600 --> 00:23:13,280
code or learning the right coding

709
00:23:13,280 --> 00:23:14,640
practice

710
00:23:14,640 --> 00:23:16,880
most of us start coding very early so

711
00:23:16,880 --> 00:23:18,480
maybe it's not

712
00:23:18,480 --> 00:23:20,320
while you're learning to code

713
00:23:20,320 --> 00:23:22,000
so we're targeting tertiary education

714
00:23:22,000 --> 00:23:23,520
firstly with an eye to develop skills

715
00:23:23,520 --> 00:23:24,799
into modules and then stack those

716
00:23:24,799 --> 00:23:26,640
modules up to cover the whole of build a

717
00:23:26,640 --> 00:23:29,120
secure thing space

718
00:23:29,120 --> 00:23:32,640
basically uh the asvs is oh wasps answer

719
00:23:32,640 --> 00:23:34,320
to the question what is the standard

720
00:23:34,320 --> 00:23:36,480
against which software can be measured

721
00:23:36,480 --> 00:23:38,080
for security

722
00:23:38,080 --> 00:23:40,400
because it is a standard and as a

723
00:23:40,400 --> 00:23:41,840
standard it has had to get through a lot

724
00:23:41,840 --> 00:23:43,600
of rigor and scrutiny

725
00:23:43,600 --> 00:23:45,440
although perhaps not

726
00:23:45,440 --> 00:23:47,520
never more so than when toby and i

727
00:23:47,520 --> 00:23:49,039
decided it would be a good basis for the

728
00:23:49,039 --> 00:23:51,039
curriculum

729
00:23:51,039 --> 00:23:52,080
um

730
00:23:52,080 --> 00:23:53,679
the thousand-foot view of the avs in

731
00:23:53,679 --> 00:23:55,279
case you've never heard of it there will

732
00:23:55,279 --> 00:23:56,880
be a presentation on it

733
00:23:56,880 --> 00:23:57,919
today

734
00:23:57,919 --> 00:23:58,880
but the first thing you need to know

735
00:23:58,880 --> 00:24:00,159
about the asus is that it's split into

736
00:24:00,159 --> 00:24:02,159
three levels

737
00:24:02,159 --> 00:24:05,120
each application uh each is applicable

738
00:24:05,120 --> 00:24:06,799
to a different type of app

739
00:24:06,799 --> 00:24:09,200
level one uh should be used on all apps

740
00:24:09,200 --> 00:24:11,039
and it can be tested for using gas tools

741
00:24:11,039 --> 00:24:12,159
alone

742
00:24:12,159 --> 00:24:13,840
zap's a great way to test past test

743
00:24:13,840 --> 00:24:15,120
level one

744
00:24:15,120 --> 00:24:17,120
every app should try and get tested to

745
00:24:17,120 --> 00:24:18,559
level two

746
00:24:18,559 --> 00:24:19,919
but if you go beyond one then you need

747
00:24:19,919 --> 00:24:22,080
to look at code and code review and code

748
00:24:22,080 --> 00:24:24,400
designs to do full testing

749
00:24:24,400 --> 00:24:26,240
level three is for apps that are serious

750
00:24:26,240 --> 00:24:29,279
about security and if you if you manage

751
00:24:29,279 --> 00:24:30,720
special categories of data or if you

752
00:24:30,720 --> 00:24:32,320
connect to systems that do like bank

753
00:24:32,320 --> 00:24:34,640
accounts patient records then you should

754
00:24:34,640 --> 00:24:36,720
be looking here

755
00:24:36,720 --> 00:24:38,880
there's also technically a level zero

756
00:24:38,880 --> 00:24:40,559
which is what any application assessed

757
00:24:40,559 --> 00:24:41,679
that didn't meet the requirements

758
00:24:41,679 --> 00:24:44,000
release level one is tagged as being

759
00:24:44,000 --> 00:24:45,840
if you do use level zero in your

760
00:24:45,840 --> 00:24:46,960
organization you probably want to

761
00:24:46,960 --> 00:24:49,440
document what a pass at level

762
00:24:49,440 --> 00:24:52,640
zero means um or just

763
00:24:52,640 --> 00:24:53,919
realize that it means it's been tested

764
00:24:53,919 --> 00:24:56,480
but didn't pass

765
00:24:56,480 --> 00:24:58,720
the areas for uh learning in the ats

766
00:24:58,720 --> 00:25:00,720
cover everything from architecture which

767
00:25:00,720 --> 00:25:02,960
is not tested in level one through to

768
00:25:02,960 --> 00:25:04,799
details about configuration which were

769
00:25:04,799 --> 00:25:06,960
very tested in level one

770
00:25:06,960 --> 00:25:08,080
and it includes the domains from

771
00:25:08,080 --> 00:25:10,000
cornucopia earlier so authentication

772
00:25:10,000 --> 00:25:12,159
access control authorization

773
00:25:12,159 --> 00:25:13,360
session management validation and

774
00:25:13,360 --> 00:25:14,720
cryptography

775
00:25:14,720 --> 00:25:16,799
to assess at level three though is to

776
00:25:16,799 --> 00:25:17,880
cover off

777
00:25:17,880 --> 00:25:21,679
286 requirements

778
00:25:22,080 --> 00:25:23,200
so how do we break this down for

779
00:25:23,200 --> 00:25:24,559
teaching

780
00:25:24,559 --> 00:25:26,000
well we break down all the airspace

781
00:25:26,000 --> 00:25:29,360
requirements into actions and into terms

782
00:25:29,360 --> 00:25:31,600
we group the terms into units and weigh

783
00:25:31,600 --> 00:25:33,279
the actions described against bloom's

784
00:25:33,279 --> 00:25:35,919
taxonomy

785
00:25:37,360 --> 00:25:40,000
now blue's taxonomy or more accurately

786
00:25:40,000 --> 00:25:42,559
the cognitive knowledge domain of that

787
00:25:42,559 --> 00:25:44,559
taxonomy describes six levels of

788
00:25:44,559 --> 00:25:47,279
learning from remember through to create

789
00:25:47,279 --> 00:25:49,120
um it's a standard applied by educators

790
00:25:49,120 --> 00:25:50,799
around the world and being hierarchical

791
00:25:50,799 --> 00:25:53,200
in order to unders and to successfully

792
00:25:53,200 --> 00:25:55,279
understand we need to first remember

793
00:25:55,279 --> 00:25:57,200
to apply you need to remember and

794
00:25:57,200 --> 00:25:58,480
understand

795
00:25:58,480 --> 00:26:00,559
so remembering is retrieving recognizing

796
00:26:00,559 --> 00:26:02,000
recalling relevant knowledge long-term

797
00:26:02,000 --> 00:26:03,760
memory understanding

798
00:26:03,760 --> 00:26:04,559
there's

799
00:26:04,559 --> 00:26:06,720
details on each of them here

800
00:26:06,720 --> 00:26:07,840
well

801
00:26:07,840 --> 00:26:10,559
level six is technically possible we've

802
00:26:10,559 --> 00:26:12,480
not found cause for for it to be in the

803
00:26:12,480 --> 00:26:14,240
sc yet

804
00:26:14,240 --> 00:26:17,360
we've also yet to see

805
00:26:17,360 --> 00:26:20,080
a level two

806
00:26:22,720 --> 00:26:25,720
um

807
00:26:25,760 --> 00:26:29,440
the process is as follows

808
00:26:29,440 --> 00:26:31,520
we take a requirement from the acs like

809
00:26:31,520 --> 00:26:33,840
this one

810
00:26:33,840 --> 00:26:36,799
we identify the actions

811
00:26:36,799 --> 00:26:39,039
we then identify and collate the terms

812
00:26:39,039 --> 00:26:41,120
and we apply some magic to determine the

813
00:26:41,120 --> 00:26:42,799
bloom's level required to fill that

814
00:26:42,799 --> 00:26:44,400
requirement

815
00:26:44,400 --> 00:26:46,799
this results uh is as the basis of the

816
00:26:46,799 --> 00:26:48,640
curriculum what knowledge is required to

817
00:26:48,640 --> 00:26:50,080
build something that meets this

818
00:26:50,080 --> 00:26:51,679
requirement or to evaluate whether it

819
00:26:51,679 --> 00:26:54,000
does obviously the next steps here are

820
00:26:54,000 --> 00:26:56,320
to find information on each term

821
00:26:56,320 --> 00:26:58,080
or make a note to the standards also

822
00:26:58,080 --> 00:27:00,000
authors about the term

823
00:27:00,000 --> 00:27:00,880
or

824
00:27:00,880 --> 00:27:02,640
add a knowledge based article or some

825
00:27:02,640 --> 00:27:04,880
combination the above and then build

826
00:27:04,880 --> 00:27:06,640
teaching materials for those terms

827
00:27:06,640 --> 00:27:09,840
grouped by those units

828
00:27:11,440 --> 00:27:12,400
now

829
00:27:12,400 --> 00:27:14,159
when we covered off asps and tertiary

830
00:27:14,159 --> 00:27:16,640
section everything green there can and

831
00:27:16,640 --> 00:27:17,919
must also become available through

832
00:27:17,919 --> 00:27:19,840
industry training so imagine that all

833
00:27:19,840 --> 00:27:21,440
the previous work is also broken down

834
00:27:21,440 --> 00:27:24,000
into parts that can be consumed in one

835
00:27:24,000 --> 00:27:27,200
two or five three four or five days

836
00:27:27,200 --> 00:27:28,559
uh in increments that are grouped

837
00:27:28,559 --> 00:27:31,679
together in a job-shaped course with

838
00:27:31,679 --> 00:27:33,760
related modules rather than units that

839
00:27:33,760 --> 00:27:35,440
were previously discussed to build up

840
00:27:35,440 --> 00:27:37,120
the whole structure all of this is still

841
00:27:37,120 --> 00:27:38,799
work in progress

842
00:27:38,799 --> 00:27:39,840
in this section we're going to talk

843
00:27:39,840 --> 00:27:41,600
about awast sam

844
00:27:41,600 --> 00:27:43,760
where asps is about building a secure

845
00:27:43,760 --> 00:27:44,559
thing

846
00:27:44,559 --> 00:27:46,840
sam is about building a thing

847
00:27:46,840 --> 00:27:48,559
securely

848
00:27:48,559 --> 00:27:51,279
when it comes to telling folks

849
00:27:51,279 --> 00:27:53,840
how they should build software securely

850
00:27:53,840 --> 00:27:56,000
you need to be prescriptive

851
00:27:56,000 --> 00:27:58,480
which is one of the reasons that we've

852
00:27:58,480 --> 00:27:59,840
picked this

853
00:27:59,840 --> 00:28:02,240
sam over something else the other is of

854
00:28:02,240 --> 00:28:03,520
course that it's an oauth project and

855
00:28:03,520 --> 00:28:05,279
you may have noticed how much we like os

856
00:28:05,279 --> 00:28:06,960
projects

857
00:28:06,960 --> 00:28:10,000
now sam is made up of

858
00:28:10,000 --> 00:28:12,240
five business functions uh with each

859
00:28:12,240 --> 00:28:14,000
business function having a being a

860
00:28:14,000 --> 00:28:15,039
category of activities that

861
00:28:15,039 --> 00:28:16,960
organizations developing software must

862
00:28:16,960 --> 00:28:18,640
somehow perform

863
00:28:18,640 --> 00:28:19,760
each has

864
00:28:19,760 --> 00:28:21,840
three related security practices which

865
00:28:21,840 --> 00:28:23,120
are grouped

866
00:28:23,120 --> 00:28:24,960
grouped security related activities to

867
00:28:24,960 --> 00:28:26,720
support them

868
00:28:26,720 --> 00:28:28,480
security practices each have six

869
00:28:28,480 --> 00:28:30,240
activities grouped in logical flows

870
00:28:30,240 --> 00:28:32,720
divided into two streams

871
00:28:32,720 --> 00:28:34,799
and then split across

872
00:28:34,799 --> 00:28:37,120
the three maturity levels giving us a

873
00:28:37,120 --> 00:28:40,240
total of 90 odd requirements

874
00:28:40,240 --> 00:28:41,840
streams cover different aspects of a

875
00:28:41,840 --> 00:28:43,679
practice and have their own objectives

876
00:28:43,679 --> 00:28:44,880
aligning and linking the activities in

877
00:28:44,880 --> 00:28:47,679
the practice over the different levels

878
00:28:47,679 --> 00:28:49,679
all of this there will be presentations

879
00:28:49,679 --> 00:28:52,399
on today as well please actually go and

880
00:28:52,399 --> 00:28:54,799
listen to them

881
00:28:54,799 --> 00:28:56,399
the learning universes in sam cover

882
00:28:56,399 --> 00:28:57,919
activities from overall governance and

883
00:28:57,919 --> 00:28:59,200
education

884
00:28:59,200 --> 00:29:01,919
okay that's a an idea

885
00:29:01,919 --> 00:29:03,600
uh all the way through to operational

886
00:29:03,600 --> 00:29:05,200
concerns like you know managing

887
00:29:05,200 --> 00:29:07,120
incidents

888
00:29:07,120 --> 00:29:09,039
as before with acs we take down take the

889
00:29:09,039 --> 00:29:10,320
activities and we break them into

890
00:29:10,320 --> 00:29:12,320
actions and we take those and break them

891
00:29:12,320 --> 00:29:13,679
into terms and then go through the

892
00:29:13,679 --> 00:29:15,200
weighing process

893
00:29:15,200 --> 00:29:17,279
there are fewer activities in sam

894
00:29:17,279 --> 00:29:19,279
then there are requirements in the acs

895
00:29:19,279 --> 00:29:22,080
which is yay that's good

896
00:29:22,080 --> 00:29:27,039
but the activities are more complex down

897
00:29:27,039 --> 00:29:29,120
we follow the same process before this

898
00:29:29,120 --> 00:29:31,279
time gathering the actions from a given

899
00:29:31,279 --> 00:29:33,679
function slash practice stream and a

900
00:29:33,679 --> 00:29:35,520
given maturity level

901
00:29:35,520 --> 00:29:37,840
we then group the actions and modules

902
00:29:37,840 --> 00:29:41,840
and then the risk is identical

903
00:29:45,600 --> 00:29:46,960
so how do we apply this training in

904
00:29:46,960 --> 00:29:49,360
practice

905
00:29:50,640 --> 00:29:51,679
well

906
00:29:51,679 --> 00:29:53,440
foundations

907
00:29:53,440 --> 00:29:55,679
just go out and get it or have us come

908
00:29:55,679 --> 00:29:57,840
in and help to you to present it to your

909
00:29:57,840 --> 00:29:58,880
teams

910
00:29:58,880 --> 00:30:00,720
we make it really live

911
00:30:00,720 --> 00:30:02,159
we've got

912
00:30:02,159 --> 00:30:03,840
loads of success with it

913
00:30:03,840 --> 00:30:05,840
we make use of some cool tools that make

914
00:30:05,840 --> 00:30:08,640
it more interactive more fun um

915
00:30:08,640 --> 00:30:11,440
intermediate training well use the game

916
00:30:11,440 --> 00:30:12,799
so play it

917
00:30:12,799 --> 00:30:14,399
with your teams reach out to us for a

918
00:30:14,399 --> 00:30:16,640
deck of cards or for b access to the

919
00:30:16,640 --> 00:30:18,559
free and open digital edition

920
00:30:18,559 --> 00:30:20,480
or have us come and play with your teams

921
00:30:20,480 --> 00:30:21,760
and teach them to play

922
00:30:21,760 --> 00:30:23,200
for you

923
00:30:23,200 --> 00:30:25,039
tertiary education and industry training

924
00:30:25,039 --> 00:30:27,120
is still a work in progress

925
00:30:27,120 --> 00:30:28,960
we've built parts of the whole we're

926
00:30:28,960 --> 00:30:30,799
able to present them to your teams but

927
00:30:30,799 --> 00:30:32,000
that's not the point the point is for

928
00:30:32,000 --> 00:30:33,039
this to become a standard and for

929
00:30:33,039 --> 00:30:34,640
everyone to have access to all of it

930
00:30:34,640 --> 00:30:36,000
we'll continue to build out what's there

931
00:30:36,000 --> 00:30:38,320
until that is the case

932
00:30:38,320 --> 00:30:40,799
so what does the future hold

933
00:30:40,799 --> 00:30:43,039
well help us to complete the mappings

934
00:30:43,039 --> 00:30:44,559
and to work on building modules and

935
00:30:44,559 --> 00:30:46,240
units and then creating slideshows and

936
00:30:46,240 --> 00:30:47,600
speaker nights

937
00:30:47,600 --> 00:30:50,080
uh sponsored the project like hmrc has

938
00:30:50,080 --> 00:30:52,159
by engaging with us or through the os

939
00:30:52,159 --> 00:30:54,799
grants process that's listed here

940
00:30:54,799 --> 00:30:56,559
there are really two organizations that

941
00:30:56,559 --> 00:30:58,399
are keen to get involved in this and i

942
00:30:58,399 --> 00:30:59,519
hope to be working with them over the

943
00:30:59,519 --> 00:31:01,039
course the next couple of months to to

944
00:31:01,039 --> 00:31:05,320
get the next pieces out there

945
00:31:06,640 --> 00:31:08,640
give us your feedback my email address

946
00:31:08,640 --> 00:31:10,880
is there along with my twitter

947
00:31:10,880 --> 00:31:13,440
and i'm here on slack as well

948
00:31:13,440 --> 00:31:14,960
so reach out to me on slack and chat to

949
00:31:14,960 --> 00:31:17,360
me there

950
00:31:17,440 --> 00:31:19,840
thank you very much i hope that this

951
00:31:19,840 --> 00:31:21,600
i know it was incredibly fast but i hope

952
00:31:21,600 --> 00:31:23,120
this was uh

953
00:31:23,120 --> 00:31:26,479
was a useful session for you

