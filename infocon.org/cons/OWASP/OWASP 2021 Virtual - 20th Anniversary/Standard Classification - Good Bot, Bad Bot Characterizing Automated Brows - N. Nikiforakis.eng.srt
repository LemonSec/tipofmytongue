1
00:00:01,340 --> 00:00:06,030
[Music]

2
00:00:07,759 --> 00:00:10,080
so let me let me proceed

3
00:00:10,080 --> 00:00:12,880
with a little bit of background so like

4
00:00:12,880 --> 00:00:14,799
martin said i'm an associate professor

5
00:00:14,799 --> 00:00:16,720
at stony brook university in long island

6
00:00:16,720 --> 00:00:17,680
new york

7
00:00:17,680 --> 00:00:19,199
i work on

8
00:00:19,199 --> 00:00:21,359
a number of research areas all related

9
00:00:21,359 --> 00:00:24,480
to the web so i work on online tracking

10
00:00:24,480 --> 00:00:26,720
and i have a talk later today

11
00:00:26,720 --> 00:00:28,480
related to online tracking which i hope

12
00:00:28,480 --> 00:00:30,400
you can attend uh

13
00:00:30,400 --> 00:00:32,640
we work on dna security with my students

14
00:00:32,640 --> 00:00:34,239
um we work on web application

15
00:00:34,239 --> 00:00:35,680
fingerprinting so effectively

16
00:00:35,680 --> 00:00:37,840
understanding how applications can be

17
00:00:37,840 --> 00:00:40,000
fingerprinted online and who does it and

18
00:00:40,000 --> 00:00:41,440
how can we defend against it if it's

19
00:00:41,440 --> 00:00:43,760
unwanted uh mobile browser security so

20
00:00:43,760 --> 00:00:46,399
how do browsers on your phone

21
00:00:46,399 --> 00:00:48,239
behave differently than browsers on your

22
00:00:48,239 --> 00:00:50,160
laptop or desktop computers

23
00:00:50,160 --> 00:00:52,239
uh attack service reduction so web

24
00:00:52,239 --> 00:00:54,079
applications like all other software is

25
00:00:54,079 --> 00:00:56,399
going larger and larger so how can we

26
00:00:56,399 --> 00:00:58,800
actually shrink it so that we keep all

27
00:00:58,800 --> 00:01:00,239
the features that we want and get rid of

28
00:01:00,239 --> 00:01:01,680
all the features that we don't want

29
00:01:01,680 --> 00:01:03,280
including the vulnerabilities and the

30
00:01:03,280 --> 00:01:04,959
features that we don't want

31
00:01:04,959 --> 00:01:06,799
and then honeypot some deception so how

32
00:01:06,799 --> 00:01:08,159
can we use honeypot technology to

33
00:01:08,159 --> 00:01:09,760
protect what's to to increase web

34
00:01:09,760 --> 00:01:10,960
security

35
00:01:10,960 --> 00:01:12,640
and antibody technologies right so how

36
00:01:12,640 --> 00:01:15,520
can we differentiate between benign

37
00:01:15,520 --> 00:01:17,840
regular users on your web application

38
00:01:17,840 --> 00:01:20,640
versus a b9 and versus a malicious one

39
00:01:20,640 --> 00:01:24,000
all right so um

40
00:01:24,000 --> 00:01:27,119
uh as you may know um there is actually

41
00:01:27,119 --> 00:01:28,799
quite a bit of traffic on the web that

42
00:01:28,799 --> 00:01:32,079
is bot related so uh if you see here

43
00:01:32,079 --> 00:01:34,799
um on this slide according to this

44
00:01:34,799 --> 00:01:36,240
antibod company

45
00:01:36,240 --> 00:01:37,920
less than 60 percent

46
00:01:37,920 --> 00:01:39,520
of the

47
00:01:39,520 --> 00:01:42,159
traffic online is human related so the

48
00:01:42,159 --> 00:01:44,399
rest is all bot related so

49
00:01:44,399 --> 00:01:46,240
let's let's get on the same page

50
00:01:46,240 --> 00:01:47,920
regarding what is a bot right so web

51
00:01:47,920 --> 00:01:50,320
bots are effectively just programs that

52
00:01:50,320 --> 00:01:52,640
people have written that can act as a

53
00:01:52,640 --> 00:01:54,240
user in terms of browsing fetching

54
00:01:54,240 --> 00:01:55,200
websites

55
00:01:55,200 --> 00:01:56,880
fetching websites fetching resources

56
00:01:56,880 --> 00:01:58,799
navigating to different places

57
00:01:58,799 --> 00:02:01,520
uh and so we actually rely quite quite a

58
00:02:01,520 --> 00:02:04,000
bit on benign web bots right so whenever

59
00:02:04,000 --> 00:02:06,399
you use a search engine you're relying

60
00:02:06,399 --> 00:02:08,318
on that search engine having an army of

61
00:02:08,318 --> 00:02:10,080
web bots that constantly go on the

62
00:02:10,080 --> 00:02:11,280
internet

63
00:02:11,280 --> 00:02:13,520
crawl index so that they can give you

64
00:02:13,520 --> 00:02:14,800
the right results when you search for

65
00:02:14,800 --> 00:02:18,000
them when you paste a link on a social

66
00:02:18,000 --> 00:02:20,000
network nowadays you're likely going to

67
00:02:20,000 --> 00:02:22,000
get some sort of preview of that link

68
00:02:22,000 --> 00:02:24,239
and what that means is that a crawler

69
00:02:24,239 --> 00:02:26,480
just went out fetch that page and

70
00:02:26,480 --> 00:02:28,080
generate a preview so that you can see

71
00:02:28,080 --> 00:02:31,440
it um before you post it and your

72
00:02:31,440 --> 00:02:33,840
followers or your people on uh or your

73
00:02:33,840 --> 00:02:35,840
collaborators can see it when they when

74
00:02:35,840 --> 00:02:37,280
they receive your message

75
00:02:37,280 --> 00:02:38,800
uh and on the security perspective we

76
00:02:38,800 --> 00:02:41,040
also rely quite a bit on this for for

77
00:02:41,040 --> 00:02:42,800
detecting any sort of bad thing online

78
00:02:42,800 --> 00:02:45,040
right so phishing sites malware large

79
00:02:45,040 --> 00:02:47,519
security companies are again operating

80
00:02:47,519 --> 00:02:49,599
their own large armies of crawlers and

81
00:02:49,599 --> 00:02:50,720
bots

82
00:02:50,720 --> 00:02:52,720
that are going from website website and

83
00:02:52,720 --> 00:02:54,640
flagging things that look suspicious and

84
00:02:54,640 --> 00:02:56,160
then they end up in block lists and so

85
00:02:56,160 --> 00:02:58,400
on right but pretty much the same

86
00:02:58,400 --> 00:03:00,080
technologies and the same flexibility

87
00:03:00,080 --> 00:03:03,440
that makes benign bots so powerful can

88
00:03:03,440 --> 00:03:06,480
also be turned against uh against us and

89
00:03:06,480 --> 00:03:08,720
against the owners of web applications

90
00:03:08,720 --> 00:03:10,959
so we have armies of malicious bots that

91
00:03:10,959 --> 00:03:12,800
are constantly crawling the web

92
00:03:12,800 --> 00:03:15,760
searching for uh victims to abuse right

93
00:03:15,760 --> 00:03:17,599
and in terms of abuse we have quite a

94
00:03:17,599 --> 00:03:19,360
number of things so we have unwanted

95
00:03:19,360 --> 00:03:21,040
scraping so you can have bots that are

96
00:03:21,040 --> 00:03:23,760
scraping sites not to necessarily index

97
00:03:23,760 --> 00:03:26,000
them right but to steal information

98
00:03:26,000 --> 00:03:27,200
still their

99
00:03:27,200 --> 00:03:28,480
inventory

100
00:03:28,480 --> 00:03:30,319
their pricing right

101
00:03:30,319 --> 00:03:32,879
potentially set up copies clones of that

102
00:03:32,879 --> 00:03:34,319
sites and steal some traffic away from

103
00:03:34,319 --> 00:03:35,599
the original site

104
00:03:35,599 --> 00:03:37,280
uh we have bots that are brute forcing

105
00:03:37,280 --> 00:03:39,680
credentials so finding login forms and

106
00:03:39,680 --> 00:03:42,000
just hammering them with stolen

107
00:03:42,000 --> 00:03:44,239
credentials from other uh sites and from

108
00:03:44,239 --> 00:03:46,720
other compromises uh searching and

109
00:03:46,720 --> 00:03:48,640
stealing backup and configuration files

110
00:03:48,640 --> 00:03:51,120
so effectively finding files that the

111
00:03:51,120 --> 00:03:52,239
developer

112
00:03:52,239 --> 00:03:53,680
should not have left where they left

113
00:03:53,680 --> 00:03:54,480
them

114
00:03:54,480 --> 00:03:56,959
and finally discovering that a web

115
00:03:56,959 --> 00:03:58,400
application is vulnerable to something

116
00:03:58,400 --> 00:04:00,239
right and then the bot proceeding to

117
00:04:00,239 --> 00:04:02,080
exploit the vulnerability potentially

118
00:04:02,080 --> 00:04:04,640
uploading a back door and then the owner

119
00:04:04,640 --> 00:04:06,560
of that bot can

120
00:04:06,560 --> 00:04:08,400
use that

121
00:04:08,400 --> 00:04:10,560
that compromise box or can sell it to

122
00:04:10,560 --> 00:04:12,400
someone else who will then use it

123
00:04:12,400 --> 00:04:13,360
so

124
00:04:13,360 --> 00:04:15,360
let's try to differentiate between

125
00:04:15,360 --> 00:04:17,680
benign web bots and malicious web bots

126
00:04:17,680 --> 00:04:19,040
so benign web bots one of the

127
00:04:19,040 --> 00:04:20,399
characteristics is that they announce

128
00:04:20,399 --> 00:04:22,479
themselves right so if you get a benign

129
00:04:22,479 --> 00:04:24,880
bot on your web application and you look

130
00:04:24,880 --> 00:04:27,759
the user agent it will tell you hey uh

131
00:04:27,759 --> 00:04:30,639
you know i'm google bot or i am bing bot

132
00:04:30,639 --> 00:04:31,759
right

133
00:04:31,759 --> 00:04:33,040
and of course you know we understand

134
00:04:33,040 --> 00:04:34,720
that the user agent is something that is

135
00:04:34,720 --> 00:04:36,400
completely coming from the client side

136
00:04:36,400 --> 00:04:38,320
so an attacker can

137
00:04:38,320 --> 00:04:42,320
can quite equally claim to be um a

138
00:04:42,320 --> 00:04:44,560
google bot or a bing bot or a facebook

139
00:04:44,560 --> 00:04:46,560
bot right so that in itself is not

140
00:04:46,560 --> 00:04:48,400
enough for us to distinguish between

141
00:04:48,400 --> 00:04:52,560
benign and malicious uh bots however

142
00:04:52,560 --> 00:04:54,320
uh large companies what they do is that

143
00:04:54,320 --> 00:04:56,800
they actually announce their uh

144
00:04:56,800 --> 00:04:58,400
their subnets

145
00:04:58,400 --> 00:05:00,720
from which their crawlers operate uh so

146
00:05:00,720 --> 00:05:03,280
these are these are in well-defined uh

147
00:05:03,280 --> 00:05:05,919
ip ranges so you can actually look for

148
00:05:05,919 --> 00:05:07,440
every client that's coming to you and

149
00:05:07,440 --> 00:05:09,280
says i am a google bot i'm a bing bot i

150
00:05:09,280 --> 00:05:10,720
am something else

151
00:05:10,720 --> 00:05:13,120
again for a large enough company uh you

152
00:05:13,120 --> 00:05:14,800
can look up whether the ap address of

153
00:05:14,800 --> 00:05:16,560
that client is coming from an expected

154
00:05:16,560 --> 00:05:17,919
subject okay

155
00:05:17,919 --> 00:05:19,759
and if it doesn't it means that someone

156
00:05:19,759 --> 00:05:23,120
is most likely faking uh the user agent

157
00:05:23,120 --> 00:05:25,840
right and another uh

158
00:05:25,840 --> 00:05:28,080
complementary strategy is effectively a

159
00:05:28,080 --> 00:05:29,759
reverse dns where you take the ap

160
00:05:29,759 --> 00:05:31,520
address of someone claiming to be google

161
00:05:31,520 --> 00:05:33,520
bot or bing bot or something else you

162
00:05:33,520 --> 00:05:34,880
reverse the analysis and then you see

163
00:05:34,880 --> 00:05:38,720
whether the reverse dns domain now falls

164
00:05:38,720 --> 00:05:40,320
in the right

165
00:05:40,320 --> 00:05:41,680
label space

166
00:05:41,680 --> 00:05:43,039
as you would expect it so you can see on

167
00:05:43,039 --> 00:05:45,360
the bottom of the slide here we have two

168
00:05:45,360 --> 00:05:46,720
user agents

169
00:05:46,720 --> 00:05:48,240
excuse me we have two hosts that are

170
00:05:48,240 --> 00:05:50,639
both claiming to be google bot

171
00:05:50,639 --> 00:05:52,479
the top one when we reverse the an asset

172
00:05:52,479 --> 00:05:54,560
so we take the address from our logs and

173
00:05:54,560 --> 00:05:56,479
we reverse the an asset we will get

174
00:05:56,479 --> 00:05:58,880
something ending in googlebot.com and

175
00:05:58,880 --> 00:06:00,560
you can then look at google's

176
00:06:00,560 --> 00:06:03,039
documentation and discover that this is

177
00:06:03,039 --> 00:06:04,000
indeed

178
00:06:04,000 --> 00:06:06,319
appropriate okay but for the other one

179
00:06:06,319 --> 00:06:07,759
you can actually see that this is

180
00:06:07,759 --> 00:06:10,639
falling in some sort of residential isp

181
00:06:10,639 --> 00:06:13,199
uh network so highly highly unlikely of

182
00:06:13,199 --> 00:06:16,560
course that google is placing their um

183
00:06:16,560 --> 00:06:19,120
their bots in residential isps so this

184
00:06:19,120 --> 00:06:21,039
is clearly uh someone who's pretending

185
00:06:21,039 --> 00:06:22,400
to be googlebot

186
00:06:22,400 --> 00:06:24,560
trying to pretty much evade any blocking

187
00:06:24,560 --> 00:06:26,720
server side blocking because the idea is

188
00:06:26,720 --> 00:06:29,520
that websites will be very leery of

189
00:06:29,520 --> 00:06:30,880
blocking

190
00:06:30,880 --> 00:06:32,800
googlebots or you know bing bots or

191
00:06:32,800 --> 00:06:34,720
other bots so if you see googlebot or

192
00:06:34,720 --> 00:06:36,400
they'll just let you keep going as

193
00:06:36,400 --> 00:06:38,080
opposed to stopping you early if you're

194
00:06:38,080 --> 00:06:39,840
a user who's sending the same number of

195
00:06:39,840 --> 00:06:41,440
requests at the same frequency right so

196
00:06:41,440 --> 00:06:43,440
that's the idea so this is kind of

197
00:06:43,440 --> 00:06:45,199
straightforward right if a malicious web

198
00:06:45,199 --> 00:06:46,240
bot

199
00:06:46,240 --> 00:06:48,800
is trying to pretend to be a benign web

200
00:06:48,800 --> 00:06:49,520
but

201
00:06:49,520 --> 00:06:51,919
we have ways of

202
00:06:51,919 --> 00:06:53,520
differentiating that at least for the

203
00:06:53,520 --> 00:06:55,199
large companies

204
00:06:55,199 --> 00:06:56,720
the second strategy is a little bit more

205
00:06:56,720 --> 00:06:58,400
complicated right so here you have a

206
00:06:58,400 --> 00:07:00,240
malicious bot that is pretending to be a

207
00:07:00,240 --> 00:07:02,880
regular user right so again the bot now

208
00:07:02,880 --> 00:07:04,880
instead of changing the user agent of

209
00:07:04,880 --> 00:07:08,080
its program to uh bing bot now it will

210
00:07:08,080 --> 00:07:09,440
say that it is the latest version of

211
00:07:09,440 --> 00:07:11,440
mozilla firefox or the latest version of

212
00:07:11,440 --> 00:07:13,919
you know uh brave right um so

213
00:07:13,919 --> 00:07:16,080
effectively the attackers have a number

214
00:07:16,080 --> 00:07:17,599
of things available to them all of them

215
00:07:17,599 --> 00:07:19,520
controlled at the client side right so

216
00:07:19,520 --> 00:07:21,280
they can spoof user agents

217
00:07:21,280 --> 00:07:23,199
uh to be whatever they want it to be

218
00:07:23,199 --> 00:07:25,360
they can simulate user actions by crawl

219
00:07:25,360 --> 00:07:27,440
by scrolling by tapping by clicking

220
00:07:27,440 --> 00:07:28,400
right

221
00:07:28,400 --> 00:07:30,000
they can go low and slow they don't have

222
00:07:30,000 --> 00:07:31,520
to hammer your server with thousands of

223
00:07:31,520 --> 00:07:33,039
requests at once

224
00:07:33,039 --> 00:07:35,440
and they can use proxy servers to locate

225
00:07:35,440 --> 00:07:37,280
themselves uh from wherever it is that

226
00:07:37,280 --> 00:07:38,960
you're expecting traffic so i could very

227
00:07:38,960 --> 00:07:41,840
well be operating my malicious bots

228
00:07:41,840 --> 00:07:43,919
at the public cloud but i can buy

229
00:07:43,919 --> 00:07:45,919
residential proxy access from various

230
00:07:45,919 --> 00:07:47,599
companies and now appear to you as if

231
00:07:47,599 --> 00:07:50,560
i'm coming from a typical isp network

232
00:07:50,560 --> 00:07:52,560
all right so

233
00:07:52,560 --> 00:07:53,360
the

234
00:07:53,360 --> 00:07:55,840
uh the defenses of this uh how do we

235
00:07:55,840 --> 00:07:57,599
actually find these bots that do this is

236
00:07:57,599 --> 00:07:59,599
quite more open-ended right so we can

237
00:07:59,599 --> 00:08:02,000
use a normal detection so we can look at

238
00:08:02,000 --> 00:08:03,680
the timing of requests and say okay this

239
00:08:03,680 --> 00:08:04,639
user

240
00:08:04,639 --> 00:08:06,720
who claims to be a user is moving too

241
00:08:06,720 --> 00:08:10,000
fast through my site right um

242
00:08:10,000 --> 00:08:12,720
and we can sort of decide that this is

243
00:08:12,720 --> 00:08:14,800
some sort of anomaly and we can

244
00:08:14,800 --> 00:08:16,400
choose to take some actions against this

245
00:08:16,400 --> 00:08:18,879
specific ip address right uh we have the

246
00:08:18,879 --> 00:08:21,919
types of requests so a common um

247
00:08:21,919 --> 00:08:22,879
um

248
00:08:22,879 --> 00:08:26,319
pattern of uh some types of bots that is

249
00:08:26,319 --> 00:08:27,199
that they're trying to be more

250
00:08:27,199 --> 00:08:29,199
lightweight so they will

251
00:08:29,199 --> 00:08:32,320
excuse me um they will not load images

252
00:08:32,320 --> 00:08:34,479
or css files or javascript because they

253
00:08:34,479 --> 00:08:35,839
don't really need it right they just

254
00:08:35,839 --> 00:08:37,599
want to scrape you uh and they want to

255
00:08:37,599 --> 00:08:39,599
go from page to page so if you actually

256
00:08:39,599 --> 00:08:42,479
see a chunk of the requests that should

257
00:08:42,479 --> 00:08:44,399
be there on your server not being there

258
00:08:44,399 --> 00:08:46,320
then you can again deduce that something

259
00:08:46,320 --> 00:08:48,480
fish is going on right and so we can

260
00:08:48,480 --> 00:08:49,760
then say okay when we're a little bit

261
00:08:49,760 --> 00:08:51,279
suspicious let's throw a captcha at

262
00:08:51,279 --> 00:08:53,120
someone but of course you understand

263
00:08:53,120 --> 00:08:55,200
that uh you cannot overdo this right so

264
00:08:55,200 --> 00:08:58,000
you cannot be exposing 90 of your users

265
00:08:58,000 --> 00:09:00,399
to captchas right uh because you're

266
00:09:00,399 --> 00:09:02,560
suspicious so this will

267
00:09:02,560 --> 00:09:04,399
typically websites particularly the ones

268
00:09:04,399 --> 00:09:06,399
that are afraid of losing the users the

269
00:09:06,399 --> 00:09:08,320
user is about to purchase something they

270
00:09:08,320 --> 00:09:10,399
will err on the side of caution and let

271
00:09:10,399 --> 00:09:12,000
more bots go through rather than have

272
00:09:12,000 --> 00:09:14,800
more users click through caches right uh

273
00:09:14,800 --> 00:09:15,920
and

274
00:09:15,920 --> 00:09:17,040
the rest is open ended pretty much

275
00:09:17,040 --> 00:09:18,560
that's what we'll talk about today and

276
00:09:18,560 --> 00:09:19,760
you can see here an example in this

277
00:09:19,760 --> 00:09:21,279
picture

278
00:09:21,279 --> 00:09:23,360
from earlier this year so i have three

279
00:09:23,360 --> 00:09:25,600
visitors on my personal site that they

280
00:09:25,600 --> 00:09:28,160
claim to be

281
00:09:28,160 --> 00:09:29,839
a recent version of chrome running on

282
00:09:29,839 --> 00:09:32,320
windows 10 okay so far so good but if

283
00:09:32,320 --> 00:09:35,200
you look at the

284
00:09:35,360 --> 00:09:36,720
screen resolution you will see that this

285
00:09:36,720 --> 00:09:38,880
is an 800 by 600 right so this is

286
00:09:38,880 --> 00:09:40,560
clearly highly unlikely right that you

287
00:09:40,560 --> 00:09:42,560
have a 2021 machine running the most

288
00:09:42,560 --> 00:09:43,920
recent version of

289
00:09:43,920 --> 00:09:45,920
chrome and windows but it's operating a

290
00:09:45,920 --> 00:09:48,320
resolution that is from 15 or 20 years

291
00:09:48,320 --> 00:09:50,880
ago so this you can see that

292
00:09:50,880 --> 00:09:53,120
an attacker here has tried to hide

293
00:09:53,120 --> 00:09:55,360
certain parts of himself but hasn't done

294
00:09:55,360 --> 00:09:56,880
so comprehensively

295
00:09:56,880 --> 00:09:58,720
so this brings us a little bit now to

296
00:09:58,720 --> 00:10:00,399
the problem that we're trying to solve

297
00:10:00,399 --> 00:10:02,640
so we are interested in building systems

298
00:10:02,640 --> 00:10:04,560
for detecting malicious spots right but

299
00:10:04,560 --> 00:10:06,240
in order to train the systems in order

300
00:10:06,240 --> 00:10:08,399
to evaluate the systems we actually need

301
00:10:08,399 --> 00:10:10,399
data sets of malicious spots right so we

302
00:10:10,399 --> 00:10:12,240
can actually say okay look we can detect

303
00:10:12,240 --> 00:10:14,560
our known bots right but of course in

304
00:10:14,560 --> 00:10:16,480
order to to procure data sets of

305
00:10:16,480 --> 00:10:18,320
malicious bots you need systems for

306
00:10:18,320 --> 00:10:19,680
malicious spots right so you have the

307
00:10:19,680 --> 00:10:21,920
circular dependency that we somehow need

308
00:10:21,920 --> 00:10:24,160
to break right and

309
00:10:24,160 --> 00:10:26,160
in academia at least a lot of what a lot

310
00:10:26,160 --> 00:10:27,200
of

311
00:10:27,200 --> 00:10:28,640
my colleagues did in the past is that

312
00:10:28,640 --> 00:10:30,880
they looked at the web server logs that

313
00:10:30,880 --> 00:10:32,399
they had access to and they just

314
00:10:32,399 --> 00:10:33,600
manually went through them and i said

315
00:10:33,600 --> 00:10:35,040
okay this is a bot this is not about

316
00:10:35,040 --> 00:10:37,040
this is a good bot this is a bad bot but

317
00:10:37,040 --> 00:10:38,399
of course you can understand that this

318
00:10:38,399 --> 00:10:41,360
is highly highly uh error-prone right so

319
00:10:41,360 --> 00:10:43,279
the question that we set out to answer

320
00:10:43,279 --> 00:10:46,560
is can we actually curate a bot only

321
00:10:46,560 --> 00:10:47,680
data set

322
00:10:47,680 --> 00:10:48,880
that doesn't rely on us being

323
00:10:48,880 --> 00:10:50,640
particularly good in labeling and

324
00:10:50,640 --> 00:10:52,880
differentiating right between benign

325
00:10:52,880 --> 00:10:55,680
users and malicious or b9 bots so we

326
00:10:55,680 --> 00:10:58,240
want to for this dataset to allow us to

327
00:10:58,240 --> 00:11:00,160
as i mentioned differentiate between

328
00:11:00,160 --> 00:11:02,399
good bots and bad bots uh we want to

329
00:11:02,399 --> 00:11:04,079
understand the activities of bad bots so

330
00:11:04,079 --> 00:11:06,240
what is it that they do when they attack

331
00:11:06,240 --> 00:11:08,320
your website we want to be able to

332
00:11:08,320 --> 00:11:10,399
actually see to uncover the real

333
00:11:10,399 --> 00:11:13,120
identity so i see that that bodies come

334
00:11:13,120 --> 00:11:14,240
to my website it's claiming to be

335
00:11:14,240 --> 00:11:16,560
mozilla firefox but what is it really

336
00:11:16,560 --> 00:11:19,920
right and then a map and study uh trends

337
00:11:19,920 --> 00:11:22,720
of bot activity over time so

338
00:11:22,720 --> 00:11:24,720
we set out and we built this uh system

339
00:11:24,720 --> 00:11:26,880
that we call aristeas

340
00:11:26,880 --> 00:11:28,399
and aristeas

341
00:11:28,399 --> 00:11:31,920
is a minor uh god in greek mythology who

342
00:11:31,920 --> 00:11:34,560
was the protector of beekeepers and so

343
00:11:34,560 --> 00:11:36,399
our system is pretty much relying on

344
00:11:36,399 --> 00:11:37,920
this idea of using deception for

345
00:11:37,920 --> 00:11:40,880
security uh and specifically the system

346
00:11:40,880 --> 00:11:44,079
is providing a flexible deployment and

347
00:11:44,079 --> 00:11:46,160
management of honey sites so what are

348
00:11:46,160 --> 00:11:48,880
honey sites homicides are fully

349
00:11:48,880 --> 00:11:51,440
functional well obligations that we have

350
00:11:51,440 --> 00:11:53,200
augmented with state-of-the-art

351
00:11:53,200 --> 00:11:55,200
fingerprinting techniques and they only

352
00:11:55,200 --> 00:11:57,200
exist in order to be attacked right so

353
00:11:57,200 --> 00:11:58,880
these are real websites they are really

354
00:11:58,880 --> 00:12:00,800
running on real web servers with real

355
00:12:00,800 --> 00:12:02,800
web application engines but they don't

356
00:12:02,800 --> 00:12:04,720
have any benign users right or they're

357
00:12:04,720 --> 00:12:07,200
not supposed to okay and so we deploy

358
00:12:07,200 --> 00:12:08,880
these uh honey sites and of course i'll

359
00:12:08,880 --> 00:12:10,639
give you much more information

360
00:12:10,639 --> 00:12:13,279
and then we have centralized server that

361
00:12:13,279 --> 00:12:15,519
pulls logs from these every single day

362
00:12:15,519 --> 00:12:16,880
and then we can study these logs and

363
00:12:16,880 --> 00:12:18,480
understand what it is that's happening

364
00:12:18,480 --> 00:12:20,959
and because these right are not meant to

365
00:12:20,959 --> 00:12:22,880
be used by anyone these are created for

366
00:12:22,880 --> 00:12:24,880
the sole purpose of this study it means

367
00:12:24,880 --> 00:12:26,560
that any activity that we see on these

368
00:12:26,560 --> 00:12:28,560
machines is bot related and now we just

369
00:12:28,560 --> 00:12:30,399
have to differentiate between benign bot

370
00:12:30,399 --> 00:12:33,279
related or malicious bot related

371
00:12:33,279 --> 00:12:34,880
so

372
00:12:34,880 --> 00:12:36,399
this is the overview of our system and

373
00:12:36,399 --> 00:12:38,079
i'll just highlight a few components and

374
00:12:38,079 --> 00:12:39,279
i'll tell you how you can read more

375
00:12:39,279 --> 00:12:41,120
about the system at the end of this so

376
00:12:41,120 --> 00:12:43,760
we can talk about the control center so

377
00:12:43,760 --> 00:12:45,279
the first question is what applications

378
00:12:45,279 --> 00:12:47,360
do we deploy if we have you know

379
00:12:47,360 --> 00:12:49,839
ultimate freedom what applications would

380
00:12:49,839 --> 00:12:52,000
would be the best bait for attackers and

381
00:12:52,000 --> 00:12:53,920
so our reasoning was that we want to

382
00:12:53,920 --> 00:12:55,519
deploy web applications that have been

383
00:12:55,519 --> 00:12:58,240
around for a long time so wordpress

384
00:12:58,240 --> 00:13:00,560
joomla drupal ps1 admin and webmin these

385
00:13:00,560 --> 00:13:02,399
are the ones we selected and these have

386
00:13:02,399 --> 00:13:04,560
certain specific characteristics the

387
00:13:04,560 --> 00:13:06,240
first one is that in addition to being

388
00:13:06,240 --> 00:13:08,399
around for a long time uh they have been

389
00:13:08,399 --> 00:13:10,240
quite vulnerable for a long time right a

390
00:13:10,240 --> 00:13:12,000
software that's been around for 10 or 20

391
00:13:12,000 --> 00:13:14,720
years has had tens if not hundreds of

392
00:13:14,720 --> 00:13:17,120
historical vulnerabilities so if you put

393
00:13:17,120 --> 00:13:20,000
such an application online we know or we

394
00:13:20,000 --> 00:13:23,920
suspect that bots will have uh ex an

395
00:13:23,920 --> 00:13:25,440
arsenal of exploits for them and they

396
00:13:25,440 --> 00:13:27,760
will try to fire them against them right

397
00:13:27,760 --> 00:13:29,680
uh and we know that they're very popular

398
00:13:29,680 --> 00:13:31,600
so an attacker will have all the reasons

399
00:13:31,600 --> 00:13:32,959
in the world to actually go through the

400
00:13:32,959 --> 00:13:34,720
process of building a bot

401
00:13:34,720 --> 00:13:36,079
to attack those specific web

402
00:13:36,079 --> 00:13:37,519
applications right

403
00:13:37,519 --> 00:13:39,519
and finally in terms of types

404
00:13:39,519 --> 00:13:42,079
we're using both cms's as well as system

405
00:13:42,079 --> 00:13:44,320
administration tools again offering the

406
00:13:44,320 --> 00:13:46,959
promise of stealing user data from cms's

407
00:13:46,959 --> 00:13:48,720
but also getting some form of remote

408
00:13:48,720 --> 00:13:50,959
code execution uh through the system

409
00:13:50,959 --> 00:13:54,320
administration tools right so then we

410
00:13:54,320 --> 00:13:55,920
use fingerprinting and in case you're

411
00:13:55,920 --> 00:13:57,680
not familiar browser fingerprinting has

412
00:13:57,680 --> 00:13:58,720
been

413
00:13:58,720 --> 00:14:00,560
let's say in the news for uh for more

414
00:14:00,560 --> 00:14:02,639
than 10 years and the general idea is

415
00:14:02,639 --> 00:14:05,360
that you can extract attributes from a

416
00:14:05,360 --> 00:14:08,399
users or from let's say web clients uh

417
00:14:08,399 --> 00:14:09,839
browsing environment

418
00:14:09,839 --> 00:14:11,360
and once you combine all of these

419
00:14:11,360 --> 00:14:13,279
attributes together you actually

420
00:14:13,279 --> 00:14:15,600
get something that's fairly unique right

421
00:14:15,600 --> 00:14:17,839
so if i'm able to read the list of fonts

422
00:14:17,839 --> 00:14:19,519
from your browser read your screen

423
00:14:19,519 --> 00:14:20,720
resolution

424
00:14:20,720 --> 00:14:24,880
um render a complex uh 3d image

425
00:14:24,880 --> 00:14:26,720
in a canvas element and read that back

426
00:14:26,720 --> 00:14:28,480
as a series of bytes so if i just

427
00:14:28,480 --> 00:14:30,959
combine all of this together uh i will

428
00:14:30,959 --> 00:14:32,720
get something that is quite unique to

429
00:14:32,720 --> 00:14:34,399
you right it's not shared by anyone else

430
00:14:34,399 --> 00:14:36,240
and of course as you can see the the

431
00:14:36,240 --> 00:14:38,160
original problem with this was that uh

432
00:14:38,160 --> 00:14:39,839
this can be used for tracking right so i

433
00:14:39,839 --> 00:14:41,519
can track you now through fingerprinting

434
00:14:41,519 --> 00:14:43,519
without actually worrying about if you

435
00:14:43,519 --> 00:14:45,040
deleted your cookies or if you're going

436
00:14:45,040 --> 00:14:46,880
in and out of a private mode of your

437
00:14:46,880 --> 00:14:49,440
browser right and so academics had shown

438
00:14:49,440 --> 00:14:53,279
uh back in 2011 or 2012 i believe that

439
00:14:53,279 --> 00:14:54,800
once you actually

440
00:14:54,800 --> 00:14:56,639
are able to extract the list of funds

441
00:14:56,639 --> 00:14:59,199
you have quite high uniqueness among the

442
00:14:59,199 --> 00:15:01,519
users who are being fingerprinted

443
00:15:01,519 --> 00:15:03,120
and so what we did

444
00:15:03,120 --> 00:15:05,839
is we actually modified a popular open

445
00:15:05,839 --> 00:15:07,760
source fingerprinting library called

446
00:15:07,760 --> 00:15:09,519
fpgas2

447
00:15:09,519 --> 00:15:12,480
and we made it more modular so that we

448
00:15:12,480 --> 00:15:14,720
could account for partial support of

449
00:15:14,720 --> 00:15:15,920
javascript right because we don't

450
00:15:15,920 --> 00:15:17,680
necessarily expect the bots running full

451
00:15:17,680 --> 00:15:19,839
javascript engines maybe they run a best

452
00:15:19,839 --> 00:15:21,519
effort engine so we want to make sure

453
00:15:21,519 --> 00:15:22,959
that this can run for as much as

454
00:15:22,959 --> 00:15:24,959
possible before it breaks so we can if

455
00:15:24,959 --> 00:15:26,720
we can't get a full fingerprint we may

456
00:15:26,720 --> 00:15:29,680
be able to get a partial thing right um

457
00:15:29,680 --> 00:15:31,839
and so once we get a client on our one

458
00:15:31,839 --> 00:15:33,440
of our honey sites then we can actually

459
00:15:33,440 --> 00:15:35,440
proceed to fingerprint them so we can do

460
00:15:35,440 --> 00:15:37,519
javascript api support right so just

461
00:15:37,519 --> 00:15:38,800
test whether they're actually

462
00:15:38,800 --> 00:15:40,560
implementing any javascript right

463
00:15:40,560 --> 00:15:41,600
proceed to use the browser

464
00:15:41,600 --> 00:15:43,120
fingerprinting that i mentioned and then

465
00:15:43,120 --> 00:15:44,880
finally this is a very cool idea that i

466
00:15:44,880 --> 00:15:46,800
believe we were the first to try we

467
00:15:46,800 --> 00:15:48,480
tested for the support of security

468
00:15:48,480 --> 00:15:50,880
policies and the idea is that if you're

469
00:15:50,880 --> 00:15:52,560
getting a most recent version of firefox

470
00:15:52,560 --> 00:15:54,079
in the most recent version of chrome

471
00:15:54,079 --> 00:15:56,399
these are well capable for example of

472
00:15:56,399 --> 00:15:59,519
enforcing csp right so if you have a csp

473
00:15:59,519 --> 00:16:01,839
policy and you're observing that you try

474
00:16:01,839 --> 00:16:04,560
to violate it on purpose and you observe

475
00:16:04,560 --> 00:16:06,000
that the current client allows you to

476
00:16:06,000 --> 00:16:07,199
violate it

477
00:16:07,199 --> 00:16:08,480
that means that clearly that client is

478
00:16:08,480 --> 00:16:10,959
not enforcing that csv policy and if it

479
00:16:10,959 --> 00:16:12,560
can't be that it's the most recent

480
00:16:12,560 --> 00:16:14,399
version of a popular browser therefore

481
00:16:14,399 --> 00:16:16,079
someone is just faking the user agent

482
00:16:16,079 --> 00:16:18,480
right and the final one which is perhaps

483
00:16:18,480 --> 00:16:20,639
the one that i am the most proud of with

484
00:16:20,639 --> 00:16:22,800
my students of course is that we can

485
00:16:22,800 --> 00:16:25,120
actually fingerprint the tls handshake

486
00:16:25,120 --> 00:16:27,040
part of the communication so whenever a

487
00:16:27,040 --> 00:16:28,399
client connects to one of our honey

488
00:16:28,399 --> 00:16:29,600
sites

489
00:16:29,600 --> 00:16:30,800
they offer

490
00:16:30,800 --> 00:16:32,079
a list of

491
00:16:32,079 --> 00:16:33,839
cryptographic parameters and in these

492
00:16:33,839 --> 00:16:35,279
cryptographic parameters among others

493
00:16:35,279 --> 00:16:37,120
they offer cipher lists so these are the

494
00:16:37,120 --> 00:16:39,519
lists the list of cipher suites

495
00:16:39,519 --> 00:16:41,519
that uh that the current client can

496
00:16:41,519 --> 00:16:43,680
support and so from that list

497
00:16:43,680 --> 00:16:46,160
the server picks one that is the best

498
00:16:46,160 --> 00:16:47,920
one according to the server

499
00:16:47,920 --> 00:16:49,440
and what's interesting of course is that

500
00:16:49,440 --> 00:16:50,720
different

501
00:16:50,720 --> 00:16:54,399
client-side tls stacks support different

502
00:16:54,399 --> 00:16:56,160
cipher suites and different tls

503
00:16:56,160 --> 00:16:58,480
initialization parameters so the

504
00:16:58,480 --> 00:17:00,160
fingerprint effectively the cipher the

505
00:17:00,160 --> 00:17:01,360
cipher list

506
00:17:01,360 --> 00:17:03,279
that you will extract from a curl or

507
00:17:03,279 --> 00:17:05,839
wget is very very different than the

508
00:17:05,839 --> 00:17:07,280
list that you will extract from mozilla

509
00:17:07,280 --> 00:17:09,199
firebox or google chrome and so we use

510
00:17:09,199 --> 00:17:12,240
pretty much exactly that to take

511
00:17:12,240 --> 00:17:14,240
pop the fingerprints of popular browsers

512
00:17:14,240 --> 00:17:16,079
and popular tools and be able to

513
00:17:16,079 --> 00:17:18,319
differentiate among them so you can see

514
00:17:18,319 --> 00:17:20,480
here that for instance chrome and

515
00:17:20,480 --> 00:17:23,439
chromium-based browser support certain

516
00:17:23,439 --> 00:17:25,599
extensions of tls such as grease that

517
00:17:25,599 --> 00:17:27,599
other browsers do not support and as i

518
00:17:27,599 --> 00:17:29,760
mentioned command line tools have very

519
00:17:29,760 --> 00:17:32,160
different support for cypher suites than

520
00:17:32,160 --> 00:17:33,679
popular browsers

521
00:17:33,679 --> 00:17:35,600
so if you look here at the bottom we can

522
00:17:35,600 --> 00:17:38,000
have a very simple client written in go

523
00:17:38,000 --> 00:17:40,480
and we can have the fingerprint

524
00:17:40,480 --> 00:17:43,280
of that client that we extract

525
00:17:43,280 --> 00:17:45,679
from the very first uh request that

526
00:17:45,679 --> 00:17:47,200
they're sending us right so this is even

527
00:17:47,200 --> 00:17:48,960
before we start speaking http to that

528
00:17:48,960 --> 00:17:51,280
client we can already extract forensic

529
00:17:51,280 --> 00:17:53,600
information that we can then use

530
00:17:53,600 --> 00:17:55,840
on the fly potentially to say that okay

531
00:17:55,840 --> 00:17:58,400
this is not who it pretends to be right

532
00:17:58,400 --> 00:18:00,320
so now let's talk about how we deploy

533
00:18:00,320 --> 00:18:02,880
these honey sites online um so what we

534
00:18:02,880 --> 00:18:04,480
did is we actually registered 100

535
00:18:04,480 --> 00:18:06,240
domains and we made sure that these

536
00:18:06,240 --> 00:18:08,400
domains never existed before because we

537
00:18:08,400 --> 00:18:10,640
wanted to make sure that we're not

538
00:18:10,640 --> 00:18:12,240
getting traffic because of residual

539
00:18:12,240 --> 00:18:14,480
trust effects which is a different kind

540
00:18:14,480 --> 00:18:16,480
of worms we're getting traffic because

541
00:18:16,480 --> 00:18:18,240
someone somehow has discovered our

542
00:18:18,240 --> 00:18:19,840
servers and our domains

543
00:18:19,840 --> 00:18:21,919
so we spawn a server for each such

544
00:18:21,919 --> 00:18:24,160
domain using aws we place them around

545
00:18:24,160 --> 00:18:26,320
the world and we get tls certificates

546
00:18:26,320 --> 00:18:29,120
for them again to ensure that we can

547
00:18:29,120 --> 00:18:31,360
support as many clients as possible and

548
00:18:31,360 --> 00:18:32,799
we effectively

549
00:18:32,799 --> 00:18:34,320
record everything and anything to this

550
00:18:34,320 --> 00:18:36,480
infrastructure for seven months right

551
00:18:36,480 --> 00:18:38,720
and so at the very high level what we

552
00:18:38,720 --> 00:18:40,720
get in these seven months we what we got

553
00:18:40,720 --> 00:18:44,559
rather is 26.4 million requests and 200

554
00:18:44,559 --> 00:18:46,559
gigabytes of recorded traffic and i want

555
00:18:46,559 --> 00:18:48,720
to again mention that these are sites

556
00:18:48,720 --> 00:18:50,400
that should be getting zero traffic

557
00:18:50,400 --> 00:18:52,640
right because we ne they have no real

558
00:18:52,640 --> 00:18:54,640
clients we never told anyone about these

559
00:18:54,640 --> 00:18:57,360
domains they just exist and because they

560
00:18:57,360 --> 00:18:59,600
just exist right they are actually

561
00:18:59,600 --> 00:19:01,360
getting so much traffic in the grand

562
00:19:01,360 --> 00:19:03,200
scheme of things so the first thing we

563
00:19:03,200 --> 00:19:04,559
did is we actually wanted to understand

564
00:19:04,559 --> 00:19:07,520
whether uh traffic and uh the id

565
00:19:07,520 --> 00:19:09,919
addresses of clients taper down and we

566
00:19:09,919 --> 00:19:11,600
discovered that no they don't right so

567
00:19:11,600 --> 00:19:13,360
if you look at the top of this graph

568
00:19:13,360 --> 00:19:15,520
we actually reach a steady state of new

569
00:19:15,520 --> 00:19:17,039
ip addresses

570
00:19:17,039 --> 00:19:18,720
connecting to our honey slides each and

571
00:19:18,720 --> 00:19:20,880
every day so it's not like we're going

572
00:19:20,880 --> 00:19:22,720
to get less and less over time we're

573
00:19:22,720 --> 00:19:25,120
actually getting a stable number of ip

574
00:19:25,120 --> 00:19:27,360
addresses that are hitting our servers

575
00:19:27,360 --> 00:19:29,440
and in terms of requests we're actually

576
00:19:29,440 --> 00:19:31,280
ramping up if you see at the bottom of

577
00:19:31,280 --> 00:19:33,679
this graph rather than ramping down

578
00:19:33,679 --> 00:19:35,280
and this again has to do with pretty

579
00:19:35,280 --> 00:19:36,559
much the attacks that we're attracting

580
00:19:36,559 --> 00:19:38,080
right so we're discovered one day by a

581
00:19:38,080 --> 00:19:39,679
given bot it searches if we're

582
00:19:39,679 --> 00:19:41,440
vulnerable to something it goes away

583
00:19:41,440 --> 00:19:43,120
then another day we're attacked by a

584
00:19:43,120 --> 00:19:44,400
brute force bot that will send a

585
00:19:44,400 --> 00:19:46,640
thousand requests our way and then we

586
00:19:46,640 --> 00:19:48,720
get a large spike of that day

587
00:19:48,720 --> 00:19:49,760
right

588
00:19:49,760 --> 00:19:51,760
in terms of discovery how is it again if

589
00:19:51,760 --> 00:19:53,440
we're not telling anyone that they're

590
00:19:53,440 --> 00:19:55,360
finding our honey servers or our honey

591
00:19:55,360 --> 00:19:56,320
sites

592
00:19:56,320 --> 00:19:59,840
and what we actually discovered was that

593
00:19:59,840 --> 00:20:01,760
about 74

594
00:20:01,760 --> 00:20:04,480
requested our pages either by directly

595
00:20:04,480 --> 00:20:05,600
connecting the address and saying

596
00:20:05,600 --> 00:20:06,559
nothing

597
00:20:06,559 --> 00:20:08,799
or pretty much just uh

598
00:20:08,799 --> 00:20:10,480
saying i'm trying to connect to the host

599
00:20:10,480 --> 00:20:12,720
that is the ap address so this could be

600
00:20:12,720 --> 00:20:14,799
a generic scanning online right that

601
00:20:14,799 --> 00:20:16,480
just hit our web server found the ap

602
00:20:16,480 --> 00:20:18,240
address and then just connected to it

603
00:20:18,240 --> 00:20:20,880
however for about 30

604
00:20:20,880 --> 00:20:22,000
we are getting clients who are

605
00:20:22,000 --> 00:20:24,080
explicitly asking for our domains and

606
00:20:24,080 --> 00:20:25,679
that is a question mark right how is it

607
00:20:25,679 --> 00:20:27,039
that someone is discovering your domain

608
00:20:27,039 --> 00:20:29,440
name and our based on our understanding

609
00:20:29,440 --> 00:20:31,120
of the world we have the certificate

610
00:20:31,120 --> 00:20:32,840
transparency mechanism

611
00:20:32,840 --> 00:20:34,880
that potentially malicious actors are

612
00:20:34,880 --> 00:20:35,919
monitoring

613
00:20:35,919 --> 00:20:37,600
and they're using it to discover new new

614
00:20:37,600 --> 00:20:38,880
targets

615
00:20:38,880 --> 00:20:40,240
we have zone files that are largely

616
00:20:40,240 --> 00:20:41,520
available to anyone who's interested in

617
00:20:41,520 --> 00:20:42,799
making an account

618
00:20:42,799 --> 00:20:44,400
and you have prior crawls that someone

619
00:20:44,400 --> 00:20:46,240
else called you at the time discover

620
00:20:46,240 --> 00:20:48,159
your domain name and then can attack you

621
00:20:48,159 --> 00:20:50,320
in the future based on that domain right

622
00:20:50,320 --> 00:20:52,400
so if we now look at the most popular

623
00:20:52,400 --> 00:20:53,919
targets of these bots these are the on

624
00:20:53,919 --> 00:20:56,559
the x-axis here on this graph

625
00:20:56,559 --> 00:20:58,080
and you can see that we have different

626
00:20:58,080 --> 00:20:59,600
behaviors so here at the bottom we have

627
00:20:59,600 --> 00:21:02,159
the most popular endpoints and on the

628
00:21:02,159 --> 00:21:04,080
y-axis we have the types of web

629
00:21:04,080 --> 00:21:05,919
applications so you can see a little bit

630
00:21:05,919 --> 00:21:07,919
of a different pattern of requests

631
00:21:07,919 --> 00:21:09,919
so there for example you can see that

632
00:21:09,919 --> 00:21:11,280
all the requests are concentrating

633
00:21:11,280 --> 00:21:13,280
towards a very specific web application

634
00:21:13,280 --> 00:21:14,400
right all the requests that are

635
00:21:14,400 --> 00:21:17,200
targeting wb admin i'll talk about this

636
00:21:17,200 --> 00:21:18,559
whereas in other cases we see a more

637
00:21:18,559 --> 00:21:21,039
uniform distribution where

638
00:21:21,039 --> 00:21:23,200
bots are just trying this url against

639
00:21:23,200 --> 00:21:24,559
all of the web applications that we have

640
00:21:24,559 --> 00:21:26,400
deployed and this is actually an uh

641
00:21:26,400 --> 00:21:28,000
server-side request forgery attack that

642
00:21:28,000 --> 00:21:29,679
these bots are trying to do based on

643
00:21:29,679 --> 00:21:31,440
specifics of the amazon of the amazon

644
00:21:31,440 --> 00:21:34,000
web services cloud

645
00:21:34,000 --> 00:21:36,320
so if we look at the earlier behavior

646
00:21:36,320 --> 00:21:38,559
right we see clear evidence of tailored

647
00:21:38,559 --> 00:21:40,480
attacks right you see that it's the

648
00:21:40,480 --> 00:21:42,080
wordpress sites that are getting the

649
00:21:42,080 --> 00:21:44,240
most hits for the wordpress endpoints

650
00:21:44,240 --> 00:21:45,760
and it's not everyone else so it's not

651
00:21:45,760 --> 00:21:48,000
like someone is just asking for wp admin

652
00:21:48,000 --> 00:21:49,919
from the internet they actually first

653
00:21:49,919 --> 00:21:52,080
figure out that you are a wordpress site

654
00:21:52,080 --> 00:21:54,240
and then they actually start attacking

655
00:21:54,240 --> 00:21:55,919
right and so what this suggests the

656
00:21:55,919 --> 00:21:58,080
implication of this is that if you don't

657
00:21:58,080 --> 00:22:00,240
run multiple types of applications you

658
00:22:00,240 --> 00:22:02,400
will likely have blind spots right you

659
00:22:02,400 --> 00:22:04,720
will not be able to see the traffic from

660
00:22:04,720 --> 00:22:06,559
bots that are targeting the web

661
00:22:06,559 --> 00:22:09,039
applications that you're missing right

662
00:22:09,039 --> 00:22:10,799
so now let me talk to talk to you about

663
00:22:10,799 --> 00:22:11,919
some things that we expected but it

664
00:22:11,919 --> 00:22:13,440
didn't turn out to be the way that we

665
00:22:13,440 --> 00:22:15,039
expected it to be right so we thought

666
00:22:15,039 --> 00:22:16,240
that oh we'll use javascript

667
00:22:16,240 --> 00:22:17,520
fingerprinting and we'll get all this

668
00:22:17,520 --> 00:22:19,200
information and the truth is that we

669
00:22:19,200 --> 00:22:21,919
didn't right so as you can see here

670
00:22:21,919 --> 00:22:24,720
0.63 of the sessions

671
00:22:24,720 --> 00:22:26,880
on our honey site supported javascript

672
00:22:26,880 --> 00:22:29,200
uh and fewer than those actually we were

673
00:22:29,200 --> 00:22:30,960
able to extract the full fingerprint

674
00:22:30,960 --> 00:22:32,880
from the client right so this really

675
00:22:32,880 --> 00:22:34,799
means that these tools are just not

676
00:22:34,799 --> 00:22:36,400
running javascript right they can claim

677
00:22:36,400 --> 00:22:38,159
to be who they want to be but they're

678
00:22:38,159 --> 00:22:39,600
actually not running any javascript at

679
00:22:39,600 --> 00:22:41,840
all the good thing about this is that

680
00:22:41,840 --> 00:22:43,520
you could add javascript as a test to

681
00:22:43,520 --> 00:22:44,960
your website if you're not running

682
00:22:44,960 --> 00:22:46,640
javascript you cannot proceed right and

683
00:22:46,640 --> 00:22:48,960
you will get rid of a large number of

684
00:22:48,960 --> 00:22:50,159
these generic

685
00:22:50,159 --> 00:22:52,320
attacking bots right of course you can

686
00:22:52,320 --> 00:22:54,159
have javascript based bots but you will

687
00:22:54,159 --> 00:22:55,760
get rid of a large chunk of the ones

688
00:22:55,760 --> 00:22:56,720
that are

689
00:22:56,720 --> 00:22:58,960
that are potential potentially attacking

690
00:22:58,960 --> 00:23:00,799
your website the second thing again that

691
00:23:00,799 --> 00:23:02,480
we expected by the internet to be that

692
00:23:02,480 --> 00:23:05,120
way was the honoring of robots.txt so

693
00:23:05,120 --> 00:23:07,360
like others we expected that

694
00:23:07,360 --> 00:23:10,320
um you would have uh

695
00:23:10,320 --> 00:23:12,080
malicious bots looking at robots of txt

696
00:23:12,080 --> 00:23:13,280
and going to places that they shouldn't

697
00:23:13,280 --> 00:23:14,320
go

698
00:23:14,320 --> 00:23:16,080
but that didn't turn out to be the case

699
00:23:16,080 --> 00:23:18,080
we didn't see a single request and we

700
00:23:18,080 --> 00:23:19,280
have certain theories about this but

701
00:23:19,280 --> 00:23:20,880
i'll keep them to myself for lack of

702
00:23:20,880 --> 00:23:23,039
time and then finally

703
00:23:23,039 --> 00:23:23,919
we

704
00:23:23,919 --> 00:23:25,440
looked at shared and distributed

705
00:23:25,440 --> 00:23:27,679
crawling so we had mechanisms to

706
00:23:27,679 --> 00:23:29,120
understand whether you have one ap

707
00:23:29,120 --> 00:23:30,480
address discovering links and then

708
00:23:30,480 --> 00:23:32,720
another pool of hosts crawling those

709
00:23:32,720 --> 00:23:34,720
links as opposed to one bot doing

710
00:23:34,720 --> 00:23:35,679
everything

711
00:23:35,679 --> 00:23:37,200
and so we discovered that this sort of

712
00:23:37,200 --> 00:23:40,240
distributed behavior is popular among

713
00:23:40,240 --> 00:23:42,240
benign bots such as google

714
00:23:42,240 --> 00:23:43,679
but we definitely didn't see any of this

715
00:23:43,679 --> 00:23:45,840
in malicious bots so the generic bots

716
00:23:45,840 --> 00:23:47,919
that attacked our honey sites they had

717
00:23:47,919 --> 00:23:49,600
no interest in doing any sort of

718
00:23:49,600 --> 00:23:51,600
distributed actions okay

719
00:23:51,600 --> 00:23:53,039
so

720
00:23:53,039 --> 00:23:55,440
uh if we talk about uh good bots and bad

721
00:23:55,440 --> 00:23:57,919
bots right uh we can

722
00:23:57,919 --> 00:23:59,360
try to differentiate between them and

723
00:23:59,360 --> 00:24:00,799
say okay if you're a benign but if we

724
00:24:00,799 --> 00:24:03,760
can validate your identity uh you uh if

725
00:24:03,760 --> 00:24:06,080
we can you know pin you back to a search

726
00:24:06,080 --> 00:24:07,919
engine or to security researchers or

727
00:24:07,919 --> 00:24:10,159
other companies and if you look at the

728
00:24:10,159 --> 00:24:12,000
table here at the top right

729
00:24:12,000 --> 00:24:13,200
um

730
00:24:13,200 --> 00:24:14,559
you will see that we were actually able

731
00:24:14,559 --> 00:24:17,120
to validate the large num

732
00:24:17,120 --> 00:24:18,480
the large majority

733
00:24:18,480 --> 00:24:20,799
of the popular search engine bots which

734
00:24:20,799 --> 00:24:23,200
again means that you have very little

735
00:24:23,200 --> 00:24:25,360
uh attacks very few attacks

736
00:24:25,360 --> 00:24:27,200
that change the user agent to pretend to

737
00:24:27,200 --> 00:24:29,760
be google bot right and most likely

738
00:24:29,760 --> 00:24:31,760
because of the easy method that i showed

739
00:24:31,760 --> 00:24:33,120
you the very beginning of this talk

740
00:24:33,120 --> 00:24:34,960
right in terms of my listeners requests

741
00:24:34,960 --> 00:24:37,200
you can see that the large chunk of

742
00:24:37,200 --> 00:24:39,200
requests that we got was malicious right

743
00:24:39,200 --> 00:24:40,960
they were sending unsolicited post

744
00:24:40,960 --> 00:24:42,720
requests towards authentication

745
00:24:42,720 --> 00:24:44,080
endpoints and they were sending other

746
00:24:44,080 --> 00:24:45,679
requests that were able to map to attack

747
00:24:45,679 --> 00:24:46,880
such as fingerprinting related

748
00:24:46,880 --> 00:24:48,720
vulnerabilities scanning related right

749
00:24:48,720 --> 00:24:51,600
brute forcing and so on uh and the other

750
00:24:51,600 --> 00:24:53,919
this large chunk that's gray are bots

751
00:24:53,919 --> 00:24:55,360
that we just couldn't tell you what they

752
00:24:55,360 --> 00:24:57,279
were right these were typically single

753
00:24:57,279 --> 00:24:58,720
shot scanners that's what we call them

754
00:24:58,720 --> 00:25:00,080
they come once to your website they ask

755
00:25:00,080 --> 00:25:02,240
for your page they go away we can trace

756
00:25:02,240 --> 00:25:05,120
it back to a benign entity that is well

757
00:25:05,120 --> 00:25:06,799
known but they also didn't perform any

758
00:25:06,799 --> 00:25:08,400
attacks while they were there so we

759
00:25:08,400 --> 00:25:10,000
don't know what we don't know that's the

760
00:25:10,000 --> 00:25:11,919
problem with that so

761
00:25:11,919 --> 00:25:12,799
let's talk a little bit about the

762
00:25:12,799 --> 00:25:15,120
specific attacks so 50

763
00:25:15,120 --> 00:25:16,720
of the total requests that we got were

764
00:25:16,720 --> 00:25:19,520
brute forcing related from 47 000 unique

765
00:25:19,520 --> 00:25:21,600
ap addresses uh they were trying all the

766
00:25:21,600 --> 00:25:23,039
common passers that you that you know

767
00:25:23,039 --> 00:25:25,360
already right and they also were trying

768
00:25:25,360 --> 00:25:26,880
the domain itself so if you have

769
00:25:26,880 --> 00:25:30,000
example.com you would have a bot trying

770
00:25:30,000 --> 00:25:32,480
to use example.com as a password okay

771
00:25:32,480 --> 00:25:35,840
what was interesting to us was that 99.6

772
00:25:35,840 --> 00:25:38,159
of the bots they issued fewer than 10

773
00:25:38,159 --> 00:25:40,320
attempts before stopping right and this

774
00:25:40,320 --> 00:25:41,919
means that they're really after the

775
00:25:41,919 --> 00:25:44,080
lowest hanging fruit possible so if your

776
00:25:44,080 --> 00:25:47,440
password is not in the worst possible

777
00:25:47,440 --> 00:25:49,600
list right the top 10 worst passwords

778
00:25:49,600 --> 00:25:51,039
you're likely going to survive this

779
00:25:51,039 --> 00:25:52,640
right and we had actually observed the

780
00:25:52,640 --> 00:25:55,200
same uh spray and pray behavior let's

781
00:25:55,200 --> 00:25:56,720
say

782
00:25:56,720 --> 00:25:58,640
against ssh honeypots that we deployed

783
00:25:58,640 --> 00:26:00,720
uh four years ago so then we saw

784
00:26:00,720 --> 00:26:02,159
reconnaissance so we saw that

785
00:26:02,159 --> 00:26:03,120
applications were actually

786
00:26:03,120 --> 00:26:05,279
fingerprinting excuse me clients were

787
00:26:05,279 --> 00:26:07,760
fingerprinting web applications so we

788
00:26:07,760 --> 00:26:09,440
matched requests against databases from

789
00:26:09,440 --> 00:26:11,360
what web and blind elephant and you can

790
00:26:11,360 --> 00:26:13,600
see here the popular path that they were

791
00:26:13,600 --> 00:26:15,600
asking and what it is that they were

792
00:26:15,600 --> 00:26:17,760
trying to fingerprint at those paths

793
00:26:17,760 --> 00:26:19,120
right so again this would be a

794
00:26:19,120 --> 00:26:20,960
reconnaissance step before an attack

795
00:26:20,960 --> 00:26:21,919
starts

796
00:26:21,919 --> 00:26:23,679
and then we saw straight up exploitation

797
00:26:23,679 --> 00:26:24,960
attempts

798
00:26:24,960 --> 00:26:28,080
with old and new cvs right uh and i will

799
00:26:28,080 --> 00:26:29,520
show you actually some very interesting

800
00:26:29,520 --> 00:26:31,120
explanation attempts in a couple of

801
00:26:31,120 --> 00:26:32,080
slides

802
00:26:32,080 --> 00:26:33,840
um

803
00:26:33,840 --> 00:26:35,440
we have reconnaissance that is not

804
00:26:35,440 --> 00:26:37,039
exploit related like i mentioned earlier

805
00:26:37,039 --> 00:26:38,480
you're searching for misconfigurations

806
00:26:38,480 --> 00:26:39,919
from developers so you're searching for

807
00:26:39,919 --> 00:26:41,279
backers you're searching for protected

808
00:26:41,279 --> 00:26:43,039
files and we saw

809
00:26:43,039 --> 00:26:46,240
quite a number of uh ip addresses that

810
00:26:46,240 --> 00:26:47,840
were explicitly searching for these

811
00:26:47,840 --> 00:26:50,400
files trying to effectively capitalize

812
00:26:50,400 --> 00:26:52,720
on developer error and we had a small

813
00:26:52,720 --> 00:26:54,880
number of bots 992

814
00:26:54,880 --> 00:26:57,520
uh 929 uh that were actually doing

815
00:26:57,520 --> 00:26:59,120
everything right so these were really

816
00:26:59,120 --> 00:27:00,960
full-fledged attack suits that would

817
00:27:00,960 --> 00:27:02,320
start from reconnaissance and would just

818
00:27:02,320 --> 00:27:03,840
work their way through all of the

819
00:27:03,840 --> 00:27:06,400
attacks that they were searching for um

820
00:27:06,400 --> 00:27:07,679
let me quickly tell you about tls

821
00:27:07,679 --> 00:27:09,600
fingerprinting that worked spectacularly

822
00:27:09,600 --> 00:27:11,279
well unlike javascript fingerprinting so

823
00:27:11,279 --> 00:27:13,600
we were able to actually boil down all

824
00:27:13,600 --> 00:27:16,559
the clients to 558 unique tls

825
00:27:16,559 --> 00:27:18,799
fingerprints and these were the real

826
00:27:18,799 --> 00:27:20,240
fingerprints right so you can see here

827
00:27:20,240 --> 00:27:22,480
we have tools that are built on go on on

828
00:27:22,480 --> 00:27:24,720
perl on python right

829
00:27:24,720 --> 00:27:26,080
regardless of what it is that they're

830
00:27:26,080 --> 00:27:28,559
stating in their user agents right and

831
00:27:28,559 --> 00:27:29,919
one statistic that was interesting for

832
00:27:29,919 --> 00:27:32,960
us was that 86 percent of the

833
00:27:32,960 --> 00:27:34,399
connections that are connecting to us

834
00:27:34,399 --> 00:27:36,320
and saying hey i'm firefox and chrome

835
00:27:36,320 --> 00:27:38,480
we're in fact fake right they were not

836
00:27:38,480 --> 00:27:40,399
any of these popular browsers they were

837
00:27:40,399 --> 00:27:42,000
just um

838
00:27:42,000 --> 00:27:43,679
these um

839
00:27:43,679 --> 00:27:46,320
any of these types of tools right um so

840
00:27:46,320 --> 00:27:48,640
in order to make sure i finish on time

841
00:27:48,640 --> 00:27:50,399
uh let me just tell you about this table

842
00:27:50,399 --> 00:27:51,919
here and then we'll just skip to the

843
00:27:51,919 --> 00:27:54,240
conclusion slide uh during our seven

844
00:27:54,240 --> 00:27:56,159
months there were five vulnerabilities

845
00:27:56,159 --> 00:27:58,880
that were newly discovered and publicly

846
00:27:58,880 --> 00:28:00,240
disclosed

847
00:28:00,240 --> 00:28:00,960
so

848
00:28:00,960 --> 00:28:02,640
we actually were able to discover how

849
00:28:02,640 --> 00:28:04,159
long it takes from publication of

850
00:28:04,159 --> 00:28:05,600
vulnerability to a opponent's

851
00:28:05,600 --> 00:28:07,600
weaponization vulnerability and you can

852
00:28:07,600 --> 00:28:09,200
see here the time and specifically for

853
00:28:09,200 --> 00:28:11,360
these two we saw requests against our

854
00:28:11,360 --> 00:28:13,520
honey sites that underwear on the same

855
00:28:13,520 --> 00:28:16,080
server on the same day excuse me as the

856
00:28:16,080 --> 00:28:16,960
uh

857
00:28:16,960 --> 00:28:18,960
as the vulnerabilities were announced so

858
00:28:18,960 --> 00:28:20,799
that means that we had pretty much zero

859
00:28:20,799 --> 00:28:22,240
days between the publication

860
00:28:22,240 --> 00:28:24,000
vulnerability and the very first attacks

861
00:28:24,000 --> 00:28:25,440
against them so i'll skip to the

862
00:28:25,440 --> 00:28:27,600
conclusion because i see martin here is

863
00:28:27,600 --> 00:28:29,360
giving me the look

864
00:28:29,360 --> 00:28:30,960
so

865
00:28:30,960 --> 00:28:32,559
as we're moving more and more software

866
00:28:32,559 --> 00:28:34,559
to the web right we are also moving

867
00:28:34,559 --> 00:28:36,480
attackers to the web who have armies and

868
00:28:36,480 --> 00:28:38,799
bots available to them and through this

869
00:28:38,799 --> 00:28:40,080
work we actually showed that through

870
00:28:40,080 --> 00:28:43,039
very modest uh costs you can build your

871
00:28:43,039 --> 00:28:45,039
own database of malicious bots and you

872
00:28:45,039 --> 00:28:46,559
can use this database to protect your

873
00:28:46,559 --> 00:28:48,240
real infrastructure

874
00:28:48,240 --> 00:28:49,919
you can find everything that i said plus

875
00:28:49,919 --> 00:28:51,840
a lot more on our paper that you can

876
00:28:51,840 --> 00:28:53,600
find online by just searching for the

877
00:28:53,600 --> 00:28:55,120
same title

878
00:28:55,120 --> 00:28:56,799
and that's the end of my talk so thank

879
00:28:56,799 --> 00:28:59,840
you very much

