1
00:00:01,410 --> 00:00:06,030
[Music]

2
00:00:07,839 --> 00:00:10,240
absolutely and thanks for the intro uh

3
00:00:10,240 --> 00:00:13,200
gabriel and uh it's a pleasure to to

4
00:00:13,200 --> 00:00:15,839
talk to everyone for the 20th

5
00:00:15,839 --> 00:00:18,000
anniversary of oas this is this is truly

6
00:00:18,000 --> 00:00:19,680
a historic moment

7
00:00:19,680 --> 00:00:20,960
so um

8
00:00:20,960 --> 00:00:22,640
patrick and i are going to cover uh

9
00:00:22,640 --> 00:00:26,240
cyclone dx which is a flagship owasp

10
00:00:26,240 --> 00:00:28,480
standard of targeting software builder

11
00:00:28,480 --> 00:00:30,560
materials so real quick before we get

12
00:00:30,560 --> 00:00:33,040
into the presentation a little bit about

13
00:00:33,040 --> 00:00:34,640
myself and then patrick will introduce

14
00:00:34,640 --> 00:00:37,040
his self uh as gabriel mentioned i'm the

15
00:00:37,040 --> 00:00:38,879
leader of the dependency track project

16
00:00:38,879 --> 00:00:42,559
it analyzes s-bombs um i'm the co-lead

17
00:00:42,559 --> 00:00:44,640
and chair of the cyclone dx core working

18
00:00:44,640 --> 00:00:47,520
group and i do a lot of other things in

19
00:00:47,520 --> 00:00:49,600
the software supply chain um when i'm

20
00:00:49,600 --> 00:00:51,199
not contributing to the open source

21
00:00:51,199 --> 00:00:53,440
world or the security space i actually

22
00:00:53,440 --> 00:00:55,600
get paid to do software security

23
00:00:55,600 --> 00:00:57,840
architecture at servicenow where i i

24
00:00:57,840 --> 00:01:00,079
work with about 4 000 or so developers

25
00:01:00,079 --> 00:01:02,079
trying to get them to you know build

26
00:01:02,079 --> 00:01:03,760
secure more secure and resilient

27
00:01:03,760 --> 00:01:06,240
software so it's it's always a pleasure

28
00:01:06,240 --> 00:01:08,320
talking with uh and doing presentations

29
00:01:08,320 --> 00:01:10,799
with patrick because we literally live

30
00:01:10,799 --> 00:01:12,880
on opposite ends of the world so i'm

31
00:01:12,880 --> 00:01:14,799
coming to you from chicago illinois in

32
00:01:14,799 --> 00:01:17,280
the united states and uh patrick is down

33
00:01:17,280 --> 00:01:21,040
under in the land of oz so patrick

34
00:01:21,439 --> 00:01:24,000
yeah hi everyone uh yeah so my name is

35
00:01:24,000 --> 00:01:26,799
patrick i'm co-lead cycle ndx project

36
00:01:26,799 --> 00:01:28,000
with steve

37
00:01:28,000 --> 00:01:30,240
uh participate in a lot of the same uh

38
00:01:30,240 --> 00:01:32,720
software transparency working groups

39
00:01:32,720 --> 00:01:34,159
and related

40
00:01:34,159 --> 00:01:37,360
uh efforts um yeah day job software

41
00:01:37,360 --> 00:01:38,479
development lead for a government

42
00:01:38,479 --> 00:01:41,680
organisation down here and open source

43
00:01:41,680 --> 00:01:43,280
software maintainer of a bunch of

44
00:01:43,280 --> 00:01:45,360
different things

45
00:01:45,360 --> 00:01:48,960
i'll let uh steve kick on

46
00:01:49,040 --> 00:01:51,600
very good thanks patrick um so what

47
00:01:51,600 --> 00:01:53,439
we're going to be talking about today

48
00:01:53,439 --> 00:01:56,799
are s-bombs and for for just to give a

49
00:01:56,799 --> 00:01:58,799
high-level background of what we're

50
00:01:58,799 --> 00:01:59,920
trying to

51
00:01:59,920 --> 00:02:02,479
talk about is uh let's look at it an

52
00:02:02,479 --> 00:02:05,280
analogy an analogy would in this case is

53
00:02:05,280 --> 00:02:08,560
a list of ingredients on the back of a

54
00:02:08,560 --> 00:02:11,440
an energy bar so

55
00:02:11,440 --> 00:02:13,920
this is elementary right this is just a

56
00:02:13,920 --> 00:02:17,440
list of of what that energy bar contains

57
00:02:17,440 --> 00:02:20,239
which is you know interesting but if i

58
00:02:20,239 --> 00:02:22,879
wanted to make risk-based decisions

59
00:02:22,879 --> 00:02:24,720
this might be something that i care

60
00:02:24,720 --> 00:02:25,680
about

61
00:02:25,680 --> 00:02:27,280
i might have allergies to different

62
00:02:27,280 --> 00:02:29,280
kinds of nuts or i might have allergies

63
00:02:29,280 --> 00:02:30,000
to

64
00:02:30,000 --> 00:02:31,760
to lactose

65
00:02:31,760 --> 00:02:35,280
this helps me as an individual as a

66
00:02:35,280 --> 00:02:37,680
potential purchaser of this energy bar

67
00:02:37,680 --> 00:02:40,080
to make better risk-based decisions and

68
00:02:40,080 --> 00:02:42,640
unfortunately we don't have that same

69
00:02:42,640 --> 00:02:45,360
type of of of capability

70
00:02:45,360 --> 00:02:47,519
really widely spread in the software

71
00:02:47,519 --> 00:02:49,040
world which is really what software

72
00:02:49,040 --> 00:02:52,959
billing materials are are are for

73
00:02:52,959 --> 00:02:54,640
and there's a really a lot of

74
00:02:54,640 --> 00:02:57,760
interesting contributing factors on on

75
00:02:57,760 --> 00:03:01,280
why there's this increased awareness and

76
00:03:01,280 --> 00:03:04,400
increased rush to make software

77
00:03:04,400 --> 00:03:06,000
transparency

78
00:03:06,000 --> 00:03:08,720
much more in the in the mainstream

79
00:03:08,720 --> 00:03:10,480
um if you look at some of these

80
00:03:10,480 --> 00:03:12,319
statistics from and these are these are

81
00:03:12,319 --> 00:03:15,120
all from sona types uh 2021 state of the

82
00:03:15,120 --> 00:03:17,680
software supply chain uh paper that

83
00:03:17,680 --> 00:03:19,680
recently came out but there's some

84
00:03:19,680 --> 00:03:22,560
really interesting uh data points here

85
00:03:22,560 --> 00:03:25,040
on the left here we see that 73 percent

86
00:03:25,040 --> 00:03:27,120
year-over-year growth just in the

87
00:03:27,120 --> 00:03:29,440
consumption of in using these open

88
00:03:29,440 --> 00:03:30,799
source components

89
00:03:30,799 --> 00:03:32,879
that's pretty impressive of oven by

90
00:03:32,879 --> 00:03:36,239
itself but even more concerning

91
00:03:36,239 --> 00:03:38,480
is the the year-over-year increase in

92
00:03:38,480 --> 00:03:40,959
the attack on the supply software supply

93
00:03:40,959 --> 00:03:42,560
chain itself which

94
00:03:42,560 --> 00:03:44,959
um you know we can we can go on a

95
00:03:44,959 --> 00:03:47,519
timeline and start naming the these big

96
00:03:47,519 --> 00:03:48,959
company names i'm not going to shame

97
00:03:48,959 --> 00:03:52,080
anybody it's just the reality of

98
00:03:52,080 --> 00:03:53,760
of the software supply chain it's

99
00:03:53,760 --> 00:03:56,480
complex it there's a lot of moving parts

100
00:03:56,480 --> 00:03:58,640
and our adversaries know that and they

101
00:03:58,640 --> 00:04:01,040
are actively targeting it

102
00:04:01,040 --> 00:04:02,799
but there are some other contributing

103
00:04:02,799 --> 00:04:05,760
factors on why software transparency and

104
00:04:05,760 --> 00:04:08,720
specifically why s-bombs as a vehicle

105
00:04:08,720 --> 00:04:10,879
for that transparency are gaining

106
00:04:10,879 --> 00:04:12,239
momentum

107
00:04:12,239 --> 00:04:14,560
number one is is just better software

108
00:04:14,560 --> 00:04:17,199
supply just supply chain management uh

109
00:04:17,199 --> 00:04:18,880
there's some very basic deming

110
00:04:18,880 --> 00:04:21,519
principles at play here which are using

111
00:04:21,519 --> 00:04:23,919
fewer and better suppliers using the

112
00:04:23,919 --> 00:04:25,440
highest quality parts from those

113
00:04:25,440 --> 00:04:27,520
suppliers and tracking our parts

114
00:04:27,520 --> 00:04:29,600
throughout their entire life cycle

115
00:04:29,600 --> 00:04:31,759
there's market forces at play here being

116
00:04:31,759 --> 00:04:34,320
able to measure the maturity of a

117
00:04:34,320 --> 00:04:35,759
development organization whether it's

118
00:04:35,759 --> 00:04:38,160
your own organization or maybe it's a

119
00:04:38,160 --> 00:04:40,000
vendor who might you be procuring

120
00:04:40,000 --> 00:04:41,919
software from or maybe instead of

121
00:04:41,919 --> 00:04:43,360
procuring software maybe you're

122
00:04:43,360 --> 00:04:46,800
interested in buying a company itself

123
00:04:46,800 --> 00:04:49,360
if we know what components are in are in

124
00:04:49,360 --> 00:04:51,440
our environment we can also start

125
00:04:51,440 --> 00:04:54,400
reducing the operational cost of

126
00:04:54,400 --> 00:04:55,600
managing all these components for

127
00:04:55,600 --> 00:04:58,240
example if i have 16 different xml

128
00:04:58,240 --> 00:05:00,720
parsers and 30 different logging

129
00:05:00,720 --> 00:05:02,720
frameworks well that's probably

130
00:05:02,720 --> 00:05:05,440
unnecessary and i can likely greatly

131
00:05:05,440 --> 00:05:08,240
reduce my cost if i whittle that down to

132
00:05:08,240 --> 00:05:11,199
three or four different libraries right

133
00:05:11,199 --> 00:05:13,280
impact analysis being able to know for

134
00:05:13,280 --> 00:05:16,240
example am i affected and where using an

135
00:05:16,240 --> 00:05:18,080
s-pom to determine

136
00:05:18,080 --> 00:05:20,000
what inventory

137
00:05:20,000 --> 00:05:22,160
is present in all these different assets

138
00:05:22,160 --> 00:05:23,680
in my environment

139
00:05:23,680 --> 00:05:25,360
and then of course there's regulations

140
00:05:25,360 --> 00:05:26,080
so

141
00:05:26,080 --> 00:05:28,479
most recently the the u.s executive

142
00:05:28,479 --> 00:05:30,880
order 14028

143
00:05:30,880 --> 00:05:33,600
that requires s-bombs for any

144
00:05:33,600 --> 00:05:36,800
purchase by the by the us government

145
00:05:36,800 --> 00:05:38,479
there's other regulations in place uh

146
00:05:38,479 --> 00:05:41,039
the fda has a bunch of pre-market uh

147
00:05:41,039 --> 00:05:43,039
requirements uh for software billing

148
00:05:43,039 --> 00:05:44,320
materials and there's critical

149
00:05:44,320 --> 00:05:46,080
infrastructure for example i literally

150
00:05:46,080 --> 00:05:48,400
just did a uh a presentation for the

151
00:05:48,400 --> 00:05:51,120
energy uh industry earlier this week and

152
00:05:51,120 --> 00:05:52,880
there's other critical infrastructure

153
00:05:52,880 --> 00:05:55,919
type things ongoing as well so there's a

154
00:05:55,919 --> 00:05:56,880
really

155
00:05:56,880 --> 00:05:58,479
interesting list of critical our

156
00:05:58,479 --> 00:06:01,680
contributing factors here

157
00:06:02,319 --> 00:06:04,479
yeah and when we talk about software

158
00:06:04,479 --> 00:06:06,479
supply chain risk it's sort of one of

159
00:06:06,479 --> 00:06:08,000
these unwritten rules that you've got to

160
00:06:08,000 --> 00:06:10,639
include the sex kcd cartoon because it's

161
00:06:10,639 --> 00:06:12,160
so accurately

162
00:06:12,160 --> 00:06:13,520
conveys

163
00:06:13,520 --> 00:06:15,360
you know the way modern software is

164
00:06:15,360 --> 00:06:17,199
developed yeah it's built by a whole

165
00:06:17,199 --> 00:06:19,120
bunch of different components

166
00:06:19,120 --> 00:06:21,280
and invariably when you start looking

167
00:06:21,280 --> 00:06:22,639
under the covers

168
00:06:22,639 --> 00:06:24,160
at your direct dependencies and then

169
00:06:24,160 --> 00:06:25,840
your transitive dependencies you're

170
00:06:25,840 --> 00:06:28,319
going to find this little tiny component

171
00:06:28,319 --> 00:06:29,919
right down the bottom that's propping up

172
00:06:29,919 --> 00:06:32,319
your entire stack that represents a real

173
00:06:32,319 --> 00:06:33,280
risk

174
00:06:33,280 --> 00:06:35,199
to your organization

175
00:06:35,199 --> 00:06:36,639
so with that i'll let steve introduce

176
00:06:36,639 --> 00:06:38,720
cyclone dx

177
00:06:38,720 --> 00:06:40,960
very good and i would really hate to be

178
00:06:40,960 --> 00:06:42,639
this lonely guy and

179
00:06:42,639 --> 00:06:45,440
or a person in nebraska that's got to be

180
00:06:45,440 --> 00:06:47,360
just a thankless job

181
00:06:47,360 --> 00:06:50,160
but cyclone dx is as we mentioned is a

182
00:06:50,160 --> 00:06:52,319
flagship oas standard

183
00:06:52,319 --> 00:06:54,880
it is a lightweight s-bomb format it's

184
00:06:54,880 --> 00:06:58,240
designed by security people and security

185
00:06:58,240 --> 00:06:59,440
vendors

186
00:06:59,440 --> 00:07:01,360
for cyber security use cases and of

187
00:07:01,360 --> 00:07:02,880
course backed by the most trusted

188
00:07:02,880 --> 00:07:04,880
security foundation in the world which

189
00:07:04,880 --> 00:07:06,960
is owasp there's just a ton of

190
00:07:06,960 --> 00:07:08,960
credibility coming to the table here to

191
00:07:08,960 --> 00:07:11,440
to make this s-bomb standard a reality

192
00:07:11,440 --> 00:07:13,840
it was designed originally in 2017 the

193
00:07:13,840 --> 00:07:16,479
very first release was in 2018 and we've

194
00:07:16,479 --> 00:07:18,720
had yearly releases ever since we have a

195
00:07:18,720 --> 00:07:20,960
risk-based approach to standards

196
00:07:20,960 --> 00:07:23,520
development which is very unlike every

197
00:07:23,520 --> 00:07:25,199
other standard that's uh that you

198
00:07:25,199 --> 00:07:26,800
probably are aware of

199
00:07:26,800 --> 00:07:28,400
we're also

200
00:07:28,400 --> 00:07:32,000
very unusual for an oaas project um

201
00:07:32,000 --> 00:07:34,400
unlike most oaas projects we're kind of

202
00:07:34,400 --> 00:07:36,880
like this mini foundation without the

203
00:07:36,880 --> 00:07:39,360
legal entity of such we have our own

204
00:07:39,360 --> 00:07:41,919
governance um very similar to apache

205
00:07:41,919 --> 00:07:43,440
foundation we we operate as a

206
00:07:43,440 --> 00:07:46,400
meritocracy uh we have our own standards

207
00:07:46,400 --> 00:07:48,960
process uh we ever had we also have our

208
00:07:48,960 --> 00:07:50,479
our own working groups uh industry

209
00:07:50,479 --> 00:07:51,759
working group core working group

210
00:07:51,759 --> 00:07:55,120
maintainers etc um and we have a growing

211
00:07:55,120 --> 00:07:56,639
and and and

212
00:07:56,639 --> 00:07:58,080
wide suppress

213
00:07:58,080 --> 00:08:00,240
vendor support and tooling support it's

214
00:08:00,240 --> 00:08:02,400
it's a massive ecosystem that just keeps

215
00:08:02,400 --> 00:08:04,400
on getting better uh and larger over

216
00:08:04,400 --> 00:08:06,638
time

217
00:08:07,919 --> 00:08:09,680
now describing complete and accurate

218
00:08:09,680 --> 00:08:12,720
inventory is probably the foundational

219
00:08:12,720 --> 00:08:15,520
use case of all others with cyclone dx

220
00:08:15,520 --> 00:08:17,360
and probably what you automatically

221
00:08:17,360 --> 00:08:18,639
think of when we start talking about

222
00:08:18,639 --> 00:08:20,879
software builder materials but cyclone

223
00:08:20,879 --> 00:08:23,440
dx in particular can describe pretty

224
00:08:23,440 --> 00:08:25,199
much anything you can think of

225
00:08:25,199 --> 00:08:27,199
applications frameworks

226
00:08:27,199 --> 00:08:29,520
libraries containers operating systems

227
00:08:29,520 --> 00:08:30,800
devices

228
00:08:30,800 --> 00:08:34,399
firmwares even files on disk

229
00:08:34,399 --> 00:08:36,240
and with that complete and accurate

230
00:08:36,240 --> 00:08:37,839
inventory you can start looking at

231
00:08:37,839 --> 00:08:39,519
things like security vulnerability

232
00:08:39,519 --> 00:08:40,640
analysis

233
00:08:40,640 --> 00:08:42,000
which is obvious

234
00:08:42,000 --> 00:08:42,880
uh

235
00:08:42,880 --> 00:08:45,040
thing that pops to mind for people

236
00:08:45,040 --> 00:08:47,440
and it's really enabled by

237
00:08:47,440 --> 00:08:49,200
good support of different component

238
00:08:49,200 --> 00:08:50,800
identifiers

239
00:08:50,800 --> 00:08:52,640
cpe ids

240
00:08:52,640 --> 00:08:55,360
package url suite tags

241
00:08:55,360 --> 00:08:56,560
because there's different sources of

242
00:08:56,560 --> 00:08:58,320
vulnerability information

243
00:08:58,320 --> 00:09:00,080
the nvd

244
00:09:00,080 --> 00:09:03,200
uses cpe but misses out on a lot of open

245
00:09:03,200 --> 00:09:04,880
source software

246
00:09:04,880 --> 00:09:06,480
vulnerabilities which is where package

247
00:09:06,480 --> 00:09:09,760
url is really important

248
00:09:09,760 --> 00:09:11,279
and of course

249
00:09:11,279 --> 00:09:12,880
then you can start

250
00:09:12,880 --> 00:09:14,000
looking at

251
00:09:14,000 --> 00:09:16,560
integrity verification

252
00:09:16,560 --> 00:09:17,600
because we've got

253
00:09:17,600 --> 00:09:19,040
support for many different hash

254
00:09:19,040 --> 00:09:20,560
algorithms

255
00:09:20,560 --> 00:09:23,120
and this is integrity very verification

256
00:09:23,120 --> 00:09:24,640
different parts of your software life

257
00:09:24,640 --> 00:09:27,440
cycle so we're talking about hashes on

258
00:09:27,440 --> 00:09:29,600
packages that you're downloading and

259
00:09:29,600 --> 00:09:31,120
coming into your build

260
00:09:31,120 --> 00:09:33,760
or maybe it's the files on disk that are

261
00:09:33,760 --> 00:09:35,680
going into your build

262
00:09:35,680 --> 00:09:38,240
and also then have the hashes for all

263
00:09:38,240 --> 00:09:40,640
the stuff coming out of your build

264
00:09:40,640 --> 00:09:42,399
you know because

265
00:09:42,399 --> 00:09:44,720
the package we've included does it match

266
00:09:44,720 --> 00:09:46,800
what's available from upstream or you

267
00:09:46,800 --> 00:09:48,720
know we had some sort of problem with

268
00:09:48,720 --> 00:09:50,399
dependency confusion or something like

269
00:09:50,399 --> 00:09:51,680
that

270
00:09:51,680 --> 00:09:54,160
is what we're making available

271
00:09:54,160 --> 00:09:56,080
to our users to download is that what

272
00:09:56,080 --> 00:09:58,800
our build system said it

273
00:09:58,800 --> 00:10:00,800
created or has it since been tampered

274
00:10:00,800 --> 00:10:02,079
with

275
00:10:02,079 --> 00:10:04,079
or even further down when you're

276
00:10:04,079 --> 00:10:05,920
actually using something

277
00:10:05,920 --> 00:10:08,079
is what we're running in production does

278
00:10:08,079 --> 00:10:10,240
that match what the supplier said they

279
00:10:10,240 --> 00:10:12,640
gave us

280
00:10:12,880 --> 00:10:14,880
and package evaluation

281
00:10:14,880 --> 00:10:17,680
this is one of those use cases where i

282
00:10:17,680 --> 00:10:20,000
think s-bombs are really going to

283
00:10:20,000 --> 00:10:21,680
help uplift

284
00:10:21,680 --> 00:10:23,120
security across

285
00:10:23,120 --> 00:10:24,320
industry

286
00:10:24,320 --> 00:10:26,000
because you start

287
00:10:26,000 --> 00:10:28,480
being able to proactively evaluate

288
00:10:28,480 --> 00:10:30,959
packages in much higher detail

289
00:10:30,959 --> 00:10:32,480
than you normally would

290
00:10:32,480 --> 00:10:33,680
you know if you're just looking at a

291
00:10:33,680 --> 00:10:35,440
direct dependency it might look pretty

292
00:10:35,440 --> 00:10:37,680
good um first glance you know it might

293
00:10:37,680 --> 00:10:39,279
be maintained by a really respectable

294
00:10:39,279 --> 00:10:40,560
company and they might have a team

295
00:10:40,560 --> 00:10:42,480
that's looking after it but when you

296
00:10:42,480 --> 00:10:44,720
actually start digging into the details

297
00:10:44,720 --> 00:10:46,240
you might find that their their

298
00:10:46,240 --> 00:10:48,959
dependencies are less maintained

299
00:10:48,959 --> 00:10:50,959
you know you might have something like

300
00:10:50,959 --> 00:10:53,120
the left pad incident where you've got a

301
00:10:53,120 --> 00:10:55,279
dozen lines of code which broke the

302
00:10:55,279 --> 00:10:57,360
build for a whole bunch of people

303
00:10:57,360 --> 00:11:00,240
um in babel and um it was the react

304
00:11:00,240 --> 00:11:03,040
ecosystems

305
00:11:03,839 --> 00:11:04,959
and

306
00:11:04,959 --> 00:11:07,360
license identification and compliance

307
00:11:07,360 --> 00:11:08,320
you know

308
00:11:08,320 --> 00:11:10,079
support

309
00:11:10,079 --> 00:11:12,880
svdx license ids and expressions

310
00:11:12,880 --> 00:11:15,120
also support describing commercial

311
00:11:15,120 --> 00:11:16,480
licenses

312
00:11:16,480 --> 00:11:20,399
evidences of licenses and copyrights

313
00:11:20,399 --> 00:11:23,200
you know particularly important uh you

314
00:11:23,200 --> 00:11:24,560
know there's some open source software

315
00:11:24,560 --> 00:11:26,720
licenses which are can be very

316
00:11:26,720 --> 00:11:28,720
problematic especially for commercial

317
00:11:28,720 --> 00:11:30,079
software

318
00:11:30,079 --> 00:11:32,880
but can even have implications for

319
00:11:32,880 --> 00:11:36,160
how you use the software

320
00:11:37,760 --> 00:11:39,760
and component assemblies is another use

321
00:11:39,760 --> 00:11:41,600
case that we support

322
00:11:41,600 --> 00:11:43,519
particularly very complex component

323
00:11:43,519 --> 00:11:46,079
assemblies now if they're going back to

324
00:11:46,079 --> 00:11:48,480
the analogy of the food label

325
00:11:48,480 --> 00:11:50,800
you know software isn't just a list of

326
00:11:50,800 --> 00:11:53,279
ingredients that's then thrown together

327
00:11:53,279 --> 00:11:55,519
uh you know there's a particular analogy

328
00:11:55,519 --> 00:11:57,440
that i know steve likes

329
00:11:57,440 --> 00:12:00,800
uh where it's more like a dash in a car

330
00:12:00,800 --> 00:12:02,480
so within that dash

331
00:12:02,480 --> 00:12:03,519
you've got

332
00:12:03,519 --> 00:12:05,760
uh instrument cluster

333
00:12:05,760 --> 00:12:07,279
and within that instrument cluster

334
00:12:07,279 --> 00:12:08,639
you're gonna have a speedometer and then

335
00:12:08,639 --> 00:12:09,839
within that speedometer you're going to

336
00:12:09,839 --> 00:12:12,160
have leds capacitors things like that

337
00:12:12,160 --> 00:12:14,000
you've actually got

338
00:12:14,000 --> 00:12:16,880
nested component assemblies and those

339
00:12:16,880 --> 00:12:19,200
different components within

340
00:12:19,200 --> 00:12:21,760
that larger assembly will have different

341
00:12:21,760 --> 00:12:22,959
suppliers

342
00:12:22,959 --> 00:12:25,360
and different authors

343
00:12:25,360 --> 00:12:27,360
and component pedigree is another

344
00:12:27,360 --> 00:12:29,920
important factor in this

345
00:12:29,920 --> 00:12:32,480
especially open source software you know

346
00:12:32,480 --> 00:12:36,720
things are forked renamed all the time

347
00:12:36,880 --> 00:12:38,880
and so being able to describe the

348
00:12:38,880 --> 00:12:40,560
ancestry

349
00:12:40,560 --> 00:12:43,200
of components is really important

350
00:12:43,200 --> 00:12:45,200
um look at all the different variations

351
00:12:45,200 --> 00:12:48,560
of you know java that different uh

352
00:12:48,560 --> 00:12:50,959
java runtimes that are available

353
00:12:50,959 --> 00:12:52,880
and there's some common ancestry there

354
00:12:52,880 --> 00:12:54,959
and some common problems then if there's

355
00:12:54,959 --> 00:12:55,839
some

356
00:12:55,839 --> 00:12:58,560
there's a vulnerability identified in

357
00:12:58,560 --> 00:13:00,880
in the ancestor but also being able to

358
00:13:00,880 --> 00:13:02,959
then describe changes that have been

359
00:13:02,959 --> 00:13:04,560
made

360
00:13:04,560 --> 00:13:05,920
yeah there's a leading identity

361
00:13:05,920 --> 00:13:08,560
management provider and last time i

362
00:13:08,560 --> 00:13:10,160
checked earlier in the year they were

363
00:13:10,160 --> 00:13:13,360
still shipping an outdated unsupported

364
00:13:13,360 --> 00:13:16,800
known vulnerable component of jquery

365
00:13:16,800 --> 00:13:18,800
but they took a risk-based approach to

366
00:13:18,800 --> 00:13:19,519
it

367
00:13:19,519 --> 00:13:21,519
you know just updating to the next major

368
00:13:21,519 --> 00:13:23,279
version could have broken uh

369
00:13:23,279 --> 00:13:25,040
authentication enterprise-wide for all

370
00:13:25,040 --> 00:13:26,399
of their customers

371
00:13:26,399 --> 00:13:28,079
so they instead of that they've got

372
00:13:28,079 --> 00:13:30,240
they've got their jquery component

373
00:13:30,240 --> 00:13:32,160
they've forked it internally and they

374
00:13:32,160 --> 00:13:35,279
just back port all the security fixes

375
00:13:35,279 --> 00:13:36,880
and fix any bugs that they come across

376
00:13:36,880 --> 00:13:38,720
and that sort of thing can then be

377
00:13:38,720 --> 00:13:41,040
described and that's sort of that sort

378
00:13:41,040 --> 00:13:42,240
of uh

379
00:13:42,240 --> 00:13:44,320
richer information on component pedigree

380
00:13:44,320 --> 00:13:45,680
is going to be really important if there

381
00:13:45,680 --> 00:13:47,360
is going to be any transparency across

382
00:13:47,360 --> 00:13:50,399
the software supply chain

383
00:13:50,399 --> 00:13:53,199
uh provenance so component provenance

384
00:13:53,199 --> 00:13:55,120
the parties involved with that software

385
00:13:55,120 --> 00:13:56,399
you know

386
00:13:56,399 --> 00:13:58,959
the uh who built it

387
00:13:58,959 --> 00:14:01,040
who packaged it who supplied it where

388
00:14:01,040 --> 00:14:03,279
did you download it from

389
00:14:03,279 --> 00:14:04,480
uh and

390
00:14:04,480 --> 00:14:06,399
that sort of information is becoming

391
00:14:06,399 --> 00:14:08,639
increasingly more important

392
00:14:08,639 --> 00:14:10,720
uh when we sort of look at the global

393
00:14:10,720 --> 00:14:12,959
software supply chain and where

394
00:14:12,959 --> 00:14:13,920
issues

395
00:14:13,920 --> 00:14:16,240
happen

396
00:14:16,240 --> 00:14:19,279
and services is another unique use case

397
00:14:19,279 --> 00:14:21,519
that cyclone dx supports

398
00:14:21,519 --> 00:14:23,680
i perhaps not what you're thinking when

399
00:14:23,680 --> 00:14:24,959
when you initially hear the term

400
00:14:24,959 --> 00:14:26,959
software builder materials

401
00:14:26,959 --> 00:14:28,800
but there's really

402
00:14:28,800 --> 00:14:30,480
in a practical sense there's not much of

403
00:14:30,480 --> 00:14:32,560
a difference between whether you're you

404
00:14:32,560 --> 00:14:34,959
know executing code that's in a dll on

405
00:14:34,959 --> 00:14:36,160
disk

406
00:14:36,160 --> 00:14:38,079
or you're calling out to an external

407
00:14:38,079 --> 00:14:41,040
service in the cloud for example

408
00:14:41,040 --> 00:14:44,160
so we support describing services

409
00:14:44,160 --> 00:14:45,519
endpoints

410
00:14:45,519 --> 00:14:47,680
whether across the trust boundary data

411
00:14:47,680 --> 00:14:50,160
classification data flow whether there's

412
00:14:50,160 --> 00:14:52,079
authentication requirements

413
00:14:52,079 --> 00:14:54,000
now there's actually enough information

414
00:14:54,000 --> 00:14:56,000
in this to be able to generate a data

415
00:14:56,000 --> 00:14:57,680
flow diagram for threat modeling for

416
00:14:57,680 --> 00:14:59,839
example

417
00:15:00,480 --> 00:15:01,680
and

418
00:15:01,680 --> 00:15:03,519
with services and components there's

419
00:15:03,519 --> 00:15:07,120
also dependency relationships

420
00:15:07,120 --> 00:15:09,839
now you might have a transitive

421
00:15:09,839 --> 00:15:12,000
dependency that depends on an external

422
00:15:12,000 --> 00:15:12,959
service

423
00:15:12,959 --> 00:15:14,160
or

424
00:15:14,160 --> 00:15:15,600
a transitive dependency that's got a

425
00:15:15,600 --> 00:15:17,519
known vulnerability for example and

426
00:15:17,519 --> 00:15:20,160
being able to figure out how that

427
00:15:20,160 --> 00:15:22,160
that vulnerable component got into your

428
00:15:22,160 --> 00:15:24,320
software and which package you actually

429
00:15:24,320 --> 00:15:25,519
have to update in your direct

430
00:15:25,519 --> 00:15:28,959
dependencies it's pretty important

431
00:15:28,959 --> 00:15:31,040
but there's really so

432
00:15:31,040 --> 00:15:32,160
many

433
00:15:32,160 --> 00:15:34,560
different use cases we can cover

434
00:15:34,560 --> 00:15:36,800
and lots and lots of different types of

435
00:15:36,800 --> 00:15:39,199
software and devices can be described

436
00:15:39,199 --> 00:15:40,079
you know

437
00:15:40,079 --> 00:15:42,079
classic legacy software

438
00:15:42,079 --> 00:15:44,240
you might have a you know say you've got

439
00:15:44,240 --> 00:15:45,920
a fat client that runs on someone's

440
00:15:45,920 --> 00:15:48,240
workstation it talks to an application

441
00:15:48,240 --> 00:15:50,800
server which in turn talks to a database

442
00:15:50,800 --> 00:15:52,560
server now that's something that you can

443
00:15:52,560 --> 00:15:55,279
describe in high detail with cyclone dx

444
00:15:55,279 --> 00:15:56,720
or perhaps it's a more modern web

445
00:15:56,720 --> 00:15:59,279
application so you've got client-side

446
00:15:59,279 --> 00:16:01,120
code in one language

447
00:16:01,120 --> 00:16:02,720
server-side code might be in another

448
00:16:02,720 --> 00:16:03,759
language

449
00:16:03,759 --> 00:16:05,600
and then there might be a few external

450
00:16:05,600 --> 00:16:08,880
services that your system depends on

451
00:16:08,880 --> 00:16:12,320
mobile applications you know mobile apps

452
00:16:12,320 --> 00:16:16,560
uh micro services now you can describe

453
00:16:16,560 --> 00:16:18,959
with a cyclone dxs bomb you can go right

454
00:16:18,959 --> 00:16:22,399
down to the micro service level or you

455
00:16:22,399 --> 00:16:24,160
can take a step back and start

456
00:16:24,160 --> 00:16:26,639
describing a group of micro services

457
00:16:26,639 --> 00:16:29,040
that provide that you know underpin your

458
00:16:29,040 --> 00:16:31,279
system and the relationships between

459
00:16:31,279 --> 00:16:32,880
them and what their dependencies are

460
00:16:32,880 --> 00:16:34,639
amongst themselves which micro services

461
00:16:34,639 --> 00:16:37,279
talk to another microservice for example

462
00:16:37,279 --> 00:16:40,160
and many ways that you can assemble

463
00:16:40,160 --> 00:16:42,399
system of system s bombs

464
00:16:42,399 --> 00:16:44,000
so you can have an all-in-one s-bomb

465
00:16:44,000 --> 00:16:46,639
that contains absolutely everything and

466
00:16:46,639 --> 00:16:49,920
in some modern application architectures

467
00:16:49,920 --> 00:16:51,600
that can get really really big and

468
00:16:51,600 --> 00:16:53,360
complicated

469
00:16:53,360 --> 00:16:55,440
or you can go right down to yeah things

470
00:16:55,440 --> 00:16:57,519
like the micro service level

471
00:16:57,519 --> 00:16:59,839
and then build a consolidated s-bomb

472
00:16:59,839 --> 00:17:02,160
that layers over the top that references

473
00:17:02,160 --> 00:17:04,480
those micro-service s-bombs

474
00:17:04,480 --> 00:17:07,919
it's really really really flexible

475
00:17:07,919 --> 00:17:09,760
and i'll let steve carry on talk a bit

476
00:17:09,760 --> 00:17:13,520
about the object model that we use

477
00:17:13,679 --> 00:17:16,319
thanks patrick yeah use cases are really

478
00:17:16,319 --> 00:17:18,319
interesting we'll touch on those in just

479
00:17:18,319 --> 00:17:20,000
a little bit more to give you some

480
00:17:20,000 --> 00:17:20,959
reference

481
00:17:20,959 --> 00:17:22,799
places that you can go to for some more

482
00:17:22,799 --> 00:17:24,480
information on all those

483
00:17:24,480 --> 00:17:25,919
but let's talk about the object model

484
00:17:25,919 --> 00:17:27,679
because the object model is really

485
00:17:27,679 --> 00:17:28,960
really interesting

486
00:17:28,960 --> 00:17:30,720
as patrick was saying we're talking

487
00:17:30,720 --> 00:17:32,640
about software builder materials because

488
00:17:32,640 --> 00:17:34,400
that that gets

489
00:17:34,400 --> 00:17:36,400
all the press and that's specifically

490
00:17:36,400 --> 00:17:38,320
what was in the executive order but

491
00:17:38,320 --> 00:17:40,400
cyclone dx is actually just a bill of

492
00:17:40,400 --> 00:17:42,240
materials standard

493
00:17:42,240 --> 00:17:44,640
so we support a number of different

494
00:17:44,640 --> 00:17:46,240
types of components and before i get to

495
00:17:46,240 --> 00:17:48,320
the components i just want to focus on

496
00:17:48,320 --> 00:17:51,360
the fact that it's it's very lightweight

497
00:17:51,360 --> 00:17:53,919
many of us in the security world

498
00:17:53,919 --> 00:17:54,960
we

499
00:17:54,960 --> 00:17:57,760
we have to automate not because it's a

500
00:17:57,760 --> 00:17:59,840
competitive advantage not because it's

501
00:17:59,840 --> 00:18:02,400
the devsecops is the you know term of

502
00:18:02,400 --> 00:18:05,200
the the last couple of years a lot of us

503
00:18:05,200 --> 00:18:07,120
have to automate for survival purposes

504
00:18:07,120 --> 00:18:09,360
right we have to automate in order to do

505
00:18:09,360 --> 00:18:11,280
our jobs um

506
00:18:11,280 --> 00:18:14,640
cyclone dx takes that into react in that

507
00:18:14,640 --> 00:18:16,880
reality into consideration with its with

508
00:18:16,880 --> 00:18:19,039
its uh with its approach to its object

509
00:18:19,039 --> 00:18:21,039
model so it's very very lightweight and

510
00:18:21,039 --> 00:18:23,280
it's a very very simple model that's

511
00:18:23,280 --> 00:18:25,520
optimized for highly automated

512
00:18:25,520 --> 00:18:26,880
environments

513
00:18:26,880 --> 00:18:29,200
it's one thing to produce an s bomb uh

514
00:18:29,200 --> 00:18:32,000
as a point in time activity it's another

515
00:18:32,000 --> 00:18:34,160
thing to be able to have an object model

516
00:18:34,160 --> 00:18:35,360
that

517
00:18:35,360 --> 00:18:38,960
can that can span across an entire build

518
00:18:38,960 --> 00:18:41,520
pipeline so that as a bomb is going

519
00:18:41,520 --> 00:18:43,919
through your your pipeline you can

520
00:18:43,919 --> 00:18:46,640
augment it and change it and correct it

521
00:18:46,640 --> 00:18:48,880
throughout your pipeline and the s-bomb

522
00:18:48,880 --> 00:18:51,120
creation instead of a one-time thing is

523
00:18:51,120 --> 00:18:53,120
actually more of a process and you need

524
00:18:53,120 --> 00:18:55,039
a really simple object model to be able

525
00:18:55,039 --> 00:18:57,600
to do that because you need maybe a lot

526
00:18:57,600 --> 00:18:59,600
of simple tools to be able to operate on

527
00:18:59,600 --> 00:19:01,600
various aspects of the smell

528
00:19:01,600 --> 00:19:03,440
and going back to the different types of

529
00:19:03,440 --> 00:19:06,080
components as pat was mentioning we

530
00:19:06,080 --> 00:19:08,080
support applications and libraries and

531
00:19:08,080 --> 00:19:09,919
frameworks and all these other things

532
00:19:09,919 --> 00:19:11,919
that you can that can represent in the

533
00:19:11,919 --> 00:19:14,799
software stack as well as services and

534
00:19:14,799 --> 00:19:17,760
yes uh you know devices are also

535
00:19:17,760 --> 00:19:21,039
supported although not overly well today

536
00:19:21,039 --> 00:19:22,840
but we are working with the industrial

537
00:19:22,840 --> 00:19:25,840
control community as well as the iot

538
00:19:25,840 --> 00:19:28,160
community to bring proper uh to bring

539
00:19:28,160 --> 00:19:30,320
proper hardware support to the

540
00:19:30,320 --> 00:19:32,559
specification

541
00:19:32,559 --> 00:19:35,120
so that's really the object model

542
00:19:35,120 --> 00:19:37,360
getting back to some of the use cases

543
00:19:37,360 --> 00:19:41,679
the use cases really make cyclone dx um

544
00:19:41,679 --> 00:19:43,840
as powerful as what it is today yes we

545
00:19:43,840 --> 00:19:46,000
can talk about the object model and and

546
00:19:46,000 --> 00:19:46,799
how

547
00:19:46,799 --> 00:19:48,720
good or

548
00:19:48,720 --> 00:19:51,520
whatever it is but it's really about the

549
00:19:51,520 --> 00:19:54,000
use cases uh without the use cases

550
00:19:54,000 --> 00:19:56,640
cyclone dx wouldn't be where it is today

551
00:19:56,640 --> 00:19:59,760
um so starting with the basics like

552
00:19:59,760 --> 00:20:02,960
inventory is the the most fundament

553
00:20:02,960 --> 00:20:05,280
fundamental use case but there's a lot

554
00:20:05,280 --> 00:20:07,919
of different types of use cases that you

555
00:20:07,919 --> 00:20:09,360
can explore

556
00:20:09,360 --> 00:20:11,679
and we have a dedicated

557
00:20:11,679 --> 00:20:14,000
part of the website called the cyclone

558
00:20:14,000 --> 00:20:17,120
dx use cases and examples that actually

559
00:20:17,120 --> 00:20:20,559
gives you kind of a an outline of what

560
00:20:20,559 --> 00:20:23,919
the use case is as well as concrete

561
00:20:23,919 --> 00:20:26,640
examples elementary examples for both

562
00:20:26,640 --> 00:20:30,400
xml and json to kind of walk you through

563
00:20:30,400 --> 00:20:32,480
this is how you would actually

564
00:20:32,480 --> 00:20:35,280
implement that use case

565
00:20:35,280 --> 00:20:38,080
for this particular serialization format

566
00:20:38,080 --> 00:20:41,039
we also support protocol buffers as well

567
00:20:41,039 --> 00:20:42,400
for highly

568
00:20:42,400 --> 00:20:44,720
efficient machine to machine use cases

569
00:20:44,720 --> 00:20:48,559
as well but there's a number of security

570
00:20:48,559 --> 00:20:51,919
use cases that cyclone dx supports in

571
00:20:51,919 --> 00:20:54,720
addition to some of the non-security use

572
00:20:54,720 --> 00:20:57,600
cases like license license compliance

573
00:20:57,600 --> 00:20:59,840
being a non-security use case there's

574
00:20:59,840 --> 00:21:01,679
all kinds of other non-security use

575
00:21:01,679 --> 00:21:03,679
cases that we support as well but

576
00:21:03,679 --> 00:21:06,080
obviously as an as an oauth project

577
00:21:06,080 --> 00:21:08,240
there's dozens of different security use

578
00:21:08,240 --> 00:21:10,640
cases that the specification is really

579
00:21:10,640 --> 00:21:14,200
really good at representing

580
00:21:16,400 --> 00:21:17,840
and there's lots and lots of tooling

581
00:21:17,840 --> 00:21:19,200
available

582
00:21:19,200 --> 00:21:20,960
to help you get going

583
00:21:20,960 --> 00:21:23,440
we've got a tool center on the cyclone

584
00:21:23,440 --> 00:21:26,000
dx website it's got a heap of different

585
00:21:26,000 --> 00:21:29,440
tools some open source some proprietary

586
00:21:29,440 --> 00:21:31,679
and for different

587
00:21:31,679 --> 00:21:34,640
sort of parts of the sbom lifecycle

588
00:21:34,640 --> 00:21:37,360
so there's some build integration tools

589
00:21:37,360 --> 00:21:40,159
so this is you know tooling to embed in

590
00:21:40,159 --> 00:21:42,840
your ci cd pipeline to generate an

591
00:21:42,840 --> 00:21:45,919
s-bomb as close to the build as possible

592
00:21:45,919 --> 00:21:47,520
uh

593
00:21:47,520 --> 00:21:49,600
you know to get accurate inventory you

594
00:21:49,600 --> 00:21:51,840
really you know you really need to

595
00:21:51,840 --> 00:21:54,080
sort of get that information when you're

596
00:21:54,080 --> 00:21:55,280
building it

597
00:21:55,280 --> 00:21:57,280
uh but there is also some tools that

598
00:21:57,280 --> 00:21:58,960
where you can build an s-bom after the

599
00:21:58,960 --> 00:22:00,559
fact as well

600
00:22:00,559 --> 00:22:02,960
uh there's s-bom analysis tools

601
00:22:02,960 --> 00:22:04,400
uh

602
00:22:04,400 --> 00:22:05,120
so

603
00:22:05,120 --> 00:22:08,480
tools for authoring s-bombs uh

604
00:22:08,480 --> 00:22:11,039
there's github actions as well to make

605
00:22:11,039 --> 00:22:13,360
generating s-bombs easy

606
00:22:13,360 --> 00:22:14,960
as part of your build

607
00:22:14,960 --> 00:22:16,400
um

608
00:22:16,400 --> 00:22:19,440
tools to transform between formats you

609
00:22:19,440 --> 00:22:21,120
know as steve mentioned we've got

610
00:22:21,120 --> 00:22:24,159
different json xml and protocol buffer

611
00:22:24,159 --> 00:22:26,960
serialization formats

612
00:22:26,960 --> 00:22:29,200
there's libraries available so if you

613
00:22:29,200 --> 00:22:31,360
want to programmatically

614
00:22:31,360 --> 00:22:33,039
generate an s-bom

615
00:22:33,039 --> 00:22:35,440
or analyze an s-bomb

616
00:22:35,440 --> 00:22:38,799
in the tool that you're maintaining it's

617
00:22:38,799 --> 00:22:41,039
very easy to adopt

618
00:22:41,039 --> 00:22:42,320
there's even

619
00:22:42,320 --> 00:22:44,240
things for signing

620
00:22:44,240 --> 00:22:48,480
s-bombs like code notary and cosine

621
00:22:48,480 --> 00:22:52,559
and for distributing s-bombs as well

622
00:22:52,840 --> 00:22:56,240
and we've also got a few different ways

623
00:22:56,240 --> 00:22:58,240
that you can participate in the

624
00:22:58,240 --> 00:23:00,720
community

625
00:23:00,720 --> 00:23:02,159
obviously the website's got a bunch of

626
00:23:02,159 --> 00:23:03,919
information on it

627
00:23:03,919 --> 00:23:05,679
i've got the

628
00:23:05,679 --> 00:23:06,960
github

629
00:23:06,960 --> 00:23:08,799
organization as well it's got all our

630
00:23:08,799 --> 00:23:10,000
official

631
00:23:10,000 --> 00:23:12,320
implementations things like that all the

632
00:23:12,320 --> 00:23:13,919
repositories

633
00:23:13,919 --> 00:23:16,080
we've got a dedicated slack

634
00:23:16,080 --> 00:23:18,159
workspace um with

635
00:23:18,159 --> 00:23:19,760
there's a bunch of different channels in

636
00:23:19,760 --> 00:23:21,280
it you know there's channels for

637
00:23:21,280 --> 00:23:24,159
particular ecosystems so things like

638
00:23:24,159 --> 00:23:26,480
there's a go channel there's a java

639
00:23:26,480 --> 00:23:30,640
channel dotnet javascript etc

640
00:23:30,640 --> 00:23:31,760
so if you

641
00:23:31,760 --> 00:23:33,919
it's a great place to ask any questions

642
00:23:33,919 --> 00:23:36,400
of the not just the maintainers but also

643
00:23:36,400 --> 00:23:38,480
the community at large

644
00:23:38,480 --> 00:23:40,480
and we've also got a cyclone dx mailing

645
00:23:40,480 --> 00:23:42,400
list so you can

646
00:23:42,400 --> 00:23:44,480
sign up there and uh

647
00:23:44,480 --> 00:23:46,799
no slack isn't isn't an option for some

648
00:23:46,799 --> 00:23:48,640
people who work in high assurance

649
00:23:48,640 --> 00:23:50,799
environments so we've also got good old

650
00:23:50,799 --> 00:23:54,400
email as an option as well

651
00:23:55,520 --> 00:23:58,158
thank you steve

652
00:24:02,240 --> 00:24:04,720
yeah absolutely it looks like we are are

653
00:24:04,720 --> 00:24:07,600
ahead of schedule so uh

654
00:24:07,600 --> 00:24:09,279
that never happens

655
00:24:09,279 --> 00:24:10,559
but uh

656
00:24:10,559 --> 00:24:12,960
yeah um you know like patrick was was

657
00:24:12,960 --> 00:24:15,039
mentioning you know we we

658
00:24:15,039 --> 00:24:18,080
we we operate as a meritocracy

659
00:24:18,080 --> 00:24:21,039
we we do have uh different ways that the

660
00:24:21,039 --> 00:24:22,720
community can

661
00:24:22,720 --> 00:24:25,039
can get involved and i highly encourage

662
00:24:25,039 --> 00:24:26,320
uh if you're interested in software

663
00:24:26,320 --> 00:24:28,480
build materials and some of the work

664
00:24:28,480 --> 00:24:29,279
that

665
00:24:29,279 --> 00:24:31,760
not just the owasp is doing but

666
00:24:31,760 --> 00:24:33,760
many of the vendors that support the

667
00:24:33,760 --> 00:24:35,679
standard as well what some of their work

668
00:24:35,679 --> 00:24:36,880
is doing because it's some of it's

669
00:24:36,880 --> 00:24:38,880
really really impressive i highly

670
00:24:38,880 --> 00:24:41,279
encourage you to get involved um like i

671
00:24:41,279 --> 00:24:43,440
was mentioning earlier um

672
00:24:43,440 --> 00:24:45,440
cyclone dix is kind of unlike every

673
00:24:45,440 --> 00:24:48,960
other oas project it's quite large i

674
00:24:48,960 --> 00:24:50,240
think we have

675
00:24:50,240 --> 00:24:52,480
almost i don't know 40 some odd

676
00:24:52,480 --> 00:24:55,760
repositories in our github organization

677
00:24:55,760 --> 00:24:58,559
and unlike most oas projects that have

678
00:24:58,559 --> 00:25:00,320
like one or two slack channels we have

679
00:25:00,320 --> 00:25:01,919
like 20

680
00:25:01,919 --> 00:25:04,320
something like that so it's a fairly

681
00:25:04,320 --> 00:25:06,720
large project uh we we have our own

682
00:25:06,720 --> 00:25:08,880
slack workspace so i i will call that

683
00:25:08,880 --> 00:25:11,200
out as as one of the differences so we

684
00:25:11,200 --> 00:25:12,000
are

685
00:25:12,000 --> 00:25:14,320
not using the the oauth slack workspace

686
00:25:14,320 --> 00:25:15,600
because like i said we've got like 20

687
00:25:15,600 --> 00:25:17,039
some odd channels

688
00:25:17,039 --> 00:25:18,480
but some of the work that we're

689
00:25:18,480 --> 00:25:21,039
currently ongoing right now

690
00:25:21,039 --> 00:25:23,679
we are currently involved in the

691
00:25:23,679 --> 00:25:26,720
development of 1.4 of the specification

692
00:25:26,720 --> 00:25:28,640
so if you want to get involved and read

693
00:25:28,640 --> 00:25:30,960
what we're currently doing uh and read

694
00:25:30,960 --> 00:25:33,279
what's uh what's coming next i highly

695
00:25:33,279 --> 00:25:34,960
encourage you to to get involved with

696
00:25:34,960 --> 00:25:35,840
that

697
00:25:35,840 --> 00:25:36,960
and

698
00:25:36,960 --> 00:25:38,720
like i was mentioning earlier we do have

699
00:25:38,720 --> 00:25:41,039
our own standardization process so if

700
00:25:41,039 --> 00:25:43,120
you want to get involved in in that and

701
00:25:43,120 --> 00:25:45,600
and making sure that uh we are providing

702
00:25:45,600 --> 00:25:48,080
a specification that does meet your

703
00:25:48,080 --> 00:25:50,000
organizational requirements uh that

704
00:25:50,000 --> 00:25:51,360
would be great so

705
00:25:51,360 --> 00:25:54,240
participate and and help improve and

706
00:25:54,240 --> 00:25:56,480
move the specification forward so

707
00:25:56,480 --> 00:25:58,240
patrick did you have anything to cool

708
00:25:58,240 --> 00:26:00,400
with

709
00:26:00,400 --> 00:26:02,240
uh no i don't think so i think you

710
00:26:02,240 --> 00:26:03,760
covered it all

711
00:26:03,760 --> 00:26:05,760
yeah thanks uh everyone for

712
00:26:05,760 --> 00:26:08,000
tuning in and listening to the talk it's

713
00:26:08,000 --> 00:26:09,200
always

714
00:26:09,200 --> 00:26:11,039
i always find it interesting

715
00:26:11,039 --> 00:26:13,279
uh talking to people about this stuff so

716
00:26:13,279 --> 00:26:14,240
we'll be

717
00:26:14,240 --> 00:26:17,120
in the uh our slack channel afterwards

718
00:26:17,120 --> 00:26:19,120
uh if anyone does want to have a

719
00:26:19,120 --> 00:26:22,080
discussion about s-bombs or any related

720
00:26:22,080 --> 00:26:25,080
topics

