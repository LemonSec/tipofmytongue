1
00:00:01,410 --> 00:00:06,030
[Music]

2
00:00:08,000 --> 00:00:10,800
thank you so hi everyone and uh thank

3
00:00:10,800 --> 00:00:13,679
you for joining this session it's hardly

4
00:00:13,679 --> 00:00:16,480
a secret that the development of secure

5
00:00:16,480 --> 00:00:20,080
software can be a formidable undertaking

6
00:00:20,080 --> 00:00:22,640
the application software can be riddled

7
00:00:22,640 --> 00:00:23,439
with

8
00:00:23,439 --> 00:00:25,920
many security vulnerabilities and they

9
00:00:25,920 --> 00:00:29,039
can pose a significant and serious

10
00:00:29,039 --> 00:00:32,320
a risk a to organizations and their

11
00:00:32,320 --> 00:00:33,520
clients

12
00:00:33,520 --> 00:00:34,640
but a

13
00:00:34,640 --> 00:00:37,040
vulnerability remediation consequently

14
00:00:37,040 --> 00:00:39,360
become a cardinal part

15
00:00:39,360 --> 00:00:42,719
of the overall software development

16
00:00:42,719 --> 00:00:45,840
workbook if you will uh but that being

17
00:00:45,840 --> 00:00:47,840
said the remediation of all the

18
00:00:47,840 --> 00:00:51,520
vulnerabilities a in a proprietary code

19
00:00:51,520 --> 00:00:53,440
is not only an

20
00:00:53,440 --> 00:00:56,800
operos process but at times it could be

21
00:00:56,800 --> 00:00:59,359
downright unfeasible and the reason is

22
00:00:59,359 --> 00:01:01,840
that contrary to a vulnerability

23
00:01:01,840 --> 00:01:04,400
detection that over the past few years

24
00:01:04,400 --> 00:01:07,360
has largely become a

25
00:01:07,360 --> 00:01:09,439
an automated process

26
00:01:09,439 --> 00:01:13,760
a automatic remediation is is not so

27
00:01:13,760 --> 00:01:16,720
so the purpose of this session is to

28
00:01:16,720 --> 00:01:19,360
unravel if you will a some of the

29
00:01:19,360 --> 00:01:21,520
important aspects that underlie the

30
00:01:21,520 --> 00:01:25,200
concept of auto remediation and in doing

31
00:01:25,200 --> 00:01:28,320
so they helped help clarify

32
00:01:28,320 --> 00:01:30,640
how organizations can

33
00:01:30,640 --> 00:01:34,320
not only a promote and help their

34
00:01:34,320 --> 00:01:36,960
developers and boost their productivity

35
00:01:36,960 --> 00:01:39,680
but rather help the developers

36
00:01:39,680 --> 00:01:42,960
realize a first-rate experience where

37
00:01:42,960 --> 00:01:45,360
they can alleviate the remediation

38
00:01:45,360 --> 00:01:48,079
burden ameliorate the process and

39
00:01:48,079 --> 00:01:52,000
accelerate the remediation completion

40
00:01:52,000 --> 00:01:54,479
we have three main parts in our session

41
00:01:54,479 --> 00:01:56,880
here i'll start with the the challenges

42
00:01:56,880 --> 00:01:58,880
some of the challenges that concern

43
00:01:58,880 --> 00:02:01,680
manual remediation and it will be a good

44
00:02:01,680 --> 00:02:04,079
start to underscore the value of auto

45
00:02:04,079 --> 00:02:06,880
remediation then i'll move to highlight

46
00:02:06,880 --> 00:02:09,598
concepts and the a number of examples

47
00:02:09,598 --> 00:02:11,840
concerning a the workflow of auto

48
00:02:11,840 --> 00:02:15,680
remediation and finally we will bring up

49
00:02:15,680 --> 00:02:16,800
a couple of

50
00:02:16,800 --> 00:02:18,239
challenges

51
00:02:18,239 --> 00:02:22,080
with regard to auto remediation

52
00:02:22,080 --> 00:02:24,239
some of the people i know

53
00:02:24,239 --> 00:02:26,319
i believe that

54
00:02:26,319 --> 00:02:28,319
considering the question that is brought

55
00:02:28,319 --> 00:02:30,400
up front they they would probably say

56
00:02:30,400 --> 00:02:31,360
that

57
00:02:31,360 --> 00:02:32,879
now

58
00:02:32,879 --> 00:02:36,319
there's probably no reasonable way to

59
00:02:36,319 --> 00:02:38,319
expect this to happen but obviously that

60
00:02:38,319 --> 00:02:39,920
would have nothing to do with

61
00:02:39,920 --> 00:02:42,160
remediation they simply have no

62
00:02:42,160 --> 00:02:43,920
familiarity with the concept of

63
00:02:43,920 --> 00:02:47,040
developer happiness but seriously i

64
00:02:47,040 --> 00:02:49,519
think that when anyone wishes to discuss

65
00:02:49,519 --> 00:02:50,480
the

66
00:02:50,480 --> 00:02:54,160
idea underlying remediation and auto

67
00:02:54,160 --> 00:02:56,560
remediation in particular one needs to

68
00:02:56,560 --> 00:02:57,920
fathom when

69
00:02:57,920 --> 00:03:00,400
does vulnerability remediation begin

70
00:03:00,400 --> 00:03:03,200
many would intuitively and spontaneously

71
00:03:03,200 --> 00:03:04,400
say that well

72
00:03:04,400 --> 00:03:07,920
we have some a fix already in hand and

73
00:03:07,920 --> 00:03:09,920
then let's apply it and that makes

74
00:03:09,920 --> 00:03:11,760
perfect sense unless of course you

75
00:03:11,760 --> 00:03:14,640
consider that in many cases dealing with

76
00:03:14,640 --> 00:03:17,120
remediation starts much earlier when you

77
00:03:17,120 --> 00:03:19,920
have this strange and the unsettling

78
00:03:19,920 --> 00:03:22,560
sensation that something went awry and

79
00:03:22,560 --> 00:03:25,120
you need to deal with that well

80
00:03:25,120 --> 00:03:27,440
i would argue that remediation should

81
00:03:27,440 --> 00:03:30,560
basically start from that point and

82
00:03:30,560 --> 00:03:32,640
obviously any guidance that we would

83
00:03:32,640 --> 00:03:35,280
have in our disposal could be extremely

84
00:03:35,280 --> 00:03:37,519
helpful but regardless of the level of

85
00:03:37,519 --> 00:03:40,000
help that guidance would provide

86
00:03:40,000 --> 00:03:43,120
it still places the onus on running the

87
00:03:43,120 --> 00:03:46,400
actual change alteration or update a

88
00:03:46,400 --> 00:03:48,400
remediation in other words with the

89
00:03:48,400 --> 00:03:50,319
hands of the developer

90
00:03:50,319 --> 00:03:54,000
the apsec personnel or as the evidence

91
00:03:54,000 --> 00:03:57,439
shows us commonly in both hands and

92
00:03:57,439 --> 00:03:59,920
that's in a way contributes to a level

93
00:03:59,920 --> 00:04:01,760
of noise that

94
00:04:01,760 --> 00:04:04,400
doesn't necessarily help facilitate the

95
00:04:04,400 --> 00:04:06,879
overall process i think this sets a good

96
00:04:06,879 --> 00:04:09,360
stage to highlight yet another question

97
00:04:09,360 --> 00:04:12,000
at this point is remediation strictly a

98
00:04:12,000 --> 00:04:14,400
technical matter we will discuss that as

99
00:04:14,400 --> 00:04:15,760
we move through the

100
00:04:15,760 --> 00:04:18,238
the process of this presentation but i

101
00:04:18,238 --> 00:04:19,600
would really appreciate if you could

102
00:04:19,600 --> 00:04:21,839
keep that in the back of your heads it's

103
00:04:21,839 --> 00:04:23,840
definitely one of the themes underlying

104
00:04:23,840 --> 00:04:25,360
this session

105
00:04:25,360 --> 00:04:26,880
so what are the key

106
00:04:26,880 --> 00:04:29,440
challenges that one could associate with

107
00:04:29,440 --> 00:04:31,680
remediation in general i think that

108
00:04:31,680 --> 00:04:34,080
basically one could highlight them as

109
00:04:34,080 --> 00:04:38,080
being three main issues scale knowledge

110
00:04:38,080 --> 00:04:40,639
and clarity or perhaps lack thereof with

111
00:04:40,639 --> 00:04:42,800
regard to the first item here i think

112
00:04:42,800 --> 00:04:44,960
that one of the items that pops to mind

113
00:04:44,960 --> 00:04:46,479
has to do with the fact that there is a

114
00:04:46,479 --> 00:04:50,080
discrepancy between the a bandwidth

115
00:04:50,080 --> 00:04:52,560
associated with development compared to

116
00:04:52,560 --> 00:04:55,280
that of apsec now

117
00:04:55,280 --> 00:04:57,199
some people will probably consider

118
00:04:57,199 --> 00:05:00,080
having a ratio of 10 to 1 to be pretty

119
00:05:00,080 --> 00:05:02,160
optimistic and they would be right but

120
00:05:02,160 --> 00:05:04,160
in most cases this is really an

121
00:05:04,160 --> 00:05:06,400
optimistic case because the ratio

122
00:05:06,400 --> 00:05:08,400
observed is more likely to be something

123
00:05:08,400 --> 00:05:12,000
in the neighborhood of 50 to 100 to 1

124
00:05:12,000 --> 00:05:15,840
and i must say that even 1 000 to 1

125
00:05:15,840 --> 00:05:18,320
extreme as it may sound is not

126
00:05:18,320 --> 00:05:20,880
unfortunately an outlier

127
00:05:20,880 --> 00:05:23,199
moving on to the to the question of

128
00:05:23,199 --> 00:05:25,280
security acumen i think that it gets

129
00:05:25,280 --> 00:05:28,639
accentuated here because given the

130
00:05:28,639 --> 00:05:32,240
inexorable amount in march of technology

131
00:05:32,240 --> 00:05:34,880
security is a moving target and

132
00:05:34,880 --> 00:05:37,360
it is not a given to possess the

133
00:05:37,360 --> 00:05:39,840
knowledge associated with security that

134
00:05:39,840 --> 00:05:41,600
would be of demand whenever we need to

135
00:05:41,600 --> 00:05:44,000
deal with remediation so relegating such

136
00:05:44,000 --> 00:05:46,240
a responsibility to people who might not

137
00:05:46,240 --> 00:05:48,639
possess this type of knowledge is not

138
00:05:48,639 --> 00:05:51,520
only a daunting experience for them but

139
00:05:51,520 --> 00:05:53,759
they could prove to be extremely

140
00:05:53,759 --> 00:05:56,560
ineffective let alone inefficient

141
00:05:56,560 --> 00:05:59,600
and finally when we look at the last

142
00:05:59,600 --> 00:06:03,280
item on this list noise well noise is

143
00:06:03,280 --> 00:06:05,919
probably a byproduct of having yet

144
00:06:05,919 --> 00:06:08,560
another facet that incurs a

145
00:06:08,560 --> 00:06:10,639
certain level of overhead and that is

146
00:06:10,639 --> 00:06:13,120
whenever we have false positive results

147
00:06:13,120 --> 00:06:15,120
they definitely do not contribute to the

148
00:06:15,120 --> 00:06:17,199
process of remediation because even

149
00:06:17,199 --> 00:06:19,919
though we might end up with a proper

150
00:06:19,919 --> 00:06:23,120
remediation so to say to such a case

151
00:06:23,120 --> 00:06:25,280
what way what did we manage actually to

152
00:06:25,280 --> 00:06:27,840
solve it's a false positive and it adds

153
00:06:27,840 --> 00:06:31,120
more noise rather than reducing that

154
00:06:31,120 --> 00:06:33,440
i think that to complement this picture

155
00:06:33,440 --> 00:06:35,919
it would be of extreme value to a look

156
00:06:35,919 --> 00:06:38,080
at some of the operational challenges

157
00:06:38,080 --> 00:06:41,120
that developers are most likely facing

158
00:06:41,120 --> 00:06:42,880
and the

159
00:06:42,880 --> 00:06:44,319
even though

160
00:06:44,319 --> 00:06:46,560
probably some of you may not necessarily

161
00:06:46,560 --> 00:06:48,160
associate each and every one of the

162
00:06:48,160 --> 00:06:49,759
items in this list is something that

163
00:06:49,759 --> 00:06:51,680
they're more familiar with

164
00:06:51,680 --> 00:06:54,479
i i would contend that for the most part

165
00:06:54,479 --> 00:06:57,199
there is a lot of similarity and i'm not

166
00:06:57,199 --> 00:06:58,960
going to discuss each and every one of

167
00:06:58,960 --> 00:07:01,360
those items i'm probably going to just

168
00:07:01,360 --> 00:07:03,280
run through that hoping that you will

169
00:07:03,280 --> 00:07:05,599
find some way to get yourself immersed

170
00:07:05,599 --> 00:07:07,280
in the process here because

171
00:07:07,280 --> 00:07:09,199
unfortunately this is something that

172
00:07:09,199 --> 00:07:11,919
many many developers if not all need to

173
00:07:11,919 --> 00:07:14,479
spend time over at some point from

174
00:07:14,479 --> 00:07:17,840
reviewing an issue when it pops up and

175
00:07:17,840 --> 00:07:20,160
hopefully being able to prioritize that

176
00:07:20,160 --> 00:07:22,960
in a sensible manner trying to validate

177
00:07:22,960 --> 00:07:25,039
the issue that they have just to make

178
00:07:25,039 --> 00:07:26,880
sure that it may it

179
00:07:26,880 --> 00:07:30,800
is not necessarily a false positive then

180
00:07:30,800 --> 00:07:33,599
and this is a a critical part

181
00:07:33,599 --> 00:07:36,080
researching the correct fix approach

182
00:07:36,080 --> 00:07:38,240
this is anything but a given it's not

183
00:07:38,240 --> 00:07:40,479
straightforward and it requires an

184
00:07:40,479 --> 00:07:43,759
immense amount of focus dedication and

185
00:07:43,759 --> 00:07:46,240
as i already mentioned knowledge now

186
00:07:46,240 --> 00:07:47,280
this

187
00:07:47,280 --> 00:07:49,120
by all means is not the most difficult

188
00:07:49,120 --> 00:07:51,919
part because in my opinion once you

189
00:07:51,919 --> 00:07:53,919
happen to have something that looks good

190
00:07:53,919 --> 00:07:55,759
enough then you need to establish what

191
00:07:55,759 --> 00:07:57,520
would be the preferred way to fix the

192
00:07:57,520 --> 00:08:00,400
issue at hand and finally if this were

193
00:08:00,400 --> 00:08:02,639
to be the only issue then comes the next

194
00:08:02,639 --> 00:08:05,120
one which is confirming that the fix

195
00:08:05,120 --> 00:08:07,199
just being applied is actually the

196
00:08:07,199 --> 00:08:10,319
correct one if there is any any stamina

197
00:08:10,319 --> 00:08:12,400
left at this moment one would be

198
00:08:12,400 --> 00:08:15,199
expected to record the fixed details so

199
00:08:15,199 --> 00:08:17,680
that not just for posterity but even for

200
00:08:17,680 --> 00:08:20,160
the particular case of that user in

201
00:08:20,160 --> 00:08:23,039
order for a next issue coming up and

202
00:08:23,039 --> 00:08:26,639
happening to and and just a having the

203
00:08:26,639 --> 00:08:29,120
similar enough profile would not require

204
00:08:29,120 --> 00:08:31,360
us to go through all of this profit all

205
00:08:31,360 --> 00:08:33,919
of this process this regular rigmarole

206
00:08:33,919 --> 00:08:35,440
again

207
00:08:35,440 --> 00:08:37,760
what is the effort for a single fix now

208
00:08:37,760 --> 00:08:39,599
i know that some of you just inspecting

209
00:08:39,599 --> 00:08:41,599
this figure would

210
00:08:41,599 --> 00:08:43,760
go back and say come on this is not a

211
00:08:43,760 --> 00:08:46,560
realistic figure but as it so happens

212
00:08:46,560 --> 00:08:48,959
studies may show that this is actually a

213
00:08:48,959 --> 00:08:51,519
very viable indication of the time it

214
00:08:51,519 --> 00:08:53,920
would take should you actually

215
00:08:53,920 --> 00:08:55,760
encapsulate the time each of these

216
00:08:55,760 --> 00:08:58,240
processes that are outlined here

217
00:08:58,240 --> 00:09:01,279
are a provided and then concatenate them

218
00:09:01,279 --> 00:09:03,760
into a single chunk that is a very

219
00:09:03,760 --> 00:09:06,399
optimistic thing because as most of you

220
00:09:06,399 --> 00:09:09,040
obviously know there is a very diff a

221
00:09:09,040 --> 00:09:10,800
very large difference between the time

222
00:09:10,800 --> 00:09:13,279
it would take to deal directly with an

223
00:09:13,279 --> 00:09:15,600
issue at hand and the time it would most

224
00:09:15,600 --> 00:09:18,560
likely take for the issue since it to a

225
00:09:18,560 --> 00:09:21,200
go through the process from where it was

226
00:09:21,200 --> 00:09:23,600
discovered and up until it is fully

227
00:09:23,600 --> 00:09:25,680
solved in such a case we're not talking

228
00:09:25,680 --> 00:09:27,680
about half a day we're not talking about

229
00:09:27,680 --> 00:09:29,920
half a week we're not even talking about

230
00:09:29,920 --> 00:09:32,880
half a month and to be honest and

231
00:09:32,880 --> 00:09:35,839
unfortunately in some cases we are not

232
00:09:35,839 --> 00:09:38,160
even talking about half a year this is

233
00:09:38,160 --> 00:09:42,000
probably one of the more uh deplorable

234
00:09:42,000 --> 00:09:44,959
aspects of dealing with remediation

235
00:09:44,959 --> 00:09:48,560
without using some kind of a process but

236
00:09:48,560 --> 00:09:52,399
rather a betting on a best practices so

237
00:09:52,399 --> 00:09:55,360
to say that might enable us to deal with

238
00:09:55,360 --> 00:09:58,240
them in what is hoped to be a mostly a

239
00:09:58,240 --> 00:10:00,880
mostly optimistic approach

240
00:10:00,880 --> 00:10:02,720
i think that part of the key problem

241
00:10:02,720 --> 00:10:04,880
here is that even though it is presented

242
00:10:04,880 --> 00:10:07,360
as a list there is a lot of creativity

243
00:10:07,360 --> 00:10:09,760
associated with this thing and this is

244
00:10:09,760 --> 00:10:12,160
really the perfect place to move to the

245
00:10:12,160 --> 00:10:14,560
next item here which is well what

246
00:10:14,560 --> 00:10:17,120
automatic remediation is all about

247
00:10:17,120 --> 00:10:18,480
in my opinion

248
00:10:18,480 --> 00:10:21,040
it's really about transforming what i

249
00:10:21,040 --> 00:10:23,760
consider to be the art of remediation

250
00:10:23,760 --> 00:10:25,600
into a best practice

251
00:10:25,600 --> 00:10:27,680
yes indeed dealing currently with

252
00:10:27,680 --> 00:10:30,640
remediation has many facets that are

253
00:10:30,640 --> 00:10:35,120
redolent of re of art we need to be it

254
00:10:35,120 --> 00:10:37,519
we we are subjecting the process to a

255
00:10:37,519 --> 00:10:40,560
sincere level of interpretation it is

256
00:10:40,560 --> 00:10:44,240
not consistent it is also

257
00:10:44,240 --> 00:10:47,440
unpredictable and it definitely does not

258
00:10:47,440 --> 00:10:49,279
give you any guarantee of the end

259
00:10:49,279 --> 00:10:51,760
results now some of these facets might

260
00:10:51,760 --> 00:10:53,920
not seem that alarming but when we are

261
00:10:53,920 --> 00:10:56,240
looking at the organizational scope of

262
00:10:56,240 --> 00:10:58,320
the issue we would definitely prefer

263
00:10:58,320 --> 00:11:00,399
there to be a process that would provide

264
00:11:00,399 --> 00:11:02,959
us with some level of guarantee here

265
00:11:02,959 --> 00:11:04,560
so what is the promise of auto

266
00:11:04,560 --> 00:11:06,240
remediation

267
00:11:06,240 --> 00:11:08,320
aside from outlining what you see here

268
00:11:08,320 --> 00:11:10,399
as the three main items i think that

269
00:11:10,399 --> 00:11:12,079
first and foremost it's about better

270
00:11:12,079 --> 00:11:14,560
software security and it's not really

271
00:11:14,560 --> 00:11:17,519
just about providing a point solution to

272
00:11:17,519 --> 00:11:20,079
a given problem if you look at the first

273
00:11:20,079 --> 00:11:22,320
item here that is captured standardized

274
00:11:22,320 --> 00:11:25,440
fixed approach it's about providing some

275
00:11:25,440 --> 00:11:28,399
way to facilitate the process of

276
00:11:28,399 --> 00:11:31,200
remediation not just to provide an end

277
00:11:31,200 --> 00:11:33,519
solution or something that could be

278
00:11:33,519 --> 00:11:36,399
simply pasted on top of the problem that

279
00:11:36,399 --> 00:11:39,120
we have why is it because it is

280
00:11:39,120 --> 00:11:41,600
ultimately believed that we are not just

281
00:11:41,600 --> 00:11:44,160
carrying out a mundane effort or

282
00:11:44,160 --> 00:11:46,240
remediating issues but we would like to

283
00:11:46,240 --> 00:11:48,480
get more and more into a state of mind

284
00:11:48,480 --> 00:11:50,800
where remediation is really something

285
00:11:50,800 --> 00:11:53,200
that accompanies the developer it's not

286
00:11:53,200 --> 00:11:54,880
a one-off it's not just something that

287
00:11:54,880 --> 00:11:57,360
you do occasionally it happens to

288
00:11:57,360 --> 00:11:59,839
command a significant part of the

289
00:11:59,839 --> 00:12:01,839
developers or whoever is involved in

290
00:12:01,839 --> 00:12:04,639
such a such an effort of their time and

291
00:12:04,639 --> 00:12:06,639
standardized fixed approach concerns

292
00:12:06,639 --> 00:12:09,760
triaging prioritization things that auto

293
00:12:09,760 --> 00:12:12,160
remediation is definitely associated

294
00:12:12,160 --> 00:12:14,959
with obviously the ability to reduce the

295
00:12:14,959 --> 00:12:17,440
number of unattended issues comes with

296
00:12:17,440 --> 00:12:20,639
comes to no surprise and of course prior

297
00:12:20,639 --> 00:12:23,680
to release agility and productivity are

298
00:12:23,680 --> 00:12:26,320
mainly about combating the security

299
00:12:26,320 --> 00:12:28,560
knowledge gap that was mentioned earlier

300
00:12:28,560 --> 00:12:30,639
but also better allocation of the

301
00:12:30,639 --> 00:12:32,560
bandwidth that is associated with

302
00:12:32,560 --> 00:12:34,959
resources now this is not necessarily

303
00:12:34,959 --> 00:12:36,399
the resources that you may have thought

304
00:12:36,399 --> 00:12:38,480
about and not necessarily pointing at

305
00:12:38,480 --> 00:12:41,120
the developer a developer team here i'm

306
00:12:41,120 --> 00:12:44,399
actually talking about apsec app apsec

307
00:12:44,399 --> 00:12:46,480
is much more restricted in terms of its

308
00:12:46,480 --> 00:12:48,880
bandwidth and being able to focus to

309
00:12:48,880 --> 00:12:51,040
funnel their effort on things that

310
00:12:51,040 --> 00:12:53,680
matter in terms of their complexity

311
00:12:53,680 --> 00:12:56,399
there are many uh security related

312
00:12:56,399 --> 00:12:58,320
facets that do not necessarily

313
00:12:58,320 --> 00:13:02,320
necessitate a a processes that often

314
00:13:02,320 --> 00:13:05,760
take their time and being able to

315
00:13:05,760 --> 00:13:08,480
concentrate their effort on those very

316
00:13:08,480 --> 00:13:10,800
issues would be of extreme value to an

317
00:13:10,800 --> 00:13:13,279
organization and finally it goes without

318
00:13:13,279 --> 00:13:15,360
saying that better team efficiency is a

319
00:13:15,360 --> 00:13:17,519
byproduct of what we have here in order

320
00:13:17,519 --> 00:13:20,800
to reduce the overhead but

321
00:13:20,800 --> 00:13:23,360
i would be a miss if not to mention the

322
00:13:23,360 --> 00:13:25,600
matter of trust here trust is an

323
00:13:25,600 --> 00:13:28,399
important thing because developers even

324
00:13:28,399 --> 00:13:30,560
though the pro the promise of auto

325
00:13:30,560 --> 00:13:33,519
remediation is alluring it is enticing

326
00:13:33,519 --> 00:13:35,760
developers let's be frank

327
00:13:35,760 --> 00:13:38,160
might not necessarily

328
00:13:38,160 --> 00:13:41,600
accept that easily let alone countenance

329
00:13:41,600 --> 00:13:44,320
let alone endorse it and the reason is

330
00:13:44,320 --> 00:13:46,959
because there is a trust barrier

331
00:13:46,959 --> 00:13:48,720
there would be some concern about

332
00:13:48,720 --> 00:13:51,839
whether or not a a process that

333
00:13:51,839 --> 00:13:54,160
autonomously pushes changes into our

334
00:13:54,160 --> 00:13:55,760
code would not

335
00:13:55,760 --> 00:13:59,839
perhaps inadvertently wreak havoc in our

336
00:13:59,839 --> 00:14:02,079
cherished code base that is something

337
00:14:02,079 --> 00:14:06,000
that developers are less likely to er to

338
00:14:06,000 --> 00:14:07,760
cope with and

339
00:14:07,760 --> 00:14:09,760
auto remediation must

340
00:14:09,760 --> 00:14:12,160
must be designed to accommodate that

341
00:14:12,160 --> 00:14:15,440
requirement can that be done most likely

342
00:14:15,440 --> 00:14:17,839
how here are some of the ideas that

343
00:14:17,839 --> 00:14:20,480
could probably give you foot of thought

344
00:14:20,480 --> 00:14:23,519
how auto remediation could consider

345
00:14:23,519 --> 00:14:25,519
making a contribution on the

346
00:14:25,519 --> 00:14:27,600
trustworthiness front

347
00:14:27,600 --> 00:14:30,560
it starts from being there simply being

348
00:14:30,560 --> 00:14:33,279
there it should not be just on demand as

349
00:14:33,279 --> 00:14:35,199
a reactive approach that many might

350
00:14:35,199 --> 00:14:38,160
consider to be sensible it needs to pop

351
00:14:38,160 --> 00:14:40,160
up and to be proactive whenever it

352
00:14:40,160 --> 00:14:42,560
senses that there is something that is

353
00:14:42,560 --> 00:14:45,440
worthy of providing some insight i

354
00:14:45,440 --> 00:14:47,600
actually went ahead of myself because

355
00:14:47,600 --> 00:14:49,360
inside is part of the items that you

356
00:14:49,360 --> 00:14:51,760
will see in a moment accuracy is not

357
00:14:51,760 --> 00:14:53,760
just about providing the right fix that

358
00:14:53,760 --> 00:14:55,680
would be really go it goes without

359
00:14:55,680 --> 00:14:58,320
saying we're talking about noise here

360
00:14:58,320 --> 00:15:00,480
not adding noise but actually being able

361
00:15:00,480 --> 00:15:02,000
to reduce noise

362
00:15:02,000 --> 00:15:04,639
an ambiguity is a critical part here

363
00:15:04,639 --> 00:15:05,519
because

364
00:15:05,519 --> 00:15:07,680
providing more than just one option for

365
00:15:07,680 --> 00:15:10,639
a fix is not necessarily bad as long as

366
00:15:10,639 --> 00:15:12,639
they do not compete with each other and

367
00:15:12,639 --> 00:15:14,720
as long as they make perfect sense as

368
00:15:14,720 --> 00:15:18,160
far as what they aim to achieve is

369
00:15:18,160 --> 00:15:20,800
understood by the developer

370
00:15:20,800 --> 00:15:23,600
i mentioned insightfulness earlier and

371
00:15:23,600 --> 00:15:25,760
the idea here is that when when you look

372
00:15:25,760 --> 00:15:28,560
at a human a advisor

373
00:15:28,560 --> 00:15:30,880
you would probably make

374
00:15:30,880 --> 00:15:33,040
make a point that the

375
00:15:33,040 --> 00:15:35,839
trustworthiness of a human advisor lies

376
00:15:35,839 --> 00:15:38,399
to a great deal in an ability to give

377
00:15:38,399 --> 00:15:40,240
you something to think about that you

378
00:15:40,240 --> 00:15:42,240
may not have necessarily thought about

379
00:15:42,240 --> 00:15:45,440
earlier that particular genetic genes

380
00:15:45,440 --> 00:15:49,040
acquire that is a one of the a i would

381
00:15:49,040 --> 00:15:51,680
say the low stones of a trustworthiness

382
00:15:51,680 --> 00:15:54,000
that's interesting i'd like to use that

383
00:15:54,000 --> 00:15:55,920
i would like to actually approach that

384
00:15:55,920 --> 00:15:58,480
person next time because their way of

385
00:15:58,480 --> 00:16:01,839
thinking is is very collaborable it

386
00:16:01,839 --> 00:16:03,360
actually connects very well with what

387
00:16:03,360 --> 00:16:05,279
i'm trying to achieve having that

388
00:16:05,279 --> 00:16:07,680
ability as part of auto remediation is

389
00:16:07,680 --> 00:16:09,600
not science fiction it's actually

390
00:16:09,600 --> 00:16:11,440
something that goes hand in hand with

391
00:16:11,440 --> 00:16:14,000
the experience that a solution can come

392
00:16:14,000 --> 00:16:16,800
up with because when you observe what

393
00:16:16,800 --> 00:16:18,959
took place from the earliest point in

394
00:16:18,959 --> 00:16:20,800
time when the solution was brought into

395
00:16:20,800 --> 00:16:23,040
play having that perspective could

396
00:16:23,040 --> 00:16:25,040
provide you with the ability to provide

397
00:16:25,040 --> 00:16:28,320
suggestions that garner more trust from

398
00:16:28,320 --> 00:16:29,680
the end user

399
00:16:29,680 --> 00:16:31,199
but all of this would really be

400
00:16:31,199 --> 00:16:33,519
worthless if not for the ability to

401
00:16:33,519 --> 00:16:35,680
drive results and that's why it's

402
00:16:35,680 --> 00:16:38,000
captured as it is

403
00:16:38,000 --> 00:16:40,240
let's see a couple of examples here the

404
00:16:40,240 --> 00:16:43,680
first example is a concerns injection

405
00:16:43,680 --> 00:16:46,320
and you can see here how the

406
00:16:46,320 --> 00:16:48,800
how a a particular piece of data the

407
00:16:48,800 --> 00:16:51,920
user name has been entered and is

408
00:16:51,920 --> 00:16:55,040
expected to be used as part of a sql

409
00:16:55,040 --> 00:16:58,320
query to the database another another

410
00:16:58,320 --> 00:17:00,079
example which is

411
00:17:00,079 --> 00:17:01,839
similar in spirit although here we have

412
00:17:01,839 --> 00:17:03,839
something more closer to a path

413
00:17:03,839 --> 00:17:06,640
traversal a vulnerability is the case

414
00:17:06,640 --> 00:17:08,480
where still we have something that is

415
00:17:08,480 --> 00:17:11,280
obtained from outside of the application

416
00:17:11,280 --> 00:17:13,760
but here in this case the file name is

417
00:17:13,760 --> 00:17:17,199
to be sent to a certain target now

418
00:17:17,199 --> 00:17:20,000
despite the similarities what actually i

419
00:17:20,000 --> 00:17:22,000
would like to point at is the fact that

420
00:17:22,000 --> 00:17:24,319
in both of those cases we have something

421
00:17:24,319 --> 00:17:26,480
that entered the system and is being

422
00:17:26,480 --> 00:17:29,679
used the big question here is whether or

423
00:17:29,679 --> 00:17:32,799
not the developer placed the proper

424
00:17:32,799 --> 00:17:36,080
neutralization of the potential damage

425
00:17:36,080 --> 00:17:38,320
or vulnerability what is otherwise

426
00:17:38,320 --> 00:17:40,720
commonly known as sanitization

427
00:17:40,720 --> 00:17:43,200
as part of the process here in this

428
00:17:43,200 --> 00:17:45,679
particular example which is really

429
00:17:45,679 --> 00:17:47,679
pseudo code you can see that it is not

430
00:17:47,679 --> 00:17:50,320
so and from the source to the sink a

431
00:17:50,320 --> 00:17:52,400
critical part that is missing is the

432
00:17:52,400 --> 00:17:55,039
sanitizer the sanitizer would be

433
00:17:55,039 --> 00:17:56,640
expected to be something pretty

434
00:17:56,640 --> 00:17:58,559
straightforward right at least with

435
00:17:58,559 --> 00:18:00,799
those who are less familiar with the

436
00:18:00,799 --> 00:18:03,840
overall concept of a remediation however

437
00:18:03,840 --> 00:18:05,600
when we need to deal with automatic

438
00:18:05,600 --> 00:18:08,240
remediation this issue becomes much more

439
00:18:08,240 --> 00:18:10,880
significant because here there are much

440
00:18:10,880 --> 00:18:12,720
more questions that need be not just

441
00:18:12,720 --> 00:18:15,440
asked but answered as well how should

442
00:18:15,440 --> 00:18:18,000
sanitation sanitization look like

443
00:18:18,000 --> 00:18:20,880
importantly where should it be placed

444
00:18:20,880 --> 00:18:23,200
how should new arguments be inserted how

445
00:18:23,200 --> 00:18:25,840
should sanitization be annotated and can

446
00:18:25,840 --> 00:18:28,480
sanitization inadvertently changed the

447
00:18:28,480 --> 00:18:31,280
logic of the application

448
00:18:31,280 --> 00:18:33,520
most developers don't really or perhaps

449
00:18:33,520 --> 00:18:35,840
even can't give a second thought about

450
00:18:35,840 --> 00:18:38,320
preserving such a knowledge and that

451
00:18:38,320 --> 00:18:40,000
actually comes into play when you look

452
00:18:40,000 --> 00:18:41,919
at the approaches that are currently

453
00:18:41,919 --> 00:18:43,840
used leveraged

454
00:18:43,840 --> 00:18:46,480
to provide remediation facilitated

455
00:18:46,480 --> 00:18:49,200
remediation in a traditional manner goes

456
00:18:49,200 --> 00:18:51,919
from explaining explaining the security

457
00:18:51,919 --> 00:18:54,240
issue to highlighting the issue a

458
00:18:54,240 --> 00:18:56,880
location then comes the key part

459
00:18:56,880 --> 00:18:58,720
guidance how you should really address

460
00:18:58,720 --> 00:19:01,919
that and in many cases i would say that

461
00:19:01,919 --> 00:19:06,080
it is an apotheosis of you know the

462
00:19:06,080 --> 00:19:07,039
the

463
00:19:07,039 --> 00:19:08,640
a

464
00:19:08,640 --> 00:19:10,480
when you when you want to provide

465
00:19:10,480 --> 00:19:13,360
something uh that explains the issue but

466
00:19:13,360 --> 00:19:16,000
it ends up confounding the person and

467
00:19:16,000 --> 00:19:18,160
providing something that is not

468
00:19:18,160 --> 00:19:20,720
necessarily helping which is actually

469
00:19:20,720 --> 00:19:22,240
something pretty similar to what i

470
00:19:22,240 --> 00:19:24,880
inadvertently did right now finally we

471
00:19:24,880 --> 00:19:26,960
have the example the example is

472
00:19:26,960 --> 00:19:29,440
something that is expected to provide

473
00:19:29,440 --> 00:19:31,600
the highlight here here is the aha

474
00:19:31,600 --> 00:19:33,520
moment here is how one needs to deal

475
00:19:33,520 --> 00:19:35,600
with the issue however

476
00:19:35,600 --> 00:19:37,360
i call this the training approach

477
00:19:37,360 --> 00:19:39,679
because the training approach bombards

478
00:19:39,679 --> 00:19:41,760
the end user with a lot of information a

479
00:19:41,760 --> 00:19:44,240
virtual flashlight a

480
00:19:44,240 --> 00:19:47,039
virtual a magnifying glass

481
00:19:47,039 --> 00:19:49,360
presentations research material

482
00:19:49,360 --> 00:19:51,760
everything which is unfortunately and

483
00:19:51,760 --> 00:19:54,960
honestly irrelevant to what most of the

484
00:19:54,960 --> 00:19:56,559
developers would be looking at that

485
00:19:56,559 --> 00:19:58,640
point their aim is not to become an

486
00:19:58,640 --> 00:20:01,200
expert their aim is to solve the matter

487
00:20:01,200 --> 00:20:03,280
at hand and the way things need to be

488
00:20:03,280 --> 00:20:05,280
adopted and this is how automatic

489
00:20:05,280 --> 00:20:06,400
remediation

490
00:20:06,400 --> 00:20:08,720
is sets out to do is

491
00:20:08,720 --> 00:20:11,280
is embracing a developer's standpoint a

492
00:20:11,280 --> 00:20:14,000
developer perspective

493
00:20:14,000 --> 00:20:16,559
where you actually aim to have some kind

494
00:20:16,559 --> 00:20:18,559
of understanding what the issue was what

495
00:20:18,559 --> 00:20:21,039
the impact is projected to be and

496
00:20:21,039 --> 00:20:23,120
importantly and it's not just placed

497
00:20:23,120 --> 00:20:24,880
here on the top of the head it's

498
00:20:24,880 --> 00:20:26,720
actually confirmation that we have

499
00:20:26,720 --> 00:20:29,120
something that will work

500
00:20:29,120 --> 00:20:31,120
the high level view of the process here

501
00:20:31,120 --> 00:20:33,600
would look very familiar to most of you

502
00:20:33,600 --> 00:20:35,760
it starts with the coding moving to the

503
00:20:35,760 --> 00:20:38,799
build process then having the system

504
00:20:38,799 --> 00:20:41,600
automatically run a scan which will then

505
00:20:41,600 --> 00:20:44,000
divulgate to something that combines

506
00:20:44,000 --> 00:20:46,720
triaging with a generation of tickets

507
00:20:46,720 --> 00:20:48,960
the remediation process and finally

508
00:20:48,960 --> 00:20:51,200
ending up with the details that we see

509
00:20:51,200 --> 00:20:53,200
on our screens

510
00:20:53,200 --> 00:20:55,360
the detailed view of that would have a

511
00:20:55,360 --> 00:20:57,679
detection facility next to the

512
00:20:57,679 --> 00:20:59,520
remediation and more particularly the

513
00:20:59,520 --> 00:21:01,280
auto remediation part

514
00:21:01,280 --> 00:21:03,120
the purpose of the detection is to be

515
00:21:03,120 --> 00:21:06,080
the source truth for cwe detection which

516
00:21:06,080 --> 00:21:07,760
is another way of saying that the

517
00:21:07,760 --> 00:21:09,840
details concerning the variables the

518
00:21:09,840 --> 00:21:12,320
sources the sinks and the metadata

519
00:21:12,320 --> 00:21:15,120
associated associated with them needs be

520
00:21:15,120 --> 00:21:17,360
provided to auto remediation or

521
00:21:17,360 --> 00:21:19,440
remediation is a consumer of such

522
00:21:19,440 --> 00:21:22,000
information and as you can see here the

523
00:21:22,000 --> 00:21:24,400
way things could be extracted from

524
00:21:24,400 --> 00:21:25,760
detection here could be through a

525
00:21:25,760 --> 00:21:28,799
variety of formats serif being just one

526
00:21:28,799 --> 00:21:31,200
mere example for doing so with the

527
00:21:31,200 --> 00:21:33,840
details concerning profile code location

528
00:21:33,840 --> 00:21:36,880
code race among other things the main

529
00:21:36,880 --> 00:21:38,720
purpose of auto remediation would be to

530
00:21:38,720 --> 00:21:40,080
come up with the analysis and

531
00:21:40,080 --> 00:21:42,240
recommendations not just for the

532
00:21:42,240 --> 00:21:45,520
solution but for the annotations for the

533
00:21:45,520 --> 00:21:48,480
placement and for what kind of actions

534
00:21:48,480 --> 00:21:50,720
need be placed in order to streamline

535
00:21:50,720 --> 00:21:53,440
the process into fruition and finally

536
00:21:53,440 --> 00:21:55,520
the information will be passed on to

537
00:21:55,520 --> 00:21:57,600
whatever choice the end user made

538
00:21:57,600 --> 00:22:00,240
whether it is ide integration or through

539
00:22:00,240 --> 00:22:03,039
the ci cd like a integration where you

540
00:22:03,039 --> 00:22:05,039
have a pull request and there is an

541
00:22:05,039 --> 00:22:07,440
optional item here which is to actually

542
00:22:07,440 --> 00:22:10,320
carry out validation for the recommended

543
00:22:10,320 --> 00:22:13,200
auto remediation fix so that you could

544
00:22:13,200 --> 00:22:15,120
make it you could be sure that

545
00:22:15,120 --> 00:22:17,600
everything was closed very neatly

546
00:22:17,600 --> 00:22:20,400
let's now move to a slightly more

547
00:22:20,400 --> 00:22:22,640
detailed example than the one we've seen

548
00:22:22,640 --> 00:22:25,120
earlier in this case this is no longer

549
00:22:25,120 --> 00:22:28,480
pseudo code now we're seeing a java code

550
00:22:28,480 --> 00:22:30,960
where it is very similar in spirit to

551
00:22:30,960 --> 00:22:33,200
what we've seen earlier but with a bit

552
00:22:33,200 --> 00:22:36,080
more detail to it and here again we see

553
00:22:36,080 --> 00:22:38,000
the external part that needs to be

554
00:22:38,000 --> 00:22:40,240
neutralized in this case it's called you

555
00:22:40,240 --> 00:22:43,600
name and we have the connection object

556
00:22:43,600 --> 00:22:44,400
that

557
00:22:44,400 --> 00:22:48,559
happens to be the a focus of the query a

558
00:22:48,559 --> 00:22:51,520
method on top of that now as you can

559
00:22:51,520 --> 00:22:53,360
tell here

560
00:22:53,360 --> 00:22:55,600
there is no proper sanitization of

561
00:22:55,600 --> 00:22:57,200
anything

562
00:22:57,200 --> 00:22:59,440
the main objective of an auto

563
00:22:59,440 --> 00:23:02,240
remediation would carry out changes that

564
00:23:02,240 --> 00:23:03,840
will end up being

565
00:23:03,840 --> 00:23:06,400
modifying the exhaust the code so that

566
00:23:06,400 --> 00:23:09,039
some of the items would be removed other

567
00:23:09,039 --> 00:23:11,440
items would be added now

568
00:23:11,440 --> 00:23:13,200
those of you who may not

569
00:23:13,200 --> 00:23:15,200
probably give a second look at the

570
00:23:15,200 --> 00:23:17,679
details here might say this looks to be

571
00:23:17,679 --> 00:23:20,240
pretty straightforward right well even

572
00:23:20,240 --> 00:23:22,640
though this is a pretty simplistic case

573
00:23:22,640 --> 00:23:24,720
i would like to point you at some of the

574
00:23:24,720 --> 00:23:27,520
nuances here that are anything but

575
00:23:27,520 --> 00:23:30,000
trivial for instance first of all

576
00:23:30,000 --> 00:23:31,840
thinking about the approach even though

577
00:23:31,840 --> 00:23:33,840
in this particular case we see the use

578
00:23:33,840 --> 00:23:36,320
of a prepared statement which is a way

579
00:23:36,320 --> 00:23:38,559
of using something that could sanitize

580
00:23:38,559 --> 00:23:41,760
by virtue of a pre-compiled statement

581
00:23:41,760 --> 00:23:44,799
that then could not be uh could not

582
00:23:44,799 --> 00:23:48,159
could not be exploited by the external

583
00:23:48,159 --> 00:23:50,799
input because it would only be limited

584
00:23:50,799 --> 00:23:51,760
to the

585
00:23:51,760 --> 00:23:54,159
parameter that is in question and this

586
00:23:54,159 --> 00:23:56,400
is by the way a means that could be used

587
00:23:56,400 --> 00:23:59,120
not necessarily for sanitization

588
00:23:59,120 --> 00:24:01,200
but for performance reasons as well but

589
00:24:01,200 --> 00:24:03,200
there could be other approaches here one

590
00:24:03,200 --> 00:24:05,200
could consider sanitization of the

591
00:24:05,200 --> 00:24:07,440
external input one could even focus

592
00:24:07,440 --> 00:24:09,200
their efforts on authorization

593
00:24:09,200 --> 00:24:11,600
mechanisms that could reduce

594
00:24:11,600 --> 00:24:13,760
significantly the likelihood for

595
00:24:13,760 --> 00:24:16,400
vulnerability exploits in this case but

596
00:24:16,400 --> 00:24:18,240
let's go back to the example that we

597
00:24:18,240 --> 00:24:20,640
have here and look very closely into the

598
00:24:20,640 --> 00:24:23,679
details you will see that not only were

599
00:24:23,679 --> 00:24:26,400
just mere sentences removed and replaced

600
00:24:26,400 --> 00:24:28,720
by other things there was a very careful

601
00:24:28,720 --> 00:24:31,679
attention here to make use of similar

602
00:24:31,679 --> 00:24:34,240
variables and those variables need to be

603
00:24:34,240 --> 00:24:36,960
placed in some cases within parenthesis

604
00:24:36,960 --> 00:24:39,760
of a methods that were not

605
00:24:39,760 --> 00:24:43,679
trivially or made available earlier so

606
00:24:43,679 --> 00:24:45,520
the decision that needs to come into

607
00:24:45,520 --> 00:24:47,360
play here and again keep in mind this is

608
00:24:47,360 --> 00:24:50,000
an automated process so being able to

609
00:24:50,000 --> 00:24:51,760
make sure that this is done and here

610
00:24:51,760 --> 00:24:54,320
comes the real crux in a manner that

611
00:24:54,320 --> 00:24:56,880
will not look as if a machine did it it

612
00:24:56,880 --> 00:24:59,760
must look as if the developer actually a

613
00:24:59,760 --> 00:25:04,000
developer suggested those changes

614
00:25:04,000 --> 00:25:04,799
so

615
00:25:04,799 --> 00:25:06,720
i think that by looking into such an

616
00:25:06,720 --> 00:25:08,799
example and understanding by the way it

617
00:25:08,799 --> 00:25:10,799
might appear as a casual thing but even

618
00:25:10,799 --> 00:25:13,279
the placement of this of of the new

619
00:25:13,279 --> 00:25:16,000
lines of code here is not just a

620
00:25:16,000 --> 00:25:18,559
serendipitous it just happens to reflect

621
00:25:18,559 --> 00:25:20,640
the particular way of thought that the

622
00:25:20,640 --> 00:25:22,960
application was expected and that is

623
00:25:22,960 --> 00:25:24,960
part of the reason that you can see line

624
00:25:24,960 --> 00:25:27,440
112 here which really serves no purpose

625
00:25:27,440 --> 00:25:30,000
other than than just saying that the

626
00:25:30,000 --> 00:25:32,880
application should be able to look into

627
00:25:32,880 --> 00:25:35,520
the workflow and make a conscious

628
00:25:35,520 --> 00:25:38,480
decision where exactly needs a to place

629
00:25:38,480 --> 00:25:40,840
the actual new a

630
00:25:40,840 --> 00:25:43,440
code of course there are cases where

631
00:25:43,440 --> 00:25:46,400
auto remediation would fit better

632
00:25:46,400 --> 00:25:47,600
than others

633
00:25:47,600 --> 00:25:49,200
and among the

634
00:25:49,200 --> 00:25:51,600
usual suspects we would find cases where

635
00:25:51,600 --> 00:25:54,559
standard sanitizers are being used

636
00:25:54,559 --> 00:25:56,880
obviously that would definitely lift up

637
00:25:56,880 --> 00:25:59,600
the chance the chances for having a

638
00:25:59,600 --> 00:26:02,480
better a remediation because it would

639
00:26:02,480 --> 00:26:04,640
obviously and arguably at least in my

640
00:26:04,640 --> 00:26:07,760
opinion a lift the chances for accuracy

641
00:26:07,760 --> 00:26:10,159
uh the more accurate the solutions are

642
00:26:10,159 --> 00:26:12,240
from the detection system the less

643
00:26:12,240 --> 00:26:15,200
likely remediation could falter but

644
00:26:15,200 --> 00:26:17,760
there are other aspects as well if it is

645
00:26:17,760 --> 00:26:20,080
possible to constrain or to at least

646
00:26:20,080 --> 00:26:22,559
focus the remediation effort on the area

647
00:26:22,559 --> 00:26:24,640
that could be detected prior to build

648
00:26:24,640 --> 00:26:27,520
not that the value of auto remediation

649
00:26:27,520 --> 00:26:30,640
for dynamically detected issues is gain

650
00:26:30,640 --> 00:26:33,600
said it is not so at all but

651
00:26:33,600 --> 00:26:35,760
being able to run processes on things

652
00:26:35,760 --> 00:26:38,640
that could be statically analyzed gives

653
00:26:38,640 --> 00:26:42,559
a very sensible a and decent a

654
00:26:42,559 --> 00:26:45,360
percentage for success here and aside

655
00:26:45,360 --> 00:26:46,880
from that there are some other things

656
00:26:46,880 --> 00:26:48,799
such as remediation location if for

657
00:26:48,799 --> 00:26:50,240
instance there is a preference by the

658
00:26:50,240 --> 00:26:52,960
organization to have a sanitizer that is

659
00:26:52,960 --> 00:26:56,240
located external to the component in

660
00:26:56,240 --> 00:26:58,960
question and the reason being that they

661
00:26:58,960 --> 00:27:00,559
opt for an approach where they have a

662
00:27:00,559 --> 00:27:02,960
central sanitization mechanism instead

663
00:27:02,960 --> 00:27:05,279
of sanitizing wherever there could be a

664
00:27:05,279 --> 00:27:07,919
vulnerability that's a viable approach

665
00:27:07,919 --> 00:27:10,559
but in order to have that addressed by

666
00:27:10,559 --> 00:27:13,200
auto remediation auto remediation must

667
00:27:13,200 --> 00:27:15,919
be smart enough if you will to

668
00:27:15,919 --> 00:27:17,760
consider that or to

669
00:27:17,760 --> 00:27:20,559
fathom that as part of its process and

670
00:27:20,559 --> 00:27:23,279
finally definitely not least we have

671
00:27:23,279 --> 00:27:24,480
here the

672
00:27:24,480 --> 00:27:26,320
consideration of running auto

673
00:27:26,320 --> 00:27:29,279
remediation as close as possible to the

674
00:27:29,279 --> 00:27:32,000
detection phase obviously as time goes

675
00:27:32,000 --> 00:27:34,880
by changes will lurk within the code and

676
00:27:34,880 --> 00:27:37,279
no longer the results from the detection

677
00:27:37,279 --> 00:27:40,240
step may apply

678
00:27:40,240 --> 00:27:41,279
so

679
00:27:41,279 --> 00:27:43,360
there are actually also more client

680
00:27:43,360 --> 00:27:46,000
consideration just very quickly i would

681
00:27:46,000 --> 00:27:47,919
say that the time of a timing of auto

682
00:27:47,919 --> 00:27:50,960
remediation is a pretty critical you can

683
00:27:50,960 --> 00:27:53,200
opt for having it done as close as

684
00:27:53,200 --> 00:27:55,440
possible as part of the environment the

685
00:27:55,440 --> 00:27:58,720
user is actually leveraging the ide but

686
00:27:58,720 --> 00:28:00,640
of course you would probably lack

687
00:28:00,640 --> 00:28:02,640
context and the later you could provide

688
00:28:02,640 --> 00:28:04,240
it even though you're still shifting

689
00:28:04,240 --> 00:28:07,120
left would be of enormous value here

690
00:28:07,120 --> 00:28:09,039
another thing is implementation would

691
00:28:09,039 --> 00:28:11,600
you prefer an ide or a pull request

692
00:28:11,600 --> 00:28:13,760
these are preferences

693
00:28:13,760 --> 00:28:16,399
i mentioned earlier that one of the key

694
00:28:16,399 --> 00:28:19,200
ideas in my opinion for all remediation

695
00:28:19,200 --> 00:28:22,480
kind of transforms us from art into a

696
00:28:22,480 --> 00:28:25,200
best practice this is by no means a

697
00:28:25,200 --> 00:28:28,799
statement that says there should be no

698
00:28:28,799 --> 00:28:31,120
no sense of art or if you will

699
00:28:31,120 --> 00:28:34,480
interpretation or creativity within the

700
00:28:34,480 --> 00:28:38,799
process and i kind of use this

701
00:28:38,799 --> 00:28:39,760
this

702
00:28:39,760 --> 00:28:42,640
reference calling it a concerto in a

703
00:28:42,640 --> 00:28:45,919
major for keyboard and orchestra sorry

704
00:28:45,919 --> 00:28:48,399
orchestration it would be more a apt in

705
00:28:48,399 --> 00:28:50,799
this case and similar in spirit to a

706
00:28:50,799 --> 00:28:52,559
concerto we have three parts here

707
00:28:52,559 --> 00:28:54,640
starting with the quick one where we run

708
00:28:54,640 --> 00:28:56,799
the automation then we move to some

709
00:28:56,799 --> 00:28:58,399
place which is a bit

710
00:28:58,399 --> 00:29:02,000
more imperturbable it is with the advice

711
00:29:02,000 --> 00:29:04,080
you consider that and finally to the

712
00:29:04,080 --> 00:29:06,880
alternatives automation or movement one

713
00:29:06,880 --> 00:29:08,640
if you will is really about avoiding

714
00:29:08,640 --> 00:29:11,440
noise the advice phase or movement is

715
00:29:11,440 --> 00:29:13,120
about not dismissing the value of

716
00:29:13,120 --> 00:29:15,200
remediation guidance and ability to

717
00:29:15,200 --> 00:29:17,520
annotate changes this is definitely a

718
00:29:17,520 --> 00:29:19,520
part of what we would like to provide

719
00:29:19,520 --> 00:29:22,240
here and alternatives well this goes to

720
00:29:22,240 --> 00:29:24,720
the preferences being allowed for

721
00:29:24,720 --> 00:29:27,679
remediation application style and

722
00:29:27,679 --> 00:29:30,240
preferences of display as well as the

723
00:29:30,240 --> 00:29:33,120
ide and pull request

724
00:29:33,120 --> 00:29:34,720
to summarize

725
00:29:34,720 --> 00:29:37,919
remediation of security issues is indeed

726
00:29:37,919 --> 00:29:40,159
one of the most challenging aspects of

727
00:29:40,159 --> 00:29:42,000
development but

728
00:29:42,000 --> 00:29:44,000
it is so because it demands security

729
00:29:44,000 --> 00:29:46,399
acumen and substantial resources that

730
00:29:46,399 --> 00:29:49,440
are anything but given auto remediation

731
00:29:49,440 --> 00:29:52,559
can enable a significant amount of

732
00:29:52,559 --> 00:29:54,000
productive

733
00:29:54,000 --> 00:29:55,679
impetus but

734
00:29:55,679 --> 00:29:58,480
it will also increase hopefully and

735
00:29:58,480 --> 00:30:02,080
likely the team productivity

736
00:30:02,080 --> 00:30:04,880
and finally auto remediation can realize

737
00:30:04,880 --> 00:30:06,720
and that was probably the most important

738
00:30:06,720 --> 00:30:09,200
thing better software security and it

739
00:30:09,200 --> 00:30:11,600
will do so by reducing the unattended

740
00:30:11,600 --> 00:30:15,120
issue count significantly

741
00:30:15,120 --> 00:30:18,360
thank you

