1
00:00:01,410 --> 00:00:06,030
[Music]

2
00:00:07,839 --> 00:00:12,320
and uh welcome everyone um i'm isabel

3
00:00:12,320 --> 00:00:15,920
and today we're going to talk about apis

4
00:00:15,920 --> 00:00:18,240
and um i'm sure you're all aware that

5
00:00:18,240 --> 00:00:20,000
there is i hope you're all aware that

6
00:00:20,000 --> 00:00:21,439
there is another

7
00:00:21,439 --> 00:00:25,119
top 10 list which is an api specific one

8
00:00:25,119 --> 00:00:26,880
and we'll get to the

9
00:00:26,880 --> 00:00:28,320
nuts of that and give you some

10
00:00:28,320 --> 00:00:31,039
recommendations on on

11
00:00:31,039 --> 00:00:33,280
hopefully avoid those right

12
00:00:33,280 --> 00:00:35,360
so my um

13
00:00:35,360 --> 00:00:36,880
my

14
00:00:36,880 --> 00:00:39,840
sorry here we go um so

15
00:00:39,840 --> 00:00:41,520
you know it's not going to be uh

16
00:00:41,520 --> 00:00:44,079
surprised the surprise to to you that

17
00:00:44,079 --> 00:00:47,280
that api bridge is on the rise um this

18
00:00:47,280 --> 00:00:48,079
is a

19
00:00:48,079 --> 00:00:50,640
website that uh at 42 crunch we have a

20
00:00:50,640 --> 00:00:53,039
an api security platform we also do a

21
00:00:53,039 --> 00:00:55,120
lot of community

22
00:00:55,120 --> 00:00:56,800
education and we have a specific

23
00:00:56,800 --> 00:00:59,920
dedicated site called api security.io

24
00:00:59,920 --> 00:01:01,520
you may have heard about this is a

25
00:01:01,520 --> 00:01:02,559
completely

26
00:01:02,559 --> 00:01:04,799
non-marketing and non it's just pure

27
00:01:04,799 --> 00:01:06,880
education and collaboration and

28
00:01:06,880 --> 00:01:09,520
community and in there we you know very

29
00:01:09,520 --> 00:01:12,320
regularly report on on bridges and

30
00:01:12,320 --> 00:01:15,119
recommendations etc if we look at

31
00:01:15,119 --> 00:01:16,960
you know the the late

32
00:01:16,960 --> 00:01:18,799
last two years we've been here three

33
00:01:18,799 --> 00:01:20,960
years we've been reporting this we'll

34
00:01:20,960 --> 00:01:23,360
see that a lot of the problems are you

35
00:01:23,360 --> 00:01:25,439
know coming from a recurring combination

36
00:01:25,439 --> 00:01:26,880
of problems right

37
00:01:26,880 --> 00:01:28,400
and and things that we know about like

38
00:01:28,400 --> 00:01:30,079
we've been told about this we know that

39
00:01:30,079 --> 00:01:32,240
there are things that we have to do uh

40
00:01:32,240 --> 00:01:34,400
we have to validate inputs and do rate

41
00:01:34,400 --> 00:01:35,920
limiting

42
00:01:35,920 --> 00:01:37,520
our data and this is all we're going to

43
00:01:37,520 --> 00:01:40,159
talk about now and very recently so this

44
00:01:40,159 --> 00:01:42,000
is really a report i encourage you to

45
00:01:42,000 --> 00:01:45,840
read about a week ago ibm published this

46
00:01:45,840 --> 00:01:48,000
new report saying that cloud breaches

47
00:01:48,000 --> 00:01:51,200
are actually linked in in you know 60 of

48
00:01:51,200 --> 00:01:53,680
the cases to misconfigured api so this

49
00:01:53,680 --> 00:01:57,280
is really a pervasive problem right

50
00:01:57,280 --> 00:01:59,600
so why is this happening so

51
00:01:59,600 --> 00:02:01,200
there are multiple

52
00:02:01,200 --> 00:02:03,759
issues that we have to take into account

53
00:02:03,759 --> 00:02:04,560
here

54
00:02:04,560 --> 00:02:06,880
and the first one is well we're humans

55
00:02:06,880 --> 00:02:09,440
and as humans we make human errors right

56
00:02:09,440 --> 00:02:12,400
and and that's why you hear me say uh a

57
00:02:12,400 --> 00:02:15,120
lot about automation and scaling and how

58
00:02:15,120 --> 00:02:18,080
we can avoid you know being so prone to

59
00:02:18,080 --> 00:02:20,000
basically human errors what can you do

60
00:02:20,000 --> 00:02:22,239
about that that's the first problem the

61
00:02:22,239 --> 00:02:25,120
second one is we still consider security

62
00:02:25,120 --> 00:02:28,080
way too late in the api lifecycle so

63
00:02:28,080 --> 00:02:30,480
we'll just you know create our code

64
00:02:30,480 --> 00:02:32,720
those apis we'll just make them work

65
00:02:32,720 --> 00:02:34,959
make sure they're functionally okay

66
00:02:34,959 --> 00:02:36,879
and then what we're happy with

67
00:02:36,879 --> 00:02:39,519
because i'm that that's left there to to

68
00:02:39,519 --> 00:02:41,599
take care about security and and with

69
00:02:41,599 --> 00:02:43,360
the problems we have on security today

70
00:02:43,360 --> 00:02:45,519
that simply cannot work anymore we

71
00:02:45,519 --> 00:02:47,440
really have to consider security way

72
00:02:47,440 --> 00:02:50,560
earlier in the lifecycle of the apis

73
00:02:50,560 --> 00:02:52,720
what else what if you're a developer on

74
00:02:52,720 --> 00:02:55,519
on the call here on this webinar um you

75
00:02:55,519 --> 00:02:57,680
know you've been equipped with fantastic

76
00:02:57,680 --> 00:03:00,879
tools to be super productive uh you

77
00:03:00,879 --> 00:03:02,640
click on the button things get auto

78
00:03:02,640 --> 00:03:05,280
compiler co-deployed you have frameworks

79
00:03:05,280 --> 00:03:07,200
you have ids

80
00:03:07,200 --> 00:03:08,959
lots of tools why are your friends on

81
00:03:08,959 --> 00:03:11,120
the appstack team are not that lucky i

82
00:03:11,120 --> 00:03:12,720
think first of all there's a very few of

83
00:03:12,720 --> 00:03:13,920
them compared to the number of

84
00:03:13,920 --> 00:03:15,120
developers

85
00:03:15,120 --> 00:03:16,879
uh second they don't have the tools that

86
00:03:16,879 --> 00:03:19,040
you have they're not that efficient on

87
00:03:19,040 --> 00:03:22,879
apis today and and and frankly um

88
00:03:22,879 --> 00:03:25,519
they're really running after all those

89
00:03:25,519 --> 00:03:27,840
apis that are popping up like a customer

90
00:03:27,840 --> 00:03:29,280
of mine said the other day like

91
00:03:29,280 --> 00:03:32,159
mushrooms all over my data center right

92
00:03:32,159 --> 00:03:34,560
so we create many apis we deploy them

93
00:03:34,560 --> 00:03:37,440
like five times a day and and that makes

94
00:03:37,440 --> 00:03:39,040
that creates really uh

95
00:03:39,040 --> 00:03:41,519
many problems for the for the sake teams

96
00:03:41,519 --> 00:03:43,040
and and

97
00:03:43,040 --> 00:03:46,159
also importantly what have api brought

98
00:03:46,159 --> 00:03:47,920
us well they have changed the way we

99
00:03:47,920 --> 00:03:50,239
write applications fundamentally so what

100
00:03:50,239 --> 00:03:51,680
we used to do

101
00:03:51,680 --> 00:03:53,920
server side in terms of controlling

102
00:03:53,920 --> 00:03:55,680
layer and management

103
00:03:55,680 --> 00:03:57,840
now we have moved a lot of that logic

104
00:03:57,840 --> 00:04:00,239
and code on the client side which means

105
00:04:00,239 --> 00:04:02,080
like all the controls and all the things

106
00:04:02,080 --> 00:04:03,920
we might be doing on our mobile apps or

107
00:04:03,920 --> 00:04:05,760
web apps or whatever it is

108
00:04:05,760 --> 00:04:07,920
has absolutely zero effect if i'm going

109
00:04:07,920 --> 00:04:10,239
straight into the ap

110
00:04:10,239 --> 00:04:12,080
all those controls are not there right

111
00:04:12,080 --> 00:04:13,040
and and

112
00:04:13,040 --> 00:04:15,200
so we went a bit fast here in removing a

113
00:04:15,200 --> 00:04:17,839
lot of stuff on the server side and and

114
00:04:17,839 --> 00:04:19,440
and move it on the client side where

115
00:04:19,440 --> 00:04:20,959
really it's not engaging it goes

116
00:04:20,959 --> 00:04:22,800
straight into the api so that that

117
00:04:22,800 --> 00:04:24,080
change of architecture is really a

118
00:04:24,080 --> 00:04:25,199
problem

119
00:04:25,199 --> 00:04:27,199
and and finally and

120
00:04:27,199 --> 00:04:28,639
not least

121
00:04:28,639 --> 00:04:30,960
security has changed really

122
00:04:30,960 --> 00:04:33,280
right and usually security was all about

123
00:04:33,280 --> 00:04:35,120
the perimeter we were building walls

124
00:04:35,120 --> 00:04:38,000
around ourselves and a series of walls

125
00:04:38,000 --> 00:04:39,680
uh with the hope that if we were you

126
00:04:39,680 --> 00:04:41,199
know somebody was jumping over further

127
00:04:41,199 --> 00:04:42,639
first well there'll be a second one and

128
00:04:42,639 --> 00:04:43,840
the third one and the fourth one to

129
00:04:43,840 --> 00:04:45,199
actually stop them

130
00:04:45,199 --> 00:04:47,280
but when you create apis what do you do

131
00:04:47,280 --> 00:04:48,960
you punch holes

132
00:04:48,960 --> 00:04:51,680
in those old school right every time i'm

133
00:04:51,680 --> 00:04:54,240
opening an api what i'm doing is i'm

134
00:04:54,240 --> 00:04:56,479
opening an avenue into the data within

135
00:04:56,479 --> 00:04:58,639
my data center that's why i would try to

136
00:04:58,639 --> 00:05:00,320
represent with that picture here of the

137
00:05:00,320 --> 00:05:03,680
arduino in paris uh where every avenue

138
00:05:03,680 --> 00:05:06,160
comes into that every time i do an api

139
00:05:06,160 --> 00:05:07,919
that's what i do so this is not about

140
00:05:07,919 --> 00:05:10,080
boundaries and walls anymore it's really

141
00:05:10,080 --> 00:05:12,800
about protecting the data

142
00:05:12,800 --> 00:05:15,520
to recognize all of that that's you know

143
00:05:15,520 --> 00:05:19,919
late 2019 this awash specific top 10 for

144
00:05:19,919 --> 00:05:23,360
apis came up to recognize that apis are

145
00:05:23,360 --> 00:05:25,520
different the architectures of our apps

146
00:05:25,520 --> 00:05:27,840
based on apis are different and they're

147
00:05:27,840 --> 00:05:29,919
opening you know a whole set of new

148
00:05:29,919 --> 00:05:32,320
vulnerabilities there's a bit of overlap

149
00:05:32,320 --> 00:05:34,479
between the traditional otherwise top 10

150
00:05:34,479 --> 00:05:37,759
on this one but really this brand new

151
00:05:37,759 --> 00:05:39,840
problems that are linked to everything

152
00:05:39,840 --> 00:05:42,160
that i mentioned before especially the

153
00:05:42,160 --> 00:05:43,440
data

154
00:05:43,440 --> 00:05:44,479
centric

155
00:05:44,479 --> 00:05:47,600
uh characteristic of apis right so as

156
00:05:47,600 --> 00:05:49,360
you see there's common colors in there

157
00:05:49,360 --> 00:05:51,840
orange blue and green uh they're meant

158
00:05:51,840 --> 00:05:53,120
to kind of group

159
00:05:53,120 --> 00:05:54,800
the problems into like three main

160
00:05:54,800 --> 00:05:56,880
categories that i'm going to detail now

161
00:05:56,880 --> 00:05:58,639
and the first one i'm going to talk

162
00:05:58,639 --> 00:06:01,280
about is data protection but before i do

163
00:06:01,280 --> 00:06:03,759
that um i want to talk to you about one

164
00:06:03,759 --> 00:06:07,360
problem that for me is characteristic of

165
00:06:07,360 --> 00:06:09,840
what you really shouldn't do um so this

166
00:06:09,840 --> 00:06:11,919
is parlor if you're in the us you know

167
00:06:11,919 --> 00:06:14,880
what parlor is it's known here in europe

168
00:06:14,880 --> 00:06:16,960
um but basically this is like a social

169
00:06:16,960 --> 00:06:20,400
network of a certain kind and um

170
00:06:20,400 --> 00:06:23,360
in january this year this got um

171
00:06:23,360 --> 00:06:27,039
attacked and a lot of data 70 terabytes

172
00:06:27,039 --> 00:06:29,360
of data got leaked right and this is

173
00:06:29,360 --> 00:06:32,080
probably the only uh problem that i know

174
00:06:32,080 --> 00:06:34,880
of that has six only for that specific

175
00:06:34,880 --> 00:06:37,520
vulnerability and set of problems six of

176
00:06:37,520 --> 00:06:40,479
the ten problems right and the core

177
00:06:40,479 --> 00:06:42,000
issues we'll get a bit more on details

178
00:06:42,000 --> 00:06:44,160
of those but the core issues were zero

179
00:06:44,160 --> 00:06:45,919
authentication so like free access into

180
00:06:45,919 --> 00:06:48,160
the api again it's control at the client

181
00:06:48,160 --> 00:06:50,319
level not at the api level so zero

182
00:06:50,319 --> 00:06:51,599
authentication once you know the

183
00:06:51,599 --> 00:06:53,280
endpoint which is easy

184
00:06:53,280 --> 00:06:56,560
no rate limiting at all you can you know

185
00:06:56,560 --> 00:06:59,120
it's open buffet you can go and call it

186
00:06:59,120 --> 00:07:00,800
as much as you want

187
00:07:00,800 --> 00:07:02,800
sequential ids we'll get back to this to

188
00:07:02,800 --> 00:07:04,560
understand why this is critical but

189
00:07:04,560 --> 00:07:06,720
basically allows me to have a little

190
00:07:06,720 --> 00:07:08,960
engine that retrieves data

191
00:07:08,960 --> 00:07:10,479
a lot of

192
00:07:10,479 --> 00:07:12,800
metadata has been leaked in there so

193
00:07:12,800 --> 00:07:14,840
this is like extra exposure of

194
00:07:14,840 --> 00:07:18,319
information around leaking pii and

195
00:07:18,319 --> 00:07:20,479
specifically like the location

196
00:07:20,479 --> 00:07:22,479
of the people who have done some posts

197
00:07:22,479 --> 00:07:24,240
on the social network

198
00:07:24,240 --> 00:07:26,080
and last but not least and this is

199
00:07:26,080 --> 00:07:29,120
another interesting problem is

200
00:07:29,120 --> 00:07:31,840
when you were going to delete your post

201
00:07:31,840 --> 00:07:34,080
which a lot of people did because of the

202
00:07:34,080 --> 00:07:36,880
political events in the us at the time

203
00:07:36,880 --> 00:07:39,039
and the data was really not deleted it

204
00:07:39,039 --> 00:07:41,199
was just a flag that was turned on in

205
00:07:41,199 --> 00:07:43,280
the backend so that when the data was

206
00:07:43,280 --> 00:07:46,160
returned to the ui if that flag was on

207
00:07:46,160 --> 00:07:48,160
it would be shown on the ui but the data

208
00:07:48,160 --> 00:07:50,319
was still there so if you go again

209
00:07:50,319 --> 00:07:52,800
straight into the api all the data is

210
00:07:52,800 --> 00:07:54,800
there so all those people have thought

211
00:07:54,800 --> 00:07:56,800
they had deleted some data they really

212
00:07:56,800 --> 00:08:00,000
didn't delete the data right so good

213
00:08:00,000 --> 00:08:02,160
example of what you must not do and

214
00:08:02,160 --> 00:08:04,160
we'll get into the details now

215
00:08:04,160 --> 00:08:06,160
the first one is data protection so

216
00:08:06,160 --> 00:08:08,479
there's a lot of things in apis it is

217
00:08:08,479 --> 00:08:10,080
very specific

218
00:08:10,080 --> 00:08:12,960
um about data and they're basically

219
00:08:12,960 --> 00:08:14,879
three things well injection you all know

220
00:08:14,879 --> 00:08:16,720
this is very you know it's still there

221
00:08:16,720 --> 00:08:19,759
it's not in the top three uh you know of

222
00:08:19,759 --> 00:08:21,599
problems for apis but it's still a

223
00:08:21,599 --> 00:08:23,360
problem like anything related to

224
00:08:23,360 --> 00:08:25,680
injections is still there but there's

225
00:08:25,680 --> 00:08:28,720
two new things which are related to a

226
00:08:28,720 --> 00:08:30,720
what is the data we return through our

227
00:08:30,720 --> 00:08:33,120
apis and b what is the data that we

228
00:08:33,120 --> 00:08:36,240
accept through our apis right and how

229
00:08:36,240 --> 00:08:38,839
much we need to very much control that

230
00:08:38,839 --> 00:08:40,880
information so let's talk about we

231
00:08:40,880 --> 00:08:42,479
should what we should be doing here and

232
00:08:42,479 --> 00:08:44,720
you will see this is all very much

233
00:08:44,720 --> 00:08:46,560
common sense right

234
00:08:46,560 --> 00:08:47,440
so

235
00:08:47,440 --> 00:08:49,920
let's just not be new to any of you

236
00:08:49,920 --> 00:08:51,760
right we've told you that for the past

237
00:08:51,760 --> 00:08:55,120
20 years at oasis i think you have to

238
00:08:55,120 --> 00:08:58,240
validate data that comes to you right

239
00:08:58,240 --> 00:09:00,560
you cannot just accept data that comes

240
00:09:00,560 --> 00:09:03,839
to you without first validating it so we

241
00:09:03,839 --> 00:09:06,720
don't consume data before we validate it

242
00:09:06,720 --> 00:09:09,600
and that applies everywhere so first

243
00:09:09,600 --> 00:09:12,160
rule of security no trust

244
00:09:12,160 --> 00:09:14,480
doesn't matter if it's external apis

245
00:09:14,480 --> 00:09:17,040
internal apis if this east-west traffic

246
00:09:17,040 --> 00:09:19,399
because you're using a service mesh so

247
00:09:19,399 --> 00:09:22,160
inter-services communication don't make

248
00:09:22,160 --> 00:09:23,600
exceptions because if you make

249
00:09:23,600 --> 00:09:25,600
exceptions they will stay that will be a

250
00:09:25,600 --> 00:09:27,040
technical depth

251
00:09:27,040 --> 00:09:30,800
that will bite you later so by as a rule

252
00:09:30,800 --> 00:09:32,800
everything that comes to you you have to

253
00:09:32,800 --> 00:09:35,040
validate if you're doing some validation

254
00:09:35,040 --> 00:09:37,120
on client side that's cool probably for

255
00:09:37,120 --> 00:09:38,560
ux and

256
00:09:38,560 --> 00:09:40,640
and and for your consumers of those

257
00:09:40,640 --> 00:09:43,360
applications but the validation must

258
00:09:43,360 --> 00:09:45,600
happen server side remember i can buy

259
00:09:45,600 --> 00:09:48,080
buys the client and go straight into the

260
00:09:48,080 --> 00:09:50,720
api so any validation

261
00:09:50,720 --> 00:09:52,640
doesn't matter it has to happen on

262
00:09:52,640 --> 00:09:54,560
server side right

263
00:09:54,560 --> 00:09:57,279
what are the cool you know core problems

264
00:09:57,279 --> 00:09:59,680
around us we see across all those things

265
00:09:59,680 --> 00:10:01,920
i was saying that we have reported in

266
00:10:01,920 --> 00:10:05,120
the past three years um two things a

267
00:10:05,120 --> 00:10:07,680
we're kind of taking the data blindly

268
00:10:07,680 --> 00:10:09,920
we're not validating it and we'll just

269
00:10:09,920 --> 00:10:12,480
take it maybe a json structure and boom

270
00:10:12,480 --> 00:10:14,240
we push this into a database without

271
00:10:14,240 --> 00:10:15,360
even looking

272
00:10:15,360 --> 00:10:17,600
right so we really have to make very

273
00:10:17,600 --> 00:10:20,160
much validate what is this request that

274
00:10:20,160 --> 00:10:22,720
comes by what does he want to do

275
00:10:22,720 --> 00:10:23,760
okay

276
00:10:23,760 --> 00:10:24,560
and

277
00:10:24,560 --> 00:10:27,120
in general we also you know just make it

278
00:10:27,120 --> 00:10:29,760
easier have the same data structures for

279
00:10:29,760 --> 00:10:32,079
the reads and the updates so we have

280
00:10:32,079 --> 00:10:34,560
some data we want to you know push that

281
00:10:34,560 --> 00:10:37,600
into a database all the data we return

282
00:10:37,600 --> 00:10:39,760
the updates and the reads most likely

283
00:10:39,760 --> 00:10:41,519
need different

284
00:10:41,519 --> 00:10:44,880
a operation b you know maybe smaller

285
00:10:44,880 --> 00:10:46,720
data structures again it's all about

286
00:10:46,720 --> 00:10:48,240
control right

287
00:10:48,240 --> 00:10:50,640
so validating the inputs where do i do

288
00:10:50,640 --> 00:10:53,040
this it can be in my code it can be my

289
00:10:53,040 --> 00:10:55,680
api gateways if i'm using api management

290
00:10:55,680 --> 00:10:57,839
it can be in you know a new category of

291
00:10:57,839 --> 00:10:59,839
products emerging like ours which is an

292
00:10:59,839 --> 00:11:01,920
api firewall so something that

293
00:11:01,920 --> 00:11:05,519
specifically will validate data for apis

294
00:11:05,519 --> 00:11:07,760
right but in general the rule should be

295
00:11:07,760 --> 00:11:10,320
the earlier you detect such problem the

296
00:11:10,320 --> 00:11:12,640
better what i mean by that is and my

297
00:11:12,640 --> 00:11:15,200
flow of data coming my way

298
00:11:15,200 --> 00:11:17,839
the earlier in that in the transaction i

299
00:11:17,839 --> 00:11:20,480
can keep at bay the things that i don't

300
00:11:20,480 --> 00:11:22,640
want the better don't let things all the

301
00:11:22,640 --> 00:11:24,399
way back to the

302
00:11:24,399 --> 00:11:25,920
core of your data center before you

303
00:11:25,920 --> 00:11:27,680
decide oh no this is not something i

304
00:11:27,680 --> 00:11:29,680
want to accept right we should detect

305
00:11:29,680 --> 00:11:31,600
that where earlier

306
00:11:31,600 --> 00:11:33,519
so that should be you know pretty normal

307
00:11:33,519 --> 00:11:35,279
we've told you this you have to do it

308
00:11:35,279 --> 00:11:37,600
for apis or any kind of apps

309
00:11:37,600 --> 00:11:38,720
maybe

310
00:11:38,720 --> 00:11:41,600
what we haven't told you yet is oh wait

311
00:11:41,600 --> 00:11:43,760
a minute there's something new in apis

312
00:11:43,760 --> 00:11:45,920
and it's called json web tokens

313
00:11:45,920 --> 00:11:47,920
maybe you're all using that too for

314
00:11:47,920 --> 00:11:50,000
authentication for example authorization

315
00:11:50,000 --> 00:11:50,720
or

316
00:11:50,720 --> 00:11:53,279
any kind of transport of data

317
00:11:53,279 --> 00:11:56,480
this has data inside right so we have to

318
00:11:56,480 --> 00:11:58,800
validate those as well there are plenty

319
00:11:58,800 --> 00:12:01,600
of emerging threats around injecting

320
00:12:01,600 --> 00:12:04,720
data through the json headers just web

321
00:12:04,720 --> 00:12:07,120
tokens headers through the payload which

322
00:12:07,120 --> 00:12:09,279
is really a payload this is just data

323
00:12:09,279 --> 00:12:11,839
coming your way whichever data coming

324
00:12:11,839 --> 00:12:13,839
your way wherever it comes from however

325
00:12:13,839 --> 00:12:16,240
it's packaged you have to validate it

326
00:12:16,240 --> 00:12:19,600
right so this also applies to jwts if

327
00:12:19,600 --> 00:12:21,200
you're actually using them

328
00:12:21,200 --> 00:12:23,360
and the other thing i have focused so

329
00:12:23,360 --> 00:12:24,959
much on

330
00:12:24,959 --> 00:12:28,160
traditionally is validating outputs so

331
00:12:28,160 --> 00:12:30,399
this is number three this is this api

332
00:12:30,399 --> 00:12:32,000
three in our list

333
00:12:32,000 --> 00:12:35,120
is controlling what is the data that i'm

334
00:12:35,120 --> 00:12:37,360
actually exposing to the outside world

335
00:12:37,360 --> 00:12:40,240
again one of the key things we have done

336
00:12:40,240 --> 00:12:42,639
when we move from a traditional

337
00:12:42,639 --> 00:12:44,560
architecture to an api based

338
00:12:44,560 --> 00:12:47,760
architecture is moving that filtering

339
00:12:47,760 --> 00:12:49,760
and validation that we were doing on the

340
00:12:49,760 --> 00:12:52,639
server side to say oh to this client i'm

341
00:12:52,639 --> 00:12:54,320
going to show three properties and to

342
00:12:54,320 --> 00:12:56,880
that and i want to show 10 properties we

343
00:12:56,880 --> 00:12:59,360
move that on the client side which

344
00:12:59,360 --> 00:13:01,040
basically means if i go straight to the

345
00:13:01,040 --> 00:13:03,440
api again i don't see three properties i

346
00:13:03,440 --> 00:13:06,560
see 10 or 25 or 100 i don't know right

347
00:13:06,560 --> 00:13:08,800
but we really should not

348
00:13:08,800 --> 00:13:11,440
be must not even right

349
00:13:11,440 --> 00:13:13,600
do any filtering especially data

350
00:13:13,600 --> 00:13:16,000
sensitive or anything on the client that

351
00:13:16,000 --> 00:13:18,000
needs to happen server side we need to

352
00:13:18,000 --> 00:13:20,639
offer endpoints with the data that

353
00:13:20,639 --> 00:13:21,920
people need

354
00:13:21,920 --> 00:13:24,000
from the server side not from the client

355
00:13:24,000 --> 00:13:25,920
side right i mean you need to take

356
00:13:25,920 --> 00:13:29,279
control over your data json.xml whatever

357
00:13:29,279 --> 00:13:31,839
it is right so that you really control

358
00:13:31,839 --> 00:13:34,240
what you're going to show to woo

359
00:13:34,240 --> 00:13:36,560
depending on who they are etc right and

360
00:13:36,560 --> 00:13:39,040
of course nothing sensitive no tokens

361
00:13:39,040 --> 00:13:42,000
nothing like that in api responses watch

362
00:13:42,000 --> 00:13:44,800
for exceptions for example not leaking

363
00:13:44,800 --> 00:13:46,000
exceptions

364
00:13:46,000 --> 00:13:47,920
and by the way this also applies to

365
00:13:47,920 --> 00:13:50,079
headers we're giving a hell of

366
00:13:50,079 --> 00:13:52,560
information in headers and responses

367
00:13:52,560 --> 00:13:54,800
like what is this application written

368
00:13:54,800 --> 00:13:58,959
with why do i care i don't know

369
00:13:59,360 --> 00:14:02,000
i don't care but hackers do right you

370
00:14:02,000 --> 00:14:04,000
don't want to say any of that that's

371
00:14:04,000 --> 00:14:06,480
useless you know which product is being

372
00:14:06,480 --> 00:14:08,240
used behind the scenes i don't want to

373
00:14:08,240 --> 00:14:09,839
do that either if i have that

374
00:14:09,839 --> 00:14:11,360
information i can

375
00:14:11,360 --> 00:14:14,399
take it and i can go on the cve database

376
00:14:14,399 --> 00:14:16,880
and find it there is a known exploit

377
00:14:16,880 --> 00:14:19,680
for that specific server or framework so

378
00:14:19,680 --> 00:14:21,680
don't don't tell me anything about the

379
00:14:21,680 --> 00:14:23,760
internals of your application through

380
00:14:23,760 --> 00:14:26,720
headers that's part of that okay

381
00:14:26,720 --> 00:14:28,639
so that's that this is all about

382
00:14:28,639 --> 00:14:31,120
controlling what is the information we

383
00:14:31,120 --> 00:14:32,800
expose and what is the information we

384
00:14:32,800 --> 00:14:34,880
let in okay

385
00:14:34,880 --> 00:14:37,839
now next problem is authentication

386
00:14:37,839 --> 00:14:40,000
so broken authentication as you can

387
00:14:40,000 --> 00:14:41,760
imagine well i don't have authentication

388
00:14:41,760 --> 00:14:44,320
i can go and connect to something i

389
00:14:44,320 --> 00:14:46,880
should not be able to connect to because

390
00:14:46,880 --> 00:14:48,480
i'm not being authenticated or i don't

391
00:14:48,480 --> 00:14:49,199
have

392
00:14:49,199 --> 00:14:51,040
the proper information to get there

393
00:14:51,040 --> 00:14:52,079
right

394
00:14:52,079 --> 00:14:55,279
my view is i don't see any well maybe

395
00:14:55,279 --> 00:14:56,880
there's some

396
00:14:56,880 --> 00:14:59,600
exceptions but very very few exceptions

397
00:14:59,600 --> 00:15:01,920
in which we have an open api that anyone

398
00:15:01,920 --> 00:15:04,800
can consume with zero authentication and

399
00:15:04,800 --> 00:15:07,839
that applies to internal apis as well

400
00:15:07,839 --> 00:15:09,440
it's not because it's internal it needs

401
00:15:09,440 --> 00:15:10,720
to be open bar

402
00:15:10,720 --> 00:15:13,040
right because well you have a lot of

403
00:15:13,040 --> 00:15:15,360
internal problems to start with there's

404
00:15:15,360 --> 00:15:17,120
a lot of problems which are coming from

405
00:15:17,120 --> 00:15:18,959
internal attacks and not external

406
00:15:18,959 --> 00:15:21,760
attacks again back to what i said about

407
00:15:21,760 --> 00:15:25,199
data no trust sorry that's the way it is

408
00:15:25,199 --> 00:15:28,480
so we have to close things down okay you

409
00:15:28,480 --> 00:15:30,959
have to define what do i want

410
00:15:30,959 --> 00:15:32,720
i was talking to somebody the other day

411
00:15:32,720 --> 00:15:35,440
everything they do is basic off base

412
00:15:35,440 --> 00:15:38,240
which is like scary frankly right and

413
00:15:38,240 --> 00:15:39,680
the same user password for everything

414
00:15:39,680 --> 00:15:41,360
which is even more scary

415
00:15:41,360 --> 00:15:43,199
right so

416
00:15:43,199 --> 00:15:45,279
do we need that is that okay maybe we

417
00:15:45,279 --> 00:15:47,600
have a problem is it an api key is it

418
00:15:47,600 --> 00:15:49,920
open id connect whatever it is you will

419
00:15:49,920 --> 00:15:51,839
have to go and define that based on the

420
00:15:51,839 --> 00:15:54,800
risk again of that api right but if you

421
00:15:54,800 --> 00:15:57,600
do something make sure that those tokens

422
00:15:57,600 --> 00:15:59,199
whatever you have

423
00:15:59,199 --> 00:16:02,720
a are short-lived so if somebody steals

424
00:16:02,720 --> 00:16:04,560
it if it's getting

425
00:16:04,560 --> 00:16:07,279
lost for whatever reason you know a you

426
00:16:07,279 --> 00:16:09,920
cannot use it for a year b you cannot

427
00:16:09,920 --> 00:16:11,600
access all your apis and all the

428
00:16:11,600 --> 00:16:13,519
endpoints and everything with one single

429
00:16:13,519 --> 00:16:16,720
key right so be careful about this

430
00:16:16,720 --> 00:16:19,040
you also have to really educate

431
00:16:19,040 --> 00:16:21,360
yourselves this is like three hours of

432
00:16:21,360 --> 00:16:23,839
presentation by itself on oauth and

433
00:16:23,839 --> 00:16:25,120
grand types

434
00:16:25,120 --> 00:16:27,279
right and there's a lot of confusion

435
00:16:27,279 --> 00:16:29,519
around this i see this all the time you

436
00:16:29,519 --> 00:16:31,360
have a lot of education by people like

437
00:16:31,360 --> 00:16:33,600
philippe derick who is also a speaker in

438
00:16:33,600 --> 00:16:37,040
this session and in this event uh on you

439
00:16:37,040 --> 00:16:39,360
know what is off how does it work super

440
00:16:39,360 --> 00:16:42,240
educational follow this you know go and

441
00:16:42,240 --> 00:16:44,800
understand what are the implications of

442
00:16:44,800 --> 00:16:46,959
the decision that you're making right

443
00:16:46,959 --> 00:16:49,680
and again back to my jwts my json web

444
00:16:49,680 --> 00:16:50,639
tokens

445
00:16:50,639 --> 00:16:53,440
it is not enough to just validate that

446
00:16:53,440 --> 00:16:55,759
adjacent web token is properly signed

447
00:16:55,759 --> 00:16:57,519
and that signature is valid that's just

448
00:16:57,519 --> 00:17:00,399
like five percent of what

449
00:17:00,399 --> 00:17:03,279
to properly validate the json web token

450
00:17:03,279 --> 00:17:06,000
so there is hopefully as there is for

451
00:17:06,000 --> 00:17:07,919
anything there is an rfc to actually

452
00:17:07,919 --> 00:17:10,160
explain that go read it

453
00:17:10,160 --> 00:17:12,799
uh check your libraries check your auth

454
00:17:12,799 --> 00:17:15,119
providers what are the validations that

455
00:17:15,119 --> 00:17:16,640
are doing and make sure you're properly

456
00:17:16,640 --> 00:17:20,480
doing that right and finally again um

457
00:17:20,480 --> 00:17:22,720
the number one repository for api keys

458
00:17:22,720 --> 00:17:24,799
today is github because we hard code

459
00:17:24,799 --> 00:17:27,119
this in the code uh so they have a bunch

460
00:17:27,119 --> 00:17:29,679
of now secret scanning and make sure you

461
00:17:29,679 --> 00:17:31,280
get that so if somebody in your

462
00:17:31,280 --> 00:17:32,400
organization

463
00:17:32,400 --> 00:17:34,240
is pushing some code that has hard-coded

464
00:17:34,240 --> 00:17:36,320
secrets it will actually automatically

465
00:17:36,320 --> 00:17:37,919
detect it this is really really

466
00:17:37,919 --> 00:17:40,080
important right and again you have to

467
00:17:40,080 --> 00:17:42,400
test this um say this on every single

468
00:17:42,400 --> 00:17:44,960
page every single problem that

469
00:17:44,960 --> 00:17:46,880
you you know is potentially a

470
00:17:46,880 --> 00:17:49,919
vulnerability you have to test for right

471
00:17:49,919 --> 00:17:51,600
and same applies

472
00:17:51,600 --> 00:17:53,280
to authorization

473
00:17:53,280 --> 00:17:56,080
and in authorization we're going to find

474
00:17:56,080 --> 00:17:58,960
api one which is like the number one as

475
00:17:58,960 --> 00:18:01,440
you know right those are ranked by the

476
00:18:01,440 --> 00:18:05,039
order of importance and and and and

477
00:18:05,039 --> 00:18:07,760
criticality right that that order in the

478
00:18:07,760 --> 00:18:11,200
top 10 is not innocent so api one is

479
00:18:11,200 --> 00:18:13,360
really critical so what is this about

480
00:18:13,360 --> 00:18:16,640
right um api one

481
00:18:16,640 --> 00:18:18,720
you may have heard this about

482
00:18:18,720 --> 00:18:20,559
this as idor

483
00:18:20,559 --> 00:18:22,799
previously uh the the people were

484
00:18:22,799 --> 00:18:24,880
creating the api top 10 decided to

485
00:18:24,880 --> 00:18:28,480
rename it to bola for broken open object

486
00:18:28,480 --> 00:18:31,600
level access right just to

487
00:18:31,600 --> 00:18:33,520
make sure we all understood that this is

488
00:18:33,520 --> 00:18:36,160
an authorization problem it is not

489
00:18:36,160 --> 00:18:38,880
really you know that's the core of it

490
00:18:38,880 --> 00:18:41,039
so the core of the typical problem will

491
00:18:41,039 --> 00:18:43,120
be this right i'm isabelle i'm

492
00:18:43,120 --> 00:18:45,520
authenticated to the system

493
00:18:45,520 --> 00:18:48,320
and i'm trying to call get account

494
00:18:48,320 --> 00:18:51,520
details with account one two three okay

495
00:18:51,520 --> 00:18:53,679
now i should not be able i must not be

496
00:18:53,679 --> 00:18:56,240
able to do get account details three

497
00:18:56,240 --> 00:18:57,280
four five

498
00:18:57,280 --> 00:18:59,600
right which is another account number

499
00:18:59,600 --> 00:19:01,360
because that account number is not mine

500
00:19:01,360 --> 00:19:04,320
you know it's 30 percent so this is

501
00:19:04,320 --> 00:19:06,320
definitely really an authorization

502
00:19:06,320 --> 00:19:08,640
problem we need to be able to this when

503
00:19:08,640 --> 00:19:11,280
we get that call defined that new you

504
00:19:11,280 --> 00:19:13,440
know isabel nothing to do with that

505
00:19:13,440 --> 00:19:15,039
account only one two three is good for

506
00:19:15,039 --> 00:19:17,360
her right so the other thing is a lot of

507
00:19:17,360 --> 00:19:19,840
confusion there about the fact that i

508
00:19:19,840 --> 00:19:22,000
can use all scopes for that which are

509
00:19:22,000 --> 00:19:23,600
really about an operation and not a

510
00:19:23,600 --> 00:19:24,559
resource

511
00:19:24,559 --> 00:19:27,440
this is access to that specific one two

512
00:19:27,440 --> 00:19:30,160
three or three four five resource you

513
00:19:30,160 --> 00:19:33,039
know the resource identified by that id

514
00:19:33,039 --> 00:19:33,840
right

515
00:19:33,840 --> 00:19:35,919
so that's the true fix and sometimes you

516
00:19:35,919 --> 00:19:38,320
know after the fact putting in place all

517
00:19:38,320 --> 00:19:40,320
those controls

518
00:19:40,320 --> 00:19:43,120
is really difficult so the thing that

519
00:19:43,120 --> 00:19:47,120
makes bola number one is is two things

520
00:19:47,120 --> 00:19:48,080
a

521
00:19:48,080 --> 00:19:50,720
that we tend to use guessable ids like

522
00:19:50,720 --> 00:19:52,720
one two three one two four one two five

523
00:19:52,720 --> 00:19:54,720
right and in here really what you should

524
00:19:54,720 --> 00:19:55,919
be using

525
00:19:55,919 --> 00:19:58,960
is you ids like a 36 character long

526
00:19:58,960 --> 00:20:01,520
something people cannot guess or iterate

527
00:20:01,520 --> 00:20:03,520
over that's really the key thing and

528
00:20:03,520 --> 00:20:05,600
this is mitigation it's not fixed but

529
00:20:05,600 --> 00:20:07,440
it's a good mitigation

530
00:20:07,440 --> 00:20:09,360
and and if you have been exposing

531
00:20:09,360 --> 00:20:12,640
internal ids all the way back to clients

532
00:20:12,640 --> 00:20:14,720
right somewhere along that flow you

533
00:20:14,720 --> 00:20:17,360
should really map those internal ids to

534
00:20:17,360 --> 00:20:19,760
something which is not what the real id

535
00:20:19,760 --> 00:20:21,760
on the back end database is right so

536
00:20:21,760 --> 00:20:24,400
don't expose this all the way back to to

537
00:20:24,400 --> 00:20:25,760
the consumers

538
00:20:25,760 --> 00:20:26,640
right

539
00:20:26,640 --> 00:20:28,799
so that that's that's one of the you

540
00:20:28,799 --> 00:20:31,200
know key recommendations and the second

541
00:20:31,200 --> 00:20:33,120
one is really about rate limiting which

542
00:20:33,120 --> 00:20:35,440
is pretty what happened at parlor so you

543
00:20:35,440 --> 00:20:37,919
have sequential ids and you have no rate

544
00:20:37,919 --> 00:20:40,559
limiting and this is like a recipe for

545
00:20:40,559 --> 00:20:43,200
disaster because what that means is i

546
00:20:43,200 --> 00:20:45,919
can write a little engine that iterates

547
00:20:45,919 --> 00:20:48,480
because there are guessable over my ids

548
00:20:48,480 --> 00:20:50,559
and i can just do this as much as i

549
00:20:50,559 --> 00:20:52,559
please because there is no rate limiting

550
00:20:52,559 --> 00:20:55,200
to stop me or slow me down

551
00:20:55,200 --> 00:20:58,880
or even to raise a big flag somewhere in

552
00:20:58,880 --> 00:21:01,520
a monitoring window that says oops

553
00:21:01,520 --> 00:21:03,600
something is going wrong here because we

554
00:21:03,600 --> 00:21:05,679
have this huge you know number of

555
00:21:05,679 --> 00:21:08,240
requests don't get access details which

556
00:21:08,240 --> 00:21:10,240
is really out of the ordinary so at

557
00:21:10,240 --> 00:21:12,000
least you detect the things so you can

558
00:21:12,000 --> 00:21:14,480
actually stop it even and then fix the

559
00:21:14,480 --> 00:21:16,400
problem right and again

560
00:21:16,400 --> 00:21:18,320
if you want to detect this thing you

561
00:21:18,320 --> 00:21:20,480
will have to test it right so this is

562
00:21:20,480 --> 00:21:22,960
again something that you need to put in

563
00:21:22,960 --> 00:21:25,440
continuous testing right so that's at

564
00:21:25,440 --> 00:21:28,960
the resource level in api 5 it's at the

565
00:21:28,960 --> 00:21:31,679
operation level so this is all about

566
00:21:31,679 --> 00:21:34,000
i'm allowed as isabel to do get account

567
00:21:34,000 --> 00:21:37,200
details but i cannot do post account

568
00:21:37,200 --> 00:21:41,919
right um and also we tend to expose in

569
00:21:41,919 --> 00:21:43,600
the same api

570
00:21:43,600 --> 00:21:45,360
operations that really should not be

571
00:21:45,360 --> 00:21:47,679
mixed in the same thing like admin and

572
00:21:47,679 --> 00:21:50,159
non-admin operations very easy to find

573
00:21:50,159 --> 00:21:52,320
those through dictionary attacks

574
00:21:52,320 --> 00:21:55,200
we're not very good at inventing

575
00:21:55,200 --> 00:21:57,679
crazy names when it comes for api names

576
00:21:57,679 --> 00:21:59,120
so we'll probably

577
00:21:59,120 --> 00:22:00,799
have something for admin we're going to

578
00:22:00,799 --> 00:22:03,440
call it slash admin most likely

579
00:22:03,440 --> 00:22:05,600
right and and then you know slash admin

580
00:22:05,600 --> 00:22:08,080
users or sas admin accounts or whatever

581
00:22:08,080 --> 00:22:10,640
it is so it's very easy to do so right

582
00:22:10,640 --> 00:22:12,960
so if you have some admin stuff just you

583
00:22:12,960 --> 00:22:15,679
know isolate it restrict it

584
00:22:15,679 --> 00:22:17,520
by something which is more complicated

585
00:22:17,520 --> 00:22:20,320
like mutual tls or you know allow it

586
00:22:20,320 --> 00:22:22,640
from certain people only whatever it is

587
00:22:22,640 --> 00:22:25,120
but just isolate that so that's

588
00:22:25,120 --> 00:22:27,600
jodo was using your api actually cannot

589
00:22:27,600 --> 00:22:30,640
find and use this right and again don't

590
00:22:30,640 --> 00:22:32,799
rely on the client apps to do this like

591
00:22:32,799 --> 00:22:34,720
don't have a flag in your ui that says

592
00:22:34,720 --> 00:22:37,200
this is admin non-admin again if i go

593
00:22:37,200 --> 00:22:39,120
straight into the api you're not going

594
00:22:39,120 --> 00:22:40,960
to block me right

595
00:22:40,960 --> 00:22:43,520
um in general what you really want to do

596
00:22:43,520 --> 00:22:46,000
here is really control

597
00:22:46,000 --> 00:22:48,480
the verbs and operations that your api

598
00:22:48,480 --> 00:22:51,039
allows so so if somebody you know

599
00:22:51,039 --> 00:22:53,600
whenever i do a demo of our platform i

600
00:22:53,600 --> 00:22:56,080
pop up one hour firewalls maybe half an

601
00:22:56,080 --> 00:22:58,159
hour one hour before the demo

602
00:22:58,159 --> 00:23:01,280
and you know every single time by the

603
00:23:01,280 --> 00:23:03,200
time i do the demo

604
00:23:03,200 --> 00:23:05,200
our dashboards are populated by what's

605
00:23:05,200 --> 00:23:08,080
called and people just found in that a

606
00:23:08,080 --> 00:23:11,039
new ip address up and just boom you have

607
00:23:11,039 --> 00:23:13,840
some bots there trying to guess uh what

608
00:23:13,840 --> 00:23:15,360
that api might be

609
00:23:15,360 --> 00:23:17,520
right so you you have to really block

610
00:23:17,520 --> 00:23:19,840
this out of the way so those blocks

611
00:23:19,840 --> 00:23:21,200
those bots will be blocked and then

612
00:23:21,200 --> 00:23:22,559
you're sure you're not accepting

613
00:23:22,559 --> 00:23:24,159
anything else but

614
00:23:24,159 --> 00:23:26,640
but you actually want right so again you

615
00:23:26,640 --> 00:23:28,400
have to design this properly you have to

616
00:23:28,400 --> 00:23:30,000
know what your

617
00:23:30,000 --> 00:23:32,240
rules are what are the permissions and

618
00:23:32,240 --> 00:23:34,080
you have to test this again

619
00:23:34,080 --> 00:23:37,440
so here yes the scopes in off if you're

620
00:23:37,440 --> 00:23:39,280
using that can help because this is

621
00:23:39,280 --> 00:23:42,080
where i can say depending on

622
00:23:42,080 --> 00:23:44,400
how obtained the token and the token is

623
00:23:44,400 --> 00:23:46,880
valid for scope you know read account

624
00:23:46,880 --> 00:23:48,880
but it's not valid for scope post

625
00:23:48,880 --> 00:23:51,279
account then even if i have a valid

626
00:23:51,279 --> 00:23:53,120
token i will not be able to call that

627
00:23:53,120 --> 00:23:54,640
operation so you'll be able to do it

628
00:23:54,640 --> 00:23:56,480
there

629
00:23:56,480 --> 00:23:57,919
and the last thing i wanted to talk

630
00:23:57,919 --> 00:24:00,240
about is logging so there's a few more

631
00:24:00,240 --> 00:24:03,120
things in the api top 10 which are more

632
00:24:03,120 --> 00:24:05,360
traditional i would say so it's easy for

633
00:24:05,360 --> 00:24:07,200
you to find some information about this

634
00:24:07,200 --> 00:24:10,400
right but logging as we'll see is really

635
00:24:10,400 --> 00:24:12,559
critical and secure logging in parallel

636
00:24:12,559 --> 00:24:14,880
in particular and i'm insisting on this

637
00:24:14,880 --> 00:24:17,440
because at many customers and places we

638
00:24:17,440 --> 00:24:18,880
see that people don't have the

639
00:24:18,880 --> 00:24:21,200
information to actually even know what

640
00:24:21,200 --> 00:24:23,919
the heck is going on in the system

641
00:24:23,919 --> 00:24:26,159
or what has happened right and and then

642
00:24:26,159 --> 00:24:28,559
being able to find where the flaw is and

643
00:24:28,559 --> 00:24:31,120
fix it right so this is great for you

644
00:24:31,120 --> 00:24:33,120
know and critical for forensics if

645
00:24:33,120 --> 00:24:35,120
something happens it's also great for

646
00:24:35,120 --> 00:24:36,799
non-repudiation from a security

647
00:24:36,799 --> 00:24:38,400
perspective right

648
00:24:38,400 --> 00:24:41,279
so what we want to do here is to log

649
00:24:41,279 --> 00:24:44,240
anything unusual and we want to log it

650
00:24:44,240 --> 00:24:46,799
at the lowest at a production logging

651
00:24:46,799 --> 00:24:48,880
level not that debug level right because

652
00:24:48,880 --> 00:24:51,600
we're gonna have this in production

653
00:24:51,600 --> 00:24:53,200
and everything that happens in

654
00:24:53,200 --> 00:24:55,760
production we want to have any unusual

655
00:24:55,760 --> 00:24:58,080
event being logged somewhere and we need

656
00:24:58,080 --> 00:25:00,960
to know what happened when it was you

657
00:25:00,960 --> 00:25:02,960
know any information to identify the

658
00:25:02,960 --> 00:25:04,000
caller

659
00:25:04,000 --> 00:25:05,919
where it happened like you know the

660
00:25:05,919 --> 00:25:07,840
machine or the pub name if this is

661
00:25:07,840 --> 00:25:10,080
kubernetes whatever it is as much

662
00:25:10,080 --> 00:25:12,159
information as possible to be able to

663
00:25:12,159 --> 00:25:14,960
trace back also the flow within your

664
00:25:14,960 --> 00:25:16,320
system right

665
00:25:16,320 --> 00:25:19,279
and really this is something that if you

666
00:25:19,279 --> 00:25:21,919
have to think about it once the code is

667
00:25:21,919 --> 00:25:24,080
written that's going to be a nightmare

668
00:25:24,080 --> 00:25:26,159
if you don't do it now this is going to

669
00:25:26,159 --> 00:25:28,480
be a technical depth and it's going to

670
00:25:28,480 --> 00:25:30,960
be something that you will never free

671
00:25:30,960 --> 00:25:33,840
any time to do unless you do it as you

672
00:25:33,840 --> 00:25:36,480
write your api or your application

673
00:25:36,480 --> 00:25:38,720
adding security you know secured logging

674
00:25:38,720 --> 00:25:41,679
logging whatever after the fact you know

675
00:25:41,679 --> 00:25:43,600
it's very easy it won't happen

676
00:25:43,600 --> 00:25:45,919
now if you're you know in in large

677
00:25:45,919 --> 00:25:48,159
company or not just use frameworks to

678
00:25:48,159 --> 00:25:49,600
actually do this

679
00:25:49,600 --> 00:25:51,760
give your developers something that they

680
00:25:51,760 --> 00:25:52,960
just have to

681
00:25:52,960 --> 00:25:55,120
write one line in the code and it's

682
00:25:55,120 --> 00:25:56,880
being pushed in the right place it's

683
00:25:56,880 --> 00:25:58,400
being consumed you don't have to worry

684
00:25:58,400 --> 00:26:00,559
about this so make it as easy as

685
00:26:00,559 --> 00:26:02,480
possible like one line and i have all

686
00:26:02,480 --> 00:26:04,080
the information right

687
00:26:04,080 --> 00:26:06,240
now what do we log well careful with

688
00:26:06,240 --> 00:26:08,799
what we love no pii no tokens no

689
00:26:08,799 --> 00:26:10,559
anything sensitive to your business

690
00:26:10,559 --> 00:26:13,200
whatever it is right and if you have

691
00:26:13,200 --> 00:26:15,360
some sensitive data

692
00:26:15,360 --> 00:26:18,320
such as you know tokens and ips

693
00:26:18,320 --> 00:26:19,919
um then

694
00:26:19,919 --> 00:26:21,919
ideally you want to hash those because

695
00:26:21,919 --> 00:26:23,360
then you can also

696
00:26:23,360 --> 00:26:25,360
kind of track that information like you

697
00:26:25,360 --> 00:26:27,840
can see that token that came in from

698
00:26:27,840 --> 00:26:30,480
multiple differences if you hash if

699
00:26:30,480 --> 00:26:32,320
you're redacted then that will not be

700
00:26:32,320 --> 00:26:34,720
that useful you will have x's to track

701
00:26:34,720 --> 00:26:35,919
that's not going to be

702
00:26:35,919 --> 00:26:37,440
very easy right

703
00:26:37,440 --> 00:26:39,840
you may have to encrypt it and then you

704
00:26:39,840 --> 00:26:41,279
know only a few people within your

705
00:26:41,279 --> 00:26:42,799
company will be able to actually get

706
00:26:42,799 --> 00:26:44,159
that information

707
00:26:44,159 --> 00:26:46,320
you may have to sign those logs you know

708
00:26:46,320 --> 00:26:48,080
depending on your page for

709
00:26:48,080 --> 00:26:50,240
non-repudiation purposes right

710
00:26:50,240 --> 00:26:51,360
um

711
00:26:51,360 --> 00:26:53,360
and and linked to that because i see

712
00:26:53,360 --> 00:26:55,120
this a lot that customers as well you

713
00:26:55,120 --> 00:26:55,840
know

714
00:26:55,840 --> 00:26:58,720
the implications of passing data as a

715
00:26:58,720 --> 00:27:01,679
query parameter so you really have to be

716
00:27:01,679 --> 00:27:03,679
careful here that

717
00:27:03,679 --> 00:27:05,919
whenever you pass something in the query

718
00:27:05,919 --> 00:27:07,679
parameter it's going to end up in log

719
00:27:07,679 --> 00:27:09,200
somewhere it's going to be pushed

720
00:27:09,200 --> 00:27:10,960
somewhere in the log manager

721
00:27:10,960 --> 00:27:14,000
then go up in dashboard so don't do this

722
00:27:14,000 --> 00:27:17,760
never pass any sensitive information

723
00:27:17,760 --> 00:27:19,200
on the url

724
00:27:19,200 --> 00:27:21,520
it's always in a header it's all on the

725
00:27:21,520 --> 00:27:24,399
body in the post but it's not in in in a

726
00:27:24,399 --> 00:27:27,360
query parameter ever okay

727
00:27:27,360 --> 00:27:30,240
but finally um you know this is dear to

728
00:27:30,240 --> 00:27:31,919
my heart because it's one of the roots

729
00:27:31,919 --> 00:27:34,960
of why we created our company right is

730
00:27:34,960 --> 00:27:36,640
i really would like to change for people

731
00:27:36,640 --> 00:27:39,440
to become more proactive about security

732
00:27:39,440 --> 00:27:42,159
and not so much reactive and the reason

733
00:27:42,159 --> 00:27:45,200
for that is design decisions whatever

734
00:27:45,200 --> 00:27:47,760
you decide for your app or your api is a

735
00:27:47,760 --> 00:27:50,880
design time that's really hard to do if

736
00:27:50,880 --> 00:27:53,120
not impossible because again you're

737
00:27:53,120 --> 00:27:55,760
going to be cut into technical depth

738
00:27:55,760 --> 00:27:58,000
that you will never have the time to

739
00:27:58,000 --> 00:28:00,480
actually catch up on right

740
00:28:00,480 --> 00:28:03,679
so in an api world what do we have to do

741
00:28:03,679 --> 00:28:05,760
we're going to take some decisions when

742
00:28:05,760 --> 00:28:07,120
we design

743
00:28:07,120 --> 00:28:09,600
when we define the api when we design

744
00:28:09,600 --> 00:28:12,080
the interface of the api when we decide

745
00:28:12,080 --> 00:28:14,320
how we're going to operate the api

746
00:28:14,320 --> 00:28:17,440
and all of these have direct links into

747
00:28:17,440 --> 00:28:20,320
those api top 10 and i had mentioned

748
00:28:20,320 --> 00:28:23,279
you know define what the data is who's

749
00:28:23,279 --> 00:28:24,880
going to consume it how we're going to

750
00:28:24,880 --> 00:28:28,080
access it the data structures on request

751
00:28:28,080 --> 00:28:29,520
and response

752
00:28:29,520 --> 00:28:31,840
where the admin is going to be you know

753
00:28:31,840 --> 00:28:33,919
how we're going to operate it where is

754
00:28:33,919 --> 00:28:36,640
the defined rate limiting design or rate

755
00:28:36,640 --> 00:28:38,399
limiting you have to design rate

756
00:28:38,399 --> 00:28:39,440
limiting

757
00:28:39,440 --> 00:28:41,279
manage versions how are we going to

758
00:28:41,279 --> 00:28:43,360
retire things so we don't leave it there

759
00:28:43,360 --> 00:28:46,240
open and you know forget about it

760
00:28:46,240 --> 00:28:49,520
so all of this should be really um for

761
00:28:49,520 --> 00:28:52,240
me the call to action would be

762
00:28:52,240 --> 00:28:54,000
to use the top 10 and all the

763
00:28:54,000 --> 00:28:56,240
information we have around that as a

764
00:28:56,240 --> 00:28:59,360
framework for designing and testing your

765
00:28:59,360 --> 00:29:01,600
apis right again

766
00:29:01,600 --> 00:29:04,320
if you worry about security so late in

767
00:29:04,320 --> 00:29:06,720
the life cycle whatever problem is being

768
00:29:06,720 --> 00:29:07,919
introduced

769
00:29:07,919 --> 00:29:10,880
is going to be super expensive to fix

770
00:29:10,880 --> 00:29:13,360
if it's even possible to fix without

771
00:29:13,360 --> 00:29:15,440
rewriting the entire thing

772
00:29:15,440 --> 00:29:17,679
right so the earlier we talked about

773
00:29:17,679 --> 00:29:20,320
this the earlier we design it the better

774
00:29:20,320 --> 00:29:22,159
we're going to be

775
00:29:22,159 --> 00:29:25,039
you know building security apis

776
00:29:25,039 --> 00:29:27,520
and then we have already think about

777
00:29:27,520 --> 00:29:30,000
you know think differently think like

778
00:29:30,000 --> 00:29:31,919
the hackers so what we're usually a

779
00:29:31,919 --> 00:29:33,520
developer what we do is we want the

780
00:29:33,520 --> 00:29:35,279
thing to work right so we do functional

781
00:29:35,279 --> 00:29:36,320
testing

782
00:29:36,320 --> 00:29:38,080
but for every functional test you should

783
00:29:38,080 --> 00:29:40,240
have 10 what i call negative tests you

784
00:29:40,240 --> 00:29:42,480
have to hammer your api with all kind of

785
00:29:42,480 --> 00:29:43,679
bad stuff

786
00:29:43,679 --> 00:29:46,320
expired tokens sending a string when it

787
00:29:46,320 --> 00:29:48,799
expects an integer sending users that

788
00:29:48,799 --> 00:29:50,799
only exists you know the only way you're

789
00:29:50,799 --> 00:29:54,480
going to test that your api is resilient

790
00:29:54,480 --> 00:29:56,880
is if you automate the testing on that

791
00:29:56,880 --> 00:29:59,760
api with all kind of bad stuff

792
00:29:59,760 --> 00:30:02,320
and you do this continuously right and

793
00:30:02,320 --> 00:30:04,240
that's my last point and maybe the most

794
00:30:04,240 --> 00:30:07,200
important one we have to automate you

795
00:30:07,200 --> 00:30:09,360
have to define those best practices the

796
00:30:09,360 --> 00:30:11,840
design rules the runtime rules those

797
00:30:11,840 --> 00:30:12,799
tests

798
00:30:12,799 --> 00:30:15,840
and don't rely on any manual testing as

799
00:30:15,840 --> 00:30:17,840
much as possible

800
00:30:17,840 --> 00:30:20,640
for the security team and also for the

801
00:30:20,640 --> 00:30:22,720
developers right because that's the only

802
00:30:22,720 --> 00:30:24,720
way we're going to scale

803
00:30:24,720 --> 00:30:26,480
and avoid those human errors we've

804
00:30:26,480 --> 00:30:28,000
talked at the beginning

805
00:30:28,000 --> 00:30:29,760
whereby we're going to we're going to

806
00:30:29,760 --> 00:30:31,600
introduce errors because we're human

807
00:30:31,600 --> 00:30:34,000
right but the key thing is to catch

808
00:30:34,000 --> 00:30:36,399
those errors and we want to catch them

809
00:30:36,399 --> 00:30:38,960
as early as possible in the life cycle

810
00:30:38,960 --> 00:30:39,840
so

811
00:30:39,840 --> 00:30:41,200
define

812
00:30:41,200 --> 00:30:44,080
processes and automate them iteratively

813
00:30:44,080 --> 00:30:46,320
that's a lot of work i know

814
00:30:46,320 --> 00:30:48,640
but start small and and do this along

815
00:30:48,640 --> 00:30:50,799
the life cycle and you will see our

816
00:30:50,799 --> 00:30:54,960
api's quality and the api security is

817
00:30:54,960 --> 00:30:57,600
going to improve tenfold

818
00:30:57,600 --> 00:30:59,600
and this concludes

819
00:30:59,600 --> 00:31:01,360
my presentation

820
00:31:01,360 --> 00:31:02,720
i will let

821
00:31:02,720 --> 00:31:05,919
our host here uh talk about the uh the

822
00:31:05,919 --> 00:31:08,320
slack channel but um as i said we have

823
00:31:08,320 --> 00:31:11,360
this api secret i o please join

824
00:31:11,360 --> 00:31:13,760
uh us and um and hopefully the

825
00:31:13,760 --> 00:31:15,919
information you'll find there will be

826
00:31:15,919 --> 00:31:19,360
useful to you

827
00:31:19,360 --> 00:31:21,919
okay thank you very much isabel oh for

828
00:31:21,919 --> 00:31:24,960
great talk

