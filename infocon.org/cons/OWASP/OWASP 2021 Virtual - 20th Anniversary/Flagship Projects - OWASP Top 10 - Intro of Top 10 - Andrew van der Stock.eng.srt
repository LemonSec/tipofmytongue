1
00:00:01,410 --> 00:00:06,030
[Music]

2
00:00:07,919 --> 00:00:09,920
hi everyone a lot of slides to get

3
00:00:09,920 --> 00:00:11,759
through in 30 minutes here but we're

4
00:00:11,759 --> 00:00:14,719
glad to release the os top 10 2021 after

5
00:00:14,719 --> 00:00:17,119
a long gestation

6
00:00:17,119 --> 00:00:19,119
i will suggest

7
00:00:19,119 --> 00:00:20,640
that there is another talk that you want

8
00:00:20,640 --> 00:00:22,080
to go to if you want to learn about how

9
00:00:22,080 --> 00:00:24,080
we made it so if you have questions

10
00:00:24,080 --> 00:00:25,920
about our categories our data collection

11
00:00:25,920 --> 00:00:28,160
our analysis and other methods brian

12
00:00:28,160 --> 00:00:29,920
glasses talk at

13
00:00:29,920 --> 00:00:32,079
a little later today will be a much

14
00:00:32,079 --> 00:00:33,440
better talk than this one this one just

15
00:00:33,440 --> 00:00:35,600
goes through what the oldest top 10 is

16
00:00:35,600 --> 00:00:37,520
so what is the os top 10 the house top

17
00:00:37,520 --> 00:00:40,320
10 is about risks it's not the input

18
00:00:40,320 --> 00:00:42,160
impacts likelihood vulnerabilities it's

19
00:00:42,160 --> 00:00:44,399
not about the breach value so those

20
00:00:44,399 --> 00:00:47,039
things are important and of themselves

21
00:00:47,039 --> 00:00:50,320
um and so if your job is to be a

22
00:00:50,320 --> 00:00:51,600
[Music]

23
00:00:51,600 --> 00:00:53,120
more or less a

24
00:00:53,120 --> 00:00:55,280
an assurance assessor

25
00:00:55,280 --> 00:00:57,600
it's really really important that you

26
00:00:57,600 --> 00:00:59,440
understand how much it's going to cost

27
00:00:59,440 --> 00:01:01,760
but is this a likely cost

28
00:01:01,760 --> 00:01:04,319
so we do it on based on risk and we've

29
00:01:04,319 --> 00:01:06,400
been doing that for a long time

30
00:01:06,400 --> 00:01:07,760
i think most of the ones all the way

31
00:01:07,760 --> 00:01:10,240
back to 2007 and possibly even before

32
00:01:10,240 --> 00:01:12,640
then were also risks this is the seventh

33
00:01:12,640 --> 00:01:14,960
update we are a little bit late

34
00:01:14,960 --> 00:01:15,920
um

35
00:01:15,920 --> 00:01:17,759
due to covert we didn't get as much data

36
00:01:17,759 --> 00:01:20,000
in 2020 as we would have hoped for but

37
00:01:20,000 --> 00:01:22,240
we fixed that um

38
00:01:22,240 --> 00:01:23,280
the

39
00:01:23,280 --> 00:01:25,680
amount of data we got was 515 000

40
00:01:25,680 --> 00:01:27,759
applications so there's a little bit of

41
00:01:27,759 --> 00:01:29,360
chatter on the internet from various

42
00:01:29,360 --> 00:01:32,880
folks about our analysis and or the

43
00:01:32,880 --> 00:01:34,000
ordering

44
00:01:34,000 --> 00:01:36,640
you've got to realize that the os top 10

45
00:01:36,640 --> 00:01:39,439
it's the absolute bare minimum to avoid

46
00:01:39,439 --> 00:01:41,840
negligence you should be doing all of it

47
00:01:41,840 --> 00:01:43,759
it doesn't really matter if it's a1 or

48
00:01:43,759 --> 00:01:46,159
a3 or a10 you should be doing all of it

49
00:01:46,159 --> 00:01:48,320
because it is the bare

50
00:01:48,320 --> 00:01:51,200
minimum so please take that on board we

51
00:01:51,200 --> 00:01:52,880
have actually tried very hard this time

52
00:01:52,880 --> 00:01:54,399
to make it

53
00:01:54,399 --> 00:01:56,399
focus on developers lead developers and

54
00:01:56,399 --> 00:01:59,119
architects but also as a starting place

55
00:01:59,119 --> 00:02:01,439
for framework developers they really

56
00:02:01,439 --> 00:02:03,200
should be using the asvs because it's

57
00:02:03,200 --> 00:02:04,799
testable

58
00:02:04,799 --> 00:02:06,399
you'll see that we've got some changing

59
00:02:06,399 --> 00:02:08,318
in order

60
00:02:08,318 --> 00:02:09,520
and that's primarily because the

61
00:02:09,520 --> 00:02:11,760
framework developers taking on board the

62
00:02:11,760 --> 00:02:15,520
application security aspects of their um

63
00:02:15,520 --> 00:02:17,040
you know the way that their frameworks

64
00:02:17,040 --> 00:02:18,400
work

65
00:02:18,400 --> 00:02:20,720
obviously the traditional users of the

66
00:02:20,720 --> 00:02:23,280
os top 10 are absent program management

67
00:02:23,280 --> 00:02:25,440
sees those ctos and so on

68
00:02:25,440 --> 00:02:27,599
absent leads

69
00:02:27,599 --> 00:02:29,599
but also abstech professionals such as

70
00:02:29,599 --> 00:02:31,519
penetration testers code reviewers

71
00:02:31,519 --> 00:02:34,560
vendors tools and trainers

72
00:02:34,560 --> 00:02:36,640
again we would encourage you to take

73
00:02:36,640 --> 00:02:39,440
this as the 101 class that you would

74
00:02:39,440 --> 00:02:41,519
give as one lecture at the beginning of

75
00:02:41,519 --> 00:02:42,560
the year

76
00:02:42,560 --> 00:02:44,720
not as the end point it's really

77
00:02:44,720 --> 00:02:46,080
important that people understand that

78
00:02:46,080 --> 00:02:47,760
this is designed primarily to be an

79
00:02:47,760 --> 00:02:50,720
awareness piece however we

80
00:02:50,720 --> 00:02:52,800
have done some work on that we'll talk

81
00:02:52,800 --> 00:02:55,280
about that in a check

82
00:02:55,280 --> 00:02:57,519
the leadership of the ios top 10 is four

83
00:02:57,519 --> 00:02:58,480
equals

84
00:02:58,480 --> 00:02:59,760
brian glass

85
00:02:59,760 --> 00:03:01,920
torsten and neil

86
00:03:01,920 --> 00:03:05,360
we all write we all do the data analysis

87
00:03:05,360 --> 00:03:06,800
although brian does the collection and

88
00:03:06,800 --> 00:03:08,560
analysis because he's the data scientist

89
00:03:08,560 --> 00:03:09,760
amongst us

90
00:03:09,760 --> 00:03:11,280
um

91
00:03:11,280 --> 00:03:12,239
we

92
00:03:12,239 --> 00:03:14,640
have been working very very hard over

93
00:03:14,640 --> 00:03:18,400
the last few months to get it finished

94
00:03:18,400 --> 00:03:20,159
many of you have seen the draft and i

95
00:03:20,159 --> 00:03:21,280
would encourage you to have a look at

96
00:03:21,280 --> 00:03:22,720
the final version

97
00:03:22,720 --> 00:03:24,640
um we'll talk about the way it's

98
00:03:24,640 --> 00:03:26,720
delivered in a tick but fundamentally it

99
00:03:26,720 --> 00:03:28,640
is going to be online i wanted to make

100
00:03:28,640 --> 00:03:30,400
sure that it wasn't just a pdf that

101
00:03:30,400 --> 00:03:32,480
gathered dust on someone's shelf

102
00:03:32,480 --> 00:03:34,319
it was something that everyone could use

103
00:03:34,319 --> 00:03:37,280
so it's now mobile friendly and it also

104
00:03:37,280 --> 00:03:39,200
allows you to

105
00:03:39,200 --> 00:03:41,360
we will be having a poster

106
00:03:41,360 --> 00:03:42,879
that can go on people's cubicle walls

107
00:03:42,879 --> 00:03:44,560
once they go back to the office or if

108
00:03:44,560 --> 00:03:45,920
they're working from home they can just

109
00:03:45,920 --> 00:03:46,959
put it up

110
00:03:46,959 --> 00:03:48,239
we want to make sure that it's

111
00:03:48,239 --> 00:03:50,560
consumable in a way that it hasn't been

112
00:03:50,560 --> 00:03:53,120
in the past so

113
00:03:53,120 --> 00:03:54,799
give it a go

114
00:03:54,799 --> 00:03:55,599
so

115
00:03:55,599 --> 00:03:58,319
the highlights after 20 years nearly 20

116
00:03:58,319 --> 00:04:01,680
years injection is no longer a1

117
00:04:01,680 --> 00:04:03,439
one of the things that we had to do was

118
00:04:03,439 --> 00:04:06,159
when we looked at the data it seems like

119
00:04:06,159 --> 00:04:08,480
react view and other frameworks have

120
00:04:08,480 --> 00:04:10,319
actually done their job and people have

121
00:04:10,319 --> 00:04:11,360
moved

122
00:04:11,360 --> 00:04:14,319
with gusto to orms and entity frameworks

123
00:04:14,319 --> 00:04:16,238
and whatnot so

124
00:04:16,238 --> 00:04:19,279
sql injection has gone down to almost it

125
00:04:19,279 --> 00:04:21,199
wouldn't be in the os top 10 if it was

126
00:04:21,199 --> 00:04:23,840
by itself which is not true of the 2003

127
00:04:23,840 --> 00:04:25,759
and 2004 versions

128
00:04:25,759 --> 00:04:27,919
so we've been combining more and more

129
00:04:27,919 --> 00:04:29,520
injections together

130
00:04:29,520 --> 00:04:33,680
into the injection finding um and

131
00:04:33,680 --> 00:04:35,919
this time we've combined cross-site

132
00:04:35,919 --> 00:04:38,240
scripting and h and javascript injection

133
00:04:38,240 --> 00:04:40,320
into it as well and it still didn't make

134
00:04:40,320 --> 00:04:42,639
number one so that's a really good

135
00:04:42,639 --> 00:04:43,919
change and it's actually showing the

136
00:04:43,919 --> 00:04:45,840
impact of the os top 10 over a long

137
00:04:45,840 --> 00:04:47,680
period of time

138
00:04:47,680 --> 00:04:50,160
it also says that the original work that

139
00:04:50,160 --> 00:04:52,320
dave williams dave wickers and jeff

140
00:04:52,320 --> 00:04:55,280
williams did in 2003

141
00:04:55,280 --> 00:04:56,880
has paid off

142
00:04:56,880 --> 00:04:58,800
they were had a great deal of foresight

143
00:04:58,800 --> 00:05:01,039
and did a lot of work to build that and

144
00:05:01,039 --> 00:05:02,560
they only had limited data whereas we

145
00:05:02,560 --> 00:05:04,160
have like

146
00:05:04,160 --> 00:05:05,840
several orders of magnitude more data

147
00:05:05,840 --> 00:05:07,280
and it still agrees

148
00:05:07,280 --> 00:05:10,080
quite closely with what they did in 2003

149
00:05:10,080 --> 00:05:11,440
the ordering

150
00:05:11,440 --> 00:05:12,800
it doesn't really matter it's the 10

151
00:05:12,800 --> 00:05:15,039
things you should be doing

152
00:05:15,039 --> 00:05:16,560
we've deliberately tried to make this

153
00:05:16,560 --> 00:05:20,479
shorter by design we only want you to do

154
00:05:20,479 --> 00:05:22,320
to learn about the minimum and go after

155
00:05:22,320 --> 00:05:24,400
other things like the cheat sheets

156
00:05:24,400 --> 00:05:25,199
and

157
00:05:25,199 --> 00:05:26,479
the

158
00:05:26,479 --> 00:05:29,120
asvs or the proactive controls or the

159
00:05:29,120 --> 00:05:32,240
masbs or the web testing guide we don't

160
00:05:32,240 --> 00:05:34,240
want to provide every single little

161
00:05:34,240 --> 00:05:37,360
detail in the os top 10 just simply

162
00:05:37,360 --> 00:05:38,800
because

163
00:05:38,800 --> 00:05:41,039
we find that as an awareness piece as a

164
00:05:41,039 --> 00:05:43,039
training piece everybody's got different

165
00:05:43,039 --> 00:05:45,360
languages everyone's got different needs

166
00:05:45,360 --> 00:05:46,720
let's go and give you the information

167
00:05:46,720 --> 00:05:48,240
you really need in a much more greater

168
00:05:48,240 --> 00:05:50,880
detail but the version that you need

169
00:05:50,880 --> 00:05:52,400
right now

170
00:05:52,400 --> 00:05:54,720
we've also gone after a new look you can

171
00:05:54,720 --> 00:05:56,240
already see that the hours top 10

172
00:05:56,240 --> 00:05:58,639
iconography at the top right

173
00:05:58,639 --> 00:06:00,960
we have changed that

174
00:06:00,960 --> 00:06:02,639
we also have included

175
00:06:02,639 --> 00:06:04,000
we've given in

176
00:06:04,000 --> 00:06:06,160
for a long time in 2007 i wrote in the

177
00:06:06,160 --> 00:06:07,840
forward

178
00:06:07,840 --> 00:06:09,600
please don't use this as a standard and

179
00:06:09,600 --> 00:06:11,120
of course it was immediately adopted as

180
00:06:11,120 --> 00:06:13,680
a standard it was embedded into the pci

181
00:06:13,680 --> 00:06:17,440
dss amongst others please you know

182
00:06:17,440 --> 00:06:19,039
it's not a great standard so what we've

183
00:06:19,039 --> 00:06:20,479
done is we've talked about the way you

184
00:06:20,479 --> 00:06:22,880
can actually use it as a standard uh as

185
00:06:22,880 --> 00:06:24,720
a very entry-level standard and where to

186
00:06:24,720 --> 00:06:26,720
go from there but also how to use it as

187
00:06:26,720 --> 00:06:28,560
a very basic abstract program say for

188
00:06:28,560 --> 00:06:29,759
example you don't have one at all and

189
00:06:29,759 --> 00:06:31,520
you need to get going what would you do

190
00:06:31,520 --> 00:06:34,400
well we have a small chapter on both of

191
00:06:34,400 --> 00:06:37,680
those things we've used the most modern

192
00:06:37,680 --> 00:06:40,400
um ways of thinking about things to

193
00:06:40,400 --> 00:06:42,479
encourage you to have an effective

194
00:06:42,479 --> 00:06:45,280
tangible abset program rather than just

195
00:06:45,280 --> 00:06:48,400
one that you know i think the phrase is

196
00:06:48,400 --> 00:06:50,319
your attacker does not care about your

197
00:06:50,319 --> 00:06:51,680
risk register

198
00:06:51,680 --> 00:06:53,280
no they don't ever look it up before

199
00:06:53,280 --> 00:06:54,960
they get going they figure these things

200
00:06:54,960 --> 00:06:56,479
out for themselves so we want to have

201
00:06:56,479 --> 00:06:57,840
something that actually has an impact

202
00:06:57,840 --> 00:07:00,160
and actually brings around change

203
00:07:00,160 --> 00:07:02,800
the other thing is that finally we've

204
00:07:02,800 --> 00:07:05,039
normalized all of the titles to be root

205
00:07:05,039 --> 00:07:07,120
causes and not symptoms if you think

206
00:07:07,120 --> 00:07:09,919
about it so um sensitive data exposure

207
00:07:09,919 --> 00:07:12,479
is the outcome of a recalls

208
00:07:12,479 --> 00:07:13,520
so

209
00:07:13,520 --> 00:07:16,080
we've sprinkled the soft

210
00:07:16,080 --> 00:07:18,319
sensitive data exposure around the items

211
00:07:18,319 --> 00:07:19,840
that it actually

212
00:07:19,840 --> 00:07:23,120
includes and that deduped a lot of cwes

213
00:07:23,120 --> 00:07:25,199
from many of the items that were

214
00:07:25,199 --> 00:07:28,080
mixed in in the previous version

215
00:07:28,080 --> 00:07:30,160
so it's a lot easier to comply with the

216
00:07:30,160 --> 00:07:31,840
owl's top ten now because it has greater

217
00:07:31,840 --> 00:07:33,759
focus because we are looking at root

218
00:07:33,759 --> 00:07:36,319
causes and not symptoms

219
00:07:36,319 --> 00:07:37,840
we also have four new categories

220
00:07:37,840 --> 00:07:39,759
including insecure design and ssrf we'll

221
00:07:39,759 --> 00:07:42,560
talk about those as we get through

222
00:07:42,560 --> 00:07:45,199
where are we we are very very close to

223
00:07:45,199 --> 00:07:47,360
being completely done

224
00:07:47,360 --> 00:07:49,599
um as of last night we were still

225
00:07:49,599 --> 00:07:51,840
looking at a pr um we have one more

226
00:07:51,840 --> 00:07:53,280
piata emerge

227
00:07:53,280 --> 00:07:55,680
um that won't change substantially the

228
00:07:55,680 --> 00:07:57,680
os top 10 text so you can actually start

229
00:07:57,680 --> 00:08:00,639
using it today as i said it's online so

230
00:08:00,639 --> 00:08:02,319
i would encourage you to have a look at

231
00:08:02,319 --> 00:08:03,680
it

232
00:08:03,680 --> 00:08:05,599
the one that we're actually looking

233
00:08:05,599 --> 00:08:08,560
right at right now will increase the

234
00:08:08,560 --> 00:08:09,919
clarity of the way that we talk about

235
00:08:09,919 --> 00:08:11,919
sql injections so it's not going to be a

236
00:08:11,919 --> 00:08:13,759
shattering that changes at this point we

237
00:08:13,759 --> 00:08:15,120
also have a number of translations that

238
00:08:15,120 --> 00:08:16,639
are in progress and we've only just

239
00:08:16,639 --> 00:08:18,720
started the pdfing and the developer

240
00:08:18,720 --> 00:08:20,879
poster aspect but everything else is

241
00:08:20,879 --> 00:08:22,720
done so we're good

242
00:08:22,720 --> 00:08:24,240
so if you want to learn about how to do

243
00:08:24,240 --> 00:08:27,199
it please use this qr code

244
00:08:27,199 --> 00:08:29,199
it is a risky click but it's not a rick

245
00:08:29,199 --> 00:08:31,360
roll i promise it goes to

246
00:08:31,360 --> 00:08:33,599
brian's talk in sketch so you can

247
00:08:33,599 --> 00:08:35,519
register to go to his talk if you want

248
00:08:35,519 --> 00:08:37,519
to learn about how it's made that is the

249
00:08:37,519 --> 00:08:39,279
great talk it talks about how we

250
00:08:39,279 --> 00:08:41,839
actually got the data who we got it from

251
00:08:41,839 --> 00:08:43,760
um our methodology and how we came up

252
00:08:43,760 --> 00:08:45,440
with that methodology using community

253
00:08:45,440 --> 00:08:46,399
input

254
00:08:46,399 --> 00:08:48,720
at the open security summit in 2017.

255
00:08:48,720 --> 00:08:50,320
we've modified it a little bit based

256
00:08:50,320 --> 00:08:52,000
around our experiences of building the

257
00:08:52,000 --> 00:08:55,440
ios top 10 2017 and obviously the 2021.

258
00:08:55,440 --> 00:08:57,760
um here's it'll be a great talk please

259
00:08:57,760 --> 00:08:59,120
go

260
00:08:59,120 --> 00:09:01,360
so getting into it right away broken

261
00:09:01,360 --> 00:09:03,440
access control and you can see here

262
00:09:03,440 --> 00:09:05,040
we've got a picture of a car park and

263
00:09:05,040 --> 00:09:06,160
people are just driving around the

264
00:09:06,160 --> 00:09:08,000
barrier because well there's no fencing

265
00:09:08,000 --> 00:09:09,120
to stop you

266
00:09:09,120 --> 00:09:10,959
that is essentially what broken access

267
00:09:10,959 --> 00:09:12,640
control is about

268
00:09:12,640 --> 00:09:14,160
when i was doing penetration testing on

269
00:09:14,160 --> 00:09:15,920
a regular basis i would always reserve

270
00:09:15,920 --> 00:09:17,920
at least a third of my time to do a

271
00:09:17,920 --> 00:09:20,240
comprehensive access control check i

272
00:09:20,240 --> 00:09:22,959
actually did a review of a very famous

273
00:09:22,959 --> 00:09:24,560
logistics software used by many

274
00:09:24,560 --> 00:09:26,880
governments that run

275
00:09:26,880 --> 00:09:27,839
stuff

276
00:09:27,839 --> 00:09:28,640
um

277
00:09:28,640 --> 00:09:30,880
and it was 17 years old at the time that

278
00:09:30,880 --> 00:09:33,600
i was looking at it and i was able to be

279
00:09:33,600 --> 00:09:35,760
an administrator without being logged in

280
00:09:35,760 --> 00:09:38,240
and i could do administrative things

281
00:09:38,240 --> 00:09:40,800
without any hesitation and i was

282
00:09:40,800 --> 00:09:42,480
extraordinarily surprised that no other

283
00:09:42,480 --> 00:09:44,399
pen tester had ever come across that and

284
00:09:44,399 --> 00:09:46,240
the vendors themselves had never come

285
00:09:46,240 --> 00:09:48,160
across that this is actually incredibly

286
00:09:48,160 --> 00:09:49,920
testable and what we would like you to

287
00:09:49,920 --> 00:09:52,800
do is think about things from not just

288
00:09:52,800 --> 00:09:54,720
the point of view of breaches like

289
00:09:54,720 --> 00:09:57,040
reading data but also the unauthorized

290
00:09:57,040 --> 00:09:58,959
creation updating or deletion of data

291
00:09:58,959 --> 00:10:01,040
it's just as bad for example with that

292
00:10:01,040 --> 00:10:02,959
software i could have scheduled

293
00:10:02,959 --> 00:10:04,720
maintenance to occur

294
00:10:04,720 --> 00:10:06,079
on something that was really quite

295
00:10:06,079 --> 00:10:07,600
important that did not need to happen it

296
00:10:07,600 --> 00:10:09,279
could have costed millions of dollars

297
00:10:09,279 --> 00:10:10,560
but more importantly i could have

298
00:10:10,560 --> 00:10:12,079
avoided maintenance occurring on things

299
00:10:12,079 --> 00:10:13,839
that needed to occur and that could have

300
00:10:13,839 --> 00:10:16,399
resulted in people dying if it was

301
00:10:16,399 --> 00:10:18,640
not done in a timely fashion

302
00:10:18,640 --> 00:10:20,560
for example if a bridge fell down so

303
00:10:20,560 --> 00:10:22,640
this is an important thing to do don't

304
00:10:22,640 --> 00:10:23,920
just think about i can get all the

305
00:10:23,920 --> 00:10:25,600
records out think about how you can

306
00:10:25,600 --> 00:10:27,360
insert your records and modify existing

307
00:10:27,360 --> 00:10:29,760
records or delete records and become an

308
00:10:29,760 --> 00:10:31,120
administrator it's really important to

309
00:10:31,120 --> 00:10:33,279
test all of those things

310
00:10:33,279 --> 00:10:34,800
this is some of the biggest breaches and

311
00:10:34,800 --> 00:10:36,079
largest costs

312
00:10:36,079 --> 00:10:38,240
and i think it's under tested so it

313
00:10:38,240 --> 00:10:40,720
deserves its a1 spot

314
00:10:40,720 --> 00:10:42,800
cryptographic failures is a bit of a

315
00:10:42,800 --> 00:10:44,320
catch-all for almost anything that has

316
00:10:44,320 --> 00:10:46,240
crypto in it but it's also some facets

317
00:10:46,240 --> 00:10:48,480
of sensitive data exposure it's also

318
00:10:48,480 --> 00:10:50,320
some things about for example that you

319
00:10:50,320 --> 00:10:52,560
don't have tls set up correctly this is

320
00:10:52,560 --> 00:10:53,920
an area that can be addressed very

321
00:10:53,920 --> 00:10:55,600
easily i believe through

322
00:10:55,600 --> 00:10:58,240
we're seeing a lot of cloud stuff where

323
00:10:58,240 --> 00:11:00,560
configuration is code and therefore

324
00:11:00,560 --> 00:11:02,560
tools can actually help you do a better

325
00:11:02,560 --> 00:11:04,320
job please start using that sort of

326
00:11:04,320 --> 00:11:06,880
technology and using tooling to identify

327
00:11:06,880 --> 00:11:08,880
those weaknesses

328
00:11:08,880 --> 00:11:10,399
one of the problems that we do identify

329
00:11:10,399 --> 00:11:12,399
in this issue is that people aren't

330
00:11:12,399 --> 00:11:13,760
using something that they should be

331
00:11:13,760 --> 00:11:15,519
there tools never find something that's

332
00:11:15,519 --> 00:11:17,120
missing so

333
00:11:17,120 --> 00:11:19,040
um unless you're deliberately looking

334
00:11:19,040 --> 00:11:22,160
for cold spots there's every chance a

335
00:11:22,160 --> 00:11:24,000
developer and an apsec professional

336
00:11:24,000 --> 00:11:27,040
would both miss the absence of crypto so

337
00:11:27,040 --> 00:11:29,680
do think about how you might find uh the

338
00:11:29,680 --> 00:11:31,279
need to put crypto in

339
00:11:31,279 --> 00:11:34,640
and where it belongs

340
00:11:34,640 --> 00:11:37,279
luckily injection is still in the top 10

341
00:11:37,279 --> 00:11:39,760
but it is moving down and it moved down

342
00:11:39,760 --> 00:11:41,040
quite a bit

343
00:11:41,040 --> 00:11:42,640
once we put crossover scripting and

344
00:11:42,640 --> 00:11:46,480
javascript injection in it went up to a3

345
00:11:46,480 --> 00:11:49,360
it would have been probably a8 to a10

346
00:11:49,360 --> 00:11:50,880
without cross-site scripting and

347
00:11:50,880 --> 00:11:53,279
javascript injection

348
00:11:53,279 --> 00:11:55,839
it is easily but now very rarely found

349
00:11:55,839 --> 00:11:58,560
using tools but once this is found it's

350
00:11:58,560 --> 00:12:00,880
still as exploitable as it ever was so

351
00:12:00,880 --> 00:12:02,959
please do think about ways that you can

352
00:12:02,959 --> 00:12:04,720
improve both your own testing of these

353
00:12:04,720 --> 00:12:05,839
things because it is a bit more

354
00:12:05,839 --> 00:12:08,160
challenging to find but also helping

355
00:12:08,160 --> 00:12:10,880
developers adopt better frameworks if

356
00:12:10,880 --> 00:12:12,560
they're still using older frameworks

357
00:12:12,560 --> 00:12:14,000
that have cross-site scripting and they

358
00:12:14,000 --> 00:12:15,680
haven't yet started the migration path

359
00:12:15,680 --> 00:12:17,120
to react or view

360
00:12:17,120 --> 00:12:19,120
then they are missing out on automatic

361
00:12:19,120 --> 00:12:21,040
cross-site scripting protection

362
00:12:21,040 --> 00:12:24,480
and it is a lot easier to code and test

363
00:12:24,480 --> 00:12:26,399
those newer frameworks than the older

364
00:12:26,399 --> 00:12:27,760
ones

365
00:12:27,760 --> 00:12:29,440
i've actually been doing some node.js

366
00:12:29,440 --> 00:12:31,680
development around here and using jess

367
00:12:31,680 --> 00:12:34,240
to test view components is dead simple

368
00:12:34,240 --> 00:12:36,000
and i would encourage everybody to get

369
00:12:36,000 --> 00:12:37,200
on board with that because you can

370
00:12:37,200 --> 00:12:38,399
actually inject

371
00:12:38,399 --> 00:12:40,160
security payloads into that test

372
00:12:40,160 --> 00:12:42,079
framework and test it every single build

373
00:12:42,079 --> 00:12:44,720
that's exactly what you need to do

374
00:12:44,720 --> 00:12:46,880
we do talk about the paved road in the

375
00:12:46,880 --> 00:12:48,959
uh how to do an appsec program i

376
00:12:48,959 --> 00:12:50,959
encourage people to adopt paved roads

377
00:12:50,959 --> 00:12:52,560
this is essentially a set of components

378
00:12:52,560 --> 00:12:54,880
that are not secure or at least well

379
00:12:54,880 --> 00:12:57,440
secured but also it talks about how to

380
00:12:57,440 --> 00:12:59,120
make sure that people observe that those

381
00:12:59,120 --> 00:13:02,240
changes still in place

382
00:13:03,200 --> 00:13:05,680
a4 is in secure design

383
00:13:05,680 --> 00:13:06,399
this

384
00:13:06,399 --> 00:13:08,399
is possibly our most controversial new

385
00:13:08,399 --> 00:13:11,279
addition but the data is there so

386
00:13:11,279 --> 00:13:13,600
your only choice if you dislike this one

387
00:13:13,600 --> 00:13:15,440
is to have more data than us more than

388
00:13:15,440 --> 00:13:18,480
515 000 apps worth or a better data

389
00:13:18,480 --> 00:13:19,600
analysis

390
00:13:19,600 --> 00:13:21,440
outside of those two things and i'm not

391
00:13:21,440 --> 00:13:22,800
saying that last one is not possible

392
00:13:22,800 --> 00:13:24,639
that's exactly how brian glass became

393
00:13:24,639 --> 00:13:27,040
our co-contributor and then co-leader of

394
00:13:27,040 --> 00:13:29,920
the old top 10 2017 because he wrote a

395
00:13:29,920 --> 00:13:31,839
three-part blog series

396
00:13:31,839 --> 00:13:34,000
constructively

397
00:13:34,000 --> 00:13:36,240
saying this is the data you have it can

398
00:13:36,240 --> 00:13:38,480
be analyzed in this way and it shows

399
00:13:38,480 --> 00:13:41,040
this that's exactly what we want to see

400
00:13:41,040 --> 00:13:43,199
if you do have a metadata analysis that

401
00:13:43,199 --> 00:13:44,720
was

402
00:13:44,720 --> 00:13:47,040
using our data

403
00:13:47,040 --> 00:13:48,240
we're more than welcome to take that

404
00:13:48,240 --> 00:13:50,880
commentary on but there is a lot of cves

405
00:13:50,880 --> 00:13:52,959
about this as well it's found in three

406
00:13:52,959 --> 00:13:54,320
percent of all laps which is towards the

407
00:13:54,320 --> 00:13:56,480
top end which is why it's so high

408
00:13:56,480 --> 00:13:58,800
um we really need people to shift left i

409
00:13:58,800 --> 00:14:00,480
know jeff williams's previous talk

410
00:14:00,480 --> 00:14:03,040
talked about shifting wrong

411
00:14:03,040 --> 00:14:05,440
my goal here is not to simply just do

412
00:14:05,440 --> 00:14:09,279
what we were doing in 1989 and do it in

413
00:14:09,279 --> 00:14:11,199
the early stages of the

414
00:14:11,199 --> 00:14:13,279
thing i want us to be working with

415
00:14:13,279 --> 00:14:15,600
development teams it's not precisely

416
00:14:15,600 --> 00:14:17,440
scalable and so we do need to use

417
00:14:17,440 --> 00:14:19,279
tooling to make our work a lot easier

418
00:14:19,279 --> 00:14:21,120
and better but it's really quite

419
00:14:21,120 --> 00:14:23,120
important we stop doing things we are

420
00:14:23,120 --> 00:14:25,040
not auditors unless you have an

421
00:14:25,040 --> 00:14:26,480
accounting degree

422
00:14:26,480 --> 00:14:29,440
and actually have majored in auditing

423
00:14:29,440 --> 00:14:30,959
you are not allowed to call what you do

424
00:14:30,959 --> 00:14:33,440
auditing we are not doing desk checks it

425
00:14:33,440 --> 00:14:36,079
has failed it is a terrible paradigm we

426
00:14:36,079 --> 00:14:38,560
really have to shift left we must threat

427
00:14:38,560 --> 00:14:40,560
model it's not an option anymore even if

428
00:14:40,560 --> 00:14:42,160
you're doing penetration testing or code

429
00:14:42,160 --> 00:14:44,480
reviews what would be the weaknesses

430
00:14:44,480 --> 00:14:46,639
that this application

431
00:14:46,639 --> 00:14:48,880
surfaces to me when i do a threat model

432
00:14:48,880 --> 00:14:51,839
then i test it i check my hypotheses

433
00:14:51,839 --> 00:14:54,399
it turns out to be true then you'll be

434
00:14:54,399 --> 00:14:56,160
able to exploit it and the great thing

435
00:14:56,160 --> 00:14:58,000
about threat modeling is you might spend

436
00:14:58,000 --> 00:15:00,240
an hour or two doing it but then you

437
00:15:00,240 --> 00:15:01,360
will have

438
00:15:01,360 --> 00:15:04,000
such exploitable things that there will

439
00:15:04,000 --> 00:15:06,399
be no choice but to rewrite part of the

440
00:15:06,399 --> 00:15:07,519
application

441
00:15:07,519 --> 00:15:09,120
and this is why we encourage development

442
00:15:09,120 --> 00:15:10,480
teams to get into it as well there's a

443
00:15:10,480 --> 00:15:13,360
bunch of threat modeling talks in this

444
00:15:13,360 --> 00:15:15,040
20th anniversary

445
00:15:15,040 --> 00:15:16,560
and there's even more coming up in the

446
00:15:16,560 --> 00:15:19,839
november appsec global

447
00:15:19,839 --> 00:15:21,199
it's really important that development

448
00:15:21,199 --> 00:15:23,600
teams get into this as well because if

449
00:15:23,600 --> 00:15:25,040
the threat models are not there and

450
00:15:25,040 --> 00:15:26,480
you've got this vulnerable application

451
00:15:26,480 --> 00:15:28,320
and it's vulnerable through and through

452
00:15:28,320 --> 00:15:30,639
it's essentially a rewrite it is 100

453
00:15:30,639 --> 00:15:32,639
times more expensive to rewrite an

454
00:15:32,639 --> 00:15:34,320
application than just simply to design

455
00:15:34,320 --> 00:15:36,959
it properly and spend a few hours

456
00:15:36,959 --> 00:15:38,880
on each of the major features to make

457
00:15:38,880 --> 00:15:40,320
sure you understand where the attacks

458
00:15:40,320 --> 00:15:41,600
might come in and what controls you

459
00:15:41,600 --> 00:15:43,519
might need and make sure that they there

460
00:15:43,519 --> 00:15:45,440
and they work and that means that you've

461
00:15:45,440 --> 00:15:47,839
written tests and that doesn't mean

462
00:15:47,839 --> 00:15:49,440
abstech pros are writing those tests it

463
00:15:49,440 --> 00:15:51,360
means the developers are aware of these

464
00:15:51,360 --> 00:15:52,639
issues and their written tests to

465
00:15:52,639 --> 00:15:54,800
prevent them we obviously want people to

466
00:15:54,800 --> 00:15:55,680
adapt

467
00:15:55,680 --> 00:15:58,479
better frameworks

468
00:15:59,040 --> 00:16:01,120
okay number five

469
00:16:01,120 --> 00:16:03,199
we are seeing security configuration

470
00:16:03,199 --> 00:16:05,360
jumping up a little bit uh there's way

471
00:16:05,360 --> 00:16:07,839
more than in the previous 2017 data set

472
00:16:07,839 --> 00:16:09,199
and that's because infrastructure is

473
00:16:09,199 --> 00:16:11,600
code and we now have tooling that is

474
00:16:11,600 --> 00:16:13,279
actually available to identify a lot of

475
00:16:13,279 --> 00:16:14,560
the issues that were hidden from us

476
00:16:14,560 --> 00:16:15,839
before

477
00:16:15,839 --> 00:16:18,160
back in the old days bad old days a lot

478
00:16:18,160 --> 00:16:20,079
of penetration testing occurred in

479
00:16:20,079 --> 00:16:21,360
development or pre-production

480
00:16:21,360 --> 00:16:22,720
environments which weren't the same as

481
00:16:22,720 --> 00:16:24,320
production and so they were often

482
00:16:24,320 --> 00:16:25,680
glossed over you wouldn't actually

483
00:16:25,680 --> 00:16:27,519
report on a bad

484
00:16:27,519 --> 00:16:29,839
or missing tls certificate because it

485
00:16:29,839 --> 00:16:31,600
wasn't the final configuration it was

486
00:16:31,600 --> 00:16:33,120
literally this is the development

487
00:16:33,120 --> 00:16:35,040
environment it has no tls certificate so

488
00:16:35,040 --> 00:16:36,800
you wouldn't even report it now we can

489
00:16:36,800 --> 00:16:39,839
actually see how the tls certificate is

490
00:16:39,839 --> 00:16:41,759
coming in and how it is configured what

491
00:16:41,759 --> 00:16:43,440
algorithms are there and we have tools

492
00:16:43,440 --> 00:16:44,880
that can actually identify those issues

493
00:16:44,880 --> 00:16:46,399
for you that's why i believe this is

494
00:16:46,399 --> 00:16:49,120
jumped up it is also incredibly easy

495
00:16:49,120 --> 00:16:51,120
because of that tooling to address these

496
00:16:51,120 --> 00:16:53,120
things so i do want to see this fall

497
00:16:53,120 --> 00:16:55,040
down again but the only way for us to do

498
00:16:55,040 --> 00:16:57,360
this is to surface the risk to bring

499
00:16:57,360 --> 00:16:59,279
this to the attention of the developers

500
00:16:59,279 --> 00:17:00,959
as they're building the

501
00:17:00,959 --> 00:17:02,639
configuration the terraform scripts and

502
00:17:02,639 --> 00:17:04,480
whatnot

503
00:17:04,480 --> 00:17:06,240
we want cloud formation all of those

504
00:17:06,240 --> 00:17:08,640
things we want them to be built securely

505
00:17:08,640 --> 00:17:10,160
and the best way to do that is run tools

506
00:17:10,160 --> 00:17:12,079
over that configuration identify the

507
00:17:12,079 --> 00:17:13,679
weak issues and make sure that they

508
00:17:13,679 --> 00:17:15,039
don't even make it into production let

509
00:17:15,039 --> 00:17:17,359
alone development

510
00:17:17,359 --> 00:17:18,799
obviously if you're actually working

511
00:17:18,799 --> 00:17:20,160
with the development team and you're

512
00:17:20,160 --> 00:17:22,000
building the bathrood and you've got

513
00:17:22,000 --> 00:17:24,640
this like golden ami that you're keeping

514
00:17:24,640 --> 00:17:26,319
up to date with a pre-hardened

515
00:17:26,319 --> 00:17:27,599
development and production framework

516
00:17:27,599 --> 00:17:29,280
components and build configurations this

517
00:17:29,280 --> 00:17:31,360
starts to go away as well but then you

518
00:17:31,360 --> 00:17:32,640
need to make sure that whoever's using

519
00:17:32,640 --> 00:17:35,039
the paper road has access to the newer

520
00:17:35,039 --> 00:17:39,440
versions as you uh improve it over time

521
00:17:39,520 --> 00:17:41,280
a6

522
00:17:41,280 --> 00:17:43,679
vulnerable and outdated components

523
00:17:43,679 --> 00:17:46,960
this is by far the largest and most

524
00:17:46,960 --> 00:17:48,799
costly breach of all time it would

525
00:17:48,799 --> 00:17:50,799
happen in 2017. i'm not going to rehash

526
00:17:50,799 --> 00:17:52,000
that and i think many people are

527
00:17:52,000 --> 00:17:53,360
familiar with it

528
00:17:53,360 --> 00:17:56,480
um it does is covered off in the recent

529
00:17:56,480 --> 00:17:58,640
set of executive actions or executive

530
00:17:58,640 --> 00:17:59,600
order

531
00:17:59,600 --> 00:18:01,280
from the us government

532
00:18:01,280 --> 00:18:03,039
i know that doesn't apply to many of you

533
00:18:03,039 --> 00:18:05,039
who are watching this but i think it's

534
00:18:05,039 --> 00:18:06,240
really important that we actually

535
00:18:06,240 --> 00:18:08,000
understand that supply chain security is

536
00:18:08,000 --> 00:18:09,520
not optional anymore

537
00:18:09,520 --> 00:18:11,120
we need to be able to provide visibility

538
00:18:11,120 --> 00:18:13,120
to consumers of applications that what

539
00:18:13,120 --> 00:18:15,520
you've done is the minimum but it also

540
00:18:15,520 --> 00:18:17,760
covers off things such as making sure

541
00:18:17,760 --> 00:18:21,600
that the build that you're building is a

542
00:18:21,600 --> 00:18:23,440
the best available

543
00:18:23,440 --> 00:18:25,679
but also that you've used no vulnerable

544
00:18:25,679 --> 00:18:26,880
components

545
00:18:26,880 --> 00:18:28,480
we strongly recommend

546
00:18:28,480 --> 00:18:31,200
that you use ci cd tools to warn for

547
00:18:31,200 --> 00:18:33,520
outdated components so that tech leads

548
00:18:33,520 --> 00:18:35,280
can keep on top of all that component

549
00:18:35,280 --> 00:18:37,679
needs to be replaced or updated soon

550
00:18:37,679 --> 00:18:40,000
and they've got time to do it

551
00:18:40,000 --> 00:18:42,880
but then break the build for vulnerable

552
00:18:42,880 --> 00:18:44,559
components there is absolutely zero

553
00:18:44,559 --> 00:18:47,200
excuses in 2021 to have vulnerable

554
00:18:47,200 --> 00:18:48,400
components

555
00:18:48,400 --> 00:18:50,160
in brand new builds being deployed to

556
00:18:50,160 --> 00:18:51,200
production

557
00:18:51,200 --> 00:18:52,960
i know that many of you think well that

558
00:18:52,960 --> 00:18:55,280
component is not really used in my code

559
00:18:55,280 --> 00:18:56,880
but it's still there

560
00:18:56,880 --> 00:18:59,760
and if you have the option of taking a

561
00:18:59,760 --> 00:19:01,760
non-vulnerable component i don't know

562
00:19:01,760 --> 00:19:03,520
why you wouldn't to my mind vulnerable

563
00:19:03,520 --> 00:19:05,679
components they may not be exploitable

564
00:19:05,679 --> 00:19:06,640
today

565
00:19:06,640 --> 00:19:08,720
just remember in the past use after free

566
00:19:08,720 --> 00:19:11,200
exploits used to be unexploitable and

567
00:19:11,200 --> 00:19:13,760
then they became exploitable

568
00:19:13,760 --> 00:19:15,360
that's exactly the reason why we care

569
00:19:15,360 --> 00:19:16,480
about this we want to make sure that

570
00:19:16,480 --> 00:19:17,520
vulnerable components aren't in

571
00:19:17,520 --> 00:19:20,400
production systems

572
00:19:20,799 --> 00:19:22,559
identification authentication failures

573
00:19:22,559 --> 00:19:24,480
has fallen to number seven and this is

574
00:19:24,480 --> 00:19:26,000
primarily because people are stunned to

575
00:19:26,000 --> 00:19:28,400
adopt oauth and single sign-on across

576
00:19:28,400 --> 00:19:30,799
the board and by using things like such

577
00:19:30,799 --> 00:19:34,240
as all xero and other um

578
00:19:34,240 --> 00:19:36,240
cloud authentication platforms such as

579
00:19:36,240 --> 00:19:38,640
the google sign-on you and the microsoft

580
00:19:38,640 --> 00:19:40,880
sign on they all have

581
00:19:40,880 --> 00:19:42,960
mfa built in they all have

582
00:19:42,960 --> 00:19:45,600
anti-automation they all have

583
00:19:45,600 --> 00:19:47,760
good logging and monitoring many of the

584
00:19:47,760 --> 00:19:49,679
things that are problematic that are

585
00:19:49,679 --> 00:19:51,919
dealt with in asv2 and b3 are dealt with

586
00:19:51,919 --> 00:19:53,760
automatically if you adopt those more

587
00:19:53,760 --> 00:19:54,799
secure

588
00:19:54,799 --> 00:19:57,360
cloud-based frameworks

589
00:19:57,360 --> 00:19:59,120
what we want to do is for everyone else

590
00:19:59,120 --> 00:20:01,280
who hasn't quite got there yet or still

591
00:20:01,280 --> 00:20:02,960
has the option of having usernames and

592
00:20:02,960 --> 00:20:04,960
passwords that you start to address some

593
00:20:04,960 --> 00:20:06,799
of these major issues and that's why

594
00:20:06,799 --> 00:20:09,039
this is still in the house top ten

595
00:20:09,039 --> 00:20:11,280
we also do cover of some of the session

596
00:20:11,280 --> 00:20:12,640
management issues such as section

597
00:20:12,640 --> 00:20:14,880
fixation which is surprisingly still

598
00:20:14,880 --> 00:20:16,799
there i always thought the frameworks

599
00:20:16,799 --> 00:20:18,720
would have helped fix that up

600
00:20:18,720 --> 00:20:20,400
so what i would suggest is have a look

601
00:20:20,400 --> 00:20:22,480
at the asvs that's the line with nist

602
00:20:22,480 --> 00:20:25,360
800.63

603
00:20:25,360 --> 00:20:28,000
our controls are almost a one for one

604
00:20:28,000 --> 00:20:30,720
for the nist 800.63 so if you do

605
00:20:30,720 --> 00:20:33,600
the asvs level 2

606
00:20:33,600 --> 00:20:36,559
and you are using nist 800 63 you are

607
00:20:36,559 --> 00:20:39,600
doing a really good job you far exceed

608
00:20:39,600 --> 00:20:43,120
the requirements of iso 27002

609
00:20:43,120 --> 00:20:44,880
the one thing that i'll continue to harp

610
00:20:44,880 --> 00:20:46,799
on about is please stop doing password

611
00:20:46,799 --> 00:20:49,520
rotation that is a ineffective control

612
00:20:49,520 --> 00:20:51,840
it was ineffective in 1979 when it was

613
00:20:51,840 --> 00:20:52,880
first i'd

614
00:20:52,880 --> 00:20:54,799
you know the the first paper talking

615
00:20:54,799 --> 00:20:57,200
about it they broke it in 1979 and yet

616
00:20:57,200 --> 00:20:58,480
it became one of the major ways of

617
00:20:58,480 --> 00:21:00,080
preventing people

618
00:21:00,080 --> 00:21:02,960
reusing passwords it's a crazy crazy

619
00:21:02,960 --> 00:21:04,640
control because they even in that paper

620
00:21:04,640 --> 00:21:07,760
they dissed it as a weak control please

621
00:21:07,760 --> 00:21:09,039
stop doing it

622
00:21:09,039 --> 00:21:10,720
it's not permitted in the ios top 10

623
00:21:10,720 --> 00:21:12,400
it's not permitted in the asvs it's not

624
00:21:12,400 --> 00:21:14,960
permitted in this 800.63

625
00:21:14,960 --> 00:21:17,919
it's not even mentioned in iso 27002

626
00:21:17,919 --> 00:21:20,320
please stop doing it it's really

627
00:21:20,320 --> 00:21:22,080
important i i get really head up about

628
00:21:22,080 --> 00:21:24,400
that one also questions and answers

629
00:21:24,400 --> 00:21:25,440
um

630
00:21:25,440 --> 00:21:27,280
the problem is that you go to facebook

631
00:21:27,280 --> 00:21:29,360
you log on and half of your friends are

632
00:21:29,360 --> 00:21:30,960
answering questions about what the high

633
00:21:30,960 --> 00:21:32,480
school mascot is

634
00:21:32,480 --> 00:21:33,919
i mean that's the reason why this is

635
00:21:33,919 --> 00:21:35,840
crazy is that just because you know

636
00:21:35,840 --> 00:21:37,760
something like the high school mascot

637
00:21:37,760 --> 00:21:39,120
doesn't mean that you are andrew

638
00:21:39,120 --> 00:21:41,760
vanderstock that's as simple as it gets

639
00:21:41,760 --> 00:21:43,600
the evidence of identity which is why we

640
00:21:43,600 --> 00:21:44,720
call the identification and

641
00:21:44,720 --> 00:21:46,400
authentication phase the evidence of

642
00:21:46,400 --> 00:21:48,720
identity of questions and answers is

643
00:21:48,720 --> 00:21:51,520
negligible there is none just because

644
00:21:51,520 --> 00:21:53,919
you know my birthday my birthday is not

645
00:21:53,919 --> 00:21:55,760
a secret i invite people to my birthday

646
00:21:55,760 --> 00:21:57,280
party if i had to rely upon the

647
00:21:57,280 --> 00:21:58,799
operational security of all of my

648
00:21:58,799 --> 00:22:00,400
friends i would have been breached a

649
00:22:00,400 --> 00:22:03,039
long time ago i always answer rubbish

650
00:22:03,039 --> 00:22:06,159
and random questions for those

651
00:22:06,159 --> 00:22:09,280
ate software and data integrity phase we

652
00:22:09,280 --> 00:22:13,039
are also looking at this as the new one

653
00:22:13,039 --> 00:22:14,559
we want to make sure that accountability

654
00:22:14,559 --> 00:22:16,159
is a part of this we want to make sure

655
00:22:16,159 --> 00:22:17,600
that the integrity of the build process

656
00:22:17,600 --> 00:22:19,679
is there a lot of the recent attacks

657
00:22:19,679 --> 00:22:20,880
have been

658
00:22:20,880 --> 00:22:22,960
nation-state attackers including

659
00:22:22,960 --> 00:22:25,039
additional code into

660
00:22:25,039 --> 00:22:26,720
a an official build

661
00:22:26,720 --> 00:22:28,240
you should be making sure that your

662
00:22:28,240 --> 00:22:30,720
official builds are

663
00:22:30,720 --> 00:22:32,640
secured so

664
00:22:32,640 --> 00:22:35,200
is there a way to make sure that when

665
00:22:35,200 --> 00:22:37,200
you build what you built was actually

666
00:22:37,200 --> 00:22:39,600
correct it'd be really good to have some

667
00:22:39,600 --> 00:22:41,520
sort of process that builds it normally

668
00:22:41,520 --> 00:22:43,200
and then from time to time you have an

669
00:22:43,200 --> 00:22:45,280
alternative air gap

670
00:22:45,280 --> 00:22:47,760
mechanism of building the same thing and

671
00:22:47,760 --> 00:22:49,360
making sure that the two outputs are the

672
00:22:49,360 --> 00:22:50,480
same

673
00:22:50,480 --> 00:22:52,559
it is a little bit paranoid but it's one

674
00:22:52,559 --> 00:22:54,400
of the things that we care about we also

675
00:22:54,400 --> 00:22:56,000
care about things like software updates

676
00:22:56,000 --> 00:22:57,919
for that integrity and for any of you

677
00:22:57,919 --> 00:23:01,039
who use like visual studio code or

678
00:23:01,039 --> 00:23:03,440
discord you know it updates itself all

679
00:23:03,440 --> 00:23:05,200
the time and it's just an electron app

680
00:23:05,200 --> 00:23:06,480
it's just javascript that's been

681
00:23:06,480 --> 00:23:08,000
downloaded to your application to your

682
00:23:08,000 --> 00:23:08,900
computer and run

683
00:23:08,900 --> 00:23:10,000
[Music]

684
00:23:10,000 --> 00:23:12,880
if someone can give you a hostile

685
00:23:12,880 --> 00:23:15,360
component without integrity and you

686
00:23:15,360 --> 00:23:16,799
don't know about it then you've lost

687
00:23:16,799 --> 00:23:18,159
control of your computer we want to make

688
00:23:18,159 --> 00:23:20,000
sure software updates are done in the

689
00:23:20,000 --> 00:23:22,559
most secure way possible as this is such

690
00:23:22,559 --> 00:23:25,760
a new idea sorry a new item please do

691
00:23:25,760 --> 00:23:27,840
read this section i'm going to be in the

692
00:23:27,840 --> 00:23:31,360
comm in the um the questions section um

693
00:23:31,360 --> 00:23:32,400
of the

694
00:23:32,400 --> 00:23:33,440
of

695
00:23:33,440 --> 00:23:36,720
in slack for pretty much all day so feel

696
00:23:36,720 --> 00:23:38,240
free to hit me up and ask me questions

697
00:23:38,240 --> 00:23:41,039
about this new one

698
00:23:41,360 --> 00:23:42,960
security and logging monitoring failures

699
00:23:42,960 --> 00:23:45,200
is our first survey question

700
00:23:45,200 --> 00:23:46,640
for the second time in aurora we've

701
00:23:46,640 --> 00:23:48,799
actually asked the industry

702
00:23:48,799 --> 00:23:51,520
to participate um we actually extended

703
00:23:51,520 --> 00:23:53,120
it out to linkedin and facebook this

704
00:23:53,120 --> 00:23:54,720
time not just twitter

705
00:23:54,720 --> 00:23:56,320
so we actually managed to get a lot more

706
00:23:56,320 --> 00:23:58,159
answers this time

707
00:23:58,159 --> 00:24:00,400
and security logging monitoring came up

708
00:24:00,400 --> 00:24:02,080
as the number one item so this was the

709
00:24:02,080 --> 00:24:04,799
controversial one in the 2017 version

710
00:24:04,799 --> 00:24:07,200
and now it's the number one item that

711
00:24:07,200 --> 00:24:09,600
everyone wanted in the 2021 version so

712
00:24:09,600 --> 00:24:11,919
i'm very pleased by this

713
00:24:11,919 --> 00:24:14,960
the idea that in 2021 let alone 2017

714
00:24:14,960 --> 00:24:16,320
that you don't want to know about if

715
00:24:16,320 --> 00:24:18,559
your application's breached that you

716
00:24:18,559 --> 00:24:19,919
don't want to make sure that your

717
00:24:19,919 --> 00:24:22,559
application has a like an effective

718
00:24:22,559 --> 00:24:24,880
escalation procedure is

719
00:24:24,880 --> 00:24:27,520
mind-boggling to me so i would encourage

720
00:24:27,520 --> 00:24:29,679
you to include this there was a great

721
00:24:29,679 --> 00:24:32,799
talk a couple talks ago on what you know

722
00:24:32,799 --> 00:24:34,960
what is good logging looks like if you

723
00:24:34,960 --> 00:24:36,400
didn't catch that we hope to have the

724
00:24:36,400 --> 00:24:39,919
videos up uh for members shortly um do

725
00:24:39,919 --> 00:24:41,919
have a look at that um it's really

726
00:24:41,919 --> 00:24:45,200
important that logs contain security

727
00:24:45,200 --> 00:24:48,240
issues such as someone's trying to log

728
00:24:48,240 --> 00:24:50,159
in a lot do you want to have a look at

729
00:24:50,159 --> 00:24:52,240
that then you can look at it and then

730
00:24:52,240 --> 00:24:53,919
identify through vlogs that someone

731
00:24:53,919 --> 00:24:55,440
really is trying to do something and you

732
00:24:55,440 --> 00:24:57,919
can do you can actually take action

733
00:24:57,919 --> 00:25:00,320
it is very difficult to dynamically test

734
00:25:00,320 --> 00:25:02,000
this and

735
00:25:02,000 --> 00:25:03,840
going back to that thing about we're not

736
00:25:03,840 --> 00:25:05,600
auditors well one of the things in

737
00:25:05,600 --> 00:25:07,360
auditing is

738
00:25:07,360 --> 00:25:08,640
after you're

739
00:25:08,640 --> 00:25:10,960
done you can ask questions you can

740
00:25:10,960 --> 00:25:13,200
interview people and say hey

741
00:25:13,200 --> 00:25:15,039
did you notice me i was busy hacking

742
00:25:15,039 --> 00:25:17,440
your system for two weeks

743
00:25:17,440 --> 00:25:19,919
at any time did your system alert you

744
00:25:19,919 --> 00:25:21,679
and if so what would you have done about

745
00:25:21,679 --> 00:25:23,600
it if you didn't know it was me

746
00:25:23,600 --> 00:25:25,120
you can ask that question from a

747
00:25:25,120 --> 00:25:26,880
penetration test point of view and

748
00:25:26,880 --> 00:25:28,880
that's what we encourage people to do is

749
00:25:28,880 --> 00:25:31,440
to ask questions it's perfectly valid if

750
00:25:31,440 --> 00:25:33,919
you're doing an itgc audit and you are

751
00:25:33,919 --> 00:25:36,880
an accountant with a cpa you can that's

752
00:25:36,880 --> 00:25:39,760
exactly how itcc audits occur you ask

753
00:25:39,760 --> 00:25:42,559
questions and you get evidence for those

754
00:25:42,559 --> 00:25:44,640
questions to back up the um the

755
00:25:44,640 --> 00:25:47,520
assertions being made

756
00:25:47,520 --> 00:25:49,840
a10 server side request forgery and

757
00:25:49,840 --> 00:25:52,400
thank you so much to owens desai he's

758
00:25:52,400 --> 00:25:55,039
the world renowned expert of ssrf if

759
00:25:55,039 --> 00:25:56,960
you've not actually seen any of his

760
00:25:56,960 --> 00:25:58,799
videos on ssrf

761
00:25:58,799 --> 00:26:02,320
be amazed uh they are mind-blowing you

762
00:26:02,320 --> 00:26:04,720
absolutely 100 need to start following

763
00:26:04,720 --> 00:26:06,159
him on twitter

764
00:26:06,159 --> 00:26:08,640
check out um his black hat and defcon

765
00:26:08,640 --> 00:26:11,360
presentations on ssrf he's also got a

766
00:26:11,360 --> 00:26:13,279
lot of things to do

767
00:26:13,279 --> 00:26:15,279
with eurorail parses and the way that

768
00:26:15,279 --> 00:26:16,880
they break so

769
00:26:16,880 --> 00:26:18,880
absolutely this is one of the guys that

770
00:26:18,880 --> 00:26:20,400
we wanted to have right this section and

771
00:26:20,400 --> 00:26:22,559
he wrote it for us in no time flat and

772
00:26:22,559 --> 00:26:23,840
i'm really really pleased with the

773
00:26:23,840 --> 00:26:26,480
outcome um we edited it lightly but

774
00:26:26,480 --> 00:26:28,799
fundamentally it's his words so you know

775
00:26:28,799 --> 00:26:31,520
that the what ssrf is about and how to

776
00:26:31,520 --> 00:26:33,520
prevent it and what we would like to do

777
00:26:33,520 --> 00:26:35,440
is make sure that frameworks protect

778
00:26:35,440 --> 00:26:37,120
against ssrf by default this is their

779
00:26:37,120 --> 00:26:38,880
their job they shouldn't be allowing

780
00:26:38,880 --> 00:26:41,279
this stuff to occur but it's also your

781
00:26:41,279 --> 00:26:42,400
job to make sure that there is

782
00:26:42,400 --> 00:26:45,039
segmentation and alerting to make sure

783
00:26:45,039 --> 00:26:46,720
that if something unusual is happening

784
00:26:46,720 --> 00:26:48,480
it either doesn't work at all through

785
00:26:48,480 --> 00:26:50,720
segmentation or you're alerted to

786
00:26:50,720 --> 00:26:51,919
something unusual happening from a

787
00:26:51,919 --> 00:26:54,080
component that should not be happening

788
00:26:54,080 --> 00:26:57,279
but also we would like to see frameworks

789
00:26:57,279 --> 00:26:59,120
including this

790
00:26:59,120 --> 00:27:01,360
function or this method has the

791
00:27:01,360 --> 00:27:04,159
potential for ssrf please don't pass

792
00:27:04,159 --> 00:27:06,720
user supplied input into this function

793
00:27:06,720 --> 00:27:08,960
it'll be really good for them to do that

794
00:27:08,960 --> 00:27:10,960
but they don't i would love to see that

795
00:27:10,960 --> 00:27:12,080
happen though

796
00:27:12,080 --> 00:27:14,080
through rust.godok

797
00:27:14,080 --> 00:27:16,240
js docs whatever the case may be we

798
00:27:16,240 --> 00:27:17,679
would love to see that documentation

799
00:27:17,679 --> 00:27:20,399
come through and certain your api so

800
00:27:20,399 --> 00:27:23,360
that developers are 100 aware of the

801
00:27:23,360 --> 00:27:24,640
issue

802
00:27:24,640 --> 00:27:26,799
running up on time here so we also have

803
00:27:26,799 --> 00:27:30,559
next steps um please do go ahead and

804
00:27:30,559 --> 00:27:33,440
go ahead and read that there's always

805
00:27:33,440 --> 00:27:34,960
things that didn't quite make it this

806
00:27:34,960 --> 00:27:36,799
time we've actually documented what

807
00:27:36,799 --> 00:27:38,320
those are

808
00:27:38,320 --> 00:27:40,320
and also some cwes you may want to look

809
00:27:40,320 --> 00:27:42,080
into the number one issue is code

810
00:27:42,080 --> 00:27:43,679
quality issues which you can identify

811
00:27:43,679 --> 00:27:46,480
using standard tooling for developers

812
00:27:46,480 --> 00:27:48,000
we definitely want to make sure that

813
00:27:48,000 --> 00:27:49,600
people are picking those up and dealing

814
00:27:49,600 --> 00:27:50,880
with them but also you can see

815
00:27:50,880 --> 00:27:52,159
management error

816
00:27:52,159 --> 00:27:53,520
memory management areas are starting to

817
00:27:53,520 --> 00:27:55,039
creep back in and i believe that's

818
00:27:55,039 --> 00:27:57,039
because of rust and go which are

819
00:27:57,039 --> 00:27:58,480
generally considered memory safe

820
00:27:58,480 --> 00:28:00,559
languages um because of systems

821
00:28:00,559 --> 00:28:01,919
languages you can still shoot yourself

822
00:28:01,919 --> 00:28:03,360
in the foot and there's still potential

823
00:28:03,360 --> 00:28:05,360
for things like integer overflows even

824
00:28:05,360 --> 00:28:07,039
on java

825
00:28:07,039 --> 00:28:09,600
so wrapping up we want the frameworks to

826
00:28:09,600 --> 00:28:11,120
help eliminate bug classes please

827
00:28:11,120 --> 00:28:12,799
continue if you want any help doing that

828
00:28:12,799 --> 00:28:14,320
please talk to us

829
00:28:14,320 --> 00:28:16,480
absolutely threat model your stuff

830
00:28:16,480 --> 00:28:18,080
um there's a whole bunch of appsec

831
00:28:18,080 --> 00:28:20,640
program ideas there uh i'll be making

832
00:28:20,640 --> 00:28:22,000
this presentation available through our

833
00:28:22,000 --> 00:28:23,520
github repo

834
00:28:23,520 --> 00:28:27,279
and at the end basically do head over to

835
00:28:27,279 --> 00:28:29,840
the project top 10 and there's not

836
00:28:29,840 --> 00:28:31,120
really a huge amount of time for

837
00:28:31,120 --> 00:28:32,799
questions as i said i'm going to be here

838
00:28:32,799 --> 00:28:34,480
for a long time please go to the 20th

839
00:28:34,480 --> 00:28:37,279
anniversary flagship project

840
00:28:37,279 --> 00:28:40,080
and uh ask me additional questions there

841
00:28:40,080 --> 00:28:41,760
we're also the entire leadership team is

842
00:28:41,760 --> 00:28:43,440
in the project top 10

843
00:28:43,440 --> 00:28:44,960
slack channel and you can ask us

844
00:28:44,960 --> 00:28:46,480
questions there at any time and of

845
00:28:46,480 --> 00:28:48,559
course you can log issues and bugs

846
00:28:48,559 --> 00:28:52,320
without a gitbat repo

