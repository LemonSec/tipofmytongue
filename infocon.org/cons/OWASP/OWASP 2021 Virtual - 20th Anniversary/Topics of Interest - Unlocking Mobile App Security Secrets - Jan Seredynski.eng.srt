1
00:00:01,410 --> 00:00:06,030
[Music]

2
00:00:08,160 --> 00:00:10,639
okay so should i should i start right

3
00:00:10,639 --> 00:00:12,240
now with the slides

4
00:00:12,240 --> 00:00:14,000
yeah you can start

5
00:00:14,000 --> 00:00:17,359
all right so well again hello my name is

6
00:00:17,359 --> 00:00:20,080
jan saradinski and today i'll talk about

7
00:00:20,080 --> 00:00:22,560
cheats in mobile games and how the same

8
00:00:22,560 --> 00:00:26,400
cheats can be raised in regular apps

9
00:00:26,400 --> 00:00:29,519
so we will start from a demo

10
00:00:29,519 --> 00:00:32,320
and here you've got among us

11
00:00:32,320 --> 00:00:34,880
so i'll show you how easy it is to

12
00:00:34,880 --> 00:00:36,719
actually

13
00:00:36,719 --> 00:00:39,600
walk through the walls in in multiplayer

14
00:00:39,600 --> 00:00:40,879
games

15
00:00:40,879 --> 00:00:44,000
so let me just make it full screen

16
00:00:44,000 --> 00:00:46,160
and here we are that red player in the

17
00:00:46,160 --> 00:00:47,440
center

18
00:00:47,440 --> 00:00:48,480
and well

19
00:00:48,480 --> 00:00:50,800
basically we just can't

20
00:00:50,800 --> 00:00:53,039
go through walls in among us but i'll

21
00:00:53,039 --> 00:00:55,520
just show you how easy it is for hackers

22
00:00:55,520 --> 00:00:56,640
to do it

23
00:00:56,640 --> 00:00:58,559
so the only thing that we actually need

24
00:00:58,559 --> 00:01:01,520
to do is to turn into a ghost

25
00:01:01,520 --> 00:01:03,440
and once we are a ghost we can like

26
00:01:03,440 --> 00:01:06,799
really go through the wall to the left

27
00:01:06,799 --> 00:01:08,960
and yeah once we're on the left side we

28
00:01:08,960 --> 00:01:11,840
can just turn back into being

29
00:01:11,840 --> 00:01:13,520
an among us human

30
00:01:13,520 --> 00:01:15,680
and continue playing

31
00:01:15,680 --> 00:01:17,439
so

32
00:01:17,439 --> 00:01:20,320
it's actually as easy as that and i'll

33
00:01:20,320 --> 00:01:22,320
show you actually how it works later on

34
00:01:22,320 --> 00:01:24,799
during the presentation

35
00:01:24,799 --> 00:01:29,119
and what's more i also cover many other

36
00:01:29,119 --> 00:01:31,280
attack techniques like i'll show you how

37
00:01:31,280 --> 00:01:33,840
hackers bypass payments and touch id

38
00:01:33,840 --> 00:01:37,119
screens i will show you how how people

39
00:01:37,119 --> 00:01:39,840
download paid apps for free but also

40
00:01:39,840 --> 00:01:40,960
we'll cover

41
00:01:40,960 --> 00:01:43,200
well how people just unlock premium

42
00:01:43,200 --> 00:01:44,560
features

43
00:01:44,560 --> 00:01:47,439
in quite popular games and apps and then

44
00:01:47,439 --> 00:01:50,240
how how you can just get free diamonds

45
00:01:50,240 --> 00:01:52,479
in games with just like basic tools

46
00:01:52,479 --> 00:01:55,040
available online

47
00:01:55,040 --> 00:01:57,840
um but what's more i'll just show you

48
00:01:57,840 --> 00:02:00,159
like four simple guidelines how to

49
00:02:00,159 --> 00:02:02,880
protect your app so i'll just build like

50
00:02:02,880 --> 00:02:05,520
a secure model

51
00:02:05,520 --> 00:02:08,720
which consists of four four elements

52
00:02:08,720 --> 00:02:10,959
like environment integrity application

53
00:02:10,959 --> 00:02:14,000
integrity code integrity and obfuscation

54
00:02:14,000 --> 00:02:16,319
so for throughout the whole presentation

55
00:02:16,319 --> 00:02:18,239
i'll just build that model

56
00:02:18,239 --> 00:02:20,879
and if you if you build it in your app

57
00:02:20,879 --> 00:02:22,720
you can be sure that your app will be

58
00:02:22,720 --> 00:02:24,400
secure

59
00:02:24,400 --> 00:02:25,200
so

60
00:02:25,200 --> 00:02:28,160
let's start from environment integrity

61
00:02:28,160 --> 00:02:31,280
and well i'll start actually from a demo

62
00:02:31,280 --> 00:02:33,200
so if you if you don't

63
00:02:33,200 --> 00:02:35,360
care about environment integrity that's

64
00:02:35,360 --> 00:02:38,160
what can happen to your app so in that

65
00:02:38,160 --> 00:02:40,000
case getting

66
00:02:40,000 --> 00:02:41,599
diamonds for free

67
00:02:41,599 --> 00:02:43,360
so i'll show you it's based on

68
00:02:43,360 --> 00:02:45,680
tamagotchi which was well quite a

69
00:02:45,680 --> 00:02:48,560
popular app in 2020 i believe it was

70
00:02:48,560 --> 00:02:51,440
like in top 20 apps in app store and

71
00:02:51,440 --> 00:02:53,280
maybe google play

72
00:02:53,280 --> 00:02:56,239
and well so let's open the app

73
00:02:56,239 --> 00:02:58,480
and here you can see on the top that we

74
00:02:58,480 --> 00:02:59,280
have

75
00:02:59,280 --> 00:03:01,920
uh over like one 1

76
00:03:01,920 --> 00:03:07,360
400 times and well the diamonds are well

77
00:03:07,360 --> 00:03:09,599
they are like premium currency

78
00:03:09,599 --> 00:03:12,159
so you can buy like

79
00:03:12,159 --> 00:03:15,040
well premium content for it so you can

80
00:03:15,040 --> 00:03:17,040
just buy like premium tools like

81
00:03:17,040 --> 00:03:19,599
clothing skins for your tamagotchi well

82
00:03:19,599 --> 00:03:22,239
but you need to pay for that premium

83
00:03:22,239 --> 00:03:24,560
diamonds and you can just buy them with

84
00:03:24,560 --> 00:03:26,080
euros

85
00:03:26,080 --> 00:03:28,959
or dollars just like a real currency

86
00:03:28,959 --> 00:03:31,920
and well i'll just show you that hackers

87
00:03:31,920 --> 00:03:33,599
don't really need to pay for that kind

88
00:03:33,599 --> 00:03:36,239
of stuff and it's actually super easy to

89
00:03:36,239 --> 00:03:37,840
bypass

90
00:03:37,840 --> 00:03:39,599
so the only thing that we need to do

91
00:03:39,599 --> 00:03:41,040
right now

92
00:03:41,040 --> 00:03:43,840
is just to exit the tamagotchi and right

93
00:03:43,840 --> 00:03:46,010
now we are opening a memory scanner

94
00:03:46,010 --> 00:03:47,280
[Music]

95
00:03:47,280 --> 00:03:49,760
we open the memory scanner

96
00:03:49,760 --> 00:03:54,239
we open the tamagotchi app again

97
00:03:55,519 --> 00:03:57,200
and once we

98
00:03:57,200 --> 00:04:00,319
we have the uploaded you can see a red

99
00:04:00,319 --> 00:04:01,599
gear

100
00:04:01,599 --> 00:04:03,680
here on the screen yeah it's exactly

101
00:04:03,680 --> 00:04:07,120
here above the fridge and well

102
00:04:07,120 --> 00:04:09,760
once we tap on it we will just open the

103
00:04:09,760 --> 00:04:13,280
memory scanner and we can just scan for

104
00:04:13,280 --> 00:04:16,720
for any number that we want to well

105
00:04:16,720 --> 00:04:20,478
find and modify in in the game or app so

106
00:04:20,478 --> 00:04:22,320
we will just type the number of diamonds

107
00:04:22,320 --> 00:04:23,919
that we have

108
00:04:23,919 --> 00:04:26,479
we'll just well scan the whole memory

109
00:04:26,479 --> 00:04:28,960
for those numbers and as you can see

110
00:04:28,960 --> 00:04:30,800
well there are a lot of

111
00:04:30,800 --> 00:04:32,639
numbers in the memory

112
00:04:32,639 --> 00:04:34,960
so we just need to filter them out

113
00:04:34,960 --> 00:04:36,320
somehow

114
00:04:36,320 --> 00:04:37,120
so

115
00:04:37,120 --> 00:04:40,400
let's buy something for one diamond

116
00:04:40,400 --> 00:04:43,199
like sushi for example

117
00:04:43,199 --> 00:04:46,479
and then let's filter out those results

118
00:04:46,479 --> 00:04:47,919
again

119
00:04:47,919 --> 00:04:50,400
and now you can see that there is only

120
00:04:50,400 --> 00:04:53,040
one one place in the memory

121
00:04:53,040 --> 00:04:55,680
which has exactly the number of diamonds

122
00:04:55,680 --> 00:04:57,680
that we have right now

123
00:04:57,680 --> 00:05:01,199
so we can just basically tap on it in

124
00:05:01,199 --> 00:05:03,360
in the memory scanner

125
00:05:03,360 --> 00:05:05,600
we can just modify the number to any

126
00:05:05,600 --> 00:05:09,600
number of our choice like 777

127
00:05:09,600 --> 00:05:12,240
and right now the number of diamonds has

128
00:05:12,240 --> 00:05:13,520
changed

129
00:05:13,520 --> 00:05:16,000
but the graphics of the game hasn't been

130
00:05:16,000 --> 00:05:17,440
refreshed yet

131
00:05:17,440 --> 00:05:20,080
so let me close the app

132
00:05:20,080 --> 00:05:23,120
and open it again so now like the whole

133
00:05:23,120 --> 00:05:25,600
game will just get refreshed and the

134
00:05:25,600 --> 00:05:28,479
graphics too

135
00:05:28,800 --> 00:05:29,840
and

136
00:05:29,840 --> 00:05:32,080
well once it's open you will see on the

137
00:05:32,080 --> 00:05:33,840
top that the number of diamonds has

138
00:05:33,840 --> 00:05:34,880
changed

139
00:05:34,880 --> 00:05:36,840
into like

140
00:05:36,840 --> 00:05:40,400
777 well which was the number that we

141
00:05:40,400 --> 00:05:42,479
just modified

142
00:05:42,479 --> 00:05:45,680
so it's as easy as that we didn't really

143
00:05:45,680 --> 00:05:47,919
have to know any well we didn't need to

144
00:05:47,919 --> 00:05:49,840
have any hacking skills we just

145
00:05:49,840 --> 00:05:52,639
basically used a tool that is available

146
00:05:52,639 --> 00:05:54,320
for everyone for free

147
00:05:54,320 --> 00:05:56,720
and from like an online forum and then

148
00:05:56,720 --> 00:05:58,960
we could easily modify the memory

149
00:05:58,960 --> 00:06:00,960
so there's like a huge community behind

150
00:06:00,960 --> 00:06:03,120
the tool and well it's not only

151
00:06:03,120 --> 00:06:05,039
available for is but there are like many

152
00:06:05,039 --> 00:06:06,400
similar for android

153
00:06:06,400 --> 00:06:08,800
probably even more for android

154
00:06:08,800 --> 00:06:09,600
and

155
00:06:09,600 --> 00:06:12,160
well that tool has been already tested

156
00:06:12,160 --> 00:06:16,240
for like 400 plus top games in app store

157
00:06:16,240 --> 00:06:18,080
and it works

158
00:06:18,080 --> 00:06:20,639
so it's kind of reliable

159
00:06:20,639 --> 00:06:22,160
and yeah what's

160
00:06:22,160 --> 00:06:23,680
important here

161
00:06:23,680 --> 00:06:25,600
well any cheats that i'm showing you

162
00:06:25,600 --> 00:06:27,840
during the presentation they are

163
00:06:27,840 --> 00:06:30,720
available for ios and android

164
00:06:30,720 --> 00:06:32,240
so it doesn't really matter which

165
00:06:32,240 --> 00:06:35,840
platform i'm showing right now

166
00:06:36,639 --> 00:06:39,520
so one one demo before i define what

167
00:06:39,520 --> 00:06:42,720
environment actually is so that demo is

168
00:06:42,720 --> 00:06:45,199
about bypassing payments

169
00:06:45,199 --> 00:06:48,479
and here we have another game that was

170
00:06:48,479 --> 00:06:51,120
quite a player in 2020

171
00:06:51,120 --> 00:06:53,680
and in that game we have like a lot of

172
00:06:53,680 --> 00:06:56,960
ads right now like here on the top left

173
00:06:56,960 --> 00:06:59,599
corner we have that ad here then on the

174
00:06:59,599 --> 00:07:01,680
bottom there is another ad

175
00:07:01,680 --> 00:07:05,280
and in order to remove those ads well we

176
00:07:05,280 --> 00:07:08,000
need to pay so once we tap on that

177
00:07:08,000 --> 00:07:10,319
button here like with with ads label

178
00:07:10,319 --> 00:07:14,319
crossed out we will just see a pop-up

179
00:07:14,319 --> 00:07:16,160
we'll just see a pop-up to pay for it so

180
00:07:16,160 --> 00:07:19,199
i just tapped on on that crossed us and

181
00:07:19,199 --> 00:07:21,680
we can see the pop-up so it says we need

182
00:07:21,680 --> 00:07:24,400
to pay to remove the ass

183
00:07:24,400 --> 00:07:27,919
and well obviously hackers don't pay for

184
00:07:27,919 --> 00:07:29,599
that kind of stuff and i'll just show

185
00:07:29,599 --> 00:07:32,720
you how easy it is to bypass it

186
00:07:32,720 --> 00:07:34,080
so

187
00:07:34,080 --> 00:07:36,160
the only thing that we need to do is

188
00:07:36,160 --> 00:07:38,560
actually

189
00:07:38,720 --> 00:07:41,199
we'll attach to the application

190
00:07:41,199 --> 00:07:45,199
and invoke a certain function so inside

191
00:07:45,199 --> 00:07:47,599
that game there is a function on

192
00:07:47,599 --> 00:07:50,080
transaction succeed which is invoked

193
00:07:50,080 --> 00:07:52,560
after a successful transaction

194
00:07:52,560 --> 00:07:56,560
so basically we can attach to the game

195
00:07:56,560 --> 00:07:59,280
and we can just invoke that function

196
00:07:59,280 --> 00:08:02,720
uh just from the command line like that

197
00:08:02,720 --> 00:08:04,720
without paying so we just

198
00:08:04,720 --> 00:08:06,560
invoke that function right now we

199
00:08:06,560 --> 00:08:07,840
invoked it

200
00:08:07,840 --> 00:08:10,720
well so right now the game crashes but

201
00:08:10,720 --> 00:08:12,879
we don't really care about it because

202
00:08:12,879 --> 00:08:15,280
well we invoked already the method and

203
00:08:15,280 --> 00:08:16,800
right now you can see that there are

204
00:08:16,800 --> 00:08:19,039
like no ads anymore

205
00:08:19,039 --> 00:08:22,160
so well we actually paid for it without

206
00:08:22,160 --> 00:08:24,960
paying we just invoked a function that

207
00:08:24,960 --> 00:08:27,680
the transaction will succeed so no ad

208
00:08:27,680 --> 00:08:30,560
here no ad here so basically

209
00:08:30,560 --> 00:08:31,919
we

210
00:08:31,919 --> 00:08:35,039
we we don't have ads anymore so it's as

211
00:08:35,039 --> 00:08:37,839
simple as as that

212
00:08:37,839 --> 00:08:40,719
what's also important um the same

213
00:08:40,719 --> 00:08:42,880
technique can be used to bypass that id

214
00:08:42,880 --> 00:08:46,000
screen so if you keep an er like

215
00:08:46,000 --> 00:08:48,399
sensitive information behind touch id

216
00:08:48,399 --> 00:08:51,040
screens like in another activity or view

217
00:08:51,040 --> 00:08:52,240
controller

218
00:08:52,240 --> 00:08:53,120
then

219
00:08:53,120 --> 00:08:55,040
well if you just limit the access there

220
00:08:55,040 --> 00:08:57,440
by touch id screen that that it's just

221
00:08:57,440 --> 00:08:59,120
not enough because you can just bypass

222
00:08:59,120 --> 00:08:59,920
it

223
00:08:59,920 --> 00:09:02,560
in that way

224
00:09:02,959 --> 00:09:06,720
so let's talk right now about uh what

225
00:09:06,720 --> 00:09:08,640
environment integrity is

226
00:09:08,640 --> 00:09:11,120
so it is about

227
00:09:11,120 --> 00:09:14,399
detecting a compromised environment

228
00:09:14,399 --> 00:09:16,560
and the compromised environment is for

229
00:09:16,560 --> 00:09:19,760
example jailbroken or the device

230
00:09:19,760 --> 00:09:22,320
or running an app or a game or the whole

231
00:09:22,320 --> 00:09:24,640
system inside an emulator or just

232
00:09:24,640 --> 00:09:26,880
attaching a debugger

233
00:09:26,880 --> 00:09:27,600
so

234
00:09:27,600 --> 00:09:30,880
if we if we don't implement

235
00:09:30,880 --> 00:09:33,200
well environment integrity

236
00:09:33,200 --> 00:09:35,920
people just can bypass the payments or

237
00:09:35,920 --> 00:09:38,320
authorization screens but also they can

238
00:09:38,320 --> 00:09:40,480
spoof gps which is like

239
00:09:40,480 --> 00:09:43,120
quite a big threat in case of pokemon go

240
00:09:43,120 --> 00:09:45,200
so basically there you compete with

241
00:09:45,200 --> 00:09:48,320
others to get faster to a pokemon just

242
00:09:48,320 --> 00:09:51,040
to catch it but you can just prove your

243
00:09:51,040 --> 00:09:54,080
gps location well it's a bit unfair

244
00:09:54,080 --> 00:09:56,320
and you'll just get the pokemon faster

245
00:09:56,320 --> 00:09:57,760
than others

246
00:09:57,760 --> 00:10:00,240
so if you just don't care of it people

247
00:10:00,240 --> 00:10:02,399
will just cheat in your games but well

248
00:10:02,399 --> 00:10:04,560
it doesn't only apply to games and i'll

249
00:10:04,560 --> 00:10:07,279
show it to you why later on

250
00:10:07,279 --> 00:10:10,079
but what's more you can just well

251
00:10:10,079 --> 00:10:12,640
cheat like modify the number of credits

252
00:10:12,640 --> 00:10:14,640
that you have in a game or unlock

253
00:10:14,640 --> 00:10:17,440
premium content but what's more scary

254
00:10:17,440 --> 00:10:21,120
you can install like tweaks and tools on

255
00:10:21,120 --> 00:10:23,680
your device like the memory scanner that

256
00:10:23,680 --> 00:10:24,800
i used

257
00:10:24,800 --> 00:10:25,760
so

258
00:10:25,760 --> 00:10:28,480
well i didn't really need to know

259
00:10:28,480 --> 00:10:30,640
anything about hacking i just opened the

260
00:10:30,640 --> 00:10:33,920
tool i just scanned for for a variable

261
00:10:33,920 --> 00:10:35,279
for a number

262
00:10:35,279 --> 00:10:38,000
then just modified and that was all

263
00:10:38,000 --> 00:10:38,880
so

264
00:10:38,880 --> 00:10:40,399
if we don't implement that one it's

265
00:10:40,399 --> 00:10:42,399
super easy to actually cheat in our

266
00:10:42,399 --> 00:10:44,959
games and apps

267
00:10:44,959 --> 00:10:47,279
and right now i'll show you a couple of

268
00:10:47,279 --> 00:10:49,120
ideas how you can

269
00:10:49,120 --> 00:10:51,839
protect your app and all of them are to

270
00:10:51,839 --> 00:10:53,200
it yourself

271
00:10:53,200 --> 00:10:54,640
so firstly

272
00:10:54,640 --> 00:10:57,360
on both platforms you can just search

273
00:10:57,360 --> 00:11:00,079
for some artifacts like files on the

274
00:11:00,079 --> 00:11:01,519
file system

275
00:11:01,519 --> 00:11:03,760
or you can just search for some

276
00:11:03,760 --> 00:11:06,399
applications like on ios it's like cdi

277
00:11:06,399 --> 00:11:09,519
in most cases and android magisk

278
00:11:09,519 --> 00:11:11,680
also you can just

279
00:11:11,680 --> 00:11:14,240
see their process properties on both

280
00:11:14,240 --> 00:11:15,600
platforms

281
00:11:15,600 --> 00:11:18,720
you can also check if if you're running

282
00:11:18,720 --> 00:11:22,240
on an emulator so in case of emulator

283
00:11:22,240 --> 00:11:24,720
well you can check the name of a phone

284
00:11:24,720 --> 00:11:27,120
or other device that you're running on

285
00:11:27,120 --> 00:11:30,399
and if it contains emulator string well

286
00:11:30,399 --> 00:11:31,920
it means that we are probably running on

287
00:11:31,920 --> 00:11:33,279
an emulator

288
00:11:33,279 --> 00:11:35,519
so that's the easiest way to actually

289
00:11:35,519 --> 00:11:37,519
detect it

290
00:11:37,519 --> 00:11:40,959
so here you've got like a set of

291
00:11:40,959 --> 00:11:42,000
well

292
00:11:42,000 --> 00:11:44,880
in my view the most practical ways to

293
00:11:44,880 --> 00:11:47,920
to protect against environment integrity

294
00:11:47,920 --> 00:11:50,399
for for my for more ideas you can go to

295
00:11:50,399 --> 00:11:53,279
austin sdg you can find probably more

296
00:11:53,279 --> 00:11:55,440
more ideas like that but in my view

297
00:11:55,440 --> 00:11:58,240
those are the easiest to implement and

298
00:11:58,240 --> 00:11:59,680
the most like

299
00:11:59,680 --> 00:12:01,279
efficient

300
00:12:01,279 --> 00:12:02,240
so

301
00:12:02,240 --> 00:12:03,600
yeah

302
00:12:03,600 --> 00:12:06,160
implement them in your apps to just well

303
00:12:06,160 --> 00:12:08,880
protect environment

304
00:12:08,880 --> 00:12:12,160
integrity okay so now i'll talk about

305
00:12:12,160 --> 00:12:13,839
application integrity which is just

306
00:12:13,839 --> 00:12:16,480
another component of our model

307
00:12:16,480 --> 00:12:17,920
and

308
00:12:17,920 --> 00:12:20,399
well so many hackers can well not

309
00:12:20,399 --> 00:12:23,600
hackers actually many users can install

310
00:12:23,600 --> 00:12:26,079
a paid app for free from first party

311
00:12:26,079 --> 00:12:28,639
stores so basically there is not only

312
00:12:28,639 --> 00:12:30,800
one original app store and original

313
00:12:30,800 --> 00:12:32,240
google play store

314
00:12:32,240 --> 00:12:34,399
there are alternatives like for example

315
00:12:34,399 --> 00:12:35,839
is guts

316
00:12:35,839 --> 00:12:36,839
and

317
00:12:36,839 --> 00:12:39,600
here well you can

318
00:12:39,600 --> 00:12:41,839
download for free

319
00:12:41,839 --> 00:12:44,240
like paid apps like in case of minecraft

320
00:12:44,240 --> 00:12:46,800
you need to pay eight euros for them in

321
00:12:46,800 --> 00:12:49,120
app store however if you download them

322
00:12:49,120 --> 00:12:51,279
from ios got store you'll just get it

323
00:12:51,279 --> 00:12:52,639
for free

324
00:12:52,639 --> 00:12:53,600
and

325
00:12:53,600 --> 00:12:54,560
well

326
00:12:54,560 --> 00:12:57,440
it doesn't matter if it's is or android

327
00:12:57,440 --> 00:13:00,720
those store exist for both platforms so

328
00:13:00,720 --> 00:13:02,240
doesn't really matter

329
00:13:02,240 --> 00:13:03,760
and you can well actually you can

330
00:13:03,760 --> 00:13:06,079
download them just by clicking get until

331
00:13:06,079 --> 00:13:08,880
you just look at it on your device

332
00:13:08,880 --> 00:13:11,680
and what's more scary those first party

333
00:13:11,680 --> 00:13:14,399
stores they generate revenue but i'll

334
00:13:14,399 --> 00:13:18,160
talk more about it later on too

335
00:13:18,800 --> 00:13:19,680
so

336
00:13:19,680 --> 00:13:21,440
how does it happen

337
00:13:21,440 --> 00:13:24,079
firstly an attacker pays for an

338
00:13:24,079 --> 00:13:26,639
application like let's say

339
00:13:26,639 --> 00:13:29,360
in app store they install it on their

340
00:13:29,360 --> 00:13:30,560
device

341
00:13:30,560 --> 00:13:34,399
then they dump ipa or apk

342
00:13:34,399 --> 00:13:38,000
app from the device to the computer and

343
00:13:38,000 --> 00:13:40,959
once they have the apa or apk file they

344
00:13:40,959 --> 00:13:42,959
just distribute it online i mean they

345
00:13:42,959 --> 00:13:44,000
can just

346
00:13:44,000 --> 00:13:46,000
share it with friends they can

347
00:13:46,000 --> 00:13:47,920
share it on an online forum they can

348
00:13:47,920 --> 00:13:50,639
upload it to even the google drive like

349
00:13:50,639 --> 00:13:53,839
anywhere and just pass link to anyone

350
00:13:53,839 --> 00:13:54,880
and then

351
00:13:54,880 --> 00:13:57,600
well it's already paid so

352
00:13:57,600 --> 00:13:59,920
you can just take the apk file install

353
00:13:59,920 --> 00:14:00,839
it on your

354
00:14:00,839 --> 00:14:04,800
device so it's easy as that

355
00:14:04,800 --> 00:14:06,320
but what's more

356
00:14:06,320 --> 00:14:10,480
once you have the the apk or ipa you can

357
00:14:10,480 --> 00:14:12,880
you can just modify the content of your

358
00:14:12,880 --> 00:14:17,360
apk of your app so in case of bomberman

359
00:14:17,360 --> 00:14:21,360
well the map is defined as a json file

360
00:14:21,360 --> 00:14:23,440
so you can see the river on the left

361
00:14:23,440 --> 00:14:27,040
side and the reaver is is represented as

362
00:14:27,040 --> 00:14:28,959
number 174

363
00:14:28,959 --> 00:14:32,639
so nothing stops us from just creating a

364
00:14:32,639 --> 00:14:34,800
huge g letter

365
00:14:34,800 --> 00:14:38,160
from riverblocks in bomberman we just

366
00:14:38,160 --> 00:14:39,920
basically need to

367
00:14:39,920 --> 00:14:42,720
change the json file

368
00:14:42,720 --> 00:14:44,880
in a way that we have like huge letter

369
00:14:44,880 --> 00:14:46,079
like that

370
00:14:46,079 --> 00:14:47,760
so

371
00:14:47,760 --> 00:14:50,320
really easy to to modify those resources

372
00:14:50,320 --> 00:14:52,639
it's not only about maps it's like a way

373
00:14:52,639 --> 00:14:55,440
more than that

374
00:14:55,440 --> 00:14:58,399
so how it works as i mentioned before if

375
00:14:58,399 --> 00:15:01,199
we once we have an application

376
00:15:01,199 --> 00:15:03,600
dumped to our computer we can just

377
00:15:03,600 --> 00:15:05,600
browse through the file like the whole

378
00:15:05,600 --> 00:15:08,160
structure and then find

379
00:15:08,160 --> 00:15:10,959
like for example json file for a map and

380
00:15:10,959 --> 00:15:12,880
then we just go there modify it

381
00:15:12,880 --> 00:15:15,279
repackage the app install it again and

382
00:15:15,279 --> 00:15:18,240
then we have we have a new map

383
00:15:18,240 --> 00:15:20,800
so we can modify resources we can add

384
00:15:20,800 --> 00:15:23,360
new resources but also we can inject new

385
00:15:23,360 --> 00:15:26,240
dynamic libraries like for example well

386
00:15:26,240 --> 00:15:28,399
i told you about those stores that they

387
00:15:28,399 --> 00:15:29,759
have revenue

388
00:15:29,759 --> 00:15:32,320
so they have revenue because basically

389
00:15:32,320 --> 00:15:33,440
they

390
00:15:33,440 --> 00:15:36,480
they inject their own ads to paid games

391
00:15:36,480 --> 00:15:39,360
so you can download an a paid app for

392
00:15:39,360 --> 00:15:42,320
free but you will have ads in there but

393
00:15:42,320 --> 00:15:43,040
the

394
00:15:43,040 --> 00:15:45,120
the revenue from ads doesn't go to the

395
00:15:45,120 --> 00:15:47,839
original manufacturer it goes to those

396
00:15:47,839 --> 00:15:50,800
third party stores so they actually

397
00:15:50,800 --> 00:15:55,560
earn money on someone's house's work

398
00:15:55,680 --> 00:15:57,759
okay so now let's define what

399
00:15:57,759 --> 00:16:00,320
application integrity is

400
00:16:00,320 --> 00:16:03,040
so it is about verifying

401
00:16:03,040 --> 00:16:04,079
if

402
00:16:04,079 --> 00:16:06,639
the user is running on our version of

403
00:16:06,639 --> 00:16:08,560
the app so

404
00:16:08,560 --> 00:16:11,519
no resources are changed and that the

405
00:16:11,519 --> 00:16:14,079
app actually comes from the original

406
00:16:14,079 --> 00:16:16,000
from the legitimate source like app

407
00:16:16,000 --> 00:16:18,720
store or google play or at least from

408
00:16:18,720 --> 00:16:20,480
our link

409
00:16:20,480 --> 00:16:22,800
and if we don't implement

410
00:16:22,800 --> 00:16:24,639
application integrity

411
00:16:24,639 --> 00:16:26,880
then well people can just redistribute

412
00:16:26,880 --> 00:16:29,680
our app for free so it can have built-in

413
00:16:29,680 --> 00:16:31,759
cheats changed assets

414
00:16:31,759 --> 00:16:34,800
like in case of duolingo like duolingo

415
00:16:34,800 --> 00:16:36,639
that is quite popular app where you can

416
00:16:36,639 --> 00:16:39,759
just well learn languages

417
00:16:39,759 --> 00:16:42,320
and that app was actually hacked in a

418
00:16:42,320 --> 00:16:44,160
way that there were like new courses

419
00:16:44,160 --> 00:16:46,639
added so the duolingo is mostly about

420
00:16:46,639 --> 00:16:49,199
languages but there is a version of

421
00:16:49,199 --> 00:16:51,279
duolingo where you can

422
00:16:51,279 --> 00:16:54,639
just learn for a driving license

423
00:16:54,639 --> 00:16:55,440
well

424
00:16:55,440 --> 00:16:58,480
so those those hackers basically added

425
00:16:58,480 --> 00:17:01,519
like json file or just modified assets

426
00:17:01,519 --> 00:17:03,920
and well here you are and here you have

427
00:17:03,920 --> 00:17:06,799
just you know another course in in your

428
00:17:06,799 --> 00:17:08,959
app or if there is like any language we

429
00:17:08,959 --> 00:17:11,919
think you can just edit easily

430
00:17:11,919 --> 00:17:14,000
um also what's

431
00:17:14,000 --> 00:17:16,480
quite important is that there is a

432
00:17:16,480 --> 00:17:19,039
common belief that you need to have a

433
00:17:19,039 --> 00:17:22,480
broken or rooted device to actually run

434
00:17:22,480 --> 00:17:24,319
cracked apps

435
00:17:24,319 --> 00:17:26,799
which is totally not true because you

436
00:17:26,799 --> 00:17:29,760
can just repackage an application

437
00:17:29,760 --> 00:17:31,840
in a way that it allows you to attach a

438
00:17:31,840 --> 00:17:33,039
debugger

439
00:17:33,039 --> 00:17:34,880
and once you once you can attach a

440
00:17:34,880 --> 00:17:36,799
debugger then you can do all of the same

441
00:17:36,799 --> 00:17:39,919
stuff as you have as you had like a

442
00:17:39,919 --> 00:17:42,000
compromised environment so you can

443
00:17:42,000 --> 00:17:44,240
basically invoke functions or scan the

444
00:17:44,240 --> 00:17:46,480
memory as we did before

445
00:17:46,480 --> 00:17:49,120
so make sure that you have application

446
00:17:49,120 --> 00:17:52,960
integrity because well otherwise well

447
00:17:52,960 --> 00:17:55,440
you can just you can just face the same

448
00:17:55,440 --> 00:17:58,840
issues as on compromised environment

449
00:17:58,840 --> 00:18:01,679
or or well your app can just be

450
00:18:01,679 --> 00:18:05,840
redistributed like like those here

451
00:18:05,840 --> 00:18:08,720
so couple of do it yourself um

452
00:18:08,720 --> 00:18:11,520
you can check for bundle id of the

453
00:18:11,520 --> 00:18:13,919
certificate or basically the signature

454
00:18:13,919 --> 00:18:15,039
of your app

455
00:18:15,039 --> 00:18:17,520
on on both platforms you can also check

456
00:18:17,520 --> 00:18:20,160
some the json file so like in case of

457
00:18:20,160 --> 00:18:22,400
bomberman you can just check them if the

458
00:18:22,400 --> 00:18:24,799
if the hash of your if your of your json

459
00:18:24,799 --> 00:18:26,480
file hasn't changed

460
00:18:26,480 --> 00:18:28,160
um you can check for

461
00:18:28,160 --> 00:18:29,280
[Music]

462
00:18:29,280 --> 00:18:31,520
for a debuggable state of your app if

463
00:18:31,520 --> 00:18:34,640
it's not being debugged right now or if

464
00:18:34,640 --> 00:18:36,320
there is debuggable flag setting the

465
00:18:36,320 --> 00:18:37,600
manifest

466
00:18:37,600 --> 00:18:39,360
so you can do all of the stuff in the

467
00:18:39,360 --> 00:18:41,919
runtime and again you can go to austin

468
00:18:41,919 --> 00:18:45,200
sdg find more ideas but i believe that

469
00:18:45,200 --> 00:18:46,640
those three

470
00:18:46,640 --> 00:18:48,799
are like like the basics easy to

471
00:18:48,799 --> 00:18:51,280
implement and they will really make your

472
00:18:51,280 --> 00:18:54,160
app a way more secure

473
00:18:54,160 --> 00:18:56,559
but anyway recommend going to us msdg

474
00:18:56,559 --> 00:18:59,679
for for more ideas

475
00:18:59,679 --> 00:19:02,000
okay so now i'll talk about the third

476
00:19:02,000 --> 00:19:04,000
component of our model

477
00:19:04,000 --> 00:19:06,240
and it is about unlocking premium

478
00:19:06,240 --> 00:19:09,280
content so the code integrity

479
00:19:09,280 --> 00:19:11,679
so there are well once the app is

480
00:19:11,679 --> 00:19:14,240
redistributed in a in an alternative

481
00:19:14,240 --> 00:19:17,760
store it often contains hacked features

482
00:19:17,760 --> 00:19:20,320
like in case of plant versus zombies it

483
00:19:20,320 --> 00:19:24,400
has unlimited coins gems and means well

484
00:19:24,400 --> 00:19:27,919
but it's not only about the game but

485
00:19:27,919 --> 00:19:30,640
also it applies to apps like duolingo so

486
00:19:30,640 --> 00:19:34,160
in duolingo you can retake a test

487
00:19:34,160 --> 00:19:36,640
like three or five times but if you

488
00:19:36,640 --> 00:19:39,120
download the version from an alternative

489
00:19:39,120 --> 00:19:42,080
store it has already premium

490
00:19:42,080 --> 00:19:44,320
feature unlocked so basically you just

491
00:19:44,320 --> 00:19:47,679
don't need to pay for a subscription

492
00:19:47,679 --> 00:19:49,679
and in a second i'll just show you how

493
00:19:49,679 --> 00:19:51,360
it works

494
00:19:51,360 --> 00:19:54,000
so basically let's imagine that we have

495
00:19:54,000 --> 00:19:55,600
check license function

496
00:19:55,600 --> 00:19:58,080
and here on the left side the top left

497
00:19:58,080 --> 00:19:59,919
corner you can see the developer's view

498
00:19:59,919 --> 00:20:02,720
so it can be switched objective c and a

499
00:20:02,720 --> 00:20:05,280
high level one and here we just check

500
00:20:05,280 --> 00:20:08,080
license we just have an argument license

501
00:20:08,080 --> 00:20:09,600
then we

502
00:20:09,600 --> 00:20:11,679
invoke validate license on server we

503
00:20:11,679 --> 00:20:14,720
pass we pass an argument if if the

504
00:20:14,720 --> 00:20:17,120
function returns true we say all right

505
00:20:17,120 --> 00:20:20,000
the license is valid and then we return

506
00:20:20,000 --> 00:20:22,320
so in in the hackers from the hacker's

507
00:20:22,320 --> 00:20:24,799
perspective it looks a bit different so

508
00:20:24,799 --> 00:20:29,200
they can see only assembly or bytecode

509
00:20:29,200 --> 00:20:31,679
but well so you don't need to know all

510
00:20:31,679 --> 00:20:33,600
of those instructions

511
00:20:33,600 --> 00:20:36,000
it's just easy to spot where the if

512
00:20:36,000 --> 00:20:38,400
statement is so whenever you see a

513
00:20:38,400 --> 00:20:40,480
branch in a graph like that there is an

514
00:20:40,480 --> 00:20:44,480
if statement so like that thing here so

515
00:20:44,480 --> 00:20:46,320
like those two instructions happen

516
00:20:46,320 --> 00:20:48,400
exactly inside the closure

517
00:20:48,400 --> 00:20:51,679
so we know that here is the then the

518
00:20:51,679 --> 00:20:54,559
body of the if statement and tbz is the

519
00:20:54,559 --> 00:20:57,520
last instruction executed and here i've

520
00:20:57,520 --> 00:20:59,360
got like a small

521
00:20:59,360 --> 00:21:01,440
cheat cheat sheet and we can see that

522
00:21:01,440 --> 00:21:03,919
typical instruction just check for the

523
00:21:03,919 --> 00:21:05,760
return value

524
00:21:05,760 --> 00:21:07,760
of the last function which was validate

525
00:21:07,760 --> 00:21:09,840
unlicensed we can see it here

526
00:21:09,840 --> 00:21:13,520
so basically we can check tvz into tbnz

527
00:21:13,520 --> 00:21:14,480
to just

528
00:21:14,480 --> 00:21:16,559
reverse the if statement

529
00:21:16,559 --> 00:21:18,080
and then we'll just check if the return

530
00:21:18,080 --> 00:21:19,760
value is not zero

531
00:21:19,760 --> 00:21:22,080
if we do that and if we

532
00:21:22,080 --> 00:21:24,320
write the wrong license then we will

533
00:21:24,320 --> 00:21:26,320
always succeed

534
00:21:26,320 --> 00:21:30,480
so it's actually as easy as that

535
00:21:30,480 --> 00:21:33,520
so that is code integrity and it is

536
00:21:33,520 --> 00:21:36,000
about verifying if you are executing the

537
00:21:36,000 --> 00:21:39,360
id identical code to what the developer

538
00:21:39,360 --> 00:21:40,720
wrote

539
00:21:40,720 --> 00:21:42,799
which means that no machine or java

540
00:21:42,799 --> 00:21:45,120
instructions were changed

541
00:21:45,120 --> 00:21:48,720
so if if we don't take care of it then

542
00:21:48,720 --> 00:21:50,640
people can just unlock premium content

543
00:21:50,640 --> 00:21:53,120
in our apps like dual lingo or other

544
00:21:53,120 --> 00:21:56,240
games we can have unlimited currency our

545
00:21:56,240 --> 00:21:57,600
bypass

546
00:21:57,600 --> 00:22:01,120
authorization screens but what's more

547
00:22:01,120 --> 00:22:02,159
well

548
00:22:02,159 --> 00:22:05,440
we did a study in card score we just

549
00:22:05,440 --> 00:22:07,840
wanted to see what kind of treats are

550
00:22:07,840 --> 00:22:11,440
the most popular in 25 top

551
00:22:11,440 --> 00:22:13,840
cracked games and well you can see that

552
00:22:13,840 --> 00:22:15,360
most of cheats were about infinite

553
00:22:15,360 --> 00:22:17,840
currencies unlocked skins

554
00:22:17,840 --> 00:22:19,760
and well it's harmful for a developer

555
00:22:19,760 --> 00:22:22,240
because well people just don't pay for a

556
00:22:22,240 --> 00:22:24,480
premium currency

557
00:22:24,480 --> 00:22:26,480
but there is also another category like

558
00:22:26,480 --> 00:22:29,280
wall hacks or aimbots

559
00:22:29,280 --> 00:22:30,240
where

560
00:22:30,240 --> 00:22:32,880
or actually you you can

561
00:22:32,880 --> 00:22:35,840
win with other players in a multiplayer

562
00:22:35,840 --> 00:22:38,080
game so you

563
00:22:38,080 --> 00:22:39,600
actually ruin

564
00:22:39,600 --> 00:22:42,720
the game for others which is well even

565
00:22:42,720 --> 00:22:46,080
worse for those gaming vendors

566
00:22:46,080 --> 00:22:48,320
and that threat is really out there and

567
00:22:48,320 --> 00:22:50,640
people really like that

568
00:22:50,640 --> 00:22:52,559
and the multiplayer thing is really

569
00:22:52,559 --> 00:22:55,840
scary right now

570
00:22:57,039 --> 00:22:59,919
okay so how can you protect your app

571
00:22:59,919 --> 00:23:03,120
um here well we have the check license

572
00:23:03,120 --> 00:23:04,400
function

573
00:23:04,400 --> 00:23:05,200
and

574
00:23:05,200 --> 00:23:07,360
well here we've got just assembly code

575
00:23:07,360 --> 00:23:09,760
of the function and here like on the

576
00:23:09,760 --> 00:23:12,240
left side you can see up code so every

577
00:23:12,240 --> 00:23:14,080
instruction has an op code

578
00:23:14,080 --> 00:23:17,760
and we should we can just check

579
00:23:17,760 --> 00:23:19,600
we can just create a hash out of those

580
00:23:19,600 --> 00:23:22,559
op codes in the compile time and then

581
00:23:22,559 --> 00:23:24,960
check them again in the run time and if

582
00:23:24,960 --> 00:23:27,120
they don't match it means that well

583
00:23:27,120 --> 00:23:29,919
probably an instruction was changed like

584
00:23:29,919 --> 00:23:32,080
if you change it to tbnz as we did

585
00:23:32,080 --> 00:23:34,480
before the upcode would change so the

586
00:23:34,480 --> 00:23:36,480
hashcode wouldn't match so that's how

587
00:23:36,480 --> 00:23:38,799
you can just verify it so you can do the

588
00:23:38,799 --> 00:23:41,600
same with java i mean android

589
00:23:41,600 --> 00:23:44,159
you can just check for classes.tx

590
00:23:44,159 --> 00:23:46,000
but also you can just check for swizzled

591
00:23:46,000 --> 00:23:48,159
method and swizzled method is just a

592
00:23:48,159 --> 00:23:49,360
method for

593
00:23:49,360 --> 00:23:50,880
for which the function pointer was

594
00:23:50,880 --> 00:23:53,760
changed so if you invoked it actually

595
00:23:53,760 --> 00:23:55,919
another function will be invoked well

596
00:23:55,919 --> 00:23:57,279
it's actually

597
00:23:57,279 --> 00:24:00,640
a longer topic so i encourage you to go

598
00:24:00,640 --> 00:24:02,799
to a blog post of my colleague and read

599
00:24:02,799 --> 00:24:04,640
more about it

600
00:24:04,640 --> 00:24:06,480
it's quite interesting one and quite

601
00:24:06,480 --> 00:24:08,000
popular

602
00:24:08,000 --> 00:24:08,799
to

603
00:24:08,799 --> 00:24:13,679
to use while while developing new cheats

604
00:24:14,320 --> 00:24:18,080
okay so now we'll talk about obfuscation

605
00:24:18,080 --> 00:24:18,960
so

606
00:24:18,960 --> 00:24:21,279
well you remember the first demo during

607
00:24:21,279 --> 00:24:23,200
the presentation how we walked through

608
00:24:23,200 --> 00:24:25,840
for walls so here is actually

609
00:24:25,840 --> 00:24:28,000
explanation why it worked

610
00:24:28,000 --> 00:24:30,240
and it worked because the app didn't

611
00:24:30,240 --> 00:24:32,880
have simple obfuscation

612
00:24:32,880 --> 00:24:35,279
so symbol is actually

613
00:24:35,279 --> 00:24:37,279
name of a class or a function or a

614
00:24:37,279 --> 00:24:40,159
variable and we were able to retrieve to

615
00:24:40,159 --> 00:24:41,840
recover all the name of the classes and

616
00:24:41,840 --> 00:24:44,240
functions and so on from the app and we

617
00:24:44,240 --> 00:24:47,440
found a class player control

618
00:24:47,440 --> 00:24:49,919
and here we had like several

619
00:24:49,919 --> 00:24:52,799
nice functions like die and revive

620
00:24:52,799 --> 00:24:55,520
and well we are curious what will happen

621
00:24:55,520 --> 00:24:58,159
if we just invoke die function from a

622
00:24:58,159 --> 00:24:59,360
terminal

623
00:24:59,360 --> 00:25:01,440
and it turns out that you just turn into

624
00:25:01,440 --> 00:25:02,559
a ghost

625
00:25:02,559 --> 00:25:04,640
and once you are a ghost you can just

626
00:25:04,640 --> 00:25:06,480
well do whatever you really want you can

627
00:25:06,480 --> 00:25:08,960
like go for the wall for example and

628
00:25:08,960 --> 00:25:10,640
once you are on the right side of the

629
00:25:10,640 --> 00:25:12,799
wall you can just invoke revive and then

630
00:25:12,799 --> 00:25:15,520
you are like human you can just continue

631
00:25:15,520 --> 00:25:16,640
playing

632
00:25:16,640 --> 00:25:19,200
so the the plan of the attack was to

633
00:25:19,200 --> 00:25:21,440
find a relevant function

634
00:25:21,440 --> 00:25:23,600
then invoke that function and you can

635
00:25:23,600 --> 00:25:26,960
invoke it in many ways so if you don't

636
00:25:26,960 --> 00:25:29,919
well if you have compromised environment

637
00:25:29,919 --> 00:25:31,600
well for example you have a jelly broken

638
00:25:31,600 --> 00:25:34,400
device you can just use frida and invoke

639
00:25:34,400 --> 00:25:35,840
a function

640
00:25:35,840 --> 00:25:38,080
well in case of application integrity i

641
00:25:38,080 --> 00:25:39,840
mean if you don't have application

642
00:25:39,840 --> 00:25:42,400
integrity implemented then someone can

643
00:25:42,400 --> 00:25:44,240
repackage your app into being a

644
00:25:44,240 --> 00:25:47,039
debuggable app and then attach debugger

645
00:25:47,039 --> 00:25:48,880
and invoke function

646
00:25:48,880 --> 00:25:52,480
if you don't have code integrity then

647
00:25:52,480 --> 00:25:54,559
someone can just modify an app in a way

648
00:25:54,559 --> 00:25:56,480
that when you are close to the wall you

649
00:25:56,480 --> 00:25:58,400
just invoke dye method

650
00:25:58,400 --> 00:26:00,320
then you can cross and then once you are

651
00:26:00,320 --> 00:26:02,320
you know away from the wall

652
00:26:02,320 --> 00:26:05,600
you just automatically invoke revive

653
00:26:05,600 --> 00:26:06,480
so

654
00:26:06,480 --> 00:26:09,039
we use pretty similar techniques

655
00:26:09,039 --> 00:26:11,200
technique in the in the second demo

656
00:26:11,200 --> 00:26:14,080
where we bypassed payments so we found

657
00:26:14,080 --> 00:26:16,159
on transaction succeed

658
00:26:16,159 --> 00:26:18,720
and well we thought well probably that

659
00:26:18,720 --> 00:26:21,760
function happens after the successful

660
00:26:21,760 --> 00:26:23,679
the successful transaction

661
00:26:23,679 --> 00:26:25,600
and well it actually did

662
00:26:25,600 --> 00:26:29,039
um so we just invoked that one

663
00:26:29,039 --> 00:26:31,840
and you should really think about how

664
00:26:31,840 --> 00:26:33,760
many meaningful names you have in your

665
00:26:33,760 --> 00:26:35,520
app because if they are like that

666
00:26:35,520 --> 00:26:37,919
meaningful you can really well an

667
00:26:37,919 --> 00:26:40,400
attacker can easily find them and invoke

668
00:26:40,400 --> 00:26:42,640
them

669
00:26:43,760 --> 00:26:47,120
okay so what is obfuscation obfuscation

670
00:26:47,120 --> 00:26:48,720
is about

671
00:26:48,720 --> 00:26:51,360
well making the code harder for an

672
00:26:51,360 --> 00:26:53,440
attacker to understand so it's like

673
00:26:53,440 --> 00:26:56,400
renaming variables classes methods

674
00:26:56,400 --> 00:26:59,679
encrypting strings api points but it's

675
00:26:59,679 --> 00:27:00,799
also about

676
00:27:00,799 --> 00:27:03,360
complicating the control flow graph like

677
00:27:03,360 --> 00:27:05,440
you remember the check license

678
00:27:05,440 --> 00:27:07,760
example so you could you could just see

679
00:27:07,760 --> 00:27:10,240
on the graph where the statement is

680
00:27:10,240 --> 00:27:12,559
but we can we can use obfuscation to

681
00:27:12,559 --> 00:27:15,039
make the graph super complex to follow

682
00:27:15,039 --> 00:27:16,640
so it would look like the one on the

683
00:27:16,640 --> 00:27:18,559
right hand side

684
00:27:18,559 --> 00:27:19,520
here

685
00:27:19,520 --> 00:27:20,559
so

686
00:27:20,559 --> 00:27:22,480
that that's how the control flow of a

687
00:27:22,480 --> 00:27:24,559
skeleton looks like but what's more you

688
00:27:24,559 --> 00:27:27,279
can encrypt assets so for example if you

689
00:27:27,279 --> 00:27:29,760
want to have a surprise for your for

690
00:27:29,760 --> 00:27:32,320
your users during christmas

691
00:27:32,320 --> 00:27:34,640
uh then you should make sure that you

692
00:27:34,640 --> 00:27:36,799
encrypt your assets otherwise like there

693
00:27:36,799 --> 00:27:39,440
will be like um a cheater that would

694
00:27:39,440 --> 00:27:41,520
reveal those assets before you and will

695
00:27:41,520 --> 00:27:45,200
just distribute that app for free

696
00:27:45,200 --> 00:27:47,600
what's more well people can if you don't

697
00:27:47,600 --> 00:27:49,279
have obfuscation people could just like

698
00:27:49,279 --> 00:27:51,679
steal your ip like for example you have

699
00:27:51,679 --> 00:27:54,640
a function that well prettifies an image

700
00:27:54,640 --> 00:27:56,960
that you have taken like you take a

701
00:27:56,960 --> 00:27:59,679
photo then you prettify the image

702
00:27:59,679 --> 00:28:02,080
and it's your just like own ip in house

703
00:28:02,080 --> 00:28:05,919
ip developed in house so

704
00:28:05,919 --> 00:28:07,760
an attacker could just take that

705
00:28:07,760 --> 00:28:09,760
function away from your app and

706
00:28:09,760 --> 00:28:11,760
implement in their app if you don't have

707
00:28:11,760 --> 00:28:13,120
application

708
00:28:13,120 --> 00:28:15,919
if you do then the the function is

709
00:28:15,919 --> 00:28:18,559
dependable on many parts in the app so

710
00:28:18,559 --> 00:28:21,440
it is really really hard or almost

711
00:28:21,440 --> 00:28:23,200
impossible to get it

712
00:28:23,200 --> 00:28:25,440
from from that app

713
00:28:25,440 --> 00:28:27,679
but what's also quite interesting topic

714
00:28:27,679 --> 00:28:28,880
recently

715
00:28:28,880 --> 00:28:31,840
uh is out updating cheats

716
00:28:31,840 --> 00:28:32,880
so

717
00:28:32,880 --> 00:28:34,799
auto updating cheats are the cheats that

718
00:28:34,799 --> 00:28:36,399
i can actually update

719
00:28:36,399 --> 00:28:39,840
on their own so here you can see

720
00:28:39,840 --> 00:28:41,520
let's say it's the first version of the

721
00:28:41,520 --> 00:28:44,640
game on the first screen and a cheater

722
00:28:44,640 --> 00:28:48,240
like applied a patch a mod to a game and

723
00:28:48,240 --> 00:28:50,320
here you can see it on the red and then

724
00:28:50,320 --> 00:28:51,840
in the second version of the game you

725
00:28:51,840 --> 00:28:53,440
add a new feature

726
00:28:53,440 --> 00:28:54,960
like and you can see it with the

727
00:28:54,960 --> 00:28:57,120
brighter

728
00:28:57,120 --> 00:28:58,399
great color

729
00:28:58,399 --> 00:29:00,720
but the patch can still be the same

730
00:29:00,720 --> 00:29:04,240
maybe code will get well maybe code will

731
00:29:04,240 --> 00:29:06,080
be at the new offset but the

732
00:29:06,080 --> 00:29:08,480
instructions around will be the same

733
00:29:08,480 --> 00:29:10,720
so the patch will be applied based on

734
00:29:10,720 --> 00:29:12,799
the instructions around

735
00:29:12,799 --> 00:29:15,279
so the patch will can be just applied in

736
00:29:15,279 --> 00:29:16,799
the same way

737
00:29:16,799 --> 00:29:19,360
however if we use compile time control

738
00:29:19,360 --> 00:29:20,880
for obfuscation

739
00:29:20,880 --> 00:29:22,880
then each function

740
00:29:22,880 --> 00:29:25,200
is just spread away

741
00:29:25,200 --> 00:29:28,159
and shuffled with other instructions

742
00:29:28,159 --> 00:29:29,919
at the compile time

743
00:29:29,919 --> 00:29:32,880
so even if an attacker patches your game

744
00:29:32,880 --> 00:29:35,440
now then in the next release cycle your

745
00:29:35,440 --> 00:29:36,640
app will

746
00:29:36,640 --> 00:29:38,480
look totally different like all of those

747
00:29:38,480 --> 00:29:39,840
pieces will be in totally different

748
00:29:39,840 --> 00:29:41,440
places

749
00:29:41,440 --> 00:29:44,159
so the same patch won't work and it will

750
00:29:44,159 --> 00:29:45,919
be also harder for an attacker to

751
00:29:45,919 --> 00:29:48,559
understand the code because those those

752
00:29:48,559 --> 00:29:50,320
pieces are just like shuffled links

753
00:29:50,320 --> 00:29:51,760
there's like no

754
00:29:51,760 --> 00:29:55,279
coherent string here so it is like

755
00:29:55,279 --> 00:29:59,600
resetting the clock for for an attacker

756
00:29:59,600 --> 00:30:01,600
all right so

757
00:30:01,600 --> 00:30:04,799
how you can actually obfuscate your app

758
00:30:04,799 --> 00:30:07,120
you well basically

759
00:30:07,120 --> 00:30:10,000
high-end sorry for interrupting i think

760
00:30:10,000 --> 00:30:13,360
two more minutes only we are having

761
00:30:13,360 --> 00:30:16,000
all right all right yeah uh

762
00:30:16,000 --> 00:30:18,000
i'll try to go fast for the slide okay

763
00:30:18,000 --> 00:30:19,600
so basically

764
00:30:19,600 --> 00:30:21,760
or you want to i have just one more

765
00:30:21,760 --> 00:30:23,679
slide i believe

766
00:30:23,679 --> 00:30:26,720
oh great that one

767
00:30:26,720 --> 00:30:28,640
cool so basically

768
00:30:28,640 --> 00:30:30,399
for the obfuscation

769
00:30:30,399 --> 00:30:32,159
developers should write clean code which

770
00:30:32,159 --> 00:30:34,559
is the opposite of the obfuscation so

771
00:30:34,559 --> 00:30:35,760
the compile

772
00:30:35,760 --> 00:30:37,200
compilation time solution would be the

773
00:30:37,200 --> 00:30:38,399
best one

774
00:30:38,399 --> 00:30:40,480
i i'm i'm not going to talk about those

775
00:30:40,480 --> 00:30:42,880
ways here i'll just leave you slides for

776
00:30:42,880 --> 00:30:44,559
you later on so we can just take it from

777
00:30:44,559 --> 00:30:45,919
here

778
00:30:45,919 --> 00:30:47,039
and

779
00:30:47,039 --> 00:30:49,600
the key thing is just to implement all

780
00:30:49,600 --> 00:30:50,480
of them

781
00:30:50,480 --> 00:30:52,159
all of all of the components because if

782
00:30:52,159 --> 00:30:53,279
you don't

783
00:30:53,279 --> 00:30:56,240
then it's just easy to bypass one

784
00:30:56,240 --> 00:31:00,080
component by exploiting the other one

785
00:31:00,080 --> 00:31:00,960
so

786
00:31:00,960 --> 00:31:03,360
main thing here

787
00:31:03,360 --> 00:31:06,799
and yeah again implement all of it and

788
00:31:06,799 --> 00:31:09,600
will regularly update your code so

789
00:31:09,600 --> 00:31:11,919
another card doesn't have enough time to

790
00:31:11,919 --> 00:31:15,120
understand your product

791
00:31:15,120 --> 00:31:19,850
[Music]

792
00:31:21,440 --> 00:31:23,519
you

