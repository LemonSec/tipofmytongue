1
00:00:01,410 --> 00:00:06,030
[Music]

2
00:00:08,000 --> 00:00:10,800
so hello everybody um as john said my

3
00:00:10,800 --> 00:00:12,400
name is stefan

4
00:00:12,400 --> 00:00:15,599
and um i'm going to talk about devsecops

5
00:00:15,599 --> 00:00:17,920
in 2031 so it's gonna be a bit of a

6
00:00:17,920 --> 00:00:21,039
futuristic talk and

7
00:00:21,039 --> 00:00:23,279
it's a bit of an experiment as well so

8
00:00:23,279 --> 00:00:25,439
let me know how you like it

9
00:00:25,439 --> 00:00:26,400
um

10
00:00:26,400 --> 00:00:28,320
my background is

11
00:00:28,320 --> 00:00:29,920
like i mentioned i've done a lot of

12
00:00:29,920 --> 00:00:32,238
hardcore security testing which means i

13
00:00:32,238 --> 00:00:34,399
was actually in the early days doing

14
00:00:34,399 --> 00:00:35,760
security

15
00:00:35,760 --> 00:00:38,160
security tests in networks all of these

16
00:00:38,160 --> 00:00:40,559
things when there was no tools around we

17
00:00:40,559 --> 00:00:43,120
had to write everything ourselves

18
00:00:43,120 --> 00:00:45,280
and after being on the offensive side

19
00:00:45,280 --> 00:00:48,079
for many many years i got sucked into

20
00:00:48,079 --> 00:00:50,000
the secure software developments and

21
00:00:50,000 --> 00:00:51,360
later on into

22
00:00:51,360 --> 00:00:54,320
devops and devsecops which to me was a

23
00:00:54,320 --> 00:00:56,960
complete game changer because

24
00:00:56,960 --> 00:00:59,840
it changed my perspective on security as

25
00:00:59,840 --> 00:01:01,359
a whole

26
00:01:01,359 --> 00:01:04,080
and while i was consulting with a lot of

27
00:01:04,080 --> 00:01:06,640
different organizations around the globe

28
00:01:06,640 --> 00:01:09,439
for introducing the devsecops practices

29
00:01:09,439 --> 00:01:11,920
i also realized that the security

30
00:01:11,920 --> 00:01:13,360
automation piece

31
00:01:13,360 --> 00:01:15,600
is completely broken in my opinion and

32
00:01:15,600 --> 00:01:17,439
set out to fix it

33
00:01:17,439 --> 00:01:18,479
and so

34
00:01:18,479 --> 00:01:20,400
since then i've started a company called

35
00:01:20,400 --> 00:01:23,600
guardrail and i'm now the cto there

36
00:01:23,600 --> 00:01:25,520
and just a quick blog

37
00:01:25,520 --> 00:01:26,640
plug

38
00:01:26,640 --> 00:01:28,159
we are actually

39
00:01:28,159 --> 00:01:31,200
uh just hiring dramatically so if you

40
00:01:31,200 --> 00:01:31,920
are

41
00:01:31,920 --> 00:01:33,759
a hardcore security folk as well that

42
00:01:33,759 --> 00:01:36,159
wants to help millions of developers

43
00:01:36,159 --> 00:01:38,400
secure their applications and make

44
00:01:38,400 --> 00:01:40,560
security a better place please do send

45
00:01:40,560 --> 00:01:43,920
us an email to careers gardeners i hope

46
00:01:43,920 --> 00:01:44,880
all right

47
00:01:44,880 --> 00:01:45,920
so now

48
00:01:45,920 --> 00:01:48,479
let's dig in

49
00:01:48,479 --> 00:01:50,720
we're gonna have our protagonist called

50
00:01:50,720 --> 00:01:53,520
sam and sam is a security lead for a

51
00:01:53,520 --> 00:01:54,720
very hot

52
00:01:54,720 --> 00:01:56,960
new fintech application

53
00:01:56,960 --> 00:01:58,960
and she got like

54
00:01:58,960 --> 00:02:00,640
full buying from

55
00:02:00,640 --> 00:02:03,040
from the top level management and she

56
00:02:03,040 --> 00:02:05,040
was there from day one to make sure that

57
00:02:05,040 --> 00:02:07,520
this project is gonna be

58
00:02:07,520 --> 00:02:10,000
top-notch secure and that everything is

59
00:02:10,000 --> 00:02:11,280
going to be

60
00:02:11,280 --> 00:02:13,520
the best possible outcome

61
00:02:13,520 --> 00:02:15,599
and so she was able to bring to bed to

62
00:02:15,599 --> 00:02:17,440
get a dream team of other security

63
00:02:17,440 --> 00:02:19,840
engineers and is working with the best

64
00:02:19,840 --> 00:02:21,920
of in the industry that are developing

65
00:02:21,920 --> 00:02:24,239
and architecting this this application

66
00:02:24,239 --> 00:02:25,840
and they have an unlimited budget which

67
00:02:25,840 --> 00:02:27,200
is great

68
00:02:27,200 --> 00:02:30,319
so sam was able to implement the best

69
00:02:30,319 --> 00:02:32,800
possible security approach that is state

70
00:02:32,800 --> 00:02:34,840
of the art for this application for this

71
00:02:34,840 --> 00:02:38,319
project and yeah same is really awesome

72
00:02:38,319 --> 00:02:41,200
same also knows that sharing is caring

73
00:02:41,200 --> 00:02:44,319
and as as part of being a community

74
00:02:44,319 --> 00:02:46,080
you have to always make sure that you

75
00:02:46,080 --> 00:02:48,480
can bring these new new approaches to

76
00:02:48,480 --> 00:02:50,959
your peers and as such she decided to

77
00:02:50,959 --> 00:02:52,879
share this in the local

78
00:02:52,879 --> 00:02:54,319
chapter

79
00:02:54,319 --> 00:02:56,879
her security approach looked something

80
00:02:56,879 --> 00:02:58,480
like this

81
00:02:58,480 --> 00:02:59,840
first of all

82
00:02:59,840 --> 00:03:02,319
we understand that security

83
00:03:02,319 --> 00:03:04,159
starts with developers starts with the

84
00:03:04,159 --> 00:03:07,200
operation teams and so sam actually

85
00:03:07,200 --> 00:03:10,560
decided that every engineer every person

86
00:03:10,560 --> 00:03:12,959
writing code no matter if it's for the

87
00:03:12,959 --> 00:03:15,840
application for the content for the api

88
00:03:15,840 --> 00:03:17,360
for the mobile app or for the

89
00:03:17,360 --> 00:03:19,040
infrastructure

90
00:03:19,040 --> 00:03:21,360
they have to get through some form of

91
00:03:21,360 --> 00:03:23,920
traditional security training which

92
00:03:23,920 --> 00:03:26,239
means understanding what is important

93
00:03:26,239 --> 00:03:28,239
what is the important

94
00:03:28,239 --> 00:03:30,080
security what are the important security

95
00:03:30,080 --> 00:03:32,239
goals of the application what are the

96
00:03:32,239 --> 00:03:34,560
reason the risk we want to avoid what

97
00:03:34,560 --> 00:03:37,680
are risks in general and then of course

98
00:03:37,680 --> 00:03:40,239
we also started they also started doing

99
00:03:40,239 --> 00:03:42,640
gamified security training which makes

100
00:03:42,640 --> 00:03:44,720
sure that they could actually take

101
00:03:44,720 --> 00:03:47,680
existing vulnerabilities that they had

102
00:03:47,680 --> 00:03:49,200
in their application

103
00:03:49,200 --> 00:03:50,959
and they also were able to actually use

104
00:03:50,959 --> 00:03:53,200
this in a gamified way to learn what are

105
00:03:53,200 --> 00:03:55,680
the problems they had how do they fix it

106
00:03:55,680 --> 00:03:58,959
and so this was to ensure that everybody

107
00:03:58,959 --> 00:04:01,920
at a at any time has a good baseline of

108
00:04:01,920 --> 00:04:04,000
security understand what they want to

109
00:04:04,000 --> 00:04:06,400
achieve and that really helped just make

110
00:04:06,400 --> 00:04:08,560
sure to set the stage

111
00:04:08,560 --> 00:04:10,480
then in addition to this of course

112
00:04:10,480 --> 00:04:12,879
because of the financial application

113
00:04:12,879 --> 00:04:14,400
threat modeling and agile threat

114
00:04:14,400 --> 00:04:16,399
modeling has been done for

115
00:04:16,399 --> 00:04:18,160
every sprint making sure that the new

116
00:04:18,160 --> 00:04:20,000
features that are coming in are

117
00:04:20,000 --> 00:04:23,360
completely secure and all of the adverse

118
00:04:23,360 --> 00:04:26,080
test cases are being considered and the

119
00:04:26,080 --> 00:04:28,160
threats are being modeled out in

120
00:04:28,160 --> 00:04:31,680
addition to this every user story also

121
00:04:31,680 --> 00:04:35,120
has to have security acceptance criteria

122
00:04:35,120 --> 00:04:37,520
which may be something simple like what

123
00:04:37,520 --> 00:04:38,960
are the different

124
00:04:38,960 --> 00:04:41,840
authorization issues that we have to

125
00:04:41,840 --> 00:04:44,000
cover what are the requirements for

126
00:04:44,000 --> 00:04:47,440
inputs validation and normalization etc

127
00:04:47,440 --> 00:04:49,360
and there are also dedicated security

128
00:04:49,360 --> 00:04:52,160
stories for example how do our how does

129
00:04:52,160 --> 00:04:54,479
our our authentication framework look

130
00:04:54,479 --> 00:04:57,040
like and how do we make sure that this

131
00:04:57,040 --> 00:04:59,840
is done properly to authorize people etc

132
00:04:59,840 --> 00:05:01,759
etc

133
00:05:01,759 --> 00:05:04,720
when it comes to selecting open source

134
00:05:04,720 --> 00:05:06,080
libraries

135
00:05:06,080 --> 00:05:08,240
there was a very very

136
00:05:08,240 --> 00:05:10,400
minimalistic approach taken

137
00:05:10,400 --> 00:05:12,800
because we all know that um open source

138
00:05:12,800 --> 00:05:16,080
software there's a different level

139
00:05:16,080 --> 00:05:17,680
of quality there's a lot of parks being

140
00:05:17,680 --> 00:05:19,199
discovered and we're building our

141
00:05:19,199 --> 00:05:21,360
applications on this foundation

142
00:05:21,360 --> 00:05:23,840
so besides making sure that only

143
00:05:23,840 --> 00:05:26,479
respective uh respectable approaches are

144
00:05:26,479 --> 00:05:28,720
being used and languages being used that

145
00:05:28,720 --> 00:05:30,560
are you know um

146
00:05:30,560 --> 00:05:33,120
uh more minimalistic and lightweight

147
00:05:33,120 --> 00:05:35,039
there was also an automated security

148
00:05:35,039 --> 00:05:37,360
patch process in place meaning not just

149
00:05:37,360 --> 00:05:39,120
when like every time there's new

150
00:05:39,120 --> 00:05:41,440
security vulnerabilities available

151
00:05:41,440 --> 00:05:43,759
automatically the pull requests would

152
00:05:43,759 --> 00:05:45,520
have been created to make sure that this

153
00:05:45,520 --> 00:05:47,120
has to be merged before the next

154
00:05:47,120 --> 00:05:48,240
iteration

155
00:05:48,240 --> 00:05:50,240
will come

156
00:05:50,240 --> 00:05:52,320
will be deployed to the uh

157
00:05:52,320 --> 00:05:54,400
as part of the application and of course

158
00:05:54,400 --> 00:05:56,240
we also understood sam also understood

159
00:05:56,240 --> 00:05:57,919
that license compliance is very

160
00:05:57,919 --> 00:05:58,960
important

161
00:05:58,960 --> 00:06:02,400
so there was also of course um

162
00:06:02,400 --> 00:06:04,160
gate like a gates in place to make sure

163
00:06:04,160 --> 00:06:06,400
that only libraries that are in line

164
00:06:06,400 --> 00:06:07,360
with the

165
00:06:07,360 --> 00:06:09,520
legal requirements that we have for the

166
00:06:09,520 --> 00:06:11,840
application could be actually

167
00:06:11,840 --> 00:06:13,120
introduced

168
00:06:13,120 --> 00:06:15,199
in addition to this we also made sure

169
00:06:15,199 --> 00:06:17,360
sam also made sure that in their team

170
00:06:17,360 --> 00:06:18,880
every single commit that was being

171
00:06:18,880 --> 00:06:22,319
created would actually be scanned with

172
00:06:22,319 --> 00:06:24,160
with static analysis tools covering

173
00:06:24,160 --> 00:06:25,600
everything from

174
00:06:25,600 --> 00:06:28,560
infrastructures code configuration

175
00:06:28,560 --> 00:06:31,199
your normal application code secrets you

176
00:06:31,199 --> 00:06:32,560
name it

177
00:06:32,560 --> 00:06:36,400
on top of that only prs can be merged no

178
00:06:36,400 --> 00:06:38,319
code can be committed directly to any of

179
00:06:38,319 --> 00:06:39,520
the repos

180
00:06:39,520 --> 00:06:42,080
and they would require peer review so at

181
00:06:42,080 --> 00:06:44,160
least two people would have to actually

182
00:06:44,160 --> 00:06:47,039
approve a pr before it gets merged to

183
00:06:47,039 --> 00:06:49,759
reduce the risk further that any of the

184
00:06:49,759 --> 00:06:52,080
violent like any malicious code may be

185
00:06:52,080 --> 00:06:54,800
introduced or maybe some attacker gets a

186
00:06:54,800 --> 00:06:57,440
coding that could cause a supply like

187
00:06:57,440 --> 00:06:59,199
could cause an attack against the

188
00:06:59,199 --> 00:07:00,960
application

189
00:07:00,960 --> 00:07:02,800
because everything was containerized in

190
00:07:02,800 --> 00:07:05,520
microservices there was also of course

191
00:07:05,520 --> 00:07:07,440
policies around containers making sure

192
00:07:07,440 --> 00:07:10,479
that only containers with uh no high

193
00:07:10,479 --> 00:07:12,240
risk of critical risk

194
00:07:12,240 --> 00:07:15,120
cves could be deployed and once

195
00:07:15,120 --> 00:07:17,199
everything was done

196
00:07:17,199 --> 00:07:19,199
the deploy to the test environment would

197
00:07:19,199 --> 00:07:21,440
automatically trigger dynamic scanning

198
00:07:21,440 --> 00:07:22,960
and of course the application in the

199
00:07:22,960 --> 00:07:25,840
test environment have uh is enabled

200
00:07:25,840 --> 00:07:27,680
which means you get a very good coverage

201
00:07:27,680 --> 00:07:30,080
that's also further orchestrated and

202
00:07:30,080 --> 00:07:32,000
exercised with the functional test

203
00:07:32,000 --> 00:07:34,240
suites that are running against it

204
00:07:34,240 --> 00:07:36,800
in addition to this we also of course

205
00:07:36,800 --> 00:07:38,560
had functional security tests that are

206
00:07:38,560 --> 00:07:40,720
running against the api so in addition

207
00:07:40,720 --> 00:07:42,639
to the acceptance criteria that you have

208
00:07:42,639 --> 00:07:44,560
you would also have good and bad

209
00:07:44,560 --> 00:07:46,800
security tests and every security test

210
00:07:46,800 --> 00:07:49,360
was ever every security vulnerability

211
00:07:49,360 --> 00:07:51,280
that was ever identified

212
00:07:51,280 --> 00:07:53,840
would have been coded as a failing test

213
00:07:53,840 --> 00:07:55,680
and only when news was passing it would

214
00:07:55,680 --> 00:07:57,039
have been

215
00:07:57,039 --> 00:07:59,680
able to continue

216
00:07:59,680 --> 00:08:02,080
in addition we of course also had manual

217
00:08:02,080 --> 00:08:03,840
security testing in phase which is

218
00:08:03,840 --> 00:08:06,160
penetration testing internally and there

219
00:08:06,160 --> 00:08:08,080
was also security acceptance criteria

220
00:08:08,080 --> 00:08:10,840
testing which means when a ticket gets

221
00:08:10,840 --> 00:08:13,440
approved a security team member would

222
00:08:13,440 --> 00:08:14,639
have to make sure that all of these

223
00:08:14,639 --> 00:08:17,199
things are there and working as expected

224
00:08:17,199 --> 00:08:19,120
not just from the functions functional

225
00:08:19,120 --> 00:08:20,800
side of things but also from the

226
00:08:20,800 --> 00:08:22,800
security side of things

227
00:08:22,800 --> 00:08:24,240
and in addition

228
00:08:24,240 --> 00:08:26,000
chaos security experiments are being

229
00:08:26,000 --> 00:08:28,560
started making sure that

230
00:08:28,560 --> 00:08:29,280
the

231
00:08:29,280 --> 00:08:31,360
the uh the system is not just reliable

232
00:08:31,360 --> 00:08:33,440
but also secure and that injecting

233
00:08:33,440 --> 00:08:35,519
failures would allow everybody to make

234
00:08:35,519 --> 00:08:38,159
sure that the responses is ready that

235
00:08:38,159 --> 00:08:39,760
these these

236
00:08:39,760 --> 00:08:41,679
events would be identified and

237
00:08:41,679 --> 00:08:43,679
everything would be managed the way it

238
00:08:43,679 --> 00:08:45,839
is intended to be

239
00:08:45,839 --> 00:08:48,000
there's also a continuous validation of

240
00:08:48,000 --> 00:08:49,519
the product environment following the

241
00:08:49,519 --> 00:08:52,080
three hours of enterprise security which

242
00:08:52,080 --> 00:08:55,440
means rotate repave and repair

243
00:08:55,440 --> 00:08:57,360
rotate means that all the credentials

244
00:08:57,360 --> 00:08:59,279
would never be static they would always

245
00:08:59,279 --> 00:09:01,120
be automatically

246
00:09:01,120 --> 00:09:02,480
recover

247
00:09:02,480 --> 00:09:04,880
rotated you also have of course the

248
00:09:04,880 --> 00:09:06,880
repave making sure that your production

249
00:09:06,880 --> 00:09:10,399
environment is reset to a known state

250
00:09:10,399 --> 00:09:12,000
and so there's no long-running

251
00:09:12,000 --> 00:09:14,240
containers which also reduces the risk

252
00:09:14,240 --> 00:09:15,920
of making sure that attackers that may

253
00:09:15,920 --> 00:09:17,600
get in there that they don't really have

254
00:09:17,600 --> 00:09:18,959
a foothold

255
00:09:18,959 --> 00:09:20,320
of course we

256
00:09:20,320 --> 00:09:22,399
the the systems also have random

257
00:09:22,399 --> 00:09:24,640
application self-protection and next

258
00:09:24,640 --> 00:09:27,040
generation valves in place

259
00:09:27,040 --> 00:09:29,279
and on top of that micro segmentation

260
00:09:29,279 --> 00:09:31,040
was being used ensuring that every

261
00:09:31,040 --> 00:09:33,839
system can only communicate with another

262
00:09:33,839 --> 00:09:36,480
system in the approved way so all the

263
00:09:36,480 --> 00:09:38,320
firewalls on these local machines were

264
00:09:38,320 --> 00:09:41,360
orchestrated to make sure you only have

265
00:09:41,360 --> 00:09:44,160
communication that is approved even into

266
00:09:44,160 --> 00:09:46,240
services

267
00:09:46,240 --> 00:09:48,080
and there's also a stock in place to

268
00:09:48,080 --> 00:09:49,440
make sure that there was extensive

269
00:09:49,440 --> 00:09:51,360
security monitoring and they started

270
00:09:51,360 --> 00:09:52,800
looking at behavioral

271
00:09:52,800 --> 00:09:55,200
analysis which actually just mentioned

272
00:09:55,200 --> 00:09:57,760
in the last part of his talk as well to

273
00:09:57,760 --> 00:10:00,000
make sure to see that not just people

274
00:10:00,000 --> 00:10:01,600
doing stuff is fine and they have the

275
00:10:01,600 --> 00:10:03,360
credentials but also that doing the same

276
00:10:03,360 --> 00:10:05,760
things and the right things uh in line

277
00:10:05,760 --> 00:10:08,800
with the behavioral profile that we had

278
00:10:08,800 --> 00:10:10,880
and finally there was the bug bounty

279
00:10:10,880 --> 00:10:12,079
program making sure that there's

280
00:10:12,079 --> 00:10:14,480
continuous security testing from third

281
00:10:14,480 --> 00:10:16,720
parties that make sure that everything

282
00:10:16,720 --> 00:10:19,040
else is hopefully identified as quickly

283
00:10:19,040 --> 00:10:21,600
as possible before hackers come in

284
00:10:21,600 --> 00:10:24,160
so that was the beautiful thing that sam

285
00:10:24,160 --> 00:10:25,600
has come up with

286
00:10:25,600 --> 00:10:28,079
and sam has been so happy with the

287
00:10:28,079 --> 00:10:32,000
results the project was a huge success

288
00:10:32,000 --> 00:10:33,519
they're in a really good position

289
00:10:33,519 --> 00:10:36,000
there's almost no security depth

290
00:10:36,000 --> 00:10:38,160
and not just the project members and the

291
00:10:38,160 --> 00:10:40,560
company is really happy her peers that

292
00:10:40,560 --> 00:10:42,800
she has presented this to are amazed

293
00:10:42,800 --> 00:10:44,839
with what what she has brought up

294
00:10:44,839 --> 00:10:47,440
here so really happy and content with

295
00:10:47,440 --> 00:10:48,560
herself

296
00:10:48,560 --> 00:10:50,880
sam is now heading home

297
00:10:50,880 --> 00:10:54,160
getting ready for bed when suddenly

298
00:10:54,160 --> 00:10:56,640
her future self appears

299
00:10:56,640 --> 00:10:59,920
and her future self has a message saying

300
00:10:59,920 --> 00:11:01,200
that um

301
00:11:01,200 --> 00:11:03,760
the world is at risk because

302
00:11:03,760 --> 00:11:05,839
something is happening and hackers are

303
00:11:05,839 --> 00:11:08,560
threatening to take over the planet

304
00:11:08,560 --> 00:11:11,360
sam is really confused with that and

305
00:11:11,360 --> 00:11:13,120
just a disclaimer we are not going to

306
00:11:13,120 --> 00:11:15,200
look into time travel paradoxes because

307
00:11:15,200 --> 00:11:17,680
they won't apply to the story

308
00:11:17,680 --> 00:11:18,480
so

309
00:11:18,480 --> 00:11:20,240
what happened

310
00:11:20,240 --> 00:11:21,920
in the future 10 years from now

311
00:11:21,920 --> 00:11:24,240
specifically

312
00:11:24,240 --> 00:11:27,120
a semi-sentient continuously evolving

313
00:11:27,120 --> 00:11:28,560
hacker ai

314
00:11:28,560 --> 00:11:30,959
has escaped the lab and has been

315
00:11:30,959 --> 00:11:33,760
successfully attacking 95

316
00:11:33,760 --> 00:11:36,000
of all the critical apps out there

317
00:11:36,000 --> 00:11:39,600
because they were not secured properly

318
00:11:39,600 --> 00:11:41,760
and now future self says hey i know you

319
00:11:41,760 --> 00:11:43,440
have a lot of questions but there's no

320
00:11:43,440 --> 00:11:46,160
time so come with me to the future

321
00:11:46,160 --> 00:11:48,720
and i will explain everything to you

322
00:11:48,720 --> 00:11:50,800
so sam is coming with her and they

323
00:11:50,800 --> 00:11:51,839
arrive

324
00:11:51,839 --> 00:11:55,760
in 2000 in 2031

325
00:11:55,760 --> 00:11:57,920
future self is continuing to tell the

326
00:11:57,920 --> 00:11:59,519
story

327
00:11:59,519 --> 00:12:01,040
so first of all

328
00:12:01,040 --> 00:12:02,720
first of all you have to understand that

329
00:12:02,720 --> 00:12:04,079
you have done a great job with the

330
00:12:04,079 --> 00:12:06,560
approach that we've just mentioned

331
00:12:06,560 --> 00:12:08,560
which has led to amazing opportunities

332
00:12:08,560 --> 00:12:11,120
for you in the future but

333
00:12:11,120 --> 00:12:13,200
it was also the main reason why i was

334
00:12:13,200 --> 00:12:15,519
allowed to join this task force to

335
00:12:15,519 --> 00:12:17,680
battle these uh sent to battle this

336
00:12:17,680 --> 00:12:19,440
sentient a

337
00:12:19,440 --> 00:12:22,399
ai and make sure that we can actually be

338
00:12:22,399 --> 00:12:24,959
in a position to get ahead and change

339
00:12:24,959 --> 00:12:27,360
the history because we are losing the

340
00:12:27,360 --> 00:12:29,440
battle

341
00:12:29,440 --> 00:12:31,920
so in order to continue now we have to

342
00:12:31,920 --> 00:12:33,760
understand

343
00:12:33,760 --> 00:12:35,440
even though the project that you have

344
00:12:35,440 --> 00:12:37,680
just set up and you've just released it

345
00:12:37,680 --> 00:12:39,839
everything is looking great you have to

346
00:12:39,839 --> 00:12:41,680
understand that it's actually a bunch of

347
00:12:41,680 --> 00:12:44,079
really important issues with the way

348
00:12:44,079 --> 00:12:45,680
that this is being done even though

349
00:12:45,680 --> 00:12:48,240
you're state of the art

350
00:12:48,240 --> 00:12:51,200
the scalability of securing this

351
00:12:51,200 --> 00:12:52,720
is actually

352
00:12:52,720 --> 00:12:55,200
very very difficult

353
00:12:55,200 --> 00:12:57,600
you have secured one application

354
00:12:57,600 --> 00:12:59,440
but you know this application is just

355
00:12:59,440 --> 00:13:01,760
one product of the entire organization

356
00:13:01,760 --> 00:13:03,440
that you're working for

357
00:13:03,440 --> 00:13:06,160
and this approach that you have stream

358
00:13:06,160 --> 00:13:08,320
like that you've pioneered

359
00:13:08,320 --> 00:13:10,399
works really well here and you spend a

360
00:13:10,399 --> 00:13:11,600
lot of time

361
00:13:11,600 --> 00:13:14,959
over a year actually securing it however

362
00:13:14,959 --> 00:13:17,360
what about the rest of your portfolio in

363
00:13:17,360 --> 00:13:18,720
the organization

364
00:13:18,720 --> 00:13:20,399
what about other organizations

365
00:13:20,399 --> 00:13:21,360
out there

366
00:13:21,360 --> 00:13:24,000
not everybody has the same uh

367
00:13:24,000 --> 00:13:25,760
access to talent all of these other

368
00:13:25,760 --> 00:13:26,800
things and

369
00:13:26,800 --> 00:13:29,200
budget to actually make that happen

370
00:13:29,200 --> 00:13:31,440
so while it's a great reference it

371
00:13:31,440 --> 00:13:33,440
actually is not allowing you to do this

372
00:13:33,440 --> 00:13:36,000
in a meaningful way and actually help

373
00:13:36,000 --> 00:13:39,120
everybody with this approach

374
00:13:39,120 --> 00:13:40,800
in addition yes you have done a lot of

375
00:13:40,800 --> 00:13:42,639
automation on the tools

376
00:13:42,639 --> 00:13:44,639
but lots of these tools are still very

377
00:13:44,639 --> 00:13:47,040
noisy and do take away a lot of time

378
00:13:47,040 --> 00:13:49,360
from developers to realize what is the

379
00:13:49,360 --> 00:13:52,000
problem here and they do require a lot

380
00:13:52,000 --> 00:13:54,720
of tuning which takes away a lot of time

381
00:13:54,720 --> 00:13:56,480
of making these things actually useful

382
00:13:56,480 --> 00:13:58,880
escape as well

383
00:13:58,880 --> 00:14:00,639
in addition

384
00:14:00,639 --> 00:14:02,959
we actually have uh there's a different

385
00:14:02,959 --> 00:14:04,560
set of tools

386
00:14:04,560 --> 00:14:06,399
even sometimes for the same scanning

387
00:14:06,399 --> 00:14:07,440
techniques

388
00:14:07,440 --> 00:14:11,440
and they're not well integrated together

389
00:14:11,839 --> 00:14:13,760
so you have to actually write a lot of

390
00:14:13,760 --> 00:14:16,079
integration code and glue to make sure

391
00:14:16,079 --> 00:14:18,079
that you can get these different tools

392
00:14:18,079 --> 00:14:20,000
in there that you can actually make sure

393
00:14:20,000 --> 00:14:22,160
that these results are the same

394
00:14:22,160 --> 00:14:24,320
you you have to de-duplicate the the

395
00:14:24,320 --> 00:14:26,800
issues if this is the same kind of tools

396
00:14:26,800 --> 00:14:28,240
with the same focus on certain

397
00:14:28,240 --> 00:14:29,279
techniques

398
00:14:29,279 --> 00:14:30,880
and that's also a big challenge to

399
00:14:30,880 --> 00:14:32,959
actually scale it up

400
00:14:32,959 --> 00:14:36,399
and furthermore correlation

401
00:14:36,399 --> 00:14:38,240
you have been able to have like all of

402
00:14:38,240 --> 00:14:39,440
these different

403
00:14:39,440 --> 00:14:43,040
uh results for applique like for issues

404
00:14:43,040 --> 00:14:46,320
and codes at run time in infrastructure

405
00:14:46,320 --> 00:14:48,480
but it's not very clear how these things

406
00:14:48,480 --> 00:14:50,639
actually go together how can you

407
00:14:50,639 --> 00:14:53,600
actually make sure that an issuing code

408
00:14:53,600 --> 00:14:55,279
correlates with this

409
00:14:55,279 --> 00:14:57,600
report from a bug bounty program

410
00:14:57,600 --> 00:14:59,279
that actually addressed it at runtime

411
00:14:59,279 --> 00:15:00,240
here

412
00:15:00,240 --> 00:15:01,920
and how you get all of these things

413
00:15:01,920 --> 00:15:03,519
together is a big issue because

414
00:15:03,519 --> 00:15:04,959
applications are getting more and more

415
00:15:04,959 --> 00:15:06,639
complicated infrastructure is getting

416
00:15:06,639 --> 00:15:08,480
more and more complicated so you have to

417
00:15:08,480 --> 00:15:10,000
be able to actually

418
00:15:10,000 --> 00:15:12,399
make sense of this in a meaningful way

419
00:15:12,399 --> 00:15:14,720
that allows you to address the risk in a

420
00:15:14,720 --> 00:15:16,399
way that makes sense and you can

421
00:15:16,399 --> 00:15:17,519
actually

422
00:15:17,519 --> 00:15:19,040
do the right things and focus on the

423
00:15:19,040 --> 00:15:19,839
right

424
00:15:19,839 --> 00:15:21,600
fixes

425
00:15:21,600 --> 00:15:24,160
and finally the adoption

426
00:15:24,160 --> 00:15:26,560
so only high performing companies with

427
00:15:26,560 --> 00:15:28,720
the right access to talent can implement

428
00:15:28,720 --> 00:15:30,240
this approach that you've managed that

429
00:15:30,240 --> 00:15:32,240
you've mentioned mentioning and that's a

430
00:15:32,240 --> 00:15:33,759
real issue

431
00:15:33,759 --> 00:15:36,000
so besides these things

432
00:15:36,000 --> 00:15:37,839
a lot of these things that we have been

433
00:15:37,839 --> 00:15:39,680
talking about like

434
00:15:39,680 --> 00:15:41,519
that we have been addressing the last

435
00:15:41,519 --> 00:15:42,959
decades

436
00:15:42,959 --> 00:15:43,839
um

437
00:15:43,839 --> 00:15:45,279
will be something that is really

438
00:15:45,279 --> 00:15:47,120
important to actually get this battle

439
00:15:47,120 --> 00:15:50,160
sorted with the sentient ais so let me

440
00:15:50,160 --> 00:15:53,199
catch you up on what we have achieved in

441
00:15:53,199 --> 00:15:55,040
this 10 years

442
00:15:55,040 --> 00:15:57,839
as an industry and as a soft development

443
00:15:57,839 --> 00:15:59,759
community to make sure that we can do

444
00:15:59,759 --> 00:16:01,279
the best

445
00:16:01,279 --> 00:16:03,680
in terms of securing applications

446
00:16:03,680 --> 00:16:06,639
so first of all in 2031

447
00:16:06,639 --> 00:16:09,600
only typesafe lightweight programming

448
00:16:09,600 --> 00:16:10,800
languages

449
00:16:10,800 --> 00:16:12,399
are being used

450
00:16:12,399 --> 00:16:13,759
which means

451
00:16:13,759 --> 00:16:15,839
languages like golang have really won

452
00:16:15,839 --> 00:16:17,759
because they were able to

453
00:16:17,759 --> 00:16:19,680
you know give you a very good safe

454
00:16:19,680 --> 00:16:22,160
environment they're easier to understand

455
00:16:22,160 --> 00:16:24,320
they're easier to compile and check

456
00:16:24,320 --> 00:16:27,199
against and they're super lightweight

457
00:16:27,199 --> 00:16:29,600
and this is really important because

458
00:16:29,600 --> 00:16:31,120
you want to be able to make sure that

459
00:16:31,120 --> 00:16:32,959
your applications are

460
00:16:32,959 --> 00:16:34,800
very well maintained and it's very hard

461
00:16:34,800 --> 00:16:36,560
to write something that's that's diffic

462
00:16:36,560 --> 00:16:38,399
that's uh not clear from a type

463
00:16:38,399 --> 00:16:41,120
perspective etc etc

464
00:16:41,120 --> 00:16:44,240
another thing that was a huge change

465
00:16:44,240 --> 00:16:45,680
in that we have

466
00:16:45,680 --> 00:16:48,000
influenced over the last decade

467
00:16:48,000 --> 00:16:50,480
is that open source software

468
00:16:50,480 --> 00:16:52,880
is not being used the way it's used

469
00:16:52,880 --> 00:16:54,320
today

470
00:16:54,320 --> 00:16:56,320
you know like when you look at your node

471
00:16:56,320 --> 00:16:58,320
modules and you have like

472
00:16:58,320 --> 00:17:01,040
hundreds of megabytes of libraries to do

473
00:17:01,040 --> 00:17:04,160
certain things this was no longer viable

474
00:17:04,160 --> 00:17:05,199
and um

475
00:17:05,199 --> 00:17:07,039
so what has been done is we have

476
00:17:07,039 --> 00:17:09,599
actually started incorporating open

477
00:17:09,599 --> 00:17:12,559
source software in generally recognized

478
00:17:12,559 --> 00:17:13,760
as safe

479
00:17:13,760 --> 00:17:15,919
lists which means there's like a

480
00:17:15,919 --> 00:17:18,640
hierarchy between open source software

481
00:17:18,640 --> 00:17:21,119
that allows you to select

482
00:17:21,119 --> 00:17:23,199
high quality well-maintained

483
00:17:23,199 --> 00:17:25,039
well-secured

484
00:17:25,039 --> 00:17:26,799
open source software to do certain

485
00:17:26,799 --> 00:17:29,120
things and this was important to reduce

486
00:17:29,120 --> 00:17:30,480
the problem with

487
00:17:30,480 --> 00:17:34,320
supply chain risk etc etc and also quite

488
00:17:34,320 --> 00:17:36,480
important is that a lot of organizations

489
00:17:36,480 --> 00:17:38,799
that use this open source software that

490
00:17:38,799 --> 00:17:41,120
is considered as safe they actually give

491
00:17:41,120 --> 00:17:43,840
their own employees and full-time staff

492
00:17:43,840 --> 00:17:45,760
members to make sure that they actually

493
00:17:45,760 --> 00:17:48,000
can contribute in making this secure so

494
00:17:48,000 --> 00:17:49,520
there's a lot of more work happening

495
00:17:49,520 --> 00:17:50,799
around securi

496
00:17:50,799 --> 00:17:52,400
and source software and funding that

497
00:17:52,400 --> 00:17:54,960
because that's really what a huge attack

498
00:17:54,960 --> 00:17:58,320
vector was was to to secure

499
00:17:58,320 --> 00:18:00,799
in addition serverless and event-driven

500
00:18:00,799 --> 00:18:02,160
architectures

501
00:18:02,160 --> 00:18:04,640
have actually started coming up more and

502
00:18:04,640 --> 00:18:05,520
more

503
00:18:05,520 --> 00:18:07,360
because you don't actually want to

504
00:18:07,360 --> 00:18:09,440
manage the infrastructure host or

505
00:18:09,440 --> 00:18:11,600
network security concerns and you just

506
00:18:11,600 --> 00:18:13,440
want to be focusing on writing functions

507
00:18:13,440 --> 00:18:15,600
as a service and have this event driven

508
00:18:15,600 --> 00:18:17,679
architecture to be in a position where

509
00:18:17,679 --> 00:18:19,760
you can just make these changes you can

510
00:18:19,760 --> 00:18:21,600
just focus on the features and you don't

511
00:18:21,600 --> 00:18:22,880
have to worry about patching the

512
00:18:22,880 --> 00:18:26,160
underlying application

513
00:18:26,160 --> 00:18:29,360
and most importantly we have made huge

514
00:18:29,360 --> 00:18:32,640
strikes in ai pair programming and this

515
00:18:32,640 --> 00:18:34,720
has led to a huge improvement in the

516
00:18:34,720 --> 00:18:38,160
quality and security of code

517
00:18:38,160 --> 00:18:39,919
and sam interjects

518
00:18:39,919 --> 00:18:41,039
hang on

519
00:18:41,039 --> 00:18:43,360
ai pair programming

520
00:18:43,360 --> 00:18:45,840
isn't it like this openai codex project

521
00:18:45,840 --> 00:18:49,440
that it just released in august 2021

522
00:18:49,440 --> 00:18:51,200
but this was like really bad right it

523
00:18:51,200 --> 00:18:53,600
created vinyl and buggy code so how did

524
00:18:53,600 --> 00:18:54,880
that actually happen how did that

525
00:18:54,880 --> 00:18:57,120
actually evolve

526
00:18:57,120 --> 00:18:59,200
and so yes that's exactly like that

527
00:18:59,200 --> 00:19:00,960
remember that in the early days

528
00:19:00,960 --> 00:19:04,640
initially the gpt3 was not able to code

529
00:19:04,640 --> 00:19:05,919
at all

530
00:19:05,919 --> 00:19:08,000
but there have been very quick

531
00:19:08,000 --> 00:19:10,400
changes and improvements where they

532
00:19:10,400 --> 00:19:14,080
started fine tuning this gp2 gpt3 model

533
00:19:14,080 --> 00:19:16,400
based on public github repos

534
00:19:16,400 --> 00:19:18,960
and even within a very very short time

535
00:19:18,960 --> 00:19:21,039
they were able to actually solve 30

536
00:19:21,039 --> 00:19:22,720
percent of these

537
00:19:22,720 --> 00:19:24,480
programming challenges

538
00:19:24,480 --> 00:19:27,440
and you know going from 0 to 30

539
00:19:27,440 --> 00:19:29,200
it was just a matter of time to go to

540
00:19:29,200 --> 00:19:31,280
100 and even

541
00:19:31,280 --> 00:19:33,200
beyond that if you will

542
00:19:33,200 --> 00:19:35,120
so ai

543
00:19:35,120 --> 00:19:37,919
power pair programming and

544
00:19:37,919 --> 00:19:40,559
was just really one of the key things

545
00:19:40,559 --> 00:19:42,400
and yes initially

546
00:19:42,400 --> 00:19:43,919
there was a lot of

547
00:19:43,919 --> 00:19:46,559
ai generated code that was quite bad

548
00:19:46,559 --> 00:19:48,559
because actually there's a really cool

549
00:19:48,559 --> 00:19:50,840
article that i've linked here as well

550
00:19:50,840 --> 00:19:52,640
um

551
00:19:52,640 --> 00:19:53,760
40

552
00:19:53,760 --> 00:19:55,280
of all of these scenarios that were

553
00:19:55,280 --> 00:19:58,240
created by let's say github autopilot in

554
00:19:58,240 --> 00:19:59,440
this case

555
00:19:59,440 --> 00:20:02,720
they had contained security flaws

556
00:20:02,720 --> 00:20:04,640
and this may sound really scary because

557
00:20:04,640 --> 00:20:06,320
if people don't know what they're

558
00:20:06,320 --> 00:20:08,159
looking for and they're not able to

559
00:20:08,159 --> 00:20:09,760
understand what this code is being

560
00:20:09,760 --> 00:20:12,240
generated for it actually is going to be

561
00:20:12,240 --> 00:20:14,960
a big issue and we will have a lot of

562
00:20:14,960 --> 00:20:16,320
insecure code

563
00:20:16,320 --> 00:20:18,159
but funnily enough

564
00:20:18,159 --> 00:20:20,240
this is the same bias that we have seen

565
00:20:20,240 --> 00:20:23,440
with um racial racial um

566
00:20:23,440 --> 00:20:25,840
buyers where you know facial detection

567
00:20:25,840 --> 00:20:28,240
works really well for caucasian people

568
00:20:28,240 --> 00:20:30,640
but not maybe for people of other races

569
00:20:30,640 --> 00:20:32,640
because the data set was mainly focused

570
00:20:32,640 --> 00:20:35,039
on white caucasians the same is true

571
00:20:35,039 --> 00:20:36,240
with um

572
00:20:36,240 --> 00:20:38,240
with open source code and code that is

573
00:20:38,240 --> 00:20:40,640
being ingested by this model so this was

574
00:20:40,640 --> 00:20:42,400
actually something where you can with a

575
00:20:42,400 --> 00:20:44,720
lot of um with a little bit of fine

576
00:20:44,720 --> 00:20:46,960
tuning you can make a huge strides in

577
00:20:46,960 --> 00:20:50,000
eradicating a lot of these

578
00:20:50,000 --> 00:20:52,480
vulnerabilities and actually this will

579
00:20:52,480 --> 00:20:55,440
be a result of eradicating entire

580
00:20:55,440 --> 00:20:58,240
vulnerability classes

581
00:20:58,240 --> 00:21:01,039
so let's take a look at oba's top 10 and

582
00:21:01,039 --> 00:21:02,520
how it's going to look in

583
00:21:02,520 --> 00:21:04,080
2031.

584
00:21:04,080 --> 00:21:05,679
so i've just put in the picture here

585
00:21:05,679 --> 00:21:09,760
where you can see 2017 to 2021 a lot of

586
00:21:09,760 --> 00:21:12,320
changes have happened right and more

587
00:21:12,320 --> 00:21:14,720
importantly the three new areas such as

588
00:21:14,720 --> 00:21:16,960
insecure design software and data

589
00:21:16,960 --> 00:21:18,480
integrity failures

590
00:21:18,480 --> 00:21:20,400
and and others

591
00:21:20,400 --> 00:21:21,280
but

592
00:21:21,280 --> 00:21:24,559
in 2031

593
00:21:24,720 --> 00:21:27,360
there are no more cryptographic failures

594
00:21:27,360 --> 00:21:28,960
there are no more injection level

595
00:21:28,960 --> 00:21:30,400
vulnerabilities security

596
00:21:30,400 --> 00:21:32,799
misconfiguration is gone vulnerable

597
00:21:32,799 --> 00:21:35,360
outdated components no longer an issue

598
00:21:35,360 --> 00:21:37,200
because these things are where actually

599
00:21:37,200 --> 00:21:40,880
i can really help out making sure that

600
00:21:40,880 --> 00:21:43,840
code level issues are being addressed

601
00:21:43,840 --> 00:21:45,760
and secret injection has been around for

602
00:21:45,760 --> 00:21:47,679
way too long for example same like

603
00:21:47,679 --> 00:21:49,679
crosstalk scripting and this something

604
00:21:49,679 --> 00:21:52,000
way ice can be very very strong in

605
00:21:52,000 --> 00:21:53,679
actually reducing these vulnerability

606
00:21:53,679 --> 00:21:56,000
classes in total however when it comes

607
00:21:56,000 --> 00:21:58,559
to designing applications broken access

608
00:21:58,559 --> 00:22:00,960
control institute design

609
00:22:00,960 --> 00:22:02,480
and these kind of high-level business

610
00:22:02,480 --> 00:22:05,520
logic issues are very very important and

611
00:22:05,520 --> 00:22:07,280
they will still be a big issue where

612
00:22:07,280 --> 00:22:09,200
humans have have to work

613
00:22:09,200 --> 00:22:11,919
but yeah great news finally those pesky

614
00:22:11,919 --> 00:22:14,799
secret injections are gone

615
00:22:14,799 --> 00:22:17,200
who would have thought

616
00:22:17,200 --> 00:22:18,960
all right and other things that have

617
00:22:18,960 --> 00:22:21,280
changed now in these last 10 years

618
00:22:21,280 --> 00:22:23,440
auto fixing of the most code level

619
00:22:23,440 --> 00:22:25,120
vulnerabilities like institute

620
00:22:25,120 --> 00:22:27,600
configuration has been has been mastered

621
00:22:27,600 --> 00:22:30,480
but with the help of ai like we said

622
00:22:30,480 --> 00:22:31,840
but get this

623
00:22:31,840 --> 00:22:34,080
there are no more dedicated security

624
00:22:34,080 --> 00:22:35,919
pipelines or actions or whatever you

625
00:22:35,919 --> 00:22:37,120
want to call them

626
00:22:37,120 --> 00:22:38,799
what has happened is that there's full

627
00:22:38,799 --> 00:22:41,200
stack scanning that is triggered by

628
00:22:41,200 --> 00:22:43,679
relevant workflow events so think think

629
00:22:43,679 --> 00:22:46,080
about it this way you don't have to like

630
00:22:46,080 --> 00:22:48,640
every pipeline you're looking at

631
00:22:48,640 --> 00:22:50,159
besides maybe they're using different

632
00:22:50,159 --> 00:22:52,159
tools from different vendors they look

633
00:22:52,159 --> 00:22:54,400
exactly the same your checking code you

634
00:22:54,400 --> 00:22:56,799
do something that looks at the

635
00:22:56,799 --> 00:22:59,440
code level vulnerabilities you deploy to

636
00:22:59,440 --> 00:23:00,559
a

637
00:23:00,559 --> 00:23:02,640
test environment you start your runtime

638
00:23:02,640 --> 00:23:04,720
testing so all of these things are the

639
00:23:04,720 --> 00:23:07,440
same sometimes you use action for sub

640
00:23:07,440 --> 00:23:09,840
things like only secret scanning etc but

641
00:23:09,840 --> 00:23:11,360
actually that doesn't make any sense

642
00:23:11,360 --> 00:23:14,080
because it's a source problem you just

643
00:23:14,080 --> 00:23:15,760
have to integrate it into the right

644
00:23:15,760 --> 00:23:18,400
eventing workflow events such as code is

645
00:23:18,400 --> 00:23:21,280
being pushed a system has been deployed

646
00:23:21,280 --> 00:23:22,960
a new instance in your cloud environment

647
00:23:22,960 --> 00:23:25,520
is coming up and based on this the right

648
00:23:25,520 --> 00:23:27,120
tools will actually be triggered

649
00:23:27,120 --> 00:23:29,120
automatically so you don't have to mess

650
00:23:29,120 --> 00:23:31,120
around with pipelines you can't just

651
00:23:31,120 --> 00:23:33,919
really get started and focus on building

652
00:23:33,919 --> 00:23:37,360
great software and these security tools

653
00:23:37,360 --> 00:23:38,880
which are scanning and give you the

654
00:23:38,880 --> 00:23:40,480
relevant feedback in your workflow

655
00:23:40,480 --> 00:23:42,320
anyways

656
00:23:42,320 --> 00:23:44,320
and finally education is also fully

657
00:23:44,320 --> 00:23:46,320
integrated into the workflow which means

658
00:23:46,320 --> 00:23:47,919
every time the security issues being

659
00:23:47,919 --> 00:23:49,520
identified

660
00:23:49,520 --> 00:23:50,960
there's nurturing campaigns that

661
00:23:50,960 --> 00:23:52,480
actually make sure that developers learn

662
00:23:52,480 --> 00:23:54,000
about these mistakes until you really

663
00:23:54,000 --> 00:23:56,559
get it in a meaningful way

664
00:23:56,559 --> 00:23:58,080
and make sure that these things are

665
00:23:58,080 --> 00:23:59,760
being eradicated

666
00:23:59,760 --> 00:24:02,559
on an ongoing basis

667
00:24:02,559 --> 00:24:05,200
so that sounds really great actually so

668
00:24:05,200 --> 00:24:07,120
what is the problem what do you need me

669
00:24:07,120 --> 00:24:09,600
for to change in 2021 to make this

670
00:24:09,600 --> 00:24:12,320
problem go away

671
00:24:12,320 --> 00:24:13,120
so

672
00:24:13,120 --> 00:24:14,799
the problem is that even though in the

673
00:24:14,799 --> 00:24:17,679
future we have much better solutions now

674
00:24:17,679 --> 00:24:19,840
many organizations small and big still

675
00:24:19,840 --> 00:24:21,919
have a very very hard time adapting

676
00:24:21,919 --> 00:24:24,240
these new technologies

677
00:24:24,240 --> 00:24:27,520
which means automation and isi we still

678
00:24:27,520 --> 00:24:28,880
need a lot of people to help

679
00:24:28,880 --> 00:24:31,200
organizations improve their workflows

680
00:24:31,200 --> 00:24:33,279
and actually actually implement the

681
00:24:33,279 --> 00:24:35,679
change we still need people understand

682
00:24:35,679 --> 00:24:36,960
exactly

683
00:24:36,960 --> 00:24:39,039
what the problem is and how to address

684
00:24:39,039 --> 00:24:40,720
it even though it will be augmented with

685
00:24:40,720 --> 00:24:42,640
automation and ai

686
00:24:42,640 --> 00:24:44,799
so i need you

687
00:24:44,799 --> 00:24:47,840
to help spread the word

688
00:24:48,240 --> 00:24:50,159
we gotta make sure that there's smart

689
00:24:50,159 --> 00:24:52,640
automation and work for integration

690
00:24:52,640 --> 00:24:55,840
we can't be wasting time with pipelines

691
00:24:55,840 --> 00:24:58,000
and you know we gotta have seamless

692
00:24:58,000 --> 00:25:00,559
feedback for developers at the right

693
00:25:00,559 --> 00:25:02,320
time

694
00:25:02,320 --> 00:25:05,120
also auto fixing and repairing of code

695
00:25:05,120 --> 00:25:06,720
this is something that is just going to

696
00:25:06,720 --> 00:25:08,159
be

697
00:25:08,159 --> 00:25:10,000
boosting the productivity of any team

698
00:25:10,000 --> 00:25:12,000
you're on and helping with the shortage

699
00:25:12,000 --> 00:25:14,400
we have for talent already and this will

700
00:25:14,400 --> 00:25:16,400
start with using rules to make sure that

701
00:25:16,400 --> 00:25:17,919
you can actually fix very simple

702
00:25:17,919 --> 00:25:20,799
patterns but then over time the eye will

703
00:25:20,799 --> 00:25:22,799
be able to leverage this so make sure

704
00:25:22,799 --> 00:25:24,240
that you can actually work on these

705
00:25:24,240 --> 00:25:26,400
things and then and then and make sure

706
00:25:26,400 --> 00:25:29,039
that this auto fixing is being really

707
00:25:29,039 --> 00:25:31,200
streamlined and fast tracked in

708
00:25:31,200 --> 00:25:34,799
combination with the smart automation

709
00:25:34,799 --> 00:25:36,720
make sure that generally recognize the

710
00:25:36,720 --> 00:25:38,880
safe list for open source

711
00:25:38,880 --> 00:25:42,480
software projects will become something

712
00:25:42,480 --> 00:25:44,159
that the community as a whole is working

713
00:25:44,159 --> 00:25:45,039
on

714
00:25:45,039 --> 00:25:46,559
because then we're going to have to keep

715
00:25:46,559 --> 00:25:48,559
projects that are backed and secured

716
00:25:48,559 --> 00:25:50,960
back uh backed and secured by companies

717
00:25:50,960 --> 00:25:52,960
similar to all of us flagship projects

718
00:25:52,960 --> 00:25:55,440
the same thing should be available for

719
00:25:55,440 --> 00:25:57,760
open source where you can really focus

720
00:25:57,760 --> 00:26:00,240
on building high quality open source and

721
00:26:00,240 --> 00:26:02,240
have like a pre-filled list of things

722
00:26:02,240 --> 00:26:04,240
that you can actually select with a high

723
00:26:04,240 --> 00:26:05,919
level of confidence that there's no

724
00:26:05,919 --> 00:26:08,159
surprises in there

725
00:26:08,159 --> 00:26:10,720
and finally embrace machine learning and

726
00:26:10,720 --> 00:26:11,760
ai

727
00:26:11,760 --> 00:26:14,640
it will make our jobs easier

728
00:26:14,640 --> 00:26:16,960
but we still need a lot more people and

729
00:26:16,960 --> 00:26:19,440
talent to help secure our world and this

730
00:26:19,440 --> 00:26:20,880
is like i said to make sure that they

731
00:26:20,880 --> 00:26:22,480
understand applications they understand

732
00:26:22,480 --> 00:26:24,640
security understand what the product

733
00:26:24,640 --> 00:26:27,600
actually does and make sure that ai and

734
00:26:27,600 --> 00:26:29,600
automation is being used in a meaningful

735
00:26:29,600 --> 00:26:31,760
way so that we can focus on the high

736
00:26:31,760 --> 00:26:33,200
impact issues

737
00:26:33,200 --> 00:26:35,039
that actually are fun to work on and

738
00:26:35,039 --> 00:26:37,039
we're not wasting time looking at yet

739
00:26:37,039 --> 00:26:39,279
another cross-site scripting

740
00:26:39,279 --> 00:26:40,640
and with that

741
00:26:40,640 --> 00:26:42,400
i leave you back to the future to the

742
00:26:42,400 --> 00:26:45,279
present in 2020 2021

743
00:26:45,279 --> 00:26:47,760
and i wish you all the best

744
00:26:47,760 --> 00:26:50,320
anyways thanks this was my presentation

745
00:26:50,320 --> 00:26:52,240
i hope you enjoyed it it was a bit of an

746
00:26:52,240 --> 00:26:53,919
experiment like i said

747
00:26:53,919 --> 00:26:56,240
so if you have any questions ask me on

748
00:26:56,240 --> 00:26:58,400
slack or shoot me an email at stefan at

749
00:26:58,400 --> 00:27:03,000
guardrails io thank you very much

