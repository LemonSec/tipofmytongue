1
00:00:01,410 --> 00:00:06,030
[Music]

2
00:00:08,240 --> 00:00:10,960
um and thanks for owas for

3
00:00:10,960 --> 00:00:13,519
great conference i i've attended some of

4
00:00:13,519 --> 00:00:14,960
the sessions i had to

5
00:00:14,960 --> 00:00:17,680
actually had to pull a hermione style

6
00:00:17,680 --> 00:00:19,520
magic to be on two sessions at the same

7
00:00:19,520 --> 00:00:21,600
time which was interesting

8
00:00:21,600 --> 00:00:24,240
i included a link i i did a snip link

9
00:00:24,240 --> 00:00:26,640
for the slack channel in case you are

10
00:00:26,640 --> 00:00:29,199
not aware of it and made it so it will

11
00:00:29,199 --> 00:00:30,880
be easy for people to write it down and

12
00:00:30,880 --> 00:00:33,520
join this is a slack channel for the q a

13
00:00:33,520 --> 00:00:35,440
you can actually use it for the previous

14
00:00:35,440 --> 00:00:37,760
session also for now

15
00:00:37,760 --> 00:00:40,800
and i'll try to jump right to the topic

16
00:00:40,800 --> 00:00:42,000
so

17
00:00:42,000 --> 00:00:44,079
before we go into the autocorrelation

18
00:00:44,079 --> 00:00:46,559
project i want to talk about

19
00:00:46,559 --> 00:00:49,920
is why did apps can add ios

20
00:00:49,920 --> 00:00:53,120
so appscan had dynamic analysis and

21
00:00:53,120 --> 00:00:55,520
static analysis for many many years now

22
00:00:55,520 --> 00:00:57,520
and we do strongly believe that there is

23
00:00:57,520 --> 00:00:59,920
room for both of them static analysis

24
00:00:59,920 --> 00:01:02,399
has some use cases that it has better

25
00:01:02,399 --> 00:01:04,799
much better results and dynamic analysis

26
00:01:04,799 --> 00:01:06,000
the same

27
00:01:06,000 --> 00:01:08,720
but each one of them have the weaknesses

28
00:01:08,720 --> 00:01:09,680
and

29
00:01:09,680 --> 00:01:11,439
we we knew that we want to keep those

30
00:01:11,439 --> 00:01:12,400
two technologies

31
00:01:12,400 --> 00:01:14,960
it wasn't about adding a technology to

32
00:01:14,960 --> 00:01:17,360
replace them

33
00:01:17,360 --> 00:01:19,439
one of the values the applications

34
00:01:19,439 --> 00:01:21,759
security testing suites have that those

35
00:01:21,759 --> 00:01:23,759
vendors is that they give you a single

36
00:01:23,759 --> 00:01:25,759
pane of glass to see all the results and

37
00:01:25,759 --> 00:01:28,000
to some degree that single pane of glass

38
00:01:28,000 --> 00:01:30,320
allows you to do correlation i can see

39
00:01:30,320 --> 00:01:32,000
this this cross-site scripting coming

40
00:01:32,000 --> 00:01:34,479
from test on this page i see it coming

41
00:01:34,479 --> 00:01:36,640
from sas i need to do some work but

42
00:01:36,640 --> 00:01:39,920
potentially i can correlate those issues

43
00:01:39,920 --> 00:01:41,920
now as i mentioned we wanted to know if

44
00:01:41,920 --> 00:01:44,479
we want to add i asked so we asked

45
00:01:44,479 --> 00:01:46,159
ourselves two questions the first

46
00:01:46,159 --> 00:01:47,520
question is

47
00:01:47,520 --> 00:01:50,159
can we give our customers and and future

48
00:01:50,159 --> 00:01:53,200
customers more by adding is versus

49
00:01:53,200 --> 00:01:55,520
investing even more on das and sas

50
00:01:55,520 --> 00:01:56,479
because

51
00:01:56,479 --> 00:01:58,079
as much as we believe we have strong

52
00:01:58,079 --> 00:02:00,640
capabilities we can always do better

53
00:02:00,640 --> 00:02:03,119
and the second question if we go and add

54
00:02:03,119 --> 00:02:04,240
i asked

55
00:02:04,240 --> 00:02:06,479
what can we do that for our customers

56
00:02:06,479 --> 00:02:08,560
that other vendors can't there are very

57
00:02:08,560 --> 00:02:10,080
strong vendors in the market like

58
00:02:10,080 --> 00:02:12,480
contrast like synopsis that have is

59
00:02:12,480 --> 00:02:13,520
already

60
00:02:13,520 --> 00:02:15,840
what can we do better so we thought a

61
00:02:15,840 --> 00:02:18,080
lot about it and we felt that

62
00:02:18,080 --> 00:02:20,239
because of the knowledge that we have

63
00:02:20,239 --> 00:02:21,920
the decades of knowledge that we have on

64
00:02:21,920 --> 00:02:24,800
dynamic analysis and static analysis and

65
00:02:24,800 --> 00:02:28,560
our experience from 2011 when we added

66
00:02:28,560 --> 00:02:31,680
our own ios active ios at the time which

67
00:02:31,680 --> 00:02:34,239
didn't go that well we felt that we can

68
00:02:34,239 --> 00:02:36,400
add more we know that

69
00:02:36,400 --> 00:02:40,640
we can use those technologies to help us

70
00:02:41,040 --> 00:02:41,840
so

71
00:02:41,840 --> 00:02:44,000
in order to to do that we started with

72
00:02:44,000 --> 00:02:45,440
the isla this session is not going to be

73
00:02:45,440 --> 00:02:47,040
about the is solution it's going to be

74
00:02:47,040 --> 00:02:48,480
about the correlation project the

75
00:02:48,480 --> 00:02:50,879
correlation project came from an idea

76
00:02:50,879 --> 00:02:54,080
that ron had we added is we added

77
00:02:54,080 --> 00:02:56,319
support for java and.net and ojs and

78
00:02:56,319 --> 00:02:58,560
before adding the next language

79
00:02:58,560 --> 00:03:00,480
ron told me i believe that we can do so

80
00:03:00,480 --> 00:03:01,760
much more

81
00:03:01,760 --> 00:03:03,840
by using correlation and we can give so

82
00:03:03,840 --> 00:03:06,239
much more to our customers so we started

83
00:03:06,239 --> 00:03:08,480
this research and this is how we did

84
00:03:08,480 --> 00:03:10,720
this is this was the intention

85
00:03:10,720 --> 00:03:12,400
we didn't want to bring i asked again to

86
00:03:12,400 --> 00:03:14,720
replace stas or sas we believe that each

87
00:03:14,720 --> 00:03:16,400
of them have strengths and each of them

88
00:03:16,400 --> 00:03:19,200
has weaknesses so is for example passive

89
00:03:19,200 --> 00:03:22,239
ios is relying on something else to

90
00:03:22,239 --> 00:03:24,000
integrate with the application something

91
00:03:24,000 --> 00:03:26,239
to crawl it to execute whether it's

92
00:03:26,239 --> 00:03:28,640
manual or automatic but you are

93
00:03:28,640 --> 00:03:30,640
dependent on having for example a good

94
00:03:30,640 --> 00:03:33,599
functional testing is can be amazing for

95
00:03:33,599 --> 00:03:35,360
devsecops if you have functional testing

96
00:03:35,360 --> 00:03:38,080
because it offers zero time analysis

97
00:03:38,080 --> 00:03:40,799
static analysis has the best coverage

98
00:03:40,799 --> 00:03:41,920
probably

99
00:03:41,920 --> 00:03:44,560
but it's known to be noisy and require

100
00:03:44,560 --> 00:03:46,879
developers as much as we apply machine

101
00:03:46,879 --> 00:03:48,239
learnings and and

102
00:03:48,239 --> 00:03:50,799
different different techniques it

103
00:03:50,799 --> 00:03:52,879
requires developers or security experts

104
00:03:52,879 --> 00:03:54,879
to trash hundreds or thousands or

105
00:03:54,879 --> 00:03:56,560
sometimes even tens and hundreds of

106
00:03:56,560 --> 00:03:58,799
thousands findings in order to find what

107
00:03:58,799 --> 00:04:01,760
to fix and dust

108
00:04:01,760 --> 00:04:04,080
has the strength of having again lake

109
00:04:04,080 --> 00:04:07,280
ios very high confidential

110
00:04:07,280 --> 00:04:08,799
confidentiality

111
00:04:08,799 --> 00:04:10,959
high

112
00:04:10,959 --> 00:04:12,799
accuracy levels

113
00:04:12,799 --> 00:04:15,599
but the tasks won't give the developer

114
00:04:15,599 --> 00:04:17,120
what they need in order to fix the issue

115
00:04:17,120 --> 00:04:18,720
it will give them reproducible scenario

116
00:04:18,720 --> 00:04:20,478
it will give them high confidence in

117
00:04:20,478 --> 00:04:23,759
that but not how to fix or where to fix

118
00:04:23,759 --> 00:04:26,240
so we wanted to look at this as how we

119
00:04:26,240 --> 00:04:29,040
how can we add is to the mix

120
00:04:29,040 --> 00:04:31,840
and benefit from it on top of the others

121
00:04:31,840 --> 00:04:34,320
to how to use it to strengthen

122
00:04:34,320 --> 00:04:35,600
the weakness

123
00:04:35,600 --> 00:04:37,520
to enhance the strength of each of the

124
00:04:37,520 --> 00:04:40,240
technologies and also to mitigate the

125
00:04:40,240 --> 00:04:42,880
weaknesses from them

126
00:04:42,880 --> 00:04:44,800
adding i asked wasn't supposed to

127
00:04:44,800 --> 00:04:47,120
replace i'll mention that too

128
00:04:47,120 --> 00:04:48,560
several times it's not supposed to

129
00:04:48,560 --> 00:04:50,400
replace anything here it's just supposed

130
00:04:50,400 --> 00:04:52,240
to enhance and to get the really the

131
00:04:52,240 --> 00:04:55,520
best of all workflows here

132
00:04:55,520 --> 00:04:58,639
in order to do that we took an easy way

133
00:04:58,639 --> 00:05:00,880
to start and we look at the os benchmark

134
00:05:00,880 --> 00:05:02,960
i'm sure that most people here know os

135
00:05:02,960 --> 00:05:06,000
benchmark it's a very good very strong

136
00:05:06,000 --> 00:05:08,400
project that oas runs in order to do a

137
00:05:08,400 --> 00:05:10,000
bake off between different technologies

138
00:05:10,000 --> 00:05:11,680
between different tools

139
00:05:11,680 --> 00:05:15,759
it all it has over 1700 vulnerabilities

140
00:05:15,759 --> 00:05:18,960
in it in that vulnerable application

141
00:05:18,960 --> 00:05:21,360
and it comes with a true set and it

142
00:05:21,360 --> 00:05:23,680
comes with scripts to run the

143
00:05:23,680 --> 00:05:25,520
application so

144
00:05:25,520 --> 00:05:27,759
in order as i mentioned in order to test

145
00:05:27,759 --> 00:05:31,360
to use um passive is like we have today

146
00:05:31,360 --> 00:05:33,120
you need something else to interact with

147
00:05:33,120 --> 00:05:34,800
the application so the project comes

148
00:05:34,800 --> 00:05:36,880
with scripts that execute all parts of

149
00:05:36,880 --> 00:05:39,919
the code all parts that will um result

150
00:05:39,919 --> 00:05:42,240
in vulnerabilities we'll find them

151
00:05:42,240 --> 00:05:44,160
the application contains that reset we

152
00:05:44,160 --> 00:05:46,800
we know exactly what are the 1700 and

153
00:05:46,800 --> 00:05:48,320
something vulnerability so it makes it

154
00:05:48,320 --> 00:05:50,320
easier for us to

155
00:05:50,320 --> 00:05:53,199
be to base the correlation on it

156
00:05:53,199 --> 00:05:55,199
and we know that with our solution we

157
00:05:55,199 --> 00:05:57,919
get a 100 score on it we have we find

158
00:05:57,919 --> 00:05:59,199
all the vulnerabilities and we don't

159
00:05:59,199 --> 00:06:01,840
report any false positive

160
00:06:01,840 --> 00:06:02,960
before

161
00:06:02,960 --> 00:06:05,199
we went into that we also acknowledge

162
00:06:05,199 --> 00:06:07,600
the fact that os benchmark is a backup

163
00:06:07,600 --> 00:06:09,199
application it's a testing application

164
00:06:09,199 --> 00:06:11,600
and it's meant to test technologies and

165
00:06:11,600 --> 00:06:13,199
it meant to show the weaknesses and

166
00:06:13,199 --> 00:06:15,520
strengths of each technologies so

167
00:06:15,520 --> 00:06:17,919
it's not easy for every ios solution to

168
00:06:17,919 --> 00:06:20,720
get to 100 and some do but it's

169
00:06:20,720 --> 00:06:22,319
definitely

170
00:06:22,319 --> 00:06:24,639
hard or even impossible for static

171
00:06:24,639 --> 00:06:26,800
analysis or dynamic analysis tools to

172
00:06:26,800 --> 00:06:30,639
get to that even when you apply very

173
00:06:30,639 --> 00:06:33,360
advanced configurations to the tool

174
00:06:33,360 --> 00:06:36,000
our goal was to bridge that gap to

175
00:06:36,000 --> 00:06:37,759
understand that sas won't find

176
00:06:37,759 --> 00:06:39,759
everything the gas won't find anything

177
00:06:39,759 --> 00:06:40,960
everything and there will be false

178
00:06:40,960 --> 00:06:42,880
positives and false negatives and how

179
00:06:42,880 --> 00:06:45,039
with adding is we will be able to get to

180
00:06:45,039 --> 00:06:46,479
that

181
00:06:46,479 --> 00:06:47,919
so the steps and i will explain the

182
00:06:47,919 --> 00:06:50,160
process and then ron will take over and

183
00:06:50,160 --> 00:06:52,319
talk about the results the step that we

184
00:06:52,319 --> 00:06:53,280
took

185
00:06:53,280 --> 00:06:56,639
we did the um we tested it with ios

186
00:06:56,639 --> 00:06:59,599
based on the script so we had our agent

187
00:06:59,599 --> 00:07:01,280
monitoring the application and we run

188
00:07:01,280 --> 00:07:02,800
all the scripts and we put that on the

189
00:07:02,800 --> 00:07:03,840
side

190
00:07:03,840 --> 00:07:06,080
and then we ran a static analysis scan

191
00:07:06,080 --> 00:07:08,639
on the code completely unrelated and we

192
00:07:08,639 --> 00:07:11,120
ran a dynamic analysis again without the

193
00:07:11,120 --> 00:07:13,440
is agent so at the different time we

194
00:07:13,440 --> 00:07:16,319
didn't want the das to benefit from any

195
00:07:16,319 --> 00:07:19,039
insight that is can share with it and we

196
00:07:19,039 --> 00:07:21,280
didn't want ios to benefit from any

197
00:07:21,280 --> 00:07:24,000
crawling that the das did we completely

198
00:07:24,000 --> 00:07:26,960
separated them intentionally

199
00:07:26,960 --> 00:07:28,960
the next thing that we did

200
00:07:28,960 --> 00:07:31,599
we ran all those scans with the basic

201
00:07:31,599 --> 00:07:33,199
and naive configuration and it is

202
00:07:33,199 --> 00:07:34,639
important to mention that because you

203
00:07:34,639 --> 00:07:36,400
will see later in the results that das

204
00:07:36,400 --> 00:07:39,039
and sas didn't score that high we could

205
00:07:39,039 --> 00:07:41,120
score higher but we wanted to test the

206
00:07:41,120 --> 00:07:43,440
basic and naive configuration

207
00:07:43,440 --> 00:07:46,639
in order to measure what is can add

208
00:07:46,639 --> 00:07:47,840
to those

209
00:07:47,840 --> 00:07:49,280
technologies when you don't configure

210
00:07:49,280 --> 00:07:51,039
them to the extreme

211
00:07:51,039 --> 00:07:52,879
the goal was to overcome those false

212
00:07:52,879 --> 00:07:55,840
positives that we had with the different

213
00:07:55,840 --> 00:07:57,039
technologies

214
00:07:57,039 --> 00:07:59,520
and to see if the auto correlation

215
00:07:59,520 --> 00:08:01,759
can replace the advanced capabilities

216
00:08:01,759 --> 00:08:03,199
the advanced configurations that we

217
00:08:03,199 --> 00:08:04,800
could use with the tools

218
00:08:04,800 --> 00:08:08,560
again default configuration only

219
00:08:08,560 --> 00:08:09,840
next step

220
00:08:09,840 --> 00:08:11,759
we saw that with ios we can either

221
00:08:11,759 --> 00:08:14,720
indeed identify all the issues with zero

222
00:08:14,720 --> 00:08:16,160
false positives

223
00:08:16,160 --> 00:08:18,160
running static analysis with a default

224
00:08:18,160 --> 00:08:21,840
configuration we found over 5 000 issues

225
00:08:21,840 --> 00:08:23,599
which is three times more than what we

226
00:08:23,599 --> 00:08:26,240
found with is we didn't go and validate

227
00:08:26,240 --> 00:08:28,160
any of them at this point

228
00:08:28,160 --> 00:08:30,960
running desk and we found a little bit

229
00:08:30,960 --> 00:08:33,679
over 600 600 issues

230
00:08:33,679 --> 00:08:36,320
so again i i want to state it again

231
00:08:36,320 --> 00:08:37,919
those are default configurations some

232
00:08:37,919 --> 00:08:39,440
other tools can get better results and

233
00:08:39,440 --> 00:08:40,719
they will tell you that we can get

234
00:08:40,719 --> 00:08:42,399
better results also with appscan but

235
00:08:42,399 --> 00:08:44,959
that wasn't the intention

236
00:08:44,959 --> 00:08:48,000
after explaining all the process run i'm

237
00:08:48,000 --> 00:08:50,560
passing it to you

238
00:08:50,560 --> 00:08:54,160
yeah i'm trying to request remote

239
00:08:54,160 --> 00:08:56,800
let me know when we see the

240
00:08:56,800 --> 00:08:58,800
yeah i suggest you give up i'll run the

241
00:08:58,800 --> 00:09:01,040
slides

242
00:09:01,120 --> 00:09:03,279
okay so after we cover the process we

243
00:09:03,279 --> 00:09:04,959
can start talking about the result that

244
00:09:04,959 --> 00:09:06,480
we saw

245
00:09:06,480 --> 00:09:08,720
so after running the correlation

246
00:09:08,720 --> 00:09:11,839
algorithm on ios and sus we were able to

247
00:09:11,839 --> 00:09:12,880
actually

248
00:09:12,880 --> 00:09:15,519
uh match 21

249
00:09:15,519 --> 00:09:19,680
of the sas tissues with biased issues

250
00:09:19,680 --> 00:09:20,839
so

251
00:09:20,839 --> 00:09:24,640
um as ayden mentioned before we knew

252
00:09:24,640 --> 00:09:27,200
coming in into those results that would

253
00:09:27,200 --> 00:09:29,360
get a lot of noise from such we see a

254
00:09:29,360 --> 00:09:30,240
lot of

255
00:09:30,240 --> 00:09:33,440
um issues being triggered and we wanted

256
00:09:33,440 --> 00:09:35,600
to bridge that gap and allow the

257
00:09:35,600 --> 00:09:38,000
customer or allow customers to actually

258
00:09:38,000 --> 00:09:38,880
have

259
00:09:38,880 --> 00:09:42,720
um a data-driven way to prioritize the

260
00:09:42,720 --> 00:09:44,640
remediation process

261
00:09:44,640 --> 00:09:45,519
so

262
00:09:45,519 --> 00:09:48,240
after taking a look at those 21

263
00:09:48,240 --> 00:09:51,360
we're really happy to see that those 21

264
00:09:51,360 --> 00:09:53,519
are actually 66

265
00:09:53,519 --> 00:09:55,120
out of the two set

266
00:09:55,120 --> 00:09:56,000
so

267
00:09:56,000 --> 00:09:56,880
i'm

268
00:09:56,880 --> 00:09:58,880
really comfortable saying that uh

269
00:09:58,880 --> 00:10:02,399
prioritizing those issues first will be

270
00:10:02,399 --> 00:10:05,680
very data-driven and will create great

271
00:10:05,680 --> 00:10:07,040
results

272
00:10:07,040 --> 00:10:09,120
now on top of that

273
00:10:09,120 --> 00:10:12,480
um the correlation actually gave just a

274
00:10:12,480 --> 00:10:14,399
little bit of a power up

275
00:10:14,399 --> 00:10:17,920
so up until now when you resolve a sas

276
00:10:17,920 --> 00:10:18,880
tissue

277
00:10:18,880 --> 00:10:22,399
you need to trust your developers and

278
00:10:22,399 --> 00:10:24,959
security chain champions whoever is

279
00:10:24,959 --> 00:10:27,519
actually approving the fix that the fix

280
00:10:27,519 --> 00:10:28,560
is valid

281
00:10:28,560 --> 00:10:29,839
after

282
00:10:29,839 --> 00:10:32,079
marking this

283
00:10:32,079 --> 00:10:34,399
vulnerability is fixed there is nothing

284
00:10:34,399 --> 00:10:37,760
that sas can do in order to to locate or

285
00:10:37,760 --> 00:10:39,440
identify it again

286
00:10:39,440 --> 00:10:41,200
but when you have a correlation between

287
00:10:41,200 --> 00:10:44,480
a thrust issue to an highest issue

288
00:10:44,480 --> 00:10:46,800
all that you need to do is apply your

289
00:10:46,800 --> 00:10:47,680
fix

290
00:10:47,680 --> 00:10:50,800
initiate the same interaction and see if

291
00:10:50,800 --> 00:10:53,200
iest is triggered again over the same

292
00:10:53,200 --> 00:10:54,560
vulnerability

293
00:10:54,560 --> 00:10:57,839
so not only you have

294
00:10:57,839 --> 00:10:59,360
a much

295
00:10:59,360 --> 00:11:02,320
better way to prioritize your efforts

296
00:11:02,320 --> 00:11:04,560
you also have another capability that

297
00:11:04,560 --> 00:11:08,160
wasn't available before that

298
00:11:13,279 --> 00:11:15,760
for correlating ios and dust we were

299
00:11:15,760 --> 00:11:19,040
actually able to match almost every dust

300
00:11:19,040 --> 00:11:21,600
issue with ist issues

301
00:11:21,600 --> 00:11:23,120
so again

302
00:11:23,120 --> 00:11:23,839
as

303
00:11:23,839 --> 00:11:25,680
ayton mentioned before

304
00:11:25,680 --> 00:11:26,720
when

305
00:11:26,720 --> 00:11:29,440
a developer is using dust to resolve an

306
00:11:29,440 --> 00:11:30,320
issue

307
00:11:30,320 --> 00:11:34,079
uh all he have in order to to resolve or

308
00:11:34,079 --> 00:11:36,560
immediately this this vulnerability is

309
00:11:36,560 --> 00:11:37,680
the

310
00:11:37,680 --> 00:11:40,240
request and the response or the lack of

311
00:11:40,240 --> 00:11:43,200
response that he gets from the dust

312
00:11:43,200 --> 00:11:44,640
from the dust bowl

313
00:11:44,640 --> 00:11:47,920
now adding everything that you have from

314
00:11:47,920 --> 00:11:49,200
ios

315
00:11:49,200 --> 00:11:50,800
actually provides

316
00:11:50,800 --> 00:11:53,120
everything that the developer could ever

317
00:11:53,120 --> 00:11:54,160
wish for

318
00:11:54,160 --> 00:11:56,880
when resolving this issue you get all

319
00:11:56,880 --> 00:11:59,200
the information from source to sync you

320
00:11:59,200 --> 00:12:01,680
get to see all the parameters the call

321
00:12:01,680 --> 00:12:03,760
stack is available to you if you're

322
00:12:03,760 --> 00:12:06,000
using our solution you get an expert

323
00:12:06,000 --> 00:12:07,200
example

324
00:12:07,200 --> 00:12:09,600
uh so essentially everything that you

325
00:12:09,600 --> 00:12:11,680
need to have in order to remediate the

326
00:12:11,680 --> 00:12:14,320
issue is now available to you

327
00:12:14,320 --> 00:12:16,000
and that's um

328
00:12:16,000 --> 00:12:17,680
something that we heard a lot i mean

329
00:12:17,680 --> 00:12:20,240
that that was the original intention

330
00:12:20,240 --> 00:12:24,120
going into that project

331
00:12:24,160 --> 00:12:26,160
i just want to mention something before

332
00:12:26,160 --> 00:12:28,240
anyone get the wrong impression

333
00:12:28,240 --> 00:12:30,160
we are not suggesting that you don't

334
00:12:30,160 --> 00:12:32,480
need das here because almost everything

335
00:12:32,480 --> 00:12:34,079
that was found with das was found with

336
00:12:34,079 --> 00:12:35,839
is we acknowledge the fact that we're

337
00:12:35,839 --> 00:12:36,800
using

338
00:12:36,800 --> 00:12:38,720
an application that

339
00:12:38,720 --> 00:12:43,440
we get a 100 score with ios and we don't

340
00:12:43,440 --> 00:12:45,360
modestly we don't expect to have a

341
00:12:45,360 --> 00:12:47,519
hundred percent of accuracy in real life

342
00:12:47,519 --> 00:12:50,560
applications so the diagram is great for

343
00:12:50,560 --> 00:12:52,639
for here for the chart but remember this

344
00:12:52,639 --> 00:12:54,399
is on the os benchmark

345
00:12:54,399 --> 00:12:55,200
we

346
00:12:55,200 --> 00:12:57,600
we are sure that the diagrams well we

347
00:12:57,600 --> 00:12:59,360
know that the diagrams look different on

348
00:12:59,360 --> 00:13:01,600
other applications

349
00:13:01,600 --> 00:13:04,320
yeah absolutely

350
00:13:04,320 --> 00:13:08,240
so um after going about is dust and i

351
00:13:08,240 --> 00:13:10,800
assassed we've taken a deep dive into is

352
00:13:10,800 --> 00:13:12,560
dust and sas

353
00:13:12,560 --> 00:13:13,680
and

354
00:13:13,680 --> 00:13:16,240
obviously everything that i said up

355
00:13:16,240 --> 00:13:18,399
until now is still applicable

356
00:13:18,399 --> 00:13:21,600
and honestly uh if you have correlation

357
00:13:21,600 --> 00:13:24,480
on on your project i would rather should

358
00:13:24,480 --> 00:13:26,800
suggest that you will start with the is

359
00:13:26,800 --> 00:13:29,120
dust and sass correlation

360
00:13:29,120 --> 00:13:31,600
but something that was really

361
00:13:31,600 --> 00:13:32,560
um

362
00:13:32,560 --> 00:13:35,040
clear or really like

363
00:13:35,040 --> 00:13:37,920
popping out from the report when looking

364
00:13:37,920 --> 00:13:39,920
at this group is

365
00:13:39,920 --> 00:13:41,399
something that was a little bit

366
00:13:41,399 --> 00:13:44,079
counterintuitive to me at least coming

367
00:13:44,079 --> 00:13:45,839
into this project

368
00:13:45,839 --> 00:13:48,959
so when i thought of a complicated or a

369
00:13:48,959 --> 00:13:50,959
robust

370
00:13:50,959 --> 00:13:53,040
correlation i thought that the ratio

371
00:13:53,040 --> 00:13:55,440
between ios stars and dust will be at

372
00:13:55,440 --> 00:13:56,880
most one

373
00:13:56,880 --> 00:13:59,279
so the biggest correlation group will

374
00:13:59,279 --> 00:14:01,600
have a single ios a single dust on a

375
00:14:01,600 --> 00:14:03,760
single sas issue

376
00:14:03,760 --> 00:14:06,720
and after taking a look at this group we

377
00:14:06,720 --> 00:14:07,839
thought that

378
00:14:07,839 --> 00:14:10,320
this is rarely the case and this is

379
00:14:10,320 --> 00:14:11,680
really uncommon

380
00:14:11,680 --> 00:14:14,079
we saw a lot of groups being correlated

381
00:14:14,079 --> 00:14:16,800
with even

382
00:14:19,120 --> 00:14:22,160
multiple number of uh dust issues

383
00:14:22,160 --> 00:14:24,480
multiple number of sus tissues

384
00:14:24,480 --> 00:14:25,519
and

385
00:14:25,519 --> 00:14:28,000
i'm going to explain a little bit how it

386
00:14:28,000 --> 00:14:30,560
looks like and and after doing some

387
00:14:30,560 --> 00:14:31,680
research

388
00:14:31,680 --> 00:14:35,040
um it was actually kind of very obvious

389
00:14:35,040 --> 00:14:36,560
why it happens

390
00:14:36,560 --> 00:14:38,399
so let's say that i have a simple

391
00:14:38,399 --> 00:14:40,320
application and this simple application

392
00:14:40,320 --> 00:14:43,120
contains two rest apis those restful

393
00:14:43,120 --> 00:14:47,040
apis are exposed to the user uh outside

394
00:14:47,040 --> 00:14:49,279
of the using the application

395
00:14:49,279 --> 00:14:51,440
and each of those have a different

396
00:14:51,440 --> 00:14:55,040
propagator data flow before they take

397
00:14:55,040 --> 00:14:59,760
the user input and uh use it in in a an

398
00:14:59,760 --> 00:15:02,320
sql query but those

399
00:15:02,320 --> 00:15:04,560
two different and two separate restful

400
00:15:04,560 --> 00:15:08,000
apis use the same sanitizer and let's

401
00:15:08,000 --> 00:15:10,839
just say that that sanitizer in this

402
00:15:10,839 --> 00:15:12,320
example uh

403
00:15:12,320 --> 00:15:14,800
obviously hoping that there is a

404
00:15:14,800 --> 00:15:17,040
sanitization process along the way which

405
00:15:17,040 --> 00:15:17,920
is

406
00:15:17,920 --> 00:15:19,920
also not something that we should take

407
00:15:19,920 --> 00:15:21,440
from granite

408
00:15:21,440 --> 00:15:23,519
um

409
00:15:23,519 --> 00:15:26,880
let's say that this specific sanitizer

410
00:15:26,880 --> 00:15:30,079
isn't very effective for sql injections

411
00:15:30,079 --> 00:15:32,800
from dust point of view

412
00:15:32,800 --> 00:15:36,240
dust will have to report two separate

413
00:15:36,240 --> 00:15:40,480
sql injections one for each restful api

414
00:15:40,480 --> 00:15:43,279
and again we are taking a look at this

415
00:15:43,279 --> 00:15:45,279
application but

416
00:15:45,279 --> 00:15:48,240
this flow can be much more complicated

417
00:15:48,240 --> 00:15:49,120
or

418
00:15:49,120 --> 00:15:51,759
robust or even simplified because apis

419
00:15:51,759 --> 00:15:53,680
can use each other

420
00:15:53,680 --> 00:15:56,320
what we have when we pull the curtain

421
00:15:56,320 --> 00:15:59,279
and let ios take a look behind

422
00:15:59,279 --> 00:16:00,720
the

423
00:16:00,720 --> 00:16:02,240
the servo side

424
00:16:02,240 --> 00:16:04,880
we can locate those weak links

425
00:16:04,880 --> 00:16:06,720
and actually correlate

426
00:16:06,720 --> 00:16:09,680
separate sql injections that are caused

427
00:16:09,680 --> 00:16:12,000
by the same weak link in the in the

428
00:16:12,000 --> 00:16:14,320
development flow

429
00:16:14,320 --> 00:16:18,160
now um something that i really need to

430
00:16:18,160 --> 00:16:19,920
to emphasize

431
00:16:19,920 --> 00:16:20,800
again

432
00:16:20,800 --> 00:16:23,360
we are working in this specific uh

433
00:16:23,360 --> 00:16:25,839
example on a benchmark application the

434
00:16:25,839 --> 00:16:27,680
pendulum application tends to be

435
00:16:27,680 --> 00:16:29,759
developed in a certain way

436
00:16:29,759 --> 00:16:31,680
but when we are testing those

437
00:16:31,680 --> 00:16:33,440
capabilities on

438
00:16:33,440 --> 00:16:36,079
actual real application

439
00:16:36,079 --> 00:16:38,320
we can actually see this kind of

440
00:16:38,320 --> 00:16:41,680
behavior more than often and that's

441
00:16:41,680 --> 00:16:43,920
kind of like self-explanatory coder

442
00:16:43,920 --> 00:16:46,959
usage is one of the cornerstone of best

443
00:16:46,959 --> 00:16:50,320
practices in software development so

444
00:16:50,320 --> 00:16:52,480
using the same sanitizer over and over

445
00:16:52,480 --> 00:16:55,519
again is a best practice as long as that

446
00:16:55,519 --> 00:16:58,480
sanitizer works for you

447
00:16:58,480 --> 00:17:01,120
now on the light here we have an example

448
00:17:01,120 --> 00:17:03,440
from a different project we run the same

449
00:17:03,440 --> 00:17:05,760
correlation project on the

450
00:17:05,760 --> 00:17:07,520
web goat application

451
00:17:07,520 --> 00:17:10,319
and we can see a correlation that we're

452
00:17:10,319 --> 00:17:12,559
able to do on eight different

453
00:17:12,559 --> 00:17:14,240
vulnerabilities

454
00:17:14,240 --> 00:17:15,119
now

455
00:17:15,119 --> 00:17:18,319
we can see that ios 10 stars detected

456
00:17:18,319 --> 00:17:21,839
this group as an sql injection

457
00:17:21,839 --> 00:17:24,480
but when we take a look at the issue we

458
00:17:24,480 --> 00:17:27,599
found on dust we can see that the first

459
00:17:27,599 --> 00:17:30,080
one is a blind sql injection which makes

460
00:17:30,080 --> 00:17:33,280
sense when you think about how dust look

461
00:17:33,280 --> 00:17:34,799
at the application

462
00:17:34,799 --> 00:17:37,039
but the more interesting issue that we

463
00:17:37,039 --> 00:17:39,919
found was the application level so yes

464
00:17:39,919 --> 00:17:43,360
that's just an informational

465
00:17:43,360 --> 00:17:45,360
issue that we reported

466
00:17:45,360 --> 00:17:47,919
but the idea behind that and the fact

467
00:17:47,919 --> 00:17:50,880
that we are not coupling the heuristics

468
00:17:50,880 --> 00:17:54,000
of the correlation with the issue types

469
00:17:54,000 --> 00:17:56,960
allow us actually to create those groups

470
00:17:56,960 --> 00:17:59,520
of multiple

471
00:17:59,520 --> 00:18:01,840
multiple vulnerabilities that are caused

472
00:18:01,840 --> 00:18:02,720
by

473
00:18:02,720 --> 00:18:03,919
the same

474
00:18:03,919 --> 00:18:06,720
weak link in in the code

475
00:18:06,720 --> 00:18:08,880
so that's also a really nice example

476
00:18:08,880 --> 00:18:12,320
that i personally like

477
00:18:13,039 --> 00:18:15,440
and obviously one of the reasons that we

478
00:18:15,440 --> 00:18:17,200
were able to

479
00:18:17,200 --> 00:18:20,000
i can say compress and consolidate

480
00:18:20,000 --> 00:18:24,000
multiple issues into a single one

481
00:18:24,720 --> 00:18:26,480
i think an interesting for those of you

482
00:18:26,480 --> 00:18:27,919
who watched

483
00:18:27,919 --> 00:18:29,919
the keynote that chris did he was

484
00:18:29,919 --> 00:18:31,919
talking about customers that are adding

485
00:18:31,919 --> 00:18:34,000
das and sas and

486
00:18:34,000 --> 00:18:35,440
with that they

487
00:18:35,440 --> 00:18:38,559
shortened the time to fix by 24 24 and a

488
00:18:38,559 --> 00:18:40,160
half days

489
00:18:40,160 --> 00:18:42,559
imagine what value that they can get

490
00:18:42,559 --> 00:18:44,240
from the correlation we save a lot of

491
00:18:44,240 --> 00:18:46,960
the time on triaging uh we say

492
00:18:46,960 --> 00:18:48,799
we save a lot of the time on

493
00:18:48,799 --> 00:18:51,200
prioritizing from the trashing and

494
00:18:51,200 --> 00:18:52,799
giving all the information that they

495
00:18:52,799 --> 00:18:54,559
need now

496
00:18:54,559 --> 00:18:57,039
he said something very clever very

497
00:18:57,039 --> 00:18:58,960
important that the industry moves the

498
00:18:58,960 --> 00:19:01,440
industry now focus on fixing the issue

499
00:19:01,440 --> 00:19:04,320
and not just detecting the issues

500
00:19:04,320 --> 00:19:06,559
you made a point where customers will

501
00:19:06,559 --> 00:19:08,799
say how the technology just

502
00:19:08,799 --> 00:19:11,280
means that i have more to fix when you

503
00:19:11,280 --> 00:19:13,039
use just sas and then you add dash but

504
00:19:13,039 --> 00:19:14,799
what we show here that we have sas we

505
00:19:14,799 --> 00:19:16,080
have das

506
00:19:16,080 --> 00:19:17,840
before that we had those two issues in

507
00:19:17,840 --> 00:19:20,320
death this issue in sas and we added is

508
00:19:20,320 --> 00:19:22,799
we actually took 80 issues and made it

509
00:19:22,799 --> 00:19:25,840
one so we reduce the amount of issues

510
00:19:25,840 --> 00:19:27,760
and in the next slide ron will talk more

511
00:19:27,760 --> 00:19:30,240
about that

512
00:19:30,720 --> 00:19:33,200
great way to steal my thunder

513
00:19:33,200 --> 00:19:36,360
so um what we have here is actually a

514
00:19:36,360 --> 00:19:39,360
screenshot of the top the top of the

515
00:19:39,360 --> 00:19:42,080
report that we created up until now we

516
00:19:42,080 --> 00:19:43,760
talked in percentages

517
00:19:43,760 --> 00:19:45,840
but now you can actually see the number

518
00:19:45,840 --> 00:19:48,799
that we were able to to identify you can

519
00:19:48,799 --> 00:19:51,200
see the number of issues we found using

520
00:19:51,200 --> 00:19:54,320
ios dust and sas you can see how many of

521
00:19:54,320 --> 00:19:56,559
those we were able to correlate

522
00:19:56,559 --> 00:19:59,120
and you can see and that's something

523
00:19:59,120 --> 00:20:01,520
that i really like about this table the

524
00:20:01,520 --> 00:20:04,559
amount of issues that are still left

525
00:20:04,559 --> 00:20:06,960
after the consolidation process

526
00:20:06,960 --> 00:20:09,520
so even though

527
00:20:09,520 --> 00:20:13,918
for example i asked started with

528
00:20:14,360 --> 00:20:16,400
1723 issues

529
00:20:16,400 --> 00:20:18,559
by the end of this process were able to

530
00:20:18,559 --> 00:20:20,480
reduce this number

531
00:20:20,480 --> 00:20:21,679
to

532
00:20:21,679 --> 00:20:26,480
by about 200 300 issues

533
00:20:26,480 --> 00:20:29,919
when we just started this project i

534
00:20:29,919 --> 00:20:31,919
thought that the best value proposition

535
00:20:31,919 --> 00:20:35,200
i can offer using correlation would be

536
00:20:35,200 --> 00:20:37,520
to to have a data-driven way of

537
00:20:37,520 --> 00:20:39,360
prioritizing issues

538
00:20:39,360 --> 00:20:42,640
saying you know just run correlation

539
00:20:42,640 --> 00:20:46,000
and then start working on the issues on

540
00:20:46,000 --> 00:20:49,480
the intersections first of all solve the

541
00:20:49,480 --> 00:20:52,480
361 issues that we found using ios dust

542
00:20:52,480 --> 00:20:54,640
and sas and after they

543
00:20:54,640 --> 00:20:56,159
go to is

544
00:20:56,159 --> 00:20:58,799
iss and from there wherever you feel

545
00:20:58,799 --> 00:21:00,480
more comfortable

546
00:21:00,480 --> 00:21:02,799
but what i really like about those

547
00:21:02,799 --> 00:21:04,480
numbers and again

548
00:21:04,480 --> 00:21:07,360
uh those numbers are even

549
00:21:07,360 --> 00:21:09,919
lower than the one that we

550
00:21:09,919 --> 00:21:12,240
we get when we actually use real life

551
00:21:12,240 --> 00:21:13,600
applications

552
00:21:13,600 --> 00:21:17,120
but if you take a close look into

553
00:21:17,120 --> 00:21:19,919
any of those intersections you will see

554
00:21:19,919 --> 00:21:23,840
that the total amount of issues under

555
00:21:23,840 --> 00:21:25,840
after consolidation

556
00:21:25,840 --> 00:21:27,679
is lower

557
00:21:27,679 --> 00:21:28,480
from

558
00:21:28,480 --> 00:21:30,400
each of the other

559
00:21:30,400 --> 00:21:33,440
um total issues in the group

560
00:21:33,440 --> 00:21:34,480
so

561
00:21:34,480 --> 00:21:36,799
not only you get all the benefits that

562
00:21:36,799 --> 00:21:38,960
we talked about like additional

563
00:21:38,960 --> 00:21:42,159
information the ability to retest

564
00:21:42,159 --> 00:21:45,440
fixes for sas tissues

565
00:21:45,440 --> 00:21:48,400
by just adding ios and running a

566
00:21:48,400 --> 00:21:51,039
correlation you are actually going to

567
00:21:51,039 --> 00:21:53,440
reduce the amount of work that you have

568
00:21:53,440 --> 00:21:55,039
to resolve

569
00:21:55,039 --> 00:21:57,039
and obviously you're going to reduce the

570
00:21:57,039 --> 00:21:58,640
amount of effort

571
00:21:58,640 --> 00:22:02,080
since you are more data-driven on your

572
00:22:02,080 --> 00:22:03,760
prioritization

573
00:22:03,760 --> 00:22:06,159
and you are more data-driven when

574
00:22:06,159 --> 00:22:09,039
remediating the issue you have

575
00:22:09,039 --> 00:22:10,799
much more information and much more

576
00:22:10,799 --> 00:22:12,960
utilities that can assist you with the

577
00:22:12,960 --> 00:22:15,360
process

578
00:22:18,640 --> 00:22:20,799
so just to emphasize it again if we look

579
00:22:20,799 --> 00:22:21,440
at

580
00:22:21,440 --> 00:22:23,679
actual numbers we had just for those

581
00:22:23,679 --> 00:22:26,240
between ios and das for example you ran

582
00:22:26,240 --> 00:22:29,520
das you got 121 issues and now the

583
00:22:29,520 --> 00:22:31,200
developers and the security team needs

584
00:22:31,200 --> 00:22:34,400
to go and triage those 121 issues

585
00:22:34,400 --> 00:22:37,360
if someone did the effort of adding i

586
00:22:37,360 --> 00:22:39,280
asked agent and one time effort to add

587
00:22:39,280 --> 00:22:41,120
it to the application

588
00:22:41,120 --> 00:22:44,720
that 121 turned into 89. so you reduced

589
00:22:44,720 --> 00:22:45,679
30

590
00:22:45,679 --> 00:22:48,480
um 32 issues and that's

591
00:22:48,480 --> 00:22:49,679
25

592
00:22:49,679 --> 00:22:52,320
25 of the issues that the tool recorded

593
00:22:52,320 --> 00:22:53,200
for you

594
00:22:53,200 --> 00:22:54,799
on static analysis we didn't see the

595
00:22:54,799 --> 00:22:57,520
same percentages but again we do

596
00:22:57,520 --> 00:22:59,440
know it's skewed by the type of the

597
00:22:59,440 --> 00:23:00,720
application that we used in this

598
00:23:00,720 --> 00:23:03,039
research

599
00:23:03,039 --> 00:23:05,039
and and on the other hand also if we are

600
00:23:05,039 --> 00:23:07,520
looking just at i asked ios on its own

601
00:23:07,520 --> 00:23:09,760
was able to we were able to consolidate

602
00:23:09,760 --> 00:23:11,360
issues because of the way that we did

603
00:23:11,360 --> 00:23:14,240
the correlation today

604
00:23:15,679 --> 00:23:18,320
so this is this is what we had to share

605
00:23:18,320 --> 00:23:20,559
um we have our details here again the

606
00:23:20,559 --> 00:23:22,320
slack channel if you have more questions

607
00:23:22,320 --> 00:23:25,360
to ask us uh and if you are watching the

608
00:23:25,360 --> 00:23:26,880
recording by the way the slack channels

609
00:23:26,880 --> 00:23:29,280
will still be available so you can post

610
00:23:29,280 --> 00:23:30,799
questions there don and i will try to

611
00:23:30,799 --> 00:23:32,960
monitor them but always feel free to

612
00:23:32,960 --> 00:23:35,120
either direct message us or connect with

613
00:23:35,120 --> 00:23:37,200
us over linkedin our twitter and we have

614
00:23:37,200 --> 00:23:39,200
the details here or send us an email if

615
00:23:39,200 --> 00:23:41,360
you're more old-fashioned

616
00:23:41,360 --> 00:23:43,840
so thanks thank you for thank you all

617
00:23:43,840 --> 00:23:46,880
for listening i hope that you got

618
00:23:46,880 --> 00:23:48,400
value from it we are about to go to

619
00:23:48,400 --> 00:23:49,440
break

620
00:23:49,440 --> 00:23:51,520
and i hope i'm not stealing your thunder

621
00:23:51,520 --> 00:23:54,520
now

