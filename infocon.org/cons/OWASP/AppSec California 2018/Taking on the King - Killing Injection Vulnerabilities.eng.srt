1
00:00:04,300 --> 00:00:15,829
[Music]

2
00:00:18,050 --> 00:00:25,230
my name is Justin Collins<font color="#CCCCCC"> welcome to my</font>

3
00:00:22,290 --> 00:00:27,450
talk thanks for coming<font color="#CCCCCC"> you can find me</font>

4
00:00:25,230 --> 00:00:30,599
on<font color="#E5E5E5"> the</font><font color="#CCCCCC"> internet at president beef most</font>

5
00:00:27,450 --> 00:00:34,620
<font color="#E5E5E5">places on the</font><font color="#CCCCCC"> internet this is a</font><font color="#E5E5E5"> picture</font>

6
00:00:30,599 --> 00:00:37,620
<font color="#CCCCCC">that I</font><font color="#E5E5E5"> took in California</font><font color="#CCCCCC"> up the</font><font color="#E5E5E5"> coast</font>

7
00:00:34,620 --> 00:00:38,730
somewhere there's no towns nearby so I

8
00:00:37,620 --> 00:00:41,400
don't know how to describe<font color="#E5E5E5"> where it is</font>

9
00:00:38,730 --> 00:00:43,650
but<font color="#E5E5E5"> I'm very</font><font color="#CCCCCC"> proud that</font><font color="#E5E5E5"> I got the bird</font>

10
00:00:41,400 --> 00:00:45,510
in the<font color="#CCCCCC"> picture oh it's not working</font>

11
00:00:43,650 --> 00:00:47,760
well anyways I'm very proud of<font color="#E5E5E5"> getting</font>

12
00:00:45,510 --> 00:00:50,159
<font color="#E5E5E5">the bird because I saw it</font><font color="#CCCCCC"> coming and I</font>

13
00:00:47,760 --> 00:00:54,390
like<font color="#E5E5E5"> try to take the picture I'm very</font>

14
00:00:50,159 --> 00:00:56,339
proud of<font color="#E5E5E5"> that</font><font color="#CCCCCC"> anyways</font><font color="#E5E5E5"> you know</font><font color="#CCCCCC"> they used</font>

15
00:00:54,390 --> 00:00:58,199
to like show like people<font color="#CCCCCC"> would get mad</font>

16
00:00:56,339 --> 00:00:59,519
because people invite you over and then

17
00:00:58,199 --> 00:01:02,010
they'd have<font color="#E5E5E5"> like a</font><font color="#CCCCCC"> slideshow of their</font>

18
00:00:59,519 --> 00:01:04,349
vacations<font color="#E5E5E5"> like</font><font color="#CCCCCC"> no one does that anymore</font>

19
00:01:02,010 --> 00:01:06,750
so<font color="#CCCCCC"> I put my vacation pictures in my</font>

20
00:01:04,349 --> 00:01:12,539
<font color="#E5E5E5">presentations so you get to experience</font>

21
00:01:06,750 --> 00:01:17,039
it<font color="#CCCCCC"> so today</font><font color="#E5E5E5"> I'm talking about</font><font color="#CCCCCC"> injection</font>

22
00:01:12,540 --> 00:01:21,259
vulnerabilities<font color="#E5E5E5"> in general but first</font>

23
00:01:17,040 --> 00:01:23,969
about me<font color="#E5E5E5"> I'm this guy over here</font><font color="#CCCCCC"> I</font>

24
00:01:21,259 --> 00:01:28,439
realize this is my eighth year<font color="#CCCCCC"> of</font>

25
00:01:23,969 --> 00:01:31,500
application security<font color="#E5E5E5"> and right now I</font>

26
00:01:28,439 --> 00:01:34,859
work at Survey Monkey<font color="#CCCCCC"> and I also work at</font>

27
00:01:31,500 --> 00:01:37,829
my<font color="#E5E5E5"> own company building break man</font><font color="#CCCCCC"> pro so</font>

28
00:01:34,859 --> 00:01:40,740
if you need a static analysis security

29
00:01:37,829 --> 00:01:42,839
tool for Ruby on Rails<font color="#E5E5E5"> check out</font><font color="#CCCCCC"> brick</font>

30
00:01:40,740 --> 00:01:46,399
man<font color="#E5E5E5"> Pro if you need to take surveys</font>

31
00:01:42,840 --> 00:01:46,399
<font color="#E5E5E5">check out Survey Monkey</font>

32
00:01:46,850 --> 00:01:51,059
<font color="#CCCCCC">so I'm actually like a little bit</font>

33
00:01:49,079 --> 00:01:54,270
<font color="#CCCCCC">nervous about this talk</font><font color="#E5E5E5"> because it's</font>

34
00:01:51,060 --> 00:01:58,679
more<font color="#E5E5E5"> of a a thought talk than a nice</font>

35
00:01:54,270 --> 00:02:02,789
concrete<font color="#E5E5E5"> talk about things</font><font color="#CCCCCC"> that I'm very</font>

36
00:01:58,679 --> 00:02:04,350
sure about so I hope it<font color="#E5E5E5"> goes well</font><font color="#CCCCCC"> and I</font>

37
00:02:02,789 --> 00:02:08,220
did not pick this picture<font color="#E5E5E5"> because of</font>

38
00:02:04,350 --> 00:02:11,310
Survey Monkey<font color="#E5E5E5"> I I just thought I was</font><font color="#CCCCCC"> a</font>

39
00:02:08,220 --> 00:02:12,630
<font color="#E5E5E5">good thinking picture but maybe it's</font>

40
00:02:11,310 --> 00:02:14,310
like something that just gets stuck in

41
00:02:12,630 --> 00:02:18,329
your<font color="#E5E5E5"> brain when you work at a company of</font>

42
00:02:14,310 --> 00:02:23,640
it has monkey in the name anyway so<font color="#E5E5E5"> I</font>

43
00:02:18,330 --> 00:02:25,500
looked it up and it<font color="#E5E5E5"> is claimed that 1998</font>

44
00:02:23,640 --> 00:02:29,089
is about when<font color="#E5E5E5"> people started talking</font>

45
00:02:25,500 --> 00:02:30,520
about sequel injection<font color="#E5E5E5"> and it is now</font>

46
00:02:29,090 --> 00:02:33,850
2018

47
00:02:30,520 --> 00:02:37,660
which means it is<font color="#E5E5E5"> 20th birthday</font><font color="#CCCCCC"> of</font>

48
00:02:33,850 --> 00:02:40,210
sequel injection<font color="#CCCCCC"> yes the</font><font color="#E5E5E5"> interesting</font>

49
00:02:37,660 --> 00:02:43,750
<font color="#CCCCCC">thing about that is it</font><font color="#E5E5E5"> means that it's a</font>

50
00:02:40,210 --> 00:02:47,380
<font color="#CCCCCC">very well understood problem</font><font color="#E5E5E5"> and we also</font>

51
00:02:43,750 --> 00:02:50,080
have a<font color="#E5E5E5"> very prescriptive solution to</font>

52
00:02:47,380 --> 00:02:53,530
sequel injection<font color="#CCCCCC"> more so than we have</font>

53
00:02:50,080 --> 00:02:55,840
<font color="#CCCCCC">for most other vulnerabilities which</font>

54
00:02:53,530 --> 00:02:59,650
we'll talk<font color="#E5E5E5"> about</font><font color="#CCCCCC"> a little</font><font color="#E5E5E5"> bit</font><font color="#CCCCCC"> more but</font>

55
00:02:55,840 --> 00:03:02,560
happy birthday<font color="#CCCCCC"> to sequel injection</font><font color="#E5E5E5"> so if</font>

56
00:02:59,650 --> 00:03:05,230
we look at the<font color="#CCCCCC"> wasp top 10 and we look</font>

57
00:03:02,560 --> 00:03:07,960
at injection and also cross-site

58
00:03:05,230 --> 00:03:09,850
scripting which I believe is also an

59
00:03:07,960 --> 00:03:13,540
injection vulnerability but more

60
00:03:09,850 --> 00:03:17,049
specific one they both been<font color="#E5E5E5"> on the</font><font color="#CCCCCC"> list</font>

61
00:03:13,540 --> 00:03:19,359
<font color="#CCCCCC">since 2004 injections started kind of</font>

62
00:03:17,050 --> 00:03:23,290
low<font color="#CCCCCC"> and then it</font><font color="#E5E5E5"> jumped up to number two</font>

63
00:03:19,360 --> 00:03:26,020
<font color="#CCCCCC">and 2009 and then since 2010 it's been</font>

64
00:03:23,290 --> 00:03:29,049
the<font color="#E5E5E5"> number one spot so again sequel</font>

65
00:03:26,020 --> 00:03:31,350
injection<font color="#CCCCCC"> been known since 1998 it's</font>

66
00:03:29,050 --> 00:03:36,520
been at the top of<font color="#CCCCCC"> the</font><font color="#E5E5E5"> a wasp atop 10</font>

67
00:03:31,350 --> 00:03:38,019
for about<font color="#E5E5E5"> eight</font><font color="#CCCCCC"> years</font><font color="#E5E5E5"> and then</font>

68
00:03:36,520 --> 00:03:39,220
cross-site scripting is<font color="#E5E5E5"> like</font><font color="#CCCCCC"> bounce</font>

69
00:03:38,020 --> 00:03:42,490
<font color="#E5E5E5">around but you put those two together</font>

70
00:03:39,220 --> 00:03:48,700
that's a lot<font color="#E5E5E5"> that's</font><font color="#CCCCCC"> 20% movie loss top</font>

71
00:03:42,490 --> 00:03:52,810
<font color="#CCCCCC">10 is essentially injection if we look</font>

72
00:03:48,700 --> 00:03:57,040
at the 2017 new wasp atop<font color="#E5E5E5"> 10 this is</font>

73
00:03:52,810 --> 00:03:58,690
what they say about injection and I

74
00:03:57,040 --> 00:03:59,140
couldn't remember<font color="#E5E5E5"> what these numbers</font>

75
00:03:58,690 --> 00:04:02,700
<font color="#E5E5E5">mean</font>

76
00:03:59,140 --> 00:04:05,950
so hello cheat sheet<font color="#CCCCCC"> so exploitability</font>

77
00:04:02,700 --> 00:04:07,810
<font color="#E5E5E5">easy if you know</font><font color="#CCCCCC"> what's there it's easy</font>

78
00:04:05,950 --> 00:04:09,429
to exploit it<font color="#CCCCCC"> in fact</font><font color="#E5E5E5"> search the</font>

79
00:04:07,810 --> 00:04:11,590
internet<font color="#E5E5E5"> and you'll get all kinds</font><font color="#CCCCCC"> of</font>

80
00:04:09,430 --> 00:04:14,250
nice payloads and<font color="#E5E5E5"> again especially</font>

81
00:04:11,590 --> 00:04:17,980
sequel injection<font color="#E5E5E5"> very well understood</font>

82
00:04:14,250 --> 00:04:19,738
<font color="#CCCCCC">and people have thought a lot about it</font>

83
00:04:17,980 --> 00:04:22,560
<font color="#CCCCCC">and written a lot about</font><font color="#E5E5E5"> it</font>

84
00:04:19,738 --> 00:04:26,560
prevalence is<font color="#CCCCCC"> middle of the road</font>

85
00:04:22,560 --> 00:04:30,180
<font color="#E5E5E5">according to OS</font><font color="#CCCCCC"> top 10 it's common so</font>

86
00:04:26,560 --> 00:04:34,780
not widespread<font color="#E5E5E5"> and not rare but common</font>

87
00:04:30,180 --> 00:04:38,919
detectability<font color="#CCCCCC"> easy relatively easy to</font>

88
00:04:34,780 --> 00:04:42,969
<font color="#CCCCCC">find in an application</font><font color="#E5E5E5"> and then the</font>

89
00:04:38,919 --> 00:04:45,758
<font color="#E5E5E5">technical impact is severe so of these</font>

90
00:04:42,969 --> 00:04:48,009
<font color="#CCCCCC">for metrics</font><font color="#E5E5E5"> three of them are the worst</font>

91
00:04:45,759 --> 00:04:51,159
they<font color="#CCCCCC"> can be and ones like</font><font color="#E5E5E5"> kind of in the</font>

92
00:04:48,009 --> 00:04:53,169
<font color="#E5E5E5">middle so</font><font color="#CCCCCC"> that that's telling</font><font color="#E5E5E5"> us</font>

93
00:04:51,159 --> 00:04:57,219
something<font color="#E5E5E5"> about it</font><font color="#CCCCCC"> and obviously this</font><font color="#E5E5E5"> is</font>

94
00:04:53,169 --> 00:04:59,169
<font color="#E5E5E5">why it's at the top right so let's look</font>

95
00:04:57,219 --> 00:05:03,909
a<font color="#CCCCCC"> little</font><font color="#E5E5E5"> bit like prevalence versus</font>

96
00:04:59,169 --> 00:05:06,698
impact<font color="#CCCCCC"> i found the hacker one report</font><font color="#E5E5E5"> and</font>

97
00:05:03,909 --> 00:05:10,239
this is information<font color="#E5E5E5"> from</font><font color="#CCCCCC"> 2013 through</font>

98
00:05:06,699 --> 00:05:13,119
<font color="#CCCCCC">may 2017</font><font color="#E5E5E5"> so maybe like about four years</font>

99
00:05:10,239 --> 00:05:15,489
<font color="#E5E5E5">worth of data cross-site scripting is</font>

100
00:05:13,119 --> 00:05:17,619
the most common vulnerability found

101
00:05:15,489 --> 00:05:20,438
which<font color="#E5E5E5"> i think most of us would agree</font>

102
00:05:17,619 --> 00:05:23,110
<font color="#CCCCCC">that</font><font color="#E5E5E5"> makes sense and then the more</font>

103
00:05:20,439 --> 00:05:25,779
specific injections down here are not

104
00:05:23,110 --> 00:05:26,919
<font color="#E5E5E5">very common command injections</font><font color="#CCCCCC"> you know</font>

105
00:05:25,779 --> 00:05:29,529
it's really tiny<font color="#E5E5E5"> command injection</font>

106
00:05:26,919 --> 00:05:32,649
sequel injection code injection<font color="#E5E5E5"> or</font><font color="#CCCCCC"> like</font>

107
00:05:29,529 --> 00:05:35,860
this<font color="#E5E5E5"> is by industry like two percent</font>

108
00:05:32,649 --> 00:05:39,249
<font color="#E5E5E5">three percent</font><font color="#CCCCCC"> a little bit scary based</font>

109
00:05:35,860 --> 00:05:41,979
on yesterday's<font color="#E5E5E5"> keynote in healthcare</font>

110
00:05:39,249 --> 00:05:44,439
<font color="#CCCCCC">industry</font><font color="#E5E5E5"> six percent the</font><font color="#CCCCCC"> highest of what</font>

111
00:05:41,979 --> 00:05:46,479
they measured so you can't get<font color="#E5E5E5"> the</font>

112
00:05:44,439 --> 00:05:49,269
<font color="#E5E5E5">feeling</font><font color="#CCCCCC"> like whoa it's not like super</font>

113
00:05:46,479 --> 00:05:51,099
<font color="#E5E5E5">common cross-site scripting is but other</font>

114
00:05:49,269 --> 00:05:54,759
types of injections aren't really super

115
00:05:51,099 --> 00:05:57,069
common<font color="#CCCCCC"> but again it's at the top</font><font color="#E5E5E5"> of</font><font color="#CCCCCC"> the</font>

116
00:05:54,759 --> 00:06:00,659
list<font color="#E5E5E5"> right</font><font color="#CCCCCC"> if we look at the book</font><font color="#E5E5E5"> crowd</font>

117
00:05:57,069 --> 00:06:04,809
data<font color="#CCCCCC"> this</font><font color="#E5E5E5"> is the</font><font color="#CCCCCC"> 2017 report these are</font>

118
00:06:00,659 --> 00:06:09,009
<font color="#E5E5E5">critical vulnerabilities meaning</font><font color="#CCCCCC"> their</font>

119
00:06:04,809 --> 00:06:10,869
top<font color="#CCCCCC"> p1 category</font><font color="#E5E5E5"> this is what makes up</font>

120
00:06:09,009 --> 00:06:14,889
<font color="#CCCCCC">that category</font><font color="#E5E5E5"> and</font><font color="#CCCCCC"> sixty-three</font><font color="#E5E5E5"> percent</font>

121
00:06:10,869 --> 00:06:19,089
were sequel injection<font color="#E5E5E5"> so last slide is</font>

122
00:06:14,889 --> 00:06:21,519
like<font color="#E5E5E5"> not</font><font color="#CCCCCC"> very common but when</font><font color="#E5E5E5"> it happens</font>

123
00:06:19,089 --> 00:06:25,089
<font color="#E5E5E5">it's bad and cross-site scripting is</font>

124
00:06:21,519 --> 00:06:29,199
number two with<font color="#CCCCCC"> 18% because and I think</font>

125
00:06:25,089 --> 00:06:31,389
<font color="#E5E5E5">XSS is often categorized not as a p1 so</font>

126
00:06:29,199 --> 00:06:34,719
sometimes sometimes not<font color="#E5E5E5"> and they also</font>

127
00:06:31,389 --> 00:06:37,419
said that<font color="#E5E5E5"> sequel injection got the the</font>

128
00:06:34,719 --> 00:06:42,969
highest<font color="#E5E5E5"> average payout</font><font color="#CCCCCC"> a little over</font>

129
00:06:37,419 --> 00:06:44,649
<font color="#CCCCCC">$2,000 so you it's not super common but</font>

130
00:06:42,969 --> 00:06:47,199
<font color="#CCCCCC">when</font><font color="#E5E5E5"> it happens</font><font color="#CCCCCC"> it's bad and I</font><font color="#E5E5E5"> think</font>

131
00:06:44,649 --> 00:06:50,439
that probably reaffirms most of our

132
00:06:47,199 --> 00:06:54,519
intuition<font color="#CCCCCC"> about it</font>

133
00:06:50,439 --> 00:06:57,999
<font color="#E5E5E5">okay now let's talk about what I</font><font color="#CCCCCC"> see or</font>

134
00:06:54,519 --> 00:07:00,099
what<font color="#CCCCCC"> an</font><font color="#E5E5E5"> injection vulnerability is and</font>

135
00:06:57,999 --> 00:07:01,959
<font color="#E5E5E5">this is maybe for some of you like I</font>

136
00:07:00,099 --> 00:07:03,639
know what<font color="#E5E5E5"> an injection vulnerability is</font>

137
00:07:01,959 --> 00:07:08,789
this<font color="#E5E5E5"> is so we're all on</font><font color="#CCCCCC"> the same</font><font color="#E5E5E5"> page</font>

138
00:07:03,639 --> 00:07:12,819
and<font color="#E5E5E5"> you know we're all together on this</font>

139
00:07:08,789 --> 00:07:14,438
so this<font color="#E5E5E5"> is I think my definition</font><font color="#CCCCCC"> may be</font>

140
00:07:12,819 --> 00:07:16,959
someone<font color="#CCCCCC"> else</font><font color="#E5E5E5"> has said this but is my</font>

141
00:07:14,439 --> 00:07:20,589
succinct definition<font color="#E5E5E5"> it's when we have</font>

142
00:07:16,959 --> 00:07:22,899
<font color="#E5E5E5">data</font><font color="#CCCCCC"> that gets interpreted as code we</font>

143
00:07:20,589 --> 00:07:25,959
have values<font color="#CCCCCC"> that should be data and data</font>

144
00:07:22,899 --> 00:07:28,269
<font color="#E5E5E5">you</font><font color="#CCCCCC"> should not be executing data</font><font color="#E5E5E5"> but</font>

145
00:07:25,959 --> 00:07:30,759
instead it happens<font color="#E5E5E5"> and then we have an</font>

146
00:07:28,269 --> 00:07:32,969
injection vulnerability<font color="#E5E5E5"> and</font><font color="#CCCCCC"> that data</font>

147
00:07:30,759 --> 00:07:36,489
could<font color="#CCCCCC"> be things like query parameters</font>

148
00:07:32,969 --> 00:07:39,939
values from a<font color="#E5E5E5"> form they could be values</font>

149
00:07:36,489 --> 00:07:43,209
that come<font color="#E5E5E5"> in as header values</font><font color="#CCCCCC"> files that</font>

150
00:07:39,939 --> 00:07:44,769
are uploaded<font color="#E5E5E5"> stuff that comes out</font><font color="#CCCCCC"> of the</font>

151
00:07:43,209 --> 00:07:48,519
database these are all things<font color="#E5E5E5"> that</font>

152
00:07:44,769 --> 00:07:50,979
<font color="#CCCCCC">should be data and somehow they get</font>

153
00:07:48,519 --> 00:07:54,509
interpreted as code instead as sequel or

154
00:07:50,979 --> 00:07:59,039
HTML or JavaScript or CSS or basher<font color="#CCCCCC"> a</font>

155
00:07:54,509 --> 00:08:01,389
specific programming language<font color="#CCCCCC"> that's</font>

156
00:07:59,039 --> 00:08:04,149
when<font color="#E5E5E5"> we get an injection vulnerability</font>

157
00:08:01,389 --> 00:08:05,979
and it kind of like visually<font color="#E5E5E5"> it looks</font>

158
00:08:04,149 --> 00:08:08,199
like this<font color="#E5E5E5"> we have some code</font><font color="#CCCCCC"> that's like</font>

159
00:08:05,979 --> 00:08:10,748
from<font color="#E5E5E5"> the developer that the developers</font>

160
00:08:08,199 --> 00:08:12,219
intending to be interpreted and then we

161
00:08:10,749 --> 00:08:13,240
have some code from the attacker<font color="#E5E5E5"> and</font>

162
00:08:12,219 --> 00:08:15,990
then they both get sent<font color="#CCCCCC"> to an</font>

163
00:08:13,240 --> 00:08:18,159
interpreter<font color="#CCCCCC"> of some kind</font><font color="#E5E5E5"> and executed</font>

164
00:08:15,990 --> 00:08:18,819
although<font color="#E5E5E5"> actually it usually looks more</font>

165
00:08:18,159 --> 00:08:20,679
like this

166
00:08:18,819 --> 00:08:25,749
<font color="#E5E5E5">like the attacker code is kind of in the</font>

167
00:08:20,679 --> 00:08:28,179
<font color="#E5E5E5">middle and we'll see kind of the</font>

168
00:08:25,749 --> 00:08:29,739
examples of<font color="#E5E5E5"> that and I</font><font color="#CCCCCC"> think again it</font>

169
00:08:28,179 --> 00:08:31,808
gets<font color="#CCCCCC"> sent</font><font color="#E5E5E5"> to an interpreter in this case</font>

170
00:08:29,739 --> 00:08:33,458
what I mean by an interpreter<font color="#CCCCCC"> is like</font>

171
00:08:31,809 --> 00:08:35,829
<font color="#CCCCCC">anything</font><font color="#E5E5E5"> that's going to interpret that</font>

172
00:08:33,458 --> 00:08:38,169
<font color="#CCCCCC">and sort</font><font color="#E5E5E5"> of execute it right so</font><font color="#CCCCCC"> that</font>

173
00:08:35,828 --> 00:08:40,838
could be<font color="#E5E5E5"> the database</font><font color="#CCCCCC"> it could be a</font>

174
00:08:38,169 --> 00:08:41,289
browser<font color="#E5E5E5"> XSS just generally going</font><font color="#CCCCCC"> to be</font>

175
00:08:40,839 --> 00:08:43,750
<font color="#E5E5E5">the browser</font>

176
00:08:41,289 --> 00:08:46,660
it could be the web server or<font color="#E5E5E5"> mail</font>

177
00:08:43,750 --> 00:08:49,269
server<font color="#E5E5E5"> it could be a shell it could be</font>

178
00:08:46,660 --> 00:08:51,129
<font color="#E5E5E5">the templating library or XML part you</font>

179
00:08:49,269 --> 00:08:54,100
know you get the<font color="#E5E5E5"> idea it's something</font>

180
00:08:51,129 --> 00:08:55,480
that's going to<font color="#CCCCCC"> execute this code or</font>

181
00:08:54,100 --> 00:08:57,810
maybe<font color="#E5E5E5"> you know someone's</font><font color="#CCCCCC"> just calling</font>

182
00:08:55,480 --> 00:09:00,540
eval<font color="#E5E5E5"> on some code</font>

183
00:08:57,810 --> 00:09:03,900
all right so here's<font color="#E5E5E5"> our classic</font><font color="#CCCCCC"> sequel</font>

184
00:09:00,540 --> 00:09:06,449
injection example we're creating a<font color="#E5E5E5"> query</font>

185
00:09:03,900 --> 00:09:07,829
<font color="#E5E5E5">and we're putting some data into</font><font color="#CCCCCC"> it and</font>

186
00:09:06,450 --> 00:09:11,790
then we're going<font color="#CCCCCC"> to</font><font color="#E5E5E5"> execute the query on</font>

187
00:09:07,830 --> 00:09:14,460
the database<font color="#CCCCCC"> and so</font><font color="#E5E5E5"> just</font><font color="#CCCCCC"> to</font><font color="#E5E5E5"> be like</font>

188
00:09:11,790 --> 00:09:18,779
super explicit<font color="#E5E5E5"> here we expect that email</font>

189
00:09:14,460 --> 00:09:20,400
address<font color="#CCCCCC"> to be</font><font color="#E5E5E5"> data right and we have</font>

190
00:09:18,779 --> 00:09:23,430
this stream which kind<font color="#E5E5E5"> of looks like</font>

191
00:09:20,400 --> 00:09:24,990
data<font color="#E5E5E5"> like in the program that's data but</font>

192
00:09:23,430 --> 00:09:29,160
actually<font color="#CCCCCC"> we're gonna execute it as code</font>

193
00:09:24,990 --> 00:09:31,740
right<font color="#E5E5E5"> and that email is probably going</font>

194
00:09:29,160 --> 00:09:34,319
to<font color="#E5E5E5"> be user input so in this case like a</font>

195
00:09:31,740 --> 00:09:37,230
request<font color="#E5E5E5"> parameter and if it's user input</font>

196
00:09:34,320 --> 00:09:39,630
that<font color="#CCCCCC"> means it can be attacker input so</font>

197
00:09:37,230 --> 00:09:42,270
<font color="#E5E5E5">we have again sort of the classic sequel</font>

198
00:09:39,630 --> 00:09:45,000
injection where we're gonna in that

199
00:09:42,270 --> 00:09:47,970
string and you know do or<font color="#CCCCCC"> 1 equals 1 and</font>

200
00:09:45,000 --> 00:09:52,650
in the query and what ends up happening

201
00:09:47,970 --> 00:09:54,960
is we had this code<font color="#CCCCCC"> that a developer</font>

202
00:09:52,650 --> 00:09:57,240
wrote<font color="#CCCCCC"> write the the seek</font><font color="#E5E5E5"> I'm talking</font>

203
00:09:54,960 --> 00:10:00,330
about the sequel code that the developer

204
00:09:57,240 --> 00:10:02,310
rode and we have<font color="#E5E5E5"> this data coming in but</font>

205
00:10:00,330 --> 00:10:04,740
now the data<font color="#E5E5E5"> is interpreted</font><font color="#CCCCCC"> as code and</font>

206
00:10:02,310 --> 00:10:07,410
what I<font color="#E5E5E5"> think is really</font><font color="#CCCCCC"> interesting</font><font color="#E5E5E5"> is at</font>

207
00:10:04,740 --> 00:10:09,510
this point<font color="#E5E5E5"> we no longer have a</font>

208
00:10:07,410 --> 00:10:11,790
distinction between what the developer

209
00:10:09,510 --> 00:10:14,880
wrote and what the attacker is injecting

210
00:10:11,790 --> 00:10:19,199
so at this point<font color="#E5E5E5"> we've lost right we</font>

211
00:10:14,880 --> 00:10:21,780
have no idea which<font color="#CCCCCC"> is which</font><font color="#E5E5E5"> so</font><font color="#CCCCCC"> here's</font>

212
00:10:19,200 --> 00:10:24,150
some<font color="#E5E5E5"> more</font><font color="#CCCCCC"> examples in different</font>

213
00:10:21,780 --> 00:10:27,449
languages where we're building<font color="#E5E5E5"> queries</font>

214
00:10:24,150 --> 00:10:30,650
and then we put values into<font color="#CCCCCC"> them</font><font color="#E5E5E5"> and we</font>

215
00:10:27,450 --> 00:10:33,150
have sequel injection<font color="#E5E5E5"> opportunities here</font>

216
00:10:30,650 --> 00:10:35,189
so if<font color="#E5E5E5"> we look at this we see like we're</font>

217
00:10:33,150 --> 00:10:36,839
<font color="#CCCCCC">building strings and we're like putting</font>

218
00:10:35,190 --> 00:10:40,380
values into those strings<font color="#E5E5E5"> and then</font>

219
00:10:36,839 --> 00:10:42,360
executing them right<font color="#E5E5E5"> here's more</font>

220
00:10:40,380 --> 00:10:46,890
examples<font color="#CCCCCC"> wow I don't know what happened</font>

221
00:10:42,360 --> 00:10:49,380
there<font color="#CCCCCC"> lots of white space</font><font color="#E5E5E5"> and not top</font>

222
00:10:46,890 --> 00:10:50,970
row in<font color="#E5E5E5"> there</font><font color="#CCCCCC"> so again</font><font color="#E5E5E5"> we're like</font>

223
00:10:49,380 --> 00:10:52,650
building strings and this<font color="#E5E5E5"> time we're</font>

224
00:10:50,970 --> 00:10:54,779
gonna hand them off<font color="#CCCCCC"> probably to a shell</font>

225
00:10:52,650 --> 00:10:58,079
or sometimes it's<font color="#E5E5E5"> like a pseudo shell</font>

226
00:10:54,779 --> 00:11:01,260
and it's going<font color="#E5E5E5"> to execute so here we</font>

227
00:10:58,080 --> 00:11:03,270
have command<font color="#CCCCCC"> injection</font><font color="#E5E5E5"> and just in case</font>

228
00:11:01,260 --> 00:11:05,490
you didn't get<font color="#E5E5E5"> it on</font><font color="#CCCCCC"> the first two</font>

229
00:11:03,270 --> 00:11:08,130
slides<font color="#CCCCCC"> here we're building more strings</font>

230
00:11:05,490 --> 00:11:10,530
<font color="#E5E5E5">and this time we're building actually</font>

231
00:11:08,130 --> 00:11:11,580
templates<font color="#CCCCCC"> that</font><font color="#E5E5E5"> we're going</font><font color="#CCCCCC"> to execute so</font>

232
00:11:10,530 --> 00:11:13,500
if you<font color="#CCCCCC"> caught</font><font color="#E5E5E5"> it</font>

233
00:11:11,580 --> 00:11:15,510
<font color="#CCCCCC">jayson's talk yesterday server-side</font>

234
00:11:13,500 --> 00:11:18,830
Templin injection is becoming more

235
00:11:15,510 --> 00:11:21,890
<font color="#CCCCCC">popular among bug bounty researchers</font><font color="#E5E5E5"> I</font>

236
00:11:18,830 --> 00:11:25,470
think the rails example on the top<font color="#E5E5E5"> is</font>

237
00:11:21,890 --> 00:11:27,180
<font color="#E5E5E5">actually very sneaky</font><font color="#CCCCCC"> because there's</font>

238
00:11:25,470 --> 00:11:30,480
nothing<font color="#E5E5E5"> that</font><font color="#CCCCCC"> really indicates</font><font color="#E5E5E5"> what's</font>

239
00:11:27,180 --> 00:11:32,400
going on but when<font color="#E5E5E5"> you do render in line</font>

240
00:11:30,480 --> 00:11:36,210
<font color="#CCCCCC">it</font><font color="#E5E5E5"> actually treats it as your default</font>

241
00:11:32,400 --> 00:11:38,760
template<font color="#CCCCCC"> Ameri which in this case would</font>

242
00:11:36,210 --> 00:11:40,680
allow you to<font color="#CCCCCC"> put in essentially any Ruby</font>

243
00:11:38,760 --> 00:11:44,340
code and it would be<font color="#E5E5E5"> executed on the</font>

244
00:11:40,680 --> 00:11:46,410
<font color="#E5E5E5">server so what we get from him like</font>

245
00:11:44,340 --> 00:11:49,290
building a template<font color="#E5E5E5"> now we have remote</font>

246
00:11:46,410 --> 00:11:51,689
code execution<font color="#E5E5E5"> and again we're like</font>

247
00:11:49,290 --> 00:11:54,569
putting<font color="#E5E5E5"> the other these strings putting</font>

248
00:11:51,690 --> 00:11:56,430
user<font color="#E5E5E5"> input into them</font><font color="#CCCCCC"> and then handing</font>

249
00:11:54,570 --> 00:12:01,680
them off to something<font color="#E5E5E5"> that's going</font><font color="#CCCCCC"> to</font>

250
00:11:56,430 --> 00:12:06,689
execute<font color="#E5E5E5"> them</font><font color="#CCCCCC"> all right what</font><font color="#E5E5E5"> about this</font>

251
00:12:01,680 --> 00:12:11,370
one so is this like opportunity for<font color="#E5E5E5"> a</font>

252
00:12:06,690 --> 00:12:12,780
cross-site scripting probably<font color="#E5E5E5"> but you</font>

253
00:12:11,370 --> 00:12:14,400
<font color="#E5E5E5">don't actually know because there's like</font>

254
00:12:12,780 --> 00:12:18,959
<font color="#E5E5E5">a whole</font><font color="#CCCCCC"> bunch of templating libraries</font>

255
00:12:14,400 --> 00:12:22,439
that use this exact same syntax but what

256
00:12:18,960 --> 00:12:25,410
I want to point out here<font color="#E5E5E5"> is we</font><font color="#CCCCCC"> have at</font>

257
00:12:22,440 --> 00:12:28,200
least four different<font color="#E5E5E5"> contexts that</font>

258
00:12:25,410 --> 00:12:31,770
require different<font color="#E5E5E5"> types of escaping to</font>

259
00:12:28,200 --> 00:12:33,120
avoid<font color="#E5E5E5"> across site scripting at the top</font>

260
00:12:31,770 --> 00:12:35,880
we're just kind of like<font color="#E5E5E5"> in an HTML</font>

261
00:12:33,120 --> 00:12:38,580
context here we're in<font color="#E5E5E5"> a CSS context</font>

262
00:12:35,880 --> 00:12:42,780
<font color="#CCCCCC">you're in a</font><font color="#E5E5E5"> JavaScript context here</font>

263
00:12:38,580 --> 00:12:45,660
<font color="#E5E5E5">we're in HTML attribute context it's</font>

264
00:12:42,780 --> 00:12:50,370
very unlikely<font color="#E5E5E5"> that</font><font color="#CCCCCC"> your templating</font>

265
00:12:45,660 --> 00:12:53,610
library even<font color="#E5E5E5"> offers the correct escaping</font>

266
00:12:50,370 --> 00:12:55,680
for<font color="#E5E5E5"> all in these four contexts in there</font>

267
00:12:53,610 --> 00:13:00,300
<font color="#CCCCCC">they're like</font><font color="#E5E5E5"> five or</font><font color="#CCCCCC"> six that can happen</font>

268
00:12:55,680 --> 00:13:01,800
<font color="#E5E5E5">in HTML right</font><font color="#CCCCCC"> so even if you wanted</font><font color="#E5E5E5"> to</font>

269
00:13:00,300 --> 00:13:04,410
do the<font color="#E5E5E5"> right thing probably not going to</font>

270
00:13:01,800 --> 00:13:05,939
<font color="#E5E5E5">be able</font><font color="#CCCCCC"> to and of course</font><font color="#E5E5E5"> expecting</font>

271
00:13:04,410 --> 00:13:09,600
<font color="#CCCCCC">people to always</font><font color="#E5E5E5"> use</font><font color="#CCCCCC"> the correct</font>

272
00:13:05,940 --> 00:13:11,640
<font color="#E5E5E5">encoding for the correct context is very</font>

273
00:13:09,600 --> 00:13:13,920
difficult<font color="#CCCCCC"> this is like a simple</font><font color="#E5E5E5"> example</font>

274
00:13:11,640 --> 00:13:17,840
<font color="#E5E5E5">but most of the time your templates</font>

275
00:13:13,920 --> 00:13:20,370
aren't going to be this simple<font color="#E5E5E5"> okay</font>

276
00:13:17,840 --> 00:13:25,199
we'll come<font color="#E5E5E5"> back to this</font>

277
00:13:20,370 --> 00:13:28,699
so here is<font color="#CCCCCC"> my thesis for</font><font color="#E5E5E5"> the talk web</font>

278
00:13:25,199 --> 00:13:31,859
programming<font color="#CCCCCC"> is actually meta</font><font color="#E5E5E5"> programming</font>

279
00:13:28,699 --> 00:13:35,219
<font color="#E5E5E5">and in this context what I mean by meta</font>

280
00:13:31,860 --> 00:13:39,629
programming is you're writing<font color="#CCCCCC"> code that</font>

281
00:13:35,220 --> 00:13:41,910
<font color="#CCCCCC">writes code there are other parts of</font>

282
00:13:39,629 --> 00:13:44,699
meta programming<font color="#E5E5E5"> but in this context is</font>

283
00:13:41,910 --> 00:13:47,009
what I'm talking about<font color="#E5E5E5"> this is what</font>

284
00:13:44,699 --> 00:13:52,109
you're<font color="#E5E5E5"> doing when you build a web</font>

285
00:13:47,009 --> 00:13:54,569
application<font color="#CCCCCC"> if we look at that</font><font color="#E5E5E5"> the</font><font color="#CCCCCC"> the</font>

286
00:13:52,110 --> 00:13:56,579
black box with the glowing blue lights

287
00:13:54,569 --> 00:13:59,399
that's our web application on the<font color="#E5E5E5"> web</font>

288
00:13:56,579 --> 00:14:03,209
server<font color="#E5E5E5"> and if you think</font><font color="#CCCCCC"> about what it</font>

289
00:13:59,399 --> 00:14:05,790
has to do it has<font color="#CCCCCC"> to take in some stuff</font>

290
00:14:03,209 --> 00:14:08,790
<font color="#E5E5E5">from a browser</font><font color="#CCCCCC"> we get HTTP requests</font>

291
00:14:05,790 --> 00:14:12,209
opportunities for injection there may be

292
00:14:08,790 --> 00:14:15,230
some JSON some<font color="#E5E5E5"> XML form data query</font>

293
00:14:12,209 --> 00:14:17,479
parameters all that's coming in and

294
00:14:15,230 --> 00:14:19,829
<font color="#E5E5E5">maybe it's talking to some back-end</font>

295
00:14:17,480 --> 00:14:22,829
<font color="#CCCCCC">micro</font><font color="#E5E5E5"> services may is talking to a</font>

296
00:14:19,829 --> 00:14:26,370
<font color="#E5E5E5">database and then from all of that it</font>

297
00:14:22,829 --> 00:14:28,349
has to generate<font color="#CCCCCC"> something that gets sent</font>

298
00:14:26,370 --> 00:14:31,709
<font color="#E5E5E5">back to a browser it's going to be an</font>

299
00:14:28,350 --> 00:14:34,620
HTTP response and you're probably<font color="#E5E5E5"> gonna</font>

300
00:14:31,709 --> 00:14:38,819
<font color="#E5E5E5">have HTML and JavaScript and maybe some</font>

301
00:14:34,620 --> 00:14:41,069
JSON and CSS so it's essentially taking

302
00:14:38,819 --> 00:14:43,620
<font color="#E5E5E5">this and generating code and that code</font>

303
00:14:41,069 --> 00:14:45,290
is<font color="#CCCCCC"> going to</font><font color="#E5E5E5"> be interpreted actually you</font>

304
00:14:43,620 --> 00:14:47,309
know it's interpreted in the browser

305
00:14:45,290 --> 00:14:49,040
<font color="#CCCCCC">there's also like</font><font color="#E5E5E5"> things along the way</font>

306
00:14:47,309 --> 00:14:52,889
<font color="#E5E5E5">right there's the</font><font color="#CCCCCC"> web server</font><font color="#E5E5E5"> itself</font>

307
00:14:49,040 --> 00:14:55,559
<font color="#CCCCCC">there may be networking</font><font color="#E5E5E5"> devices along</font>

308
00:14:52,889 --> 00:14:57,269
the way all<font color="#CCCCCC"> of</font><font color="#E5E5E5"> that and then</font><font color="#CCCCCC"> you</font><font color="#E5E5E5"> have</font>

309
00:14:55,559 --> 00:15:00,089
the<font color="#E5E5E5"> browser itself and in the browser</font>

310
00:14:57,269 --> 00:15:02,910
<font color="#CCCCCC">you may also be like having</font><font color="#E5E5E5"> JavaScript</font>

311
00:15:00,089 --> 00:15:04,860
that generates<font color="#CCCCCC"> HTML and CSS and maybe</font>

312
00:15:02,910 --> 00:15:06,899
it's even generating other JavaScript

313
00:15:04,860 --> 00:15:12,029
that<font color="#E5E5E5"> it then interprets so there's a lot</font>

314
00:15:06,899 --> 00:15:14,730
<font color="#E5E5E5">of code generation happening here so</font>

315
00:15:12,029 --> 00:15:17,610
<font color="#E5E5E5">really what programming is compiler</font>

316
00:15:14,730 --> 00:15:19,439
construction<font color="#CCCCCC"> we're</font><font color="#E5E5E5"> building a compiler</font>

317
00:15:17,610 --> 00:15:21,120
<font color="#CCCCCC">that's</font><font color="#E5E5E5"> going to take in inputs and it's</font>

318
00:15:19,439 --> 00:15:25,248
<font color="#E5E5E5">going to generate code that's going to</font>

319
00:15:21,120 --> 00:15:29,399
<font color="#E5E5E5">go and get interpreted and evaluated</font>

320
00:15:25,249 --> 00:15:31,829
<font color="#CCCCCC">however unlike a</font><font color="#E5E5E5"> most compilers we're</font>

321
00:15:29,399 --> 00:15:33,030
doing it with untrusted values that are

322
00:15:31,829 --> 00:15:36,089
coming in

323
00:15:33,030 --> 00:15:38,970
and that just makes<font color="#E5E5E5"> it even harder</font><font color="#CCCCCC"> so</font><font color="#E5E5E5"> we</font>

324
00:15:36,090 --> 00:15:42,270
have this like<font color="#E5E5E5"> complicated system where</font>

325
00:15:38,970 --> 00:15:44,310
we're building<font color="#CCCCCC"> this compiler and we also</font>

326
00:15:42,270 --> 00:15:46,740
have to worry about<font color="#E5E5E5"> people giving</font><font color="#CCCCCC"> us</font>

327
00:15:44,310 --> 00:15:50,400
values that are untrusted in unsafe and

328
00:15:46,740 --> 00:15:53,820
handling<font color="#E5E5E5"> those all correctly to generate</font>

329
00:15:50,400 --> 00:15:58,650
safe code for our<font color="#E5E5E5"> users and for our</font>

330
00:15:53,820 --> 00:16:00,030
back-end<font color="#CCCCCC"> and so on and I like</font><font color="#E5E5E5"> you just</font>

331
00:15:58,650 --> 00:16:03,660
<font color="#E5E5E5">like kind</font><font color="#CCCCCC"> of take that in for a moment</font>

332
00:16:00,030 --> 00:16:06,449
<font color="#CCCCCC">because this is the route of injection</font>

333
00:16:03,660 --> 00:16:08,160
vulnerabilities is that this is what you

334
00:16:06,450 --> 00:16:10,830
have to do when<font color="#E5E5E5"> you're building a web</font>

335
00:16:08,160 --> 00:16:15,089
application<font color="#E5E5E5"> and that's a lot to deal</font>

336
00:16:10,830 --> 00:16:18,450
with<font color="#E5E5E5"> so if we look at how you would</font>

337
00:16:15,090 --> 00:16:20,160
<font color="#E5E5E5">normally</font><font color="#CCCCCC"> build a</font><font color="#E5E5E5"> compiler you would</font>

338
00:16:18,450 --> 00:16:22,770
start off with some source<font color="#CCCCCC"> code which by</font>

339
00:16:20,160 --> 00:16:27,569
the way is probably trusted source code

340
00:16:22,770 --> 00:16:30,180
<font color="#E5E5E5">and at that point you take it in you</font>

341
00:16:27,570 --> 00:16:31,680
turn<font color="#E5E5E5"> it into a stream of tokens then</font>

342
00:16:30,180 --> 00:16:34,650
that gets<font color="#E5E5E5"> turned into an app check</font>

343
00:16:31,680 --> 00:16:36,140
syntax<font color="#E5E5E5"> tree then you</font><font color="#CCCCCC"> kind of turn into</font>

344
00:16:34,650 --> 00:16:39,630
like another tree but it has more

345
00:16:36,140 --> 00:16:41,100
semantic<font color="#CCCCCC"> information</font><font color="#E5E5E5"> then</font><font color="#CCCCCC"> that gets run</font>

346
00:16:39,630 --> 00:16:43,439
through a bunch<font color="#E5E5E5"> of iterations of</font>

347
00:16:41,100 --> 00:16:45,720
intermediate representations<font color="#E5E5E5"> and then at</font>

348
00:16:43,440 --> 00:16:47,960
the end<font color="#E5E5E5"> you</font><font color="#CCCCCC"> have</font><font color="#E5E5E5"> compiled code either</font>

349
00:16:45,720 --> 00:16:51,420
you know binary or some kind of source

350
00:16:47,960 --> 00:16:53,490
code that gets interpreted<font color="#E5E5E5"> so I just</font>

351
00:16:51,420 --> 00:16:56,550
<font color="#E5E5E5">want to point out that at</font><font color="#CCCCCC"> the top</font><font color="#E5E5E5"> we</font>

352
00:16:53,490 --> 00:16:59,100
<font color="#CCCCCC">have text</font><font color="#E5E5E5"> and at the bottom we have text</font>

353
00:16:56,550 --> 00:17:03,870
<font color="#CCCCCC">or binary that comes out in the</font><font color="#E5E5E5"> middle</font>

354
00:16:59,100 --> 00:17:07,110
when you're making a compiler<font color="#E5E5E5"> you don't</font>

355
00:17:03,870 --> 00:17:11,069
deal with<font color="#E5E5E5"> text you're not manipulating</font>

356
00:17:07,109 --> 00:17:13,020
<font color="#CCCCCC">strings</font><font color="#E5E5E5"> unless you're really</font>

357
00:17:11,069 --> 00:17:14,790
<font color="#CCCCCC">inexperienced at writing compilers like</font>

358
00:17:13,020 --> 00:17:16,770
I did once and tried<font color="#CCCCCC"> to do it with</font>

359
00:17:14,790 --> 00:17:20,819
<font color="#E5E5E5">string manipulation</font><font color="#CCCCCC"> and it's a mess you</font>

360
00:17:16,770 --> 00:17:23,160
don't<font color="#E5E5E5"> want to do it it's very hard</font><font color="#CCCCCC"> but</font>

361
00:17:20,819 --> 00:17:26,280
<font color="#E5E5E5">that is what you do when you write a web</font>

362
00:17:23,160 --> 00:17:30,270
application<font color="#CCCCCC"> you're</font><font color="#E5E5E5"> actually building a</font>

363
00:17:26,280 --> 00:17:32,700
complex compiler and most likely<font color="#E5E5E5"> you're</font>

364
00:17:30,270 --> 00:17:35,040
doing it<font color="#E5E5E5"> all via string manipulation</font><font color="#CCCCCC"> we</font>

365
00:17:32,700 --> 00:17:37,580
have our templates we have our quiz<font color="#CCCCCC"> that</font>

366
00:17:35,040 --> 00:17:40,980
we send to<font color="#E5E5E5"> a database it's all strings</font>

367
00:17:37,580 --> 00:17:42,750
<font color="#E5E5E5">string manipulation</font><font color="#CCCCCC"> that's why I show</font>

368
00:17:40,980 --> 00:17:44,820
<font color="#CCCCCC">you</font><font color="#E5E5E5"> all those code examples it's all</font>

369
00:17:42,750 --> 00:17:46,480
building<font color="#CCCCCC"> up strings that</font><font color="#E5E5E5"> you hand off</font><font color="#CCCCCC"> to</font>

370
00:17:44,820 --> 00:17:48,639
an interpreter

371
00:17:46,480 --> 00:17:53,289
and again we're<font color="#CCCCCC"> doing it with untrusted</font>

372
00:17:48,639 --> 00:17:56,289
values<font color="#E5E5E5"> so that seems like a great</font><font color="#CCCCCC"> way to</font>

373
00:17:53,289 --> 00:18:01,149
get vulnerabilities and it is that's why

374
00:17:56,289 --> 00:18:04,360
injection is at the top<font color="#CCCCCC"> just to</font>

375
00:18:01,149 --> 00:18:08,709
<font color="#E5E5E5">reiterate we're building these complex</font>

376
00:18:04,360 --> 00:18:13,840
<font color="#CCCCCC">systems using string manipulation with</font>

377
00:18:08,710 --> 00:18:18,279
untrusted values<font color="#CCCCCC"> alright</font><font color="#E5E5E5"> so back</font><font color="#CCCCCC"> to the</font>

378
00:18:13,840 --> 00:18:20,199
real<font color="#E5E5E5"> world how what what are the</font>

379
00:18:18,279 --> 00:18:23,950
suggestions<font color="#E5E5E5"> for preventing sequel</font>

380
00:18:20,200 --> 00:18:26,980
injection<font color="#CCCCCC"> you could use an ORM and if</font>

381
00:18:23,950 --> 00:18:32,080
the ORM is good right it should<font color="#E5E5E5"> help you</font>

382
00:18:26,980 --> 00:18:33,549
avoid sequel injection<font color="#CCCCCC"> however first</font><font color="#E5E5E5"> of</font>

383
00:18:32,080 --> 00:18:35,620
all you have to<font color="#CCCCCC"> have like the</font><font color="#E5E5E5"> object</font>

384
00:18:33,549 --> 00:18:37,870
mapping<font color="#E5E5E5"> and not all applications make</font>

385
00:18:35,620 --> 00:18:39,639
sense to have an<font color="#CCCCCC"> object mapping</font><font color="#E5E5E5"> not all</font>

386
00:18:37,870 --> 00:18:43,239
queries<font color="#E5E5E5"> make sense to have an object</font>

387
00:18:39,639 --> 00:18:44,379
<font color="#CCCCCC">mapping</font><font color="#E5E5E5"> and at some point developers</font><font color="#CCCCCC"> are</font>

388
00:18:43,240 --> 00:18:47,350
<font color="#E5E5E5">going to want to write just like a</font>

389
00:18:44,380 --> 00:18:51,100
normal sequel query<font color="#E5E5E5"> that doesn't again</font>

390
00:18:47,350 --> 00:18:52,389
have<font color="#E5E5E5"> this mapping so even if you use an</font>

391
00:18:51,100 --> 00:18:53,559
ORM<font color="#CCCCCC"> there's</font><font color="#E5E5E5"> probably going</font><font color="#CCCCCC"> to</font><font color="#E5E5E5"> be a</font>

392
00:18:52,389 --> 00:18:57,840
method<font color="#E5E5E5"> somewhere where you can just</font>

393
00:18:53,559 --> 00:19:01,539
shove in some sequel query

394
00:18:57,840 --> 00:19:05,289
parameterization<font color="#E5E5E5"> is generally like</font><font color="#CCCCCC"> the</font>

395
00:19:01,539 --> 00:19:08,700
most commonly recommended<font color="#E5E5E5"> way</font><font color="#CCCCCC"> of</font>

396
00:19:05,289 --> 00:19:13,809
preventing<font color="#E5E5E5"> sequel injection</font><font color="#CCCCCC"> right and it</font>

397
00:19:08,700 --> 00:19:18,700
mostly works<font color="#E5E5E5"> except first of all you're</font>

398
00:19:13,809 --> 00:19:21,070
<font color="#CCCCCC">still</font><font color="#E5E5E5"> doing string manipulation and it</font>

399
00:19:18,700 --> 00:19:23,710
tends to<font color="#E5E5E5"> be limited on where you can put</font>

400
00:19:21,070 --> 00:19:28,480
<font color="#E5E5E5">these placeholders</font><font color="#CCCCCC"> if you put them like</font>

401
00:19:23,710 --> 00:19:31,330
<font color="#E5E5E5">in like a column name or a table name it</font>

402
00:19:28,480 --> 00:19:32,649
made mess up the query<font color="#E5E5E5"> and not really</font>

403
00:19:31,330 --> 00:19:34,750
work<font color="#E5E5E5"> all right</font>

404
00:19:32,649 --> 00:19:37,330
and again we're like<font color="#E5E5E5"> doing stream</font>

405
00:19:34,750 --> 00:19:39,070
manipulation<font color="#E5E5E5"> and then of course</font><font color="#CCCCCC"> if we're</font>

406
00:19:37,330 --> 00:19:40,629
<font color="#E5E5E5">just manually escaping things first of</font>

407
00:19:39,070 --> 00:19:43,510
<font color="#E5E5E5">all</font><font color="#CCCCCC"> we have to make sure</font><font color="#E5E5E5"> we call the</font>

408
00:19:40,630 --> 00:19:46,570
right method<font color="#E5E5E5"> to escape the right data so</font>

409
00:19:43,510 --> 00:19:49,419
now we're<font color="#CCCCCC"> back</font><font color="#E5E5E5"> in like XSS land and</font>

410
00:19:46,570 --> 00:19:51,580
we're building strings so I think<font color="#E5E5E5"> I</font>

411
00:19:49,419 --> 00:19:54,100
probably<font color="#CCCCCC"> like hammered that point</font><font color="#E5E5E5"> home</font>

412
00:19:51,580 --> 00:19:59,080
enough right<font color="#CCCCCC"> like we're building</font><font color="#E5E5E5"> strings</font>

413
00:19:54,100 --> 00:20:00,939
and that's bad<font color="#E5E5E5"> so here are</font><font color="#CCCCCC"> my</font>

414
00:19:59,080 --> 00:20:05,050
suggestions<font color="#CCCCCC"> and this is where we get</font>

415
00:20:00,940 --> 00:20:10,300
into<font color="#CCCCCC"> the like thought part of like you</font>

416
00:20:05,050 --> 00:20:14,590
<font color="#CCCCCC">know a little</font><font color="#E5E5E5"> bit vague so here's my</font>

417
00:20:10,300 --> 00:20:18,100
first suggestion<font color="#E5E5E5"> let's stop providing</font>

418
00:20:14,590 --> 00:20:21,129
unsafe<font color="#E5E5E5"> interfaces right so you're</font>

419
00:20:18,100 --> 00:20:23,939
building<font color="#E5E5E5"> an ORM and then you say okay I</font>

420
00:20:21,130 --> 00:20:28,600
have<font color="#CCCCCC"> all this great like</font><font color="#E5E5E5"> object-oriented</font>

421
00:20:23,940 --> 00:20:32,080
stuff that you can do<font color="#E5E5E5"> but I also have</font>

422
00:20:28,600 --> 00:20:33,490
<font color="#CCCCCC">just like you know execute sequel</font><font color="#E5E5E5"> and at</font>

423
00:20:32,080 --> 00:20:35,020
that point<font color="#E5E5E5"> what how are you going</font><font color="#CCCCCC"> to</font>

424
00:20:33,490 --> 00:20:36,810
execute<font color="#E5E5E5"> the sequel it's gonna be like a</font>

425
00:20:35,020 --> 00:20:39,160
string that you pass in<font color="#E5E5E5"> and now you have</font>

426
00:20:36,810 --> 00:20:40,810
<font color="#E5E5E5">you're basically saying like yeah I</font>

427
00:20:39,160 --> 00:20:43,270
offered you all this good stuff<font color="#CCCCCC"> and</font>

428
00:20:40,810 --> 00:20:47,490
here's the way of like<font color="#E5E5E5"> introducing a</font>

429
00:20:43,270 --> 00:20:51,280
vulnerability again<font color="#E5E5E5"> so some examples</font>

430
00:20:47,490 --> 00:20:52,260
<font color="#CCCCCC">stop providing</font><font color="#E5E5E5"> you</font><font color="#CCCCCC"> know execute</font><font color="#E5E5E5"> this</font>

431
00:20:51,280 --> 00:20:55,840
query

432
00:20:52,260 --> 00:20:57,760
maybe stop providing hey like you know

433
00:20:55,840 --> 00:21:00,399
here's your<font color="#E5E5E5"> shell-like execute whatever</font>

434
00:20:57,760 --> 00:21:01,840
<font color="#E5E5E5">you want and in these cases I'm talking</font>

435
00:21:00,400 --> 00:21:05,850
about like where you can just<font color="#E5E5E5"> pass in a</font>

436
00:21:01,840 --> 00:21:11,020
single string and<font color="#E5E5E5"> that's it will execute</font>

437
00:21:05,850 --> 00:21:13,300
rails<font color="#CCCCCC"> HTML safe is</font><font color="#E5E5E5"> not safe</font>

438
00:21:11,020 --> 00:21:16,180
a lot of templating languages like

439
00:21:13,300 --> 00:21:18,669
ginger they have like safe<font color="#E5E5E5"> again</font>

440
00:21:16,180 --> 00:21:21,640
it does the opposite<font color="#CCCCCC"> of what you mean so</font>

441
00:21:18,670 --> 00:21:24,640
let's stop<font color="#E5E5E5"> providing those kinds of</font>

442
00:21:21,640 --> 00:21:27,070
interfaces<font color="#CCCCCC"> in fact</font><font color="#E5E5E5"> for templating</font>

443
00:21:24,640 --> 00:21:29,950
languages in particular<font color="#CCCCCC"> one</font><font color="#E5E5E5"> thing I've</font>

444
00:21:27,070 --> 00:21:32,110
noticed is often missing is<font color="#E5E5E5"> that people</font>

445
00:21:29,950 --> 00:21:35,110
<font color="#CCCCCC">want to compose templates</font><font color="#E5E5E5"> right you want</font>

446
00:21:32,110 --> 00:21:37,389
<font color="#E5E5E5">to reuse templates</font><font color="#CCCCCC"> and if you don't have</font>

447
00:21:35,110 --> 00:21:39,159
a good<font color="#CCCCCC"> built-in way of saying like okay</font>

448
00:21:37,390 --> 00:21:41,140
here<font color="#E5E5E5"> I'm going to</font><font color="#CCCCCC"> combine this template</font>

449
00:21:39,160 --> 00:21:43,360
<font color="#E5E5E5">and that template in that template then</font>

450
00:21:41,140 --> 00:21:46,770
people do stuff<font color="#CCCCCC"> like this</font><font color="#E5E5E5"> where like the</font>

451
00:21:43,360 --> 00:21:49,840
template value comes in as a string<font color="#E5E5E5"> and</font>

452
00:21:46,770 --> 00:21:52,270
then<font color="#E5E5E5"> you throw it in something like this</font>

453
00:21:49,840 --> 00:21:53,980
<font color="#CCCCCC">anyway well it has</font><font color="#E5E5E5"> I I can't escape it</font>

454
00:21:52,270 --> 00:21:56,530
<font color="#E5E5E5">because I</font><font color="#CCCCCC"> just generated</font><font color="#E5E5E5"> a bunch of HTML</font>

455
00:21:53,980 --> 00:21:58,960
<font color="#E5E5E5">from this other template so now I have</font>

456
00:21:56,530 --> 00:22:02,050
to mark<font color="#E5E5E5"> it as safe and it's just a poor</font>

457
00:21:58,960 --> 00:22:02,920
way<font color="#CCCCCC"> of composing templates so provide</font>

458
00:22:02,050 --> 00:22:06,649
better interfaces

459
00:22:02,920 --> 00:22:11,360
you know<font color="#E5E5E5"> enter</font><font color="#CCCCCC"> HTML</font>

460
00:22:06,650 --> 00:22:15,590
just stop<font color="#CCCCCC"> doing that another thing I</font>

461
00:22:11,360 --> 00:22:18,379
<font color="#E5E5E5">want to mention is that any library that</font>

462
00:22:15,590 --> 00:22:21,379
you write is probably<font color="#E5E5E5"> going to</font><font color="#CCCCCC"> end up</font>

463
00:22:18,380 --> 00:22:23,810
being used on<font color="#E5E5E5"> the Internet at some point</font>

464
00:22:21,380 --> 00:22:26,450
and I<font color="#E5E5E5"> think we've</font><font color="#CCCCCC"> seen a</font><font color="#E5E5E5"> lot of examples</font>

465
00:22:23,810 --> 00:22:28,760
<font color="#CCCCCC">of this where especially</font><font color="#E5E5E5"> older libraries</font>

466
00:22:26,450 --> 00:22:32,750
someone goes oh well I need<font color="#CCCCCC"> this to you</font>

467
00:22:28,760 --> 00:22:34,700
know process<font color="#E5E5E5"> this file or maybe I'll</font>

468
00:22:32,750 --> 00:22:38,180
shell out to it because it's handy and

469
00:22:34,700 --> 00:22:40,280
it's useful<font color="#CCCCCC"> now</font>

470
00:22:38,180 --> 00:22:42,590
the<font color="#E5E5E5"> original library author probably</font>

471
00:22:40,280 --> 00:22:47,149
didn't even<font color="#E5E5E5"> consider that hey maybe this</font>

472
00:22:42,590 --> 00:22:51,020
might accept untrusted input at some

473
00:22:47,150 --> 00:22:53,690
point so as we're<font color="#E5E5E5"> writing libraries we</font>

474
00:22:51,020 --> 00:22:55,790
<font color="#CCCCCC">have to think about</font><font color="#E5E5E5"> like hey maybe the</font>

475
00:22:53,690 --> 00:22:58,700
at least<font color="#E5E5E5"> the default interfaces should</font>

476
00:22:55,790 --> 00:23:04,280
assume that<font color="#CCCCCC"> it could be dangerous input</font>

477
00:22:58,700 --> 00:23:07,000
this coming in<font color="#E5E5E5"> okay number</font><font color="#CCCCCC"> two</font><font color="#E5E5E5"> stop</font>

478
00:23:04,280 --> 00:23:12,440
providing string interfaces to libraries

479
00:23:07,000 --> 00:23:16,220
<font color="#E5E5E5">so if it makes sense as like the first</font>

480
00:23:12,440 --> 00:23:17,780
pass<font color="#CCCCCC"> right but</font><font color="#E5E5E5"> sequel injection as</font>

481
00:23:16,220 --> 00:23:20,110
mentioned earlier been around for<font color="#CCCCCC"> 20</font>

482
00:23:17,780 --> 00:23:22,370
<font color="#E5E5E5">years maybe we should stop building</font>

483
00:23:20,110 --> 00:23:26,659
database<font color="#E5E5E5"> squeeze by putting strings</font>

484
00:23:22,370 --> 00:23:28,489
together<font color="#E5E5E5"> here's an example from</font><font color="#CCCCCC"> the</font>

485
00:23:26,660 --> 00:23:30,470
rails world I'm not saying this<font color="#E5E5E5"> is like</font>

486
00:23:28,490 --> 00:23:33,340
<font color="#E5E5E5">the best way</font><font color="#CCCCCC"> to do things I'm just</font>

487
00:23:30,470 --> 00:23:36,350
saying this is<font color="#CCCCCC"> kind of give you an idea</font>

488
00:23:33,340 --> 00:23:38,709
instead<font color="#E5E5E5"> of</font><font color="#CCCCCC"> manipulating strings we're</font>

489
00:23:36,350 --> 00:23:41,240
kind of making<font color="#CCCCCC"> these method calls and</font>

490
00:23:38,710 --> 00:23:43,700
<font color="#E5E5E5">everything that gets passed in is going</font>

491
00:23:41,240 --> 00:23:46,250
<font color="#E5E5E5">to be treated appropriately</font><font color="#CCCCCC"> in the query</font>

492
00:23:43,700 --> 00:23:48,790
<font color="#E5E5E5">so we can pass</font><font color="#CCCCCC"> in an untrusted input</font>

493
00:23:46,250 --> 00:23:51,800
here and<font color="#CCCCCC"> it'll</font><font color="#E5E5E5"> be properly escaped</font><font color="#CCCCCC"> and</font>

494
00:23:48,790 --> 00:23:53,090
it will<font color="#E5E5E5"> generate the</font><font color="#CCCCCC"> query for us so</font>

495
00:23:51,800 --> 00:23:55,250
we're not<font color="#CCCCCC"> working</font><font color="#E5E5E5"> at the stream</font><font color="#CCCCCC"> level</font>

496
00:23:53,090 --> 00:23:58,120
anymore<font color="#E5E5E5"> we're like at least one step up</font>

497
00:23:55,250 --> 00:23:58,120
<font color="#E5E5E5">from there</font>

498
00:23:58,950 --> 00:24:03,400
but developers<font color="#CCCCCC"> I'm gonna write stuff</font>

499
00:24:01,330 --> 00:24:05,049
like<font color="#E5E5E5"> this not just developers everybody</font>

500
00:24:03,400 --> 00:24:07,990
<font color="#CCCCCC">every way</font><font color="#E5E5E5"> wants to write code like this</font>

501
00:24:05,049 --> 00:24:11,710
<font color="#CCCCCC">we're like whoa look</font><font color="#E5E5E5"> I am an</font><font color="#CCCCCC"> expert and</font>

502
00:24:07,990 --> 00:24:13,270
I need to do this complex query<font color="#E5E5E5"> and you</font>

503
00:24:11,710 --> 00:24:16,270
know I want to be able<font color="#E5E5E5"> to</font><font color="#CCCCCC"> generate it</font>

504
00:24:13,270 --> 00:24:18,850
<font color="#E5E5E5">dynamically so one thought that</font><font color="#CCCCCC"> I had</font>

505
00:24:16,270 --> 00:24:20,168
and I<font color="#E5E5E5"> think this is I think this is a</font>

506
00:24:18,850 --> 00:24:24,459
very<font color="#E5E5E5"> good thought which is why I'm</font>

507
00:24:20,169 --> 00:24:25,870
<font color="#CCCCCC">sharing it with you</font><font color="#E5E5E5"> so I'm sorry we're</font>

508
00:24:24,460 --> 00:24:29,410
getting like rails heavy here but it's

509
00:24:25,870 --> 00:24:33,158
like<font color="#CCCCCC"> where my experience is if we have</font>

510
00:24:29,410 --> 00:24:37,390
query parameters and our framework knows

511
00:24:33,159 --> 00:24:39,370
that it's a query parameter<font color="#CCCCCC"> right and we</font>

512
00:24:37,390 --> 00:24:42,010
try<font color="#E5E5E5"> to put a query parameter into a</font>

513
00:24:39,370 --> 00:24:44,889
string<font color="#E5E5E5"> well maybe our query parameter</font>

514
00:24:42,010 --> 00:24:48,129
shouldn't be a string type<font color="#E5E5E5"> it should be</font>

515
00:24:44,890 --> 00:24:50,770
a query<font color="#E5E5E5"> parameter type let's say and if</font>

516
00:24:48,130 --> 00:24:53,590
we try to even put it into<font color="#CCCCCC"> a string</font><font color="#E5E5E5"> we</font>

517
00:24:50,770 --> 00:24:56,320
should get an<font color="#E5E5E5"> exception so</font><font color="#CCCCCC"> this kind of</font>

518
00:24:53,590 --> 00:24:58,780
is<font color="#CCCCCC"> like hey if you try to build up</font>

519
00:24:56,320 --> 00:25:02,168
strings using unsafe input we're just

520
00:24:58,780 --> 00:25:04,840
not<font color="#CCCCCC"> going</font><font color="#E5E5E5"> to let you do that and I think</font>

521
00:25:02,169 --> 00:25:07,510
<font color="#E5E5E5">this has a lot of promise because again</font>

522
00:25:04,840 --> 00:25:09,939
the framework already<font color="#E5E5E5"> knows the types of</font>

523
00:25:07,510 --> 00:25:12,820
these values right<font color="#CCCCCC"> it knows that this</font>

524
00:25:09,940 --> 00:25:15,429
came from a<font color="#E5E5E5"> query parameter so if we</font>

525
00:25:12,820 --> 00:25:19,389
just say well<font color="#CCCCCC"> you can't add query</font>

526
00:25:15,429 --> 00:25:24,190
parameters to a string<font color="#E5E5E5"> and don't offer a</font>

527
00:25:19,390 --> 00:25:26,320
<font color="#CCCCCC">to string method okay</font><font color="#E5E5E5"> then we kind of</font>

528
00:25:24,190 --> 00:25:28,830
eliminate this<font color="#E5E5E5"> and instead we have to</font>

529
00:25:26,320 --> 00:25:31,840
offer<font color="#E5E5E5"> a safe interface for composing</font>

530
00:25:28,830 --> 00:25:35,980
<font color="#E5E5E5">quick parameters or form values or</font>

531
00:25:31,840 --> 00:25:37,720
whatever<font color="#E5E5E5"> and database queries it's just</font>

532
00:25:35,980 --> 00:25:43,049
a thought but I think it has a lot<font color="#CCCCCC"> of</font>

533
00:25:37,720 --> 00:25:45,370
promise this is ancient<font color="#CCCCCC"> does anyone</font>

534
00:25:43,049 --> 00:25:47,889
remember<font color="#E5E5E5"> does anyone know what</font><font color="#CCCCCC"> Mark</font>

535
00:25:45,370 --> 00:25:54,489
could be is no<font color="#CCCCCC"> cuz you're not</font><font color="#E5E5E5"> you're not</font>

536
00:25:47,890 --> 00:25:57,280
huh<font color="#E5E5E5"> no sorry</font>

537
00:25:54,490 --> 00:25:58,960
so a long<font color="#CCCCCC"> time</font><font color="#E5E5E5"> ago there was a guy</font><font color="#CCCCCC"> in</font>

538
00:25:57,280 --> 00:26:02,049
the Ruby<font color="#CCCCCC"> community named why the lucky</font>

539
00:25:58,960 --> 00:26:04,570
stiff<font color="#E5E5E5"> and there's like you there's like</font>

540
00:26:02,049 --> 00:26:05,889
<font color="#E5E5E5">a I can't remember the publication but</font>

541
00:26:04,570 --> 00:26:06,879
they did like this whole<font color="#CCCCCC"> big article</font><font color="#E5E5E5"> on</font>

542
00:26:05,890 --> 00:26:09,120
him when<font color="#E5E5E5"> he disappeared</font>

543
00:26:06,880 --> 00:26:11,160
<font color="#E5E5E5">anyways he had this library and I don't</font>

544
00:26:09,120 --> 00:26:13,229
that this<font color="#E5E5E5"> is a great idea</font><font color="#CCCCCC"> I didn't</font>

545
00:26:11,160 --> 00:26:16,740
really catch on<font color="#E5E5E5"> and it's it's</font><font color="#CCCCCC"> very like</font>

546
00:26:13,230 --> 00:26:20,040
heavy but the idea is<font color="#E5E5E5"> like I'm</font><font color="#CCCCCC"> composing</font>

547
00:26:16,740 --> 00:26:23,130
HTML but I'm not working<font color="#CCCCCC"> with</font><font color="#E5E5E5"> strings</font><font color="#CCCCCC"> I</font>

548
00:26:20,040 --> 00:26:24,870
have data values and I have<font color="#E5E5E5"> method calls</font>

549
00:26:23,130 --> 00:26:28,860
that I'm making and then that will

550
00:26:24,870 --> 00:26:31,500
generate the<font color="#CCCCCC"> HTML for me</font><font color="#E5E5E5"> and again not</font>

551
00:26:28,860 --> 00:26:34,260
saying this is a great<font color="#CCCCCC"> idea</font><font color="#E5E5E5"> but</font><font color="#CCCCCC"> the idea</font>

552
00:26:31,500 --> 00:26:37,590
<font color="#CCCCCC">is</font><font color="#E5E5E5"> that what what can we do</font>

553
00:26:34,260 --> 00:26:41,310
that is not manipulating strings<font color="#E5E5E5"> but</font>

554
00:26:37,590 --> 00:26:45,139
still gets us to generating those values

555
00:26:41,310 --> 00:26:48,540
safely at some point so it's a thought

556
00:26:45,140 --> 00:26:51,690
<font color="#CCCCCC">and like I said it's a thought talk so</font>

557
00:26:48,540 --> 00:26:54,090
it's just<font color="#CCCCCC"> the thought</font><font color="#E5E5E5"> I'm sure some</font><font color="#CCCCCC"> of</font>

558
00:26:51,690 --> 00:26:57,390
you can come<font color="#CCCCCC"> up with</font><font color="#E5E5E5"> like a better way</font>

559
00:26:54,090 --> 00:27:00,000
<font color="#E5E5E5">to</font><font color="#CCCCCC"> to</font><font color="#E5E5E5"> build this kind</font><font color="#CCCCCC"> of interface but</font>

560
00:26:57,390 --> 00:27:07,650
the idea<font color="#E5E5E5"> is to get</font><font color="#CCCCCC"> away from like</font>

561
00:27:00,000 --> 00:27:12,000
strings<font color="#E5E5E5"> right</font><font color="#CCCCCC"> number three</font><font color="#E5E5E5"> if you're</font>

562
00:27:07,650 --> 00:27:16,370
going to be accepting code<font color="#CCCCCC"> let's say a</font>

563
00:27:12,000 --> 00:27:20,700
database query or even like a shell like

564
00:27:16,370 --> 00:27:24,350
shelling out somewhere<font color="#CCCCCC"> do you need</font><font color="#E5E5E5"> like</font>

565
00:27:20,700 --> 00:27:30,870
the full power of a programming<font color="#CCCCCC"> language</font>

566
00:27:24,350 --> 00:27:32,909
<font color="#E5E5E5">in that particular scenario like do you</font>

567
00:27:30,870 --> 00:27:34,500
really<font color="#CCCCCC"> eat</font><font color="#E5E5E5"> a Turing complete language or</font>

568
00:27:32,910 --> 00:27:36,390
can you restrict that language in some

569
00:27:34,500 --> 00:27:38,820
way<font color="#E5E5E5"> because the more you restrict the</font>

570
00:27:36,390 --> 00:27:41,060
language<font color="#E5E5E5"> that you accept the more you</font>

571
00:27:38,820 --> 00:27:44,700
eliminate potential vulnerabilities<font color="#E5E5E5"> I</font>

572
00:27:41,060 --> 00:27:48,360
think a good<font color="#CCCCCC"> example is HTML if you only</font>

573
00:27:44,700 --> 00:27:50,940
had HTML but no JavaScript<font color="#E5E5E5"> no flash</font>

574
00:27:48,360 --> 00:27:52,530
anything like that you're kind<font color="#CCCCCC"> of</font>

575
00:27:50,940 --> 00:27:55,310
limiting what you can do you can do like

576
00:27:52,530 --> 00:27:58,470
<font color="#CCCCCC">some content injection maybe you know</font>

577
00:27:55,310 --> 00:28:00,419
<font color="#E5E5E5">but you're not you can't really execute</font>

578
00:27:58,470 --> 00:28:03,480
code<font color="#CCCCCC"> you know how the opportunity to</font>

579
00:28:00,420 --> 00:28:07,560
like have a Bitcoin miner<font color="#E5E5E5"> in an ad right</font>

580
00:28:03,480 --> 00:28:09,390
<font color="#E5E5E5">it's just you can't do it or if you can</font>

581
00:28:07,560 --> 00:28:12,980
you should probably give a talk on<font color="#CCCCCC"> that</font>

582
00:28:09,390 --> 00:28:15,620
because<font color="#E5E5E5"> that</font><font color="#CCCCCC"> would be</font><font color="#E5E5E5"> really impressive</font>

583
00:28:12,980 --> 00:28:19,550
again it's just<font color="#E5E5E5"> like</font><font color="#CCCCCC"> a thought that if</font>

584
00:28:15,620 --> 00:28:20,989
you're building an interface<font color="#E5E5E5"> it you know</font>

585
00:28:19,550 --> 00:28:23,330
<font color="#E5E5E5">if you're building a</font><font color="#CCCCCC"> library or</font>

586
00:28:20,990 --> 00:28:26,420
interface generally you're thinking like

587
00:28:23,330 --> 00:28:28,850
<font color="#E5E5E5">I want to provide the programmer all the</font>

588
00:28:26,420 --> 00:28:31,310
power<font color="#E5E5E5"> that they could</font><font color="#CCCCCC"> possibly need and</font>

589
00:28:28,850 --> 00:28:34,129
then it's their job<font color="#CCCCCC"> to figure</font><font color="#E5E5E5"> out like</font>

590
00:28:31,310 --> 00:28:36,590
how to use it safely<font color="#E5E5E5"> maybe think about</font>

591
00:28:34,130 --> 00:28:39,470
<font color="#CCCCCC">it the other way</font><font color="#E5E5E5"> right what do I have to</font>

592
00:28:36,590 --> 00:28:41,990
expose and what can I leave<font color="#E5E5E5"> out</font><font color="#CCCCCC"> another</font>

593
00:28:39,470 --> 00:28:45,910
good example<font color="#CCCCCC"> is if you're creating a</font>

594
00:28:41,990 --> 00:28:49,400
database<font color="#E5E5E5"> library</font><font color="#CCCCCC"> do you need to allow</font>

595
00:28:45,910 --> 00:28:52,790
multiple<font color="#E5E5E5"> queries to</font><font color="#CCCCCC"> be executed in one</font>

596
00:28:49,400 --> 00:28:54,740
call because a whole lot<font color="#E5E5E5"> of sequel</font>

597
00:28:52,790 --> 00:28:59,300
injection payloads rely on<font color="#CCCCCC"> being able to</font>

598
00:28:54,740 --> 00:29:01,640
<font color="#E5E5E5">get a semicolon or a new line in where</font>

599
00:28:59,300 --> 00:29:04,280
they can end<font color="#E5E5E5"> your current query and</font>

600
00:29:01,640 --> 00:29:06,560
execute a second query those kinds of

601
00:29:04,280 --> 00:29:11,500
things are ways that you<font color="#E5E5E5"> can limit the</font>

602
00:29:06,560 --> 00:29:14,840
<font color="#E5E5E5">impact if a vulnerability occurs okay</font>

603
00:29:11,500 --> 00:29:17,450
number<font color="#CCCCCC"> four</font><font color="#E5E5E5"> provide context aware</font>

604
00:29:14,840 --> 00:29:20,419
escaping<font color="#E5E5E5"> so now now we're going</font><font color="#CCCCCC"> back and</font>

605
00:29:17,450 --> 00:29:25,790
we're<font color="#E5E5E5"> like</font><font color="#CCCCCC"> hey</font><font color="#E5E5E5"> we're going back to</font>

606
00:29:20,420 --> 00:29:29,390
strings<font color="#E5E5E5"> because honestly you're building</font>

607
00:29:25,790 --> 00:29:32,120
an HTML page<font color="#CCCCCC"> it's a whole bunch</font><font color="#E5E5E5"> of you</font>

608
00:29:29,390 --> 00:29:34,070
know<font color="#E5E5E5"> text it's a lot easier</font><font color="#CCCCCC"> to just</font><font color="#E5E5E5"> like</font>

609
00:29:32,120 --> 00:29:34,729
write the HTML<font color="#CCCCCC"> and</font><font color="#E5E5E5"> then put dynamic</font>

610
00:29:34,070 --> 00:29:38,120
stuff in it

611
00:29:34,730 --> 00:29:40,760
right<font color="#E5E5E5"> so okay giving up on the other</font>

612
00:29:38,120 --> 00:29:43,870
<font color="#E5E5E5">ideas let's go back to okay I'm going to</font>

613
00:29:40,760 --> 00:29:46,820
<font color="#CCCCCC">build</font><font color="#E5E5E5"> strings but how</font><font color="#CCCCCC"> can I do</font><font color="#E5E5E5"> it safely</font>

614
00:29:43,870 --> 00:29:50,030
<font color="#E5E5E5">so going back</font><font color="#CCCCCC"> to this</font><font color="#E5E5E5"> all those</font>

615
00:29:46,820 --> 00:29:52,040
different contexts<font color="#CCCCCC"> what we want is to</font><font color="#E5E5E5"> be</font>

616
00:29:50,030 --> 00:29:54,530
<font color="#CCCCCC">able</font><font color="#E5E5E5"> to hand this to</font><font color="#CCCCCC"> our tip floating</font>

617
00:29:52,040 --> 00:29:56,899
library<font color="#E5E5E5"> and again</font><font color="#CCCCCC"> we're</font><font color="#E5E5E5"> like writing our</font>

618
00:29:54,530 --> 00:29:58,520
HTML we're even doing<font color="#E5E5E5"> things we cry a</font>

619
00:29:56,900 --> 00:30:00,460
 and<font color="#E5E5E5"> do like inline scripts and</font>

620
00:29:58,520 --> 00:30:04,820
inline<font color="#CCCCCC"> Styles</font>

621
00:30:00,460 --> 00:30:06,080
<font color="#E5E5E5">you know</font><font color="#CCCCCC"> and dynamic URLs and</font><font color="#E5E5E5"> so on</font><font color="#CCCCCC"> all</font>

622
00:30:04,820 --> 00:30:07,820
right look I'm just<font color="#E5E5E5"> going</font><font color="#CCCCCC"> to write</font><font color="#E5E5E5"> it</font>

623
00:30:06,080 --> 00:30:10,490
the way<font color="#CCCCCC"> I want</font><font color="#E5E5E5"> to write it and I'm gonna</font>

624
00:30:07,820 --> 00:30:12,260
hand it off<font color="#E5E5E5"> to my templating library and</font>

625
00:30:10,490 --> 00:30:14,630
it's gonna do<font color="#E5E5E5"> the right thing</font><font color="#CCCCCC"> for me</font>

626
00:30:12,260 --> 00:30:17,780
because<font color="#E5E5E5"> honestly remembering all this</font>

627
00:30:14,630 --> 00:30:20,840
and<font color="#E5E5E5"> doing it correctly</font><font color="#CCCCCC"> in all cases is</font>

628
00:30:17,780 --> 00:30:22,430
just<font color="#E5E5E5"> it's too much even if you have the</font>

629
00:30:20,840 --> 00:30:25,909
libraries<font color="#CCCCCC"> available to do</font><font color="#E5E5E5"> it which</font><font color="#CCCCCC"> is</font>

630
00:30:22,430 --> 00:30:28,670
also not often the<font color="#E5E5E5"> case</font>

631
00:30:25,910 --> 00:30:32,720
<font color="#E5E5E5">okay so there are at least four</font>

632
00:30:28,670 --> 00:30:35,560
libraries<font color="#E5E5E5"> that do this the HTML</font>

633
00:30:32,720 --> 00:30:39,200
templates that come with go do this

634
00:30:35,560 --> 00:30:41,720
<font color="#CCCCCC">there's C templates from Google</font>

635
00:30:39,200 --> 00:30:45,290
I'm not<font color="#E5E5E5"> is anyone familiar with C</font>

636
00:30:41,720 --> 00:30:48,320
templates<font color="#E5E5E5"> no they didn't seem like</font><font color="#CCCCCC"> super</font>

637
00:30:45,290 --> 00:30:52,040
well maintained<font color="#CCCCCC"> to me but they're out</font>

638
00:30:48,320 --> 00:30:54,889
there<font color="#E5E5E5"> also</font><font color="#CCCCCC"> if you use</font><font color="#E5E5E5"> them the auto</font>

639
00:30:52,040 --> 00:30:57,639
escaping is turned off by<font color="#CCCCCC"> default so</font>

640
00:30:54,890 --> 00:30:57,640
<font color="#CCCCCC">you'll</font><font color="#E5E5E5"> want to turn</font><font color="#CCCCCC"> on</font>

641
00:30:57,770 --> 00:31:05,389
<font color="#CCCCCC">Wattay looks really cool because it's</font>

642
00:31:02,510 --> 00:31:07,250
PHP which PHP normally you're like

643
00:31:05,390 --> 00:31:09,140
here's a bunch<font color="#CCCCCC"> of HTML and I'm going</font><font color="#E5E5E5"> to</font>

644
00:31:07,250 --> 00:31:11,570
put code all over<font color="#E5E5E5"> inside of it so it</font>

645
00:31:09,140 --> 00:31:16,310
<font color="#CCCCCC">will actually like do the right escaping</font>

646
00:31:11,570 --> 00:31:20,540
for you unless<font color="#CCCCCC"> it's a script context or</font>

647
00:31:16,310 --> 00:31:22,580
maybe CSS<font color="#E5E5E5"> but for the other</font><font color="#CCCCCC"> context</font><font color="#E5E5E5"> so</font>

648
00:31:20,540 --> 00:31:24,530
you<font color="#E5E5E5"> have like your PHP tags</font><font color="#CCCCCC"> it will</font>

649
00:31:22,580 --> 00:31:26,510
automatically pick the right<font color="#E5E5E5"> escaping</font>

650
00:31:24,530 --> 00:31:27,879
for<font color="#CCCCCC"> the right context which i think is</font>

651
00:31:26,510 --> 00:31:30,770
pretty amazing

652
00:31:27,880 --> 00:31:33,590
and then there's<font color="#E5E5E5"> secure handlebars which</font>

653
00:31:30,770 --> 00:31:38,960
was presented actually a<font color="#E5E5E5"> OPSEC USA</font>

654
00:31:33,590 --> 00:31:42,139
I believe 2015 and it<font color="#E5E5E5"> same thing like it</font>

655
00:31:38,960 --> 00:31:44,510
looks at your whole template parses the

656
00:31:42,140 --> 00:31:46,540
HTML and does the right kind of escaping

657
00:31:44,510 --> 00:31:52,160
<font color="#E5E5E5">for the input</font><font color="#CCCCCC"> that you're putting in I</font>

658
00:31:46,540 --> 00:31:54,110
think<font color="#CCCCCC"> this is fantastic and it's great</font>

659
00:31:52,160 --> 00:31:56,480
that<font color="#CCCCCC"> there's and there's probably</font><font color="#E5E5E5"> more</font>

660
00:31:54,110 --> 00:32:02,709
you might<font color="#E5E5E5"> know it more but these are the</font>

661
00:31:56,480 --> 00:32:07,330
<font color="#E5E5E5">ones that I found</font><font color="#CCCCCC"> so what if I wanted</font>

662
00:32:02,710 --> 00:32:09,770
sequel context-aware<font color="#CCCCCC"> Auto escaping I</font>

663
00:32:07,330 --> 00:32:14,740
couldn't find<font color="#E5E5E5"> anything like</font><font color="#CCCCCC"> this</font>

664
00:32:09,770 --> 00:32:17,540
and I think<font color="#CCCCCC"> if you watch the talk about</font>

665
00:32:14,740 --> 00:32:20,080
<font color="#E5E5E5">secure handlebars the majority of the</font>

666
00:32:17,540 --> 00:32:22,280
talk<font color="#CCCCCC"> is just</font><font color="#E5E5E5"> like how do we parse HTML</font>

667
00:32:20,080 --> 00:32:25,699
<font color="#E5E5E5">how do we parse the templates that</font>

668
00:32:22,280 --> 00:32:28,580
people use in a way that you know we can

669
00:32:25,700 --> 00:32:30,980
do the right<font color="#CCCCCC"> kind of</font><font color="#E5E5E5"> escaping and people</font>

670
00:32:28,580 --> 00:32:35,379
aren't<font color="#E5E5E5"> too restricted on you know they</font>

671
00:32:30,980 --> 00:32:37,360
don't<font color="#E5E5E5"> have to use like XHTML or whatever</font>

672
00:32:35,380 --> 00:32:39,640
<font color="#E5E5E5">if you go look</font>

673
00:32:37,360 --> 00:32:42,969
<font color="#E5E5E5">sequal parsers</font><font color="#CCCCCC"> you will find that it's</font>

674
00:32:39,640 --> 00:32:45,790
also a very hard<font color="#E5E5E5"> problem because every</font>

675
00:32:42,970 --> 00:32:48,280
<font color="#CCCCCC">database has like different</font><font color="#E5E5E5"> syntax and</font>

676
00:32:45,790 --> 00:32:53,620
different commands and different ways of

677
00:32:48,280 --> 00:32:55,360
escaping<font color="#E5E5E5"> and what I found is that it</font>

678
00:32:53,620 --> 00:32:58,090
seems<font color="#CCCCCC"> like this sort</font><font color="#E5E5E5"> of accepted</font>

679
00:32:55,360 --> 00:33:00,189
approach is just<font color="#E5E5E5"> rip the parser out of</font>

680
00:32:58,090 --> 00:33:02,740
the database<font color="#E5E5E5"> itself</font><font color="#CCCCCC"> it's like if you're</font>

681
00:33:00,190 --> 00:33:05,320
<font color="#CCCCCC">using Postgres like just take the parser</font>

682
00:33:02,740 --> 00:33:09,880
out of<font color="#E5E5E5"> Postgres and try to use that and</font>

683
00:33:05,320 --> 00:33:12,490
if you're thinking like<font color="#CCCCCC"> ok well</font><font color="#E5E5E5"> i'm to</font>

684
00:33:09,880 --> 00:33:15,160
modify the parser<font color="#E5E5E5"> so that</font><font color="#CCCCCC"> i can put you</font>

685
00:33:12,490 --> 00:33:17,200
know<font color="#CCCCCC"> question marks or brackets or</font>

686
00:33:15,160 --> 00:33:19,450
something in so that<font color="#CCCCCC"> i can put</font><font color="#E5E5E5"> the</font>

687
00:33:17,200 --> 00:33:22,990
values in like we saw in<font color="#E5E5E5"> the other</font>

688
00:33:19,450 --> 00:33:26,320
templates that's<font color="#E5E5E5"> really hard like that's</font>

689
00:33:22,990 --> 00:33:28,660
a hard job<font color="#E5E5E5"> so it'd</font><font color="#CCCCCC"> be</font><font color="#E5E5E5"> great if any of</font>

690
00:33:26,320 --> 00:33:30,159
you could tackle<font color="#CCCCCC"> that problem</font><font color="#E5E5E5"> you can</font>

691
00:33:28,660 --> 00:33:35,260
come back next year and<font color="#E5E5E5"> give a talk on</font>

692
00:33:30,160 --> 00:33:38,320
<font color="#E5E5E5">it would be awesome</font><font color="#CCCCCC"> well shell</font>

693
00:33:35,260 --> 00:33:39,700
context-aware<font color="#CCCCCC"> Auto escaping you will</font><font color="#E5E5E5"> not</font>

694
00:33:38,320 --> 00:33:41,559
find anything<font color="#E5E5E5"> about that</font>

695
00:33:39,700 --> 00:33:45,190
of course every shell is like a<font color="#E5E5E5"> little</font>

696
00:33:41,559 --> 00:33:46,809
bit different and<font color="#CCCCCC"> just like no one as</font>

697
00:33:45,190 --> 00:33:50,530
<font color="#E5E5E5">far as</font><font color="#CCCCCC"> I know no</font><font color="#E5E5E5"> one is even like</font>

698
00:33:46,809 --> 00:33:52,720
<font color="#E5E5E5">approach this problem right</font><font color="#CCCCCC"> and again</font>

699
00:33:50,530 --> 00:33:55,210
it's it's like<font color="#E5E5E5"> it's a hard problem</font>

700
00:33:52,720 --> 00:33:59,700
it's a parsing problem<font color="#E5E5E5"> it's a how do I</font>

701
00:33:55,210 --> 00:34:02,049
escape properly problem<font color="#E5E5E5"> all kinds of</font>

702
00:33:59,700 --> 00:34:10,690
difficulties<font color="#CCCCCC"> to build these</font><font color="#E5E5E5"> auto</font>

703
00:34:02,049 --> 00:34:13,149
escaping templating things right<font color="#CCCCCC"> so I'm</font>

704
00:34:10,690 --> 00:34:16,510
<font color="#E5E5E5">I'm hoping that some of</font><font color="#CCCCCC"> you in here are</font>

705
00:34:13,149 --> 00:34:20,649
<font color="#E5E5E5">thinking hey the framework</font><font color="#CCCCCC"> I know does</font>

706
00:34:16,510 --> 00:34:23,649
this and that<font color="#CCCCCC"> is cool</font><font color="#E5E5E5"> which is also a</font>

707
00:34:20,649 --> 00:34:27,940
<font color="#E5E5E5">town in California</font><font color="#CCCCCC"> if you</font><font color="#E5E5E5"> didn't know</font>

708
00:34:23,649 --> 00:34:29,980
like I didn't know but<font color="#CCCCCC"> so that's</font><font color="#E5E5E5"> great</font>

709
00:34:27,940 --> 00:34:31,330
<font color="#E5E5E5">like it's awesome</font><font color="#CCCCCC"> that</font><font color="#E5E5E5"> there are</font>

710
00:34:29,980 --> 00:34:33,580
frameworks<font color="#CCCCCC"> that</font><font color="#E5E5E5"> are doing that correctly</font>

711
00:34:31,330 --> 00:34:34,719
<font color="#E5E5E5">or I shouldn't</font><font color="#CCCCCC"> say</font><font color="#E5E5E5"> correctly but that</font>

712
00:34:33,580 --> 00:34:38,980
are offering<font color="#CCCCCC"> that kind of functionality</font>

713
00:34:34,719 --> 00:34:41,379
<font color="#CCCCCC">to</font><font color="#E5E5E5"> prevent injection issues however what</font>

714
00:34:38,980 --> 00:34:45,629
<font color="#CCCCCC">really we need is that every</font><font color="#E5E5E5"> framework</font>

715
00:34:41,379 --> 00:34:48,069
needs to provide this so can you imagine

716
00:34:45,629 --> 00:34:48,889
<font color="#E5E5E5">somebody</font><font color="#CCCCCC"> today is like</font><font color="#E5E5E5"> okay I'm gonna</font>

717
00:34:48,070 --> 00:34:50,960
<font color="#E5E5E5">build</font>

718
00:34:48,889 --> 00:34:53,919
web framework and they build it and they

719
00:34:50,960 --> 00:34:56,809
don't provide any kind of HTML escaping

720
00:34:53,918 --> 00:34:58,788
<font color="#E5E5E5">that would be ridiculous</font><font color="#CCCCCC"> right</font><font color="#E5E5E5"> everyone</font>

721
00:34:56,809 --> 00:35:00,799
would kind of<font color="#E5E5E5"> like laugh at it right</font>

722
00:34:58,789 --> 00:35:02,359
<font color="#E5E5E5">because that's that's just</font><font color="#CCCCCC"> silly</font><font color="#E5E5E5"> you</font>

723
00:35:00,799 --> 00:35:04,430
know<font color="#E5E5E5"> that you need</font><font color="#CCCCCC"> to have some way of</font>

724
00:35:02,359 --> 00:35:06,078
escaping values if you<font color="#E5E5E5"> build</font><font color="#CCCCCC"> a database</font>

725
00:35:04,430 --> 00:35:09,169
<font color="#CCCCCC">library and you don't provide</font><font color="#E5E5E5"> at least</font>

726
00:35:06,079 --> 00:35:11,390
query parameterization<font color="#CCCCCC"> people are gonna</font>

727
00:35:09,170 --> 00:35:13,039
be<font color="#E5E5E5"> like what is this right so we need to</font>

728
00:35:11,390 --> 00:35:16,009
<font color="#E5E5E5">move to a space where</font><font color="#CCCCCC"> things like</font>

729
00:35:13,039 --> 00:35:17,839
<font color="#E5E5E5">context-aware escaping is just expected</font>

730
00:35:16,010 --> 00:35:21,019
<font color="#CCCCCC">I expect that my templating libraries</font>

731
00:35:17,839 --> 00:35:22,700
will do this for<font color="#E5E5E5"> me</font><font color="#CCCCCC"> I mean</font><font color="#E5E5E5"> not in a way</font>

732
00:35:21,019 --> 00:35:24,589
I<font color="#E5E5E5"> don't mean that in the way of like you</font>

733
00:35:22,700 --> 00:35:26,689
don't check and you just<font color="#CCCCCC"> blindly use</font>

734
00:35:24,589 --> 00:35:29,538
things I mean<font color="#E5E5E5"> like this should be the</font>

735
00:35:26,690 --> 00:35:33,650
<font color="#CCCCCC">level that</font><font color="#E5E5E5"> we're expecting from these</font>

736
00:35:29,539 --> 00:35:35,029
libraries as well<font color="#E5E5E5"> as like I said you</font>

737
00:35:33,650 --> 00:35:37,849
know the<font color="#CCCCCC"> context-aware</font><font color="#E5E5E5"> stuff is really</font>

738
00:35:35,029 --> 00:35:40,940
cool<font color="#CCCCCC"> and it's great</font><font color="#E5E5E5"> because</font><font color="#CCCCCC"> you can kind</font>

739
00:35:37,849 --> 00:35:43,220
<font color="#E5E5E5">of continue doing things the way you're</font>

740
00:35:40,940 --> 00:35:45,200
<font color="#CCCCCC">doing them now but even better</font><font color="#E5E5E5"> would</font>

741
00:35:43,220 --> 00:35:47,269
just be moving<font color="#CCCCCC"> away from the strings and</font>

742
00:35:45,200 --> 00:35:50,390
having a higher level<font color="#CCCCCC"> interface that</font>

743
00:35:47,269 --> 00:35:52,189
we're working<font color="#CCCCCC"> at just like I</font><font color="#E5E5E5"> said with</font>

744
00:35:50,390 --> 00:35:54,319
compilers you're not going to be<font color="#CCCCCC"> working</font>

745
00:35:52,190 --> 00:35:56,779
<font color="#E5E5E5">with string manipulation so we need to</font>

746
00:35:54,319 --> 00:35:59,509
be moving<font color="#E5E5E5"> to some kind of libraries and</font>

747
00:35:56,779 --> 00:36:01,460
I you know<font color="#CCCCCC"> again it's a thought talk so</font>

748
00:35:59,509 --> 00:36:03,859
I'm hoping that<font color="#E5E5E5"> you</font><font color="#CCCCCC"> have thoughts on</font>

749
00:36:01,460 --> 00:36:07,160
like yeah what<font color="#E5E5E5"> like what kind of</font>

750
00:36:03,859 --> 00:36:09,019
interface do I want to use that's it's

751
00:36:07,160 --> 00:36:12,950
<font color="#E5E5E5">not strings</font><font color="#CCCCCC"> I don't want to</font><font color="#E5E5E5"> like be</font>

752
00:36:09,019 --> 00:36:14,750
<font color="#E5E5E5">putting strings together</font><font color="#CCCCCC"> but some</font><font color="#E5E5E5"> kind</font>

753
00:36:12,950 --> 00:36:17,240
of data structure<font color="#E5E5E5"> or some kind of</font>

754
00:36:14,750 --> 00:36:19,250
programming interface that's going to be

755
00:36:17,240 --> 00:36:22,089
safe and<font color="#E5E5E5"> still allow me to do like</font>

756
00:36:19,250 --> 00:36:25,089
complex queries<font color="#E5E5E5"> that I want to do and</font>

757
00:36:22,089 --> 00:36:29,349
again we want<font color="#E5E5E5"> every framework to do this</font>

758
00:36:25,089 --> 00:36:32,089
so I<font color="#CCCCCC"> I have some thoughts about</font><font color="#E5E5E5"> how I</font>

759
00:36:29,349 --> 00:36:35,660
think<font color="#CCCCCC"> there's a really good model with</font>

760
00:36:32,089 --> 00:36:37,940
like the<font color="#CCCCCC"> lib</font><font color="#E5E5E5"> NaCl</font><font color="#CCCCCC"> and the</font><font color="#E5E5E5"> lib pasta</font>

761
00:36:35,660 --> 00:36:41,480
library<font color="#E5E5E5"> that came out recently where</font>

762
00:36:37,940 --> 00:36:44,359
people<font color="#CCCCCC"> spend a lot of time building</font><font color="#E5E5E5"> a</font>

763
00:36:41,480 --> 00:36:47,119
secure by default library<font color="#E5E5E5"> that does the</font>

764
00:36:44,359 --> 00:36:49,848
right<font color="#E5E5E5"> things that's simple in terms of</font>

765
00:36:47,119 --> 00:36:52,759
its interface and then everyone else

766
00:36:49,849 --> 00:36:54,349
<font color="#E5E5E5">just wraps that library</font><font color="#CCCCCC"> I think that's</font>

767
00:36:52,759 --> 00:36:56,390
like<font color="#E5E5E5"> a really cool model because</font><font color="#CCCCCC"> you put</font>

768
00:36:54,349 --> 00:36:58,849
all<font color="#CCCCCC"> the effort in one place and</font><font color="#E5E5E5"> then</font>

769
00:36:56,390 --> 00:37:01,069
everybody benefits<font color="#CCCCCC"> from that</font><font color="#E5E5E5"> as opposed</font>

770
00:36:58,849 --> 00:37:02,660
to like okay<font color="#E5E5E5"> well now every framework</font>

771
00:37:01,069 --> 00:37:04,940
<font color="#E5E5E5">has to like go</font><font color="#CCCCCC"> and implement</font>

772
00:37:02,660 --> 00:37:10,390
their own whatever context-aware

773
00:37:04,940 --> 00:37:12,980
escaping<font color="#CCCCCC"> again like I</font><font color="#E5E5E5"> said sort of like</font>

774
00:37:10,390 --> 00:37:15,230
expecting<font color="#E5E5E5"> better things from our web</font>

775
00:37:12,980 --> 00:37:19,070
frameworks expecting<font color="#E5E5E5"> that they're</font><font color="#CCCCCC"> gonna</font>

776
00:37:15,230 --> 00:37:22,220
<font color="#CCCCCC">provide</font><font color="#E5E5E5"> really good security and in this</font>

777
00:37:19,070 --> 00:37:24,380
case like<font color="#E5E5E5"> context-aware escaping or a</font>

778
00:37:22,220 --> 00:37:27,080
better interface<font color="#E5E5E5"> for doing sequel</font>

779
00:37:24,380 --> 00:37:31,400
queries that kind of<font color="#E5E5E5"> thing and then</font><font color="#CCCCCC"> my</font>

780
00:37:27,080 --> 00:37:33,380
<font color="#E5E5E5">thought is like so Google created go</font>

781
00:37:31,400 --> 00:37:37,150
right and<font color="#E5E5E5"> now like a whole bunch</font><font color="#CCCCCC"> of</font>

782
00:37:33,380 --> 00:37:41,660
<font color="#E5E5E5">people use go because go is so awesome</font>

783
00:37:37,150 --> 00:37:43,970
<font color="#E5E5E5">maybe or maybe because Google has an</font>

784
00:37:41,660 --> 00:37:45,500
awesome<font color="#CCCCCC"> marketing machine and they can</font>

785
00:37:43,970 --> 00:37:47,270
promote<font color="#CCCCCC"> it and people</font><font color="#E5E5E5"> trust it</font><font color="#CCCCCC"> because</font>

786
00:37:45,500 --> 00:37:50,060
it's Google<font color="#E5E5E5"> and and then it</font><font color="#CCCCCC"> catches on</font>

787
00:37:47,270 --> 00:37:53,930
right<font color="#CCCCCC"> or think about like rust with</font>

788
00:37:50,060 --> 00:37:55,340
<font color="#E5E5E5">Mozilla getting and I think those two</font>

789
00:37:53,930 --> 00:37:56,960
<font color="#CCCCCC">examples are great because</font><font color="#E5E5E5"> getting</font>

790
00:37:55,340 --> 00:37:58,760
<font color="#CCCCCC">people</font><font color="#E5E5E5"> to use a new programming language</font>

791
00:37:56,960 --> 00:38:00,710
<font color="#CCCCCC">and getting community around it</font><font color="#E5E5E5"> and</font>

792
00:37:58,760 --> 00:38:03,500
getting people using it<font color="#E5E5E5"> is like a hard</font>

793
00:38:00,710 --> 00:38:06,680
thing to<font color="#E5E5E5"> do and yet we've seen really</font>

794
00:38:03,500 --> 00:38:08,900
modern examples of<font color="#E5E5E5"> that happening</font><font color="#CCCCCC"> so and</font>

795
00:38:06,680 --> 00:38:11,750
same with web frameworks<font color="#CCCCCC"> you would</font><font color="#E5E5E5"> think</font>

796
00:38:08,900 --> 00:38:13,880
<font color="#E5E5E5">like maybe the web framework market is</font>

797
00:38:11,750 --> 00:38:15,770
<font color="#CCCCCC">flooded but no people</font><font color="#E5E5E5"> still keep</font><font color="#CCCCCC"> coming</font>

798
00:38:13,880 --> 00:38:18,580
out<font color="#CCCCCC"> with new ones</font><font color="#E5E5E5"> and if you have</font>

799
00:38:15,770 --> 00:38:22,580
somebody<font color="#CCCCCC"> with the money and</font><font color="#E5E5E5"> the</font>

800
00:38:18,580 --> 00:38:23,840
<font color="#CCCCCC">influence and</font><font color="#E5E5E5"> the incentive to</font><font color="#CCCCCC"> get</font>

801
00:38:22,580 --> 00:38:26,029
<font color="#E5E5E5">people</font><font color="#CCCCCC"> to use</font><font color="#E5E5E5"> it</font>

802
00:38:23,840 --> 00:38:28,670
I think there's opportunity for<font color="#E5E5E5"> change</font>

803
00:38:26,030 --> 00:38:33,710
there<font color="#E5E5E5"> so who here works at Google</font>

804
00:38:28,670 --> 00:38:37,310
Facebook<font color="#CCCCCC"> in any of those like Amazon</font>

805
00:38:33,710 --> 00:38:39,170
like<font color="#E5E5E5"> any like</font><font color="#CCCCCC"> nobody alright well tell</font>

806
00:38:37,310 --> 00:38:43,870
<font color="#CCCCCC">your friends who work at those</font><font color="#E5E5E5"> companies</font>

807
00:38:39,170 --> 00:38:48,590
<font color="#E5E5E5">to get on this and</font><font color="#CCCCCC"> then</font><font color="#E5E5E5"> you know just</font>

808
00:38:43,870 --> 00:38:50,990
applying some<font color="#E5E5E5"> shame to frameworks that</font>

809
00:38:48,590 --> 00:38:52,970
<font color="#E5E5E5">are not doing</font><font color="#CCCCCC"> it right right they're not</font>

810
00:38:50,990 --> 00:38:55,029
<font color="#E5E5E5">providing these security features</font><font color="#CCCCCC"> I</font>

811
00:38:52,970 --> 00:38:58,339
think could<font color="#CCCCCC"> be helpful</font>

812
00:38:55,030 --> 00:39:02,420
<font color="#E5E5E5">all right so who in here</font><font color="#CCCCCC"> is like</font><font color="#E5E5E5"> this</font>

813
00:38:58,340 --> 00:39:06,610
sounds a lot like<font color="#CCCCCC"> lame sec</font><font color="#E5E5E5"> were you</font>

814
00:39:02,420 --> 00:39:10,010
<font color="#E5E5E5">thinking that</font><font color="#CCCCCC"> a little bit yeah</font><font color="#E5E5E5"> so I</font>

815
00:39:06,610 --> 00:39:13,010
spent some<font color="#CCCCCC"> time</font><font color="#E5E5E5"> so links</font><font color="#CCCCCC"> X stands</font><font color="#E5E5E5"> for</font>

816
00:39:10,010 --> 00:39:15,920
<font color="#E5E5E5">language theoretic security it's a</font>

817
00:39:13,010 --> 00:39:16,670
research area<font color="#CCCCCC"> and I spent some time</font>

818
00:39:15,920 --> 00:39:18,830
<font color="#CCCCCC">looking</font>

819
00:39:16,670 --> 00:39:22,670
and so if you're<font color="#CCCCCC"> really familiar with it</font>

820
00:39:18,830 --> 00:39:26,120
<font color="#CCCCCC">you can</font><font color="#E5E5E5"> correct me</font><font color="#CCCCCC"> but I got the feeling</font>

821
00:39:22,670 --> 00:39:28,580
so the early work<font color="#CCCCCC"> has definitely focused</font>

822
00:39:26,120 --> 00:39:31,520
on like parsers<font color="#E5E5E5"> and building safe</font>

823
00:39:28,580 --> 00:39:35,090
parsers<font color="#E5E5E5"> that can accept unsafe input and</font>

824
00:39:31,520 --> 00:39:36,770
so on<font color="#CCCCCC"> I didn't see so</font><font color="#E5E5E5"> much around what</font>

825
00:39:35,090 --> 00:39:39,440
I'm trying<font color="#E5E5E5"> to talk</font><font color="#CCCCCC"> about which is</font><font color="#E5E5E5"> like</font>

826
00:39:36,770 --> 00:39:42,080
the<font color="#CCCCCC"> programming interfaces that</font><font color="#E5E5E5"> will</font>

827
00:39:39,440 --> 00:39:43,370
allow you to<font color="#E5E5E5"> do things safely</font><font color="#CCCCCC"> if you</font>

828
00:39:42,080 --> 00:39:45,470
want to check out I know it's not a

829
00:39:43,370 --> 00:39:47,509
great<font color="#E5E5E5"> URL you could just search for</font><font color="#CCCCCC"> Lang</font>

830
00:39:45,470 --> 00:39:49,129
<font color="#E5E5E5">SEC there's a bunch of papers and</font><font color="#CCCCCC"> stuff</font>

831
00:39:47,510 --> 00:39:50,510
<font color="#E5E5E5">and maybe you can come to your own</font>

832
00:39:49,130 --> 00:39:55,790
conclusions<font color="#E5E5E5"> I feel like this is a</font>

833
00:39:50,510 --> 00:39:58,670
related<font color="#CCCCCC"> area of sort</font><font color="#E5E5E5"> of formalizing you</font>

834
00:39:55,790 --> 00:40:02,120
know parsing of languages and<font color="#E5E5E5"> also</font>

835
00:39:58,670 --> 00:40:06,020
output<font color="#CCCCCC"> encoding but I feel like maybe</font>

836
00:40:02,120 --> 00:40:09,770
<font color="#E5E5E5">it's like a little bit off from what I'm</font>

837
00:40:06,020 --> 00:40:11,630
talking about<font color="#E5E5E5"> specifically</font><font color="#CCCCCC"> but I needed</font>

838
00:40:09,770 --> 00:40:13,960
to<font color="#E5E5E5"> mention it because</font><font color="#CCCCCC"> it's definitely</font><font color="#E5E5E5"> an</font>

839
00:40:11,630 --> 00:40:17,000
area<font color="#E5E5E5"> that's it's nearby</font>

840
00:40:13,960 --> 00:40:23,270
<font color="#CCCCCC">alright</font><font color="#E5E5E5"> that's all I wanted to talk</font>

841
00:40:17,000 --> 00:40:26,750
<font color="#CCCCCC">about but I I it's a thought talk and I</font>

842
00:40:23,270 --> 00:40:31,970
<font color="#E5E5E5">think you might</font><font color="#CCCCCC"> have thoughts so I think</font>

843
00:40:26,750 --> 00:40:34,910
we have plenty<font color="#E5E5E5"> of time I think I don't</font>

844
00:40:31,970 --> 00:40:37,430
know<font color="#E5E5E5"> but I would love to hear people</font>

845
00:40:34,910 --> 00:40:39,200
talk<font color="#CCCCCC"> about I think</font><font color="#E5E5E5"> libraries you know</font>

846
00:40:37,430 --> 00:40:41,290
that are<font color="#E5E5E5"> doing this or like thoughts</font>

847
00:40:39,200 --> 00:40:52,520
that you<font color="#CCCCCC"> have on</font><font color="#E5E5E5"> this not necessarily</font>

848
00:40:41,290 --> 00:40:56,870
<font color="#CCCCCC">they don't have to be questions I'm</font><font color="#E5E5E5"> not</font>

849
00:40:52,520 --> 00:41:00,500
a programmer developer I come more from

850
00:40:56,870 --> 00:41:02,600
the security side right and many<font color="#E5E5E5"> times</font>

851
00:41:00,500 --> 00:41:04,730
it's<font color="#E5E5E5"> difficult</font><font color="#CCCCCC"> for me to believe how</font>

852
00:41:02,600 --> 00:41:06,620
<font color="#CCCCCC">many mistakes</font><font color="#E5E5E5"> I find and so forth but</font>

853
00:41:04,730 --> 00:41:08,360
then<font color="#E5E5E5"> when I watch how like I took the</font>

854
00:41:06,620 --> 00:41:10,580
picture<font color="#E5E5E5"> of the four</font><font color="#CCCCCC"> different</font><font color="#E5E5E5"> ways you</font>

855
00:41:08,360 --> 00:41:12,170
would have to escape characters and one

856
00:41:10,580 --> 00:41:12,650
little template and that's really

857
00:41:12,170 --> 00:41:16,010
ridiculous

858
00:41:12,650 --> 00:41:20,030
yeah<font color="#E5E5E5"> Wow yeah that's quite</font><font color="#CCCCCC"> enlightening</font>

859
00:41:16,010 --> 00:41:22,220
<font color="#E5E5E5">thank you very much</font><font color="#CCCCCC"> okay yeah again</font>

860
00:41:20,030 --> 00:41:26,290
<font color="#E5E5E5">they're more than four</font><font color="#CCCCCC"> contacts</font><font color="#E5E5E5"> even</font><font color="#CCCCCC"> in</font>

861
00:41:22,220 --> 00:41:26,290
<font color="#E5E5E5">a you know in</font><font color="#CCCCCC"> an HTML page</font>

862
00:41:32,259 --> 00:41:39,439
so you again coming<font color="#E5E5E5"> from the security</font>

863
00:41:35,569 --> 00:41:41,900
space<font color="#CCCCCC"> your example on query</font>

864
00:41:39,439 --> 00:41:44,390
parameterization<font color="#E5E5E5"> yes</font><font color="#CCCCCC"> um</font><font color="#E5E5E5"> I can say it was</font>

865
00:41:41,900 --> 00:41:47,199
definitely<font color="#E5E5E5"> sequel injectable because</font>

866
00:41:44,390 --> 00:41:49,729
you're<font color="#E5E5E5"> doing string building right and</font>

867
00:41:47,199 --> 00:41:56,390
you you focus a lot on string building

868
00:41:49,729 --> 00:41:59,359
being the problem<font color="#E5E5E5"> with injection</font><font color="#CCCCCC"> when</font>

869
00:41:56,390 --> 00:42:01,640
the<font color="#E5E5E5"> idea behind proper per query</font>

870
00:41:59,359 --> 00:42:06,919
parameterization and parameter binding

871
00:42:01,640 --> 00:42:09,679
<font color="#E5E5E5">this one yes this this is safe is it</font>

872
00:42:06,919 --> 00:42:14,598
yeah<font color="#CCCCCC"> what language is that it's Ruby on</font>

873
00:42:09,679 --> 00:42:20,059
Rails<font color="#E5E5E5"> actor okay</font><font color="#CCCCCC"> yeah but</font><font color="#E5E5E5"> you hadn't you</font>

874
00:42:14,599 --> 00:42:23,119
had another one<font color="#CCCCCC"> that was</font><font color="#E5E5E5"> in Java</font><font color="#CCCCCC"> no I</font>

875
00:42:20,059 --> 00:42:24,709
had a vulnerable version could<font color="#CCCCCC"> be</font><font color="#E5E5E5"> okay</font>

876
00:42:23,119 --> 00:42:27,229
yeah maybe that's what I'm remembering

877
00:42:24,709 --> 00:42:31,269
<font color="#CCCCCC">yeah could be but the problem that</font><font color="#E5E5E5"> we</font>

878
00:42:27,229 --> 00:42:34,038
see<font color="#CCCCCC"> a lot is even with building query</font>

879
00:42:31,269 --> 00:42:37,788
grammar s queries right<font color="#E5E5E5"> without</font>

880
00:42:34,039 --> 00:42:41,029
<font color="#E5E5E5">separating the parameter itself right</font>

881
00:42:37,789 --> 00:42:44,929
the the the variable from the<font color="#E5E5E5"> query</font><font color="#CCCCCC"> you</font>

882
00:42:41,029 --> 00:42:48,529
<font color="#CCCCCC">still have entirely injectable queries</font>

883
00:42:44,929 --> 00:42:50,479
right<font color="#E5E5E5"> doing doing parameter binding is</font>

884
00:42:48,529 --> 00:42:53,119
that exact thing of not<font color="#CCCCCC"> building a</font>

885
00:42:50,479 --> 00:42:55,908
<font color="#E5E5E5">string you're feeding the object into</font>

886
00:42:53,119 --> 00:42:58,819
that query right rather than<font color="#E5E5E5"> the string</font>

887
00:42:55,909 --> 00:42:59,989
of<font color="#E5E5E5"> the object yeah I see what you're</font>

888
00:42:58,819 --> 00:43:02,269
saying<font color="#CCCCCC"> yeah I</font><font color="#E5E5E5"> do</font>

889
00:42:59,989 --> 00:43:04,459
you're right the it's separating like

890
00:43:02,269 --> 00:43:05,808
okay I<font color="#E5E5E5"> have this string and I have the</font>

891
00:43:04,459 --> 00:43:08,959
values are over here and<font color="#E5E5E5"> then the</font>

892
00:43:05,809 --> 00:43:12,829
<font color="#CCCCCC">database driver will put those together</font>

893
00:43:08,959 --> 00:43:17,390
safely<font color="#E5E5E5"> is that what you're saying yes</font>

894
00:43:12,829 --> 00:43:20,179
and<font color="#E5E5E5"> I that's true</font><font color="#CCCCCC"> but I think two</font>

895
00:43:17,390 --> 00:43:23,118
thoughts on that one<font color="#E5E5E5"> we only get query</font>

896
00:43:20,179 --> 00:43:25,369
parameterization for<font color="#CCCCCC"> seek like database</font>

897
00:43:23,119 --> 00:43:27,349
queries<font color="#E5E5E5"> we don't get it for templates</font>

898
00:43:25,369 --> 00:43:28,819
<font color="#E5E5E5">usually and we don't like we don't get</font>

899
00:43:27,349 --> 00:43:30,140
<font color="#E5E5E5">it other places so it's great that we</font>

900
00:43:28,819 --> 00:43:32,919
have<font color="#E5E5E5"> it here but we</font><font color="#CCCCCC"> don't get other</font>

901
00:43:30,140 --> 00:43:35,269
<font color="#E5E5E5">places and really what happens is like</font>

902
00:43:32,919 --> 00:43:37,519
people sort of<font color="#E5E5E5"> get into this like yeah a</font>

903
00:43:35,269 --> 00:43:38,819
query parameter ization<font color="#E5E5E5"> and then they</font>

904
00:43:37,519 --> 00:43:42,419
want<font color="#E5E5E5"> to do something like a</font>

905
00:43:38,820 --> 00:43:44,300
dynamic<font color="#E5E5E5"> column name and most</font><font color="#CCCCCC"> core</font><font color="#E5E5E5"> a</font>

906
00:43:42,420 --> 00:43:46,920
parameterization will not properly

907
00:43:44,300 --> 00:43:51,390
<font color="#E5E5E5">parameter I as a column name or a</font>

908
00:43:46,920 --> 00:43:53,340
database<font color="#E5E5E5"> name so so you still end up</font>

909
00:43:51,390 --> 00:43:55,500
<font color="#CCCCCC">with people like building dynamic</font>

910
00:43:53,340 --> 00:43:57,720
strings on this side and<font color="#E5E5E5"> they'll also do</font>

911
00:43:55,500 --> 00:44:01,830
query parameterization in the same line

912
00:43:57,720 --> 00:44:04,770
of<font color="#E5E5E5"> code right so it's not I'm</font><font color="#CCCCCC"> not saying</font>

913
00:44:01,830 --> 00:44:06,450
like this<font color="#E5E5E5"> is</font><font color="#CCCCCC"> awful I'm just saying like</font>

914
00:44:04,770 --> 00:44:09,540
<font color="#CCCCCC">we need</font><font color="#E5E5E5"> like maybe we need something</font>

915
00:44:06,450 --> 00:44:11,669
else things<font color="#E5E5E5"> where you need to understand</font>

916
00:44:09,540 --> 00:44:14,910
the<font color="#E5E5E5"> limitations of</font><font color="#CCCCCC"> what it provides</font>

917
00:44:11,670 --> 00:44:19,340
<font color="#CCCCCC">right and that you know the</font><font color="#E5E5E5"> the thing</font><font color="#CCCCCC"> is</font>

918
00:44:14,910 --> 00:44:22,200
you know I am a security<font color="#E5E5E5"> professional</font>

919
00:44:19,340 --> 00:44:27,720
yeah<font color="#E5E5E5"> okay I am a security professional</font>

920
00:44:22,200 --> 00:44:29,069
<font color="#E5E5E5">and it's still like confused like you</font>

921
00:44:27,720 --> 00:44:30,629
still have<font color="#CCCCCC"> to like spend</font><font color="#E5E5E5"> some time to</font>

922
00:44:29,070 --> 00:44:32,580
understand like what are the safe ways

923
00:44:30,630 --> 00:44:34,710
<font color="#CCCCCC">to do things and if you're a</font><font color="#E5E5E5"> developer</font>

924
00:44:32,580 --> 00:44:36,930
I'm not saying you wouldn't do that<font color="#E5E5E5"> but</font>

925
00:44:34,710 --> 00:44:38,490
<font color="#E5E5E5">when I'm</font><font color="#CCCCCC"> writing</font><font color="#E5E5E5"> code</font><font color="#CCCCCC"> I just kind of</font>

926
00:44:36,930 --> 00:44:40,770
like<font color="#E5E5E5"> Google</font><font color="#CCCCCC"> for like the first</font><font color="#E5E5E5"> thing</font>

927
00:44:38,490 --> 00:44:46,020
that<font color="#E5E5E5"> comes up and I kind of trust that</font>

928
00:44:40,770 --> 00:44:48,210
<font color="#E5E5E5">like it's doing it right</font><font color="#CCCCCC"> right</font><font color="#E5E5E5"> so so</font>

929
00:44:46,020 --> 00:44:49,860
yeah it can be<font color="#E5E5E5"> tricky</font><font color="#CCCCCC"> even if you have</font>

930
00:44:48,210 --> 00:44:53,250
the tools<font color="#CCCCCC"> available to</font><font color="#E5E5E5"> do it the right</font>

931
00:44:49,860 --> 00:44:54,660
<font color="#E5E5E5">way</font><font color="#CCCCCC"> and yeah I'm like okay I'm gonna do</font>

932
00:44:53,250 --> 00:44:57,660
<font color="#E5E5E5">query parameter ization and then you</font>

933
00:44:54,660 --> 00:44:59,310
find like well but if I do the parameter

934
00:44:57,660 --> 00:45:00,839
in like the wrong part of the<font color="#E5E5E5"> like a</font>

935
00:44:59,310 --> 00:45:02,070
particular part of<font color="#E5E5E5"> the query like it</font>

936
00:45:00,840 --> 00:45:04,410
doesn't<font color="#CCCCCC"> do it right</font><font color="#E5E5E5"> and it breaks my</font>

937
00:45:02,070 --> 00:45:06,990
<font color="#E5E5E5">query</font><font color="#CCCCCC"> and now I'm stuck with like well</font>

938
00:45:04,410 --> 00:45:09,330
how do I do<font color="#CCCCCC"> it right so that's why I'm</font>

939
00:45:06,990 --> 00:45:11,160
<font color="#E5E5E5">kind</font><font color="#CCCCCC"> of suggesting like even then you're</font>

940
00:45:09,330 --> 00:45:12,990
still kind of like putting code in

941
00:45:11,160 --> 00:45:16,910
strings and then trying to manipulate

942
00:45:12,990 --> 00:45:20,819
<font color="#E5E5E5">them to have dynamic</font><font color="#CCCCCC"> values and so on I</font>

943
00:45:16,910 --> 00:45:22,830
think that those examples are<font color="#CCCCCC"> really</font>

944
00:45:20,820 --> 00:45:25,020
great up there<font color="#E5E5E5"> but a lot</font><font color="#CCCCCC"> of</font><font color="#E5E5E5"> the issues</font>

945
00:45:22,830 --> 00:45:27,690
that we had at my company<font color="#E5E5E5"> were that</font>

946
00:45:25,020 --> 00:45:30,450
<font color="#E5E5E5">people started writing sequel functions</font>

947
00:45:27,690 --> 00:45:32,280
inside their<font color="#CCCCCC"> Java code and they</font><font color="#E5E5E5"> weren't</font>

948
00:45:30,450 --> 00:45:33,629
<font color="#E5E5E5">necessary like sequel statements that</font>

949
00:45:32,280 --> 00:45:36,030
these functions<font color="#CCCCCC"> had these statements</font>

950
00:45:33,630 --> 00:45:37,470
inside them so<font color="#CCCCCC"> they added</font><font color="#E5E5E5"> parameters</font>

951
00:45:36,030 --> 00:45:40,200
from<font color="#E5E5E5"> the request into the sequel</font>

952
00:45:37,470 --> 00:45:41,970
functions and not<font color="#CCCCCC"> a lot of developers in</font>

953
00:45:40,200 --> 00:45:43,560
even security<font color="#E5E5E5"> folks in this conference</font>

954
00:45:41,970 --> 00:45:46,799
knew that you can actually create

955
00:45:43,560 --> 00:45:49,170
callable statements and so that was very

956
00:45:46,800 --> 00:45:51,450
<font color="#E5E5E5">interesting</font><font color="#CCCCCC"> to</font><font color="#E5E5E5"> figure out that we had to</font>

957
00:45:49,170 --> 00:45:54,180
create a wrapper that<font color="#E5E5E5"> did parameter</font>

958
00:45:51,450 --> 00:45:56,129
statements<font color="#CCCCCC"> I think I would like to see</font>

959
00:45:54,180 --> 00:45:59,190
more<font color="#E5E5E5"> examples of that in the</font><font color="#CCCCCC"> future</font><font color="#E5E5E5"> like</font>

960
00:45:56,130 --> 00:46:03,480
<font color="#E5E5E5">people stay that you mean statements</font>

961
00:45:59,190 --> 00:46:07,020
like prepared statements they had sequel

962
00:46:03,480 --> 00:46:08,940
functions under<font color="#E5E5E5"> okay no worries but</font>

963
00:46:07,020 --> 00:46:12,540
these functions<font color="#E5E5E5"> for like</font><font color="#CCCCCC"> plc role calls</font>

964
00:46:08,940 --> 00:46:15,480
<font color="#CCCCCC">I don't think you can stored procedures</font>

965
00:46:12,540 --> 00:46:17,009
I mean I mean you mean like in sequel

966
00:46:15,480 --> 00:46:20,690
you can call certain functions that are

967
00:46:17,010 --> 00:46:20,690
more like executing code than they are

968
00:46:20,720 --> 00:46:27,270
yep certainly<font color="#E5E5E5"> and also stored procedures</font>

969
00:46:24,290 --> 00:46:29,610
<font color="#CCCCCC">can have dynamic bits to them too which</font>

970
00:46:27,270 --> 00:46:31,800
is like if you're<font color="#E5E5E5"> looking at the code</font>

971
00:46:29,610 --> 00:46:33,420
you're like well it seems okay<font color="#CCCCCC"> and then</font>

972
00:46:31,800 --> 00:46:34,830
you look in the database and<font color="#E5E5E5"> it's like</font>

973
00:46:33,420 --> 00:46:36,450
<font color="#E5E5E5">oh actually you know it will</font><font color="#CCCCCC"> just like</font>

974
00:46:34,830 --> 00:46:39,840
accept<font color="#E5E5E5"> things and like put them in</font>

975
00:46:36,450 --> 00:46:46,710
dynamically so again another<font color="#E5E5E5"> another</font>

976
00:46:39,840 --> 00:46:50,760
problem<font color="#CCCCCC"> wait</font><font color="#E5E5E5"> for the</font><font color="#CCCCCC"> mic please thank</font>

977
00:46:46,710 --> 00:46:52,650
you<font color="#E5E5E5"> I would like to agree with the first</font>

978
00:46:50,760 --> 00:46:54,960
<font color="#CCCCCC">statement</font><font color="#E5E5E5"> we heard that there</font><font color="#CCCCCC"> are a lot</font>

979
00:46:52,650 --> 00:46:57,420
of<font color="#CCCCCC"> maybe what I call cases of over</font>

980
00:46:54,960 --> 00:46:58,620
trusting input I know<font color="#E5E5E5"> insecurity</font><font color="#CCCCCC"> with a</font>

981
00:46:57,420 --> 00:47:01,380
lot<font color="#E5E5E5"> of the development teams I've worked</font>

982
00:46:58,620 --> 00:47:03,359
<font color="#E5E5E5">with people basically say there is no</font>

983
00:47:01,380 --> 00:47:05,730
injection prevention but it's<font color="#E5E5E5"> okay</font>

984
00:47:03,360 --> 00:47:07,350
<font color="#CCCCCC">because we trust our source I guess</font>

985
00:47:05,730 --> 00:47:08,670
maybe I'd like<font color="#CCCCCC"> to</font><font color="#E5E5E5"> confirm explicitly</font>

986
00:47:07,350 --> 00:47:11,370
<font color="#E5E5E5">that what you're getting into with the</font>

987
00:47:08,670 --> 00:47:12,990
don't just<font color="#E5E5E5"> DB execute whatever don't</font>

988
00:47:11,370 --> 00:47:14,670
<font color="#CCCCCC">whatever that that's kind of</font><font color="#E5E5E5"> like a</font>

989
00:47:12,990 --> 00:47:17,160
<font color="#CCCCCC">library with our protections it's a what</font>

990
00:47:14,670 --> 00:47:19,560
is<font color="#E5E5E5"> this case we sort of agree with</font><font color="#CCCCCC"> the</font>

991
00:47:17,160 --> 00:47:23,640
sentiment yes absolutely and<font color="#E5E5E5"> I you know</font>

992
00:47:19,560 --> 00:47:27,600
the and the if<font color="#CCCCCC"> it might can go back</font>

993
00:47:23,640 --> 00:47:30,330
<font color="#E5E5E5">there yeah that that's</font><font color="#CCCCCC"> absolutely true</font><font color="#E5E5E5"> I</font>

994
00:47:27,600 --> 00:47:38,180
can give<font color="#E5E5E5"> you an example at a former</font>

995
00:47:30,330 --> 00:47:41,370
employer they so they had external<font color="#E5E5E5"> data</font>

996
00:47:38,180 --> 00:47:43,620
that they bought from<font color="#E5E5E5"> some other company</font>

997
00:47:41,370 --> 00:47:45,930
and then they took<font color="#CCCCCC"> that data and they</font>

998
00:47:43,620 --> 00:47:47,250
just put<font color="#E5E5E5"> it in their database</font><font color="#CCCCCC"> and then</font>

999
00:47:45,930 --> 00:47:47,669
when they started<font color="#CCCCCC"> rendering it on the</font>

1000
00:47:47,250 --> 00:47:49,410
<font color="#CCCCCC">webpage</font>

1001
00:47:47,670 --> 00:47:52,380
hey<font color="#CCCCCC"> here's</font><font color="#E5E5E5"> like</font><font color="#CCCCCC"> a bunch of</font><font color="#E5E5E5"> sequel</font>

1002
00:47:49,410 --> 00:47:54,089
injection that<font color="#E5E5E5"> came in from that so they</font>

1003
00:47:52,380 --> 00:47:55,410
they may have<font color="#CCCCCC"> been</font><font color="#E5E5E5"> doing or they</font>

1004
00:47:54,090 --> 00:47:57,900
obviously weren't escaping things

1005
00:47:55,410 --> 00:47:59,640
properly<font color="#E5E5E5"> on output but in terms of you</font>

1006
00:47:57,900 --> 00:48:01,020
<font color="#CCCCCC">know maybe they're managing all the data</font>

1007
00:47:59,640 --> 00:48:02,279
and<font color="#CCCCCC"> the date</font><font color="#E5E5E5"> in their database</font>

1008
00:48:01,020 --> 00:48:04,259
<font color="#E5E5E5">everything going in</font>

1009
00:48:02,280 --> 00:48:06,000
out there<font color="#E5E5E5"> yeah we're doing this right</font>

1010
00:48:04,260 --> 00:48:07,590
we're like very careful about what goes

1011
00:48:06,000 --> 00:48:09,660
in maybe I don't know<font color="#CCCCCC"> maybe they were</font>

1012
00:48:07,590 --> 00:48:11,670
like sanitizing it<font color="#E5E5E5"> or stripping</font><font color="#CCCCCC"> whatever</font>

1013
00:48:09,660 --> 00:48:13,710
they were doing<font color="#CCCCCC"> but then they have a</font>

1014
00:48:11,670 --> 00:48:16,140
third<font color="#E5E5E5"> party source of data which they</font>

1015
00:48:13,710 --> 00:48:18,300
just put into<font color="#CCCCCC"> the database</font><font color="#E5E5E5"> and now I</font>

1016
00:48:16,140 --> 00:48:20,640
mean<font color="#E5E5E5"> that's untrusted input</font><font color="#CCCCCC"> it didn't</font>

1017
00:48:18,300 --> 00:48:22,650
come in<font color="#E5E5E5"> through a query parameter</font><font color="#CCCCCC"> from a</font>

1018
00:48:20,640 --> 00:48:27,600
user they<font color="#E5E5E5"> literally bought it from a</font>

1019
00:48:22,650 --> 00:48:30,060
<font color="#E5E5E5">third party so</font><font color="#CCCCCC"> what sorry</font><font color="#E5E5E5"> yes I have a</font>

1020
00:48:27,600 --> 00:48:31,350
<font color="#E5E5E5">question here in the back</font><font color="#CCCCCC"> I first</font><font color="#E5E5E5"> of all</font>

1021
00:48:30,060 --> 00:48:33,480
<font color="#E5E5E5">thank</font><font color="#CCCCCC"> you so much</font><font color="#E5E5E5"> for your talk</font><font color="#CCCCCC"> a</font>

1022
00:48:31,350 --> 00:48:35,640
college students<font color="#CCCCCC"> sudden</font><font color="#E5E5E5"> CS and security</font>

1023
00:48:33,480 --> 00:48:38,370
and just correct<font color="#E5E5E5"> me if I'm</font><font color="#CCCCCC"> wrong but</font>

1024
00:48:35,640 --> 00:48:42,299
from what I'm understanding<font color="#E5E5E5"> these like</font>

1025
00:48:38,370 --> 00:48:44,220
libraries are kind<font color="#E5E5E5"> of a way</font><font color="#CCCCCC"> to prevent</font>

1026
00:48:42,300 --> 00:48:46,260
these injections<font color="#CCCCCC"> from happening</font><font color="#E5E5E5"> at the</font>

1027
00:48:44,220 --> 00:48:47,850
code<font color="#CCCCCC"> level from the development level is</font>

1028
00:48:46,260 --> 00:48:51,930
there<font color="#E5E5E5"> a way to somehow use these</font>

1029
00:48:47,850 --> 00:48:55,650
libraries to<font color="#CCCCCC"> maybe run</font><font color="#E5E5E5"> a scan on</font><font color="#CCCCCC"> on code</font>

1030
00:48:51,930 --> 00:48:58,259
that would you know catch these<font color="#E5E5E5"> you know</font>

1031
00:48:55,650 --> 00:49:01,470
unpromising<font color="#CCCCCC"> savings that</font><font color="#E5E5E5"> are not</font>

1032
00:48:58,260 --> 00:49:03,990
prepared<font color="#CCCCCC"> properly</font><font color="#E5E5E5"> as maybe like security</font>

1033
00:49:01,470 --> 00:49:05,430
testing<font color="#CCCCCC"> automate security testing or is</font>

1034
00:49:03,990 --> 00:49:07,259
<font color="#E5E5E5">it mostly this is just like we're trying</font>

1035
00:49:05,430 --> 00:49:09,240
<font color="#E5E5E5">to stop</font><font color="#CCCCCC"> it from the development</font>

1036
00:49:07,260 --> 00:49:12,390
standpoint<font color="#E5E5E5"> with the language with the</font>

1037
00:49:09,240 --> 00:49:13,979
<font color="#E5E5E5">framework</font><font color="#CCCCCC"> yes so certainly</font><font color="#E5E5E5"> I mean</font><font color="#CCCCCC"> I have</font>

1038
00:49:12,390 --> 00:49:15,890
a lot of background<font color="#CCCCCC"> in static analysis</font>

1039
00:49:13,980 --> 00:49:18,470
which<font color="#CCCCCC"> is what you're talking about</font>

1040
00:49:15,890 --> 00:49:21,390
<font color="#CCCCCC">and if you remember at</font><font color="#E5E5E5"> the beginning</font>

1041
00:49:18,470 --> 00:49:24,509
<font color="#CCCCCC">wasa top 10 categorizes injection as</font>

1042
00:49:21,390 --> 00:49:26,940
easy<font color="#E5E5E5"> to detect</font><font color="#CCCCCC"> and actually it</font><font color="#E5E5E5"> is</font><font color="#CCCCCC"> one of</font>

1043
00:49:24,510 --> 00:49:30,420
<font color="#CCCCCC">the easier things to find via static</font>

1044
00:49:26,940 --> 00:49:33,480
analysis looking at<font color="#E5E5E5"> the code</font><font color="#CCCCCC"> the problem</font>

1045
00:49:30,420 --> 00:49:35,010
is not every you<font color="#E5E5E5"> don't have we don't</font>

1046
00:49:33,480 --> 00:49:36,810
have<font color="#CCCCCC"> a hundred</font><font color="#E5E5E5"> percent coverage on every</font>

1047
00:49:35,010 --> 00:49:40,230
language and every<font color="#E5E5E5"> framework in every</font>

1048
00:49:36,810 --> 00:49:43,140
database<font color="#E5E5E5"> library that we can have that</font>

1049
00:49:40,230 --> 00:49:45,420
<font color="#E5E5E5">kind of assurance and really we should</font>

1050
00:49:43,140 --> 00:49:46,920
and you know is every company<font color="#E5E5E5"> gonna get</font>

1051
00:49:45,420 --> 00:49:49,710
the tool or<font color="#CCCCCC"> buy the tool that's</font><font color="#E5E5E5"> going to</font>

1052
00:49:46,920 --> 00:49:52,380
cover their particular<font color="#E5E5E5"> thing and maybe</font>

1053
00:49:49,710 --> 00:49:53,910
they wrote their own<font color="#E5E5E5"> who knows</font><font color="#CCCCCC"> so yeah I</font>

1054
00:49:52,380 --> 00:49:57,660
think<font color="#E5E5E5"> you know fixing it at the library</font>

1055
00:49:53,910 --> 00:50:00,060
<font color="#E5E5E5">level well and</font><font color="#CCCCCC"> actually let</font><font color="#E5E5E5"> me</font><font color="#CCCCCC"> back up</font>

1056
00:49:57,660 --> 00:50:02,310
just<font color="#E5E5E5"> a little bit again the 20 years of</font>

1057
00:50:00,060 --> 00:50:04,710
sequel injection<font color="#E5E5E5"> we've also had static</font>

1058
00:50:02,310 --> 00:50:06,750
analysis<font color="#CCCCCC"> and dynamic analysis tools and</font>

1059
00:50:04,710 --> 00:50:08,880
they yeah<font color="#CCCCCC"> they can find this stuff but</font>

1060
00:50:06,750 --> 00:50:13,410
it's<font color="#E5E5E5"> not solving the problem completely</font>

1061
00:50:08,880 --> 00:50:15,150
<font color="#CCCCCC">it solves it in individual cases and the</font>

1062
00:50:13,410 --> 00:50:17,940
idea<font color="#E5E5E5"> here is like let's</font>

1063
00:50:15,150 --> 00:50:21,390
just kind of try to solve it in at the

1064
00:50:17,940 --> 00:50:23,520
<font color="#E5E5E5">base layer no other there</font><font color="#CCCCCC"> are</font><font color="#E5E5E5"> other ways</font>

1065
00:50:21,390 --> 00:50:25,529
of<font color="#E5E5E5"> solving it yes there's question</font><font color="#CCCCCC"> here</font>

1066
00:50:23,520 --> 00:50:29,280
<font color="#E5E5E5">there plenty of other ways of solving</font>

1067
00:50:25,530 --> 00:50:31,950
and this is just some<font color="#E5E5E5"> thoughts so quick</font>

1068
00:50:29,280 --> 00:50:34,890
question<font color="#CCCCCC"> I had is for libraries</font><font color="#E5E5E5"> secure</font>

1069
00:50:31,950 --> 00:50:40,379
control<font color="#E5E5E5"> interfaces</font><font color="#CCCCCC"> we have the wasp</font>

1070
00:50:34,890 --> 00:50:42,150
<font color="#E5E5E5">isapi right yeah so does</font><font color="#CCCCCC"> that like you</font>

1071
00:50:40,380 --> 00:50:44,100
<font color="#CCCCCC">talked about Google or Facebook coming</font>

1072
00:50:42,150 --> 00:50:45,540
up with libraries but how<font color="#E5E5E5"> are</font><font color="#CCCCCC"> auspey</font>

1073
00:50:44,100 --> 00:50:49,380
<font color="#CCCCCC">sappy libraries we use</font><font color="#E5E5E5"> that a lot</font><font color="#CCCCCC"> or</font>

1074
00:50:45,540 --> 00:50:51,779
with<font color="#E5E5E5"> reference implementations so my</font>

1075
00:50:49,380 --> 00:50:55,260
understanding<font color="#CCCCCC"> the way I will</font><font color="#E5E5E5"> look at it</font>

1076
00:50:51,780 --> 00:50:58,080
is libraries like a sappy should be like

1077
00:50:55,260 --> 00:51:02,150
that's something<font color="#E5E5E5"> you can build a better</font>

1078
00:50:58,080 --> 00:51:04,529
interface<font color="#E5E5E5"> on top of right so if you have</font>

1079
00:51:02,150 --> 00:51:06,630
stuff like<font color="#E5E5E5"> a sappy or there's another</font>

1080
00:51:04,530 --> 00:51:08,720
<font color="#CCCCCC">project I know Jim Manukau has been</font>

1081
00:51:06,630 --> 00:51:11,130
<font color="#CCCCCC">working on I don't remember the name of</font>

1082
00:51:08,720 --> 00:51:13,169
<font color="#E5E5E5">where they basically providing the</font>

1083
00:51:11,130 --> 00:51:14,970
<font color="#E5E5E5">building blocks in terms of these</font><font color="#CCCCCC"> are</font>

1084
00:51:13,170 --> 00:51:18,060
the<font color="#E5E5E5"> methods</font><font color="#CCCCCC"> that</font><font color="#E5E5E5"> are</font><font color="#CCCCCC"> going to do the</font>

1085
00:51:14,970 --> 00:51:21,509
<font color="#E5E5E5">correct escaping</font><font color="#CCCCCC"> but you have to wrap</font>

1086
00:51:18,060 --> 00:51:23,009
those up<font color="#E5E5E5"> and in a better interface</font><font color="#CCCCCC"> so</font>

1087
00:51:21,510 --> 00:51:25,470
like talking<font color="#CCCCCC"> about</font><font color="#E5E5E5"> like the context of</font>

1088
00:51:23,010 --> 00:51:28,020
where escaping<font color="#E5E5E5"> you need to have good</font>

1089
00:51:25,470 --> 00:51:30,180
escaping libraries to do that but you

1090
00:51:28,020 --> 00:51:32,009
don't<font color="#E5E5E5"> want the developer</font><font color="#CCCCCC"> to have the</font>

1091
00:51:30,180 --> 00:51:34,950
<font color="#E5E5E5">responsibility of choosing the correct</font>

1092
00:51:32,010 --> 00:51:37,260
method in some<font color="#E5E5E5"> cases if you look at like</font>

1093
00:51:34,950 --> 00:51:39,319
the<font color="#E5E5E5"> OAuth XSS cheat sheet and so on</font>

1094
00:51:37,260 --> 00:51:43,020
sometimes you have<font color="#E5E5E5"> to apply multiple</font>

1095
00:51:39,320 --> 00:51:47,910
<font color="#E5E5E5">coatings</font><font color="#CCCCCC"> to the same input to</font><font color="#E5E5E5"> make it</font>

1096
00:51:43,020 --> 00:51:50,310
<font color="#E5E5E5">completely safe</font><font color="#CCCCCC"> and if remember that in</font>

1097
00:51:47,910 --> 00:51:52,109
all cases like you'd<font color="#E5E5E5"> have to like print</font>

1098
00:51:50,310 --> 00:51:54,690
out the cheat sheet and<font color="#E5E5E5"> like have</font><font color="#CCCCCC"> it on</font>

1099
00:51:52,110 --> 00:51:56,910
your desk<font color="#CCCCCC"> right so the</font><font color="#E5E5E5"> idea would be to</font>

1100
00:51:54,690 --> 00:51:58,650
<font color="#E5E5E5">take potentially to take a library like</font>

1101
00:51:56,910 --> 00:52:03,140
that and then build something on<font color="#CCCCCC"> top of</font>

1102
00:51:58,650 --> 00:52:03,140
<font color="#E5E5E5">it yes</font>

1103
00:52:06,650 --> 00:52:12,570
it's just<font color="#E5E5E5"> more kind of a it goes back to</font>

1104
00:52:10,230 --> 00:52:15,960
our<font color="#E5E5E5"> keynote yesterday in the morning you</font>

1105
00:52:12,570 --> 00:52:17,790
know<font color="#E5E5E5"> whatever you've talked about is</font>

1106
00:52:15,960 --> 00:52:20,160
great and I think<font color="#CCCCCC"> we</font><font color="#E5E5E5"> need to put that</font>

1107
00:52:17,790 --> 00:52:21,990
more into the<font color="#E5E5E5"> mindset of the generation</font>

1108
00:52:20,160 --> 00:52:25,170
that's through that pipeline<font color="#CCCCCC"> of</font>

1109
00:52:21,990 --> 00:52:28,169
<font color="#CCCCCC">Education and get these I know concepts</font>

1110
00:52:25,170 --> 00:52:30,570
into their heads to write code more

1111
00:52:28,170 --> 00:52:33,150
securely or and kind<font color="#CCCCCC"> of share these kind</font>

1112
00:52:30,570 --> 00:52:36,510
<font color="#CCCCCC">of thoughts with them right yeah I think</font>

1113
00:52:33,150 --> 00:52:39,990
<font color="#E5E5E5">that's part of you</font><font color="#CCCCCC"> know if you think</font>

1114
00:52:36,510 --> 00:52:41,760
<font color="#E5E5E5">about I want because one thought I had</font>

1115
00:52:39,990 --> 00:52:43,770
was like<font color="#E5E5E5"> okay so like if you're</font><font color="#CCCCCC"> building</font>

1116
00:52:41,760 --> 00:52:45,570
a<font color="#E5E5E5"> new framework</font><font color="#CCCCCC"> you should do this right</font>

1117
00:52:43,770 --> 00:52:46,950
<font color="#CCCCCC">and I thought well who's building</font><font color="#E5E5E5"> new</font>

1118
00:52:45,570 --> 00:52:48,630
frameworks and<font color="#E5E5E5"> I was like well actually</font>

1119
00:52:46,950 --> 00:52:53,189
<font color="#E5E5E5">people build new frameworks all the time</font>

1120
00:52:48,630 --> 00:52:55,590
and it's surprising how rapidly those

1121
00:52:53,190 --> 00:52:56,070
new frameworks can<font color="#E5E5E5"> be</font><font color="#CCCCCC"> adopted</font><font color="#E5E5E5"> so yeah I</font>

1122
00:52:55,590 --> 00:52:57,660
agree

1123
00:52:56,070 --> 00:52:59,300
<font color="#E5E5E5">or I mean I don't know how to implement</font>

1124
00:52:57,660 --> 00:53:01,980
<font color="#E5E5E5">exactly what you're suggesting but</font>

1125
00:52:59,300 --> 00:53:04,320
<font color="#E5E5E5">definitely</font><font color="#CCCCCC"> these sort of</font><font color="#E5E5E5"> like like I</font>

1126
00:53:01,980 --> 00:53:05,970
said like hey this<font color="#CCCCCC"> if you're building</font>

1127
00:53:04,320 --> 00:53:08,010
<font color="#CCCCCC">something if you're building a web</font>

1128
00:53:05,970 --> 00:53:10,980
framework<font color="#CCCCCC"> you have to provide these</font>

1129
00:53:08,010 --> 00:53:13,980
<font color="#CCCCCC">things and you see</font><font color="#E5E5E5"> that for example with</font>

1130
00:53:10,980 --> 00:53:15,690
<font color="#E5E5E5">C surf protection most new web</font>

1131
00:53:13,980 --> 00:53:17,700
frameworks are going to provide<font color="#CCCCCC"> that out</font>

1132
00:53:15,690 --> 00:53:19,830
<font color="#CCCCCC">of the box</font><font color="#E5E5E5"> they're</font><font color="#CCCCCC"> gonna</font><font color="#E5E5E5"> provide</font><font color="#CCCCCC"> that</font>

1133
00:53:17,700 --> 00:53:21,180
for you<font color="#E5E5E5"> and so that's something that we</font>

1134
00:53:19,830 --> 00:53:23,190
should<font color="#E5E5E5"> just expect like hey you're</font>

1135
00:53:21,180 --> 00:53:25,169
building a new web framework that's

1136
00:53:23,190 --> 00:53:27,210
awesome do you have C surf protection

1137
00:53:25,170 --> 00:53:29,100
you have XSS protection<font color="#E5E5E5"> do you have</font>

1138
00:53:27,210 --> 00:53:33,660
sequel injection protection you know and

1139
00:53:29,100 --> 00:53:35,220
so<font color="#E5E5E5"> on and that should</font><font color="#CCCCCC"> just be what</font><font color="#E5E5E5"> yeah</font>

1140
00:53:33,660 --> 00:53:37,670
it should<font color="#CCCCCC"> be given</font><font color="#E5E5E5"> that you're building</font>

1141
00:53:35,220 --> 00:53:41,220
<font color="#CCCCCC">web</font><font color="#E5E5E5"> framework this stuff was provided</font>

1142
00:53:37,670 --> 00:53:43,440
okay I think<font color="#E5E5E5"> that's about it but</font><font color="#CCCCCC"> I'd be</font>

1143
00:53:41,220 --> 00:53:47,930
happy<font color="#CCCCCC"> to talk to anyone</font><font color="#E5E5E5"> afterwards if</font>

1144
00:53:43,440 --> 00:53:51,020
you<font color="#E5E5E5"> have thoughts all right thank you</font>

1145
00:53:47,930 --> 00:53:51,020
[Music]

1146
00:53:53,090 --> 00:54:02,169
[Music]

