1
00:00:00,950 --> 00:00:15,830
[Music]

2
00:00:17,250 --> 00:00:23,470
cool<font color="#CCCCCC"> all</font><font color="#E5E5E5"> right my name is Jason</font>

3
00:00:20,380 --> 00:00:25,779
<font color="#E5E5E5">I am the</font><font color="#CCCCCC"> VP of trust</font><font color="#E5E5E5"> and</font><font color="#CCCCCC"> security at a</font>

4
00:00:23,470 --> 00:00:28,000
company called<font color="#E5E5E5"> bug crowd at bug</font><font color="#CCCCCC"> guard we</font>

5
00:00:25,779 --> 00:00:30,130
host<font color="#CCCCCC"> manage crowd-sourced security</font>

6
00:00:28,000 --> 00:00:32,470
solutions<font color="#CCCCCC"> in particular bug</font><font color="#E5E5E5"> downy</font><font color="#CCCCCC"> and</font>

7
00:00:30,130 --> 00:00:34,360
responsible disclosure programs<font color="#CCCCCC"> but I'm</font>

8
00:00:32,470 --> 00:00:36,010
also a tester<font color="#CCCCCC"> and I've been a pen tester</font>

9
00:00:34,360 --> 00:00:38,590
my whole life and I continue<font color="#E5E5E5"> to be a bug</font>

10
00:00:36,010 --> 00:00:40,660
hunter and this<font color="#E5E5E5"> presentation basically</font>

11
00:00:38,590 --> 00:00:43,120
<font color="#E5E5E5">goes over a whole bunch of bug hunter</font>

12
00:00:40,660 --> 00:00:44,709
tips and tricks<font color="#E5E5E5"> as well</font><font color="#CCCCCC"> at</font><font color="#E5E5E5"> 1-over</font><font color="#CCCCCC"> as</font>

13
00:00:43,120 --> 00:00:46,660
well as vulnerability classes that are

14
00:00:44,710 --> 00:00:58,329
pertinent in today's bug hunter type of

15
00:00:46,660 --> 00:01:00,819
life cycle if it'll go any of you hunt

16
00:00:58,329 --> 00:01:01,960
<font color="#E5E5E5">bugs on a bug crowd or any vulnerability</font>

17
00:01:00,820 --> 00:01:05,790
disclosure<font color="#E5E5E5"> program or anything like that</font>

18
00:01:01,960 --> 00:01:08,020
hacker<font color="#E5E5E5"> one cynic couple of you yeah</font>

19
00:01:05,790 --> 00:01:11,200
hopefully<font color="#CCCCCC"> this will have some good stuff</font>

20
00:01:08,020 --> 00:01:13,060
<font color="#E5E5E5">in it</font><font color="#CCCCCC"> this</font><font color="#E5E5E5"> is kind</font><font color="#CCCCCC"> of</font><font color="#E5E5E5"> a year of</font><font color="#CCCCCC"> parsed</font>

21
00:01:11,200 --> 00:01:14,710
knowledge<font color="#E5E5E5"> basically so I did one</font><font color="#CCCCCC"> of</font>

22
00:01:13,060 --> 00:01:17,470
<font color="#E5E5E5">these at Def Con 23 what I did is I took</font>

23
00:01:14,710 --> 00:01:18,669
all<font color="#CCCCCC"> of the top hunters back then they</font>

24
00:01:17,470 --> 00:01:22,030
didn't have<font color="#CCCCCC"> a</font><font color="#E5E5E5"> lot of blogs there was not</font>

25
00:01:18,670 --> 00:01:23,770
a lot<font color="#CCCCCC"> of information and and we took all</font>

26
00:01:22,030 --> 00:01:25,180
of their methods from their blogs and

27
00:01:23,770 --> 00:01:26,950
disclosures<font color="#E5E5E5"> and stuff like that try</font><font color="#CCCCCC"> to</font>

28
00:01:25,180 --> 00:01:29,770
distill them back to how they test and

29
00:01:26,950 --> 00:01:31,450
how they found big quality bugs<font color="#CCCCCC"> and then</font>

30
00:01:29,770 --> 00:01:33,100
what automation and tooling<font color="#E5E5E5"> was good in</font>

31
00:01:31,450 --> 00:01:34,450
<font color="#E5E5E5">those sections and so that kind of</font>

32
00:01:33,100 --> 00:01:37,479
turned into<font color="#E5E5E5"> this talk</font><font color="#CCCCCC"> that I gave at</font><font color="#E5E5E5"> Def</font>

33
00:01:34,450 --> 00:01:39,400
Con<font color="#CCCCCC"> and so the idea is</font><font color="#E5E5E5"> I redo this every</font>

34
00:01:37,479 --> 00:01:42,429
year with the new pertinent bugs that

35
00:01:39,400 --> 00:01:44,619
<font color="#E5E5E5">basically high quality</font><font color="#CCCCCC"> high-impact bug</font>

36
00:01:42,430 --> 00:01:48,369
bounty hunters find on programs<font color="#E5E5E5"> to help</font>

37
00:01:44,619 --> 00:01:49,659
<font color="#E5E5E5">the rest of us get up to there so the</font>

38
00:01:48,369 --> 00:01:51,670
first<font color="#E5E5E5"> version of the bug hunters</font>

39
00:01:49,659 --> 00:01:53,650
methodology had things like discovery

40
00:01:51,670 --> 00:01:55,110
and mapping and parameters<font color="#CCCCCC"> often attack</font>

41
00:01:53,650 --> 00:01:58,360
and this<font color="#E5E5E5"> one will have</font><font color="#CCCCCC"> those</font><font color="#E5E5E5"> things -</font>

42
00:01:55,110 --> 00:02:00,729
its up for<font color="#CCCCCC"> revitalized with</font><font color="#E5E5E5"> new data new</font>

43
00:01:58,360 --> 00:02:02,829
<font color="#E5E5E5">tools new fuzz strings filter evasion</font>

44
00:02:00,729 --> 00:02:04,390
<font color="#CCCCCC">techniques stuff like that the</font>

45
00:02:02,829 --> 00:02:05,710
vulnerability<font color="#CCCCCC"> classes I covered in</font><font color="#E5E5E5"> the</font>

46
00:02:04,390 --> 00:02:07,750
last presentations were things like

47
00:02:05,710 --> 00:02:10,869
sequel injection cross-site scripting

48
00:02:07,750 --> 00:02:11,920
file uploads<font color="#CCCCCC"> see surf and privilege</font><font color="#E5E5E5"> some</font>

49
00:02:10,869 --> 00:02:13,329
of those are going<font color="#CCCCCC"> to be the same and</font>

50
00:02:11,920 --> 00:02:14,798
some of them have<font color="#CCCCCC"> changed in the two</font>

51
00:02:13,329 --> 00:02:17,370
years since<font color="#CCCCCC"> I did this talk</font><font color="#E5E5E5"> at Def Con</font>

52
00:02:14,799 --> 00:02:20,560
<font color="#CCCCCC">so we're</font><font color="#E5E5E5"> gonna talk</font><font color="#CCCCCC"> about some of</font><font color="#E5E5E5"> those</font>

53
00:02:17,370 --> 00:02:22,299
so in this<font color="#CCCCCC"> years we're gonna do</font><font color="#E5E5E5"> more</font>

54
00:02:20,560 --> 00:02:24,700
discovery<font color="#E5E5E5"> a lot of discovery and I'll</font>

55
00:02:22,299 --> 00:02:26,889
talk about<font color="#E5E5E5"> why</font><font color="#CCCCCC"> that is</font><font color="#E5E5E5"> advents and</font>

56
00:02:24,700 --> 00:02:29,078
cross-site scripting<font color="#E5E5E5"> a new vulnerability</font>

57
00:02:26,889 --> 00:02:30,970
<font color="#CCCCCC">ish class called</font><font color="#E5E5E5"> server-side template</font>

58
00:02:29,079 --> 00:02:33,520
injection<font color="#CCCCCC"> server side</font><font color="#E5E5E5"> requests</font>

59
00:02:30,970 --> 00:02:35,560
<font color="#E5E5E5">forgery some advents in code scanning</font>

60
00:02:33,520 --> 00:02:37,270
for code injection command injections

61
00:02:35,560 --> 00:02:39,370
and just some<font color="#CCCCCC"> general advents and web</font>

62
00:02:37,270 --> 00:02:43,540
fuzzing and then infrastructure<font color="#E5E5E5"> and</font>

63
00:02:39,370 --> 00:02:45,040
configuration so when you're doing bug

64
00:02:43,540 --> 00:02:47,079
hunting you're getting into<font color="#E5E5E5"> ethical</font>

65
00:02:45,040 --> 00:02:49,239
hacking or<font color="#CCCCCC"> anything</font><font color="#E5E5E5"> like that</font><font color="#CCCCCC"> there are</font>

66
00:02:47,080 --> 00:02:50,470
<font color="#CCCCCC">some books that you'd really need to put</font>

67
00:02:49,240 --> 00:02:52,570
on your<font color="#E5E5E5"> bookshelf one is the web</font>

68
00:02:50,470 --> 00:02:54,160
application hacker's handbook<font color="#E5E5E5"> and this</font>

69
00:02:52,570 --> 00:02:55,480
is considered<font color="#E5E5E5"> kind of the Bible for the</font>

70
00:02:54,160 --> 00:02:57,970
web application hacker handbook it

71
00:02:55,480 --> 00:03:00,730
really<font color="#E5E5E5"> breaks down the methodology the</font>

72
00:02:57,970 --> 00:03:02,230
syntax<font color="#CCCCCC"> all of the attack techniques</font><font color="#E5E5E5"> and</font>

73
00:03:00,730 --> 00:03:03,579
it's written<font color="#E5E5E5"> by the authors of a tool</font>

74
00:03:02,230 --> 00:03:06,840
that<font color="#E5E5E5"> we all use in web application</font>

75
00:03:03,580 --> 00:03:09,340
hacking called burp burp suite proxy

76
00:03:06,840 --> 00:03:11,080
<font color="#CCCCCC">after that</font><font color="#E5E5E5"> shortly following that is the</font>

77
00:03:09,340 --> 00:03:13,390
<font color="#CCCCCC">OAuth</font><font color="#E5E5E5"> testing guide at the</font><font color="#CCCCCC"> bottom</font><font color="#E5E5E5"> and</font>

78
00:03:11,080 --> 00:03:15,550
that's<font color="#E5E5E5"> a you know referenced by</font><font color="#CCCCCC"> oh wasps</font>

79
00:03:13,390 --> 00:03:16,958
<font color="#E5E5E5">it has basically a list of all types of</font>

80
00:03:15,550 --> 00:03:19,959
vulnerabilities<font color="#CCCCCC"> and how to check for</font>

81
00:03:16,959 --> 00:03:23,560
<font color="#E5E5E5">those now they're having</font><font color="#CCCCCC"> a couple books</font>

82
00:03:19,959 --> 00:03:25,270
I really<font color="#E5E5E5"> recommend adding</font><font color="#CCCCCC"> two</font><font color="#E5E5E5"> to your</font>

83
00:03:23,560 --> 00:03:28,330
kind of bookshelf for<font color="#E5E5E5"> this and one</font><font color="#CCCCCC"> is</font>

84
00:03:25,270 --> 00:03:29,920
web hacking 101 by<font color="#CCCCCC"> Peter your ski this</font>

85
00:03:28,330 --> 00:03:31,150
book is<font color="#CCCCCC"> actually</font><font color="#E5E5E5"> really awesome it goes</font>

86
00:03:29,920 --> 00:03:32,769
through a<font color="#E5E5E5"> whole</font><font color="#CCCCCC"> bunch of disclosures of</font>

87
00:03:31,150 --> 00:03:33,970
his bugs and<font color="#E5E5E5"> other people's bugs on the</font>

88
00:03:32,770 --> 00:03:37,660
hacker<font color="#E5E5E5"> one platform because they have</font>

89
00:03:33,970 --> 00:03:39,820
disclosure breaking into security by

90
00:03:37,660 --> 00:03:41,799
Andy Gill and modern web penetration

91
00:03:39,820 --> 00:03:44,859
testing which<font color="#CCCCCC"> is a pact published book</font>

92
00:03:41,800 --> 00:03:46,120
<font color="#E5E5E5">so these three are kind of add-ons from</font>

93
00:03:44,860 --> 00:03:47,110
<font color="#E5E5E5">the last</font><font color="#CCCCCC"> presentation that you should</font>

94
00:03:46,120 --> 00:03:49,800
have in<font color="#CCCCCC"> your bookshelf if you're going</font>

95
00:03:47,110 --> 00:03:51,640
<font color="#E5E5E5">to do modern web application</font><font color="#CCCCCC"> assessment</font>

96
00:03:49,800 --> 00:03:54,459
<font color="#E5E5E5">so the first section of this</font>

97
00:03:51,640 --> 00:03:56,200
<font color="#CCCCCC">presentation is</font><font color="#E5E5E5"> all about discovery</font><font color="#CCCCCC"> the</font>

98
00:03:54,459 --> 00:03:58,120
idea here<font color="#CCCCCC"> is that if</font><font color="#E5E5E5"> you look at the</font>

99
00:03:56,200 --> 00:04:00,130
<font color="#E5E5E5">cross section of our researchers you can</font>

100
00:03:58,120 --> 00:04:01,180
think of them<font color="#E5E5E5"> or bug bounty hunters you</font>

101
00:04:00,130 --> 00:04:02,859
can think<font color="#E5E5E5"> of them in a triangle right</font>

102
00:04:01,180 --> 00:04:05,320
<font color="#CCCCCC">and at the top</font><font color="#E5E5E5"> we</font><font color="#CCCCCC"> have the heavy hitters</font>

103
00:04:02,860 --> 00:04:06,940
the guys that get paid<font color="#E5E5E5"> 10k a bug very</font>

104
00:04:05,320 --> 00:04:08,950
regularly<font color="#E5E5E5"> they do this for a full time</font>

105
00:04:06,940 --> 00:04:11,920
right they have a<font color="#E5E5E5"> certain set of skills</font>

106
00:04:08,950 --> 00:04:13,600
<font color="#E5E5E5">if you take their submissions and</font>

107
00:04:11,920 --> 00:04:15,790
reverse them out down into what

108
00:04:13,600 --> 00:04:17,260
vulnerability classes they're finding<font color="#E5E5E5"> so</font>

109
00:04:15,790 --> 00:04:18,909
we<font color="#CCCCCC"> wanted</font><font color="#E5E5E5"> to find out well how are they</font>

110
00:04:17,260 --> 00:04:20,560
and what<font color="#E5E5E5"> classes</font><font color="#CCCCCC"> of bugs</font><font color="#E5E5E5"> are they</font>

111
00:04:18,910 --> 00:04:22,180
finding at that top of that pyramid so

112
00:04:20,560 --> 00:04:24,070
we can get<font color="#E5E5E5"> the middle of the pack</font><font color="#CCCCCC"> up</font>

113
00:04:22,180 --> 00:04:26,919
there<font color="#E5E5E5"> right that's</font><font color="#CCCCCC"> what we want as</font>

114
00:04:24,070 --> 00:04:29,229
bugcrowd<font color="#CCCCCC"> so one of</font><font color="#E5E5E5"> the things that we</font>

115
00:04:26,919 --> 00:04:31,599
found is really<font color="#CCCCCC"> good hunters are really</font>

116
00:04:29,229 --> 00:04:34,240
good at finding<font color="#E5E5E5"> a tack surface that was</font>

117
00:04:31,600 --> 00:04:36,280
unknown which I call discovery<font color="#E5E5E5"> so what</font>

118
00:04:34,240 --> 00:04:38,050
this is is finding<font color="#E5E5E5"> websites that your</font>

119
00:04:36,280 --> 00:04:39,760
development crew stood up for two<font color="#CCCCCC"> days</font>

120
00:04:38,050 --> 00:04:41,380
and<font color="#CCCCCC"> never took down lawful offline</font>

121
00:04:39,760 --> 00:04:43,260
<font color="#CCCCCC">things like marketing sites that</font>

122
00:04:41,380 --> 00:04:44,620
marketing stood<font color="#E5E5E5"> up never took offline</font>

123
00:04:43,260 --> 00:04:46,449
internals

124
00:04:44,620 --> 00:04:47,800
systems that<font color="#CCCCCC"> have been left out there I</font>

125
00:04:46,449 --> 00:04:49,540
think there's a term<font color="#CCCCCC"> called for it</font>

126
00:04:47,800 --> 00:04:51,280
called like shadow<font color="#E5E5E5"> IT basically these</font>

127
00:04:49,540 --> 00:04:52,750
are<font color="#E5E5E5"> all those systems that everybody has</font>

128
00:04:51,280 --> 00:04:54,880
forgotten<font color="#E5E5E5"> but are still</font><font color="#CCCCCC"> connected to</font>

129
00:04:52,750 --> 00:04:58,030
<font color="#CCCCCC">your cloud infrastructure</font><font color="#E5E5E5"> or even your</font>

130
00:04:54,880 --> 00:05:00,340
<font color="#E5E5E5">real infrastructure</font><font color="#CCCCCC"> so this is a</font>

131
00:04:58,030 --> 00:05:01,590
methodology<font color="#CCCCCC"> that is parsed from myself</font>

132
00:05:00,340 --> 00:05:03,159
<font color="#E5E5E5">and a whole bunch</font><font color="#CCCCCC"> of other people</font>

133
00:05:01,590 --> 00:05:05,799
<font color="#E5E5E5">discovery is actually one of my</font>

134
00:05:03,160 --> 00:05:08,139
specialty areas and it goes through how

135
00:05:05,800 --> 00:05:09,699
<font color="#CCCCCC">to</font><font color="#E5E5E5"> find lost and orphan sites because</font>

136
00:05:08,139 --> 00:05:11,860
<font color="#E5E5E5">they are often less secured than the</font>

137
00:05:09,699 --> 00:05:15,520
main<font color="#E5E5E5"> comm and you can often find really</font>

138
00:05:11,860 --> 00:05:17,590
juicy vulnerabilities for<font color="#E5E5E5"> these sites</font><font color="#CCCCCC"> so</font>

139
00:05:15,520 --> 00:05:19,900
in the<font color="#E5E5E5"> last version we talked</font><font color="#CCCCCC"> about a</font>

140
00:05:17,590 --> 00:05:22,330
<font color="#E5E5E5">couple of things</font><font color="#CCCCCC"> which was</font><font color="#E5E5E5"> sub</font><font color="#CCCCCC"> domain</font>

141
00:05:19,900 --> 00:05:23,888
scraping<font color="#E5E5E5"> we talked about a couple of</font>

142
00:05:22,330 --> 00:05:26,080
tools and<font color="#E5E5E5"> we're gonna talk</font><font color="#CCCCCC"> about</font><font color="#E5E5E5"> advents</font>

143
00:05:23,889 --> 00:05:27,010
<font color="#E5E5E5">in these toolings and then also as some</font>

144
00:05:26,080 --> 00:05:30,820
of the other stuff that<font color="#E5E5E5"> goes along with</font>

145
00:05:27,010 --> 00:05:32,590
<font color="#E5E5E5">them so</font><font color="#CCCCCC"> when</font><font color="#E5E5E5"> you have this idea</font><font color="#CCCCCC"> of</font>

146
00:05:30,820 --> 00:05:34,659
finding domains that<font color="#CCCCCC"> are left out</font><font color="#E5E5E5"> on the</font>

147
00:05:32,590 --> 00:05:35,948
<font color="#E5E5E5">internet that</font><font color="#CCCCCC"> no one</font><font color="#E5E5E5"> remembers or that</font>

148
00:05:34,660 --> 00:05:38,289
you<font color="#E5E5E5"> just kind</font><font color="#CCCCCC"> of want to find all of the</font>

149
00:05:35,949 --> 00:05:40,300
application<font color="#E5E5E5"> space for one of these</font>

150
00:05:38,289 --> 00:05:41,919
<font color="#E5E5E5">companies the</font><font color="#CCCCCC"> first thing you want to do</font>

151
00:05:40,300 --> 00:05:43,690
is called subdomain scraping and

152
00:05:41,919 --> 00:05:45,099
subdomain scraping basically goes out to

153
00:05:43,690 --> 00:05:48,310
all<font color="#CCCCCC"> these sources</font><font color="#E5E5E5"> on the internet like</font>

154
00:05:45,100 --> 00:05:50,289
certificate certificate repository as it

155
00:05:48,310 --> 00:05:53,500
goes out<font color="#CCCCCC"> to search engines like</font><font color="#E5E5E5"> Google</font>

156
00:05:50,289 --> 00:05:54,940
<font color="#CCCCCC">and Bing and Baidu</font><font color="#E5E5E5"> and basically</font><font color="#CCCCCC"> it</font>

157
00:05:53,500 --> 00:05:56,800
search for your<font color="#E5E5E5"> main searches for your</font>

158
00:05:54,940 --> 00:05:58,599
<font color="#E5E5E5">main domain here like Tesla Tesla has an</font>

159
00:05:56,800 --> 00:05:59,889
open bug bounty so they you know<font color="#CCCCCC"> let</font><font color="#E5E5E5"> us</font>

160
00:05:58,599 --> 00:06:02,610
show all the tools running against their

161
00:05:59,889 --> 00:06:05,979
domain here<font color="#CCCCCC"> and you can see here that</font>

162
00:06:02,610 --> 00:06:09,450
this tool<font color="#E5E5E5"> will look in Bing Yahoo Google</font>

163
00:06:05,979 --> 00:06:13,389
<font color="#CCCCCC">ask net craft</font><font color="#E5E5E5"> pns dumpster virustotal</font>

164
00:06:09,450 --> 00:06:15,130
<font color="#CCCCCC">SSL certificate repositories and passive</font>

165
00:06:13,389 --> 00:06:17,169
<font color="#CCCCCC">dns</font><font color="#E5E5E5"> the</font><font color="#CCCCCC"> web site and it will</font><font color="#E5E5E5"> look for</font>

166
00:06:15,130 --> 00:06:18,550
anything<font color="#E5E5E5"> that has Tesla com associated</font>

167
00:06:17,169 --> 00:06:19,900
to it<font color="#E5E5E5"> and any of those sources and it</font>

168
00:06:18,550 --> 00:06:23,020
will parse<font color="#E5E5E5"> them out and give you a list</font>

169
00:06:19,900 --> 00:06:24,969
<font color="#E5E5E5">of everything it finds so this is a tool</font>

170
00:06:23,020 --> 00:06:27,940
<font color="#CCCCCC">called sub lister that combines</font><font color="#E5E5E5"> all of</font>

171
00:06:24,970 --> 00:06:31,479
<font color="#E5E5E5">those into one tool</font><font color="#CCCCCC"> it's made</font><font color="#E5E5E5"> by a</font>

172
00:06:27,940 --> 00:06:33,090
hunter called<font color="#E5E5E5"> Abu</font><font color="#CCCCCC"> Leia I think that's</font>

173
00:06:31,479 --> 00:06:36,070
right Abu Leia<font color="#CCCCCC"> something like</font><font color="#E5E5E5"> that</font>

174
00:06:33,090 --> 00:06:37,330
<font color="#CCCCCC">excuse me if I</font><font color="#E5E5E5"> put your names</font><font color="#CCCCCC"> and it</font>

175
00:06:36,070 --> 00:06:39,550
hasn't<font color="#E5E5E5"> been</font><font color="#CCCCCC"> updated in</font><font color="#E5E5E5"> a little while if</font>

176
00:06:37,330 --> 00:06:40,870
you look at<font color="#E5E5E5"> this</font><font color="#CCCCCC"> repository for sub</font>

177
00:06:39,550 --> 00:06:42,580
<font color="#CCCCCC">Lister there's actually a fork</font>

178
00:06:40,870 --> 00:06:45,310
maintained by another author that

179
00:06:42,580 --> 00:06:47,109
actually has a few more a few<font color="#CCCCCC"> more</font>

180
00:06:45,310 --> 00:06:48,430
parsing methods other<font color="#E5E5E5"> than being</font><font color="#CCCCCC"> Baidu</font>

181
00:06:47,110 --> 00:06:50,949
<font color="#CCCCCC">asked and all</font><font color="#E5E5E5"> the ones that are listed</font>

182
00:06:48,430 --> 00:06:52,570
<font color="#CCCCCC">here so if you just go to</font><font color="#E5E5E5"> the github and</font>

183
00:06:50,949 --> 00:06:54,219
go at the<font color="#E5E5E5"> forks look at the most updated</font>

184
00:06:52,570 --> 00:06:56,800
<font color="#E5E5E5">one and that guy actually has some</font>

185
00:06:54,219 --> 00:06:58,090
checks here to see where these redirect

186
00:06:56,800 --> 00:06:59,919
by IP

187
00:06:58,090 --> 00:07:01,659
and then also if they're associated<font color="#E5E5E5"> to</font>

188
00:06:59,919 --> 00:07:03,219
<font color="#CCCCCC">any places</font><font color="#E5E5E5"> where you could possibly</font>

189
00:07:01,660 --> 00:07:04,449
hijack the<font color="#CCCCCC"> subdomain</font><font color="#E5E5E5"> which is a</font>

190
00:07:03,220 --> 00:07:06,100
vulnerability we're going to talk at the

191
00:07:04,449 --> 00:07:09,190
<font color="#CCCCCC">end of the presentation about</font><font color="#E5E5E5"> which is</font>

192
00:07:06,100 --> 00:07:11,830
hijacking subdomains<font color="#E5E5E5"> so this is search</font>

193
00:07:09,190 --> 00:07:13,419
engine<font color="#E5E5E5"> basically scraping and so sub</font>

194
00:07:11,830 --> 00:07:17,740
<font color="#E5E5E5">Lister is one of the main tools to use</font>

195
00:07:13,419 --> 00:07:20,409
here for for finding orphaned<font color="#E5E5E5"> sites so</font>

196
00:07:17,740 --> 00:07:21,850
in<font color="#E5E5E5"> subdomain scraping this is one method</font>

197
00:07:20,410 --> 00:07:25,030
<font color="#E5E5E5">of discovery right there's lots of</font>

198
00:07:21,850 --> 00:07:26,560
methods<font color="#CCCCCC"> you</font><font color="#E5E5E5"> have two or</font><font color="#CCCCCC"> three tools that</font>

199
00:07:25,030 --> 00:07:29,289
<font color="#CCCCCC">are</font><font color="#E5E5E5"> really pertinent</font><font color="#CCCCCC"> in this area so you</font>

200
00:07:26,560 --> 00:07:30,610
have sub<font color="#CCCCCC"> lister</font><font color="#E5E5E5"> on the right here and</font>

201
00:07:29,290 --> 00:07:33,610
then you<font color="#E5E5E5"> have another tool set called</font>

202
00:07:30,610 --> 00:07:36,430
<font color="#CCCCCC">Recon</font><font color="#E5E5E5"> NJ recon</font><font color="#CCCCCC"> ng made by</font><font color="#E5E5E5"> Tim tomes</font><font color="#CCCCCC"> and</font>

203
00:07:33,610 --> 00:07:38,919
<font color="#E5E5E5">it's recon</font><font color="#CCCCCC"> ng is</font><font color="#E5E5E5"> actually a whole ocean</font>

204
00:07:36,430 --> 00:07:41,979
framework to do<font color="#E5E5E5"> discovery on people</font>

205
00:07:38,919 --> 00:07:45,430
places<font color="#E5E5E5"> domains</font><font color="#CCCCCC"> it can</font><font color="#E5E5E5"> do</font><font color="#CCCCCC"> OSINT</font><font color="#E5E5E5"> on</font>

206
00:07:41,979 --> 00:07:47,469
anywhere<font color="#CCCCCC"> and then I wrote a tool that</font>

207
00:07:45,430 --> 00:07:49,539
wraps around<font color="#E5E5E5"> recon ng called enum all</font>

208
00:07:47,470 --> 00:07:51,250
with this guy leaf right here<font color="#CCCCCC"> he</font>

209
00:07:49,539 --> 00:07:55,599
<font color="#E5E5E5">actually he did most of the coding</font><font color="#CCCCCC"> I</font>

210
00:07:51,250 --> 00:07:57,880
just managed it and and it does it does

211
00:07:55,600 --> 00:08:00,400
these<font color="#E5E5E5"> three on the</font><font color="#CCCCCC"> Left</font><font color="#E5E5E5"> SSL tools</font><font color="#CCCCCC"> calm</font>

212
00:07:57,880 --> 00:08:02,200
it parses from their API hacker target

213
00:08:00,400 --> 00:08:04,690
<font color="#E5E5E5">calm it pulls data from their API and</font>

214
00:08:02,200 --> 00:08:06,729
showed on<font color="#CCCCCC"> there are some optional</font>

215
00:08:04,690 --> 00:08:09,190
modules at the bottom<font color="#E5E5E5"> zoom I threat</font>

216
00:08:06,729 --> 00:08:12,070
crowd<font color="#E5E5E5"> I'm just a generic zone transfer</font>

217
00:08:09,190 --> 00:08:14,380
the risk<font color="#E5E5E5"> IQ API if you own an API key</font>

218
00:08:12,070 --> 00:08:16,750
<font color="#CCCCCC">for that</font><font color="#E5E5E5"> and census</font><font color="#CCCCCC"> that I do which if</font>

219
00:08:14,380 --> 00:08:18,909
you own an API key<font color="#CCCCCC"> for that you can pull</font>

220
00:08:16,750 --> 00:08:20,289
<font color="#CCCCCC">down</font><font color="#E5E5E5"> with recon ng I'm so are there</font>

221
00:08:18,910 --> 00:08:22,120
there<font color="#E5E5E5"> are some</font><font color="#CCCCCC"> that are specific to each</font>

222
00:08:20,289 --> 00:08:25,570
tool and a lot<font color="#CCCCCC"> of people end up using</font>

223
00:08:22,120 --> 00:08:29,710
both of<font color="#CCCCCC"> them oh and then both do the</font>

224
00:08:25,570 --> 00:08:31,120
<font color="#E5E5E5">middle column so luckily people realize</font>

225
00:08:29,710 --> 00:08:32,289
<font color="#CCCCCC">that you didn't want to use you don't</font>

226
00:08:31,120 --> 00:08:33,669
<font color="#E5E5E5">wanna have two tools and one so they</font>

227
00:08:32,289 --> 00:08:35,529
made a docker container called brute

228
00:08:33,669 --> 00:08:37,539
subs which basically<font color="#E5E5E5"> wraps these two</font>

229
00:08:35,529 --> 00:08:40,150
tools and one other<font color="#E5E5E5"> one</font><font color="#CCCCCC"> called alt DNS</font>

230
00:08:37,539 --> 00:08:41,799
which we're gonna mention soon into one

231
00:08:40,150 --> 00:08:43,390
docker container that runs from one

232
00:08:41,799 --> 00:08:46,000
command<font color="#CCCCCC"> because all you want to do is</font>

233
00:08:43,390 --> 00:08:48,100
<font color="#CCCCCC">really search one</font><font color="#E5E5E5"> domain for one command</font>

234
00:08:46,000 --> 00:08:50,080
parse all of these different input

235
00:08:48,100 --> 00:08:51,870
sources<font color="#E5E5E5"> and get a list of stuff</font><font color="#CCCCCC"> that you</font>

236
00:08:50,080 --> 00:08:54,250
might<font color="#CCCCCC"> want to hack on for bug bounties</font>

237
00:08:51,870 --> 00:08:57,220
<font color="#E5E5E5">so this is that docker container and</font>

238
00:08:54,250 --> 00:09:01,209
it's pretty simple<font color="#CCCCCC"> just</font><font color="#E5E5E5"> docker compose</font>

239
00:08:57,220 --> 00:09:03,160
with<font color="#E5E5E5"> your up and then you have to set a</font>

240
00:09:01,209 --> 00:09:06,280
config file with<font color="#E5E5E5"> your target and then it</font>

241
00:09:03,160 --> 00:09:07,660
<font color="#E5E5E5">runs all these tools on your on</font><font color="#CCCCCC"> your</font>

242
00:09:06,280 --> 00:09:09,339
target so here you<font color="#E5E5E5"> can see it's going</font>

243
00:09:07,660 --> 00:09:10,189
<font color="#CCCCCC">through and</font><font color="#E5E5E5"> using multiple</font><font color="#CCCCCC"> tools and</font>

244
00:09:09,339 --> 00:09:15,350
<font color="#CCCCCC">it'll</font><font color="#E5E5E5"> concatenate the</font>

245
00:09:10,190 --> 00:09:17,600
results<font color="#E5E5E5"> so that's called brute subs so</font>

246
00:09:15,350 --> 00:09:19,100
that's subdomain<font color="#E5E5E5"> scraping that's pulling</font>

247
00:09:17,600 --> 00:09:21,290
<font color="#E5E5E5">from all these sources on the Internet</font>

248
00:09:19,100 --> 00:09:24,680
to<font color="#CCCCCC"> find stuff</font><font color="#E5E5E5"> that's</font><font color="#CCCCCC"> either been cached</font>

249
00:09:21,290 --> 00:09:26,599
by a search engine<font color="#E5E5E5"> it's been sometimes</font>

250
00:09:24,680 --> 00:09:28,280
somehow leaked via<font color="#E5E5E5"> certificate something</font>

251
00:09:26,600 --> 00:09:31,460
like that there's another<font color="#E5E5E5"> couple of ways</font>

252
00:09:28,280 --> 00:09:35,089
<font color="#CCCCCC">to do</font><font color="#E5E5E5"> this which are pretty cool as well</font>

253
00:09:31,460 --> 00:09:36,650
so anybody<font color="#E5E5E5"> in here use CloudFlare some</font>

254
00:09:35,090 --> 00:09:39,620
of you right<font color="#E5E5E5"> so you know when you start</font>

255
00:09:36,650 --> 00:09:41,449
up<font color="#E5E5E5"> CloudFlare for domain they ask you</font>

256
00:09:39,620 --> 00:09:43,430
for<font color="#CCCCCC"> your domain and then they do like</font>

257
00:09:41,450 --> 00:09:45,020
this magic wizard<font color="#E5E5E5"> that shows you all</font><font color="#CCCCCC"> of</font>

258
00:09:43,430 --> 00:09:46,640
<font color="#E5E5E5">your sites right they have this giant</font>

259
00:09:45,020 --> 00:09:48,829
database at<font color="#E5E5E5"> CloudFlare already mapped</font>

260
00:09:46,640 --> 00:09:50,449
<font color="#E5E5E5">out of the</font><font color="#CCCCCC"> internet they know where your</font>

261
00:09:48,830 --> 00:09:52,010
domains are what<font color="#E5E5E5"> your donated space is</font>

262
00:09:50,450 --> 00:09:53,480
and what<font color="#E5E5E5"> IPS</font><font color="#CCCCCC"> are associated</font><font color="#E5E5E5"> to those</font>

263
00:09:52,010 --> 00:09:56,030
<font color="#E5E5E5">domains and they're ready to</font><font color="#CCCCCC"> deliver you</font>

264
00:09:53,480 --> 00:09:57,890
<font color="#E5E5E5">CloudFlare on all of those well as bug</font>

265
00:09:56,030 --> 00:10:00,740
hunters we created a script to go

266
00:09:57,890 --> 00:10:02,540
through that<font color="#E5E5E5"> login cycle and parse their</font>

267
00:10:00,740 --> 00:10:04,940
data set and pull it back<font color="#E5E5E5"> into the stuff</font>

268
00:10:02,540 --> 00:10:07,610
we should<font color="#E5E5E5"> attack so this is cloud filler</font>

269
00:10:04,940 --> 00:10:11,930
enum so<font color="#E5E5E5"> here's Disney I didn't run this</font>

270
00:10:07,610 --> 00:10:15,080
sorry<font color="#CCCCCC"> if you work at Disney</font><font color="#E5E5E5"> um this is</font>

271
00:10:11,930 --> 00:10:17,630
from<font color="#E5E5E5"> the main page sorry</font><font color="#CCCCCC"> and so you give</font>

272
00:10:15,080 --> 00:10:19,970
<font color="#CCCCCC">it your credentials</font><font color="#E5E5E5"> for CloudFlare you</font>

273
00:10:17,630 --> 00:10:21,980
just create a fake<font color="#CCCCCC"> account and then you</font>

274
00:10:19,970 --> 00:10:23,500
give it<font color="#E5E5E5"> your email</font><font color="#CCCCCC"> your credentials and</font>

275
00:10:21,980 --> 00:10:25,850
<font color="#E5E5E5">then</font><font color="#CCCCCC"> it</font><font color="#E5E5E5"> tells you what the CloudFlare</font>

276
00:10:23,500 --> 00:10:26,840
magic database comes back with this one

277
00:10:25,850 --> 00:10:28,640
<font color="#CCCCCC">actually gives</font><font color="#E5E5E5"> you some pretty good</font>

278
00:10:26,840 --> 00:10:30,740
<font color="#CCCCCC">information there's another project</font>

279
00:10:28,640 --> 00:10:32,540
<font color="#E5E5E5">called census</font><font color="#CCCCCC"> I Oh some of you might use</font>

280
00:10:30,740 --> 00:10:34,370
and there's a script to parse<font color="#CCCCCC"> that as</font>

281
00:10:32,540 --> 00:10:36,050
well<font color="#E5E5E5"> these haven't been integrated into</font>

282
00:10:34,370 --> 00:10:37,790
an automated<font color="#E5E5E5"> tool yet but they will</font><font color="#CCCCCC"> be</font>

283
00:10:36,050 --> 00:10:40,430
<font color="#E5E5E5">really shortly they'll actually part of</font>

284
00:10:37,790 --> 00:10:44,240
the new<font color="#CCCCCC"> fork</font><font color="#E5E5E5"> of</font><font color="#CCCCCC"> sub lister which I'm</font>

285
00:10:40,430 --> 00:10:47,180
helping with<font color="#E5E5E5"> so so that's sub scraping</font>

286
00:10:44,240 --> 00:10:48,650
getting getting<font color="#E5E5E5"> subdomains</font><font color="#CCCCCC"> from a whole</font>

287
00:10:47,180 --> 00:10:50,420
<font color="#E5E5E5">bunch of sources</font><font color="#CCCCCC"> that are out on the</font>

288
00:10:48,650 --> 00:10:52,430
<font color="#E5E5E5">internet and trying to list them out so</font>

289
00:10:50,420 --> 00:10:54,079
you can attack them and find the juicy

290
00:10:52,430 --> 00:10:56,390
<font color="#CCCCCC">ones where the good vulnerabilities are</font>

291
00:10:54,080 --> 00:10:58,580
there's also this idea<font color="#E5E5E5"> of subdomain</font>

292
00:10:56,390 --> 00:11:01,520
<font color="#CCCCCC">brute forcing</font><font color="#E5E5E5"> right so you have Tesla</font>

293
00:10:58,580 --> 00:11:03,170
com and then you just<font color="#E5E5E5"> try to resolve</font>

294
00:11:01,520 --> 00:11:05,569
<font color="#E5E5E5">admin that Tesla that comment if that</font>

295
00:11:03,170 --> 00:11:07,189
doesn't work you try<font color="#CCCCCC"> to resolve</font><font color="#E5E5E5"> customer</font>

296
00:11:05,570 --> 00:11:08,930
service Tesla<font color="#CCCCCC"> calm right and</font><font color="#E5E5E5"> this is</font>

297
00:11:07,190 --> 00:11:11,660
brute force this is brute forcing the

298
00:11:08,930 --> 00:11:13,069
subdomain part of the domain there's

299
00:11:11,660 --> 00:11:15,140
multiple tools that have existed for

300
00:11:13,070 --> 00:11:17,450
<font color="#E5E5E5">this for a long</font><font color="#CCCCCC"> time right some</font><font color="#E5E5E5"> of you</font>

301
00:11:15,140 --> 00:11:19,520
might have<font color="#E5E5E5"> heard</font><font color="#CCCCCC"> of</font><font color="#E5E5E5"> fierce which is</font>

302
00:11:17,450 --> 00:11:21,300
older but<font color="#E5E5E5"> very common ones hot and pen</font>

303
00:11:19,520 --> 00:11:24,060
<font color="#E5E5E5">testing</font><font color="#CCCCCC"> courses</font>

304
00:11:21,300 --> 00:11:25,290
really there's a new class of<font color="#E5E5E5"> this tool</font>

305
00:11:24,060 --> 00:11:27,119
<font color="#E5E5E5">that have come out</font><font color="#CCCCCC"> in the</font><font color="#E5E5E5"> last couple</font>

306
00:11:25,290 --> 00:11:29,790
<font color="#E5E5E5">years that dramatically increase the</font>

307
00:11:27,120 --> 00:11:32,630
<font color="#E5E5E5">efficiency of this type of finding</font>

308
00:11:29,790 --> 00:11:37,020
basically so there's<font color="#E5E5E5"> two tools one is</font>

309
00:11:32,630 --> 00:11:39,600
<font color="#E5E5E5">mass DNS</font><font color="#CCCCCC"> and one is</font><font color="#E5E5E5"> gogo</font><font color="#CCCCCC"> Buster</font><font color="#E5E5E5"> and both</font>

310
00:11:37,020 --> 00:11:42,240
of these are brute force tools<font color="#CCCCCC"> with the</font>

311
00:11:39,600 --> 00:11:44,370
<font color="#E5E5E5">syntax listed here and so I did a case</font>

312
00:11:42,240 --> 00:11:47,070
study<font color="#CCCCCC"> of</font><font color="#E5E5E5"> how long it took to run through</font>

313
00:11:44,370 --> 00:11:48,420
a<font color="#CCCCCC"> one million</font><font color="#E5E5E5"> one</font><font color="#CCCCCC"> hundred thirty six</font>

314
00:11:47,070 --> 00:11:51,120
thousand nine<font color="#E5E5E5"> hundred</font><font color="#CCCCCC"> and sixty four</font>

315
00:11:48,420 --> 00:11:53,610
line<font color="#CCCCCC"> sub-domain</font><font color="#E5E5E5"> brute force list which I</font>

316
00:11:51,120 --> 00:11:55,830
made I took every tool that<font color="#E5E5E5"> had ever</font>

317
00:11:53,610 --> 00:11:57,390
seen<font color="#CCCCCC"> do subdomain route for saying I</font>

318
00:11:55,830 --> 00:11:59,100
<font color="#CCCCCC">catted it and unique it into one file</font>

319
00:11:57,390 --> 00:12:02,160
<font color="#E5E5E5">and I'm talking about stuff that's from</font>

320
00:11:59,100 --> 00:12:03,420
like<font color="#CCCCCC"> fifteen years ago I put it all into</font>

321
00:12:02,160 --> 00:12:06,000
<font color="#E5E5E5">one file and I ran it through</font><font color="#CCCCCC"> some of</font>

322
00:12:03,420 --> 00:12:07,829
these tools<font color="#E5E5E5"> so</font><font color="#CCCCCC"> you</font><font color="#E5E5E5"> can</font><font color="#CCCCCC"> see the runtime</font>

323
00:12:06,000 --> 00:12:09,990
sub<font color="#CCCCCC"> route which</font><font color="#E5E5E5"> is a common</font><font color="#CCCCCC"> when</font><font color="#E5E5E5"> taught</font>

324
00:12:07,830 --> 00:12:11,610
<font color="#E5E5E5">in pen testing classes just air it</font><font color="#CCCCCC"> out</font>

325
00:12:09,990 --> 00:12:15,180
with this size of a<font color="#CCCCCC"> dictionary</font><font color="#E5E5E5"> you just</font>

326
00:12:11,610 --> 00:12:15,830
couldn't<font color="#E5E5E5"> do it</font><font color="#CCCCCC"> go Buster</font><font color="#E5E5E5"> took about 21</font>

327
00:12:15,180 --> 00:12:18,870
minutes

328
00:12:15,830 --> 00:12:21,000
<font color="#CCCCCC">math DNS because it's a</font><font color="#E5E5E5"> distributed</font>

329
00:12:18,870 --> 00:12:23,220
program written<font color="#E5E5E5"> in C</font><font color="#CCCCCC"> and it used</font><font color="#E5E5E5"> mul it</font>

330
00:12:21,000 --> 00:12:27,839
uses multiple DNS resolvers to try to

331
00:12:23,220 --> 00:12:29,850
resolve the DNS<font color="#E5E5E5"> uses up to 150</font><font color="#CCCCCC"> took 1</font>

332
00:12:27,839 --> 00:12:32,610
minute<font color="#E5E5E5"> in 24 seconds to run that whole</font>

333
00:12:29,850 --> 00:12:36,240
file<font color="#CCCCCC"> now there are false positives in</font>

334
00:12:32,610 --> 00:12:37,980
this tool<font color="#CCCCCC"> so depending</font><font color="#E5E5E5"> on the resolvers</font>

335
00:12:36,240 --> 00:12:40,170
that are returning<font color="#E5E5E5"> stuff sometimes</font>

336
00:12:37,980 --> 00:12:41,730
they'll<font color="#CCCCCC"> just return</font><font color="#E5E5E5"> yes that this thing</font>

337
00:12:40,170 --> 00:12:42,930
resolved for a lot of<font color="#E5E5E5"> stuff that didn't</font>

338
00:12:41,730 --> 00:12:44,970
resolve<font color="#E5E5E5"> so you'll get false positives</font>

339
00:12:42,930 --> 00:12:46,170
<font color="#CCCCCC">but the thing you'll notice about the</font>

340
00:12:44,970 --> 00:12:48,180
false positives<font color="#E5E5E5"> in the output of</font>

341
00:12:46,170 --> 00:12:49,740
<font color="#E5E5E5">nastiness is that they're pretty pretty</font>

342
00:12:48,180 --> 00:12:51,660
<font color="#E5E5E5">easy to spot because they all return</font>

343
00:12:49,740 --> 00:12:52,980
like these generic like<font color="#E5E5E5"> cname errors in</font>

344
00:12:51,660 --> 00:12:54,329
the tool and so you'll know right<font color="#E5E5E5"> away</font>

345
00:12:52,980 --> 00:12:57,120
<font color="#CCCCCC">that they're false positives and</font><font color="#E5E5E5"> you can</font>

346
00:12:54,329 --> 00:12:59,160
just<font color="#E5E5E5"> grab them out so mass DNS and as a</font>

347
00:12:57,120 --> 00:13:00,630
<font color="#E5E5E5">backup go Buster are the tools that you</font>

348
00:12:59,160 --> 00:13:03,060
should<font color="#CCCCCC"> probably use for</font><font color="#E5E5E5"> subdomain</font>

349
00:13:00,630 --> 00:13:07,140
<font color="#CCCCCC">brute-forcing</font><font color="#E5E5E5"> and this is the hardware</font><font color="#CCCCCC"> I</font>

350
00:13:03,060 --> 00:13:08,399
used for that<font color="#E5E5E5"> case</font><font color="#CCCCCC"> so</font><font color="#E5E5E5"> at the bottom and</font>

351
00:13:07,140 --> 00:13:11,689
<font color="#E5E5E5">you'll have to excuse me I've been sick</font>

352
00:13:08,399 --> 00:13:15,410
like all week so I'm trying to you know

353
00:13:11,690 --> 00:13:17,579
persevere<font color="#CCCCCC"> ok</font><font color="#E5E5E5"> so we talked about</font>

354
00:13:15,410 --> 00:13:19,800
subdomain<font color="#E5E5E5"> brute forcing this is the</font>

355
00:13:17,579 --> 00:13:22,500
combination<font color="#CCCCCC"> of</font><font color="#E5E5E5"> basically all of</font><font color="#CCCCCC"> those</font>

356
00:13:19,800 --> 00:13:24,689
word lists for<font color="#E5E5E5"> the brute forcing</font><font color="#CCCCCC"> I just</font>

357
00:13:22,500 --> 00:13:26,579
called it all dot txt it's a<font color="#E5E5E5"> gist at</font>

358
00:13:24,690 --> 00:13:29,520
this address<font color="#CCCCCC"> you can grab it I use</font><font color="#E5E5E5"> it in</font>

359
00:13:26,579 --> 00:13:31,140
<font color="#E5E5E5">my pen testing all the time this is like</font>

360
00:13:29,520 --> 00:13:33,089
every program that's ever done DNS

361
00:13:31,140 --> 00:13:34,710
<font color="#CCCCCC">brute-forcing on the right here</font><font color="#E5E5E5"> just put</font>

362
00:13:33,089 --> 00:13:36,510
those all<font color="#E5E5E5"> into one list</font><font color="#CCCCCC"> unique</font>

363
00:13:34,710 --> 00:13:41,580
it and so<font color="#E5E5E5"> now you have that for your own</font>

364
00:13:36,510 --> 00:13:43,319
usage<font color="#CCCCCC"> mass DNS is at blek schmidt that's</font>

365
00:13:41,580 --> 00:13:44,820
where you can<font color="#E5E5E5"> pull down</font><font color="#CCCCCC"> massey</font><font color="#E5E5E5"> and</font><font color="#CCCCCC"> ask</font>

366
00:13:43,320 --> 00:13:46,260
to do some of this<font color="#CCCCCC"> and so those are</font>

367
00:13:44,820 --> 00:13:48,450
those<font color="#CCCCCC"> are</font><font color="#E5E5E5"> two</font><font color="#CCCCCC"> advents</font><font color="#E5E5E5"> and kind of</font>

368
00:13:46,260 --> 00:13:52,140
subdomain brute-forcing<font color="#CCCCCC"> in that part</font><font color="#E5E5E5"> of</font>

369
00:13:48,450 --> 00:13:54,690
discovery<font color="#E5E5E5"> in addition when you have a</font>

370
00:13:52,140 --> 00:13:57,540
bug bounty<font color="#E5E5E5"> that is open scope enough</font>

371
00:13:54,690 --> 00:13:59,580
like Tesla's Tesla's is basically any

372
00:13:57,540 --> 00:14:01,290
system<font color="#CCCCCC"> that you can verify that</font><font color="#E5E5E5"> Tesla</font>

373
00:13:59,580 --> 00:14:03,720
<font color="#E5E5E5">own is included in their their bug</font>

374
00:14:01,290 --> 00:14:05,459
bounty<font color="#CCCCCC"> you can check for acquisitions</font>

375
00:14:03,720 --> 00:14:08,580
for some of these programs<font color="#E5E5E5"> as well as in</font>

376
00:14:05,460 --> 00:14:10,020
<font color="#CCCCCC">Facebook in</font><font color="#E5E5E5"> Google but they have a wait</font>

377
00:14:08,580 --> 00:14:11,580
<font color="#E5E5E5">period they have like I</font><font color="#CCCCCC"> think it's</font><font color="#E5E5E5"> maybe</font>

378
00:14:10,020 --> 00:14:13,680
<font color="#CCCCCC">three months</font><font color="#E5E5E5"> after they acquire a</font>

379
00:14:11,580 --> 00:14:15,960
company<font color="#CCCCCC"> you might need</font><font color="#E5E5E5"> to wait</font><font color="#CCCCCC"> until you</font>

380
00:14:13,680 --> 00:14:17,339
submit<font color="#E5E5E5"> it to their bug bounty and I'm</font>

381
00:14:15,960 --> 00:14:20,940
<font color="#E5E5E5">assuming that's how long it takes them</font>

382
00:14:17,340 --> 00:14:21,960
<font color="#CCCCCC">to migrate IT over to Facebook or</font><font color="#E5E5E5"> Google</font>

383
00:14:20,940 --> 00:14:24,630
I can't remember which<font color="#CCCCCC"> one in the wait</font>

384
00:14:21,960 --> 00:14:26,040
<font color="#CCCCCC">period</font><font color="#E5E5E5"> is on but once you do that you</font>

385
00:14:24,630 --> 00:14:28,860
<font color="#E5E5E5">want to have mapped out that hey look</font>

386
00:14:26,040 --> 00:14:31,650
<font color="#E5E5E5">Tesla acquired</font><font color="#CCCCCC"> groomin</font><font color="#E5E5E5"> engineering Solar</font>

387
00:14:28,860 --> 00:14:33,390
City and<font color="#CCCCCC"> Riviera</font><font color="#E5E5E5"> tool over</font><font color="#CCCCCC"> the</font><font color="#E5E5E5"> course of</font>

388
00:14:31,650 --> 00:14:35,280
<font color="#E5E5E5">their lifetime</font><font color="#CCCCCC"> are all those assets that</font>

389
00:14:33,390 --> 00:14:36,600
<font color="#CCCCCC">might be related to a company that</font><font color="#E5E5E5"> Tesla</font>

390
00:14:35,280 --> 00:14:38,459
now owns have they been tested

391
00:14:36,600 --> 00:14:40,710
<font color="#E5E5E5">have they been hacked do they have</font>

392
00:14:38,460 --> 00:14:42,240
bounty related vulnerabilities on them

393
00:14:40,710 --> 00:14:44,280
<font color="#E5E5E5">maybe maybe not</font>

394
00:14:42,240 --> 00:14:45,780
so<font color="#CCCCCC"> CrunchBase is the place to go</font><font color="#E5E5E5"> for</font>

395
00:14:44,280 --> 00:14:48,000
this<font color="#CCCCCC"> CrunchBase has a lot of financial</font>

396
00:14:45,780 --> 00:14:49,199
data related to acquisitions and stuff

397
00:14:48,000 --> 00:14:54,300
<font color="#E5E5E5">like that so you can</font><font color="#CCCCCC"> go to crunchbase</font>

398
00:14:49,200 --> 00:14:56,670
and pull down<font color="#CCCCCC"> related acquisitions so</font>

399
00:14:54,300 --> 00:14:59,250
then after<font color="#CCCCCC"> you have all of these hosts</font>

400
00:14:56,670 --> 00:15:01,500
via<font color="#E5E5E5"> subdomain scraping brute-forcing</font>

401
00:14:59,250 --> 00:15:02,970
maybe some<font color="#CCCCCC"> acquisitions</font><font color="#E5E5E5"> and when you</font>

402
00:15:01,500 --> 00:15:04,380
find the<font color="#E5E5E5"> act</font><font color="#CCCCCC"> with</font><font color="#E5E5E5"> the acquired companies</font>

403
00:15:02,970 --> 00:15:06,300
<font color="#CCCCCC">and their domains you put them back</font>

404
00:15:04,380 --> 00:15:08,310
<font color="#E5E5E5">through the subdomain scraping and brute</font>

405
00:15:06,300 --> 00:15:09,599
<font color="#E5E5E5">forcing you finally have this large list</font>

406
00:15:08,310 --> 00:15:12,329
of targets maybe you want<font color="#E5E5E5"> to go after</font>

407
00:15:09,600 --> 00:15:13,970
<font color="#E5E5E5">now you have to port scan because to not</font>

408
00:15:12,330 --> 00:15:16,710
<font color="#E5E5E5">port that port scan them would be</font>

409
00:15:13,970 --> 00:15:18,120
unfruitful<font color="#CCCCCC"> what happens a</font><font color="#E5E5E5"> lot of times</font>

410
00:15:16,710 --> 00:15:19,650
is these things have remote

411
00:15:18,120 --> 00:15:21,720
administration protocols open on them

412
00:15:19,650 --> 00:15:23,970
they have web servers<font color="#E5E5E5"> running on high</font>

413
00:15:21,720 --> 00:15:26,100
ports that people don't even<font color="#E5E5E5"> think to</font>

414
00:15:23,970 --> 00:15:27,960
<font color="#E5E5E5">look out for so you</font><font color="#CCCCCC"> know in the</font>

415
00:15:26,100 --> 00:15:32,910
traditional<font color="#E5E5E5"> kind of web testing method</font>

416
00:15:27,960 --> 00:15:35,430
you would use nmap to scan and<font color="#E5E5E5"> 65,000</font>

417
00:15:32,910 --> 00:15:37,949
<font color="#E5E5E5">host with</font><font color="#CCCCCC"> nmap</font><font color="#E5E5E5"> this is a large targets</font>

418
00:15:35,430 --> 00:15:39,390
<font color="#CCCCCC">ASN</font><font color="#E5E5E5"> or maybe a large discovery from the</font>

419
00:15:37,950 --> 00:15:40,770
methods we just mentioned<font color="#CCCCCC"> before that</font>

420
00:15:39,390 --> 00:15:42,210
<font color="#CCCCCC">just takes forever</font>

421
00:15:40,770 --> 00:15:44,579
<font color="#E5E5E5">it'll just like put you to sleep if you</font>

422
00:15:42,210 --> 00:15:46,650
<font color="#CCCCCC">want to test all ports</font><font color="#E5E5E5"> or even just the</font>

423
00:15:44,580 --> 00:15:47,809
default<font color="#CCCCCC"> and month</font><font color="#E5E5E5"> and</font><font color="#CCCCCC"> map ports</font><font color="#E5E5E5"> list for</font>

424
00:15:46,650 --> 00:15:49,399
this

425
00:15:47,809 --> 00:15:51,169
you might as well<font color="#E5E5E5"> wait a month for that</font>

426
00:15:49,399 --> 00:15:53,989
type of<font color="#CCCCCC"> scanner</font><font color="#E5E5E5"> maybe a week maybe maybe</font>

427
00:15:51,169 --> 00:15:55,929
a week<font color="#E5E5E5"> some</font><font color="#CCCCCC"> masscan is</font><font color="#E5E5E5"> the solution</font><font color="#CCCCCC"> to</font>

428
00:15:53,989 --> 00:15:57,859
<font color="#E5E5E5">this problem distributed written in C</font>

429
00:15:55,929 --> 00:16:01,009
<font color="#E5E5E5">actually not distributed written in C</font>

430
00:15:57,859 --> 00:16:03,559
<font color="#E5E5E5">way faster higher higher error tolerance</font>

431
00:16:01,009 --> 00:16:06,519
on the scanning<font color="#E5E5E5"> so this is the syntax</font>

432
00:16:03,559 --> 00:16:10,299
<font color="#E5E5E5">for running masscan against 65,000 hosts</font>

433
00:16:06,519 --> 00:16:12,619
<font color="#CCCCCC">with the</font><font color="#E5E5E5"> default</font><font color="#CCCCCC"> end map</font><font color="#E5E5E5"> port range</font>

434
00:16:10,299 --> 00:16:14,329
<font color="#CCCCCC">you'll</font><font color="#E5E5E5"> need some serious hardware in the</font>

435
00:16:12,619 --> 00:16:16,009
cloud to<font color="#E5E5E5"> probably do this so I I</font>

436
00:16:14,329 --> 00:16:18,410
commissioned a digital ocean box with

437
00:16:16,009 --> 00:16:21,139
plenty<font color="#CCCCCC"> of memory and bandwidth</font><font color="#E5E5E5"> but time</font>

438
00:16:18,410 --> 00:16:24,649
to run 65,000<font color="#E5E5E5"> hosts with the default</font><font color="#CCCCCC"> end</font>

439
00:16:21,139 --> 00:16:27,309
<font color="#E5E5E5">map</font><font color="#CCCCCC"> scrip ort lists</font><font color="#E5E5E5"> 11 minutes which is</font>

440
00:16:24,649 --> 00:16:29,509
<font color="#E5E5E5">not that bad for</font><font color="#CCCCCC"> this so pretty amazing</font>

441
00:16:27,309 --> 00:16:31,009
<font color="#CCCCCC">alright so you have a port scan you have</font>

442
00:16:29,509 --> 00:16:32,299
a whole bunch of domains with ports on

443
00:16:31,009 --> 00:16:35,989
them<font color="#CCCCCC"> that are open you're ready to hack</font>

444
00:16:32,299 --> 00:16:37,160
them now you need to<font color="#CCCCCC"> know</font><font color="#E5E5E5"> which one of</font>

445
00:16:35,989 --> 00:16:40,269
these<font color="#E5E5E5"> domains that you pulled down</font>

446
00:16:37,160 --> 00:16:42,529
earlier are worthy of<font color="#E5E5E5"> attacking first</font>

447
00:16:40,269 --> 00:16:43,819
<font color="#E5E5E5">some of those sources that we pulled</font>

448
00:16:42,529 --> 00:16:45,439
<font color="#E5E5E5">from might have been taken offline</font>

449
00:16:43,819 --> 00:16:46,939
<font color="#E5E5E5">because one of them was search engines</font>

450
00:16:45,439 --> 00:16:48,919
right in search engines cache<font color="#E5E5E5"> old</font>

451
00:16:46,939 --> 00:16:50,059
<font color="#E5E5E5">information sometimes so some of those</font>

452
00:16:48,919 --> 00:16:52,129
domains<font color="#E5E5E5"> might have been pulled off line</font>

453
00:16:50,059 --> 00:16:53,959
some<font color="#E5E5E5"> of the domains might exist as a DNS</font>

454
00:16:52,129 --> 00:16:57,709
entry but they might redirect<font color="#E5E5E5"> to the</font>

455
00:16:53,959 --> 00:16:59,388
main<font color="#CCCCCC"> Tesla comm site</font><font color="#E5E5E5"> so how do you how</font>

456
00:16:57,709 --> 00:17:01,699
do you account for that<font color="#CCCCCC"> in your</font><font color="#E5E5E5"> recon</font>

457
00:16:59,389 --> 00:17:03,350
<font color="#CCCCCC">well you can use a tool like eyewitness</font>

458
00:17:01,699 --> 00:17:05,418
which basically takes<font color="#E5E5E5"> a list of</font>

459
00:17:03,350 --> 00:17:09,500
everything<font color="#E5E5E5"> you</font><font color="#CCCCCC"> have</font><font color="#E5E5E5"> which is</font><font color="#CCCCCC"> at this</font>

460
00:17:05,419 --> 00:17:12,470
point domain names and subdomains<font color="#CCCCCC"> and</font>

461
00:17:09,500 --> 00:17:13,970
appends HTTP and HTTPS<font color="#E5E5E5"> tries to resolve</font>

462
00:17:12,470 --> 00:17:16,010
each one of those and<font color="#CCCCCC"> takes a</font><font color="#E5E5E5"> screenshot</font>

463
00:17:13,970 --> 00:17:17,480
<font color="#E5E5E5">of each site after all the resolving has</font>

464
00:17:16,010 --> 00:17:19,669
taken place<font color="#E5E5E5"> and all the redirects have</font>

465
00:17:17,480 --> 00:17:23,000
taken place then you get a folder like

466
00:17:19,669 --> 00:17:25,010
<font color="#E5E5E5">this on the right which has all of the</font>

467
00:17:23,000 --> 00:17:27,319
basically<font color="#E5E5E5"> pictures of what it landed on</font>

468
00:17:25,010 --> 00:17:28,809
and you can<font color="#E5E5E5"> start to get a good feeling</font>

469
00:17:27,319 --> 00:17:30,559
<font color="#E5E5E5">as</font><font color="#CCCCCC"> to what you want to</font><font color="#E5E5E5"> hack first</font>

470
00:17:28,809 --> 00:17:32,480
<font color="#E5E5E5">obviously if you land on something</font>

471
00:17:30,559 --> 00:17:34,580
<font color="#E5E5E5">that's like an admin page or a developer</font>

472
00:17:32,480 --> 00:17:36,679
console or a login<font color="#E5E5E5"> you want to check</font>

473
00:17:34,580 --> 00:17:37,820
those<font color="#E5E5E5"> out</font><font color="#CCCCCC"> if it's just the Tesla normal</font>

474
00:17:36,679 --> 00:17:40,460
home page that<font color="#CCCCCC"> you're supposed to</font><font color="#E5E5E5"> land</font>

475
00:17:37,820 --> 00:17:42,668
on probably not<font color="#CCCCCC"> gonna</font><font color="#E5E5E5"> prioritize that</font>

476
00:17:40,460 --> 00:17:42,669
right away

477
00:17:44,289 --> 00:17:52,129
<font color="#CCCCCC">alright so now you have domains</font><font color="#E5E5E5"> ports</font>

478
00:17:48,649 --> 00:17:54,469
<font color="#CCCCCC">prioritize places to test via like</font>

479
00:17:52,130 --> 00:17:56,419
visual identification<font color="#E5E5E5"> now you kind of</font>

480
00:17:54,470 --> 00:17:58,730
want to do some platform identification

481
00:17:56,419 --> 00:18:01,280
and to see if any<font color="#E5E5E5"> of their web server</font>

482
00:17:58,730 --> 00:18:02,990
software or components are outdated

483
00:18:01,280 --> 00:18:04,790
<font color="#CCCCCC">these will provide</font><font color="#E5E5E5"> quick wins and</font>

484
00:18:02,990 --> 00:18:06,410
bounties<font color="#CCCCCC"> if those vulnerability is</font>

485
00:18:04,790 --> 00:18:08,420
associated to old versions in their

486
00:18:06,410 --> 00:18:10,370
server<font color="#CCCCCC"> software</font><font color="#E5E5E5"> or their</font><font color="#CCCCCC"> third-party</font>

487
00:18:08,420 --> 00:18:11,900
code is vulnerable<font color="#E5E5E5"> to</font><font color="#CCCCCC"> something you</font><font color="#E5E5E5"> want</font>

488
00:18:10,370 --> 00:18:12,979
to<font color="#E5E5E5"> do any</font><font color="#CCCCCC"> work basically</font><font color="#E5E5E5"> you'll see that</font>

489
00:18:11,900 --> 00:18:15,560
they're<font color="#E5E5E5"> running an old</font><font color="#CCCCCC"> version</font><font color="#E5E5E5"> of</font>

490
00:18:12,980 --> 00:18:17,090
something<font color="#E5E5E5"> you'll go google it you'll see</font>

491
00:18:15,560 --> 00:18:18,320
<font color="#CCCCCC">ok</font><font color="#E5E5E5"> here's the exploit for that and</font>

492
00:18:17,090 --> 00:18:20,510
you'll exploit it<font color="#CCCCCC"> and you don't</font><font color="#E5E5E5"> have to</font>

493
00:18:18,320 --> 00:18:21,950
do any work yourself<font color="#CCCCCC"> so there's a couple</font>

494
00:18:20,510 --> 00:18:23,810
<font color="#E5E5E5">of things from the first presentation we</font>

495
00:18:21,950 --> 00:18:25,340
talked about<font color="#E5E5E5"> this tool called retire</font><font color="#CCCCCC"> j/s</font>

496
00:18:23,810 --> 00:18:28,100
which will go through<font color="#E5E5E5"> third-party</font><font color="#CCCCCC"> Java</font>

497
00:18:25,340 --> 00:18:29,780
<font color="#E5E5E5">JavaScript libraries and tell you if</font>

498
00:18:28,100 --> 00:18:32,689
<font color="#CCCCCC">nodejs is out of</font><font color="#E5E5E5"> date</font><font color="#CCCCCC"> and has</font>

499
00:18:29,780 --> 00:18:34,610
<font color="#CCCCCC">vulnerabilities associated to it for</font>

500
00:18:32,690 --> 00:18:36,460
technology mapping<font color="#E5E5E5"> to see what a site is</font>

501
00:18:34,610 --> 00:18:38,780
actually<font color="#CCCCCC"> running on the</font><font color="#E5E5E5"> server side what</font>

502
00:18:36,460 --> 00:18:41,240
<font color="#E5E5E5">stack it's running there's</font><font color="#CCCCCC"> rap</font><font color="#E5E5E5"> eliezer</font>

503
00:18:38,780 --> 00:18:44,149
and built<font color="#CCCCCC"> width</font><font color="#E5E5E5"> and now there's a new</font>

504
00:18:41,240 --> 00:18:47,420
burp<font color="#E5E5E5"> plug-in called vulnera and map</font>

505
00:18:44,150 --> 00:18:50,750
<font color="#CCCCCC">plugin for voters that as</font><font color="#E5E5E5"> you passively</font>

506
00:18:47,420 --> 00:18:54,860
visit sites in burp<font color="#E5E5E5"> instead of just</font>

507
00:18:50,750 --> 00:18:56,330
giving<font color="#E5E5E5"> you basically</font><font color="#CCCCCC"> the</font><font color="#E5E5E5"> application</font>

508
00:18:54,860 --> 00:18:58,340
level vulnerabilities it'll also<font color="#E5E5E5"> start</font>

509
00:18:56,330 --> 00:19:00,560
parsing<font color="#CCCCCC"> version numbers that show up in</font>

510
00:18:58,340 --> 00:19:02,360
<font color="#CCCCCC">readme x' in the headers everywhere and</font>

511
00:19:00,560 --> 00:19:04,070
tell you that there's vulnerabilities

512
00:19:02,360 --> 00:19:06,379
associated to anything behind<font color="#E5E5E5"> the</font>

513
00:19:04,070 --> 00:19:08,270
version they're running at so<font color="#E5E5E5"> burp</font>

514
00:19:06,380 --> 00:19:10,880
vulner scanner is a new tool to kind<font color="#E5E5E5"> of</font>

515
00:19:08,270 --> 00:19:15,590
identify some of these easy<font color="#CCCCCC"> c V's that</font>

516
00:19:10,880 --> 00:19:18,260
already<font color="#E5E5E5"> exist</font><font color="#CCCCCC"> ok</font>

517
00:19:15,590 --> 00:19:20,389
so none of<font color="#CCCCCC"> that substitutes for</font><font color="#E5E5E5"> actually</font>

518
00:19:18,260 --> 00:19:23,900
walking the<font color="#E5E5E5"> app right like a lot of bugs</font>

519
00:19:20,390 --> 00:19:25,220
are<font color="#E5E5E5"> are highly contingent on knowing</font>

520
00:19:23,900 --> 00:19:27,170
<font color="#CCCCCC">what your application does very</font>

521
00:19:25,220 --> 00:19:29,210
intimately especially things like

522
00:19:27,170 --> 00:19:30,770
<font color="#CCCCCC">insecure direct object reference or</font>

523
00:19:29,210 --> 00:19:31,670
missing function level access control

524
00:19:30,770 --> 00:19:33,710
those<font color="#E5E5E5"> type of bugs</font>

525
00:19:31,670 --> 00:19:35,510
very contingent on you actually<font color="#CCCCCC"> using</font>

526
00:19:33,710 --> 00:19:37,670
<font color="#CCCCCC">the site instead</font><font color="#E5E5E5"> of just using all this</font>

527
00:19:35,510 --> 00:19:39,560
<font color="#CCCCCC">automation so I put the slide</font><font color="#E5E5E5"> in here</font>

528
00:19:37,670 --> 00:19:41,570
<font color="#CCCCCC">just</font><font color="#E5E5E5"> to say like don't forget</font><font color="#CCCCCC"> to</font><font color="#E5E5E5"> get</font>

529
00:19:39,560 --> 00:19:43,070
very cozy with your app and understand

530
00:19:41,570 --> 00:19:44,720
what it's doing these are ways<font color="#CCCCCC"> to expand</font>

531
00:19:43,070 --> 00:19:45,980
<font color="#E5E5E5">your scope and</font><font color="#CCCCCC"> you do discovery but once</font>

532
00:19:44,720 --> 00:19:48,700
you land<font color="#E5E5E5"> on that site</font><font color="#CCCCCC"> that you're in a</font>

533
00:19:45,980 --> 00:19:51,890
hack really put your effort<font color="#E5E5E5"> into it</font>

534
00:19:48,700 --> 00:19:53,750
<font color="#CCCCCC">alright so once you're on an app that</font>

535
00:19:51,890 --> 00:19:55,240
you want<font color="#CCCCCC"> to start</font><font color="#E5E5E5"> hacking though one of</font>

536
00:19:53,750 --> 00:19:57,740
<font color="#E5E5E5">the first things that people</font><font color="#CCCCCC"> have</font><font color="#E5E5E5"> done</font>

537
00:19:55,240 --> 00:19:59,210
is use a tool called der<font color="#CCCCCC"> Buster eV and</font>

538
00:19:57,740 --> 00:20:02,630
<font color="#E5E5E5">he</font><font color="#CCCCCC"> used</font><font color="#E5E5E5"> der Buster force</font><font color="#CCCCCC"> and unwashed</font>

539
00:19:59,210 --> 00:20:05,690
tool cool so it is a directory boot<font color="#E5E5E5"> for</font>

540
00:20:02,630 --> 00:20:07,820
<font color="#E5E5E5">sir so we have Tesla</font><font color="#CCCCCC"> comm right</font><font color="#E5E5E5"> now in</font>

541
00:20:05,690 --> 00:20:10,400
order to discover<font color="#E5E5E5"> everything that might</font>

542
00:20:07,820 --> 00:20:12,260
be on Tesla<font color="#E5E5E5"> comm I spider it and I see</font>

543
00:20:10,400 --> 00:20:13,550
<font color="#E5E5E5">it has all these URLs and</font><font color="#CCCCCC"> parameters and</font>

544
00:20:12,260 --> 00:20:15,320
it does certain<font color="#CCCCCC"> things but there are</font>

545
00:20:13,550 --> 00:20:18,500
hidden<font color="#E5E5E5"> things that it might</font>

546
00:20:15,320 --> 00:20:20,899
hidden admin panels<font color="#CCCCCC"> hidden parameters</font>

547
00:20:18,500 --> 00:20:25,580
<font color="#E5E5E5">stuff like that</font><font color="#CCCCCC"> that might exist</font><font color="#E5E5E5"> on that</font>

548
00:20:20,900 --> 00:20:28,190
site<font color="#E5E5E5"> so we brute force</font><font color="#CCCCCC"> a whole list of</font>

549
00:20:25,580 --> 00:20:30,350
common common pages for that<font color="#E5E5E5"> type of</font>

550
00:20:28,190 --> 00:20:32,210
stuff<font color="#E5E5E5"> now traditionally der Buster was</font>

551
00:20:30,350 --> 00:20:35,209
<font color="#CCCCCC">the tool</font><font color="#E5E5E5"> that you would use</font><font color="#CCCCCC"> for</font><font color="#E5E5E5"> this now</font>

552
00:20:32,210 --> 00:20:38,180
there's a tool called<font color="#CCCCCC"> go Buster</font><font color="#E5E5E5"> which is</font>

553
00:20:35,210 --> 00:20:41,690
written<font color="#E5E5E5"> in go it's much faster I didn't</font>

554
00:20:38,180 --> 00:20:43,760
need to<font color="#E5E5E5"> do like a basically a comparison</font>

555
00:20:41,690 --> 00:20:45,290
<font color="#E5E5E5">for this because it's this has just</font><font color="#CCCCCC"> kind</font>

556
00:20:43,760 --> 00:20:46,610
of been what we switched<font color="#E5E5E5"> to and I think</font>

557
00:20:45,290 --> 00:20:48,860
a lot<font color="#CCCCCC"> of people are aware</font><font color="#E5E5E5"> of go Buster</font>

558
00:20:46,610 --> 00:20:51,229
already<font color="#E5E5E5"> so but go Buster is a tool you</font>

559
00:20:48,860 --> 00:20:53,540
use for content discovery or directory

560
00:20:51,230 --> 00:20:55,190
<font color="#E5E5E5">brute-forcing</font><font color="#CCCCCC"> no burp has this idea -</font>

561
00:20:53,540 --> 00:20:57,320
it's called<font color="#E5E5E5"> content discovery it's</font>

562
00:20:55,190 --> 00:20:59,450
available<font color="#E5E5E5"> in the pro version of burp not</font>

563
00:20:57,320 --> 00:21:00,710
everybody<font color="#E5E5E5"> has the pro version of burp if</font>

564
00:20:59,450 --> 00:21:02,420
you do have the pro<font color="#CCCCCC"> version of burp</font>

565
00:21:00,710 --> 00:21:03,980
<font color="#E5E5E5">you're counting on</font><font color="#CCCCCC"> that the word list</font>

566
00:21:02,420 --> 00:21:06,610
that<font color="#CCCCCC"> they're brute-forcing in the path</font>

567
00:21:03,980 --> 00:21:09,440
is as good as the one that<font color="#CCCCCC"> comes</font><font color="#E5E5E5"> with</font>

568
00:21:06,610 --> 00:21:11,300
with go Buster or the ones<font color="#E5E5E5"> that are</font><font color="#CCCCCC"> out</font>

569
00:21:09,440 --> 00:21:13,550
in<font color="#E5E5E5"> the open source community for brute</font>

570
00:21:11,300 --> 00:21:15,169
<font color="#E5E5E5">forcing these types of paths the best</font>

571
00:21:13,550 --> 00:21:17,330
one right now that exists for<font color="#E5E5E5"> doing this</font>

572
00:21:15,170 --> 00:21:19,100
is called<font color="#E5E5E5"> robots disallowed it's one of</font>

573
00:21:17,330 --> 00:21:21,500
the best<font color="#E5E5E5"> it's written by Daniel</font><font color="#CCCCCC"> Miller</font>

574
00:21:19,100 --> 00:21:24,379
who's sitting right<font color="#E5E5E5"> there</font><font color="#CCCCCC"> so he</font>

575
00:21:21,500 --> 00:21:26,780
maintains<font color="#E5E5E5"> basically you parked parsed</font>

576
00:21:24,380 --> 00:21:29,570
like the<font color="#CCCCCC"> alexa top of what</font><font color="#E5E5E5"> like million</font>

577
00:21:26,780 --> 00:21:32,270
or<font color="#CCCCCC"> something yeah he parsed the whole</font>

578
00:21:29,570 --> 00:21:35,389
licks a list of<font color="#E5E5E5"> their</font><font color="#CCCCCC"> robots.txt</font><font color="#E5E5E5"> files</font>

579
00:21:32,270 --> 00:21:37,460
and then sorted them by occurrence so

580
00:21:35,390 --> 00:21:38,900
robots that text meaning<font color="#E5E5E5"> that developers</font>

581
00:21:37,460 --> 00:21:40,700
don't<font color="#CCCCCC"> want you to know or go to those</font>

582
00:21:38,900 --> 00:21:42,560
pages<font color="#CCCCCC"> so that's exactly</font><font color="#E5E5E5"> what we're gonna</font>

583
00:21:40,700 --> 00:21:45,140
<font color="#E5E5E5">go to so you feed this thing to go</font>

584
00:21:42,560 --> 00:21:46,850
Buster you feed this list to go Buster

585
00:21:45,140 --> 00:21:48,470
<font color="#E5E5E5">and you find things</font><font color="#CCCCCC"> that developers</font>

586
00:21:46,850 --> 00:21:50,000
didn't want you<font color="#E5E5E5"> to go to hopefully</font>

587
00:21:48,470 --> 00:21:53,840
things that are juicy<font color="#E5E5E5"> and that have</font>

588
00:21:50,000 --> 00:21:55,130
vulnerabilities<font color="#E5E5E5"> associated to them so</font>

589
00:21:53,840 --> 00:21:57,709
then there's the<font color="#CCCCCC"> idea</font><font color="#E5E5E5"> of like we found</font>

590
00:21:55,130 --> 00:21:59,300
pages that are good<font color="#E5E5E5"> that we want to</font>

591
00:21:57,710 --> 00:22:01,370
attack and we want to fuzz and that's

592
00:21:59,300 --> 00:22:03,290
general web hacking is putting stuff

593
00:22:01,370 --> 00:22:05,389
into parameters or input fields and

594
00:22:03,290 --> 00:22:06,379
seeing what<font color="#E5E5E5"> happens but there's the</font><font color="#CCCCCC"> idea</font>

595
00:22:05,390 --> 00:22:08,420
<font color="#E5E5E5">that there might</font><font color="#CCCCCC"> be</font><font color="#E5E5E5"> hidden parameters</font>

596
00:22:06,380 --> 00:22:10,970
<font color="#E5E5E5">associated to pages or functions or</font>

597
00:22:08,420 --> 00:22:12,800
scripts<font color="#CCCCCC"> and so there's</font><font color="#E5E5E5"> even a tool to</font>

598
00:22:10,970 --> 00:22:14,510
brute force parameter names<font color="#E5E5E5"> if you're</font>

599
00:22:12,800 --> 00:22:15,950
with an API<font color="#CCCCCC"> or with you think there's a</font>

600
00:22:14,510 --> 00:22:18,910
hidden parameter some things called pram

601
00:22:15,950 --> 00:22:22,280
F and it's written<font color="#E5E5E5"> by a guy</font><font color="#CCCCCC"> named</font><font color="#E5E5E5"> Syrian</font>

602
00:22:18,910 --> 00:22:24,920
<font color="#E5E5E5">Mach</font><font color="#CCCCCC"> oh he's a bug hunter and so this</font>

603
00:22:22,280 --> 00:22:27,110
will<font color="#E5E5E5"> brute force parameter names</font><font color="#CCCCCC"> burp</font>

604
00:22:24,920 --> 00:22:29,120
the<font color="#E5E5E5"> authors</font><font color="#CCCCCC"> of burp</font><font color="#E5E5E5"> suite did a project</font>

605
00:22:27,110 --> 00:22:31,280
<font color="#CCCCCC">as part of</font><font color="#E5E5E5"> something else that they did</font>

606
00:22:29,120 --> 00:22:33,080
which mapped the top parameters<font color="#E5E5E5"> that</font>

607
00:22:31,280 --> 00:22:36,950
applications use the parameter name so

608
00:22:33,080 --> 00:22:38,990
<font color="#E5E5E5">ID action page name and</font><font color="#CCCCCC"> they mapped all</font>

609
00:22:36,950 --> 00:22:43,190
of these by<font color="#E5E5E5"> occurrence so you can feed</font>

610
00:22:38,990 --> 00:22:46,340
these<font color="#E5E5E5"> two parameter such</font><font color="#CCCCCC"> as can be</font>

611
00:22:43,190 --> 00:22:49,490
<font color="#E5E5E5">either like the syntax of you know poor</font>

612
00:22:46,340 --> 00:22:50,720
script<font color="#E5E5E5"> question mark equals parameter or</font>

613
00:22:49,490 --> 00:22:52,280
something<font color="#E5E5E5"> like</font><font color="#CCCCCC"> that or it could be the</font>

614
00:22:50,720 --> 00:22:54,020
you know<font color="#CCCCCC"> the</font><font color="#E5E5E5"> rest style or whatever you</font>

615
00:22:52,280 --> 00:22:57,250
could<font color="#E5E5E5"> do either but you can</font><font color="#CCCCCC"> brute force</font>

616
00:22:54,020 --> 00:23:00,050
parameters with but these<font color="#E5E5E5"> type of tools</font>

617
00:22:57,250 --> 00:23:02,210
so this is the overall discovery

618
00:23:00,050 --> 00:23:07,639
methodology<font color="#E5E5E5"> right identify</font><font color="#CCCCCC"> IPs</font><font color="#E5E5E5"> and mein</font>

619
00:23:02,210 --> 00:23:10,610
<font color="#E5E5E5">Teil</font><font color="#CCCCCC"> DS scrape</font><font color="#E5E5E5"> brute force</font><font color="#CCCCCC"> ports can do</font>

620
00:23:07,640 --> 00:23:13,370
some visual identification<font color="#E5E5E5"> identify the</font>

621
00:23:10,610 --> 00:23:16,360
platform<font color="#E5E5E5"> do content discovery and then</font>

622
00:23:13,370 --> 00:23:20,510
<font color="#E5E5E5">maybe do parameter discovery so this is</font>

623
00:23:16,360 --> 00:23:21,889
most of the active stuff there<font color="#CCCCCC"> is there</font>

624
00:23:20,510 --> 00:23:24,440
<font color="#E5E5E5">are some other stuff</font><font color="#CCCCCC"> that</font><font color="#E5E5E5"> you can do as</font>

625
00:23:21,890 --> 00:23:26,630
part of recon which is like trying<font color="#E5E5E5"> to</font>

626
00:23:24,440 --> 00:23:29,630
investigate<font color="#E5E5E5"> github repositories</font>

627
00:23:26,630 --> 00:23:31,520
associated to companies and map<font color="#E5E5E5"> out</font>

628
00:23:29,630 --> 00:23:34,850
their technology that way and<font color="#E5E5E5"> find paths</font>

629
00:23:31,520 --> 00:23:36,320
and even deeper<font color="#E5E5E5"> parse</font><font color="#CCCCCC"> javascript files</font>

630
00:23:34,850 --> 00:23:37,520
that the company's hosting to pull up

631
00:23:36,320 --> 00:23:40,490
<font color="#CCCCCC">pads that</font><font color="#E5E5E5"> are there those are new</font>

632
00:23:37,520 --> 00:23:42,800
advents and kind of mapping<font color="#E5E5E5"> sites but I</font>

633
00:23:40,490 --> 00:23:44,060
didn't include<font color="#E5E5E5"> those in here</font><font color="#CCCCCC"> but they're</font>

634
00:23:42,800 --> 00:23:46,970
actually<font color="#E5E5E5"> in a presentation</font><font color="#CCCCCC"> that</font><font color="#E5E5E5"> Ben</font>

635
00:23:44,060 --> 00:23:49,040
wrote for<font color="#E5E5E5"> level up that was like six</font>

636
00:23:46,970 --> 00:23:50,570
months ago<font color="#E5E5E5"> or</font><font color="#CCCCCC"> eight months</font><font color="#E5E5E5"> ago</font><font color="#CCCCCC"> and</font><font color="#E5E5E5"> he</font>

637
00:23:49,040 --> 00:23:54,860
did a whole<font color="#CCCCCC"> presentation on</font><font color="#E5E5E5"> a couple of</font>

638
00:23:50,570 --> 00:23:56,840
<font color="#E5E5E5">those methods right so cool so one of</font>

639
00:23:54,860 --> 00:23:58,219
the topics<font color="#CCCCCC"> in the last one</font><font color="#E5E5E5"> in the last</font>

640
00:23:56,840 --> 00:23:59,330
bug hunters methodology was cross-site

641
00:23:58,220 --> 00:24:00,350
scripting so we're gonna<font color="#CCCCCC"> talk about</font><font color="#E5E5E5"> a</font>

642
00:23:59,330 --> 00:24:04,070
<font color="#E5E5E5">few</font><font color="#CCCCCC"> of the admins and cross-site</font>

643
00:24:00,350 --> 00:24:05,030
scripting so not really a lot of advents

644
00:24:04,070 --> 00:24:07,820
<font color="#CCCCCC">in cross-site scripting cross-site</font>

645
00:24:05,030 --> 00:24:11,810
scripting remains the same except<font color="#CCCCCC"> for</font>

646
00:24:07,820 --> 00:24:13,520
<font color="#CCCCCC">the addition of a quasi new category</font><font color="#E5E5E5"> so</font>

647
00:24:11,810 --> 00:24:16,790
and I'm<font color="#E5E5E5"> just</font><font color="#CCCCCC"> gonna</font><font color="#E5E5E5"> draw myself as an</font>

648
00:24:13,520 --> 00:24:19,520
<font color="#CCCCCC">example here for</font><font color="#E5E5E5"> the longest</font><font color="#CCCCCC"> time I was</font>

649
00:24:16,790 --> 00:24:21,860
pen testing for years throwing in attack

650
00:24:19,520 --> 00:24:25,340
payloads into parameters and<font color="#CCCCCC"> and boxes</font>

651
00:24:21,860 --> 00:24:27,770
input boxes<font color="#E5E5E5"> that I was shooting alert</font>

652
00:24:25,340 --> 00:24:29,060
payloads into<font color="#E5E5E5"> right and I was getting</font>

653
00:24:27,770 --> 00:24:30,590
cross-site scripting and I felt great

654
00:24:29,060 --> 00:24:32,540
<font color="#E5E5E5">but for years I was missing out</font><font color="#CCCCCC"> on the</font>

655
00:24:30,590 --> 00:24:34,429
fact that if I would<font color="#E5E5E5"> have had a little</font>

656
00:24:32,540 --> 00:24:36,889
<font color="#E5E5E5">bit more JavaScript</font><font color="#CCCCCC"> and</font><font color="#E5E5E5"> a little bit</font>

657
00:24:34,430 --> 00:24:40,100
more experience<font color="#CCCCCC"> I could have added</font>

658
00:24:36,890 --> 00:24:41,420
<font color="#E5E5E5">what's called a</font><font color="#CCCCCC"> javascript hook</font><font color="#E5E5E5"> and then</font>

659
00:24:40,100 --> 00:24:43,010
when<font color="#CCCCCC"> i sent a cross site scripting</font>

660
00:24:41,420 --> 00:24:45,140
payload into a<font color="#E5E5E5"> four</font>

661
00:24:43,010 --> 00:24:47,540
<font color="#CCCCCC">I might not have</font><font color="#E5E5E5"> gotten immediate</font>

662
00:24:45,140 --> 00:24:49,400
response from<font color="#E5E5E5"> my page but someone in</font>

663
00:24:47,540 --> 00:24:51,409
customer<font color="#E5E5E5"> service for that company might</font>

664
00:24:49,400 --> 00:24:52,910
<font color="#CCCCCC">have eventually seen that attack string</font>

665
00:24:51,410 --> 00:24:54,890
and it would have popped up on their

666
00:24:52,910 --> 00:24:56,870
internal customer service admin portal

667
00:24:54,890 --> 00:24:58,070
<font color="#E5E5E5">so this is a category</font><font color="#CCCCCC"> of cross-site</font>

668
00:24:56,870 --> 00:25:00,610
scripting called blind cross-site

669
00:24:58,070 --> 00:25:04,280
scripting<font color="#CCCCCC"> and there's a</font><font color="#E5E5E5"> couple of</font>

670
00:25:00,610 --> 00:25:07,040
frameworks here<font color="#E5E5E5"> to manage</font><font color="#CCCCCC"> and test for</font>

671
00:25:04,280 --> 00:25:09,290
blind cross-site scripting<font color="#E5E5E5"> so one</font><font color="#CCCCCC"> of</font>

672
00:25:07,040 --> 00:25:11,000
them is called sleepy<font color="#E5E5E5"> puppy it's built</font>

673
00:25:09,290 --> 00:25:14,690
by<font color="#E5E5E5"> the Netflix team anybody from Netflix</font>

674
00:25:11,000 --> 00:25:16,550
in here yeah<font color="#E5E5E5"> awesome</font><font color="#CCCCCC"> tool</font><font color="#E5E5E5"> so sleepy</font>

675
00:25:14,690 --> 00:25:19,010
<font color="#CCCCCC">puppies awesome there's some other ones</font>

676
00:25:16,550 --> 00:25:23,419
<font color="#E5E5E5">there's ground control by Gilbert</font><font color="#CCCCCC"> Alma</font>

677
00:25:19,010 --> 00:25:25,460
<font color="#E5E5E5">Amba you see your words last name sorry</font>

678
00:25:23,420 --> 00:25:27,440
<font color="#CCCCCC">and then there's XSS hunter which is a</font>

679
00:25:25,460 --> 00:25:30,230
framework for<font color="#E5E5E5"> managing the callbacks for</font>

680
00:25:27,440 --> 00:25:32,840
this<font color="#CCCCCC"> there's also some things called</font>

681
00:25:30,230 --> 00:25:34,550
polyglots which have come<font color="#CCCCCC"> around which</font>

682
00:25:32,840 --> 00:25:36,139
are<font color="#E5E5E5"> basically identifying cross-site</font>

683
00:25:34,550 --> 00:25:38,840
scripting using one string that will

684
00:25:36,140 --> 00:25:41,390
<font color="#E5E5E5">execute in multiple contexts which helps</font>

685
00:25:38,840 --> 00:25:43,010
you quickly<font color="#E5E5E5"> identify some versions of</font>

686
00:25:41,390 --> 00:25:45,770
cross-site scripting<font color="#E5E5E5"> and there's there's</font>

687
00:25:43,010 --> 00:25:48,290
some other<font color="#E5E5E5"> resources here so this is the</font>

688
00:25:45,770 --> 00:25:52,610
<font color="#E5E5E5">idea blind cross-site scripting so this</font>

689
00:25:48,290 --> 00:25:54,260
is Franz<font color="#E5E5E5"> and Franz</font><font color="#CCCCCC"> in step one</font><font color="#E5E5E5"> finds a</font>

690
00:25:52,610 --> 00:25:58,070
form<font color="#E5E5E5"> field for a name last name and</font>

691
00:25:54,260 --> 00:26:01,070
<font color="#E5E5E5">organization Franz puts in a script</font><font color="#CCCCCC"> like</font>

692
00:25:58,070 --> 00:26:04,520
<font color="#CCCCCC">this it says script source equals y</font><font color="#E5E5E5"> dot</font>

693
00:26:01,070 --> 00:26:06,409
<font color="#CCCCCC">VG which</font><font color="#E5E5E5"> is his</font><font color="#CCCCCC"> domain he owns</font><font color="#E5E5E5"> and so</font>

694
00:26:04,520 --> 00:26:09,050
<font color="#CCCCCC">when</font><font color="#E5E5E5"> anyone visits that and that script</font>

695
00:26:06,410 --> 00:26:10,790
executes it will call back to his yvg

696
00:26:09,050 --> 00:26:13,370
domain and he'll know that<font color="#E5E5E5"> someone saw</font>

697
00:26:10,790 --> 00:26:16,340
that immediately he sends it<font color="#CCCCCC"> through</font><font color="#E5E5E5"> the</font>

698
00:26:13,370 --> 00:26:17,929
tubes<font color="#E5E5E5"> and it ends up that</font><font color="#CCCCCC"> he doesn't get</font>

699
00:26:16,340 --> 00:26:19,070
an alert<font color="#CCCCCC"> right away so there's no stored</font>

700
00:26:17,930 --> 00:26:20,570
cross-site scripting there's no

701
00:26:19,070 --> 00:26:23,480
reflected cross-site scripting but all

702
00:26:20,570 --> 00:26:25,760
is not<font color="#CCCCCC"> lost for</font><font color="#E5E5E5"> Franz so eventually</font><font color="#CCCCCC"> it</font>

703
00:26:23,480 --> 00:26:27,590
ends up<font color="#E5E5E5"> on Jamie's computer and he works</font>

704
00:26:25,760 --> 00:26:29,330
for Yahoo<font color="#E5E5E5"> and he has a customer service</font>

705
00:26:27,590 --> 00:26:32,120
portal<font color="#E5E5E5"> he logs</font><font color="#CCCCCC"> into every day that reads</font>

706
00:26:29,330 --> 00:26:34,429
emails or an application parses<font color="#E5E5E5"> that</font>

707
00:26:32,120 --> 00:26:38,780
information<font color="#E5E5E5"> and it pops up on Jamie's</font>

708
00:26:34,430 --> 00:26:41,710
admin console then it executes a shell a

709
00:26:38,780 --> 00:26:44,960
<font color="#E5E5E5">JavaScript shell back to</font><font color="#CCCCCC"> Frances server</font>

710
00:26:41,710 --> 00:26:47,630
yvg<font color="#E5E5E5"> and then</font><font color="#CCCCCC"> Franz now has the same</font>

711
00:26:44,960 --> 00:26:51,310
<font color="#CCCCCC">access as Jamie can instrument</font><font color="#E5E5E5"> his admin</font>

712
00:26:47,630 --> 00:26:51,310
panel<font color="#E5E5E5"> this is</font><font color="#CCCCCC"> blind cross-site scripting</font>

713
00:26:52,030 --> 00:26:57,220
so<font color="#E5E5E5"> so sleepy puppies really good ground</font>

714
00:26:55,840 --> 00:26:58,959
<font color="#CCCCCC">controls really</font><font color="#E5E5E5"> good but the one that a</font>

715
00:26:57,220 --> 00:27:02,520
lot<font color="#CCCCCC"> of hunters</font><font color="#E5E5E5"> use is actually XSS</font>

716
00:26:58,960 --> 00:27:05,050
<font color="#E5E5E5">hunter so xsn XSS hunter is a framework</font>

717
00:27:02,520 --> 00:27:07,510
that<font color="#E5E5E5"> instruments blind cross-site</font>

718
00:27:05,050 --> 00:27:10,750
scripting it generates hooks for you<font color="#E5E5E5"> it</font>

719
00:27:07,510 --> 00:27:12,520
will<font color="#E5E5E5"> also email you when you get blinds</font>

720
00:27:10,750 --> 00:27:14,560
<font color="#E5E5E5">cross-site scripting triggers when those</font>

721
00:27:12,520 --> 00:27:17,260
<font color="#E5E5E5">customer support reps actually open the</font>

722
00:27:14,560 --> 00:27:20,200
<font color="#CCCCCC">email will email you it will send you</font>

723
00:27:17,260 --> 00:27:23,020
reports<font color="#E5E5E5"> it has</font><font color="#CCCCCC"> the ability to basically</font>

724
00:27:20,200 --> 00:27:25,600
<font color="#E5E5E5">parse and change the payload it does a</font>

725
00:27:23,020 --> 00:27:27,850
lot<font color="#E5E5E5"> of cool tricks like beef and XSL XSS</font>

726
00:27:25,600 --> 00:27:31,570
shell used to do when we<font color="#CCCCCC"> were</font><font color="#E5E5E5"> doing like</font>

727
00:27:27,850 --> 00:27:32,980
demos<font color="#CCCCCC"> of that so XSS hunter is kind of</font>

728
00:27:31,570 --> 00:27:34,540
the<font color="#E5E5E5"> the framework that would you would</font>

729
00:27:32,980 --> 00:27:35,950
<font color="#E5E5E5">use nowadays to manage cross-site</font>

730
00:27:34,540 --> 00:27:40,149
scripting attacks for applying across

731
00:27:35,950 --> 00:27:41,710
site scripting<font color="#E5E5E5"> okay so in the last</font>

732
00:27:40,150 --> 00:27:44,110
<font color="#E5E5E5">presentation we talked about this idea</font>

733
00:27:41,710 --> 00:27:46,570
<font color="#CCCCCC">of polyglots and we you can look it up</font>

734
00:27:44,110 --> 00:27:48,669
it's<font color="#E5E5E5"> from Def Con 23 we talked</font><font color="#CCCCCC"> about</font>

735
00:27:46,570 --> 00:27:51,909
three of the<font color="#E5E5E5"> most common XSS polyglots</font>

736
00:27:48,670 --> 00:27:55,120
the idea of an XSS polyglot is that it's

737
00:27:51,910 --> 00:27:57,910
one long string that<font color="#E5E5E5"> can execute in</font>

738
00:27:55,120 --> 00:28:00,879
multiple contexts so if you put it in a

739
00:27:57,910 --> 00:28:02,890
<font color="#E5E5E5">form or a parameter wherever it lands on</font>

740
00:28:00,880 --> 00:28:06,070
<font color="#E5E5E5">the</font><font color="#CCCCCC"> page in the HTML as long as there's</font>

741
00:28:02,890 --> 00:28:07,630
<font color="#E5E5E5">not sufficient</font><font color="#CCCCCC"> output encoding it will</font>

742
00:28:06,070 --> 00:28:09,700
alert<font color="#E5E5E5"> you don't have to fiddle with</font><font color="#CCCCCC"> it</font>

743
00:28:07,630 --> 00:28:11,560
<font color="#E5E5E5">to get it to match the context of your</font>

744
00:28:09,700 --> 00:28:14,320
page you just<font color="#CCCCCC"> paste in this one string</font>

745
00:28:11,560 --> 00:28:16,570
and it should ignore all the parts that

746
00:28:14,320 --> 00:28:18,399
<font color="#E5E5E5">it doesn't care about an alert on the</font>

747
00:28:16,570 --> 00:28:19,960
part that it does care about<font color="#E5E5E5"> so there</font>

748
00:28:18,400 --> 00:28:21,610
are four main<font color="#CCCCCC"> one of these that exist</font>

749
00:28:19,960 --> 00:28:23,830
this<font color="#E5E5E5"> is one by hack fault called the</font>

750
00:28:21,610 --> 00:28:25,540
ultimate XSS polyglot<font color="#E5E5E5"> it's not actually</font>

751
00:28:23,830 --> 00:28:27,250
the one I use them<font color="#E5E5E5"> the most the</font><font color="#CCCCCC"> one I</font>

752
00:28:25,540 --> 00:28:30,490
use<font color="#CCCCCC"> the most is part of the old</font>

753
00:28:27,250 --> 00:28:32,980
presentation by<font color="#CCCCCC"> a it was invented</font><font color="#E5E5E5"> by</font><font color="#CCCCCC"> a</font>

754
00:28:30,490 --> 00:28:34,360
<font color="#CCCCCC">guy named a char</font><font color="#E5E5E5"> to bed a lot of</font>

755
00:28:32,980 --> 00:28:36,130
scanners are starting to<font color="#E5E5E5"> institute</font>

756
00:28:34,360 --> 00:28:38,830
polyglot payloads because they don't

757
00:28:36,130 --> 00:28:40,210
send as much traffic to the sites and

758
00:28:38,830 --> 00:28:41,800
they<font color="#E5E5E5"> don't have to worry about context</font>

759
00:28:40,210 --> 00:28:43,870
<font color="#E5E5E5">and some of their scanners so it's kind</font>

760
00:28:41,800 --> 00:28:50,399
<font color="#CCCCCC">of where some of</font><font color="#E5E5E5"> that fuzzing is going</font>

761
00:28:43,870 --> 00:28:52,870
these<font color="#E5E5E5"> days</font><font color="#CCCCCC"> if you're really</font><font color="#E5E5E5"> into</font>

762
00:28:50,400 --> 00:28:55,660
manually mapping context for<font color="#CCCCCC"> cross-site</font>

763
00:28:52,870 --> 00:28:57,790
scripting<font color="#CCCCCC"> there is a new resource</font><font color="#E5E5E5"> out</font>

764
00:28:55,660 --> 00:29:00,550
there<font color="#CCCCCC"> called the XSS mind map by Jack</font>

765
00:28:57,790 --> 00:29:02,470
<font color="#CCCCCC">Massa</font><font color="#E5E5E5"> and what this does it's a giant</font>

766
00:29:00,550 --> 00:29:04,710
mind map of cross-site scripting

767
00:29:02,470 --> 00:29:08,039
payloads<font color="#E5E5E5"> based on</font>

768
00:29:04,710 --> 00:29:09,960
context<font color="#E5E5E5"> so you can</font><font color="#CCCCCC"> drill-down if it's</font>

769
00:29:08,039 --> 00:29:12,389
you know lands in the<font color="#CCCCCC"> Dom if it's part</font>

770
00:29:09,960 --> 00:29:15,440
of<font color="#CCCCCC"> Flash if it's part of reactor jQuery</font>

771
00:29:12,389 --> 00:29:18,418
frameworks<font color="#E5E5E5"> if you're trying to bypass or</font>

772
00:29:15,440 --> 00:29:21,929
<font color="#CCCCCC">stay</font><font color="#E5E5E5"> under a character limit there's</font>

773
00:29:18,419 --> 00:29:23,999
<font color="#E5E5E5">basically notes or actual payloads to</font>

774
00:29:21,929 --> 00:29:26,490
use against that type of<font color="#E5E5E5"> context and</font>

775
00:29:23,999 --> 00:29:28,139
examples<font color="#E5E5E5"> so this is one of the new</font>

776
00:29:26,490 --> 00:29:29,759
resources that's really cool for for

777
00:29:28,139 --> 00:29:31,498
<font color="#E5E5E5">cross-site scripting not that any of</font>

778
00:29:29,759 --> 00:29:37,049
these are<font color="#E5E5E5"> new but definitely organized</font>

779
00:29:31,499 --> 00:29:39,090
<font color="#E5E5E5">really well okay so</font><font color="#CCCCCC"> that's cross-site</font>

780
00:29:37,049 --> 00:29:40,440
scripting so now we're going to talk

781
00:29:39,090 --> 00:29:43,740
<font color="#CCCCCC">about a vulnerability called server-side</font>

782
00:29:40,440 --> 00:29:47,999
template injection so there<font color="#E5E5E5"> are a</font><font color="#CCCCCC"> number</font>

783
00:29:43,740 --> 00:29:51,419
<font color="#E5E5E5">of template engines out there</font><font color="#CCCCCC"> I use</font>

784
00:29:47,999 --> 00:29:53,610
<font color="#CCCCCC">flasks a lot for like you know easy</font>

785
00:29:51,419 --> 00:29:57,210
development projects to make CTF stuff

786
00:29:53,610 --> 00:29:59,008
like that<font color="#CCCCCC"> but if you</font><font color="#E5E5E5"> use the templating</font>

787
00:29:57,210 --> 00:30:00,509
and engine there's there's the

788
00:29:59,009 --> 00:30:02,330
<font color="#CCCCCC">opportunity that</font><font color="#E5E5E5"> there could be a</font><font color="#CCCCCC"> remote</font>

789
00:30:00,509 --> 00:30:05,159
code execution bug called

790
00:30:02,330 --> 00:30:07,168
<font color="#E5E5E5">server-side template injection there now</font>

791
00:30:05,159 --> 00:30:09,179
I'm not<font color="#CCCCCC"> a templating engine expert so I</font>

792
00:30:07,169 --> 00:30:11,970
just know that this vulnerability exists

793
00:30:09,179 --> 00:30:15,509
I've kind<font color="#E5E5E5"> of built CTFs around it before</font>

794
00:30:11,970 --> 00:30:17,159
<font color="#CCCCCC">but I'm</font><font color="#E5E5E5"> not like 100% expert so so</font>

795
00:30:15,509 --> 00:30:19,049
identifying sites<font color="#E5E5E5"> when they're using</font><font color="#CCCCCC"> a</font>

796
00:30:17,159 --> 00:30:20,340
templating engine is is the same thing

797
00:30:19,049 --> 00:30:22,289
that we would normally do you would use

798
00:30:20,340 --> 00:30:24,749
<font color="#CCCCCC">WAP eliezer built with to verify the</font>

799
00:30:22,289 --> 00:30:26,908
stack on<font color="#CCCCCC"> the server-side and see what</font>

800
00:30:24,749 --> 00:30:29,789
they're running<font color="#CCCCCC"> you would fuzz</font>

801
00:30:26,909 --> 00:30:32,730
parameters<font color="#CCCCCC"> but really there's a couple</font>

802
00:30:29,789 --> 00:30:35,480
of tools here when you identify<font color="#CCCCCC"> that</font>

803
00:30:32,730 --> 00:30:37,590
you're using a templating engine<font color="#E5E5E5"> Marco</font>

804
00:30:35,480 --> 00:30:41,460
<font color="#E5E5E5">dust</font>

805
00:30:37,590 --> 00:30:42,720
you know<font color="#CCCCCC"> Jinja</font><font color="#E5E5E5"> any of those tornado and</font>

806
00:30:41,460 --> 00:30:43,889
this is the idea template of a

807
00:30:42,720 --> 00:30:45,990
templating engine right so here you<font color="#CCCCCC"> have</font>

808
00:30:43,889 --> 00:30:49,469
<font color="#CCCCCC">an error page that's</font><font color="#E5E5E5"> going to parse this</font>

809
00:30:45,990 --> 00:30:50,580
URL<font color="#CCCCCC"> or when you get redirected to this</font>

810
00:30:49,470 --> 00:30:53,970
error page it's going<font color="#E5E5E5"> to parse</font><font color="#CCCCCC"> it</font><font color="#E5E5E5"> you're</font>

811
00:30:50,580 --> 00:30:55,590
all here<font color="#E5E5E5"> and instead</font><font color="#CCCCCC"> of providing</font><font color="#E5E5E5"> it a</font>

812
00:30:53,970 --> 00:30:57,720
<font color="#CCCCCC">parameter or</font><font color="#E5E5E5"> it's gonna parse this page</font>

813
00:30:55,590 --> 00:31:02,009
<font color="#CCCCCC">you give it a math operator inside some</font>

814
00:30:57,720 --> 00:31:10,679
<font color="#CCCCCC">mustache braces or you ask it to</font><font color="#E5E5E5"> read a</font>

815
00:31:02,009 --> 00:31:12,899
file in the second one here<font color="#E5E5E5"> yeah</font><font color="#CCCCCC"> so</font>

816
00:31:10,679 --> 00:31:14,070
there's an excellent<font color="#E5E5E5"> article here I have</font>

817
00:31:12,899 --> 00:31:16,768
it in the resources<font color="#E5E5E5"> page that explains</font>

818
00:31:14,070 --> 00:31:18,450
like axes actually<font color="#CCCCCC"> how we're finding out</font>

819
00:31:16,769 --> 00:31:21,180
which class to use for the file

820
00:31:18,450 --> 00:31:22,620
here and this is against<font color="#E5E5E5"> Jinja</font><font color="#CCCCCC"> but most</font>

821
00:31:21,180 --> 00:31:24,240
<font color="#E5E5E5">of the time when</font><font color="#CCCCCC"> I'm fuzzing for</font><font color="#E5E5E5"> SST I</font>

822
00:31:22,620 --> 00:31:25,889
<font color="#CCCCCC">used the payload on the top right what I</font>

823
00:31:24,240 --> 00:31:28,170
want to do is usually<font color="#E5E5E5"> I'll</font><font color="#CCCCCC"> have like</font><font color="#E5E5E5"> a</font>

824
00:31:25,890 --> 00:31:30,420
page or an input<font color="#E5E5E5"> parameter field of a</font>

825
00:31:28,170 --> 00:31:31,860
nickname or<font color="#CCCCCC"> something like that or</font>

826
00:31:30,420 --> 00:31:34,290
whatever<font color="#E5E5E5"> the parameter name is or</font>

827
00:31:31,860 --> 00:31:36,510
whatever<font color="#E5E5E5"> and I'll just put in a payload</font>

828
00:31:34,290 --> 00:31:38,639
like<font color="#CCCCCC"> 2 times 3</font><font color="#E5E5E5"> and if it gives me back</font>

829
00:31:36,510 --> 00:31:40,920
<font color="#CCCCCC">you know if it if it evals the math and</font>

830
00:31:38,640 --> 00:31:43,230
gives me back page<font color="#E5E5E5"> 6 or gives me back 6</font>

831
00:31:40,920 --> 00:31:45,780
<font color="#CCCCCC">I know that I'm probably you know good</font>

832
00:31:43,230 --> 00:31:47,490
for<font color="#E5E5E5"> server-side template injection now</font>

833
00:31:45,780 --> 00:31:50,100
there is a tool called<font color="#E5E5E5"> TPL map which is</font>

834
00:31:47,490 --> 00:31:52,850
<font color="#E5E5E5">very similar to sequel map which knows</font>

835
00:31:50,100 --> 00:31:55,919
each<font color="#CCCCCC"> templating engine and how to</font>

836
00:31:52,850 --> 00:31:57,330
construct<font color="#E5E5E5"> and find the class that will</font>

837
00:31:55,920 --> 00:32:00,630
<font color="#E5E5E5">be able to get you an operating system</font>

838
00:31:57,330 --> 00:32:04,020
shell<font color="#E5E5E5"> when template injection is</font>

839
00:32:00,630 --> 00:32:06,990
available so TPL map here I've<font color="#E5E5E5"> given it</font>

840
00:32:04,020 --> 00:32:09,660
a URL<font color="#E5E5E5"> that's</font><font color="#CCCCCC"> vulnerable and it</font>

841
00:32:06,990 --> 00:32:12,480
identifies the<font color="#CCCCCC"> template injection in the</font>

842
00:32:09,660 --> 00:32:16,710
name parameter<font color="#CCCCCC"> and then I tell it to get</font>

843
00:32:12,480 --> 00:32:23,340
me<font color="#E5E5E5"> the Etsy password file and it's gonna</font>

844
00:32:16,710 --> 00:32:24,750
do<font color="#E5E5E5"> that in a second so they're</font><font color="#CCCCCC"> actually</font>

845
00:32:23,340 --> 00:32:27,030
give me an operating system shell<font color="#CCCCCC"> I did</font>

846
00:32:24,750 --> 00:32:28,950
- - oh I saw very<font color="#E5E5E5"> similar to sequel map</font>

847
00:32:27,030 --> 00:32:31,590
except for all<font color="#CCCCCC"> for templating injection</font>

848
00:32:28,950 --> 00:32:34,020
and it got me the OS command<font color="#E5E5E5"> shell goes</font>

849
00:32:31,590 --> 00:32:36,750
pretty fast<font color="#E5E5E5"> sorry so this is one</font><font color="#CCCCCC"> of the</font>

850
00:32:34,020 --> 00:32:40,020
bugs<font color="#E5E5E5"> that is like a p1 bug on most</font>

851
00:32:36,750 --> 00:32:41,520
systems<font color="#CCCCCC"> new class of ich bug</font><font color="#E5E5E5"> server-side</font>

852
00:32:40,020 --> 00:32:43,379
template injection was actually found by

853
00:32:41,520 --> 00:32:44,550
<font color="#CCCCCC">one of the</font><font color="#E5E5E5"> people on the burp team so</font>

854
00:32:43,380 --> 00:32:48,650
they have a whole<font color="#E5E5E5"> white paper on</font><font color="#CCCCCC"> how</font>

855
00:32:44,550 --> 00:32:50,879
<font color="#E5E5E5">this works</font><font color="#CCCCCC"> so what we did</font><font color="#E5E5E5"> at bugcrowd</font>

856
00:32:48,650 --> 00:32:52,980
this is actually off a little<font color="#E5E5E5"> bit on the</font>

857
00:32:50,880 --> 00:32:54,570
style sorry<font color="#CCCCCC"> it's from a different</font>

858
00:32:52,980 --> 00:32:55,920
<font color="#E5E5E5">presentation but I thought it was apt to</font>

859
00:32:54,570 --> 00:32:58,790
add into this<font color="#E5E5E5"> presentation so what we</font>

860
00:32:55,920 --> 00:33:00,750
did<font color="#E5E5E5"> at bugcrowd was we took all of the</font>

861
00:32:58,790 --> 00:33:02,129
<font color="#E5E5E5">parameters that were most often</font>

862
00:33:00,750 --> 00:33:04,890
vulnerable<font color="#CCCCCC"> to this class of</font>

863
00:33:02,130 --> 00:33:07,380
vulnerability<font color="#E5E5E5"> and ranked them by</font>

864
00:33:04,890 --> 00:33:08,880
occurrence and so what happens when you

865
00:33:07,380 --> 00:33:10,110
<font color="#E5E5E5">build web</font><font color="#CCCCCC"> applications or you</font><font color="#E5E5E5"> end up</font>

866
00:33:08,880 --> 00:33:11,280
using these technologies<font color="#E5E5E5"> as these</font>

867
00:33:10,110 --> 00:33:12,600
frameworks<font color="#E5E5E5"> they either provide you</font>

868
00:33:11,280 --> 00:33:15,649
parameters or you think<font color="#CCCCCC"> of</font><font color="#E5E5E5"> one yourself</font>

869
00:33:12,600 --> 00:33:17,610
<font color="#E5E5E5">for the data you're trying</font><font color="#CCCCCC"> to handle and</font>

870
00:33:15,650 --> 00:33:19,260
semantically it ends up being the<font color="#E5E5E5"> same</font>

871
00:33:17,610 --> 00:33:20,459
parameter that's associated<font color="#E5E5E5"> to a lot of</font>

872
00:33:19,260 --> 00:33:22,320
the same vulnerabilities so for

873
00:33:20,460 --> 00:33:23,510
<font color="#E5E5E5">server-side template injection these are</font>

874
00:33:22,320 --> 00:33:27,480
the top parameters<font color="#E5E5E5"> that</font><font color="#CCCCCC"> are vulnerable</font>

875
00:33:23,510 --> 00:33:29,430
<font color="#CCCCCC">to this bug</font><font color="#E5E5E5"> preview ID view activity</font>

876
00:33:27,480 --> 00:33:31,020
name<font color="#E5E5E5"> content redirect and template</font>

877
00:33:29,430 --> 00:33:34,100
template makes a lot of sense right

878
00:33:31,020 --> 00:33:34,100
<font color="#CCCCCC">templating engine</font>

879
00:33:34,399 --> 00:33:37,549
so for<font color="#E5E5E5"> debugging and logic which this</font>

880
00:33:36,470 --> 00:33:40,399
slide came in from another presentation

881
00:33:37,549 --> 00:33:42,440
<font color="#CCCCCC">but for applications that</font><font color="#E5E5E5"> where you want</font>

882
00:33:40,399 --> 00:33:44,600
to try to fuzz for a debug or logic

883
00:33:42,440 --> 00:33:46,880
functionality in a URL<font color="#E5E5E5"> as part of a</font>

884
00:33:44,600 --> 00:33:50,360
<font color="#CCCCCC">parameter this</font><font color="#E5E5E5"> is that list on</font><font color="#CCCCCC"> that side</font>

885
00:33:46,880 --> 00:33:52,399
which is access admin<font color="#CCCCCC"> dbg debug edit</font>

886
00:33:50,360 --> 00:33:54,559
etcetera etc<font color="#E5E5E5"> so</font><font color="#CCCCCC"> this is part of another</font>

887
00:33:52,399 --> 00:33:57,469
presentation<font color="#CCCCCC"> I</font><font color="#E5E5E5"> did called hunt I made a</font>

888
00:33:54,559 --> 00:34:00,168
tool to alert whenever<font color="#E5E5E5"> burp saw these</font>

889
00:33:57,470 --> 00:34:01,010
parameters<font color="#E5E5E5"> to tell you to go test for</font>

890
00:34:00,169 --> 00:34:02,570
certain classes<font color="#CCCCCC"> of vulnerabilities</font>

891
00:34:01,010 --> 00:34:04,580
that's a whole different presentation

892
00:34:02,570 --> 00:34:06,320
but I included the tables in here<font color="#CCCCCC"> so</font>

893
00:34:04,580 --> 00:34:08,239
that if testers<font color="#E5E5E5"> really want to get</font>

894
00:34:06,320 --> 00:34:09,949
intimate with<font color="#E5E5E5"> these type of bugs they</font>

895
00:34:08,239 --> 00:34:14,299
know the<font color="#E5E5E5"> places the type</font><font color="#CCCCCC"> of places</font><font color="#E5E5E5"> to</font>

896
00:34:09,949 --> 00:34:17,449
look<font color="#E5E5E5"> so here are those resources the</font>

897
00:34:14,300 --> 00:34:21,830
original white paper for<font color="#CCCCCC"> s STI the s STI</font>

898
00:34:17,449 --> 00:34:25,118
workshop that was done by Jerome do<font color="#CCCCCC"> SSST</font>

899
00:34:21,830 --> 00:34:26,989
<font color="#E5E5E5">SSST</font><font color="#CCCCCC"> I in flask</font><font color="#E5E5E5"> in Jinja by</font><font color="#CCCCCC"> Tim tomes</font>

900
00:34:25,119 --> 00:34:28,280
<font color="#CCCCCC">really like I'm not an</font><font color="#E5E5E5"> expert on</font>

901
00:34:26,989 --> 00:34:30,138
something<font color="#E5E5E5"> I'm gonna try to give you the</font>

902
00:34:28,280 --> 00:34:32,149
<font color="#CCCCCC">best resource that you can go learn</font>

903
00:34:30,139 --> 00:34:34,730
<font color="#E5E5E5">about</font><font color="#CCCCCC"> it so this</font><font color="#E5E5E5"> is kind of what I do at</font>

904
00:34:32,149 --> 00:34:36,199
<font color="#E5E5E5">the end of</font><font color="#CCCCCC"> each section so</font><font color="#E5E5E5"> this is where</font>

905
00:34:34,730 --> 00:34:37,668
you would<font color="#E5E5E5"> go</font><font color="#CCCCCC"> and</font><font color="#E5E5E5"> then</font><font color="#CCCCCC"> pizza good friend</font>

906
00:34:36,199 --> 00:34:41,509
of mine so I put a little<font color="#E5E5E5"> bubble</font><font color="#CCCCCC"> here</font>

907
00:34:37,668 --> 00:34:45,348
say what's up<font color="#CCCCCC"> ok so</font><font color="#E5E5E5"> another</font>

908
00:34:41,510 --> 00:34:47,240
vulnerability<font color="#E5E5E5"> that pays out well is part</font>

909
00:34:45,349 --> 00:34:49,010
of kind of<font color="#E5E5E5"> the elite hunter kind of</font>

910
00:34:47,239 --> 00:34:50,859
methodology<font color="#CCCCCC"> is server side request</font>

911
00:34:49,010 --> 00:34:54,230
forgery

912
00:34:50,859 --> 00:34:55,699
so server side request forgery we didn't

913
00:34:54,230 --> 00:34:56,690
<font color="#CCCCCC">really talk about</font><font color="#E5E5E5"> it that much</font><font color="#CCCCCC"> in the</font>

914
00:34:55,699 --> 00:34:59,509
<font color="#E5E5E5">first</font><font color="#CCCCCC"> version the</font><font color="#E5E5E5"> bug hunters</font>

915
00:34:56,690 --> 00:35:01,670
methodology<font color="#CCCCCC"> we're gonna talk about</font><font color="#E5E5E5"> some</font>

916
00:34:59,510 --> 00:35:03,290
resources<font color="#E5E5E5"> and tooling</font><font color="#CCCCCC"> for it and this</font>

917
00:35:01,670 --> 00:35:05,690
one we're<font color="#E5E5E5"> gonna</font><font color="#CCCCCC"> remove a little fast</font>

918
00:35:03,290 --> 00:35:08,480
<font color="#E5E5E5">because I'm running</font><font color="#CCCCCC"> on time</font><font color="#E5E5E5"> so the same</font>

919
00:35:05,690 --> 00:35:10,339
as other places here's the table<font color="#CCCCCC"> for the</font>

920
00:35:08,480 --> 00:35:13,670
most often<font color="#CCCCCC"> attack parameters for a</font>

921
00:35:10,339 --> 00:35:17,390
<font color="#CCCCCC">server side request forgery file folder</font>

922
00:35:13,670 --> 00:35:18,680
location style<font color="#E5E5E5"> locale template path doc</font>

923
00:35:17,390 --> 00:35:20,240
display you'll notice some<font color="#E5E5E5"> of them are</font>

924
00:35:18,680 --> 00:35:22,069
the<font color="#E5E5E5"> same for all</font><font color="#CCCCCC"> of our</font><font color="#E5E5E5"> ability classes</font>

925
00:35:20,240 --> 00:35:23,899
that's<font color="#CCCCCC"> ok I don't</font><font color="#E5E5E5"> care</font><font color="#CCCCCC"> about that this</font>

926
00:35:22,070 --> 00:35:25,970
<font color="#E5E5E5">is</font><font color="#CCCCCC"> a very small handful of params to</font>

927
00:35:23,900 --> 00:35:29,390
test really<font color="#E5E5E5"> or to be alerted on so</font>

928
00:35:25,970 --> 00:35:32,450
that's<font color="#E5E5E5"> that list for you</font><font color="#CCCCCC"> the idea of SS</font>

929
00:35:29,390 --> 00:35:36,560
<font color="#CCCCCC">RF is you have a function</font><font color="#E5E5E5"> on a</font><font color="#CCCCCC"> website</font>

930
00:35:32,450 --> 00:35:38,210
<font color="#E5E5E5">that takes normally takes a path HTTP</font>

931
00:35:36,560 --> 00:35:39,529
usually in<font color="#E5E5E5"> most cases and it's trying to</font>

932
00:35:38,210 --> 00:35:42,410
do a redirect<font color="#E5E5E5"> or pull some kind</font><font color="#CCCCCC"> of</font>

933
00:35:39,530 --> 00:35:45,830
content from<font color="#E5E5E5"> the</font><font color="#CCCCCC"> value</font><font color="#E5E5E5"> of that parameter</font>

934
00:35:42,410 --> 00:35:46,240
so you can see the value of<font color="#E5E5E5"> URL here is</font>

935
00:35:45,830 --> 00:35:48,490
<font color="#CCCCCC">H</font>

936
00:35:46,240 --> 00:35:50,259
<font color="#CCCCCC">Google com well what if you passed just</font>

937
00:35:48,490 --> 00:35:52,540
last<font color="#E5E5E5"> Google</font><font color="#CCCCCC"> com what if you pass it</font>

938
00:35:50,260 --> 00:35:54,730
<font color="#CCCCCC">without the HTTP with the protocol or</font>

939
00:35:52,540 --> 00:35:57,759
<font color="#CCCCCC">the slash is what if you pass</font><font color="#E5E5E5"> it with</font>

940
00:35:54,730 --> 00:35:59,530
just a path to something<font color="#E5E5E5"> else here well</font>

941
00:35:57,760 --> 00:36:02,260
you can do malicious things<font color="#E5E5E5"> when those</font>

942
00:35:59,530 --> 00:36:04,810
functions are encoded correctly like use

943
00:36:02,260 --> 00:36:08,230
the file protocol<font color="#E5E5E5"> to read</font><font color="#CCCCCC"> Etsy password</font>

944
00:36:04,810 --> 00:36:10,330
on the bottom or use<font color="#CCCCCC"> TFTP to internally</font>

945
00:36:08,230 --> 00:36:12,910
port scan the server because<font color="#CCCCCC"> they</font>

946
00:36:10,330 --> 00:36:17,950
haven't disallowed that protocol handler

947
00:36:12,910 --> 00:36:21,540
<font color="#E5E5E5">in that's parser</font><font color="#CCCCCC"> so there</font><font color="#E5E5E5"> are a whole</font>

948
00:36:17,950 --> 00:36:24,368
bunch<font color="#E5E5E5"> of ways to do this</font><font color="#CCCCCC"> one of the</font>

949
00:36:21,540 --> 00:36:27,100
presentations I list in the resources

950
00:36:24,369 --> 00:36:29,890
<font color="#E5E5E5">section is this</font><font color="#CCCCCC"> presentation by nicolas</font>

951
00:36:27,100 --> 00:36:33,580
and it's a whole<font color="#E5E5E5"> bunch of ways</font><font color="#CCCCCC"> to notate</font>

952
00:36:29,890 --> 00:36:36,150
IP addresses or<font color="#CCCCCC"> web addresses</font><font color="#E5E5E5"> that can</font>

953
00:36:33,580 --> 00:36:39,430
get<font color="#CCCCCC"> past</font><font color="#E5E5E5"> blacklist that people try to</font>

954
00:36:36,150 --> 00:36:40,290
disallow this attack in or a<font color="#E5E5E5"> really you</font>

955
00:36:39,430 --> 00:36:43,600
know whitelist

956
00:36:40,290 --> 00:36:44,710
any type<font color="#CCCCCC"> of you know</font><font color="#E5E5E5"> pathing attack so</font>

957
00:36:43,600 --> 00:36:47,020
these are<font color="#CCCCCC"> different</font><font color="#E5E5E5"> ways that</font><font color="#CCCCCC"> you can</font>

958
00:36:44,710 --> 00:36:49,330
you<font color="#CCCCCC"> can do that you can bypass some some</font>

959
00:36:47,020 --> 00:36:51,850
<font color="#E5E5E5">laughs stuff really this is the ultimate</font>

960
00:36:49,330 --> 00:36:55,900
<font color="#E5E5E5">cheat sheet</font><font color="#CCCCCC"> for</font><font color="#E5E5E5"> SS RF it tells you by</font>

961
00:36:51,850 --> 00:36:57,850
platform<font color="#E5E5E5"> or by a stack or programming</font>

962
00:36:55,900 --> 00:37:00,070
language basically<font color="#E5E5E5"> which ones are</font>

963
00:36:57,850 --> 00:37:02,200
vulnerable to<font color="#E5E5E5"> which protocol handlers by</font>

964
00:37:00,070 --> 00:37:04,780
default<font color="#CCCCCC"> so you</font><font color="#E5E5E5"> can use this if you see a</font>

965
00:37:02,200 --> 00:37:07,149
<font color="#E5E5E5">URL basically my methodology is use burp</font>

966
00:37:04,780 --> 00:37:09,010
<font color="#CCCCCC">if you see anywhere</font><font color="#E5E5E5"> in</font><font color="#CCCCCC"> a</font><font color="#E5E5E5"> parameter value</font>

967
00:37:07,150 --> 00:37:11,410
<font color="#E5E5E5">that a URL is getting passed or a path</font>

968
00:37:09,010 --> 00:37:13,960
is<font color="#E5E5E5"> getting passed start to fuzz it find</font>

969
00:37:11,410 --> 00:37:16,990
out what platform<font color="#E5E5E5"> it's on and then</font>

970
00:37:13,960 --> 00:37:18,490
<font color="#CCCCCC">reference</font><font color="#E5E5E5"> this cheat sheet</font><font color="#CCCCCC"> what is</font>

971
00:37:16,990 --> 00:37:20,950
<font color="#E5E5E5">usually enabled by</font><font color="#CCCCCC"> default on that</font>

972
00:37:18,490 --> 00:37:24,180
technology<font color="#CCCCCC"> try to</font><font color="#E5E5E5"> use those protocol</font>

973
00:37:20,950 --> 00:37:27,609
handlers and try to pull<font color="#E5E5E5"> out bad files</font>

974
00:37:24,180 --> 00:37:28,960
<font color="#E5E5E5">these are</font><font color="#CCCCCC"> the most common parameters for</font>

975
00:37:27,609 --> 00:37:31,330
server side request forgery

976
00:37:28,960 --> 00:37:33,820
you can grab<font color="#E5E5E5"> these slides offline so</font>

977
00:37:31,330 --> 00:37:35,710
I'll go<font color="#E5E5E5"> through them and these are the</font>

978
00:37:33,820 --> 00:37:39,670
best<font color="#E5E5E5"> resources for</font><font color="#CCCCCC"> learning server site</font>

979
00:37:35,710 --> 00:37:43,359
request forgery<font color="#CCCCCC"> okay</font><font color="#E5E5E5"> I have</font><font color="#CCCCCC"> ten minutes</font>

980
00:37:39,670 --> 00:37:44,980
so I'm gonna blast<font color="#E5E5E5"> you this sorry</font><font color="#CCCCCC"> so for</font>

981
00:37:43,359 --> 00:37:47,350
<font color="#E5E5E5">just code injection</font><font color="#CCCCCC"> or command injection</font>

982
00:37:44,980 --> 00:37:49,210
<font color="#E5E5E5">or just kind of new fuzzing ideas in the</font>

983
00:37:47,350 --> 00:37:50,440
last you know<font color="#E5E5E5"> whatever in the last</font>

984
00:37:49,210 --> 00:37:53,500
version talked about sequel injection

985
00:37:50,440 --> 00:37:54,790
<font color="#E5E5E5">sequel injection not super like it</font>

986
00:37:53,500 --> 00:37:56,950
although it's a super impactful bug we

987
00:37:54,790 --> 00:37:58,720
don't see it a ton like it's<font color="#E5E5E5"> not a top</font>

988
00:37:56,950 --> 00:38:00,189
bug that we see a lot of testers finding

989
00:37:58,720 --> 00:38:03,000
nowadays a lot of mitigations

990
00:38:00,190 --> 00:38:05,440
sequel injection<font color="#E5E5E5"> but command injection</font>

991
00:38:03,000 --> 00:38:08,560
<font color="#E5E5E5">funnily enough still exists in a</font><font color="#CCCCCC"> lot of</font>

992
00:38:05,440 --> 00:38:10,960
a lot<font color="#CCCCCC"> of web applications and</font><font color="#E5E5E5"> then the</font>

993
00:38:08,560 --> 00:38:13,810
idea of<font color="#E5E5E5"> custom fuzzing as well is a</font>

994
00:38:10,960 --> 00:38:15,819
thing that<font color="#CCCCCC"> we</font><font color="#E5E5E5"> see as well</font><font color="#CCCCCC"> as I door or</font>

995
00:38:13,810 --> 00:38:18,099
missing function level access<font color="#CCCCCC"> so this is</font>

996
00:38:15,819 --> 00:38:22,119
<font color="#E5E5E5">I doors the idea where you have</font><font color="#CCCCCC"> a</font>

997
00:38:18,099 --> 00:38:24,369
numerical identifier<font color="#CCCCCC"> inside of a URL and</font>

998
00:38:22,119 --> 00:38:25,810
if you incremented or decremented you

999
00:38:24,369 --> 00:38:29,020
can get<font color="#E5E5E5"> somebody else's data back right</font>

1000
00:38:25,810 --> 00:38:31,569
that's an<font color="#E5E5E5"> ID or ball bug</font><font color="#CCCCCC"> so ID or still</font>

1001
00:38:29,020 --> 00:38:34,810
retains<font color="#E5E5E5"> its it's kind of</font><font color="#CCCCCC"> king status</font><font color="#E5E5E5"> to</font>

1002
00:38:31,569 --> 00:38:37,029
bug all of our bugs<font color="#CCCCCC"> ID or gives</font><font color="#E5E5E5"> you the</font>

1003
00:38:34,810 --> 00:38:38,470
highest payout<font color="#E5E5E5"> applications are most</font>

1004
00:38:37,030 --> 00:38:41,589
often vulnerable<font color="#E5E5E5"> to it this</font><font color="#CCCCCC"> is an</font>

1005
00:38:38,470 --> 00:38:43,089
instance of a site here<font color="#CCCCCC"> that was</font>

1006
00:38:41,589 --> 00:38:45,578
vulnerable to<font color="#E5E5E5"> an ID or that let you pull</font>

1007
00:38:43,089 --> 00:38:49,180
down<font color="#CCCCCC"> from</font><font color="#E5E5E5"> a endpoint that</font><font color="#CCCCCC"> gave you JSON</font>

1008
00:38:45,579 --> 00:38:52,030
<font color="#E5E5E5">data on a customer and so basically all</font>

1009
00:38:49,180 --> 00:38:54,399
<font color="#E5E5E5">you did was there is a ser ID parameter</font>

1010
00:38:52,030 --> 00:38:56,560
<font color="#CCCCCC">and you incremented it by one or two or</font>

1011
00:38:54,400 --> 00:38:58,630
<font color="#CCCCCC">three and it would give you back someone</font>

1012
00:38:56,560 --> 00:39:00,400
else's data instead<font color="#CCCCCC"> of your own</font><font color="#E5E5E5"> this</font>

1013
00:38:58,630 --> 00:39:02,050
happens all the time<font color="#E5E5E5"> I don't think I've</font>

1014
00:39:00,400 --> 00:39:05,530
<font color="#CCCCCC">seen a web application that</font><font color="#E5E5E5"> has access</font>

1015
00:39:02,050 --> 00:39:08,770
mapped very well<font color="#E5E5E5"> that hasn't been hit by</font>

1016
00:39:05,530 --> 00:39:10,420
an IED or before<font color="#CCCCCC"> it's just it's super</font>

1017
00:39:08,770 --> 00:39:14,079
prevalent people really there's no real

1018
00:39:10,420 --> 00:39:14,920
framework to fix access bugs<font color="#CCCCCC"> so you know</font>

1019
00:39:14,079 --> 00:39:18,460
they're usually<font color="#E5E5E5"> pretty late in</font>

1020
00:39:14,920 --> 00:39:21,579
applications<font color="#CCCCCC"> so the things</font><font color="#E5E5E5"> that you do</font>

1021
00:39:18,460 --> 00:39:23,319
<font color="#CCCCCC">here to find I doors is look for</font><font color="#E5E5E5"> you</font>

1022
00:39:21,579 --> 00:39:25,900
know<font color="#E5E5E5"> numericals in parameter values</font>

1023
00:39:23,319 --> 00:39:27,970
which sounds like every every<font color="#CCCCCC"> site is</font>

1024
00:39:25,900 --> 00:39:29,740
going<font color="#E5E5E5"> to</font><font color="#CCCCCC"> have</font><font color="#E5E5E5"> that but you'll know when</font>

1025
00:39:27,970 --> 00:39:30,819
you see<font color="#CCCCCC"> it's like</font><font color="#E5E5E5"> ID equals or something</font>

1026
00:39:29,740 --> 00:39:32,348
<font color="#E5E5E5">like</font><font color="#CCCCCC"> that like you'll know about</font><font color="#E5E5E5"> the</font>

1027
00:39:30,819 --> 00:39:34,450
parameter if you should try to iterate

1028
00:39:32,349 --> 00:39:35,980
it or not if you see an<font color="#CCCCCC"> email address</font>

1029
00:39:34,450 --> 00:39:37,899
<font color="#CCCCCC">try to change it to a different</font><font color="#E5E5E5"> email</font>

1030
00:39:35,980 --> 00:39:40,510
address<font color="#CCCCCC"> if you see a hash referencing</font>

1031
00:39:37,900 --> 00:39:42,010
something<font color="#CCCCCC"> try to change the hash</font><font color="#E5E5E5"> create</font>

1032
00:39:40,510 --> 00:39:44,950
two accounts and if one has<font color="#CCCCCC"> a unique</font>

1033
00:39:42,010 --> 00:39:46,240
hash as<font color="#CCCCCC"> its referencing an account</font><font color="#E5E5E5"> just</font>

1034
00:39:44,950 --> 00:39:48,669
steal the<font color="#E5E5E5"> other hash see if you can</font>

1035
00:39:46,240 --> 00:39:52,060
substitute it<font color="#E5E5E5"> I'm a mix of some of these</font>

1036
00:39:48,670 --> 00:39:54,130
<font color="#E5E5E5">exist on some of these sites these are</font>

1037
00:39:52,060 --> 00:39:56,799
<font color="#CCCCCC">the most common parameters associated to</font>

1038
00:39:54,130 --> 00:39:58,599
<font color="#E5E5E5">insecure direct object reference again</font>

1039
00:39:56,800 --> 00:40:03,280
this is out of<font color="#E5E5E5"> another presentation</font>

1040
00:39:58,599 --> 00:40:05,710
called hunt<font color="#E5E5E5"> that I did at</font><font color="#CCCCCC"> DEFCON command</font>

1041
00:40:03,280 --> 00:40:06,910
injection<font color="#E5E5E5"> really that one's kind of been</font>

1042
00:40:05,710 --> 00:40:09,670
covered a lot<font color="#E5E5E5"> but there's a tool</font><font color="#CCCCCC"> called</font>

1043
00:40:06,910 --> 00:40:11,970
<font color="#E5E5E5">comics</font><font color="#CCCCCC"> very similar</font><font color="#E5E5E5"> to sequel map and</font>

1044
00:40:09,670 --> 00:40:14,140
TPL map that exploits command injection

1045
00:40:11,970 --> 00:40:16,328
<font color="#E5E5E5">and it has the ideal</font>

1046
00:40:14,140 --> 00:40:19,000
<font color="#E5E5E5">it has the ability also</font><font color="#CCCCCC"> to give you</font>

1047
00:40:16,329 --> 00:40:21,339
<font color="#E5E5E5">reverse shells in PowerShell</font><font color="#CCCCCC"> or Python</font>

1048
00:40:19,000 --> 00:40:24,700
<font color="#E5E5E5">and integrate</font><font color="#CCCCCC"> directly</font><font color="#E5E5E5"> into</font><font color="#CCCCCC"> Metasploit</font>

1049
00:40:21,339 --> 00:40:26,109
which is pretty<font color="#E5E5E5"> cool um there is some</font>

1050
00:40:24,700 --> 00:40:28,750
<font color="#E5E5E5">other advents that have come out</font><font color="#CCCCCC"> suburb</font>

1051
00:40:26,109 --> 00:40:30,400
<font color="#E5E5E5">suites</font><font color="#CCCCCC"> has an optional module</font><font color="#E5E5E5"> built into</font>

1052
00:40:28,750 --> 00:40:31,720
<font color="#CCCCCC">it now called</font><font color="#E5E5E5"> backslash powered scanner</font>

1053
00:40:30,400 --> 00:40:34,240
and<font color="#E5E5E5"> what it does is it doesn't actually</font>

1054
00:40:31,720 --> 00:40:37,390
fuzz<font color="#E5E5E5"> for any singular vulnerability it</font>

1055
00:40:34,240 --> 00:40:40,180
<font color="#CCCCCC">fuzzes by applying just kind of junk</font><font color="#E5E5E5"> in</font>

1056
00:40:37,390 --> 00:40:41,920
certain in<font color="#E5E5E5"> certain parameters and</font><font color="#CCCCCC"> then</font>

1057
00:40:40,180 --> 00:40:44,430
<font color="#E5E5E5">escaping them with the backslash and</font>

1058
00:40:41,920 --> 00:40:47,019
<font color="#E5E5E5">then reading</font><font color="#CCCCCC"> the response whether</font>

1059
00:40:44,430 --> 00:40:48,730
whether something executed or an error

1060
00:40:47,019 --> 00:40:49,569
came back or the content type was

1061
00:40:48,730 --> 00:40:51,549
different there's a whole<font color="#E5E5E5"> bunch of</font>

1062
00:40:49,569 --> 00:40:53,529
checks that<font color="#E5E5E5"> he does but it's kind of</font>

1063
00:40:51,549 --> 00:40:55,990
like<font color="#E5E5E5"> automated manual fuzzing that's</font>

1064
00:40:53,529 --> 00:40:57,869
what I call it<font color="#CCCCCC"> and</font><font color="#E5E5E5"> so it's pretty</font>

1065
00:40:55,990 --> 00:41:00,430
powerful<font color="#E5E5E5"> and it's a way to get back to</font>

1066
00:40:57,869 --> 00:41:02,589
<font color="#E5E5E5">kind of manual fuzzing for web</font>

1067
00:41:00,430 --> 00:41:04,629
vulnerabilities and when you when<font color="#CCCCCC"> birt</font>

1068
00:41:02,589 --> 00:41:06,819
<font color="#E5E5E5">finds</font><font color="#CCCCCC"> something that either returns a</font>

1069
00:41:04,630 --> 00:41:07,960
different content type<font color="#CCCCCC"> error</font><font color="#E5E5E5"> or</font>

1070
00:41:06,819 --> 00:41:10,420
something like that<font color="#E5E5E5"> it gives</font><font color="#CCCCCC"> you a</font>

1071
00:41:07,960 --> 00:41:12,730
scanner check in and it says suspicious

1072
00:41:10,420 --> 00:41:15,400
input transformation<font color="#E5E5E5"> you should check</font>

1073
00:41:12,730 --> 00:41:17,789
this out basically<font color="#E5E5E5"> so that's cool these</font>

1074
00:41:15,400 --> 00:41:21,369
<font color="#E5E5E5">are all the</font><font color="#CCCCCC"> resources</font><font color="#E5E5E5"> for that section</font>

1075
00:41:17,789 --> 00:41:23,680
<font color="#E5E5E5">last section how much time to have five</font>

1076
00:41:21,369 --> 00:41:25,420
minutes<font color="#E5E5E5"> cool so the last section where</font>

1077
00:41:23,680 --> 00:41:27,519
we see bug hunters succeeding and

1078
00:41:25,420 --> 00:41:28,930
finding big bugs<font color="#E5E5E5"> is basically related to</font>

1079
00:41:27,519 --> 00:41:32,410
<font color="#E5E5E5">infrastructure and configuration</font>

1080
00:41:28,930 --> 00:41:34,660
vulnerabilities this is one that we see

1081
00:41:32,410 --> 00:41:36,519
a lot which is subdomain takeovers this

1082
00:41:34,660 --> 00:41:38,710
is the idea<font color="#CCCCCC"> that you have a</font><font color="#E5E5E5"> subdomain</font>

1083
00:41:36,519 --> 00:41:42,399
<font color="#CCCCCC">that at one time connected to something</font>

1084
00:41:38,710 --> 00:41:45,579
<font color="#E5E5E5">like one of these services</font><font color="#CCCCCC"> and then you</font>

1085
00:41:42,400 --> 00:41:49,420
<font color="#CCCCCC">let it lapse</font><font color="#E5E5E5"> and so</font><font color="#CCCCCC"> you still have the</font>

1086
00:41:45,579 --> 00:41:52,240
<font color="#CCCCCC">subdomain</font><font color="#E5E5E5"> mapped</font><font color="#CCCCCC"> and</font><font color="#E5E5E5"> what happens is an</font>

1087
00:41:49,420 --> 00:41:54,579
attacker goes out and registers<font color="#E5E5E5"> on one</font>

1088
00:41:52,240 --> 00:41:56,319
of these<font color="#E5E5E5"> sites your sub domain and since</font>

1089
00:41:54,579 --> 00:41:58,599
you didn't you let it lapse they have

1090
00:41:56,319 --> 00:42:00,250
the<font color="#CCCCCC"> ability to</font><font color="#E5E5E5"> register it and then now</font>

1091
00:41:58,599 --> 00:42:03,190
they have control<font color="#CCCCCC"> of one of</font><font color="#E5E5E5"> your domains</font>

1092
00:42:00,250 --> 00:42:04,779
and inherit the trust<font color="#E5E5E5"> of</font><font color="#CCCCCC"> your users so</font>

1093
00:42:03,190 --> 00:42:08,589
<font color="#E5E5E5">subdomain</font><font color="#CCCCCC"> takeover these</font><font color="#E5E5E5"> are the ones</font>

1094
00:42:04,779 --> 00:42:10,450
<font color="#CCCCCC">that</font><font color="#E5E5E5"> can be efficiently</font><font color="#CCCCCC"> efficiently used</font>

1095
00:42:08,589 --> 00:42:12,369
<font color="#E5E5E5">basically you don't have to provide</font>

1096
00:42:10,450 --> 00:42:14,740
<font color="#E5E5E5">credentials or IDs or a company</font>

1097
00:42:12,369 --> 00:42:17,200
verification<font color="#E5E5E5"> to register those things in</font>

1098
00:42:14,740 --> 00:42:20,500
most cases or<font color="#CCCCCC"> you can forge</font><font color="#E5E5E5"> it this was</font>

1099
00:42:17,200 --> 00:42:24,069
made by was basically coined or made

1100
00:42:20,500 --> 00:42:25,660
popular by a tester<font color="#E5E5E5"> named</font><font color="#CCCCCC"> Franz</font><font color="#E5E5E5"> Rosen</font><font color="#CCCCCC"> he</font>

1101
00:42:24,069 --> 00:42:27,680
has all these<font color="#E5E5E5"> checks automated and like</font>

1102
00:42:25,660 --> 00:42:29,359
<font color="#E5E5E5">anybody else really does she's awesome</font>

1103
00:42:27,680 --> 00:42:31,129
but pretty simple it's pretty simple<font color="#CCCCCC"> you</font>

1104
00:42:29,359 --> 00:42:32,630
<font color="#CCCCCC">know you check</font><font color="#E5E5E5"> to see</font><font color="#CCCCCC"> if any see names</font>

1105
00:42:31,130 --> 00:42:33,619
are resolving to<font color="#CCCCCC"> third-party</font><font color="#E5E5E5"> services</font>

1106
00:42:32,630 --> 00:42:35,660
and you make<font color="#E5E5E5"> sure those</font><font color="#CCCCCC"> things</font><font color="#E5E5E5"> are</font>

1107
00:42:33,619 --> 00:42:37,960
<font color="#E5E5E5">either active set up for you know</font>

1108
00:42:35,660 --> 00:42:41,960
renewal<font color="#E5E5E5"> and if they're not renewed you</font>

1109
00:42:37,960 --> 00:42:43,579
nuke that<font color="#E5E5E5"> scene in basically</font><font color="#CCCCCC"> there's a</font>

1110
00:42:41,960 --> 00:42:46,040
whole bunch<font color="#E5E5E5"> of tools for this one</font>

1111
00:42:43,579 --> 00:42:47,420
written<font color="#CCCCCC"> by Ben here called</font><font color="#E5E5E5"> hostile sub</font>

1112
00:42:46,040 --> 00:42:51,230
<font color="#E5E5E5">root for</font><font color="#CCCCCC"> Sur</font><font color="#E5E5E5"> although</font><font color="#CCCCCC"> is is that</font>

1113
00:42:47,420 --> 00:42:53,390
<font color="#E5E5E5">maintained still or not you anymore</font><font color="#CCCCCC"> okay</font>

1114
00:42:51,230 --> 00:42:56,390
yeah so use the originator but not the

1115
00:42:53,390 --> 00:42:58,250
maintainer<font color="#E5E5E5"> TKO subs</font><font color="#CCCCCC"> Auto sub</font><font color="#E5E5E5"> takeover</font>

1116
00:42:56,390 --> 00:42:59,569
there's probably like six or seven tools

1117
00:42:58,250 --> 00:43:01,640
that are looking<font color="#E5E5E5"> for</font><font color="#CCCCCC"> this</font><font color="#E5E5E5"> now because</font>

1118
00:42:59,569 --> 00:43:04,520
it's an easy<font color="#CCCCCC"> vomb happens all the time</font>

1119
00:43:01,640 --> 00:43:06,500
<font color="#E5E5E5">is</font><font color="#CCCCCC"> usually a</font><font color="#E5E5E5"> p1 on</font><font color="#CCCCCC"> most platforms so it</font>

1120
00:43:04,520 --> 00:43:10,430
gets you paid<font color="#CCCCCC"> out at the top level</font><font color="#E5E5E5"> it's</font>

1121
00:43:06,500 --> 00:43:12,950
a big big time bug so misconfigured AWS

1122
00:43:10,430 --> 00:43:15,319
so this is<font color="#CCCCCC"> s3 buckets you</font><font color="#E5E5E5"> read a lot</font>

1123
00:43:12,950 --> 00:43:18,770
<font color="#CCCCCC">about these this is a whole probably day</font>

1124
00:43:15,319 --> 00:43:20,420
in itself<font color="#E5E5E5"> both hunting for s3 buckets</font>

1125
00:43:18,770 --> 00:43:23,329
that<font color="#CCCCCC"> are associated</font><font color="#E5E5E5"> to companies and</font>

1126
00:43:20,420 --> 00:43:25,280
<font color="#CCCCCC">also taking them over</font><font color="#E5E5E5"> seeing if they're</font>

1127
00:43:23,329 --> 00:43:26,359
<font color="#E5E5E5">configured right</font><font color="#CCCCCC"> there's a couple tools</font>

1128
00:43:25,280 --> 00:43:28,970
in this<font color="#E5E5E5"> section</font><font color="#CCCCCC"> and one called</font>

1129
00:43:26,359 --> 00:43:30,170
<font color="#E5E5E5">sandcastle one called bucket finder</font><font color="#CCCCCC"> and</font>

1130
00:43:28,970 --> 00:43:31,520
<font color="#E5E5E5">there's some other ones</font><font color="#CCCCCC"> that have</font>

1131
00:43:30,170 --> 00:43:33,200
recently just<font color="#CCCCCC"> come out</font><font color="#E5E5E5"> that I</font><font color="#CCCCCC"> haven't</font>

1132
00:43:31,520 --> 00:43:34,339
<font color="#CCCCCC">used yet</font><font color="#E5E5E5"> so just presentation need to be</font>

1133
00:43:33,200 --> 00:43:37,399
<font color="#CCCCCC">updated but there's a whole walkthrough</font>

1134
00:43:34,339 --> 00:43:41,480
by<font color="#E5E5E5"> detective</font><font color="#CCCCCC"> I and Franz</font><font color="#E5E5E5"> who wrote</font><font color="#CCCCCC"> about</font>

1135
00:43:37,400 --> 00:43:45,020
basically taking over<font color="#E5E5E5"> s/3 s/3 sources</font>

1136
00:43:41,480 --> 00:43:46,099
basically<font color="#E5E5E5"> so I'm not gonna reinvent the</font>

1137
00:43:45,020 --> 00:43:48,710
wheel here<font color="#CCCCCC"> you</font><font color="#E5E5E5"> can check that it's</font>

1138
00:43:46,099 --> 00:43:50,780
<font color="#E5E5E5">called a deep dive into AWS</font><font color="#CCCCCC"> three access</font>

1139
00:43:48,710 --> 00:43:54,530
<font color="#E5E5E5">controls taking full control</font><font color="#CCCCCC"> over</font><font color="#E5E5E5"> your</font>

1140
00:43:50,780 --> 00:43:56,359
<font color="#E5E5E5">assets probably the best reference and</font>

1141
00:43:54,530 --> 00:43:57,670
most complete<font color="#E5E5E5"> write-up I've seen on this</font>

1142
00:43:56,359 --> 00:44:01,130
type of<font color="#E5E5E5"> thing before</font>

1143
00:43:57,670 --> 00:44:04,040
the other one is get the idea that<font color="#E5E5E5"> you</font>

1144
00:44:01,130 --> 00:44:06,200
have get exposed<font color="#E5E5E5"> off of your main domain</font>

1145
00:44:04,040 --> 00:44:08,089
somehow<font color="#E5E5E5"> there's a couple tools for this</font>

1146
00:44:06,200 --> 00:44:09,618
called get<font color="#CCCCCC"> rob and truffle hog that</font><font color="#E5E5E5"> will</font>

1147
00:44:08,089 --> 00:44:12,650
<font color="#E5E5E5">basically pull down source code</font>

1148
00:44:09,619 --> 00:44:14,480
repositories<font color="#CCCCCC"> that are left</font><font color="#E5E5E5"> open</font><font color="#CCCCCC"> the way</font>

1149
00:44:12,650 --> 00:44:16,640
you fuzz for this is in your directory

1150
00:44:14,480 --> 00:44:19,579
<font color="#E5E5E5">brute-forcing you just add dot get</font>

1151
00:44:16,640 --> 00:44:22,220
usually and if you get a 200<font color="#E5E5E5"> ok</font><font color="#CCCCCC"> on dot</font>

1152
00:44:19,579 --> 00:44:24,950
get it means they<font color="#E5E5E5"> have misconfigured</font>

1153
00:44:22,220 --> 00:44:26,419
usually get configuration and<font color="#E5E5E5"> you can</font>

1154
00:44:24,950 --> 00:44:27,558
try to download<font color="#E5E5E5"> code that they've left</font>

1155
00:44:26,420 --> 00:44:32,900
<font color="#CCCCCC">out on</font><font color="#E5E5E5"> the internet or</font><font color="#CCCCCC"> through</font><font color="#E5E5E5"> their</font>

1156
00:44:27,559 --> 00:44:34,880
repository that's<font color="#E5E5E5"> it so I got so some</font>

1157
00:44:32,900 --> 00:44:36,349
some resources<font color="#E5E5E5"> the bug hunters</font>

1158
00:44:34,880 --> 00:44:40,130
methodology the original one is on my

1159
00:44:36,349 --> 00:44:41,060
github so<font color="#CCCCCC"> J haddock</font><font color="#E5E5E5"> /tph em there's also</font>

1160
00:44:40,130 --> 00:44:43,670
a forum for

1161
00:44:41,060 --> 00:44:45,380
<font color="#E5E5E5">Hunter's called the bug</font><font color="#CCCCCC"> downy forum and</font>

1162
00:44:43,670 --> 00:44:46,790
<font color="#CCCCCC">it's</font><font color="#E5E5E5"> associated to a slack</font><font color="#CCCCCC"> Channel so</font>

1163
00:44:45,380 --> 00:44:48,200
like we all hang out in there<font color="#E5E5E5"> and share</font>

1164
00:44:46,790 --> 00:44:50,870
techniques and kind<font color="#E5E5E5"> of make</font><font color="#CCCCCC"> fun of each</font>

1165
00:44:48,200 --> 00:44:52,549
<font color="#E5E5E5">other a lot so you can check that</font><font color="#CCCCCC"> out</font>

1166
00:44:50,870 --> 00:44:55,069
and these<font color="#E5E5E5"> are all the people</font><font color="#CCCCCC"> that I</font>

1167
00:44:52,550 --> 00:44:57,830
pulled content from<font color="#E5E5E5"> in the presentation</font>

1168
00:44:55,070 --> 00:44:59,630
so<font color="#CCCCCC"> you can check those out</font><font color="#E5E5E5"> in the thing</font>

1169
00:44:57,830 --> 00:45:02,029
<font color="#CCCCCC">and this</font><font color="#E5E5E5"> is</font><font color="#CCCCCC"> me</font><font color="#E5E5E5"> if you need to find me at</font>

1170
00:44:59,630 --> 00:45:12,790
<font color="#E5E5E5">J headaches or J hat except</font><font color="#CCCCCC"> Oh calm</font>

1171
00:45:02,030 --> 00:45:12,790
that's<font color="#E5E5E5"> it any questions at all no</font>

1172
00:45:21,680 --> 00:45:26,460
sorry<font color="#E5E5E5"> how did you come</font><font color="#CCCCCC"> up with</font><font color="#E5E5E5"> the</font>

1173
00:45:24,510 --> 00:45:28,320
parameter the methodology<font color="#E5E5E5"> for coming up</font>

1174
00:45:26,460 --> 00:45:30,360
<font color="#E5E5E5">with the most common parameters for each</font>

1175
00:45:28,320 --> 00:45:33,030
was that<font color="#E5E5E5"> working with the researchers or</font>

1176
00:45:30,360 --> 00:45:34,560
did you guys pull off<font color="#E5E5E5"> of the like valid</font>

1177
00:45:33,030 --> 00:45:36,840
submissions off the different<font color="#CCCCCC"> platforms</font>

1178
00:45:34,560 --> 00:45:39,029
yeah valid submissions off of the total

1179
00:45:36,840 --> 00:45:41,610
data set<font color="#E5E5E5"> we</font><font color="#CCCCCC"> just pulled everything</font><font color="#E5E5E5"> past</font>

1180
00:45:39,030 --> 00:45:43,980
the domain so it was<font color="#E5E5E5"> anonymized</font><font color="#CCCCCC"> and then</font>

1181
00:45:41,610 --> 00:45:46,650
basically regex<font color="#E5E5E5"> for parameters and then</font>

1182
00:45:43,980 --> 00:45:51,410
sorted it by instance and then<font color="#CCCCCC"> nuke</font><font color="#E5E5E5"> some</font>

1183
00:45:46,650 --> 00:45:57,510
that made obvious no sense<font color="#E5E5E5"> so yeah yeah</font>

1184
00:45:51,410 --> 00:46:00,649
any other questions cool thank you<font color="#E5E5E5"> for</font>

1185
00:45:57,510 --> 00:46:00,650
<font color="#E5E5E5">hanging out I really appreciate it</font>

1186
00:46:03,820 --> 00:46:12,909
[Music]

