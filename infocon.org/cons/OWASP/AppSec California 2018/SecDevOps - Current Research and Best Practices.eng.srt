1
00:00:04,300 --> 00:00:15,829
[Music]

2
00:00:17,540 --> 00:00:22,140
hey everyone thank you<font color="#CCCCCC"> so much for</font>

3
00:00:19,620 --> 00:00:23,700
coming<font color="#CCCCCC"> so if you all wouldn't mind</font>

4
00:00:22,140 --> 00:00:26,400
humoring me for a minute<font color="#E5E5E5"> something I've</font>

5
00:00:23,700 --> 00:00:28,259
been<font color="#E5E5E5"> doing</font><font color="#CCCCCC"> recently</font><font color="#E5E5E5"> at talks is starting</font>

6
00:00:26,400 --> 00:00:30,240
out<font color="#E5E5E5"> with a total non sequitur and then</font>

7
00:00:28,260 --> 00:00:32,009
<font color="#E5E5E5">leading right into</font><font color="#CCCCCC"> the talk so that when</font>

8
00:00:30,240 --> 00:00:34,110
they edit it<font color="#E5E5E5"> and</font><font color="#CCCCCC"> put it on YouTube or</font>

9
00:00:32,009 --> 00:00:35,280
wherever they hosted<font color="#E5E5E5"> it sounds like I</font>

10
00:00:34,110 --> 00:00:37,140
was just<font color="#CCCCCC"> in the</font><font color="#E5E5E5"> middle of</font><font color="#CCCCCC"> telling a</font>

11
00:00:35,280 --> 00:00:39,090
story<font color="#CCCCCC"> and they wonder like why was he</font>

12
00:00:37,140 --> 00:00:42,570
talking<font color="#CCCCCC"> about that when in</font><font color="#E5E5E5"> reality I</font>

13
00:00:39,090 --> 00:00:43,800
wasn't<font color="#E5E5E5"> but anyway so if I just</font><font color="#CCCCCC"> went</font>

14
00:00:42,570 --> 00:00:45,750
straight<font color="#E5E5E5"> into it you'd be like why</font><font color="#CCCCCC"> did</font>

15
00:00:43,800 --> 00:00:47,220
you<font color="#E5E5E5"> just say that that's really weird so</font>

16
00:00:45,750 --> 00:00:50,190
you'll still<font color="#E5E5E5"> think</font><font color="#CCCCCC"> that</font><font color="#E5E5E5"> but now you know</font>

17
00:00:47,220 --> 00:00:52,680
why<font color="#CCCCCC"> and the conference organisers can</font>

18
00:00:50,190 --> 00:00:55,709
freely cut this if they<font color="#E5E5E5"> want or if they</font>

19
00:00:52,680 --> 00:00:57,780
want to<font color="#E5E5E5"> keep it in they can so anyway</font>

20
00:00:55,710 --> 00:01:03,570
thanks for<font color="#CCCCCC"> humoring me I find it</font><font color="#E5E5E5"> amusing</font>

21
00:00:57,780 --> 00:01:06,690
<font color="#CCCCCC">you can feel</font><font color="#E5E5E5"> free not to yeah yeah and</font>

22
00:01:03,570 --> 00:01:08,640
<font color="#E5E5E5">that's when I learned never pick a fight</font>

23
00:01:06,690 --> 00:01:12,240
with a<font color="#CCCCCC"> mime even</font><font color="#E5E5E5"> if you think</font><font color="#CCCCCC"> you're</font>

24
00:01:08,640 --> 00:01:15,600
gonna win<font color="#E5E5E5"> but</font><font color="#CCCCCC"> Oh anyway I thank</font><font color="#E5E5E5"> you all</font>

25
00:01:12,240 --> 00:01:17,250
<font color="#E5E5E5">for</font><font color="#CCCCCC"> coming I</font><font color="#E5E5E5"> I really appreciate it and</font>

26
00:01:15,600 --> 00:01:19,649
thank<font color="#CCCCCC"> you very much for</font><font color="#E5E5E5"> the conference</font>

27
00:01:17,250 --> 00:01:21,000
<font color="#E5E5E5">organizers who invited me so today we're</font>

28
00:01:19,650 --> 00:01:24,359
gonna<font color="#E5E5E5"> be</font><font color="#CCCCCC"> talking about how do you scale</font>

29
00:01:21,000 --> 00:01:25,680
security<font color="#E5E5E5"> to give you a brief overview</font><font color="#CCCCCC"> of</font>

30
00:01:24,359 --> 00:01:27,658
the talk at first<font color="#E5E5E5"> we're gonna talk</font><font color="#CCCCCC"> a</font>

31
00:01:25,680 --> 00:01:29,100
little bit<font color="#CCCCCC"> about you know</font><font color="#E5E5E5"> agilent devops</font>

32
00:01:27,659 --> 00:01:31,259
background stuff how do you get people

33
00:01:29,100 --> 00:01:33,240
<font color="#E5E5E5">on board</font><font color="#CCCCCC"> and then most</font><font color="#E5E5E5"> of the talk is</font>

34
00:01:31,259 --> 00:01:35,609
going<font color="#CCCCCC"> to</font><font color="#E5E5E5"> be focused on what are some</font>

35
00:01:33,240 --> 00:01:37,439
tips and tricks that<font color="#E5E5E5"> various companies</font>

36
00:01:35,609 --> 00:01:39,960
are using<font color="#CCCCCC"> today that they found useful</font>

37
00:01:37,439 --> 00:01:42,359
<font color="#E5E5E5">in</font><font color="#CCCCCC"> terms of scaling security this</font><font color="#E5E5E5"> is</font>

38
00:01:39,960 --> 00:01:44,130
part in person conversations I've had

39
00:01:42,359 --> 00:01:46,109
<font color="#E5E5E5">with friends</font><font color="#CCCCCC"> and security engineers at a</font>

40
00:01:44,130 --> 00:01:48,210
<font color="#E5E5E5">number</font><font color="#CCCCCC"> of</font><font color="#E5E5E5"> Bay</font><font color="#CCCCCC"> Area companies as well</font><font color="#E5E5E5"> as</font>

41
00:01:46,109 --> 00:01:49,740
<font color="#CCCCCC">information from various white papers</font>

42
00:01:48,210 --> 00:01:51,990
blog posts talks and<font color="#E5E5E5"> things like that</font>

43
00:01:49,740 --> 00:01:53,850
<font color="#E5E5E5">sort of all aggregated together in one</font>

44
00:01:51,990 --> 00:01:56,908
hopefully so you can take some<font color="#E5E5E5"> cool</font>

45
00:01:53,850 --> 00:01:58,649
tricks<font color="#E5E5E5"> and add them at your company I'm</font>

46
00:01:56,909 --> 00:02:00,030
also a bit selfish<font color="#E5E5E5"> in giving this talk</font>

47
00:01:58,649 --> 00:02:01,890
<font color="#CCCCCC">because I know that many of</font><font color="#E5E5E5"> your</font>

48
00:02:00,030 --> 00:02:04,049
<font color="#E5E5E5">companies probably</font><font color="#CCCCCC"> do really interesting</font>

49
00:02:01,890 --> 00:02:05,429
<font color="#E5E5E5">stuff and I hope that after this talk</font>

50
00:02:04,049 --> 00:02:07,319
you'll come up<font color="#CCCCCC"> to me or maybe tonight or</font>

51
00:02:05,429 --> 00:02:08,850
tomorrow and say hey my company does

52
00:02:07,319 --> 00:02:11,460
<font color="#CCCCCC">this stuff and then we can have an</font>

53
00:02:08,850 --> 00:02:13,560
<font color="#CCCCCC">awesome talk about it um anyway so let's</font>

54
00:02:11,460 --> 00:02:15,690
<font color="#E5E5E5">get into it so</font><font color="#CCCCCC"> a little bit</font><font color="#E5E5E5"> about me I'm</font>

55
00:02:13,560 --> 00:02:17,400
a security<font color="#E5E5E5"> consultant</font><font color="#CCCCCC"> and research</font>

56
00:02:15,690 --> 00:02:19,740
director<font color="#CCCCCC"> at</font><font color="#E5E5E5"> NCC group if you're not</font>

57
00:02:17,400 --> 00:02:21,330
familiar<font color="#CCCCCC"> with what we</font><font color="#E5E5E5"> do we're basically</font>

58
00:02:19,740 --> 00:02:23,730
do everything related<font color="#E5E5E5"> to security so</font><font color="#CCCCCC"> we</font>

59
00:02:21,330 --> 00:02:26,129
<font color="#E5E5E5">do penetration</font><font color="#CCCCCC"> test for web apps</font><font color="#E5E5E5"> mobile</font>

60
00:02:23,730 --> 00:02:28,738
network we do<font color="#E5E5E5"> hardware crypto threat</font>

61
00:02:26,129 --> 00:02:30,660
modeling basically anything<font color="#E5E5E5"> but I'm</font>

62
00:02:28,739 --> 00:02:32,400
based out of the San Francisco<font color="#CCCCCC"> office</font>

63
00:02:30,660 --> 00:02:37,020
so to get anyone to<font color="#E5E5E5"> pay attention to me</font>

64
00:02:32,400 --> 00:02:39,150
<font color="#E5E5E5">I need</font><font color="#CCCCCC"> to dress like</font><font color="#E5E5E5"> this</font><font color="#CCCCCC"> before that I</font>

65
00:02:37,020 --> 00:02:41,310
was a<font color="#E5E5E5"> security engineer</font><font color="#CCCCCC"> and before that</font>

66
00:02:39,150 --> 00:02:42,120
I was a PhD<font color="#E5E5E5"> student at the University</font><font color="#CCCCCC"> of</font>

67
00:02:41,310 --> 00:02:47,510
<font color="#CCCCCC">california-davis</font>

68
00:02:42,120 --> 00:02:47,510
where I normally<font color="#CCCCCC"> dressed like this so</font>

69
00:02:47,600 --> 00:02:52,739
<font color="#CCCCCC">just to get</font><font color="#E5E5E5"> a little background I'm sure</font>

70
00:02:51,450 --> 00:02:53,850
most people<font color="#E5E5E5"> are</font><font color="#CCCCCC"> familiar</font><font color="#E5E5E5"> with agile and</font>

71
00:02:52,740 --> 00:02:56,520
DevOps but just to make<font color="#CCCCCC"> sure we're on</font>

72
00:02:53,850 --> 00:02:58,769
the<font color="#CCCCCC"> same page so there's a lot of nice</font>

73
00:02:56,520 --> 00:02:59,970
things<font color="#CCCCCC"> about agile</font><font color="#E5E5E5"> and DevOps so rather</font>

74
00:02:58,770 --> 00:03:02,190
than<font color="#E5E5E5"> release and quarterly we're</font>

75
00:02:59,970 --> 00:03:03,990
releasing daily or weekly<font color="#CCCCCC"> there's this</font>

76
00:03:02,190 --> 00:03:05,370
concept<font color="#E5E5E5"> of infrastructure as code where</font>

77
00:03:03,990 --> 00:03:07,620
you have config management tools like

78
00:03:05,370 --> 00:03:09,020
<font color="#E5E5E5">chef and puppet and there's a lot of</font>

79
00:03:07,620 --> 00:03:11,640
benefits to<font color="#E5E5E5"> this you're empowering</font>

80
00:03:09,020 --> 00:03:13,710
<font color="#E5E5E5">developers and ops you can release new</font>

81
00:03:11,640 --> 00:03:15,359
features<font color="#E5E5E5"> quickly if users either really</font>

82
00:03:13,710 --> 00:03:16,800
<font color="#E5E5E5">like a feature or have a problem</font><font color="#CCCCCC"> with it</font>

83
00:03:15,360 --> 00:03:18,900
<font color="#CCCCCC">you can change</font><font color="#E5E5E5"> that quickly rather than</font>

84
00:03:16,800 --> 00:03:20,310
<font color="#E5E5E5">waiting a quarter or a</font><font color="#CCCCCC"> year so generally</font>

85
00:03:18,900 --> 00:03:23,250
you can iterate rapidly and there's all

86
00:03:20,310 --> 00:03:25,740
sorts of<font color="#CCCCCC"> benefits to</font><font color="#E5E5E5"> this unfortunately</font>

87
00:03:23,250 --> 00:03:27,690
<font color="#E5E5E5">it's also hard it's hard to do right</font><font color="#CCCCCC"> so</font>

88
00:03:25,740 --> 00:03:29,670
in most organizations we work<font color="#E5E5E5"> with and</font>

89
00:03:27,690 --> 00:03:31,890
talk with the ratio of developers<font color="#CCCCCC"> -</font>

90
00:03:29,670 --> 00:03:34,260
security is<font color="#CCCCCC"> 50 to 1 or</font><font color="#E5E5E5"> more</font><font color="#CCCCCC"> often it's</font>

91
00:03:31,890 --> 00:03:36,269
hundreds to<font color="#E5E5E5"> one so at the rate of</font>

92
00:03:34,260 --> 00:03:38,010
release<font color="#E5E5E5"> of new code and just this year</font>

93
00:03:36,270 --> 00:03:39,900
ratio of people<font color="#CCCCCC"> you just can't possibly</font>

94
00:03:38,010 --> 00:03:41,429
review all the code<font color="#E5E5E5"> and at the same time</font>

95
00:03:39,900 --> 00:03:43,290
security<font color="#E5E5E5"> can't be blocker is this</font>

96
00:03:41,430 --> 00:03:45,450
there's no<font color="#CCCCCC"> gateway like in</font><font color="#E5E5E5"> traditional</font>

97
00:03:43,290 --> 00:03:47,459
waterfall<font color="#CCCCCC"> MST OSI processes and</font>

98
00:03:45,450 --> 00:03:49,470
<font color="#E5E5E5">oftentimes codes going from development</font>

99
00:03:47,459 --> 00:03:53,130
of<font color="#E5E5E5"> production in minutes or days not</font>

100
00:03:49,470 --> 00:03:55,020
months<font color="#CCCCCC"> so one person Tom Daniels wrote a</font>

101
00:03:53,130 --> 00:03:57,120
nice blog post<font color="#E5E5E5"> he's a security</font><font color="#CCCCCC"> engineer</font>

102
00:03:55,020 --> 00:03:57,600
<font color="#CCCCCC">at square</font><font color="#E5E5E5"> that I thought captured this</font>

103
00:03:57,120 --> 00:03:58,920
nicely

104
00:03:57,600 --> 00:04:01,049
you know Square has grown dramatically

105
00:03:58,920 --> 00:04:02,549
in<font color="#CCCCCC"> the number of services</font><font color="#E5E5E5"> we offer as</font>

106
00:04:01,050 --> 00:04:04,290
well<font color="#E5E5E5"> as</font><font color="#CCCCCC"> the size of</font><font color="#E5E5E5"> the engineering team</font>

107
00:04:02,550 --> 00:04:05,880
so it became obvious that<font color="#E5E5E5"> manually</font>

108
00:04:04,290 --> 00:04:06,750
testing and monitoring everything<font color="#CCCCCC"> it's</font>

109
00:04:05,880 --> 00:04:08,609
<font color="#E5E5E5">just not possible</font>

110
00:04:06,750 --> 00:04:09,930
<font color="#E5E5E5">so a big focus</font><font color="#CCCCCC"> of</font><font color="#E5E5E5"> their team has been</font>

111
00:04:08,610 --> 00:04:12,360
scaling security to support the

112
00:04:09,930 --> 00:04:14,340
<font color="#E5E5E5">engineering team as much as possible and</font>

113
00:04:12,360 --> 00:04:16,739
<font color="#E5E5E5">I thought this was</font><font color="#CCCCCC"> a nice</font><font color="#E5E5E5"> way to sum it</font>

114
00:04:14,340 --> 00:04:18,030
<font color="#E5E5E5">up so as we work with</font><font color="#CCCCCC"> a</font><font color="#E5E5E5"> number of</font>

115
00:04:16,738 --> 00:04:19,738
<font color="#E5E5E5">different</font><font color="#CCCCCC"> Bay Area companies and one</font>

116
00:04:18,029 --> 00:04:21,929
thing I hear again and again<font color="#E5E5E5"> from many</font>

117
00:04:19,738 --> 00:04:24,000
many companies<font color="#E5E5E5"> is just fundamentally how</font>

118
00:04:21,930 --> 00:04:26,580
do you scale security and I<font color="#E5E5E5"> think there</font>

119
00:04:24,000 --> 00:04:29,310
<font color="#CCCCCC">are a</font><font color="#E5E5E5"> lot of answers</font><font color="#CCCCCC"> but from what I've</font>

120
00:04:26,580 --> 00:04:31,289
seen you can boil a lot of it down into

121
00:04:29,310 --> 00:04:33,030
<font color="#E5E5E5">two things which we're going to talk in</font>

122
00:04:31,290 --> 00:04:35,070
<font color="#CCCCCC">a lot</font><font color="#E5E5E5"> of detail for the rest of the talk</font>

123
00:04:33,030 --> 00:04:36,750
but<font color="#E5E5E5"> basically you can</font><font color="#CCCCCC"> create libraries</font>

124
00:04:35,070 --> 00:04:38,610
and systems that<font color="#E5E5E5"> make it easy to do the</font>

125
00:04:36,750 --> 00:04:41,100
right<font color="#CCCCCC"> things securely and then you can a</font>

126
00:04:38,610 --> 00:04:43,050
dog mated that is static<font color="#CCCCCC"> and/or dynamic</font>

127
00:04:41,100 --> 00:04:43,620
checks at key points<font color="#CCCCCC"> in the SDLC and</font>

128
00:04:43,050 --> 00:04:45,139
we're going

129
00:04:43,620 --> 00:04:47,340
<font color="#E5E5E5">talk</font><font color="#CCCCCC"> about that in a lot of</font><font color="#E5E5E5"> detail soon</font>

130
00:04:45,139 --> 00:04:49,199
<font color="#E5E5E5">and again where am I getting</font><font color="#CCCCCC"> all of this</font>

131
00:04:47,340 --> 00:04:50,698
stuff<font color="#CCCCCC"> so this is things</font><font color="#E5E5E5"> I've seen</font>

132
00:04:49,199 --> 00:04:52,050
firsthand working with a<font color="#E5E5E5"> number of Bay</font>

133
00:04:50,699 --> 00:04:54,389
<font color="#E5E5E5">Area companies and</font><font color="#CCCCCC"> talking</font><font color="#E5E5E5"> with friends</font>

134
00:04:52,050 --> 00:04:56,010
<font color="#E5E5E5">and colleagues as well as pulling from</font>

135
00:04:54,389 --> 00:04:57,180
<font color="#E5E5E5">just you know what's what</font><font color="#CCCCCC"> are people</font>

136
00:04:56,010 --> 00:04:59,099
talking about<font color="#E5E5E5"> in blog</font><font color="#CCCCCC"> posts as</font>

137
00:04:57,180 --> 00:05:01,340
<font color="#E5E5E5">conference talks</font><font color="#CCCCCC"> white papers and so</font>

138
00:04:59,100 --> 00:05:01,340
forth

139
00:05:01,620 --> 00:05:04,740
so why automate I think pretty<font color="#CCCCCC"> much</font>

140
00:05:03,389 --> 00:05:07,199
<font color="#E5E5E5">everyone here is probably</font><font color="#CCCCCC"> on board but</font>

141
00:05:04,740 --> 00:05:09,930
just in case<font color="#CCCCCC"> someone</font><font color="#E5E5E5"> has some</font><font color="#CCCCCC"> lingering</font>

142
00:05:07,199 --> 00:05:11,910
doubts<font color="#CCCCCC"> security people</font><font color="#E5E5E5"> are expensive and</font>

143
00:05:09,930 --> 00:05:13,830
<font color="#E5E5E5">they're also hard to hire right</font><font color="#CCCCCC"> so</font>

144
00:05:11,910 --> 00:05:15,360
automation<font color="#E5E5E5"> can help your cert security</font>

145
00:05:13,830 --> 00:05:17,880
<font color="#E5E5E5">team scale to get more done with the</font>

146
00:05:15,360 --> 00:05:19,410
same number of<font color="#CCCCCC"> people</font><font color="#E5E5E5"> and ideally also</font>

147
00:05:17,880 --> 00:05:21,479
you're freeing up security engineer time

148
00:05:19,410 --> 00:05:23,970
to<font color="#E5E5E5"> tackle more interesting higher ROI</font>

149
00:05:21,479 --> 00:05:25,620
<font color="#E5E5E5">tasks rather than doing something very</font>

150
00:05:23,970 --> 00:05:29,550
<font color="#E5E5E5">boring and repetitive that is not a good</font>

151
00:05:25,620 --> 00:05:30,479
use<font color="#CCCCCC"> of their time</font><font color="#E5E5E5"> so this talk is aimed</font>

152
00:05:29,550 --> 00:05:32,610
at a lot<font color="#E5E5E5"> of different people</font>

153
00:05:30,479 --> 00:05:34,530
so<font color="#E5E5E5"> for CISOs and security managers</font>

154
00:05:32,610 --> 00:05:36,510
hopefully here are some approaches and

155
00:05:34,530 --> 00:05:38,250
some mindsets<font color="#E5E5E5"> that</font><font color="#CCCCCC"> give you some</font>

156
00:05:36,510 --> 00:05:40,080
<font color="#E5E5E5">measurable security things you can do to</font>

157
00:05:38,250 --> 00:05:41,520
<font color="#E5E5E5">improve your organization and also</font>

158
00:05:40,080 --> 00:05:43,349
hopefully<font color="#CCCCCC"> a little bit of motivation</font><font color="#E5E5E5"> so</font>

159
00:05:41,520 --> 00:05:44,940
if you're not currently implementing

160
00:05:43,350 --> 00:05:47,340
<font color="#E5E5E5">security automation hopefully it's a</font>

161
00:05:44,940 --> 00:05:49,410
gentle nudge<font color="#E5E5E5"> that you know here's some</font>

162
00:05:47,340 --> 00:05:51,030
nice benefits<font color="#E5E5E5"> and then for security</font>

163
00:05:49,410 --> 00:05:52,169
engineers<font color="#E5E5E5"> you know here's some cool</font>

164
00:05:51,030 --> 00:05:54,210
stuff<font color="#E5E5E5"> that other people</font><font color="#CCCCCC"> are</font><font color="#E5E5E5"> doing</font>

165
00:05:52,169 --> 00:05:55,650
<font color="#E5E5E5">consider using them if they work in your</font>

166
00:05:54,210 --> 00:05:59,909
org feel free to use them<font color="#E5E5E5"> if they don't</font>

167
00:05:55,650 --> 00:06:01,739
then don't and so how do you get people

168
00:05:59,910 --> 00:06:03,090
<font color="#E5E5E5">to buy in so even if you have the best</font>

169
00:06:01,740 --> 00:06:04,919
ideas<font color="#CCCCCC"> in the world fundamentally you</font>

170
00:06:03,090 --> 00:06:07,349
need<font color="#E5E5E5"> people to agree</font><font color="#CCCCCC"> to actually do them</font>

171
00:06:04,919 --> 00:06:10,380
<font color="#CCCCCC">and this</font><font color="#E5E5E5"> is probably worthy of its own</font>

172
00:06:07,349 --> 00:06:13,380
talk in itself but I just<font color="#E5E5E5"> wanted to</font>

173
00:06:10,380 --> 00:06:14,940
briefly<font color="#E5E5E5"> talk about it so let's say you</font>

174
00:06:13,380 --> 00:06:17,669
want to<font color="#E5E5E5"> get security</font><font color="#CCCCCC"> engine security</font>

175
00:06:14,940 --> 00:06:18,990
management<font color="#CCCCCC"> onboard you can</font><font color="#E5E5E5"> pitch</font><font color="#CCCCCC"> its</font>

176
00:06:17,669 --> 00:06:20,340
<font color="#E5E5E5">order from the cost savings point of</font>

177
00:06:18,990 --> 00:06:22,080
view you<font color="#E5E5E5"> know hey we can do more with</font>

178
00:06:20,340 --> 00:06:23,609
<font color="#E5E5E5">the same headcount</font><font color="#CCCCCC"> we can scale the</font>

179
00:06:22,080 --> 00:06:25,800
security team as the dev team is growing

180
00:06:23,610 --> 00:06:28,470
<font color="#CCCCCC">rapidly as</font><font color="#E5E5E5"> often is the case with</font>

181
00:06:25,800 --> 00:06:30,180
startups<font color="#E5E5E5"> and and generally</font><font color="#CCCCCC"> just we need</font>

182
00:06:28,470 --> 00:06:32,070
to maintain the security<font color="#E5E5E5"> baseline a</font>

183
00:06:30,180 --> 00:06:33,150
security standard<font color="#E5E5E5"> across what we have</font>

184
00:06:32,070 --> 00:06:35,729
now and what we're building<font color="#E5E5E5"> in the</font>

185
00:06:33,150 --> 00:06:36,989
<font color="#E5E5E5">future</font><font color="#CCCCCC"> for</font><font color="#E5E5E5"> security engineers you know</font>

186
00:06:35,729 --> 00:06:39,030
hey let's<font color="#CCCCCC"> automate</font><font color="#E5E5E5"> the boring time</font>

187
00:06:36,990 --> 00:06:41,510
boring things let's spend time on<font color="#E5E5E5"> higher</font>

188
00:06:39,030 --> 00:06:44,250
leverage<font color="#E5E5E5"> more interesting problems and</font>

189
00:06:41,510 --> 00:06:47,969
and as much<font color="#E5E5E5"> as security engineers like</font>

190
00:06:44,250 --> 00:06:48,990
working 24/7 probably they don't so you

191
00:06:47,970 --> 00:06:52,650
know let's protect our<font color="#E5E5E5"> work-life balance</font>

192
00:06:48,990 --> 00:06:53,849
as well<font color="#CCCCCC"> I think</font><font color="#E5E5E5"> with security automation</font>

193
00:06:52,650 --> 00:06:55,560
oftentimes the security team and

194
00:06:53,849 --> 00:06:56,940
security<font color="#E5E5E5"> management is on board and you</font>

195
00:06:55,560 --> 00:06:57,270
really need developers to get<font color="#E5E5E5"> on board</font>

196
00:06:56,940 --> 00:06:59,340
as<font color="#E5E5E5"> well</font>

197
00:06:57,270 --> 00:07:02,250
so some specific<font color="#E5E5E5"> things that might be</font>

198
00:06:59,340 --> 00:07:04,080
<font color="#CCCCCC">useful</font><font color="#E5E5E5"> to keep in mind are you know</font>

199
00:07:02,250 --> 00:07:06,449
developers are paid to<font color="#CCCCCC"> get features done</font>

200
00:07:04,080 --> 00:07:09,060
and to do to add new<font color="#E5E5E5"> things they're not</font>

201
00:07:06,449 --> 00:07:11,069
necessarily paid specifically to be

202
00:07:09,060 --> 00:07:13,229
secured directly so keep this<font color="#CCCCCC"> in</font><font color="#E5E5E5"> mind</font>

203
00:07:11,069 --> 00:07:15,810
and<font color="#E5E5E5"> any new security processes you need</font>

204
00:07:13,229 --> 00:07:17,849
to basically<font color="#E5E5E5"> add low to no additional</font>

205
00:07:15,810 --> 00:07:19,440
friction<font color="#E5E5E5"> for developers so make things</font>

206
00:07:17,849 --> 00:07:21,599
more secure<font color="#CCCCCC"> but add as little friction</font>

207
00:07:19,440 --> 00:07:22,889
<font color="#E5E5E5">as possible in practice</font><font color="#CCCCCC"> so if you're if</font>

208
00:07:21,599 --> 00:07:25,110
you<font color="#CCCCCC"> have any alerts or tools that are</font>

209
00:07:22,889 --> 00:07:27,180
going<font color="#CCCCCC"> directly to developers</font><font color="#E5E5E5"> the false</font>

210
00:07:25,110 --> 00:07:28,949
positive rate needs to<font color="#CCCCCC"> be</font><font color="#E5E5E5"> about zero</font>

211
00:07:27,180 --> 00:07:30,389
<font color="#E5E5E5">percent depending on the organization in</font>

212
00:07:28,949 --> 00:07:33,360
<font color="#E5E5E5">terms of getting people</font><font color="#CCCCCC"> to actually</font>

213
00:07:30,389 --> 00:07:34,500
<font color="#E5E5E5">listen</font><font color="#CCCCCC"> to</font><font color="#E5E5E5"> you over time and there's a</font>

214
00:07:33,360 --> 00:07:36,330
number<font color="#E5E5E5"> of things you can</font><font color="#CCCCCC"> do to make new</font>

215
00:07:34,500 --> 00:07:38,310
standards<font color="#E5E5E5"> and processes</font><font color="#CCCCCC"> as easy to</font><font color="#E5E5E5"> adopt</font>

216
00:07:36,330 --> 00:07:40,830
as possible so<font color="#E5E5E5"> for example if you have a</font>

217
00:07:38,310 --> 00:07:42,569
<font color="#E5E5E5">secure wrapper for a library</font><font color="#CCCCCC"> make it</font>

218
00:07:40,830 --> 00:07:43,770
have the<font color="#E5E5E5"> same arguments and the same</font>

219
00:07:42,569 --> 00:07:47,280
<font color="#E5E5E5">everything so that you</font><font color="#CCCCCC"> just changed the</font>

220
00:07:43,770 --> 00:07:49,109
class name and boom you're done another

221
00:07:47,280 --> 00:07:50,489
thing is maybe<font color="#E5E5E5"> you try building in some</font>

222
00:07:49,110 --> 00:07:53,159
stuff that<font color="#E5E5E5"> the development team wants</font>

223
00:07:50,490 --> 00:07:55,050
<font color="#CCCCCC">for example telemetry if you have some</font>

224
00:07:53,159 --> 00:07:57,240
<font color="#CCCCCC">rapper</font><font color="#E5E5E5"> library that has some nice</font>

225
00:07:55,050 --> 00:08:01,139
security<font color="#E5E5E5"> benefits as well</font><font color="#CCCCCC"> maybe</font><font color="#E5E5E5"> also</font>

226
00:07:57,240 --> 00:08:02,699
have that library have maybe<font color="#CCCCCC"> like</font><font color="#E5E5E5"> this</font>

227
00:08:01,139 --> 00:08:04,800
is how long this segment of<font color="#E5E5E5"> code takes</font>

228
00:08:02,699 --> 00:08:06,479
to<font color="#E5E5E5"> run or here's some</font><font color="#CCCCCC"> telemetry that</font>

229
00:08:04,800 --> 00:08:07,830
talks back<font color="#CCCCCC"> to</font><font color="#E5E5E5"> both something the</font>

230
00:08:06,479 --> 00:08:09,900
security team as well<font color="#E5E5E5"> as the</font><font color="#CCCCCC"> development</font>

231
00:08:07,830 --> 00:08:11,008
team can<font color="#E5E5E5"> access so that they can</font>

232
00:08:09,900 --> 00:08:12,270
understand<font color="#E5E5E5"> how it's being</font><font color="#CCCCCC"> used</font><font color="#E5E5E5"> in</font>

233
00:08:11,009 --> 00:08:15,360
<font color="#CCCCCC">production we're going to talk about</font>

234
00:08:12,270 --> 00:08:16,799
<font color="#E5E5E5">some specific</font><font color="#CCCCCC"> examples</font><font color="#E5E5E5"> of that soon and</font>

235
00:08:15,360 --> 00:08:19,620
then one thing we've also found is

236
00:08:16,800 --> 00:08:21,150
finding and fixing<font color="#E5E5E5"> bugs is often viewed</font>

237
00:08:19,620 --> 00:08:22,800
positively by developers for improving

238
00:08:21,150 --> 00:08:24,359
robustness<font color="#E5E5E5"> and code quality which is</font>

239
00:08:22,800 --> 00:08:26,969
<font color="#E5E5E5">something unless they're thinking</font><font color="#CCCCCC"> about</font>

240
00:08:24,360 --> 00:08:31,349
security<font color="#CCCCCC"> as</font><font color="#E5E5E5"> more speaks directly to what</font>

241
00:08:26,969 --> 00:08:32,909
they're<font color="#E5E5E5"> concerned with okay so we've</font>

242
00:08:31,349 --> 00:08:34,740
<font color="#E5E5E5">been blazing through the agenda which</font>

243
00:08:32,909 --> 00:08:37,620
you haven't<font color="#E5E5E5"> seen</font><font color="#CCCCCC"> yet but we talked about</font>

244
00:08:34,740 --> 00:08:39,899
me some agile stuff<font color="#E5E5E5"> some very context</font>

245
00:08:37,620 --> 00:08:41,940
appropriate<font color="#CCCCCC"> memes</font><font color="#E5E5E5"> and</font><font color="#CCCCCC"> we've also talked</font>

246
00:08:39,899 --> 00:08:43,409
about sort<font color="#E5E5E5"> of the why and and who is</font>

247
00:08:41,940 --> 00:08:45,029
getting<font color="#CCCCCC"> involved in scaling security and</font>

248
00:08:43,409 --> 00:08:48,510
the rest of this<font color="#E5E5E5"> talk</font><font color="#CCCCCC"> is going</font><font color="#E5E5E5"> to be</font>

249
00:08:45,029 --> 00:08:55,230
specifically focusing on the important

250
00:08:48,510 --> 00:08:56,850
<font color="#CCCCCC">stuff the how so so specifically</font><font color="#E5E5E5"> here's</font>

251
00:08:55,230 --> 00:08:58,920
a few disclaimers before we get into<font color="#E5E5E5"> it</font>

252
00:08:56,850 --> 00:09:00,870
I'm going to<font color="#E5E5E5"> reference several tools and</font>

253
00:08:58,920 --> 00:09:03,149
products<font color="#E5E5E5"> this isn't an endorsement it's</font>

254
00:09:00,870 --> 00:09:04,620
just to make things concrete<font color="#CCCCCC"> and we're</font>

255
00:09:03,149 --> 00:09:06,300
gonna describe specifically<font color="#E5E5E5"> how a number</font>

256
00:09:04,620 --> 00:09:07,920
<font color="#CCCCCC">of companies</font><font color="#E5E5E5"> are doing things and these</font>

257
00:09:06,300 --> 00:09:09,599
aren't necessarily<font color="#E5E5E5"> the best or the only</font>

258
00:09:07,920 --> 00:09:10,829
<font color="#E5E5E5">way it's just some ways that some</font>

259
00:09:09,600 --> 00:09:12,930
companies have<font color="#E5E5E5"> found</font>

260
00:09:10,830 --> 00:09:15,330
to be useful<font color="#E5E5E5"> so if it doesn't make</font><font color="#CCCCCC"> sense</font>

261
00:09:12,930 --> 00:09:16,890
for<font color="#CCCCCC"> your company and</font><font color="#E5E5E5"> your culture</font><font color="#CCCCCC"> either</font>

262
00:09:15,330 --> 00:09:18,990
don't do it or<font color="#E5E5E5"> maybe</font><font color="#CCCCCC"> change</font><font color="#E5E5E5"> it so</font><font color="#CCCCCC"> that</font>

263
00:09:16,890 --> 00:09:20,790
it does make sense<font color="#E5E5E5"> for your company</font><font color="#CCCCCC"> and</font>

264
00:09:18,990 --> 00:09:22,830
again we I can't cover everything

265
00:09:20,790 --> 00:09:24,030
important insect<font color="#CCCCCC"> DevOps in 50 minutes so</font>

266
00:09:22,830 --> 00:09:26,730
<font color="#E5E5E5">there's a lot of stuff I'm not</font><font color="#CCCCCC"> going to</font>

267
00:09:24,030 --> 00:09:28,170
talk<font color="#E5E5E5"> about and a lot of stuff</font><font color="#CCCCCC"> obviously</font>

268
00:09:26,730 --> 00:09:29,190
that<font color="#CCCCCC"> you all know that</font><font color="#E5E5E5"> I probably don't</font>

269
00:09:28,170 --> 00:09:32,370
know<font color="#E5E5E5"> that hopefully we will talk about</font>

270
00:09:29,190 --> 00:09:34,170
<font color="#CCCCCC">after so at a big-picture we're gonna</font>

271
00:09:32,370 --> 00:09:38,250
<font color="#E5E5E5">talk about a</font><font color="#CCCCCC"> couple of main points to</font>

272
00:09:34,170 --> 00:09:41,849
add various security<font color="#E5E5E5"> processes or</font>

273
00:09:38,250 --> 00:09:43,320
security efforts<font color="#CCCCCC"> so one is with security</font>

274
00:09:41,850 --> 00:09:45,030
<font color="#E5E5E5">engineering in terms</font><font color="#CCCCCC"> of</font><font color="#E5E5E5"> building</font>

275
00:09:43,320 --> 00:09:47,130
libraries<font color="#E5E5E5"> that help do the secure thing</font>

276
00:09:45,030 --> 00:09:48,780
by default and very easily for

277
00:09:47,130 --> 00:09:50,430
developers then we're going to talk

278
00:09:48,780 --> 00:09:53,550
<font color="#E5E5E5">about things</font><font color="#CCCCCC"> that</font><font color="#E5E5E5"> you can implement on</font>

279
00:09:50,430 --> 00:09:55,560
developers laptops as well as<font color="#E5E5E5"> integrated</font>

280
00:09:53,550 --> 00:09:56,729
with code hosting there's many<font color="#E5E5E5"> things</font>

281
00:09:55,560 --> 00:09:59,790
<font color="#E5E5E5">you can do but we're gonna focus on</font>

282
00:09:56,730 --> 00:10:01,080
static analysis here<font color="#E5E5E5"> and then what are</font>

283
00:09:59,790 --> 00:10:02,219
you<font color="#E5E5E5"> doing in sort of a testing QA</font>

284
00:10:01,080 --> 00:10:03,870
<font color="#CCCCCC">environment</font><font color="#E5E5E5"> we're going to talk about</font>

285
00:10:02,220 --> 00:10:06,210
some dynamic analysis and fuzzing and

286
00:10:03,870 --> 00:10:07,410
then finally in production we're going

287
00:10:06,210 --> 00:10:09,420
to talk a little<font color="#E5E5E5"> bit</font><font color="#CCCCCC"> about</font><font color="#E5E5E5"> monitoring</font>

288
00:10:07,410 --> 00:10:10,890
<font color="#E5E5E5">but as a whole this talk is focusing</font>

289
00:10:09,420 --> 00:10:14,760
more on<font color="#CCCCCC"> app sack than the infrastructure</font>

290
00:10:10,890 --> 00:10:16,770
stuff just<font color="#E5E5E5"> to give you a heads up</font><font color="#CCCCCC"> all</font>

291
00:10:14,760 --> 00:10:20,939
<font color="#CCCCCC">right</font><font color="#E5E5E5"> so let's talk</font><font color="#CCCCCC"> about some high ROI</font>

292
00:10:16,770 --> 00:10:22,199
security engineering<font color="#E5E5E5"> tasks so I've</font>

293
00:10:20,940 --> 00:10:23,490
talked to a security<font color="#CCCCCC"> engineer is that</font>

294
00:10:22,200 --> 00:10:25,230
many different companies<font color="#CCCCCC"> and one thing</font>

295
00:10:23,490 --> 00:10:27,090
they consistently state is that<font color="#E5E5E5"> one of</font>

296
00:10:25,230 --> 00:10:28,950
<font color="#CCCCCC">the biggest ROI things they've done is</font>

297
00:10:27,090 --> 00:10:30,810
building libraries<font color="#E5E5E5"> or tools that are</font>

298
00:10:28,950 --> 00:10:33,060
<font color="#E5E5E5">secure by default</font><font color="#CCCCCC"> for use by the</font>

299
00:10:30,810 --> 00:10:34,770
development team and if we look back in

300
00:10:33,060 --> 00:10:37,920
time<font color="#CCCCCC"> a</font><font color="#E5E5E5"> little bit back to</font><font color="#CCCCCC"> web frameworks</font>

301
00:10:34,770 --> 00:10:39,780
maybe five seven years<font color="#CCCCCC"> ago</font><font color="#E5E5E5"> many of them</font>

302
00:10:37,920 --> 00:10:41,729
didn't<font color="#E5E5E5"> output in code correctly by</font>

303
00:10:39,780 --> 00:10:43,500
default<font color="#E5E5E5"> you had to add for</font><font color="#CCCCCC"> example in</font>

304
00:10:41,730 --> 00:10:45,990
rails<font color="#E5E5E5"> earlier versions you had to add H</font>

305
00:10:43,500 --> 00:10:47,550
in order<font color="#E5E5E5"> to properly output and code</font>

306
00:10:45,990 --> 00:10:49,250
something<font color="#E5E5E5"> as a result because you had to</font>

307
00:10:47,550 --> 00:10:51,000
do<font color="#E5E5E5"> something for it to be secure</font>

308
00:10:49,250 --> 00:10:53,520
<font color="#E5E5E5">cross-site scripting was much more</font>

309
00:10:51,000 --> 00:10:55,080
prevalent<font color="#E5E5E5"> now</font><font color="#CCCCCC"> rails output</font><font color="#E5E5E5"> and codes by</font>

310
00:10:53,520 --> 00:10:56,760
default so you<font color="#E5E5E5"> need to specifically do</font>

311
00:10:55,080 --> 00:10:59,760
something insecure to make it vulnerable

312
00:10:56,760 --> 00:11:01,410
<font color="#CCCCCC">and so this this idea of you having to</font>

313
00:10:59,760 --> 00:11:03,930
<font color="#E5E5E5">do something extra to make it not safe</font>

314
00:11:01,410 --> 00:11:05,430
<font color="#E5E5E5">is sort of the crux of this idea so</font>

315
00:11:03,930 --> 00:11:07,640
<font color="#E5E5E5">basically anything related to managing</font>

316
00:11:05,430 --> 00:11:10,199
secrets anything<font color="#E5E5E5"> related to crypto</font>

317
00:11:07,640 --> 00:11:13,560
authentication authorization<font color="#E5E5E5"> sequel file</font>

318
00:11:10,200 --> 00:11:15,420
system access<font color="#E5E5E5"> shell eggs etc these</font><font color="#CCCCCC"> are</font>

319
00:11:13,560 --> 00:11:17,939
the types of<font color="#E5E5E5"> things that might</font><font color="#CCCCCC"> be</font>

320
00:11:15,420 --> 00:11:20,520
<font color="#E5E5E5">interesting for</font><font color="#CCCCCC"> you to consider</font><font color="#E5E5E5"> one</font>

321
00:11:17,940 --> 00:11:22,440
company has this they basically banned

322
00:11:20,520 --> 00:11:23,760
the use of md5 in their<font color="#CCCCCC"> codebase and</font>

323
00:11:22,440 --> 00:11:24,529
<font color="#E5E5E5">instead they wrote a simple wrapper</font>

324
00:11:23,760 --> 00:11:26,839
called

325
00:11:24,529 --> 00:11:31,069
<font color="#E5E5E5">non cryptographically secure md5 which</font>

326
00:11:26,839 --> 00:11:34,550
just calls md5 but but the<font color="#CCCCCC"> idea the idea</font>

327
00:11:31,069 --> 00:11:36,079
<font color="#E5E5E5">is by you yeah so it does the same</font><font color="#CCCCCC"> thing</font>

328
00:11:34,550 --> 00:11:38,300
but but the idea<font color="#CCCCCC"> is when you use</font>

329
00:11:36,079 --> 00:11:40,128
something<font color="#E5E5E5"> like this</font><font color="#CCCCCC"> you're explicitly</font>

330
00:11:38,300 --> 00:11:42,439
acknowledging as a developer you know

331
00:11:40,129 --> 00:11:45,800
hey I am using this but I acknowledge

332
00:11:42,439 --> 00:11:47,389
that<font color="#E5E5E5"> I am</font><font color="#CCCCCC"> NOT using the</font><font color="#E5E5E5"> md5 and relying</font>

333
00:11:45,800 --> 00:11:49,248
on its cryptographic randomness like

334
00:11:47,389 --> 00:11:50,600
it's<font color="#E5E5E5"> okay I just</font><font color="#CCCCCC"> sort of need</font><font color="#E5E5E5"> kind of</font>

335
00:11:49,249 --> 00:11:52,360
<font color="#E5E5E5">like something</font><font color="#CCCCCC"> that represents</font><font color="#E5E5E5"> this file</font>

336
00:11:50,600 --> 00:11:54,649
or string or<font color="#CCCCCC"> something like that</font>

337
00:11:52,360 --> 00:11:58,069
so let's talk<font color="#CCCCCC"> about some specific</font>

338
00:11:54,649 --> 00:12:01,009
examples<font color="#E5E5E5"> from</font><font color="#CCCCCC"> companies</font><font color="#E5E5E5"> this one I think</font>

339
00:11:58,069 --> 00:12:03,800
<font color="#E5E5E5">is particularly cool</font><font color="#CCCCCC"> so this</font><font color="#E5E5E5"> company has</font>

340
00:12:01,009 --> 00:12:05,600
a test case<font color="#E5E5E5"> that runs both locally on</font>

341
00:12:03,800 --> 00:12:07,399
developers machines as well<font color="#E5E5E5"> as an</font>

342
00:12:05,600 --> 00:12:10,009
integration<font color="#CCCCCC"> test that essentially</font>

343
00:12:07,399 --> 00:12:12,050
automatically checks if a controller

344
00:12:10,009 --> 00:12:14,329
<font color="#CCCCCC">method is missing access controls</font><font color="#E5E5E5"> so</font>

345
00:12:12,050 --> 00:12:16,849
<font color="#E5E5E5">basically how it works is when the test</font>

346
00:12:14,329 --> 00:12:18,620
runs it does like railed<font color="#E5E5E5"> rails droughts</font>

347
00:12:16,850 --> 00:12:20,209
and programmatically iterates<font color="#CCCCCC"> through</font>

348
00:12:18,620 --> 00:12:23,329
all controller methods that have been

349
00:12:20,209 --> 00:12:25,459
<font color="#CCCCCC">registered and looks inspects that code</font>

350
00:12:23,329 --> 00:12:28,969
itself to say is this specific<font color="#CCCCCC"> access</font>

351
00:12:25,459 --> 00:12:30,589
control method<font color="#E5E5E5"> being called at all</font><font color="#CCCCCC"> so</font>

352
00:12:28,970 --> 00:12:32,000
you don't<font color="#CCCCCC"> actually ahead of time need to</font>

353
00:12:30,589 --> 00:12:34,009
say what are<font color="#CCCCCC"> all</font><font color="#E5E5E5"> the controller methods</font>

354
00:12:32,000 --> 00:12:35,660
because obviously when rails is running

355
00:12:34,009 --> 00:12:37,850
it can infer like what are all the

356
00:12:35,660 --> 00:12:41,569
routes<font color="#CCCCCC"> so</font><font color="#E5E5E5"> basically if a developer adds</font>

357
00:12:37,850 --> 00:12:43,939
a new controller method<font color="#E5E5E5"> but doesn't do</font>

358
00:12:41,569 --> 00:12:45,378
any access control checks this will

359
00:12:43,939 --> 00:12:48,019
automatically flag that in the test

360
00:12:45,379 --> 00:12:50,300
suite<font color="#CCCCCC"> without</font><font color="#E5E5E5"> any additional manual work</font>

361
00:12:48,019 --> 00:12:51,920
by the security team and<font color="#E5E5E5"> they said this</font>

362
00:12:50,300 --> 00:12:53,269
has<font color="#E5E5E5"> caught a number of things where the</font>

363
00:12:51,920 --> 00:12:55,250
developer was adding any one<font color="#E5E5E5"> point there</font>

364
00:12:53,269 --> 00:12:56,709
<font color="#CCCCCC">ago I didn't know I had to</font><font color="#E5E5E5"> do that and I</font>

365
00:12:55,250 --> 00:12:59,149
thought this was<font color="#CCCCCC"> a really cool idea</font>

366
00:12:56,709 --> 00:13:00,680
another example is one<font color="#E5E5E5"> company has a</font>

367
00:12:59,149 --> 00:13:02,329
<font color="#E5E5E5">very battle-tested view library that</font>

368
00:13:00,680 --> 00:13:03,709
once they built it and forced everyone

369
00:13:02,329 --> 00:13:05,449
<font color="#E5E5E5">to use it basically they haven't had</font>

370
00:13:03,709 --> 00:13:08,119
cross-site scripting in a couple<font color="#E5E5E5"> of</font>

371
00:13:05,449 --> 00:13:09,469
years<font color="#E5E5E5"> another company has</font><font color="#CCCCCC"> a data model</font>

372
00:13:08,120 --> 00:13:11,300
wrapper<font color="#CCCCCC"> library that if you're gonna</font>

373
00:13:09,470 --> 00:13:12,980
access user data if<font color="#E5E5E5"> you're going to talk</font>

374
00:13:11,300 --> 00:13:15,920
<font color="#CCCCCC">to the database you have</font><font color="#E5E5E5"> to</font><font color="#CCCCCC"> use sort of</font>

375
00:13:12,980 --> 00:13:17,839
<font color="#E5E5E5">this battle-tested thing and since they</font>

376
00:13:15,920 --> 00:13:19,399
made everyone use this they haven't<font color="#E5E5E5"> had</font>

377
00:13:17,839 --> 00:13:21,889
sequel injection at all and they said

378
00:13:19,399 --> 00:13:24,709
three<font color="#CCCCCC"> or</font><font color="#E5E5E5"> four years</font><font color="#CCCCCC"> so some</font><font color="#E5E5E5"> big wins</font>

379
00:13:21,889 --> 00:13:26,629
here by<font color="#E5E5E5"> putting in some upfront work the</font>

380
00:13:24,709 --> 00:13:27,529
core takeaway<font color="#CCCCCC"> of</font><font color="#E5E5E5"> this is basically if</font>

381
00:13:26,629 --> 00:13:29,209
there's something that's<font color="#E5E5E5"> hard to do</font>

382
00:13:27,529 --> 00:13:31,459
securely if you have to be aware of this

383
00:13:29,209 --> 00:13:33,229
<font color="#E5E5E5">thread or that thread just</font><font color="#CCCCCC"> build a</font>

384
00:13:31,459 --> 00:13:35,569
secure by default implementation and

385
00:13:33,230 --> 00:13:37,309
then make people use it and ideally it's

386
00:13:35,569 --> 00:13:37,750
easy to use and<font color="#CCCCCC"> well-documented so that</font>

387
00:13:37,309 --> 00:13:41,860
it that's

388
00:13:37,750 --> 00:13:43,480
not a big ask<font color="#E5E5E5"> okay cool so now we're</font>

389
00:13:41,860 --> 00:13:44,890
going to talk<font color="#CCCCCC"> about what you</font><font color="#E5E5E5"> can do</font><font color="#CCCCCC"> on a</font>

390
00:13:43,480 --> 00:13:47,380
<font color="#E5E5E5">developer's machine but before we get</font>

391
00:13:44,890 --> 00:13:49,060
into<font color="#E5E5E5"> static and dynamic analysis just to</font>

392
00:13:47,380 --> 00:13:51,310
<font color="#E5E5E5">make</font><font color="#CCCCCC"> sure we're on the</font><font color="#E5E5E5"> same page</font><font color="#CCCCCC"> I</font>

393
00:13:49,060 --> 00:13:56,170
wanted<font color="#E5E5E5"> to take you</font><font color="#CCCCCC"> to a my a quick</font>

394
00:13:51,310 --> 00:13:58,390
diversion<font color="#CCCCCC"> okay so just</font><font color="#E5E5E5"> so we're on the</font>

395
00:13:56,170 --> 00:14:00,819
<font color="#E5E5E5">same page</font><font color="#CCCCCC"> so static</font><font color="#E5E5E5"> analysis is</font>

396
00:13:58,390 --> 00:14:02,710
basically<font color="#E5E5E5"> reasoning about code from</font>

397
00:14:00,820 --> 00:14:05,050
<font color="#E5E5E5">looking at it not running it and then</font>

398
00:14:02,710 --> 00:14:06,850
dynamic analysis is running code and

399
00:14:05,050 --> 00:14:08,680
observing<font color="#E5E5E5"> how it behaves there's like a</font>

400
00:14:06,850 --> 00:14:09,310
lot<font color="#CCCCCC"> of details but at its core</font><font color="#E5E5E5"> that's</font>

401
00:14:08,680 --> 00:14:10,750
all it is

402
00:14:09,310 --> 00:14:13,270
and there's some fundamental trade-offs

403
00:14:10,750 --> 00:14:14,770
<font color="#CCCCCC">here static</font><font color="#E5E5E5"> analysis tends to be high</font>

404
00:14:13,270 --> 00:14:16,810
<font color="#E5E5E5">coverage</font><font color="#CCCCCC"> and</font><font color="#E5E5E5"> that you can look at all of</font>

405
00:14:14,770 --> 00:14:18,400
<font color="#E5E5E5">the code at once but it's imprecise</font><font color="#CCCCCC"> in</font>

406
00:14:16,810 --> 00:14:20,050
<font color="#E5E5E5">that there's false positives while</font>

407
00:14:18,400 --> 00:14:21,370
dynamic analysis it can<font color="#CCCCCC"> be hard to get</font>

408
00:14:20,050 --> 00:14:23,290
good code coverage like make sure you

409
00:14:21,370 --> 00:14:24,970
<font color="#CCCCCC">exercise all</font><font color="#E5E5E5"> the functionality but it's</font>

410
00:14:23,290 --> 00:14:26,949
precise in that when it<font color="#E5E5E5"> finds something</font>

411
00:14:24,970 --> 00:14:29,830
<font color="#E5E5E5">it's</font><font color="#CCCCCC"> probably a true positive though not</font>

412
00:14:26,950 --> 00:14:31,150
<font color="#E5E5E5">always and and also there's a range of</font>

413
00:14:29,830 --> 00:14:32,980
complexity<font color="#CCCCCC"> of tools</font><font color="#E5E5E5"> right so</font>

414
00:14:31,150 --> 00:14:34,600
simplistically for static analysis you

415
00:14:32,980 --> 00:14:36,070
<font color="#E5E5E5">have things like grep and linters and</font>

416
00:14:34,600 --> 00:14:39,220
then<font color="#CCCCCC"> your</font><font color="#E5E5E5"> more complex things like</font>

417
00:14:36,070 --> 00:14:40,510
<font color="#E5E5E5">fortify and check marks</font><font color="#CCCCCC"> and similarly</font><font color="#E5E5E5"> on</font>

418
00:14:39,220 --> 00:14:42,550
the dynamic analysis<font color="#E5E5E5"> idea of</font>

419
00:14:40,510 --> 00:14:44,290
intercepting proxies like<font color="#CCCCCC"> zed attack</font>

420
00:14:42,550 --> 00:14:45,910
proxy and burp suite and then you have

421
00:14:44,290 --> 00:14:50,439
more complex<font color="#E5E5E5"> stuff that is more</font>

422
00:14:45,910 --> 00:14:52,089
automated so<font color="#CCCCCC"> I with a number of</font>

423
00:14:50,440 --> 00:14:54,370
<font color="#CCCCCC">different security engineers at various</font>

424
00:14:52,089 --> 00:14:57,280
<font color="#E5E5E5">companies and this was pretty much the</font>

425
00:14:54,370 --> 00:14:58,570
first<font color="#CCCCCC"> thing</font><font color="#E5E5E5"> everyone said and and I</font>

426
00:14:57,280 --> 00:15:00,130
<font color="#E5E5E5">think</font><font color="#CCCCCC"> that that's really</font><font color="#E5E5E5"> sad because I</font>

427
00:14:58,570 --> 00:15:02,560
<font color="#E5E5E5">personally like static analysis a lot</font>

428
00:15:00,130 --> 00:15:06,189
and I think<font color="#CCCCCC"> it's great but I think the</font>

429
00:15:02,560 --> 00:15:07,689
<font color="#CCCCCC">challenge</font><font color="#E5E5E5"> is people think oh you know</font>

430
00:15:06,190 --> 00:15:08,920
<font color="#CCCCCC">stack analysis is awesome there's all</font>

431
00:15:07,690 --> 00:15:10,120
<font color="#E5E5E5">this promise I'm going to integrate it</font>

432
00:15:08,920 --> 00:15:11,620
<font color="#CCCCCC">then we're gonna find all</font><font color="#E5E5E5"> the bugs and</font>

433
00:15:10,120 --> 00:15:13,750
it's<font color="#E5E5E5"> going to be you know this this</font>

434
00:15:11,620 --> 00:15:14,950
perfect happy place<font color="#CCCCCC"> but then they run it</font>

435
00:15:13,750 --> 00:15:18,190
for<font color="#E5E5E5"> the first time at</font><font color="#CCCCCC"> least many of</font>

436
00:15:14,950 --> 00:15:20,920
<font color="#E5E5E5">these static analysis tools and then</font>

437
00:15:18,190 --> 00:15:22,990
and then it's like<font color="#E5E5E5"> that because because</font>

438
00:15:20,920 --> 00:15:26,500
<font color="#E5E5E5">there's a lot of false</font><font color="#CCCCCC"> positives</font>

439
00:15:22,990 --> 00:15:28,630
so what I what I<font color="#E5E5E5"> would encourage you</font><font color="#CCCCCC"> to</font>

440
00:15:26,500 --> 00:15:30,610
think<font color="#E5E5E5"> about is it static analysis isn't</font>

441
00:15:28,630 --> 00:15:31,450
<font color="#E5E5E5">a binary you're either doing it or</font>

442
00:15:30,610 --> 00:15:33,490
you're not doing<font color="#CCCCCC"> it there's actually</font>

443
00:15:31,450 --> 00:15:35,110
<font color="#E5E5E5">many</font><font color="#CCCCCC"> different types of static analysis</font>

444
00:15:33,490 --> 00:15:37,990
in<font color="#CCCCCC"> terms of how complex it is and and</font>

445
00:15:35,110 --> 00:15:39,670
how<font color="#E5E5E5"> much knowledge essentially it</font><font color="#CCCCCC"> has</font>

446
00:15:37,990 --> 00:15:41,110
over what it's analyzing<font color="#CCCCCC"> so just quickly</font>

447
00:15:39,670 --> 00:15:43,479
I wanted<font color="#E5E5E5"> to talk</font><font color="#CCCCCC"> about that</font><font color="#E5E5E5"> a little bit</font>

448
00:15:41,110 --> 00:15:45,430
<font color="#CCCCCC">so on this most simplistic end you have</font>

449
00:15:43,480 --> 00:15:47,710
grep<font color="#E5E5E5"> which is your analysis is very</font>

450
00:15:45,430 --> 00:15:48,819
localized<font color="#CCCCCC"> it's not syntax aware it</font>

451
00:15:47,710 --> 00:15:50,230
doesn't<font color="#E5E5E5"> sort of understand the</font>

452
00:15:48,820 --> 00:15:52,510
programming language it's looking at and

453
00:15:50,230 --> 00:15:54,850
you're looking with essentially reg<font color="#CCCCCC"> X's</font>

454
00:15:52,510 --> 00:15:56,560
or regular expressions<font color="#E5E5E5"> then when you</font>

455
00:15:54,850 --> 00:15:58,060
<font color="#E5E5E5">move with a little bit more complex you</font>

456
00:15:56,560 --> 00:16:00,760
<font color="#CCCCCC">have something</font><font color="#E5E5E5"> that's doing like lint or</font>

457
00:15:58,060 --> 00:16:02,170
abstract<font color="#E5E5E5"> syntax tree matching where you</font>

458
00:16:00,760 --> 00:16:04,600
are<font color="#E5E5E5"> some taxa where you have some</font>

459
00:16:02,170 --> 00:16:06,010
understanding<font color="#CCCCCC"> of</font><font color="#E5E5E5"> language semantics and</font>

460
00:16:04,600 --> 00:16:08,950
<font color="#E5E5E5">you can express rules using code</font>

461
00:16:06,010 --> 00:16:10,569
constructs<font color="#E5E5E5"> so for example using</font><font color="#CCCCCC"> ast</font>

462
00:16:08,950 --> 00:16:13,240
matching you could say you<font color="#CCCCCC"> know match</font>

463
00:16:10,570 --> 00:16:15,190
all conditionals<font color="#E5E5E5"> who one of the</font>

464
00:16:13,240 --> 00:16:17,050
predicates<font color="#E5E5E5"> has like arithmetic</font>

465
00:16:15,190 --> 00:16:18,030
<font color="#E5E5E5">multiplication in it or something</font><font color="#CCCCCC"> like</font>

466
00:16:17,050 --> 00:16:20,290
<font color="#CCCCCC">that</font><font color="#E5E5E5"> something</font><font color="#CCCCCC"> that would</font><font color="#E5E5E5"> be very</font>

467
00:16:18,030 --> 00:16:23,350
<font color="#E5E5E5">annoying</font><font color="#CCCCCC"> to build with grep and</font><font color="#E5E5E5"> it would</font>

468
00:16:20,290 --> 00:16:24,430
be like two lines<font color="#E5E5E5"> of monstrosity</font><font color="#CCCCCC"> and</font>

469
00:16:23,350 --> 00:16:26,530
then finally at the<font color="#E5E5E5"> other end you have</font>

470
00:16:24,430 --> 00:16:29,349
commercial static<font color="#E5E5E5"> analysis tools which</font>

471
00:16:26,530 --> 00:16:30,939
build a very detailed model of code<font color="#CCCCCC"> and</font>

472
00:16:29,350 --> 00:16:34,570
<font color="#E5E5E5">the rules you can write are very complex</font>

473
00:16:30,940 --> 00:16:37,030
that can<font color="#CCCCCC"> convey you know control or data</font>

474
00:16:34,570 --> 00:16:38,230
flow through the application so the

475
00:16:37,030 --> 00:16:40,390
reason I'm talking<font color="#E5E5E5"> about this and taking</font>

476
00:16:38,230 --> 00:16:42,250
<font color="#E5E5E5">time to</font><font color="#CCCCCC"> talk about it is a lot</font><font color="#E5E5E5"> of people</font>

477
00:16:40,390 --> 00:16:43,360
again<font color="#E5E5E5"> say like</font><font color="#CCCCCC"> oh static analysis is</font>

478
00:16:42,250 --> 00:16:46,900
<font color="#CCCCCC">blank it</font><font color="#E5E5E5"> terrible but there's actually</font>

479
00:16:43,360 --> 00:16:48,940
<font color="#E5E5E5">many wins you can get sort of earlier on</font>

480
00:16:46,900 --> 00:16:50,709
<font color="#CCCCCC">without necessarily going</font><font color="#E5E5E5"> all the</font><font color="#CCCCCC"> way to</font>

481
00:16:48,940 --> 00:16:52,090
the most complex stuff and and we'll

482
00:16:50,710 --> 00:16:55,030
talk about the complex<font color="#E5E5E5"> stuff as well</font>

483
00:16:52,090 --> 00:16:56,710
soon<font color="#E5E5E5"> so each of these have strengths in</font>

484
00:16:55,030 --> 00:16:59,740
context<font color="#E5E5E5"> in which they're</font><font color="#CCCCCC"> useful is sort</font>

485
00:16:56,710 --> 00:17:00,430
of the main takeaway for<font color="#E5E5E5"> this okay so</font>

486
00:16:59,740 --> 00:17:02,200
let's get back to it

487
00:17:00,430 --> 00:17:05,319
so what can<font color="#CCCCCC"> we run on developers</font>

488
00:17:02,200 --> 00:17:07,209
machines so if you're running<font color="#E5E5E5"> something</font>

489
00:17:05,319 --> 00:17:09,159
<font color="#E5E5E5">on developers machines this needs</font><font color="#CCCCCC"> to be</font>

490
00:17:07,209 --> 00:17:11,439
very fast<font color="#CCCCCC"> and have low to no</font><font color="#E5E5E5"> false</font>

491
00:17:09,160 --> 00:17:13,600
positives<font color="#E5E5E5"> otherwise people generally</font>

492
00:17:11,439 --> 00:17:14,890
aren't going to be<font color="#E5E5E5"> on board so some ways</font>

493
00:17:13,599 --> 00:17:16,750
you could do<font color="#E5E5E5"> this are by implementing</font>

494
00:17:14,890 --> 00:17:19,030
<font color="#CCCCCC">good hooks or maybe even as a part of</font>

495
00:17:16,750 --> 00:17:20,650
the test<font color="#E5E5E5"> suite</font><font color="#CCCCCC"> so these are some</font>

496
00:17:19,030 --> 00:17:23,500
<font color="#CCCCCC">examples based</font><font color="#E5E5E5"> on various companies I've</font>

497
00:17:20,650 --> 00:17:25,390
spoken with so one company rejects all

498
00:17:23,500 --> 00:17:27,240
database accesses<font color="#E5E5E5"> that don't used again</font>

499
00:17:25,390 --> 00:17:29,710
as mentioned<font color="#CCCCCC"> before</font><font color="#E5E5E5"> the approved API</font>

500
00:17:27,240 --> 00:17:31,360
another rejects all sequel<font color="#CCCCCC"> that looks</font>

501
00:17:29,710 --> 00:17:31,840
<font color="#E5E5E5">like</font><font color="#CCCCCC"> it's concatenated strings</font><font color="#E5E5E5"> again</font>

502
00:17:31,360 --> 00:17:33,279
this

503
00:17:31,840 --> 00:17:35,918
<font color="#E5E5E5">is sort of a</font><font color="#CCCCCC"> red</font><font color="#E5E5E5"> regular</font><font color="#CCCCCC"> expression</font>

504
00:17:33,279 --> 00:17:37,360
another says hey these<font color="#E5E5E5"> are some known</font>

505
00:17:35,919 --> 00:17:38,770
dangerous functions that depending on

506
00:17:37,360 --> 00:17:40,418
<font color="#CCCCCC">the code</font><font color="#E5E5E5"> base we just don't want them in</font>

507
00:17:38,770 --> 00:17:41,770
<font color="#E5E5E5">there at all for</font><font color="#CCCCCC"> example shell</font><font color="#E5E5E5"> exec</font><font color="#CCCCCC"> in</font>

508
00:17:40,419 --> 00:17:44,080
<font color="#CCCCCC">or</font><font color="#E5E5E5"> something like that</font>

509
00:17:41,770 --> 00:17:46,418
so one company in<font color="#E5E5E5"> particular uses</font><font color="#CCCCCC"> a</font>

510
00:17:44,080 --> 00:17:48,970
eslint<font color="#E5E5E5"> which is basically a linter for</font>

511
00:17:46,419 --> 00:17:51,309
<font color="#E5E5E5">JavaScript that checks</font><font color="#CCCCCC"> for any uses of</font>

512
00:17:48,970 --> 00:17:53,919
eval or<font color="#E5E5E5"> new function in a node.js</font>

513
00:17:51,309 --> 00:17:56,020
application so basically the test<font color="#E5E5E5"> suite</font>

514
00:17:53,919 --> 00:17:58,450
makes sure that<font color="#E5E5E5"> these common ways that</font>

515
00:17:56,020 --> 00:18:00,029
<font color="#CCCCCC">if they were used dangerously could</font>

516
00:17:58,450 --> 00:18:03,010
result in code<font color="#E5E5E5"> execution on the server</font>

517
00:18:00,029 --> 00:18:05,049
<font color="#CCCCCC">they</font><font color="#E5E5E5"> just block those very early</font><font color="#CCCCCC"> on in</font>

518
00:18:03,010 --> 00:18:06,520
the<font color="#E5E5E5"> process</font><font color="#CCCCCC"> and again</font><font color="#E5E5E5"> you could also</font>

519
00:18:05,049 --> 00:18:08,830
reject commits that<font color="#E5E5E5"> seem</font><font color="#CCCCCC"> like they're</font>

520
00:18:06,520 --> 00:18:10,679
adding secrets<font color="#E5E5E5"> like AWS or other API</font>

521
00:18:08,830 --> 00:18:12,668
<font color="#CCCCCC">keys or</font><font color="#E5E5E5"> credentials and things like that</font>

522
00:18:10,679 --> 00:18:14,409
<font color="#E5E5E5">and again what I wanted to point out</font>

523
00:18:12,669 --> 00:18:16,450
<font color="#E5E5E5">here is all of these are essentially</font>

524
00:18:14,409 --> 00:18:18,700
<font color="#E5E5E5">greps right but at the same time at</font>

525
00:18:16,450 --> 00:18:20,770
<font color="#CCCCCC">yields and my security wins</font><font color="#E5E5E5"> so if you</font>

526
00:18:18,700 --> 00:18:22,600
have a thousand developers committing

527
00:18:20,770 --> 00:18:25,000
<font color="#E5E5E5">once or twice a day</font><font color="#CCCCCC"> and you</font><font color="#E5E5E5"> have three</font>

528
00:18:22,600 --> 00:18:28,120
<font color="#E5E5E5">security engineers you can't really look</font>

529
00:18:25,000 --> 00:18:30,580
at all<font color="#CCCCCC"> of that at all but you could say</font>

530
00:18:28,120 --> 00:18:32,139
block the bad stuff<font color="#E5E5E5"> and we'll talk about</font>

531
00:18:30,580 --> 00:18:33,939
<font color="#E5E5E5">some</font><font color="#CCCCCC"> more nuance stuff in a second but</font>

532
00:18:32,140 --> 00:18:35,230
here are<font color="#CCCCCC"> some examples</font><font color="#E5E5E5"> there's many</font>

533
00:18:33,940 --> 00:18:38,919
<font color="#E5E5E5">other things</font><font color="#CCCCCC"> that if you</font><font color="#E5E5E5"> think</font><font color="#CCCCCC"> about it</font>

534
00:18:35,230 --> 00:18:42,880
<font color="#E5E5E5">probably</font><font color="#CCCCCC"> you</font><font color="#E5E5E5"> could do as well</font><font color="#CCCCCC"> okay so</font>

535
00:18:38,919 --> 00:18:44,710
<font color="#CCCCCC">let's talk about code hosting so here</font>

536
00:18:42,880 --> 00:18:47,409
<font color="#CCCCCC">the</font><font color="#E5E5E5"> developer has pushed something</font><font color="#CCCCCC"> into</font>

537
00:18:44,710 --> 00:18:49,390
say github<font color="#E5E5E5"> get lab bitbucket Jenkins</font>

538
00:18:47,409 --> 00:18:51,669
just<font color="#E5E5E5"> wherever</font><font color="#CCCCCC"> your hosting code</font><font color="#E5E5E5"> and this</font>

539
00:18:49,390 --> 00:18:53,320
could<font color="#E5E5E5"> be implemented in on receive hooks</font>

540
00:18:51,669 --> 00:18:53,620
or new branch creation or things like

541
00:18:53,320 --> 00:18:55,870
<font color="#E5E5E5">that</font>

542
00:18:53,620 --> 00:18:57,580
and we're<font color="#E5E5E5"> gonna talk</font><font color="#CCCCCC"> about four</font>

543
00:18:55,870 --> 00:18:59,110
different<font color="#CCCCCC"> things</font><font color="#E5E5E5"> you can do and</font><font color="#CCCCCC"> there's</font>

544
00:18:57,580 --> 00:19:01,330
<font color="#E5E5E5">many others that you could do but we're</font>

545
00:18:59,110 --> 00:19:03,070
<font color="#CCCCCC">gonna</font><font color="#E5E5E5"> focus on these so blocking</font><font color="#CCCCCC"> banned</font>

546
00:19:01,330 --> 00:19:04,539
or dangerous functions<font color="#E5E5E5"> detecting</font>

547
00:19:03,070 --> 00:19:07,000
security relevant code additions

548
00:19:04,539 --> 00:19:10,289
alerting on<font color="#E5E5E5"> sensitive file changes or</font>

549
00:19:07,000 --> 00:19:10,289
looking<font color="#E5E5E5"> for</font><font color="#CCCCCC"> out-of-date dependencies</font>

550
00:19:13,140 --> 00:19:16,990
let's see so this<font color="#CCCCCC"> is</font><font color="#E5E5E5"> essentially the</font>

551
00:19:15,880 --> 00:19:19,600
same checks<font color="#E5E5E5"> that we just talked about</font>

552
00:19:16,990 --> 00:19:21,510
<font color="#CCCCCC">running on developers machines you</font>

553
00:19:19,600 --> 00:19:24,129
<font color="#E5E5E5">probably also want</font><font color="#CCCCCC"> to implement it in</font>

554
00:19:21,510 --> 00:19:26,950
the code hosting as well<font color="#E5E5E5"> because the</font>

555
00:19:24,130 --> 00:19:28,419
developer may not have their<font color="#E5E5E5"> laptop set</font>

556
00:19:26,950 --> 00:19:29,919
up so that<font color="#E5E5E5"> it's properly enforced and</font>

557
00:19:28,419 --> 00:19:31,929
basically<font color="#E5E5E5"> you want something that</font><font color="#CCCCCC"> is</font>

558
00:19:29,919 --> 00:19:33,490
<font color="#CCCCCC">definitely going</font><font color="#E5E5E5"> to check it</font><font color="#CCCCCC"> and you're</font>

559
00:19:31,929 --> 00:19:35,169
<font color="#E5E5E5">not relying on every single person being</font>

560
00:19:33,490 --> 00:19:37,000
<font color="#E5E5E5">properly configured for those checks to</font>

561
00:19:35,169 --> 00:19:38,470
happen but<font color="#E5E5E5"> to give you one specific</font>

562
00:19:37,000 --> 00:19:41,890
<font color="#CCCCCC">example of something</font><font color="#E5E5E5"> that I think</font><font color="#CCCCCC"> is</font>

563
00:19:38,470 --> 00:19:43,750
neat<font color="#CCCCCC"> one company is using this idea</font><font color="#E5E5E5"> to</font>

564
00:19:41,890 --> 00:19:46,180
gradually improve<font color="#E5E5E5"> code quality over</font><font color="#CCCCCC"> time</font>

565
00:19:43,750 --> 00:19:48,550
by blocking new<font color="#E5E5E5"> editions of an type</font>

566
00:19:46,180 --> 00:19:50,020
<font color="#CCCCCC">like hey we don't</font><font color="#E5E5E5"> want</font><font color="#CCCCCC"> this anymore</font><font color="#E5E5E5"> we</font>

567
00:19:48,550 --> 00:19:51,250
have<font color="#CCCCCC"> a bunch of it</font><font color="#E5E5E5"> already but let's</font>

568
00:19:50,020 --> 00:19:52,570
block it<font color="#CCCCCC"> from getting</font><font color="#E5E5E5"> worse</font>

569
00:19:51,250 --> 00:19:54,190
so specifically<font color="#E5E5E5"> they're trying to</font>

570
00:19:52,570 --> 00:19:56,350
<font color="#E5E5E5">migrate</font><font color="#CCCCCC"> to a strict content security</font>

571
00:19:54,190 --> 00:19:59,290
policy<font color="#CCCCCC"> but they have inline JavaScript</font>

572
00:19:56,350 --> 00:20:01,360
everywhere<font color="#E5E5E5"> right so you know they could</font>

573
00:19:59,290 --> 00:20:02,560
start sending a<font color="#E5E5E5"> bunch of</font><font color="#CCCCCC"> pull requests</font>

574
00:20:01,360 --> 00:20:04,149
in like fixing<font color="#E5E5E5"> a bunch of them manually</font>

575
00:20:02,560 --> 00:20:05,169
<font color="#E5E5E5">but at the same time there's more</font>

576
00:20:04,150 --> 00:20:06,400
developers than there are security

577
00:20:05,170 --> 00:20:08,500
<font color="#E5E5E5">people so they're probably</font><font color="#CCCCCC"> gonna push</font>

578
00:20:06,400 --> 00:20:11,260
more<font color="#CCCCCC"> of it than they're fixing so the</font>

579
00:20:08,500 --> 00:20:12,940
idea is<font color="#CCCCCC"> okay let's</font><font color="#E5E5E5"> block new editions of</font>

580
00:20:11,260 --> 00:20:14,800
inline<font color="#E5E5E5"> JavaScript and then once we've</font>

581
00:20:12,940 --> 00:20:17,170
<font color="#CCCCCC">done that we can</font><font color="#E5E5E5"> gradually refactor</font>

582
00:20:14,800 --> 00:20:18,730
existing code<font color="#E5E5E5"> such that we're removing</font>

583
00:20:17,170 --> 00:20:22,020
what's there and<font color="#CCCCCC"> then gradually we can</font>

584
00:20:18,730 --> 00:20:22,020
have a stronger<font color="#E5E5E5"> content security policy</font>

585
00:20:23,070 --> 00:20:29,800
<font color="#E5E5E5">okay so there's</font><font color="#CCCCCC"> probably parts</font><font color="#E5E5E5"> of many</font>

586
00:20:26,560 --> 00:20:33,129
code bases where oh no that's the next

587
00:20:29,800 --> 00:20:34,510
<font color="#E5E5E5">one</font><font color="#CCCCCC"> and</font><font color="#E5E5E5"> so</font><font color="#CCCCCC"> oftentimes</font><font color="#E5E5E5"> there's</font>

588
00:20:33,130 --> 00:20:36,220
interesting primitives<font color="#CCCCCC"> that you might</font>

589
00:20:34,510 --> 00:20:38,590
not necessarily want<font color="#E5E5E5"> to block out right</font>

590
00:20:36,220 --> 00:20:40,630
but you might want to start<font color="#E5E5E5"> a</font>

591
00:20:38,590 --> 00:20:42,820
conversation with<font color="#CCCCCC"> a</font><font color="#E5E5E5"> security team so for</font>

592
00:20:40,630 --> 00:20:45,460
example if someone<font color="#E5E5E5"> pushes new code where</font>

593
00:20:42,820 --> 00:20:47,439
they're adding some crypto related

594
00:20:45,460 --> 00:20:49,390
things like hashing encryption or<font color="#E5E5E5"> file</font>

595
00:20:47,440 --> 00:20:51,070
system<font color="#CCCCCC"> operations things like that</font>

596
00:20:49,390 --> 00:20:52,930
maybe you<font color="#E5E5E5"> don't want to block</font><font color="#CCCCCC"> it</font><font color="#E5E5E5"> but you</font>

597
00:20:51,070 --> 00:20:55,240
want<font color="#CCCCCC"> to start a</font><font color="#E5E5E5"> conversation saying like</font>

598
00:20:52,930 --> 00:20:56,830
hey I see you're<font color="#E5E5E5"> doing this like do you</font>

599
00:20:55,240 --> 00:20:59,050
need<font color="#E5E5E5"> to be doing that or what</font><font color="#CCCCCC"> exactly is</font>

600
00:20:56,830 --> 00:21:01,270
the context you're doing here<font color="#CCCCCC"> and what's</font>

601
00:20:59,050 --> 00:21:02,889
<font color="#E5E5E5">nice about this is you're not a gateway</font>

602
00:21:01,270 --> 00:21:04,600
you're not<font color="#CCCCCC"> blocking people from push new</font>

603
00:21:02,890 --> 00:21:06,880
code but you<font color="#E5E5E5"> are automatically getting</font>

604
00:21:04,600 --> 00:21:08,110
<font color="#E5E5E5">some context</font><font color="#CCCCCC"> about how applications</font><font color="#E5E5E5"> are</font>

605
00:21:06,880 --> 00:21:10,600
evolving and<font color="#E5E5E5"> maybe where some code</font>

606
00:21:08,110 --> 00:21:13,179
hotspots are you can also correct common

607
00:21:10,600 --> 00:21:15,429
area errors<font color="#CCCCCC"> early so maybe someone is</font>

608
00:21:13,180 --> 00:21:16,480
using a hashing function like a<font color="#CCCCCC"> be crypt</font>

609
00:21:15,430 --> 00:21:18,550
or something like that<font color="#E5E5E5"> they</font><font color="#CCCCCC"> are</font><font color="#E5E5E5"> echo</font>

610
00:21:16,480 --> 00:21:20,500
this<font color="#E5E5E5"> is</font><font color="#CCCCCC"> a safe hashing function but</font>

611
00:21:18,550 --> 00:21:22,419
because you started a<font color="#E5E5E5"> dialogue</font><font color="#CCCCCC"> you might</font>

612
00:21:20,500 --> 00:21:23,950
find out oh this developer wanted<font color="#E5E5E5"> to</font>

613
00:21:22,420 --> 00:21:27,640
should probably encrypt the data<font color="#E5E5E5"> rather</font>

614
00:21:23,950 --> 00:21:30,040
than hashing so<font color="#E5E5E5"> one specific</font><font color="#CCCCCC"> example is</font>

615
00:21:27,640 --> 00:21:31,300
a<font color="#E5E5E5"> company has set up some</font><font color="#CCCCCC"> hooks so that</font>

616
00:21:30,040 --> 00:21:33,730
when people<font color="#E5E5E5"> push code it checks for</font><font color="#CCCCCC"> a</font>

617
00:21:31,300 --> 00:21:36,820
couple<font color="#E5E5E5"> of these sort of interesting</font>

618
00:21:33,730 --> 00:21:38,380
functions<font color="#CCCCCC"> and then sends a slack message</font>

619
00:21:36,820 --> 00:21:40,060
to a private channel<font color="#E5E5E5"> that the security</font>

620
00:21:38,380 --> 00:21:42,310
team is in so that they can say you know

621
00:21:40,060 --> 00:21:44,350
this developer in this repo in this

622
00:21:42,310 --> 00:21:46,330
commit pushed code that contains<font color="#E5E5E5"> these</font>

623
00:21:44,350 --> 00:21:48,580
interesting functions and the security

624
00:21:46,330 --> 00:21:50,230
<font color="#E5E5E5">team at their leisure can sort of review</font>

625
00:21:48,580 --> 00:21:52,210
these and<font color="#E5E5E5"> start conversations</font><font color="#CCCCCC"> with a</font>

626
00:21:50,230 --> 00:21:53,920
<font color="#E5E5E5">developer again they're getting insight</font>

627
00:21:52,210 --> 00:21:57,340
into what's happening in<font color="#E5E5E5"> many code bases</font>

628
00:21:53,920 --> 00:21:59,580
<font color="#CCCCCC">without much sort of</font><font color="#E5E5E5"> hands-on manual</font>

629
00:21:57,340 --> 00:21:59,580
time

630
00:22:00,100 --> 00:22:05,209
<font color="#CCCCCC">all right so in many code bases there</font>

631
00:22:03,560 --> 00:22:06,770
are specific files<font color="#E5E5E5"> that are very</font>

632
00:22:05,210 --> 00:22:08,900
security relevant that<font color="#E5E5E5"> you</font><font color="#CCCCCC"> probably</font><font color="#E5E5E5"> want</font>

633
00:22:06,770 --> 00:22:10,820
to know when they're<font color="#E5E5E5"> changing</font><font color="#CCCCCC"> so for</font>

634
00:22:08,900 --> 00:22:13,190
<font color="#E5E5E5">example code that is implementing</font>

635
00:22:10,820 --> 00:22:14,899
authorization or authentication<font color="#CCCCCC"> session</font>

636
00:22:13,190 --> 00:22:17,210
<font color="#E5E5E5">management encryption stuff like that</font>

637
00:22:14,900 --> 00:22:18,890
things that<font color="#CCCCCC"> basically you think if</font>

638
00:22:17,210 --> 00:22:20,870
<font color="#CCCCCC">someone touches</font><font color="#E5E5E5"> this I probably want to</font>

639
00:22:18,890 --> 00:22:22,940
<font color="#E5E5E5">know and this is actually</font><font color="#CCCCCC"> pretty simple</font>

640
00:22:20,870 --> 00:22:24,860
<font color="#E5E5E5">to implement so if you just simply hash</font>

641
00:22:22,940 --> 00:22:26,690
the files and<font color="#E5E5E5"> then alert when there are</font>

642
00:22:24,860 --> 00:22:27,919
hash changes you can<font color="#E5E5E5"> implement a similar</font>

643
00:22:26,690 --> 00:22:29,750
<font color="#E5E5E5">thing that we just</font><font color="#CCCCCC"> mentioned in the</font><font color="#E5E5E5"> last</font>

644
00:22:27,920 --> 00:22:31,910
slide where<font color="#CCCCCC"> you know</font><font color="#E5E5E5"> okay these are the</font>

645
00:22:29,750 --> 00:22:34,130
files<font color="#E5E5E5"> I care about if they change maybe</font>

646
00:22:31,910 --> 00:22:36,650
send me a slack message or email<font color="#E5E5E5"> me or</font>

647
00:22:34,130 --> 00:22:38,540
anything like<font color="#CCCCCC"> that</font><font color="#E5E5E5"> if you wanted to take</font>

648
00:22:36,650 --> 00:22:40,790
this a little<font color="#E5E5E5"> bit further</font><font color="#CCCCCC"> you could say</font>

649
00:22:38,540 --> 00:22:42,649
<font color="#E5E5E5">maybe we only allow the security team or</font>

650
00:22:40,790 --> 00:22:44,450
specific<font color="#E5E5E5"> senior developers to modify</font>

651
00:22:42,650 --> 00:22:47,810
critical files and you<font color="#E5E5E5"> know let</font><font color="#CCCCCC"> me know</font>

652
00:22:44,450 --> 00:22:49,520
if<font color="#E5E5E5"> anyone else does</font><font color="#CCCCCC"> or maybe you can</font>

653
00:22:47,810 --> 00:22:51,080
<font color="#E5E5E5">build a model of which developers work</font>

654
00:22:49,520 --> 00:22:52,940
on which parts of<font color="#E5E5E5"> the code bases or even</font>

655
00:22:51,080 --> 00:22:54,800
which code bases and you could say okay

656
00:22:52,940 --> 00:22:56,600
<font color="#E5E5E5">Joe normally works on this and Alice</font>

657
00:22:54,800 --> 00:22:58,460
normally works on this but now we see

658
00:22:56,600 --> 00:22:59,620
Joe touching some totally<font color="#E5E5E5"> other part of</font>

659
00:22:58,460 --> 00:23:01,670
the code<font color="#CCCCCC"> that he's never touched</font><font color="#E5E5E5"> before</font>

660
00:22:59,620 --> 00:23:04,459
<font color="#CCCCCC">and maybe we want</font><font color="#E5E5E5"> to pay more</font><font color="#CCCCCC"> attention</font>

661
00:23:01,670 --> 00:23:07,100
there because he has less context and

662
00:23:04,460 --> 00:23:08,270
domain<font color="#E5E5E5"> knowledge in that software repo</font>

663
00:23:07,100 --> 00:23:09,830
so maybe he's more likely to<font color="#E5E5E5"> introduce</font>

664
00:23:08,270 --> 00:23:12,800
<font color="#E5E5E5">bugs because he doesn't normally add it</font>

665
00:23:09,830 --> 00:23:15,169
there and then<font color="#E5E5E5"> square in the blog</font><font color="#CCCCCC"> post I</font>

666
00:23:12,800 --> 00:23:17,480
mentioned before<font color="#CCCCCC"> talks</font><font color="#E5E5E5"> about they also</font>

667
00:23:15,170 --> 00:23:18,500
<font color="#E5E5E5">leverage code</font><font color="#CCCCCC"> churn in code quality</font>

668
00:23:17,480 --> 00:23:20,330
metrics for where to focus their

669
00:23:18,500 --> 00:23:26,060
<font color="#E5E5E5">engineering time which I thought wasn't</font>

670
00:23:20,330 --> 00:23:28,360
<font color="#CCCCCC">a</font><font color="#E5E5E5"> smart idea as well</font><font color="#CCCCCC"> all right</font><font color="#E5E5E5"> so lastly</font>

671
00:23:26,060 --> 00:23:31,070
you can keep<font color="#E5E5E5"> track</font><font color="#CCCCCC"> of dependencies</font><font color="#E5E5E5"> so</font>

672
00:23:28,360 --> 00:23:32,719
<font color="#CCCCCC">and generally it's useful to</font><font color="#E5E5E5"> keep tries</font>

673
00:23:31,070 --> 00:23:34,220
to keep track of<font color="#CCCCCC"> you</font><font color="#E5E5E5"> know what are all</font>

674
00:23:32,720 --> 00:23:35,450
the<font color="#E5E5E5"> dependencies we're using are they</font>

675
00:23:34,220 --> 00:23:37,910
<font color="#CCCCCC">out-of-date</font><font color="#E5E5E5"> do they have any known</font>

676
00:23:35,450 --> 00:23:40,460
vulnerabilities if they do how severe

677
00:23:37,910 --> 00:23:42,290
are<font color="#E5E5E5"> they and ideally as an organization</font>

678
00:23:40,460 --> 00:23:44,090
<font color="#CCCCCC">you set a policy for you know how</font>

679
00:23:42,290 --> 00:23:46,010
quickly do we<font color="#E5E5E5"> update</font><font color="#CCCCCC"> something based on</font>

680
00:23:44,090 --> 00:23:49,010
how out-of-date it is by time or

681
00:23:46,010 --> 00:23:50,960
<font color="#E5E5E5">severity and things like</font><font color="#CCCCCC"> that so one</font>

682
00:23:49,010 --> 00:23:53,990
company has a pretty interesting process

683
00:23:50,960 --> 00:23:57,530
<font color="#E5E5E5">where essentially</font><font color="#CCCCCC"> when any developer</font>

684
00:23:53,990 --> 00:23:58,910
<font color="#E5E5E5">adds a new dependency to the repo they</font>

685
00:23:57,530 --> 00:24:01,010
automatically calculate a bunch of

686
00:23:58,910 --> 00:24:03,590
<font color="#CCCCCC">metrics about</font><font color="#E5E5E5"> it generally to determine</font>

687
00:24:01,010 --> 00:24:06,650
how<font color="#E5E5E5"> trustworthy is this new addition</font><font color="#CCCCCC"> so</font>

688
00:24:03,590 --> 00:24:08,720
specifically when someone adds a new

689
00:24:06,650 --> 00:24:10,030
repo they so for example if this was<font color="#E5E5E5"> say</font>

690
00:24:08,720 --> 00:24:11,929
<font color="#CCCCCC">a</font><font color="#E5E5E5"> nodejs project they would</font>

691
00:24:10,030 --> 00:24:13,580
automatically hit the<font color="#E5E5E5"> NPM</font>

692
00:24:11,929 --> 00:24:15,049
<font color="#E5E5E5">registry and say okay how many downloads</font>

693
00:24:13,580 --> 00:24:17,809
has this had in the last<font color="#CCCCCC"> month</font>

694
00:24:15,049 --> 00:24:20,600
what about<font color="#E5E5E5"> lifetime downloads</font><font color="#CCCCCC"> because if</font>

695
00:24:17,809 --> 00:24:21,860
it has say ten downloads ever<font color="#CCCCCC"> maybe not</font>

696
00:24:20,600 --> 00:24:23,748
<font color="#CCCCCC">very trustworthy well if it's had</font>

697
00:24:21,860 --> 00:24:25,399
hundreds<font color="#E5E5E5"> of thousands</font><font color="#CCCCCC"> it's more likely</font>

698
00:24:23,749 --> 00:24:28,009
<font color="#CCCCCC">to be trustworthy it might be</font><font color="#E5E5E5"> malicious</font>

699
00:24:25,399 --> 00:24:29,330
but it's perhaps<font color="#E5E5E5"> less likely and you can</font>

700
00:24:28,009 --> 00:24:30,980
also apply<font color="#CCCCCC"> some of the similar</font>

701
00:24:29,330 --> 00:24:32,178
techniques about<font color="#E5E5E5"> you have lists of</font>

702
00:24:30,980 --> 00:24:34,610
dangerous functions then you already

703
00:24:32,179 --> 00:24:36,289
have say greps or other<font color="#E5E5E5"> tooling to find</font>

704
00:24:34,610 --> 00:24:37,969
them you could also run that on all your

705
00:24:36,289 --> 00:24:40,309
dependencies<font color="#CCCCCC"> to</font><font color="#E5E5E5"> say hey you</font><font color="#CCCCCC"> just added a</font>

706
00:24:37,970 --> 00:24:42,470
new<font color="#CCCCCC"> library and it's like shale exacting</font>

707
00:24:40,309 --> 00:24:43,850
stuff everywhere so maybe let's look at

708
00:24:42,470 --> 00:24:45,590
<font color="#E5E5E5">that and see you know are you adding</font>

709
00:24:43,850 --> 00:24:48,678
something<font color="#E5E5E5"> that likely has</font><font color="#CCCCCC"> a very</font>

710
00:24:45,590 --> 00:24:50,779
impactful<font color="#E5E5E5"> attack surface so with a</font>

711
00:24:48,679 --> 00:24:52,759
number<font color="#E5E5E5"> of these things</font><font color="#CCCCCC"> it's basically</font>

712
00:24:50,779 --> 00:24:54,529
been very useful<font color="#E5E5E5"> to say</font><font color="#CCCCCC"> oh</font><font color="#E5E5E5"> given new</font>

713
00:24:52,759 --> 00:24:57,080
code let's do something let's run some

714
00:24:54,529 --> 00:24:59,240
<font color="#E5E5E5">arbitrary check and because this is a</font>

715
00:24:57,080 --> 00:25:01,399
<font color="#E5E5E5">common desire there's at least two tools</font>

716
00:24:59,240 --> 00:25:02,929
probably<font color="#E5E5E5"> more that I'm aware of</font><font color="#CCCCCC"> that</font>

717
00:25:01,399 --> 00:25:04,639
<font color="#E5E5E5">essentially let you do this fairly</font>

718
00:25:02,929 --> 00:25:07,490
<font color="#E5E5E5">easily so you can hook it up</font><font color="#CCCCCC"> to</font>

719
00:25:04,639 --> 00:25:10,459
<font color="#CCCCCC">different get repos</font><font color="#E5E5E5"> and say hey whenever</font>

720
00:25:07,490 --> 00:25:12,080
someone pushes a new branch you know<font color="#E5E5E5"> run</font>

721
00:25:10,460 --> 00:25:21,529
this check or do this dynamic analysis

722
00:25:12,080 --> 00:25:23,389
check<font color="#CCCCCC"> or things like that let's see</font><font color="#E5E5E5"> so a</font>

723
00:25:21,529 --> 00:25:25,309
question<font color="#E5E5E5"> I</font><font color="#CCCCCC"> get asked a lot is should</font><font color="#E5E5E5"> I</font>

724
00:25:23,389 --> 00:25:27,740
buy a commercial<font color="#E5E5E5"> heavyweight static</font>

725
00:25:25,309 --> 00:25:29,600
<font color="#E5E5E5">analysis tool and these are again</font>

726
00:25:27,740 --> 00:25:31,970
generally ran daily or weekly because

727
00:25:29,600 --> 00:25:34,490
<font color="#E5E5E5">they take hours to</font><font color="#CCCCCC"> days on complex code</font>

728
00:25:31,970 --> 00:25:36,320
bases<font color="#E5E5E5"> and I</font><font color="#CCCCCC"> don't</font><font color="#E5E5E5"> think there's a simple</font>

729
00:25:34,490 --> 00:25:39,679
<font color="#E5E5E5">answer</font><font color="#CCCCCC"> I I think that</font><font color="#E5E5E5"> it can be helpful</font>

730
00:25:36,320 --> 00:25:42,049
in many cases and in others<font color="#E5E5E5"> less so</font>

731
00:25:39,679 --> 00:25:44,330
so I'm hoping to provide at least<font color="#E5E5E5"> a very</font>

732
00:25:42,049 --> 00:25:45,259
small<font color="#E5E5E5"> glimpse into maybe some factors</font>

733
00:25:44,330 --> 00:25:47,360
<font color="#CCCCCC">that you should</font><font color="#E5E5E5"> consider</font><font color="#CCCCCC"> when making</font>

734
00:25:45,259 --> 00:25:48,889
<font color="#E5E5E5">that decision but</font><font color="#CCCCCC"> ultimately it's up</font><font color="#E5E5E5"> to</font>

735
00:25:47,360 --> 00:25:50,809
you know what<font color="#E5E5E5"> technologies is your</font>

736
00:25:48,889 --> 00:25:52,100
company use what's the development

737
00:25:50,809 --> 00:25:53,840
<font color="#E5E5E5">processes like what's the culture like</font>

738
00:25:52,100 --> 00:25:55,879
and so forth

739
00:25:53,840 --> 00:25:57,470
so for<font color="#E5E5E5"> example something you may want to</font>

740
00:25:55,879 --> 00:25:59,449
ask yourself<font color="#E5E5E5"> is do we</font><font color="#CCCCCC"> have a lot of</font>

741
00:25:57,470 --> 00:26:01,970
<font color="#E5E5E5">large legacy code bases that haven't</font>

742
00:25:59,450 --> 00:26:03,470
been thoroughly<font color="#E5E5E5"> vetted</font><font color="#CCCCCC"> if you do then</font>

743
00:26:01,970 --> 00:26:05,450
perhaps<font color="#E5E5E5"> something</font><font color="#CCCCCC"> that can give you</font>

744
00:26:03,470 --> 00:26:07,429
quick high-level coverage over a lot<font color="#E5E5E5"> of</font>

745
00:26:05,450 --> 00:26:11,179
things may be useful<font color="#CCCCCC"> is a lot of your</font>

746
00:26:07,429 --> 00:26:12,590
code in C<font color="#CCCCCC"> or C++ and Java I think in my</font>

747
00:26:11,179 --> 00:26:14,990
opinion static<font color="#E5E5E5"> and also tools probably</font>

748
00:26:12,590 --> 00:26:17,600
do a bit better<font color="#E5E5E5"> job on these statically</font>

749
00:26:14,990 --> 00:26:20,210
typed languages then say Python Ruby and

750
00:26:17,600 --> 00:26:22,070
JavaScript which dynamic languages are

751
00:26:20,210 --> 00:26:23,809
just fundamentally<font color="#CCCCCC"> very hard for static</font>

752
00:26:22,070 --> 00:26:25,009
analysis and<font color="#E5E5E5"> there's reasons I'm</font><font color="#CCCCCC"> not</font>

753
00:26:23,809 --> 00:26:25,730
going to<font color="#E5E5E5"> talk about but feel free to</font>

754
00:26:25,009 --> 00:26:28,430
chat

755
00:26:25,730 --> 00:26:30,950
me later<font color="#E5E5E5"> about</font><font color="#CCCCCC"> it you know how mature is</font>

756
00:26:28,430 --> 00:26:32,480
<font color="#CCCCCC">your security program</font><font color="#E5E5E5"> do you have a very</font>

757
00:26:30,950 --> 00:26:34,610
well<font color="#CCCCCC"> vetted well-funded group</font><font color="#E5E5E5"> that's</font>

758
00:26:32,480 --> 00:26:36,320
<font color="#E5E5E5">been doing great work</font><font color="#CCCCCC"> for</font><font color="#E5E5E5"> years or you</font>

759
00:26:34,610 --> 00:26:38,469
know are<font color="#E5E5E5"> you</font><font color="#CCCCCC"> the</font><font color="#E5E5E5"> first person then if so</font>

760
00:26:36,320 --> 00:26:41,120
<font color="#E5E5E5">maybe getting some extra help is nice</font>

761
00:26:38,470 --> 00:26:43,550
another challenge<font color="#E5E5E5"> many companies have is</font>

762
00:26:41,120 --> 00:26:45,560
if you use a lot<font color="#CCCCCC"> of custom frameworks</font>

763
00:26:43,550 --> 00:26:47,840
that<font color="#CCCCCC"> are not popular or that are just</font>

764
00:26:45,560 --> 00:26:50,270
<font color="#E5E5E5">only in-house</font><font color="#CCCCCC"> oftentimes they have</font><font color="#E5E5E5"> a</font>

765
00:26:47,840 --> 00:26:51,800
non-standard control flow so if it's<font color="#E5E5E5"> a a</font>

766
00:26:50,270 --> 00:26:54,230
custom web app framework<font color="#CCCCCC"> how do you</font>

767
00:26:51,800 --> 00:26:56,090
define routes and how does<font color="#E5E5E5"> control sort</font>

768
00:26:54,230 --> 00:26:58,550
of flow through<font color="#E5E5E5"> the program so if you're</font>

769
00:26:56,090 --> 00:27:00,379
<font color="#E5E5E5">doing non-standard things you will</font>

770
00:26:58,550 --> 00:27:02,120
essentially need to teach the tool how

771
00:27:00,380 --> 00:27:06,050
execution flows through<font color="#E5E5E5"> your program in</font>

772
00:27:02,120 --> 00:27:07,939
order to get useful<font color="#E5E5E5"> results and then in</font>

773
00:27:06,050 --> 00:27:10,760
many cases what this all comes<font color="#CCCCCC"> down</font><font color="#E5E5E5"> to</font>

774
00:27:07,940 --> 00:27:12,680
<font color="#E5E5E5">is are you willing to invest probably</font>

775
00:27:10,760 --> 00:27:14,990
months<font color="#E5E5E5"> of security engineer time</font><font color="#CCCCCC"> on the</font>

776
00:27:12,680 --> 00:27:17,360
<font color="#E5E5E5">rollout</font><font color="#CCCCCC"> in terms of adding it to a new</font>

777
00:27:14,990 --> 00:27:19,460
<font color="#E5E5E5">codebase</font><font color="#CCCCCC"> whitelisting all the false</font>

778
00:27:17,360 --> 00:27:21,469
positives<font color="#E5E5E5"> tuning it adding custom rules</font>

779
00:27:19,460 --> 00:27:23,420
and things like<font color="#E5E5E5"> that so if you want</font><font color="#CCCCCC"> to</font>

780
00:27:21,470 --> 00:27:26,270
<font color="#E5E5E5">just run it once and then forget it</font>

781
00:27:23,420 --> 00:27:30,380
this may not be<font color="#E5E5E5"> the</font><font color="#CCCCCC"> best approach</font><font color="#E5E5E5"> at</font>

782
00:27:26,270 --> 00:27:32,389
<font color="#E5E5E5">least based on what I've</font><font color="#CCCCCC"> seen</font><font color="#E5E5E5"> so just a</font>

783
00:27:30,380 --> 00:27:34,610
<font color="#CCCCCC">little</font><font color="#E5E5E5"> bit more</font><font color="#CCCCCC"> I would encourage you</font>

784
00:27:32,390 --> 00:27:35,960
<font color="#E5E5E5">and again I'm not</font><font color="#CCCCCC"> saying you should or</font>

785
00:27:34,610 --> 00:27:37,760
<font color="#CCCCCC">you</font><font color="#E5E5E5"> shouldn't buy it because I think it</font>

786
00:27:35,960 --> 00:27:39,380
<font color="#E5E5E5">depends on the organization</font><font color="#CCCCCC"> but I would</font>

787
00:27:37,760 --> 00:27:40,910
encourage<font color="#E5E5E5"> you to calculate</font><font color="#CCCCCC"> the ROI in</font>

788
00:27:39,380 --> 00:27:42,620
terms of you know<font color="#E5E5E5"> how much security</font>

789
00:27:40,910 --> 00:27:44,450
<font color="#E5E5E5">engineer time is gonna take to comb</font>

790
00:27:42,620 --> 00:27:47,840
through<font color="#CCCCCC"> the</font><font color="#E5E5E5"> results versus how many bugs</font>

791
00:27:44,450 --> 00:27:49,400
<font color="#E5E5E5">of what severity do we find if you find</font>

792
00:27:47,840 --> 00:27:51,080
that<font color="#E5E5E5"> it takes you know weeks and weeks</font>

793
00:27:49,400 --> 00:27:53,390
<font color="#E5E5E5">of security engineer time to find</font>

794
00:27:51,080 --> 00:27:55,189
mediocre bugs<font color="#E5E5E5"> then probably you should</font>

795
00:27:53,390 --> 00:27:57,680
just have them do manual pen test or

796
00:27:55,190 --> 00:28:00,560
maybe build your own<font color="#E5E5E5"> tools or just hire</font>

797
00:27:57,680 --> 00:28:02,930
pen testers or things like<font color="#E5E5E5"> that</font><font color="#CCCCCC"> you know</font>

798
00:28:00,560 --> 00:28:04,790
is it<font color="#E5E5E5"> going to be a large upfront time</font>

799
00:28:02,930 --> 00:28:07,040
investment<font color="#E5E5E5"> but maybe low recurring time</font>

800
00:28:04,790 --> 00:28:09,770
cost or is it gonna be continuously high

801
00:28:07,040 --> 00:28:11,180
time cost<font color="#E5E5E5"> because those you know it</font>

802
00:28:09,770 --> 00:28:13,280
<font color="#CCCCCC">isn't just the sticker price of the tool</font>

803
00:28:11,180 --> 00:28:14,930
right it's it<font color="#CCCCCC"> takes maybe half</font><font color="#E5E5E5"> of a head</font>

804
00:28:13,280 --> 00:28:16,280
<font color="#E5E5E5">count</font><font color="#CCCCCC"> for a whole year and we pay them X</font>

805
00:28:14,930 --> 00:28:17,960
amount of dollar so really it's the

806
00:28:16,280 --> 00:28:21,710
amount<font color="#E5E5E5"> of the tool plus the security</font>

807
00:28:17,960 --> 00:28:23,000
engineer time right<font color="#CCCCCC"> and sometimes maybe</font>

808
00:28:21,710 --> 00:28:25,010
you'll find a bunch of<font color="#E5E5E5"> good bugs when</font>

809
00:28:23,000 --> 00:28:26,570
you initially<font color="#E5E5E5"> roll out but as you get</font>

810
00:28:25,010 --> 00:28:29,330
<font color="#E5E5E5">better as a development organization</font>

811
00:28:26,570 --> 00:28:30,710
over time<font color="#E5E5E5"> perhaps you're</font><font color="#CCCCCC"> just aware</font><font color="#E5E5E5"> of</font>

812
00:28:29,330 --> 00:28:32,210
the types of flaws<font color="#CCCCCC"> that your code bases</font>

813
00:28:30,710 --> 00:28:34,580
tend to have so then you have less<font color="#CCCCCC"> of</font>

814
00:28:32,210 --> 00:28:36,890
<font color="#E5E5E5">them anyway these</font><font color="#CCCCCC"> are just</font><font color="#E5E5E5"> things to</font>

815
00:28:34,580 --> 00:28:39,199
<font color="#CCCCCC">think about we</font><font color="#E5E5E5"> have seen a number of</font>

816
00:28:36,890 --> 00:28:39,559
<font color="#CCCCCC">companies have started either building</font>

817
00:28:39,200 --> 00:28:41,809
their<font color="#E5E5E5"> own</font>

818
00:28:39,559 --> 00:28:43,610
tools<font color="#E5E5E5"> or writing</font><font color="#CCCCCC"> custom rules</font><font color="#E5E5E5"> for the</font>

819
00:28:41,809 --> 00:28:49,370
existing<font color="#E5E5E5"> tools and we'll talk</font><font color="#CCCCCC"> about</font><font color="#E5E5E5"> that</font>

820
00:28:43,610 --> 00:28:54,590
<font color="#E5E5E5">more soon okay cool</font><font color="#CCCCCC"> so let's get into</font>

821
00:28:49,370 --> 00:28:56,689
some<font color="#CCCCCC"> testing QA environment stuff so</font>

822
00:28:54,590 --> 00:28:58,399
similar to<font color="#E5E5E5"> static analysis tools having</font>

823
00:28:56,690 --> 00:29:00,950
trouble on huge modern code bases

824
00:28:58,399 --> 00:29:02,899
<font color="#E5E5E5">similarly many commercial dynamic</font>

825
00:29:00,950 --> 00:29:06,159
analysis tools have trouble on very

826
00:29:02,899 --> 00:29:08,209
<font color="#CCCCCC">JavaScript heavy apps in apps with many</font>

827
00:29:06,159 --> 00:29:11,210
<font color="#CCCCCC">multi step flows and things like</font><font color="#E5E5E5"> that</font>

828
00:29:08,210 --> 00:29:13,850
<font color="#CCCCCC">and this talk from AB</font><font color="#E5E5E5"> SEC USA in 2017</font>

829
00:29:11,210 --> 00:29:15,590
<font color="#E5E5E5">which you can just find on YouTube</font><font color="#CCCCCC"> about</font>

830
00:29:13,850 --> 00:29:17,209
<font color="#CCCCCC">two-thirds of the</font><font color="#E5E5E5"> way in the talk he</font>

831
00:29:15,590 --> 00:29:19,389
does go<font color="#E5E5E5"> through I</font><font color="#CCCCCC"> think</font><font color="#E5E5E5"> 10 to</font><font color="#CCCCCC"> 15</font>

832
00:29:17,210 --> 00:29:21,710
<font color="#E5E5E5">different reasons why fundamentally</font>

833
00:29:19,389 --> 00:29:24,379
<font color="#E5E5E5">totally standalone dynamic analysis is</font>

834
00:29:21,710 --> 00:29:26,389
hard<font color="#E5E5E5"> so I would</font><font color="#CCCCCC"> encourage</font><font color="#E5E5E5"> you to look</font>

835
00:29:24,379 --> 00:29:27,709
<font color="#CCCCCC">there for a few</font><font color="#E5E5E5"> more details but there</font>

836
00:29:26,389 --> 00:29:29,809
are a<font color="#E5E5E5"> couple of approaches that do add</font>

837
00:29:27,710 --> 00:29:31,549
<font color="#CCCCCC">value in practice you can ensure a</font>

838
00:29:29,809 --> 00:29:33,289
security baseline for new services<font color="#E5E5E5"> or</font>

839
00:29:31,549 --> 00:29:34,580
existing ones<font color="#E5E5E5"> you can test</font><font color="#CCCCCC"> for</font>

840
00:29:33,289 --> 00:29:36,889
regressions<font color="#E5E5E5"> and then you can also do</font>

841
00:29:34,580 --> 00:29:39,769
some<font color="#E5E5E5"> automated fuzzing so let's talk</font>

842
00:29:36,889 --> 00:29:42,379
about<font color="#CCCCCC"> this all</font><font color="#E5E5E5"> right so maybe you don't</font>

843
00:29:39,769 --> 00:29:44,299
<font color="#CCCCCC">have a totally awesome dynamic analysis</font>

844
00:29:42,379 --> 00:29:47,389
tool that<font color="#CCCCCC"> can do everything and find</font>

845
00:29:44,299 --> 00:29:50,418
every<font color="#E5E5E5"> possible bug but maybe it can find</font>

846
00:29:47,389 --> 00:29:51,830
<font color="#E5E5E5">some nice</font><font color="#CCCCCC"> security</font><font color="#E5E5E5"> baselines so let's</font>

847
00:29:50,419 --> 00:29:54,320
say the security<font color="#E5E5E5"> team sets certain</font>

848
00:29:51,830 --> 00:29:56,779
<font color="#E5E5E5">security policies such as every service</font>

849
00:29:54,320 --> 00:29:59,149
must communicate<font color="#E5E5E5"> over TLS and they must</font>

850
00:29:56,779 --> 00:30:01,249
<font color="#CCCCCC">use strong ciphers</font><font color="#E5E5E5"> or every service</font>

851
00:29:59,149 --> 00:30:03,469
needs to have a strong<font color="#CCCCCC"> a very strict</font>

852
00:30:01,249 --> 00:30:05,299
content security policy<font color="#E5E5E5"> or all cookie</font>

853
00:30:03,470 --> 00:30:07,429
<font color="#CCCCCC">Flags</font><font color="#E5E5E5"> all cookies need to have the</font>

854
00:30:05,299 --> 00:30:10,090
secure an HTTP only<font color="#CCCCCC"> Flags</font><font color="#E5E5E5"> things like</font>

855
00:30:07,429 --> 00:30:12,320
that so none of those checks require

856
00:30:10,090 --> 00:30:13,939
significant domain knowledge<font color="#E5E5E5"> of the</font>

857
00:30:12,320 --> 00:30:16,580
<font color="#CCCCCC">application they're sort of pretty easy</font>

858
00:30:13,940 --> 00:30:19,249
<font color="#CCCCCC">high-level things to check</font><font color="#E5E5E5"> so we'll a</font>

859
00:30:16,580 --> 00:30:20,658
<font color="#CCCCCC">couple of companies Mozilla for example</font>

860
00:30:19,249 --> 00:30:23,269
for one<font color="#E5E5E5"> has a talk</font><font color="#CCCCCC"> that I've linked</font>

861
00:30:20,659 --> 00:30:25,129
there where<font color="#E5E5E5"> essentially any new service</font>

862
00:30:23,269 --> 00:30:26,720
that's rolled out at Mozilla<font color="#E5E5E5"> at least at</font>

863
00:30:25,129 --> 00:30:28,219
the<font color="#CCCCCC"> time of</font><font color="#E5E5E5"> this talk is essentially</font>

864
00:30:26,720 --> 00:30:30,559
automatically scanned for various

865
00:30:28,220 --> 00:30:32,869
various best practice things like<font color="#E5E5E5"> these</font>

866
00:30:30,559 --> 00:30:35,539
I think they<font color="#E5E5E5"> configure a sort of minimal</font>

867
00:30:32,869 --> 00:30:37,158
set attack proxy scan<font color="#E5E5E5"> that'll just auto</font>

868
00:30:35,539 --> 00:30:42,049
run on everything they deploy to find

869
00:30:37,159 --> 00:30:43,759
the low-hanging<font color="#E5E5E5"> fruit</font><font color="#CCCCCC"> all right so one</font>

870
00:30:42,049 --> 00:30:46,279
thing<font color="#E5E5E5"> that I think can</font><font color="#CCCCCC"> be quite useful</font>

871
00:30:43,759 --> 00:30:48,409
<font color="#E5E5E5">is for each of owner ability you learn</font>

872
00:30:46,279 --> 00:30:51,409
about<font color="#E5E5E5"> whether it's via pen test or a bug</font>

873
00:30:48,409 --> 00:30:52,360
bounty or found by an<font color="#E5E5E5"> internal team you</font>

874
00:30:51,409 --> 00:30:54,670
know<font color="#E5E5E5"> add a unit test</font>

875
00:30:52,360 --> 00:30:56,500
the<font color="#CCCCCC"> test of that exact issue</font><font color="#E5E5E5"> with an</font>

876
00:30:54,670 --> 00:30:58,510
<font color="#E5E5E5">example payload so let's say you across</font>

877
00:30:56,500 --> 00:31:00,490
<font color="#E5E5E5">I scripting in this endpoint with this</font>

878
00:30:58,510 --> 00:31:02,350
<font color="#E5E5E5">URL parameter you know just add a unit</font>

879
00:31:00,490 --> 00:31:06,130
<font color="#CCCCCC">test that</font><font color="#E5E5E5"> has you know script alert one</font>

880
00:31:02,350 --> 00:31:08,649
<font color="#E5E5E5">that will work in that current case so</font>

881
00:31:06,130 --> 00:31:10,450
<font color="#CCCCCC">that</font><font color="#E5E5E5"> you know code is changing quickly</font>

882
00:31:08,650 --> 00:31:12,010
maybe you added<font color="#CCCCCC"> a fix or added</font>

883
00:31:10,450 --> 00:31:13,809
protection but things get<font color="#E5E5E5"> really tected</font>

884
00:31:12,010 --> 00:31:15,700
and accidentally this<font color="#CCCCCC"> fixes rolled back</font>

885
00:31:13,809 --> 00:31:18,520
<font color="#CCCCCC">so by doing this you're essentially</font>

886
00:31:15,700 --> 00:31:20,740
inoculating yourself against all bugs

887
00:31:18,520 --> 00:31:23,620
you've ever seen before<font color="#CCCCCC"> in the code base</font>

888
00:31:20,740 --> 00:31:25,210
<font color="#E5E5E5">to</font><font color="#CCCCCC"> make</font><font color="#E5E5E5"> sure they don't come back and</font>

889
00:31:23,620 --> 00:31:28,149
this<font color="#E5E5E5"> was called out by</font><font color="#CCCCCC"> Zane Lackey and</font>

890
00:31:25,210 --> 00:31:30,220
<font color="#CCCCCC">his black hat</font><font color="#E5E5E5"> talk last year</font><font color="#CCCCCC"> which I</font>

891
00:31:28,150 --> 00:31:33,760
would really encourage you to<font color="#E5E5E5"> watch this</font>

892
00:31:30,220 --> 00:31:35,350
is on<font color="#E5E5E5"> YouTube but he does a really nice</font>

893
00:31:33,760 --> 00:31:36,460
<font color="#CCCCCC">job about laying out you know here's how</font>

894
00:31:35,350 --> 00:31:38,620
you should<font color="#CCCCCC"> think about it here's how</font>

895
00:31:36,460 --> 00:31:41,049
<font color="#E5E5E5">things are shifting from waterfall to</font>

896
00:31:38,620 --> 00:31:43,689
DevOps and and<font color="#CCCCCC"> generally it's one of the</font>

897
00:31:41,049 --> 00:31:45,820
best talks I've seen<font color="#E5E5E5"> on psych devops</font>

898
00:31:43,690 --> 00:31:48,490
period so I would really<font color="#E5E5E5"> encourage you</font>

899
00:31:45,820 --> 00:31:53,110
<font color="#CCCCCC">to</font><font color="#E5E5E5"> check it out it definitely influenced</font>

900
00:31:48,490 --> 00:31:58,840
<font color="#CCCCCC">my talk a lot alright</font><font color="#E5E5E5"> so let's talk</font>

901
00:31:53,110 --> 00:32:00,549
<font color="#CCCCCC">about a case</font><font color="#E5E5E5"> study</font><font color="#CCCCCC"> so here the</font>

902
00:31:58,840 --> 00:32:02,409
background<font color="#CCCCCC"> is NCC</font><font color="#E5E5E5"> group was brought in</font>

903
00:32:00,549 --> 00:32:04,960
by a company to<font color="#CCCCCC"> integrate some automatic</font>

904
00:32:02,410 --> 00:32:07,240
fuzzing into their<font color="#CCCCCC"> SDLC specifically if</font>

905
00:32:04,960 --> 00:32:08,950
you want to know a bit<font color="#CCCCCC"> about sort of the</font>

906
00:32:07,240 --> 00:32:11,919
scope of<font color="#E5E5E5"> work I think</font><font color="#CCCCCC"> this was one</font>

907
00:32:08,950 --> 00:32:13,600
<font color="#CCCCCC">person over</font><font color="#E5E5E5"> four weeks that did this so</font>

908
00:32:11,919 --> 00:32:15,190
the company had several native services

909
00:32:13,600 --> 00:32:16,299
written in C<font color="#CCCCCC"> that were parsing input</font>

910
00:32:15,190 --> 00:32:18,490
from the internet<font color="#E5E5E5"> and I think it had</font>

911
00:32:16,299 --> 00:32:20,020
some internal services as well<font color="#CCCCCC"> parsing</font>

912
00:32:18,490 --> 00:32:22,570
<font color="#E5E5E5">things like WebSocket traffic Jason</font>

913
00:32:20,020 --> 00:32:24,879
<font color="#E5E5E5">stuff like that the company pushed to</font>

914
00:32:22,570 --> 00:32:26,649
<font color="#E5E5E5">production about every two days for</font>

915
00:32:24,880 --> 00:32:28,840
these services<font color="#E5E5E5"> and they had very high</font>

916
00:32:26,650 --> 00:32:32,200
<font color="#E5E5E5">uptime requirements so these services</font>

917
00:32:28,840 --> 00:32:33,159
processed billions of messages<font color="#CCCCCC"> a day so</font>

918
00:32:32,200 --> 00:32:35,380
when we<font color="#E5E5E5"> came in there were a couple of</font>

919
00:32:33,160 --> 00:32:37,299
<font color="#CCCCCC">challenges the code was</font><font color="#E5E5E5"> tightly coupled</font>

920
00:32:35,380 --> 00:32:39,220
that is it was<font color="#CCCCCC"> non-trivial to write good</font>

921
00:32:37,299 --> 00:32:41,168
test harnesses<font color="#E5E5E5"> and when I say test</font>

922
00:32:39,220 --> 00:32:43,360
<font color="#E5E5E5">harnesses what I mean is in the context</font>

923
00:32:41,169 --> 00:32:45,790
of fuzzing<font color="#CCCCCC"> a test harness</font><font color="#E5E5E5"> is essentially</font>

924
00:32:43,360 --> 00:32:48,370
a test<font color="#E5E5E5"> case designed to specifically</font>

925
00:32:45,790 --> 00:32:50,860
exercise some sort of functional block

926
00:32:48,370 --> 00:32:54,100
of the application so one input<font color="#E5E5E5"> is</font>

927
00:32:50,860 --> 00:32:56,020
unlikely<font color="#E5E5E5"> to be able to test all of an</font>

928
00:32:54,100 --> 00:32:57,610
application<font color="#E5E5E5"> but if you say okay there's</font>

929
00:32:56,020 --> 00:32:58,900
you know five core parts<font color="#E5E5E5"> of this</font>

930
00:32:57,610 --> 00:33:02,229
<font color="#CCCCCC">application let's write a test harness</font>

931
00:32:58,900 --> 00:33:03,970
<font color="#E5E5E5">such that the input gets the fuzzer into</font>

932
00:33:02,230 --> 00:33:05,870
this main code path and sort of goes

933
00:33:03,970 --> 00:33:08,710
through<font color="#E5E5E5"> all of</font><font color="#CCCCCC"> that so then we can so</font>

934
00:33:05,870 --> 00:33:11,149
iterate<font color="#E5E5E5"> and get good</font><font color="#CCCCCC"> coverage</font><font color="#E5E5E5"> that way</font>

935
00:33:08,710 --> 00:33:13,820
<font color="#CCCCCC">so another challenge</font><font color="#E5E5E5"> was the release</font>

936
00:33:11,150 --> 00:33:15,620
pace was limited because<font color="#E5E5E5"> again we had</font>

937
00:33:13,820 --> 00:33:17,809
<font color="#E5E5E5">sort of two days for a given build and</font>

938
00:33:15,620 --> 00:33:20,539
we also had to scale the fuzzing process

939
00:33:17,809 --> 00:33:26,210
across<font color="#CCCCCC"> a</font><font color="#E5E5E5"> cluster of machines with many</font>

940
00:33:20,539 --> 00:33:28,549
different<font color="#E5E5E5"> test harnesses okay</font><font color="#CCCCCC"> so let's</font>

941
00:33:26,210 --> 00:33:30,620
talk a little<font color="#E5E5E5"> bit about what we did so</font>

942
00:33:28,549 --> 00:33:33,830
<font color="#E5E5E5">we were wrote the fuzzer we used was a</font>

943
00:33:30,620 --> 00:33:35,658
AFL or American fuzzy<font color="#E5E5E5"> lop and we wrote I</font>

944
00:33:33,830 --> 00:33:37,699
<font color="#E5E5E5">think about</font><font color="#CCCCCC"> twelve harnesses in total</font>

945
00:33:35,659 --> 00:33:40,940
<font color="#CCCCCC">for different functional areas of the</font>

946
00:33:37,700 --> 00:33:42,529
<font color="#E5E5E5">program to get good coverage</font><font color="#CCCCCC"> we then set</font>

947
00:33:40,940 --> 00:33:44,690
up a fuzzing cluster that continuously

948
00:33:42,529 --> 00:33:47,539
fuzzed<font color="#E5E5E5"> new builds based on priority</font>

949
00:33:44,690 --> 00:33:48,830
metrics so the priority metrics are

950
00:33:47,539 --> 00:33:51,169
probably<font color="#E5E5E5"> different company to company</font>

951
00:33:48,830 --> 00:33:53,539
but<font color="#CCCCCC"> you could imagine you know</font><font color="#E5E5E5"> these say</font>

952
00:33:51,169 --> 00:33:56,029
externally facing services probably<font color="#CCCCCC"> we</font>

953
00:33:53,539 --> 00:33:58,039
should<font color="#CCCCCC"> prioritize more</font><font color="#E5E5E5"> than things that</font>

954
00:33:56,029 --> 00:34:00,320
<font color="#CCCCCC">are</font><font color="#E5E5E5"> only internally facing as the risk</font>

955
00:33:58,039 --> 00:34:02,149
is lower we then made a table<font color="#E5E5E5"> for</font><font color="#CCCCCC"> the</font>

956
00:34:00,320 --> 00:34:04,549
development<font color="#E5E5E5"> team that basically said if</font>

957
00:34:02,149 --> 00:34:05,719
you<font color="#E5E5E5"> update the code manipulating this</font>

958
00:34:04,549 --> 00:34:07,220
structure<font color="#CCCCCC"> we're working</font><font color="#E5E5E5"> on this</font>

959
00:34:05,720 --> 00:34:08,750
functional part<font color="#CCCCCC"> of</font><font color="#E5E5E5"> the code run this</font>

960
00:34:07,220 --> 00:34:11,418
<font color="#E5E5E5">test harness so it was essentially a</font>

961
00:34:08,750 --> 00:34:13,839
mapping<font color="#E5E5E5"> between if you change this run</font>

962
00:34:11,418 --> 00:34:19,399
this<font color="#CCCCCC"> test harness to make it very</font><font color="#E5E5E5"> clear</font>

963
00:34:13,839 --> 00:34:21,109
<font color="#E5E5E5">we also created some automated detection</font>

964
00:34:19,399 --> 00:34:23,569
such<font color="#E5E5E5"> that when there was a crash we</font>

965
00:34:21,109 --> 00:34:24,739
would<font color="#CCCCCC"> Auto create a JIRA ticket with you</font>

966
00:34:23,570 --> 00:34:26,089
know what input caused it

967
00:34:24,739 --> 00:34:27,560
here's the stack<font color="#E5E5E5"> trace here's all the</font>

968
00:34:26,089 --> 00:34:29,330
information<font color="#CCCCCC"> you have about why it</font>

969
00:34:27,560 --> 00:34:32,179
crashed<font color="#CCCCCC"> and then we would assign that to</font>

970
00:34:29,330 --> 00:34:33,889
<font color="#E5E5E5">the project owner so continuously over</font>

971
00:34:32,179 --> 00:34:35,869
time<font color="#E5E5E5"> project managers are just getting</font>

972
00:34:33,889 --> 00:34:37,399
JIRA tickets saying hey this thing

973
00:34:35,869 --> 00:34:38,780
you're in charge of crashed<font color="#E5E5E5"> here's what</font>

974
00:34:37,399 --> 00:34:40,520
crashed it here is all the information

975
00:34:38,780 --> 00:34:43,399
<font color="#CCCCCC">we</font><font color="#E5E5E5"> can</font><font color="#CCCCCC"> provide you about what's</font>

976
00:34:40,520 --> 00:34:46,009
happening which<font color="#E5E5E5"> is sort of running on</font>

977
00:34:43,399 --> 00:34:48,348
its own which is<font color="#CCCCCC"> pretty neat so we</font>

978
00:34:46,010 --> 00:34:50,990
learned a couple<font color="#E5E5E5"> of lessons a couple</font>

979
00:34:48,349 --> 00:34:52,310
I'll mention<font color="#CCCCCC"> are you know there needs to</font>

980
00:34:50,989 --> 00:34:53,839
<font color="#CCCCCC">be a constant dialogue between the</font>

981
00:34:52,310 --> 00:34:55,460
<font color="#E5E5E5">security and development team</font><font color="#CCCCCC"> I think in</font>

982
00:34:53,839 --> 00:34:57,139
<font color="#E5E5E5">many organizations they are separate</font>

983
00:34:55,460 --> 00:34:58,880
teams and they talk<font color="#CCCCCC"> every once</font><font color="#E5E5E5"> in a</font>

984
00:34:57,139 --> 00:35:02,570
<font color="#CCCCCC">while but it really</font><font color="#E5E5E5"> meant helps a lot</font>

985
00:34:58,880 --> 00:35:03,980
<font color="#E5E5E5">for them to either have a security</font>

986
00:35:02,570 --> 00:35:05,510
person embedded in the<font color="#E5E5E5"> development team</font>

987
00:35:03,980 --> 00:35:07,520
<font color="#E5E5E5">or just work together very closely</font>

988
00:35:05,510 --> 00:35:09,680
<font color="#E5E5E5">because the structure of the code can</font>

989
00:35:07,520 --> 00:35:12,619
<font color="#CCCCCC">make fuzzing either a lot easier</font><font color="#E5E5E5"> or a</font>

990
00:35:09,680 --> 00:35:14,029
lot harder<font color="#CCCCCC"> so specifically working with</font>

991
00:35:12,619 --> 00:35:16,520
<font color="#E5E5E5">the development</font><font color="#CCCCCC"> team to</font><font color="#E5E5E5"> make sure the</font>

992
00:35:14,030 --> 00:35:17,960
code exposes a clean API<font color="#E5E5E5"> can make it</font>

993
00:35:16,520 --> 00:35:20,900
very easy

994
00:35:17,960 --> 00:35:22,280
<font color="#CCCCCC">to write test harnesses</font><font color="#E5E5E5"> and there's also</font>

995
00:35:20,900 --> 00:35:24,470
nice benefits from the developer side

996
00:35:22,280 --> 00:35:28,339
for making a clean<font color="#CCCCCC"> api in terms of code</font>

997
00:35:24,470 --> 00:35:29,720
maintainability and<font color="#E5E5E5"> readability</font><font color="#CCCCCC"> and one</font>

998
00:35:28,339 --> 00:35:31,940
<font color="#E5E5E5">interesting outcome was the development</font>

999
00:35:29,720 --> 00:35:33,560
<font color="#E5E5E5">team really appreciated the bugs not</font>

1000
00:35:31,940 --> 00:35:36,050
just for the security<font color="#CCCCCC"> implications but</font>

1001
00:35:33,560 --> 00:35:39,140
for improving robustness<font color="#CCCCCC"> again these</font><font color="#E5E5E5"> are</font>

1002
00:35:36,050 --> 00:35:42,020
services processing<font color="#CCCCCC"> two billion</font><font color="#E5E5E5"> messages</font>

1003
00:35:39,140 --> 00:35:44,779
a<font color="#CCCCCC"> day very</font><font color="#E5E5E5"> high uptime requirements so I</font>

1004
00:35:42,020 --> 00:35:47,359
<font color="#E5E5E5">think in the first two</font><font color="#CCCCCC"> or three</font><font color="#E5E5E5"> days we</font>

1005
00:35:44,780 --> 00:35:50,119
<font color="#CCCCCC">started fuzzing we ended up finding 13</font>

1006
00:35:47,359 --> 00:35:52,848
to 15 unique crashes which we then told

1007
00:35:50,119 --> 00:35:54,410
them so<font color="#E5E5E5"> these bugs had not been found by</font>

1008
00:35:52,849 --> 00:35:57,530
any<font color="#E5E5E5"> of their manual testing or manual</font>

1009
00:35:54,410 --> 00:35:59,060
code review<font color="#CCCCCC"> but they were very excited</font>

1010
00:35:57,530 --> 00:36:01,130
<font color="#CCCCCC">even if they weren't exploitable because</font>

1011
00:35:59,060 --> 00:36:04,609
they're like hey this<font color="#E5E5E5"> is you know this</font>

1012
00:36:01,130 --> 00:36:07,550
<font color="#CCCCCC">is making our secure program more robust</font>

1013
00:36:04,609 --> 00:36:10,580
<font color="#E5E5E5">and able to process even more</font><font color="#CCCCCC"> things</font><font color="#E5E5E5"> a</font>

1014
00:36:07,550 --> 00:36:12,260
lot longer<font color="#E5E5E5"> uptime so as with anything</font>

1015
00:36:10,580 --> 00:36:14,420
<font color="#CCCCCC">even when it's successful</font><font color="#E5E5E5"> there's a lot</font>

1016
00:36:12,260 --> 00:36:16,990
of open<font color="#CCCCCC"> problems the first one is very</font>

1017
00:36:14,420 --> 00:36:19,270
common to pretty much any fuzzing

1018
00:36:16,990 --> 00:36:21,169
attempt<font color="#E5E5E5"> you know how long do you fuzz</font>

1019
00:36:19,270 --> 00:36:26,780
<font color="#E5E5E5">because in theory you could just fuzz</font>

1020
00:36:21,170 --> 00:36:28,160
forever right so currently<font color="#E5E5E5"> I think at</font>

1021
00:36:26,780 --> 00:36:29,599
the end<font color="#E5E5E5"> we were mostly</font><font color="#CCCCCC"> just fuzzing a</font>

1022
00:36:28,160 --> 00:36:31,640
set amount<font color="#CCCCCC"> of time</font><font color="#E5E5E5"> so we have say two</font>

1023
00:36:29,599 --> 00:36:33,470
weeks<font color="#CCCCCC"> before the next release so we'll</font>

1024
00:36:31,640 --> 00:36:35,000
fuzz for<font color="#E5E5E5"> about or sorry two days until</font>

1025
00:36:33,470 --> 00:36:37,069
<font color="#E5E5E5">the next release so we'll fuzz until</font>

1026
00:36:35,000 --> 00:36:39,290
it's time but ideally you<font color="#CCCCCC"> have some</font>

1027
00:36:37,070 --> 00:36:40,910
other metrics in<font color="#CCCCCC"> terms of you know you</font>

1028
00:36:39,290 --> 00:36:42,140
were monitoring<font color="#E5E5E5"> are we hitting new code</font>

1029
00:36:40,910 --> 00:36:43,848
paths and then once we sort<font color="#E5E5E5"> of hit a</font>

1030
00:36:42,140 --> 00:36:45,650
plateau<font color="#E5E5E5"> in terms of we're not getting</font>

1031
00:36:43,849 --> 00:36:47,680
any new code coverage probably we can

1032
00:36:45,650 --> 00:36:49,910
stop because<font color="#E5E5E5"> we're</font><font color="#CCCCCC"> two spinning cycles</font>

1033
00:36:47,680 --> 00:36:51,859
another interesting thing is is it

1034
00:36:49,910 --> 00:36:54,319
possible to only<font color="#E5E5E5"> fuzz</font><font color="#CCCCCC"> the newly modified</font>

1035
00:36:51,859 --> 00:36:56,060
code so say there's<font color="#CCCCCC"> ten core areas of</font>

1036
00:36:54,320 --> 00:36:58,099
<font color="#CCCCCC">the application</font><font color="#E5E5E5"> and this new build only</font>

1037
00:36:56,060 --> 00:36:59,450
changed<font color="#CCCCCC"> one of them why way cycles</font>

1038
00:36:58,099 --> 00:37:00,589
testing the other nine because<font color="#E5E5E5"> nothing's</font>

1039
00:36:59,450 --> 00:37:03,980
changed

1040
00:37:00,589 --> 00:37:05,570
and we have enabled<font color="#E5E5E5"> them to do that sort</font>

1041
00:37:03,980 --> 00:37:07,040
of manually by giving them this mapping

1042
00:37:05,570 --> 00:37:09,349
of functional areas to test harnesses

1043
00:37:07,040 --> 00:37:11,330
<font color="#E5E5E5">but if we were able</font><font color="#CCCCCC"> to sort of manually</font>

1044
00:37:09,349 --> 00:37:12,800
like<font color="#E5E5E5"> Auto diff you know these parts</font><font color="#CCCCCC"> that</font>

1045
00:37:11,330 --> 00:37:14,420
code have changed we know this part<font color="#E5E5E5"> of</font>

1046
00:37:12,800 --> 00:37:16,339
the code is<font color="#CCCCCC"> in</font><font color="#E5E5E5"> this functional area so</font>

1047
00:37:14,420 --> 00:37:17,750
run<font color="#CCCCCC"> that test harness</font><font color="#E5E5E5"> I think that's</font>

1048
00:37:16,339 --> 00:37:19,670
something that's<font color="#E5E5E5"> feasible we just didn't</font>

1049
00:37:17,750 --> 00:37:20,660
<font color="#CCCCCC">have time in the scope of the assessment</font>

1050
00:37:19,670 --> 00:37:22,280
<font color="#E5E5E5">to do it but I</font><font color="#CCCCCC"> think</font><font color="#E5E5E5"> that's a very</font>

1051
00:37:20,660 --> 00:37:23,960
<font color="#CCCCCC">interesting problem that if you have</font>

1052
00:37:22,280 --> 00:37:26,990
some insights into<font color="#E5E5E5"> I'd love to chat</font>

1053
00:37:23,960 --> 00:37:28,550
<font color="#CCCCCC">about it and again</font><font color="#E5E5E5"> so I'm the one</font>

1054
00:37:26,990 --> 00:37:30,680
<font color="#E5E5E5">talking about it but</font><font color="#CCCCCC"> really all credit</font>

1055
00:37:28,550 --> 00:37:31,670
for this work goes to<font color="#CCCCCC"> my colleagues ryan</font>

1056
00:37:30,680 --> 00:37:36,859
<font color="#CCCCCC">sullivan and gay</font>

1057
00:37:31,670 --> 00:37:38,420
<font color="#E5E5E5">Pyke so we've talked about a bunch</font><font color="#CCCCCC"> of</font>

1058
00:37:36,859 --> 00:37:40,490
<font color="#E5E5E5">different</font><font color="#CCCCCC"> things</font><font color="#E5E5E5"> but let's</font><font color="#CCCCCC"> discuss a</font>

1059
00:37:38,420 --> 00:37:41,780
<font color="#CCCCCC">little bit</font><font color="#E5E5E5"> you know say</font><font color="#CCCCCC"> there's some</font>

1060
00:37:40,490 --> 00:37:44,058
challenges<font color="#CCCCCC"> with</font><font color="#E5E5E5"> these commercial tools</font>

1061
00:37:41,780 --> 00:37:46,579
maybe we want<font color="#E5E5E5"> to roll something in-house</font>

1062
00:37:44,059 --> 00:37:49,220
<font color="#E5E5E5">you know what are</font><font color="#CCCCCC"> some things we want to</font>

1063
00:37:46,579 --> 00:37:58,940
<font color="#E5E5E5">consider so there's a lot of things to</font>

1064
00:37:49,220 --> 00:38:01,819
consider<font color="#CCCCCC"> so doing doing</font><font color="#E5E5E5"> this well and</font>

1065
00:37:58,940 --> 00:38:03,349
<font color="#E5E5E5">safely is important to consider</font><font color="#CCCCCC"> so I</font>

1066
00:38:01,819 --> 00:38:05,930
would encourage you<font color="#E5E5E5"> rather than trying</font>

1067
00:38:03,349 --> 00:38:08,180
to build a tool<font color="#E5E5E5"> or use the tool that</font>

1068
00:38:05,930 --> 00:38:09,649
<font color="#E5E5E5">finds every bug class for example across</font>

1069
00:38:08,180 --> 00:38:11,779
<font color="#CCCCCC">site scripting a sequel injection etc</font>

1070
00:38:09,650 --> 00:38:13,490
like everything<font color="#CCCCCC"> all-in-one</font><font color="#E5E5E5"> perhaps</font>

1071
00:38:11,780 --> 00:38:16,400
instead focus on finding one class<font color="#CCCCCC"> of</font>

1072
00:38:13,490 --> 00:38:18,618
vulnerability very well<font color="#E5E5E5"> and a lot of</font>

1073
00:38:16,400 --> 00:38:20,359
companies<font color="#E5E5E5"> think</font><font color="#CCCCCC"> ok let's start</font><font color="#E5E5E5"> at</font>

1074
00:38:18,619 --> 00:38:22,250
whatever<font color="#E5E5E5"> is the most severe issue like</font>

1075
00:38:20,359 --> 00:38:24,109
code injection<font color="#E5E5E5"> remote code execution and</font>

1076
00:38:22,250 --> 00:38:26,630
and then we'll go backwards<font color="#E5E5E5"> but instead</font>

1077
00:38:24,109 --> 00:38:28,369
of<font color="#E5E5E5"> focusing</font><font color="#CCCCCC"> just on the severity I would</font>

1078
00:38:26,630 --> 00:38:31,220
encourage you instead<font color="#E5E5E5"> to focus on a</font>

1079
00:38:28,369 --> 00:38:35,030
combination<font color="#E5E5E5"> of the severity as</font><font color="#CCCCCC"> well</font><font color="#E5E5E5"> as</font>

1080
00:38:31,220 --> 00:38:36,890
precision<font color="#E5E5E5"> so even if an issue isn't very</font>

1081
00:38:35,030 --> 00:38:38,390
severe<font color="#E5E5E5"> maybe it's just open redirect or</font>

1082
00:38:36,890 --> 00:38:39,890
something like<font color="#E5E5E5"> that</font><font color="#CCCCCC"> but if you can build</font>

1083
00:38:38,390 --> 00:38:42,290
a tool<font color="#E5E5E5"> that finds it with essentially</font>

1084
00:38:39,890 --> 00:38:44,180
zero false positives just build that

1085
00:38:42,290 --> 00:38:46,460
tool and then run it and sort of<font color="#CCCCCC"> auto</font>

1086
00:38:44,180 --> 00:38:48,109
push all the<font color="#E5E5E5"> findings to developers</font><font color="#CCCCCC"> and</font>

1087
00:38:46,460 --> 00:38:49,849
you've<font color="#E5E5E5"> essentially like wiped out this</font>

1088
00:38:48,109 --> 00:38:53,210
class of issues because<font color="#CCCCCC"> you have such</font>

1089
00:38:49,849 --> 00:38:54,950
<font color="#CCCCCC">good</font><font color="#E5E5E5"> precision and then sort of like</font>

1090
00:38:53,210 --> 00:38:56,180
<font color="#E5E5E5">with vaccines and herd immunity you can</font>

1091
00:38:54,950 --> 00:38:57,799
then take<font color="#CCCCCC"> that</font><font color="#E5E5E5"> time that you would have</font>

1092
00:38:56,180 --> 00:38:59,299
spent<font color="#CCCCCC"> on these issues and then move to</font>

1093
00:38:57,799 --> 00:39:01,790
<font color="#CCCCCC">the next</font><font color="#E5E5E5"> thing and then solve the next</font>

1094
00:38:59,299 --> 00:39:04,099
<font color="#E5E5E5">bug class in the next book class</font><font color="#CCCCCC"> etc so</font>

1095
00:39:01,790 --> 00:39:06,529
basically<font color="#E5E5E5"> think of you know water issues</font>

1096
00:39:04,099 --> 00:39:08,240
that are reasonably severe or maybe<font color="#CCCCCC"> even</font>

1097
00:39:06,530 --> 00:39:10,010
<font color="#E5E5E5">not but I can find very precisely</font><font color="#CCCCCC"> and</font>

1098
00:39:08,240 --> 00:39:11,750
<font color="#CCCCCC">then maybe you end</font><font color="#E5E5E5"> up having a</font>

1099
00:39:10,010 --> 00:39:15,349
<font color="#E5E5E5">collection of tools that each do one</font>

1100
00:39:11,750 --> 00:39:17,510
part very well<font color="#CCCCCC"> and</font><font color="#E5E5E5"> again by having tools</font>

1101
00:39:15,349 --> 00:39:19,280
that give very high signal signal

1102
00:39:17,510 --> 00:39:20,450
actionable results to the dev team

1103
00:39:19,280 --> 00:39:22,309
you're building<font color="#CCCCCC"> trust so they're more</font>

1104
00:39:20,450 --> 00:39:25,640
<font color="#E5E5E5">likely</font><font color="#CCCCCC"> to want new things from</font><font color="#E5E5E5"> you</font><font color="#CCCCCC"> and</font>

1105
00:39:22,309 --> 00:39:27,500
willing to<font color="#E5E5E5"> continue working with you so</font>

1106
00:39:25,640 --> 00:39:29,509
a quick<font color="#E5E5E5"> case study this is a large</font>

1107
00:39:27,500 --> 00:39:31,130
software<font color="#CCCCCC"> company with</font><font color="#E5E5E5"> tens to hundreds</font>

1108
00:39:29,510 --> 00:39:34,309
of thousands of internal services and

1109
00:39:31,130 --> 00:39:37,430
you know a finite<font color="#CCCCCC"> number of security</font>

1110
00:39:34,309 --> 00:39:39,650
<font color="#CCCCCC">team what they did they attack one class</font>

1111
00:39:37,430 --> 00:39:41,990
<font color="#CCCCCC">of bugs</font><font color="#E5E5E5"> at a time they focused on checks</font>

1112
00:39:39,650 --> 00:39:44,390
that were low to<font color="#CCCCCC"> know false positives at</font>

1113
00:39:41,990 --> 00:39:45,229
all and one unique trick that I think is

1114
00:39:44,390 --> 00:39:47,450
interesting is<font color="#E5E5E5"> they</font>

1115
00:39:45,230 --> 00:39:49,010
we have a system such<font color="#E5E5E5"> that if</font><font color="#CCCCCC"> two if</font>

1116
00:39:47,450 --> 00:39:51,290
they add a new check and<font color="#E5E5E5"> too many of</font>

1117
00:39:49,010 --> 00:39:52,700
<font color="#CCCCCC">their</font><font color="#E5E5E5"> there's too many false positives</font>

1118
00:39:51,290 --> 00:39:54,470
<font color="#CCCCCC">so we're this</font><font color="#E5E5E5"> newly added check they</font>

1119
00:39:52,700 --> 00:39:56,330
actually<font color="#E5E5E5"> automatically disable it so</font>

1120
00:39:54,470 --> 00:39:59,720
that it's not run on anything new<font color="#E5E5E5"> so</font>

1121
00:39:56,330 --> 00:40:01,549
over time only<font color="#E5E5E5"> the high signal checks</font>

1122
00:39:59,720 --> 00:40:04,419
are kept in and I<font color="#E5E5E5"> thought that was a</font>

1123
00:40:01,550 --> 00:40:04,420
nice<font color="#E5E5E5"> way</font><font color="#CCCCCC"> to do it</font><font color="#E5E5E5"> okay</font>

1124
00:40:05,720 --> 00:40:12,529
we have been sprinting<font color="#E5E5E5"> through and let's</font>

1125
00:40:08,900 --> 00:40:14,720
talk<font color="#E5E5E5"> about monitoring but</font><font color="#CCCCCC"> quickly some</font>

1126
00:40:12,530 --> 00:40:17,060
infrastructure best practices so we<font color="#CCCCCC"> see</font>

1127
00:40:14,720 --> 00:40:18,830
this pretty<font color="#E5E5E5"> commonly in many</font>

1128
00:40:17,060 --> 00:40:21,049
organizations so there's this idea of

1129
00:40:18,830 --> 00:40:22,430
infrastructure<font color="#E5E5E5"> as code so servers are</font>

1130
00:40:21,050 --> 00:40:25,660
generally configured with something like

1131
00:40:22,430 --> 00:40:27,980
puppet chef or terraform<font color="#E5E5E5"> which makes the</font>

1132
00:40:25,660 --> 00:40:29,930
configuration of<font color="#E5E5E5"> servers declarative and</font>

1133
00:40:27,980 --> 00:40:31,640
reproducible<font color="#E5E5E5"> and also version din source</font>

1134
00:40:29,930 --> 00:40:33,259
controls so<font color="#E5E5E5"> you can see how it changes</font>

1135
00:40:31,640 --> 00:40:35,600
over<font color="#E5E5E5"> time and for many of these</font>

1136
00:40:33,260 --> 00:40:37,310
companies<font color="#E5E5E5"> if someone SSH is into a</font>

1137
00:40:35,600 --> 00:40:40,220
server<font color="#CCCCCC"> or somehow</font><font color="#E5E5E5"> the server gets in an</font>

1138
00:40:37,310 --> 00:40:41,540
unclean<font color="#CCCCCC"> non-default state</font><font color="#E5E5E5"> they just wipe</font>

1139
00:40:40,220 --> 00:40:43,730
<font color="#E5E5E5">it and then</font><font color="#CCCCCC"> reprovision</font><font color="#E5E5E5"> so that</font>

1140
00:40:41,540 --> 00:40:46,340
everything<font color="#E5E5E5"> is in the expected</font><font color="#CCCCCC"> state all</font>

1141
00:40:43,730 --> 00:40:47,990
the<font color="#CCCCCC"> time a number of companies are also</font>

1142
00:40:46,340 --> 00:40:49,550
<font color="#CCCCCC">managing secrets either</font><font color="#E5E5E5"> with their</font>

1143
00:40:47,990 --> 00:40:51,859
config management or a separate<font color="#E5E5E5"> secret</font>

1144
00:40:49,550 --> 00:40:54,410
<font color="#E5E5E5">service</font><font color="#CCCCCC"> puppet at chef have</font><font color="#E5E5E5"> built in</font>

1145
00:40:51,859 --> 00:40:56,779
ways to do that<font color="#CCCCCC"> hasha</font><font color="#E5E5E5"> Corp has a secret</font>

1146
00:40:54,410 --> 00:40:59,359
<font color="#E5E5E5">as a service</font><font color="#CCCCCC"> open-source tool you</font><font color="#E5E5E5"> can</font>

1147
00:40:56,780 --> 00:41:01,160
<font color="#CCCCCC">use called vault and if you haven't</font>

1148
00:40:59,359 --> 00:41:02,900
<font color="#E5E5E5">heard of it</font><font color="#CCCCCC"> there's a tool called</font><font color="#E5E5E5"> get</font>

1149
00:41:01,160 --> 00:41:05,060
Rob which I encourage<font color="#E5E5E5"> you to play around</font>

1150
00:41:02,900 --> 00:41:06,980
<font color="#E5E5E5">with it's pretty fun</font><font color="#CCCCCC"> what it does is</font>

1151
00:41:05,060 --> 00:41:09,109
essentially you pass in a github

1152
00:41:06,980 --> 00:41:11,000
<font color="#E5E5E5">username or a github</font><font color="#CCCCCC"> organization name</font>

1153
00:41:09,109 --> 00:41:12,890
and<font color="#E5E5E5"> then what it does</font><font color="#CCCCCC"> is it clones all</font>

1154
00:41:11,000 --> 00:41:15,650
of the repos<font color="#E5E5E5"> associated</font><font color="#CCCCCC"> with your</font>

1155
00:41:12,890 --> 00:41:18,650
targets<font color="#E5E5E5"> and then looks for secrets</font>

1156
00:41:15,650 --> 00:41:21,500
<font color="#E5E5E5">inside of it so this is a good way to</font>

1157
00:41:18,650 --> 00:41:25,280
get an idea<font color="#CCCCCC"> for</font><font color="#E5E5E5"> your organization's</font><font color="#CCCCCC"> open</font>

1158
00:41:21,500 --> 00:41:27,140
<font color="#CCCCCC">source footprint pretty easily so on an</font>

1159
00:41:25,280 --> 00:41:29,990
engagement<font color="#E5E5E5"> with a client in the Bay Area</font>

1160
00:41:27,140 --> 00:41:31,460
<font color="#CCCCCC">I ran this on the organization and</font><font color="#E5E5E5"> I</font>

1161
00:41:29,990 --> 00:41:34,040
ended<font color="#E5E5E5"> up finding that one of the</font>

1162
00:41:31,460 --> 00:41:37,400
<font color="#E5E5E5">developers for that organization had in</font>

1163
00:41:34,040 --> 00:41:39,740
<font color="#CCCCCC">their bash RC file</font><font color="#E5E5E5"> a link to the stand</font>

1164
00:41:37,400 --> 00:41:43,490
up URL to join their weekly developer

1165
00:41:39,740 --> 00:41:45,589
stand up<font color="#E5E5E5"> and so that</font><font color="#CCCCCC"> that URL had the</font>

1166
00:41:43,490 --> 00:41:48,049
unique token needed to join the stand up

1167
00:41:45,590 --> 00:41:49,790
so unfortunately it was a web

1168
00:41:48,050 --> 00:41:51,740
application test and not<font color="#CCCCCC"> a red team</font>

1169
00:41:49,790 --> 00:41:53,509
because otherwise I could<font color="#E5E5E5"> have you</font><font color="#CCCCCC"> know</font>

1170
00:41:51,740 --> 00:41:54,680
<font color="#E5E5E5">listen to</font><font color="#CCCCCC"> the</font><font color="#E5E5E5"> end of their calls for</font><font color="#CCCCCC"> a</font>

1171
00:41:53,510 --> 00:41:56,720
few weeks<font color="#E5E5E5"> in game like sensitive</font>

1172
00:41:54,680 --> 00:41:57,919
information<font color="#CCCCCC"> so unfortunately wasn't able</font>

1173
00:41:56,720 --> 00:42:00,980
<font color="#E5E5E5">to do that it was</font><font color="#CCCCCC"> just</font><font color="#E5E5E5"> like</font>

1174
00:41:57,920 --> 00:42:02,569
that<font color="#CCCCCC"> pentest but it was</font><font color="#E5E5E5"> it gives you a</font>

1175
00:42:00,980 --> 00:42:04,270
flavor<font color="#E5E5E5"> of the types of things you may be</font>

1176
00:42:02,569 --> 00:42:08,720
<font color="#CCCCCC">exposing that</font><font color="#E5E5E5"> you don't even know about</font>

1177
00:42:04,270 --> 00:42:10,549
<font color="#CCCCCC">and so</font><font color="#E5E5E5"> finally this is not necessarily</font>

1178
00:42:08,720 --> 00:42:12,078
widely used<font color="#E5E5E5"> for companies</font><font color="#CCCCCC"> but a couple</font>

1179
00:42:10,549 --> 00:42:15,079
<font color="#E5E5E5">of them are</font><font color="#CCCCCC"> talking about it is having</font>

1180
00:42:12,079 --> 00:42:17,359
<font color="#E5E5E5">mutual TLS between internal services so</font>

1181
00:42:15,079 --> 00:42:19,490
not<font color="#E5E5E5"> just talking over</font><font color="#CCCCCC"> an encrypted</font>

1182
00:42:17,359 --> 00:42:21,950
<font color="#E5E5E5">channel but also having some guarantees</font>

1183
00:42:19,490 --> 00:42:23,569
about<font color="#E5E5E5"> you know ok I'm this service and I</font>

1184
00:42:21,950 --> 00:42:25,790
know that<font color="#E5E5E5"> these</font><font color="#CCCCCC"> other services are</font>

1185
00:42:23,569 --> 00:42:27,650
supposed<font color="#E5E5E5"> to talk</font><font color="#CCCCCC"> to me</font><font color="#E5E5E5"> and I don't let</font>

1186
00:42:25,790 --> 00:42:28,700
other<font color="#E5E5E5"> people because you can verify sort</font>

1187
00:42:27,650 --> 00:42:30,710
of the client certificate that they

1188
00:42:28,700 --> 00:42:34,939
<font color="#CCCCCC">present so this</font><font color="#E5E5E5"> is a nice way to also</font>

1189
00:42:30,710 --> 00:42:36,829
<font color="#E5E5E5">sort of enforce access controls so I'm</font>

1190
00:42:34,940 --> 00:42:40,130
going<font color="#CCCCCC"> to quickly talk</font><font color="#E5E5E5"> about some neat</font>

1191
00:42:36,829 --> 00:42:43,250
tools both of them by Netflix so repo

1192
00:42:40,130 --> 00:42:45,260
kid is<font color="#E5E5E5"> basically new applications at</font>

1193
00:42:43,250 --> 00:42:48,410
Netflix are<font color="#E5E5E5"> automatically granted a base</font>

1194
00:42:45,260 --> 00:42:50,359
set of AWS permissions<font color="#CCCCCC"> and what repo git</font>

1195
00:42:48,410 --> 00:42:52,098
does is whenever<font color="#E5E5E5"> the new service is</font>

1196
00:42:50,359 --> 00:42:54,230
launched it watches it for a<font color="#E5E5E5"> little</font>

1197
00:42:52,099 --> 00:42:55,960
<font color="#E5E5E5">while and says</font><font color="#CCCCCC"> ok what what API calls</font>

1198
00:42:54,230 --> 00:42:58,460
you're making how are you<font color="#E5E5E5"> working and</font>

1199
00:42:55,960 --> 00:42:59,930
over time it'll say oh<font color="#E5E5E5"> you have</font><font color="#CCCCCC"> this</font>

1200
00:42:58,460 --> 00:43:01,880
<font color="#E5E5E5">permission but I don't think you need</font><font color="#CCCCCC"> it</font>

1201
00:42:59,930 --> 00:43:03,348
<font color="#CCCCCC">so it'll programmatically remove it</font><font color="#E5E5E5"> and</font>

1202
00:43:01,880 --> 00:43:05,569
then observe<font color="#E5E5E5"> the application to see</font><font color="#CCCCCC"> if</font>

1203
00:43:03,349 --> 00:43:07,730
it starts failing<font color="#E5E5E5"> so if it so if it</font>

1204
00:43:05,569 --> 00:43:09,230
<font color="#E5E5E5">doesn't then like oh you'd never need</font>

1205
00:43:07,730 --> 00:43:10,579
<font color="#E5E5E5">this permission now you're more secure</font>

1206
00:43:09,230 --> 00:43:12,530
<font color="#CCCCCC">because if someone were to</font><font color="#E5E5E5"> compromise</font>

1207
00:43:10,579 --> 00:43:13,880
<font color="#CCCCCC">that service</font><font color="#E5E5E5"> you can only do the</font>

1208
00:43:12,530 --> 00:43:16,220
remaining permissions worth of<font color="#E5E5E5"> things</font>

1209
00:43:13,880 --> 00:43:18,740
but if the application<font color="#CCCCCC"> starts failing</font>

1210
00:43:16,220 --> 00:43:20,779
<font color="#E5E5E5">they just automatically roll that</font><font color="#CCCCCC"> back</font>

1211
00:43:18,740 --> 00:43:22,180
and give<font color="#E5E5E5"> the permission back so what I</font>

1212
00:43:20,780 --> 00:43:24,380
think<font color="#CCCCCC"> is really</font><font color="#E5E5E5"> cool about this is</font>

1213
00:43:22,180 --> 00:43:25,879
applications are eventually reaching

1214
00:43:24,380 --> 00:43:27,680
<font color="#E5E5E5">this steady state of least privilege</font>

1215
00:43:25,880 --> 00:43:31,220
with minimal to no security team

1216
00:43:27,680 --> 00:43:32,210
interaction so AWS has a lot of

1217
00:43:31,220 --> 00:43:33,890
permissions right<font color="#E5E5E5"> and it's pretty</font>

1218
00:43:32,210 --> 00:43:36,290
complex and personally I<font color="#CCCCCC"> don't think</font>

1219
00:43:33,890 --> 00:43:39,379
it's fair to<font color="#E5E5E5"> expect every developer to</font>

1220
00:43:36,290 --> 00:43:41,058
understand<font color="#E5E5E5"> everything</font><font color="#CCCCCC"> about all of AWS</font>

1221
00:43:39,380 --> 00:43:42,890
<font color="#CCCCCC">is permissions</font><font color="#E5E5E5"> while at</font><font color="#CCCCCC"> the same time</font>

1222
00:43:41,059 --> 00:43:44,630
<font color="#CCCCCC">the security</font><font color="#E5E5E5"> engineering team doesn't</font>

1223
00:43:42,890 --> 00:43:46,160
<font color="#E5E5E5">have the bandwidth</font><font color="#CCCCCC"> to talk with every</font>

1224
00:43:44,630 --> 00:43:48,049
developer who's releasing a new service

1225
00:43:46,160 --> 00:43:49,460
right if they did<font color="#CCCCCC"> that then they're</font>

1226
00:43:48,049 --> 00:43:51,049
probably<font color="#E5E5E5"> they would never spend their</font>

1227
00:43:49,460 --> 00:43:54,440
time doing<font color="#CCCCCC"> anything</font><font color="#E5E5E5"> else so this is a</font>

1228
00:43:51,049 --> 00:43:55,819
nice way to let developers<font color="#E5E5E5"> go forward</font>

1229
00:43:54,440 --> 00:43:57,770
and build what they<font color="#CCCCCC"> want to build while</font>

1230
00:43:55,819 --> 00:43:59,599
<font color="#E5E5E5">at the same time with</font><font color="#CCCCCC"> minimal to even no</font>

1231
00:43:57,770 --> 00:44:00,589
security team interaction<font color="#CCCCCC"> all of the</font>

1232
00:43:59,599 --> 00:44:03,470
apps that are<font color="#CCCCCC"> being released</font><font color="#E5E5E5"> are</font>

1233
00:44:00,589 --> 00:44:05,150
gradually becoming sort of a steady

1234
00:44:03,470 --> 00:44:07,098
state<font color="#CCCCCC"> of</font><font color="#E5E5E5"> least</font><font color="#CCCCCC"> privilege so I think this</font>

1235
00:44:05,150 --> 00:44:08,540
<font color="#E5E5E5">is a really cool idea and I think that</font>

1236
00:44:07,099 --> 00:44:10,350
it can<font color="#CCCCCC"> be applied in</font><font color="#E5E5E5"> other places that</font>

1237
00:44:08,540 --> 00:44:12,360
we haven't seen<font color="#E5E5E5"> yet</font>

1238
00:44:10,350 --> 00:44:14,009
and the second one is chaos monkey<font color="#E5E5E5"> I</font>

1239
00:44:12,360 --> 00:44:16,410
think most<font color="#E5E5E5"> people have heard</font><font color="#CCCCCC"> about</font><font color="#E5E5E5"> this</font>

1240
00:44:14,010 --> 00:44:18,390
but<font color="#CCCCCC"> just to quickly</font><font color="#E5E5E5"> mention it</font><font color="#CCCCCC"> basically</font>

1241
00:44:16,410 --> 00:44:19,980
they<font color="#CCCCCC"> force developers to build robust</font>

1242
00:44:18,390 --> 00:44:22,650
apps from<font color="#E5E5E5"> the beginning by randomly</font>

1243
00:44:19,980 --> 00:44:24,480
shutting off AWS instances of a given

1244
00:44:22,650 --> 00:44:27,030
service<font color="#E5E5E5"> and what I think what's nice</font>

1245
00:44:24,480 --> 00:44:27,990
about this<font color="#E5E5E5"> is to sort of step</font><font color="#CCCCCC"> back</font><font color="#E5E5E5"> for a</font>

1246
00:44:27,030 --> 00:44:30,080
second<font color="#E5E5E5"> and think like what's the</font>

1247
00:44:27,990 --> 00:44:32,250
principle<font color="#E5E5E5"> here</font><font color="#CCCCCC"> I think a lot of times</font>

1248
00:44:30,080 --> 00:44:33,900
<font color="#E5E5E5">security comes from the point</font><font color="#CCCCCC"> of view of</font>

1249
00:44:32,250 --> 00:44:35,130
developers spend a lot of<font color="#E5E5E5"> time</font><font color="#CCCCCC"> building</font>

1250
00:44:33,900 --> 00:44:37,050
something<font color="#E5E5E5"> and then we come</font><font color="#CCCCCC"> into</font><font color="#E5E5E5"> last</font>

1251
00:44:35,130 --> 00:44:38,460
<font color="#E5E5E5">minute and say hey</font><font color="#CCCCCC"> actually you need</font><font color="#E5E5E5"> to</font>

1252
00:44:37,050 --> 00:44:40,320
also<font color="#CCCCCC"> make it</font><font color="#E5E5E5"> secure it needs to do this</font>

1253
00:44:38,460 --> 00:44:41,400
and adds all these requirements<font color="#CCCCCC"> sort</font><font color="#E5E5E5"> of</font>

1254
00:44:40,320 --> 00:44:43,290
after they've<font color="#E5E5E5"> already done all the</font><font color="#CCCCCC"> work</font>

1255
00:44:41,400 --> 00:44:44,850
<font color="#E5E5E5">and at that point it's a lot of extra</font>

1256
00:44:43,290 --> 00:44:47,850
effort<font color="#E5E5E5"> for them to change it but by</font>

1257
00:44:44,850 --> 00:44:49,680
making expectations explicit and also

1258
00:44:47,850 --> 00:44:52,470
enforced programmatically as soon as the

1259
00:44:49,680 --> 00:44:54,359
development<font color="#CCCCCC"> process as possible it makes</font>

1260
00:44:52,470 --> 00:44:59,339
it be a lot less<font color="#E5E5E5"> work because it's just</font>

1261
00:44:54,360 --> 00:45:04,740
an expectation from<font color="#E5E5E5"> the beginning</font><font color="#CCCCCC"> okay</font>

1262
00:44:59,340 --> 00:45:07,560
last things so what are some<font color="#CCCCCC"> ideas for</font>

1263
00:45:04,740 --> 00:45:09,060
detecting attacks in production one idea

1264
00:45:07,560 --> 00:45:11,220
some companies<font color="#CCCCCC"> are doing</font><font color="#E5E5E5"> is having</font><font color="#CCCCCC"> the</font>

1265
00:45:09,060 --> 00:45:13,140
<font color="#CCCCCC">idea of</font><font color="#E5E5E5"> Canaries so on servers or</font>

1266
00:45:11,220 --> 00:45:16,230
laptops having things that<font color="#E5E5E5"> look very</font>

1267
00:45:13,140 --> 00:45:18,240
juicy and exciting<font color="#E5E5E5"> to attackers such as</font>

1268
00:45:16,230 --> 00:45:20,160
AWS access tokens files that look like<font color="#CCCCCC"> I</font>

1269
00:45:18,240 --> 00:45:21,540
<font color="#E5E5E5">have credit cards things like that but</font>

1270
00:45:20,160 --> 00:45:24,170
essentially heavy monitoring in place

1271
00:45:21,540 --> 00:45:26,360
<font color="#CCCCCC">such that if anyone</font><font color="#E5E5E5"> ever touches those</font>

1272
00:45:24,170 --> 00:45:30,150
you know alert

1273
00:45:26,360 --> 00:45:32,490
similarly on<font color="#E5E5E5"> websites for login pages or</font>

1274
00:45:30,150 --> 00:45:35,370
company logos a number of companies<font color="#CCCCCC"> have</font>

1275
00:45:32,490 --> 00:45:37,229
some extra like HTML and CSS<font color="#E5E5E5"> and</font>

1276
00:45:35,370 --> 00:45:38,970
JavaScript such that if someone were to

1277
00:45:37,230 --> 00:45:40,980
<font color="#E5E5E5">copy that directly and put it on a</font>

1278
00:45:38,970 --> 00:45:42,720
separate phishing page it<font color="#E5E5E5"> actually sends</font>

1279
00:45:40,980 --> 00:45:45,240
some subtle telemetry back to the

1280
00:45:42,720 --> 00:45:47,399
<font color="#E5E5E5">company saying hey someone is copying</font>

1281
00:45:45,240 --> 00:45:49,319
<font color="#E5E5E5">your login page it's running on this IP</font>

1282
00:45:47,400 --> 00:45:51,210
<font color="#E5E5E5">address on this host and essentially you</font>

1283
00:45:49,320 --> 00:45:52,740
can<font color="#E5E5E5"> sort of see in real</font><font color="#CCCCCC"> time if someone</font>

1284
00:45:51,210 --> 00:45:54,900
<font color="#E5E5E5">isn't</font><font color="#CCCCCC"> careful about setting up a</font>

1285
00:45:52,740 --> 00:45:56,759
phishing site for your<font color="#E5E5E5"> page and they</font>

1286
00:45:54,900 --> 00:45:58,340
have caught people doing that in

1287
00:45:56,760 --> 00:46:00,990
practice so I think<font color="#E5E5E5"> that's</font><font color="#CCCCCC"> pretty neat</font>

1288
00:45:58,340 --> 00:46:02,940
and<font color="#E5E5E5"> then finally there's this</font><font color="#CCCCCC"> Canaria</font>

1289
00:46:00,990 --> 00:46:04,560
token site<font color="#CCCCCC"> I haven't used it but I hear</font>

1290
00:46:02,940 --> 00:46:06,540
good things that<font color="#E5E5E5"> sort of generates new</font>

1291
00:46:04,560 --> 00:46:08,940
canary tokens that<font color="#E5E5E5"> you</font><font color="#CCCCCC"> can place and</font>

1292
00:46:06,540 --> 00:46:10,470
<font color="#CCCCCC">it'll</font><font color="#E5E5E5"> tell you when they're used</font><font color="#CCCCCC"> so next</font>

1293
00:46:08,940 --> 00:46:12,930
idea overriding the runtime environment

1294
00:46:10,470 --> 00:46:14,250
<font color="#CCCCCC">to detect code injection</font><font color="#E5E5E5"> so if you think</font>

1295
00:46:12,930 --> 00:46:16,859
<font color="#E5E5E5">about cross-site scripting what is it</font>

1296
00:46:14,250 --> 00:46:20,070
it's your error inserting<font color="#E5E5E5"> JavaScript</font>

1297
00:46:16,860 --> 00:46:22,560
<font color="#E5E5E5">that's being executed so sort</font><font color="#CCCCCC"> of a code</font>

1298
00:46:20,070 --> 00:46:23,430
<font color="#CCCCCC">injection of</font><font color="#E5E5E5"> JavaScript so one company</font>

1299
00:46:22,560 --> 00:46:24,808
<font color="#CCCCCC">rely</font>

1300
00:46:23,430 --> 00:46:27,180
they looked at<font color="#E5E5E5"> all their</font><font color="#CCCCCC"> front-end code</font>

1301
00:46:24,809 --> 00:46:28,859
and said<font color="#CCCCCC"> ho we</font><font color="#E5E5E5"> don't actually use alert</font>

1302
00:46:27,180 --> 00:46:31,558
<font color="#E5E5E5">anywhere on purpose</font>

1303
00:46:28,859 --> 00:46:33,299
so essentially what<font color="#E5E5E5"> their</font><font color="#CCCCCC"> JavaScript</font>

1304
00:46:31,559 --> 00:46:35,819
does is they override the alert<font color="#CCCCCC"> method</font>

1305
00:46:33,299 --> 00:46:37,829
such that if any attacker puts in a

1306
00:46:35,819 --> 00:46:40,140
cross-site scripting payload<font color="#CCCCCC"> before the</font>

1307
00:46:37,829 --> 00:46:42,180
alert<font color="#E5E5E5"> box comes out instead it sends a</font>

1308
00:46:40,140 --> 00:46:44,129
very<font color="#CCCCCC"> subtle innocuous-looking</font><font color="#E5E5E5"> telemetry</font>

1309
00:46:42,180 --> 00:46:46,950
<font color="#E5E5E5">back to the security team server and</font>

1310
00:46:44,130 --> 00:46:49,710
says hey<font color="#E5E5E5"> you know this user of this page</font>

1311
00:46:46,950 --> 00:46:51,299
this parameter or this IP<font color="#CCCCCC"> address was</font>

1312
00:46:49,710 --> 00:46:52,650
just successfully able<font color="#E5E5E5"> to run</font><font color="#CCCCCC"> JavaScript</font>

1313
00:46:51,299 --> 00:46:54,089
<font color="#E5E5E5">you should probably take a look</font><font color="#CCCCCC"> at it</font>

1314
00:46:52,650 --> 00:46:56,490
and then after it<font color="#E5E5E5"> does that it then</font>

1315
00:46:54,089 --> 00:46:58,920
shows<font color="#CCCCCC"> the alert box so unless the</font>

1316
00:46:56,490 --> 00:47:00,720
attacker is very cognizant<font color="#E5E5E5"> about all the</font>

1317
00:46:58,920 --> 00:47:03,839
different<font color="#CCCCCC"> Network requests the the</font>

1318
00:47:00,720 --> 00:47:06,118
observable behavior to them is the<font color="#E5E5E5"> same</font>

1319
00:47:03,839 --> 00:47:08,460
so they actually<font color="#E5E5E5"> said they had a bug</font>

1320
00:47:06,119 --> 00:47:10,440
bounty security researcher find a

1321
00:47:08,460 --> 00:47:12,329
cross-site scripting vulnerability on

1322
00:47:10,440 --> 00:47:14,910
one<font color="#CCCCCC"> of their sites</font><font color="#E5E5E5"> and they saw it</font>

1323
00:47:12,329 --> 00:47:17,900
<font color="#E5E5E5">immediately</font><font color="#CCCCCC"> and</font><font color="#E5E5E5"> they actually patched it</font>

1324
00:47:14,910 --> 00:47:22,410
before the<font color="#E5E5E5"> person filed the bug bounty</font>

1325
00:47:17,900 --> 00:47:25,109
<font color="#CCCCCC">so yeah I think they still paid it</font><font color="#E5E5E5"> out</font>

1326
00:47:22,410 --> 00:47:26,848
because<font color="#E5E5E5"> they were nice and and Zane</font>

1327
00:47:25,109 --> 00:47:29,509
<font color="#E5E5E5">Lackey also talks about</font><font color="#CCCCCC"> this</font><font color="#E5E5E5"> when he was</font>

1328
00:47:26,849 --> 00:47:32,369
at Etsy but<font color="#E5E5E5"> this was a</font><font color="#CCCCCC"> different company</font>

1329
00:47:29,510 --> 00:47:34,410
<font color="#CCCCCC">so</font><font color="#E5E5E5"> similarly if you're writing</font><font color="#CCCCCC"> code</font><font color="#E5E5E5"> in</font>

1330
00:47:32,369 --> 00:47:36,119
dynamic languages like Ruby or Python<font color="#E5E5E5"> in</font>

1331
00:47:34,410 --> 00:47:37,470
<font color="#CCCCCC">your writing a micro service that</font>

1332
00:47:36,119 --> 00:47:40,200
doesn't<font color="#CCCCCC"> need</font><font color="#E5E5E5"> to write to</font><font color="#CCCCCC"> the file system</font>

1333
00:47:37,470 --> 00:47:41,339
<font color="#E5E5E5">maybe overwrite the file</font><font color="#CCCCCC"> write</font><font color="#E5E5E5"> methods</font>

1334
00:47:40,200 --> 00:47:43,288
such that if someone<font color="#E5E5E5"> tries to write to</font>

1335
00:47:41,339 --> 00:47:44,390
the file system<font color="#E5E5E5"> again send telemetry</font>

1336
00:47:43,289 --> 00:47:47,220
back to your server

1337
00:47:44,390 --> 00:47:48,569
<font color="#CCCCCC">the security team server and then</font><font color="#E5E5E5"> raise</font>

1338
00:47:47,220 --> 00:47:54,359
<font color="#E5E5E5">an exception or maybe fail</font><font color="#CCCCCC"> silently</font>

1339
00:47:48,569 --> 00:47:57,299
<font color="#E5E5E5">things like that so again a company</font>

1340
00:47:54,359 --> 00:48:00,509
wrote an XML parser<font color="#E5E5E5"> to make it very safe</font>

1341
00:47:57,299 --> 00:48:02,520
and<font color="#E5E5E5"> not vulnerable to xxe and they did</font>

1342
00:48:00,510 --> 00:48:04,859
<font color="#E5E5E5">that by making it a drop-in replacement</font>

1343
00:48:02,520 --> 00:48:06,480
<font color="#CCCCCC">so it had the same</font><font color="#E5E5E5"> functioning signature</font>

1344
00:48:04,859 --> 00:48:09,180
and again it provided something<font color="#CCCCCC"> the</font>

1345
00:48:06,480 --> 00:48:11,010
<font color="#E5E5E5">developers wanted which is telemetry</font><font color="#CCCCCC"> and</font>

1346
00:48:09,180 --> 00:48:13,950
then finally a<font color="#CCCCCC"> number</font><font color="#E5E5E5"> of security tools</font>

1347
00:48:11,010 --> 00:48:15,990
have tool specific user agents if you

1348
00:48:13,950 --> 00:48:17,399
don't configure it so<font color="#CCCCCC"> sequel map for</font>

1349
00:48:15,990 --> 00:48:20,490
<font color="#CCCCCC">example if you</font><font color="#E5E5E5"> don't specify the user</font>

1350
00:48:17,400 --> 00:48:22,049
agent flag<font color="#CCCCCC"> we'll say</font><font color="#E5E5E5"> it's sequel map so</font>

1351
00:48:20,490 --> 00:48:23,939
you<font color="#E5E5E5"> could configure web application</font>

1352
00:48:22,049 --> 00:48:27,000
server to say hey this known security

1353
00:48:23,940 --> 00:48:29,789
<font color="#E5E5E5">tool user agent is browsing our site</font>

1354
00:48:27,000 --> 00:48:31,980
probably it's someone testing us<font color="#E5E5E5"> right</font>

1355
00:48:29,789 --> 00:48:36,020
and you<font color="#CCCCCC"> can also</font><font color="#E5E5E5"> look for</font><font color="#CCCCCC"> references to</font>

1356
00:48:31,980 --> 00:48:36,020
a<font color="#CCCCCC"> burp collaborator</font><font color="#E5E5E5"> and so forth</font>

1357
00:48:36,550 --> 00:48:41,780
<font color="#CCCCCC">all right so two</font><font color="#E5E5E5"> things before questions</font>

1358
00:48:39,440 --> 00:48:43,960
so I'm attempting<font color="#E5E5E5"> to build a best</font>

1359
00:48:41,780 --> 00:48:46,010
practices<font color="#CCCCCC"> sort</font><font color="#E5E5E5"> of</font><font color="#CCCCCC"> pro tips playbook</font>

1360
00:48:43,960 --> 00:48:47,390
<font color="#E5E5E5">about all these things and a couple</font><font color="#CCCCCC"> more</font>

1361
00:48:46,010 --> 00:48:49,250
<font color="#E5E5E5">that I didn't have time to talk about so</font>

1362
00:48:47,390 --> 00:48:52,430
I would love to<font color="#E5E5E5"> hear anything and</font><font color="#CCCCCC"> meet</font>

1363
00:48:49,250 --> 00:48:53,870
that your company<font color="#CCCCCC"> is doing I think a lot</font>

1364
00:48:52,430 --> 00:48:55,609
<font color="#CCCCCC">of everything</font><font color="#E5E5E5"> I've mentioned today has</font>

1365
00:48:53,870 --> 00:48:57,350
basically been a result<font color="#CCCCCC"> of conversations</font>

1366
00:48:55,610 --> 00:48:59,000
with various<font color="#E5E5E5"> people so I'd love to hear</font>

1367
00:48:57,350 --> 00:49:00,319
<font color="#E5E5E5">what you have to say and also I'm</font>

1368
00:48:59,000 --> 00:49:02,630
<font color="#E5E5E5">starting to</font><font color="#CCCCCC"> build</font><font color="#E5E5E5"> some tooling that's</font>

1369
00:49:00,320 --> 00:49:04,880
aimed at making writing custom static

1370
00:49:02,630 --> 00:49:06,200
analysis checks easier<font color="#CCCCCC"> so if you have</font>

1371
00:49:04,880 --> 00:49:08,060
like<font color="#E5E5E5"> oh man I really wish I had</font>

1372
00:49:06,200 --> 00:49:10,100
<font color="#CCCCCC">something that</font><font color="#E5E5E5"> did this please let</font><font color="#CCCCCC"> me</font>

1373
00:49:08,060 --> 00:49:17,360
<font color="#E5E5E5">know yeah that's all I have</font><font color="#CCCCCC"> thank</font><font color="#E5E5E5"> you</font>

1374
00:49:10,100 --> 00:49:19,100
very much for<font color="#E5E5E5"> your time yeah I might</font>

1375
00:49:17,360 --> 00:49:25,970
have<font color="#E5E5E5"> time</font><font color="#CCCCCC"> for</font><font color="#E5E5E5"> like one or</font><font color="#CCCCCC"> one and a half</font>

1376
00:49:19,100 --> 00:49:28,520
<font color="#CCCCCC">questions yeah great presentation thank</font>

1377
00:49:25,970 --> 00:49:30,439
you how do you<font color="#CCCCCC"> have you guys</font><font color="#E5E5E5"> have you</font>

1378
00:49:28,520 --> 00:49:32,570
talked<font color="#E5E5E5"> to folks that are trying</font><font color="#CCCCCC"> to do</font>

1379
00:49:30,440 --> 00:49:35,870
the kind<font color="#CCCCCC"> of like the code analysis</font>

1380
00:49:32,570 --> 00:49:37,640
problem the whole<font color="#CCCCCC"> spectrum for a very</font>

1381
00:49:35,870 --> 00:49:41,000
polyglot environment like how are<font color="#E5E5E5"> they</font>

1382
00:49:37,640 --> 00:49:42,500
doing<font color="#E5E5E5"> that yeah so the</font><font color="#CCCCCC"> question is is</font>

1383
00:49:41,000 --> 00:49:44,210
<font color="#E5E5E5">anyone trying to roll static analysis</font>

1384
00:49:42,500 --> 00:49:47,810
out to a polyglot environment where many

1385
00:49:44,210 --> 00:49:48,830
languages are present<font color="#E5E5E5"> yeah so there's a</font>

1386
00:49:47,810 --> 00:49:50,750
couple<font color="#CCCCCC"> different ways</font><font color="#E5E5E5"> you</font><font color="#CCCCCC"> can do that</font>

1387
00:49:48,830 --> 00:49:53,990
some commercial tools<font color="#E5E5E5"> support many</font>

1388
00:49:50,750 --> 00:49:57,080
languages<font color="#CCCCCC"> to varying successes I think</font>

1389
00:49:53,990 --> 00:49:59,359
in practice<font color="#CCCCCC"> and then if you're building</font>

1390
00:49:57,080 --> 00:50:01,670
tooling that's a black box<font color="#E5E5E5"> web app</font>

1391
00:49:59,360 --> 00:50:04,310
testing then you don't necessarily<font color="#E5E5E5"> care</font>

1392
00:50:01,670 --> 00:50:08,390
about<font color="#E5E5E5"> the underlying languages but yeah</font>

1393
00:50:04,310 --> 00:50:10,009
I think<font color="#E5E5E5"> that's a mediocre answer</font><font color="#CCCCCC"> but but</font>

1394
00:50:08,390 --> 00:50:13,690
yeah I guess<font color="#E5E5E5"> that's all I've seen</font>

1395
00:50:10,010 --> 00:50:15,650
<font color="#CCCCCC">personally</font><font color="#E5E5E5"> yeah let's</font><font color="#CCCCCC"> talk more about it</font>

1396
00:50:13,690 --> 00:50:18,560
all right with that

1397
00:50:15,650 --> 00:50:21,820
elegant<font color="#CCCCCC"> Harold yeah feel free to come up</font>

1398
00:50:18,560 --> 00:50:21,820
<font color="#E5E5E5">in let's fetch thanks for your time</font>

1399
00:50:23,970 --> 00:50:33,049
[Music]

