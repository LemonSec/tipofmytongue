1
00:00:01,420 --> 00:00:05,630
[Music]

2
00:00:05,839 --> 00:00:07,759
thank you very much

3
00:00:07,759 --> 00:00:09,760
right good afternoon everyone i'm

4
00:00:09,760 --> 00:00:11,440
presuming it is afternoon for most

5
00:00:11,440 --> 00:00:12,400
people

6
00:00:12,400 --> 00:00:15,440
um yep as matt said my name's um adrian

7
00:00:15,440 --> 00:00:16,720
winkles

8
00:00:16,720 --> 00:00:18,320
and i'm talking about

9
00:00:18,320 --> 00:00:20,400
web application honeypot threat

10
00:00:20,400 --> 00:00:23,038
intelligence

11
00:00:24,240 --> 00:00:26,480
so just a bit about myself yeah i'm the

12
00:00:26,480 --> 00:00:27,760
director of the cyber security and

13
00:00:27,760 --> 00:00:29,519
networking research group at anglia

14
00:00:29,519 --> 00:00:31,359
ruskin university in cambridge and yes

15
00:00:31,359 --> 00:00:33,520
with the other university not not the

16
00:00:33,520 --> 00:00:34,480
big one

17
00:00:34,480 --> 00:00:36,640
and yet to answer matt's question i've

18
00:00:36,640 --> 00:00:40,000
been around oh wes since about

19
00:00:40,000 --> 00:00:43,120
2011 2012

20
00:00:43,120 --> 00:00:45,120
and my first absent conference was

21
00:00:45,120 --> 00:00:46,719
dublin um

22
00:00:46,719 --> 00:00:48,160
one of those years

23
00:00:48,160 --> 00:00:51,680
yep i'm an os europe board member and

24
00:00:51,680 --> 00:00:53,120
i'm project leader for a couple of

25
00:00:53,120 --> 00:00:54,559
different projects

26
00:00:54,559 --> 00:00:55,600
um

27
00:00:55,600 --> 00:00:57,039
the web honeypot project i'm talking

28
00:00:57,039 --> 00:00:59,840
about today and the application security

29
00:00:59,840 --> 00:01:02,160
quicksand project i talked about our

30
00:01:02,160 --> 00:01:04,799
previous to this one

31
00:01:04,799 --> 00:01:07,119
and i also sit on a number of other

32
00:01:07,119 --> 00:01:08,640
industry forums which probably aren't

33
00:01:08,640 --> 00:01:10,840
relevant here

34
00:01:10,840 --> 00:01:15,360
so first question i pose is why oh worst

35
00:01:15,360 --> 00:01:16,880
web honeypots

36
00:01:16,880 --> 00:01:17,920
well

37
00:01:17,920 --> 00:01:20,000
a lot of the stuff that we're talking

38
00:01:20,000 --> 00:01:21,119
about

39
00:01:21,119 --> 00:01:22,880
for absolute usa

40
00:01:22,880 --> 00:01:23,840
today

41
00:01:23,840 --> 00:01:26,320
is going to be around obviously

42
00:01:26,320 --> 00:01:28,080
web applications

43
00:01:28,080 --> 00:01:31,280
secure http

44
00:01:32,079 --> 00:01:32,960
but

45
00:01:32,960 --> 00:01:35,119
we also talk about cloud but many of the

46
00:01:35,119 --> 00:01:37,680
sas offerings we have of course are

47
00:01:37,680 --> 00:01:41,479
fronted by web applications

48
00:01:42,000 --> 00:01:44,000
if you think about organizations like

49
00:01:44,000 --> 00:01:46,159
cada the center for applied internet

50
00:01:46,159 --> 00:01:47,600
data analysis

51
00:01:47,600 --> 00:01:49,759
web still

52
00:01:49,759 --> 00:01:52,159
accounts for about 85

53
00:01:52,159 --> 00:01:56,479
of total internet traffic so

54
00:01:56,719 --> 00:01:58,399
a lot of what you want from threat

55
00:01:58,399 --> 00:02:00,880
intelligence is gonna be

56
00:02:00,880 --> 00:02:03,199
web

57
00:02:07,680 --> 00:02:09,280
of related

58
00:02:09,280 --> 00:02:12,160
we've moved on from the simple

59
00:02:12,160 --> 00:02:13,200
um

60
00:02:13,200 --> 00:02:14,800
stateless

61
00:02:14,800 --> 00:02:16,640
http

62
00:02:16,640 --> 00:02:20,160
get and response

63
00:02:20,879 --> 00:02:23,120
generally our web architectures are

64
00:02:23,120 --> 00:02:25,360
becoming more complicated

65
00:02:25,360 --> 00:02:28,560
that also means that we have complexity

66
00:02:28,560 --> 00:02:30,239
if we have complexity we're going to

67
00:02:30,239 --> 00:02:32,920
have complicated

68
00:02:32,920 --> 00:02:36,080
attacks um

69
00:02:36,080 --> 00:02:38,720
also means that

70
00:02:38,720 --> 00:02:40,879
even if there are attacks that only work

71
00:02:40,879 --> 00:02:44,400
on a tiny tiny tiny percentage

72
00:02:44,400 --> 00:02:45,680
of

73
00:02:45,680 --> 00:02:46,720
systems

74
00:02:46,720 --> 00:02:49,599
they are still valuable

75
00:02:49,599 --> 00:02:51,599
because the vulnerability that those

76
00:02:51,599 --> 00:02:54,560
that tiny tiny percentage throws up

77
00:02:54,560 --> 00:02:55,599
is

78
00:02:55,599 --> 00:02:58,400
um going to be exploitable

79
00:02:58,400 --> 00:02:59,519
on a

80
00:02:59,519 --> 00:03:01,840
number of systems probably for large

81
00:03:01,840 --> 00:03:05,519
organizations with quite devastating

82
00:03:05,519 --> 00:03:06,400
um

83
00:03:06,400 --> 00:03:07,760
financial

84
00:03:07,760 --> 00:03:09,440
reputational

85
00:03:09,440 --> 00:03:11,280
um

86
00:03:11,280 --> 00:03:13,680
loss of business all kinds of different

87
00:03:13,680 --> 00:03:15,440
aspects

88
00:03:15,440 --> 00:03:17,120
so that the point

89
00:03:17,120 --> 00:03:20,080
i guess i'm making is

90
00:03:20,159 --> 00:03:22,400
we have a complexity problem

91
00:03:22,400 --> 00:03:25,440
we have lots of different

92
00:03:25,440 --> 00:03:26,959
technologies

93
00:03:26,959 --> 00:03:29,440
in our dev environments not just for the

94
00:03:29,440 --> 00:03:32,640
web application but we have mobile

95
00:03:32,640 --> 00:03:34,879
we have voice we have web services we

96
00:03:34,879 --> 00:03:36,720
have semantic web

97
00:03:36,720 --> 00:03:39,120
we have all the privacy and security

98
00:03:39,120 --> 00:03:42,319
considerations and we build on top

99
00:03:42,319 --> 00:03:44,640
of a stack

100
00:03:44,640 --> 00:03:48,319
we still have x query xpath

101
00:03:48,319 --> 00:03:49,599
dom

102
00:03:49,599 --> 00:03:51,760
we have web architecture principles we

103
00:03:51,760 --> 00:03:53,040
still have the

104
00:03:53,040 --> 00:03:57,599
url http and it's all one web

105
00:03:57,599 --> 00:03:59,599
and it's all sitting on the same

106
00:03:59,599 --> 00:04:01,680
internet

107
00:04:01,680 --> 00:04:02,720
we have a

108
00:04:02,720 --> 00:04:06,560
is we have a wide diversity of attacks

109
00:04:06,560 --> 00:04:09,360
we have attacker on a server we have so

110
00:04:09,360 --> 00:04:11,040
server-side attacks we have client-side

111
00:04:11,040 --> 00:04:13,920
attacks we have attacks on side via

112
00:04:13,920 --> 00:04:16,478
server side we have tax on server side

113
00:04:16,478 --> 00:04:18,880
via server side we have attacks on

114
00:04:18,880 --> 00:04:20,478
intermediary

115
00:04:20,478 --> 00:04:23,199
uh we have proxy systems

116
00:04:23,199 --> 00:04:25,120
the complexity

117
00:04:25,120 --> 00:04:27,440
goes on

118
00:04:27,440 --> 00:04:28,479
now

119
00:04:28,479 --> 00:04:31,120
one of the problems we've had typically

120
00:04:31,120 --> 00:04:33,120
with

121
00:04:33,120 --> 00:04:35,040
um

122
00:04:35,040 --> 00:04:36,800
web applications

123
00:04:36,800 --> 00:04:38,000
is that

124
00:04:38,000 --> 00:04:40,240
we'll consider the web server

125
00:04:40,240 --> 00:04:42,400
to be trusted

126
00:04:42,400 --> 00:04:45,199
but we still give

127
00:04:45,199 --> 00:04:48,400
that trust to our backend database

128
00:04:48,400 --> 00:04:50,320
hence the reason that things like sql

129
00:04:50,320 --> 00:04:52,320
injection attacks can be

130
00:04:52,320 --> 00:04:54,560
propagated through a url

131
00:04:54,560 --> 00:04:57,440
or for form entry and attacking the sql

132
00:04:57,440 --> 00:04:58,400
um

133
00:04:58,400 --> 00:05:01,520
interpreter behind it

134
00:05:01,919 --> 00:05:03,039
and

135
00:05:03,039 --> 00:05:04,960
we open the port we open

136
00:05:04,960 --> 00:05:07,600
portality port 443

137
00:05:07,600 --> 00:05:10,639
or whatever report we happen to be using

138
00:05:10,639 --> 00:05:12,240
um

139
00:05:12,240 --> 00:05:14,160
and our normal firewalls and all these

140
00:05:14,160 --> 00:05:15,039
things

141
00:05:15,039 --> 00:05:16,560
don't

142
00:05:16,560 --> 00:05:18,720
generally detect the attacks

143
00:05:18,720 --> 00:05:21,759
because the ports open

144
00:05:22,639 --> 00:05:25,600
this is obviously led to the use of um

145
00:05:25,600 --> 00:05:28,880
the waff the web application firewall

146
00:05:28,880 --> 00:05:29,680
um

147
00:05:29,680 --> 00:05:33,919
because it is designed to identify um to

148
00:05:33,919 --> 00:05:35,600
block malicious traffic requests it's

149
00:05:35,600 --> 00:05:38,720
gonna look inside the http

150
00:05:38,720 --> 00:05:41,199
request for the http response

151
00:05:41,199 --> 00:05:42,080
and

152
00:05:42,080 --> 00:05:43,919
will be sit there between the user

153
00:05:43,919 --> 00:05:48,160
requests and the web application server

154
00:05:48,160 --> 00:05:49,759
so the waf

155
00:05:49,759 --> 00:05:53,039
for any organization that is seriously

156
00:05:53,039 --> 00:05:55,280
utilizing web applications

157
00:05:55,280 --> 00:05:56,160
is

158
00:05:56,160 --> 00:05:57,919
part of their swiss cheese

159
00:05:57,919 --> 00:05:59,759
it's not it's one of their layers of

160
00:05:59,759 --> 00:06:02,720
security their defense and depth but is

161
00:06:02,720 --> 00:06:04,720
something that we can perhaps utilize to

162
00:06:04,720 --> 00:06:06,960
give us more sort of threat intelligence

163
00:06:06,960 --> 00:06:08,560
so

164
00:06:08,560 --> 00:06:13,039
can we use a waffle honeypot or a probe

165
00:06:13,039 --> 00:06:15,520
now the beauty of waff is they can be

166
00:06:15,520 --> 00:06:17,280
placed in several different places in a

167
00:06:17,280 --> 00:06:19,280
network

168
00:06:19,280 --> 00:06:21,440
they can be inline they can be out of

169
00:06:21,440 --> 00:06:24,319
line very often they're on the web

170
00:06:24,319 --> 00:06:26,800
server

171
00:06:27,199 --> 00:06:29,600
and that gives us

172
00:06:29,600 --> 00:06:30,960
potentially

173
00:06:30,960 --> 00:06:32,000
a

174
00:06:32,000 --> 00:06:32,960
use

175
00:06:32,960 --> 00:06:35,280
for our honeypot

176
00:06:35,280 --> 00:06:36,720
they might use different technologies

177
00:06:36,720 --> 00:06:38,720
they might be signature based or

178
00:06:38,720 --> 00:06:41,520
heuristics based

179
00:06:42,160 --> 00:06:45,360
often driven by pci dss requirements

180
00:06:45,360 --> 00:06:49,720
against an approved security control

181
00:06:52,960 --> 00:06:55,840
but sometimes well

182
00:06:55,840 --> 00:06:57,599
isn't an ids

183
00:06:57,599 --> 00:07:00,560
a similar device

184
00:07:00,960 --> 00:07:03,680
yes and no

185
00:07:03,680 --> 00:07:05,199
um

186
00:07:05,199 --> 00:07:06,560
an ids

187
00:07:06,560 --> 00:07:07,919
looks at

188
00:07:07,919 --> 00:07:10,800
all traffic that go past the wire

189
00:07:10,800 --> 00:07:13,360
a wife is looking specifically at web

190
00:07:13,360 --> 00:07:15,120
traffic

191
00:07:15,120 --> 00:07:17,440
and the

192
00:07:17,440 --> 00:07:20,080
traditional way is putting a waff in

193
00:07:20,080 --> 00:07:23,360
front of your web application server

194
00:07:23,360 --> 00:07:25,360
um

195
00:07:25,360 --> 00:07:27,840
so there's not actually an application

196
00:07:27,840 --> 00:07:31,280
for an ids to protect ideas is more

197
00:07:31,280 --> 00:07:33,840
generalistic

198
00:07:33,840 --> 00:07:37,280
now if you can combine the waff

199
00:07:37,280 --> 00:07:40,720
with a web application or web server

200
00:07:40,720 --> 00:07:41,680
so that

201
00:07:41,680 --> 00:07:42,880
your

202
00:07:42,880 --> 00:07:46,000
attacker the person you're trying to

203
00:07:46,000 --> 00:07:47,759
deceive

204
00:07:47,759 --> 00:07:49,520
into thinking that you've got something

205
00:07:49,520 --> 00:07:51,440
real that you want them to attack

206
00:07:51,440 --> 00:07:53,599
that web server

207
00:07:53,599 --> 00:07:55,759
that web application server

208
00:07:55,759 --> 00:07:59,280
can have the waff attached to it

209
00:07:59,280 --> 00:08:02,878
so it's just something to think about

210
00:08:06,000 --> 00:08:08,160
obviously one of the difficult areas

211
00:08:08,160 --> 00:08:09,599
we've talked about

212
00:08:09,599 --> 00:08:11,199
any sort of firewall is

213
00:08:11,199 --> 00:08:14,800
having to write the rules yourself

214
00:08:14,879 --> 00:08:16,160
um

215
00:08:16,160 --> 00:08:19,919
writing effective rules for

216
00:08:19,919 --> 00:08:21,840
firewalls for ids's or anything like

217
00:08:21,840 --> 00:08:24,000
that it's hard working people like to

218
00:08:24,000 --> 00:08:26,960
have a standard base

219
00:08:26,960 --> 00:08:29,680
to start from

220
00:08:29,759 --> 00:08:31,759
um

221
00:08:31,759 --> 00:08:33,279
this is sort of where

222
00:08:33,279 --> 00:08:35,839
our crs comes in

223
00:08:35,839 --> 00:08:38,640
core rule set

224
00:08:38,839 --> 00:08:41,360
because the main

225
00:08:41,360 --> 00:08:42,640
open source

226
00:08:42,640 --> 00:08:44,640
web application firewall

227
00:08:44,640 --> 00:08:46,240
is mod security

228
00:08:46,240 --> 00:08:47,279
again

229
00:08:47,279 --> 00:08:50,560
it's almost been around 20 years

230
00:08:50,560 --> 00:08:51,440
um

231
00:08:51,440 --> 00:08:52,640
again i

232
00:08:52,640 --> 00:08:54,959
think we're currently on version 2.9.1

233
00:08:54,959 --> 00:08:57,120
that might be slightly update version

234
00:08:57,120 --> 00:08:58,320
three

235
00:08:58,320 --> 00:08:59,760
is beckoning

236
00:08:59,760 --> 00:09:01,920
um

237
00:09:01,920 --> 00:09:03,760
mod security

238
00:09:03,760 --> 00:09:05,920
is

239
00:09:05,920 --> 00:09:09,839
often bundled with apache

240
00:09:09,839 --> 00:09:12,160
uh works within genetics as far as i'm

241
00:09:12,160 --> 00:09:14,080
aware um

242
00:09:14,080 --> 00:09:16,480
but the fact that we have a core rule

243
00:09:16,480 --> 00:09:18,160
set

244
00:09:18,160 --> 00:09:20,000
which is on version three point

245
00:09:20,000 --> 00:09:22,080
something at the moment again that was

246
00:09:22,080 --> 00:09:24,160
developed back in 2009

247
00:09:24,160 --> 00:09:26,880
which basically

248
00:09:26,880 --> 00:09:29,920
this is a set of generic rules for mod

249
00:09:29,920 --> 00:09:31,600
security users

250
00:09:31,600 --> 00:09:34,000
we have a

251
00:09:34,000 --> 00:09:36,399
standard set of

252
00:09:36,399 --> 00:09:38,720
um

253
00:09:38,720 --> 00:09:43,040
rules for blocking different types of um

254
00:09:43,040 --> 00:09:44,880
web related attack

255
00:09:44,880 --> 00:09:48,160
in sort of different modes

256
00:09:48,160 --> 00:09:49,279
then

257
00:09:49,279 --> 00:09:52,320
it's essentially a set of plug and play

258
00:09:52,320 --> 00:09:54,320
set of baffles

259
00:09:54,320 --> 00:09:56,399
um you can choose your

260
00:09:56,399 --> 00:09:57,920
um

261
00:09:57,920 --> 00:09:59,680
mode of operation

262
00:09:59,680 --> 00:10:02,399
standard version versus anomaly scoring

263
00:10:02,399 --> 00:10:03,920
and there's all kinds of detection

264
00:10:03,920 --> 00:10:06,959
categories protocol validation generic

265
00:10:06,959 --> 00:10:08,560
attacks such as

266
00:10:08,560 --> 00:10:10,320
vulnerability signatures

267
00:10:10,320 --> 00:10:13,760
back doors denial of service

268
00:10:13,760 --> 00:10:16,160
a whole range

269
00:10:16,160 --> 00:10:18,640
but it's a good starting point

270
00:10:18,640 --> 00:10:19,519
for

271
00:10:19,519 --> 00:10:23,200
protecting of applications

272
00:10:23,200 --> 00:10:25,040
and crs is a

273
00:10:25,040 --> 00:10:26,800
flagship

274
00:10:26,800 --> 00:10:28,959
os project as well

275
00:10:28,959 --> 00:10:31,959
now

276
00:10:32,160 --> 00:10:34,880
it can have an ids ips type mode for

277
00:10:34,880 --> 00:10:36,480
self-contained rules

278
00:10:36,480 --> 00:10:38,640
again those rules are stateless there's

279
00:10:38,640 --> 00:10:41,680
no intelligence between the rules

280
00:10:41,680 --> 00:10:45,120
it's easy for users to understand

281
00:10:45,120 --> 00:10:47,040
again not optimal from a rules

282
00:10:47,040 --> 00:10:48,560
management perspective

283
00:10:48,560 --> 00:10:51,839
not optimal from a security perspective

284
00:10:51,839 --> 00:10:54,079
but

285
00:10:54,560 --> 00:10:58,640
it can have a standard mode

286
00:10:58,720 --> 00:11:01,680
it can you lock event data to a patch's

287
00:11:01,680 --> 00:11:02,720
error log

288
00:11:02,720 --> 00:11:05,920
as well as mod security zone audit log

289
00:11:05,920 --> 00:11:09,279
and the important thing is

290
00:11:09,440 --> 00:11:10,880
um

291
00:11:10,880 --> 00:11:15,200
model security can push out events

292
00:11:15,200 --> 00:11:18,079
both uh has a process called m log c

293
00:11:18,079 --> 00:11:20,320
which can push them out as http or as

294
00:11:20,320 --> 00:11:21,680
json

295
00:11:21,680 --> 00:11:23,279
if you really want to do some powerpoint

296
00:11:23,279 --> 00:11:26,800
you can use correlated mode

297
00:11:27,760 --> 00:11:28,560
so

298
00:11:28,560 --> 00:11:30,160
basic rules are considered reference

299
00:11:30,160 --> 00:11:32,560
events they don't log the apache log if

300
00:11:32,560 --> 00:11:34,880
you use correlation rules

301
00:11:34,880 --> 00:11:36,640
in the login phase you analyze both

302
00:11:36,640 --> 00:11:39,920
inbound and outbound events and you can

303
00:11:39,920 --> 00:11:42,560
generate special events

304
00:11:42,560 --> 00:11:43,839
that you can push out so there's a

305
00:11:43,839 --> 00:11:45,600
correlation conf

306
00:11:45,600 --> 00:11:46,800
for crs

307
00:11:46,800 --> 00:11:48,240
now

308
00:11:48,240 --> 00:11:50,639
why is all this important

309
00:11:50,639 --> 00:11:52,000
well

310
00:11:52,000 --> 00:11:54,800
we've already said

311
00:11:54,959 --> 00:11:59,360
it's not really the same as an ids

312
00:11:59,360 --> 00:12:00,720
we're not looking at everything we're

313
00:12:00,720 --> 00:12:02,800
just looking at web traffic

314
00:12:02,800 --> 00:12:04,560
we can put

315
00:12:04,560 --> 00:12:06,079
a

316
00:12:06,079 --> 00:12:07,200
waf

317
00:12:07,200 --> 00:12:09,040
essentially in front

318
00:12:09,040 --> 00:12:10,880
of a web server

319
00:12:10,880 --> 00:12:11,760
now

320
00:12:11,760 --> 00:12:15,040
in theory we could put

321
00:12:15,040 --> 00:12:17,920
a blank apache server sitting there with

322
00:12:17,920 --> 00:12:21,120
no content on at all

323
00:12:21,120 --> 00:12:23,279
and the waf will pick up

324
00:12:23,279 --> 00:12:24,959
all those automated scanning techniques

325
00:12:24,959 --> 00:12:26,160
that seem to fill the internet

326
00:12:26,160 --> 00:12:28,160
continually if you ever looked on your

327
00:12:28,160 --> 00:12:30,880
web blogs you see the automated scanning

328
00:12:30,880 --> 00:12:34,880
techniques looking for php my

329
00:12:36,560 --> 00:12:38,639
my admin and all those sort of uh

330
00:12:38,639 --> 00:12:41,200
wonderful applications or backdoors that

331
00:12:41,200 --> 00:12:43,040
you might want to consider in

332
00:12:43,040 --> 00:12:45,279
um

333
00:12:45,279 --> 00:12:47,440
but what would happen if you could add

334
00:12:47,440 --> 00:12:49,600
some fake content

335
00:12:49,600 --> 00:12:51,200
to that

336
00:12:51,200 --> 00:12:52,560
web server

337
00:12:52,560 --> 00:12:53,920
and use

338
00:12:53,920 --> 00:12:56,720
the waf rules as a way of gaining threat

339
00:12:56,720 --> 00:12:58,560
intelligence

340
00:12:58,560 --> 00:13:00,560
so this is where

341
00:13:00,560 --> 00:13:02,000
has led to

342
00:13:02,000 --> 00:13:02,880
what we're trying to do with this

343
00:13:02,880 --> 00:13:04,079
project

344
00:13:04,079 --> 00:13:06,240
what we're trying to do is pick up

345
00:13:06,240 --> 00:13:07,839
real-time

346
00:13:07,839 --> 00:13:10,480
detailed web application attack data and

347
00:13:10,480 --> 00:13:13,040
generate threat reports in the community

348
00:13:13,040 --> 00:13:14,560
now

349
00:13:14,560 --> 00:13:16,480
this isn't new

350
00:13:16,480 --> 00:13:18,240
this is relaunched from an earlier

351
00:13:18,240 --> 00:13:20,880
version an earlier was by the labs

352
00:13:20,880 --> 00:13:23,839
trustworthy project

353
00:13:24,240 --> 00:13:27,279
and there's a reason

354
00:13:27,360 --> 00:13:29,360
when i picked up this project

355
00:13:29,360 --> 00:13:31,519
that

356
00:13:32,000 --> 00:13:34,959
it sort of half died not from not from

357
00:13:34,959 --> 00:13:36,240
the

358
00:13:36,240 --> 00:13:39,199
um mod security point of view

359
00:13:39,199 --> 00:13:40,959
but more from the

360
00:13:40,959 --> 00:13:43,120
um

361
00:13:43,120 --> 00:13:45,199
admin console point of view

362
00:13:45,199 --> 00:13:48,800
and i'll come on to that in a minute

363
00:13:48,800 --> 00:13:50,160
so this is what the original project

364
00:13:50,160 --> 00:13:51,680
looked like

365
00:13:51,680 --> 00:13:53,760
it was essentially

366
00:13:53,760 --> 00:13:56,399
distribute

367
00:13:56,399 --> 00:13:58,240
a standard ova

368
00:13:58,240 --> 00:14:01,480
mod security

369
00:14:03,680 --> 00:14:04,720
vm

370
00:14:04,720 --> 00:14:07,279
into data centers into cloud

371
00:14:07,279 --> 00:14:08,720
environments

372
00:14:08,720 --> 00:14:10,880
and they would all report back to a mod

373
00:14:10,880 --> 00:14:12,959
security console

374
00:14:12,959 --> 00:14:14,320
and

375
00:14:14,320 --> 00:14:16,800
you would be able to use analysis on

376
00:14:16,800 --> 00:14:18,639
that console to pull the threat

377
00:14:18,639 --> 00:14:21,040
intelligence out

378
00:14:21,040 --> 00:14:23,199
that was the general idea and as a

379
00:14:23,199 --> 00:14:25,839
concept that's pretty good

380
00:14:25,839 --> 00:14:27,519
the problem

381
00:14:27,519 --> 00:14:28,860
is the

382
00:14:28,860 --> 00:14:30,720
[Music]

383
00:14:30,720 --> 00:14:33,440
console that collects all the probes

384
00:14:33,440 --> 00:14:35,760
output

385
00:14:39,120 --> 00:14:41,279
the older event consoles were

386
00:14:41,279 --> 00:14:43,519
effectively broken open source projects

387
00:14:43,519 --> 00:14:46,639
when i first took the um project over i

388
00:14:46,639 --> 00:14:48,320
looked at

389
00:14:48,320 --> 00:14:50,639
um

390
00:14:50,959 --> 00:14:52,959
three or four different

391
00:14:52,959 --> 00:14:54,959
mod security consoles

392
00:14:54,959 --> 00:14:57,519
every single one was broken

393
00:14:57,519 --> 00:14:59,040
because they hadn't been touched in

394
00:14:59,040 --> 00:15:00,000
about

395
00:15:00,000 --> 00:15:02,320
in some cases six or seven years as open

396
00:15:02,320 --> 00:15:03,680
source projects they

397
00:15:03,680 --> 00:15:05,040
got to a certain point and there was no

398
00:15:05,040 --> 00:15:06,800
active development on them which is

399
00:15:06,800 --> 00:15:07,600
again

400
00:15:07,600 --> 00:15:09,440
is an issue with open source projects if

401
00:15:09,440 --> 00:15:12,320
there's no one actively supporting them

402
00:15:12,320 --> 00:15:14,480
or working on them they tend to fall by

403
00:15:14,480 --> 00:15:16,720
the wayside and die

404
00:15:16,720 --> 00:15:20,000
so that meant starting again

405
00:15:20,240 --> 00:15:22,639
also

406
00:15:23,120 --> 00:15:26,000
using ovas as a deployment mechanism

407
00:15:26,000 --> 00:15:29,040
into data centers is fine still approach

408
00:15:29,040 --> 00:15:30,079
would use

409
00:15:30,079 --> 00:15:31,279
but

410
00:15:31,279 --> 00:15:33,839
maybe we need to be thinking about

411
00:15:33,839 --> 00:15:35,880
other deployment options

412
00:15:35,880 --> 00:15:39,040
containerization docker for example

413
00:15:39,040 --> 00:15:42,399
and before

414
00:15:42,399 --> 00:15:43,600
a lot of

415
00:15:43,600 --> 00:15:45,839
potential threat data could be collected

416
00:15:45,839 --> 00:15:47,519
but it wasn't put into any sort of

417
00:15:47,519 --> 00:15:49,120
sharing platform there was no

418
00:15:49,120 --> 00:15:50,639
threatening pattern effect intelligence

419
00:15:50,639 --> 00:15:52,079
system used

420
00:15:52,079 --> 00:15:54,079
and we're thinking about something like

421
00:15:54,079 --> 00:15:56,240
miss for example

422
00:15:56,240 --> 00:15:57,759
so

423
00:15:57,759 --> 00:15:59,600
proof of concept

424
00:15:59,600 --> 00:16:02,240
layout slightly different

425
00:16:02,240 --> 00:16:04,320
that we had before um

426
00:16:04,320 --> 00:16:07,120
and the proof of concept

427
00:16:07,120 --> 00:16:09,920
works in a docker format we still have

428
00:16:09,920 --> 00:16:12,319
our

429
00:16:12,720 --> 00:16:14,000
web clients

430
00:16:14,000 --> 00:16:17,040
coming in which attack a web server that

431
00:16:17,040 --> 00:16:18,639
web server

432
00:16:18,639 --> 00:16:22,079
is an apache server with core all set

433
00:16:22,079 --> 00:16:25,040
more security

434
00:16:25,519 --> 00:16:28,399
it generates

435
00:16:29,199 --> 00:16:31,120
effectively events

436
00:16:31,120 --> 00:16:33,040
based on

437
00:16:33,040 --> 00:16:35,440
that attack

438
00:16:35,440 --> 00:16:37,360
anything that's matched against crs

439
00:16:37,360 --> 00:16:38,959
rules

440
00:16:38,959 --> 00:16:41,199
um we're also looking at

441
00:16:41,199 --> 00:16:43,040
if we can put what we call honey traps

442
00:16:43,040 --> 00:16:45,120
in there as well

443
00:16:45,120 --> 00:16:47,120
so it uses

444
00:16:47,120 --> 00:16:48,839
the mod security audit

445
00:16:48,839 --> 00:16:53,040
logs those audit logs are pushed out

446
00:16:53,040 --> 00:16:54,560
from

447
00:16:54,560 --> 00:16:56,560
mod security

448
00:16:56,560 --> 00:16:59,120
they can be pushed out as http

449
00:16:59,120 --> 00:17:01,600
or they can push down as json

450
00:17:01,600 --> 00:17:03,759
what we've done now is rather than

451
00:17:03,759 --> 00:17:06,000
taking them out as http we've pushed

452
00:17:06,000 --> 00:17:07,520
them out as json

453
00:17:07,520 --> 00:17:09,839
and we've pushed them into

454
00:17:09,839 --> 00:17:11,919
effectively elastic search so we're

455
00:17:11,919 --> 00:17:14,640
using log stash and kibana

456
00:17:14,640 --> 00:17:17,760
potentially for some visualization

457
00:17:17,760 --> 00:17:19,119
and

458
00:17:19,119 --> 00:17:21,280
as part of the proof of concept within

459
00:17:21,280 --> 00:17:22,959
pushing

460
00:17:22,959 --> 00:17:25,520
the attack and honey trap information

461
00:17:25,520 --> 00:17:27,039
into into a

462
00:17:27,039 --> 00:17:29,440
mis threat sharing system so that

463
00:17:29,440 --> 00:17:31,280
potentially means the attack information

464
00:17:31,280 --> 00:17:33,039
can be shared with the community so we

465
00:17:33,039 --> 00:17:35,280
can generate the threat intelligence

466
00:17:35,280 --> 00:17:37,520
there

467
00:17:40,000 --> 00:17:43,039
so what we want to do is

468
00:17:43,360 --> 00:17:46,320
make the system a little bit more quotes

469
00:17:46,320 --> 00:17:48,960
intelligent or

470
00:17:48,960 --> 00:17:50,880
ensure a bit more

471
00:17:50,880 --> 00:17:54,240
entrapment with the wrong word

472
00:17:54,480 --> 00:17:56,480
you have this idea of a hunting trap

473
00:17:56,480 --> 00:17:58,160
so we can gather information about the

474
00:17:58,160 --> 00:17:59,760
attacker

475
00:17:59,760 --> 00:18:01,919
so we want to lure the attacker with

476
00:18:01,919 --> 00:18:04,400
some bait

477
00:18:04,480 --> 00:18:07,039
identify the attacker from his or her

478
00:18:07,039 --> 00:18:08,799
actions

479
00:18:08,799 --> 00:18:10,559
and gather information that attacker

480
00:18:10,559 --> 00:18:12,640
from the logs

481
00:18:12,640 --> 00:18:15,679
so rather than just the

482
00:18:15,679 --> 00:18:17,919
old version

483
00:18:17,919 --> 00:18:20,320
of the west project

484
00:18:20,320 --> 00:18:22,320
um had

485
00:18:22,320 --> 00:18:24,080
an apache web server

486
00:18:24,080 --> 00:18:26,160
with no content

487
00:18:26,160 --> 00:18:28,160
so it would pick up the scans but not

488
00:18:28,160 --> 00:18:29,760
necessarily lure

489
00:18:29,760 --> 00:18:31,039
a

490
00:18:31,039 --> 00:18:36,000
more semi-automated or manual attacker

491
00:18:36,160 --> 00:18:37,919
in and gain information

492
00:18:37,919 --> 00:18:38,880
so

493
00:18:38,880 --> 00:18:40,880
in terms of honey traps

494
00:18:40,880 --> 00:18:42,160
what would built into our proof of

495
00:18:42,160 --> 00:18:43,200
concept

496
00:18:43,200 --> 00:18:44,720
was five

497
00:18:44,720 --> 00:18:47,440
different bait if you like

498
00:18:47,440 --> 00:18:51,600
um adding fake listing ports

499
00:18:51,600 --> 00:18:53,360
if the web client is trying to access

500
00:18:53,360 --> 00:18:56,959
those fake ports it'll be

501
00:18:57,600 --> 00:19:00,640
maybe adding a fake entry in robots.txt

502
00:19:00,640 --> 00:19:02,240
file

503
00:19:02,240 --> 00:19:04,799
again if the restricted location is

504
00:19:04,799 --> 00:19:08,240
accessed it'll be tagged as malicious

505
00:19:08,240 --> 00:19:10,240
um

506
00:19:10,240 --> 00:19:13,280
we'll add fake html comments

507
00:19:13,280 --> 00:19:15,039
and if

508
00:19:15,039 --> 00:19:17,679
it accesses the debugging information

509
00:19:17,679 --> 00:19:19,520
from html comments

510
00:19:19,520 --> 00:19:21,919
we'll mark it as malicious

511
00:19:21,919 --> 00:19:22,880
um

512
00:19:22,880 --> 00:19:26,400
if it will add fake hidden form fields

513
00:19:26,400 --> 00:19:28,960
so if the attacker manipulates those

514
00:19:28,960 --> 00:19:31,760
hidden form fields set by the server

515
00:19:31,760 --> 00:19:33,679
we'll tag it as malicious

516
00:19:33,679 --> 00:19:37,039
and we'll add fake cookie data

517
00:19:37,039 --> 00:19:39,840
and if those fake cookies are

518
00:19:39,840 --> 00:19:42,480
manipulated

519
00:19:42,480 --> 00:19:45,280
we'll tag them as malicious

520
00:19:45,280 --> 00:19:48,000
so what do they look like so

521
00:19:48,000 --> 00:19:52,720
when it comes into kibana for example

522
00:19:52,720 --> 00:19:54,000
we can get

523
00:19:54,000 --> 00:19:56,960
a honey trap alert

524
00:19:56,960 --> 00:19:59,919
traffic received on our fake port

525
00:19:59,919 --> 00:20:03,520
and within them we can push that through

526
00:20:03,520 --> 00:20:07,840
into misp aspect intelligence

527
00:20:10,799 --> 00:20:13,440
we can add

528
00:20:14,880 --> 00:20:18,240
a fake entry in robots.txt

529
00:20:18,240 --> 00:20:20,159
and we can say it's 100 alert disallow

530
00:20:20,159 --> 00:20:21,039
robot

531
00:20:21,039 --> 00:20:21,919
text

532
00:20:21,919 --> 00:20:23,840
entry access again

533
00:20:23,840 --> 00:20:25,600
we can push that through

534
00:20:25,600 --> 00:20:28,158
into miss

535
00:20:28,480 --> 00:20:30,080
um we can look

536
00:20:30,080 --> 00:20:31,919
when we've added fake html comments

537
00:20:31,919 --> 00:20:32,960
again

538
00:20:32,960 --> 00:20:34,960
got it in

539
00:20:34,960 --> 00:20:36,080
cabana

540
00:20:36,080 --> 00:20:38,400
we can then push that through

541
00:20:38,400 --> 00:20:41,440
uh into misp

542
00:20:42,000 --> 00:20:44,159
we can

543
00:20:44,159 --> 00:20:48,799
add a fake hidden form field

544
00:20:48,799 --> 00:20:50,559
and if that's been manipulated that can

545
00:20:50,559 --> 00:20:52,880
be pushed through

546
00:20:52,880 --> 00:20:54,480
as before

547
00:20:54,480 --> 00:20:58,000
and the same with fake

548
00:20:58,000 --> 00:21:00,720
cookie data can also be picked up

549
00:21:00,720 --> 00:21:02,640
and pushed through

550
00:21:02,640 --> 00:21:04,080
and again we'll start to get some

551
00:21:04,080 --> 00:21:06,320
misspell output um

552
00:21:06,320 --> 00:21:08,559
with

553
00:21:10,480 --> 00:21:12,559
which we can then push out

554
00:21:12,559 --> 00:21:16,320
into other threat intelligence formats

555
00:21:16,320 --> 00:21:18,480
to share with other

556
00:21:18,480 --> 00:21:20,640
providers this is just

557
00:21:20,640 --> 00:21:23,520
proof of concept at the moment

558
00:21:23,520 --> 00:21:25,679
so

559
00:21:26,159 --> 00:21:28,240
what we set out to do

560
00:21:28,240 --> 00:21:30,799
was a proof of concept to understand

561
00:21:30,799 --> 00:21:32,960
how we could have more security-based

562
00:21:32,960 --> 00:21:34,480
honey pots

563
00:21:34,480 --> 00:21:36,080
and probes to interact with the

564
00:21:36,080 --> 00:21:38,559
receiving console

565
00:21:38,559 --> 00:21:40,240
because the

566
00:21:40,240 --> 00:21:41,760
old console

567
00:21:41,760 --> 00:21:42,840
wasn't

568
00:21:42,840 --> 00:21:46,720
working um we could develop

569
00:21:46,720 --> 00:21:47,600
um

570
00:21:47,600 --> 00:21:49,679
a new one which was done

571
00:21:49,679 --> 00:21:53,280
so we've it's still got the old vm image

572
00:21:53,280 --> 00:21:55,280
that still works but we've got a

573
00:21:55,280 --> 00:21:56,840
docker-based test solution so we can

574
00:21:56,840 --> 00:21:59,200
store the log and we want to work with

575
00:21:59,200 --> 00:22:00,640
multiple probes

576
00:22:00,640 --> 00:22:03,360
so we've done multiple docker

577
00:22:03,360 --> 00:22:05,678
um

578
00:22:05,919 --> 00:22:08,480
we did some work to evaluate contour

579
00:22:08,480 --> 00:22:11,039
options to look at threat data before

580
00:22:11,039 --> 00:22:13,440
there was um something like the mod

581
00:22:13,440 --> 00:22:15,440
security order console

582
00:22:15,440 --> 00:22:17,200
waffle fluent

583
00:22:17,200 --> 00:22:19,200
and there was bespoke scripts for

584
00:22:19,200 --> 00:22:21,760
singular multiple probes and

585
00:22:21,760 --> 00:22:23,679
the scripts worked

586
00:22:23,679 --> 00:22:26,480
but the applications didn't so really

587
00:22:26,480 --> 00:22:27,600
from out

588
00:22:27,600 --> 00:22:29,520
of restarting or rebooting the project

589
00:22:29,520 --> 00:22:30,559
point of view

590
00:22:30,559 --> 00:22:32,000
those

591
00:22:32,000 --> 00:22:33,440
tools

592
00:22:33,440 --> 00:22:35,120
were

593
00:22:35,120 --> 00:22:36,799
unless we're going to start

594
00:22:36,799 --> 00:22:38,480
and

595
00:22:38,480 --> 00:22:40,000
jump on those projects from development

596
00:22:40,000 --> 00:22:40,880
again

597
00:22:40,880 --> 00:22:41,760
it's

598
00:22:41,760 --> 00:22:43,039
just so we

599
00:22:43,039 --> 00:22:45,840
okay i think that's where

600
00:22:45,840 --> 00:22:47,679
we'll start using some of the elastic

601
00:22:47,679 --> 00:22:52,559
search type tools um to do what we want

602
00:22:53,039 --> 00:22:54,559
we look to the mechanism because some of

603
00:22:54,559 --> 00:22:56,400
the

604
00:22:56,400 --> 00:22:57,840
old scripts

605
00:22:57,840 --> 00:22:59,679
were converting and and pushing them

606
00:22:59,679 --> 00:23:02,960
into a mysql databases

607
00:23:02,960 --> 00:23:04,480
that wasn't really

608
00:23:04,480 --> 00:23:07,280
needed that proof of concept she said

609
00:23:07,280 --> 00:23:09,840
okay we don't want to convert from mysql

610
00:23:09,840 --> 00:23:11,919
to json

611
00:23:11,919 --> 00:23:14,000
because there's a mechanism in mod

612
00:23:14,000 --> 00:23:16,159
security and m log c

613
00:23:16,159 --> 00:23:18,080
that will take that log output and push

614
00:23:18,080 --> 00:23:22,720
it into json rather than http only

615
00:23:22,720 --> 00:23:25,120
and one of our other big requirements

616
00:23:25,120 --> 00:23:26,240
was

617
00:23:26,240 --> 00:23:28,240
we need a mechanism to take that audit

618
00:23:28,240 --> 00:23:29,760
block output

619
00:23:29,760 --> 00:23:30,799
if we push it straight into

620
00:23:30,799 --> 00:23:32,960
elasticsearch we can use things like

621
00:23:32,960 --> 00:23:36,320
logs dash kibana to visualize the data i

622
00:23:36,320 --> 00:23:38,320
think visualizing this data

623
00:23:38,320 --> 00:23:40,880
is one of those important first steps

624
00:23:40,880 --> 00:23:43,200
really

625
00:23:47,039 --> 00:23:49,120
so

626
00:23:49,120 --> 00:23:52,000
it's not just manipulating the data

627
00:23:52,000 --> 00:23:53,679
visualizing the data

628
00:23:53,679 --> 00:23:55,840
with things like kibana we need the

629
00:23:55,840 --> 00:23:57,600
output into some sort of threat

630
00:23:57,600 --> 00:24:00,880
intelligent format possibly sticks

631
00:24:00,880 --> 00:24:02,720
um so that's where something like miss

632
00:24:02,720 --> 00:24:04,880
can possibly help us at least the

633
00:24:04,880 --> 00:24:06,799
sharing

634
00:24:06,799 --> 00:24:08,000
of the threat data coming from the

635
00:24:08,000 --> 00:24:09,360
honeypots

636
00:24:09,360 --> 00:24:11,679
we can then probably make it more easier

637
00:24:11,679 --> 00:24:13,039
to export

638
00:24:13,039 --> 00:24:17,360
import in sticks or taxi formats

639
00:24:17,360 --> 00:24:19,039
but we may need to

640
00:24:19,039 --> 00:24:20,880
look at the use of concurrent logs in a

641
00:24:20,880 --> 00:24:24,880
format that miss can deal with

642
00:24:25,120 --> 00:24:28,000
um other possible alternatives again i

643
00:24:28,000 --> 00:24:29,520
haven't particularly looked in any

644
00:24:29,520 --> 00:24:31,600
detail at this yet but i know there's an

645
00:24:31,600 --> 00:24:34,799
um an m log c next generation

646
00:24:34,799 --> 00:24:37,120
um for log transfer

647
00:24:37,120 --> 00:24:38,880
that might be a consideration at some

648
00:24:38,880 --> 00:24:40,240
point

649
00:24:40,240 --> 00:24:41,520
um

650
00:24:41,520 --> 00:24:43,520
we need to look at

651
00:24:43,520 --> 00:24:44,559
a

652
00:24:44,559 --> 00:24:46,960
new vm honeypot

653
00:24:46,960 --> 00:24:51,520
uh role based on crs3 and above

654
00:24:51,520 --> 00:24:52,480
um

655
00:24:52,480 --> 00:24:55,760
actual other derivatives might be small

656
00:24:55,760 --> 00:24:57,120
footprint

657
00:24:57,120 --> 00:25:00,480
honeypots or pro formats again utilizing

658
00:25:00,480 --> 00:25:03,039
docker or other containers

659
00:25:03,039 --> 00:25:06,159
maybe a raspberry pi version

660
00:25:06,159 --> 00:25:06,960
and

661
00:25:06,960 --> 00:25:08,480
fundamentally

662
00:25:08,480 --> 00:25:11,360
this becomes a

663
00:25:11,360 --> 00:25:15,039
potentially a big data problem so

664
00:25:15,039 --> 00:25:16,720
we probably need a machine learning

665
00:25:16,720 --> 00:25:19,039
approach to be able to handle

666
00:25:19,039 --> 00:25:21,039
and especially to be able to

667
00:25:21,039 --> 00:25:23,360
automatically update the rule set being

668
00:25:23,360 --> 00:25:25,679
used in a probe based on threat

669
00:25:25,679 --> 00:25:27,679
intelligence received so almost some

670
00:25:27,679 --> 00:25:29,760
sort of adaptive technology

671
00:25:29,760 --> 00:25:32,240
for the probes

672
00:25:32,240 --> 00:25:34,799
based on what's been received so far and

673
00:25:34,799 --> 00:25:36,799
to automatically update

674
00:25:36,799 --> 00:25:40,080
when new rules were added to crs

675
00:25:40,080 --> 00:25:41,679
as well

676
00:25:41,679 --> 00:25:44,240
so proposed next stages i guess there

677
00:25:44,240 --> 00:25:44,960
are

678
00:25:44,960 --> 00:25:45,760
four

679
00:25:45,760 --> 00:25:47,600
big bits of work

680
00:25:47,600 --> 00:25:50,320
um that we can be looking at

681
00:25:50,320 --> 00:25:53,200
one of them is

682
00:25:53,520 --> 00:25:55,520
what i call data massage

683
00:25:55,520 --> 00:25:56,880
so

684
00:25:56,880 --> 00:25:59,840
forwarding the output from misp into

685
00:25:59,840 --> 00:26:02,320
an intelligence format that's sticks or

686
00:26:02,320 --> 00:26:03,600
taxi

687
00:26:03,600 --> 00:26:05,520
um

688
00:26:05,520 --> 00:26:08,159
so that you can share it so it's not all

689
00:26:08,159 --> 00:26:10,559
on just the missed platform but could be

690
00:26:10,559 --> 00:26:11,919
into other

691
00:26:11,919 --> 00:26:13,919
uh systems or more

692
00:26:13,919 --> 00:26:15,600
put into more friendly format depending

693
00:26:15,600 --> 00:26:17,360
on what's required

694
00:26:17,360 --> 00:26:18,240
um

695
00:26:18,240 --> 00:26:19,919
big piece of work because at the moment

696
00:26:19,919 --> 00:26:21,440
obviously we're just

697
00:26:21,440 --> 00:26:25,039
always done it's a proof of concept is

698
00:26:25,039 --> 00:26:27,600
develop the quality probe management

699
00:26:27,600 --> 00:26:28,559
solution

700
00:26:28,559 --> 00:26:32,480
to manage multiple probes or honeypots

701
00:26:32,480 --> 00:26:34,559
update the configurations

702
00:26:34,559 --> 00:26:36,480
change

703
00:26:36,480 --> 00:26:39,480
um

704
00:26:40,400 --> 00:26:42,240
the crs that's uploaded to them those

705
00:26:42,240 --> 00:26:44,880
sorts of things

706
00:26:45,360 --> 00:26:47,360
and

707
00:26:47,360 --> 00:26:48,480
what

708
00:26:48,480 --> 00:26:50,880
and to an extent

709
00:26:50,880 --> 00:26:52,559
actually be able to manage

710
00:26:52,559 --> 00:26:54,960
the idea is we want this deployed in

711
00:26:54,960 --> 00:26:56,799
various

712
00:26:56,799 --> 00:26:58,320
data centers

713
00:26:58,320 --> 00:26:59,200
um

714
00:26:59,200 --> 00:27:02,720
other key locations

715
00:27:04,240 --> 00:27:05,760
we'll talk a bit more about the probe

716
00:27:05,760 --> 00:27:07,440
management scenario in a minute because

717
00:27:07,440 --> 00:27:09,840
other developments that might be useful

718
00:27:09,840 --> 00:27:11,520
um

719
00:27:11,520 --> 00:27:12,720
there's obviously

720
00:27:12,720 --> 00:27:14,799
the format development as well as

721
00:27:14,799 --> 00:27:16,000
looking at more

722
00:27:16,000 --> 00:27:18,080
of the honey trap arguments one of the

723
00:27:18,080 --> 00:27:19,120
other

724
00:27:19,120 --> 00:27:22,159
um bits of work we've experimented with

725
00:27:22,159 --> 00:27:23,039
was

726
00:27:23,039 --> 00:27:24,720
can we

727
00:27:24,720 --> 00:27:26,960
into the web server element

728
00:27:26,960 --> 00:27:30,960
put something like um

729
00:27:32,960 --> 00:27:34,399
a buggy

730
00:27:34,399 --> 00:27:35,440
uh

731
00:27:35,440 --> 00:27:38,240
content management solution wordpress

732
00:27:38,240 --> 00:27:39,760
drupal

733
00:27:39,760 --> 00:27:40,640
uh

734
00:27:40,640 --> 00:27:42,240
things like that

735
00:27:42,240 --> 00:27:43,120
um

736
00:27:43,120 --> 00:27:45,120
yeah i'm gonna start looking at

737
00:27:45,120 --> 00:27:46,480
having

738
00:27:46,480 --> 00:27:48,559
keep an ova version

739
00:27:48,559 --> 00:27:50,159
a docker version

740
00:27:50,159 --> 00:27:52,640
a physical

741
00:27:52,640 --> 00:27:55,840
plug-in for get raspberry pi type device

742
00:27:55,840 --> 00:27:58,000
but there's all those sort of um

743
00:27:58,000 --> 00:28:00,320
format developments talking about

744
00:28:00,320 --> 00:28:02,640
and as i mentioned before the machine

745
00:28:02,640 --> 00:28:05,840
learning enabled we're all set updating

746
00:28:05,840 --> 00:28:08,480
um and i think

747
00:28:08,480 --> 00:28:09,440
um

748
00:28:09,440 --> 00:28:12,720
my co-project leader phillips uh

749
00:28:12,720 --> 00:28:14,799
university in uruguay has done some work

750
00:28:14,799 --> 00:28:16,640
in that area which we'll

751
00:28:16,640 --> 00:28:19,679
want to look at as well

752
00:28:20,080 --> 00:28:21,919
so

753
00:28:21,919 --> 00:28:24,080
i guess the big bit of work

754
00:28:24,080 --> 00:28:26,159
that we're still next one that we want

755
00:28:26,159 --> 00:28:27,440
to embark on

756
00:28:27,440 --> 00:28:28,240
is

757
00:28:28,240 --> 00:28:31,120
developing a the pro management so we

758
00:28:31,120 --> 00:28:33,200
can manage probes honeypots either as

759
00:28:33,200 --> 00:28:35,679
vms with these small footprint devices

760
00:28:35,679 --> 00:28:37,039
or as docker

761
00:28:37,039 --> 00:28:39,039
but that we have a large number out

762
00:28:39,039 --> 00:28:39,840
there

763
00:28:39,840 --> 00:28:41,760
so whether we want to do

764
00:28:41,760 --> 00:28:44,159
version upgrades

765
00:28:44,159 --> 00:28:45,919
enhance capabilities

766
00:28:45,919 --> 00:28:48,799
change the

767
00:28:49,440 --> 00:28:51,360
the web

768
00:28:51,360 --> 00:28:53,760
server

769
00:28:53,760 --> 00:28:55,279
content

770
00:28:55,279 --> 00:28:56,720
or whether we want to retire because

771
00:28:56,720 --> 00:28:58,480
there's a whole range of papers but we

772
00:28:58,480 --> 00:29:00,080
need that probe

773
00:29:00,080 --> 00:29:02,159
management solution

774
00:29:02,159 --> 00:29:04,480
it would be via api whether it be script

775
00:29:04,480 --> 00:29:06,399
based pull or push

776
00:29:06,399 --> 00:29:09,039
um i've done some initial

777
00:29:09,039 --> 00:29:11,520
talks i know these special projects

778
00:29:11,520 --> 00:29:12,960
director

779
00:29:12,960 --> 00:29:14,640
at shadow server

780
00:29:14,640 --> 00:29:17,919
who has a large amount of

781
00:29:17,919 --> 00:29:20,240
threat intelligence gathering probes for

782
00:29:20,240 --> 00:29:23,760
different organizations so that may be

783
00:29:23,760 --> 00:29:26,720
an opening that we can pursue so there's

784
00:29:26,720 --> 00:29:29,200
a quite a few

785
00:29:29,200 --> 00:29:30,320
and

786
00:29:30,320 --> 00:29:32,480
this makes a lot of number projects that

787
00:29:32,480 --> 00:29:37,120
are useful for things like um

788
00:29:38,320 --> 00:29:40,960
google summer code

789
00:29:40,960 --> 00:29:42,159
for example

790
00:29:42,159 --> 00:29:44,960
um for students to help work on

791
00:29:44,960 --> 00:29:47,279
um and we've had several instances so

792
00:29:47,279 --> 00:29:49,120
far that have helped us with the proof

793
00:29:49,120 --> 00:29:53,959
of concept solution up to now

794
00:29:54,960 --> 00:29:58,399
in terms of uh further information um we

795
00:29:58,399 --> 00:30:00,559
have a github repository

796
00:30:00,559 --> 00:30:03,679
we have our os project pages

797
00:30:03,679 --> 00:30:05,919
and we have the os

798
00:30:05,919 --> 00:30:08,480
slack channel

799
00:30:08,480 --> 00:30:12,159
please please have a look join

800
00:30:12,159 --> 00:30:14,399
and obviously

801
00:30:14,399 --> 00:30:17,520
if you have um

802
00:30:17,520 --> 00:30:19,120
if you want to take part you have some

803
00:30:19,120 --> 00:30:21,520
ideas or

804
00:30:21,520 --> 00:30:24,399
critical feedback please drop me a line

805
00:30:24,399 --> 00:30:28,640
it's my twitter handle my email address

806
00:30:28,640 --> 00:30:30,320
yeah i'm interested in

807
00:30:30,320 --> 00:30:33,200
any comments anyone may have or

808
00:30:33,200 --> 00:30:37,240
um how we're taking called

