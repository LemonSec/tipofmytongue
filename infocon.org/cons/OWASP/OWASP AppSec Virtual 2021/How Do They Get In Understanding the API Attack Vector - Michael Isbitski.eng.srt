1
00:00:01,420 --> 00:00:05,120
[Music]

2
00:00:05,120 --> 00:00:06,640
uh so as fiona said yes i'm mike

3
00:00:06,640 --> 00:00:08,480
izbitsky technical evangelist with salt

4
00:00:08,480 --> 00:00:10,000
security i'm going to go through these

5
00:00:10,000 --> 00:00:11,280
slides pretty quick because i want to

6
00:00:11,280 --> 00:00:12,799
save time for

7
00:00:12,799 --> 00:00:14,799
questions and answers

8
00:00:14,799 --> 00:00:16,480
we're going cover uh

9
00:00:16,480 --> 00:00:18,400
quite a few things about uh how

10
00:00:18,400 --> 00:00:20,240
attackers actually abuse applications

11
00:00:20,240 --> 00:00:22,320
and apis uh because it's a really common

12
00:00:22,320 --> 00:00:25,279
question we get you know api security is

13
00:00:25,279 --> 00:00:27,439
very challenging to do effectively uh

14
00:00:27,439 --> 00:00:29,279
we've seen you know many failures and

15
00:00:29,279 --> 00:00:31,279
even the most mature uh companies do

16
00:00:31,279 --> 00:00:33,040
struggle with it uh so there's often the

17
00:00:33,040 --> 00:00:35,360
question why bother right shouldn't it

18
00:00:35,360 --> 00:00:38,879
aren't apis hard to get at and attack

19
00:00:38,879 --> 00:00:40,399
and actually the answer is no they're

20
00:00:40,399 --> 00:00:43,520
actually very easy to find um and then

21
00:00:43,520 --> 00:00:44,800
abuse so we're going to talk a little

22
00:00:44,800 --> 00:00:47,680
bit about that today

23
00:00:51,920 --> 00:00:53,360
i don't know if anybody remembers this

24
00:00:53,360 --> 00:00:55,199
kind of event it was interesting but uh

25
00:00:55,199 --> 00:00:56,800
these obelisks were kind of appearing

26
00:00:56,800 --> 00:00:58,399
throughout the united states and

27
00:00:58,399 --> 00:01:01,359
actually it might have been worldwide um

28
00:01:01,359 --> 00:01:02,800
you might say it's a monolith which uh

29
00:01:02,800 --> 00:01:04,799
maybe that's a little bit of an api joke

30
00:01:04,799 --> 00:01:06,960
uh maybe it's a microservice right not

31
00:01:06,960 --> 00:01:08,479
not really important right but it was

32
00:01:08,479 --> 00:01:09,760
these uh

33
00:01:09,760 --> 00:01:11,439
these obelisks right like what is this

34
00:01:11,439 --> 00:01:13,520
thing how did it get here

35
00:01:13,520 --> 00:01:15,200
it's kind of what i was saying right how

36
00:01:15,200 --> 00:01:17,600
how a lot of practitioners view apis uh

37
00:01:17,600 --> 00:01:18,960
particularly from the outside in if they

38
00:01:18,960 --> 00:01:20,240
don't know how these things are

39
00:01:20,240 --> 00:01:21,439
architected

40
00:01:21,439 --> 00:01:23,600
that's might be how they view an api

41
00:01:23,600 --> 00:01:25,360
right it's it's a little bit of security

42
00:01:25,360 --> 00:01:27,439
through obscurity

43
00:01:27,439 --> 00:01:29,600
uh apis are increasingly the main target

44
00:01:29,600 --> 00:01:32,079
for attackers uh there's many stats

45
00:01:32,079 --> 00:01:33,759
around this you know salt has actually

46
00:01:33,759 --> 00:01:36,400
run quite a few surveys we generate

47
00:01:36,400 --> 00:01:38,560
stats from our platform uh this really

48
00:01:38,560 --> 00:01:40,079
shouldn't be a surprise right many

49
00:01:40,079 --> 00:01:41,840
organizations are getting

50
00:01:41,840 --> 00:01:44,799
um uh targeted through their apis or

51
00:01:44,799 --> 00:01:46,880
breached right or leaking data right

52
00:01:46,880 --> 00:01:48,320
there's a lot of kind of outcomes that

53
00:01:48,320 --> 00:01:50,240
can come from that

54
00:01:50,240 --> 00:01:51,920
uh but you know kind of the point of

55
00:01:51,920 --> 00:01:54,399
today's talk is well how do they find

56
00:01:54,399 --> 00:01:57,280
them uh decipher them and then abuse

57
00:01:57,280 --> 00:01:59,439
them right that's really the important

58
00:01:59,439 --> 00:02:01,280
parts of this

59
00:02:01,280 --> 00:02:02,960
uh the agenda for today it's kind of

60
00:02:02,960 --> 00:02:04,880
split into three areas the first is

61
00:02:04,880 --> 00:02:06,399
going to be kind of that discovery or

62
00:02:06,399 --> 00:02:08,399
reconnaissance the second is going to be

63
00:02:08,399 --> 00:02:09,840
some common reverse engineering

64
00:02:09,840 --> 00:02:10,959
techniques

65
00:02:10,959 --> 00:02:12,879
and then the last is like how do they

66
00:02:12,879 --> 00:02:14,640
pivot once they've kind of discovered

67
00:02:14,640 --> 00:02:16,720
that information and

68
00:02:16,720 --> 00:02:18,879
automate their attacks such as to scrape

69
00:02:18,879 --> 00:02:22,239
scrape data and large volumes

70
00:02:22,239 --> 00:02:23,760
all right with that being said how did

71
00:02:23,760 --> 00:02:26,400
they discover apis um if you are a

72
00:02:26,400 --> 00:02:28,239
security practitioner and i imagine many

73
00:02:28,239 --> 00:02:30,400
of you are here you know at an oasp

74
00:02:30,400 --> 00:02:31,360
conference

75
00:02:31,360 --> 00:02:33,680
you've likely seen many of these uh

76
00:02:33,680 --> 00:02:36,319
passive reconnaissance techniques um

77
00:02:36,319 --> 00:02:37,760
depending how long you've been at this

78
00:02:37,760 --> 00:02:39,200
you know maybe that's things like google

79
00:02:39,200 --> 00:02:40,879
dorking you know just

80
00:02:40,879 --> 00:02:43,040
searching uh internet

81
00:02:43,040 --> 00:02:44,959
uh search databases really right of

82
00:02:44,959 --> 00:02:46,319
everything that's been kind of gathered

83
00:02:46,319 --> 00:02:47,599
about companies

84
00:02:47,599 --> 00:02:49,680
uh a really rich source of information

85
00:02:49,680 --> 00:02:50,640
right because

86
00:02:50,640 --> 00:02:53,040
we're humans and we kind of uh

87
00:02:53,040 --> 00:02:54,319
we actually expose a lot of data

88
00:02:54,319 --> 00:02:56,480
inadvertently but we also fall into

89
00:02:56,480 --> 00:02:58,720
patterns right so maybe we start to name

90
00:02:58,720 --> 00:03:01,280
servers or endpoints uh consistently to

91
00:03:01,280 --> 00:03:03,120
support you know that business or

92
00:03:03,120 --> 00:03:04,959
functionality so you can actually start

93
00:03:04,959 --> 00:03:07,120
to use this information as an attacker

94
00:03:07,120 --> 00:03:08,480
uh some of the less known things are

95
00:03:08,480 --> 00:03:10,319
kind of you know public filings when you

96
00:03:10,319 --> 00:03:11,680
start talking about securities and

97
00:03:11,680 --> 00:03:13,440
exchange commissions for public

98
00:03:13,440 --> 00:03:14,480
companies

99
00:03:14,480 --> 00:03:16,959
uh or if a company has patent filings it

100
00:03:16,959 --> 00:03:18,560
can be a really rich source of

101
00:03:18,560 --> 00:03:20,000
information about

102
00:03:20,000 --> 00:03:21,920
uh technology right and how that company

103
00:03:21,920 --> 00:03:24,480
does business uh dns as well port

104
00:03:24,480 --> 00:03:26,159
scanning with nmap

105
00:03:26,159 --> 00:03:27,440
really nothing new right it's

106
00:03:27,440 --> 00:03:29,680
traditional still works right but it is

107
00:03:29,680 --> 00:03:31,360
traditional these have been around for

108
00:03:31,360 --> 00:03:33,040
for quite a while

109
00:03:33,040 --> 00:03:34,799
uh modern techniques there's there's

110
00:03:34,799 --> 00:03:37,200
many um you know there's more kind of

111
00:03:37,200 --> 00:03:39,280
newer sources of information such as

112
00:03:39,280 --> 00:03:40,720
crunch base where you might start to

113
00:03:40,720 --> 00:03:44,000
harvest information about a target

114
00:03:44,000 --> 00:03:45,120
there's a lot of data that's already

115
00:03:45,120 --> 00:03:47,120
been gathered right you don't have to

116
00:03:47,120 --> 00:03:49,040
scan a target that's kind of what

117
00:03:49,040 --> 00:03:51,519
project sonar and shodan have right

118
00:03:51,519 --> 00:03:54,239
they've they're actively scanning every

119
00:03:54,239 --> 00:03:57,200
um server and endpoint that's exposed on

120
00:03:57,200 --> 00:03:58,799
the internet so you can actually just

121
00:03:58,799 --> 00:03:59,760
kind of

122
00:03:59,760 --> 00:04:01,840
query that and save yourself the effort

123
00:04:01,840 --> 00:04:05,760
of having to to scan right and that time

124
00:04:05,760 --> 00:04:07,519
uh social media really rich source of

125
00:04:07,519 --> 00:04:08,959
information as well right we end up

126
00:04:08,959 --> 00:04:10,080
sharing kind of information

127
00:04:10,080 --> 00:04:11,680
inadvertently

128
00:04:11,680 --> 00:04:14,560
uh get repos and get hunting this is

129
00:04:14,560 --> 00:04:16,399
actually a really significant problem

130
00:04:16,399 --> 00:04:18,880
right kind of secrets exposure or uh

131
00:04:18,880 --> 00:04:21,040
leaking intellectual property really

132
00:04:21,040 --> 00:04:22,479
common though right

133
00:04:22,479 --> 00:04:24,639
we stash code and infrastructures code

134
00:04:24,639 --> 00:04:26,960
and get repositories it tells you quite

135
00:04:26,960 --> 00:04:29,280
a bit about uh you know what how the

136
00:04:29,280 --> 00:04:31,440
company might be um organizing its

137
00:04:31,440 --> 00:04:33,120
systems and apis

138
00:04:33,120 --> 00:04:35,919
s3 buckets uh cloud metadata right

139
00:04:35,919 --> 00:04:37,680
there's no shortage

140
00:04:37,680 --> 00:04:39,680
if anything you have to kind of

141
00:04:39,680 --> 00:04:41,199
shut this down at some point right you

142
00:04:41,199 --> 00:04:42,720
could spend months kind of gathering

143
00:04:42,720 --> 00:04:44,560
information about a target and in some

144
00:04:44,560 --> 00:04:46,320
cases attackers do right particularly if

145
00:04:46,320 --> 00:04:48,639
it's nation state sponsored

146
00:04:48,639 --> 00:04:49,759
uh the other we're actually going to

147
00:04:49,759 --> 00:04:51,680
talk about a little later is

148
00:04:51,680 --> 00:04:53,440
inspecting mobile apps and picking them

149
00:04:53,440 --> 00:04:56,080
apart all right because the reality is

150
00:04:56,080 --> 00:04:57,600
uh anything you

151
00:04:57,600 --> 00:05:01,120
uh want a consumer or customer to use uh

152
00:05:01,120 --> 00:05:02,320
typically you're gonna publish those

153
00:05:02,320 --> 00:05:04,560
things to public app stores

154
00:05:04,560 --> 00:05:05,919
that's freely available right you can

155
00:05:05,919 --> 00:05:08,000
take those binaries and start picking

156
00:05:08,000 --> 00:05:08,840
them

157
00:05:08,840 --> 00:05:10,720
apart

158
00:05:10,720 --> 00:05:11,520
uh

159
00:05:11,520 --> 00:05:13,919
very briefly about methodologies

160
00:05:13,919 --> 00:05:15,840
uh security practitioners sometimes get

161
00:05:15,840 --> 00:05:17,600
hung up on these it's important to

162
00:05:17,600 --> 00:05:19,440
remember that

163
00:05:19,440 --> 00:05:21,039
they're useful for

164
00:05:21,039 --> 00:05:22,639
kind of organizing your thoughts about

165
00:05:22,639 --> 00:05:24,800
how somebody might attack something and

166
00:05:24,800 --> 00:05:26,880
then how you might defend against it

167
00:05:26,880 --> 00:05:29,600
the reality though is that

168
00:05:29,600 --> 00:05:31,440
it's much more continuous right it's not

169
00:05:31,440 --> 00:05:32,400
this

170
00:05:32,400 --> 00:05:35,759
sequential process and

171
00:05:35,759 --> 00:05:38,800
depending on what the

172
00:05:38,800 --> 00:05:42,080
end goal is or the

173
00:05:42,080 --> 00:05:43,600
attack vector or

174
00:05:43,600 --> 00:05:45,520
resource that they're targeting

175
00:05:45,520 --> 00:05:46,960
things like persistence may not even

176
00:05:46,960 --> 00:05:48,320
matter right

177
00:05:48,320 --> 00:05:50,479
you want reproducibility certainly if

178
00:05:50,479 --> 00:05:52,800
you find a bug but you don't really want

179
00:05:52,800 --> 00:05:53,759
to

180
00:05:53,759 --> 00:05:55,600
plant some firmware or

181
00:05:55,600 --> 00:05:57,440
malware that's going to allow you to

182
00:05:57,440 --> 00:05:59,360
kind of create a back door right once

183
00:05:59,360 --> 00:06:01,039
you've found a vulnerable

184
00:06:01,039 --> 00:06:02,720
or flawed api you're going to continue

185
00:06:02,720 --> 00:06:05,039
to target that thing you don't want to

186
00:06:05,039 --> 00:06:07,039
have persistence because now you're

187
00:06:07,039 --> 00:06:08,479
you're leaving tracks right and then you

188
00:06:08,479 --> 00:06:11,120
go into this methodology of having to

189
00:06:11,120 --> 00:06:13,120
cover up your tracks so

190
00:06:13,120 --> 00:06:14,639
many app attacks don't actually kind of

191
00:06:14,639 --> 00:06:16,080
follow this methodology they'll bounce

192
00:06:16,080 --> 00:06:18,639
around right scan as you find something

193
00:06:18,639 --> 00:06:20,720
that looks kind of suspicious you might

194
00:06:20,720 --> 00:06:21,759
start

195
00:06:21,759 --> 00:06:23,680
attacking that thing stealthily right

196
00:06:23,680 --> 00:06:26,479
kind of evade detections

197
00:06:26,479 --> 00:06:28,560
so methodologies look at them but don't

198
00:06:28,560 --> 00:06:31,680
waste a ton of time on them

199
00:06:32,800 --> 00:06:35,280
reverse engineering techniques so this

200
00:06:35,280 --> 00:06:36,319
is where it starts to get a little

201
00:06:36,319 --> 00:06:37,440
interesting

202
00:06:37,440 --> 00:06:38,720
um

203
00:06:38,720 --> 00:06:40,319
there's actually some oauth tools on

204
00:06:40,319 --> 00:06:42,319
this front uh particularly oas zed

205
00:06:42,319 --> 00:06:43,680
attack proxy

206
00:06:43,680 --> 00:06:45,919
uh another one very common in industry

207
00:06:45,919 --> 00:06:48,000
is uh burp suite you know from

208
00:06:48,000 --> 00:06:49,759
portswigger there's quite a few flavors

209
00:06:49,759 --> 00:06:50,960
of that there's a free open source

210
00:06:50,960 --> 00:06:52,560
version so you can start

211
00:06:52,560 --> 00:06:53,680
tinkering

212
00:06:53,680 --> 00:06:55,440
um but there's also

213
00:06:55,440 --> 00:06:56,319
free

214
00:06:56,319 --> 00:06:58,720
kind of uh or alternative debugging

215
00:06:58,720 --> 00:06:59,680
focused

216
00:06:59,680 --> 00:07:01,280
intercepting proxies that are very

217
00:07:01,280 --> 00:07:03,280
common like fiddler you know typically

218
00:07:03,280 --> 00:07:06,080
you'd find a developer might be uh using

219
00:07:06,080 --> 00:07:07,759
something like fiddler because it's more

220
00:07:07,759 --> 00:07:09,840
kind of focused on

221
00:07:09,840 --> 00:07:12,240
app performance right in apis and pages

222
00:07:12,240 --> 00:07:13,840
like how are things loading what's the

223
00:07:13,840 --> 00:07:15,360
response time

224
00:07:15,360 --> 00:07:16,800
and then charles proxy kind of becomes

225
00:07:16,800 --> 00:07:20,160
common on mac os

226
00:07:20,160 --> 00:07:21,680
developer tooling

227
00:07:21,680 --> 00:07:23,520
it can actually be used certainly by

228
00:07:23,520 --> 00:07:25,039
security practitioners but also by

229
00:07:25,039 --> 00:07:26,479
attackers

230
00:07:26,479 --> 00:07:28,720
so things like postman can actually be

231
00:07:28,720 --> 00:07:30,800
used maliciously right because it allows

232
00:07:30,800 --> 00:07:32,479
you to kind of exercise

233
00:07:32,479 --> 00:07:34,720
an api programmatically kind of see how

234
00:07:34,720 --> 00:07:36,880
it responds and then you start adjusting

235
00:07:36,880 --> 00:07:38,080
things

236
00:07:38,080 --> 00:07:40,800
developer ids certainly in scope right

237
00:07:40,800 --> 00:07:43,280
if you have code or you have decompiled

238
00:07:43,280 --> 00:07:45,680
or disassembled code these things also

239
00:07:45,680 --> 00:07:47,599
become incredibly useful so visual

240
00:07:47,599 --> 00:07:49,120
studio and eclipse can become an

241
00:07:49,120 --> 00:07:49,880
attacker tool

242
00:07:49,880 --> 00:07:51,759
[Music]

243
00:07:51,759 --> 00:07:54,400
debuggers decompilers and disassemblers

244
00:07:54,400 --> 00:07:56,319
there's a lot

245
00:07:56,319 --> 00:07:58,560
i would say usually the the journey is

246
00:07:58,560 --> 00:08:00,400
attackers will start with something like

247
00:08:00,400 --> 00:08:02,560
android or picking apart java apps

248
00:08:02,560 --> 00:08:04,479
because it's a little bit easier to

249
00:08:04,479 --> 00:08:06,080
grok and learn the concepts and then

250
00:08:06,080 --> 00:08:08,160
they might start moving to

251
00:08:08,160 --> 00:08:10,080
uh lower level languages or machine

252
00:08:10,080 --> 00:08:11,280
languages

253
00:08:11,280 --> 00:08:12,479
and you know that starts to become

254
00:08:12,479 --> 00:08:14,080
common on

255
00:08:14,080 --> 00:08:16,879
apple operating systems like ios on

256
00:08:16,879 --> 00:08:18,720
mobile devices

257
00:08:18,720 --> 00:08:20,800
but there's no shortage of

258
00:08:20,800 --> 00:08:25,479
debuggers decompilers and disassemblers

259
00:08:26,000 --> 00:08:28,479
how does an attacker kind of figure out

260
00:08:28,479 --> 00:08:31,199
how the api works i mean

261
00:08:31,199 --> 00:08:32,799
this is kind of the flow right whether

262
00:08:32,799 --> 00:08:34,640
it's burp suite or

263
00:08:34,640 --> 00:08:37,599
oasp zap or charles proxy you name it

264
00:08:37,599 --> 00:08:39,120
this is typically how somebody would do

265
00:08:39,120 --> 00:08:40,240
some of that reconnaissance to

266
00:08:40,240 --> 00:08:42,399
understand how do the apis get hit in a

267
00:08:42,399 --> 00:08:43,839
certain sequence

268
00:08:43,839 --> 00:08:45,440
in this case i'm actually just

269
00:08:45,440 --> 00:08:47,440
practicing my

270
00:08:47,440 --> 00:08:49,680
google login you know i wasn't i was

271
00:08:49,680 --> 00:08:50,720
really just for the purpose of

272
00:08:50,720 --> 00:08:52,640
generating the slides

273
00:08:52,640 --> 00:08:53,920
but i want to see

274
00:08:53,920 --> 00:08:55,200
all right michael i just want to let you

275
00:08:55,200 --> 00:08:56,480
know that you're not actually sharing

276
00:08:56,480 --> 00:08:59,519
your slides oh

277
00:08:59,519 --> 00:09:01,440
so we can just see your videos i don't

278
00:09:01,440 --> 00:09:03,680
know if you had on the wrong screen yeah

279
00:09:03,680 --> 00:09:04,959
let me

280
00:09:04,959 --> 00:09:06,640
yes all right let me

281
00:09:06,640 --> 00:09:09,120
backtrack a few slides then

282
00:09:09,120 --> 00:09:10,560
yeah yeah when you read for something

283
00:09:10,560 --> 00:09:12,560
that you were clearly sharing there yeah

284
00:09:12,560 --> 00:09:14,640
a good time to pop in okay

285
00:09:14,640 --> 00:09:16,160
yeah so these are in the slides i

286
00:09:16,160 --> 00:09:17,360
apologize for that hopefully they're

287
00:09:17,360 --> 00:09:19,040
visible now is it

288
00:09:19,040 --> 00:09:20,880
fianna perfect yeah

289
00:09:20,880 --> 00:09:22,880
so sorry about that everybody uh it's

290
00:09:22,880 --> 00:09:24,640
friday hopefully everybody's ready for

291
00:09:24,640 --> 00:09:25,760
the weekend

292
00:09:25,760 --> 00:09:27,760
um so yeah here's the list of the tools

293
00:09:27,760 --> 00:09:29,600
you'll have the slides

294
00:09:29,600 --> 00:09:31,200
um but the other thing that i think is

295
00:09:31,200 --> 00:09:34,160
of most interest i'm glad fiona chimed

296
00:09:34,160 --> 00:09:35,360
in

297
00:09:35,360 --> 00:09:37,279
is that uh this behavior of how an

298
00:09:37,279 --> 00:09:39,760
attacker would try to understand uh how

299
00:09:39,760 --> 00:09:41,440
are the apis hit in a certain sequence

300
00:09:41,440 --> 00:09:44,720
you know i'll start to proxy my uh

301
00:09:44,720 --> 00:09:46,560
user session right in this case i was

302
00:09:46,560 --> 00:09:49,279
just hitting a google web app i want to

303
00:09:49,279 --> 00:09:50,480
see what the authentication and

304
00:09:50,480 --> 00:09:52,640
authorization flow likes so i submit my

305
00:09:52,640 --> 00:09:55,279
password that's not my password i mean

306
00:09:55,279 --> 00:09:56,640
feel free to try you're probably gonna

307
00:09:56,640 --> 00:09:58,240
lock out my account

308
00:09:58,240 --> 00:09:59,440
um

309
00:09:59,440 --> 00:10:00,720
and then i'm gonna observe what does

310
00:10:00,720 --> 00:10:02,560
that look like right and these are the

311
00:10:02,560 --> 00:10:04,240
things that those intercepting proxies

312
00:10:04,240 --> 00:10:05,680
expose

313
00:10:05,680 --> 00:10:06,399
to

314
00:10:06,399 --> 00:10:08,320
anybody right whether it's a user

315
00:10:08,320 --> 00:10:10,640
developer a security tester or an

316
00:10:10,640 --> 00:10:12,720
attacker you get the same information

317
00:10:12,720 --> 00:10:14,399
right because i'm i'm actually observing

318
00:10:14,399 --> 00:10:16,880
what's being sent to my client machine

319
00:10:16,880 --> 00:10:19,839
or a mobile app and these these can be

320
00:10:19,839 --> 00:10:21,680
encrypted communications i mean in this

321
00:10:21,680 --> 00:10:24,800
case it's clearly https and it's google

322
00:10:24,800 --> 00:10:26,160
so they're using the latest version of

323
00:10:26,160 --> 00:10:27,760
tls

324
00:10:27,760 --> 00:10:29,920
but you can see exactly how that api

325
00:10:29,920 --> 00:10:30,959
endpoint

326
00:10:30,959 --> 00:10:33,040
responds to queries and then the data

327
00:10:33,040 --> 00:10:34,399
it's returning right you can see my

328
00:10:34,399 --> 00:10:36,160
password is submitting there into in the

329
00:10:36,160 --> 00:10:37,760
message body

330
00:10:37,760 --> 00:10:38,959
and then what does the response look

331
00:10:38,959 --> 00:10:40,720
like right

332
00:10:40,720 --> 00:10:42,320
you know to post payload here and then

333
00:10:42,320 --> 00:10:44,480
i'd start to pick apart like well

334
00:10:44,480 --> 00:10:45,920
how are they handling their

335
00:10:45,920 --> 00:10:47,760
authorization flows and if it looks

336
00:10:47,760 --> 00:10:49,600
suspicious then i'm going to start to

337
00:10:49,600 --> 00:10:52,240
pivot and manipulate parameters to kind

338
00:10:52,240 --> 00:10:54,160
of attack things

339
00:10:54,160 --> 00:10:55,920
so very common right this is kind of how

340
00:10:55,920 --> 00:10:58,399
most attackers approach

341
00:10:58,399 --> 00:11:00,480
uh figuring out how to apis work and

342
00:11:00,480 --> 00:11:04,160
then uh reverse engineering them

343
00:11:04,160 --> 00:11:05,920
i talked a little bit about intercepting

344
00:11:05,920 --> 00:11:07,839
that encrypted communications this is a

345
00:11:07,839 --> 00:11:10,560
big one i ran into this often as a

346
00:11:10,560 --> 00:11:11,680
practitioner when i was doing the

347
00:11:11,680 --> 00:11:13,360
testing

348
00:11:13,360 --> 00:11:15,519
app teams often didn't understand

349
00:11:15,519 --> 00:11:17,360
because they were told you know if

350
00:11:17,360 --> 00:11:20,240
you're doing tls and you're behind sso

351
00:11:20,240 --> 00:11:21,040
or

352
00:11:21,040 --> 00:11:22,720
you're using the trusted identity and

353
00:11:22,720 --> 00:11:24,240
access management systems your app's

354
00:11:24,240 --> 00:11:25,360
protected

355
00:11:25,360 --> 00:11:27,680
uh it's very misleading right because

356
00:11:27,680 --> 00:11:28,399
it's

357
00:11:28,399 --> 00:11:29,760
you're talking about an authentication

358
00:11:29,760 --> 00:11:32,000
an authorization mechanism for one and

359
00:11:32,000 --> 00:11:33,920
the other is transport protection right

360
00:11:33,920 --> 00:11:36,560
or you know encrypted uh traffic

361
00:11:36,560 --> 00:11:38,320
there's still a lot that can go wrong

362
00:11:38,320 --> 00:11:39,920
right and those are very easy to

363
00:11:39,920 --> 00:11:41,360
overcome

364
00:11:41,360 --> 00:11:43,519
as an attacker so you know in this case

365
00:11:43,519 --> 00:11:45,360
i was just intercepting

366
00:11:45,360 --> 00:11:48,000
my own uh mobile application traffic but

367
00:11:48,000 --> 00:11:50,399
this process is very similar right

368
00:11:50,399 --> 00:11:53,120
generate the uh trusted root certificate

369
00:11:53,120 --> 00:11:55,680
authority uh implicitly trust that on

370
00:11:55,680 --> 00:11:58,160
the device or explicitly trust it

371
00:11:58,160 --> 00:12:00,000
and then you can start to uh decrypt

372
00:12:00,000 --> 00:12:02,399
communications and you might say why

373
00:12:02,399 --> 00:12:04,160
don't own the device how am i gonna push

374
00:12:04,160 --> 00:12:05,760
a certificate that i can intercept

375
00:12:05,760 --> 00:12:07,279
communications

376
00:12:07,279 --> 00:12:09,600
uh there's many techniques uh you know

377
00:12:09,600 --> 00:12:11,600
typically it's it was referred to as man

378
00:12:11,600 --> 00:12:13,519
in the middle these days it's really

379
00:12:13,519 --> 00:12:15,360
person in the middle right it's not

380
00:12:15,360 --> 00:12:17,279
gender um but

381
00:12:17,279 --> 00:12:18,399
the

382
00:12:18,399 --> 00:12:21,440
there's many techniques to compromise um

383
00:12:21,440 --> 00:12:24,480
that encrypted channel right so tls yes

384
00:12:24,480 --> 00:12:26,399
you should do it but uh it's not going

385
00:12:26,399 --> 00:12:28,560
to buy you much other than

386
00:12:28,560 --> 00:12:29,920
hopefully that communication is

387
00:12:29,920 --> 00:12:31,839
protected in transit but that's not even

388
00:12:31,839 --> 00:12:33,760
a given right and these are kind of

389
00:12:33,760 --> 00:12:34,560
where

390
00:12:34,560 --> 00:12:36,639
zero trust concepts might come in right

391
00:12:36,639 --> 00:12:39,440
always presume uh the device or

392
00:12:39,440 --> 00:12:41,600
environment is compromised and you need

393
00:12:41,600 --> 00:12:43,760
to be kind of doing better uh at

394
00:12:43,760 --> 00:12:45,279
security

395
00:12:45,279 --> 00:12:46,959
uh so i won't run through all the

396
00:12:46,959 --> 00:12:48,480
potential attacks how you might

397
00:12:48,480 --> 00:12:51,519
intercept traffic there's quite a few

398
00:12:51,519 --> 00:12:53,120
you know mobile hotspots targeting them

399
00:12:53,120 --> 00:12:55,200
at like a starbucks

400
00:12:55,200 --> 00:12:57,200
maybe tls isn't configured properly or

401
00:12:57,200 --> 00:12:59,519
somebody's using an old version of ssl

402
00:12:59,519 --> 00:13:01,600
they have known exploits so there's many

403
00:13:01,600 --> 00:13:03,519
ways that you can

404
00:13:03,519 --> 00:13:05,760
kind of decrypt these communications as

405
00:13:05,760 --> 00:13:08,399
an attacker

406
00:13:08,560 --> 00:13:10,560
uh but that's not it really right like

407
00:13:10,560 --> 00:13:12,160
that would be if i wanted to

408
00:13:12,160 --> 00:13:14,720
target a user and an app on a specific

409
00:13:14,720 --> 00:13:16,800
device in this case i just want to know

410
00:13:16,800 --> 00:13:18,079
what the api is and then i'm going to

411
00:13:18,079 --> 00:13:19,680
target that

412
00:13:19,680 --> 00:13:21,120
directly

413
00:13:21,120 --> 00:13:24,560
and this one's really important because

414
00:13:24,639 --> 00:13:26,240
it's actually based on some research

415
00:13:26,240 --> 00:13:29,040
that our salt labs division produced and

416
00:13:29,040 --> 00:13:31,920
the reports linked at the end

417
00:13:31,920 --> 00:13:33,600
but many organizations rely on api

418
00:13:33,600 --> 00:13:35,600
gateways and web app firewalls to

419
00:13:35,600 --> 00:13:38,240
protect their applications and apis

420
00:13:38,240 --> 00:13:40,880
the problem is uh most modern api

421
00:13:40,880 --> 00:13:43,440
attacks don't follow well-defined

422
00:13:43,440 --> 00:13:45,279
patterns right we we had a little bit of

423
00:13:45,279 --> 00:13:47,440
that in the last session there was some

424
00:13:47,440 --> 00:13:48,800
discussion about

425
00:13:48,800 --> 00:13:50,639
security testing tools and wafts how

426
00:13:50,639 --> 00:13:53,040
they're kind of more traditional really

427
00:13:53,040 --> 00:13:54,720
they're signature based right so they're

428
00:13:54,720 --> 00:13:57,360
looking for kind of known malicious

429
00:13:57,360 --> 00:13:59,839
character sets or patterns

430
00:13:59,839 --> 00:14:02,160
uh your apis that you're building or

431
00:14:02,160 --> 00:14:03,519
consuming like in the case of an

432
00:14:03,519 --> 00:14:06,160
integrated uh supply chain uh that's

433
00:14:06,160 --> 00:14:07,440
gonna look drastically different from

434
00:14:07,440 --> 00:14:09,519
one organization to the next right and

435
00:14:09,519 --> 00:14:10,320
this

436
00:14:10,320 --> 00:14:12,880
this uh this specific case

437
00:14:12,880 --> 00:14:15,199
here um this is actually an example of a

438
00:14:15,199 --> 00:14:17,760
broken object level authorization

439
00:14:17,760 --> 00:14:20,160
flaw an attack but

440
00:14:20,160 --> 00:14:21,519
uh for one

441
00:14:21,519 --> 00:14:22,959
you know the attacker will first get the

442
00:14:22,959 --> 00:14:25,279
authenticated session so

443
00:14:25,279 --> 00:14:27,040
your authentication and authorization

444
00:14:27,040 --> 00:14:28,160
has already

445
00:14:28,160 --> 00:14:30,000
kind of been defeated in a sense right i

446
00:14:30,000 --> 00:14:32,959
can get an authenticated session from

447
00:14:32,959 --> 00:14:35,360
either hijacking that communication or

448
00:14:35,360 --> 00:14:36,560
intercepting

449
00:14:36,560 --> 00:14:38,320
um putting something malicious on the

450
00:14:38,320 --> 00:14:40,880
device you name it there's many um even

451
00:14:40,880 --> 00:14:42,480
phishing right so

452
00:14:42,480 --> 00:14:44,800
we have an authenticated session uh and

453
00:14:44,800 --> 00:14:45,680
then we're gonna manipulate the

454
00:14:45,680 --> 00:14:46,959
parameters right i was talking about

455
00:14:46,959 --> 00:14:49,279
that with the intercepting proxies

456
00:14:49,279 --> 00:14:51,519
so adjust file parameters or id

457
00:14:51,519 --> 00:14:54,079
parameters uh or object identifiers

458
00:14:54,079 --> 00:14:55,920
really right and it could

459
00:14:55,920 --> 00:14:57,440
just as well have been something in a

460
00:14:57,440 --> 00:15:00,160
post payload in this case it was a get

461
00:15:00,160 --> 00:15:01,839
request so you're just manipulating

462
00:15:01,839 --> 00:15:04,800
things uh in the url directly

463
00:15:04,800 --> 00:15:07,199
and then the server responds uh with the

464
00:15:07,199 --> 00:15:08,959
data right because it doesn't

465
00:15:08,959 --> 00:15:10,880
it's not checking are you actually

466
00:15:10,880 --> 00:15:14,000
authorized to access this piece of data

467
00:15:14,000 --> 00:15:15,519
uh and in this case that that piece of

468
00:15:15,519 --> 00:15:18,399
data is actually an image of check

469
00:15:18,399 --> 00:15:20,639
you know personal bank check

470
00:15:20,639 --> 00:15:22,000
major problem right that's kind of

471
00:15:22,000 --> 00:15:24,079
nightmare scenario for a bank

472
00:15:24,079 --> 00:15:25,839
uh so you could access data that you

473
00:15:25,839 --> 00:15:27,519
weren't authorized for

474
00:15:27,519 --> 00:15:29,440
uh and this works often right this is

475
00:15:29,440 --> 00:15:32,880
why bola is number one on the oasis api

476
00:15:32,880 --> 00:15:34,800
security top ten because it's really

477
00:15:34,800 --> 00:15:37,279
hard to get authorization right right

478
00:15:37,279 --> 00:15:38,560
you have to

479
00:15:38,560 --> 00:15:40,480
be continuously verifying authorization

480
00:15:40,480 --> 00:15:42,079
throughout a session it can't just be on

481
00:15:42,079 --> 00:15:44,240
initial login what happens if somebody

482
00:15:44,240 --> 00:15:46,639
compromises the session gets a hold of

483
00:15:46,639 --> 00:15:49,040
an authenticated session cookie or

484
00:15:49,040 --> 00:15:50,959
oh off token right there's there's many

485
00:15:50,959 --> 00:15:52,399
different attacks that target the

486
00:15:52,399 --> 00:15:54,800
authenticated state but yeah many

487
00:15:54,800 --> 00:15:56,800
attacks actually occur in authenticated

488
00:15:56,800 --> 00:16:01,279
sessions and encrypted uh channels

489
00:16:01,440 --> 00:16:03,040
all right so how do attackers automate

490
00:16:03,040 --> 00:16:05,600
their api attacks we kind of ran through

491
00:16:05,600 --> 00:16:07,279
the basics right how do they intercept

492
00:16:07,279 --> 00:16:09,600
the traffic or how do they find the apis

493
00:16:09,600 --> 00:16:10,800
then how do they intercept where they

494
00:16:10,800 --> 00:16:13,519
can start to manipulate api calls

495
00:16:13,519 --> 00:16:16,000
um so you know presumably you know many

496
00:16:16,000 --> 00:16:17,680
attackers are gonna start to pivot now

497
00:16:17,680 --> 00:16:20,079
right uh if i know that this api exposes

498
00:16:20,079 --> 00:16:21,279
some data

499
00:16:21,279 --> 00:16:24,000
may want to scrape or you know

500
00:16:24,000 --> 00:16:26,240
uh enumerate through the entire user

501
00:16:26,240 --> 00:16:27,759
database or

502
00:16:27,759 --> 00:16:30,639
uh check image store right to extract

503
00:16:30,639 --> 00:16:32,240
everything right because now

504
00:16:32,240 --> 00:16:34,160
i could have a giant treasure trove of

505
00:16:34,160 --> 00:16:36,480
information maybe i want to resell that

506
00:16:36,480 --> 00:16:39,120
maybe i'm going to

507
00:16:39,120 --> 00:16:40,880
demand ransom from the target right

508
00:16:40,880 --> 00:16:43,519
there's many scenarios

509
00:16:43,519 --> 00:16:45,759
one of the most common though that we

510
00:16:45,759 --> 00:16:47,600
see across verticals is really

511
00:16:47,600 --> 00:16:49,519
credential stuffing

512
00:16:49,519 --> 00:16:51,440
and this often gets uh conflated with

513
00:16:51,440 --> 00:16:54,240
account takeover really the

514
00:16:54,240 --> 00:16:55,839
attack pattern is credential stuffing

515
00:16:55,839 --> 00:16:58,160
that leads to account takeover that's

516
00:16:58,160 --> 00:17:00,079
kind of the end goal uh but the first

517
00:17:00,079 --> 00:17:01,839
step it's you know what we've been

518
00:17:01,839 --> 00:17:02,959
talking about perform that

519
00:17:02,959 --> 00:17:05,520
reconnaissance of a given target

520
00:17:05,520 --> 00:17:07,520
discover its apis that's what i'm going

521
00:17:07,520 --> 00:17:10,240
to kind of zone in on

522
00:17:10,240 --> 00:17:12,799
uh in the case of credential stuffing

523
00:17:12,799 --> 00:17:14,319
i'm actually going to be working from a

524
00:17:14,319 --> 00:17:16,000
data set of

525
00:17:16,000 --> 00:17:17,760
known working credentials at one point

526
00:17:17,760 --> 00:17:19,919
or pilfer credentials it could be from

527
00:17:19,919 --> 00:17:22,000
that target it might actually be from

528
00:17:22,000 --> 00:17:24,959
anybody right there's there's many

529
00:17:24,959 --> 00:17:27,760
repositories of stolen or leaked

530
00:17:27,760 --> 00:17:30,880
credentials now that attackers can use

531
00:17:30,880 --> 00:17:33,679
and then using their tools to automate

532
00:17:33,679 --> 00:17:35,120
attacks

533
00:17:35,120 --> 00:17:36,799
and that's kind of the next step right

534
00:17:36,799 --> 00:17:39,360
uh even to something like burp suite or

535
00:17:39,360 --> 00:17:40,640
zap

536
00:17:40,640 --> 00:17:42,799
uh you can actually feed those user

537
00:17:42,799 --> 00:17:45,520
credentials into the tool and now target

538
00:17:45,520 --> 00:17:47,200
an api endpoint

539
00:17:47,200 --> 00:17:49,120
uh run through all the credentials and

540
00:17:49,120 --> 00:17:50,799
do it with throttling right and that's

541
00:17:50,799 --> 00:17:52,480
really important because

542
00:17:52,480 --> 00:17:54,880
like i was mentioning with api gateways

543
00:17:54,880 --> 00:17:55,760
um

544
00:17:55,760 --> 00:17:57,600
another kind of uh

545
00:17:57,600 --> 00:17:59,760
often used mechanism is rate limiting

546
00:17:59,760 --> 00:18:00,400
right

547
00:18:00,400 --> 00:18:02,000
if i'm seeing more than

548
00:18:02,000 --> 00:18:04,240
i don't know 10 requests in a minute

549
00:18:04,240 --> 00:18:05,600
i want to

550
00:18:05,600 --> 00:18:07,200
start blocking that connection maybe

551
00:18:07,200 --> 00:18:10,160
terminate the authenticated state

552
00:18:10,160 --> 00:18:12,480
redirect to some authentication page you

553
00:18:12,480 --> 00:18:13,360
name it

554
00:18:13,360 --> 00:18:15,840
but as an attacker you can kind of probe

555
00:18:15,840 --> 00:18:18,240
for those things right and then adjust

556
00:18:18,240 --> 00:18:21,120
your request rate down to evade that and

557
00:18:21,120 --> 00:18:24,080
that's what attackers do

558
00:18:24,720 --> 00:18:26,400
and then launch the attack right in this

559
00:18:26,400 --> 00:18:28,000
case it's against the login api because

560
00:18:28,000 --> 00:18:29,280
i'm attempting

561
00:18:29,280 --> 00:18:31,600
to take over a customer account or

562
00:18:31,600 --> 00:18:33,600
employee account

563
00:18:33,600 --> 00:18:35,280
and then i have to track as an attacker

564
00:18:35,280 --> 00:18:37,039
did the login work you know because

565
00:18:37,039 --> 00:18:39,440
typically i'm doing this against

566
00:18:39,440 --> 00:18:41,919
thousands of users and potentially a

567
00:18:41,919 --> 00:18:43,679
much larger database of

568
00:18:43,679 --> 00:18:46,960
originating credentials

569
00:18:48,720 --> 00:18:50,240
taking this to the next level i mean

570
00:18:50,240 --> 00:18:52,080
typically when attackers do

571
00:18:52,080 --> 00:18:53,440
attempt financial stuffing they

572
00:18:53,440 --> 00:18:55,200
distribute their attacks

573
00:18:55,200 --> 00:18:57,760
and geographically right and it doesn't

574
00:18:57,760 --> 00:18:59,280
it doesn't mean that i need to be in

575
00:18:59,280 --> 00:19:01,919
those locations i just need to deploy

576
00:19:01,919 --> 00:19:05,360
my scripts or tooling on machines in

577
00:19:05,360 --> 00:19:07,039
other locations

578
00:19:07,039 --> 00:19:08,400
which is really convenient right when

579
00:19:08,400 --> 00:19:10,640
you think about cloud service providers

580
00:19:10,640 --> 00:19:12,799
as an attacker you can actually leverage

581
00:19:12,799 --> 00:19:15,039
aws to attack other targets and that

582
00:19:15,039 --> 00:19:16,240
does happen

583
00:19:16,240 --> 00:19:17,679
right and that's often a trusted ip

584
00:19:17,679 --> 00:19:19,760
address space too so

585
00:19:19,760 --> 00:19:21,760
uh really tricky we see this very

586
00:19:21,760 --> 00:19:23,120
commonly when it comes to credential

587
00:19:23,120 --> 00:19:24,880
stuffing where it's distributed and

588
00:19:24,880 --> 00:19:26,080
throttled

589
00:19:26,080 --> 00:19:28,160
um and attackers you know kind of been

590
00:19:28,160 --> 00:19:30,559
alluding to this throughout but uh

591
00:19:30,559 --> 00:19:32,720
it's always throttled right uh

592
00:19:32,720 --> 00:19:34,720
distributed to kind of

593
00:19:34,720 --> 00:19:37,200
evade detections and kind of trick uh

594
00:19:37,200 --> 00:19:39,360
you know security process or suck ops

595
00:19:39,360 --> 00:19:41,200
whoever's monitoring for this

596
00:19:41,200 --> 00:19:42,480
likely not going to see it because it

597
00:19:42,480 --> 00:19:44,400
could look like any other authentication

598
00:19:44,400 --> 00:19:45,840
failure

599
00:19:45,840 --> 00:19:47,520
or low and slow right that's another

600
00:19:47,520 --> 00:19:50,880
kind of term that's often thrown around

601
00:19:50,880 --> 00:19:53,520
um you know wrapping up some of

602
00:19:53,520 --> 00:19:55,600
what we've been talking about uh api

603
00:19:55,600 --> 00:19:57,360
attacks are really common

604
00:19:57,360 --> 00:19:59,039
i mentioned the oauth of api security

605
00:19:59,039 --> 00:20:00,400
top 10

606
00:20:00,400 --> 00:20:02,720
uh it's new right it's 2019 most

607
00:20:02,720 --> 00:20:04,720
practitioners are more familiar with the

608
00:20:04,720 --> 00:20:07,520
app application security top 10

609
00:20:07,520 --> 00:20:10,240
maybe mobile but maybe even less api

610
00:20:10,240 --> 00:20:12,240
security top ten and there's uniqueness

611
00:20:12,240 --> 00:20:14,320
across all of them right so it's not

612
00:20:14,320 --> 00:20:16,080
universally known

613
00:20:16,080 --> 00:20:17,840
um i talked about that credential

614
00:20:17,840 --> 00:20:19,440
stuffing how it's often mixed up with

615
00:20:19,440 --> 00:20:22,240
account takeover that is very common but

616
00:20:22,240 --> 00:20:24,159
so is where it gets mixed up with brute

617
00:20:24,159 --> 00:20:26,880
forcing or application level denial of

618
00:20:26,880 --> 00:20:28,960
service or distributed denial of service

619
00:20:28,960 --> 00:20:30,799
right there's a lot of kind of confusion

620
00:20:30,799 --> 00:20:32,400
on what an attack is

621
00:20:32,400 --> 00:20:34,320
and your response or mitigation actually

622
00:20:34,320 --> 00:20:35,919
needs to be much different depending on

623
00:20:35,919 --> 00:20:38,559
what the attacker is attempting

624
00:20:38,559 --> 00:20:39,760
now what does it mean if an api is

625
00:20:39,760 --> 00:20:41,039
leaking right well typically it's

626
00:20:41,039 --> 00:20:43,760
exposing too much data or it might have

627
00:20:43,760 --> 00:20:45,679
weaker authentication and authorization

628
00:20:45,679 --> 00:20:47,360
that kind of leads to

629
00:20:47,360 --> 00:20:50,799
the ability to enumerate and scrape data

630
00:20:50,799 --> 00:20:52,400
attackers are learning faster than

631
00:20:52,400 --> 00:20:54,559
security practitioners unfortunately

632
00:20:54,559 --> 00:20:56,240
right they they know this kind of

633
00:20:56,240 --> 00:20:58,320
reality of cloud computing uh

634
00:20:58,320 --> 00:21:00,559
traditional security controls are often

635
00:21:00,559 --> 00:21:03,440
built against or built to use rate

636
00:21:03,440 --> 00:21:06,320
limits and ip address blocks

637
00:21:06,320 --> 00:21:09,200
or allow deny lists so just spin up some

638
00:21:09,200 --> 00:21:11,440
compute launch an attack move to a next

639
00:21:11,440 --> 00:21:14,720
resource very common for even a semi

640
00:21:14,720 --> 00:21:17,280
advanced attacker

641
00:21:17,280 --> 00:21:18,720
on those traditional approaches i've

642
00:21:18,720 --> 00:21:19,919
kind of been talking about this right

643
00:21:19,919 --> 00:21:21,919
they they're just not architected for

644
00:21:21,919 --> 00:21:24,480
this world right wafts and gateways

645
00:21:24,480 --> 00:21:26,480
uh we talked about raid limiting but uh

646
00:21:26,480 --> 00:21:28,480
threat protection filters those things

647
00:21:28,480 --> 00:21:30,960
that rely on rules and signatures are

648
00:21:30,960 --> 00:21:32,640
often not well maintained or it's very

649
00:21:32,640 --> 00:21:35,280
hard to

650
00:21:35,600 --> 00:21:37,760
tune them effectively for all your apis

651
00:21:37,760 --> 00:21:39,600
at scale it's just where most

652
00:21:39,600 --> 00:21:42,799
organizations fall down

653
00:21:42,960 --> 00:21:45,039
how we approach it at salt

654
00:21:45,039 --> 00:21:46,400
uh i'm gonna run through this quick

655
00:21:46,400 --> 00:21:47,600
because i wanna make sure we have some

656
00:21:47,600 --> 00:21:49,280
time for questions

657
00:21:49,280 --> 00:21:50,960
uh but really it's you know when you

658
00:21:50,960 --> 00:21:52,559
think about your enterprise architecture

659
00:21:52,559 --> 00:21:54,720
you likely have a lot of network

660
00:21:54,720 --> 00:21:55,760
elements

661
00:21:55,760 --> 00:21:58,159
different things serving apis you really

662
00:21:58,159 --> 00:21:59,760
need to gather all that data right

663
00:21:59,760 --> 00:22:01,440
because that's going to provide your api

664
00:22:01,440 --> 00:22:04,320
telemetry that you can now to hopefully

665
00:22:04,320 --> 00:22:06,480
uh start to pick out these signals right

666
00:22:06,480 --> 00:22:08,400
indicators of compromise

667
00:22:08,400 --> 00:22:10,840
or in this case api

668
00:22:10,840 --> 00:22:13,280
abuses there's an ai

669
00:22:13,280 --> 00:22:16,159
powered engine or ml that analyzes all

670
00:22:16,159 --> 00:22:18,480
this traffic for patterns and it's

671
00:22:18,480 --> 00:22:20,000
unique to your environment right because

672
00:22:20,000 --> 00:22:22,799
i mentioned how apis are often

673
00:22:22,799 --> 00:22:24,320
coded with unique business logic so

674
00:22:24,320 --> 00:22:25,520
they're going to look very different

675
00:22:25,520 --> 00:22:26,559
from one

676
00:22:26,559 --> 00:22:29,200
organization to the next

677
00:22:29,200 --> 00:22:31,120
collectively that's the context-based

678
00:22:31,120 --> 00:22:34,880
api analysis architecture or c3a

679
00:22:34,880 --> 00:22:36,880
and all that data feeds the protection

680
00:22:36,880 --> 00:22:39,120
platform itself

681
00:22:39,120 --> 00:22:41,520
uh the primary use cases that we often

682
00:22:41,520 --> 00:22:42,960
see

683
00:22:42,960 --> 00:22:45,120
uh it's discovery right we talked about

684
00:22:45,120 --> 00:22:47,039
uh how attackers discover apis but

685
00:22:47,039 --> 00:22:48,799
actually a lot of organizations have

686
00:22:48,799 --> 00:22:50,480
trouble discovering all their apis as

687
00:22:50,480 --> 00:22:52,480
well because there are a lot of systems

688
00:22:52,480 --> 00:22:54,400
and applications uh that you're

689
00:22:54,400 --> 00:22:57,200
procuring integrating building uh it's a

690
00:22:57,200 --> 00:22:59,280
lot to kind of keep track of and then

691
00:22:59,280 --> 00:23:00,559
how do you know if you're actually under

692
00:23:00,559 --> 00:23:03,039
attack right that's that's often a tough

693
00:23:03,039 --> 00:23:04,720
question to answer right and which style

694
00:23:04,720 --> 00:23:06,159
of attack right your

695
00:23:06,159 --> 00:23:07,360
your uh

696
00:23:07,360 --> 00:23:09,039
your sock might only be looking for

697
00:23:09,039 --> 00:23:10,799
ransomware and they're not actually

698
00:23:10,799 --> 00:23:13,840
versed in uh applications

699
00:23:13,840 --> 00:23:15,600
and then improve posture over time this

700
00:23:15,600 --> 00:23:17,360
actually kind of feeds more into um

701
00:23:17,360 --> 00:23:19,840
devops or like feedback loops but as you

702
00:23:19,840 --> 00:23:21,679
find issues in your apis you want to be

703
00:23:21,679 --> 00:23:23,440
fixing those things and it could be a

704
00:23:23,440 --> 00:23:25,039
code level fix

705
00:23:25,039 --> 00:23:26,640
but it might also be infrastructure

706
00:23:26,640 --> 00:23:29,200
right maybe a rate limit is appropriate

707
00:23:29,200 --> 00:23:31,120
uh maybe you should be challenging for

708
00:23:31,120 --> 00:23:32,640
authentication and authorization so you

709
00:23:32,640 --> 00:23:34,080
need to do a handoff to access

710
00:23:34,080 --> 00:23:37,080
management

711
00:23:39,360 --> 00:23:40,640
um just some other kind of

712
00:23:40,640 --> 00:23:43,440
characteristics of the platform

713
00:23:43,440 --> 00:23:45,360
uh yes it does address the oasp api

714
00:23:45,360 --> 00:23:46,880
security top ten

715
00:23:46,880 --> 00:23:48,559
that's not easy to do right there are

716
00:23:48,559 --> 00:23:50,559
there are quite a few items

717
00:23:50,559 --> 00:23:52,400
in there that basically throw out all

718
00:23:52,400 --> 00:23:54,159
the traditional mechanisms right they

719
00:23:54,159 --> 00:23:56,080
just don't work uh at best they can

720
00:23:56,080 --> 00:23:58,559
handle uh some of the injection flaws

721
00:23:58,559 --> 00:24:00,240
but not all of them and that's only one

722
00:24:00,240 --> 00:24:01,679
of the top ten

723
00:24:01,679 --> 00:24:03,039
uh and we need to integrate with your

724
00:24:03,039 --> 00:24:05,039
existing proxies right

725
00:24:05,039 --> 00:24:06,400
proxies become a problem when you start

726
00:24:06,400 --> 00:24:07,919
talking about api performance you don't

727
00:24:07,919 --> 00:24:09,760
want to be introducing additional

728
00:24:09,760 --> 00:24:12,000
proxies

729
00:24:12,000 --> 00:24:15,039
uh there's a lot of resources here um

730
00:24:15,039 --> 00:24:16,400
this is kind of

731
00:24:16,400 --> 00:24:18,799
my entire focus at salt security is to

732
00:24:18,799 --> 00:24:20,720
generate content for practitioners and

733
00:24:20,720 --> 00:24:22,400
kind of raise awareness

734
00:24:22,400 --> 00:24:24,320
about the problems of api security how

735
00:24:24,320 --> 00:24:26,559
can you improve things how are attackers

736
00:24:26,559 --> 00:24:28,880
working i mentioned the threat research

737
00:24:28,880 --> 00:24:32,240
reports from our salt labs division take

738
00:24:32,240 --> 00:24:33,440
a look at them right because it

739
00:24:33,440 --> 00:24:36,480
describes how attackers go about finding

740
00:24:36,480 --> 00:24:38,240
the apis and then

741
00:24:38,240 --> 00:24:40,720
exploiting and abusing them

742
00:24:40,720 --> 00:24:43,760
my contact info is there as well so

743
00:24:43,760 --> 00:24:45,760
with that i will

744
00:24:45,760 --> 00:24:47,679
say thank you and hopefully we have some

745
00:24:47,679 --> 00:24:50,400
questions

