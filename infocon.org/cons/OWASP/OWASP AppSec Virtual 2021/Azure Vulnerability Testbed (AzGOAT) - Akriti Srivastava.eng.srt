1
00:00:01,420 --> 00:00:05,630
[Music]

2
00:00:05,759 --> 00:00:07,839
so hello everyone good morning good

3
00:00:07,839 --> 00:00:10,480
afternoon i can say and

4
00:00:10,480 --> 00:00:13,120
yes good early morning to uh asia

5
00:00:13,120 --> 00:00:14,719
pacific people

6
00:00:14,719 --> 00:00:17,119
so i am akriti srivastava

7
00:00:17,119 --> 00:00:18,960
and i am presenting on the topic of

8
00:00:18,960 --> 00:00:21,039
azure vulnerability test bank that is

9
00:00:21,039 --> 00:00:22,160
easy good

10
00:00:22,160 --> 00:00:23,119
uh

11
00:00:23,119 --> 00:00:23,920
so

12
00:00:23,920 --> 00:00:26,000
let's proceed further

13
00:00:26,000 --> 00:00:29,359
uh before we proceed with the slides

14
00:00:29,359 --> 00:00:31,199
there's one thing which i want to tell

15
00:00:31,199 --> 00:00:32,960
that the views and opinions expressed in

16
00:00:32,960 --> 00:00:34,800
this presentation are my own and they

17
00:00:34,800 --> 00:00:37,120
don't represent my organization's

18
00:00:37,120 --> 00:00:38,320
view

19
00:00:38,320 --> 00:00:40,719
and who am i as alex has already

20
00:00:40,719 --> 00:00:43,040
introduced me but still

21
00:00:43,040 --> 00:00:45,360
let me do that favor because i have

22
00:00:45,360 --> 00:00:47,360
written this in slide

23
00:00:47,360 --> 00:00:50,079
i'm ecppt is a certified security

24
00:00:50,079 --> 00:00:51,920
enthusiast and i have experience of

25
00:00:51,920 --> 00:00:54,800
eight years uh i have spoken at various

26
00:00:54,800 --> 00:00:56,399
multiple conference whether they were

27
00:00:56,399 --> 00:00:58,399
internal adobe's conference or they were

28
00:00:58,399 --> 00:01:01,440
externals as well uh some of uh one to

29
00:01:01,440 --> 00:01:06,400
name one is cs3 htlm uh that was for iot

30
00:01:06,400 --> 00:01:08,479
and uh i've been responsible for various

31
00:01:08,479 --> 00:01:09,439
uh

32
00:01:09,439 --> 00:01:10,960
uh i've been responsible for various

33
00:01:10,960 --> 00:01:14,000
disclosures to name one is i hold google

34
00:01:14,000 --> 00:01:16,159
hall of fame and i have been a blogger

35
00:01:16,159 --> 00:01:18,720
but uh have been a little bit dormant

36
00:01:18,720 --> 00:01:22,479
since uh sometime but yeah i will start

37
00:01:22,479 --> 00:01:23,759
it again

38
00:01:23,759 --> 00:01:25,600
so coming to the agenda what we are

39
00:01:25,600 --> 00:01:29,200
going to discuss in this easy good talk

40
00:01:29,200 --> 00:01:31,600
so it's like we will be first talking

41
00:01:31,600 --> 00:01:34,159
about the threats that lead to a

42
00:01:34,159 --> 00:01:36,000
compromise of azure

43
00:01:36,000 --> 00:01:38,159
and then we will be introducing easy

44
00:01:38,159 --> 00:01:39,040
goat

45
00:01:39,040 --> 00:01:40,560
and we will be telling about the

46
00:01:40,560 --> 00:01:43,759
benefits what are the benefits

47
00:01:43,759 --> 00:01:45,680
we will be venturing in depth of easy

48
00:01:45,680 --> 00:01:47,360
code roadmap

49
00:01:47,360 --> 00:01:50,560
and action items so before i go ahead

50
00:01:50,560 --> 00:01:52,720
with further slides i just want to tell

51
00:01:52,720 --> 00:01:55,119
that why the agenda is designed like

52
00:01:55,119 --> 00:01:57,680
this so first portion will be telling

53
00:01:57,680 --> 00:01:59,759
that why we will be requiring easy good

54
00:01:59,759 --> 00:02:01,200
that's uh

55
00:02:01,200 --> 00:02:03,119
we will be elaborating on that why there

56
00:02:03,119 --> 00:02:05,439
was need to develop such thing and then

57
00:02:05,439 --> 00:02:08,080
we will be telling what is easy code and

58
00:02:08,080 --> 00:02:10,080
after that we will be telling how it is

59
00:02:10,080 --> 00:02:12,239
going to benefit our audience uh our

60
00:02:12,239 --> 00:02:14,560
security community or i can say

61
00:02:14,560 --> 00:02:16,800
devsecops community

62
00:02:16,800 --> 00:02:19,920
and then we will be seeing uh in depth

63
00:02:19,920 --> 00:02:23,520
of ac we will be seeing uh demos so we

64
00:02:23,520 --> 00:02:25,760
have three scenario demos and apart from

65
00:02:25,760 --> 00:02:28,959
that we have one introductory demo

66
00:02:28,959 --> 00:02:31,120
and uh where we are and what is our

67
00:02:31,120 --> 00:02:33,120
roadmap for ac code that also we will be

68
00:02:33,120 --> 00:02:34,160
going through

69
00:02:34,160 --> 00:02:36,160
uh then yes obviously we have action

70
00:02:36,160 --> 00:02:37,840
items

71
00:02:37,840 --> 00:02:40,720
so starting with the very first uh point

72
00:02:40,720 --> 00:02:43,200
that azure is a market leader and a

73
00:02:43,200 --> 00:02:45,760
proof we can see here in this chart uh

74
00:02:45,760 --> 00:02:48,160
we can see that this is the worldwide

75
00:02:48,160 --> 00:02:51,519
market share and microsoft and amazon

76
00:02:51,519 --> 00:02:53,120
are the biggest player here and

77
00:02:53,120 --> 00:02:55,760
microsoft holds about 18 percent of the

78
00:02:55,760 --> 00:02:57,599
worldwide market share

79
00:02:57,599 --> 00:02:59,280
and another amazing thing which i found

80
00:02:59,280 --> 00:03:01,920
on net was that if you can see this

81
00:03:01,920 --> 00:03:04,640
statistics this is again another proof

82
00:03:04,640 --> 00:03:06,959
that azure is growing like anything and

83
00:03:06,959 --> 00:03:09,599
again it is a big competitor to uh big

84
00:03:09,599 --> 00:03:12,400
scale cloud service providers like aws

85
00:03:12,400 --> 00:03:14,319
and google cloud

86
00:03:14,319 --> 00:03:16,640
and many others as well and you can see

87
00:03:16,640 --> 00:03:20,239
this is the current usage uh i can just

88
00:03:20,239 --> 00:03:22,959
uh enlarge it a bit so it's like current

89
00:03:22,959 --> 00:03:26,640
usage is 63 and plan is six percent but

90
00:03:26,640 --> 00:03:28,239
this is

91
00:03:28,239 --> 00:03:30,159
experimenting is 20

92
00:03:30,159 --> 00:03:33,280
so this is a big proof that yes azure is

93
00:03:33,280 --> 00:03:36,799
gaining big boom in the market of um

94
00:03:36,799 --> 00:03:39,680
cloud service provider and yes

95
00:03:39,680 --> 00:03:43,760
that comes with a new point that it is

96
00:03:43,760 --> 00:03:47,040
coming in radar of adversaries so

97
00:03:47,040 --> 00:03:49,040
yes because it is getting

98
00:03:49,040 --> 00:03:51,519
more and more used so obviously

99
00:03:51,519 --> 00:03:53,840
attackers will be trying to target more

100
00:03:53,840 --> 00:03:54,879
um

101
00:03:54,879 --> 00:03:55,680
the

102
00:03:55,680 --> 00:03:56,799
more on the

103
00:03:56,799 --> 00:03:58,480
applications or services which are

104
00:03:58,480 --> 00:04:01,760
posted here in azure environment

105
00:04:01,760 --> 00:04:03,360
so

106
00:04:03,360 --> 00:04:06,159
this is one thing

107
00:04:07,599 --> 00:04:09,519
then we will go through some recent

108
00:04:09,519 --> 00:04:12,319
breaches that again show uh that there

109
00:04:12,319 --> 00:04:14,319
have been a increase in frequency of

110
00:04:14,319 --> 00:04:16,238
attacks on azure environment

111
00:04:16,238 --> 00:04:19,600
so first of all uh we will pick up this

112
00:04:19,600 --> 00:04:22,320
i can so any any guess any guess what it

113
00:04:22,320 --> 00:04:25,199
is i know you all will be on mute uh but

114
00:04:25,199 --> 00:04:28,400
yes um you can think on chat board

115
00:04:28,400 --> 00:04:31,600
uh so this is cosmos

116
00:04:31,600 --> 00:04:35,759
cosmos tv so it was labeled as geosdb by

117
00:04:35,759 --> 00:04:39,199
uh wiz that's a research organization so

118
00:04:39,199 --> 00:04:41,280
this vulnerability which was found in

119
00:04:41,280 --> 00:04:43,840
azure was

120
00:04:44,479 --> 00:04:47,680
that they were able to uh get primary

121
00:04:47,680 --> 00:04:50,639
key as well as storage token of

122
00:04:50,639 --> 00:04:52,960
different customers almost they can say

123
00:04:52,960 --> 00:04:55,120
all of the customers i can say

124
00:04:55,120 --> 00:04:56,639
in some of the posts i have gone through

125
00:04:56,639 --> 00:04:59,280
it was written that almost fortune 500

126
00:04:59,280 --> 00:05:01,199
companies were covered here

127
00:05:01,199 --> 00:05:03,520
and this was done by a privilege

128
00:05:03,520 --> 00:05:06,320
escalation through their own uh jupiter

129
00:05:06,320 --> 00:05:08,880
notebook through that they were able to

130
00:05:08,880 --> 00:05:11,280
get such sensitive data and from that

131
00:05:11,280 --> 00:05:13,600
they were able to get into the cosmos db

132
00:05:13,600 --> 00:05:16,000
of another organizations

133
00:05:16,000 --> 00:05:17,280
then we have

134
00:05:17,280 --> 00:05:20,960
this one um okay this looks like some

135
00:05:20,960 --> 00:05:22,960
thing related to medical

136
00:05:22,960 --> 00:05:25,440
uh yes you you are correct if you are

137
00:05:25,440 --> 00:05:27,280
thinking such you are correct this is

138
00:05:27,280 --> 00:05:28,479
probates

139
00:05:28,479 --> 00:05:31,440
so probates is a uk based firm and it is

140
00:05:31,440 --> 00:05:34,560
for uh it's related to medical uh

141
00:05:34,560 --> 00:05:36,560
insurance and um

142
00:05:36,560 --> 00:05:39,840
nursing so the thing was that it uh

143
00:05:39,840 --> 00:05:43,600
attackers were able to get 587 000 uh

144
00:05:43,600 --> 00:05:45,680
records and they were sensitive records

145
00:05:45,680 --> 00:05:49,400
they were about medical

146
00:05:57,280 --> 00:05:58,160
i have

147
00:05:58,160 --> 00:06:01,520
next one in the queue any cases this

148
00:06:01,520 --> 00:06:03,120
is winds

149
00:06:03,120 --> 00:06:05,600
windmill i can say solar

150
00:06:05,600 --> 00:06:08,160
that has been pretty popular last year

151
00:06:08,160 --> 00:06:10,800
very popular and

152
00:06:10,800 --> 00:06:12,960
there were a lot of issue

153
00:06:12,960 --> 00:06:13,759
i mean

154
00:06:13,759 --> 00:06:16,319
uh attackers they were able to

155
00:06:16,319 --> 00:06:19,520
put malicious code in solarwinds system

156
00:06:19,520 --> 00:06:21,440
and through that they were able to get

157
00:06:21,440 --> 00:06:23,440
into other companies as well and they

158
00:06:23,440 --> 00:06:25,600
were able to private into microsoft and

159
00:06:25,600 --> 00:06:28,720
they gained internal code of microsoft

160
00:06:28,720 --> 00:06:31,440
so that was

161
00:06:31,440 --> 00:06:33,919
i think they got some code of azure as

162
00:06:33,919 --> 00:06:37,039
well and using that they were able to

163
00:06:37,039 --> 00:06:37,840
gain

164
00:06:37,840 --> 00:06:40,240
aad privileges higher privileges

165
00:06:40,240 --> 00:06:43,440
and storage token um also they were used

166
00:06:43,440 --> 00:06:45,840
and not storage token i think it was

167
00:06:45,840 --> 00:06:48,160
they were able to force user tokens

168
00:06:48,160 --> 00:06:49,199
there

169
00:06:49,199 --> 00:06:50,000
so

170
00:06:50,000 --> 00:06:52,639
you can see that the increase there is a

171
00:06:52,639 --> 00:06:54,400
heavy increase in the frequency of

172
00:06:54,400 --> 00:06:57,360
attacks on azure environment so yes it

173
00:06:57,360 --> 00:06:59,599
is need of the r that we should we

174
00:06:59,599 --> 00:07:00,960
should become pro

175
00:07:00,960 --> 00:07:03,280
already we are proactive but yes

176
00:07:03,280 --> 00:07:05,360
if we want to learn more if we are

177
00:07:05,360 --> 00:07:07,919
beginners we we should learn more about

178
00:07:07,919 --> 00:07:10,479
azure security uh basically i can say

179
00:07:10,479 --> 00:07:12,960
azure environment security so basically

180
00:07:12,960 --> 00:07:16,080
it is a responsibility of client as well

181
00:07:16,080 --> 00:07:18,639
sometimes we say that cloud service

182
00:07:18,639 --> 00:07:20,880
provider they they host our data it's

183
00:07:20,880 --> 00:07:23,120
their responsibility to

184
00:07:23,120 --> 00:07:25,039
keep track of our data but no it's

185
00:07:25,039 --> 00:07:26,960
responsibility of clients as well that

186
00:07:26,960 --> 00:07:30,160
they need to protect their data uh they

187
00:07:30,160 --> 00:07:31,440
should not

188
00:07:31,440 --> 00:07:33,360
put some missing image configurations or

189
00:07:33,360 --> 00:07:35,039
bad security practices to get it

190
00:07:35,039 --> 00:07:37,599
exploited

191
00:07:37,759 --> 00:07:38,960
so

192
00:07:38,960 --> 00:07:41,360
uh what are the threats which we have

193
00:07:41,360 --> 00:07:43,440
seen which used to affect azure

194
00:07:43,440 --> 00:07:44,400
environment

195
00:07:44,400 --> 00:07:47,440
so let me take one example leap secret

196
00:07:47,440 --> 00:07:50,800
they have been pretty popular uh okay i

197
00:07:50,800 --> 00:07:53,120
have seen a lot of them and most popular

198
00:07:53,120 --> 00:07:56,080
is that in famous html source code and

199
00:07:56,080 --> 00:07:58,400
this git commit this is like pretty

200
00:07:58,400 --> 00:08:01,840
popular uh the developers put it into

201
00:08:01,840 --> 00:08:04,080
get and sometimes they put it put into

202
00:08:04,080 --> 00:08:06,960
git commit so that can be easily uh

203
00:08:06,960 --> 00:08:09,039
found and if this code is public then

204
00:08:09,039 --> 00:08:11,919
then it's a very bad

205
00:08:11,919 --> 00:08:14,479
to clean up

206
00:08:14,479 --> 00:08:16,960
now second one guessable reuse default

207
00:08:16,960 --> 00:08:18,000
password

208
00:08:18,000 --> 00:08:20,240
any guess what is this about

209
00:08:20,240 --> 00:08:22,720
uh i think yes you are able to guess it

210
00:08:22,720 --> 00:08:25,280
correct so paris it's related to paris

211
00:08:25,280 --> 00:08:27,199
hilton's case she put her default

212
00:08:27,199 --> 00:08:29,840
password as her pet's name so this is

213
00:08:29,840 --> 00:08:32,000
one example of that and then we have

214
00:08:32,000 --> 00:08:34,000
another okay these are pretty simple

215
00:08:34,000 --> 00:08:36,640
passwords but yes one thing more they

216
00:08:36,640 --> 00:08:38,240
should not be on sticky notes that is

217
00:08:38,240 --> 00:08:41,039
really bad

218
00:08:41,039 --> 00:08:43,039
then another one we have is threat

219
00:08:43,039 --> 00:08:45,360
affecting azure environment we have web

220
00:08:45,360 --> 00:08:48,000
application vulnerabilities uh yes they

221
00:08:48,000 --> 00:08:50,240
can be local file inclusion or code

222
00:08:50,240 --> 00:08:51,600
execution

223
00:08:51,600 --> 00:08:54,320
they again bring up issues and then yes

224
00:08:54,320 --> 00:08:56,240
security misconfiguration as we have

225
00:08:56,240 --> 00:08:58,800
seen in case of pro base uh in case of

226
00:08:58,800 --> 00:09:02,640
probates the issue was that they have

227
00:09:02,640 --> 00:09:05,120
a public they their records were on a

228
00:09:05,120 --> 00:09:07,440
block which had public access that means

229
00:09:07,440 --> 00:09:08,480
anyone

230
00:09:08,480 --> 00:09:10,560
without authentication they can access

231
00:09:10,560 --> 00:09:12,080
that blog

232
00:09:12,080 --> 00:09:14,880
so that's a misconfiguration

233
00:09:14,880 --> 00:09:17,279
so the solution we propose for this is

234
00:09:17,279 --> 00:09:20,240
easygood and accord when we talk about

235
00:09:20,240 --> 00:09:22,800
that ac got means that if it is a

236
00:09:22,800 --> 00:09:24,640
playground it is a playground where you

237
00:09:24,640 --> 00:09:26,880
can practice play and you can learn more

238
00:09:26,880 --> 00:09:29,760
about azure vulnerabilities

239
00:09:29,760 --> 00:09:33,120
so we have recently seen that there are

240
00:09:33,120 --> 00:09:36,320
many good playgrounds for web and aws uh

241
00:09:36,320 --> 00:09:39,120
to name some we have a vast juice shop

242
00:09:39,120 --> 00:09:41,279
and we have web code so they are very

243
00:09:41,279 --> 00:09:44,800
good and uh to um to admit it honestly

244
00:09:44,800 --> 00:09:46,880
that yes i have also learned a lot from

245
00:09:46,880 --> 00:09:47,600
them

246
00:09:47,600 --> 00:09:49,839
uh so while i started researching about

247
00:09:49,839 --> 00:09:52,480
azure security i saw that there there is

248
00:09:52,480 --> 00:09:54,720
no such i don't know in my knowledge i

249
00:09:54,720 --> 00:09:56,959
there was no such background and

250
00:09:56,959 --> 00:09:58,080
literature

251
00:09:58,080 --> 00:10:00,880
about the chaining of attacks that in

252
00:10:00,880 --> 00:10:03,519
azure environment that is also pretty

253
00:10:03,519 --> 00:10:04,800
limited

254
00:10:04,800 --> 00:10:08,079
so uh came up with idea that let's have

255
00:10:08,079 --> 00:10:11,200
one uh playground where we can put up

256
00:10:11,200 --> 00:10:13,600
some chaining of attacks which can help

257
00:10:13,600 --> 00:10:16,079
other people who who are beginners so

258
00:10:16,079 --> 00:10:19,040
they can understand more uh that how

259
00:10:19,040 --> 00:10:21,200
these attacks can work and how they can

260
00:10:21,200 --> 00:10:22,480
be leveraged into

261
00:10:22,480 --> 00:10:25,279
uh total compromise

262
00:10:25,279 --> 00:10:28,640
so how it's going to benefit you so

263
00:10:28,640 --> 00:10:30,160
for now we are targeting three

264
00:10:30,160 --> 00:10:32,160
communities that is developers security

265
00:10:32,160 --> 00:10:35,200
and operations so for developers it will

266
00:10:35,200 --> 00:10:37,600
be for them to understand how insecure

267
00:10:37,600 --> 00:10:40,480
coding practices which are very common

268
00:10:40,480 --> 00:10:43,360
how they can help them how they can

269
00:10:43,360 --> 00:10:44,399
cause

270
00:10:44,399 --> 00:10:45,920
total compromise of the azure

271
00:10:45,920 --> 00:10:46,959
environment

272
00:10:46,959 --> 00:10:50,000
uh so they need to understand what all

273
00:10:50,000 --> 00:10:51,519
uh

274
00:10:51,519 --> 00:10:54,880
bad coding practices are there which can

275
00:10:54,880 --> 00:10:56,959
mess up the whole environment and for

276
00:10:56,959 --> 00:10:59,519
security persons it is a boon they can

277
00:10:59,519 --> 00:11:01,839
learn more about the lateral movements

278
00:11:01,839 --> 00:11:04,079
how uh attackers perform lateral

279
00:11:04,079 --> 00:11:05,839
movement in case of azure and

280
00:11:05,839 --> 00:11:08,000
environment uh

281
00:11:08,000 --> 00:11:10,399
you have to exploit a web application or

282
00:11:10,399 --> 00:11:12,399
any function and how you can move into

283
00:11:12,399 --> 00:11:15,760
the whole azure environment that we can

284
00:11:15,760 --> 00:11:17,920
know from here and it's for enhancement

285
00:11:17,920 --> 00:11:20,640
of security knowledge related to azure

286
00:11:20,640 --> 00:11:22,800
then coming to operations

287
00:11:22,800 --> 00:11:24,720
so

288
00:11:24,720 --> 00:11:28,320
for operations i'll just

289
00:11:28,320 --> 00:11:30,560
so for coming to operations

290
00:11:30,560 --> 00:11:32,160
we have

291
00:11:32,160 --> 00:11:34,079
i mean we we have seen an example of

292
00:11:34,079 --> 00:11:36,240
misconfiguration there in vlog

293
00:11:36,240 --> 00:11:38,720
yes so this is for operation people to

294
00:11:38,720 --> 00:11:40,160
understand how

295
00:11:40,160 --> 00:11:41,040
uh

296
00:11:41,040 --> 00:11:43,600
bad uh configuration practices

297
00:11:43,600 --> 00:11:45,600
misconfiguration i can say it it got a

298
00:11:45,600 --> 00:11:46,480
raise

299
00:11:46,480 --> 00:11:47,839
i should say it got a raise in

300
00:11:47,839 --> 00:11:52,240
overstopped in 2021 it moved to a5

301
00:11:52,240 --> 00:11:53,519
so

302
00:11:53,519 --> 00:11:55,600
it's very common and yes we need to

303
00:11:55,600 --> 00:11:57,279
learn that how to avoid that energy

304
00:11:57,279 --> 00:11:59,360
environment so that will

305
00:11:59,360 --> 00:12:01,839
uh we can learn from is it crazy for

306
00:12:01,839 --> 00:12:04,320
operations

307
00:12:04,320 --> 00:12:06,880
uh then venturing in the depth of easy

308
00:12:06,880 --> 00:12:07,760
good

309
00:12:07,760 --> 00:12:09,360
so

310
00:12:09,360 --> 00:12:11,360
we will be going through the network

311
00:12:11,360 --> 00:12:12,560
diagram

312
00:12:12,560 --> 00:12:14,880
then uh we will be having an

313
00:12:14,880 --> 00:12:17,680
introductory video for it i should have

314
00:12:17,680 --> 00:12:20,079
you know demo not a video

315
00:12:20,079 --> 00:12:22,240
then we have scenarios walkthrough and

316
00:12:22,240 --> 00:12:24,160
demo

317
00:12:24,160 --> 00:12:26,160
so when we come to network diagram

318
00:12:26,160 --> 00:12:28,560
diagram of easy good so this is what we

319
00:12:28,560 --> 00:12:30,720
have implemented for this is what we

320
00:12:30,720 --> 00:12:32,800
have implemented for now

321
00:12:32,800 --> 00:12:35,040
let me just in

322
00:12:35,040 --> 00:12:38,040
it

323
00:12:38,160 --> 00:12:40,880
just a second

324
00:12:44,720 --> 00:12:47,040
so if you can see here these are the few

325
00:12:47,040 --> 00:12:49,440
components which we have

326
00:12:49,440 --> 00:12:50,880
implemented here

327
00:12:50,880 --> 00:12:53,680
so a user this will be person who will

328
00:12:53,680 --> 00:12:57,760
be using easy goal so they will

329
00:12:57,760 --> 00:12:59,360
they what they will see in this

330
00:12:59,360 --> 00:13:01,519
environment is that a public address is

331
00:13:01,519 --> 00:13:03,200
assigned which is a static address for

332
00:13:03,200 --> 00:13:05,440
this particular vm

333
00:13:05,440 --> 00:13:08,800
we have two vm linux vms

334
00:13:08,800 --> 00:13:11,040
which are deployed here and one is

335
00:13:11,040 --> 00:13:14,160
associated with managed identity and

336
00:13:14,160 --> 00:13:16,079
using that they can query storage

337
00:13:16,079 --> 00:13:19,279
account and they can vary sql database

338
00:13:19,279 --> 00:13:22,880
and we have a function app

339
00:13:22,880 --> 00:13:24,720
and we're using that function app they

340
00:13:24,720 --> 00:13:26,240
can perform some

341
00:13:26,240 --> 00:13:27,279
some

342
00:13:27,279 --> 00:13:29,279
like functions like they can

343
00:13:29,279 --> 00:13:31,680
print out some details that is here

344
00:13:31,680 --> 00:13:34,000
and this vm this particular vm is

345
00:13:34,000 --> 00:13:35,680
internal in nature it can't be accessed

346
00:13:35,680 --> 00:13:38,639
from outside and this is also

347
00:13:38,639 --> 00:13:40,560
fetching data from this storage account

348
00:13:40,560 --> 00:13:41,360
and

349
00:13:41,360 --> 00:13:43,600
this may be storing some important data

350
00:13:43,600 --> 00:13:45,120
files

351
00:13:45,120 --> 00:13:45,920
then

352
00:13:45,920 --> 00:13:47,600
we have subscriptions so for

353
00:13:47,600 --> 00:13:49,360
subscriptions i will be using my

354
00:13:49,360 --> 00:13:52,720
personal account uh apart from that i

355
00:13:52,720 --> 00:13:55,279
also have put this here because i will

356
00:13:55,279 --> 00:13:57,279
be uh researching further on

357
00:13:57,279 --> 00:13:58,800
subscription exploit i mean some

358
00:13:58,800 --> 00:14:00,720
scenarios which related to chaining

359
00:14:00,720 --> 00:14:02,959
attacks related to a subscription or key

360
00:14:02,959 --> 00:14:05,040
vaults and queue storages so these

361
00:14:05,040 --> 00:14:07,199
things three things are under for

362
00:14:07,199 --> 00:14:09,199
progress

363
00:14:09,199 --> 00:14:11,120
so that is one thing

364
00:14:11,120 --> 00:14:12,399
uh

365
00:14:12,399 --> 00:14:13,920
let me move to

366
00:14:13,920 --> 00:14:16,079
blob storage yes i forgot to tell about

367
00:14:16,079 --> 00:14:18,079
block storages there are two

368
00:14:18,079 --> 00:14:20,320
uh blob storages one is public in nature

369
00:14:20,320 --> 00:14:23,120
one is private

370
00:14:23,120 --> 00:14:25,920
moving to the introductory demo

371
00:14:25,920 --> 00:14:27,680
so first we will be going through the

372
00:14:27,680 --> 00:14:30,480
walkthrough of easy good resources from

373
00:14:30,480 --> 00:14:32,639
network diagram it may not be much clear

374
00:14:32,639 --> 00:14:35,600
what i was talking about so this is my

375
00:14:35,600 --> 00:14:38,000
account if you can see here easy code is

376
00:14:38,000 --> 00:14:40,000
deployed here and this is the resource

377
00:14:40,000 --> 00:14:40,959
group

378
00:14:40,959 --> 00:14:43,680
where i have grouped all of my resources

379
00:14:43,680 --> 00:14:46,560
so if you can see here all

380
00:14:46,560 --> 00:14:48,480
um sql server

381
00:14:48,480 --> 00:14:51,040
sql server virtual network

382
00:14:51,040 --> 00:14:52,560
vm

383
00:14:52,560 --> 00:14:54,399
these all are listed here so this is

384
00:14:54,399 --> 00:14:56,800
corporate vm this is internal in nature

385
00:14:56,800 --> 00:14:59,839
this is there is no public ip though

386
00:14:59,839 --> 00:15:01,360
though it is written here there is no

387
00:15:01,360 --> 00:15:02,720
public ip

388
00:15:02,720 --> 00:15:05,199
and security groups attached here all

389
00:15:05,199 --> 00:15:07,920
are present this is our function app

390
00:15:07,920 --> 00:15:09,839
which will we will be testing this is

391
00:15:09,839 --> 00:15:12,480
that uh machine which is

392
00:15:12,480 --> 00:15:14,480
open to public

393
00:15:14,480 --> 00:15:18,240
and then we have this

394
00:15:19,120 --> 00:15:21,279
security groups associated with it and

395
00:15:21,279 --> 00:15:23,760
this is associated with our function

396
00:15:23,760 --> 00:15:26,480
this particular account

397
00:15:26,480 --> 00:15:29,040
so these things we have for now

398
00:15:29,040 --> 00:15:30,800
uh let's

399
00:15:30,800 --> 00:15:34,639
just open something and show you more

400
00:15:34,639 --> 00:15:37,920
about this rf machine so ssrf machine is

401
00:15:37,920 --> 00:15:40,160
having this dns name associated with it

402
00:15:40,160 --> 00:15:43,040
and this has a public ip assigned to it

403
00:15:43,040 --> 00:15:45,920
and if we see the

404
00:15:45,920 --> 00:15:47,920
uh networking so

405
00:15:47,920 --> 00:15:49,920
for network security group

406
00:15:49,920 --> 00:15:52,639
uh we we have allowed certain ports but

407
00:15:52,639 --> 00:15:54,639
we need to allow this as well for flask

408
00:15:54,639 --> 00:15:56,880
application to run

409
00:15:56,880 --> 00:15:59,040
so it has a flask application running

410
00:15:59,040 --> 00:16:01,920
which will help us to

411
00:16:01,920 --> 00:16:03,519
run the

412
00:16:03,519 --> 00:16:06,079
application

413
00:16:07,360 --> 00:16:09,360
so this was the walkthrough of easy good

414
00:16:09,360 --> 00:16:12,560
resources now setup stripped if we have

415
00:16:12,560 --> 00:16:15,839
to make all these resources in azure it

416
00:16:15,839 --> 00:16:18,160
will be a very hectic task so i am

417
00:16:18,160 --> 00:16:19,920
working on

418
00:16:19,920 --> 00:16:22,720
these automation scripts so if you see

419
00:16:22,720 --> 00:16:25,440
this is a copy of the main script which

420
00:16:25,440 --> 00:16:26,560
i will be

421
00:16:26,560 --> 00:16:28,560
working which i'm working on

422
00:16:28,560 --> 00:16:31,120
so we were able to successfully create

423
00:16:31,120 --> 00:16:33,759
resource group virtual network subnets

424
00:16:33,759 --> 00:16:36,959
uh yeah games two vms we have we were

425
00:16:36,959 --> 00:16:38,959
able to create one private storage

426
00:16:38,959 --> 00:16:41,360
account and one public storage account

427
00:16:41,360 --> 00:16:43,519
we were able to create

428
00:16:43,519 --> 00:16:46,000
and uh yes along with their container

429
00:16:46,000 --> 00:16:48,240
and p log file so they have their data

430
00:16:48,240 --> 00:16:50,959
also uploaded there

431
00:16:50,959 --> 00:16:53,680
we have nsg set here so almost this

432
00:16:53,680 --> 00:16:55,839
script is like 80 complete there are

433
00:16:55,839 --> 00:16:57,600
some small changes which i need to make

434
00:16:57,600 --> 00:17:00,160
and plus i need to incorporate

435
00:17:00,160 --> 00:17:03,680
sql servers automation here

436
00:17:03,680 --> 00:17:05,679
that is one small task and another is

437
00:17:05,679 --> 00:17:07,280
that i need to form a cloud in its

438
00:17:07,280 --> 00:17:09,199
script for deploying the application

439
00:17:09,199 --> 00:17:11,439
vulnerability application in the vm

440
00:17:11,439 --> 00:17:14,079
so just for your demo i'll show a small

441
00:17:14,079 --> 00:17:15,679
snippet because running this whole

442
00:17:15,679 --> 00:17:17,760
script will definitely take a lot of

443
00:17:17,760 --> 00:17:18,480
time

444
00:17:18,480 --> 00:17:21,760
uh so i have copied this main dot tf

445
00:17:21,760 --> 00:17:22,720
here

446
00:17:22,720 --> 00:17:24,240
and it will be just

447
00:17:24,240 --> 00:17:26,799
creating 16 resources that is two vms

448
00:17:26,799 --> 00:17:29,919
and uh one storage account with its

449
00:17:29,919 --> 00:17:33,039
subnet and resource group and with a

450
00:17:33,039 --> 00:17:36,080
public ip it will be creating that

451
00:17:36,080 --> 00:17:38,960
so let's run this particular script

452
00:17:38,960 --> 00:17:40,640
i'll open

453
00:17:40,640 --> 00:17:43,440
my terraform

454
00:17:43,679 --> 00:17:46,720
okay so we need to open the partial for

455
00:17:46,720 --> 00:17:50,000
this and yes i have already logged into

456
00:17:50,000 --> 00:17:52,880
ac um i mean i've already performed easy

457
00:17:52,880 --> 00:17:55,280
login here so i already

458
00:17:55,280 --> 00:17:57,280
have access to this

459
00:17:57,280 --> 00:17:58,880
account

460
00:17:58,880 --> 00:18:01,520
and i have installed terraform 1.8.0

461
00:18:01,520 --> 00:18:03,280
here and

462
00:18:03,280 --> 00:18:06,080
i've already performed an init command

463
00:18:06,080 --> 00:18:07,120
on it

464
00:18:07,120 --> 00:18:08,880
so if you need more details how we can

465
00:18:08,880 --> 00:18:10,640
do it you can find it from microsoft

466
00:18:10,640 --> 00:18:12,880
blocks uh but just to

467
00:18:12,880 --> 00:18:14,559
create it now

468
00:18:14,559 --> 00:18:18,000
let's see the plan so plan is kind of

469
00:18:18,000 --> 00:18:20,559
kind of debugging compiling you can say

470
00:18:20,559 --> 00:18:22,400
i mean very very very basic term it's

471
00:18:22,400 --> 00:18:24,400
not compiling but it's very similar that

472
00:18:24,400 --> 00:18:26,320
it will check whether these resources

473
00:18:26,320 --> 00:18:28,400
can be formed is there any syntax

474
00:18:28,400 --> 00:18:30,960
error or something it will point it out

475
00:18:30,960 --> 00:18:32,880
so it will take some time it will show

476
00:18:32,880 --> 00:18:34,960
okay these 16 resources will be formed

477
00:18:34,960 --> 00:18:36,559
and this is the list which all are

478
00:18:36,559 --> 00:18:40,200
getting formed here

479
00:18:49,039 --> 00:18:51,440
so it has started the plan

480
00:18:51,440 --> 00:18:54,000
so if you can see these all resources

481
00:18:54,000 --> 00:18:56,240
are getting

482
00:18:56,240 --> 00:18:57,679
created here

483
00:18:57,679 --> 00:18:59,600
and what where which location they are

484
00:18:59,600 --> 00:19:01,919
getting created what's their name

485
00:19:01,919 --> 00:19:04,320
everything is provided here

486
00:19:04,320 --> 00:19:07,280
so we need to run this script

487
00:19:07,280 --> 00:19:08,320
okay

488
00:19:08,320 --> 00:19:10,960
i need to

489
00:19:13,919 --> 00:19:16,080
now we need to create the resources for

490
00:19:16,080 --> 00:19:20,240
that we will simply run apply

491
00:19:20,320 --> 00:19:22,840
so it will start the creation of

492
00:19:22,840 --> 00:19:25,440
resources it will again take another two

493
00:19:25,440 --> 00:19:27,280
minutes uh

494
00:19:27,280 --> 00:19:31,200
so just to save your time we will see

495
00:19:31,200 --> 00:19:35,880
how it's working at the back end

496
00:20:00,400 --> 00:20:02,799
so for this purpose i have created one

497
00:20:02,799 --> 00:20:04,159
another account

498
00:20:04,159 --> 00:20:07,840
uh so this is my automation account

499
00:20:07,840 --> 00:20:09,200
where it will be creating all these

500
00:20:09,200 --> 00:20:10,960
resources

501
00:20:10,960 --> 00:20:12,720
let's see if it

502
00:20:12,720 --> 00:20:15,760
has populated any resource here so i'm

503
00:20:15,760 --> 00:20:18,080
having two accounts here for easy code

504
00:20:18,080 --> 00:20:21,360
uh one is for automation

505
00:20:21,360 --> 00:20:24,320
and one is for creation of uh is where

506
00:20:24,320 --> 00:20:26,320
ac code is deployed

507
00:20:26,320 --> 00:20:31,000
okay i forgot to do that

508
00:20:56,000 --> 00:21:00,440
so let's see what's happening here

509
00:21:03,840 --> 00:21:05,840
we will keep on refreshing maybe it will

510
00:21:05,840 --> 00:21:07,760
get

511
00:21:07,760 --> 00:21:11,039
easy code created here

512
00:21:11,600 --> 00:21:14,000
so if we see on backend it is showing

513
00:21:14,000 --> 00:21:15,919
that it is able to create a resource

514
00:21:15,919 --> 00:21:17,760
group with this name and these are some

515
00:21:17,760 --> 00:21:19,440
resources which is it is trying to

516
00:21:19,440 --> 00:21:21,440
create

517
00:21:21,440 --> 00:21:25,120
okay let's wait for some time

518
00:21:27,200 --> 00:21:28,480
so

519
00:21:28,480 --> 00:21:30,480
we are able to get virtual network as

520
00:21:30,480 --> 00:21:32,720
well

521
00:21:33,360 --> 00:21:35,600
subnets network security groups

522
00:21:35,600 --> 00:21:37,919
association everything is done we got

523
00:21:37,919 --> 00:21:39,600
storage account

524
00:21:39,600 --> 00:21:41,600
creation complete after okay

525
00:21:41,600 --> 00:21:45,840
and it's creating blocks

526
00:21:52,480 --> 00:21:55,600
okay now it is trying to create

527
00:21:55,600 --> 00:21:59,000
virtual machines

528
00:21:59,440 --> 00:22:01,679
so this is a very small snippet where we

529
00:22:01,679 --> 00:22:04,640
will be just seeing two vms and these

530
00:22:04,640 --> 00:22:09,200
resources with subnets and nsds formed

531
00:22:10,960 --> 00:22:12,799
okay

532
00:22:12,799 --> 00:22:14,799
you should

533
00:22:14,799 --> 00:22:17,918
stop at any time

534
00:22:21,039 --> 00:22:24,799
so i think another couple of uh i mean

535
00:22:24,799 --> 00:22:28,320
another 20 seconds it should take

536
00:22:28,320 --> 00:22:31,918
short and after that

537
00:22:35,039 --> 00:22:38,559
so we can see 60 16 resources are

538
00:22:38,559 --> 00:22:40,480
added here

539
00:22:40,480 --> 00:22:42,159
uh let's see

540
00:22:42,159 --> 00:22:43,760
we can

541
00:22:43,760 --> 00:22:46,240
so you can see ac good resource group is

542
00:22:46,240 --> 00:22:47,600
completed

543
00:22:47,600 --> 00:22:49,918
and

544
00:22:50,320 --> 00:22:52,880
what more we can see okay so these are

545
00:22:52,880 --> 00:22:56,000
resources formed we are able to create

546
00:22:56,000 --> 00:22:59,200
uh vm uh two vms which have proper

547
00:22:59,200 --> 00:23:01,200
managed disk assigned to them

548
00:23:01,200 --> 00:23:03,760
and this is the storage account which is

549
00:23:03,760 --> 00:23:06,320
created and if we

550
00:23:06,320 --> 00:23:08,320
see this storage account it has created

551
00:23:08,320 --> 00:23:11,120
the containers as well and

552
00:23:11,120 --> 00:23:13,200
related file also

553
00:23:13,200 --> 00:23:16,080
block file also it has uploaded here

554
00:23:16,080 --> 00:23:17,039
so

555
00:23:17,039 --> 00:23:19,840
and for vm also if we open one we can

556
00:23:19,840 --> 00:23:20,880
see

557
00:23:20,880 --> 00:23:22,400
this is

558
00:23:22,400 --> 00:23:24,480
running this has public address assigned

559
00:23:24,480 --> 00:23:25,360
to it

560
00:23:25,360 --> 00:23:27,280
so everything is done through this

561
00:23:27,280 --> 00:23:28,720
automation script

562
00:23:28,720 --> 00:23:31,039
so this is uh the walkthrough of

563
00:23:31,039 --> 00:23:33,360
automation script which i wanted to show

564
00:23:33,360 --> 00:23:34,080
you

565
00:23:34,080 --> 00:23:36,720
and there are some few things we need to

566
00:23:36,720 --> 00:23:38,000
add up there

567
00:23:38,000 --> 00:23:40,720
uh that i'll show in roadmap so this was

568
00:23:40,720 --> 00:23:42,320
an introductory demo for the setup

569
00:23:42,320 --> 00:23:43,520
script

570
00:23:43,520 --> 00:23:45,919
now we'll be uh going through the

571
00:23:45,919 --> 00:23:48,320
easy good scenarios so we have three

572
00:23:48,320 --> 00:23:51,360
scenarios here no metadata leaks is it

573
00:23:51,360 --> 00:23:53,440
and another is publicly exposed storage

574
00:23:53,440 --> 00:23:55,440
to a compromised database

575
00:23:55,440 --> 00:23:56,960
and then we have cloud

576
00:23:56,960 --> 00:23:59,440
malfunction to range shell

577
00:23:59,440 --> 00:24:02,559
taking up the first scenario no metadata

578
00:24:02,559 --> 00:24:04,480
leaks is it so

579
00:24:04,480 --> 00:24:06,400
the first part uh the first thought

580
00:24:06,400 --> 00:24:08,159
which will come to your mind is that

581
00:24:08,159 --> 00:24:11,760
azure is not affected by uh metadata

582
00:24:11,760 --> 00:24:15,200
leakage by ssrf because they have a good

583
00:24:15,200 --> 00:24:18,960
uh policy of header that every time

584
00:24:18,960 --> 00:24:20,720
whenever you believe varying metadata

585
00:24:20,720 --> 00:24:22,559
services there should be a header of

586
00:24:22,559 --> 00:24:24,960
metadata true then only you will get a

587
00:24:24,960 --> 00:24:26,799
proper response

588
00:24:26,799 --> 00:24:28,799
but in this case still we were able to

589
00:24:28,799 --> 00:24:31,440
get the metadata so it's not the fault

590
00:24:31,440 --> 00:24:33,679
of azure it was fault of

591
00:24:33,679 --> 00:24:35,520
insecure coding practice because of

592
00:24:35,520 --> 00:24:38,159
which there was heavy leak

593
00:24:38,159 --> 00:24:39,679
so

594
00:24:39,679 --> 00:24:42,159
yes to cover up my point there is strict

595
00:24:42,159 --> 00:24:44,320
header requirement in metadata api and

596
00:24:44,320 --> 00:24:47,200
taking a proof i can show you a pic of

597
00:24:47,200 --> 00:24:49,200
jira this was a research done on jira

598
00:24:49,200 --> 00:24:51,200
jira was hosted on all of these

599
00:24:51,200 --> 00:24:52,640
environments and

600
00:24:52,640 --> 00:24:55,600
if you can see metadata metadata leakage

601
00:24:55,600 --> 00:24:58,240
from host is zero for azure

602
00:24:58,240 --> 00:25:01,279
so let's take the scenario one again so

603
00:25:01,279 --> 00:25:03,760
let's take a story so anna is working

604
00:25:03,760 --> 00:25:06,640
for a very prestigious firm and she has

605
00:25:06,640 --> 00:25:08,559
developed an extension which will be

606
00:25:08,559 --> 00:25:10,080
connecting which will be integrating

607
00:25:10,080 --> 00:25:12,080
some external connectors

608
00:25:12,080 --> 00:25:13,600
and

609
00:25:13,600 --> 00:25:15,679
she has developed some such kind of

610
00:25:15,679 --> 00:25:18,799
extension there and she gets a call from

611
00:25:18,799 --> 00:25:19,520
an

612
00:25:19,520 --> 00:25:22,480
uh a friendly uh attacker

613
00:25:22,480 --> 00:25:25,520
i can say friendly adversary and that's

614
00:25:25,520 --> 00:25:28,480
uh that's a little funny but term but

615
00:25:28,480 --> 00:25:30,400
yes she gets called from friendly

616
00:25:30,400 --> 00:25:32,480
adversary and he tells he or she tells

617
00:25:32,480 --> 00:25:34,960
that this

618
00:25:34,960 --> 00:25:36,080
there's a

619
00:25:36,080 --> 00:25:38,240
big data there's a lot of data is

620
00:25:38,240 --> 00:25:40,400
getting leaked and metadata is getting

621
00:25:40,400 --> 00:25:42,480
leaked and yes

622
00:25:42,480 --> 00:25:44,559
the person was able to perform a lateral

623
00:25:44,559 --> 00:25:46,480
movement and they were able to

624
00:25:46,480 --> 00:25:48,480
get access of their storage account of

625
00:25:48,480 --> 00:25:51,520
this organization which had some informa

626
00:25:51,520 --> 00:25:53,679
important data

627
00:25:53,679 --> 00:25:54,960
so

628
00:25:54,960 --> 00:25:57,520
let's investigate this case

629
00:25:57,520 --> 00:26:00,080
so first when we investigate this case

630
00:26:00,080 --> 00:26:00,960
uh

631
00:26:00,960 --> 00:26:02,960
i mean i will be also showing the demo

632
00:26:02,960 --> 00:26:04,720
it was found that it is vulnerable to

633
00:26:04,720 --> 00:26:07,760
ssrf and metadata header was enabled in

634
00:26:07,760 --> 00:26:10,480
code now when we open this code

635
00:26:10,480 --> 00:26:13,120
we can see

636
00:26:15,679 --> 00:26:19,120
so this is our main file if i open this

637
00:26:19,120 --> 00:26:21,679
code in ac code

638
00:26:21,679 --> 00:26:24,880
let's see scenario one and we have this

639
00:26:24,880 --> 00:26:27,520
code in hello world

640
00:26:27,520 --> 00:26:30,720
let's see what's here

641
00:26:30,720 --> 00:26:32,960
so if you say this code

642
00:26:32,960 --> 00:26:34,799
in header this

643
00:26:34,799 --> 00:26:36,159
is there

644
00:26:36,159 --> 00:26:37,039
so

645
00:26:37,039 --> 00:26:40,640
what it was done that the person it was

646
00:26:40,640 --> 00:26:43,600
investigated out that okay this external

647
00:26:43,600 --> 00:26:46,799
extension was uh this uh connection was

648
00:26:46,799 --> 00:26:49,120
required and also because of that she

649
00:26:49,120 --> 00:26:51,840
has left one debugging information here

650
00:26:51,840 --> 00:26:54,720
where she wanted to check how uh if they

651
00:26:54,720 --> 00:26:57,760
are able to query the uh storage account

652
00:26:57,760 --> 00:26:59,919
through their managed identity uh

653
00:26:59,919 --> 00:27:02,880
accounts or not so for that debugging

654
00:27:02,880 --> 00:27:06,320
this was left there so this is so every

655
00:27:06,320 --> 00:27:08,559
time request will be made to that

656
00:27:08,559 --> 00:27:09,919
particular

657
00:27:09,919 --> 00:27:12,720
url this will get passed in the headers

658
00:27:12,720 --> 00:27:14,640
so this was a one debugging code which

659
00:27:14,640 --> 00:27:16,159
was left

660
00:27:16,159 --> 00:27:18,320
intact in that production code and when

661
00:27:18,320 --> 00:27:21,600
we see this so this this is that url

662
00:27:21,600 --> 00:27:23,760
where this uh

663
00:27:23,760 --> 00:27:27,200
where this code was hosted and uh if you

664
00:27:27,200 --> 00:27:29,440
can see this if you enter any

665
00:27:29,440 --> 00:27:32,840
uh integration url just we can put

666
00:27:32,840 --> 00:27:35,039
google.com it's

667
00:27:35,039 --> 00:27:36,960
if you can see this is a proper ssr

668
00:27:36,960 --> 00:27:38,640
affair

669
00:27:38,640 --> 00:27:40,960
now if we go back

670
00:27:40,960 --> 00:27:42,640
and try

671
00:27:42,640 --> 00:27:46,080
to fetch uh metadata details let's do

672
00:27:46,080 --> 00:27:49,080
that

673
00:27:49,600 --> 00:27:51,440
so let's see if we can find out compute

674
00:27:51,440 --> 00:27:54,159
id and other stuffs related to uh or

675
00:27:54,159 --> 00:27:57,440
subscription id related to this uh i'll

676
00:27:57,440 --> 00:27:59,039
also show

677
00:27:59,039 --> 00:28:02,840
what i have passed

678
00:28:08,880 --> 00:28:11,120
so this is present in microsoft

679
00:28:11,120 --> 00:28:14,080
documents as well where we can find

680
00:28:14,080 --> 00:28:17,120
data related to subscription id or other

681
00:28:17,120 --> 00:28:19,919
related things so when we perform submit

682
00:28:19,919 --> 00:28:21,760
so from here we were able to get

683
00:28:21,760 --> 00:28:23,440
subscription id

684
00:28:23,440 --> 00:28:26,080
now let's move back and what more we can

685
00:28:26,080 --> 00:28:28,799
discover let's see another thing

686
00:28:28,799 --> 00:28:31,760
we have let's see if we can get managed

687
00:28:31,760 --> 00:28:33,200
identity token

688
00:28:33,200 --> 00:28:35,360
so this is for querying the rest apis of

689
00:28:35,360 --> 00:28:37,120
microsoft which is related to managed

690
00:28:37,120 --> 00:28:38,640
identity

691
00:28:38,640 --> 00:28:41,279
we can get token here access token now

692
00:28:41,279 --> 00:28:44,480
how we are going to use it so for this

693
00:28:44,480 --> 00:28:47,120
we have one script here so this script

694
00:28:47,120 --> 00:28:50,159
is inspired by karl for scenes block

695
00:28:50,159 --> 00:28:53,120
uh if you see this script the script is

696
00:28:53,120 --> 00:28:55,360
taking a particular token so this was my

697
00:28:55,360 --> 00:28:57,760
earlier generator token and this is this

698
00:28:57,760 --> 00:28:59,840
subscription id i'll just put this token

699
00:28:59,840 --> 00:29:03,360
once again for your view

700
00:29:03,360 --> 00:29:07,439
i'll modify this script

701
00:29:10,240 --> 00:29:12,799
okay so i think we have script ready

702
00:29:12,799 --> 00:29:14,559
what this script is doing it will be

703
00:29:14,559 --> 00:29:16,559
fetching the list of account uh storage

704
00:29:16,559 --> 00:29:19,039
account and it will be fetching uh token

705
00:29:19,039 --> 00:29:21,279
uh sorry keys related to that storage

706
00:29:21,279 --> 00:29:22,320
account

707
00:29:22,320 --> 00:29:24,880
so let's run the script and see what

708
00:29:24,880 --> 00:29:27,600
goes

709
00:29:27,600 --> 00:29:29,760
so

710
00:29:30,720 --> 00:29:31,919
if you see

711
00:29:31,919 --> 00:29:33,840
it has this internal storage account

712
00:29:33,840 --> 00:29:35,679
which was private in nature and we can

713
00:29:35,679 --> 00:29:37,120
get the key

714
00:29:37,120 --> 00:29:39,919
so let's check in storage explorer if we

715
00:29:39,919 --> 00:29:41,760
can go further

716
00:29:41,760 --> 00:29:45,520
let's try to connect to azure account

717
00:29:46,240 --> 00:29:49,240
okay

718
00:30:26,480 --> 00:30:28,880
next

719
00:30:34,480 --> 00:30:37,039
so it has successfully added this

720
00:30:37,039 --> 00:30:39,120
connection here let's move to block

721
00:30:39,120 --> 00:30:41,120
container c

722
00:30:41,120 --> 00:30:44,240
if we can access this file

723
00:30:44,240 --> 00:30:47,760
yes there is some important data

724
00:30:48,399 --> 00:30:51,918
and when we try to open it

725
00:30:53,520 --> 00:30:55,520
okay it's taking some time to open this

726
00:30:55,520 --> 00:30:57,918
data

727
00:30:59,120 --> 00:31:01,360
so yes we were able to replicate the

728
00:31:01,360 --> 00:31:03,919
scenario one how attacker has performed

729
00:31:03,919 --> 00:31:05,519
this lateral movement

730
00:31:05,519 --> 00:31:09,200
so this was one scenario

731
00:31:09,679 --> 00:31:13,200
uh now moving on to the next

732
00:31:13,200 --> 00:31:14,080
demo

733
00:31:14,080 --> 00:31:15,919
so that's scenario two

734
00:31:15,919 --> 00:31:16,640
uh

735
00:31:16,640 --> 00:31:19,679
so what we have this thing like

736
00:31:19,679 --> 00:31:21,840
as i've earlier discussed that we have

737
00:31:21,840 --> 00:31:23,840
publicly exposed storage

738
00:31:23,840 --> 00:31:26,960
uh is sometimes present but how it can

739
00:31:26,960 --> 00:31:29,360
compromise the database so let's take an

740
00:31:29,360 --> 00:31:32,080
example of another story here we have

741
00:31:32,080 --> 00:31:34,880
yummy foods and yummy food is

742
00:31:34,880 --> 00:31:37,360
online food delivery

743
00:31:37,360 --> 00:31:38,320
company

744
00:31:38,320 --> 00:31:40,159
and they have developed some app they

745
00:31:40,159 --> 00:31:42,880
have they have put up some code on their

746
00:31:42,880 --> 00:31:45,440
blog storage and they want pentesters to

747
00:31:45,440 --> 00:31:48,480
review that code also there one of their

748
00:31:48,480 --> 00:31:51,279
focus point is that they have deployed

749
00:31:51,279 --> 00:31:54,640
azure sql uh db there which is very

750
00:31:54,640 --> 00:31:56,880
restricted they can't uh that tv can't

751
00:31:56,880 --> 00:31:58,000
be risked

752
00:31:58,000 --> 00:32:01,039
i mean access from um

753
00:32:01,039 --> 00:32:03,440
remotely through internet

754
00:32:03,440 --> 00:32:06,320
so the challenge is to access azure

755
00:32:06,320 --> 00:32:08,559
sequence equal server remotely

756
00:32:08,559 --> 00:32:09,440
so

757
00:32:09,440 --> 00:32:12,799
this because in azure we have restricted

758
00:32:12,799 --> 00:32:14,320
this thing is restricted i'd be

759
00:32:14,320 --> 00:32:17,360
restricted only internal uh

760
00:32:17,360 --> 00:32:19,600
machines can access it

761
00:32:19,600 --> 00:32:20,960
so when

762
00:32:20,960 --> 00:32:23,039
we investigated it so these were the

763
00:32:23,039 --> 00:32:23,919
things

764
00:32:23,919 --> 00:32:26,320
um which attacker did for lateral

765
00:32:26,320 --> 00:32:28,799
movement they were able to

766
00:32:28,799 --> 00:32:30,559
source code was revealing a blob storage

767
00:32:30,559 --> 00:32:33,279
url which was another blob storage url

768
00:32:33,279 --> 00:32:35,679
and that was publicly accessible it had

769
00:32:35,679 --> 00:32:38,240
some vm credentials which was in that

770
00:32:38,240 --> 00:32:41,200
network which had access to that sql

771
00:32:41,200 --> 00:32:44,640
database and and entering into that vm

772
00:32:44,640 --> 00:32:46,880
they were able to get web.config file

773
00:32:46,880 --> 00:32:48,480
and through that they were able to get

774
00:32:48,480 --> 00:32:50,799
connection strings of that sql server

775
00:32:50,799 --> 00:32:53,279
and they used a script to connect to

776
00:32:53,279 --> 00:32:54,240
that

777
00:32:54,240 --> 00:32:56,159
sql server and fetch customer record

778
00:32:56,159 --> 00:32:57,519
from there

779
00:32:57,519 --> 00:32:59,600
so let's see its demo

780
00:32:59,600 --> 00:33:01,919
uh i'll again jump back to

781
00:33:01,919 --> 00:33:02,720
uh

782
00:33:02,720 --> 00:33:05,279
another browser so this was the code

783
00:33:05,279 --> 00:33:07,679
which they have hosted in a blog file

784
00:33:07,679 --> 00:33:09,679
and if you can see here

785
00:33:09,679 --> 00:33:11,360
we don't find any connection string here

786
00:33:11,360 --> 00:33:12,080
but

787
00:33:12,080 --> 00:33:14,399
this kind this code is somewhat

788
00:33:14,399 --> 00:33:16,799
uploading or downloading some kind of

789
00:33:16,799 --> 00:33:17,519
some

790
00:33:17,519 --> 00:33:20,399
data to block storage and blob storage

791
00:33:20,399 --> 00:33:22,399
url is given here

792
00:33:22,399 --> 00:33:25,360
this is the blob storage url and if we

793
00:33:25,360 --> 00:33:28,080
try to access it

794
00:33:28,080 --> 00:33:30,480
you can see

795
00:33:30,480 --> 00:33:32,320
that it shows the

796
00:33:32,320 --> 00:33:34,720
machine's detail now when we try to

797
00:33:34,720 --> 00:33:38,200
connect to it

798
00:33:40,960 --> 00:33:45,279
so this is a public id let's use it

799
00:33:45,519 --> 00:33:48,679
go further

800
00:33:57,919 --> 00:33:59,919
so we are able to login into it let's

801
00:33:59,919 --> 00:34:04,360
see if we can get uh root access

802
00:34:09,918 --> 00:34:12,399
okay

803
00:34:16,079 --> 00:34:18,480
so it shows that tester is not a studio

804
00:34:18,480 --> 00:34:21,119
file and this incident will be reported

805
00:34:21,119 --> 00:34:24,639
uh okay let's see what more we can do

806
00:34:24,639 --> 00:34:27,440
let's go to their

807
00:34:27,440 --> 00:34:28,560
directory

808
00:34:28,560 --> 00:34:30,719
www directory let's see what all they

809
00:34:30,719 --> 00:34:33,119
have so they have these many

810
00:34:33,119 --> 00:34:36,320
apps which are hosted here let's go to

811
00:34:36,320 --> 00:34:38,480
yummy food

812
00:34:38,480 --> 00:34:39,918
and we can see

813
00:34:39,918 --> 00:34:41,679
web.config here

814
00:34:41,679 --> 00:34:44,000
so when we open this web.config we

815
00:34:44,000 --> 00:34:48,599
scroll down we can see

816
00:34:48,800 --> 00:34:50,079
we can see

817
00:34:50,079 --> 00:34:52,000
a connection string is getting revealed

818
00:34:52,000 --> 00:34:53,040
here

819
00:34:53,040 --> 00:34:55,839
so what we are going to uh do now we are

820
00:34:55,839 --> 00:34:58,160
going to use a script again its uh

821
00:34:58,160 --> 00:35:00,839
inspired by carl person's blog

822
00:35:00,839 --> 00:35:02,400
and

823
00:35:02,400 --> 00:35:04,480
i'll just show

824
00:35:04,480 --> 00:35:06,480
i've already copied the script here in

825
00:35:06,480 --> 00:35:10,240
its home directory just to save time

826
00:35:10,240 --> 00:35:13,439
we'll just open this

827
00:35:13,680 --> 00:35:16,640
script and you can see the same

828
00:35:16,640 --> 00:35:18,400
this is the database

829
00:35:18,400 --> 00:35:20,880
name so database server

830
00:35:20,880 --> 00:35:22,560
so this is provided here we have

831
00:35:22,560 --> 00:35:24,800
populated all the values here username

832
00:35:24,800 --> 00:35:27,359
and password which we found here

833
00:35:27,359 --> 00:35:28,240
and

834
00:35:28,240 --> 00:35:31,119
we are trying to fetch one table from it

835
00:35:31,119 --> 00:35:34,160
which is customers we just

836
00:35:34,160 --> 00:35:36,720
want to see if it is able to

837
00:35:36,720 --> 00:35:39,119
fetch details of customers so

838
00:35:39,119 --> 00:35:42,800
let's run this script

839
00:35:42,800 --> 00:35:44,640
and when we run this script we can see

840
00:35:44,640 --> 00:35:46,480
okay these are the details of the

841
00:35:46,480 --> 00:35:48,480
customers which were stored in that

842
00:35:48,480 --> 00:35:50,640
particular database and it would though

843
00:35:50,640 --> 00:35:52,240
even though it was restricted in nature

844
00:35:52,240 --> 00:35:54,560
but then also how attackers were able to

845
00:35:54,560 --> 00:35:56,480
perform a lateral movement and get these

846
00:35:56,480 --> 00:35:58,640
details out from it

847
00:35:58,640 --> 00:36:00,960
so this is uh one step

848
00:36:00,960 --> 00:36:02,000
and

849
00:36:02,000 --> 00:36:04,800
now coming to

850
00:36:04,800 --> 00:36:07,520
scenario three we have uh cloud

851
00:36:07,520 --> 00:36:09,520
malfunction to range hell this you must

852
00:36:09,520 --> 00:36:11,359
have experience most of the time in case

853
00:36:11,359 --> 00:36:14,400
of functions so we have a function here

854
00:36:14,400 --> 00:36:17,280
and which is um

855
00:36:17,280 --> 00:36:18,960
we have we are having a function here

856
00:36:18,960 --> 00:36:20,160
which is

857
00:36:20,160 --> 00:36:22,480
which on exploitation is

858
00:36:22,480 --> 00:36:25,280
uh doing leakage of storage token and we

859
00:36:25,280 --> 00:36:28,079
are able to perform i can say we are

860
00:36:28,079 --> 00:36:30,560
able to get reverse shell

861
00:36:30,560 --> 00:36:31,359
for

862
00:36:31,359 --> 00:36:32,560
this demo i will be showing the

863
00:36:32,560 --> 00:36:35,920
restricted reverse shell

864
00:36:35,920 --> 00:36:37,760
so i'll just open my

865
00:36:37,760 --> 00:36:40,880
function if you see this function if i

866
00:36:40,880 --> 00:36:43,839
this is the url and we have to pass on

867
00:36:43,839 --> 00:36:46,079
this parameter q is equal to something

868
00:36:46,079 --> 00:36:49,599
so if i provide some improper value then

869
00:36:49,599 --> 00:36:51,200
it shows that this particular thing is

870
00:36:51,200 --> 00:36:52,400
not found

871
00:36:52,400 --> 00:36:56,400
but if i try to provide ifconfig this is

872
00:36:56,400 --> 00:36:59,760
very restricted this doesn't show much

873
00:36:59,760 --> 00:37:00,640
it

874
00:37:00,640 --> 00:37:03,520
will show that

875
00:37:04,880 --> 00:37:06,560
it will show that this this is not

876
00:37:06,560 --> 00:37:09,920
enabled ifconfig is not enabled

877
00:37:09,920 --> 00:37:13,280
let's see what happens here

878
00:37:14,800 --> 00:37:17,599
so it shows i have config is not bound

879
00:37:17,599 --> 00:37:18,880
okay

880
00:37:18,880 --> 00:37:22,320
so let's put here a env

881
00:37:22,320 --> 00:37:24,400
so there's a lot of data here you can

882
00:37:24,400 --> 00:37:27,119
see a lot of data so you can see that

883
00:37:27,119 --> 00:37:28,880
storage account name

884
00:37:28,880 --> 00:37:30,640
and its key

885
00:37:30,640 --> 00:37:32,000
related key

886
00:37:32,000 --> 00:37:34,560
you can see a lot of thing here so basic

887
00:37:34,560 --> 00:37:37,760
thing is th this this is a meat here so

888
00:37:37,760 --> 00:37:39,680
you can again try entering this data

889
00:37:39,680 --> 00:37:41,839
into storage explorer and you can get

890
00:37:41,839 --> 00:37:43,839
the detail but apart from that there are

891
00:37:43,839 --> 00:37:45,599
a lot of things about this

892
00:37:45,599 --> 00:37:46,560
uh

893
00:37:46,560 --> 00:37:48,160
particular uh

894
00:37:48,160 --> 00:37:50,960
host which is hosting this uh function

895
00:37:50,960 --> 00:37:53,680
it is getting revealed what back back

896
00:37:53,680 --> 00:37:54,960
and they are using everything is getting

897
00:37:54,960 --> 00:37:56,640
revealed here

898
00:37:56,640 --> 00:37:59,599
so this is one thing and uh i'll just

899
00:37:59,599 --> 00:38:03,839
take another example of uh reverse shell

900
00:38:03,839 --> 00:38:07,440
i'll just be fast

901
00:38:13,040 --> 00:38:15,520
so i for this particular thing i need to

902
00:38:15,520 --> 00:38:16,880
open up my

903
00:38:16,880 --> 00:38:20,800
uh the vm which i have started here let

904
00:38:20,800 --> 00:38:24,000
me connect to this vm

905
00:38:24,880 --> 00:38:26,960
although i don't have much time left let

906
00:38:26,960 --> 00:38:30,560
me make sure i do it fast

907
00:38:31,440 --> 00:38:33,200
so this was from my automation account

908
00:38:33,200 --> 00:38:35,200
this is another vm which i

909
00:38:35,200 --> 00:38:38,200
created

910
00:39:17,200 --> 00:39:21,759
just a skin maybe some error here

911
00:39:21,920 --> 00:39:26,359
we can do one thing we can try to ssh

912
00:39:28,800 --> 00:39:33,359
okay let's open 40 again

913
00:39:39,200 --> 00:39:43,720
okay so we have password

914
00:39:46,000 --> 00:39:48,960
this password here

915
00:39:48,960 --> 00:39:51,839
and yes we have access to it let's

916
00:39:51,839 --> 00:39:55,520
start a shell on 443 because this

917
00:39:55,520 --> 00:39:59,359
particular quote is enabled

918
00:40:06,480 --> 00:40:08,960
okay so we have started a shell now

919
00:40:08,960 --> 00:40:11,119
let's move back to

920
00:40:11,119 --> 00:40:13,839
our slide

921
00:40:15,040 --> 00:40:19,119
here we have copied this particular code

922
00:40:20,960 --> 00:40:25,240
let's change the ip also

923
00:40:27,599 --> 00:40:29,520
so we are trying to get a reverse shell

924
00:40:29,520 --> 00:40:30,720
here

925
00:40:30,720 --> 00:40:32,800
uh this is a python one liner board

926
00:40:32,800 --> 00:40:35,280
which we have used here to get a

927
00:40:35,280 --> 00:40:36,720
reverse shell

928
00:40:36,720 --> 00:40:40,480
so i have already put the port as

929
00:40:40,480 --> 00:40:44,160
443 just we need to change the ip

930
00:40:44,160 --> 00:40:47,440
let's see what happens here

931
00:40:50,640 --> 00:40:54,240
thing is happening okay all right

932
00:41:03,280 --> 00:41:05,920
let's move back to putty and see if it

933
00:41:05,920 --> 00:41:08,720
gets something

934
00:41:08,720 --> 00:41:12,079
so it will get a restricted shell here

935
00:41:12,079 --> 00:41:14,960
that is one thing

936
00:41:16,720 --> 00:41:20,640
let's wait for some more time

937
00:41:20,640 --> 00:41:25,879
i hope ibi provided is proper

938
00:41:35,839 --> 00:41:38,880
so this was okay

939
00:41:38,880 --> 00:41:39,839
uh

940
00:41:39,839 --> 00:41:42,400
all right so let's pray to demo god oh

941
00:41:42,400 --> 00:41:43,680
democrats

942
00:41:43,680 --> 00:41:45,599
make this demo work

943
00:41:45,599 --> 00:41:48,640
all right this is stuck but however we

944
00:41:48,640 --> 00:41:50,319
used to get it earlier

945
00:41:50,319 --> 00:41:51,680
um

946
00:41:51,680 --> 00:41:53,599
in the meantime i'll just move on to the

947
00:41:53,599 --> 00:41:55,360
next slide just to cover up this time

948
00:41:55,360 --> 00:41:56,880
[Music]

949
00:41:56,880 --> 00:41:59,839
so this is the roadmap uh which we were

950
00:41:59,839 --> 00:42:01,599
planning for so which we have planned

951
00:42:01,599 --> 00:42:03,599
for the phase one is the planning and

952
00:42:03,599 --> 00:42:05,440
creation of scenarios

953
00:42:05,440 --> 00:42:10,079
uh and phase two is uh

954
00:42:10,160 --> 00:42:12,480
and the phase two is the automation of

955
00:42:12,480 --> 00:42:14,000
whole setup which we are performing

956
00:42:14,000 --> 00:42:15,680
right now and we want to make it open

957
00:42:15,680 --> 00:42:18,079
source so that whole security community

958
00:42:18,079 --> 00:42:19,839
everyone can use it

959
00:42:19,839 --> 00:42:20,560
so

960
00:42:20,560 --> 00:42:22,240
also we are planning to integrate some

961
00:42:22,240 --> 00:42:23,920
privilege escalation scenarios which are

962
00:42:23,920 --> 00:42:26,000
related to subscriptions on managed

963
00:42:26,000 --> 00:42:28,640
identities and key vault taxes

964
00:42:28,640 --> 00:42:31,040
in related scenarios plus we are working

965
00:42:31,040 --> 00:42:33,839
on azure queue scenarios

966
00:42:33,839 --> 00:42:35,599
uh we want to research more on the azure

967
00:42:35,599 --> 00:42:36,800
apis

968
00:42:36,800 --> 00:42:38,960
uh and phase four we want to regularly

969
00:42:38,960 --> 00:42:40,240
update with the

970
00:42:40,240 --> 00:42:42,880
as you go with the new scenarios and we

971
00:42:42,880 --> 00:42:44,880
want to maintain i mean we will be

972
00:42:44,880 --> 00:42:46,800
maintaining and fixing the issues which

973
00:42:46,800 --> 00:42:50,079
are uh reported for easy good so we will

974
00:42:50,079 --> 00:42:51,839
be working on that

975
00:42:51,839 --> 00:42:52,640
so

976
00:42:52,640 --> 00:42:54,720
before partying with just

977
00:42:54,720 --> 00:42:56,960
let's have a look

978
00:42:56,960 --> 00:42:59,599
okay somehow this is

979
00:42:59,599 --> 00:43:01,440
not getting

980
00:43:01,440 --> 00:43:04,079
us here

981
00:43:04,240 --> 00:43:06,720
maybe i gave the wrong

982
00:43:06,720 --> 00:43:08,959
okay

983
00:43:09,359 --> 00:43:12,640
so for parting note v uh i'll take up

984
00:43:12,640 --> 00:43:14,880
the moral of the story is that eliminate

985
00:43:14,880 --> 00:43:16,800
the root cross cause if it is in your

986
00:43:16,800 --> 00:43:18,319
control

987
00:43:18,319 --> 00:43:20,800
so the thing is that we know that in the

988
00:43:20,800 --> 00:43:22,640
three scenarios we know the root cause

989
00:43:22,640 --> 00:43:24,880
so one was debugging code was enabled

990
00:43:24,880 --> 00:43:26,240
and even though we removed that

991
00:43:26,240 --> 00:43:28,240
debugging code still it is vulnerable to

992
00:43:28,240 --> 00:43:30,960
ssrf i mean we need to fix the ssrf as

993
00:43:30,960 --> 00:43:33,520
well so that is the root cause

994
00:43:33,520 --> 00:43:36,720
uh then another thing is when we talk

995
00:43:36,720 --> 00:43:39,599
about azure security azure environment

996
00:43:39,599 --> 00:43:41,280
security i should say so there's a

997
00:43:41,280 --> 00:43:45,520
strong need for a azure environment

998
00:43:45,520 --> 00:43:47,680
related testbed where we can learn

999
00:43:47,680 --> 00:43:50,240
practice and uh we can learn a lot there

1000
00:43:50,240 --> 00:43:52,720
so web and aws as i've already told they

1001
00:43:52,720 --> 00:43:55,440
have dedicated aspects developed

1002
00:43:55,440 --> 00:43:56,480
and

1003
00:43:56,480 --> 00:43:57,599
yes we

1004
00:43:57,599 --> 00:44:00,400
we there should be more encouragement on

1005
00:44:00,400 --> 00:44:02,640
azure environment i should say not just

1006
00:44:02,640 --> 00:44:04,640
azure security it should be azure

1007
00:44:04,640 --> 00:44:06,800
environment related security as well

1008
00:44:06,800 --> 00:44:08,079
so there should be something more

1009
00:44:08,079 --> 00:44:10,319
related to that

1010
00:44:10,319 --> 00:44:12,800
and when we talk about action items

1011
00:44:12,800 --> 00:44:13,599
so

1012
00:44:13,599 --> 00:44:16,000
yes there is call for collaboration it's

1013
00:44:16,000 --> 00:44:18,800
a it's a if some of you want to if any

1014
00:44:18,800 --> 00:44:20,720
of one of you want to collaborate in

1015
00:44:20,720 --> 00:44:23,680
this easy code please do let me know uh

1016
00:44:23,680 --> 00:44:26,720
we we can make it more exciting and uh

1017
00:44:26,720 --> 00:44:28,720
yes there can be very good scenarios

1018
00:44:28,720 --> 00:44:30,480
here which from which people can learn a

1019
00:44:30,480 --> 00:44:32,480
lot and yes we can develop more scripts

1020
00:44:32,480 --> 00:44:33,599
which can

1021
00:44:33,599 --> 00:44:36,160
help them to

1022
00:44:36,319 --> 00:44:38,480
perform pentest better

1023
00:44:38,480 --> 00:44:41,040
so any questions or feedback do reach

1024
00:44:41,040 --> 00:44:43,839
out to me on this email address

1025
00:44:43,839 --> 00:44:45,920
and for the last time let's see there is

1026
00:44:45,920 --> 00:44:48,079
one timeout error here

1027
00:44:48,079 --> 00:44:48,839
all

1028
00:44:48,839 --> 00:44:50,800
right so

1029
00:44:50,800 --> 00:44:52,480
maybe there is something wrong with this

1030
00:44:52,480 --> 00:44:54,319
reversion script

1031
00:44:54,319 --> 00:44:55,040
uh

1032
00:44:55,040 --> 00:44:57,359
a comment said that there was a

1033
00:44:57,359 --> 00:44:58,960
wrong ip in the reverse shell command

1034
00:44:58,960 --> 00:45:00,240
maybe you can

1035
00:45:00,240 --> 00:45:02,720
oh okay i have double two at the

1036
00:45:02,720 --> 00:45:04,800
beginning of the address

1037
00:45:04,800 --> 00:45:06,640
all right

1038
00:45:06,640 --> 00:45:07,520
maybe

1039
00:45:07,520 --> 00:45:09,359
but this was

1040
00:45:09,359 --> 00:45:11,599
i think this is correct one right two

1041
00:45:11,599 --> 00:45:15,280
zero this one i have started

1042
00:45:15,440 --> 00:45:17,280
i have changed it here while i was

1043
00:45:17,280 --> 00:45:19,359
copying

1044
00:45:19,359 --> 00:45:22,160
but yes it it was working i'm not sure

1045
00:45:22,160 --> 00:45:24,000
maybe

1046
00:45:24,000 --> 00:45:27,280
four four there's something related to

1047
00:45:27,280 --> 00:45:30,240
okay all right i got it it's because of

1048
00:45:30,240 --> 00:45:33,520
nsg that nsg is not enabled for 443

1049
00:45:33,520 --> 00:45:35,359
that's why it's not working

1050
00:45:35,359 --> 00:45:36,960
if i enable that port it will start

1051
00:45:36,960 --> 00:45:39,200
working

1052
00:45:39,200 --> 00:45:41,119
if i add that in one port that will

1053
00:45:41,119 --> 00:45:43,520
start working

1054
00:45:43,520 --> 00:45:45,920
because 443 inbound connection for 443

1055
00:45:45,920 --> 00:45:49,599
is not enabled that's why it didn't work

1056
00:45:50,240 --> 00:45:53,439
i think it should work now

1057
00:45:57,280 --> 00:46:00,520
oh god

1058
00:46:02,079 --> 00:46:06,440
all right it should work now

1059
00:46:14,079 --> 00:46:16,480
that's what i think because of nsgs this

1060
00:46:16,480 --> 00:46:19,440
thing wasn't working

1061
00:46:19,680 --> 00:46:22,240
yes we have this restricted shell now

1062
00:46:22,240 --> 00:46:26,400
so if you can see we can ls and

1063
00:46:26,400 --> 00:46:27,680
i mean we can

1064
00:46:27,680 --> 00:46:30,400
we can see which directory we are in

1065
00:46:30,400 --> 00:46:33,200
a lot of things are here uh we can move

1066
00:46:33,200 --> 00:46:35,599
out of this and we can see what more

1067
00:46:35,599 --> 00:46:37,440
things are present here

1068
00:46:37,440 --> 00:46:39,920
so this was that scenario three demo

1069
00:46:39,920 --> 00:46:43,200
which was pending from my end uh that

1070
00:46:43,200 --> 00:46:45,599
got successfully completed

1071
00:46:45,599 --> 00:46:48,480
so thanks demogod for that

1072
00:46:48,480 --> 00:46:49,839
and uh

1073
00:46:49,839 --> 00:46:52,160
this is the reference which i have

1074
00:46:52,160 --> 00:46:55,200
provided here from where i mean a lot of

1075
00:46:55,200 --> 00:46:57,680
ideas we have a lot of research we have

1076
00:46:57,680 --> 00:47:00,160
done for making this uh

1077
00:47:00,160 --> 00:47:01,599
test bed

1078
00:47:01,599 --> 00:47:04,400
and at the end i want to thanks obas for

1079
00:47:04,400 --> 00:47:06,880
giving me such a great opportunity to

1080
00:47:06,880 --> 00:47:08,560
present in front of such a wonderful

1081
00:47:08,560 --> 00:47:11,839
audience thanks a lot

