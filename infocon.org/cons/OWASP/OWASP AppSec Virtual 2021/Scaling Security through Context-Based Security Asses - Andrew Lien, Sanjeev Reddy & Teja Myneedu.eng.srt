1
00:00:01,420 --> 00:00:05,520
[Music]

2
00:00:05,520 --> 00:00:08,160
all right welcome everyone to our talk

3
00:00:08,160 --> 00:00:10,080
called scaling security through

4
00:00:10,080 --> 00:00:12,639
context-based security assessments

5
00:00:12,639 --> 00:00:15,200
i'll start with a quick disclaimer the

6
00:00:15,200 --> 00:00:18,000
views uh in this presentation are those

7
00:00:18,000 --> 00:00:18,960
of

8
00:00:18,960 --> 00:00:21,840
our own and they do not represent

9
00:00:21,840 --> 00:00:23,920
necessarily those of splunk but we're

10
00:00:23,920 --> 00:00:27,119
very thankful to splunk to allow

11
00:00:27,119 --> 00:00:29,039
us thank you for allowing us to do this

12
00:00:29,039 --> 00:00:30,960
this talk and building something that

13
00:00:30,960 --> 00:00:33,520
we're very proud of and showcasing to

14
00:00:33,520 --> 00:00:34,640
all of you

15
00:00:34,640 --> 00:00:36,719
so i will start with a quick rundown of

16
00:00:36,719 --> 00:00:40,239
the agenda um i'm sure after the fun

17
00:00:40,239 --> 00:00:42,480
introduction john gave us you'd love to

18
00:00:42,480 --> 00:00:45,360
know more about us and even if you don't

19
00:00:45,360 --> 00:00:46,480
uh

20
00:00:46,480 --> 00:00:48,480
give us a chance you'll like us

21
00:00:48,480 --> 00:00:50,320
so we'll start with a quick intro for

22
00:00:50,320 --> 00:00:52,320
ourselves then we'll go on to talk about

23
00:00:52,320 --> 00:00:54,480
who this presentation is for

24
00:00:54,480 --> 00:00:56,840
and then what you should expect

25
00:00:56,840 --> 00:00:59,359
hopefully uh you'll make a decision to

26
00:00:59,359 --> 00:01:01,199
stay and listen to the rest of it once

27
00:01:01,199 --> 00:01:03,520
you know what this is all about and

28
00:01:03,520 --> 00:01:04,319
uh

29
00:01:04,319 --> 00:01:07,040
through um the rest of the presentation

30
00:01:07,040 --> 00:01:08,799
we will walk you through the story of an

31
00:01:08,799 --> 00:01:10,240
engineering team

32
00:01:10,240 --> 00:01:11,920
and a product security team at your

33
00:01:11,920 --> 00:01:13,680
friendly neighborhood high growth

34
00:01:13,680 --> 00:01:15,600
company and i'm sure a lot of you will

35
00:01:15,600 --> 00:01:17,119
relate to this story

36
00:01:17,119 --> 00:01:18,880
uh through these stories though you'll

37
00:01:18,880 --> 00:01:21,280
learn about the challenges the common

38
00:01:21,280 --> 00:01:23,040
challenges these teams face

39
00:01:23,040 --> 00:01:25,360
and we'll talk about the different ways

40
00:01:25,360 --> 00:01:26,960
to tackle these challenges like there's

41
00:01:26,960 --> 00:01:28,320
obviously different ways to solve a

42
00:01:28,320 --> 00:01:29,920
problem right so we'll talk about the

43
00:01:29,920 --> 00:01:31,840
different approaches and then finally

44
00:01:31,840 --> 00:01:35,119
arrive at the approach we picked and um

45
00:01:35,119 --> 00:01:36,560
you know we just didn't pick an approach

46
00:01:36,560 --> 00:01:38,880
we decided to actually build a tool to

47
00:01:38,880 --> 00:01:41,200
support this approach so we'll demo that

48
00:01:41,200 --> 00:01:43,119
tool and then we'll talk about uh the

49
00:01:43,119 --> 00:01:44,159
roadmap

50
00:01:44,159 --> 00:01:46,240
so i'll start with a quick intro about

51
00:01:46,240 --> 00:01:48,560
myself um here's a picture that looks

52
00:01:48,560 --> 00:01:50,720
like nothing like me right now

53
00:01:50,720 --> 00:01:52,799
and i look i lead the product security

54
00:01:52,799 --> 00:01:55,520
team at splunk i've worked here for over

55
00:01:55,520 --> 00:01:57,439
five years and previously as a principal

56
00:01:57,439 --> 00:01:59,280
engineer on the same team

57
00:01:59,280 --> 00:02:01,280
of all the things i've been fortunate to

58
00:02:01,280 --> 00:02:04,159
accomplish here i'm personally very

59
00:02:04,159 --> 00:02:06,079
proud of creating the tooling and

60
00:02:06,079 --> 00:02:08,399
automation function and you know

61
00:02:08,399 --> 00:02:10,000
bringing in all the awesome people on

62
00:02:10,000 --> 00:02:11,440
this team

63
00:02:11,440 --> 00:02:12,879
and this talk today wouldn't have been

64
00:02:12,879 --> 00:02:15,680
possible without all of us together here

65
00:02:15,680 --> 00:02:17,760
start my career on the offensive side

66
00:02:17,760 --> 00:02:18,879
and

67
00:02:18,879 --> 00:02:20,400
transitioned over to doing security

68
00:02:20,400 --> 00:02:21,680
engineering

69
00:02:21,680 --> 00:02:24,080
helping software development teams

70
00:02:24,080 --> 00:02:26,480
build secure software right i consider

71
00:02:26,480 --> 00:02:28,720
myself very fortunate to have had the

72
00:02:28,720 --> 00:02:31,280
opportunity to work at large companies

73
00:02:31,280 --> 00:02:33,280
and small startups doing

74
00:02:33,280 --> 00:02:36,160
work in security and that's why i'm also

75
00:02:36,160 --> 00:02:38,480
passionate about helping people grow in

76
00:02:38,480 --> 00:02:41,200
their careers i started this thing

77
00:02:41,200 --> 00:02:43,920
along with a couple of other uh you know

78
00:02:43,920 --> 00:02:46,080
security leaders in

79
00:02:46,080 --> 00:02:47,440
different tech companies called the

80
00:02:47,440 --> 00:02:49,519
security mentor club

81
00:02:49,519 --> 00:02:51,040
please join us

82
00:02:51,040 --> 00:02:53,360
and ask questions if you have anything

83
00:02:53,360 --> 00:02:55,360
any questions about growing your career

84
00:02:55,360 --> 00:02:57,840
and finally i've been i'm interested in

85
00:02:57,840 --> 00:02:59,599
advising startups interested in

86
00:02:59,599 --> 00:03:01,840
blockchains and recently been working

87
00:03:01,840 --> 00:03:04,400
very hard on my dad jokes

88
00:03:04,400 --> 00:03:06,720
and no i'm not crazy i'm actually going

89
00:03:06,720 --> 00:03:08,640
to be a dab in a couple of weeks and i'm

90
00:03:08,640 --> 00:03:10,400
pretty stoked about it so that's the

91
00:03:10,400 --> 00:03:11,760
reason why i'm working very hard on

92
00:03:11,760 --> 00:03:12,720
those

93
00:03:12,720 --> 00:03:16,879
i'll call on andrew to do his intro

94
00:03:16,879 --> 00:03:19,040
nice hi i'm andrew i'm the senior

95
00:03:19,040 --> 00:03:21,200
tooling and automation engineer for uh

96
00:03:21,200 --> 00:03:23,280
splunk's product security team i have

97
00:03:23,280 --> 00:03:24,640
five years of software engineering

98
00:03:24,640 --> 00:03:26,080
experience that ranges from cyber

99
00:03:26,080 --> 00:03:28,080
security big data analytics data and

100
00:03:28,080 --> 00:03:30,000
developer infra as well as tooling and

101
00:03:30,000 --> 00:03:32,560
automation i been an eagle scout since

102
00:03:32,560 --> 00:03:35,680
2010 and i really love to hike so on the

103
00:03:35,680 --> 00:03:37,440
weekends i try to find new hiking spots

104
00:03:37,440 --> 00:03:40,159
around the san ramon danville dublin

105
00:03:40,159 --> 00:03:41,200
area

106
00:03:41,200 --> 00:03:43,120
of california and i'm also a huge rick

107
00:03:43,120 --> 00:03:44,799
and morty fanatic so i've been watching

108
00:03:44,799 --> 00:03:46,400
reruns of that pretty much every dinner

109
00:03:46,400 --> 00:03:47,420
time

110
00:03:47,420 --> 00:03:49,280
[Music]

111
00:03:49,280 --> 00:03:51,200
hey guys how's it going uh thanks for

112
00:03:51,200 --> 00:03:53,280
joining us my name is sanjeev uh on the

113
00:03:53,280 --> 00:03:54,400
right there you can see a picture of me

114
00:03:54,400 --> 00:03:55,840
when i was a little bit hairier than i

115
00:03:55,840 --> 00:03:58,080
am today but uh i'm a product security

116
00:03:58,080 --> 00:04:00,080
engineer at splunk

117
00:04:00,080 --> 00:04:01,360
where i work on the tooling automation

118
00:04:01,360 --> 00:04:03,200
team with deja and andrew

119
00:04:03,200 --> 00:04:03,920
and

120
00:04:03,920 --> 00:04:05,599
prior to that i was actually uh an

121
00:04:05,599 --> 00:04:07,439
intern at splunk so i really enjoyed my

122
00:04:07,439 --> 00:04:08,959
time here i love the team which is why

123
00:04:08,959 --> 00:04:11,760
i'm still here but uh before i was at

124
00:04:11,760 --> 00:04:16,959
splunk i was doing a cs ucsda in uiuc

125
00:04:16,959 --> 00:04:19,040
where i did my masters actually at uiuc

126
00:04:19,040 --> 00:04:21,199
a lot of my security interests revolve

127
00:04:21,199 --> 00:04:23,440
around web privacy and software

128
00:04:23,440 --> 00:04:25,440
integrity systems so

129
00:04:25,440 --> 00:04:27,120
i was focusing a lot on web

130
00:04:27,120 --> 00:04:28,720
fingerprinting and

131
00:04:28,720 --> 00:04:31,440
building systems for consensus

132
00:04:31,440 --> 00:04:33,280
and uh you know i consider myself a bit

133
00:04:33,280 --> 00:04:36,000
of a renaissance man

134
00:04:36,000 --> 00:04:38,639
so i have a wide soup of interest as i

135
00:04:38,639 --> 00:04:41,360
like to call it so i'm

136
00:04:41,360 --> 00:04:43,600
very much into visual arts i

137
00:04:43,600 --> 00:04:45,759
um

138
00:04:45,759 --> 00:04:48,160
also big into mcken

139
00:04:48,160 --> 00:04:49,600
it's a hobby i've stuck with for about

140
00:04:49,600 --> 00:04:52,160
five years now um so i build them i

141
00:04:52,160 --> 00:04:54,400
customize them i make special keycaps

142
00:04:54,400 --> 00:04:55,360
for them

143
00:04:55,360 --> 00:04:57,120
and then i'm also into climbing like

144
00:04:57,120 --> 00:04:59,440
many other software engineers and uh as

145
00:04:59,440 --> 00:05:01,759
john mentioned legos are a big part of

146
00:05:01,759 --> 00:05:04,160
my shelf space uh and then finally i

147
00:05:04,160 --> 00:05:05,919
guess since uh i didn't get to travel

148
00:05:05,919 --> 00:05:07,600
much these past couple of years i got at

149
00:05:07,600 --> 00:05:09,360
the geo getser where i get dropped in a

150
00:05:09,360 --> 00:05:10,880
random location on google maps and try

151
00:05:10,880 --> 00:05:12,080
to figure out where i am so that's been

152
00:05:12,080 --> 00:05:15,919
my el cheapo way of traveling the world

153
00:05:17,280 --> 00:05:19,120
awesome see i told you guys you'll like

154
00:05:19,120 --> 00:05:19,919
us

155
00:05:19,919 --> 00:05:22,080
uh but let's start with the meat of the

156
00:05:22,080 --> 00:05:24,639
talk so who is this talk really for so

157
00:05:24,639 --> 00:05:26,720
this talk is for product security teams

158
00:05:26,720 --> 00:05:30,240
at high growth organizations and uh i i

159
00:05:30,240 --> 00:05:31,280
want you to

160
00:05:31,280 --> 00:05:33,440
guys to pay attention it's high growth

161
00:05:33,440 --> 00:05:35,840
not large organizations

162
00:05:35,840 --> 00:05:37,520
because we think high growth

163
00:05:37,520 --> 00:05:39,759
organizations are usually fast-moving

164
00:05:39,759 --> 00:05:41,600
organizations where

165
00:05:41,600 --> 00:05:43,759
you often find that there is an

166
00:05:43,759 --> 00:05:46,479
imbalance in the supply of product

167
00:05:46,479 --> 00:05:48,240
security engineers and the demand for

168
00:05:48,240 --> 00:05:49,520
their time

169
00:05:49,520 --> 00:05:52,080
because these organizations are always

170
00:05:52,080 --> 00:05:53,520
looking to build new products or

171
00:05:53,520 --> 00:05:55,440
features for customers

172
00:05:55,440 --> 00:05:57,759
the product priorities constantly change

173
00:05:57,759 --> 00:06:00,160
and there are always frequent reorgs so

174
00:06:00,160 --> 00:06:01,680
all these factors

175
00:06:01,680 --> 00:06:05,120
um the complexity the rapid pace of

176
00:06:05,120 --> 00:06:07,360
change and the volume of security

177
00:06:07,360 --> 00:06:08,960
engagements coming in

178
00:06:08,960 --> 00:06:11,600
uh make the product security team's job

179
00:06:11,600 --> 00:06:13,840
really hard right let's take a look at

180
00:06:13,840 --> 00:06:15,919
some of the common problems faced by the

181
00:06:15,919 --> 00:06:18,840
product security teams at high growth

182
00:06:18,840 --> 00:06:22,160
organizations so one of the big things

183
00:06:22,160 --> 00:06:24,880
that the first big problem that

184
00:06:24,880 --> 00:06:26,560
product security teams face is about

185
00:06:26,560 --> 00:06:28,880
scaling the security assessment process

186
00:06:28,880 --> 00:06:30,560
to ensure that there's actually

187
00:06:30,560 --> 00:06:32,800
sufficient security assessment coverage

188
00:06:32,800 --> 00:06:35,120
for the whole organization and how does

189
00:06:35,120 --> 00:06:38,000
the team really scale this this you know

190
00:06:38,000 --> 00:06:40,400
coverage across the board the second

191
00:06:40,400 --> 00:06:43,120
challenge is about making the end-to-end

192
00:06:43,120 --> 00:06:45,680
security engagement process or security

193
00:06:45,680 --> 00:06:47,759
assessment process transparent to the

194
00:06:47,759 --> 00:06:49,680
engineering teams upfront

195
00:06:49,680 --> 00:06:51,840
the type of assessment any product has

196
00:06:51,840 --> 00:06:54,080
to go through is determined by you know

197
00:06:54,080 --> 00:06:56,639
the context of the product and the risk

198
00:06:56,639 --> 00:06:58,319
which means the engineering team has to

199
00:06:58,319 --> 00:07:00,240
usually first wait to talk to the

200
00:07:00,240 --> 00:07:01,840
product security team to understand oh

201
00:07:01,840 --> 00:07:04,560
like do i do threat modeling or do i do

202
00:07:04,560 --> 00:07:06,560
everything across the board or do i need

203
00:07:06,560 --> 00:07:08,479
to do only a pen test so

204
00:07:08,479 --> 00:07:11,520
i i think it would be much nicer if it's

205
00:07:11,520 --> 00:07:13,120
easy for the engineering team to know

206
00:07:13,120 --> 00:07:15,759
upfront what should be expected the

207
00:07:15,759 --> 00:07:17,280
third challenge is

208
00:07:17,280 --> 00:07:19,120
how how does the security team the

209
00:07:19,120 --> 00:07:22,000
product security team report the risk to

210
00:07:22,000 --> 00:07:24,639
different levels of engineering in the

211
00:07:24,639 --> 00:07:27,039
right way that's meaningful to them so

212
00:07:27,039 --> 00:07:30,400
hopefully by the end of this talk uh you

213
00:07:30,400 --> 00:07:32,800
will be able to look at different

214
00:07:32,800 --> 00:07:34,400
solutions and if you want to go to the

215
00:07:34,400 --> 00:07:36,560
next one

216
00:07:36,560 --> 00:07:39,039
so this talk you'll be able to look at

217
00:07:39,039 --> 00:07:40,560
the different solutions to security

218
00:07:40,560 --> 00:07:42,479
assurance scaling problem

219
00:07:42,479 --> 00:07:44,960
and the solution we chose to build and

220
00:07:44,960 --> 00:07:47,759
how uh it can work for you we think it

221
00:07:47,759 --> 00:07:50,560
will work for you know product security

222
00:07:50,560 --> 00:07:52,400
teams that have similar problems like

223
00:07:52,400 --> 00:07:53,919
the ones we've uh we've described

224
00:07:53,919 --> 00:07:55,919
earlier and we will actually go through

225
00:07:55,919 --> 00:07:57,840
a demo of our solution

226
00:07:57,840 --> 00:07:59,120
hopefully fingers crossed we're going

227
00:07:59,120 --> 00:08:01,039
through our open source process and we

228
00:08:01,039 --> 00:08:02,960
will be able to able to open sources in

229
00:08:02,960 --> 00:08:04,240
a couple of months

230
00:08:04,240 --> 00:08:07,599
so let me take a step back actually and

231
00:08:07,599 --> 00:08:08,960
talk about the goals of a product

232
00:08:08,960 --> 00:08:11,599
security team usually in such an

233
00:08:11,599 --> 00:08:12,720
organization

234
00:08:12,720 --> 00:08:15,120
so in any organization that builds

235
00:08:15,120 --> 00:08:16,319
software

236
00:08:16,319 --> 00:08:18,720
as the engineering team builds new

237
00:08:18,720 --> 00:08:21,039
products or features it is very likely

238
00:08:21,039 --> 00:08:22,879
that they are creating new information

239
00:08:22,879 --> 00:08:25,840
security risk

240
00:08:25,840 --> 00:08:28,080
uh this security risk they create on a

241
00:08:28,080 --> 00:08:31,039
day-to-day basis is unknown in the

242
00:08:31,039 --> 00:08:32,799
beginning unless somebody does an

243
00:08:32,799 --> 00:08:34,719
exercise to discover or identify the

244
00:08:34,719 --> 00:08:36,880
risk right so it is the responsibility

245
00:08:36,880 --> 00:08:39,360
of the product security team to convert

246
00:08:39,360 --> 00:08:42,000
this unknown risk into known risk by

247
00:08:42,000 --> 00:08:44,640
performing different types of manual and

248
00:08:44,640 --> 00:08:46,720
automated security assessments

249
00:08:46,720 --> 00:08:48,959
once this risk is known it is also the

250
00:08:48,959 --> 00:08:51,120
job of the product security team to

251
00:08:51,120 --> 00:08:53,440
report on the risk and ensure that it is

252
00:08:53,440 --> 00:08:56,240
addressed so in other words the success

253
00:08:56,240 --> 00:08:57,920
of the product security team can be

254
00:08:57,920 --> 00:08:59,200
measured by

255
00:08:59,200 --> 00:09:00,959
how well they complete the security

256
00:09:00,959 --> 00:09:02,240
assessments

257
00:09:02,240 --> 00:09:03,760
and the red box here

258
00:09:03,760 --> 00:09:05,920
and how well they ensure that the risk

259
00:09:05,920 --> 00:09:08,720
is addressed by providing timely and

260
00:09:08,720 --> 00:09:10,880
actionable input and on addressing the

261
00:09:10,880 --> 00:09:11,839
risk

262
00:09:11,839 --> 00:09:13,440
sounds simple right

263
00:09:13,440 --> 00:09:16,160
uh it may be simple if you have one

264
00:09:16,160 --> 00:09:17,680
product and you know 10 products

265
00:09:17,680 --> 00:09:18,800
security engineers on the team

266
00:09:18,800 --> 00:09:20,399
constantly looking at it

267
00:09:20,399 --> 00:09:22,160
you know and if it's a small small

268
00:09:22,160 --> 00:09:25,200
product but if you have a bunch of

269
00:09:25,200 --> 00:09:28,560
products um it's complicated still

270
00:09:28,560 --> 00:09:30,480
always introduces complexity and

271
00:09:30,480 --> 00:09:31,519
challenges

272
00:09:31,519 --> 00:09:33,680
so let me actually pass it along to

273
00:09:33,680 --> 00:09:35,760
andrew to demonstrate how the seemingly

274
00:09:35,760 --> 00:09:38,160
simple job of a product security team

275
00:09:38,160 --> 00:09:40,880
can be really hard at scale when there's

276
00:09:40,880 --> 00:09:43,200
multiple products involved

277
00:09:43,200 --> 00:09:45,360
thanks deja so let's talk about a

278
00:09:45,360 --> 00:09:47,680
typical scenario that we often see in

279
00:09:47,680 --> 00:09:49,760
many organizations we're going to follow

280
00:09:49,760 --> 00:09:52,000
some common conversations encountered by

281
00:09:52,000 --> 00:09:54,080
engineering and product security teams

282
00:09:54,080 --> 00:09:56,000
we'll then brainstorm how we can scale

283
00:09:56,000 --> 00:09:57,600
their workflows at a high growth

284
00:09:57,600 --> 00:09:59,279
organization

285
00:09:59,279 --> 00:10:01,680
in this scenario the product manager

286
00:10:01,680 --> 00:10:04,000
unexpectedly decides to end a life the

287
00:10:04,000 --> 00:10:05,839
next gen product that everyone has been

288
00:10:05,839 --> 00:10:08,079
talking about for the past six months

289
00:10:08,079 --> 00:10:08,880
now

290
00:10:08,880 --> 00:10:11,040
this product has been vetted and tested

291
00:10:11,040 --> 00:10:12,640
and assured through multiple channels

292
00:10:12,640 --> 00:10:13,519
already

293
00:10:13,519 --> 00:10:15,680
now leadership decides that we need that

294
00:10:15,680 --> 00:10:18,240
we need to build a new competition

295
00:10:18,240 --> 00:10:20,959
killer product in two months because

296
00:10:20,959 --> 00:10:22,880
customers expect the product to meet

297
00:10:22,880 --> 00:10:24,880
compliance requirements this new

298
00:10:24,880 --> 00:10:27,200
experimental product must be certified

299
00:10:27,200 --> 00:10:29,839
in various security standards like sock2

300
00:10:29,839 --> 00:10:33,040
certification or pci for example

301
00:10:33,040 --> 00:10:35,120
now here's a question that every

302
00:10:35,120 --> 00:10:36,720
engineering team would think about

303
00:10:36,720 --> 00:10:38,560
throughout this entire process

304
00:10:38,560 --> 00:10:41,200
can the legal privacy and security team

305
00:10:41,200 --> 00:10:43,440
just tell us what to complete quickly so

306
00:10:43,440 --> 00:10:46,640
that we can meet the impossible deadline

307
00:10:46,640 --> 00:10:48,240
now let's look at this from the product

308
00:10:48,240 --> 00:10:50,480
security team perspective we're about

309
00:10:50,480 --> 00:10:52,480
say a few weeks into this initiative and

310
00:10:52,480 --> 00:10:54,640
now there are five new products that

311
00:10:54,640 --> 00:10:56,640
were not previously on the team's radar

312
00:10:56,640 --> 00:10:58,079
at the start of the quarter they now

313
00:10:58,079 --> 00:11:00,399
need a security assessment request

314
00:11:00,399 --> 00:11:02,240
let's add some more scenarios here to

315
00:11:02,240 --> 00:11:04,079
prove just how high growth our

316
00:11:04,079 --> 00:11:06,800
organization is now the business chose

317
00:11:06,800 --> 00:11:08,480
to acquire a new product that they plan

318
00:11:08,480 --> 00:11:10,160
to integrate with the flagship product

319
00:11:10,160 --> 00:11:12,640
and not only that the product manager

320
00:11:12,640 --> 00:11:14,880
also want users from one product to be

321
00:11:14,880 --> 00:11:17,519
able to seamlessly log into the other in

322
00:11:17,519 --> 00:11:20,160
their mind this should be no biggie also

323
00:11:20,160 --> 00:11:22,240
to add the final wrench in our roadmap

324
00:11:22,240 --> 00:11:24,240
the new product doesn't meet any

325
00:11:24,240 --> 00:11:26,320
regulatory compliance whereas the

326
00:11:26,320 --> 00:11:28,880
flagship product is fedramp certified

327
00:11:28,880 --> 00:11:30,640
we'll have to ask the engineering team

328
00:11:30,640 --> 00:11:32,560
to also make sure that the new products

329
00:11:32,560 --> 00:11:35,680
are fedramp compliant wow what can we do

330
00:11:35,680 --> 00:11:36,120
now

331
00:11:36,120 --> 00:11:37,519
[Music]

332
00:11:37,519 --> 00:11:39,600
what we've learned over time is that all

333
00:11:39,600 --> 00:11:41,839
groups that are involved in this process

334
00:11:41,839 --> 00:11:43,600
want the product security engagement

335
00:11:43,600 --> 00:11:45,920
process to be as quick and painless as

336
00:11:45,920 --> 00:11:47,519
possible

337
00:11:47,519 --> 00:11:49,600
at this point you're probably

338
00:11:49,600 --> 00:11:51,200
sense that the feeling of being

339
00:11:51,200 --> 00:11:53,519
overwhelmed with the task at hand this

340
00:11:53,519 --> 00:11:55,279
particular engineering team would

341
00:11:55,279 --> 00:11:57,440
definitely want a simple and efficient

342
00:11:57,440 --> 00:11:58,959
engagement model for security

343
00:11:58,959 --> 00:12:01,279
assessments this engagement model needs

344
00:12:01,279 --> 00:12:03,680
to be very clear on what the security

345
00:12:03,680 --> 00:12:05,519
controls that the product should meet

346
00:12:05,519 --> 00:12:07,519
especially if there are multiple facets

347
00:12:07,519 --> 00:12:09,440
of security engagements that is involved

348
00:12:09,440 --> 00:12:10,720
within the product

349
00:12:10,720 --> 00:12:12,720
this engagement model needs to be well

350
00:12:12,720 --> 00:12:15,040
defined with the end-to-end assessment

351
00:12:15,040 --> 00:12:17,360
trackable and deliverable once the tasks

352
00:12:17,360 --> 00:12:18,560
are completed

353
00:12:18,560 --> 00:12:20,240
this model needs to be quick and with

354
00:12:20,240 --> 00:12:22,160
the turnaround time on engagements being

355
00:12:22,160 --> 00:12:23,519
sufficient enough so that the

356
00:12:23,519 --> 00:12:25,760
engineering team can work on addressing

357
00:12:25,760 --> 00:12:28,639
them via code or requesting an

358
00:12:28,639 --> 00:12:30,800
exemption for the risks that were found

359
00:12:30,800 --> 00:12:33,120
during the assessment

360
00:12:33,120 --> 00:12:34,800
now on the flip side the product

361
00:12:34,800 --> 00:12:36,959
security team that is going to perform

362
00:12:36,959 --> 00:12:38,720
this engagement model will need to

363
00:12:38,720 --> 00:12:40,720
ensure that they are quickly receiving

364
00:12:40,720 --> 00:12:42,480
actionable service information from the

365
00:12:42,480 --> 00:12:44,800
engineering teams ideally they should be

366
00:12:44,800 --> 00:12:46,800
receiving this information with minimal

367
00:12:46,800 --> 00:12:48,480
knowledge and back and forth between the

368
00:12:48,480 --> 00:12:49,600
teams

369
00:12:49,600 --> 00:12:51,440
additionally product security teams

370
00:12:51,440 --> 00:12:53,440
needs to be able to prioritize the

371
00:12:53,440 --> 00:12:55,120
security assessment based on the

372
00:12:55,120 --> 00:12:57,440
security impact of the changes made to

373
00:12:57,440 --> 00:12:59,680
the product in our specific scenario we

374
00:12:59,680 --> 00:13:01,760
have multiple products some of which may

375
00:13:01,760 --> 00:13:03,600
have already had past security

376
00:13:03,600 --> 00:13:05,600
assessments done on them and the product

377
00:13:05,600 --> 00:13:08,000
security team would love to save time by

378
00:13:08,000 --> 00:13:10,000
retrieving the context of previous

379
00:13:10,000 --> 00:13:12,079
assessments that may be carried over to

380
00:13:12,079 --> 00:13:13,440
a future request

381
00:13:13,440 --> 00:13:15,760
this way the version to version changes

382
00:13:15,760 --> 00:13:17,440
are very well defined

383
00:13:17,440 --> 00:13:19,519
in another pain point to address the

384
00:13:19,519 --> 00:13:21,440
product security team would also need to

385
00:13:21,440 --> 00:13:23,680
see a forecast of the volume of incoming

386
00:13:23,680 --> 00:13:25,279
security requests

387
00:13:25,279 --> 00:13:26,720
now that we've taken a look at the

388
00:13:26,720 --> 00:13:28,959
day-to-day scenario and what each group

389
00:13:28,959 --> 00:13:30,639
would like to see in a security

390
00:13:30,639 --> 00:13:32,639
assurance engagement model i'll hand it

391
00:13:32,639 --> 00:13:34,160
off back to tasia to talk about the

392
00:13:34,160 --> 00:13:35,839
different avenues of thought that we

393
00:13:35,839 --> 00:13:39,519
employed to arrive at our solution

394
00:13:42,079 --> 00:13:44,720
awesome thanks andrew and

395
00:13:44,720 --> 00:13:47,199
wow that sounds like a fun challenge to

396
00:13:47,199 --> 00:13:48,480
solve

397
00:13:48,480 --> 00:13:50,720
so many different desires from the

398
00:13:50,720 --> 00:13:52,800
security team and the

399
00:13:52,800 --> 00:13:54,079
engineering team

400
00:13:54,079 --> 00:13:56,160
so before we actually try to solve this

401
00:13:56,160 --> 00:13:58,480
problem or build a solution to this

402
00:13:58,480 --> 00:14:00,880
i thought we should spend a few minutes

403
00:14:00,880 --> 00:14:03,120
looking at the different possible ideas

404
00:14:03,120 --> 00:14:05,519
on how to approach this problem right

405
00:14:05,519 --> 00:14:07,680
so one way we can make the security

406
00:14:07,680 --> 00:14:09,920
engagement process quick and painless

407
00:14:09,920 --> 00:14:12,320
for engineering teams is actually this

408
00:14:12,320 --> 00:14:14,399
high touch engagement model or that's

409
00:14:14,399 --> 00:14:17,120
the term we're using for it where

410
00:14:17,120 --> 00:14:19,440
there's an embedded security engineer

411
00:14:19,440 --> 00:14:21,600
within each engineering team

412
00:14:21,600 --> 00:14:22,959
obviously this makes it quick and

413
00:14:22,959 --> 00:14:25,120
painless because the security engineer

414
00:14:25,120 --> 00:14:27,120
is a part of the engineering team knows

415
00:14:27,120 --> 00:14:29,120
all the context can do security

416
00:14:29,120 --> 00:14:30,720
assessments on a daily basis all his

417
00:14:30,720 --> 00:14:33,600
capacity is allocated to the team and

418
00:14:33,600 --> 00:14:35,440
that possibly results in the highest

419
00:14:35,440 --> 00:14:37,920
quality security assessment outcomes

420
00:14:37,920 --> 00:14:38,720
uh

421
00:14:38,720 --> 00:14:41,440
but on the flip side

422
00:14:41,440 --> 00:14:44,000
remember that our challenge is to scale

423
00:14:44,000 --> 00:14:46,079
in a high growth organization the

424
00:14:46,079 --> 00:14:48,800
engineering team always moves fast keeps

425
00:14:48,800 --> 00:14:51,519
hiring new people builds more new things

426
00:14:51,519 --> 00:14:54,079
therefore in order to scale this method

427
00:14:54,079 --> 00:14:58,000
method or this model we need to really

428
00:14:58,000 --> 00:15:00,160
hire security engineers equal to the

429
00:15:00,160 --> 00:15:01,440
number of teams or the number of

430
00:15:01,440 --> 00:15:04,000
products so this is not really the ideal

431
00:15:04,000 --> 00:15:06,800
solution a second way to do this uh from

432
00:15:06,800 --> 00:15:08,480
a scaling perspective which would be

433
00:15:08,480 --> 00:15:10,480
ideal would be a low touch engagement

434
00:15:10,480 --> 00:15:12,959
model where all the security assessment

435
00:15:12,959 --> 00:15:15,279
process is self-service you guys

436
00:15:15,279 --> 00:15:18,240
probably have seen how the most recent

437
00:15:18,240 --> 00:15:20,800
uh advancements in in

438
00:15:20,800 --> 00:15:22,720
terms of scaling and appsec programming

439
00:15:22,720 --> 00:15:25,120
are all around integrating tools into

440
00:15:25,120 --> 00:15:27,519
the ci process making you know threat

441
00:15:27,519 --> 00:15:29,519
modeling automated but

442
00:15:29,519 --> 00:15:31,920
i think this approach has the downside

443
00:15:31,920 --> 00:15:33,759
of making the security assessment more

444
00:15:33,759 --> 00:15:35,519
of a checkbox where

445
00:15:35,519 --> 00:15:38,560
uh we assume that the output of some of

446
00:15:38,560 --> 00:15:41,199
these tools is good enough for doing all

447
00:15:41,199 --> 00:15:43,680
security reviews and security teams uh

448
00:15:43,680 --> 00:15:46,560
can do self attestation uh and i i think

449
00:15:46,560 --> 00:15:47,519
there is

450
00:15:47,519 --> 00:15:49,519
some amount of inherent risk in putting

451
00:15:49,519 --> 00:15:50,959
every single product through this

452
00:15:50,959 --> 00:15:53,680
process so after thinking about these

453
00:15:53,680 --> 00:15:56,079
two what we arrived at is this third

454
00:15:56,079 --> 00:15:57,600
hybrid model

455
00:15:57,600 --> 00:15:58,480
where

456
00:15:58,480 --> 00:16:01,440
we said okay if the security team

457
00:16:01,440 --> 00:16:04,079
really has to be efficient in their goal

458
00:16:04,079 --> 00:16:06,560
which is identifying risk at scale and

459
00:16:06,560 --> 00:16:09,199
surfacing risk and if the dev team wants

460
00:16:09,199 --> 00:16:11,360
to actually build and release products

461
00:16:11,360 --> 00:16:13,279
quickly while taking care of the

462
00:16:13,279 --> 00:16:15,360
security stuff

463
00:16:15,360 --> 00:16:17,279
the

464
00:16:17,279 --> 00:16:20,240
best approach to this would be

465
00:16:20,240 --> 00:16:22,959
something where a security engagement

466
00:16:22,959 --> 00:16:24,639
request comes in or security assessment

467
00:16:24,639 --> 00:16:27,120
comes in from the engineering team

468
00:16:27,120 --> 00:16:30,079
and there is this adjudication process

469
00:16:30,079 --> 00:16:30,959
where

470
00:16:30,959 --> 00:16:33,839
that that request is put in a box of

471
00:16:33,839 --> 00:16:35,680
high security impact or medium security

472
00:16:35,680 --> 00:16:38,639
impact or low security impact and then

473
00:16:38,639 --> 00:16:40,720
this product security team gets to spend

474
00:16:40,720 --> 00:16:42,160
majority of their time on the high

475
00:16:42,160 --> 00:16:45,120
security impact of changes and the maybe

476
00:16:45,120 --> 00:16:46,959
the medium and low security impact

477
00:16:46,959 --> 00:16:49,440
changes can be put through some sort of

478
00:16:49,440 --> 00:16:51,920
an automated or a semi-automated process

479
00:16:51,920 --> 00:16:54,880
now you probably have already seen the

480
00:16:54,880 --> 00:16:57,040
solution and you might be thinking hey

481
00:16:57,040 --> 00:16:58,720
i've seen questionnaire-based track

482
00:16:58,720 --> 00:17:00,240
modeling or questionnaire-based security

483
00:17:00,240 --> 00:17:03,040
impact analysis uh but obviously the

484
00:17:03,040 --> 00:17:06,000
challenge with doing that right is all

485
00:17:06,000 --> 00:17:07,679
around

486
00:17:07,679 --> 00:17:08,880
how

487
00:17:08,880 --> 00:17:10,880
well do you do the security impact

488
00:17:10,880 --> 00:17:13,760
assessment and our epiphany or

489
00:17:13,760 --> 00:17:15,919
hypothesis is that

490
00:17:15,919 --> 00:17:18,720
by gathering all the context possible

491
00:17:18,720 --> 00:17:20,640
about a given product

492
00:17:20,640 --> 00:17:22,959
we think we can ask better questions to

493
00:17:22,959 --> 00:17:25,439
do better security impact assessment and

494
00:17:25,439 --> 00:17:27,359
as a result

495
00:17:27,359 --> 00:17:28,160
we

496
00:17:28,160 --> 00:17:31,200
built a solution that we think will work

497
00:17:31,200 --> 00:17:33,840
really well uh to scale security through

498
00:17:33,840 --> 00:17:35,280
security impact assessments and

499
00:17:35,280 --> 00:17:37,440
gathering context and

500
00:17:37,440 --> 00:17:39,840
based on the context of the product we

501
00:17:39,840 --> 00:17:41,760
determine the security controls that

502
00:17:41,760 --> 00:17:43,760
apply to the product uh

503
00:17:43,760 --> 00:17:46,880
the the different uh questions that we

504
00:17:46,880 --> 00:17:48,720
can ask to gather more context around

505
00:17:48,720 --> 00:17:50,799
the product let's actually see

506
00:17:50,799 --> 00:17:53,440
brainstorm as context-based solution um

507
00:17:53,440 --> 00:17:55,600
that we built and i'll hand it off to

508
00:17:55,600 --> 00:17:59,120
sanjeev to talk about the solution

509
00:17:59,280 --> 00:18:01,919
yeah thanks deja so uh we are mentioning

510
00:18:01,919 --> 00:18:03,919
product context this entire time so what

511
00:18:03,919 --> 00:18:05,600
exactly do we mean by product context

512
00:18:05,600 --> 00:18:07,520
right what are we looking for when we

513
00:18:07,520 --> 00:18:09,600
try to service something uh essentially

514
00:18:09,600 --> 00:18:11,919
for us project context means salient

515
00:18:11,919 --> 00:18:14,240
features and engineering decisions that

516
00:18:14,240 --> 00:18:15,679
impact the manner in which we service

517
00:18:15,679 --> 00:18:17,039
the product from the security

518
00:18:17,039 --> 00:18:18,320
perspective

519
00:18:18,320 --> 00:18:21,120
so in the sandy table here we have three

520
00:18:21,120 --> 00:18:22,880
different types of products that you

521
00:18:22,880 --> 00:18:24,960
might encounter at a hybrid organization

522
00:18:24,960 --> 00:18:26,880
that you know build software right

523
00:18:26,880 --> 00:18:28,720
you'll have your huge sas product that's

524
00:18:28,720 --> 00:18:31,360
deployed as microsoft services you might

525
00:18:31,360 --> 00:18:33,919
have first party apps that are

526
00:18:33,919 --> 00:18:34,799
you know

527
00:18:34,799 --> 00:18:36,559
distributed through an app store or you

528
00:18:36,559 --> 00:18:39,120
might have a monolithic binary agent

529
00:18:39,120 --> 00:18:41,760
that runs on-premise and uh the core

530
00:18:41,760 --> 00:18:43,360
takeaway here is that each one of these

531
00:18:43,360 --> 00:18:45,280
products is going to be serviced

532
00:18:45,280 --> 00:18:46,880
differently because

533
00:18:46,880 --> 00:18:49,440
each one of them has different uh

534
00:18:49,440 --> 00:18:51,280
security needs that need to be met and

535
00:18:51,280 --> 00:18:53,039
they all operate in a different manner

536
00:18:53,039 --> 00:18:54,799
and to highlight that we've

537
00:18:54,799 --> 00:18:57,120
we've put a list of a couple not a

538
00:18:57,120 --> 00:18:58,559
couple but actually seven different

539
00:18:58,559 --> 00:19:00,000
types of product context that we look

540
00:19:00,000 --> 00:19:01,280
for right and those are all on the right

541
00:19:01,280 --> 00:19:03,120
hand side of the table here um some

542
00:19:03,120 --> 00:19:04,320
important ones i'd like to highlight

543
00:19:04,320 --> 00:19:06,880
would be data context right um how is

544
00:19:06,880 --> 00:19:09,679
our data stored in this product and how

545
00:19:09,679 --> 00:19:11,280
and and knowing that from a security

546
00:19:11,280 --> 00:19:13,200
team's perspective allows us to uh

547
00:19:13,200 --> 00:19:15,919
define the the tasks we need to perform

548
00:19:15,919 --> 00:19:18,160
to make sure that that data storage is

549
00:19:18,160 --> 00:19:20,240
safe and resilient uh something else

550
00:19:20,240 --> 00:19:22,559
might be the deployment context um you

551
00:19:22,559 --> 00:19:24,480
know a product that's deployed via

552
00:19:24,480 --> 00:19:26,559
kubernetes or some cloud infrastructure

553
00:19:26,559 --> 00:19:28,240
is going to be treated very differently

554
00:19:28,240 --> 00:19:30,320
um has a different attack surface than a

555
00:19:30,320 --> 00:19:32,400
product that's being deployed on premise

556
00:19:32,400 --> 00:19:33,840
something like development context

557
00:19:33,840 --> 00:19:35,120
knowing what programming language is

558
00:19:35,120 --> 00:19:37,679
being used um obviously that um that

559
00:19:37,679 --> 00:19:39,039
changes the way in which we service the

560
00:19:39,039 --> 00:19:40,799
product because

561
00:19:40,799 --> 00:19:42,559
um we're looking for different uh unsafe

562
00:19:42,559 --> 00:19:45,039
patterns also the uh the build context

563
00:19:45,039 --> 00:19:46,720
if something is deployed via or not

564
00:19:46,720 --> 00:19:49,280
deployed but rather built via jenkins ci

565
00:19:49,280 --> 00:19:50,960
we're going to be providing a different

566
00:19:50,960 --> 00:19:53,360
set of tooling and automation

567
00:19:53,360 --> 00:19:56,000
to to scan this uh this software as

568
00:19:56,000 --> 00:19:57,600
opposed to a product that's being built

569
00:19:57,600 --> 00:20:00,240
via gitlab ci where you know your

570
00:20:00,240 --> 00:20:01,520
product security team might have a

571
00:20:01,520 --> 00:20:03,760
different set of tools that they use to

572
00:20:03,760 --> 00:20:05,760
perform security actions and then

573
00:20:05,760 --> 00:20:07,120
finally something as simple as scale and

574
00:20:07,120 --> 00:20:09,039
customer context right a product that

575
00:20:09,039 --> 00:20:11,039
has millions of customers in general

576
00:20:11,039 --> 00:20:12,640
release is

577
00:20:12,640 --> 00:20:14,320
going to require a much more stringent

578
00:20:14,320 --> 00:20:16,320
security review and therefore will

579
00:20:16,320 --> 00:20:19,440
require more you know effort and hours

580
00:20:19,440 --> 00:20:21,600
put into that review than a small

581
00:20:21,600 --> 00:20:22,880
internal product that's only being

582
00:20:22,880 --> 00:20:24,559
touched by you know a dozen or so

583
00:20:24,559 --> 00:20:27,440
engineers within the organization

584
00:20:27,440 --> 00:20:30,000
so now keeping this in mind let's think

585
00:20:30,000 --> 00:20:30,960
about

586
00:20:30,960 --> 00:20:33,440
the technical needs we would want a

587
00:20:33,440 --> 00:20:35,360
solution that we're going to build to to

588
00:20:35,360 --> 00:20:37,360
have right so if we're going to build a

589
00:20:37,360 --> 00:20:38,720
solution that gathers this product

590
00:20:38,720 --> 00:20:39,919
context

591
00:20:39,919 --> 00:20:41,760
we first want to make sure that it

592
00:20:41,760 --> 00:20:43,600
guides users to tutorial like engagement

593
00:20:43,600 --> 00:20:46,720
workflows and by tutorial like i mean we

594
00:20:46,720 --> 00:20:48,559
offer explanations for expected user

595
00:20:48,559 --> 00:20:50,720
inputs and tasks and then perform error

596
00:20:50,720 --> 00:20:53,039
checking on user inputs where applicable

597
00:20:53,039 --> 00:20:54,240
because we want to make sure that our

598
00:20:54,240 --> 00:20:55,919
solution is gathering immediately

599
00:20:55,919 --> 00:20:57,919
actionable information and product

600
00:20:57,919 --> 00:21:00,960
context while simultaneously making a

601
00:21:00,960 --> 00:21:03,039
product secure the product security's

602
00:21:03,039 --> 00:21:05,679
interpretation of this product context

603
00:21:05,679 --> 00:21:07,120
available and clear to the engineering

604
00:21:07,120 --> 00:21:08,640
teams so we want engineering teams

605
00:21:08,640 --> 00:21:10,320
essentially to understand exactly what

606
00:21:10,320 --> 00:21:12,080
we're doing and know why we're

607
00:21:12,080 --> 00:21:14,080
performing uh the security controls that

608
00:21:14,080 --> 00:21:15,520
we are performing on their particular

609
00:21:15,520 --> 00:21:16,559
product

610
00:21:16,559 --> 00:21:19,039
secondly we want to enable product

611
00:21:19,039 --> 00:21:21,120
security engineers to ask custom

612
00:21:21,120 --> 00:21:23,600
questions to gather relevant context so

613
00:21:23,600 --> 00:21:24,799
practice engineers should be able to

614
00:21:24,799 --> 00:21:26,400
define custom questionnaires that gather

615
00:21:26,400 --> 00:21:28,880
the right context for their particular

616
00:21:28,880 --> 00:21:30,880
security flows right every product is

617
00:21:30,880 --> 00:21:32,320
different and we want to make sure that

618
00:21:32,320 --> 00:21:34,000
we can easily create and provide the

619
00:21:34,000 --> 00:21:36,240
right workflows for a wide range of

620
00:21:36,240 --> 00:21:38,400
possible product contexts and service

621
00:21:38,400 --> 00:21:39,679
requirements

622
00:21:39,679 --> 00:21:41,360
we also want to enable product security

623
00:21:41,360 --> 00:21:43,679
engineers to define actions and tasks to

624
00:21:43,679 --> 00:21:44,400
take

625
00:21:44,400 --> 00:21:46,480
given certain product context

626
00:21:46,480 --> 00:21:48,480
so again product security engineers

627
00:21:48,480 --> 00:21:50,320
should be able to define automated task

628
00:21:50,320 --> 00:21:52,400
assignment for certain contexts either

629
00:21:52,400 --> 00:21:54,400
via ticketing system or actual automated

630
00:21:54,400 --> 00:21:55,760
jobs

631
00:21:55,760 --> 00:21:57,120
but this kind of brings us back to the

632
00:21:57,120 --> 00:21:58,720
hybrid engagement model we discussed

633
00:21:58,720 --> 00:22:00,240
earlier if

634
00:22:00,240 --> 00:22:01,039
um

635
00:22:01,039 --> 00:22:02,400
you know if product security engineers

636
00:22:02,400 --> 00:22:04,720
can define how product context should be

637
00:22:04,720 --> 00:22:06,960
mapped to necessary security controls

638
00:22:06,960 --> 00:22:08,240
then we can immediately put those

639
00:22:08,240 --> 00:22:10,080
curated tasks in front of protect

640
00:22:10,080 --> 00:22:12,159
engineers for manual execution right so

641
00:22:12,159 --> 00:22:14,320
we let the decision making and the uh

642
00:22:14,320 --> 00:22:16,559
the general security scoring happen in

643
00:22:16,559 --> 00:22:18,799
an automated fashion and once we have

644
00:22:18,799 --> 00:22:21,919
that that impact uh gauged and measured

645
00:22:21,919 --> 00:22:23,760
we then allow you know human product

646
00:22:23,760 --> 00:22:25,360
security engineers to go ahead and

647
00:22:25,360 --> 00:22:27,440
perform the tasks that are required but

648
00:22:27,440 --> 00:22:29,679
the core takeaway here is that we are

649
00:22:29,679 --> 00:22:31,600
removing the human effort required to to

650
00:22:31,600 --> 00:22:32,960
gauge the security impact of the

651
00:22:32,960 --> 00:22:35,360
particular product and then finally we

652
00:22:35,360 --> 00:22:36,559
would like our solution to store

653
00:22:36,559 --> 00:22:38,480
reusable contact snapshots of previous

654
00:22:38,480 --> 00:22:40,559
assessments so if we're going to be

655
00:22:40,559 --> 00:22:42,640
gathering project contexts as products

656
00:22:42,640 --> 00:22:43,919
are being reviewed

657
00:22:43,919 --> 00:22:45,280
it makes sense that we might as well

658
00:22:45,280 --> 00:22:47,280
store that context and use that context

659
00:22:47,280 --> 00:22:49,760
to augment future security reviews and

660
00:22:49,760 --> 00:22:51,760
maybe draw some insights

661
00:22:51,760 --> 00:22:52,880
about

662
00:22:52,880 --> 00:22:55,280
ways in which we can improve our service

663
00:22:55,280 --> 00:22:57,120
posture and and

664
00:22:57,120 --> 00:22:58,799
we'll show you guys kind of how we do

665
00:22:58,799 --> 00:23:01,280
that by um demonstrating the product

666
00:23:01,280 --> 00:23:03,200
security portal which is the tool that

667
00:23:03,200 --> 00:23:06,159
we have built to to meet these needs so

668
00:23:06,159 --> 00:23:07,120
we're gonna go ahead and show you guys

669
00:23:07,120 --> 00:23:08,559
the demo um hopefully you guys enjoy

670
00:23:08,559 --> 00:23:10,320
this demo we'll have a few words to say

671
00:23:10,320 --> 00:23:12,799
afterwards

672
00:23:15,200 --> 00:23:16,240
all right welcome to the product

673
00:23:16,240 --> 00:23:17,840
security portal this is the tool our

674
00:23:17,840 --> 00:23:19,360
team has built in order to help us scale

675
00:23:19,360 --> 00:23:21,039
our security operations in the face of a

676
00:23:21,039 --> 00:23:22,240
rapidly growing and evolving

677
00:23:22,240 --> 00:23:23,919
organization we're going to walk you

678
00:23:23,919 --> 00:23:24,960
through the tool and its numerous

679
00:23:24,960 --> 00:23:26,480
features and outline ways in which we

680
00:23:26,480 --> 00:23:27,760
think it can augment your everyday

681
00:23:27,760 --> 00:23:29,360
workflows as application security

682
00:23:29,360 --> 00:23:31,760
engineers and high growth organizations

683
00:23:31,760 --> 00:23:32,960
we are currently working through the

684
00:23:32,960 --> 00:23:34,400
open source process to make the product

685
00:23:34,400 --> 00:23:36,159
security portal accessible to everyone

686
00:23:36,159 --> 00:23:38,080
outside of splunk and we hope to have a

687
00:23:38,080 --> 00:23:40,159
public release within the coming months

688
00:23:40,159 --> 00:23:41,679
in the meantime we hope that this demo

689
00:23:41,679 --> 00:23:43,120
will help you identify challenges in

690
00:23:43,120 --> 00:23:44,880
your daily operations that can be

691
00:23:44,880 --> 00:23:46,720
addressed by the product security portal

692
00:23:46,720 --> 00:23:48,799
let's jump right in let's put ourselves

693
00:23:48,799 --> 00:23:50,159
in the shoes of a member of the

694
00:23:50,159 --> 00:23:52,080
engineering team and walk through how we

695
00:23:52,080 --> 00:23:53,919
would use the product security portal to

696
00:23:53,919 --> 00:23:56,480
submit a security request along the way

697
00:23:56,480 --> 00:23:58,240
we'll observe how parts of the user

698
00:23:58,240 --> 00:24:00,000
flows alleviate work for the product

699
00:24:00,000 --> 00:24:02,240
security team and facilitate our own

700
00:24:02,240 --> 00:24:03,760
operations

701
00:24:03,760 --> 00:24:06,000
every security request processed begins

702
00:24:06,000 --> 00:24:07,760
with the subject of the review the

703
00:24:07,760 --> 00:24:09,760
product since products will be subjected

704
00:24:09,760 --> 00:24:11,679
to multiple security reviews throughout

705
00:24:11,679 --> 00:24:14,159
their lifetime users are required to

706
00:24:14,159 --> 00:24:16,000
onboard their products to the product

707
00:24:16,000 --> 00:24:18,480
security inventory via this page

708
00:24:18,480 --> 00:24:20,159
let's go ahead and fill out this form

709
00:24:20,159 --> 00:24:22,080
for a new product called blockchain

710
00:24:22,080 --> 00:24:24,400
verification service

711
00:24:24,400 --> 00:24:26,320
this initial step will allow us to

712
00:24:26,320 --> 00:24:27,919
gather some core context about the

713
00:24:27,919 --> 00:24:29,840
product this is the context that we

714
00:24:29,840 --> 00:24:31,760
expect to remain fairly consistent

715
00:24:31,760 --> 00:24:33,520
throughout various version releases of

716
00:24:33,520 --> 00:24:35,840
the product as you will see later some

717
00:24:35,840 --> 00:24:37,760
of the information provided here will

718
00:24:37,760 --> 00:24:40,080
allow us to define custom automated

719
00:24:40,080 --> 00:24:42,960
context-based workflow

720
00:24:42,960 --> 00:24:44,799
let's go ahead and onboard this new

721
00:24:44,799 --> 00:24:47,760
product now that our user has onboarded

722
00:24:47,760 --> 00:24:49,360
the new product they can begin

723
00:24:49,360 --> 00:24:51,679
submitting requests for various security

724
00:24:51,679 --> 00:24:54,080
services

725
00:24:54,080 --> 00:24:56,000
let's fill out the security assessment

726
00:24:56,000 --> 00:24:58,159
request for a new major version release

727
00:24:58,159 --> 00:25:00,640
of our newly created product we can do

728
00:25:00,640 --> 00:25:02,640
this by selecting the product from the

729
00:25:02,640 --> 00:25:04,880
choose a product name drop down

730
00:25:04,880 --> 00:25:07,039
from here you can see all onboarded

731
00:25:07,039 --> 00:25:08,799
products including the one we just

732
00:25:08,799 --> 00:25:10,159
onboarded

733
00:25:10,159 --> 00:25:11,919
you may also notice this list of

734
00:25:11,919 --> 00:25:13,600
security controls being displayed to the

735
00:25:13,600 --> 00:25:16,320
user in our case each control represents

736
00:25:16,320 --> 00:25:18,480
a task that will be created in our jira

737
00:25:18,480 --> 00:25:20,480
ticketing system and assigned to a

738
00:25:20,480 --> 00:25:22,320
product security engineer

739
00:25:22,320 --> 00:25:24,240
the list of controls will change as

740
00:25:24,240 --> 00:25:26,480
required given changes in the product

741
00:25:26,480 --> 00:25:27,679
context

742
00:25:27,679 --> 00:25:29,440
for example if we select a product that

743
00:25:29,440 --> 00:25:32,559
uses gitlab ci as its core ci system the

744
00:25:32,559 --> 00:25:34,559
list will change to reflect a different

745
00:25:34,559 --> 00:25:37,120
set of security actions unique to

746
00:25:37,120 --> 00:25:39,919
products built via gitlab ci

747
00:25:39,919 --> 00:25:42,000
for now let's continue with the security

748
00:25:42,000 --> 00:25:44,799
review request process here we arrive at

749
00:25:44,799 --> 00:25:46,480
another exciting feature of the product

750
00:25:46,480 --> 00:25:48,640
security portal the security impact

751
00:25:48,640 --> 00:25:50,880
questionnaire since threat modeling

752
00:25:50,880 --> 00:25:53,120
questions are often manually designed by

753
00:25:53,120 --> 00:25:54,880
an engineer based on the product's

754
00:25:54,880 --> 00:25:57,279
situational context the portal can

755
00:25:57,279 --> 00:25:59,440
automatically curate relevant and

756
00:25:59,440 --> 00:26:01,440
repeatable questions based on the

757
00:26:01,440 --> 00:26:03,679
product's onboarded metadata

758
00:26:03,679 --> 00:26:05,520
users will be able to answer the

759
00:26:05,520 --> 00:26:07,520
pre-questionnaire and the responses will

760
00:26:07,520 --> 00:26:10,159
be recorded in a threat modeling ticket

761
00:26:10,159 --> 00:26:12,159
we designed the form components to be

762
00:26:12,159 --> 00:26:14,240
dynamic and to showcase that in this

763
00:26:14,240 --> 00:26:16,320
demo we have a question that can be

764
00:26:16,320 --> 00:26:18,480
rendered if and only if the product we

765
00:26:18,480 --> 00:26:20,480
are referencing is a product typed

766
00:26:20,480 --> 00:26:23,360
shared library finally let's submit our

767
00:26:23,360 --> 00:26:24,960
security request

768
00:26:24,960 --> 00:26:26,799
great our security request has been

769
00:26:26,799 --> 00:26:28,240
created and we can view the

770
00:26:28,240 --> 00:26:30,480
corresponding jira tasks

771
00:26:30,480 --> 00:26:32,640
review status can be tracked via the

772
00:26:32,640 --> 00:26:34,720
product details page in the inventory

773
00:26:34,720 --> 00:26:36,559
explorer another cool feature we'll get

774
00:26:36,559 --> 00:26:38,960
to soon for now let's view the jira

775
00:26:38,960 --> 00:26:42,080
tickets created for our recent request

776
00:26:42,080 --> 00:26:44,159
here we are at the jira ticket tracking

777
00:26:44,159 --> 00:26:46,480
our security review request you will

778
00:26:46,480 --> 00:26:48,080
notice that it contains all of the

779
00:26:48,080 --> 00:26:49,760
product context that was submitted

780
00:26:49,760 --> 00:26:51,840
during the product onboarding process as

781
00:26:51,840 --> 00:26:53,600
well as context that was submitted

782
00:26:53,600 --> 00:26:56,159
during the security request process

783
00:26:56,159 --> 00:26:57,919
having all this information clearly

784
00:26:57,919 --> 00:26:59,840
visible on the ticket makes it easy for

785
00:26:59,840 --> 00:27:02,080
product security engineers to refer to a

786
00:27:02,080 --> 00:27:03,760
single source of truth when servicing

787
00:27:03,760 --> 00:27:06,320
the request let's now look at exactly

788
00:27:06,320 --> 00:27:08,240
how you might configure security control

789
00:27:08,240 --> 00:27:09,919
automation and decision making in the

790
00:27:09,919 --> 00:27:11,919
portal the product security portal's

791
00:27:11,919 --> 00:27:13,520
true power lies in the freedom it gives

792
00:27:13,520 --> 00:27:15,279
administrators to define custom security

793
00:27:15,279 --> 00:27:17,279
controls and workflows we will begin by

794
00:27:17,279 --> 00:27:18,720
demonstrating the functionality we have

795
00:27:18,720 --> 00:27:21,039
built for specifying context-based task

796
00:27:21,039 --> 00:27:22,720
creation on jira which is our ticketing

797
00:27:22,720 --> 00:27:24,960
system of choice

798
00:27:24,960 --> 00:27:26,799
here we have a table of all tasks we

799
00:27:26,799 --> 00:27:28,799
create in jira via our context-based

800
00:27:28,799 --> 00:27:31,039
automation let's define a new task that

801
00:27:31,039 --> 00:27:32,480
we would like to enable as a security

802
00:27:32,480 --> 00:27:33,840
control for our newly onboarded

803
00:27:33,840 --> 00:27:36,960
blockchain verification service

804
00:27:36,960 --> 00:27:38,480
the fields we enter here are used to

805
00:27:38,480 --> 00:27:40,880
satisfy the jira ticket api we provide

806
00:27:40,880 --> 00:27:42,799
information such as the ticket type

807
00:27:42,799 --> 00:27:45,440
title body in a jira-specific markdown

808
00:27:45,440 --> 00:27:47,440
language and component

809
00:27:47,440 --> 00:27:48,799
the interesting bit lies in the next

810
00:27:48,799 --> 00:27:50,320
couple of form inputs

811
00:27:50,320 --> 00:27:52,159
the assignment metadata input allows us

812
00:27:52,159 --> 00:27:53,679
to trigger the assignment of this jira

813
00:27:53,679 --> 00:27:55,760
task to a security review when the

814
00:27:55,760 --> 00:27:57,679
specified assignment conditions are met

815
00:27:57,679 --> 00:27:59,360
perhaps we only want this ticket created

816
00:27:59,360 --> 00:28:01,120
when the product's technical contact is

817
00:28:01,120 --> 00:28:03,279
alien splunk.com

818
00:28:03,279 --> 00:28:04,640
and maybe we only want the ticket

819
00:28:04,640 --> 00:28:06,320
created when the product's name is

820
00:28:06,320 --> 00:28:08,799
blockchain verification service

821
00:28:08,799 --> 00:28:10,640
the assignment metadata also supports

822
00:28:10,640 --> 00:28:12,960
negation logic maybe we want this ticket

823
00:28:12,960 --> 00:28:14,640
to be created for all products except

824
00:28:14,640 --> 00:28:16,399
for those using jenkins

825
00:28:16,399 --> 00:28:18,000
by using negation logic the

826
00:28:18,000 --> 00:28:19,919
specification is possible

827
00:28:19,919 --> 00:28:21,600
as you can see the granularity with

828
00:28:21,600 --> 00:28:23,279
which you can control the application of

829
00:28:23,279 --> 00:28:24,720
a security control is virtually

830
00:28:24,720 --> 00:28:26,960
limitless let's test this new security

831
00:28:26,960 --> 00:28:28,559
control and see if it gets successfully

832
00:28:28,559 --> 00:28:31,520
applied to a future security request

833
00:28:31,520 --> 00:28:32,720
we're back in the security request

834
00:28:32,720 --> 00:28:34,320
submission workflow and we're going to

835
00:28:34,320 --> 00:28:35,760
submit a request for the blockchain

836
00:28:35,760 --> 00:28:37,919
verification service

837
00:28:37,919 --> 00:28:39,360
looks like our new security control is

838
00:28:39,360 --> 00:28:41,279
successfully applied to this product

839
00:28:41,279 --> 00:28:43,760
recall that we specified the control

840
00:28:43,760 --> 00:28:45,440
product name equals blockchain

841
00:28:45,440 --> 00:28:48,080
verification service

842
00:28:48,080 --> 00:28:49,440
so if we were to choose a different

843
00:28:49,440 --> 00:28:52,799
product we'll see that control disappear

844
00:28:52,799 --> 00:28:54,240
let's just submit another request for

845
00:28:54,240 --> 00:28:57,039
the blockchain verification service

846
00:28:57,039 --> 00:28:58,320
all right we've submitted the security

847
00:28:58,320 --> 00:28:59,760
request for the blockchain verification

848
00:28:59,760 --> 00:29:01,679
service let's go to jira to see if our

849
00:29:01,679 --> 00:29:04,080
new task was created

850
00:29:04,080 --> 00:29:06,720
and there it is

851
00:29:07,440 --> 00:29:09,200
let's now dive into how we can specify

852
00:29:09,200 --> 00:29:11,039
custom security impact questionnaires to

853
00:29:11,039 --> 00:29:12,880
maintain finer grain control over the

854
00:29:12,880 --> 00:29:14,399
security controls that apply to a

855
00:29:14,399 --> 00:29:15,919
product release

856
00:29:15,919 --> 00:29:17,600
the product security portal provides an

857
00:29:17,600 --> 00:29:19,279
intuitive admin interface to make this

858
00:29:19,279 --> 00:29:20,559
possible

859
00:29:20,559 --> 00:29:22,480
this table lists all of the questions we

860
00:29:22,480 --> 00:29:24,000
want to make available to our security

861
00:29:24,000 --> 00:29:25,760
impact questionnaires as well as the

862
00:29:25,760 --> 00:29:27,279
controls that apply to the rendering of

863
00:29:27,279 --> 00:29:28,480
each question

864
00:29:28,480 --> 00:29:29,679
let's add a new question to our

865
00:29:29,679 --> 00:29:31,440
questionnaire

866
00:29:31,440 --> 00:29:32,880
all of the information provided here

867
00:29:32,880 --> 00:29:34,720
will be used to determine when and how

868
00:29:34,720 --> 00:29:36,159
the question should be rendered on the

869
00:29:36,159 --> 00:29:38,720
security impact questionnaire

870
00:29:38,720 --> 00:29:40,640
we begin with the question identifier

871
00:29:40,640 --> 00:29:42,559
this value is used to uniquely identify

872
00:29:42,559 --> 00:29:44,399
this question elsewhere in the form it

873
00:29:44,399 --> 00:29:45,679
is particularly important for

874
00:29:45,679 --> 00:29:47,520
conditionally rendering questions later

875
00:29:47,520 --> 00:29:49,120
in the form based on the response to

876
00:29:49,120 --> 00:29:51,440
this question

877
00:29:51,440 --> 00:29:54,960
next we will enter the question text

878
00:29:54,960 --> 00:29:56,399
we now decide whether we want the

879
00:29:56,399 --> 00:29:58,559
question to be rendered by default if we

880
00:29:58,559 --> 00:30:00,399
select true this question will be asked

881
00:30:00,399 --> 00:30:02,159
on all security impact questionnaires

882
00:30:02,159 --> 00:30:04,320
moving forward

883
00:30:04,320 --> 00:30:06,159
if we select false you will notice that

884
00:30:06,159 --> 00:30:07,760
we are given the option to specify the

885
00:30:07,760 --> 00:30:09,200
conditional arguments on which the

886
00:30:09,200 --> 00:30:10,799
question will be rendered

887
00:30:10,799 --> 00:30:12,799
in other words the question will not be

888
00:30:12,799 --> 00:30:14,080
rendered on a security impact

889
00:30:14,080 --> 00:30:15,440
questionnaire unless all of the

890
00:30:15,440 --> 00:30:17,919
conditionals are met

891
00:30:17,919 --> 00:30:19,600
this example dictates that the question

892
00:30:19,600 --> 00:30:21,600
will be rendered when the product type

893
00:30:21,600 --> 00:30:23,520
equals shared library

894
00:30:23,520 --> 00:30:25,360
you can specify as many conditionals as

895
00:30:25,360 --> 00:30:27,360
you wish

896
00:30:27,360 --> 00:30:29,039
this next field is used to determine

897
00:30:29,039 --> 00:30:30,480
whether the question should be rendered

898
00:30:30,480 --> 00:30:32,320
based on responses to other questions in

899
00:30:32,320 --> 00:30:33,600
the questionnaire

900
00:30:33,600 --> 00:30:35,039
we will make use of the previously

901
00:30:35,039 --> 00:30:36,799
mentioned question identifiers in this

902
00:30:36,799 --> 00:30:37,760
section

903
00:30:37,760 --> 00:30:39,120
for the sake of the example we

904
00:30:39,120 --> 00:30:40,960
previously defined a simple yes or no

905
00:30:40,960 --> 00:30:42,559
question to ask whether there were any

906
00:30:42,559 --> 00:30:44,000
changes made to the cryptographic

907
00:30:44,000 --> 00:30:46,640
protocols used in the product release

908
00:30:46,640 --> 00:30:48,240
this question is referenced by the

909
00:30:48,240 --> 00:30:51,039
question identifier or qid crypto

910
00:30:51,039 --> 00:30:54,000
underscore changes

911
00:30:54,000 --> 00:30:55,600
let's say we want our current question

912
00:30:55,600 --> 00:30:57,600
to be rendered when the user indicates

913
00:30:57,600 --> 00:30:58,880
that changes were made to the

914
00:30:58,880 --> 00:31:01,279
cryptographic protocols used we can do

915
00:31:01,279 --> 00:31:02,880
this by first specifying the question

916
00:31:02,880 --> 00:31:04,559
identifier that maps to the conditional

917
00:31:04,559 --> 00:31:05,840
question

918
00:31:05,840 --> 00:31:07,679
we can then specify the response to this

919
00:31:07,679 --> 00:31:09,440
question upon which we should render the

920
00:31:09,440 --> 00:31:10,640
current question

921
00:31:10,640 --> 00:31:12,320
moving on we can select the question

922
00:31:12,320 --> 00:31:13,519
input format such as whether the

923
00:31:13,519 --> 00:31:14,799
response to the question should be

924
00:31:14,799 --> 00:31:16,720
specified via drop down boolean toggle

925
00:31:16,720 --> 00:31:19,679
multi-select or radio buttons

926
00:31:19,679 --> 00:31:21,120
finally we arrive at the security

927
00:31:21,120 --> 00:31:23,200
scoring decisions section this is where

928
00:31:23,200 --> 00:31:24,960
we assign a numerical security impact

929
00:31:24,960 --> 00:31:26,399
score to the question based on the

930
00:31:26,399 --> 00:31:28,480
response received we can now submit our

931
00:31:28,480 --> 00:31:29,919
question and see it get applied to the

932
00:31:29,919 --> 00:31:32,559
security impact questionnaire

933
00:31:32,559 --> 00:31:34,159
here we are back in the security impact

934
00:31:34,159 --> 00:31:35,279
questionnaire for our blockchain

935
00:31:35,279 --> 00:31:37,360
verification service you'll notice that

936
00:31:37,360 --> 00:31:38,559
you don't see our newly onboarded

937
00:31:38,559 --> 00:31:40,399
question yet you might recall that we

938
00:31:40,399 --> 00:31:42,000
only wanted to render the question if

939
00:31:42,000 --> 00:31:43,760
the user indicated that any changes were

940
00:31:43,760 --> 00:31:45,200
made to cryptographic approaches in

941
00:31:45,200 --> 00:31:46,799
between releases

942
00:31:46,799 --> 00:31:48,000
let's go ahead and indicate that there

943
00:31:48,000 --> 00:31:50,000
were cryptographic changes

944
00:31:50,000 --> 00:31:52,080
and now our question has been rendered

945
00:31:52,080 --> 00:31:53,679
you're always free to edit existing

946
00:31:53,679 --> 00:31:55,120
questions and their rendering behavior

947
00:31:55,120 --> 00:31:56,799
as your team's decision-making workflows

948
00:31:56,799 --> 00:31:59,120
evolve

949
00:31:59,120 --> 00:32:00,640
let's take a look at how a product

950
00:32:00,640 --> 00:32:02,640
security engineer can use the product

951
00:32:02,640 --> 00:32:04,440
security portal to explore

952
00:32:04,440 --> 00:32:06,640
organizational assets

953
00:32:06,640 --> 00:32:08,720
here users are able to see all of the

954
00:32:08,720 --> 00:32:10,159
product inventory that has been

955
00:32:10,159 --> 00:32:12,640
onboarded and gathered via everyday use

956
00:32:12,640 --> 00:32:14,640
of the portal as well as the various

957
00:32:14,640 --> 00:32:16,640
security requests that were associated

958
00:32:16,640 --> 00:32:19,360
with each product at a glance the user

959
00:32:19,360 --> 00:32:21,679
will be able to filter tables entries by

960
00:32:21,679 --> 00:32:24,159
product area or any other product

961
00:32:24,159 --> 00:32:26,559
context key that was onboarded we can

962
00:32:26,559 --> 00:32:28,799
also download a csv of our search by

963
00:32:28,799 --> 00:32:31,760
clicking on the download csv button

964
00:32:31,760 --> 00:32:33,200
let's click on one of our products that

965
00:32:33,200 --> 00:32:35,440
was onboarded

966
00:32:35,440 --> 00:32:37,760
at a glance we're able to see specific

967
00:32:37,760 --> 00:32:39,679
metadata that relates to this product

968
00:32:39,679 --> 00:32:41,679
such as ticketing system metadata as

969
00:32:41,679 --> 00:32:43,200
well as information that helps us

970
00:32:43,200 --> 00:32:44,880
determine stakeholders and technical

971
00:32:44,880 --> 00:32:46,080
contacts

972
00:32:46,080 --> 00:32:48,320
the information below product details

973
00:32:48,320 --> 00:32:50,000
onboarded will be the consistent

974
00:32:50,000 --> 00:32:51,679
metadata that is carried over from

975
00:32:51,679 --> 00:32:53,519
request to request

976
00:32:53,519 --> 00:32:55,200
in addition to viewing core product

977
00:32:55,200 --> 00:32:57,600
details we can view version specific

978
00:32:57,600 --> 00:32:59,440
information that has been tracked over

979
00:32:59,440 --> 00:33:01,039
the course of multiple security

980
00:33:01,039 --> 00:33:02,799
assessment requests through the product

981
00:33:02,799 --> 00:33:04,240
security portal

982
00:33:04,240 --> 00:33:05,679
you can see that as we go through the

983
00:33:05,679 --> 00:33:07,760
different versions of the product we can

984
00:33:07,760 --> 00:33:09,519
see in real time the changes in git

985
00:33:09,519 --> 00:33:11,360
repositories as well as artifact

986
00:33:11,360 --> 00:33:12,480
information

987
00:33:12,480 --> 00:33:14,559
this helps prod sec engineers track

988
00:33:14,559 --> 00:33:16,480
specific changes from version to version

989
00:33:16,480 --> 00:33:18,640
as they conduct the security assessments

990
00:33:18,640 --> 00:33:20,320
in addition it provides an easy to

991
00:33:20,320 --> 00:33:22,320
navigate historical inventory of all

992
00:33:22,320 --> 00:33:24,480
products serviced by our team

993
00:33:24,480 --> 00:33:26,559
just as we could update core product

994
00:33:26,559 --> 00:33:28,480
context we are also able to edit the

995
00:33:28,480 --> 00:33:30,880
metadata in context for existing product

996
00:33:30,880 --> 00:33:32,559
versions in our inventory as the

997
00:33:32,559 --> 00:33:34,480
security team's scope increases new

998
00:33:34,480 --> 00:33:36,240
security tools may have to be onboarded

999
00:33:36,240 --> 00:33:37,919
into existing workflows at a moment's

1000
00:33:37,919 --> 00:33:39,919
notice or some tools may become suddenly

1001
00:33:39,919 --> 00:33:42,240
deprecated our team has found it useful

1002
00:33:42,240 --> 00:33:43,840
to use the product security portal as a

1003
00:33:43,840 --> 00:33:45,120
location to maintain tooling

1004
00:33:45,120 --> 00:33:46,960
documentation so that members of the

1005
00:33:46,960 --> 00:33:48,399
engineering team do not have to split

1006
00:33:48,399 --> 00:33:50,240
their security education and servicing

1007
00:33:50,240 --> 00:33:52,720
across multiple knowledge platforms

1008
00:33:52,720 --> 00:33:54,720
as a result the product security portal

1009
00:33:54,720 --> 00:33:56,399
defines an extensible schema pattern

1010
00:33:56,399 --> 00:33:58,799
that allows protect engineers to add or

1011
00:33:58,799 --> 00:34:00,720
update documentation for their tooling

1012
00:34:00,720 --> 00:34:02,480
of choice and markup

1013
00:34:02,480 --> 00:34:03,679
now getting all your tooling

1014
00:34:03,679 --> 00:34:05,440
documentation in one location is as

1015
00:34:05,440 --> 00:34:07,360
simple as writing a readme

1016
00:34:07,360 --> 00:34:09,280
you may recall earlier in the demo we

1017
00:34:09,280 --> 00:34:10,399
mentioned that you can extend the

1018
00:34:10,399 --> 00:34:12,000
portal's workflow functionalities by

1019
00:34:12,000 --> 00:34:13,918
adding new yaml files

1020
00:34:13,918 --> 00:34:15,760
to statically configure custom input

1021
00:34:15,760 --> 00:34:16,800
forms

1022
00:34:16,800 --> 00:34:18,399
here is an example of a yaml file that

1023
00:34:18,399 --> 00:34:20,079
is responsible for driving the rendering

1024
00:34:20,079 --> 00:34:21,679
of our pen test form

1025
00:34:21,679 --> 00:34:23,119
you can see some of the higher order

1026
00:34:23,119 --> 00:34:24,560
keys that are used for the business

1027
00:34:24,560 --> 00:34:27,599
logic of the form and automation as well

1028
00:34:27,599 --> 00:34:29,280
as definitions of front-end components

1029
00:34:29,280 --> 00:34:30,960
that specify how these form elements are

1030
00:34:30,960 --> 00:34:32,239
rendered

1031
00:34:32,239 --> 00:34:33,760
at the moment our portal does most of

1032
00:34:33,760 --> 00:34:35,040
the heavy lifting with regards to

1033
00:34:35,040 --> 00:34:37,359
rendering custom forms so devs can focus

1034
00:34:37,359 --> 00:34:38,960
solely on perfecting the business logic

1035
00:34:38,960 --> 00:34:41,119
if their security flows on the back end

1036
00:34:41,119 --> 00:34:42,159
we are currently working on

1037
00:34:42,159 --> 00:34:43,918
optimizations to this flow definition

1038
00:34:43,918 --> 00:34:46,000
process so that devs will also be able

1039
00:34:46,000 --> 00:34:47,760
to easily add or modify back-end

1040
00:34:47,760 --> 00:34:49,760
business logic without needing to write

1041
00:34:49,760 --> 00:34:51,599
a lot of code these changes will be

1042
00:34:51,599 --> 00:34:52,960
ready by the time we open source the

1043
00:34:52,960 --> 00:34:54,639
product security portal making the

1044
00:34:54,639 --> 00:34:56,239
end-to-end definition and release of

1045
00:34:56,239 --> 00:34:58,240
custom security workflows as painless

1046
00:34:58,240 --> 00:35:01,959
and streamlined as possible

1047
00:35:06,160 --> 00:35:08,240
all right welcome

1048
00:35:08,240 --> 00:35:10,800
great well um we hope that demo was

1049
00:35:10,800 --> 00:35:12,400
informative and exciting for you guys

1050
00:35:12,400 --> 00:35:13,680
and hopefully you were able to advise

1051
00:35:13,680 --> 00:35:16,000
some ways in which our tool could help

1052
00:35:16,000 --> 00:35:18,320
alleviate some of these stresses or your

1053
00:35:18,320 --> 00:35:19,920
own product security teams face at high

1054
00:35:19,920 --> 00:35:22,000
growth organizations um but just to

1055
00:35:22,000 --> 00:35:24,640
summarize we want to drive home a few uh

1056
00:35:24,640 --> 00:35:26,960
pieces of impact some basically some

1057
00:35:26,960 --> 00:35:28,400
things that we think our portal does

1058
00:35:28,400 --> 00:35:30,320
pretty well

1059
00:35:30,320 --> 00:35:32,960
so the first of that is that we've

1060
00:35:32,960 --> 00:35:35,119
created a tool that captures the context

1061
00:35:35,119 --> 00:35:37,520
of each app and product that requires a

1062
00:35:37,520 --> 00:35:39,040
security assessment and we do not

1063
00:35:39,040 --> 00:35:41,119
proceed with security assessments until

1064
00:35:41,119 --> 00:35:43,200
that context is captured

1065
00:35:43,200 --> 00:35:46,160
so we've we've essentially defined a way

1066
00:35:46,160 --> 00:35:48,000
for for product security engineers to

1067
00:35:48,000 --> 00:35:49,760
specify their own context gathering

1068
00:35:49,760 --> 00:35:53,200
forms uh via static ammo configurations

1069
00:35:53,200 --> 00:35:54,320
and

1070
00:35:54,320 --> 00:35:56,240
now you you can proceed with security

1071
00:35:56,240 --> 00:35:58,079
assessments knowing that all of the

1072
00:35:58,079 --> 00:35:59,520
information that you are given is

1073
00:35:59,520 --> 00:36:02,160
information that you personally

1074
00:36:02,160 --> 00:36:03,680
made sure

1075
00:36:03,680 --> 00:36:05,920
was provided in a you know sanitized

1076
00:36:05,920 --> 00:36:07,440
fashion you can know that you're

1077
00:36:07,440 --> 00:36:09,040
gathering the exact context you need for

1078
00:36:09,040 --> 00:36:11,680
a particular product and you can move

1079
00:36:11,680 --> 00:36:12,960
forward with your assessment knowing

1080
00:36:12,960 --> 00:36:16,000
that um it's the correct context and not

1081
00:36:16,000 --> 00:36:18,240
uh and not in correct context for some

1082
00:36:18,240 --> 00:36:20,160
other product or if

1083
00:36:20,160 --> 00:36:21,200
you know that you're not missing

1084
00:36:21,200 --> 00:36:22,880
information essentially

1085
00:36:22,880 --> 00:36:25,119
secondly we've created a tool that

1086
00:36:25,119 --> 00:36:26,640
determines security requirements based

1087
00:36:26,640 --> 00:36:28,240
on product and release change context

1088
00:36:28,240 --> 00:36:29,760
for admin request

1089
00:36:29,760 --> 00:36:31,680
so this is really i think the one of the

1090
00:36:31,680 --> 00:36:33,520
more exciting things we do

1091
00:36:33,520 --> 00:36:35,440
because our tool has basically enabled

1092
00:36:35,440 --> 00:36:37,359
that hybrid security

1093
00:36:37,359 --> 00:36:39,200
engagement model

1094
00:36:39,200 --> 00:36:42,000
where we are allowing users to define

1095
00:36:42,000 --> 00:36:44,320
actions to take given particular product

1096
00:36:44,320 --> 00:36:46,960
context and selectively apply automation

1097
00:36:46,960 --> 00:36:48,079
questionnaires that determine the

1098
00:36:48,079 --> 00:36:49,520
security impact of the change to a

1099
00:36:49,520 --> 00:36:51,680
particular product based on context

1100
00:36:51,680 --> 00:36:52,640
changes

1101
00:36:52,640 --> 00:36:56,480
and uh once that workflow is automated

1102
00:36:56,480 --> 00:36:58,720
it's it's just a matter of putting the

1103
00:36:58,720 --> 00:37:00,320
determined predetermined tasks

1104
00:37:00,320 --> 00:37:01,359
essentially in front of a product

1105
00:37:01,359 --> 00:37:03,119
security engineer to carry out the

1106
00:37:03,119 --> 00:37:05,280
necessary work and you can use that

1107
00:37:05,280 --> 00:37:06,960
product context to also determine

1108
00:37:06,960 --> 00:37:08,800
applicable regulatory requirements that

1109
00:37:08,800 --> 00:37:12,240
have been set out by your organization

1110
00:37:12,240 --> 00:37:15,359
we've also created a tool that

1111
00:37:15,359 --> 00:37:17,599
builds a detailed product inventory via

1112
00:37:17,599 --> 00:37:20,079
mandatory context capture

1113
00:37:20,079 --> 00:37:22,400
so we're using this product inventory to

1114
00:37:22,400 --> 00:37:24,079
report on risk and control maturity the

1115
00:37:24,079 --> 00:37:26,720
leadership um at the moment at splunk

1116
00:37:26,720 --> 00:37:27,839
but you know there's so much more you

1117
00:37:27,839 --> 00:37:29,920
can do with product inventory um we've

1118
00:37:29,920 --> 00:37:31,520
essentially built a way to capture an

1119
00:37:31,520 --> 00:37:33,040
evolving history of product context

1120
00:37:33,040 --> 00:37:35,760
across assessments right because every

1121
00:37:35,760 --> 00:37:37,440
um every

1122
00:37:37,440 --> 00:37:39,599
incoming product request

1123
00:37:39,599 --> 00:37:41,599
will always have a change to its product

1124
00:37:41,599 --> 00:37:43,119
context as that product life cycle

1125
00:37:43,119 --> 00:37:45,680
evolves and we are logging all of those

1126
00:37:45,680 --> 00:37:48,079
changes via our product inventory

1127
00:37:48,079 --> 00:37:50,160
tracker and we can use this history to

1128
00:37:50,160 --> 00:37:52,240
drive insights and accountability

1129
00:37:52,240 --> 00:37:54,560
so we can pinpoint steps in a product's

1130
00:37:54,560 --> 00:37:56,000
timeline where certain key security

1131
00:37:56,000 --> 00:37:57,920
events or decisions occurred because we

1132
00:37:57,920 --> 00:37:59,839
know exactly what security controls

1133
00:37:59,839 --> 00:38:01,680
applied to a particular product at a

1134
00:38:01,680 --> 00:38:03,040
particular time

1135
00:38:03,040 --> 00:38:04,720
based on our automation

1136
00:38:04,720 --> 00:38:06,960
and we've enabled insightful exploration

1137
00:38:06,960 --> 00:38:08,560
of you know this thorough product and

1138
00:38:08,560 --> 00:38:10,960
security assessment inventory via the

1139
00:38:10,960 --> 00:38:13,680
awesome product inventory explorer that

1140
00:38:13,680 --> 00:38:14,960
we built

1141
00:38:14,960 --> 00:38:16,560
so you know we think that's a really

1142
00:38:16,560 --> 00:38:18,800
handy feature of the portal

1143
00:38:18,800 --> 00:38:21,200
and then finally we have created a tool

1144
00:38:21,200 --> 00:38:22,800
that enables

1145
00:38:22,800 --> 00:38:25,920
total configuration of context gathering

1146
00:38:25,920 --> 00:38:27,119
so

1147
00:38:27,119 --> 00:38:28,720
this is honestly my favorite part of the

1148
00:38:28,720 --> 00:38:30,560
portal is that we've we've made it

1149
00:38:30,560 --> 00:38:31,839
possible for

1150
00:38:31,839 --> 00:38:33,280
any product security engineer to

1151
00:38:33,280 --> 00:38:34,800
statically define questions and input

1152
00:38:34,800 --> 00:38:36,960
controls to ask engineering teams to

1153
00:38:36,960 --> 00:38:38,720
gather the context they need to

1154
00:38:38,720 --> 00:38:41,119
effectively service you know the product

1155
00:38:41,119 --> 00:38:43,119
and again you do that

1156
00:38:43,119 --> 00:38:45,280
with the simple yaml files we've built a

1157
00:38:45,280 --> 00:38:47,200
very robust front-end framework that

1158
00:38:47,200 --> 00:38:49,839
takes these yaml files um

1159
00:38:49,839 --> 00:38:51,920
static configurations and renders out

1160
00:38:51,920 --> 00:38:53,359
the form

1161
00:38:53,359 --> 00:38:55,280
that also performs error checking based

1162
00:38:55,280 --> 00:38:57,440
on regular expressions

1163
00:38:57,440 --> 00:38:59,440
that you would provide so you can get

1164
00:38:59,440 --> 00:39:02,079
immediately actionable input

1165
00:39:02,079 --> 00:39:03,520
upon request submission so you don't

1166
00:39:03,520 --> 00:39:05,200
have to worry about interfacing back and

1167
00:39:05,200 --> 00:39:06,079
forth

1168
00:39:06,079 --> 00:39:08,400
uh between yourself and engineering

1169
00:39:08,400 --> 00:39:10,320
teams you can now just have a request be

1170
00:39:10,320 --> 00:39:11,839
submitted and immediately get to working

1171
00:39:11,839 --> 00:39:13,760
on it and finally we've enabled

1172
00:39:13,760 --> 00:39:15,280
context-based security impact decision

1173
00:39:15,280 --> 00:39:17,520
making and task automation controls so

1174
00:39:17,520 --> 00:39:20,000
you saw how we use it the product

1175
00:39:20,000 --> 00:39:22,400
security portal to automate jira task

1176
00:39:22,400 --> 00:39:23,920
creation and then assign those jira

1177
00:39:23,920 --> 00:39:26,000
tasks to product security engine

1178
00:39:26,000 --> 00:39:28,800
engineers on our team um but you know

1179
00:39:28,800 --> 00:39:30,240
there's you can you can do so much more

1180
00:39:30,240 --> 00:39:32,000
with it right you can also define uh

1181
00:39:32,000 --> 00:39:34,480
automation you could use it to define

1182
00:39:34,480 --> 00:39:36,320
questionnaires as we have also done

1183
00:39:36,320 --> 00:39:38,560
where you can now take product context

1184
00:39:38,560 --> 00:39:40,880
as well as questionnaire response

1185
00:39:40,880 --> 00:39:43,680
context and use that to render out

1186
00:39:43,680 --> 00:39:45,520
future questions to ask to gather more

1187
00:39:45,520 --> 00:39:47,119
context so it's this crazy self-feeding

1188
00:39:47,119 --> 00:39:48,960
loop that we've built but it's all very

1189
00:39:48,960 --> 00:39:52,320
configurable within the admin workflow

1190
00:39:52,320 --> 00:39:53,920
where all you need to do is define

1191
00:39:53,920 --> 00:39:55,520
conditionals based on project context

1192
00:39:55,520 --> 00:39:57,440
that you want to satisfy and your

1193
00:39:57,440 --> 00:39:59,280
automation will go ahead and take care

1194
00:39:59,280 --> 00:40:00,960
of it so if you can

1195
00:40:00,960 --> 00:40:02,640
think of a way to automate it you can

1196
00:40:02,640 --> 00:40:04,240
you can build it through through this

1197
00:40:04,240 --> 00:40:05,680
portal it's all customizable to your

1198
00:40:05,680 --> 00:40:06,880
heart's content

1199
00:40:06,880 --> 00:40:08,079
you know so keeping all these great

1200
00:40:08,079 --> 00:40:09,440
features in mind

1201
00:40:09,440 --> 00:40:10,640
you know we're really happy with what

1202
00:40:10,640 --> 00:40:11,839
we've built but there's still some

1203
00:40:11,839 --> 00:40:13,599
things that we want to uh

1204
00:40:13,599 --> 00:40:16,640
to push um and we want to get out there

1205
00:40:16,640 --> 00:40:18,079
so these are the things we have on our

1206
00:40:18,079 --> 00:40:18,880
road

1207
00:40:18,880 --> 00:40:20,079
for the future

1208
00:40:20,079 --> 00:40:21,839
they most certainly won't be ready by

1209
00:40:21,839 --> 00:40:23,839
the time we open source them we open

1210
00:40:23,839 --> 00:40:25,040
sources tool but we think they're

1211
00:40:25,040 --> 00:40:26,720
they're cool things that can still

1212
00:40:26,720 --> 00:40:28,720
really enrich the experience of the

1213
00:40:28,720 --> 00:40:31,040
product security portal so andrew will

1214
00:40:31,040 --> 00:40:32,640
give you a little bit of insight to the

1215
00:40:32,640 --> 00:40:34,960
road that we have planned out

1216
00:40:34,960 --> 00:40:38,319
cool thanks ng so at a technical level

1217
00:40:38,319 --> 00:40:40,000
we designed the product security portal

1218
00:40:40,000 --> 00:40:42,400
apis to be very modular and generic and

1219
00:40:42,400 --> 00:40:44,240
since this tool is deployed in an

1220
00:40:44,240 --> 00:40:46,160
environment for us that touches on many

1221
00:40:46,160 --> 00:40:48,400
parts of the infrastructure our devs use

1222
00:40:48,400 --> 00:40:50,560
we actually have many opportunities to

1223
00:40:50,560 --> 00:40:52,400
increase the efficiency for delivering

1224
00:40:52,400 --> 00:40:54,079
security assurance and risk reporting to

1225
00:40:54,079 --> 00:40:56,160
the organization so the first of such

1226
00:40:56,160 --> 00:40:58,560
roadmap item is to create automation

1227
00:40:58,560 --> 00:41:01,280
around auto updating our product context

1228
00:41:01,280 --> 00:41:03,359
that we gather as much as possible so

1229
00:41:03,359 --> 00:41:05,839
this would leverage the use of say cicd

1230
00:41:05,839 --> 00:41:08,560
apis infrastructure like kubernetes apis

1231
00:41:08,560 --> 00:41:11,839
and aws apis or gcp apis if we detect

1232
00:41:11,839 --> 00:41:13,920
them during onboarding then if you

1233
00:41:13,920 --> 00:41:16,160
recall in the previous few slides in

1234
00:41:16,160 --> 00:41:18,319
addition to providing a way to convert

1235
00:41:18,319 --> 00:41:20,000
unknown risk to known risk we want to

1236
00:41:20,000 --> 00:41:21,440
optimize the risk reporting and

1237
00:41:21,440 --> 00:41:23,599
management to convert the known risk to

1238
00:41:23,599 --> 00:41:25,200
address risk and to do this another

1239
00:41:25,200 --> 00:41:27,040
roadmap item on our radar would be to

1240
00:41:27,040 --> 00:41:28,000
actually leverage the use of

1241
00:41:28,000 --> 00:41:29,680
dashboarding to build the risk reporting

1242
00:41:29,680 --> 00:41:33,799
directly onto the portal itself

1243
00:41:36,480 --> 00:41:38,240
awesome thank you guys

1244
00:41:38,240 --> 00:41:39,200
so

1245
00:41:39,200 --> 00:41:40,720
we hope that throughout this

1246
00:41:40,720 --> 00:41:43,280
presentation uh looking at all the

1247
00:41:43,280 --> 00:41:46,240
examples and the demo uh you have

1248
00:41:46,240 --> 00:41:48,400
conclude come to the same conclusion

1249
00:41:48,400 --> 00:41:49,760
like we did

1250
00:41:49,760 --> 00:41:52,800
um which is a hybrid engagement model

1251
00:41:52,800 --> 00:41:55,119
where we are gathering the context of a

1252
00:41:55,119 --> 00:41:56,560
product and

1253
00:41:56,560 --> 00:41:58,319
determining the kind of security

1254
00:41:58,319 --> 00:42:00,400
assessments that uh need to be done

1255
00:42:00,400 --> 00:42:02,880
based on the context helps both

1256
00:42:02,880 --> 00:42:05,520
developers and product security teams be

1257
00:42:05,520 --> 00:42:07,520
very effective because

1258
00:42:07,520 --> 00:42:10,079
it takes out the mundane tasks of

1259
00:42:10,079 --> 00:42:12,079
gathering context and determining what

1260
00:42:12,079 --> 00:42:14,400
process applies to what product

1261
00:42:14,400 --> 00:42:15,119
and

1262
00:42:15,119 --> 00:42:17,200
lets uh developers actually focus on

1263
00:42:17,200 --> 00:42:18,720
product development and addressing

1264
00:42:18,720 --> 00:42:20,640
security issues and not gathering

1265
00:42:20,640 --> 00:42:22,240
context and same for product security

1266
00:42:22,240 --> 00:42:24,160
people like it really helps them focus

1267
00:42:24,160 --> 00:42:24,960
on

1268
00:42:24,960 --> 00:42:27,280
the throttling and the high impact

1269
00:42:27,280 --> 00:42:29,520
security assessment tasks like like look

1270
00:42:29,520 --> 00:42:32,000
at the output of some some tooling

1271
00:42:32,000 --> 00:42:34,800
validating it or doing pen tests

1272
00:42:34,800 --> 00:42:37,280
so that's all we have happy to answer

1273
00:42:37,280 --> 00:42:38,880
any questions at this point thank you

1274
00:42:38,880 --> 00:42:40,720
very much for coming in and attending

1275
00:42:40,720 --> 00:42:43,118
our talk

