1
00:00:01,420 --> 00:00:05,120
[Music]

2
00:00:05,120 --> 00:00:06,799
uh hello everyone my name is moshet

3
00:00:06,799 --> 00:00:09,200
sioni and i'm here to talk about today

4
00:00:09,200 --> 00:00:11,200
to talk about um

5
00:00:11,200 --> 00:00:13,040
application security at scale how do we

6
00:00:13,040 --> 00:00:14,960
do that and what what is contextual

7
00:00:14,960 --> 00:00:17,440
application security i'm bringing up a

8
00:00:17,440 --> 00:00:19,439
presentation

9
00:00:19,439 --> 00:00:21,279
by the way excuse me if something is a

10
00:00:21,279 --> 00:00:23,439
bit quirky this is the first time i'm

11
00:00:23,439 --> 00:00:25,199
doing oasp over

12
00:00:25,199 --> 00:00:27,119
virtual so this is pretty exciting for

13
00:00:27,119 --> 00:00:28,240
me as well

14
00:00:28,240 --> 00:00:30,160
so thank you for joining as i said we

15
00:00:30,160 --> 00:00:31,599
are talking today about normalizing

16
00:00:31,599 --> 00:00:33,360
abstract issues for contextual

17
00:00:33,360 --> 00:00:35,280
risk-based prioritization and scale and

18
00:00:35,280 --> 00:00:38,079
this very long i would admit very very

19
00:00:38,079 --> 00:00:41,520
long um headline is all supposed to say

20
00:00:41,520 --> 00:00:43,280
that what we have today as an upset

21
00:00:43,280 --> 00:00:45,600
issues we don't really do that

22
00:00:45,600 --> 00:00:46,559
um

23
00:00:46,559 --> 00:00:48,559
along the lines of context and i'm

24
00:00:48,559 --> 00:00:50,320
trying to prove the point throughout the

25
00:00:50,320 --> 00:00:52,000
uh the presentation

26
00:00:52,000 --> 00:00:53,840
so my name is moshe sioni i've been

27
00:00:53,840 --> 00:00:55,600
around for about 20 plus years in the

28
00:00:55,600 --> 00:00:58,079
infosec communities especially in israel

29
00:00:58,079 --> 00:00:59,520
in the u.s

30
00:00:59,520 --> 00:01:01,920
in different positions and different uh

31
00:01:01,920 --> 00:01:04,159
passions but all together security

32
00:01:04,159 --> 00:01:06,240
research of course this is the sole

33
00:01:06,240 --> 00:01:08,080
purpose for our being

34
00:01:08,080 --> 00:01:10,720
um mainly considered myself as a pen pen

35
00:01:10,720 --> 00:01:12,560
tester and back bounty hunter and for

36
00:01:12,560 --> 00:01:15,200
the past nine years i've been uh

37
00:01:15,200 --> 00:01:17,360
devising more detection and provincial

38
00:01:17,360 --> 00:01:19,840
algorithms on uh on different uh scales

39
00:01:19,840 --> 00:01:22,479
uh last on my last past life was in

40
00:01:22,479 --> 00:01:24,240
akamai i was director of threat research

41
00:01:24,240 --> 00:01:27,040
there uh designing and controlling all

42
00:01:27,040 --> 00:01:29,920
of the cloud security solutions of

43
00:01:29,920 --> 00:01:32,000
akamai and now in appiro

44
00:01:32,000 --> 00:01:34,560
we we are doing this we are securing the

45
00:01:34,560 --> 00:01:36,000
life cycle of

46
00:01:36,000 --> 00:01:37,920
of the development and i will talk about

47
00:01:37,920 --> 00:01:39,280
that and will share some of our

48
00:01:39,280 --> 00:01:41,360
knowledge here uh by that and of course

49
00:01:41,360 --> 00:01:43,759
i'm not um there's some reason for that

50
00:01:43,759 --> 00:01:45,200
is to share with the community and to

51
00:01:45,200 --> 00:01:48,079
see how can we change uh things that are

52
00:01:48,079 --> 00:01:48,880
still

53
00:01:48,880 --> 00:01:51,280
very very slow and to try to bring it up

54
00:01:51,280 --> 00:01:54,880
to um enterprise scale

55
00:01:54,880 --> 00:01:57,840
so starting with why are we actually

56
00:01:57,840 --> 00:02:00,079
discussing that and why is so important

57
00:02:00,079 --> 00:02:02,240
so first of all what we see in devops

58
00:02:02,240 --> 00:02:03,840
for the past few years and maybe more

59
00:02:03,840 --> 00:02:06,320
than that actually is that more and more

60
00:02:06,320 --> 00:02:09,119
automation is coming to place and devops

61
00:02:09,119 --> 00:02:10,720
plays a key role

62
00:02:10,720 --> 00:02:13,120
into how fast can we release our

63
00:02:13,120 --> 00:02:15,280
applications nowadays traditional

64
00:02:15,280 --> 00:02:16,959
security says that

65
00:02:16,959 --> 00:02:20,000
it's a very manual very process heavy

66
00:02:20,000 --> 00:02:22,480
and by that it really it really doesn't

67
00:02:22,480 --> 00:02:24,400
combabulate with the

68
00:02:24,400 --> 00:02:27,360
devops uh philosophy and we try always

69
00:02:27,360 --> 00:02:29,680
we always try in the community to bridge

70
00:02:29,680 --> 00:02:32,480
those gaps together uh and by that we

71
00:02:32,480 --> 00:02:34,720
also look at it as a more modern

72
00:02:34,720 --> 00:02:37,519
approach versus traditional approach

73
00:02:37,519 --> 00:02:39,200
the current approaches that we see more

74
00:02:39,200 --> 00:02:41,040
and more in the on the arena of

75
00:02:41,040 --> 00:02:43,519
application security life cycle is that

76
00:02:43,519 --> 00:02:45,360
we see more and more secure design if

77
00:02:45,360 --> 00:02:47,599
it's more of a threat modeling standards

78
00:02:47,599 --> 00:02:49,360
and the way we are doing secure code

79
00:02:49,360 --> 00:02:52,239
practices uh of course all of that is is

80
00:02:52,239 --> 00:02:53,920
comes together to

81
00:02:53,920 --> 00:02:56,080
what knowledge we have in the community

82
00:02:56,080 --> 00:02:59,280
and how do we exercise this knowledge um

83
00:02:59,280 --> 00:03:01,440
especially when we are looking at what

84
00:03:01,440 --> 00:03:03,200
what verification mechanisms we have

85
00:03:03,200 --> 00:03:05,440
developed over the years and

86
00:03:05,440 --> 00:03:07,920
what what kind of what are we as

87
00:03:07,920 --> 00:03:10,080
enterprises are using nowadays so what

88
00:03:10,080 --> 00:03:11,760
we always see

89
00:03:11,760 --> 00:03:14,000
is that sca of course taking place

90
00:03:14,000 --> 00:03:15,680
composition of those software that we

91
00:03:15,680 --> 00:03:17,599
are using and packages to see what kind

92
00:03:17,599 --> 00:03:19,360
of dependencies what are the those

93
00:03:19,360 --> 00:03:20,959
dependencies capabilities

94
00:03:20,959 --> 00:03:22,800
vulnerabilities licenses

95
00:03:22,800 --> 00:03:25,840
if we locate it is sas test and yes

96
00:03:25,840 --> 00:03:28,400
application security testing mostly what

97
00:03:28,400 --> 00:03:30,400
we see is of course many vulnerabilities

98
00:03:30,400 --> 00:03:32,720
being found

99
00:03:32,720 --> 00:03:34,239
a load of vulnerabilities that we need

100
00:03:34,239 --> 00:03:37,120
to tackle by that and this is this is

101
00:03:37,120 --> 00:03:40,080
the minimum on top of that we always

102
00:03:40,080 --> 00:03:43,120
we also trying to uh starting to see uh

103
00:03:43,120 --> 00:03:44,720
test orchestration which is very very

104
00:03:44,720 --> 00:03:46,480
good we see more and more orchestration

105
00:03:46,480 --> 00:03:48,239
on the those arenas

106
00:03:48,239 --> 00:03:51,519
and by that we see that try to uh walk

107
00:03:51,519 --> 00:03:54,080
out in automanos uh automatic uh

108
00:03:54,080 --> 00:03:56,959
workflows uh for uh correlating those

109
00:03:56,959 --> 00:03:59,680
vulnerabilities with uh with the uh

110
00:03:59,680 --> 00:04:02,400
production systems and finally fuzzing

111
00:04:02,400 --> 00:04:04,959
we also see uh continuous fuzzing going

112
00:04:04,959 --> 00:04:07,840
as a uh as a trend and we look for more

113
00:04:07,840 --> 00:04:10,080
and more things to do especially true

114
00:04:10,080 --> 00:04:11,439
while we are considering agile

115
00:04:11,439 --> 00:04:12,640
development

116
00:04:12,640 --> 00:04:14,239
while we we thought of traditional

117
00:04:14,239 --> 00:04:17,040
security as non-agile and non-agile

118
00:04:17,040 --> 00:04:18,959
ready uh what we are trying to do with

119
00:04:18,959 --> 00:04:21,040
current security and where we say we

120
00:04:21,040 --> 00:04:23,840
it's globally in terms of community uh

121
00:04:23,840 --> 00:04:26,880
all around the globe is we try to keep

122
00:04:26,880 --> 00:04:28,960
up with the agile development

123
00:04:28,960 --> 00:04:31,520
lifecycle trend and by the velocity that

124
00:04:31,520 --> 00:04:32,720
it demands

125
00:04:32,720 --> 00:04:34,960
by that to be honest all of those

126
00:04:34,960 --> 00:04:38,000
systems brings up together a new a new

127
00:04:38,000 --> 00:04:40,560
kind of category and a new difficulty

128
00:04:40,560 --> 00:04:43,040
for us as security practitioners is to

129
00:04:43,040 --> 00:04:45,440
have all of those items on others and

130
00:04:45,440 --> 00:04:48,000
features and we don't try to we never

131
00:04:48,000 --> 00:04:49,759
try to hear their development we try to

132
00:04:49,759 --> 00:04:51,520
make development fast

133
00:04:51,520 --> 00:04:53,919
and that said secure and this is some

134
00:04:53,919 --> 00:04:56,240
kind of a very very tight balance to try

135
00:04:56,240 --> 00:04:57,199
to

136
00:04:57,199 --> 00:05:00,240
uh to act together but with no not much

137
00:05:00,240 --> 00:05:01,919
help and what what i'm trying to say

138
00:05:01,919 --> 00:05:04,560
here is that without the context the

139
00:05:04,560 --> 00:05:07,039
correct context for those automatic

140
00:05:07,039 --> 00:05:08,000
systems

141
00:05:08,000 --> 00:05:10,240
we won't be able to we won't be able to

142
00:05:10,240 --> 00:05:13,039
come come along all of this uh part that

143
00:05:13,039 --> 00:05:14,400
we see that we

144
00:05:14,400 --> 00:05:16,800
either block or and by that we are not

145
00:05:16,800 --> 00:05:19,199
releasing on time or we are accepting

146
00:05:19,199 --> 00:05:21,520
the risk for some for for any reason

147
00:05:21,520 --> 00:05:23,759
that we have and by then just releasing

148
00:05:23,759 --> 00:05:25,600
and knowing that there are risks that to

149
00:05:25,600 --> 00:05:27,759
be taken because we don't want to hinder

150
00:05:27,759 --> 00:05:30,880
the release cycle uh velocity

151
00:05:30,880 --> 00:05:33,039
uh one more challenge i will discuss

152
00:05:33,039 --> 00:05:34,880
before i'm going into the detail of how

153
00:05:34,880 --> 00:05:36,639
are we going to tackle that and what is

154
00:05:36,639 --> 00:05:39,360
the uh what is the uh what is the

155
00:05:39,360 --> 00:05:41,039
proposed approach here

156
00:05:41,039 --> 00:05:43,280
um is that we also know that the number

157
00:05:43,280 --> 00:05:46,000
of security architects is still low uh

158
00:05:46,000 --> 00:05:48,320
in in regards to how many developers

159
00:05:48,320 --> 00:05:50,880
each architect should support

160
00:05:50,880 --> 00:05:54,080
and and of course part of that is also

161
00:05:54,080 --> 00:05:56,160
really really really hard for those uh

162
00:05:56,160 --> 00:05:58,560
architects to really have this kind of

163
00:05:58,560 --> 00:06:00,560
say within their platforms and

164
00:06:00,560 --> 00:06:02,479
enterprises is that first of all the

165
00:06:02,479 --> 00:06:04,560
lack of visibility they don't know they

166
00:06:04,560 --> 00:06:07,120
can't map all the time the continuous

167
00:06:07,120 --> 00:06:09,120
and very really rapid development that

168
00:06:09,120 --> 00:06:11,120
developers right now have on their hands

169
00:06:11,120 --> 00:06:12,800
especially when considering cloud

170
00:06:12,800 --> 00:06:14,800
services right now with infest code and

171
00:06:14,800 --> 00:06:17,600
stuff like that it really it really it

172
00:06:17,600 --> 00:06:20,160
brings a lot of visibility issues into

173
00:06:20,160 --> 00:06:21,199
play

174
00:06:21,199 --> 00:06:23,440
second this the cost of remediation is

175
00:06:23,440 --> 00:06:25,199
still high which

176
00:06:25,199 --> 00:06:28,080
part of the decision for the sdlc uh is

177
00:06:28,080 --> 00:06:30,720
very very late into into the stlc

178
00:06:30,720 --> 00:06:32,800
lifecycle we mostly see those kind of

179
00:06:32,800 --> 00:06:34,880
decision taking place on the release

180
00:06:34,880 --> 00:06:37,440
side so it's very far away from far

181
00:06:37,440 --> 00:06:39,840
right what is said with the death star

182
00:06:39,840 --> 00:06:41,840
dev sec ops communities

183
00:06:41,840 --> 00:06:44,160
really far right on the scale of where

184
00:06:44,160 --> 00:06:46,800
remediation should be taking place while

185
00:06:46,800 --> 00:06:48,880
trying to make a shift left making

186
00:06:48,880 --> 00:06:51,199
making this kind of radiation decisions

187
00:06:51,199 --> 00:06:53,360
as early as we can in this design and

188
00:06:53,360 --> 00:06:55,599
development of the those kind of

189
00:06:55,599 --> 00:06:58,240
features and uh in code

190
00:06:58,240 --> 00:07:00,800
and and lastly slow time to market we

191
00:07:00,800 --> 00:07:02,639
try to do everything automatic and not

192
00:07:02,639 --> 00:07:03,599
manual

193
00:07:03,599 --> 00:07:05,039
all of those kind of things and the

194
00:07:05,039 --> 00:07:07,199
things that you see on the screen are

195
00:07:07,199 --> 00:07:08,160
really

196
00:07:08,160 --> 00:07:09,840
putting the architect in a very tight

197
00:07:09,840 --> 00:07:11,360
position

198
00:07:11,360 --> 00:07:14,000
uh on top of what all all of being said

199
00:07:14,000 --> 00:07:16,800
right now we we shouldn't forget that

200
00:07:16,800 --> 00:07:18,160
the issues themselves are just

201
00:07:18,160 --> 00:07:19,840
accumulating and those kind of issues

202
00:07:19,840 --> 00:07:22,319
can come from either automatic or manual

203
00:07:22,319 --> 00:07:24,400
tests that we are doing along those

204
00:07:24,400 --> 00:07:26,960
stlcs that we have

205
00:07:26,960 --> 00:07:29,039
uh on top of that if you just need a

206
00:07:29,039 --> 00:07:30,560
quick reminder of supply chain attacks

207
00:07:30,560 --> 00:07:32,319
as we see more and more over the past

208
00:07:32,319 --> 00:07:35,120
two years is not going away anywhere and

209
00:07:35,120 --> 00:07:37,360
this is a new i won't say actually not a

210
00:07:37,360 --> 00:07:39,919
new type of attack but something that

211
00:07:39,919 --> 00:07:41,440
they've been just trending with

212
00:07:41,440 --> 00:07:43,680
attackers for the past few years and

213
00:07:43,680 --> 00:07:45,520
more and more we are more conscious

214
00:07:45,520 --> 00:07:46,879
about those supply chain attacks

215
00:07:46,879 --> 00:07:48,560
nowadays

216
00:07:48,560 --> 00:07:49,680
so there are three things that we're

217
00:07:49,680 --> 00:07:51,759
going to discuss one is how to break how

218
00:07:51,759 --> 00:07:52,479
to

219
00:07:52,479 --> 00:07:54,400
why context contextual data is very

220
00:07:54,400 --> 00:07:56,960
important how what we are bringing what

221
00:07:56,960 --> 00:07:59,120
we are considering context that's really

222
00:07:59,120 --> 00:08:01,840
really important for us to keep second

223
00:08:01,840 --> 00:08:04,319
on the normalization a very short maybe

224
00:08:04,319 --> 00:08:05,840
introduction to what is normalization

225
00:08:05,840 --> 00:08:08,000
and what and how to do that within your

226
00:08:08,000 --> 00:08:09,919
systems to be to be aware of this

227
00:08:09,919 --> 00:08:12,720
normalization need and thirdly how do we

228
00:08:12,720 --> 00:08:14,560
do it at scale if we're talking

229
00:08:14,560 --> 00:08:16,319
enterprise scale we are talking tens of

230
00:08:16,319 --> 00:08:19,120
thousands maybe repositories we uh we've

231
00:08:19,120 --> 00:08:21,599
met with enterprises that have

232
00:08:21,599 --> 00:08:24,319
new a repository every day or even more

233
00:08:24,319 --> 00:08:26,800
than that so at scale it's very very

234
00:08:26,800 --> 00:08:28,400
very important for us as well so we are

235
00:08:28,400 --> 00:08:29,840
going to touch upon that and we will go

236
00:08:29,840 --> 00:08:32,958
and finalize with the takeaways for you

237
00:08:32,958 --> 00:08:35,039
so let's start with contextual what we

238
00:08:35,039 --> 00:08:36,799
are trying to do with with context is

239
00:08:36,799 --> 00:08:38,799
that we are trying to to bring along

240
00:08:38,799 --> 00:08:40,399
this kind of idea

241
00:08:40,399 --> 00:08:42,640
which we know that jira ticket can be

242
00:08:42,640 --> 00:08:44,959
for example this is starting with design

243
00:08:44,959 --> 00:08:47,600
so someone needs a

244
00:08:47,600 --> 00:08:49,839
feature to collect something so john

245
00:08:49,839 --> 00:08:51,920
goes goes ahead and do a code change

246
00:08:51,920 --> 00:08:54,959
according to jira ticket and start to to

247
00:08:54,959 --> 00:08:57,040
tweak the apr logic

248
00:08:57,040 --> 00:08:58,880
then we can see a cloud change because

249
00:08:58,880 --> 00:09:01,600
we need to expose this kind of api on

250
00:09:01,600 --> 00:09:03,920
the api gateway that we have so someone

251
00:09:03,920 --> 00:09:06,800
is making a sure that the code that is

252
00:09:06,800 --> 00:09:09,120
configuring the api gateway is being

253
00:09:09,120 --> 00:09:12,000
updated as well maybe the same way john

254
00:09:12,000 --> 00:09:14,240
is doing that maybe on the same computer

255
00:09:14,240 --> 00:09:16,480
or maybe even in the same breath if it's

256
00:09:16,480 --> 00:09:18,560
very very easy and

257
00:09:18,560 --> 00:09:20,399
on top of that all of that really

258
00:09:20,399 --> 00:09:22,240
affects the pii field that is being

259
00:09:22,240 --> 00:09:24,000
added because of this need of the new

260
00:09:24,000 --> 00:09:24,959
data

261
00:09:24,959 --> 00:09:26,320
and and

262
00:09:26,320 --> 00:09:29,120
if if it's not uh if it's not enough

263
00:09:29,120 --> 00:09:30,480
he should also

264
00:09:30,480 --> 00:09:32,640
apply this kind of application on a

265
00:09:32,640 --> 00:09:35,440
daily basis and then deploy it uh to to

266
00:09:35,440 --> 00:09:36,399
the cloud

267
00:09:36,399 --> 00:09:40,080
so all of those things are new events

268
00:09:40,080 --> 00:09:42,880
and and and by that you also can think

269
00:09:42,880 --> 00:09:45,200
of what kind of semantic context we can

270
00:09:45,200 --> 00:09:46,959
bring to the table specifically if

271
00:09:46,959 --> 00:09:49,440
someone commented on the push request

272
00:09:49,440 --> 00:09:50,480
from uh

273
00:09:50,480 --> 00:09:51,519
from john

274
00:09:51,519 --> 00:09:53,760
and and more than that if we if we

275
00:09:53,760 --> 00:09:55,600
actually look at the api that we have

276
00:09:55,600 --> 00:09:58,320
been exposed maybe the api is not

277
00:09:58,320 --> 00:10:00,800
considering authorization at all

278
00:10:00,800 --> 00:10:04,240
and lastly what we are seeing here are

279
00:10:04,240 --> 00:10:06,079
very critical pieces of information that

280
00:10:06,079 --> 00:10:08,079
first of all are not strung together

281
00:10:08,079 --> 00:10:10,880
meaning they are not interconnected

282
00:10:10,880 --> 00:10:13,600
some way to bring that all into one

283
00:10:13,600 --> 00:10:16,160
story and second the important pieces of

284
00:10:16,160 --> 00:10:18,720
information which is a new change which

285
00:10:18,720 --> 00:10:21,680
is which the api configuration is not

286
00:10:21,680 --> 00:10:23,040
including something or including

287
00:10:23,040 --> 00:10:25,040
something or touching upon a specific

288
00:10:25,040 --> 00:10:27,040
mechanism that is important for us and

289
00:10:27,040 --> 00:10:30,000
by that this context brings us the idea

290
00:10:30,000 --> 00:10:32,240
of why it's important why it's more

291
00:10:32,240 --> 00:10:33,920
important than others why it's a

292
00:10:33,920 --> 00:10:36,240
material change why is something that is

293
00:10:36,240 --> 00:10:38,320
worth our time remember that

294
00:10:38,320 --> 00:10:40,000
the accumulating issues will never stop

295
00:10:40,000 --> 00:10:42,560
and we'll need to either um shoot him

296
00:10:42,560 --> 00:10:43,920
away very very

297
00:10:43,920 --> 00:10:45,120
very

298
00:10:45,120 --> 00:10:46,399
fast or

299
00:10:46,399 --> 00:10:49,200
we are going to tackle them with some uh

300
00:10:49,200 --> 00:10:50,720
context and buy that have the this

301
00:10:50,720 --> 00:10:54,240
priority priority also in place

302
00:10:54,240 --> 00:10:56,399
and no one currently is looking at that

303
00:10:56,399 --> 00:10:58,720
so we don't have the power and the

304
00:10:58,720 --> 00:11:00,560
community to do that so

305
00:11:00,560 --> 00:11:02,640
that's part of what we are trying to do

306
00:11:02,640 --> 00:11:04,160
and if we are looking at the sequential

307
00:11:04,160 --> 00:11:06,800
model that the devops uh devsecops have

308
00:11:06,800 --> 00:11:09,200
we also see those kind of caveats all

309
00:11:09,200 --> 00:11:11,200
the time what is the what what is that

310
00:11:11,200 --> 00:11:13,519
going on the security design

311
00:11:13,519 --> 00:11:14,959
and what kind of solutions you're going

312
00:11:14,959 --> 00:11:17,440
to you're going to use and all of that

313
00:11:17,440 --> 00:11:19,360
if we look at the um

314
00:11:19,360 --> 00:11:22,160
infinity uh aid that we see on the

315
00:11:22,160 --> 00:11:24,560
devsecop cycle we understand that this

316
00:11:24,560 --> 00:11:27,040
cycle is not not really a cycle more

317
00:11:27,040 --> 00:11:29,040
than something that that is being done

318
00:11:29,040 --> 00:11:31,440
all together as an agile as an agile

319
00:11:31,440 --> 00:11:34,399
model uh alongside each other so the the

320
00:11:34,399 --> 00:11:35,680
correct way to

321
00:11:35,680 --> 00:11:37,920
to see that is the continuous model that

322
00:11:37,920 --> 00:11:40,160
we all and we never we never stopped

323
00:11:40,160 --> 00:11:42,079
doing planning we never stop doing

324
00:11:42,079 --> 00:11:43,760
creating and it's not not something that

325
00:11:43,760 --> 00:11:45,920
we are going to

326
00:11:45,920 --> 00:11:47,839
block by each other and that's the way

327
00:11:47,839 --> 00:11:49,360
by the way that developers are working

328
00:11:49,360 --> 00:11:51,120
on it maybe they are working on one

329
00:11:51,120 --> 00:11:54,480
feature uh each but it's it's because of

330
00:11:54,480 --> 00:11:56,959
how git works and how git operations are

331
00:11:56,959 --> 00:11:58,320
working right now

332
00:11:58,320 --> 00:12:00,639
it's an a it enables them to walk very

333
00:12:00,639 --> 00:12:03,040
very fast on different branches without

334
00:12:03,040 --> 00:12:04,079
um

335
00:12:04,079 --> 00:12:06,560
without considering each other uh and by

336
00:12:06,560 --> 00:12:08,880
that it's it's still they have the

337
00:12:08,880 --> 00:12:11,519
ability to release stuff very very

338
00:12:11,519 --> 00:12:13,920
fast if we are not considering security

339
00:12:13,920 --> 00:12:15,920
for a second

340
00:12:15,920 --> 00:12:17,760
all of that comes together to one point

341
00:12:17,760 --> 00:12:19,600
that the inventory itself that we have

342
00:12:19,600 --> 00:12:22,079
is is incomplete and we need to have

343
00:12:22,079 --> 00:12:23,760
this kind of information together to

344
00:12:23,760 --> 00:12:26,079
have this kind of context now finally

345
00:12:26,079 --> 00:12:28,240
when we look at all what we said is the

346
00:12:28,240 --> 00:12:29,920
thing that we are trying to to handle

347
00:12:29,920 --> 00:12:31,920
together at randall together in order to

348
00:12:31,920 --> 00:12:34,320
have context is the code itself this is

349
00:12:34,320 --> 00:12:36,240
pretty uh straightforward to understand

350
00:12:36,240 --> 00:12:37,760
we have a git repository we have the

351
00:12:37,760 --> 00:12:39,519
history maybe of the git repository or

352
00:12:39,519 --> 00:12:41,680
repositories plural i should say uh

353
00:12:41,680 --> 00:12:43,760
contributors which which the continuous

354
00:12:43,760 --> 00:12:46,480
of continuous what what to wear and why

355
00:12:46,480 --> 00:12:47,600
it's important maybe it's a new

356
00:12:47,600 --> 00:12:49,120
developer it's a different risk for a

357
00:12:49,120 --> 00:12:50,959
new developer if it's a

358
00:12:50,959 --> 00:12:52,880
developer that already touched upon a

359
00:12:52,880 --> 00:12:54,880
mechanism of authentication and next

360
00:12:54,880 --> 00:12:56,399
time he's going to touch upon the

361
00:12:56,399 --> 00:12:58,560
authentication mechanism he will be less

362
00:12:58,560 --> 00:13:01,040
risky statistically by someone that

363
00:13:01,040 --> 00:13:02,959
never touched upon a

364
00:13:02,959 --> 00:13:05,200
authentication mechanism and it's it's

365
00:13:05,200 --> 00:13:08,639
his first uh day on the job maybe uh so

366
00:13:08,639 --> 00:13:12,240
the contributor uh um context is very

367
00:13:12,240 --> 00:13:14,880
very important is one of the

368
00:13:14,880 --> 00:13:16,079
biggest things that we are looking at

369
00:13:16,079 --> 00:13:17,920
when we are looking at context and

370
00:13:17,920 --> 00:13:20,560
lastly this kind of semantic discussion

371
00:13:20,560 --> 00:13:22,240
metadata for tickets is very important

372
00:13:22,240 --> 00:13:24,480
as well so it gives us a lot of context

373
00:13:24,480 --> 00:13:26,240
information about what happened and the

374
00:13:26,240 --> 00:13:28,320
journey that the future have gone

375
00:13:28,320 --> 00:13:30,399
through from design to code to the cloud

376
00:13:30,399 --> 00:13:32,720
itself and all of this is being funneled

377
00:13:32,720 --> 00:13:35,440
into what we call material changes again

378
00:13:35,440 --> 00:13:37,600
so what is important in the change not

379
00:13:37,600 --> 00:13:40,639
just a change uh a line of code has been

380
00:13:40,639 --> 00:13:42,320
changed is nothing

381
00:13:42,320 --> 00:13:44,959
important in let's say in the color of

382
00:13:44,959 --> 00:13:46,560
the login page is not something of a

383
00:13:46,560 --> 00:13:49,440
material change uh for in terms of

384
00:13:49,440 --> 00:13:51,440
perspective of the code itself it's

385
00:13:51,440 --> 00:13:53,519
something that is not considering mostly

386
00:13:53,519 --> 00:13:55,680
not considering anyone else in terms of

387
00:13:55,680 --> 00:13:57,519
material change for security and this is

388
00:13:57,519 --> 00:13:59,519
why it's very important for us to tackle

389
00:13:59,519 --> 00:14:01,760
the security uh the security elements

390
00:14:01,760 --> 00:14:03,600
and not every kind of code in the same

391
00:14:03,600 --> 00:14:04,480
time

392
00:14:04,480 --> 00:14:06,480
or in the same level

393
00:14:06,480 --> 00:14:08,240
so all of that after we have interior

394
00:14:08,240 --> 00:14:09,680
changes and we understand the concepts

395
00:14:09,680 --> 00:14:12,000
of them we can really point out what are

396
00:14:12,000 --> 00:14:14,320
the risky material changes

397
00:14:14,320 --> 00:14:17,760
and when we have all of this together

398
00:14:17,760 --> 00:14:19,600
we can really point out why it's the

399
00:14:19,600 --> 00:14:21,440
high risk from that from that lot of the

400
00:14:21,440 --> 00:14:23,680
risky material changes and decide of

401
00:14:23,680 --> 00:14:26,800
what to do and then we can wisely

402
00:14:26,800 --> 00:14:28,800
distribute our resources over that and

403
00:14:28,800 --> 00:14:32,240
to have a wise workflow for each one one

404
00:14:32,240 --> 00:14:33,279
can can

405
00:14:33,279 --> 00:14:35,519
demand that penetration testing while

406
00:14:35,519 --> 00:14:37,440
other should have a code review for a

407
00:14:37,440 --> 00:14:40,000
second um for example

408
00:14:40,000 --> 00:14:42,399
so all this again is a is some something

409
00:14:42,399 --> 00:14:44,959
that we're taking into into account now

410
00:14:44,959 --> 00:14:48,079
very uh what what we said so far maybe

411
00:14:48,079 --> 00:14:49,760
made sense but let's go

412
00:14:49,760 --> 00:14:52,079
for uh for a trip for a use case that we

413
00:14:52,079 --> 00:14:52,880
used

414
00:14:52,880 --> 00:14:55,360
so a few um

415
00:14:55,360 --> 00:14:57,040
just a year ago

416
00:14:57,040 --> 00:14:59,440
there was a php um

417
00:14:59,440 --> 00:15:02,320
a php core attempt on

418
00:15:02,320 --> 00:15:04,800
backdooring the php core code and by

419
00:15:04,800 --> 00:15:06,959
that we we took the code we took the all

420
00:15:06,959 --> 00:15:08,480
of the history of the commits and

421
00:15:08,480 --> 00:15:11,199
especially the semantic ideas and

422
00:15:11,199 --> 00:15:13,600
metadata that they have on the code uh

423
00:15:13,600 --> 00:15:15,600
journey that they took if it's if the

424
00:15:15,600 --> 00:15:18,240
the pr's and commits that that it have

425
00:15:18,240 --> 00:15:20,399
and we found it through

426
00:15:20,399 --> 00:15:22,480
uh what we have on

427
00:15:22,480 --> 00:15:23,440
on

428
00:15:23,440 --> 00:15:25,519
on with the the models that we have for

429
00:15:25,519 --> 00:15:27,519
anomaly detection now you can think of

430
00:15:27,519 --> 00:15:29,759
multiple elementary detection uh uh

431
00:15:29,759 --> 00:15:32,079
items but in general those items can be

432
00:15:32,079 --> 00:15:34,560
can we parse it and then we looked in

433
00:15:34,560 --> 00:15:36,639
this anomalies and then we we have

434
00:15:36,639 --> 00:15:38,880
scored those anomalies all together when

435
00:15:38,880 --> 00:15:40,800
we only looked at the at the critical

436
00:15:40,800 --> 00:15:44,399
scores we came up with one single commit

437
00:15:44,399 --> 00:15:46,720
which is evidently was the commit that

438
00:15:46,720 --> 00:15:48,720
was the bachelor itself because the way

439
00:15:48,720 --> 00:15:51,199
the developer was behaving before that

440
00:15:51,199 --> 00:15:53,120
wasn't fitting to the way

441
00:15:53,120 --> 00:15:55,440
the behavior that the developer have

442
00:15:55,440 --> 00:15:57,519
committed allegedly committed this

443
00:15:57,519 --> 00:15:58,720
malicious

444
00:15:58,720 --> 00:16:00,399
uh commit

445
00:16:00,399 --> 00:16:02,399
normalization i'm going fast over that

446
00:16:02,399 --> 00:16:04,320
because there is not much to say but

447
00:16:04,320 --> 00:16:05,360
because it's really important to

448
00:16:05,360 --> 00:16:07,199
understand the data but three takeaways

449
00:16:07,199 --> 00:16:08,880
from from the normalization the data

450
00:16:08,880 --> 00:16:10,720
itself especially from different tools

451
00:16:10,720 --> 00:16:12,639
won't have a normalized idea of what is

452
00:16:12,639 --> 00:16:14,240
the distribution like and shouldn't

453
00:16:14,240 --> 00:16:16,639
consider the scoring to be consistent so

454
00:16:16,639 --> 00:16:19,279
so making coherency over this kind of

455
00:16:19,279 --> 00:16:21,680
data data feeds is very very important

456
00:16:21,680 --> 00:16:23,440
and keep in mind that sometimes even the

457
00:16:23,440 --> 00:16:26,240
same data field would would not have a

458
00:16:26,240 --> 00:16:28,079
coherent scoring because it won't have

459
00:16:28,079 --> 00:16:29,839
considering the context of the

460
00:16:29,839 --> 00:16:31,519
environment that it lives in so it's

461
00:16:31,519 --> 00:16:32,959
really important for us to normalize the

462
00:16:32,959 --> 00:16:35,360
data how to normalize data this is maybe

463
00:16:35,360 --> 00:16:37,360
an effort for a different um

464
00:16:37,360 --> 00:16:39,600
uh slide act next time

465
00:16:39,600 --> 00:16:42,079
lastly on enterprise scale we we we need

466
00:16:42,079 --> 00:16:43,600
to consider four things we want you to

467
00:16:43,600 --> 00:16:45,680
consider four things one is general

468
00:16:45,680 --> 00:16:48,079
purposeness of the scale itself we can

469
00:16:48,079 --> 00:16:49,600
build something very specific for a

470
00:16:49,600 --> 00:16:51,120
specific product

471
00:16:51,120 --> 00:16:53,519
or project and or repo and we need to

472
00:16:53,519 --> 00:16:55,440
consider the the main idea of how

473
00:16:55,440 --> 00:16:57,199
workflows are going on

474
00:16:57,199 --> 00:16:59,360
on uh different life cycles and by that

475
00:16:59,360 --> 00:17:01,440
we need to think ahead of what kind of

476
00:17:01,440 --> 00:17:03,759
uh what is worth our time in terms of

477
00:17:03,759 --> 00:17:04,959
automation

478
00:17:04,959 --> 00:17:07,199
to fit the general purpose of uh life

479
00:17:07,199 --> 00:17:08,880
cycle of developers

480
00:17:08,880 --> 00:17:11,039
and we should consider this as those

481
00:17:11,039 --> 00:17:13,679
life cycles are agile we shouldn't be

482
00:17:13,679 --> 00:17:16,079
less agile than developers themselves uh

483
00:17:16,079 --> 00:17:17,280
cloud-based is something that we are

484
00:17:17,280 --> 00:17:19,119
taking into heart because this gives us

485
00:17:19,119 --> 00:17:20,720
a lot of freedom about

486
00:17:20,720 --> 00:17:22,880
um how to handle those kinds of kind of

487
00:17:22,880 --> 00:17:25,280
cases especially uh when we are talking

488
00:17:25,280 --> 00:17:28,160
about resources that are demanding for

489
00:17:28,160 --> 00:17:31,360
this kind of crunching over security

490
00:17:31,360 --> 00:17:33,360
and lastly performance optimization it's

491
00:17:33,360 --> 00:17:36,000
really important to think about

492
00:17:36,000 --> 00:17:37,679
what deserves what kind of attention

493
00:17:37,679 --> 00:17:40,000
maybe something should be highlighted as

494
00:17:40,000 --> 00:17:42,080
the code itself is very important if we

495
00:17:42,080 --> 00:17:43,840
can put out the material changes

496
00:17:43,840 --> 00:17:46,480
themselves they they deserve a better

497
00:17:46,480 --> 00:17:48,320
uh a better treatment than than those

498
00:17:48,320 --> 00:17:49,360
that are not

499
00:17:49,360 --> 00:17:51,280
all together this brings us to the same

500
00:17:51,280 --> 00:17:54,000
idea they take away themselves that the

501
00:17:54,000 --> 00:17:56,080
agile development cycle should be the

502
00:17:56,080 --> 00:17:58,799
same as a agile security cycle the

503
00:17:58,799 --> 00:18:00,640
context is king we should consider

504
00:18:00,640 --> 00:18:02,240
context all the time without

505
00:18:02,240 --> 00:18:03,919
normalization of the data we won't be

506
00:18:03,919 --> 00:18:06,080
able to actually coherently look at the

507
00:18:06,080 --> 00:18:08,000
data sets and this and

508
00:18:08,000 --> 00:18:10,080
decide of what actions should we take

509
00:18:10,080 --> 00:18:11,600
and lastly the optimization and

510
00:18:11,600 --> 00:18:14,320
consistency of automation is super

511
00:18:14,320 --> 00:18:16,320
important for us to for the long run

512
00:18:16,320 --> 00:18:17,840
altogether

513
00:18:17,840 --> 00:18:21,918
that's it i think i'm on time

