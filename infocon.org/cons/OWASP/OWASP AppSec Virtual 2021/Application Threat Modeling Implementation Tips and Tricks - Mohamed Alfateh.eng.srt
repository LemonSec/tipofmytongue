1
00:00:01,420 --> 00:00:05,630
[Music]

2
00:00:05,839 --> 00:00:09,120
uh and hello everyone

3
00:00:09,120 --> 00:00:12,480
thank you for having me uh today in oas

4
00:00:12,480 --> 00:00:13,759
papsec

5
00:00:13,759 --> 00:00:16,560
event so today we are going to talk

6
00:00:16,560 --> 00:00:18,560
about application threat modelling steps

7
00:00:18,560 --> 00:00:19,760
and tracks

8
00:00:19,760 --> 00:00:23,279
uh i not cover the process to

9
00:00:23,279 --> 00:00:25,920
perform application threat modelling

10
00:00:25,920 --> 00:00:28,080
the methodology you can refer to

11
00:00:28,080 --> 00:00:29,359
different standards different

12
00:00:29,359 --> 00:00:31,519
methodologies to execute application

13
00:00:31,519 --> 00:00:34,000
threat modeling we will just focus on

14
00:00:34,000 --> 00:00:35,680
some steps and tracks

15
00:00:35,680 --> 00:00:37,040
that could be

16
00:00:37,040 --> 00:00:40,160
taken during a number of stages of

17
00:00:40,160 --> 00:00:43,120
application threat modeling okay i'll

18
00:00:43,120 --> 00:00:44,879
try to go very quickly in the

19
00:00:44,879 --> 00:00:46,879
presentation so we have some time at the

20
00:00:46,879 --> 00:00:48,160
end of the presentation for any

21
00:00:48,160 --> 00:00:49,840
questions so if you have any question

22
00:00:49,840 --> 00:00:54,039
please drop it in that chat

23
00:00:58,239 --> 00:01:00,399
okay so we are going to cover number of

24
00:01:00,399 --> 00:01:03,359
steps and tracks uh related to uh some

25
00:01:03,359 --> 00:01:06,000
stages or talking about

26
00:01:06,000 --> 00:01:07,600
asset identification phase threat

27
00:01:07,600 --> 00:01:09,200
modeling scoring

28
00:01:09,200 --> 00:01:10,799
application whiteboarding threat

29
00:01:10,799 --> 00:01:12,479
identification and risk analysis and

30
00:01:12,479 --> 00:01:14,960
risk mitigations

31
00:01:14,960 --> 00:01:17,040
so let's start by first

32
00:01:17,040 --> 00:01:18,640
seven track related to the selection of

33
00:01:18,640 --> 00:01:21,119
methodology so there are a number of

34
00:01:21,119 --> 00:01:23,200
methodologies talking about how to

35
00:01:23,200 --> 00:01:24,720
implement application threat modeling

36
00:01:24,720 --> 00:01:27,119
how to execute the process

37
00:01:27,119 --> 00:01:29,280
each one has its own headsprouts and

38
00:01:29,280 --> 00:01:30,240
cons

39
00:01:30,240 --> 00:01:32,799
so the recommendations is to understand

40
00:01:32,799 --> 00:01:35,200
every methodology understand your

41
00:01:35,200 --> 00:01:37,439
requirements the environment you have

42
00:01:37,439 --> 00:01:39,759
and select with which one is suitable

43
00:01:39,759 --> 00:01:40,640
for you

44
00:01:40,640 --> 00:01:42,720
number of methodologies could be used to

45
00:01:42,720 --> 00:01:45,360
execute application threat modeling as

46
00:01:45,360 --> 00:01:47,280
one-time activity during the design

47
00:01:47,280 --> 00:01:49,439
phase others may be

48
00:01:49,439 --> 00:01:51,920
could be utilized to be part of the an

49
00:01:51,920 --> 00:01:54,079
ongoing process of application threat

50
00:01:54,079 --> 00:01:56,399
threat modeling in your organization

51
00:01:56,399 --> 00:01:59,040
uh dread for example could be used for

52
00:01:59,040 --> 00:02:00,799
the risk analysis phase of threat

53
00:02:00,799 --> 00:02:02,880
modeling process so

54
00:02:02,880 --> 00:02:04,799
it's it's good to have

55
00:02:04,799 --> 00:02:07,439
understanding for each methodology and

56
00:02:07,439 --> 00:02:09,440
to try to understand exactly the

57
00:02:09,440 --> 00:02:11,038
requirement the needs in your

58
00:02:11,038 --> 00:02:12,720
environments to select a suitable one

59
00:02:12,720 --> 00:02:14,319
for you

60
00:02:14,319 --> 00:02:15,680
great

61
00:02:15,680 --> 00:02:17,920
next step related to

62
00:02:17,920 --> 00:02:20,879
when to do application threat modeling

63
00:02:20,879 --> 00:02:23,040
number of frameworks talking about

64
00:02:23,040 --> 00:02:25,520
application threat modeling as part of

65
00:02:25,520 --> 00:02:27,280
the design or architecture phase this

66
00:02:27,280 --> 00:02:29,360
could be digital touchpoint

67
00:02:29,360 --> 00:02:31,360
uh microsoft sdl

68
00:02:31,360 --> 00:02:33,760
so they are mainly talking about during

69
00:02:33,760 --> 00:02:36,640
the design and architecture phase you do

70
00:02:36,640 --> 00:02:38,879
application threat monitoring identify

71
00:02:38,879 --> 00:02:41,599
all possible or potential threats

72
00:02:41,599 --> 00:02:42,959
and then

73
00:02:42,959 --> 00:02:44,560
in the verification phase of testing

74
00:02:44,560 --> 00:02:47,680
phase you go and ensure the recommended

75
00:02:47,680 --> 00:02:49,760
controls the mitigations already taken

76
00:02:49,760 --> 00:02:52,080
or implemented during the development

77
00:02:52,080 --> 00:02:53,920
phase or implementation phase

78
00:02:53,920 --> 00:02:55,840
so this is a standard way to do

79
00:02:55,840 --> 00:02:57,680
application threat modeling you identify

80
00:02:57,680 --> 00:03:00,480
all possible threads and then

81
00:03:00,480 --> 00:03:02,159
verify the implementation of the

82
00:03:02,159 --> 00:03:05,280
controls however based on

83
00:03:05,280 --> 00:03:06,239
uh

84
00:03:06,239 --> 00:03:08,879
the environments in you have sometimes

85
00:03:08,879 --> 00:03:10,640
the application threat modeling is an

86
00:03:10,640 --> 00:03:12,640
ongoing process that means you do

87
00:03:12,640 --> 00:03:13,920
application threat modeling for

88
00:03:13,920 --> 00:03:16,319
application uh identify number of

89
00:03:16,319 --> 00:03:18,959
threads however you still get some

90
00:03:18,959 --> 00:03:21,840
feedback get some inputs from different

91
00:03:21,840 --> 00:03:24,560
security gates during other stages of

92
00:03:24,560 --> 00:03:27,200
life cycle that's that could be stats

93
00:03:27,200 --> 00:03:28,159
dust

94
00:03:28,159 --> 00:03:29,760
penetration testing

95
00:03:29,760 --> 00:03:32,159
maybe threat intelligence whatever

96
00:03:32,159 --> 00:03:34,000
security gets or security controls you

97
00:03:34,000 --> 00:03:36,239
have you may get some other

98
00:03:36,239 --> 00:03:38,159
identification for extra threats that

99
00:03:38,159 --> 00:03:40,000
require some sort of

100
00:03:40,000 --> 00:03:41,440
modeling and

101
00:03:41,440 --> 00:03:43,519
identification for the mitigations

102
00:03:43,519 --> 00:03:46,080
so you can recommend and ensure those

103
00:03:46,080 --> 00:03:48,319
mitigations already implemented that and

104
00:03:48,319 --> 00:03:50,799
the application is secured

105
00:03:50,799 --> 00:03:53,760
so again threat modeling could be as

106
00:03:53,760 --> 00:03:56,400
standard way to do to be in the design

107
00:03:56,400 --> 00:03:57,920
phase

108
00:03:57,920 --> 00:03:59,680
for your application or you couldn't

109
00:03:59,680 --> 00:04:01,280
kind of utilize them even in other

110
00:04:01,280 --> 00:04:02,239
stages

111
00:04:02,239 --> 00:04:04,319
sometimes the penetration testers they

112
00:04:04,319 --> 00:04:06,239
do some sort of threat modeling for

113
00:04:06,239 --> 00:04:08,080
specific specific function during the

114
00:04:08,080 --> 00:04:09,760
preservation testing so to understand

115
00:04:09,760 --> 00:04:11,200
exactly the

116
00:04:11,200 --> 00:04:13,439
connection flow or the sequence here so

117
00:04:13,439 --> 00:04:16,560
they can expect there is some sort of

118
00:04:16,560 --> 00:04:20,959
threats here that could be exploited

119
00:04:20,959 --> 00:04:22,720
okay perfect

120
00:04:22,720 --> 00:04:24,479
this next section will talk about some

121
00:04:24,479 --> 00:04:26,639
tips and tricks related to the scope

122
00:04:26,639 --> 00:04:29,040
this is one of the most important topic

123
00:04:29,040 --> 00:04:30,160
today in

124
00:04:30,160 --> 00:04:30,960
this

125
00:04:30,960 --> 00:04:31,919
talk

126
00:04:31,919 --> 00:04:32,800
because

127
00:04:32,800 --> 00:04:35,040
the score is very critical

128
00:04:35,040 --> 00:04:36,560
sometimes the application threat

129
00:04:36,560 --> 00:04:39,120
modeling scope will focus only on the

130
00:04:39,120 --> 00:04:40,880
application layer that means you are

131
00:04:40,880 --> 00:04:42,960
talking about some vulnerabilities in

132
00:04:42,960 --> 00:04:45,440
the source code maybe to issues in the

133
00:04:45,440 --> 00:04:47,840
configurations for the application

134
00:04:47,840 --> 00:04:50,479
so the recommendation usually to protect

135
00:04:50,479 --> 00:04:52,160
the application from

136
00:04:52,160 --> 00:04:55,440
attacks like os top 10 or any similar

137
00:04:55,440 --> 00:04:57,280
effects so

138
00:04:57,280 --> 00:04:59,440
this is okay however

139
00:04:59,440 --> 00:05:02,560
based on your scope you may include

140
00:05:02,560 --> 00:05:03,440
other

141
00:05:03,440 --> 00:05:05,919
combo other layers you need to consider

142
00:05:05,919 --> 00:05:08,240
some threads to other layers maybe you

143
00:05:08,240 --> 00:05:09,919
need to consider some threats related to

144
00:05:09,919 --> 00:05:11,440
the infrastructure the applicator

145
00:05:11,440 --> 00:05:13,199
operating system

146
00:05:13,199 --> 00:05:15,600
maybe do the virtualization if you have

147
00:05:15,600 --> 00:05:17,360
maybe you have some sort of docker

148
00:05:17,360 --> 00:05:20,000
images that managed by kubernetes so you

149
00:05:20,000 --> 00:05:21,600
you need to identify some threats

150
00:05:21,600 --> 00:05:22,960
related to that

151
00:05:22,960 --> 00:05:25,280
other layers within your scope at the

152
00:05:25,280 --> 00:05:28,000
end those layers could be source for

153
00:05:28,000 --> 00:05:29,440
extra threads

154
00:05:29,440 --> 00:05:32,000
that you may miss if your scope is just

155
00:05:32,000 --> 00:05:34,400
in the application layer in general if

156
00:05:34,400 --> 00:05:36,479
your scope will be just focusing with

157
00:05:36,479 --> 00:05:38,000
the application layer the code the

158
00:05:38,000 --> 00:05:39,919
integrations back-end front-end other

159
00:05:39,919 --> 00:05:42,160
external entities you need to be sure

160
00:05:42,160 --> 00:05:45,199
that within your organization other

161
00:05:45,199 --> 00:05:47,360
domains are other layers

162
00:05:47,360 --> 00:05:50,240
the threads or the rest for other layers

163
00:05:50,240 --> 00:05:53,039
already identified by other activities

164
00:05:53,039 --> 00:05:54,960
in the risk management process in the

165
00:05:54,960 --> 00:05:57,599
organization

166
00:05:57,919 --> 00:06:00,000
this is an example if you have managed

167
00:06:00,000 --> 00:06:02,080
service

168
00:06:02,080 --> 00:06:03,680
for any

169
00:06:03,680 --> 00:06:06,800
any type of manager service like is past

170
00:06:06,800 --> 00:06:08,319
sas whatever

171
00:06:08,319 --> 00:06:11,520
based on the type of service you control

172
00:06:11,520 --> 00:06:14,880
or you manage part of the infrastructure

173
00:06:14,880 --> 00:06:16,479
in in this case

174
00:06:16,479 --> 00:06:18,080
the threats related to your scope you

175
00:06:18,080 --> 00:06:20,639
have to identify but the threats related

176
00:06:20,639 --> 00:06:23,759
to any component managed by the the

177
00:06:23,759 --> 00:06:25,520
service provider it is the

178
00:06:25,520 --> 00:06:28,000
responsibility for the service provider

179
00:06:28,000 --> 00:06:29,199
however

180
00:06:29,199 --> 00:06:31,199
the business risks or the non-technical

181
00:06:31,199 --> 00:06:33,600
risks still in your scope even if you

182
00:06:33,600 --> 00:06:36,479
have sas service still some other

183
00:06:36,479 --> 00:06:38,319
non-technical threats could be

184
00:06:38,319 --> 00:06:40,479
identified maybe something like

185
00:06:40,479 --> 00:06:43,120
compromising the cloud admin account

186
00:06:43,120 --> 00:06:44,960
something like access management

187
00:06:44,960 --> 00:06:47,360
something like other other requirements

188
00:06:47,360 --> 00:06:48,960
so

189
00:06:48,960 --> 00:06:52,479
again just focus on your scope ensure if

190
00:06:52,479 --> 00:06:53,360
if

191
00:06:53,360 --> 00:06:56,800
if you exclude any layers it's already

192
00:06:56,800 --> 00:06:58,800
managed by other

193
00:06:58,800 --> 00:07:00,800
risk management process or any other

194
00:07:00,800 --> 00:07:02,479
third party

195
00:07:02,479 --> 00:07:04,240
and never

196
00:07:04,240 --> 00:07:07,360
forget to include include or identify

197
00:07:07,360 --> 00:07:08,560
business

198
00:07:08,560 --> 00:07:11,039
risks or business threats for

199
00:07:11,039 --> 00:07:14,000
non-technical issues

200
00:07:14,800 --> 00:07:17,520
great so the next section for asset

201
00:07:17,520 --> 00:07:19,599
identification okay

202
00:07:19,599 --> 00:07:22,080
so as we are iso standard there are two

203
00:07:22,080 --> 00:07:24,960
types of info assets we have primary

204
00:07:24,960 --> 00:07:27,440
assets and supporting assets

205
00:07:27,440 --> 00:07:29,440
so the primary assets were talking about

206
00:07:29,440 --> 00:07:31,360
business processes and information

207
00:07:31,360 --> 00:07:32,800
assets there are a number of other

208
00:07:32,800 --> 00:07:34,319
supporting classes the recommendations

209
00:07:34,319 --> 00:07:37,039
here just focus on the primary assets

210
00:07:37,039 --> 00:07:38,880
don't waste your time to identify any

211
00:07:38,880 --> 00:07:42,080
other type or any other options for the

212
00:07:42,080 --> 00:07:44,560
supporting assets focus on your

213
00:07:44,560 --> 00:07:46,720
application understand application

214
00:07:46,720 --> 00:07:49,520
objectives go and break down the

215
00:07:49,520 --> 00:07:51,919
application services for each service

216
00:07:51,919 --> 00:07:54,240
try to have the processes related to the

217
00:07:54,240 --> 00:07:56,160
edge service and then you can do some

218
00:07:56,160 --> 00:07:57,840
sort of mapping

219
00:07:57,840 --> 00:08:01,199
between the application service and the

220
00:08:01,199 --> 00:08:03,280
information asset

221
00:08:03,280 --> 00:08:05,039
we are talking about application threat

222
00:08:05,039 --> 00:08:06,960
modeling so most of the assets will be

223
00:08:06,960 --> 00:08:08,639
related to the application layer

224
00:08:08,639 --> 00:08:11,039
something like user session id

225
00:08:11,039 --> 00:08:13,680
some sort of information asset for a

226
00:08:13,680 --> 00:08:16,080
specific data store you have database or

227
00:08:16,080 --> 00:08:18,639
file server or whatever so it depends on

228
00:08:18,639 --> 00:08:20,000
the functionality of your application

229
00:08:20,000 --> 00:08:22,240
you need to identify all information

230
00:08:22,240 --> 00:08:25,039
assets in your application

231
00:08:25,039 --> 00:08:27,039
some description and maybe you add some

232
00:08:27,039 --> 00:08:29,039
asset value you can use whatever

233
00:08:29,039 --> 00:08:31,120
framework to evaluate or evaluate the

234
00:08:31,120 --> 00:08:33,919
assets maybe you like cia or any other

235
00:08:33,919 --> 00:08:36,399
options for the asset calculating the

236
00:08:36,399 --> 00:08:37,760
asset value

237
00:08:37,760 --> 00:08:39,120
it's it's important to have the asset

238
00:08:39,120 --> 00:08:41,919
value because in the risk analysis phase

239
00:08:41,919 --> 00:08:45,120
we will use the same input to ensure we

240
00:08:45,120 --> 00:08:46,320
have

241
00:08:46,320 --> 00:08:48,399
accurate risk analysis

242
00:08:48,399 --> 00:08:50,560
process so again

243
00:08:50,560 --> 00:08:52,880
you identify each information asset in

244
00:08:52,880 --> 00:08:55,360
your application you map the information

245
00:08:55,360 --> 00:08:57,839
asset here to the application service we

246
00:08:57,839 --> 00:09:00,320
have a registration service we have some

247
00:09:00,320 --> 00:09:01,360
sort of

248
00:09:01,360 --> 00:09:03,360
application function that provides

249
00:09:03,360 --> 00:09:06,000
specific application service you need to

250
00:09:06,000 --> 00:09:07,920
break down all processes and for each

251
00:09:07,920 --> 00:09:11,360
process you map the information assets

252
00:09:11,360 --> 00:09:12,240
great

253
00:09:12,240 --> 00:09:13,680
so the next

254
00:09:13,680 --> 00:09:16,080
is application uh whiteboarding or

255
00:09:16,080 --> 00:09:18,880
decomposition uh before going to the

256
00:09:18,880 --> 00:09:21,040
this section let's talk about how to

257
00:09:21,040 --> 00:09:23,519
present your architecture for any

258
00:09:23,519 --> 00:09:25,920
application the number of standard to

259
00:09:25,920 --> 00:09:28,560
write or they draw or implement or

260
00:09:28,560 --> 00:09:30,880
document the architecture for any

261
00:09:30,880 --> 00:09:33,680
application one of them is four plus one

262
00:09:33,680 --> 00:09:36,720
model that comes with five views logical

263
00:09:36,720 --> 00:09:38,320
view implementation views cases view

264
00:09:38,320 --> 00:09:40,320
process and deployment view

265
00:09:40,320 --> 00:09:42,560
each one provides some information a

266
00:09:42,560 --> 00:09:44,560
related logical view mainly for

267
00:09:44,560 --> 00:09:46,640
functional requirements um

268
00:09:46,640 --> 00:09:48,399
implementation view are talking about

269
00:09:48,399 --> 00:09:50,959
some inputs some information related

270
00:09:50,959 --> 00:09:53,200
developers or programmers the software

271
00:09:53,200 --> 00:09:55,760
components how they should integrate

272
00:09:55,760 --> 00:09:57,360
together

273
00:09:57,360 --> 00:09:59,040
this is an example of implementation

274
00:09:59,040 --> 00:10:01,279
view process view this is important as

275
00:10:01,279 --> 00:10:03,360
well it's provide details about the

276
00:10:03,360 --> 00:10:05,200
internal processes within your

277
00:10:05,200 --> 00:10:07,839
application components

278
00:10:07,839 --> 00:10:10,240
deployment view again

279
00:10:10,240 --> 00:10:11,920
it's important as well so you are

280
00:10:11,920 --> 00:10:13,440
talking about how the application is

281
00:10:13,440 --> 00:10:15,120
deployed within the infrastructure

282
00:10:15,120 --> 00:10:16,160
itself

283
00:10:16,160 --> 00:10:18,800
and also uh

284
00:10:18,800 --> 00:10:20,800
the deployment of the application on the

285
00:10:20,800 --> 00:10:23,040
same server uh where you have some sort

286
00:10:23,040 --> 00:10:24,720
of directories here for file upload you

287
00:10:24,720 --> 00:10:26,160
have some sort of

288
00:10:26,160 --> 00:10:28,640
ax control required here for other

289
00:10:28,640 --> 00:10:31,360
features you may have some sort layer of

290
00:10:31,360 --> 00:10:34,240
visualization or decolorization here so

291
00:10:34,240 --> 00:10:35,600
you need to understand the deployment

292
00:10:35,600 --> 00:10:37,920
view from the infrastructure perspective

293
00:10:37,920 --> 00:10:40,720
and from the same server perspective

294
00:10:40,720 --> 00:10:42,560
again your understanding for such

295
00:10:42,560 --> 00:10:44,959
information is important in order to

296
00:10:44,959 --> 00:10:47,920
identify actual the the real

297
00:10:47,920 --> 00:10:50,000
application threats in the next phase

298
00:10:50,000 --> 00:10:52,720
for threats identification

299
00:10:52,720 --> 00:10:55,519
the next view is the use case view it's

300
00:10:55,519 --> 00:10:56,959
also important

301
00:10:56,959 --> 00:10:58,560
during the threats identification will

302
00:10:58,560 --> 00:11:01,040
go through

303
00:11:01,040 --> 00:11:03,839
any any discovering some potential

304
00:11:03,839 --> 00:11:06,000
threats related to the logical attacks

305
00:11:06,000 --> 00:11:07,760
so it's very important to have the use

306
00:11:07,760 --> 00:11:10,079
cases and to think about some

307
00:11:10,079 --> 00:11:13,200
of abuse cases for each use case

308
00:11:13,200 --> 00:11:16,079
again this is the best model or best

309
00:11:16,079 --> 00:11:19,040
views that could be

310
00:11:19,040 --> 00:11:21,120
documented in order for anyone

311
00:11:21,120 --> 00:11:23,440
regardless of security to understand the

312
00:11:23,440 --> 00:11:25,440
application functionality here we are

313
00:11:25,440 --> 00:11:27,360
talking about about pure application

314
00:11:27,360 --> 00:11:30,000
architecture there is no security as uh

315
00:11:30,000 --> 00:11:32,079
in this step so

316
00:11:32,079 --> 00:11:33,839
uh during the application threat

317
00:11:33,839 --> 00:11:35,040
modeling

318
00:11:35,040 --> 00:11:37,360
you need to understand each of those

319
00:11:37,360 --> 00:11:39,440
views you need to understand exactly how

320
00:11:39,440 --> 00:11:41,279
the application is running the

321
00:11:41,279 --> 00:11:43,120
implementation view the deployment view

322
00:11:43,120 --> 00:11:45,040
some information about the use cases the

323
00:11:45,040 --> 00:11:46,959
functionality in your application in

324
00:11:46,959 --> 00:11:50,800
order to identify the threats so if this

325
00:11:50,800 --> 00:11:53,120
information is not ready there is no

326
00:11:53,120 --> 00:11:55,440
pure clear documentation for that you

327
00:11:55,440 --> 00:11:57,360
are not able to

328
00:11:57,360 --> 00:11:59,680
have those information in this case you

329
00:11:59,680 --> 00:12:00,639
need to

330
00:12:00,639 --> 00:12:02,800
whiteboard your architecture so why

331
00:12:02,800 --> 00:12:05,120
porting the architecture is an optional

332
00:12:05,120 --> 00:12:07,200
phase if you have understanding through

333
00:12:07,200 --> 00:12:09,120
application you understand everything

334
00:12:09,120 --> 00:12:10,800
especially if the application is small

335
00:12:10,800 --> 00:12:12,720
or you are doing some sort of threat

336
00:12:12,720 --> 00:12:15,200
modeling for only small change

337
00:12:15,200 --> 00:12:17,519
or minor change or application sometimes

338
00:12:17,519 --> 00:12:19,360
you understand exactly you have full

339
00:12:19,360 --> 00:12:21,279
visibility understand everything in this

340
00:12:21,279 --> 00:12:23,680
case no need to have whiteboarding if if

341
00:12:23,680 --> 00:12:25,519
you feel you will you will identify all

342
00:12:25,519 --> 00:12:27,920
possible threats without need to draw to

343
00:12:27,920 --> 00:12:29,360
the death of the diagram

344
00:12:29,360 --> 00:12:30,399
uh

345
00:12:30,399 --> 00:12:32,480
our recommendations usually try to do

346
00:12:32,480 --> 00:12:35,279
that through diagram as much as you can

347
00:12:35,279 --> 00:12:39,040
as long as you have some time and uh

348
00:12:39,040 --> 00:12:41,040
the data flow diagram will give you more

349
00:12:41,040 --> 00:12:43,120
insights more information about the

350
00:12:43,120 --> 00:12:44,480
application

351
00:12:44,480 --> 00:12:46,800
architecture deployment where this will

352
00:12:46,800 --> 00:12:50,560
help you to identify more threats so

353
00:12:50,560 --> 00:12:52,560
when you are going to whiteboard your

354
00:12:52,560 --> 00:12:55,120
application there is no standard way to

355
00:12:55,120 --> 00:12:56,880
have data flow diagram

356
00:12:56,880 --> 00:13:00,240
this could be the common way to draw

357
00:13:00,240 --> 00:13:04,160
the the icons for data flow diagram it's

358
00:13:04,160 --> 00:13:07,040
compatible with microsoft sdl notation

359
00:13:07,040 --> 00:13:09,200
you can use some automated tools like

360
00:13:09,200 --> 00:13:11,680
microsoft street modeler like fridge or

361
00:13:11,680 --> 00:13:13,360
any other tools

362
00:13:13,360 --> 00:13:15,600
or you can do that manually

363
00:13:15,600 --> 00:13:17,600
using wasp thread dragon i highly

364
00:13:17,600 --> 00:13:19,760
recommend this tool or any microsoft

365
00:13:19,760 --> 00:13:21,600
office tools or any other tools that

366
00:13:21,600 --> 00:13:25,839
could help you draw data flow diagram

367
00:13:25,920 --> 00:13:27,920
okay so what are the tabs and tracks

368
00:13:27,920 --> 00:13:29,839
here the first is communication

369
00:13:29,839 --> 00:13:32,959
communication is the key so during data

370
00:13:32,959 --> 00:13:34,720
flow diagram you need to understand

371
00:13:34,720 --> 00:13:36,480
everything about the application

372
00:13:36,480 --> 00:13:37,600
understand

373
00:13:37,600 --> 00:13:39,600
everything about that application and

374
00:13:39,600 --> 00:13:42,079
the way you could and identify all

375
00:13:42,079 --> 00:13:44,480
threats you will not miss any type of

376
00:13:44,480 --> 00:13:45,680
threat

377
00:13:45,680 --> 00:13:47,519
in your application

378
00:13:47,519 --> 00:13:49,440
you sometimes you collect some

379
00:13:49,440 --> 00:13:51,279
documentation but most of the

380
00:13:51,279 --> 00:13:53,680
documentation could be outdated maybe

381
00:13:53,680 --> 00:13:54,480
some

382
00:13:54,480 --> 00:13:56,800
in the agile environment you you you may

383
00:13:56,800 --> 00:13:59,040
miss some important information in the

384
00:13:59,040 --> 00:14:01,120
available documents so communication is

385
00:14:01,120 --> 00:14:03,120
important for application threat

386
00:14:03,120 --> 00:14:04,720
modeling activity you need to get some

387
00:14:04,720 --> 00:14:07,519
information from uh business owners from

388
00:14:07,519 --> 00:14:09,360
uh design other kind of architecture

389
00:14:09,360 --> 00:14:11,040
team from the development team

390
00:14:11,040 --> 00:14:13,040
themselves uh from the deployment from

391
00:14:13,040 --> 00:14:16,160
devops team so try to communicate with

392
00:14:16,160 --> 00:14:18,399
different stakeholders to have full

393
00:14:18,399 --> 00:14:19,839
visibility for understanding for the

394
00:14:19,839 --> 00:14:22,480
application before starting the threat's

395
00:14:22,480 --> 00:14:24,079
identification phase

396
00:14:24,079 --> 00:14:26,320
usually we start by uh

397
00:14:26,320 --> 00:14:28,399
collecting the documentation try to have

398
00:14:28,399 --> 00:14:30,399
high level understanding then schedule

399
00:14:30,399 --> 00:14:31,519
first

400
00:14:31,519 --> 00:14:33,680
stage of interviews or meetings with

401
00:14:33,680 --> 00:14:35,680
number of stakeholders draw the data

402
00:14:35,680 --> 00:14:38,720
diagrams draw everything understand the

403
00:14:38,720 --> 00:14:40,639
mapping between each data flow diagram

404
00:14:40,639 --> 00:14:43,120
and the information assets then schedule

405
00:14:43,120 --> 00:14:45,760
another meeting to confirm and ensure

406
00:14:45,760 --> 00:14:48,480
our understanding for the application

407
00:14:48,480 --> 00:14:49,440
perfect

408
00:14:49,440 --> 00:14:50,160
uh

409
00:14:50,160 --> 00:14:53,440
other steps here related to how depths

410
00:14:53,440 --> 00:14:56,480
how depth you need to go

411
00:14:56,480 --> 00:14:58,959
during the data flow diagram process

412
00:14:58,959 --> 00:15:00,480
this is this is an example of the true

413
00:15:00,480 --> 00:15:03,360
diagram you can find it in some tools uh

414
00:15:03,360 --> 00:15:05,360
you can see here there is client angular

415
00:15:05,360 --> 00:15:07,519
javascript there is there are a number

416
00:15:07,519 --> 00:15:10,399
of processes here

417
00:15:10,880 --> 00:15:13,040
this is okay as the high level data flow

418
00:15:13,040 --> 00:15:15,360
diagram and this is okay also

419
00:15:15,360 --> 00:15:17,519
if you will understand everything about

420
00:15:17,519 --> 00:15:20,240
the application based on that so data

421
00:15:20,240 --> 00:15:22,959
from diagram in general the activity

422
00:15:22,959 --> 00:15:24,160
it should be

423
00:15:24,160 --> 00:15:26,560
executed just to help you understand the

424
00:15:26,560 --> 00:15:29,199
application and identify threats

425
00:15:29,199 --> 00:15:32,560
but sometimes it's recommended to

426
00:15:32,560 --> 00:15:35,600
dig deep in some processes and have some

427
00:15:35,600 --> 00:15:37,600
extra details

428
00:15:37,600 --> 00:15:38,959
those details

429
00:15:38,959 --> 00:15:40,800
those some

430
00:15:40,800 --> 00:15:43,360
some depth could give you more

431
00:15:43,360 --> 00:15:44,720
understanding for the application

432
00:15:44,720 --> 00:15:46,560
component for example here we're talking

433
00:15:46,560 --> 00:15:49,279
about client using angular javascript

434
00:15:49,279 --> 00:15:51,680
this is client-side code that may

435
00:15:51,680 --> 00:15:53,839
include some processes those should be

436
00:15:53,839 --> 00:15:55,920
identified in the client side the same

437
00:15:55,920 --> 00:15:57,279
for authentication service

438
00:15:57,279 --> 00:15:59,120
authentication service you need to have

439
00:15:59,120 --> 00:16:00,959
some details how is the authentication

440
00:16:00,959 --> 00:16:02,959
is going uh maybe there is some sort of

441
00:16:02,959 --> 00:16:05,199
otp here the integration with maybe

442
00:16:05,199 --> 00:16:07,120
other systems for active directory

443
00:16:07,120 --> 00:16:09,440
integration or external with how to

444
00:16:09,440 --> 00:16:11,360
manage the session management after the

445
00:16:11,360 --> 00:16:14,639
authentication some details is required

446
00:16:14,639 --> 00:16:17,600
here in in order to ensure all threats

447
00:16:17,600 --> 00:16:20,839
against the authentication feature is

448
00:16:20,839 --> 00:16:24,160
considered uh here is another example of

449
00:16:24,160 --> 00:16:26,160
high level threat modeling data flow

450
00:16:26,160 --> 00:16:28,240
diagram we're talking about application

451
00:16:28,240 --> 00:16:30,880
server so service at a store

452
00:16:30,880 --> 00:16:33,600
very high level

453
00:16:34,639 --> 00:16:36,639
yes this is another example very high

454
00:16:36,639 --> 00:16:38,880
level so web application data stores

455
00:16:38,880 --> 00:16:41,440
background broker processes again it's

456
00:16:41,440 --> 00:16:42,560
it's it's

457
00:16:42,560 --> 00:16:46,000
okay as long as you you have enough

458
00:16:46,000 --> 00:16:48,000
information uh to do threat

459
00:16:48,000 --> 00:16:50,880
identification okay so

460
00:16:50,880 --> 00:16:51,839
what

461
00:16:51,839 --> 00:16:54,160
let's go ahead and an example of what

462
00:16:54,160 --> 00:16:56,560
our other processes could be identified

463
00:16:56,560 --> 00:16:58,639
this is an example of client-side code

464
00:16:58,639 --> 00:17:00,800
whatever react angular javascript

465
00:17:00,800 --> 00:17:03,360
whatever client-side code

466
00:17:03,360 --> 00:17:05,199
you need to identify identify some

467
00:17:05,199 --> 00:17:07,760
internal processes within

468
00:17:07,760 --> 00:17:09,119
the client side you are talking about

469
00:17:09,119 --> 00:17:11,119
the browser where most of the through

470
00:17:11,119 --> 00:17:13,760
diagrams draw the browser like extended

471
00:17:13,760 --> 00:17:16,559
entity and that is that's it if you have

472
00:17:16,559 --> 00:17:17,280
some

473
00:17:17,280 --> 00:17:20,640
side code you need to go go and draw the

474
00:17:20,640 --> 00:17:22,799
processes that could be implemented in

475
00:17:22,799 --> 00:17:24,799
the client side especially if if you

476
00:17:24,799 --> 00:17:26,720
have some integration from the client

477
00:17:26,720 --> 00:17:29,440
side let's have another example there is

478
00:17:29,440 --> 00:17:31,600
some sort of payment with maybe visa or

479
00:17:31,600 --> 00:17:33,760
mastercard in this case

480
00:17:33,760 --> 00:17:36,080
within the client side itself it is

481
00:17:36,080 --> 00:17:37,760
communication with the

482
00:17:37,760 --> 00:17:39,600
back end to give to

483
00:17:39,600 --> 00:17:41,280
maybe gather some information about the

484
00:17:41,280 --> 00:17:44,320
payment but the payment itself is from

485
00:17:44,320 --> 00:17:47,520
the browser to the payment gateway or

486
00:17:47,520 --> 00:17:50,240
visa mastercard so in this case there

487
00:17:50,240 --> 00:17:52,000
are a number of threads could be

488
00:17:52,000 --> 00:17:56,000
identified in this step that require

489
00:17:56,000 --> 00:17:58,080
more details in high level design or

490
00:17:58,080 --> 00:18:00,559
data for diagram in order to have full

491
00:18:00,559 --> 00:18:03,360
visibility for understanding uh before

492
00:18:03,360 --> 00:18:05,280
going to the threats identification

493
00:18:05,280 --> 00:18:06,799
phase

494
00:18:06,799 --> 00:18:10,000
uh another steps related to

495
00:18:10,000 --> 00:18:12,400
the using of microservices in your

496
00:18:12,400 --> 00:18:14,559
environment so whatever microservice you

497
00:18:14,559 --> 00:18:16,960
would the code application itself is

498
00:18:16,960 --> 00:18:19,039
implemented based on microservices uh

499
00:18:19,039 --> 00:18:22,480
integrated with uh api gateway or not so

500
00:18:22,480 --> 00:18:24,960
usually if your application is built to

501
00:18:24,960 --> 00:18:27,520
microservices the microservices will be

502
00:18:27,520 --> 00:18:28,480
the core

503
00:18:28,480 --> 00:18:30,400
of any

504
00:18:30,400 --> 00:18:32,000
data flow

505
00:18:32,000 --> 00:18:34,160
related to any application service so

506
00:18:34,160 --> 00:18:36,400
whatever application service will

507
00:18:36,400 --> 00:18:39,840
utilize some processes from one or more

508
00:18:39,840 --> 00:18:42,400
microservices in your application that's

509
00:18:42,400 --> 00:18:44,720
why if you are going to draw data from

510
00:18:44,720 --> 00:18:47,840
diagram you may you may uh use the

511
00:18:47,840 --> 00:18:50,320
microservices as the core and then based

512
00:18:50,320 --> 00:18:52,640
on the environment you may be there

513
00:18:52,640 --> 00:18:53,919
there is some sort of integration with

514
00:18:53,919 --> 00:18:56,240
api gateway

515
00:18:56,240 --> 00:18:57,200
and

516
00:18:57,200 --> 00:18:58,720
this could be the layer to integrate

517
00:18:58,720 --> 00:19:00,880
with some external entities most of the

518
00:19:00,880 --> 00:19:02,720
microservices

519
00:19:02,720 --> 00:19:04,720
sometimes actually is is

520
00:19:04,720 --> 00:19:06,720
linked with specific data store you need

521
00:19:06,720 --> 00:19:09,840
to highlight those layers as well so for

522
00:19:09,840 --> 00:19:12,960
each data flow diagram you need to and

523
00:19:12,960 --> 00:19:14,640
understand that for processes in the

524
00:19:14,640 --> 00:19:16,480
client side the communication with the

525
00:19:16,480 --> 00:19:17,760
back end

526
00:19:17,760 --> 00:19:20,000
if you are if you're using microservices

527
00:19:20,000 --> 00:19:23,120
identify microservices make it the core

528
00:19:23,120 --> 00:19:26,400
on the new data flow diagram where they

529
00:19:26,400 --> 00:19:29,120
some processes will be utilized based on

530
00:19:29,120 --> 00:19:31,520
specific data flow for specific

531
00:19:31,520 --> 00:19:33,520
application service

532
00:19:33,520 --> 00:19:36,000
one more thing related to some common

533
00:19:36,000 --> 00:19:36,840
some

534
00:19:36,840 --> 00:19:39,919
uh any some processes that could be

535
00:19:39,919 --> 00:19:41,840
integrated with different processes in

536
00:19:41,840 --> 00:19:43,919
your data diagram like logging for

537
00:19:43,919 --> 00:19:46,000
example in this case you can make it

538
00:19:46,000 --> 00:19:48,080
easy just to have some sort of

539
00:19:48,080 --> 00:19:51,440
vectors there where you collect

540
00:19:51,440 --> 00:19:53,520
the logs from different processes and

541
00:19:53,520 --> 00:19:55,520
communicate with extended entity like

542
00:19:55,520 --> 00:19:57,280
sam solution

543
00:19:57,280 --> 00:20:00,400
so this is just some recommendations to

544
00:20:00,400 --> 00:20:02,640
draw data flow diagrams

545
00:20:02,640 --> 00:20:04,480
for a different component in your

546
00:20:04,480 --> 00:20:07,120
application it's not mandatory at all to

547
00:20:07,120 --> 00:20:09,039
go in such depth

548
00:20:09,039 --> 00:20:12,080
to have data diagram it's it's just

549
00:20:12,080 --> 00:20:14,000
recommended in case you need to

550
00:20:14,000 --> 00:20:16,159
understand more about how the

551
00:20:16,159 --> 00:20:18,480
application is running and then this

552
00:20:18,480 --> 00:20:20,880
will be very helpful if you if you need

553
00:20:20,880 --> 00:20:22,480
to to go the next step where you need to

554
00:20:22,480 --> 00:20:25,120
identify threads here there and there

555
00:20:25,120 --> 00:20:27,039
it's very important to uh to understand

556
00:20:27,039 --> 00:20:29,360
everything so if you can without

557
00:20:29,360 --> 00:20:31,440
though doing this detailed data for

558
00:20:31,440 --> 00:20:33,200
diagram it's okay

559
00:20:33,200 --> 00:20:35,280
if you need to understand more data

560
00:20:35,280 --> 00:20:38,080
diagram should be uh should include some

561
00:20:38,080 --> 00:20:41,120
uh extra processes where you understand

562
00:20:41,120 --> 00:20:43,679
everything in the next step you will

563
00:20:43,679 --> 00:20:45,520
find it more easy

564
00:20:45,520 --> 00:20:49,440
to identify some threads especially the

565
00:20:49,440 --> 00:20:51,919
logical attacks

566
00:20:51,919 --> 00:20:53,840
as you can see some inputs here come

567
00:20:53,840 --> 00:20:55,760
coming from the logical view some from

568
00:20:55,760 --> 00:20:58,080
the processes view and others from the

569
00:20:58,080 --> 00:21:00,159
deployment view that's why the four plus

570
00:21:00,159 --> 00:21:02,720
model is important actually you need to

571
00:21:02,720 --> 00:21:04,880
you need to you don't need to use a four

572
00:21:04,880 --> 00:21:06,960
plus model any application architecture

573
00:21:06,960 --> 00:21:08,320
model will

574
00:21:08,320 --> 00:21:09,600
provide you with the required

575
00:21:09,600 --> 00:21:11,600
information about the logical the

576
00:21:11,600 --> 00:21:13,120
processes in your application and the

577
00:21:13,120 --> 00:21:17,520
deployment and even the use cases

578
00:21:17,520 --> 00:21:20,159
other type of drawing

579
00:21:20,159 --> 00:21:22,480
your application application using call

580
00:21:22,480 --> 00:21:24,320
flow connection flow or sometimes called

581
00:21:24,320 --> 00:21:26,799
sequence flow so

582
00:21:26,799 --> 00:21:29,280
in some cases in some cases

583
00:21:29,280 --> 00:21:31,919
you need to have some sort of sequence

584
00:21:31,919 --> 00:21:34,320
flow for specific function

585
00:21:34,320 --> 00:21:36,400
uh

586
00:21:36,400 --> 00:21:38,799
i cannot say this is mandatory for any

587
00:21:38,799 --> 00:21:41,760
application function it depends in your

588
00:21:41,760 --> 00:21:44,159
understanding if it's clear for you

589
00:21:44,159 --> 00:21:45,760
based on data flow diagram that's that's

590
00:21:45,760 --> 00:21:47,840
okay in some cases okay there is some

591
00:21:47,840 --> 00:21:49,520
sort of integration here with internal

592
00:21:49,520 --> 00:21:51,679
next entity and there is some sort of

593
00:21:51,679 --> 00:21:53,679
payment going there and there is another

594
00:21:53,679 --> 00:21:56,400
one is integrated with some sort of user

595
00:21:56,400 --> 00:21:59,120
identification database and in from data

596
00:21:59,120 --> 00:22:01,039
flow diagram installation cannot

597
00:22:01,039 --> 00:22:02,960
understand can you guess how the

598
00:22:02,960 --> 00:22:05,039
sequence is going from the client and

599
00:22:05,039 --> 00:22:07,200
back-end server sometimes it's it's

600
00:22:07,200 --> 00:22:09,440
called good to have connection flow for

601
00:22:09,440 --> 00:22:11,600
specific function your application to

602
00:22:11,600 --> 00:22:13,120
understand more

603
00:22:13,120 --> 00:22:15,679
most of the partition pen testers they

604
00:22:15,679 --> 00:22:17,600
in during the penetration testing they

605
00:22:17,600 --> 00:22:20,000
need to understand some sort of request

606
00:22:20,000 --> 00:22:22,480
response for specific function they draw

607
00:22:22,480 --> 00:22:24,480
some sort of very quickly a connection

608
00:22:24,480 --> 00:22:27,440
flow so they can identify some

609
00:22:27,440 --> 00:22:29,679
threats or some vulnerabilities could be

610
00:22:29,679 --> 00:22:32,080
exploitable

611
00:22:32,080 --> 00:22:35,120
another type is the logical flow or the

612
00:22:35,120 --> 00:22:36,640
logical

613
00:22:36,640 --> 00:22:39,360
steps for specific function it's also

614
00:22:39,360 --> 00:22:42,480
one of the ways that you may use to draw

615
00:22:42,480 --> 00:22:45,120
some functions to understand the logic

616
00:22:45,120 --> 00:22:47,120
this is also important and we will go

617
00:22:47,120 --> 00:22:49,120
for the same steps here during the

618
00:22:49,120 --> 00:22:50,720
threats identification

619
00:22:50,720 --> 00:22:52,559
where you are going to identify some

620
00:22:52,559 --> 00:22:55,520
logical threats

621
00:22:55,520 --> 00:22:56,799
another steps

622
00:22:56,799 --> 00:22:58,880
for drawing data flow diagram try to

623
00:22:58,880 --> 00:23:01,440
draw data from diagram where

624
00:23:01,440 --> 00:23:03,440
they will be understood by the social

625
00:23:03,440 --> 00:23:05,919
developers or architecture team try to

626
00:23:05,919 --> 00:23:08,159
make it mvc model so they understand how

627
00:23:08,159 --> 00:23:09,360
these those are processes in the

628
00:23:09,360 --> 00:23:11,280
controller those are all in the model

629
00:23:11,280 --> 00:23:13,360
maybe through those interviews try to

630
00:23:13,360 --> 00:23:16,080
make it in layers so those are the

631
00:23:16,080 --> 00:23:18,000
process in the client side those are the

632
00:23:18,000 --> 00:23:19,440
process for

633
00:23:19,440 --> 00:23:21,919
shared services here there are some

634
00:23:21,919 --> 00:23:24,000
extended entities third parties try to

635
00:23:24,000 --> 00:23:26,400
make it easy for anyone to understand

636
00:23:26,400 --> 00:23:28,320
why it's it's important to have in such

637
00:23:28,320 --> 00:23:31,039
cases because data for diagram it should

638
00:23:31,039 --> 00:23:32,480
be reviewed with a development team

639
00:23:32,480 --> 00:23:33,440
architecture team with other

640
00:23:33,440 --> 00:23:35,039
stakeholders in the environment so it's

641
00:23:35,039 --> 00:23:37,200
very important to have this this data

642
00:23:37,200 --> 00:23:39,360
flow diagram understood by them

643
00:23:39,360 --> 00:23:41,919
so they can highlight okay no this this

644
00:23:41,919 --> 00:23:44,320
process is not we are using another type

645
00:23:44,320 --> 00:23:46,720
of services here or another type of

646
00:23:46,720 --> 00:23:49,120
connections here so

647
00:23:49,120 --> 00:23:51,679
also it's very important to have

648
00:23:51,679 --> 00:23:53,600
uh have the data for diagram layered and

649
00:23:53,600 --> 00:23:55,440
easy to understand because

650
00:23:55,440 --> 00:23:56,720
in the future

651
00:23:56,720 --> 00:23:58,400
during the any change in the application

652
00:23:58,400 --> 00:23:59,679
you already have

653
00:23:59,679 --> 00:24:01,840
you have identified all application

654
00:24:01,840 --> 00:24:04,320
services processes and data flow diagram

655
00:24:04,320 --> 00:24:06,640
for each application service so in the

656
00:24:06,640 --> 00:24:08,880
future in case there is any change you

657
00:24:08,880 --> 00:24:11,279
can just ask the architecture team or

658
00:24:11,279 --> 00:24:13,520
any stakeholder in in your organization

659
00:24:13,520 --> 00:24:16,080
just please highlight which data flow is

660
00:24:16,080 --> 00:24:18,640
impacted in this change so instead of

661
00:24:18,640 --> 00:24:20,480
doing threat modeling again for other

662
00:24:20,480 --> 00:24:22,400
for all the application you can just

663
00:24:22,400 --> 00:24:24,640
focus on specific

664
00:24:24,640 --> 00:24:26,720
data flow diagram or specific

665
00:24:26,720 --> 00:24:28,720
feature in your application to thread

666
00:24:28,720 --> 00:24:30,880
model the any application

667
00:24:30,880 --> 00:24:34,080
threads and also it's it's very helpful

668
00:24:34,080 --> 00:24:36,400
for the static analysis dynamic analysis

669
00:24:36,400 --> 00:24:38,000
translation testing whatever security

670
00:24:38,000 --> 00:24:40,640
gates you have to be just focusing on

671
00:24:40,640 --> 00:24:42,720
this change in your application it's

672
00:24:42,720 --> 00:24:44,480
very important to have uh the

673
00:24:44,480 --> 00:24:46,320
application threat modeling or sorry the

674
00:24:46,320 --> 00:24:48,480
application data flow diagram in very

675
00:24:48,480 --> 00:24:50,640
easy way to understood by anyone in the

676
00:24:50,640 --> 00:24:53,120
environment

677
00:24:53,520 --> 00:24:56,960
great so next tip related to

678
00:24:56,960 --> 00:24:58,400
uh

679
00:24:58,400 --> 00:25:00,640
threats identification actually this is

680
00:25:00,640 --> 00:25:04,640
the most any challenging step in threat

681
00:25:04,640 --> 00:25:06,400
modeling uh

682
00:25:06,400 --> 00:25:08,159
you understand everything understand the

683
00:25:08,159 --> 00:25:10,720
application components the integrations

684
00:25:10,720 --> 00:25:13,360
uh the deployment the everything about

685
00:25:13,360 --> 00:25:15,360
your application and then now it is the

686
00:25:15,360 --> 00:25:18,080
time to say where are the threads in

687
00:25:18,080 --> 00:25:19,919
your application

688
00:25:19,919 --> 00:25:21,840
sometimes you go okay i need to file

689
00:25:21,840 --> 00:25:23,760
some threads let's have our stop then

690
00:25:23,760 --> 00:25:26,000
let's have uh whatever application

691
00:25:26,000 --> 00:25:28,480
threat library and let's okay there is

692
00:25:28,480 --> 00:25:30,000
possibility for sql injection there is

693
00:25:30,000 --> 00:25:31,760
possibility for whatever threat in your

694
00:25:31,760 --> 00:25:35,600
application this way may be good but you

695
00:25:35,600 --> 00:25:37,600
may miss many

696
00:25:37,600 --> 00:25:40,480
application specific threads so uh how

697
00:25:40,480 --> 00:25:41,440
to

698
00:25:41,440 --> 00:25:44,159
to go in this process our recommendation

699
00:25:44,159 --> 00:25:46,720
is to go in different directions first

700
00:25:46,720 --> 00:25:49,679
try to have the attack tree understand

701
00:25:49,679 --> 00:25:51,760
the attack objective and understand the

702
00:25:51,760 --> 00:25:52,880
possible

703
00:25:52,880 --> 00:25:55,279
attack objectives threat objectives for

704
00:25:55,279 --> 00:25:56,960
your threat actors understand your

705
00:25:56,960 --> 00:25:58,799
threat actors actually first this is

706
00:25:58,799 --> 00:26:01,760
important and then try to draw attack 3

707
00:26:01,760 --> 00:26:03,840
for all possible or potential threats

708
00:26:03,840 --> 00:26:05,440
against the application

709
00:26:05,440 --> 00:26:07,679
then

710
00:26:07,760 --> 00:26:10,400
for each application or for each attack

711
00:26:10,400 --> 00:26:13,520
three try to have to try to use threat

712
00:26:13,520 --> 00:26:15,919
libraries vulnerability libraries even

713
00:26:15,919 --> 00:26:18,480
some mitigation or controls libraries

714
00:26:18,480 --> 00:26:20,320
that provide some controls against some

715
00:26:20,320 --> 00:26:22,640
threats so you can

716
00:26:22,640 --> 00:26:25,440
check those threads so use the threat

717
00:26:25,440 --> 00:26:27,279
libraries or vulnerabilities libraries

718
00:26:27,279 --> 00:26:30,080
after you identify the attack tree

719
00:26:30,080 --> 00:26:32,480
against your application then try to

720
00:26:32,480 --> 00:26:34,400
understand the use cases and for each

721
00:26:34,400 --> 00:26:36,720
use case try to think about one or more

722
00:26:36,720 --> 00:26:39,679
abuse cases against your application so

723
00:26:39,679 --> 00:26:41,760
you can use one of attack trees this

724
00:26:41,760 --> 00:26:44,480
example from the pasta methodology

725
00:26:44,480 --> 00:26:45,840
in the parent

726
00:26:45,840 --> 00:26:48,400
node here this is the threat objective

727
00:26:48,400 --> 00:26:50,880
and the underlying nodes here this is

728
00:26:50,880 --> 00:26:52,480
the target the component of your

729
00:26:52,480 --> 00:26:54,960
application and subsequence layers here

730
00:26:54,960 --> 00:26:57,440
are the where you can use application

731
00:26:57,440 --> 00:27:00,400
thread libraries to build all possible

732
00:27:00,400 --> 00:27:03,919
attacks threats against your application

733
00:27:03,919 --> 00:27:05,360
what are threat libraries that you can

734
00:27:05,360 --> 00:27:07,600
use open a video libraries or ask comes

735
00:27:07,600 --> 00:27:09,360
with different projects that you can use

736
00:27:09,360 --> 00:27:12,640
wasp asds highly recommend it comes with

737
00:27:12,640 --> 00:27:14,720
too many threads like or too many

738
00:27:14,720 --> 00:27:16,880
domains that you can discover or can you

739
00:27:16,880 --> 00:27:18,960
you need to check once testing guide

740
00:27:18,960 --> 00:27:21,760
different uh projects based on whatever

741
00:27:21,760 --> 00:27:24,559
type of application however even those

742
00:27:24,559 --> 00:27:27,600
doesn't include everything so

743
00:27:27,600 --> 00:27:30,080
some of the the the frameworks or the

744
00:27:30,080 --> 00:27:32,000
libraries built from

745
00:27:32,000 --> 00:27:34,799
attack perspective like or strides from

746
00:27:34,799 --> 00:27:37,120
microsoft like whatever other methods

747
00:27:37,120 --> 00:27:38,880
and others from defensive perspective

748
00:27:38,880 --> 00:27:41,520
all of them are great however you need

749
00:27:41,520 --> 00:27:44,080
to identify the application specific

750
00:27:44,080 --> 00:27:46,080
vulnerabilities or threats

751
00:27:46,080 --> 00:27:48,799
this is another another example of uh

752
00:27:48,799 --> 00:27:50,880
threat library it's from autodesk

753
00:27:50,880 --> 00:27:53,840
continuous threat modeling so they have

754
00:27:53,840 --> 00:27:56,640
different domains and for each domain

755
00:27:56,640 --> 00:27:59,120
they identify some uh

756
00:27:59,120 --> 00:28:01,520
they identify some questions for each

757
00:28:01,520 --> 00:28:03,919
domain where you can try to answer those

758
00:28:03,919 --> 00:28:05,360
questions based on your understanding

759
00:28:05,360 --> 00:28:08,000
for data flow diagram and try to okay

760
00:28:08,000 --> 00:28:10,480
think about attack trees or attack

761
00:28:10,480 --> 00:28:13,600
vectors based on those domains

762
00:28:13,600 --> 00:28:17,279
microsoft comes with stride methodology

763
00:28:17,279 --> 00:28:18,960
stride is good

764
00:28:18,960 --> 00:28:20,720
but you need to understand what is

765
00:28:20,720 --> 00:28:22,640
strike strike is to identify some

766
00:28:22,640 --> 00:28:25,360
threats by classifying attack goals that

767
00:28:25,360 --> 00:28:27,760
means it's more to attack a

768
00:28:27,760 --> 00:28:29,679
categorization

769
00:28:29,679 --> 00:28:31,919
but you cannot say stride is threat

770
00:28:31,919 --> 00:28:34,960
library or vulnerability library so

771
00:28:34,960 --> 00:28:37,039
they define some some

772
00:28:37,039 --> 00:28:39,440
attack goals and they you can do some

773
00:28:39,440 --> 00:28:40,960
sort of mapping okay i have that of a

774
00:28:40,960 --> 00:28:42,559
diagram there is possibilities for

775
00:28:42,559 --> 00:28:44,000
tampering here but there's possibility

776
00:28:44,000 --> 00:28:45,840
for spoofing here there is possibility

777
00:28:45,840 --> 00:28:47,760
for the drive service maybe add some

778
00:28:47,760 --> 00:28:49,679
entry points here here

779
00:28:49,679 --> 00:28:52,320
so based on your understanding you just

780
00:28:52,320 --> 00:28:54,960
highlight which

781
00:28:54,960 --> 00:28:57,279
which area that that include me some

782
00:28:57,279 --> 00:28:59,600
some sort of threats based on stride

783
00:28:59,600 --> 00:29:02,320
against right it's not threats library

784
00:29:02,320 --> 00:29:04,000
or vulnerability library that you can

785
00:29:04,000 --> 00:29:06,480
use just to have list of or threats

786
00:29:06,480 --> 00:29:08,000
against your application but it's

787
00:29:08,000 --> 00:29:10,720
methodology that you can utilize during

788
00:29:10,720 --> 00:29:11,360
the

789
00:29:11,360 --> 00:29:13,679
attack tree identification or threat

790
00:29:13,679 --> 00:29:16,159
signification

791
00:29:16,159 --> 00:29:18,799
okay so what are the tips here first

792
00:29:18,799 --> 00:29:20,640
build your own application specific

793
00:29:20,640 --> 00:29:22,480
threat library there is no static list

794
00:29:22,480 --> 00:29:24,640
of threads each application based on the

795
00:29:24,640 --> 00:29:28,240
functionality they they may come with

796
00:29:28,240 --> 00:29:30,000
some custom threads that you need to

797
00:29:30,000 --> 00:29:31,520
identify based on the logic free

798
00:29:31,520 --> 00:29:33,679
application uh let's assume you have

799
00:29:33,679 --> 00:29:36,320
applications that

800
00:29:36,399 --> 00:29:39,360
utilize gbs location for authentication

801
00:29:39,360 --> 00:29:41,919
for example some hr applications is

802
00:29:41,919 --> 00:29:45,120
going down there now so you just go to

803
00:29:45,120 --> 00:29:48,080
specific place to authenticate with

804
00:29:48,080 --> 00:29:49,520
the application

805
00:29:49,520 --> 00:29:52,720
in this case some sort of gbs spoofing

806
00:29:52,720 --> 00:29:54,640
threats could be one of the threats

807
00:29:54,640 --> 00:29:56,159
against your application you will not

808
00:29:56,159 --> 00:29:58,320
find something it's gbs

809
00:29:58,320 --> 00:30:00,880
spoofing in any of those libraries like

810
00:30:00,880 --> 00:30:03,840
wasp svs or standard you may sometimes

811
00:30:03,840 --> 00:30:06,080
you may find some categories related

812
00:30:06,080 --> 00:30:08,640
authentication or some details about

813
00:30:08,640 --> 00:30:10,880
some recommendation that maybe

814
00:30:10,880 --> 00:30:12,559
give you some insights about such

815
00:30:12,559 --> 00:30:14,480
threats however you need to understand

816
00:30:14,480 --> 00:30:16,320
application functionality and based on

817
00:30:16,320 --> 00:30:18,000
the functionality you

818
00:30:18,000 --> 00:30:21,279
identify application specific threat

819
00:30:21,279 --> 00:30:23,440
library you can go through it

820
00:30:23,440 --> 00:30:24,480
through

821
00:30:24,480 --> 00:30:26,480
the same process of attack trees and

822
00:30:26,480 --> 00:30:28,240
threat libraries after that

823
00:30:28,240 --> 00:30:30,399
other inputs are from the internal and

824
00:30:30,399 --> 00:30:32,559
external integrations very important to

825
00:30:32,559 --> 00:30:33,760
understand the deployment and

826
00:30:33,760 --> 00:30:35,200
integration model

827
00:30:35,200 --> 00:30:38,000
so you you understand every or you

828
00:30:38,000 --> 00:30:39,840
identify possible threats or potential

829
00:30:39,840 --> 00:30:41,600
threats from internal and external

830
00:30:41,600 --> 00:30:43,919
integrations dependencies third-party

831
00:30:43,919 --> 00:30:46,320
libraries are important for blas views

832
00:30:46,320 --> 00:30:49,039
again under try to understand about the

833
00:30:49,039 --> 00:30:51,039
logic for application try to understand

834
00:30:51,039 --> 00:30:51,760
that

835
00:30:51,760 --> 00:30:53,760
the processes in your application the

836
00:30:53,760 --> 00:30:55,919
deployment model the other views they

837
00:30:55,919 --> 00:30:58,000
come they may come with

838
00:30:58,000 --> 00:31:01,279
with uh new threats that require some uh

839
00:31:01,279 --> 00:31:02,559
analysis

840
00:31:02,559 --> 00:31:04,880
devops tools they have another threads

841
00:31:04,880 --> 00:31:06,640
internal accelerate intelligence

842
00:31:06,640 --> 00:31:08,559
intelligence very important as well

843
00:31:08,559 --> 00:31:09,519
uh

844
00:31:09,519 --> 00:31:11,760
third intelligence from internal that

845
00:31:11,760 --> 00:31:13,919
means from different internal analysis

846
00:31:13,919 --> 00:31:16,880
of modelling threat intelligence feeds

847
00:31:16,880 --> 00:31:19,440
based in some internal monitoring and

848
00:31:19,440 --> 00:31:21,519
activities and also from the external

849
00:31:21,519 --> 00:31:25,600
those feeds may provide some sort of

850
00:31:25,600 --> 00:31:27,120
attack tree

851
00:31:27,120 --> 00:31:29,679
for specific actors they are targeting

852
00:31:29,679 --> 00:31:30,559
your

853
00:31:30,559 --> 00:31:33,120
organization so if you have such input

854
00:31:33,120 --> 00:31:35,919
you may understand okay this attack um

855
00:31:35,919 --> 00:31:38,080
three or this actor usually we are doing

856
00:31:38,080 --> 00:31:40,399
one two three four one of their

857
00:31:40,399 --> 00:31:43,600
activities is to do some sort of uh try

858
00:31:43,600 --> 00:31:45,760
to attack the application by this way in

859
00:31:45,760 --> 00:31:48,399
this case you may discover some threats

860
00:31:48,399 --> 00:31:50,640
that require some modeling or

861
00:31:50,640 --> 00:31:53,679
you may understand the way of specific

862
00:31:53,679 --> 00:31:56,080
attack vector in and then

863
00:31:56,080 --> 00:31:58,559
you focus to

864
00:31:58,559 --> 00:32:01,760
add extra detection controls based on

865
00:32:01,760 --> 00:32:03,679
your understanding for

866
00:32:03,679 --> 00:32:06,080
the threat actors threat intelligence is

867
00:32:06,080 --> 00:32:08,960
very very important uh source for threat

868
00:32:08,960 --> 00:32:10,399
modeling the same for penetration

869
00:32:10,399 --> 00:32:11,519
testing vulnerability assessment to

870
00:32:11,519 --> 00:32:13,039
whatever activity security gates in the

871
00:32:13,039 --> 00:32:14,960
organization they may discover some

872
00:32:14,960 --> 00:32:17,919
threats extra so if the threat modeling

873
00:32:17,919 --> 00:32:20,159
is an ongoing process you may get some

874
00:32:20,159 --> 00:32:22,720
feeds from different stages

875
00:32:22,720 --> 00:32:24,799
automated tools

876
00:32:24,799 --> 00:32:27,840
some tools comes with threats analysis

877
00:32:27,840 --> 00:32:29,519
in automated way

878
00:32:29,519 --> 00:32:31,039
those any

879
00:32:31,039 --> 00:32:32,240
there are there are a number of tools

880
00:32:32,240 --> 00:32:34,240
there to to make threat modeling like

881
00:32:34,240 --> 00:32:36,320
microsoft's threat modeling

882
00:32:36,320 --> 00:32:39,600
like thread gi like ferric modeler

883
00:32:39,600 --> 00:32:41,200
just take care about some false

884
00:32:41,200 --> 00:32:43,679
positives they provide and also be sure

885
00:32:43,679 --> 00:32:45,919
sometimes they will not discover some

886
00:32:45,919 --> 00:32:49,039
logical threats against your application

887
00:32:49,039 --> 00:32:51,600
don't miss non-technical threats

888
00:32:51,600 --> 00:32:54,080
it depends on the scope if your scope is

889
00:32:54,080 --> 00:32:56,640
just pure technical uh threads

890
00:32:56,640 --> 00:32:58,159
against your application you just focus

891
00:32:58,159 --> 00:33:00,080
about that but if if your scope will

892
00:33:00,080 --> 00:33:03,360
include other non-technical threats then

893
00:33:03,360 --> 00:33:05,200
you need to identify those technolon

894
00:33:05,200 --> 00:33:07,120
technical like segregation of duties

895
00:33:07,120 --> 00:33:09,279
access control like backup redundancy

896
00:33:09,279 --> 00:33:10,399
whatever

897
00:33:10,399 --> 00:33:12,720
non-technical issues in your application

898
00:33:12,720 --> 00:33:14,720
those comes with

899
00:33:14,720 --> 00:33:16,480
some threads

900
00:33:16,480 --> 00:33:18,960
they may impact the application and you

901
00:33:18,960 --> 00:33:20,960
need to identify again based on your

902
00:33:20,960 --> 00:33:23,519
scope you may exclude some non-technical

903
00:33:23,519 --> 00:33:24,640
threats and

904
00:33:24,640 --> 00:33:26,720
maybe those could be handled by other

905
00:33:26,720 --> 00:33:28,559
risk management activity in your

906
00:33:28,559 --> 00:33:31,120
organization

907
00:33:31,279 --> 00:33:34,960
perfect so next step related to

908
00:33:34,960 --> 00:33:37,519
uh identifying some flaws or threats

909
00:33:37,519 --> 00:33:39,039
against

910
00:33:39,039 --> 00:33:42,399
related to the design and the logical uh

911
00:33:42,399 --> 00:33:45,039
issues in your application so uh there

912
00:33:45,039 --> 00:33:46,159
are a number of

913
00:33:46,159 --> 00:33:48,080
any references that you can use there is

914
00:33:48,080 --> 00:33:49,840
book about avoiding the top tens of

915
00:33:49,840 --> 00:33:51,600
thirties design flow

916
00:33:51,600 --> 00:33:53,120
they identify

917
00:33:53,120 --> 00:33:56,399
like 10 domains that require some review

918
00:33:56,399 --> 00:33:58,799
during the threats identification some

919
00:33:58,799 --> 00:34:00,960
issues related to the or some threats

920
00:34:00,960 --> 00:34:02,799
related to the design phase could be

921
00:34:02,799 --> 00:34:04,559
identified in the same way actually

922
00:34:04,559 --> 00:34:06,480
there are a number of references there

923
00:34:06,480 --> 00:34:08,320
there is a securing software design is

924
00:34:08,320 --> 00:34:10,800
hard this is like blog post uh also it

925
00:34:10,800 --> 00:34:12,639
comes with 13

926
00:34:12,639 --> 00:34:14,960
uh domains in related to the design

927
00:34:14,960 --> 00:34:17,918
issues that could be reviewed during the

928
00:34:17,918 --> 00:34:20,159
threats identification that may comes

929
00:34:20,159 --> 00:34:22,320
with extra threats that require some

930
00:34:22,320 --> 00:34:24,000
sort of extra mitigation against your

931
00:34:24,000 --> 00:34:25,599
application

932
00:34:25,599 --> 00:34:27,119
logical threats

933
00:34:27,119 --> 00:34:29,359
most challenging threats to to be

934
00:34:29,359 --> 00:34:31,359
identified

935
00:34:31,359 --> 00:34:33,839
logical threats you there are two types

936
00:34:33,839 --> 00:34:36,480
we're talking about how to bypass some

937
00:34:36,480 --> 00:34:38,879
enforcement of some of the business

938
00:34:38,879 --> 00:34:39,918
logic

939
00:34:39,918 --> 00:34:40,800
and

940
00:34:40,800 --> 00:34:43,199
this is some something like okay so for

941
00:34:43,199 --> 00:34:45,599
specific functionality there is a

942
00:34:45,599 --> 00:34:47,760
process to execute this functionality in

943
00:34:47,760 --> 00:34:49,359
your application you need to go in this

944
00:34:49,359 --> 00:34:51,040
step and this step and there is a

945
00:34:51,040 --> 00:34:52,560
requirement to do one two three four

946
00:34:52,560 --> 00:34:54,480
before going to the next step

947
00:34:54,480 --> 00:34:56,639
so you understand the logic for your

948
00:34:56,639 --> 00:34:59,760
application and then try to identify

949
00:34:59,760 --> 00:35:03,280
some issues some uh

950
00:35:03,280 --> 00:35:05,280
logical issues to maybe bypass some

951
00:35:05,280 --> 00:35:09,119
steps maybe you to execute extras

952
00:35:09,119 --> 00:35:12,880
i add some sort of steps extra to bypass

953
00:35:12,880 --> 00:35:15,200
some controls another type is to bypass

954
00:35:15,200 --> 00:35:18,000
security controls against uh

955
00:35:18,000 --> 00:35:19,920
i implemented in your function or in

956
00:35:19,920 --> 00:35:22,240
real logic of your application so if you

957
00:35:22,240 --> 00:35:23,520
need to do some

958
00:35:23,520 --> 00:35:25,440
functionality like money transfer you

959
00:35:25,440 --> 00:35:27,359
cannot do one two three four five you if

960
00:35:27,359 --> 00:35:30,960
you have some some um some parameters or

961
00:35:30,960 --> 00:35:31,760
some

962
00:35:31,760 --> 00:35:32,800
any

963
00:35:32,800 --> 00:35:35,040
criteria it's a pro

964
00:35:35,040 --> 00:35:36,960
prohibited to do some sort of

965
00:35:36,960 --> 00:35:38,720
application functionality so the

966
00:35:38,720 --> 00:35:40,720
security controls there you understand

967
00:35:40,720 --> 00:35:42,960
those controls and try to bypass such

968
00:35:42,960 --> 00:35:46,079
cases focus on uh authorizations focus

969
00:35:46,079 --> 00:35:49,200
on exposed apis in your application some

970
00:35:49,200 --> 00:35:52,079
any logical threats are any challenging

971
00:35:52,079 --> 00:35:53,760
uh try to

972
00:35:53,760 --> 00:35:56,079
list all use cases in your application

973
00:35:56,079 --> 00:35:59,119
and for each use case try to

974
00:35:59,119 --> 00:36:02,880
the any less one or more abuse cases for

975
00:36:02,880 --> 00:36:05,520
each use case this will help as well to

976
00:36:05,520 --> 00:36:07,920
discover some logical logical threats

977
00:36:07,920 --> 00:36:09,040
uh

978
00:36:09,040 --> 00:36:12,079
using logical data flow logical flow for

979
00:36:12,079 --> 00:36:14,400
your application they may give you

980
00:36:14,400 --> 00:36:16,720
some insights about okay i can do some

981
00:36:16,720 --> 00:36:19,119
sort of scaling this step i can do some

982
00:36:19,119 --> 00:36:21,839
logical threads here so also it's maybe

983
00:36:21,839 --> 00:36:23,760
sometimes it's it's good to have some

984
00:36:23,760 --> 00:36:25,760
that a logical flow for specific

985
00:36:25,760 --> 00:36:28,079
function in order to identify some

986
00:36:28,079 --> 00:36:30,960
logical threats

987
00:36:31,119 --> 00:36:33,839
in the agile environment and we have

988
00:36:33,839 --> 00:36:36,160
some tips here

989
00:36:36,160 --> 00:36:38,240
executing threat modeling into agile

990
00:36:38,240 --> 00:36:39,359
environments

991
00:36:39,359 --> 00:36:42,720
uh sometimes in the it will be executed

992
00:36:42,720 --> 00:36:45,280
based on the sprint so we have sprint

993
00:36:45,280 --> 00:36:47,359
here that require some changes we do

994
00:36:47,359 --> 00:36:49,760
threat modeling for specific sprints

995
00:36:49,760 --> 00:36:52,640
uh next another sprint we do again some

996
00:36:52,640 --> 00:36:54,240
threat modeling very quickly for this

997
00:36:54,240 --> 00:36:57,119
friend but during the release after we

998
00:36:57,119 --> 00:36:58,480
you need you need to go to the release

999
00:36:58,480 --> 00:37:00,480
we discover oh we didn't

1000
00:37:00,480 --> 00:37:03,119
do some sort of third modem to some uh

1001
00:37:03,119 --> 00:37:06,400
some integrations uh issues some

1002
00:37:06,400 --> 00:37:09,200
sometimes we do threat model for one's

1003
00:37:09,200 --> 00:37:10,240
brand

1004
00:37:10,240 --> 00:37:13,440
and without understanding the design

1005
00:37:13,440 --> 00:37:16,079
change based on previous

1006
00:37:16,079 --> 00:37:17,200
sprints

1007
00:37:17,200 --> 00:37:19,599
so the recommendations for agile

1008
00:37:19,599 --> 00:37:20,960
environments

1009
00:37:20,960 --> 00:37:23,599
try to understand the design

1010
00:37:23,599 --> 00:37:26,960
changes for um during the sprint

1011
00:37:26,960 --> 00:37:27,760
uh

1012
00:37:27,760 --> 00:37:29,599
during the previous sprints

1013
00:37:29,599 --> 00:37:30,400
uh

1014
00:37:30,400 --> 00:37:31,839
if you are going to execute threat

1015
00:37:31,839 --> 00:37:33,839
modeling for your spread i mean now you

1016
00:37:33,839 --> 00:37:35,040
are doing threat modeling for your

1017
00:37:35,040 --> 00:37:37,440
specific sprint and

1018
00:37:37,440 --> 00:37:39,760
you don't just under focus on this

1019
00:37:39,760 --> 00:37:43,440
sprint uh try to understand the changes

1020
00:37:43,440 --> 00:37:44,160
in

1021
00:37:44,160 --> 00:37:46,720
the design in the previous

1022
00:37:46,720 --> 00:37:47,839
sprints

1023
00:37:47,839 --> 00:37:50,640
okay so you may do some sort of threat

1024
00:37:50,640 --> 00:37:52,640
modeling for the previous sprints in

1025
00:37:52,640 --> 00:37:55,280
order to identify exactly all threats in

1026
00:37:55,280 --> 00:37:56,720
your spread

1027
00:37:56,720 --> 00:37:58,480
uh

1028
00:37:58,480 --> 00:38:01,520
threat modeling as a code is um

1029
00:38:01,520 --> 00:38:03,119
there are a number of tools they trying

1030
00:38:03,119 --> 00:38:05,839
to provide such features they comes with

1031
00:38:05,839 --> 00:38:07,760
like api that you can

1032
00:38:07,760 --> 00:38:10,560
script and all those apis provide some

1033
00:38:10,560 --> 00:38:12,640
scripts that will automatically draw

1034
00:38:12,640 --> 00:38:14,720
data from diagram and then they

1035
00:38:14,720 --> 00:38:16,480
automatically analyze their threads

1036
00:38:16,480 --> 00:38:19,200
provide some inputs also that could be

1037
00:38:19,200 --> 00:38:20,160
uh

1038
00:38:20,160 --> 00:38:22,400
using script to parse

1039
00:38:22,400 --> 00:38:24,240
and ensure that there is there are a

1040
00:38:24,240 --> 00:38:26,560
number of controls based on these uh

1041
00:38:26,560 --> 00:38:27,920
threads

1042
00:38:27,920 --> 00:38:30,960
based on those discovered threads

1043
00:38:30,960 --> 00:38:34,000
uh i cannot say they are matured enough

1044
00:38:34,000 --> 00:38:36,000
now to be integrated directly into

1045
00:38:36,000 --> 00:38:37,200
application

1046
00:38:37,200 --> 00:38:40,560
if your your dev ops is any require some

1047
00:38:40,560 --> 00:38:42,720
sort of automating even threat

1048
00:38:42,720 --> 00:38:45,680
monitoring try to have like pocs like to

1049
00:38:45,680 --> 00:38:47,440
test those tools

1050
00:38:47,440 --> 00:38:49,839
i i expect they will have some

1051
00:38:49,839 --> 00:38:51,680
limitation to identify some logical

1052
00:38:51,680 --> 00:38:54,240
threats you can use them as an in-going

1053
00:38:54,240 --> 00:38:56,880
process for devops or your pipeline

1054
00:38:56,880 --> 00:38:59,839
however you may consider some manual uh

1055
00:38:59,839 --> 00:39:02,160
steps to identify some logic and some

1056
00:39:02,160 --> 00:39:03,680
issues related to the design flows and

1057
00:39:03,680 --> 00:39:05,680
so on

1058
00:39:05,680 --> 00:39:07,520
okay great so

1059
00:39:07,520 --> 00:39:08,400
next

1060
00:39:08,400 --> 00:39:11,280
step okay so after you finished

1061
00:39:11,280 --> 00:39:13,680
the threads identification you need to

1062
00:39:13,680 --> 00:39:16,960
have the thread traceability matrix so

1063
00:39:16,960 --> 00:39:19,200
why it's important to have those because

1064
00:39:19,200 --> 00:39:21,280
don't just list all threads without

1065
00:39:21,280 --> 00:39:23,520
understanding the attack tree okay it's

1066
00:39:23,520 --> 00:39:25,040
very important to learn to link any

1067
00:39:25,040 --> 00:39:27,760
threads with attack three with how this

1068
00:39:27,760 --> 00:39:29,680
threat is impacting your application

1069
00:39:29,680 --> 00:39:31,119
there is possibility for a

1070
00:39:31,119 --> 00:39:33,520
cross-scripting for sql injection don't

1071
00:39:33,520 --> 00:39:36,160
just list them okay this sql injection

1072
00:39:36,160 --> 00:39:38,000
we may impact your application in this

1073
00:39:38,000 --> 00:39:40,079
way this course scripting could be

1074
00:39:40,079 --> 00:39:42,160
exploited by one two three four so it's

1075
00:39:42,160 --> 00:39:43,440
it's hard it's highly recommend to

1076
00:39:43,440 --> 00:39:44,720
understand

1077
00:39:44,720 --> 00:39:47,040
the threat traceability metrics who how

1078
00:39:47,040 --> 00:39:50,720
where and what so in order to uh

1079
00:39:50,720 --> 00:39:52,079
first to

1080
00:39:52,079 --> 00:39:54,480
identify threats uh applicable in your

1081
00:39:54,480 --> 00:39:58,320
application and also to recommend very

1082
00:39:58,320 --> 00:39:59,520
specific

1083
00:39:59,520 --> 00:40:02,320
controls is implementable and understood

1084
00:40:02,320 --> 00:40:04,640
by the development team so it's very

1085
00:40:04,640 --> 00:40:06,800
highly recommended actually to have such

1086
00:40:06,800 --> 00:40:07,599
such

1087
00:40:07,599 --> 00:40:10,640
as a threaded traceability metrics again

1088
00:40:10,640 --> 00:40:13,119
it's not a mandatory step at all at the

1089
00:40:13,119 --> 00:40:15,760
end our objective is to identify all

1090
00:40:15,760 --> 00:40:16,640
threats

1091
00:40:16,640 --> 00:40:19,520
uh in in without missing any threat and

1092
00:40:19,520 --> 00:40:21,599
in very quickly based on the agile

1093
00:40:21,599 --> 00:40:24,480
environments we have now so any extra

1094
00:40:24,480 --> 00:40:25,760
steps

1095
00:40:25,760 --> 00:40:28,079
are required if they will add more

1096
00:40:28,079 --> 00:40:30,800
threads if you see there is no need skip

1097
00:40:30,800 --> 00:40:33,119
two steps and just go directly and list

1098
00:40:33,119 --> 00:40:35,200
all possible threads

1099
00:40:35,200 --> 00:40:37,359
perfect so the next

1100
00:40:37,359 --> 00:40:39,359
step and track related to understanding

1101
00:40:39,359 --> 00:40:41,359
threat agent those are very important

1102
00:40:41,359 --> 00:40:43,599
this is very important as well so if you

1103
00:40:43,599 --> 00:40:45,680
don't understand the threat actors

1104
00:40:45,680 --> 00:40:47,760
targeting your organization talk to your

1105
00:40:47,760 --> 00:40:50,880
applications you you may miss some very

1106
00:40:50,880 --> 00:40:53,200
important threats uh

1107
00:40:53,200 --> 00:40:54,720
it's it's very important to understand

1108
00:40:54,720 --> 00:40:57,680
all possible or potential uh threat

1109
00:40:57,680 --> 00:41:00,000
agents maybe from internal insider

1110
00:41:00,000 --> 00:41:02,000
attacks against your some infrastructure

1111
00:41:02,000 --> 00:41:03,839
components maybe there is some exposed

1112
00:41:03,839 --> 00:41:06,400
api there that could utilize don't just

1113
00:41:06,400 --> 00:41:07,200
say

1114
00:41:07,200 --> 00:41:09,520
our threat agents are uh

1115
00:41:09,520 --> 00:41:11,599
authenticated user non-authenticated

1116
00:41:11,599 --> 00:41:14,480
user anonymous user and that's that's it

1117
00:41:14,480 --> 00:41:16,800
think about some other threat agents

1118
00:41:16,800 --> 00:41:18,240
coming from integration with third

1119
00:41:18,240 --> 00:41:20,480
parties with internal extended entities

1120
00:41:20,480 --> 00:41:23,359
based on access for different components

1121
00:41:23,359 --> 00:41:24,960
related to your application

1122
00:41:24,960 --> 00:41:27,280
again if each threat agent will come

1123
00:41:27,280 --> 00:41:29,920
come with extra threats that could be

1124
00:41:29,920 --> 00:41:32,720
that should be identified

1125
00:41:32,720 --> 00:41:35,680
but don't list anything so in in case

1126
00:41:35,680 --> 00:41:37,839
there is some sort of

1127
00:41:37,839 --> 00:41:39,839
threat agent that will not bring any

1128
00:41:39,839 --> 00:41:42,240
more extra threats just skip this or try

1129
00:41:42,240 --> 00:41:45,920
to group some threat agents together

1130
00:41:45,920 --> 00:41:47,760
self-intelligence is very important as

1131
00:41:47,760 --> 00:41:49,599
well to understand the threat actors

1132
00:41:49,599 --> 00:41:51,359
against your applications especially

1133
00:41:51,359 --> 00:41:53,680
they have to understand how they they

1134
00:41:53,680 --> 00:41:56,480
attack or usually how they use their

1135
00:41:56,480 --> 00:42:00,480
attack scenarios how they exploit some

1136
00:42:00,480 --> 00:42:03,119
application functionalities during their

1137
00:42:03,119 --> 00:42:04,960
usual or their

1138
00:42:04,960 --> 00:42:07,680
process for any threats for any

1139
00:42:07,680 --> 00:42:09,040
exploitation

1140
00:42:09,040 --> 00:42:10,880
scenarios so it's important to

1141
00:42:10,880 --> 00:42:12,640
understand that again this is important

1142
00:42:12,640 --> 00:42:15,440
to highlight some extra threats and also

1143
00:42:15,440 --> 00:42:18,800
you may add extra detection controls in

1144
00:42:18,800 --> 00:42:22,079
your application based on that

1145
00:42:22,160 --> 00:42:23,119
great

1146
00:42:23,119 --> 00:42:24,079
so

1147
00:42:24,079 --> 00:42:26,560
next step related to the risk analysis i

1148
00:42:26,560 --> 00:42:27,680
try to go

1149
00:42:27,680 --> 00:42:30,160
very quickly you have maybe five minutes

1150
00:42:30,160 --> 00:42:32,000
uh risk analysis and now you have

1151
00:42:32,000 --> 00:42:33,520
everything about your application to

1152
00:42:33,520 --> 00:42:35,920
audio i identify the risk analysis very

1153
00:42:35,920 --> 00:42:38,000
quickly it's important

1154
00:42:38,000 --> 00:42:40,480
to use whatever methodology but you

1155
00:42:40,480 --> 00:42:41,599
understand

1156
00:42:41,599 --> 00:42:44,400
the the perspective or the

1157
00:42:44,400 --> 00:42:46,319
the how those methodology are

1158
00:42:46,319 --> 00:42:49,280
implemented so in general we have some

1159
00:42:49,280 --> 00:42:51,599
aspects in the risk analysis how we are

1160
00:42:51,599 --> 00:42:53,119
going to

1161
00:42:53,119 --> 00:42:54,880
do risk analysis whatever methods you

1162
00:42:54,880 --> 00:42:56,960
are using quantity qualitative or

1163
00:42:56,960 --> 00:42:59,599
quantitative quantitative maybe hybrid

1164
00:42:59,599 --> 00:43:01,680
acid-driven vertical horizontal that

1165
00:43:01,680 --> 00:43:03,680
means sometimes you do threat modeling

1166
00:43:03,680 --> 00:43:06,000
based asset by asset i mean so i'll go

1167
00:43:06,000 --> 00:43:07,359
to identify some information like

1168
00:43:07,359 --> 00:43:08,960
application assets here this database

1169
00:43:08,960 --> 00:43:11,200
for example and let's try to have all

1170
00:43:11,200 --> 00:43:13,040
lists of potential threats against these

1171
00:43:13,040 --> 00:43:15,119
assets regardless of the application

1172
00:43:15,119 --> 00:43:17,359
service or the business process so you

1173
00:43:17,359 --> 00:43:20,800
can you may go asset by asset usually we

1174
00:43:20,800 --> 00:43:22,720
go in the upper layer and identify

1175
00:43:22,720 --> 00:43:25,119
application services processes and for

1176
00:43:25,119 --> 00:43:27,359
ads for each process the related

1177
00:43:27,359 --> 00:43:28,800
information assets this is very

1178
00:43:28,800 --> 00:43:30,400
important i highly recommend that

1179
00:43:30,400 --> 00:43:33,359
actually to go and identify

1180
00:43:33,359 --> 00:43:35,440
the services

1181
00:43:35,440 --> 00:43:36,960
this will help you

1182
00:43:36,960 --> 00:43:39,040
during the threat identification phase

1183
00:43:39,040 --> 00:43:41,680
to build your attack tree not just based

1184
00:43:41,680 --> 00:43:43,119
on asset by assets

1185
00:43:43,119 --> 00:43:45,200
propagation non-propagation it depends

1186
00:43:45,200 --> 00:43:47,200
on the threat modeling

1187
00:43:47,200 --> 00:43:49,359
activity you are doing if it is part an

1188
00:43:49,359 --> 00:43:51,520
ongoing process as part of the risk

1189
00:43:51,520 --> 00:43:54,000
management you may propagate the risk

1190
00:43:54,000 --> 00:43:56,640
analysis the propagation that means okay

1191
00:43:56,640 --> 00:43:58,319
i have sql injection here the risk

1192
00:43:58,319 --> 00:44:01,280
analysis this is for example medium risk

1193
00:44:01,280 --> 00:44:04,000
and after some activities we have

1194
00:44:04,000 --> 00:44:05,920
another threat related to

1195
00:44:05,920 --> 00:44:08,319
like misconfiguration database or access

1196
00:44:08,319 --> 00:44:10,560
issues or whatever that means

1197
00:44:10,560 --> 00:44:13,440
this will impact the the previous id5

1198
00:44:13,440 --> 00:44:15,280
threads and the sql injection maybe

1199
00:44:15,280 --> 00:44:17,599
becomes high or critical

1200
00:44:17,599 --> 00:44:20,000
i don't recommend doing that if if you

1201
00:44:20,000 --> 00:44:22,160
need to finish very quickly and if this

1202
00:44:22,160 --> 00:44:22,800
is

1203
00:44:22,800 --> 00:44:25,200
executed in the design phase just

1204
00:44:25,200 --> 00:44:26,960
go and i identify threats don't

1205
00:44:26,960 --> 00:44:29,920
propagate to do to avoid wasting time

1206
00:44:29,920 --> 00:44:32,000
but if it's part of an ongoing process

1207
00:44:32,000 --> 00:44:33,760
you may propagate some

1208
00:44:33,760 --> 00:44:36,480
some risk analysis activities to ensure

1209
00:44:36,480 --> 00:44:38,480
your risk analysis is accurate for

1210
00:44:38,480 --> 00:44:40,720
different advised threats

1211
00:44:40,720 --> 00:44:44,240
perfect so we have now analysis uh some

1212
00:44:44,240 --> 00:44:45,680
methodologies that could be utilized

1213
00:44:45,680 --> 00:44:46,640
here

1214
00:44:46,640 --> 00:44:49,520
whatever mythology is not mandatory

1215
00:44:49,520 --> 00:44:51,599
this is what i am using usually there is

1216
00:44:51,599 --> 00:44:53,520
mythology based likelihood and impact

1217
00:44:53,520 --> 00:44:55,440
whatever mythology that based on like

1218
00:44:55,440 --> 00:44:57,520
you that impact will give you the same

1219
00:44:57,520 --> 00:45:00,079
where you can use to have the risk

1220
00:45:00,079 --> 00:45:02,480
levels

1221
00:45:02,560 --> 00:45:06,400
perfect so okay so the final step and

1222
00:45:06,400 --> 00:45:08,160
the objective of threat modeling is to

1223
00:45:08,160 --> 00:45:10,960
identify identify the required controls

1224
00:45:10,960 --> 00:45:13,920
against your threats so next section is

1225
00:45:13,920 --> 00:45:16,880
going to we're going to talk about some

1226
00:45:16,880 --> 00:45:19,280
threats mitigation tips and tricks

1227
00:45:19,280 --> 00:45:20,960
before going on that you need to

1228
00:45:20,960 --> 00:45:22,640
understand the mitigation strategy in

1229
00:45:22,640 --> 00:45:23,520
your

1230
00:45:23,520 --> 00:45:26,160
new organization sometimes you some

1231
00:45:26,160 --> 00:45:28,160
based on some scenarios based on some

1232
00:45:28,160 --> 00:45:31,280
threats types the required control cost

1233
00:45:31,280 --> 00:45:33,280
and the other staff

1234
00:45:33,280 --> 00:45:34,960
made this some some controls request

1235
00:45:34,960 --> 00:45:36,880
sometimes to be implemented in the code

1236
00:45:36,880 --> 00:45:39,359
you may transfer the

1237
00:45:39,359 --> 00:45:42,160
the uh the mitigation to another another

1238
00:45:42,160 --> 00:45:44,400
layer like application fire or even

1239
00:45:44,400 --> 00:45:46,480
transfer the whole process to any third

1240
00:45:46,480 --> 00:45:48,880
party you may avoid some some parts you

1241
00:45:48,880 --> 00:45:52,000
may again so understand your

1242
00:45:52,000 --> 00:45:53,760
threats understand your environment

1243
00:45:53,760 --> 00:45:55,839
understand the cost of the control you

1244
00:45:55,839 --> 00:45:58,720
may use the mitigation strategies in

1245
00:45:58,720 --> 00:46:00,880
your organization to transfer or

1246
00:46:00,880 --> 00:46:02,000
avoid

1247
00:46:02,000 --> 00:46:03,680
instead of reducing the risk in your

1248
00:46:03,680 --> 00:46:04,720
application

1249
00:46:04,720 --> 00:46:06,960
so let's very quickly go through some

1250
00:46:06,960 --> 00:46:09,040
tips related to the

1251
00:46:09,040 --> 00:46:10,720
the controls that you are going to

1252
00:46:10,720 --> 00:46:13,040
recommend try to make it practical and

1253
00:46:13,040 --> 00:46:14,880
implementable not just

1254
00:46:14,880 --> 00:46:17,280
list all possible controls sometimes

1255
00:46:17,280 --> 00:46:18,960
security guys

1256
00:46:18,960 --> 00:46:22,000
okay i feel good if i have list of all

1257
00:46:22,000 --> 00:46:23,520
controls in the application try to

1258
00:46:23,520 --> 00:46:25,040
understand the application components

1259
00:46:25,040 --> 00:46:26,640
that the development

1260
00:46:26,640 --> 00:46:28,480
that the implementation view that we

1261
00:46:28,480 --> 00:46:29,599
talked about in the beginning of the

1262
00:46:29,599 --> 00:46:31,839
presentation to recommend something that

1263
00:46:31,839 --> 00:46:34,079
is easy to implement as an applicable

1264
00:46:34,079 --> 00:46:35,520
application don't say okay there is

1265
00:46:35,520 --> 00:46:37,760
second injection you have to

1266
00:46:37,760 --> 00:46:39,680
use parameterized query if your

1267
00:46:39,680 --> 00:46:42,560
application is using some user input

1268
00:46:42,560 --> 00:46:46,079
to to control the the table name in the

1269
00:46:46,079 --> 00:46:48,319
sql query there is no way to use

1270
00:46:48,319 --> 00:46:50,480
parameterized query i mean try to

1271
00:46:50,480 --> 00:46:53,119
provide some controls is related to

1272
00:46:53,119 --> 00:46:54,800
application applicable

1273
00:46:54,800 --> 00:46:56,960
implementable understood by your

1274
00:46:56,960 --> 00:46:58,880
development team or your internet

1275
00:46:58,880 --> 00:47:00,000
stakeholders

1276
00:47:00,000 --> 00:47:01,359
understand the business requirement and

1277
00:47:01,359 --> 00:47:03,680
the cost of the control again cost that

1278
00:47:03,680 --> 00:47:05,760
means time and maybe

1279
00:47:05,760 --> 00:47:08,240
maybe money so understand exactly how to

1280
00:47:08,240 --> 00:47:10,160
implement this code sometimes if you

1281
00:47:10,160 --> 00:47:11,839
need to implement some controls this

1282
00:47:11,839 --> 00:47:14,720
will require some huge time so instead

1283
00:47:14,720 --> 00:47:15,359
of

1284
00:47:15,359 --> 00:47:17,520
just going and recommend any control

1285
00:47:17,520 --> 00:47:19,040
understand the business understand the

1286
00:47:19,040 --> 00:47:19,920
cost

1287
00:47:19,920 --> 00:47:23,119
try to provide focus to provide controls

1288
00:47:23,119 --> 00:47:24,480
within the application

1289
00:47:24,480 --> 00:47:26,960
avoid as much as you can

1290
00:47:26,960 --> 00:47:28,880
to recommend the mitigation for any

1291
00:47:28,880 --> 00:47:31,359
vulnerability or any threat based on

1292
00:47:31,359 --> 00:47:34,480
extra controls in other layers okay try

1293
00:47:34,480 --> 00:47:35,280
to

1294
00:47:35,280 --> 00:47:37,520
implement the application in the way

1295
00:47:37,520 --> 00:47:40,400
they protect themselves

1296
00:47:40,400 --> 00:47:43,280
one control can protect against one or

1297
00:47:43,280 --> 00:47:46,160
more risks so sometimes you can occur

1298
00:47:46,160 --> 00:47:47,280
you could recommend some sort of

1299
00:47:47,280 --> 00:47:49,680
validation try to have some sort of

1300
00:47:49,680 --> 00:47:51,200
validation that protect against

1301
00:47:51,200 --> 00:47:53,040
different input validation related

1302
00:47:53,040 --> 00:47:55,359
threats and so on

1303
00:47:55,359 --> 00:47:57,520
uh never forget detection convective

1304
00:47:57,520 --> 00:47:59,440
controls okay

1305
00:47:59,440 --> 00:48:02,559
sometimes we focus just only on uh

1306
00:48:02,559 --> 00:48:04,480
preventive controls to avoid some

1307
00:48:04,480 --> 00:48:06,640
attacks and and have some controls

1308
00:48:06,640 --> 00:48:09,040
against those attacks never forget

1309
00:48:09,040 --> 00:48:10,559
detection controls this is very

1310
00:48:10,559 --> 00:48:11,839
important

1311
00:48:11,839 --> 00:48:13,280
very important to have full visibility

1312
00:48:13,280 --> 00:48:15,839
application try to recommend some

1313
00:48:15,839 --> 00:48:19,040
specific logs logs to be taken from

1314
00:48:19,040 --> 00:48:20,960
some logical or some functional

1315
00:48:20,960 --> 00:48:24,079
requirements functional applications

1316
00:48:24,079 --> 00:48:25,839
functions in your applications

1317
00:48:25,839 --> 00:48:28,640
so for this transaction i need some sort

1318
00:48:28,640 --> 00:48:31,119
of logs those logs could be used by the

1319
00:48:31,119 --> 00:48:33,359
monitoring theme the sock team to build

1320
00:48:33,359 --> 00:48:36,160
some use cases in the uh

1321
00:48:36,160 --> 00:48:38,079
in the same solution for example where

1322
00:48:38,079 --> 00:48:41,520
they have full visibility about some

1323
00:48:41,520 --> 00:48:42,880
potential

1324
00:48:42,880 --> 00:48:44,160
threats against your application the

1325
00:48:44,160 --> 00:48:46,480
production so detection control is very

1326
00:48:46,480 --> 00:48:48,559
very important was blogging cheat sheet

1327
00:48:48,559 --> 00:48:51,119
and other uh there is oasp absence of

1328
00:48:51,119 --> 00:48:52,880
projects very very important actually

1329
00:48:52,880 --> 00:48:55,119
they define some detection points that

1330
00:48:55,119 --> 00:48:56,880
could be implemented in your application

1331
00:48:56,880 --> 00:48:59,359
inside the application code itself so a

1332
00:48:59,359 --> 00:49:00,880
number of response actions could be

1333
00:49:00,880 --> 00:49:02,400
taken based on

1334
00:49:02,400 --> 00:49:04,400
those detection points these those are

1335
00:49:04,400 --> 00:49:05,920
very important as well

1336
00:49:05,920 --> 00:49:07,520
microsoft threat modeling tool

1337
00:49:07,520 --> 00:49:10,559
mitigations they provide some sort of

1338
00:49:10,559 --> 00:49:13,920
library for that could be utilized to

1339
00:49:13,920 --> 00:49:16,880
identify some domains or controls

1340
00:49:16,880 --> 00:49:18,480
actually they have some domains for each

1341
00:49:18,480 --> 00:49:19,920
to mean there are a number of

1342
00:49:19,920 --> 00:49:22,720
uh controls that could be uh

1343
00:49:22,720 --> 00:49:26,000
used again this is good as as

1344
00:49:26,000 --> 00:49:27,680
like source for

1345
00:49:27,680 --> 00:49:30,480
such controls in your application

1346
00:49:30,480 --> 00:49:32,960
okay last thing we finished now threat

1347
00:49:32,960 --> 00:49:35,280
modeling identified all assets at the

1348
00:49:35,280 --> 00:49:37,359
business services we do

1349
00:49:37,359 --> 00:49:39,040
threat identification threat analysis

1350
00:49:39,040 --> 00:49:40,800
and everything

1351
00:49:40,800 --> 00:49:43,280
recommended or controls so

1352
00:49:43,280 --> 00:49:46,319
i need to add a last slide here i know

1353
00:49:46,319 --> 00:49:49,040
we have pretty limited time so uh about

1354
00:49:49,040 --> 00:49:51,280
some very important topic related to the

1355
00:49:51,280 --> 00:49:53,040
skills the quality to application threat

1356
00:49:53,040 --> 00:49:55,280
modeling this is usually the question

1357
00:49:55,280 --> 00:49:57,920
that we face during a beginner thread

1358
00:49:57,920 --> 00:50:00,960
modeling exercise uh as you can see

1359
00:50:00,960 --> 00:50:04,000
it's mix mix between some information

1360
00:50:04,000 --> 00:50:06,319
some skills that require to understand

1361
00:50:06,319 --> 00:50:08,079
the application component application

1362
00:50:08,079 --> 00:50:10,160
deployment model devops maybe we need to

1363
00:50:10,160 --> 00:50:12,400
have some understanding for the entire

1364
00:50:12,400 --> 00:50:13,760
application software development life

1365
00:50:13,760 --> 00:50:16,000
cycle and also requires some security

1366
00:50:16,000 --> 00:50:18,319
skills uh i highly recommend past time

1367
00:50:18,319 --> 00:50:20,160
with you past that they have resi

1368
00:50:20,160 --> 00:50:22,319
metrics in this stress metrics

1369
00:50:22,319 --> 00:50:23,920
they identify some roles in your

1370
00:50:23,920 --> 00:50:25,920
application in development life cycle

1371
00:50:25,920 --> 00:50:27,520
and for each role this specific

1372
00:50:27,520 --> 00:50:30,400
requirement that they can provide so uh

1373
00:50:30,400 --> 00:50:32,720
it's actually it's mix between some

1374
00:50:32,720 --> 00:50:34,240
development understanding for your

1375
00:50:34,240 --> 00:50:35,839
environment from application perspective

1376
00:50:35,839 --> 00:50:39,599
and also some skills related to security

1377
00:50:39,599 --> 00:50:42,559
so again russia metrics is good and in

1378
00:50:42,559 --> 00:50:44,800
general you need to to have skills from

1379
00:50:44,800 --> 00:50:47,680
uh both even uh developer with with

1380
00:50:47,680 --> 00:50:49,680
with security background or security

1381
00:50:49,680 --> 00:50:51,680
from the security team with where he

1382
00:50:51,680 --> 00:50:53,680
understand exactly the internal

1383
00:50:53,680 --> 00:50:55,520
applications and the environment in

1384
00:50:55,520 --> 00:50:56,800
youth development

1385
00:50:56,800 --> 00:51:00,000
environments okay sorry i have a very

1386
00:51:00,000 --> 00:51:02,319
tight time so this is all tips and

1387
00:51:02,319 --> 00:51:05,119
tricks ten of them we finished all tips

1388
00:51:05,119 --> 00:51:06,720
and tricks please if you have any

1389
00:51:06,720 --> 00:51:09,520
questions visit me

