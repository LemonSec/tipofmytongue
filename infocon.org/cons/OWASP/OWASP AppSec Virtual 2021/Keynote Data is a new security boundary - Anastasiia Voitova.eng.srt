1
00:00:01,420 --> 00:00:05,630
[Music]

2
00:00:05,839 --> 00:00:07,040
hi

3
00:00:07,040 --> 00:00:09,760
thank you andrew for kind words uh like

4
00:00:09,760 --> 00:00:11,920
good morning good afternoon good evening

5
00:00:11,920 --> 00:00:14,480
for everyone who is joining the second

6
00:00:14,480 --> 00:00:16,079
as like the last day of the conference

7
00:00:16,079 --> 00:00:19,199
today it's 7 00 p.m here in kiev in

8
00:00:19,199 --> 00:00:21,199
ukraine and let's start the day with the

9
00:00:21,199 --> 00:00:23,439
keynote so there is a data is a new

10
00:00:23,439 --> 00:00:26,480
security boundary as andrew mentioned i

11
00:00:26,480 --> 00:00:28,720
work at closer clubs as head of customer

12
00:00:28,720 --> 00:00:31,039
solutions cigarette system engineer so

13
00:00:31,039 --> 00:00:32,558
it's called the collapse we do data

14
00:00:32,558 --> 00:00:35,040
security we work on sophisticated

15
00:00:35,040 --> 00:00:37,840
technologies around cryptography right

16
00:00:37,840 --> 00:00:40,000
so please take everything that they will

17
00:00:40,000 --> 00:00:42,719
tell today here with a grain of salt

18
00:00:42,719 --> 00:00:45,360
because i am into security world i am in

19
00:00:45,360 --> 00:00:47,440
the cryptographic world so i see

20
00:00:47,440 --> 00:00:49,440
everything from you know cryptographic

21
00:00:49,440 --> 00:00:50,879
perspective

22
00:00:50,879 --> 00:00:53,920
right uh for example we often at all

23
00:00:53,920 --> 00:00:56,399
clubs we often build tools and solutions

24
00:00:56,399 --> 00:00:59,039
to to protect data where it's the most

25
00:00:59,039 --> 00:01:02,079
vulnerable in applications in novel

26
00:01:02,079 --> 00:01:04,479
technologies i won't talk about like any

27
00:01:04,479 --> 00:01:06,240
commercial solutions but we have a lot

28
00:01:06,240 --> 00:01:08,720
of open source and as andrew mentioned

29
00:01:08,720 --> 00:01:11,520
i'm maintaining the open source library

30
00:01:11,520 --> 00:01:13,520
sims which is a cryptographic library by

31
00:01:13,520 --> 00:01:16,000
the way i recently learned that it's

32
00:01:16,000 --> 00:01:19,119
recommended by obas mstg and you know

33
00:01:19,119 --> 00:01:21,200
the funny thing it was not me who put it

34
00:01:21,200 --> 00:01:22,400
there so

35
00:01:22,400 --> 00:01:24,720
yeah i was like yay okay okay to set

36
00:01:24,720 --> 00:01:27,640
expectations correctly because this is a

37
00:01:27,640 --> 00:01:30,400
cryptographic talk at least data's good

38
00:01:30,400 --> 00:01:33,200
stuff the things we want to talk about

39
00:01:33,200 --> 00:01:35,040
today we won't talk about exact cyphers

40
00:01:35,040 --> 00:01:36,720
we won't talk about symbolic asymmetric

41
00:01:36,720 --> 00:01:39,520
encryption we won't uh enumerate typical

42
00:01:39,520 --> 00:01:41,520
mistakes developers do well developers

43
00:01:41,520 --> 00:01:44,720
do a lot of mistakes and only recently i

44
00:01:44,720 --> 00:01:48,960
seen again uh issues with

45
00:01:48,960 --> 00:01:53,439
new iv vector for is bc so all these not

46
00:01:53,439 --> 00:01:55,600
for today we won't talk about tls we

47
00:01:55,600 --> 00:01:57,759
won't talk about uh privacy we won't

48
00:01:57,759 --> 00:02:00,799
talk about uh fear uncertainty and doubt

49
00:02:00,799 --> 00:02:03,759
so no breaches no incidents we also

50
00:02:03,759 --> 00:02:05,040
won't name

51
00:02:05,040 --> 00:02:07,280
mention or names any exact tools that

52
00:02:07,280 --> 00:02:09,919
you can use as a silver silver ballots

53
00:02:09,919 --> 00:02:12,160
to make your life easier now today we're

54
00:02:12,160 --> 00:02:13,040
gonna

55
00:02:13,040 --> 00:02:16,160
look on data security and cryptography

56
00:02:16,160 --> 00:02:17,200
from

57
00:02:17,200 --> 00:02:20,160
architecture perspective what is it why

58
00:02:20,160 --> 00:02:22,800
we use that how to use encryption how to

59
00:02:22,800 --> 00:02:25,040
build in complicated encryption

60
00:02:25,040 --> 00:02:28,000
workflows into your architectures into

61
00:02:28,000 --> 00:02:30,800
your apps and i will show you several

62
00:02:30,800 --> 00:02:33,680
real world examples several observations

63
00:02:33,680 --> 00:02:37,360
i made where companies integrated

64
00:02:37,360 --> 00:02:39,280
encryption and security together with

65
00:02:39,280 --> 00:02:41,360
other security controls

66
00:02:41,360 --> 00:02:42,160
for

67
00:02:42,160 --> 00:02:44,800
data encryption so

68
00:02:44,800 --> 00:02:47,440
i hope you're ready to start

69
00:02:47,440 --> 00:02:50,400
to start continue finish your day

70
00:02:50,400 --> 00:02:53,040
always date the security talk by the way

71
00:02:53,040 --> 00:02:56,080
some things um i will mention please

72
00:02:56,080 --> 00:02:57,680
take a look at the schedule because we

73
00:02:57,680 --> 00:02:59,360
do have another talk today regarding

74
00:02:59,360 --> 00:03:02,159
data security and encryption so if you

75
00:03:02,159 --> 00:03:04,319
are into this space i recommend you have

76
00:03:04,319 --> 00:03:07,440
to make note to go to that talk uh i

77
00:03:07,440 --> 00:03:09,120
believe there are two speakers from ubic

78
00:03:09,120 --> 00:03:12,480
company from your book security okay

79
00:03:12,480 --> 00:03:14,000
let's talk about data security

80
00:03:14,000 --> 00:03:15,840
one-on-one

81
00:03:15,840 --> 00:03:19,120
what is the world's relief right now the

82
00:03:19,120 --> 00:03:22,239
modern infrastructures what i see

83
00:03:22,239 --> 00:03:24,799
that the applications are becoming more

84
00:03:24,799 --> 00:03:27,519
and more and more complicated their

85
00:03:27,519 --> 00:03:29,840
infrastructures ecosystems are becoming

86
00:03:29,840 --> 00:03:31,280
complicated

87
00:03:31,280 --> 00:03:34,239
often even within the same company

88
00:03:34,239 --> 00:03:36,879
different teams select different tools

89
00:03:36,879 --> 00:03:39,440
or different databases to build their

90
00:03:39,440 --> 00:03:41,840
part of the application they're part of

91
00:03:41,840 --> 00:03:43,840
the product and i've seen companies

92
00:03:43,840 --> 00:03:46,480
where different teams selected each of

93
00:03:46,480 --> 00:03:48,560
them different database within the same

94
00:03:48,560 --> 00:03:51,519
cloud and when they asked people like me

95
00:03:51,519 --> 00:03:54,080
hey anastasia how to secure data in all

96
00:03:54,080 --> 00:03:55,200
these

97
00:03:55,200 --> 00:03:57,280
what i do is like oh my god let's start

98
00:03:57,280 --> 00:03:59,040
with the data flow first let's start to

99
00:03:59,040 --> 00:04:01,760
understand where you put your data why

100
00:04:01,760 --> 00:04:03,680
you use all these databases why you use

101
00:04:03,680 --> 00:04:06,080
all these public clouds why you put all

102
00:04:06,080 --> 00:04:08,959
your data in this third party apis

103
00:04:08,959 --> 00:04:11,760
integrations and bi analytics tools

104
00:04:11,760 --> 00:04:13,840
because the world is moving to a no

105
00:04:13,840 --> 00:04:16,000
perimeter and we are moving to these

106
00:04:16,000 --> 00:04:17,358
zero trust

107
00:04:17,358 --> 00:04:19,440
things zero trust

108
00:04:19,440 --> 00:04:22,400
uh architectures right so this is what

109
00:04:22,400 --> 00:04:24,479
it looks like from my perspective when

110
00:04:24,479 --> 00:04:27,040
we are talking about data in a modern

111
00:04:27,040 --> 00:04:29,919
architectures in a modern product

112
00:04:29,919 --> 00:04:31,759
and that's why that's why this is the

113
00:04:31,759 --> 00:04:34,080
topic of my keynote that's why i'm

114
00:04:34,080 --> 00:04:35,680
saying that

115
00:04:35,680 --> 00:04:36,639
today

116
00:04:36,639 --> 00:04:39,600
data security is not let's protect

117
00:04:39,600 --> 00:04:42,400
database thought no it's let's protect

118
00:04:42,400 --> 00:04:45,360
data whenever it exists

119
00:04:45,360 --> 00:04:48,080
right so data security measures

120
00:04:48,080 --> 00:04:51,199
become a security boundary for data and

121
00:04:51,199 --> 00:04:53,040
if your company values the data

122
00:04:53,040 --> 00:04:54,960
basically these data security measures

123
00:04:54,960 --> 00:04:56,639
become a security measures for your

124
00:04:56,639 --> 00:04:58,000
company as well

125
00:04:58,000 --> 00:05:00,160
right not depending on the clouds

126
00:05:00,160 --> 00:05:01,759
databases

127
00:05:01,759 --> 00:05:03,039
not from

128
00:05:03,039 --> 00:05:04,960
location perspective from data

129
00:05:04,960 --> 00:05:07,840
perspective and every data flow

130
00:05:07,840 --> 00:05:10,240
simplified in a simplified way has only

131
00:05:10,240 --> 00:05:11,680
a couple of steps

132
00:05:11,680 --> 00:05:13,919
the data gathering where the data is

133
00:05:13,919 --> 00:05:16,320
gathered what is the user input or data

134
00:05:16,320 --> 00:05:20,240
is generated or data is derived from

135
00:05:20,240 --> 00:05:22,560
data processing how data is being

136
00:05:22,560 --> 00:05:24,320
processed right all these calculations

137
00:05:24,320 --> 00:05:26,560
analytics that you do how you store the

138
00:05:26,560 --> 00:05:29,280
data how you back up the data how you

139
00:05:29,280 --> 00:05:30,639
like um

140
00:05:30,639 --> 00:05:31,919
send this

141
00:05:31,919 --> 00:05:34,000
data to to others

142
00:05:34,000 --> 00:05:37,280
fortunately with for authenticated users

143
00:05:37,280 --> 00:05:39,919
and data output this is the tricky part

144
00:05:39,919 --> 00:05:41,919
uh that's because the data should be

145
00:05:41,919 --> 00:05:44,000
removed on some point in the future

146
00:05:44,000 --> 00:05:46,400
right uh because the data might be

147
00:05:46,400 --> 00:05:48,720
migrated into different databases and of

148
00:05:48,720 --> 00:05:51,280
course we have this bunch of third-party

149
00:05:51,280 --> 00:05:54,400
tools that we push our data into like

150
00:05:54,400 --> 00:05:57,199
all these log analytics all these cms

151
00:05:57,199 --> 00:05:59,120
all these bi tools here they are the

152
00:05:59,120 --> 00:06:01,919
other and on every step

153
00:06:01,919 --> 00:06:05,039
of this even super simplified data flow

154
00:06:05,039 --> 00:06:08,319
the troubles might happen

155
00:06:08,319 --> 00:06:11,039
but data gathering well without consent

156
00:06:11,039 --> 00:06:14,319
right uh most issues happens with data

157
00:06:14,319 --> 00:06:16,800
processing leakage laws

158
00:06:16,800 --> 00:06:19,440
disclosure to unauthorized users and of

159
00:06:19,440 --> 00:06:21,600
course tons of things happening with

160
00:06:21,600 --> 00:06:23,520
output staff

161
00:06:23,520 --> 00:06:26,160
i've seen products that don't remove

162
00:06:26,160 --> 00:06:29,360
data at all you know it just goes

163
00:06:29,360 --> 00:06:31,520
somewhere i've seen also by the way a

164
00:06:31,520 --> 00:06:34,160
lot of examples where data is stored

165
00:06:34,160 --> 00:06:38,000
securely like encrypted but the backups

166
00:06:38,000 --> 00:06:39,520
are plain text

167
00:06:39,520 --> 00:06:40,800
so

168
00:06:40,800 --> 00:06:44,479
typical data security looks like that

169
00:06:44,479 --> 00:06:47,039
very simple very simple five steps

170
00:06:47,039 --> 00:06:49,360
looking on the any product looking under

171
00:06:49,360 --> 00:06:52,400
any architecture you try to identify the

172
00:06:52,400 --> 00:06:55,120
sensitive data in many cases there is

173
00:06:55,120 --> 00:06:58,319
not only one type but a lot of types of

174
00:06:58,319 --> 00:07:00,639
sensitive data right with different

175
00:07:00,639 --> 00:07:03,680
risks and threats to that you try to map

176
00:07:03,680 --> 00:07:05,039
the data flow

177
00:07:05,039 --> 00:07:08,720
which components this data goes through

178
00:07:08,720 --> 00:07:10,960
do these components need access to the

179
00:07:10,960 --> 00:07:12,960
data in plain text

180
00:07:12,960 --> 00:07:15,280
what are the risks for these components

181
00:07:15,280 --> 00:07:17,680
what are the risks for those threats you

182
00:07:17,680 --> 00:07:20,160
build you do three uh threat modeling

183
00:07:20,160 --> 00:07:22,240
you build risk and trust models you try

184
00:07:22,240 --> 00:07:24,720
to understand risk impact and when you

185
00:07:24,720 --> 00:07:26,880
understand all that when you max the

186
00:07:26,880 --> 00:07:30,560
data flow you try to select like to

187
00:07:30,560 --> 00:07:33,360
think select and do or design

188
00:07:33,360 --> 00:07:36,240
and then yeah probably implement proper

189
00:07:36,240 --> 00:07:38,400
security controls around data that's

190
00:07:38,400 --> 00:07:40,080
super easy that's all the steps i do

191
00:07:40,080 --> 00:07:42,160
every time someone asks me hey we have

192
00:07:42,160 --> 00:07:43,680
this and we need to protect the data

193
00:07:43,680 --> 00:07:44,400
yeah

194
00:07:44,400 --> 00:07:46,639
i know i know i know this might sound

195
00:07:46,639 --> 00:07:48,639
like let's draw and all

196
00:07:48,639 --> 00:07:51,360
yeah only five simple steps uh from my

197
00:07:51,360 --> 00:07:54,000
experience the first four

198
00:07:54,000 --> 00:07:55,919
with identification

199
00:07:55,919 --> 00:07:58,000
with prioritization wrist contract

200
00:07:58,000 --> 00:08:00,879
modeling it might take like weeks

201
00:08:00,879 --> 00:08:02,960
depending on the scale of your product

202
00:08:02,960 --> 00:08:05,840
or your product but the last step where

203
00:08:05,840 --> 00:08:08,000
you select and then implement security

204
00:08:08,000 --> 00:08:09,840
controls oh yeah this could be mounts it

205
00:08:09,840 --> 00:08:11,520
could be as it's like a continuing

206
00:08:11,520 --> 00:08:13,120
journey so

207
00:08:13,120 --> 00:08:16,319
this is like a data security 101

208
00:08:16,319 --> 00:08:20,960
let's move to the ultimate part of that

209
00:08:20,960 --> 00:08:22,960
right because i assume that everything

210
00:08:22,960 --> 00:08:24,800
here for now

211
00:08:24,800 --> 00:08:28,080
is easy for you let's go deeper

212
00:08:28,080 --> 00:08:29,440
encryption

213
00:08:29,440 --> 00:08:31,759
i like to say that encryption is an

214
00:08:31,759 --> 00:08:34,479
ultimate data security measure just

215
00:08:34,479 --> 00:08:36,159
because when the data is properly

216
00:08:36,159 --> 00:08:39,200
encrypted it cannot be unnoticeably like

217
00:08:39,200 --> 00:08:40,799
suddenly decrypted

218
00:08:40,799 --> 00:08:42,479
the trick is

219
00:08:42,479 --> 00:08:44,560
properly encrypted okay

220
00:08:44,560 --> 00:08:47,519
uh when data is encrypted uh it's both

221
00:08:47,519 --> 00:08:49,600
it's protected from both from insiders

222
00:08:49,600 --> 00:08:52,880
and outsiders uh and what is like from

223
00:08:52,880 --> 00:08:54,640
as they have software development

224
00:08:54,640 --> 00:08:57,040
background for me probably the best

225
00:08:57,040 --> 00:08:59,200
output from data encryption like for

226
00:08:59,200 --> 00:09:01,600
encryption in general is that

227
00:09:01,600 --> 00:09:04,880
when encryption is properly implemented

228
00:09:04,880 --> 00:09:06,959
my team like developers can make

229
00:09:06,959 --> 00:09:10,160
mistakes in other pieces of the

230
00:09:10,160 --> 00:09:12,560
infrastructure of the product but those

231
00:09:12,560 --> 00:09:16,160
mistakes won't affect as much because

232
00:09:16,160 --> 00:09:18,240
even in case of the um

233
00:09:18,240 --> 00:09:20,320
incident in case of the bridge the data

234
00:09:20,320 --> 00:09:23,600
is encrypted you know so yeah i'm not

235
00:09:23,600 --> 00:09:24,800
saying that

236
00:09:24,800 --> 00:09:26,880
it's good but i'm i'm saying that in

237
00:09:26,880 --> 00:09:29,920
many cases i've seen examples where even

238
00:09:29,920 --> 00:09:31,600
when the company uh

239
00:09:31,600 --> 00:09:33,600
the incident happened

240
00:09:33,600 --> 00:09:36,320
when the data was encrypted their damage

241
00:09:36,320 --> 00:09:38,560
was quite limited i really like

242
00:09:38,560 --> 00:09:40,880
encryption and of course this is

243
00:09:40,880 --> 00:09:43,360
pragmatic like security engineer

244
00:09:43,360 --> 00:09:45,200
perspective and of course we do have a

245
00:09:45,200 --> 00:09:47,920
lot of regulations compliance compliance

246
00:09:47,920 --> 00:09:48,839
and

247
00:09:48,839 --> 00:09:51,279
requirements for example i really like

248
00:09:51,279 --> 00:09:54,399
to say to show this one from department

249
00:09:54,399 --> 00:09:56,720
of defense ten commandments of software

250
00:09:56,720 --> 00:09:58,000
number nine

251
00:09:58,000 --> 00:10:01,200
says data should be always encrypted

252
00:10:01,200 --> 00:10:04,800
unless it's part of active computation

253
00:10:04,800 --> 00:10:07,040
then of course gdpr

254
00:10:07,040 --> 00:10:10,240
i won't dig into i know that you know in

255
00:10:10,240 --> 00:10:12,480
gdpr there are articles that explicitly

256
00:10:12,480 --> 00:10:14,800
say data encryption

257
00:10:14,800 --> 00:10:16,959
you can open gdpr articles you can

258
00:10:16,959 --> 00:10:19,120
google you can put their search

259
00:10:19,120 --> 00:10:22,399
encryption and you will find yes gdpr is

260
00:10:22,399 --> 00:10:26,320
a data privacy regulation these are the

261
00:10:26,320 --> 00:10:28,560
regulations about like human rights

262
00:10:28,560 --> 00:10:31,680
right they don't define how exactly you

263
00:10:31,680 --> 00:10:34,000
need to encrypt the data they just say

264
00:10:34,000 --> 00:10:36,959
state of the art but still they do say

265
00:10:36,959 --> 00:10:38,640
dainty encryption

266
00:10:38,640 --> 00:10:41,040
and of course we have a lot of more many

267
00:10:41,040 --> 00:10:43,600
many many many many more regulations

268
00:10:43,600 --> 00:10:47,760
that do classify data from sensitive or

269
00:10:47,760 --> 00:10:49,519
personal

270
00:10:49,519 --> 00:10:51,839
so they provide you with data types you

271
00:10:51,839 --> 00:10:54,480
should keep an eye on and often they

272
00:10:54,480 --> 00:10:56,880
recommend or they require some kind of

273
00:10:56,880 --> 00:10:59,040
data security and data encryption

274
00:10:59,040 --> 00:11:01,680
anonymization tokenization many more you

275
00:11:01,680 --> 00:11:03,920
know all of these you know like hipaa

276
00:11:03,920 --> 00:11:07,680
fisma fips fedramp ccpa many many many

277
00:11:07,680 --> 00:11:09,279
more if you

278
00:11:09,279 --> 00:11:12,240
if you're curious many my slides have

279
00:11:12,240 --> 00:11:14,399
like additional information

280
00:11:14,399 --> 00:11:17,040
lots of links and once this video will

281
00:11:17,040 --> 00:11:19,360
be available for everyone i will make my

282
00:11:19,360 --> 00:11:21,279
sites available so you will be able to

283
00:11:21,279 --> 00:11:23,279
click on these links because yeah there

284
00:11:23,279 --> 00:11:25,920
is a lot of content that i want to press

285
00:11:25,920 --> 00:11:28,079
into this stock to spend more time on

286
00:11:28,079 --> 00:11:30,640
interesting things and less time on

287
00:11:30,640 --> 00:11:32,240
regulations

288
00:11:32,240 --> 00:11:35,440
let's start a wasp again this is a vast

289
00:11:35,440 --> 00:11:38,800
conference so i'm sure that you know

290
00:11:38,800 --> 00:11:42,560
about new updates of was top 10 right so

291
00:11:42,560 --> 00:11:43,519
let me

292
00:11:43,519 --> 00:11:45,519
put two small

293
00:11:45,519 --> 00:11:46,959
accents

294
00:11:46,959 --> 00:11:48,720
cryptographic failures cryptographic

295
00:11:48,720 --> 00:11:51,279
tailors become number two right so it's

296
00:11:51,279 --> 00:11:52,240
getting

297
00:11:52,240 --> 00:11:53,360
up

298
00:11:53,360 --> 00:11:55,600
at the most uh as

299
00:11:55,600 --> 00:11:57,200
the typical mistakes of the typical

300
00:11:57,200 --> 00:11:59,040
risks many applications have so

301
00:11:59,040 --> 00:12:01,600
cryptographic failures in a wasp top 10

302
00:12:01,600 --> 00:12:04,560
is focused mostly on cryptographic usage

303
00:12:04,560 --> 00:12:07,600
and issues with implementation

304
00:12:07,600 --> 00:12:10,880
right which includes selecting um

305
00:12:10,880 --> 00:12:14,079
unsuitable how i say like unsuitable

306
00:12:14,079 --> 00:12:16,320
cryptographic controls cryptographic

307
00:12:16,320 --> 00:12:18,560
primitives i often see

308
00:12:18,560 --> 00:12:20,959
you know base64 instead of encryption

309
00:12:20,959 --> 00:12:23,519
yes it's 2021 but still we're still

310
00:12:23,519 --> 00:12:27,200
there i see how similar is how

311
00:12:27,200 --> 00:12:29,600
hash functions typical hash functions

312
00:12:29,600 --> 00:12:32,639
are being used in places where password

313
00:12:32,639 --> 00:12:35,920
base kdf should be used i've seen

314
00:12:35,920 --> 00:12:37,760
examples where

315
00:12:37,760 --> 00:12:40,720
the wrong may be unappropriate not wrong

316
00:12:40,720 --> 00:12:44,480
but unsuitable and appropriate is mode

317
00:12:44,480 --> 00:12:46,639
is used and of course

318
00:12:46,639 --> 00:12:50,480
let's not go into key management because

319
00:12:50,480 --> 00:12:53,680
still i see applications that generate

320
00:12:53,680 --> 00:12:56,160
cryptographic keys using mass random

321
00:12:56,160 --> 00:12:57,279
right

322
00:12:57,279 --> 00:13:00,560
another accent in a wasp top 10 another

323
00:13:00,560 --> 00:13:03,519
like topic is insecure design which is

324
00:13:03,519 --> 00:13:06,560
number four which also is a new like

325
00:13:06,560 --> 00:13:08,880
category like um

326
00:13:08,880 --> 00:13:11,279
that has

327
00:13:11,279 --> 00:13:13,360
it's a new category well it's not new

328
00:13:13,360 --> 00:13:15,839
it's like reworked category which uh

329
00:13:15,839 --> 00:13:17,680
focuses on

330
00:13:17,680 --> 00:13:20,560
design and system architecture

331
00:13:20,560 --> 00:13:22,720
right so if cryptographic failures are

332
00:13:22,720 --> 00:13:24,880
focused on implementation insecure

333
00:13:24,880 --> 00:13:27,200
design are more like a design point of

334
00:13:27,200 --> 00:13:28,240
view

335
00:13:28,240 --> 00:13:30,399
what is interesting for us in this

336
00:13:30,399 --> 00:13:33,680
insecure design section that from data

337
00:13:33,680 --> 00:13:35,839
security perspective what we always

338
00:13:35,839 --> 00:13:39,199
would be often see is that

339
00:13:39,199 --> 00:13:41,760
there is no data security right so like

340
00:13:41,760 --> 00:13:44,079
missing security controls there should

341
00:13:44,079 --> 00:13:46,160
be encryption there is no encryption

342
00:13:46,160 --> 00:13:47,440
there should be some kind of

343
00:13:47,440 --> 00:13:50,399
anonymization tokenization none

344
00:13:50,399 --> 00:13:53,920
then we often see uh misused security

345
00:13:53,920 --> 00:13:55,760
controls you know encryption just

346
00:13:55,760 --> 00:13:59,519
because we encrypted data somehow and we

347
00:13:59,519 --> 00:14:01,519
feel good because the data is encrypted

348
00:14:01,519 --> 00:14:03,600
but once you start looking in you see

349
00:14:03,600 --> 00:14:08,160
that yes date is encrypted but

350
00:14:08,160 --> 00:14:10,320
you know encryption keys are stored

351
00:14:10,320 --> 00:14:12,560
together with encrypted data oh it's

352
00:14:12,560 --> 00:14:13,920
been encrypted

353
00:14:13,920 --> 00:14:16,240
in a wrong place it's been like

354
00:14:16,240 --> 00:14:18,079
decrypted in wrong place things like

355
00:14:18,079 --> 00:14:20,959
that right so from design perspective uh

356
00:14:20,959 --> 00:14:23,279
when you look on the data flow when you

357
00:14:23,279 --> 00:14:25,519
look on the component diagram and of

358
00:14:25,519 --> 00:14:28,480
course a lot of home brewed encryption

359
00:14:28,480 --> 00:14:32,000
protocols are falling into this category

360
00:14:32,000 --> 00:14:34,480
when you try when you see developers try

361
00:14:34,480 --> 00:14:36,560
to re-implement double ratchet for

362
00:14:36,560 --> 00:14:37,600
example

363
00:14:37,600 --> 00:14:40,160
why you know things like that

364
00:14:40,160 --> 00:14:41,600
just because yes encryption is

365
00:14:41,600 --> 00:14:43,519
complicated cryptographic protocols are

366
00:14:43,519 --> 00:14:45,279
even more complicated because there are

367
00:14:45,279 --> 00:14:49,279
a lot of things to keep in mind

368
00:14:49,519 --> 00:14:50,480
and

369
00:14:50,480 --> 00:14:52,560
let's continue with our wasp you can

370
00:14:52,560 --> 00:14:55,120
find a lot of cryptography related and

371
00:14:55,120 --> 00:14:57,279
data security related requirements in

372
00:14:57,279 --> 00:15:01,120
august isos which are placed mostly in

373
00:15:01,120 --> 00:15:04,079
chapter six eight and nine right a lot

374
00:15:04,079 --> 00:15:05,040
of them

375
00:15:05,040 --> 00:15:07,519
and you can find some of them in a wasp

376
00:15:07,519 --> 00:15:10,000
mss mobile application security

377
00:15:10,000 --> 00:15:12,000
verification standards they are placed

378
00:15:12,000 --> 00:15:15,040
into chapters two three and five this is

379
00:15:15,040 --> 00:15:17,199
on screenshot you can see the chapter

380
00:15:17,199 --> 00:15:18,079
three

381
00:15:18,079 --> 00:15:19,440
uh with

382
00:15:19,440 --> 00:15:23,360
mstg crypto and i as i know uh ms fares

383
00:15:23,360 --> 00:15:25,839
and msdg are being

384
00:15:25,839 --> 00:15:29,120
refactored right now so we can see maybe

385
00:15:29,120 --> 00:15:30,800
in future we will see even more

386
00:15:30,800 --> 00:15:33,199
requirements regarding data security

387
00:15:33,199 --> 00:15:34,399
however

388
00:15:34,399 --> 00:15:35,680
however

389
00:15:35,680 --> 00:15:37,759
so there are a lot of things right there

390
00:15:37,759 --> 00:15:39,759
are regulations there is like all wasp

391
00:15:39,759 --> 00:15:42,079
requirements tons of requirements from

392
00:15:42,079 --> 00:15:42,959
ms

393
00:15:42,959 --> 00:15:46,399
some from asvs some requirements from ms

394
00:15:46,399 --> 00:15:47,920
feds

395
00:15:47,920 --> 00:15:49,839
but

396
00:15:49,839 --> 00:15:52,720
this is only the tip of the iceberg

397
00:15:52,720 --> 00:15:54,800
when we're talking about data security

398
00:15:54,800 --> 00:15:57,120
and when we're when we're talking about

399
00:15:57,120 --> 00:15:58,959
encryption

400
00:15:58,959 --> 00:16:02,240
and let's go deeper

401
00:16:02,240 --> 00:16:04,480
i hope

402
00:16:04,480 --> 00:16:08,000
you would like that

403
00:16:08,000 --> 00:16:11,199
now because now the interesting part we

404
00:16:11,199 --> 00:16:13,680
will start

405
00:16:13,839 --> 00:16:15,759
let's talk about encryption but what

406
00:16:15,759 --> 00:16:17,920
about cyphers again we won't talk about

407
00:16:17,920 --> 00:16:19,759
cyphers forget about

408
00:16:19,759 --> 00:16:21,600
elliptic curves and methyl elliptic

409
00:16:21,600 --> 00:16:23,680
curves let's talk about infrastructures

410
00:16:23,680 --> 00:16:26,160
let's talk about data flows

411
00:16:26,160 --> 00:16:27,920
so

412
00:16:27,920 --> 00:16:29,759
there are different kinds of encryption

413
00:16:29,759 --> 00:16:31,600
and many people that don't work with

414
00:16:31,600 --> 00:16:34,720
encryption confuse them which is okay

415
00:16:34,720 --> 00:16:37,199
because no one there is no like the

416
00:16:37,199 --> 00:16:39,360
single book that says this is the only

417
00:16:39,360 --> 00:16:40,880
right way

418
00:16:40,880 --> 00:16:43,759
let's put some emphasizes let's put some

419
00:16:43,759 --> 00:16:44,880
accents

420
00:16:44,880 --> 00:16:48,240
when we say data at rest encryption when

421
00:16:48,240 --> 00:16:51,040
we mean that data is encrypted when it's

422
00:16:51,040 --> 00:16:53,839
stored right it could be file system

423
00:16:53,839 --> 00:16:55,680
encryption operating system encryption

424
00:16:55,680 --> 00:16:57,279
file based encryption database

425
00:16:57,279 --> 00:16:58,880
encryption like you know modern

426
00:16:58,880 --> 00:17:01,120
databases they have this check box yes

427
00:17:01,120 --> 00:17:03,519
encrypt data when it's stopped

428
00:17:03,519 --> 00:17:04,480
then

429
00:17:04,480 --> 00:17:06,400
transport layer encryption data in

430
00:17:06,400 --> 00:17:08,799
transit well obviously tls and things

431
00:17:08,799 --> 00:17:10,959
like that

432
00:17:10,959 --> 00:17:14,079
this is not a topic for today keynote

433
00:17:14,079 --> 00:17:16,079
today we will take we will talk more

434
00:17:16,079 --> 00:17:18,480
about application level encryption and

435
00:17:18,480 --> 00:17:21,679
again i recommend you to check the next

436
00:17:21,679 --> 00:17:24,079
uh talk after this keynote about

437
00:17:24,079 --> 00:17:25,679
application level encryption i haven't

438
00:17:25,679 --> 00:17:28,160
watched it yet but i seen according to

439
00:17:28,160 --> 00:17:31,039
the description uh that guys will go

440
00:17:31,039 --> 00:17:33,600
even deeper in these topics so what is

441
00:17:33,600 --> 00:17:35,360
the application level encryption it

442
00:17:35,360 --> 00:17:38,640
means that application some application

443
00:17:38,640 --> 00:17:40,160
is responsible for encrypting and

444
00:17:40,160 --> 00:17:41,840
decrypting data

445
00:17:41,840 --> 00:17:43,039
right

446
00:17:43,039 --> 00:17:45,200
the trick here is that application level

447
00:17:45,200 --> 00:17:46,480
encryption

448
00:17:46,480 --> 00:17:48,960
can work should work

449
00:17:48,960 --> 00:17:52,400
with both data trust and dating trends

450
00:17:52,400 --> 00:17:55,039
it means that your application can

451
00:17:55,039 --> 00:17:56,720
encrypt the data

452
00:17:56,720 --> 00:17:59,039
right in the application code

453
00:17:59,039 --> 00:18:01,600
then send this application this

454
00:18:01,600 --> 00:18:04,240
encrypted data to some other application

455
00:18:04,240 --> 00:18:05,919
and of course when you send it you use

456
00:18:05,919 --> 00:18:07,440
tls

457
00:18:07,440 --> 00:18:08,320
right

458
00:18:08,320 --> 00:18:10,400
then they are the application gets this

459
00:18:10,400 --> 00:18:11,600
data

460
00:18:11,600 --> 00:18:13,039
and for example sends this to the

461
00:18:13,039 --> 00:18:16,400
database and in database you will use

462
00:18:16,400 --> 00:18:18,640
data address encryption

463
00:18:18,640 --> 00:18:19,440
so

464
00:18:19,440 --> 00:18:21,919
application level encryption

465
00:18:21,919 --> 00:18:24,080
will work together

466
00:18:24,080 --> 00:18:27,280
with all the current types of encryption

467
00:18:27,280 --> 00:18:28,559
you use

468
00:18:28,559 --> 00:18:31,039
right what i'm saying that you should

469
00:18:31,039 --> 00:18:33,760
not stop using tls if you will start

470
00:18:33,760 --> 00:18:37,360
encrypting data inside your application

471
00:18:37,360 --> 00:18:38,480
okay

472
00:18:38,480 --> 00:18:40,559
the tricks with application level

473
00:18:40,559 --> 00:18:42,799
encryption is that it's if it's

474
00:18:42,799 --> 00:18:45,520
application controlled it means that

475
00:18:45,520 --> 00:18:47,600
application will control key management

476
00:18:47,600 --> 00:18:49,200
as well and this is where it gets

477
00:18:49,200 --> 00:18:52,000
complicated let's go in

478
00:18:52,000 --> 00:18:54,240
as one of the examples because people

479
00:18:54,240 --> 00:18:56,960
usually confuse at one of the examples

480
00:18:56,960 --> 00:19:00,160
here i compare two things that we

481
00:19:00,160 --> 00:19:02,080
shouldn't probably compare it's still

482
00:19:02,080 --> 00:19:03,840
liars and application level encryption

483
00:19:03,840 --> 00:19:07,600
you see tls protects data from um

484
00:19:07,600 --> 00:19:09,919
server from application from operating

485
00:19:09,919 --> 00:19:11,760
system to operating system and put it

486
00:19:11,760 --> 00:19:14,160
this way application level encryption

487
00:19:14,160 --> 00:19:16,880
allows you to build code uh inside the

488
00:19:16,880 --> 00:19:19,840
application right so it moves

489
00:19:19,840 --> 00:19:22,720
boundaries closer to the application

490
00:19:22,720 --> 00:19:25,360
process that actually needs this data in

491
00:19:25,360 --> 00:19:27,760
a plain text

492
00:19:27,760 --> 00:19:30,400
now i just say application depending on

493
00:19:30,400 --> 00:19:31,840
your use case depending on the

494
00:19:31,840 --> 00:19:33,440
architecture application can be

495
00:19:33,440 --> 00:19:35,360
different if application level

496
00:19:35,360 --> 00:19:37,919
encryption happens on the client side

497
00:19:37,919 --> 00:19:40,080
let's say mobile applications you can

498
00:19:40,080 --> 00:19:42,880
say client-side encryption server-side

499
00:19:42,880 --> 00:19:44,480
server-side encryption proxy site

500
00:19:44,480 --> 00:19:46,720
encryption whatever

501
00:19:46,720 --> 00:19:49,039
depending on your use case

502
00:19:49,039 --> 00:19:50,400
now

503
00:19:50,400 --> 00:19:52,240
application level encryption doesn't

504
00:19:52,240 --> 00:19:54,400
mean that all the data is encrypted

505
00:19:54,400 --> 00:19:56,799
typically we say about field level

506
00:19:56,799 --> 00:19:59,120
encryption or selective encryption right

507
00:19:59,120 --> 00:20:01,200
so we don't want to encrypt them all we

508
00:20:01,200 --> 00:20:03,520
don't want to encrypt everything

509
00:20:03,520 --> 00:20:05,520
my application sends some data to the

510
00:20:05,520 --> 00:20:08,159
other application for example in json

511
00:20:08,159 --> 00:20:10,799
for example this is a huge json model

512
00:20:10,799 --> 00:20:12,799
the application can select

513
00:20:12,799 --> 00:20:15,919
what well you select as a developer as a

514
00:20:15,919 --> 00:20:18,640
security engineer what types of data is

515
00:20:18,640 --> 00:20:21,679
sensitive and uh what data is sensitive

516
00:20:21,679 --> 00:20:23,280
and what types of data should be

517
00:20:23,280 --> 00:20:25,919
encrypted so you build in this this

518
00:20:25,919 --> 00:20:27,360
encryption code so application will

519
00:20:27,360 --> 00:20:29,200
encrypt the data only these fields

520
00:20:29,200 --> 00:20:31,039
before sending that

521
00:20:31,039 --> 00:20:34,880
right another topic here is end-to-end

522
00:20:34,880 --> 00:20:36,480
encryption

523
00:20:36,480 --> 00:20:38,720
we can say that end-to-end encryption is

524
00:20:38,720 --> 00:20:41,440
a subset of application level encryption

525
00:20:41,440 --> 00:20:43,760
the trick with end-to-end encryption

526
00:20:43,760 --> 00:20:45,679
that

527
00:20:45,679 --> 00:20:49,120
the main idea that the data should not

528
00:20:49,120 --> 00:20:51,919
be decrypted like in the middle on your

529
00:20:51,919 --> 00:20:54,400
server side on your in your like cloud

530
00:20:54,400 --> 00:20:56,400
in all these components the data should

531
00:20:56,400 --> 00:20:58,880
be encrypted and decrypted only on your

532
00:20:58,880 --> 00:21:00,640
ends

533
00:21:00,640 --> 00:21:03,679
in the infrastructure in many cases this

534
00:21:03,679 --> 00:21:04,799
ends

535
00:21:04,799 --> 00:21:07,840
uh mobile applications but it's not it's

536
00:21:07,840 --> 00:21:10,640
not like uh required it can be like

537
00:21:10,640 --> 00:21:12,480
any application you can just say that

538
00:21:12,480 --> 00:21:13,840
okay this

539
00:21:13,840 --> 00:21:16,720
part of my data flow is end to end

540
00:21:16,720 --> 00:21:19,280
encrypted the trick here as i mentioned

541
00:21:19,280 --> 00:21:21,679
that all the intermediates all the

542
00:21:21,679 --> 00:21:24,240
components the data goes through they

543
00:21:24,240 --> 00:21:26,640
don't have access to data in plain text

544
00:21:26,640 --> 00:21:28,880
and they don't have access to keys

545
00:21:28,880 --> 00:21:32,320
so they cannot decrypt the data

546
00:21:32,320 --> 00:21:34,880
and the encryption is great you use

547
00:21:34,880 --> 00:21:37,039
enter encryption basically daily if you

548
00:21:37,039 --> 00:21:39,919
use some of modern messengers uh the

549
00:21:39,919 --> 00:21:42,559
thing here is that if data is enter

550
00:21:42,559 --> 00:21:46,640
encrypted it doesn't mean that

551
00:21:46,640 --> 00:21:50,080
all data isn't encrypted and it doesn't

552
00:21:50,080 --> 00:21:52,720
mean that the application is secure

553
00:21:52,720 --> 00:21:55,679
and doesn't mean the application won't

554
00:21:55,679 --> 00:21:56,960
still

555
00:21:56,960 --> 00:22:00,080
won't sell your data right because we

556
00:22:00,080 --> 00:22:02,320
see in the real world that applications

557
00:22:02,320 --> 00:22:03,840
can

558
00:22:03,840 --> 00:22:07,120
analyze your data cells like sell it to

559
00:22:07,120 --> 00:22:09,520
third parties and then only encrypt it

560
00:22:09,520 --> 00:22:12,720
and proudly say we use enter encryption

561
00:22:12,720 --> 00:22:15,280
so it's just a technology

562
00:22:15,280 --> 00:22:16,799
um

563
00:22:16,799 --> 00:22:19,440
let's i know that you like to compare

564
00:22:19,440 --> 00:22:20,559
uh

565
00:22:20,559 --> 00:22:22,400
to look into threat modeling so let's

566
00:22:22,400 --> 00:22:25,039
compare cls and application level

567
00:22:25,039 --> 00:22:27,440
encryption they are different techniques

568
00:22:27,440 --> 00:22:29,840
they it's like comparing apples and

569
00:22:29,840 --> 00:22:33,280
oranges it's unfair but we will do it

570
00:22:33,280 --> 00:22:35,760
i really like to sell these

571
00:22:35,760 --> 00:22:39,039
this table as a comparison table because

572
00:22:39,039 --> 00:22:40,559
it has different encryption ways

573
00:22:40,559 --> 00:22:42,400
different techniques you know you see

574
00:22:42,400 --> 00:22:45,120
like tls data address encryption

575
00:22:45,120 --> 00:22:47,280
database or like transparent database

576
00:22:47,280 --> 00:22:49,360
encryption application level encryption

577
00:22:49,360 --> 00:22:51,200
and antenna encryption and it has

578
00:22:51,200 --> 00:22:53,039
different like

579
00:22:53,039 --> 00:22:55,200
threats or like events

580
00:22:55,200 --> 00:22:56,799
uh that can happen

581
00:22:56,799 --> 00:22:59,039
and you see that

582
00:22:59,039 --> 00:23:01,039
different encryption approaches uh

583
00:23:01,039 --> 00:23:04,320
protect from different classes of events

584
00:23:04,320 --> 00:23:06,720
right so in some systems and of course

585
00:23:06,720 --> 00:23:09,679
what to use depends on your threat model

586
00:23:09,679 --> 00:23:11,840
in some system that's certainly fine to

587
00:23:11,840 --> 00:23:14,480
use tls and data address encryption and

588
00:23:14,480 --> 00:23:17,919
you're okay but in many many cases

589
00:23:17,919 --> 00:23:19,840
especially

590
00:23:19,840 --> 00:23:21,840
those cases i will show you a little bit

591
00:23:21,840 --> 00:23:23,039
later

592
00:23:23,039 --> 00:23:25,760
you are pushed to use application level

593
00:23:25,760 --> 00:23:28,640
encryption or enter encryption

594
00:23:28,640 --> 00:23:30,880
because just because as i mentioned

595
00:23:30,880 --> 00:23:33,039
previously when the date is encrypted it

596
00:23:33,039 --> 00:23:34,400
cannot be

597
00:23:34,400 --> 00:23:37,760
magically suddenly decrypted and this is

598
00:23:37,760 --> 00:23:40,240
what it makes good

599
00:23:40,240 --> 00:23:41,520
however

600
00:23:41,520 --> 00:23:43,600
application encryption is so great right

601
00:23:43,600 --> 00:23:46,080
why not to use it everywhere okay here

602
00:23:46,080 --> 00:23:47,200
is the trick

603
00:23:47,200 --> 00:23:49,039
it's great but it's a little bit

604
00:23:49,039 --> 00:23:51,039
complicated when i say a little bit

605
00:23:51,039 --> 00:23:53,200
complicated it means a lot a lot like

606
00:23:53,200 --> 00:23:55,039
it's really complicated especially for

607
00:23:55,039 --> 00:23:57,039
developers especially who know nothing

608
00:23:57,039 --> 00:23:59,360
about cryptography because application

609
00:23:59,360 --> 00:24:01,600
level encryption means that it should be

610
00:24:01,600 --> 00:24:04,159
somehow related to the application right

611
00:24:04,159 --> 00:24:06,559
it's either the code in the application

612
00:24:06,559 --> 00:24:09,520
or some library or some sdk or some

613
00:24:09,520 --> 00:24:12,559
service that application talks to but in

614
00:24:12,559 --> 00:24:16,080
many cases developers have this exposure

615
00:24:16,080 --> 00:24:19,360
to encryption and yeah

616
00:24:19,360 --> 00:24:21,840
and things get complicated i also like

617
00:24:21,840 --> 00:24:24,400
uh to tell that um

618
00:24:24,400 --> 00:24:26,320
application level encryption or

619
00:24:26,320 --> 00:24:28,400
end-to-end encryption they are great

620
00:24:28,400 --> 00:24:31,520
until you think about key management you

621
00:24:31,520 --> 00:24:34,320
know all they need special publication

622
00:24:34,320 --> 00:24:36,320
8057

623
00:24:36,320 --> 00:24:38,320
all the key management process because

624
00:24:38,320 --> 00:24:39,520
often

625
00:24:39,520 --> 00:24:41,600
when we think about encryption we think

626
00:24:41,600 --> 00:24:44,000
about key management we think about our

627
00:24:44,000 --> 00:24:46,880
key generation key derivation right but

628
00:24:46,880 --> 00:24:48,720
there is much more than that

629
00:24:48,720 --> 00:24:49,679
um

630
00:24:49,679 --> 00:24:52,400
key well key storage obviously

631
00:24:52,400 --> 00:24:55,200
much more than that like key rotation

632
00:24:55,200 --> 00:24:59,120
revocation expiration deletion rotation

633
00:24:59,120 --> 00:25:01,919
with re-encrypting data rotation with uh

634
00:25:01,919 --> 00:25:05,679
without data encryption you know

635
00:25:05,679 --> 00:25:07,679
sharing keys different key scroll

636
00:25:07,679 --> 00:25:08,799
schemes

637
00:25:08,799 --> 00:25:11,360
all the key management this is where all

638
00:25:11,360 --> 00:25:14,880
the fun is and all the issues are and of

639
00:25:14,880 --> 00:25:17,360
course keep the cup oh my god i've seen

640
00:25:17,360 --> 00:25:20,159
so many stories where um

641
00:25:20,159 --> 00:25:20,960
like

642
00:25:20,960 --> 00:25:23,360
products have

643
00:25:23,360 --> 00:25:25,120
application level encryption or

644
00:25:25,120 --> 00:25:27,279
end-to-end encryption and everything

645
00:25:27,279 --> 00:25:31,120
goes okay until until someone

646
00:25:31,120 --> 00:25:33,440
loses the main key

647
00:25:33,440 --> 00:25:36,559
you know or someone loses the access to

648
00:25:36,559 --> 00:25:39,760
kms it stores its main key and and this

649
00:25:39,760 --> 00:25:42,720
is yeah this can be brutal okay okay

650
00:25:42,720 --> 00:25:43,520
let's

651
00:25:43,520 --> 00:25:46,240
let's mentioned uh some other nice

652
00:25:46,240 --> 00:25:48,960
concept that will help us today first is

653
00:25:48,960 --> 00:25:51,679
a zero trust or zero trust architectures

654
00:25:51,679 --> 00:25:54,159
yes it's a little bit of a hype we know

655
00:25:54,159 --> 00:25:56,559
we know that this uh chrome is just a

656
00:25:56,559 --> 00:25:59,919
hype term but the idea is pretty old

657
00:25:59,919 --> 00:26:02,960
right basically is the assumption that

658
00:26:02,960 --> 00:26:04,640
in our infrastructure in our

659
00:26:04,640 --> 00:26:07,520
architecture components our services

660
00:26:07,520 --> 00:26:10,000
they don't trust by default each to each

661
00:26:10,000 --> 00:26:13,039
other no they verify they authenticate

662
00:26:13,039 --> 00:26:16,000
other components even within our network

663
00:26:16,000 --> 00:26:19,120
right the idea is not new uh i believe

664
00:26:19,120 --> 00:26:21,120
that zero trust like fight me but i

665
00:26:21,120 --> 00:26:22,880
believe that zero trust is more about

666
00:26:22,880 --> 00:26:25,200
access control and authentication and it

667
00:26:25,200 --> 00:26:27,919
has almost nothing to do with encryption

668
00:26:27,919 --> 00:26:29,679
there is another concept here zero

669
00:26:29,679 --> 00:26:32,880
knowledge architecture when zero trust

670
00:26:32,880 --> 00:26:36,080
is already like published the term is

671
00:26:36,080 --> 00:26:38,960
defined you can see nist guidelines

672
00:26:38,960 --> 00:26:41,760
about that with zero trust zero

673
00:26:41,760 --> 00:26:43,600
knowledge architecture

674
00:26:43,600 --> 00:26:46,240
it's not as simple the charm is a little

675
00:26:46,240 --> 00:26:47,200
bit

676
00:26:47,200 --> 00:26:49,600
vague i will put it this way

677
00:26:49,600 --> 00:26:51,679
because we also have another very

678
00:26:51,679 --> 00:26:53,039
similar term

679
00:26:53,039 --> 00:26:54,799
zero knowledge proofs protocols which

680
00:26:54,799 --> 00:26:56,640
are cryptographic protocols right so

681
00:26:56,640 --> 00:26:58,640
zero knowledge architecture it's not

682
00:26:58,640 --> 00:27:01,600
so widespread they also can be called

683
00:27:01,600 --> 00:27:04,080
known knowledge architecture the idea is

684
00:27:04,080 --> 00:27:04,960
here

685
00:27:04,960 --> 00:27:06,960
that your system

686
00:27:06,960 --> 00:27:09,840
operates on data without having access

687
00:27:09,840 --> 00:27:11,679
to plain text

688
00:27:11,679 --> 00:27:14,640
so only encrypted data

689
00:27:14,640 --> 00:27:16,960
and only those

690
00:27:16,960 --> 00:27:20,240
components the people or like services

691
00:27:20,240 --> 00:27:22,559
that require access to plain text data

692
00:27:22,559 --> 00:27:25,840
only they have some means access to keys

693
00:27:25,840 --> 00:27:28,480
to decrypt the data all the other

694
00:27:28,480 --> 00:27:31,279
components just have no clue it just

695
00:27:31,279 --> 00:27:32,320
binary

696
00:27:32,320 --> 00:27:34,720
what helps us to build zero knowledge

697
00:27:34,720 --> 00:27:37,039
architectures is of course ant

698
00:27:37,039 --> 00:27:39,679
encryption and authentication and

699
00:27:39,679 --> 00:27:42,240
different knife cryptographic techniques

700
00:27:42,240 --> 00:27:44,960
that allow you to compare data without

701
00:27:44,960 --> 00:27:47,039
actually like revealing it all these

702
00:27:47,039 --> 00:27:49,360
protocols i mentioned previously zero

703
00:27:49,360 --> 00:27:51,600
knowledge proof protocols interactive

704
00:27:51,600 --> 00:27:53,919
non-interactive all these password

705
00:27:53,919 --> 00:27:57,679
protocols like uh p a t e aka yes and

706
00:27:57,679 --> 00:27:58,799
opac

707
00:27:58,799 --> 00:28:00,720
and all their

708
00:28:00,720 --> 00:28:02,559
cryptographic

709
00:28:02,559 --> 00:28:04,399
like encryption ways

710
00:28:04,399 --> 00:28:06,799
new cryptographic approaches like

711
00:28:06,799 --> 00:28:09,120
homomorphic encryption fully homomorphic

712
00:28:09,120 --> 00:28:11,200
encryption or like searchable encryption

713
00:28:11,200 --> 00:28:13,679
so there are already

714
00:28:13,679 --> 00:28:17,360
a set of protocols that allow you to

715
00:28:17,360 --> 00:28:18,960
build systems

716
00:28:18,960 --> 00:28:21,679
where system operates and encrypted data

717
00:28:21,679 --> 00:28:24,880
without having access to plain text

718
00:28:24,880 --> 00:28:27,760
of course of course it comes with cost

719
00:28:27,760 --> 00:28:30,240
one of these one of these modern and

720
00:28:30,240 --> 00:28:32,399
prominent ideas is searchable encryption

721
00:28:32,399 --> 00:28:34,960
again not new nothing is new in

722
00:28:34,960 --> 00:28:37,440
cryptography we just see reincarnation

723
00:28:37,440 --> 00:28:40,159
of the old ideas every like five to ten

724
00:28:40,159 --> 00:28:41,440
years because we have better

725
00:28:41,440 --> 00:28:43,520
technologies to handle that so

726
00:28:43,520 --> 00:28:45,360
searchable encryption is the idea that

727
00:28:45,360 --> 00:28:47,279
you can perform queries on encrypted

728
00:28:47,279 --> 00:28:50,399
data without actually decrypting them

729
00:28:50,399 --> 00:28:51,919
right so

730
00:28:51,919 --> 00:28:52,880
search

731
00:28:52,880 --> 00:28:54,960
through data without

732
00:28:54,960 --> 00:28:56,720
decryption

733
00:28:56,720 --> 00:28:59,600
there are many schemes available

734
00:28:59,600 --> 00:29:01,039
um

735
00:29:01,039 --> 00:29:03,520
symmetric searchable encryption public

736
00:29:03,520 --> 00:29:06,240
key encryption with keyword search as i

737
00:29:06,240 --> 00:29:08,640
mentioned previously homomorphic fully

738
00:29:08,640 --> 00:29:10,480
homomorphic encryption

739
00:29:10,480 --> 00:29:13,200
uh one from my perspective again fight

740
00:29:13,200 --> 00:29:15,760
me from my perspective the most

741
00:29:15,760 --> 00:29:17,760
realistic

742
00:29:17,760 --> 00:29:20,480
uh the most realistic approach in the

743
00:29:20,480 --> 00:29:22,559
searchable encryption right now the most

744
00:29:22,559 --> 00:29:25,520
production ready approach is keyboard

745
00:29:25,520 --> 00:29:26,559
search

746
00:29:26,559 --> 00:29:28,240
where you can search where you have

747
00:29:28,240 --> 00:29:30,559
encrypted data and you have a query a

748
00:29:30,559 --> 00:29:33,679
keyword and you search uh the database

749
00:29:33,679 --> 00:29:36,640
in this keyword this is very useful uh

750
00:29:36,640 --> 00:29:38,399
when you have some

751
00:29:38,399 --> 00:29:41,039
encrypted personal data like emails

752
00:29:41,039 --> 00:29:43,600
encrypted emails and you can search by

753
00:29:43,600 --> 00:29:44,799
email

754
00:29:44,799 --> 00:29:46,880
and uh all the data will be encrypted

755
00:29:46,880 --> 00:29:48,880
but you can still match the user by

756
00:29:48,880 --> 00:29:51,120
email even when all of things is

757
00:29:51,120 --> 00:29:53,039
encrypted so there are different

758
00:29:53,039 --> 00:29:55,600
approaches possible i know a lot about

759
00:29:55,600 --> 00:29:58,080
one approaches like we use and we

760
00:29:58,080 --> 00:29:59,200
published

761
00:29:59,200 --> 00:30:00,720
did some research and published some

762
00:30:00,720 --> 00:30:03,679
papers which is known as blind index

763
00:30:03,679 --> 00:30:06,000
it's based on hashing

764
00:30:06,000 --> 00:30:08,399
but also there are approaches using

765
00:30:08,399 --> 00:30:10,080
uh

766
00:30:10,080 --> 00:30:12,240
deterministic encryption

767
00:30:12,240 --> 00:30:15,039
okay now we'll start getting deeper

768
00:30:15,039 --> 00:30:16,559
right you see we'll start getting

769
00:30:16,559 --> 00:30:20,240
different uh high speed of data security

770
00:30:20,240 --> 00:30:21,520
but

771
00:30:21,520 --> 00:30:24,000
i say i hope i don't see any feedback

772
00:30:24,000 --> 00:30:28,559
but i hope you're doing well over there

773
00:30:28,880 --> 00:30:32,480
so i will show you one more slide here

774
00:30:32,480 --> 00:30:36,240
very interesting one

775
00:30:36,240 --> 00:30:38,080
these all the things i described

776
00:30:38,080 --> 00:30:39,279
previously

777
00:30:39,279 --> 00:30:40,720
they are

778
00:30:40,720 --> 00:30:42,240
well pretty

779
00:30:42,240 --> 00:30:45,120
i would say industry proven and ready

780
00:30:45,120 --> 00:30:47,360
but in cryptography we have a lot of

781
00:30:47,360 --> 00:30:51,080
exciting things for example all these uh

782
00:30:51,080 --> 00:30:53,919
msmpc secure multi-party computation

783
00:30:53,919 --> 00:30:56,960
protocol uh uh as a whole set of

784
00:30:56,960 --> 00:31:00,320
protocols that allow you to build um

785
00:31:00,320 --> 00:31:03,519
products like it's called it's uses

786
00:31:03,519 --> 00:31:05,919
umbrella term privacy enhancing

787
00:31:05,919 --> 00:31:08,000
cryptography which means

788
00:31:08,000 --> 00:31:10,000
that you can build the product and you

789
00:31:10,000 --> 00:31:12,559
can do all this analytics from your data

790
00:31:12,559 --> 00:31:15,360
while respecting and protecting user

791
00:31:15,360 --> 00:31:18,960
privacy right if you know the term um

792
00:31:18,960 --> 00:31:21,200
differential privacy so differential

793
00:31:21,200 --> 00:31:24,399
privacy systems are often not always are

794
00:31:24,399 --> 00:31:26,399
often built using these

795
00:31:26,399 --> 00:31:27,919
privacy-enhancing cryptographic

796
00:31:27,919 --> 00:31:30,080
technologies so secure multi-party

797
00:31:30,080 --> 00:31:32,240
computation private set intersection

798
00:31:32,240 --> 00:31:34,480
private information retrieval

799
00:31:34,480 --> 00:31:36,159
homomorphic encryption i mentioned

800
00:31:36,159 --> 00:31:39,519
before or park i mentioned before

801
00:31:39,519 --> 00:31:43,360
right then zero knowledge the whole set

802
00:31:43,360 --> 00:31:45,840
of zero knowledge proof protocols which

803
00:31:45,840 --> 00:31:48,320
have a new uh

804
00:31:48,320 --> 00:31:51,799
life i would put it this way with

805
00:31:51,799 --> 00:31:53,679
cryptocurrencies right because

806
00:31:53,679 --> 00:31:56,080
previously only

807
00:31:56,080 --> 00:31:58,240
interactive zero knowledge proofs were

808
00:31:58,240 --> 00:32:00,640
popular and now we have a lot of

809
00:32:00,640 --> 00:32:02,799
non-interactive knowledge proof they're

810
00:32:02,799 --> 00:32:04,559
very simple

811
00:32:04,559 --> 00:32:07,519
very simple idea very simple behind zero

812
00:32:07,519 --> 00:32:09,200
knowledge proof protocols is that when

813
00:32:09,200 --> 00:32:11,440
you have two parties

814
00:32:11,440 --> 00:32:14,399
and they share the same secret

815
00:32:14,399 --> 00:32:16,080
you can compare

816
00:32:16,080 --> 00:32:18,480
these parties can compare this secret

817
00:32:18,480 --> 00:32:21,200
without revealing it without sending it

818
00:32:21,200 --> 00:32:23,519
to each other right so they send

819
00:32:23,519 --> 00:32:25,279
something they send some

820
00:32:25,279 --> 00:32:28,240
derivatives from the secret and with

821
00:32:28,240 --> 00:32:29,840
interactive zero knowledge proof

822
00:32:29,840 --> 00:32:31,039
protocols

823
00:32:31,039 --> 00:32:34,320
uh they require several steps several

824
00:32:34,320 --> 00:32:37,120
hops to send several bits of information

825
00:32:37,120 --> 00:32:40,480
to send to each other to verify to make

826
00:32:40,480 --> 00:32:43,279
sure that each of this party has the

827
00:32:43,279 --> 00:32:45,200
same secret

828
00:32:45,200 --> 00:32:46,799
right uh in

829
00:32:46,799 --> 00:32:48,640
uh in blockchain in blockchain and

830
00:32:48,640 --> 00:32:51,039
cryptocurrency world we use we see a lot

831
00:32:51,039 --> 00:32:53,440
of zero knowledge uh snarks zero

832
00:32:53,440 --> 00:32:55,519
knowledge talks protocols

833
00:32:55,519 --> 00:32:58,640
for example many journalists norks they

834
00:32:58,640 --> 00:33:00,720
are non-interactive so they allow

835
00:33:00,720 --> 00:33:03,760
comparing something with only one hope

836
00:33:03,760 --> 00:33:05,039
okay okay

837
00:33:05,039 --> 00:33:07,760
let's talk a little bit about uh data

838
00:33:07,760 --> 00:33:09,360
structures

839
00:33:09,360 --> 00:33:11,519
as i mentioned already cryptocurrencies

840
00:33:11,519 --> 00:33:13,519
let's talk about blockchain but not like

841
00:33:13,519 --> 00:33:15,200
blockchain but blockchain from

842
00:33:15,200 --> 00:33:16,960
cryptographic perspective

843
00:33:16,960 --> 00:33:17,919
uh

844
00:33:17,919 --> 00:33:21,120
what what i see right now that

845
00:33:21,120 --> 00:33:23,279
these modern data structures like

846
00:33:23,279 --> 00:33:27,039
blockchain like merkle trees well modern

847
00:33:27,039 --> 00:33:30,399
again mess is not modding it this it's

848
00:33:30,399 --> 00:33:33,120
these data structures are based on math

849
00:33:33,120 --> 00:33:36,640
designed in 60s 70s 80s

850
00:33:36,640 --> 00:33:39,519
i see a lot of applied

851
00:33:39,519 --> 00:33:42,320
applied products that use these data

852
00:33:42,320 --> 00:33:43,440
structures

853
00:33:43,440 --> 00:33:46,159
uh why for example for

854
00:33:46,159 --> 00:33:47,919
audit logging

855
00:33:47,919 --> 00:33:50,640
so imagine that your system produces

856
00:33:50,640 --> 00:33:54,320
logs right audit logs which mean that uh

857
00:33:54,320 --> 00:33:56,559
who has access to something when it

858
00:33:56,559 --> 00:33:59,279
happens lala audit logs

859
00:33:59,279 --> 00:34:02,320
but audit logs are sensitive data

860
00:34:02,320 --> 00:34:05,200
you want to protect those audit logs so

861
00:34:05,200 --> 00:34:08,239
what you can build you can uh create a

862
00:34:08,239 --> 00:34:10,399
data structure you can put these logs

863
00:34:10,399 --> 00:34:11,679
into

864
00:34:11,679 --> 00:34:15,119
into special data structure to verify

865
00:34:15,119 --> 00:34:18,320
that no one has tempered these logs

866
00:34:18,320 --> 00:34:20,159
one of these data structures is a

867
00:34:20,159 --> 00:34:23,119
blockchain sense of change blocks

868
00:34:23,119 --> 00:34:25,520
hash like you calculate hashes of the

869
00:34:25,520 --> 00:34:28,639
content of previous block yada yada

870
00:34:28,639 --> 00:34:31,839
another uh very used data structure is a

871
00:34:31,839 --> 00:34:33,199
merkle tree

872
00:34:33,199 --> 00:34:34,879
also a tree

873
00:34:34,879 --> 00:34:35,918
with

874
00:34:35,918 --> 00:34:37,280
hashes

875
00:34:37,280 --> 00:34:39,918
uh like a tree of hashes if you can put

876
00:34:39,918 --> 00:34:42,000
it this way if you put your old blocks

877
00:34:42,000 --> 00:34:44,399
into these data structures you will you

878
00:34:44,399 --> 00:34:47,280
will notice if someone will try to

879
00:34:47,280 --> 00:34:49,918
change the content of log

880
00:34:49,918 --> 00:34:52,639
or if someone will try to delete the

881
00:34:52,639 --> 00:34:54,399
whole log message

882
00:34:54,399 --> 00:34:56,320
just because these data structures allow

883
00:34:56,320 --> 00:34:57,760
you to verify

884
00:34:57,760 --> 00:35:00,079
by computing hashes that everything is

885
00:35:00,079 --> 00:35:01,200
in place

886
00:35:01,200 --> 00:35:03,119
and by the way a medical tree is also

887
00:35:03,119 --> 00:35:06,079
used in city in certificate transparency

888
00:35:06,079 --> 00:35:07,119
so

889
00:35:07,119 --> 00:35:08,800
not super new

890
00:35:08,800 --> 00:35:10,960
that's super modern and the last bit

891
00:35:10,960 --> 00:35:13,680
here is uh post quantum cryptography or

892
00:35:13,680 --> 00:35:16,079
quantum safe cryptography i won't get

893
00:35:16,079 --> 00:35:18,079
into the titles on that if you're

894
00:35:18,079 --> 00:35:20,240
curious please check uh

895
00:35:20,240 --> 00:35:22,640
gently thomason does a lot of talks

896
00:35:22,640 --> 00:35:25,520
about this topic and i really like

897
00:35:25,520 --> 00:35:28,320
the blog post from from cloudflare from

898
00:35:28,320 --> 00:35:31,200
two years ago i believe when they did

899
00:35:31,200 --> 00:35:34,640
when they put quantum post quantum key

900
00:35:34,640 --> 00:35:36,160
agreement

901
00:35:36,160 --> 00:35:38,160
protocol into tls and measured the

902
00:35:38,160 --> 00:35:40,320
results so

903
00:35:40,320 --> 00:35:41,440
these

904
00:35:41,440 --> 00:35:43,760
these all this modern cryptography

905
00:35:43,760 --> 00:35:45,200
they're like

906
00:35:45,200 --> 00:35:49,359
monsters uh in this iceberg i mean that

907
00:35:49,359 --> 00:35:51,119
yeah there are a lot of tools they're

908
00:35:51,119 --> 00:35:53,440
nice and they're modern and we like them

909
00:35:53,440 --> 00:35:56,480
but they're probably not all of them are

910
00:35:56,480 --> 00:35:57,280
like

911
00:35:57,280 --> 00:35:59,839
production ready so

912
00:35:59,839 --> 00:36:02,880
but we will get there eventually

913
00:36:02,880 --> 00:36:04,640
let's talk about

914
00:36:04,640 --> 00:36:07,839
simpler things

915
00:36:08,160 --> 00:36:10,480
because cryptography never works alone

916
00:36:10,480 --> 00:36:13,280
right cryptography should be surrounded

917
00:36:13,280 --> 00:36:15,680
by a set of traditional security

918
00:36:15,680 --> 00:36:17,520
controls how you call them

919
00:36:17,520 --> 00:36:20,079
uh we have the data which the data

920
00:36:20,079 --> 00:36:22,560
should be encrypted in storage as the

921
00:36:22,560 --> 00:36:25,040
access should be protected everything

922
00:36:25,040 --> 00:36:27,040
should be logged all the sensitive

923
00:36:27,040 --> 00:36:29,119
actions right all the errors should be

924
00:36:29,119 --> 00:36:31,440
locked when the data is go somewhere

925
00:36:31,440 --> 00:36:33,359
that it should be protected during

926
00:36:33,359 --> 00:36:35,760
transport

927
00:36:35,760 --> 00:36:38,320
so this is a defense in depth around

928
00:36:38,320 --> 00:36:40,000
data right from data security

929
00:36:40,000 --> 00:36:42,480
perspective and i really like to compare

930
00:36:42,480 --> 00:36:44,640
this image with

931
00:36:44,640 --> 00:36:46,240
this one

932
00:36:46,240 --> 00:36:50,320
if you don't know this is um an ocean

933
00:36:50,320 --> 00:36:53,280
cable so the cable that lies in

934
00:36:53,280 --> 00:36:56,079
in the ocean right and the data is only

935
00:36:56,079 --> 00:36:59,760
these small things small orange things

936
00:36:59,760 --> 00:37:02,720
small orange wires all the other layers

937
00:37:02,720 --> 00:37:05,680
this is just protection layers and this

938
00:37:05,680 --> 00:37:07,920
is how i like to look on the data

939
00:37:07,920 --> 00:37:10,400
security we have a little bit of data

940
00:37:10,400 --> 00:37:13,119
and we have all these protection layers

941
00:37:13,119 --> 00:37:15,839
because in some environments

942
00:37:15,839 --> 00:37:18,720
these players this what keeps your data

943
00:37:18,720 --> 00:37:20,720
safe and of course

944
00:37:20,720 --> 00:37:23,680
you are uh security engineers you know

945
00:37:23,680 --> 00:37:25,760
all these traditional security controls

946
00:37:25,760 --> 00:37:27,599
you know all these application security

947
00:37:27,599 --> 00:37:31,040
controls that you can use if you don't i

948
00:37:31,040 --> 00:37:34,079
really recommend you reading nist eight

949
00:37:34,079 --> 00:37:36,640
zero zero five three

950
00:37:36,640 --> 00:37:39,040
which has a list of security controls

951
00:37:39,040 --> 00:37:41,440
for your inspiration they have like a

952
00:37:41,440 --> 00:37:45,040
tables uh tables that you can scroll and

953
00:37:45,040 --> 00:37:46,800
read about different security controls

954
00:37:46,800 --> 00:37:48,000
to implement

955
00:37:48,000 --> 00:37:49,920
so that

956
00:37:49,920 --> 00:37:52,480
what i wanted to emphasize here that

957
00:37:52,480 --> 00:37:55,040
except of nice and shiny cryptographic

958
00:37:55,040 --> 00:37:57,680
technologies and cryptographic approach

959
00:37:57,680 --> 00:37:59,280
we still need

960
00:37:59,280 --> 00:38:01,520
to use the traditional security controls

961
00:38:01,520 --> 00:38:04,640
around data especially for

962
00:38:04,640 --> 00:38:07,520
um especially for risky

963
00:38:07,520 --> 00:38:10,400
uh for high priority attack vectors and

964
00:38:10,400 --> 00:38:12,240
we need to make sure that when we are

965
00:38:12,240 --> 00:38:14,560
building system it's like an internet

966
00:38:14,560 --> 00:38:17,520
cable it has all this overlapping and

967
00:38:17,520 --> 00:38:20,880
supporting each other security controls

968
00:38:20,880 --> 00:38:23,599
right let's get back to our iceberg

969
00:38:23,599 --> 00:38:25,680
picture no more monsters no more

970
00:38:25,680 --> 00:38:28,160
monsters we can use all these nice and

971
00:38:28,160 --> 00:38:30,320
shiny modern cryptographic technologies

972
00:38:30,320 --> 00:38:32,800
only after everything else is

973
00:38:32,800 --> 00:38:34,000
working

974
00:38:34,000 --> 00:38:35,200
so

975
00:38:35,200 --> 00:38:37,440
requirements in

976
00:38:37,440 --> 00:38:42,079
msfs in regulations etc tip of the

977
00:38:42,079 --> 00:38:43,359
artwork

978
00:38:43,359 --> 00:38:45,200
different cryptographic approaches

979
00:38:45,200 --> 00:38:47,119
application level encryption and

980
00:38:47,119 --> 00:38:49,839
encryption like going deeper but

981
00:38:49,839 --> 00:38:51,599
everything will work

982
00:38:51,599 --> 00:38:53,440
if and only if cryptography is

983
00:38:53,440 --> 00:38:55,280
surrounded with a proper security

984
00:38:55,280 --> 00:38:57,359
controls

985
00:38:57,359 --> 00:38:59,440
i hope you still have

986
00:38:59,440 --> 00:39:00,480
energy

987
00:39:00,480 --> 00:39:02,160
to move with me

988
00:39:02,160 --> 00:39:05,040
into cases

989
00:39:05,599 --> 00:39:07,440
i don't know i don't know if it was too

990
00:39:07,440 --> 00:39:10,160
complicated not too complicated but

991
00:39:10,160 --> 00:39:12,640
let's continue so what i will tell you

992
00:39:12,640 --> 00:39:15,760
right now depending on the time i might

993
00:39:15,760 --> 00:39:16,720
cut

994
00:39:16,720 --> 00:39:19,040
one of the cases yeah probably i will

995
00:39:19,040 --> 00:39:23,119
cut um cfd1 it's really it will be still

996
00:39:23,119 --> 00:39:25,839
available in slides but still so what i

997
00:39:25,839 --> 00:39:29,040
wanted i want to show you is it the

998
00:39:29,040 --> 00:39:32,160
combination of different um

999
00:39:32,160 --> 00:39:34,320
of different encryption approaches like

1000
00:39:34,320 --> 00:39:35,599
in real

1001
00:39:35,599 --> 00:39:38,240
applications in real products for

1002
00:39:38,240 --> 00:39:39,440
example

1003
00:39:39,440 --> 00:39:41,200
number one

1004
00:39:41,200 --> 00:39:43,760
imagine that you have software as a

1005
00:39:43,760 --> 00:39:46,960
service platform for b2b like for for

1006
00:39:46,960 --> 00:39:48,560
for other companies

1007
00:39:48,560 --> 00:39:49,760
uh

1008
00:39:49,760 --> 00:39:51,440
why would you use encryption why would

1009
00:39:51,440 --> 00:39:53,760
you use security because you have all

1010
00:39:53,760 --> 00:39:55,680
these customers like enterprise other

1011
00:39:55,680 --> 00:39:57,520
enterprise customers and they want to

1012
00:39:57,520 --> 00:40:01,599
make sure that their data is encrypted

1013
00:40:01,599 --> 00:40:04,560
preferably using their keys and that

1014
00:40:04,560 --> 00:40:06,720
your employees don't have access to the

1015
00:40:06,720 --> 00:40:09,599
data and other customers don't have

1016
00:40:09,599 --> 00:40:12,000
access to their date right so you would

1017
00:40:12,000 --> 00:40:12,960
like

1018
00:40:12,960 --> 00:40:16,160
it's a it's a good applied um

1019
00:40:16,160 --> 00:40:18,240
it's a good application for encryption

1020
00:40:18,240 --> 00:40:20,720
in large platforms you would like to

1021
00:40:20,720 --> 00:40:23,280
minimize the lifecycle life cycle of

1022
00:40:23,280 --> 00:40:24,720
data

1023
00:40:24,720 --> 00:40:27,359
like to make it to make it in plain text

1024
00:40:27,359 --> 00:40:29,200
as less as possible

1025
00:40:29,200 --> 00:40:30,640
there are different techniques available

1026
00:40:30,640 --> 00:40:33,599
for that for example if you use mongodb

1027
00:40:33,599 --> 00:40:36,640
take a look on client side

1028
00:40:36,640 --> 00:40:40,079
field level encryption mongodb remember

1029
00:40:40,079 --> 00:40:42,480
we discussed right client-side

1030
00:40:42,480 --> 00:40:43,839
encryption is application level

1031
00:40:43,839 --> 00:40:45,920
encryption happening decline application

1032
00:40:45,920 --> 00:40:48,880
field level means that you can determine

1033
00:40:48,880 --> 00:40:51,920
which fields to encrypt so mongodb has

1034
00:40:51,920 --> 00:40:54,319
sdk called

1035
00:40:54,319 --> 00:40:57,520
has sdk that allows you to implement you

1036
00:40:57,520 --> 00:40:59,760
just drag this indicate sdk into

1037
00:40:59,760 --> 00:41:02,079
application and you select which fields

1038
00:41:02,079 --> 00:41:03,920
you would like to encrypt and the

1039
00:41:03,920 --> 00:41:06,560
application will communicate

1040
00:41:06,560 --> 00:41:09,280
with keywords and communicate with manga

1041
00:41:09,280 --> 00:41:12,880
and store encrypted records right so

1042
00:41:12,880 --> 00:41:15,200
you're in your mongodb

1043
00:41:15,200 --> 00:41:17,440
you will have a mix of plain text

1044
00:41:17,440 --> 00:41:20,160
records and encrypted records because

1045
00:41:20,160 --> 00:41:22,000
you just selected to encrypt some of

1046
00:41:22,000 --> 00:41:22,800
them

1047
00:41:22,800 --> 00:41:25,520
in a mongodb case as they use the

1048
00:41:25,520 --> 00:41:28,160
following key hierarchy

1049
00:41:28,160 --> 00:41:31,280
you have fields fields are encrypted

1050
00:41:31,280 --> 00:41:32,800
with

1051
00:41:32,800 --> 00:41:35,760
dek deck date encryption key

1052
00:41:35,760 --> 00:41:38,400
the data encryption key is stored in

1053
00:41:38,400 --> 00:41:41,280
keyword or kms and can be encrypted with

1054
00:41:41,280 --> 00:41:44,319
customer master key customer master key

1055
00:41:44,319 --> 00:41:46,640
typically stored in kml sometimes this

1056
00:41:46,640 --> 00:41:49,680
is not your karma but customers kindness

1057
00:41:49,680 --> 00:41:52,160
this is key hierarchy typical formula b

1058
00:41:52,160 --> 00:41:53,839
but they support different you support

1059
00:41:53,839 --> 00:41:55,520
different options

1060
00:41:55,520 --> 00:41:57,520
just check i put the link here just

1061
00:41:57,520 --> 00:41:59,839
check check the logs what's

1062
00:41:59,839 --> 00:42:01,680
when this approach is super useful when

1063
00:42:01,680 --> 00:42:04,560
you use mongodb obviously

1064
00:42:04,560 --> 00:42:07,040
what are they also by the way they also

1065
00:42:07,040 --> 00:42:08,800
provide you with deterministic and

1066
00:42:08,800 --> 00:42:11,200
non-deterministic encryption means that

1067
00:42:11,200 --> 00:42:13,760
they support search they support

1068
00:42:13,760 --> 00:42:16,480
searchable encryption yes with some

1069
00:42:16,480 --> 00:42:20,319
topics with some limitations but still

1070
00:42:20,319 --> 00:42:23,440
what else uh where this approach might

1071
00:42:23,440 --> 00:42:26,240
be not super useful for you

1072
00:42:26,240 --> 00:42:27,359
because

1073
00:42:27,359 --> 00:42:31,040
this makes client applications kinda

1074
00:42:31,040 --> 00:42:33,440
responsible or at least to share part of

1075
00:42:33,440 --> 00:42:35,760
responsibility for encryption decryption

1076
00:42:35,760 --> 00:42:38,079
just to to have this cryptographic code

1077
00:42:38,079 --> 00:42:41,359
from sdk right and partially focus

1078
00:42:41,359 --> 00:42:43,760
management so the application have

1079
00:42:43,760 --> 00:42:45,839
access to key material have access to

1080
00:42:45,839 --> 00:42:48,720
the keys in many cases you would like to

1081
00:42:48,720 --> 00:42:50,319
avoid that

1082
00:42:50,319 --> 00:42:52,880
and as example secondly

1083
00:42:52,880 --> 00:42:54,720
you can

1084
00:42:54,720 --> 00:42:57,839
encryption from client side for example

1085
00:42:57,839 --> 00:43:01,680
on proxy site or on a dow side data

1086
00:43:01,680 --> 00:43:04,319
access object you can build encryption

1087
00:43:04,319 --> 00:43:07,839
layer right outside of your application

1088
00:43:07,839 --> 00:43:10,720
in this example we have the open source

1089
00:43:10,720 --> 00:43:13,280
tool accra right and this is our

1090
00:43:13,280 --> 00:43:15,839
encryption decryption proxy so your

1091
00:43:15,839 --> 00:43:17,760
application connects to accra accra

1092
00:43:17,760 --> 00:43:21,359
connects to the database and you define

1093
00:43:21,359 --> 00:43:24,720
in acron which fields to encrypt

1094
00:43:24,720 --> 00:43:26,720
it will work for sql databases for

1095
00:43:26,720 --> 00:43:28,640
example they define which fields to

1096
00:43:28,640 --> 00:43:31,040
encrypt and accra will encrypt fields

1097
00:43:31,040 --> 00:43:32,160
before

1098
00:43:32,160 --> 00:43:34,240
before sending them to the database and

1099
00:43:34,240 --> 00:43:36,960
decrypt it when the fields are read from

1100
00:43:36,960 --> 00:43:38,160
the database

1101
00:43:38,160 --> 00:43:40,480
and in this example you push

1102
00:43:40,480 --> 00:43:42,400
all the key management all the security

1103
00:43:42,400 --> 00:43:45,520
to accra application has no idea that

1104
00:43:45,520 --> 00:43:47,920
the data is encrypted the database has

1105
00:43:47,920 --> 00:43:50,880
no idea that the data is encrypted and

1106
00:43:50,880 --> 00:43:52,960
again in the database you will have a

1107
00:43:52,960 --> 00:43:55,680
mix some columns will be encrypted some

1108
00:43:55,680 --> 00:43:58,079
columns will be plain text that's fine

1109
00:43:58,079 --> 00:43:59,520
acrylic uses a little bit more

1110
00:43:59,520 --> 00:44:02,800
complicated kick hierarchy for better um

1111
00:44:02,800 --> 00:44:05,760
for more flexible key rotation in akram

1112
00:44:05,760 --> 00:44:06,880
for example

1113
00:44:06,880 --> 00:44:10,960
each database each data field that you

1114
00:44:10,960 --> 00:44:13,680
select to encrypt will be encrypted with

1115
00:44:13,680 --> 00:44:14,960
different

1116
00:44:14,960 --> 00:44:17,200
with different symmetric key

1117
00:44:17,200 --> 00:44:19,359
and those symmetric keys data encryption

1118
00:44:19,359 --> 00:44:21,839
keys decks will be encrypted with key

1119
00:44:21,839 --> 00:44:24,160
encryption keys that can be symmetric or

1120
00:44:24,160 --> 00:44:25,359
asymmetric

1121
00:44:25,359 --> 00:44:27,599
those key encryption keys usually stored

1122
00:44:27,599 --> 00:44:29,839
in a in a keyword in intermediate

1123
00:44:29,839 --> 00:44:32,240
storage they are encrypted with customer

1124
00:44:32,240 --> 00:44:34,880
master key that is stored in commas

1125
00:44:34,880 --> 00:44:36,720
so the key hierarchy is a little bit

1126
00:44:36,720 --> 00:44:38,880
longer but as i mentioned it's not

1127
00:44:38,880 --> 00:44:40,560
flexible for key rotation because you

1128
00:44:40,560 --> 00:44:42,560
can do things like key rotation without

1129
00:44:42,560 --> 00:44:44,480
data encryption

1130
00:44:44,480 --> 00:44:48,640
uh pros and cons of this approach

1131
00:44:48,640 --> 00:44:50,800
the good thing is that you can move your

1132
00:44:50,800 --> 00:44:52,960
encryption from the application sign

1133
00:44:52,960 --> 00:44:55,359
right uh you can build all this key

1134
00:44:55,359 --> 00:44:57,839
rotation revocation bring your own keys

1135
00:44:57,839 --> 00:45:00,480
things like that and what is the trick

1136
00:45:00,480 --> 00:45:03,599
that when you have the single layer

1137
00:45:03,599 --> 00:45:06,319
responsible for encryption you can add

1138
00:45:06,319 --> 00:45:08,720
other security controls there like

1139
00:45:08,720 --> 00:45:11,599
animal detection like firewalling like

1140
00:45:11,599 --> 00:45:14,000
data leakage protection right so you can

1141
00:45:14,000 --> 00:45:16,720
build like uh you know you can divide

1142
00:45:16,720 --> 00:45:19,040
your data flow into

1143
00:45:19,040 --> 00:45:21,760
we have plain text data here let's trust

1144
00:45:21,760 --> 00:45:24,160
it and we have encrypted data here more

1145
00:45:24,160 --> 00:45:26,240
trusted zone

1146
00:45:26,240 --> 00:45:28,319
let's see as example

1147
00:45:28,319 --> 00:45:31,680
no code platform

1148
00:45:31,680 --> 00:45:34,800
no code platforms is a sas application

1149
00:45:34,800 --> 00:45:37,599
that allows their customers to build

1150
00:45:37,599 --> 00:45:39,119
applications

1151
00:45:39,119 --> 00:45:41,440
without code obviously there is some

1152
00:45:41,440 --> 00:45:43,680
code there but the main idea there is

1153
00:45:43,680 --> 00:45:46,319
that this is a huge source that allows

1154
00:45:46,319 --> 00:45:49,040
their customers to build apps

1155
00:45:49,040 --> 00:45:51,760
right and again we have this problem

1156
00:45:51,760 --> 00:45:54,800
that sas wants to protect the data of

1157
00:45:54,800 --> 00:45:56,720
each customer

1158
00:45:56,720 --> 00:45:59,520
using their own keys to isolate this

1159
00:45:59,520 --> 00:46:02,640
data to compartmentalize the data

1160
00:46:02,640 --> 00:46:05,359
and they decided to do to you see to

1161
00:46:05,359 --> 00:46:08,079
integrate encryption uh

1162
00:46:08,079 --> 00:46:09,200
basically

1163
00:46:09,200 --> 00:46:11,359
to integrate encryption together with

1164
00:46:11,359 --> 00:46:14,800
the data access object with down so in

1165
00:46:14,800 --> 00:46:17,440
reality they use hashicorp won't in

1166
00:46:17,440 --> 00:46:19,680
reality that

1167
00:46:19,680 --> 00:46:21,839
the apis

1168
00:46:21,839 --> 00:46:25,119
access to data access object that that

1169
00:46:25,119 --> 00:46:28,400
is responsible to what data to encrypt

1170
00:46:28,400 --> 00:46:31,119
where to put this data uh which keys to

1171
00:46:31,119 --> 00:46:33,680
use here the other so this dao was

1172
00:46:33,680 --> 00:46:36,800
called in hashicorp vault before

1173
00:46:36,800 --> 00:46:38,560
for encrypting decrypting data before

1174
00:46:38,560 --> 00:46:40,880
storing it to the database and again the

1175
00:46:40,880 --> 00:46:44,079
data flow was divided into here we have

1176
00:46:44,079 --> 00:46:46,319
data in plain text here we have data

1177
00:46:46,319 --> 00:46:48,079
encrypting

1178
00:46:48,079 --> 00:46:50,720
this approach allows to

1179
00:46:50,720 --> 00:46:54,480
isolate to compartmentalize access to

1180
00:46:54,480 --> 00:46:57,200
show to their customers that you know we

1181
00:46:57,200 --> 00:46:59,920
use we will use your encryption key and

1182
00:46:59,920 --> 00:47:01,680
all your data will be encrypted with

1183
00:47:01,680 --> 00:47:03,520
your encryption key and it's your

1184
00:47:03,520 --> 00:47:05,119
responsibility if you lose your

1185
00:47:05,119 --> 00:47:07,920
encryption key sorry you will use you

1186
00:47:07,920 --> 00:47:12,480
might lose the data two minutes

1187
00:47:12,640 --> 00:47:14,079
uh also

1188
00:47:14,079 --> 00:47:16,000
that

1189
00:47:16,000 --> 00:47:17,760
as we mentioned previously the

1190
00:47:17,760 --> 00:47:19,839
cryptography works better with

1191
00:47:19,839 --> 00:47:21,520
surrounding security controls with

1192
00:47:21,520 --> 00:47:23,599
support and security controls so in

1193
00:47:23,599 --> 00:47:26,720
their case at their sas platform api

1194
00:47:26,720 --> 00:47:30,400
platform for others they did emphasize

1195
00:47:30,400 --> 00:47:32,960
on api protection with all this

1196
00:47:32,960 --> 00:47:35,200
anti-throttling anti-fraud access

1197
00:47:35,200 --> 00:47:38,400
control the other with all this alerting

1198
00:47:38,400 --> 00:47:40,880
so they were telling their own customers

1199
00:47:40,880 --> 00:47:42,079
that

1200
00:47:42,079 --> 00:47:45,119
it looks like your users behave

1201
00:47:45,119 --> 00:47:48,640
malicious maliciously

1202
00:47:48,720 --> 00:47:50,319
another example

1203
00:47:50,319 --> 00:47:52,960
very similar fintech

1204
00:47:52,960 --> 00:47:55,599
that was a huge application really huge

1205
00:47:55,599 --> 00:47:59,440
one a lot of services a lot of databases

1206
00:47:59,440 --> 00:48:02,559
so what they did they again they use the

1207
00:48:02,559 --> 00:48:05,119
same pattern they pushed application

1208
00:48:05,119 --> 00:48:07,680
level encryption into the single layer

1209
00:48:07,680 --> 00:48:08,559
into

1210
00:48:08,559 --> 00:48:10,880
like of course is always load balancing

1211
00:48:10,880 --> 00:48:12,640
and all the things

1212
00:48:12,640 --> 00:48:15,200
and they controlled encryption from data

1213
00:48:15,200 --> 00:48:17,920
access objects so their applications

1214
00:48:17,920 --> 00:48:20,880
like api application had no clue that

1215
00:48:20,880 --> 00:48:23,359
the data is encrypted somewhere

1216
00:48:23,359 --> 00:48:25,599
the databases as well had no clue that

1217
00:48:25,599 --> 00:48:28,800
the data is encryption the idea here is

1218
00:48:28,800 --> 00:48:29,920
similar

1219
00:48:29,920 --> 00:48:32,800
in this zone on the left data can be in

1220
00:48:32,800 --> 00:48:36,160
plain text with tls and

1221
00:48:36,160 --> 00:48:38,559
all the things on the right

1222
00:48:38,559 --> 00:48:40,880
part of the zone data is encrypted on

1223
00:48:40,880 --> 00:48:43,040
the field level

1224
00:48:43,040 --> 00:48:45,359
very easy to manage

1225
00:48:45,359 --> 00:48:46,640
um

1226
00:48:46,640 --> 00:48:49,680
and in in the fintech uh in in class of

1227
00:48:49,680 --> 00:48:52,640
fintech they also had a special use case

1228
00:48:52,640 --> 00:48:56,000
with bi analytics right so they needed

1229
00:48:56,000 --> 00:48:58,640
to have access to the data to build

1230
00:48:58,640 --> 00:49:02,000
analytics so in this example there is

1231
00:49:02,000 --> 00:49:03,119
layer

1232
00:49:03,119 --> 00:49:06,800
the decryption and anonymization data

1233
00:49:06,800 --> 00:49:09,359
especially for bi software

1234
00:49:09,359 --> 00:49:11,599
and as i mentioned previously there are

1235
00:49:11,599 --> 00:49:13,599
several security controls used to

1236
00:49:13,599 --> 00:49:14,800
support

1237
00:49:14,800 --> 00:49:17,920
these their platform in that case at the

1238
00:49:17,920 --> 00:49:21,200
thin tag they used a lot of pci dss

1239
00:49:21,200 --> 00:49:24,160
required controls like audit logging

1240
00:49:24,160 --> 00:49:28,160
okay let me let me wrap up

1241
00:49:28,160 --> 00:49:30,880
in the slides you will show i will show

1242
00:49:30,880 --> 00:49:32,720
in the slides you will see even more

1243
00:49:32,720 --> 00:49:33,920
cases

1244
00:49:33,920 --> 00:49:36,400
about a male encryption

1245
00:49:36,400 --> 00:49:39,440
right how to encrypt ml models

1246
00:49:39,440 --> 00:49:42,839
by the way the approach i describe is

1247
00:49:42,839 --> 00:49:45,839
hpke hybrid public encryption this is

1248
00:49:45,839 --> 00:49:48,480
really nice i have a link here

1249
00:49:48,480 --> 00:49:53,119
ml protection is a very interesting one

1250
00:49:53,119 --> 00:49:54,079
then

1251
00:49:54,079 --> 00:49:56,960
in the slides you might see the

1252
00:49:56,960 --> 00:49:59,520
encryption end-to-end encryption for

1253
00:49:59,520 --> 00:50:02,880
crdt based application right which

1254
00:50:02,880 --> 00:50:05,200
approaches to use and if you know if you

1255
00:50:05,200 --> 00:50:07,839
don't know what is your dt again a lot

1256
00:50:07,839 --> 00:50:10,559
of links for you available my favorite

1257
00:50:10,559 --> 00:50:12,559
slides about different

1258
00:50:12,559 --> 00:50:14,880
security controls that should surround

1259
00:50:14,880 --> 00:50:17,200
cryptography

1260
00:50:17,200 --> 00:50:19,440
yes if there is if there is like one

1261
00:50:19,440 --> 00:50:22,480
slide for you one message for you to

1262
00:50:22,480 --> 00:50:27,680
take away from this presentation is that

1263
00:50:27,680 --> 00:50:29,280
encryption

1264
00:50:29,280 --> 00:50:32,319
is not is not that hard you know

1265
00:50:32,319 --> 00:50:33,359
um

1266
00:50:33,359 --> 00:50:35,520
team management yes key management is a

1267
00:50:35,520 --> 00:50:37,040
little bit harder

1268
00:50:37,040 --> 00:50:40,079
when you try to build in this in a data

1269
00:50:40,079 --> 00:50:41,520
architecture

1270
00:50:41,520 --> 00:50:44,319
in your real infrastructures that's also

1271
00:50:44,319 --> 00:50:48,160
a little bit of like a burden a struggle

1272
00:50:48,160 --> 00:50:50,640
however

1273
00:50:50,720 --> 00:50:53,839
what is essential is this realistic

1274
00:50:53,839 --> 00:50:57,040
orchestration of cryptography key

1275
00:50:57,040 --> 00:50:59,920
management data flow controls and all

1276
00:50:59,920 --> 00:51:01,839
these traditional application security

1277
00:51:01,839 --> 00:51:04,240
controls and here

1278
00:51:04,240 --> 00:51:09,520
what we can where it gets real

1279
00:51:09,520 --> 00:51:10,800
so

1280
00:51:10,800 --> 00:51:12,880
that's it

1281
00:51:12,880 --> 00:51:16,800
let's move to the questions

