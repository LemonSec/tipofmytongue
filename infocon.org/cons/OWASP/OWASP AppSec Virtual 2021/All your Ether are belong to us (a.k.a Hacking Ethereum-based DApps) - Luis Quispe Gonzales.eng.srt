1
00:00:01,420 --> 00:00:05,630
[Music]

2
00:00:05,759 --> 00:00:06,640
well

3
00:00:06,640 --> 00:00:07,600
uh

4
00:00:07,600 --> 00:00:09,760
welcome everyone to this talk all your

5
00:00:09,760 --> 00:00:12,320
eaters are belong to us or how to hack

6
00:00:12,320 --> 00:00:16,280
ethereum basic dabs

7
00:00:17,440 --> 00:00:20,240
who am i my name is luis quispe gonzalez

8
00:00:20,240 --> 00:00:22,960
i've been having fun for around 11 years

9
00:00:22,960 --> 00:00:26,480
working in the offensive security field

10
00:00:26,480 --> 00:00:28,560
currently i elite offensive security

11
00:00:28,560 --> 00:00:30,080
engineer at halberd a company

12
00:00:30,080 --> 00:00:32,320
specialized in cyber security for

13
00:00:32,320 --> 00:00:34,320
blockchain and crypto war

14
00:00:34,320 --> 00:00:36,160
i also post graduate instructor in

15
00:00:36,160 --> 00:00:38,239
ethical hacking courses and you can

16
00:00:38,239 --> 00:00:40,960
reach out to me in lincoln

17
00:00:40,960 --> 00:00:43,120
english kispe gonzales or telegram all

18
00:00:43,120 --> 00:00:45,760
at night and say hello we can talk about

19
00:00:45,760 --> 00:00:48,559
cyber security we can talk about crypto

20
00:00:48,559 --> 00:00:52,239
talk about life and love why not

21
00:00:52,239 --> 00:00:53,360
so

22
00:00:53,360 --> 00:00:55,760
what are we going to see today

23
00:00:55,760 --> 00:00:58,399
well we will do a quick recap about what

24
00:00:58,399 --> 00:01:00,640
is blockchain i will have a general

25
00:01:00,640 --> 00:01:04,319
introduction about smart contracts and

26
00:01:04,319 --> 00:01:07,760
the main dish of this presentation where

27
00:01:07,760 --> 00:01:10,320
decentralized application or tabs and

28
00:01:10,320 --> 00:01:12,640
especially how to hack them

29
00:01:12,640 --> 00:01:14,320
so let's start

30
00:01:14,320 --> 00:01:17,600
blockchain 101

31
00:01:17,600 --> 00:01:20,400
what is blockchain as a name indicates

32
00:01:20,400 --> 00:01:21,600
is a

33
00:01:21,600 --> 00:01:24,320
a a chain of block that contains some

34
00:01:24,320 --> 00:01:26,880
kind of information blockchain became

35
00:01:26,880 --> 00:01:28,560
popular with appearance of bitcoin in

36
00:01:28,560 --> 00:01:30,320
2009

37
00:01:30,320 --> 00:01:33,680
but be careful bitcoin is just one of

38
00:01:33,680 --> 00:01:35,280
the many applications that blockchain

39
00:01:35,280 --> 00:01:38,240
can have in fact blockchain is a

40
00:01:38,240 --> 00:01:41,439
distributed ledger so it's completely

41
00:01:41,439 --> 00:01:44,880
open to anyone so anyone can interact

42
00:01:44,880 --> 00:01:47,119
with the blockchain and it has an

43
00:01:47,119 --> 00:01:49,200
interesting property

44
00:01:49,200 --> 00:01:52,079
once some information or data is

45
00:01:52,079 --> 00:01:54,320
recorded inside a blockchain it's

46
00:01:54,320 --> 00:01:56,719
extremely extremely complicated to

47
00:01:56,719 --> 00:01:59,360
modify that info

48
00:01:59,360 --> 00:02:03,360
so how does it work let's let's look at

49
00:02:03,360 --> 00:02:06,640
one block a block contains data

50
00:02:06,640 --> 00:02:09,440
hash and hash of preview blog

51
00:02:09,440 --> 00:02:11,120
where is the kind of data that contains

52
00:02:11,120 --> 00:02:13,360
a blog well it depends on the blockchain

53
00:02:13,360 --> 00:02:14,800
for example

54
00:02:14,800 --> 00:02:15,680
in

55
00:02:15,680 --> 00:02:19,360
in bitcoin we have information about

56
00:02:19,360 --> 00:02:20,640
the sender

57
00:02:20,640 --> 00:02:22,800
we have information about the receiver

58
00:02:22,800 --> 00:02:25,520
and we have information of of the

59
00:02:25,520 --> 00:02:27,680
number of coins involved in the

60
00:02:27,680 --> 00:02:29,920
transaction it depends obviously on the

61
00:02:29,920 --> 00:02:31,840
blockchain

62
00:02:31,840 --> 00:02:34,160
we also have a hash of the block we can

63
00:02:34,160 --> 00:02:36,239
compare this with a fingerprint for

64
00:02:36,239 --> 00:02:37,519
humans

65
00:02:37,519 --> 00:02:42,000
each blood has its unique hash and it's

66
00:02:42,000 --> 00:02:43,920
very interesting because if you modify

67
00:02:43,920 --> 00:02:46,080
one bit in the block

68
00:02:46,080 --> 00:02:47,840
now the hash is

69
00:02:47,840 --> 00:02:50,319
completely different

70
00:02:50,319 --> 00:02:52,480
different if you modify another bit on

71
00:02:52,480 --> 00:02:54,800
the block now the hash is completely

72
00:02:54,800 --> 00:02:56,480
different again

73
00:02:56,480 --> 00:02:59,680
this allows us to verify very quickly if

74
00:02:59,680 --> 00:03:02,000
someone has stamper our block if we

75
00:03:02,000 --> 00:03:04,720
compare the hash

76
00:03:04,720 --> 00:03:07,440
and finally we have a hash of a previous

77
00:03:07,440 --> 00:03:10,400
block so with those three elements now

78
00:03:10,400 --> 00:03:13,040
we have a blockchain

79
00:03:13,040 --> 00:03:14,640
big question here

80
00:03:14,640 --> 00:03:16,879
what happens if an attacker wants to

81
00:03:16,879 --> 00:03:19,599
modify or tamper our blockchain

82
00:03:19,599 --> 00:03:21,680
well blockchain has two powerful

83
00:03:21,680 --> 00:03:24,080
mechanisms to avoid it

84
00:03:24,080 --> 00:03:28,000
the first one is called consensus

85
00:03:28,000 --> 00:03:30,799
and consensus regarding bitcoin and

86
00:03:30,799 --> 00:03:32,879
interior that is what we are going to

87
00:03:32,879 --> 00:03:35,280
see today the consensus mechanism is

88
00:03:35,280 --> 00:03:39,360
called proof of work how does it work

89
00:03:39,360 --> 00:03:42,879
if someone wants to create a block that

90
00:03:42,879 --> 00:03:44,799
contain transaction

91
00:03:44,799 --> 00:03:47,760
of many users have to solve a crypto

92
00:03:47,760 --> 00:03:49,120
challenge

93
00:03:49,120 --> 00:03:50,799
what does it mean

94
00:03:50,799 --> 00:03:52,319
he has to

95
00:03:52,319 --> 00:03:54,080
calculate the hash of all the

96
00:03:54,080 --> 00:03:58,720
transaction plus a number called nons

97
00:03:58,720 --> 00:04:01,920
and this hash has to be compliant with a

98
00:04:01,920 --> 00:04:04,319
specific numerical condition

99
00:04:04,319 --> 00:04:05,280
so

100
00:04:05,280 --> 00:04:07,120
as far as we know there is no

101
00:04:07,120 --> 00:04:09,599
mathematical way to calculate these

102
00:04:09,599 --> 00:04:12,159
nonce you have to guess it

103
00:04:12,159 --> 00:04:12,959
so

104
00:04:12,959 --> 00:04:14,959
the more computational resources you

105
00:04:14,959 --> 00:04:17,120
have it's more likely that you are able

106
00:04:17,120 --> 00:04:20,238
to create a bill with with transactions

107
00:04:20,238 --> 00:04:22,960
the mean time for block creation is 10

108
00:04:22,960 --> 00:04:25,120
minutes why is that

109
00:04:25,120 --> 00:04:28,240
in that way we can avoid spamming of

110
00:04:28,240 --> 00:04:30,479
lock in the blockchain this 10 minutes

111
00:04:30,479 --> 00:04:32,320
is for bitcoins for other blockchain

112
00:04:32,320 --> 00:04:34,320
ebay rights there are some events on

113
00:04:34,320 --> 00:04:37,680
blockchain that it takes just seconds to

114
00:04:37,680 --> 00:04:40,080
to process the blocks

115
00:04:40,080 --> 00:04:42,400
this process of block creation is called

116
00:04:42,400 --> 00:04:44,720
mining and the ones who participate are

117
00:04:44,720 --> 00:04:47,919
called of course miners

118
00:04:48,880 --> 00:04:50,000
okay

119
00:04:50,000 --> 00:04:52,400
the second mechanism is called

120
00:04:52,400 --> 00:04:54,880
peer-to-peer network

121
00:04:54,880 --> 00:04:58,720
so every participant in the network has

122
00:04:58,720 --> 00:05:02,400
its own local copy of the blockchain

123
00:05:02,400 --> 00:05:04,880
remember is a distributed ledger so

124
00:05:04,880 --> 00:05:08,400
everyone has its own local copy so if a

125
00:05:08,400 --> 00:05:11,680
user wants to create a new blog he

126
00:05:11,680 --> 00:05:13,759
shares the blood with the participants

127
00:05:13,759 --> 00:05:15,120
in the network

128
00:05:15,120 --> 00:05:19,280
and every participant verifies by its by

129
00:05:19,280 --> 00:05:20,639
his own

130
00:05:20,639 --> 00:05:23,360
if that block is compliant or not with a

131
00:05:23,360 --> 00:05:25,039
specific numerical condition i mentioned

132
00:05:25,039 --> 00:05:26,800
earlier if so

133
00:05:26,800 --> 00:05:28,080
then

134
00:05:28,080 --> 00:05:31,199
they join the block to their local

135
00:05:31,199 --> 00:05:32,400
blockchain

136
00:05:32,400 --> 00:05:35,120
that's how they obtain the famous

137
00:05:35,120 --> 00:05:36,639
consensus

138
00:05:36,639 --> 00:05:39,680
if an attacker tries to create a fake

139
00:05:39,680 --> 00:05:41,759
block that is not compliant with a

140
00:05:41,759 --> 00:05:43,680
numerical condition so it's

141
00:05:43,680 --> 00:05:46,560
automatically rejected that's it very

142
00:05:46,560 --> 00:05:48,400
easy

143
00:05:48,400 --> 00:05:50,719
great

144
00:05:51,039 --> 00:05:54,639
now let's talk about smart contracts

145
00:05:54,639 --> 00:05:56,479
we can compare a smart contract with a

146
00:05:56,479 --> 00:05:59,120
traditional contract they both have

147
00:05:59,120 --> 00:06:00,960
terms and conditions

148
00:06:00,960 --> 00:06:03,199
the big difference here is the smart

149
00:06:03,199 --> 00:06:05,840
contract is digitalized so

150
00:06:05,840 --> 00:06:08,720
that term our conditions are expressed

151
00:06:08,720 --> 00:06:09,440
in

152
00:06:09,440 --> 00:06:10,720
code

153
00:06:10,720 --> 00:06:12,160
when you

154
00:06:12,160 --> 00:06:14,240
when you

155
00:06:14,240 --> 00:06:17,360
start that code compile in a blockchain

156
00:06:17,360 --> 00:06:20,080
that's what we call smart contracts so

157
00:06:20,080 --> 00:06:22,000
because data smart contact is inside a

158
00:06:22,000 --> 00:06:24,319
blog developed in a blockchain

159
00:06:24,319 --> 00:06:27,520
it's accessible for everyone

160
00:06:27,520 --> 00:06:30,160
everyone can interact with a contract

161
00:06:30,160 --> 00:06:31,840
i mean

162
00:06:31,840 --> 00:06:33,919
depending on your authorization level

163
00:06:33,919 --> 00:06:36,160
you can do one task or another but at

164
00:06:36,160 --> 00:06:38,000
the end of the day you can interact with

165
00:06:38,000 --> 00:06:39,759
a contract and of course there is

166
00:06:39,759 --> 00:06:42,639
consensus about the outcome of the smart

167
00:06:42,639 --> 00:06:44,960
contract

168
00:06:44,960 --> 00:06:46,720
let's see an example imagine a

169
00:06:46,720 --> 00:06:49,919
crowdfunding platform like kit starter

170
00:06:49,919 --> 00:06:52,560
or indigo there is a product team who

171
00:06:52,560 --> 00:06:55,840
wants to rate some a monetary goal and

172
00:06:55,840 --> 00:06:58,000
on the other side we have

173
00:06:58,000 --> 00:07:01,120
supporters that help that project to be

174
00:07:01,120 --> 00:07:04,639
to be possible so the supporters sends

175
00:07:04,639 --> 00:07:06,560
money to the crowdfunding platform let's

176
00:07:06,560 --> 00:07:09,840
let's imagine kickstarter and

177
00:07:09,840 --> 00:07:10,800
if

178
00:07:10,800 --> 00:07:14,000
there is enough money to fulfill the

179
00:07:14,000 --> 00:07:16,800
monetary goal then the money goes to the

180
00:07:16,800 --> 00:07:19,280
producting otherwise if the goal is not

181
00:07:19,280 --> 00:07:21,599
met the crowdfunding platform returns

182
00:07:21,599 --> 00:07:23,840
money to supporters

183
00:07:23,840 --> 00:07:26,479
how does it work in the blockchain world

184
00:07:26,479 --> 00:07:29,719
let's see

185
00:07:30,639 --> 00:07:32,880
instead of having a

186
00:07:32,880 --> 00:07:35,759
platform we have a smart contract so

187
00:07:35,759 --> 00:07:38,240
supporters send coins

188
00:07:38,240 --> 00:07:41,120
to the smart contract

189
00:07:41,120 --> 00:07:43,120
here you can see that the coins are

190
00:07:43,120 --> 00:07:46,080
inside the smart contract and

191
00:07:46,080 --> 00:07:48,879
if the gold is met the coins are sent

192
00:07:48,879 --> 00:07:51,440
to the product team otherwise the

193
00:07:51,440 --> 00:07:53,680
contract returned

194
00:07:53,680 --> 00:07:56,080
the coins to the supporters

195
00:07:56,080 --> 00:07:58,960
what is the logic inside a contract very

196
00:07:58,960 --> 00:08:01,360
straightforward an if condition

197
00:08:01,360 --> 00:08:03,039
if gold is met

198
00:08:03,039 --> 00:08:06,240
then give money to producting

199
00:08:06,240 --> 00:08:07,919
gold is not met

200
00:08:07,919 --> 00:08:10,080
refund supporter

201
00:08:10,080 --> 00:08:11,039
that's it

202
00:08:11,039 --> 00:08:12,560
very easy

203
00:08:12,560 --> 00:08:14,639
of course we can have many examples and

204
00:08:14,639 --> 00:08:17,360
many different uses cases we have for

205
00:08:17,360 --> 00:08:19,280
example a smart contact for the bank

206
00:08:19,280 --> 00:08:20,479
industry

207
00:08:20,479 --> 00:08:23,599
for loans for insurance for delivery for

208
00:08:23,599 --> 00:08:25,680
music service for streaming for video

209
00:08:25,680 --> 00:08:28,560
games for exchanges etc huge etc many

210
00:08:28,560 --> 00:08:32,318
many applications for smart contracts

211
00:08:32,559 --> 00:08:34,080
okay

212
00:08:34,080 --> 00:08:36,080
nowadays what are the blockchains that

213
00:08:36,080 --> 00:08:39,120
support smart contracts well we have

214
00:08:39,120 --> 00:08:40,640
many of them

215
00:08:40,640 --> 00:08:44,399
but the main one nowadays it's ethereum

216
00:08:44,399 --> 00:08:46,800
if you want to build a smart contact for

217
00:08:46,800 --> 00:08:48,880
interview you can use

218
00:08:48,880 --> 00:08:51,360
solidity programming language it's not

219
00:08:51,360 --> 00:08:53,600
the only one but it's one of the most

220
00:08:53,600 --> 00:08:55,680
popular

221
00:08:55,680 --> 00:08:56,560
okay

222
00:08:56,560 --> 00:08:57,519
now

223
00:08:57,519 --> 00:08:59,279
regarding ethereum

224
00:08:59,279 --> 00:09:00,959
here we have

225
00:09:00,959 --> 00:09:01,760
a

226
00:09:01,760 --> 00:09:03,040
a user

227
00:09:03,040 --> 00:09:05,680
also called external user and we have a

228
00:09:05,680 --> 00:09:08,399
contract both are identified

229
00:09:08,399 --> 00:09:11,920
with a 20 by hexadecimal address

230
00:09:11,920 --> 00:09:13,920
what can we do inside

231
00:09:13,920 --> 00:09:16,480
the blockchain of ethereum well we can

232
00:09:16,480 --> 00:09:19,440
send coins between users

233
00:09:19,440 --> 00:09:21,839
the native coin of ethereum it's called

234
00:09:21,839 --> 00:09:25,760
eater so you can send it to another user

235
00:09:25,760 --> 00:09:27,600
you can also

236
00:09:27,600 --> 00:09:30,080
can interact with a contract when you

237
00:09:30,080 --> 00:09:32,480
interact with a contract you call a

238
00:09:32,480 --> 00:09:35,519
function in a contract that's important

239
00:09:35,519 --> 00:09:36,800
what else

240
00:09:36,800 --> 00:09:39,120
a contract can also interact with

241
00:09:39,120 --> 00:09:40,880
another user

242
00:09:40,880 --> 00:09:43,920
and we can also have chain reactions a

243
00:09:43,920 --> 00:09:45,600
user interact with a contract the

244
00:09:45,600 --> 00:09:47,279
contract interacts with another contract

245
00:09:47,279 --> 00:09:48,880
and that contract interact with another

246
00:09:48,880 --> 00:09:52,240
user a change reaction

247
00:09:52,240 --> 00:09:53,600
well

248
00:09:53,600 --> 00:09:56,880
let's see in action we have a user

249
00:09:56,880 --> 00:10:00,240
that interacts with a contract it means

250
00:10:00,240 --> 00:10:03,680
he calls a function in a contract

251
00:10:03,680 --> 00:10:07,600
and it also means he transacts

252
00:10:07,600 --> 00:10:12,000
but the user has to sign the transaction

253
00:10:12,000 --> 00:10:12,800
why

254
00:10:12,800 --> 00:10:15,279
it's the only way to demonstrate he's

255
00:10:15,279 --> 00:10:18,560
the owner of the transaction so to sign

256
00:10:18,560 --> 00:10:20,800
the transaction he will use

257
00:10:20,800 --> 00:10:22,720
a private key

258
00:10:22,720 --> 00:10:25,200
now the transaction is signed

259
00:10:25,200 --> 00:10:27,760
is sent to the blockchain and everyone

260
00:10:27,760 --> 00:10:29,680
can decrypt with a public key because

261
00:10:29,680 --> 00:10:31,519
they are public

262
00:10:31,519 --> 00:10:33,440
in a day-to-day operation

263
00:10:33,440 --> 00:10:34,640
users

264
00:10:34,640 --> 00:10:37,200
don't sign manually the transaction so

265
00:10:37,200 --> 00:10:39,519
he uses some tools like

266
00:10:39,519 --> 00:10:41,839
the crypto wallets we have many crypto

267
00:10:41,839 --> 00:10:43,600
wallets

268
00:10:43,600 --> 00:10:47,040
that we can use to store and manage that

269
00:10:47,040 --> 00:10:49,760
private key

270
00:10:50,079 --> 00:10:51,040
right

271
00:10:51,040 --> 00:10:52,320
now

272
00:10:52,320 --> 00:10:54,160
let's see what are the centralized

273
00:10:54,160 --> 00:10:56,880
applications or dabs

274
00:10:56,880 --> 00:10:59,279
let's see one of them in action

275
00:10:59,279 --> 00:11:02,640
for example here we have a adapt called

276
00:11:02,640 --> 00:11:05,920
synthetics that is a dab that allow us

277
00:11:05,920 --> 00:11:08,880
to interact with financial assets

278
00:11:08,880 --> 00:11:10,880
as you can see it looks like a normal

279
00:11:10,880 --> 00:11:13,279
webpage

280
00:11:13,279 --> 00:11:16,160
we go to a stacking option

281
00:11:16,160 --> 00:11:17,680
and in the upper corner you'll see that

282
00:11:17,680 --> 00:11:20,480
we are not connected so we try to

283
00:11:20,480 --> 00:11:22,160
connect a wallet

284
00:11:22,160 --> 00:11:24,079
in this dab

285
00:11:24,079 --> 00:11:26,000
and appear a

286
00:11:26,000 --> 00:11:28,560
menu with many wallets i will use

287
00:11:28,560 --> 00:11:30,720
metamask for example metamask is a

288
00:11:30,720 --> 00:11:32,959
crypto wallet that can be installed as

289
00:11:32,959 --> 00:11:35,440
applying in in a browser it's very easy

290
00:11:35,440 --> 00:11:39,760
to use so i will select metamask

291
00:11:39,839 --> 00:11:42,079
will appear a screen showing all the

292
00:11:42,079 --> 00:11:44,560
address that i that i have in in my

293
00:11:44,560 --> 00:11:46,880
wallet i will select the first one that

294
00:11:46,880 --> 00:11:50,399
ends in d1 e6

295
00:11:50,399 --> 00:11:52,880
and now i'm connected as you can see in

296
00:11:52,880 --> 00:11:55,200
the upper corner now i'm using the the

297
00:11:55,200 --> 00:11:58,160
others that ends in d1 e6

298
00:11:58,160 --> 00:12:00,240
and once i connected i can start

299
00:12:00,240 --> 00:12:02,959
interact with different options and

300
00:12:02,959 --> 00:12:04,480
interact with different

301
00:12:04,480 --> 00:12:06,240
financial assets inside the

302
00:12:06,240 --> 00:12:08,000
decentralized application very

303
00:12:08,000 --> 00:12:10,800
straightforward

304
00:12:10,800 --> 00:12:13,760
of course there are many examples of

305
00:12:13,760 --> 00:12:16,639
different apps we have financial apps or

306
00:12:16,639 --> 00:12:19,279
d files that are very popular

307
00:12:19,279 --> 00:12:22,839
from 2020

308
00:12:22,839 --> 00:12:26,480
onwards you also have marketplace like

309
00:12:26,480 --> 00:12:29,200
for example similar to amazon similar to

310
00:12:29,200 --> 00:12:30,639
ebay

311
00:12:30,639 --> 00:12:32,639
we can have dubs

312
00:12:32,639 --> 00:12:34,959
of social networks for example one

313
00:12:34,959 --> 00:12:37,120
similar to youtube

314
00:12:37,120 --> 00:12:39,760
we can also have video games we can have

315
00:12:39,760 --> 00:12:43,200
exchanges we can have streaming services

316
00:12:43,200 --> 00:12:46,079
a huge etc

317
00:12:46,079 --> 00:12:47,600
okay

318
00:12:47,600 --> 00:12:49,600
everything sounds great

319
00:12:49,600 --> 00:12:53,680
but how dubs work inside let's see the

320
00:12:53,680 --> 00:12:56,000
architecture of that

321
00:12:56,000 --> 00:12:57,920
on the left side you see a web

322
00:12:57,920 --> 00:13:00,079
application a traditional web

323
00:13:00,079 --> 00:13:02,000
application on the right side we have

324
00:13:02,000 --> 00:13:07,120
adap so in a traditional web application

325
00:13:07,120 --> 00:13:09,839
we retrieve the static file from a web

326
00:13:09,839 --> 00:13:11,600
server what

327
00:13:11,600 --> 00:13:14,560
what i mean with the static file is html

328
00:13:14,560 --> 00:13:17,279
css and javascript

329
00:13:17,279 --> 00:13:18,959
and

330
00:13:18,959 --> 00:13:22,800
i mean the visual part now

331
00:13:22,800 --> 00:13:24,880
the browser connects to a backend for

332
00:13:24,880 --> 00:13:27,200
example through apis data can connect to

333
00:13:27,200 --> 00:13:29,519
a database and so on that's a

334
00:13:29,519 --> 00:13:31,040
traditional architecture for a web

335
00:13:31,040 --> 00:13:32,079
application

336
00:13:32,079 --> 00:13:35,200
on the other side in adapt

337
00:13:35,200 --> 00:13:36,880
the static files

338
00:13:36,880 --> 00:13:38,079
and the

339
00:13:38,079 --> 00:13:41,279
and the backend is inside the blockchain

340
00:13:41,279 --> 00:13:44,160
the most used architecture is a hybrid

341
00:13:44,160 --> 00:13:46,079
one

342
00:13:46,079 --> 00:13:49,040
so the static files are retrieved from a

343
00:13:49,040 --> 00:13:51,279
web server and

344
00:13:51,279 --> 00:13:52,160
the

345
00:13:52,160 --> 00:13:55,040
the backend is on blockchain

346
00:13:55,040 --> 00:13:57,040
big question here

347
00:13:57,040 --> 00:13:59,839
what is the magic behind that how is

348
00:13:59,839 --> 00:14:01,839
possible that a browser connects to a

349
00:14:01,839 --> 00:14:03,199
blockchain

350
00:14:03,199 --> 00:14:06,240
well let's see

351
00:14:06,240 --> 00:14:10,079
let's look uh closer how it works

352
00:14:10,079 --> 00:14:12,079
here we have a browser and on the other

353
00:14:12,079 --> 00:14:15,760
side we have double blockchain so

354
00:14:15,760 --> 00:14:17,920
in order to to that everything works

355
00:14:17,920 --> 00:14:20,639
okay we need an intermediary

356
00:14:20,639 --> 00:14:23,360
for example we can use a server a

357
00:14:23,360 --> 00:14:26,000
computer or a cloud service and we are

358
00:14:26,000 --> 00:14:29,440
going to turn this server for example

359
00:14:29,440 --> 00:14:31,519
in a it you know

360
00:14:31,519 --> 00:14:34,160
how can i get that very easy i can

361
00:14:34,160 --> 00:14:37,519
install a tool like get i can use a

362
00:14:37,519 --> 00:14:39,680
cloud service like in fura et cetera

363
00:14:39,680 --> 00:14:41,120
many options

364
00:14:41,120 --> 00:14:44,480
what does it mean to be itu know well

365
00:14:44,480 --> 00:14:46,320
the server has have

366
00:14:46,320 --> 00:14:47,760
needs to have

367
00:14:47,760 --> 00:14:50,399
their its own local copy of the

368
00:14:50,399 --> 00:14:51,600
blockchain

369
00:14:51,600 --> 00:14:54,720
with the smart contract of course

370
00:14:54,720 --> 00:14:56,000
he also

371
00:14:56,000 --> 00:14:58,399
installed a company ethereum

372
00:14:58,399 --> 00:15:02,000
virtual machine that allows to interpret

373
00:15:02,000 --> 00:15:03,199
the

374
00:15:03,199 --> 00:15:05,600
instruction for the smart contracts and

375
00:15:05,600 --> 00:15:08,320
we also have interfaces

376
00:15:08,320 --> 00:15:09,920
that allow

377
00:15:09,920 --> 00:15:12,800
external user or internal process

378
00:15:12,800 --> 00:15:16,000
communicate with the tv node

379
00:15:16,000 --> 00:15:17,920
now let's see in action we have

380
00:15:17,920 --> 00:15:19,760
everything ready

381
00:15:19,760 --> 00:15:22,320
the browser retrieves a static file from

382
00:15:22,320 --> 00:15:23,760
web server

383
00:15:23,760 --> 00:15:26,800
as i told you earlier html css

384
00:15:26,800 --> 00:15:28,639
javascript files

385
00:15:28,639 --> 00:15:30,480
one of the many javascript files that

386
00:15:30,480 --> 00:15:35,440
you can use is for example with web3 js

387
00:15:35,440 --> 00:15:38,240
it's a popular javascript

388
00:15:38,240 --> 00:15:39,440
file

389
00:15:39,440 --> 00:15:41,040
this allows you

390
00:15:41,040 --> 00:15:44,000
to create a transaction

391
00:15:44,000 --> 00:15:46,160
to build the transaction

392
00:15:46,160 --> 00:15:48,399
but remember before using the

393
00:15:48,399 --> 00:15:51,040
transaction you have to sign

394
00:15:51,040 --> 00:15:53,680
the transaction so you use

395
00:15:53,680 --> 00:15:56,399
applying like metamask

396
00:15:56,399 --> 00:15:59,120
that store and manage your private key

397
00:15:59,120 --> 00:16:01,600
and sign that transaction i mean you

398
00:16:01,600 --> 00:16:04,079
build and sign the transaction and then

399
00:16:04,079 --> 00:16:06,320
you send to the theory load through for

400
00:16:06,320 --> 00:16:10,480
example a protocol like http or https

401
00:16:10,480 --> 00:16:13,759
very easy and here comes the magic

402
00:16:13,759 --> 00:16:17,120
if your transaction is a rate only or a

403
00:16:17,120 --> 00:16:20,240
query transaction for example how much

404
00:16:20,240 --> 00:16:23,279
how many tokens do i have in my account

405
00:16:23,279 --> 00:16:25,839
you read the value directly

406
00:16:25,839 --> 00:16:30,160
from your local copy of blockchain

407
00:16:30,160 --> 00:16:33,120
and the values returned to the user

408
00:16:33,120 --> 00:16:34,399
but

409
00:16:34,399 --> 00:16:37,680
if your transaction implies a change for

410
00:16:37,680 --> 00:16:40,320
example send some coins to the smart

411
00:16:40,320 --> 00:16:43,680
contract or deploy a new smart contract

412
00:16:43,680 --> 00:16:46,399
on the blockchain in those examples

413
00:16:46,399 --> 00:16:48,720
internally you create

414
00:16:48,720 --> 00:16:52,800
a new block in your ethereum node

415
00:16:52,800 --> 00:16:55,920
and this ethereum node through ethereum

416
00:16:55,920 --> 00:16:57,759
protocol

417
00:16:57,759 --> 00:16:59,519
share that block

418
00:16:59,519 --> 00:17:01,759
to other participants in the network and

419
00:17:01,759 --> 00:17:03,120
you remember

420
00:17:03,120 --> 00:17:05,359
if those participants

421
00:17:05,359 --> 00:17:07,359
verified verify that the block is

422
00:17:07,359 --> 00:17:09,439
compliant with a specific numerical

423
00:17:09,439 --> 00:17:12,640
condition so they join the block to

424
00:17:12,640 --> 00:17:13,599
their

425
00:17:13,599 --> 00:17:16,400
own local copy of blockchain

426
00:17:16,400 --> 00:17:20,319
that's it very easy

427
00:17:20,319 --> 00:17:21,359
okay

428
00:17:21,359 --> 00:17:22,160
uh

429
00:17:22,160 --> 00:17:24,160
the big question here is

430
00:17:24,160 --> 00:17:26,319
are dabs secure

431
00:17:26,319 --> 00:17:29,438
well as far as we know

432
00:17:29,520 --> 00:17:31,520
we know that smart contact and apps in

433
00:17:31,520 --> 00:17:32,400
general

434
00:17:32,400 --> 00:17:35,120
are immutable and no one can modify your

435
00:17:35,120 --> 00:17:37,918
smart contracts

436
00:17:38,480 --> 00:17:39,760
all users

437
00:17:39,760 --> 00:17:42,799
sign the transaction

438
00:17:42,799 --> 00:17:44,960
and the code of the smart contract is

439
00:17:44,960 --> 00:17:48,080
available for everyone so everyone can

440
00:17:48,080 --> 00:17:50,480
read and interact with a smart contract

441
00:17:50,480 --> 00:17:51,440
so

442
00:17:51,440 --> 00:17:53,840
what can go wrong

443
00:17:53,840 --> 00:17:56,080
well

444
00:17:56,240 --> 00:17:57,760
many things

445
00:17:57,760 --> 00:18:01,360
here i show you some news about

446
00:18:01,360 --> 00:18:05,440
about a steal of millions of of money in

447
00:18:05,440 --> 00:18:07,679
blockchain platform

448
00:18:07,679 --> 00:18:10,799
why how does it happen

449
00:18:10,799 --> 00:18:14,400
let's see some example and now my

450
00:18:14,400 --> 00:18:15,600
favorite part

451
00:18:15,600 --> 00:18:16,640
hacking

452
00:18:16,640 --> 00:18:19,520
how can we hack some dubs some smart

453
00:18:19,520 --> 00:18:22,080
contracts

454
00:18:22,559 --> 00:18:25,039
i will show you the for example an

455
00:18:25,039 --> 00:18:28,400
encrypted private data so let's see

456
00:18:28,400 --> 00:18:31,440
this example we have a smart contract

457
00:18:31,440 --> 00:18:32,960
for a betting dab

458
00:18:32,960 --> 00:18:34,559
okay so

459
00:18:34,559 --> 00:18:36,160
it's a betting tab and we have two

460
00:18:36,160 --> 00:18:37,440
players

461
00:18:37,440 --> 00:18:38,720
player one

462
00:18:38,720 --> 00:18:40,640
bets

463
00:18:40,640 --> 00:18:42,640
bets one eater

464
00:18:42,640 --> 00:18:44,720
to the number and one

465
00:18:44,720 --> 00:18:47,360
only player one and only the contract

466
00:18:47,360 --> 00:18:49,679
know what is that number and one

467
00:18:49,679 --> 00:18:51,280
on the other hand

468
00:18:51,280 --> 00:18:52,559
player two

469
00:18:52,559 --> 00:18:56,080
bets one eater to the number and n2

470
00:18:56,080 --> 00:18:59,840
again only player 2 and a contract know

471
00:18:59,840 --> 00:19:02,080
what is n2

472
00:19:02,080 --> 00:19:02,960
so

473
00:19:02,960 --> 00:19:06,080
if the sum of the numbers

474
00:19:06,080 --> 00:19:06,880
is

475
00:19:06,880 --> 00:19:07,760
even

476
00:19:07,760 --> 00:19:10,640
all the money goes to player 1

477
00:19:10,640 --> 00:19:12,400
but if the sun

478
00:19:12,400 --> 00:19:13,679
is odd

479
00:19:13,679 --> 00:19:16,960
all the money goes to player 2.

480
00:19:16,960 --> 00:19:19,440
it's it sounds like a fair game they

481
00:19:19,440 --> 00:19:21,840
both have 50 50

482
00:19:21,840 --> 00:19:24,640
of winning the game right

483
00:19:24,640 --> 00:19:25,760
are you sure

484
00:19:25,760 --> 00:19:28,480
let's see the call

485
00:19:28,480 --> 00:19:31,120
here we have a data structure that

486
00:19:31,120 --> 00:19:33,440
represents a player and here we have a

487
00:19:33,440 --> 00:19:36,080
number field

488
00:19:36,240 --> 00:19:38,400
do you remember that when a user

489
00:19:38,400 --> 00:19:40,320
interacts with a contract he calls a

490
00:19:40,320 --> 00:19:43,039
function well this is a function called

491
00:19:43,039 --> 00:19:44,400
play

492
00:19:44,400 --> 00:19:47,039
and this public when it's public it

493
00:19:47,039 --> 00:19:49,200
means that external user

494
00:19:49,200 --> 00:19:51,120
the players can interact with this

495
00:19:51,120 --> 00:19:52,559
function

496
00:19:52,559 --> 00:19:54,320
here's a function to get

497
00:19:54,320 --> 00:19:57,919
and also we have a private function

498
00:19:57,919 --> 00:20:00,320
this function calculate who is the

499
00:20:00,320 --> 00:20:02,880
winner and sends the money but be

500
00:20:02,880 --> 00:20:04,080
careful

501
00:20:04,080 --> 00:20:07,280
because it's private nobody outside a

502
00:20:07,280 --> 00:20:09,440
contract can interact with this function

503
00:20:09,440 --> 00:20:12,240
so players cannot interact directly with

504
00:20:12,240 --> 00:20:13,919
this function

505
00:20:13,919 --> 00:20:15,840
and we also have a

506
00:20:15,840 --> 00:20:18,559
player data that are private so of

507
00:20:18,559 --> 00:20:19,440
course

508
00:20:19,440 --> 00:20:21,760
nobody outside the contract

509
00:20:21,760 --> 00:20:24,159
knows what is what are the numbers so

510
00:20:24,159 --> 00:20:27,360
everything is secret apparently

511
00:20:27,360 --> 00:20:30,159
but we are in a blockchain world

512
00:20:30,159 --> 00:20:32,640
so let's see this

513
00:20:32,640 --> 00:20:34,880
in attack

514
00:20:34,880 --> 00:20:36,640
i'm going to

515
00:20:36,640 --> 00:20:39,600
change my screen

516
00:20:39,600 --> 00:20:41,280
and

517
00:20:41,280 --> 00:20:42,320
now

518
00:20:42,320 --> 00:20:43,679
you see my

519
00:20:43,679 --> 00:20:45,679
id

520
00:20:45,679 --> 00:20:46,640
and

521
00:20:46,640 --> 00:20:47,600
here i

522
00:20:47,600 --> 00:20:52,320
show you remix remix it's an online ide

523
00:20:52,320 --> 00:20:54,480
that allows to

524
00:20:54,480 --> 00:20:56,400
write some code and interact with the

525
00:20:56,400 --> 00:20:57,919
contracts

526
00:20:57,919 --> 00:21:00,559
this id is connected to a local

527
00:21:00,559 --> 00:21:03,840
blockchain that appears here

528
00:21:04,720 --> 00:21:06,799
and this local blockchain we have some

529
00:21:06,799 --> 00:21:08,320
address etc

530
00:21:08,320 --> 00:21:09,360
okay

531
00:21:09,360 --> 00:21:11,840
in this section

532
00:21:11,840 --> 00:21:13,760
here appears the different accounts that

533
00:21:13,760 --> 00:21:16,640
i can use this is test account of course

534
00:21:16,640 --> 00:21:21,039
every account has a 100 items

535
00:21:21,039 --> 00:21:23,120
here appears the value of money that i

536
00:21:23,120 --> 00:21:25,039
can send

537
00:21:25,039 --> 00:21:26,640
and here

538
00:21:26,640 --> 00:21:29,600
it's a button to deploy the contacts so

539
00:21:29,600 --> 00:21:31,440
this is the example i'm going to show

540
00:21:31,440 --> 00:21:33,360
you this contract

541
00:21:33,360 --> 00:21:35,120
is that contract that i'm going to

542
00:21:35,120 --> 00:21:37,520
deploy

543
00:21:38,080 --> 00:21:40,559
okay i have deployed a contract

544
00:21:40,559 --> 00:21:41,679
and

545
00:21:41,679 --> 00:21:44,559
let's imagine that this account that

546
00:21:44,559 --> 00:21:49,120
start with 56d is player number one

547
00:21:49,120 --> 00:21:51,360
player number one is going to get

548
00:21:51,360 --> 00:21:53,200
one eater

549
00:21:53,200 --> 00:21:54,559
to let's say

550
00:21:54,559 --> 00:21:57,039
to number seven

551
00:21:57,039 --> 00:21:59,440
he plays

552
00:21:59,440 --> 00:22:01,360
everything works okay

553
00:22:01,360 --> 00:22:03,600
and now it's turn

554
00:22:03,600 --> 00:22:06,480
off player number two here if you see he

555
00:22:06,480 --> 00:22:08,960
has he has bet one liter so

556
00:22:08,960 --> 00:22:10,559
he has now

557
00:22:10,559 --> 00:22:13,360
almost 99 eater

558
00:22:13,360 --> 00:22:15,840
i'm going to chain to play player number

559
00:22:15,840 --> 00:22:16,960
two

560
00:22:16,960 --> 00:22:20,559
that start with 732 he has

561
00:22:20,559 --> 00:22:23,760
100 eater but before he plays

562
00:22:23,760 --> 00:22:25,200
he's going to see

563
00:22:25,200 --> 00:22:27,120
the blockchain the transaction in

564
00:22:27,120 --> 00:22:28,240
blockchain

565
00:22:28,240 --> 00:22:30,320
here you can see this is a

566
00:22:30,320 --> 00:22:31,919
transaction for the

567
00:22:31,919 --> 00:22:34,240
deployment of the contract and here is a

568
00:22:34,240 --> 00:22:37,039
transaction of player 1

569
00:22:37,039 --> 00:22:39,360
betting for one number

570
00:22:39,360 --> 00:22:40,640
but remember

571
00:22:40,640 --> 00:22:42,960
everything every information

572
00:22:42,960 --> 00:22:45,520
is always record on blockchain and that

573
00:22:45,520 --> 00:22:47,760
information is public

574
00:22:47,760 --> 00:22:48,720
your

575
00:22:48,720 --> 00:22:52,240
your variables your data can be private

576
00:22:52,240 --> 00:22:53,679
inside a contract

577
00:22:53,679 --> 00:22:56,159
but once you transact that information

578
00:22:56,159 --> 00:22:58,960
is stored in a blockchain so it's public

579
00:22:58,960 --> 00:23:01,200
if i'm going to see i'm going to see

580
00:23:01,200 --> 00:23:03,200
this transaction

581
00:23:03,200 --> 00:23:06,480
and here we see some data

582
00:23:06,480 --> 00:23:08,960
at first it doesn't make sense but if we

583
00:23:08,960 --> 00:23:11,840
take a closer look we see that this

584
00:23:11,840 --> 00:23:13,120
number

585
00:23:13,120 --> 00:23:15,200
is an identifier

586
00:23:15,200 --> 00:23:17,840
of the plague function

587
00:23:17,840 --> 00:23:21,039
and this number here

588
00:23:21,039 --> 00:23:24,400
it's the number player 1

589
00:23:24,400 --> 00:23:25,760
bet

590
00:23:25,760 --> 00:23:29,679
in hexadecimal so everyone can see that

591
00:23:29,679 --> 00:23:34,000
player 1 has bet to number 7

592
00:23:34,159 --> 00:23:35,120
so

593
00:23:35,120 --> 00:23:37,280
if player two see this

594
00:23:37,280 --> 00:23:39,039
he he will try

595
00:23:39,039 --> 00:23:42,559
to create an even some to win of course

596
00:23:42,559 --> 00:23:45,919
so now i player two i'm going to play

597
00:23:45,919 --> 00:23:47,840
for example to number

598
00:23:47,840 --> 00:23:51,039
the number four why because the sum is

599
00:23:51,039 --> 00:23:52,480
even

600
00:23:52,480 --> 00:23:54,720
i'm lewis at the moment i it might be on

601
00:23:54,720 --> 00:23:57,840
purpose but i can just see demo time

602
00:23:57,840 --> 00:23:58,640
oh

603
00:23:58,640 --> 00:23:59,760
sorry

604
00:23:59,760 --> 00:24:01,279
i'm going to

605
00:24:01,279 --> 00:24:03,840
i'm going to shoot

606
00:24:03,840 --> 00:24:06,559
wait wait wait

607
00:24:12,080 --> 00:24:13,760
do you see my screen now

608
00:24:13,760 --> 00:24:16,080
yes now i can see the screen okay okay

609
00:24:16,080 --> 00:24:19,120
do not worry i'm going to repeat again

610
00:24:19,120 --> 00:24:20,080
uh

611
00:24:20,080 --> 00:24:23,120
here i show you my id this is remix it's

612
00:24:23,120 --> 00:24:24,559
an online id

613
00:24:24,559 --> 00:24:28,559
and as i told you before this is uh

614
00:24:28,559 --> 00:24:31,279
this is my local blockchain just for

615
00:24:31,279 --> 00:24:35,279
example and test purposes so

616
00:24:35,279 --> 00:24:37,760
i'm going to i'm going to

617
00:24:37,760 --> 00:24:41,679
to reset my my blockchain

618
00:24:41,679 --> 00:24:43,279
okay

619
00:24:43,279 --> 00:24:44,080
okay

620
00:24:44,080 --> 00:24:46,159
here i have that the smart contact i

621
00:24:46,159 --> 00:24:47,760
told you before

622
00:24:47,760 --> 00:24:51,039
so i'm going to deploy the contract

623
00:24:51,039 --> 00:24:53,760
pretty quickly

624
00:24:54,000 --> 00:24:54,720
and

625
00:24:54,720 --> 00:24:57,919
here we have different test accounts

626
00:24:57,919 --> 00:25:00,400
i'm going to select this account uh

627
00:25:00,400 --> 00:25:04,000
that'll start with not knight fight f

628
00:25:04,000 --> 00:25:06,400
in this part he's going to

629
00:25:06,400 --> 00:25:09,039
write how much how much money he's going

630
00:25:09,039 --> 00:25:10,080
to send

631
00:25:10,080 --> 00:25:11,120
and here

632
00:25:11,120 --> 00:25:13,200
he can interact with that contract the

633
00:25:13,200 --> 00:25:15,279
contract is already deployed and here we

634
00:25:15,279 --> 00:25:17,520
see the plate function

635
00:25:17,520 --> 00:25:19,760
so

636
00:25:19,840 --> 00:25:24,159
let's see he's going to get one eater

637
00:25:24,159 --> 00:25:25,279
i said

638
00:25:25,279 --> 00:25:27,200
to number seven

639
00:25:27,200 --> 00:25:30,159
and he's going to play

640
00:25:30,640 --> 00:25:31,760
if you see

641
00:25:31,760 --> 00:25:32,720
the

642
00:25:32,720 --> 00:25:35,760
local blockchain here in transactions

643
00:25:35,760 --> 00:25:38,480
you see that here there is a transaction

644
00:25:38,480 --> 00:25:41,279
for the contract creation and there is a

645
00:25:41,279 --> 00:25:44,720
transaction for player1 that has bet to

646
00:25:44,720 --> 00:25:47,679
some number if we click that

647
00:25:47,679 --> 00:25:50,080
we see some data here

648
00:25:50,080 --> 00:25:51,360
and we see

649
00:25:51,360 --> 00:25:54,840
that this value is the identifier of the

650
00:25:54,840 --> 00:25:57,200
function and

651
00:25:57,200 --> 00:25:59,360
this value here

652
00:25:59,360 --> 00:26:02,720
is a number that player 1 has bet 2.

653
00:26:02,720 --> 00:26:05,440
this information is open to anyone so

654
00:26:05,440 --> 00:26:08,240
anyone can see this value

655
00:26:08,240 --> 00:26:10,400
player 2 can also see this value

656
00:26:10,400 --> 00:26:12,880
so if he know that player 1 has played

657
00:26:12,880 --> 00:26:15,279
to number 7

658
00:26:15,279 --> 00:26:16,640
and now

659
00:26:16,640 --> 00:26:19,360
let's see player number 2 that start

660
00:26:19,360 --> 00:26:21,760
with 7 f 0

661
00:26:21,760 --> 00:26:25,360
he has 100 eater so he will

662
00:26:25,360 --> 00:26:27,120
bet one eater

663
00:26:27,120 --> 00:26:31,760
to a number that made him win so he can

664
00:26:31,760 --> 00:26:33,840
he can bet to number four

665
00:26:33,840 --> 00:26:37,600
because the sum is 11 there is

666
00:26:37,600 --> 00:26:39,840
and so

667
00:26:39,840 --> 00:26:42,960
now he's going to bet one eater so he

668
00:26:42,960 --> 00:26:46,400
will have 99 eater if he wins he will

669
00:26:46,400 --> 00:26:48,559
receive twitter and at the end he will

670
00:26:48,559 --> 00:26:51,840
have 101 eater let's see

671
00:26:51,840 --> 00:26:55,439
if it's if it works

672
00:26:56,880 --> 00:26:58,640
okay

673
00:26:58,640 --> 00:27:00,880
the transaction is okay and if we see

674
00:27:00,880 --> 00:27:02,320
now

675
00:27:02,320 --> 00:27:03,840
right

676
00:27:03,840 --> 00:27:04,880
we have

677
00:27:04,880 --> 00:27:09,679
101 eater approximately minus fizz

678
00:27:09,679 --> 00:27:13,039
so now he's able to win he always wins

679
00:27:13,039 --> 00:27:15,520
because he will know where is the number

680
00:27:15,520 --> 00:27:18,240
other players are betting to because

681
00:27:18,240 --> 00:27:20,399
again all the information in blockchain

682
00:27:20,399 --> 00:27:23,200
is always public

683
00:27:23,200 --> 00:27:25,200
let's return to the

684
00:27:25,200 --> 00:27:27,120
presentation

685
00:27:27,120 --> 00:27:29,440
where is the remediation well actually

686
00:27:29,440 --> 00:27:31,600
any private data should either be stored

687
00:27:31,600 --> 00:27:35,039
off-chain or encrypted and i will add

688
00:27:35,039 --> 00:27:37,200
another one

689
00:27:37,200 --> 00:27:40,399
you can have private data in some exotic

690
00:27:40,399 --> 00:27:43,039
blockchain like secret network but for

691
00:27:43,039 --> 00:27:45,520
other blockchain like ethereum you you

692
00:27:45,520 --> 00:27:48,000
need to encrypt the data before or store

693
00:27:48,000 --> 00:27:50,159
the the private data in another in

694
00:27:50,159 --> 00:27:51,679
another

695
00:27:51,679 --> 00:27:54,640
site outside that blockchain

696
00:27:54,640 --> 00:27:56,880
that's it

697
00:27:56,880 --> 00:27:59,760
okay here we have the second example

698
00:27:59,760 --> 00:28:01,600
integral overflow

699
00:28:01,600 --> 00:28:03,120
best way to understand this is to

700
00:28:03,120 --> 00:28:06,320
imagine an odometer of an old car

701
00:28:06,320 --> 00:28:09,200
so if you reach the maximum number

702
00:28:09,200 --> 00:28:11,679
and you run another mile

703
00:28:11,679 --> 00:28:14,000
this solometer will become

704
00:28:14,000 --> 00:28:15,200
zero again

705
00:28:15,200 --> 00:28:16,880
and that's the key of the integer

706
00:28:16,880 --> 00:28:18,880
overflow

707
00:28:18,880 --> 00:28:20,080
let's see

708
00:28:20,080 --> 00:28:22,880
imagine you have an exchange dab

709
00:28:22,880 --> 00:28:26,559
you send one eater and you receive

710
00:28:26,559 --> 00:28:28,559
one token

711
00:28:28,559 --> 00:28:30,799
that token could be anything could be

712
00:28:30,799 --> 00:28:32,880
points in a coffee shop

713
00:28:32,880 --> 00:28:36,640
could be miles in a flight company etc

714
00:28:36,640 --> 00:28:38,240
so

715
00:28:38,240 --> 00:28:39,679
here we have the

716
00:28:39,679 --> 00:28:41,760
contract and the code of the

717
00:28:41,760 --> 00:28:44,240
of the contract

718
00:28:44,240 --> 00:28:46,480
here we have a variable called balance

719
00:28:46,480 --> 00:28:49,440
off that represents how many tokens the

720
00:28:49,440 --> 00:28:51,600
user has

721
00:28:51,600 --> 00:28:54,960
this value is represented as an inside

722
00:28:54,960 --> 00:28:56,840
net integer

723
00:28:56,840 --> 00:29:01,520
256 so the value arise between 0 and

724
00:29:01,520 --> 00:29:05,279
2 powers 256 minus 1.

725
00:29:05,279 --> 00:29:06,640
so

726
00:29:06,640 --> 00:29:08,080
if you add

727
00:29:08,080 --> 00:29:10,559
one unit to this maximum value what

728
00:29:10,559 --> 00:29:13,440
happens you can imagine it overflows and

729
00:29:13,440 --> 00:29:15,600
becomes zero again

730
00:29:15,600 --> 00:29:20,080
and that will be the key for this attack

731
00:29:20,240 --> 00:29:23,600
here we have the price of the token is

732
00:29:23,600 --> 00:29:24,880
one letter

733
00:29:24,880 --> 00:29:27,919
just for general culture one meter

734
00:29:27,919 --> 00:29:31,440
represents 10 power 18 way weight is the

735
00:29:31,440 --> 00:29:34,320
minimum the minimum unit so you can

736
00:29:34,320 --> 00:29:37,039
think of eternal weight the same way

737
00:29:37,039 --> 00:29:40,720
that dollar and cents for example

738
00:29:40,720 --> 00:29:42,720
and here we have a function a public

739
00:29:42,720 --> 00:29:45,840
function to buy tokens of course

740
00:29:45,840 --> 00:29:48,640
the money you pay depends on the number

741
00:29:48,640 --> 00:29:53,120
of tokens you buy and the unit price

742
00:29:53,120 --> 00:29:57,120
so how much to pay

743
00:29:58,240 --> 00:30:01,120
we multiply number of tokens per unit

744
00:30:01,120 --> 00:30:03,279
price

745
00:30:03,279 --> 00:30:05,520
number of tokens

746
00:30:05,520 --> 00:30:07,200
multiplied

747
00:30:07,200 --> 00:30:09,760
with one header and remember one letter

748
00:30:09,760 --> 00:30:13,360
is 10 powers 18 way

749
00:30:13,360 --> 00:30:14,640
now

750
00:30:14,640 --> 00:30:17,200
we have to look for a huge number of

751
00:30:17,200 --> 00:30:19,039
tokens

752
00:30:19,039 --> 00:30:22,559
to overflow the total value so if we for

753
00:30:22,559 --> 00:30:25,039
example use

754
00:30:25,039 --> 00:30:27,760
this huge number of token the

755
00:30:27,760 --> 00:30:29,200
multiplication

756
00:30:29,200 --> 00:30:30,720
will be

757
00:30:30,720 --> 00:30:34,159
this this value this is small value why

758
00:30:34,159 --> 00:30:36,240
because when you multiply this value

759
00:30:36,240 --> 00:30:39,120
that is b with another value that it's

760
00:30:39,120 --> 00:30:40,559
also big

761
00:30:40,559 --> 00:30:43,440
it will overflow the integer and side

762
00:30:43,440 --> 00:30:45,520
integral 256

763
00:30:45,520 --> 00:30:47,760
and you have this small

764
00:30:47,760 --> 00:30:48,880
value

765
00:30:48,880 --> 00:30:50,399
so it

766
00:30:50,399 --> 00:30:52,679
in eater it's

767
00:30:52,679 --> 00:30:56,960
0.41 etc eater so let's recap

768
00:30:56,960 --> 00:30:59,519
if you want to buy one token you have to

769
00:30:59,519 --> 00:31:02,240
pay one eater if you want to buy

770
00:31:02,240 --> 00:31:06,080
five tokens you have to pay five eater

771
00:31:06,080 --> 00:31:06,880
but

772
00:31:06,880 --> 00:31:09,840
apparently if you want to buy this huge

773
00:31:09,840 --> 00:31:11,760
number of tokens

774
00:31:11,760 --> 00:31:13,760
you have to pay

775
00:31:13,760 --> 00:31:15,039
less

776
00:31:15,039 --> 00:31:15,919
than

777
00:31:15,919 --> 00:31:20,240
one eater in fact less than half eater

778
00:31:20,240 --> 00:31:23,039
is it true let's see

779
00:31:23,039 --> 00:31:26,000
let's see in action

780
00:31:26,000 --> 00:31:28,640
here i have i'm going to

781
00:31:28,640 --> 00:31:30,080
erase

782
00:31:30,080 --> 00:31:32,480
that contact i'm going to deploy this

783
00:31:32,480 --> 00:31:35,600
contract let's see

784
00:31:36,159 --> 00:31:40,159
i'm going to deploy this contract

785
00:31:40,960 --> 00:31:43,679
okay now it's deployed

786
00:31:43,679 --> 00:31:47,039
and here we have we see the buy function

787
00:31:47,039 --> 00:31:50,080
that chain of account we are going to

788
00:31:50,080 --> 00:31:52,559
work with this account that start with 7

789
00:31:52,559 --> 00:31:54,159
to 5.

790
00:31:54,159 --> 00:31:56,960
he has 100 eater

791
00:31:56,960 --> 00:31:59,120
so

792
00:31:59,120 --> 00:32:02,479
at first let's see

793
00:32:02,720 --> 00:32:03,840
if we

794
00:32:03,840 --> 00:32:06,559
review the balance of this account

795
00:32:06,559 --> 00:32:09,679
at first he has zero tokens right he has

796
00:32:09,679 --> 00:32:12,480
no tokens for of the contract now i'm

797
00:32:12,480 --> 00:32:13,760
going to buy

798
00:32:13,760 --> 00:32:16,559
this huge number of token i'm going to

799
00:32:16,559 --> 00:32:17,760
copy

800
00:32:17,760 --> 00:32:20,559
this huge value

801
00:32:20,799 --> 00:32:23,760
i will buy this number of tokens and i'm

802
00:32:23,760 --> 00:32:25,279
going to pay

803
00:32:25,279 --> 00:32:28,880
this value in ways

804
00:32:28,880 --> 00:32:30,080
remember

805
00:32:30,080 --> 00:32:33,360
the money goes here

806
00:32:34,480 --> 00:32:37,760
so i will pay this

807
00:32:37,840 --> 00:32:40,959
but in way

808
00:32:41,039 --> 00:32:42,559
okay is it true

809
00:32:42,559 --> 00:32:44,000
let's try

810
00:32:44,000 --> 00:32:46,399
i buy

811
00:32:46,399 --> 00:32:49,679
the transaction is okay and if i review

812
00:32:49,679 --> 00:32:52,799
again the balance of this user i'm going

813
00:32:52,799 --> 00:32:55,200
to see that now he's

814
00:32:55,200 --> 00:32:57,519
he's millionaire in token he has many

815
00:32:57,519 --> 00:32:59,840
many many many tokens

816
00:32:59,840 --> 00:33:03,200
and how much money he spent

817
00:33:03,200 --> 00:33:04,960
here you can see

818
00:33:04,960 --> 00:33:07,840
at the beginning we we had 100 eater and

819
00:33:07,840 --> 00:33:10,240
now we have 99.5

820
00:33:10,240 --> 00:33:13,279
heaters less than a half eater to have

821
00:33:13,279 --> 00:33:16,080
this huge amount of token

822
00:33:16,080 --> 00:33:18,000
that's it

823
00:33:18,000 --> 00:33:20,320
let's return to the presentation

824
00:33:20,320 --> 00:33:22,080
okay

825
00:33:22,080 --> 00:33:25,039
how to remediate this finding on this

826
00:33:25,039 --> 00:33:26,880
vulnerability well

827
00:33:26,880 --> 00:33:27,679
uh

828
00:33:27,679 --> 00:33:30,679
if we use solidity before

829
00:33:30,679 --> 00:33:34,559
0.8 you have to use a math library

830
00:33:34,559 --> 00:33:37,840
to handle the overflow of integer when

831
00:33:37,840 --> 00:33:40,000
used when you have an addition when you

832
00:33:40,000 --> 00:33:42,000
have a multiplication etc

833
00:33:42,000 --> 00:33:43,760
if you use a

834
00:33:43,760 --> 00:33:44,799
0

835
00:33:44,799 --> 00:33:46,640
solidity 0 8

836
00:33:46,640 --> 00:33:48,480
onwards it's

837
00:33:48,480 --> 00:33:51,360
built by default the protection for for

838
00:33:51,360 --> 00:33:55,279
integer overflow and underflow

839
00:33:55,279 --> 00:33:57,600
great

840
00:33:58,080 --> 00:33:59,039
now

841
00:33:59,039 --> 00:34:01,279
it's store of this attack called

842
00:34:01,279 --> 00:34:03,760
reentrancy that is my my personal

843
00:34:03,760 --> 00:34:05,760
favorite attack

844
00:34:05,760 --> 00:34:06,799
let's see

845
00:34:06,799 --> 00:34:09,280
how it works

846
00:34:09,280 --> 00:34:12,079
imagine we have a contract

847
00:34:12,079 --> 00:34:13,440
called dao

848
00:34:13,440 --> 00:34:16,800
this contact will allow users to deposit

849
00:34:16,800 --> 00:34:19,760
its coins inside a contract

850
00:34:19,760 --> 00:34:23,040
for example a user

851
00:34:23,119 --> 00:34:26,159
and a contract will have the coins of

852
00:34:26,159 --> 00:34:28,719
all users that have already deposit so

853
00:34:28,719 --> 00:34:31,280
if a user deposit

854
00:34:31,280 --> 00:34:34,159
the balance for that user will increment

855
00:34:34,159 --> 00:34:36,399
for example if i deposit

856
00:34:36,399 --> 00:34:39,599
two heater to down to simple down

857
00:34:39,599 --> 00:34:42,879
my new balance in that contact will be

858
00:34:42,879 --> 00:34:44,960
two liter if i deposit

859
00:34:44,960 --> 00:34:46,480
three monitors

860
00:34:46,480 --> 00:34:47,359
my

861
00:34:47,359 --> 00:34:51,440
my balance will be five eater right

862
00:34:51,440 --> 00:34:54,800
i can also withdraw at any moment

863
00:34:54,800 --> 00:34:56,480
and if i withdraw

864
00:34:56,480 --> 00:34:59,040
the contract transfer

865
00:34:59,040 --> 00:35:03,200
back dieters to my account and then he

866
00:35:03,200 --> 00:35:06,560
will update balance so we had five eater

867
00:35:06,560 --> 00:35:10,079
inside a contract if i withdraw twitters

868
00:35:10,079 --> 00:35:11,760
the contract will send the twitters to

869
00:35:11,760 --> 00:35:12,640
me

870
00:35:12,640 --> 00:35:13,520
and

871
00:35:13,520 --> 00:35:17,599
my balance now is three right

872
00:35:17,599 --> 00:35:19,920
okay

873
00:35:19,920 --> 00:35:21,359
before continue

874
00:35:21,359 --> 00:35:22,960
let's see

875
00:35:22,960 --> 00:35:24,320
this

876
00:35:24,320 --> 00:35:27,280
this ski model it's very interesting

877
00:35:27,280 --> 00:35:28,839
if you

878
00:35:28,839 --> 00:35:32,160
send if you interact with a contract and

879
00:35:32,160 --> 00:35:35,920
use and you send money

880
00:35:35,920 --> 00:35:38,400
and do not specify any function of the

881
00:35:38,400 --> 00:35:42,720
contact what happened the money is lost

882
00:35:42,800 --> 00:35:44,720
when you send money to a contract and

883
00:35:44,720 --> 00:35:47,280
you do not specify the function

884
00:35:47,280 --> 00:35:48,880
by default

885
00:35:48,880 --> 00:35:50,880
the contract has

886
00:35:50,880 --> 00:35:52,800
a building function

887
00:35:52,800 --> 00:35:53,760
called

888
00:35:53,760 --> 00:35:56,400
fullback function and by default the

889
00:35:56,400 --> 00:35:58,880
fallback function will receive the money

890
00:35:58,880 --> 00:36:01,119
and nothing else happens

891
00:36:01,119 --> 00:36:02,480
however

892
00:36:02,480 --> 00:36:05,920
the creator of the contract if he wants

893
00:36:05,920 --> 00:36:07,839
he want he can

894
00:36:07,839 --> 00:36:10,400
override the fallback function to

895
00:36:10,400 --> 00:36:12,720
receive the money and do something else

896
00:36:12,720 --> 00:36:14,960
let's see

897
00:36:14,960 --> 00:36:17,599
again here we have a simple dow smart

898
00:36:17,599 --> 00:36:18,880
contract

899
00:36:18,880 --> 00:36:19,760
and

900
00:36:19,760 --> 00:36:22,480
an attacker can deploy a malicious

901
00:36:22,480 --> 00:36:26,320
contract that we will call proxy

902
00:36:26,320 --> 00:36:27,119
so

903
00:36:27,119 --> 00:36:28,560
the contract

904
00:36:28,560 --> 00:36:30,400
the the attacker

905
00:36:30,400 --> 00:36:32,560
is going to rewrite the fallback

906
00:36:32,560 --> 00:36:34,400
function

907
00:36:34,400 --> 00:36:35,359
and

908
00:36:35,359 --> 00:36:36,640
what happens

909
00:36:36,640 --> 00:36:37,440
when

910
00:36:37,440 --> 00:36:39,760
the attacker

911
00:36:39,760 --> 00:36:41,920
calls the fallback function

912
00:36:41,920 --> 00:36:45,280
this function will call that we draw

913
00:36:45,280 --> 00:36:48,880
function of simple down and what happens

914
00:36:48,880 --> 00:36:50,079
that we draw

915
00:36:50,079 --> 00:36:51,440
after we draw

916
00:36:51,440 --> 00:36:54,400
the contract calls transfer eater and

917
00:36:54,400 --> 00:36:56,800
the simple down will transfer it to

918
00:36:56,800 --> 00:36:59,680
the ones who call call him call

919
00:36:59,680 --> 00:37:00,880
colleagues

920
00:37:00,880 --> 00:37:03,680
and quiz is the proxy

921
00:37:03,680 --> 00:37:06,400
so simple dog will transfer money

922
00:37:06,400 --> 00:37:08,079
to proxy

923
00:37:08,079 --> 00:37:10,320
but what happened

924
00:37:10,320 --> 00:37:13,359
if you send money to a contract and you

925
00:37:13,359 --> 00:37:15,520
do not specify any function

926
00:37:15,520 --> 00:37:17,839
by default you call fallback function

927
00:37:17,839 --> 00:37:20,079
and for lock function again

928
00:37:20,079 --> 00:37:22,720
we'll call withdraw and withdraw

929
00:37:22,720 --> 00:37:27,118
transfer editor and here appears a loop

930
00:37:27,280 --> 00:37:29,920
this loop is called reentrancy and it

931
00:37:29,920 --> 00:37:32,160
will happen again and again until all

932
00:37:32,160 --> 00:37:37,760
the money of simple dow goes to proxy

933
00:37:37,760 --> 00:37:39,920
let's let's recap

934
00:37:39,920 --> 00:37:42,320
if you deposit twitters

935
00:37:42,320 --> 00:37:44,640
you can withdraw only twitters you

936
00:37:44,640 --> 00:37:47,440
cannot withdraw the money of other users

937
00:37:47,440 --> 00:37:50,640
but with this attack you can you can get

938
00:37:50,640 --> 00:37:53,119
a re-entrance attack and can get the

939
00:37:53,119 --> 00:37:56,320
money of all user

940
00:37:56,560 --> 00:37:59,839
this is a hacking masterpiece

941
00:37:59,839 --> 00:38:02,400
i'm not a romantic guy but believe me

942
00:38:02,400 --> 00:38:06,000
this is a lost point to hacking

943
00:38:06,800 --> 00:38:09,920
so let's see in action

944
00:38:11,040 --> 00:38:13,760
here we have a simple dog contour

945
00:38:13,760 --> 00:38:16,560
i'm going to deploy this contract

946
00:38:16,560 --> 00:38:18,480
here here is simple down i'm going to

947
00:38:18,480 --> 00:38:21,520
deploy that contract

948
00:38:21,920 --> 00:38:23,040
and

949
00:38:23,040 --> 00:38:24,480
it's here

950
00:38:24,480 --> 00:38:25,359
okay

951
00:38:25,359 --> 00:38:27,839
i have a function called donate to

952
00:38:27,839 --> 00:38:30,160
deposit money to the contract and have a

953
00:38:30,160 --> 00:38:33,520
con uh function called withdraw to

954
00:38:33,520 --> 00:38:36,320
withdraw the money

955
00:38:36,320 --> 00:38:36,960
i

956
00:38:36,960 --> 00:38:39,599
here i have also a function to verify

957
00:38:39,599 --> 00:38:42,400
how how many coins i have deposit before

958
00:38:42,400 --> 00:38:44,880
to the contract so

959
00:38:44,880 --> 00:38:47,760
imagine that this account

960
00:38:47,760 --> 00:38:50,560
is going to deposit

961
00:38:50,560 --> 00:38:51,760
12

962
00:38:51,760 --> 00:38:53,280
eaters

963
00:38:53,280 --> 00:38:55,359
to the contract

964
00:38:55,359 --> 00:38:56,240
so

965
00:38:56,240 --> 00:38:59,680
i'm going to deposit 12 eater

966
00:38:59,680 --> 00:39:01,839
on behalf of me of course

967
00:39:01,839 --> 00:39:03,920
so if i donate

968
00:39:03,920 --> 00:39:06,400
i'm going to donate

969
00:39:06,400 --> 00:39:08,560
right if i verify the credit of this

970
00:39:08,560 --> 00:39:10,880
user

971
00:39:10,880 --> 00:39:12,160
here appear

972
00:39:12,160 --> 00:39:15,200
12 eater right

973
00:39:15,200 --> 00:39:17,680
and the total supply of the contract i

974
00:39:17,680 --> 00:39:19,280
mean how many

975
00:39:19,280 --> 00:39:21,520
how much money it's inside the counter

976
00:39:21,520 --> 00:39:22,800
it's also

977
00:39:22,800 --> 00:39:25,440
12 heater right

978
00:39:25,440 --> 00:39:26,320
now

979
00:39:26,320 --> 00:39:29,760
now i'm going to change this to this one

980
00:39:29,760 --> 00:39:32,160
this is the attacker the attacker is

981
00:39:32,160 --> 00:39:34,880
going to deploy

982
00:39:34,880 --> 00:39:37,680
the proxy malicious contract and in

983
00:39:37,680 --> 00:39:39,920
order to deploy he needs the others of

984
00:39:39,920 --> 00:39:41,359
the victim

985
00:39:41,359 --> 00:39:42,160
a

986
00:39:42,160 --> 00:39:43,599
contract in this case the victim

987
00:39:43,599 --> 00:39:45,359
contract is simple that i'm going to

988
00:39:45,359 --> 00:39:47,040
copy the address

989
00:39:47,040 --> 00:39:51,040
i'm going to write it here and deploy

990
00:39:51,680 --> 00:39:53,280
okay

991
00:39:53,280 --> 00:39:55,680
here we have the proxy malicious contact

992
00:39:55,680 --> 00:39:58,560
controlled by the user by the

993
00:39:58,560 --> 00:39:59,920
the attacker

994
00:39:59,920 --> 00:40:02,160
so

995
00:40:02,160 --> 00:40:04,319
me as a you as an attacker i'm going to

996
00:40:04,319 --> 00:40:08,720
donate tweeters just tweeters

997
00:40:09,280 --> 00:40:10,400
on behalf

998
00:40:10,400 --> 00:40:12,880
of my malicious contract

999
00:40:12,880 --> 00:40:14,560
so here

1000
00:40:14,560 --> 00:40:16,480
i'm going to donate

1001
00:40:16,480 --> 00:40:17,359
here

1002
00:40:17,359 --> 00:40:19,280
before that let's see how what is the

1003
00:40:19,280 --> 00:40:22,400
credit of the malicious contract at

1004
00:40:22,400 --> 00:40:24,240
first i credit zero so i'm going to

1005
00:40:24,240 --> 00:40:25,839
donate

1006
00:40:25,839 --> 00:40:28,240
two liters

1007
00:40:28,240 --> 00:40:30,720
and if i verify that credit again of the

1008
00:40:30,720 --> 00:40:31,920
proxy is

1009
00:40:31,920 --> 00:40:33,440
two ether

1010
00:40:33,440 --> 00:40:35,119
so

1011
00:40:35,119 --> 00:40:37,280
the credit of the proxy contract that is

1012
00:40:37,280 --> 00:40:39,520
malicious it's twitter

1013
00:40:39,520 --> 00:40:40,480
so

1014
00:40:40,480 --> 00:40:43,839
if he if if you want to withdraw money

1015
00:40:43,839 --> 00:40:46,400
on behalf of the proxy you can withdraw

1016
00:40:46,400 --> 00:40:47,440
only

1017
00:40:47,440 --> 00:40:48,800
tweeters

1018
00:40:48,800 --> 00:40:50,160
but what is the total supply in the

1019
00:40:50,160 --> 00:40:51,359
contract

1020
00:40:51,359 --> 00:40:55,119
14 heaters so again you can you are

1021
00:40:55,119 --> 00:40:57,760
supposed only to withdraw twitter's

1022
00:40:57,760 --> 00:41:00,560
two of the 14 meters no more

1023
00:41:00,560 --> 00:41:01,599
but

1024
00:41:01,599 --> 00:41:03,520
if we

1025
00:41:03,520 --> 00:41:04,960
if we call

1026
00:41:04,960 --> 00:41:06,960
the

1027
00:41:06,960 --> 00:41:09,040
the fallout function that is overwritten

1028
00:41:09,040 --> 00:41:11,680
by my attacker i'm going to call it

1029
00:41:11,680 --> 00:41:13,040
let's see what happened

1030
00:41:13,040 --> 00:41:15,359
oh well at first before calling let's

1031
00:41:15,359 --> 00:41:16,560
see

1032
00:41:16,560 --> 00:41:18,480
my balance in the contract is zero i

1033
00:41:18,480 --> 00:41:20,400
don't have money right now

1034
00:41:20,400 --> 00:41:22,240
so let's call

1035
00:41:22,240 --> 00:41:25,200
the format function

1036
00:41:25,680 --> 00:41:27,200
okay it's okay

1037
00:41:27,200 --> 00:41:31,279
and now if i verify my account again

1038
00:41:32,079 --> 00:41:33,200
here we have

1039
00:41:33,200 --> 00:41:37,119
14 heaters all the money of all users

1040
00:41:37,119 --> 00:41:40,240
and the total supply now it's zero

1041
00:41:40,240 --> 00:41:44,479
the contract now it's hacked

1042
00:41:46,839 --> 00:41:50,079
okay what is the remediation well the

1043
00:41:50,079 --> 00:41:52,640
best practice to avoid re-entrancing

1044
00:41:52,640 --> 00:41:53,760
it's to

1045
00:41:53,760 --> 00:41:57,040
to follow a pattern called check effects

1046
00:41:57,040 --> 00:41:59,920
interaction what does it mean

1047
00:41:59,920 --> 00:42:01,359
let's see again

1048
00:42:01,359 --> 00:42:04,319
in this example you see that first when

1049
00:42:04,319 --> 00:42:05,440
you withdraw

1050
00:42:05,440 --> 00:42:07,920
first you transfer eater

1051
00:42:07,920 --> 00:42:09,359
to that color

1052
00:42:09,359 --> 00:42:10,400
and then

1053
00:42:10,400 --> 00:42:13,119
you update balance

1054
00:42:13,119 --> 00:42:13,920
okay

1055
00:42:13,920 --> 00:42:15,200
this pattern

1056
00:42:15,200 --> 00:42:16,960
check

1057
00:42:16,960 --> 00:42:20,240
effects interaction what says is before

1058
00:42:20,240 --> 00:42:22,240
before sending the money

1059
00:42:22,240 --> 00:42:24,400
first update the balance

1060
00:42:24,400 --> 00:42:25,520
and then

1061
00:42:25,520 --> 00:42:27,760
you can send the money you have to

1062
00:42:27,760 --> 00:42:30,960
reverse the order of operation

1063
00:42:30,960 --> 00:42:33,680
and also you can use a reentrancy lock

1064
00:42:33,680 --> 00:42:36,640
you can think of this like a mutex

1065
00:42:36,640 --> 00:42:38,720
you can activate a new text so if

1066
00:42:38,720 --> 00:42:40,720
someone has entered this function nobody

1067
00:42:40,720 --> 00:42:44,319
else can enter at the same time

1068
00:42:44,319 --> 00:42:46,640
rate

1069
00:42:47,440 --> 00:42:51,200
some final thoughts about this

1070
00:42:53,040 --> 00:42:55,760
a smart contract and apps in general are

1071
00:42:55,760 --> 00:42:57,680
in adoption phase

1072
00:42:57,680 --> 00:42:58,960
so

1073
00:42:58,960 --> 00:43:01,280
if you implement it

1074
00:43:01,280 --> 00:43:05,680
in a incorrect way it can lead to a huge

1075
00:43:05,680 --> 00:43:07,839
and sometimes millionaire or even

1076
00:43:07,839 --> 00:43:10,240
billionaire breaches

1077
00:43:10,240 --> 00:43:13,520
so it's very dangerous

1078
00:43:13,520 --> 00:43:16,000
the secret here is to use secure design

1079
00:43:16,000 --> 00:43:18,079
patterns since the beginning of the

1080
00:43:18,079 --> 00:43:20,880
smart contract so you have to

1081
00:43:20,880 --> 00:43:22,319
remember

1082
00:43:22,319 --> 00:43:25,040
once you deploy these contracts

1083
00:43:25,040 --> 00:43:27,359
on blockchain are very complicated to

1084
00:43:27,359 --> 00:43:28,720
modify it

1085
00:43:28,720 --> 00:43:30,560
so you have to be sure

1086
00:43:30,560 --> 00:43:33,599
that when you go live when you deploy

1087
00:43:33,599 --> 00:43:36,160
the contract on the main net you have to

1088
00:43:36,160 --> 00:43:37,520
be secure

1089
00:43:37,520 --> 00:43:39,040
so you have to follow these secure

1090
00:43:39,040 --> 00:43:41,520
patterns since the beginning

1091
00:43:41,520 --> 00:43:45,520
when you test and when you deploy

1092
00:43:46,000 --> 00:43:47,359
obviously

1093
00:43:47,359 --> 00:43:49,280
there is there is something very

1094
00:43:49,280 --> 00:43:50,400
important

1095
00:43:50,400 --> 00:43:51,440
that

1096
00:43:51,440 --> 00:43:56,000
that is key here and other areas too

1097
00:43:56,000 --> 00:43:58,800
there is a need for security training

1098
00:43:58,800 --> 00:44:00,720
for all team involved in the project i

1099
00:44:00,720 --> 00:44:03,200
mean the creation the development the

1100
00:44:03,200 --> 00:44:05,920
maintenance the deployment etc

1101
00:44:05,920 --> 00:44:09,040
everyone in the team is responsible for

1102
00:44:09,040 --> 00:44:11,599
security

1103
00:44:11,599 --> 00:44:12,720
and finally

1104
00:44:12,720 --> 00:44:16,160
there are some automated scans tools

1105
00:44:16,160 --> 00:44:17,760
but of course they have a limited

1106
00:44:17,760 --> 00:44:21,040
limited scope so it's important to

1107
00:44:21,040 --> 00:44:23,680
to complement those results with a

1108
00:44:23,680 --> 00:44:26,000
manual security test carried out by

1109
00:44:26,000 --> 00:44:27,920
especially staff

1110
00:44:27,920 --> 00:44:29,040
i mean

1111
00:44:29,040 --> 00:44:30,960
the biggest

1112
00:44:30,960 --> 00:44:33,280
and most important issues that you can

1113
00:44:33,280 --> 00:44:34,400
find

1114
00:44:34,400 --> 00:44:37,760
in a pen testing a smart contract

1115
00:44:37,760 --> 00:44:40,000
are not going to be discovered by a tool

1116
00:44:40,000 --> 00:44:42,079
are going to be discovered by someone

1117
00:44:42,079 --> 00:44:44,079
who knows who understand the protocol

1118
00:44:44,079 --> 00:44:45,839
behind that who understand what is a

1119
00:44:45,839 --> 00:44:48,240
data flow and who discover

1120
00:44:48,240 --> 00:44:51,280
what is the issue that leads to

1121
00:44:51,280 --> 00:44:54,720
to for example an authorized operation

1122
00:44:54,720 --> 00:44:56,480
etc

1123
00:44:56,480 --> 00:44:57,440
he

1124
00:44:57,440 --> 00:45:00,000
wanna tell you some experience

1125
00:45:00,000 --> 00:45:02,160
sometimes if you fail

1126
00:45:02,160 --> 00:45:03,680
in your in

1127
00:45:03,680 --> 00:45:05,280
operation for example

1128
00:45:05,280 --> 00:45:06,960
instead of

1129
00:45:06,960 --> 00:45:08,400
writing

1130
00:45:08,400 --> 00:45:12,800
greater or equal you just write greater

1131
00:45:12,800 --> 00:45:14,640
that real mistakes

1132
00:45:14,640 --> 00:45:16,319
can lead

1133
00:45:16,319 --> 00:45:19,440
to a big issue that could could lead to

1134
00:45:19,440 --> 00:45:21,280
a millionaire still

1135
00:45:21,280 --> 00:45:24,079
so it's important to be very careful

1136
00:45:24,079 --> 00:45:26,400
uh and you have to

1137
00:45:26,400 --> 00:45:28,640
you have to have your especially your

1138
00:45:28,640 --> 00:45:31,119
staff to review the security of the

1139
00:45:31,119 --> 00:45:33,839
smart contracts

1140
00:45:34,319 --> 00:45:35,520
that's it

1141
00:45:35,520 --> 00:45:39,440
thank you very much for attendance

