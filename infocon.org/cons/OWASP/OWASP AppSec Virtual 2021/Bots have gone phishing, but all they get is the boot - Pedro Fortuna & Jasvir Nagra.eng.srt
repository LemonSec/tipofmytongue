1
00:00:01,420 --> 00:00:05,630
[Music]

2
00:00:07,440 --> 00:00:09,920
thank you and good morning good

3
00:00:09,920 --> 00:00:12,400
afternoon and good evening everyone uh

4
00:00:12,400 --> 00:00:16,640
welcome to our talk on fishing bots

5
00:00:16,640 --> 00:00:19,520
my name is pedo fortuna i'm founder and

6
00:00:19,520 --> 00:00:22,240
cto at j scrambler and i've basically

7
00:00:22,240 --> 00:00:24,880
been working in security for almost two

8
00:00:24,880 --> 00:00:26,320
decades

9
00:00:26,320 --> 00:00:29,439
in the last eight years or so i acquired

10
00:00:29,439 --> 00:00:31,920
the bad habit of giving talks

11
00:00:31,920 --> 00:00:34,239
this is actually my second time

12
00:00:34,239 --> 00:00:36,559
speaking at opsec usa

13
00:00:36,559 --> 00:00:40,480
it's a great pleasure to be back

14
00:00:41,440 --> 00:00:44,399
um hi all i'm jessica inagra most people

15
00:00:44,399 --> 00:00:47,039
call me jazz uh you should too i'm an

16
00:00:47,039 --> 00:00:49,440
author a builder a writer it's been a

17
00:00:49,440 --> 00:00:50,559
while

18
00:00:50,559 --> 00:00:53,039
i think i've caught pedro's uh bug

19
00:00:53,039 --> 00:00:56,320
giving talks again uh this is the second

20
00:00:56,320 --> 00:00:59,359
talk that i'm giving along with pedro

21
00:00:59,359 --> 00:01:01,120
in as many months

22
00:01:01,120 --> 00:01:02,480
it's addictive

23
00:01:02,480 --> 00:01:05,759
it's really great to see you all

24
00:01:06,000 --> 00:01:09,200
so we want to start by talking about how

25
00:01:09,200 --> 00:01:13,040
bot writers can hurt you

26
00:01:13,040 --> 00:01:15,119
so this is a tough but interesting

27
00:01:15,119 --> 00:01:17,119
question pedro uh there are many good

28
00:01:17,119 --> 00:01:18,560
reasons to

29
00:01:18,560 --> 00:01:21,200
automate access to a website or to a web

30
00:01:21,200 --> 00:01:22,560
application

31
00:01:22,560 --> 00:01:24,400
uh but there are also ways in which

32
00:01:24,400 --> 00:01:27,119
letting bots uh abuse your web

33
00:01:27,119 --> 00:01:29,520
application results in damage to you

34
00:01:29,520 --> 00:01:32,320
right like a former co-worker of mine

35
00:01:32,320 --> 00:01:35,119
i think it was a gertrude stein quote

36
00:01:35,119 --> 00:01:37,119
that he's amusing

37
00:01:37,119 --> 00:01:39,119
he used to say a bart is about as is

38
00:01:39,119 --> 00:01:41,360
about and what he meant by that

39
00:01:41,360 --> 00:01:42,159
is

40
00:01:42,159 --> 00:01:44,079
you know no matter what happens about is

41
00:01:44,079 --> 00:01:46,240
just about and i think that that's not

42
00:01:46,240 --> 00:01:49,439
quite true right some bots are good

43
00:01:49,439 --> 00:01:52,399
they increase your value

44
00:01:52,399 --> 00:01:54,159
others which are questionable if you're

45
00:01:54,159 --> 00:01:56,000
not quite ready for them they can hurt

46
00:01:56,000 --> 00:01:56,719
you

47
00:01:56,719 --> 00:01:59,040
uh yet others are clearly bad for you

48
00:01:59,040 --> 00:02:00,560
and for your business

49
00:02:00,560 --> 00:02:02,000
and i think that

50
00:02:02,000 --> 00:02:04,960
what we need to do is to classify uh

51
00:02:04,960 --> 00:02:05,920
bots

52
00:02:05,920 --> 00:02:07,360
into categories depending on what

53
00:02:07,360 --> 00:02:09,440
they're trying to achieve and that helps

54
00:02:09,440 --> 00:02:11,760
us defend against them a little bit

55
00:02:11,760 --> 00:02:14,239
better uh we've roughly come up with

56
00:02:14,239 --> 00:02:16,319
four major categories depending on what

57
00:02:16,319 --> 00:02:19,920
a bot is trying uh to achieve one of the

58
00:02:19,920 --> 00:02:21,280
things that you'll notice when we go

59
00:02:21,280 --> 00:02:23,440
through these categories is that

60
00:02:23,440 --> 00:02:24,239
um

61
00:02:24,239 --> 00:02:26,959
it happens to line up not only with how

62
00:02:26,959 --> 00:02:29,040
hard it is to build this

63
00:02:29,040 --> 00:02:32,480
kind of bot uh but also how much value

64
00:02:32,480 --> 00:02:34,239
the bot ends up getting which is really

65
00:02:34,239 --> 00:02:36,800
a nice characteristic right the more

66
00:02:36,800 --> 00:02:39,200
value a bot writer wants to get the

67
00:02:39,200 --> 00:02:41,200
harder it is for them to build this kind

68
00:02:41,200 --> 00:02:43,040
of about pedro maybe you want to lead us

69
00:02:43,040 --> 00:02:45,040
through these categories

70
00:02:45,040 --> 00:02:46,720
sure jess

71
00:02:46,720 --> 00:02:48,080
so

72
00:02:48,080 --> 00:02:50,239
most of the audience should already be

73
00:02:50,239 --> 00:02:52,959
familiar with these categories so i'll

74
00:02:52,959 --> 00:02:55,280
quickly skim through them

75
00:02:55,280 --> 00:02:58,080
starting with the scraping bots

76
00:02:58,080 --> 00:03:00,720
you may argue that this is not a bad use

77
00:03:00,720 --> 00:03:04,159
for bots and in some cases indeed it can

78
00:03:04,159 --> 00:03:06,720
be beneficial as it can bring more

79
00:03:06,720 --> 00:03:09,440
traffic and users to your website

80
00:03:09,440 --> 00:03:12,239
but in many other cases it can actually

81
00:03:12,239 --> 00:03:14,480
result in business losses

82
00:03:14,480 --> 00:03:17,200
and as such something that businesses

83
00:03:17,200 --> 00:03:20,159
want to prevent

84
00:03:20,159 --> 00:03:24,159
bots are also used to dos competitors or

85
00:03:24,159 --> 00:03:27,120
adversaries by triggering expensive

86
00:03:27,120 --> 00:03:31,200
operations these bots are undeniably

87
00:03:31,200 --> 00:03:34,080
bad and should be stopped before they

88
00:03:34,080 --> 00:03:35,840
stop companies from offering their

89
00:03:35,840 --> 00:03:37,840
services online

90
00:03:37,840 --> 00:03:40,640
but i think jazz has a funny episode he

91
00:03:40,640 --> 00:03:41,840
experienced

92
00:03:41,840 --> 00:03:43,920
jazz maybe you can tell the googlebot

93
00:03:43,920 --> 00:03:45,360
episode here

94
00:03:45,360 --> 00:03:48,159
i i sure can this is a simple story and

95
00:03:48,159 --> 00:03:50,640
one that many of you in some variation

96
00:03:50,640 --> 00:03:53,120
would be familiar with so

97
00:03:53,120 --> 00:03:54,640
i mentioned some bots are good and

98
00:03:54,640 --> 00:03:56,640
desirable and some bots are bad and

99
00:03:56,640 --> 00:03:59,120
cause like load on our servers that

100
00:03:59,120 --> 00:04:01,280
might make you think that oh

101
00:04:01,280 --> 00:04:03,840
i can just classify these are good bots

102
00:04:03,840 --> 00:04:05,360
and these are bad bots but sometimes

103
00:04:05,360 --> 00:04:06,959
there's like a little bit of confusion

104
00:04:06,959 --> 00:04:09,200
there in this particular case the case

105
00:04:09,200 --> 00:04:10,640
that i'm thinking of

106
00:04:10,640 --> 00:04:13,280
there was a google bot that would cause

107
00:04:13,280 --> 00:04:14,480
this customer

108
00:04:14,480 --> 00:04:15,760
uh that would

109
00:04:15,760 --> 00:04:18,000
that was telling hardware

110
00:04:18,000 --> 00:04:19,918
to search for a particular item in in

111
00:04:19,918 --> 00:04:22,479
terms of uh it was searching for a

112
00:04:22,479 --> 00:04:24,800
particular small screw

113
00:04:24,800 --> 00:04:27,520
and uh every time the google bot would

114
00:04:27,520 --> 00:04:30,800
come by it would trigger via url

115
00:04:30,800 --> 00:04:33,520
this search for a for this small screw

116
00:04:33,520 --> 00:04:36,240
it turns out this particular

117
00:04:36,240 --> 00:04:39,600
customer sold 20 000

118
00:04:39,600 --> 00:04:42,160
different kinds of small screws and so

119
00:04:42,160 --> 00:04:44,240
every time the google bot would come it

120
00:04:44,240 --> 00:04:46,400
would cause

121
00:04:46,400 --> 00:04:50,000
the the database to move 20 000 entries

122
00:04:50,000 --> 00:04:52,960
out of the database into the local cache

123
00:04:52,960 --> 00:04:56,080
and uh so the google bot was whitelisted

124
00:04:56,080 --> 00:04:58,479
by the marketing team because you know

125
00:04:58,479 --> 00:04:59,840
the marketing team believes that the

126
00:04:59,840 --> 00:05:02,320
google bot is a good boss you want to be

127
00:05:02,320 --> 00:05:04,960
ranked highly on the search results

128
00:05:04,960 --> 00:05:07,680
for the infrastructure team however

129
00:05:07,680 --> 00:05:09,440
maybe they should have tuned their

130
00:05:09,440 --> 00:05:11,520
database better but like every time the

131
00:05:11,520 --> 00:05:13,759
google bot would come by it would cause

132
00:05:13,759 --> 00:05:16,400
like the database to instantly melt

133
00:05:16,400 --> 00:05:18,960
because they were moving this large

134
00:05:18,960 --> 00:05:21,039
quantity of data

135
00:05:21,039 --> 00:05:23,600
out of the database into uh

136
00:05:23,600 --> 00:05:26,639
into the local cash right um

137
00:05:26,639 --> 00:05:28,960
not only that because every time the

138
00:05:28,960 --> 00:05:30,800
prices would change the googlebot would

139
00:05:30,800 --> 00:05:32,560
visit them more and more frequently

140
00:05:32,560 --> 00:05:34,880
which caused them to melt down you know

141
00:05:34,880 --> 00:05:37,039
systematically a couple of times a day

142
00:05:37,039 --> 00:05:38,560
and all of them were tearing their hair

143
00:05:38,560 --> 00:05:40,320
out because they had no idea

144
00:05:40,320 --> 00:05:42,800
the lesson to take away is that it's not

145
00:05:42,800 --> 00:05:44,800
necessarily the case that there is good

146
00:05:44,800 --> 00:05:47,280
bots and bad bads there's good behavior

147
00:05:47,280 --> 00:05:50,720
and bad behavior um and you know

148
00:05:50,720 --> 00:05:52,560
what what is a what is a

149
00:05:52,560 --> 00:05:54,639
advantage to one part of your company

150
00:05:54,639 --> 00:05:56,560
might be a headache to a different part

151
00:05:56,560 --> 00:05:58,720
of your company

152
00:05:58,720 --> 00:06:01,039
right so you have to watch out for good

153
00:06:01,039 --> 00:06:04,960
bots too they they might hurt you

154
00:06:05,199 --> 00:06:08,800
uh bots are also extensively used to buy

155
00:06:08,800 --> 00:06:11,600
or hold inventory like booking tables

156
00:06:11,600 --> 00:06:14,319
reserving airline tickets usually for a

157
00:06:14,319 --> 00:06:16,240
good profit

158
00:06:16,240 --> 00:06:19,520
in some cases like airliners the ticket

159
00:06:19,520 --> 00:06:22,000
reservation system does not force the

160
00:06:22,000 --> 00:06:25,680
botmaster to actually buy the tickets

161
00:06:25,680 --> 00:06:28,319
so if they cannot resell them for some

162
00:06:28,319 --> 00:06:30,639
reason they can release them last

163
00:06:30,639 --> 00:06:33,120
minutes which causes those tickets not

164
00:06:33,120 --> 00:06:35,600
to be sold at all

165
00:06:35,600 --> 00:06:37,840
in some situations that we learned about

166
00:06:37,840 --> 00:06:41,680
airliners had full flights turned into

167
00:06:41,680 --> 00:06:44,479
almost empty flights last minutes and

168
00:06:44,479 --> 00:06:47,120
that would generate a lot of losses for

169
00:06:47,120 --> 00:06:49,039
them

170
00:06:49,039 --> 00:06:51,360
it can also damage reputation if

171
00:06:51,360 --> 00:06:53,680
legitimate users have harder time

172
00:06:53,680 --> 00:06:56,639
acquiring tickets or products or end up

173
00:06:56,639 --> 00:06:59,360
having to pay unreasonable prices for

174
00:06:59,360 --> 00:07:02,160
them

175
00:07:02,160 --> 00:07:04,000
last but not least let's talk about

176
00:07:04,000 --> 00:07:06,639
credential stuffing um this particular

177
00:07:06,639 --> 00:07:09,919
use of bots is known by different names

178
00:07:09,919 --> 00:07:12,639
it's for instance it's also referred to

179
00:07:12,639 --> 00:07:13,599
as

180
00:07:13,599 --> 00:07:15,680
account takeover bots

181
00:07:15,680 --> 00:07:18,560
and typically attackers buy breached

182
00:07:18,560 --> 00:07:20,000
databases

183
00:07:20,000 --> 00:07:22,800
from the dark web full of credentials

184
00:07:22,800 --> 00:07:24,880
and then use a bot to test those

185
00:07:24,880 --> 00:07:27,520
credentials on another site

186
00:07:27,520 --> 00:07:29,599
and because a lot of people reuse

187
00:07:29,599 --> 00:07:32,080
passwords they can actually find and

188
00:07:32,080 --> 00:07:34,240
take over a few accounts on this

189
00:07:34,240 --> 00:07:36,880
different website

190
00:07:36,880 --> 00:07:40,479
there's also a special case of this

191
00:07:40,479 --> 00:07:42,720
where instead of relying on spilled

192
00:07:42,720 --> 00:07:45,840
passwords a phishing attack to potential

193
00:07:45,840 --> 00:07:47,520
users is done

194
00:07:47,520 --> 00:07:50,240
to capture their credentials

195
00:07:50,240 --> 00:07:53,360
and then control their accounts

196
00:07:53,360 --> 00:07:55,919
this will actually be the focus of this

197
00:07:55,919 --> 00:07:56,800
talk

198
00:07:56,800 --> 00:07:58,960
so we'll see plenty more about this

199
00:07:58,960 --> 00:08:01,520
later on

200
00:08:02,000 --> 00:08:03,759
but before we dig into the problem

201
00:08:03,759 --> 00:08:06,160
itself there's a lot of techniques

202
00:08:06,160 --> 00:08:08,479
that historically have been used

203
00:08:08,479 --> 00:08:11,680
primarily by server-side agents

204
00:08:11,680 --> 00:08:13,360
that are traditionally used to detect

205
00:08:13,360 --> 00:08:15,520
bots and many of these are going to be

206
00:08:15,520 --> 00:08:16,560
techniques that you're going to be

207
00:08:16,560 --> 00:08:18,400
familiar with so i'm just going to blaze

208
00:08:18,400 --> 00:08:19,520
through these

209
00:08:19,520 --> 00:08:20,800
um

210
00:08:20,800 --> 00:08:22,479
mostly they involve

211
00:08:22,479 --> 00:08:25,599
detecting the environment

212
00:08:25,599 --> 00:08:28,240
or the test harness that the bot writer

213
00:08:28,240 --> 00:08:30,639
is using to connect to your real site

214
00:08:30,639 --> 00:08:31,680
right

215
00:08:31,680 --> 00:08:34,399
maybe there are how often the site

216
00:08:34,399 --> 00:08:36,479
how often this particular client is is

217
00:08:36,479 --> 00:08:38,958
connecting or maybe

218
00:08:38,958 --> 00:08:41,360
some abuse that the the the boss is

219
00:08:41,360 --> 00:08:43,279
carrying out that you are able to to

220
00:08:43,279 --> 00:08:45,279
determine

221
00:08:45,279 --> 00:08:46,560
um

222
00:08:46,560 --> 00:08:48,399
in order to

223
00:08:48,399 --> 00:08:50,800
in order to defend against these

224
00:08:50,800 --> 00:08:53,600
uh it's it's a trade-off between how

225
00:08:53,600 --> 00:08:55,760
expensive these techniques make it for

226
00:08:55,760 --> 00:08:58,640
the bot rider versus how expensive it is

227
00:08:58,640 --> 00:09:01,200
to to to deploy these

228
00:09:01,200 --> 00:09:03,600
the most obvious one uh that you

229
00:09:03,600 --> 00:09:06,959
probably all know of uh is a ip

230
00:09:06,959 --> 00:09:09,360
reputation

231
00:09:09,360 --> 00:09:11,680
so this is the most basic technique it's

232
00:09:11,680 --> 00:09:13,440
the obvious thing that would occur to

233
00:09:13,440 --> 00:09:15,120
you right like

234
00:09:15,120 --> 00:09:18,720
it is to assume that the attacker

235
00:09:18,720 --> 00:09:21,360
owns one or maybe a small number of ip

236
00:09:21,360 --> 00:09:23,440
addresses that they use to carry out

237
00:09:23,440 --> 00:09:24,720
this attack

238
00:09:24,720 --> 00:09:27,519
if this is true then you can assign to

239
00:09:27,519 --> 00:09:29,440
an iep address

240
00:09:29,440 --> 00:09:32,080
a reputation and you build up a database

241
00:09:32,080 --> 00:09:34,320
when was the last time this

242
00:09:34,320 --> 00:09:36,720
ip was used to carry out undesirable

243
00:09:36,720 --> 00:09:38,000
activity

244
00:09:38,000 --> 00:09:41,040
uh and then if you later on see one of

245
00:09:41,040 --> 00:09:43,600
these bad ip addresses or even groups of

246
00:09:43,600 --> 00:09:46,640
ip addresses these are called asn which

247
00:09:46,640 --> 00:09:48,240
is you know

248
00:09:48,240 --> 00:09:51,440
what a provider of an iap address does

249
00:09:51,440 --> 00:09:52,880
loosely speaking

250
00:09:52,880 --> 00:09:54,640
then what we can do is we can blacklist

251
00:09:54,640 --> 00:09:56,959
the ip or we can blacklist the entire

252
00:09:56,959 --> 00:09:58,240
asm

253
00:09:58,240 --> 00:10:01,360
now unfortunately

254
00:10:01,760 --> 00:10:02,959
a simple

255
00:10:02,959 --> 00:10:05,360
common shortcoming of this

256
00:10:05,360 --> 00:10:07,040
of this approach which used to be very

257
00:10:07,040 --> 00:10:10,240
effective previously is that

258
00:10:10,240 --> 00:10:12,640
attackers are able to entice

259
00:10:12,640 --> 00:10:14,320
users using

260
00:10:14,320 --> 00:10:17,040
browser extensions or

261
00:10:17,040 --> 00:10:20,640
proxies or vpns or free apps

262
00:10:20,640 --> 00:10:23,360
to to happily give up their ip addresses

263
00:10:23,360 --> 00:10:25,680
and then these iep addresses which

264
00:10:25,680 --> 00:10:28,000
belong to you know individual users to

265
00:10:28,000 --> 00:10:31,120
residential users

266
00:10:31,279 --> 00:10:35,279
they act as proxies to clean up the ip

267
00:10:35,279 --> 00:10:37,600
uh reputation that is being used to

268
00:10:37,600 --> 00:10:39,920
connect to a site

269
00:10:39,920 --> 00:10:41,200
the other thing that you might be able

270
00:10:41,200 --> 00:10:42,079
to do

271
00:10:42,079 --> 00:10:45,200
uh is is to throttle requests right so

272
00:10:45,200 --> 00:10:46,959
if there are many requests coming from

273
00:10:46,959 --> 00:10:49,839
the same ip address uh

274
00:10:49,839 --> 00:10:51,839
maybe more than can be generated by a

275
00:10:51,839 --> 00:10:55,120
single user well clearly that's a bot

276
00:10:55,120 --> 00:10:56,560
there's two problems that you run into

277
00:10:56,560 --> 00:11:00,079
with this uh one is that once again an

278
00:11:00,079 --> 00:11:02,079
attacker has a large number of ip

279
00:11:02,079 --> 00:11:04,320
addresses to choose from they can choose

280
00:11:04,320 --> 00:11:07,760
this style of attack called low and slow

281
00:11:07,760 --> 00:11:09,839
attack where they use an ip address only

282
00:11:09,839 --> 00:11:11,680
once or twice and then they just never

283
00:11:11,680 --> 00:11:13,279
use them again because they've got such

284
00:11:13,279 --> 00:11:15,120
a large pool of ip addresses to choose

285
00:11:15,120 --> 00:11:16,720
from what is more

286
00:11:16,720 --> 00:11:18,959
you can accidentally end up blocking

287
00:11:18,959 --> 00:11:21,440
legitimate users because they're using a

288
00:11:21,440 --> 00:11:23,760
nat or for some other reason they're

289
00:11:23,760 --> 00:11:25,680
sharing an address right like so

290
00:11:25,680 --> 00:11:28,399
universities or businesses often

291
00:11:28,399 --> 00:11:29,519
have a

292
00:11:29,519 --> 00:11:32,079
a single ip address going out and you

293
00:11:32,079 --> 00:11:34,640
know the the small number of ipv4

294
00:11:34,640 --> 00:11:36,399
addresses that are available makes this

295
00:11:36,399 --> 00:11:39,360
problem worse where you end up you know

296
00:11:39,360 --> 00:11:41,200
because two or three people happen to be

297
00:11:41,200 --> 00:11:44,160
booking uh something that was using the

298
00:11:44,160 --> 00:11:47,120
same net uh you're you suddenly say oh

299
00:11:47,120 --> 00:11:50,480
no this entire subnet uh

300
00:11:50,480 --> 00:11:53,040
this entire matted address is is

301
00:11:53,040 --> 00:11:55,360
probably bad and so startling has you

302
00:11:55,360 --> 00:11:58,399
know strengths and weaknesses there

303
00:11:58,399 --> 00:12:01,920
the other technique that uh that that uh

304
00:12:01,920 --> 00:12:03,279
would occur to you

305
00:12:03,279 --> 00:12:05,600
uh which is the obvious one right like

306
00:12:05,600 --> 00:12:07,519
it's the most famous the most notorious

307
00:12:07,519 --> 00:12:10,160
way of detecting a bach bot is using

308
00:12:10,160 --> 00:12:11,680
something called capture now i don't

309
00:12:11,680 --> 00:12:13,600
need to tell you or need anybody else on

310
00:12:13,600 --> 00:12:16,160
the internet uh what what this is you

311
00:12:16,160 --> 00:12:18,399
get to see this all of the time uh what

312
00:12:18,399 --> 00:12:20,079
you do is you get

313
00:12:20,079 --> 00:12:21,360
uh

314
00:12:21,360 --> 00:12:22,800
you you

315
00:12:22,800 --> 00:12:25,680
present a task that is easy for a human

316
00:12:25,680 --> 00:12:28,000
to perform uh but what is like very

317
00:12:28,000 --> 00:12:29,920
difficult for a computer to perform and

318
00:12:29,920 --> 00:12:33,200
that way uh you can force at least there

319
00:12:33,200 --> 00:12:35,920
to be a human uh behind the computer

320
00:12:35,920 --> 00:12:37,200
that is doing

321
00:12:37,200 --> 00:12:38,560
um

322
00:12:38,560 --> 00:12:40,480
that is doing the task right

323
00:12:40,480 --> 00:12:41,600
uh no

324
00:12:41,600 --> 00:12:43,440
it's worth saying here that there's you

325
00:12:43,440 --> 00:12:45,120
know suddenly different approaches that

326
00:12:45,120 --> 00:12:47,760
are being used uh a capture is not a

327
00:12:47,760 --> 00:12:50,480
static field it's an evolving one one of

328
00:12:50,480 --> 00:12:52,880
the techniques that uh is used is called

329
00:12:52,880 --> 00:12:56,320
invisible capture where you know the the

330
00:12:56,320 --> 00:12:59,200
the subtle differences between how bots

331
00:12:59,200 --> 00:13:01,680
uh behave for example how bots move a

332
00:13:01,680 --> 00:13:04,000
mouse or how they interact with the site

333
00:13:04,000 --> 00:13:07,360
how they typed characters uh can be used

334
00:13:07,360 --> 00:13:10,079
to distinguish them from human beings

335
00:13:10,079 --> 00:13:12,560
um and and you know recapture famously

336
00:13:12,560 --> 00:13:17,760
uses uh one of these techniques um

337
00:13:21,040 --> 00:13:22,720
that's not the only technique that is

338
00:13:22,720 --> 00:13:25,120
being used uh cloudflare for example has

339
00:13:25,120 --> 00:13:26,880
a proposal called

340
00:13:26,880 --> 00:13:30,160
uh the cryptographic attestation

341
00:13:30,160 --> 00:13:33,680
of personhood which is also trying to

342
00:13:33,680 --> 00:13:35,600
minimize the number of cases where you

343
00:13:35,600 --> 00:13:37,279
are have forcing a human being to do

344
00:13:37,279 --> 00:13:38,639
something because

345
00:13:38,639 --> 00:13:40,560
these captures are very annoying i mean

346
00:13:40,560 --> 00:13:41,440
they're

347
00:13:41,440 --> 00:13:43,120
as computers have become better as

348
00:13:43,120 --> 00:13:45,440
machine learning has become better the

349
00:13:45,440 --> 00:13:47,519
work that a computer is able to do

350
00:13:47,519 --> 00:13:49,920
becomes increasingly similar to what a

351
00:13:49,920 --> 00:13:53,040
human is able to do

352
00:13:53,040 --> 00:13:56,639
now the shortcoming here is that

353
00:13:56,639 --> 00:14:00,160
as long as you can farm out the capture

354
00:14:00,160 --> 00:14:03,600
process itself uh to to countries where

355
00:14:03,600 --> 00:14:06,000
it is cheaper to get human beings like

356
00:14:06,000 --> 00:14:08,880
real human beings to do the the task you

357
00:14:08,880 --> 00:14:11,519
can uh sort of split the application

358
00:14:11,519 --> 00:14:14,480
into the actual application and and and

359
00:14:14,480 --> 00:14:16,399
the capture solving

360
00:14:16,399 --> 00:14:18,000
and uh

361
00:14:18,000 --> 00:14:19,600
you know solve the capture that way

362
00:14:19,600 --> 00:14:21,920
using a real human being the other thing

363
00:14:21,920 --> 00:14:25,440
that is uh that is being regularly used

364
00:14:25,440 --> 00:14:27,920
is reverse engineering where you reverse

365
00:14:27,920 --> 00:14:29,120
engineer

366
00:14:29,120 --> 00:14:32,320
what it is that the the the capture is

367
00:14:32,320 --> 00:14:34,399
doing

368
00:14:34,399 --> 00:14:36,720
uh the next technique that is used is uh

369
00:14:36,720 --> 00:14:39,600
device fingerprinting uh this is the

370
00:14:39,600 --> 00:14:42,399
obvious thing where you know you know

371
00:14:42,399 --> 00:14:45,920
that this user most users have you know

372
00:14:45,920 --> 00:14:48,399
a small number of devices you cookie the

373
00:14:48,399 --> 00:14:50,320
browser that the user uses

374
00:14:50,320 --> 00:14:51,680
and then you

375
00:14:51,680 --> 00:14:53,839
if the user is coming with a different

376
00:14:53,839 --> 00:14:55,600
browser or doesn't have this particular

377
00:14:55,600 --> 00:14:57,680
cookie you can determine the

378
00:14:57,680 --> 00:14:59,680
characteristics of the browser and the

379
00:14:59,680 --> 00:15:00,720
version

380
00:15:00,720 --> 00:15:03,680
and uh you can dig deeper if this is a

381
00:15:03,680 --> 00:15:06,000
known user but using a different kind of

382
00:15:06,000 --> 00:15:08,399
browser and you can work out like hey

383
00:15:08,399 --> 00:15:10,800
this is unusual for pedro to be

384
00:15:10,800 --> 00:15:13,040
connecting not from portugal he's

385
00:15:13,040 --> 00:15:15,120
suddenly connecting from fiji

386
00:15:15,120 --> 00:15:16,959
oh you know something is weird here or

387
00:15:16,959 --> 00:15:19,600
he's regularly a firefox user but

388
00:15:19,600 --> 00:15:21,760
suddenly is using safari you know

389
00:15:21,760 --> 00:15:23,839
something is unusual here and what you

390
00:15:23,839 --> 00:15:25,920
can do is you can fingerprint the device

391
00:15:25,920 --> 00:15:27,279
you can figure out

392
00:15:27,279 --> 00:15:29,440
what is the os that this user is running

393
00:15:29,440 --> 00:15:31,040
what are the fonts that are on this

394
00:15:31,040 --> 00:15:32,959
particular computer

395
00:15:32,959 --> 00:15:34,959
the shortcoming the shortcoming of this

396
00:15:34,959 --> 00:15:36,880
approach is obvious right

397
00:15:36,880 --> 00:15:39,360
it's the privacy concerns what you as

398
00:15:39,360 --> 00:15:42,399
the real site are trying to work out is

399
00:15:42,399 --> 00:15:43,440
hey

400
00:15:43,440 --> 00:15:45,920
is this a bot that i have seen before

401
00:15:45,920 --> 00:15:48,240
that is trying to evade me by like

402
00:15:48,240 --> 00:15:51,279
deleting my deleting the cookies etc but

403
00:15:51,279 --> 00:15:53,920
what you end up learning is who this

404
00:15:53,920 --> 00:15:56,800
exact user is and and that's

405
00:15:56,800 --> 00:15:58,560
you know there's legitimate privacy

406
00:15:58,560 --> 00:16:01,920
concerns from fingerprinting a a

407
00:16:01,920 --> 00:16:03,519
a browser and it's something that

408
00:16:03,519 --> 00:16:06,000
browsers are trying to get rid of uh

409
00:16:06,000 --> 00:16:08,320
rightfully so so privacy concerns are

410
00:16:08,320 --> 00:16:10,480
one the other is that

411
00:16:10,480 --> 00:16:13,279
when you build up this package that says

412
00:16:13,279 --> 00:16:14,959
this is the fingerprint

413
00:16:14,959 --> 00:16:16,959
you can still

414
00:16:16,959 --> 00:16:19,120
reverse engineer this fingerprint and

415
00:16:19,120 --> 00:16:21,600
then if a attacker is able to do that

416
00:16:21,600 --> 00:16:24,720
they can create a new fingerprint that

417
00:16:24,720 --> 00:16:26,240
um

418
00:16:26,240 --> 00:16:27,519
that tells

419
00:16:27,519 --> 00:16:29,040
you know that tells the lie that the

420
00:16:29,040 --> 00:16:32,560
attacker is trying to create

421
00:16:33,040 --> 00:16:35,759
uh the the last and most commonly

422
00:16:35,759 --> 00:16:37,920
repeated story on how to defend against

423
00:16:37,920 --> 00:16:41,759
phishing is 2fa now 2fa is a is a large

424
00:16:41,759 --> 00:16:43,839
umbrella term that lumps together all

425
00:16:43,839 --> 00:16:45,680
kinds of things as you'll see in a

426
00:16:45,680 --> 00:16:48,320
moment uh when pedro gets going we we

427
00:16:48,320 --> 00:16:50,880
tend to talk about 2fa uh you know

428
00:16:50,880 --> 00:16:53,199
there's like sms which is your second

429
00:16:53,199 --> 00:16:55,600
factor there's you know these uh

430
00:16:55,600 --> 00:16:58,000
authenticator apps that that

431
00:16:58,000 --> 00:17:00,959
generate and that that generate an id

432
00:17:00,959 --> 00:17:04,079
um there's hardware keys we tend to lump

433
00:17:04,079 --> 00:17:05,599
them together but some of these are

434
00:17:05,599 --> 00:17:07,839
better than others and one of the things

435
00:17:07,839 --> 00:17:09,199
that you will walk away from this

436
00:17:09,199 --> 00:17:10,559
presentation

437
00:17:10,559 --> 00:17:13,199
realizing is that hardware tokens do a

438
00:17:13,199 --> 00:17:16,559
very good job at preventing this kind of

439
00:17:16,559 --> 00:17:17,760
phishing attacks that we're going to be

440
00:17:17,760 --> 00:17:18,959
talking about

441
00:17:18,959 --> 00:17:19,760
but

442
00:17:19,760 --> 00:17:20,720
um

443
00:17:20,720 --> 00:17:21,679
they're

444
00:17:21,679 --> 00:17:24,240
they the penetration in the market is

445
00:17:24,240 --> 00:17:26,400
very small and so

446
00:17:26,400 --> 00:17:29,919
in the meantime um

447
00:17:29,919 --> 00:17:32,000
there's a large need to be able to

448
00:17:32,000 --> 00:17:34,240
support users that don't necessarily

449
00:17:34,240 --> 00:17:36,960
have hardware tokens and if you have you

450
00:17:36,960 --> 00:17:39,679
know sms type tokens but or even google

451
00:17:39,679 --> 00:17:41,280
authenticator tokens

452
00:17:41,280 --> 00:17:43,440
there's a set of phishing attacks

453
00:17:43,440 --> 00:17:45,760
that are live that end up being very

454
00:17:45,760 --> 00:17:48,799
effective uh uh

455
00:17:48,799 --> 00:17:51,919
in spite of rolling out 2fa basically an

456
00:17:51,919 --> 00:17:55,280
attacker is able to proxy your your 2fa

457
00:17:55,280 --> 00:17:58,160
very effectively

458
00:17:58,840 --> 00:18:00,640
um

459
00:18:00,640 --> 00:18:02,640
so i'm going to talk about a one

460
00:18:02,640 --> 00:18:04,480
specific problem which is the fishing

461
00:18:04,480 --> 00:18:06,160
bot problem now i'll tell you why i'm

462
00:18:06,160 --> 00:18:07,760
talking about this particular problem

463
00:18:07,760 --> 00:18:10,880
it's the hardest version uh and and i

464
00:18:10,880 --> 00:18:13,200
guess i'm a masochist and so is pedro

465
00:18:13,200 --> 00:18:15,679
and so we're trying to tackle what is

466
00:18:15,679 --> 00:18:17,840
the hardest version of this problem

467
00:18:17,840 --> 00:18:20,160
assuming that if we can solve this hard

468
00:18:20,160 --> 00:18:22,080
version of the problem then all the

469
00:18:22,080 --> 00:18:24,559
other problems you know sort of become

470
00:18:24,559 --> 00:18:26,799
much more easily accessible

471
00:18:26,799 --> 00:18:28,000
uh

472
00:18:28,000 --> 00:18:29,919
you you can think of this phishing bot

473
00:18:29,919 --> 00:18:31,600
problem as a special case of the

474
00:18:31,600 --> 00:18:33,600
credential stopping problem but the

475
00:18:33,600 --> 00:18:35,679
credential stuffing problem is

476
00:18:35,679 --> 00:18:38,559
um you know you you you find

477
00:18:38,559 --> 00:18:40,480
spilled passwords and then you try to

478
00:18:40,480 --> 00:18:42,799
like reuse them in the fishing bot

479
00:18:42,799 --> 00:18:45,520
problem the entire attack has to be live

480
00:18:45,520 --> 00:18:46,960
because the

481
00:18:46,960 --> 00:18:49,200
site is carrying out all kinds of

482
00:18:49,200 --> 00:18:51,919
defenses to make sure that you know 2fa

483
00:18:51,919 --> 00:18:54,720
is provided

484
00:18:54,960 --> 00:18:56,640
uh so

485
00:18:56,640 --> 00:18:57,600
uh

486
00:18:57,600 --> 00:19:00,480
next slide uh pedro um

487
00:19:00,480 --> 00:19:02,320
so what is a phishing attack a phishing

488
00:19:02,320 --> 00:19:04,799
attack is an automated attack it lures

489
00:19:04,799 --> 00:19:07,760
ah fishing floor uh it lures an

490
00:19:07,760 --> 00:19:11,360
unsuspecting user to a fake site to

491
00:19:11,360 --> 00:19:13,360
steal their credentials their personal

492
00:19:13,360 --> 00:19:15,679
data or to carry out transactions on

493
00:19:15,679 --> 00:19:17,200
their behalf

494
00:19:17,200 --> 00:19:19,600
this works by setting up something a

495
00:19:19,600 --> 00:19:21,520
fake site which is sometimes called a

496
00:19:21,520 --> 00:19:23,200
web fake

497
00:19:23,200 --> 00:19:24,960
this is the phrase i'm going to be using

498
00:19:24,960 --> 00:19:27,440
what is a web fake it is a copycat

499
00:19:27,440 --> 00:19:28,880
website

500
00:19:28,880 --> 00:19:31,600
which is sometimes hosted on a similar

501
00:19:31,600 --> 00:19:34,360
looking domain so you might have

502
00:19:34,360 --> 00:19:37,039
virtualbank.com which is your real bank

503
00:19:37,039 --> 00:19:40,640
and v12bank.com

504
00:19:40,640 --> 00:19:43,120
which is you know the fake site and what

505
00:19:43,120 --> 00:19:45,280
you want to do is to entice the user to

506
00:19:45,280 --> 00:19:46,240
visit

507
00:19:46,240 --> 00:19:48,960
your your fake site and then carry out

508
00:19:48,960 --> 00:19:53,039
the attack uh that way

509
00:19:53,039 --> 00:19:55,200
so these attacks are not new right they

510
00:19:55,200 --> 00:19:57,600
have been happening for ages what has

511
00:19:57,600 --> 00:20:00,160
changed is because we've become so much

512
00:20:00,160 --> 00:20:02,080
better with 2fa

513
00:20:02,080 --> 00:20:05,120
with defenses against batch attacks

514
00:20:05,120 --> 00:20:06,480
we haven't solved them but we have

515
00:20:06,480 --> 00:20:08,960
become better uh these attacks have

516
00:20:08,960 --> 00:20:10,720
diversified they're now coming through

517
00:20:10,720 --> 00:20:13,280
all sorts of uh uh

518
00:20:13,280 --> 00:20:14,880
the distribution is coming through all

519
00:20:14,880 --> 00:20:17,120
sorts of uh social networks like

520
00:20:17,120 --> 00:20:19,600
facebook and linkedin and

521
00:20:19,600 --> 00:20:20,480
instagram

522
00:20:20,480 --> 00:20:23,440
but they also materialize as

523
00:20:23,440 --> 00:20:26,159
as browser extensions so users install

524
00:20:26,159 --> 00:20:27,039
them

525
00:20:27,039 --> 00:20:29,760
expecting to get you know vpn access or

526
00:20:29,760 --> 00:20:31,200
you know

527
00:20:31,200 --> 00:20:32,240
some

528
00:20:32,240 --> 00:20:35,120
grammar corrector or something um

529
00:20:35,120 --> 00:20:38,000
but in addition to doing the thing that

530
00:20:38,000 --> 00:20:42,080
uh makes the user happy uh the the the

531
00:20:42,080 --> 00:20:45,200
the site is also the extension is also

532
00:20:45,200 --> 00:20:49,520
grabbing uh and changing what a user

533
00:20:49,520 --> 00:20:51,760
sees when they visit a variety of sites

534
00:20:51,760 --> 00:20:52,480
so

535
00:20:52,480 --> 00:20:55,200
let's have a less savvy users inhabit

536
00:20:55,200 --> 00:20:56,720
these networks they install these

537
00:20:56,720 --> 00:20:58,240
extensions because they don't know

538
00:20:58,240 --> 00:21:01,360
better i i say less savvy users i

539
00:21:01,360 --> 00:21:03,200
certainly have been

540
00:21:03,200 --> 00:21:04,960
pretty close to being vulnerable to this

541
00:21:04,960 --> 00:21:06,720
as well and i consider myself a pretty

542
00:21:06,720 --> 00:21:09,440
savvy user and so i think you know all

543
00:21:09,440 --> 00:21:10,880
users are pretty

544
00:21:10,880 --> 00:21:13,919
uh vulnerable to this style of attack as

545
00:21:13,919 --> 00:21:17,600
a defender from a defender's perspective

546
00:21:17,600 --> 00:21:20,400
we have to assume that some chunk of our

547
00:21:20,400 --> 00:21:22,159
users it might not be large it might not

548
00:21:22,159 --> 00:21:24,960
be small but some chunk of our users are

549
00:21:24,960 --> 00:21:26,960
going to be falling for this particular

550
00:21:26,960 --> 00:21:29,520
style of attack

551
00:21:29,520 --> 00:21:32,000
but what does this attack look like well

552
00:21:32,000 --> 00:21:34,480
in the standard case you go to uh the

553
00:21:34,480 --> 00:21:36,960
virtual bank site this is the front-end

554
00:21:36,960 --> 00:21:38,559
you type in your username and your

555
00:21:38,559 --> 00:21:40,000
password

556
00:21:40,000 --> 00:21:43,200
and you send it to the api

557
00:21:43,200 --> 00:21:45,520
it gets verified and what gets sent back

558
00:21:45,520 --> 00:21:48,480
is an authorization token maybe a signed

559
00:21:48,480 --> 00:21:51,200
jwt token i i believe those are called

560
00:21:51,200 --> 00:21:53,280
jots i still have difficulty pronouncing

561
00:21:53,280 --> 00:21:55,840
that uh now every time you need to carry

562
00:21:55,840 --> 00:21:58,320
out a transaction thereafter this is the

563
00:21:58,320 --> 00:21:59,919
token that you provide and now

564
00:21:59,919 --> 00:22:02,640
everything is happy we know that you are

565
00:22:02,640 --> 00:22:06,559
authorized to access this now if you can

566
00:22:06,559 --> 00:22:09,200
trick a user into going to this web fake

567
00:22:09,200 --> 00:22:12,799
version a copycat version uh you provide

568
00:22:12,799 --> 00:22:15,440
the user provides their credentials the

569
00:22:15,440 --> 00:22:17,840
fake site may even go back to the actual

570
00:22:17,840 --> 00:22:20,480
api to the real site api

571
00:22:20,480 --> 00:22:22,159
get a

572
00:22:22,159 --> 00:22:24,559
present these tokens get assigned job

573
00:22:24,559 --> 00:22:26,559
token back

574
00:22:26,559 --> 00:22:31,280
and now the fake site can act as you as

575
00:22:31,280 --> 00:22:34,480
uh as you and proxy everything now one

576
00:22:34,480 --> 00:22:37,039
of the first things that people

577
00:22:37,039 --> 00:22:38,559
realize when they see something like

578
00:22:38,559 --> 00:22:40,240
this they're like hey i'm just going to

579
00:22:40,240 --> 00:22:41,840
roll out chords

580
00:22:41,840 --> 00:22:44,000
what does calls do cause make sure that

581
00:22:44,000 --> 00:22:47,679
my api can only talk to my front end

582
00:22:47,679 --> 00:22:49,679
but this doesn't quite work because the

583
00:22:49,679 --> 00:22:52,960
web fake version is in control of where

584
00:22:52,960 --> 00:22:54,960
the connection is made to they can

585
00:22:54,960 --> 00:22:57,520
connect to a proxy that does a variety

586
00:22:57,520 --> 00:22:59,120
of things it can strip out the code

587
00:22:59,120 --> 00:23:01,600
header it can rewrite the code header it

588
00:23:01,600 --> 00:23:04,000
can make sure that

589
00:23:04,000 --> 00:23:07,280
in spite of all kinds of defenses that

590
00:23:07,280 --> 00:23:10,320
the api is trying to provide those

591
00:23:10,320 --> 00:23:13,600
those defenses are pulled out

592
00:23:13,600 --> 00:23:15,280
what about 2fa

593
00:23:15,280 --> 00:23:18,720
well uh 2fa does help

594
00:23:18,720 --> 00:23:21,200
but it cannot help in situations because

595
00:23:21,200 --> 00:23:23,360
where the user thinks that they are

596
00:23:23,360 --> 00:23:26,320
driving they are expecting uh

597
00:23:26,320 --> 00:23:29,200
the 2fa prompt they have gone to the

598
00:23:29,200 --> 00:23:32,080
site the site says hey i'm about to send

599
00:23:32,080 --> 00:23:34,480
you a 2fa it ends up connecting to the

600
00:23:34,480 --> 00:23:37,840
api the api calls out sends the 2fa

601
00:23:37,840 --> 00:23:39,919
whatever the 2fa is the user is

602
00:23:39,919 --> 00:23:43,360
expecting it the user types in the 2fa

603
00:23:43,360 --> 00:23:46,159
to the to the third-party site this is

604
00:23:46,159 --> 00:23:49,279
the live attack the the web fake version

605
00:23:49,279 --> 00:23:50,559
takes the

606
00:23:50,559 --> 00:23:52,720
2fa that the user provided the

607
00:23:52,720 --> 00:23:56,159
legitimate 2fa sends it to the api

608
00:23:56,159 --> 00:23:57,440
um

609
00:23:57,440 --> 00:24:00,240
and and authenticates it one of the

610
00:24:00,240 --> 00:24:02,320
defenses and this is why i talk a little

611
00:24:02,320 --> 00:24:03,200
bit

612
00:24:03,200 --> 00:24:06,480
about uh ub keys and other hardware keys

613
00:24:06,480 --> 00:24:08,799
um

614
00:24:08,960 --> 00:24:12,480
a a a hardware key is in a position to

615
00:24:12,480 --> 00:24:13,279
check

616
00:24:13,279 --> 00:24:15,520
hey is this actually the site that i

617
00:24:15,520 --> 00:24:17,919
wanted to type uh

618
00:24:17,919 --> 00:24:20,320
to provide my secret to or maybe the

619
00:24:20,320 --> 00:24:22,799
secret is encrypted using the domain

620
00:24:22,799 --> 00:24:25,279
that you are on now in that particular

621
00:24:25,279 --> 00:24:28,240
case yes it does help

622
00:24:28,240 --> 00:24:30,720
but these these hardware tokens these

623
00:24:30,720 --> 00:24:33,440
hardware keys whilst increasing in in in

624
00:24:33,440 --> 00:24:37,840
numbers uh are a very small amount of uh

625
00:24:37,840 --> 00:24:39,279
uh

626
00:24:39,279 --> 00:24:42,240
of the general usage that most uh

627
00:24:42,240 --> 00:24:43,840
websites see

628
00:24:43,840 --> 00:24:46,480
and it would be interesting to see also

629
00:24:46,480 --> 00:24:48,480
how much value

630
00:24:48,480 --> 00:24:50,799
and how much usability we can provide

631
00:24:50,799 --> 00:24:52,799
using these hardware keys

632
00:24:52,799 --> 00:24:55,520
but like i say 2fa is where you type in

633
00:24:55,520 --> 00:24:56,960
your username

634
00:24:56,960 --> 00:24:58,960
where you type in that secret very

635
00:24:58,960 --> 00:25:01,200
different from a hardware key that

636
00:25:01,200 --> 00:25:04,640
automatically authenticates

637
00:25:04,960 --> 00:25:07,440
now i'm just going to pause for a second

638
00:25:07,440 --> 00:25:10,320
and say why do we care um

639
00:25:10,320 --> 00:25:12,159
there are many reasons why we may care

640
00:25:12,159 --> 00:25:15,200
right um

641
00:25:15,200 --> 00:25:17,760
why i care and why you probably care

642
00:25:17,760 --> 00:25:20,960
like one is that this attack affects

643
00:25:20,960 --> 00:25:22,400
any website

644
00:25:22,400 --> 00:25:24,240
it can be automated

645
00:25:24,240 --> 00:25:27,039
therefore it can scale it's very easy to

646
00:25:27,039 --> 00:25:30,000
implement and the roi for uh for

647
00:25:30,000 --> 00:25:31,440
attackers is

648
00:25:31,440 --> 00:25:33,919
is very high you basically get control

649
00:25:33,919 --> 00:25:36,880
of your users uh accounts

650
00:25:36,880 --> 00:25:38,960
and and this has been a real problem for

651
00:25:38,960 --> 00:25:41,039
ages it's becoming a worse problem over

652
00:25:41,039 --> 00:25:43,039
time but it has been a problem for a

653
00:25:43,039 --> 00:25:44,240
long time

654
00:25:44,240 --> 00:25:46,720
the reason i care and i think why pedro

655
00:25:46,720 --> 00:25:49,360
cares is because this attack is not

656
00:25:49,360 --> 00:25:51,600
talked about nearly as much as it should

657
00:25:51,600 --> 00:25:53,840
it's a pretty common attack

658
00:25:53,840 --> 00:25:56,080
it's a very hard problem and therefore

659
00:25:56,080 --> 00:25:58,480
an interesting security problem as well

660
00:25:58,480 --> 00:26:00,960
and i i i'm attracted to

661
00:26:00,960 --> 00:26:04,080
interesting hard security problems

662
00:26:04,080 --> 00:26:06,559
that are prevalent and i think that

663
00:26:06,559 --> 00:26:08,720
you should be excited about

664
00:26:08,720 --> 00:26:12,640
problems of this style as well

665
00:26:13,760 --> 00:26:16,960
um now before we get knee deep into what

666
00:26:16,960 --> 00:26:18,559
the solution is it's important to

667
00:26:18,559 --> 00:26:20,559
understand what exactly

668
00:26:20,559 --> 00:26:22,880
to frame the problem well uh from a

669
00:26:22,880 --> 00:26:26,000
technical standpoint first of all uh

670
00:26:26,000 --> 00:26:27,360
let me tell you all of the things that

671
00:26:27,360 --> 00:26:30,240
this is not this is not a traditional

672
00:26:30,240 --> 00:26:32,159
api security problem

673
00:26:32,159 --> 00:26:34,960
uh this is not about finding and fixing

674
00:26:34,960 --> 00:26:37,440
typical api vulnerabilities this is not

675
00:26:37,440 --> 00:26:39,679
you know find an exercise this is not

676
00:26:39,679 --> 00:26:42,640
find a csrf problem and this is not an

677
00:26:42,640 --> 00:26:45,440
authentication problem not even a 2fa

678
00:26:45,440 --> 00:26:46,320
problem

679
00:26:46,320 --> 00:26:49,600
because this proxy is able to bypass a

680
00:26:49,600 --> 00:26:51,279
large amount of the solutions that you

681
00:26:51,279 --> 00:26:52,640
may roll out

682
00:26:52,640 --> 00:26:55,120
it's also not a good

683
00:26:55,120 --> 00:26:56,400
fit for

684
00:26:56,400 --> 00:26:57,919
api abuse

685
00:26:57,919 --> 00:27:00,799
in this particular case you know the api

686
00:27:00,799 --> 00:27:04,320
is not really being abused

687
00:27:04,320 --> 00:27:06,640
for for every one of the cases

688
00:27:06,640 --> 00:27:08,480
for every one of the users you probably

689
00:27:08,480 --> 00:27:12,159
only get one connection one attempt um

690
00:27:12,159 --> 00:27:14,720
it's not a denial of service attack it's

691
00:27:14,720 --> 00:27:17,440
it's not the goal of the attack uh for

692
00:27:17,440 --> 00:27:20,320
the attacker to you know do credential

693
00:27:20,320 --> 00:27:22,080
stuffing to try all kinds of different

694
00:27:22,080 --> 00:27:23,440
parts this

695
00:27:23,440 --> 00:27:25,520
is a fishing problem

696
00:27:25,520 --> 00:27:27,039
um

697
00:27:27,039 --> 00:27:28,640
and and you know if you think about it

698
00:27:28,640 --> 00:27:30,960
like most fishing problems are not a

699
00:27:30,960 --> 00:27:33,520
problem that can be easily solved

700
00:27:33,520 --> 00:27:35,600
uh not without forcing everyone to have

701
00:27:35,600 --> 00:27:38,320
a hardware key of some kind but you know

702
00:27:38,320 --> 00:27:40,960
today that's not universal and and will

703
00:27:40,960 --> 00:27:42,559
become clear in a moment

704
00:27:42,559 --> 00:27:44,960
even if you have a hardware key it's not

705
00:27:44,960 --> 00:27:47,039
obvious that that fixes all of the

706
00:27:47,039 --> 00:27:48,960
problems um

707
00:27:48,960 --> 00:27:51,520
nevertheless i i we have high hopes for

708
00:27:51,520 --> 00:27:52,880
web austen

709
00:27:52,880 --> 00:27:53,760
uh

710
00:27:53,760 --> 00:27:56,320
becoming more

711
00:27:56,320 --> 00:27:58,640
becoming more popular but for now we

712
00:27:58,640 --> 00:28:00,799
cannot get rid of phishing we have to

713
00:28:00,799 --> 00:28:04,399
deal with the consequences that arise

714
00:28:04,399 --> 00:28:06,960
uh so in our perspective this is an

715
00:28:06,960 --> 00:28:08,000
automated

716
00:28:08,000 --> 00:28:10,480
and automated attack problem it needs to

717
00:28:10,480 --> 00:28:12,480
be stopped with automated attack

718
00:28:12,480 --> 00:28:14,840
prevention techniques

719
00:28:14,840 --> 00:28:17,279
um basically

720
00:28:17,279 --> 00:28:19,520
detecting and preventing bots

721
00:28:19,520 --> 00:28:20,720
one of the things that we're going to

722
00:28:20,720 --> 00:28:23,919
talk about is uh is code protection in

723
00:28:23,919 --> 00:28:25,279
particular and it's going to become

724
00:28:25,279 --> 00:28:28,000
clear why that uh

725
00:28:28,000 --> 00:28:28,840
that

726
00:28:28,840 --> 00:28:30,559
approach uh

727
00:28:30,559 --> 00:28:32,880
systematically helps mitigate this

728
00:28:32,880 --> 00:28:34,880
particular attack let me let me show you

729
00:28:34,880 --> 00:28:37,279
a demo of what the attack actually looks

730
00:28:37,279 --> 00:28:39,440
like

731
00:28:39,440 --> 00:28:40,320
okay

732
00:28:40,320 --> 00:28:42,640
uh let's set up this demo uh it's a

733
00:28:42,640 --> 00:28:43,840
little subtle because there's several

734
00:28:43,840 --> 00:28:45,760
things going on but it's easy to follow

735
00:28:45,760 --> 00:28:48,000
along we have a real api

736
00:28:48,000 --> 00:28:50,480
uh or running on port 4000 right on the

737
00:28:50,480 --> 00:28:53,039
top uh window of the tree

738
00:28:53,039 --> 00:28:54,559
uh

739
00:28:54,559 --> 00:28:57,279
we have the real front end being served

740
00:28:57,279 --> 00:29:00,240
on the second window on 3000

741
00:29:00,240 --> 00:29:02,000
and then because you know we have to do

742
00:29:02,000 --> 00:29:05,120
this we have a fake

743
00:29:05,120 --> 00:29:08,000
website running on port 5000 on the

744
00:29:08,000 --> 00:29:10,240
third window now you go to the

745
00:29:10,240 --> 00:29:12,399
legitimate site you go to

746
00:29:12,399 --> 00:29:14,399
virtualbank.com you type in your

747
00:29:14,399 --> 00:29:17,760
username and your password you log in

748
00:29:17,760 --> 00:29:19,520
you're logged in and if you go to the

749
00:29:19,520 --> 00:29:21,520
drop server which is you know where the

750
00:29:21,520 --> 00:29:23,679
passwords will accumulate you see that

751
00:29:23,679 --> 00:29:26,159
there's no password being leaked because

752
00:29:26,159 --> 00:29:27,279
of course

753
00:29:27,279 --> 00:29:29,279
this is the legitimate side

754
00:29:29,279 --> 00:29:30,480
okay

755
00:29:30,480 --> 00:29:33,960
instead what we do is if we load up the

756
00:29:33,960 --> 00:29:37,679
v12 bank.com you know that this is evil

757
00:29:37,679 --> 00:29:40,080
because it has the evil pink background

758
00:29:40,080 --> 00:29:42,399
the user has been convinced to type in

759
00:29:42,399 --> 00:29:44,240
their username and password when they

760
00:29:44,240 --> 00:29:46,320
log in now

761
00:29:46,320 --> 00:29:47,440
uh

762
00:29:47,440 --> 00:29:49,919
we're proxying the entire site so they

763
00:29:49,919 --> 00:29:51,760
can see all of the things the bearers

764
00:29:51,760 --> 00:29:55,039
would see on a real side but in addition

765
00:29:55,039 --> 00:29:57,520
if you go to the drop server we're also

766
00:29:57,520 --> 00:30:00,559
exfiltrating the test username and test

767
00:30:00,559 --> 00:30:02,720
password which means that the attacker

768
00:30:02,720 --> 00:30:04,640
can now go ahead

769
00:30:04,640 --> 00:30:07,600
change the contact address for example

770
00:30:07,600 --> 00:30:09,120
in this particular case the attacker is

771
00:30:09,120 --> 00:30:11,120
doing this manually but the attacker can

772
00:30:11,120 --> 00:30:12,799
do this automatically

773
00:30:12,799 --> 00:30:16,159
and uh and and change the contact

774
00:30:16,159 --> 00:30:18,240
address and now this is an account

775
00:30:18,240 --> 00:30:19,919
takeover

776
00:30:19,919 --> 00:30:22,080
the attacker is completely in control of

777
00:30:22,080 --> 00:30:24,159
this particular account

778
00:30:24,159 --> 00:30:28,159
you can see on the on the top uh window

779
00:30:28,159 --> 00:30:31,600
the the actual site is receiving the

780
00:30:31,600 --> 00:30:35,840
real login uh password and and maybe 2fa

781
00:30:35,840 --> 00:30:38,320
credential

782
00:30:42,399 --> 00:30:44,480
the the takeaway that you should have

783
00:30:44,480 --> 00:30:46,720
here is

784
00:30:46,720 --> 00:30:48,799
this is a real problem it's not been

785
00:30:48,799 --> 00:30:50,799
given the attention that it deserves

786
00:30:50,799 --> 00:30:53,039
there aren't any numbers on the size of

787
00:30:53,039 --> 00:30:54,480
this problem and so why should you

788
00:30:54,480 --> 00:30:56,799
believe me we know you should believe me

789
00:30:56,799 --> 00:30:59,360
because the problem is really easy it's

790
00:30:59,360 --> 00:31:02,799
really cheap in fact over the last week

791
00:31:02,799 --> 00:31:05,360
is when pedro and i put the demo

792
00:31:05,360 --> 00:31:07,279
together it took us you know a couple of

793
00:31:07,279 --> 00:31:11,120
days when i say us i mean pedro uh a a

794
00:31:11,120 --> 00:31:13,279
couple of days to put this uh

795
00:31:13,279 --> 00:31:15,760
to put the attack together uh we know

796
00:31:15,760 --> 00:31:18,640
it's easy we know it's cheap it scales

797
00:31:18,640 --> 00:31:21,440
well it provides great roi for attackers

798
00:31:21,440 --> 00:31:23,440
it should be a it should be considered a

799
00:31:23,440 --> 00:31:25,519
threat model for any transactional

800
00:31:25,519 --> 00:31:27,679
website which takes the security of its

801
00:31:27,679 --> 00:31:30,240
user data seriously which is all real

802
00:31:30,240 --> 00:31:34,000
websites right now we did not paint this

803
00:31:34,000 --> 00:31:35,760
terrible picture for you

804
00:31:35,760 --> 00:31:38,080
just to leave you stranded we'll provide

805
00:31:38,080 --> 00:31:41,120
a strategy and some insights on how you

806
00:31:41,120 --> 00:31:43,039
go about

807
00:31:43,039 --> 00:31:44,640
mitigating

808
00:31:44,640 --> 00:31:47,440
an attack like this

809
00:31:47,440 --> 00:31:50,000
yeah we'll give you some hints on how to

810
00:31:50,000 --> 00:31:53,360
give the attacker the boots um so

811
00:31:53,360 --> 00:31:56,000
let's talk about the attacker's mom

812
00:31:56,000 --> 00:31:59,919
no i'm not trying to be juvenile here

813
00:31:59,919 --> 00:32:02,720
mom is the acronym that results from

814
00:32:02,720 --> 00:32:05,440
method opportunity and motive

815
00:32:05,440 --> 00:32:08,320
so this is a relatively known model in

816
00:32:08,320 --> 00:32:10,799
security that represents three things

817
00:32:10,799 --> 00:32:13,760
that influence the likelihood of a

818
00:32:13,760 --> 00:32:16,559
successful attack playing out

819
00:32:16,559 --> 00:32:19,360
so method represents how skillful the

820
00:32:19,360 --> 00:32:21,600
attacker needs to be and what tools and

821
00:32:21,600 --> 00:32:24,320
knowledge the attacker needs to have

822
00:32:24,320 --> 00:32:27,440
opportunity represents the existence of

823
00:32:27,440 --> 00:32:30,480
a window of attack and its duration

824
00:32:30,480 --> 00:32:32,880
and finally motive represents the

825
00:32:32,880 --> 00:32:37,039
motivation of the attack of the attacker

826
00:32:37,039 --> 00:32:40,159
usually we are talking about the roi

827
00:32:40,159 --> 00:32:43,039
but can also be non-financial like tied

828
00:32:43,039 --> 00:32:46,880
to reputation politics fun etc

829
00:32:46,880 --> 00:32:49,120
so in the figure to the right you can

830
00:32:49,120 --> 00:32:51,919
see all three each represented with an

831
00:32:51,919 --> 00:32:53,039
axis

832
00:32:53,039 --> 00:32:55,760
the opportunity grows with the size of

833
00:32:55,760 --> 00:32:58,399
the attack window and duration

834
00:32:58,399 --> 00:33:02,000
the method grows inversely to the skills

835
00:33:02,000 --> 00:33:04,240
needed by the attacker

836
00:33:04,240 --> 00:33:07,440
and motive essentially grows with roi

837
00:33:07,440 --> 00:33:09,679
obtained by the attacker

838
00:33:09,679 --> 00:33:12,880
so as defenders we want the attacker's

839
00:33:12,880 --> 00:33:16,799
mom to be as close to 0 0 0

840
00:33:16,799 --> 00:33:19,440
as possible

841
00:33:19,440 --> 00:33:22,480
but let's explore this in the context of

842
00:33:22,480 --> 00:33:25,200
our attack scenario let's think how we

843
00:33:25,200 --> 00:33:26,960
can move the scenario

844
00:33:26,960 --> 00:33:30,399
closer to the zero zero zero for method

845
00:33:30,399 --> 00:33:32,880
we can put up stronger defenses forcing

846
00:33:32,880 --> 00:33:35,760
the attacker to go to the next level

847
00:33:35,760 --> 00:33:37,760
if we are lucky perhaps the attackers

848
00:33:37,760 --> 00:33:40,159
will be over their heads

849
00:33:40,159 --> 00:33:42,480
causing them to quit

850
00:33:42,480 --> 00:33:44,640
in opportunity because this is a

851
00:33:44,640 --> 00:33:46,799
phishing attack there's not much we can

852
00:33:46,799 --> 00:33:49,760
do to kill the opportunity

853
00:33:49,760 --> 00:33:52,240
of course this should not be an excuse

854
00:33:52,240 --> 00:33:54,640
not to promote awareness

855
00:33:54,640 --> 00:33:56,559
but most likely the attacker will still

856
00:33:56,559 --> 00:33:59,519
gather a pretty good batch of victims

857
00:33:59,519 --> 00:34:01,760
and finally the motive is the one where

858
00:34:01,760 --> 00:34:04,480
we should put most of our chips

859
00:34:04,480 --> 00:34:07,840
one thing we can do is drive up the cost

860
00:34:07,840 --> 00:34:10,719
of the attack

861
00:34:10,800 --> 00:34:13,760
in fact if we do a good enough job

862
00:34:13,760 --> 00:34:15,760
regarding bringing up the costs if we

863
00:34:15,760 --> 00:34:17,839
bring the roy to zero

864
00:34:17,839 --> 00:34:21,199
we can kill their motive and then

865
00:34:21,199 --> 00:34:23,520
even if the attacker has enough

866
00:34:23,520 --> 00:34:26,320
opportunity and method it doesn't matter

867
00:34:26,320 --> 00:34:28,879
because the motive isn't there anymore

868
00:34:28,879 --> 00:34:31,520
so the attacker will no longer care

869
00:34:31,520 --> 00:34:33,679
and thus we can say that the threat

870
00:34:33,679 --> 00:34:36,000
becomes mitigated

871
00:34:36,000 --> 00:34:38,079
so to bring the cost higher we should

872
00:34:38,079 --> 00:34:40,800
aim to do three things we should

873
00:34:40,800 --> 00:34:43,520
increase the attack complexity we should

874
00:34:43,520 --> 00:34:46,320
decrease attack scalability and we

875
00:34:46,320 --> 00:34:48,560
should increase the cost of materials

876
00:34:48,560 --> 00:34:51,839
like make the attacker use more servers

877
00:34:51,839 --> 00:34:54,399
for instance

878
00:34:54,960 --> 00:34:56,320
so now

879
00:34:56,320 --> 00:34:58,800
jazz and i spent quite a bit of time

880
00:34:58,800 --> 00:35:00,800
thinking about this attack and what can

881
00:35:00,800 --> 00:35:02,880
help mitigate it

882
00:35:02,880 --> 00:35:05,200
and if i had to pick the most important

883
00:35:05,200 --> 00:35:08,079
slide of the presentation this would

884
00:35:08,079 --> 00:35:10,480
be a great candidate for that

885
00:35:10,480 --> 00:35:13,200
it summarizes our analysis of the

886
00:35:13,200 --> 00:35:16,000
tactical advantages one can have when

887
00:35:16,000 --> 00:35:18,320
attacking or defending

888
00:35:18,320 --> 00:35:21,280
in a fishing bot attack

889
00:35:21,280 --> 00:35:24,079
the two axes that mostly influence the

890
00:35:24,079 --> 00:35:27,680
outcome is how much of the real websites

891
00:35:27,680 --> 00:35:29,599
the attacker needs to run

892
00:35:29,599 --> 00:35:32,640
so in the far left the attacker does not

893
00:35:32,640 --> 00:35:35,440
load the website at all it has a web

894
00:35:35,440 --> 00:35:37,920
fake and then that web fake interacts

895
00:35:37,920 --> 00:35:41,440
directly with the real website api

896
00:35:41,440 --> 00:35:43,520
whereas in the far right the attacker

897
00:35:43,520 --> 00:35:46,240
needs to navigate the whole real website

898
00:35:46,240 --> 00:35:48,240
usually with the help of a headless

899
00:35:48,240 --> 00:35:49,520
browser

900
00:35:49,520 --> 00:35:51,520
on the vertical axis

901
00:35:51,520 --> 00:35:54,079
we have how much of the real website is

902
00:35:54,079 --> 00:35:56,960
actually executed by the real user

903
00:35:56,960 --> 00:35:58,480
instead of just

904
00:35:58,480 --> 00:36:01,359
by the headless browser so in the bottom

905
00:36:01,359 --> 00:36:03,920
the real user will never execute the

906
00:36:03,920 --> 00:36:08,000
real website code only the web fake

907
00:36:08,000 --> 00:36:10,640
whereas in the top the real user will

908
00:36:10,640 --> 00:36:14,000
execute all of the real website codes

909
00:36:14,000 --> 00:36:16,320
but i i want to make a comment here in

910
00:36:16,320 --> 00:36:19,599
some situations the real website code

911
00:36:19,599 --> 00:36:20,880
is ran

912
00:36:20,880 --> 00:36:23,760
just because it was reused to build the

913
00:36:23,760 --> 00:36:25,040
web fake

914
00:36:25,040 --> 00:36:27,760
but that counts in regards to this axis

915
00:36:27,760 --> 00:36:29,680
as well

916
00:36:29,680 --> 00:36:32,240
so in conclusion the green square

917
00:36:32,240 --> 00:36:33,839
represents the combination where the

918
00:36:33,839 --> 00:36:36,240
mitigation is more likely

919
00:36:36,240 --> 00:36:38,880
either by blocking it or by working the

920
00:36:38,880 --> 00:36:41,119
attacker's mom

921
00:36:41,119 --> 00:36:43,200
that didn't sound right

922
00:36:43,200 --> 00:36:44,720
um i i

923
00:36:44,720 --> 00:36:47,760
i i love this uh i i love the use of the

924
00:36:47,760 --> 00:36:51,040
word mom here uh better

925
00:36:51,040 --> 00:36:53,599
in the the red square the attacker has

926
00:36:53,599 --> 00:36:56,400
an edge uh probably enjoying of a high

927
00:36:56,400 --> 00:36:59,520
roy from a highly scalable

928
00:36:59,520 --> 00:37:01,599
attack

929
00:37:01,599 --> 00:37:02,320
so

930
00:37:02,320 --> 00:37:05,520
goal number one uh that we are setting

931
00:37:05,520 --> 00:37:07,520
is

932
00:37:07,520 --> 00:37:09,920
we have established the two exits so

933
00:37:09,920 --> 00:37:11,680
let's set the goals this is goal number

934
00:37:11,680 --> 00:37:14,160
one make the attacker run the real

935
00:37:14,160 --> 00:37:16,240
website front-end code

936
00:37:16,240 --> 00:37:18,560
so when we achieve this we are basically

937
00:37:18,560 --> 00:37:20,640
choosing the terrain where the

938
00:37:20,640 --> 00:37:22,960
battlefield will occur

939
00:37:22,960 --> 00:37:25,440
um this will give the defender an edge

940
00:37:25,440 --> 00:37:28,000
because we can then use browser-based

941
00:37:28,000 --> 00:37:29,680
defenses

942
00:37:29,680 --> 00:37:31,599
which wasn't possible when the attacker

943
00:37:31,599 --> 00:37:34,480
was connecting directly to the api

944
00:37:34,480 --> 00:37:36,240
and will force the attacker to run the

945
00:37:36,240 --> 00:37:38,880
headless browser to minimize the chance

946
00:37:38,880 --> 00:37:40,320
of being detected

947
00:37:40,320 --> 00:37:42,960
and this will increase the costs

948
00:37:42,960 --> 00:37:46,720
and reduce the attack scalability

949
00:37:46,720 --> 00:37:47,760
so

950
00:37:47,760 --> 00:37:50,480
to achieve these we propose the use of

951
00:37:50,480 --> 00:37:53,359
one-time tokens embedded in the website

952
00:37:53,359 --> 00:37:54,400
codes

953
00:37:54,400 --> 00:37:55,359
so

954
00:37:55,359 --> 00:37:59,200
every api request should contain an ott

955
00:37:59,200 --> 00:38:01,599
to authorize it otherwise the api

956
00:38:01,599 --> 00:38:03,599
requests should be ignored

957
00:38:03,599 --> 00:38:06,160
so in this situation the attacker needs

958
00:38:06,160 --> 00:38:08,960
to load the real websites and try to

959
00:38:08,960 --> 00:38:11,280
recover the ott

960
00:38:11,280 --> 00:38:12,960
so that is

961
00:38:12,960 --> 00:38:15,760
that it can connect to the api

962
00:38:15,760 --> 00:38:18,480
so that their connections to the api are

963
00:38:18,480 --> 00:38:19,920
honored

964
00:38:19,920 --> 00:38:22,160
so from another perspective we are try

965
00:38:22,160 --> 00:38:25,200
we are tying together the execution of

966
00:38:25,200 --> 00:38:27,599
the frontend codes with the api

967
00:38:27,599 --> 00:38:30,560
authorization one cannot happen without

968
00:38:30,560 --> 00:38:33,359
the other um i can imagine what you're

969
00:38:33,359 --> 00:38:35,200
thinking if you were the attacker you

970
00:38:35,200 --> 00:38:37,119
would now be thinking how can i grab

971
00:38:37,119 --> 00:38:40,560
that ott from from the code right

972
00:38:40,560 --> 00:38:43,599
so to prevent that situation

973
00:38:43,599 --> 00:38:44,010
um

974
00:38:44,010 --> 00:38:45,760
[Music]

975
00:38:45,760 --> 00:38:47,520
so in this situation the attacker is

976
00:38:47,520 --> 00:38:50,079
motivated to minimize the costs and it

977
00:38:50,079 --> 00:38:52,880
will try to grab her to grab the ott

978
00:38:52,880 --> 00:38:56,000
as fast as possible and and go back to

979
00:38:56,000 --> 00:38:56,960
direct

980
00:38:56,960 --> 00:38:58,400
api calls

981
00:38:58,400 --> 00:39:00,880
so if we deploy

982
00:39:00,880 --> 00:39:03,119
the code like the what you're seeing in

983
00:39:03,119 --> 00:39:05,359
this picture certainly that would be

984
00:39:05,359 --> 00:39:08,400
very easy uh we can see the ott in clear

985
00:39:08,400 --> 00:39:10,880
text the attacker would w get the code

986
00:39:10,880 --> 00:39:12,880
and grab the ott

987
00:39:12,880 --> 00:39:14,880
out from the code

988
00:39:14,880 --> 00:39:17,119
and no headless browser would even be

989
00:39:17,119 --> 00:39:18,400
necessary

990
00:39:18,400 --> 00:39:21,040
but our goal as a defender is for the

991
00:39:21,040 --> 00:39:23,280
attacker to pay the headless browser

992
00:39:23,280 --> 00:39:27,359
costs so what we can do here

993
00:39:27,440 --> 00:39:29,040
is um

994
00:39:29,040 --> 00:39:31,359
by using polymorphic

995
00:39:31,359 --> 00:39:33,200
code obfuscation

996
00:39:33,200 --> 00:39:36,160
uh in the code so polymorphic in the

997
00:39:36,160 --> 00:39:38,480
sense that every builds

998
00:39:38,480 --> 00:39:40,960
will generate

999
00:39:40,960 --> 00:39:43,440
entirely different looking code like

1000
00:39:43,440 --> 00:39:45,760
variables will take different names

1001
00:39:45,760 --> 00:39:48,560
control flow obfuscation decisions

1002
00:39:48,560 --> 00:39:50,560
uh will be different

1003
00:39:50,560 --> 00:39:51,839
um

1004
00:39:51,839 --> 00:39:54,160
so everything will be different and the

1005
00:39:54,160 --> 00:39:56,640
the extraction of the reference

1006
00:39:56,640 --> 00:39:59,520
the the extraction references will be lo

1007
00:39:59,520 --> 00:40:01,040
will be lost

1008
00:40:01,040 --> 00:40:05,920
and automation is no longer possible

1009
00:40:06,400 --> 00:40:08,480
so um

1010
00:40:08,480 --> 00:40:10,480
and this is significant because

1011
00:40:10,480 --> 00:40:13,920
now the attack uh cannot be done and the

1012
00:40:13,920 --> 00:40:18,000
attack requires uh automation to do it

1013
00:40:18,000 --> 00:40:22,640
unless the time between deployments um

1014
00:40:22,640 --> 00:40:23,680
are

1015
00:40:23,680 --> 00:40:26,160
really spread it out um

1016
00:40:26,160 --> 00:40:28,880
so basically uh if

1017
00:40:28,880 --> 00:40:31,520
if that's the case the attacker can can

1018
00:40:31,520 --> 00:40:32,990
basically can basically

1019
00:40:32,990 --> 00:40:34,640
[Music]

1020
00:40:34,640 --> 00:40:37,440
spend time reverse engineering the codes

1021
00:40:37,440 --> 00:40:40,240
and automate that particular version of

1022
00:40:40,240 --> 00:40:42,640
the code and still be left with some

1023
00:40:42,640 --> 00:40:45,680
time to monetize that that work

1024
00:40:45,680 --> 00:40:48,400
so luckily that's easy to fix all we

1025
00:40:48,400 --> 00:40:50,480
have to do is

1026
00:40:50,480 --> 00:40:52,560
rotate the code more often

1027
00:40:52,560 --> 00:40:56,319
uh or just deploy the code more often

1028
00:40:56,319 --> 00:40:57,200
and

1029
00:40:57,200 --> 00:40:59,040
and and that window of

1030
00:40:59,040 --> 00:41:02,400
attack will no longer be there

1031
00:41:02,400 --> 00:41:05,920
so now we can take this to the extreme

1032
00:41:05,920 --> 00:41:08,640
by generating uh

1033
00:41:08,640 --> 00:41:11,760
at every build multiple potentially

1034
00:41:11,760 --> 00:41:13,520
thousands of different versions of the

1035
00:41:13,520 --> 00:41:16,720
code and round robin through them or if

1036
00:41:16,720 --> 00:41:19,280
you have enough of them never reuse one

1037
00:41:19,280 --> 00:41:21,680
so from the attacker's perspective this

1038
00:41:21,680 --> 00:41:24,560
will look like a one-time code

1039
00:41:24,560 --> 00:41:26,240
it doesn't matter if the code can be

1040
00:41:26,240 --> 00:41:28,880
manually reversed as the fruits of of

1041
00:41:28,880 --> 00:41:32,640
that reversal cannot be used in a timely

1042
00:41:32,640 --> 00:41:34,640
fashion

1043
00:41:34,640 --> 00:41:37,359
so now that we have almost unlimited

1044
00:41:37,359 --> 00:41:39,839
versions we can generate one or more

1045
00:41:39,839 --> 00:41:41,680
otts

1046
00:41:41,680 --> 00:41:44,560
to embed in in every single version of

1047
00:41:44,560 --> 00:41:45,760
the codes

1048
00:41:45,760 --> 00:41:47,839
this generation can be can be done

1049
00:41:47,839 --> 00:41:50,480
during builds or dynamically during the

1050
00:41:50,480 --> 00:41:52,560
execution of the code

1051
00:41:52,560 --> 00:41:54,960
also optionally the otts can also be

1052
00:41:54,960 --> 00:41:58,079
binded to the codes meaning that we if

1053
00:41:58,079 --> 00:42:00,160
we catch them being used with different

1054
00:42:00,160 --> 00:42:03,119
versions of the code we should not honor

1055
00:42:03,119 --> 00:42:06,000
their execution

1056
00:42:06,319 --> 00:42:08,480
but now we have the attacker running

1057
00:42:08,480 --> 00:42:11,040
this code we should not stop here

1058
00:42:11,040 --> 00:42:14,240
there's plenty of other code defenses we

1059
00:42:14,240 --> 00:42:15,680
can use

1060
00:42:15,680 --> 00:42:18,240
i will not go into detail but i would

1061
00:42:18,240 --> 00:42:20,319
like to mention a few uh we can use

1062
00:42:20,319 --> 00:42:21,760
temper proofing

1063
00:42:21,760 --> 00:42:24,880
uh anti-program slicing code anti-code

1064
00:42:24,880 --> 00:42:25,920
lifting

1065
00:42:25,920 --> 00:42:26,960
memory

1066
00:42:26,960 --> 00:42:28,720
encryption or integrity checks

1067
00:42:28,720 --> 00:42:30,400
anti-debugging

1068
00:42:30,400 --> 00:42:32,720
emulation detection detecting reverse

1069
00:42:32,720 --> 00:42:34,560
engineering tools that can be used and

1070
00:42:34,560 --> 00:42:37,440
sabotaging that there's lots that we can

1071
00:42:37,440 --> 00:42:40,240
that we can use

1072
00:42:40,400 --> 00:42:43,359
so when the attacker cannot use any

1073
00:42:43,359 --> 00:42:45,200
known automated way of reverse

1074
00:42:45,200 --> 00:42:46,800
engineering the codes

1075
00:42:46,800 --> 00:42:49,200
because those techniques fail

1076
00:42:49,200 --> 00:42:51,040
when the attacker cannot manually

1077
00:42:51,040 --> 00:42:52,720
reverse engineer the code because it's

1078
00:42:52,720 --> 00:42:55,520
very short-lived then we can argue that

1079
00:42:55,520 --> 00:42:57,119
automating the attack is no longer

1080
00:42:57,119 --> 00:43:00,880
viable and in this case ott lifting is

1081
00:43:00,880 --> 00:43:03,040
no longer feasible

1082
00:43:03,040 --> 00:43:05,599
now the attack can still be viable but

1083
00:43:05,599 --> 00:43:08,079
now the attacker is fully cornered into

1084
00:43:08,079 --> 00:43:10,400
using headless browsers

1085
00:43:10,400 --> 00:43:12,720
and interfacing all the code-based bot

1086
00:43:12,720 --> 00:43:14,560
defenses

1087
00:43:14,560 --> 00:43:17,440
and this at the very least increases the

1088
00:43:17,440 --> 00:43:20,160
cost of the attack tremendously

1089
00:43:20,160 --> 00:43:22,400
challenge challenging the attacker's

1090
00:43:22,400 --> 00:43:24,800
motive

1091
00:43:25,440 --> 00:43:27,359
so now that we have the attacker using a

1092
00:43:27,359 --> 00:43:30,240
headless browser we can and we should

1093
00:43:30,240 --> 00:43:32,400
make it go through the most effective

1094
00:43:32,400 --> 00:43:35,040
bot detection techniques uh so that we

1095
00:43:35,040 --> 00:43:37,680
have a good chance of detecting it

1096
00:43:37,680 --> 00:43:40,000
i will not go over this because this was

1097
00:43:40,000 --> 00:43:41,680
already covered

1098
00:43:41,680 --> 00:43:45,119
by the by jazz before but i will say

1099
00:43:45,119 --> 00:43:46,880
this these techniques can also be

1100
00:43:46,880 --> 00:43:49,839
targeted by attackers who can reverse

1101
00:43:49,839 --> 00:43:52,240
engineer and automate attacks against

1102
00:43:52,240 --> 00:43:53,280
the code

1103
00:43:53,280 --> 00:43:56,400
and here code-based defenses also play

1104
00:43:56,400 --> 00:43:59,359
an important role

1105
00:43:59,359 --> 00:44:01,760
so here you can see let's pull all of

1106
00:44:01,760 --> 00:44:04,240
this together and revisit our fishing

1107
00:44:04,240 --> 00:44:05,839
bot attack

1108
00:44:05,839 --> 00:44:09,040
so here you can see that every call to

1109
00:44:09,040 --> 00:44:12,319
the api bears a different ott this is

1110
00:44:12,319 --> 00:44:13,920
the the normal

1111
00:44:13,920 --> 00:44:16,079
uh flow not the attack

1112
00:44:16,079 --> 00:44:17,440
and

1113
00:44:17,440 --> 00:44:20,960
now the web fake is driving a bot

1114
00:44:20,960 --> 00:44:22,800
headless browser

1115
00:44:22,800 --> 00:44:23,820
that um

1116
00:44:23,820 --> 00:44:25,440
[Music]

1117
00:44:25,440 --> 00:44:28,800
that basically uh is is is sending the

1118
00:44:28,800 --> 00:44:30,400
right otts

1119
00:44:30,400 --> 00:44:32,720
uh because the the full navigation is

1120
00:44:32,720 --> 00:44:33,839
being used

1121
00:44:33,839 --> 00:44:34,839
but

1122
00:44:34,839 --> 00:44:38,800
um what is important um

1123
00:44:38,800 --> 00:44:42,240
and and uh to hear is that

1124
00:44:42,240 --> 00:44:45,599
this green box that you're seeing here

1125
00:44:45,599 --> 00:44:48,480
uh is a window of opportunity to throw

1126
00:44:48,480 --> 00:44:50,240
everything we got to detect and

1127
00:44:50,240 --> 00:44:52,640
potentially block these spots from

1128
00:44:52,640 --> 00:44:55,200
code-based defenses to bot detection

1129
00:44:55,200 --> 00:44:57,760
techniques the screen window

1130
00:44:57,760 --> 00:45:00,319
is what we bought we didn't have this

1131
00:45:00,319 --> 00:45:03,040
window before at all when we were

1132
00:45:03,040 --> 00:45:05,440
letting like the bot connect directly to

1133
00:45:05,440 --> 00:45:09,280
the api and now we do

1134
00:45:10,319 --> 00:45:12,560
so now what two minutes to wrap up

1135
00:45:12,560 --> 00:45:14,720
please

1136
00:45:14,720 --> 00:45:16,880
so now

1137
00:45:16,880 --> 00:45:21,359
we have a very small demo um

1138
00:45:21,359 --> 00:45:23,359
so here

1139
00:45:23,359 --> 00:45:24,800
i'll just go

1140
00:45:24,800 --> 00:45:26,079
run through it

1141
00:45:26,079 --> 00:45:28,560
you see the obfuscated code is running

1142
00:45:28,560 --> 00:45:32,440
anti-debugging techniques

1143
00:45:32,480 --> 00:45:34,720
and we need to close and and the code is

1144
00:45:34,720 --> 00:45:36,240
obfuscated you see

1145
00:45:36,240 --> 00:45:40,160
one version of the obfuscated code

1146
00:45:40,319 --> 00:45:43,040
we can still close that and and and use

1147
00:45:43,040 --> 00:45:45,599
the websites

1148
00:45:45,599 --> 00:45:48,720
and i'll jump to the bots controlled

1149
00:45:48,720 --> 00:45:50,079
parts

1150
00:45:50,079 --> 00:45:52,560
so this script is fed the user

1151
00:45:52,560 --> 00:45:54,960
credentials after being captured and a

1152
00:45:54,960 --> 00:45:57,839
two f a valid 2fa

1153
00:45:57,839 --> 00:46:00,560
and we'll be able to see

1154
00:46:00,560 --> 00:46:03,839
these scripts controlling the browser

1155
00:46:03,839 --> 00:46:05,680
so that's what we got we got the

1156
00:46:05,680 --> 00:46:08,160
attacker to uh

1157
00:46:08,160 --> 00:46:11,040
to be cornered into using uh the full

1158
00:46:11,040 --> 00:46:15,040
navigation using a headless browser okay

1159
00:46:15,040 --> 00:46:17,680
so let me fast forward to running the

1160
00:46:17,680 --> 00:46:18,640
bots

1161
00:46:18,640 --> 00:46:22,078
this is pretty quick

1162
00:46:26,480 --> 00:46:29,599
okay you see this is being

1163
00:46:29,599 --> 00:46:31,440
driven by the bots

1164
00:46:31,440 --> 00:46:34,079
now it's opening the settings page

1165
00:46:34,079 --> 00:46:37,040
entering the collected 2fa this is not

1166
00:46:37,040 --> 00:46:39,760
visible for the real user this is all in

1167
00:46:39,760 --> 00:46:42,400
the back controlled by the

1168
00:46:42,400 --> 00:46:43,760
the attacker

1169
00:46:43,760 --> 00:46:48,400
okay and it can successfully attack

1170
00:46:50,079 --> 00:46:52,319
okay but like i said this demo it

1171
00:46:52,319 --> 00:46:54,480
doesn't include any bot defenses or

1172
00:46:54,480 --> 00:46:57,119
additional defense techniques we would

1173
00:46:57,119 --> 00:47:00,230
need to throw all of that in there

1174
00:47:00,230 --> 00:47:01,440
[Music]

1175
00:47:01,440 --> 00:47:03,280
so you remember the slide the second

1176
00:47:03,280 --> 00:47:05,599
goal corresponding to the second axis is

1177
00:47:05,599 --> 00:47:07,359
how much the real website code is

1178
00:47:07,359 --> 00:47:10,160
actually run by the real user

1179
00:47:10,160 --> 00:47:12,720
so why do we want that to cover more

1180
00:47:12,720 --> 00:47:15,359
grounds we can learn about the real user

1181
00:47:15,359 --> 00:47:17,520
device and explore differences to the

1182
00:47:17,520 --> 00:47:20,079
headless browser device

1183
00:47:20,079 --> 00:47:22,480
we can tie security controls to the real

1184
00:47:22,480 --> 00:47:24,559
user device and we can further increase

1185
00:47:24,559 --> 00:47:27,520
the cost and reduce scalability

1186
00:47:27,520 --> 00:47:29,119
so um

1187
00:47:29,119 --> 00:47:32,000
i had an example here that i will skip

1188
00:47:32,000 --> 00:47:35,119
for the sake of time

1189
00:47:35,200 --> 00:47:36,640
it's

1190
00:47:36,640 --> 00:47:38,559
it's an interesting uh

1191
00:47:38,559 --> 00:47:42,160
automated tool to do phishing attacks

1192
00:47:42,160 --> 00:47:45,839
now back to you jazz

1193
00:47:48,160 --> 00:47:50,240
what what is our main takeaway here

1194
00:47:50,240 --> 00:47:51,680
right

1195
00:47:51,680 --> 00:47:54,240
one is that it's a cheap attack to

1196
00:47:54,240 --> 00:47:55,440
implement

1197
00:47:55,440 --> 00:47:57,760
it's challenging to defend against

1198
00:47:57,760 --> 00:48:00,480
we have to target uh

1199
00:48:00,480 --> 00:48:03,440
what pedro has called the attacker's mom

1200
00:48:03,440 --> 00:48:05,280
this is a phrase i was not familiar with

1201
00:48:05,280 --> 00:48:07,359
prior to this presentation we have to

1202
00:48:07,359 --> 00:48:09,440
target their methods their objective and

1203
00:48:09,440 --> 00:48:11,280
their motivation

1204
00:48:11,280 --> 00:48:14,000
uh the

1205
00:48:14,000 --> 00:48:15,839
the the one thing that i want you to

1206
00:48:15,839 --> 00:48:17,440
walk away with

1207
00:48:17,440 --> 00:48:18,319
is

1208
00:48:18,319 --> 00:48:19,680
um

1209
00:48:19,680 --> 00:48:22,240
this is a cheap attack to uh to

1210
00:48:22,240 --> 00:48:24,240
implement and it's challenging to defend

1211
00:48:24,240 --> 00:48:27,040
against we have to target uh

1212
00:48:27,040 --> 00:48:29,920
as i say the the

1213
00:48:29,920 --> 00:48:31,839
um

1214
00:48:31,839 --> 00:48:34,480
the bomb now historically bot writers

1215
00:48:34,480 --> 00:48:36,720
used to use a fake browser it meant that

1216
00:48:36,720 --> 00:48:38,640
they never even interacted with your

1217
00:48:38,640 --> 00:48:41,200
real site and which meant which meant in

1218
00:48:41,200 --> 00:48:43,680
exchange that you had no chance of

1219
00:48:43,680 --> 00:48:46,640
catching them if they never talk to you

1220
00:48:46,640 --> 00:48:48,800
you have no chance of catching them

1221
00:48:48,800 --> 00:48:51,040
if the attacker you know doesn't touch

1222
00:48:51,040 --> 00:48:53,920
your site doesn't touch your code

1223
00:48:53,920 --> 00:48:57,200
how can you find any signal to detect

1224
00:48:57,200 --> 00:49:00,160
them ironically forcing the attacker to

1225
00:49:00,160 --> 00:49:02,640
at least run parts of your real website

1226
00:49:02,640 --> 00:49:04,640
actually gives the defender a filing

1227
00:49:04,640 --> 00:49:07,040
charge i'm not arguing yet

1228
00:49:07,040 --> 00:49:10,400
that it is enough but it is enough to

1229
00:49:10,400 --> 00:49:12,240
give you something

1230
00:49:12,240 --> 00:49:15,119
ott and code protection the use of code

1231
00:49:15,119 --> 00:49:17,680
obfuscation mixing the defender's code

1232
00:49:17,680 --> 00:49:19,599
with a real website code in a way that

1233
00:49:19,599 --> 00:49:22,160
can't be easily separated forces the

1234
00:49:22,160 --> 00:49:24,800
attacker to run our code now this may

1235
00:49:24,800 --> 00:49:27,280
sound like a paradox but a headless

1236
00:49:27,280 --> 00:49:30,319
browser running the real website gives

1237
00:49:30,319 --> 00:49:33,760
us a chance of stopping this bot

1238
00:49:33,760 --> 00:49:35,520
what we have argued here is that

1239
00:49:35,520 --> 00:49:37,520
mitigation is possible we can make the

1240
00:49:37,520 --> 00:49:39,359
attack impractical

1241
00:49:39,359 --> 00:49:42,400
by going after it by going after the

1242
00:49:42,400 --> 00:49:44,480
attacker's mom we make detection and

1243
00:49:44,480 --> 00:49:46,880
blocking efficient

1244
00:49:46,880 --> 00:49:48,800
force the attacker to bring the attack

1245
00:49:48,800 --> 00:49:51,440
to a landscape we control the browser

1246
00:49:51,440 --> 00:49:54,240
and make reverse engineering hard

1247
00:49:54,240 --> 00:49:57,599
if we do all of the above things

1248
00:49:57,599 --> 00:49:58,720
then

1249
00:49:58,720 --> 00:50:01,440
and then only is this fishing bot

1250
00:50:01,440 --> 00:50:04,319
problem a problem that we have argued is

1251
00:50:04,319 --> 00:50:07,440
a big and growing problem

1252
00:50:07,440 --> 00:50:12,480
is possible to be tackled thank you

1253
00:50:12,480 --> 00:50:16,319
we're happy to take questions

