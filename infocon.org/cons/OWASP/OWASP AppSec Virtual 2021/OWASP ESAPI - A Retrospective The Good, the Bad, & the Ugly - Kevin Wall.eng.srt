1
00:00:01,420 --> 00:00:05,630
[Music]

2
00:00:05,759 --> 00:00:07,919
um

3
00:00:07,919 --> 00:00:11,200
welcome to my talk on esappy um

4
00:00:11,200 --> 00:00:13,840
i will advise you that this is an

5
00:00:13,840 --> 00:00:15,599
extended uh

6
00:00:15,599 --> 00:00:17,359
version of the talk that i gave at the

7
00:00:17,359 --> 00:00:19,359
20th anniversary presentation back in

8
00:00:19,359 --> 00:00:20,720
september so

9
00:00:20,720 --> 00:00:22,800
if you already been to that and there

10
00:00:22,800 --> 00:00:24,400
was another talk you were interested in

11
00:00:24,400 --> 00:00:26,480
you might want to slide sideways to one

12
00:00:26,480 --> 00:00:27,920
of those other talks i'm not trying to

13
00:00:27,920 --> 00:00:30,080
discourage you from listening but you

14
00:00:30,080 --> 00:00:32,000
know just fair warning

15
00:00:32,000 --> 00:00:34,160
um

16
00:00:34,160 --> 00:00:36,000
all right so

17
00:00:36,000 --> 00:00:37,040
first thing

18
00:00:37,040 --> 00:00:38,719
before anyone gets the urge to take

19
00:00:38,719 --> 00:00:40,960
copious notes i want to let you know

20
00:00:40,960 --> 00:00:42,960
that i'm gonna you know just take a

21
00:00:42,960 --> 00:00:45,520
screenshot of this and basically give

22
00:00:45,520 --> 00:00:47,600
you all the important stuff to remember

23
00:00:47,600 --> 00:00:49,920
um and then sit back and relax with your

24
00:00:49,920 --> 00:00:51,920
favorite beverage um because i'm going

25
00:00:51,920 --> 00:00:55,760
to upload the slides on my github

26
00:00:55,760 --> 00:00:58,399
and um

27
00:00:58,399 --> 00:01:01,039
uh let's see um also

28
00:01:01,039 --> 00:01:02,079
uh

29
00:01:02,079 --> 00:01:03,280
i am

30
00:01:03,280 --> 00:01:04,959
going to you know

31
00:01:04,959 --> 00:01:06,960
charles mentioned hoova in the q a

32
00:01:06,960 --> 00:01:09,840
section i will promise that i will

33
00:01:09,840 --> 00:01:12,320
write answers to anyone's that i do not

34
00:01:12,320 --> 00:01:14,640
have time to reply to during this

35
00:01:14,640 --> 00:01:16,320
presentation so

36
00:01:16,320 --> 00:01:18,880
um or you can also contact me

37
00:01:18,880 --> 00:01:21,759
at the email listed here or dm me

38
00:01:21,759 --> 00:01:23,200
on uh

39
00:01:23,200 --> 00:01:27,479
slack or on twit or on twitter

40
00:01:28,159 --> 00:01:30,400
um

41
00:01:31,280 --> 00:01:32,799
so first of all basically you know

42
00:01:32,799 --> 00:01:34,079
you're looking at this slide and you're

43
00:01:34,079 --> 00:01:36,479
like well duh thank you captain obvious

44
00:01:36,479 --> 00:01:39,360
right um let me say that i did

45
00:01:39,360 --> 00:01:41,200
development for

46
00:01:41,200 --> 00:01:42,479
you know

47
00:01:42,479 --> 00:01:44,880
or either exclusive development or a mix

48
00:01:44,880 --> 00:01:47,439
of development and um

49
00:01:47,439 --> 00:01:49,280
and appsec for

50
00:01:49,280 --> 00:01:51,920
30 years and before i realized all the

51
00:01:51,920 --> 00:01:53,360
nuances that were involved here

52
00:01:53,360 --> 00:01:55,680
especially in that first bullet item

53
00:01:55,680 --> 00:01:57,360
all right and um

54
00:01:57,360 --> 00:02:00,960
so i want hopefully you'll bear with me

55
00:02:00,960 --> 00:02:02,880
and realize that there are some unique

56
00:02:02,880 --> 00:02:04,560
uh challenges

57
00:02:04,560 --> 00:02:06,799
that maybe are not quite completely

58
00:02:06,799 --> 00:02:08,560
obvious to everyone

59
00:02:08,560 --> 00:02:10,800
especially if most of your development

60
00:02:10,800 --> 00:02:15,280
practices were doing product development

61
00:02:17,680 --> 00:02:18,800
all right so

62
00:02:18,800 --> 00:02:21,200
before i go into too much detail you

63
00:02:21,200 --> 00:02:23,599
know i want to what you know should you

64
00:02:23,599 --> 00:02:25,520
really listen to me about this

65
00:02:25,520 --> 00:02:27,840
um well i didn't say these are you know

66
00:02:27,840 --> 00:02:30,160
this is only my opinion not anybody else

67
00:02:30,160 --> 00:02:32,959
in the oaas foundation not anybody else

68
00:02:32,959 --> 00:02:35,760
uh that's contributed to esappy and make

69
00:02:35,760 --> 00:02:37,840
that clear not not my employers current

70
00:02:37,840 --> 00:02:39,840
or former right but

71
00:02:39,840 --> 00:02:42,239
i have had like charles said in the

72
00:02:42,239 --> 00:02:44,080
introduction 20 years of systems

73
00:02:44,080 --> 00:02:45,840
programming and 20 years of appsec

74
00:02:45,840 --> 00:02:48,000
development including

75
00:02:48,000 --> 00:02:50,080
developing several proprietary systems

76
00:02:50,080 --> 00:02:52,000
libraries including one that was very

77
00:02:52,000 --> 00:02:53,599
specific

78
00:02:53,599 --> 00:02:56,000
almost to absec very very similar

79
00:02:56,000 --> 00:02:57,840
actually uh to esappy and that's one of

80
00:02:57,840 --> 00:03:01,120
the reasons that i joined dsapd in 2009

81
00:03:01,120 --> 00:03:02,000
um

82
00:03:02,000 --> 00:03:04,640
and esappy dates back maybe about two

83
00:03:04,640 --> 00:03:06,400
years earlier at least as far as i could

84
00:03:06,400 --> 00:03:08,400
tell uh you know going back into the

85
00:03:08,400 --> 00:03:10,879
mailing list archives right and then i

86
00:03:10,879 --> 00:03:12,800
was like um

87
00:03:12,800 --> 00:03:16,400
volunteered to be the co-lead in 2011.

88
00:03:16,400 --> 00:03:18,400
and the other thing is lastly i promise

89
00:03:18,400 --> 00:03:20,640
that this is a buzzword free talk all

90
00:03:20,640 --> 00:03:21,680
right i'm not going to mention

91
00:03:21,680 --> 00:03:23,519
blockchain or ai or quantum computing

92
00:03:23,519 --> 00:03:25,040
and i'm especially not going to promise

93
00:03:25,040 --> 00:03:26,560
i'm especially going to promise not to

94
00:03:26,560 --> 00:03:29,200
discuss quantum ai blockchain technology

95
00:03:29,200 --> 00:03:31,200
which i'm sure someone is claiming to

96
00:03:31,200 --> 00:03:34,239
develop um i'm just mentioning these um

97
00:03:34,239 --> 00:03:35,760
basically to help you fill in your

98
00:03:35,760 --> 00:03:38,959
buzzword bingo cards

99
00:03:39,840 --> 00:03:41,120
all right so

100
00:03:41,120 --> 00:03:42,799
the approach that i'm taking with this

101
00:03:42,799 --> 00:03:44,799
talk is that i'm going to discover that

102
00:03:44,799 --> 00:03:46,720
i'm going to discuss like three

103
00:03:46,720 --> 00:03:49,200
overall perspectives about process about

104
00:03:49,200 --> 00:03:50,799
people and the technical or

105
00:03:50,799 --> 00:03:53,599
architectural aspects of it and then for

106
00:03:53,599 --> 00:03:54,959
each of those perspectives it's going to

107
00:03:54,959 --> 00:03:57,280
have four sections an overview

108
00:03:57,280 --> 00:03:59,280
like that basically briefly describes

109
00:03:59,280 --> 00:04:00,239
what that

110
00:04:00,239 --> 00:04:02,480
perspective is about uh and then the

111
00:04:02,480 --> 00:04:04,000
good what what

112
00:04:04,000 --> 00:04:05,920
what was done right and the bad what was

113
00:04:05,920 --> 00:04:08,000
done wrong and then the ugly is kind of

114
00:04:08,000 --> 00:04:08,959
like

115
00:04:08,959 --> 00:04:10,879
neither really good or bad but they were

116
00:04:10,879 --> 00:04:12,879
kind of ugly hacks that worked

117
00:04:12,879 --> 00:04:14,560
that probably could be improved at some

118
00:04:14,560 --> 00:04:16,238
point

119
00:04:16,238 --> 00:04:18,079
or at least they're not elegant things

120
00:04:18,079 --> 00:04:19,040
right

121
00:04:19,040 --> 00:04:21,519
all right so

122
00:04:21,600 --> 00:04:23,040
um

123
00:04:23,040 --> 00:04:24,880
from the process perspective the

124
00:04:24,880 --> 00:04:28,520
overview um

125
00:04:29,199 --> 00:04:31,600
let's get yeah um

126
00:04:31,600 --> 00:04:33,680
so libraries and applications are

127
00:04:33,680 --> 00:04:35,120
different they're different in design

128
00:04:35,120 --> 00:04:37,680
right you don't design libraries the

129
00:04:37,680 --> 00:04:38,720
same way

130
00:04:38,720 --> 00:04:41,040
libraries are extensible applications

131
00:04:41,040 --> 00:04:43,840
generally or not uh testing is different

132
00:04:43,840 --> 00:04:45,199
as well right

133
00:04:45,199 --> 00:04:47,759
you might use like something like uh

134
00:04:47,759 --> 00:04:50,160
you know the unit testing is a similar

135
00:04:50,160 --> 00:04:52,320
but like you don't have like end user

136
00:04:52,320 --> 00:04:54,080
testing and stuff like that those

137
00:04:54,080 --> 00:04:57,120
aspects are completely different

138
00:04:57,120 --> 00:04:59,520
penetration testing if you wanted to do

139
00:04:59,520 --> 00:05:01,360
it would be different

140
00:05:01,360 --> 00:05:03,680
right you don't have anything to pen

141
00:05:03,680 --> 00:05:05,360
test necessarily especially if you just

142
00:05:05,360 --> 00:05:07,120
have flick interfaces and i'm going to

143
00:05:07,120 --> 00:05:08,880
extensively talk on that the

144
00:05:08,880 --> 00:05:10,960
documentation is different it ha it

145
00:05:10,960 --> 00:05:12,320
addresses a completely different

146
00:05:12,320 --> 00:05:14,320
audience instead of an end user it's

147
00:05:14,320 --> 00:05:15,600
going to be

148
00:05:15,600 --> 00:05:18,080
addressing a developer

149
00:05:18,080 --> 00:05:20,479
uh of some sort right

150
00:05:20,479 --> 00:05:22,400
the other thing is you have a much

151
00:05:22,400 --> 00:05:24,639
higher chance of client lock-in when

152
00:05:24,639 --> 00:05:26,240
somebody invests

153
00:05:26,240 --> 00:05:29,039
you know to using your code and

154
00:05:29,039 --> 00:05:31,680
uses it all over their millions of lines

155
00:05:31,680 --> 00:05:33,440
of code especially something like esappy

156
00:05:33,440 --> 00:05:36,400
where you got like maybe you have jsps

157
00:05:36,400 --> 00:05:37,600
right and you're using the output

158
00:05:37,600 --> 00:05:38,639
encoder

159
00:05:38,639 --> 00:05:40,080
um

160
00:05:40,080 --> 00:05:41,600
all over the place to prevent cross-site

161
00:05:41,600 --> 00:05:43,840
scripting right and you got a couple

162
00:05:43,840 --> 00:05:45,840
thousand of those it's really

163
00:05:45,840 --> 00:05:47,440
tough to like

164
00:05:47,440 --> 00:05:49,039
say if you want to change the interface

165
00:05:49,039 --> 00:05:51,039
oh we made a mistake we gotta switch the

166
00:05:51,039 --> 00:05:52,880
order of these arguments or do something

167
00:05:52,880 --> 00:05:54,639
right that's not gonna not gonna fly

168
00:05:54,639 --> 00:05:55,440
well

169
00:05:55,440 --> 00:05:56,960
all right

170
00:05:56,960 --> 00:05:58,080
uh

171
00:05:58,080 --> 00:05:59,759
security

172
00:05:59,759 --> 00:06:02,160
libraries versus other libraries not

173
00:06:02,160 --> 00:06:03,919
eating our own dog food

174
00:06:03,919 --> 00:06:07,680
and processes of uh effects of later uh

175
00:06:07,680 --> 00:06:10,160
effects of later process change the

176
00:06:10,160 --> 00:06:12,160
other things i wanted to mention

177
00:06:12,160 --> 00:06:13,919
um

178
00:06:13,919 --> 00:06:15,120
so i'm going to go into some of these

179
00:06:15,120 --> 00:06:16,800
others in detail

180
00:06:16,800 --> 00:06:19,360
all right so

181
00:06:19,680 --> 00:06:21,840
so

182
00:06:22,080 --> 00:06:24,800
so yes so things the good thing is that

183
00:06:24,800 --> 00:06:26,639
things started out small

184
00:06:26,639 --> 00:06:29,039
they had very simple expectations

185
00:06:29,039 --> 00:06:30,240
um

186
00:06:30,240 --> 00:06:31,759
you know they started basically as

187
00:06:31,759 --> 00:06:32,960
interfaces

188
00:06:32,960 --> 00:06:35,199
and original vision in fact was

189
00:06:35,199 --> 00:06:36,880
basically only provide

190
00:06:36,880 --> 00:06:38,080
interfaces

191
00:06:38,080 --> 00:06:40,160
of course the problem is how do you test

192
00:06:40,160 --> 00:06:41,840
an interface well you have to have some

193
00:06:41,840 --> 00:06:45,199
kind of executable code at least to do

194
00:06:45,199 --> 00:06:46,880
you know unit testing

195
00:06:46,880 --> 00:06:49,280
and you kind of have to play around with

196
00:06:49,280 --> 00:06:51,919
the interfaces in some way right to see

197
00:06:51,919 --> 00:06:54,000
are these right interfaces to provide

198
00:06:54,000 --> 00:06:56,479
and are we exposing the right things or

199
00:06:56,479 --> 00:06:58,960
do we need to provide other interfaces

200
00:06:58,960 --> 00:07:02,160
and things like that so

201
00:07:02,160 --> 00:07:04,000
in order to do that they created a

202
00:07:04,000 --> 00:07:07,120
reference model and that reference model

203
00:07:07,120 --> 00:07:10,240
um got bundled with the interfaces which

204
00:07:10,240 --> 00:07:12,160
in hindsight was probably a poor idea

205
00:07:12,160 --> 00:07:16,520
but you know it happened

206
00:07:16,560 --> 00:07:17,599
so

207
00:07:17,599 --> 00:07:20,479
um the bad in the process well

208
00:07:20,479 --> 00:07:22,240
um i'm going to talk about these

209
00:07:22,240 --> 00:07:23,919
individual bullets

210
00:07:23,919 --> 00:07:26,400
uh later on right in the next couple

211
00:07:26,400 --> 00:07:27,840
slides here so

212
00:07:27,840 --> 00:07:31,840
i won't belabor this one

213
00:07:32,000 --> 00:07:33,520
but like

214
00:07:33,520 --> 00:07:35,840
the the release migration did we have

215
00:07:35,840 --> 00:07:38,160
enough feedback to do the one dot

216
00:07:38,160 --> 00:07:39,039
uh

217
00:07:39,039 --> 00:07:40,880
from one dot one

218
00:07:40,880 --> 00:07:42,800
one or actually 1.4 i think it was the

219
00:07:42,800 --> 00:07:45,280
latest one.x's release did we have

220
00:07:45,280 --> 00:07:47,280
enough feedback from users of that

221
00:07:47,280 --> 00:07:48,960
library

222
00:07:48,960 --> 00:07:50,479
i'm not sure that we actually left

223
00:07:50,479 --> 00:07:51,360
enough

224
00:07:51,360 --> 00:07:54,479
time between the release cycles

225
00:07:54,479 --> 00:07:55,919
but

226
00:07:55,919 --> 00:07:57,360
one of the things you can't use like

227
00:07:57,360 --> 00:07:58,639
libraries

228
00:07:58,639 --> 00:08:00,319
just out of the box you need to write

229
00:08:00,319 --> 00:08:02,639
code to give a feedback it's not like so

230
00:08:02,639 --> 00:08:05,199
it's hard to like you know you do have

231
00:08:05,199 --> 00:08:08,240
we did like release candidates but i

232
00:08:08,240 --> 00:08:10,240
don't you know i think the number of

233
00:08:10,240 --> 00:08:11,680
people using the release canvas was

234
00:08:11,680 --> 00:08:13,199
really really small

235
00:08:13,199 --> 00:08:15,440
um

236
00:08:15,919 --> 00:08:16,879
so

237
00:08:16,879 --> 00:08:19,680
the other thing is going from one uh

238
00:08:19,680 --> 00:08:21,840
release you know the one question that

239
00:08:21,840 --> 00:08:23,440
should have been asked is like why he's

240
00:08:23,440 --> 00:08:26,160
gonna release 2.x because one of the

241
00:08:26,160 --> 00:08:28,960
major reasons of make a major jump in

242
00:08:28,960 --> 00:08:31,039
the semantic versioning is that you

243
00:08:31,039 --> 00:08:33,279
decide that these release these previous

244
00:08:33,279 --> 00:08:35,279
interfaces are not correct and we want

245
00:08:35,279 --> 00:08:37,519
to deprecate them and you know that's

246
00:08:37,519 --> 00:08:39,839
what basically a major change means on a

247
00:08:39,839 --> 00:08:41,919
major number right

248
00:08:41,919 --> 00:08:42,880
um

249
00:08:42,880 --> 00:08:44,640
so you can basically decide that we're

250
00:08:44,640 --> 00:08:46,240
going to change the interfaces only we

251
00:08:46,240 --> 00:08:48,320
didn't or at least not most of them

252
00:08:48,320 --> 00:08:50,720
right and that included even the broken

253
00:08:50,720 --> 00:08:52,880
cryptography that i took over

254
00:08:52,880 --> 00:08:56,160
right so we tried um

255
00:08:56,160 --> 00:08:59,200
to keep the old uh 1.4 encrypter

256
00:08:59,200 --> 00:09:01,760
interfaces and just add new ones that

257
00:09:01,760 --> 00:09:04,000
were correct on top of that although i

258
00:09:04,000 --> 00:09:06,160
did deprecate the old ones and put in

259
00:09:06,160 --> 00:09:07,600
clear warnings these are not safe and

260
00:09:07,600 --> 00:09:08,880
don't use them

261
00:09:08,880 --> 00:09:10,480
but you know they think oh people have

262
00:09:10,480 --> 00:09:12,080
legacy code and they have encrypted

263
00:09:12,080 --> 00:09:13,200
stuff and

264
00:09:13,200 --> 00:09:15,680
um so we got to keep them so like okay

265
00:09:15,680 --> 00:09:17,920
and you know

266
00:09:17,920 --> 00:09:20,399
uh shocker it's like uh that actually

267
00:09:20,399 --> 00:09:22,320
was largely responsible for one of the

268
00:09:22,320 --> 00:09:24,720
two cves that were later discovered

269
00:09:24,720 --> 00:09:29,040
shortly after we released 2.0 release so

270
00:09:29,230 --> 00:09:32,350
[Music]

271
00:09:33,360 --> 00:09:34,240
um

272
00:09:34,240 --> 00:09:36,240
so the other thing was this is what i

273
00:09:36,240 --> 00:09:38,640
meant when i said we're ignoring um or

274
00:09:38,640 --> 00:09:40,480
eating or not eating our own dog food

275
00:09:40,480 --> 00:09:41,680
right

276
00:09:41,680 --> 00:09:44,080
uh this could be perceived as kind of a

277
00:09:44,080 --> 00:09:47,040
do as i say not as i do thing right but

278
00:09:47,040 --> 00:09:49,600
you know we always typically as appsec

279
00:09:49,600 --> 00:09:50,720
engineers

280
00:09:50,720 --> 00:09:52,560
at least i do i don't know maybe the

281
00:09:52,560 --> 00:09:54,560
rest of you don't but i'm like i asked

282
00:09:54,560 --> 00:09:55,760
people like well what's your threat

283
00:09:55,760 --> 00:09:57,200
model and what are you trying to you

284
00:09:57,200 --> 00:09:59,680
know prevent here what are your

285
00:09:59,680 --> 00:10:01,440
what's your attack factors and things

286
00:10:01,440 --> 00:10:04,480
right or earth state well are you doing

287
00:10:04,480 --> 00:10:07,360
you know regular security code reviews

288
00:10:07,360 --> 00:10:09,519
or you know you tell the

289
00:10:09,519 --> 00:10:12,000
testers uh to tell developers that you

290
00:10:12,000 --> 00:10:13,760
know your unit tests should include more

291
00:10:13,760 --> 00:10:15,920
than just a sunny day path

292
00:10:15,920 --> 00:10:17,680
and you should keep your dependencies up

293
00:10:17,680 --> 00:10:20,640
today and we didn't do a lot of those

294
00:10:20,640 --> 00:10:22,640
things at least on a regular consistent

295
00:10:22,640 --> 00:10:26,079
basis i mean we are much better now

296
00:10:26,079 --> 00:10:29,200
uh you know uh in the last couple years

297
00:10:29,200 --> 00:10:32,079
um we added like roughly like a thousand

298
00:10:32,079 --> 00:10:35,040
unit tests and stuff to bring the

299
00:10:35,040 --> 00:10:36,640
coverage up

300
00:10:36,640 --> 00:10:37,920
significantly

301
00:10:37,920 --> 00:10:39,839
um

302
00:10:39,839 --> 00:10:42,720
but uh you know and in fact the first

303
00:10:42,720 --> 00:10:45,279
unit test wasn't until i mean the first

304
00:10:45,279 --> 00:10:47,200
code review wasn't until

305
00:10:47,200 --> 00:10:50,240
um nsa did the code review for us

306
00:10:50,240 --> 00:10:54,240
and i will speak more to that later

307
00:10:56,480 --> 00:10:57,920
all right so

308
00:10:57,920 --> 00:10:59,120
this is kind of

309
00:10:59,120 --> 00:11:01,519
contrary in a way that it seems it's not

310
00:11:01,519 --> 00:11:03,839
maybe obvious but like

311
00:11:03,839 --> 00:11:05,600
how is it you know bad to have early

312
00:11:05,600 --> 00:11:07,920
success well in this case

313
00:11:07,920 --> 00:11:09,760
the encoder and the validator became

314
00:11:09,760 --> 00:11:11,519
really popular and they dominated a lot

315
00:11:11,519 --> 00:11:13,279
of the requests and questions in the

316
00:11:13,279 --> 00:11:16,480
mailing list in fact parts those parts

317
00:11:16,480 --> 00:11:19,600
of vsafb became so popular that like the

318
00:11:19,600 --> 00:11:22,480
encoder for instance was

319
00:11:22,480 --> 00:11:24,079
excuse me

320
00:11:24,079 --> 00:11:27,279
was recognized as a mitigating defense

321
00:11:27,279 --> 00:11:30,560
in some sas tools like uh fortify and

322
00:11:30,560 --> 00:11:31,760
varicode

323
00:11:31,760 --> 00:11:32,959
right

324
00:11:32,959 --> 00:11:35,680
but that diverted the attention away

325
00:11:35,680 --> 00:11:36,480
from

326
00:11:36,480 --> 00:11:38,560
the things that i mean to me like if

327
00:11:38,560 --> 00:11:40,160
we're gonna put out a reference model

328
00:11:40,160 --> 00:11:41,680
you can't just have like some that are

329
00:11:41,680 --> 00:11:44,000
really like enterprise ready and others

330
00:11:44,000 --> 00:11:46,320
that are just like toy implementations

331
00:11:46,320 --> 00:11:49,200
and unfortunately a lot of the stuff

332
00:11:49,200 --> 00:11:51,519
that really would have made

333
00:11:51,519 --> 00:11:52,399
um

334
00:11:52,399 --> 00:11:54,800
ethappe really really usable is like the

335
00:11:54,800 --> 00:11:56,320
authenticator and the access controller

336
00:11:56,320 --> 00:11:58,480
for instance um only had toy

337
00:11:58,480 --> 00:11:59,680
implementations and by toy

338
00:11:59,680 --> 00:12:01,440
implementations i meant not that they

339
00:12:01,440 --> 00:12:03,360
didn't work but they didn't scale to

340
00:12:03,360 --> 00:12:05,440
enterprise levels because they were

341
00:12:05,440 --> 00:12:08,160
based on like flat files

342
00:12:08,160 --> 00:12:10,959
and you know you're not gonna add

343
00:12:10,959 --> 00:12:13,440
uh you know a million users to a flat

344
00:12:13,440 --> 00:12:14,560
file but if they would have done like

345
00:12:14,560 --> 00:12:16,000
something like ldap or something right

346
00:12:16,000 --> 00:12:18,639
they could have scaled it

347
00:12:18,639 --> 00:12:20,959
in fact that still hasn't changed right

348
00:12:20,959 --> 00:12:23,959
so

349
00:12:33,360 --> 00:12:34,800
all right um

350
00:12:34,800 --> 00:12:36,839
the other thing is that there's a little

351
00:12:36,839 --> 00:12:38,959
consideration given

352
00:12:38,959 --> 00:12:40,720
that the library development differs

353
00:12:40,720 --> 00:12:42,959
from application development right one

354
00:12:42,959 --> 00:12:45,279
of the things that agile basically

355
00:12:45,279 --> 00:12:47,440
emphasizes is the constant refactoring

356
00:12:47,440 --> 00:12:49,600
right and you can do that

357
00:12:49,600 --> 00:12:50,800
if you're

358
00:12:50,800 --> 00:12:55,040
if your end users happen to be humans

359
00:12:55,040 --> 00:12:57,440
when your end users happen to be code

360
00:12:57,440 --> 00:12:58,399
right

361
00:12:58,399 --> 00:13:00,480
that's a little harder to do

362
00:13:00,480 --> 00:13:01,519
because

363
00:13:01,519 --> 00:13:03,839
humans have invested time in

364
00:13:03,839 --> 00:13:05,279
making that code

365
00:13:05,279 --> 00:13:07,519
their application that's using your

366
00:13:07,519 --> 00:13:08,639
library

367
00:13:08,639 --> 00:13:10,639
and if you start changing interfaces

368
00:13:10,639 --> 00:13:12,639
you're going to break client code

369
00:13:12,639 --> 00:13:13,600
right

370
00:13:13,600 --> 00:13:15,760
so that is a big problem and you just

371
00:13:15,760 --> 00:13:18,160
cannot refactor the interfaces you can

372
00:13:18,160 --> 00:13:21,200
sort of interface refactor

373
00:13:21,200 --> 00:13:22,959
you know some of the other public

374
00:13:22,959 --> 00:13:25,518
classes

375
00:13:26,000 --> 00:13:28,720
but part of the problem was that we

376
00:13:28,720 --> 00:13:30,720
found that there were people using like

377
00:13:30,720 --> 00:13:32,160
some of the

378
00:13:32,160 --> 00:13:33,519
classes

379
00:13:33,519 --> 00:13:35,600
but not through the interfaces

380
00:13:35,600 --> 00:13:38,720
and in fact they were doing that in some

381
00:13:38,720 --> 00:13:41,120
places where esappy was calling

382
00:13:41,120 --> 00:13:43,040
things like that and caused us problems

383
00:13:43,040 --> 00:13:44,639
we had to rewrite things

384
00:13:44,639 --> 00:13:46,079
um

385
00:13:46,079 --> 00:13:48,320
i think it's it's you know bad because

386
00:13:48,320 --> 00:13:50,880
this was before uh java 8 and and java

387
00:13:50,880 --> 00:13:52,800
modules came out so it was kind of

388
00:13:52,800 --> 00:13:54,800
difficult to restrict that

389
00:13:54,800 --> 00:13:57,120
um but that was kind of an ugly thing

390
00:13:57,120 --> 00:13:58,639
that we just kind of relied on and

391
00:13:58,639 --> 00:14:00,320
crossed our fingers that that you know

392
00:14:00,320 --> 00:14:03,120
people wouldn't do that too much

393
00:14:03,120 --> 00:14:04,480
the other thing is like how do you

394
00:14:04,480 --> 00:14:06,959
security test the security library right

395
00:14:06,959 --> 00:14:10,000
so unlike say something like a rust api

396
00:14:10,000 --> 00:14:12,480
one cannot simply do like general

397
00:14:12,480 --> 00:14:14,800
fuzzing of an sdk

398
00:14:14,800 --> 00:14:17,360
on interfaces because the strong typing

399
00:14:17,360 --> 00:14:19,279
in java really makes that difficult

400
00:14:19,279 --> 00:14:21,279
right so if you want to basically say

401
00:14:21,279 --> 00:14:23,920
well there's this is supposed to be us

402
00:14:23,920 --> 00:14:26,320
integer if i change it to a string what

403
00:14:26,320 --> 00:14:28,720
happens or if i j right i mean just it

404
00:14:28,720 --> 00:14:31,440
just blows up right so i mean it's like

405
00:14:31,440 --> 00:14:32,959
that wouldn't even compile all right so

406
00:14:32,959 --> 00:14:35,360
you you just can't really test that way

407
00:14:35,360 --> 00:14:37,600
um

408
00:14:39,199 --> 00:14:41,519
and and you can't test interfaces alone

409
00:14:41,519 --> 00:14:43,360
as i said because you know you have no

410
00:14:43,360 --> 00:14:46,320
executable code to test

411
00:14:46,320 --> 00:14:47,839
all right so jumping to the people

412
00:14:47,839 --> 00:14:50,800
perspective right how the people this is

413
00:14:50,800 --> 00:14:52,800
about how the people involved with

414
00:14:52,800 --> 00:14:55,120
esappy affected the process

415
00:14:55,120 --> 00:14:56,880
and the product itself

416
00:14:56,880 --> 00:14:59,120
and then the succession of leadership in

417
00:14:59,120 --> 00:15:00,800
particular

418
00:15:00,800 --> 00:15:03,760
and i cannot again present you with a

419
00:15:03,760 --> 00:15:05,120
complete perspective of this since i

420
00:15:05,120 --> 00:15:07,199
didn't join ease happy until as charles

421
00:15:07,199 --> 00:15:10,399
mentioned in june 2000 2009

422
00:15:10,399 --> 00:15:11,600
and um

423
00:15:11,600 --> 00:15:13,600
and even for that first year i was

424
00:15:13,600 --> 00:15:15,760
almost solely focused you know heads

425
00:15:15,760 --> 00:15:18,639
down on on the cryptography aspects and

426
00:15:18,639 --> 00:15:21,680
and trying to fix that

427
00:15:24,480 --> 00:15:27,360
so the good and i think

428
00:15:27,360 --> 00:15:28,639
i'm not going to be able to mention all

429
00:15:28,639 --> 00:15:31,199
people right but we had great leadership

430
00:15:31,199 --> 00:15:34,240
and first jeff williams then jim maniko

431
00:15:34,240 --> 00:15:36,560
that insured kept it running smoothly

432
00:15:36,560 --> 00:15:38,560
and kept everybody happy more or less

433
00:15:38,560 --> 00:15:39,360
and

434
00:15:39,360 --> 00:15:41,920
and we had a bunch of contributors i

435
00:15:41,920 --> 00:15:43,680
mean probably had a dozen contributors

436
00:15:43,680 --> 00:15:45,120
when i started

437
00:15:45,120 --> 00:15:48,880
um you know people like uh dave wickers

438
00:15:48,880 --> 00:15:49,680
and

439
00:15:49,680 --> 00:15:51,920
our sean and and

440
00:15:51,920 --> 00:15:54,000
mike boberski in

441
00:15:54,000 --> 00:15:54,800
uh

442
00:15:54,800 --> 00:15:56,959
august and i don't i mean i can't

443
00:15:56,959 --> 00:15:58,959
remember everybody's name i'm sure

444
00:15:58,959 --> 00:16:00,639
and i'm not trying to slide anybody but

445
00:16:00,639 --> 00:16:01,440
just

446
00:16:01,440 --> 00:16:03,040
you know i should have brought a

447
00:16:03,040 --> 00:16:07,199
contributors list with me to put up here

448
00:16:07,519 --> 00:16:08,639
but

449
00:16:08,639 --> 00:16:10,480
so that was a good thing right um we

450
00:16:10,480 --> 00:16:13,120
also had a lot of initial enthusiasm

451
00:16:13,120 --> 00:16:15,519
up through the 2.0 uh general

452
00:16:15,519 --> 00:16:17,680
availability release

453
00:16:17,680 --> 00:16:19,440
uh

454
00:16:19,440 --> 00:16:21,759
and we did like several it was a very

455
00:16:21,759 --> 00:16:24,399
long drawn out process for that 2.0

456
00:16:24,399 --> 00:16:25,839
release

457
00:16:25,839 --> 00:16:27,199
because we

458
00:16:27,199 --> 00:16:29,759
did i think about six or seven release

459
00:16:29,759 --> 00:16:31,839
candidates

460
00:16:31,839 --> 00:16:34,160
um

461
00:16:34,639 --> 00:16:36,399
but there were and the other thing that

462
00:16:36,399 --> 00:16:39,519
was really a positive was that um it

463
00:16:39,519 --> 00:16:41,600
wasn't like people were fighting you

464
00:16:41,600 --> 00:16:43,519
know on twitter and arguing on twitter

465
00:16:43,519 --> 00:16:45,279
and public and stuff we did have a

466
00:16:45,279 --> 00:16:47,839
public uh mailing list

467
00:16:47,839 --> 00:16:50,399
that was not moderated but

468
00:16:50,399 --> 00:16:52,560
the technical disagreements i felt were

469
00:16:52,560 --> 00:16:54,480
handled very professionally and

470
00:16:54,480 --> 00:16:57,279
transparently and civilly right so i

471
00:16:57,279 --> 00:17:00,880
think those are all very good things

472
00:17:02,800 --> 00:17:05,199
so what was the bad well

473
00:17:05,199 --> 00:17:06,240
i think

474
00:17:06,240 --> 00:17:08,319
one of the things is that the leaders

475
00:17:08,319 --> 00:17:10,160
who passed on

476
00:17:10,160 --> 00:17:11,359
succession

477
00:17:11,359 --> 00:17:14,720
to at least myself i mean both of these

478
00:17:14,720 --> 00:17:17,119
bullet points these sub bullet points

479
00:17:17,119 --> 00:17:18,799
would apply to me i'm not going to speak

480
00:17:18,799 --> 00:17:22,400
for chris schmidt i think he did fine um

481
00:17:22,400 --> 00:17:23,439
but

482
00:17:23,439 --> 00:17:26,240
i think that like jim manico who passed

483
00:17:26,240 --> 00:17:30,319
on the torch to the two of us

484
00:17:30,840 --> 00:17:34,240
didn't excuse me take into consideration

485
00:17:34,240 --> 00:17:35,760
the good technical leaders in the

486
00:17:35,760 --> 00:17:37,760
business world and not necessarily

487
00:17:37,760 --> 00:17:40,559
translate to

488
00:17:40,559 --> 00:17:43,280
uh the foss world because

489
00:17:43,280 --> 00:17:45,120
like in the business world i can tell

490
00:17:45,120 --> 00:17:47,760
somebody to do this by a specific date

491
00:17:47,760 --> 00:17:50,960
right if they don't do it then i can go

492
00:17:50,960 --> 00:17:52,720
speak to their manager

493
00:17:52,720 --> 00:17:54,240
um you know

494
00:17:54,240 --> 00:17:56,480
if i don't get cooperation here in the

495
00:17:56,480 --> 00:17:58,400
foss world right everybody's doing this

496
00:17:58,400 --> 00:18:01,280
as a volunteer and they also have family

497
00:18:01,280 --> 00:18:03,520
obligations and stuff like that so it's

498
00:18:03,520 --> 00:18:05,280
just a completely different

499
00:18:05,280 --> 00:18:09,840
uh mentality of motivating people

500
00:18:10,320 --> 00:18:12,960
um the second thing is that

501
00:18:12,960 --> 00:18:15,679
um if you

502
00:18:15,679 --> 00:18:17,919
you know picking the successor by

503
00:18:17,919 --> 00:18:19,679
stepping down and putting the two most

504
00:18:19,679 --> 00:18:22,720
committed volunteer or committers most

505
00:18:22,720 --> 00:18:24,400
involved committers as co-lead is not

506
00:18:24,400 --> 00:18:26,240
necessarily a good strategy for success

507
00:18:26,240 --> 00:18:27,600
either right

508
00:18:27,600 --> 00:18:29,120
which is i think what happened i mean

509
00:18:29,120 --> 00:18:31,520
chris schmidt and i toward the end

510
00:18:31,520 --> 00:18:33,360
were doing probably

511
00:18:33,360 --> 00:18:36,640
75 80 of the commits between us

512
00:18:36,640 --> 00:18:39,120
and um and most of the people kind of

513
00:18:39,120 --> 00:18:41,600
like fell off at the end and we

514
00:18:41,600 --> 00:18:43,200
you know carried through

515
00:18:43,200 --> 00:18:44,640
all the way to the bloody end of the

516
00:18:44,640 --> 00:18:46,000
release

517
00:18:46,000 --> 00:18:48,640
and chris helped jim i think with the

518
00:18:48,640 --> 00:18:49,760
release

519
00:18:49,760 --> 00:18:51,280
um

520
00:18:51,280 --> 00:18:53,039
but if you remember

521
00:18:53,039 --> 00:18:54,720
if you're a dinosaur like me anyways and

522
00:18:54,720 --> 00:18:56,400
you remember like some of the looney

523
00:18:56,400 --> 00:18:58,799
tune cartoons and stuff like that

524
00:18:58,799 --> 00:18:59,760
those

525
00:18:59,760 --> 00:19:01,280
cartoons were like where there's like a

526
00:19:01,280 --> 00:19:02,320
army

527
00:19:02,320 --> 00:19:04,960
and and a bunch of soldiers lined up in

528
00:19:04,960 --> 00:19:06,080
a line and

529
00:19:06,080 --> 00:19:07,520
like the captain says all right all

530
00:19:07,520 --> 00:19:09,120
volunteers for this dangerous mission

531
00:19:09,120 --> 00:19:10,400
please step forward

532
00:19:10,400 --> 00:19:12,320
and all but one clueless sap basically

533
00:19:12,320 --> 00:19:13,760
takes a collective

534
00:19:13,760 --> 00:19:15,440
you know collective step backward and

535
00:19:15,440 --> 00:19:17,840
leaving that poor sucker standing in the

536
00:19:17,840 --> 00:19:20,240
front saying what just happened you know

537
00:19:20,240 --> 00:19:23,039
i thought that was me when manico

538
00:19:23,039 --> 00:19:24,880
selected chris schmidt to be his

539
00:19:24,880 --> 00:19:26,960
successors i'm like what the heck

540
00:19:26,960 --> 00:19:28,640
why i didn't volunteer for this it's

541
00:19:28,640 --> 00:19:29,440
like

542
00:19:29,440 --> 00:19:32,720
you know so i mean i i felt like

543
00:19:32,720 --> 00:19:34,640
obligated to the project and i wanted to

544
00:19:34,640 --> 00:19:38,000
see it succeed and i felt if nobody else

545
00:19:38,000 --> 00:19:39,919
i mean i was like you can't he says i

546
00:19:39,919 --> 00:19:41,280
don't think anybody else wants to do it

547
00:19:41,280 --> 00:19:43,840
i'm like well okay i guess i'll accept

548
00:19:43,840 --> 00:19:46,480
it but you know whatever so

549
00:19:46,480 --> 00:19:48,240
so the people perspective that's the bad

550
00:19:48,240 --> 00:19:50,080
so next ugly

551
00:19:50,080 --> 00:19:52,960
and yep there's me uh i've been told

552
00:19:52,960 --> 00:19:55,360
that i've had a face for radio or

553
00:19:55,360 --> 00:19:57,120
podcasts maybe

554
00:19:57,120 --> 00:19:59,520
so seriously um

555
00:19:59,520 --> 00:20:00,799
after the

556
00:20:00,799 --> 00:20:04,240
2.8 2.0 uh ga release pretty much all

557
00:20:04,240 --> 00:20:06,480
the other help disappeared right so

558
00:20:06,480 --> 00:20:09,440
chris and i basically handled about 98

559
00:20:09,440 --> 00:20:11,600
of the work and apparent you know every

560
00:20:11,600 --> 00:20:13,360
once in a while jim manica would pop

561
00:20:13,360 --> 00:20:17,200
back in and help us out on something

562
00:20:17,200 --> 00:20:18,240
but

563
00:20:18,240 --> 00:20:20,000
i think the biggest problem to me was

564
00:20:20,000 --> 00:20:22,240
that the previous regime did not like

565
00:20:22,240 --> 00:20:24,480
pass on any details of how to actually

566
00:20:24,480 --> 00:20:27,679
do a release today i like to say that

567
00:20:27,679 --> 00:20:29,919
that is well documented i mean like a

568
00:20:29,919 --> 00:20:31,679
15-page document

569
00:20:31,679 --> 00:20:33,840
right every little step that you have to

570
00:20:33,840 --> 00:20:35,200
take

571
00:20:35,200 --> 00:20:36,080
but

572
00:20:36,080 --> 00:20:39,039
back then it was like magic and chris

573
00:20:39,039 --> 00:20:41,600
had sort of figured out how to do it but

574
00:20:41,600 --> 00:20:44,240
then he had to leave after a few years

575
00:20:44,240 --> 00:20:45,600
because he had other commitments because

576
00:20:45,600 --> 00:20:47,760
he had made some job changes

577
00:20:47,760 --> 00:20:50,240
that just you know pretty much consumed

578
00:20:50,240 --> 00:20:50,960
them

579
00:20:50,960 --> 00:20:52,640
and so um

580
00:20:52,640 --> 00:20:54,880
you know i was kind of here left my own

581
00:20:54,880 --> 00:20:56,320
loans i'm trying to figure out how to do

582
00:20:56,320 --> 00:20:58,720
releases when they were like you know

583
00:20:58,720 --> 00:21:00,960
uh vulnerable dependencies that i had

584
00:21:00,960 --> 00:21:03,679
patched in in the development build but

585
00:21:03,679 --> 00:21:04,960
not like

586
00:21:04,960 --> 00:21:07,039
uh you know i had no way to get them to

587
00:21:07,039 --> 00:21:08,400
maven central

588
00:21:08,400 --> 00:21:10,320
and ask the mailing lists and stuff like

589
00:21:10,320 --> 00:21:15,559
that and nobody really knew so

590
00:21:17,600 --> 00:21:18,960
excuse me

591
00:21:18,960 --> 00:21:19,840
i'm

592
00:21:19,840 --> 00:21:22,080
trying to get over covet here so

593
00:21:22,080 --> 00:21:24,720
so i kind of got a cough

594
00:21:24,720 --> 00:21:26,000
um

595
00:21:26,000 --> 00:21:27,840
all right so this is a discussion of the

596
00:21:27,840 --> 00:21:29,200
technical decisions around the

597
00:21:29,200 --> 00:21:31,280
architecture and the design and kind of

598
00:21:31,280 --> 00:21:32,720
what i learned the lessons i learned

599
00:21:32,720 --> 00:21:34,960
there

600
00:21:36,559 --> 00:21:37,760
so

601
00:21:37,760 --> 00:21:39,919
the good well like i said it started

602
00:21:39,919 --> 00:21:41,520
with interfaces and it's always good to

603
00:21:41,520 --> 00:21:43,600
start with interfaces and and this kind

604
00:21:43,600 --> 00:21:45,440
of like you know that's the way i design

605
00:21:45,440 --> 00:21:47,600
libraries as well right you know you

606
00:21:47,600 --> 00:21:49,200
sketch out some things and then you

607
00:21:49,200 --> 00:21:52,480
start using you write like fake programs

608
00:21:52,480 --> 00:21:53,520
with them

609
00:21:53,520 --> 00:21:55,280
trying to use those interfaces to see if

610
00:21:55,280 --> 00:21:56,880
they're kind of more or less

611
00:21:56,880 --> 00:21:58,880
you know correct and then change them

612
00:21:58,880 --> 00:22:00,880
and go back and forth right but

613
00:22:00,880 --> 00:22:03,039
essentially you gotta write at least

614
00:22:03,039 --> 00:22:05,679
some kind of a scaffold or something

615
00:22:05,679 --> 00:22:07,600
because you can't actually execute it

616
00:22:07,600 --> 00:22:09,360
the test like i mentioned

617
00:22:09,360 --> 00:22:10,559
right

618
00:22:10,559 --> 00:22:13,760
um and in fact jeff's jeff williams who

619
00:22:13,760 --> 00:22:15,600
started esappy

620
00:22:15,600 --> 00:22:20,120
in somewhere around 2007

621
00:22:20,559 --> 00:22:22,640
um

622
00:22:22,640 --> 00:22:25,280
basically his after talking to him his

623
00:22:25,280 --> 00:22:27,440
his basic idea was actually to get the

624
00:22:27,440 --> 00:22:29,760
vendors to do the various reference

625
00:22:29,760 --> 00:22:31,840
implementations that were based on these

626
00:22:31,840 --> 00:22:34,080
implementations and it was

627
00:22:34,080 --> 00:22:35,600
these interfaces were supposed to be

628
00:22:35,600 --> 00:22:36,960
sort of common

629
00:22:36,960 --> 00:22:38,640
and spanned across you know multiple

630
00:22:38,640 --> 00:22:40,159
programming languages and at one point

631
00:22:40,159 --> 00:22:41,919
in time if you go back and look at east

632
00:22:41,919 --> 00:22:44,000
happy in 2009

633
00:22:44,000 --> 00:22:47,200
we had an esappy or at least either in

634
00:22:47,200 --> 00:22:50,320
progress or you know or 2010 let's say

635
00:22:50,320 --> 00:22:52,960
um we had like an esappy for c and he's

636
00:22:52,960 --> 00:22:56,000
happy for c plus we had one for php we

637
00:22:56,000 --> 00:22:58,080
had one for cold fusion

638
00:22:58,080 --> 00:23:01,039
um we had one for apex um i think the

639
00:23:01,039 --> 00:23:04,400
cold fusion and and apex

640
00:23:04,400 --> 00:23:06,320
one are still um done by their

641
00:23:06,320 --> 00:23:08,880
respective vendors um

642
00:23:08,880 --> 00:23:10,559
i don't know if they've kept them up to

643
00:23:10,559 --> 00:23:11,840
date and i don't think they've ever

644
00:23:11,840 --> 00:23:13,679
updated them like you know according to

645
00:23:13,679 --> 00:23:16,080
the 2.0 changes but

646
00:23:16,080 --> 00:23:17,120
um

647
00:23:17,120 --> 00:23:19,440
anyways

648
00:23:19,440 --> 00:23:21,120
again this is like it's really hard

649
00:23:21,120 --> 00:23:22,640
though that you can't really build an

650
00:23:22,640 --> 00:23:25,440
interface in a vacuum and

651
00:23:25,440 --> 00:23:26,480
um

652
00:23:26,480 --> 00:23:27,760
because you need to know if they're

653
00:23:27,760 --> 00:23:29,760
correct right i think the other thing

654
00:23:29,760 --> 00:23:33,039
that was good is um

655
00:23:33,039 --> 00:23:35,280
we realized that some limitations were

656
00:23:35,280 --> 00:23:36,480
needed even if they were only

657
00:23:36,480 --> 00:23:37,919
rudimentary

658
00:23:37,919 --> 00:23:38,640
so

659
00:23:38,640 --> 00:23:40,000
that was good thing

660
00:23:40,000 --> 00:23:41,919
they did build those reference models

661
00:23:41,919 --> 00:23:43,760
out that they can sort of test with and

662
00:23:43,760 --> 00:23:46,320
things like that uh and the property

663
00:23:46,320 --> 00:23:48,880
driven approach to select a specific

664
00:23:48,880 --> 00:23:50,720
implementation that was kind of the way

665
00:23:50,720 --> 00:23:52,400
that jeff designed

666
00:23:52,400 --> 00:23:54,960
it to basically allow somebody to put

667
00:23:54,960 --> 00:23:56,000
their own

668
00:23:56,000 --> 00:23:57,600
implementation in and that was his

669
00:23:57,600 --> 00:24:00,240
vision was basically somebody like in an

670
00:24:00,240 --> 00:24:02,240
enterprise or a vendor

671
00:24:02,240 --> 00:24:04,400
would like write a custom thing like for

672
00:24:04,400 --> 00:24:05,919
instance somebody

673
00:24:05,919 --> 00:24:08,559
maybe like mozilla who had like

674
00:24:08,559 --> 00:24:10,960
uh an ldap interface

675
00:24:10,960 --> 00:24:13,360
back then right they might like done an

676
00:24:13,360 --> 00:24:16,400
authenticator that basically hooked into

677
00:24:16,400 --> 00:24:18,880
that esappy interface and just you know

678
00:24:18,880 --> 00:24:21,520
here's a library you could use whatever

679
00:24:21,520 --> 00:24:24,640
but effect that that really never um

680
00:24:24,640 --> 00:24:27,200
came to be

681
00:24:28,080 --> 00:24:30,159
right so

682
00:24:30,159 --> 00:24:31,919
these again i want to emphasize are my

683
00:24:31,919 --> 00:24:34,000
own opinion not anybody else that

684
00:24:34,000 --> 00:24:35,679
necessarily was involved with ease happy

685
00:24:35,679 --> 00:24:37,600
but um

686
00:24:37,600 --> 00:24:39,600
it is shared by the current

687
00:24:39,600 --> 00:24:41,120
uh crew

688
00:24:41,120 --> 00:24:43,520
and uh the current contributors

689
00:24:43,520 --> 00:24:45,039
um

690
00:24:45,039 --> 00:24:48,400
that style and uh

691
00:24:49,120 --> 00:24:52,000
geez his name escapes me

692
00:24:52,000 --> 00:24:53,600
apologize

693
00:24:53,600 --> 00:24:55,120
uh

694
00:24:55,120 --> 00:24:56,559
anyways uh

695
00:24:56,559 --> 00:24:58,000
so uh

696
00:24:58,000 --> 00:25:00,880
monolithic approach was bad right

697
00:25:00,880 --> 00:25:01,840
um

698
00:25:01,840 --> 00:25:04,080
singletons were a terrible idea

699
00:25:04,080 --> 00:25:06,159
some limitations were too successful too

700
00:25:06,159 --> 00:25:08,880
soon i kind of already touched on that

701
00:25:08,880 --> 00:25:11,200
many implementations

702
00:25:11,200 --> 00:25:13,120
many individual interfaces

703
00:25:13,120 --> 00:25:16,159
uh comprised of a single security

704
00:25:16,159 --> 00:25:17,919
control became bloated and we had an

705
00:25:17,919 --> 00:25:19,600
uncontrolled growth of

706
00:25:19,600 --> 00:25:21,120
uh properties

707
00:25:21,120 --> 00:25:22,320
and i'm going to speak to all those

708
00:25:22,320 --> 00:25:23,840
other things in the next slide but i

709
00:25:23,840 --> 00:25:26,000
want to right now just kind of like

710
00:25:26,000 --> 00:25:28,159
say one thing about the singletons which

711
00:25:28,159 --> 00:25:30,240
has always been my biggest gripe because

712
00:25:30,240 --> 00:25:31,840
it probably affected me more than

713
00:25:31,840 --> 00:25:33,919
anybody else especially

714
00:25:33,919 --> 00:25:35,520
trying to test

715
00:25:35,520 --> 00:25:37,279
um

716
00:25:37,279 --> 00:25:38,640
give you an example right if let's

717
00:25:38,640 --> 00:25:40,240
suppose you have an application that

718
00:25:40,240 --> 00:25:43,200
wanted to use esappy for encryption

719
00:25:43,200 --> 00:25:45,440
and you had some you're doing some new

720
00:25:45,440 --> 00:25:47,440
encryption you wanted to use aes but you

721
00:25:47,440 --> 00:25:49,039
had some old stuff that you had

722
00:25:49,039 --> 00:25:51,760
encrypted right and it was using triple

723
00:25:51,760 --> 00:25:53,200
does

724
00:25:53,200 --> 00:25:56,320
all right so basically in esappy you

725
00:25:56,320 --> 00:25:59,279
could not use the esappy encrypter the

726
00:25:59,279 --> 00:26:01,200
the java encrypter

727
00:26:01,200 --> 00:26:04,159
implementation right had

728
00:26:04,159 --> 00:26:07,440
it was a singleton and it basically was

729
00:26:07,440 --> 00:26:09,840
a property driven thing and the property

730
00:26:09,840 --> 00:26:12,159
you picked was this is the cipher that i

731
00:26:12,159 --> 00:26:14,080
want to use right there wasn't any way

732
00:26:14,080 --> 00:26:15,840
to pass in the cipher that you wanted to

733
00:26:15,840 --> 00:26:16,799
use

734
00:26:16,799 --> 00:26:19,440
and so what happened was like you depict

735
00:26:19,440 --> 00:26:21,360
aes or you pick triple devs and then you

736
00:26:21,360 --> 00:26:22,480
were stuck with it because it was a

737
00:26:22,480 --> 00:26:23,600
singleton

738
00:26:23,600 --> 00:26:26,159
right now we had a cluj in in the

739
00:26:26,159 --> 00:26:28,480
ethappi class that basically allowed you

740
00:26:28,480 --> 00:26:30,159
to

741
00:26:30,159 --> 00:26:32,480
change the configuration temporarily and

742
00:26:32,480 --> 00:26:34,080
then you could switch it back to the old

743
00:26:34,080 --> 00:26:36,960
one but it was not thread safe right

744
00:26:36,960 --> 00:26:39,039
well that's not a problem right well

745
00:26:39,039 --> 00:26:41,039
yeah because every

746
00:26:41,039 --> 00:26:43,200
you know web application is which is

747
00:26:43,200 --> 00:26:46,159
what east happy was intended for um is

748
00:26:46,159 --> 00:26:49,360
multi-threaded so yeah it was a problem

749
00:26:49,360 --> 00:26:51,440
all right so i'll talk about the other

750
00:26:51,440 --> 00:26:53,440
issues now um

751
00:26:53,440 --> 00:26:55,679
all right so ethep like the monolithic

752
00:26:55,679 --> 00:26:57,039
approach right why is that a problem

753
00:26:57,039 --> 00:27:00,799
well esappy has 12 direct compile-time

754
00:27:00,799 --> 00:27:02,320
dependencies

755
00:27:02,320 --> 00:27:03,279
all right

756
00:27:03,279 --> 00:27:04,880
that pulls in

757
00:27:04,880 --> 00:27:06,880
14 additional

758
00:27:06,880 --> 00:27:08,880
transit of compile time dependencies

759
00:27:08,880 --> 00:27:09,840
right

760
00:27:09,840 --> 00:27:11,360
so why is that a problem well if you

761
00:27:11,360 --> 00:27:13,200
wanted to use something like the esappy

762
00:27:13,200 --> 00:27:14,320
encrypter

763
00:27:14,320 --> 00:27:16,559
right

764
00:27:16,880 --> 00:27:20,159
which requires no external dependencies

765
00:27:20,159 --> 00:27:22,480
itself if you're comfortable with using

766
00:27:22,480 --> 00:27:25,279
sun jce and the java util logging for

767
00:27:25,279 --> 00:27:26,240
logging

768
00:27:26,240 --> 00:27:29,120
right it still has to pull in 20 all 26

769
00:27:29,120 --> 00:27:31,600
of those dependencies

770
00:27:31,600 --> 00:27:33,520
even though technically it would not

771
00:27:33,520 --> 00:27:34,640
need any

772
00:27:34,640 --> 00:27:35,520
right

773
00:27:35,520 --> 00:27:36,399
so

774
00:27:36,399 --> 00:27:38,799
that's a problem um people didn't like

775
00:27:38,799 --> 00:27:40,559
that like why do i have to do you know

776
00:27:40,559 --> 00:27:42,720
pulling all these things even though

777
00:27:42,720 --> 00:27:44,240
right so it's like if we just split it

778
00:27:44,240 --> 00:27:47,120
up it wouldn't have been that way

779
00:27:47,120 --> 00:27:48,399
um

780
00:27:48,399 --> 00:27:50,240
this has caused also problems with

781
00:27:50,240 --> 00:27:52,480
vulnerable dependencies that are past uh

782
00:27:52,480 --> 00:27:54,640
end of life right

783
00:27:54,640 --> 00:27:56,559
so like this second point

784
00:27:56,559 --> 00:27:57,600
um

785
00:27:57,600 --> 00:27:58,480
right

786
00:27:58,480 --> 00:28:00,640
means that i have had like every time

787
00:28:00,640 --> 00:28:03,039
there is a new vulnerability in

788
00:28:03,039 --> 00:28:03,880
uh

789
00:28:03,880 --> 00:28:06,000
log4j1.x right

790
00:28:06,000 --> 00:28:09,279
which is end of life um

791
00:28:09,279 --> 00:28:11,360
i have to research it and write up a

792
00:28:11,360 --> 00:28:13,120
security notice and that has been pretty

793
00:28:13,120 --> 00:28:14,799
frequent thing because we cannot

794
00:28:14,799 --> 00:28:17,520
completely eliminate it that log for j

795
00:28:17,520 --> 00:28:20,559
dependency despite having the fact that

796
00:28:20,559 --> 00:28:23,760
we could support log for j

797
00:28:23,760 --> 00:28:25,120
you know one

798
00:28:25,120 --> 00:28:28,840
through an slf for j bridge

799
00:28:28,840 --> 00:28:31,679
right because we did that it would break

800
00:28:31,679 --> 00:28:33,520
backwards compatibility of people's code

801
00:28:33,520 --> 00:28:34,720
they would have to in other words

802
00:28:34,720 --> 00:28:36,960
rewrite some code right

803
00:28:36,960 --> 00:28:39,679
so that's why we haven't just like

804
00:28:39,679 --> 00:28:42,480
removed it but in my opinion that was uh

805
00:28:42,480 --> 00:28:44,080
indication that there was something done

806
00:28:44,080 --> 00:28:45,679
wrong right because we have to be able

807
00:28:45,679 --> 00:28:47,600
to design code so that we can at least

808
00:28:47,600 --> 00:28:50,559
remove unsupported libraries

809
00:28:50,559 --> 00:28:52,640
right um without the crew tax that we

810
00:28:52,640 --> 00:28:55,039
require right now right like right now

811
00:28:55,039 --> 00:28:56,320
if you want to

812
00:28:56,320 --> 00:28:58,240
use esappy

813
00:28:58,240 --> 00:29:00,880
uh what i recommend to people is you say

814
00:29:00,880 --> 00:29:03,679
if you know use slf for j

815
00:29:03,679 --> 00:29:06,320
uh and log back or something like that

816
00:29:06,320 --> 00:29:10,159
and then put in exclude logo for j

817
00:29:10,159 --> 00:29:12,720
you know whatever the version was right

818
00:29:12,720 --> 00:29:15,039
um and then it just won't get sucked

819
00:29:15,039 --> 00:29:17,039
into your thing but the problem is that

820
00:29:17,039 --> 00:29:18,320
like when they do

821
00:29:18,320 --> 00:29:20,559
things like uh

822
00:29:20,559 --> 00:29:22,240
dependency check or something like that

823
00:29:22,240 --> 00:29:24,840
it'll still pick it up and flag it

824
00:29:24,840 --> 00:29:27,120
so um

825
00:29:27,120 --> 00:29:29,120
anyway so

826
00:29:29,120 --> 00:29:30,960
yeah that's the monolithic approach

827
00:29:30,960 --> 00:29:32,720
right so that's why i want to get rid of

828
00:29:32,720 --> 00:29:33,840
it

829
00:29:33,840 --> 00:29:35,360
um

830
00:29:35,360 --> 00:29:38,320
bloated dependencies well

831
00:29:38,320 --> 00:29:42,159
all right uh so encoder has 22 methods

832
00:29:42,159 --> 00:29:42,960
right

833
00:29:42,960 --> 00:29:45,520
um about half roughly half of those are

834
00:29:45,520 --> 00:29:47,440
encoders and roughly half of those are

835
00:29:47,440 --> 00:29:50,640
decoders the encoders are used

836
00:29:50,640 --> 00:29:52,559
very very frequently in fact the encoder

837
00:29:52,559 --> 00:29:54,720
interface and the encoders i can code

838
00:29:54,720 --> 00:29:57,760
for html code for javascript you know

839
00:29:57,760 --> 00:30:00,240
encode for css all those things

840
00:30:00,240 --> 00:30:02,880
those are the heaviliest used i mean

841
00:30:02,880 --> 00:30:04,240
probably 80

842
00:30:04,240 --> 00:30:06,240
of the use of esappy is through the

843
00:30:06,240 --> 00:30:08,559
encoder interfaces for those various

844
00:30:08,559 --> 00:30:11,279
encode for whatever methods

845
00:30:11,279 --> 00:30:13,600
about which there's

846
00:30:13,600 --> 00:30:14,640
you know

847
00:30:14,640 --> 00:30:17,919
a very small set of them

848
00:30:18,000 --> 00:30:19,600
we could have and we probably should

849
00:30:19,600 --> 00:30:20,399
have

850
00:30:20,399 --> 00:30:22,240
separated out the decoder methods

851
00:30:22,240 --> 00:30:24,640
because the decoder methods are rarely

852
00:30:24,640 --> 00:30:26,320
if ever used i don't

853
00:30:26,320 --> 00:30:27,840
think i've like i did a lot of code

854
00:30:27,840 --> 00:30:30,159
reviews when i was at wells fargo to use

855
00:30:30,159 --> 00:30:31,520
zappy

856
00:30:31,520 --> 00:30:33,360
i don't recall ever seeing anybody using

857
00:30:33,360 --> 00:30:36,399
the decoder stuff

858
00:30:38,080 --> 00:30:40,240
but 22 methods isn't so bad when you

859
00:30:40,240 --> 00:30:42,720
compare that to the http utilities

860
00:30:42,720 --> 00:30:44,320
interface which was kind of like a

861
00:30:44,320 --> 00:30:47,440
potpourri of anything and everything

862
00:30:47,440 --> 00:30:50,559
that had anything to do with http

863
00:30:50,559 --> 00:30:53,039
it had 60 methods right and many of them

864
00:30:53,039 --> 00:30:56,880
were very nuanced because they had like

865
00:30:56,880 --> 00:30:59,039
version you know

866
00:30:59,039 --> 00:30:59,919
one

867
00:30:59,919 --> 00:31:01,519
or like two arguments three arguments

868
00:31:01,519 --> 00:31:02,799
four arguments five arguments six

869
00:31:02,799 --> 00:31:04,399
arguments something like that

870
00:31:04,399 --> 00:31:06,799
all the same method and part of that was

871
00:31:06,799 --> 00:31:10,159
you know obviously um because just uh

872
00:31:10,159 --> 00:31:12,399
java's stupidity of not being able to

873
00:31:12,399 --> 00:31:14,399
support default arguments which i

874
00:31:14,399 --> 00:31:15,919
thought was least one of the great

875
00:31:15,919 --> 00:31:18,799
features of of c plus plus it really

876
00:31:18,799 --> 00:31:19,919
you know

877
00:31:19,919 --> 00:31:23,360
smashes down the size of things and

878
00:31:23,360 --> 00:31:25,760
implementation wise it wasn't a problem

879
00:31:25,760 --> 00:31:28,640
right you just basically would call

880
00:31:28,640 --> 00:31:30,559
some other implementation you know

881
00:31:30,559 --> 00:31:32,399
something with a default argument

882
00:31:32,399 --> 00:31:34,399
so the implementation was simple but it

883
00:31:34,399 --> 00:31:36,880
bloated those those interfaces and the

884
00:31:36,880 --> 00:31:39,120
methods and then made it made it very

885
00:31:39,120 --> 00:31:41,279
complicated to read the javadoc and

886
00:31:41,279 --> 00:31:44,679
stuff like that

887
00:31:49,279 --> 00:31:51,279
um so

888
00:31:51,279 --> 00:31:53,919
the uncontrolled property growth

889
00:31:53,919 --> 00:31:55,360
so

890
00:31:55,360 --> 00:31:58,240
adding a new property required

891
00:31:58,240 --> 00:31:59,039
this

892
00:31:59,039 --> 00:32:00,799
the in the implementation class for

893
00:32:00,799 --> 00:32:02,159
security

894
00:32:02,159 --> 00:32:05,360
uh configuration interface which was

895
00:32:05,360 --> 00:32:08,159
called default security configuration

896
00:32:08,159 --> 00:32:10,159
right you have to add

897
00:32:10,159 --> 00:32:12,720
a public final string to represent the

898
00:32:12,720 --> 00:32:16,240
property optionally you would put in

899
00:32:16,240 --> 00:32:17,039
a

900
00:32:17,039 --> 00:32:18,880
public final

901
00:32:18,880 --> 00:32:21,200
public static final string to represent

902
00:32:21,200 --> 00:32:24,720
the default value of the property

903
00:32:24,720 --> 00:32:26,320
so in other words if they didn't put it

904
00:32:26,320 --> 00:32:28,559
in their e-sappy properties file and

905
00:32:28,559 --> 00:32:30,240
somebody called it from their code it

906
00:32:30,240 --> 00:32:32,080
would still have a default

907
00:32:32,080 --> 00:32:33,200
um

908
00:32:33,200 --> 00:32:34,159
and then

909
00:32:34,159 --> 00:32:35,600
you would have to put in a public method

910
00:32:35,600 --> 00:32:37,600
to access the particular property so i

911
00:32:37,600 --> 00:32:39,600
have an example here with hd the force

912
00:32:39,600 --> 00:32:42,880
http only cookies right

913
00:32:42,880 --> 00:32:44,880
well you know this alone might not have

914
00:32:44,880 --> 00:32:46,799
been a problem except for

915
00:32:46,799 --> 00:32:49,440
we started everybody started saying hey

916
00:32:49,440 --> 00:32:51,200
i like this properties thing

917
00:32:51,200 --> 00:32:53,039
everything's property driven

918
00:32:53,039 --> 00:32:55,120
easy to change it you know we allow

919
00:32:55,120 --> 00:32:57,120
people to customize it uh the

920
00:32:57,120 --> 00:32:59,279
development of the end users

921
00:32:59,279 --> 00:33:01,679
and clients

922
00:33:01,679 --> 00:33:03,679
um they could set them to whatever they

923
00:33:03,679 --> 00:33:05,200
want and stuff like that's really

924
00:33:05,200 --> 00:33:08,559
flexible right but

925
00:33:08,559 --> 00:33:11,600
this interface started to get bloated as

926
00:33:11,600 --> 00:33:14,320
well and i didn't count up the

927
00:33:14,320 --> 00:33:16,559
the size of the interface for the

928
00:33:16,559 --> 00:33:20,159
security configuration interface because

929
00:33:20,159 --> 00:33:21,679
right now most of the stuff we've

930
00:33:21,679 --> 00:33:24,240
deprecated and we suggest that like you

931
00:33:24,240 --> 00:33:26,960
know we have like a get string prop get

932
00:33:26,960 --> 00:33:29,360
in prop get bullprop you know

933
00:33:29,360 --> 00:33:31,039
that type of thing where you just pass

934
00:33:31,039 --> 00:33:32,559
in the property name

935
00:33:32,559 --> 00:33:34,080
um

936
00:33:34,080 --> 00:33:35,200
but

937
00:33:35,200 --> 00:33:36,159
uh

938
00:33:36,159 --> 00:33:39,200
so that's sort of fixed right but

939
00:33:39,200 --> 00:33:41,279
it's like it it just really makes it

940
00:33:41,279 --> 00:33:43,679
ugly and it made it hard to maintain and

941
00:33:43,679 --> 00:33:44,559
and

942
00:33:44,559 --> 00:33:46,320
this that was just the wrong way to do

943
00:33:46,320 --> 00:33:47,039
it

944
00:33:47,039 --> 00:33:48,640
um

945
00:33:48,640 --> 00:33:51,039
so but yeah these other these things

946
00:33:51,039 --> 00:33:53,200
like this example that you're seeing

947
00:33:53,200 --> 00:33:54,559
right here this this is actually

948
00:33:54,559 --> 00:33:56,320
deprecated now so

949
00:33:56,320 --> 00:33:59,279
in the interface

950
00:34:01,760 --> 00:34:03,679
all right um

951
00:34:03,679 --> 00:34:05,039
so

952
00:34:05,039 --> 00:34:07,039
the other thing's ugly uh we had this

953
00:34:07,039 --> 00:34:08,800
radical inner

954
00:34:08,800 --> 00:34:12,000
inter dependency on e-sappy properties

955
00:34:12,000 --> 00:34:14,560
and logging and exceptions

956
00:34:14,560 --> 00:34:16,639
that was made apparent because we had

957
00:34:16,639 --> 00:34:18,960
this very tightly coupled very tight

958
00:34:18,960 --> 00:34:21,599
coupling between security configuration

959
00:34:21,599 --> 00:34:23,280
interface a logger interface an

960
00:34:23,280 --> 00:34:26,000
enterprise security exception and sort

961
00:34:26,000 --> 00:34:27,679
of by extension

962
00:34:27,679 --> 00:34:29,760
uh transitively

963
00:34:29,760 --> 00:34:32,399
the user because the enterprise security

964
00:34:32,399 --> 00:34:34,399
exception did logging

965
00:34:34,399 --> 00:34:36,480
right and there was also actually

966
00:34:36,480 --> 00:34:39,520
depending on which exception you used

967
00:34:39,520 --> 00:34:41,040
the intrusion

968
00:34:41,040 --> 00:34:44,239
uh detection stuff would come into play

969
00:34:44,239 --> 00:34:46,399
too

970
00:34:47,520 --> 00:34:49,599
so that was kind of a problem

971
00:34:49,599 --> 00:34:51,199
um if you ever

972
00:34:51,199 --> 00:34:52,719
are interested in like looking at what

973
00:34:52,719 --> 00:34:55,199
i'm talking about more specifically uh

974
00:34:55,199 --> 00:34:56,079
just

975
00:34:56,079 --> 00:34:58,160
pull down the the uh

976
00:34:58,160 --> 00:35:01,520
esappy code sometime and run like maven

977
00:35:01,520 --> 00:35:04,240
site the mvm site command and then look

978
00:35:04,240 --> 00:35:06,800
at the j depends output

979
00:35:06,800 --> 00:35:08,880
and you'll see what i mean

980
00:35:08,880 --> 00:35:11,119
um

981
00:35:11,200 --> 00:35:13,200
second thing um there's too many

982
00:35:13,200 --> 00:35:15,200
ill-time changes that were done at the

983
00:35:15,200 --> 00:35:17,359
same time i mean handling one change at

984
00:35:17,359 --> 00:35:19,839
a time was fine multiple changes at a

985
00:35:19,839 --> 00:35:20,640
time

986
00:35:20,640 --> 00:35:22,400
bad news right

987
00:35:22,400 --> 00:35:23,280
so

988
00:35:23,280 --> 00:35:25,680
we were forced because google code was

989
00:35:25,680 --> 00:35:27,760
sort of going away and it was using

990
00:35:27,760 --> 00:35:29,599
subversion and we looked for an

991
00:35:29,599 --> 00:35:31,760
alternative and ended up with hey well

992
00:35:31,760 --> 00:35:33,760
everybody's using git and github

993
00:35:33,760 --> 00:35:37,520
so let's make the switch so okay

994
00:35:37,520 --> 00:35:38,640
that wasn't

995
00:35:38,640 --> 00:35:41,040
a problem to most of the people because

996
00:35:41,040 --> 00:35:44,800
almost everybody um you know we're using

997
00:35:44,800 --> 00:35:47,359
ides but certain dinosaurs

998
00:35:47,359 --> 00:35:49,760
me being one of them um

999
00:35:49,760 --> 00:35:52,320
are more fond of the command line right

1000
00:35:52,320 --> 00:35:54,160
and i do almost all of my development

1001
00:35:54,160 --> 00:35:56,000
from the command line and i only break

1002
00:35:56,000 --> 00:35:58,240
out an ide basically when i need to

1003
00:35:58,240 --> 00:35:59,280
either

1004
00:35:59,280 --> 00:36:02,079
examine somebody else's code or

1005
00:36:02,079 --> 00:36:04,880
when i need to break out a debugger

1006
00:36:04,880 --> 00:36:07,119
and that's pretty much the only time

1007
00:36:07,119 --> 00:36:09,520
um everything else is just i just use

1008
00:36:09,520 --> 00:36:13,040
the g-vem or something like that

1009
00:36:13,040 --> 00:36:16,240
so that was a problem

1010
00:36:16,240 --> 00:36:18,240
because you know i had to learn to get

1011
00:36:18,240 --> 00:36:20,720
command line and what all the things do

1012
00:36:20,720 --> 00:36:23,200
instead of just clicking on different i

1013
00:36:23,200 --> 00:36:26,720
want to commit this or whatever um

1014
00:36:26,720 --> 00:36:28,800
and then the other thing was changing

1015
00:36:28,800 --> 00:36:31,200
from ant to maven we did that at the

1016
00:36:31,200 --> 00:36:33,200
same time that we moved from google code

1017
00:36:33,200 --> 00:36:34,000
to

1018
00:36:34,000 --> 00:36:35,040
to git

1019
00:36:35,040 --> 00:36:37,200
and probably you know

1020
00:36:37,200 --> 00:36:40,240
it was the right move i mean ant was

1021
00:36:40,240 --> 00:36:42,720
getting old and stuff like that but ant

1022
00:36:42,720 --> 00:36:44,160
works on

1023
00:36:44,160 --> 00:36:46,320
basically explicit instructions of

1024
00:36:46,320 --> 00:36:47,200
telling

1025
00:36:47,200 --> 00:36:49,359
you know you tell it exactly what you

1026
00:36:49,359 --> 00:36:50,640
wanted to do

1027
00:36:50,640 --> 00:36:52,839
in maven you pick a

1028
00:36:52,839 --> 00:36:55,760
plugin and plug-in figures out what you

1029
00:36:55,760 --> 00:36:57,920
want to do and so first you know the

1030
00:36:57,920 --> 00:36:59,200
first

1031
00:36:59,200 --> 00:37:00,960
thing first task is figure out which

1032
00:37:00,960 --> 00:37:02,800
plug-in that you should be using

1033
00:37:02,800 --> 00:37:05,200
right and then the second task is

1034
00:37:05,200 --> 00:37:07,520
make sure you got the plug-in configured

1035
00:37:07,520 --> 00:37:10,240
right with the right parameters

1036
00:37:10,240 --> 00:37:12,000
and then the third thing is you got to

1037
00:37:12,000 --> 00:37:14,560
figure out like what the maven goal is

1038
00:37:14,560 --> 00:37:16,560
and and wire everything else up so that

1039
00:37:16,560 --> 00:37:18,800
it comes out like when you do a

1040
00:37:18,800 --> 00:37:20,960
test or a deploy or whatever that it

1041
00:37:20,960 --> 00:37:23,040
calls the right plugins and stuff so

1042
00:37:23,040 --> 00:37:25,760
that was you know kind of a big pain in

1043
00:37:25,760 --> 00:37:26,800
the butt

1044
00:37:26,800 --> 00:37:28,960
um

1045
00:37:28,960 --> 00:37:31,599
the uh

1046
00:37:31,839 --> 00:37:33,760
anyways you know

1047
00:37:33,760 --> 00:37:36,000
and i and i had all kinds of questions

1048
00:37:36,000 --> 00:37:38,000
about maven in terms of like how the how

1049
00:37:38,000 --> 00:37:40,240
to do deployments and stuff with it

1050
00:37:40,240 --> 00:37:41,440
and it just

1051
00:37:41,440 --> 00:37:43,680
uh you know just um

1052
00:37:43,680 --> 00:37:46,960
was very frustrating for me

1053
00:37:47,040 --> 00:37:49,200
um

1054
00:37:49,200 --> 00:37:51,040
we uh

1055
00:37:51,040 --> 00:37:53,680
also trusted the nsa for a code review

1056
00:37:53,680 --> 00:37:55,040
right i

1057
00:37:55,040 --> 00:37:58,320
knew my limitations um you know bruce

1058
00:37:58,320 --> 00:38:00,240
schneier has said that basically anybody

1059
00:38:00,240 --> 00:38:02,320
can write cryptography code that they

1060
00:38:02,320 --> 00:38:04,640
think is secure um

1061
00:38:04,640 --> 00:38:06,800
there's a story about ron rivas actually

1062
00:38:06,800 --> 00:38:08,079
that basically

1063
00:38:08,079 --> 00:38:10,800
he spent like uh

1064
00:38:10,800 --> 00:38:14,000
you all heard of uh rc

1065
00:38:14,000 --> 00:38:15,440
four right

1066
00:38:15,440 --> 00:38:17,760
rc

1067
00:38:17,920 --> 00:38:22,560
rc3 i think it was um that base

1068
00:38:22,800 --> 00:38:25,839
and then basically he designed after rc2

1069
00:38:25,839 --> 00:38:28,079
that never became

1070
00:38:28,079 --> 00:38:30,240
widespread because he went to some

1071
00:38:30,240 --> 00:38:32,400
crypto conference and somebody he gave a

1072
00:38:32,400 --> 00:38:33,760
talk on it and by the end of the

1073
00:38:33,760 --> 00:38:36,240
conference supposedly somebody had

1074
00:38:36,240 --> 00:38:37,440
cracked it

1075
00:38:37,440 --> 00:38:39,520
right after all those years so it's like

1076
00:38:39,520 --> 00:38:44,160
you know i am no ron rivas obviously um

1077
00:38:44,160 --> 00:38:46,800
so i felt uncomfortable of just like

1078
00:38:46,800 --> 00:38:48,079
nobody

1079
00:38:48,079 --> 00:38:51,520
else that was working on esappy um

1080
00:38:51,520 --> 00:38:52,400
you know

1081
00:38:52,400 --> 00:38:55,200
knew cryptography i made a call out to

1082
00:38:55,200 --> 00:38:56,720
the leaders list

1083
00:38:56,720 --> 00:38:59,119
and or some of the general east happy

1084
00:38:59,119 --> 00:39:01,280
lists and nobody responded i got one

1085
00:39:01,280 --> 00:39:02,560
response

1086
00:39:02,560 --> 00:39:04,800
um that i put it out on some public

1087
00:39:04,800 --> 00:39:07,280
mailing lists and and one person said

1088
00:39:07,280 --> 00:39:08,720
yeah i'll review it for you for thirty

1089
00:39:08,720 --> 00:39:11,119
thousand dollars well we only had like

1090
00:39:11,119 --> 00:39:12,880
it was probably only like

1091
00:39:12,880 --> 00:39:15,040
less than 1200 lines of code

1092
00:39:15,040 --> 00:39:17,119
i didn't think that was a very good

1093
00:39:17,119 --> 00:39:20,480
deal so dave wickers

1094
00:39:20,480 --> 00:39:23,440
basically knew somebody at nsa

1095
00:39:23,440 --> 00:39:25,200
and they said yeah they have this thing

1096
00:39:25,200 --> 00:39:27,520
that like sometimes reviews open source

1097
00:39:27,520 --> 00:39:29,520
code and they would do it for us so they

1098
00:39:29,520 --> 00:39:32,000
didn't they decided not to just do a

1099
00:39:32,000 --> 00:39:34,640
code review on the crypto but on the

1100
00:39:34,640 --> 00:39:36,400
whole thing right and i interacted with

1101
00:39:36,400 --> 00:39:38,480
them and they found like oh you should

1102
00:39:38,480 --> 00:39:40,640
use uh i don't know shaw 256 here

1103
00:39:40,640 --> 00:39:45,040
instead of shaw 128 or whatever

1104
00:39:45,040 --> 00:39:47,680
etc i won um

1105
00:39:47,680 --> 00:39:51,200
but you know to our credit uh we

1106
00:39:51,200 --> 00:39:54,320
this was pre-snowden days but you know

1107
00:39:54,320 --> 00:39:57,760
uh that cve that that was discovered

1108
00:39:57,760 --> 00:40:01,040
that i mentioned earlier uh cve

1109
00:40:01,040 --> 00:40:02,800
dash 200 uh

1110
00:40:02,800 --> 00:40:05,800
2013-5679

1111
00:40:06,240 --> 00:40:09,280
was there because of a 1.4 backward

1112
00:40:09,280 --> 00:40:11,440
compatibility interface

1113
00:40:11,440 --> 00:40:15,040
and that should have been spotted by any

1114
00:40:15,040 --> 00:40:17,200
buddy in nsa that was clue full of

1115
00:40:17,200 --> 00:40:18,560
cryptography

1116
00:40:18,560 --> 00:40:21,599
basically it found a way to bypass

1117
00:40:21,599 --> 00:40:23,599
the integrity checks

1118
00:40:23,599 --> 00:40:25,599
with the with the hmac

1119
00:40:25,599 --> 00:40:27,119
um

1120
00:40:27,119 --> 00:40:28,880
and bypass that

1121
00:40:28,880 --> 00:40:29,680
um

1122
00:40:29,680 --> 00:40:32,560
and i just um like really upset that

1123
00:40:32,560 --> 00:40:34,560
they didn't find that i mean i suppose

1124
00:40:34,560 --> 00:40:37,680
it's plausible deniability but you know

1125
00:40:37,680 --> 00:40:39,760
after hearing the story about the nsa

1126
00:40:39,760 --> 00:40:43,599
backdooring the the dual ec uh

1127
00:40:43,599 --> 00:40:46,319
dr bg the the

1128
00:40:46,319 --> 00:40:48,800
elliptic curve deterministic random bit

1129
00:40:48,800 --> 00:40:50,000
generator

1130
00:40:50,000 --> 00:40:52,800
uh that then they had nist advertises

1131
00:40:52,800 --> 00:40:54,560
the greatest thing since sliced bread it

1132
00:40:54,560 --> 00:40:56,480
became obvious that our trust was uh

1133
00:40:56,480 --> 00:40:58,640
misplaced in nsa so

1134
00:40:58,640 --> 00:41:01,359
and we also had a bunch of open issues

1135
00:41:01,359 --> 00:41:04,400
that presumably were important um that

1136
00:41:04,400 --> 00:41:06,720
are never addressed and then we have

1137
00:41:06,720 --> 00:41:09,359
rules for locating esappy properties

1138
00:41:09,359 --> 00:41:10,560
that are just i think way too

1139
00:41:10,560 --> 00:41:13,200
complicated

1140
00:41:13,760 --> 00:41:15,760
so like regarding the issues that were

1141
00:41:15,760 --> 00:41:17,520
never addressed right

1142
00:41:17,520 --> 00:41:21,920
if you add these up we have like 112

1143
00:41:21,920 --> 00:41:25,119
potentially important issues

1144
00:41:25,119 --> 00:41:26,640
that have been ignored

1145
00:41:26,640 --> 00:41:29,359
or forgotten or whatever right um swift

1146
00:41:29,359 --> 00:41:31,680
under drug i don't know but as far as i

1147
00:41:31,680 --> 00:41:33,440
know none of them have ever been like

1148
00:41:33,440 --> 00:41:36,079
turned into github issues and worked on

1149
00:41:36,079 --> 00:41:37,599
and um

1150
00:41:37,599 --> 00:41:40,319
you know presumably they were at least

1151
00:41:40,319 --> 00:41:42,800
important to the author at one point in

1152
00:41:42,800 --> 00:41:44,079
time

1153
00:41:44,079 --> 00:41:46,319
right so

1154
00:41:46,319 --> 00:41:48,880
i i have no idea i mean i've not even

1155
00:41:48,880 --> 00:41:50,560
looked there's so many of them that i've

1156
00:41:50,560 --> 00:41:52,960
not even looked through all of them now

1157
00:41:52,960 --> 00:41:54,960
truth in advertising all the ones that

1158
00:41:54,960 --> 00:41:58,800
are listed as open issue and discuss

1159
00:41:58,800 --> 00:42:01,280
were ones that i added

1160
00:42:01,280 --> 00:42:03,040
as flags

1161
00:42:03,040 --> 00:42:05,760
or basically with the expectation that

1162
00:42:05,760 --> 00:42:07,680
we were going to do

1163
00:42:07,680 --> 00:42:09,599
code review and i was going to get

1164
00:42:09,599 --> 00:42:12,160
feedback on these things but like

1165
00:42:12,160 --> 00:42:14,480
the nsa never even

1166
00:42:14,480 --> 00:42:16,240
you know asked about them i i asked

1167
00:42:16,240 --> 00:42:18,000
about a few of them that were there

1168
00:42:18,000 --> 00:42:19,920
there was used to be like more open

1169
00:42:19,920 --> 00:42:21,680
issues and discuss things

1170
00:42:21,680 --> 00:42:24,160
and and i deleted a couple because i got

1171
00:42:24,160 --> 00:42:27,280
to talk to some of the nsa people

1172
00:42:27,280 --> 00:42:28,640
but um

1173
00:42:28,640 --> 00:42:30,560
you know

1174
00:42:30,560 --> 00:42:32,880
if we're not doing these things

1175
00:42:32,880 --> 00:42:34,800
it feels like nobody's really

1176
00:42:34,800 --> 00:42:37,920
watching what's going on right

1177
00:42:37,920 --> 00:42:39,920
at least to me

1178
00:42:39,920 --> 00:42:43,520
um so the other thing is um

1179
00:42:43,520 --> 00:42:46,000
finding the esappy properties

1180
00:42:46,000 --> 00:42:47,599
you know how how do you locate that

1181
00:42:47,599 --> 00:42:49,680
esappy properties file okay so i want to

1182
00:42:49,680 --> 00:42:51,359
say right now

1183
00:42:51,359 --> 00:42:52,880
the single most frequently asked

1184
00:42:52,880 --> 00:42:56,079
question on stack overflow about esappy

1185
00:42:56,079 --> 00:42:57,119
is

1186
00:42:57,119 --> 00:43:00,079
help my implementation can't find the

1187
00:43:00,079 --> 00:43:03,040
esappy properties right and it's just

1188
00:43:03,040 --> 00:43:05,200
it's because it's really complicated

1189
00:43:05,200 --> 00:43:08,160
right it's documented in not in the

1190
00:43:08,160 --> 00:43:10,319
interface right because hey the

1191
00:43:10,319 --> 00:43:12,160
interface shouldn't tell you how to find

1192
00:43:12,160 --> 00:43:13,520
it right it's the it's the

1193
00:43:13,520 --> 00:43:15,440
implementation that decides that but

1194
00:43:15,440 --> 00:43:17,440
people don't normally go and look in the

1195
00:43:17,440 --> 00:43:20,480
default security configuration which is

1196
00:43:20,480 --> 00:43:23,440
the implementation

1197
00:43:24,880 --> 00:43:26,000
and one of the few things that you

1198
00:43:26,000 --> 00:43:27,359
really can't

1199
00:43:27,359 --> 00:43:28,640
can't change the implementation of

1200
00:43:28,640 --> 00:43:30,400
unless you want to rewrite some

1201
00:43:30,400 --> 00:43:35,119
significant parts of esappy right but um

1202
00:43:35,119 --> 00:43:36,640
the rules

1203
00:43:36,640 --> 00:43:39,040
just so you know roughly are

1204
00:43:39,040 --> 00:43:41,280
you first look inside of a directory

1205
00:43:41,280 --> 00:43:42,960
that's set with a call

1206
00:43:42,960 --> 00:43:44,640
a security config well not security

1207
00:43:44,640 --> 00:43:47,760
config well yeah it's actually there's a

1208
00:43:47,760 --> 00:43:48,960
esappy

1209
00:43:48,960 --> 00:43:52,400
dot something i think it's esappy dot

1210
00:43:52,400 --> 00:43:54,400
security configuration dot

1211
00:43:54,400 --> 00:43:56,240
set resource directory

1212
00:43:56,240 --> 00:43:57,280
uh full

1213
00:43:57,280 --> 00:43:59,200
uh path name or something like that

1214
00:43:59,200 --> 00:44:01,680
um so you can do that or you can and

1215
00:44:01,680 --> 00:44:03,119
you'd have to like do that in a like a

1216
00:44:03,119 --> 00:44:05,440
startup class of some kind before you

1217
00:44:05,440 --> 00:44:07,680
use zapier

1218
00:44:07,680 --> 00:44:09,920
or you can set it with a system dot get

1219
00:44:09,920 --> 00:44:12,480
property you can set the property or

1220
00:44:12,480 --> 00:44:14,880
wash dot esappy dot resources to some

1221
00:44:14,880 --> 00:44:18,000
directory to look in or you can

1222
00:44:18,000 --> 00:44:21,440
set um it'll look also if that's not if

1223
00:44:21,440 --> 00:44:22,800
you don't find it from those first two

1224
00:44:22,800 --> 00:44:24,560
steps it'll look under the system

1225
00:44:24,560 --> 00:44:26,400
property user dot home

1226
00:44:26,400 --> 00:44:28,160
under

1227
00:44:28,160 --> 00:44:31,280
the slash esappy directory or then for

1228
00:44:31,280 --> 00:44:33,280
background compatibility the slash dot

1229
00:44:33,280 --> 00:44:35,680
esappy directory

1230
00:44:35,680 --> 00:44:37,119
and if it doesn't find those then it'll

1231
00:44:37,119 --> 00:44:39,599
look under the first esappy directory

1232
00:44:39,599 --> 00:44:41,920
for the class pat on the class path

1233
00:44:41,920 --> 00:44:44,160
for several different class path loaders

1234
00:44:44,160 --> 00:44:46,240
which i've basically excluded here just

1235
00:44:46,240 --> 00:44:49,040
to avoid clutter right but there's like

1236
00:44:49,040 --> 00:44:50,640
i think three or four different class

1237
00:44:50,640 --> 00:44:52,480
path loaders that it looks through

1238
00:44:52,480 --> 00:44:54,079
uh and if it doesn't find it there then

1239
00:44:54,079 --> 00:44:56,000
it goes back and tries again with dot e

1240
00:44:56,000 --> 00:44:57,280
sappy

1241
00:44:57,280 --> 00:44:59,280
which i'm not sure anybody why anybody

1242
00:44:59,280 --> 00:45:01,040
would put that in a jar or a war or

1243
00:45:01,040 --> 00:45:02,319
whatever but

1244
00:45:02,319 --> 00:45:03,440
i mean a dot

1245
00:45:03,440 --> 00:45:06,240
directory but um i suppose they could

1246
00:45:06,240 --> 00:45:08,400
um

1247
00:45:08,400 --> 00:45:11,599
anyway so you know if that doesn't you

1248
00:45:11,599 --> 00:45:14,640
know find if it does get found it stops

1249
00:45:14,640 --> 00:45:17,040
looking and it logs it's a standard

1250
00:45:17,040 --> 00:45:19,359
output but a lot of people have disabled

1251
00:45:19,359 --> 00:45:21,520
that standard output logging because

1252
00:45:21,520 --> 00:45:23,520
it's this noisy especially when you run

1253
00:45:23,520 --> 00:45:26,000
tests

1254
00:45:26,720 --> 00:45:28,879
so

1255
00:45:29,760 --> 00:45:33,040
in conclusion right um

1256
00:45:33,040 --> 00:45:36,160
i think monolithic libraries are a thing

1257
00:45:36,160 --> 00:45:37,440
of the past

1258
00:45:37,440 --> 00:45:39,599
back when we started this and when this

1259
00:45:39,599 --> 00:45:41,359
was started and originally designed in

1260
00:45:41,359 --> 00:45:44,079
2007 we didn't have things

1261
00:45:44,079 --> 00:45:45,599
well i mean there may have been things

1262
00:45:45,599 --> 00:45:47,200
like there certainly was micro

1263
00:45:47,200 --> 00:45:48,960
architectures and micro kernels and

1264
00:45:48,960 --> 00:45:50,720
things like that but they weren't as

1265
00:45:50,720 --> 00:45:52,560
popular as they are today we didn't have

1266
00:45:52,560 --> 00:45:54,400
mobile micro services and things like

1267
00:45:54,400 --> 00:45:55,520
that

1268
00:45:55,520 --> 00:45:56,640
um

1269
00:45:56,640 --> 00:45:58,560
i i think that um

1270
00:45:58,560 --> 00:46:00,480
the big problem with monolithic

1271
00:46:00,480 --> 00:46:02,400
libraries is this flat out makes things

1272
00:46:02,400 --> 00:46:04,000
too brittle it makes things too hard to

1273
00:46:04,000 --> 00:46:05,119
change

1274
00:46:05,119 --> 00:46:06,880
um

1275
00:46:06,880 --> 00:46:08,720
and in

1276
00:46:08,720 --> 00:46:12,800
esappy 3 which we have

1277
00:46:12,800 --> 00:46:17,040
lovingly started calling three sappy uh

1278
00:46:17,040 --> 00:46:18,960
um it's gonna be done very differently

1279
00:46:18,960 --> 00:46:21,200
and that's kind of another talk but

1280
00:46:21,200 --> 00:46:22,079
um

1281
00:46:22,079 --> 00:46:25,119
and shout out to uh oh yeah that's his

1282
00:46:25,119 --> 00:46:27,359
name jeremiah stacy

1283
00:46:27,359 --> 00:46:30,240
is um the other major contributor

1284
00:46:30,240 --> 00:46:32,000
contributor to

1285
00:46:32,000 --> 00:46:34,160
besides matt styles so shout out to

1286
00:46:34,160 --> 00:46:36,560
jeremiah for for that clever name

1287
00:46:36,560 --> 00:46:38,079
unfortunately we won't actually be able

1288
00:46:38,079 --> 00:46:39,280
to use it

1289
00:46:39,280 --> 00:46:42,880
uh as a formal name because you can't

1290
00:46:42,880 --> 00:46:44,800
start like a package name

1291
00:46:44,800 --> 00:46:46,960
with like can't do or dot

1292
00:46:46,960 --> 00:46:48,200
you know

1293
00:46:48,200 --> 00:46:49,760
owasp.3sappy because you can't start

1294
00:46:49,760 --> 00:46:51,119
with three and we don't really want to

1295
00:46:51,119 --> 00:46:53,359
spell it out so

1296
00:46:53,359 --> 00:46:54,480
anyways

1297
00:46:54,480 --> 00:46:55,440
so

1298
00:46:55,440 --> 00:46:57,839
that's it anybody questions are we about

1299
00:46:57,839 --> 00:47:01,119
at the question time

