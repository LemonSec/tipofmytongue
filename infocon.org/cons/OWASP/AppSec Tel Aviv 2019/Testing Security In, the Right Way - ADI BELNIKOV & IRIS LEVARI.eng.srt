1
00:00:00,210 --> 00:00:07,259
we need to test security in this seems a

2
00:00:04,529 --> 00:00:12,780
little bit obvious and this table will

3
00:00:07,259 --> 00:00:22,020
show you how to integrate okay in this

4
00:00:12,780 --> 00:00:25,619
talk we'll show you how to empower your

5
00:00:22,020 --> 00:00:28,519
QA and integrate more testing into the

6
00:00:25,619 --> 00:00:31,800
QA phase of the development lifecycle

7
00:00:28,519 --> 00:00:36,000
okay so my name is Adi Belenko

8
00:00:31,800 --> 00:00:38,309
I started as automation tester and after

9
00:00:36,000 --> 00:00:43,019
that he worked as a full-stack developer

10
00:00:38,309 --> 00:00:43,649
and done cybersecurity my name is iris

11
00:00:43,020 --> 00:00:45,930
levar

12
00:00:43,649 --> 00:00:48,739
I've been integrating wrapping security

13
00:00:45,930 --> 00:00:52,769
testing to STC for the past 11 years in

14
00:00:48,739 --> 00:00:55,260
this talk Adi and I will explain the

15
00:00:52,770 --> 00:00:58,949
process that we actually implemented in

16
00:00:55,260 --> 00:01:02,329
two companies for the past two years in

17
00:00:58,949 --> 00:01:05,128
multiple QA teams and with great success

18
00:01:02,329 --> 00:01:07,500
and we know what works what doesn't work

19
00:01:05,129 --> 00:01:14,549
and we will show how how to make this

20
00:01:07,500 --> 00:01:16,909
work for you as well okay so as as more

21
00:01:14,549 --> 00:01:19,170
more companies are transitioning from

22
00:01:16,909 --> 00:01:21,659
waterfall methodology to agile

23
00:01:19,170 --> 00:01:24,030
methodology there are more and more

24
00:01:21,659 --> 00:01:27,770
there is a high increase in the number

25
00:01:24,030 --> 00:01:27,770
of releases per year

26
00:01:31,439 --> 00:01:37,859
and as a result and what we had time in

27
00:01:35,130 --> 00:01:41,789
water for methodology we don't have time

28
00:01:37,859 --> 00:01:43,949
in agile methodology we don't have the

29
00:01:41,789 --> 00:01:46,590
time the time slot to do the security

30
00:01:43,950 --> 00:01:49,469
testing therefore the solution that we

31
00:01:46,590 --> 00:01:54,229
are going to talk about is using the QA

32
00:01:49,469 --> 00:01:54,229
phase to integrate more security testing

33
00:01:58,969 --> 00:02:03,030
okay

34
00:02:00,149 --> 00:02:05,399
the security team resources are very

35
00:02:03,030 --> 00:02:06,379
limited they are constrained this is

36
00:02:05,399 --> 00:02:09,329
nothing new

37
00:02:06,379 --> 00:02:12,780
also the result of this situation that

38
00:02:09,329 --> 00:02:15,480
the the versions work going up to

39
00:02:12,780 --> 00:02:17,549
production with no security at all this

40
00:02:15,480 --> 00:02:21,179
is not new either

41
00:02:17,549 --> 00:02:23,040
so who among us in the audience didn't

42
00:02:21,180 --> 00:02:27,329
push an unprotected version to

43
00:02:23,040 --> 00:02:29,760
production in the past it's okay raise

44
00:02:27,329 --> 00:02:32,060
your hand the safe place we will not

45
00:02:29,760 --> 00:02:41,190
judge you because we have all done that

46
00:02:32,060 --> 00:02:43,769
meter okay okay so often we talk about

47
00:02:41,190 --> 00:02:48,180
developer but we rarely mentioned the QA

48
00:02:43,769 --> 00:02:50,880
team so we propose to the solving the

49
00:02:48,180 --> 00:02:56,310
problem by working together with the QA

50
00:02:50,880 --> 00:02:59,880
team and will they help us to perform

51
00:02:56,310 --> 00:03:02,489
the security testing in best of our

52
00:02:59,880 --> 00:03:05,668
experience the QA team and the security

53
00:03:02,489 --> 00:03:08,130
team can work very well together why we

54
00:03:05,669 --> 00:03:10,980
choose the QA team because they are

55
00:03:08,130 --> 00:03:13,500
running the test in every sprint they

56
00:03:10,980 --> 00:03:16,918
sneaking out of the box and they already

57
00:03:13,500 --> 00:03:19,380
have environment ready and they know the

58
00:03:16,919 --> 00:03:21,180
application very well the business and

59
00:03:19,380 --> 00:03:23,880
the functionality and because of that

60
00:03:21,180 --> 00:03:27,209
it's very easy to insert additional test

61
00:03:23,880 --> 00:03:30,180
cases so right now the QA team already

62
00:03:27,209 --> 00:03:33,450
perform some security testing they not

63
00:03:30,180 --> 00:03:36,299
aware about that that is this testing is

64
00:03:33,450 --> 00:03:39,030
also relevant for the security and

65
00:03:36,299 --> 00:03:43,049
because of that the application security

66
00:03:39,030 --> 00:03:44,730
not aware that this test already done so

67
00:03:43,049 --> 00:03:48,300
we want to increase

68
00:03:44,730 --> 00:03:51,260
the security coverage for the Q ATM and

69
00:03:48,300 --> 00:03:54,750
to give the visibility to the

70
00:03:51,260 --> 00:03:58,769
application security team so this is the

71
00:03:54,750 --> 00:04:01,140
list of security testing area for QA for

72
00:03:58,770 --> 00:04:07,140
example authentication and authorization

73
00:04:01,140 --> 00:04:11,609
of such as such and handling password

74
00:04:07,140 --> 00:04:16,529
weak password access to direct direct

75
00:04:11,610 --> 00:04:19,140
access also since sending sensitive data

76
00:04:16,529 --> 00:04:22,919
in get requests upload huge file or

77
00:04:19,140 --> 00:04:25,849
files that contain malicious code SSL

78
00:04:22,920 --> 00:04:29,730
and TLS version and weak ciphers

79
00:04:25,850 --> 00:04:32,430
security response others such as XSS

80
00:04:29,730 --> 00:04:36,750
protection clickjacking and arrow and

81
00:04:32,430 --> 00:04:40,830
the link ok this is the actual process

82
00:04:36,750 --> 00:04:43,530
for a system-level workflow and we'll

83
00:04:40,830 --> 00:04:46,979
take this one by one so the first step

84
00:04:43,530 --> 00:04:49,229
in this first so these are the steps and

85
00:04:46,980 --> 00:04:51,560
the responsible parties in the first

86
00:04:49,230 --> 00:04:54,360
step the application security person

87
00:04:51,560 --> 00:04:57,000
working with the system architect or the

88
00:04:54,360 --> 00:04:59,940
product develop the product manager

89
00:04:57,000 --> 00:05:03,260
review the feature the system features

90
00:04:59,940 --> 00:05:07,110
the high-level overview and the

91
00:05:03,260 --> 00:05:09,240
sensitive data if the system contains

92
00:05:07,110 --> 00:05:12,930
sensitive data all contains sensitive

93
00:05:09,240 --> 00:05:15,060
functionality then there is really

94
00:05:12,930 --> 00:05:18,030
reason to do security testing otherwise

95
00:05:15,060 --> 00:05:21,390
there is no security there is no no

96
00:05:18,030 --> 00:05:24,469
point in doing security testing if it's

97
00:05:21,390 --> 00:05:26,640
relevant then in the second phase the

98
00:05:24,470 --> 00:05:28,320
application security person does the

99
00:05:26,640 --> 00:05:31,469
threat modeling it does the data

100
00:05:28,320 --> 00:05:35,099
analysis the architecture and the

101
00:05:31,470 --> 00:05:38,880
business logic review trying to think

102
00:05:35,100 --> 00:05:41,280
about relevant use cases in the next

103
00:05:38,880 --> 00:05:44,120
step the application security together

104
00:05:41,280 --> 00:05:47,159
with the QA manager or the QA person

105
00:05:44,120 --> 00:05:51,510
review existing use cases test cases

106
00:05:47,160 --> 00:05:52,479
that are in the test suite to review if

107
00:05:51,510 --> 00:05:55,300
the

108
00:05:52,479 --> 00:05:58,120
QA is already doing some testing in in

109
00:05:55,300 --> 00:06:01,479
those areas that we mentioned before if

110
00:05:58,120 --> 00:06:06,129
yes then he can elaborate on that or he

111
00:06:01,479 --> 00:06:07,960
can write new test cases with the QA so

112
00:06:06,129 --> 00:06:09,909
this is the heart of the matter we are

113
00:06:07,960 --> 00:06:14,229
working with them this is a joint

114
00:06:09,909 --> 00:06:17,800
process where in any step of the of the

115
00:06:14,229 --> 00:06:22,300
process we are working with the QA in

116
00:06:17,800 --> 00:06:25,509
the last step the QA person integrates

117
00:06:22,300 --> 00:06:29,979
the test into the automatic test suite

118
00:06:25,509 --> 00:06:32,919
and run it and open the tickets he is

119
00:06:29,979 --> 00:06:33,878
supposed to do to do that and tag it as

120
00:06:32,919 --> 00:06:36,669
security-related

121
00:06:33,879 --> 00:06:39,879
so this is the system level process this

122
00:06:36,669 --> 00:06:42,818
is done on a major version or first time

123
00:06:39,879 --> 00:06:47,319
that you are doing any security review

124
00:06:42,819 --> 00:06:51,009
on the on the system itself this is the

125
00:06:47,319 --> 00:06:53,050
feature level process this is a quicker

126
00:06:51,009 --> 00:06:54,699
than the system level process because

127
00:06:53,050 --> 00:06:58,120
it's done only on the feature that are

128
00:06:54,699 --> 00:07:01,120
in scope in the specific sprint so for

129
00:06:58,120 --> 00:07:04,539
every feature the application security

130
00:07:01,120 --> 00:07:06,729
person does a feature review with the

131
00:07:04,539 --> 00:07:09,580
developer with the specific feature

132
00:07:06,729 --> 00:07:12,729
developer it overview the functionality

133
00:07:09,580 --> 00:07:16,169
and the data if sensitive data or

134
00:07:12,729 --> 00:07:19,930
sensitive functionality is related then

135
00:07:16,169 --> 00:07:22,479
process continues and he does the asset

136
00:07:19,930 --> 00:07:26,110
and the business logic analysis based on

137
00:07:22,479 --> 00:07:28,770
dirty he and the QA fill up a form that

138
00:07:26,110 --> 00:07:33,990
I will show in the next slide that

139
00:07:28,770 --> 00:07:38,289
analyzed the use case and the write the

140
00:07:33,990 --> 00:07:41,379
specific steps to test the next step the

141
00:07:38,289 --> 00:07:46,930
QA performs the automatic testing and

142
00:07:41,379 --> 00:07:50,050
open the JIRA tickets okay so let's do a

143
00:07:46,930 --> 00:07:52,479
quick simulation this is login page it's

144
00:07:50,050 --> 00:07:54,430
very simple functionality the user

145
00:07:52,479 --> 00:07:58,508
insert the username the password and

146
00:07:54,430 --> 00:08:01,959
after that click on the login button so

147
00:07:58,509 --> 00:08:02,480
it's very simple scenario but there is a

148
00:08:01,959 --> 00:08:05,600
lot

149
00:08:02,480 --> 00:08:10,060
test that the QA can perform for example

150
00:08:05,600 --> 00:08:14,330
user enumeration you can for example add

151
00:08:10,060 --> 00:08:17,900
analyze the error message it can check

152
00:08:14,330 --> 00:08:20,599
the lockout mechanism to see the gate

153
00:08:17,900 --> 00:08:23,330
request if it's and sensitive data on

154
00:08:20,600 --> 00:08:27,320
the get request and there is a lot of

155
00:08:23,330 --> 00:08:34,159
test for only simple functionality like

156
00:08:27,320 --> 00:08:36,380
that ok so in the process the

157
00:08:34,159 --> 00:08:40,100
application security person with the QA

158
00:08:36,380 --> 00:08:42,860
person fill up this form in this form

159
00:08:40,100 --> 00:08:45,290
does the name of the test the

160
00:08:42,860 --> 00:08:49,100
vulnerability description remember the

161
00:08:45,290 --> 00:08:50,689
QA there are nice people but they don't

162
00:08:49,100 --> 00:08:52,850
have the knowledge that they need us to

163
00:08:50,690 --> 00:08:54,860
provide them so the vulnerabilities

164
00:08:52,850 --> 00:08:57,620
description is very important because it

165
00:08:54,860 --> 00:09:00,380
gives the rationale it explains what the

166
00:08:57,620 --> 00:09:04,610
vulnerabilities are actually is how the

167
00:09:00,380 --> 00:09:07,840
attacker can exploit it and what are the

168
00:09:04,610 --> 00:09:12,770
possible outcomes in the test another

169
00:09:07,840 --> 00:09:15,470
simple test steps like which are very

170
00:09:12,770 --> 00:09:18,380
common knowledge to the QA because they

171
00:09:15,470 --> 00:09:23,120
are doing this all the time like enter

172
00:09:18,380 --> 00:09:27,560
valid username non valid password repeat

173
00:09:23,120 --> 00:09:29,870
10 times then check again with valid

174
00:09:27,560 --> 00:09:32,479
username and valid password verify that

175
00:09:29,870 --> 00:09:37,040
the user is locked out if it's locked

176
00:09:32,480 --> 00:09:39,260
out wait for the amount of time for the

177
00:09:37,040 --> 00:09:42,829
release automatic release time and check

178
00:09:39,260 --> 00:09:45,920
the automatic release parameter in the

179
00:09:42,830 --> 00:09:49,040
recommendation part of the form we

180
00:09:45,920 --> 00:09:51,620
specify exactly what are the best

181
00:09:49,040 --> 00:09:54,079
practice expected results

182
00:09:51,620 --> 00:09:56,960
what headers for example to expect if

183
00:09:54,080 --> 00:09:59,740
it's okay what behavior to expect if

184
00:09:56,960 --> 00:09:59,740
it's not ok

185
00:10:04,030 --> 00:10:10,430
these are actual tests test cases that

186
00:10:07,900 --> 00:10:17,199
the screenshots that we took from our

187
00:10:10,430 --> 00:10:20,900
test Suites I have in my company many QA

188
00:10:17,200 --> 00:10:23,270
products many QA teams any one of them

189
00:10:20,900 --> 00:10:29,000
is using the difference this test suite

190
00:10:23,270 --> 00:10:33,230
so the test was on variant but the tests

191
00:10:29,000 --> 00:10:36,410
are all the same so the text data is the

192
00:10:33,230 --> 00:10:41,240
same so it doesn't matter if it's the

193
00:10:36,410 --> 00:10:44,360
suite is different but since we are

194
00:10:41,240 --> 00:10:47,060
feeling the same form in the end the QA

195
00:10:44,360 --> 00:10:52,460
person is entering it into its own test

196
00:10:47,060 --> 00:10:55,520
suite so here we can see that steps test

197
00:10:52,460 --> 00:10:58,490
cases who lockout mechanism for exercise

198
00:10:55,520 --> 00:11:02,540
filter for TLS 1.0 check-in and for

199
00:10:58,490 --> 00:11:05,680
click tracking protection and do you

200
00:11:02,540 --> 00:11:09,920
want explain the benefit for the ATM

201
00:11:05,680 --> 00:11:12,050
engine the benefit for the QA team is

202
00:11:09,920 --> 00:11:16,699
that they are getting empowered they're

203
00:11:12,050 --> 00:11:21,079
getting knowledgeable and getting to be

204
00:11:16,700 --> 00:11:23,960
more valuable to the company from my

205
00:11:21,080 --> 00:11:28,100
experience there are feeling pretty

206
00:11:23,960 --> 00:11:31,670
awesome after after doing this phase the

207
00:11:28,100 --> 00:11:33,140
feedbacks are always surprising usually

208
00:11:31,670 --> 00:11:35,300
they say okay don't you need the

209
00:11:33,140 --> 00:11:37,370
developers here with with you in the

210
00:11:35,300 --> 00:11:40,400
meeting no no this is only for the test

211
00:11:37,370 --> 00:11:43,040
persons and then they say okay are you

212
00:11:40,400 --> 00:11:45,410
doing any security testing no we are not

213
00:11:43,040 --> 00:11:47,599
doing any security testing okay can you

214
00:11:45,410 --> 00:11:50,959
show me the login test that you are

215
00:11:47,600 --> 00:11:56,090
doing ah of course and then you see tons

216
00:11:50,960 --> 00:11:58,250
and tons of login checks break out of

217
00:11:56,090 --> 00:12:02,420
logins termination in the middle of

218
00:11:58,250 --> 00:12:04,730
login cookie manipulation which are

219
00:12:02,420 --> 00:12:07,310
they're just not aware that these are

220
00:12:04,730 --> 00:12:10,850
these are part of the security test that

221
00:12:07,310 --> 00:12:13,250
we are actually conducting so

222
00:12:10,850 --> 00:12:16,340
in this cases we are getting very good

223
00:12:13,250 --> 00:12:19,250
feedback from them because they're they

224
00:12:16,340 --> 00:12:23,150
feel that we understand the use case the

225
00:12:19,250 --> 00:12:25,100
we review it we find some use cases that

226
00:12:23,150 --> 00:12:29,420
they didn't think about and we add them

227
00:12:25,100 --> 00:12:31,490
and from then on it's automatic every

228
00:12:29,420 --> 00:12:34,010
sprint we're not touching anything and

229
00:12:31,490 --> 00:12:40,070
they're happy and we're happy and this

230
00:12:34,010 --> 00:12:42,350
is a win-win situation okay so we win we

231
00:12:40,070 --> 00:12:45,020
want to increase the amount and the

232
00:12:42,350 --> 00:12:49,490
coverage of the security testing by

233
00:12:45,020 --> 00:12:52,069
using existing resources we don't do any

234
00:12:49,490 --> 00:12:55,730
change on the process we just use

235
00:12:52,070 --> 00:12:58,430
existing resources in addition we give

236
00:12:55,730 --> 00:13:03,430
the security team visibility to the

237
00:12:58,430 --> 00:13:03,430
effect that found by the testing

238
00:13:03,730 --> 00:13:11,410
questions yes

239
00:13:27,570 --> 00:13:35,290
okay first I think they think that this

240
00:13:30,519 --> 00:13:37,240
is not relevant for them then there are

241
00:13:35,290 --> 00:13:38,860
a little bit surprised that we are

242
00:13:37,240 --> 00:13:40,839
speaking the same language because we

243
00:13:38,860 --> 00:13:44,350
are talking about test cases and about

244
00:13:40,839 --> 00:13:48,040
steps and then when we do a drill down

245
00:13:44,350 --> 00:13:50,260
which we usually take the common common

246
00:13:48,040 --> 00:13:55,029
subject and we give examples and then

247
00:13:50,260 --> 00:13:56,500
they say oh we have that this was really

248
00:13:55,029 --> 00:13:59,829
surprising because I was explaining

249
00:13:56,500 --> 00:14:02,140
error messages and what information the

250
00:13:59,829 --> 00:14:04,660
hacker can extract from error messages

251
00:14:02,140 --> 00:14:07,000
and that they said oh we have that we

252
00:14:04,660 --> 00:14:09,189
have that in two places and then I said

253
00:14:07,000 --> 00:14:12,130
within the same meeting okay so let's

254
00:14:09,190 --> 00:14:13,990
open up the ticket can you show me and

255
00:14:12,130 --> 00:14:16,570
he showed me three places

256
00:14:13,990 --> 00:14:19,930
he opened as a result of the one-hour

257
00:14:16,570 --> 00:14:21,399
meeting fourth JIRA tickets and he

258
00:14:19,930 --> 00:14:24,250
handled it himself

259
00:14:21,399 --> 00:14:26,890
the next version was already fixed this

260
00:14:24,250 --> 00:14:28,870
for geo tickets were already fixed in

261
00:14:26,890 --> 00:14:30,970
the next version so this was very

262
00:14:28,870 --> 00:14:34,500
surprising for me because to get

263
00:14:30,970 --> 00:14:38,020
developers to open tickets it's somewhat

264
00:14:34,500 --> 00:14:41,350
it's not out of it it's not knowing as

265
00:14:38,020 --> 00:14:44,170
it was flowing with the QA so he said

266
00:14:41,350 --> 00:14:47,500
okay I know this I want to push this and

267
00:14:44,170 --> 00:14:50,260
he just handled the whole process from

268
00:14:47,500 --> 00:14:55,899
there on so it was really really simple

269
00:14:50,260 --> 00:14:58,689
for us so it streamlined everything and

270
00:14:55,899 --> 00:15:01,510
I did that with QA team leaders and I

271
00:14:58,690 --> 00:15:02,860
did that also with the team members it

272
00:15:01,510 --> 00:15:06,699
doesn't matter they are speaking the

273
00:15:02,860 --> 00:15:09,190
same language I was like they are first

274
00:15:06,699 --> 00:15:12,490
intimidated because we are the bad guys

275
00:15:09,190 --> 00:15:16,420
we are the bad wolf darth vader's like

276
00:15:12,490 --> 00:15:18,699
and and when they saw talking

277
00:15:16,420 --> 00:15:20,319
communicated they see that we speak the

278
00:15:18,699 --> 00:15:25,229
same language as them and then

279
00:15:20,320 --> 00:15:25,230
everything makes its getting simpler

280
00:15:25,950 --> 00:15:33,750
more question more question actually I

281
00:15:30,300 --> 00:15:40,680
did I did try to integrate you a three

282
00:15:33,750 --> 00:15:43,680
times than an actual question I think

283
00:15:40,680 --> 00:15:45,510
there it's not that QA and testing is

284
00:15:43,680 --> 00:15:48,060
new but the whole point of giving an

285
00:15:45,510 --> 00:15:50,279
actual methodology of simple issues to

286
00:15:48,060 --> 00:15:53,399
find for QA would probably make a good

287
00:15:50,279 --> 00:15:56,100
or a project but I kind of like

288
00:15:53,399 --> 00:15:57,980
producing a document that you can just

289
00:15:56,100 --> 00:15:59,760
hand out as a giveaway to organizations

290
00:15:57,980 --> 00:16:02,760
just something to consider

291
00:15:59,760 --> 00:16:05,970
thank you very much it's a good idea we

292
00:16:02,760 --> 00:16:08,610
thought about doing that we will publish

293
00:16:05,970 --> 00:16:11,940
after the after the conference in our

294
00:16:08,610 --> 00:16:16,050
github and Excel with all the all the

295
00:16:11,940 --> 00:16:21,720
testing areas which are very simple they

296
00:16:16,050 --> 00:16:24,089
don't need to do elaborated XSS test

297
00:16:21,720 --> 00:16:26,370
this is not what we are expecting we're

298
00:16:24,089 --> 00:16:31,980
giving them all the only the tests that

299
00:16:26,370 --> 00:16:35,970
are very simple and more common and will

300
00:16:31,980 --> 00:16:40,019
be easy for a QA to implement so I tried

301
00:16:35,970 --> 00:16:43,170
that doing that turning QA into a pen

302
00:16:40,019 --> 00:16:47,000
tester I felt two times in two different

303
00:16:43,170 --> 00:16:50,130
companies I'm not doing that anymore

304
00:16:47,000 --> 00:16:52,490
no this is not the plan so if they are

305
00:16:50,130 --> 00:16:55,350
checking TLS 1.0 because they are

306
00:16:52,490 --> 00:16:57,540
right-clicking on the certificate if

307
00:16:55,350 --> 00:17:00,180
they are checking headers which is

308
00:16:57,540 --> 00:17:02,579
simple if they are checking file upload

309
00:17:00,180 --> 00:17:07,678
which is very simple if they are doing

310
00:17:02,579 --> 00:17:12,059
login break out which they are doing in

311
00:17:07,679 --> 00:17:13,679
any case so we start by doing the things

312
00:17:12,059 --> 00:17:16,049
that they are already doing and doing a

313
00:17:13,679 --> 00:17:18,900
little bit of variations and then it

314
00:17:16,049 --> 00:17:20,689
looks normal to them because we are not

315
00:17:18,900 --> 00:17:24,620
turning them into a pen testers

316
00:17:20,689 --> 00:17:30,420
full-fledged pen testing is different

317
00:17:24,619 --> 00:17:32,620
okay more questions I'm sorry

318
00:17:30,420 --> 00:17:35,980
you find that it's better to have

319
00:17:32,620 --> 00:17:38,709
dedicated security champions in QA or to

320
00:17:35,980 --> 00:17:41,050
have the knowledge transmitted as

321
00:17:38,710 --> 00:17:47,320
broadly as possible okay

322
00:17:41,050 --> 00:17:48,580
I fall for the broader but you you need

323
00:17:47,320 --> 00:17:53,169
to start with somebody

324
00:17:48,580 --> 00:17:56,679
so my recommendation start with the team

325
00:17:53,170 --> 00:17:58,300
with acuity with the team leader start

326
00:17:56,680 --> 00:18:02,740
with the team leader if if the team

327
00:17:58,300 --> 00:18:05,860
leader is not security sensitive or has

328
00:18:02,740 --> 00:18:07,690
no inclination to towards security then

329
00:18:05,860 --> 00:18:10,830
take another person in the QA team who

330
00:18:07,690 --> 00:18:13,210
is more interested and start

331
00:18:10,830 --> 00:18:16,120
infiltrating into the QA team from that

332
00:18:13,210 --> 00:18:18,790
point of from that door because

333
00:18:16,120 --> 00:18:20,830
eventually we know we want everybody

334
00:18:18,790 --> 00:18:23,530
that the QA teams are getting smaller

335
00:18:20,830 --> 00:18:26,500
and smaller once we had teams seven ten

336
00:18:23,530 --> 00:18:29,680
nine now since everything is automated

337
00:18:26,500 --> 00:18:33,070
three four or even two is more than

338
00:18:29,680 --> 00:18:36,250
normal size so in any case you get the

339
00:18:33,070 --> 00:18:41,200
team leader plus one almost hold the

340
00:18:36,250 --> 00:18:43,810
team I think gradually we're covering

341
00:18:41,200 --> 00:18:48,550
everybody and gradually we can give them

342
00:18:43,810 --> 00:18:50,530
more and more test cases and the best

343
00:18:48,550 --> 00:18:53,020
thing it's automatic and they are doing

344
00:18:50,530 --> 00:18:54,660
this actually in every sprint and I

345
00:18:53,020 --> 00:18:58,540
don't need to tell them

346
00:18:54,660 --> 00:19:01,540
remind them or review anything with with

347
00:18:58,540 --> 00:19:03,930
them because it's automatic more

348
00:19:01,540 --> 00:19:03,930
question

349
00:19:05,620 --> 00:19:15,219
yeah thank you okay thank you very much

350
00:19:08,890 --> 00:19:15,220
[Applause]

