1
00:00:00,530 --> 00:00:02,590
you

2
00:00:04,320 --> 00:00:11,670
so welcome everyone so this is somewhat

3
00:00:08,400 --> 00:00:13,379
light-hearted talk about threat modeling

4
00:00:11,670 --> 00:00:15,650
we'll just describe a talking a little

5
00:00:13,379 --> 00:00:19,619
bit more detail in a moment

6
00:00:15,650 --> 00:00:22,500
firstly a little bit about us I'm my

7
00:00:19,619 --> 00:00:28,198
name is Andrew Lee Thorpe and this is

8
00:00:22,500 --> 00:00:32,730
David Johansen and so I regard myself as

9
00:00:28,199 --> 00:00:36,870
a sort of expert cynic which is a sight

10
00:00:32,729 --> 00:00:39,809
character flaw but it's otherwise kind

11
00:00:36,870 --> 00:00:44,449
of useful for threat modeling which is

12
00:00:39,810 --> 00:00:47,720
one of the things I do a lot at synopsis

13
00:00:44,450 --> 00:00:47,720
amongst other things

14
00:00:51,450 --> 00:00:57,270
hello yep hopefully soon yeah David

15
00:00:54,990 --> 00:00:59,130
Janssen working as synopsis as well with

16
00:00:57,270 --> 00:01:01,170
my colleague Andrew and still working on

17
00:00:59,130 --> 00:01:05,040
their part of being an expert in a cynic

18
00:01:01,170 --> 00:01:07,230
as well but getting there slowly so we

19
00:01:05,040 --> 00:01:08,940
do a lot of different types of work so

20
00:01:07,230 --> 00:01:10,710
we both worked in industry for more than

21
00:01:08,940 --> 00:01:13,770
10 years and done a fair bit of threat

22
00:01:10,710 --> 00:01:15,690
modeling so we the purpose here of this

23
00:01:13,770 --> 00:01:17,490
talk is to share a bit of some stories

24
00:01:15,690 --> 00:01:19,530
and some experience we had and things we

25
00:01:17,490 --> 00:01:21,509
come across at may some of it may be

26
00:01:19,530 --> 00:01:23,070
obvious others issues may not be obvious

27
00:01:21,510 --> 00:01:27,050
at the first class oh just going to

28
00:01:23,070 --> 00:01:27,050
share some lessons learn from from that

29
00:01:29,150 --> 00:01:36,020
so what is threat modeling on on a high

30
00:01:32,400 --> 00:01:39,840
level it's building a model a

31
00:01:36,020 --> 00:01:41,759
representation of the system of a real

32
00:01:39,840 --> 00:01:45,750
system of a complex system and you can

33
00:01:41,760 --> 00:01:47,880
never condense a complex system into a

34
00:01:45,750 --> 00:01:50,070
two dimensional model or even a three

35
00:01:47,880 --> 00:01:52,130
dimensional model it's more than the sum

36
00:01:50,070 --> 00:01:54,929
of its parts and they're usually complex

37
00:01:52,130 --> 00:01:57,240
so it's building a model and then it's

38
00:01:54,930 --> 00:02:00,540
asking questions about the system using

39
00:01:57,240 --> 00:02:05,520
the model so interrogating the model

40
00:02:00,540 --> 00:02:07,799
this is the creative part this is the

41
00:02:05,520 --> 00:02:10,318
analysis part and finally we're not

42
00:02:07,799 --> 00:02:12,329
doing threat modeling unless we we find

43
00:02:10,318 --> 00:02:15,149
some real real threats and we want to

44
00:02:12,329 --> 00:02:15,990
fix them so part of the threat modeling

45
00:02:15,150 --> 00:02:19,140
process is

46
00:02:15,990 --> 00:02:26,490
identifying how to fix the defects that

47
00:02:19,140 --> 00:02:28,529
you find so the process is important our

48
00:02:26,490 --> 00:02:31,050
theory is good but we're not we're not

49
00:02:28,530 --> 00:02:34,710
here to talk about the theory there are

50
00:02:31,050 --> 00:02:36,480
lots of good talks on theory and you

51
00:02:34,710 --> 00:02:38,310
should clearly follow the theory but we

52
00:02:36,480 --> 00:02:40,709
wanted to have a little bit more fun to

53
00:02:38,310 --> 00:02:43,890
show you what sort of things we find in

54
00:02:40,710 --> 00:02:47,660
practice a little bit about how we got

55
00:02:43,890 --> 00:02:55,230
there but so so this talk is about

56
00:02:47,660 --> 00:02:57,300
threat modeling and design flaws so

57
00:02:55,230 --> 00:02:59,010
what's the designer for them there's

58
00:02:57,300 --> 00:03:06,570
like you look at the picture what do you

59
00:02:59,010 --> 00:03:08,040
see yeah it's something that doesn't

60
00:03:06,570 --> 00:03:09,780
look quite right so this is actually a

61
00:03:08,040 --> 00:03:12,929
picture from my home my new flat back in

62
00:03:09,780 --> 00:03:15,270
London and somehow the builders managed

63
00:03:12,930 --> 00:03:17,160
to build the the box's housing my router

64
00:03:15,270 --> 00:03:19,680
in such a way that you can't actually

65
00:03:17,160 --> 00:03:22,290
open the door it's it's stuck on both

66
00:03:19,680 --> 00:03:24,210
end so to say so it's a little bit of a

67
00:03:22,290 --> 00:03:25,560
usability issue if I need to change any

68
00:03:24,210 --> 00:03:27,300
cable so that it's a bit difficult to

69
00:03:25,560 --> 00:03:28,890
get into in fix and it's basically a

70
00:03:27,300 --> 00:03:31,290
poor quality issue right so it's

71
00:03:28,890 --> 00:03:33,779
something that has an impact on the use

72
00:03:31,290 --> 00:03:38,100
may not be a security issue per se but

73
00:03:33,780 --> 00:03:40,140
it's a quota issue at least here if you

74
00:03:38,100 --> 00:03:41,760
look at another example of a design flaw

75
00:03:40,140 --> 00:03:44,100
and some of you probably seen this one

76
00:03:41,760 --> 00:03:45,780
spin around for quite a while but it's

77
00:03:44,100 --> 00:03:48,000
it's quite telling I think this is one

78
00:03:45,780 --> 00:03:49,680
of the most telling stories or threats

79
00:03:48,000 --> 00:03:51,390
moulding is about right it's it's not

80
00:03:49,680 --> 00:03:52,650
only about breaking control and looking

81
00:03:51,390 --> 00:03:54,299
whether there is a control but other

82
00:03:52,650 --> 00:03:56,100
ways around it and we can see here

83
00:03:54,300 --> 00:03:57,240
there's a design flaw in terms of they

84
00:03:56,100 --> 00:03:58,769
had a control and even though the

85
00:03:57,240 --> 00:04:00,660
control might have been perfectly

86
00:03:58,770 --> 00:04:02,640
implemented and very secure there there

87
00:04:00,660 --> 00:04:05,100
are very easy ways around it and we can

88
00:04:02,640 --> 00:04:06,899
see as soon as the first snow starts to

89
00:04:05,100 --> 00:04:08,310
fall that you can quite easily get

90
00:04:06,900 --> 00:04:10,080
around this and we see that that Sasha

91
00:04:08,310 --> 00:04:11,820
what's happening so it's pointing both

92
00:04:10,080 --> 00:04:13,530
through a design flaw here but also to a

93
00:04:11,820 --> 00:04:15,600
very common attack pattern that we

94
00:04:13,530 --> 00:04:17,399
always should try to evaluate when we

95
00:04:15,600 --> 00:04:20,100
are doing threat modeling whether you

96
00:04:17,399 --> 00:04:22,260
can bypass their control so that's what

97
00:04:20,100 --> 00:04:24,150
we mean by design flaw so what we're

98
00:04:22,260 --> 00:04:26,370
gonna do now is look at that I think six

99
00:04:24,150 --> 00:04:28,409
different examples and we're gonna see

100
00:04:26,370 --> 00:04:29,319
some design flaws we encountered in

101
00:04:28,410 --> 00:04:30,759
actual

102
00:04:29,319 --> 00:04:31,809
real life system obviously these have

103
00:04:30,759 --> 00:04:32,649
been changed a little bit and they're

104
00:04:31,809 --> 00:04:34,869
full anonymized

105
00:04:32,649 --> 00:04:36,369
but these are not just made-up things

106
00:04:34,869 --> 00:04:42,099
these are actual things that are based

107
00:04:36,369 --> 00:04:45,129
on applications we come across so the

108
00:04:42,099 --> 00:04:47,409
first one is about who sent the message

109
00:04:45,129 --> 00:04:49,300
and it's about a system that on the

110
00:04:47,409 --> 00:04:50,889
surface had a very good security

111
00:04:49,300 --> 00:04:53,740
controls and looked to be very secure

112
00:04:50,889 --> 00:04:56,529
but in reality it was actually really

113
00:04:53,740 --> 00:04:59,169
hard to to tell who sent the message in

114
00:04:56,529 --> 00:05:02,050
this system so if you look at it first

115
00:04:59,169 --> 00:05:04,149
we see that it was a a classic cipher

116
00:05:02,050 --> 00:05:06,849
system with various different tiers and

117
00:05:04,149 --> 00:05:09,339
we had a client that was connecting to a

118
00:05:06,849 --> 00:05:11,438
parameter system first where they had on

119
00:05:09,339 --> 00:05:13,599
a transport layer mutual TLS so it was a

120
00:05:11,439 --> 00:05:16,300
very strong former authentication of the

121
00:05:13,599 --> 00:05:18,610
client in addition to that they also had

122
00:05:16,300 --> 00:05:19,959
the message layer using XML signature so

123
00:05:18,610 --> 00:05:22,209
was a business-to-business application

124
00:05:19,959 --> 00:05:24,309
where they was sending web service

125
00:05:22,209 --> 00:05:26,619
requests with the XML messages that had

126
00:05:24,309 --> 00:05:28,479
been signed by the client so both in

127
00:05:26,619 --> 00:05:31,029
transport layer and at the application

128
00:05:28,479 --> 00:05:34,779
sorry message layer they were having

129
00:05:31,029 --> 00:05:36,699
security controls in addition to this

130
00:05:34,779 --> 00:05:39,069
they also followed best practice in

131
00:05:36,699 --> 00:05:41,830
terms of auditing events and logging

132
00:05:39,069 --> 00:05:43,870
when messages were sent so they had an

133
00:05:41,830 --> 00:05:45,370
audit trail of that and the void story

134
00:05:43,870 --> 00:05:47,289
comes same systems were sending it off

135
00:05:45,370 --> 00:05:49,749
to secure log server where the boat had

136
00:05:47,289 --> 00:05:51,818
signatures of the logs to prevent

137
00:05:49,749 --> 00:05:54,159
manipulation of them and also encryption

138
00:05:51,819 --> 00:05:56,139
of the logs so when you look at this it

139
00:05:54,159 --> 00:05:57,610
looks really really strong and normally

140
00:05:56,139 --> 00:05:58,779
in a quick threat model we'll see okay

141
00:05:57,610 --> 00:06:00,819
you have these controls and everything

142
00:05:58,779 --> 00:06:04,808
looks fine so what could possibly go

143
00:06:00,819 --> 00:06:13,360
wrong here and the one would an alias

144
00:06:04,809 --> 00:06:17,559
yes mm-hmm

145
00:06:13,360 --> 00:06:19,149
yeah but so you wanted right track here

146
00:06:17,559 --> 00:06:21,189
what we see here is that the controls

147
00:06:19,149 --> 00:06:24,249
themselves were strong but the

148
00:06:21,189 --> 00:06:25,809
integration here was flawed and one

149
00:06:24,249 --> 00:06:27,909
example is with reverse proxy I

150
00:06:25,809 --> 00:06:29,889
mentioned the authentication here on the

151
00:06:27,909 --> 00:06:31,869
transport layer had no correlation

152
00:06:29,889 --> 00:06:34,569
whatsoever with this signature

153
00:06:31,869 --> 00:06:36,759
verification on the message layer they

154
00:06:34,569 --> 00:06:38,620
did not check that the same entity that

155
00:06:36,759 --> 00:06:41,019
hadith entik ated was the same entity -

156
00:06:38,620 --> 00:06:42,099
who had signed the transaction so those

157
00:06:41,019 --> 00:06:43,180
could be two different entities

158
00:06:42,099 --> 00:06:44,560
altogether

159
00:06:43,180 --> 00:06:46,389
and to make it worse when they were

160
00:06:44,560 --> 00:06:48,550
actually then logging who had sent this

161
00:06:46,389 --> 00:06:51,100
message in the rodas log they were

162
00:06:48,550 --> 00:06:52,990
taking this sender from a field in the

163
00:06:51,100 --> 00:06:56,860
actual payload rather than a 10 Takeda

164
00:06:52,990 --> 00:06:57,970
session so in other words you didn't

165
00:06:56,860 --> 00:06:59,289
know who actually sent the message

166
00:06:57,970 --> 00:07:01,990
because you could tell whoever you

167
00:06:59,289 --> 00:07:03,940
wanted to be so in practice here these

168
00:07:01,990 --> 00:07:07,090
controls that by themselves were quite

169
00:07:03,940 --> 00:07:09,060
secure and well the signs are to say in

170
00:07:07,090 --> 00:07:11,320
reality did not provide security that

171
00:07:09,060 --> 00:07:13,930
they had anticipated here because they

172
00:07:11,320 --> 00:07:15,639
had not been integrated properly so what

173
00:07:13,930 --> 00:07:17,229
this means is that when we were looking

174
00:07:15,639 --> 00:07:18,940
into this and asked them like ok so who

175
00:07:17,229 --> 00:07:21,159
actually sent this message what does

176
00:07:18,940 --> 00:07:23,710
your just logs say you couldn't really

177
00:07:21,160 --> 00:07:26,199
tell because a client could connect to

178
00:07:23,710 --> 00:07:28,508
the system as client a for example where

179
00:07:26,199 --> 00:07:30,370
one certificate and we'd enter fied by

180
00:07:28,509 --> 00:07:31,960
the proxy as being client a but the

181
00:07:30,370 --> 00:07:33,460
message itself then could have been

182
00:07:31,960 --> 00:07:35,138
signed by a completely different entity

183
00:07:33,460 --> 00:07:37,690
I can leave the different company client

184
00:07:35,139 --> 00:07:39,370
B let's say and then if we then went to

185
00:07:37,690 --> 00:07:40,780
the audits log and had a look in there

186
00:07:39,370 --> 00:07:43,090
it would say the message was sent from

187
00:07:40,780 --> 00:07:45,130
client C which has no relation with the

188
00:07:43,090 --> 00:07:47,380
authentication or the signature so all

189
00:07:45,130 --> 00:07:48,760
these controls were actually not giving

190
00:07:47,380 --> 00:07:50,229
them the assurance they wanted so you

191
00:07:48,760 --> 00:07:55,990
couldn't tell Rachel I sent a message

192
00:07:50,229 --> 00:07:57,820
here so what do we learn from this well

193
00:07:55,990 --> 00:07:59,949
I think one of the main points here is

194
00:07:57,820 --> 00:08:02,289
that having good security controls is

195
00:07:59,949 --> 00:08:04,060
not enough by itself it does not

196
00:08:02,289 --> 00:08:06,789
automatically mean you have a secure

197
00:08:04,060 --> 00:08:08,560
system so when you design a review

198
00:08:06,789 --> 00:08:10,690
system we also need to check that the

199
00:08:08,560 --> 00:08:13,020
controls that are employed are actually

200
00:08:10,690 --> 00:08:15,159
working together and they are

201
00:08:13,020 --> 00:08:17,680
collaborating so to say and enforcing

202
00:08:15,159 --> 00:08:20,130
the same picture of who the user is for

203
00:08:17,680 --> 00:08:22,030
example you need to make sure that they

204
00:08:20,130 --> 00:08:23,800
support each other when they you have

205
00:08:22,030 --> 00:08:27,309
different controls implemented at

206
00:08:23,800 --> 00:08:28,990
different layers another point here is

207
00:08:27,310 --> 00:08:31,000
that also when you have any type of

208
00:08:28,990 --> 00:08:32,919
information in an audit log it's not

209
00:08:31,000 --> 00:08:34,089
only was securing the log itself and

210
00:08:32,919 --> 00:08:35,620
making sure that information can't be

211
00:08:34,089 --> 00:08:37,599
tampered with or read by an authorized

212
00:08:35,620 --> 00:08:39,640
users you also of course need to check

213
00:08:37,599 --> 00:08:41,500
what is the sort of truth where does

214
00:08:39,640 --> 00:08:43,689
that information come from can that be

215
00:08:41,500 --> 00:08:45,430
manipulated by user or is it taken from

216
00:08:43,690 --> 00:08:46,450
the right place for example it should

217
00:08:45,430 --> 00:08:48,849
have been taken from a syndicated

218
00:08:46,450 --> 00:08:53,230
context rather from a data feel at a

219
00:08:48,850 --> 00:08:56,080
message okay

220
00:08:53,230 --> 00:08:58,540
good okay so the next example we're

221
00:08:56,080 --> 00:09:06,180
calling mind the gap

222
00:08:58,540 --> 00:09:08,680
stepping over the step up right so so

223
00:09:06,180 --> 00:09:12,609
imagine you have a system that does

224
00:09:08,680 --> 00:09:14,140
step-up authentication let's just go

225
00:09:12,610 --> 00:09:15,850
through so we have a we have some way of

226
00:09:14,140 --> 00:09:17,770
a few layers which is just simplify it

227
00:09:15,850 --> 00:09:19,810
slightly you you go over the Internet

228
00:09:17,770 --> 00:09:22,660
you get like an or thin layer

229
00:09:19,810 --> 00:09:25,000
maybe there's a ACK access control

230
00:09:22,660 --> 00:09:27,189
checks as well ultimately you have a

231
00:09:25,000 --> 00:09:28,690
back-end self simplified this slightly

232
00:09:27,190 --> 00:09:33,160
but the essence of the problem is

233
00:09:28,690 --> 00:09:35,500
described in this diagram so and you

234
00:09:33,160 --> 00:09:40,150
have a trader he wants to do something

235
00:09:35,500 --> 00:09:42,940
risky he wants to trade a few K so he

236
00:09:40,150 --> 00:09:46,600
sends a message I want to sell 10,000

237
00:09:42,940 --> 00:09:49,630
shares so what's gonna happen well

238
00:09:46,600 --> 00:09:51,760
there's a session so the authentication

239
00:09:49,630 --> 00:09:54,580
is going to say yeah this is a valid

240
00:09:51,760 --> 00:09:57,819
session Bob's a trader I'm gonna forward

241
00:09:54,580 --> 00:10:00,190
this to the to the business layer goes

242
00:09:57,820 --> 00:10:03,430
to the business layer and typically what

243
00:10:00,190 --> 00:10:06,790
you have is some kind of risk engine say

244
00:10:03,430 --> 00:10:09,609
Bob wants to trade 10 K I'm going to go

245
00:10:06,790 --> 00:10:12,280
through a risk process and that's gonna

246
00:10:09,610 --> 00:10:14,020
say well this is risky I'm not happy

247
00:10:12,280 --> 00:10:17,140
that you just done single-factor

248
00:10:14,020 --> 00:10:18,460
I want you to step up I want you to

249
00:10:17,140 --> 00:10:20,650
prove that you're really Bob because

250
00:10:18,460 --> 00:10:23,860
this is a business wise it's a risky

251
00:10:20,650 --> 00:10:26,860
transaction so the server will say ok

252
00:10:23,860 --> 00:10:29,740
you need to step up sends a challenge

253
00:10:26,860 --> 00:10:31,300
some kind of out of bound challenge or

254
00:10:29,740 --> 00:10:32,650
it could be in the app itself doesn't

255
00:10:31,300 --> 00:10:35,680
really matter how it's done

256
00:10:32,650 --> 00:10:39,040
and and it's going to be expecting a

257
00:10:35,680 --> 00:10:43,540
valid response and the response comes

258
00:10:39,040 --> 00:10:47,579
back and there's some validation taking

259
00:10:43,540 --> 00:10:49,930
place you got an OTP some size signed

260
00:10:47,580 --> 00:10:52,750
some some kind of response like a

261
00:10:49,930 --> 00:10:54,969
challenge response thing that's going to

262
00:10:52,750 --> 00:10:57,330
go through a check is this a you know is

263
00:10:54,970 --> 00:11:01,630
this a valid response to this challenge

264
00:10:57,330 --> 00:11:04,570
yeah it's ok and it's going to

265
00:11:01,630 --> 00:11:07,090
invalidate the OTP typically issue a new

266
00:11:04,570 --> 00:11:08,710
session I'm happy

267
00:11:07,090 --> 00:11:10,480
send it to the back end and the back end

268
00:11:08,710 --> 00:11:15,310
can then go and execute the transaction

269
00:11:10,480 --> 00:11:16,690
that's sort of the general flow so so

270
00:11:15,310 --> 00:11:18,790
and then then we're happy we do the

271
00:11:16,690 --> 00:11:21,010
transaction and we this is the happy

272
00:11:18,790 --> 00:11:22,689
world scenario so let's try to think

273
00:11:21,010 --> 00:11:24,970
about how how we can attack the system

274
00:11:22,690 --> 00:11:27,070
let's start to think about this so we

275
00:11:24,970 --> 00:11:29,200
get all the cookie cutter attacks and

276
00:11:27,070 --> 00:11:31,840
all the standard attacks they out of the

277
00:11:29,200 --> 00:11:33,940
box attacks we could attack the device

278
00:11:31,840 --> 00:11:37,120
or even the user there are a number of

279
00:11:33,940 --> 00:11:38,770
ways you could do that you could try and

280
00:11:37,120 --> 00:11:39,970
get a bit of malware on the device you

281
00:11:38,770 --> 00:11:43,090
could try and get something on the

282
00:11:39,970 --> 00:11:43,990
device through compromising a CDN so

283
00:11:43,090 --> 00:11:46,140
this is the kind of the

284
00:11:43,990 --> 00:11:49,240
man-in-the-browser men in the app attack

285
00:11:46,140 --> 00:11:52,030
and this is this would be a valid attack

286
00:11:49,240 --> 00:11:54,910
quite a quite a sophisticated attacks

287
00:11:52,030 --> 00:11:56,709
not really attacking the step up but

288
00:11:54,910 --> 00:11:58,120
it's certainly a valid attack if you

289
00:11:56,710 --> 00:12:00,370
could do that you could inject your own

290
00:11:58,120 --> 00:12:03,850
transactions into the stream into into

291
00:12:00,370 --> 00:12:06,760
an authenticated session but we want to

292
00:12:03,850 --> 00:12:09,370
see if we can attack this the the step

293
00:12:06,760 --> 00:12:11,140
up because such an attack would allow

294
00:12:09,370 --> 00:12:14,200
you to do other things so you could

295
00:12:11,140 --> 00:12:17,740
attack the channel you know if it's

296
00:12:14,200 --> 00:12:19,060
HTTPS a little bit difficult to do maybe

297
00:12:17,740 --> 00:12:21,520
they're not doing certificate pinning

298
00:12:19,060 --> 00:12:27,400
but that's that's a standard cookie

299
00:12:21,520 --> 00:12:30,220
cutter attack maybe you could attack the

300
00:12:27,400 --> 00:12:33,250
risk engine itself maybe we could trick

301
00:12:30,220 --> 00:12:35,560
the risk engine into not doing this step

302
00:12:33,250 --> 00:12:37,750
up that would start to become a little

303
00:12:35,560 --> 00:12:39,969
bit more of a creative kind of attack

304
00:12:37,750 --> 00:12:41,320
that would be quite difficult to do from

305
00:12:39,970 --> 00:12:43,000
a threat model because and we really

306
00:12:41,320 --> 00:12:45,190
need to understand the details of the

307
00:12:43,000 --> 00:12:47,650
risk engine in order to trick the risk

308
00:12:45,190 --> 00:12:51,250
engine into not stepping up but it's

309
00:12:47,650 --> 00:12:53,110
it's a candidate but what we've got so

310
00:12:51,250 --> 00:12:56,230
far is we've got this two-dimensional

311
00:12:53,110 --> 00:12:58,090
model and we're thinking about poking

312
00:12:56,230 --> 00:13:01,330
the system in all these different places

313
00:12:58,090 --> 00:13:04,080
and we can apply sort of these standard

314
00:13:01,330 --> 00:13:07,720
stride type attacks of the different

315
00:13:04,080 --> 00:13:12,240
attack surfaces but what we need to

316
00:13:07,720 --> 00:13:14,710
remember is we need to think of it hmm

317
00:13:12,240 --> 00:13:17,200
what else could we do

318
00:13:14,710 --> 00:13:19,540
so what we need to remember is when we

319
00:13:17,200 --> 00:13:22,030
looking at these three model diagrams we

320
00:13:19,540 --> 00:13:23,740
sing this two-dimensional model maybe 3

321
00:13:22,030 --> 00:13:27,910
dimensional if you take into account the

322
00:13:23,740 --> 00:13:31,060
text stack but you know the systems on

323
00:13:27,910 --> 00:13:33,189
also have a time dimension there's a

324
00:13:31,060 --> 00:13:36,310
sequence diagram there's a state machine

325
00:13:33,190 --> 00:13:37,600
there's a state machine in every tier

326
00:13:36,310 --> 00:13:39,670
and there's a state machine in the

327
00:13:37,600 --> 00:13:41,110
system as a whole and if that state

328
00:13:39,670 --> 00:13:43,959
machine is not coherent

329
00:13:41,110 --> 00:13:46,180
then maybe you can attack the state

330
00:13:43,960 --> 00:13:49,540
machine without attacking the attack

331
00:13:46,180 --> 00:13:53,290
surfaces directly so let's look at the

332
00:13:49,540 --> 00:13:55,750
state machine so the first thing is if

333
00:13:53,290 --> 00:13:57,219
we just recast the previous diagram as a

334
00:13:55,750 --> 00:13:59,350
state machine we can just go through the

335
00:13:57,220 --> 00:14:02,410
sequence diagram you login you get a

336
00:13:59,350 --> 00:14:05,550
session you try to do a transaction it

337
00:14:02,410 --> 00:14:08,819
says ah that's too risky do the step up

338
00:14:05,550 --> 00:14:11,800
you get a challenge you get a response

339
00:14:08,820 --> 00:14:14,950
then you get the checking of the

340
00:14:11,800 --> 00:14:18,729
response a new session token which gets

341
00:14:14,950 --> 00:14:22,900
sent back to the to the client and then

342
00:14:18,730 --> 00:14:24,370
ventually you know that's that's that

343
00:14:22,900 --> 00:14:25,959
the next thing and then ventually they

344
00:14:24,370 --> 00:14:29,410
can they can go ahead and do the

345
00:14:25,960 --> 00:14:30,940
transaction so if we look at a sequence

346
00:14:29,410 --> 00:14:32,740
diagram of this thing

347
00:14:30,940 --> 00:14:35,860
it's just simplified slightly we have

348
00:14:32,740 --> 00:14:39,340
the same thing we start with signing in

349
00:14:35,860 --> 00:14:41,890
we signed in that's the password part

350
00:14:39,340 --> 00:14:44,560
and then we need to do the step up so in

351
00:14:41,890 --> 00:14:49,930
the stepping up state we're verifying

352
00:14:44,560 --> 00:14:52,510
the challenge we're issuing a new

353
00:14:49,930 --> 00:14:53,979
session because the risky transaction

354
00:14:52,510 --> 00:14:57,370
and then finally we're in the stepped-up

355
00:14:53,980 --> 00:14:58,570
stage and we continue so let's take a

356
00:14:57,370 --> 00:15:00,670
moment to think of what that what does

357
00:14:58,570 --> 00:15:01,990
the attacker have sometimes is useful

358
00:15:00,670 --> 00:15:04,569
because that opens up new attack

359
00:15:01,990 --> 00:15:07,030
possibilities well the attacker has his

360
00:15:04,570 --> 00:15:09,540
own session if he's an authenticated

361
00:15:07,030 --> 00:15:12,040
attacker if he's a malicious attacker a

362
00:15:09,540 --> 00:15:13,870
valid a legitimate user on the system

363
00:15:12,040 --> 00:15:16,240
and wants to attack other people they

364
00:15:13,870 --> 00:15:18,370
have the session the session 1 for the

365
00:15:16,240 --> 00:15:22,540
password session 2 for the for the

366
00:15:18,370 --> 00:15:25,720
step-up so we can we can what does that

367
00:15:22,540 --> 00:15:28,550
give us could we maybe step over the

368
00:15:25,720 --> 00:15:32,900
step up so to speak and just

369
00:15:28,550 --> 00:15:36,199
skip the entire state machine and and

370
00:15:32,900 --> 00:15:39,709
the answer is well maybe yes maybe if a

371
00:15:36,200 --> 00:15:41,270
few other conditions hold and one of

372
00:15:39,710 --> 00:15:44,660
those things is that if the attacker

373
00:15:41,270 --> 00:15:47,030
knows the victim user's password then

374
00:15:44,660 --> 00:15:49,189
maybe if those sessions are not

375
00:15:47,030 --> 00:15:51,680
correlated then maybe they can log in

376
00:15:49,190 --> 00:15:54,380
the as the user then substitute their

377
00:15:51,680 --> 00:15:56,469
own step-up session token and do risky

378
00:15:54,380 --> 00:16:01,070
transactions as the victim user now

379
00:15:56,470 --> 00:16:03,700
that's a attack possibility in fact that

380
00:16:01,070 --> 00:16:07,400
happens more often than you think so

381
00:16:03,700 --> 00:16:11,150
let's go to the so the attack works like

382
00:16:07,400 --> 00:16:14,510
this the user logs in the the attacker

383
00:16:11,150 --> 00:16:17,660
logs in as himself collects his step-up

384
00:16:14,510 --> 00:16:20,330
session token then he logs in as a

385
00:16:17,660 --> 00:16:24,620
victim user substitutes who step up

386
00:16:20,330 --> 00:16:27,830
session token' and submits it along with

387
00:16:24,620 --> 00:16:31,520
a riskier transaction that is tantamount

388
00:16:27,830 --> 00:16:32,780
to a risky request and so you execute

389
00:16:31,520 --> 00:16:35,920
the transaction and what you need to

390
00:16:32,780 --> 00:16:37,939
realize is often in the new world of of

391
00:16:35,920 --> 00:16:40,430
service-oriented architecture and micro

392
00:16:37,940 --> 00:16:42,910
services there are many services and

393
00:16:40,430 --> 00:16:45,410
they each have a single responsibility

394
00:16:42,910 --> 00:16:46,910
so there's a password service and

395
00:16:45,410 --> 00:16:49,430
there's a step-up service and there's

396
00:16:46,910 --> 00:16:51,020
the business service and because they

397
00:16:49,430 --> 00:16:53,660
have a single responsibility they don't

398
00:16:51,020 --> 00:16:55,790
there's no one component that has a

399
00:16:53,660 --> 00:16:59,030
responsibility for the system-wide

400
00:16:55,790 --> 00:17:01,160
invariant which is is this token

401
00:16:59,030 --> 00:17:03,650
possible token the same as the step-up

402
00:17:01,160 --> 00:17:07,639
token because it's not part of the

403
00:17:03,650 --> 00:17:09,319
architecture so that falls through and

404
00:17:07,640 --> 00:17:11,839
it goes through the business layer and

405
00:17:09,319 --> 00:17:15,560
the business layer has a choice who's

406
00:17:11,839 --> 00:17:17,300
the user and typically in a lot of

407
00:17:15,560 --> 00:17:20,379
systems this kind of thing has been

408
00:17:17,300 --> 00:17:22,849
bolted on afterwards and and the way the

409
00:17:20,380 --> 00:17:24,440
change is done it's changes are done to

410
00:17:22,849 --> 00:17:27,290
minimize impact on the rest of the

411
00:17:24,440 --> 00:17:29,480
system so typically when we look at a

412
00:17:27,290 --> 00:17:32,510
system like this the original business

413
00:17:29,480 --> 00:17:34,730
layer looks at session 1 and it doesn't

414
00:17:32,510 --> 00:17:37,670
look at session 2 and there's no

415
00:17:34,730 --> 00:17:39,530
coherent enforcement of the fact that

416
00:17:37,670 --> 00:17:41,800
these should actually belong to the same

417
00:17:39,530 --> 00:17:41,800
user

418
00:17:42,170 --> 00:17:51,950
so effectively we've we've stepped over

419
00:17:47,210 --> 00:17:53,690
the step-up we go to the next one so

420
00:17:51,950 --> 00:17:56,990
what can we learn from this one from

421
00:17:53,690 --> 00:17:59,090
this so I would say don't take controls

422
00:17:56,990 --> 00:18:01,250
of face value if someone told you they

423
00:17:59,090 --> 00:18:04,309
did step up they did a step up they use

424
00:18:01,250 --> 00:18:06,380
OTP it was signed they send your

425
00:18:04,309 --> 00:18:07,910
challenge they were signed and that's a

426
00:18:06,380 --> 00:18:11,600
one-time pass so don't take that at face

427
00:18:07,910 --> 00:18:14,299
value the other thing is sometimes if

428
00:18:11,600 --> 00:18:16,730
you just think locally it gives you some

429
00:18:14,299 --> 00:18:19,330
ideas about a new attack possibility we

430
00:18:16,730 --> 00:18:21,830
just think what can this attacker do

431
00:18:19,330 --> 00:18:24,290
then sometimes they can open up new

432
00:18:21,830 --> 00:18:26,600
attack possibilities because your

433
00:18:24,290 --> 00:18:28,940
alternate traditional to alternative is

434
00:18:26,600 --> 00:18:31,159
sort of an attack tree which is a

435
00:18:28,940 --> 00:18:33,470
top-down approach sometimes you take a

436
00:18:31,160 --> 00:18:36,530
bottom-up approach and gives you new

437
00:18:33,470 --> 00:18:38,330
possibilities and the other thing is

438
00:18:36,530 --> 00:18:49,250
when you do threat modeling don't forget

439
00:18:38,330 --> 00:18:50,840
to attack the state model okay yep so

440
00:18:49,250 --> 00:18:53,679
the next example were gonna look at is

441
00:18:50,840 --> 00:18:55,699
about secure password storage and

442
00:18:53,679 --> 00:18:57,679
unfortunately in this case it had a

443
00:18:55,700 --> 00:18:59,980
little bit of unintended insecure

444
00:18:57,679 --> 00:19:03,429
side-effects and you will soon see why

445
00:18:59,980 --> 00:19:05,840
so it all started with a classic company

446
00:19:03,429 --> 00:19:07,580
probably been around for a long time and

447
00:19:05,840 --> 00:19:09,139
back in the days people were not really

448
00:19:07,580 --> 00:19:11,149
aware of securing passwords and they

449
00:19:09,140 --> 00:19:13,549
were often stored in clear text and they

450
00:19:11,150 --> 00:19:15,140
happen to be one of them and as security

451
00:19:13,549 --> 00:19:16,760
became more importance they had an

452
00:19:15,140 --> 00:19:19,610
application security group and the

453
00:19:16,760 --> 00:19:21,110
secure Department got hold of this and

454
00:19:19,610 --> 00:19:22,850
realized that this is something we need

455
00:19:21,110 --> 00:19:25,159
to address so they tasks the team with

456
00:19:22,850 --> 00:19:26,449
fixing this by removing all the clear

457
00:19:25,160 --> 00:19:28,340
text passwords and make sure they were

458
00:19:26,450 --> 00:19:30,620
securely hashed so they had done a

459
00:19:28,340 --> 00:19:31,699
really good job actually in reviewing

460
00:19:30,620 --> 00:19:33,139
modern standards and latest

461
00:19:31,700 --> 00:19:35,360
recommendations in terms of password

462
00:19:33,140 --> 00:19:37,580
hashing and using adaptive hashes and

463
00:19:35,360 --> 00:19:38,809
unique Souls and all of that thing so

464
00:19:37,580 --> 00:19:41,418
they had implemented that and I had a

465
00:19:38,809 --> 00:19:46,100
now secured password storage with them

466
00:19:41,419 --> 00:19:47,780
using adaptive hashing with sensible

467
00:19:46,100 --> 00:19:50,418
parameter is an unique salts and

468
00:19:47,780 --> 00:19:51,559
everything looked so fine so the

469
00:19:50,419 --> 00:19:55,740
security partner was quite happy and

470
00:19:51,559 --> 00:20:00,120
like I said okay problem solved is fixed

471
00:19:55,740 --> 00:20:01,740
well it was fixed for a while until the

472
00:20:00,120 --> 00:20:03,629
fraud department called and said our

473
00:20:01,740 --> 00:20:05,130
fraud detection algorithms don't really

474
00:20:03,630 --> 00:20:07,230
work the way they used to work before

475
00:20:05,130 --> 00:20:09,000
and we're missing some parameters here

476
00:20:07,230 --> 00:20:11,730
we used to look at the password of the

477
00:20:09,000 --> 00:20:13,710
user when we were doing the calculations

478
00:20:11,730 --> 00:20:15,539
in terms of fraud because apparently the

479
00:20:13,710 --> 00:20:18,360
some common passwords used by fraudsters

480
00:20:15,539 --> 00:20:20,250
is part of the calculations in the

481
00:20:18,360 --> 00:20:21,928
system so they needed the user password

482
00:20:20,250 --> 00:20:23,340
and before they could simply do that by

483
00:20:21,929 --> 00:20:24,720
just your lookup of the user in the

484
00:20:23,340 --> 00:20:26,850
database right and they would have the

485
00:20:24,720 --> 00:20:28,950
password now with the hash passwords

486
00:20:26,850 --> 00:20:30,090
didn't really work the same way because

487
00:20:28,950 --> 00:20:32,490
the algorithms were used to have any

488
00:20:30,090 --> 00:20:34,199
clear text password so they call them

489
00:20:32,490 --> 00:20:36,419
developers nuts can you fix this for us

490
00:20:34,200 --> 00:20:39,450
can help us and of course developers

491
00:20:36,419 --> 00:20:42,240
came to rescue so what did they do well

492
00:20:39,450 --> 00:20:44,580
wait a minutes the users needs to buy

493
00:20:42,240 --> 00:20:47,100
something so they are logged in and when

494
00:20:44,580 --> 00:20:48,960
they buy something they need a password

495
00:20:47,100 --> 00:20:51,120
so we can take the passo from database

496
00:20:48,960 --> 00:20:52,799
anymore but wait what if we just store

497
00:20:51,120 --> 00:20:54,449
it in a session when used to logs in

498
00:20:52,799 --> 00:20:56,490
it's just temporary just in the session

499
00:20:54,450 --> 00:20:58,679
in memory for a little while until to

500
00:20:56,490 --> 00:21:01,080
buy something and then we eradicated

501
00:20:58,679 --> 00:21:03,059
it's all fine right so they had it in

502
00:21:01,080 --> 00:21:04,860
the session and the positi-- long with

503
00:21:03,059 --> 00:21:06,330
the purchase to the fraud engine so the

504
00:21:04,860 --> 00:21:08,039
fraud department was happy they could do

505
00:21:06,330 --> 00:21:12,899
their checks and everything seemed fine

506
00:21:08,039 --> 00:21:15,090
and what it didn't think about when I

507
00:21:12,899 --> 00:21:16,770
had a look at this was that of course in

508
00:21:15,090 --> 00:21:19,678
the production environment it was not

509
00:21:16,770 --> 00:21:21,570
just one server and had a multiple web

510
00:21:19,679 --> 00:21:24,090
service in a web form and a wall using a

511
00:21:21,570 --> 00:21:26,668
sequel server kind of like a state

512
00:21:24,090 --> 00:21:28,799
database for the sessions right so what

513
00:21:26,669 --> 00:21:30,659
does that mean well the password that

514
00:21:28,799 --> 00:21:32,010
they thought was only a memory in the

515
00:21:30,659 --> 00:21:34,649
session for the wall was actual

516
00:21:32,010 --> 00:21:39,570
persisted to disk in the DMZ in clear

517
00:21:34,649 --> 00:21:42,120
text so moving from the database that

518
00:21:39,570 --> 00:21:43,620
was in their internal network a bit more

519
00:21:42,120 --> 00:21:46,020
secure in clear-text actually moved the

520
00:21:43,620 --> 00:21:48,239
critics past was out to diem said in a

521
00:21:46,020 --> 00:21:50,490
different way so good intentions ended

522
00:21:48,240 --> 00:21:54,690
up with not so good results so the

523
00:21:50,490 --> 00:21:57,059
lesson from this is as we are fixing

524
00:21:54,690 --> 00:21:58,950
some things we may end up creating

525
00:21:57,059 --> 00:22:01,110
another problem so what it means we

526
00:21:58,950 --> 00:22:03,659
can't only look at the immediate fix and

527
00:22:01,110 --> 00:22:05,908
the initial threat model when important

528
00:22:03,659 --> 00:22:07,590
things changes especially anything

529
00:22:05,909 --> 00:22:09,060
relating to security control such

530
00:22:07,590 --> 00:22:11,760
authentication authorization

531
00:22:09,060 --> 00:22:13,790
you should always revisit that fresh

532
00:22:11,760 --> 00:22:16,379
model threat mall the new iteration

533
00:22:13,790 --> 00:22:17,730
don't just a threat mall the initial

534
00:22:16,380 --> 00:22:19,980
thing when they change something but

535
00:22:17,730 --> 00:22:21,180
also go back and ask them how did you

536
00:22:19,980 --> 00:22:23,280
change that what was the implication

537
00:22:21,180 --> 00:22:24,570
Andy to do an additional change from

538
00:22:23,280 --> 00:22:26,970
what you told us you were going to do

539
00:22:24,570 --> 00:22:28,980
initially so this is not always East to

540
00:22:26,970 --> 00:22:30,930
cash unless you go back and verify this

541
00:22:28,980 --> 00:22:33,540
and try to get some evidence of how

542
00:22:30,930 --> 00:22:35,100
things were changed because the full

543
00:22:33,540 --> 00:22:37,230
impact of these changes are not always

544
00:22:35,100 --> 00:22:38,969
well and stood up front and it may be

545
00:22:37,230 --> 00:22:41,160
only after they have been done that you

546
00:22:38,970 --> 00:22:45,060
can actually see the full impact of the

547
00:22:41,160 --> 00:22:46,680
change so another thing here to point

548
00:22:45,060 --> 00:22:49,379
out that the deployment scenario right

549
00:22:46,680 --> 00:22:51,720
that also has an impact on the security

550
00:22:49,380 --> 00:22:53,490
some of the assumptions you make during

551
00:22:51,720 --> 00:22:56,040
the initial design and development may

552
00:22:53,490 --> 00:22:59,400
not hold true in the environment where

553
00:22:56,040 --> 00:23:01,350
software's deployed so while security

554
00:22:59,400 --> 00:23:03,060
tests are ease security threat modeling

555
00:23:01,350 --> 00:23:04,980
is often focused on the software itself

556
00:23:03,060 --> 00:23:07,350
when it comes supplication threat model

557
00:23:04,980 --> 00:23:08,760
but I don't think we can discard the

558
00:23:07,350 --> 00:23:11,399
deployment scenario completely because

559
00:23:08,760 --> 00:23:13,050
that also impacts the security just like

560
00:23:11,400 --> 00:23:14,250
the first keynote today you talked about

561
00:23:13,050 --> 00:23:16,830
even if you have the perfect software

562
00:23:14,250 --> 00:23:19,350
without bugs the hardware it runs on can

563
00:23:16,830 --> 00:23:21,149
some to be abused to cause issues and

564
00:23:19,350 --> 00:23:22,500
vulnerabilities so we need to look at

565
00:23:21,150 --> 00:23:27,960
the full stack we need to consider the

566
00:23:22,500 --> 00:23:30,870
full system to get a better picture next

567
00:23:27,960 --> 00:23:33,900
one is about one-time passwords but in

568
00:23:30,870 --> 00:23:36,120
parallel universes so what does this

569
00:23:33,900 --> 00:23:38,880
mean well let's look at this it was a

570
00:23:36,120 --> 00:23:41,729
company that as many others wanted to

571
00:23:38,880 --> 00:23:43,860
support remote workers and as you know

572
00:23:41,730 --> 00:23:45,420
you employer might not be fully

573
00:23:43,860 --> 00:23:47,669
comfortable with you logging into their

574
00:23:45,420 --> 00:23:49,080
company systems just with your ID

575
00:23:47,670 --> 00:23:50,910
credentials for example remotely

576
00:23:49,080 --> 00:23:53,460
probably they might need a little bit

577
00:23:50,910 --> 00:23:56,310
more security oftentimes to want to add

578
00:23:53,460 --> 00:23:58,280
a second factor and for example used OTP

579
00:23:56,310 --> 00:24:01,350
like a time base OTP or a similar system

580
00:23:58,280 --> 00:24:02,639
so this is what they had done looked at

581
00:24:01,350 --> 00:24:05,429
this and it looked fine they hadn't

582
00:24:02,640 --> 00:24:06,990
password as well as no tp'ed it was

583
00:24:05,430 --> 00:24:09,540
provided to the system they were

584
00:24:06,990 --> 00:24:11,250
validating the credential ends their lab

585
00:24:09,540 --> 00:24:13,860
directory for example and then they were

586
00:24:11,250 --> 00:24:17,010
checking the OTP to make sure that it

587
00:24:13,860 --> 00:24:18,629
was a valid l2p value and of course one

588
00:24:17,010 --> 00:24:20,940
of the points with this right is that if

589
00:24:18,630 --> 00:24:22,559
the user would be on a system that was

590
00:24:20,940 --> 00:24:25,889
monitored by

591
00:24:22,559 --> 00:24:27,570
by a malicious actor or someone was able

592
00:24:25,889 --> 00:24:29,699
to get into the network layer and

593
00:24:27,570 --> 00:24:31,439
capture the credential somehow they

594
00:24:29,700 --> 00:24:33,899
should not be able to just replay those

595
00:24:31,440 --> 00:24:35,750
and look in directly to the system so if

596
00:24:33,899 --> 00:24:38,428
an attacker was trying to replay this

597
00:24:35,750 --> 00:24:40,379
credential while the passer was right -

598
00:24:38,429 --> 00:24:42,960
OTP should have been marked as already

599
00:24:40,379 --> 00:24:44,908
used right so they would not be able to

600
00:24:42,960 --> 00:24:46,529
again so the system would set stop for

601
00:24:44,909 --> 00:24:48,629
that and prevent attacks from replaying

602
00:24:46,529 --> 00:24:52,080
the credentials so far so good

603
00:24:48,629 --> 00:24:54,408
everything seemed fine until you realize

604
00:24:52,080 --> 00:24:57,928
that this was a rather large company

605
00:24:54,409 --> 00:24:59,730
with employees all over the world and of

606
00:24:57,929 --> 00:25:01,080
course it was not enough just to deploy

607
00:24:59,730 --> 00:25:03,299
diss on a single system that he needed

608
00:25:01,080 --> 00:25:06,289
it on multiple systems in different

609
00:25:03,299 --> 00:25:09,179
regions and there was load-balanced and

610
00:25:06,289 --> 00:25:11,158
could that potential impact things well

611
00:25:09,179 --> 00:25:13,289
we discovered that after some

612
00:25:11,159 --> 00:25:14,460
evaluations and testing with them we

613
00:25:13,289 --> 00:25:17,190
found that we were actually able to

614
00:25:14,460 --> 00:25:19,620
replay this so how did that happen well

615
00:25:17,190 --> 00:25:21,480
when the user logs in it goes through a

616
00:25:19,620 --> 00:25:23,459
load balancer which sends it to one of

617
00:25:21,480 --> 00:25:26,220
the instances validates the credentials

618
00:25:23,460 --> 00:25:28,830
and marks Totti P as used after it has

619
00:25:26,220 --> 00:25:30,870
been validated so far so good but if an

620
00:25:28,830 --> 00:25:33,029
attacker is now capturing these

621
00:25:30,870 --> 00:25:35,399
credentials replaying them and happen to

622
00:25:33,029 --> 00:25:38,519
be redirected to another instance what

623
00:25:35,399 --> 00:25:41,340
do you think happens actually the OTP

624
00:25:38,519 --> 00:25:42,899
was now accepted and we were able to

625
00:25:41,340 --> 00:25:44,580
replay credentials and log into this

626
00:25:42,899 --> 00:25:47,189
system all that was supposed to be a

627
00:25:44,580 --> 00:25:49,830
one-time password and the reason for

628
00:25:47,190 --> 00:25:52,019
this was did not have proper syncing

629
00:25:49,830 --> 00:25:53,879
between their systems so all there was a

630
00:25:52,019 --> 00:25:55,559
one-time password is only in one

631
00:25:53,879 --> 00:25:57,120
universe as I said so they had a

632
00:25:55,559 --> 00:25:59,460
multiple instances so you need to make

633
00:25:57,120 --> 00:26:01,979
sure that you have the same picture of

634
00:25:59,460 --> 00:26:03,899
the state in all of your system again

635
00:26:01,980 --> 00:26:05,100
you can't only reviewed in one instance

636
00:26:03,899 --> 00:26:08,668
but you need to look at the whole system

637
00:26:05,100 --> 00:26:10,350
to try to discover these things so

638
00:26:08,669 --> 00:26:11,820
synchronization is really important

639
00:26:10,350 --> 00:26:13,230
they're not only all those to P itself

640
00:26:11,820 --> 00:26:15,299
that is within the time frame but also

641
00:26:13,230 --> 00:26:16,649
when it's mark is being used between

642
00:26:15,299 --> 00:26:22,799
systems if you have more than one

643
00:26:16,649 --> 00:26:24,178
instance so just like I said before you

644
00:26:22,799 --> 00:26:25,860
need to consider deployment scenarios

645
00:26:24,179 --> 00:26:28,470
well it can impact this security and

646
00:26:25,860 --> 00:26:30,269
what is secure in a single deployment

647
00:26:28,470 --> 00:26:31,740
environment on just one instance may not

648
00:26:30,269 --> 00:26:33,720
be secure when you deploy to multiple

649
00:26:31,740 --> 00:26:36,030
instances in a load balancer

650
00:26:33,720 --> 00:26:37,620
so you need to take that into account as

651
00:26:36,030 --> 00:26:43,560
well but when you design and when you

652
00:26:37,620 --> 00:26:44,909
review the security of a system and just

653
00:26:43,560 --> 00:26:46,379
like in threat modeling these can be

654
00:26:44,910 --> 00:26:48,300
harder things to find it I also know

655
00:26:46,380 --> 00:26:49,890
from do a lot of security testing and

656
00:26:48,300 --> 00:26:51,720
impractical penetration test is similar

657
00:26:49,890 --> 00:26:53,760
it's also quite hard sometimes to

658
00:26:51,720 --> 00:26:55,830
discover these issues because you're

659
00:26:53,760 --> 00:26:57,420
getting results that are not consistent

660
00:26:55,830 --> 00:26:59,159
right as a tester we want it to be

661
00:26:57,420 --> 00:27:02,040
predictable we send something you get

662
00:26:59,160 --> 00:27:03,870
resolved back and you can like review

663
00:27:02,040 --> 00:27:05,760
that and make conclusions based on the

664
00:27:03,870 --> 00:27:09,689
results but if you're getting like what

665
00:27:05,760 --> 00:27:11,220
seems to be random successes it wouldn't

666
00:27:09,690 --> 00:27:13,920
attack and sometimes it fails the

667
00:27:11,220 --> 00:27:17,370
chemicals make it very hard to determine

668
00:27:13,920 --> 00:27:20,220
what's actually happening so these are

669
00:27:17,370 --> 00:27:21,810
not always easy to find in in tests so

670
00:27:20,220 --> 00:27:23,970
you need to know what kind of deployment

671
00:27:21,810 --> 00:27:25,530
of RMIT working with to try to determine

672
00:27:23,970 --> 00:27:26,730
where the DAT can have an impact on the

673
00:27:25,530 --> 00:27:35,940
results you getting from your test as

674
00:27:26,730 --> 00:27:39,320
well ok so the next story we're gonna

675
00:27:35,940 --> 00:27:45,530
call we've called a secure connection or

676
00:27:39,320 --> 00:27:49,320
open door so this concerns the design of

677
00:27:45,530 --> 00:27:51,870
tracking solutions and they they sort of

678
00:27:49,320 --> 00:27:53,639
work the same way and tracking solutions

679
00:27:51,870 --> 00:27:58,379
obviously has a lot of use cases our

680
00:27:53,640 --> 00:28:07,980
vehicle fleets elderly people pets loved

681
00:27:58,380 --> 00:28:10,680
ones anything valuable so so let's so

682
00:28:07,980 --> 00:28:12,180
they all kind of more or less work the

683
00:28:10,680 --> 00:28:14,610
same way and we've again we've

684
00:28:12,180 --> 00:28:18,590
abstracted this but this based on real

685
00:28:14,610 --> 00:28:22,110
system so so the first thing is you need

686
00:28:18,590 --> 00:28:26,790
in these kind of systems they have

687
00:28:22,110 --> 00:28:32,040
ability to know where they are and and

688
00:28:26,790 --> 00:28:34,590
then they report back the data and in

689
00:28:32,040 --> 00:28:38,790
this example they're reporting back the

690
00:28:34,590 --> 00:28:41,909
data over a 2g network could be 3G

691
00:28:38,790 --> 00:28:43,379
network over a GSM network so they

692
00:28:41,910 --> 00:28:45,540
connect to you what what typically

693
00:28:43,380 --> 00:28:46,620
happens you connect to you get issued a

694
00:28:45,540 --> 00:28:49,139
SIM card

695
00:28:46,620 --> 00:28:50,729
and the SIM card is locked down to an

696
00:28:49,140 --> 00:28:52,620
access point name and when you make the

697
00:28:50,730 --> 00:28:55,440
connection you say I want this access

698
00:28:52,620 --> 00:28:57,300
point name X Y Zed and what's going to

699
00:28:55,440 --> 00:29:00,360
happen is the mobile network operator is

700
00:28:57,300 --> 00:29:03,270
going to set up a connection to some to

701
00:29:00,360 --> 00:29:05,520
some end point with the hosting company

702
00:29:03,270 --> 00:29:08,040
receives the data and typically that's

703
00:29:05,520 --> 00:29:10,470
you can also have it do that also create

704
00:29:08,040 --> 00:29:13,649
some kind of secure tunnel and typically

705
00:29:10,470 --> 00:29:15,930
these things are using sockets so under

706
00:29:13,650 --> 00:29:20,610
the hood they're using the internet

707
00:29:15,930 --> 00:29:24,059
protocol TCP and and there's also a web

708
00:29:20,610 --> 00:29:26,610
interface usually forum for people to

709
00:29:24,059 --> 00:29:28,740
manage the system or view their own

710
00:29:26,610 --> 00:29:30,360
behavior so there are different ways to

711
00:29:28,740 --> 00:29:33,660
interact with the system there's more or

712
00:29:30,360 --> 00:29:36,090
less how they work so listening about

713
00:29:33,660 --> 00:29:41,400
attacking the system how could I attack

714
00:29:36,090 --> 00:29:43,470
it so I can roll out the standard

715
00:29:41,400 --> 00:29:46,350
attacks and those are those are valid so

716
00:29:43,470 --> 00:29:49,580
let's have a few ways we could we could

717
00:29:46,350 --> 00:29:52,770
attack try and attack the tunnel itself

718
00:29:49,580 --> 00:29:55,260
we could attack the web you know attack

719
00:29:52,770 --> 00:29:57,150
the web app that's the usual way try and

720
00:29:55,260 --> 00:29:59,879
get in through the web app find a

721
00:29:57,150 --> 00:30:01,620
vulnerability attack the backend we

722
00:29:59,880 --> 00:30:05,370
could be a malicious insider who could

723
00:30:01,620 --> 00:30:06,600
steal the data you know those are we

724
00:30:05,370 --> 00:30:08,280
could have try and attack the tunnel

725
00:30:06,600 --> 00:30:11,070
itself that would be a little bit

726
00:30:08,280 --> 00:30:14,490
difficult you know this is the standard

727
00:30:11,070 --> 00:30:15,960
attack surface so we we can be a little

728
00:30:14,490 --> 00:30:19,220
bit more creative than that because

729
00:30:15,960 --> 00:30:22,530
that's not that's not that interesting

730
00:30:19,220 --> 00:30:25,400
so so anything else can anyone think of

731
00:30:22,530 --> 00:30:28,830
any other ways to attack the system

732
00:30:25,400 --> 00:30:31,620
sorry APN so you would attack the

733
00:30:28,830 --> 00:30:33,659
network operator but that could be a

734
00:30:31,620 --> 00:30:38,840
that could be valid attack any other

735
00:30:33,660 --> 00:30:38,840
ideas sorry

736
00:30:40,140 --> 00:30:44,640
so what like spoof coordinates maybe you

737
00:30:43,320 --> 00:30:46,260
could spoof what you're in control of

738
00:30:44,640 --> 00:30:51,780
the device you can you can completely

739
00:30:46,260 --> 00:30:54,420
lie about your coordinates yes yeah yeah

740
00:30:51,780 --> 00:30:55,800
I mean you yes okay so you could also

741
00:30:54,420 --> 00:30:57,840
spoof someone else's coordinates you

742
00:30:55,800 --> 00:30:59,760
could life the system wasn't you could

743
00:30:57,840 --> 00:31:01,860
pretend to be someone else's vehicle

744
00:30:59,760 --> 00:31:04,260
that could be an attack so those are all

745
00:31:01,860 --> 00:31:06,419
valid attacks let's let's think a bit

746
00:31:04,260 --> 00:31:09,060
more what if you are malicious user with

747
00:31:06,420 --> 00:31:10,710
a SIM card well what you could do is you

748
00:31:09,060 --> 00:31:13,909
could send messages to people on the

749
00:31:10,710 --> 00:31:16,980
same network and you could say hey

750
00:31:13,910 --> 00:31:19,710
config yourself like this or download

751
00:31:16,980 --> 00:31:22,050
your firmware from over here because

752
00:31:19,710 --> 00:31:25,110
ultimately these command messages are

753
00:31:22,050 --> 00:31:26,970
text messages and you have to have a SIM

754
00:31:25,110 --> 00:31:29,189
card on their network to it to receive

755
00:31:26,970 --> 00:31:31,470
it so that could be could be one way

756
00:31:29,190 --> 00:31:35,130
anything else I mean now that we're

757
00:31:31,470 --> 00:31:40,800
thinking about the malicious user any

758
00:31:35,130 --> 00:31:41,340
other ideas so let's go back and give

759
00:31:40,800 --> 00:31:43,560
you a hint

760
00:31:41,340 --> 00:31:45,810
so sometimes it's it just stands out of

761
00:31:43,560 --> 00:31:48,240
the blue because there's just the way

762
00:31:45,810 --> 00:31:53,520
the system is defined so fully I think

763
00:31:48,240 --> 00:31:56,010
we so yeah next one so there's no dns

764
00:31:53,520 --> 00:31:59,400
than this this IP so how are you

765
00:31:56,010 --> 00:32:00,990
connecting to the back end of IP over

766
00:31:59,400 --> 00:32:04,440
the tunnel it's there it's really made

767
00:32:00,990 --> 00:32:06,990
for you you have a connection to the to

768
00:32:04,440 --> 00:32:10,680
the to the data collection server so

769
00:32:06,990 --> 00:32:13,290
maybe if we go to the next one I can

770
00:32:10,680 --> 00:32:18,060
just try use my privileged position to

771
00:32:13,290 --> 00:32:19,290
attack the data server now there should

772
00:32:18,060 --> 00:32:21,960
be this could be a clue to something

773
00:32:19,290 --> 00:32:24,590
else you could do well what would be a

774
00:32:21,960 --> 00:32:27,150
question you would ask at this point and

775
00:32:24,590 --> 00:32:31,340
the question we asked is on the on the

776
00:32:27,150 --> 00:32:36,290
screen hmm show me your firewall rules

777
00:32:31,340 --> 00:32:45,629
please and once we had a look at those

778
00:32:36,290 --> 00:32:48,330
boom we had an open door so so the this

779
00:32:45,630 --> 00:32:52,070
if we if we go to the so we could use

780
00:32:48,330 --> 00:32:55,169
the sim card to attack the data center

781
00:32:52,070 --> 00:32:58,020
because everything's IP we can just try

782
00:32:55,170 --> 00:32:59,820
and scan the data center find valid

783
00:32:58,020 --> 00:33:02,160
valid servers and then try and attack

784
00:32:59,820 --> 00:33:03,840
them through this privileged position

785
00:33:02,160 --> 00:33:06,090
conferred by the fact that we had a SIM

786
00:33:03,840 --> 00:33:07,740
card with a secure tunnel straight into

787
00:33:06,090 --> 00:33:11,620
the data center

788
00:33:07,740 --> 00:33:13,960
so what can we learn from this so

789
00:33:11,620 --> 00:33:16,928
actually this is an instance of a

790
00:33:13,960 --> 00:33:22,809
well-known attack pattern which is quite

791
00:33:16,929 --> 00:33:24,490
a malicious client so so it's g-great a

792
00:33:22,809 --> 00:33:26,860
man quite a malicious client and we have

793
00:33:24,490 --> 00:33:28,960
a definition there on the screen so we

794
00:33:26,860 --> 00:33:31,059
can so you create a malicious client in

795
00:33:28,960 --> 00:33:35,470
you you you abused the assumptions made

796
00:33:31,059 --> 00:33:36,789
in the design which aren't even though

797
00:33:35,470 --> 00:33:39,610
the concept is completely

798
00:33:36,789 --> 00:33:41,769
straightforward that sometimes useful to

799
00:33:39,610 --> 00:33:43,709
think about what the attacker can do to

800
00:33:41,769 --> 00:33:46,299
get there

801
00:33:43,710 --> 00:33:48,100
so the other thing is you have controls

802
00:33:46,299 --> 00:33:50,320
are many layers of the stack you got you

803
00:33:48,100 --> 00:33:51,939
know the application layer and the

804
00:33:50,320 --> 00:33:54,460
transport layers and these all have to

805
00:33:51,940 --> 00:33:57,490
work together so the control preventing

806
00:33:54,460 --> 00:34:00,460
an attacker attacking the system was a

807
00:33:57,490 --> 00:34:03,549
layer 3 control so we mentioned this

808
00:34:00,460 --> 00:34:05,919
already when threat modeling think about

809
00:34:03,549 --> 00:34:08,050
the think about the text stack how did

810
00:34:05,919 --> 00:34:10,149
it how does each layer support the

811
00:34:08,050 --> 00:34:13,960
solution because this is a that the

812
00:34:10,149 --> 00:34:23,319
existence of which viable rules was was

813
00:34:13,960 --> 00:34:23,589
critical and I think we yeah yeah there

814
00:34:23,319 --> 00:34:29,649
we go

815
00:34:23,589 --> 00:34:31,649
yeah this might wonder your okay so I

816
00:34:29,649 --> 00:34:35,290
think this is our last example is

817
00:34:31,649 --> 00:34:38,259
username we just wanted to talk about a

818
00:34:35,290 --> 00:34:41,409
user as a way of talking about assets is

819
00:34:38,260 --> 00:34:45,310
a user name and asset so what is an

820
00:34:41,409 --> 00:34:48,520
asset we typically think of assets as

821
00:34:45,310 --> 00:34:51,520
being data but they could also be

822
00:34:48,520 --> 00:34:54,780
functionality some something about the

823
00:34:51,520 --> 00:34:58,230
system so an example could be a

824
00:34:54,780 --> 00:35:02,170
subscription for your broadband provider

825
00:34:58,230 --> 00:35:07,150
so so just just the just the access to

826
00:35:02,170 --> 00:35:08,349
the network is an asset because users

827
00:35:07,150 --> 00:35:10,710
haven't signed up shouldn't have access

828
00:35:08,349 --> 00:35:13,060
to the network so your download upload

829
00:35:10,710 --> 00:35:15,790
speed that you sign up for in your

830
00:35:13,060 --> 00:35:19,180
contract that could be an asset or your

831
00:35:15,790 --> 00:35:21,279
monthly allowance could be an asset in

832
00:35:19,180 --> 00:35:25,410
reality assets are not

833
00:35:21,280 --> 00:35:28,480
and the endgame they're just one way of

834
00:35:25,410 --> 00:35:30,009
discovering attacker goals so if you can

835
00:35:28,480 --> 00:35:32,080
enumerate if we can think of it as

836
00:35:30,010 --> 00:35:34,630
enumerated assets it's kind of a

837
00:35:32,080 --> 00:35:36,730
bottom-up approach we can find all the

838
00:35:34,630 --> 00:35:38,650
assets in the system and maybe we can

839
00:35:36,730 --> 00:35:40,960
think about new attack goals where as

840
00:35:38,650 --> 00:35:42,940
attack tree is something a little bit

841
00:35:40,960 --> 00:35:44,710
different we start starting at the top

842
00:35:42,940 --> 00:35:46,570
and we're thinking about an attack goal

843
00:35:44,710 --> 00:35:49,210
we're doing some kind of decomposition I

844
00:35:46,570 --> 00:35:52,150
want to read this Isis email well I can

845
00:35:49,210 --> 00:35:54,220
do it this way or I can sit next to the

846
00:35:52,150 --> 00:35:57,310
slice on the on the way on the way home

847
00:35:54,220 --> 00:36:02,169
on the train it's just a bottom-up way

848
00:35:57,310 --> 00:36:06,670
of deriving attack goals so it's user ID

849
00:36:02,170 --> 00:36:11,050
an asset what do you think depends right

850
00:36:06,670 --> 00:36:16,390
so the example we have is is from a

851
00:36:11,050 --> 00:36:19,630
multiplayer game where critically there

852
00:36:16,390 --> 00:36:22,120
was money involved and so people were

853
00:36:19,630 --> 00:36:26,080
playing for points and there was a

854
00:36:22,120 --> 00:36:31,799
leaderboard and there was money for the

855
00:36:26,080 --> 00:36:31,799
best player so what's the attack here

856
00:36:32,790 --> 00:36:40,990
very straightforward attack yes

857
00:36:37,990 --> 00:36:51,390
find out find out who your competitors

858
00:36:40,990 --> 00:36:55,000
are and just toss them and this and so

859
00:36:51,390 --> 00:36:58,150
you just login as these identifies as

860
00:36:55,000 --> 00:37:01,150
these users you have their IDs just try

861
00:36:58,150 --> 00:37:08,170
some bad login but bad login attempts

862
00:37:01,150 --> 00:37:13,390
and and you can lock them out do we move

863
00:37:08,170 --> 00:37:16,750
on so there we go so so um so this

864
00:37:13,390 --> 00:37:20,650
really happened and of course the

865
00:37:16,750 --> 00:37:23,620
helpdesk soon got lots of calls from

866
00:37:20,650 --> 00:37:25,330
extremely irate users you were near the

867
00:37:23,620 --> 00:37:27,190
top of the leaderboard and they were

868
00:37:25,330 --> 00:37:29,500
complaining about they were busy playing

869
00:37:27,190 --> 00:37:32,440
and suddenly they got locked out of the

870
00:37:29,500 --> 00:37:35,580
game and in this way Bob can simply

871
00:37:32,440 --> 00:37:40,230
climb the leaderboard now

872
00:37:35,580 --> 00:37:44,049
so we see other examples of where of

873
00:37:40,230 --> 00:37:48,280
where another example of where user ID

874
00:37:44,050 --> 00:37:49,710
is an asset is and when in consumer to

875
00:37:48,280 --> 00:37:53,440
business or business to business

876
00:37:49,710 --> 00:37:55,630
typically the requirement for business

877
00:37:53,440 --> 00:37:57,970
to business is high availability in that

878
00:37:55,630 --> 00:38:01,540
case something like an access key

879
00:37:57,970 --> 00:38:04,750
identifier could also be an asset so

880
00:38:01,540 --> 00:38:08,500
what are the lessons learned from from

881
00:38:04,750 --> 00:38:10,300
this one well in some cases again and

882
00:38:08,500 --> 00:38:11,710
identify could be an asset but also

883
00:38:10,300 --> 00:38:13,840
asset discovery

884
00:38:11,710 --> 00:38:18,310
it's a bottom-up technique can help you

885
00:38:13,840 --> 00:38:21,370
think about new attacks not all users

886
00:38:18,310 --> 00:38:23,830
are equal in the case for example of a

887
00:38:21,370 --> 00:38:26,980
business-to-business system or consumer

888
00:38:23,830 --> 00:38:31,750
to business those user identifies have

889
00:38:26,980 --> 00:38:33,790
different security requirements so in

890
00:38:31,750 --> 00:38:35,560
fact this is a violation if we just

891
00:38:33,790 --> 00:38:38,259
abstracted a little bit more just a

892
00:38:35,560 --> 00:38:41,529
violation of a well known design policy

893
00:38:38,260 --> 00:38:46,680
which is the policy of least common

894
00:38:41,530 --> 00:38:50,230
mechanism in this case in in the case of

895
00:38:46,680 --> 00:38:57,910
businesses user identifies that's

896
00:38:50,230 --> 00:39:00,580
sharing the same namespace with users ok

897
00:38:57,910 --> 00:39:02,350
yeah so what we've seen here hopefully

898
00:39:00,580 --> 00:39:04,660
is just some examples for you to take

899
00:39:02,350 --> 00:39:06,160
away as either you perform your threat

900
00:39:04,660 --> 00:39:07,740
models things to keep in mind in terms

901
00:39:06,160 --> 00:39:09,430
of looking at both the software

902
00:39:07,740 --> 00:39:12,160
technology stack as well as the

903
00:39:09,430 --> 00:39:14,140
deployment infrastructure and also if

904
00:39:12,160 --> 00:39:16,450
you are a developer and word architect

905
00:39:14,140 --> 00:39:18,580
designing systems some of these things

906
00:39:16,450 --> 00:39:20,669
may be things you can keep in mind and

907
00:39:18,580 --> 00:39:23,799
see if there are similarities or similar

908
00:39:20,670 --> 00:39:27,760
pitfalls that you could potentially fall

909
00:39:23,800 --> 00:39:30,940
for and try to avoid them so the thing

910
00:39:27,760 --> 00:39:32,890
here is that these things do exist we

911
00:39:30,940 --> 00:39:34,960
often talk about threat modeling and

912
00:39:32,890 --> 00:39:36,640
there's a lot of talks about roses and

913
00:39:34,960 --> 00:39:38,830
all of that what we want to do here is

914
00:39:36,640 --> 00:39:41,049
talk about some actual things that we

915
00:39:38,830 --> 00:39:42,549
encounter and what kind of design flaws

916
00:39:41,050 --> 00:39:44,020
are out there because they do exist and

917
00:39:42,550 --> 00:39:45,940
sometimes becomes a very theoretical but

918
00:39:44,020 --> 00:39:47,920
hopefully we showed you some examples of

919
00:39:45,940 --> 00:39:51,130
of how these design flow

920
00:39:47,920 --> 00:39:52,359
come into effect in Bury systems and one

921
00:39:51,130 --> 00:39:54,490
of the things we want to point out is

922
00:39:52,359 --> 00:39:56,319
that the threat modeling is often

923
00:39:54,490 --> 00:39:58,089
focused on controls in ways where

924
00:39:56,319 --> 00:40:00,099
controls are missing or can be bypassed

925
00:39:58,089 --> 00:40:01,690
and that is a really good starting point

926
00:40:00,099 --> 00:40:03,369
and often we should have like checklist

927
00:40:01,690 --> 00:40:05,410
or similar things of standard

928
00:40:03,369 --> 00:40:07,900
mitigations and things your system needs

929
00:40:05,410 --> 00:40:09,970
to do to protect various things in terms

930
00:40:07,900 --> 00:40:12,430
of good sign but the controls themselves

931
00:40:09,970 --> 00:40:14,140
may not be enough to review in isolation

932
00:40:12,430 --> 00:40:16,240
you need to look at the whole system how

933
00:40:14,140 --> 00:40:18,038
these controls interact how they support

934
00:40:16,240 --> 00:40:19,689
each other and how they build up the

935
00:40:18,039 --> 00:40:21,430
security of the system to make sure that

936
00:40:19,690 --> 00:40:23,529
they actually provide the

937
00:40:21,430 --> 00:40:25,058
confidentiality integrity and other

938
00:40:23,529 --> 00:40:27,190
security properties that you want of

939
00:40:25,059 --> 00:40:29,470
your system

940
00:40:27,190 --> 00:40:31,059
and with that we want to say that threat

941
00:40:29,470 --> 00:40:32,919
modeling is something you can use to try

942
00:40:31,059 --> 00:40:35,079
to uncover these issues and help you

943
00:40:32,920 --> 00:40:38,710
identify these risks and hopefully fix

944
00:40:35,079 --> 00:40:39,789
them before the bad guys do and with

945
00:40:38,710 --> 00:40:42,160
that we're running out of time we just

946
00:40:39,789 --> 00:40:44,529
want to see se keep calm and carry on

947
00:40:42,160 --> 00:40:46,598
threat modeling and hopefully you got

948
00:40:44,529 --> 00:40:48,279
something with you from this session if

949
00:40:46,599 --> 00:40:49,180
we have a few minutes maybe we can take

950
00:40:48,279 --> 00:40:50,769
some questions okay

951
00:40:49,180 --> 00:40:52,450
Erika dick we're two questions for

952
00:40:50,769 --> 00:40:54,808
discussion but first I think the

953
00:40:52,450 --> 00:40:54,808
speakers

954
00:40:59,269 --> 00:41:08,399
any question maybe let's me take off

955
00:41:05,670 --> 00:41:10,529
with one question you're referring to

956
00:41:08,400 --> 00:41:12,450
the tread modeling as a way to actually

957
00:41:10,529 --> 00:41:13,799
identify some of the issues I can

958
00:41:12,450 --> 00:41:15,479
imagine depending on how you actually

959
00:41:13,799 --> 00:41:16,739
execute your threat modeling some of the

960
00:41:15,479 --> 00:41:18,989
issues might actually end up being

961
00:41:16,739 --> 00:41:20,549
enumerated almost might not do you have

962
00:41:18,989 --> 00:41:22,680
some good suggestions to say well if you

963
00:41:20,549 --> 00:41:23,640
start with stright or anything else what

964
00:41:22,680 --> 00:41:25,919
are the things that you need to add on

965
00:41:23,640 --> 00:41:28,999
top of that to identify more issues than

966
00:41:25,920 --> 00:41:28,999
you normally would do with your team

967
00:41:29,180 --> 00:41:33,660
yeah so as I said in summary what I

968
00:41:32,039 --> 00:41:35,880
think you can just start with this if

969
00:41:33,660 --> 00:41:37,558
you have like a standard checklist may

970
00:41:35,880 --> 00:41:38,880
be good to compare against and just

971
00:41:37,559 --> 00:41:40,440
under methodologies like stride for

972
00:41:38,880 --> 00:41:41,759
example looking at spoofing tampering

973
00:41:40,440 --> 00:41:44,039
repudiation and those type of threats to

974
00:41:41,759 --> 00:41:46,200
help you think about whether there are

975
00:41:44,039 --> 00:41:48,769
any threats relate to those kind of

976
00:41:46,200 --> 00:41:57,029
categories that can apply to the system

977
00:41:48,769 --> 00:41:58,348
but then I think there's also you this

978
00:41:57,029 --> 00:42:01,469
standard ones you can use but I think

979
00:41:58,349 --> 00:42:02,910
you need to build for the vertical Irian

980
00:42:01,469 --> 00:42:04,890
or technologist accurate and they're

981
00:42:02,910 --> 00:42:07,140
specific things both to the industry and

982
00:42:04,890 --> 00:42:11,450
to six knowledge that is used that you

983
00:42:07,140 --> 00:42:15,598
also need to consider so I think you can

984
00:42:11,450 --> 00:42:21,299
look at the various things that come

985
00:42:15,599 --> 00:42:24,029
from not not only from stri but if you

986
00:42:21,299 --> 00:42:26,069
look at testing standards for example

987
00:42:24,029 --> 00:42:29,279
you can look at things that people would

988
00:42:26,069 --> 00:42:31,979
look for in penetration test and you can

989
00:42:29,279 --> 00:42:34,140
see and try to think of is that are

990
00:42:31,979 --> 00:42:36,029
those pointing to issues that could be

991
00:42:34,140 --> 00:42:38,219
design flaws that you can also try to

992
00:42:36,029 --> 00:42:41,069
consider in the design phase so there's

993
00:42:38,219 --> 00:42:42,569
a combination of material you can use to

994
00:42:41,069 --> 00:42:43,890
fight in combat I was also thinking

995
00:42:42,569 --> 00:42:45,239
about deployment fields for instance

996
00:42:43,890 --> 00:42:47,308
because some of the issues you found

997
00:42:45,239 --> 00:42:48,930
were not only on the architecture basis

998
00:42:47,309 --> 00:42:50,579
but also the way they were deployed for

999
00:42:48,930 --> 00:42:52,469
instance the way you actually distribute

1000
00:42:50,579 --> 00:42:54,839
the way you actually duplicate certain

1001
00:42:52,469 --> 00:42:58,049
services is that something that you

1002
00:42:54,839 --> 00:43:00,960
already need yes yes yes good point so

1003
00:42:58,049 --> 00:43:03,630
why should what we do in their variant

1004
00:43:00,960 --> 00:43:05,400
personal methodologies but one that we

1005
00:43:03,630 --> 00:43:07,859
use that synopsis is actually overlaying

1006
00:43:05,400 --> 00:43:09,660
a component diagram onto the deployment

1007
00:43:07,859 --> 00:43:11,950
as well so we're looking at how these

1008
00:43:09,660 --> 00:43:13,299
systems are deployed and

1009
00:43:11,950 --> 00:43:15,069
of the infrastructure and the service

1010
00:43:13,300 --> 00:43:17,290
and so on so we we're not only looking

1011
00:43:15,070 --> 00:43:19,450
at the the logical flow of data between

1012
00:43:17,290 --> 00:43:21,910
components but also how it's actually

1013
00:43:19,450 --> 00:43:36,240
deployed in infrastructure wise okay

1014
00:43:21,910 --> 00:43:40,660
thank you any other question yeah hi

1015
00:43:36,240 --> 00:43:43,779
name is Yomi so correct me if I'm wrong

1016
00:43:40,660 --> 00:43:47,319
it seems to me the value you get from

1017
00:43:43,780 --> 00:43:49,440
track modeling is a function of the in

1018
00:43:47,320 --> 00:43:51,820
develop individuals or the parties

1019
00:43:49,440 --> 00:43:54,280
involved in treadmill in this experience

1020
00:43:51,820 --> 00:43:56,650
exposure and understanding or context

1021
00:43:54,280 --> 00:43:59,770
understanding of the system that is

1022
00:43:56,650 --> 00:44:02,890
being tracked by now ok can you speak

1023
00:43:59,770 --> 00:44:04,840
about maybe some resource or some maybe

1024
00:44:02,890 --> 00:44:06,250
some community or something where

1025
00:44:04,840 --> 00:44:09,310
there's like a guideline of things you

1026
00:44:06,250 --> 00:44:11,080
should consider when reviewing this type

1027
00:44:09,310 --> 00:44:12,759
of system or something like that I'm not

1028
00:44:11,080 --> 00:44:15,790
sure exactly what it is but I'm just

1029
00:44:12,760 --> 00:44:17,320
saying maybe there's some maybe there's

1030
00:44:15,790 --> 00:44:22,620
some resource out there maybe from a

1031
00:44:17,320 --> 00:44:25,090
community perspective or from just maybe

1032
00:44:22,620 --> 00:44:27,130
research Ward has been you know

1033
00:44:25,090 --> 00:44:29,770
published out there that you can

1034
00:44:27,130 --> 00:44:32,050
recommend and say if you're doing track

1035
00:44:29,770 --> 00:44:34,840
with a lien for this particular use case

1036
00:44:32,050 --> 00:44:38,200
we would recommend you check out this or

1037
00:44:34,840 --> 00:44:40,900
be part of this something like that yeah

1038
00:44:38,200 --> 00:44:42,759
good question so there are some some

1039
00:44:40,900 --> 00:44:45,760
initiatives are trying to help with that

1040
00:44:42,760 --> 00:44:49,240
I know there is an OSP initiative

1041
00:44:45,760 --> 00:44:51,070
working on example threat models I

1042
00:44:49,240 --> 00:44:52,569
haven't reviewed it myself personally

1043
00:44:51,070 --> 00:44:54,730
I'm not sure how much material there is

1044
00:44:52,570 --> 00:44:56,500
there yet but it's an initiative about

1045
00:44:54,730 --> 00:44:58,330
gathering examples of thresholds for

1046
00:44:56,500 --> 00:45:00,700
various systems and have that as like a

1047
00:44:58,330 --> 00:45:02,350
template or a guide for other people's

1048
00:45:00,700 --> 00:45:04,240
to look at and try to help them think of

1049
00:45:02,350 --> 00:45:05,710
what are the types of threats and things

1050
00:45:04,240 --> 00:45:08,410
they could apply to my system that is

1051
00:45:05,710 --> 00:45:10,420
similar to this I know there is also

1052
00:45:08,410 --> 00:45:12,580
some for various industries like

1053
00:45:10,420 --> 00:45:14,620
automotive and medical systems and

1054
00:45:12,580 --> 00:45:16,540
others that have published some threat

1055
00:45:14,620 --> 00:45:19,299
models both from companies like arm for

1056
00:45:16,540 --> 00:45:21,400
example and I think AWS has published

1057
00:45:19,300 --> 00:45:24,010
some threat models and similar so I

1058
00:45:21,400 --> 00:45:25,660
think those sort of ones we can look at

1059
00:45:24,010 --> 00:45:27,490
to help me get started

1060
00:45:25,660 --> 00:45:29,980
talking about also I think there's also

1061
00:45:27,490 --> 00:45:32,500
a slack channel for threat modeling with

1062
00:45:29,980 --> 00:45:34,120
analyst I've not been involved myself

1063
00:45:32,500 --> 00:45:36,010
there yet but I know there's a quite a

1064
00:45:34,120 --> 00:45:37,390
large community and a big group there so

1065
00:45:36,010 --> 00:45:39,460
that could also be a good resource to

1066
00:45:37,390 --> 00:45:43,480
ask questions and get some help from the

1067
00:45:39,460 --> 00:45:44,920
community yeah I just add one or two

1068
00:45:43,480 --> 00:45:47,290
things there's also the concept of

1069
00:45:44,920 --> 00:45:50,260
archetypes it's just as there are design

1070
00:45:47,290 --> 00:45:52,060
patterns there are design anti patterns

1071
00:45:50,260 --> 00:45:54,460
and they typically manifest themselves

1072
00:45:52,060 --> 00:45:57,009
in types of systems so distributed

1073
00:45:54,460 --> 00:46:01,960
system has these common kinds of

1074
00:45:57,010 --> 00:46:04,540
problems you know mobile apps there's

1075
00:46:01,960 --> 00:46:07,270
some common themes some Commons common

1076
00:46:04,540 --> 00:46:10,320
strands when you come to these systems

1077
00:46:07,270 --> 00:46:14,680
so you can apply you can look at the

1078
00:46:10,320 --> 00:46:17,050
architectural pattern and real offer a

1079
00:46:14,680 --> 00:46:22,149
checklist of of attacks that apply to

1080
00:46:17,050 --> 00:46:25,120
that kind of to that kind of system so a

1081
00:46:22,150 --> 00:46:29,560
client service system may be it's likely

1082
00:46:25,120 --> 00:46:32,200
to have business logic in the client so

1083
00:46:29,560 --> 00:46:34,600
you can apply patterns to systems not

1084
00:46:32,200 --> 00:46:37,290
just looking at the interactions

1085
00:46:34,600 --> 00:46:37,290
discreetly

1086
00:46:38,720 --> 00:46:41,899
[Music]

