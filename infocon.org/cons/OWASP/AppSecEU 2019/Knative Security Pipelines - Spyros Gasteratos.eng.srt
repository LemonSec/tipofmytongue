1
00:00:00,540 --> 00:00:02,600
you

2
00:00:03,980 --> 00:00:12,740
hey guys everyone okay cool thanks a lot

3
00:00:08,490 --> 00:00:15,150
for coming to our talk it's been we

4
00:00:12,740 --> 00:00:18,390
we've been building this for quite a

5
00:00:15,150 --> 00:00:21,780
while essentially it's our journey

6
00:00:18,390 --> 00:00:25,020
through how to build security pipelines

7
00:00:21,780 --> 00:00:28,440
for our current place we face some

8
00:00:25,020 --> 00:00:31,980
interesting tasks and I believe we solve

9
00:00:28,440 --> 00:00:35,660
them in some interesting ways so here's

10
00:00:31,980 --> 00:00:38,310
what we're going to talk about coming

11
00:00:35,660 --> 00:00:41,699
pretty much some questions for you who

12
00:00:38,310 --> 00:00:43,920
we are our environment talents some

13
00:00:41,700 --> 00:00:47,520
existing solutions we found and their

14
00:00:43,920 --> 00:00:51,030
limitations are unique requirements or

15
00:00:47,520 --> 00:00:55,050
unique to us what we chose to go with

16
00:00:51,030 --> 00:00:58,170
will give you a quick demo advantages of

17
00:00:55,050 --> 00:01:01,649
what we did and what we totally promise

18
00:00:58,170 --> 00:01:04,110
to do in the future right you try not to

19
00:01:01,649 --> 00:01:08,060
be yet another project that presents and

20
00:01:04,110 --> 00:01:11,070
then what are you give us till now

21
00:01:08,060 --> 00:01:14,700
so she changes lights yeah

22
00:01:11,070 --> 00:01:17,850
so I'm Spiros I like to say I do

23
00:01:14,700 --> 00:01:21,330
security engineering more often I just

24
00:01:17,850 --> 00:01:23,089
chased people to fix things I focus on

25
00:01:21,330 --> 00:01:27,330
application that's why I always bread

26
00:01:23,090 --> 00:01:29,520
that's my Twitter handle I work for

27
00:01:27,330 --> 00:01:31,439
these guys that london-based the

28
00:01:29,520 --> 00:01:36,179
financial technology company called SWAT

29
00:01:31,439 --> 00:01:37,860
machine they pay the bills and yeah I

30
00:01:36,180 --> 00:01:38,520
contribute to open source as much as I

31
00:01:37,860 --> 00:01:41,179
can

32
00:01:38,520 --> 00:01:42,990
I've been doing all what what things for

33
00:01:41,180 --> 00:01:46,140
many many years now

34
00:01:42,990 --> 00:01:50,130
and I guess I'm Henry I also worked with

35
00:01:46,140 --> 00:01:51,450
roastin seint jame at full machine I did

36
00:01:50,130 --> 00:01:53,449
well he's breaking stuff I'm trying to

37
00:01:51,450 --> 00:01:55,829
stop him normally it's like a challenge

38
00:01:53,450 --> 00:01:58,439
yeah I write I'm a backing engineer

39
00:01:55,829 --> 00:02:00,990
writing code and trying to write tools

40
00:01:58,439 --> 00:02:02,729
for security and this is one of the

41
00:02:00,990 --> 00:02:03,110
things we've been working on that we'll

42
00:02:02,729 --> 00:02:05,340
talk about

43
00:02:03,110 --> 00:02:07,710
you can also find me on various places

44
00:02:05,340 --> 00:02:13,950
like github or sweater as I can't let's

45
00:02:07,710 --> 00:02:16,230
go so some questions for you first so we

46
00:02:13,950 --> 00:02:18,720
can set the tone

47
00:02:16,230 --> 00:02:23,160
anybody though any security testing in

48
00:02:18,720 --> 00:02:27,599
the release pipeline hunts okay we're

49
00:02:23,160 --> 00:02:30,209
doing good we're doing good sir yeah so

50
00:02:27,599 --> 00:02:33,209
you guys support multiple languages

51
00:02:30,209 --> 00:02:35,060
right like you don't only start one like

52
00:02:33,209 --> 00:02:41,580
static code analysis tool and that's it

53
00:02:35,060 --> 00:02:44,269
right 3 3 good good dynamic testing

54
00:02:41,580 --> 00:02:47,310
anybody automatic dynamic testing right

55
00:02:44,269 --> 00:02:50,130
because static just drowned you in false

56
00:02:47,310 --> 00:02:56,250
position and some things may be fixed

57
00:02:50,130 --> 00:02:56,579
upstream configuration per team yes kind

58
00:02:56,250 --> 00:03:00,209
of

59
00:02:56,580 --> 00:03:02,310
right yes awesome thank you and who has

60
00:03:00,209 --> 00:03:05,160
less than 10 hours per week budget to do

61
00:03:02,310 --> 00:03:07,140
this right like when you when you tell

62
00:03:05,160 --> 00:03:08,790
your boss thank you we are in the same

63
00:03:07,140 --> 00:03:11,910
boat run when you're spending time

64
00:03:08,790 --> 00:03:14,548
chasing people the whole time yeah you

65
00:03:11,910 --> 00:03:17,130
have there is only 40 hours in your work

66
00:03:14,549 --> 00:03:20,370
workweek otherwise you don't have a life

67
00:03:17,130 --> 00:03:24,930
and yeah you need to you need to somehow

68
00:03:20,370 --> 00:03:27,000
prioritize things and the company is a

69
00:03:24,930 --> 00:03:29,940
start-up we don't have budget for like a

70
00:03:27,000 --> 00:03:34,220
dedicated like pipeline security testing

71
00:03:29,940 --> 00:03:37,250
thing as the others do so I'm constraint

72
00:03:34,220 --> 00:03:42,090
hi welcome

73
00:03:37,250 --> 00:03:44,220
so talk about so interest a bit about

74
00:03:42,090 --> 00:03:45,620
like our environment which probably

75
00:03:44,220 --> 00:03:48,299
resonates with a few people I'm sure

76
00:03:45,620 --> 00:03:52,019
yeah we run a micro services

77
00:03:48,299 --> 00:03:55,530
architecture on top of kubernetes there

78
00:03:52,019 --> 00:03:57,480
so very lot lots of teams are in their

79
00:03:55,530 --> 00:04:01,019
own services doing their own thing doing

80
00:03:57,480 --> 00:04:02,880
their own languages and with that we

81
00:04:01,019 --> 00:04:05,579
also expect the the developers engineers

82
00:04:02,880 --> 00:04:08,760
to own their own services so they often

83
00:04:05,579 --> 00:04:13,170
deploy their own things you don't like

84
00:04:08,760 --> 00:04:15,179
that much to you yeah this release teams

85
00:04:13,170 --> 00:04:16,798
involved but they are normally just

86
00:04:15,180 --> 00:04:20,280
providing tooling to help the teams

87
00:04:16,798 --> 00:04:23,489
actually do their releases yeah and with

88
00:04:20,279 --> 00:04:25,320
their comes Oh with FinTech

89
00:04:23,490 --> 00:04:27,900
comes a lot of traceability as well well

90
00:04:25,320 --> 00:04:29,490
this should be not always happens but so

91
00:04:27,900 --> 00:04:32,370
we want to know like

92
00:04:29,490 --> 00:04:34,199
scanners happens when or scans happen

93
00:04:32,370 --> 00:04:36,479
what pinches haven't been and how and

94
00:04:34,199 --> 00:04:38,250
what are the results and and if clients

95
00:04:36,479 --> 00:04:40,139
come to us and say hey like we found

96
00:04:38,250 --> 00:04:41,940
this issue then you see it previously we

97
00:04:40,139 --> 00:04:45,960
can come back and say oh this is what we

98
00:04:41,940 --> 00:04:49,080
did yeah and also like if you ask our

99
00:04:45,960 --> 00:04:53,310
BOCES we do devops right that's the hot

100
00:04:49,080 --> 00:04:55,318
word here essentially it means we

101
00:04:53,310 --> 00:04:56,849
release as fast as possible so we can go

102
00:04:55,319 --> 00:04:59,639
to the customers or fast as possible

103
00:04:56,849 --> 00:05:01,440
right so we need to run behind people

104
00:04:59,639 --> 00:05:03,599
they don't come to us and we cannot

105
00:05:01,440 --> 00:05:06,270
block anything because that's not devops

106
00:05:03,599 --> 00:05:08,430
and it makes sense in think like in the

107
00:05:06,270 --> 00:05:11,070
current world it makes sense you cannot

108
00:05:08,430 --> 00:05:13,560
have like six-month releases and then

109
00:05:11,070 --> 00:05:17,270
security have the ability to block

110
00:05:13,560 --> 00:05:20,789
things that's not how we do things and

111
00:05:17,270 --> 00:05:23,549
that's our challenge so we we unbolted a

112
00:05:20,789 --> 00:05:26,669
few months ago and we found an

113
00:05:23,550 --> 00:05:29,729
environment we like kubernetes a bunch

114
00:05:26,669 --> 00:05:31,620
of micro services living and dying teams

115
00:05:29,729 --> 00:05:33,180
working on projects that might be short

116
00:05:31,620 --> 00:05:35,250
lived but these projects needing the

117
00:05:33,180 --> 00:05:40,530
same amount of security as like the core

118
00:05:35,250 --> 00:05:45,120
product we write in about four official

119
00:05:40,530 --> 00:05:46,409
languages and physician official and we

120
00:05:45,120 --> 00:05:49,110
needed to build something that's usable

121
00:05:46,409 --> 00:05:52,729
by engineers because quick release cycle

122
00:05:49,110 --> 00:05:55,560
I cannot be the only one running things

123
00:05:52,729 --> 00:05:57,419
so engineers needed to be able to find

124
00:05:55,560 --> 00:06:03,479
something ideal it would run as a linter

125
00:05:57,419 --> 00:06:06,870
and again quick release a keeper so the

126
00:06:03,479 --> 00:06:10,199
next one so the very first thing we did

127
00:06:06,870 --> 00:06:12,659
does everybody I try to be lazy and find

128
00:06:10,199 --> 00:06:16,349
something of the shelf or violations not

129
00:06:12,659 --> 00:06:19,380
lazy fair enough and find something of

130
00:06:16,349 --> 00:06:21,810
the shelf or somebody else to borrow

131
00:06:19,380 --> 00:06:25,199
things from right I ideally it could be

132
00:06:21,810 --> 00:06:27,240
an ice ax who did have repository with

133
00:06:25,199 --> 00:06:31,639
all the things I need and then just

134
00:06:27,240 --> 00:06:35,759
import run of course it didn't work so

135
00:06:31,639 --> 00:06:38,760
in the past and most presentations I've

136
00:06:35,759 --> 00:06:43,289
seen on the subject and talks with but

137
00:06:38,760 --> 00:06:45,029
some of you everybody seems to be doing

138
00:06:43,289 --> 00:06:46,949
something like that there are pretty

139
00:06:45,029 --> 00:06:50,279
good tools out there that are either

140
00:06:46,949 --> 00:06:52,909
commercial or non-commercial that do

141
00:06:50,279 --> 00:06:55,889
both static and dynamic analysis in

142
00:06:52,909 --> 00:06:59,460
z-zap for example it's pretty good at

143
00:06:55,889 --> 00:07:01,439
doing dynamic analysis and there are

144
00:06:59,460 --> 00:07:05,430
plugins for most environments that

145
00:07:01,439 --> 00:07:08,939
support said tools and a fair amount of

146
00:07:05,430 --> 00:07:12,149
open source things bonded is one of my

147
00:07:08,939 --> 00:07:13,139
favorite and however all these are

148
00:07:12,149 --> 00:07:15,449
different tools

149
00:07:13,139 --> 00:07:17,669
everybody speaks their own language the

150
00:07:15,449 --> 00:07:24,300
results all come in their own way and

151
00:07:17,669 --> 00:07:26,219
then you do a little scripting to glue

152
00:07:24,300 --> 00:07:28,319
everything together or lots of hacky

153
00:07:26,219 --> 00:07:33,029
leap in tests our scripting things

154
00:07:28,319 --> 00:07:35,580
together don't rub it in and yeah so

155
00:07:33,029 --> 00:07:39,180
scripting to glue everything together or

156
00:07:35,580 --> 00:07:42,359
say things like if this piece of code is

157
00:07:39,180 --> 00:07:45,180
Python just run the python pipeline if

158
00:07:42,360 --> 00:07:47,189
this is a kubernetes just run some

159
00:07:45,180 --> 00:07:48,899
container scanning and goes on so that

160
00:07:47,189 --> 00:07:50,430
you are efficient and everything speaks

161
00:07:48,899 --> 00:07:52,919
to everything else and you understand

162
00:07:50,430 --> 00:07:54,029
what's going on yeah the thing that

163
00:07:52,919 --> 00:07:56,399
we're seeing with what are the existing

164
00:07:54,029 --> 00:07:58,199
tooling is that they have to make a lot

165
00:07:56,399 --> 00:08:01,439
of assumptions as well like they assume

166
00:07:58,199 --> 00:08:04,649
you use github we don't they assume you

167
00:08:01,439 --> 00:08:05,759
use the Icicle or Travis we don't and

168
00:08:04,649 --> 00:08:08,099
there's a few things like that which we

169
00:08:05,759 --> 00:08:09,659
just we're finding quiet quite grainy

170
00:08:08,099 --> 00:08:17,099
and there know all of the existing stuff

171
00:08:09,659 --> 00:08:19,619
out there so talking to our engineers

172
00:08:17,099 --> 00:08:22,110
and the decision makers in the company

173
00:08:19,619 --> 00:08:25,259
we needed something that trans both

174
00:08:22,110 --> 00:08:30,930
locally and on cloud because cloud come

175
00:08:25,259 --> 00:08:33,899
based company it needs to run good no

176
00:08:30,930 --> 00:08:35,760
words and then if you go and then it

177
00:08:33,899 --> 00:08:38,159
needs to be environment agnostic so it

178
00:08:35,760 --> 00:08:41,130
needs to run both on the MacBook off

179
00:08:38,159 --> 00:08:43,318
like some management person and the

180
00:08:41,130 --> 00:08:47,279
Linux machines hope the engineers also

181
00:08:43,318 --> 00:08:50,069
on the cloud or pretty much in a lot of

182
00:08:47,279 --> 00:08:53,189
places they didn't want custom waits for

183
00:08:50,069 --> 00:08:55,740
different runs for different setups make

184
00:08:53,189 --> 00:08:59,310
sense and

185
00:08:55,740 --> 00:09:02,690
that was the important one we propose

186
00:08:59,310 --> 00:09:05,359
the solution that runs on Jenkins and

187
00:09:02,690 --> 00:09:08,700
just dumps results to elasticsearch

188
00:09:05,360 --> 00:09:10,740
goods are done very quickly they told us

189
00:09:08,700 --> 00:09:14,700
that you need to be able to mix and

190
00:09:10,740 --> 00:09:18,750
match everything so run locally run

191
00:09:14,700 --> 00:09:21,060
exactly the scanners you want output to

192
00:09:18,750 --> 00:09:23,670
your custom place just because you

193
00:09:21,060 --> 00:09:26,609
prefer something like public ATAR

194
00:09:23,670 --> 00:09:30,719
or who might switch to JIRA so it needed

195
00:09:26,610 --> 00:09:32,790
to be able to do JIRA or elasticsearch

196
00:09:30,720 --> 00:09:34,680
we'll have a person our team whose

197
00:09:32,790 --> 00:09:35,939
favorite to use elasticsearch so we

198
00:09:34,680 --> 00:09:40,469
needed to integrate the last years as

199
00:09:35,940 --> 00:09:42,930
well and it mean it could then be one

200
00:09:40,470 --> 00:09:45,390
monolithic thing most of the solutions

201
00:09:42,930 --> 00:09:49,260
we found are just this giant monolith

202
00:09:45,390 --> 00:09:51,330
you take it for 50 into your data center

203
00:09:49,260 --> 00:09:54,900
or necessary somewhere and good luck

204
00:09:51,330 --> 00:09:57,630
with changing it and most of all it must

205
00:09:54,900 --> 00:09:59,939
lay really well with the CI because if

206
00:09:57,630 --> 00:10:01,170
you don't do it automatically as part of

207
00:09:59,940 --> 00:10:08,340
your billet why are you building

208
00:10:01,170 --> 00:10:10,410
Internet so yeah really work Drakon so

209
00:10:08,340 --> 00:10:12,060
so Jacqueline I you can explain that

210
00:10:10,410 --> 00:10:14,910
Yoker I didn't explain where the name

211
00:10:12,060 --> 00:10:18,479
comes from for now so kubernetes has

212
00:10:14,910 --> 00:10:21,329
this affinity for Greek names we don't

213
00:10:18,480 --> 00:10:24,270
know why somebody in Google must be

214
00:10:21,330 --> 00:10:28,980
Greek or must like Greek and our mother

215
00:10:24,270 --> 00:10:32,850
definitely liked it so she demanded the

216
00:10:28,980 --> 00:10:36,360
Greek sounding name dragon sounds like

217
00:10:32,850 --> 00:10:40,340
dragon which is cool also he used to be

218
00:10:36,360 --> 00:10:43,500
a very strict Athenian despot so

219
00:10:40,340 --> 00:10:47,820
technically the solution is meant to be

220
00:10:43,500 --> 00:10:51,960
kind of a streak baseline like despotic

221
00:10:47,820 --> 00:10:55,470
yeah Alex gun for your code yeah exactly

222
00:10:51,960 --> 00:10:58,710
exactly he said something like I believe

223
00:10:55,470 --> 00:11:01,200
that the punishment for stealing is this

224
00:10:58,710 --> 00:11:03,150
and there is no further pun no worse

225
00:11:01,200 --> 00:11:06,920
punishment for anything else so let's

226
00:11:03,150 --> 00:11:10,670
kill not great what he did

227
00:11:06,920 --> 00:11:12,738
would definitely don't kill you yeah so

228
00:11:10,670 --> 00:11:16,099
as I mentioned we're running committees

229
00:11:12,739 --> 00:11:17,749
we run everything on committees I think

230
00:11:16,100 --> 00:11:19,519
we have one service in terms of service

231
00:11:17,749 --> 00:11:20,809
in the company that's not and as

232
00:11:19,519 --> 00:11:21,949
something that we can't get rid of

233
00:11:20,809 --> 00:11:25,459
everything else is like kubernetes

234
00:11:21,949 --> 00:11:28,819
within the whole company we decided so

235
00:11:25,459 --> 00:11:31,248
when we first uttered looking at writing

236
00:11:28,819 --> 00:11:34,459
this about the same time tip Tom came

237
00:11:31,249 --> 00:11:38,629
out ticked on is come originally written

238
00:11:34,459 --> 00:11:40,549
by the K native foundation and is all

239
00:11:38,629 --> 00:11:42,829
about running CI pipelines on top of

240
00:11:40,549 --> 00:11:45,679
kubernetes the air kubernetes is a

241
00:11:42,829 --> 00:11:47,149
little bit hard to do that with it's

242
00:11:45,679 --> 00:11:48,499
great at running services for long

243
00:11:47,149 --> 00:11:51,379
periods it's great at running one-off

244
00:11:48,499 --> 00:11:53,209
jobs but running jobs kicked off by

245
00:11:51,379 --> 00:11:56,809
something else is kind of hard without

246
00:11:53,209 --> 00:12:00,549
using something like ticked on yeah and

247
00:11:56,809 --> 00:12:02,600
then to basically stick between all the

248
00:12:00,549 --> 00:12:05,749
tasks that were you that I'll describe

249
00:12:02,600 --> 00:12:06,649
in a moment we decided they would make

250
00:12:05,749 --> 00:12:08,419
use of protobufs

251
00:12:06,649 --> 00:12:11,720
just to find a really hard API between

252
00:12:08,419 --> 00:12:12,889
all the tasks and this is this being

253
00:12:11,720 --> 00:12:15,619
really beneficial from the point of view

254
00:12:12,889 --> 00:12:17,619
of we don't live pin testers do what

255
00:12:15,619 --> 00:12:20,660
they want and just output what they want

256
00:12:17,619 --> 00:12:22,730
we basically define what what we want

257
00:12:20,660 --> 00:12:26,360
from each two and what we expect to go

258
00:12:22,730 --> 00:12:28,970
into the next place become obvious a

259
00:12:26,360 --> 00:12:33,199
moment um yeah we're using Postgres has

260
00:12:28,970 --> 00:12:35,239
great data store that this yeah it's

261
00:12:33,199 --> 00:12:36,459
basically used as a staple in our

262
00:12:35,239 --> 00:12:40,399
company as well

263
00:12:36,459 --> 00:12:42,229
so yes place-based or sibling and we

264
00:12:40,399 --> 00:12:44,209
also writing everything and going -

265
00:12:42,230 --> 00:12:45,529
really you started off with Python but

266
00:12:44,209 --> 00:12:48,589
we're finding just doing with kubernetes

267
00:12:45,529 --> 00:12:50,899
a bit nicer in and go the libraries are

268
00:12:48,589 --> 00:12:52,850
just a little bit bit of support which

269
00:12:50,899 --> 00:12:54,799
is why we shifting their way every one

270
00:12:52,850 --> 00:12:55,970
of the four languages though that just

271
00:12:54,799 --> 00:12:58,069
two of the four languages of Python and

272
00:12:55,970 --> 00:13:00,199
go and their company that we officially

273
00:12:58,069 --> 00:13:02,378
supports good great support and company

274
00:13:00,199 --> 00:13:02,378
as well

275
00:13:03,489 --> 00:13:10,269
so how do you go for this which are yes

276
00:13:06,829 --> 00:13:13,699
sir so check on is a taped on pipeline

277
00:13:10,269 --> 00:13:18,079
and to explain a little bit about like

278
00:13:13,699 --> 00:13:19,429
what tipped on us as a project library

279
00:13:18,079 --> 00:13:20,810
if you like that we use an upstream

280
00:13:19,429 --> 00:13:23,269
resource that we use

281
00:13:20,810 --> 00:13:26,508
has a pipeline concept and energy

282
00:13:23,269 --> 00:13:29,449
pipeline this pursuit of tasks where one

283
00:13:26,509 --> 00:13:31,310
task will feed into another task so a

284
00:13:29,449 --> 00:13:34,250
really typical CI

285
00:13:31,310 --> 00:13:36,649
pipeline might have like a docker build

286
00:13:34,250 --> 00:13:39,079
step and there or yeah dr. Bose

287
00:13:36,649 --> 00:13:41,300
stiffened docker push tip we're gonna

288
00:13:39,079 --> 00:13:43,180
size dip that because there's a whore

289
00:13:41,300 --> 00:13:45,790
interested in security pipelines but

290
00:13:43,180 --> 00:13:48,680
only way you could use to come for um

291
00:13:45,790 --> 00:13:53,300
yeah then each task has dips and it

292
00:13:48,680 --> 00:13:57,609
might be like might be like I don't like

293
00:13:53,300 --> 00:14:01,939
docket docker build and they're all

294
00:13:57,610 --> 00:14:04,220
right Linda caboose and then beat

295
00:14:01,939 --> 00:14:06,439
kubernetes config and then deploy it or

296
00:14:04,220 --> 00:14:07,879
applying yeah and then you can surpass

297
00:14:06,439 --> 00:14:09,709
arguments and their arguments might be

298
00:14:07,879 --> 00:14:14,480
like which get repository you're wanting

299
00:14:09,709 --> 00:14:16,518
to go from or might be like which were

300
00:14:14,480 --> 00:14:17,870
which parameters you want to pass to in

301
00:14:16,519 --> 00:14:21,019
our case which parameters you want to

302
00:14:17,870 --> 00:14:26,240
pass to Bandar as producer and the

303
00:14:21,019 --> 00:14:28,459
pipeline yeah so these this architecture

304
00:14:26,240 --> 00:14:31,610
is very critical for us because it

305
00:14:28,459 --> 00:14:33,829
allows us to template tasks and in the

306
00:14:31,610 --> 00:14:36,439
tasks run just provide a specific

307
00:14:33,829 --> 00:14:38,689
configuration to the team or the

308
00:14:36,439 --> 00:14:44,180
specific project but I can have my PII

309
00:14:38,689 --> 00:14:47,269
or PCI task which takes the code for the

310
00:14:44,180 --> 00:14:50,149
really basic PCI stuff and in the tasks

311
00:14:47,269 --> 00:14:52,339
run depending on the team you have a map

312
00:14:50,149 --> 00:14:56,089
with configuration so that you're not

313
00:14:52,339 --> 00:14:58,189
taking for Java if they'd see if Java

314
00:14:56,089 --> 00:14:59,810
vulnerabilities if the team only writes

315
00:14:58,189 --> 00:15:04,430
in gold and for example that would be an

316
00:14:59,810 --> 00:15:06,859
efficient so because of that Tecton

317
00:15:04,430 --> 00:15:08,930
works really well at least for security

318
00:15:06,860 --> 00:15:13,809
pipelines and for the way we we do

319
00:15:08,930 --> 00:15:20,000
things yeah Jen explained yep here sure

320
00:15:13,809 --> 00:15:23,480
so the protobufs are yet another project

321
00:15:20,000 --> 00:15:26,959
by Google it's you can imagine it as an

322
00:15:23,480 --> 00:15:31,550
extension to the HTTP protocol it's

323
00:15:26,959 --> 00:15:34,660
statically typed and started statically

324
00:15:31,550 --> 00:15:39,020
typed and statically formatted so

325
00:15:34,660 --> 00:15:42,709
Jason on steroids I guess and for our

326
00:15:39,020 --> 00:15:43,130
use case we have only four messages long

327
00:15:42,710 --> 00:15:45,560
story

328
00:15:43,130 --> 00:15:48,860
what do you want a lunch lunch -

329
00:15:45,560 --> 00:15:51,890
response what came back from that and

330
00:15:48,860 --> 00:15:57,350
Ellen's total response has raw data that

331
00:15:51,890 --> 00:15:59,240
get in digested two issues and one issue

332
00:15:57,350 --> 00:16:02,510
might or might not have one or more

333
00:15:59,240 --> 00:16:05,870
vulnerabilities so it's yeah just just

334
00:16:02,510 --> 00:16:09,830
that the next one and here's how an

335
00:16:05,870 --> 00:16:11,120
issue looks like in protobuf format you

336
00:16:09,830 --> 00:16:13,910
have several field

337
00:16:11,120 --> 00:16:16,520
seven in this case the first feel that

338
00:16:13,910 --> 00:16:20,030
the protobuf is gonna I read is a string

339
00:16:16,520 --> 00:16:24,710
with a target pretty much what did you

340
00:16:20,030 --> 00:16:27,380
scan the second is the type this is a

341
00:16:24,710 --> 00:16:30,580
free-form I works for us because can be

342
00:16:27,380 --> 00:16:34,670
either the tree name or the title or

343
00:16:30,580 --> 00:16:37,610
dynamic or static or SAT tests if you

344
00:16:34,670 --> 00:16:39,650
run special security specific SAT tests

345
00:16:37,610 --> 00:16:41,510
or regression tests and then human

346
00:16:39,650 --> 00:16:44,620
readable title so you don't have to read

347
00:16:41,510 --> 00:16:49,550
the full description to find out which

348
00:16:44,620 --> 00:16:52,760
vulnerabilities what severity as as

349
00:16:49,550 --> 00:16:55,189
reported by the product an optional CBS

350
00:16:52,760 --> 00:16:57,530
s confidence as reported by the scanner

351
00:16:55,190 --> 00:16:59,240
and the human readable description so I

352
00:16:57,530 --> 00:17:00,920
can give it to developers without

353
00:16:59,240 --> 00:17:02,930
needing to fill in descriptions myself

354
00:17:00,920 --> 00:17:05,089
or like copy paste from Morse it's it's

355
00:17:02,930 --> 00:17:10,938
and often the throws are providing

356
00:17:05,089 --> 00:17:14,629
inscriptions as well yeah and so so far

357
00:17:10,939 --> 00:17:16,939
we've covered what runs hydrants and how

358
00:17:14,630 --> 00:17:18,620
it talks to each other however we

359
00:17:16,939 --> 00:17:20,720
haven't covered the scripting from the

360
00:17:18,619 --> 00:17:22,790
previous previous previous slide so we

361
00:17:20,720 --> 00:17:24,740
had to build a templating engine that

362
00:17:22,790 --> 00:17:26,839
will take arguments pretty much pretty

363
00:17:24,740 --> 00:17:29,810
much what do you wanna run which are

364
00:17:26,839 --> 00:17:32,240
there what arguments it does some

365
00:17:29,810 --> 00:17:36,020
templating magic and then outputs

366
00:17:32,240 --> 00:17:38,390
pipeline by the way I believe this image

367
00:17:36,020 --> 00:17:40,550
is super representative of a security

368
00:17:38,390 --> 00:17:42,740
pipeline you need two people to run it

369
00:17:40,550 --> 00:17:44,060
it's a dangerous job hence the Hutts and

370
00:17:42,740 --> 00:17:46,110
in the background something's on fire

371
00:17:44,060 --> 00:17:50,190
always

372
00:17:46,110 --> 00:17:53,370
so yeah so it gives you a security

373
00:17:50,190 --> 00:17:55,169
pipeline and it can either applied for

374
00:17:53,370 --> 00:17:57,178
you as well or it can just give you a

375
00:17:55,169 --> 00:18:01,769
template which you can store or apply

376
00:17:57,179 --> 00:18:03,960
for future reference yeah so let's go

377
00:18:01,769 --> 00:18:06,600
over the architecture I'm gonna come

378
00:18:03,960 --> 00:18:08,220
back to this diagram of fear but so yeah

379
00:18:06,600 --> 00:18:10,260
we'll go over a bit more detail but

380
00:18:08,220 --> 00:18:12,240
first of all I just want to cover these

381
00:18:10,260 --> 00:18:13,590
two guys first the producers and

382
00:18:12,240 --> 00:18:15,269
consumers we've started to talk about

383
00:18:13,590 --> 00:18:17,939
them a little bit but let's define the

384
00:18:15,269 --> 00:18:21,149
move that theater so producers and

385
00:18:17,940 --> 00:18:24,720
consumers they're on the left side here

386
00:18:21,149 --> 00:18:27,239
their producers they that typically are

387
00:18:24,720 --> 00:18:29,549
scanning to existing scanning tools the

388
00:18:27,240 --> 00:18:32,130
ones there were years ago take frantic

389
00:18:29,549 --> 00:18:35,039
bugs and bender and we're using

390
00:18:32,130 --> 00:18:38,669
dependency check it no yes we do oh yeah

391
00:18:35,039 --> 00:18:41,340
yes we do yeah and they so there are all

392
00:18:38,669 --> 00:18:45,990
these things so the consumers what they

393
00:18:41,340 --> 00:18:48,570
are a referee at all they launch the

394
00:18:45,990 --> 00:18:51,090
tool then they they pass the results and

395
00:18:48,570 --> 00:18:54,510
passed and put the results back into our

396
00:18:51,090 --> 00:18:56,850
protobuf format it just means that that

397
00:18:54,510 --> 00:18:59,940
the the tool is isolated from the rest

398
00:18:56,850 --> 00:19:01,709
of the pipeline and as long as you can

399
00:18:59,940 --> 00:19:05,220
write a rap a script which so far we've

400
00:19:01,710 --> 00:19:06,750
found them pretty easy to write you just

401
00:19:05,220 --> 00:19:10,350
completely abstract the tool away from

402
00:19:06,750 --> 00:19:13,649
the results on the other end consumers

403
00:19:10,350 --> 00:19:15,330
these things where you want to want to

404
00:19:13,649 --> 00:19:17,580
take data out of the pipeline and do

405
00:19:15,330 --> 00:19:19,110
something else they're really like

406
00:19:17,580 --> 00:19:20,519
useful one that we found straightaway

407
00:19:19,110 --> 00:19:22,199
that we implemented first was

408
00:19:20,519 --> 00:19:24,269
elasticsearch I'm just being able to

409
00:19:22,200 --> 00:19:26,760
dump the data somewhere and run a Cabaye

410
00:19:24,269 --> 00:19:29,700
on a dashboard or the other search

411
00:19:26,760 --> 00:19:31,679
results manually the other other places

412
00:19:29,700 --> 00:19:35,309
is slack that's that's really useful as

413
00:19:31,679 --> 00:19:38,190
well you end up finding like

414
00:19:35,309 --> 00:19:39,690
we tried yeah like if you want to dump

415
00:19:38,190 --> 00:19:41,940
all your results to slack it gets a bit

416
00:19:39,690 --> 00:19:44,370
noisy but we'll have a quick look at how

417
00:19:41,940 --> 00:19:46,559
we can like minimise that with the

418
00:19:44,370 --> 00:19:50,370
indirect sure I wish would come back to

419
00:19:46,559 --> 00:19:53,370
but is also likely fix your sub using

420
00:19:50,370 --> 00:19:55,439
yeah you need eventually you start

421
00:19:53,370 --> 00:19:56,850
dumping things in elasticsearch but you

422
00:19:55,440 --> 00:19:59,039
cannot manage things you cannot change

423
00:19:56,850 --> 00:19:59,309
this a lace you cannot do a lot of

424
00:19:59,039 --> 00:20:02,100
things

425
00:19:59,309 --> 00:20:06,059
it's really good for dashboards and for

426
00:20:02,100 --> 00:20:08,639
knowing like vaguely what's your general

427
00:20:06,059 --> 00:20:10,320
Baldr now vulnerability posture slack is

428
00:20:08,639 --> 00:20:12,269
great for matrix

429
00:20:10,320 --> 00:20:14,820
every time somebody runs it you get an

430
00:20:12,269 --> 00:20:17,789
alert it ran against like these

431
00:20:14,820 --> 00:20:19,320
directories found that many issues these

432
00:20:17,789 --> 00:20:21,090
many issues were duplicates or these

433
00:20:19,320 --> 00:20:23,039
many issues have already marked as false

434
00:20:21,090 --> 00:20:28,139
positives in the past because defect

435
00:20:23,039 --> 00:20:30,179
dojo and you get some basic results day

436
00:20:28,139 --> 00:20:32,189
to day and depending on how you feel

437
00:20:30,179 --> 00:20:35,639
that day or if it's our I have an

438
00:20:32,190 --> 00:20:38,159
ability chasing day you can invite

439
00:20:35,639 --> 00:20:40,289
people for chart yeah and then the other

440
00:20:38,159 --> 00:20:42,869
places fabricator or which we use what

441
00:20:40,289 --> 00:20:44,669
could be Jared just as easily if you

442
00:20:42,869 --> 00:20:47,908
want to say open tickets based off

443
00:20:44,669 --> 00:20:49,320
search result have scan results you have

444
00:20:47,909 --> 00:20:51,779
to be careful that noise any problem

445
00:20:49,320 --> 00:20:55,499
yeah at the beginning we were just

446
00:20:51,779 --> 00:20:58,440
opening ticket if people went tone-deaf

447
00:20:55,499 --> 00:21:01,919
pretty quickly at a signal to noise

448
00:20:58,440 --> 00:21:04,409
ratio is important no yes so so back to

449
00:21:01,919 --> 00:21:06,360
the architecture so as we've got here I

450
00:21:04,409 --> 00:21:09,809
would start off with code setup

451
00:21:06,360 --> 00:21:11,279
container yeah this basically gets your

452
00:21:09,809 --> 00:21:15,240
code into the into the pipeline

453
00:21:11,279 --> 00:21:18,990
it takes some secrets we pull them out

454
00:21:15,240 --> 00:21:22,110
of how she talked she called volt and

455
00:21:18,990 --> 00:21:25,769
dump yeah and basically clone out our

456
00:21:22,110 --> 00:21:28,559
code and get it ready for the producers

457
00:21:25,769 --> 00:21:30,539
to do their thing then the producers

458
00:21:28,559 --> 00:21:34,799
they take their launched or request

459
00:21:30,539 --> 00:21:38,059
protobuf which say is what they've got

460
00:21:34,799 --> 00:21:40,799
to do they produce their results and

461
00:21:38,059 --> 00:21:43,200
yeah and and in a moment we'll go

462
00:21:40,799 --> 00:21:47,039
through a demo as well particular video

463
00:21:43,200 --> 00:21:47,450
to show off and it wasn't India yeah

464
00:21:47,039 --> 00:21:50,789
yeah

465
00:21:47,450 --> 00:21:52,080
and then the written Thea enricher this

466
00:21:50,789 --> 00:21:54,600
is quite an important step which we

467
00:21:52,080 --> 00:21:56,009
headed and not initially but it became

468
00:21:54,600 --> 00:21:58,649
very obvious that we needed some link

469
00:21:56,009 --> 00:22:00,539
here this is just what we do is we we

470
00:21:58,649 --> 00:22:04,080
take the results and we mark them say if

471
00:22:00,539 --> 00:22:05,360
we've seen them before so we mark them

472
00:22:04,080 --> 00:22:08,070
that say that there are duplicate

473
00:22:05,360 --> 00:22:09,240
because then the rest of the the

474
00:22:08,070 --> 00:22:12,990
pipeline can actually consume it

475
00:22:09,240 --> 00:22:15,090
sensibly and the other

476
00:22:12,990 --> 00:22:16,620
whereas if you and the other one is if

477
00:22:15,090 --> 00:22:18,570
it's something is a false positive you

478
00:22:16,620 --> 00:22:20,370
don't want to be bothering people with

479
00:22:18,570 --> 00:22:22,590
false positives because then you have

480
00:22:20,370 --> 00:22:23,178
hungry dibs on your desk and that's not

481
00:22:22,590 --> 00:22:26,399
a thing

482
00:22:23,179 --> 00:22:29,549
not for you not for the devs so yeah and

483
00:22:26,399 --> 00:22:31,408
Ritter goes into the database for it for

484
00:22:29,549 --> 00:22:35,460
everything that the producer stock

485
00:22:31,409 --> 00:22:39,779
produced makes a hush so it doesn't have

486
00:22:35,460 --> 00:22:42,210
to do a lot of calculations those in the

487
00:22:39,779 --> 00:22:44,000
database figures if the house exists if

488
00:22:42,210 --> 00:22:47,340
the house exists before

489
00:22:44,000 --> 00:22:49,490
Marx it does duplicate if there has

490
00:22:47,340 --> 00:22:52,379
exists with a binary value that says

491
00:22:49,490 --> 00:22:54,299
false positive it marks it as well as

492
00:22:52,380 --> 00:22:56,850
false positive and then dumps it on a

493
00:22:54,299 --> 00:22:58,799
consumer stock yeah so the consumers as

494
00:22:56,850 --> 00:23:01,799
mentioned for like classic Tetris really

495
00:22:58,799 --> 00:23:03,418
early one is a basically where you'd get

496
00:23:01,799 --> 00:23:10,168
your results and person off to your end

497
00:23:03,419 --> 00:23:12,600
like places that a consumer yeah so yeah

498
00:23:10,169 --> 00:23:16,200
a consumer is essentially a two-litre

499
00:23:12,600 --> 00:23:17,969
grabs and race results does something to

500
00:23:16,200 --> 00:23:20,490
them that something is completely up to

501
00:23:17,970 --> 00:23:23,309
you and dumps them somewhere for example

502
00:23:20,490 --> 00:23:25,320
our elasticsearch consumer dumps her

503
00:23:23,309 --> 00:23:29,389
results into elasticsearch because

504
00:23:25,320 --> 00:23:29,389
different indexes do different things

505
00:23:30,970 --> 00:23:35,339
[Music]

506
00:23:37,730 --> 00:23:44,039
yeah yeah absolutely so a feedback loop

507
00:23:41,549 --> 00:23:46,049
as we expect the consumers to that's

508
00:23:44,039 --> 00:23:48,480
right the producers to create post

509
00:23:46,049 --> 00:23:51,750
positives but in the enricher is where

510
00:23:48,480 --> 00:23:55,470
the logic has to remove that type and if

511
00:23:51,750 --> 00:23:58,770
we see that we haven't we haven't seen a

512
00:23:55,470 --> 00:24:00,990
huge need to do this yet but in the

513
00:23:58,770 --> 00:24:02,820
future I've done it already for money

514
00:24:00,990 --> 00:24:06,000
for a couple of things that were very

515
00:24:02,820 --> 00:24:07,860
specific to how we write code and they

516
00:24:06,000 --> 00:24:09,179
were always marked as false positive so

517
00:24:07,860 --> 00:24:12,090
in order to reduce the expression

518
00:24:09,179 --> 00:24:14,309
database and all the things I had to

519
00:24:12,090 --> 00:24:17,220
configure bonded but the rest of the

520
00:24:14,309 --> 00:24:20,039
results are quite off-the-shelf

521
00:24:17,220 --> 00:24:23,720
I can say but yeah like the feedback

522
00:24:20,039 --> 00:24:25,220
loop is you are you're looking at you

523
00:24:23,720 --> 00:24:28,020
[Music]

524
00:24:25,220 --> 00:24:33,480
yeah I mean do you have an automated

525
00:24:28,020 --> 00:24:35,580
process if so we need to talk yeah sir

526
00:24:33,480 --> 00:24:37,980
point as well was that like we don't

527
00:24:35,580 --> 00:24:40,020
expect so so back to what I said earlier

528
00:24:37,980 --> 00:24:42,150
about we're finding tools a lot of

529
00:24:40,020 --> 00:24:45,240
assumptions about what you need and what

530
00:24:42,150 --> 00:24:47,280
you should have like github don't we

531
00:24:45,240 --> 00:24:49,410
won't want you VI we like do what you

532
00:24:47,280 --> 00:24:52,680
want listed the pipeline and if you

533
00:24:49,410 --> 00:24:56,190
don't have any - in your code based and

534
00:24:52,680 --> 00:24:58,230
don't run bender it should be fine if

535
00:24:56,190 --> 00:25:01,560
you don't use JIRA then don't consume -

536
00:24:58,230 --> 00:25:03,300
Jo and exactly like you might just want

537
00:25:01,560 --> 00:25:04,560
to see a whole lot of like raw results

538
00:25:03,300 --> 00:25:08,190
and elasticsearch and deal with it after

539
00:25:04,560 --> 00:25:11,310
that um that's absolutely fine you can

540
00:25:08,190 --> 00:25:14,150
mix and match how you like and that's

541
00:25:11,310 --> 00:25:17,310
the important part for us goodness so

542
00:25:14,150 --> 00:25:19,530
starkly we started breeding producers

543
00:25:17,310 --> 00:25:21,960
and consumers for pretty much everything

544
00:25:19,530 --> 00:25:26,639
we had and then everything under the Sun

545
00:25:21,960 --> 00:25:29,040
and eventually this created a catalogue

546
00:25:26,640 --> 00:25:31,800
of tasks which became like a part in the

547
00:25:29,040 --> 00:25:36,330
repo called tasks and our central

548
00:25:31,800 --> 00:25:39,629
registry which is called registry so

549
00:25:36,330 --> 00:25:42,169
producers are set up tools that dump

550
00:25:39,630 --> 00:25:43,290
protobuf things and then consumers

551
00:25:42,170 --> 00:25:45,870
ruptals

552
00:25:43,290 --> 00:25:50,190
ingesting protobuf messages from

553
00:25:45,870 --> 00:25:52,290
producers and because we have place in

554
00:25:50,190 --> 00:25:53,970
the registry where people can't go look

555
00:25:52,290 --> 00:25:55,770
at the list of producers and support

556
00:25:53,970 --> 00:26:01,170
their list of consumers we support they

557
00:25:55,770 --> 00:26:03,900
can mix and match easily and yeah so

558
00:26:01,170 --> 00:26:07,230
where does after we built this we had

559
00:26:03,900 --> 00:26:09,990
the major discussion with several like

560
00:26:07,230 --> 00:26:12,810
high level people in the company saying

561
00:26:09,990 --> 00:26:17,970
like trying to figure out where does

562
00:26:12,810 --> 00:26:19,409
this think fitting so the answers were

563
00:26:17,970 --> 00:26:21,570
pretty much something like that you

564
00:26:19,410 --> 00:26:23,970
could run it after your CI beat if you

565
00:26:21,570 --> 00:26:25,889
want like it fits anybody can be used as

566
00:26:23,970 --> 00:26:29,100
a linter or it can be used as an early

567
00:26:25,890 --> 00:26:30,270
warning system can be used event - like

568
00:26:29,100 --> 00:26:35,790
on your release cycle if you want

569
00:26:30,270 --> 00:26:36,920
although that would be very nice yeah in

570
00:26:35,790 --> 00:26:42,470
more draconian yes

571
00:26:36,920 --> 00:26:46,040
and somebody asked the question what if

572
00:26:42,470 --> 00:26:48,350
we prevent releases I think we both like

573
00:26:46,040 --> 00:26:51,290
first part at this point yeah we're very

574
00:26:48,350 --> 00:26:54,139
much the whole security company is very

575
00:26:51,290 --> 00:26:55,340
much of we want no friction we don't

576
00:26:54,140 --> 00:26:56,690
want to get to the end of the release

577
00:26:55,340 --> 00:26:58,850
cycle and be like oh no you can't do

578
00:26:56,690 --> 00:27:01,960
that how we need to have it right at the

579
00:26:58,850 --> 00:27:01,959
start and the earlier the better

580
00:27:03,520 --> 00:27:08,320
exactly yeah it's not as annoying our

581
00:27:05,360 --> 00:27:14,780
job to make that decision you're right

582
00:27:08,320 --> 00:27:17,600
yeah take that risk on absolutely also

583
00:27:14,780 --> 00:27:19,460
our job is to give a warning as early as

584
00:27:17,600 --> 00:27:22,429
possible so it is as cheap as possible

585
00:27:19,460 --> 00:27:23,840
to fix it right if a development team

586
00:27:22,430 --> 00:27:26,570
has been working on it for six months

587
00:27:23,840 --> 00:27:28,909
and then at like month six plus four

588
00:27:26,570 --> 00:27:31,280
weeks you tell them hey no no this is

589
00:27:28,910 --> 00:27:37,640
not going there it means that they're

590
00:27:31,280 --> 00:27:40,120
gonna grab pitchforks yeah yeah sure so

591
00:27:37,640 --> 00:27:43,640
we ended up creating a second pipeline

592
00:27:40,120 --> 00:27:48,050
and putting back on in it it's the

593
00:27:43,640 --> 00:27:48,470
security like pipeline of for lack of a

594
00:27:48,050 --> 00:27:52,129
better name

595
00:27:48,470 --> 00:27:55,790
so somebody pushes to a branch a regular

596
00:27:52,130 --> 00:27:59,200
pipeline does its thing and then Drakon

597
00:27:55,790 --> 00:28:02,300
does each other thing and then

598
00:27:59,200 --> 00:28:06,020
afterwards it generates some reports

599
00:28:02,300 --> 00:28:07,639
which in internally we call them at the

600
00:28:06,020 --> 00:28:09,620
stations because parts of these reports

601
00:28:07,640 --> 00:28:14,600
also reach clients depending on

602
00:28:09,620 --> 00:28:17,600
contracts and then next where the

603
00:28:14,600 --> 00:28:20,449
reports go on for come to us for manual

604
00:28:17,600 --> 00:28:24,649
review because again false positives or

605
00:28:20,450 --> 00:28:27,260
maybe duplicates or maybe any automation

606
00:28:24,650 --> 00:28:28,670
security needs humanized for Trias if

607
00:28:27,260 --> 00:28:32,350
you show me I think that does it

608
00:28:28,670 --> 00:28:39,140
automatically I will be very skeptical

609
00:28:32,350 --> 00:28:41,649
sweet redeemer yeah right this is where

610
00:28:39,140 --> 00:28:41,650
everything great

611
00:28:45,460 --> 00:28:50,140
what you never had the video girls break

612
00:28:54,760 --> 00:29:08,990
so you put it on fullscreen and pause

613
00:28:59,840 --> 00:29:12,350
again no I'll go back there it's much

614
00:29:08,990 --> 00:29:15,350
better yeah like I mean your neck right

615
00:29:12,350 --> 00:29:19,189
so and you yeah thank you

616
00:29:15,350 --> 00:29:21,199
so Drock on demo is the art like

617
00:29:19,190 --> 00:29:22,760
pipeline environment it's just an

618
00:29:21,200 --> 00:29:27,260
inspirational kubernetes right mix-ins

619
00:29:22,760 --> 00:29:29,629
and because I'm lazy I launched it with

620
00:29:27,260 --> 00:29:33,320
the script pretty much the script said

621
00:29:29,630 --> 00:29:38,120
CID the you got the piece the scan name

622
00:29:33,320 --> 00:29:40,340
I preferred it to be give you IDs we we

623
00:29:38,120 --> 00:29:42,800
started with human readable scannings I

624
00:29:40,340 --> 00:29:45,830
was imagining something like scan

625
00:29:42,800 --> 00:29:47,629
launched by the law or by job whatever

626
00:29:45,830 --> 00:29:50,480
our people started messing the keyboard

627
00:29:47,630 --> 00:29:52,760
and they give you ideas much more

628
00:29:50,480 --> 00:29:59,480
readable than QWERTY quite equal to 1 2

629
00:29:52,760 --> 00:30:03,080
3 and then it it replaces this video ID

630
00:29:59,480 --> 00:30:04,940
in kubernetes template which the

631
00:30:03,080 --> 00:30:11,360
specific template would run defer to Joe

632
00:30:04,940 --> 00:30:14,920
and it executed and so a pot pie plan

633
00:30:11,360 --> 00:30:19,820
was created specifically tasks run and

634
00:30:14,920 --> 00:30:25,570
now we will get it it has five steps and

635
00:30:19,820 --> 00:30:29,720
it's still running so if I go looks and

636
00:30:25,570 --> 00:30:32,030
if I open the looks for the code step it

637
00:30:29,720 --> 00:30:35,360
downloaded a bunch of things installed

638
00:30:32,030 --> 00:30:38,120
bunch of other things and cloned I think

639
00:30:35,360 --> 00:30:40,760
for these we're using a tool called junk

640
00:30:38,120 --> 00:30:42,770
goat yeah we decided rather than expose

641
00:30:40,760 --> 00:30:44,060
Nia internal code base with a find

642
00:30:42,770 --> 00:30:47,750
something online so we came across

643
00:30:44,060 --> 00:30:50,240
Django which is just a vulnerable Django

644
00:30:47,750 --> 00:30:52,220
project yeah sorry guys you don't seem

645
00:30:50,240 --> 00:30:55,799
techno stuff today

646
00:30:52,220 --> 00:30:58,200
yeah it's yeah and it has known

647
00:30:55,799 --> 00:31:00,809
vulnerabilities that exist in write up

648
00:30:58,200 --> 00:31:06,740
so we can take if the configuration and

649
00:31:00,809 --> 00:31:12,210
the tools are saying so if you click

650
00:31:06,740 --> 00:31:13,890
yeah so that's the logs from the

651
00:31:12,210 --> 00:31:16,740
enrichment service I'd found a bunch of

652
00:31:13,890 --> 00:31:18,690
deleted tissues I had run this before so

653
00:31:16,740 --> 00:31:20,700
we could see the enrichment service at

654
00:31:18,690 --> 00:31:23,130
work these are the faces of the

655
00:31:20,700 --> 00:31:26,429
duplicate issues and if anybody asks yes

656
00:31:23,130 --> 00:31:29,010
they are md5 hashes no I don't expect

657
00:31:26,429 --> 00:31:32,429
collisions because I don't expect to

658
00:31:29,010 --> 00:31:36,169
have that many buds I mean I try to not

659
00:31:32,429 --> 00:31:36,169
have a lot of security issues right

660
00:31:40,070 --> 00:31:48,750
official problems if it happens I'll buy

661
00:31:42,450 --> 00:31:50,640
your beer so the second one is step

662
00:31:48,750 --> 00:31:52,679
producer mark producer phase zero

663
00:31:50,640 --> 00:31:56,070
because you know my name in conventions

664
00:31:52,679 --> 00:31:59,130
are awesome it ran bandit bandit run

665
00:31:56,070 --> 00:32:01,980
with a 142 I think it's the plug-in

666
00:31:59,130 --> 00:32:04,380
number and then from zero to fifty

667
00:32:01,980 --> 00:32:07,080
percent to 100 percent from a producer

668
00:32:04,380 --> 00:32:09,419
you don't need a lot of output you just

669
00:32:07,080 --> 00:32:12,299
pretty much need to know if it ran or if

670
00:32:09,419 --> 00:32:16,710
it if you have a bug and then if you

671
00:32:12,299 --> 00:32:20,250
continue consumer my consumer Phase one

672
00:32:16,710 --> 00:32:21,900
run found a bunch of issues that are

673
00:32:20,250 --> 00:32:25,650
duplicates with a count of two

674
00:32:21,900 --> 00:32:27,510
pretty much right duplicate issues do

675
00:32:25,650 --> 00:32:32,880
not start with a count of zero that

676
00:32:27,510 --> 00:32:36,379
would be counterintuitive right and you

677
00:32:32,880 --> 00:32:39,990
can attack me now and the second one I

678
00:32:36,380 --> 00:32:44,450
for good practice I always try to add to

679
00:32:39,990 --> 00:32:47,130
the pipeline same like metadata a step

680
00:32:44,450 --> 00:32:49,020
pretty much the last step finds how many

681
00:32:47,130 --> 00:32:50,250
issues were found how many of them were

682
00:32:49,020 --> 00:32:52,620
a duplicate how many of them were

683
00:32:50,250 --> 00:32:54,870
enriched so if the exact same pipeline

684
00:32:52,620 --> 00:32:57,229
runs like four different times with four

685
00:32:54,870 --> 00:32:59,879
different numbers of issues found

686
00:32:57,230 --> 00:33:01,710
results and reads ten results duplicate

687
00:32:59,880 --> 00:33:05,630
I know I need to go back to the joint

688
00:33:01,710 --> 00:33:05,630
board or figure out a way to fix it

689
00:33:05,920 --> 00:33:12,760
[Music]

690
00:33:08,640 --> 00:33:15,340
yes we'll go to that in a second so this

691
00:33:12,760 --> 00:33:18,520
is the facto Jo if you're not using the

692
00:33:15,340 --> 00:33:21,010
effect dojo it's a good pretty good

693
00:33:18,520 --> 00:33:24,639
viability management tool most of all

694
00:33:21,010 --> 00:33:30,910
it's free and it's from all of us yes

695
00:33:24,640 --> 00:33:33,580
however sent yeah so the fact that Joe

696
00:33:30,910 --> 00:33:37,090
allows you to do a bunch of things this

697
00:33:33,580 --> 00:33:40,510
is a product I've said I've set name

698
00:33:37,090 --> 00:33:43,240
core three and has two engagements one

699
00:33:40,510 --> 00:33:45,820
engagement hello up six and another

700
00:33:43,240 --> 00:33:49,560
engagement called continue scanning this

701
00:33:45,820 --> 00:33:52,330
created the test called static check

702
00:33:49,560 --> 00:33:55,570
because you transferred code analysis

703
00:33:52,330 --> 00:33:59,080
and these are the issues it found quite

704
00:33:55,570 --> 00:34:00,970
a lot of them pretty much a bunch of

705
00:33:59,080 --> 00:34:03,580
import by Krypton whatever in different

706
00:34:00,970 --> 00:34:08,710
places this is how one step looks like

707
00:34:03,580 --> 00:34:12,129
can you go back for ya think so the

708
00:34:08,710 --> 00:34:14,440
description has all the Drakon metadata

709
00:34:12,129 --> 00:34:17,649
pretty much what this can ID was what

710
00:34:14,440 --> 00:34:20,320
not to name i used bonded what the type

711
00:34:17,649 --> 00:34:22,330
of the issue was it imports by crypto

712
00:34:20,320 --> 00:34:25,810
which has known vulnerabilities the

713
00:34:22,330 --> 00:34:29,020
confidence for bonded confidence three

714
00:34:25,810 --> 00:34:31,020
means hi and yeah i mean if you import

715
00:34:29,020 --> 00:34:36,340
by crypto you cannot mean something else

716
00:34:31,020 --> 00:34:39,270
and the description pretty much so now

717
00:34:36,340 --> 00:34:45,550
I'll go back and launch another pipeline

718
00:34:39,270 --> 00:34:49,509
that that there was this pipeline during

719
00:34:45,550 --> 00:34:51,730
this pipeline brings all the results raw

720
00:34:49,510 --> 00:34:54,040
and enriched into elastic search for

721
00:34:51,730 --> 00:34:56,379
matrix I could have done both in one

722
00:34:54,040 --> 00:34:59,020
pipeline but then the demo would be very

723
00:34:56,379 --> 00:35:01,509
short and we would and around the time

724
00:34:59,020 --> 00:35:06,340
and that's not good in a talk right yeah

725
00:35:01,510 --> 00:35:09,210
thank you no seriously it's just to make

726
00:35:06,340 --> 00:35:17,930
it but obvious as to what's going on

727
00:35:09,210 --> 00:35:20,270
so cube card will drag on demo

728
00:35:17,930 --> 00:35:22,430
get the pods second one if you see the

729
00:35:20,270 --> 00:35:24,470
first one is completed so it doesn't

730
00:35:22,430 --> 00:35:28,129
take a lot of resources you don't have

731
00:35:24,470 --> 00:35:30,620
things running constantly we tried with

732
00:35:28,130 --> 00:35:37,400
certain pods that would always run and

733
00:35:30,620 --> 00:35:43,970
then we plug Cooper natives so you get

734
00:35:37,400 --> 00:35:46,850
the logs from the second one faster

735
00:35:43,970 --> 00:35:48,799
sorry man so bunch of duplicates again

736
00:35:46,850 --> 00:35:50,960
exactly the same number of duplicates

737
00:35:48,800 --> 00:35:55,690
because it found same number of

738
00:35:50,960 --> 00:35:59,630
duplicates yeah we know we don't have a

739
00:35:55,690 --> 00:36:07,330
so you go back to Cabana and this is the

740
00:35:59,630 --> 00:36:10,280
Drakon index discover you will see that

741
00:36:07,330 --> 00:36:12,590
this specific one because we only feed

742
00:36:10,280 --> 00:36:14,780
there specific things has two issues

743
00:36:12,590 --> 00:36:16,700
with severity three confidence three so

744
00:36:14,780 --> 00:36:20,870
high severity high confidence and

745
00:36:16,700 --> 00:36:23,089
they're both by Krypton oh no one PI

746
00:36:20,870 --> 00:36:25,690
crypto one hard coded sequel and I've

747
00:36:23,090 --> 00:36:28,030
opened the PI crypto and can you post

748
00:36:25,690 --> 00:36:32,540
okay thank you

749
00:36:28,030 --> 00:36:35,300
so this is exactly what an issue is as I

750
00:36:32,540 --> 00:36:39,259
said before right confidence optional

751
00:36:35,300 --> 00:36:42,500
cbss bond it doesn't do CBS so0

752
00:36:39,260 --> 00:36:44,030
a description is it false positive false

753
00:36:42,500 --> 00:36:45,920
mainly because I haven't gone into

754
00:36:44,030 --> 00:36:48,980
defect dojo to market as false positive

755
00:36:45,920 --> 00:36:51,050
when it was first found scan ID scan

756
00:36:48,980 --> 00:36:53,960
start time is configurable you will see

757
00:36:51,050 --> 00:36:57,500
that these before the first found right

758
00:36:53,960 --> 00:37:00,110
so it was first found today but I said

759
00:36:57,500 --> 00:37:03,200
this can start time in the yummy to be

760
00:37:00,110 --> 00:37:05,630
in the past to show that this can start

761
00:37:03,200 --> 00:37:08,299
time can be any time you want so you can

762
00:37:05,630 --> 00:37:13,100
have you can play around with however

763
00:37:08,300 --> 00:37:17,800
you find things severity you need to do

764
00:37:13,100 --> 00:37:20,089
to scroll to the video all the way

765
00:37:17,800 --> 00:37:28,240
somebody said that the demo would work

766
00:37:20,090 --> 00:37:28,240
right imagine if we had the live demo

767
00:37:30,010 --> 00:37:33,010
yeah

768
00:37:33,599 --> 00:37:48,119
so yeah a bit more tiny bit more yeah

769
00:37:41,109 --> 00:37:51,369
remark yeah yeah and the target is up

770
00:37:48,119 --> 00:37:53,799
management commands CID pie I haven't

771
00:37:51,369 --> 00:37:57,039
found a way to decouple it from the

772
00:37:53,799 --> 00:38:00,970
paths of Tecton slash workspace can

773
00:37:57,039 --> 00:38:04,180
source ace Tecna and yeah I need to

774
00:38:00,970 --> 00:38:08,970
figure this out but we will and then the

775
00:38:04,180 --> 00:38:16,419
title to rename type pretty much sorted

776
00:38:08,970 --> 00:38:18,669
and if you I could or maybe in the

777
00:38:16,420 --> 00:38:28,740
consumers on the base like the base

778
00:38:18,670 --> 00:38:33,390
consumer class but yeah yeah good so

779
00:38:28,740 --> 00:38:36,459
yeah who made this eight runs as you so

780
00:38:33,390 --> 00:38:40,269
advantage this you can mix and match any

781
00:38:36,460 --> 00:38:43,119
task you want so yeah I want wanted to

782
00:38:40,269 --> 00:38:47,078
do Joe finds egg bugs to like something

783
00:38:43,119 --> 00:38:50,499
else and then I have some legacy IBM i

784
00:38:47,079 --> 00:38:52,450
AIX like whatever and they need to go

785
00:38:50,499 --> 00:38:54,910
into like some specific place because

786
00:38:52,450 --> 00:38:57,669
they are my PCI zone or whatever so this

787
00:38:54,910 --> 00:39:00,339
goes there graphing tools as if we found

788
00:38:57,670 --> 00:39:01,989
it quite easy it seems pretty

789
00:39:00,339 --> 00:39:04,269
straightforward as long as the tow

790
00:39:01,989 --> 00:39:17,559
behaves well which so far so good

791
00:39:04,269 --> 00:39:20,109
that's would any what no startup yeah

792
00:39:17,559 --> 00:39:21,970
run runs anywhere so it's obviously like

793
00:39:20,109 --> 00:39:26,670
that Timur was recorded in mini field on

794
00:39:21,970 --> 00:39:30,788
a distal way we're running a question a

795
00:39:26,670 --> 00:39:34,089
GK EcoPOD cluster but also in mini tube

796
00:39:30,789 --> 00:39:35,950
yeah so at this year frankly I mean

797
00:39:34,089 --> 00:39:38,558
mostly ice to kubernetes these days and

798
00:39:35,950 --> 00:39:42,899
the future doesn't do kubernetes I mean

799
00:39:38,559 --> 00:39:46,040
ask them to do I guess so

800
00:39:42,900 --> 00:39:50,100
what's the future for us suppose tubes

801
00:39:46,040 --> 00:39:52,200
we need to add way more emojis we have

802
00:39:50,100 --> 00:39:54,960
several things that would have an

803
00:39:52,200 --> 00:39:55,799
integrated yet the data integration is

804
00:39:54,960 --> 00:39:58,800
taking a while

805
00:39:55,800 --> 00:40:02,040
mainly because JIRA

806
00:39:58,800 --> 00:40:05,670
we have zap running but as the baseline

807
00:40:02,040 --> 00:40:07,860
not very smart scan which doesn't give

808
00:40:05,670 --> 00:40:12,330
us a lot of hope a lot of flexibility we

809
00:40:07,860 --> 00:40:14,220
need to do a full end-to-end tests proxy

810
00:40:12,330 --> 00:40:15,930
through zsa zsa finds everything and

811
00:40:14,220 --> 00:40:17,970
then goes on to scan everything really

812
00:40:15,930 --> 00:40:19,770
cool you basically not your service

813
00:40:17,970 --> 00:40:22,709
running outside of that stuff

814
00:40:19,770 --> 00:40:25,500
yeah and Tecton doesn't do services yet

815
00:40:22,710 --> 00:40:27,300
so we cannot integrate it with Tecton so

816
00:40:25,500 --> 00:40:30,770
we need to fix the templating engine in

817
00:40:27,300 --> 00:40:33,390
order to do all this but next time and

818
00:40:30,770 --> 00:40:35,790
this is important to us we haven't yet

819
00:40:33,390 --> 00:40:39,210
found that we are a reason to extend our

820
00:40:35,790 --> 00:40:41,340
messages but a good example is up it

821
00:40:39,210 --> 00:40:43,380
provides automatic remediation like

822
00:40:41,340 --> 00:40:47,610
remediation steps come with the finding

823
00:40:43,380 --> 00:40:50,430
and it could be cool to have an extra

824
00:40:47,610 --> 00:40:52,950
remediation step that said we do not

825
00:40:50,430 --> 00:40:55,230
want to add like arbitrary key value

826
00:40:52,950 --> 00:40:57,029
like maps in protobufs because then

827
00:40:55,230 --> 00:41:02,670
protobuf become station and kind of

828
00:40:57,030 --> 00:41:04,770
defeats the point right yeah you can

829
00:41:02,670 --> 00:41:07,830
that the things you can do but like not

830
00:41:04,770 --> 00:41:10,680
everybody also reports in w is it's it's

831
00:41:07,830 --> 00:41:14,640
a sensitive situation to find like the

832
00:41:10,680 --> 00:41:17,160
common compart yeah i could imagine that

833
00:41:14,640 --> 00:41:19,440
like we originally did I take sonic

834
00:41:17,160 --> 00:41:21,060
religious officer I guess like a more of

835
00:41:19,440 --> 00:41:27,570
a thanks to the people who are providing

836
00:41:21,060 --> 00:41:30,299
tools that we use including that I was

837
00:41:27,570 --> 00:41:31,040
toes and they never come here and talk

838
00:41:30,300 --> 00:41:34,470
about us

839
00:41:31,040 --> 00:41:36,600
thank you what thank you I'm talking

840
00:41:34,470 --> 00:41:37,620
about open sourcing yeah so a we were

841
00:41:36,600 --> 00:41:40,770
hoping to get open source for this

842
00:41:37,620 --> 00:41:48,170
conference I didn't quite happen

843
00:41:40,770 --> 00:41:48,170
unfortunately good day yeah

844
00:41:48,390 --> 00:41:55,740
we we do have repository for it already

845
00:41:52,100 --> 00:41:56,339
it's actually blank these talk this talk

846
00:41:55,740 --> 00:41:58,680
will be uploaded

847
00:41:56,339 --> 00:42:10,589
there along with the video and some red

848
00:41:58,680 --> 00:42:11,569
means today it will be full in like 1

849
00:42:10,589 --> 00:42:13,650
hour

850
00:42:11,569 --> 00:42:16,499
what are you committing yesterday again

851
00:42:13,650 --> 00:42:20,190
yes sir so this we're still of a Ulster

852
00:42:16,499 --> 00:42:22,319
announcer as things come up on my

853
00:42:20,190 --> 00:42:24,329
personal Twitter accounts yo for you

854
00:42:22,319 --> 00:42:27,359
follow us so the idea is we'll upload

855
00:42:24,329 --> 00:42:29,729
the talk and maybe read me and then as

856
00:42:27,359 --> 00:42:31,890
we open source things the main problem

857
00:42:29,729 --> 00:42:34,288
we have an internal page system based of

858
00:42:31,890 --> 00:42:37,589
Google's Basel it's also open source

859
00:42:34,289 --> 00:42:40,410
it's called please and it does

860
00:42:37,589 --> 00:42:42,150
everything for us but it's slightly

861
00:42:40,410 --> 00:42:44,430
affordable so at that process and

862
00:42:42,150 --> 00:42:46,619
unfortunately yeah I like an open source

863
00:42:44,430 --> 00:42:48,868
2 D that he needs like they open other

864
00:42:46,619 --> 00:42:51,329
open source tools to run it's not really

865
00:42:48,869 --> 00:42:55,950
usable so it takes time to decouple from

866
00:42:51,329 --> 00:42:56,430
things yeah yeah Josefa and we'll keep

867
00:42:55,950 --> 00:43:01,129
you posted

868
00:42:56,430 --> 00:43:05,390
we have time for questions there time

869
00:43:01,130 --> 00:43:05,390
yeah yes every questions

870
00:43:07,490 --> 00:43:11,029
[Applause]

