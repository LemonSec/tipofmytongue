1
00:00:02,919 --> 00:00:08,540
right so it seems like we ready to go

2
00:00:05,720 --> 00:00:09,998
well good morning everyone thanks for or

3
00:00:08,540 --> 00:00:12,860
coming yes

4
00:00:09,999 --> 00:00:14,240
actually is on yes I have to maybe speak

5
00:00:12,860 --> 00:00:17,140
up a little bit even more into the

6
00:00:14,240 --> 00:00:20,000
microphone so welcome to our talk

7
00:00:17,140 --> 00:00:20,690
restricting scripts you to blame you CSP

8
00:00:20,000 --> 00:00:23,060
a bad name

9
00:00:20,690 --> 00:00:25,250
so if you like bad puns and you know Bon

10
00:00:23,060 --> 00:00:28,029
Jovi then you know how this title got to

11
00:00:25,250 --> 00:00:30,620
be this is work between myself and my

12
00:00:28,030 --> 00:00:32,180
students Bastion who's going to do most

13
00:00:30,620 --> 00:00:34,429
of the heavy lifting of this talk but

14
00:00:32,180 --> 00:00:36,079
it's based on academics joint work with

15
00:00:34,429 --> 00:00:38,679
a couple of other folks namely timbre

16
00:00:36,079 --> 00:00:41,749
and Nikita Baracus and ii have a barrow

17
00:00:38,679 --> 00:00:44,420
so are we first off this is the bass

18
00:00:41,749 --> 00:00:46,909
sound versus a PhD student in my group

19
00:00:44,420 --> 00:00:48,949
at Cisco so I'm a faculty there so

20
00:00:46,909 --> 00:00:51,640
centrally somewhat of a professor but

21
00:00:48,949 --> 00:00:53,989
not a professor and so as I said we are

22
00:00:51,640 --> 00:00:56,149
academics but I like to come here a lot

23
00:00:53,989 --> 00:00:57,349
and it's very cold in this room

24
00:00:56,149 --> 00:01:00,710
otherwise you would see that I'm wearing

25
00:00:57,350 --> 00:01:03,170
the 2013 or was second research Europe

26
00:01:00,710 --> 00:01:04,729
and things called back then t-shirt so

27
00:01:03,170 --> 00:01:05,899
I've been doing this for a while whereas

28
00:01:04,729 --> 00:01:07,909
for the bastion is actually his first

29
00:01:05,899 --> 00:01:09,649
talk so if you think the talk sucks

30
00:01:07,909 --> 00:01:12,500
blame it on me and up on him okay I just

31
00:01:09,649 --> 00:01:15,740
want this to be very clear all right so

32
00:01:12,500 --> 00:01:19,100
while here well to be honest we didn't

33
00:01:15,740 --> 00:01:20,960
we did a survey of CSV and looked at the

34
00:01:19,100 --> 00:01:24,829
deployment of CSP over 10,000 site

35
00:01:20,960 --> 00:01:26,270
between 2012 2018 and we found one thing

36
00:01:24,829 --> 00:01:28,490
that is not particularly surprising well

37
00:01:26,270 --> 00:01:29,960
CSP is not particularly widely used okay

38
00:01:28,490 --> 00:01:31,339
and this is nice until you search and

39
00:01:29,960 --> 00:01:32,869
there's many more questions that we

40
00:01:31,340 --> 00:01:35,149
answer in the paper we will hopefully

41
00:01:32,869 --> 00:01:37,399
come up very soon but this is not a

42
00:01:35,149 --> 00:01:40,159
scientific conference this is more of a

43
00:01:37,399 --> 00:01:42,859
well developer and well practitioners

44
00:01:40,159 --> 00:01:44,899
completes one we wanted to go to

45
00:01:42,859 --> 00:01:46,789
Amsterdam I think you use the personal

46
00:01:44,899 --> 00:01:48,829
Amsterdam I've been there before but

47
00:01:46,789 --> 00:01:49,939
important also share some of our

48
00:01:48,829 --> 00:01:53,240
insights that we gain from this

49
00:01:49,939 --> 00:01:54,949
longitudinal analysis and to be fair you

50
00:01:53,240 --> 00:01:56,929
also want to learn new stuff from all of

51
00:01:54,950 --> 00:01:59,869
you because again I'm saying it more

52
00:01:56,929 --> 00:02:01,969
moreover we're academics so we have this

53
00:01:59,869 --> 00:02:04,100
nice view on the worst thing at cccc

54
00:02:01,969 --> 00:02:07,189
that's not everybody deploying CSP will

55
00:02:04,100 --> 00:02:08,720
find some interesting things these lines

56
00:02:07,189 --> 00:02:11,420
but importantly we would like to

57
00:02:08,720 --> 00:02:13,480
understand how can make CSP better based

58
00:02:11,420 --> 00:02:14,920
on the needs of the people that use it

59
00:02:13,480 --> 00:02:18,160
rather than somebody in the ivory tower

60
00:02:14,920 --> 00:02:20,230
saying it should be you all right so now

61
00:02:18,160 --> 00:02:22,989
that I've introduced ourselves let's

62
00:02:20,230 --> 00:02:25,090
first have a look at who are actually

63
00:02:22,989 --> 00:02:26,440
the audience who is the audience here

64
00:02:25,090 --> 00:02:29,220
so let me ask you a couple of brief

65
00:02:26,440 --> 00:02:32,980
questions who has heard of CSV before

66
00:02:29,220 --> 00:02:36,930
all right I was somewhat expected who

67
00:02:32,980 --> 00:02:39,220
has tried using CSV for that site huh

68
00:02:36,930 --> 00:02:40,810
who has run into some functionality

69
00:02:39,220 --> 00:02:45,160
issues when deploying CSV on their site

70
00:02:40,810 --> 00:02:47,500
or surprised and who thinks they are

71
00:02:45,160 --> 00:02:49,359
running right now a CSV that is secured

72
00:02:47,500 --> 00:02:50,730
with respect to content restriction I

73
00:02:49,360 --> 00:02:53,400
will not tell you what secure is but

74
00:02:50,730 --> 00:02:56,109
okay awesome

75
00:02:53,400 --> 00:02:58,599
so let's discuss it that's actually true

76
00:02:56,110 --> 00:03:00,030
a month later on but essentially now my

77
00:02:58,599 --> 00:03:02,140
job is done right

78
00:03:00,030 --> 00:03:04,500
so I've answered the question that we

79
00:03:02,140 --> 00:03:06,730
that we set out as a support title

80
00:03:04,500 --> 00:03:08,590
namely that securing content is

81
00:03:06,730 --> 00:03:12,250
virtually impossible to do to do

82
00:03:08,590 --> 00:03:14,110
security with CSV however CSP FGM has

83
00:03:12,250 --> 00:03:15,640
made a bit of development over the years

84
00:03:14,110 --> 00:03:17,709
to try and address exactly these

85
00:03:15,640 --> 00:03:19,298
problems um so let's have a look at when

86
00:03:17,709 --> 00:03:22,329
CSP was first deployed so you have a

87
00:03:19,299 --> 00:03:25,269
small example strip here where we have

88
00:03:22,329 --> 00:03:27,670
an HTML element or a script tag that is

89
00:03:25,269 --> 00:03:30,040
from a calm and as you know ads like to

90
00:03:27,670 --> 00:03:31,569
edit the content document so we also

91
00:03:30,040 --> 00:03:33,880
know that it adds stuff from content air

92
00:03:31,569 --> 00:03:35,380
from company logo and then we also have

93
00:03:33,880 --> 00:03:36,730
meaningful inline script which

94
00:03:35,380 --> 00:03:38,769
implements some functionality and I

95
00:03:36,730 --> 00:03:40,600
think this is a standard use case that

96
00:03:38,769 --> 00:03:42,190
you might have a lot of sense so another

97
00:03:40,600 --> 00:03:43,690
one this would be the policy that you

98
00:03:42,190 --> 00:03:45,280
need to deploy right you have script

99
00:03:43,690 --> 00:03:47,109
source a.com company.com

100
00:03:45,280 --> 00:03:48,700
so explicitly whitelisting goes to

101
00:03:47,109 --> 00:03:50,980
origins and you have unsafe inline

102
00:03:48,700 --> 00:03:52,988
because you have an inline script if you

103
00:03:50,980 --> 00:03:54,790
have unsafe inline you're not secure by

104
00:03:52,989 --> 00:03:57,540
it by default because any attacker can

105
00:03:54,790 --> 00:04:01,150
just inject the script it to your page

106
00:03:57,540 --> 00:04:03,280
so then at level two we actually have an

107
00:04:01,150 --> 00:04:04,959
improvement here so now for level two on

108
00:04:03,280 --> 00:04:07,090
what we can use nonce and hashes to

109
00:04:04,959 --> 00:04:09,310
explicitly say this particular inline

110
00:04:07,090 --> 00:04:10,840
script is coming from from my site and

111
00:04:09,310 --> 00:04:11,950
now all of a sudden we have a policy

112
00:04:10,840 --> 00:04:13,720
that looks something more like this

113
00:04:11,950 --> 00:04:16,060
right so we set a script source

114
00:04:13,720 --> 00:04:17,858
company.com because what we can launch

115
00:04:16,060 --> 00:04:19,870
the script from at home we cannot do

116
00:04:17,858 --> 00:04:23,169
this for company come because it's add

117
00:04:19,870 --> 00:04:25,570
that prompts will job to do that so we

118
00:04:23,169 --> 00:04:27,760
also have to add company

119
00:04:25,570 --> 00:04:29,349
and this is also where in many cases you

120
00:04:27,760 --> 00:04:32,200
run into functionality issues because

121
00:04:29,350 --> 00:04:34,180
what happens if a.com now says you know

122
00:04:32,200 --> 00:04:35,680
beforehand this was BMW that we showed

123
00:04:34,180 --> 00:04:37,510
you now we show you in the city spends

124
00:04:35,680 --> 00:04:39,730
right so all of a sudden they add a

125
00:04:37,510 --> 00:04:42,430
script from mercedes-benz you see is V

126
00:04:39,730 --> 00:04:45,280
brakes you don't get any money yeah you

127
00:04:42,430 --> 00:04:45,730
see that sucks as well so then in level

128
00:04:45,280 --> 00:04:47,349
three

129
00:04:45,730 --> 00:04:49,510
there was another feature being added

130
00:04:47,350 --> 00:04:51,070
which is called strict dynamic and the

131
00:04:49,510 --> 00:04:52,990
idea behind strict dynamic is that if

132
00:04:51,070 --> 00:04:54,960
you have a script that is already monste

133
00:04:52,990 --> 00:04:57,160
or it's basically trusted to a hash that

134
00:04:54,960 --> 00:04:59,200
script can programmatically add

135
00:04:57,160 --> 00:05:00,250
additional scripts and so this is energy

136
00:04:59,200 --> 00:05:01,990
shown here so we do a

137
00:05:00,250 --> 00:05:04,630
document.createelement script then set a

138
00:05:01,990 --> 00:05:06,940
script source and and document the

139
00:05:04,630 --> 00:05:09,610
script to the document and so now this

140
00:05:06,940 --> 00:05:10,960
is the policy we can have very long

141
00:05:09,610 --> 00:05:12,400
discussions where the strict dynamic

142
00:05:10,960 --> 00:05:14,469
should be called strict dynamic or not

143
00:05:12,400 --> 00:05:15,940
and will also be called unsafe dynamic

144
00:05:14,470 --> 00:05:17,830
but essentially we get rid of this

145
00:05:15,940 --> 00:05:20,860
problem of trying to maintain our

146
00:05:17,830 --> 00:05:22,479
whitelist and that is assuming that the

147
00:05:20,860 --> 00:05:25,300
third parties that we have we include

148
00:05:22,480 --> 00:05:29,650
only add scripts programmatic okay so

149
00:05:25,300 --> 00:05:31,300
they cannot use that later so now that

150
00:05:29,650 --> 00:05:33,489
we have some idea about CSP and what it

151
00:05:31,300 --> 00:05:37,300
looks like I told you in the beginning

152
00:05:33,490 --> 00:05:38,860
with this analysis from 2012 to 2018 you

153
00:05:37,300 --> 00:05:40,990
might wonder wait so you said you were

154
00:05:38,860 --> 00:05:42,670
here for the first time in 2013 so how

155
00:05:40,990 --> 00:05:45,130
do you how have you been collecting data

156
00:05:42,670 --> 00:05:47,320
for essentially seven years the answer

157
00:05:45,130 --> 00:05:48,400
is I have not there's a very nice

158
00:05:47,320 --> 00:05:51,460
service which is called the Internet

159
00:05:48,400 --> 00:05:54,460
Archive and that has been archiving

160
00:05:51,460 --> 00:05:56,739
websites since I guess 96 and

161
00:05:54,460 --> 00:05:58,120
importantly they also collect all HTTP

162
00:05:56,740 --> 00:06:00,160
headers that they encountered when

163
00:05:58,120 --> 00:06:02,110
crawling those files they don't deliver

164
00:06:00,160 --> 00:06:04,210
them as actual HTTP headers but they

165
00:06:02,110 --> 00:06:06,400
prefix them with this X archive or ik

166
00:06:04,210 --> 00:06:08,919
but this also means that we can easily

167
00:06:06,400 --> 00:06:10,750
go back in time essentially look at a

168
00:06:08,920 --> 00:06:13,720
fixed set of sites get all the snapshots

169
00:06:10,750 --> 00:06:16,030
between well in this case 2012 to 2018

170
00:06:13,720 --> 00:06:18,130
and for each time just extract this X

171
00:06:16,030 --> 00:06:21,119
archive or ik under security policy and

172
00:06:18,130 --> 00:06:23,740
policy purity policy report aluminum and

173
00:06:21,120 --> 00:06:25,570
so what we have seen this is where we

174
00:06:23,740 --> 00:06:27,630
get to the very academic part with these

175
00:06:25,570 --> 00:06:30,400
graphs and so on

176
00:06:27,630 --> 00:06:33,250
CSP level one goes really sucky right

177
00:06:30,400 --> 00:06:34,960
and we can classify a policy as being

178
00:06:33,250 --> 00:06:36,880
CSP level one because it does not have

179
00:06:34,960 --> 00:06:38,239
nonsense those of Harrah's doesn't have

180
00:06:36,880 --> 00:06:39,770
strict enemy

181
00:06:38,240 --> 00:06:41,960
and so if we look at this graph we see

182
00:06:39,770 --> 00:06:43,549
that the adoption of CSP is growing over

183
00:06:41,960 --> 00:06:47,030
time so this is that yeah a good trend

184
00:06:43,550 --> 00:06:50,180
we would like to see this a lot and we

185
00:06:47,030 --> 00:06:52,520
can also see clicker that here at the

186
00:06:50,180 --> 00:06:56,389
end of our experiment actually CSP level

187
00:06:52,520 --> 00:06:57,889
3 is the most widely used level of CSP

188
00:06:56,389 --> 00:06:59,389
and again this is not because CSP is

189
00:06:57,889 --> 00:07:00,949
versioning information but before we

190
00:06:59,389 --> 00:07:02,419
call for example there's a strict

191
00:07:00,949 --> 00:07:05,090
dynamic keyword and the policies we know

192
00:07:02,419 --> 00:07:07,549
it must be level 3 so this seems to be

193
00:07:05,090 --> 00:07:09,590
an actual good sign right so people

194
00:07:07,550 --> 00:07:10,849
thought about what is bad about CSP how

195
00:07:09,590 --> 00:07:12,258
can we improve it they came up with

196
00:07:10,849 --> 00:07:15,610
things like strict dynamic and now

197
00:07:12,259 --> 00:07:17,810
there's a rise in the adoption of CSP

198
00:07:15,610 --> 00:07:19,849
however as you will learn nothing

199
00:07:17,810 --> 00:07:22,759
Sebastian this is not necessarily only

200
00:07:19,849 --> 00:07:26,349
due to the credibility torpor hunter

201
00:07:22,759 --> 00:07:26,349
restriction of many other ways as well

202
00:07:31,249 --> 00:07:43,139
so as has been already mentioned de or

203
00:07:39,080 --> 00:07:49,310
CST is increasing which is great but as

204
00:07:43,139 --> 00:07:53,729
you can also see on the dashed line the

205
00:07:49,310 --> 00:07:57,240
only 1/3 of the policies are actually

206
00:07:53,729 --> 00:08:01,530
using CCP to restrict script on

207
00:07:57,240 --> 00:08:05,120
and script s been also mentioned scrip

208
00:08:01,530 --> 00:08:08,698
cotton was the urchin used a sec so

209
00:08:05,120 --> 00:08:11,729
naturally this means that in the new

210
00:08:08,699 --> 00:08:16,349
versions of CSP also other use cases of

211
00:08:11,729 --> 00:08:20,190
these security features were implemented

212
00:08:16,349 --> 00:08:22,440
into the policy but let's first take a

213
00:08:20,190 --> 00:08:28,680
look into the script content restriction

214
00:08:22,440 --> 00:08:32,208
capabilities of the system well already

215
00:08:28,680 --> 00:08:36,779
it ask you about whether your policy is

216
00:08:32,208 --> 00:08:39,539
secure or not and there are a few

217
00:08:36,779 --> 00:08:43,760
practices or sauce expressions that you

218
00:08:39,539 --> 00:08:49,279
can use in CSP which basically makes the

219
00:08:43,760 --> 00:08:52,470
policy privily trip advice by possible

220
00:08:49,279 --> 00:08:54,240
for example and second line which allows

221
00:08:52,470 --> 00:08:58,020
the execution building spirits or a

222
00:08:54,240 --> 00:09:02,880
divided listing or complete scheme at

223
00:08:58,020 --> 00:09:06,810
has such the well basically every HTTP

224
00:09:02,880 --> 00:09:17,240
origin is authority and also data you

225
00:09:06,810 --> 00:09:22,829
eyes and place your scripts in in UI so

226
00:09:17,240 --> 00:09:26,670
no one should so those sorts expressions

227
00:09:22,829 --> 00:09:28,229
may policy privilege by possible and

228
00:09:26,670 --> 00:09:30,719
here we are not even talking about

229
00:09:28,230 --> 00:09:35,670
things like open redirects

230
00:09:30,720 --> 00:09:39,600
JSONP your script gadgets so no one

231
00:09:35,670 --> 00:09:44,279
would use those insecure wet values in

232
00:09:39,600 --> 00:09:48,959
their script source post well real world

233
00:09:44,279 --> 00:09:53,839
shows a different picture because usage

234
00:09:48,959 --> 00:09:57,209
of those of those unsafe practices is

235
00:09:53,839 --> 00:10:00,540
dominating the script content

236
00:09:57,209 --> 00:10:05,900
controlling policies especially unsafe

237
00:10:00,540 --> 00:10:09,230
inline is used in well around 90% of all

238
00:10:05,900 --> 00:10:14,959
scripted restricting policies

239
00:10:09,230 --> 00:10:17,240
in our opinion this is due to many web

240
00:10:14,960 --> 00:10:19,400
applications using inline event and this

241
00:10:17,240 --> 00:10:20,990
which is basically only possible if you

242
00:10:19,400 --> 00:10:25,660
use one second

243
00:10:20,990 --> 00:10:29,530
and that word usage once a benign

244
00:10:25,660 --> 00:10:32,600
keyword is still dead higher although

245
00:10:29,530 --> 00:10:42,650
things like nonsense and stricter name

246
00:10:32,600 --> 00:10:44,680
are able to see steam hours so yeah yeah

247
00:10:42,650 --> 00:10:52,760
sorry

248
00:10:44,680 --> 00:10:55,910
so deploying a CSP seems to be well

249
00:10:52,760 --> 00:11:00,350
really hot because everyone is using

250
00:10:55,910 --> 00:11:02,870
those fancy unsafe practices but let's

251
00:11:00,350 --> 00:11:05,960
take a look into a few examples where

252
00:11:02,870 --> 00:11:09,280
people actually manage to deploy secure

253
00:11:05,960 --> 00:11:14,050
policies for example

254
00:11:09,280 --> 00:11:16,839
Theater well they initially started in

255
00:11:14,050 --> 00:11:19,390
November 2013 we have been already

256
00:11:16,840 --> 00:11:22,750
secured policy in enforcement mode and

257
00:11:19,390 --> 00:11:26,230
here their script source only contains

258
00:11:22,750 --> 00:11:30,580
five entries which were basically github

259
00:11:26,230 --> 00:11:36,130
itself and the delivery networks and

260
00:11:30,580 --> 00:11:38,950
similarities then in May 2014 they

261
00:11:36,130 --> 00:11:43,090
actually combine all their script assets

262
00:11:38,950 --> 00:11:48,720
and scripts from the CDN and built their

263
00:11:43,090 --> 00:11:51,700
own CDN and all their assets there and

264
00:11:48,720 --> 00:11:56,440
also reduce the number of the text

265
00:11:51,700 --> 00:11:59,250
companies that they use and then well

266
00:11:56,440 --> 00:12:02,140
they have only two entries left there

267
00:11:59,250 --> 00:12:05,440
but they even further improved in

268
00:12:02,140 --> 00:12:09,069
October 2014 by completely removing the

269
00:12:05,440 --> 00:12:14,500
last analytics company in Olympics in

270
00:12:09,070 --> 00:12:17,050
this case and now their script source

271
00:12:14,500 --> 00:12:23,650
there if only it contains their own CEM

272
00:12:17,050 --> 00:12:26,859
and nothing else so which is the secure

273
00:12:23,650 --> 00:12:30,130
policy and throughout their whole

274
00:12:26,860 --> 00:12:32,410
journey of deploying CSP they never ever

275
00:12:30,130 --> 00:12:34,180
used any of the other those insecure

276
00:12:32,410 --> 00:12:38,280
sauce expressions that we have seen

277
00:12:34,180 --> 00:12:44,160
report so it seems to be easier right

278
00:12:38,280 --> 00:12:47,670
however github is not a small

279
00:12:44,160 --> 00:12:50,439
organization and also don't really need

280
00:12:47,670 --> 00:12:52,560
third parties work sample Maps

281
00:12:50,440 --> 00:12:54,959
integration

282
00:12:52,560 --> 00:12:59,729
so let's take a look into another

283
00:12:54,959 --> 00:13:02,339
example for example a B well and as it

284
00:12:59,730 --> 00:13:04,680
is suggested were deploying a C speed

285
00:13:02,339 --> 00:13:08,490
they started with a policy we recalled

286
00:13:04,680 --> 00:13:11,758
only mode where the directives are not

287
00:13:08,490 --> 00:13:14,870
enforced but in case of violations the

288
00:13:11,759 --> 00:13:17,610
report is sent to a specified URI and

289
00:13:14,870 --> 00:13:22,370
they started with the script source that

290
00:13:17,610 --> 00:13:22,370
will contains already 17 Andrews

291
00:13:23,450 --> 00:13:34,880
then later in March 2015 they edit they

292
00:13:31,160 --> 00:13:39,920
edit the whole HTTP command to their

293
00:13:34,880 --> 00:13:49,070
website probably due to the high number

294
00:13:39,920 --> 00:13:50,089
of violation reports and then in May

295
00:13:49,070 --> 00:13:53,450
2015

296
00:13:50,089 --> 00:13:57,980
they actually switched their report only

297
00:13:53,450 --> 00:14:00,110
policy to enforcement mode but with a

298
00:13:57,980 --> 00:14:02,720
reduced number of entries in their

299
00:14:00,110 --> 00:14:05,450
script source policy but one of those

300
00:14:02,720 --> 00:14:08,520
entries still being evolve HTTP kometa

301
00:14:05,450 --> 00:14:13,490
so it is still communities

302
00:14:08,520 --> 00:14:17,250
then two years and many changes later

303
00:14:13,490 --> 00:14:22,920
your day keep on adding new domains to

304
00:14:17,250 --> 00:14:26,160
theirs source policy they actually

305
00:14:22,920 --> 00:14:29,969
started to again deploy and in parallel

306
00:14:26,160 --> 00:14:33,240
report only policy which was well

307
00:14:29,970 --> 00:14:38,370
enabled for one day and in this a build

308
00:14:33,240 --> 00:14:42,420
and you domains being added for the next

309
00:14:38,370 --> 00:14:46,850
I think one month and then yeah in

310
00:14:42,420 --> 00:14:50,610
generally to delegate again try the

311
00:14:46,850 --> 00:14:56,700
hardened report only policy that did not

312
00:14:50,610 --> 00:14:58,940
contain HTTP and well they change this

313
00:14:56,700 --> 00:15:06,209
secure policy in the Ottoman mode

314
00:14:58,940 --> 00:15:08,220
however this seems to be seems to not

315
00:15:06,209 --> 00:15:13,500
worked well because he was later they

316
00:15:08,220 --> 00:15:16,950
changed back and edit and edit HTTP

317
00:15:13,500 --> 00:15:19,290
again most probably due to our fatal

318
00:15:16,950 --> 00:15:22,829
errors in their application because some

319
00:15:19,290 --> 00:15:28,110
of the assets will not be able to load

320
00:15:22,829 --> 00:15:29,670
and then after hitting some more entries

321
00:15:28,110 --> 00:15:33,450
in their script sauce policy that

322
00:15:29,670 --> 00:15:37,860
finally arrived in a secure peace the

323
00:15:33,450 --> 00:15:42,230
CSP containing 33 entries in the script

324
00:15:37,860 --> 00:15:45,180
source well having these main business

325
00:15:42,230 --> 00:15:48,980
totally depends on their web presence

326
00:15:45,180 --> 00:15:53,069
and well a B&B is also a big company and

327
00:15:48,980 --> 00:15:58,890
but they still needed more than three

328
00:15:53,070 --> 00:16:03,910
years to actually deploy a secure policy

329
00:15:58,890 --> 00:16:09,160
that is enforced so

330
00:16:03,910 --> 00:16:12,730
what we work for script content control

331
00:16:09,160 --> 00:16:15,610
capabilities of ciske well most CSP is

332
00:16:12,730 --> 00:16:17,710
in the wild do not affect the PE protect

333
00:16:15,610 --> 00:16:20,920
against market injection simply because

334
00:16:17,710 --> 00:16:25,720
insecure practices are used in nearly

335
00:16:20,920 --> 00:16:28,870
every policy in the wild and that

336
00:16:25,720 --> 00:16:31,360
building a secure policy has a massive

337
00:16:28,870 --> 00:16:37,950
amount of time and engineering therefore

338
00:16:31,360 --> 00:16:40,630
as we have seen in year every VX so as

339
00:16:37,950 --> 00:16:44,980
already mentioned there are also other

340
00:16:40,630 --> 00:16:47,800
use cases for CSP and one of the those

341
00:16:44,980 --> 00:16:51,520
use cases is to enforce secure network

342
00:16:47,800 --> 00:16:54,069
connections well heh using HTTPS is

343
00:16:51,520 --> 00:16:57,610
important and I think we all agree that

344
00:16:54,070 --> 00:17:03,880
everyone should use HTTPS in their web

345
00:16:57,610 --> 00:17:05,770
application and CSPA actually is capable

346
00:17:03,880 --> 00:17:09,640
of and posting those secure connections

347
00:17:05,770 --> 00:17:15,699
and as you can see here the usage of CSP

348
00:17:09,640 --> 00:17:19,569
for enforcing TLS connections surpasses

349
00:17:15,699 --> 00:17:24,550
the usage of the script content

350
00:17:19,569 --> 00:17:25,920
controlling C's piece since August 2013

351
00:17:24,550 --> 00:17:29,860
[Music]

352
00:17:25,920 --> 00:17:32,830
course secure network connections using

353
00:17:29,860 --> 00:17:36,209
different security you see well for CSP

354
00:17:32,830 --> 00:17:40,750
level one and two you have to basically

355
00:17:36,210 --> 00:17:44,500
whitelist only HTTP they call HTTP

356
00:17:40,750 --> 00:17:46,930
limiter so every source that is not an

357
00:17:44,500 --> 00:17:51,250
HTTP source loading bar

358
00:17:46,930 --> 00:17:54,310
but because that's will kind of weird

359
00:17:51,250 --> 00:17:58,840
policy they decided to add cool new

360
00:17:54,310 --> 00:18:02,409
features into the CSP level three namely

361
00:17:58,840 --> 00:18:05,770
two new directors for prop onyx content

362
00:18:02,410 --> 00:18:08,500
wage as the name suggests one or props

363
00:18:05,770 --> 00:18:12,610
all HTTP content whether it is present

364
00:18:08,500 --> 00:18:17,800
on an HTTPS page and appeared in secure

365
00:18:12,610 --> 00:18:20,530
we basically upgrades HTTP that are

366
00:18:17,800 --> 00:18:23,370
issued by the web application to an HTTP

367
00:18:20,530 --> 00:18:26,410
dimension which is pretty cool

368
00:18:23,370 --> 00:18:29,199
especially if you want to migrate a web

369
00:18:26,410 --> 00:18:31,030
application from HTTP to HTTPS because

370
00:18:29,200 --> 00:18:35,320
you don't have to change all the links

371
00:18:31,030 --> 00:18:37,450
that are how to over deliver and because

372
00:18:35,320 --> 00:18:41,560
people obviously don't want their

373
00:18:37,450 --> 00:18:44,710
applications to pray see our directive

374
00:18:41,560 --> 00:18:46,210
that is mostly used or TLS and cosmides

375
00:18:44,710 --> 00:18:51,080
the upgrade in security requests

376
00:18:46,210 --> 00:18:54,950
directed and well

377
00:18:51,080 --> 00:18:57,800
it may be accurate in Secaucus is also

378
00:18:54,950 --> 00:18:59,410
one of the reason why the HTTP adoption

379
00:18:57,800 --> 00:19:05,720
in general is increasing in the last

380
00:18:59,410 --> 00:19:11,120
what and also see here is that the well

381
00:19:05,720 --> 00:19:15,610
rise of CSP level 3 that the FC in fence

382
00:19:11,120 --> 00:19:19,219
part of the top is most probably not you

383
00:19:15,610 --> 00:19:23,719
have a usage of strict dynamic but

384
00:19:19,220 --> 00:19:27,310
because after insecurity or TCP level 3

385
00:19:23,720 --> 00:19:30,770
directive you can attribute the

386
00:19:27,310 --> 00:19:34,270
researcher increased usage of CSP level

387
00:19:30,770 --> 00:19:34,270
3 to after an insecure test

388
00:19:35,030 --> 00:19:44,360
so to further investigate if people

389
00:19:41,840 --> 00:19:48,980
actually using a pretty insecure breasts

390
00:19:44,360 --> 00:19:52,879
in processor by cracking their web

391
00:19:48,980 --> 00:19:56,390
application from HTTP to HTTPS we are

392
00:19:52,880 --> 00:20:00,260
taking you take a look on all main pages

393
00:19:56,390 --> 00:20:05,000
of those sites that use upgrade insecure

394
00:20:00,260 --> 00:20:08,120
quests according to our data set and we

395
00:20:05,000 --> 00:20:11,559
collected all extent external URLs that

396
00:20:08,120 --> 00:20:15,658
we found on their stop page

397
00:20:11,559 --> 00:20:15,658
and here we actually have

398
00:20:16,050 --> 00:20:21,510
nice examples of people actually using

399
00:20:18,570 --> 00:20:24,790
it through a transition to a secure

400
00:20:21,510 --> 00:20:29,230
network connection for example riot calm

401
00:20:24,790 --> 00:20:35,030
they started the deployment of HTTPS in

402
00:20:29,230 --> 00:20:40,450
June 2016 but they had HTTP liens on

403
00:20:35,030 --> 00:20:45,740
their main page until September 2017 so

404
00:20:40,450 --> 00:20:47,390
to further investigate the fiscal

405
00:20:45,740 --> 00:20:50,660
feature can be used on more

406
00:20:47,390 --> 00:20:55,280
verifications we crawl the alike version

407
00:20:50,660 --> 00:20:57,029
of the ten thousand websites that were

408
00:20:55,280 --> 00:21:00,749
in no set

409
00:20:57,029 --> 00:21:03,749
and on court nearly four thousand eight

410
00:21:00,749 --> 00:21:08,309
hundred of them we found mixed content

411
00:21:03,749 --> 00:21:11,669
on their front pages and well we also

412
00:21:08,309 --> 00:21:14,459
check whether this HTTP content is also

413
00:21:11,669 --> 00:21:16,469
accessible via HTTP and here we see that

414
00:21:14,459 --> 00:21:20,599
really 90% of them

415
00:21:16,469 --> 00:21:24,539
we're actually accessible by HTTP so

416
00:21:20,599 --> 00:21:28,559
they can actually use upgrade in CP

417
00:21:24,539 --> 00:21:35,399
requests to will get rid of omics

418
00:21:28,559 --> 00:21:38,879
content problems in these pages so you

419
00:21:35,399 --> 00:21:42,238
see so see quality less important

420
00:21:38,879 --> 00:21:49,438
capability basicity it is awesome to use

421
00:21:42,239 --> 00:21:56,369
to see connections because to your

422
00:21:49,439 --> 00:21:59,039
policy and you and because it and it

423
00:21:56,369 --> 00:22:04,049
makes also the migration from HTTP to

424
00:21:59,039 --> 00:22:06,629
HTTPS much easier because and don't need

425
00:22:04,049 --> 00:22:08,609
to immediately change all links in your

426
00:22:06,629 --> 00:22:11,668
application because I've read in Sakura

427
00:22:08,609 --> 00:22:14,129
quests does they don't apply and what is

428
00:22:11,669 --> 00:22:18,599
also important here as a takeaway

429
00:22:14,129 --> 00:22:21,569
message the update in Sakura can be used

430
00:22:18,599 --> 00:22:24,718
in a CSP and isolation so you don't need

431
00:22:21,569 --> 00:22:26,789
to restrict any content to enforce

432
00:22:24,719 --> 00:22:30,649
secure networks connect network

433
00:22:26,789 --> 00:22:30,649
connection using a CSP

434
00:22:31,030 --> 00:22:38,530
so another thing that is very important

435
00:22:34,480 --> 00:22:41,350
for the web is the presence of

436
00:22:38,530 --> 00:22:44,980
Hippocrates well everyone loves them

437
00:22:41,350 --> 00:22:48,360
right and for sure everyone wants to see

438
00:22:44,980 --> 00:22:51,340
more of those cute etiquette pictures

439
00:22:48,360 --> 00:22:53,520
but clicking on buttons can be dangerous

440
00:22:51,340 --> 00:22:53,520
because

441
00:22:54,000 --> 00:22:59,680
attacks or framing based attacks like

442
00:22:57,220 --> 00:23:03,280
for example sick jacking burned and it

443
00:22:59,680 --> 00:23:07,990
an attacker loads another application in

444
00:23:03,280 --> 00:23:12,190
an overlay and basically places this in

445
00:23:07,990 --> 00:23:16,650
an open with high opacity over the

446
00:23:12,190 --> 00:23:16,650
button that you want to clip so

447
00:23:19,090 --> 00:23:26,270
- both ow

448
00:23:21,370 --> 00:23:31,449
Familia everyone it is we are in control

449
00:23:26,270 --> 00:23:34,520
we again want to see a few hands here so

450
00:23:31,450 --> 00:23:36,560
who of you is actually aware of parent X

451
00:23:34,520 --> 00:23:38,840
electricity checking effect that you

452
00:23:36,560 --> 00:23:45,190
just see okay

453
00:23:38,840 --> 00:23:48,189
and you actually uses extreme options to

454
00:23:45,190 --> 00:23:53,630
defend against these kind of the text

455
00:23:48,190 --> 00:23:56,150
okay and we think that extreme options

456
00:23:53,630 --> 00:24:02,720
might not be the best solution to defend

457
00:23:56,150 --> 00:24:04,640
against train based a test okay and you

458
00:24:02,720 --> 00:24:07,630
know who actually knows the CSP

459
00:24:04,640 --> 00:24:15,250
directive that can be strongly control

460
00:24:07,630 --> 00:24:19,220
okay so let's first stab with the

461
00:24:15,250 --> 00:24:21,380
extreme option center well the

462
00:24:19,220 --> 00:24:23,150
experiments header has certain problems

463
00:24:21,380 --> 00:24:25,730
because it was never standardized and

464
00:24:23,150 --> 00:24:29,420
therefore browsers in consistently

465
00:24:25,730 --> 00:24:32,230
implemented this error so this

466
00:24:29,420 --> 00:24:34,610
inconsistent implementation leads to

467
00:24:32,230 --> 00:24:38,090
security problems like for example the

468
00:24:34,610 --> 00:24:41,479
partial support of some modes and double

469
00:24:38,090 --> 00:24:46,939
priming X which we will see in a few

470
00:24:41,480 --> 00:24:50,420
seconds but also it has as well

471
00:24:46,940 --> 00:24:52,730
functionality problems because in in in

472
00:24:50,420 --> 00:24:55,640
extra options you're only capable of

473
00:24:52,730 --> 00:24:59,450
right least in one single origin which

474
00:24:55,640 --> 00:25:01,160
is bad because in many cases you want

475
00:24:59,450 --> 00:25:07,760
your application to be framed by

476
00:25:01,160 --> 00:25:09,440
multiple other parties so as mentioned

477
00:25:07,760 --> 00:25:12,770
there is the problem of partial support

478
00:25:09,440 --> 00:25:15,980
for the experiments in seven and as you

479
00:25:12,770 --> 00:25:19,030
can see here major Pro slack works at

480
00:25:15,980 --> 00:25:23,930
the chrome of Herat and Safari don't

481
00:25:19,030 --> 00:25:28,520
don't support the allow prom mode of the

482
00:25:23,930 --> 00:25:31,430
extra option server and that's why if

483
00:25:28,520 --> 00:25:32,490
you deploy each frame options with this

484
00:25:31,430 --> 00:25:35,160
mode they pay

485
00:25:32,490 --> 00:25:37,050
insecurely so users that trousers

486
00:25:35,160 --> 00:25:38,910
basically have no feminine protection at

487
00:25:37,050 --> 00:25:41,399
all

488
00:25:38,910 --> 00:25:45,510
and other problems our so-called double

489
00:25:41,400 --> 00:25:50,370
framing attacks where this kind of the

490
00:25:45,510 --> 00:25:53,280
text basically or pure because in extra

491
00:25:50,370 --> 00:25:55,050
options or in the implement in some

492
00:25:53,280 --> 00:25:57,990
implementations of the extreme options

493
00:25:55,050 --> 00:26:00,570
the origin that is checked against is

494
00:25:57,990 --> 00:26:05,640
only the topmost rain and not all

495
00:26:00,570 --> 00:26:08,610
framing ancestors and that's why Oh give

496
00:26:05,640 --> 00:26:11,100
a page we accept all enabled frames and

497
00:26:08,610 --> 00:26:17,570
encourage that against friends again

498
00:26:11,100 --> 00:26:19,860
frames the page the extreme origin is so

499
00:26:17,570 --> 00:26:22,909
to fix all those problems

500
00:26:19,860 --> 00:26:27,360
CSP level two has introduced new

501
00:26:22,910 --> 00:26:31,130
directive called premon sisters and as

502
00:26:27,360 --> 00:26:35,159
you can see here also this use case is

503
00:26:31,130 --> 00:26:39,770
used by around one-third of all policies

504
00:26:35,160 --> 00:26:42,360
in the world but how thus remand sisters

505
00:26:39,770 --> 00:26:47,910
actually address the problems of it of

506
00:26:42,360 --> 00:26:51,419
the exact Oh Hannah well first of all as

507
00:26:47,910 --> 00:26:54,150
mentioned each supported is consistently

508
00:26:51,420 --> 00:26:58,290
implemented well depart standard in

509
00:26:54,150 --> 00:27:00,330
level two in CSP level two premises this

510
00:26:58,290 --> 00:27:03,300
literally and standard in CSP relative

511
00:27:00,330 --> 00:27:05,340
and that's why it also fixes the

512
00:27:03,300 --> 00:27:08,280
problems or partially support because

513
00:27:05,340 --> 00:27:11,699
all modern modern browsers that actually

514
00:27:08,280 --> 00:27:15,090
support CSP level to also support FEMEN

515
00:27:11,700 --> 00:27:17,880
sisters and because it is the time

516
00:27:15,090 --> 00:27:18,280
standard everyone implements it the same

517
00:27:17,880 --> 00:27:20,230
way

518
00:27:18,280 --> 00:27:23,200
[Music]

519
00:27:20,230 --> 00:27:25,870
and according to the specification all

520
00:27:23,200 --> 00:27:28,029
framing ancestors new check and not on

521
00:27:25,870 --> 00:27:33,039
the top more strain which also fixes the

522
00:27:28,029 --> 00:27:36,370
double turn another addition and

523
00:27:33,039 --> 00:27:39,658
comparison to said oh is the support for

524
00:27:36,370 --> 00:27:42,340
an explicit whitelist so you can

525
00:27:39,659 --> 00:27:45,669
whitelist multiple parties that is that

526
00:27:42,340 --> 00:27:50,260
are actually capable of framing your web

527
00:27:45,669 --> 00:27:53,529
application and again just like in case

528
00:27:50,260 --> 00:27:56,019
of TLS enforcement the Fremen sisters

529
00:27:53,529 --> 00:27:58,120
started can use an isolation so you

530
00:27:56,019 --> 00:28:02,169
don't need to restrict any of the pages

531
00:27:58,120 --> 00:28:08,559
content to secure your web application

532
00:28:02,169 --> 00:28:10,690
again string based test however not

533
00:28:08,559 --> 00:28:14,309
every browser that is out there supports

534
00:28:10,690 --> 00:28:17,110
ESP levity recently invented and

535
00:28:14,309 --> 00:28:20,649
therefore there are some best practices

536
00:28:17,110 --> 00:28:25,629
that to keep in mind you want to deploy

537
00:28:20,649 --> 00:28:28,689
premises well in modern browsers where

538
00:28:25,630 --> 00:28:32,200
C's py-o-tu supported it as soon as from

539
00:28:28,690 --> 00:28:35,470
ancestors is present in the extra

540
00:28:32,200 --> 00:28:38,529
options header will be ignored that's

541
00:28:35,470 --> 00:28:41,529
why he can secure for example securing

542
00:28:38,529 --> 00:28:45,490
your web application to a combination of

543
00:28:41,529 --> 00:28:51,190
an extra option center that will be nice

544
00:28:45,490 --> 00:28:54,610
ultra me and premises will actually

545
00:28:51,190 --> 00:29:01,029
allows the sites that you want examples

546
00:28:54,610 --> 00:29:10,629
sake and then will now take a look with

547
00:29:01,029 --> 00:29:12,820
you alright thanks and so we've seen

548
00:29:10,630 --> 00:29:16,480
that Expo has these these particular

549
00:29:12,820 --> 00:29:18,760
issues and so this would be a policy

550
00:29:16,480 --> 00:29:20,679
that your default you would break

551
00:29:18,760 --> 00:29:23,440
internet core button you can the video

552
00:29:20,679 --> 00:29:24,789
problem or not but in any case you'd say

553
00:29:23,440 --> 00:29:26,950
okay obviously with frame at this is

554
00:29:24,789 --> 00:29:28,720
very easy I have a whitelist so it works

555
00:29:26,950 --> 00:29:30,010
well in terms of functionality so

556
00:29:28,720 --> 00:29:32,230
obviously everybody's going to use frame

557
00:29:30,010 --> 00:29:33,600
instance right and here's a graph that

558
00:29:32,230 --> 00:29:35,130
shows exactly

559
00:29:33,600 --> 00:29:37,740
so the red line is the adoption of extra

560
00:29:35,130 --> 00:29:40,230
options with the deprecation around 2013

561
00:29:37,740 --> 00:29:42,750
and we see how it's being used by over

562
00:29:40,230 --> 00:29:45,890
more than 3000 over 10,000 sites whereas

563
00:29:42,750 --> 00:29:48,360
people premier code was actually used by

564
00:29:45,890 --> 00:29:51,840
300 or something and so essentially

565
00:29:48,360 --> 00:29:53,729
people are still increasingly using this

566
00:29:51,840 --> 00:29:54,810
super outdated had always had obvious

567
00:29:53,730 --> 00:29:57,240
these issues that we just discussed

568
00:29:54,810 --> 00:29:59,790
instead of the well specified premise

569
00:29:57,240 --> 00:30:01,920
and says directly we also find that

570
00:29:59,790 --> 00:30:03,090
there's a lot of people who use pole so

571
00:30:01,920 --> 00:30:05,190
they might have seen the previous slides

572
00:30:03,090 --> 00:30:09,510
in terms of best practices or you can

573
00:30:05,190 --> 00:30:10,860
combine the two headers and so we

574
00:30:09,510 --> 00:30:13,950
thought okay this is a this is somewhat

575
00:30:10,860 --> 00:30:16,080
bad right so why is the situation this

576
00:30:13,950 --> 00:30:19,880
this dire that we see people using the

577
00:30:16,080 --> 00:30:23,310
super old header so we did a small

578
00:30:19,880 --> 00:30:25,550
notification so we had about 2700 sites

579
00:30:23,310 --> 00:30:29,340
that did not use CSP Primus introduced

580
00:30:25,550 --> 00:30:30,780
exif all and so I've done a lot of

581
00:30:29,340 --> 00:30:32,760
acacia experiments before us I said oh

582
00:30:30,780 --> 00:30:35,220
kids do not care sites

583
00:30:32,760 --> 00:30:36,930
the response rate will be percent or so

584
00:30:35,220 --> 00:30:39,630
so I'll just use my own inbox and in

585
00:30:36,930 --> 00:30:41,820
send a couple of emails out so a lot of

586
00:30:39,630 --> 00:30:43,530
them bounced but overall what I was very

587
00:30:41,820 --> 00:30:46,800
surprised about is that I got responses

588
00:30:43,530 --> 00:30:48,000
from 120 people and these went above to

589
00:30:46,800 --> 00:30:49,830
saying thanks for your email

590
00:30:48,000 --> 00:30:51,570
these were as like can you give me more

591
00:30:49,830 --> 00:30:53,280
information so I spent about a week or

592
00:30:51,570 --> 00:30:56,220
so answering all these emails engaging

593
00:30:53,280 --> 00:30:58,080
with people back and forth and then at

594
00:30:56,220 --> 00:31:00,000
some point I said okay this is just way

595
00:30:58,080 --> 00:31:01,169
too much I don't want to look at these

596
00:31:00,000 --> 00:31:03,600
emails anymore so that's why you have

597
00:31:01,170 --> 00:31:05,040
PhD students for so I asked about Center

598
00:31:03,600 --> 00:31:08,699
if you have a look at those those

599
00:31:05,040 --> 00:31:11,970
policies and try to kind of come up with

600
00:31:08,700 --> 00:31:13,950
categories that they fit into into 62

601
00:31:11,970 --> 00:31:15,800
people said awesome thank you great that

602
00:31:13,950 --> 00:31:19,020
you told us who the process right away

603
00:31:15,800 --> 00:31:21,530
not all of them have until this very day

604
00:31:19,020 --> 00:31:24,210
and this has been a couple of months ago

605
00:31:21,530 --> 00:31:25,830
24 people directly replied to me and

606
00:31:24,210 --> 00:31:27,390
said you know what CSP so complex will

607
00:31:25,830 --> 00:31:29,730
break my website right so this already

608
00:31:27,390 --> 00:31:31,140
gives us some indication of people not

609
00:31:29,730 --> 00:31:32,820
knowing that they can use frame

610
00:31:31,140 --> 00:31:35,100
ancestors in isolation we have a couple

611
00:31:32,820 --> 00:31:36,899
of holes also disappear and then there

612
00:31:35,100 --> 00:31:39,030
were 13 people who were running extra

613
00:31:36,900 --> 00:31:40,470
options and who said well we have never

614
00:31:39,030 --> 00:31:43,620
actually heard of these different

615
00:31:40,470 --> 00:31:45,150
ancestors before so we also asked them

616
00:31:43,620 --> 00:31:46,620
in the follow-up service like why are we

617
00:31:45,150 --> 00:31:46,840
even using except or what will come to

618
00:31:46,620 --> 00:31:49,629
the

619
00:31:46,840 --> 00:31:51,340
second I want to share just a couple of

620
00:31:49,630 --> 00:31:53,470
the things that we got again it's June

621
00:31:51,340 --> 00:31:55,959
17 responses I'm not going to show you

622
00:31:53,470 --> 00:31:59,470
all of them but let me show you this one

623
00:31:55,960 --> 00:32:01,060
first so the term complex is something

624
00:31:59,470 --> 00:32:04,660
that happened a lot that we've got a lot

625
00:32:01,060 --> 00:32:06,879
in in the emails I also done some

626
00:32:04,660 --> 00:32:09,160
technically complex security policy

627
00:32:06,880 --> 00:32:10,570
which probably fits its description much

628
00:32:09,160 --> 00:32:12,070
better than content because it's as

629
00:32:10,570 --> 00:32:15,070
we've seen used for framing control

630
00:32:12,070 --> 00:32:16,600
that's on content security so what does

631
00:32:15,070 --> 00:32:18,129
it say so a form of our partners are

632
00:32:16,600 --> 00:32:20,800
iframe your site we already had issues

633
00:32:18,130 --> 00:32:22,330
implementing the Xtreme options header

634
00:32:20,800 --> 00:32:23,919
and so we didn't want to deal with it

635
00:32:22,330 --> 00:32:25,899
again the CSP so there's a clear

636
00:32:23,920 --> 00:32:27,520
misconception here that if you have

637
00:32:25,900 --> 00:32:28,870
extra options what you need to do is if

638
00:32:27,520 --> 00:32:30,580
you have multiple partner sites that

639
00:32:28,870 --> 00:32:32,469
frame you you need to on the server side

640
00:32:30,580 --> 00:32:34,120
decide what's the referrer that I'm

641
00:32:32,470 --> 00:32:37,150
seeing right now and do I want to

642
00:32:34,120 --> 00:32:40,540
specify X prime options out from this

643
00:32:37,150 --> 00:32:42,040
particular or not with CSP it is much

644
00:32:40,540 --> 00:32:43,270
easier because assuming that you know

645
00:32:42,040 --> 00:32:45,490
who's going to frame you just have a

646
00:32:43,270 --> 00:32:47,470
whitelist that you can fix once it even

647
00:32:45,490 --> 00:32:49,990
if you dynamically decide which thing to

648
00:32:47,470 --> 00:32:51,550
use so he disappeared like

649
00:32:49,990 --> 00:32:54,490
misunderstanding about the capabilities

650
00:32:51,550 --> 00:32:55,840
of CSP the second one and that was we've

651
00:32:54,490 --> 00:32:57,730
seen in the very beginning with the

652
00:32:55,840 --> 00:32:59,199
questions that I would ask a CSP is

653
00:32:57,730 --> 00:33:01,120
destroyed websites um

654
00:32:59,200 --> 00:33:03,340
I fully agree that if you try to

655
00:33:01,120 --> 00:33:06,239
restrict your content zst will break

656
00:33:03,340 --> 00:33:08,560
your worst and so there were people

657
00:33:06,240 --> 00:33:10,240
thinkin this is just one example had

658
00:33:08,560 --> 00:33:11,620
more like these that told us there that

659
00:33:10,240 --> 00:33:13,750
was already placed on the roadmap in

660
00:33:11,620 --> 00:33:16,360
August last year but we went into some

661
00:33:13,750 --> 00:33:18,130
troubles probably enabling this so we we

662
00:33:16,360 --> 00:33:20,500
stopped using it okay so this is

663
00:33:18,130 --> 00:33:22,900
obviously not Airbnb because Airbnb just

664
00:33:20,500 --> 00:33:24,400
doesn't have enough staff to or then

665
00:33:22,900 --> 00:33:28,260
address these issues and try to come up

666
00:33:24,400 --> 00:33:31,690
with the solution there of course um

667
00:33:28,260 --> 00:33:33,700
then again the complexity right many

668
00:33:31,690 --> 00:33:34,960
person third-party integrations I think

669
00:33:33,700 --> 00:33:37,270
also third parties are a very big

670
00:33:34,960 --> 00:33:39,250
problem of CSP because you can make your

671
00:33:37,270 --> 00:33:41,320
site as secure as you want to when you

672
00:33:39,250 --> 00:33:42,790
then run Google tag manager it will use

673
00:33:41,320 --> 00:33:43,120
it evolve or document right no it really

674
00:33:42,790 --> 00:33:45,909
is

675
00:33:43,120 --> 00:33:47,620
yours truly can listen to it and so they

676
00:33:45,910 --> 00:33:48,880
said yeah we like even having a generic

677
00:33:47,620 --> 00:33:50,199
policy that adds value in which is

678
00:33:48,880 --> 00:33:51,400
suitable for an entire state is

679
00:33:50,200 --> 00:33:54,460
something that is very difficult to

680
00:33:51,400 --> 00:33:56,380
achieve this is probably one of those

681
00:33:54,460 --> 00:33:58,960
cases where we had that we saw before

682
00:33:56,380 --> 00:34:00,270
90% unsafe inline right it's possible to

683
00:33:58,960 --> 00:34:01,950
deploy a CSV

684
00:34:00,270 --> 00:34:03,750
if your boss tells you need to deploy a

685
00:34:01,950 --> 00:34:06,360
CSB you have deployed the CSB

686
00:34:03,750 --> 00:34:09,449
successfully but if you have to resort

687
00:34:06,360 --> 00:34:11,759
to unsafe inline to HTTPS you're unsafe

688
00:34:09,449 --> 00:34:15,029
eval and then even at the data and the

689
00:34:11,760 --> 00:34:17,070
blob you are URL scheme then obviously

690
00:34:15,030 --> 00:34:18,480
as you have deployed CSD but you to

691
00:34:17,070 --> 00:34:22,200
functionality if you did have to just

692
00:34:18,480 --> 00:34:24,210
back down a little bit and well go and

693
00:34:22,199 --> 00:34:28,139
find a better solution or just it is

694
00:34:24,210 --> 00:34:29,940
very easy keepers and then this is

695
00:34:28,139 --> 00:34:32,150
another example of this massive

696
00:34:29,940 --> 00:34:34,409
engineering effort and I like this a lot

697
00:34:32,150 --> 00:34:36,330
so we have a small team to be one to

698
00:34:34,409 --> 00:34:38,759
update or version of Python or we want

699
00:34:36,330 --> 00:34:41,159
to at CSP we want to move to the new LTS

700
00:34:38,760 --> 00:34:42,450
version of Ubuntu or see it and there

701
00:34:41,159 --> 00:34:44,489
were a couple of more of these things

702
00:34:42,449 --> 00:34:49,639
and then they said well CSP is always

703
00:34:44,489 --> 00:34:51,870
going to and obviously thank you and

704
00:34:49,639 --> 00:34:53,730
obviously I think this is this is

705
00:34:51,870 --> 00:34:55,380
something that you've all experienced

706
00:34:53,730 --> 00:34:56,940
that it's such a significant effort you

707
00:34:55,380 --> 00:34:59,280
can't just say okay I'll just deploy CSP

708
00:34:56,940 --> 00:35:00,750
in this world this world fine and we've

709
00:34:59,280 --> 00:35:03,030
really seen this quite a lot where we

710
00:35:00,750 --> 00:35:06,510
saw policies which I found frustratingly

711
00:35:03,030 --> 00:35:08,520
insecure said unsafe inline HTTP okay so

712
00:35:06,510 --> 00:35:10,200
how much it's more insecure can you get

713
00:35:08,520 --> 00:35:12,060
well you have to add the data UI because

714
00:35:10,200 --> 00:35:13,799
some third-party ads the script as a

715
00:35:12,060 --> 00:35:16,620
data you are you also have to add the

716
00:35:13,800 --> 00:35:18,390
blob uri scheme because somebody creates

717
00:35:16,620 --> 00:35:21,450
dynamically a blob and then puts that as

718
00:35:18,390 --> 00:35:23,040
a script into your page okay so you have

719
00:35:21,450 --> 00:35:24,480
this already insecure policy which is

720
00:35:23,040 --> 00:35:26,610
still need to widen even further and

721
00:35:24,480 --> 00:35:30,540
then you could just look do it at all I

722
00:35:26,610 --> 00:35:32,550
guess okay um so since we got all these

723
00:35:30,540 --> 00:35:35,730
emails back you have said let's try to

724
00:35:32,550 --> 00:35:37,950
do this a little bit more or formal and

725
00:35:35,730 --> 00:35:41,160
and in structures we asked people to

726
00:35:37,950 --> 00:35:42,270
participate in this survey and so the

727
00:35:41,160 --> 00:35:43,890
first question was like why have you

728
00:35:42,270 --> 00:35:46,470
even implemented this this exit overhead

729
00:35:43,890 --> 00:35:48,600
um and most of the people that answered

730
00:35:46,470 --> 00:35:49,950
said they did this is based on their own

731
00:35:48,600 --> 00:35:52,860
decision maybe they they were a tourist

732
00:35:49,950 --> 00:35:55,439
they were aware of the threats around

733
00:35:52,860 --> 00:35:57,990
this and follow the guidelines there um

734
00:35:55,440 --> 00:36:00,090
but almost equally as many people said

735
00:35:57,990 --> 00:36:01,919
well there was either a pen test or a

736
00:36:00,090 --> 00:36:04,170
tooth out that told us or it will that

737
00:36:01,920 --> 00:36:06,990
suggested extreme options and it did not

738
00:36:04,170 --> 00:36:08,970
suggest premises and so if you write a

739
00:36:06,990 --> 00:36:11,069
tool or if you are a consultant then

740
00:36:08,970 --> 00:36:12,870
please consider also telling people

741
00:36:11,070 --> 00:36:14,160
maybe also implement prime end systems

742
00:36:12,870 --> 00:36:15,868
because there's no

743
00:36:14,160 --> 00:36:17,970
harm for modern browsers okay modern

744
00:36:15,869 --> 00:36:19,829
browsers will ignore exit hole and will

745
00:36:17,970 --> 00:36:21,509
instead UCSB premise you can still

746
00:36:19,829 --> 00:36:25,319
excuse XF all for the legacy browsers

747
00:36:21,510 --> 00:36:28,950
which is perfectly fine but just help

748
00:36:25,319 --> 00:36:30,150
help us improve the situation and see

749
00:36:28,950 --> 00:36:31,770
there are many more questions but I just

750
00:36:30,150 --> 00:36:35,130
wanted to in the interest of time show

751
00:36:31,770 --> 00:36:36,150
you one more or two more actually so we

752
00:36:35,130 --> 00:36:39,270
asked people it's like do you believe

753
00:36:36,150 --> 00:36:41,520
CSP is viable to increase your website's

754
00:36:39,270 --> 00:36:43,530
resilience against Texas's right so

755
00:36:41,520 --> 00:36:45,180
that's what people initially came up

756
00:36:43,530 --> 00:36:47,670
with CSP was like we want to mitigate

757
00:36:45,180 --> 00:36:49,919
cross it said yes well essentially

758
00:36:47,670 --> 00:36:51,510
everybody said yes so there was one

759
00:36:49,920 --> 00:36:55,289
person said look and one person who's

760
00:36:51,510 --> 00:36:56,730
that I told you and then we asked a

761
00:36:55,289 --> 00:36:58,049
second question which aside work out of

762
00:36:56,730 --> 00:37:00,569
the box if you deploy it in script

763
00:36:58,049 --> 00:37:02,130
content restriction and CSP today this

764
00:37:00,569 --> 00:37:04,558
allowing evil inline scripts and event

765
00:37:02,130 --> 00:37:08,390
handlers and guess what now the answer

766
00:37:04,559 --> 00:37:10,260
is exactly inverted naturally

767
00:37:08,390 --> 00:37:11,848
essentially everybody was saying no

768
00:37:10,260 --> 00:37:14,880
there's a couple of people who don't

769
00:37:11,849 --> 00:37:18,059
know but probably also because they are

770
00:37:14,880 --> 00:37:19,589
not as aware of CSP for example if you

771
00:37:18,059 --> 00:37:21,000
only have inline scripts you can use

772
00:37:19,589 --> 00:37:24,089
nonces if you have inline script and

773
00:37:21,000 --> 00:37:25,500
event handlers you screwed again and as

774
00:37:24,089 --> 00:37:28,770
I've already said this is something that

775
00:37:25,500 --> 00:37:30,900
we have observed wide a lot and in

776
00:37:28,770 --> 00:37:32,609
contrast in our experiment we saw just a

777
00:37:30,900 --> 00:37:34,829
handful of sites that managed to do

778
00:37:32,609 --> 00:37:36,240
security is B and those were the sides

779
00:37:34,829 --> 00:37:38,010
that either did not have any inlands

780
00:37:36,240 --> 00:37:40,049
inline event handlers before they

781
00:37:38,010 --> 00:37:42,390
started CSP or very few that they could

782
00:37:40,049 --> 00:37:43,680
easily eradicate okay I think many of

783
00:37:42,390 --> 00:37:46,910
you have looked at applications or even

784
00:37:43,680 --> 00:37:49,589
built applications where this is not

785
00:37:46,910 --> 00:37:50,730
alright so let's have a couple of

786
00:37:49,589 --> 00:37:53,279
takeaway messages and then I have a

787
00:37:50,730 --> 00:37:56,250
couple of questions or wishes to the

788
00:37:53,279 --> 00:37:58,859
audience is grown here so CSP for script

789
00:37:56,250 --> 00:38:00,690
content control as we have seen is way

790
00:37:58,859 --> 00:38:03,720
too complex and it does give CSP a bad

791
00:38:00,690 --> 00:38:05,520
name because as we saw from our

792
00:38:03,720 --> 00:38:07,020
responses because they are CSP not will

793
00:38:05,520 --> 00:38:08,579
break my set so they don't even

794
00:38:07,020 --> 00:38:12,390
understand that you can use these two

795
00:38:08,579 --> 00:38:14,760
useful modes of CSP in isolation for

796
00:38:12,390 --> 00:38:16,618
those it's actually very useful support

797
00:38:14,760 --> 00:38:18,660
you're less enforcement you can using up

798
00:38:16,619 --> 00:38:22,049
your interview requests seamlessly

799
00:38:18,660 --> 00:38:24,450
migrate to HTTPS and then just assuming

800
00:38:22,049 --> 00:38:26,130
that all links also work over HTTPS and

801
00:38:24,450 --> 00:38:27,720
as we've seen in the experiment that the

802
00:38:26,130 --> 00:38:29,940
bus sent did a lot of the pages

803
00:38:27,720 --> 00:38:31,919
that too silverlight HTTP resources put

804
00:38:29,940 --> 00:38:36,150
at least based on the start pages

805
00:38:31,920 --> 00:38:38,340
upgrade right away - yes it's also very

806
00:38:36,150 --> 00:38:40,920
useful in framing control and the

807
00:38:38,340 --> 00:38:42,420
misconceptions about CSP and the

808
00:38:40,920 --> 00:38:44,910
unusable content control mechanism

809
00:38:42,420 --> 00:38:46,950
really block the usage of easy-to-use

810
00:38:44,910 --> 00:38:48,509
features so even get just gave me the 5

811
00:38:46,950 --> 00:38:51,419
minutes but I'm also done now well thank

812
00:38:48,510 --> 00:38:53,430
you um so this is where where I would

813
00:38:51,420 --> 00:38:57,060
like you to help us out a little bit I

814
00:38:53,430 --> 00:38:59,399
told you before that essentially we did

815
00:38:57,060 --> 00:39:01,710
this this study um and we wrote a paper

816
00:38:59,400 --> 00:39:03,210
about it and then people the review of

817
00:39:01,710 --> 00:39:04,170
sawdust our but how do you know that

818
00:39:03,210 --> 00:39:05,070
these are actually people who are

819
00:39:04,170 --> 00:39:07,770
developers and who are knowledgeable

820
00:39:05,070 --> 00:39:10,050
about CSP and I said well we we don't

821
00:39:07,770 --> 00:39:11,940
but I didn't get the feeling that they

822
00:39:10,050 --> 00:39:13,410
will stick the secretary just answering

823
00:39:11,940 --> 00:39:14,880
random emails saying uh please give me

824
00:39:13,410 --> 00:39:17,368
more technical information about these P

825
00:39:14,880 --> 00:39:19,770
or in this room there is the audience

826
00:39:17,369 --> 00:39:21,660
full of experts of CSP and if you could

827
00:39:19,770 --> 00:39:23,070
help us out it will take you no more

828
00:39:21,660 --> 00:39:24,990
than three minutes unless you write a

829
00:39:23,070 --> 00:39:27,060
very very long comment in the pretext

830
00:39:24,990 --> 00:39:28,680
and it would be super useful if you

831
00:39:27,060 --> 00:39:31,320
could help it out with with a small

832
00:39:28,680 --> 00:39:33,690
server here and since we already have we

833
00:39:31,320 --> 00:39:35,520
still have a couple of minutes left so

834
00:39:33,690 --> 00:39:37,530
that's why I would like to now open the

835
00:39:35,520 --> 00:39:39,119
call for any questions and also would

836
00:39:37,530 --> 00:39:40,710
like to hear your personal kind of

837
00:39:39,119 --> 00:39:43,770
horror stories about CSP and what you

838
00:39:40,710 --> 00:39:45,980
think should be done - thank you very

839
00:39:43,770 --> 00:39:45,980
much

840
00:39:49,820 --> 00:40:02,190
question oh yeah so you mentioned having

841
00:39:58,290 --> 00:40:04,700
a Google tag manager and other XSS as a

842
00:40:02,190 --> 00:40:06,960
service how do you deal with that

843
00:40:04,700 --> 00:40:09,720
that's an accent question so especially

844
00:40:06,960 --> 00:40:12,990
Google tag manager I saw a lot of people

845
00:40:09,720 --> 00:40:15,209
whitelist see the origin hpsp pacman.com

846
00:40:12,990 --> 00:40:17,549
which is super bad because I think

847
00:40:15,210 --> 00:40:18,660
nobody really understands that and me as

848
00:40:17,550 --> 00:40:21,200
the attacker I could just upload my

849
00:40:18,660 --> 00:40:23,370
scripts in host them so in this case

850
00:40:21,200 --> 00:40:24,450
assuming that you don't have any open

851
00:40:23,370 --> 00:40:26,759
redirects in any of your other

852
00:40:24,450 --> 00:40:30,060
whitelisted sources you could whitelist

853
00:40:26,760 --> 00:40:32,070
the entire URL right when you've got

854
00:40:30,060 --> 00:40:34,980
redirects and there's issues about CSP

855
00:40:32,070 --> 00:40:37,050
and privacy but so unless if you don't

856
00:40:34,980 --> 00:40:40,290
have that then you should be fine with

857
00:40:37,050 --> 00:40:42,090
explicitly why deceive URL or not

858
00:40:40,290 --> 00:40:44,759
relying to be tag manager yeah but you

859
00:40:42,090 --> 00:40:47,760
also need to do unsafe inline for the

860
00:40:44,760 --> 00:40:49,350
injection so your that is the second

861
00:40:47,760 --> 00:40:52,290
answer to my question so don't use

862
00:40:49,350 --> 00:41:01,560
Google Docs if you don't quote me on

863
00:40:52,290 --> 00:41:03,509
that so one of the problems I've come

864
00:41:01,560 --> 00:41:04,830
across trying to put CSP things and

865
00:41:03,510 --> 00:41:06,030
obviously you mentioned my inline is

866
00:41:04,830 --> 00:41:08,430
something you want to do and you want to

867
00:41:06,030 --> 00:41:10,320
put a nonce on that where possible now I

868
00:41:08,430 --> 00:41:12,149
I don't have a huge amount experience

869
00:41:10,320 --> 00:41:14,010
with WordPress but a friend of mine site

870
00:41:12,150 --> 00:41:16,560
go out here and name wanted me to fix

871
00:41:14,010 --> 00:41:18,630
out for him a lot of frameworks it seems

872
00:41:16,560 --> 00:41:19,200
to not allow you the easy way of putting

873
00:41:18,630 --> 00:41:20,580
in a nonce

874
00:41:19,200 --> 00:41:23,370
because that has to be put in on

875
00:41:20,580 --> 00:41:24,930
server-side that has to be put in that

876
00:41:23,370 --> 00:41:26,970
so that matches in the header and what

877
00:41:24,930 --> 00:41:29,549
gets put in turn HTML now especially in

878
00:41:26,970 --> 00:41:31,529
WordPress I'm assuming that this

879
00:41:29,550 --> 00:41:34,200
attacker mashed again put a script in

880
00:41:31,530 --> 00:41:35,550
WordPress plug-in blah blah blah that

881
00:41:34,200 --> 00:41:37,799
WordPress plug-in would have access to

882
00:41:35,550 --> 00:41:39,720
that nonce if the WordPress was adding

883
00:41:37,800 --> 00:41:41,550
in the nonce so that mitigates that

884
00:41:39,720 --> 00:41:44,279
entirely even if I did put in a nonce

885
00:41:41,550 --> 00:41:46,710
but I can't even get a nonce in and I

886
00:41:44,280 --> 00:41:48,780
mean so I think that's probably one of

887
00:41:46,710 --> 00:41:51,000
the problems we see a lot is how even if

888
00:41:48,780 --> 00:41:52,680
we can use these nonces it's a big

889
00:41:51,000 --> 00:41:55,590
technical implementation unless you've

890
00:41:52,680 --> 00:41:57,419
got a custom if your custom Lee writing

891
00:41:55,590 --> 00:41:59,250
your website and you have your own

892
00:41:57,420 --> 00:42:01,230
server and you're writing how it serves

893
00:41:59,250 --> 00:42:02,910
it that's really easy implement a nonce

894
00:42:01,230 --> 00:42:06,040
but a frameworks when I do that

895
00:42:02,910 --> 00:42:07,660
that's that's an excellent point I think

896
00:42:06,040 --> 00:42:09,009
it also echos I saw some people from

897
00:42:07,660 --> 00:42:11,740
from Team LA and I think they they are

898
00:42:09,010 --> 00:42:13,840
thinking about adopting CSP in somewhat

899
00:42:11,740 --> 00:42:16,450
strict CSV for like when they deploy

900
00:42:13,840 --> 00:42:18,280
dunno but ran into similar issue threat

901
00:42:16,450 --> 00:42:19,839
because in these cases you even if like

902
00:42:18,280 --> 00:42:22,600
that the main contributor WordPress

903
00:42:19,840 --> 00:42:23,860
wants to enable CSP you have third

904
00:42:22,600 --> 00:42:25,480
parties which are the plugins in this

905
00:42:23,860 --> 00:42:27,340
case which is true you open and it's the

906
00:42:25,480 --> 00:42:29,530
same for for the JavaScript web as well

907
00:42:27,340 --> 00:42:31,930
and because you have Google tag manager

908
00:42:29,530 --> 00:42:34,150
that uses document write or HTML or eval

909
00:42:31,930 --> 00:42:37,200
and other other things as well so this

910
00:42:34,150 --> 00:42:37,200
is an excellent point Vicki

911
00:42:37,300 --> 00:42:40,499
[Music]

912
00:42:40,570 --> 00:42:48,660
do you think scripts or Salim will

913
00:42:43,780 --> 00:42:53,380
prevent you know event handler issue so

914
00:42:48,660 --> 00:42:55,328
essentially he still would have to have

915
00:42:53,380 --> 00:42:57,579
event handler but you cannot nonce

916
00:42:55,329 --> 00:43:00,670
elements I think that's always going to

917
00:42:57,579 --> 00:43:02,260
go down to the to the issue and so what

918
00:43:00,670 --> 00:43:04,030
we've seen and the vast amount of

919
00:43:02,260 --> 00:43:05,859
experiments just recently there were

920
00:43:04,030 --> 00:43:07,650
sites that had when just trawling the

921
00:43:05,859 --> 00:43:10,710
start page three thousand different

922
00:43:07,650 --> 00:43:13,450
hashes that you need for event handlers

923
00:43:10,710 --> 00:43:15,160
that was based on bad program excel

924
00:43:13,450 --> 00:43:16,810
anyways but you'd have to first kind of

925
00:43:15,160 --> 00:43:18,549
figure out a way to make a handler

926
00:43:16,810 --> 00:43:20,619
generic enough to fit for an individual

927
00:43:18,550 --> 00:43:23,200
element and then also think chrome now

928
00:43:20,619 --> 00:43:25,500
has this unsaved hashed attributes but

929
00:43:23,200 --> 00:43:29,109
you can't explicitly say yes I allow and

930
00:43:25,500 --> 00:43:32,290
hashed script to be attached to this

931
00:43:29,109 --> 00:43:33,700
also some attribute because there is a

932
00:43:32,290 --> 00:43:35,710
bit of danger because you can manipulate

933
00:43:33,700 --> 00:43:37,328
like if you have a specific element and

934
00:43:35,710 --> 00:43:39,520
you take it event handler that just

935
00:43:37,329 --> 00:43:40,990
evolves I don't know like the content of

936
00:43:39,520 --> 00:43:45,540
the element then your student is the

937
00:43:40,990 --> 00:43:49,240
attacker could use it so there is this I

938
00:43:45,540 --> 00:43:51,460
personally think about maybe against

939
00:43:49,240 --> 00:43:54,879
it's a super personal opinion if we

940
00:43:51,460 --> 00:43:56,980
could nonce other elements in scripts

941
00:43:54,880 --> 00:43:58,810
they would be potential danger for for

942
00:43:56,980 --> 00:44:00,310
stealing nonces but the quest is right

943
00:43:58,810 --> 00:44:02,319
now you can either be totally insecure

944
00:44:00,310 --> 00:44:03,220
because of unsafe inline or you can be

945
00:44:02,319 --> 00:44:04,930
totally secure and break your

946
00:44:03,220 --> 00:44:07,569
application so if we find some middle

947
00:44:04,930 --> 00:44:08,560
ground that would be very useful I have

948
00:44:07,569 --> 00:44:10,660
to think about this a little bit more

949
00:44:08,560 --> 00:44:12,490
and do some tea some experiments but

950
00:44:10,660 --> 00:44:21,339
this might be a possible way to to call

951
00:44:12,490 --> 00:44:24,189
the future do you have ever list or

952
00:44:21,339 --> 00:44:28,000
something for say order of precedence

953
00:44:24,190 --> 00:44:31,079
for all kinds of the headers and all fun

954
00:44:28,000 --> 00:44:34,780
stuff you can do it a well which HTTP

955
00:44:31,079 --> 00:44:37,270
combination I think about is we write I

956
00:44:34,780 --> 00:44:41,140
have the CSP rewrite everything to http

957
00:44:37,270 --> 00:44:46,990
but and you also have HTTP strict

958
00:44:41,140 --> 00:44:49,089
content Transport Security if the

959
00:44:46,990 --> 00:44:50,509
rewrite happens after you just break

960
00:44:49,089 --> 00:44:54,440
your site if it happens

961
00:44:50,510 --> 00:44:56,450
or it would just work but the order of

962
00:44:54,440 --> 00:44:58,700
precedence is is your standard is it

963
00:44:56,450 --> 00:45:00,529
documented somewhere of all those things

964
00:44:58,700 --> 00:45:02,049
combined we did experiment with this if

965
00:45:00,530 --> 00:45:05,150
you want to say something for Firefox

966
00:45:02,050 --> 00:45:07,610
you AR happens before la comics Fantine

967
00:45:05,150 --> 00:45:09,110
right so essentially it's like look at

968
00:45:07,610 --> 00:45:11,480
all the look at the page then if you see

969
00:45:09,110 --> 00:45:14,870
HTP resources try to operate them if you

970
00:45:11,480 --> 00:45:16,850
IRS is there and then you go with the

971
00:45:14,870 --> 00:45:19,790
other death directives and which is also

972
00:45:16,850 --> 00:45:21,770
why if you have a particular request and

973
00:45:19,790 --> 00:45:24,620
block or mixed content the second one is

974
00:45:21,770 --> 00:45:26,150
essentially a no operation because you a

975
00:45:24,620 --> 00:45:27,350
I would try to upgrade it and if it

976
00:45:26,150 --> 00:45:29,030
doesn't work it would not include it and

977
00:45:27,350 --> 00:45:30,350
then rock or mixed content has nothing

978
00:45:29,030 --> 00:45:32,660
to do block anymore because everything

979
00:45:30,350 --> 00:45:34,730
is HTTP ready and so there is this

980
00:45:32,660 --> 00:45:37,970
precedence that firstly we are and then

981
00:45:34,730 --> 00:45:48,410
the evaluation of the policy is that

982
00:45:37,970 --> 00:45:50,089
correct okay so you would block you

983
00:45:48,410 --> 00:45:56,960
would first pull up something even

984
00:45:50,090 --> 00:46:00,500
though it's HSTs yes and then have HSTs

985
00:45:56,960 --> 00:46:02,240
network okay maybe this is sensible but

986
00:46:00,500 --> 00:46:08,960
it's a standard that goes for all

987
00:46:02,240 --> 00:46:10,939
browsers oh yeah this usually the

988
00:46:08,960 --> 00:46:14,330
problem yeah there's our C for that but

989
00:46:10,940 --> 00:46:17,440
yeah then then it then it breaks an

990
00:46:14,330 --> 00:46:17,440
apple browser or something

991
00:46:17,620 --> 00:46:23,870
yeah well the video Firefox is awesome I

992
00:46:20,630 --> 00:46:25,290
know I wish everybody would use it's

993
00:46:23,870 --> 00:46:27,580
both yes

994
00:46:25,290 --> 00:46:30,739
all right thank you

995
00:46:27,580 --> 00:46:30,739
[Applause]

