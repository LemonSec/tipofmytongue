1
00:00:00,530 --> 00:00:02,590
you

2
00:00:03,110 --> 00:00:09,090
whoo I don't thank you very much let us

3
00:00:06,780 --> 00:00:16,230
start by seeing some hands who of you

4
00:00:09,090 --> 00:00:17,610
knows or some yeah about everybody who

5
00:00:16,230 --> 00:00:22,050
thinks that I should be saying Sam

6
00:00:17,610 --> 00:00:26,160
instead of some ah really but you do

7
00:00:22,050 --> 00:00:28,890
yeah you're Americans or Sam's better

8
00:00:26,160 --> 00:00:33,660
yeah it's more natural perhaps okay all

9
00:00:28,890 --> 00:00:36,300
right I try to think of that but in this

10
00:00:33,660 --> 00:00:39,239
talk I'd like to discuss the work that

11
00:00:36,300 --> 00:00:42,449
we've done to extend some which is as

12
00:00:39,240 --> 00:00:44,010
you know a framework of activities with

13
00:00:42,450 --> 00:00:45,900
which you can set up screw self

14
00:00:44,010 --> 00:00:53,040
development and grow from there

15
00:00:45,900 --> 00:00:56,760
to make it work for agile and let me

16
00:00:53,040 --> 00:00:59,160
start by introducing myself so I'm

17
00:00:56,760 --> 00:01:01,110
hopeful no fear I lead to security

18
00:00:59,160 --> 00:01:03,569
privacy practice at software improvement

19
00:01:01,110 --> 00:01:07,130
group sng the ones on the lanyards and

20
00:01:03,570 --> 00:01:10,280
in the expo space we're concurring

21
00:01:07,130 --> 00:01:12,300
reoccurring sponsors of this event and

22
00:01:10,280 --> 00:01:14,520
for large part of my career I've been

23
00:01:12,300 --> 00:01:16,140
building software been a software

24
00:01:14,520 --> 00:01:17,940
entrepreneur and I made a lot of

25
00:01:16,140 --> 00:01:19,920
mistakes and I learn a lot of things and

26
00:01:17,940 --> 00:01:22,110
I'm dispensing the things that I learned

27
00:01:19,920 --> 00:01:25,560
as a consultant for sofa improvement

28
00:01:22,110 --> 00:01:28,740
group what we do is we measure software

29
00:01:25,560 --> 00:01:30,330
quality we advise on software quality we

30
00:01:28,740 --> 00:01:32,100
have a laboratory for it

31
00:01:30,330 --> 00:01:33,960
we have consultants for this we make

32
00:01:32,100 --> 00:01:35,940
software quality including security and

33
00:01:33,960 --> 00:01:40,259
privacy you can make it visible and help

34
00:01:35,940 --> 00:01:43,800
clients to get software right we also

35
00:01:40,260 --> 00:01:46,290
like to share our knowledge we do a lot

36
00:01:43,800 --> 00:01:48,810
of research a lot of collaborations a

37
00:01:46,290 --> 00:01:50,460
lot of involvement in standards for

38
00:01:48,810 --> 00:01:53,490
example for the European Commission

39
00:01:50,460 --> 00:01:54,630
we're now working on how European

40
00:01:53,490 --> 00:01:57,479
Commission and aneisa

41
00:01:54,630 --> 00:01:59,520
can build cybersecurity certification

42
00:01:57,479 --> 00:02:02,450
schemes and how they can help harmonize

43
00:01:59,520 --> 00:02:05,250
existing standards quite a challenge

44
00:02:02,450 --> 00:02:08,009
working with I Triple E on privacy

45
00:02:05,250 --> 00:02:11,249
working with the Dutch CIP also on

46
00:02:08,008 --> 00:02:13,799
security by design and privacy and we're

47
00:02:11,249 --> 00:02:16,170
working with some

48
00:02:13,800 --> 00:02:18,690
which brings me nicely to the topic of

49
00:02:16,170 --> 00:02:21,390
this talk here on a picture you see our

50
00:02:18,690 --> 00:02:23,550
headquarters it's in Amsterdam it's it's

51
00:02:21,390 --> 00:02:29,459
almost a stone's throw away if you're a

52
00:02:23,550 --> 00:02:31,200
really good thrower by the way so a long

53
00:02:29,460 --> 00:02:33,030
time ago when I started doing talks on

54
00:02:31,200 --> 00:02:35,130
software engineer I will be using a

55
00:02:33,030 --> 00:02:36,810
diagram like this you know with the

56
00:02:35,130 --> 00:02:38,430
requirements and the design and the

57
00:02:36,810 --> 00:02:41,520
development and I would discuss these

58
00:02:38,430 --> 00:02:43,800
individual activities but there's a

59
00:02:41,520 --> 00:02:47,850
problem there because at some point in

60
00:02:43,800 --> 00:02:49,920
time I was getting this angry people he

61
00:02:47,850 --> 00:02:52,859
goes apparently that's not agile right

62
00:02:49,920 --> 00:02:55,559
and I wanted to explain that yeah but

63
00:02:52,860 --> 00:02:58,290
even in agile you have some form of

64
00:02:55,560 --> 00:03:00,300
these activities and talking about these

65
00:02:58,290 --> 00:03:02,910
activities is still relevant right but

66
00:03:00,300 --> 00:03:06,600
just to avoid that silly argument I did

67
00:03:02,910 --> 00:03:10,079
I did this I added this circle and it

68
00:03:06,600 --> 00:03:11,760
got rid of that so cool but there was

69
00:03:10,080 --> 00:03:14,640
another problem this was totally not

70
00:03:11,760 --> 00:03:16,380
DevOps and this was not just people

71
00:03:14,640 --> 00:03:18,359
saying you should change that visual

72
00:03:16,380 --> 00:03:19,799
were people saying everything you were

73
00:03:18,360 --> 00:03:21,780
saying about software engineering does

74
00:03:19,800 --> 00:03:24,000
not apply and it's a blatant lie and

75
00:03:21,780 --> 00:03:27,720
it's it's totally incorrect right it was

76
00:03:24,000 --> 00:03:29,550
really emotional if you will so I

77
00:03:27,720 --> 00:03:33,120
started to visualize software

78
00:03:29,550 --> 00:03:36,480
engineering as what mostly basically is

79
00:03:33,120 --> 00:03:38,850
it's a mix of activities that are not in

80
00:03:36,480 --> 00:03:42,200
phases but sometimes they are right but

81
00:03:38,850 --> 00:03:45,600
let's let's just forget that nuance and

82
00:03:42,200 --> 00:03:48,649
I'll show it like this but of course it

83
00:03:45,600 --> 00:03:51,660
turns out that waterfall is not dead

84
00:03:48,650 --> 00:03:54,270
and I get I think I'm listening to my

85
00:03:51,660 --> 00:03:56,940
audience too much perhaps so I decided

86
00:03:54,270 --> 00:04:01,020
to stick with this because if I would go

87
00:03:56,940 --> 00:04:02,970
further I would be using this the

88
00:04:01,020 --> 00:04:05,220
politically correct secure soulful

89
00:04:02,970 --> 00:04:07,590
development lifecycle and it's not what

90
00:04:05,220 --> 00:04:09,120
we want we want to keep it simple and we

91
00:04:07,590 --> 00:04:11,700
want to use a structure with which we

92
00:04:09,120 --> 00:04:12,959
describe activities but because we have

93
00:04:11,700 --> 00:04:15,238
this structure it doesn't mean that

94
00:04:12,959 --> 00:04:18,450
every activity should be a separate

95
00:04:15,239 --> 00:04:21,470
phase right and the same goes for some

96
00:04:18,450 --> 00:04:21,469
Sam sir

97
00:04:24,780 --> 00:04:30,609
well Sam is Sam is a flagship almost

98
00:04:28,120 --> 00:04:32,289
project it describes activities

99
00:04:30,610 --> 00:04:35,620
according to business functions

100
00:04:32,289 --> 00:04:37,570
it describes maturity very important so

101
00:04:35,620 --> 00:04:41,259
you can start really easy with every

102
00:04:37,570 --> 00:04:44,020
activity and then build from that now

103
00:04:41,259 --> 00:04:46,120
the thing with some Sam sorry I'm gonna

104
00:04:44,020 --> 00:04:50,948
do that a hundred times but it's a good

105
00:04:46,120 --> 00:04:55,590
way to practice it it's it's a process

106
00:04:50,949 --> 00:04:59,590
agnostic right so it doesn't describe

107
00:04:55,590 --> 00:05:01,030
how you apply it in a jar in Kanban or

108
00:04:59,590 --> 00:05:02,799
in a waterfall because it wants to

109
00:05:01,030 --> 00:05:06,099
provide a generic model and talk about

110
00:05:02,800 --> 00:05:07,840
the activities so what you would get is

111
00:05:06,099 --> 00:05:10,090
of course angry people saying this is

112
00:05:07,840 --> 00:05:12,580
not agile and they have a valid point

113
00:05:10,090 --> 00:05:15,549
because it turns out to be not really

114
00:05:12,580 --> 00:05:18,219
easy and to find out how you make agile

115
00:05:15,550 --> 00:05:22,500
successful how you make security

116
00:05:18,220 --> 00:05:22,500
successful in an agile environment

117
00:05:23,400 --> 00:05:29,138
because what is the challenge here the

118
00:05:26,889 --> 00:05:32,380
challenge is that all these activities

119
00:05:29,139 --> 00:05:34,539
you need to squeeze into sprint because

120
00:05:32,380 --> 00:05:36,969
at the end of the Sprint you want to

121
00:05:34,539 --> 00:05:39,400
have had security building and you want

122
00:05:36,970 --> 00:05:41,470
to ideally be able to release the

123
00:05:39,400 --> 00:05:45,609
software and this is this is where the

124
00:05:41,470 --> 00:05:48,580
challenge is so brief one-on-one on

125
00:05:45,610 --> 00:05:52,120
agile taking the popular scrum method as

126
00:05:48,580 --> 00:05:54,490
an example here you're doing sprints so

127
00:05:52,120 --> 00:05:56,470
you're doing iterative release and

128
00:05:54,490 --> 00:05:58,900
building of software in three weeks two

129
00:05:56,470 --> 00:06:01,810
weeks one month typically with the team

130
00:05:58,900 --> 00:06:04,388
of typically 8 to 10 people of builders

131
00:06:01,810 --> 00:06:06,970
and testers you're preparing your work

132
00:06:04,389 --> 00:06:09,490
in a backlog you're planning your work

133
00:06:06,970 --> 00:06:11,080
to be done in a sprint resulting in a

134
00:06:09,490 --> 00:06:13,389
sprint backlog so your planning and

135
00:06:11,080 --> 00:06:15,039
preparing security and you're

136
00:06:13,389 --> 00:06:17,919
implementing security during the sprint

137
00:06:15,039 --> 00:06:19,389
leading to a shippable product and also

138
00:06:17,919 --> 00:06:21,280
you have daily scrums and you have

139
00:06:19,389 --> 00:06:23,650
stories and you have definitions have

140
00:06:21,280 --> 00:06:27,940
done you have acceptance criteria all

141
00:06:23,650 --> 00:06:31,060
these these typical agile scrum elements

142
00:06:27,940 --> 00:06:33,130
and process elements and and and

143
00:06:31,060 --> 00:06:34,889
artifacts if you are you want to know

144
00:06:33,130 --> 00:06:37,800
what to do with those if

145
00:06:34,889 --> 00:06:40,319
want to build security and and what you

146
00:06:37,800 --> 00:06:44,729
can do is then you look it up so you can

147
00:06:40,319 --> 00:06:46,830
Google but you get a lot of varying best

148
00:06:44,729 --> 00:06:49,680
practices on how you make it happen a

149
00:06:46,830 --> 00:06:52,198
lot of experts really different opinion

150
00:06:49,680 --> 00:06:54,990
how you make it happen and this is I

151
00:06:52,199 --> 00:06:58,590
think by far the most comprehensive book

152
00:06:54,990 --> 00:07:00,029
on agile software security and it says I

153
00:06:58,590 --> 00:07:01,529
quote tracking and dealing with

154
00:07:00,029 --> 00:07:04,050
non-functional requirements live

155
00:07:01,529 --> 00:07:07,139
security and reliability is an unsolved

156
00:07:04,050 --> 00:07:09,300
problem in agile development this is I

157
00:07:07,139 --> 00:07:12,000
think quite quite shocking but also

158
00:07:09,300 --> 00:07:13,319
quite honest right this book didn't

159
00:07:12,000 --> 00:07:17,699
decide so this is the way that you

160
00:07:13,319 --> 00:07:20,189
should do it but it's it just listed all

161
00:07:17,699 --> 00:07:22,169
the different opinions on how to do it

162
00:07:20,189 --> 00:07:26,759
including best practices and including

163
00:07:22,169 --> 00:07:29,969
pitfalls also what we've done just to

164
00:07:26,759 --> 00:07:31,740
illustrate the problems in practice I

165
00:07:29,969 --> 00:07:34,699
took out some customer quotes and real

166
00:07:31,740 --> 00:07:38,969
customer quotes of clients of ours about

167
00:07:34,699 --> 00:07:41,789
agile security first this is a typical

168
00:07:38,969 --> 00:07:44,699
one we need to show nice features every

169
00:07:41,789 --> 00:07:47,909
demo so there's no priority for security

170
00:07:44,699 --> 00:07:50,250
in a typical agile situation in scrum

171
00:07:47,909 --> 00:07:53,639
for example you have the process element

172
00:07:50,250 --> 00:07:56,460
of doing a sprint demo so the idea is

173
00:07:53,639 --> 00:07:58,740
that you show the functions to the

174
00:07:56,460 --> 00:08:01,349
business and just to show we've done

175
00:07:58,740 --> 00:08:04,860
this and then are you happy and get get

176
00:08:01,349 --> 00:08:06,930
the feedback the tendency is to focus

177
00:08:04,860 --> 00:08:08,969
very much on the features and that the

178
00:08:06,930 --> 00:08:11,339
non-functional so things like security

179
00:08:08,969 --> 00:08:14,310
reliability are not mentioned and the

180
00:08:11,339 --> 00:08:16,349
best practice is just to involve them in

181
00:08:14,310 --> 00:08:17,639
your story to explain to the business

182
00:08:16,349 --> 00:08:19,860
what you've done to make the system

183
00:08:17,639 --> 00:08:22,469
secure so that they realize huh this is

184
00:08:19,860 --> 00:08:25,050
quite good and you in such a demo

185
00:08:22,469 --> 00:08:27,240
session you can make it really something

186
00:08:25,050 --> 00:08:29,939
alive like using some examples of

187
00:08:27,240 --> 00:08:31,800
incidents that that have happened to be

188
00:08:29,939 --> 00:08:34,070
really clear about how important few

189
00:08:31,800 --> 00:08:36,469
tiers

190
00:08:34,070 --> 00:08:38,630
we do security in separate Sprint's

191
00:08:36,469 --> 00:08:40,610
because we cannot fit security in every

192
00:08:38,630 --> 00:08:43,429
sprint and this is something that I

193
00:08:40,610 --> 00:08:45,920
understand why it it comes into

194
00:08:43,429 --> 00:08:48,469
existence but the problem is you can do

195
00:08:45,920 --> 00:08:50,990
this for some verification focus that in

196
00:08:48,470 --> 00:08:53,300
certain Sprint's but you cannot skip

197
00:08:50,990 --> 00:08:54,980
building in security until some other

198
00:08:53,300 --> 00:08:57,410
sprint because you'll be doing a lot of

199
00:08:54,980 --> 00:09:01,610
rework you need to find a way to include

200
00:08:57,410 --> 00:09:03,949
building in security in every sprint we

201
00:09:01,610 --> 00:09:05,870
have a wiki with 400 rules and we'll see

202
00:09:03,949 --> 00:09:08,479
results at the next been test in six

203
00:09:05,870 --> 00:09:10,519
months this happens a lot so people do a

204
00:09:08,480 --> 00:09:13,209
lot of good work so you know to collect

205
00:09:10,519 --> 00:09:16,360
all the coding guidelines and all the

206
00:09:13,209 --> 00:09:19,069
ACS and all the mobile ace vs etc etc

207
00:09:16,360 --> 00:09:21,500
rules and somehow they need to transfer

208
00:09:19,069 --> 00:09:23,660
it to the teams and one way to do this

209
00:09:21,500 --> 00:09:25,790
is to put it on a wiki another way to do

210
00:09:23,660 --> 00:09:29,389
is is to do the training but in the end

211
00:09:25,790 --> 00:09:31,610
people cannot remember and totally apply

212
00:09:29,389 --> 00:09:33,410
all the time these these 400 rules just

213
00:09:31,610 --> 00:09:36,110
doesn't work so you have to find another

214
00:09:33,410 --> 00:09:38,630
way and there's a good way and I have an

215
00:09:36,110 --> 00:09:42,170
example of how you can make it happen in

216
00:09:38,630 --> 00:09:44,480
agile and also this pen test in six

217
00:09:42,170 --> 00:09:45,920
months is way too long a feedback cycle

218
00:09:44,480 --> 00:09:50,089
of course you want to have feedback

219
00:09:45,920 --> 00:09:52,430
almost every sprint then this one rerun

220
00:09:50,089 --> 00:09:54,529
this tool every sprint and voila we are

221
00:09:52,430 --> 00:09:56,479
secure so this is based on the idea that

222
00:09:54,529 --> 00:09:57,740
you you have to automate your

223
00:09:56,480 --> 00:09:59,449
verification you have to automate your

224
00:09:57,740 --> 00:10:01,490
testing and that's the very good

225
00:09:59,449 --> 00:10:03,800
practice to strive for but you also have

226
00:10:01,490 --> 00:10:06,319
to realize that some of the issues in

227
00:10:03,800 --> 00:10:09,500
software you just cannot detect using

228
00:10:06,319 --> 00:10:12,110
tools you just cannot have to do manual

229
00:10:09,500 --> 00:10:15,500
reviews of your design of your code you

230
00:10:12,110 --> 00:10:18,199
have to do yeah things that only experts

231
00:10:15,500 --> 00:10:21,620
can do so you have to find a way to make

232
00:10:18,199 --> 00:10:25,939
them really fast and I'll have more on

233
00:10:21,620 --> 00:10:27,620
that later and finally we've made John

234
00:10:25,939 --> 00:10:30,259
responsible for securities and now it's

235
00:10:27,620 --> 00:10:33,139
no longer my problem so you probably

236
00:10:30,259 --> 00:10:35,019
recognize this this is what this

237
00:10:33,139 --> 00:10:37,519
practice is based on the idea of

238
00:10:35,019 --> 00:10:39,380
appointing someone who has a certain

239
00:10:37,519 --> 00:10:41,600
responsibility in a team regarding

240
00:10:39,380 --> 00:10:43,970
security and that's fine as long as

241
00:10:41,600 --> 00:10:46,040
everybody else feels the responsibility

242
00:10:43,970 --> 00:10:47,810
as well the responsibility for this

243
00:10:46,040 --> 00:10:50,719
champion person

244
00:10:47,810 --> 00:10:52,310
is ideally the role of a liaison so

245
00:10:50,720 --> 00:10:53,930
somebody who takes and the

246
00:10:52,310 --> 00:10:56,660
responsibility of bringing people

247
00:10:53,930 --> 00:10:58,189
together and sharing knowledge but it's

248
00:10:56,660 --> 00:11:00,459
not the person that needs to take care

249
00:10:58,190 --> 00:11:03,170
of security and it's not the person that

250
00:11:00,460 --> 00:11:05,060
will be responsible at the moment that

251
00:11:03,170 --> 00:11:08,270
there's there are some security incident

252
00:11:05,060 --> 00:11:10,910
so there's also demonstration of what a

253
00:11:08,270 --> 00:11:15,529
pitfall is and we've collected a lot of

254
00:11:10,910 --> 00:11:17,270
these pitfalls in the agile notes which

255
00:11:15,529 --> 00:11:22,610
brings me to the Attell notes the Sam

256
00:11:17,270 --> 00:11:25,600
and John Oates it's work that we've done

257
00:11:22,610 --> 00:11:28,850
in collecting best practices and

258
00:11:25,600 --> 00:11:31,700
pitfalls from practice and from

259
00:11:28,850 --> 00:11:33,800
literature so I see a lot of development

260
00:11:31,700 --> 00:11:35,210
teams and my colleagues see a lot of

261
00:11:33,800 --> 00:11:37,760
development teams my peers in the

262
00:11:35,210 --> 00:11:39,440
industry see a lot I work with a number

263
00:11:37,760 --> 00:11:41,450
of them that interviews good

264
00:11:39,440 --> 00:11:43,880
observations and notably I work with

265
00:11:41,450 --> 00:11:46,220
Michael who's sitting right here who

266
00:11:43,880 --> 00:11:49,550
works for centric who's involved at

267
00:11:46,220 --> 00:11:50,990
centric and he is implementing security

268
00:11:49,550 --> 00:11:53,030
is making sure that it happens there and

269
00:11:50,990 --> 00:11:54,920
the many development teams that they

270
00:11:53,030 --> 00:11:57,860
have there's it's very useful input from

271
00:11:54,920 --> 00:12:02,060
you Michael I work with the Sam work

272
00:11:57,860 --> 00:12:03,890
group and I work with a work group from

273
00:12:02,060 --> 00:12:05,989
CIPA and this is how this got initiated

274
00:12:03,890 --> 00:12:08,990
initiated it's a bit of a Side Story but

275
00:12:05,990 --> 00:12:14,900
I think it's it's an important one

276
00:12:08,990 --> 00:12:17,089
it's April 2018 and I'm part of a

277
00:12:14,900 --> 00:12:19,900
working group at CIP which is the Dutch

278
00:12:17,089 --> 00:12:23,089
organization that creates pragmatic

279
00:12:19,900 --> 00:12:25,189
guidelines and standards if you will to

280
00:12:23,089 --> 00:12:28,880
eight mainly government organisations in

281
00:12:25,190 --> 00:12:32,450
in security and our assignment was to

282
00:12:28,880 --> 00:12:35,150
write guidance on agile software

283
00:12:32,450 --> 00:12:37,190
security and some work already had been

284
00:12:35,150 --> 00:12:40,040
done and I looked at it and it was well

285
00:12:37,190 --> 00:12:41,870
mainly describing the things that have

286
00:12:40,040 --> 00:12:46,189
been described so many times especially

287
00:12:41,870 --> 00:12:48,200
by by Sam and I I managed to convince

288
00:12:46,190 --> 00:12:51,740
them that this was not a good idea and

289
00:12:48,200 --> 00:12:53,959
it was better to refer to Sam and then

290
00:12:51,740 --> 00:12:55,760
work on the agile notes work on the

291
00:12:53,959 --> 00:12:59,630
things that are particularly agile and

292
00:12:55,760 --> 00:13:01,329
add those to Sam not integrated into Sam

293
00:12:59,630 --> 00:13:03,639
but provided as notes

294
00:13:01,329 --> 00:13:05,589
you can put at the different topics

295
00:13:03,639 --> 00:13:08,860
whenever they're irrelevant so it's easy

296
00:13:05,589 --> 00:13:14,679
to create a publication that contains

297
00:13:08,860 --> 00:13:17,619
the Sam activities and the agile notes

298
00:13:14,679 --> 00:13:19,779
together with them but also you can do

299
00:13:17,619 --> 00:13:22,689
other horizontal versions of Sam by

300
00:13:19,779 --> 00:13:24,160
creating a version of Sam that has the

301
00:13:22,689 --> 00:13:27,459
same activities and then for example

302
00:13:24,160 --> 00:13:31,059
Kanban or DevOps additions so you can

303
00:13:27,459 --> 00:13:37,569
make a process specific versions of Sam

304
00:13:31,059 --> 00:13:40,299
using this approach and you see sort

305
00:13:37,569 --> 00:13:46,719
sort of a zoomed out view of how the

306
00:13:40,299 --> 00:13:50,350
agile nodes currently are if you look at

307
00:13:46,720 --> 00:13:52,179
the notes there are some main principles

308
00:13:50,350 --> 00:13:55,569
behind it there's no time of course to

309
00:13:52,179 --> 00:13:58,720
go through all of them I'll have one or

310
00:13:55,569 --> 00:14:01,420
two examples in this in this talk but it

311
00:13:58,720 --> 00:14:03,360
mainly is about the cup couple

312
00:14:01,420 --> 00:14:06,429
principles and the first one is

313
00:14:03,360 --> 00:14:09,519
continuous collaboration between death

314
00:14:06,429 --> 00:14:13,929
between test ops security and collective

315
00:14:09,519 --> 00:14:16,119
ownership the collaboration is essential

316
00:14:13,929 --> 00:14:18,610
because there is no time in a sprint to

317
00:14:16,119 --> 00:14:20,679
create software and then send it over to

318
00:14:18,610 --> 00:14:23,739
the security department to test it right

319
00:14:20,679 --> 00:14:26,230
you need some collaboration continuous

320
00:14:23,739 --> 00:14:30,189
collaboration and the security team

321
00:14:26,230 --> 00:14:32,589
becomes if they were not already working

322
00:14:30,189 --> 00:14:36,819
that way much more in a enabling and

323
00:14:32,589 --> 00:14:38,499
supporting role collective ownership is

324
00:14:36,819 --> 00:14:40,059
the same ownership should be with

325
00:14:38,499 --> 00:14:42,429
security team should be with the

326
00:14:40,059 --> 00:14:45,368
developers but also with the product

327
00:14:42,429 --> 00:14:49,179
owner who should see really security as

328
00:14:45,369 --> 00:14:51,249
a business value of course automating

329
00:14:49,179 --> 00:14:53,619
verification automating your tests using

330
00:14:51,249 --> 00:14:55,959
all kinds of tools to Dostal sauce tools

331
00:14:53,619 --> 00:14:59,199
your own integration tests your own

332
00:14:55,959 --> 00:15:01,779
security unit tests as much as possible

333
00:14:59,199 --> 00:15:05,099
and the work that remains the key is to

334
00:15:01,779 --> 00:15:08,889
make that incremental so work like

335
00:15:05,100 --> 00:15:12,220
threat modeling work like code review

336
00:15:08,889 --> 00:15:14,329
work like been testing look closely at

337
00:15:12,220 --> 00:15:16,850
the changes that have been made and for

338
00:15:14,329 --> 00:15:19,279
view this is relatively easy because you

339
00:15:16,850 --> 00:15:21,290
need to look at the deltas right but for

340
00:15:19,279 --> 00:15:24,079
a pen testing you need to think more

341
00:15:21,290 --> 00:15:25,759
about what behavior of the system could

342
00:15:24,079 --> 00:15:29,839
have changed and then we'll focus our

343
00:15:25,759 --> 00:15:33,049
tests on that of course you want to if

344
00:15:29,839 --> 00:15:37,339
you do is repeatedly make this to see if

345
00:15:33,049 --> 00:15:39,319
you can automate it as well and then a

346
00:15:37,339 --> 00:15:42,139
very important one is to minimize the

347
00:15:39,319 --> 00:15:44,089
repeated work by experts and not saying

348
00:15:42,139 --> 00:15:47,420
you have to ditch your security experts

349
00:15:44,089 --> 00:15:49,040
now the key is to make sure that you're

350
00:15:47,420 --> 00:15:51,949
not relying on their expertise

351
00:15:49,040 --> 00:15:54,738
constantly because their expertise is in

352
00:15:51,949 --> 00:15:57,349
scarce right you probably know the

353
00:15:54,739 --> 00:16:00,949
stories of one security professional for

354
00:15:57,350 --> 00:16:03,980
every 50 developers you do not want

355
00:16:00,949 --> 00:16:08,209
these guys and girls to to burn out and

356
00:16:03,980 --> 00:16:10,730
of course expert work takes time

357
00:16:08,209 --> 00:16:12,469
you cannot analyze every change that you

358
00:16:10,730 --> 00:16:15,290
want to make on your system you want

359
00:16:12,470 --> 00:16:17,989
death some process that's faster than

360
00:16:15,290 --> 00:16:19,339
that and of course experts even if

361
00:16:17,989 --> 00:16:21,069
they're experts they can also make

362
00:16:19,339 --> 00:16:23,779
mistakes so the key is to minimize

363
00:16:21,069 --> 00:16:26,449
repeated expert work and can do this for

364
00:16:23,779 --> 00:16:28,850
example by deferring security as much as

365
00:16:26,449 --> 00:16:30,349
possible to the frameworks that you're

366
00:16:28,850 --> 00:16:32,269
using the libraries that you're using so

367
00:16:30,350 --> 00:16:34,009
that a large part of the security

368
00:16:32,269 --> 00:16:37,339
requirements are satisfied by the

369
00:16:34,009 --> 00:16:41,749
technology that you base your work and

370
00:16:37,339 --> 00:16:44,689
to build prepared tests so to build some

371
00:16:41,749 --> 00:16:47,119
of the expertise and ready-made tests

372
00:16:44,689 --> 00:16:49,279
that you can apply in a sprint whenever

373
00:16:47,119 --> 00:16:52,009
it's necessary to do a certain check and

374
00:16:49,279 --> 00:16:54,949
you don't have to invent that at the

375
00:16:52,009 --> 00:16:58,100
moment that you need to apply it the

376
00:16:54,949 --> 00:17:03,139
same goes for instructions and this is

377
00:16:58,100 --> 00:17:06,679
quite important in order for developers

378
00:17:03,139 --> 00:17:08,750
to not require the constant babysitting

379
00:17:06,679 --> 00:17:11,990
by security professionals it's important

380
00:17:08,750 --> 00:17:14,359
to make instructions that they can apply

381
00:17:11,990 --> 00:17:17,089
and and that's the last bullet as

382
00:17:14,359 --> 00:17:19,158
situational as possible so depending on

383
00:17:17,089 --> 00:17:20,809
the type of work that are doing they

384
00:17:19,159 --> 00:17:23,809
should be getting in ready-made

385
00:17:20,809 --> 00:17:25,849
instructions that really help them with

386
00:17:23,809 --> 00:17:28,430
getting their job done for example

387
00:17:25,849 --> 00:17:31,760
they're building a login form

388
00:17:28,430 --> 00:17:33,800
on a website and based on the type of

389
00:17:31,760 --> 00:17:36,260
functions that they're realizing at that

390
00:17:33,800 --> 00:17:38,000
point they are getting ready my tests

391
00:17:36,260 --> 00:17:40,670
and ready-made instructions that are

392
00:17:38,000 --> 00:17:41,990
just for death tasks which prevents a

393
00:17:40,670 --> 00:17:43,940
situation that they have to deal with

394
00:17:41,990 --> 00:17:45,620
hundreds of requirements and figure out

395
00:17:43,940 --> 00:17:47,570
themselves which one of these

396
00:17:45,620 --> 00:17:49,489
requirements are applicable to what

397
00:17:47,570 --> 00:17:52,460
they're building so this is to minimize

398
00:17:49,490 --> 00:17:54,800
the cognitive load because it's undoable

399
00:17:52,460 --> 00:17:56,810
for developers to have continuously

400
00:17:54,800 --> 00:18:03,590
these rules available when they're all

401
00:17:56,810 --> 00:18:06,020
generic I'm calling this situational

402
00:18:03,590 --> 00:18:09,770
approach preferring hardening and

403
00:18:06,020 --> 00:18:12,920
hygiene over analysis let me go into

404
00:18:09,770 --> 00:18:16,430
that so the hygiene approach is based on

405
00:18:12,920 --> 00:18:18,530
if you're gonna eat dinner you first

406
00:18:16,430 --> 00:18:21,650
wash your hands so if you're gonna build

407
00:18:18,530 --> 00:18:23,720
a login form there's a couple of rules

408
00:18:21,650 --> 00:18:27,860
that you need to follow you want to have

409
00:18:23,720 --> 00:18:30,740
all these let's call them trivial parts

410
00:18:27,860 --> 00:18:32,780
of your work prepared in this case

411
00:18:30,740 --> 00:18:34,940
there's an example where there's a

412
00:18:32,780 --> 00:18:36,410
trigger right there's a sort of

413
00:18:34,940 --> 00:18:38,750
criterion for the type of work that

414
00:18:36,410 --> 00:18:41,330
you're doing you're doing authentication

415
00:18:38,750 --> 00:18:44,540
at some point in time there's a login

416
00:18:41,330 --> 00:18:46,280
form and there's a couple of

417
00:18:44,540 --> 00:18:50,480
requirements and tests that are prepared

418
00:18:46,280 --> 00:18:53,330
and in this case I lifted up one example

419
00:18:50,480 --> 00:18:56,600
that is about login forms that have a

420
00:18:53,330 --> 00:18:57,980
reset reset password function what you

421
00:18:56,600 --> 00:19:02,000
want with this function is that you

422
00:18:57,980 --> 00:19:03,650
don't want that people can learn that

423
00:19:02,000 --> 00:19:05,540
somebody has an account on a website

424
00:19:03,650 --> 00:19:08,960
because they can be private information

425
00:19:05,540 --> 00:19:12,409
like for example some some mental clinic

426
00:19:08,960 --> 00:19:14,390
you know any really private information

427
00:19:12,410 --> 00:19:17,450
that the certain person a certain email

428
00:19:14,390 --> 00:19:20,170
address is registered with a certain web

429
00:19:17,450 --> 00:19:22,520
service and resetting passwords

430
00:19:20,170 --> 00:19:26,450
sometimes is a way to find out if

431
00:19:22,520 --> 00:19:31,010
somebody is a member and one clever way

432
00:19:26,450 --> 00:19:32,660
is to do a sort of timing to time how

433
00:19:31,010 --> 00:19:34,010
much time it takes when you enter an

434
00:19:32,660 --> 00:19:36,860
email address and sometimes in some

435
00:19:34,010 --> 00:19:38,210
websites that we've encountered it takes

436
00:19:36,860 --> 00:19:40,189
longer

437
00:19:38,210 --> 00:19:43,549
for somebody to reset the password if

438
00:19:40,190 --> 00:19:46,309
they're already a member of the website

439
00:19:43,549 --> 00:19:49,399
the key the requirement here is think of

440
00:19:46,309 --> 00:19:53,119
making this just take just as much time

441
00:19:49,399 --> 00:19:54,590
when somebody is known or not known this

442
00:19:53,119 --> 00:19:57,709
is something that you have to come up

443
00:19:54,590 --> 00:19:59,570
with if you do not rely on these

444
00:19:57,710 --> 00:20:01,730
ready-made requirements and these

445
00:19:59,570 --> 00:20:03,980
triggers because then you'll be building

446
00:20:01,730 --> 00:20:05,360
something and you have to analyze so you

447
00:20:03,980 --> 00:20:06,769
have to sit together take the

448
00:20:05,360 --> 00:20:07,668
whiteboards have the security

449
00:20:06,769 --> 00:20:09,679
professional there

450
00:20:07,669 --> 00:20:12,350
so the typical threat modeling approach

451
00:20:09,679 --> 00:20:14,749
is what are we doing we're building a

452
00:20:12,350 --> 00:20:18,110
login forum what can go wrong and then

453
00:20:14,749 --> 00:20:20,029
you use your experience to really come

454
00:20:18,110 --> 00:20:21,949
with a list of things that can go wrong

455
00:20:20,029 --> 00:20:24,470
and there are good methods for this that

456
00:20:21,950 --> 00:20:27,289
help you but it's hard for everybody to

457
00:20:24,470 --> 00:20:29,659
be really sharp and have all the things

458
00:20:27,289 --> 00:20:31,580
available that that are required at a

459
00:20:29,659 --> 00:20:33,590
certain point so I'm not saying that

460
00:20:31,580 --> 00:20:36,559
threat modeling because that's what this

461
00:20:33,590 --> 00:20:39,470
is is useless it's very useful

462
00:20:36,559 --> 00:20:42,379
especially on a high level design issue

463
00:20:39,470 --> 00:20:43,999
but for trivial things things that you

464
00:20:42,379 --> 00:20:46,158
know are well-known when the software

465
00:20:43,999 --> 00:20:48,289
engineering you want to have a hygiene

466
00:20:46,159 --> 00:20:53,139
approach because it's much quicker and

467
00:20:48,289 --> 00:20:53,139
it's also much more complete makes sense

468
00:20:54,639 --> 00:20:59,689
okay let's take out an example

469
00:20:57,279 --> 00:21:01,759
requirements flow very important

470
00:20:59,690 --> 00:21:06,649
requirements are basically the things

471
00:21:01,759 --> 00:21:09,470
that you want to have an effect on the

472
00:21:06,649 --> 00:21:11,989
way you work you could see software

473
00:21:09,470 --> 00:21:15,080
secure so for engineering as applying

474
00:21:11,990 --> 00:21:16,850
countermeasures against attacks and

475
00:21:15,080 --> 00:21:19,039
these countermeasures need to be there

476
00:21:16,850 --> 00:21:21,498
and accounts matters countermeasures are

477
00:21:19,039 --> 00:21:23,090
basically the requirement so it starts

478
00:21:21,499 --> 00:21:25,249
with the requirements and the idea is

479
00:21:23,090 --> 00:21:29,269
that before you start building a system

480
00:21:25,249 --> 00:21:31,490
you prepare the set of requirements so

481
00:21:29,269 --> 00:21:33,499
typically as an organization if you have

482
00:21:31,490 --> 00:21:35,179
a certain maturity you already have a

483
00:21:33,499 --> 00:21:36,710
baseline you have a collection of things

484
00:21:35,179 --> 00:21:38,179
that you need to comply with that you

485
00:21:36,710 --> 00:21:40,580
regard as important in software

486
00:21:38,179 --> 00:21:45,019
engineering so the way you prepare this

487
00:21:40,580 --> 00:21:47,210
is as is this part of those requirements

488
00:21:45,019 --> 00:21:48,649
are not applicable to developers so you

489
00:21:47,210 --> 00:21:50,840
rule those out you have to do something

490
00:21:48,649 --> 00:21:51,629
with them of course but you shouldn't

491
00:21:50,840 --> 00:21:57,030
bother develop

492
00:21:51,630 --> 00:22:00,300
with also part of these requirements are

493
00:21:57,030 --> 00:22:01,800
not applicable for a system because the

494
00:22:00,300 --> 00:22:03,510
way it's being applied because of the

495
00:22:01,800 --> 00:22:06,960
context you can do some risk analysis

496
00:22:03,510 --> 00:22:10,470
there and you can then for example

497
00:22:06,960 --> 00:22:12,630
accept number of risks which which is a

498
00:22:10,470 --> 00:22:14,190
way to drop a set of requirements but of

499
00:22:12,630 --> 00:22:16,770
course you need to record this right you

500
00:22:14,190 --> 00:22:20,520
need to record the risk that you are

501
00:22:16,770 --> 00:22:22,290
accepting hopefully a large part of the

502
00:22:20,520 --> 00:22:25,050
requirements can be taken care of by

503
00:22:22,290 --> 00:22:27,800
your framework by the technology that

504
00:22:25,050 --> 00:22:31,110
you're using and then there is a set of

505
00:22:27,800 --> 00:22:33,600
what we call story specific requirements

506
00:22:31,110 --> 00:22:35,219
these are requirements that depend on

507
00:22:33,600 --> 00:22:39,929
the type of work that you're doing like

508
00:22:35,220 --> 00:22:43,470
building a log in forum or realizing a

509
00:22:39,930 --> 00:22:45,210
session mechanism and there are rules if

510
00:22:43,470 --> 00:22:46,140
you're building specific trivia

511
00:22:45,210 --> 00:22:48,000
functions like that

512
00:22:46,140 --> 00:22:53,460
and we call those rules we call those

513
00:22:48,000 --> 00:22:57,030
triggers so see this works yes so here

514
00:22:53,460 --> 00:22:58,800
you see the triggers so the types of

515
00:22:57,030 --> 00:23:00,990
things that you're building and then the

516
00:22:58,800 --> 00:23:04,020
requirements that you need for that

517
00:23:00,990 --> 00:23:06,270
specific type of work which takes care

518
00:23:04,020 --> 00:23:07,740
of you know reducing the cognitive load

519
00:23:06,270 --> 00:23:10,230
of the developers so if you're doing

520
00:23:07,740 --> 00:23:13,620
work X at that moment you need to just

521
00:23:10,230 --> 00:23:14,970
take into account these four things but

522
00:23:13,620 --> 00:23:18,419
there are always and this is the last

523
00:23:14,970 --> 00:23:22,620
category requirements that you need to

524
00:23:18,420 --> 00:23:25,580
take into account all the time and what

525
00:23:22,620 --> 00:23:28,080
do you do with these yellow and red

526
00:23:25,580 --> 00:23:31,980
requirements you need to turn them into

527
00:23:28,080 --> 00:23:34,500
something that works and those are

528
00:23:31,980 --> 00:23:38,370
instructions and tests so for the

529
00:23:34,500 --> 00:23:40,380
framework rule the requirement is just

530
00:23:38,370 --> 00:23:42,659
use the framework look at the framework

531
00:23:40,380 --> 00:23:44,490
if you want to build something if it's

532
00:23:42,660 --> 00:23:47,040
already there use the framework

533
00:23:44,490 --> 00:23:49,250
otherwise you build it yourself but

534
00:23:47,040 --> 00:23:52,200
there's also one test involved which is

535
00:23:49,250 --> 00:23:53,730
test whether developers really are using

536
00:23:52,200 --> 00:23:55,920
the framework and this requires some

537
00:23:53,730 --> 00:23:58,260
work and a typical way to verify this is

538
00:23:55,920 --> 00:24:00,330
do do peer review so this should be on

539
00:23:58,260 --> 00:24:02,280
the checklist of doing the peer reviews

540
00:24:00,330 --> 00:24:04,980
it's quite a simple test but it's it's

541
00:24:02,280 --> 00:24:05,670
important you see a lot of teams that

542
00:24:04,980 --> 00:24:07,260
could have you

543
00:24:05,670 --> 00:24:08,760
is really beautiful functions that are

544
00:24:07,260 --> 00:24:12,210
already in the framework that they

545
00:24:08,760 --> 00:24:15,030
didn't know about next are the story

546
00:24:12,210 --> 00:24:16,950
specific requirements these are

547
00:24:15,030 --> 00:24:19,560
instructions and tests that are in what

548
00:24:16,950 --> 00:24:24,020
we call a pick lists so I'll show later

549
00:24:19,560 --> 00:24:26,639
that this pick list you use when you are

550
00:24:24,020 --> 00:24:29,879
refining a story to add the necessary

551
00:24:26,640 --> 00:24:32,340
instructions and tests to that story the

552
00:24:29,880 --> 00:24:34,800
tests they become part of the acceptance

553
00:24:32,340 --> 00:24:39,120
criteria of a story and instructions are

554
00:24:34,800 --> 00:24:42,000
communicated to the developers I'm

555
00:24:39,120 --> 00:24:44,399
saying instructions because the

556
00:24:42,000 --> 00:24:45,870
requirement itself can be a way to

557
00:24:44,400 --> 00:24:49,470
communicate to developers what needs to

558
00:24:45,870 --> 00:24:51,750
be done but it mostly is that's almost

559
00:24:49,470 --> 00:24:55,430
like a legal document right it's it's

560
00:24:51,750 --> 00:24:58,230
for Bo's you can do you can create much

561
00:24:55,430 --> 00:25:00,090
nicer instructions for developers from

562
00:24:58,230 --> 00:25:03,300
these requirements if you haven't done

563
00:25:00,090 --> 00:25:04,620
that yet you can of course to

564
00:25:03,300 --> 00:25:06,060
communicate the requirements in the

565
00:25:04,620 --> 00:25:07,979
original requires in themselves who the

566
00:25:06,060 --> 00:25:09,810
developers but the recommendation in

567
00:25:07,980 --> 00:25:13,130
these imaginal notes is to make these

568
00:25:09,810 --> 00:25:16,159
into developer instructions also because

569
00:25:13,130 --> 00:25:18,480
sometimes you just can leave out a

570
00:25:16,160 --> 00:25:20,190
requirement as an instruction because

571
00:25:18,480 --> 00:25:22,530
you believe that developers already

572
00:25:20,190 --> 00:25:23,940
notice for example if there are a couple

573
00:25:22,530 --> 00:25:26,639
of deprecated functions that you

574
00:25:23,940 --> 00:25:29,400
shouldn't be using but and you just

575
00:25:26,640 --> 00:25:31,530
assume that most developers notice and

576
00:25:29,400 --> 00:25:33,620
you have a nice test that checks if

577
00:25:31,530 --> 00:25:37,649
people are using this with a short

578
00:25:33,620 --> 00:25:40,229
feedback cycle it is fine to just do not

579
00:25:37,650 --> 00:25:42,030
have any instruction at all on this just

580
00:25:40,230 --> 00:25:46,440
mention it once in the training and

581
00:25:42,030 --> 00:25:50,040
other simple tests and this is an

582
00:25:46,440 --> 00:25:51,660
example of a system generic test that

583
00:25:50,040 --> 00:25:56,320
doesn't have an instruction

584
00:25:51,660 --> 00:26:01,730
[Music]

585
00:25:56,320 --> 00:26:04,060
so from this preparation phase that you

586
00:26:01,730 --> 00:26:09,560
do before you start building a system

587
00:26:04,060 --> 00:26:12,919
I'd say that this is in agile situation

588
00:26:09,560 --> 00:26:16,790
of course based on the initial idea of a

589
00:26:12,920 --> 00:26:18,920
system which typically should evolve so

590
00:26:16,790 --> 00:26:21,080
you also should revisit this preparation

591
00:26:18,920 --> 00:26:22,580
this list of requirements to see if it's

592
00:26:21,080 --> 00:26:25,790
still up to date with the current

593
00:26:22,580 --> 00:26:28,750
posture and the integrator context of

594
00:26:25,790 --> 00:26:31,280
the system what comes out of it is

595
00:26:28,750 --> 00:26:33,320
something that's reference referred from

596
00:26:31,280 --> 00:26:36,500
the definition of done so it's set of

597
00:26:33,320 --> 00:26:39,770
generic requirements with instructions

598
00:26:36,500 --> 00:26:41,510
and tests a picklist you know the

599
00:26:39,770 --> 00:26:45,370
requirements that you select per story

600
00:26:41,510 --> 00:26:48,379
and perhaps a threat model that you have

601
00:26:45,370 --> 00:26:52,370
drawn in your initial session thinking

602
00:26:48,380 --> 00:26:57,800
about on a very high architectural level

603
00:26:52,370 --> 00:26:59,810
about your system then per story you

604
00:26:57,800 --> 00:27:03,050
start from the pick list adding relevant

605
00:26:59,810 --> 00:27:06,020
requirements to the story acceptance

606
00:27:03,050 --> 00:27:09,770
criteria and this is it brings me to one

607
00:27:06,020 --> 00:27:13,790
of the pitfalls when you google about

608
00:27:09,770 --> 00:27:15,410
how you should to agile security you'll

609
00:27:13,790 --> 00:27:20,149
find some recommendations that you

610
00:27:15,410 --> 00:27:21,770
should do this in sprint planning

611
00:27:20,150 --> 00:27:24,140
meetings now I don't know if you've ever

612
00:27:21,770 --> 00:27:26,060
been to a planning meeting it's always a

613
00:27:24,140 --> 00:27:28,190
really busy meeting you have to get the

614
00:27:26,060 --> 00:27:32,060
planning out it's it's stressful it's

615
00:27:28,190 --> 00:27:33,860
boring and there's simply no time to in

616
00:27:32,060 --> 00:27:35,990
this whole plenary group to discuss all

617
00:27:33,860 --> 00:27:37,399
the security elements so the best

618
00:27:35,990 --> 00:27:40,040
practice is to do this during

619
00:27:37,400 --> 00:27:41,990
refinements and during creation of the

620
00:27:40,040 --> 00:27:44,210
story so you're thinking of okay soon

621
00:27:41,990 --> 00:27:46,010
and we need to build a login forum let's

622
00:27:44,210 --> 00:27:48,290
immediately have a look at the big list

623
00:27:46,010 --> 00:27:50,720
at there's no time we shoot at lunch

624
00:27:48,290 --> 00:27:52,760
okay then we'll refine this story later

625
00:27:50,720 --> 00:27:54,380
we'll create it but we need to have

626
00:27:52,760 --> 00:27:56,660
added these instructions and

627
00:27:54,380 --> 00:27:58,610
requirements before we go into sprint

628
00:27:56,660 --> 00:28:00,080
planning because then during sprint

629
00:27:58,610 --> 00:28:01,939
planning you can take into account that

630
00:28:00,080 --> 00:28:03,580
this will take you work right it will

631
00:28:01,940 --> 00:28:06,320
take you work to make sure that

632
00:28:03,580 --> 00:28:07,460
resetting the password actually takes as

633
00:28:06,320 --> 00:28:09,860
much time for

634
00:28:07,460 --> 00:28:12,590
for every known every known user mmm and

635
00:28:09,860 --> 00:28:15,889
unknown users so the result is a user

636
00:28:12,590 --> 00:28:19,428
story with acceptance criteria and you

637
00:28:15,890 --> 00:28:22,820
use that in your process so refinement I

638
00:28:19,429 --> 00:28:24,559
mentioned planning I mentioned of course

639
00:28:22,820 --> 00:28:27,559
in the sprint review is important

640
00:28:24,559 --> 00:28:29,750
because then you can of course assess

641
00:28:27,559 --> 00:28:31,879
how successful you were with applying

642
00:28:29,750 --> 00:28:33,620
security how successful you were with

643
00:28:31,880 --> 00:28:37,929
with planning these security elements

644
00:28:33,620 --> 00:28:40,820
and as I mentioned the sprint demo

645
00:28:37,929 --> 00:28:42,890
because that allows you to also to

646
00:28:40,820 --> 00:28:44,539
demonstrate to the business the value of

647
00:28:42,890 --> 00:28:47,390
the effort that you put into building

648
00:28:44,539 --> 00:28:52,309
security in talking about demo it just

649
00:28:47,390 --> 00:28:57,320
thought this tomorrow at 10:15 the real

650
00:28:52,309 --> 00:28:59,029
civil team is going to demonstrate some

651
00:28:57,320 --> 00:29:03,639
in a session so if you're interested

652
00:28:59,029 --> 00:29:09,909
please join there oh yeah I forgot the

653
00:29:03,640 --> 00:29:12,380
nice circle and this is to illustrate

654
00:29:09,909 --> 00:29:17,020
some other elements that are in the

655
00:29:12,380 --> 00:29:20,390
agile nodes for example transparency and

656
00:29:17,020 --> 00:29:23,270
measurements if you want to improve your

657
00:29:20,390 --> 00:29:25,190
security you should be measuring the

658
00:29:23,270 --> 00:29:28,520
maturity of your process but you also

659
00:29:25,190 --> 00:29:31,970
should have some metrics that show two

660
00:29:28,520 --> 00:29:34,279
stakeholders to the team but also to

661
00:29:31,970 --> 00:29:36,470
other teams because that can ignite a

662
00:29:34,279 --> 00:29:38,510
gaming effect how you are dealing with

663
00:29:36,470 --> 00:29:40,909
security issues how you are resolving

664
00:29:38,510 --> 00:29:44,330
them but it's coming out of the Beauty

665
00:29:40,909 --> 00:29:46,520
test and how mature a team is and I'm

666
00:29:44,330 --> 00:29:49,850
saying this because one of the best

667
00:29:46,520 --> 00:29:52,730
practices in our notes is that teams

668
00:29:49,850 --> 00:29:55,158
should be autonomous right they for

669
00:29:52,730 --> 00:29:58,279
themselves can grow of course you can

670
00:29:55,159 --> 00:30:00,980
facilitate exchanging lessons learned

671
00:29:58,279 --> 00:30:03,110
and pitfalls and and experiences between

672
00:30:00,980 --> 00:30:06,169
teams but teams for the self should

673
00:30:03,110 --> 00:30:08,600
figure out where they are on how they

674
00:30:06,169 --> 00:30:09,740
can improve based on the type of you

675
00:30:08,600 --> 00:30:12,559
know the part of the system that they're

676
00:30:09,740 --> 00:30:16,210
working on the people in in in the group

677
00:30:12,559 --> 00:30:16,210
and the experience that they have

678
00:30:17,630 --> 00:30:24,240
which brings me to some links the agile

679
00:30:21,570 --> 00:30:26,850
nodes have been published wisely

680
00:30:24,240 --> 00:30:29,550
automatic by the beautiful system that

681
00:30:26,850 --> 00:30:33,149
looks at github and just pushes it

682
00:30:29,550 --> 00:30:35,310
nicely to to the website the ideas in is

683
00:30:33,150 --> 00:30:38,550
in the next version to have it

684
00:30:35,310 --> 00:30:41,340
integrated into versions of Sam by

685
00:30:38,550 --> 00:30:45,570
showing these as extra notes in in

686
00:30:41,340 --> 00:30:48,899
publications of course the OSM website

687
00:30:45,570 --> 00:30:51,929
and my email address because I would

688
00:30:48,900 --> 00:30:54,810
really welcome your feedback write your

689
00:30:51,930 --> 00:30:57,230
own experiences so even if you're mad at

690
00:30:54,810 --> 00:31:00,120
me if you want to boo just please do it

691
00:30:57,230 --> 00:31:03,720
right after this talk at the s ng booth

692
00:31:00,120 --> 00:31:05,580
or in email that's the first version of

693
00:31:03,720 --> 00:31:07,500
the agile notes are probably things that

694
00:31:05,580 --> 00:31:10,560
we've overlooked perhaps and things that

695
00:31:07,500 --> 00:31:12,300
we got wrong just prove us wrong and we

696
00:31:10,560 --> 00:31:15,450
can improve these as a note I would

697
00:31:12,300 --> 00:31:18,870
welcome that very much and on a personal

698
00:31:15,450 --> 00:31:21,270
note this is a security conference so I

699
00:31:18,870 --> 00:31:23,790
focused on security but the thing is

700
00:31:21,270 --> 00:31:26,430
that these activities like thinking

701
00:31:23,790 --> 00:31:31,230
about what can go wrong what you need to

702
00:31:26,430 --> 00:31:33,690
apply situationally measuring all these

703
00:31:31,230 --> 00:31:36,090
aspects do not count for just security

704
00:31:33,690 --> 00:31:37,740
it's also something that counts for data

705
00:31:36,090 --> 00:31:39,389
protection right privacy it's also

706
00:31:37,740 --> 00:31:43,020
something that counts for reliability

707
00:31:39,390 --> 00:31:44,640
for maintainability so my recommendation

708
00:31:43,020 --> 00:31:46,889
would be to see if you can make your

709
00:31:44,640 --> 00:31:49,020
security program a software quality

710
00:31:46,890 --> 00:31:52,200
program now it's the same mechanisms

711
00:31:49,020 --> 00:31:54,629
it's also awareness it's showing the

712
00:31:52,200 --> 00:31:56,220
business values of things and it would

713
00:31:54,630 --> 00:31:58,200
be a waste if you would need to have a

714
00:31:56,220 --> 00:32:00,830
separate program for every single

715
00:31:58,200 --> 00:32:05,610
quality in development environments

716
00:32:00,830 --> 00:32:06,750
thank you for that and yeah yeah tell me

717
00:32:05,610 --> 00:32:10,550
there's a questions if you will an

718
00:32:06,750 --> 00:32:10,550
otherwise a break thank you very much

719
00:32:11,640 --> 00:32:16,390
[Applause]

720
00:32:22,539 --> 00:32:29,570
on the slide with the zoomed out pages

721
00:32:25,519 --> 00:32:34,610
you have one page I think on taking out

722
00:32:29,570 --> 00:32:38,689
of the clip SSD method from CIP is their

723
00:32:34,610 --> 00:32:43,149
overlap or do they complement this or

724
00:32:38,690 --> 00:32:45,980
some yeah funny that you recognize that

725
00:32:43,149 --> 00:32:48,110
the picture looks the same because I

726
00:32:45,980 --> 00:32:51,049
also made the picture in the chapel

727
00:32:48,110 --> 00:32:53,029
pastures day as I was involved from the

728
00:32:51,049 --> 00:32:57,019
very beginning for those of you don't

729
00:32:53,029 --> 00:32:59,240
know this this is a guideline also

730
00:32:57,019 --> 00:33:01,580
written by the CIP that I mentioned

731
00:32:59,240 --> 00:33:04,399
earlier the Dutch organization and it

732
00:33:01,580 --> 00:33:08,600
describes how you can be clear from a

733
00:33:04,399 --> 00:33:10,279
client towards a software maker in what

734
00:33:08,600 --> 00:33:12,740
do you think is secure to set right

735
00:33:10,279 --> 00:33:14,690
requirements and also to have a dialogue

736
00:33:12,740 --> 00:33:17,269
on this is based it's based on comply or

737
00:33:14,690 --> 00:33:19,549
explain it's based on it describes how

738
00:33:17,269 --> 00:33:23,119
you interact and measure quality and

739
00:33:19,549 --> 00:33:25,820
part of this is a set of basic

740
00:33:23,119 --> 00:33:30,619
requirements that's a separate document

741
00:33:25,820 --> 00:33:32,178
and a funny thing is that these

742
00:33:30,619 --> 00:33:34,580
requirements they don't have triggers

743
00:33:32,179 --> 00:33:36,409
yet so what we're doing right now is we

744
00:33:34,580 --> 00:33:38,869
are extending these requirements and

745
00:33:36,409 --> 00:33:42,710
making them applicable depending on the

746
00:33:38,869 --> 00:33:44,928
situation and really enabling applying

747
00:33:42,710 --> 00:33:46,759
these agile notes using these distances

748
00:33:44,929 --> 00:33:48,000
from hypothesis day so that's the

749
00:33:46,759 --> 00:33:50,860
relation right there

750
00:33:48,000 --> 00:33:58,100
[Music]

751
00:33:50,860 --> 00:33:59,879
that'll be else part all right guys see

752
00:33:58,100 --> 00:34:03,019
you around

753
00:33:59,880 --> 00:34:03,019
[Applause]

