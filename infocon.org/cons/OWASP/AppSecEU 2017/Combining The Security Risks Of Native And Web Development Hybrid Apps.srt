1
00:00:03,300 --> 00:00:08,830
yes you said we're going<font color="#E5E5E5"> to talk</font><font color="#CCCCCC"> about</font>

2
00:00:06,189 --> 00:00:11,170
hybrid<font color="#CCCCCC"> mobile apps Cordova apps in</font>

3
00:00:08,830 --> 00:00:15,009
particular<font color="#CCCCCC"> first</font><font color="#E5E5E5"> I'm going to introduce</font>

4
00:00:11,170 --> 00:00:16,570
what<font color="#CCCCCC"> our hybrid mobile</font><font color="#E5E5E5"> apps</font><font color="#CCCCCC"> I'll show</font>

5
00:00:15,009 --> 00:00:18,009
you what we found<font color="#E5E5E5"> in the Google Play</font>

6
00:00:16,570 --> 00:00:20,440
Store when we<font color="#CCCCCC"> searched for them I'll</font>

7
00:00:18,009 --> 00:00:23,350
also tell<font color="#CCCCCC"> you why they are terribly</font>

8
00:00:20,440 --> 00:00:25,630
insecure<font color="#E5E5E5"> and I can relate</font><font color="#CCCCCC"> I</font><font color="#E5E5E5"> tell you you</font>

9
00:00:23,350 --> 00:00:31,269
can still<font color="#CCCCCC"> develop a rather decently</font>

10
00:00:25,630 --> 00:00:34,269
secure hybrid app so first of<font color="#CCCCCC"> all what</font>

11
00:00:31,269 --> 00:00:36,850
<font color="#CCCCCC">is a hybrid</font><font color="#E5E5E5"> mobile app so traditionally</font>

12
00:00:34,269 --> 00:00:39,969
<font color="#CCCCCC">you have two approaches to</font><font color="#E5E5E5"> mobile app</font>

13
00:00:36,850 --> 00:00:42,550
<font color="#CCCCCC">development</font><font color="#E5E5E5"> on the one hand side you can</font>

14
00:00:39,969 --> 00:00:46,000
decide<font color="#CCCCCC"> to develop a</font><font color="#E5E5E5"> native app written</font>

15
00:00:42,550 --> 00:00:49,690
<font color="#E5E5E5">in</font><font color="#CCCCCC"> Java a</font><font color="#E5E5E5"> swift or C sharp depending on</font>

16
00:00:46,000 --> 00:00:51,399
the<font color="#CCCCCC"> platform that</font><font color="#E5E5E5"> you're targeting</font><font color="#CCCCCC"> with</font>

17
00:00:49,690 --> 00:00:53,739
these kind<font color="#CCCCCC"> of apps usually have all</font>

18
00:00:51,399 --> 00:00:56,890
features available<font color="#E5E5E5"> that the platform</font>

19
00:00:53,739 --> 00:01:00,010
<font color="#CCCCCC">provides you such as GPS or camera</font>

20
00:00:56,890 --> 00:01:01,660
access but they are very platform

21
00:01:00,010 --> 00:01:03,809
specific so if you want to<font color="#CCCCCC"> target</font>

22
00:01:01,660 --> 00:01:07,479
multiple platforms<font color="#CCCCCC"> you usually have to</font>

23
00:01:03,809 --> 00:01:10,539
redevelop all of them on the other hand

24
00:01:07,479 --> 00:01:14,560
you can decide<font color="#CCCCCC"> to develop a web app</font>

25
00:01:10,540 --> 00:01:17,680
<font color="#E5E5E5">written in html5 and JavaScript they are</font>

26
00:01:14,560 --> 00:01:20,799
hosted on<font color="#CCCCCC"> a remote server you can target</font>

27
00:01:17,680 --> 00:01:23,200
all<font color="#CCCCCC"> platforms at once with them but</font><font color="#E5E5E5"> they</font>

28
00:01:20,799 --> 00:01:25,479
usually<font color="#E5E5E5"> rather limited then what you can</font>

29
00:01:23,200 --> 00:01:29,259
do on<font color="#CCCCCC"> the device since</font><font color="#E5E5E5"> they are usually</font>

30
00:01:25,479 --> 00:01:31,420
<font color="#E5E5E5">confined to the browser window but the</font>

31
00:01:29,259 --> 00:01:34,540
advantages<font color="#E5E5E5"> yeah they're quite platform</font>

32
00:01:31,420 --> 00:01:37,240
dependent<font color="#CCCCCC"> and</font><font color="#E5E5E5"> so in order to combine the</font>

33
00:01:34,540 --> 00:01:38,920
<font color="#CCCCCC">best out of these two</font><font color="#E5E5E5"> worlds people came</font>

34
00:01:37,240 --> 00:01:42,640
<font color="#CCCCCC">up with the concept</font><font color="#E5E5E5"> of a hybrid app</font>

35
00:01:38,920 --> 00:01:46,090
where you mix the native part with a web

36
00:01:42,640 --> 00:01:48,369
part<font color="#E5E5E5"> html5</font><font color="#CCCCCC"> and</font><font color="#E5E5E5"> JavaScript and the idea</font>

37
00:01:46,090 --> 00:01:51,310
is that<font color="#E5E5E5"> you can build them once and then</font>

38
00:01:48,369 --> 00:01:53,740
<font color="#E5E5E5">run them on all these</font><font color="#CCCCCC"> platforms compile</font>

39
00:01:51,310 --> 00:01:58,299
them for all these<font color="#CCCCCC"> platforms into sort</font>

40
00:01:53,740 --> 00:02:00,880
<font color="#E5E5E5">of native apps and you get the access to</font>

41
00:01:58,299 --> 00:02:05,530
the device specific features<font color="#CCCCCC"> backed by</font>

42
00:02:00,880 --> 00:02:07,509
using<font color="#CCCCCC"> so-called plugins so this is the</font>

43
00:02:05,530 --> 00:02:11,290
general<font color="#CCCCCC"> architecture of an Apache</font>

44
00:02:07,509 --> 00:02:15,400
Cordova<font color="#CCCCCC"> app so the main part of the app</font>

45
00:02:11,290 --> 00:02:16,019
is basically<font color="#E5E5E5"> this box here you write it</font>

46
00:02:15,400 --> 00:02:18,960
in<font color="#E5E5E5"> nature</font>

47
00:02:16,020 --> 00:02:22,830
five<font color="#CCCCCC"> and</font><font color="#E5E5E5"> JavaScript</font><font color="#CCCCCC"> application</font><font color="#E5E5E5"> logicals</font>

48
00:02:18,960 --> 00:02:26,480
and it all sitting under<font color="#CCCCCC"> that view</font><font color="#E5E5E5"> which</font>

49
00:02:22,830 --> 00:02:29,550
then by using Android or<font color="#E5E5E5"> Cordova ap is</font>

50
00:02:26,480 --> 00:02:32,910
you can communicate<font color="#CCCCCC"> with the Android</font>

51
00:02:29,550 --> 00:02:35,960
platform<font color="#CCCCCC"> all with</font><font color="#E5E5E5"> your plugins that</font>

52
00:02:32,910 --> 00:02:38,549
allow you then to gain access<font color="#CCCCCC"> to these</font>

53
00:02:35,960 --> 00:02:40,260
platform specific features Cordova

54
00:02:38,550 --> 00:02:43,620
provides an<font color="#CCCCCC"> implementation of these</font>

55
00:02:40,260 --> 00:02:45,359
plugins<font color="#E5E5E5"> for all supported platforms and</font>

56
00:02:43,620 --> 00:02:48,060
<font color="#E5E5E5">you can just then use</font><font color="#CCCCCC"> your JavaScript</font>

57
00:02:45,360 --> 00:02:54,570
<font color="#E5E5E5">API to make use of them by using these</font>

58
00:02:48,060 --> 00:02:57,360
<font color="#E5E5E5">plugins so it's not going to juice a</font>

59
00:02:54,570 --> 00:02:59,850
quick running example<font color="#E5E5E5"> of a small hybrid</font>

60
00:02:57,360 --> 00:03:02,460
app that you're<font color="#E5E5E5"> going to use so this is</font>

61
00:02:59,850 --> 00:03:04,079
a very simple app it<font color="#E5E5E5"> just gives you one</font>

62
00:03:02,460 --> 00:03:07,050
window where<font color="#CCCCCC"> you can search for a</font>

63
00:03:04,080 --> 00:03:09,210
<font color="#CCCCCC">contact name</font><font color="#E5E5E5"> the app will then look up</font>

64
00:03:07,050 --> 00:03:12,660
<font color="#CCCCCC">the phone number</font><font color="#E5E5E5"> from the local contact</font>

65
00:03:09,210 --> 00:03:14,700
<font color="#E5E5E5">book and the</font><font color="#CCCCCC"> node</font><font color="#E5E5E5"> can read it but simply</font>

66
00:03:12,660 --> 00:03:19,620
display the telephone number and font in

67
00:03:14,700 --> 00:03:21,839
<font color="#E5E5E5">there and the telephone book so I'm sure</font>

68
00:03:19,620 --> 00:03:25,110
how<font color="#E5E5E5"> much you can actually read but this</font>

69
00:03:21,840 --> 00:03:28,140
is sort<font color="#CCCCCC"> of the main part of the hybrid</font>

70
00:03:25,110 --> 00:03:30,209
app that that you<font color="#E5E5E5"> just saw so on the top</font>

71
00:03:28,140 --> 00:03:34,799
we<font color="#CCCCCC"> have</font><font color="#E5E5E5"> the JavaScript part in</font><font color="#CCCCCC"> blue on</font>

72
00:03:30,209 --> 00:03:36,510
the<font color="#CCCCCC"> bottom the</font><font color="#E5E5E5"> Java part</font><font color="#CCCCCC"> we have a small</font>

73
00:03:34,800 --> 00:03:39,990
<font color="#CCCCCC">function on the JavaScript side for your</font>

74
00:03:36,510 --> 00:03:41,820
<font color="#E5E5E5">start show phone number and</font><font color="#CCCCCC"> a JavaScript</font>

75
00:03:39,990 --> 00:03:45,180
and the Java side on the<font color="#CCCCCC"> bottom you have</font>

76
00:03:41,820 --> 00:03:47,970
one Java class that basically is<font color="#E5E5E5"> the</font>

77
00:03:45,180 --> 00:03:50,150
plugin<font color="#CCCCCC"> that</font><font color="#E5E5E5"> is used to access the local</font>

78
00:03:47,970 --> 00:03:53,640
<font color="#CCCCCC">context</font>

79
00:03:50,150 --> 00:03:56,370
so the main part of this hybrid

80
00:03:53,640 --> 00:03:59,010
framework is the<font color="#CCCCCC"> so called EXA core</font>

81
00:03:56,370 --> 00:04:05,580
execute method that is provided<font color="#CCCCCC"> by</font><font color="#E5E5E5"> the</font>

82
00:03:59,010 --> 00:04:07,890
<font color="#E5E5E5">coastal walk framework and this is the</font>

83
00:04:05,580 --> 00:04:10,170
main method that allows you<font color="#CCCCCC"> to</font><font color="#E5E5E5"> actually</font>

84
00:04:07,890 --> 00:04:14,480
communicate between the<font color="#E5E5E5"> Java and</font>

85
00:04:10,170 --> 00:04:14,480
<font color="#E5E5E5">JavaScript part of your of your app and</font>

86
00:04:15,739 --> 00:04:20,250
<font color="#E5E5E5">yeah you call it from the JavaScript</font>

87
00:04:17,970 --> 00:04:22,590
<font color="#E5E5E5">side and as usual in JavaScript you get</font>

88
00:04:20,250 --> 00:04:24,870
your result in the form of<font color="#E5E5E5"> callbacks</font>

89
00:04:22,590 --> 00:04:27,929
<font color="#E5E5E5">now example you have a success callback</font>

90
00:04:24,870 --> 00:04:29,330
<font color="#E5E5E5">that's when it has finally retrieved the</font>

91
00:04:27,930 --> 00:04:31,069
telephone number

92
00:04:29,330 --> 00:04:35,659
<font color="#CCCCCC">it's simply presented to the</font><font color="#E5E5E5"> user in an</font>

93
00:04:31,069 --> 00:04:39,470
alert<font color="#E5E5E5"> box you on the JavaScript side</font>

94
00:04:35,659 --> 00:04:41,150
also specify where<font color="#CCCCCC"> you are basically</font><font color="#E5E5E5"> the</font>

95
00:04:39,470 --> 00:04:43,190
target of your<font color="#E5E5E5"> call which is a string</font>

96
00:04:41,150 --> 00:04:45,530
here and<font color="#E5E5E5"> corresponds to the name</font><font color="#CCCCCC"> of the</font>

97
00:04:43,190 --> 00:04:49,300
<font color="#E5E5E5">Java class so that</font><font color="#CCCCCC"> translation</font><font color="#E5E5E5"> is done</font>

98
00:04:45,530 --> 00:04:49,299
<font color="#E5E5E5">by the by the credible framework</font>

99
00:04:49,659 --> 00:04:53,930
similarly you have an<font color="#E5E5E5"> action that you</font>

100
00:04:51,710 --> 00:04:56,030
specify in our case fine<font color="#CCCCCC"> we want to find</font>

101
00:04:53,930 --> 00:05:00,069
the telephone number and<font color="#CCCCCC"> it</font><font color="#E5E5E5"> also</font>

102
00:04:56,030 --> 00:05:02,719
corresponds to a method on the Java<font color="#CCCCCC"> side</font>

103
00:05:00,069 --> 00:05:05,659
<font color="#E5E5E5">and then finally you have</font><font color="#CCCCCC"> an argument</font><font color="#E5E5E5"> in</font>

104
00:05:02,719 --> 00:05:08,330
<font color="#E5E5E5">our case the contact name that you see</font>

105
00:05:05,659 --> 00:05:10,490
on the Java side<font color="#E5E5E5"> goes into a simple</font>

106
00:05:08,330 --> 00:05:17,740
sequel query that finally retrieves the

107
00:05:10,490 --> 00:05:22,370
telephone number yeah the Java side<font color="#CCCCCC"> the</font>

108
00:05:17,740 --> 00:05:24,319
extends the class<font color="#E5E5E5"> cordova plugin so it</font>

109
00:05:22,370 --> 00:05:28,780
can provide<font color="#CCCCCC"> this</font><font color="#E5E5E5"> feature by the</font><font color="#CCCCCC"> by</font>

110
00:05:24,319 --> 00:05:31,639
implementing<font color="#CCCCCC"> the execute method so</font>

111
00:05:28,780 --> 00:05:33,940
because this framework<font color="#E5E5E5"> or the</font><font color="#CCCCCC"> core of</font>

112
00:05:31,639 --> 00:05:37,430
the framework is<font color="#CCCCCC"> called Apache</font><font color="#E5E5E5"> Cordova</font>

113
00:05:33,940 --> 00:05:40,279
<font color="#CCCCCC">but it</font><font color="#E5E5E5"> actually has many different</font><font color="#CCCCCC"> names</font>

114
00:05:37,430 --> 00:05:43,360
so many companies<font color="#CCCCCC"> like SCP for example</font>

115
00:05:40,279 --> 00:05:47,630
they went ahead and provides a bunch of

116
00:05:43,360 --> 00:05:50,210
<font color="#E5E5E5">advanced plugins so you will find a pet</font>

117
00:05:47,630 --> 00:05:54,340
she could over under the<font color="#E5E5E5"> hood of Adobe</font>

118
00:05:50,210 --> 00:05:57,169
<font color="#E5E5E5">PhoneGap for example or</font><font color="#CCCCCC"> ASAP capsule</font>

119
00:05:54,340 --> 00:05:59,419
which<font color="#E5E5E5"> is basically</font><font color="#CCCCCC"> Cordova plus a</font><font color="#E5E5E5"> bunch</font>

120
00:05:57,169 --> 00:06:02,690
of proprietary plugins that<font color="#CCCCCC"> are also</font>

121
00:05:59,419 --> 00:06:04,789
provided for you know<font color="#E5E5E5"> features</font><font color="#CCCCCC"> that you</font>

122
00:06:02,690 --> 00:06:12,680
<font color="#E5E5E5">would need</font><font color="#CCCCCC"> for an SCP app like some</font>

123
00:06:04,789 --> 00:06:14,900
secure single sign-on or<font color="#E5E5E5"> so so we also</font>

124
00:06:12,680 --> 00:06:17,569
<font color="#E5E5E5">had to look at</font><font color="#CCCCCC"> when</font><font color="#E5E5E5"> we wanted to find</font>

125
00:06:14,900 --> 00:06:19,489
<font color="#E5E5E5">out what kind of Cordova apps people</font>

126
00:06:17,569 --> 00:06:21,740
<font color="#CCCCCC">actually</font><font color="#E5E5E5"> write and what we can find in</font>

127
00:06:19,490 --> 00:06:26,419
the<font color="#CCCCCC"> store how people use this framework</font>

128
00:06:21,740 --> 00:06:29,840
in the<font color="#CCCCCC"> real world the first thing we</font>

129
00:06:26,419 --> 00:06:32,150
noticed is that<font color="#E5E5E5"> especially the rather</font>

130
00:06:29,840 --> 00:06:35,270
security<font color="#E5E5E5"> critical areas like business</font>

131
00:06:32,150 --> 00:06:37,849
finance or medical they make rather

132
00:06:35,270 --> 00:06:41,000
heavy use of of the sort of hybrid

133
00:06:37,849 --> 00:06:43,099
application and then average in the

134
00:06:41,000 --> 00:06:50,330
store<font color="#CCCCCC"> they</font><font color="#E5E5E5"> are about the</font>

135
00:06:43,100 --> 00:06:53,180
five six percent of<font color="#CCCCCC"> cordova</font><font color="#E5E5E5"> apps so we</font>

136
00:06:50,330 --> 00:06:55,640
had a more closer look at the top<font color="#CCCCCC"> 1000</font>

137
00:06:53,180 --> 00:06:58,010
apps in the Google Play<font color="#E5E5E5"> Store</font><font color="#CCCCCC"> and</font><font color="#E5E5E5"> we</font>

138
00:06:55,640 --> 00:07:01,400
<font color="#E5E5E5">found that around</font><font color="#CCCCCC"> 10</font><font color="#E5E5E5"> percent of these</font>

139
00:06:58,010 --> 00:07:03,620
apps<font color="#E5E5E5"> ship parts that we identify to be</font>

140
00:07:01,400 --> 00:07:06,830
part of the<font color="#CCCCCC"> Cordova plugin</font><font color="#E5E5E5"> of the</font>

141
00:07:03,620 --> 00:07:09,470
Cordova framework<font color="#E5E5E5"> but we also finally</font>

142
00:07:06,830 --> 00:07:13,490
<font color="#E5E5E5">noticed that only half of these actually</font>

143
00:07:09,470 --> 00:07:16,610
make use of Cordova<font color="#E5E5E5"> so quite some of</font>

144
00:07:13,490 --> 00:07:18,710
these apps they ship<font color="#CCCCCC"> plugins or other</font>

145
00:07:16,610 --> 00:07:21,110
parts of<font color="#E5E5E5"> this framework but don't</font>

146
00:07:18,710 --> 00:07:24,349
actually<font color="#CCCCCC"> use it maybe</font><font color="#E5E5E5"> because</font><font color="#CCCCCC"> the chips</font>

147
00:07:21,110 --> 00:07:27,020
as part of<font color="#CCCCCC"> another library they use we</font>

148
00:07:24,350 --> 00:07:31,130
we don't<font color="#E5E5E5"> know</font><font color="#CCCCCC"> we also had a closer</font><font color="#E5E5E5"> look</font>

149
00:07:27,020 --> 00:07:35,000
at<font color="#E5E5E5"> three apps from s AP that user</font><font color="#CCCCCC"> the SE</font>

150
00:07:31,130 --> 00:07:37,670
<font color="#CCCCCC">p capsule version of cordova and plants</font>

151
00:07:35,000 --> 00:07:40,610
<font color="#E5E5E5">developed a small static analysis tool</font>

152
00:07:37,670 --> 00:07:44,600
that<font color="#CCCCCC"> analyzes these android apps in the</font>

153
00:07:40,610 --> 00:07:47,720
form of the<font color="#E5E5E5"> APK files</font><font color="#CCCCCC"> and we wanted</font><font color="#E5E5E5"> to</font>

154
00:07:44,600 --> 00:07:51,140
<font color="#E5E5E5">put our focus on this java javascript</font>

155
00:07:47,720 --> 00:07:53,150
bridge and wanted<font color="#CCCCCC"> to find out how many</font>

156
00:07:51,140 --> 00:07:56,210
<font color="#E5E5E5">of these apps actually</font><font color="#CCCCCC"> make use of this</font>

157
00:07:53,150 --> 00:07:57,710
bridge<font color="#CCCCCC"> are they</font><font color="#E5E5E5"> just static websites or</font>

158
00:07:56,210 --> 00:08:00,229
do they actually<font color="#E5E5E5"> want to</font><font color="#CCCCCC"> communicate</font>

159
00:07:57,710 --> 00:08:03,680
<font color="#CCCCCC">with the java platform side of this</font>

160
00:08:00,230 --> 00:08:05,750
<font color="#E5E5E5">framework we also wanted to find out</font>

161
00:08:03,680 --> 00:08:08,570
what kind of plugins<font color="#CCCCCC"> to</font><font color="#E5E5E5"> do use how</font>

162
00:08:05,750 --> 00:08:11,330
critical are they since the plugin<font color="#E5E5E5"> is</font>

163
00:08:08,570 --> 00:08:19,010
where this cross<font color="#CCCCCC"> JavaScript Dratel</font>

164
00:08:11,330 --> 00:08:21,020
communication is<font color="#E5E5E5"> actually being done so</font>

165
00:08:19,010 --> 00:08:23,270
we learned that yeah plugins<font color="#CCCCCC"> are</font><font color="#E5E5E5"> used</font>

166
00:08:21,020 --> 00:08:26,180
for<font color="#E5E5E5"> a variety of different</font><font color="#CCCCCC"> things</font><font color="#E5E5E5"> but</font>

167
00:08:23,270 --> 00:08:29,000
most of them<font color="#E5E5E5"> were rather simple so more</font>

168
00:08:26,180 --> 00:08:32,990
<font color="#E5E5E5">than half of the Cordova</font><font color="#CCCCCC"> Epson found use</font>

169
00:08:29,000 --> 00:08:35,599
the device or in a browser plugin which

170
00:08:32,990 --> 00:08:37,780
just provides more information<font color="#CCCCCC"> as to on</font>

171
00:08:35,599 --> 00:08:40,729
what kind of device the app is running

172
00:08:37,780 --> 00:08:42,829
<font color="#E5E5E5">which a little bit defeats the</font>

173
00:08:40,729 --> 00:08:44,660
<font color="#CCCCCC">platform-independent</font><font color="#E5E5E5"> purpose</font><font color="#CCCCCC"> i guess is</font>

174
00:08:42,830 --> 00:08:49,030
you then query on<font color="#CCCCCC"> what kind of device</font>

175
00:08:44,660 --> 00:08:52,430
running anyways<font color="#E5E5E5"> but yeah we also saw</font>

176
00:08:49,030 --> 00:08:54,130
<font color="#CCCCCC">plugins</font><font color="#E5E5E5"> that provide access to the file</font>

177
00:08:52,430 --> 00:09:02,800
system or the camera

178
00:08:54,130 --> 00:09:05,220
<font color="#E5E5E5">are even</font><font color="#CCCCCC"> also surprised to see that</font><font color="#E5E5E5"> many</font>

179
00:09:02,800 --> 00:09:08,050
<font color="#E5E5E5">of these cannula abs are really big</font>

180
00:09:05,220 --> 00:09:11,800
<font color="#E5E5E5">especially the three ones from</font><font color="#CCCCCC"> s AP that</font>

181
00:09:08,050 --> 00:09:14,640
<font color="#E5E5E5">we actually</font><font color="#CCCCCC"> had a closer look at they</font>

182
00:09:11,800 --> 00:09:17,500
<font color="#E5E5E5">actually had more than</font><font color="#CCCCCC"> 300,000 lines of</font>

183
00:09:14,640 --> 00:09:20,680
JavaScript in the second<font color="#CCCCCC"> ed for example</font>

184
00:09:17,500 --> 00:09:24,220
and also<font color="#E5E5E5"> quite a lot of Java</font><font color="#CCCCCC"> and</font><font color="#E5E5E5"> that is</font>

185
00:09:20,680 --> 00:09:27,640
in a<font color="#CCCCCC"> in a mobile rather small</font><font color="#E5E5E5"> mobile</font>

186
00:09:24,220 --> 00:09:30,400
application<font color="#CCCCCC"> which is probably due to</font><font color="#E5E5E5"> the</font>

187
00:09:27,640 --> 00:09:32,770
large<font color="#CCCCCC"> amount of libraries that they</font>

188
00:09:30,400 --> 00:09:35,199
<font color="#E5E5E5">probably just include because they just</font>

189
00:09:32,770 --> 00:09:38,170
<font color="#E5E5E5">use the stake that they usually use</font><font color="#CCCCCC"> for</font>

190
00:09:35,200 --> 00:09:42,420
the normal<font color="#CCCCCC"> websites</font><font color="#E5E5E5"> they also use that</font>

191
00:09:38,170 --> 00:09:44,829
<font color="#CCCCCC">to start</font><font color="#E5E5E5"> with their Cordova applications</font>

192
00:09:42,420 --> 00:09:47,680
and we<font color="#E5E5E5"> notice that</font><font color="#CCCCCC"> there is</font><font color="#E5E5E5"> quite an</font>

193
00:09:44,830 --> 00:09:49,960
asymmetry between the cross<font color="#CCCCCC"> language</font>

194
00:09:47,680 --> 00:09:52,650
costs<font color="#CCCCCC"> that are being</font><font color="#E5E5E5"> used so they are</font><font color="#CCCCCC"> we</font>

195
00:09:49,960 --> 00:09:56,130
found only<font color="#E5E5E5"> very few calls that go from</font>

196
00:09:52,650 --> 00:09:59,829
<font color="#E5E5E5">JavaScript to Java and way</font><font color="#CCCCCC"> more</font>

197
00:09:56,130 --> 00:10:04,090
occurrences<font color="#E5E5E5"> of Java code it actually</font>

198
00:09:59,830 --> 00:10:09,070
<font color="#CCCCCC">calls JavaScript functions which</font><font color="#E5E5E5"> you</font>

199
00:10:04,090 --> 00:10:11,350
found which we<font color="#E5E5E5"> found a bit weird and</font>

200
00:10:09,070 --> 00:10:14,740
you'll also<font color="#E5E5E5"> notice that</font><font color="#CCCCCC"> the set already</font>

201
00:10:11,350 --> 00:10:16,660
<font color="#E5E5E5">that some of these apps they ship the</font>

202
00:10:14,740 --> 00:10:21,190
whole<font color="#CCCCCC"> Cordova framework but don't use</font><font color="#E5E5E5"> it</font>

203
00:10:16,660 --> 00:10:25,589
which is weird and opens opens up

204
00:10:21,190 --> 00:10:29,470
definitely<font color="#E5E5E5"> some security questions</font><font color="#CCCCCC"> and</font>

205
00:10:25,590 --> 00:10:32,230
we also found plugins that make<font color="#E5E5E5"> heavy</font>

206
00:10:29,470 --> 00:10:35,680
use of the<font color="#CCCCCC"> native of the Java native</font>

207
00:10:32,230 --> 00:10:37,420
interface<font color="#E5E5E5"> so this is this interface</font><font color="#CCCCCC"> in</font>

208
00:10:35,680 --> 00:10:41,500
the Java side that allows you<font color="#CCCCCC"> to</font><font color="#E5E5E5"> call</font>

209
00:10:37,420 --> 00:10:43,650
functions<font color="#CCCCCC"> from</font><font color="#E5E5E5"> compiled C libraries so</font>

210
00:10:41,500 --> 00:10:46,230
they<font color="#CCCCCC"> actually found one</font><font color="#E5E5E5"> Cordova app that</font>

211
00:10:43,650 --> 00:10:49,870
decides the JavaScript and Java part

212
00:10:46,230 --> 00:10:52,360
<font color="#E5E5E5">also ships</font><font color="#CCCCCC"> a small</font><font color="#E5E5E5"> library written in C</font>

213
00:10:49,870 --> 00:10:55,390
<font color="#E5E5E5">that provides some basic arithmetic</font>

214
00:10:52,360 --> 00:10:57,790
<font color="#CCCCCC">functions</font><font color="#E5E5E5"> where we really will ask</font>

215
00:10:55,390 --> 00:11:00,610
<font color="#E5E5E5">instead it's really necessary to even</font>

216
00:10:57,790 --> 00:11:03,390
include three<font color="#E5E5E5"> languages in</font><font color="#CCCCCC"> just one</font>

217
00:11:00,610 --> 00:11:03,390
rather simple app

218
00:11:04,750 --> 00:11:09,250
yeah now I want<font color="#E5E5E5"> to I want</font><font color="#CCCCCC"> to put the</font>

219
00:11:06,790 --> 00:11:11,410
focus<font color="#CCCCCC"> a bit more on the security side of</font>

220
00:11:09,250 --> 00:11:15,760
of<font color="#CCCCCC"> Padova</font><font color="#E5E5E5"> apps and the ones that</font><font color="#CCCCCC"> we</font>

221
00:11:11,410 --> 00:11:18,040
<font color="#E5E5E5">found so why is it</font><font color="#CCCCCC"> place</font><font color="#E5E5E5"> the security of</font>

222
00:11:15,760 --> 00:11:19,420
<font color="#E5E5E5">these hybrid mobile apps so hard well</font>

223
00:11:18,040 --> 00:11:21,969
first of all you have<font color="#CCCCCC"> the JavaScript</font>

224
00:11:19,420 --> 00:11:24,130
<font color="#CCCCCC">side of your app there you have the</font>

225
00:11:21,970 --> 00:11:25,510
normal<font color="#E5E5E5"> normal challenges that you face</font>

226
00:11:24,130 --> 00:11:28,930
with your<font color="#CCCCCC"> duplicate JavaScript</font>

227
00:11:25,510 --> 00:11:31,060
application<font color="#CCCCCC"> you don't have get a bit of</font>

228
00:11:28,930 --> 00:11:33,459
<font color="#CCCCCC">typing you have higher</font><font color="#E5E5E5"> order functions</font><font color="#CCCCCC"> a</font>

229
00:11:31,060 --> 00:11:35,890
very a synchronous programming model

230
00:11:33,460 --> 00:11:38,400
which is rather different<font color="#CCCCCC"> from your</font>

231
00:11:35,890 --> 00:11:40,750
<font color="#E5E5E5">regular Java programming</font>

232
00:11:38,400 --> 00:11:44,970
yeah javascript is highly dynamic

233
00:11:40,750 --> 00:11:49,450
<font color="#E5E5E5">provides nice functions like Evo</font><font color="#CCCCCC"> and</font>

234
00:11:44,970 --> 00:11:51,640
usually has big<font color="#E5E5E5"> JavaScript libraries not</font>

235
00:11:49,450 --> 00:11:54,130
just on the<font color="#E5E5E5"> JavaScript side also on the</font>

236
00:11:51,640 --> 00:11:56,439
Java side<font color="#E5E5E5"> that yeah make your whole</font>

237
00:11:54,130 --> 00:11:59,530
project<font color="#E5E5E5"> even larger</font><font color="#CCCCCC"> and more complex in</font>

238
00:11:56,440 --> 00:12:05,440
addition to a complex framework<font color="#CCCCCC"> such as</font>

239
00:11:59,530 --> 00:12:07,240
Apache Cordova and yeah on top<font color="#E5E5E5"> of the</font>

240
00:12:05,440 --> 00:12:09,640
challenges of these both worlds you<font color="#E5E5E5"> also</font>

241
00:12:07,240 --> 00:12:12,520
have the<font color="#E5E5E5"> additional challenge of the</font>

242
00:12:09,640 --> 00:12:14,530
question as how do these data<font color="#E5E5E5"> types for</font>

243
00:12:12,520 --> 00:12:17,350
example convert as we saw<font color="#CCCCCC"> earlier you</font>

244
00:12:14,530 --> 00:12:19,959
<font color="#CCCCCC">have this central function</font><font color="#E5E5E5"> execute that</font>

245
00:12:17,350 --> 00:12:22,630
<font color="#E5E5E5">allows you</font><font color="#CCCCCC"> to call a Java function from</font>

246
00:12:19,960 --> 00:12:25,210
<font color="#E5E5E5">the JavaScript code</font><font color="#CCCCCC"> and</font><font color="#E5E5E5"> yeah what</font>

247
00:12:22,630 --> 00:12:27,130
happens for<font color="#CCCCCC"> example if you</font><font color="#E5E5E5"> just</font><font color="#CCCCCC"> dump in</font>

248
00:12:25,210 --> 00:12:36,910
a JavaScript<font color="#E5E5E5"> object what comes really</font>

249
00:12:27,130 --> 00:12:39,280
<font color="#E5E5E5">out</font><font color="#CCCCCC"> on the de Java side so to come back</font>

250
00:12:36,910 --> 00:12:41,709
<font color="#CCCCCC">to our our running example the</font><font color="#E5E5E5"> small</font>

251
00:12:39,280 --> 00:12:44,500
<font color="#CCCCCC">gets phone number application I want</font><font color="#E5E5E5"> to</font>

252
00:12:41,710 --> 00:12:47,530
visualize a little bit how the data flow

253
00:12:44,500 --> 00:12:49,300
<font color="#E5E5E5">inside the hybrid app looks like so we</font>

254
00:12:47,530 --> 00:12:51,100
<font color="#CCCCCC">ask</font><font color="#E5E5E5"> the JavaScript</font><font color="#CCCCCC"> side of the app on</font>

255
00:12:49,300 --> 00:12:54,990
the<font color="#CCCCCC"> left</font><font color="#E5E5E5"> side the</font><font color="#CCCCCC"> Java part on the right</font>

256
00:12:51,100 --> 00:12:58,000
side and it starts<font color="#E5E5E5"> with</font><font color="#CCCCCC"> a</font><font color="#E5E5E5"> query of</font>

257
00:12:54,990 --> 00:13:00,250
retrieving the phone number by passing

258
00:12:58,000 --> 00:13:02,950
the contact name from the<font color="#CCCCCC"> JavaScript to</font>

259
00:13:00,250 --> 00:13:04,750
<font color="#E5E5E5">the Java side then it gets looked up in</font>

260
00:13:02,950 --> 00:13:08,530
the<font color="#E5E5E5"> local</font><font color="#CCCCCC"> database in the contact</font>

261
00:13:04,750 --> 00:13:10,480
database and then we passed the phone

262
00:13:08,530 --> 00:13:13,000
<font color="#CCCCCC">telephone</font><font color="#E5E5E5"> number back</font><font color="#CCCCCC"> to</font><font color="#E5E5E5"> the JavaScript</font>

263
00:13:10,480 --> 00:13:14,890
<font color="#CCCCCC">side of things so here in this</font><font color="#E5E5E5"> one</font>

264
00:13:13,000 --> 00:13:18,400
<font color="#CCCCCC">example already</font><font color="#E5E5E5"> we</font><font color="#CCCCCC"> traverse</font><font color="#E5E5E5"> this</font>

265
00:13:14,890 --> 00:13:20,589
<font color="#E5E5E5">language barrier two times</font>

266
00:13:18,400 --> 00:13:23,500
and that<font color="#E5E5E5"> already raised a couple</font><font color="#CCCCCC"> of</font>

267
00:13:20,589 --> 00:13:24,790
questions so<font color="#CCCCCC"> to be</font><font color="#E5E5E5"> actually are they</font>

268
00:13:23,500 --> 00:13:27,370
actually already concerned and a

269
00:13:24,790 --> 00:13:31,000
JavaScript<font color="#CCCCCC"> site about the</font><font color="#E5E5E5"> possible</font>

270
00:13:27,370 --> 00:13:33,490
sequel injection do we already care

271
00:13:31,000 --> 00:13:37,480
<font color="#E5E5E5">about the sequel sanitizing our</font>

272
00:13:33,490 --> 00:13:39,730
sequencing there or on the<font color="#CCCCCC"> drama</font><font color="#E5E5E5"> side</font>

273
00:13:37,480 --> 00:13:41,920
when you create a<font color="#CCCCCC"> database</font><font color="#E5E5E5"> usually not</font>

274
00:13:39,730 --> 00:13:45,310
already concerned about the possible

275
00:13:41,920 --> 00:13:48,040
cross-site scripting attack so this adds

276
00:13:45,310 --> 00:13:53,079
quite<font color="#CCCCCC"> a bit to the level of complexity</font>

277
00:13:48,040 --> 00:13:55,150
<font color="#E5E5E5">here so yeah we found that this Java and</font>

278
00:13:53,080 --> 00:13:58,600
this JavaScript and Java<font color="#E5E5E5"> bridge is</font>

279
00:13:55,150 --> 00:14:08,350
<font color="#E5E5E5">actually the main focus of the security</font>

280
00:13:58,600 --> 00:14:13,720
analysis of of a<font color="#CCCCCC"> hybrid app and this</font><font color="#E5E5E5"> is</font>

281
00:14:08,350 --> 00:14:15,850
not only<font color="#E5E5E5"> due to weaknesses that can be</font>

282
00:14:13,720 --> 00:14:19,480
found<font color="#E5E5E5"> in the kadavo framework itself</font>

283
00:14:15,850 --> 00:14:25,810
<font color="#E5E5E5">such as</font><font color="#CCCCCC"> this</font><font color="#E5E5E5"> this one year from a few</font>

284
00:14:19,480 --> 00:14:28,029
years ago so under the<font color="#CCCCCC"> Java sundar the</font>

285
00:14:25,810 --> 00:14:31,510
<font color="#CCCCCC">java file of things you can expose</font><font color="#E5E5E5"> a</font>

286
00:14:28,029 --> 00:14:33,910
<font color="#CCCCCC">java object to the javascript site by</font>

287
00:14:31,510 --> 00:14:37,319
calling a<font color="#CCCCCC"> function called add</font><font color="#E5E5E5"> JavaScript</font>

288
00:14:33,910 --> 00:14:40,719
interface so you see in the<font color="#E5E5E5"> first line</font>

289
00:14:37,320 --> 00:14:44,350
<font color="#E5E5E5">the Java developer exposes a file utils</font>

290
00:14:40,720 --> 00:14:46,089
object<font color="#E5E5E5"> to the JavaScript side which can</font>

291
00:14:44,350 --> 00:14:49,120
then<font color="#CCCCCC"> be used</font><font color="#E5E5E5"> as follows on the on the</font>

292
00:14:46,089 --> 00:14:52,839
JavaScript<font color="#E5E5E5"> side as you</font><font color="#CCCCCC"> can see in line</font>

293
00:14:49,120 --> 00:14:54,850
<font color="#E5E5E5">in</font><font color="#CCCCCC"> 93 or something</font><font color="#E5E5E5"> written to a file but</font>

294
00:14:52,839 --> 00:14:57,880
what this developer probably didn't

295
00:14:54,850 --> 00:15:00,490
<font color="#CCCCCC">anticipate is that</font><font color="#E5E5E5"> you can also use</font><font color="#CCCCCC"> this</font>

296
00:14:57,880 --> 00:15:03,760
exposed function to call<font color="#E5E5E5"> some Java</font>

297
00:15:00,490 --> 00:15:06,339
reflective functions on<font color="#CCCCCC"> it which is</font>

298
00:15:03,760 --> 00:15:12,100
<font color="#CCCCCC">JavaScript developers usually</font><font color="#E5E5E5"> not really</font>

299
00:15:06,339 --> 00:15:15,040
<font color="#E5E5E5">concerned with so yet here the</font>

300
00:15:12,100 --> 00:15:18,070
vulnerability<font color="#E5E5E5"> was that this add</font>

301
00:15:15,040 --> 00:15:19,870
JavaScript<font color="#CCCCCC"> interface</font><font color="#E5E5E5"> function exposed</font>

302
00:15:18,070 --> 00:15:24,520
many more general functions than it

303
00:15:19,870 --> 00:15:26,680
should<font color="#CCCCCC"> have done or s4 specified so</font>

304
00:15:24,520 --> 00:15:28,810
after that they<font color="#E5E5E5"> introduced and Java</font>

305
00:15:26,680 --> 00:15:29,569
annotation<font color="#CCCCCC"> that makes it very explicit</font>

306
00:15:28,810 --> 00:15:31,670
we

307
00:15:29,570 --> 00:15:36,410
functions get<font color="#E5E5E5"> exposed to the JavaScript</font>

308
00:15:31,670 --> 00:15:38,420
side<font color="#E5E5E5"> and which one aren't</font><font color="#CCCCCC"> but it get but</font>

309
00:15:36,410 --> 00:15:40,520
it can get even<font color="#E5E5E5"> worse</font><font color="#CCCCCC"> so assume you have</font>

310
00:15:38,420 --> 00:15:43,219
a very simple hybrid app on your device

311
00:15:40,520 --> 00:15:47,180
and you<font color="#CCCCCC"> want to include the</font><font color="#E5E5E5"> small</font>

312
00:15:43,220 --> 00:15:51,380
advertisement<font color="#E5E5E5"> iframe that</font><font color="#CCCCCC"> our regular</font>

313
00:15:47,180 --> 00:15:54,199
app and we fetch<font color="#CCCCCC"> the eventually</font><font color="#E5E5E5"> ad from</font>

314
00:15:51,380 --> 00:15:57,250
from the<font color="#E5E5E5"> internet and</font><font color="#CCCCCC"> outline</font><font color="#E5E5E5"> so the</font>

315
00:15:54,200 --> 00:16:01,390
<font color="#E5E5E5">index.html is local but we thought the</font>

316
00:15:57,250 --> 00:16:01,390
advertisement<font color="#E5E5E5"> from the internet</font>

317
00:16:01,420 --> 00:16:09,500
especially<font color="#CCCCCC"> it's</font><font color="#E5E5E5"> it's especially bad if</font>

318
00:16:04,370 --> 00:16:12,620
you don't secure<font color="#E5E5E5"> it over</font><font color="#CCCCCC"> yes since an</font>

319
00:16:09,500 --> 00:16:13,820
attacker can simply intercept your<font color="#E5E5E5"> call</font>

320
00:16:12,620 --> 00:16:16,870
<font color="#E5E5E5">and provide you</font><font color="#CCCCCC"> with a</font><font color="#E5E5E5"> different</font>

321
00:16:13,820 --> 00:16:19,520
JavaScript<font color="#E5E5E5"> function well that is</font>

322
00:16:16,870 --> 00:16:21,950
business as<font color="#CCCCCC"> usual if</font><font color="#E5E5E5"> you don't if you</font>

323
00:16:19,520 --> 00:16:23,510
don't encrypt the traffic properly<font color="#E5E5E5"> but</font>

324
00:16:21,950 --> 00:16:27,380
what can now happen in the case of a

325
00:16:23,510 --> 00:16:30,140
java application is<font color="#E5E5E5"> that since you</font><font color="#CCCCCC"> have</font>

326
00:16:27,380 --> 00:16:32,120
<font color="#E5E5E5">these two bridges that greatly</font>

327
00:16:30,140 --> 00:16:36,020
<font color="#CCCCCC">functionality between</font><font color="#E5E5E5"> your Java and</font>

328
00:16:32,120 --> 00:16:38,480
<font color="#E5E5E5">JavaScript sites this evil evil dr. s</font>

329
00:16:36,020 --> 00:16:41,600
<font color="#E5E5E5">script it's certainly much more powerful</font>

330
00:16:38,480 --> 00:16:44,930
<font color="#CCCCCC">so it doesn't it doesn't</font><font color="#E5E5E5"> just infect</font>

331
00:16:41,600 --> 00:16:47,780
your<font color="#E5E5E5"> JavaScript site so because Cordova</font>

332
00:16:44,930 --> 00:16:50,689
exposes such a frame<font color="#CCCCCC"> such such a bridge</font>

333
00:16:47,780 --> 00:16:54,500
in every iframe and every<font color="#E5E5E5"> website of</font>

334
00:16:50,690 --> 00:16:57,170
your app<font color="#CCCCCC"> even</font><font color="#E5E5E5"> a simple app iPhone has</font>

335
00:16:54,500 --> 00:17:00,260
suddenly<font color="#CCCCCC"> this big</font><font color="#E5E5E5"> access to all your</font>

336
00:16:57,170 --> 00:17:03,260
<font color="#CCCCCC">Java functionality all your plugins</font><font color="#E5E5E5"> that</font>

337
00:17:00,260 --> 00:17:05,720
you<font color="#CCCCCC"> included which is definitely not</font>

338
00:17:03,260 --> 00:17:08,510
what you would<font color="#CCCCCC"> expect from an iframe</font><font color="#E5E5E5"> so</font>

339
00:17:05,720 --> 00:17:11,480
as to<font color="#CCCCCC"> achieve</font><font color="#E5E5E5"> a regular depth developer</font>

340
00:17:08,510 --> 00:17:14,629
yeah you would say an iframe is pretty

341
00:17:11,480 --> 00:17:18,589
sandbox<font color="#CCCCCC"> but</font><font color="#E5E5E5"> in this case</font><font color="#CCCCCC"> Padova goes</font>

342
00:17:14,630 --> 00:17:23,600
along and<font color="#E5E5E5"> also exposes this this drama</font>

343
00:17:18,589 --> 00:17:25,310
script bridge so I know our<font color="#E5E5E5"> team will</font>

344
00:17:23,599 --> 00:17:27,560
tell you how to make things at least a

345
00:17:25,310 --> 00:17:29,090
little<font color="#E5E5E5"> bit more secure okay</font><font color="#CCCCCC"> after now</font>

346
00:17:27,560 --> 00:17:30,889
we've seen quite<font color="#E5E5E5"> a couple</font><font color="#CCCCCC"> of security</font>

347
00:17:29,090 --> 00:17:33,350
<font color="#CCCCCC">challenges that we have in mobile apps</font>

348
00:17:30,890 --> 00:17:37,190
<font color="#CCCCCC">so let's see if the world is</font><font color="#E5E5E5"> really that</font>

349
00:17:33,350 --> 00:17:39,530
bad<font color="#CCCCCC"> um actually</font><font color="#E5E5E5"> it is not what we have</font>

350
00:17:37,190 --> 00:17:42,860
to keep<font color="#E5E5E5"> in</font><font color="#CCCCCC"> mind is the Dakota way up</font><font color="#E5E5E5"> for</font>

351
00:17:39,530 --> 00:17:45,139
most<font color="#E5E5E5"> is a web application so usually as</font>

352
00:17:42,860 --> 00:17:47,540
develop of<font color="#CCCCCC"> a hybrid application be it</font>

353
00:17:45,140 --> 00:17:50,030
called about one of the<font color="#CCCCCC"> other hybrid</font>

354
00:17:47,540 --> 00:17:52,549
frameworks<font color="#CCCCCC"> you are mostly developing in</font>

355
00:17:50,030 --> 00:17:54,860
web<font color="#E5E5E5"> application so whatever we learn</font>

356
00:17:52,549 --> 00:17:57,110
from secure programming in terms of web

357
00:17:54,860 --> 00:17:59,990
applications<font color="#E5E5E5"> needs to be applied</font><font color="#CCCCCC"> here as</font>

358
00:17:57,110 --> 00:18:02,209
well that's one<font color="#E5E5E5"> of the challenges if you</font>

359
00:17:59,990 --> 00:18:05,390
are<font color="#E5E5E5"> doing mobile</font><font color="#CCCCCC"> web development or</font><font color="#E5E5E5"> I</font>

360
00:18:02,210 --> 00:18:07,340
<font color="#CCCCCC">prefer</font><font color="#E5E5E5"> the hybrid development you need</font>

361
00:18:05,390 --> 00:18:09,920
<font color="#E5E5E5">to be an expert</font><font color="#CCCCCC"> in web application</font>

362
00:18:07,340 --> 00:18:12,080
<font color="#CCCCCC">security</font><font color="#E5E5E5"> do your secure JavaScript</font>

363
00:18:09,920 --> 00:18:14,570
programming<font color="#CCCCCC"> be aware what is the meaning</font>

364
00:18:12,080 --> 00:18:17,360
<font color="#CCCCCC">of content security policy same origin</font>

365
00:18:14,570 --> 00:18:19,970
<font color="#CCCCCC">policy keep in mind</font><font color="#E5E5E5"> that some things</font>

366
00:18:17,360 --> 00:18:23,240
might be<font color="#E5E5E5"> a little</font><font color="#CCCCCC"> bit different like the</font>

367
00:18:19,970 --> 00:18:25,850
iframes<font color="#CCCCCC"> what Michael just motivated to</font>

368
00:18:23,240 --> 00:18:27,890
the sandbox<font color="#CCCCCC"> provided by</font><font color="#E5E5E5"> the web fuse on</font>

369
00:18:25,850 --> 00:18:30,199
Android and I guess it's<font color="#E5E5E5"> the</font><font color="#CCCCCC"> same on iOS</font>

370
00:18:27,890 --> 00:18:32,780
are not as strong<font color="#E5E5E5"> as we have it on</font>

371
00:18:30,200 --> 00:18:34,870
modern web browsers and also usually the

372
00:18:32,780 --> 00:18:36,980
<font color="#E5E5E5">web browsers on the desktop of</font>

373
00:18:34,870 --> 00:18:40,159
developing much faster in<font color="#CCCCCC"> terms of</font>

374
00:18:36,980 --> 00:18:43,100
<font color="#E5E5E5">security than the ones on mobile then on</font>

375
00:18:40,160 --> 00:18:45,590
the other hand<font color="#E5E5E5"> Cordova apps or hybrid</font>

376
00:18:43,100 --> 00:18:47,709
apps are native apps<font color="#E5E5E5"> in our case we</font>

377
00:18:45,590 --> 00:18:50,360
<font color="#E5E5E5">mainly looked at the Google Android</font>

378
00:18:47,710 --> 00:18:53,600
applications the<font color="#CCCCCC"> Native</font><font color="#E5E5E5"> part is written</font>

379
00:18:50,360 --> 00:18:55,879
<font color="#CCCCCC">in Java so here again as a developer</font><font color="#E5E5E5"> you</font>

380
00:18:53,600 --> 00:18:57,980
<font color="#CCCCCC">have to apply</font><font color="#E5E5E5"> all your complete</font>

381
00:18:55,880 --> 00:19:00,470
knowledge<font color="#E5E5E5"> about secure programming in</font>

382
00:18:57,980 --> 00:19:03,770
language used for<font color="#CCCCCC"> a</font><font color="#E5E5E5"> native part be it</font>

383
00:19:00,470 --> 00:19:07,400
<font color="#E5E5E5">Java be it objective-c or</font><font color="#CCCCCC"> b8</font><font color="#E5E5E5"> C sharp for</font>

384
00:19:03,770 --> 00:19:09,470
example for Windows Mobile<font color="#CCCCCC"> clearly</font>

385
00:19:07,400 --> 00:19:12,890
whatever<font color="#E5E5E5"> is coming from the JavaScript</font>

386
00:19:09,470 --> 00:19:15,260
<font color="#CCCCCC">world</font><font color="#E5E5E5"> shouldn't</font><font color="#CCCCCC"> be trusted</font><font color="#E5E5E5"> so whatever</font>

387
00:19:12,890 --> 00:19:17,150
comes from the JavaScript<font color="#E5E5E5"> world even so</font>

388
00:19:15,260 --> 00:19:19,400
it's your application that<font color="#E5E5E5"> you</font><font color="#CCCCCC"> are</font>

389
00:19:17,150 --> 00:19:24,020
writing you shouldn't trust it into a

390
00:19:19,400 --> 00:19:26,450
second<font color="#E5E5E5"> defense validation in within the</font>

391
00:19:24,020 --> 00:19:30,020
native plugins<font color="#E5E5E5"> to secure your</font>

392
00:19:26,450 --> 00:19:32,660
application then of course hybrid

393
00:19:30,020 --> 00:19:34,970
applications are applications using<font color="#CCCCCC"> a</font>

394
00:19:32,660 --> 00:19:38,059
specific hybrid framework such as

395
00:19:34,970 --> 00:19:40,010
Cordova there are additional<font color="#E5E5E5"> security</font>

396
00:19:38,059 --> 00:19:42,320
mechanisms and documentation<font color="#CCCCCC"> that you</font>

397
00:19:40,010 --> 00:19:45,980
<font color="#CCCCCC">need to take</font><font color="#E5E5E5"> care of so for example</font>

398
00:19:42,320 --> 00:19:47,480
white listing of plugins<font color="#E5E5E5"> so specifying</font>

399
00:19:45,980 --> 00:19:49,220
which plugins within the<font color="#E5E5E5"> core of our</font>

400
00:19:47,480 --> 00:19:53,240
<font color="#CCCCCC">framework actually</font><font color="#E5E5E5"> load in your</font>

401
00:19:49,220 --> 00:19:55,010
<font color="#E5E5E5">application and</font><font color="#CCCCCC"> Cordova itself provides</font>

402
00:19:53,240 --> 00:19:56,849
quite<font color="#E5E5E5"> a</font><font color="#CCCCCC"> number of additional security</font>

403
00:19:55,010 --> 00:20:01,599
mechanisms

404
00:19:56,849 --> 00:20:03,549
that you should check as well<font color="#E5E5E5"> so besides</font>

405
00:20:01,599 --> 00:20:05,468
you need<font color="#CCCCCC"> to be in expert in web</font>

406
00:20:03,549 --> 00:20:08,529
application programming<font color="#E5E5E5"> or secure web</font>

407
00:20:05,469 --> 00:20:11,200
programming<font color="#E5E5E5"> and secure</font><font color="#CCCCCC"> Java Objective C</font>

408
00:20:08,529 --> 00:20:13,509
C sharp programming<font color="#E5E5E5"> you need to be an</font>

409
00:20:11,200 --> 00:20:15,969
<font color="#CCCCCC">expert</font><font color="#E5E5E5"> in the framework that</font><font color="#CCCCCC"> you</font><font color="#E5E5E5"> are</font>

410
00:20:13,509 --> 00:20:18,009
using<font color="#E5E5E5"> and then finally we</font><font color="#CCCCCC"> are talking</font>

411
00:20:15,969 --> 00:20:21,519
<font color="#CCCCCC">about mobile</font><font color="#E5E5E5"> apps</font><font color="#CCCCCC"> so</font><font color="#E5E5E5"> whatever security</font>

412
00:20:18,009 --> 00:20:23,919
mechanisms<font color="#E5E5E5"> your mobile operating system</font>

413
00:20:21,519 --> 00:20:26,139
<font color="#CCCCCC">provides</font><font color="#E5E5E5"> needs to be taken into</font><font color="#CCCCCC"> account</font>

414
00:20:23,919 --> 00:20:29,499
as well<font color="#E5E5E5"> like the permission system of</font>

415
00:20:26,139 --> 00:20:30,908
Android<font color="#CCCCCC"> then</font><font color="#E5E5E5"> clearly if</font><font color="#CCCCCC"> you're working</font>

416
00:20:29,499 --> 00:20:33,460
<font color="#E5E5E5">on mobile it's always a good</font>

417
00:20:30,909 --> 00:20:34,779
recommendation<font color="#E5E5E5"> to consider which</font>

418
00:20:33,460 --> 00:20:37,839
versions you<font color="#E5E5E5"> will actually want to</font>

419
00:20:34,779 --> 00:20:39,429
<font color="#E5E5E5">support and if you are able without</font>

420
00:20:37,839 --> 00:20:42,549
losing your customer base<font color="#CCCCCC"> or the</font>

421
00:20:39,429 --> 00:20:44,169
<font color="#CCCCCC">maturity of your customer base to</font><font color="#E5E5E5"> stop</font>

422
00:20:42,549 --> 00:20:46,359
supporting very old and<font color="#E5E5E5"> outdated</font>

423
00:20:44,169 --> 00:20:49,690
versions of the mobile operating system

424
00:20:46,359 --> 00:20:53,279
<font color="#E5E5E5">that's usually</font><font color="#CCCCCC"> something good</font><font color="#E5E5E5"> with</font>

425
00:20:49,690 --> 00:20:56,379
<font color="#CCCCCC">respect to security</font><font color="#E5E5E5"> if you decide to</font>

426
00:20:53,279 --> 00:20:58,539
outpace old<font color="#E5E5E5"> support for old versions of</font>

427
00:20:56,379 --> 00:21:00,549
your<font color="#E5E5E5"> mobile operating system take that</font>

428
00:20:58,539 --> 00:21:03,210
opportunity to refactor<font color="#E5E5E5"> your source code</font>

429
00:21:00,549 --> 00:21:05,469
and removed<font color="#E5E5E5"> no longer needed</font>

430
00:21:03,210 --> 00:21:07,479
implementations for example for<font color="#E5E5E5"> a custom</font>

431
00:21:05,469 --> 00:21:10,989
<font color="#E5E5E5">key store because in the meantime all</font>

432
00:21:07,479 --> 00:21:13,659
the major mobile<font color="#E5E5E5"> operation systems are</font>

433
00:21:10,989 --> 00:21:14,830
providing an own<font color="#E5E5E5"> key store so</font><font color="#CCCCCC"> there is</font>

434
00:21:13,659 --> 00:21:19,299
no need anymore

435
00:21:14,830 --> 00:21:21,879
for implementing own key stores then

436
00:21:19,299 --> 00:21:23,979
clearly validate all the SSL

437
00:21:21,879 --> 00:21:27,039
<font color="#E5E5E5">certificates that</font><font color="#CCCCCC"> serve i guess y le o</font>

438
00:21:23,979 --> 00:21:29,440
weekly monthly<font color="#CCCCCC"> Horror Story</font><font color="#E5E5E5"> that mobile</font>

439
00:21:27,039 --> 00:21:33,190
applications are<font color="#E5E5E5"> not validating SSL</font>

440
00:21:29,440 --> 00:21:35,950
<font color="#E5E5E5">certificate and as a security guy</font><font color="#CCCCCC"> I'm</font>

441
00:21:33,190 --> 00:21:37,929
asking myself often<font color="#CCCCCC"> why does this</font>

442
00:21:35,950 --> 00:21:39,239
actually happen<font color="#E5E5E5"> validating SSL</font>

443
00:21:37,929 --> 00:21:42,399
<font color="#CCCCCC">certificate shouldn't be too difficult</font>

444
00:21:39,239 --> 00:21:44,830
<font color="#CCCCCC">as a</font><font color="#E5E5E5"> developer I know that many</font><font color="#CCCCCC"> of the</font>

445
00:21:42,399 --> 00:21:47,709
API is being used<font color="#E5E5E5"> for validating</font>

446
00:21:44,830 --> 00:21:49,779
<font color="#CCCCCC">as-as-as certificates are not as user or</font>

447
00:21:47,710 --> 00:21:52,509
developer<font color="#E5E5E5"> friendly as they</font><font color="#CCCCCC"> should be and</font>

448
00:21:49,779 --> 00:21:54,369
even<font color="#CCCCCC"> more in the meantime it's</font>

449
00:21:52,509 --> 00:21:57,210
<font color="#CCCCCC">registered as a back in the Kaurava a</font>

450
00:21:54,369 --> 00:21:57,209
<font color="#E5E5E5">back</font><font color="#CCCCCC"> trekker</font>

451
00:21:57,419 --> 00:22:02,529
but it's most likely a back that will

452
00:22:00,339 --> 00:22:04,059
not be closed<font color="#CCCCCC"> because there's a heavy</font>

453
00:22:02,529 --> 00:22:08,080
debate on it if this<font color="#E5E5E5"> is a bug or</font><font color="#CCCCCC"> feature</font>

454
00:22:04,059 --> 00:22:09,560
<font color="#CCCCCC">and if you read closely</font><font color="#E5E5E5"> here the bug</font>

455
00:22:08,080 --> 00:22:12,560
report<font color="#CCCCCC"> reads</font>

456
00:22:09,560 --> 00:22:15,020
now when you<font color="#CCCCCC"> create a debuggable</font><font color="#E5E5E5"> Cordoba</font>

457
00:22:12,560 --> 00:22:17,060
<font color="#CCCCCC">build that's by the</font><font color="#E5E5E5"> way the</font><font color="#CCCCCC"> default</font>

458
00:22:15,020 --> 00:22:19,100
behavior if<font color="#CCCCCC"> you are building</font><font color="#E5E5E5"> Cordova</font>

459
00:22:17,060 --> 00:22:22,159
applications on the command like like

460
00:22:19,100 --> 00:22:26,899
using<font color="#E5E5E5"> the code of our run Android mode</font>

461
00:22:22,160 --> 00:22:31,220
for<font color="#CCCCCC"> example all</font><font color="#E5E5E5"> how HTTPS certificates</font>

462
00:22:26,900 --> 00:22:34,940
<font color="#E5E5E5">errors are ignored silently that means</font>

463
00:22:31,220 --> 00:22:37,820
as soon<font color="#E5E5E5"> as your ship accidentally</font><font color="#CCCCCC"> or by</font>

464
00:22:34,940 --> 00:22:40,220
conscious decision<font color="#CCCCCC"> and</font><font color="#E5E5E5"> Cordova app with</font>

465
00:22:37,820 --> 00:22:44,090
the debug flag in the configuration<font color="#E5E5E5"> set</font>

466
00:22:40,220 --> 00:22:45,500
to true<font color="#E5E5E5"> all</font><font color="#CCCCCC"> user</font><font color="#E5E5E5"> certificates will not</font>

467
00:22:44,090 --> 00:22:48,230
be validated even if you have

468
00:22:45,500 --> 00:22:51,620
<font color="#CCCCCC">implemented</font><font color="#E5E5E5"> correctly</font><font color="#CCCCCC"> all</font><font color="#E5E5E5"> the SSL</font>

469
00:22:48,230 --> 00:22:54,260
certificate checks<font color="#CCCCCC"> so that's really kind</font>

470
00:22:51,620 --> 00:22:56,510
<font color="#E5E5E5">of a correlation between two options</font>

471
00:22:54,260 --> 00:22:59,240
<font color="#E5E5E5">wanting to debug an application and</font>

472
00:22:56,510 --> 00:23:02,450
wanting<font color="#CCCCCC"> to disable for certain testing</font>

473
00:22:59,240 --> 00:23:04,880
purposes the<font color="#E5E5E5"> SSL checks which are now in</font>

474
00:23:02,450 --> 00:23:09,020
one configuration flag which<font color="#E5E5E5"> is really</font>

475
00:23:04,880 --> 00:23:11,540
not<font color="#E5E5E5"> intuitive and I guess not many</font>

476
00:23:09,020 --> 00:23:13,760
people developing Cordova applications

477
00:23:11,540 --> 00:23:15,800
are actually<font color="#CCCCCC"> aware of that</font><font color="#E5E5E5"> behavior</font><font color="#CCCCCC"> so</font>

478
00:23:13,760 --> 00:23:19,790
keep these kind of<font color="#E5E5E5"> strange behaviors in</font>

479
00:23:15,800 --> 00:23:21,620
mind as well<font color="#CCCCCC"> if you want</font><font color="#E5E5E5"> to look up the</font>

480
00:23:19,790 --> 00:23:24,230
<font color="#CCCCCC">whole bug report you will</font><font color="#E5E5E5"> see</font><font color="#CCCCCC"> that</font>

481
00:23:21,620 --> 00:23:25,879
<font color="#CCCCCC">people</font><font color="#E5E5E5"> are discussing</font><font color="#CCCCCC"> and the final</font>

482
00:23:24,230 --> 00:23:28,910
conclusion<font color="#CCCCCC"> at the moment is that</font><font color="#E5E5E5"> most</font>

483
00:23:25,880 --> 00:23:31,160
<font color="#CCCCCC">likely</font><font color="#E5E5E5"> I don't believe that it will be</font>

484
00:23:28,910 --> 00:23:32,690
<font color="#E5E5E5">fixed or changed the behavior</font><font color="#CCCCCC"> the key</font>

485
00:23:31,160 --> 00:23:35,030
<font color="#E5E5E5">because</font><font color="#CCCCCC"> it seems to be</font><font color="#E5E5E5"> technically</font>

486
00:23:32,690 --> 00:23:38,300
difficult<font color="#E5E5E5"> for the code of our people to</font>

487
00:23:35,030 --> 00:23:41,060
change that<font color="#E5E5E5"> even so from a security</font>

488
00:23:38,300 --> 00:23:43,070
<font color="#E5E5E5">perspective I would consider</font><font color="#CCCCCC"> that close</font>

489
00:23:41,060 --> 00:23:46,790
to<font color="#CCCCCC"> being a disaster in terms of</font>

490
00:23:43,070 --> 00:23:48,110
usability for developers now and that's

491
00:23:46,790 --> 00:23:50,780
clearly assigned<font color="#CCCCCC"> where we make it very</font>

492
00:23:48,110 --> 00:23:53,540
<font color="#CCCCCC">hard</font><font color="#E5E5E5"> for</font><font color="#CCCCCC"> people to develop applications</font>

493
00:23:50,780 --> 00:23:57,170
that are<font color="#E5E5E5"> secured</font><font color="#CCCCCC"> by default without</font><font color="#E5E5E5"> any</font>

494
00:23:53,540 --> 00:23:58,700
good<font color="#E5E5E5"> reason for doing so we have seen</font>

495
00:23:57,170 --> 00:24:00,440
their vulnerabilities in the frameworks

496
00:23:58,700 --> 00:24:01,880
as well and<font color="#CCCCCC"> actually those frameworks</font>

497
00:24:00,440 --> 00:24:03,020
that allow you to<font color="#CCCCCC"> program your</font>

498
00:24:01,880 --> 00:24:07,070
application in many<font color="#E5E5E5"> different</font>

499
00:24:03,020 --> 00:24:10,340
<font color="#E5E5E5">technologies</font><font color="#CCCCCC"> usually rather complex</font><font color="#E5E5E5"> and</font>

500
00:24:07,070 --> 00:24:12,919
complex<font color="#E5E5E5"> software's we all know tends to</font>

501
00:24:10,340 --> 00:24:14,840
have<font color="#E5E5E5"> bugs as well</font><font color="#CCCCCC"> and vulnerabilities</font><font color="#E5E5E5"> so</font>

502
00:24:12,920 --> 00:24:18,320
there's the<font color="#E5E5E5"> clear recommendation that</font>

503
00:24:14,840 --> 00:24:20,179
<font color="#E5E5E5">you should use the latest</font><font color="#CCCCCC"> version of the</font>

504
00:24:18,320 --> 00:24:22,070
various frameworks that<font color="#CCCCCC"> you are using</font>

505
00:24:20,180 --> 00:24:23,419
<font color="#E5E5E5">the general and our experience a good</font>

506
00:24:22,070 --> 00:24:27,320
<font color="#E5E5E5">recommendation in terms</font><font color="#CCCCCC"> of</font>

507
00:24:23,419 --> 00:24:30,099
using third-party<font color="#E5E5E5"> library as Cordova is</font>

508
00:24:27,320 --> 00:24:33,678
no source projects<font color="#CCCCCC"> an open-source</font>

509
00:24:30,099 --> 00:24:36,320
<font color="#E5E5E5">framework</font><font color="#CCCCCC"> you most likely need to</font>

510
00:24:33,679 --> 00:24:38,089
monitor vulnerabilities yourself<font color="#E5E5E5"> most</font>

511
00:24:36,320 --> 00:24:40,129
likely if you're<font color="#E5E5E5"> using pure code while</font>

512
00:24:38,089 --> 00:24:42,259
you don't<font color="#E5E5E5"> have</font><font color="#CCCCCC"> a support contract</font><font color="#E5E5E5"> where</font>

513
00:24:40,129 --> 00:24:45,139
a vendor<font color="#E5E5E5"> is notifying you</font><font color="#CCCCCC"> about</font>

514
00:24:42,259 --> 00:24:47,719
vulnerabilities<font color="#CCCCCC"> so one way for example</font>

515
00:24:45,139 --> 00:24:50,478
is looking<font color="#CCCCCC"> to CV database</font><font color="#E5E5E5"> and then</font>

516
00:24:47,719 --> 00:24:51,950
acting accordingly<font color="#CCCCCC"> when vulnerabilities</font>

517
00:24:50,479 --> 00:24:54,379
are being<font color="#E5E5E5"> published for a version of</font>

518
00:24:51,950 --> 00:24:58,849
Cordova that you are currently consuming

519
00:24:54,379 --> 00:25:00,619
<font color="#CCCCCC">I hope also</font><font color="#E5E5E5"> that if you are doing</font>

520
00:24:58,849 --> 00:25:03,229
security velopment you are<font color="#E5E5E5"> using some</font>

521
00:25:00,619 --> 00:25:06,079
form<font color="#E5E5E5"> of</font><font color="#CCCCCC"> security testing</font><font color="#E5E5E5"> in your</font><font color="#CCCCCC"> sdlc</font>

522
00:25:03,229 --> 00:25:09,639
for example<font color="#E5E5E5"> static analysis which is</font>

523
00:25:06,079 --> 00:25:12,440
<font color="#E5E5E5">kind of the workhorse of a secure</font>

524
00:25:09,639 --> 00:25:14,539
programming practice a tool that

525
00:25:12,440 --> 00:25:18,320
statically<font color="#E5E5E5"> analyzable</font><font color="#CCCCCC"> without executing</font>

526
00:25:14,539 --> 00:25:20,149
<font color="#E5E5E5">the source code of programs and computes</font>

527
00:25:18,320 --> 00:25:21,979
<font color="#E5E5E5">a kind of heat map showing developers</font>

528
00:25:20,149 --> 00:25:24,529
which are areas<font color="#CCCCCC"> that are</font><font color="#E5E5E5"> potentially</font>

529
00:25:21,979 --> 00:25:26,269
insecure there are a lot of different

530
00:25:24,529 --> 00:25:28,609
tools<font color="#E5E5E5"> available</font><font color="#CCCCCC"> I'm not</font><font color="#E5E5E5"> talking here</font>

531
00:25:26,269 --> 00:25:30,919
<font color="#CCCCCC">about one specific tool</font><font color="#E5E5E5"> just as a</font>

532
00:25:28,609 --> 00:25:33,769
<font color="#CCCCCC">general consideration if you have these</font>

533
00:25:30,919 --> 00:25:35,959
kind of hybrid frameworks<font color="#E5E5E5"> usually your</font>

534
00:25:33,769 --> 00:25:39,099
static analysis tool<font color="#E5E5E5"> while it can</font>

535
00:25:35,959 --> 00:25:42,969
analyze or many of them can analyze

536
00:25:39,099 --> 00:25:44,869
various languages<font color="#E5E5E5"> they will not connect</font>

537
00:25:42,969 --> 00:25:46,969
components written in different

538
00:25:44,869 --> 00:25:50,238
languages<font color="#E5E5E5"> and analyze</font><font color="#CCCCCC"> data flows between</font>

539
00:25:46,969 --> 00:25:52,219
them<font color="#CCCCCC"> in principle</font><font color="#E5E5E5"> there</font><font color="#CCCCCC"> are three</font><font color="#E5E5E5"> ways</font>

540
00:25:50,239 --> 00:25:55,099
for<font color="#E5E5E5"> analyzing these kind of hybrid apps</font>

541
00:25:52,219 --> 00:25:58,459
if we would have<font color="#E5E5E5"> an ideal static</font>

542
00:25:55,099 --> 00:26:00,019
<font color="#E5E5E5">analysis tool the one would be let's let</font>

543
00:25:58,459 --> 00:26:02,539
the tool run over the whole framework

544
00:26:00,019 --> 00:26:04,369
source code and learn how that<font color="#E5E5E5"> framework</font>

545
00:26:02,539 --> 00:26:06,979
contact connects the<font color="#E5E5E5"> different</font>

546
00:26:04,369 --> 00:26:08,389
components of<font color="#CCCCCC"> your program</font><font color="#E5E5E5"> that would be</font>

547
00:26:06,979 --> 00:26:10,579
cool if<font color="#CCCCCC"> it would have such a problem</font>

548
00:26:08,389 --> 00:26:12,738
<font color="#CCCCCC">because we wouldn't</font><font color="#E5E5E5"> need to configure</font>

549
00:26:10,579 --> 00:26:14,450
anything<font color="#E5E5E5"> in which is with each new</font>

550
00:26:12,739 --> 00:26:16,429
version<font color="#E5E5E5"> of Cordova</font><font color="#CCCCCC"> or a different</font>

551
00:26:14,450 --> 00:26:19,219
framework<font color="#CCCCCC"> who would</font><font color="#E5E5E5"> rerun the static</font>

552
00:26:16,429 --> 00:26:22,459
<font color="#E5E5E5">analysis tool train it so to speak</font><font color="#CCCCCC"> and</font>

553
00:26:19,219 --> 00:26:24,320
we would be settled sadly that seems to

554
00:26:22,459 --> 00:26:26,959
<font color="#E5E5E5">be unlikely</font><font color="#CCCCCC"> that we get such a tool in</font>

555
00:26:24,320 --> 00:26:30,468
the near future<font color="#CCCCCC"> the other</font><font color="#E5E5E5"> alternative</font>

556
00:26:26,959 --> 00:26:32,359
would be modeling<font color="#E5E5E5"> the framework</font><font color="#CCCCCC"> that</font>

557
00:26:30,469 --> 00:26:35,509
means you need to model how the

558
00:26:32,359 --> 00:26:37,419
framework<font color="#E5E5E5"> connects the various parts of</font>

559
00:26:35,509 --> 00:26:41,000
your<font color="#CCCCCC"> application</font>

560
00:26:37,420 --> 00:26:42,680
and then insert the data flows in that

561
00:26:41,000 --> 00:26:47,420
<font color="#E5E5E5">that's something which we actually can</font>

562
00:26:42,680 --> 00:26:49,340
expect to vendors to do and our research

563
00:26:47,420 --> 00:26:51,440
prototype shows that<font color="#E5E5E5"> this is actually a</font>

564
00:26:49,340 --> 00:26:53,570
very<font color="#CCCCCC"> effective way</font><font color="#E5E5E5"> of handling that</font>

565
00:26:51,440 --> 00:26:58,070
problem<font color="#CCCCCC"> because</font><font color="#E5E5E5"> it has the big advantage</font>

566
00:26:53,570 --> 00:27:00,020
<font color="#CCCCCC">that you only have to adapt your static</font>

567
00:26:58,070 --> 00:27:02,480
analysis tool once for the<font color="#CCCCCC"> cordova</font>

568
00:27:00,020 --> 00:27:04,879
platform<font color="#E5E5E5"> and it automatically works for</font>

569
00:27:02,480 --> 00:27:07,360
all<font color="#E5E5E5"> plugins being provided also for</font>

570
00:27:04,880 --> 00:27:10,510
newly written<font color="#E5E5E5"> plugins or for</font>

571
00:27:07,360 --> 00:27:14,030
modifications that you<font color="#E5E5E5"> might want to do</font>

572
00:27:10,510 --> 00:27:17,140
<font color="#CCCCCC">and the third way</font><font color="#E5E5E5"> that's kind of the</font>

573
00:27:14,030 --> 00:27:19,490
solution if<font color="#CCCCCC"> you cannot analyze or add</font>

574
00:27:17,140 --> 00:27:22,130
analyze both languages<font color="#E5E5E5"> and bring the</font>

575
00:27:19,490 --> 00:27:25,030
<font color="#CCCCCC">results together</font><font color="#E5E5E5"> is modeling the plugins</font>

576
00:27:22,130 --> 00:27:27,890
the interfaces so<font color="#CCCCCC"> that you can run</font>

577
00:27:25,030 --> 00:27:30,920
<font color="#E5E5E5">aesthetic analysis in</font><font color="#CCCCCC"> both language</font>

578
00:27:27,890 --> 00:27:34,880
parts and<font color="#E5E5E5"> just decide in terms of the</font>

579
00:27:30,920 --> 00:27:37,190
interfaces if the data flows are secure

580
00:27:34,880 --> 00:27:39,560
or insecure<font color="#E5E5E5"> so let's have a closer</font><font color="#CCCCCC"> look</font>

581
00:27:37,190 --> 00:27:42,890
on<font color="#E5E5E5"> that or my recommendation on that</font><font color="#CCCCCC"> or</font>

582
00:27:39,560 --> 00:27:44,899
recommendation on that<font color="#E5E5E5"> is in case you</font>

583
00:27:42,890 --> 00:27:47,900
are developing hybrid applications in a

584
00:27:44,900 --> 00:27:50,410
using<font color="#E5E5E5"> aesthetic analysis tool and you</font>

585
00:27:47,900 --> 00:27:53,960
find yourself that you rarely ever

586
00:27:50,410 --> 00:27:58,190
develop<font color="#E5E5E5"> plugins you're mostly developing</font>

587
00:27:53,960 --> 00:27:59,960
html5 JavaScript<font color="#E5E5E5"> create</font><font color="#CCCCCC"> I hope you have</font>

588
00:27:58,190 --> 00:28:01,760
a static analysis tool that<font color="#E5E5E5"> works well</font>

589
00:27:59,960 --> 00:28:05,180
<font color="#E5E5E5">with JavaScript and supports you and</font>

590
00:28:01,760 --> 00:28:07,610
that please ensure that your static

591
00:28:05,180 --> 00:28:10,670
<font color="#E5E5E5">analysis tool then knows the api's of</font>

592
00:28:07,610 --> 00:28:13,280
the various Cordova plugins that<font color="#CCCCCC"> you</font><font color="#E5E5E5"> use</font>

593
00:28:10,670 --> 00:28:15,290
<font color="#E5E5E5">so</font><font color="#CCCCCC"> that it can really do a proper</font>

594
00:28:13,280 --> 00:28:17,450
<font color="#CCCCCC">dataflow analysis in terms</font><font color="#E5E5E5"> of knowing</font>

595
00:28:15,290 --> 00:28:20,090
what are the dangerous<font color="#E5E5E5"> things and</font>

596
00:28:17,450 --> 00:28:22,580
sources are that where data either

597
00:28:20,090 --> 00:28:25,370
<font color="#E5E5E5">enters the native side of the code of</font>

598
00:28:22,580 --> 00:28:27,980
<font color="#CCCCCC">our framework</font><font color="#E5E5E5"> or is received from the</font>

599
00:28:25,370 --> 00:28:29,360
native<font color="#E5E5E5"> side of the coral framework and</font>

600
00:28:27,980 --> 00:28:33,230
if you are<font color="#E5E5E5"> working together with</font><font color="#CCCCCC"> a</font>

601
00:28:29,360 --> 00:28:35,570
<font color="#E5E5E5">commercial arm software vendor talk to</font>

602
00:28:33,230 --> 00:28:37,790
the support<font color="#E5E5E5"> guys of that vendor if they</font>

603
00:28:35,570 --> 00:28:39,980
support<font color="#E5E5E5"> the plugins of Cordova that you</font>

604
00:28:37,790 --> 00:28:44,210
are actually<font color="#E5E5E5"> mostly using in your</font>

605
00:28:39,980 --> 00:28:47,330
<font color="#CCCCCC">development if you</font><font color="#E5E5E5"> under the other side</font>

606
00:28:44,210 --> 00:28:50,020
<font color="#CCCCCC">Mel</font><font color="#E5E5E5"> is mostly developing plugins then</font>

607
00:28:47,330 --> 00:28:50,020
you can do the

608
00:28:50,750 --> 00:28:54,590
the same approach only<font color="#CCCCCC"> on the</font><font color="#E5E5E5"> Chava on</font>

609
00:28:52,549 --> 00:28:57,379
the native<font color="#E5E5E5"> side so hopefully</font><font color="#CCCCCC"> you have a</font>

610
00:28:54,590 --> 00:29:00,168
nicely working static analysis tool for

611
00:28:57,380 --> 00:29:03,169
your native language like<font color="#E5E5E5"> Java again</font>

612
00:29:00,169 --> 00:29:06,110
ensure<font color="#CCCCCC"> that the</font><font color="#E5E5E5"> plug-in API interfaces</font>

613
00:29:03,169 --> 00:29:07,220
<font color="#E5E5E5">are configured so that you have the</font>

614
00:29:06,110 --> 00:29:09,139
knowledge<font color="#CCCCCC"> that the tool has the</font>

615
00:29:07,220 --> 00:29:11,990
<font color="#CCCCCC">knowledge about insecure sources and</font>

616
00:29:09,140 --> 00:29:15,530
<font color="#E5E5E5">sinks where data is received from</font><font color="#CCCCCC"> the</font>

617
00:29:11,990 --> 00:29:18,590
JavaScript<font color="#CCCCCC"> world if</font><font color="#E5E5E5"> you're really</font>

618
00:29:15,530 --> 00:29:21,200
developing<font color="#E5E5E5"> Cordova apps in both sides</font>

619
00:29:18,590 --> 00:29:23,149
<font color="#E5E5E5">then</font><font color="#CCCCCC"> there in principle two ways of</font>

620
00:29:21,200 --> 00:29:25,580
doing that if you have a tool that<font color="#E5E5E5"> works</font>

621
00:29:23,150 --> 00:29:28,070
<font color="#CCCCCC">nicely</font><font color="#E5E5E5"> for</font><font color="#CCCCCC"> JavaScript another tool that</font>

622
00:29:25,580 --> 00:29:30,530
<font color="#E5E5E5">works</font><font color="#CCCCCC"> nicely for Java then you can just</font>

623
00:29:28,070 --> 00:29:33,830
<font color="#E5E5E5">combine the two approaches I just</font>

624
00:29:30,530 --> 00:29:36,428
discussed<font color="#CCCCCC"> using the tools</font><font color="#E5E5E5"> scanning the</font>

625
00:29:33,830 --> 00:29:39,379
source code in<font color="#CCCCCC"> isolation but again</font>

626
00:29:36,429 --> 00:29:43,220
<font color="#CCCCCC">ensure that</font><font color="#E5E5E5"> the API is for the plugins</font>

627
00:29:39,380 --> 00:29:45,169
are actually configured<font color="#CCCCCC"> if you're under</font>

628
00:29:43,220 --> 00:29:48,140
lucky<font color="#CCCCCC"> situation that you</font><font color="#E5E5E5"> have a tool</font>

629
00:29:45,169 --> 00:29:50,840
which can scan each other<font color="#CCCCCC"> and</font><font color="#E5E5E5"> JavaScript</font>

630
00:29:48,140 --> 00:29:54,460
very well and where you can insert

631
00:29:50,840 --> 00:29:57,049
custom data flows<font color="#CCCCCC"> then it's actually a</font>

632
00:29:54,460 --> 00:29:59,120
recommended<font color="#CCCCCC"> way or a</font><font color="#E5E5E5"> good idea to talk</font>

633
00:29:57,049 --> 00:30:02,030
<font color="#E5E5E5">to</font><font color="#CCCCCC"> the vendor of</font><font color="#E5E5E5"> the tool if you can</font>

634
00:29:59,120 --> 00:30:03,350
actually<font color="#E5E5E5"> connect the data flow and start</font>

635
00:30:02,030 --> 00:30:05,809
and end points in the Java and

636
00:30:03,350 --> 00:30:07,490
JavaScript world<font color="#E5E5E5"> so that all the</font>

637
00:30:05,809 --> 00:30:10,158
<font color="#E5E5E5">different checks that your tool vendor</font>

638
00:30:07,490 --> 00:30:13,120
provides are also<font color="#E5E5E5"> working across the</font>

639
00:30:10,159 --> 00:30:17,030
language barrier from<font color="#E5E5E5"> the native to the</font>

640
00:30:13,120 --> 00:30:19,370
JavaScript<font color="#CCCCCC"> html5 world</font><font color="#E5E5E5"> if you are mainly</font>

641
00:30:17,030 --> 00:30:21,950
using<font color="#E5E5E5"> dynamic analysis like for example</font>

642
00:30:19,370 --> 00:30:24,139
penetration testing<font color="#E5E5E5"> I don't think there</font>

643
00:30:21,950 --> 00:30:25,610
<font color="#CCCCCC">are so many</font><font color="#E5E5E5"> automated dynamic</font>

644
00:30:24,140 --> 00:30:27,710
application security testing tools

645
00:30:25,610 --> 00:30:30,110
available<font color="#E5E5E5"> but work on mobile</font>

646
00:30:27,710 --> 00:30:34,370
applications<font color="#CCCCCC"> then include in</font><font color="#E5E5E5"> your</font>

647
00:30:30,110 --> 00:30:36,709
penetration checks checks for checking

648
00:30:34,370 --> 00:30:39,439
the security<font color="#CCCCCC"> of those cross-language</font>

649
00:30:36,710 --> 00:30:41,539
<font color="#E5E5E5">calls like think</font><font color="#CCCCCC"> about the mobile</font>

650
00:30:39,440 --> 00:30:44,059
<font color="#E5E5E5">application that</font><font color="#CCCCCC"> shows you a web</font>

651
00:30:41,539 --> 00:30:46,789
interface<font color="#E5E5E5"> suddenly can have a sequel</font>

652
00:30:44,059 --> 00:30:49,580
injection vulnerability locally not only

653
00:30:46,789 --> 00:30:52,220
towards the<font color="#CCCCCC"> server</font><font color="#E5E5E5"> side but really</font><font color="#CCCCCC"> local</font>

654
00:30:49,580 --> 00:30:54,020
towards for example<font color="#CCCCCC"> a sequel</font><font color="#E5E5E5"> Lite</font>

655
00:30:52,220 --> 00:30:58,490
implementation being provided on<font color="#CCCCCC"> a</font>

656
00:30:54,020 --> 00:31:00,080
native part also<font color="#E5E5E5"> check for plugins</font><font color="#CCCCCC"> in</font>

657
00:30:58,490 --> 00:31:02,179
your applications<font color="#E5E5E5"> that might only be</font>

658
00:31:00,080 --> 00:31:03,730
<font color="#E5E5E5">shipping the native part because the</font>

659
00:31:02,179 --> 00:31:06,890
developer thought

660
00:31:03,730 --> 00:31:08,780
removing the<font color="#E5E5E5"> JavaScript part of a</font>

661
00:31:06,890 --> 00:31:11,330
<font color="#CCCCCC">plug-in that provides the JavaScript</font>

662
00:31:08,780 --> 00:31:14,120
interfaces already is sufficient<font color="#E5E5E5"> for</font>

663
00:31:11,330 --> 00:31:16,460
disabling a<font color="#CCCCCC"> plug-in</font><font color="#E5E5E5"> that's actually not</font>

664
00:31:14,120 --> 00:31:19,280
true<font color="#CCCCCC"> if you're assuming that your</font>

665
00:31:16,460 --> 00:31:20,870
<font color="#E5E5E5">JavaScript part could have a preferred</font>

666
00:31:19,280 --> 00:31:22,280
scripting vulnerability<font color="#CCCCCC"> or some other</font>

667
00:31:20,870 --> 00:31:24,860
vulnerability where an attacker can

668
00:31:22,280 --> 00:31:28,190
inject JavaScript<font color="#CCCCCC"> then of</font><font color="#E5E5E5"> course an</font>

669
00:31:24,860 --> 00:31:30,370
attacker can also inject the missing

670
00:31:28,190 --> 00:31:34,490
parts for accessing<font color="#E5E5E5"> the Java interfaces</font>

671
00:31:30,370 --> 00:31:38,600
<font color="#E5E5E5">exposed by a</font><font color="#CCCCCC"> plug-in so if you want to</font>

672
00:31:34,490 --> 00:31:40,190
remove<font color="#E5E5E5"> plugins removed both sides</font><font color="#CCCCCC"> and in</font>

673
00:31:38,600 --> 00:31:42,350
some cases you might<font color="#CCCCCC"> even want to</font>

674
00:31:40,190 --> 00:31:45,380
<font color="#E5E5E5">customize blocking in terms of providing</font>

675
00:31:42,350 --> 00:31:47,629
for example a read-only<font color="#E5E5E5"> access blacking</font>

676
00:31:45,380 --> 00:31:50,410
to the calendar of<font color="#CCCCCC"> the device</font><font color="#E5E5E5"> or</font><font color="#CCCCCC"> the</font>

677
00:31:47,630 --> 00:31:53,150
address<font color="#E5E5E5"> book of the device and I</font>

678
00:31:50,410 --> 00:31:55,809
motivate told it already<font color="#E5E5E5"> a couple</font><font color="#CCCCCC"> of</font>

679
00:31:53,150 --> 00:31:58,280
times<font color="#CCCCCC"> if you're doing a manual manual</font>

680
00:31:55,809 --> 00:32:01,040
<font color="#E5E5E5">analysis of your checks or even</font>

681
00:31:58,280 --> 00:32:03,410
automatically before<font color="#CCCCCC"> you ship</font><font color="#E5E5E5"> apk files</font>

682
00:32:01,040 --> 00:32:06,139
to customers check that<font color="#CCCCCC"> the debug mode</font>

683
00:32:03,410 --> 00:32:11,240
is disabled<font color="#E5E5E5"> because it disables all the</font>

684
00:32:06,140 --> 00:32:13,010
<font color="#E5E5E5">SSL checks some final conclusion hybrid</font>

685
00:32:11,240 --> 00:32:14,390
mobile<font color="#E5E5E5"> apps are getting more popular</font><font color="#CCCCCC"> at</font>

686
00:32:13,010 --> 00:32:17,210
least Gartner and other research

687
00:32:14,390 --> 00:32:21,230
institutes are telling us<font color="#E5E5E5"> that this is</font>

688
00:32:17,210 --> 00:32:22,910
<font color="#CCCCCC">the fact</font><font color="#E5E5E5"> I'm at least seeing that they</font>

689
00:32:21,230 --> 00:32:25,429
<font color="#E5E5E5">are recommended</font><font color="#CCCCCC"> by enterprise vendors</font>

690
00:32:22,910 --> 00:32:28,490
and by software<font color="#E5E5E5"> developers that</font><font color="#CCCCCC"> need to</font>

691
00:32:25,429 --> 00:32:30,710
provide<font color="#E5E5E5"> additional features for</font><font color="#CCCCCC"> existing</font>

692
00:32:28,490 --> 00:32:33,410
products on mobile apps<font color="#CCCCCC"> that should be</font>

693
00:32:30,710 --> 00:32:36,110
rolled out<font color="#E5E5E5"> simultaneously to multiple</font>

694
00:32:33,410 --> 00:32:38,410
<font color="#E5E5E5">platforms</font><font color="#CCCCCC"> where companies that are</font>

695
00:32:36,110 --> 00:32:41,899
really focusing<font color="#E5E5E5"> on mobile</font><font color="#CCCCCC"> development</font>

696
00:32:38,410 --> 00:32:44,240
<font color="#E5E5E5">often</font><font color="#CCCCCC"> prefer native apps because they</font>

697
00:32:41,900 --> 00:32:46,700
might<font color="#E5E5E5"> provide a better or richer user</font>

698
00:32:44,240 --> 00:32:51,230
experience that is adapted<font color="#CCCCCC"> to those</font>

699
00:32:46,700 --> 00:32:53,150
platforms<font color="#CCCCCC"> where I'm</font><font color="#E5E5E5"> seeing increased use</font>

700
00:32:51,230 --> 00:32:55,940
of<font color="#CCCCCC"> mobile apps</font><font color="#E5E5E5"> outside</font><font color="#CCCCCC"> the traditional</font>

701
00:32:53,150 --> 00:33:00,110
<font color="#E5E5E5">mobile device business so for example</font>

702
00:32:55,940 --> 00:33:02,600
web kiosks or<font color="#CCCCCC"> smart TVs again they're</font>

703
00:33:00,110 --> 00:33:05,740
adaptable<font color="#E5E5E5"> mobile</font><font color="#CCCCCC"> websites already</font>

704
00:33:02,600 --> 00:33:10,550
<font color="#E5E5E5">existing easily integrate able it seems</font>

705
00:33:05,740 --> 00:33:13,400
to reduce the<font color="#E5E5E5"> development</font><font color="#CCCCCC"> cost and</font><font color="#E5E5E5"> it's</font>

706
00:33:10,550 --> 00:33:15,350
already over<font color="#E5E5E5"> motivated if you are going</font>

707
00:33:13,400 --> 00:33:17,400
into<font color="#E5E5E5"> the</font><font color="#CCCCCC"> business of developing secure</font>

708
00:33:15,350 --> 00:33:19,409
hybrid mobile<font color="#E5E5E5"> apps</font>

709
00:33:17,400 --> 00:33:21,060
think about that<font color="#E5E5E5"> you need to have the</font>

710
00:33:19,410 --> 00:33:23,190
combined knowledge of secure web

711
00:33:21,060 --> 00:33:26,070
development<font color="#E5E5E5"> secure native development</font>

712
00:33:23,190 --> 00:33:28,560
<font color="#E5E5E5">secure mobile development and the</font>

713
00:33:26,070 --> 00:33:31,530
security features of the hyper platform

714
00:33:28,560 --> 00:33:56,600
that<font color="#E5E5E5"> we are using</font><font color="#CCCCCC"> um was not I'm</font><font color="#E5E5E5"> happy</font>

715
00:33:31,530 --> 00:33:56,600
to answer questions<font color="#E5E5E5"> thanks a lot not in</font>

716
00:33:59,390 --> 00:34:04,140
we haven't<font color="#E5E5E5"> checked that library</font><font color="#CCCCCC"> in</font>

717
00:34:01,710 --> 00:34:06,060
particular<font color="#CCCCCC"> but we</font><font color="#E5E5E5"> notice that many</font>

718
00:34:04,140 --> 00:34:08,490
developers<font color="#CCCCCC"> against</font><font color="#E5E5E5"> when</font><font color="#CCCCCC"> they start they</font>

719
00:34:06,060 --> 00:34:14,250
<font color="#CCCCCC">could</font><font color="#E5E5E5"> overhead to just use their</font>

720
00:34:08,489 --> 00:34:16,529
familiar<font color="#CCCCCC"> JavaScript libraries</font><font color="#E5E5E5"> and now I</font>

721
00:34:14,250 --> 00:34:19,380
mean it's not a contradiction<font color="#E5E5E5"> Cordova</font>

722
00:34:16,530 --> 00:34:21,780
provides the core bare metal solution

723
00:34:19,380 --> 00:34:23,850
that JavaScript applications can<font color="#CCCCCC"> access</font>

724
00:34:21,780 --> 00:34:26,100
native device features and then you want

725
00:34:23,850 --> 00:34:27,389
to<font color="#E5E5E5"> have some rich JavaScript development</font>

726
00:34:26,100 --> 00:34:30,540
experience and then you're using

727
00:34:27,389 --> 00:34:33,029
something like<font color="#E5E5E5"> angel angularjs or some</font>

728
00:34:30,540 --> 00:34:39,630
of the mobile<font color="#E5E5E5"> specific variants or but</font>

729
00:34:33,030 --> 00:34:42,320
they haven't done<font color="#E5E5E5"> statistics on</font><font color="#CCCCCC"> that any</font>

730
00:34:39,630 --> 00:34:42,320
<font color="#E5E5E5">a</font><font color="#CCCCCC"> lock-up</font>

731
00:34:58,730 --> 00:35:08,070
<font color="#CCCCCC">yeah yeah if you're packaging</font><font color="#E5E5E5"> one way of</font>

732
00:35:05,550 --> 00:35:10,050
using<font color="#E5E5E5"> Cordova is so to speak to package</font>

733
00:35:08,070 --> 00:35:11,940
a mobile website<font color="#CCCCCC"> as an application</font><font color="#E5E5E5"> so</font>

734
00:35:10,050 --> 00:35:14,460
<font color="#CCCCCC">that</font><font color="#E5E5E5"> the user has</font><font color="#CCCCCC"> the experience of a</font>

735
00:35:11,940 --> 00:35:16,200
<font color="#E5E5E5">mobile app but in reality the</font>

736
00:35:14,460 --> 00:35:19,080
application is actually<font color="#E5E5E5"> only in a very</font>

737
00:35:16,200 --> 00:35:20,939
<font color="#CCCCCC">thin layer towards a mobile website and</font>

738
00:35:19,080 --> 00:35:23,549
then of course<font color="#CCCCCC"> people are penetration</font>

739
00:35:20,940 --> 00:35:25,920
testing the mobile website<font color="#CCCCCC"> and the</font>

740
00:35:23,550 --> 00:35:28,680
additional<font color="#E5E5E5"> security problems introduced</font>

741
00:35:25,920 --> 00:35:31,020
by Cordova are rather small if you're

742
00:35:28,680 --> 00:35:32,940
not using Cordova<font color="#E5E5E5"> for</font><font color="#CCCCCC"> accessing device</font>

743
00:35:31,020 --> 00:35:35,070
features but only as kind<font color="#CCCCCC"> of a</font>

744
00:35:32,940 --> 00:35:36,480
lightweight way of<font color="#E5E5E5"> shipping or mobile</font>

745
00:35:35,070 --> 00:35:38,400
<font color="#CCCCCC">web browser that you get an icon on</font><font color="#E5E5E5"> the</font>

746
00:35:36,480 --> 00:35:41,310
<font color="#CCCCCC">desktop and</font><font color="#E5E5E5"> a couple of other</font><font color="#CCCCCC"> apps</font>

747
00:35:38,400 --> 00:35:43,590
specific features you're covering

748
00:35:41,310 --> 00:35:47,450
already quite<font color="#E5E5E5"> a lot of potential</font>

749
00:35:43,590 --> 00:35:47,450
<font color="#CCCCCC">security problems by that approach yes I</font>

750
00:35:49,880 --> 00:36:11,700
don't<font color="#CCCCCC"> see any raised hands anymore but</font>

751
00:35:54,830 --> 00:36:14,790
yeah we've seen obfuscated apps<font color="#CCCCCC"> I don't</font>

752
00:36:11,700 --> 00:36:17,520
have any statistics<font color="#E5E5E5"> how many percent of</font>

753
00:36:14,790 --> 00:36:19,770
the apps were up to the skaters<font color="#CCCCCC"> inform a</font>

754
00:36:17,520 --> 00:36:23,870
gut feeling would<font color="#CCCCCC"> be not significant</font>

755
00:36:19,770 --> 00:36:23,870
more or less than<font color="#E5E5E5"> for</font><font color="#CCCCCC"> non-native apps</font>

