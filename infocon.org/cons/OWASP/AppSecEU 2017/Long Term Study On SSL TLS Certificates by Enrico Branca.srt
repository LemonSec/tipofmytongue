1
00:00:02,510 --> 00:00:08,240
<font color="#E5E5E5">okay so thanks everyone to be here</font>

2
00:00:06,160 --> 00:00:11,420
<font color="#CCCCCC">before</font><font color="#E5E5E5"> we start the lights will be</font>

3
00:00:08,240 --> 00:00:14,719
<font color="#CCCCCC">online if you want to take notes</font><font color="#E5E5E5"> okay</font>

4
00:00:11,420 --> 00:00:17,360
but the I will explain what<font color="#E5E5E5"> I've done</font>

5
00:00:14,719 --> 00:00:20,439
like a story<font color="#E5E5E5"> so it's much better if you</font>

6
00:00:17,360 --> 00:00:23,869
follow the story<font color="#CCCCCC"> and you see at the</font><font color="#E5E5E5"> end</font>

7
00:00:20,439 --> 00:00:27,669
<font color="#E5E5E5">some interesting stuff</font><font color="#CCCCCC"> that I found</font><font color="#E5E5E5"> so</font>

8
00:00:23,869 --> 00:00:32,750
this is a three years long research on

9
00:00:27,669 --> 00:00:35,539
SSL<font color="#E5E5E5"> not on this so SSL TLS more</font>

10
00:00:32,750 --> 00:00:37,070
specifically on RSA keys is not about

11
00:00:35,539 --> 00:00:41,750
crypto it's about<font color="#CCCCCC"> implementation of</font>

12
00:00:37,070 --> 00:00:45,079
crypto and how crypto<font color="#E5E5E5"> is perceived at</font>

13
00:00:41,750 --> 00:00:48,769
the moment and<font color="#E5E5E5"> I used live data</font>

14
00:00:45,079 --> 00:00:52,609
collected from several<font color="#E5E5E5"> sources over few</font>

15
00:00:48,769 --> 00:00:56,620
years<font color="#E5E5E5"> so the idea is</font><font color="#CCCCCC"> to go through a</font>

16
00:00:52,609 --> 00:00:59,840
series<font color="#CCCCCC"> of stuff that is simple example</font>

17
00:00:56,620 --> 00:01:02,000
<font color="#E5E5E5">big research some data and some graphs</font>

18
00:00:59,840 --> 00:01:08,030
<font color="#E5E5E5">and there's a conclusion and then we can</font>

19
00:01:02,000 --> 00:01:11,380
have<font color="#E5E5E5"> some</font><font color="#CCCCCC"> shop chat at the end ok so why</font>

20
00:01:08,030 --> 00:01:13,790
to check SSL TLS certificate<font color="#E5E5E5"> because</font>

21
00:01:11,380 --> 00:01:17,479
everyone<font color="#E5E5E5"> says we want more encryption we</font>

22
00:01:13,790 --> 00:01:19,250
want to<font color="#E5E5E5"> protect everything so the amount</font>

23
00:01:17,480 --> 00:01:21,950
of encrypted data is increasing but we

24
00:01:19,250 --> 00:01:24,620
have no<font color="#E5E5E5"> idea actually then creep the</font>

25
00:01:21,950 --> 00:01:25,940
data is<font color="#E5E5E5"> really secure</font><font color="#CCCCCC"> and we have an</font>

26
00:01:24,620 --> 00:01:27,890
<font color="#E5E5E5">idea what</font><font color="#CCCCCC"> it means encrypted data</font>

27
00:01:25,940 --> 00:01:33,140
usually<font color="#E5E5E5"> because we don't know how</font><font color="#CCCCCC"> it's</font>

28
00:01:27,890 --> 00:01:35,050
implemented or how is tested so some

29
00:01:33,140 --> 00:01:39,970
basics<font color="#E5E5E5"> what is a cryptographic key and</font>

30
00:01:35,050 --> 00:01:44,090
nothing credible is just numbers and

31
00:01:39,970 --> 00:01:48,170
these<font color="#CCCCCC"> numbers are usually</font><font color="#E5E5E5"> based on prime</font>

32
00:01:44,090 --> 00:01:50,690
numbers<font color="#CCCCCC"> so special numbers that divide</font>

33
00:01:48,170 --> 00:01:56,920
on the<font color="#CCCCCC"> Televisa bond by themselves for</font>

34
00:01:50,690 --> 00:02:00,679
one now why is important to<font color="#E5E5E5"> check this</font>

35
00:01:56,920 --> 00:02:04,430
<font color="#E5E5E5">because almost everything we using now</font>

36
00:02:00,680 --> 00:02:10,700
is using prime numbers so<font color="#CCCCCC"> some form of</font>

37
00:02:04,430 --> 00:02:12,409
crypto and there are no tests<font color="#E5E5E5"> there is</font>

38
00:02:10,699 --> 00:02:16,250
almost nothing to<font color="#E5E5E5"> check this kind of</font>

39
00:02:12,409 --> 00:02:19,190
stuff like<font color="#E5E5E5"> cryptographic correct</font>

40
00:02:16,250 --> 00:02:22,220
station or encrypted and<font color="#E5E5E5"> encrypted data</font>

41
00:02:19,190 --> 00:02:28,570
or how the system or the<font color="#E5E5E5"> application are</font>

42
00:02:22,220 --> 00:02:31,160
using it here are some of the many

43
00:02:28,570 --> 00:02:36,620
sources that<font color="#E5E5E5"> people</font><font color="#CCCCCC"> can use to collect</font>

44
00:02:31,160 --> 00:02:39,049
keys I used only we can say five<font color="#E5E5E5"> of them</font>

45
00:02:36,620 --> 00:02:41,060
instead<font color="#CCCCCC"> of</font><font color="#E5E5E5"> all the battery of systems</font>

46
00:02:39,050 --> 00:02:44,360
and I mention<font color="#CCCCCC"> only the most common</font>

47
00:02:41,060 --> 00:02:48,100
protocols<font color="#CCCCCC"> as a service</font><font color="#E5E5E5"> if you think</font>

48
00:02:44,360 --> 00:02:53,050
about services you can use<font color="#E5E5E5"> like chat</font>

49
00:02:48,100 --> 00:02:56,780
mobile phones application sign files

50
00:02:53,050 --> 00:03:00,440
streaming application<font color="#E5E5E5"> keys for file</font>

51
00:02:56,780 --> 00:03:03,920
encryption key for system stuff like

52
00:03:00,440 --> 00:03:06,350
<font color="#E5E5E5">BIOS</font><font color="#CCCCCC"> USI all of this is using</font>

53
00:03:03,920 --> 00:03:11,208
cryptographic key and we are going to

54
00:03:06,350 --> 00:03:14,150
talk about<font color="#E5E5E5"> RSA keys now first some</font>

55
00:03:11,209 --> 00:03:17,180
assumption there are some<font color="#CCCCCC"> scenarios so</font>

56
00:03:14,150 --> 00:03:19,550
the assumption are if we do it then

57
00:03:17,180 --> 00:03:21,709
somebody that<font color="#E5E5E5"> talk us</font><font color="#CCCCCC"> about crypto my</font>

58
00:03:19,550 --> 00:03:24,920
should should be<font color="#CCCCCC"> an</font><font color="#E5E5E5"> expert or maybe</font><font color="#CCCCCC"> an</font>

59
00:03:21,709 --> 00:03:26,480
<font color="#E5E5E5">expert</font><font color="#CCCCCC"> and maybe the</font><font color="#E5E5E5"> people that are</font>

60
00:03:24,920 --> 00:03:28,670
implementing it maybe they know what

61
00:03:26,480 --> 00:03:32,119
<font color="#CCCCCC">they are doing and maybe the application</font>

62
00:03:28,670 --> 00:03:33,890
are using<font color="#E5E5E5"> stuff that</font><font color="#CCCCCC"> has been</font><font color="#E5E5E5"> prepared</font>

63
00:03:32,120 --> 00:03:38,060
by people<font color="#CCCCCC"> that</font><font color="#E5E5E5"> knows are doing or by the</font>

64
00:03:33,890 --> 00:03:41,149
developer all of this is<font color="#CCCCCC"> 99%</font><font color="#E5E5E5"> not true</font>

65
00:03:38,060 --> 00:03:47,630
and we're going to<font color="#E5E5E5"> check this</font><font color="#CCCCCC"> stuff</font>

66
00:03:41,150 --> 00:03:49,959
because to check if crypto information

67
00:03:47,630 --> 00:03:52,780
and<font color="#CCCCCC"> creeps implementation is correct</font>

68
00:03:49,959 --> 00:03:55,940
<font color="#CCCCCC">would in anything</font><font color="#E5E5E5"> else other than data</font>

69
00:03:52,780 --> 00:03:57,739
we don't<font color="#CCCCCC"> need even</font><font color="#E5E5E5"> to know if the</font>

70
00:03:55,940 --> 00:04:00,769
implementation<font color="#E5E5E5"> is correct we can see at</font>

71
00:03:57,739 --> 00:04:05,870
<font color="#E5E5E5">the end is a result is correct or not so</font>

72
00:04:00,769 --> 00:04:09,230
we<font color="#E5E5E5"> can start by saying to test this we</font>

73
00:04:05,870 --> 00:04:14,180
have to collect information<font color="#CCCCCC"> they code</font>

74
00:04:09,230 --> 00:04:17,358
what we have parse it somehow<font color="#E5E5E5"> so human</font>

75
00:04:14,180 --> 00:04:20,720
can read it and check it<font color="#E5E5E5"> and</font><font color="#CCCCCC"> then see if</font>

76
00:04:17,358 --> 00:04:23,780
there is<font color="#CCCCCC"> something that</font><font color="#E5E5E5"> is not okay now</font>

77
00:04:20,720 --> 00:04:26,330
<font color="#CCCCCC">I am basing in</font><font color="#E5E5E5"> Europe so there are some</font>

78
00:04:23,780 --> 00:04:28,570
strict<font color="#CCCCCC"> rules first</font><font color="#E5E5E5"> we check only numbers</font>

79
00:04:26,330 --> 00:04:28,570
and

80
00:04:29,090 --> 00:04:34,469
cryptographic number of very big numbers

81
00:04:31,850 --> 00:04:36,270
<font color="#E5E5E5">normal application cannot handle this</font>

82
00:04:34,470 --> 00:04:37,680
kind of<font color="#E5E5E5"> number normal programming</font>

83
00:04:36,270 --> 00:04:39,330
<font color="#E5E5E5">language cannot handle this kind of</font>

84
00:04:37,680 --> 00:04:42,720
<font color="#E5E5E5">number</font><font color="#CCCCCC"> you have to</font><font color="#E5E5E5"> do some special</font><font color="#CCCCCC"> stuff</font>

85
00:04:39,330 --> 00:04:44,370
to make<font color="#CCCCCC"> it useful error to make the</font>

86
00:04:42,720 --> 00:04:47,640
<font color="#CCCCCC">application or the</font><font color="#E5E5E5"> system able to handle</font>

87
00:04:44,370 --> 00:04:50,070
them then<font color="#E5E5E5"> because we are in</font><font color="#CCCCCC"> Europe</font>

88
00:04:47,640 --> 00:04:52,789
there will be no<font color="#E5E5E5"> correlation so it means</font>

89
00:04:50,070 --> 00:04:56,370
I<font color="#CCCCCC"> will not</font><font color="#E5E5E5"> point finger and I will not</font>

90
00:04:52,790 --> 00:04:59,630
connect stuff<font color="#E5E5E5"> on what genetic disease</font>

91
00:04:56,370 --> 00:05:03,000
<font color="#CCCCCC">and what this imply cannot be used for</font>

92
00:04:59,630 --> 00:05:06,030
<font color="#CCCCCC">something</font><font color="#E5E5E5"> for example</font><font color="#CCCCCC"> I</font><font color="#E5E5E5"> found the broken</font>

93
00:05:03,000 --> 00:05:08,490
application that has a broken<font color="#E5E5E5"> key and</font>

94
00:05:06,030 --> 00:05:10,770
<font color="#CCCCCC">that broken</font><font color="#E5E5E5"> key can be correlated with a</font>

95
00:05:08,490 --> 00:05:12,780
company with an<font color="#E5E5E5"> application or with</font>

96
00:05:10,770 --> 00:05:15,270
something<font color="#CCCCCC"> who's not lookin</font><font color="#E5E5E5"> to that only</font>

97
00:05:12,780 --> 00:05:17,820
numbers<font color="#E5E5E5"> and no tribution</font><font color="#CCCCCC"> I would not say</font>

98
00:05:15,270 --> 00:05:21,690
<font color="#CCCCCC">anything about what is broken or who did</font>

99
00:05:17,820 --> 00:05:24,090
something wrong<font color="#CCCCCC"> ok so the idea is</font>

100
00:05:21,690 --> 00:05:26,340
collect a lot of data to<font color="#E5E5E5"> collect this I</font>

101
00:05:24,090 --> 00:05:27,000
<font color="#CCCCCC">used some services that are available</font>

102
00:05:26,340 --> 00:05:29,760
<font color="#CCCCCC">online</font>

103
00:05:27,000 --> 00:05:32,490
one is<font color="#CCCCCC"> cans bottles</font><font color="#E5E5E5"> I have tons of</font>

104
00:05:29,760 --> 00:05:34,590
<font color="#CCCCCC">information</font><font color="#E5E5E5"> I get their keys because</font>

105
00:05:32,490 --> 00:05:38,010
<font color="#E5E5E5">they collected it for</font><font color="#CCCCCC"> a</font><font color="#E5E5E5"> free and then</font>

106
00:05:34,590 --> 00:05:43,080
make it<font color="#E5E5E5"> available</font><font color="#CCCCCC"> to everyone then I</font>

107
00:05:38,010 --> 00:05:46,320
install<font color="#E5E5E5"> IDs in this case I use ricotta</font>

108
00:05:43,080 --> 00:05:49,830
<font color="#CCCCCC">to intercept traffic generated by</font>

109
00:05:46,320 --> 00:05:54,710
applications<font color="#E5E5E5"> and I extracted ready s</font><font color="#CCCCCC"> to</font>

110
00:05:49,830 --> 00:06:00,180
dump everything<font color="#CCCCCC"> that has a SSL TLS</font>

111
00:05:54,710 --> 00:06:04,169
encryption key<font color="#CCCCCC"> and then I downloaded a</font>

112
00:06:00,180 --> 00:06:07,100
copy of all<font color="#CCCCCC"> the</font><font color="#E5E5E5"> PGP and</font><font color="#CCCCCC"> GPT</font><font color="#E5E5E5"> keys</font>

113
00:06:04,169 --> 00:06:12,000
available<font color="#CCCCCC"> to the public</font><font color="#E5E5E5"> and use for</font>

114
00:06:07,100 --> 00:06:16,229
encryption<font color="#E5E5E5"> so where PGP keys are much</font>

115
00:06:12,000 --> 00:06:18,270
smaller<font color="#CCCCCC"> than</font><font color="#E5E5E5"> the amount of keys that</font><font color="#CCCCCC"> are</font>

116
00:06:16,229 --> 00:06:22,229
<font color="#CCCCCC">available for services</font><font color="#E5E5E5"> for browsers</font><font color="#CCCCCC"> so</font>

117
00:06:18,270 --> 00:06:25,140
we start with<font color="#E5E5E5"> the Pacific e the data set</font>

118
00:06:22,229 --> 00:06:31,800
of TCP keys is around<font color="#E5E5E5"> 4 million and</font><font color="#CCCCCC"> a</font>

119
00:06:25,140 --> 00:06:34,680
<font color="#CCCCCC">half</font><font color="#E5E5E5"> keys but every key that is reported</font>

120
00:06:31,800 --> 00:06:37,440
the key is what is called the key set so

121
00:06:34,680 --> 00:06:39,900
<font color="#CCCCCC">each PGP key is a combination</font><font color="#E5E5E5"> of keys</font>

122
00:06:37,440 --> 00:06:41,910
<font color="#E5E5E5">and because the</font><font color="#CCCCCC"> combination of is have</font>

123
00:06:39,900 --> 00:06:43,590
to unpack each key

124
00:06:41,910 --> 00:06:46,530
get all the individual<font color="#E5E5E5"> pieces are in</font>

125
00:06:43,590 --> 00:06:51,780
each of the main keys<font color="#CCCCCC"> the result is that</font>

126
00:06:46,530 --> 00:06:53,609
<font color="#CCCCCC">I had</font><font color="#E5E5E5"> around 9 million keys and in</font>

127
00:06:51,780 --> 00:06:59,130
<font color="#E5E5E5">theory these keys because they're using</font>

128
00:06:53,610 --> 00:07:02,340
<font color="#E5E5E5">4 file encryption have higher level of</font>

129
00:06:59,130 --> 00:07:06,830
scrutiny<font color="#CCCCCC"> and in theory</font><font color="#E5E5E5"> we shouldn't have</font>

130
00:07:02,340 --> 00:07:09,840
any<font color="#E5E5E5"> problem them so what are the rules</font>

131
00:07:06,830 --> 00:07:12,690
<font color="#E5E5E5">because we are talking</font><font color="#CCCCCC"> about numbers the</font>

132
00:07:09,840 --> 00:07:14,669
rules are very<font color="#E5E5E5"> simple so every key</font>

133
00:07:12,690 --> 00:07:19,950
should be<font color="#E5E5E5"> completely unique</font>

134
00:07:14,670 --> 00:07:23,750
nobody ever should have duplicate the

135
00:07:19,950 --> 00:07:30,620
key<font color="#E5E5E5"> so if I</font><font color="#CCCCCC"> generate a key today</font><font color="#E5E5E5"> nobody</font>

136
00:07:23,750 --> 00:07:33,120
ever can or should have the same<font color="#E5E5E5"> key and</font>

137
00:07:30,620 --> 00:07:36,810
to generate a key I need the two numbers

138
00:07:33,120 --> 00:07:39,840
<font color="#E5E5E5">again nobody nothing ever should use any</font>

139
00:07:36,810 --> 00:07:41,670
of<font color="#CCCCCC"> my two numbers but even one if that</font>

140
00:07:39,840 --> 00:07:45,719
happened both key are broken forever

141
00:07:41,670 --> 00:07:48,210
<font color="#CCCCCC">nobody can use</font><font color="#E5E5E5"> that number anymore now</font>

142
00:07:45,720 --> 00:07:50,430
another required requirement<font color="#E5E5E5"> this is</font>

143
00:07:48,210 --> 00:07:53,190
mainly for<font color="#E5E5E5"> securities the number should</font>

144
00:07:50,430 --> 00:07:55,050
<font color="#CCCCCC">be very</font><font color="#E5E5E5"> big so if we're if we find</font>

145
00:07:53,190 --> 00:07:55,530
anything<font color="#E5E5E5"> that is divides about by small</font>

146
00:07:55,050 --> 00:07:59,180
number

147
00:07:55,530 --> 00:08:02,489
the<font color="#E5E5E5"> key is implicitly broken because</font>

148
00:07:59,180 --> 00:08:05,010
number are<font color="#CCCCCC"> not very big so second the</font>

149
00:08:02,490 --> 00:08:08,130
calculation for the<font color="#E5E5E5"> key is wrong</font>

150
00:08:05,010 --> 00:08:11,219
the logic<font color="#CCCCCC"> is wrong so the key is valid</font>

151
00:08:08,130 --> 00:08:14,610
<font color="#E5E5E5">it's not a key that generates error but</font>

152
00:08:11,220 --> 00:08:17,370
is essentially<font color="#CCCCCC"> essentially useless</font><font color="#E5E5E5"> and</font>

153
00:08:14,610 --> 00:08:21,090
actually is worse<font color="#E5E5E5"> than useless because</font>

154
00:08:17,370 --> 00:08:22,560
you don't know it's bad<font color="#CCCCCC"> dead key and so</font>

155
00:08:21,090 --> 00:08:26,460
you trust the key when your reality<font color="#CCCCCC"> you</font>

156
00:08:22,560 --> 00:08:29,760
shouldn't then there is assumption that

157
00:08:26,460 --> 00:08:33,240
the key should<font color="#E5E5E5"> have prime numbers nobody</font>

158
00:08:29,760 --> 00:08:35,130
<font color="#CCCCCC">say</font><font color="#E5E5E5"> that to developer is</font><font color="#CCCCCC"> not a mandatory</font>

159
00:08:33,240 --> 00:08:39,900
requirement<font color="#E5E5E5"> so I can put whatever I want</font>

160
00:08:35,130 --> 00:08:42,539
<font color="#CCCCCC">and there are no</font><font color="#E5E5E5"> tests it's up to the</font>

161
00:08:39,900 --> 00:08:45,420
developer<font color="#CCCCCC"> to say I will be</font><font color="#E5E5E5"> very nice and</font>

162
00:08:42,539 --> 00:08:48,480
I use<font color="#E5E5E5"> only prime</font><font color="#CCCCCC"> numbers but even if I</font>

163
00:08:45,420 --> 00:08:50,640
generate<font color="#E5E5E5"> keys with not prime numbers at</font>

164
00:08:48,480 --> 00:08:51,870
the<font color="#E5E5E5"> moment there are</font><font color="#CCCCCC"> no</font><font color="#E5E5E5"> tests we to</font>

165
00:08:50,640 --> 00:08:54,350
<font color="#CCCCCC">track this</font><font color="#E5E5E5"> because it's time consuming</font>

166
00:08:51,870 --> 00:08:55,490
and<font color="#E5E5E5"> it's very resource intensive</font><font color="#CCCCCC"> and</font>

167
00:08:54,350 --> 00:08:57,380
then

168
00:08:55,490 --> 00:09:00,130
we shouldn't have<font color="#E5E5E5"> anything which</font><font color="#CCCCCC"> is the</font>

169
00:08:57,380 --> 00:09:04,730
<font color="#E5E5E5">number</font><font color="#CCCCCC"> one if something is another one</font>

170
00:09:00,130 --> 00:09:08,660
<font color="#CCCCCC">they're a</font><font color="#E5E5E5"> big problem</font><font color="#CCCCCC"> so what</font><font color="#E5E5E5"> happens if</font>

171
00:09:04,730 --> 00:09:12,770
<font color="#CCCCCC">we have any of</font><font color="#E5E5E5"> these conditions</font><font color="#CCCCCC"> that</font><font color="#E5E5E5"> are</font>

172
00:09:08,660 --> 00:09:17,000
false then<font color="#E5E5E5"> what we have we have</font><font color="#CCCCCC"> some TT</font>

173
00:09:12,770 --> 00:09:19,579
<font color="#CCCCCC">scholar collision</font><font color="#E5E5E5"> so if two</font><font color="#CCCCCC"> keys share a</font>

174
00:09:17,000 --> 00:09:23,089
number<font color="#CCCCCC"> or if one</font><font color="#E5E5E5"> key is number that are</font>

175
00:09:19,580 --> 00:09:25,790
not prime what happened<font color="#E5E5E5"> they're insecure</font>

176
00:09:23,089 --> 00:09:28,910
they cannot be<font color="#E5E5E5"> used if they are used</font>

177
00:09:25,790 --> 00:09:32,630
there<font color="#E5E5E5"> to be regenerated because if I</font>

178
00:09:28,910 --> 00:09:35,390
take<font color="#CCCCCC"> this</font><font color="#E5E5E5"> keys</font><font color="#CCCCCC"> I can</font><font color="#E5E5E5"> because these</font>

179
00:09:32,630 --> 00:09:38,270
<font color="#CCCCCC">numbers and is a multiplication of</font>

180
00:09:35,390 --> 00:09:40,220
number<font color="#E5E5E5"> I can just divide your key by</font>

181
00:09:38,270 --> 00:09:44,510
some numbers<font color="#E5E5E5"> to get the original number</font>

182
00:09:40,220 --> 00:09:47,180
<font color="#E5E5E5">and then there is no encryption</font><font color="#CCCCCC"> because</font>

183
00:09:44,510 --> 00:09:49,569
by dividing the number<font color="#E5E5E5"> I found your</font>

184
00:09:47,180 --> 00:09:54,800
original<font color="#CCCCCC"> number I can regenerate</font><font color="#E5E5E5"> querque</font>

185
00:09:49,570 --> 00:09:56,959
very easily<font color="#CCCCCC"> if this happen</font><font color="#E5E5E5"> the</font>

186
00:09:54,800 --> 00:09:59,899
<font color="#E5E5E5">encryption key is</font><font color="#CCCCCC"> useless and the</font>

187
00:09:56,959 --> 00:10:01,250
encrypted data is useless<font color="#E5E5E5"> because it's</font>

188
00:09:59,899 --> 00:10:04,459
encrypted for the person that<font color="#E5E5E5"> is using</font>

189
00:10:01,250 --> 00:10:07,970
the key but anybody<font color="#E5E5E5"> that knows that</font><font color="#CCCCCC"> the</font>

190
00:10:04,459 --> 00:10:09,709
key is broken for them the data is not

191
00:10:07,970 --> 00:10:13,520
encrypted<font color="#CCCCCC"> at all</font><font color="#E5E5E5"> they can reverse it</font>

192
00:10:09,709 --> 00:10:15,949
whenever they want<font color="#E5E5E5"> so simple tester</font>

193
00:10:13,520 --> 00:10:19,579
downloaded<font color="#E5E5E5"> all the key and check the key</font>

194
00:10:15,950 --> 00:10:22,000
by<font color="#E5E5E5"> date creation date and the result is</font>

195
00:10:19,579 --> 00:10:26,329
out of<font color="#E5E5E5"> the nine million key around the</font>

196
00:10:22,000 --> 00:10:33,260
900 keys were broken<font color="#E5E5E5"> and this is live</font>

197
00:10:26,329 --> 00:10:37,849
data from<font color="#CCCCCC"> Vickie's public</font><font color="#E5E5E5"> I say creation</font>

198
00:10:33,260 --> 00:10:41,360
date because PGP keys are not validated

199
00:10:37,850 --> 00:10:43,279
so<font color="#E5E5E5"> anybody can create any</font><font color="#CCCCCC"> kind</font><font color="#E5E5E5"> of key of</font>

200
00:10:41,360 --> 00:10:44,750
any kind of format with any kind<font color="#E5E5E5"> of data</font>

201
00:10:43,279 --> 00:10:45,860
<font color="#E5E5E5">inside it upload</font><font color="#CCCCCC"> it online and there</font>

202
00:10:44,750 --> 00:10:48,589
would be no check for it

203
00:10:45,860 --> 00:10:52,850
there is no validation anybody can

204
00:10:48,589 --> 00:10:55,579
create stuff and put<font color="#E5E5E5"> it online so there</font>

205
00:10:52,850 --> 00:10:59,570
<font color="#E5E5E5">are keys that are a mix of other keys</font>

206
00:10:55,579 --> 00:11:02,630
the turkeys with invalid data and there

207
00:10:59,570 --> 00:11:04,850
are keys with strange<font color="#E5E5E5"> data need any key</font>

208
00:11:02,630 --> 00:11:08,800
will<font color="#CCCCCC"> be accepted in the current PGP echo</font>

209
00:11:04,850 --> 00:11:08,800
<font color="#CCCCCC">system</font><font color="#E5E5E5"> the only request is</font>

210
00:11:09,020 --> 00:11:11,930
please follow the format<font color="#E5E5E5"> if you don't</font>

211
00:11:10,640 --> 00:11:15,760
follow the format the key will not be

212
00:11:11,930 --> 00:11:19,550
available<font color="#E5E5E5"> to other people</font><font color="#CCCCCC"> so again</font>

213
00:11:15,760 --> 00:11:26,029
anybody<font color="#CCCCCC"> did create a key</font><font color="#E5E5E5"> may have to</font>

214
00:11:19,550 --> 00:11:31,729
check<font color="#E5E5E5"> for this first condition the keys</font>

215
00:11:26,029 --> 00:11:35,450
<font color="#CCCCCC">should have only</font><font color="#E5E5E5"> unique numbers but</font><font color="#CCCCCC"> they</font>

216
00:11:31,730 --> 00:11:37,430
don't because this<font color="#E5E5E5"> is condition</font><font color="#CCCCCC"> usually</font>

217
00:11:35,450 --> 00:11:40,250
are not<font color="#E5E5E5"> tested so we have a lot</font><font color="#CCCCCC"> of keys</font>

218
00:11:37,430 --> 00:11:46,479
with<font color="#E5E5E5"> number that are shared across keys</font>

219
00:11:40,250 --> 00:11:48,770
<font color="#CCCCCC">a lot</font><font color="#E5E5E5"> of kids have collisions and this</font>

220
00:11:46,480 --> 00:11:50,630
is not<font color="#CCCCCC"> only</font><font color="#E5E5E5"> related to broken</font>

221
00:11:48,770 --> 00:11:54,110
implementation<font color="#CCCCCC"> but purely</font><font color="#E5E5E5"> by chance or</font>

222
00:11:50,630 --> 00:11:57,380
<font color="#CCCCCC">by system that generates</font><font color="#E5E5E5"> enough random</font>

223
00:11:54,110 --> 00:11:59,060
<font color="#CCCCCC">data</font><font color="#E5E5E5"> or not enough random quality data</font>

224
00:11:57,380 --> 00:11:59,779
<font color="#CCCCCC">there are a lot of</font><font color="#E5E5E5"> condition but the</font>

225
00:11:59,060 --> 00:12:02,660
result is<font color="#E5E5E5"> the</font><font color="#CCCCCC"> same</font>

226
00:11:59,779 --> 00:12:05,990
and also result is the same<font color="#E5E5E5"> for keys</font>

227
00:12:02,660 --> 00:12:08,600
that are generated<font color="#CCCCCC"> by system that are</font>

228
00:12:05,990 --> 00:12:10,760
<font color="#E5E5E5">not checking this may have problem with</font>

229
00:12:08,600 --> 00:12:13,459
numbers<font color="#CCCCCC"> so that divisible by</font><font color="#E5E5E5"> small</font>

230
00:12:10,760 --> 00:12:15,100
number if this<font color="#CCCCCC"> happens that key</font><font color="#E5E5E5"> is</font>

231
00:12:13,459 --> 00:12:20,109
broken<font color="#CCCCCC"> is insecure</font>

232
00:12:15,100 --> 00:12:24,520
anything sign or encrypted by the key

233
00:12:20,110 --> 00:12:28,760
basically<font color="#E5E5E5"> is as good as clear text and</font>

234
00:12:24,520 --> 00:12:30,380
the key<font color="#E5E5E5"> length is not important in the</font>

235
00:12:28,760 --> 00:12:32,060
<font color="#E5E5E5">case if the</font><font color="#CCCCCC"> keys broken</font><font color="#E5E5E5"> is the</font>

236
00:12:30,380 --> 00:12:34,339
<font color="#E5E5E5">mathematical part behind</font><font color="#CCCCCC"> it is</font><font color="#E5E5E5"> not a</font>

237
00:12:32,060 --> 00:12:36,649
<font color="#E5E5E5">case doesn't</font><font color="#CCCCCC"> matter even if you have a</font>

238
00:12:34,339 --> 00:12:38,740
16,000 bit key because one of<font color="#E5E5E5"> the key</font>

239
00:12:36,649 --> 00:12:41,860
was<font color="#E5E5E5"> 16,000 Viki</font><font color="#CCCCCC"> it was broken</font>

240
00:12:38,740 --> 00:12:44,870
if the assumption behind it<font color="#CCCCCC"> are not</font><font color="#E5E5E5"> okay</font>

241
00:12:41,860 --> 00:12:46,070
<font color="#E5E5E5">encryption is useless and all the tests</font>

242
00:12:44,870 --> 00:12:48,529
<font color="#E5E5E5">and all the</font><font color="#CCCCCC"> assumptions that are not</font>

243
00:12:46,070 --> 00:12:51,649
valid<font color="#CCCCCC"> anymore</font>

244
00:12:48,529 --> 00:12:53,089
the same<font color="#E5E5E5"> logic for the divisors is not</font>

245
00:12:51,649 --> 00:12:55,610
rocket science if I can<font color="#E5E5E5"> divide the</font>

246
00:12:53,089 --> 00:12:58,160
number by<font color="#CCCCCC"> 2 2 is</font><font color="#E5E5E5"> very big so not okay</font>

247
00:12:55,610 --> 00:12:59,990
and yes there are<font color="#E5E5E5"> a lot of system</font><font color="#CCCCCC"> that</font>

248
00:12:58,160 --> 00:13:03,740
can<font color="#E5E5E5"> be</font><font color="#CCCCCC"> done out of numbers that can be</font>

249
00:12:59,990 --> 00:13:06,740
<font color="#CCCCCC">divided</font><font color="#E5E5E5"> by 2 by 3 by</font><font color="#CCCCCC"> 5 all basada it</font>

250
00:13:03,740 --> 00:13:10,910
takes<font color="#CCCCCC"> nanosecond to check it but is not</font>

251
00:13:06,740 --> 00:13:12,950
<font color="#CCCCCC">interim implemented by default so now</font>

252
00:13:10,910 --> 00:13:15,920
that<font color="#E5E5E5"> we have</font><font color="#CCCCCC"> this idea that maybe there</font>

253
00:13:12,950 --> 00:13:19,430
are<font color="#E5E5E5"> some stuff that are</font><font color="#CCCCCC"> not really ok we</font>

254
00:13:15,920 --> 00:13:22,959
can scale it<font color="#CCCCCC"> to</font><font color="#E5E5E5"> a bigger system so</font>

255
00:13:19,430 --> 00:13:26,290
instead of 10 million<font color="#E5E5E5"> keys we go for</font>

256
00:13:22,960 --> 00:13:28,390
<font color="#E5E5E5">civilian</font><font color="#CCCCCC"> keys</font><font color="#E5E5E5"> and from that we remove</font>

257
00:13:26,290 --> 00:13:32,079
all<font color="#E5E5E5"> the duplicated</font><font color="#CCCCCC"> data we remove all</font>

258
00:13:28,390 --> 00:13:36,670
the<font color="#CCCCCC"> stuff you didn't okay then we remain</font>

259
00:13:32,080 --> 00:13:40,720
with some valid keys<font color="#E5E5E5"> so at the end I got</font>

260
00:13:36,670 --> 00:13:42,790
<font color="#E5E5E5">around 73 million keys no idea what is</font>

261
00:13:40,720 --> 00:13:44,860
inside so we are going<font color="#E5E5E5"> to repeat the</font>

262
00:13:42,790 --> 00:13:49,209
<font color="#E5E5E5">process</font><font color="#CCCCCC"> to repeat the same steps with</font>

263
00:13:44,860 --> 00:13:52,360
the same<font color="#E5E5E5"> checks so same questions RSA</font>

264
00:13:49,210 --> 00:13:55,900
key is a big number unique so the

265
00:13:52,360 --> 00:14:00,490
modulus<font color="#CCCCCC"> is modulus exponent so the key</font>

266
00:13:55,900 --> 00:14:03,370
unique is the modulus<font color="#E5E5E5"> is a product of</font>

267
00:14:00,490 --> 00:14:07,800
large large big numbers<font color="#E5E5E5"> and is the</font>

268
00:14:03,370 --> 00:14:11,710
exponent valid so first<font color="#CCCCCC"> tester</font>

269
00:14:07,800 --> 00:14:14,589
combination of keys do I have<font color="#CCCCCC"> duplicate</font>

270
00:14:11,710 --> 00:14:20,110
<font color="#CCCCCC">the keys</font><font color="#E5E5E5"> yes a lot is it a problem not</font>

271
00:14:14,590 --> 00:14:22,900
really because this<font color="#E5E5E5"> is considered doable</font>

272
00:14:20,110 --> 00:14:24,940
<font color="#CCCCCC">and is not really a</font><font color="#E5E5E5"> violation of any</font>

273
00:14:22,900 --> 00:14:27,010
rule if a company<font color="#E5E5E5"> spends a lot of time</font>

274
00:14:24,940 --> 00:14:28,780
and<font color="#E5E5E5"> money generating</font><font color="#CCCCCC"> keys</font><font color="#E5E5E5"> they are</font>

275
00:14:27,010 --> 00:14:32,590
allowed<font color="#CCCCCC"> to</font><font color="#E5E5E5"> take the same key regenerate</font>

276
00:14:28,780 --> 00:14:35,620
the certificate and so the key<font color="#CCCCCC"> is used</font>

277
00:14:32,590 --> 00:14:37,960
<font color="#E5E5E5">but they have a new certificate so the</font>

278
00:14:35,620 --> 00:14:42,520
high percentage<font color="#CCCCCC"> of</font><font color="#E5E5E5"> keys is</font>

279
00:14:37,960 --> 00:14:46,600
understandable also generation of keys

280
00:14:42,520 --> 00:14:49,960
implies that<font color="#E5E5E5"> 10 companies can be part of</font>

281
00:14:46,600 --> 00:14:53,080
one main company so they want maybe all

282
00:14:49,960 --> 00:14:54,790
to have the<font color="#E5E5E5"> same shared key but each one</font>

283
00:14:53,080 --> 00:14:56,170
<font color="#CCCCCC">of them have different</font><font color="#E5E5E5"> certificates with</font>

284
00:14:54,790 --> 00:14:58,300
different names difference of their name

285
00:14:56,170 --> 00:15:00,790
different<font color="#E5E5E5"> system names the key is the</font>

286
00:14:58,300 --> 00:15:06,130
same<font color="#E5E5E5"> for everyone this is also possible</font>

287
00:15:00,790 --> 00:15:09,490
<font color="#E5E5E5">and is allowed little</font><font color="#CCCCCC"> less common it's</font>

288
00:15:06,130 --> 00:15:12,580
the fact that<font color="#CCCCCC"> Keys have the exactly</font><font color="#E5E5E5"> the</font>

289
00:15:09,490 --> 00:15:14,710
<font color="#E5E5E5">same number so the same models it can</font>

290
00:15:12,580 --> 00:15:17,050
happen<font color="#CCCCCC"> same</font><font color="#E5E5E5"> story</font><font color="#CCCCCC"> for the combination of</font>

291
00:15:14,710 --> 00:15:20,920
certificates<font color="#CCCCCC"> where you can move the key</font>

292
00:15:17,050 --> 00:15:22,719
across systems if this happen it means

293
00:15:20,920 --> 00:15:26,579
that both<font color="#E5E5E5"> key has been generated with</font>

294
00:15:22,720 --> 00:15:30,160
<font color="#E5E5E5">exactly the same number so if it's not</font>

295
00:15:26,580 --> 00:15:31,660
intended then it means<font color="#E5E5E5"> that any key</font><font color="#CCCCCC"> that</font>

296
00:15:30,160 --> 00:15:33,459
use the same combination number is

297
00:15:31,660 --> 00:15:36,040
broken therefore<font color="#E5E5E5"> insecure therefore</font>

298
00:15:33,460 --> 00:15:43,329
anybody can read<font color="#E5E5E5"> your data if the</font>

299
00:15:36,040 --> 00:15:45,849
<font color="#CCCCCC">so that there is this problem now</font><font color="#E5E5E5"> how we</font>

300
00:15:43,329 --> 00:15:48,130
test for<font color="#E5E5E5"> the</font><font color="#CCCCCC"> share a number</font><font color="#E5E5E5"> simple we</font>

301
00:15:45,850 --> 00:15:54,490
take the key<font color="#E5E5E5"> and we divide each key for</font>

302
00:15:48,130 --> 00:15:56,680
<font color="#E5E5E5">any other key if we</font><font color="#CCCCCC"> found if we</font><font color="#E5E5E5"> if we</font>

303
00:15:54,490 --> 00:15:59,860
<font color="#CCCCCC">are</font><font color="#E5E5E5"> able to find keys that have shared</font>

304
00:15:56,680 --> 00:16:03,699
numbers then<font color="#E5E5E5"> it means that</font><font color="#CCCCCC"> any key that</font>

305
00:15:59,860 --> 00:16:06,220
has<font color="#E5E5E5"> a number is not valid because you</font>

306
00:16:03,699 --> 00:16:10,508
<font color="#E5E5E5">can reverse the process as we have seen</font>

307
00:16:06,220 --> 00:16:13,449
before<font color="#E5E5E5"> and they from the public key you</font>

308
00:16:10,509 --> 00:16:15,930
can recreate the private key<font color="#CCCCCC"> so it means</font>

309
00:16:13,449 --> 00:16:18,579
there<font color="#CCCCCC"> is</font><font color="#E5E5E5"> no encrypted security anymore</font>

310
00:16:15,930 --> 00:16:22,540
nothing<font color="#CCCCCC"> ready to security is there</font><font color="#E5E5E5"> any</font>

311
00:16:18,579 --> 00:16:24,969
<font color="#E5E5E5">more to</font><font color="#CCCCCC"> do</font><font color="#E5E5E5"> this I tried first in Python</font>

312
00:16:22,540 --> 00:16:27,040
<font color="#CCCCCC">it took me like</font><font color="#E5E5E5"> three months to crunch</font>

313
00:16:24,970 --> 00:16:29,259
<font color="#E5E5E5">data to the little bit long so I say</font>

314
00:16:27,040 --> 00:16:32,079
<font color="#CCCCCC">okay</font><font color="#E5E5E5"> we do in we use something more</font>

315
00:16:29,259 --> 00:16:35,440
<font color="#CCCCCC">professional so I found</font><font color="#E5E5E5"> another project</font>

316
00:16:32,079 --> 00:16:38,019
<font color="#CCCCCC">so it was a very</font><font color="#E5E5E5"> serious and</font><font color="#CCCCCC"> very well</font>

317
00:16:35,440 --> 00:16:40,089
<font color="#E5E5E5">done research they published the code to</font>

318
00:16:38,019 --> 00:16:44,079
<font color="#E5E5E5">make the mathematical computation so use</font>

319
00:16:40,089 --> 00:16:47,769
their code code is freely available when

320
00:16:44,079 --> 00:16:51,040
<font color="#E5E5E5">I tested it it finish in 12 hours the</font>

321
00:16:47,769 --> 00:17:00,250
result is that of all<font color="#E5E5E5"> the numbers that</font><font color="#CCCCCC"> I</font>

322
00:16:51,040 --> 00:17:02,649
used around<font color="#E5E5E5"> 0.3%</font><font color="#CCCCCC"> had a problem now in</font>

323
00:17:00,250 --> 00:17:05,559
<font color="#E5E5E5">certain percentage seems too small but</font>

324
00:17:02,649 --> 00:17:07,510
the result is<font color="#CCCCCC"> that more than 200</font>

325
00:17:05,559 --> 00:17:10,809
<font color="#CCCCCC">thousand keys were broken</font>

326
00:17:07,510 --> 00:17:16,329
<font color="#CCCCCC">they had</font><font color="#E5E5E5"> share numbers so a lot of</font>

327
00:17:10,809 --> 00:17:19,089
system generates<font color="#CCCCCC"> T's</font><font color="#E5E5E5"> that are not valid</font>

328
00:17:16,329 --> 00:17:22,209
but<font color="#E5E5E5"> they can be used and no</font><font color="#CCCCCC"> alarm will</font>

329
00:17:19,089 --> 00:17:25,000
be<font color="#E5E5E5"> raised no error will</font><font color="#CCCCCC"> be shown to</font>

330
00:17:22,209 --> 00:17:26,020
anybody<font color="#E5E5E5"> because to know this you have to</font>

331
00:17:25,000 --> 00:17:28,870
collect<font color="#E5E5E5"> all</font><font color="#CCCCCC"> the key</font>

332
00:17:26,020 --> 00:17:30,520
it makes the comparison<font color="#E5E5E5"> between your key</font>

333
00:17:28,870 --> 00:17:31,418
<font color="#E5E5E5">and all the other keys is very</font>

334
00:17:30,520 --> 00:17:35,679
resource-intensive

335
00:17:31,419 --> 00:17:37,350
when this happened your challenge is

336
00:17:35,679 --> 00:17:40,990
assumption of RSA<font color="#E5E5E5"> the</font><font color="#CCCCCC"> piece</font>

337
00:17:37,350 --> 00:17:44,980
nothing can be duplicated<font color="#CCCCCC"> ever the</font>

338
00:17:40,990 --> 00:17:46,809
result scaled to bigger systems so if

339
00:17:44,980 --> 00:17:49,330
you take all the percentage<font color="#E5E5E5"> and all the</font>

340
00:17:46,809 --> 00:17:49,820
number together<font color="#E5E5E5"> is that out of the 73</font>

341
00:17:49,330 --> 00:17:54,230
<font color="#E5E5E5">Millions</font>

342
00:17:49,820 --> 00:17:58,909
difficut that I have collected<font color="#CCCCCC"> I got</font>

343
00:17:54,230 --> 00:18:03,530
around 800,000<font color="#E5E5E5"> 750</font><font color="#CCCCCC"> 8,000 certificates</font>

344
00:17:58,910 --> 00:18:06,070
that are<font color="#E5E5E5"> not valid they are used they</font>

345
00:18:03,530 --> 00:18:09,830
<font color="#CCCCCC">are perfectly fine</font>

346
00:18:06,070 --> 00:18:11,600
nothing will be<font color="#E5E5E5"> shown</font><font color="#CCCCCC"> to the user</font><font color="#E5E5E5"> the</font>

347
00:18:09,830 --> 00:18:15,800
<font color="#E5E5E5">lock will be</font><font color="#CCCCCC"> greener the interface with</font>

348
00:18:11,600 --> 00:18:18,350
<font color="#E5E5E5">okay all the tests will pass flying</font>

349
00:18:15,800 --> 00:18:20,629
green<font color="#E5E5E5"> color in reality you have no</font>

350
00:18:18,350 --> 00:18:25,040
encryption<font color="#E5E5E5"> if anybody knows</font><font color="#CCCCCC"> that</font><font color="#E5E5E5"> your</font>

351
00:18:20,630 --> 00:18:29,870
key and your certificate<font color="#E5E5E5"> are not unique</font>

352
00:18:25,040 --> 00:18:31,370
anybody can take it reverse it<font color="#CCCCCC"> and read</font>

353
00:18:29,870 --> 00:18:33,560
your<font color="#E5E5E5"> data and not only read your data</font>

354
00:18:31,370 --> 00:18:35,179
they can impersonate you<font color="#E5E5E5"> so they can</font>

355
00:18:33,560 --> 00:18:37,550
sign<font color="#E5E5E5"> your mail in your behalf they can</font>

356
00:18:35,180 --> 00:18:39,680
connect<font color="#E5E5E5"> to a VPN on your behalf they can</font>

357
00:18:37,550 --> 00:18:44,200
read your<font color="#E5E5E5"> encrypted data on your behalf</font>

358
00:18:39,680 --> 00:18:48,740
<font color="#CCCCCC">and nothing would</font><font color="#E5E5E5"> be shown to the user</font>

359
00:18:44,200 --> 00:18:51,350
<font color="#E5E5E5">now again testing possible</font><font color="#CCCCCC"> primes in all</font>

360
00:18:48,740 --> 00:18:55,040
numbers I use<font color="#E5E5E5"> primes and I use the first</font>

361
00:18:51,350 --> 00:18:56,659
10,000<font color="#E5E5E5"> primes</font><font color="#CCCCCC"> so you can download</font><font color="#E5E5E5"> it you</font>

362
00:18:55,040 --> 00:18:58,639
have it an<font color="#CCCCCC"> Internet they are well known</font>

363
00:18:56,660 --> 00:19:03,320
<font color="#E5E5E5">you just take the numbers and divide</font>

364
00:18:58,640 --> 00:19:04,910
every key for these<font color="#CCCCCC"> numbers no software</font>

365
00:19:03,320 --> 00:19:07,220
<font color="#E5E5E5">should generate</font><font color="#CCCCCC"> Keys</font><font color="#E5E5E5"> without this kind</font>

366
00:19:04,910 --> 00:19:10,910
<font color="#E5E5E5">of validation it takes milliseconds to</font>

367
00:19:07,220 --> 00:19:13,130
do<font color="#E5E5E5"> this test but because we don't want</font>

368
00:19:10,910 --> 00:19:15,440
<font color="#E5E5E5">to spend the</font><font color="#CCCCCC"> time</font><font color="#E5E5E5"> for this test we don't</font>

369
00:19:13,130 --> 00:19:17,690
want to use these milliseconds<font color="#E5E5E5"> there are</font>

370
00:19:15,440 --> 00:19:21,550
lots of cases<font color="#E5E5E5"> with this</font><font color="#CCCCCC"> K that are</font>

371
00:19:17,690 --> 00:19:21,550
broken<font color="#CCCCCC"> because of these mod numbers and</font>

372
00:19:22,210 --> 00:19:29,870
again<font color="#E5E5E5"> a lot</font><font color="#CCCCCC"> of keys are impacted</font><font color="#E5E5E5"> a lot</font>

373
00:19:24,920 --> 00:19:30,470
<font color="#CCCCCC">of</font><font color="#E5E5E5"> numbers are impacted now again what</font>

374
00:19:29,870 --> 00:19:31,939
we<font color="#CCCCCC"> have</font>

375
00:19:30,470 --> 00:19:34,190
we shouldn't<font color="#E5E5E5"> have anything that user</font>

376
00:19:31,940 --> 00:19:38,840
number<font color="#CCCCCC"> one so as soon as</font><font color="#E5E5E5"> I get the</font>

377
00:19:34,190 --> 00:19:45,320
exponent<font color="#E5E5E5"> and I see that something</font>

378
00:19:38,840 --> 00:19:48,110
<font color="#E5E5E5">strange in this case exponent equal 128</font>

379
00:19:45,320 --> 00:19:51,379
certificate<font color="#E5E5E5"> had this problem exponent</font>

380
00:19:48,110 --> 00:19:53,300
equal 1<font color="#CCCCCC"> it means</font><font color="#E5E5E5"> that the ciphertext</font><font color="#CCCCCC"> so</font>

381
00:19:51,380 --> 00:19:54,490
what is encrypted<font color="#E5E5E5"> is exactly the same as</font>

382
00:19:53,300 --> 00:19:56,930
what is not encrypted

383
00:19:54,490 --> 00:20:00,770
so you use the restrain encryption but

384
00:19:56,930 --> 00:20:02,690
<font color="#CCCCCC">that is</font><font color="#E5E5E5"> an encryption</font><font color="#CCCCCC"> and not only there</font>

385
00:20:00,770 --> 00:20:03,790
is an exception<font color="#CCCCCC"> but</font><font color="#E5E5E5"> the system will say</font>

386
00:20:02,690 --> 00:20:06,610
<font color="#CCCCCC">ok we</font><font color="#E5E5E5"> are</font>

387
00:20:03,790 --> 00:20:08,830
<font color="#CCCCCC">on everything</font><font color="#E5E5E5"> is green but I</font><font color="#CCCCCC"> didn't</font>

388
00:20:06,610 --> 00:20:11,830
<font color="#CCCCCC">create</font><font color="#E5E5E5"> anything because you told me to</font>

389
00:20:08,830 --> 00:20:14,110
don't accept anything<font color="#E5E5E5"> and not only</font><font color="#CCCCCC"> that</font>

390
00:20:11,830 --> 00:20:16,300
but because<font color="#E5E5E5"> the exponent is</font><font color="#CCCCCC"> one you</font><font color="#E5E5E5"> can</font>

391
00:20:14,110 --> 00:20:18,939
<font color="#E5E5E5">recover the</font><font color="#CCCCCC"> key because or the</font>

392
00:20:16,300 --> 00:20:21,940
<font color="#CCCCCC">mathematical part is broken</font><font color="#E5E5E5"> but</font><font color="#CCCCCC"> is very</font>

393
00:20:18,940 --> 00:20:23,770
fast<font color="#E5E5E5"> because use one so some companies</font><font color="#CCCCCC"> a</font>

394
00:20:21,940 --> 00:20:27,100
<font color="#CCCCCC">beam dancer has been doing this for</font>

395
00:20:23,770 --> 00:20:28,870
<font color="#CCCCCC">years</font><font color="#E5E5E5"> some very big software project</font><font color="#CCCCCC"> CDs</font>

396
00:20:27,100 --> 00:20:32,280
<font color="#E5E5E5">for years</font>

397
00:20:28,870 --> 00:20:34,989
<font color="#E5E5E5">no alarm or</font><font color="#CCCCCC"> raise nobody was checking</font>

398
00:20:32,280 --> 00:20:38,170
<font color="#E5E5E5">now there are still 28 certificates</font>

399
00:20:34,990 --> 00:20:39,700
there what it means that<font color="#E5E5E5"> your encryption</font>

400
00:20:38,170 --> 00:20:42,580
<font color="#CCCCCC">that unless you check is encryption</font><font color="#E5E5E5"> or</font>

401
00:20:39,700 --> 00:20:44,830
<font color="#E5E5E5">you check what you see flying through</font>

402
00:20:42,580 --> 00:20:46,780
the server<font color="#E5E5E5"> you will never know that</font>

403
00:20:44,830 --> 00:20:51,120
<font color="#E5E5E5">there is actually nothing encrypted</font>

404
00:20:46,780 --> 00:20:55,480
between the communication standpoint<font color="#E5E5E5"> and</font>

405
00:20:51,120 --> 00:20:58,959
this<font color="#E5E5E5"> amongst to a very very small</font>

406
00:20:55,480 --> 00:21:02,010
percentage<font color="#E5E5E5"> for my data set but is also</font>

407
00:20:58,960 --> 00:21:05,800
true that<font color="#E5E5E5"> my data set is only covering a</font>

408
00:21:02,010 --> 00:21:08,490
handful<font color="#E5E5E5"> of protocols</font><font color="#CCCCCC"> only on system</font><font color="#E5E5E5"> that</font>

409
00:21:05,800 --> 00:21:11,500
have<font color="#E5E5E5"> been scanned using ipv4 address</font>

410
00:21:08,490 --> 00:21:13,090
<font color="#E5E5E5">only on there is more amount of time so</font>

411
00:21:11,500 --> 00:21:18,520
the amount of<font color="#E5E5E5"> real certificate</font><font color="#CCCCCC"> and real</font>

412
00:21:13,090 --> 00:21:21,909
data can be 100 times what I had seen<font color="#E5E5E5"> so</font>

413
00:21:18,520 --> 00:21:23,410
this is<font color="#E5E5E5"> just a sample it's a small</font>

414
00:21:21,910 --> 00:21:27,250
sample compared to what you can have in

415
00:21:23,410 --> 00:21:30,250
a<font color="#E5E5E5"> reality but is using real</font><font color="#CCCCCC"> numbers so</font>

416
00:21:27,250 --> 00:21:34,360
this is a summary<font color="#E5E5E5"> number seems bad but</font>

417
00:21:30,250 --> 00:21:37,690
<font color="#CCCCCC">in reality they are</font><font color="#E5E5E5"> definitely much</font>

418
00:21:34,360 --> 00:21:39,669
<font color="#E5E5E5">worse mainly because my data set seems</font>

419
00:21:37,690 --> 00:21:41,380
<font color="#E5E5E5">big but is very small compared to what</font>

420
00:21:39,670 --> 00:21:42,640
people<font color="#CCCCCC"> are using I didn't collect</font>

421
00:21:41,380 --> 00:21:44,650
<font color="#E5E5E5">ephemeral keys</font>

422
00:21:42,640 --> 00:21:47,740
I didn't<font color="#E5E5E5"> collect temporary keys I didn't</font>

423
00:21:44,650 --> 00:21:50,710
collect application keys so<font color="#E5E5E5"> millions of</font>

424
00:21:47,740 --> 00:21:53,130
other sources<font color="#E5E5E5"> use it like I didn't</font>

425
00:21:50,710 --> 00:21:55,480
collect<font color="#CCCCCC"> the</font><font color="#E5E5E5"> side that are signed with</font>

426
00:21:53,130 --> 00:21:55,840
the technology of Microsoft for<font color="#CCCCCC"> signed</font>

427
00:21:55,480 --> 00:21:57,430
file

428
00:21:55,840 --> 00:21:59,649
<font color="#CCCCCC">I didn't collected and Bitcoin</font><font color="#E5E5E5"> Keys</font>

429
00:21:57,430 --> 00:22:01,180
being even bitcoins you<font color="#E5E5E5"> see stuff</font>

430
00:21:59,650 --> 00:22:03,520
<font color="#E5E5E5">I didn't collect any of the</font>

431
00:22:01,180 --> 00:22:07,300
<font color="#E5E5E5">cryptocurrency there are millions of</font>

432
00:22:03,520 --> 00:22:09,790
<font color="#E5E5E5">other places where if a clerk is now</font><font color="#CCCCCC"> so</font>

433
00:22:07,300 --> 00:22:12,850
<font color="#E5E5E5">do panic</font><font color="#CCCCCC"> not because this</font><font color="#E5E5E5"> has been</font>

434
00:22:09,790 --> 00:22:16,030
already tested<font color="#E5E5E5"> this is it rechecked the</font>

435
00:22:12,850 --> 00:22:18,259
numbers in Paris<font color="#CCCCCC"> on page are</font><font color="#E5E5E5"> similar in</font>

436
00:22:16,030 --> 00:22:21,590
<font color="#E5E5E5">Quon</font>

437
00:22:18,259 --> 00:22:24,559
it varies over time but there<font color="#CCCCCC"> are very</font>

438
00:22:21,590 --> 00:22:26,658
<font color="#E5E5E5">very well done research</font><font color="#CCCCCC"> to read</font>

439
00:22:24,559 --> 00:22:28,249
<font color="#E5E5E5">available online</font><font color="#CCCCCC"> they</font><font color="#E5E5E5"> explain all the</font>

440
00:22:26,659 --> 00:22:30,769
process they explain what<font color="#E5E5E5"> is available</font>

441
00:22:28,249 --> 00:22:37,759
<font color="#E5E5E5">and</font><font color="#CCCCCC"> explain some of them</font><font color="#E5E5E5"> issues</font><font color="#CCCCCC"> of the</font>

442
00:22:30,769 --> 00:22:40,460
found now taking this idea that we<font color="#E5E5E5"> have</font>

443
00:22:37,759 --> 00:22:44,359
<font color="#E5E5E5">to check stuff but we don't</font><font color="#CCCCCC"> really know</font>

444
00:22:40,460 --> 00:22:46,460
what to<font color="#E5E5E5"> check and I don't expect anybody</font>

445
00:22:44,359 --> 00:22:49,489
to be a<font color="#E5E5E5"> photographer</font><font color="#CCCCCC"> I'm not a</font>

446
00:22:46,460 --> 00:22:51,619
<font color="#CCCCCC">photographer and</font><font color="#E5E5E5"> network guy but because</font>

447
00:22:49,489 --> 00:22:55,429
I<font color="#E5E5E5"> don't trust that technology I want</font><font color="#CCCCCC"> to</font>

448
00:22:51,619 --> 00:22:57,199
check it free works<font color="#E5E5E5"> so if we exclude</font>

449
00:22:55,429 --> 00:22:57,470
<font color="#E5E5E5">that the</font><font color="#CCCCCC"> massive</font><font color="#E5E5E5"> stuff what else can be</font>

450
00:22:57,200 --> 00:23:01,460
done

451
00:22:57,470 --> 00:23:03,429
<font color="#E5E5E5">what else can be</font><font color="#CCCCCC"> tested so if</font><font color="#E5E5E5"> we assume</font>

452
00:23:01,460 --> 00:23:05,690
<font color="#CCCCCC">that you're</font><font color="#E5E5E5"> dealing with numbers then</font>

453
00:23:03,429 --> 00:23:08,480
can I see the numbers can<font color="#E5E5E5"> you see the</font>

454
00:23:05,690 --> 00:23:11,119
these numbers where<font color="#E5E5E5"> I come from how much</font>

455
00:23:08,480 --> 00:23:14,239
number we have what is<font color="#E5E5E5"> the range of</font>

456
00:23:11,119 --> 00:23:16,970
numbers<font color="#CCCCCC"> and then what happen if</font><font color="#E5E5E5"> I</font>

457
00:23:14,239 --> 00:23:19,460
<font color="#CCCCCC">generates a lot of</font><font color="#E5E5E5"> keys if we assume</font>

458
00:23:16,970 --> 00:23:22,690
<font color="#CCCCCC">that everything is perfect</font><font color="#E5E5E5"> then if I</font>

459
00:23:19,460 --> 00:23:25,489
<font color="#CCCCCC">generate a lot of</font><font color="#E5E5E5"> keys by myself</font><font color="#CCCCCC"> I</font>

460
00:23:22,690 --> 00:23:26,989
shouldn't see<font color="#CCCCCC"> any problem</font><font color="#E5E5E5"> everything</font>

461
00:23:25,489 --> 00:23:32,090
should be<font color="#E5E5E5"> unique everything should be</font>

462
00:23:26,989 --> 00:23:34,730
<font color="#E5E5E5">fine so we start with very</font><font color="#CCCCCC"> little stuff</font>

463
00:23:32,090 --> 00:23:37,939
of mass if we have<font color="#CCCCCC"> to</font><font color="#E5E5E5"> random</font>

464
00:23:34,730 --> 00:23:40,489
<font color="#E5E5E5">distribution of numbers</font><font color="#CCCCCC"> I didn't I</font>

465
00:23:37,940 --> 00:23:41,950
<font color="#CCCCCC">didn't say primers in numbers we should</font>

466
00:23:40,489 --> 00:23:45,679
have at the end<font color="#E5E5E5"> something</font><font color="#CCCCCC"> like a</font>

467
00:23:41,950 --> 00:23:47,419
triangle<font color="#CCCCCC"> a</font><font color="#E5E5E5"> triangular distribution but</font>

468
00:23:45,679 --> 00:23:50,289
if we take<font color="#CCCCCC"> for example there is more</font>

469
00:23:47,419 --> 00:23:54,049
<font color="#E5E5E5">keys from the collected data set online</font>

470
00:23:50,289 --> 00:23:56,929
<font color="#E5E5E5">we have sort of kind of more or</font><font color="#CCCCCC"> less</font>

471
00:23:54,049 --> 00:24:01,429
<font color="#E5E5E5">triangular distribution</font><font color="#CCCCCC"> but</font><font color="#E5E5E5"> is not</font>

472
00:23:56,929 --> 00:24:03,980
<font color="#E5E5E5">really a triangle</font><font color="#CCCCCC"> so I just give an idea</font>

473
00:24:01,429 --> 00:24:08,389
it should be what<font color="#E5E5E5"> you see in the red</font>

474
00:24:03,980 --> 00:24:10,159
line but the reality is<font color="#E5E5E5"> a</font><font color="#CCCCCC"> green part now</font>

475
00:24:08,389 --> 00:24:12,918
there is a gap<font color="#CCCCCC"> in the center</font><font color="#E5E5E5"> at</font><font color="#CCCCCC"> the</font>

476
00:24:10,159 --> 00:24:16,970
beginning<font color="#E5E5E5"> and then</font><font color="#CCCCCC"> you have two</font>

477
00:24:12,919 --> 00:24:18,230
different distribution of<font color="#CCCCCC"> number because</font>

478
00:24:16,970 --> 00:24:22,929
the pendency and the tendencies are

479
00:24:18,230 --> 00:24:28,159
defined why is that looking<font color="#E5E5E5"> into</font>

480
00:24:22,929 --> 00:24:33,169
implementation<font color="#CCCCCC"> I saw only</font><font color="#E5E5E5"> the usage of</font>

481
00:24:28,159 --> 00:24:35,149
this so they implemented<font color="#E5E5E5"> it but in if</font>

482
00:24:33,169 --> 00:24:38,119
you check for<font color="#E5E5E5"> the theory in theory this</font>

483
00:24:35,149 --> 00:24:41,899
<font color="#E5E5E5">is a mathematical optimization if you do</font>

484
00:24:38,119 --> 00:24:44,959
it then<font color="#CCCCCC"> you are</font><font color="#E5E5E5"> more</font><font color="#CCCCCC"> likely to have good</font>

485
00:24:41,899 --> 00:24:48,469
keys so<font color="#E5E5E5"> your clip</font><font color="#CCCCCC"> store is more likely</font>

486
00:24:44,960 --> 00:24:50,470
to<font color="#E5E5E5"> be good but what you have</font><font color="#CCCCCC"> it's a</font>

487
00:24:48,470 --> 00:24:53,720
reduction<font color="#E5E5E5"> of space of around</font><font color="#CCCCCC"> 12 percent</font>

488
00:24:50,470 --> 00:24:56,059
<font color="#E5E5E5">so the gap</font><font color="#CCCCCC"> is the beginning if</font><font color="#E5E5E5"> I</font>

489
00:24:53,720 --> 00:24:58,039
reproduce and I create the key by myself

490
00:24:56,059 --> 00:24:59,539
with for example<font color="#CCCCCC"> OpenSSL</font>

491
00:24:58,039 --> 00:25:04,460
but they can do the<font color="#E5E5E5"> same with</font><font color="#CCCCCC"> GPG or</font>

492
00:24:59,539 --> 00:25:06,379
with the<font color="#CCCCCC"> sage you have this gap but</font><font color="#E5E5E5"> this</font>

493
00:25:04,460 --> 00:25:10,820
does not<font color="#E5E5E5"> does</font><font color="#CCCCCC"> not explain the</font><font color="#E5E5E5"> difference</font>

494
00:25:06,379 --> 00:25:13,509
in the shape of<font color="#E5E5E5"> the distribution I'm</font>

495
00:25:10,820 --> 00:25:16,189
still<font color="#E5E5E5"> working on</font><font color="#CCCCCC"> this stuff there is no</font>

496
00:25:13,509 --> 00:25:19,279
<font color="#E5E5E5">clear definition of what should be good</font>

497
00:25:16,190 --> 00:25:22,099
or bad<font color="#E5E5E5"> as far as I know there are no</font>

498
00:25:19,279 --> 00:25:26,269
<font color="#E5E5E5">tests for this and this is not really</font>

499
00:25:22,099 --> 00:25:28,749
been tested extensively so send it by

500
00:25:26,269 --> 00:25:31,879
the idea come<font color="#E5E5E5"> to me and</font><font color="#CCCCCC"> whenever</font><font color="#E5E5E5"> charge</font>

501
00:25:28,749 --> 00:25:33,649
why is that important<font color="#E5E5E5"> because if I only</font>

502
00:25:31,879 --> 00:25:35,928
focus on<font color="#E5E5E5"> this I don't need any</font><font color="#CCCCCC"> math to</font>

503
00:25:33,649 --> 00:25:38,178
check if the system<font color="#E5E5E5"> that is producing</font>

504
00:25:35,929 --> 00:25:40,340
the keys is good or bad<font color="#CCCCCC"> I take the</font>

505
00:25:38,179 --> 00:25:41,480
number<font color="#E5E5E5"> I</font><font color="#CCCCCC"> profit in a graph if the number</font>

506
00:25:40,340 --> 00:25:45,049
<font color="#CCCCCC">is the beginning</font><font color="#E5E5E5"> of the end</font><font color="#CCCCCC"> since</font>

507
00:25:41,480 --> 00:25:48,619
<font color="#CCCCCC">extreme the system is</font><font color="#E5E5E5"> broken so in the</font>

508
00:25:45,049 --> 00:25:52,759
collected<font color="#E5E5E5"> information that I had</font><font color="#CCCCCC"> 1000 26</font>

509
00:25:48,619 --> 00:25:55,908
<font color="#CCCCCC">and</font><font color="#E5E5E5"> 23 bits modulus then we have a lot</font>

510
00:25:52,759 --> 00:25:58,849
<font color="#CCCCCC">of system</font><font color="#E5E5E5"> around</font><font color="#CCCCCC"> 7000 keys that are</font>

511
00:25:55,909 --> 00:26:01,129
compacted comprised<font color="#E5E5E5"> or</font><font color="#CCCCCC"> either</font><font color="#E5E5E5"> the game</font>

512
00:25:58,849 --> 00:26:03,710
<font color="#E5E5E5">that implementation is</font><font color="#CCCCCC"> broken and</font>

513
00:26:01,129 --> 00:26:06,199
<font color="#CCCCCC">anything else</font><font color="#E5E5E5"> that</font><font color="#CCCCCC"> is not okay and this</font>

514
00:26:03,710 --> 00:26:08,899
<font color="#CCCCCC">is a very good</font><font color="#E5E5E5"> idea if you want</font><font color="#CCCCCC"> to test</font>

515
00:26:06,200 --> 00:26:10,519
<font color="#E5E5E5">you don't need anything no special</font>

516
00:26:08,899 --> 00:26:14,719
things just take<font color="#E5E5E5"> a number and you see</font>

517
00:26:10,519 --> 00:26:21,859
what<font color="#CCCCCC"> it's false the other idea is the</font>

518
00:26:14,720 --> 00:26:24,009
key<font color="#CCCCCC"> space</font><font color="#E5E5E5"> so if I have X amount of space</font>

519
00:26:21,859 --> 00:26:28,399
for<font color="#CCCCCC"> the keys usually say if you have a</font>

520
00:26:24,009 --> 00:26:30,309
1024 bit key<font color="#E5E5E5"> 2048</font><font color="#CCCCCC"> bit keys then some</font>

521
00:26:28,399 --> 00:26:36,469
space for<font color="#CCCCCC"> the key is very</font><font color="#E5E5E5"> limited it's</font>

522
00:26:30,309 --> 00:26:38,720
<font color="#E5E5E5">defined and is clearly</font><font color="#CCCCCC"> and specific</font>

523
00:26:36,470 --> 00:26:44,140
<font color="#E5E5E5">tied in a lot</font><font color="#CCCCCC"> of documentation</font><font color="#E5E5E5"> so</font>

524
00:26:38,720 --> 00:26:46,340
<font color="#E5E5E5">basically 12</font><font color="#CCCCCC"> 20</font><font color="#E5E5E5"> mm</font><font color="#CCCCCC"> 24-bit keys to</font><font color="#E5E5E5"> ever</font>

525
00:26:44,140 --> 00:26:48,980
1024 bit<font color="#CCCCCC"> Keys doesn't matter the size</font>

526
00:26:46,340 --> 00:26:51,559
you stay within a range predefined the

527
00:26:48,980 --> 00:26:57,020
range that can be<font color="#CCCCCC"> pre computed it can be</font>

528
00:26:51,559 --> 00:26:59,299
analyzed so why<font color="#E5E5E5"> don't do that and this</font>

529
00:26:57,020 --> 00:27:03,280
<font color="#E5E5E5">is what I tested so I</font><font color="#CCCCCC"> took four systems</font>

530
00:26:59,299 --> 00:27:05,929
from oldest<font color="#E5E5E5"> to newest and</font><font color="#CCCCCC"> Esther and I</font>

531
00:27:03,280 --> 00:27:09,408
let them crack and then<font color="#CCCCCC"> red</font><font color="#E5E5E5"> keys</font>

532
00:27:05,929 --> 00:27:14,030
the result is<font color="#CCCCCC"> that in all system in no</font>

533
00:27:09,409 --> 00:27:16,150
<font color="#CCCCCC">situation with the</font><font color="#E5E5E5"> center</font><font color="#CCCCCC"> 7 that I did</font>

534
00:27:14,030 --> 00:27:20,570
the<font color="#E5E5E5"> same test with other Linux systems</font>

535
00:27:16,150 --> 00:27:25,730
with system<font color="#E5E5E5"> up</font><font color="#CCCCCC"> to date hold the pressure</font>

536
00:27:20,570 --> 00:27:29,110
applied as an system configure with a

537
00:27:25,730 --> 00:27:33,620
software random number generator

538
00:27:29,110 --> 00:27:35,299
generating<font color="#E5E5E5"> he produces collision the</font>

539
00:27:33,620 --> 00:27:38,090
machine was working<font color="#CCCCCC"> the system</font><font color="#E5E5E5"> was</font>

540
00:27:35,299 --> 00:27:39,980
running interpolate<font color="#CCCCCC"> over okay but still</font>

541
00:27:38,090 --> 00:27:42,620
I had collision is iterated to the

542
00:27:39,980 --> 00:27:44,720
architecture<font color="#CCCCCC"> maybe is it</font><font color="#E5E5E5"> related to the</font>

543
00:27:42,620 --> 00:27:48,549
entropy<font color="#E5E5E5"> to the algorithm of</font><font color="#CCCCCC"> the software</font>

544
00:27:44,720 --> 00:27:52,130
<font color="#E5E5E5">this is</font><font color="#CCCCCC"> a system itself</font>

545
00:27:48,549 --> 00:27:56,450
we don't really<font color="#E5E5E5"> know I'm still testing</font>

546
00:27:52,130 --> 00:27:59,450
<font color="#CCCCCC">all the pieces but seems that is</font>

547
00:27:56,450 --> 00:28:01,760
possible<font color="#E5E5E5"> to</font><font color="#CCCCCC"> generate collision by simply</font>

548
00:27:59,450 --> 00:28:04,250
generating<font color="#E5E5E5"> keys so the more</font><font color="#CCCCCC"> Keys</font>

549
00:28:01,760 --> 00:28:06,500
<font color="#E5E5E5">generate the more collision you have the</font>

550
00:28:04,250 --> 00:28:08,630
more collision<font color="#E5E5E5"> you have the more</font><font color="#CCCCCC"> Keys</font>

551
00:28:06,500 --> 00:28:10,669
you<font color="#CCCCCC"> can break</font><font color="#E5E5E5"> because every time you</font>

552
00:28:08,630 --> 00:28:13,340
generate<font color="#E5E5E5"> a key you also generate the two</font>

553
00:28:10,669 --> 00:28:15,770
numbers<font color="#E5E5E5"> and if anybody in the planet</font>

554
00:28:13,340 --> 00:28:17,870
ever<font color="#CCCCCC"> has the same two numbers I</font><font color="#E5E5E5"> can</font>

555
00:28:15,770 --> 00:28:20,418
break the key without<font color="#E5E5E5"> them knowing that</font>

556
00:28:17,870 --> 00:28:24,500
I have these numbers<font color="#E5E5E5"> it's kind of</font>

557
00:28:20,419 --> 00:28:32,150
rainbow table<font color="#CCCCCC"> it's enormous</font><font color="#E5E5E5"> but if this</font>

558
00:28:24,500 --> 00:28:36,470
<font color="#CCCCCC">happened then</font><font color="#E5E5E5"> this can be done so what</font>

559
00:28:32,150 --> 00:28:39,230
is happening in theory we should<font color="#E5E5E5"> have no</font>

560
00:28:36,470 --> 00:28:42,710
duplication no<font color="#CCCCCC"> keys divisible by numbers</font>

561
00:28:39,230 --> 00:28:46,250
that are small no key<font color="#CCCCCC"> that share numbers</font>

562
00:28:42,710 --> 00:28:49,299
<font color="#E5E5E5">and we don't have anything that</font><font color="#CCCCCC"> has an</font>

563
00:28:46,250 --> 00:28:53,139
exponent<font color="#E5E5E5"> equal to</font><font color="#CCCCCC"> one if that happens</font>

564
00:28:49,299 --> 00:28:59,679
always<font color="#E5E5E5"> assumption</font><font color="#CCCCCC"> our bite force</font><font color="#E5E5E5"> nothing</font>

565
00:28:53,139 --> 00:29:02,049
<font color="#CCCCCC">can use anymore the same stories as far</font>

566
00:28:59,679 --> 00:29:04,600
as I known nobody has tested before the

567
00:29:02,049 --> 00:29:06,009
<font color="#E5E5E5">long-term collection of keys so if we</font>

568
00:29:04,600 --> 00:29:09,129
have a<font color="#E5E5E5"> system that is big</font><font color="#CCCCCC"> enough to</font>

569
00:29:06,009 --> 00:29:13,749
<font color="#E5E5E5">collect enough keys over a long period</font>

570
00:29:09,129 --> 00:29:16,748
<font color="#CCCCCC">of times</font><font color="#E5E5E5"> what</font><font color="#CCCCCC"> happened</font><font color="#E5E5E5"> that by</font>

571
00:29:13,749 --> 00:29:20,139
collecting<font color="#CCCCCC"> keys you will</font><font color="#E5E5E5"> immediately be</font>

572
00:29:16,749 --> 00:29:24,070
<font color="#CCCCCC">able to know in the moment the key are</font>

573
00:29:20,139 --> 00:29:26,070
created if any key is broken<font color="#E5E5E5"> what it</font>

574
00:29:24,070 --> 00:29:28,418
means that doesn't matter if you<font color="#E5E5E5"> have a</font>

575
00:29:26,070 --> 00:29:30,519
<font color="#CCCCCC">self-signed certificate or an extended</font>

576
00:29:28,419 --> 00:29:33,249
validation certificate as a<font color="#CCCCCC"> method if</font>

577
00:29:30,519 --> 00:29:36,730
<font color="#E5E5E5">you die</font><font color="#CCCCCC"> OpenVPN or an encrypted humor as</font>

578
00:29:33,249 --> 00:29:38,889
soon as you have<font color="#CCCCCC"> one key</font><font color="#E5E5E5"> generated if an</font>

579
00:29:36,730 --> 00:29:43,359
entity<font color="#E5E5E5"> is able to collect</font><font color="#CCCCCC"> enough keys</font>

580
00:29:38,889 --> 00:29:46,320
<font color="#CCCCCC">they will have enough resources to</font><font color="#E5E5E5"> make</font>

581
00:29:43,359 --> 00:29:49,389
a<font color="#E5E5E5"> system</font><font color="#CCCCCC"> that says do you have this key</font>

582
00:29:46,320 --> 00:29:51,009
<font color="#E5E5E5">no ok let's compare this key with</font>

583
00:29:49,389 --> 00:29:53,979
everything we have<font color="#E5E5E5"> maybe it takes a week</font>

584
00:29:51,009 --> 00:29:58,239
<font color="#CCCCCC">maybe take a month and it will have at</font>

585
00:29:53,980 --> 00:30:02,470
<font color="#CCCCCC">the end the</font><font color="#E5E5E5"> answer is yes I</font><font color="#CCCCCC"> have it</font><font color="#E5E5E5"> and</font>

586
00:29:58,239 --> 00:30:04,419
if the answer is yes<font color="#E5E5E5"> it's yes forever so</font>

587
00:30:02,470 --> 00:30:05,769
it means that<font color="#E5E5E5"> key and all the number</font>

588
00:30:04,419 --> 00:30:09,429
related to<font color="#CCCCCC"> the key cannot</font><font color="#E5E5E5"> be used</font>

589
00:30:05,769 --> 00:30:11,049
anymore<font color="#E5E5E5"> by anybody and any traffic or</font>

590
00:30:09,429 --> 00:30:16,350
anything<font color="#E5E5E5"> that was</font><font color="#CCCCCC"> encrypted with the</font><font color="#E5E5E5"> key</font>

591
00:30:11,049 --> 00:30:19,029
is at that moment<font color="#CCCCCC"> insecure invalid and</font>

592
00:30:16,350 --> 00:30:21,779
anybody<font color="#E5E5E5"> that</font><font color="#CCCCCC"> uses of starch is the</font><font color="#E5E5E5"> key</font>

593
00:30:19,029 --> 00:30:24,869
<font color="#E5E5E5">all the some sort</font><font color="#CCCCCC"> of</font><font color="#E5E5E5"> cryptography are</font>

594
00:30:21,779 --> 00:30:28,029
not value anymore<font color="#CCCCCC"> so you cannot trust</font>

595
00:30:24,869 --> 00:30:33,029
the key you cannot trust the data signed

596
00:30:28,029 --> 00:30:37,480
by the key written by the key or even

597
00:30:33,029 --> 00:30:41,440
processed by the key<font color="#E5E5E5"> because somebody</font>

598
00:30:37,480 --> 00:30:44,169
<font color="#E5E5E5">somewhere has</font><font color="#CCCCCC"> the private key from the</font>

599
00:30:41,440 --> 00:30:46,539
public key so it means you<font color="#CCCCCC"> take the</font>

600
00:30:44,169 --> 00:30:48,309
system<font color="#E5E5E5"> and by collecting</font><font color="#CCCCCC"> F data you can</font>

601
00:30:46,539 --> 00:30:50,679
<font color="#CCCCCC">add the private secret information</font><font color="#E5E5E5"> from</font>

602
00:30:48,309 --> 00:30:52,869
the public<font color="#CCCCCC"> information</font><font color="#E5E5E5"> if da graph is</font>

603
00:30:50,679 --> 00:30:56,580
perfectly fine mathematic is perfectly

604
00:30:52,869 --> 00:31:01,100
fine<font color="#E5E5E5"> the</font><font color="#CCCCCC"> implementation is not OK</font>

605
00:30:56,580 --> 00:31:03,500
by<font color="#E5E5E5"> collecting enough data again</font>

606
00:31:01,100 --> 00:31:05,269
the<font color="#CCCCCC"> math part</font><font color="#E5E5E5"> is perfectly fine</font><font color="#CCCCCC"> there</font>

607
00:31:03,500 --> 00:31:07,159
are no problem with that<font color="#E5E5E5"> the</font>

608
00:31:05,269 --> 00:31:09,169
<font color="#E5E5E5">implementation is okay because this</font>

609
00:31:07,159 --> 00:31:12,110
should be tested during the key

610
00:31:09,169 --> 00:31:17,570
generation<font color="#E5E5E5"> is not tested therefore well</font>

611
00:31:12,110 --> 00:31:19,879
problems<font color="#CCCCCC"> same stories happen if we have</font>

612
00:31:17,570 --> 00:31:22,759
temporary<font color="#E5E5E5"> keys the more keys you</font><font color="#CCCCCC"> have</font>

613
00:31:19,880 --> 00:31:25,730
the<font color="#E5E5E5"> highest probability there is someone</font>

614
00:31:22,759 --> 00:31:26,269
somewhere that has something related to

615
00:31:25,730 --> 00:31:28,880
<font color="#CCCCCC">your key</font>

616
00:31:26,269 --> 00:31:30,909
nobody is collecting we hope so

617
00:31:28,880 --> 00:31:33,289
<font color="#CCCCCC">somebody's collecting we don't know</font><font color="#E5E5E5"> at</font>

618
00:31:30,909 --> 00:31:35,750
the moment<font color="#E5E5E5"> I have not been able to find</font>

619
00:31:33,289 --> 00:31:37,940
<font color="#E5E5E5">almost any</font><font color="#CCCCCC"> implementation that makes</font>

620
00:31:35,750 --> 00:31:41,419
this kind of test because the really

621
00:31:37,940 --> 00:31:43,940
<font color="#E5E5E5">resource intensive for me making this</font>

622
00:31:41,419 --> 00:31:45,500
<font color="#E5E5E5">test it took two years to prepare the</font>

623
00:31:43,940 --> 00:31:47,899
system<font color="#E5E5E5"> to collect everything to crunch</font>

624
00:31:45,500 --> 00:31:50,139
the data<font color="#E5E5E5"> one run in</font><font color="#CCCCCC"> comes in data it is</font>

625
00:31:47,899 --> 00:31:55,008
around<font color="#E5E5E5"> six months</font>

626
00:31:50,139 --> 00:31:57,350
the result is millions<font color="#E5E5E5"> of kids</font><font color="#CCCCCC"> stated</font>

627
00:31:55,009 --> 00:32:00,740
problems hundreds of thousands<font color="#E5E5E5"> of keys</font>

628
00:31:57,350 --> 00:32:04,269
detects<font color="#E5E5E5"> considers time proper</font>

629
00:32:00,740 --> 00:32:08,809
cryptographic key secure that in reality

630
00:32:04,269 --> 00:32:10,909
<font color="#E5E5E5">they're</font><font color="#CCCCCC"> not problem is I will not post</font>

631
00:32:08,809 --> 00:32:13,009
this stuff<font color="#E5E5E5"> because of</font><font color="#CCCCCC"> course if anybody</font>

632
00:32:10,909 --> 00:32:16,039
has<font color="#CCCCCC"> the number then they can</font><font color="#E5E5E5"> start to</font>

633
00:32:13,009 --> 00:32:18,049
attack<font color="#E5E5E5"> a photography</font><font color="#CCCCCC"> everywhere</font>

634
00:32:16,039 --> 00:32:19,970
you cannot give the stuff to<font color="#CCCCCC"> lent if</font>

635
00:32:18,049 --> 00:32:21,529
your<font color="#E5E5E5"> company's anybody can do</font><font color="#CCCCCC"> it because</font>

636
00:32:19,970 --> 00:32:24,889
<font color="#CCCCCC">information</font><font color="#E5E5E5"> is public</font><font color="#CCCCCC"> the key is public</font>

637
00:32:21,529 --> 00:32:29,149
everybody<font color="#E5E5E5"> can have it if you</font><font color="#CCCCCC"> have a</font>

638
00:32:24,889 --> 00:32:32,899
system<font color="#E5E5E5"> like this</font><font color="#CCCCCC"> in Europe internet</font>

639
00:32:29,149 --> 00:32:36,529
problem legal problem<font color="#E5E5E5"> another part of</font>

640
00:32:32,899 --> 00:32:43,518
<font color="#E5E5E5">the planet</font><font color="#CCCCCC"> I don't know but is very</font>

641
00:32:36,529 --> 00:32:44,870
sensitive<font color="#E5E5E5"> and very delicate</font><font color="#CCCCCC"> and if the</font>

642
00:32:43,519 --> 00:32:48,080
attacker<font color="#E5E5E5"> has enough resources and is</font>

643
00:32:44,870 --> 00:32:51,370
<font color="#CCCCCC">ready to</font><font color="#E5E5E5"> spend the</font><font color="#CCCCCC"> time then is possible</font>

644
00:32:48,080 --> 00:32:54,620
to<font color="#E5E5E5"> have to mount this kind of attack so</font>

645
00:32:51,370 --> 00:32:59,779
if you have an idea<font color="#E5E5E5"> or you want to have</font>

646
00:32:54,620 --> 00:33:01,100
<font color="#E5E5E5">more information you</font><font color="#CCCCCC"> have my mail get in</font>

647
00:32:59,779 --> 00:33:03,500
<font color="#E5E5E5">touch with</font><font color="#CCCCCC"> me</font><font color="#E5E5E5"> because this</font><font color="#CCCCCC"> is an ongoing</font>

648
00:33:01,100 --> 00:33:08,480
<font color="#CCCCCC">progress so I'm going to</font><font color="#E5E5E5"> add more tests</font>

649
00:33:03,500 --> 00:33:11,450
on updater<font color="#CCCCCC"> another way</font><font color="#E5E5E5"> as soon as I get</font>

650
00:33:08,480 --> 00:33:14,240
<font color="#CCCCCC">an proper confirmation</font><font color="#E5E5E5"> a proper green</font>

651
00:33:11,450 --> 00:33:14,680
light from everybody<font color="#E5E5E5"> it will be taking</font>

652
00:33:14,240 --> 00:33:19,300
some<font color="#E5E5E5"> time</font>

653
00:33:14,680 --> 00:33:24,190
<font color="#CCCCCC">medea</font><font color="#E5E5E5"> something will arrive so this is</font>

654
00:33:19,300 --> 00:33:28,560
or what I have questions<font color="#CCCCCC"> I hope</font><font color="#E5E5E5"> you're</font>

655
00:33:24,190 --> 00:33:28,560
not<font color="#CCCCCC"> shocked yeah</font>

656
00:33:31,590 --> 00:33:39,689
and is yeah<font color="#E5E5E5"> so the question</font><font color="#CCCCCC"> is why they</font>

657
00:33:38,530 --> 00:33:42,970
<font color="#CCCCCC">pretend the stranger</font>

658
00:33:39,690 --> 00:33:45,790
they don't<font color="#E5E5E5"> pretend it because when you</font>

659
00:33:42,970 --> 00:33:48,430
generate a prime number<font color="#CCCCCC"> should be random</font>

660
00:33:45,790 --> 00:33:51,250
<font color="#CCCCCC">but we don't want to</font><font color="#E5E5E5"> make it random so</font>

661
00:33:48,430 --> 00:33:54,340
we<font color="#CCCCCC"> decide in the</font><font color="#E5E5E5"> beginning is that</font><font color="#CCCCCC"> we</font>

662
00:33:51,250 --> 00:33:58,240
set<font color="#E5E5E5"> the first and second bit to</font><font color="#CCCCCC"> 1 and</font>

663
00:33:54,340 --> 00:34:00,639
the<font color="#E5E5E5"> last bit to</font><font color="#CCCCCC"> 1</font><font color="#E5E5E5"> so always at the end</font>

664
00:33:58,240 --> 00:34:03,130
<font color="#E5E5E5">you have the models that start with and</font>

665
00:34:00,640 --> 00:34:06,610
they're the one that<font color="#E5E5E5"> is exactly the</font><font color="#CCCCCC"> cut</font>

666
00:34:03,130 --> 00:34:08,950
in the graph<font color="#CCCCCC"> that</font><font color="#E5E5E5"> is should be a</font>

667
00:34:06,610 --> 00:34:11,520
<font color="#E5E5E5">mathematical optimization to make it</font>

668
00:34:08,949 --> 00:34:14,379
faster<font color="#E5E5E5"> not more secure</font><font color="#CCCCCC"> to make it faster</font>

669
00:34:11,520 --> 00:34:16,449
we don't know what is implication<font color="#CCCCCC"> I have</font>

670
00:34:14,380 --> 00:34:22,320
not been able to<font color="#E5E5E5"> find anything</font><font color="#CCCCCC"> anywhere</font>

671
00:34:16,449 --> 00:34:25,210
<font color="#CCCCCC">that is talking</font><font color="#E5E5E5"> about this so in theory</font>

672
00:34:22,320 --> 00:34:26,970
from university courses this<font color="#E5E5E5"> is what you</font>

673
00:34:25,210 --> 00:34:30,970
should<font color="#CCCCCC"> do to make it</font><font color="#E5E5E5"> fast</font>

674
00:34:26,969 --> 00:34:33,730
apart from<font color="#CCCCCC"> that there is nothing so we</font>

675
00:34:30,969 --> 00:34:57,310
don't know<font color="#CCCCCC"> yeah question</font>

676
00:34:33,730 --> 00:34:59,860
yeah yeah so the<font color="#CCCCCC"> question is um around</font>

677
00:34:57,310 --> 00:35:02,500
2009<font color="#CCCCCC"> Debian had a</font><font color="#E5E5E5"> problem with the</font>

678
00:34:59,860 --> 00:35:05,080
random<font color="#E5E5E5"> number generation and they were</font>

679
00:35:02,500 --> 00:35:05,830
<font color="#E5E5E5">producing keys that have a fixed amount</font>

680
00:35:05,080 --> 00:35:08,140
of<font color="#CCCCCC"> bits</font>

681
00:35:05,830 --> 00:35:10,690
therefore if from the key<font color="#CCCCCC"> if you know</font>

682
00:35:08,140 --> 00:35:14,319
the key size you can generate the key

683
00:35:10,690 --> 00:35:18,100
and<font color="#E5E5E5"> you</font><font color="#CCCCCC"> can reverse the key how this is</font>

684
00:35:14,320 --> 00:35:21,460
in my data set<font color="#CCCCCC"> or how this is in the</font>

685
00:35:18,100 --> 00:35:23,500
<font color="#E5E5E5">information that I have</font><font color="#CCCCCC"> am I excluded</font>

686
00:35:21,460 --> 00:35:26,680
that<font color="#E5E5E5"> key because that would be too easy</font>

687
00:35:23,500 --> 00:35:28,150
<font color="#E5E5E5">and because</font><font color="#CCCCCC"> there is</font><font color="#E5E5E5"> another assumption</font>

688
00:35:26,680 --> 00:35:29,649
of the keys

689
00:35:28,150 --> 00:35:31,869
you're assuming<font color="#E5E5E5"> that they're coming from</font>

690
00:35:29,650 --> 00:35:33,250
<font color="#CCCCCC">Debian systems</font><font color="#E5E5E5"> but</font><font color="#CCCCCC"> we have no</font><font color="#E5E5E5"> way of</font>

691
00:35:31,869 --> 00:35:37,329
knowing<font color="#CCCCCC"> is they're coming from the DS</font>

692
00:35:33,250 --> 00:35:40,530
systems<font color="#E5E5E5"> so if you</font><font color="#CCCCCC"> assume that</font><font color="#E5E5E5"> that key</font>

693
00:35:37,329 --> 00:35:42,700
has<font color="#E5E5E5"> a hash that matched Debian system</font>

694
00:35:40,530 --> 00:35:46,630
<font color="#E5E5E5">you're making an assumption that cannot</font>

695
00:35:42,700 --> 00:35:50,799
<font color="#CCCCCC">be verified</font><font color="#E5E5E5"> so what you can do</font><font color="#CCCCCC"> is</font>

696
00:35:46,630 --> 00:35:52,450
checking the<font color="#CCCCCC"> numbers</font><font color="#E5E5E5"> without considering</font>

697
00:35:50,799 --> 00:35:54,970
even<font color="#E5E5E5"> the hash and it is what Allah what</font>

698
00:35:52,450 --> 00:35:57,098
I've done I ignored I put aside<font color="#CCCCCC"> all</font><font color="#E5E5E5"> the</font>

699
00:35:54,970 --> 00:35:59,618
<font color="#E5E5E5">blacklist</font><font color="#CCCCCC"> for Debian</font><font color="#E5E5E5"> keys and I want to</font>

700
00:35:57,099 --> 00:36:03,490
check straight<font color="#E5E5E5"> the numbers because in</font>

701
00:35:59,619 --> 00:36:05,920
that case<font color="#CCCCCC"> you in you have</font><font color="#E5E5E5"> the real</font>

702
00:36:03,490 --> 00:36:09,129
<font color="#CCCCCC">picture because unless you know that the</font>

703
00:36:05,920 --> 00:36:10,539
keys come from the<font color="#CCCCCC"> idæan system you</font>

704
00:36:09,130 --> 00:36:12,640
cannot really trust<font color="#E5E5E5"> it</font><font color="#CCCCCC"> because if you</font>

705
00:36:10,539 --> 00:36:14,559
have a<font color="#E5E5E5"> duplication of the key then you</font>

706
00:36:12,640 --> 00:36:16,118
<font color="#E5E5E5">have no way of</font><font color="#CCCCCC"> knowing if your hash is</font>

707
00:36:14,559 --> 00:36:18,609
ready to a Debian key<font color="#E5E5E5"> or</font><font color="#CCCCCC"> rather your</font>

708
00:36:16,119 --> 00:36:29,829
problem<font color="#E5E5E5"> and so I wanted to have a clean</font>

709
00:36:18,609 --> 00:36:32,230
<font color="#E5E5E5">slate for that because yeah</font><font color="#CCCCCC"> because the</font>

710
00:36:29,829 --> 00:36:34,660
Debian<font color="#E5E5E5"> Keys so the question is how can</font>

711
00:36:32,230 --> 00:36:36,490
<font color="#CCCCCC">you</font><font color="#E5E5E5"> be</font><font color="#CCCCCC"> sure</font><font color="#E5E5E5"> that they</font><font color="#CCCCCC"> have not can</font><font color="#E5E5E5"> be</font>

712
00:36:34,660 --> 00:36:40,058
from Debian or how<font color="#CCCCCC"> can you you will not</font>

713
00:36:36,490 --> 00:36:44,109
be<font color="#E5E5E5"> not sure because Debian</font><font color="#CCCCCC"> Keys you</font><font color="#E5E5E5"> can</font>

714
00:36:40,059 --> 00:36:46,450
test<font color="#E5E5E5"> that again</font><font color="#CCCCCC"> and a set of Perham</font><font color="#E5E5E5"> yeah</font>

715
00:36:44,109 --> 00:36:48,190
set of parameters that<font color="#E5E5E5"> is specific to</font>

716
00:36:46,450 --> 00:36:51,960
the Debian system<font color="#E5E5E5"> if you go</font><font color="#CCCCCC"> outside that</font>

717
00:36:48,190 --> 00:36:51,960
parameters you cannot be<font color="#CCCCCC"> true anymore</font>

718
00:36:52,799 --> 00:37:13,420
<font color="#CCCCCC">question yes first</font><font color="#E5E5E5"> I cannot fully answer</font>

719
00:37:10,539 --> 00:37:16,270
butter with red ones so question and if

720
00:37:13,420 --> 00:37:18,789
<font color="#E5E5E5">you are very large entity we can say</font>

721
00:37:16,270 --> 00:37:22,299
<font color="#E5E5E5">entity and you</font><font color="#CCCCCC"> know about</font><font color="#E5E5E5"> this</font><font color="#CCCCCC"> ten years</font>

722
00:37:18,789 --> 00:37:26,650
<font color="#E5E5E5">ago</font><font color="#CCCCCC"> what can you do with this the answer</font>

723
00:37:22,299 --> 00:37:28,839
is whatever<font color="#E5E5E5"> you want why because nobody</font>

724
00:37:26,650 --> 00:37:32,049
will be aware of<font color="#E5E5E5"> it there will</font><font color="#CCCCCC"> be no</font>

725
00:37:28,839 --> 00:37:33,970
<font color="#E5E5E5">alarm raised by anything there are no</font>

726
00:37:32,049 --> 00:37:35,619
<font color="#CCCCCC">tests there is no central</font><font color="#E5E5E5"> location there</font>

727
00:37:33,970 --> 00:37:39,038
is nothing to verify that<font color="#E5E5E5"> you know this</font>

728
00:37:35,619 --> 00:37:41,120
<font color="#E5E5E5">so you can enter not even interceptor</font>

729
00:37:39,039 --> 00:37:46,010
<font color="#E5E5E5">you can simply say</font>

730
00:37:41,120 --> 00:37:49,370
please proxy<font color="#E5E5E5"> let mean give the key so</font>

731
00:37:46,010 --> 00:37:53,060
<font color="#E5E5E5">you go in please mail system let me read</font>

732
00:37:49,370 --> 00:37:54,890
the<font color="#CCCCCC"> middle of this guide</font><font color="#E5E5E5"> okay go in</font>

733
00:37:53,060 --> 00:37:57,440
<font color="#CCCCCC">you're</font><font color="#E5E5E5"> the key</font>

734
00:37:54,890 --> 00:38:00,640
I have<font color="#E5E5E5"> encrypted file or encrypted</font>

735
00:37:57,440 --> 00:38:03,890
firmware or<font color="#E5E5E5"> a pilot</font><font color="#CCCCCC"> is being signed</font>

736
00:38:00,640 --> 00:38:06,109
<font color="#E5E5E5">digitally signed</font><font color="#CCCCCC"> er who cares you have</font>

737
00:38:03,890 --> 00:38:08,180
the key<font color="#CCCCCC"> you remove the digitally sign</font>

738
00:38:06,110 --> 00:38:10,160
<font color="#CCCCCC">inside</font><font color="#E5E5E5"> that is considered safe you</font>

739
00:38:08,180 --> 00:38:12,770
replace it<font color="#CCCCCC"> with malware and the file is</font>

740
00:38:10,160 --> 00:38:18,170
<font color="#E5E5E5">perfectly fine</font><font color="#CCCCCC"> realities malware</font><font color="#E5E5E5"> that</font>

741
00:38:12,770 --> 00:38:19,520
nobody we<font color="#CCCCCC"> know it so in</font><font color="#E5E5E5"> realities use</font>

742
00:38:18,170 --> 00:38:23,360
your imagination anything can be done

743
00:38:19,520 --> 00:38:25,150
<font color="#E5E5E5">with computer and the problem is we have</font>

744
00:38:23,360 --> 00:38:27,350
<font color="#CCCCCC">no</font><font color="#E5E5E5"> test at the moment to verify</font><font color="#CCCCCC"> this</font>

745
00:38:25,150 --> 00:38:29,780
<font color="#E5E5E5">there is no condition that can raise</font>

746
00:38:27,350 --> 00:38:30,610
<font color="#E5E5E5">this alarm at least not that I'm aware</font>

747
00:38:29,780 --> 00:38:45,160
of

748
00:38:30,610 --> 00:38:45,160
<font color="#CCCCCC">did I answer your</font><font color="#E5E5E5"> question yeah yes yes</font>

749
00:38:46,420 --> 00:38:49,630
you<font color="#CCCCCC"> can</font>

750
00:38:52,780 --> 00:39:00,500
is that also a pocket<font color="#E5E5E5"> so question is if</font>

751
00:38:57,800 --> 00:39:02,960
we<font color="#CCCCCC"> have a very big number of</font><font color="#E5E5E5"> a safe how</font>

752
00:39:00,500 --> 00:39:05,450
can identify the prime<font color="#CCCCCC"> component of big</font>

753
00:39:02,960 --> 00:39:05,990
number<font color="#E5E5E5"> can you do that the answer</font><font color="#CCCCCC"> is</font><font color="#E5E5E5"> yes</font>

754
00:39:05,450 --> 00:39:10,430
you can

755
00:39:05,990 --> 00:39:11,990
why because<font color="#E5E5E5"> it just number if I take the</font>

756
00:39:10,430 --> 00:39:15,470
<font color="#CCCCCC">number and advise the number for all the</font>

757
00:39:11,990 --> 00:39:18,049
<font color="#CCCCCC">number</font><font color="#E5E5E5"> that I have if I</font><font color="#CCCCCC"> have to multiply</font>

758
00:39:15,470 --> 00:39:19,819
<font color="#E5E5E5">two numbers that are that</font><font color="#CCCCCC"> are sharing</font><font color="#E5E5E5"> a</font>

759
00:39:18,050 --> 00:39:23,330
number I don't have to know anything

760
00:39:19,820 --> 00:39:28,340
<font color="#E5E5E5">else the math will tell me for example I</font>

761
00:39:23,330 --> 00:39:32,600
multiply 3<font color="#E5E5E5"> & 5 & 3</font><font color="#CCCCCC"> & 7</font><font color="#E5E5E5"> if I divide these</font>

762
00:39:28,340 --> 00:39:35,060
two numbers so the multiplication<font color="#E5E5E5"> of 3 &</font>

763
00:39:32,600 --> 00:39:37,250
5 has a multiplication of<font color="#E5E5E5"> 3</font><font color="#CCCCCC"> & 7</font><font color="#E5E5E5"> they</font>

764
00:39:35,060 --> 00:39:39,680
will both divide 3 because<font color="#CCCCCC"> it</font><font color="#E5E5E5"> numbers I</font>

765
00:39:37,250 --> 00:39:41,540
<font color="#CCCCCC">used I don't have to know anything</font><font color="#E5E5E5"> else</font>

766
00:39:39,680 --> 00:39:46,669
<font color="#E5E5E5">it's a very big</font><font color="#CCCCCC"> number that</font><font color="#E5E5E5"> is the same</font>

767
00:39:41,540 --> 00:39:48,310
logic very simple very<font color="#E5E5E5"> easy no magic but</font>

768
00:39:46,670 --> 00:39:51,650
to do that you have<font color="#CCCCCC"> to have the data set</font>

769
00:39:48,310 --> 00:39:53,420
and<font color="#E5E5E5"> to add the</font><font color="#CCCCCC"> data</font><font color="#E5E5E5"> set if you are</font><font color="#CCCCCC"> in</font>

770
00:39:51,650 --> 00:39:55,160
Europe<font color="#E5E5E5"> you</font>

771
00:39:53,420 --> 00:39:58,190
having trouble<font color="#CCCCCC"> if you make any</font>

772
00:39:55,160 --> 00:40:00,350
correlation if you say who has a<font color="#E5E5E5"> problem</font>

773
00:39:58,190 --> 00:40:01,970
<font color="#E5E5E5">if you say which certificate</font><font color="#CCCCCC"> to the</font>

774
00:40:00,350 --> 00:40:03,500
problem if you say which company<font color="#CCCCCC"> is a</font>

775
00:40:01,970 --> 00:40:05,810
problem you<font color="#E5E5E5"> cannot say any of that you</font>

776
00:40:03,500 --> 00:40:07,750
say<font color="#E5E5E5"> only these numbers have a problem</font>

777
00:40:05,810 --> 00:40:28,670
<font color="#CCCCCC">that's</font><font color="#E5E5E5"> it</font>

778
00:40:07,750 --> 00:40:30,980
that can be<font color="#CCCCCC"> done</font><font color="#E5E5E5"> so the question is now</font>

779
00:40:28,670 --> 00:40:37,670
<font color="#CCCCCC">that we know this what can you do about</font>

780
00:40:30,980 --> 00:40:44,390
<font color="#CCCCCC">that</font><font color="#E5E5E5"> can</font><font color="#CCCCCC"> we</font><font color="#E5E5E5"> um use math to compute</font>

781
00:40:37,670 --> 00:40:48,530
numbers and find<font color="#E5E5E5"> those numbers the</font>

782
00:40:44,390 --> 00:40:50,180
answer<font color="#CCCCCC"> is yes or no</font><font color="#E5E5E5"> my why because first</font>

783
00:40:48,530 --> 00:40:52,010
<font color="#E5E5E5">you are not using</font><font color="#CCCCCC"> are</font><font color="#E5E5E5"> no numbers using</font>

784
00:40:50,180 --> 00:40:53,960
<font color="#E5E5E5">prime numbers under certain conditions</font>

785
00:40:52,010 --> 00:40:56,870
<font color="#CCCCCC">au is</font><font color="#E5E5E5"> not an infinite</font><font color="#CCCCCC"> amount of numbers</font>

786
00:40:53,960 --> 00:40:58,070
<font color="#E5E5E5">it's a fine if it's a finite number the</font>

787
00:40:56,870 --> 00:41:00,680
<font color="#E5E5E5">amount of number is finite</font><font color="#CCCCCC"> is not</font>

788
00:40:58,070 --> 00:41:02,750
<font color="#CCCCCC">infinite</font><font color="#E5E5E5"> so if you have in a space you</font>

789
00:41:00,680 --> 00:41:06,500
can<font color="#E5E5E5"> store</font><font color="#CCCCCC"> all the numbers I'm swimming</font>

790
00:41:02,750 --> 00:41:08,870
you have not enough space then again is

791
00:41:06,500 --> 00:41:10,670
the logic correct we don't<font color="#CCCCCC"> know are the</font>

792
00:41:08,870 --> 00:41:13,279
prime number generator<font color="#CCCCCC"> okay</font><font color="#E5E5E5"> we don't</font>

793
00:41:10,670 --> 00:41:15,410
know because<font color="#CCCCCC"> they've been tested for</font>

794
00:41:13,280 --> 00:41:18,170
randomness<font color="#CCCCCC"> has not been tested for</font>

795
00:41:15,410 --> 00:41:19,759
<font color="#CCCCCC">quality</font><font color="#E5E5E5"> why because you cannot test for</font>

796
00:41:18,170 --> 00:41:24,320
quality<font color="#E5E5E5"> because you</font><font color="#CCCCCC"> have nothing to</font>

797
00:41:19,760 --> 00:41:26,590
compare them so yes you can store and

798
00:41:24,320 --> 00:41:29,540
produce keys as much as you want<font color="#E5E5E5"> and</font>

799
00:41:26,590 --> 00:41:33,200
then over time<font color="#CCCCCC"> you let enough numbers to</font>

800
00:41:29,540 --> 00:41:35,420
break<font color="#E5E5E5"> millions of kids you will not be</font>

801
00:41:33,200 --> 00:41:40,430
<font color="#CCCCCC">able</font><font color="#E5E5E5"> to quantify</font><font color="#CCCCCC"> how many reality or how</font>

802
00:41:35,420 --> 00:41:42,670
<font color="#CCCCCC">many remain but it can be done but you</font>

803
00:41:40,430 --> 00:41:46,040
need a lot of<font color="#E5E5E5"> resources and time</font>

804
00:41:42,670 --> 00:41:53,230
regardless<font color="#E5E5E5"> of how big</font><font color="#CCCCCC"> a</font><font color="#E5E5E5"> number is this</font>

805
00:41:46,040 --> 00:41:53,230
is purely a resource constraint yeah yes

806
00:42:11,349 --> 00:42:23,960
so yeah so the communities and<font color="#E5E5E5"> we tried</font>

807
00:42:20,420 --> 00:42:25,550
to<font color="#E5E5E5"> generate a lot of keys we made</font><font color="#CCCCCC"> a we</font>

808
00:42:23,960 --> 00:42:27,920
generated a lot<font color="#E5E5E5"> of keys and we</font><font color="#CCCCCC"> had no</font>

809
00:42:25,550 --> 00:42:30,410
collision so maybe the problem<font color="#E5E5E5"> is the</font>

810
00:42:27,920 --> 00:42:31,820
<font color="#CCCCCC">Ted</font><font color="#E5E5E5"> found is related to the new prime</font>

811
00:42:30,410 --> 00:42:34,879
number generator<font color="#E5E5E5"> that I have already</font>

812
00:42:31,820 --> 00:42:38,240
system that<font color="#CCCCCC"> I have i perfectly agree but</font>

813
00:42:34,880 --> 00:42:40,700
this test<font color="#E5E5E5"> is not being done in a large</font>

814
00:42:38,240 --> 00:42:44,990
scale<font color="#E5E5E5"> and we don't know what are the</font>

815
00:42:40,700 --> 00:42:47,509
<font color="#E5E5E5">comparisons because by using in general</font>

816
00:42:44,990 --> 00:42:50,118
system with general configuration<font color="#CCCCCC"> well</font>

817
00:42:47,510 --> 00:42:53,420
after they<font color="#CCCCCC"> booted with the system</font><font color="#E5E5E5"> well</font>

818
00:42:50,119 --> 00:42:55,849
up and<font color="#E5E5E5"> running I found them is my system</font>

819
00:42:53,420 --> 00:42:59,780
<font color="#E5E5E5">I use for computer for different</font>

820
00:42:55,849 --> 00:43:00,500
technologies different<font color="#CCCCCC"> stuffs</font><font color="#E5E5E5"> and they</font>

821
00:42:59,780 --> 00:43:02,089
still<font color="#E5E5E5"> at</font><font color="#CCCCCC"> random</font>

822
00:43:00,500 --> 00:43:03,530
maybe it's my<font color="#CCCCCC"> computer</font><font color="#E5E5E5"> because</font><font color="#CCCCCC"> I don't</font>

823
00:43:02,089 --> 00:43:06,730
<font color="#E5E5E5">have a hardware random generator</font>

824
00:43:03,530 --> 00:43:11,450
maybe it's my software random generator

825
00:43:06,730 --> 00:43:15,950
I'm still<font color="#E5E5E5"> testing</font><font color="#CCCCCC"> that so no attribution</font>

826
00:43:11,450 --> 00:43:18,339
no<font color="#CCCCCC"> pointing</font><font color="#E5E5E5"> what I'm just saying by</font>

827
00:43:15,950 --> 00:43:22,339
<font color="#CCCCCC">using normal systems</font><font color="#E5E5E5"> I found this I</font>

828
00:43:18,339 --> 00:43:23,900
repeated the<font color="#CCCCCC"> test three times</font><font color="#E5E5E5"> several</font>

829
00:43:22,339 --> 00:43:27,859
<font color="#E5E5E5">times over the years and I still find</font>

830
00:43:23,900 --> 00:43:31,550
<font color="#E5E5E5">them in my systems another system</font><font color="#CCCCCC"> that</font>

831
00:43:27,859 --> 00:43:33,830
<font color="#E5E5E5">has a hardware random generator I never</font>

832
00:43:31,550 --> 00:43:36,830
seen it<font color="#E5E5E5"> in very good system</font><font color="#CCCCCC"> that are</font>

833
00:43:33,830 --> 00:43:39,830
using ships with good amount<font color="#E5E5E5"> of entropy</font>

834
00:43:36,830 --> 00:43:46,369
<font color="#CCCCCC">I've</font><font color="#E5E5E5"> never seen so maybe there is a</font>

835
00:43:39,830 --> 00:43:49,089
<font color="#E5E5E5">balance</font><font color="#CCCCCC"> release so it's okay here answer</font>

836
00:43:46,369 --> 00:43:49,089
<font color="#E5E5E5">yeah</font>

837
00:44:02,240 --> 00:44:13,669
<font color="#E5E5E5">okay okay so</font><font color="#CCCCCC"> we're it's time so we</font><font color="#E5E5E5"> can</font>

838
00:44:08,490 --> 00:44:13,669
continue<font color="#CCCCCC"> after that</font><font color="#E5E5E5"> yeah thank you</font>

