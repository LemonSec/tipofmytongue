1
00:00:02,500 --> 00:00:08,250
so thank you<font color="#E5E5E5"> thank</font><font color="#CCCCCC"> you</font><font color="#E5E5E5"> good morning</font>

2
00:00:06,340 --> 00:00:11,170
<font color="#CCCCCC">everybody</font><font color="#E5E5E5"> welcome</font><font color="#CCCCCC"> to</font><font color="#E5E5E5"> the first session</font>

3
00:00:08,250 --> 00:00:14,290
to open the conference<font color="#E5E5E5"> after the</font><font color="#CCCCCC"> the</font>

4
00:00:11,170 --> 00:00:15,309
<font color="#CCCCCC">keynote about</font><font color="#E5E5E5"> feedback so again if you</font>

5
00:00:14,290 --> 00:00:17,198
<font color="#E5E5E5">have feedback at</font><font color="#CCCCCC"> the end of the session</font>

6
00:00:15,310 --> 00:00:19,960
feel free<font color="#CCCCCC"> to leave the</font><font color="#E5E5E5"> guard in</font><font color="#CCCCCC"> the back</font>

7
00:00:17,199 --> 00:00:21,339
<font color="#E5E5E5">or just</font><font color="#CCCCCC"> come talk</font><font color="#E5E5E5"> to</font><font color="#CCCCCC"> me and tell me what</font>

8
00:00:19,960 --> 00:00:24,789
I can do better or<font color="#E5E5E5"> if you have any other</font>

9
00:00:21,339 --> 00:00:26,439
questions feel<font color="#E5E5E5"> free to</font><font color="#CCCCCC"> a yet the talk</font>

10
00:00:24,789 --> 00:00:27,970
here is going<font color="#E5E5E5"> to be about angular</font>

11
00:00:26,439 --> 00:00:29,380
<font color="#E5E5E5">applications more specifically</font><font color="#CCCCCC"> about</font>

12
00:00:27,970 --> 00:00:32,049
security<font color="#E5E5E5"> and angler applications and</font>

13
00:00:29,380 --> 00:00:34,269
there's<font color="#CCCCCC"> a lot</font><font color="#E5E5E5"> of things to talk about</font>

14
00:00:32,049 --> 00:00:36,819
here<font color="#CCCCCC"> I made a selection of</font><font color="#E5E5E5"> topics that</font>

15
00:00:34,270 --> 00:00:38,830
fits<font color="#CCCCCC"> very nicely within the program of</font>

16
00:00:36,820 --> 00:00:40,390
the conference<font color="#E5E5E5"> so I'm going to refer</font><font color="#CCCCCC"> to</font>

17
00:00:38,830 --> 00:00:42,160
other talks that<font color="#E5E5E5"> will happen later</font><font color="#CCCCCC"> in</font>

18
00:00:40,390 --> 00:00:44,140
these<font color="#E5E5E5"> two days whenever there's</font>

19
00:00:42,160 --> 00:00:46,179
something<font color="#CCCCCC"> that</font><font color="#E5E5E5"> you will be explained in</font>

20
00:00:44,140 --> 00:00:48,130
more depth<font color="#E5E5E5"> maybe before we start who</font>

21
00:00:46,180 --> 00:00:52,480
here does not<font color="#E5E5E5"> know what an angular</font>

22
00:00:48,130 --> 00:00:56,980
application<font color="#E5E5E5"> is or how</font><font color="#CCCCCC"> it works</font><font color="#E5E5E5"> okay</font>

23
00:00:52,480 --> 00:00:59,410
nobody that's that's good<font color="#CCCCCC"> I don't have</font>

24
00:00:56,980 --> 00:01:00,940
to do that the really in-depth

25
00:00:59,410 --> 00:01:03,279
introduction to angular<font color="#E5E5E5"> I just want to</font>

26
00:01:00,940 --> 00:01:04,390
explain very<font color="#CCCCCC"> briefly</font><font color="#E5E5E5"> what's different</font>

27
00:01:03,280 --> 00:01:06,009
<font color="#E5E5E5">with an angular application that's</font>

28
00:01:04,390 --> 00:01:07,540
running in the browser<font color="#E5E5E5"> and why why</font><font color="#CCCCCC"> is</font>

29
00:01:06,009 --> 00:01:08,950
<font color="#CCCCCC">this</font><font color="#E5E5E5"> a paradigm shift</font><font color="#CCCCCC"> that we've seen</font>

30
00:01:07,540 --> 00:01:10,270
and<font color="#E5E5E5"> how it impacts security and then</font>

31
00:01:08,950 --> 00:01:12,159
we're<font color="#E5E5E5"> going to talk about these security</font>

32
00:01:10,270 --> 00:01:14,320
topics<font color="#CCCCCC"> after the remainder of</font><font color="#E5E5E5"> a talk</font>

33
00:01:12,159 --> 00:01:17,080
so essentially<font color="#E5E5E5"> very briefly an angular</font>

34
00:01:14,320 --> 00:01:18,550
application<font color="#E5E5E5"> you have static HTML we have</font>

35
00:01:17,080 --> 00:01:19,590
static<font color="#CCCCCC"> JavaScript on the server they</font>

36
00:01:18,550 --> 00:01:21,190
loaded in the<font color="#CCCCCC"> browser</font>

37
00:01:19,590 --> 00:01:23,110
essentially<font color="#CCCCCC"> you bootstrap the</font>

38
00:01:21,190 --> 00:01:24,908
application<font color="#E5E5E5"> you have</font><font color="#CCCCCC"> a template with</font>

39
00:01:23,110 --> 00:01:26,560
data binding<font color="#E5E5E5"> and data will be fetched</font>

40
00:01:24,909 --> 00:01:28,840
<font color="#E5E5E5">from an API and injected into that</font>

41
00:01:26,560 --> 00:01:30,640
template that's essentially in a

42
00:01:28,840 --> 00:01:32,890
<font color="#CCCCCC">nutshell what</font><font color="#E5E5E5"> an angular application is</font>

43
00:01:30,640 --> 00:01:34,479
or how<font color="#E5E5E5"> it works under the hood</font><font color="#CCCCCC"> of course</font>

44
00:01:32,890 --> 00:01:36,670
<font color="#E5E5E5">has a lot</font><font color="#CCCCCC"> more technical stuff which you</font>

45
00:01:34,479 --> 00:01:38,190
don't need<font color="#CCCCCC"> to know for</font><font color="#E5E5E5"> this talk</font><font color="#CCCCCC"> so even</font>

46
00:01:36,670 --> 00:01:40,540
if you're<font color="#E5E5E5"> not too technical don't worry</font>

47
00:01:38,190 --> 00:01:42,399
things<font color="#E5E5E5"> will will be fine and hopefully</font>

48
00:01:40,540 --> 00:01:44,220
you'll<font color="#CCCCCC"> walk away with practical security</font>

49
00:01:42,400 --> 00:01:46,960
advice for your angle applications

50
00:01:44,220 --> 00:01:48,970
biggest<font color="#E5E5E5"> difference</font><font color="#CCCCCC"> here you can see that</font>

51
00:01:46,960 --> 00:01:50,949
the server<font color="#CCCCCC"> no longer generates the pages</font>

52
00:01:48,970 --> 00:01:53,350
and server simply<font color="#E5E5E5"> gives data and the</font>

53
00:01:50,950 --> 00:01:54,460
pages<font color="#E5E5E5"> are generated and manipulated on</font>

54
00:01:53,350 --> 00:01:57,280
the client side<font color="#CCCCCC"> and that's essentially</font>

55
00:01:54,460 --> 00:01:59,530
and one of the major<font color="#E5E5E5"> shifts in an</font>

56
00:01:57,280 --> 00:02:01,540
<font color="#E5E5E5">angular application before we start a</font>

57
00:01:59,530 --> 00:02:04,299
<font color="#E5E5E5">small word about me I'm Philippe Drake</font>

58
00:02:01,540 --> 00:02:06,010
I'm from Belgium<font color="#CCCCCC"> I did a PhD in web</font>

59
00:02:04,299 --> 00:02:07,479
security<font color="#E5E5E5"> and since then I've been</font>

60
00:02:06,010 --> 00:02:10,539
running a training program<font color="#CCCCCC"> I'm still</font>

61
00:02:07,479 --> 00:02:12,400
<font color="#CCCCCC">associated in university but we</font><font color="#E5E5E5"> run a</font>

62
00:02:10,538 --> 00:02:14,380
commercial<font color="#E5E5E5"> entity that does security</font>

63
00:02:12,400 --> 00:02:15,670
<font color="#E5E5E5">assessments of angular applications of</font>

64
00:02:14,380 --> 00:02:17,440
web applications<font color="#E5E5E5"> we run</font>

65
00:02:15,670 --> 00:02:20,200
training<font color="#E5E5E5"> programs courses</font><font color="#CCCCCC"> things like</font>

66
00:02:17,440 --> 00:02:22,569
that<font color="#CCCCCC"> I'm also part of second F second F</font>

67
00:02:20,200 --> 00:02:24,099
is a week-long course<font color="#E5E5E5"> in Belgium</font><font color="#CCCCCC"> so if</font>

68
00:02:22,569 --> 00:02:26,410
you like<font color="#E5E5E5"> Belgian beer this</font><font color="#CCCCCC"> is the</font>

69
00:02:24,099 --> 00:02:28,179
<font color="#CCCCCC">perfect</font><font color="#E5E5E5"> excuse to come there and have</font>

70
00:02:26,410 --> 00:02:30,340
<font color="#E5E5E5">your bus pay for it so that's that's a</font>

71
00:02:28,180 --> 00:02:32,830
good<font color="#E5E5E5"> part it's a week-long course based</font>

72
00:02:30,340 --> 00:02:35,050
on focused on security<font color="#E5E5E5"> for developers so</font>

73
00:02:32,830 --> 00:02:37,330
it covers a broad<font color="#CCCCCC"> range of</font><font color="#E5E5E5"> topics it's a</font>

74
00:02:35,050 --> 00:02:40,000
true<font color="#CCCCCC"> trek course</font><font color="#E5E5E5"> with a lot</font><font color="#CCCCCC"> of things</font>

75
00:02:37,330 --> 00:02:41,800
going on there<font color="#E5E5E5"> but enough about me let's</font>

76
00:02:40,000 --> 00:02:45,940
<font color="#E5E5E5">talk about security</font><font color="#CCCCCC"> let's talk about</font>

77
00:02:41,800 --> 00:02:47,530
angular first topic I want<font color="#E5E5E5"> to mention or</font>

78
00:02:45,940 --> 00:02:48,550
such a<font color="#E5E5E5"> balanced cross-site scripting</font>

79
00:02:47,530 --> 00:02:50,319
there's going to be a<font color="#E5E5E5"> lot</font><font color="#CCCCCC"> more on</font>

80
00:02:48,550 --> 00:02:52,510
<font color="#E5E5E5">cross-site scripting a lot more in-depth</font>

81
00:02:50,319 --> 00:02:54,369
talks but<font color="#E5E5E5"> there's just the basics that</font>

82
00:02:52,510 --> 00:02:56,140
<font color="#E5E5E5">you</font><font color="#CCCCCC"> need to know that's essentially</font>

83
00:02:54,370 --> 00:02:58,239
every angular developer should know so

84
00:02:56,140 --> 00:02:59,760
I'm going<font color="#CCCCCC"> to be brief about first of all</font>

85
00:02:58,239 --> 00:03:03,010
recap<font color="#E5E5E5"> if you have something</font><font color="#CCCCCC"> like this</font>

86
00:02:59,760 --> 00:03:06,100
and<font color="#E5E5E5"> that happens you're essentially</font><font color="#CCCCCC"> in</font>

87
00:03:03,010 --> 00:03:07,510
trouble<font color="#E5E5E5"> that's a very simple proof of</font>

88
00:03:06,100 --> 00:03:10,989
concept of a cross-site scripting attack

89
00:03:07,510 --> 00:03:12,880
of course scripts can<font color="#E5E5E5"> be</font><font color="#CCCCCC"> our</font><font color="#E5E5E5"> Prophet</font>

90
00:03:10,989 --> 00:03:14,890
scripting can<font color="#E5E5E5"> be a lot more can</font><font color="#CCCCCC"> be HTML</font>

91
00:03:12,880 --> 00:03:16,870
injection nowadays can<font color="#E5E5E5"> be</font><font color="#CCCCCC"> a CSS</font>

92
00:03:14,890 --> 00:03:20,440
injection<font color="#E5E5E5"> this is just a very small</font>

93
00:03:16,870 --> 00:03:22,480
example<font color="#CCCCCC"> a refresher course on cross-site</font>

94
00:03:20,440 --> 00:03:24,160
scripting<font color="#E5E5E5"> back to the PHP days what</font>

95
00:03:22,480 --> 00:03:26,738
happened there you had a page<font color="#CCCCCC"> you had</font>

96
00:03:24,160 --> 00:03:28,269
some PHP code there and you put<font color="#E5E5E5"> out a</font>

97
00:03:26,739 --> 00:03:30,459
variable into the<font color="#E5E5E5"> page</font><font color="#CCCCCC"> what's going to</font>

98
00:03:28,269 --> 00:03:31,870
<font color="#CCCCCC">happen if</font><font color="#E5E5E5"> somebody if you take the</font>

99
00:03:30,459 --> 00:03:33,130
variable from<font color="#E5E5E5"> URL for example if</font>

100
00:03:31,870 --> 00:03:34,690
somebody<font color="#E5E5E5"> gives you their name you're</font>

101
00:03:33,130 --> 00:03:36,790
going to build a page with<font color="#CCCCCC"> a name that's</font>

102
00:03:34,690 --> 00:03:38,950
<font color="#CCCCCC">kind</font><font color="#E5E5E5"> of that the goal of course</font>

103
00:03:36,790 --> 00:03:40,840
<font color="#E5E5E5">hopefully all of you know by now that if</font>

104
00:03:38,950 --> 00:03:42,339
somebody gives you this then that's

105
00:03:40,840 --> 00:03:43,750
going<font color="#E5E5E5"> to happen</font><font color="#CCCCCC"> and if somebody gives</font>

106
00:03:42,340 --> 00:03:45,640
you this<font color="#E5E5E5"> you're going to load remote</font>

107
00:03:43,750 --> 00:03:47,079
<font color="#E5E5E5">scripts into your page this is the</font>

108
00:03:45,640 --> 00:03:49,179
<font color="#CCCCCC">textbook</font><font color="#E5E5E5"> definition of cross-site</font>

109
00:03:47,079 --> 00:03:51,609
scripting<font color="#E5E5E5"> this is definitely a</font><font color="#CCCCCC"> very</font><font color="#E5E5E5"> big</font>

110
00:03:49,180 --> 00:03:54,430
<font color="#CCCCCC">problem in still problems in a</font><font color="#E5E5E5"> lot</font><font color="#CCCCCC"> of</font>

111
00:03:51,609 --> 00:03:56,320
<font color="#E5E5E5">applications but we're not here to talk</font>

112
00:03:54,430 --> 00:03:58,630
<font color="#E5E5E5">about PHP I have one more slide on that</font>

113
00:03:56,320 --> 00:04:00,430
promise<font color="#CCCCCC"> then I'm done</font><font color="#E5E5E5"> how do you defend</font>

114
00:03:58,630 --> 00:04:02,319
against this well you need<font color="#CCCCCC"> to encode the</font>

115
00:04:00,430 --> 00:04:04,120
data<font color="#E5E5E5"> and when you put it into the page</font>

116
00:04:02,319 --> 00:04:06,040
<font color="#E5E5E5">this</font><font color="#CCCCCC"> is</font><font color="#E5E5E5"> again textbook</font>

117
00:04:04,120 --> 00:04:07,930
defenses against a cross-site scripting

118
00:04:06,040 --> 00:04:10,030
what this is going to do is when you

119
00:04:07,930 --> 00:04:12,069
give it some harmful<font color="#E5E5E5"> harmful input the</font>

120
00:04:10,030 --> 00:04:13,480
server is<font color="#CCCCCC"> actually going to encode the</font>

121
00:04:12,069 --> 00:04:15,130
special characters<font color="#E5E5E5"> so</font><font color="#CCCCCC"> that</font><font color="#E5E5E5"> a browser</font>

122
00:04:13,480 --> 00:04:17,260
<font color="#E5E5E5">does not get confused about the</font>

123
00:04:15,130 --> 00:04:18,820
<font color="#CCCCCC">difference between</font><font color="#E5E5E5"> data and code because</font>

124
00:04:17,260 --> 00:04:20,108
<font color="#E5E5E5">that's the essence of the</font><font color="#CCCCCC"> problem in</font>

125
00:04:18,820 --> 00:04:22,150
traditional cross-site scripting<font color="#CCCCCC"> the</font>

126
00:04:20,108 --> 00:04:23,469
<font color="#CCCCCC">server built</font><font color="#E5E5E5"> the page server knows</font>

127
00:04:22,150 --> 00:04:25,390
what's going on the server knows I'm

128
00:04:23,470 --> 00:04:27,070
going to put data here then you package

129
00:04:25,390 --> 00:04:28,270
the<font color="#E5E5E5"> whole thing into an HTML page</font><font color="#CCCCCC"> and</font>

130
00:04:27,070 --> 00:04:29,440
give that to<font color="#CCCCCC"> the</font><font color="#E5E5E5"> browser</font>

131
00:04:28,270 --> 00:04:31,030
and<font color="#E5E5E5"> then a browser starting to process</font>

132
00:04:29,440 --> 00:04:33,460
<font color="#CCCCCC">that and</font><font color="#E5E5E5"> a browser has no idea what's</font>

133
00:04:31,030 --> 00:04:36,698
going<font color="#E5E5E5"> on he sees a script egg inside a</font>

134
00:04:33,460 --> 00:04:38,198
header<font color="#E5E5E5"> an h1 it's like is that supposed</font>

135
00:04:36,699 --> 00:04:41,020
<font color="#E5E5E5">to</font><font color="#CCCCCC"> be there I don't know</font><font color="#E5E5E5"> I have no idea</font>

136
00:04:38,199 --> 00:04:42,550
<font color="#CCCCCC">maybe maybe yes maybe no so</font><font color="#E5E5E5"> of course</font>

137
00:04:41,020 --> 00:04:44,349
when<font color="#E5E5E5"> a browser is in doubt is simply</font>

138
00:04:42,550 --> 00:04:46,900
<font color="#E5E5E5">gonna execute that's what the browser</font>

139
00:04:44,349 --> 00:04:49,120
does<font color="#E5E5E5"> just very well actually</font><font color="#CCCCCC"> and</font><font color="#E5E5E5"> that's</font>

140
00:04:46,900 --> 00:04:50,349
when you have cross-site scripting<font color="#E5E5E5"> what</font>

141
00:04:49,120 --> 00:04:52,150
is the main problem<font color="#CCCCCC"> with</font><font color="#E5E5E5"> these kind of</font>

142
00:04:50,349 --> 00:04:55,180
things<font color="#CCCCCC"> why is it so hard to</font><font color="#E5E5E5"> defend</font>

143
00:04:52,150 --> 00:04:57,638
against this because<font color="#E5E5E5"> it's not limited to</font>

144
00:04:55,180 --> 00:05:00,099
one output<font color="#CCCCCC"> it's everywhere your whole</font>

145
00:04:57,639 --> 00:05:02,169
application is full with outputs they

146
00:05:00,099 --> 00:05:03,969
are in all<font color="#E5E5E5"> kinds of different contexts</font>

147
00:05:02,169 --> 00:05:05,198
<font color="#E5E5E5">as you can see here I'm not</font><font color="#CCCCCC"> sure where</font>

148
00:05:03,970 --> 00:05:06,729
you can see the<font color="#E5E5E5"> laser pointer but as you</font>

149
00:05:05,199 --> 00:05:09,190
can<font color="#CCCCCC"> see you know the first</font><font color="#E5E5E5"> line</font><font color="#CCCCCC"> here and</font>

150
00:05:06,729 --> 00:05:10,990
this is inside a script lock you can

151
00:05:09,190 --> 00:05:13,630
have it inside an HTML attribute you<font color="#CCCCCC"> can</font>

152
00:05:10,990 --> 00:05:17,650
fit inside<font color="#E5E5E5"> an</font><font color="#CCCCCC"> HTML tag</font><font color="#E5E5E5"> and all of these</font>

153
00:05:13,630 --> 00:05:20,020
contexts require different way of

154
00:05:17,650 --> 00:05:22,120
<font color="#E5E5E5">encoding characters for</font><font color="#CCCCCC"> example a script</font>

155
00:05:20,020 --> 00:05:23,229
tag the<font color="#CCCCCC"> Open bracket</font><font color="#E5E5E5"> is dangerous in a</font>

156
00:05:22,120 --> 00:05:24,789
certain complex<font color="#E5E5E5"> but doesn't mean</font>

157
00:05:23,229 --> 00:05:27,030
anything in another context and that<font color="#E5E5E5"> is</font>

158
00:05:24,789 --> 00:05:29,680
why cross-site scripting<font color="#E5E5E5"> is so difficult</font>

159
00:05:27,030 --> 00:05:31,809
<font color="#E5E5E5">like I</font><font color="#CCCCCC"> said I'm done</font><font color="#E5E5E5"> with PHP let's move</font>

160
00:05:29,680 --> 00:05:33,490
to angular angular actually<font color="#E5E5E5"> makes</font>

161
00:05:31,810 --> 00:05:36,789
cross-site scripting a lot less painful

162
00:05:33,490 --> 00:05:39,219
<font color="#CCCCCC">why because now we have a template</font><font color="#E5E5E5"> on</font>

163
00:05:36,789 --> 00:05:41,590
<font color="#CCCCCC">the client side and we fetch data</font><font color="#E5E5E5"> from</font>

164
00:05:39,219 --> 00:05:43,509
an<font color="#E5E5E5"> API and</font><font color="#CCCCCC"> we insert API into the</font>

165
00:05:41,590 --> 00:05:45,609
template<font color="#E5E5E5"> so the problem that we</font><font color="#CCCCCC"> had</font>

166
00:05:43,509 --> 00:05:47,139
<font color="#CCCCCC">before that</font><font color="#E5E5E5"> the server generates a page</font>

167
00:05:45,610 --> 00:05:48,969
gives<font color="#E5E5E5"> you to the browser and all context</font>

168
00:05:47,139 --> 00:05:51,610
information<font color="#CCCCCC"> as well is</font><font color="#E5E5E5"> lost</font><font color="#CCCCCC"> that</font><font color="#E5E5E5"> problem</font>

169
00:05:48,969 --> 00:05:53,139
is gone now<font color="#E5E5E5"> when you insert something</font>

170
00:05:51,610 --> 00:05:55,120
like this on the<font color="#CCCCCC"> client</font><font color="#E5E5E5"> side angular</font>

171
00:05:53,139 --> 00:05:57,069
will have to put it into the template

172
00:05:55,120 --> 00:05:58,810
itself<font color="#E5E5E5"> angular knows what it's doing it</font>

173
00:05:57,069 --> 00:06:00,669
knows like<font color="#E5E5E5"> whoa this should be data this</font>

174
00:05:58,810 --> 00:06:02,139
should<font color="#E5E5E5"> never ever be code so what you're</font>

175
00:06:00,669 --> 00:06:03,729
going<font color="#CCCCCC"> to</font><font color="#E5E5E5"> get is the thing on the</font><font color="#CCCCCC"> right</font>

176
00:06:02,139 --> 00:06:04,930
<font color="#CCCCCC">are going to see the script</font><font color="#E5E5E5"> code it's</font>

177
00:06:03,729 --> 00:06:07,180
not<font color="#E5E5E5"> going to be executed it's going to</font>

178
00:06:04,930 --> 00:06:09,430
be rendered and<font color="#E5E5E5"> this is angular</font><font color="#CCCCCC"> at work</font>

179
00:06:07,180 --> 00:06:12,219
<font color="#E5E5E5">protecting</font><font color="#CCCCCC"> you against process shipping</font>

180
00:06:09,430 --> 00:06:13,449
this is<font color="#E5E5E5"> essentially what a server</font><font color="#CCCCCC"> what</font>

181
00:06:12,219 --> 00:06:13,930
<font color="#E5E5E5">you have to do manually on the server</font>

182
00:06:13,449 --> 00:06:15,550
before

183
00:06:13,930 --> 00:06:17,919
<font color="#E5E5E5">nowadays our framework included on the</font>

184
00:06:15,550 --> 00:06:19,960
server as well essentially<font color="#CCCCCC"> that job has</font>

185
00:06:17,919 --> 00:06:21,490
shifted from<font color="#E5E5E5"> server side to client side</font>

186
00:06:19,960 --> 00:06:24,068
one<font color="#E5E5E5"> of the big impacts of building</font>

187
00:06:21,490 --> 00:06:25,650
<font color="#CCCCCC">client-side JavaScript applications</font><font color="#E5E5E5"> the</font>

188
00:06:24,069 --> 00:06:29,229
<font color="#E5E5E5">way we do today</font>

189
00:06:25,650 --> 00:06:31,210
of course if you want<font color="#E5E5E5"> to show some</font><font color="#CCCCCC"> HTML</font>

190
00:06:29,229 --> 00:06:33,430
and it's going<font color="#E5E5E5"> to be painful</font><font color="#CCCCCC"> this</font><font color="#E5E5E5"> does</font>

191
00:06:31,210 --> 00:06:35,198
not<font color="#E5E5E5"> work we consider the blink I could</font>

192
00:06:33,430 --> 00:06:36,909
be<font color="#CCCCCC"> non harmful here and you actually</font>

193
00:06:35,199 --> 00:06:38,500
<font color="#E5E5E5">want</font><font color="#CCCCCC"> that to work but we want the</font>

194
00:06:36,909 --> 00:06:40,570
browser to pick it up<font color="#E5E5E5"> and do something</font>

195
00:06:38,500 --> 00:06:43,840
useful with<font color="#CCCCCC"> it</font>

196
00:06:40,570 --> 00:06:45,760
so this is a<font color="#E5E5E5"> problem with its automatic</font>

197
00:06:43,840 --> 00:06:47,830
escaping<font color="#E5E5E5"> but and you can</font><font color="#CCCCCC"> use something</font>

198
00:06:45,760 --> 00:06:49,810
<font color="#E5E5E5">called sanitization so if you bind this</font>

199
00:06:47,830 --> 00:06:52,900
<font color="#CCCCCC">to an angular 2 for example</font><font color="#E5E5E5"> to an inner</font>

200
00:06:49,810 --> 00:06:55,630
HTML attribute it's going to be put into

201
00:06:52,900 --> 00:06:57,609
<font color="#CCCCCC">there into the Dom</font><font color="#E5E5E5"> the angular is going</font>

202
00:06:55,630 --> 00:06:59,980
to make<font color="#E5E5E5"> sure that</font><font color="#CCCCCC"> it works as it's</font>

203
00:06:57,610 --> 00:07:01,180
supposed<font color="#E5E5E5"> so this is going to well</font>

204
00:06:59,980 --> 00:07:03,130
honestly I haven't<font color="#E5E5E5"> checked</font><font color="#CCCCCC"> there in</font><font color="#E5E5E5"> the</font>

205
00:07:01,180 --> 00:07:04,780
<font color="#CCCCCC">bloom</font><font color="#E5E5E5"> tag is supported or</font><font color="#CCCCCC"> not but let's</font>

206
00:07:03,130 --> 00:07:07,300
<font color="#CCCCCC">assume that</font><font color="#E5E5E5"> it is supported and it's</font>

207
00:07:04,780 --> 00:07:08,789
going<font color="#E5E5E5"> to be allowed to be processed by</font>

208
00:07:07,300 --> 00:07:11,770
the browser<font color="#CCCCCC"> it's not going to be escaped</font>

209
00:07:08,790 --> 00:07:15,670
by the<font color="#E5E5E5"> way in angular 1 this works works</font>

210
00:07:11,770 --> 00:07:19,000
as well<font color="#E5E5E5"> with the ng bind HTML directive</font>

211
00:07:15,670 --> 00:07:22,030
and<font color="#CCCCCC"> the ng</font><font color="#E5E5E5"> sanitized module if you're</font>

212
00:07:19,000 --> 00:07:24,100
injecting something<font color="#E5E5E5"> dangerous here let's</font>

213
00:07:22,030 --> 00:07:26,409
say you have some some data<font color="#E5E5E5"> and you have</font>

214
00:07:24,100 --> 00:07:28,060
a script<font color="#CCCCCC"> tag</font><font color="#E5E5E5"> in there the data is going</font>

215
00:07:26,410 --> 00:07:29,980
<font color="#E5E5E5">to be inserted but the whole point of</font>

216
00:07:28,060 --> 00:07:31,870
the sanitizer is a<font color="#E5E5E5"> little take out the</font>

217
00:07:29,980 --> 00:07:34,090
dangerous<font color="#E5E5E5"> parts and leave the rest of</font>

218
00:07:31,870 --> 00:07:35,350
the data<font color="#CCCCCC"> untouched</font><font color="#E5E5E5"> so it's going to</font>

219
00:07:34,090 --> 00:07:37,239
<font color="#E5E5E5">process the data it's</font><font color="#CCCCCC"> going to look</font><font color="#E5E5E5"> for</font>

220
00:07:35,350 --> 00:07:39,070
script<font color="#E5E5E5"> tags that's not something we</font><font color="#CCCCCC"> want</font>

221
00:07:37,240 --> 00:07:41,020
in<font color="#E5E5E5"> our data let's take it out and leave</font>

222
00:07:39,070 --> 00:07:42,159
the rest<font color="#E5E5E5"> untouched</font><font color="#CCCCCC"> this works</font><font color="#E5E5E5"> for</font><font color="#CCCCCC"> all</font>

223
00:07:41,020 --> 00:07:43,840
kinds<font color="#CCCCCC"> of</font><font color="#E5E5E5"> other</font><font color="#CCCCCC"> things</font><font color="#E5E5E5"> as well if you</font>

224
00:07:42,160 --> 00:07:46,330
have an<font color="#E5E5E5"> own error handler with an image</font>

225
00:07:43,840 --> 00:07:47,950
<font color="#CCCCCC">attributes the image tag the image tag</font>

226
00:07:46,330 --> 00:07:50,020
will<font color="#CCCCCC"> be there the own error handler will</font>

227
00:07:47,950 --> 00:07:53,080
be removed<font color="#CCCCCC"> that's again</font><font color="#E5E5E5"> the sanitizers</font>

228
00:07:50,020 --> 00:07:56,799
work so again<font color="#E5E5E5"> angular kind of has</font><font color="#CCCCCC"> you</font>

229
00:07:53,080 --> 00:07:58,330
<font color="#CCCCCC">back</font><font color="#E5E5E5"> here that's that's a good thing the</font>

230
00:07:56,800 --> 00:08:00,510
only<font color="#E5E5E5"> thing you need to keep in</font><font color="#CCCCCC"> mind</font><font color="#E5E5E5"> or</font>

231
00:07:58,330 --> 00:08:02,710
one of the the most important things is

232
00:08:00,510 --> 00:08:04,870
respect what angular is doing and don't

233
00:08:02,710 --> 00:08:06,219
<font color="#E5E5E5">try to go against it essentially your</font>

234
00:08:04,870 --> 00:08:07,570
job is<font color="#CCCCCC"> to</font><font color="#E5E5E5"> get out</font><font color="#CCCCCC"> of the way and let</font>

235
00:08:06,220 --> 00:08:10,900
anyone do whatever it does best

236
00:08:07,570 --> 00:08:12,040
so<font color="#CCCCCC"> in</font><font color="#E5E5E5"> angular 2 this</font><font color="#CCCCCC"> always happens</font>

237
00:08:10,900 --> 00:08:13,960
automatically you<font color="#E5E5E5"> don't need to enable</font>

238
00:08:12,040 --> 00:08:16,510
something<font color="#E5E5E5"> and this just works out of the</font>

239
00:08:13,960 --> 00:08:18,370
<font color="#E5E5E5">box so the only thing you need to make</font>

240
00:08:16,510 --> 00:08:19,810
sure<font color="#E5E5E5"> is</font><font color="#CCCCCC"> that every output</font><font color="#E5E5E5"> goes actually</font>

241
00:08:18,370 --> 00:08:21,460
<font color="#CCCCCC">true</font><font color="#E5E5E5"> angular once you start</font><font color="#CCCCCC"> calling</font>

242
00:08:19,810 --> 00:08:23,800
low-level<font color="#E5E5E5"> though maybe ice once you</font>

243
00:08:21,460 --> 00:08:25,510
start using jQuery directly angular is

244
00:08:23,800 --> 00:08:26,590
no<font color="#E5E5E5"> longer in the mix and it cannot</font>

245
00:08:25,510 --> 00:08:28,990
protect<font color="#E5E5E5"> you against these kind of</font>

246
00:08:26,590 --> 00:08:31,419
dangerous attacks<font color="#E5E5E5"> that's number one</font>

247
00:08:28,990 --> 00:08:34,060
number<font color="#E5E5E5"> two is there are some methods</font>

248
00:08:31,420 --> 00:08:35,950
<font color="#E5E5E5">that</font><font color="#CCCCCC"> actually allow you</font><font color="#E5E5E5"> to bypass a</font>

249
00:08:34,059 --> 00:08:37,839
sanitizer to actually mark something<font color="#E5E5E5"> as</font>

250
00:08:35,950 --> 00:08:41,290
implicitly trusted and<font color="#CCCCCC"> output it</font>

251
00:08:37,840 --> 00:08:42,580
<font color="#CCCCCC">directly into</font><font color="#E5E5E5"> the Dom this is not the</font>

252
00:08:41,289 --> 00:08:44,500
right way to do<font color="#E5E5E5"> this if you have</font>

253
00:08:42,580 --> 00:08:46,960
untrusted data there this is meant to<font color="#E5E5E5"> be</font>

254
00:08:44,500 --> 00:08:49,000
used<font color="#E5E5E5"> for static snippets to</font><font color="#CCCCCC"> allow them</font>

255
00:08:46,960 --> 00:08:51,340
to<font color="#CCCCCC"> be outputted directly</font><font color="#E5E5E5"> but not ever</font>

256
00:08:49,000 --> 00:08:53,320
<font color="#E5E5E5">for untrusted data and angular</font><font color="#CCCCCC"> 1 these</font>

257
00:08:51,340 --> 00:08:54,550
functions work out<font color="#CCCCCC"> just</font><font color="#E5E5E5"> as HTML which</font>

258
00:08:53,320 --> 00:08:56,560
<font color="#CCCCCC">costs a bit</font><font color="#E5E5E5"> of compute</font>

259
00:08:54,550 --> 00:08:58,449
by the name and<font color="#CCCCCC"> people are using it</font><font color="#E5E5E5"> for</font>

260
00:08:56,560 --> 00:08:59,530
<font color="#CCCCCC">some security purposes so they</font><font color="#E5E5E5"> renamed</font>

261
00:08:58,450 --> 00:09:02,170
these things<font color="#CCCCCC"> and</font><font color="#E5E5E5"> angled</font><font color="#CCCCCC"> through to</font>

262
00:08:59,530 --> 00:09:03,400
bypass security<font color="#CCCCCC"> process HTML and the</font>

263
00:09:02,170 --> 00:09:04,780
bypass<font color="#E5E5E5"> security should be like the</font>

264
00:09:03,400 --> 00:09:06,370
trigger<font color="#E5E5E5"> when you write this in your code</font>

265
00:09:04,780 --> 00:09:08,290
<font color="#CCCCCC">should be</font><font color="#E5E5E5"> like a dream</font><font color="#CCCCCC"> like what am i</font>

266
00:09:06,370 --> 00:09:10,210
<font color="#CCCCCC">doing</font><font color="#E5E5E5"> many of you</font><font color="#CCCCCC"> should read up</font><font color="#E5E5E5"> on</font><font color="#CCCCCC"> what</font>

267
00:09:08,290 --> 00:09:12,400
this<font color="#E5E5E5"> really does and maybe I should be</font>

268
00:09:10,210 --> 00:09:16,090
aware of<font color="#CCCCCC"> all the</font><font color="#E5E5E5"> consequences when I</font>

269
00:09:12,400 --> 00:09:18,670
start to do that that<font color="#E5E5E5"> brings me to the</font>

270
00:09:16,090 --> 00:09:20,980
first<font color="#E5E5E5"> takeaway so like I said a lot of</font>

271
00:09:18,670 --> 00:09:24,459
other talks<font color="#E5E5E5"> go into more details on this</font>

272
00:09:20,980 --> 00:09:26,290
<font color="#E5E5E5">so I just</font><font color="#CCCCCC"> wanted</font><font color="#E5E5E5"> to give</font><font color="#CCCCCC"> you the heads</font>

273
00:09:24,460 --> 00:09:28,300
up<font color="#E5E5E5"> of what it's all</font><font color="#CCCCCC"> about</font><font color="#E5E5E5"> and what you</font>

274
00:09:26,290 --> 00:09:31,660
should know and when you're dealing<font color="#E5E5E5"> with</font>

275
00:09:28,300 --> 00:09:33,579
angular essentially angular does a

276
00:09:31,660 --> 00:09:35,949
pretty good job<font color="#CCCCCC"> so</font><font color="#E5E5E5"> let it do its job</font>

277
00:09:33,580 --> 00:09:37,630
that's<font color="#E5E5E5"> the main lesson about cross-site</font>

278
00:09:35,950 --> 00:09:39,900
<font color="#E5E5E5">scripting protection that I can give you</font>

279
00:09:37,630 --> 00:09:42,430
when you're building angular<font color="#CCCCCC"> X cages</font>

280
00:09:39,900 --> 00:09:44,590
tree potentially dangerous things<font color="#E5E5E5"> that</font>

281
00:09:42,430 --> 00:09:45,880
you can do<font color="#E5E5E5"> um first of all you should</font>

282
00:09:44,590 --> 00:09:48,280
never<font color="#E5E5E5"> ever generate templates on the</font>

283
00:09:45,880 --> 00:09:50,500
<font color="#E5E5E5">server using untrusted data this is a</font>

284
00:09:48,280 --> 00:09:52,270
<font color="#E5E5E5">very complicated topic which I'm pretty</font>

285
00:09:50,500 --> 00:09:54,430
sure another talk is going<font color="#E5E5E5"> to cover in a</font>

286
00:09:52,270 --> 00:09:56,560
lot<font color="#E5E5E5"> of detail so go there if you want to</font>

287
00:09:54,430 --> 00:09:58,959
<font color="#E5E5E5">know more then be aware</font><font color="#CCCCCC"> that that's</font>

288
00:09:56,560 --> 00:10:00,550
something<font color="#E5E5E5"> really dangerous also don't</font>

289
00:09:58,960 --> 00:10:03,250
use<font color="#CCCCCC"> a low-level API as we</font><font color="#E5E5E5"> cover that and</font>

290
00:10:00,550 --> 00:10:04,810
don't use the<font color="#CCCCCC"> bypass security functions</font>

291
00:10:03,250 --> 00:10:07,660
<font color="#E5E5E5">unless you know what you're doing and</font>

292
00:10:04,810 --> 00:10:09,339
was it static data complimentary if you

293
00:10:07,660 --> 00:10:10,800
want more control<font color="#E5E5E5"> there's a security</font>

294
00:10:09,339 --> 00:10:13,750
policy<font color="#CCCCCC"> called content</font><font color="#E5E5E5"> security policy</font>

295
00:10:10,800 --> 00:10:16,240
<font color="#CCCCCC">most of you have heard of it by now I</font>

296
00:10:13,750 --> 00:10:17,680
<font color="#E5E5E5">suppose again</font><font color="#CCCCCC"> other talks covered</font><font color="#E5E5E5"> is in</font>

297
00:10:16,240 --> 00:10:20,290
<font color="#E5E5E5">more detail so I'm not going to go</font><font color="#CCCCCC"> into</font>

298
00:10:17,680 --> 00:10:22,270
detail<font color="#CCCCCC"> here if you are</font><font color="#E5E5E5"> interested in</font>

299
00:10:20,290 --> 00:10:24,339
locking down<font color="#E5E5E5"> your context in restricting</font>

300
00:10:22,270 --> 00:10:28,540
behavior when an attack<font color="#E5E5E5"> should</font><font color="#CCCCCC"> happen</font>

301
00:10:24,339 --> 00:10:29,860
then<font color="#E5E5E5"> CSP is directly to go all right</font><font color="#CCCCCC"> I</font>

302
00:10:28,540 --> 00:10:33,060
have two takeaways by the way so the

303
00:10:29,860 --> 00:10:35,500
<font color="#CCCCCC">first one is done let's move</font><font color="#E5E5E5"> on to</font>

304
00:10:33,060 --> 00:10:37,449
something<font color="#E5E5E5"> else another aspect of</font><font color="#CCCCCC"> annular</font>

305
00:10:35,500 --> 00:10:39,130
<font color="#E5E5E5">application that's a bit less technical</font>

306
00:10:37,450 --> 00:10:40,180
in a sense that<font color="#CCCCCC"> it's not code</font><font color="#E5E5E5"> level</font>

307
00:10:39,130 --> 00:10:41,400
security<font color="#E5E5E5"> but it's more on</font><font color="#CCCCCC"> the</font>

308
00:10:40,180 --> 00:10:43,479
architectural level<font color="#E5E5E5"> and it's about</font>

309
00:10:41,400 --> 00:10:45,160
session management<font color="#E5E5E5"> and it's about</font>

310
00:10:43,480 --> 00:10:47,080
questions like<font color="#E5E5E5"> should I use cookies or</font>

311
00:10:45,160 --> 00:10:48,219
tokens<font color="#E5E5E5"> or the question here how</font><font color="#CCCCCC"> do you</font>

312
00:10:47,080 --> 00:10:49,900
do session management<font color="#E5E5E5"> in an angular</font>

313
00:10:48,220 --> 00:10:52,050
<font color="#E5E5E5">application of course people have</font>

314
00:10:49,900 --> 00:10:55,240
<font color="#E5E5E5">helpful advice like yeah you</font><font color="#CCCCCC"> should use</font>

315
00:10:52,050 --> 00:10:58,589
<font color="#CCCCCC">Joe tokens and attach it to every</font>

316
00:10:55,240 --> 00:11:01,900
<font color="#E5E5E5">request and put it in local storage</font><font color="#CCCCCC"> I</font>

317
00:10:58,589 --> 00:11:04,089
kind of don't necessarily<font color="#E5E5E5"> disagree but I</font>

318
00:11:01,900 --> 00:11:07,030
<font color="#E5E5E5">think it's a lot more nuanced and a lot</font>

319
00:11:04,089 --> 00:11:08,680
of<font color="#E5E5E5"> people seem seem to represent it</font><font color="#CCCCCC"> and</font>

320
00:11:07,030 --> 00:11:10,810
that's why I wanted to go in

321
00:11:08,680 --> 00:11:12,760
detail here stuff I'm<font color="#E5E5E5"> going to cover</font>

322
00:11:10,810 --> 00:11:14,319
this is based on what I've seen<font color="#E5E5E5"> in</font>

323
00:11:12,760 --> 00:11:15,850
angular applications<font color="#E5E5E5"> that all of people</font>

324
00:11:14,320 --> 00:11:19,480
get wrong<font color="#E5E5E5"> a lot of common mistakes</font><font color="#CCCCCC"> that</font>

325
00:11:15,850 --> 00:11:21,220
<font color="#E5E5E5">are being made so I am I kind of built</font>

326
00:11:19,480 --> 00:11:23,260
this<font color="#E5E5E5"> session management story on top of</font>

327
00:11:21,220 --> 00:11:25,360
that to explain<font color="#E5E5E5"> to you what the choices</font>

328
00:11:23,260 --> 00:11:26,680
are<font color="#E5E5E5"> what the consequences are of your</font>

329
00:11:25,360 --> 00:11:28,750
choices and how you<font color="#E5E5E5"> should approach this</font>

330
00:11:26,680 --> 00:11:30,489
in your application<font color="#CCCCCC"> we're going to</font><font color="#E5E5E5"> say</font>

331
00:11:28,750 --> 00:11:32,020
when<font color="#CCCCCC"> swear something is good or bad</font><font color="#E5E5E5"> I'm</font>

332
00:11:30,490 --> 00:11:33,700
going to give you the options and it's

333
00:11:32,020 --> 00:11:37,630
up<font color="#CCCCCC"> to you to decide how to deal with</font>

334
00:11:33,700 --> 00:11:39,670
<font color="#E5E5E5">that</font><font color="#CCCCCC"> session</font><font color="#E5E5E5"> management's kind of</font>

335
00:11:37,630 --> 00:11:41,470
important<font color="#CCCCCC"> these</font><font color="#E5E5E5"> are two</font><font color="#CCCCCC"> versions of the</font>

336
00:11:39,670 --> 00:11:43,779
OS top<font color="#E5E5E5"> 10 I'm not going to go into</font>

337
00:11:41,470 --> 00:11:44,110
detail on<font color="#E5E5E5"> whether one is better than</font><font color="#CCCCCC"> the</font>

338
00:11:43,779 --> 00:11:45,820
other

339
00:11:44,110 --> 00:11:47,980
that's probably for someone else to

340
00:11:45,820 --> 00:11:49,270
decide<font color="#E5E5E5"> the reason I'm showing this is</font>

341
00:11:47,980 --> 00:11:50,860
<font color="#CCCCCC">because session measurement is in</font><font color="#E5E5E5"> there</font>

342
00:11:49,270 --> 00:11:51,939
the second thing is broken

343
00:11:50,860 --> 00:11:54,070
authentication and session management

344
00:11:51,940 --> 00:11:55,450
<font color="#E5E5E5">showing the session management</font><font color="#CCCCCC"> it's kind</font>

345
00:11:54,070 --> 00:11:57,700
of a hard<font color="#CCCCCC"> problem to get</font><font color="#E5E5E5"> right even</font>

346
00:11:55,450 --> 00:11:58,750
though it<font color="#E5E5E5"> sounds very simple you can</font>

347
00:11:57,700 --> 00:12:01,060
you're<font color="#E5E5E5"> going to see there's a lot of</font>

348
00:11:58,750 --> 00:12:03,250
stuff<font color="#CCCCCC"> you</font><font color="#E5E5E5"> need</font><font color="#CCCCCC"> to get right to make</font><font color="#E5E5E5"> it</font>

349
00:12:01,060 --> 00:12:05,109
work<font color="#E5E5E5"> and there's a second attack called</font>

350
00:12:03,250 --> 00:12:07,180
cross-site request forgery<font color="#E5E5E5"> which is</font>

351
00:12:05,110 --> 00:12:08,860
something<font color="#E5E5E5"> I will explain in a bit and</font>

352
00:12:07,180 --> 00:12:13,060
especially related to cookie based

353
00:12:08,860 --> 00:12:15,400
session<font color="#E5E5E5"> versions so session management</font>

354
00:12:13,060 --> 00:12:16,989
<font color="#E5E5E5">to me it's not about cookies versus</font>

355
00:12:15,400 --> 00:12:19,360
tokens there are three properties<font color="#E5E5E5"> that</font>

356
00:12:16,990 --> 00:12:22,209
impact and the way your system<font color="#E5E5E5"> works and</font>

357
00:12:19,360 --> 00:12:23,890
<font color="#E5E5E5">the way or</font><font color="#CCCCCC"> the</font><font color="#E5E5E5"> things you should take</font>

358
00:12:22,209 --> 00:12:27,040
<font color="#E5E5E5">into account when</font><font color="#CCCCCC"> you're building</font><font color="#E5E5E5"> your</font>

359
00:12:23,890 --> 00:12:29,020
application<font color="#E5E5E5"> these are the transport</font>

360
00:12:27,040 --> 00:12:30,579
mechanism<font color="#CCCCCC"> locality of</font><font color="#E5E5E5"> the session</font>

361
00:12:29,020 --> 00:12:32,560
<font color="#E5E5E5">management and representation of the</font>

362
00:12:30,580 --> 00:12:34,180
session data<font color="#E5E5E5"> then I cover each of these</font>

363
00:12:32,560 --> 00:12:35,290
in<font color="#E5E5E5"> a</font><font color="#CCCCCC"> bit more detail</font><font color="#E5E5E5"> and then we're</font>

364
00:12:34,180 --> 00:12:38,859
going to dive into a few concrete

365
00:12:35,290 --> 00:12:41,439
scenarios transport<font color="#E5E5E5"> mechanisms how you</font>

366
00:12:38,860 --> 00:12:43,660
transfer the session data to the<font color="#E5E5E5"> client</font>

367
00:12:41,440 --> 00:12:45,339
<font color="#E5E5E5">and server and cookies are a very very</font>

368
00:12:43,660 --> 00:12:47,020
old example<font color="#CCCCCC"> of these cookies are simply</font>

369
00:12:45,339 --> 00:12:49,330
a way<font color="#CCCCCC"> to transfer session information</font>

370
00:12:47,020 --> 00:12:50,589
<font color="#CCCCCC">they have some behavior associated</font><font color="#E5E5E5"> to</font>

371
00:12:49,330 --> 00:12:52,000
how the browser deals<font color="#CCCCCC"> to</font><font color="#E5E5E5"> that but in</font>

372
00:12:50,589 --> 00:12:54,160
essence<font color="#E5E5E5"> it's it's a header based</font>

373
00:12:52,000 --> 00:12:55,660
mechanism<font color="#CCCCCC"> its</font><font color="#E5E5E5"> transport the</font>

374
00:12:54,160 --> 00:12:57,100
authorization header<font color="#E5E5E5"> is often used in</font>

375
00:12:55,660 --> 00:13:00,100
angular applications nowadays<font color="#E5E5E5"> it's also</font>

376
00:12:57,100 --> 00:13:01,390
a transport<font color="#CCCCCC"> mechanism it's similar</font><font color="#E5E5E5"> to</font>

377
00:13:00,100 --> 00:13:03,160
cookies but it has a lot of<font color="#E5E5E5"> different</font>

378
00:13:01,390 --> 00:13:05,170
properties<font color="#CCCCCC"> and it's</font><font color="#E5E5E5"> going to impact the</font>

379
00:13:03,160 --> 00:13:09,189
<font color="#CCCCCC">way</font><font color="#E5E5E5"> your application works under the</font>

380
00:13:05,170 --> 00:13:10,689
<font color="#CCCCCC">hood</font><font color="#E5E5E5"> second property</font><font color="#CCCCCC"> is locality do you</font>

381
00:13:09,190 --> 00:13:13,990
<font color="#CCCCCC">store session data on the client or on</font>

382
00:13:10,690 --> 00:13:16,300
the server<font color="#E5E5E5"> we use to do this on the</font>

383
00:13:13,990 --> 00:13:19,500
server<font color="#CCCCCC"> maybe</font><font color="#E5E5E5"> a quick question who here</font>

384
00:13:16,300 --> 00:13:19,500
uses client-side sessions

385
00:13:20,870 --> 00:13:29,120
nobody really who here using sessions<font color="#E5E5E5"> at</font>

386
00:13:24,440 --> 00:13:32,320
all only<font color="#CCCCCC"> three people so you're still</font>

387
00:13:29,120 --> 00:13:34,310
waking<font color="#E5E5E5"> up I guess that that's</font><font color="#CCCCCC"> okay so um</font>

388
00:13:32,320 --> 00:13:36,080
<font color="#E5E5E5">traditionally</font><font color="#CCCCCC"> serve as our</font><font color="#E5E5E5"> session data</font>

389
00:13:34,310 --> 00:13:37,489
<font color="#E5E5E5">stored on</font><font color="#CCCCCC"> a server</font><font color="#E5E5E5"> side but with angular</font>

390
00:13:36,080 --> 00:13:39,380
applications while<font color="#CCCCCC"> people are moving to</font>

391
00:13:37,490 --> 00:13:41,180
<font color="#E5E5E5">client-side sessions</font><font color="#CCCCCC"> we need to have</font>

392
00:13:39,380 --> 00:13:42,860
stateless<font color="#CCCCCC"> API so of course session</font><font color="#E5E5E5"> data</font>

393
00:13:41,180 --> 00:13:44,569
is pushed<font color="#E5E5E5"> to the client and this has a</font>

394
00:13:42,860 --> 00:13:46,280
serious<font color="#E5E5E5"> impact on how your application</font>

395
00:13:44,570 --> 00:13:48,110
<font color="#E5E5E5">works and what data you can trust and</font>

396
00:13:46,280 --> 00:13:50,569
there's a lot<font color="#CCCCCC"> of mistakes being made</font>

397
00:13:48,110 --> 00:13:52,940
there which is again why I wanted<font color="#E5E5E5"> to</font>

398
00:13:50,570 --> 00:13:55,100
<font color="#E5E5E5">cover part</font><font color="#CCCCCC"> of that here</font><font color="#E5E5E5"> today and</font>

399
00:13:52,940 --> 00:13:57,710
thirdly<font color="#E5E5E5"> we have the representation</font><font color="#CCCCCC"> and</font>

400
00:13:55,100 --> 00:13:59,570
that's essentially<font color="#E5E5E5"> what what is the</font>

401
00:13:57,710 --> 00:14:02,000
format<font color="#E5E5E5"> this can be a custom format sure</font>

402
00:13:59,570 --> 00:14:03,860
<font color="#E5E5E5">and this can be a session identifier</font>

403
00:14:02,000 --> 00:14:06,290
<font color="#CCCCCC">like we're used to but this can</font><font color="#E5E5E5"> also</font><font color="#CCCCCC"> be</font>

404
00:14:03,860 --> 00:14:08,000
something<font color="#CCCCCC"> like a job token or whatever</font>

405
00:14:06,290 --> 00:14:09,800
<font color="#E5E5E5">I'm going to go into more detail there</font>

406
00:14:08,000 --> 00:14:11,450
by the way I see people taking<font color="#CCCCCC"> pictures</font>

407
00:14:09,800 --> 00:14:13,609
that's perfectly fine if you're taking

408
00:14:11,450 --> 00:14:15,590
<font color="#CCCCCC">pictures of me of course</font><font color="#E5E5E5"> but the slides</font>

409
00:14:13,610 --> 00:14:17,690
are also<font color="#E5E5E5"> online so on my Twitter account</font>

410
00:14:15,590 --> 00:14:20,060
<font color="#E5E5E5">you can find the slides or link to the</font>

411
00:14:17,690 --> 00:14:21,530
slides<font color="#CCCCCC"> so</font><font color="#E5E5E5"> if that's</font><font color="#CCCCCC"> easier for</font><font color="#E5E5E5"> you</font><font color="#CCCCCC"> go</font>

412
00:14:20,060 --> 00:14:24,199
ahead<font color="#CCCCCC"> if</font><font color="#E5E5E5"> you</font><font color="#CCCCCC"> want to take</font><font color="#E5E5E5"> pictures sure</font>

413
00:14:21,530 --> 00:14:25,640
<font color="#E5E5E5">be</font><font color="#CCCCCC"> my</font><font color="#E5E5E5"> guest</font><font color="#CCCCCC"> as well</font><font color="#E5E5E5"> so let's talk about</font>

414
00:14:24,200 --> 00:14:27,470
<font color="#CCCCCC">a</font><font color="#E5E5E5"> few of these properties let's talk</font>

415
00:14:25,640 --> 00:14:30,080
<font color="#CCCCCC">about cookies first</font><font color="#E5E5E5"> cookies have been</font>

416
00:14:27,470 --> 00:14:33,050
around for ages<font color="#E5E5E5"> and you probably know</font>

417
00:14:30,080 --> 00:14:35,120
cookies very well you use cookies but in

418
00:14:33,050 --> 00:14:37,069
my opinion<font color="#E5E5E5"> cookies are a bit messy and</font>

419
00:14:35,120 --> 00:14:38,750
but<font color="#CCCCCC"> they're they keep evolving and</font>

420
00:14:37,070 --> 00:14:40,490
<font color="#E5E5E5">there's a few</font><font color="#CCCCCC"> new things you need to</font>

421
00:14:38,750 --> 00:14:44,030
<font color="#CCCCCC">know what cookies that</font><font color="#E5E5E5"> you probably are</font>

422
00:14:40,490 --> 00:14:46,340
<font color="#CCCCCC">not really aware so very brief recap</font>

423
00:14:44,030 --> 00:14:47,780
<font color="#E5E5E5">cookies are not very very compatible</font>

424
00:14:46,340 --> 00:14:49,790
with<font color="#CCCCCC"> the same margin policy so they're</font>

425
00:14:47,780 --> 00:14:52,339
associated<font color="#E5E5E5"> to the domain they can be</font>

426
00:14:49,790 --> 00:14:53,540
used on HTTP or HTTPS which<font color="#E5E5E5"> causes a lot</font>

427
00:14:52,340 --> 00:14:55,670
of problems they can be<font color="#E5E5E5"> accessed from</font>

428
00:14:53,540 --> 00:14:57,260
JavaScript<font color="#E5E5E5"> and essentially</font><font color="#CCCCCC"> that has led</font>

429
00:14:55,670 --> 00:14:59,329
<font color="#E5E5E5">to</font><font color="#CCCCCC"> the mess that we know today is</font>

430
00:14:57,260 --> 00:15:01,340
cookies so cookies need to<font color="#E5E5E5"> have flags</font>

431
00:14:59,330 --> 00:15:03,920
<font color="#E5E5E5">today the secure flag the HTTP only flag</font>

432
00:15:01,340 --> 00:15:05,930
<font color="#CCCCCC">you know about this</font><font color="#E5E5E5"> hopefully if you</font>

433
00:15:03,920 --> 00:15:07,760
don't you<font color="#CCCCCC"> should go back a few</font><font color="#E5E5E5"> additions</font>

434
00:15:05,930 --> 00:15:08,750
and watch the videos there's a lot<font color="#E5E5E5"> of</font>

435
00:15:07,760 --> 00:15:11,930
stuff<font color="#E5E5E5"> you're going to learn</font><font color="#CCCCCC"> from that</font>

436
00:15:08,750 --> 00:15:15,410
<font color="#E5E5E5">but essentially this</font><font color="#CCCCCC"> is to me considered</font>

437
00:15:11,930 --> 00:15:17,479
common knowledge however there's a

438
00:15:15,410 --> 00:15:19,370
discrepancy with with this<font color="#E5E5E5"> system so if</font>

439
00:15:17,480 --> 00:15:20,990
you look at the header<font color="#E5E5E5"> on the bottom</font>

440
00:15:19,370 --> 00:15:22,370
here set-cookie header contains all<font color="#E5E5E5"> of</font>

441
00:15:20,990 --> 00:15:23,750
<font color="#E5E5E5">these information</font><font color="#CCCCCC"> between the server get</font>

442
00:15:22,370 --> 00:15:25,610
<font color="#E5E5E5">cookie back there's no information</font>

443
00:15:23,750 --> 00:15:27,320
attached<font color="#E5E5E5"> he doesn't know whether or the</font>

444
00:15:25,610 --> 00:15:28,280
<font color="#CCCCCC">secure cookie or not</font><font color="#E5E5E5"> just over the</font>

445
00:15:27,320 --> 00:15:30,470
cookie<font color="#CCCCCC"> gained from</font><font color="#E5E5E5"> it</font><font color="#CCCCCC"> doesn't know</font>

446
00:15:28,280 --> 00:15:32,510
whether this was an attack that<font color="#CCCCCC"> resulted</font>

447
00:15:30,470 --> 00:15:34,310
<font color="#CCCCCC">from</font><font color="#E5E5E5"> a cookie jar overflow or something</font>

448
00:15:32,510 --> 00:15:34,610
like that<font color="#CCCCCC"> so essentially there's there's</font>

449
00:15:34,310 --> 00:15:37,429
<font color="#E5E5E5">kind</font>

450
00:15:34,610 --> 00:15:40,790
<font color="#E5E5E5">a mismatch</font><font color="#CCCCCC"> and that still at</font><font color="#E5E5E5"> least a lot</font>

451
00:15:37,429 --> 00:15:43,910
of attack<font color="#E5E5E5"> surface left that's why they</font>

452
00:15:40,790 --> 00:15:46,069
<font color="#E5E5E5">and what the smart people building the</font>

453
00:15:43,910 --> 00:15:47,929
<font color="#CCCCCC">the web platform came up with a new</font>

454
00:15:46,069 --> 00:15:51,079
specification<font color="#E5E5E5"> called cookie prefixes</font><font color="#CCCCCC"> a</font>

455
00:15:47,929 --> 00:15:53,480
cookie prefixes take it a step further

456
00:15:51,079 --> 00:15:55,429
<font color="#CCCCCC">and they essentially</font><font color="#E5E5E5"> add a prefix</font><font color="#CCCCCC"> to the</font>

457
00:15:53,480 --> 00:15:56,779
<font color="#CCCCCC">name</font><font color="#E5E5E5"> of the cookie which ensures</font><font color="#CCCCCC"> that</font>

458
00:15:55,429 --> 00:15:59,029
certain security properties will be

459
00:15:56,779 --> 00:16:01,069
<font color="#CCCCCC">guaranteed by the browser so</font><font color="#E5E5E5"> essentially</font>

460
00:15:59,029 --> 00:16:02,299
one of<font color="#E5E5E5"> these prefixes is the</font><font color="#CCCCCC"> secure</font>

461
00:16:01,069 --> 00:16:05,389
prefix all the underscore underscore

462
00:16:02,299 --> 00:16:07,369
<font color="#CCCCCC">secure</font><font color="#E5E5E5"> - prefix so you can name your</font>

463
00:16:05,389 --> 00:16:09,949
cookie underscore<font color="#E5E5E5"> arm square</font><font color="#CCCCCC"> secure -</font>

464
00:16:07,369 --> 00:16:12,829
session identifier<font color="#CCCCCC"> or whatever as ID PHP</font>

465
00:16:09,949 --> 00:16:14,589
session ID doesn't matter whenever<font color="#E5E5E5"> that</font>

466
00:16:12,829 --> 00:16:16,729
prefix<font color="#E5E5E5"> is present</font><font color="#CCCCCC"> and</font><font color="#E5E5E5"> name the browser</font>

467
00:16:14,589 --> 00:16:19,399
<font color="#E5E5E5">supporting browser will start enforcing</font>

468
00:16:16,730 --> 00:16:20,600
strict rules<font color="#CCCCCC"> so in this case if this</font>

469
00:16:19,399 --> 00:16:21,920
cookie is<font color="#E5E5E5"> set over</font><font color="#CCCCCC"> an insecure</font>

470
00:16:20,600 --> 00:16:23,959
connection<font color="#E5E5E5"> the browser will refuse it</font>

471
00:16:21,920 --> 00:16:26,899
<font color="#E5E5E5">meaning</font><font color="#CCCCCC"> that it needs</font><font color="#E5E5E5"> to be set over a</font>

472
00:16:23,959 --> 00:16:28,069
valid HTTPS connection essentially if

473
00:16:26,899 --> 00:16:29,059
you go<font color="#E5E5E5"> into the security</font><font color="#CCCCCC"> properties</font>

474
00:16:28,069 --> 00:16:31,069
there this means<font color="#E5E5E5"> that this has to come</font>

475
00:16:29,059 --> 00:16:33,618
<font color="#E5E5E5">from your server or someone with a lot</font>

476
00:16:31,069 --> 00:16:35,329
<font color="#E5E5E5">of power in personality and of course</font>

477
00:16:33,619 --> 00:16:36,619
the secure flag needs<font color="#E5E5E5"> to be present if</font>

478
00:16:35,329 --> 00:16:38,118
you<font color="#CCCCCC"> want to use a</font><font color="#E5E5E5"> prefix</font><font color="#CCCCCC"> if these</font>

479
00:16:36,619 --> 00:16:39,769
conditions<font color="#E5E5E5"> are</font><font color="#CCCCCC"> not met a browser will</font>

480
00:16:38,119 --> 00:16:43,179
<font color="#E5E5E5">not set the cookie will not remember the</font>

481
00:16:39,769 --> 00:16:47,269
cookie<font color="#E5E5E5"> and a potential</font><font color="#CCCCCC"> attack will be</font>

482
00:16:43,179 --> 00:16:49,459
evaded<font color="#E5E5E5"> second thing second</font><font color="#CCCCCC"> prefixes</font>

483
00:16:47,269 --> 00:16:51,559
<font color="#CCCCCC">available is the host prefix essentially</font>

484
00:16:49,459 --> 00:16:53,329
the host prefix<font color="#E5E5E5"> subsumes the</font><font color="#CCCCCC"> secure</font>

485
00:16:51,559 --> 00:16:54,679
perfect so it<font color="#E5E5E5"> enforces everything as</font>

486
00:16:53,329 --> 00:16:56,599
from the<font color="#E5E5E5"> secure perfect with</font><font color="#CCCCCC"> it also</font>

487
00:16:54,679 --> 00:16:58,339
<font color="#E5E5E5">make</font><font color="#CCCCCC"> sure that the cookie belongs to a</font>

488
00:16:56,600 --> 00:17:01,129
specific<font color="#E5E5E5"> host and can never be sent to</font>

489
00:16:58,339 --> 00:17:01,730
an entire domain so essentially what you

490
00:17:01,129 --> 00:17:03,649
get here

491
00:17:01,730 --> 00:17:05,689
if the server receives<font color="#CCCCCC"> the cookie with</font>

492
00:17:03,649 --> 00:17:07,490
the underscore underscore host<font color="#E5E5E5"> - prefix</font>

493
00:17:05,689 --> 00:17:09,589
in the name and the browser supports

494
00:17:07,490 --> 00:17:12,409
<font color="#CCCCCC">this by the way all modern browsers do</font>

495
00:17:09,589 --> 00:17:14,480
nowadays<font color="#CCCCCC"> then the server knows that this</font>

496
00:17:12,409 --> 00:17:15,919
cookie and did not<font color="#E5E5E5"> come from a subdomain</font>

497
00:17:14,480 --> 00:17:17,120
<font color="#E5E5E5">that the cookie was not set</font><font color="#CCCCCC"> by an</font>

498
00:17:15,919 --> 00:17:19,069
attacker who controls one of your

499
00:17:17,119 --> 00:17:20,779
sublimates right now and this<font color="#E5E5E5"> gives the</font>

500
00:17:19,069 --> 00:17:22,609
server<font color="#E5E5E5"> additional information because</font>

501
00:17:20,779 --> 00:17:25,398
<font color="#E5E5E5">now the server knows that the cookie was</font>

502
00:17:22,609 --> 00:17:27,319
handled<font color="#CCCCCC"> as securely</font><font color="#E5E5E5"> and get can get some</font>

503
00:17:25,398 --> 00:17:28,039
assurances that an attack did not happen

504
00:17:27,319 --> 00:17:33,139
<font color="#E5E5E5">on the client-side</font>

505
00:17:28,039 --> 00:17:34,789
<font color="#E5E5E5">this is fairly new</font><font color="#CCCCCC"> support this is well</font>

506
00:17:33,139 --> 00:17:36,830
widespread<font color="#CCCCCC"> so that's definitely a good</font>

507
00:17:34,789 --> 00:17:39,200
<font color="#CCCCCC">thing so this</font><font color="#E5E5E5"> is something</font><font color="#CCCCCC"> that you can</font>

508
00:17:36,830 --> 00:17:40,460
<font color="#E5E5E5">start using today if you want if there</font>

509
00:17:39,200 --> 00:17:41,929
are<font color="#E5E5E5"> people here building frameworks</font>

510
00:17:40,460 --> 00:17:43,820
please consider<font color="#E5E5E5"> supporting this in a</font>

511
00:17:41,929 --> 00:17:45,850
framework<font color="#CCCCCC"> in the most framework is</font>

512
00:17:43,820 --> 00:17:49,030
really<font color="#CCCCCC"> difficult to</font><font color="#E5E5E5"> configure</font>

513
00:17:45,850 --> 00:17:51,610
which makes it a bit<font color="#CCCCCC"> more tricky to</font>

514
00:17:49,030 --> 00:17:55,809
start supporting<font color="#E5E5E5"> this in a lot</font><font color="#CCCCCC"> of</font>

515
00:17:51,610 --> 00:17:58,030
<font color="#CCCCCC">applications of course</font><font color="#E5E5E5"> when we</font><font color="#CCCCCC"> talk</font>

516
00:17:55,809 --> 00:17:59,770
<font color="#CCCCCC">about cookies</font><font color="#E5E5E5"> um there's one threat</font>

517
00:17:58,030 --> 00:18:01,690
that's really important<font color="#CCCCCC"> has its own a</font>

518
00:17:59,770 --> 00:18:03,160
<font color="#E5E5E5">little category</font><font color="#CCCCCC"> in OS top ten which</font><font color="#E5E5E5"> is</font>

519
00:18:01,690 --> 00:18:06,850
called cross-site request forgery<font color="#E5E5E5"> or</font>

520
00:18:03,160 --> 00:18:08,520
Caesar<font color="#CCCCCC"> see</font><font color="#E5E5E5"> Cerf is essentially</font><font color="#CCCCCC"> a very</font>

521
00:18:06,850 --> 00:18:11,918
sneaky attack<font color="#E5E5E5"> happening in a browser</font>

522
00:18:08,520 --> 00:18:13,870
<font color="#CCCCCC">that is often underestimated</font><font color="#E5E5E5"> because the</font>

523
00:18:11,919 --> 00:18:15,730
effects are<font color="#CCCCCC"> not really feasible</font><font color="#E5E5E5"> so let</font>

524
00:18:13,870 --> 00:18:17,709
me walk<font color="#E5E5E5"> you through a scenario how I see</font>

525
00:18:15,730 --> 00:18:20,679
server attack<font color="#E5E5E5"> actually happens and I'm</font>

526
00:18:17,710 --> 00:18:21,909
going to<font color="#E5E5E5"> hopefully you can address what</font>

527
00:18:20,679 --> 00:18:23,260
it's all about and I'm going<font color="#CCCCCC"> to</font><font color="#E5E5E5"> tell you</font>

528
00:18:21,909 --> 00:18:26,140
how you can protect against<font color="#E5E5E5"> these serve</font>

529
00:18:23,260 --> 00:18:27,730
<font color="#E5E5E5">text so in a</font><font color="#CCCCCC"> sea surface Tech you have a</font>

530
00:18:26,140 --> 00:18:30,070
<font color="#E5E5E5">legitimate site let's say decide on the</font>

531
00:18:27,730 --> 00:18:31,780
right<font color="#CCCCCC"> website will be e</font><font color="#E5E5E5"> is legitimate</font>

532
00:18:30,070 --> 00:18:34,360
<font color="#E5E5E5">and we log there and walk into</font><font color="#CCCCCC"> the</font>

533
00:18:31,780 --> 00:18:37,299
<font color="#E5E5E5">website as normal user so you log in you</font>

534
00:18:34,360 --> 00:18:38,709
get a page<font color="#CCCCCC"> with</font><font color="#E5E5E5"> a cookie doesn't really</font>

535
00:18:37,299 --> 00:18:40,658
matter what's<font color="#E5E5E5"> in the cookie whether it's</font>

536
00:18:38,710 --> 00:18:42,909
server side or client side and we don't

537
00:18:40,659 --> 00:18:45,039
care<font color="#CCCCCC"> about</font><font color="#E5E5E5"> that here the cookie is of</font>

538
00:18:42,909 --> 00:18:46,809
course stored in browser<font color="#E5E5E5"> for future use</font>

539
00:18:45,039 --> 00:18:48,250
<font color="#CCCCCC">so if you make another</font><font color="#E5E5E5"> request the</font>

540
00:18:46,809 --> 00:18:49,629
browser will attach that cookie to your

541
00:18:48,250 --> 00:18:51,880
request<font color="#E5E5E5"> the server will look up your</font>

542
00:18:49,630 --> 00:18:53,530
session<font color="#CCCCCC"> know okay this was Phillip let</font>

543
00:18:51,880 --> 00:18:56,590
me show<font color="#E5E5E5"> him these messages or whatever</font>

544
00:18:53,530 --> 00:18:58,480
<font color="#E5E5E5">and that's what's happening there if you</font>

545
00:18:56,590 --> 00:19:00,220
go to another<font color="#CCCCCC"> web site</font>

546
00:18:58,480 --> 00:19:02,169
<font color="#E5E5E5">apparently</font><font color="#CCCCCC"> not containing</font><font color="#E5E5E5"> cat pictures</font>

547
00:19:00,220 --> 00:19:04,690
<font color="#E5E5E5">anymore but tiger pictures and I was</font>

548
00:19:02,169 --> 00:19:08,200
<font color="#CCCCCC">paying attention during keynote you get</font>

549
00:19:04,690 --> 00:19:10,090
a page with some<font color="#E5E5E5"> pictures whatever of</font>

550
00:19:08,200 --> 00:19:11,789
course the page in the background can

551
00:19:10,090 --> 00:19:14,830
launch a request to the<font color="#CCCCCC"> web site will be</font>

552
00:19:11,789 --> 00:19:16,840
<font color="#E5E5E5">backends it can load a hidden form load</font>

553
00:19:14,830 --> 00:19:19,570
an image<font color="#E5E5E5"> whatever</font><font color="#CCCCCC"> so it can ask the</font>

554
00:19:16,840 --> 00:19:21,580
<font color="#E5E5E5">backend to post a message the problem</font>

555
00:19:19,570 --> 00:19:22,928
this<font color="#CCCCCC"> is where the Caesar fryer really</font>

556
00:19:21,580 --> 00:19:24,820
comes down to<font color="#E5E5E5"> the problem is the browser</font>

557
00:19:22,929 --> 00:19:25,960
sees that<font color="#E5E5E5"> request going out and attaches</font>

558
00:19:24,820 --> 00:19:27,580
the cookie to that request<font color="#CCCCCC"> so</font>

559
00:19:25,960 --> 00:19:28,929
essentially at this point the<font color="#E5E5E5"> browser is</font>

560
00:19:27,580 --> 00:19:30,879
like<font color="#E5E5E5"> who</font><font color="#CCCCCC"> our request</font><font color="#E5E5E5"> to website will be</font>

561
00:19:28,929 --> 00:19:32,049
I have a cookie<font color="#CCCCCC"> further</font><font color="#E5E5E5"> if the</font><font color="#CCCCCC"> backend</font>

562
00:19:30,880 --> 00:19:33,640
is<font color="#E5E5E5"> not aware</font><font color="#CCCCCC"> that this request comes</font>

563
00:19:32,049 --> 00:19:35,799
<font color="#CCCCCC">from somewhere</font><font color="#E5E5E5"> else and not its own</font>

564
00:19:33,640 --> 00:19:37,600
application is going<font color="#E5E5E5"> to process this as</font>

565
00:19:35,799 --> 00:19:39,220
any<font color="#E5E5E5"> normal request and that's the</font>

566
00:19:37,600 --> 00:19:41,230
essence of a<font color="#E5E5E5"> see service</font><font color="#CCCCCC"> tech so it's an</font>

567
00:19:39,220 --> 00:19:42,970
unintentional request<font color="#CCCCCC"> of using the</font>

568
00:19:41,230 --> 00:19:45,370
<font color="#E5E5E5">credentials of the user from within its</font>

569
00:19:42,970 --> 00:19:47,260
own browser so I can launch it from<font color="#E5E5E5"> any</font>

570
00:19:45,370 --> 00:19:49,330
<font color="#CCCCCC">web site</font><font color="#E5E5E5"> so the</font><font color="#CCCCCC"> backend essentially</font>

571
00:19:47,260 --> 00:19:50,950
needs to be aware that requests can come

572
00:19:49,330 --> 00:19:53,020
from anywhere<font color="#E5E5E5"> and then you can protect</font>

573
00:19:50,950 --> 00:19:54,850
well can differentiate between<font color="#E5E5E5"> the</font>

574
00:19:53,020 --> 00:19:57,960
intentional and unintentional requests

575
00:19:54,850 --> 00:19:57,959
<font color="#CCCCCC">to the Caesar</font>

576
00:19:58,010 --> 00:20:01,879
essentially the<font color="#CCCCCC"> reason for sea surf is</font>

577
00:20:00,020 --> 00:20:03,260
the<font color="#E5E5E5"> liberal hand handling of cookies in</font>

578
00:20:01,880 --> 00:20:05,510
a browser because browser simply

579
00:20:03,260 --> 00:20:08,570
attaches cookies to any<font color="#CCCCCC"> request</font><font color="#E5E5E5"> and we</font>

580
00:20:05,510 --> 00:20:09,830
have to deal<font color="#CCCCCC"> with things</font><font color="#E5E5E5"> like Caesar by</font>

581
00:20:08,570 --> 00:20:11,540
<font color="#E5E5E5">default</font><font color="#CCCCCC"> there's no way to</font><font color="#E5E5E5"> indicate</font>

582
00:20:09,830 --> 00:20:13,460
whether something is intentional<font color="#E5E5E5"> or not</font>

583
00:20:11,540 --> 00:20:18,710
and that's one<font color="#CCCCCC"> of the</font><font color="#E5E5E5"> problems the</font>

584
00:20:13,460 --> 00:20:20,810
common sorry<font color="#E5E5E5"> that the problem is that</font>

585
00:20:18,710 --> 00:20:22,910
the<font color="#CCCCCC"> backend needs</font><font color="#E5E5E5"> to be really aware of</font>

586
00:20:20,810 --> 00:20:25,040
<font color="#E5E5E5">sea surf before</font><font color="#CCCCCC"> you can take action</font><font color="#E5E5E5"> if</font>

587
00:20:22,910 --> 00:20:26,480
you don't know about sea surf you will

588
00:20:25,040 --> 00:20:27,680
not have implemented<font color="#CCCCCC"> a defense against</font>

589
00:20:26,480 --> 00:20:29,480
Caesar and you will<font color="#E5E5E5"> probably be</font>

590
00:20:27,680 --> 00:20:31,730
vulnerable to<font color="#E5E5E5"> this so that's definitely</font>

591
00:20:29,480 --> 00:20:33,500
one<font color="#CCCCCC"> of</font><font color="#E5E5E5"> your problems</font><font color="#CCCCCC"> it's in the</font><font color="#E5E5E5"> top</font><font color="#CCCCCC"> ten</font>

592
00:20:31,730 --> 00:20:35,390
that<font color="#E5E5E5"> major companies Google Facebook</font>

593
00:20:33,500 --> 00:20:40,100
eBay they all suffered from<font color="#E5E5E5"> sea surf at</font>

594
00:20:35,390 --> 00:20:42,080
one point or another it's even a kind<font color="#E5E5E5"> of</font>

595
00:20:40,100 --> 00:20:45,560
<font color="#CCCCCC">C server tag</font><font color="#E5E5E5"> that's even more dangerous</font>

596
00:20:42,080 --> 00:20:47,860
<font color="#CCCCCC">and people have discovered that home</font>

597
00:20:45,560 --> 00:20:50,030
routers are apparently<font color="#E5E5E5"> not</font><font color="#CCCCCC"> very secure</font>

598
00:20:47,860 --> 00:20:51,530
<font color="#CCCCCC">so if you have a home router</font><font color="#E5E5E5"> with a web</font>

599
00:20:50,030 --> 00:20:53,540
interface<font color="#CCCCCC"> it's probably wrong about</font><font color="#E5E5E5"> the</font>

600
00:20:51,530 --> 00:20:54,800
<font color="#CCCCCC">Caesar meaning that somebody if you</font>

601
00:20:53,540 --> 00:20:57,620
visit the<font color="#CCCCCC"> webpage</font><font color="#E5E5E5"> can start lowering</font>

602
00:20:54,800 --> 00:21:00,169
requested<font color="#CCCCCC"> at your router</font><font color="#E5E5E5"> to</font><font color="#CCCCCC"> change for</font>

603
00:20:57,620 --> 00:21:02,179
<font color="#E5E5E5">example DNS settings so they can change</font>

604
00:21:00,170 --> 00:21:04,550
<font color="#E5E5E5">the settings on your router from just</font>

605
00:21:02,180 --> 00:21:05,870
within any context using Caesar<font color="#E5E5E5"> that's</font>

606
00:21:04,550 --> 00:21:07,940
kind of dangerous<font color="#CCCCCC"> which they did in</font>

607
00:21:05,870 --> 00:21:10,070
South America by the way<font color="#E5E5E5"> they had a huge</font>

608
00:21:07,940 --> 00:21:12,920
<font color="#E5E5E5">campaign where they changed more</font><font color="#CCCCCC"> than</font>

609
00:21:10,070 --> 00:21:15,020
<font color="#CCCCCC">300,000</font><font color="#E5E5E5"> devices settings so they could</font>

610
00:21:12,920 --> 00:21:16,910
reroute<font color="#E5E5E5"> DNS traffic and they could serve</font>

611
00:21:15,020 --> 00:21:18,889
you<font color="#E5E5E5"> serve the users fake pages whenever</font>

612
00:21:16,910 --> 00:21:22,100
they wanted to so<font color="#E5E5E5"> this is definitely a</font>

613
00:21:18,890 --> 00:21:26,030
real threat<font color="#CCCCCC"> that</font><font color="#E5E5E5"> you need need</font><font color="#CCCCCC"> to take</font>

614
00:21:22,100 --> 00:21:29,000
into<font color="#CCCCCC"> account so how do you defend</font>

615
00:21:26,030 --> 00:21:30,560
against<font color="#CCCCCC"> C surf the common defense</font><font color="#E5E5E5"> we've</font>

616
00:21:29,000 --> 00:21:32,420
known<font color="#CCCCCC"> about this for</font><font color="#E5E5E5"> a long time I</font><font color="#CCCCCC"> mean</font>

617
00:21:30,560 --> 00:21:34,490
this<font color="#E5E5E5"> is not new we've known how to</font>

618
00:21:32,420 --> 00:21:36,500
protect C surf against you serve as well

619
00:21:34,490 --> 00:21:39,140
<font color="#E5E5E5">and the common defense is essentially</font>

620
00:21:36,500 --> 00:21:42,080
hiding<font color="#CCCCCC"> as a</font><font color="#E5E5E5"> little token into the form a</font>

621
00:21:39,140 --> 00:21:43,910
hidden form field you give it to the to

622
00:21:42,080 --> 00:21:46,340
the browser when he regards<font color="#CCCCCC"> the page and</font>

623
00:21:43,910 --> 00:21:48,860
you check and the dings come thing comes

624
00:21:46,340 --> 00:21:50,000
back<font color="#E5E5E5"> whether the token is still there</font>

625
00:21:48,860 --> 00:21:52,189
and then you<font color="#E5E5E5"> know it's legitimate</font>

626
00:21:50,000 --> 00:21:53,780
<font color="#CCCCCC">submission this</font><font color="#E5E5E5"> is by this leverage the</font>

627
00:21:52,190 --> 00:21:56,600
same<font color="#E5E5E5"> origin</font><font color="#CCCCCC"> policy to hide</font><font color="#E5E5E5"> a token</font><font color="#CCCCCC"> from</font>

628
00:21:53,780 --> 00:21:58,100
other complex but<font color="#E5E5E5"> of course this depends</font>

629
00:21:56,600 --> 00:22:01,639
on<font color="#CCCCCC"> server-side pay generation you need</font>

630
00:21:58,100 --> 00:22:03,949
<font color="#E5E5E5">to insert and tokens into into the page</font>

631
00:22:01,640 --> 00:22:05,360
when you<font color="#E5E5E5"> generate it you need to check</font>

632
00:22:03,950 --> 00:22:07,130
<font color="#E5E5E5">them again when you get it back</font><font color="#CCCCCC"> you</font><font color="#E5E5E5"> can</font>

633
00:22:05,360 --> 00:22:08,600
imagine this<font color="#E5E5E5"> doesn't work well with a</font>

634
00:22:07,130 --> 00:22:09,800
bit<font color="#E5E5E5"> angular applications you don't have</font>

635
00:22:08,600 --> 00:22:11,240
server-side pages anymore

636
00:22:09,800 --> 00:22:14,158
you have templates<font color="#E5E5E5"> let's see</font>

637
00:22:11,240 --> 00:22:15,690
so angular<font color="#CCCCCC"> applications supports a</font>

638
00:22:14,159 --> 00:22:17,880
different<font color="#CCCCCC"> mechanism</font><font color="#E5E5E5"> and</font><font color="#CCCCCC"> that mechanism</font>

639
00:22:15,690 --> 00:22:19,289
<font color="#CCCCCC">skulk transparent tokens</font><font color="#E5E5E5"> there are other</font>

640
00:22:17,880 --> 00:22:21,299
<font color="#E5E5E5">names</font><font color="#CCCCCC"> for</font><font color="#E5E5E5"> it as well like double cookies</font>

641
00:22:19,289 --> 00:22:22,529
or whatever<font color="#E5E5E5"> I'm going to explain what</font><font color="#CCCCCC"> it</font>

642
00:22:21,299 --> 00:22:23,879
<font color="#CCCCCC">is and then the name doesn't</font><font color="#E5E5E5"> matter</font>

643
00:22:22,529 --> 00:22:25,639
<font color="#E5E5E5">anymore you can recognize it</font><font color="#CCCCCC"> when you</font>

644
00:22:23,880 --> 00:22:28,440
<font color="#CCCCCC">see it</font><font color="#E5E5E5"> regardless of the name</font>

645
00:22:25,639 --> 00:22:30,899
so what is a<font color="#E5E5E5"> transparent token defense</font>

646
00:22:28,440 --> 00:22:33,480
essentially we have the same<font color="#CCCCCC"> scenario</font><font color="#E5E5E5"> as</font>

647
00:22:30,899 --> 00:22:35,699
<font color="#E5E5E5">before but instead of simply giving us a</font>

648
00:22:33,480 --> 00:22:37,230
session cookie<font color="#CCCCCC"> we also get a</font><font color="#E5E5E5"> second</font>

649
00:22:35,700 --> 00:22:39,179
<font color="#E5E5E5">cookie which again is stored in a</font>

650
00:22:37,230 --> 00:22:40,559
browser as before<font color="#E5E5E5"> whenever</font><font color="#CCCCCC"> a</font><font color="#E5E5E5"> request</font>

651
00:22:39,179 --> 00:22:42,029
<font color="#CCCCCC">this may the browser is going</font><font color="#E5E5E5"> to make</font>

652
00:22:40,559 --> 00:22:43,678
<font color="#E5E5E5">sure</font><font color="#CCCCCC"> that the second cookie is also</font>

653
00:22:42,029 --> 00:22:45,000
there<font color="#E5E5E5"> this is standard</font><font color="#CCCCCC"> drafts browser</font>

654
00:22:43,679 --> 00:22:47,730
behavior that's how it works

655
00:22:45,000 --> 00:22:49,590
you also notice<font color="#E5E5E5"> this thing here this</font>

656
00:22:47,730 --> 00:22:51,149
thing is actually<font color="#CCCCCC"> a</font><font color="#E5E5E5"> token that</font><font color="#CCCCCC"> the</font>

657
00:22:49,590 --> 00:22:52,649
browser<font color="#E5E5E5"> has copied from the cookie to</font>

658
00:22:51,149 --> 00:22:55,649
the header<font color="#E5E5E5"> so this is what's going to</font>

659
00:22:52,649 --> 00:22:56,939
happen here<font color="#CCCCCC"> you have the two cookies</font><font color="#E5E5E5"> one</font>

660
00:22:55,649 --> 00:22:59,149
is the session<font color="#E5E5E5"> identifier the other one</font>

661
00:22:56,940 --> 00:23:01,049
is a<font color="#CCCCCC"> C surf token and the browser</font>

662
00:22:59,149 --> 00:23:03,059
application<font color="#CCCCCC"> with client-side application</font>

663
00:23:01,049 --> 00:23:05,309
angular in our case<font color="#E5E5E5"> it's going</font><font color="#CCCCCC"> to</font><font color="#E5E5E5"> copy</font>

664
00:23:03,059 --> 00:23:08,220
this cookie value<font color="#E5E5E5"> to this header custom</font>

665
00:23:05,309 --> 00:23:09,600
header<font color="#E5E5E5"> note that another context will</font>

666
00:23:08,220 --> 00:23:12,870
not be<font color="#E5E5E5"> able to do this so if you have</font>

667
00:23:09,600 --> 00:23:14,570
our guest picture context it can<font color="#E5E5E5"> make</font>

668
00:23:12,870 --> 00:23:17,820
the request<font color="#CCCCCC"> the cookies will be</font><font color="#E5E5E5"> there</font>

669
00:23:14,570 --> 00:23:19,259
but<font color="#E5E5E5"> according</font><font color="#CCCCCC"> to all the</font><font color="#E5E5E5"> rules of the of</font>

670
00:23:17,820 --> 00:23:20,610
the web and within<font color="#CCCCCC"> the browser</font><font color="#E5E5E5"> this</font>

671
00:23:19,259 --> 00:23:21,870
context will never be<font color="#E5E5E5"> able to read</font>

672
00:23:20,610 --> 00:23:23,850
cookies from<font color="#E5E5E5"> the other context so it</font>

673
00:23:21,870 --> 00:23:25,379
will not<font color="#E5E5E5"> be able to read the</font><font color="#CCCCCC"> see serve</font>

674
00:23:23,850 --> 00:23:27,240
<font color="#E5E5E5">so can cookie can all be able</font><font color="#CCCCCC"> to</font><font color="#E5E5E5"> copy</font>

675
00:23:25,379 --> 00:23:28,678
<font color="#E5E5E5">that value</font><font color="#CCCCCC"> to the header so whenever</font><font color="#E5E5E5"> you</font>

676
00:23:27,240 --> 00:23:30,419
<font color="#E5E5E5">send that to</font><font color="#CCCCCC"> the server</font><font color="#E5E5E5"> the server can</font>

677
00:23:28,679 --> 00:23:31,830
simply look oh the header is not<font color="#E5E5E5"> there</font>

678
00:23:30,419 --> 00:23:33,509
<font color="#E5E5E5">or maybe they're better value it's not</font>

679
00:23:31,830 --> 00:23:35,519
<font color="#CCCCCC">the same so I'm going to refuse</font><font color="#E5E5E5"> that</font>

680
00:23:33,509 --> 00:23:37,320
<font color="#E5E5E5">request from happening of course</font><font color="#CCCCCC"> this</font>

681
00:23:35,519 --> 00:23:38,879
means<font color="#CCCCCC"> that's add there</font><font color="#E5E5E5"> C surf</font><font color="#CCCCCC"> token</font>

682
00:23:37,320 --> 00:23:43,259
should at least be unique<font color="#E5E5E5"> for user and</font>

683
00:23:38,879 --> 00:23:46,110
<font color="#E5E5E5">that's the minimum requirement there so</font>

684
00:23:43,259 --> 00:23:49,799
I said angular supports<font color="#E5E5E5"> this how does</font>

685
00:23:46,110 --> 00:23:51,570
<font color="#CCCCCC">that work</font><font color="#E5E5E5"> well it works by default</font><font color="#CCCCCC"> so if</font>

686
00:23:49,799 --> 00:23:56,309
you have angular<font color="#CCCCCC"> 1</font><font color="#E5E5E5"> this is enabled by</font>

687
00:23:51,570 --> 00:23:57,928
default it looks for the cookie<font color="#CCCCCC"> if the</font>

688
00:23:56,309 --> 00:24:00,178
cookie is present<font color="#E5E5E5"> it simply copied it to</font>

689
00:23:57,929 --> 00:24:03,299
<font color="#E5E5E5">the header and outgoing art going</font>

690
00:24:00,179 --> 00:24:05,100
requests and<font color="#E5E5E5"> that's it that's kind of</font>

691
00:24:03,299 --> 00:24:07,259
nice and angular<font color="#CCCCCC"> 2 is</font><font color="#E5E5E5"> just</font><font color="#CCCCCC"> the same</font>

692
00:24:05,100 --> 00:24:09,000
<font color="#E5E5E5">enabled by default you can configure it</font>

693
00:24:07,259 --> 00:24:10,919
if you use other cookie names you can

694
00:24:09,000 --> 00:24:13,559
modify the configuration but by default

695
00:24:10,919 --> 00:24:16,019
<font color="#CCCCCC">this behavior is enabled</font><font color="#E5E5E5"> and really good</font>

696
00:24:13,559 --> 00:24:17,759
thing here is<font color="#CCCCCC"> that</font><font color="#E5E5E5"> M this means you</font>

697
00:24:16,019 --> 00:24:19,320
don't need to do anything on<font color="#E5E5E5"> the client</font>

698
00:24:17,759 --> 00:24:20,850
<font color="#E5E5E5">of course you need to enable it on your</font>

699
00:24:19,320 --> 00:24:21,960
<font color="#E5E5E5">back-end if you still haven't heard of C</font>

700
00:24:20,850 --> 00:24:22,840
surf<font color="#E5E5E5"> angular</font><font color="#CCCCCC"> it's not going to protect</font>

701
00:24:21,960 --> 00:24:24,490
<font color="#E5E5E5">you because the cookies</font>

702
00:24:22,840 --> 00:24:25,720
going to be there<font color="#E5E5E5"> but once</font><font color="#CCCCCC"> you've</font><font color="#E5E5E5"> set</font>

703
00:24:24,490 --> 00:24:28,150
<font color="#E5E5E5">this cookie which is very</font>

704
00:24:25,720 --> 00:24:31,300
<font color="#CCCCCC">straightforward in just about any</font>

705
00:24:28,150 --> 00:24:36,460
<font color="#E5E5E5">back-end you can easily enable this kind</font>

706
00:24:31,300 --> 00:24:38,590
<font color="#CCCCCC">of behavior there's the second</font><font color="#E5E5E5"> potential</font>

707
00:24:36,460 --> 00:24:40,960
defense that<font color="#E5E5E5"> you can use and let's call</font>

708
00:24:38,590 --> 00:24:42,820
the same side cookies and this is again

709
00:24:40,960 --> 00:24:45,340
<font color="#E5E5E5">something new this is a new cookie</font>

710
00:24:42,820 --> 00:24:47,800
attribute that's<font color="#E5E5E5"> been there for half a</font>

711
00:24:45,340 --> 00:24:49,300
year maybe a year<font color="#E5E5E5"> and essentially well</font>

712
00:24:47,800 --> 00:24:51,280
comes down to is<font color="#E5E5E5"> you set a cookie</font><font color="#CCCCCC"> and</font>

713
00:24:49,300 --> 00:24:53,169
like<font color="#E5E5E5"> before</font><font color="#CCCCCC"> and the cookie will be</font>

714
00:24:51,280 --> 00:24:54,370
present<font color="#E5E5E5"> on requests like before the only</font>

715
00:24:53,170 --> 00:24:57,220
difference<font color="#E5E5E5"> this when you set the cookie</font>

716
00:24:54,370 --> 00:24:59,169
<font color="#E5E5E5">you add the same side flag and same side</font>

717
00:24:57,220 --> 00:25:00,790
<font color="#E5E5E5">essentially tells the</font><font color="#CCCCCC"> browser</font><font color="#E5E5E5"> this</font>

718
00:24:59,170 --> 00:25:02,650
cookie is<font color="#E5E5E5"> supposed to be used from my</font>

719
00:25:00,790 --> 00:25:04,120
<font color="#E5E5E5">side only and not when you come from</font>

720
00:25:02,650 --> 00:25:06,670
<font color="#E5E5E5">somewhere</font><font color="#CCCCCC"> else</font><font color="#E5E5E5"> so if you have something</font>

721
00:25:04,120 --> 00:25:07,959
like<font color="#E5E5E5"> this</font><font color="#CCCCCC"> the</font><font color="#E5E5E5"> request is made but the</font>

722
00:25:06,670 --> 00:25:09,640
cookie will not be attached<font color="#E5E5E5"> by</font><font color="#CCCCCC"> the</font>

723
00:25:07,960 --> 00:25:11,170
browser because<font color="#CCCCCC"> the</font><font color="#E5E5E5"> browser knows the</font>

724
00:25:09,640 --> 00:25:12,700
cookie but<font color="#E5E5E5"> it's same side so the browser</font>

725
00:25:11,170 --> 00:25:14,560
is like<font color="#E5E5E5"> okay you're coming from any</font><font color="#CCCCCC"> site</font>

726
00:25:12,700 --> 00:25:16,330
<font color="#CCCCCC">at i/o</font><font color="#E5E5E5"> going to</font><font color="#CCCCCC"> the website will</font><font color="#E5E5E5"> be</font>

727
00:25:14,560 --> 00:25:19,149
<font color="#E5E5E5">that's</font><font color="#CCCCCC"> not the same site</font><font color="#E5E5E5"> so I'm not</font>

728
00:25:16,330 --> 00:25:20,409
going<font color="#E5E5E5"> to attach this cookie for you</font><font color="#CCCCCC"> and</font>

729
00:25:19,150 --> 00:25:22,360
<font color="#E5E5E5">that same side cookies and that's pretty</font>

730
00:25:20,410 --> 00:25:24,490
<font color="#E5E5E5">awesome you see that there is a strict</font>

731
00:25:22,360 --> 00:25:26,290
mode enabled<font color="#E5E5E5"> here the value of the</font>

732
00:25:24,490 --> 00:25:28,960
attribute<font color="#CCCCCC"> they're</font><font color="#E5E5E5"> essentially two modes</font>

733
00:25:26,290 --> 00:25:31,240
<font color="#E5E5E5">strict LX strict means it will never be</font>

734
00:25:28,960 --> 00:25:33,700
<font color="#E5E5E5">there on cross-origin requests across</font>

735
00:25:31,240 --> 00:25:35,410
the main<font color="#E5E5E5"> request</font><font color="#CCCCCC"> or e</font><font color="#E5E5E5"> legs means it will</font>

736
00:25:33,700 --> 00:25:37,780
only be there on safe<font color="#E5E5E5"> top level</font>

737
00:25:35,410 --> 00:25:39,100
navigation<font color="#E5E5E5"> so if it's a get request that</font>

738
00:25:37,780 --> 00:25:40,540
triggers a navigation like if you go

739
00:25:39,100 --> 00:25:42,610
<font color="#CCCCCC">from Google search</font><font color="#E5E5E5"> results to the web</font>

740
00:25:40,540 --> 00:25:45,540
page then the cookies will be there in

741
00:25:42,610 --> 00:25:48,490
Lex mode and otherwise table<font color="#CCCCCC"> v absent</font>

742
00:25:45,540 --> 00:25:50,500
<font color="#E5E5E5">note very important difference this only</font>

743
00:25:48,490 --> 00:25:52,900
works on<font color="#CCCCCC"> registered domains not oranges</font>

744
00:25:50,500 --> 00:25:54,730
so it's all not protectors of the<font color="#E5E5E5"> mr.</font>

745
00:25:52,900 --> 00:25:57,310
between<font color="#CCCCCC"> sub domains</font><font color="#E5E5E5"> this only works on</font>

746
00:25:54,730 --> 00:25:58,690
<font color="#E5E5E5">website will be for example so if the</font>

747
00:25:57,310 --> 00:26:00,280
<font color="#CCCCCC">cookies mark same side for a</font><font color="#E5E5E5"> website</font>

748
00:25:58,690 --> 00:26:02,440
will<font color="#E5E5E5"> be if you come from any other</font>

749
00:26:00,280 --> 00:26:06,040
domain<font color="#E5E5E5"> it will not be attached on</font><font color="#CCCCCC"> the</font>

750
00:26:02,440 --> 00:26:07,270
<font color="#E5E5E5">request sounds pretty cool the default</font>

751
00:26:06,040 --> 00:26:09,550
setting is<font color="#CCCCCC"> strict mode by the way this</font>

752
00:26:07,270 --> 00:26:10,660
stops all<font color="#E5E5E5"> C server</font><font color="#CCCCCC"> techs in my opinion</font>

753
00:26:09,550 --> 00:26:13,180
this<font color="#E5E5E5"> is what cookies should have done</font>

754
00:26:10,660 --> 00:26:15,480
<font color="#E5E5E5">from day one</font><font color="#CCCCCC"> and but as you know</font><font color="#E5E5E5"> on the</font>

755
00:26:13,180 --> 00:26:17,980
<font color="#CCCCCC">web</font><font color="#E5E5E5"> it's</font><font color="#CCCCCC"> seesee to say that in hindsight</font>

756
00:26:15,480 --> 00:26:21,280
<font color="#CCCCCC">but also if</font><font color="#E5E5E5"> you use</font><font color="#CCCCCC"> likes motifs will</font>

757
00:26:17,980 --> 00:26:24,280
stop almost every<font color="#E5E5E5"> C server tech that's</font>

758
00:26:21,280 --> 00:26:27,220
<font color="#E5E5E5">out there only problem it is very</font><font color="#CCCCCC"> cool</font>

759
00:26:24,280 --> 00:26:29,730
to<font color="#E5E5E5"> use but nobody supports it except</font>

760
00:26:27,220 --> 00:26:32,200
<font color="#E5E5E5">chrome and opera</font><font color="#CCCCCC"> so that's the</font><font color="#E5E5E5"> downside</font>

761
00:26:29,730 --> 00:26:33,270
<font color="#E5E5E5">this will probably pick up in the future</font>

762
00:26:32,200 --> 00:26:35,160
<font color="#E5E5E5">and</font>

763
00:26:33,270 --> 00:26:37,770
<font color="#E5E5E5">Sherwin maybe there's some people</font><font color="#CCCCCC"> from</font>

764
00:26:35,160 --> 00:26:39,660
<font color="#E5E5E5">Russia vendors here you can ask them but</font>

765
00:26:37,770 --> 00:26:41,250
this<font color="#E5E5E5"> doesn't need to stop you from using</font>

766
00:26:39,660 --> 00:26:42,570
it if the browser doesn't<font color="#E5E5E5"> know the</font>

767
00:26:41,250 --> 00:26:44,670
attribute it will simply ignore<font color="#CCCCCC"> it</font>

768
00:26:42,570 --> 00:26:48,780
so you can start deploying this<font color="#E5E5E5"> today to</font>

769
00:26:44,670 --> 00:26:52,650
prevent abuse with cookies from from in

770
00:26:48,780 --> 00:26:56,600
<font color="#E5E5E5">chrome and</font><font color="#CCCCCC"> opera</font><font color="#E5E5E5"> and you can benefit</font>

771
00:26:52,650 --> 00:27:00,320
<font color="#CCCCCC">from</font><font color="#E5E5E5"> that</font><font color="#CCCCCC"> in other browsers later so</font>

772
00:26:56,600 --> 00:27:02,429
I've been talking<font color="#CCCCCC"> a</font><font color="#E5E5E5"> lot about cookies um</font>

773
00:27:00,320 --> 00:27:04,439
some of you may not use cookies anymore

774
00:27:02,430 --> 00:27:06,230
<font color="#E5E5E5">because it's angular and whatever</font>

775
00:27:04,440 --> 00:27:11,790
cookies we use the authorization header

776
00:27:06,230 --> 00:27:13,110
<font color="#E5E5E5">sure that's a viable alternative some of</font>

777
00:27:11,790 --> 00:27:14,310
you are old<font color="#CCCCCC"> enough to</font><font color="#E5E5E5"> remember the</font>

778
00:27:13,110 --> 00:27:16,500
authorization header<font color="#CCCCCC"> or something</font><font color="#E5E5E5"> like</font>

779
00:27:14,310 --> 00:27:18,060
this<font color="#E5E5E5"> when you got the</font><font color="#CCCCCC"> s-- pop-ups to</font>

780
00:27:16,500 --> 00:27:19,320
enter a username and<font color="#E5E5E5"> a password and the</font>

781
00:27:18,060 --> 00:27:20,850
authorization<font color="#CCCCCC"> headers</font><font color="#E5E5E5"> actually used to</font>

782
00:27:19,320 --> 00:27:22,980
transmit that username<font color="#E5E5E5"> and password</font><font color="#CCCCCC"> from</font>

783
00:27:20,850 --> 00:27:24,510
every request<font color="#E5E5E5"> that's not what I'm</font>

784
00:27:22,980 --> 00:27:26,070
<font color="#CCCCCC">talking about here</font><font color="#E5E5E5"> if you still use</font><font color="#CCCCCC"> that</font>

785
00:27:24,510 --> 00:27:28,650
and there's<font color="#E5E5E5"> probably better ways of</font>

786
00:27:26,070 --> 00:27:29,850
<font color="#CCCCCC">doing</font><font color="#E5E5E5"> that</font><font color="#CCCCCC"> but</font><font color="#E5E5E5"> I'm talking about if</font>

787
00:27:28,650 --> 00:27:33,620
using the authorization header<font color="#E5E5E5"> to</font>

788
00:27:29,850 --> 00:27:36,060
transmit<font color="#E5E5E5"> session information transmit a</font>

789
00:27:33,620 --> 00:27:38,489
session object<font color="#E5E5E5"> token doesn't really</font>

790
00:27:36,060 --> 00:27:42,480
matter<font color="#CCCCCC"> the reason this became</font><font color="#E5E5E5"> popular</font>

791
00:27:38,490 --> 00:27:43,680
<font color="#E5E5E5">again it's used a lot</font><font color="#CCCCCC"> in</font><font color="#E5E5E5"> our flows</font><font color="#CCCCCC"> if</font>

792
00:27:42,480 --> 00:27:44,880
you have an OAuth flow with an access

793
00:27:43,680 --> 00:27:47,070
token you need<font color="#E5E5E5"> to send that to the</font>

794
00:27:44,880 --> 00:27:49,140
<font color="#CCCCCC">server and this is probably</font><font color="#E5E5E5"> the</font><font color="#CCCCCC"> way</font>

795
00:27:47,070 --> 00:27:50,580
you're going to<font color="#E5E5E5"> do that the reason to</font>

796
00:27:49,140 --> 00:27:52,800
<font color="#CCCCCC">use the authorization header one of the</font>

797
00:27:50,580 --> 00:27:55,590
reasons is<font color="#CCCCCC"> its well known</font><font color="#E5E5E5"> it's been</font>

798
00:27:52,800 --> 00:27:57,780
around<font color="#E5E5E5"> for 25</font><font color="#CCCCCC"> or 30 years so a lot of</font>

799
00:27:55,590 --> 00:28:00,030
<font color="#E5E5E5">software proxies on the</font><font color="#CCCCCC"> internet will</font>

800
00:27:57,780 --> 00:28:02,760
recognize it I will not remove some<font color="#E5E5E5"> of</font>

801
00:28:00,030 --> 00:28:04,500
them are removed features<font color="#E5E5E5"> if they don't</font>

802
00:28:02,760 --> 00:28:07,890
know it which authorization have this is

803
00:28:04,500 --> 00:28:10,440
<font color="#E5E5E5">not going to be the case the big problem</font>

804
00:28:07,890 --> 00:28:12,110
with this is the browser does<font color="#CCCCCC"> not handle</font>

805
00:28:10,440 --> 00:28:14,100
the authorization header<font color="#E5E5E5"> automatically</font>

806
00:28:12,110 --> 00:28:16,709
meaning if you're building an angular

807
00:28:14,100 --> 00:28:18,659
application<font color="#CCCCCC"> and you want to use this you</font>

808
00:28:16,710 --> 00:28:20,430
<font color="#CCCCCC">will have to</font><font color="#E5E5E5"> attach your tokens from</font>

809
00:28:18,660 --> 00:28:25,050
<font color="#E5E5E5">JavaScript on every outdoor request</font>

810
00:28:20,430 --> 00:28:26,040
yourself<font color="#E5E5E5"> that's one thing the second</font>

811
00:28:25,050 --> 00:28:28,649
<font color="#CCCCCC">thing is you'll need</font><font color="#E5E5E5"> to store this</font>

812
00:28:26,040 --> 00:28:29,670
information<font color="#E5E5E5"> yourself</font><font color="#CCCCCC"> with cookies the</font>

813
00:28:28,650 --> 00:28:31,530
browser did everything for you

814
00:28:29,670 --> 00:28:33,330
<font color="#CCCCCC">everything handled automatically with</font>

815
00:28:31,530 --> 00:28:34,800
the<font color="#CCCCCC"> authorization header</font><font color="#E5E5E5"> no such thing</font>

816
00:28:33,330 --> 00:28:36,720
<font color="#CCCCCC">you</font><font color="#E5E5E5"> need to</font><font color="#CCCCCC"> do everything</font><font color="#E5E5E5"> yourself and</font>

817
00:28:34,800 --> 00:28:38,129
<font color="#E5E5E5">you need to do it manually of course it</font>

818
00:28:36,720 --> 00:28:39,450
is well supported<font color="#CCCCCC"> by frameworks and</font>

819
00:28:38,130 --> 00:28:40,110
libraries<font color="#CCCCCC"> and</font><font color="#E5E5E5"> angular has some support</font>

820
00:28:39,450 --> 00:28:41,730
for<font color="#E5E5E5"> that as well</font>

821
00:28:40,110 --> 00:28:43,320
so<font color="#E5E5E5"> if you want to do it in an angular</font>

822
00:28:41,730 --> 00:28:44,179
<font color="#CCCCCC">application I got this from a blog post</font>

823
00:28:43,320 --> 00:28:46,730
about

824
00:28:44,179 --> 00:28:48,950
one you can for example<font color="#E5E5E5"> store the local</font>

825
00:28:46,730 --> 00:28:51,769
storage<font color="#E5E5E5"> and then write an HTTP</font><font color="#CCCCCC"> intercept</font>

826
00:28:48,950 --> 00:28:53,840
<font color="#E5E5E5">that easily intercept steps are outgoing</font>

827
00:28:51,769 --> 00:28:55,159
requests and attaches the authorization

828
00:28:53,840 --> 00:28:57,350
<font color="#CCCCCC">header there</font><font color="#E5E5E5"> so that's essentially the</font>

829
00:28:55,159 --> 00:28:59,419
<font color="#E5E5E5">line here</font><font color="#CCCCCC"> you add an authorization</font>

830
00:28:57,350 --> 00:29:01,009
header and<font color="#CCCCCC"> you call it</font><font color="#E5E5E5"> bare bearer and</font>

831
00:28:59,419 --> 00:29:04,690
you add the token<font color="#CCCCCC"> from local storage</font>

832
00:29:01,009 --> 00:29:09,049
right there<font color="#E5E5E5"> easy</font><font color="#CCCCCC"> enough right</font>

833
00:29:04,690 --> 00:29:11,749
<font color="#CCCCCC">ok</font><font color="#E5E5E5"> see a problem doing</font><font color="#CCCCCC"> this lecture</font><font color="#E5E5E5"> to</font>

834
00:29:09,049 --> 00:29:27,320
problem proof<font color="#CCCCCC"> two problems who can spot</font>

835
00:29:11,749 --> 00:29:29,559
one<font color="#E5E5E5"> no the first this kind of assumes</font>

836
00:29:27,320 --> 00:29:31,999
that you<font color="#E5E5E5"> only</font><font color="#CCCCCC"> compact your</font><font color="#E5E5E5"> own API so</font>

837
00:29:29,559 --> 00:29:34,730
this attaches<font color="#CCCCCC"> the token to</font><font color="#E5E5E5"> every</font>

838
00:29:31,999 --> 00:29:35,990
outgoing<font color="#E5E5E5"> requests and this is fine when</font>

839
00:29:34,730 --> 00:29:37,759
you start<font color="#CCCCCC"> developing because you get</font>

840
00:29:35,990 --> 00:29:39,830
your<font color="#E5E5E5"> data</font><font color="#CCCCCC"> from</font><font color="#E5E5E5"> the API the second you</font>

841
00:29:37,759 --> 00:29:41,149
start using<font color="#E5E5E5"> a third</font><font color="#CCCCCC"> party API</font><font color="#E5E5E5"> just for</font>

842
00:29:39,830 --> 00:29:42,710
some small<font color="#E5E5E5"> features it's going to send</font>

843
00:29:41,149 --> 00:29:44,989
xhr requests<font color="#E5E5E5"> you're going to attach your</font>

844
00:29:42,710 --> 00:29:46,789
token to that<font color="#CCCCCC"> I'm going to</font><font color="#E5E5E5"> cut so you're</font>

845
00:29:44,990 --> 00:29:49,070
going<font color="#CCCCCC"> to leak your token</font><font color="#E5E5E5"> your users</font>

846
00:29:46,789 --> 00:29:50,840
token essentially to<font color="#CCCCCC"> alter party API so</font>

847
00:29:49,070 --> 00:29:52,549
<font color="#CCCCCC">two contacts that's definitely one of</font>

848
00:29:50,840 --> 00:29:54,499
<font color="#E5E5E5">the things</font><font color="#CCCCCC"> that it's</font><font color="#E5E5E5"> often overlooked</font>

849
00:29:52,549 --> 00:29:56,809
because<font color="#E5E5E5"> it's so easy</font><font color="#CCCCCC"> to implement</font><font color="#E5E5E5"> and</font>

850
00:29:54,499 --> 00:29:58,549
the second problem it's not obvious from

851
00:29:56,809 --> 00:30:00,379
<font color="#E5E5E5">this code this</font><font color="#CCCCCC"> only works for xhr</font>

852
00:29:58,549 --> 00:30:02,240
requests so what happens if you have<font color="#CCCCCC"> a</font>

853
00:30:00,379 --> 00:30:03,860
request<font color="#E5E5E5"> in that that comes from an</font>

854
00:30:02,240 --> 00:30:06,200
element<font color="#E5E5E5"> in</font><font color="#CCCCCC"> the Dom what happens if you</font>

855
00:30:03,860 --> 00:30:07,639
<font color="#E5E5E5">insert an image tag with an SRC it's</font>

856
00:30:06,200 --> 00:30:09,740
going to throw<font color="#CCCCCC"> a request the browser is</font>

857
00:30:07,639 --> 00:30:10,969
going<font color="#E5E5E5"> to fetch that image but there's</font>

858
00:30:09,740 --> 00:30:13,399
not<font color="#CCCCCC"> going to be an authorization header</font>

859
00:30:10,970 --> 00:30:15,590
<font color="#CCCCCC">present</font><font color="#E5E5E5"> so if you require access control</font>

860
00:30:13,399 --> 00:30:17,840
on that<font color="#E5E5E5"> image loads the server has no</font>

861
00:30:15,590 --> 00:30:19,549
<font color="#CCCCCC">information to</font><font color="#E5E5E5"> make the decision on</font><font color="#CCCCCC"> or</font>

862
00:30:17,840 --> 00:30:21,499
<font color="#CCCCCC">to pay the decisional</font><font color="#E5E5E5"> and this is</font>

863
00:30:19,549 --> 00:30:23,869
<font color="#E5E5E5">something that</font><font color="#CCCCCC"> actually</font><font color="#E5E5E5"> starts appearing</font>

864
00:30:21,499 --> 00:30:26,389
in a lot of<font color="#E5E5E5"> applications</font><font color="#CCCCCC"> and people have</font>

865
00:30:23,869 --> 00:30:28,039
to revert<font color="#CCCCCC"> to</font><font color="#E5E5E5"> something</font><font color="#CCCCCC"> like a mixed</font>

866
00:30:26,389 --> 00:30:29,600
authorization header and cookie based

867
00:30:28,039 --> 00:30:31,789
system<font color="#E5E5E5"> to deal with these kind of things</font>

868
00:30:29,600 --> 00:30:33,110
<font color="#E5E5E5">so this is</font><font color="#CCCCCC"> not an easy problem to solve</font>

869
00:30:31,789 --> 00:30:34,869
<font color="#E5E5E5">but this is something you need to be</font>

870
00:30:33,110 --> 00:30:37,279
<font color="#E5E5E5">aware of when you make this decision</font>

871
00:30:34,869 --> 00:30:38,990
<font color="#CCCCCC">there's a few of these trade-offs that</font>

872
00:30:37,279 --> 00:30:40,970
that you need to be aware of when you do

873
00:30:38,990 --> 00:30:43,309
this to design<font color="#E5E5E5"> your applications and</font>

874
00:30:40,970 --> 00:30:45,529
have made<font color="#E5E5E5"> a very brief overview</font><font color="#CCCCCC"> of two</font>

875
00:30:43,309 --> 00:30:48,110
of these aspects<font color="#E5E5E5"> first of all storing</font>

876
00:30:45,529 --> 00:30:49,399
session data in a browser there are a

877
00:30:48,110 --> 00:30:52,969
<font color="#E5E5E5">couple of options if you do this in your</font>

878
00:30:49,399 --> 00:30:55,908
<font color="#E5E5E5">angular application one is in memory in</font>

879
00:30:52,970 --> 00:30:56,990
memory is<font color="#E5E5E5"> easy to do it's available to</font>

880
00:30:55,909 --> 00:30:57,539
<font color="#E5E5E5">your running code that's sure that</font>

881
00:30:56,990 --> 00:30:59,999
<font color="#E5E5E5">that's fair</font>

882
00:30:57,539 --> 00:31:01,499
good this does not survive<font color="#E5E5E5"> a page reload</font>

883
00:30:59,999 --> 00:31:04,049
so of course when somebody reloads the

884
00:31:01,499 --> 00:31:06,899
page<font color="#E5E5E5"> your memory</font><font color="#CCCCCC"> or context is Ari</font>

885
00:31:04,049 --> 00:31:09,418
<font color="#CCCCCC">initiated and your token is gone the</font>

886
00:31:06,899 --> 00:31:10,949
benefit of<font color="#E5E5E5"> doing</font><font color="#CCCCCC"> this is</font><font color="#E5E5E5"> if there is</font>

887
00:31:09,419 --> 00:31:13,499
<font color="#E5E5E5">some kind of an injection attack in your</font>

888
00:31:10,950 --> 00:31:15,690
page<font color="#E5E5E5"> and using</font><font color="#CCCCCC"> in-memory</font><font color="#E5E5E5"> search can kind</font>

889
00:31:13,499 --> 00:31:17,850
of<font color="#E5E5E5"> shield a token from from that script</font>

890
00:31:15,690 --> 00:31:19,200
so it's really<font color="#E5E5E5"> difficult to steal that</font>

891
00:31:17,850 --> 00:31:22,469
or<font color="#CCCCCC"> it can make</font><font color="#E5E5E5"> it really difficult to</font>

892
00:31:19,200 --> 00:31:24,659
<font color="#E5E5E5">steal your session token in in case of</font>

893
00:31:22,470 --> 00:31:27,600
an attack<font color="#E5E5E5"> the other one is a bit bit</font>

894
00:31:24,659 --> 00:31:29,820
different session storage session

895
00:31:27,600 --> 00:31:31,139
storage<font color="#E5E5E5"> is you have this web storage API</font>

896
00:31:29,820 --> 00:31:33,599
with local<font color="#E5E5E5"> storage and session storage</font>

897
00:31:31,139 --> 00:31:35,939
session<font color="#E5E5E5"> storage is lesser known and it's</font>

898
00:31:33,599 --> 00:31:37,499
actually a complex related so it's

899
00:31:35,940 --> 00:31:39,960
definitely<font color="#CCCCCC"> late so if you have a session</font>

900
00:31:37,499 --> 00:31:42,419
store in a window it's available to all

901
00:31:39,960 --> 00:31:44,460
code from<font color="#E5E5E5"> that</font><font color="#CCCCCC"> origin</font><font color="#E5E5E5"> in</font><font color="#CCCCCC"> that window and</font>

902
00:31:42,419 --> 00:31:46,139
if you<font color="#E5E5E5"> open a</font><font color="#CCCCCC"> new window</font><font color="#E5E5E5"> from within</font>

903
00:31:44,460 --> 00:31:48,299
that<font color="#CCCCCC"> window it shares the same</font><font color="#E5E5E5"> session</font>

904
00:31:46,139 --> 00:31:49,709
storage<font color="#E5E5E5"> if you open an entirely new</font>

905
00:31:48,299 --> 00:31:51,299
browser window<font color="#E5E5E5"> and</font><font color="#CCCCCC"> navigate to</font><font color="#E5E5E5"> the same</font>

906
00:31:49,710 --> 00:31:53,399
web<font color="#CCCCCC"> page it's going</font><font color="#E5E5E5"> to get a fresh</font>

907
00:31:51,299 --> 00:31:55,979
session store so if you store it there

908
00:31:53,399 --> 00:31:58,439
it survives page reloads<font color="#E5E5E5"> that's a good</font>

909
00:31:55,979 --> 00:32:00,389
thing<font color="#E5E5E5"> it's</font><font color="#CCCCCC"> not shared across we know so</font>

910
00:31:58,440 --> 00:32:02,999
that's that might be a disadvantage

911
00:32:00,389 --> 00:32:04,590
depends on the<font color="#CCCCCC"> application and of course</font>

912
00:32:02,999 --> 00:32:07,080
when you<font color="#CCCCCC"> have an injection attack it</font>

913
00:32:04,590 --> 00:32:08,999
needs to<font color="#E5E5E5"> happen in the tab query session</font>

914
00:32:07,080 --> 00:32:13,080
<font color="#CCCCCC">web</font><font color="#E5E5E5"> token actually</font><font color="#CCCCCC"> listen session</font>

915
00:32:08,999 --> 00:32:15,269
storage<font color="#CCCCCC"> now local storage is the easiest</font>

916
00:32:13,080 --> 00:32:16,830
to<font color="#CCCCCC"> use the most common</font><font color="#E5E5E5"> commonly used as</font>

917
00:32:15,269 --> 00:32:18,509
well it's available<font color="#E5E5E5"> to the entire origin</font>

918
00:32:16,830 --> 00:32:20,668
so every page in that origin has access

919
00:32:18,509 --> 00:32:22,979
<font color="#CCCCCC">to the same local storage</font><font color="#E5E5E5"> awesome</font>

920
00:32:20,669 --> 00:32:24,809
survives page reloads<font color="#E5E5E5"> usually shareable</font>

921
00:32:22,979 --> 00:32:27,330
<font color="#E5E5E5">through but if you have an injection</font>

922
00:32:24,809 --> 00:32:29,158
attack somewhere it's very easy<font color="#CCCCCC"> to steal</font>

923
00:32:27,330 --> 00:32:31,470
<font color="#E5E5E5">that's token from local storage this is</font>

924
00:32:29,159 --> 00:32:32,549
<font color="#E5E5E5">one</font><font color="#CCCCCC"> of the common injection vectors for</font>

925
00:32:31,470 --> 00:32:34,710
cross-site<font color="#E5E5E5"> scripting it used to be</font>

926
00:32:32,549 --> 00:32:36,658
<font color="#E5E5E5">assuming your cookies and now it's also</font>

927
00:32:34,710 --> 00:32:39,989
<font color="#E5E5E5">stealing all the data in</font><font color="#CCCCCC"> your local</font>

928
00:32:36,659 --> 00:32:43,019
<font color="#E5E5E5">search of course a very important side</font>

929
00:32:39,989 --> 00:32:45,269
note people<font color="#E5E5E5"> often talk</font><font color="#CCCCCC"> about</font><font color="#E5E5E5"> yeah but</font>

930
00:32:43,019 --> 00:32:46,979
<font color="#E5E5E5">you can hide something in cookies with</font>

931
00:32:45,269 --> 00:32:48,509
HTTP only but not<font color="#E5E5E5"> in local storage</font>

932
00:32:46,979 --> 00:32:50,039
keep in mind that you still have a

933
00:32:48,509 --> 00:32:51,330
cross-site scripting attack vector<font color="#E5E5E5"> so if</font>

934
00:32:50,039 --> 00:32:53,039
somebody<font color="#E5E5E5"> is stealing your local storage</font>

935
00:32:51,330 --> 00:32:55,439
<font color="#CCCCCC">through there</font><font color="#E5E5E5"> you already have a major</font>

936
00:32:53,039 --> 00:32:57,029
trouble<font color="#E5E5E5"> so</font><font color="#CCCCCC"> you're only</font><font color="#E5E5E5"> stopping one of</font>

937
00:32:55,440 --> 00:32:59,249
the generic attack vectors if<font color="#CCCCCC"> you try to</font>

938
00:32:57,029 --> 00:33:01,649
avoid this from<font color="#CCCCCC"> happening</font><font color="#E5E5E5"> but you still</font>

939
00:32:59,249 --> 00:33:03,149
have cross-site scripting hole in<font color="#CCCCCC"> your</font>

940
00:33:01,649 --> 00:33:05,399
applications<font color="#CCCCCC"> can be abused for all kinds</font>

941
00:33:03,149 --> 00:33:07,320
of<font color="#E5E5E5"> that so these are decisions you'll</font>

942
00:33:05,399 --> 00:33:08,459
need to<font color="#E5E5E5"> make and there's more if you</font>

943
00:33:07,320 --> 00:33:09,869
talk<font color="#E5E5E5"> about cookies</font><font color="#CCCCCC"> and the authorization</font>

944
00:33:08,460 --> 00:33:10,559
<font color="#CCCCCC">header which is</font><font color="#E5E5E5"> the right question to</font>

945
00:33:09,869 --> 00:33:13,539
<font color="#E5E5E5">ask</font>

946
00:33:10,559 --> 00:33:15,459
there's a lot more<font color="#CCCCCC"> to consider</font><font color="#E5E5E5"> cookies</font>

947
00:33:13,539 --> 00:33:16,479
<font color="#E5E5E5">well they both can contain any kind of</font>

948
00:33:15,459 --> 00:33:18,639
data<font color="#E5E5E5"> so that's good</font>

949
00:33:16,479 --> 00:33:21,309
<font color="#E5E5E5">I've got going to talk a</font><font color="#CCCCCC"> bit more about</font>

950
00:33:18,639 --> 00:33:22,418
<font color="#CCCCCC">that</font><font color="#E5E5E5"> in</font><font color="#CCCCCC"> the next</font><font color="#E5E5E5"> part so that's one</font>

951
00:33:21,309 --> 00:33:24,389
thing<font color="#E5E5E5"> we have</font><font color="#CCCCCC"> in common</font>

952
00:33:22,419 --> 00:33:26,409
cookies<font color="#E5E5E5"> are associated with the domain</font>

953
00:33:24,389 --> 00:33:27,998
<font color="#CCCCCC">the</font><font color="#E5E5E5"> authorization</font><font color="#CCCCCC"> header you attach it</font>

954
00:33:26,409 --> 00:33:30,339
<font color="#E5E5E5">yourself you can send it anywhere if you</font>

955
00:33:27,999 --> 00:33:32,889
<font color="#CCCCCC">share domains on your application like</font>

956
00:33:30,339 --> 00:33:35,918
google google<font color="#E5E5E5"> has google.com</font><font color="#CCCCCC"> youtube.com</font>

957
00:33:32,889 --> 00:33:37,418
more<font color="#CCCCCC"> gum whatever for cookies they have</font>

958
00:33:35,919 --> 00:33:38,769
to share the complete explicitly<font color="#E5E5E5"> across</font>

959
00:33:37,419 --> 00:33:39,849
all the<font color="#E5E5E5"> fleas domains which</font>

960
00:33:38,769 --> 00:33:41,320
authorization header they would be able

961
00:33:39,849 --> 00:33:42,939
<font color="#E5E5E5">to send it to everyone</font><font color="#CCCCCC"> they can check</font>

962
00:33:41,320 --> 00:33:46,329
out<font color="#CCCCCC"> is this one of</font><font color="#E5E5E5"> ours we can use the</font>

963
00:33:42,940 --> 00:33:47,649
same same token here cookies are handled

964
00:33:46,329 --> 00:33:50,678
automatically attached automatically

965
00:33:47,649 --> 00:33:53,139
which is really<font color="#E5E5E5"> easy at the use the</font>

966
00:33:50,679 --> 00:33:54,369
authorization<font color="#CCCCCC"> header is done</font><font color="#E5E5E5"> manually so</font>

967
00:33:53,139 --> 00:33:55,869
it's<font color="#E5E5E5"> not going to be present on</font><font color="#CCCCCC"> browser</font>

968
00:33:54,369 --> 00:33:58,749
<font color="#E5E5E5">generated requests requests coming from</font>

969
00:33:55,869 --> 00:34:00,129
the<font color="#E5E5E5"> dump of course the automatic</font>

970
00:33:58,749 --> 00:34:01,539
behavior shows that<font color="#CCCCCC"> sea surf is a</font>

971
00:34:00,129 --> 00:34:03,039
problem with cookies it's not a problem

972
00:34:01,539 --> 00:34:05,289
with the authorization<font color="#CCCCCC"> header if you</font>

973
00:34:03,039 --> 00:34:08,199
manage to<font color="#CCCCCC"> do that you probably need</font><font color="#E5E5E5"> some</font>

974
00:34:05,289 --> 00:34:11,589
help building<font color="#E5E5E5"> applications really you're</font>

975
00:34:08,199 --> 00:34:12,638
<font color="#CCCCCC">doing it really</font><font color="#E5E5E5"> wrong this is not going</font>

976
00:34:11,589 --> 00:34:15,489
<font color="#E5E5E5">to be an issue with the authorization</font>

977
00:34:12,639 --> 00:34:16,990
<font color="#CCCCCC">error now finally and some people argue</font>

978
00:34:15,489 --> 00:34:19,000
like I said before you<font color="#CCCCCC"> can hide cookies</font>

979
00:34:16,989 --> 00:34:22,569
from malicious JavaScript which is kind

980
00:34:19,000 --> 00:34:25,418
of a catch-22 a serious vulnerability<font color="#CCCCCC"> or</font>

981
00:34:22,569 --> 00:34:27,369
kind<font color="#E5E5E5"> of a band-aid through serious owner</font>

982
00:34:25,418 --> 00:34:29,138
ability it's<font color="#E5E5E5"> a bit</font><font color="#CCCCCC"> different with</font><font color="#E5E5E5"> the</font>

983
00:34:27,369 --> 00:34:31,569
authorization<font color="#CCCCCC"> header so these are things</font>

984
00:34:29,139 --> 00:34:37,480
<font color="#E5E5E5">to keep in mind</font><font color="#CCCCCC"> bring me to the second</font>

985
00:34:31,569 --> 00:34:39,159
takeaway choosing<font color="#E5E5E5"> how you transport</font><font color="#CCCCCC"> your</font>

986
00:34:37,480 --> 00:34:40,779
session data has a really<font color="#E5E5E5"> big</font><font color="#CCCCCC"> impact in</font>

987
00:34:39,159 --> 00:34:42,700
your application<font color="#E5E5E5"> and this is something</font>

988
00:34:40,779 --> 00:34:44,739
that<font color="#E5E5E5"> doesn't appear to</font><font color="#CCCCCC"> be a isn't</font>

989
00:34:42,699 --> 00:34:46,210
<font color="#E5E5E5">apparent in many angular tutorials like</font>

990
00:34:44,739 --> 00:34:48,428
yeah just use chocolate local<font color="#E5E5E5"> storage</font>

991
00:34:46,210 --> 00:34:49,539
and<font color="#CCCCCC"> you're fine well honestly</font><font color="#E5E5E5"> it's a bit</font>

992
00:34:48,429 --> 00:34:52,509
more<font color="#E5E5E5"> complicated than that</font>

993
00:34:49,539 --> 00:34:56,649
and we cover that in in the<font color="#E5E5E5"> past</font><font color="#CCCCCC"> last</font>

994
00:34:52,509 --> 00:34:58,630
<font color="#CCCCCC">few slides</font><font color="#E5E5E5"> cookies in my opinion and a</font>

995
00:34:56,649 --> 00:35:00,160
lot<font color="#E5E5E5"> of people know how</font><font color="#CCCCCC"> they work and</font><font color="#E5E5E5"> we</font>

996
00:34:58,630 --> 00:35:01,900
have experience with<font color="#E5E5E5"> cookies so it's not</font>

997
00:35:00,160 --> 00:35:03,788
<font color="#E5E5E5">a bad thing to stick with cookies</font>

998
00:35:01,900 --> 00:35:05,289
<font color="#E5E5E5">actually a lot</font><font color="#CCCCCC"> of that stuff</font><font color="#E5E5E5"> depends on</font>

999
00:35:03,789 --> 00:35:07,240
cookies<font color="#CCCCCC"> you have</font><font color="#E5E5E5"> course cross-origin</font>

1000
00:35:05,289 --> 00:35:08,589
resource sharing<font color="#E5E5E5"> it works very well with</font>

1001
00:35:07,240 --> 00:35:10,990
cookies it doesn't work<font color="#CCCCCC"> very well with</font>

1002
00:35:08,589 --> 00:35:12,519
<font color="#E5E5E5">the authorization</font><font color="#CCCCCC"> header and we can go</font>

1003
00:35:10,990 --> 00:35:14,019
into<font color="#E5E5E5"> more detail on that</font><font color="#CCCCCC"> afterwards if</font>

1004
00:35:12,519 --> 00:35:17,500
you<font color="#E5E5E5"> have more</font><font color="#CCCCCC"> specific questions</font><font color="#E5E5E5"> about</font>

1005
00:35:14,019 --> 00:35:18,910
<font color="#E5E5E5">that but it's just one example</font><font color="#CCCCCC"> of</font><font color="#E5E5E5"> course</font>

1006
00:35:17,500 --> 00:35:20,799
cookies means you<font color="#E5E5E5"> need to deal with</font><font color="#CCCCCC"> C</font>

1007
00:35:18,910 --> 00:35:23,609
surf<font color="#E5E5E5"> that's definitely something to keep</font>

1008
00:35:20,799 --> 00:35:25,710
in<font color="#CCCCCC"> mind with angular it</font>

1009
00:35:23,609 --> 00:35:27,089
seems to be a kind of<font color="#E5E5E5"> mandatory</font><font color="#CCCCCC"> to use</font>

1010
00:35:25,710 --> 00:35:28,619
these<font color="#CCCCCC"> client-side sessions with job</font>

1011
00:35:27,089 --> 00:35:31,019
tokens and<font color="#E5E5E5"> your authorization header</font>

1012
00:35:28,619 --> 00:35:32,099
because<font color="#E5E5E5"> that's one way to do</font><font color="#CCCCCC"> it and</font>

1013
00:35:31,019 --> 00:35:34,950
that's what a lot<font color="#CCCCCC"> of</font><font color="#E5E5E5"> people actually</font>

1014
00:35:32,099 --> 00:35:36,299
advise you to do<font color="#E5E5E5"> it like</font><font color="#CCCCCC"> I said</font><font color="#E5E5E5"> this is</font>

1015
00:35:34,950 --> 00:35:37,618
not<font color="#CCCCCC"> very</font><font color="#E5E5E5"> compatible with some of the</font>

1016
00:35:36,299 --> 00:35:39,109
other web<font color="#E5E5E5"> technologies</font><font color="#CCCCCC"> so that's</font>

1017
00:35:37,619 --> 00:35:42,869
definitely<font color="#E5E5E5"> something to take in mind</font>

1018
00:35:39,109 --> 00:35:44,549
however<font color="#CCCCCC"> um since a lot of</font><font color="#E5E5E5"> people are</font>

1019
00:35:42,869 --> 00:35:47,339
<font color="#E5E5E5">actually using</font><font color="#CCCCCC"> that and a</font><font color="#E5E5E5"> lot of people</font>

1020
00:35:44,549 --> 00:35:49,859
are making some mistakes using<font color="#CCCCCC"> Java</font>

1021
00:35:47,339 --> 00:35:51,869
tokens that's going to be<font color="#E5E5E5"> a topic for</font>

1022
00:35:49,859 --> 00:35:53,400
the last part of this presentation<font color="#CCCCCC"> which</font>

1023
00:35:51,869 --> 00:36:02,940
I should<font color="#E5E5E5"> be</font><font color="#CCCCCC"> able</font><font color="#E5E5E5"> to finish in just in</font>

1024
00:35:53,400 --> 00:36:05,069
time<font color="#E5E5E5"> who uses your tokens okay people</font>

1025
00:36:02,940 --> 00:36:06,450
<font color="#CCCCCC">are</font><font color="#E5E5E5"> waking up that's good just in time</font>

1026
00:36:05,069 --> 00:36:11,130
for the<font color="#E5E5E5"> final takeaway message in the</font>

1027
00:36:06,450 --> 00:36:13,200
excitement so drop tokens<font color="#E5E5E5"> am officially</font>

1028
00:36:11,130 --> 00:36:14,910
<font color="#CCCCCC">they're</font><font color="#E5E5E5"> a open industry standard for</font>

1029
00:36:13,200 --> 00:36:17,220
<font color="#E5E5E5">representing claims securely between</font>

1030
00:36:14,910 --> 00:36:19,470
<font color="#E5E5E5">different parties essentially well it</font>

1031
00:36:17,220 --> 00:36:22,319
comes<font color="#E5E5E5"> down</font><font color="#CCCCCC"> to it a</font><font color="#E5E5E5"> Giotto can look like</font>

1032
00:36:19,470 --> 00:36:24,509
this<font color="#E5E5E5"> it's three different parts</font><font color="#CCCCCC"> if you</font>

1033
00:36:22,319 --> 00:36:27,089
split up you have a header a payload and

1034
00:36:24,509 --> 00:36:28,799
a signature in essence<font color="#E5E5E5"> it's Jason so</font>

1035
00:36:27,089 --> 00:36:32,489
it's easy to<font color="#CCCCCC"> process a</font><font color="#E5E5E5"> Java JavaScript</font>

1036
00:36:28,799 --> 00:36:34,529
<font color="#CCCCCC">great and it has some kind of a</font>

1037
00:36:32,489 --> 00:36:36,630
signature there's again another<font color="#E5E5E5"> talk go</font>

1038
00:36:34,529 --> 00:36:38,849
into a lot more details<font color="#CCCCCC"> and jobs</font><font color="#E5E5E5"> so if</font>

1039
00:36:36,630 --> 00:36:41,130
you want to<font color="#CCCCCC"> know more</font><font color="#E5E5E5"> definitely go go</font>

1040
00:36:38,849 --> 00:36:42,599
there the important<font color="#E5E5E5"> part is</font><font color="#CCCCCC"> the payload</font>

1041
00:36:41,130 --> 00:36:44,039
<font color="#CCCCCC">the payload has all the information</font><font color="#E5E5E5"> you</font>

1042
00:36:42,599 --> 00:36:45,450
want<font color="#E5E5E5"> to store there are some reserved</font>

1043
00:36:44,039 --> 00:36:47,489
fields<font color="#E5E5E5"> they're like who issue this</font>

1044
00:36:45,450 --> 00:36:48,808
issued it when it expires but you can

1045
00:36:47,489 --> 00:36:51,599
also add<font color="#CCCCCC"> custom fields</font><font color="#E5E5E5"> there you</font>

1046
00:36:48,809 --> 00:36:53,369
probably<font color="#E5E5E5"> notice if you use it the cool</font>

1047
00:36:51,599 --> 00:36:54,950
part<font color="#E5E5E5"> is a signature the signature is</font>

1048
00:36:53,369 --> 00:36:57,599
generated<font color="#E5E5E5"> on a header and a payload</font>

1049
00:36:54,950 --> 00:37:00,538
using the<font color="#E5E5E5"> algorithm specified here so</font>

1050
00:36:57,599 --> 00:37:02,460
it's an<font color="#CCCCCC"> H mark which are 256</font><font color="#E5E5E5"> and</font><font color="#CCCCCC"> a</font>

1051
00:37:00,539 --> 00:37:04,559
<font color="#E5E5E5">signature is got generated on header and</font>

1052
00:37:02,460 --> 00:37:06,299
payload<font color="#E5E5E5"> using a server-side secret</font>

1053
00:37:04,559 --> 00:37:07,589
<font color="#E5E5E5">essentially what</font><font color="#CCCCCC"> it allows you</font><font color="#E5E5E5"> to do</font>

1054
00:37:06,299 --> 00:37:09,329
this allows you<font color="#E5E5E5"> to</font><font color="#CCCCCC"> verify the integrity</font>

1055
00:37:07,589 --> 00:37:11,249
of<font color="#E5E5E5"> a token when you get it back because</font>

1056
00:37:09,329 --> 00:37:12,539
<font color="#E5E5E5">it's been stored</font><font color="#CCCCCC"> in</font><font color="#E5E5E5"> the client you need</font>

1057
00:37:11,249 --> 00:37:14,098
to<font color="#E5E5E5"> make sure</font><font color="#CCCCCC"> that when you get</font><font color="#E5E5E5"> it back</font>

1058
00:37:12,539 --> 00:37:16,079
it's a fellow token that<font color="#CCCCCC"> know what is</font>

1059
00:37:14,099 --> 00:37:20,720
tempered<font color="#E5E5E5"> with it one of the impacts of</font>

1060
00:37:16,079 --> 00:37:22,710
moving things to<font color="#E5E5E5"> watch the client so</font>

1061
00:37:20,720 --> 00:37:25,288
like<font color="#CCCCCC"> the spec says</font><font color="#E5E5E5"> it's a way to</font>

1062
00:37:22,710 --> 00:37:27,059
represent claims securely securely means

1063
00:37:25,289 --> 00:37:28,890
in<font color="#E5E5E5"> this case at least ensuring integrity</font>

1064
00:37:27,059 --> 00:37:31,109
there's an initial spike that supports

1065
00:37:28,890 --> 00:37:33,420
<font color="#E5E5E5">encryption as well again more details</font>

1066
00:37:31,109 --> 00:37:35,680
<font color="#CCCCCC">about that</font><font color="#E5E5E5"> in other talks</font>

1067
00:37:33,420 --> 00:37:37,960
your<font color="#E5E5E5"> back-end should be responsible</font><font color="#CCCCCC"> for</font>

1068
00:37:35,680 --> 00:37:40,390
<font color="#E5E5E5">generating these tokens obviously but</font>

1069
00:37:37,960 --> 00:37:42,880
also for ensuring that the<font color="#E5E5E5"> token is</font>

1070
00:37:40,390 --> 00:37:44,859
valid<font color="#E5E5E5"> ensuring the integrity of a token</font>

1071
00:37:42,880 --> 00:37:48,060
<font color="#CCCCCC">before handling is this is what actually</font>

1072
00:37:44,859 --> 00:37:50,470
goes wrong in a lot<font color="#CCCCCC"> of</font><font color="#E5E5E5"> applications so</font>

1073
00:37:48,060 --> 00:37:52,240
people forget<font color="#CCCCCC"> to verify the signature</font>

1074
00:37:50,470 --> 00:37:53,950
before<font color="#E5E5E5"> they use it is simply decode it</font>

1075
00:37:52,240 --> 00:37:55,899
<font color="#CCCCCC">and get a date out</font><font color="#E5E5E5"> because it's simply</font>

1076
00:37:53,950 --> 00:37:58,930
<font color="#E5E5E5">oh I forgot to mention its base 64</font>

1077
00:37:55,900 --> 00:38:01,990
encoded so it's not not hard to get the

1078
00:37:58,930 --> 00:38:03,399
info<font color="#E5E5E5"> out of and you actually get get</font>

1079
00:38:01,990 --> 00:38:05,709
<font color="#CCCCCC">that wrong that's one</font><font color="#E5E5E5"> of the common</font>

1080
00:38:03,400 --> 00:38:06,970
mistakes<font color="#E5E5E5"> also</font><font color="#CCCCCC"> a lot of client</font>

1081
00:38:05,710 --> 00:38:08,890
applications depend on the<font color="#E5E5E5"> information</font>

1082
00:38:06,970 --> 00:38:10,779
<font color="#CCCCCC">present in the jaw token</font><font color="#E5E5E5"> so they start</font>

1083
00:38:08,890 --> 00:38:12,580
decoding<font color="#E5E5E5"> this</font><font color="#CCCCCC"> drop token on the client</font>

1084
00:38:10,780 --> 00:38:14,380
<font color="#E5E5E5">and extracting</font><font color="#CCCCCC"> information out of this</font><font color="#E5E5E5"> I</font>

1085
00:38:12,580 --> 00:38:15,910
<font color="#E5E5E5">don't really recommend that because this</font>

1086
00:38:14,380 --> 00:38:17,080
makes your application dependent on the

1087
00:38:15,910 --> 00:38:18,940
format of the token<font color="#CCCCCC"> that the server</font>

1088
00:38:17,080 --> 00:38:20,560
<font color="#E5E5E5">actually</font><font color="#CCCCCC"> uses so if you</font><font color="#E5E5E5"> meet</font><font color="#CCCCCC"> this</font>

1089
00:38:18,940 --> 00:38:22,330
information<font color="#CCCCCC"> just send it in the separate</font>

1090
00:38:20,560 --> 00:38:24,940
channels and<font color="#E5E5E5"> there's a JSON response</font>

1091
00:38:22,330 --> 00:38:30,220
<font color="#E5E5E5">whatever and so it's a lot cleaner to do</font>

1092
00:38:24,940 --> 00:38:31,690
it that way like we covered<font color="#CCCCCC"> before</font><font color="#E5E5E5"> the</font>

1093
00:38:30,220 --> 00:38:33,368
angular application<font color="#CCCCCC"> we'll need</font><font color="#E5E5E5"> to make</font>

1094
00:38:31,690 --> 00:38:35,140
<font color="#CCCCCC">sure that the job token is there if</font><font color="#E5E5E5"> you</font>

1095
00:38:33,369 --> 00:38:36,640
use it we<font color="#CCCCCC"> covered</font><font color="#E5E5E5"> the transport</font>

1096
00:38:35,140 --> 00:38:39,848
<font color="#CCCCCC">mechanism in a lot of</font><font color="#E5E5E5"> details so you</font>

1097
00:38:36,640 --> 00:38:43,359
<font color="#CCCCCC">definitely know how</font><font color="#E5E5E5"> to do that now as</font>

1098
00:38:39,849 --> 00:38:45,190
well cloud tokens originally used<font color="#E5E5E5"> in</font>

1099
00:38:43,359 --> 00:38:46,810
open<font color="#E5E5E5"> any connect well probably before</font>

1100
00:38:45,190 --> 00:38:49,750
<font color="#E5E5E5">that</font><font color="#CCCCCC"> as well but this is</font><font color="#E5E5E5"> where they</font>

1101
00:38:46,810 --> 00:38:51,730
became popular<font color="#CCCCCC"> and nowadays</font><font color="#E5E5E5"> they're</font>

1102
00:38:49,750 --> 00:38:53,859
actually<font color="#CCCCCC"> very standardized right there's</font>

1103
00:38:51,730 --> 00:38:56,980
a lot<font color="#E5E5E5"> of</font><font color="#CCCCCC"> libraries out</font><font color="#E5E5E5"> there that offer</font>

1104
00:38:53,859 --> 00:38:58,869
<font color="#CCCCCC">support for</font><font color="#E5E5E5"> this</font><font color="#CCCCCC"> two important things or</font>

1105
00:38:56,980 --> 00:39:02,200
one important<font color="#CCCCCC"> thing I want to</font><font color="#E5E5E5"> cover to</font>

1106
00:38:58,869 --> 00:39:03,970
conclude this stuff on<font color="#E5E5E5"> jobs there's two</font>

1107
00:39:02,200 --> 00:39:05,680
ways to<font color="#CCCCCC"> generate a signature and this</font><font color="#E5E5E5"> is</font>

1108
00:39:03,970 --> 00:39:07,720
<font color="#E5E5E5">what again a lot of people get wrong</font>

1109
00:39:05,680 --> 00:39:09,640
<font color="#E5E5E5">there's a way to</font><font color="#CCCCCC"> do this with a shared</font>

1110
00:39:07,720 --> 00:39:11,410
key within your application<font color="#E5E5E5"> and a way to</font>

1111
00:39:09,640 --> 00:39:13,990
<font color="#E5E5E5">do this with a public/private key pair</font>

1112
00:39:11,410 --> 00:39:15,220
<font color="#E5E5E5">to share across applications</font><font color="#CCCCCC"> let me show</font>

1113
00:39:13,990 --> 00:39:17,020
you by<font color="#E5E5E5"> the way there are other specs</font>

1114
00:39:15,220 --> 00:39:19,359
covering all the details of these

1115
00:39:17,020 --> 00:39:21,369
chocolates<font color="#E5E5E5"> let me show you within one</font>

1116
00:39:19,359 --> 00:39:24,009
application if you have this scenario

1117
00:39:21,369 --> 00:39:26,109
<font color="#E5E5E5">the server can generate a joke and send</font>

1118
00:39:24,010 --> 00:39:28,150
it to<font color="#CCCCCC"> the browser gets</font><font color="#E5E5E5"> it back and can</font>

1119
00:39:26,109 --> 00:39:29,710
verify the integrity<font color="#CCCCCC"> you see that</font><font color="#E5E5E5"> you</font>

1120
00:39:28,150 --> 00:39:32,200
<font color="#E5E5E5">use is</font><font color="#CCCCCC"> the same key for both</font><font color="#E5E5E5"> this is a</font>

1121
00:39:29,710 --> 00:39:34,330
shared key<font color="#E5E5E5"> this</font><font color="#CCCCCC"> is really important to</font>

1122
00:39:32,200 --> 00:39:36,669
<font color="#E5E5E5">grasp why because if you want to share</font>

1123
00:39:34,330 --> 00:39:38,348
this token with<font color="#E5E5E5"> third party and you want</font>

1124
00:39:36,670 --> 00:39:39,760
to have them<font color="#E5E5E5"> to be able to</font><font color="#CCCCCC"> verify</font><font color="#E5E5E5"> the</font>

1125
00:39:38,349 --> 00:39:41,740
<font color="#E5E5E5">integrity you would have to share your</font>

1126
00:39:39,760 --> 00:39:43,450
<font color="#E5E5E5">server-side</font><font color="#CCCCCC"> secrets which</font><font color="#E5E5E5"> is a very bad</font>

1127
00:39:41,740 --> 00:39:45,790
idea<font color="#CCCCCC"> because the properties if you</font>

1128
00:39:43,450 --> 00:39:46,810
notice this key<font color="#CCCCCC"> you can generate fellow</font>

1129
00:39:45,790 --> 00:39:48,850
tokens

1130
00:39:46,810 --> 00:39:50,860
only verify but also<font color="#CCCCCC"> as</font><font color="#E5E5E5"> January and</font>

1131
00:39:48,850 --> 00:39:53,920
<font color="#E5E5E5">that's one</font><font color="#CCCCCC"> of the major problems</font><font color="#E5E5E5"> and</font>

1132
00:39:50,860 --> 00:39:56,200
I've actually<font color="#CCCCCC"> seen is an applications</font>

1133
00:39:53,920 --> 00:39:58,270
<font color="#E5E5E5">being used in the wrong</font><font color="#CCCCCC"> way so what if</font>

1134
00:39:56,200 --> 00:40:00,370
should you do in this<font color="#E5E5E5"> case and which is</font>

1135
00:39:58,270 --> 00:40:03,100
also<font color="#E5E5E5"> the case of how open ID connects</font>

1136
00:40:00,370 --> 00:40:04,720
<font color="#CCCCCC">that does this for example</font><font color="#E5E5E5"> if for</font>

1137
00:40:03,100 --> 00:40:06,069
<font color="#CCCCCC">example</font><font color="#E5E5E5"> Google generates a</font><font color="#CCCCCC"> Joe token</font>

1138
00:40:04,720 --> 00:40:09,549
with your<font color="#E5E5E5"> identity information it's</font>

1139
00:40:06,070 --> 00:40:11,470
<font color="#E5E5E5">going to use a private key to generate a</font>

1140
00:40:09,550 --> 00:40:13,390
signature and anybody<font color="#E5E5E5"> with a public key</font>

1141
00:40:11,470 --> 00:40:15,339
can verify that signature<font color="#CCCCCC"> and that's</font>

1142
00:40:13,390 --> 00:40:17,620
<font color="#E5E5E5">essentially the right way to share jobs</font>

1143
00:40:15,340 --> 00:40:18,820
tokens<font color="#E5E5E5"> across</font><font color="#CCCCCC"> applications or even</font>

1144
00:40:17,620 --> 00:40:20,319
within one application where you have

1145
00:40:18,820 --> 00:40:23,110
<font color="#CCCCCC">different services you definitely want</font>

1146
00:40:20,320 --> 00:40:24,340
to<font color="#E5E5E5"> not share</font><font color="#CCCCCC"> your secret all of</font><font color="#E5E5E5"> these</font>

1147
00:40:23,110 --> 00:40:27,340
services which you<font color="#E5E5E5"> want to start moving</font>

1148
00:40:24,340 --> 00:40:31,060
towards this<font color="#CCCCCC"> a bit more complex system</font>

1149
00:40:27,340 --> 00:40:33,310
<font color="#E5E5E5">but also a lot</font><font color="#CCCCCC"> more secure</font><font color="#E5E5E5"> innocence</font>

1150
00:40:31,060 --> 00:40:35,110
than sharing your<font color="#CCCCCC"> share key</font><font color="#E5E5E5"> very</font>

1151
00:40:33,310 --> 00:40:36,970
important and something that<font color="#E5E5E5"> not a lot</font>

1152
00:40:35,110 --> 00:40:38,260
<font color="#CCCCCC">of people</font><font color="#E5E5E5"> know actually because most</font>

1153
00:40:36,970 --> 00:40:40,750
people<font color="#E5E5E5"> talk about the shared key</font>

1154
00:40:38,260 --> 00:40:45,660
mechanism the<font color="#CCCCCC"> hmx</font><font color="#E5E5E5"> but not about these</font>

1155
00:40:40,750 --> 00:40:49,570
public public<font color="#CCCCCC"> private key signatures</font><font color="#E5E5E5"> um</font>

1156
00:40:45,660 --> 00:40:51,580
a final word on<font color="#E5E5E5"> drop tokens they are</font>

1157
00:40:49,570 --> 00:40:53,140
very<font color="#CCCCCC"> young</font><font color="#E5E5E5"> they've been around for a</font>

1158
00:40:51,580 --> 00:40:55,390
couple<font color="#E5E5E5"> of years they have some growing</font>

1159
00:40:53,140 --> 00:40:57,069
pains<font color="#CCCCCC"> so essentially one of</font><font color="#E5E5E5"> the big</font>

1160
00:40:55,390 --> 00:40:59,230
<font color="#E5E5E5">problems is</font><font color="#CCCCCC"> that they use crypto</font><font color="#E5E5E5"> and</font>

1161
00:40:57,070 --> 00:41:01,150
crypto is really hard we've seen<font color="#CCCCCC"> it in</font>

1162
00:40:59,230 --> 00:41:03,720
<font color="#CCCCCC">the past with XML</font><font color="#E5E5E5"> and we are seeing this</font>

1163
00:41:01,150 --> 00:41:06,610
<font color="#CCCCCC">again with</font><font color="#E5E5E5"> tokens so there's a talk</font><font color="#CCCCCC"> I</font>

1164
00:41:03,720 --> 00:41:08,620
think later today<font color="#CCCCCC"> about some problems</font>

1165
00:41:06,610 --> 00:41:11,500
with with a crypto behind<font color="#CCCCCC"> shots tokens</font>

1166
00:41:08,620 --> 00:41:13,060
as well one big problem is that<font color="#CCCCCC"> the</font>

1167
00:41:11,500 --> 00:41:15,100
header<font color="#E5E5E5"> contains the algorithm that's</font>

1168
00:41:13,060 --> 00:41:16,660
being used<font color="#E5E5E5"> for a signature generation or</font>

1169
00:41:15,100 --> 00:41:17,500
the encryption<font color="#CCCCCC"> but that the header</font>

1170
00:41:16,660 --> 00:41:18,910
cannot be trusted

1171
00:41:17,500 --> 00:41:20,920
until the signature has to be verified

1172
00:41:18,910 --> 00:41:22,180
<font color="#E5E5E5">yet you need the information</font><font color="#CCCCCC"> that's</font><font color="#E5E5E5"> in</font>

1173
00:41:20,920 --> 00:41:24,550
there to<font color="#E5E5E5"> verify the secret and that</font>

1174
00:41:22,180 --> 00:41:28,899
causes some<font color="#CCCCCC"> problems a few</font><font color="#E5E5E5"> examples of</font>

1175
00:41:24,550 --> 00:41:30,400
the past last year or two essentially

1176
00:41:28,900 --> 00:41:32,320
<font color="#E5E5E5">one of</font><font color="#CCCCCC"> the problems is</font><font color="#E5E5E5"> the library's</font>

1177
00:41:30,400 --> 00:41:33,970
accepted<font color="#CCCCCC"> to</font><font color="#E5E5E5"> non algorithm so somebody</font>

1178
00:41:32,320 --> 00:41:35,170
can simply say<font color="#E5E5E5"> don't verify the</font>

1179
00:41:33,970 --> 00:41:36,759
<font color="#E5E5E5">signature at all and give you an</font>

1180
00:41:35,170 --> 00:41:38,560
arbitrary token that<font color="#E5E5E5"> would be accepted</font>

1181
00:41:36,760 --> 00:41:40,810
<font color="#CCCCCC">and there are few others as well the</font>

1182
00:41:38,560 --> 00:41:44,259
links are at the bottom<font color="#E5E5E5"> of the slide so</font>

1183
00:41:40,810 --> 00:41:46,420
<font color="#E5E5E5">you can look it up yourself brings me to</font>

1184
00:41:44,260 --> 00:41:46,900
the third takeaway<font color="#CCCCCC"> M chops are well</font>

1185
00:41:46,420 --> 00:41:49,600
supported

1186
00:41:46,900 --> 00:41:51,430
<font color="#E5E5E5">often recommend it but if you use them I</font>

1187
00:41:49,600 --> 00:41:53,470
<font color="#E5E5E5">don't advise against using them but they</font>

1188
00:41:51,430 --> 00:41:54,730
require<font color="#CCCCCC"> constant supervision</font><font color="#E5E5E5"> like small</font>

1189
00:41:53,470 --> 00:41:57,250
<font color="#CCCCCC">children you</font><font color="#E5E5E5"> need to keep your eye</font><font color="#CCCCCC"> on</font>

1190
00:41:54,730 --> 00:41:58,780
them<font color="#CCCCCC"> I need to make sure</font><font color="#E5E5E5"> that's</font><font color="#CCCCCC"> and when</font>

1191
00:41:57,250 --> 00:42:00,520
something<font color="#CCCCCC"> happens you</font><font color="#E5E5E5"> can essentially</font>

1192
00:41:58,780 --> 00:42:02,440
update your libraries and

1193
00:42:00,520 --> 00:42:05,950
make sure<font color="#E5E5E5"> that you are not</font><font color="#CCCCCC"> vulnerable to</font>

1194
00:42:02,440 --> 00:42:08,890
<font color="#E5E5E5">these kind of attacks be aware of these</font>

1195
00:42:05,950 --> 00:42:10,419
signatures signature mechanisms and the

1196
00:42:08,890 --> 00:42:11,920
important difference of between<font color="#CCCCCC"> them</font>

1197
00:42:10,420 --> 00:42:13,870
<font color="#E5E5E5">otherwise you're probably going to get</font>

1198
00:42:11,920 --> 00:42:16,870
it wrong<font color="#CCCCCC"> and you're going to</font><font color="#E5E5E5"> be very</font>

1199
00:42:13,870 --> 00:42:20,710
<font color="#E5E5E5">vulnerable to to fake tokens or to</font>

1200
00:42:16,870 --> 00:42:22,900
forged<font color="#E5E5E5"> tokens and of course keep keep</font>

1201
00:42:20,710 --> 00:42:24,490
everything<font color="#CCCCCC"> up the dates</font><font color="#E5E5E5"> to avoid being</font>

1202
00:42:22,900 --> 00:42:26,110
<font color="#E5E5E5">vulnerable</font><font color="#CCCCCC"> to these kind of mistakes</font>

1203
00:42:24,490 --> 00:42:28,029
<font color="#E5E5E5">there's a lot of</font><font color="#CCCCCC"> libraries supporting</font>

1204
00:42:26,110 --> 00:42:30,700
jobs<font color="#E5E5E5"> they're updated very frequently and</font>

1205
00:42:28,030 --> 00:42:32,920
normally so definitely make<font color="#E5E5E5"> sure you</font>

1206
00:42:30,700 --> 00:42:37,600
keep an eye on<font color="#E5E5E5"> that and stay</font><font color="#CCCCCC"> on track</font>

1207
00:42:32,920 --> 00:42:38,950
there brings<font color="#E5E5E5"> me to the conclusion at pre</font>

1208
00:42:37,600 --> 00:42:40,750
<font color="#CCCCCC">takeaway so if you've been</font><font color="#E5E5E5"> asleep this</font>

1209
00:42:38,950 --> 00:42:43,600
<font color="#E5E5E5">is where you wake up and start paying</font>

1210
00:42:40,750 --> 00:42:47,350
attention<font color="#E5E5E5"> first jobs you</font><font color="#CCCCCC"> cover that</font>

1211
00:42:43,600 --> 00:42:49,029
<font color="#CCCCCC">well-supported recommend</font><font color="#E5E5E5"> to use but make</font>

1212
00:42:47,350 --> 00:42:50,589
sure you<font color="#E5E5E5"> know what you're getting into</font>

1213
00:42:49,030 --> 00:42:52,830
they don't<font color="#CCCCCC"> necessarily make things</font>

1214
00:42:50,590 --> 00:42:56,020
easier<font color="#CCCCCC"> they just make things different</font>

1215
00:42:52,830 --> 00:42:57,880
session data how you transport<font color="#CCCCCC"> this has</font>

1216
00:42:56,020 --> 00:42:59,860
a very big impact<font color="#E5E5E5"> this means where you</font>

1217
00:42:57,880 --> 00:43:01,660
need to worry about<font color="#E5E5E5"> sea surf or not this</font>

1218
00:42:59,860 --> 00:43:04,750
means whether you be<font color="#E5E5E5"> able to</font><font color="#CCCCCC"> protect</font>

1219
00:43:01,660 --> 00:43:06,009
<font color="#CCCCCC">dumb</font><font color="#E5E5E5"> base resources being loaded you</font>

1220
00:43:04,750 --> 00:43:08,650
have access control checks<font color="#E5E5E5"> on them or</font>

1221
00:43:06,010 --> 00:43:10,240
not<font color="#E5E5E5"> these</font><font color="#CCCCCC"> things</font><font color="#E5E5E5"> matter even</font><font color="#CCCCCC"> though on</font>

1222
00:43:08,650 --> 00:43:11,770
the<font color="#E5E5E5"> surface they seem</font><font color="#CCCCCC"> like you know it's</font>

1223
00:43:10,240 --> 00:43:14,259
<font color="#E5E5E5">about the same whatever</font><font color="#CCCCCC"> we'll</font><font color="#E5E5E5"> use this</font>

1224
00:43:11,770 --> 00:43:17,050
<font color="#E5E5E5">no more cookies under the hood this</font>

1225
00:43:14,260 --> 00:43:19,240
changes a lot<font color="#CCCCCC"> of</font><font color="#E5E5E5"> things and then finally</font>

1226
00:43:17,050 --> 00:43:20,530
if you're using angular<font color="#E5E5E5"> and we happy</font>

1227
00:43:19,240 --> 00:43:22,750
that angular<font color="#E5E5E5"> does cross the</font><font color="#CCCCCC"> scripting</font>

1228
00:43:20,530 --> 00:43:25,720
protection quite<font color="#E5E5E5"> low there are some</font>

1229
00:43:22,750 --> 00:43:28,510
bypasses as other people will cover here

1230
00:43:25,720 --> 00:43:31,629
at the<font color="#E5E5E5"> conference as well but in general</font>

1231
00:43:28,510 --> 00:43:33,850
<font color="#E5E5E5">don't do stupid things and you get get</font>

1232
00:43:31,630 --> 00:43:36,730
this<font color="#E5E5E5"> protection kind of for free from</font>

1233
00:43:33,850 --> 00:43:41,410
angular<font color="#CCCCCC"> all</font><font color="#E5E5E5"> right</font>

1234
00:43:36,730 --> 00:43:43,540
so I actually give trainings and<font color="#E5E5E5"> I talk</font>

1235
00:43:41,410 --> 00:43:46,509
about<font color="#E5E5E5"> security I don't build a spherical</font>

1236
00:43:43,540 --> 00:43:48,100
<font color="#E5E5E5">eye those small applications I use not a</font>

1237
00:43:46,510 --> 00:43:50,380
lot of<font color="#CCCCCC"> other people use</font><font color="#E5E5E5"> it except my</font>

1238
00:43:48,100 --> 00:43:52,060
<font color="#CCCCCC">wife's but that doesn't really count so</font>

1239
00:43:50,380 --> 00:43:53,590
<font color="#E5E5E5">you guys build the applications that we</font>

1240
00:43:52,060 --> 00:43:55,630
use<font color="#E5E5E5"> so you guys need to build secure</font>

1241
00:43:53,590 --> 00:43:58,060
applications<font color="#E5E5E5"> so that's part of my go</font>

1242
00:43:55,630 --> 00:43:59,520
away<font color="#CCCCCC"> takeaway message</font><font color="#E5E5E5"> please take this</font>

1243
00:43:58,060 --> 00:44:01,750
into account<font color="#E5E5E5"> when you build</font><font color="#CCCCCC"> applications</font>

1244
00:43:59,520 --> 00:44:03,880
follow people that<font color="#E5E5E5"> know about this</font>

1245
00:44:01,750 --> 00:44:05,620
<font color="#E5E5E5">follow the people that speak about</font>

1246
00:44:03,880 --> 00:44:07,270
security there's plenty of speakers here

1247
00:44:05,620 --> 00:44:09,220
at the conference day they write blog

1248
00:44:07,270 --> 00:44:11,020
posts<font color="#E5E5E5"> they're on</font><font color="#CCCCCC"> Twitter</font><font color="#E5E5E5"> follow them</font><font color="#CCCCCC"> so</font>

1249
00:44:09,220 --> 00:44:13,879
you're<font color="#E5E5E5"> sure you're</font><font color="#CCCCCC"> up to date</font><font color="#E5E5E5"> so you</font>

1250
00:44:11,020 --> 00:44:15,830
know when<font color="#CCCCCC"> for mobility</font><font color="#E5E5E5"> and job</font>

1251
00:44:13,880 --> 00:44:18,530
and you can easily<font color="#CCCCCC"> patch up</font><font color="#E5E5E5"> your systems</font>

1252
00:44:15,830 --> 00:44:19,790
<font color="#CCCCCC">I finally share this is the most</font>

1253
00:44:18,530 --> 00:44:21,410
important<font color="#E5E5E5"> thing this was mentioned</font>

1254
00:44:19,790 --> 00:44:22,850
<font color="#CCCCCC">during the keynote as well share your</font>

1255
00:44:21,410 --> 00:44:25,069
experience if you're doing something

1256
00:44:22,850 --> 00:44:26,990
<font color="#CCCCCC">security wise</font><font color="#E5E5E5"> talk about it there's</font>

1257
00:44:25,070 --> 00:44:28,940
plenty<font color="#CCCCCC"> of</font><font color="#E5E5E5"> local meetups they're always</font>

1258
00:44:26,990 --> 00:44:30,169
<font color="#E5E5E5">looking for</font><font color="#CCCCCC"> speakers go there and tell</font>

1259
00:44:28,940 --> 00:44:32,270
<font color="#E5E5E5">the other people</font><font color="#CCCCCC"> this is how we did</font>

1260
00:44:30,170 --> 00:44:34,250
<font color="#E5E5E5">security at whatever company in your kit</font>

1261
00:44:32,270 --> 00:44:36,230
<font color="#E5E5E5">but</font><font color="#CCCCCC"> this will inspire</font><font color="#E5E5E5"> others to</font><font color="#CCCCCC"> do the</font>

1262
00:44:34,250 --> 00:44:37,640
same<font color="#E5E5E5"> and this</font><font color="#CCCCCC"> will ask Prague discussion</font>

1263
00:44:36,230 --> 00:44:39,920
and this<font color="#E5E5E5"> will essentially raise</font>

1264
00:44:37,640 --> 00:44:42,830
awareness and<font color="#E5E5E5"> hopefully help us achieve</font>

1265
00:44:39,920 --> 00:44:47,660
a<font color="#E5E5E5"> better and a more secure grip that's</font>

1266
00:44:42,830 --> 00:44:49,009
it for me<font color="#E5E5E5"> you can okay</font><font color="#CCCCCC"> it's not on my</font>

1267
00:44:47,660 --> 00:44:51,230
screen but my<font color="#E5E5E5"> contact information is on</font>

1268
00:44:49,010 --> 00:44:52,610
the big screen so<font color="#CCCCCC"> you can</font><font color="#E5E5E5"> get a hold of</font>

1269
00:44:51,230 --> 00:44:56,060
me there if you have any<font color="#E5E5E5"> questions I'll</font>

1270
00:44:52,610 --> 00:44:58,550
<font color="#CCCCCC">be here the whole conference</font><font color="#E5E5E5"> so feel</font>

1271
00:44:56,060 --> 00:44:59,930
free<font color="#E5E5E5"> to grab me except when I'm going to</font>

1272
00:44:58,550 --> 00:45:01,970
<font color="#E5E5E5">the</font><font color="#CCCCCC"> bathroom but otherwise</font><font color="#E5E5E5"> there that's</font>

1273
00:44:59,930 --> 00:45:03,799
fine<font color="#CCCCCC"> and</font><font color="#E5E5E5"> you can we have some time</font><font color="#CCCCCC"> for</font>

1274
00:45:01,970 --> 00:45:06,950
questions now<font color="#CCCCCC"> I think a few minutes if</font>

1275
00:45:03,800 --> 00:45:07,760
you want<font color="#CCCCCC"> to stand in</font><font color="#E5E5E5"> the spotlight feel</font>

1276
00:45:06,950 --> 00:45:24,970
<font color="#E5E5E5">free to do so</font>

1277
00:45:07,760 --> 00:45:24,970
thank you<font color="#E5E5E5"> I don't</font><font color="#CCCCCC"> blame you so it's</font><font color="#E5E5E5"> okay</font>

1278
00:45:26,530 --> 00:45:29,480
just<font color="#E5E5E5"> a question about cross-site</font><font color="#CCCCCC"> request</font>

1279
00:45:28,670 --> 00:45:31,070
forgery

1280
00:45:29,480 --> 00:45:34,310
<font color="#E5E5E5">what about login cross-site request</font>

1281
00:45:31,070 --> 00:45:36,050
forgeries<font color="#CCCCCC"> and similar other</font><font color="#E5E5E5"> kind that</font>

1282
00:45:34,310 --> 00:45:41,029
happened before the<font color="#E5E5E5"> user authenticates</font>

1283
00:45:36,050 --> 00:45:44,300
<font color="#CCCCCC">can Angora protect against</font><font color="#E5E5E5"> those yes</font><font color="#CCCCCC"> so</font>

1284
00:45:41,030 --> 00:45:46,280
<font color="#E5E5E5">log</font><font color="#CCCCCC"> in</font><font color="#E5E5E5"> see surf is is a very specific</font>

1285
00:45:44,300 --> 00:45:49,100
<font color="#E5E5E5">kind of attack where instead</font><font color="#CCCCCC"> of 14</font>

1286
00:45:46,280 --> 00:45:52,280
requests using the users credentials

1287
00:45:49,100 --> 00:45:54,049
you're essentially faking sending a

1288
00:45:52,280 --> 00:45:55,520
request<font color="#E5E5E5"> to</font><font color="#CCCCCC"> log in endpoint using the</font>

1289
00:45:54,050 --> 00:45:57,440
attackers username and password for

1290
00:45:55,520 --> 00:45:59,990
example<font color="#E5E5E5"> so the goal is to log the user</font>

1291
00:45:57,440 --> 00:46:02,270
<font color="#E5E5E5">in as the attacker which seems weird</font><font color="#CCCCCC"> but</font>

1292
00:45:59,990 --> 00:46:04,100
if your application stores data on what

1293
00:46:02,270 --> 00:46:05,509
the<font color="#E5E5E5"> user does then the data is actually</font>

1294
00:46:04,100 --> 00:46:07,810
stored with<font color="#E5E5E5"> the attacker and that's just</font>

1295
00:46:05,510 --> 00:46:10,160
one example there<font color="#CCCCCC"> a</font><font color="#E5E5E5"> few others</font><font color="#CCCCCC"> the</font>

1296
00:46:07,810 --> 00:46:13,120
<font color="#CCCCCC">protection mechanism is the</font><font color="#E5E5E5"> same yes so</font>

1297
00:46:10,160 --> 00:46:15,049
if you have the token present

1298
00:46:13,120 --> 00:46:17,540
transparent token defense works very

1299
00:46:15,050 --> 00:46:19,700
well in that<font color="#CCCCCC"> scenario as also the</font>

1300
00:46:17,540 --> 00:46:22,100
<font color="#CCCCCC">backend should again check when the user</font>

1301
00:46:19,700 --> 00:46:23,870
logs in do you I<font color="#CCCCCC"> have this cookie set</font>

1302
00:46:22,100 --> 00:46:25,730
and<font color="#E5E5E5"> do I</font><font color="#CCCCCC"> have the same cookie value in</font>

1303
00:46:23,870 --> 00:46:27,650
the header then I'm sure<font color="#E5E5E5"> that</font><font color="#CCCCCC"> this</font><font color="#E5E5E5"> can</font>

1304
00:46:25,730 --> 00:46:29,510
<font color="#E5E5E5">only come</font><font color="#CCCCCC"> from my own</font><font color="#E5E5E5"> angular</font>

1305
00:46:27,650 --> 00:46:31,010
<font color="#CCCCCC">it's called otherwise it can come from</font>

1306
00:46:29,510 --> 00:46:34,430
<font color="#E5E5E5">anywhere</font><font color="#CCCCCC"> and I should probably ignore it</font>

1307
00:46:31,010 --> 00:46:36,230
and the same<font color="#E5E5E5"> holds</font><font color="#CCCCCC"> for</font><font color="#E5E5E5"> the logout</font>

1308
00:46:34,430 --> 00:46:37,940
<font color="#E5E5E5">endpoints this is something that</font><font color="#CCCCCC"> a</font><font color="#E5E5E5"> lot</font>

1309
00:46:36,230 --> 00:46:40,400
of people overlook<font color="#E5E5E5"> ritzy serve so you</font>

1310
00:46:37,940 --> 00:46:41,660
<font color="#CCCCCC">can easily log out users by simply</font>

1311
00:46:40,400 --> 00:46:43,520
making<font color="#E5E5E5"> a get request</font><font color="#CCCCCC"> to</font><font color="#E5E5E5"> little</font><font color="#CCCCCC"> guard</font>

1312
00:46:41,660 --> 00:46:46,430
endpoint because<font color="#E5E5E5"> that's often</font>

1313
00:46:43,520 --> 00:46:54,259
unprotected as well that's<font color="#CCCCCC"> some free</font>

1314
00:46:46,430 --> 00:47:00,950
<font color="#CCCCCC">adviser anybody else yeah let's make a</font>

1315
00:46:54,260 --> 00:47:03,830
<font color="#E5E5E5">run a bit it's not just a question</font><font color="#CCCCCC"> v3</font>

1316
00:47:00,950 --> 00:47:06,680
<font color="#E5E5E5">marker so I think jvitous can not be</font>

1317
00:47:03,830 --> 00:47:09,860
<font color="#E5E5E5">used for sessions</font><font color="#CCCCCC"> because you can't</font>

1318
00:47:06,680 --> 00:47:13,370
invalidate them or<font color="#CCCCCC"> just can be used</font>

1319
00:47:09,860 --> 00:47:16,540
easily<font color="#CCCCCC"> low</font><font color="#E5E5E5"> expiry time and I think it</font>

1320
00:47:13,370 --> 00:47:18,710
should be<font color="#CCCCCC"> mentioned in these kind of</font>

1321
00:47:16,540 --> 00:47:22,880
presentations or<font color="#CCCCCC"> a mango application</font>

1322
00:47:18,710 --> 00:47:25,940
yeah issue<font color="#CCCCCC"> so you're opening a can of</font>

1323
00:47:22,880 --> 00:47:28,640
<font color="#CCCCCC">worms there yes</font><font color="#E5E5E5"> one</font><font color="#CCCCCC"> of the one of</font><font color="#E5E5E5"> the</font>

1324
00:47:25,940 --> 00:47:31,870
<font color="#E5E5E5">comments on jobs is that</font><font color="#CCCCCC"> you can't</font>

1325
00:47:28,640 --> 00:47:34,819
revoke them yes you can't revoke them

1326
00:47:31,870 --> 00:47:37,339
are you saying you can or you cannot no

1327
00:47:34,820 --> 00:47:38,660
you<font color="#CCCCCC"> can not all very very</font><font color="#E5E5E5"> hardly there</font>

1328
00:47:37,340 --> 00:47:41,330
are there<font color="#CCCCCC"> are ways to do this yes this</font>

1329
00:47:38,660 --> 00:47:43,279
is this<font color="#E5E5E5"> is a common discussion it's not</font>

1330
00:47:41,330 --> 00:47:45,529
limited<font color="#E5E5E5"> to job tokens it's all</font>

1331
00:47:43,280 --> 00:47:47,540
<font color="#CCCCCC">client-side session data</font><font color="#E5E5E5"> essentially if</font>

1332
00:47:45,530 --> 00:47:49,430
you use your<font color="#E5E5E5"> own custom data in a cookie</font>

1333
00:47:47,540 --> 00:47:50,870
<font color="#CCCCCC">you have</font><font color="#E5E5E5"> the same problem so one of the</font>

1334
00:47:49,430 --> 00:47:52,430
issues<font color="#CCCCCC"> there is</font><font color="#E5E5E5"> it's hard with</font>

1335
00:47:50,870 --> 00:47:54,020
server-side sessions revoking a session

1336
00:47:52,430 --> 00:47:55,490
if something goes wrong is as simple as

1337
00:47:54,020 --> 00:47:56,750
deleting the server-side session<font color="#CCCCCC"> object</font>

1338
00:47:55,490 --> 00:47:58,040
and it's gone

1339
00:47:56,750 --> 00:47:59,360
so whenever the user comes back<font color="#E5E5E5"> with</font>

1340
00:47:58,040 --> 00:48:01,580
<font color="#E5E5E5">that session the</font><font color="#CCCCCC"> server's I don't know</font>

1341
00:47:59,360 --> 00:48:02,540
who you are<font color="#E5E5E5"> please log in again the Chop</font>

1342
00:48:01,580 --> 00:48:05,029
<font color="#E5E5E5">focus</font><font color="#CCCCCC"> this</font><font color="#E5E5E5"> is a lot more</font><font color="#CCCCCC"> difficult</font>

1343
00:48:02,540 --> 00:48:06,950
<font color="#CCCCCC">because</font><font color="#E5E5E5"> the</font><font color="#CCCCCC"> thing lives on the client</font>

1344
00:48:05,030 --> 00:48:08,090
<font color="#E5E5E5">and if you want to revoke this I don't</font>

1345
00:48:06,950 --> 00:48:10,939
know first of<font color="#E5E5E5"> all I don't know how</font><font color="#CCCCCC"> many</font>

1346
00:48:08,090 --> 00:48:12,080
<font color="#E5E5E5">tokens is given out so whenever a token</font>

1347
00:48:10,940 --> 00:48:15,200
comes back I don't<font color="#E5E5E5"> know whether it's</font>

1348
00:48:12,080 --> 00:48:17,450
<font color="#E5E5E5">still valid or not so one of the ways</font>

1349
00:48:15,200 --> 00:48:19,310
<font color="#CCCCCC">that people</font><font color="#E5E5E5"> recommend doing this this</font><font color="#CCCCCC"> is</font>

1350
00:48:17,450 --> 00:48:21,109
like a heated<font color="#CCCCCC"> debate between the pros</font>

1351
00:48:19,310 --> 00:48:23,210
<font color="#E5E5E5">client-side sessions in the entire</font>

1352
00:48:21,110 --> 00:48:25,280
<font color="#E5E5E5">client-side sessions team one of</font><font color="#CCCCCC"> the</font>

1353
00:48:23,210 --> 00:48:26,840
ways is to<font color="#E5E5E5"> keep a list of all</font><font color="#CCCCCC"> the</font>

1354
00:48:25,280 --> 00:48:28,850
<font color="#E5E5E5">identifiers of the job that</font><font color="#CCCCCC"> you've given</font>

1355
00:48:26,840 --> 00:48:30,830
<font color="#E5E5E5">out</font><font color="#CCCCCC"> I keep a black</font><font color="#E5E5E5"> list as well and then</font>

1356
00:48:28,850 --> 00:48:32,779
<font color="#E5E5E5">you</font><font color="#CCCCCC"> can start blacklisting tokens of</font>

1357
00:48:30,830 --> 00:48:35,060
<font color="#CCCCCC">course the whole client-side session</font>

1358
00:48:32,780 --> 00:48:36,800
thing fits in the in the in<font color="#CCCCCC"> the</font>

1359
00:48:35,060 --> 00:48:37,940
stateless<font color="#CCCCCC"> API architecture but of</font><font color="#E5E5E5"> course</font>

1360
00:48:36,800 --> 00:48:39,410
if you<font color="#E5E5E5"> have a black list you don't have</font>

1361
00:48:37,940 --> 00:48:40,580
a<font color="#E5E5E5"> stateless API in Marcos on every</font>

1362
00:48:39,410 --> 00:48:41,149
request you need to check your<font color="#CCCCCC"> black</font>

1363
00:48:40,580 --> 00:48:42,769
<font color="#CCCCCC">list</font>

1364
00:48:41,150 --> 00:48:45,259
still valid<font color="#CCCCCC"> oh yes okay this and then</font>

1365
00:48:42,769 --> 00:48:47,689
you can<font color="#E5E5E5"> perform</font><font color="#CCCCCC"> the</font><font color="#E5E5E5"> request</font><font color="#CCCCCC"> so you start</font>

1366
00:48:45,259 --> 00:48:49,849
introducing some<font color="#E5E5E5"> state</font><font color="#CCCCCC"> hair again</font><font color="#E5E5E5"> so yes</font>

1367
00:48:47,690 --> 00:48:51,589
<font color="#E5E5E5">that</font><font color="#CCCCCC"> is</font><font color="#E5E5E5"> indeed one of the common</font>

1368
00:48:49,849 --> 00:48:53,650
problems<font color="#CCCCCC"> there</font><font color="#E5E5E5"> are ways</font><font color="#CCCCCC"> to address that</font>

1369
00:48:51,589 --> 00:48:56,180
<font color="#E5E5E5">but they're not pretty</font>

1370
00:48:53,650 --> 00:48:59,599
yeah<font color="#E5E5E5"> thanks thanks</font><font color="#CCCCCC"> for the remark</font><font color="#E5E5E5"> um</font><font color="#CCCCCC"> I</font>

1371
00:48:56,180 --> 00:49:05,529
only had 45<font color="#CCCCCC"> minutes so I had to cut a</font>

1372
00:48:59,599 --> 00:49:10,450
bit in what I<font color="#CCCCCC"> went into anybody else</font>

1373
00:49:05,529 --> 00:49:10,450
okay thank you<font color="#E5E5E5"> very much don't forget</font>

1374
00:49:10,539 --> 00:49:15,170
thank you okay<font color="#E5E5E5"> if you have anything</font><font color="#CCCCCC"> else</font>

1375
00:49:13,460 --> 00:49:18,410
I'm still here so feel<font color="#E5E5E5"> free to come up</font>

1376
00:49:15,170 --> 00:49:20,650
and we can talk<font color="#E5E5E5"> about that enjoy the</font>

1377
00:49:18,410 --> 00:49:20,649
conference

1378
00:49:20,920 --> 00:49:24,689
[Applause]

