1
00:00:03,250 --> 00:00:12,289
how did everybody<font color="#CCCCCC"> alright alright</font><font color="#E5E5E5"> we've</font>

2
00:00:08,599 --> 00:00:19,730
<font color="#E5E5E5">got two minutes</font><font color="#CCCCCC"> sorry</font><font color="#E5E5E5"> do it alright well</font>

3
00:00:12,289 --> 00:00:22,070
<font color="#E5E5E5">having two minutes well</font><font color="#CCCCCC"> we'll</font><font color="#E5E5E5"> split the</font>

4
00:00:19,730 --> 00:00:27,279
difference<font color="#E5E5E5"> will do</font><font color="#CCCCCC"> 26 cuz we got we had</font>

5
00:00:22,070 --> 00:00:30,789
50 slides<font color="#E5E5E5"> a lot of demos</font><font color="#CCCCCC"> alright and</font>

6
00:00:27,279 --> 00:00:32,390
there's a greater<font color="#E5E5E5"> than usual chance that</font>

7
00:00:30,789 --> 00:00:35,059
everyone in the<font color="#E5E5E5"> audience is not</font>

8
00:00:32,390 --> 00:00:37,399
necessarily a native English speaker<font color="#CCCCCC"> and</font>

9
00:00:35,059 --> 00:00:40,789
I have a tendency<font color="#CCCCCC"> to speak far too</font><font color="#E5E5E5"> fast</font>

10
00:00:37,399 --> 00:00:42,649
anyway<font color="#CCCCCC"> so we'll do a bus alright</font>

11
00:00:40,789 --> 00:00:43,160
<font color="#E5E5E5">actually I think I will we'll get</font>

12
00:00:42,649 --> 00:00:47,840
started

13
00:00:43,160 --> 00:00:50,569
howdy everybody<font color="#CCCCCC"> alright today I'm going</font>

14
00:00:47,840 --> 00:00:53,809
<font color="#E5E5E5">to talk</font><font color="#CCCCCC"> about application attack surface</font>

15
00:00:50,570 --> 00:00:56,899
and some things<font color="#E5E5E5"> that we've been doing to</font>

16
00:00:53,809 --> 00:00:58,910
<font color="#CCCCCC">use</font><font color="#E5E5E5"> calculating attack surface and more</font>

17
00:00:56,899 --> 00:01:01,129
specifically watching attack surface

18
00:00:58,910 --> 00:01:04,729
change over time that helps us integrate

19
00:01:01,129 --> 00:01:08,450
<font color="#E5E5E5">application security testing into</font><font color="#CCCCCC"> CI</font><font color="#E5E5E5"> CD</font>

20
00:01:04,730 --> 00:01:10,189
pipelines<font color="#CCCCCC"> so I'll</font><font color="#E5E5E5"> provide a little bit</font>

21
00:01:08,450 --> 00:01:12,500
of background<font color="#E5E5E5"> I'll talk about the</font>

22
00:01:10,189 --> 00:01:15,770
importance of attack surface talk about

23
00:01:12,500 --> 00:01:17,150
how attack surface<font color="#CCCCCC"> is relevant to the</font>

24
00:01:15,770 --> 00:01:19,070
<font color="#CCCCCC">things that organizations are trying to</font>

25
00:01:17,150 --> 00:01:21,229
do<font color="#CCCCCC"> with</font><font color="#E5E5E5"> DevOps</font><font color="#CCCCCC"> and then talk about this</font>

26
00:01:19,070 --> 00:01:24,500
hybrid<font color="#E5E5E5"> analysis mapping technology that</font>

27
00:01:21,229 --> 00:01:26,840
we have developed<font color="#E5E5E5"> and</font><font color="#CCCCCC"> some of the</font>

28
00:01:24,500 --> 00:01:29,509
history<font color="#CCCCCC"> behind that</font><font color="#E5E5E5"> we've got some extra</font>

29
00:01:26,840 --> 00:01:31,159
slides in the deck<font color="#CCCCCC"> that show you</font><font color="#E5E5E5"> how to</font>

30
00:01:29,509 --> 00:01:32,540
install I have links to<font color="#CCCCCC"> different things</font>

31
00:01:31,159 --> 00:01:34,159
<font color="#E5E5E5">and show you how to do insults what will</font>

32
00:01:32,540 --> 00:01:36,350
<font color="#E5E5E5">probably scoot over a lot of</font><font color="#CCCCCC"> the</font>

33
00:01:34,159 --> 00:01:38,450
<font color="#CCCCCC">installed discussion stuff just because</font>

34
00:01:36,350 --> 00:01:39,890
it's<font color="#E5E5E5"> we are short on</font><font color="#CCCCCC"> time and that</font><font color="#E5E5E5"> those</font>

35
00:01:38,450 --> 00:01:41,479
<font color="#E5E5E5">are mainly in there for folks</font><font color="#CCCCCC"> want</font><font color="#E5E5E5"> to</font>

36
00:01:39,890 --> 00:01:42,950
replicate<font color="#E5E5E5"> what I'm doing and then</font><font color="#CCCCCC"> we'll</font>

37
00:01:41,479 --> 00:01:46,640
talk<font color="#E5E5E5"> through a</font><font color="#CCCCCC"> number of use cases that</font>

38
00:01:42,950 --> 00:01:49,250
<font color="#E5E5E5">we have developed</font><font color="#CCCCCC"> that we use or</font><font color="#E5E5E5"> they</font>

39
00:01:46,640 --> 00:01:53,149
were using<font color="#E5E5E5"> this technology in these</font>

40
00:01:49,250 --> 00:01:54,409
techniques<font color="#E5E5E5"> for my background</font><font color="#CCCCCC"> is I'm a</font>

41
00:01:53,149 --> 00:01:56,509
software<font color="#CCCCCC"> developer by background</font>

42
00:01:54,409 --> 00:01:58,460
original<font color="#CCCCCC"> a lot originally a lot of early</font>

43
00:01:56,509 --> 00:02:00,770
<font color="#E5E5E5">server-side Java in</font><font color="#CCCCCC"> the mid to late 90s</font>

44
00:01:58,460 --> 00:02:02,839
early 2000s that<font color="#E5E5E5"> it's an early not</font>

45
00:02:00,770 --> 00:02:04,969
<font color="#CCCCCC">network but really what I've done for</font>

46
00:02:02,840 --> 00:02:07,640
<font color="#CCCCCC">the last you know 10 or 15 years of my</font>

47
00:02:04,969 --> 00:02:10,389
<font color="#CCCCCC">career is worked with organizations on</font>

48
00:02:07,640 --> 00:02:12,470
<font color="#CCCCCC">how the software that they're</font><font color="#E5E5E5"> developing</font>

49
00:02:10,389 --> 00:02:14,660
impact the<font color="#E5E5E5"> security of their</font>

50
00:02:12,470 --> 00:02:15,080
organizations<font color="#E5E5E5"> and so my background is as</font>

51
00:02:14,660 --> 00:02:16,880
a

52
00:02:15,080 --> 00:02:19,670
<font color="#E5E5E5">for developer that has come into the</font>

53
00:02:16,880 --> 00:02:21,890
<font color="#CCCCCC">world of</font><font color="#E5E5E5"> security</font><font color="#CCCCCC"> and as distinct from</font>

54
00:02:19,670 --> 00:02:23,869
other<font color="#E5E5E5"> folks who may or may be identity</font>

55
00:02:21,890 --> 00:02:25,760
application<font color="#E5E5E5"> security space coming</font><font color="#CCCCCC"> from a</font>

56
00:02:23,870 --> 00:02:28,450
network penetration testing background

57
00:02:25,760 --> 00:02:32,030
<font color="#E5E5E5">so I'm a developers focused on security</font>

58
00:02:28,450 --> 00:02:33,920
and<font color="#E5E5E5"> that shapes the way that I approach</font>

59
00:02:32,030 --> 00:02:35,360
some of these issues and I help run<font color="#E5E5E5"> the</font>

60
00:02:33,920 --> 00:02:38,329
<font color="#CCCCCC">o</font><font color="#E5E5E5"> op San Antonio chapter with a couple</font>

61
00:02:35,360 --> 00:02:42,140
<font color="#E5E5E5">of other folks</font><font color="#CCCCCC"> is everybody here</font>

62
00:02:38,330 --> 00:02:43,820
familiar<font color="#E5E5E5"> with</font><font color="#CCCCCC"> OSF yes</font><font color="#E5E5E5"> that's good</font>

63
00:02:42,140 --> 00:02:46,850
we'll be doing some examples with OAuth

64
00:02:43,820 --> 00:02:48,950
<font color="#E5E5E5">zap fantastic tool and it's great to you</font>

65
00:02:46,850 --> 00:02:50,510
<font color="#E5E5E5">know it is great with this API</font><font color="#CCCCCC"> and with</font>

66
00:02:48,950 --> 00:02:53,089
its flexibility it's a really valuable

67
00:02:50,510 --> 00:02:55,359
<font color="#E5E5E5">tool</font><font color="#CCCCCC"> to integrate</font><font color="#E5E5E5"> into different DevOps</font>

68
00:02:53,090 --> 00:02:57,620
<font color="#E5E5E5">apps app security testing activities</font>

69
00:02:55,360 --> 00:03:01,010
again I've<font color="#CCCCCC"> got</font><font color="#E5E5E5"> some example code bases</font>

70
00:02:57,620 --> 00:03:02,750
<font color="#CCCCCC">we've got links</font><font color="#E5E5E5"> to downloads so and so</font>

71
00:03:01,010 --> 00:03:06,500
forth so if you want<font color="#E5E5E5"> to all these slides</font>

72
00:03:02,750 --> 00:03:07,490
<font color="#E5E5E5">are online so you'll be able to if you</font>

73
00:03:06,500 --> 00:03:08,840
want<font color="#E5E5E5"> to play around with this</font><font color="#CCCCCC"> stuff you</font>

74
00:03:07,490 --> 00:03:12,260
<font color="#CCCCCC">can do all that too through out</font><font color="#E5E5E5"> of those</font>

75
00:03:08,840 --> 00:03:14,570
links<font color="#E5E5E5"> so let's look at</font><font color="#CCCCCC"> a tax surface</font><font color="#E5E5E5"> and</font>

76
00:03:12,260 --> 00:03:17,090
what do we<font color="#CCCCCC"> mean</font><font color="#E5E5E5"> by a tax service when I</font>

77
00:03:14,570 --> 00:03:18,799
<font color="#E5E5E5">talk about an applications attack</font>

78
00:03:17,090 --> 00:03:21,170
surface what I'm really saying<font color="#E5E5E5"> is this</font>

79
00:03:18,800 --> 00:03:23,390
is this is<font color="#E5E5E5"> the set or the list of all</font>

80
00:03:21,170 --> 00:03:25,488
<font color="#E5E5E5">the different</font><font color="#CCCCCC"> ways that an attacker can</font>

81
00:03:23,390 --> 00:03:27,619
reach out and<font color="#CCCCCC"> touch</font><font color="#E5E5E5"> your piece of</font>

82
00:03:25,489 --> 00:03:30,170
<font color="#E5E5E5">software such as they can influence its</font>

83
00:03:27,620 --> 00:03:32,510
behavior<font color="#CCCCCC"> because that's</font><font color="#E5E5E5"> going</font><font color="#CCCCCC"> to</font><font color="#E5E5E5"> be the</font>

84
00:03:30,170 --> 00:03:35,480
set<font color="#CCCCCC"> of things that</font><font color="#E5E5E5"> they</font><font color="#CCCCCC"> can try to</font>

85
00:03:32,510 --> 00:03:37,519
manipulate<font color="#E5E5E5"> in order to gain some</font><font color="#CCCCCC"> sort</font><font color="#E5E5E5"> of</font>

86
00:03:35,480 --> 00:03:39,019
advantage<font color="#E5E5E5"> when you think of a web</font>

87
00:03:37,520 --> 00:03:41,480
<font color="#CCCCCC">application</font><font color="#E5E5E5"> really what we're talking</font>

88
00:03:39,020 --> 00:03:44,390
<font color="#CCCCCC">about from a web application is anything</font>

89
00:03:41,480 --> 00:03:46,670
in<font color="#E5E5E5"> the HTTP request</font><font color="#CCCCCC"> so the URL</font><font color="#E5E5E5"> the</font>

90
00:03:44,390 --> 00:03:48,290
parameters the<font color="#CCCCCC"> web method your headers</font>

91
00:03:46,670 --> 00:03:52,399
cookies and things<font color="#E5E5E5"> of that</font><font color="#CCCCCC"> nature</font>

92
00:03:48,290 --> 00:03:54,769
<font color="#CCCCCC">you'll from up in theory your web</font>

93
00:03:52,400 --> 00:03:56,090
application also<font color="#CCCCCC"> has a</font><font color="#E5E5E5"> tax surface and</font>

94
00:03:54,770 --> 00:03:57,470
then<font color="#E5E5E5"> it may be pulling environment</font>

95
00:03:56,090 --> 00:03:59,930
variables<font color="#CCCCCC"> in from the</font><font color="#E5E5E5"> servers that it's</font>

96
00:03:57,470 --> 00:04:01,609
on but if you if that's where you're

97
00:03:59,930 --> 00:04:02,989
<font color="#CCCCCC">being attacked</font><font color="#E5E5E5"> from you don't really</font>

98
00:04:01,610 --> 00:04:04,430
<font color="#E5E5E5">have an application security concern you</font>

99
00:04:02,989 --> 00:04:06,110
need an incident response<font color="#E5E5E5"> center to help</font>

100
00:04:04,430 --> 00:04:08,120
you<font color="#CCCCCC"> write so when we think of an</font>

101
00:04:06,110 --> 00:04:10,040
application attack surface from a web

102
00:04:08,120 --> 00:04:12,680
app standpoint we're looking at all of

103
00:04:10,040 --> 00:04:14,239
<font color="#E5E5E5">the ways in the HTTP</font><font color="#CCCCCC"> request that the</font>

104
00:04:12,680 --> 00:04:16,579
attacker can influence the behavior of

105
00:04:14,239 --> 00:04:18,798
<font color="#E5E5E5">the</font><font color="#CCCCCC"> application if you</font><font color="#E5E5E5"> extend that</font>

106
00:04:16,579 --> 00:04:20,329
concept<font color="#E5E5E5"> of attack surface to look at</font>

107
00:04:18,798 --> 00:04:22,789
mobile<font color="#E5E5E5"> applications Internet of Things</font>

108
00:04:20,329 --> 00:04:24,320
applications<font color="#E5E5E5"> these get more complicated</font>

109
00:04:22,790 --> 00:04:25,070
because<font color="#E5E5E5"> on a mobile device you've got</font>

110
00:04:24,320 --> 00:04:28,099
you know

111
00:04:25,070 --> 00:04:29,990
mobile<font color="#E5E5E5"> device pulling in</font><font color="#CCCCCC"> yo fees</font><font color="#E5E5E5"> for the</font>

112
00:04:28,100 --> 00:04:31,610
network it<font color="#CCCCCC"> may</font><font color="#E5E5E5"> be it's receiving input</font>

113
00:04:29,990 --> 00:04:33,110
from<font color="#E5E5E5"> the user</font><font color="#CCCCCC"> you're talking to</font><font color="#E5E5E5"> web</font>

114
00:04:31,610 --> 00:04:34,370
<font color="#E5E5E5">services</font><font color="#CCCCCC"> things</font><font color="#E5E5E5"> of that nature same</font>

115
00:04:33,110 --> 00:04:36,490
thing with Internet of Things and<font color="#E5E5E5"> so</font>

116
00:04:34,370 --> 00:04:38,690
today we're going to be focused on

117
00:04:36,490 --> 00:04:40,330
<font color="#E5E5E5">attack surface as it relates to web</font>

118
00:04:38,690 --> 00:04:42,770
applications<font color="#CCCCCC"> but I do think that</font>

119
00:04:40,330 --> 00:04:44,240
extending that or you'll continue to

120
00:04:42,770 --> 00:04:46,520
<font color="#E5E5E5">have questions</font><font color="#CCCCCC"> about attack surface</font>

121
00:04:44,240 --> 00:04:49,670
across additional types of applications

122
00:04:46,520 --> 00:04:51,650
is<font color="#CCCCCC"> really</font><font color="#E5E5E5"> though and what we're going to</font>

123
00:04:49,670 --> 00:04:54,770
look<font color="#E5E5E5"> at using attack surface to do is to</font>

124
00:04:51,650 --> 00:04:55,969
help us<font color="#E5E5E5"> target in this case dynamic</font>

125
00:04:54,770 --> 00:04:58,190
testing so we're<font color="#E5E5E5"> going to look at how</font>

126
00:04:55,970 --> 00:05:00,230
can<font color="#E5E5E5"> we use the concept of attack surface</font>

127
00:04:58,190 --> 00:05:02,390
to target automated dynamic application

128
00:05:00,230 --> 00:05:03,830
security testing and how can we also use

129
00:05:02,390 --> 00:05:06,050
the concept of attack surface to

130
00:05:03,830 --> 00:05:07,669
understand or to<font color="#E5E5E5"> target what we're doing</font>

131
00:05:06,050 --> 00:05:10,820
in the manual assessment or manual

132
00:05:07,670 --> 00:05:12,170
penetration testing so what does attack

133
00:05:10,820 --> 00:05:14,150
service<font color="#E5E5E5"> have to do with DevOps</font>

134
00:05:12,170 --> 00:05:15,560
if you want your talk to be<font color="#E5E5E5"> accepted</font>

135
00:05:14,150 --> 00:05:18,229
<font color="#E5E5E5">OAuth these days I</font><font color="#CCCCCC"> think it has to have</font>

136
00:05:15,560 --> 00:05:19,660
DevOps in the title<font color="#CCCCCC"> jim Monaco's make</font><font color="#E5E5E5"> in</font>

137
00:05:18,230 --> 00:05:23,000
front<font color="#CCCCCC"> of me had a previous presentation</font>

138
00:05:19,660 --> 00:05:25,730
<font color="#CCCCCC">that that may or</font><font color="#E5E5E5"> may not be</font><font color="#CCCCCC"> true</font><font color="#E5E5E5"> but</font>

139
00:05:23,000 --> 00:05:27,710
<font color="#E5E5E5">what we've been able</font><font color="#CCCCCC"> to do is to use the</font>

140
00:05:25,730 --> 00:05:30,410
concept<font color="#CCCCCC"> of attack surface to</font><font color="#E5E5E5"> help us get</font>

141
00:05:27,710 --> 00:05:31,880
really<font color="#E5E5E5"> focused in what we're</font><font color="#CCCCCC"> doing when</font>

142
00:05:30,410 --> 00:05:33,800
we're doing<font color="#E5E5E5"> some app security testing in</font>

143
00:05:31,880 --> 00:05:36,380
a DevOps pipeline and<font color="#E5E5E5"> so let's look at</font>

144
00:05:33,800 --> 00:05:38,420
what we want from security in a DevOps

145
00:05:36,380 --> 00:05:40,280
pipeline<font color="#CCCCCC"> again the you know at the</font>

146
00:05:38,420 --> 00:05:43,280
Netflix<font color="#CCCCCC"> do an</font><font color="#E5E5E5"> amazing</font><font color="#CCCCCC"> things with</font>

147
00:05:40,280 --> 00:05:44,960
security<font color="#CCCCCC"> and DevOps</font><font color="#E5E5E5"> and there's links</font>

148
00:05:43,280 --> 00:05:47,690
here<font color="#CCCCCC"> to a blog post as well</font><font color="#E5E5E5"> as a video</font>

149
00:05:44,960 --> 00:05:49,520
<font color="#E5E5E5">from RSA this year but when when we look</font>

150
00:05:47,690 --> 00:05:52,370
at<font color="#E5E5E5"> testing application security testing</font>

151
00:05:49,520 --> 00:05:53,990
as<font color="#CCCCCC"> part of a devops pipeline we look at</font>

152
00:05:52,370 --> 00:05:55,400
that in three phases<font color="#E5E5E5"> the first of the</font>

153
00:05:53,990 --> 00:05:58,430
testing phase we're going to do some

154
00:05:55,400 --> 00:05:59,989
sort of<font color="#E5E5E5"> testing activities to determine</font>

155
00:05:58,430 --> 00:06:03,380
<font color="#CCCCCC">you know what can I learn about the</font>

156
00:05:59,990 --> 00:06:04,850
security state of this software you<font color="#CCCCCC"> know</font>

157
00:06:03,380 --> 00:06:07,040
for<font color="#E5E5E5"> this given</font><font color="#CCCCCC"> build that</font><font color="#E5E5E5"> we've got</font>

158
00:06:04,850 --> 00:06:08,780
right<font color="#CCCCCC"> now</font><font color="#E5E5E5"> and one of the things that we</font>

159
00:06:07,040 --> 00:06:11,210
found is a lot of application security

160
00:06:08,780 --> 00:06:13,429
testing tools and techniques<font color="#E5E5E5"> don't lend</font>

161
00:06:11,210 --> 00:06:16,969
<font color="#CCCCCC">themselves well to being put out of the</font>

162
00:06:13,430 --> 00:06:18,740
box<font color="#E5E5E5"> into a CI CD pipeline because they</font>

163
00:06:16,970 --> 00:06:19,940
run too<font color="#CCCCCC"> long you know when the</font>

164
00:06:18,740 --> 00:06:23,540
organizations that we<font color="#CCCCCC"> work with</font>

165
00:06:19,940 --> 00:06:26,750
anecdotally what we've seen is you know

166
00:06:23,540 --> 00:06:29,240
security<font color="#CCCCCC"> typically gets a budget</font><font color="#E5E5E5"> for a</font>

167
00:06:26,750 --> 00:06:30,590
given run of the pipeline<font color="#CCCCCC"> of about</font><font color="#E5E5E5"> 8 to</font>

168
00:06:29,240 --> 00:06:32,720
<font color="#E5E5E5">12</font><font color="#CCCCCC"> minutes that's kind of</font><font color="#E5E5E5"> what we've</font>

169
00:06:30,590 --> 00:06:34,159
<font color="#CCCCCC">seen as a bounds</font><font color="#E5E5E5"> if security is going to</font>

170
00:06:32,720 --> 00:06:35,810
weigh<font color="#CCCCCC"> in on the</font><font color="#E5E5E5"> decision about whether</font>

171
00:06:34,160 --> 00:06:37,700
or<font color="#CCCCCC"> not</font><font color="#E5E5E5"> to break the build they get about</font>

172
00:06:35,810 --> 00:06:39,560
8 to 12<font color="#CCCCCC"> minutes to do that and so</font>

173
00:06:37,700 --> 00:06:41,840
you can't feel free to<font color="#E5E5E5"> given</font><font color="#CCCCCC"> build you</font>

174
00:06:39,560 --> 00:06:43,460
<font color="#E5E5E5">can</font><font color="#CCCCCC"> say cool let's kick off like a</font><font color="#E5E5E5"> three</font>

175
00:06:41,840 --> 00:06:45,289
<font color="#E5E5E5">hour or four to five can or a four</font><font color="#CCCCCC"> hour</font>

176
00:06:43,460 --> 00:06:47,539
apps can crawl the application<font color="#E5E5E5"> right</font>

177
00:06:45,290 --> 00:06:49,180
you're not as security you're not going

178
00:06:47,540 --> 00:06:52,700
to be allowed to introduce<font color="#E5E5E5"> those</font>

179
00:06:49,180 --> 00:06:54,800
synchronously<font color="#E5E5E5"> into a pipeline you know</font>

180
00:06:52,700 --> 00:06:56,840
certainly there<font color="#CCCCCC"> is value</font><font color="#E5E5E5"> in doing those</font>

181
00:06:54,800 --> 00:06:58,550
testing activities<font color="#E5E5E5"> but those have</font><font color="#CCCCCC"> to</font><font color="#E5E5E5"> be</font>

182
00:06:56,840 --> 00:06:59,630
handed<font color="#CCCCCC"> in</font><font color="#E5E5E5"> handle it in a vicar's manner</font>

183
00:06:58,550 --> 00:07:00,980
you're not going to be able<font color="#E5E5E5"> to wait to</font>

184
00:06:59,630 --> 00:07:03,110
give a<font color="#CCCCCC"> thumbs-up or a thumbs-down in a</font>

185
00:07:00,980 --> 00:07:06,200
build<font color="#E5E5E5"> based on those</font><font color="#CCCCCC"> long-running</font>

186
00:07:03,110 --> 00:07:08,180
<font color="#E5E5E5">testing activities and so when you think</font>

187
00:07:06,200 --> 00:07:10,520
<font color="#E5E5E5">of kicking off testing FF security</font>

188
00:07:08,180 --> 00:07:13,760
testing as<font color="#CCCCCC"> part of the part</font><font color="#E5E5E5"> of the</font>

189
00:07:10,520 --> 00:07:15,229
pipeline<font color="#E5E5E5"> some of those tests</font><font color="#CCCCCC"> against you</font>

190
00:07:13,760 --> 00:07:17,480
<font color="#CCCCCC">you may</font><font color="#E5E5E5"> be able</font><font color="#CCCCCC"> to wait for if you</font><font color="#E5E5E5"> get</font>

191
00:07:15,230 --> 00:07:19,340
them within<font color="#E5E5E5"> that window</font><font color="#CCCCCC"> other tests</font><font color="#E5E5E5"> you</font>

192
00:07:17,480 --> 00:07:21,080
may start those tests<font color="#E5E5E5"> but you're going</font>

193
00:07:19,340 --> 00:07:24,770
<font color="#E5E5E5">to have to handle the</font><font color="#CCCCCC"> results of that</font>

194
00:07:21,080 --> 00:07:26,210
<font color="#E5E5E5">testing out of and later on after</font><font color="#CCCCCC"> you've</font>

195
00:07:24,770 --> 00:07:28,070
done the<font color="#CCCCCC"> testing at least a testing</font><font color="#E5E5E5"> your</font>

196
00:07:26,210 --> 00:07:30,739
it will<font color="#E5E5E5"> wait for then you</font><font color="#CCCCCC"> get to make</font><font color="#E5E5E5"> a</font>

197
00:07:28,070 --> 00:07:33,440
decision<font color="#E5E5E5"> so should this bill be approved</font>

198
00:07:30,740 --> 00:07:35,060
or<font color="#CCCCCC"> not you know</font><font color="#E5E5E5"> similar</font><font color="#CCCCCC"> to if the unit</font>

199
00:07:33,440 --> 00:07:36,260
tests run and they fail we say this

200
00:07:35,060 --> 00:07:38,960
<font color="#E5E5E5">build is not acceptable if the</font>

201
00:07:36,260 --> 00:07:40,700
functional test run<font color="#E5E5E5"> but they fail</font><font color="#CCCCCC"> in</font>

202
00:07:38,960 --> 00:07:42,349
this build is<font color="#CCCCCC"> not acceptable from a</font>

203
00:07:40,700 --> 00:07:44,810
<font color="#E5E5E5">security standpoint how do you make a</font>

204
00:07:42,350 --> 00:07:48,050
determination if the build is reassemble

205
00:07:44,810 --> 00:07:49,640
and in a<font color="#E5E5E5"> perfect world security would</font><font color="#CCCCCC"> be</font>

206
00:07:48,050 --> 00:07:50,990
able<font color="#E5E5E5"> to weigh in and say we're never</font>

207
00:07:49,640 --> 00:07:53,630
going<font color="#E5E5E5"> to allow critical or high</font>

208
00:07:50,990 --> 00:07:54,650
vulnerabilities in a pipeline<font color="#E5E5E5"> build if</font>

209
00:07:53,630 --> 00:07:55,730
we find any<font color="#E5E5E5"> critical or high</font>

210
00:07:54,650 --> 00:07:56,989
vulnerability x' we're going to find

211
00:07:55,730 --> 00:07:58,310
<font color="#E5E5E5">we're</font><font color="#CCCCCC"> going us we're going</font><font color="#E5E5E5"> to fail this</font>

212
00:07:56,990 --> 00:08:00,800
<font color="#E5E5E5">build who would</font><font color="#CCCCCC"> who would</font><font color="#E5E5E5"> like</font><font color="#CCCCCC"> to be</font>

213
00:07:58,310 --> 00:08:02,030
<font color="#CCCCCC">able to do that great</font><font color="#E5E5E5"> good things</font>

214
00:08:00,800 --> 00:08:04,250
they're going<font color="#E5E5E5"> to get to do that in</font><font color="#CCCCCC"> their</font>

215
00:08:02,030 --> 00:08:06,260
organization a<font color="#E5E5E5"> test</font><font color="#CCCCCC"> area</font><font color="#E5E5E5"> because the</font>

216
00:08:04,250 --> 00:08:08,870
<font color="#E5E5E5">challenge is for most</font><font color="#CCCCCC"> application they</font>

217
00:08:06,260 --> 00:08:10,340
have legacy<font color="#E5E5E5"> code that's in there</font><font color="#CCCCCC"> right</font>

218
00:08:08,870 --> 00:08:12,290
there's probably findings<font color="#E5E5E5"> that already</font>

219
00:08:10,340 --> 00:08:14,330
<font color="#CCCCCC">exist</font><font color="#E5E5E5"> and hopefully there's a meter or a</font>

220
00:08:12,290 --> 00:08:16,190
remediation plan<font color="#CCCCCC"> in place when you're</font>

221
00:08:14,330 --> 00:08:17,659
probably not going to<font color="#E5E5E5"> get to break the</font>

222
00:08:16,190 --> 00:08:19,070
bill for three months waiting<font color="#CCCCCC"> for all</font>

223
00:08:17,660 --> 00:08:21,260
the cross-site scripting vulnerabilities

224
00:08:19,070 --> 00:08:22,849
<font color="#CCCCCC">to get sort of</font><font color="#E5E5E5"> that</font><font color="#CCCCCC"> pride</font><font color="#E5E5E5"> you don't have</font>

225
00:08:21,260 --> 00:08:24,920
<font color="#E5E5E5">that kind of political power in the</font>

226
00:08:22,850 --> 00:08:26,990
organization for most of the folks<font color="#CCCCCC"> that</font>

227
00:08:24,920 --> 00:08:29,480
we work with<font color="#E5E5E5"> so another way to</font><font color="#CCCCCC"> look</font><font color="#E5E5E5"> at</font>

228
00:08:26,990 --> 00:08:31,070
this is to say<font color="#E5E5E5"> potentially let's say our</font>

229
00:08:29,480 --> 00:08:33,470
policy<font color="#E5E5E5"> is</font><font color="#CCCCCC"> you can't introduce</font><font color="#E5E5E5"> new</font>

230
00:08:31,070 --> 00:08:35,150
critical or high vulnerabilities right

231
00:08:33,470 --> 00:08:37,849
that's politically much more tenable

232
00:08:35,150 --> 00:08:39,140
<font color="#E5E5E5">because while we agree like hey we don't</font>

233
00:08:37,849 --> 00:08:40,190
<font color="#E5E5E5">like these vulnerabilities</font><font color="#CCCCCC"> they're in</font>

234
00:08:39,140 --> 00:08:42,169
here but at least<font color="#E5E5E5"> we've got a plan to</font>

235
00:08:40,190 --> 00:08:43,490
<font color="#E5E5E5">fix them</font><font color="#CCCCCC"> go get fix down the road but</font>

236
00:08:42,169 --> 00:08:45,290
everybody<font color="#CCCCCC"> should be able</font><font color="#E5E5E5"> to</font><font color="#CCCCCC"> agree that</font>

237
00:08:43,490 --> 00:08:47,450
<font color="#E5E5E5">we shouldn't be introducing new critical</font>

238
00:08:45,290 --> 00:08:48,300
<font color="#CCCCCC">on - our abilities right</font><font color="#E5E5E5"> and so that's</font>

239
00:08:47,450 --> 00:08:51,060
<font color="#E5E5E5">one</font><font color="#CCCCCC"> of</font><font color="#E5E5E5"> the things that we</font>

240
00:08:48,300 --> 00:08:53,490
<font color="#CCCCCC">found is that security poles need</font><font color="#E5E5E5"> to be</font>

241
00:08:51,060 --> 00:08:55,709
flexible<font color="#E5E5E5"> in a lot of cases and to</font>

242
00:08:53,490 --> 00:08:57,870
understand<font color="#E5E5E5"> this is what I'm going</font><font color="#CCCCCC"> to be</font>

243
00:08:55,709 --> 00:09:00,029
able to<font color="#E5E5E5"> get from a security standpoint</font>

244
00:08:57,870 --> 00:09:03,300
<font color="#CCCCCC">and these</font><font color="#E5E5E5"> are the things that</font><font color="#CCCCCC"> are simply</font>

245
00:09:00,029 --> 00:09:06,480
not<font color="#CCCCCC"> reasonable for me</font><font color="#E5E5E5"> to for me to</font><font color="#CCCCCC"> be</font>

246
00:09:03,300 --> 00:09:08,339
able<font color="#E5E5E5"> to expect</font><font color="#CCCCCC"> you know finally we need</font>

247
00:09:06,480 --> 00:09:10,529
<font color="#E5E5E5">to take what we found and we need to</font>

248
00:09:08,339 --> 00:09:14,160
report those out to the<font color="#E5E5E5"> developers and</font>

249
00:09:10,529 --> 00:09:15,600
again<font color="#E5E5E5"> the best practice</font><font color="#CCCCCC"> here is use the</font>

250
00:09:14,160 --> 00:09:17,910
tools<font color="#E5E5E5"> that</font><font color="#CCCCCC"> the developers are already</font>

251
00:09:15,600 --> 00:09:19,529
<font color="#E5E5E5">using standard you'll put it in put</font><font color="#CCCCCC"> it</font>

252
00:09:17,910 --> 00:09:21,719
in JIRA<font color="#E5E5E5"> so they're being tracked as buzz</font>

253
00:09:19,529 --> 00:09:24,000
it need to<font color="#CCCCCC"> be fixed</font><font color="#E5E5E5"> also we'll look at</font>

254
00:09:21,720 --> 00:09:26,490
things like chat ops<font color="#CCCCCC"> how do we notify</font>

255
00:09:24,000 --> 00:09:28,320
how do we notify developers hey this

256
00:09:26,490 --> 00:09:30,209
last<font color="#E5E5E5"> check-in that you pushed in that</font>

257
00:09:28,320 --> 00:09:32,310
<font color="#E5E5E5">has changed the security state of the</font>

258
00:09:30,209 --> 00:09:33,540
application<font color="#CCCCCC"> you have new findings that</font>

259
00:09:32,310 --> 00:09:34,768
<font color="#CCCCCC">are in there you've</font><font color="#E5E5E5"> introduced new</font>

260
00:09:33,540 --> 00:09:36,599
attack surface that you need to be

261
00:09:34,769 --> 00:09:37,740
concerned<font color="#E5E5E5"> about but again the important</font>

262
00:09:36,600 --> 00:09:39,930
thing<font color="#CCCCCC"> here is you</font><font color="#E5E5E5"> need to be putting</font>

263
00:09:37,740 --> 00:09:43,260
<font color="#E5E5E5">these results into the tools that the</font>

264
00:09:39,930 --> 00:09:44,790
development teams are<font color="#E5E5E5"> already using so</font>

265
00:09:43,260 --> 00:09:46,230
talk through a lot of<font color="#E5E5E5"> this you know many</font>

266
00:09:44,790 --> 00:09:47,910
security tools are run too<font color="#CCCCCC"> long to be</font>

267
00:09:46,230 --> 00:09:50,610
included in<font color="#E5E5E5"> the pipeline</font><font color="#CCCCCC"> build so full</font>

268
00:09:47,910 --> 00:09:52,829
staff staff<font color="#CCCCCC"> security testing</font><font color="#E5E5E5"> also</font>

269
00:09:50,610 --> 00:09:54,300
includes manual testing or<font color="#E5E5E5"> comprehensive</font>

270
00:09:52,829 --> 00:09:55,920
<font color="#CCCCCC">security testing is going to include</font>

271
00:09:54,300 --> 00:09:58,079
manual<font color="#E5E5E5"> testing and that's going to be</font>

272
00:09:55,920 --> 00:10:01,410
way<font color="#CCCCCC"> too slow to include in most pipeline</font>

273
00:09:58,079 --> 00:10:03,599
builds but by<font color="#E5E5E5"> looking at a</font><font color="#CCCCCC"> TAC surface</font>

274
00:10:01,410 --> 00:10:06,420
<font color="#CCCCCC">it has it changes</font><font color="#E5E5E5"> over time that can</font>

275
00:10:03,600 --> 00:10:08,760
help us<font color="#E5E5E5"> focus certain testing activities</font>

276
00:10:06,420 --> 00:10:11,099
so if we have a very limited time<font color="#CCCCCC"> to</font>

277
00:10:08,760 --> 00:10:12,810
test<font color="#CCCCCC"> we probably want to test</font><font color="#E5E5E5"> the parts</font>

278
00:10:11,100 --> 00:10:15,690
of the<font color="#CCCCCC"> application</font><font color="#E5E5E5"> that are the most</font>

279
00:10:12,810 --> 00:10:17,640
<font color="#E5E5E5">likely to</font><font color="#CCCCCC"> have</font><font color="#E5E5E5"> newly introduced</font>

280
00:10:15,690 --> 00:10:19,850
vulnerabilities<font color="#E5E5E5"> right and that's going</font>

281
00:10:17,640 --> 00:10:21,899
<font color="#CCCCCC">to be new parts of the attack surface or</font>

282
00:10:19,850 --> 00:10:24,329
parts of<font color="#E5E5E5"> the attack surface where the</font>

283
00:10:21,899 --> 00:10:26,040
application<font color="#E5E5E5"> behavior has changed</font><font color="#CCCCCC"> and</font><font color="#E5E5E5"> so</font>

284
00:10:24,329 --> 00:10:28,140
by understanding<font color="#E5E5E5"> how attack surface</font>

285
00:10:26,040 --> 00:10:31,260
changes over time that lets us focus

286
00:10:28,140 --> 00:10:33,149
testing activities and we can also<font color="#E5E5E5"> use</font>

287
00:10:31,260 --> 00:10:35,430
it<font color="#CCCCCC"> to</font><font color="#E5E5E5"> help us trigger testing activities</font>

288
00:10:33,149 --> 00:10:37,290
to say<font color="#E5E5E5"> you know since the last time we</font>

289
00:10:35,430 --> 00:10:38,969
did manual testing this is how the

290
00:10:37,290 --> 00:10:40,469
applications attack<font color="#CCCCCC"> service</font><font color="#E5E5E5"> has changed</font>

291
00:10:38,970 --> 00:10:41,670
with the limited<font color="#CCCCCC"> amount of</font><font color="#E5E5E5"> time</font><font color="#CCCCCC"> that</font><font color="#E5E5E5"> I</font>

292
00:10:40,470 --> 00:10:44,370
have<font color="#CCCCCC"> to do manual testing the</font>

293
00:10:41,670 --> 00:10:46,110
application<font color="#E5E5E5"> let me focus in on that you</font>

294
00:10:44,370 --> 00:10:49,110
know<font color="#E5E5E5"> in furthermore I want to redo a</font>

295
00:10:46,110 --> 00:10:51,870
manual<font color="#E5E5E5"> test either</font><font color="#CCCCCC"> on some</font><font color="#E5E5E5"> sort of time</font>

296
00:10:49,110 --> 00:10:53,370
and based basis or looking<font color="#E5E5E5"> at the</font>

297
00:10:51,870 --> 00:10:55,199
evolution<font color="#E5E5E5"> of the application say well</font>

298
00:10:53,370 --> 00:10:56,880
hey you<font color="#E5E5E5"> know every time we've added 10</font>

299
00:10:55,199 --> 00:10:57,689
or more<font color="#E5E5E5"> URLs of the application I want</font>

300
00:10:56,880 --> 00:10:59,370
to have a pen test

301
00:10:57,690 --> 00:11:01,080
come in and look at<font color="#CCCCCC"> this stuff</font><font color="#E5E5E5"> right or</font>

302
00:10:59,370 --> 00:11:06,900
every time the attack<font color="#E5E5E5"> services grown or</font>

303
00:11:01,080 --> 00:11:10,560
changed by<font color="#CCCCCC"> five</font><font color="#E5E5E5"> or</font><font color="#CCCCCC"> ten percent so we</font>

304
00:11:06,900 --> 00:11:12,150
built in conjunction<font color="#E5E5E5"> with</font><font color="#CCCCCC"> are funded by</font>

305
00:11:10,560 --> 00:11:13,739
<font color="#CCCCCC">the US Department of Homeland Security a</font>

306
00:11:12,150 --> 00:11:15,600
technology we call<font color="#CCCCCC"> hybrid analysis</font>

307
00:11:13,740 --> 00:11:17,790
mapping<font color="#E5E5E5"> and the original goal of this</font>

308
00:11:15,600 --> 00:11:19,440
hybrid analysis<font color="#CCCCCC"> mapping technology was</font>

309
00:11:17,790 --> 00:11:21,300
to correlate<font color="#E5E5E5"> the results of static</font>

310
00:11:19,440 --> 00:11:24,260
testing with dynamic testing so to<font color="#E5E5E5"> take</font>

311
00:11:21,300 --> 00:11:27,329
<font color="#E5E5E5">SAS results from</font>

312
00:11:24,260 --> 00:11:29,069
<font color="#CCCCCC">Verico</font><font color="#E5E5E5"> to check marks a fortifying to</font>

313
00:11:27,330 --> 00:11:32,520
correlate that with dynamic results<font color="#E5E5E5"> from</font>

314
00:11:29,070 --> 00:11:34,740
<font color="#CCCCCC">as a bourbon</font><font color="#E5E5E5"> Afghan a web inspector and</font>

315
00:11:32,520 --> 00:11:35,970
this was developed<font color="#E5E5E5"> with</font><font color="#CCCCCC"> the with the</font>

316
00:11:34,740 --> 00:11:37,110
Department of Homeland<font color="#CCCCCC"> Security is</font><font color="#E5E5E5"> a</font>

317
00:11:35,970 --> 00:11:40,950
<font color="#CCCCCC">Small Business Innovation</font><font color="#E5E5E5"> research</font>

318
00:11:37,110 --> 00:11:42,990
program<font color="#CCCCCC"> and what we found as we develop</font>

319
00:11:40,950 --> 00:11:45,270
this research is that<font color="#E5E5E5"> we were able to do</font>

320
00:11:42,990 --> 00:11:47,700
the<font color="#CCCCCC"> thing we really set out</font><font color="#E5E5E5"> to do which</font>

321
00:11:45,270 --> 00:11:48,870
was<font color="#E5E5E5"> good</font><font color="#CCCCCC"> but</font><font color="#E5E5E5"> we also found other uses</font>

322
00:11:47,700 --> 00:11:52,320
for<font color="#CCCCCC"> the technology and that's</font><font color="#E5E5E5"> really</font>

323
00:11:48,870 --> 00:11:54,630
what I'm going to<font color="#E5E5E5"> focus on today</font><font color="#CCCCCC"> we'll</font>

324
00:11:52,320 --> 00:11:56,370
<font color="#E5E5E5">skip over this just</font><font color="#CCCCCC"> for</font><font color="#E5E5E5"> time but again</font>

325
00:11:54,630 --> 00:12:00,000
<font color="#CCCCCC">it's a really</font><font color="#E5E5E5"> interesting use of this uh</font>

326
00:11:56,370 --> 00:12:04,260
<font color="#E5E5E5">you</font><font color="#CCCCCC"> know the DHS S&T CSD SBIR program</font>

327
00:12:00,000 --> 00:12:05,850
<font color="#CCCCCC">the</font><font color="#E5E5E5"> government loves acronyms now in one</font>

328
00:12:04,260 --> 00:12:07,410
important point<font color="#CCCCCC"> to make</font><font color="#E5E5E5"> is</font><font color="#CCCCCC"> we don't</font><font color="#E5E5E5"> as</font>

329
00:12:05,850 --> 00:12:09,000
soon as<font color="#E5E5E5"> this talk is endorsed by DHS</font>

330
00:12:07,410 --> 00:12:10,350
this is me talking about<font color="#E5E5E5"> the stuff that</font>

331
00:12:09,000 --> 00:12:12,210
we've done<font color="#E5E5E5"> not them specifically</font>

332
00:12:10,350 --> 00:12:14,420
<font color="#CCCCCC">improving our content so that's</font>

333
00:12:12,210 --> 00:12:16,650
traditionally important point to<font color="#CCCCCC"> make</font>

334
00:12:14,420 --> 00:12:18,089
<font color="#CCCCCC">but</font><font color="#E5E5E5"> our</font><font color="#CCCCCC"> original goal again was to</font>

335
00:12:16,650 --> 00:12:20,010
correlate between<font color="#CCCCCC"> static</font><font color="#E5E5E5"> and dynamic</font>

336
00:12:18,090 --> 00:12:21,780
testing work and<font color="#E5E5E5"> after we made that work</font>

337
00:12:20,010 --> 00:12:24,420
we found<font color="#E5E5E5"> out that we could make other</font>

338
00:12:21,780 --> 00:12:26,490
<font color="#CCCCCC">stuff with that</font><font color="#E5E5E5"> technology</font><font color="#CCCCCC"> as</font><font color="#E5E5E5"> well so</font>

339
00:12:24,420 --> 00:12:28,829
they're ready here<font color="#E5E5E5"> familiar with dynamic</font>

340
00:12:26,490 --> 00:12:31,260
application security testing<font color="#CCCCCC"> right so</font>

341
00:12:28,830 --> 00:12:32,760
you're going<font color="#CCCCCC"> to typically</font><font color="#E5E5E5"> spider the</font>

342
00:12:31,260 --> 00:12:34,110
application to<font color="#E5E5E5"> find the attack service</font>

343
00:12:32,760 --> 00:12:35,189
<font color="#CCCCCC">or start on the</font><font color="#E5E5E5"> home page and</font><font color="#CCCCCC"> you're</font>

344
00:12:34,110 --> 00:12:37,260
going<font color="#E5E5E5"> to act like Google you're going to</font>

345
00:12:35,190 --> 00:12:39,960
spider<font color="#E5E5E5"> find all the pages of the</font><font color="#CCCCCC"> URLs</font>

346
00:12:37,260 --> 00:12:42,870
the<font color="#CCCCCC"> forms that</font><font color="#E5E5E5"> we</font><font color="#CCCCCC"> pass is usually with</font>

347
00:12:39,960 --> 00:12:44,280
<font color="#E5E5E5">some login authentication and session</font>

348
00:12:42,870 --> 00:12:47,850
management<font color="#E5E5E5"> stuff in there</font><font color="#CCCCCC"> so that you</font>

349
00:12:44,280 --> 00:12:49,470
can you crawl and<font color="#CCCCCC"> see the application</font>

350
00:12:47,850 --> 00:12:51,089
<font color="#CCCCCC">beyond</font><font color="#E5E5E5"> the</font><font color="#CCCCCC"> login</font><font color="#E5E5E5"> page and then we're</font>

351
00:12:49,470 --> 00:12:52,110
<font color="#E5E5E5">going to do some targeted fuzzing we're</font>

352
00:12:51,089 --> 00:12:54,089
going to send in sequel control

353
00:12:52,110 --> 00:12:55,920
characters if we see a JDBC error

354
00:12:54,089 --> 00:12:56,760
message come back we say oh<font color="#CCCCCC"> that looks</font>

355
00:12:55,920 --> 00:12:59,729
like<font color="#E5E5E5"> there's a sequel injection</font>

356
00:12:56,760 --> 00:13:01,830
vulnerability here<font color="#E5E5E5"> and a finding for</font>

357
00:12:59,730 --> 00:13:03,900
these in<font color="#E5E5E5"> these cases looks like the CW</font>

358
00:13:01,830 --> 00:13:06,300
is a vulnerability type we use<font color="#E5E5E5"> the</font><font color="#CCCCCC"> mitre</font>

359
00:13:03,900 --> 00:13:08,270
<font color="#E5E5E5">common weakness enumeration the relative</font>

360
00:13:06,300 --> 00:13:09,620
URL like<font color="#E5E5E5"> we're in the application</font>

361
00:13:08,270 --> 00:13:12,050
what page in the application<font color="#CCCCCC"> are we on</font>

362
00:13:09,620 --> 00:13:13,340
and the entry point<font color="#E5E5E5"> which for certain</font>

363
00:13:12,050 --> 00:13:14,540
vulnerability is like a reflected

364
00:13:13,340 --> 00:13:15,740
cross-site scripting or a<font color="#CCCCCC"> single</font>

365
00:13:14,540 --> 00:13:17,569
<font color="#CCCCCC">injection</font><font color="#E5E5E5"> are going to have a parameter</font>

366
00:13:15,740 --> 00:13:21,200
<font color="#CCCCCC">or cookie or something into where the</font>

367
00:13:17,570 --> 00:13:22,850
payload was<font color="#E5E5E5"> passed in so we want to</font>

368
00:13:21,200 --> 00:13:24,140
correlate<font color="#E5E5E5"> those with static application</font>

369
00:13:22,850 --> 00:13:25,460
security testing<font color="#CCCCCC"> so that's where we're</font>

370
00:13:24,140 --> 00:13:27,980
<font color="#E5E5E5">going to use source code or a binary</font>

371
00:13:25,460 --> 00:13:29,210
<font color="#E5E5E5">we're going to do some analysis</font><font color="#CCCCCC"> build a</font>

372
00:13:27,980 --> 00:13:31,010
model of this application<font color="#CCCCCC"> we're going to</font>

373
00:13:29,210 --> 00:13:32,990
<font color="#E5E5E5">do data flow control</font><font color="#CCCCCC"> slow semantic</font>

374
00:13:31,010 --> 00:13:34,490
analysis again this is<font color="#CCCCCC"> just kind of a</font>

375
00:13:32,990 --> 00:13:36,650
text<font color="#E5E5E5"> flirting sequel injection where we</font>

376
00:13:34,490 --> 00:13:37,790
get tainted<font color="#E5E5E5"> data in it paints a couple</font>

377
00:13:36,650 --> 00:13:40,430
strings<font color="#CCCCCC"> along the way and then gets</font>

378
00:13:37,790 --> 00:13:42,560
passed<font color="#E5E5E5"> to a sensitive function and</font>

379
00:13:40,430 --> 00:13:46,250
really what we're what we were trying<font color="#E5E5E5"> to</font>

380
00:13:42,560 --> 00:13:49,160
do was to find the<font color="#CCCCCC"> relationship between</font>

381
00:13:46,250 --> 00:13:50,960
the<font color="#CCCCCC"> behavior of</font><font color="#E5E5E5"> an application and the</font>

382
00:13:49,160 --> 00:13:54,140
source code responsible for that

383
00:13:50,960 --> 00:13:56,600
<font color="#E5E5E5">behavior so for each what we essentially</font>

384
00:13:54,140 --> 00:13:58,640
do is<font color="#E5E5E5"> we need to first standardize</font>

385
00:13:56,600 --> 00:14:01,730
vulnerability types again we use mitre

386
00:13:58,640 --> 00:14:05,360
for that but we wanted to map<font color="#E5E5E5"> when I</font>

387
00:14:01,730 --> 00:14:07,280
make a<font color="#E5E5E5"> request to a particular URL what</font>

388
00:14:05,360 --> 00:14:10,790
code in<font color="#E5E5E5"> this application is going</font><font color="#CCCCCC"> to run</font>

389
00:14:07,280 --> 00:14:13,490
to embodies behavior<font color="#CCCCCC"> that URL and when I</font>

390
00:14:10,790 --> 00:14:16,010
pass in a parameter to<font color="#CCCCCC"> the application</font>

391
00:14:13,490 --> 00:14:22,220
<font color="#E5E5E5">where in the source codes of that</font>

392
00:14:16,010 --> 00:14:24,080
parameter usage show up so from this

393
00:14:22,220 --> 00:14:26,090
<font color="#E5E5E5">basically what we do</font><font color="#CCCCCC"> is we look at the</font>

394
00:14:24,080 --> 00:14:27,950
application<font color="#CCCCCC"> source code detect the</font>

395
00:14:26,090 --> 00:14:29,810
language and framework<font color="#E5E5E5"> and build an</font>

396
00:14:27,950 --> 00:14:32,660
attack surface model of the application

397
00:14:29,810 --> 00:14:35,000
so<font color="#E5E5E5"> we determine what are all of the URLs</font>

398
00:14:32,660 --> 00:14:36,860
is that the application will respond to

399
00:14:35,000 --> 00:14:38,600
<font color="#E5E5E5">and where is the source code that's</font>

400
00:14:36,860 --> 00:14:40,760
responsible to serve each of<font color="#E5E5E5"> those</font>

401
00:14:38,600 --> 00:14:42,320
requests and<font color="#E5E5E5"> we figure out what are all</font>

402
00:14:40,760 --> 00:14:45,170
the parameters<font color="#CCCCCC"> you can pass into</font><font color="#E5E5E5"> the</font>

403
00:14:42,320 --> 00:14:47,870
application<font color="#E5E5E5"> and</font><font color="#CCCCCC"> where in the</font><font color="#E5E5E5"> source code</font>

404
00:14:45,170 --> 00:14:50,900
is<font color="#E5E5E5"> that entry point</font><font color="#CCCCCC"> into the</font><font color="#E5E5E5"> source</font>

405
00:14:47,870 --> 00:14:53,030
reflected and from that then we can

406
00:14:50,900 --> 00:14:55,160
<font color="#E5E5E5">fairly easily</font><font color="#CCCCCC"> coordinate static and</font>

407
00:14:53,030 --> 00:14:56,449
dynamic<font color="#E5E5E5"> results so if I have a reflect</font>

408
00:14:55,160 --> 00:14:58,189
dynamic result saying reflected

409
00:14:56,450 --> 00:15:00,080
cross-site scripting for login done<font color="#E5E5E5"> JSP</font>

410
00:14:58,190 --> 00:15:01,670
for the username parameter<font color="#CCCCCC"> I can go</font>

411
00:15:00,080 --> 00:15:03,200
query my<font color="#E5E5E5"> endpoint database and this is</font>

412
00:15:01,670 --> 00:15:04,579
<font color="#CCCCCC">Alyssa's</font><font color="#E5E5E5"> Java spring application</font>

413
00:15:03,200 --> 00:15:07,460
<font color="#CCCCCC">you know comment whatever about whatever</font>

414
00:15:04,580 --> 00:15:09,770
<font color="#CCCCCC">a login control or</font><font color="#E5E5E5"> not</font><font color="#CCCCCC"> Java 962 is</font><font color="#E5E5E5"> the</font>

415
00:15:07,460 --> 00:15:11,390
source code responsible for that<font color="#E5E5E5"> then we</font>

416
00:15:09,770 --> 00:15:13,160
look through our static findings we find

417
00:15:11,390 --> 00:15:14,720
out hey there's a reflect across site

418
00:15:13,160 --> 00:15:16,579
scripting<font color="#E5E5E5"> and the source</font><font color="#CCCCCC"> function for</font>

419
00:15:14,720 --> 00:15:18,440
that<font color="#E5E5E5"> is at log and control of that</font><font color="#CCCCCC"> Java</font>

420
00:15:16,580 --> 00:15:20,940
line 62 right so<font color="#E5E5E5"> that's how we're able</font>

421
00:15:18,440 --> 00:15:23,070
to<font color="#E5E5E5"> correlate between the</font><font color="#CCCCCC"> stat</font>

422
00:15:20,940 --> 00:15:26,210
artifacts<font color="#E5E5E5"> in the source code and the</font>

423
00:15:23,070 --> 00:15:28,350
dynamic<font color="#E5E5E5"> behavior</font><font color="#CCCCCC"> the running application</font>

424
00:15:26,210 --> 00:15:30,450
and so I was working<font color="#E5E5E5"> with one</font><font color="#CCCCCC"> of</font><font color="#E5E5E5"> our</font>

425
00:15:28,350 --> 00:15:33,060
engineers to explain how<font color="#E5E5E5"> this work we</font>

426
00:15:30,450 --> 00:15:35,070
work<font color="#E5E5E5"> so it's very impressive yeah but</font>

427
00:15:33,060 --> 00:15:36,810
what else<font color="#E5E5E5"> can we do</font><font color="#CCCCCC"> with this</font><font color="#E5E5E5"> and so</font>

428
00:15:35,070 --> 00:15:37,800
what we found is like<font color="#E5E5E5"> with that data</font>

429
00:15:36,810 --> 00:15:41,069
<font color="#E5E5E5">structure we can do some interesting</font>

430
00:15:37,800 --> 00:15:42,930
<font color="#E5E5E5">things if you have a dynamic result but</font>

431
00:15:41,070 --> 00:15:45,210
<font color="#E5E5E5">you</font><font color="#CCCCCC"> haven't done full static</font><font color="#E5E5E5"> analysis</font>

432
00:15:42,930 --> 00:15:48,479
<font color="#E5E5E5">but if you have a dynamic result with a</font>

433
00:15:45,210 --> 00:15:49,620
<font color="#CCCCCC">for</font><font color="#E5E5E5"> vulnerability you can query this and</font>

434
00:15:48,480 --> 00:15:52,680
find out<font color="#E5E5E5"> like well where in the source</font>

435
00:15:49,620 --> 00:15:54,090
code should I start<font color="#CCCCCC"> looking for</font><font color="#E5E5E5"> how are</font>

436
00:15:52,680 --> 00:15:55,920
we<font color="#E5E5E5"> going to fix this vulnerability</font><font color="#CCCCCC"> right</font>

437
00:15:54,090 --> 00:15:57,360
<font color="#E5E5E5">that's not as</font><font color="#CCCCCC"> good as most</font><font color="#E5E5E5"> of the static</font>

438
00:15:55,920 --> 00:15:58,560
analysis vendors have<font color="#E5E5E5"> like to plug in</font>

439
00:15:57,360 --> 00:16:00,660
<font color="#CCCCCC">then</font><font color="#E5E5E5"> you can go through the full data</font>

440
00:15:58,560 --> 00:16:03,119
flow and<font color="#CCCCCC"> control flow that's better but</font>

441
00:16:00,660 --> 00:16:04,680
if you<font color="#E5E5E5"> haven't done that analysis by</font>

442
00:16:03,120 --> 00:16:06,570
having the<font color="#CCCCCC"> data structure available you</font>

443
00:16:04,680 --> 00:16:08,969
can take a dynamic<font color="#CCCCCC"> resultant map into an</font>

444
00:16:06,570 --> 00:16:10,410
entry point<font color="#E5E5E5"> the source code as well see</font>

445
00:16:08,970 --> 00:16:13,100
we can<font color="#E5E5E5"> also do some interesting stuff</font>

446
00:16:10,410 --> 00:16:16,980
where<font color="#CCCCCC"> we can proceed dynamic scanners</font>

447
00:16:13,100 --> 00:16:19,350
and so if we've<font color="#CCCCCC"> got this application</font>

448
00:16:16,980 --> 00:16:24,750
attack service<font color="#E5E5E5"> remember we're looking at</font>

449
00:16:19,350 --> 00:16:27,810
the application source<font color="#CCCCCC"> code and figuring</font>

450
00:16:24,750 --> 00:16:29,310
out from that<font color="#E5E5E5"> again where the</font><font color="#CCCCCC"> behavior</font>

451
00:16:27,810 --> 00:16:31,589
comes from<font color="#CCCCCC"> each part of</font><font color="#E5E5E5"> the attack</font>

452
00:16:29,310 --> 00:16:33,869
<font color="#E5E5E5">service if you look at the dynamic</font>

453
00:16:31,590 --> 00:16:35,580
testing the first<font color="#E5E5E5"> step there is the</font>

454
00:16:33,870 --> 00:16:37,230
spider<font color="#E5E5E5"> the application or to try and</font>

455
00:16:35,580 --> 00:16:39,360
<font color="#E5E5E5">guess discover the application attack</font>

456
00:16:37,230 --> 00:16:41,610
<font color="#E5E5E5">service but if we can proceed that</font>

457
00:16:39,360 --> 00:16:43,710
scanner<font color="#CCCCCC"> we can hopefully avoid false</font>

458
00:16:41,610 --> 00:16:46,170
negatives<font color="#E5E5E5"> right so we can proceed</font><font color="#CCCCCC"> the</font>

459
00:16:43,710 --> 00:16:49,410
scanner to<font color="#E5E5E5"> say you know here are all the</font>

460
00:16:46,170 --> 00:16:50,849
URLs that<font color="#CCCCCC"> you might</font><font color="#E5E5E5"> you</font><font color="#CCCCCC"> want</font><font color="#E5E5E5"> to test and</font>

461
00:16:49,410 --> 00:16:52,920
<font color="#E5E5E5">here all the parameters you can pass in</font>

462
00:16:50,850 --> 00:16:54,510
<font color="#E5E5E5">right and so this</font><font color="#CCCCCC"> helps you deal deal</font>

463
00:16:52,920 --> 00:16:56,400
with like multi-step pages that you

464
00:16:54,510 --> 00:16:57,750
might not<font color="#E5E5E5"> be able to crawl through</font><font color="#CCCCCC"> and</font>

465
00:16:56,400 --> 00:16:59,579
unused parameters<font color="#CCCCCC"> I've worked</font><font color="#E5E5E5"> on a</font>

466
00:16:57,750 --> 00:17:01,950
ColdFusion application wants<font color="#CCCCCC"> to</font><font color="#E5E5E5"> review</font>

467
00:16:59,580 --> 00:17:04,500
passing a parameter<font color="#E5E5E5"> named</font><font color="#CCCCCC"> Indy to any</font>

468
00:17:01,950 --> 00:17:05,880
page<font color="#CCCCCC"> in the application</font><font color="#E5E5E5"> whatever value</font>

469
00:17:04,500 --> 00:17:07,619
that was let's say it would be<font color="#CCCCCC"> pass the</font>

470
00:17:05,880 --> 00:17:09,329
notice of parameters<font color="#CCCCCC"> IVA</font><font color="#E5E5E5"> the value of a</font>

471
00:17:07,619 --> 00:17:15,149
<font color="#E5E5E5">thousand it would delete order number</font>

472
00:17:09,329 --> 00:17:17,669
<font color="#CCCCCC">1000 yeah why nobody knows it yeah so</font>

473
00:17:15,150 --> 00:17:22,680
fine calculating this attack sir because

474
00:17:17,670 --> 00:17:25,260
<font color="#E5E5E5">you can know about that beforehand so</font>

475
00:17:22,680 --> 00:17:26,910
we've<font color="#E5E5E5"> taken this technology and embedded</font>

476
00:17:25,260 --> 00:17:28,230
it in a number<font color="#CCCCCC"> of</font><font color="#E5E5E5"> different things</font><font color="#CCCCCC"> so</font>

477
00:17:26,910 --> 00:17:29,700
we've got a<font color="#CCCCCC"> command-line</font><font color="#E5E5E5"> client</font><font color="#CCCCCC"> you</font><font color="#E5E5E5"> can</font>

478
00:17:28,230 --> 00:17:31,920
<font color="#E5E5E5">use points of the source code to dump it</font>

479
00:17:29,700 --> 00:17:32,840
out that's<font color="#E5E5E5"> handy from a standpoint of it</font>

480
00:17:31,920 --> 00:17:33,890
<font color="#E5E5E5">lets you do a visual</font>

481
00:17:32,840 --> 00:17:35,299
check to see<font color="#CCCCCC"> how thing is this</font>

482
00:17:33,890 --> 00:17:36,980
application what are the parameters and

483
00:17:35,299 --> 00:17:38,480
<font color="#E5E5E5">you</font><font color="#CCCCCC"> can</font><font color="#E5E5E5"> look in to see if you find any</font>

484
00:17:36,980 --> 00:17:40,850
parameters that<font color="#CCCCCC"> have</font><font color="#E5E5E5"> scary weird names</font>

485
00:17:38,480 --> 00:17:43,760
like debug<font color="#E5E5E5"> all right and what it also</font>

486
00:17:40,850 --> 00:17:45,500
does<font color="#CCCCCC"> is it will go in and show you four</font>

487
00:17:43,760 --> 00:17:47,059
four frameworks<font color="#CCCCCC"> that use auto binding</font>

488
00:17:45,500 --> 00:17:48,830
like a spring<font color="#CCCCCC"> and Ruby on Rails</font>

489
00:17:47,059 --> 00:17:51,020
<font color="#CCCCCC">it'll parse the model files and show you</font>

490
00:17:48,830 --> 00:17:54,918
situations where hey I can actually<font color="#CCCCCC"> auto</font>

491
00:17:51,020 --> 00:17:56,809
bind like six levels down in the<font color="#E5E5E5"> in this</font>

492
00:17:54,919 --> 00:17:59,630
parameter<font color="#CCCCCC"> and that's probably not the</font>

493
00:17:56,809 --> 00:18:02,480
configuration<font color="#E5E5E5"> that you want we also have</font>

494
00:17:59,630 --> 00:18:07,100
<font color="#CCCCCC">plugins</font><font color="#E5E5E5"> for OS app and for burp that</font>

495
00:18:02,480 --> 00:18:11,360
lets you<font color="#E5E5E5"> proceed that let you proceed</font>

496
00:18:07,100 --> 00:18:17,330
<font color="#CCCCCC">scans</font><font color="#E5E5E5"> so if we go and look at the budget</font>

497
00:18:11,360 --> 00:18:21,379
store here we go and say<font color="#E5E5E5"> I want to</font>

498
00:18:17,330 --> 00:18:34,250
import and<font color="#E5E5E5"> points from source it's where</font>

499
00:18:21,380 --> 00:18:37,970
my source<font color="#E5E5E5"> code is this can proceed this</font>

500
00:18:34,250 --> 00:18:39,559
scan and what we see is<font color="#CCCCCC"> that you are</font>

501
00:18:37,970 --> 00:18:41,210
<font color="#E5E5E5">going to see things since we did did</font>

502
00:18:39,559 --> 00:18:42,950
that unauthenticated<font color="#CCCCCC"> we're going to find</font>

503
00:18:41,210 --> 00:18:44,270
things<font color="#CCCCCC"> like this admin</font><font color="#E5E5E5"> that JSP page</font>

504
00:18:42,950 --> 00:18:45,980
that you wouldn't find in an

505
00:18:44,270 --> 00:18:47,330
unauthenticated crawl<font color="#E5E5E5"> because</font><font color="#CCCCCC"> you're</font>

506
00:18:45,980 --> 00:18:49,190
going<font color="#E5E5E5"> to see things like these debug</font>

507
00:18:47,330 --> 00:18:50,960
parameters that<font color="#E5E5E5"> you would also never see</font>

508
00:18:49,190 --> 00:18:53,270
in the HTML or<font color="#E5E5E5"> JavaScript the</font>

509
00:18:50,960 --> 00:18:54,980
<font color="#E5E5E5">application is rendered</font><font color="#CCCCCC"> alright so we're</font>

510
00:18:53,270 --> 00:18:57,080
going<font color="#E5E5E5"> to find</font><font color="#CCCCCC"> more images we find parts</font>

511
00:18:54,980 --> 00:18:59,110
of the application<font color="#CCCCCC"> that</font><font color="#E5E5E5"> were that we're</font>

512
00:18:57,080 --> 00:19:02,570
<font color="#E5E5E5">not there before</font>

513
00:18:59,110 --> 00:19:04,729
so let's now think<font color="#CCCCCC"> about looking at this</font>

514
00:19:02,570 --> 00:19:06,770
<font color="#E5E5E5">over time so if I let's look at the end</font>

515
00:19:04,730 --> 00:19:09,110
the<font color="#CCCCCC"> attack surface</font><font color="#E5E5E5"> at a stationary point</font>

516
00:19:06,770 --> 00:19:11,600
in time but<font color="#E5E5E5"> what if we say let's look</font>

517
00:19:09,110 --> 00:19:14,990
between<font color="#CCCCCC"> to get commits</font><font color="#E5E5E5"> so we can see how</font>

518
00:19:11,600 --> 00:19:17,889
the applications changed and so for

519
00:19:14,990 --> 00:19:17,890
example here

520
00:19:26,930 --> 00:19:31,620
what this lets<font color="#E5E5E5"> us do</font><font color="#CCCCCC"> is it lets</font><font color="#E5E5E5"> us look</font>

521
00:19:29,310 --> 00:19:34,860
<font color="#CCCCCC">between two different git commits</font><font color="#E5E5E5"> and so</font>

522
00:19:31,620 --> 00:19:36,840
we see between<font color="#E5E5E5"> these git commits we</font>

523
00:19:34,860 --> 00:19:39,479
added the attack surface<font color="#E5E5E5"> of these four</font>

524
00:19:36,840 --> 00:19:41,070
URLs<font color="#E5E5E5"> we didn't delete any attack surface</font>

525
00:19:39,480 --> 00:19:43,500
<font color="#E5E5E5">and we've got some percentage</font>

526
00:19:41,070 --> 00:19:45,750
calculations there -<font color="#E5E5E5"> and so we can start</font>

527
00:19:43,500 --> 00:19:48,240
<font color="#CCCCCC">to</font><font color="#E5E5E5"> see hey if the last time I did a</font>

528
00:19:45,750 --> 00:19:50,610
manual test<font color="#E5E5E5"> was here and now I'm here</font>

529
00:19:48,240 --> 00:19:52,650
<font color="#E5E5E5">this tells you you may want</font><font color="#CCCCCC"> to focus</font>

530
00:19:50,610 --> 00:19:57,389
<font color="#E5E5E5">your efforts</font><font color="#CCCCCC"> on it these particular URLs</font>

531
00:19:52,650 --> 00:19:58,710
<font color="#CCCCCC">because they are the ones where it's</font>

532
00:19:57,390 --> 00:20:01,620
most likely that<font color="#CCCCCC"> we're going to find</font>

533
00:19:58,710 --> 00:20:04,850
<font color="#CCCCCC">some sort of new bad behavior we can</font>

534
00:20:01,620 --> 00:20:08,909
<font color="#CCCCCC">also by</font><font color="#E5E5E5"> looking at the files that were</font>

535
00:20:04,850 --> 00:20:11,040
that were affected by these<font color="#CCCCCC"> by</font><font color="#E5E5E5"> the get</font>

536
00:20:08,910 --> 00:20:12,840
commits in between these<font color="#E5E5E5"> two points and</font>

537
00:20:11,040 --> 00:20:14,730
times<font color="#E5E5E5"> by looking at all the files that</font>

538
00:20:12,840 --> 00:20:16,889
<font color="#E5E5E5">has changed</font><font color="#CCCCCC"> and correlating those to the</font>

539
00:20:14,730 --> 00:20:19,950
files associated with the<font color="#CCCCCC"> tak surface we</font>

540
00:20:16,890 --> 00:20:22,380
can also calculate<font color="#E5E5E5"> URLs where the</font>

541
00:20:19,950 --> 00:20:23,790
<font color="#CCCCCC">behavior of</font><font color="#E5E5E5"> those URLs</font><font color="#CCCCCC"> may have changed</font>

542
00:20:22,380 --> 00:20:25,830
<font color="#CCCCCC">like</font><font color="#E5E5E5"> this isn't</font><font color="#CCCCCC"> perfect</font><font color="#E5E5E5"> because we're</font>

543
00:20:23,790 --> 00:20:28,080
<font color="#CCCCCC">we're not</font><font color="#E5E5E5"> actually doing</font><font color="#CCCCCC"> a full analysis</font>

544
00:20:25,830 --> 00:20:30,000
through the ast<font color="#CCCCCC"> and a full data flow</font><font color="#E5E5E5"> or</font>

545
00:20:28,080 --> 00:20:32,520
control flow<font color="#E5E5E5"> but what we're</font><font color="#CCCCCC"> doing is</font>

546
00:20:30,000 --> 00:20:34,350
saying these files have changed<font color="#E5E5E5"> and</font>

547
00:20:32,520 --> 00:20:36,960
these files are associated with attack

548
00:20:34,350 --> 00:20:38,939
surface so here we<font color="#E5E5E5"> can see we've got the</font>

549
00:20:36,960 --> 00:20:41,640
added attack surface we've got the

550
00:20:38,940 --> 00:20:43,350
deleted attack surface but we also by

551
00:20:41,640 --> 00:20:45,870
looking<font color="#CCCCCC"> at the files</font><font color="#E5E5E5"> impacted by the</font>

552
00:20:43,350 --> 00:20:48,540
<font color="#E5E5E5">commit see the attack surfaces behavior</font>

553
00:20:45,870 --> 00:20:50,879
<font color="#CCCCCC">might have changed based on</font><font color="#E5E5E5"> the changes</font>

554
00:20:48,540 --> 00:20:52,680
that<font color="#E5E5E5"> were made and so that</font><font color="#CCCCCC"> again</font><font color="#E5E5E5"> gives</font>

555
00:20:50,880 --> 00:20:54,360
us<font color="#E5E5E5"> additional</font><font color="#CCCCCC"> information about</font><font color="#E5E5E5"> how this</font>

556
00:20:52,680 --> 00:20:56,670
applications behavior may have<font color="#CCCCCC"> changed</font>

557
00:20:54,360 --> 00:21:02,600
over<font color="#E5E5E5"> time and so I can use that to</font><font color="#CCCCCC"> focus</font>

558
00:20:56,670 --> 00:21:02,600
our testing activities so

559
00:21:15,620 --> 00:21:28,290
so now and this is that is<font color="#E5E5E5"> now so what</font>

560
00:21:27,000 --> 00:21:32,730
we can do is we can watch a git

561
00:21:28,290 --> 00:21:34,409
repository<font color="#CCCCCC"> and you know we can watch</font><font color="#E5E5E5"> a</font>

562
00:21:32,730 --> 00:21:35,880
git repository and watch for changes<font color="#E5E5E5"> and</font>

563
00:21:34,410 --> 00:21:37,620
typically this would<font color="#E5E5E5"> be something you do</font>

564
00:21:35,880 --> 00:21:39,360
with your CI CD server like your<font color="#E5E5E5"> Jenkins</font>

565
00:21:37,620 --> 00:21:41,010
or your<font color="#CCCCCC"> bamboo in this case we're going</font>

566
00:21:39,360 --> 00:21:44,479
to<font color="#E5E5E5"> do it just by a polling because it's</font>

567
00:21:41,010 --> 00:22:00,000
easier<font color="#CCCCCC"> to setup</font><font color="#E5E5E5"> but if we go in</font><font color="#CCCCCC"> here</font><font color="#E5E5E5"> and</font>

568
00:21:44,480 --> 00:22:20,520
if<font color="#CCCCCC"> we create</font><font color="#E5E5E5"> some new attack surface and</font>

569
00:22:00,000 --> 00:22:24,150
search now if we push this out we see is

570
00:22:20,520 --> 00:22:26,070
over here<font color="#CCCCCC"> then the pick this up</font><font color="#E5E5E5"> is going</font>

571
00:22:24,150 --> 00:22:27,810
<font color="#E5E5E5">to detect this new attack surface and</font>

572
00:22:26,070 --> 00:22:31,139
then it's going<font color="#E5E5E5"> to do a very targeted</font>

573
00:22:27,810 --> 00:22:32,760
scan<font color="#E5E5E5"> only of the new attack surface that</font>

574
00:22:31,140 --> 00:22:35,370
has been<font color="#E5E5E5"> added to the application</font><font color="#CCCCCC"> so</font>

575
00:22:32,760 --> 00:22:37,340
we're doing<font color="#E5E5E5"> a dynamic test with</font><font color="#CCCCCC"> that not</font>

576
00:22:35,370 --> 00:22:40,199
crawling<font color="#E5E5E5"> the entire</font><font color="#CCCCCC"> application and</font>

577
00:22:37,340 --> 00:22:42,480
fuzzing all of the pages<font color="#E5E5E5"> but instead</font>

578
00:22:40,200 --> 00:22:45,630
we're doing scanning very specifically

579
00:22:42,480 --> 00:22:47,940
of only<font color="#CCCCCC"> the pages that</font><font color="#E5E5E5"> were</font><font color="#CCCCCC"> added</font>

580
00:22:45,630 --> 00:22:50,280
<font color="#CCCCCC">between those two commits</font><font color="#E5E5E5"> and so you</font>

581
00:22:47,940 --> 00:22:52,650
know using<font color="#E5E5E5"> that technique we can get</font>

582
00:22:50,280 --> 00:22:54,780
much more<font color="#E5E5E5"> focused in the way that we're</font>

583
00:22:52,650 --> 00:22:57,900
<font color="#CCCCCC">doing our zap testing and we can use</font>

584
00:22:54,780 --> 00:23:00,090
<font color="#E5E5E5">that then</font><font color="#CCCCCC"> to post</font><font color="#E5E5E5"> out to the is that we</font>

585
00:22:57,900 --> 00:23:02,280
can post out to things<font color="#E5E5E5"> like you know</font>

586
00:23:00,090 --> 00:23:05,250
<font color="#E5E5E5">HipChat or slats</font><font color="#CCCCCC"> let's let folks know</font>

587
00:23:02,280 --> 00:23:09,240
hey for this commitment<font color="#E5E5E5"> just went in I</font>

588
00:23:05,250 --> 00:23:10,800
did<font color="#CCCCCC"> tests of the pages that are new</font><font color="#E5E5E5"> and</font>

589
00:23:09,240 --> 00:23:13,050
the<font color="#E5E5E5"> pages that have changed and we've</font>

590
00:23:10,800 --> 00:23:15,330
detected<font color="#E5E5E5"> this new XYZ vulnerability in</font>

591
00:23:13,050 --> 00:23:17,159
there<font color="#CCCCCC"> the goal here being you know and</font>

592
00:23:15,330 --> 00:23:20,040
again<font color="#CCCCCC"> this is</font><font color="#E5E5E5"> not a replacement for a</font>

593
00:23:17,160 --> 00:23:21,270
full application<font color="#E5E5E5"> security program or you</font>

594
00:23:20,040 --> 00:23:23,100
doing static<font color="#E5E5E5"> testing</font><font color="#CCCCCC"> dynam</font>

595
00:23:21,270 --> 00:23:25,530
testing<font color="#E5E5E5"> of the entire</font><font color="#CCCCCC"> application</font><font color="#E5E5E5"> but</font>

596
00:23:23,100 --> 00:23:28,260
the goal<font color="#CCCCCC"> here is</font><font color="#E5E5E5"> by limiting the test</font>

597
00:23:25,530 --> 00:23:32,129
time or the length of the test<font color="#E5E5E5"> run we</font>

598
00:23:28,260 --> 00:23:34,590
can get this very focused on on<font color="#E5E5E5"> only</font>

599
00:23:32,130 --> 00:23:35,400
testing the new stuff with the hope

600
00:23:34,590 --> 00:23:37,290
being<font color="#E5E5E5"> that we can identify</font>

601
00:23:35,400 --> 00:23:39,540
vulnerabilities much earlier in the

602
00:23:37,290 --> 00:23:40,560
<font color="#CCCCCC">process and let the developers know</font>

603
00:23:39,540 --> 00:23:42,720
about them in the tool<font color="#E5E5E5"> that they're</font>

604
00:23:40,560 --> 00:23:44,100
<font color="#E5E5E5">already</font><font color="#CCCCCC"> using so that you don't have to</font>

605
00:23:42,720 --> 00:23:45,720
go through<font color="#E5E5E5"> this giant</font><font color="#CCCCCC"> cycle where</font><font color="#E5E5E5"> you</font>

606
00:23:44,100 --> 00:23:47,250
find something reported it works<font color="#E5E5E5"> its way</font>

607
00:23:45,720 --> 00:23:48,930
back<font color="#CCCCCC"> to</font><font color="#E5E5E5"> the system and says the</font>

608
00:23:47,250 --> 00:23:50,520
developer can see<font color="#CCCCCC"> Oh for this</font><font color="#E5E5E5"> thing I</font>

609
00:23:48,930 --> 00:23:52,170
just<font color="#E5E5E5"> checked in</font><font color="#CCCCCC"> there's two reflect</font>

610
00:23:50,520 --> 00:23:53,940
across<font color="#E5E5E5"> site scripting vulnerabilities</font><font color="#CCCCCC"> I</font>

611
00:23:52,170 --> 00:23:55,710
need to go<font color="#CCCCCC"> yeah I</font><font color="#E5E5E5"> need</font><font color="#CCCCCC"> to go in to</font><font color="#E5E5E5"> fix</font>

612
00:23:53,940 --> 00:24:05,670
<font color="#E5E5E5">those right</font><font color="#CCCCCC"> now on in</font><font color="#E5E5E5"> the code while on</font>

613
00:23:55,710 --> 00:24:07,230
<font color="#E5E5E5">these student so again I've got at least</font>

614
00:24:05,670 --> 00:24:09,090
<font color="#CCCCCC">two a github repository one thing I'll</font>

615
00:24:07,230 --> 00:24:12,240
warn<font color="#E5E5E5"> you this</font><font color="#CCCCCC"> is from</font><font color="#E5E5E5"> an actual call we</font>

616
00:24:09,090 --> 00:24:14,490
<font color="#CCCCCC">had to</font><font color="#E5E5E5"> the customer where the customer</font>

617
00:24:12,240 --> 00:24:15,960
action said you know so<font color="#E5E5E5"> Dan</font>

618
00:24:14,490 --> 00:24:17,540
so this functionality<font color="#CCCCCC"> is available in</font>

619
00:24:15,960 --> 00:24:20,490
<font color="#E5E5E5">that crappy kind of code that</font><font color="#CCCCCC"> you write</font>

620
00:24:17,540 --> 00:24:22,440
yes yes it is<font color="#E5E5E5"> because that's the way</font>

621
00:24:20,490 --> 00:24:24,510
that<font color="#E5E5E5"> we needed all things is I Python</font>

622
00:24:22,440 --> 00:24:25,890
things together<font color="#E5E5E5"> and then dump it on our</font>

623
00:24:24,510 --> 00:24:28,080
engineering team<font color="#E5E5E5"> and they make actual</font>

624
00:24:25,890 --> 00:24:29,190
<font color="#CCCCCC">working good code out of it so this</font>

625
00:24:28,080 --> 00:24:33,120
stuff right<font color="#CCCCCC"> now is still in the</font>

626
00:24:29,190 --> 00:24:36,090
<font color="#CCCCCC">not-quite</font><font color="#E5E5E5"> pythonic stage you know but</font>

627
00:24:33,120 --> 00:24:37,110
again<font color="#E5E5E5"> this</font><font color="#CCCCCC"> or all these artifacts</font><font color="#E5E5E5"> are</font>

628
00:24:36,090 --> 00:24:38,639
out there and<font color="#E5E5E5"> github if you want to take</font>

629
00:24:37,110 --> 00:24:40,110
a look and replicate some<font color="#CCCCCC"> of this stuff</font>

630
00:24:38,640 --> 00:24:42,030
<font color="#CCCCCC">and we've got some basic libraries in</font>

631
00:24:40,110 --> 00:24:45,060
there that will do the attack surface

632
00:24:42,030 --> 00:24:46,800
<font color="#CCCCCC">disk</font><font color="#E5E5E5"> that will you know and that has</font>

633
00:24:45,060 --> 00:24:49,740
<font color="#E5E5E5">some get utility functions that you</font><font color="#CCCCCC"> can</font>

634
00:24:46,800 --> 00:24:51,180
<font color="#CCCCCC">use to again</font><font color="#E5E5E5"> kind</font><font color="#CCCCCC"> of wire this and stuff</font>

635
00:24:49,740 --> 00:24:55,320
together<font color="#CCCCCC"> so that you can see</font><font color="#E5E5E5"> these</font>

636
00:24:51,180 --> 00:25:08,460
examples<font color="#E5E5E5"> so</font><font color="#CCCCCC"> any questions I think I have</font>

637
00:24:55,320 --> 00:25:09,629
two<font color="#E5E5E5"> minutes any questions yes yeah so</font>

638
00:25:08,460 --> 00:25:11,430
the<font color="#CCCCCC"> question is how to identify the</font>

639
00:25:09,630 --> 00:25:13,680
attack<font color="#E5E5E5"> service how do we</font><font color="#CCCCCC"> identify so</font>

640
00:25:11,430 --> 00:25:15,900
when you point the the<font color="#E5E5E5"> engine at some</font>

641
00:25:13,680 --> 00:25:17,760
source code<font color="#CCCCCC"> it detects</font><font color="#E5E5E5"> the language in</font>

642
00:25:15,900 --> 00:25:19,920
the framework<font color="#E5E5E5"> and so it will say this is</font>

643
00:25:17,760 --> 00:25:22,920
a java application using spring or this

644
00:25:19,920 --> 00:25:24,300
is a<font color="#E5E5E5"> asp.net application and c-sharp</font><font color="#CCCCCC"> of</font>

645
00:25:22,920 --> 00:25:27,300
web forms or Ruby on Rails application

646
00:25:24,300 --> 00:25:29,040
<font color="#CCCCCC">and so we're limited right now</font><font color="#E5E5E5"> in the</font>

647
00:25:27,300 --> 00:25:31,350
set of languages frameworks that<font color="#E5E5E5"> we</font>

648
00:25:29,040 --> 00:25:33,330
support but<font color="#E5E5E5"> is it text that language and</font>

649
00:25:31,350 --> 00:25:35,159
framework and then goes through<font color="#E5E5E5"> this</font>

650
00:25:33,330 --> 00:25:36,840
code and identifies like<font color="#E5E5E5"> for spring for</font>

651
00:25:35,160 --> 00:25:38,220
<font color="#CCCCCC">example</font><font color="#E5E5E5"> it's going to go and it's going</font>

652
00:25:36,840 --> 00:25:40,139
to identify<font color="#E5E5E5"> all of the controller</font>

653
00:25:38,220 --> 00:25:42,060
classes that have<font color="#E5E5E5"> that annotation</font><font color="#CCCCCC"> it's</font>

654
00:25:40,140 --> 00:25:44,130
going to parse out where what URLs is

655
00:25:42,060 --> 00:25:46,379
attached<font color="#E5E5E5"> to</font><font color="#CCCCCC"> it parses the model so that</font>

656
00:25:44,130 --> 00:25:48,360
<font color="#CCCCCC">it can</font><font color="#E5E5E5"> make those trees</font><font color="#CCCCCC"> your courses the</font>

657
00:25:46,380 --> 00:25:49,860
<font color="#CCCCCC">auto-binding configuration and so then</font>

658
00:25:48,360 --> 00:25:51,479
it could say like<font color="#E5E5E5"> hey I</font><font color="#CCCCCC"> feel because I</font>

659
00:25:49,860 --> 00:25:54,300
<font color="#CCCCCC">feel because we understand how</font><font color="#E5E5E5"> spring</font>

660
00:25:51,480 --> 00:25:56,310
translates<font color="#E5E5E5"> URLs</font><font color="#CCCCCC"> we can do the same</font><font color="#E5E5E5"> thing</font>

661
00:25:54,300 --> 00:25:58,740
with<font color="#CCCCCC"> like struts or your web forms and</font>

662
00:25:56,310 --> 00:26:00,389
<font color="#E5E5E5">things of that</font><font color="#CCCCCC"> nature so that lets us go</font>

663
00:25:58,740 --> 00:26:02,280
in and<font color="#CCCCCC"> calculate that attack surface</font>

664
00:26:00,390 --> 00:26:08,340
that then gets it set<font color="#E5E5E5"> down a lot of the</font>

665
00:26:02,280 --> 00:26:09,780
other stuff yes<font color="#CCCCCC"> so the</font><font color="#E5E5E5"> question is does</font>

666
00:26:08,340 --> 00:26:12,090
<font color="#E5E5E5">the work with</font><font color="#CCCCCC"> Web Services the</font><font color="#E5E5E5"> REST API</font>

667
00:26:09,780 --> 00:26:14,520
it does I know for spring and I'm pretty

668
00:26:12,090 --> 00:26:17,550
sure<font color="#E5E5E5"> for Ruby on Rails</font><font color="#CCCCCC"> and so yes</font><font color="#E5E5E5"> like</font>

669
00:26:14,520 --> 00:26:18,690
so you<font color="#E5E5E5"> know I know I said we work more</font>

670
00:26:17,550 --> 00:26:21,419
<font color="#E5E5E5">with the spring stuff but yes it</font>

671
00:26:18,690 --> 00:26:23,040
identifies those annotations indicating

672
00:26:21,420 --> 00:26:25,290
that those<font color="#CCCCCC"> are web service methods and</font>

673
00:26:23,040 --> 00:26:26,399
exposes those and so like a really handy

674
00:26:25,290 --> 00:26:28,020
thing you can do with this if you're

675
00:26:26,400 --> 00:26:30,600
<font color="#CCCCCC">doing</font><font color="#E5E5E5"> mobile application pen testing</font>

676
00:26:28,020 --> 00:26:32,910
with a like spring<font color="#E5E5E5"> rest based</font><font color="#CCCCCC"> back-end</font>

677
00:26:30,600 --> 00:26:35,040
<font color="#E5E5E5">is you can use this to enumerate all</font>

678
00:26:32,910 --> 00:26:36,930
that attack surface and you don't have

679
00:26:35,040 --> 00:26:39,570
<font color="#E5E5E5">to go through</font><font color="#CCCCCC"> the full process of like</font>

680
00:26:36,930 --> 00:26:40,860
taking a mobile app you<font color="#CCCCCC"> know chaining it</font>

681
00:26:39,570 --> 00:26:42,270
through<font color="#E5E5E5"> zapper burp and then like</font>

682
00:26:40,860 --> 00:26:43,709
watching all the traffic so you<font color="#E5E5E5"> know</font>

683
00:26:42,270 --> 00:26:46,070
here all the<font color="#CCCCCC"> endpoint that</font><font color="#E5E5E5"> we need to</font>

684
00:26:43,710 --> 00:26:46,070
<font color="#E5E5E5">talk to you</font>

685
00:26:51,340 --> 00:26:54,490
[Applause]

