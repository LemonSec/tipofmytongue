1
00:00:02,540 --> 00:00:09,139
<font color="#E5E5E5">okay can I start yeah okay</font><font color="#CCCCCC"> so we are the</font>

2
00:00:06,680 --> 00:00:13,010
last one before lunch<font color="#CCCCCC"> so you're talking</font>

3
00:00:09,139 --> 00:00:15,500
<font color="#E5E5E5">about</font><font color="#CCCCCC"> androids</font><font color="#E5E5E5"> about the security</font><font color="#CCCCCC"> of</font>

4
00:00:13,010 --> 00:00:18,109
<font color="#E5E5E5">Android password manager my name</font><font color="#CCCCCC"> is</font>

5
00:00:15,500 --> 00:00:20,930
<font color="#CCCCCC">Stefan Hoover this is my</font><font color="#E5E5E5"> colleague</font>

6
00:00:18,109 --> 00:00:22,430
<font color="#E5E5E5">Steven art then our</font><font color="#CCCCCC"> third colleagues</font>

7
00:00:20,930 --> 00:00:26,090
liquid<font color="#CCCCCC"> glass over cannot be here</font>

8
00:00:22,430 --> 00:00:28,970
unfortunately<font color="#CCCCCC"> at first a bit about me</font>

9
00:00:26,090 --> 00:00:31,009
I'm a<font color="#E5E5E5"> security researcher at war on</font>

10
00:00:28,970 --> 00:00:36,498
offer Institute<font color="#E5E5E5"> I'm working at the test</font>

11
00:00:31,010 --> 00:00:38,719
lab for mobile security and around thing

12
00:00:36,499 --> 00:00:40,850
two years<font color="#E5E5E5"> ago my colleague</font><font color="#CCCCCC"> Steven</font>

13
00:00:38,719 --> 00:00:43,639
<font color="#CCCCCC">Siegfried and me we founded a small</font>

14
00:00:40,850 --> 00:00:47,389
<font color="#E5E5E5">hacking group out of colleagues and</font>

15
00:00:43,639 --> 00:00:49,999
students and we meet once<font color="#E5E5E5"> a week in our</font>

16
00:00:47,389 --> 00:00:53,319
spare<font color="#CCCCCC"> time for some pizza</font><font color="#E5E5E5"> and drinking</font>

17
00:00:49,999 --> 00:00:57,709
and so on and<font color="#E5E5E5"> then we</font><font color="#CCCCCC"> look in different</font>

18
00:00:53,319 --> 00:01:00,049
interesting topics and this presentation

19
00:00:57,709 --> 00:01:03,469
will now be<font color="#E5E5E5"> the results of one of our</font>

20
00:01:00,049 --> 00:01:05,479
project<font color="#E5E5E5"> and at first</font><font color="#CCCCCC"> I hand over</font><font color="#E5E5E5"> to</font>

21
00:01:03,469 --> 00:01:08,750
Steven for a short introduction<font color="#E5E5E5"> then I</font>

22
00:01:05,479 --> 00:01:12,320
will start the talk and the end will be

23
00:01:08,750 --> 00:01:15,140
finished again bye bye Steven thanks for

24
00:01:12,320 --> 00:01:17,479
fun<font color="#CCCCCC"> so I'm Steven I'm also part of the</font>

25
00:01:15,140 --> 00:01:20,540
the hacking group and<font color="#CCCCCC"> of Ronna</font><font color="#E5E5E5"> for</font><font color="#CCCCCC"> SRT</font>

26
00:01:17,480 --> 00:01:22,910
and I'm a researcher in security as well

27
00:01:20,540 --> 00:01:24,830
<font color="#E5E5E5">as program analysis so my main topic is</font>

28
00:01:22,910 --> 00:01:27,320
<font color="#E5E5E5">applying methods of static and dynamic</font>

29
00:01:24,830 --> 00:01:30,500
program gnosis to programs to

30
00:01:27,320 --> 00:01:34,479
automatically find bugs<font color="#E5E5E5"> and defects and</font>

31
00:01:30,500 --> 00:01:37,730
I also enjoy hacking<font color="#E5E5E5"> and people</font><font color="#CCCCCC"> okay</font><font color="#E5E5E5"> I</font>

32
00:01:34,480 --> 00:01:39,110
also want to thank<font color="#E5E5E5"> all our students and</font>

33
00:01:37,730 --> 00:01:42,170
other group members<font color="#E5E5E5"> as I already</font>

34
00:01:39,110 --> 00:01:47,030
mentioned<font color="#E5E5E5"> without their work and support</font>

35
00:01:42,170 --> 00:01:48,890
we would<font color="#CCCCCC"> not be</font><font color="#E5E5E5"> here</font><font color="#CCCCCC"> I think everybody</font>

36
00:01:47,030 --> 00:01:50,990
is<font color="#CCCCCC"> aware of</font><font color="#E5E5E5"> the problem</font><font color="#CCCCCC"> you use</font>

37
00:01:48,890 --> 00:01:54,200
<font color="#E5E5E5">different services</font><font color="#CCCCCC"> mail YouTube whatever</font>

38
00:01:50,990 --> 00:01:56,839
<font color="#E5E5E5">and for each service you need some some</font>

39
00:01:54,200 --> 00:01:58,850
account credentials<font color="#E5E5E5"> password everywhere</font>

40
00:01:56,840 --> 00:02:01,460
<font color="#E5E5E5">you have</font><font color="#CCCCCC"> a password policy you know</font>

41
00:01:58,850 --> 00:02:04,580
<font color="#CCCCCC">lengths hundred characters uppercase</font>

42
00:02:01,460 --> 00:02:05,949
lowercase<font color="#E5E5E5"> stitches Chinese sign</font><font color="#CCCCCC"> Klingon</font>

43
00:02:04,580 --> 00:02:08,399
whatever

44
00:02:05,950 --> 00:02:10,780
and for each<font color="#E5E5E5"> account security</font>

45
00:02:08,399 --> 00:02:13,750
<font color="#CCCCCC">specialists also recommend different</font>

46
00:02:10,780 --> 00:02:16,150
passwords and there's now a very nice

47
00:02:13,750 --> 00:02:19,470
garnish<font color="#E5E5E5"> study which says</font><font color="#CCCCCC"> never reach you</font>

48
00:02:16,150 --> 00:02:22,209
guys<font color="#E5E5E5"> around 90</font><font color="#CCCCCC"> different passwords</font><font color="#E5E5E5"> and</font>

49
00:02:19,470 --> 00:02:25,690
the<font color="#E5E5E5"> problem is now how do you keep all</font>

50
00:02:22,209 --> 00:02:28,000
<font color="#E5E5E5">these passwords in mind so the stupid</font>

51
00:02:25,690 --> 00:02:29,349
solution put it somewhere<font color="#CCCCCC"> on a post-it</font>

52
00:02:28,000 --> 00:02:33,489
<font color="#E5E5E5">on your keyboard write it down or</font>

53
00:02:29,349 --> 00:02:35,589
<font color="#CCCCCC">something so where the software</font>

54
00:02:33,489 --> 00:02:38,470
developers<font color="#CCCCCC"> they</font><font color="#E5E5E5"> recognize the problem</font>

55
00:02:35,590 --> 00:02:40,420
and<font color="#E5E5E5"> introduce so called password manager</font>

56
00:02:38,470 --> 00:02:44,260
for instance everybody<font color="#E5E5E5"> knows that the</font>

57
00:02:40,420 --> 00:02:46,420
internal password manager of Firefox<font color="#E5E5E5"> so</font>

58
00:02:44,260 --> 00:02:48,849
if you have now any web service<font color="#E5E5E5"> you can</font>

59
00:02:46,420 --> 00:02:51,578
store your credentials in the<font color="#E5E5E5"> password</font>

60
00:02:48,849 --> 00:02:53,828
<font color="#E5E5E5">manager and if you go to the side the</font>

61
00:02:51,579 --> 00:02:57,910
the<font color="#E5E5E5"> password</font><font color="#CCCCCC"> manager</font><font color="#E5E5E5"> automatically fills</font>

62
00:02:53,829 --> 00:03:00,310
the form<font color="#E5E5E5"> the third part</font><font color="#CCCCCC"> are so-called</font>

63
00:02:57,910 --> 00:03:03,690
<font color="#E5E5E5">third party password managers they also</font>

64
00:03:00,310 --> 00:03:06,849
support for<font color="#E5E5E5"> instance application and</font>

65
00:03:03,690 --> 00:03:09,459
this<font color="#E5E5E5"> this third party password manager</font>

66
00:03:06,849 --> 00:03:12,429
our focus or what's<font color="#E5E5E5"> the focus of our</font>

67
00:03:09,459 --> 00:03:15,069
<font color="#CCCCCC">study so if we look at some</font>

68
00:03:12,430 --> 00:03:18,239
advertisement promise you will see that

69
00:03:15,069 --> 00:03:21,690
they<font color="#E5E5E5"> pronounce</font><font color="#CCCCCC"> bank level security</font>

70
00:03:18,239 --> 00:03:24,579
<font color="#CCCCCC">military-grade</font><font color="#E5E5E5"> security whatever and</font>

71
00:03:21,690 --> 00:03:27,250
this is in some<font color="#E5E5E5"> kind of legitimate</font>

72
00:03:24,579 --> 00:03:30,370
because<font color="#E5E5E5"> they use AES 256-bit encryption</font>

73
00:03:27,250 --> 00:03:33,130
<font color="#E5E5E5">and as much I know or we know currently</font>

74
00:03:30,370 --> 00:03:36,880
<font color="#E5E5E5">AES is not really broken it's a secure</font>

75
00:03:33,130 --> 00:03:39,400
algorithm but the question is we do not

76
00:03:36,880 --> 00:03:41,650
<font color="#E5E5E5">want to break the encryption itself</font><font color="#CCCCCC"> but</font>

77
00:03:39,400 --> 00:03:44,769
are there<font color="#CCCCCC"> any ways implementation flaws</font>

78
00:03:41,650 --> 00:03:49,389
logic flaws whatever<font color="#E5E5E5"> that we can just</font>

79
00:03:44,769 --> 00:03:52,420
<font color="#E5E5E5">simply bypass the encryption</font><font color="#CCCCCC"> here is the</font>

80
00:03:49,389 --> 00:03:54,489
<font color="#CCCCCC">fraud</font><font color="#E5E5E5"> overview about the</font><font color="#CCCCCC"> Android apps we</font>

81
00:03:52,420 --> 00:03:57,010
we take a look<font color="#E5E5E5"> into</font><font color="#CCCCCC"> it as you can see</font>

82
00:03:54,489 --> 00:03:59,650
there are some well-known<font color="#CCCCCC"> password</font>

83
00:03:57,010 --> 00:04:03,548
managers like dash line LastPass or<font color="#CCCCCC"> a</font>

84
00:03:59,650 --> 00:04:06,639
<font color="#CCCCCC">keeper security but also a bit not so</font>

85
00:04:03,549 --> 00:04:08,260
<font color="#CCCCCC">well known</font><font color="#E5E5E5"> small implementations so we</font>

86
00:04:06,639 --> 00:04:10,389
have a good good mixture<font color="#E5E5E5"> of</font><font color="#CCCCCC"> four</font>

87
00:04:08,260 --> 00:04:12,489
different<font color="#E5E5E5"> code there was no special</font>

88
00:04:10,389 --> 00:04:15,189
reasons why we choose this one this<font color="#E5E5E5"> is</font>

89
00:04:12,489 --> 00:04:17,890
<font color="#E5E5E5">just randomly pick you have a few</font>

90
00:04:15,189 --> 00:04:19,620
<font color="#E5E5E5">students group them up and take a look</font>

91
00:04:17,890 --> 00:04:22,530
into<font color="#E5E5E5"> them</font>

92
00:04:19,620 --> 00:04:26,130
<font color="#E5E5E5">okay what can a</font><font color="#CCCCCC"> possible</font><font color="#E5E5E5"> manager what</font>

93
00:04:22,530 --> 00:04:28,729
defines a typical password manager<font color="#E5E5E5"> so</font>

94
00:04:26,130 --> 00:04:31,500
the first feature function of course<font color="#E5E5E5"> is</font>

95
00:04:28,729 --> 00:04:34,349
storing your passwords confidential

96
00:04:31,500 --> 00:04:37,650
somewhere<font color="#CCCCCC"> an encrypted file in a</font>

97
00:04:34,350 --> 00:04:39,290
database<font color="#E5E5E5"> or in some other container the</font>

98
00:04:37,650 --> 00:04:42,210
second feature they provided also

99
00:04:39,290 --> 00:04:45,210
synchronization<font color="#E5E5E5"> so you</font><font color="#CCCCCC"> do not only</font><font color="#E5E5E5"> store</font>

100
00:04:42,210 --> 00:04:47,760
<font color="#E5E5E5">the</font><font color="#CCCCCC"> credentials</font><font color="#E5E5E5"> locally on your</font><font color="#CCCCCC"> device</font>

101
00:04:45,210 --> 00:04:50,520
<font color="#CCCCCC">you can</font><font color="#E5E5E5"> synchronize it in a more or less</font>

102
00:04:47,760 --> 00:04:52,530
secure way with the provider<font color="#E5E5E5"> back-end so</font>

103
00:04:50,520 --> 00:04:55,229
if you use the<font color="#E5E5E5"> password</font><font color="#CCCCCC"> manager for</font>

104
00:04:52,530 --> 00:04:57,770
instance<font color="#CCCCCC"> also on a Windows desktop you</font>

105
00:04:55,229 --> 00:05:01,919
just can can synchronize your<font color="#E5E5E5"> container</font>

106
00:04:57,770 --> 00:05:04,620
<font color="#E5E5E5">we have called autofill feature which is</font>

107
00:05:01,919 --> 00:05:07,020
just if you go to a website or open an

108
00:05:04,620 --> 00:05:10,050
application<font color="#CCCCCC"> the password manager</font>

109
00:05:07,020 --> 00:05:12,120
<font color="#E5E5E5">automatically detects this application</font>

110
00:05:10,050 --> 00:05:16,020
and automatically pastes<font color="#E5E5E5"> your credential</font>

111
00:05:12,120 --> 00:05:18,600
into the form some also deliver a custom

112
00:05:16,020 --> 00:05:21,270
browser<font color="#E5E5E5"> which makes it easier to handle</font>

113
00:05:18,600 --> 00:05:23,340
the autofill function<font color="#E5E5E5"> and also some</font>

114
00:05:21,270 --> 00:05:25,440
convenience or<font color="#CCCCCC"> confer feature for</font>

115
00:05:23,340 --> 00:05:28,020
<font color="#E5E5E5">instances for each password manager you</font>

116
00:05:25,440 --> 00:05:29,729
need<font color="#E5E5E5"> a master password and if you cannot</font>

117
00:05:28,020 --> 00:05:31,620
remember to the master password or<font color="#CCCCCC"> if</font>

118
00:05:29,729 --> 00:05:35,190
you're too<font color="#E5E5E5"> lazy</font><font color="#CCCCCC"> you just can shorten</font>

119
00:05:31,620 --> 00:05:38,789
this<font color="#E5E5E5"> and use a four-digit pin and the</font>

120
00:05:35,190 --> 00:05:41,250
question and<font color="#E5E5E5"> our target was now can we</font>

121
00:05:38,789 --> 00:05:44,159
somehow<font color="#E5E5E5"> compromise these features</font>

122
00:05:41,250 --> 00:05:46,800
<font color="#CCCCCC">without any route if we let's say have</font>

123
00:05:44,160 --> 00:05:49,020
root<font color="#E5E5E5"> access on the device the security</font>

124
00:05:46,800 --> 00:05:51,660
is nearly<font color="#E5E5E5"> broken by design because then</font>

125
00:05:49,020 --> 00:05:55,260
we can bypass the sandbox<font color="#E5E5E5"> you can can</font>

126
00:05:51,660 --> 00:05:57,870
dump the memory<font color="#E5E5E5"> we can can lock the key</font>

127
00:05:55,260 --> 00:06:00,630
inputs<font color="#E5E5E5"> and fish the password so our</font>

128
00:05:57,870 --> 00:06:03,960
<font color="#E5E5E5">target was now to find logic flaws or</font>

129
00:06:00,630 --> 00:06:09,050
implementation flaws<font color="#E5E5E5"> to compromise this</font>

130
00:06:03,960 --> 00:06:11,940
feature<font color="#E5E5E5"> without any root privileges</font><font color="#CCCCCC"> ok</font>

131
00:06:09,050 --> 00:06:13,889
the first<font color="#E5E5E5"> let's a problem let's call it</font>

132
00:06:11,940 --> 00:06:15,750
mega problem<font color="#E5E5E5"> this is not really a</font>

133
00:06:13,889 --> 00:06:18,900
<font color="#E5E5E5">vulnerability or something this</font><font color="#CCCCCC"> is just</font>

134
00:06:15,750 --> 00:06:20,729
let's say more<font color="#E5E5E5"> or less design flaw</font><font color="#CCCCCC"> it</font>

135
00:06:18,900 --> 00:06:24,450
depends on the context<font color="#E5E5E5"> of play of the</font>

136
00:06:20,729 --> 00:06:28,289
<font color="#E5E5E5">application</font><font color="#CCCCCC"> this feature can make</font>

137
00:06:24,450 --> 00:06:31,080
problems<font color="#CCCCCC"> or or</font><font color="#E5E5E5"> not</font><font color="#CCCCCC"> I will show this more</font>

138
00:06:28,289 --> 00:06:33,310
now in<font color="#E5E5E5"> detail let's assume some some</font>

139
00:06:31,080 --> 00:06:35,380
attacker get physical access<font color="#CCCCCC"> to</font>

140
00:06:33,310 --> 00:06:38,020
you to your device he steals<font color="#E5E5E5"> it he finds</font>

141
00:06:35,380 --> 00:06:40,900
<font color="#E5E5E5">us</font><font color="#CCCCCC"> and he can somehow bypass the lock</font>

142
00:06:38,020 --> 00:06:44,080
<font color="#E5E5E5">screen so like there's a</font><font color="#CCCCCC"> big</font><font color="#E5E5E5"> pattern or</font>

143
00:06:40,900 --> 00:06:46,270
much attack or or<font color="#E5E5E5"> whatever so in the</font>

144
00:06:44,080 --> 00:06:48,909
<font color="#E5E5E5">first step you can just simply connect</font>

145
00:06:46,270 --> 00:06:51,580
the<font color="#E5E5E5"> device to your</font><font color="#CCCCCC"> computer and you can</font>

146
00:06:48,910 --> 00:06:54,790
<font color="#E5E5E5">activate</font><font color="#CCCCCC"> the so-called</font><font color="#E5E5E5"> debug feature the</font>

147
00:06:51,580 --> 00:06:56,770
<font color="#CCCCCC">IDB feature is some developer support</font><font color="#E5E5E5"> on</font>

148
00:06:54,790 --> 00:07:00,490
an<font color="#CCCCCC"> Android device which allows</font><font color="#E5E5E5"> you</font><font color="#CCCCCC"> to</font>

149
00:06:56,770 --> 00:07:02,560
connect<font color="#CCCCCC"> your PC</font><font color="#E5E5E5"> with the device if you</font>

150
00:07:00,490 --> 00:07:05,080
<font color="#CCCCCC">can now if you can connect the device</font>

151
00:07:02,560 --> 00:07:07,210
now to the computer<font color="#E5E5E5"> you can open via</font><font color="#CCCCCC"> adb</font>

152
00:07:05,080 --> 00:07:08,109
some shell<font color="#E5E5E5"> but this cell is still</font>

153
00:07:07,210 --> 00:07:10,180
restricted

154
00:07:08,110 --> 00:07:13,030
this means the<font color="#E5E5E5"> sandboxing isn't is</font>

155
00:07:10,180 --> 00:07:15,820
active<font color="#E5E5E5"> you cannot look into the local</font>

156
00:07:13,030 --> 00:07:19,750
app folder<font color="#E5E5E5"> he cannot copy your for</font>

157
00:07:15,820 --> 00:07:22,450
<font color="#E5E5E5">instance stored credentials whatever but</font>

158
00:07:19,750 --> 00:07:24,430
if the developer<font color="#CCCCCC"> for instance</font><font color="#E5E5E5"> define a</font>

159
00:07:22,450 --> 00:07:27,370
<font color="#E5E5E5">flag in the</font><font color="#CCCCCC"> app which</font><font color="#E5E5E5"> is</font><font color="#CCCCCC"> called</font><font color="#E5E5E5"> a</font><font color="#CCCCCC"> loud</font>

160
00:07:24,430 --> 00:07:29,980
<font color="#E5E5E5">backup flag they've activated some some</font>

161
00:07:27,370 --> 00:07:33,460
backup feature<font color="#E5E5E5"> this means the attacker</font>

162
00:07:29,980 --> 00:07:36,430
<font color="#E5E5E5">or the owner of the</font><font color="#CCCCCC"> device can now use</font>

163
00:07:33,460 --> 00:07:39,099
the adb to backup this the target

164
00:07:36,430 --> 00:07:43,530
application<font color="#CCCCCC"> the spec above the target</font>

165
00:07:39,100 --> 00:07:46,180
application<font color="#E5E5E5"> is more or</font><font color="#CCCCCC"> less a simple</font>

166
00:07:43,530 --> 00:07:48,789
container<font color="#E5E5E5"> which can convert</font><font color="#CCCCCC"> it to entire</font>

167
00:07:46,180 --> 00:07:51,690
<font color="#CCCCCC">archives and in this</font><font color="#E5E5E5"> archives is now all</font>

168
00:07:48,790 --> 00:07:55,990
<font color="#E5E5E5">the</font><font color="#CCCCCC"> data from the local</font><font color="#E5E5E5"> app folder and</font>

169
00:07:51,690 --> 00:07:58,090
this app this<font color="#E5E5E5"> archives you</font><font color="#CCCCCC"> can now under</font>

170
00:07:55,990 --> 00:08:00,310
on the computer you can<font color="#E5E5E5"> now extract this</font>

171
00:07:58,090 --> 00:08:02,590
folder<font color="#E5E5E5"> and there for instance</font><font color="#CCCCCC"> there was</font>

172
00:08:00,310 --> 00:08:04,990
one<font color="#CCCCCC"> password manager he had a so-called</font>

173
00:08:02,590 --> 00:08:07,330
key storage<font color="#E5E5E5"> file and if you look at this</font>

174
00:08:04,990 --> 00:08:09,610
keystore file that<font color="#E5E5E5"> was stored the master</font>

175
00:08:07,330 --> 00:08:12,849
password or<font color="#E5E5E5"> the master secret just in</font>

176
00:08:09,610 --> 00:08:15,250
plain<font color="#CCCCCC"> text so here we have two</font><font color="#E5E5E5"> things</font>

177
00:08:12,850 --> 00:08:17,140
<font color="#E5E5E5">the one is the problem of the design</font>

178
00:08:15,250 --> 00:08:19,000
decision activating the backup feature

179
00:08:17,140 --> 00:08:20,860
with this<font color="#E5E5E5"> which</font><font color="#CCCCCC"> is not really required</font>

180
00:08:19,000 --> 00:08:22,780
<font color="#CCCCCC">on this app because it has the</font>

181
00:08:20,860 --> 00:08:27,670
synchronizing mechanism<font color="#CCCCCC"> with the</font><font color="#E5E5E5"> back</font>

182
00:08:22,780 --> 00:08:29,440
<font color="#E5E5E5">end so</font><font color="#CCCCCC"> this</font><font color="#E5E5E5"> lag is not necessary</font><font color="#CCCCCC"> and</font><font color="#E5E5E5"> on</font>

183
00:08:27,670 --> 00:08:31,540
the other<font color="#E5E5E5"> side</font><font color="#CCCCCC"> as you can see storing</font>

184
00:08:29,440 --> 00:08:36,039
<font color="#E5E5E5">this the master</font><font color="#CCCCCC"> key or master</font><font color="#E5E5E5"> password</font>

185
00:08:31,540 --> 00:08:38,320
in plain<font color="#CCCCCC"> text is not the best idea</font><font color="#E5E5E5"> so</font>

186
00:08:36,039 --> 00:08:40,390
<font color="#CCCCCC">I've already talked a lot about the</font>

187
00:08:38,320 --> 00:08:42,940
<font color="#CCCCCC">descent boxing and the open</font><font color="#E5E5E5"> and the</font>

188
00:08:40,390 --> 00:08:44,890
local app folder here<font color="#E5E5E5"> is another way or</font>

189
00:08:42,940 --> 00:08:46,930
we tried another<font color="#CCCCCC"> way to bypass it let's</font>

190
00:08:44,890 --> 00:08:50,170
<font color="#E5E5E5">assume there is no backup flag</font>

191
00:08:46,930 --> 00:08:54,189
and we have no<font color="#E5E5E5"> root</font><font color="#CCCCCC"> there's another way</font>

192
00:08:50,170 --> 00:08:56,500
<font color="#CCCCCC">at first a short introduction on Android</font>

193
00:08:54,190 --> 00:08:59,350
<font color="#E5E5E5">you</font><font color="#CCCCCC"> have millions of apps</font><font color="#E5E5E5"> and so you</font>

194
00:08:56,500 --> 00:09:02,590
also have a lot<font color="#CCCCCC"> of different browsers</font>

195
00:08:59,350 --> 00:09:05,680
<font color="#E5E5E5">more than on desktop</font><font color="#CCCCCC"> world we have also</font>

196
00:09:02,590 --> 00:09:08,500
Firefox another<font color="#E5E5E5"> solution and as I</font>

197
00:09:05,680 --> 00:09:10,630
already already mentioned the password

198
00:09:08,500 --> 00:09:13,060
<font color="#E5E5E5">manager provides some kind of autofill</font>

199
00:09:10,630 --> 00:09:15,580
feature so you<font color="#E5E5E5"> see on the corner our</font>

200
00:09:13,060 --> 00:09:18,010
password manager and the<font color="#CCCCCC"> idea of the</font>

201
00:09:15,580 --> 00:09:19,090
manager is now we want to<font color="#CCCCCC"> paste</font>

202
00:09:18,010 --> 00:09:21,730
automatically

203
00:09:19,090 --> 00:09:23,410
our credential<font color="#E5E5E5"> in this in this field</font>

204
00:09:21,730 --> 00:09:26,200
<font color="#E5E5E5">when the user wants to login into a</font>

205
00:09:23,410 --> 00:09:29,530
service and the best solution would be

206
00:09:26,200 --> 00:09:33,040
<font color="#E5E5E5">if we paste the credentials and use some</font>

207
00:09:29,530 --> 00:09:35,199
kind of common API from which we can

208
00:09:33,040 --> 00:09:36,910
access the browser element but<font color="#E5E5E5"> the</font>

209
00:09:35,200 --> 00:09:38,530
problem is as I mentioned<font color="#E5E5E5"> different</font>

210
00:09:36,910 --> 00:09:41,860
browser different technique different

211
00:09:38,530 --> 00:09:46,079
providers<font color="#E5E5E5"> there is no such API so this</font>

212
00:09:41,860 --> 00:09:51,310
approach<font color="#E5E5E5"> is not working</font><font color="#CCCCCC"> and some</font>

213
00:09:46,080 --> 00:09:53,590
password manager<font color="#E5E5E5"> vendor had an idea so</font>

214
00:09:51,310 --> 00:09:56,260
we provide our<font color="#CCCCCC"> own browser because</font><font color="#E5E5E5"> the</font>

215
00:09:53,590 --> 00:09:58,990
<font color="#E5E5E5">browser is part of the app so this means</font>

216
00:09:56,260 --> 00:10:01,480
we can<font color="#CCCCCC"> control</font><font color="#E5E5E5"> the browser and if it's</font>

217
00:09:58,990 --> 00:10:07,780
because<font color="#E5E5E5"> it's</font><font color="#CCCCCC"> our browser</font><font color="#E5E5E5"> we can use this</font>

218
00:10:01,480 --> 00:10:10,660
out of the feature but with this<font color="#E5E5E5"> self</font>

219
00:10:07,780 --> 00:10:12,790
implemented browser<font color="#E5E5E5"> you can</font><font color="#CCCCCC"> imagine it's</font>

220
00:10:10,660 --> 00:10:15,640
not<font color="#E5E5E5"> so easy</font><font color="#CCCCCC"> to implement</font><font color="#E5E5E5"> a browser in</font>

221
00:10:12,790 --> 00:10:17,920
the correct way<font color="#E5E5E5"> and so we thought</font>

222
00:10:15,640 --> 00:10:21,189
perhaps<font color="#CCCCCC"> we</font><font color="#E5E5E5"> can</font><font color="#CCCCCC"> use this browser</font><font color="#E5E5E5"> as some</font>

223
00:10:17,920 --> 00:10:23,680
kind<font color="#E5E5E5"> of attack point and the idea</font><font color="#CCCCCC"> is now</font>

224
00:10:21,190 --> 00:10:26,020
to abuse this browser<font color="#E5E5E5"> when we have</font>

225
00:10:23,680 --> 00:10:29,140
access<font color="#E5E5E5"> for instance to the device can we</font>

226
00:10:26,020 --> 00:10:32,380
use this<font color="#E5E5E5"> a</font><font color="#CCCCCC"> bra abuse this</font><font color="#E5E5E5"> browser to</font>

227
00:10:29,140 --> 00:10:34,270
jump<font color="#E5E5E5"> into the local app folder so to say</font>

228
00:10:32,380 --> 00:10:38,230
simple somehow bypass<font color="#CCCCCC"> there the</font>

229
00:10:34,270 --> 00:10:40,449
sandboxing<font color="#E5E5E5"> okay how is the browser</font>

230
00:10:38,230 --> 00:10:41,940
constructed<font color="#CCCCCC"> at first as I already said</font>

231
00:10:40,450 --> 00:10:45,040
<font color="#E5E5E5">the browser is part of the application</font>

232
00:10:41,940 --> 00:10:48,250
<font color="#CCCCCC">so this is just</font><font color="#E5E5E5"> let's say one bundle</font><font color="#CCCCCC"> and</font>

233
00:10:45,040 --> 00:10:50,860
this means the browser is running<font color="#E5E5E5"> in the</font>

234
00:10:48,250 --> 00:10:53,230
same<font color="#CCCCCC"> process</font><font color="#E5E5E5"> as the application so it's</font>

235
00:10:50,860 --> 00:10:55,690
part of the whole sandbox<font color="#CCCCCC"> this means the</font>

236
00:10:53,230 --> 00:11:00,130
browser is also<font color="#E5E5E5"> access to the local</font>

237
00:10:55,690 --> 00:11:00,940
files of the application<font color="#CCCCCC"> browsers or to</font>

238
00:11:00,130 --> 00:11:04,390
implement

239
00:11:00,940 --> 00:11:06,670
<font color="#E5E5E5">on Android is not so so difficult so you</font>

240
00:11:04,390 --> 00:11:09,280
don't have to implement your<font color="#CCCCCC"> own browser</font>

241
00:11:06,670 --> 00:11:12,670
<font color="#E5E5E5">engine or</font><font color="#CCCCCC"> whatever you just</font><font color="#E5E5E5"> can use an</font>

242
00:11:09,280 --> 00:11:15,760
API<font color="#E5E5E5"> which is called the webview in the</font>

243
00:11:12,670 --> 00:11:17,380
past it was based on the WebKit engine

244
00:11:15,760 --> 00:11:19,750
now it's based on the<font color="#CCCCCC"> the chromium</font>

245
00:11:17,380 --> 00:11:23,470
engine<font color="#E5E5E5"> and with this API you can very</font>

246
00:11:19,750 --> 00:11:27,280
easy<font color="#E5E5E5"> implement browser feature and</font>

247
00:11:23,470 --> 00:11:30,690
another important<font color="#E5E5E5"> fun effective the</font>

248
00:11:27,280 --> 00:11:34,209
webview<font color="#E5E5E5"> support file URIs or file access</font>

249
00:11:30,690 --> 00:11:37,900
so now imagine this is our<font color="#E5E5E5"> browser bar</font>

250
00:11:34,210 --> 00:11:40,290
from the<font color="#CCCCCC"> self implemented browser what</font>

251
00:11:37,900 --> 00:11:43,660
will happen now if we enter<font color="#E5E5E5"> just the</font>

252
00:11:40,290 --> 00:11:46,209
path of the application folder and for

253
00:11:43,660 --> 00:11:50,050
instance some<font color="#E5E5E5"> XML file which</font><font color="#CCCCCC"> contains</font>

254
00:11:46,210 --> 00:11:53,440
<font color="#E5E5E5">the stored password master key or other</font>

255
00:11:50,050 --> 00:11:56,260
<font color="#CCCCCC">other information</font><font color="#E5E5E5"> yep it will be listed</font>

256
00:11:53,440 --> 00:11:59,230
as you can see this looks a bit strange

257
00:11:56,260 --> 00:12:02,800
<font color="#E5E5E5">to this one example of a password</font>

258
00:11:59,230 --> 00:12:06,150
manager which uses some occupation<font color="#E5E5E5"> this</font>

259
00:12:02,800 --> 00:12:09,520
is just an md5 value of the attribute

260
00:12:06,150 --> 00:12:13,120
<font color="#CCCCCC">pin</font><font color="#E5E5E5"> code value so as you can imagine</font><font color="#CCCCCC"> the</font>

261
00:12:09,520 --> 00:12:15,730
<font color="#E5E5E5">next one is the stored pin or master</font>

262
00:12:13,120 --> 00:12:19,590
<font color="#CCCCCC">password as you can see on the one sided</font>

263
00:12:15,730 --> 00:12:22,450
space 64 encoded but it's also encrypted

264
00:12:19,590 --> 00:12:26,170
<font color="#CCCCCC">there's a classic</font><font color="#E5E5E5"> encryption with some</font>

265
00:12:22,450 --> 00:12:29,170
key and the plaintext<font color="#CCCCCC"> and the question</font>

266
00:12:26,170 --> 00:12:31,390
is<font color="#E5E5E5"> now yeah the master we have the</font>

267
00:12:29,170 --> 00:12:34,740
<font color="#E5E5E5">master password</font><font color="#CCCCCC"> it's encrypted how can</font>

268
00:12:31,390 --> 00:12:38,770
we<font color="#E5E5E5"> decrypt it</font><font color="#CCCCCC"> or how can we break</font><font color="#E5E5E5"> it and</font>

269
00:12:34,740 --> 00:12:43,840
this question will now<font color="#CCCCCC"> answer my</font>

270
00:12:38,770 --> 00:12:46,240
colleague even<font color="#CCCCCC"> ok so a lot of people do</font>

271
00:12:43,840 --> 00:12:48,130
crypto<font color="#E5E5E5"> to protect things especially in</font>

272
00:12:46,240 --> 00:12:50,680
password managers but unfortunately most

273
00:12:48,130 --> 00:12:53,980
<font color="#E5E5E5">of the crypto is cause severe</font><font color="#CCCCCC"> lis broken</font>

274
00:12:50,680 --> 00:12:56,890
let me just go back<font color="#CCCCCC"> a couple of decays</font>

275
00:12:53,980 --> 00:12:58,930
to to a guy called Karkov and he just

276
00:12:56,890 --> 00:13:00,939
said whenever<font color="#E5E5E5"> you're</font><font color="#CCCCCC"> doing crypto make</font>

277
00:12:58,930 --> 00:13:03,069
sure that the crypto system is safe as

278
00:13:00,940 --> 00:13:04,720
long<font color="#E5E5E5"> as no</font><font color="#CCCCCC"> one knows</font><font color="#E5E5E5"> the key but people</font>

279
00:13:03,070 --> 00:13:06,700
can know everything<font color="#CCCCCC"> else in the world</font>

280
00:13:04,720 --> 00:13:07,960
<font color="#CCCCCC">like how your algorithm works what</font><font color="#E5E5E5"> the</font>

281
00:13:06,700 --> 00:13:09,400
name<font color="#E5E5E5"> of your</font><font color="#CCCCCC"> grandmother is it doesn't</font>

282
00:13:07,960 --> 00:13:11,320
<font color="#CCCCCC">matter</font><font color="#E5E5E5"> as long as he doesn't</font><font color="#CCCCCC"> get the key</font>

283
00:13:09,400 --> 00:13:14,529
<font color="#E5E5E5">you</font><font color="#CCCCCC"> shouldn't be able</font><font color="#E5E5E5"> to break a system</font>

284
00:13:11,320 --> 00:13:17,109
this is fairly<font color="#E5E5E5"> well known</font>

285
00:13:14,529 --> 00:13:20,309
this guy is<font color="#CCCCCC"> dead for</font><font color="#E5E5E5"> a while now but</font>

286
00:13:17,109 --> 00:13:23,319
<font color="#CCCCCC">anyway</font><font color="#E5E5E5"> it still fails for for many apps</font>

287
00:13:20,309 --> 00:13:25,689
<font color="#E5E5E5">now let's first look into how you would</font>

288
00:13:23,319 --> 00:13:28,449
<font color="#E5E5E5">normally assume that a kind of sensible</font>

289
00:13:25,689 --> 00:13:30,098
<font color="#CCCCCC">posit manager implements encryption</font><font color="#E5E5E5"> you</font>

290
00:13:28,449 --> 00:13:31,809
have a master password that is entered

291
00:13:30,099 --> 00:13:33,519
<font color="#CCCCCC">by the user</font><font color="#E5E5E5"> and that protects the</font>

292
00:13:31,809 --> 00:13:35,799
password database<font color="#E5E5E5"> so you would assume</font>

293
00:13:33,519 --> 00:13:37,359
<font color="#CCCCCC">that</font><font color="#E5E5E5"> some of the user password is used</font>

294
00:13:35,799 --> 00:13:39,069
to encrypt the password database you get

295
00:13:37,359 --> 00:13:40,359
a cipher text you dump it on disk<font color="#E5E5E5"> unless</font>

296
00:13:39,069 --> 00:13:42,488
you know the user password<font color="#CCCCCC"> you're out of</font>

297
00:13:40,359 --> 00:13:44,769
luck<font color="#E5E5E5"> what would you do</font><font color="#CCCCCC"> you would</font><font color="#E5E5E5"> take</font>

298
00:13:42,489 --> 00:13:47,879
the user password<font color="#CCCCCC"> put it into some key</font>

299
00:13:44,769 --> 00:13:51,699
derivation function like pbkdf2

300
00:13:47,879 --> 00:13:54,309
<font color="#CCCCCC">plus some solve this gives you a key</font>

301
00:13:51,699 --> 00:13:55,329
which<font color="#CCCCCC"> you</font><font color="#E5E5E5"> then put into a cipher to</font>

302
00:13:54,309 --> 00:13:57,218
encrypt it out of it you get<font color="#E5E5E5"> a</font>

303
00:13:55,329 --> 00:13:59,649
<font color="#E5E5E5">ciphertext</font><font color="#CCCCCC"> I'm rushing</font><font color="#E5E5E5"> a bit through</font>

304
00:13:57,219 --> 00:14:01,539
this essentially<font color="#E5E5E5"> this just means you</font>

305
00:13:59,649 --> 00:14:03,129
have a proper<font color="#CCCCCC"> algorithm here</font><font color="#E5E5E5"> that you</font>

306
00:14:01,539 --> 00:14:05,229
can<font color="#E5E5E5"> look up look up in a good crypto</font>

307
00:14:03,129 --> 00:14:07,329
textbook use a proper<font color="#CCCCCC"> implementation</font>

308
00:14:05,229 --> 00:14:08,919
that<font color="#CCCCCC"> is</font><font color="#E5E5E5"> already there in Android use</font>

309
00:14:07,329 --> 00:14:10,238
another proper algorithm<font color="#CCCCCC"> from the</font>

310
00:14:08,919 --> 00:14:14,409
<font color="#E5E5E5">textbook</font><font color="#CCCCCC"> with a proper implementation</font>

311
00:14:10,239 --> 00:14:17,309
<font color="#CCCCCC">that is there on</font><font color="#E5E5E5"> Android now where can</font>

312
00:14:14,409 --> 00:14:20,589
this break<font color="#E5E5E5"> some applications for example</font>

313
00:14:17,309 --> 00:14:21,219
<font color="#CCCCCC">they instead of putting there a proper</font>

314
00:14:20,589 --> 00:14:25,269
<font color="#CCCCCC">soul</font>

315
00:14:21,220 --> 00:14:28,959
they put a<font color="#E5E5E5"> static</font><font color="#CCCCCC"> value so what this</font><font color="#E5E5E5"> all</font>

316
00:14:25,269 --> 00:14:31,419
is about<font color="#CCCCCC"> it's add some randomness</font><font color="#E5E5E5"> to</font><font color="#CCCCCC"> the</font>

317
00:14:28,959 --> 00:14:33,189
key derivation<font color="#E5E5E5"> because if we do not</font><font color="#CCCCCC"> have</font>

318
00:14:31,419 --> 00:14:35,379
this<font color="#E5E5E5"> all then this means every user</font>

319
00:14:33,189 --> 00:14:36,759
password that runs through the KDF<font color="#CCCCCC"> links</font>

320
00:14:35,379 --> 00:14:38,949
to the same<font color="#CCCCCC"> encryption key</font>

321
00:14:36,759 --> 00:14:41,949
this means<font color="#E5E5E5"> I can pre-compute a table</font>

322
00:14:38,949 --> 00:14:43,269
like a<font color="#CCCCCC"> rainbow table</font><font color="#E5E5E5"> and then this takes</font>

323
00:14:41,949 --> 00:14:45,098
me some time but<font color="#CCCCCC"> then</font><font color="#E5E5E5"> I can very</font>

324
00:14:43,269 --> 00:14:47,049
efficiently crack all installations<font color="#E5E5E5"> of</font>

325
00:14:45,099 --> 00:14:50,619
the<font color="#E5E5E5"> password manager</font><font color="#CCCCCC"> by just applying</font>

326
00:14:47,049 --> 00:14:52,809
this table to<font color="#E5E5E5"> this</font><font color="#CCCCCC"> KDF process we</font>

327
00:14:50,619 --> 00:14:55,539
<font color="#CCCCCC">dissolve however this means</font><font color="#E5E5E5"> that the</font>

328
00:14:52,809 --> 00:14:57,159
salt kind of customizes<font color="#CCCCCC"> the KDF store</font>

329
00:14:55,539 --> 00:14:59,619
would need to generate one table per

330
00:14:57,159 --> 00:15:01,389
<font color="#E5E5E5">soul which makes it fairly inefficient</font>

331
00:14:59,619 --> 00:15:03,609
<font color="#CCCCCC">to have</font><font color="#E5E5E5"> pre-computation</font>

332
00:15:01,389 --> 00:15:05,259
again this only<font color="#CCCCCC"> vs.</font><font color="#E5E5E5"> everybody is using a</font>

333
00:15:03,609 --> 00:15:07,599
different<font color="#CCCCCC"> salt</font><font color="#E5E5E5"> so just putting a</font>

334
00:15:05,259 --> 00:15:09,609
<font color="#E5E5E5">hard-coded salt of zero it's not going</font>

335
00:15:07,599 --> 00:15:15,159
to do the trick<font color="#CCCCCC"> but we have been</font><font color="#E5E5E5"> seen</font>

336
00:15:09,609 --> 00:15:17,739
<font color="#E5E5E5">this various times the next comes bad</font>

337
00:15:15,159 --> 00:15:20,468
idea we've seen<font color="#E5E5E5"> various times is people</font>

338
00:15:17,739 --> 00:15:23,319
take the user password<font color="#CCCCCC"> and then they say</font>

339
00:15:20,469 --> 00:15:25,749
<font color="#CCCCCC">okay let's encrypt the user</font><font color="#E5E5E5"> password and</font>

340
00:15:23,319 --> 00:15:28,270
put<font color="#E5E5E5"> it on</font><font color="#CCCCCC"> disk to encrypt something we</font>

341
00:15:25,749 --> 00:15:30,520
need a key hey let's take<font color="#E5E5E5"> a hard-coded</font>

342
00:15:28,270 --> 00:15:32,850
that is inside the application<font color="#E5E5E5"> now the</font>

343
00:15:30,520 --> 00:15:34,810
problem here is<font color="#E5E5E5"> I can simply go ahead</font>

344
00:15:32,850 --> 00:15:37,870
decompile the<font color="#E5E5E5"> password</font><font color="#CCCCCC"> manager</font>

345
00:15:34,810 --> 00:15:40,869
application<font color="#E5E5E5"> extract the</font><font color="#CCCCCC"> hard-coded</font><font color="#E5E5E5"> key</font>

346
00:15:37,870 --> 00:15:43,779
from the<font color="#CCCCCC"> decompile code and then</font><font color="#E5E5E5"> I can</font>

347
00:15:40,870 --> 00:15:47,830
<font color="#E5E5E5">simply take the cipher text</font><font color="#CCCCCC"> that is</font>

348
00:15:43,779 --> 00:15:50,939
stored and<font color="#E5E5E5"> decrypted using the key I</font>

349
00:15:47,830 --> 00:15:53,709
have obtained from the source code<font color="#E5E5E5"> and</font>

350
00:15:50,940 --> 00:15:55,480
this<font color="#E5E5E5"> is exactly what happened this is</font>

351
00:15:53,709 --> 00:15:57,069
exactly how we<font color="#CCCCCC"> got back</font><font color="#E5E5E5"> the master</font>

352
00:15:55,480 --> 00:15:59,290
password from the<font color="#E5E5E5"> stuff that</font><font color="#CCCCCC"> Stefan</font>

353
00:15:57,070 --> 00:16:02,800
<font color="#E5E5E5">showed from the XML file we</font><font color="#CCCCCC"> decompose</font>

354
00:15:59,290 --> 00:16:04,540
<font color="#E5E5E5">the</font><font color="#CCCCCC"> F here</font><font color="#E5E5E5"> you see there are two parts</font>

355
00:16:02,800 --> 00:16:07,000
of<font color="#E5E5E5"> the key there is some deterministic</font>

356
00:16:04,540 --> 00:16:09,279
<font color="#E5E5E5">algorithm that takes part one that</font><font color="#CCCCCC"> takes</font>

357
00:16:07,000 --> 00:16:11,200
part to generate some key out of<font color="#CCCCCC"> it and</font>

358
00:16:09,279 --> 00:16:13,120
this<font color="#E5E5E5"> is used to encrypt the master</font>

359
00:16:11,200 --> 00:16:15,339
password<font color="#E5E5E5"> and this is put into the XML</font>

360
00:16:13,120 --> 00:16:17,440
file<font color="#E5E5E5"> so I just reverse the</font><font color="#CCCCCC"> process</font>

361
00:16:15,339 --> 00:16:20,350
I just<font color="#E5E5E5"> generate that key because in</font>

362
00:16:17,440 --> 00:16:22,600
thetic anyway<font color="#CCCCCC"> I decrypt okay here is the</font>

363
00:16:20,350 --> 00:16:24,730
<font color="#CCCCCC">AES key ID trip</font><font color="#E5E5E5"> the password</font><font color="#CCCCCC"> from this</font>

364
00:16:22,600 --> 00:16:26,890
and I'm happy<font color="#E5E5E5"> and I have the master</font>

365
00:16:24,730 --> 00:16:28,240
password<font color="#E5E5E5"> if you go back to the</font><font color="#CCCCCC"> diagram</font>

366
00:16:26,890 --> 00:16:31,089
<font color="#E5E5E5">this wouldn't even have been necessary</font>

367
00:16:28,240 --> 00:16:32,890
<font color="#E5E5E5">because the cipher text itself is</font>

368
00:16:31,089 --> 00:16:35,410
already<font color="#E5E5E5"> used as a key in the next step</font>

369
00:16:32,890 --> 00:16:38,589
<font color="#E5E5E5">so why bother with the user password</font><font color="#CCCCCC"> you</font>

370
00:16:35,410 --> 00:16:41,500
could just run<font color="#E5E5E5"> ahead why do people do</font>

371
00:16:38,589 --> 00:16:43,240
this<font color="#E5E5E5"> in the first place</font><font color="#CCCCCC"> sometimes this</font>

372
00:16:41,500 --> 00:16:46,209
<font color="#E5E5E5">is used</font><font color="#CCCCCC"> because they have a convenience</font>

373
00:16:43,240 --> 00:16:48,100
feature to have to have a pin code

374
00:16:46,209 --> 00:16:49,540
instead<font color="#CCCCCC"> of a master password</font><font color="#E5E5E5"> so this</font>

375
00:16:48,100 --> 00:16:50,920
means they use<font color="#E5E5E5"> the master password to</font>

376
00:16:49,540 --> 00:16:52,959
encrypt the database but you can also

377
00:16:50,920 --> 00:16:54,969
have<font color="#CCCCCC"> a substitute like</font><font color="#E5E5E5"> four-digit pin</font>

378
00:16:52,959 --> 00:16:57,699
<font color="#E5E5E5">that you can also use to unlock</font><font color="#CCCCCC"> your</font>

379
00:16:54,970 --> 00:17:00,100
password manager<font color="#E5E5E5"> in that</font><font color="#CCCCCC"> case they say</font>

380
00:16:57,700 --> 00:17:01,660
hey I just verify the pin at some point

381
00:17:00,100 --> 00:17:03,220
and<font color="#E5E5E5"> now I have a good way to get back</font>

382
00:17:01,660 --> 00:17:05,470
the master password to decrypt<font color="#E5E5E5"> the</font>

383
00:17:03,220 --> 00:17:07,540
<font color="#E5E5E5">database of course this breaks the whole</font>

384
00:17:05,470 --> 00:17:11,819
security<font color="#CCCCCC"> we'll come back to the aspect</font>

385
00:17:07,540 --> 00:17:11,819
of these<font color="#E5E5E5"> convenience features later on</font>

386
00:17:13,650 --> 00:17:19,600
then the<font color="#E5E5E5"> next topic when it comes to</font>

387
00:17:16,359 --> 00:17:20,979
broken foot though is when people have

388
00:17:19,599 --> 00:17:23,800
<font color="#E5E5E5">something they want</font><font color="#CCCCCC"> to encrypt</font><font color="#E5E5E5"> like a</font>

389
00:17:20,980 --> 00:17:25,420
database<font color="#CCCCCC"> you have a key</font><font color="#E5E5E5"> you need some</font>

390
00:17:23,800 --> 00:17:28,659
magic function<font color="#E5E5E5"> to generate the cipher</font>

391
00:17:25,420 --> 00:17:30,250
text<font color="#CCCCCC"> out</font><font color="#E5E5E5"> of the database the best way is</font>

392
00:17:28,660 --> 00:17:32,710
<font color="#CCCCCC">really to</font><font color="#E5E5E5"> use some known and trusted</font>

393
00:17:30,250 --> 00:17:35,020
<font color="#E5E5E5">algorithms such as AES or if you want to</font>

394
00:17:32,710 --> 00:17:37,840
transfer data securely to a server<font color="#CCCCCC"> use</font>

395
00:17:35,020 --> 00:17:39,970
something like TLS but unfortunately

396
00:17:37,840 --> 00:17:41,709
very often<font color="#E5E5E5"> see that</font><font color="#CCCCCC"> people come up</font><font color="#E5E5E5"> with</font>

397
00:17:39,970 --> 00:17:44,620
<font color="#E5E5E5">their</font><font color="#CCCCCC"> own</font><font color="#E5E5E5"> crypto algorithms</font>

398
00:17:41,710 --> 00:17:46,690
so there's some weird<font color="#E5E5E5"> bit shifting and</font>

399
00:17:44,620 --> 00:17:48,310
some arithmetic<font color="#E5E5E5"> going on and people say</font>

400
00:17:46,690 --> 00:17:50,770
hey I can't read<font color="#CCCCCC"> it anymore</font><font color="#E5E5E5"> so</font><font color="#CCCCCC"> that's</font>

401
00:17:48,310 --> 00:17:54,730
probably<font color="#E5E5E5"> going</font><font color="#CCCCCC"> to</font><font color="#E5E5E5"> be secure usually it's</font>

402
00:17:50,770 --> 00:17:56,350
not mostly<font color="#E5E5E5"> it doesn't take more than</font><font color="#CCCCCC"> an</font>

403
00:17:54,730 --> 00:17:58,500
hour<font color="#CCCCCC"> to</font><font color="#E5E5E5"> actually break the crypto</font>

404
00:17:56,350 --> 00:18:01,179
algorithm<font color="#E5E5E5"> that people have come</font><font color="#CCCCCC"> up with</font>

405
00:17:58,500 --> 00:18:03,640
<font color="#CCCCCC">just don't do it but the</font><font color="#E5E5E5"> sad story is it</font>

406
00:18:01,180 --> 00:18:06,550
crops up<font color="#E5E5E5"> every now and then same story</font>

407
00:18:03,640 --> 00:18:08,350
here<font color="#E5E5E5"> there are actually apps that use</font>

408
00:18:06,550 --> 00:18:10,510
HTTP connections for synchronizing<font color="#CCCCCC"> your</font>

409
00:18:08,350 --> 00:18:14,139
password<font color="#CCCCCC"> database and to secure that</font>

410
00:18:10,510 --> 00:18:17,140
there is some algorithm people just came

411
00:18:14,140 --> 00:18:22,180
<font color="#CCCCCC">up with</font><font color="#E5E5E5"> for encryption</font><font color="#CCCCCC"> and that is</font>

412
00:18:17,140 --> 00:18:25,300
<font color="#CCCCCC">usually pretty</font><font color="#E5E5E5"> weak</font><font color="#CCCCCC"> never do your</font><font color="#E5E5E5"> own</font>

413
00:18:22,180 --> 00:18:27,310
crypto<font color="#CCCCCC"> ever so do not come</font><font color="#E5E5E5"> up with</font><font color="#CCCCCC"> your</font>

414
00:18:25,300 --> 00:18:29,409
<font color="#E5E5E5">own crypto algorithm it just fails</font><font color="#CCCCCC"> do</font>

415
00:18:27,310 --> 00:18:32,080
not try to implement AES on your own<font color="#E5E5E5"> it</font>

416
00:18:29,410 --> 00:18:33,970
just<font color="#E5E5E5"> fails and as I</font><font color="#CCCCCC"> said I'm not making</font>

417
00:18:32,080 --> 00:18:35,530
this<font color="#E5E5E5"> up this is</font><font color="#CCCCCC"> something we</font><font color="#E5E5E5"> see every</font>

418
00:18:33,970 --> 00:18:39,790
now and then cropping up<font color="#CCCCCC"> in</font><font color="#E5E5E5"> real world</font>

419
00:18:35,530 --> 00:18:43,030
apps with millions of<font color="#CCCCCC"> stumbles now for</font>

420
00:18:39,790 --> 00:18:44,350
<font color="#E5E5E5">something slightly different so we have</font>

421
00:18:43,030 --> 00:18:46,690
seen<font color="#E5E5E5"> that sometimes you need to exchange</font>

422
00:18:44,350 --> 00:18:48,550
sensitive<font color="#E5E5E5"> data between apps or between</font>

423
00:18:46,690 --> 00:18:50,110
<font color="#E5E5E5">an app and a</font><font color="#CCCCCC"> website because when the</font>

424
00:18:48,550 --> 00:18:52,210
<font color="#CCCCCC">user wants</font><font color="#E5E5E5"> to</font><font color="#CCCCCC"> login</font><font color="#E5E5E5"> into his password</font>

425
00:18:50,110 --> 00:18:55,060
manager and then say<font color="#CCCCCC"> okay connect</font><font color="#E5E5E5"> me to</font>

426
00:18:52,210 --> 00:18:56,950
<font color="#E5E5E5">Facebook he doesn't want to show the</font>

427
00:18:55,060 --> 00:18:58,720
password in<font color="#E5E5E5"> the password manager</font><font color="#CCCCCC"> then</font>

428
00:18:56,950 --> 00:19:00,670
remember it go to Facebook cavity and

429
00:18:58,720 --> 00:19:02,230
again he wants the app to kind<font color="#CCCCCC"> of place</font>

430
00:19:00,670 --> 00:19:05,610
the Facebook password into<font color="#CCCCCC"> the Facebook</font>

431
00:19:02,230 --> 00:19:08,170
<font color="#E5E5E5">website or the Facebook app and go ahead</font>

432
00:19:05,610 --> 00:19:10,300
this<font color="#E5E5E5"> however leads to a certain problem</font>

433
00:19:08,170 --> 00:19:13,630
<font color="#E5E5E5">because the password manager</font><font color="#CCCCCC"> needs to</font>

434
00:19:10,300 --> 00:19:16,419
inject this sensitive<font color="#CCCCCC"> information into</font>

435
00:19:13,630 --> 00:19:18,070
the<font color="#CCCCCC"> website or into the app and Steffan</font>

436
00:19:16,420 --> 00:19:21,520
already says the same<font color="#CCCCCC"> proxy model of</font>

437
00:19:18,070 --> 00:19:23,760
<font color="#E5E5E5">android usually prevents that now what</font>

438
00:19:21,520 --> 00:19:26,800
do some<font color="#CCCCCC"> of these password managers do</font>

439
00:19:23,760 --> 00:19:29,200
<font color="#E5E5E5">Steph I mention the the</font><font color="#CCCCCC"> own browser okay</font>

440
00:19:26,800 --> 00:19:31,090
some do<font color="#E5E5E5"> that others they just say</font><font color="#CCCCCC"> hey</font>

441
00:19:29,200 --> 00:19:33,250
why not<font color="#E5E5E5"> just put it into the clipboard</font>

442
00:19:31,090 --> 00:19:36,040
<font color="#CCCCCC">and then the user can</font><font color="#E5E5E5"> paste it over here</font>

443
00:19:33,250 --> 00:19:38,020
<font color="#E5E5E5">sure he can but guess what we did we</font>

444
00:19:36,040 --> 00:19:40,480
<font color="#E5E5E5">created a small app that just pulls the</font>

445
00:19:38,020 --> 00:19:41,590
clipboard<font color="#E5E5E5"> and whenever the password</font>

446
00:19:40,480 --> 00:19:44,590
<font color="#E5E5E5">meant to write something into the</font>

447
00:19:41,590 --> 00:19:46,060
clipboard<font color="#E5E5E5"> we</font><font color="#CCCCCC"> dumped it</font><font color="#E5E5E5"> out to disk you</font>

448
00:19:44,590 --> 00:19:51,879
<font color="#E5E5E5">can collect a fair</font><font color="#CCCCCC"> amount of passwords</font>

449
00:19:46,060 --> 00:19:53,860
for that so how can we be<font color="#CCCCCC"> more</font>

450
00:19:51,880 --> 00:19:56,180
intelligent<font color="#CCCCCC"> if we say the clipboard is</font>

451
00:19:53,860 --> 00:19:58,280
probably not the<font color="#CCCCCC"> best way to store</font>

452
00:19:56,180 --> 00:19:59,900
by the way some apps<font color="#E5E5E5"> they do not even</font>

453
00:19:58,280 --> 00:20:01,700
remove it from the clipboard<font color="#CCCCCC"> after some</font>

454
00:19:59,900 --> 00:20:04,010
<font color="#E5E5E5">time so it stays there forever until</font><font color="#CCCCCC"> we</font>

455
00:20:01,700 --> 00:20:06,020
copy<font color="#E5E5E5"> something else to the clipboard a</font>

456
00:20:04,010 --> 00:20:07,670
<font color="#E5E5E5">slightly better way what people figure</font>

457
00:20:06,020 --> 00:20:09,760
out<font color="#E5E5E5"> are so-called accessibility</font>

458
00:20:07,670 --> 00:20:13,190
management<font color="#E5E5E5"> in Android accessibility</font>

459
00:20:09,760 --> 00:20:16,670
managers are small services that apps

460
00:20:13,190 --> 00:20:19,730
can provide to<font color="#E5E5E5"> the system that help you</font>

461
00:20:16,670 --> 00:20:22,730
interact with the user<font color="#CCCCCC"> interface so</font>

462
00:20:19,730 --> 00:20:24,380
assume you're driving then you can't

463
00:20:22,730 --> 00:20:27,080
<font color="#E5E5E5">just pick up your phone and enter some</font>

464
00:20:24,380 --> 00:20:29,750
characters so an<font color="#E5E5E5"> accessibility manager</font>

465
00:20:27,080 --> 00:20:31,970
can enter<font color="#CCCCCC"> characters on your behalf for</font>

466
00:20:29,750 --> 00:20:32,540
<font color="#E5E5E5">example by a text-to-speech engine or</font>

467
00:20:31,970 --> 00:20:34,310
whatnot

468
00:20:32,540 --> 00:20:37,010
it's simply something<font color="#CCCCCC"> that can interact</font>

469
00:20:34,310 --> 00:20:39,950
<font color="#E5E5E5">as your agent with the user interface so</font>

470
00:20:37,010 --> 00:20:41,780
<font color="#CCCCCC">what</font><font color="#E5E5E5"> these guys did is they said let's</font>

471
00:20:39,950 --> 00:20:44,060
implement an accessibility<font color="#E5E5E5"> manager</font>

472
00:20:41,780 --> 00:20:46,430
because the accessibility manager has

473
00:20:44,060 --> 00:20:47,960
full access to the user interface<font color="#CCCCCC"> it can</font>

474
00:20:46,430 --> 00:20:49,700
<font color="#E5E5E5">enter the user name it can enter the</font>

475
00:20:47,960 --> 00:20:53,060
password it can even<font color="#E5E5E5"> click on sign</font><font color="#CCCCCC"> in</font>

476
00:20:49,700 --> 00:20:55,960
for<font color="#CCCCCC"> me and the same goes not only for</font>

477
00:20:53,060 --> 00:20:58,460
<font color="#E5E5E5">website but</font><font color="#CCCCCC"> for apps because for the</font>

478
00:20:55,960 --> 00:21:00,590
<font color="#E5E5E5">accessibility manager in fact the web</font>

479
00:20:58,460 --> 00:21:04,490
browser is just<font color="#E5E5E5"> another random app with</font>

480
00:21:00,590 --> 00:21:08,600
which it interacts now<font color="#CCCCCC"> the questions we</font>

481
00:21:04,490 --> 00:21:11,210
<font color="#CCCCCC">ask are can we actually divert the data</font>

482
00:21:08,600 --> 00:21:13,040
that is supposed to<font color="#E5E5E5"> go</font><font color="#CCCCCC"> into</font><font color="#E5E5E5"> the</font>

483
00:21:11,210 --> 00:21:15,620
legitimate<font color="#E5E5E5"> website to some non</font>

484
00:21:13,040 --> 00:21:18,230
legitimate website and then just get

485
00:21:15,620 --> 00:21:21,739
access to<font color="#E5E5E5"> the users passwords and the</font>

486
00:21:18,230 --> 00:21:24,050
next question<font color="#CCCCCC"> if the data is supposed to</font>

487
00:21:21,740 --> 00:21:26,120
go<font color="#E5E5E5"> into the app can we divert it to a</font>

488
00:21:24,050 --> 00:21:28,810
<font color="#CCCCCC">different app and get hold of the</font>

489
00:21:26,120 --> 00:21:32,209
passwords because<font color="#CCCCCC"> we all like passwords</font>

490
00:21:28,810 --> 00:21:34,879
<font color="#E5E5E5">so imagine you have something</font><font color="#CCCCCC"> that is</font>

491
00:21:32,210 --> 00:21:37,400
<font color="#CCCCCC">HTTP log in the food comm and</font><font color="#E5E5E5"> you store</font>

492
00:21:34,880 --> 00:21:39,740
<font color="#CCCCCC">a password for that</font><font color="#E5E5E5"> one what we did is</font>

493
00:21:37,400 --> 00:21:42,170
we create the website<font color="#E5E5E5"> login dog food</font>

494
00:21:39,740 --> 00:21:45,020
calm and just fill the round with the

495
00:21:42,170 --> 00:21:47,900
<font color="#CCCCCC">DNS to map login dog food come to</font><font color="#E5E5E5"> our</font>

496
00:21:45,020 --> 00:21:50,090
website<font color="#E5E5E5"> we didn't break the SSL so we</font>

497
00:21:47,900 --> 00:21:54,260
just<font color="#E5E5E5"> said this website doesn't support</font>

498
00:21:50,090 --> 00:21:56,899
<font color="#E5E5E5">us as well and the fun thing is many</font>

499
00:21:54,260 --> 00:22:00,170
password managers<font color="#E5E5E5"> will happily inserted</font>

500
00:21:56,900 --> 00:22:02,600
the password into HTTP<font color="#CCCCCC"> log intercom</font>

501
00:22:00,170 --> 00:22:03,530
because they just<font color="#E5E5E5"> said well it's login</font>

502
00:22:02,600 --> 00:22:07,000
<font color="#E5E5E5">dot foo com</font>

503
00:22:03,530 --> 00:22:08,210
so who cares<font color="#CCCCCC"> just put it</font><font color="#E5E5E5"> in there</font>

504
00:22:07,000 --> 00:22:13,940
goddess

505
00:22:08,210 --> 00:22:16,100
some Cosworth<font color="#CCCCCC"> and even verse imagine you</font>

506
00:22:13,940 --> 00:22:17,930
have a password<font color="#E5E5E5"> stored for</font><font color="#CCCCCC"> h2</font>

507
00:22:16,100 --> 00:22:21,409
wordpress.com<font color="#CCCCCC"> this is just some</font>

508
00:22:17,930 --> 00:22:23,060
<font color="#E5E5E5">wordpress blog right</font><font color="#CCCCCC"> some</font><font color="#E5E5E5"> of these</font>

509
00:22:21,410 --> 00:22:26,060
password managers will put it into

510
00:22:23,060 --> 00:22:28,070
<font color="#E5E5E5">everything</font><font color="#CCCCCC"> that is wordpress.com so if</font>

511
00:22:26,060 --> 00:22:29,330
you just<font color="#E5E5E5"> host another</font><font color="#CCCCCC"> block on</font>

512
00:22:28,070 --> 00:22:30,919
<font color="#CCCCCC">wordpress.com</font>

513
00:22:29,330 --> 00:22:33,020
everybody can get a<font color="#E5E5E5"> subdomain on</font>

514
00:22:30,920 --> 00:22:34,640
<font color="#E5E5E5">WordPress for comfort zone</font><font color="#CCCCCC"> blog</font><font color="#E5E5E5"> the</font>

515
00:22:33,020 --> 00:22:37,520
password manager<font color="#CCCCCC"> will fill in the</font>

516
00:22:34,640 --> 00:22:40,640
password<font color="#CCCCCC"> for a wordpress.com into</font>

517
00:22:37,520 --> 00:22:42,740
everything<font color="#E5E5E5"> dot wordpress.com so</font>

518
00:22:40,640 --> 00:22:45,250
essentially all<font color="#CCCCCC"> the</font><font color="#E5E5E5"> wordpress passwords</font>

519
00:22:42,740 --> 00:22:47,540
can get go<font color="#E5E5E5"> to every</font><font color="#CCCCCC"> WordPress site</font>

520
00:22:45,250 --> 00:22:50,450
<font color="#E5E5E5">because what these people did is they</font>

521
00:22:47,540 --> 00:22:53,629
say we<font color="#CCCCCC"> only</font><font color="#E5E5E5"> compare the</font><font color="#CCCCCC"> top-level domain</font>

522
00:22:50,450 --> 00:22:54,230
and here's<font color="#CCCCCC"> one</font><font color="#E5E5E5"> we of</font><font color="#CCCCCC"> course we asked the</font>

523
00:22:53,630 --> 00:22:56,180
vendors

524
00:22:54,230 --> 00:22:58,150
why did you implement<font color="#E5E5E5"> it that way and</font>

525
00:22:56,180 --> 00:23:00,920
they said it's because<font color="#CCCCCC"> of</font><font color="#E5E5E5"> single sign-on</font>

526
00:22:58,150 --> 00:23:03,200
imagine you're at university you<font color="#CCCCCC"> have</font>

527
00:23:00,920 --> 00:23:06,680
something like<font color="#E5E5E5"> courses dot who don't you</font>

528
00:23:03,200 --> 00:23:08,960
<font color="#E5E5E5">and you have let's say library dog food</font>

529
00:23:06,680 --> 00:23:11,450
or<font color="#CCCCCC"> IDO</font><font color="#E5E5E5"> and they said it's probably going</font>

530
00:23:08,960 --> 00:23:13,190
to<font color="#E5E5E5"> be the same password anyway so you we</font>

531
00:23:11,450 --> 00:23:15,860
<font color="#E5E5E5">don't</font><font color="#CCCCCC"> want</font><font color="#E5E5E5"> you to have to create two</font>

532
00:23:13,190 --> 00:23:17,930
entries for the same credentials<font color="#CCCCCC"> so we</font>

533
00:23:15,860 --> 00:23:20,570
just make<font color="#E5E5E5"> sure</font><font color="#CCCCCC"> that if you're on food</font>

534
00:23:17,930 --> 00:23:22,400
<font color="#E5E5E5">into all the</font><font color="#CCCCCC"> subdomains receive your</font>

535
00:23:20,570 --> 00:23:25,250
password<font color="#CCCCCC"> so</font><font color="#E5E5E5"> that you can conveniently</font>

536
00:23:22,400 --> 00:23:29,000
<font color="#CCCCCC">login if I can register</font><font color="#E5E5E5"> attack a dog</font>

537
00:23:25,250 --> 00:23:31,490
<font color="#E5E5E5">food or</font><font color="#CCCCCC"> e2</font><font color="#E5E5E5"> well I get</font><font color="#CCCCCC"> the passwords</font><font color="#E5E5E5"> we</font>

538
00:23:29,000 --> 00:23:33,380
had some debates with the<font color="#E5E5E5"> with the</font>

539
00:23:31,490 --> 00:23:33,650
developers whether this is intended or

540
00:23:33,380 --> 00:23:40,280
not

541
00:23:33,650 --> 00:23:42,560
ah<font color="#CCCCCC"> next funny story</font><font color="#E5E5E5"> so assume we have</font>

542
00:23:40,280 --> 00:23:48,530
<font color="#E5E5E5">stored a password for for the Twitter</font>

543
00:23:42,560 --> 00:23:50,659
app now the idea<font color="#E5E5E5"> is how can</font><font color="#CCCCCC"> we get the</font>

544
00:23:48,530 --> 00:23:52,190
password for the that is stored for<font color="#CCCCCC"> the</font>

545
00:23:50,660 --> 00:23:54,020
Twitter app and that<font color="#E5E5E5"> the accessibility</font>

546
00:23:52,190 --> 00:23:56,600
server would normally put<font color="#E5E5E5"> into the</font>

547
00:23:54,020 --> 00:23:58,280
Twitter app to<font color="#CCCCCC"> log me in in some</font><font color="#E5E5E5"> cases</font>

548
00:23:56,600 --> 00:24:00,199
it was totally sufficient<font color="#CCCCCC"> to</font><font color="#E5E5E5"> create an</font>

549
00:23:58,280 --> 00:24:02,690
app with a package name<font color="#CCCCCC"> conduct wittily</font>

550
00:24:00,200 --> 00:24:05,420
because the password<font color="#E5E5E5"> manager to set up a</font>

551
00:24:02,690 --> 00:24:08,270
is this password<font color="#CCCCCC"> is broadfork</font><font color="#E5E5E5"> on</font><font color="#CCCCCC"> twitter</font>

552
00:24:05,420 --> 00:24:09,710
and<font color="#CCCCCC"> i have an app that starts</font><font color="#E5E5E5"> with</font>

553
00:24:08,270 --> 00:24:11,780
<font color="#CCCCCC">counter twitter but i'm</font><font color="#E5E5E5"> going to put in</font>

554
00:24:09,710 --> 00:24:16,730
the password<font color="#E5E5E5"> because hey it's twitter no</font>

555
00:24:11,780 --> 00:24:19,700
it's not<font color="#CCCCCC"> yeah kind of</font><font color="#E5E5E5"> the algorithm they</font>

556
00:24:16,730 --> 00:24:21,230
do<font color="#CCCCCC"> is not not really secure</font><font color="#E5E5E5"> they just</font>

557
00:24:19,700 --> 00:24:23,179
take the the<font color="#E5E5E5"> website and</font>

558
00:24:21,230 --> 00:24:24,970
<font color="#CCCCCC">is Twitter</font><font color="#E5E5E5"> calm so</font><font color="#CCCCCC"> that the password is</font>

559
00:24:23,179 --> 00:24:27,260
valid<font color="#E5E5E5"> for the website as</font><font color="#CCCCCC"> well as</font><font color="#E5E5E5"> the app</font>

560
00:24:24,970 --> 00:24:29,540
<font color="#E5E5E5">reverses and check what the prefix</font>

561
00:24:27,260 --> 00:24:39,530
matches and can<font color="#E5E5E5"> just dump it in there</font><font color="#CCCCCC"> I</font>

562
00:24:29,540 --> 00:24:49,100
think<font color="#CCCCCC"> we have time for a short</font><font color="#E5E5E5"> demo oops</font>

563
00:24:39,530 --> 00:24:54,460
oops<font color="#CCCCCC"> okay yeah so what you see here</font><font color="#E5E5E5"> is</font>

564
00:24:49,100 --> 00:24:57,439
we<font color="#CCCCCC"> just open the the password manager</font>

565
00:24:54,460 --> 00:25:00,200
type in our type in our master password

566
00:24:57,440 --> 00:25:01,970
because<font color="#E5E5E5"> now we're the legitimate user we</font>

567
00:25:00,200 --> 00:25:03,590
have<font color="#CCCCCC"> a</font><font color="#E5E5E5"> legitimate app on our phone and</font>

568
00:25:01,970 --> 00:25:05,630
we have also been been tricked into

569
00:25:03,590 --> 00:25:07,340
installing<font color="#CCCCCC"> a non legitimate that but we</font>

570
00:25:05,630 --> 00:25:10,220
would<font color="#CCCCCC"> normally never</font><font color="#E5E5E5"> type our password</font>

571
00:25:07,340 --> 00:25:17,990
into the non legitimate app so what<font color="#E5E5E5"> we</font>

572
00:25:10,220 --> 00:25:21,830
now do is<font color="#CCCCCC"> right here second we activate</font>

573
00:25:17,990 --> 00:25:23,929
this<font color="#E5E5E5"> accessibility service because we</font>

574
00:25:21,830 --> 00:25:27,320
need to grant the password<font color="#E5E5E5"> manager app</font>

575
00:25:23,929 --> 00:25:30,860
the right to interact with user

576
00:25:27,320 --> 00:25:32,299
interfaces on our behalf<font color="#E5E5E5"> there we get a</font>

577
00:25:30,860 --> 00:25:34,219
<font color="#E5E5E5">couple of warnings from the</font><font color="#CCCCCC"> Android RS</font>

578
00:25:32,299 --> 00:25:35,629
but this is normally the<font color="#E5E5E5"> avast password</font>

579
00:25:34,220 --> 00:25:40,850
vendor we're not<font color="#E5E5E5"> cheating anything at</font>

580
00:25:35,630 --> 00:25:47,090
this point<font color="#CCCCCC"> this</font><font color="#E5E5E5"> is just</font><font color="#CCCCCC"> above ok now</font>

581
00:25:40,850 --> 00:25:49,129
we're setting<font color="#E5E5E5"> good to go and</font><font color="#CCCCCC"> what we do</font>

582
00:25:47,090 --> 00:25:50,870
now is you see here<font color="#E5E5E5"> this</font><font color="#CCCCCC"> is Condor</font>

583
00:25:49,130 --> 00:25:53,090
Twitter<font color="#E5E5E5"> the Twitter</font><font color="#CCCCCC"> League</font><font color="#E5E5E5"> this was</font>

584
00:25:50,870 --> 00:25:55,879
<font color="#E5E5E5">created</font><font color="#CCCCCC"> by us</font><font color="#E5E5E5"> and you see our Twitter</font>

585
00:25:53,090 --> 00:25:59,000
credentials appearing in here because

586
00:25:55,880 --> 00:26:03,549
the password<font color="#CCCCCC"> manager just put it in</font>

587
00:25:59,000 --> 00:26:03,549
there without thinking any<font color="#E5E5E5"> of anything</font>

588
00:26:05,440 --> 00:26:10,160
<font color="#CCCCCC">ok</font>

589
00:26:06,710 --> 00:26:11,630
so much for<font color="#E5E5E5"> the demo</font><font color="#CCCCCC"> just</font><font color="#E5E5E5"> very quickly</font>

590
00:26:10,160 --> 00:26:13,790
there's also something called ready new

591
00:26:11,630 --> 00:26:16,490
attacks imagine you have<font color="#CCCCCC"> facebook</font>

592
00:26:13,790 --> 00:26:18,168
installed<font color="#E5E5E5"> and you have a password</font>

593
00:26:16,490 --> 00:26:21,290
<font color="#E5E5E5">manager and it has credentials for</font>

594
00:26:18,169 --> 00:26:23,090
<font color="#CCCCCC">Facebook stored and it inserts into an</font>

595
00:26:21,290 --> 00:26:24,770
app and it this time it checks the<font color="#E5E5E5"> full</font>

596
00:26:23,090 --> 00:26:26,570
package name like<font color="#CCCCCC"> Condor</font><font color="#E5E5E5"> Facebook of</font>

597
00:26:24,770 --> 00:26:28,010
course<font color="#CCCCCC"> you cannot have a second app on</font>

598
00:26:26,570 --> 00:26:30,280
the same form<font color="#CCCCCC"> that it's also Condor</font>

599
00:26:28,010 --> 00:26:33,559
<font color="#CCCCCC">Facebook so you're pretty</font><font color="#E5E5E5"> safe</font><font color="#CCCCCC"> right no</font>

600
00:26:30,280 --> 00:26:35,030
what you can do is if<font color="#E5E5E5"> you as an attacker</font>

601
00:26:33,559 --> 00:26:36,830
have access to the

602
00:26:35,030 --> 00:26:39,139
to the phone but<font color="#E5E5E5"> you do not have</font><font color="#CCCCCC"> the</font>

603
00:26:36,830 --> 00:26:40,790
<font color="#E5E5E5">master password of the password manager</font>

604
00:26:39,140 --> 00:26:42,980
<font color="#CCCCCC">so</font><font color="#E5E5E5"> you would normally not get the</font><font color="#CCCCCC"> sword</font>

605
00:26:40,790 --> 00:26:45,200
passwords<font color="#E5E5E5"> you can simply</font><font color="#CCCCCC"> D install the</font>

606
00:26:42,980 --> 00:26:47,300
Facebook app create your own app that is

607
00:26:45,200 --> 00:26:49,730
condor Facebook and because they only

608
00:26:47,300 --> 00:26:51,320
check<font color="#CCCCCC"> the package name</font><font color="#E5E5E5"> there you go</font><font color="#CCCCCC"> the</font>

609
00:26:49,730 --> 00:26:55,490
password will be<font color="#E5E5E5"> written into</font><font color="#CCCCCC"> your fake</font>

610
00:26:51,320 --> 00:26:57,320
app I'd like to rush this one a bit

611
00:26:55,490 --> 00:27:01,940
<font color="#CCCCCC">there is also a second type of ready</font><font color="#E5E5E5"> to</font>

612
00:26:57,320 --> 00:27:03,530
attack<font color="#CCCCCC"> the deadline password</font><font color="#E5E5E5"> manager has</font>

613
00:27:01,940 --> 00:27:05,750
<font color="#E5E5E5">the abilities are synchronized with</font><font color="#CCCCCC"> the</font>

614
00:27:03,530 --> 00:27:07,340
<font color="#CCCCCC">backend so what they did is they store</font>

615
00:27:05,750 --> 00:27:08,510
the credentials<font color="#E5E5E5"> that are used for</font>

616
00:27:07,340 --> 00:27:09,949
synchronizing<font color="#CCCCCC"> with</font><font color="#E5E5E5"> the dashed line</font>

617
00:27:08,510 --> 00:27:12,200
<font color="#E5E5E5">back-end into the Android Account</font>

618
00:27:09,950 --> 00:27:13,940
Manager which is simply a service that

619
00:27:12,200 --> 00:27:16,040
<font color="#CCCCCC">abstracts from</font><font color="#E5E5E5"> the database controlled</font>

620
00:27:13,940 --> 00:27:18,830
by the Android<font color="#E5E5E5"> operating system</font><font color="#CCCCCC"> so what</font>

621
00:27:16,040 --> 00:27:20,659
-<font color="#E5E5E5"> lined up it registers the</font><font color="#CCCCCC"> account type</font>

622
00:27:18,830 --> 00:27:22,520
<font color="#CCCCCC">comm the</font><font color="#E5E5E5"> dashed line puts in your dash</font>

623
00:27:20,660 --> 00:27:25,580
line<font color="#E5E5E5"> email address and password for the</font>

624
00:27:22,520 --> 00:27:28,850
backend<font color="#CCCCCC"> and the Android app is</font>

625
00:27:25,580 --> 00:27:30,590
associated<font color="#CCCCCC"> with a certain user ID now</font>

626
00:27:28,850 --> 00:27:32,629
what happens when I try<font color="#E5E5E5"> to create a fake</font>

627
00:27:30,590 --> 00:27:34,879
app that also<font color="#E5E5E5"> tries to</font><font color="#CCCCCC"> access the Condor</font>

628
00:27:32,630 --> 00:27:37,160
-<font color="#E5E5E5"> an account type there will be a</font>

629
00:27:34,880 --> 00:27:39,140
collision<font color="#E5E5E5"> because the the fake app is</font>

630
00:27:37,160 --> 00:27:41,900
registered<font color="#CCCCCC"> with a different user ID to</font>

631
00:27:39,140 --> 00:27:44,120
<font color="#E5E5E5">the Android operating system now what</font>

632
00:27:41,900 --> 00:27:46,340
happens if<font color="#CCCCCC"> I uninstall the original</font><font color="#E5E5E5"> -</font>

633
00:27:44,120 --> 00:27:48,139
line<font color="#E5E5E5"> app in that</font><font color="#CCCCCC"> case the accounts are</font>

634
00:27:46,340 --> 00:27:50,090
still stored in the<font color="#E5E5E5"> system's account</font>

635
00:27:48,140 --> 00:27:51,710
<font color="#CCCCCC">database because just installing F</font>

636
00:27:50,090 --> 00:27:54,350
doesn't<font color="#E5E5E5"> delete things from the account</font>

637
00:27:51,710 --> 00:27:56,840
manager now<font color="#E5E5E5"> there is no collisions</font>

638
00:27:54,350 --> 00:27:58,760
<font color="#E5E5E5">anymore with the user ID of the original</font>

639
00:27:56,840 --> 00:28:01,250
<font color="#CCCCCC">password manager</font><font color="#E5E5E5"> and the system will</font>

640
00:27:58,760 --> 00:28:04,790
happily grant me access and give me the

641
00:28:01,250 --> 00:28:07,250
<font color="#E5E5E5">data we have live demo for that</font><font color="#CCCCCC"> I skip</font>

642
00:28:04,790 --> 00:28:09,020
<font color="#CCCCCC">it in the interest of time if you are</font>

643
00:28:07,250 --> 00:28:12,440
<font color="#E5E5E5">interested you</font><font color="#CCCCCC"> can come up to</font><font color="#E5E5E5"> one of</font><font color="#CCCCCC"> our</font>

644
00:28:09,020 --> 00:28:14,240
<font color="#CCCCCC">Play Doh and</font><font color="#E5E5E5"> this is really dead easy so</font>

645
00:28:12,440 --> 00:28:18,170
this is essentially<font color="#E5E5E5"> the exploit code for</font>

646
00:28:14,240 --> 00:28:19,880
the residue<font color="#E5E5E5"> attacks</font><font color="#CCCCCC"> there's no magic</font>

647
00:28:18,170 --> 00:28:21,920
behind it you just<font color="#E5E5E5"> need to have the same</font>

648
00:28:19,880 --> 00:28:26,810
account type<font color="#E5E5E5"> and you need to install the</font>

649
00:28:21,920 --> 00:28:30,170
<font color="#E5E5E5">other app first demo time yep</font>

650
00:28:26,810 --> 00:28:31,909
we'll just<font color="#E5E5E5"> skip that one with this in</font>

651
00:28:30,170 --> 00:28:34,280
<font color="#E5E5E5">mind and we Android developer</font>

652
00:28:31,910 --> 00:28:37,100
documentation<font color="#E5E5E5"> clearly stated</font><font color="#CCCCCC"> you should</font>

653
00:28:34,280 --> 00:28:38,930
never<font color="#E5E5E5"> pass the</font><font color="#CCCCCC"> androids</font><font color="#E5E5E5"> Android users</font>

654
00:28:37,100 --> 00:28:40,610
actual password<font color="#CCCCCC"> to the account manager</font>

655
00:28:38,930 --> 00:28:43,040
because it's simply not intended<font color="#CCCCCC"> to do</font>

656
00:28:40,610 --> 00:28:47,389
<font color="#CCCCCC">that</font><font color="#E5E5E5"> it is intended to store some</font>

657
00:28:43,040 --> 00:28:48,590
session<font color="#E5E5E5"> token some key some</font><font color="#CCCCCC"> that is</font>

658
00:28:47,390 --> 00:28:50,779
<font color="#E5E5E5">derived that can be</font>

659
00:28:48,590 --> 00:28:54,139
thrown<font color="#CCCCCC"> away that is not</font><font color="#E5E5E5"> super sensitive</font>

660
00:28:50,779 --> 00:28:59,270
<font color="#E5E5E5">but not an actual</font><font color="#CCCCCC"> password but who cares</font>

661
00:28:54,140 --> 00:29:01,220
to read the documentation<font color="#CCCCCC"> so this is</font><font color="#E5E5E5"> not</font>

662
00:28:59,270 --> 00:29:02,900
about bashing the developers of<font color="#E5E5E5"> the</font>

663
00:29:01,220 --> 00:29:05,240
<font color="#CCCCCC">password</font><font color="#E5E5E5"> menu it's more like common</font>

664
00:29:02,900 --> 00:29:06,740
pitfalls<font color="#CCCCCC"> things where you need to be</font>

665
00:29:05,240 --> 00:29:08,600
<font color="#E5E5E5">really careful when dealing with</font>

666
00:29:06,740 --> 00:29:10,970
<font color="#E5E5E5">sensitive</font><font color="#CCCCCC"> data like</font><font color="#E5E5E5"> passive data between</font>

667
00:29:08,600 --> 00:29:13,610
applications<font color="#E5E5E5"> using</font><font color="#CCCCCC"> the Android</font>

668
00:29:10,970 --> 00:29:15,650
credential store<font color="#E5E5E5"> implementing an</font>

669
00:29:13,610 --> 00:29:18,799
accessibility service<font color="#CCCCCC"> all these things</font>

670
00:29:15,650 --> 00:29:21,320
can go really<font color="#E5E5E5"> badly wrong and the sets</font>

671
00:29:18,799 --> 00:29:23,000
<font color="#CCCCCC">are is more often</font><font color="#E5E5E5"> than not they do this</font>

672
00:29:21,320 --> 00:29:24,889
is<font color="#E5E5E5"> just a table what</font><font color="#CCCCCC"> we found in which</font>

673
00:29:23,000 --> 00:29:26,600
app<font color="#E5E5E5"> it's also on our website with all</font>

674
00:29:24,890 --> 00:29:29,179
<font color="#CCCCCC">the</font><font color="#E5E5E5"> details you</font><font color="#CCCCCC"> can find all the</font>

675
00:29:26,600 --> 00:29:33,620
write-ups<font color="#E5E5E5"> there the individual</font>

676
00:29:29,179 --> 00:29:35,620
vulnerability reports<font color="#E5E5E5"> I think it's time</font>

677
00:29:33,620 --> 00:29:41,678
<font color="#CCCCCC">to come to an end at some point</font>

678
00:29:35,620 --> 00:29:43,939
<font color="#E5E5E5">No ten minutes</font><font color="#CCCCCC"> are that's awesome</font>

679
00:29:41,679 --> 00:29:49,070
<font color="#CCCCCC">convenient features we've talked about</font>

680
00:29:43,940 --> 00:29:51,130
the<font color="#CCCCCC"> the possibility to substitute</font><font color="#E5E5E5"> your</font>

681
00:29:49,070 --> 00:29:53,450
master password with<font color="#CCCCCC"> the four-digit pin</font>

682
00:29:51,130 --> 00:29:56,659
<font color="#E5E5E5">almost all password managers</font><font color="#CCCCCC"> support</font>

683
00:29:53,450 --> 00:29:58,610
this feature<font color="#CCCCCC"> the problem is this</font><font color="#E5E5E5"> is</font><font color="#CCCCCC"> very</font>

684
00:29:56,659 --> 00:30:01,159
convenient<font color="#CCCCCC"> for a user you just grab your</font>

685
00:29:58,610 --> 00:30:02,689
phone and<font color="#CCCCCC"> instead</font><font color="#E5E5E5"> of typing in</font><font color="#CCCCCC"> 300</font>

686
00:30:01,159 --> 00:30:04,549
characters<font color="#E5E5E5"> master password you</font><font color="#CCCCCC"> just type</font>

687
00:30:02,690 --> 00:30:07,580
in<font color="#E5E5E5"> four digits and you're gone the</font>

688
00:30:04,549 --> 00:30:09,590
problem is<font color="#CCCCCC"> group</font><font color="#E5E5E5"> forcing a four digit</font>

689
00:30:07,580 --> 00:30:11,740
password that can only be digits<font color="#E5E5E5"> is</font>

690
00:30:09,590 --> 00:30:14,990
something that<font color="#E5E5E5"> doesn't take too long</font><font color="#CCCCCC"> so</font>

691
00:30:11,740 --> 00:30:17,240
<font color="#CCCCCC">this</font><font color="#E5E5E5"> already weakens the security and</font>

692
00:30:14,990 --> 00:30:19,610
then<font color="#CCCCCC"> you have the</font><font color="#E5E5E5"> problem that usually</font>

693
00:30:17,240 --> 00:30:21,559
<font color="#E5E5E5">the</font><font color="#CCCCCC"> data</font><font color="#E5E5E5"> mass of the password database</font>

694
00:30:19,610 --> 00:30:24,620
<font color="#E5E5E5">is encrypted with something derived from</font>

695
00:30:21,559 --> 00:30:26,750
the master password<font color="#E5E5E5"> so if they want you</font>

696
00:30:24,620 --> 00:30:28,520
to be able<font color="#E5E5E5"> to unlock the database with</font>

697
00:30:26,750 --> 00:30:32,029
<font color="#CCCCCC">the pin as</font><font color="#E5E5E5"> well they have to do some</font>

698
00:30:28,520 --> 00:30:34,309
trickery<font color="#E5E5E5"> to</font><font color="#CCCCCC"> store the original key and</font>

699
00:30:32,029 --> 00:30:36,350
<font color="#E5E5E5">keep the key with a pin as well or just</font>

700
00:30:34,309 --> 00:30:38,720
<font color="#E5E5E5">dump the key to disk and hope that no</font>

701
00:30:36,350 --> 00:30:41,959
one<font color="#CCCCCC"> finds it so that the pin unlock is</font>

702
00:30:38,720 --> 00:30:44,270
kind<font color="#E5E5E5"> of safe enough</font><font color="#CCCCCC"> so</font><font color="#E5E5E5"> this whole story</font>

703
00:30:41,960 --> 00:30:45,649
of allowing you to use<font color="#CCCCCC"> a short pin</font>

704
00:30:44,270 --> 00:30:48,559
instead of something<font color="#CCCCCC"> that is long and</font>

705
00:30:45,649 --> 00:30:49,610
secure kills it off in<font color="#E5E5E5"> many cases and</font>

706
00:30:48,559 --> 00:30:53,389
it's actually a trade-off between

707
00:30:49,610 --> 00:30:55,039
<font color="#E5E5E5">comfort and security same direction you</font>

708
00:30:53,390 --> 00:30:57,380
can save your password<font color="#CCCCCC"> with some of</font>

709
00:30:55,039 --> 00:31:00,530
these positive managers like save<font color="#E5E5E5"> the</font>

710
00:30:57,380 --> 00:31:02,950
<font color="#E5E5E5">master password for me as well</font><font color="#CCCCCC"> and then</font>

711
00:31:00,530 --> 00:31:05,750
just<font color="#CCCCCC"> use</font><font color="#E5E5E5"> the pin</font>

712
00:31:02,950 --> 00:31:07,700
not so really good the whole<font color="#E5E5E5"> autofill</font>

713
00:31:05,750 --> 00:31:10,160
story so many of the bugs we found were

714
00:31:07,700 --> 00:31:16,190
not<font color="#E5E5E5"> in the encryption of</font><font color="#CCCCCC"> the password</font>

715
00:31:10,160 --> 00:31:18,860
database itself<font color="#CCCCCC"> if you have</font><font color="#E5E5E5"> sorry if you</font>

716
00:31:16,190 --> 00:31:21,260
have pin disabled and you<font color="#E5E5E5"> really have a</font>

717
00:31:18,860 --> 00:31:22,729
sensible implementation but then things

718
00:31:21,260 --> 00:31:24,800
like<font color="#CCCCCC"> auto-filled</font>

719
00:31:22,730 --> 00:31:27,650
where someone didn't<font color="#E5E5E5"> check hey where</font><font color="#CCCCCC"> am</font>

720
00:31:24,800 --> 00:31:30,470
i filling in that<font color="#E5E5E5"> stuff</font><font color="#CCCCCC"> that</font><font color="#E5E5E5"> then broke</font>

721
00:31:27,650 --> 00:31:32,870
it<font color="#E5E5E5"> for a future like this single sign-on</font>

722
00:31:30,470 --> 00:31:35,120
<font color="#CCCCCC">I take all the subdomains because they</font>

723
00:31:32,870 --> 00:31:37,580
belong<font color="#CCCCCC"> to the same real anyway I can</font>

724
00:31:35,120 --> 00:31:40,780
just put in<font color="#E5E5E5"> the password this</font><font color="#CCCCCC"> is what</font>

725
00:31:37,580 --> 00:31:44,449
killed<font color="#E5E5E5"> off most of the password managers</font>

726
00:31:40,780 --> 00:31:46,070
<font color="#CCCCCC">as a summary so what</font><font color="#E5E5E5"> would we recommend</font>

727
00:31:44,450 --> 00:31:50,810
because we don't<font color="#E5E5E5"> just want to bash</font>

728
00:31:46,070 --> 00:31:52,810
<font color="#CCCCCC">people</font><font color="#E5E5E5"> we want to do something</font><font color="#CCCCCC"> good you</font>

729
00:31:50,810 --> 00:31:56,450
secure storage for passwords and keys

730
00:31:52,810 --> 00:31:58,580
this means do not<font color="#E5E5E5"> just write it into a</font>

731
00:31:56,450 --> 00:32:00,650
file<font color="#E5E5E5"> and hope that the Android</font>

732
00:31:58,580 --> 00:32:04,370
sandboxing model will take care<font color="#CCCCCC"> of it</font>

733
00:32:00,650 --> 00:32:06,440
<font color="#E5E5E5">use proper crypto</font><font color="#CCCCCC"> no own algorithms</font><font color="#E5E5E5"> I've</font>

734
00:32:04,370 --> 00:32:08,750
gone on<font color="#E5E5E5"> for quite a time about this</font>

735
00:32:06,440 --> 00:32:11,660
topic<font color="#E5E5E5"> but it really happens again and</font>

736
00:32:08,750 --> 00:32:14,330
<font color="#CCCCCC">again</font><font color="#E5E5E5"> never use</font><font color="#CCCCCC"> hard coded keys also a</font>

737
00:32:11,660 --> 00:32:17,180
favorite<font color="#E5E5E5"> one if the keys are</font><font color="#CCCCCC"> in the code</font>

738
00:32:14,330 --> 00:32:20,030
<font color="#E5E5E5">they're public it's super easy</font><font color="#CCCCCC"> even if</font>

739
00:32:17,180 --> 00:32:23,000
you obfuscate the<font color="#E5E5E5"> hell out of your app</font>

740
00:32:20,030 --> 00:32:24,920
it's super easy to<font color="#E5E5E5"> be up</font><font color="#CCCCCC"> to skated</font><font color="#E5E5E5"> even</font>

741
00:32:23,000 --> 00:32:27,860
if you put the keys in native code it

742
00:32:24,920 --> 00:32:31,210
probably takes<font color="#CCCCCC"> us</font><font color="#E5E5E5"> about 15 minutes for</font>

743
00:32:27,860 --> 00:32:33,199
native code<font color="#E5E5E5"> slightly longer</font>

744
00:32:31,210 --> 00:32:36,140
whenever you're passing sensitive

745
00:32:33,200 --> 00:32:38,600
information just<font color="#E5E5E5"> validate the receivers</font>

746
00:32:36,140 --> 00:32:40,160
never trust<font color="#E5E5E5"> that someone</font><font color="#CCCCCC"> who's claiming</font>

747
00:32:38,600 --> 00:32:43,790
<font color="#E5E5E5">to be a certain air for a certain</font>

748
00:32:40,160 --> 00:32:45,170
website<font color="#E5E5E5"> to just be it for example</font><font color="#CCCCCC"> for an</font>

749
00:32:43,790 --> 00:32:47,990
app if you<font color="#CCCCCC"> want to know whether the guy</font>

750
00:32:45,170 --> 00:32:50,450
is really<font color="#CCCCCC"> condor facebook</font><font color="#E5E5E5"> check the</font>

751
00:32:47,990 --> 00:32:53,480
certificate<font color="#E5E5E5"> with which it was signed not</font>

752
00:32:50,450 --> 00:32:56,480
just check the package name if you're

753
00:32:53,480 --> 00:33:00,500
using communications then use TLS<font color="#E5E5E5"> do not</font>

754
00:32:56,480 --> 00:33:04,130
try to layer something<font color="#E5E5E5"> on top of HTTP it</font>

755
00:33:00,500 --> 00:33:06,770
will usually<font color="#E5E5E5"> break now we're through the</font>

756
00:33:04,130 --> 00:33:09,320
presentation<font color="#E5E5E5"> and since we have more time</font>

757
00:33:06,770 --> 00:33:11,870
<font color="#CCCCCC">than I thought</font><font color="#E5E5E5"> I can actually show</font><font color="#CCCCCC"> you</font>

758
00:33:09,320 --> 00:33:16,129
<font color="#CCCCCC">the second demo this was the residue</font>

759
00:33:11,870 --> 00:33:19,969
attack<font color="#E5E5E5"> that I skipped let me just</font>

760
00:33:16,130 --> 00:33:22,520
to the other screen this was the dash

761
00:33:19,970 --> 00:33:24,470
line password manager so what we do here

762
00:33:22,520 --> 00:33:29,540
<font color="#CCCCCC">is we we</font><font color="#E5E5E5"> start the normal password</font>

763
00:33:24,470 --> 00:33:30,260
<font color="#E5E5E5">manager enter our super secure master</font>

764
00:33:29,540 --> 00:33:33,320
password

765
00:33:30,260 --> 00:33:39,110
I think it's master or master<font color="#CCCCCC"> plan its</font>

766
00:33:33,320 --> 00:33:45,409
<font color="#CCCCCC">master</font><font color="#E5E5E5"> prosper and we see we</font><font color="#CCCCCC"> have a key</font>

767
00:33:39,110 --> 00:33:47,479
for for Twitter in here in the<font color="#E5E5E5"> settings</font>

768
00:33:45,410 --> 00:33:49,880
we enable that<font color="#CCCCCC"> we want to</font><font color="#E5E5E5"> be able to use</font>

769
00:33:47,480 --> 00:33:56,810
a four digit PIN code instead<font color="#E5E5E5"> of</font><font color="#CCCCCC"> the</font>

770
00:33:49,880 --> 00:34:01,190
normal master password<font color="#E5E5E5"> okay yeah we</font>

771
00:33:56,810 --> 00:34:06,580
remembered it and now as a next<font color="#CCCCCC"> step</font>

772
00:34:01,190 --> 00:34:06,580
<font color="#E5E5E5">we'll start our attacker application</font>

773
00:34:12,090 --> 00:34:17,520
<font color="#E5E5E5">okay we we try to want again</font><font color="#CCCCCC"> truth</font><font color="#E5E5E5"> like</font>

774
00:34:15,989 --> 00:34:19,109
when we now come up we don't<font color="#E5E5E5"> have to</font>

775
00:34:17,520 --> 00:34:23,370
enter the long last<font color="#E5E5E5"> apartment we just</font>

776
00:34:19,110 --> 00:34:24,720
have to enter the<font color="#CCCCCC"> a pin ever again in</font>

777
00:34:23,370 --> 00:34:27,920
the application<font color="#E5E5E5"> and we can</font><font color="#CCCCCC"> see</font><font color="#E5E5E5"> our</font>

778
00:34:24,719 --> 00:34:27,919
credentials for twittering<font color="#E5E5E5"> here</font>

779
00:34:38,810 --> 00:34:45,290
and this is the<font color="#E5E5E5"> script that</font><font color="#CCCCCC"> we have</font><font color="#E5E5E5"> for</font>

780
00:34:41,719 --> 00:34:48,408
for our exploit which just means<font color="#E5E5E5"> that we</font>

781
00:34:45,290 --> 00:34:53,060
we grab the<font color="#CCCCCC"> the account database from</font>

782
00:34:48,409 --> 00:34:55,780
the from the phone<font color="#E5E5E5"> and we can see</font><font color="#CCCCCC"> that</font>

783
00:34:53,060 --> 00:34:58,880
the<font color="#CCCCCC"> restore account is actually in there</font>

784
00:34:55,780 --> 00:35:00,710
but this was<font color="#CCCCCC"> just a demonstration to</font>

785
00:34:58,880 --> 00:35:03,980
show<font color="#CCCCCC"> you how our Android stores</font><font color="#E5E5E5"> this</font>

786
00:35:00,710 --> 00:35:05,990
account<font color="#E5E5E5"> the real attack is now in our in</font>

787
00:35:03,980 --> 00:35:07,100
our app this works<font color="#E5E5E5"> what you see on the</font>

788
00:35:05,990 --> 00:35:10,609
right side<font color="#CCCCCC"> on</font><font color="#E5E5E5"> the phone this works</font>

789
00:35:07,100 --> 00:35:13,549
without any root permissions<font color="#CCCCCC"> so we first</font>

790
00:35:10,610 --> 00:35:16,340
<font color="#E5E5E5">try to register the account the account</font>

791
00:35:13,550 --> 00:35:18,470
type for<font color="#CCCCCC"> Cumberbatch line we see</font><font color="#E5E5E5"> our</font>

792
00:35:16,340 --> 00:35:19,940
play this ID is<font color="#E5E5E5"> already in there because</font>

793
00:35:18,470 --> 00:35:22,850
<font color="#E5E5E5">the dashed line application has already</font>

794
00:35:19,940 --> 00:35:24,500
<font color="#CCCCCC">registered the</font><font color="#E5E5E5"> type combo</font><font color="#CCCCCC"> dash line what</font>

795
00:35:22,850 --> 00:35:27,650
we now do is we<font color="#E5E5E5"> get rid of the dash line</font>

796
00:35:24,500 --> 00:35:30,260
app<font color="#CCCCCC"> okay and now we can extract the</font>

797
00:35:27,650 --> 00:35:31,850
<font color="#E5E5E5">password because even if we uninstall</font>

798
00:35:30,260 --> 00:35:34,280
the dash line F the computation<font color="#E5E5E5"> and</font>

799
00:35:31,850 --> 00:35:36,560
account type is still in there in the

800
00:35:34,280 --> 00:35:38,300
<font color="#E5E5E5">database and now since we</font><font color="#CCCCCC"> are</font><font color="#E5E5E5"> the only</font>

801
00:35:36,560 --> 00:35:40,340
one requesting access<font color="#E5E5E5"> to convert dash</font>

802
00:35:38,300 --> 00:35:41,750
line<font color="#CCCCCC"> we're also the</font><font color="#E5E5E5"> first one and the</font>

803
00:35:40,340 --> 00:35:43,430
first<font color="#CCCCCC"> one always</font><font color="#E5E5E5"> wins when he tries to</font>

804
00:35:41,750 --> 00:35:46,160
<font color="#CCCCCC">get access</font><font color="#E5E5E5"> because this is how the</font>

805
00:35:43,430 --> 00:35:48,500
security of the Android Account Manager

806
00:35:46,160 --> 00:35:50,060
works<font color="#E5E5E5"> and this is why the documentation</font>

807
00:35:48,500 --> 00:35:54,200
says never<font color="#CCCCCC"> put any</font><font color="#E5E5E5"> sensitive stuff in</font>

808
00:35:50,060 --> 00:36:00,440
there<font color="#CCCCCC"> okay now you also have</font><font color="#E5E5E5"> the demo</font>

809
00:35:54,200 --> 00:36:02,240
video and I guess that's it from from

810
00:36:00,440 --> 00:36:04,090
<font color="#E5E5E5">our side and we're happy to take</font>

811
00:36:02,240 --> 00:36:10,430
questions

812
00:36:04,090 --> 00:36:12,860
yes very<font color="#CCCCCC"> reformed yes all the issues we</font>

813
00:36:10,430 --> 00:36:15,620
have shown here have been fixed<font color="#E5E5E5"> by the</font>

814
00:36:12,860 --> 00:36:18,310
<font color="#E5E5E5">by</font><font color="#CCCCCC"> the vendors sometimes with a bit of</font>

815
00:36:15,620 --> 00:36:20,569
<font color="#E5E5E5">discussion I mentioned the point about</font>

816
00:36:18,310 --> 00:36:24,080
matching all the<font color="#E5E5E5"> subdomains to the same</font>

817
00:36:20,570 --> 00:36:25,250
credentials<font color="#CCCCCC"> so the first the</font><font color="#E5E5E5"> vendor said</font>

818
00:36:24,080 --> 00:36:35,620
yeah you<font color="#E5E5E5"> know it's a feature it's not a</font>

819
00:36:25,250 --> 00:36:35,620
back<font color="#E5E5E5"> ok but all of them have replied yes</font>

820
00:36:38,680 --> 00:36:45,919
<font color="#E5E5E5">it gives</font><font color="#CCCCCC"> no</font><font color="#E5E5E5"> angles</font>

821
00:36:42,490 --> 00:36:48,919
<font color="#E5E5E5">keystore is the</font><font color="#CCCCCC"> keystore API this</font><font color="#E5E5E5"> is the</font>

822
00:36:45,920 --> 00:36:51,730
only<font color="#CCCCCC"> reliable storage I know in the in</font>

823
00:36:48,920 --> 00:36:55,280
the older version<font color="#E5E5E5"> it's not supported for</font>

824
00:36:51,730 --> 00:36:58,040
since Android 4.4<font color="#E5E5E5"> based the key storage</font>

825
00:36:55,280 --> 00:37:01,580
API<font color="#CCCCCC"> and they also in the newer version</font>

826
00:36:58,040 --> 00:37:04,460
<font color="#CCCCCC">dazzles for</font><font color="#E5E5E5"> secure Hydra Moodle behind</font>

827
00:37:01,580 --> 00:37:07,340
it<font color="#E5E5E5"> so this is the only secure storage</font>

828
00:37:04,460 --> 00:37:10,670
<font color="#CCCCCC">and it's also designed for storing keys</font>

829
00:37:07,340 --> 00:37:14,600
or credentials<font color="#E5E5E5"> it sometimes has problems</font>

830
00:37:10,670 --> 00:37:16,850
that it throws exceptions when the user

831
00:37:14,600 --> 00:37:19,220
<font color="#E5E5E5">suddenly creates a lock screen</font><font color="#CCCCCC"> or</font>

832
00:37:16,850 --> 00:37:22,100
<font color="#CCCCCC">something like that</font><font color="#E5E5E5"> and it's very hard</font>

833
00:37:19,220 --> 00:37:25,009
to<font color="#CCCCCC"> reproduce locally etc have you</font>

834
00:37:22,100 --> 00:37:27,710
encountered anything like that<font color="#E5E5E5"> yes this</font>

835
00:37:25,010 --> 00:37:29,570
<font color="#E5E5E5">is true as you said in the the earlier</font>

836
00:37:27,710 --> 00:37:33,080
versions without<font color="#E5E5E5"> any hardware support</font>

837
00:37:29,570 --> 00:37:34,640
the user<font color="#CCCCCC"> enforce</font><font color="#E5E5E5"> to to also create an</font>

838
00:37:33,080 --> 00:37:36,529
additional lock screen because the

839
00:37:34,640 --> 00:37:39,170
encryption<font color="#E5E5E5"> for the</font><font color="#CCCCCC"> key store is derived</font>

840
00:37:36,530 --> 00:37:40,910
from<font color="#E5E5E5"> this lock screen but this is the</font>

841
00:37:39,170 --> 00:37:43,340
<font color="#E5E5E5">problem of the security you need</font>

842
00:37:40,910 --> 00:37:45,109
somewhere some secret element and in

843
00:37:43,340 --> 00:37:47,090
this<font color="#E5E5E5"> case the secret element is the lock</font>

844
00:37:45,109 --> 00:37:50,690
screen<font color="#E5E5E5"> there there is no other</font>

845
00:37:47,090 --> 00:37:57,590
<font color="#E5E5E5">possibility to to get us really as we</font>

846
00:37:50,690 --> 00:38:00,050
say secure storage and<font color="#E5E5E5"> we'll do auto</font>

847
00:37:57,590 --> 00:38:02,420
mode yeah as I<font color="#E5E5E5"> said just then if you</font>

848
00:38:00,050 --> 00:38:05,630
develop<font color="#E5E5E5"> no app you</font><font color="#CCCCCC"> have to decide or</font>

849
00:38:02,420 --> 00:38:07,520
make<font color="#CCCCCC"> a if condition which API you use if</font>

850
00:38:05,630 --> 00:38:09,590
<font color="#E5E5E5">you have a</font><font color="#CCCCCC"> newer</font><font color="#E5E5E5"> one use the key store</font>

851
00:38:07,520 --> 00:38:10,640
in the other one inform the user you

852
00:38:09,590 --> 00:38:14,290
have<font color="#E5E5E5"> to set a lock</font>

853
00:38:10,640 --> 00:38:16,700
this must<font color="#E5E5E5"> be</font><font color="#CCCCCC"> secure there is no no other</font>

854
00:38:14,290 --> 00:38:22,750
other way<font color="#E5E5E5"> let's say it in this way</font>

855
00:38:16,700 --> 00:38:22,750
because<font color="#E5E5E5"> this</font><font color="#CCCCCC"> is how crypto works</font><font color="#E5E5E5"> thanks</font>

856
00:38:23,020 --> 00:38:35,060
more questions<font color="#CCCCCC"> okay then if there are</font><font color="#E5E5E5"> no</font>

857
00:38:32,840 --> 00:38:38,359
more<font color="#CCCCCC"> questions I think there's</font><font color="#E5E5E5"> lunch</font>

858
00:38:35,060 --> 00:38:43,150
coming up rod yes we have one<font color="#E5E5E5"> hour lunch</font>

859
00:38:38,359 --> 00:38:43,150
<font color="#CCCCCC">break great thank you very much</font>

