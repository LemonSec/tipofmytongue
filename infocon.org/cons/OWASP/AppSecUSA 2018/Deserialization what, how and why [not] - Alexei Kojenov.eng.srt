1
00:00:03,560 --> 00:00:08,760
hey hey good morning everyone<font color="#CCCCCC"> thank you</font>

2
00:00:06,629 --> 00:00:11,280
<font color="#CCCCCC">for coming to this talk plus</font><font color="#E5E5E5"> talk before</font>

3
00:00:08,760 --> 00:00:12,928
lunch<font color="#E5E5E5"> my name is Alex a coach on offense</font>

4
00:00:11,280 --> 00:00:16,439
<font color="#E5E5E5">I'm gonna be talking about DC</font>

5
00:00:12,929 --> 00:00:18,510
realization<font color="#E5E5E5"> today a little</font><font color="#CCCCCC"> bit about me</font>

6
00:00:16,440 --> 00:00:20,220
I'm a software<font color="#CCCCCC"> developer in the past</font><font color="#E5E5E5"> and</font>

7
00:00:18,510 --> 00:00:22,560
then at some point<font color="#E5E5E5"> I</font><font color="#CCCCCC"> realized that</font>

8
00:00:20,220 --> 00:00:24,240
<font color="#E5E5E5">breaking code was way more interesting</font>

9
00:00:22,560 --> 00:00:26,519
<font color="#CCCCCC">than</font><font color="#E5E5E5"> writing code and</font><font color="#CCCCCC"> I moved</font><font color="#E5E5E5"> to the</font>

10
00:00:24,240 --> 00:00:29,220
security side and have been<font color="#CCCCCC"> doing</font><font color="#E5E5E5"> that</font>

11
00:00:26,519 --> 00:00:31,229
ever since<font color="#CCCCCC"> but still deep inside</font><font color="#E5E5E5"> I think</font>

12
00:00:29,220 --> 00:00:34,320
<font color="#E5E5E5">I'm a developer so today's talk is gonna</font>

13
00:00:31,230 --> 00:00:36,719
<font color="#E5E5E5">be mostly looking at the code running it</font>

14
00:00:34,320 --> 00:00:38,670
and seeing what's<font color="#CCCCCC"> happening</font><font color="#E5E5E5"> so those</font>

15
00:00:36,719 --> 00:00:40,649
people<font color="#E5E5E5"> in the back I</font><font color="#CCCCCC"> don't</font><font color="#E5E5E5"> know you</font>

16
00:00:38,670 --> 00:00:42,920
might want to<font color="#E5E5E5"> move a little bit closer</font><font color="#CCCCCC"> I</font>

17
00:00:40,649 --> 00:00:45,360
tried to<font color="#E5E5E5"> make the</font><font color="#CCCCCC"> fun</font><font color="#E5E5E5"> bigger in my demo</font>

18
00:00:42,920 --> 00:00:47,280
<font color="#E5E5E5">we're going</font><font color="#CCCCCC"> to be</font><font color="#E5E5E5"> talking about what</font>

19
00:00:45,360 --> 00:00:49,469
this<font color="#E5E5E5"> realization is how it's used</font>

20
00:00:47,280 --> 00:00:52,079
why it can be<font color="#E5E5E5"> dangerous and we're going</font>

21
00:00:49,469 --> 00:00:55,410
<font color="#E5E5E5">to talk</font><font color="#CCCCCC"> about few vulnerabilities so</font>

22
00:00:52,079 --> 00:00:57,629
imagine you<font color="#CCCCCC"> have a program</font><font color="#E5E5E5"> with some</font>

23
00:00:55,410 --> 00:00:59,819
kind of object<font color="#CCCCCC"> in this program in the</font>

24
00:00:57,629 --> 00:01:02,160
memory and that program wants to send

25
00:00:59,820 --> 00:01:04,830
that object to to another process or

26
00:01:02,160 --> 00:01:08,009
another<font color="#E5E5E5"> program</font><font color="#CCCCCC"> and the the way it's</font>

27
00:01:04,830 --> 00:01:10,710
usually<font color="#E5E5E5"> done that object is converted</font><font color="#CCCCCC"> to</font>

28
00:01:08,010 --> 00:01:12,930
some kind of byte stream and<font color="#CCCCCC"> that byte</font>

29
00:01:10,710 --> 00:01:15,600
stream goes over a communication<font color="#CCCCCC"> channel</font>

30
00:01:12,930 --> 00:01:19,110
which could be a network<font color="#E5E5E5"> or or</font><font color="#CCCCCC"> even a</font>

31
00:01:15,600 --> 00:01:21,929
<font color="#E5E5E5">disk or some kind of API call and on the</font>

32
00:01:19,110 --> 00:01:24,600
other<font color="#CCCCCC"> end that byte stream is converted</font>

33
00:01:21,930 --> 00:01:27,509
back to<font color="#E5E5E5"> the</font><font color="#CCCCCC"> internal representation</font><font color="#E5E5E5"> of</font>

34
00:01:24,600 --> 00:01:29,280
the<font color="#CCCCCC"> object</font><font color="#E5E5E5"> in another program and these</font>

35
00:01:27,509 --> 00:01:31,979
two processes<font color="#E5E5E5"> are called serialization</font>

36
00:01:29,280 --> 00:01:37,220
<font color="#E5E5E5">and deserialization</font><font color="#CCCCCC"> this is a very</font><font color="#E5E5E5"> easy</font>

37
00:01:31,979 --> 00:01:41,789
concept<font color="#CCCCCC"> there are languages and that</font>

38
00:01:37,220 --> 00:01:44,789
support native civilization<font color="#E5E5E5"> and some of</font>

39
00:01:41,790 --> 00:01:48,570
them use<font color="#E5E5E5"> binary format for example Java</font>

40
00:01:44,790 --> 00:01:52,170
or even<font color="#E5E5E5"> even if you just snap a memory</font>

41
00:01:48,570 --> 00:01:53,610
that<font color="#E5E5E5"> is allocated by a C++ object you</font>

42
00:01:52,170 --> 00:01:57,509
know that you can tell<font color="#CCCCCC"> that this is a</font>

43
00:01:53,610 --> 00:02:01,350
civilized<font color="#E5E5E5"> object</font><font color="#CCCCCC"> and we also have some</font>

44
00:01:57,509 --> 00:02:04,829
human readable formats<font color="#CCCCCC"> for example XML</font>

45
00:02:01,350 --> 00:02:06,390
or JSON these are basically text files

46
00:02:04,829 --> 00:02:09,149
which<font color="#CCCCCC"> you can open</font><font color="#E5E5E5"> and read and</font>

47
00:02:06,390 --> 00:02:10,449
understand exactly what's in it there

48
00:02:09,149 --> 00:02:12,520
<font color="#E5E5E5">are tags and</font>

49
00:02:10,449 --> 00:02:15,640
data between<font color="#E5E5E5"> those tags or some other</font>

50
00:02:12,520 --> 00:02:18,489
kind of characters that<font color="#E5E5E5"> tell you what</font>

51
00:02:15,640 --> 00:02:22,329
they date data is and how you<font color="#E5E5E5"> can</font>

52
00:02:18,489 --> 00:02:26,620
interpret it<font color="#CCCCCC"> alright</font><font color="#E5E5E5"> and with that we</font>

53
00:02:22,330 --> 00:02:28,300
move into your into your<font color="#E5E5E5"> lab and let's</font>

54
00:02:26,620 --> 00:02:32,620
take<font color="#E5E5E5"> a look at some</font><font color="#CCCCCC"> basic this</font>

55
00:02:28,300 --> 00:02:33,069
civilization stuff<font color="#CCCCCC"> I hope</font><font color="#E5E5E5"> you can see it</font>

56
00:02:32,620 --> 00:02:36,670
<font color="#CCCCCC">okay</font>

57
00:02:33,069 --> 00:02:40,000
I made the font large enough<font color="#E5E5E5"> so we have</font>

58
00:02:36,670 --> 00:02:42,250
a class<font color="#E5E5E5"> called planet and this class</font>

59
00:02:40,000 --> 00:02:44,410
implements<font color="#CCCCCC"> java dot io that's</font>

60
00:02:42,250 --> 00:02:46,000
serializable which means that this class

61
00:02:44,410 --> 00:02:49,359
<font color="#E5E5E5">the objects of this class could be</font>

62
00:02:46,000 --> 00:02:51,880
serialized<font color="#CCCCCC"> and deserialized</font><font color="#E5E5E5"> planet has</font>

63
00:02:49,360 --> 00:02:58,950
order in the solar system<font color="#CCCCCC"> named</font><font color="#E5E5E5"> nickname</font>

64
00:02:51,880 --> 00:03:01,959
and mass<font color="#E5E5E5"> and not much else and</font><font color="#CCCCCC"> we</font><font color="#E5E5E5"> have a</font>

65
00:02:58,950 --> 00:03:05,018
class<font color="#E5E5E5"> called basic serialize which is we</font>

66
00:03:01,959 --> 00:03:07,120
<font color="#E5E5E5">just has a the main method</font><font color="#CCCCCC"> and first</font>

67
00:03:05,019 --> 00:03:12,250
thing it does it creates<font color="#E5E5E5"> an instance of</font>

68
00:03:07,120 --> 00:03:15,130
of a planet<font color="#E5E5E5"> and we created planet for</font>

69
00:03:12,250 --> 00:03:16,959
<font color="#E5E5E5">Earth and it's gonna see realize that</font>

70
00:03:15,130 --> 00:03:20,440
object<font color="#E5E5E5"> and write it to a file</font><font color="#CCCCCC"> called</font>

71
00:03:16,959 --> 00:03:23,769
<font color="#E5E5E5">Earth</font><font color="#CCCCCC"> dot s ER and the way serialization</font>

72
00:03:20,440 --> 00:03:29,230
is done in<font color="#CCCCCC"> Java</font><font color="#E5E5E5"> is you create object</font>

73
00:03:23,769 --> 00:03:31,600
output stream<font color="#CCCCCC"> and and you call its</font>

74
00:03:29,230 --> 00:03:34,358
method called<font color="#CCCCCC"> write</font><font color="#E5E5E5"> object and you feed</font>

75
00:03:31,600 --> 00:03:36,730
you can feed any<font color="#CCCCCC"> Java object to it and</font>

76
00:03:34,359 --> 00:03:38,650
it will<font color="#CCCCCC"> just serialize it</font><font color="#E5E5E5"> and since we</font>

77
00:03:36,730 --> 00:03:42,540
<font color="#E5E5E5">write in</font><font color="#CCCCCC"> a</font><font color="#E5E5E5"> to</font><font color="#CCCCCC"> a file we also have our</font>

78
00:03:38,650 --> 00:03:45,519
file output stream<font color="#E5E5E5"> and as soon as we</font>

79
00:03:42,540 --> 00:03:49,170
write our object to<font color="#E5E5E5"> a file we're going</font>

80
00:03:45,519 --> 00:03:53,530
<font color="#CCCCCC">to read</font><font color="#E5E5E5"> from it and we're going to use</font>

81
00:03:49,170 --> 00:03:55,809
<font color="#CCCCCC">our object input stream and deserialize</font>

82
00:03:53,530 --> 00:03:59,440
that object by calling<font color="#E5E5E5"> the read object</font>

83
00:03:55,810 --> 00:04:01,750
method and this method<font color="#E5E5E5"> this realizes the</font>

84
00:03:59,440 --> 00:04:03,940
byte stream and returns<font color="#E5E5E5"> that just a</font>

85
00:04:01,750 --> 00:04:07,209
plain Java object and we need to cast it

86
00:04:03,940 --> 00:04:11,290
to<font color="#E5E5E5"> the class</font><font color="#CCCCCC"> that we are dealing with</font>

87
00:04:07,209 --> 00:04:14,130
which is<font color="#E5E5E5"> planet so enough now theory</font>

88
00:04:11,290 --> 00:04:14,130
let's let's run it

89
00:04:15,959 --> 00:04:25,390
I'm<font color="#E5E5E5"> come compiling</font><font color="#CCCCCC"> my codes hope it</font>

90
00:04:21,760 --> 00:04:28,270
works yeah so I ran the code<font color="#E5E5E5"> and it told</font>

91
00:04:25,390 --> 00:04:32,650
<font color="#CCCCCC">me that object was written to</font><font color="#E5E5E5"> earth</font><font color="#CCCCCC"> s CR</font>

92
00:04:28,270 --> 00:04:39,490
<font color="#E5E5E5">and then we read it and and we</font><font color="#CCCCCC"> printed</font>

93
00:04:32,650 --> 00:04:44,380
that planet<font color="#E5E5E5"> right here okay if I look at</font>

94
00:04:39,490 --> 00:04:46,030
the<font color="#E5E5E5"> disk</font><font color="#CCCCCC"> I have this file so let's let's</font>

95
00:04:44,380 --> 00:04:49,409
take<font color="#E5E5E5"> a look at this file</font><font color="#CCCCCC"> a little closer</font>

96
00:04:46,030 --> 00:04:52,479
<font color="#E5E5E5">first of all I'm gonna use Linux utility</font>

97
00:04:49,410 --> 00:04:54,490
called file which analyzes file and

98
00:04:52,480 --> 00:04:56,710
tells me<font color="#CCCCCC"> what it is and</font><font color="#E5E5E5"> in this case</font><font color="#CCCCCC"> it</font>

99
00:04:54,490 --> 00:05:00,820
<font color="#E5E5E5">tells me this this is</font><font color="#CCCCCC"> javis</font><font color="#E5E5E5"> organization</font>

100
00:04:56,710 --> 00:05:04,599
<font color="#E5E5E5">data version</font><font color="#CCCCCC"> 5 ok pretty</font><font color="#E5E5E5"> good now let's</font>

101
00:05:00,820 --> 00:05:07,810
take a look<font color="#E5E5E5"> at the hex data and I'm</font>

102
00:05:04,600 --> 00:05:14,920
gonna use a I think that's the right

103
00:05:07,810 --> 00:05:17,560
syntax<font color="#E5E5E5"> hold on a sec I'm sorry about</font>

104
00:05:14,920 --> 00:05:21,070
<font color="#CCCCCC">that in each year</font><font color="#E5E5E5"> make this</font><font color="#CCCCCC"> window</font><font color="#E5E5E5"> a</font>

105
00:05:17,560 --> 00:05:24,850
<font color="#E5E5E5">little smaller so</font><font color="#CCCCCC"> everything fits on the</font>

106
00:05:21,070 --> 00:05:27,730
<font color="#CCCCCC">screen</font><font color="#E5E5E5"> ok this is the hex data for that</font>

107
00:05:24,850 --> 00:05:30,070
serialized<font color="#E5E5E5"> Java object and the first</font>

108
00:05:27,730 --> 00:05:32,140
four bytes read a CED<font color="#E5E5E5"> zero zero zero</font>

109
00:05:30,070 --> 00:05:34,870
<font color="#CCCCCC">five if</font><font color="#E5E5E5"> you see this kind of signature</font>

110
00:05:32,140 --> 00:05:37,030
<font color="#E5E5E5">somewhere you can guess that</font><font color="#CCCCCC"> this is a</font>

111
00:05:34,870 --> 00:05:39,820
serialized Java data that's useful<font color="#E5E5E5"> to</font>

112
00:05:37,030 --> 00:05:42,659
know<font color="#E5E5E5"> on the right hand</font><font color="#CCCCCC"> side the raw</font><font color="#E5E5E5"> data</font>

113
00:05:39,820 --> 00:05:46,000
and even though it's not necessarily

114
00:05:42,660 --> 00:05:48,070
<font color="#E5E5E5">text it's not it's not</font><font color="#CCCCCC"> really</font><font color="#E5E5E5"> readable</font>

115
00:05:46,000 --> 00:05:50,350
but you can see pieces<font color="#E5E5E5"> of information</font>

116
00:05:48,070 --> 00:05:55,060
<font color="#E5E5E5">here like planet which</font><font color="#CCCCCC"> is our class name</font>

117
00:05:50,350 --> 00:05:57,730
<font color="#E5E5E5">or the member names like nickname and</font>

118
00:05:55,060 --> 00:06:04,510
even the date itself<font color="#CCCCCC"> Earth and blue</font>

119
00:05:57,730 --> 00:06:08,080
planet<font color="#E5E5E5"> cool let's also try to base64</font>

120
00:06:04,510 --> 00:06:11,140
encode this data<font color="#E5E5E5"> and this</font><font color="#CCCCCC"> is</font><font color="#E5E5E5"> completely</font>

121
00:06:08,080 --> 00:06:17,440
unreadable<font color="#E5E5E5"> but the first the first five</font>

122
00:06:11,140 --> 00:06:18,909
<font color="#CCCCCC">characters</font><font color="#E5E5E5"> read</font><font color="#CCCCCC"> ro 0</font><font color="#E5E5E5"> a B if you see this</font>

123
00:06:17,440 --> 00:06:21,969
<font color="#E5E5E5">kind of signature somewhere</font><font color="#CCCCCC"> like a</font>

124
00:06:18,910 --> 00:06:23,560
neighbor<font color="#CCCCCC"> block for example</font><font color="#E5E5E5"> you can guess</font>

125
00:06:21,970 --> 00:06:26,460
with high probability<font color="#CCCCCC"> that</font><font color="#E5E5E5"> this is</font>

126
00:06:23,560 --> 00:06:26,460
serialized Java data

127
00:06:28,179 --> 00:06:37,609
<font color="#CCCCCC">okay</font><font color="#E5E5E5"> and we're</font><font color="#CCCCCC"> moving into</font><font color="#E5E5E5"> our second</font>

128
00:06:36,049 --> 00:06:42,258
exercise<font color="#E5E5E5"> and we're going to use</font><font color="#CCCCCC"> see</font>

129
00:06:37,609 --> 00:06:46,688
<font color="#E5E5E5">realized object for authentication let</font>

130
00:06:42,259 --> 00:06:46,689
me clean<font color="#CCCCCC"> this up a little</font><font color="#E5E5E5"> bit</font>

131
00:06:52,730 --> 00:06:58,260
we have a different class here it's

132
00:06:55,470 --> 00:07:01,050
called user and it also<font color="#E5E5E5"> implements Java</font>

133
00:06:58,260 --> 00:07:04,020
dot IO<font color="#CCCCCC"> is serializable</font><font color="#E5E5E5"> which as we know</font>

134
00:07:01,050 --> 00:07:05,850
this object<font color="#E5E5E5"> can be</font><font color="#CCCCCC"> sterilized in</font><font color="#E5E5E5"> this</font>

135
00:07:04,020 --> 00:07:08,880
<font color="#E5E5E5">relized and user has a</font><font color="#CCCCCC"> username enroll</font>

136
00:07:05,850 --> 00:07:11,850
and has a<font color="#E5E5E5"> little method called is admin</font>

137
00:07:08,880 --> 00:07:15,360
which returns true if<font color="#E5E5E5"> the role equals</font>

138
00:07:11,850 --> 00:07:19,470
administrator we also have our session

139
00:07:15,360 --> 00:07:21,720
manager our session class and this<font color="#CCCCCC"> class</font>

140
00:07:19,470 --> 00:07:23,730
has<font color="#E5E5E5"> two constructors the first</font>

141
00:07:21,720 --> 00:07:26,729
constructor accepts<font color="#CCCCCC"> username and</font>

142
00:07:23,730 --> 00:07:30,419
password and authenticates the user with

143
00:07:26,729 --> 00:07:32,580
these<font color="#CCCCCC"> credentials</font><font color="#E5E5E5"> and it and then it</font>

144
00:07:30,419 --> 00:07:36,000
returns the session cookie<font color="#E5E5E5"> based on that</font>

145
00:07:32,580 --> 00:07:41,510
and our session cookie is just

146
00:07:36,000 --> 00:07:45,780
serialized<font color="#E5E5E5"> user object and also has a</font>

147
00:07:41,510 --> 00:07:48,599
second<font color="#E5E5E5"> constructor and this one accepts</font>

148
00:07:45,780 --> 00:07:51,150
cookie and performs<font color="#E5E5E5"> the opposite thing</font>

149
00:07:48,600 --> 00:07:53,880
<font color="#E5E5E5">it dis realizes this cookie gets the</font>

150
00:07:51,150 --> 00:07:56,849
user<font color="#E5E5E5"> object out of</font><font color="#CCCCCC"> it and then welcomes</font>

151
00:07:53,880 --> 00:07:59,969
the user back and<font color="#E5E5E5"> determines whether the</font>

152
00:07:56,850 --> 00:08:05,520
user is administrator so let's see what

153
00:07:59,970 --> 00:08:08,250
happens<font color="#E5E5E5"> when we run it I'm going to</font>

154
00:08:05,520 --> 00:08:10,740
pretend that I'm typing this in a web

155
00:08:08,250 --> 00:08:14,669
interface<font color="#CCCCCC"> this</font><font color="#E5E5E5"> is just</font><font color="#CCCCCC"> the unit</font><font color="#E5E5E5"> test</font>

156
00:08:10,740 --> 00:08:17,580
command-line right<font color="#E5E5E5"> so before</font><font color="#CCCCCC"> I do that</font>

157
00:08:14,669 --> 00:08:21,620
let me<font color="#E5E5E5"> jump back</font><font color="#CCCCCC"> to</font><font color="#E5E5E5"> the code and</font><font color="#CCCCCC"> show</font>

158
00:08:17,580 --> 00:08:24,210
you my user database<font color="#E5E5E5"> we have</font><font color="#CCCCCC"> two</font><font color="#E5E5E5"> users</font>

159
00:08:21,620 --> 00:08:27,000
<font color="#CCCCCC">copernicus who is a regular user and</font>

160
00:08:24,210 --> 00:08:30,840
<font color="#CCCCCC">galileo who is administrator</font><font color="#E5E5E5"> so</font><font color="#CCCCCC"> to</font>

161
00:08:27,000 --> 00:08:32,520
<font color="#E5E5E5">astronomers</font><font color="#CCCCCC"> we also have a</font><font color="#E5E5E5"> couple of</font>

162
00:08:30,840 --> 00:08:35,218
classes<font color="#E5E5E5"> to serialize and deserialize</font>

163
00:08:32,520 --> 00:08:36,838
<font color="#E5E5E5">pretty much the same stuff</font><font color="#CCCCCC"> that we saw</font>

164
00:08:35,219 --> 00:08:41,000
before except this time we deal<font color="#CCCCCC"> with</font>

165
00:08:36,839 --> 00:08:44,000
base64 data and not just<font color="#E5E5E5"> binary stuff</font>

166
00:08:41,000 --> 00:08:44,000
<font color="#E5E5E5">okay</font>

167
00:08:45,230 --> 00:08:55,130
so<font color="#CCCCCC"> I'm opt</font><font color="#E5E5E5"> indicating as Copernicus</font>

168
00:08:47,900 --> 00:08:57,079
first his password is Poland and<font color="#E5E5E5"> I</font>

169
00:08:55,130 --> 00:09:01,189
<font color="#E5E5E5">authenticate successfully and got this</font>

170
00:08:57,080 --> 00:09:03,290
session cookie now my browser on<font color="#CCCCCC"> the</font>

171
00:09:01,190 --> 00:09:05,530
next HTTP request is<font color="#E5E5E5"> going to submit the</font>

172
00:09:03,290 --> 00:09:10,490
session cookie to the web<font color="#E5E5E5"> application</font>

173
00:09:05,530 --> 00:09:14,930
and and try to do something<font color="#E5E5E5"> so let's try</font>

174
00:09:10,490 --> 00:09:16,700
and see how how it works<font color="#CCCCCC"> I submitted my</font>

175
00:09:14,930 --> 00:09:19,310
session cookie to the session manager

176
00:09:16,700 --> 00:09:22,490
and it<font color="#CCCCCC"> welcomed me welcoming me back as</font>

177
00:09:19,310 --> 00:09:25,250
the Pernik is great<font color="#E5E5E5"> so let's do the same</font>

178
00:09:22,490 --> 00:09:29,180
<font color="#CCCCCC">thing for our administrative</font>

179
00:09:25,250 --> 00:09:32,450
<font color="#CCCCCC">Administrative administrative user his</font>

180
00:09:29,180 --> 00:09:37,430
password is<font color="#E5E5E5"> Italy here's my session</font>

181
00:09:32,450 --> 00:09:43,310
cookie<font color="#E5E5E5"> I'm gonna copy it again and give</font>

182
00:09:37,430 --> 00:09:45,439
it<font color="#CCCCCC"> back</font><font color="#E5E5E5"> to the application</font><font color="#CCCCCC"> you welcome</font>

183
00:09:43,310 --> 00:09:48,079
me as Galileo<font color="#E5E5E5"> and told me</font><font color="#CCCCCC"> that I'm</font>

184
00:09:45,440 --> 00:09:48,770
administrator<font color="#CCCCCC"> makes sense</font><font color="#E5E5E5"> right</font><font color="#CCCCCC"> pretty</font>

185
00:09:48,080 --> 00:09:53,950
<font color="#CCCCCC">straightforward</font>

186
00:09:48,770 --> 00:09:56,810
now let me let<font color="#CCCCCC"> us take a closer look at</font>

187
00:09:53,950 --> 00:10:01,120
Copernicus cookie who is who is non

188
00:09:56,810 --> 00:10:06,560
admin<font color="#E5E5E5"> and see what we can do to fix that</font>

189
00:10:01,120 --> 00:10:12,800
I'm<font color="#E5E5E5"> gonna print this cookie and I'm</font>

190
00:10:06,560 --> 00:10:18,290
going<font color="#CCCCCC"> to base 64 decoded</font><font color="#E5E5E5"> and write it</font><font color="#CCCCCC"> to</font>

191
00:10:12,800 --> 00:10:23,780
a file called<font color="#CCCCCC"> cookie dot s er okay now</font>

192
00:10:18,290 --> 00:10:29,300
we have this file on<font color="#CCCCCC"> the disk</font><font color="#E5E5E5"> and I'm</font>

193
00:10:23,780 --> 00:10:33,709
running<font color="#E5E5E5"> a hex editor and this is similar</font>

194
00:10:29,300 --> 00:10:37,849
<font color="#E5E5E5">to what we saw</font><font color="#CCCCCC"> before right and if I</font>

195
00:10:33,710 --> 00:10:40,580
analyze it a little<font color="#E5E5E5"> bit I I can find</font>

196
00:10:37,850 --> 00:10:43,400
this the string which which reads

197
00:10:40,580 --> 00:10:45,800
regular so I'm just<font color="#E5E5E5"> gonna go</font><font color="#CCCCCC"> ahead and</font>

198
00:10:43,400 --> 00:10:48,170
replace it with<font color="#CCCCCC"> Administrator</font><font color="#E5E5E5"> and see</font>

199
00:10:45,800 --> 00:10:50,780
what happens<font color="#CCCCCC"> so I'm gonna start typing</font>

200
00:10:48,170 --> 00:10:53,329
add mayonnaise<font color="#CCCCCC"> and I ran out of room</font>

201
00:10:50,780 --> 00:10:57,880
<font color="#CCCCCC">here because</font><font color="#E5E5E5"> administrator is obviously</font>

202
00:10:53,330 --> 00:10:57,880
longer<font color="#E5E5E5"> so I need to go to insert mode</font>

203
00:10:58,939 --> 00:11:04,860
and since this is a<font color="#E5E5E5"> longer string I also</font>

204
00:11:02,160 --> 00:11:08,910
need<font color="#E5E5E5"> to fix this bite here which in</font>

205
00:11:04,860 --> 00:11:10,800
which which is basically the length of

206
00:11:08,910 --> 00:11:29,459
the string<font color="#E5E5E5"> so I'm gonna change it to</font>

207
00:11:10,800 --> 00:11:32,279
<font color="#CCCCCC">zero D save it close it and what I'm</font>

208
00:11:29,459 --> 00:11:37,290
gonna do now<font color="#E5E5E5"> is I have</font><font color="#CCCCCC"> my new cookie in</font>

209
00:11:32,279 --> 00:11:39,839
this file<font color="#CCCCCC"> so I'm going</font><font color="#E5E5E5"> to base64-encoded</font>

210
00:11:37,290 --> 00:11:44,430
<font color="#CCCCCC">I need to use this parameter so it</font>

211
00:11:39,839 --> 00:11:48,209
doesn't break<font color="#CCCCCC"> the string and I'm gonna</font>

212
00:11:44,430 --> 00:11:50,069
feed it to my session manager so now it

213
00:11:48,209 --> 00:11:51,209
welcome me<font color="#CCCCCC"> back as Copernicus but this</font>

214
00:11:50,069 --> 00:11:56,128
time it told me<font color="#CCCCCC"> that I'm an</font>

215
00:11:51,209 --> 00:11:59,670
administrator<font color="#E5E5E5"> right so I was</font><font color="#CCCCCC"> able to</font>

216
00:11:56,129 --> 00:12:02,759
<font color="#E5E5E5">modify that serialized data and replace</font>

217
00:11:59,670 --> 00:12:07,920
a very critical thing with my own<font color="#E5E5E5"> stuff</font>

218
00:12:02,759 --> 00:12:11,220
and the<font color="#E5E5E5"> reason I was able to do it was</font>

219
00:12:07,920 --> 00:12:13,589
<font color="#E5E5E5">because</font><font color="#CCCCCC"> the</font><font color="#E5E5E5"> session manager does not</font>

220
00:12:11,220 --> 00:12:17,040
check<font color="#E5E5E5"> the integrity of that of this</font>

221
00:12:13,589 --> 00:12:21,540
cookie<font color="#CCCCCC"> it just accepts it as its true</font>

222
00:12:17,040 --> 00:12:24,360
and<font color="#CCCCCC"> inter interprets it and just</font><font color="#E5E5E5"> just</font>

223
00:12:21,540 --> 00:12:28,230
uses<font color="#CCCCCC"> it and makes</font><font color="#E5E5E5"> decision based on it</font>

224
00:12:24,360 --> 00:12:31,559
<font color="#E5E5E5">so if my session manager was using a</font>

225
00:12:28,230 --> 00:12:33,809
<font color="#E5E5E5">private key to sign this message and and</font>

226
00:12:31,559 --> 00:12:37,639
check it<font color="#E5E5E5"> when it receives the cookie</font>

227
00:12:33,809 --> 00:12:37,639
<font color="#E5E5E5">this would this could not be possible</font>

228
00:12:37,879 --> 00:12:48,019
<font color="#E5E5E5">okay so far so</font><font color="#CCCCCC"> good</font>

229
00:12:44,129 --> 00:12:50,639
and<font color="#CCCCCC"> we</font><font color="#E5E5E5"> moving into our third exercise</font>

230
00:12:48,019 --> 00:12:54,300
this<font color="#E5E5E5"> time</font><font color="#CCCCCC"> we're going to</font><font color="#E5E5E5"> use serialized</font>

231
00:12:50,639 --> 00:12:56,490
object and upload it<font color="#CCCCCC"> to our application</font>

232
00:12:54,300 --> 00:12:58,790
and<font color="#E5E5E5"> it should accept it and do something</font>

233
00:12:56,490 --> 00:12:58,790
<font color="#CCCCCC">with it</font>

234
00:13:08,329 --> 00:13:14,269
we have our planet object the same<font color="#E5E5E5"> one</font>

235
00:13:10,399 --> 00:13:18,139
that we<font color="#CCCCCC"> saw in lab number one and we</font>

236
00:13:14,269 --> 00:13:21,170
have a plot manager and this this<font color="#E5E5E5"> is</font><font color="#CCCCCC"> a</font>

237
00:13:18,139 --> 00:13:24,499
<font color="#E5E5E5">simple program it just parses the</font>

238
00:13:21,170 --> 00:13:28,399
standard<font color="#CCCCCC"> input and it's looking</font><font color="#E5E5E5"> for this</font>

239
00:13:24,499 --> 00:13:31,100
<font color="#E5E5E5">little string our</font><font color="#CCCCCC"> zero a</font><font color="#E5E5E5"> B which as we</font>

240
00:13:28,399 --> 00:13:34,399
know now is a signature for serialized

241
00:13:31,100 --> 00:13:35,989
<font color="#E5E5E5">Java data and as soon</font><font color="#CCCCCC"> as it sees</font>

242
00:13:34,399 --> 00:13:40,189
<font color="#E5E5E5">something like this</font><font color="#CCCCCC"> it's gonna call</font>

243
00:13:35,989 --> 00:13:43,970
method called process upload and this

244
00:13:40,189 --> 00:13:47,509
method basically dis<font color="#E5E5E5"> realizes that stuff</font>

245
00:13:43,970 --> 00:13:49,160
<font color="#E5E5E5">and creates planet object out</font><font color="#CCCCCC"> of it and</font>

246
00:13:47,509 --> 00:13:50,689
then we need to<font color="#CCCCCC"> do</font><font color="#E5E5E5"> something with this</font>

247
00:13:49,160 --> 00:13:52,459
planet we<font color="#CCCCCC"> have not implemented that</font><font color="#E5E5E5"> he</font>

248
00:13:50,689 --> 00:13:55,219
<font color="#E5E5E5">have like for</font><font color="#CCCCCC"> example we want to</font><font color="#E5E5E5"> store</font>

249
00:13:52,459 --> 00:13:58,488
it in<font color="#E5E5E5"> our solar system database so we</font>

250
00:13:55,220 --> 00:14:02,660
let astronomers<font color="#E5E5E5"> upload new planets to</font>

251
00:13:58,489 --> 00:14:05,689
our wonderful<font color="#E5E5E5"> web application and in</font>

252
00:14:02,660 --> 00:14:08,929
order to<font color="#E5E5E5"> get some</font><font color="#CCCCCC"> simple data</font><font color="#E5E5E5"> I I wrote</font>

253
00:14:05,689 --> 00:14:10,639
<font color="#CCCCCC">a little program</font><font color="#E5E5E5"> that generates a few</font>

254
00:14:08,929 --> 00:14:14,660
planets<font color="#E5E5E5"> several planets Mercury Venus</font>

255
00:14:10,639 --> 00:14:17,809
and<font color="#E5E5E5"> Earth it's he realizes them and</font><font color="#CCCCCC"> I</font>

256
00:14:14,660 --> 00:14:19,850
also serialize a string<font color="#E5E5E5"> so this is just</font>

257
00:14:17,809 --> 00:14:21,889
a simple<font color="#CCCCCC"> string object and the reason I</font>

258
00:14:19,850 --> 00:14:27,139
I do it is I just<font color="#E5E5E5"> want to see what</font>

259
00:14:21,889 --> 00:14:30,529
what's happening<font color="#CCCCCC"> when my</font><font color="#E5E5E5"> back and code</font>

260
00:14:27,139 --> 00:14:32,769
is seeing<font color="#E5E5E5"> a string which should not be</font>

261
00:14:30,529 --> 00:14:32,769
<font color="#E5E5E5">there</font>

262
00:14:35,550 --> 00:14:43,510
so I compiled my this simple object

263
00:14:41,500 --> 00:14:45,639
generator and I here<font color="#E5E5E5"> are the three</font>

264
00:14:43,510 --> 00:14:48,209
planets and<font color="#CCCCCC"> Enda stringing a little</font>

265
00:14:45,639 --> 00:14:55,899
string here now I need<font color="#E5E5E5"> to compile my</font>

266
00:14:48,209 --> 00:15:00,069
upload manager and now what I'm gonna do

267
00:14:55,899 --> 00:15:01,930
is I'm just gonna pipe output<font color="#E5E5E5"> of my</font>

268
00:15:00,070 --> 00:15:04,180
serial generator with<font color="#CCCCCC"> HP which is</font>

269
00:15:01,930 --> 00:15:06,638
<font color="#E5E5E5">basically this whole stuff right here to</font>

270
00:15:04,180 --> 00:15:10,300
my<font color="#CCCCCC"> applaud manager and it should process</font>

271
00:15:06,639 --> 00:15:14,350
<font color="#E5E5E5">all these things one</font><font color="#CCCCCC"> by one and it did</font>

272
00:15:10,300 --> 00:15:16,599
<font color="#E5E5E5">it told</font><font color="#CCCCCC"> me</font><font color="#E5E5E5"> that Mercury Venus and Earth</font>

273
00:15:14,350 --> 00:15:21,000
were<font color="#E5E5E5"> successfully uploaded and then it</font>

274
00:15:16,600 --> 00:15:23,560
got an exception because<font color="#CCCCCC"> it saw a string</font>

275
00:15:21,000 --> 00:15:25,720
which which<font color="#E5E5E5"> is nice right</font>

276
00:15:23,560 --> 00:15:28,089
and as long<font color="#CCCCCC"> as we handle this</font><font color="#E5E5E5"> accept</font>

277
00:15:25,720 --> 00:15:30,370
exception correctly<font color="#E5E5E5"> we should</font><font color="#CCCCCC"> be okay we</font>

278
00:15:28,089 --> 00:15:32,230
will not<font color="#E5E5E5"> process the string and we not</font>

279
00:15:30,370 --> 00:15:35,290
<font color="#CCCCCC">fail completely but I want you to</font><font color="#E5E5E5"> pay</font>

280
00:15:32,230 --> 00:15:39,699
attention<font color="#CCCCCC"> to the exact error message</font>

281
00:15:35,290 --> 00:15:47,500
here which says string cannot be cast<font color="#CCCCCC"> to</font>

282
00:15:39,699 --> 00:15:50,800
planet which suggests that this method

283
00:15:47,500 --> 00:15:52,779
<font color="#E5E5E5">read object did actually return so the</font>

284
00:15:50,800 --> 00:15:57,189
object was disser lized that string was

285
00:15:52,779 --> 00:15:59,980
<font color="#CCCCCC">DC realized the the error</font><font color="#E5E5E5"> the exception</font>

286
00:15:57,190 --> 00:16:01,959
was<font color="#CCCCCC"> thrown here when we try to cast it</font>

287
00:15:59,980 --> 00:16:03,160
<font color="#CCCCCC">to planet because</font><font color="#E5E5E5"> three and and planets</font>

288
00:16:01,959 --> 00:16:07,359
are not<font color="#CCCCCC"> compatible</font>

289
00:16:03,160 --> 00:16:08,980
<font color="#E5E5E5">we cannot cast one to another okay</font><font color="#CCCCCC"> in</font>

290
00:16:07,360 --> 00:16:11,170
<font color="#E5E5E5">order to prove my point</font><font color="#CCCCCC"> that</font>

291
00:16:08,980 --> 00:16:18,300
serialization have<font color="#E5E5E5"> distillation happens</font>

292
00:16:11,170 --> 00:16:23,620
no matter<font color="#CCCCCC"> what</font><font color="#E5E5E5"> I have more stuff in my</font>

293
00:16:18,300 --> 00:16:26,469
sample object<font color="#E5E5E5"> generator some bad stuff</font>

294
00:16:23,620 --> 00:16:29,019
here some some kind<font color="#E5E5E5"> of bad</font><font color="#CCCCCC"> object</font><font color="#E5E5E5"> so I</font>

295
00:16:26,470 --> 00:16:32,560
am coming<font color="#E5E5E5"> to this and I need to</font>

296
00:16:29,019 --> 00:16:37,110
<font color="#E5E5E5">recompile my serial generator</font>

297
00:16:32,560 --> 00:16:42,060
and I'm gonna<font color="#E5E5E5"> run the code again</font><font color="#CCCCCC"> okay</font>

298
00:16:37,110 --> 00:16:44,640
<font color="#E5E5E5">and again it processed</font><font color="#CCCCCC"> the three planets</font>

299
00:16:42,060 --> 00:16:47,589
it got an<font color="#CCCCCC"> exceptional on the string</font>

300
00:16:44,640 --> 00:16:51,280
right this is part<font color="#CCCCCC"> of it</font>

301
00:16:47,590 --> 00:16:54,630
<font color="#E5E5E5">and then it did not return and it sits</font>

302
00:16:51,280 --> 00:17:03,550
<font color="#CCCCCC">here</font><font color="#E5E5E5"> not giving me back my command line</font>

303
00:16:54,630 --> 00:17:05,740
<font color="#E5E5E5">and if I look at my task manager it</font>

304
00:17:03,550 --> 00:17:08,470
tells me that<font color="#E5E5E5"> this process the</font><font color="#CCCCCC"> applaud</font>

305
00:17:05,740 --> 00:17:10,359
manager consumes<font color="#E5E5E5"> a hundred</font><font color="#CCCCCC"> percent of my</font>

306
00:17:08,470 --> 00:17:15,579
<font color="#E5E5E5">CPU should</font><font color="#CCCCCC"> be over a hundred I don't</font>

307
00:17:10,359 --> 00:17:19,060
know how it's<font color="#E5E5E5"> possible but must be some</font>

308
00:17:15,579 --> 00:17:20,889
<font color="#E5E5E5">really bad stuff</font><font color="#CCCCCC"> and trust me</font><font color="#E5E5E5"> is gonna</font>

309
00:17:19,060 --> 00:17:24,730
sit here<font color="#CCCCCC"> forever it's never going to</font>

310
00:17:20,890 --> 00:17:28,330
return so I'm just gonna kill it so I

311
00:17:24,730 --> 00:17:29,440
<font color="#E5E5E5">killed it I got back</font><font color="#CCCCCC"> my command line</font><font color="#E5E5E5"> now</font>

312
00:17:28,329 --> 00:17:36,159
let's take a look<font color="#CCCCCC"> at that</font>

313
00:17:29,440 --> 00:17:38,830
<font color="#CCCCCC">object and here it</font><font color="#E5E5E5"> is I didn't write it</font>

314
00:17:36,160 --> 00:17:41,770
full<font color="#CCCCCC"> disclosure</font><font color="#E5E5E5"> I just got it off our</font>

315
00:17:38,830 --> 00:17:47,199
West<font color="#CCCCCC"> website and this object</font><font color="#E5E5E5"> is</font>

316
00:17:41,770 --> 00:17:49,330
basically a hash set<font color="#E5E5E5"> which has more more</font>

317
00:17:47,200 --> 00:17:51,340
hash so it's kind it's<font color="#E5E5E5"> a kind of kind</font><font color="#CCCCCC"> of</font>

318
00:17:49,330 --> 00:17:54,189
<font color="#E5E5E5">a structure maybe a tree so we iterate</font>

319
00:17:51,340 --> 00:17:57,189
<font color="#E5E5E5">100 times and we create new hash set and</font>

320
00:17:54,190 --> 00:18:01,180
<font color="#E5E5E5">assign some add some data to it to them</font>

321
00:17:57,190 --> 00:18:04,780
and and then set the those links<font color="#E5E5E5"> you</font>

322
00:18:01,180 --> 00:18:08,620
<font color="#CCCCCC">know</font><font color="#E5E5E5"> and this is not a huge object</font><font color="#CCCCCC"> right</font>

323
00:18:04,780 --> 00:18:10,780
we iterate<font color="#E5E5E5"> only 100 times but JVM has a</font>

324
00:18:08,620 --> 00:18:13,419
big issue with it it does<font color="#CCCCCC"> not like it</font>

325
00:18:10,780 --> 00:18:15,520
<font color="#E5E5E5">when</font><font color="#CCCCCC"> it tries to digitalize it</font><font color="#E5E5E5"> and build</font>

326
00:18:13,420 --> 00:18:18,760
that graph it<font color="#CCCCCC"> just it just never</font>

327
00:18:15,520 --> 00:18:24,040
finishes<font color="#E5E5E5"> so this is a great way</font><font color="#CCCCCC"> to kill</font>

328
00:18:18,760 --> 00:18:28,470
your application to<font color="#E5E5E5"> make it use CPU</font>

329
00:18:24,040 --> 00:18:31,629
cycles<font color="#E5E5E5"> and the more we submit the more</font>

330
00:18:28,470 --> 00:18:35,310
we submit stuff like that<font color="#E5E5E5"> we can just</font>

331
00:18:31,630 --> 00:18:35,310
disable<font color="#E5E5E5"> the application</font>

332
00:18:38,890 --> 00:18:42,460
yeah so this code consumes<font color="#E5E5E5"> CPU</font>

333
00:18:41,830 --> 00:18:44,919
indefinitely

334
00:18:42,460 --> 00:18:47,559
when<font color="#CCCCCC"> this</font><font color="#E5E5E5"> realizing when this realized</font>

335
00:18:44,920 --> 00:18:51,880
<font color="#E5E5E5">what about this this is a very small</font>

336
00:18:47,559 --> 00:18:56,559
object<font color="#E5E5E5"> so this one would</font><font color="#CCCCCC"> actually try to</font>

337
00:18:51,880 --> 00:18:59,380
allocate<font color="#CCCCCC"> eight gigabytes of hit</font><font color="#E5E5E5"> sweet</font>

338
00:18:56,559 --> 00:19:03,250
<font color="#E5E5E5">what</font><font color="#CCCCCC"> about this one</font><font color="#E5E5E5"> it's a it's it's</font>

339
00:18:59,380 --> 00:19:06,480
<font color="#E5E5E5">still a pretty small object so this one</font>

340
00:19:03,250 --> 00:19:08,470
will try<font color="#E5E5E5"> to allocate 64 gigabytes</font>

341
00:19:06,480 --> 00:19:11,620
<font color="#CCCCCC">there's</font><font color="#E5E5E5"> just two different methods to</font>

342
00:19:08,470 --> 00:19:13,900
did so and you can imagine that<font color="#E5E5E5"> stuff</font>

343
00:19:11,620 --> 00:19:21,760
like that can kill your application<font color="#E5E5E5"> it</font>

344
00:19:13,900 --> 00:19:25,929
will just say I'm done<font color="#CCCCCC"> I have a few</font>

345
00:19:21,760 --> 00:19:28,210
<font color="#CCCCCC">examples</font><font color="#E5E5E5"> of that if you look up this</font>

346
00:19:25,929 --> 00:19:31,929
name<font color="#E5E5E5"> online and I have some links</font><font color="#CCCCCC"> at the</font>

347
00:19:28,210 --> 00:19:35,650
<font color="#E5E5E5">end you'll see more</font><font color="#CCCCCC"> examples so this guy</font>

348
00:19:31,929 --> 00:19:38,020
just<font color="#CCCCCC"> writes</font><font color="#E5E5E5"> this for fun so yeah this</font><font color="#CCCCCC"> is</font>

349
00:19:35,650 --> 00:19:44,380
the the serialized<font color="#E5E5E5"> object that will</font>

350
00:19:38,020 --> 00:19:46,330
cause my program<font color="#E5E5E5"> to allocate 64 gig if I</font>

351
00:19:44,380 --> 00:19:48,820
give<font color="#E5E5E5"> it to my</font><font color="#CCCCCC"> applaud manager I don't</font>

352
00:19:46,330 --> 00:19:52,510
have 64 gig on this little<font color="#E5E5E5"> VM it</font>

353
00:19:48,820 --> 00:19:54,760
instantly ran out of space<font color="#E5E5E5"> and it didn't</font>

354
00:19:52,510 --> 00:19:57,429
fail gracefully<font color="#CCCCCC"> it just it just finished</font>

355
00:19:54,760 --> 00:20:04,900
so I killed it

356
00:19:57,429 --> 00:20:07,090
awesome<font color="#CCCCCC"> ok do you know a</font><font color="#E5E5E5"> service so how</font>

357
00:20:04,900 --> 00:20:10,330
can we<font color="#CCCCCC"> protect from this kind</font><font color="#E5E5E5"> of stuff</font>

358
00:20:07,090 --> 00:20:16,809
<font color="#E5E5E5">how can</font><font color="#CCCCCC"> we prevent this unsafe</font>

359
00:20:10,330 --> 00:20:23,790
deserialization and one way<font color="#CCCCCC"> to do it</font><font color="#E5E5E5"> in</font>

360
00:20:16,809 --> 00:20:23,790
<font color="#E5E5E5">Java there with me for a moment</font>

361
00:20:27,379 --> 00:20:34,029
I should<font color="#E5E5E5"> have should have not closed</font>

362
00:20:30,470 --> 00:20:34,029
this but<font color="#E5E5E5"> okay</font>

363
00:20:34,389 --> 00:20:40,039
remember this object<font color="#E5E5E5"> input stream this</font>

364
00:20:37,429 --> 00:20:42,619
<font color="#E5E5E5">is the standard class that is used for</font>

365
00:20:40,039 --> 00:20:44,389
digitalization we can extend it and

366
00:20:42,619 --> 00:20:46,070
we're going to<font color="#E5E5E5"> call it safe object input</font>

367
00:20:44,389 --> 00:20:50,479
stream<font color="#E5E5E5"> and the only thing that you're</font>

368
00:20:46,070 --> 00:20:52,369
<font color="#E5E5E5">gonna do this time is to override</font><font color="#CCCCCC"> one of</font>

369
00:20:50,480 --> 00:20:58,039
the classes<font color="#CCCCCC"> this class is called</font><font color="#E5E5E5"> resolve</font>

370
00:20:52,369 --> 00:21:00,230
class<font color="#CCCCCC"> this sorry</font><font color="#E5E5E5"> one of the methods this</font>

371
00:20:58,039 --> 00:21:02,389
method is<font color="#E5E5E5"> called resolve class this</font>

372
00:21:00,230 --> 00:21:06,440
method is called during<font color="#E5E5E5"> the</font>

373
00:21:02,389 --> 00:21:09,229
serialization<font color="#E5E5E5"> automatically and what</font>

374
00:21:06,440 --> 00:21:11,600
you're<font color="#E5E5E5"> going to do here is we get the</font>

375
00:21:09,230 --> 00:21:13,759
the<font color="#CCCCCC"> class name from the input that</font><font color="#E5E5E5"> we</font>

376
00:21:11,600 --> 00:21:17,209
<font color="#CCCCCC">are deserializing and we're going</font><font color="#E5E5E5"> to</font>

377
00:21:13,759 --> 00:21:20,690
compare<font color="#CCCCCC"> it to the class name of</font><font color="#E5E5E5"> the</font>

378
00:21:17,210 --> 00:21:23,629
<font color="#CCCCCC">class that we expect to see which is</font><font color="#E5E5E5"> the</font>

379
00:21:20,690 --> 00:21:26,269
planet and if if one does not<font color="#CCCCCC"> equal to</font>

380
00:21:23,629 --> 00:21:29,830
the other<font color="#E5E5E5"> reach is gonna throw</font><font color="#CCCCCC"> a custom</font>

381
00:21:26,269 --> 00:21:33,169
exception and we should fail gracefully

382
00:21:29,830 --> 00:21:34,820
<font color="#E5E5E5">makes sense right you know if this is</font>

383
00:21:33,169 --> 00:21:41,320
<font color="#E5E5E5">something that</font><font color="#CCCCCC"> we</font><font color="#E5E5E5"> don't</font><font color="#CCCCCC"> expect</font><font color="#E5E5E5"> we should</font>

384
00:21:34,820 --> 00:21:44,509
just not do it so I'm gonna uncomment

385
00:21:41,320 --> 00:21:51,619
basically replace the standard string

386
00:21:44,509 --> 00:21:55,279
with<font color="#CCCCCC"> my own</font><font color="#E5E5E5"> save I need to recompile my</font>

387
00:21:51,619 --> 00:21:58,220
<font color="#CCCCCC">applaud</font><font color="#E5E5E5"> manager and I'm gonna run</font><font color="#CCCCCC"> it</font>

388
00:21:55,279 --> 00:22:01,480
<font color="#CCCCCC">again with that bad object that's gonna</font>

389
00:21:58,220 --> 00:22:05,119
allocate<font color="#E5E5E5"> that's gonna consume my CPU and</font>

390
00:22:01,480 --> 00:22:09,799
this time it did<font color="#CCCCCC"> not hang and it failed</font>

391
00:22:05,119 --> 00:22:14,988
with my exception and it told me<font color="#CCCCCC"> that</font>

392
00:22:09,799 --> 00:22:18,499
it's on unsupported class which is Java

393
00:22:14,989 --> 00:22:22,299
data<font color="#E5E5E5"> tool that hash set excellent</font><font color="#CCCCCC"> so</font>

394
00:22:18,499 --> 00:22:25,220
this will pretty much prevent you from

395
00:22:22,299 --> 00:22:28,059
<font color="#CCCCCC">deserializing any anything</font><font color="#E5E5E5"> other than</font>

396
00:22:25,220 --> 00:22:28,059
what<font color="#CCCCCC"> you expect</font>

397
00:22:30,960 --> 00:22:40,480
<font color="#CCCCCC">all right</font><font color="#E5E5E5"> okay</font><font color="#CCCCCC"> denial-of-service is a is</font>

398
00:22:38,230 --> 00:22:43,720
a pretty cool thing<font color="#CCCCCC"> and sometimes</font>

399
00:22:40,480 --> 00:22:45,610
<font color="#E5E5E5">attackers goal is to cause just</font><font color="#CCCCCC"> denial</font>

400
00:22:43,720 --> 00:22:48,190
<font color="#E5E5E5">of service but a lot of times they also</font>

401
00:22:45,610 --> 00:22:50,320
want to do something else<font color="#CCCCCC"> like I think</font>

402
00:22:48,190 --> 00:22:52,600
<font color="#CCCCCC">the ultimate goal pretty much every time</font>

403
00:22:50,320 --> 00:22:56,290
is<font color="#CCCCCC"> to only a server</font><font color="#E5E5E5"> and one of the way</font>

404
00:22:52,600 --> 00:22:58,449
<font color="#E5E5E5">the only server is</font><font color="#CCCCCC"> to run commands in it</font>

405
00:22:56,290 --> 00:23:00,610
so basically remote command execution

406
00:22:58,450 --> 00:23:04,350
<font color="#E5E5E5">and let's see</font><font color="#CCCCCC"> if we can hide some</font>

407
00:23:00,610 --> 00:23:04,350
<font color="#E5E5E5">commands in a serialized object</font>

408
00:23:12,890 --> 00:23:18,230
and we have our<font color="#CCCCCC"> applaud manager again</font>

409
00:23:16,490 --> 00:23:23,270
the astronomers are going to upload the

410
00:23:18,230 --> 00:23:26,780
planets<font color="#E5E5E5"> this time though we customized</font>

411
00:23:23,270 --> 00:23:31,309
<font color="#E5E5E5">our planet class it's not that simple</font>

412
00:23:26,780 --> 00:23:34,370
anymore<font color="#CCCCCC"> we we have our</font><font color="#E5E5E5"> own right object</font>

413
00:23:31,309 --> 00:23:37,549
and read object methods that serialize

414
00:23:34,370 --> 00:23:40,040
and deserialize<font color="#CCCCCC"> and in the read object</font>

415
00:23:37,549 --> 00:23:42,410
the thing<font color="#E5E5E5"> that we want to do is every</font>

416
00:23:40,040 --> 00:23:44,270
<font color="#CCCCCC">time we see a</font><font color="#E5E5E5"> planet and</font><font color="#CCCCCC"> we sterilize</font><font color="#E5E5E5"> it</font>

417
00:23:42,410 --> 00:23:47,270
we want to write a message<font color="#CCCCCC"> in our</font>

418
00:23:44,270 --> 00:23:49,639
application log and we<font color="#E5E5E5"> do a very very</font>

419
00:23:47,270 --> 00:23:54,260
silly<font color="#CCCCCC"> thing</font><font color="#E5E5E5"> don't</font><font color="#CCCCCC"> try it at home</font><font color="#E5E5E5"> we</font>

420
00:23:49,640 --> 00:23:58,340
create we build a command which is echo

421
00:23:54,260 --> 00:24:02,120
command<font color="#E5E5E5"> and we we basically run it</font>

422
00:23:58,340 --> 00:24:09,020
externally<font color="#CCCCCC"> in a shell what can go wrong</font>

423
00:24:02,120 --> 00:24:11,899
<font color="#CCCCCC">right so this name</font><font color="#E5E5E5"> right</font><font color="#CCCCCC"> here</font><font color="#E5E5E5"> that we</font>

424
00:24:09,020 --> 00:24:15,440
include as<font color="#CCCCCC"> part of</font><font color="#E5E5E5"> this command is</font>

425
00:24:11,900 --> 00:24:18,950
controlled by whoever submits the planet

426
00:24:15,440 --> 00:24:22,250
data to us right<font color="#E5E5E5"> because we get it</font>

427
00:24:18,950 --> 00:24:25,370
straight out of<font color="#E5E5E5"> the object</font><font color="#CCCCCC"> of serialized</font>

428
00:24:22,250 --> 00:24:28,730
object and we insert it<font color="#CCCCCC"> here</font><font color="#E5E5E5"> so if an</font>

429
00:24:25,370 --> 00:24:32,149
attacker controls<font color="#E5E5E5"> it can they build it</font>

430
00:24:28,730 --> 00:24:36,580
in a way<font color="#CCCCCC"> that will let them execute</font>

431
00:24:32,150 --> 00:24:43,929
arbitrary code on our server<font color="#CCCCCC"> machine and</font>

432
00:24:36,580 --> 00:24:47,360
the answer is yes of course so I have my

433
00:24:43,929 --> 00:24:50,210
serial generator and I have three good

434
00:24:47,360 --> 00:24:54,010
planets and one rogue planet here and

435
00:24:50,210 --> 00:24:54,010
I'm<font color="#E5E5E5"> just gonna uncomment this right away</font>

436
00:24:54,250 --> 00:25:04,190
<font color="#E5E5E5">and Pluto what it does instead of</font><font color="#CCCCCC"> let me</font>

437
00:25:01,669 --> 00:25:07,429
make it<font color="#E5E5E5"> a little let me move the window</font>

438
00:25:04,190 --> 00:25:10,510
so everything fits<font color="#CCCCCC"> I don't know if I can</font>

439
00:25:07,429 --> 00:25:10,510
do<font color="#CCCCCC"> it hold on a second</font>

440
00:25:24,730 --> 00:25:30,150
<font color="#E5E5E5">okay so instead of the instead of the</font>

441
00:25:27,430 --> 00:25:32,650
name here so this is the<font color="#E5E5E5"> planet name and</font>

442
00:25:30,150 --> 00:25:35,980
it's some kind<font color="#CCCCCC"> of a string with</font>

443
00:25:32,650 --> 00:25:38,440
<font color="#CCCCCC">semicolons</font><font color="#E5E5E5"> and as we know semicolons in</font>

444
00:25:35,980 --> 00:25:40,270
a shell mean<font color="#CCCCCC"> separate one comment from</font>

445
00:25:38,440 --> 00:25:42,250
another so one get one command<font color="#E5E5E5"> gets</font>

446
00:25:40,270 --> 00:25:46,770
terminated<font color="#CCCCCC"> another command</font><font color="#E5E5E5"> gets run and</font>

447
00:25:42,250 --> 00:25:54,670
you can guess we get<font color="#E5E5E5"> called execution so</font>

448
00:25:46,770 --> 00:26:01,930
that's what's just<font color="#E5E5E5"> run it and see we can</font>

449
00:25:54,670 --> 00:26:08,860
pull my things and I guess I did not

450
00:26:01,930 --> 00:26:11,590
save the file<font color="#E5E5E5"> okay so this time</font><font color="#CCCCCC"> we just</font>

451
00:26:08,860 --> 00:26:16,030
processed<font color="#E5E5E5"> three planets so I need to</font>

452
00:26:11,590 --> 00:26:18,040
recompile<font color="#E5E5E5"> serial generator again okay</font>

453
00:26:16,030 --> 00:26:20,320
this time<font color="#E5E5E5"> it processed three planets and</font>

454
00:26:18,040 --> 00:26:24,090
it said it<font color="#E5E5E5"> processed this funny planet</font>

455
00:26:20,320 --> 00:26:26,439
as well with this funny name but<font color="#CCCCCC"> if you</font>

456
00:26:24,090 --> 00:26:28,179
<font color="#CCCCCC">Peyton's</font><font color="#E5E5E5"> okay I'm gonna run again if you</font>

457
00:26:26,440 --> 00:26:30,550
pay attention<font color="#E5E5E5"> in</font><font color="#CCCCCC"> the upper right corner</font>

458
00:26:28,180 --> 00:26:34,300
here<font color="#CCCCCC"> I have a little</font><font color="#E5E5E5"> pop-up that says</font>

459
00:26:30,550 --> 00:26:37,230
you've been owned<font color="#CCCCCC"> and that's basically</font>

460
00:26:34,300 --> 00:26:39,610
the result of this notify send command

461
00:26:37,230 --> 00:26:42,220
so this is<font color="#E5E5E5"> just a proof of concept</font><font color="#CCCCCC"> and</font>

462
00:26:39,610 --> 00:26:46,510
and this again<font color="#E5E5E5"> this is</font><font color="#CCCCCC"> a very very silly</font>

463
00:26:42,220 --> 00:26:52,170
<font color="#CCCCCC">thing to</font><font color="#E5E5E5"> do</font><font color="#CCCCCC"> but things like that like</font>

464
00:26:46,510 --> 00:26:54,520
this do happen<font color="#E5E5E5"> now let's</font><font color="#CCCCCC"> talk about more</font>

465
00:26:52,170 --> 00:26:58,830
sophisticated<font color="#E5E5E5"> stuff</font>

466
00:26:54,520 --> 00:27:02,320
who here attended the talk at<font color="#CCCCCC"> 11 at</font>

467
00:26:58,830 --> 00:27:06,610
10:15 I think on<font color="#CCCCCC"> distillation yeah</font><font color="#E5E5E5"> good</font>

468
00:27:02,320 --> 00:27:10,600
so the<font color="#CCCCCC"> Anna was talking about gadget</font>

469
00:27:06,610 --> 00:27:13,540
<font color="#E5E5E5">chains so the this listen right here</font>

470
00:27:10,600 --> 00:27:17,649
<font color="#CCCCCC">Apache Commons collections</font><font color="#E5E5E5"> issue that</font>

471
00:27:13,540 --> 00:27:21,399
was found in 2015<font color="#E5E5E5"> was using this gadget</font>

472
00:27:17,650 --> 00:27:25,890
chains in Apache Commons library to

473
00:27:21,400 --> 00:27:28,990
execute code now the problem was not in

474
00:27:25,890 --> 00:27:31,270
Apache Commons collections at all<font color="#CCCCCC"> I mean</font>

475
00:27:28,990 --> 00:27:33,010
they were<font color="#CCCCCC"> not</font><font color="#E5E5E5"> doing anything wrong the</font>

476
00:27:31,270 --> 00:27:36,060
problem<font color="#CCCCCC"> was</font><font color="#E5E5E5"> in all these web</font>

477
00:27:33,010 --> 00:27:38,110
<font color="#CCCCCC">applications</font><font color="#E5E5E5"> that did not check</font><font color="#CCCCCC"> the</font>

478
00:27:36,060 --> 00:27:41,740
serialized<font color="#E5E5E5"> input</font>

479
00:27:38,110 --> 00:27:44,500
and if you don't do it<font color="#E5E5E5"> and you have</font><font color="#CCCCCC"> a</font>

480
00:27:41,740 --> 00:27:48,280
library<font color="#E5E5E5"> on your class path and somebody</font>

481
00:27:44,500 --> 00:27:51,010
somebody submits an object with<font color="#CCCCCC"> a</font>

482
00:27:48,280 --> 00:27:53,290
<font color="#CCCCCC">sterilized object</font><font color="#E5E5E5"> with some</font><font color="#CCCCCC"> of these</font>

483
00:27:51,010 --> 00:27:56,320
gadgets<font color="#E5E5E5"> out of these Apache Commons</font>

484
00:27:53,290 --> 00:28:00,389
library<font color="#CCCCCC"> your web application is just</font>

485
00:27:56,320 --> 00:28:02,950
<font color="#CCCCCC">gonna</font><font color="#E5E5E5"> process it and I mean</font><font color="#CCCCCC"> this is a</font>

486
00:28:00,390 --> 00:28:04,690
<font color="#E5E5E5">subject</font><font color="#CCCCCC"> for</font><font color="#E5E5E5"> a whole separate talk and</font>

487
00:28:02,950 --> 00:28:07,559
there are there are<font color="#E5E5E5"> talks on on this</font>

488
00:28:04,690 --> 00:28:10,330
<font color="#CCCCCC">particular issue</font><font color="#E5E5E5"> but in a nutshell</font>

489
00:28:07,559 --> 00:28:12,850
<font color="#CCCCCC">several methods get called during the</font>

490
00:28:10,330 --> 00:28:17,220
<font color="#CCCCCC">serialization and ultimately we get</font><font color="#E5E5E5"> run</font>

491
00:28:12,850 --> 00:28:22,570
<font color="#E5E5E5">time and we execute</font><font color="#CCCCCC"> attackers supplied</font>

492
00:28:17,220 --> 00:28:25,929
<font color="#E5E5E5">command okay</font><font color="#CCCCCC"> the second</font><font color="#E5E5E5"> one</font><font color="#CCCCCC"> I want to</font>

493
00:28:22,570 --> 00:28:29,530
<font color="#E5E5E5">talk about is 2017 Apache struts rest</font>

494
00:28:25,929 --> 00:28:35,080
plug-in vulnerability so this one here

495
00:28:29,530 --> 00:28:38,530
<font color="#E5E5E5">is a screenshot of HTTP</font><font color="#CCCCCC"> request</font><font color="#E5E5E5"> with XML</font>

496
00:28:35,080 --> 00:28:43,889
payload and this XML has some<font color="#E5E5E5"> Java stuff</font>

497
00:28:38,530 --> 00:28:48,070
in it<font color="#CCCCCC"> and</font><font color="#E5E5E5"> here is the string right</font><font color="#CCCCCC"> here</font>

498
00:28:43,890 --> 00:28:52,270
that will<font color="#E5E5E5"> run on the server as a result</font>

499
00:28:48,070 --> 00:28:56,500
of this and this<font color="#CCCCCC"> will open a reverse</font>

500
00:28:52,270 --> 00:28:58,990
<font color="#CCCCCC">shell</font><font color="#E5E5E5"> I believe a more recent</font>

501
00:28:56,500 --> 00:29:00,610
vulnerability in cyber-ark<font color="#E5E5E5"> password</font>

502
00:28:58,990 --> 00:29:03,520
vault<font color="#CCCCCC"> if you don't know what cyber-ark</font>

503
00:29:00,610 --> 00:29:06,370
<font color="#E5E5E5">password is it basically</font><font color="#CCCCCC"> your</font><font color="#E5E5E5"> enterprise</font>

504
00:29:03,520 --> 00:29:09,250
<font color="#E5E5E5">level password manager for privileged</font>

505
00:29:06,370 --> 00:29:11,620
users pretty important stuff they have a

506
00:29:09,250 --> 00:29:15,429
REST API<font color="#E5E5E5"> that's using</font><font color="#CCCCCC"> an authentication</font>

507
00:29:11,620 --> 00:29:18,070
<font color="#E5E5E5">token</font><font color="#CCCCCC"> kind</font><font color="#E5E5E5"> of like that session token</font>

508
00:29:15,429 --> 00:29:22,710
<font color="#E5E5E5">more complex though and this token</font>

509
00:29:18,070 --> 00:29:25,840
happens to be a serialized net object

510
00:29:22,710 --> 00:29:28,000
nothing wrong<font color="#E5E5E5"> with that but there was no</font>

511
00:29:25,840 --> 00:29:31,540
integrity<font color="#CCCCCC"> protection meaning</font><font color="#E5E5E5"> anybody</font>

512
00:29:28,000 --> 00:29:35,610
could modify<font color="#E5E5E5"> a token and replace things</font>

513
00:29:31,540 --> 00:29:38,200
in it<font color="#E5E5E5"> and this REST API would accept it</font>

514
00:29:35,610 --> 00:29:40,540
but<font color="#E5E5E5"> even worse there</font><font color="#CCCCCC"> was no class type</font>

515
00:29:38,200 --> 00:29:42,880
validation so you could create any

516
00:29:40,540 --> 00:29:45,129
arbitrary dotnet<font color="#E5E5E5"> object serialize</font><font color="#CCCCCC"> it and</font>

517
00:29:42,880 --> 00:29:46,120
give<font color="#CCCCCC"> it to</font><font color="#E5E5E5"> this API and even though you</font>

518
00:29:45,130 --> 00:29:48,460
would not be<font color="#E5E5E5"> able to authenticate</font>

519
00:29:46,120 --> 00:29:50,029
<font color="#E5E5E5">because it's invalid object this</font>

520
00:29:48,460 --> 00:29:53,690
<font color="#E5E5E5">civilization would happen</font>

521
00:29:50,029 --> 00:29:55,489
and as a result<font color="#CCCCCC"> you</font><font color="#E5E5E5"> can guess the the</font>

522
00:29:53,690 --> 00:29:59,989
researchers were able<font color="#E5E5E5"> to run remote</font>

523
00:29:55,489 --> 00:30:01,969
<font color="#E5E5E5">coded run remote code on the system so</font>

524
00:29:59,989 --> 00:30:02,719
they reported<font color="#E5E5E5"> it to the vendor they</font>

525
00:30:01,969 --> 00:30:05,119
fixed it

526
00:30:02,719 --> 00:30:11,840
<font color="#CCCCCC">research is published and we all have a</font>

527
00:30:05,119 --> 00:30:13,908
very good<font color="#CCCCCC"> lesson to learn I just want to</font>

528
00:30:11,840 --> 00:30:16,119
show you real quick how<font color="#E5E5E5"> easy it is to</font>

529
00:30:13,909 --> 00:30:18,799
exploit<font color="#E5E5E5"> remote code execution</font>

530
00:30:16,119 --> 00:30:23,439
vulnerabilities and we're gonna<font color="#E5E5E5"> use this</font>

531
00:30:18,799 --> 00:30:23,440
rest<font color="#E5E5E5"> plug-in as an example</font>

532
00:30:29,070 --> 00:30:33,289
<font color="#CCCCCC">I don't need</font><font color="#E5E5E5"> the editor anymore</font>

533
00:30:37,350 --> 00:30:42,719
here's the exploit which is the Python

534
00:30:39,530 --> 00:30:46,289
code<font color="#CCCCCC"> and I didn't have to write anything</font>

535
00:30:42,720 --> 00:30:48,960
<font color="#CCCCCC">I just downloaded it the first thing it</font>

536
00:30:46,289 --> 00:30:50,760
needs it needs<font color="#CCCCCC"> a URL</font><font color="#E5E5E5"> so we need to find</font>

537
00:30:48,960 --> 00:30:53,370
<font color="#E5E5E5">a vulnerable application and the</font>

538
00:30:50,760 --> 00:30:55,730
<font color="#E5E5E5">recession application called</font><font color="#CCCCCC"> toy</font><font color="#E5E5E5"> request</font>

539
00:30:53,370 --> 00:30:59,039
form courtesy of Science Institute<font color="#E5E5E5"> and</font>

540
00:30:55,730 --> 00:31:01,910
this application<font color="#CCCCCC"> is used by the kids to</font>

541
00:30:59,039 --> 00:31:05,129
request toys from Santa for<font color="#CCCCCC"> Christmas</font>

542
00:31:01,910 --> 00:31:09,929
<font color="#E5E5E5">and it happens</font><font color="#CCCCCC"> to be vulnerable</font><font color="#E5E5E5"> to this</font>

543
00:31:05,130 --> 00:31:13,460
<font color="#E5E5E5">particular issue this is intentional so</font>

544
00:31:09,929 --> 00:31:16,289
don't worry<font color="#E5E5E5"> so I'm just given the URL</font>

545
00:31:13,460 --> 00:31:21,659
<font color="#CCCCCC">and I need a command and what I'm gonna</font>

546
00:31:16,289 --> 00:31:26,460
do is I want I want<font color="#E5E5E5"> to read a remote</font>

547
00:31:21,659 --> 00:31:28,140
shell so<font color="#E5E5E5"> I have</font><font color="#CCCCCC"> just logged into one</font><font color="#E5E5E5"> of</font>

548
00:31:26,460 --> 00:31:32,640
my Linux machines with the public IP

549
00:31:28,140 --> 00:31:36,049
address<font color="#E5E5E5"> okay and I need to copy it</font>

550
00:31:32,640 --> 00:31:36,049
because<font color="#CCCCCC"> they</font><font color="#E5E5E5"> don't remember it</font>

551
00:31:38,530 --> 00:31:53,470
and I started<font color="#E5E5E5"> netcat listener on port</font>

552
00:31:41,320 --> 00:31:56,020
<font color="#E5E5E5">1337 and on the vulnerable server</font><font color="#CCCCCC"> what</font>

553
00:31:53,470 --> 00:32:00,190
I'm gonna do is I'm<font color="#E5E5E5"> gonna cut a run</font><font color="#CCCCCC"> net</font>

554
00:31:56,020 --> 00:32:03,340
<font color="#CCCCCC">cat that will connect to my</font><font color="#E5E5E5"> machine</font><font color="#CCCCCC"> and</font>

555
00:32:00,190 --> 00:32:06,790
give me a reverse<font color="#CCCCCC"> shell so I need to</font>

556
00:32:03,340 --> 00:32:13,990
specify<font color="#E5E5E5"> being</font><font color="#CCCCCC"> a sage and then the</font>

557
00:32:06,790 --> 00:32:16,000
<font color="#E5E5E5">address of</font><font color="#CCCCCC"> my system</font><font color="#E5E5E5"> and the port</font><font color="#CCCCCC"> okay</font>

558
00:32:13,990 --> 00:32:19,480
it completed successfully<font color="#CCCCCC"> sate payload</font>

559
00:32:16,000 --> 00:32:24,220
executed to go back to my<font color="#CCCCCC"> machine I see</font>

560
00:32:19,480 --> 00:32:27,460
connection<font color="#E5E5E5"> from somewhere yes maybe I</font>

561
00:32:24,220 --> 00:32:31,990
need to<font color="#CCCCCC"> move</font><font color="#E5E5E5"> that</font><font color="#CCCCCC"> okay a connection</font>

562
00:32:27,460 --> 00:32:34,540
accepted what is it<font color="#E5E5E5"> right let's see if I</font>

563
00:32:31,990 --> 00:32:36,030
can yeah I can list directories<font color="#E5E5E5"> in the</font>

564
00:32:34,540 --> 00:32:38,440
road

565
00:32:36,030 --> 00:32:41,260
what is the<font color="#E5E5E5"> host name here that I've</font>

566
00:32:38,440 --> 00:32:45,550
<font color="#E5E5E5">just got</font><font color="#CCCCCC"> here's</font><font color="#E5E5E5"> the host name can I look</font>

567
00:32:41,260 --> 00:32:46,960
at<font color="#E5E5E5"> the processes yes I can so</font><font color="#CCCCCC"> I</font><font color="#E5E5E5"> got a</font>

568
00:32:45,550 --> 00:32:49,629
shell<font color="#CCCCCC"> on the remote machine</font><font color="#E5E5E5"> and it took</font>

569
00:32:46,960 --> 00:32:52,180
me<font color="#E5E5E5"> like what two minutes very easy right</font>

570
00:32:49,630 --> 00:32:59,050
<font color="#E5E5E5">and I didn't have to write to write any</font>

571
00:32:52,180 --> 00:33:02,290
<font color="#E5E5E5">code for it yeah well going back</font><font color="#CCCCCC"> to the</font>

572
00:32:59,050 --> 00:33:06,100
third-party<font color="#E5E5E5"> libraries that like this</font>

573
00:33:02,290 --> 00:33:07,899
that<font color="#E5E5E5"> that could be</font><font color="#CCCCCC"> vulnerable so you</font>

574
00:33:06,100 --> 00:33:12,219
need to<font color="#E5E5E5"> know what your application is</font>

575
00:33:07,900 --> 00:33:13,750
<font color="#CCCCCC">using</font><font color="#E5E5E5"> right those things</font><font color="#CCCCCC"> you can adjust</font>

576
00:33:12,220 --> 00:33:16,840
pick up any<font color="#E5E5E5"> random junk from the</font>

577
00:33:13,750 --> 00:33:18,790
<font color="#E5E5E5">internet you need to track those</font>

578
00:33:16,840 --> 00:33:20,169
dependencies<font color="#CCCCCC"> too and you know what</font>

579
00:33:18,790 --> 00:33:23,409
you're dealing<font color="#E5E5E5"> with at any point in time</font>

580
00:33:20,170 --> 00:33:26,710
<font color="#CCCCCC">and monitor their CVS and stuff</font><font color="#E5E5E5"> and</font>

581
00:33:23,410 --> 00:33:29,140
patch patch patch promptly in the

582
00:33:26,710 --> 00:33:31,210
<font color="#CCCCCC">conclusion civilization is wonderful</font><font color="#E5E5E5"> but</font>

583
00:33:29,140 --> 00:33:33,340
it can<font color="#E5E5E5"> be</font><font color="#CCCCCC"> dangerous if</font><font color="#E5E5E5"> not done</font>

584
00:33:31,210 --> 00:33:36,010
<font color="#CCCCCC">correctly you can try to</font><font color="#E5E5E5"> avoid it and</font>

585
00:33:33,340 --> 00:33:37,870
<font color="#E5E5E5">and that might be a valid</font><font color="#CCCCCC"> solution but</font>

586
00:33:36,010 --> 00:33:40,629
sometimes it's unavoidable<font color="#CCCCCC"> or doesn't</font>

587
00:33:37,870 --> 00:33:43,350
make any sense<font color="#CCCCCC"> so you need to do it</font>

588
00:33:40,630 --> 00:33:46,480
<font color="#E5E5E5">right you need</font><font color="#CCCCCC"> to</font><font color="#E5E5E5"> validate all the input</font>

589
00:33:43,350 --> 00:33:49,360
because as we have<font color="#E5E5E5"> just learned</font><font color="#CCCCCC"> bad this</font>

590
00:33:46,480 --> 00:33:51,210
realization can result in all kinds of

591
00:33:49,360 --> 00:33:53,610
access control bypasses

592
00:33:51,210 --> 00:33:56,580
<font color="#E5E5E5">and denial of service and remote even</font>

593
00:33:53,610 --> 00:33:58,740
<font color="#E5E5E5">remote code execution and again even</font>

594
00:33:56,580 --> 00:34:02,939
<font color="#CCCCCC">when your own code is</font><font color="#E5E5E5"> completely secure</font>

595
00:33:58,740 --> 00:34:05,100
<font color="#CCCCCC">as soon</font><font color="#E5E5E5"> as you</font><font color="#CCCCCC"> use as</font><font color="#E5E5E5"> long as</font><font color="#CCCCCC"> you</font><font color="#E5E5E5"> use</font>

596
00:34:02,940 --> 00:34:08,970
<font color="#E5E5E5">the</font><font color="#CCCCCC"> old libraries that are insecure you</font>

597
00:34:05,100 --> 00:34:11,399
might be<font color="#CCCCCC"> vulnerable as well</font><font color="#E5E5E5"> and you can</font>

598
00:34:08,969 --> 00:34:13,799
go<font color="#E5E5E5"> to github</font><font color="#CCCCCC"> and download all the code</font>

599
00:34:11,399 --> 00:34:15,960
<font color="#E5E5E5">that I</font><font color="#CCCCCC"> use today and feel</font><font color="#E5E5E5"> free to play</font>

600
00:34:13,800 --> 00:34:19,050
<font color="#CCCCCC">with</font><font color="#E5E5E5"> it and run</font><font color="#CCCCCC"> it and I also have links</font>

601
00:34:15,960 --> 00:34:22,460
<font color="#E5E5E5">on that github page that you could click</font>

602
00:34:19,050 --> 00:34:25,260
and read more<font color="#E5E5E5"> about this early zation</font>

603
00:34:22,460 --> 00:34:28,859
thank you<font color="#E5E5E5"> very much for coming today</font>

604
00:34:25,260 --> 00:34:28,859
[Applause]

