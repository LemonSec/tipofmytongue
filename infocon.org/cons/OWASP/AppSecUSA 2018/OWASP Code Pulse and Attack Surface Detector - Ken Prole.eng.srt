1
00:00:00,000 --> 00:00:05,609
I'm gonna<font color="#E5E5E5"> get started here I'm gonna</font>

2
00:00:02,250 --> 00:00:07,470
today<font color="#E5E5E5"> gonna be talking about 200</font><font color="#CCCCCC"> oz</font>

3
00:00:05,609 --> 00:00:08,970
<font color="#E5E5E5">tools that helps with penetration</font>

4
00:00:07,470 --> 00:00:11,269
testing<font color="#CCCCCC"> coverage so good afternoon</font>

5
00:00:08,970 --> 00:00:11,269
<font color="#E5E5E5">everyone</font>

6
00:00:15,740 --> 00:00:20,759
so my name<font color="#CCCCCC"> is Ken</font><font color="#E5E5E5"> parole</font>

7
00:00:17,970 --> 00:00:21,509
I am<font color="#CCCCCC"> I wear two hats I'm the CTO for a</font>

8
00:00:20,760 --> 00:00:24,660
code DX

9
00:00:21,510 --> 00:00:26,070
<font color="#E5E5E5">Cody X is a system that allows</font><font color="#CCCCCC"> you to</font>

10
00:00:24,660 --> 00:00:27,900
<font color="#E5E5E5">bring together all</font><font color="#CCCCCC"> of</font><font color="#E5E5E5"> your application</font>

11
00:00:26,070 --> 00:00:30,510
security testing activities so<font color="#E5E5E5"> static</font>

12
00:00:27,900 --> 00:00:32,040
analysis dynamic analysis code reviews

13
00:00:30,510 --> 00:00:34,590
all into a central console we have a

14
00:00:32,040 --> 00:00:36,420
booth outside<font color="#E5E5E5"> and we can provide some</font>

15
00:00:34,590 --> 00:00:37,950
more<font color="#E5E5E5"> information</font><font color="#CCCCCC"> on</font><font color="#E5E5E5"> that</font><font color="#CCCCCC"> I'm also</font><font color="#E5E5E5"> a</font>

16
00:00:36,420 --> 00:00:40,800
principal investigator<font color="#CCCCCC"> for the secure</font>

17
00:00:37,950 --> 00:00:42,570
decisions<font color="#E5E5E5"> secure decisions does research</font>

18
00:00:40,800 --> 00:00:45,360
<font color="#E5E5E5">and development in the</font><font color="#CCCCCC"> area of</font>

19
00:00:42,570 --> 00:00:47,280
<font color="#CCCCCC">application security we have some</font>

20
00:00:45,360 --> 00:00:49,230
contracts with the Department<font color="#CCCCCC"> of</font>

21
00:00:47,280 --> 00:00:50,460
Homeland Security<font color="#E5E5E5"> and</font><font color="#CCCCCC"> the tools I'm</font>

22
00:00:49,230 --> 00:00:53,910
<font color="#CCCCCC">going</font><font color="#E5E5E5"> to talk about today we're funded</font>

23
00:00:50,460 --> 00:00:55,800
through DHS<font color="#CCCCCC"> code DX itself was</font><font color="#E5E5E5"> also</font>

24
00:00:53,910 --> 00:00:57,660
funded<font color="#E5E5E5"> initially through DHS and then we</font>

25
00:00:55,800 --> 00:01:00,750
<font color="#E5E5E5">transmit</font><font color="#CCCCCC"> transitioned that into a</font>

26
00:00:57,660 --> 00:01:02,819
commercial product<font color="#CCCCCC"> securitizations is a</font>

27
00:01:00,750 --> 00:01:04,530
division of apply visions that's the

28
00:01:02,820 --> 00:01:06,299
parent<font color="#E5E5E5"> company it's been around for</font><font color="#CCCCCC"> over</font>

29
00:01:04,530 --> 00:01:09,330
<font color="#CCCCCC">30 years</font><font color="#E5E5E5"> they do custom</font><font color="#CCCCCC"> software</font>

30
00:01:06,299 --> 00:01:11,790
development<font color="#E5E5E5"> I'm based in</font><font color="#CCCCCC"> New York I am</font>

31
00:01:09,330 --> 00:01:13,619
<font color="#CCCCCC">the project</font><font color="#E5E5E5"> lead</font><font color="#CCCCCC"> for the two projects we</font>

32
00:01:11,790 --> 00:01:16,259
<font color="#E5E5E5">talk about today code pulse and attack</font>

33
00:01:13,619 --> 00:01:18,119
surface detector I've been in software

34
00:01:16,259 --> 00:01:20,189
<font color="#CCCCCC">development for for over</font><font color="#E5E5E5"> 20 years</font><font color="#CCCCCC"> I</font>

35
00:01:18,119 --> 00:01:23,310
<font color="#E5E5E5">started out doing C++ development and</font>

36
00:01:20,189 --> 00:01:28,470
most<font color="#E5E5E5"> recently being helping people</font>

37
00:01:23,310 --> 00:01:30,900
develop more secure software so a quick

38
00:01:28,470 --> 00:01:34,950
agenda<font color="#E5E5E5"> I'm gonna talk a little bit about</font>

39
00:01:30,900 --> 00:01:37,590
the tools from<font color="#CCCCCC"> high-level talk</font><font color="#E5E5E5"> about the</font>

40
00:01:34,950 --> 00:01:39,329
white high penetration tester<font color="#E5E5E5"> but the</font>

41
00:01:37,590 --> 00:01:40,380
typical<font color="#CCCCCC"> workflow is like and we're</font><font color="#E5E5E5"> gonna</font>

42
00:01:39,329 --> 00:01:42,000
<font color="#E5E5E5">talk a little bit about the attack</font>

43
00:01:40,380 --> 00:01:43,500
surface and what that means<font color="#E5E5E5"> and</font><font color="#CCCCCC"> how</font>

44
00:01:42,000 --> 00:01:45,450
these tools<font color="#E5E5E5"> can help with that</font>

45
00:01:43,500 --> 00:01:48,240
so the two tools<font color="#E5E5E5"> we're gonna go into</font>

46
00:01:45,450 --> 00:01:50,130
depth on to that<font color="#CCCCCC"> os code pulse</font><font color="#E5E5E5"> we talked</font>

47
00:01:48,240 --> 00:01:52,740
<font color="#E5E5E5">about the challenges it addresses how it</font>

48
00:01:50,130 --> 00:01:55,439
works<font color="#CCCCCC"> provided a short demo</font><font color="#E5E5E5"> and then the</font>

49
00:01:52,740 --> 00:01:57,119
attack surface detector<font color="#E5E5E5"> is</font><font color="#CCCCCC"> going through</font>

50
00:01:55,439 --> 00:01:58,829
you know what's the<font color="#E5E5E5"> blotches purpose and</font>

51
00:01:57,119 --> 00:02:01,740
give you some highlights<font color="#CCCCCC"> of</font><font color="#E5E5E5"> the features</font>

52
00:01:58,829 --> 00:02:06,000
<font color="#E5E5E5">and finally wrap up where to learn more</font>

53
00:02:01,740 --> 00:02:08,008
information<font color="#E5E5E5"> and do some Q&A</font><font color="#CCCCCC"> I hope that</font>

54
00:02:06,000 --> 00:02:10,770
you know<font color="#E5E5E5"> after this talk you'll able to</font>

55
00:02:08,008 --> 00:02:12,929
see how these tools can<font color="#CCCCCC"> help make black</font>

56
00:02:10,770 --> 00:02:17,129
<font color="#CCCCCC">bus penetration testing less</font>

57
00:02:12,930 --> 00:02:19,469
Oh<font color="#CCCCCC"> bake</font><font color="#E5E5E5"> all right so an overview</font><font color="#CCCCCC"> the two</font>

58
00:02:17,129 --> 00:02:22,409
projects are<font color="#E5E5E5"> code pulse and attack</font>

59
00:02:19,469 --> 00:02:24,060
surface detector<font color="#E5E5E5"> I've been to several</font>

60
00:02:22,409 --> 00:02:25,920
talks where you know a lot<font color="#CCCCCC"> of</font><font color="#E5E5E5"> projects</font>

61
00:02:24,060 --> 00:02:27,390
are<font color="#E5E5E5"> kind of really early</font><font color="#CCCCCC"> on</font><font color="#E5E5E5"> these are</font>

62
00:02:25,920 --> 00:02:29,578
pretty mature projects<font color="#E5E5E5"> the both OS</font>

63
00:02:27,390 --> 00:02:31,469
projects<font color="#CCCCCC"> open</font><font color="#E5E5E5"> source fully freely</font>

64
00:02:29,579 --> 00:02:33,359
available<font color="#E5E5E5"> code pulse</font><font color="#CCCCCC"> has been around for</font>

65
00:02:31,469 --> 00:02:35,969
<font color="#CCCCCC">about four years</font><font color="#E5E5E5"> we just</font><font color="#CCCCCC"> recently made</font>

66
00:02:33,359 --> 00:02:38,069
<font color="#E5E5E5">some a lot of improvements</font><font color="#CCCCCC"> to it it's</font>

67
00:02:35,969 --> 00:02:40,290
basically<font color="#CCCCCC"> a way to instrument an</font>

68
00:02:38,069 --> 00:02:41,760
application while it's<font color="#E5E5E5"> being</font><font color="#CCCCCC"> tested and</font>

69
00:02:40,290 --> 00:02:44,280
<font color="#E5E5E5">get a sense for how much code coverage</font>

70
00:02:41,760 --> 00:02:47,519
you're getting the attack surface

71
00:02:44,280 --> 00:02:49,230
detector is also a<font color="#CCCCCC"> No Mas project we</font>

72
00:02:47,519 --> 00:02:51,959
<font color="#CCCCCC">actually collaborated with</font><font color="#E5E5E5"> denimm group</font>

73
00:02:49,230 --> 00:02:54,119
initially<font color="#CCCCCC"> on this</font><font color="#E5E5E5"> effort through the DHS</font>

74
00:02:51,959 --> 00:02:55,799
contract extending on some of the work

75
00:02:54,120 --> 00:02:57,689
<font color="#CCCCCC">that they've done</font><font color="#E5E5E5"> and that helps you</font>

76
00:02:55,799 --> 00:02:58,980
figure<font color="#E5E5E5"> out the attack surface that's</font>

77
00:02:57,689 --> 00:03:01,349
<font color="#E5E5E5">exposed in the application we're gonna</font>

78
00:02:58,980 --> 00:03:03,719
go into<font color="#E5E5E5"> more depth about that the output</font>

79
00:03:01,349 --> 00:03:05,790
of<font color="#CCCCCC"> that can</font><font color="#E5E5E5"> be used to</font><font color="#CCCCCC"> precede</font><font color="#E5E5E5"> tools</font>

80
00:03:03,719 --> 00:03:07,918
<font color="#E5E5E5">like zap and burr so that it can have a</font>

81
00:03:05,790 --> 00:03:10,590
better understanding<font color="#CCCCCC"> of the application</font>

82
00:03:07,919 --> 00:03:12,299
<font color="#E5E5E5">and do a more thorough testing and we</font>

83
00:03:10,590 --> 00:03:13,680
<font color="#CCCCCC">actually use the attack surface now</font>

84
00:03:12,299 --> 00:03:16,379
<font color="#E5E5E5">within code pulse and I'll demonstrate</font>

85
00:03:13,680 --> 00:03:18,500
<font color="#E5E5E5">that as well so these two are working</font>

86
00:03:16,379 --> 00:03:23,159
<font color="#E5E5E5">together</font>

87
00:03:18,500 --> 00:03:25,229
<font color="#CCCCCC">alright so whitehat penetration testing</font>

88
00:03:23,159 --> 00:03:27,510
<font color="#E5E5E5">that's the core users that we're</font>

89
00:03:25,229 --> 00:03:29,879
<font color="#E5E5E5">addressing also known as ethical</font><font color="#CCCCCC"> factor</font>

90
00:03:27,510 --> 00:03:31,500
<font color="#E5E5E5">hackers or you know ah speak they're the</font>

91
00:03:29,879 --> 00:03:34,138
breakers the ones that go in<font color="#CCCCCC"> and try and</font>

92
00:03:31,500 --> 00:03:36,510
attack an application<font color="#E5E5E5"> anyone here</font>

93
00:03:34,139 --> 00:03:41,370
<font color="#E5E5E5">consider themselves a white hat pen</font>

94
00:03:36,510 --> 00:03:42,750
tester awesome cool<font color="#CCCCCC"> so you know you have</font>

95
00:03:41,370 --> 00:03:45,389
a little<font color="#E5E5E5"> some disadvantages right you</font>

96
00:03:42,750 --> 00:03:47,280
your job is to<font color="#E5E5E5"> find all</font><font color="#CCCCCC"> of the</font>

97
00:03:45,389 --> 00:03:49,049
vulnerabilities where you know<font color="#CCCCCC"> a hacker</font>

98
00:03:47,280 --> 00:03:50,489
just<font color="#E5E5E5"> has to find one and you have</font>

99
00:03:49,049 --> 00:03:53,220
limited<font color="#CCCCCC"> time compared to</font><font color="#E5E5E5"> what the</font>

100
00:03:50,489 --> 00:03:54,780
hackers have out there and if you're

101
00:03:53,220 --> 00:03:57,150
<font color="#CCCCCC">working closely with the development</font>

102
00:03:54,780 --> 00:03:58,650
team<font color="#E5E5E5"> they started to keep keep up with</font>

103
00:03:57,150 --> 00:04:03,060
them<font color="#CCCCCC"> right they're developing code</font>

104
00:03:58,650 --> 00:04:04,409
really rapidly<font color="#E5E5E5"> and that's a challenge</font><font color="#CCCCCC"> so</font>

105
00:04:03,060 --> 00:04:07,439
there's a<font color="#E5E5E5"> few advantages</font><font color="#CCCCCC"> that</font><font color="#E5E5E5"> you</font><font color="#CCCCCC"> can</font>

106
00:04:04,409 --> 00:04:10,078
have if you have access<font color="#CCCCCC"> to the bytecode</font>

107
00:04:07,439 --> 00:04:12,060
<font color="#E5E5E5">or the source code these tools can</font><font color="#CCCCCC"> help</font>

108
00:04:10,079 --> 00:04:13,919
out with<font color="#E5E5E5"> that and I'll also talk about</font>

109
00:04:12,060 --> 00:04:16,918
<font color="#E5E5E5">some</font><font color="#CCCCCC"> ways around that</font><font color="#E5E5E5"> if you don't have</font>

110
00:04:13,919 --> 00:04:22,710
direct<font color="#CCCCCC"> access</font><font color="#E5E5E5"> to the source code anyone</font>

111
00:04:16,918 --> 00:04:25,469
here familiar with<font color="#CCCCCC"> zap ok burp suite I</font>

112
00:04:22,710 --> 00:04:26,400
just use<font color="#CCCCCC"> it really</font><font color="#E5E5E5"> popular penetration</font>

113
00:04:25,469 --> 00:04:29,280
testing tools

114
00:04:26,400 --> 00:04:30,179
can be<font color="#E5E5E5"> used manually or automated</font><font color="#CCCCCC"> a lot</font>

115
00:04:29,280 --> 00:04:31,948
of<font color="#E5E5E5"> these solutions</font><font color="#CCCCCC"> we'll talk about</font>

116
00:04:30,180 --> 00:04:36,330
<font color="#E5E5E5">today can also work with tools like web</font>

117
00:04:31,949 --> 00:04:39,509
<font color="#CCCCCC">inspect or a kinetics</font><font color="#E5E5E5"> or nets Parker or</font>

118
00:04:36,330 --> 00:04:42,150
even<font color="#CCCCCC"> dooms</font><font color="#E5E5E5"> strict manual reviews or if</font>

119
00:04:39,509 --> 00:04:45,120
you have an outside<font color="#E5E5E5"> penetration testing</font>

120
00:04:42,150 --> 00:04:46,258
organization<font color="#E5E5E5"> that is doing testing for</font>

121
00:04:45,120 --> 00:04:47,910
you you<font color="#E5E5E5"> want to</font><font color="#CCCCCC"> get an</font><font color="#E5E5E5"> idea</font><font color="#CCCCCC"> of</font><font color="#E5E5E5"> how much</font>

122
00:04:46,259 --> 00:04:50,340
coverage<font color="#E5E5E5"> you're getting these tools can</font>

123
00:04:47,910 --> 00:04:52,650
<font color="#E5E5E5">help out</font><font color="#CCCCCC"> with that let's talk a little</font>

124
00:04:50,340 --> 00:04:54,659
<font color="#CCCCCC">bit about the the typical</font><font color="#E5E5E5"> workflow for</font><font color="#CCCCCC"> a</font>

125
00:04:52,650 --> 00:04:56,429
penetration tester<font color="#E5E5E5"> we have a web</font>

126
00:04:54,660 --> 00:04:57,449
application that's probably accessing

127
00:04:56,430 --> 00:05:01,229
some database where<font color="#E5E5E5"> you have your</font>

128
00:04:57,449 --> 00:05:03,180
sensitive<font color="#E5E5E5"> information as a pen tester</font>

129
00:05:01,229 --> 00:05:04,680
<font color="#E5E5E5">typically the first step is to try and</font>

130
00:05:03,180 --> 00:05:07,020
<font color="#E5E5E5">figure</font><font color="#CCCCCC"> out how</font><font color="#E5E5E5"> to authenticate</font><font color="#CCCCCC"> you know</font>

131
00:05:04,680 --> 00:05:08,850
you have to<font color="#E5E5E5"> know</font><font color="#CCCCCC"> different users and</font>

132
00:05:07,020 --> 00:05:10,650
<font color="#E5E5E5">different user roles that are</font><font color="#CCCCCC"> associated</font>

133
00:05:08,850 --> 00:05:12,150
<font color="#CCCCCC">with the application if you don't have</font>

134
00:05:10,650 --> 00:05:13,859
the right credentials you're not gonna

135
00:05:12,150 --> 00:05:16,590
<font color="#E5E5E5">really get too far with being able to</font>

136
00:05:13,860 --> 00:05:18,479
test the<font color="#CCCCCC"> application and then do</font>

137
00:05:16,590 --> 00:05:20,039
<font color="#E5E5E5">endpoint and numeration so a lot of</font>

138
00:05:18,479 --> 00:05:21,840
times you'll manually map out the

139
00:05:20,039 --> 00:05:23,580
application go to every<font color="#E5E5E5"> single link on</font>

140
00:05:21,840 --> 00:05:26,969
the page<font color="#E5E5E5"> go through the forms go through</font>

141
00:05:23,580 --> 00:05:28,620
multiple<font color="#E5E5E5"> step forms like you know check</font>

142
00:05:26,970 --> 00:05:30,300
<font color="#E5E5E5">out processes have multiple steps so</font>

143
00:05:28,620 --> 00:05:32,310
<font color="#CCCCCC">that</font><font color="#E5E5E5"> you can build up that site map in</font>

144
00:05:30,300 --> 00:05:34,229
order<font color="#CCCCCC"> for the tools to perform</font><font color="#E5E5E5"> their</font>

145
00:05:32,310 --> 00:05:37,139
testing for you to do more thorough

146
00:05:34,229 --> 00:05:39,419
manual testing then<font color="#E5E5E5"> typically go through</font>

147
00:05:37,139 --> 00:05:41,550
<font color="#CCCCCC">the</font><font color="#E5E5E5"> automated spidering and crawling</font>

148
00:05:39,419 --> 00:05:43,260
process so tools<font color="#E5E5E5"> like</font><font color="#CCCCCC"> sap and burp you</font>

149
00:05:41,550 --> 00:05:44,729
can just point<font color="#E5E5E5"> them</font><font color="#CCCCCC"> out at</font><font color="#E5E5E5"> the website</font>

150
00:05:43,260 --> 00:05:47,550
<font color="#E5E5E5">it'll automatically figure out all of</font>

151
00:05:44,729 --> 00:05:49,680
<font color="#E5E5E5">the different end points</font><font color="#CCCCCC"> and</font><font color="#E5E5E5"> the better</font>

152
00:05:47,550 --> 00:05:51,300
you do that manual mapping the the

153
00:05:49,680 --> 00:05:55,169
better<font color="#E5E5E5"> the tool will be</font><font color="#CCCCCC"> able</font><font color="#E5E5E5"> to do</font><font color="#CCCCCC"> to to</font>

154
00:05:51,300 --> 00:05:57,210
crawl out<font color="#E5E5E5"> further then you</font><font color="#CCCCCC"> can do brute</font>

155
00:05:55,169 --> 00:06:00,510
<font color="#CCCCCC">forcing or</font><font color="#E5E5E5"> forced browsing so this is a</font>

156
00:05:57,210 --> 00:06:02,698
way<font color="#CCCCCC"> of the tools trying to find unlinked</font>

157
00:06:00,510 --> 00:06:05,330
<font color="#E5E5E5">end points in the application basically</font>

158
00:06:02,699 --> 00:06:07,800
there's a<font color="#CCCCCC"> dictionary of different</font>

159
00:06:05,330 --> 00:06:10,289
<font color="#E5E5E5">keywords that a little try</font><font color="#CCCCCC"> on</font><font color="#E5E5E5"> put on</font><font color="#CCCCCC"> the</font>

160
00:06:07,800 --> 00:06:12,870
<font color="#CCCCCC">URLs that you</font><font color="#E5E5E5"> know other apps might use</font>

161
00:06:10,289 --> 00:06:14,219
<font color="#E5E5E5">but</font><font color="#CCCCCC"> a lot</font><font color="#E5E5E5"> of times this</font><font color="#CCCCCC"> is</font><font color="#E5E5E5"> hit earnest</font>

162
00:06:12,870 --> 00:06:18,000
if you're<font color="#CCCCCC"> gonna</font><font color="#E5E5E5"> be</font><font color="#CCCCCC"> able</font><font color="#E5E5E5"> to find one of</font>

163
00:06:14,220 --> 00:06:19,590
<font color="#E5E5E5">these</font><font color="#CCCCCC"> when these hidden</font><font color="#E5E5E5"> end points from</font>

164
00:06:18,000 --> 00:06:21,900
this end point enumeration process<font color="#E5E5E5"> out</font>

165
00:06:19,590 --> 00:06:24,750
pops the attack surface so the attack

166
00:06:21,900 --> 00:06:26,520
surface is how an<font color="#E5E5E5"> attacker can get into</font>

167
00:06:24,750 --> 00:06:29,400
the application<font color="#CCCCCC"> to get to the sensitive</font>

168
00:06:26,520 --> 00:06:31,440
<font color="#E5E5E5">data</font><font color="#CCCCCC"> that you're trying</font><font color="#E5E5E5"> to protect and</font>

169
00:06:29,400 --> 00:06:32,429
once the attack surface is is out there

170
00:06:31,440 --> 00:06:34,199
then<font color="#E5E5E5"> you</font><font color="#CCCCCC"> can go</font><font color="#E5E5E5"> through the</font>

171
00:06:32,430 --> 00:06:34,960
vulnerability discovery process doing

172
00:06:34,199 --> 00:06:40,240
<font color="#E5E5E5">passive</font>

173
00:06:34,960 --> 00:06:42,039
<font color="#E5E5E5">active or</font><font color="#CCCCCC"> fussing let's talk a little</font>

174
00:06:40,240 --> 00:06:44,440
<font color="#E5E5E5">bit</font><font color="#CCCCCC"> about the attack surface a little</font>

175
00:06:42,039 --> 00:06:47,800
<font color="#E5E5E5">bit more I'm gonna use a house as an</font>

176
00:06:44,440 --> 00:06:49,479
analogy<font color="#E5E5E5"> so if you look at a house you</font>

177
00:06:47,800 --> 00:06:51,220
know how can<font color="#E5E5E5"> someone get into your house</font>

178
00:06:49,479 --> 00:06:54,310
you<font color="#E5E5E5"> know maybe</font><font color="#CCCCCC"> they'll try the front</font>

179
00:06:51,220 --> 00:06:56,800
<font color="#E5E5E5">door</font><font color="#CCCCCC"> the side door they'll look for open</font>

180
00:06:54,310 --> 00:06:59,139
windows so these are ways<font color="#E5E5E5"> of</font><font color="#CCCCCC"> getting</font><font color="#E5E5E5"> and</font>

181
00:06:56,800 --> 00:07:00,910
<font color="#E5E5E5">getting to sensitive information with a</font>

182
00:06:59,139 --> 00:07:03,300
web application that's<font color="#E5E5E5"> typically</font><font color="#CCCCCC"> the</font>

183
00:07:00,910 --> 00:07:07,090
URLs<font color="#E5E5E5"> that the application is exposing</font>

184
00:07:03,300 --> 00:07:09,250
like a login form<font color="#E5E5E5"> and depending on you</font>

185
00:07:07,090 --> 00:07:11,888
know<font color="#E5E5E5"> how that</font><font color="#CCCCCC"> login form is used the</font>

186
00:07:09,250 --> 00:07:15,940
attacker can get in<font color="#CCCCCC"> too</font><font color="#E5E5E5"> in the</font>

187
00:07:11,889 --> 00:07:17,800
application in<font color="#CCCCCC"> different ways but</font><font color="#E5E5E5"> the</font>

188
00:07:15,940 --> 00:07:19,960
<font color="#CCCCCC">open window is just kind of the starting</font>

189
00:07:17,800 --> 00:07:23,289
<font color="#CCCCCC">point for</font><font color="#E5E5E5"> getting at the sensitive</font>

190
00:07:19,960 --> 00:07:25,930
<font color="#E5E5E5">information</font><font color="#CCCCCC"> there's different paths that</font>

191
00:07:23,289 --> 00:07:27,639
<font color="#E5E5E5">one can take through a house or an</font>

192
00:07:25,930 --> 00:07:30,820
application<font color="#CCCCCC"> to get</font><font color="#E5E5E5"> to that</font><font color="#CCCCCC"> particular</font>

193
00:07:27,639 --> 00:07:33,099
<font color="#CCCCCC">area of interest for web applications</font>

194
00:07:30,820 --> 00:07:36,909
though this<font color="#E5E5E5"> is much more complex right</font>

195
00:07:33,099 --> 00:07:39,610
there's<font color="#CCCCCC"> not</font><font color="#E5E5E5"> a single floor</font><font color="#CCCCCC"> much more</font>

196
00:07:36,909 --> 00:07:41,740
<font color="#E5E5E5">complex you have many floors and being</font>

197
00:07:39,610 --> 00:07:43,870
able to you<font color="#E5E5E5"> know for if you look at this</font>

198
00:07:41,740 --> 00:07:45,550
as an application<font color="#CCCCCC"> how can you know how</font>

199
00:07:43,870 --> 00:07:47,650
<font color="#E5E5E5">much coverage</font><font color="#CCCCCC"> you're getting and where</font>

200
00:07:45,550 --> 00:07:51,729
<font color="#E5E5E5">it going</font><font color="#CCCCCC"> within the application when</font>

201
00:07:47,650 --> 00:07:55,690
it's<font color="#E5E5E5"> this complex so this is why we</font>

202
00:07:51,729 --> 00:07:58,030
developed<font color="#CCCCCC"> OS code pulse</font><font color="#E5E5E5"> if you look at</font>

203
00:07:55,690 --> 00:07:59,560
Wikipedia<font color="#E5E5E5"> under web</font><font color="#CCCCCC"> applications</font>

204
00:07:58,030 --> 00:08:02,020
<font color="#E5E5E5">security scanner you'll find this it</font>

205
00:07:59,560 --> 00:08:03,550
wasn't<font color="#E5E5E5"> written by me the penetration</font>

206
00:08:02,020 --> 00:08:04,990
tester<font color="#CCCCCC"> should look at the coverage at</font>

207
00:08:03,550 --> 00:08:06,699
<font color="#E5E5E5">the web application or</font><font color="#CCCCCC"> its attack</font>

208
00:08:04,990 --> 00:08:08,830
<font color="#CCCCCC">service</font><font color="#E5E5E5"> to know if the tool was</font>

209
00:08:06,699 --> 00:08:10,990
<font color="#E5E5E5">configured correctly or was able</font><font color="#CCCCCC"> to</font>

210
00:08:08,830 --> 00:08:12,490
understand the web application<font color="#CCCCCC"> and this</font>

211
00:08:10,990 --> 00:08:14,949
is really what code pulse<font color="#E5E5E5"> is is aiming</font>

212
00:08:12,490 --> 00:08:16,270
to<font color="#CCCCCC"> address being</font><font color="#E5E5E5"> able to measure</font><font color="#CCCCCC"> how</font>

213
00:08:14,949 --> 00:08:18,699
<font color="#E5E5E5">much coverage you're getting during your</font>

214
00:08:16,270 --> 00:08:20,590
<font color="#E5E5E5">penetration testing activities a lot of</font>

215
00:08:18,699 --> 00:08:21,880
times if<font color="#E5E5E5"> you're</font><font color="#CCCCCC"> just</font><font color="#E5E5E5"> looking at what you</font>

216
00:08:20,590 --> 00:08:26,080
can see you<font color="#E5E5E5"> don't know what you can't</font>

217
00:08:21,880 --> 00:08:27,699
see so code pulse helps with<font color="#E5E5E5"> several</font>

218
00:08:26,080 --> 00:08:30,880
<font color="#E5E5E5">different things it'll tell you</font><font color="#CCCCCC"> if</font>

219
00:08:27,699 --> 00:08:32,349
<font color="#CCCCCC">you've reached</font><font color="#E5E5E5"> all of</font><font color="#CCCCCC"> the application as</font>

220
00:08:30,880 --> 00:08:34,088
you're<font color="#E5E5E5"> doing actions within the</font>

221
00:08:32,349 --> 00:08:36,399
application you can see which parts<font color="#CCCCCC"> of</font>

222
00:08:34,089 --> 00:08:39,130
<font color="#E5E5E5">the source code were executed so similar</font>

223
00:08:36,399 --> 00:08:41,500
to<font color="#E5E5E5"> the house analogy where you're you</font>

224
00:08:39,130 --> 00:08:43,659
know performing different<font color="#CCCCCC"> ways of</font><font color="#E5E5E5"> trying</font>

225
00:08:41,500 --> 00:08:45,160
to get in<font color="#E5E5E5"> how you can get different</font>

226
00:08:43,659 --> 00:08:47,130
<font color="#CCCCCC">different parts the same thing you can</font>

227
00:08:45,160 --> 00:08:48,719
do in real time to be able<font color="#E5E5E5"> to see</font>

228
00:08:47,130 --> 00:08:50,610
much coverage you're getting and where

229
00:08:48,720 --> 00:08:52,830
you're going<font color="#CCCCCC"> within the app based on the</font>

230
00:08:50,610 --> 00:08:55,320
actions that<font color="#E5E5E5"> you're performing you'll be</font>

231
00:08:52,830 --> 00:08:58,340
able<font color="#E5E5E5"> to compare different tools to see</font>

232
00:08:55,320 --> 00:09:00,630
which ones are getting<font color="#E5E5E5"> better coverage</font>

233
00:08:58,340 --> 00:09:02,400
<font color="#CCCCCC">if you have</font><font color="#E5E5E5"> multiple testers that are</font>

234
00:09:00,630 --> 00:09:04,350
doing<font color="#E5E5E5"> testing you can</font><font color="#CCCCCC"> compare how well</font>

235
00:09:02,400 --> 00:09:07,439
they're doing<font color="#E5E5E5"> or which parts of the app</font>

236
00:09:04,350 --> 00:09:08,940
they're they're testing<font color="#E5E5E5"> more most</font>

237
00:09:07,440 --> 00:09:11,250
important it<font color="#CCCCCC"> helps you tune your test</font>

238
00:09:08,940 --> 00:09:13,260
coverage<font color="#CCCCCC"> your testing tools so a lot of</font>

239
00:09:11,250 --> 00:09:15,510
the tools need<font color="#CCCCCC"> to</font><font color="#E5E5E5"> be tuned for the</font>

240
00:09:13,260 --> 00:09:16,860
application or just<font color="#CCCCCC"> tuned for themselves</font>

241
00:09:15,510 --> 00:09:18,750
to get<font color="#E5E5E5"> better coverage you</font><font color="#CCCCCC"> can</font><font color="#E5E5E5"> use that</font>

242
00:09:16,860 --> 00:09:22,020
<font color="#E5E5E5">for this and then communicate the</font>

243
00:09:18,750 --> 00:09:25,170
testing coverage<font color="#E5E5E5"> to others so you know</font>

244
00:09:22,020 --> 00:09:27,120
helps with coverage gaps<font color="#CCCCCC"> tuning</font><font color="#E5E5E5"> the</font>

245
00:09:25,170 --> 00:09:30,660
applications and tools and then

246
00:09:27,120 --> 00:09:32,370
communicating<font color="#CCCCCC"> the results to others so a</font>

247
00:09:30,660 --> 00:09:33,750
code pulse is primarily a code coverage

248
00:09:32,370 --> 00:09:35,670
tool now there's other solutions<font color="#E5E5E5"> out</font>

249
00:09:33,750 --> 00:09:37,610
there<font color="#CCCCCC"> that will</font><font color="#E5E5E5"> be able to check code</font>

250
00:09:35,670 --> 00:09:39,719
coverage but this was really developed

251
00:09:37,610 --> 00:09:42,360
<font color="#E5E5E5">specifically for penetration testing</font>

252
00:09:39,720 --> 00:09:45,030
activities the other tools are primarily

253
00:09:42,360 --> 00:09:46,200
static where you do<font color="#CCCCCC"> all</font><font color="#E5E5E5"> your testing</font><font color="#CCCCCC"> and</font>

254
00:09:45,030 --> 00:09:48,810
then you come back<font color="#E5E5E5"> and you look at kind</font>

255
00:09:46,200 --> 00:09:52,020
of<font color="#E5E5E5"> a flat list of what was covered but</font>

256
00:09:48,810 --> 00:09:54,540
code<font color="#CCCCCC"> pulse is a real time and very</font>

257
00:09:52,020 --> 00:09:57,510
visual presentation<font color="#CCCCCC"> of the application</font>

258
00:09:54,540 --> 00:09:59,250
<font color="#E5E5E5">under testing and you know the old</font><font color="#CCCCCC"> adage</font>

259
00:09:57,510 --> 00:10:01,680
that a picture's<font color="#CCCCCC"> worth</font><font color="#E5E5E5"> a thousand words'</font>

260
00:09:59,250 --> 00:10:03,270
is<font color="#CCCCCC"> is what was something true for what</font>

261
00:10:01,680 --> 00:10:05,310
we're<font color="#CCCCCC"> dealing with with code</font><font color="#E5E5E5"> pulse and</font>

262
00:10:03,270 --> 00:10:08,939
it allows you<font color="#E5E5E5"> to really see a whole</font>

263
00:10:05,310 --> 00:10:10,890
application<font color="#E5E5E5"> in a single view so in a</font>

264
00:10:08,940 --> 00:10:12,300
nutshell code pulse is a<font color="#E5E5E5"> real-time code</font>

265
00:10:10,890 --> 00:10:14,270
coverage<font color="#E5E5E5"> visualization tool for</font>

266
00:10:12,300 --> 00:10:17,280
<font color="#E5E5E5">penetration testing activities</font>

267
00:10:14,270 --> 00:10:18,780
so how code pulse works<font color="#E5E5E5"> and you have</font>

268
00:10:17,280 --> 00:10:20,730
<font color="#CCCCCC">your penetration</font><font color="#E5E5E5"> tester looking at an</font>

269
00:10:18,780 --> 00:10:23,480
application<font color="#CCCCCC"> in this case it's it's</font>

270
00:10:20,730 --> 00:10:25,320
<font color="#E5E5E5">webgoat and that's a black box</font>

271
00:10:23,480 --> 00:10:28,140
<font color="#E5E5E5">perspective you can't really see what's</font>

272
00:10:25,320 --> 00:10:30,090
<font color="#CCCCCC">going</font><font color="#E5E5E5"> on inside with</font><font color="#CCCCCC"> a</font><font color="#E5E5E5"> code pulse agent</font>

273
00:10:28,140 --> 00:10:33,620
<font color="#E5E5E5">you install this within the application</font>

274
00:10:30,090 --> 00:10:36,450
we have support for<font color="#E5E5E5"> Java and.net and</font>

275
00:10:33,620 --> 00:10:37,950
what this<font color="#E5E5E5"> will help you provide is real</font>

276
00:10:36,450 --> 00:10:40,710
<font color="#E5E5E5">time code coverage</font><font color="#CCCCCC"> information so</font>

277
00:10:37,950 --> 00:10:41,970
turning<font color="#E5E5E5"> that black box</font><font color="#CCCCCC"> into glass box</font>

278
00:10:40,710 --> 00:10:44,480
<font color="#E5E5E5">that you can actually see what's going</font>

279
00:10:41,970 --> 00:10:47,550
<font color="#CCCCCC">on inside</font><font color="#E5E5E5"> so</font><font color="#CCCCCC"> that provides transparency</font>

280
00:10:44,480 --> 00:10:49,500
<font color="#E5E5E5">it provides feedback into your testing</font>

281
00:10:47,550 --> 00:10:54,420
and<font color="#E5E5E5"> helps with tuning your testing to</font>

282
00:10:49,500 --> 00:10:57,450
get better<font color="#E5E5E5"> coverage so this is a</font><font color="#CCCCCC"> picture</font>

283
00:10:54,420 --> 00:11:00,839
of code pulse<font color="#E5E5E5"> each</font>

284
00:10:57,450 --> 00:11:02,910
each box here represents a method<font color="#E5E5E5"> within</font>

285
00:11:00,840 --> 00:11:05,190
the application and it's grouped by the

286
00:11:02,910 --> 00:11:07,620
classes and the namespaces<font color="#CCCCCC"> that are</font>

287
00:11:05,190 --> 00:11:10,410
involved and as you test the application

288
00:11:07,620 --> 00:11:12,300
<font color="#E5E5E5">the boxes will highlight and</font><font color="#CCCCCC"> just like</font>

289
00:11:10,410 --> 00:11:15,510
in<font color="#E5E5E5"> the house scenario</font><font color="#CCCCCC"> you'll be able</font><font color="#E5E5E5"> to</font>

290
00:11:12,300 --> 00:11:16,949
see where within<font color="#E5E5E5"> the application</font><font color="#CCCCCC"> you're</font>

291
00:11:15,510 --> 00:11:18,210
going<font color="#CCCCCC"> during your testing activity so</font>

292
00:11:16,950 --> 00:11:22,110
this is kind<font color="#CCCCCC"> of like a blueprint for</font>

293
00:11:18,210 --> 00:11:26,540
your software<font color="#CCCCCC"> so let's look at a</font>

294
00:11:22,110 --> 00:11:29,880
<font color="#E5E5E5">coverage scenario</font><font color="#CCCCCC"> I took webgoat</font><font color="#E5E5E5"> and</font>

295
00:11:26,540 --> 00:11:34,099
<font color="#CCCCCC">Waze app</font><font color="#E5E5E5"> and I was monitoring it during</font>

296
00:11:29,880 --> 00:11:37,740
<font color="#CCCCCC">my testing activities with code balls I</font>

297
00:11:34,100 --> 00:11:40,800
launched<font color="#E5E5E5"> zap I pointed at webgoat URL</font>

298
00:11:37,740 --> 00:11:43,080
and let it do its spidering let it do an

299
00:11:40,800 --> 00:11:45,260
active scan<font color="#E5E5E5"> and this was the coverage I</font>

300
00:11:43,080 --> 00:11:45,260
got

301
00:11:55,820 --> 00:12:03,389
well yeah<font color="#CCCCCC"> I</font><font color="#E5E5E5"> just wasn't</font><font color="#CCCCCC"> a</font><font color="#E5E5E5"> boxer yeah</font>

302
00:11:59,880 --> 00:12:06,089
there's uh<font color="#CCCCCC"> yeah there's</font><font color="#E5E5E5"> one box here one</font>

303
00:12:03,389 --> 00:12:07,529
box here home box here<font color="#E5E5E5"> if you look at</font>

304
00:12:06,089 --> 00:12:12,029
the<font color="#CCCCCC"> tooltips on this you can see that</font>

305
00:12:07,529 --> 00:12:14,639
it's the index.jsp<font color="#E5E5E5"> login JSP and the</font>

306
00:12:12,029 --> 00:12:17,579
<font color="#E5E5E5">login controller so because I didn't I</font>

307
00:12:14,639 --> 00:12:19,260
didn't log in to web go zap you know did

308
00:12:17,579 --> 00:12:21,120
all this testing ran for you know a few

309
00:12:19,260 --> 00:12:23,519
<font color="#CCCCCC">minutes you know you might think</font><font color="#E5E5E5"> that</font>

310
00:12:21,120 --> 00:12:26,579
you tested the whole<font color="#CCCCCC"> application but</font>

311
00:12:23,519 --> 00:12:28,050
really you didn't you<font color="#CCCCCC"> know</font><font color="#E5E5E5"> you just</font><font color="#CCCCCC"> you</font>

312
00:12:26,579 --> 00:12:30,209
<font color="#CCCCCC">just tested the</font><font color="#E5E5E5"> login page and you</font>

313
00:12:28,050 --> 00:12:32,550
<font color="#E5E5E5">weren't able to break that so the</font>

314
00:12:30,209 --> 00:12:34,589
nighttime said well then I I went in a<font color="#E5E5E5"> I</font>

315
00:12:32,550 --> 00:12:37,170
logged in through<font color="#E5E5E5"> his app so now</font><font color="#CCCCCC"> I was</font>

316
00:12:34,589 --> 00:12:39,449
<font color="#E5E5E5">app knows how to</font><font color="#CCCCCC"> log in</font><font color="#E5E5E5"> and I ran</font><font color="#CCCCCC"> the</font>

317
00:12:37,170 --> 00:12:41,130
spider and<font color="#E5E5E5"> ran the active scan and this</font>

318
00:12:39,449 --> 00:12:42,630
<font color="#E5E5E5">was the math that was generated so I got</font>

319
00:12:41,130 --> 00:12:46,170
you know I did a better<font color="#E5E5E5"> job got some</font>

320
00:12:42,630 --> 00:12:48,149
<font color="#E5E5E5">more coverage then I did manual browsing</font>

321
00:12:46,170 --> 00:12:50,880
I went through web<font color="#E5E5E5"> code went through a</font>

322
00:12:48,149 --> 00:12:52,079
bunch<font color="#E5E5E5"> of different forums and then now</font>

323
00:12:50,880 --> 00:12:53,399
you<font color="#E5E5E5"> can see that the picture</font><font color="#CCCCCC"> is getting</font>

324
00:12:52,079 --> 00:12:55,410
<font color="#E5E5E5">better hey so I'm getting a lot</font><font color="#CCCCCC"> more</font>

325
00:12:53,399 --> 00:12:57,209
coverage<font color="#E5E5E5"> and I could still look for</font>

326
00:12:55,410 --> 00:13:00,719
areas<font color="#E5E5E5"> that I may have missed</font><font color="#CCCCCC"> like in</font>

327
00:12:57,209 --> 00:13:03,029
here there's a in this admin class

328
00:13:00,720 --> 00:13:05,850
there's a<font color="#CCCCCC"> refreshed</font><font color="#E5E5E5"> database screen I</font>

329
00:13:03,029 --> 00:13:10,110
never never went<font color="#E5E5E5"> through that particular</font>

330
00:13:05,850 --> 00:13:12,480
<font color="#E5E5E5">action so zap wasn't able to to get into</font>

331
00:13:10,110 --> 00:13:14,940
that part<font color="#E5E5E5"> of the thing so looking at the</font>

332
00:13:12,480 --> 00:13:16,290
you<font color="#E5E5E5"> know overall results of these you</font>

333
00:13:14,940 --> 00:13:17,699
know<font color="#E5E5E5"> this is the first scan second scan</font>

334
00:13:16,290 --> 00:13:19,410
and third scans and now visually you can

335
00:13:17,699 --> 00:13:22,979
<font color="#CCCCCC">see that I'm getting better</font><font color="#E5E5E5"> coverage</font>

336
00:13:19,410 --> 00:13:25,560
<font color="#E5E5E5">just with this tool</font><font color="#CCCCCC"> you could</font><font color="#E5E5E5"> also use</font>

337
00:13:22,980 --> 00:13:27,329
it<font color="#CCCCCC"> to compare manual and automated</font>

338
00:13:25,560 --> 00:13:30,420
scanning so in within code<font color="#CCCCCC"> pulse</font><font color="#E5E5E5"> you can</font>

339
00:13:27,329 --> 00:13:32,819
<font color="#E5E5E5">have different recordings and in here</font>

340
00:13:30,420 --> 00:13:35,519
basically<font color="#E5E5E5"> everything that's black is</font>

341
00:13:32,819 --> 00:13:37,860
saying that you know is found both by

342
00:13:35,519 --> 00:13:39,660
manual and automated testing<font color="#E5E5E5"> the things</font>

343
00:13:37,860 --> 00:13:42,240
that are in green we're just found

344
00:13:39,660 --> 00:13:43,800
during<font color="#CCCCCC"> my manual</font><font color="#E5E5E5"> scan and then the</font>

345
00:13:42,240 --> 00:13:45,360
things that were in blue or just found

346
00:13:43,800 --> 00:13:47,670
by automated scan so it allows you<font color="#E5E5E5"> to</font>

347
00:13:45,360 --> 00:13:51,350
compare<font color="#CCCCCC"> different testing approaches and</font>

348
00:13:47,670 --> 00:13:53,819
kind of get an<font color="#CCCCCC"> idea where this overlap</font>

349
00:13:51,350 --> 00:13:56,430
you can compare tools so maybe you know

350
00:13:53,819 --> 00:13:58,469
<font color="#CCCCCC">running to tools or evaluating tools you</font>

351
00:13:56,430 --> 00:14:00,630
can<font color="#E5E5E5"> see how well they're</font><font color="#CCCCCC"> they're they're</font>

352
00:13:58,470 --> 00:14:02,730
performing so in this case the same kind

353
00:14:00,630 --> 00:14:04,189
of thing where<font color="#E5E5E5"> the black</font><font color="#CCCCCC"> is found by</font>

354
00:14:02,730 --> 00:14:05,870
both

355
00:14:04,190 --> 00:14:09,680
and the colors<font color="#CCCCCC"> represent what was found</font>

356
00:14:05,870 --> 00:14:11,360
<font color="#E5E5E5">by individual tools compare testers if</font>

357
00:14:09,680 --> 00:14:13,219
you're hiring outside<font color="#E5E5E5"> firm you have an</font>

358
00:14:11,360 --> 00:14:14,990
internal testing team<font color="#E5E5E5"> and you want to</font>

359
00:14:13,220 --> 00:14:18,129
see how much coverage<font color="#CCCCCC"> they're getting</font>

360
00:14:14,990 --> 00:14:20,779
you can instrument the application and

361
00:14:18,129 --> 00:14:23,149
so now I'm<font color="#CCCCCC"> gonna go to</font><font color="#E5E5E5"> a live</font>

362
00:14:20,779 --> 00:14:25,730
demonstration<font color="#E5E5E5"> here I'm gonna</font><font color="#CCCCCC"> use</font><font color="#E5E5E5"> contoso</font>

363
00:14:23,149 --> 00:14:28,149
University which is a sample application

364
00:14:25,730 --> 00:14:34,129
for Microsoft it's built on asp.net

365
00:14:28,149 --> 00:14:38,180
framework and so this is code pulse

366
00:14:34,129 --> 00:14:40,009
<font color="#E5E5E5">I've given code pulse the binaries and</font>

367
00:14:38,180 --> 00:14:42,170
the source code for<font color="#CCCCCC"> the contoso u</font>

368
00:14:40,009 --> 00:14:43,490
application you don't need the source

369
00:14:42,170 --> 00:14:44,959
code<font color="#E5E5E5"> but if you provide the source code</font>

370
00:14:43,490 --> 00:14:47,899
you'll have some additional<font color="#E5E5E5"> information</font>

371
00:14:44,959 --> 00:14:49,878
<font color="#E5E5E5">that I'll show you here on the left is</font>

372
00:14:47,899 --> 00:14:51,470
the application inventory<font color="#CCCCCC"> this</font><font color="#E5E5E5"> is all</font>

373
00:14:49,879 --> 00:14:53,990
how the application<font color="#CCCCCC"> is broken up into</font>

374
00:14:51,470 --> 00:14:55,670
<font color="#CCCCCC">different namespaces we also integrate</font>

375
00:14:53,990 --> 00:14:57,199
dependency check and so you can drill on

376
00:14:55,670 --> 00:14:59,569
<font color="#CCCCCC">that you can seeing any dependencies</font>

377
00:14:57,199 --> 00:15:01,579
that<font color="#CCCCCC"> this application</font><font color="#E5E5E5"> makes use of that</font>

378
00:14:59,569 --> 00:15:03,170
can<font color="#E5E5E5"> be used full for penetration</font><font color="#CCCCCC"> testers</font>

379
00:15:01,579 --> 00:15:05,300
<font color="#E5E5E5">to then try and exploit those</font>

380
00:15:03,170 --> 00:15:07,099
vulnerabilities like the<font color="#E5E5E5"> Apache struts</font>

381
00:15:05,300 --> 00:15:08,779
or some other vulnerability that is

382
00:15:07,100 --> 00:15:12,279
known as a pen tester you can go in

383
00:15:08,779 --> 00:15:16,100
there<font color="#CCCCCC"> and try and exploit that</font>

384
00:15:12,279 --> 00:15:18,319
so here<font color="#E5E5E5"> I've highlighted the main</font>

385
00:15:16,100 --> 00:15:19,579
package for contoso<font color="#E5E5E5"> University and you</font>

386
00:15:18,319 --> 00:15:21,050
can see you know again all these boxes

387
00:15:19,579 --> 00:15:22,729
<font color="#E5E5E5">are all the methods and they're grouped</font>

388
00:15:21,050 --> 00:15:24,258
by the<font color="#E5E5E5"> where they are</font><font color="#CCCCCC"> on the application</font>

389
00:15:22,730 --> 00:15:26,060
<font color="#E5E5E5">you see this whole box here is all</font>

390
00:15:24,259 --> 00:15:28,250
migration classes so that's<font color="#CCCCCC"> probably not</font>

391
00:15:26,060 --> 00:15:30,229
of<font color="#CCCCCC"> interest</font><font color="#E5E5E5"> since</font><font color="#CCCCCC"> it's not something</font>

392
00:15:28,250 --> 00:15:34,490
<font color="#E5E5E5">that can probably be touched from the</font>

393
00:15:30,230 --> 00:15:36,860
outside<font color="#CCCCCC"> some</font><font color="#E5E5E5"> stuff getting cut off</font><font color="#CCCCCC"> again</font>

394
00:15:34,490 --> 00:15:39,199
but and then<font color="#E5E5E5"> you see here that these</font>

395
00:15:36,860 --> 00:15:41,810
little<font color="#E5E5E5"> icons this indicates what</font><font color="#CCCCCC"> we've</font>

396
00:15:39,199 --> 00:15:43,099
<font color="#E5E5E5">identified</font><font color="#CCCCCC"> as the attack surface</font><font color="#E5E5E5"> so this</font>

397
00:15:41,810 --> 00:15:44,149
is utilizing<font color="#E5E5E5"> the other two</font><font color="#CCCCCC"> loaves</font>

398
00:15:43,100 --> 00:15:46,910
talking about the attack surface

399
00:15:44,149 --> 00:15:48,709
detector<font color="#E5E5E5"> and so you can highlight what</font>

400
00:15:46,910 --> 00:15:50,839
are the entry points we're open windows

401
00:15:48,709 --> 00:15:58,430
<font color="#CCCCCC">for this application that attacker can</font>

402
00:15:50,839 --> 00:16:02,540
get into all right so I'm going<font color="#CCCCCC"> to now</font>

403
00:15:58,430 --> 00:16:03,949
instrument the application and code

404
00:16:02,540 --> 00:16:05,719
false is saying you know do you want to

405
00:16:03,949 --> 00:16:08,189
associate<font color="#E5E5E5"> it with this particular</font>

406
00:16:05,720 --> 00:16:14,129
project<font color="#E5E5E5"> I've gone and</font>

407
00:16:08,190 --> 00:16:22,069
did that and just gonna<font color="#E5E5E5"> bring up browser</font>

408
00:16:14,129 --> 00:16:22,069
here<font color="#E5E5E5"> all right</font>

409
00:16:24,000 --> 00:16:30,130
let me get rid<font color="#E5E5E5"> of let's focus on</font><font color="#CCCCCC"> just</font>

410
00:16:26,860 --> 00:16:31,870
<font color="#CCCCCC">the controller package which primarily</font>

411
00:16:30,130 --> 00:16:34,050
is<font color="#E5E5E5"> the attack surface for this</font>

412
00:16:31,870 --> 00:16:34,050
application

413
00:16:38,890 --> 00:16:45,250
so<font color="#CCCCCC"> IAS is gonna wake up</font><font color="#E5E5E5"> here and as the</font>

414
00:16:43,750 --> 00:16:47,020
application<font color="#E5E5E5"> is loaded you'll see some</font>

415
00:16:45,250 --> 00:16:49,270
<font color="#E5E5E5">things highlight in real time so you</font>

416
00:16:47,020 --> 00:16:52,870
know we<font color="#CCCCCC"> just we just</font><font color="#E5E5E5"> hit some methods</font>

417
00:16:49,270 --> 00:16:54,579
here and this is the the home controller

418
00:16:52,870 --> 00:16:56,190
index<font color="#CCCCCC"> method</font><font color="#E5E5E5"> so this</font><font color="#CCCCCC"> particular</font>

419
00:16:54,580 --> 00:17:00,370
application<font color="#CCCCCC"> you</font><font color="#E5E5E5"> can create the</font>

420
00:16:56,190 --> 00:17:01,780
<font color="#CCCCCC">departments and instructors and students</font>

421
00:17:00,370 --> 00:17:02,890
you can add and<font color="#CCCCCC"> delete and stuff like</font>

422
00:17:01,780 --> 00:17:04,899
that so<font color="#CCCCCC"> as I interact with the</font>

423
00:17:02,890 --> 00:17:10,450
application<font color="#E5E5E5"> in real time you'll see</font>

424
00:17:04,900 --> 00:17:12,250
<font color="#E5E5E5">things start to</font><font color="#CCCCCC"> highlight I'm actually</font>

425
00:17:10,450 --> 00:17:18,000
going to start a recording<font color="#E5E5E5"> we'll call</font>

426
00:17:12,250 --> 00:17:18,000
this manual

427
00:17:22,560 --> 00:17:27,210
so I'm<font color="#CCCCCC"> gonna look at the</font><font color="#E5E5E5"> the courses and</font>

428
00:17:25,050 --> 00:17:30,210
you'll see here<font color="#E5E5E5"> this this kind of</font>

429
00:17:27,210 --> 00:17:34,110
represents all of<font color="#CCCCCC"> the courses methods</font>

430
00:17:30,210 --> 00:17:36,750
<font color="#E5E5E5">and as I start interacting with this</font>

431
00:17:34,110 --> 00:17:38,280
application<font color="#CCCCCC"> I</font><font color="#E5E5E5"> can you'll see the</font>

432
00:17:36,750 --> 00:17:41,190
<font color="#E5E5E5">coverage start improving so we're gonna</font>

433
00:17:38,280 --> 00:17:44,820
add a new course<font color="#E5E5E5"> to this College</font><font color="#CCCCCC"> called</font>

434
00:17:41,190 --> 00:17:47,760
<font color="#CCCCCC">app sec</font><font color="#E5E5E5"> it's a three credit course under</font>

435
00:17:44,820 --> 00:17:49,879
the<font color="#CCCCCC"> computer science department</font><font color="#E5E5E5"> and boom</font>

436
00:17:47,760 --> 00:17:53,660
so now I've hit<font color="#CCCCCC"> some of</font><font color="#E5E5E5"> those methods</font>

437
00:17:49,880 --> 00:17:55,950
<font color="#CCCCCC">we're gonna go in and let's change the</font>

438
00:17:53,660 --> 00:17:59,640
<font color="#CCCCCC">Edit it we'll make it a four credit</font>

439
00:17:55,950 --> 00:18:03,990
class instead<font color="#CCCCCC"> of three</font><font color="#E5E5E5"> and let's get rid</font>

440
00:17:59,640 --> 00:18:05,840
<font color="#CCCCCC">of calculus</font><font color="#E5E5E5"> that wasn't fun</font><font color="#CCCCCC"> all right so</font>

441
00:18:03,990 --> 00:18:10,110
now we're<font color="#E5E5E5"> getting some more coverage I</font>

442
00:18:05,840 --> 00:18:12,870
<font color="#CCCCCC">could look at the details so pretty good</font>

443
00:18:10,110 --> 00:18:15,959
<font color="#E5E5E5">here so now we we've covered</font><font color="#CCCCCC"> just about</font>

444
00:18:12,870 --> 00:18:18,870
<font color="#E5E5E5">all</font><font color="#CCCCCC"> of the methods</font><font color="#E5E5E5"> although we missed</font>

445
00:18:15,960 --> 00:18:21,300
one<font color="#CCCCCC"> and</font><font color="#E5E5E5"> that's the update course credits</font>

446
00:18:18,870 --> 00:18:22,679
method<font color="#E5E5E5"> and this is this I didn't put it</font>

447
00:18:21,300 --> 00:18:24,680
in<font color="#E5E5E5"> here this is</font><font color="#CCCCCC"> from the Microsoft</font>

448
00:18:22,680 --> 00:18:28,580
application this is<font color="#E5E5E5"> an unlinked endpoint</font>

449
00:18:24,680 --> 00:18:32,820
<font color="#CCCCCC">that you won't be able</font><font color="#E5E5E5"> to find just by</font>

450
00:18:28,580 --> 00:18:34,740
<font color="#E5E5E5">navigating the application so I could</font>

451
00:18:32,820 --> 00:18:42,110
actually go in<font color="#CCCCCC"> here and</font><font color="#E5E5E5"> then because I</font>

452
00:18:34,740 --> 00:18:45,390
know it's called update<font color="#E5E5E5"> course credits</font>

453
00:18:42,110 --> 00:18:47,280
so<font color="#CCCCCC"> you see some</font><font color="#E5E5E5"> index there this</font>

454
00:18:45,390 --> 00:18:49,110
basically allows you to change<font color="#E5E5E5"> the</font>

455
00:18:47,280 --> 00:18:54,139
number<font color="#E5E5E5"> of credits you</font><font color="#CCCCCC"> can</font><font color="#E5E5E5"> multiply it by</font>

456
00:18:49,110 --> 00:18:57,060
two<font color="#E5E5E5"> now I've gotten full code coverage</font>

457
00:18:54,140 --> 00:18:58,740
although<font color="#E5E5E5"> that's just saying at the</font>

458
00:18:57,060 --> 00:19:03,120
method level<font color="#CCCCCC"> we now have the ability to</font>

459
00:18:58,740 --> 00:19:05,420
go<font color="#CCCCCC"> into the line level</font><font color="#E5E5E5"> information</font><font color="#CCCCCC"> so</font>

460
00:19:03,120 --> 00:19:05,419
let<font color="#E5E5E5"> me</font>

461
00:19:09,270 --> 00:19:12,720
look at the

462
00:19:13,950 --> 00:19:19,860
the<font color="#E5E5E5"> Edit method so this is to edit a</font>

463
00:19:17,700 --> 00:19:22,560
<font color="#CCCCCC">particular course</font>

464
00:19:19,860 --> 00:19:24,510
you see we hit some lines<font color="#CCCCCC"> here but</font><font color="#E5E5E5"> we</font>

465
00:19:22,560 --> 00:19:28,520
<font color="#CCCCCC">got five out of seven</font><font color="#E5E5E5"> statements so</font>

466
00:19:24,510 --> 00:19:28,520
let's try<font color="#E5E5E5"> and</font><font color="#CCCCCC"> prove on that so we see</font>

467
00:19:32,060 --> 00:19:40,590
<font color="#E5E5E5">courses and edit so you can see up here</font>

468
00:19:38,550 --> 00:19:42,960
it takes<font color="#E5E5E5"> in parameter which</font><font color="#CCCCCC"> is the the</font>

469
00:19:40,590 --> 00:19:45,659
ID which is<font color="#E5E5E5"> what it's looking</font><font color="#CCCCCC"> for here</font>

470
00:19:42,960 --> 00:19:47,970
<font color="#E5E5E5">now if it doesn't find the ID</font><font color="#CCCCCC"> it's gonna</font>

471
00:19:45,660 --> 00:19:51,870
go through different<font color="#E5E5E5"> code path so if I</font>

472
00:19:47,970 --> 00:19:53,880
put in<font color="#CCCCCC"> one thousand which I know</font><font color="#E5E5E5"> isn't</font>

473
00:19:51,870 --> 00:19:55,139
an ID<font color="#E5E5E5"> that's gonna come up</font><font color="#CCCCCC"> as null so</font>

474
00:19:53,880 --> 00:19:57,180
now we're entering<font color="#E5E5E5"> different parts of</font>

475
00:19:55,140 --> 00:19:59,220
the application<font color="#E5E5E5"> and it's this</font><font color="#CCCCCC"> is an own</font>

476
00:19:57,180 --> 00:20:03,660
it's going to throw<font color="#E5E5E5"> an</font><font color="#CCCCCC"> error saying</font><font color="#E5E5E5"> they</font>

477
00:19:59,220 --> 00:20:05,430
<font color="#E5E5E5">couldn't find that if I put in null</font>

478
00:20:03,660 --> 00:20:07,740
<font color="#E5E5E5">you're gonna see that it's gonna try and</font>

479
00:20:05,430 --> 00:20:09,060
find that ID and it's not<font color="#E5E5E5"> gonna find it</font>

480
00:20:07,740 --> 00:20:10,770
and<font color="#E5E5E5"> then in real time you'll see that</font>

481
00:20:09,060 --> 00:20:13,159
that<font color="#E5E5E5"> information gets highlighted</font><font color="#CCCCCC"> in the</font>

482
00:20:10,770 --> 00:20:13,160
source code

483
00:20:19,340 --> 00:20:28,820
so let's stop this<font color="#CCCCCC"> recording and start</font>

484
00:20:25,190 --> 00:20:32,230
<font color="#E5E5E5">another one where this time</font><font color="#CCCCCC"> I'm going</font><font color="#E5E5E5"> to</font>

485
00:20:28,820 --> 00:20:32,230
<font color="#E5E5E5">run</font><font color="#CCCCCC"> the app against the</font><font color="#E5E5E5"> application</font>

486
00:20:39,230 --> 00:20:45,320
so I<font color="#CCCCCC"> haves a party set up</font><font color="#E5E5E5"> to connect to</font>

487
00:20:43,580 --> 00:20:51,590
this particular<font color="#CCCCCC"> Apple</font><font color="#E5E5E5"> and we're gonna</font>

488
00:20:45,320 --> 00:20:53,299
spider it so you see that<font color="#E5E5E5"> you know zap</font>

489
00:20:51,590 --> 00:20:57,129
is going through<font color="#CCCCCC"> its</font><font color="#E5E5E5"> spidering process a</font>

490
00:20:53,299 --> 00:20:57,129
whole<font color="#E5E5E5"> bunch of boxes are lighting up and</font>

491
00:20:58,059 --> 00:21:01,850
you know again<font color="#CCCCCC"> you</font><font color="#E5E5E5"> can</font><font color="#CCCCCC"> see in real time</font>

492
00:20:59,960 --> 00:21:05,269
<font color="#CCCCCC">how much</font><font color="#E5E5E5"> coverage you're getting and</font>

493
00:21:01,850 --> 00:21:11,719
once that's<font color="#E5E5E5"> done just</font><font color="#CCCCCC"> about done now I</font>

494
00:21:05,269 --> 00:21:14,799
can stop<font color="#E5E5E5"> that recording</font><font color="#CCCCCC"> and now compare</font>

495
00:21:11,720 --> 00:21:17,389
<font color="#CCCCCC">that to my manual scan that</font><font color="#E5E5E5"> was done and</font>

496
00:21:14,799 --> 00:21:20,690
<font color="#E5E5E5">you see is</font><font color="#CCCCCC"> that you knows that found a</font>

497
00:21:17,389 --> 00:21:24,229
lot<font color="#E5E5E5"> of things but it wasn't</font><font color="#CCCCCC"> able to find</font>

498
00:21:20,690 --> 00:21:26,269
that unlinked<font color="#E5E5E5"> end point</font><font color="#CCCCCC"> the update</font>

499
00:21:24,230 --> 00:21:33,740
course credit that<font color="#E5E5E5"> was found during the</font>

500
00:21:26,269 --> 00:21:35,539
the manual review using<font color="#E5E5E5"> the tool all</font>

501
00:21:33,740 --> 00:21:37,340
<font color="#E5E5E5">right so that's that</font><font color="#CCCCCC"> was code pulse now</font>

502
00:21:35,539 --> 00:21:38,899
gonna<font color="#E5E5E5"> switch over</font><font color="#CCCCCC"> to the attack surface</font>

503
00:21:37,340 --> 00:21:39,980
detector which you start a<font color="#CCCCCC"> little bit in</font>

504
00:21:38,899 --> 00:21:42,408
code pulse where you're able to

505
00:21:39,980 --> 00:21:45,230
highlight the attack<font color="#CCCCCC"> surface part of the</font>

506
00:21:42,409 --> 00:21:48,950
<font color="#E5E5E5">application</font><font color="#CCCCCC"> so the problem that</font><font color="#E5E5E5"> we're</font>

507
00:21:45,230 --> 00:21:52,000
looking<font color="#E5E5E5"> to identify is to improve</font><font color="#CCCCCC"> the</font>

508
00:21:48,950 --> 00:21:54,830
attack surface<font color="#CCCCCC"> you know particularly the</font>

509
00:21:52,000 --> 00:21:57,019
endpoints that are undiscoverable<font color="#E5E5E5"> by</font>

510
00:21:54,830 --> 00:21:58,490
dynamic tools<font color="#CCCCCC"> unless you're</font><font color="#E5E5E5"> using brute</font>

511
00:21:57,019 --> 00:22:00,620
<font color="#E5E5E5">forcing or if you're going through and</font>

512
00:21:58,490 --> 00:22:02,809
<font color="#E5E5E5">looking at the source code</font><font color="#CCCCCC"> so we have an</font>

513
00:22:00,620 --> 00:22:05,389
open<font color="#CCCCCC"> source solution that will help</font>

514
00:22:02,809 --> 00:22:07,789
<font color="#E5E5E5">identify the attack surface and that can</font>

515
00:22:05,389 --> 00:22:11,870
be<font color="#E5E5E5"> used to proceed tools like zap and</font>

516
00:22:07,789 --> 00:22:13,158
burp so it helps to abbreviate the

517
00:22:11,870 --> 00:22:14,840
testing process<font color="#E5E5E5"> again you don't have to</font>

518
00:22:13,159 --> 00:22:16,970
do brute forcing<font color="#E5E5E5"> you don't have to go</font>

519
00:22:14,840 --> 00:22:18,949
through<font color="#CCCCCC"> a manual code review it'll help</font>

520
00:22:16,970 --> 00:22:21,049
discover unlinked<font color="#E5E5E5"> endpoints so just like</font>

521
00:22:18,950 --> 00:22:22,519
we saw in that sample application for

522
00:22:21,049 --> 00:22:25,070
Microsoft<font color="#E5E5E5"> it has an unlined</font><font color="#CCCCCC"> end point</font>

523
00:22:22,519 --> 00:22:29,000
<font color="#E5E5E5">that it would be extremely</font><font color="#CCCCCC"> difficult</font><font color="#E5E5E5"> to</font>

524
00:22:25,070 --> 00:22:30,918
find with other means<font color="#E5E5E5"> and also optional</font>

525
00:22:29,000 --> 00:22:32,179
parameters like if you have a debug

526
00:22:30,919 --> 00:22:34,279
parameter<font color="#E5E5E5"> that's being added</font><font color="#CCCCCC"> to the</font>

527
00:22:32,179 --> 00:22:36,019
<font color="#E5E5E5">application</font><font color="#CCCCCC"> you'd be able</font><font color="#E5E5E5"> to see that as</font>

528
00:22:34,279 --> 00:22:37,909
<font color="#E5E5E5">well as the data types associated</font><font color="#CCCCCC"> with</font>

529
00:22:36,019 --> 00:22:39,230
it so<font color="#E5E5E5"> just by running the attack surface</font>

530
00:22:37,909 --> 00:22:41,480
detector you get all that<font color="#E5E5E5"> information</font>

531
00:22:39,230 --> 00:22:43,370
<font color="#E5E5E5">about the attack surface that can</font><font color="#CCCCCC"> then</font>

532
00:22:41,480 --> 00:22:46,610
<font color="#CCCCCC">be used</font><font color="#E5E5E5"> to</font><font color="#CCCCCC"> proceed tools like zap</font><font color="#E5E5E5"> and</font>

533
00:22:43,370 --> 00:22:48,590
burp with the attack surface there's

534
00:22:46,610 --> 00:22:52,159
<font color="#E5E5E5">plugins available for</font><font color="#CCCCCC"> both of</font><font color="#E5E5E5"> those</font>

535
00:22:48,590 --> 00:22:55,040
tools<font color="#E5E5E5"> and they can also take a look</font>

536
00:22:52,160 --> 00:22:56,600
<font color="#E5E5E5">compare different applications</font><font color="#CCCCCC"> different</font>

537
00:22:55,040 --> 00:22:58,040
versions of<font color="#CCCCCC"> applications to</font><font color="#E5E5E5"> see how that</font>

538
00:22:56,600 --> 00:23:03,199
application<font color="#CCCCCC"> has changed between</font>

539
00:22:58,040 --> 00:23:05,180
different parts<font color="#E5E5E5"> so</font><font color="#CCCCCC"> how it</font><font color="#E5E5E5"> works</font>

540
00:23:03,200 --> 00:23:07,610
it analyzes the source<font color="#CCCCCC"> code</font><font color="#E5E5E5"> the source</font>

541
00:23:05,180 --> 00:23:09,860
<font color="#E5E5E5">code is required</font><font color="#CCCCCC"> and from</font><font color="#E5E5E5"> that is able</font>

542
00:23:07,610 --> 00:23:11,600
<font color="#CCCCCC">to figure</font><font color="#E5E5E5"> out all of the</font><font color="#CCCCCC"> endpoints and</font>

543
00:23:09,860 --> 00:23:13,510
<font color="#E5E5E5">the parsing routes for the application</font>

544
00:23:11,600 --> 00:23:16,280
and the parameters that are<font color="#CCCCCC"> available</font>

545
00:23:13,510 --> 00:23:18,560
these are supported frameworks<font color="#E5E5E5"> languages</font>

546
00:23:16,280 --> 00:23:20,899
and frameworks so net Java Python Ruby

547
00:23:18,560 --> 00:23:21,950
<font color="#E5E5E5">and in his framework dependent so these</font>

548
00:23:20,900 --> 00:23:27,020
are the frameworks that are currently

549
00:23:21,950 --> 00:23:29,600
supported it is available<font color="#E5E5E5"> today in the</font>

550
00:23:27,020 --> 00:23:31,580
<font color="#E5E5E5">iOS app and verb</font><font color="#CCCCCC"> suite marketplace so</font>

551
00:23:29,600 --> 00:23:34,129
right from<font color="#CCCCCC"> within</font><font color="#E5E5E5"> those tools you can go</font>

552
00:23:31,580 --> 00:23:37,699
in and<font color="#CCCCCC"> and add this</font><font color="#E5E5E5"> plug-in and improve</font>

553
00:23:34,130 --> 00:23:40,670
your attack surface detection once it's

554
00:23:37,700 --> 00:23:43,310
installed this<font color="#E5E5E5"> is looking at burp you'll</font>

555
00:23:40,670 --> 00:23:44,810
have a new tab within burp and zap that

556
00:23:43,310 --> 00:23:47,929
called the attack surface detector and

557
00:23:44,810 --> 00:23:51,500
then there<font color="#CCCCCC"> you can you know tell it</font><font color="#E5E5E5"> give</font>

558
00:23:47,930 --> 00:23:52,670
<font color="#E5E5E5">it a zip file of your source code if you</font>

559
00:23:51,500 --> 00:23:56,540
want<font color="#CCCCCC"> to compare</font><font color="#E5E5E5"> it</font><font color="#CCCCCC"> to another version</font>

560
00:23:52,670 --> 00:24:00,140
you can<font color="#E5E5E5"> give that here what you get from</font>

561
00:23:56,540 --> 00:24:02,210
that<font color="#E5E5E5"> is a list of the endpoints</font><font color="#CCCCCC"> this is</font>

562
00:24:00,140 --> 00:24:04,070
again<font color="#E5E5E5"> using the same</font><font color="#CCCCCC"> content University</font>

563
00:24:02,210 --> 00:24:05,210
application<font color="#E5E5E5"> the number of parameters</font>

564
00:24:04,070 --> 00:24:07,340
that<font color="#E5E5E5"> were detected</font><font color="#CCCCCC"> and whether was it</font>

565
00:24:05,210 --> 00:24:09,800
get her post method<font color="#E5E5E5"> and whether it was</font>

566
00:24:07,340 --> 00:24:12,620
changed<font color="#E5E5E5"> between the last version of it</font>

567
00:24:09,800 --> 00:24:15,409
and then on<font color="#E5E5E5"> the bottom you</font><font color="#CCCCCC"> can get</font>

568
00:24:12,620 --> 00:24:18,560
details<font color="#CCCCCC"> about the particular endpoint I</font>

569
00:24:15,410 --> 00:24:21,830
<font color="#E5E5E5">know this one was a new one we have</font>

570
00:24:18,560 --> 00:24:25,270
<font color="#E5E5E5">another example</font><font color="#CCCCCC"> where</font><font color="#E5E5E5"> the integer ID</font>

571
00:24:21,830 --> 00:24:28,070
<font color="#CCCCCC">datatype change from integer to string</font>

572
00:24:25,270 --> 00:24:31,910
another one where a debug parameter was

573
00:24:28,070 --> 00:24:34,580
added to the<font color="#CCCCCC"> endpoint and then all that</font>

574
00:24:31,910 --> 00:24:37,910
information can get fed into zapper<font color="#CCCCCC"> Bert</font>

575
00:24:34,580 --> 00:24:39,770
<font color="#E5E5E5">so it can improve</font><font color="#CCCCCC"> your site map and you</font>

576
00:24:37,910 --> 00:24:41,690
can<font color="#E5E5E5"> also see we have color coordinated</font>

577
00:24:39,770 --> 00:24:43,490
way of seeing you know<font color="#E5E5E5"> whether it was</font>

578
00:24:41,690 --> 00:24:45,170
detected by source code whether<font color="#E5E5E5"> it was</font>

579
00:24:43,490 --> 00:24:48,680
<font color="#E5E5E5">modified or whether it is new since</font><font color="#CCCCCC"> the</font>

580
00:24:45,170 --> 00:24:51,770
<font color="#CCCCCC">last scan so now this</font><font color="#E5E5E5"> allows</font><font color="#CCCCCC"> Birkins</font><font color="#E5E5E5"> app</font>

581
00:24:48,680 --> 00:24:54,350
to have a more intelligent<font color="#E5E5E5"> way of doing</font>

582
00:24:51,770 --> 00:24:55,490
its analysis since it's being told a lot

583
00:24:54,350 --> 00:24:58,280
<font color="#E5E5E5">more information than</font><font color="#CCCCCC"> it would</font><font color="#E5E5E5"> be</font><font color="#CCCCCC"> able</font>

584
00:24:55,490 --> 00:25:01,220
<font color="#E5E5E5">to discover otherwise so running this</font>

585
00:24:58,280 --> 00:25:03,920
against<font color="#CCCCCC"> contoso University there you</font>

586
00:25:01,220 --> 00:25:05,580
know there's more<font color="#CCCCCC"> after</font><font color="#E5E5E5"> going through</font>

587
00:25:03,920 --> 00:25:06,780
the attack surface detector there's more

588
00:25:05,580 --> 00:25:08,790
points that were<font color="#E5E5E5"> detected there's the</font>

589
00:25:06,780 --> 00:25:11,280
update course credits again that was the

590
00:25:08,790 --> 00:25:13,950
unlinked<font color="#E5E5E5"> end point that was found during</font>

591
00:25:11,280 --> 00:25:17,580
the<font color="#CCCCCC"> attack surface detector</font><font color="#E5E5E5"> there's</font><font color="#CCCCCC"> a</font>

592
00:25:13,950 --> 00:25:19,290
delete and edit<font color="#E5E5E5"> end</font><font color="#CCCCCC"> points that</font><font color="#E5E5E5"> weren't</font>

593
00:25:17,580 --> 00:25:21,090
detected<font color="#E5E5E5"> and that</font><font color="#CCCCCC"> was because</font><font color="#E5E5E5"> when I ran</font>

594
00:25:19,290 --> 00:25:22,800
this there was no<font color="#CCCCCC"> data that was already</font>

595
00:25:21,090 --> 00:25:25,199
<font color="#CCCCCC">part of the application so</font><font color="#E5E5E5"> those</font>

596
00:25:22,800 --> 00:25:30,419
<font color="#E5E5E5">endpoints weren't able to be discovered</font>

597
00:25:25,200 --> 00:25:32,520
by<font color="#CCCCCC"> zapper so looking</font><font color="#E5E5E5"> at a comparison</font>

598
00:25:30,420 --> 00:25:37,260
this is<font color="#E5E5E5"> a report</font><font color="#CCCCCC"> generator and byte verb</font>

599
00:25:32,520 --> 00:25:40,650
<font color="#CCCCCC">sweet you</font><font color="#E5E5E5"> can see you know we before the</font>

600
00:25:37,260 --> 00:25:42,510
<font color="#CCCCCC">preceding</font><font color="#E5E5E5"> visa the number of URLs</font><font color="#CCCCCC"> that</font>

601
00:25:40,650 --> 00:25:44,730
<font color="#E5E5E5">were detected</font><font color="#CCCCCC"> in</font><font color="#E5E5E5"> parameters and then</font>

602
00:25:42,510 --> 00:25:47,190
after just by<font color="#CCCCCC"> doing the proceeding we</font>

603
00:25:44,730 --> 00:25:49,320
were able<font color="#E5E5E5"> to improve</font><font color="#CCCCCC"> that and find a lot</font>

604
00:25:47,190 --> 00:25:53,360
<font color="#CCCCCC">more for a</font><font color="#E5E5E5"> lot more endpoints and</font>

605
00:25:49,320 --> 00:25:55,679
parameters<font color="#E5E5E5"> that now can be tested</font><font color="#CCCCCC"> and</font>

606
00:25:53,360 --> 00:25:59,790
then<font color="#E5E5E5"> bringing this back into code pulse</font>

607
00:25:55,680 --> 00:26:01,200
we were able<font color="#CCCCCC"> to take a look</font><font color="#E5E5E5"> you know</font>

608
00:25:59,790 --> 00:26:06,210
with and without the attack surface

609
00:26:01,200 --> 00:26:09,060
detector<font color="#E5E5E5"> so again the overlap is shown</font>

610
00:26:06,210 --> 00:26:11,100
in black and then<font color="#E5E5E5"> the things that were</font>

611
00:26:09,060 --> 00:26:13,409
discovered<font color="#CCCCCC"> after using the attack</font>

612
00:26:11,100 --> 00:26:16,050
surface detector are all shown in blue

613
00:26:13,410 --> 00:26:17,130
<font color="#CCCCCC">here so we're able</font><font color="#E5E5E5"> to visually show</font><font color="#CCCCCC"> that</font>

614
00:26:16,050 --> 00:26:21,990
you're able to improve<font color="#E5E5E5"> your code</font>

615
00:26:17,130 --> 00:26:24,960
coverage by using this<font color="#E5E5E5"> and also in code</font>

616
00:26:21,990 --> 00:26:27,030
pulse<font color="#E5E5E5"> you</font><font color="#CCCCCC"> can see a bar graph of the the</font>

617
00:26:24,960 --> 00:26:28,320
code<font color="#E5E5E5"> coverage and again looking at the</font>

618
00:26:27,030 --> 00:26:30,330
<font color="#E5E5E5">controllers which is the attack surface</font>

619
00:26:28,320 --> 00:26:33,300
before<font color="#CCCCCC"> the</font><font color="#E5E5E5"> attack surface detector</font>

620
00:26:30,330 --> 00:26:39,810
<font color="#E5E5E5">preceding got</font><font color="#CCCCCC"> 46%</font><font color="#E5E5E5"> and then after we were</font>

621
00:26:33,300 --> 00:26:42,149
off<font color="#E5E5E5"> to 75% this is a report</font><font color="#CCCCCC"> that</font><font color="#E5E5E5"> was</font>

622
00:26:39,810 --> 00:26:43,350
<font color="#CCCCCC">done for a more complex application so</font>

623
00:26:42,150 --> 00:26:46,560
contoso<font color="#CCCCCC"> university is pretty</font>

624
00:26:43,350 --> 00:26:49,620
<font color="#E5E5E5">straightforward</font><font color="#CCCCCC"> this was a proprietary</font>

625
00:26:46,560 --> 00:26:52,500
application that we ran burp against so

626
00:26:49,620 --> 00:26:54,209
this was just just using burp this is

627
00:26:52,500 --> 00:26:57,720
just using the attack surface detector

628
00:26:54,210 --> 00:26:59,550
<font color="#E5E5E5">to discover the attack surface and you</font>

629
00:26:57,720 --> 00:27:01,770
know we have found a<font color="#E5E5E5"> lot</font><font color="#CCCCCC"> more</font><font color="#E5E5E5"> and then</font>

630
00:26:59,550 --> 00:27:03,570
<font color="#E5E5E5">this last</font><font color="#CCCCCC"> one here is</font><font color="#E5E5E5"> first using the</font>

631
00:27:01,770 --> 00:27:07,820
attack surface detector and then going

632
00:27:03,570 --> 00:27:07,820
through the the<font color="#CCCCCC"> burps</font>

633
00:27:08,060 --> 00:27:11,520
discovery process and<font color="#E5E5E5"> what I was able to</font>

634
00:27:10,320 --> 00:27:12,929
find so<font color="#E5E5E5"> do you know the best way of</font>

635
00:27:11,520 --> 00:27:15,010
<font color="#E5E5E5">doing it is to first have the attack</font>

636
00:27:12,930 --> 00:27:16,960
surface detector integrated and

637
00:27:15,010 --> 00:27:22,320
through the<font color="#E5E5E5"> crawling and automated</font>

638
00:27:16,960 --> 00:27:22,320
scanning from from the dynamic tools

639
00:27:24,000 --> 00:27:30,790
lastly you know one of<font color="#E5E5E5"> the problems with</font>

640
00:27:27,910 --> 00:27:32,770
the<font color="#E5E5E5"> tool is a lot of times pen testers</font>

641
00:27:30,790 --> 00:27:35,950
don't<font color="#E5E5E5"> have direct access</font><font color="#CCCCCC"> to</font><font color="#E5E5E5"> the source</font>

642
00:27:32,770 --> 00:27:38,290
code<font color="#E5E5E5"> what we provided is a</font><font color="#CCCCCC"> command-line</font>

643
00:27:35,950 --> 00:27:40,630
<font color="#CCCCCC">interface that can</font><font color="#E5E5E5"> be used so that you</font>

644
00:27:38,290 --> 00:27:43,000
can give this to<font color="#E5E5E5"> the person that owns</font>

645
00:27:40,630 --> 00:27:46,030
the application they<font color="#CCCCCC"> can run this</font><font color="#E5E5E5"> CLI</font>

646
00:27:43,000 --> 00:27:47,920
tool against the application<font color="#CCCCCC"> and a JSON</font>

647
00:27:46,030 --> 00:27:49,840
file will get<font color="#CCCCCC"> generated that just lists</font>

648
00:27:47,920 --> 00:27:52,540
out<font color="#CCCCCC"> the</font><font color="#E5E5E5"> endpoints and</font><font color="#CCCCCC"> parameters that</font>

649
00:27:49,840 --> 00:27:53,970
<font color="#E5E5E5">can then get fed into</font><font color="#CCCCCC"> Berbers app and so</font>

650
00:27:52,540 --> 00:27:55,930
they don't<font color="#E5E5E5"> have to give you the</font>

651
00:27:53,970 --> 00:27:59,950
proprietary source code they can<font color="#E5E5E5"> just</font>

652
00:27:55,930 --> 00:28:01,420
give you this attack<font color="#E5E5E5"> surface discovery</font>

653
00:27:59,950 --> 00:28:09,610
file that<font color="#E5E5E5"> they can then</font><font color="#CCCCCC"> be used into</font>

654
00:28:01,420 --> 00:28:12,240
into the<font color="#CCCCCC"> Berkins</font><font color="#E5E5E5"> am I'm just</font><font color="#CCCCCC"> gonna wrap</font>

655
00:28:09,610 --> 00:28:15,280
up and<font color="#CCCCCC"> they'll take some questions</font><font color="#E5E5E5"> yeah</font>

656
00:28:12,240 --> 00:28:17,890
yeah this is<font color="#E5E5E5"> couple</font><font color="#CCCCCC"> more slides where to</font>

657
00:28:15,280 --> 00:28:19,660
learn<font color="#E5E5E5"> more about these projects code</font>

658
00:28:17,890 --> 00:28:21,970
plus<font color="#E5E5E5"> tax service detector both</font><font color="#CCCCCC"> ojas</font>

659
00:28:19,660 --> 00:28:24,550
projects<font color="#E5E5E5"> from there you can find</font><font color="#CCCCCC"> out all</font>

660
00:28:21,970 --> 00:28:26,890
<font color="#CCCCCC">kinds of information about them</font><font color="#E5E5E5"> there</font>

661
00:28:24,550 --> 00:28:29,470
the github repos the user guide<font color="#CCCCCC"> and</font>

662
00:28:26,890 --> 00:28:32,860
documentation they're all linkable<font color="#E5E5E5"> from</font>

663
00:28:29,470 --> 00:28:35,140
there<font color="#CCCCCC"> you</font><font color="#E5E5E5"> know we've talked about</font><font color="#CCCCCC"> OS app</font>

664
00:28:32,860 --> 00:28:36,909
and web goat and dependency check those

665
00:28:35,140 --> 00:28:39,160
are all really good<font color="#CCCCCC"> Alost tools that</font>

666
00:28:36,910 --> 00:28:40,780
were demonstrated<font color="#CCCCCC"> today or integrated</font>

667
00:28:39,160 --> 00:28:42,910
with the technology the contoso

668
00:28:40,780 --> 00:28:45,389
<font color="#CCCCCC">university application that i use for</font>

669
00:28:42,910 --> 00:28:48,640
the demonstration is shown here and

670
00:28:45,390 --> 00:28:51,970
finally<font color="#E5E5E5"> link to burp suite which was was</font>

671
00:28:48,640 --> 00:28:54,250
highlighted during<font color="#E5E5E5"> the demo and now I'll</font>

672
00:28:51,970 --> 00:28:56,110
take questions<font color="#E5E5E5"> I'm really interested in</font>

673
00:28:54,250 --> 00:28:59,020
any feedback<font color="#CCCCCC"> you guys have please reach</font>

674
00:28:56,110 --> 00:29:01,540
out to<font color="#CCCCCC"> me directly</font><font color="#E5E5E5"> we can</font><font color="#CCCCCC"> walk through a</font>

675
00:28:59,020 --> 00:29:03,400
demo<font color="#CCCCCC"> Matt took the Kodiaks booth we can</font>

676
00:29:01,540 --> 00:29:04,899
we can talk more really really

677
00:29:03,400 --> 00:29:07,530
<font color="#CCCCCC">interested in getting getting</font><font color="#E5E5E5"> feedback</font>

678
00:29:04,900 --> 00:29:07,530
from<font color="#CCCCCC"> community</font>

679
00:29:09,960 --> 00:29:13,730
ah Donnie's Mike

680
00:29:17,030 --> 00:29:23,049
so you mentioned<font color="#CCCCCC"> when you</font><font color="#E5E5E5"> need to</font><font color="#CCCCCC"> sort</font>

681
00:29:19,669 --> 00:29:28,789
<font color="#E5E5E5">culture to the surface detection</font>

682
00:29:23,049 --> 00:29:30,440
<font color="#CCCCCC">comedians for</font><font color="#E5E5E5"> Java just use a jar if the</font>

683
00:29:28,789 --> 00:29:46,220
jar file has a source<font color="#E5E5E5"> embedded in it</font>

684
00:29:30,440 --> 00:29:47,409
then that would<font color="#E5E5E5"> work yeah no that's a</font>

685
00:29:46,220 --> 00:29:49,520
<font color="#E5E5E5">good idea</font>

686
00:29:47,409 --> 00:29:51,350
yeah yeah no that's<font color="#CCCCCC"> a</font><font color="#E5E5E5"> good answer</font><font color="#CCCCCC"> good</font>

687
00:29:49,520 --> 00:29:53,330
feedback<font color="#CCCCCC"> yeah not now</font><font color="#E5E5E5"> not currently but</font>

688
00:29:51,350 --> 00:30:03,168
that's a that's<font color="#CCCCCC"> a</font><font color="#E5E5E5"> good idea</font><font color="#CCCCCC"> I'll make a</font>

689
00:29:53,330 --> 00:30:05,480
note<font color="#E5E5E5"> of that thank</font><font color="#CCCCCC"> you very</font><font color="#E5E5E5"> nice</font><font color="#CCCCCC"> you</font>

690
00:30:03,169 --> 00:30:08,390
<font color="#E5E5E5">have a question what is the benefit of</font>

691
00:30:05,480 --> 00:30:11,000
the<font color="#E5E5E5"> a dark surface detector if in the</font>

692
00:30:08,390 --> 00:30:17,600
<font color="#CCCCCC">end of the using of code pools you</font><font color="#E5E5E5"> will</font>

693
00:30:11,000 --> 00:30:19,730
find out all the entry points<font color="#E5E5E5"> the</font>

694
00:30:17,600 --> 00:30:22,969
applications<font color="#E5E5E5"> and you see on the code</font>

695
00:30:19,730 --> 00:30:25,010
pools<font color="#E5E5E5"> at those parts which</font><font color="#CCCCCC"> you are like</font>

696
00:30:22,970 --> 00:30:28,220
triggering<font color="#E5E5E5"> so you know that these are</font>

697
00:30:25,010 --> 00:30:30,530
<font color="#E5E5E5">entry points</font><font color="#CCCCCC"> so in the end of using you</font>

698
00:30:28,220 --> 00:30:32,270
will get all this information<font color="#CCCCCC"> why do we</font>

699
00:30:30,530 --> 00:30:36,408
need<font color="#E5E5E5"> the surface</font><font color="#CCCCCC"> yeah I mean</font><font color="#E5E5E5"> they're</font>

700
00:30:32,270 --> 00:30:38,179
<font color="#E5E5E5">complementary the detectors detect a</font>

701
00:30:36,409 --> 00:30:42,080
nice part about<font color="#CCCCCC"> that is</font><font color="#E5E5E5"> you can just</font>

702
00:30:38,179 --> 00:30:43,460
feed that<font color="#E5E5E5"> into zap and burp directly so</font>

703
00:30:42,080 --> 00:30:44,809
it's a little<font color="#E5E5E5"> bit more automated</font><font color="#CCCCCC"> in that</font>

704
00:30:43,460 --> 00:30:46,700
way<font color="#CCCCCC"> where code pulse it's more</font>

705
00:30:44,809 --> 00:30:48,500
interactive<font color="#CCCCCC"> and you're</font><font color="#E5E5E5"> exploring around</font>

706
00:30:46,700 --> 00:30:50,809
<font color="#E5E5E5">and trying to improve your coverage that</font>

707
00:30:48,500 --> 00:30:53,330
way and code<font color="#E5E5E5"> pulse does require that you</font>

708
00:30:50,809 --> 00:30:55,280
instrument the application in order<font color="#CCCCCC"> to</font>

709
00:30:53,330 --> 00:31:10,668
do that card<font color="#E5E5E5"> that got testing</font><font color="#CCCCCC"> coverage</font>

710
00:30:55,280 --> 00:31:12,918
which isn't so the first question<font color="#CCCCCC"> is if</font>

711
00:31:10,669 --> 00:31:14,299
you<font color="#E5E5E5"> notice like burp and</font><font color="#CCCCCC"> SAP they are</font>

712
00:31:12,919 --> 00:31:17,419
moving<font color="#E5E5E5"> towards continuous integration</font>

713
00:31:14,299 --> 00:31:19,639
continuous testing do you have any plans

714
00:31:17,419 --> 00:31:21,260
<font color="#E5E5E5">to move these two projects for a</font>

715
00:31:19,640 --> 00:31:22,789
continuous integration<font color="#CCCCCC"> sure that's a</font>

716
00:31:21,260 --> 00:31:24,450
good question<font color="#E5E5E5"> yes that's</font><font color="#CCCCCC"> probably</font><font color="#E5E5E5"> the</font>

717
00:31:22,789 --> 00:31:26,970
highest<font color="#E5E5E5"> thing</font>

718
00:31:24,450 --> 00:31:29,970
the<font color="#CCCCCC"> roadmap</font><font color="#E5E5E5"> is to fit better</font><font color="#CCCCCC"> within the</font>

719
00:31:26,970 --> 00:31:31,259
automated process<font color="#CCCCCC"> in CI process</font><font color="#E5E5E5"> the</font>

720
00:31:29,970 --> 00:31:36,090
attack surface detector is a little bit

721
00:31:31,259 --> 00:31:38,220
<font color="#E5E5E5">easier in that way</font><font color="#CCCCCC"> you know you can you</font>

722
00:31:36,090 --> 00:31:41,428
use that CLI tool<font color="#CCCCCC"> you know it's part</font><font color="#E5E5E5"> of</font>

723
00:31:38,220 --> 00:31:42,749
your CI process to show the<font color="#E5E5E5"> endpoints</font>

724
00:31:41,429 --> 00:31:44,489
<font color="#E5E5E5">and the differences</font><font color="#CCCCCC"> in</font><font color="#E5E5E5"> the end points</font>

725
00:31:42,749 --> 00:31:45,869
between<font color="#E5E5E5"> them and feed em into Burton's</font>

726
00:31:44,489 --> 00:31:47,850
<font color="#E5E5E5">app but we're</font><font color="#CCCCCC"> looking to make that a</font>

727
00:31:45,869 --> 00:31:49,559
<font color="#E5E5E5">little bit more seamless</font><font color="#CCCCCC"> and then</font>

728
00:31:47,850 --> 00:31:52,019
certainly<font color="#E5E5E5"> with code pulse as well right</font>

729
00:31:49,559 --> 00:31:57,658
now it's more hands-on interactive<font color="#E5E5E5"> and</font>

730
00:31:52,019 --> 00:31:59,730
we're looking<font color="#E5E5E5"> to make it work in you</font>

731
00:31:57,659 --> 00:32:01,769
<font color="#CCCCCC">mention about</font><font color="#E5E5E5"> there is a Department of</font>

732
00:31:59,730 --> 00:32:04,950
Homeland Security<font color="#E5E5E5"> funding for so</font><font color="#CCCCCC"> it's</font>

733
00:32:01,769 --> 00:32:06,179
<font color="#E5E5E5">that for both projects and Lister</font><font color="#CCCCCC"> Amy</font><font color="#E5E5E5"> if</font>

734
00:32:04,950 --> 00:32:08,460
you don't mind can<font color="#CCCCCC"> you let us know</font><font color="#E5E5E5"> the</font>

735
00:32:06,179 --> 00:32:10,919
<font color="#E5E5E5">scope is there any license restriction</font>

736
00:32:08,460 --> 00:32:17,220
for any companies to use or any kind of

737
00:32:10,919 --> 00:32:18,690
mess behind funded through the<font color="#E5E5E5"> partner</font>

738
00:32:17,220 --> 00:32:20,609
<font color="#E5E5E5">home security there our Science and</font>

739
00:32:18,690 --> 00:32:23,879
Technology<font color="#E5E5E5"> Directorate under the Cyber</font>

740
00:32:20,609 --> 00:32:25,168
Security Division<font color="#CCCCCC"> we all are working on</font>

741
00:32:23,879 --> 00:32:26,639
<font color="#E5E5E5">other projects as well so if you check</font>

742
00:32:25,169 --> 00:32:28,440
<font color="#CCCCCC">out</font><font color="#E5E5E5"> the</font><font color="#CCCCCC"> secure decisions website you'll</font>

743
00:32:26,639 --> 00:32:29,758
see<font color="#E5E5E5"> some other other projects</font><font color="#CCCCCC"> that</font><font color="#E5E5E5"> we</font>

744
00:32:28,440 --> 00:32:32,399
have in the area<font color="#CCCCCC"> of application</font><font color="#E5E5E5"> security</font>

745
00:32:29,759 --> 00:32:34,889
<font color="#E5E5E5">both of these projects are open source</font>

746
00:32:32,399 --> 00:32:36,238
code pulses Akashi<font color="#E5E5E5"> license and the</font>

747
00:32:34,889 --> 00:32:45,299
attack services sector is<font color="#E5E5E5"> them is a</font>

748
00:32:36,239 --> 00:32:48,239
<font color="#E5E5E5">public license I was really interesting</font>

749
00:32:45,299 --> 00:32:50,690
set of<font color="#E5E5E5"> tools and I wanted to</font><font color="#CCCCCC"> ask what</font>

750
00:32:48,239 --> 00:32:53,220
<font color="#E5E5E5">kind of support would there be for</font>

751
00:32:50,690 --> 00:32:56,029
<font color="#E5E5E5">single page applications since there's</font>

752
00:32:53,220 --> 00:33:04,080
not so much crawling<font color="#E5E5E5"> that has to be done</font>

753
00:32:56,029 --> 00:33:05,669
yeah that's a good question<font color="#CCCCCC"> I you</font><font color="#E5E5E5"> know</font>

754
00:33:04,080 --> 00:33:08,070
for<font color="#E5E5E5"> code pulse you'd be able to see it</font>

755
00:33:05,669 --> 00:33:11,609
down to the the<font color="#E5E5E5"> method level so you'd be</font>

756
00:33:08,070 --> 00:33:13,139
able<font color="#CCCCCC"> to you know</font><font color="#E5E5E5"> look at more depth yeah</font>

757
00:33:11,609 --> 00:33:16,019
I'm not sure how the<font color="#E5E5E5"> attack surface</font>

758
00:33:13,139 --> 00:33:18,689
detector would work on single page apps

759
00:33:16,019 --> 00:33:21,210
but I know they're like for any web

760
00:33:18,690 --> 00:33:23,279
api's and all that stuff is all is all

761
00:33:21,210 --> 00:33:25,470
supported by by the attack service

762
00:33:23,279 --> 00:33:30,750
<font color="#E5E5E5">detector</font><font color="#CCCCCC"> so okay thank you</font>

763
00:33:25,470 --> 00:33:36,829
<font color="#CCCCCC">Thanks all right thank you everyone</font>

764
00:33:30,750 --> 00:33:36,829
[Applause]

