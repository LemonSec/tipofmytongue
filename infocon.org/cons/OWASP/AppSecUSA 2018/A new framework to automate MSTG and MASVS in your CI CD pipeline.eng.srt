1
00:00:00,260 --> 00:00:10,559
thank you yes all right<font color="#E5E5E5"> welcome</font>

2
00:00:07,560 --> 00:00:11,010
<font color="#E5E5E5">everybody</font><font color="#CCCCCC"> and thanks to us for inviting</font>

3
00:00:10,559 --> 00:00:15,268
me<font color="#E5E5E5"> here</font>

4
00:00:11,010 --> 00:00:18,660
well<font color="#CCCCCC"> dr. church's</font><font color="#E5E5E5"> your engineer in ing</font>

5
00:00:15,269 --> 00:00:22,948
<font color="#E5E5E5">and co-founder of a project called</font>

6
00:00:18,660 --> 00:00:24,810
IOT<font color="#CCCCCC"> sect that</font><font color="#E5E5E5"> you publish bigger for</font>

7
00:00:22,949 --> 00:00:28,460
different conferences such as<font color="#E5E5E5"> yeah</font><font color="#CCCCCC"> oh</font>

8
00:00:24,810 --> 00:00:32,009
what's<font color="#E5E5E5"> up Zack</font><font color="#CCCCCC"> blackhat their second and</font>

9
00:00:28,460 --> 00:00:33,239
yeah<font color="#E5E5E5"> my focus is mobile applications a</font>

10
00:00:32,009 --> 00:00:34,410
<font color="#E5E5E5">curio to measure like</font><font color="#CCCCCC"> will see during</font>

11
00:00:33,239 --> 00:00:38,099
the talk

12
00:00:34,410 --> 00:00:40,199
IOT security and yeah like everybody

13
00:00:38,100 --> 00:00:44,370
<font color="#E5E5E5">ting in this room I'm a builder</font><font color="#CCCCCC"> but also</font>

14
00:00:40,200 --> 00:00:48,899
breaker<font color="#E5E5E5"> so why does mobile security</font>

15
00:00:44,370 --> 00:00:52,530
matter<font color="#E5E5E5"> today</font><font color="#CCCCCC"> I think</font><font color="#E5E5E5"> you all know this</font>

16
00:00:48,899 --> 00:00:55,140
new<font color="#E5E5E5"> setting is from</font><font color="#CCCCCC"> August</font><font color="#E5E5E5"> 26 and yeah</font>

17
00:00:52,530 --> 00:00:58,469
it says that the<font color="#CCCCCC"> four</font><font color="#E5E5E5"> night Android app</font>

18
00:00:55,140 --> 00:01:00,840
lets hackers install malware on their

19
00:00:58,469 --> 00:01:04,080
device so<font color="#E5E5E5"> you can imagine</font><font color="#CCCCCC"> I work for ing</font>

20
00:01:00,840 --> 00:01:07,680
<font color="#E5E5E5">right a bank and you can imagine if</font><font color="#CCCCCC"> that</font>

21
00:01:04,080 --> 00:01:10,619
title says<font color="#CCCCCC"> critical</font><font color="#E5E5E5"> flow in</font><font color="#CCCCCC"> the ing up a</font>

22
00:01:07,680 --> 00:01:13,200
law allows malware on<font color="#CCCCCC"> your device then</font>

23
00:01:10,619 --> 00:01:17,780
everybody will delete<font color="#CCCCCC"> it up and I will</font>

24
00:01:13,200 --> 00:01:21,270
<font color="#CCCCCC">be fired directly my manager is there so</font>

25
00:01:17,780 --> 00:01:24,900
so but what was the problem in this<font color="#CCCCCC"> case</font>

26
00:01:21,270 --> 00:01:29,670
<font color="#CCCCCC">problem or feature let's say</font><font color="#E5E5E5"> the problem</font>

27
00:01:24,900 --> 00:01:32,340
<font color="#E5E5E5">was this line of code in the manifest</font>

28
00:01:29,670 --> 00:01:35,040
file Android manifest file so<font color="#CCCCCC"> right SMS</font>

29
00:01:32,340 --> 00:01:38,700
<font color="#E5E5E5">storage and it's a permission that Allah</font>

30
00:01:35,040 --> 00:01:40,530
allows you to write and read from<font color="#E5E5E5"> the</font>

31
00:01:38,700 --> 00:01:43,920
external<font color="#E5E5E5"> storage in the Android</font><font color="#CCCCCC"> device</font>

32
00:01:40,530 --> 00:01:45,750
<font color="#CCCCCC">so</font><font color="#E5E5E5"> every app can read and write in that</font>

33
00:01:43,920 --> 00:01:47,640
storage so<font color="#E5E5E5"> you can</font><font color="#CCCCCC"> imagine if you have a</font>

34
00:01:45,750 --> 00:01:50,399
<font color="#E5E5E5">malware on</font><font color="#CCCCCC"> your application can</font>

35
00:01:47,640 --> 00:01:53,009
overwrite in that case the fortnight up

36
00:01:50,399 --> 00:01:57,899
and installed malware on<font color="#CCCCCC"> your device so</font>

37
00:01:53,009 --> 00:02:01,079
if we consider<font color="#CCCCCC"> the agile as DLC when</font>

38
00:01:57,899 --> 00:02:02,729
should we that when is the best<font color="#CCCCCC"> where</font><font color="#E5E5E5"> is</font>

39
00:02:01,079 --> 00:02:05,179
the best place<font color="#CCCCCC"> to</font><font color="#E5E5E5"> detect</font><font color="#CCCCCC"> vulnerability</font>

40
00:02:02,729 --> 00:02:07,500
<font color="#E5E5E5">of course we want</font><font color="#CCCCCC"> to detect</font>

41
00:02:05,180 --> 00:02:09,840
vulnerabilities as soon as possible

42
00:02:07,500 --> 00:02:12,870
right<font color="#E5E5E5"> so during the requirements and</font>

43
00:02:09,840 --> 00:02:14,010
design<font color="#E5E5E5"> phase through</font><font color="#CCCCCC"> security</font>

44
00:02:12,870 --> 00:02:16,049
requirements

45
00:02:14,010 --> 00:02:18,720
<font color="#E5E5E5">secure design review and of course</font>

46
00:02:16,049 --> 00:02:22,040
<font color="#E5E5E5">threat model and in this case</font><font color="#CCCCCC"> is pretty</font>

47
00:02:18,720 --> 00:02:24,930
cheap<font color="#E5E5E5"> the earlier one bag of money there</font>

48
00:02:22,040 --> 00:02:27,209
<font color="#CCCCCC">if we run</font><font color="#E5E5E5"> the second</font><font color="#CCCCCC"> phase so code and</font>

49
00:02:24,930 --> 00:02:30,409
build<font color="#E5E5E5"> it's already more expensive right</font>

50
00:02:27,209 --> 00:02:32,129
and if we<font color="#E5E5E5"> take in consideration the</font>

51
00:02:30,409 --> 00:02:34,798
vulnerability of the<font color="#E5E5E5"> problem with the</font>

52
00:02:32,129 --> 00:02:37,200
<font color="#CCCCCC">four-night app forest principle maybe</font>

53
00:02:34,799 --> 00:02:38,640
wouldn't detect that problem right

54
00:02:37,200 --> 00:02:41,159
<font color="#E5E5E5">because it's not in the security</font>

55
00:02:38,640 --> 00:02:43,589
<font color="#CCCCCC">requirements is not in a threat model</font><font color="#E5E5E5"> so</font>

56
00:02:41,159 --> 00:02:45,569
it's fine right<font color="#E5E5E5"> but maybe if we</font><font color="#CCCCCC"> have</font>

57
00:02:43,590 --> 00:02:48,599
coding guidelines<font color="#CCCCCC"> yeah that will</font><font color="#E5E5E5"> be</font>

58
00:02:45,569 --> 00:02:51,780
easily<font color="#E5E5E5"> detected because</font><font color="#CCCCCC"> google says is</font>

59
00:02:48,599 --> 00:02:56,030
not safe at all to use that<font color="#CCCCCC"> if we go in</font>

60
00:02:51,780 --> 00:02:58,530
the turf face<font color="#CCCCCC"> maybe secure code</font><font color="#E5E5E5"> scan</font>

61
00:02:56,030 --> 00:03:01,650
wouldn't detect<font color="#E5E5E5"> maybe we'll raise a</font>

62
00:02:58,530 --> 00:03:04,500
warning<font color="#CCCCCC"> but</font><font color="#E5E5E5"> definitely a penetration</font>

63
00:03:01,650 --> 00:03:06,450
test will detect that that is a problem

64
00:03:04,500 --> 00:03:09,720
<font color="#E5E5E5">but of course is very very expensive</font>

65
00:03:06,450 --> 00:03:14,069
<font color="#CCCCCC">right and at the end of</font><font color="#E5E5E5"> course if we</font>

66
00:03:09,720 --> 00:03:15,180
detect in production<font color="#E5E5E5"> then yeah it's too</font>

67
00:03:14,069 --> 00:03:20,638
<font color="#E5E5E5">expensive</font><font color="#CCCCCC"> right</font>

68
00:03:15,180 --> 00:03:23,699
so why do ya mistakes happen mistakes

69
00:03:20,639 --> 00:03:25,829
happen because<font color="#E5E5E5"> yeah we</font><font color="#CCCCCC"> need a feature</font><font color="#E5E5E5"> we</font>

70
00:03:23,699 --> 00:03:29,060
need a new product<font color="#CCCCCC"> as soon</font><font color="#E5E5E5"> as possible</font>

71
00:03:25,829 --> 00:03:32,010
right<font color="#CCCCCC"> so</font><font color="#E5E5E5"> developers have pressure and</font>

72
00:03:29,060 --> 00:03:36,239
maybe security requirements are not

73
00:03:32,010 --> 00:03:38,069
followed or<font color="#CCCCCC"> not in place nor enforced or</font>

74
00:03:36,239 --> 00:03:42,680
there<font color="#E5E5E5"> is no</font><font color="#CCCCCC"> trap modeling session done</font>

75
00:03:38,069 --> 00:03:45,750
before deployment<font color="#CCCCCC"> and we still rely</font><font color="#E5E5E5"> on</font>

76
00:03:42,680 --> 00:03:52,199
<font color="#E5E5E5">SAS tools so with a lot</font><font color="#CCCCCC"> of false</font>

77
00:03:45,750 --> 00:03:55,620
positive and<font color="#E5E5E5"> also but mainly</font><font color="#CCCCCC"> DevOps do</font>

78
00:03:52,199 --> 00:03:58,010
not write security tests<font color="#E5E5E5"> right is there</font>

79
00:03:55,620 --> 00:04:00,359
at the box of<font color="#CCCCCC"> bright security test here</font>

80
00:03:58,010 --> 00:04:06,149
that's not true<font color="#E5E5E5"> it's my colleague</font>

81
00:04:00,359 --> 00:04:08,069
anyways so in mobile we have let's say

82
00:04:06,150 --> 00:04:10,650
two groups<font color="#E5E5E5"> if you consider the security</font>

83
00:04:08,069 --> 00:04:13,260
<font color="#E5E5E5">challenges</font><font color="#CCCCCC"> we have technical challenges</font>

84
00:04:10,650 --> 00:04:15,299
for<font color="#CCCCCC"> security engineers</font><font color="#E5E5E5"> because we have</font>

85
00:04:13,260 --> 00:04:16,949
<font color="#E5E5E5">different operating system clients</font><font color="#CCCCCC"> our</font>

86
00:04:15,299 --> 00:04:19,079
testing is<font color="#CCCCCC"> very important is</font><font color="#E5E5E5"> the biggest</font>

87
00:04:16,949 --> 00:04:22,860
part of the test<font color="#CCCCCC"> I</font><font color="#E5E5E5"> would say different</font>

88
00:04:19,079 --> 00:04:27,010
<font color="#E5E5E5">apps native hybrid web everything new</font>

89
00:04:22,860 --> 00:04:29,960
frameworks<font color="#CCCCCC"> different languages so sus2</font>

90
00:04:27,010 --> 00:04:33,680
<font color="#E5E5E5">do not support</font><font color="#CCCCCC"> right away new languages</font>

91
00:04:29,960 --> 00:04:37,609
<font color="#CCCCCC">if we think about</font><font color="#E5E5E5"> Kathleen</font><font color="#CCCCCC"> example and</font>

92
00:04:33,680 --> 00:04:39,590
different security controls right so if

93
00:04:37,610 --> 00:04:41,750
we speak about process challenges as

94
00:04:39,590 --> 00:04:43,460
security engineer what we want to do is

95
00:04:41,750 --> 00:04:46,040
actually provide security at the<font color="#CCCCCC"> vault</font>

96
00:04:43,460 --> 00:04:47,930
<font color="#E5E5E5">speed right we don't want to be there</font>

97
00:04:46,040 --> 00:04:54,500
two weeks testing a feature<font color="#E5E5E5"> that the</font>

98
00:04:47,930 --> 00:04:56,030
developer developed in half<font color="#E5E5E5"> day right</font><font color="#CCCCCC"> we</font>

99
00:04:54,500 --> 00:05:00,440
want to have developers understand

100
00:04:56,030 --> 00:05:03,559
security<font color="#CCCCCC"> and the tech mooner ability</font><font color="#E5E5E5"> in</font>

101
00:05:00,440 --> 00:05:06,050
early stage<font color="#E5E5E5"> at least the basic security</font>

102
00:05:03,560 --> 00:05:07,910
<font color="#E5E5E5">should</font><font color="#CCCCCC"> be covered</font><font color="#E5E5E5"> right away and of</font>

103
00:05:06,050 --> 00:05:11,450
course I'm also<font color="#E5E5E5"> a pen tester so I would</font>

104
00:05:07,910 --> 00:05:13,070
like<font color="#E5E5E5"> to focus on fun and serious stuff</font>

105
00:05:11,450 --> 00:05:15,919
when I do a pen test instead<font color="#CCCCCC"> of coding</font>

106
00:05:13,070 --> 00:05:20,360
everything<font color="#CCCCCC"> right so how can we improve</font>

107
00:05:15,919 --> 00:05:24,549
<font color="#CCCCCC">this so in this talk we're</font><font color="#E5E5E5"> going to see</font>

108
00:05:20,360 --> 00:05:27,770
how to<font color="#CCCCCC"> build</font><font color="#E5E5E5"> security integration tests</font>

109
00:05:24,550 --> 00:05:30,350
<font color="#E5E5E5">and embed this test of course in the CI</font>

110
00:05:27,770 --> 00:05:33,950
CD<font color="#E5E5E5"> so we have</font><font color="#CCCCCC"> different kind</font><font color="#E5E5E5"> of tests</font>

111
00:05:30,350 --> 00:05:36,590
<font color="#E5E5E5">right we have the testing you let's say</font>

112
00:05:33,950 --> 00:05:40,849
test-driven development<font color="#E5E5E5"> where the tests</font>

113
00:05:36,590 --> 00:05:43,750
are written before<font color="#CCCCCC"> coding and passing</font>

114
00:05:40,850 --> 00:05:46,880
the test is crucial right<font color="#CCCCCC"> or accepted</font>

115
00:05:43,750 --> 00:05:48,440
<font color="#CCCCCC">test-driven development where team</font>

116
00:05:46,880 --> 00:05:54,890
members collaborate also with other

117
00:05:48,440 --> 00:05:57,889
parts to write tests on a functionality

118
00:05:54,890 --> 00:05:59,240
<font color="#E5E5E5">and at the end we have BDD behavior</font>

119
00:05:57,889 --> 00:06:01,100
driven development we<font color="#E5E5E5"> are going to talk</font>

120
00:05:59,240 --> 00:06:03,320
<font color="#CCCCCC">about this where the tests are written</font>

121
00:06:01,100 --> 00:06:05,330
<font color="#E5E5E5">in</font><font color="#CCCCCC"> a</font><font color="#E5E5E5"> non-technical language that</font>

122
00:06:03,320 --> 00:06:07,580
everyone can understand<font color="#E5E5E5"> so we're going</font>

123
00:06:05,330 --> 00:06:11,109
<font color="#CCCCCC">to feel few gaps here in communication</font>

124
00:06:07,580 --> 00:06:15,740
between developers security<font color="#E5E5E5"> business and</font>

125
00:06:11,110 --> 00:06:17,470
it uses<font color="#E5E5E5"> language called gherkin yeah</font>

126
00:06:15,740 --> 00:06:21,639
because<font color="#E5E5E5"> what's the biggest problem</font><font color="#CCCCCC"> with</font>

127
00:06:17,470 --> 00:06:24,620
testing the biggest problem is

128
00:06:21,639 --> 00:06:27,680
misunderstanding right<font color="#E5E5E5"> so if a</font><font color="#CCCCCC"> writer a</font>

129
00:06:24,620 --> 00:06:29,660
developer<font color="#CCCCCC"> right</font><font color="#E5E5E5"> at writes a test maybe</font>

130
00:06:27,680 --> 00:06:32,180
it's a security<font color="#E5E5E5"> test but the security</font>

131
00:06:29,660 --> 00:06:34,419
<font color="#E5E5E5">engineer doesn't</font><font color="#CCCCCC"> understand</font><font color="#E5E5E5"> it doesn't</font>

132
00:06:32,180 --> 00:06:37,520
know it's already<font color="#E5E5E5"> there</font><font color="#CCCCCC"> so we want to</font>

133
00:06:34,419 --> 00:06:40,370
fill this<font color="#CCCCCC"> gap and the solution is yeah</font>

134
00:06:37,520 --> 00:06:42,799
BDD<font color="#E5E5E5"> BDD allows us to describe</font>

135
00:06:40,370 --> 00:06:46,120
the behavior<font color="#CCCCCC"> of our software</font><font color="#E5E5E5"> in a very</font>

136
00:06:42,800 --> 00:06:49,300
understandable language<font color="#E5E5E5"> so an example</font>

137
00:06:46,120 --> 00:06:52,970
<font color="#E5E5E5">this is just an example of BDD test</font>

138
00:06:49,300 --> 00:06:56,570
<font color="#CCCCCC">ability is dividing into let's</font><font color="#E5E5E5"> college</font>

139
00:06:52,970 --> 00:06:59,120
<font color="#E5E5E5">yeah</font><font color="#CCCCCC"> file a feature file</font><font color="#E5E5E5"> so the business</font>

140
00:06:56,570 --> 00:07:01,400
facing on my test<font color="#CCCCCC"> as you can see the</font>

141
00:06:59,120 --> 00:07:03,620
<font color="#E5E5E5">test is written in English Puri English</font>

142
00:07:01,400 --> 00:07:06,609
in<font color="#CCCCCC"> this case</font><font color="#E5E5E5"> I want to test coffee</font>

143
00:07:03,620 --> 00:07:10,910
<font color="#E5E5E5">machine so if there is one coughing the</font>

144
00:07:06,610 --> 00:07:13,520
in the Machine and<font color="#CCCCCC"> I deposit</font><font color="#E5E5E5"> one dollar</font>

145
00:07:10,910 --> 00:07:15,229
<font color="#E5E5E5">then I press the coffee button and I</font>

146
00:07:13,520 --> 00:07:17,240
should be served with a coffee<font color="#CCCCCC"> it's very</font>

147
00:07:15,229 --> 00:07:21,020
easy<font color="#CCCCCC"> very understandable right</font><font color="#E5E5E5"> the</font>

148
00:07:17,240 --> 00:07:23,630
technology facing is what<font color="#E5E5E5"> translates the</font>

149
00:07:21,020 --> 00:07:27,430
business facing in code right<font color="#E5E5E5"> in this</font>

150
00:07:23,630 --> 00:07:32,050
case we're using Ruby and as we can<font color="#CCCCCC"> see</font>

151
00:07:27,430 --> 00:07:35,210
<font color="#E5E5E5">the second function let's say the given</font>

152
00:07:32,050 --> 00:07:38,240
just initialize our machine with<font color="#E5E5E5"> one</font>

153
00:07:35,210 --> 00:07:41,359
<font color="#CCCCCC">element in it right</font><font color="#E5E5E5"> so ya YB didn't</font>

154
00:07:38,240 --> 00:07:43,840
security<font color="#E5E5E5"> because if you consider</font><font color="#CCCCCC"> yes</font>

155
00:07:41,360 --> 00:07:47,120
security<font color="#E5E5E5"> engineers developers and</font>

156
00:07:43,840 --> 00:07:49,760
business<font color="#E5E5E5"> what we have right now is</font>

157
00:07:47,120 --> 00:07:52,039
<font color="#E5E5E5">something like this right so secure</font>

158
00:07:49,760 --> 00:07:54,080
<font color="#E5E5E5">engineer speaks one language developers</font>

159
00:07:52,039 --> 00:07:55,900
another language maybe they can

160
00:07:54,080 --> 00:07:58,550
understand<font color="#CCCCCC"> each other somewhere their</font>

161
00:07:55,900 --> 00:08:02,500
business can understand anything they

162
00:07:58,550 --> 00:08:06,349
say right so with<font color="#E5E5E5"> BDD we fix</font>

163
00:08:02,500 --> 00:08:09,460
communication right business will still

164
00:08:06,349 --> 00:08:11,680
speak<font color="#E5E5E5"> money but</font><font color="#CCCCCC"> we'll understand</font><font color="#E5E5E5"> that</font>

165
00:08:09,460 --> 00:08:17,150
<font color="#CCCCCC">because we're going</font><font color="#E5E5E5"> to</font><font color="#CCCCCC"> use a</font>

166
00:08:11,680 --> 00:08:19,250
construction given<font color="#E5E5E5"> when then so and the</font>

167
00:08:17,150 --> 00:08:21,620
developers<font color="#E5E5E5"> will write the tests in the</font>

168
00:08:19,250 --> 00:08:26,210
<font color="#CCCCCC">same</font><font color="#E5E5E5"> language as the</font><font color="#CCCCCC"> security engineer</font>

169
00:08:21,620 --> 00:08:29,060
and we fix speed of course because if

170
00:08:26,210 --> 00:08:31,250
<font color="#E5E5E5">developers write security tests right</font>

171
00:08:29,060 --> 00:08:33,500
<font color="#E5E5E5">and</font><font color="#CCCCCC"> this tests are validated by the</font>

172
00:08:31,250 --> 00:08:36,770
security team then they can go to

173
00:08:33,500 --> 00:08:39,559
<font color="#E5E5E5">production much faster so how do we</font>

174
00:08:36,770 --> 00:08:41,260
write<font color="#E5E5E5"> this test the framework we're</font>

175
00:08:39,559 --> 00:08:45,410
<font color="#E5E5E5">going to use to</font><font color="#CCCCCC"> write</font><font color="#E5E5E5"> this test is</font>

176
00:08:41,260 --> 00:08:48,200
cucumber<font color="#CCCCCC"> we are the king of BDD because</font>

177
00:08:45,410 --> 00:08:50,780
it allows you to<font color="#E5E5E5"> write features like we</font>

178
00:08:48,200 --> 00:08:53,160
<font color="#CCCCCC">set so the business facing and steps use</font>

179
00:08:50,780 --> 00:08:56,149
<font color="#CCCCCC">in different type of languages so</font>

180
00:08:53,160 --> 00:08:59,519
be adopted by different<font color="#CCCCCC"> companies but</font>

181
00:08:56,149 --> 00:09:02,190
<font color="#CCCCCC">what we're on of</font><font color="#E5E5E5"> right is</font><font color="#CCCCCC"> mobile BDD</font>

182
00:08:59,519 --> 00:09:05,730
security tests<font color="#E5E5E5"> so in order to do that</font>

183
00:09:02,190 --> 00:09:08,370
<font color="#CCCCCC">first of all we</font><font color="#E5E5E5"> need to translate the</font>

184
00:09:05,730 --> 00:09:11,939
always mobile security testing guide<font color="#E5E5E5"> in</font>

185
00:09:08,370 --> 00:09:14,970
BDD<font color="#E5E5E5"> we</font><font color="#CCCCCC"> have spend the one of the</font><font color="#E5E5E5"> founder</font>

186
00:09:11,939 --> 00:09:17,209
there<font color="#CCCCCC"> so we want to do the mobile</font>

187
00:09:14,970 --> 00:09:20,879
<font color="#CCCCCC">security testing guide it's a set of</font>

188
00:09:17,209 --> 00:09:23,369
tests and yes<font color="#CCCCCC"> security checks</font><font color="#E5E5E5"> to test</font>

189
00:09:20,879 --> 00:09:25,259
the<font color="#CCCCCC"> security of your</font><font color="#E5E5E5"> app right and what</font>

190
00:09:23,370 --> 00:09:28,170
we want to<font color="#E5E5E5"> do we want to</font><font color="#CCCCCC"> translate these</font>

191
00:09:25,259 --> 00:09:31,589
tests in BDD tests<font color="#E5E5E5"> so we're going to</font>

192
00:09:28,170 --> 00:09:35,099
<font color="#E5E5E5">create the features and these steps to</font>

193
00:09:31,589 --> 00:09:37,350
be integrated in the CI CD and be

194
00:09:35,100 --> 00:09:40,139
executed on every<font color="#E5E5E5"> build let's say of</font>

195
00:09:37,350 --> 00:09:44,189
your mobile<font color="#CCCCCC"> app right but in order to</font><font color="#E5E5E5"> do</font>

196
00:09:40,139 --> 00:09:45,959
that we need to<font color="#E5E5E5"> automate DUI so one part</font>

197
00:09:44,189 --> 00:09:47,910
of<font color="#E5E5E5"> the mobile</font><font color="#CCCCCC"> Siri</font><font color="#E5E5E5"> test is the</font>

198
00:09:45,959 --> 00:09:51,779
<font color="#CCCCCC">client-side</font><font color="#E5E5E5"> testing right if we don't</font>

199
00:09:47,910 --> 00:09:55,740
<font color="#E5E5E5">have to me do</font><font color="#CCCCCC"> I we cannot access all the</font>

200
00:09:51,779 --> 00:09:57,389
code<font color="#E5E5E5"> right so we're going to use in the</font>

201
00:09:55,740 --> 00:09:59,250
example we're going<font color="#E5E5E5"> to use calabash</font>

202
00:09:57,389 --> 00:10:02,029
that's just a UI automation framework

203
00:09:59,250 --> 00:10:04,680
but this test<font color="#E5E5E5"> can be written using other</font>

204
00:10:02,029 --> 00:10:09,720
<font color="#E5E5E5">you automation frameworks such as a</font>

205
00:10:04,680 --> 00:10:11,729
<font color="#E5E5E5">human example right</font><font color="#CCCCCC"> we can we're going</font>

206
00:10:09,720 --> 00:10:13,290
to integrate<font color="#E5E5E5"> a course because we want to</font>

207
00:10:11,730 --> 00:10:16,110
<font color="#E5E5E5">write security that's not UI security</font>

208
00:10:13,290 --> 00:10:18,120
<font color="#E5E5E5">test we need to integrate some tools in</font>

209
00:10:16,110 --> 00:10:21,420
example for Android you can<font color="#E5E5E5"> integrate</font>

210
00:10:18,120 --> 00:10:24,649
the Android a bug bridge<font color="#E5E5E5"> over stop to</font>

211
00:10:21,420 --> 00:10:27,209
test<font color="#E5E5E5"> network issues or use browser</font>

212
00:10:24,649 --> 00:10:32,459
famous fantastic mobile<font color="#CCCCCC"> time testing</font>

213
00:10:27,209 --> 00:10:34,670
tools that can<font color="#E5E5E5"> be automated in your in</font>

214
00:10:32,459 --> 00:10:37,979
your scripts<font color="#E5E5E5"> and of course what we want</font>

215
00:10:34,670 --> 00:10:40,380
it's our feedback<font color="#E5E5E5"> from from the test</font>

216
00:10:37,980 --> 00:10:43,050
<font color="#E5E5E5">right we want</font><font color="#CCCCCC"> this test</font><font color="#E5E5E5"> to be all green</font>

217
00:10:40,380 --> 00:10:45,540
so we know<font color="#CCCCCC"> that we</font><font color="#E5E5E5"> cover the security</font>

218
00:10:43,050 --> 00:10:48,329
<font color="#CCCCCC">the basic security in our app so the</font>

219
00:10:45,540 --> 00:10:52,620
full process<font color="#CCCCCC"> in the sdlc will look more</font>

220
00:10:48,329 --> 00:10:53,758
<font color="#E5E5E5">or less like this so we</font><font color="#CCCCCC"> have the mobile</font>

221
00:10:52,620 --> 00:10:56,610
application<font color="#E5E5E5"> security verification</font>

222
00:10:53,759 --> 00:10:59,459
standard checklist<font color="#CCCCCC"> and our security</font>

223
00:10:56,610 --> 00:11:01,980
<font color="#CCCCCC">requirements and of</font><font color="#E5E5E5"> course our threat</font>

224
00:10:59,459 --> 00:11:03,599
model<font color="#E5E5E5"> we want to translate this in code</font>

225
00:11:01,980 --> 00:11:05,610
<font color="#E5E5E5">right one to translate our threat model</font>

226
00:11:03,600 --> 00:11:09,120
<font color="#E5E5E5">our security requirements</font><font color="#CCCCCC"> in code</font>

227
00:11:05,610 --> 00:11:11,029
right<font color="#CCCCCC"> and of course the mobile</font><font color="#E5E5E5"> Siri</font>

228
00:11:09,120 --> 00:11:14,040
testing guide so<font color="#E5E5E5"> we wanna implement</font>

229
00:11:11,029 --> 00:11:16,439
standard BDD tests<font color="#E5E5E5"> they can be</font><font color="#CCCCCC"> applied</font>

230
00:11:14,040 --> 00:11:18,269
on every app because interact with the

231
00:11:16,440 --> 00:11:21,110
operating<font color="#E5E5E5"> system</font><font color="#CCCCCC"> but</font><font color="#E5E5E5"> we want to</font>

232
00:11:18,269 --> 00:11:25,230
implement also BDD<font color="#CCCCCC"> application specific</font>

233
00:11:21,110 --> 00:11:27,420
security tests like an example<font color="#CCCCCC"> tests in</font>

234
00:11:25,230 --> 00:11:30,990
the business logic or authentication

235
00:11:27,420 --> 00:11:32,899
bypass vulnerabilities and so on<font color="#CCCCCC"> we're</font>

236
00:11:30,990 --> 00:11:35,370
gonna secure this test against

237
00:11:32,899 --> 00:11:37,980
acceptance environment<font color="#CCCCCC"> but of</font><font color="#E5E5E5"> course we</font>

238
00:11:35,370 --> 00:11:39,510
<font color="#CCCCCC">cannot automate everything</font><font color="#E5E5E5"> right we</font>

239
00:11:37,980 --> 00:11:42,089
cannot we're not<font color="#CCCCCC"> gonna cover</font><font color="#E5E5E5"> everything</font>

240
00:11:39,510 --> 00:11:46,170
<font color="#CCCCCC">so we still have the manual pen test</font>

241
00:11:42,089 --> 00:11:50,700
<font color="#E5E5E5">phase done by security engineers or pen</font>

242
00:11:46,170 --> 00:11:53,339
testers<font color="#E5E5E5"> but what we can do is that if</font>

243
00:11:50,700 --> 00:11:56,070
our pen tester identifies and issues

244
00:11:53,339 --> 00:11:58,529
that<font color="#CCCCCC"> can be</font><font color="#E5E5E5"> automated</font><font color="#CCCCCC"> we go back in</font><font color="#E5E5E5"> the</font>

245
00:11:56,070 --> 00:12:00,240
cycle we introduce new security

246
00:11:58,529 --> 00:12:04,350
requirements we update our threat model

247
00:12:00,240 --> 00:12:06,959
and we implement new BDD security<font color="#E5E5E5"> tests</font>

248
00:12:04,350 --> 00:12:10,740
<font color="#E5E5E5">right and then the next time that issue</font>

249
00:12:06,959 --> 00:12:14,160
will be covered in<font color="#E5E5E5"> our CI CD all right</font>

250
00:12:10,740 --> 00:12:15,180
<font color="#E5E5E5">let's go a</font><font color="#CCCCCC"> little</font><font color="#E5E5E5"> bit</font><font color="#CCCCCC"> more technical</font><font color="#E5E5E5"> not</font>

251
00:12:14,160 --> 00:12:18,540
too much

252
00:12:15,180 --> 00:12:21,839
so the old<font color="#E5E5E5"> setup looks like this</font><font color="#CCCCCC"> so we</font>

253
00:12:18,540 --> 00:12:24,569
have<font color="#CCCCCC"> our test script</font><font color="#E5E5E5"> our apk we have a</font>

254
00:12:21,839 --> 00:12:28,529
docker container with our UI automation

255
00:12:24,570 --> 00:12:32,250
framework<font color="#E5E5E5"> right and the tests can</font><font color="#CCCCCC"> be</font>

256
00:12:28,529 --> 00:12:34,649
executed<font color="#E5E5E5"> on emulators or devices real</font>

257
00:12:32,250 --> 00:12:36,570
<font color="#E5E5E5">devices so in example if you have a farm</font>

258
00:12:34,649 --> 00:12:40,199
we will execute your tests on every

259
00:12:36,570 --> 00:12:43,320
device<font color="#E5E5E5"> just in one shot</font>

260
00:12:40,199 --> 00:12:45,630
we're<font color="#CCCCCC"> gonna</font><font color="#E5E5E5"> use as a target the Ava's</font>

261
00:12:43,320 --> 00:12:49,050
<font color="#CCCCCC">mobis</font><font color="#E5E5E5"> your MS CG hacking playground</font>

262
00:12:45,630 --> 00:12:52,320
<font color="#CCCCCC">still from span</font><font color="#E5E5E5"> and it's an application</font>

263
00:12:49,050 --> 00:12:53,660
<font color="#CCCCCC">that as like yeah different buttons a</font>

264
00:12:52,320 --> 00:13:00,959
manual with different vulnerabilities

265
00:12:53,660 --> 00:13:03,930
<font color="#E5E5E5">and just testing up to practice mobile</font>

266
00:13:00,959 --> 00:13:08,149
security let's say in example if we want

267
00:13:03,930 --> 00:13:10,529
to test<font color="#E5E5E5"> locks for sensitive data right</font>

268
00:13:08,149 --> 00:13:13,560
<font color="#CCCCCC">our security requirements</font><font color="#E5E5E5"> will be that</font>

269
00:13:10,529 --> 00:13:16,230
locks<font color="#E5E5E5"> must not contain</font><font color="#CCCCCC"> username locks</font>

270
00:13:13,560 --> 00:13:17,599
man's<font color="#E5E5E5"> not contain password information</font>

271
00:13:16,230 --> 00:13:22,420
<font color="#E5E5E5">too</font>

272
00:13:17,600 --> 00:13:24,410
that related<font color="#E5E5E5"> to user and PII and</font>

273
00:13:22,420 --> 00:13:26,149
<font color="#E5E5E5">security requirements could be the</font>

274
00:13:24,410 --> 00:13:29,930
loggia should be disabled<font color="#E5E5E5"> if we think</font>

275
00:13:26,149 --> 00:13:32,449
<font color="#E5E5E5">about a banking app in example so the</font>

276
00:13:29,930 --> 00:13:34,040
flaw<font color="#CCCCCC"> that we want automate is something</font>

277
00:13:32,449 --> 00:13:36,170
<font color="#E5E5E5">like this we click on the button we</font>

278
00:13:34,040 --> 00:13:38,060
insert<font color="#CCCCCC"> username we</font><font color="#E5E5E5"> insert a password and</font>

279
00:13:36,170 --> 00:13:42,079
we click on login

280
00:13:38,060 --> 00:13:45,979
the app will write message in the log

281
00:13:42,079 --> 00:13:48,888
files<font color="#E5E5E5"> that contains our username</font><font color="#CCCCCC"> a</font>

282
00:13:45,980 --> 00:13:54,920
password of<font color="#CCCCCC"> course don't</font><font color="#E5E5E5"> do it but this</font>

283
00:13:48,889 --> 00:13:56,690
just to test our scripts right so our

284
00:13:54,920 --> 00:13:59,209
BDD will look like<font color="#E5E5E5"> this we will</font><font color="#CCCCCC"> have a</font>

285
00:13:56,690 --> 00:14:01,579
feature a feature<font color="#CCCCCC"> just</font><font color="#E5E5E5"> what we are gonna</font>

286
00:13:59,209 --> 00:14:04,758
do right<font color="#E5E5E5"> so we're gonna test against</font>

287
00:14:01,579 --> 00:14:08,839
<font color="#E5E5E5">sensitive data in law files a scenario</font>

288
00:14:04,759 --> 00:14:10,519
so in this case our scenario is we open

289
00:14:08,839 --> 00:14:15,259
<font color="#E5E5E5">the app we press the button relate</font>

290
00:14:10,519 --> 00:14:17,779
relate<font color="#E5E5E5"> to log files and we check then no</font>

291
00:14:15,259 --> 00:14:22,069
sensitive data<font color="#CCCCCC"> are written in the log</font>

292
00:14:17,779 --> 00:14:25,610
files so the BDD<font color="#CCCCCC"> test will</font><font color="#E5E5E5"> look like</font>

293
00:14:22,069 --> 00:14:29,149
this<font color="#CCCCCC"> given I clean all the application</font>

294
00:14:25,610 --> 00:14:30,939
<font color="#CCCCCC">logs so the key</font><font color="#E5E5E5"> word given is just a</font>

295
00:14:29,149 --> 00:14:34,040
precondition like I said we're gonna

296
00:14:30,939 --> 00:14:35,839
delete all the logs from our phone from

297
00:14:34,040 --> 00:14:38,139
our emulator<font color="#E5E5E5"> we don't want noise right</font>

298
00:14:35,839 --> 00:14:42,439
we want to<font color="#E5E5E5"> test in a clean</font><font color="#CCCCCC"> environment</font>

299
00:14:38,139 --> 00:14:44,930
then<font color="#E5E5E5"> we automate the UI and the</font><font color="#CCCCCC"> last</font>

300
00:14:42,439 --> 00:14:48,380
step is<font color="#CCCCCC"> the step</font><font color="#E5E5E5"> that</font><font color="#CCCCCC"> we'll check then</font>

301
00:14:44,930 --> 00:14:54,699
no sensitive<font color="#E5E5E5"> information will be</font><font color="#CCCCCC"> stored</font>

302
00:14:48,380 --> 00:14:57,439
in the log files<font color="#E5E5E5"> so the first the</font><font color="#CCCCCC"> given</font>

303
00:14:54,699 --> 00:15:00,109
statement<font color="#E5E5E5"> will look like this in the</font>

304
00:14:57,439 --> 00:15:02,509
<font color="#E5E5E5">step step file so the implementation is</font>

305
00:15:00,110 --> 00:15:06,139
just<font color="#E5E5E5"> we call the Android debug bridge to</font>

306
00:15:02,509 --> 00:15:08,480
clean all the logs as we can see here

307
00:15:06,139 --> 00:15:14,420
the keyboard all is passed to<font color="#E5E5E5"> the</font>

308
00:15:08,480 --> 00:15:16,370
<font color="#CCCCCC">function</font><font color="#E5E5E5"> right and the second the last</font>

309
00:15:14,420 --> 00:15:18,380
statement<font color="#CCCCCC"> is the</font><font color="#E5E5E5"> statement is gonna</font>

310
00:15:16,370 --> 00:15:20,889
check that no sense of information<font color="#CCCCCC"> are</font>

311
00:15:18,380 --> 00:15:25,519
between<font color="#E5E5E5"> the log files so in this case</font>

312
00:15:20,889 --> 00:15:28,339
the function<font color="#E5E5E5"> just gets in input the the</font>

313
00:15:25,519 --> 00:15:29,240
<font color="#E5E5E5">but level</font><font color="#CCCCCC"> right that we wanna</font><font color="#E5E5E5"> use</font><font color="#CCCCCC"> of the</font>

314
00:15:28,339 --> 00:15:33,220
<font color="#CCCCCC">logs</font>

315
00:15:29,240 --> 00:15:36,820
<font color="#E5E5E5">and in the second part</font><font color="#CCCCCC"> is gonna use the</font>

316
00:15:33,220 --> 00:15:41,420
again the Android debug bridge<font color="#E5E5E5"> so</font><font color="#CCCCCC"> adb</font>

317
00:15:36,820 --> 00:15:44,360
<font color="#CCCCCC">logcat - to check</font><font color="#E5E5E5"> that sensitive</font>

318
00:15:41,420 --> 00:15:46,699
<font color="#CCCCCC">information are not</font><font color="#E5E5E5"> in the</font><font color="#CCCCCC"> law files in</font>

319
00:15:44,360 --> 00:15:50,990
<font color="#E5E5E5">this</font><font color="#CCCCCC"> case we're</font><font color="#E5E5E5"> gonna</font><font color="#CCCCCC"> use also grep</font>

320
00:15:46,700 --> 00:15:53,360
count how many instances of the sensor

321
00:15:50,990 --> 00:15:57,470
<font color="#E5E5E5">information is locked and if there is</font>

322
00:15:53,360 --> 00:16:00,380
more<font color="#CCCCCC"> than one</font><font color="#E5E5E5"> then the</font><font color="#CCCCCC"> test fails</font><font color="#E5E5E5"> so you</font>

323
00:15:57,470 --> 00:16:02,270
can imagine<font color="#E5E5E5"> in this case what we want to</font>

324
00:16:00,380 --> 00:16:04,700
achieve here is that the developers<font color="#E5E5E5"> will</font>

325
00:16:02,270 --> 00:16:06,970
write something<font color="#CCCCCC"> like</font><font color="#E5E5E5"> this so on</font><font color="#CCCCCC"> every</font>

326
00:16:04,700 --> 00:16:09,320
critical function every new<font color="#E5E5E5"> feature that</font>

327
00:16:06,970 --> 00:16:11,270
<font color="#E5E5E5">shouldn't log information</font><font color="#CCCCCC"> in the</font><font color="#E5E5E5"> log</font>

328
00:16:09,320 --> 00:16:14,270
files<font color="#E5E5E5"> they need to they will have to</font>

329
00:16:11,270 --> 00:16:17,510
write tests like<font color="#E5E5E5"> this as part of their</font>

330
00:16:14,270 --> 00:16:20,420
their<font color="#E5E5E5"> integration tests right so if</font>

331
00:16:17,510 --> 00:16:24,649
everything<font color="#E5E5E5"> is green the pen testers</font><font color="#CCCCCC"> one</font>

332
00:16:20,420 --> 00:16:28,339
check that sends information are logged

333
00:16:24,649 --> 00:16:31,520
while<font color="#E5E5E5"> using that feature right another</font>

334
00:16:28,339 --> 00:16:35,779
<font color="#E5E5E5">example is the testing local storage for</font>

335
00:16:31,520 --> 00:16:37,399
<font color="#E5E5E5">sensitive data</font><font color="#CCCCCC"> so our security</font>

336
00:16:35,779 --> 00:16:39,800
requirement will be<font color="#E5E5E5"> that</font><font color="#CCCCCC"> databases</font>

337
00:16:37,399 --> 00:16:42,529
<font color="#CCCCCC">should not contain</font><font color="#E5E5E5"> sensor</font><font color="#CCCCCC"> information as</font>

338
00:16:39,800 --> 00:16:45,469
we know they're<font color="#E5E5E5"> insecure</font><font color="#CCCCCC"> data bases must</font>

339
00:16:42,529 --> 00:16:47,870
<font color="#E5E5E5">be encrypted in example and we should</font>

340
00:16:45,470 --> 00:16:50,329
use<font color="#CCCCCC"> the keychain to store the</font>

341
00:16:47,870 --> 00:16:55,820
credentials so in this case what we are

342
00:16:50,329 --> 00:16:58,010
<font color="#E5E5E5">gonna do is of course go through the UI</font>

343
00:16:55,820 --> 00:17:00,079
<font color="#E5E5E5">press the button</font><font color="#CCCCCC"> relate to database and</font>

344
00:16:58,010 --> 00:17:03,170
then as we can see from the last<font color="#E5E5E5"> step</font>

345
00:17:00,079 --> 00:17:05,000
we're<font color="#E5E5E5"> gonna check that</font><font color="#CCCCCC"> the tables</font><font color="#E5E5E5"> that</font>

346
00:17:03,170 --> 00:17:08,530
are created and information that<font color="#E5E5E5"> are</font>

347
00:17:05,000 --> 00:17:11,449
stored in<font color="#E5E5E5"> the table</font><font color="#CCCCCC"> Donna do not contain</font>

348
00:17:08,530 --> 00:17:17,389
<font color="#CCCCCC">sense information this case</font><font color="#E5E5E5"> it's admin</font>

349
00:17:11,449 --> 00:17:20,390
password<font color="#E5E5E5"> in</font><font color="#CCCCCC"> clear-text</font><font color="#E5E5E5"> so if you go in</font>

350
00:17:17,390 --> 00:17:23,530
the steps the<font color="#E5E5E5"> the test will look like</font>

351
00:17:20,390 --> 00:17:26,959
this in this<font color="#E5E5E5"> case</font><font color="#CCCCCC"> we're still</font><font color="#E5E5E5"> using the</font>

352
00:17:23,530 --> 00:17:29,660
Android<font color="#E5E5E5"> debug bridge and sequel I to</font>

353
00:17:26,959 --> 00:17:31,970
read<font color="#E5E5E5"> from the database with them the old</font>

354
00:17:29,660 --> 00:17:36,290
content of the database and we<font color="#E5E5E5"> grab for</font>

355
00:17:31,970 --> 00:17:39,140
information<font color="#CCCCCC"> that</font><font color="#E5E5E5"> shouldn't be in that in</font>

356
00:17:36,290 --> 00:17:41,940
<font color="#CCCCCC">that database</font><font color="#E5E5E5"> right and of course</font><font color="#CCCCCC"> if we</font>

357
00:17:39,140 --> 00:17:49,350
<font color="#E5E5E5">find that</font><font color="#CCCCCC"> information</font><font color="#E5E5E5"> we fail</font>

358
00:17:41,940 --> 00:17:51,149
<font color="#E5E5E5">we fill the test so after we execute all</font>

359
00:17:49,350 --> 00:17:55,100
the<font color="#E5E5E5"> tests of course we want developers</font>

360
00:17:51,149 --> 00:17:58,768
to execute those tests in the<font color="#E5E5E5"> CI CD and</font>

361
00:17:55,100 --> 00:18:01,709
when all the tests are completed we will

362
00:17:58,769 --> 00:18:05,399
s something<font color="#E5E5E5"> like this so we can give a</font>

363
00:18:01,710 --> 00:18:08,909
report like<font color="#CCCCCC"> this to business</font><font color="#E5E5E5"> to the</font>

364
00:18:05,399 --> 00:18:12,979
security guys<font color="#E5E5E5"> to the managers in</font><font color="#CCCCCC"> order</font>

365
00:18:08,909 --> 00:18:15,389
<font color="#E5E5E5">to prove and</font><font color="#CCCCCC"> that our application is</font>

366
00:18:12,980 --> 00:18:18,629
<font color="#CCCCCC">secure</font><font color="#E5E5E5"> and it's understandable by</font>

367
00:18:15,389 --> 00:18:19,979
everybody<font color="#E5E5E5"> because it's normal English</font><font color="#CCCCCC"> of</font>

368
00:18:18,629 --> 00:18:22,709
course<font color="#CCCCCC"> in</font><font color="#E5E5E5"> this</font><font color="#CCCCCC"> case the report will</font>

369
00:18:19,980 --> 00:18:26,399
contain that<font color="#E5E5E5"> the test failed and</font><font color="#CCCCCC"> will</font>

370
00:18:22,710 --> 00:18:32,309
tell<font color="#E5E5E5"> you where it failed if we want to</font>

371
00:18:26,399 --> 00:18:33,689
integrate it in the CI CD we will do

372
00:18:32,309 --> 00:18:37,970
something<font color="#CCCCCC"> like this</font><font color="#E5E5E5"> so in this case we</font>

373
00:18:33,690 --> 00:18:41,850
use<font color="#E5E5E5"> Jenkins and as you can see from the</font>

374
00:18:37,970 --> 00:18:46,909
red<font color="#E5E5E5"> line</font><font color="#CCCCCC"> it's</font><font color="#E5E5E5"> just a shell command</font><font color="#CCCCCC"> that</font>

375
00:18:41,850 --> 00:18:50,330
<font color="#E5E5E5">will call our feature files and will</font>

376
00:18:46,909 --> 00:18:52,769
activate<font color="#CCCCCC"> will go through the</font><font color="#E5E5E5"> test and</font>

377
00:18:50,330 --> 00:19:00,120
<font color="#CCCCCC">automate it on our on our mobile or on</font>

378
00:18:52,769 --> 00:19:03,420
<font color="#CCCCCC">our emulators right so let them just to</font>

379
00:19:00,120 --> 00:19:06,859
show<font color="#CCCCCC"> you how this looks like</font>

380
00:19:03,420 --> 00:19:06,859
[Music]

381
00:19:15,480 --> 00:19:18,920
<font color="#E5E5E5">all right let's</font><font color="#CCCCCC"> move</font><font color="#E5E5E5"> it there</font>

382
00:19:23,930 --> 00:19:33,320
not easy and this

383
00:19:37,320 --> 00:19:51,840
<font color="#E5E5E5">all right this is this</font><font color="#CCCCCC"> more difficult</font>

384
00:19:44,040 --> 00:19:54,600
<font color="#CCCCCC">yeah</font><font color="#E5E5E5"> all right</font>

385
00:19:51,840 --> 00:20:01,520
have you ever tried this<font color="#CCCCCC"> - right here</font>

386
00:19:54,600 --> 00:20:04,679
and so we<font color="#E5E5E5"> have</font><font color="#CCCCCC"> our mobile</font><font color="#E5E5E5"> device and on</font>

387
00:20:01,520 --> 00:20:09,720
in the console it's our docker container

388
00:20:04,680 --> 00:20:13,200
<font color="#E5E5E5">right so the in the docker container</font><font color="#CCCCCC"> the</font>

389
00:20:09,720 --> 00:20:17,670
all contain is attached<font color="#CCCCCC"> to our tests and</font>

390
00:20:13,200 --> 00:20:19,350
<font color="#E5E5E5">our folder containing the apk and what</font>

391
00:20:17,670 --> 00:20:21,450
we're gonna do is actually spin up the

392
00:20:19,350 --> 00:20:23,790
<font color="#E5E5E5">test from</font><font color="#CCCCCC"> the docker container and then</font>

393
00:20:21,450 --> 00:20:28,500
use the emulator<font color="#CCCCCC"> to yeah</font>

394
00:20:23,790 --> 00:20:31,230
emulate the<font color="#E5E5E5"> the app so the</font><font color="#CCCCCC"> comment that</font>

395
00:20:28,500 --> 00:20:32,490
we're<font color="#E5E5E5"> gonna</font><font color="#CCCCCC"> use</font><font color="#E5E5E5"> in this case is calabash</font>

396
00:20:31,230 --> 00:20:35,010
<font color="#E5E5E5">Android because we're going to use</font>

397
00:20:32,490 --> 00:20:37,770
calabash to<font color="#E5E5E5"> automate UI right but of</font>

398
00:20:35,010 --> 00:20:40,110
course you can use other you have frame

399
00:20:37,770 --> 00:20:44,250
or such a command the<font color="#CCCCCC"> comment will be</font>

400
00:20:40,110 --> 00:20:47,600
<font color="#CCCCCC">more or less the same but the concept</font>

401
00:20:44,250 --> 00:20:51,660
will be<font color="#E5E5E5"> exactly the same</font><font color="#CCCCCC"> so if we run it</font>

402
00:20:47,600 --> 00:20:54,419
our first<font color="#E5E5E5"> test is</font><font color="#CCCCCC"> that database</font><font color="#E5E5E5"> should</font>

403
00:20:51,660 --> 00:20:57,630
not contain sensitive information<font color="#E5E5E5"> and in</font>

404
00:20:54,420 --> 00:21:00,420
this case calabash<font color="#E5E5E5"> will spin up the the</font>

405
00:20:57,630 --> 00:21:03,240
<font color="#CCCCCC">application and click in the interface</font>

406
00:21:00,420 --> 00:21:05,780
and then as we can see in this case the

407
00:21:03,240 --> 00:21:09,180
test fails because<font color="#E5E5E5"> the app stores</font>

408
00:21:05,780 --> 00:21:13,350
<font color="#CCCCCC">information in the database</font><font color="#E5E5E5"> and the</font>

409
00:21:09,180 --> 00:21:16,410
second test<font color="#E5E5E5"> is the</font><font color="#CCCCCC"> sensor information in</font>

410
00:21:13,350 --> 00:21:21,169
the log files<font color="#E5E5E5"> and in this case it fails</font>

411
00:21:16,410 --> 00:21:25,110
again<font color="#E5E5E5"> because there are information in</font>

412
00:21:21,170 --> 00:21:36,540
<font color="#E5E5E5">files as we can see if we go ready be</font>

413
00:21:25,110 --> 00:21:39,030
<font color="#CCCCCC">like</font><font color="#E5E5E5"> that's secret yeah we have multiple</font>

414
00:21:36,540 --> 00:21:42,389
<font color="#CCCCCC">instances of cigarettes being logged</font>

415
00:21:39,030 --> 00:21:44,850
<font color="#E5E5E5">logged in the application and here we</font>

416
00:21:42,390 --> 00:21:48,240
have<font color="#CCCCCC"> a username</font><font color="#E5E5E5"> and</font><font color="#CCCCCC"> password so</font><font color="#E5E5E5"> our test</font>

417
00:21:44,850 --> 00:21:53,869
will will fail

418
00:21:48,240 --> 00:21:58,889
so coming<font color="#CCCCCC"> back</font><font color="#E5E5E5"> to presentation I hope</font>

419
00:21:53,869 --> 00:22:01,350
it's doing that yes<font color="#CCCCCC"> what are the</font>

420
00:21:58,889 --> 00:22:03,689
benefits<font color="#E5E5E5"> yeah we're ready discuss few</font>

421
00:22:01,350 --> 00:22:07,289
<font color="#CCCCCC">benefits but what we want to do with</font>

422
00:22:03,690 --> 00:22:09,240
this kind<font color="#CCCCCC"> of tests we want to increase</font>

423
00:22:07,289 --> 00:22:12,299
<font color="#E5E5E5">the security maturity on mobile teams</font>

424
00:22:09,240 --> 00:22:15,690
<font color="#E5E5E5">right it applies also for other web and</font>

425
00:22:12,299 --> 00:22:17,100
desktop application but we<font color="#CCCCCC"> wanna</font>

426
00:22:15,690 --> 00:22:19,590
increase<font color="#E5E5E5"> the security because</font><font color="#CCCCCC"> we</font><font color="#E5E5E5"> want</font>

427
00:22:17,100 --> 00:22:22,289
developers to understand what are<font color="#E5E5E5"> the</font>

428
00:22:19,590 --> 00:22:24,149
security<font color="#E5E5E5"> issues right we want them</font><font color="#CCCCCC"> to</font>

429
00:22:22,289 --> 00:22:27,749
write tests<font color="#CCCCCC"> for us</font><font color="#E5E5E5"> of course we are</font>

430
00:22:24,149 --> 00:22:31,258
<font color="#CCCCCC">gonna</font><font color="#E5E5E5"> write first this kind of tests</font><font color="#CCCCCC"> but</font>

431
00:22:27,749 --> 00:22:33,389
then with<font color="#E5E5E5"> the time there will</font><font color="#CCCCCC"> be so good</font>

432
00:22:31,259 --> 00:22:35,700
<font color="#CCCCCC">that they will write their own</font><font color="#E5E5E5"> tests</font>

433
00:22:33,389 --> 00:22:40,379
because<font color="#CCCCCC"> they know better</font><font color="#E5E5E5"> every</font><font color="#CCCCCC"> single</font>

434
00:22:35,700 --> 00:22:44,159
line of code<font color="#E5E5E5"> in the mobile</font><font color="#CCCCCC"> app</font><font color="#E5E5E5"> right</font><font color="#CCCCCC"> we</font>

435
00:22:40,379 --> 00:22:45,299
wanna have<font color="#E5E5E5"> security baseline always</font>

436
00:22:44,159 --> 00:22:47,309
covered<font color="#E5E5E5"> right</font>

437
00:22:45,299 --> 00:22:49,710
we don't want surprise and we can do

438
00:22:47,309 --> 00:22:51,629
this we can<font color="#E5E5E5"> detect</font><font color="#CCCCCC"> mooner abilities in a</font>

439
00:22:49,710 --> 00:22:54,809
very early<font color="#E5E5E5"> stage so on every built</font>

440
00:22:51,629 --> 00:22:57,809
before<font color="#E5E5E5"> the app arrives to</font><font color="#CCCCCC"> pen testers or</font>

441
00:22:54,809 --> 00:23:00,119
<font color="#E5E5E5">is in</font><font color="#CCCCCC"> production and of course we can</font>

442
00:22:57,809 --> 00:23:02,220
decrease the<font color="#CCCCCC"> time to release because</font><font color="#E5E5E5"> if</font>

443
00:23:00,119 --> 00:23:04,080
the<font color="#E5E5E5"> tests are green and we know that the</font>

444
00:23:02,220 --> 00:23:07,350
team brought<font color="#E5E5E5"> the right tests they could</font>

445
00:23:04,080 --> 00:23:11,249
go to production<font color="#CCCCCC"> without even going</font>

446
00:23:07,350 --> 00:23:13,469
<font color="#E5E5E5">through the security team right</font><font color="#CCCCCC"> and yeah</font>

447
00:23:11,249 --> 00:23:18,299
<font color="#E5E5E5">like I said</font><font color="#CCCCCC"> we</font><font color="#E5E5E5"> want to translate threats</font>

448
00:23:13,470 --> 00:23:22,999
<font color="#E5E5E5">in code</font><font color="#CCCCCC"> in tests because it's the only</font>

449
00:23:18,299 --> 00:23:26,009
way<font color="#E5E5E5"> to keep track and have developers</font>

450
00:23:22,999 --> 00:23:27,960
writing<font color="#E5E5E5"> and understand threats in</font><font color="#CCCCCC"> their</font>

451
00:23:26,009 --> 00:23:29,929
model<font color="#E5E5E5"> and of course we can never ready</font>

452
00:23:27,960 --> 00:23:32,490
to go security to use security

453
00:23:29,929 --> 00:23:35,309
<font color="#E5E5E5">documentation from the</font><font color="#CCCCCC"> gur context</font><font color="#E5E5E5"> that</font>

454
00:23:32,490 --> 00:23:41,070
<font color="#E5E5E5">can be used to prove that the app covers</font>

455
00:23:35,309 --> 00:23:45,899
the security features<font color="#E5E5E5"> so this is an open</font>

456
00:23:41,070 --> 00:23:49,918
source project<font color="#E5E5E5"> on the ING Bank</font><font color="#CCCCCC"> get up</font>

457
00:23:45,899 --> 00:23:54,149
rapper<font color="#E5E5E5"> and you can fork it you can clone</font>

458
00:23:49,919 --> 00:23:55,499
<font color="#CCCCCC">it you can modify</font><font color="#E5E5E5"> to do what you like if</font>

459
00:23:54,149 --> 00:23:57,620
you want to contribute<font color="#E5E5E5"> you're very</font>

460
00:23:55,499 --> 00:24:01,580
welcome

461
00:23:57,620 --> 00:24:12,040
so yeah the last<font color="#CCCCCC"> video test is for you</font>

462
00:24:01,580 --> 00:24:12,040
<font color="#CCCCCC">guys and questions yes</font>

463
00:24:12,760 --> 00:24:19,660
<font color="#CCCCCC">no it's also for iOS yes in this</font><font color="#E5E5E5"> case we</font>

464
00:24:17,200 --> 00:24:22,030
used calabash Android like we saw but

465
00:24:19,660 --> 00:24:25,840
<font color="#E5E5E5">there is also calabash iOS app you miss</font>

466
00:24:22,030 --> 00:24:27,780
for both<font color="#E5E5E5"> Android iOS so it is related to</font>

467
00:24:25,840 --> 00:24:34,020
the UI framework that you're<font color="#CCCCCC"> gonna</font><font color="#E5E5E5"> use</font>

468
00:24:27,780 --> 00:24:34,020
<font color="#E5E5E5">okay other questions</font>

469
00:24:40,809 --> 00:24:46,490
so you're working<font color="#CCCCCC"> with developers</font><font color="#E5E5E5"> so</font><font color="#CCCCCC"> I</font>

470
00:24:44,870 --> 00:24:50,379
assume these are you mentioned threat

471
00:24:46,490 --> 00:24:53,750
modeling earlier<font color="#CCCCCC"> how difficult is it</font><font color="#E5E5E5"> to</font>

472
00:24:50,380 --> 00:24:58,909
<font color="#E5E5E5">train developers to write these kinds</font><font color="#CCCCCC"> of</font>

473
00:24:53,750 --> 00:25:02,899
tasks<font color="#E5E5E5"> up tests right yeah yes</font><font color="#CCCCCC"> yeah first</font>

474
00:24:58,909 --> 00:25:06,020
of<font color="#E5E5E5"> all what we do we do modeling</font>

475
00:25:02,899 --> 00:25:11,649
exercises together<font color="#E5E5E5"> with developers and</font>

476
00:25:06,020 --> 00:25:15,379
other like product owners or a business

477
00:25:11,649 --> 00:25:19,760
<font color="#CCCCCC">so once they understand their threats</font>

478
00:25:15,380 --> 00:25:21,500
and for them is<font color="#E5E5E5"> not difficult to write</font>

479
00:25:19,760 --> 00:25:24,080
<font color="#E5E5E5">this kind of test right what we need to</font>

480
00:25:21,500 --> 00:25:27,860
teach them is<font color="#CCCCCC"> how to use security</font><font color="#E5E5E5"> tools</font>

481
00:25:24,080 --> 00:25:32,240
<font color="#E5E5E5">right and how to automate them but I</font>

482
00:25:27,860 --> 00:25:35,750
mean I can say as was i working ing and

483
00:25:32,240 --> 00:25:38,480
the mobile app should be secure right

484
00:25:35,750 --> 00:25:41,450
the mobile teams are pretty mature<font color="#CCCCCC"> in</font>

485
00:25:38,480 --> 00:25:44,840
<font color="#E5E5E5">security but of course it takes time</font><font color="#CCCCCC"> to</font>

486
00:25:41,450 --> 00:25:47,149
let them understand the benefits<font color="#E5E5E5"> of this</font>

487
00:25:44,840 --> 00:25:49,820
approach<font color="#CCCCCC"> but of</font><font color="#E5E5E5"> course if they see</font><font color="#CCCCCC"> that</font>

488
00:25:47,149 --> 00:25:52,389
they<font color="#E5E5E5"> can</font><font color="#CCCCCC"> go to production very fast</font><font color="#E5E5E5"> they</font>

489
00:25:49,820 --> 00:25:56,918
<font color="#CCCCCC">would</font><font color="#E5E5E5"> spend some time learning this</font>

490
00:25:52,390 --> 00:25:56,919
thank you any more<font color="#CCCCCC"> questions</font>

491
00:25:58,120 --> 00:26:05,529
excellent thank<font color="#E5E5E5"> you thank you</font>

492
00:26:00,680 --> 00:26:05,529
[Applause]

