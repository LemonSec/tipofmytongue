1
00:00:00,650 --> 00:00:06,839
hello everyone welcome<font color="#CCCCCC"> to</font><font color="#E5E5E5"> this talk yeah</font>

2
00:00:04,680 --> 00:00:10,290
<font color="#CCCCCC">I'll be talking</font><font color="#E5E5E5"> about fraud invalidation</font>

3
00:00:06,839 --> 00:00:12,599
solutions<font color="#CCCCCC"> so just a</font><font color="#E5E5E5"> quick introduction</font>

4
00:00:10,290 --> 00:00:15,870
my name is<font color="#CCCCCC"> mayank</font><font color="#E5E5E5"> I'm a security</font>

5
00:00:12,599 --> 00:00:18,539
<font color="#CCCCCC">engineer at Dropbox currently I'm</font>

6
00:00:15,870 --> 00:00:20,549
working<font color="#CCCCCC"> on</font><font color="#E5E5E5"> intrusion detection before</font>

7
00:00:18,539 --> 00:00:22,890
Dropbox<font color="#E5E5E5"> I worked at a</font><font color="#CCCCCC"> start-up called</font>

8
00:00:20,550 --> 00:00:24,480
stealth<font color="#E5E5E5"> security where I was</font><font color="#CCCCCC"> working on</font>

9
00:00:22,890 --> 00:00:27,300
body attention and<font color="#CCCCCC"> Abi's detection in</font>

10
00:00:24,480 --> 00:00:29,910
general before<font color="#CCCCCC"> that I was a grad student</font>

11
00:00:27,300 --> 00:00:31,800
at UC San Diego<font color="#CCCCCC"> so just a quick</font>

12
00:00:29,910 --> 00:00:33,090
<font color="#CCCCCC">disclaimer most of this work</font><font color="#E5E5E5"> was</font>

13
00:00:31,800 --> 00:00:35,610
actually done at my<font color="#E5E5E5"> previous company</font>

14
00:00:33,090 --> 00:00:37,079
it's still security and also<font color="#E5E5E5"> basically</font>

15
00:00:35,610 --> 00:00:43,530
in my free time<font color="#E5E5E5"> basically over the</font>

16
00:00:37,079 --> 00:00:45,170
<font color="#E5E5E5">weekends also Dropbox is hiring</font><font color="#CCCCCC"> so if</font>

17
00:00:43,530 --> 00:00:50,219
<font color="#CCCCCC">you are interested</font><font color="#E5E5E5"> in abuse detection</font>

18
00:00:45,170 --> 00:00:52,350
<font color="#E5E5E5">please come talk to me after</font><font color="#CCCCCC"> my talk ok</font>

19
00:00:50,219 --> 00:00:56,550
so let's talk about<font color="#E5E5E5"> the problem</font>

20
00:00:52,350 --> 00:00:59,820
statement<font color="#CCCCCC"> itself</font><font color="#E5E5E5"> so</font><font color="#CCCCCC"> part detection this</font>

21
00:00:56,550 --> 00:01:02,390
is a pretty hot<font color="#CCCCCC"> topic these days</font><font color="#E5E5E5"> this is</font>

22
00:00:59,820 --> 00:01:05,220
a pretty big problem<font color="#CCCCCC"> for detection</font><font color="#E5E5E5"> and</font>

23
00:01:02,390 --> 00:01:08,010
what<font color="#E5E5E5"> essentially</font><font color="#CCCCCC"> what it means</font><font color="#E5E5E5"> is</font><font color="#CCCCCC"> you're</font>

24
00:01:05,220 --> 00:01:09,420
trying<font color="#E5E5E5"> to defend against parts which are</font>

25
00:01:08,010 --> 00:01:12,030
<font color="#E5E5E5">trying to automate some sort of an</font>

26
00:01:09,420 --> 00:01:14,010
abusive activity so these could this

27
00:01:12,030 --> 00:01:16,500
could be for example<font color="#E5E5E5"> automated</font><font color="#CCCCCC"> automated</font>

28
00:01:14,010 --> 00:01:17,880
creation<font color="#E5E5E5"> of accounts for</font><font color="#CCCCCC"> example so</font>

29
00:01:16,500 --> 00:01:20,909
these are fake accounts<font color="#E5E5E5"> you which you</font>

30
00:01:17,880 --> 00:01:23,189
see all the time<font color="#CCCCCC"> on social</font><font color="#E5E5E5"> media</font><font color="#CCCCCC"> this</font>

31
00:01:20,909 --> 00:01:25,920
could be posting whatever it'll<font color="#E5E5E5"> be</font>

32
00:01:23,189 --> 00:01:28,080
posting fake content<font color="#CCCCCC"> this could be for</font>

33
00:01:25,920 --> 00:01:29,729
example scraping so you have<font color="#CCCCCC"> BOTS which</font>

34
00:01:28,080 --> 00:01:32,070
are trying<font color="#E5E5E5"> to scrape sites like for</font>

35
00:01:29,729 --> 00:01:33,450
example LinkedIn<font color="#CCCCCC"> these could</font><font color="#E5E5E5"> be Birds</font>

36
00:01:32,070 --> 00:01:37,798
which are for<font color="#E5E5E5"> example</font><font color="#CCCCCC"> testing out</font>

37
00:01:33,450 --> 00:01:41,159
credential<font color="#E5E5E5"> terms so they are essentially</font>

38
00:01:37,799 --> 00:01:42,360
trying<font color="#E5E5E5"> to test if if the users on your</font>

39
00:01:41,159 --> 00:01:44,210
<font color="#CCCCCC">site are</font><font color="#E5E5E5"> still</font><font color="#CCCCCC"> reusing the same</font>

40
00:01:42,360 --> 00:01:46,920
<font color="#E5E5E5">passwords which are leaked in the</font>

41
00:01:44,210 --> 00:01:49,619
credential dump so essentially the

42
00:01:46,920 --> 00:01:53,399
problem<font color="#CCCCCC"> is like is this activity from a</font>

43
00:01:49,619 --> 00:01:57,229
human or<font color="#E5E5E5"> about the other other problem</font>

44
00:01:53,399 --> 00:01:59,040
is fraud detection<font color="#CCCCCC"> somewhat</font><font color="#E5E5E5"> similar</font>

45
00:01:57,229 --> 00:02:00,630
<font color="#E5E5E5">essentially where what you are looking</font>

46
00:01:59,040 --> 00:02:03,450
<font color="#CCCCCC">for is you're looking for</font><font color="#E5E5E5"> anomalies in</font>

47
00:02:00,630 --> 00:02:05,100
activities here as well but here what

48
00:02:03,450 --> 00:02:07,950
you're usually looking<font color="#CCCCCC"> for is anomalies</font>

49
00:02:05,100 --> 00:02:09,508
<font color="#E5E5E5">given past behavior for example</font><font color="#CCCCCC"> here a</font>

50
00:02:07,950 --> 00:02:12,690
common example<font color="#CCCCCC"> is credit card</font>

51
00:02:09,508 --> 00:02:13,799
<font color="#E5E5E5">transactions so here we are essentially</font>

52
00:02:12,690 --> 00:02:16,950
<font color="#E5E5E5">looking for</font>

53
00:02:13,800 --> 00:02:19,230
<font color="#E5E5E5">is this new credit card transaction</font><font color="#CCCCCC"> in a</font>

54
00:02:16,950 --> 00:02:20,820
lie<font color="#E5E5E5"> like does this fall in the same</font>

55
00:02:19,230 --> 00:02:23,369
category of behavior given<font color="#E5E5E5"> past</font>

56
00:02:20,820 --> 00:02:25,760
transactions and so<font color="#CCCCCC"> forth</font><font color="#E5E5E5"> another</font>

57
00:02:23,370 --> 00:02:28,140
category is manual account takeovers

58
00:02:25,760 --> 00:02:30,299
so here again<font color="#E5E5E5"> like you're looking for</font>

59
00:02:28,140 --> 00:02:32,250
anomalies<font color="#E5E5E5"> given like past historical</font>

60
00:02:30,300 --> 00:02:34,560
data and<font color="#E5E5E5"> in what</font><font color="#CCCCCC"> direction you're</font>

61
00:02:32,250 --> 00:02:36,480
<font color="#E5E5E5">looking for</font><font color="#CCCCCC"> anomalies</font><font color="#E5E5E5"> given an entire</font>

62
00:02:34,560 --> 00:02:42,150
population<font color="#CCCCCC"> of data like if you want</font><font color="#E5E5E5"> to</font>

63
00:02:36,480 --> 00:02:43,880
<font color="#E5E5E5">think about it in these terms okay so we</font>

64
00:02:42,150 --> 00:02:46,980
<font color="#E5E5E5">introduced these problems and of course</font>

65
00:02:43,880 --> 00:02:50,400
like<font color="#E5E5E5"> these are pretty big problems like</font>

66
00:02:46,980 --> 00:02:51,929
<font color="#E5E5E5">fraud detection</font><font color="#CCCCCC"> I will say is pretty old</font>

67
00:02:50,400 --> 00:02:54,240
problem like credit card<font color="#E5E5E5"> transaction</font>

68
00:02:51,930 --> 00:02:57,720
people have spent like<font color="#E5E5E5"> decades working</font>

69
00:02:54,240 --> 00:03:00,870
<font color="#E5E5E5">on this problem</font><font color="#CCCCCC"> poor detection is</font>

70
00:02:57,720 --> 00:03:02,250
extremely huge especially<font color="#CCCCCC"> in like the</font>

71
00:03:00,870 --> 00:03:05,790
current world given like current

72
00:03:02,250 --> 00:03:07,830
political climate<font color="#CCCCCC"> so yeah</font><font color="#E5E5E5"> people</font><font color="#CCCCCC"> have</font>

73
00:03:05,790 --> 00:03:09,179
literally poured millions and billions

74
00:03:07,830 --> 00:03:11,340
of dollars<font color="#CCCCCC"> just trying</font><font color="#E5E5E5"> to solve these</font>

75
00:03:09,180 --> 00:03:12,810
problems<font color="#CCCCCC"> so</font><font color="#E5E5E5"> there are a bunch</font><font color="#CCCCCC"> of</font>

76
00:03:11,340 --> 00:03:16,050
in-house solutions and they're also

77
00:03:12,810 --> 00:03:17,880
vendor solutions which are<font color="#CCCCCC"> available and</font>

78
00:03:16,050 --> 00:03:20,070
<font color="#E5E5E5">to try to solve these problems</font><font color="#CCCCCC"> but</font>

79
00:03:17,880 --> 00:03:22,170
people haven't really thought about<font color="#E5E5E5"> how</font>

80
00:03:20,070 --> 00:03:23,489
<font color="#E5E5E5">these solutions</font><font color="#CCCCCC"> actually work</font><font color="#E5E5E5"> what they</font>

81
00:03:22,170 --> 00:03:25,019
<font color="#E5E5E5">are trying to do how they are trying</font><font color="#CCCCCC"> to</font>

82
00:03:23,489 --> 00:03:26,430
<font color="#E5E5E5">solve the problem and are they really</font>

83
00:03:25,020 --> 00:03:32,820
<font color="#E5E5E5">trying are they really solving this</font>

84
00:03:26,430 --> 00:03:35,610
problem<font color="#E5E5E5"> okay</font><font color="#CCCCCC"> so in this</font><font color="#E5E5E5"> talk what I will</font>

85
00:03:32,820 --> 00:03:38,850
do is I will<font color="#E5E5E5"> start off with an example</font>

86
00:03:35,610 --> 00:03:41,190
<font color="#CCCCCC">architecture so this is think of it as a</font>

87
00:03:38,850 --> 00:03:44,370
common architectural pattern for any

88
00:03:41,190 --> 00:03:46,320
fraud<font color="#CCCCCC"> or detection solution most</font><font color="#E5E5E5"> of them</font>

89
00:03:44,370 --> 00:03:48,720
follow some somewhat similar patterns of

90
00:03:46,320 --> 00:03:51,090
architecture and then given this<font color="#E5E5E5"> example</font>

91
00:03:48,720 --> 00:03:55,170
architecture I'll talk<font color="#CCCCCC"> about security</font>

92
00:03:51,090 --> 00:03:58,170
<font color="#CCCCCC">issues</font><font color="#E5E5E5"> with this sort of deployment</font><font color="#CCCCCC"> I</font>

93
00:03:55,170 --> 00:04:01,170
will<font color="#E5E5E5"> also talk about some war stories</font>

94
00:03:58,170 --> 00:04:05,220
<font color="#CCCCCC">from real-world deployments of some some</font>

95
00:04:01,170 --> 00:04:08,429
of<font color="#E5E5E5"> these vendors as well so let's start</font>

96
00:04:05,220 --> 00:04:11,280
<font color="#CCCCCC">with the first most</font><font color="#E5E5E5"> common architectural</font>

97
00:04:08,430 --> 00:04:15,530
deployment<font color="#E5E5E5"> this is the usual like</font>

98
00:04:11,280 --> 00:04:18,630
cloud-based deployment<font color="#CCCCCC"> so in this slide</font>

99
00:04:15,530 --> 00:04:20,488
<font color="#E5E5E5">in this case you have your web server on</font>

100
00:04:18,630 --> 00:04:23,219
the<font color="#CCCCCC"> right-hand side so the web server is</font>

101
00:04:20,488 --> 00:04:25,590
basically<font color="#E5E5E5"> serving all the content and</font>

102
00:04:23,220 --> 00:04:27,600
then<font color="#CCCCCC"> you have the client browser</font><font color="#E5E5E5"> on the</font>

103
00:04:25,590 --> 00:04:29,190
<font color="#CCCCCC">left-hand side which</font><font color="#E5E5E5"> is basically</font>

104
00:04:27,600 --> 00:04:31,560
requesting this<font color="#E5E5E5"> content</font><font color="#CCCCCC"> and</font><font color="#E5E5E5"> then you</font>

105
00:04:29,190 --> 00:04:33,780
have some<font color="#E5E5E5"> sort of like magical service</font>

106
00:04:31,560 --> 00:04:37,860
provider in the cloud<font color="#E5E5E5"> so this is your</font>

107
00:04:33,780 --> 00:04:40,679
typical<font color="#CCCCCC"> floorboard addiction solution so</font>

108
00:04:37,860 --> 00:04:43,310
the flow<font color="#CCCCCC"> is</font><font color="#E5E5E5"> as follows</font><font color="#CCCCCC"> so the first step</font>

109
00:04:40,680 --> 00:04:46,140
is the web<font color="#CCCCCC"> request so the client browser</font>

110
00:04:43,310 --> 00:04:49,050
makes a web request<font color="#E5E5E5"> to the</font><font color="#CCCCCC"> web server so</font>

111
00:04:46,140 --> 00:04:50,729
for example like<font color="#E5E5E5"> give me the login page</font>

112
00:04:49,050 --> 00:04:54,180
I want to authenticate to a website<font color="#E5E5E5"> and</font>

113
00:04:50,730 --> 00:04:56,550
the web server responds back<font color="#CCCCCC"> with the</font>

114
00:04:54,180 --> 00:04:59,400
with the with the page itself<font color="#E5E5E5"> so the</font>

115
00:04:56,550 --> 00:05:01,940
interesting piece here is this file

116
00:04:59,400 --> 00:05:03,900
called fingerprint<font color="#E5E5E5"> JS file which is</font>

117
00:05:01,940 --> 00:05:06,990
deployed<font color="#E5E5E5"> somewhere in the service</font>

118
00:05:03,900 --> 00:05:09,690
provider say like ABC cbn.com<font color="#CCCCCC"> or like</font>

119
00:05:06,990 --> 00:05:12,390
somewhere which is<font color="#E5E5E5"> encoded within the</font>

120
00:05:09,690 --> 00:05:14,700
page itself<font color="#E5E5E5"> so when you get back the</font>

121
00:05:12,390 --> 00:05:16,979
page and the<font color="#E5E5E5"> page loads in your browser</font>

122
00:05:14,700 --> 00:05:19,620
<font color="#CCCCCC">this</font><font color="#E5E5E5"> code automatically runs in a</font>

123
00:05:16,980 --> 00:05:20,910
browser<font color="#CCCCCC"> and then this fingerprint orgy</font>

124
00:05:19,620 --> 00:05:23,520
<font color="#E5E5E5">is filed collect some sort of a</font>

125
00:05:20,910 --> 00:05:26,580
<font color="#E5E5E5">fingerprint for</font><font color="#CCCCCC"> your browser</font><font color="#E5E5E5"> for you</font>

126
00:05:23,520 --> 00:05:29,580
<font color="#CCCCCC">I'll</font><font color="#E5E5E5"> talk</font><font color="#CCCCCC"> a lot more about this magical</font>

127
00:05:26,580 --> 00:05:30,690
file<font color="#E5E5E5"> later on but essentially what</font>

128
00:05:29,580 --> 00:05:32,599
<font color="#E5E5E5">you're</font><font color="#CCCCCC"> doing is you're collecting some</font>

129
00:05:30,690 --> 00:05:35,400
sort of signals<font color="#E5E5E5"> from</font><font color="#CCCCCC"> the browser like</font>

130
00:05:32,600 --> 00:05:37,530
like who is this user<font color="#CCCCCC"> like how is this</font>

131
00:05:35,400 --> 00:05:40,020
user interacting with the<font color="#CCCCCC"> webpage and so</font>

132
00:05:37,530 --> 00:05:41,429
forth and this fingerprint is like in

133
00:05:40,020 --> 00:05:43,560
the third step sent back<font color="#CCCCCC"> to the service</font>

134
00:05:41,430 --> 00:05:44,940
<font color="#CCCCCC">provider so this happens like when</font><font color="#E5E5E5"> you</font>

135
00:05:43,560 --> 00:05:46,820
are<font color="#E5E5E5"> basically interacting with the page</font>

136
00:05:44,940 --> 00:05:49,950
while<font color="#CCCCCC"> you are interacting with</font><font color="#E5E5E5"> the page</font>

137
00:05:46,820 --> 00:05:51,840
<font color="#E5E5E5">the service provider</font><font color="#CCCCCC"> again has some sort</font>

138
00:05:49,950 --> 00:05:53,760
of magical<font color="#CCCCCC"> machine</font><font color="#E5E5E5"> learning where they</font>

139
00:05:51,840 --> 00:05:56,580
basically<font color="#E5E5E5"> get these signals back and</font>

140
00:05:53,760 --> 00:05:58,170
they analyze<font color="#E5E5E5"> them and they get back some</font>

141
00:05:56,580 --> 00:06:00,570
<font color="#E5E5E5">sort of a risk</font><font color="#CCCCCC"> score or whatever their</font>

142
00:05:58,170 --> 00:06:03,720
prediction is about this particular

143
00:06:00,570 --> 00:06:06,990
activity like<font color="#E5E5E5"> if this browser actually</font><font color="#CCCCCC"> a</font>

144
00:06:03,720 --> 00:06:09,450
real browser is this activity<font color="#CCCCCC"> does it</font>

145
00:06:06,990 --> 00:06:11,010
actually<font color="#E5E5E5"> belong to actual human</font><font color="#CCCCCC"> being so</font>

146
00:06:09,450 --> 00:06:14,280
the service provider calculates<font color="#E5E5E5"> internal</font>

147
00:06:11,010 --> 00:06:16,890
risk or<font color="#CCCCCC"> the next step is the</font><font color="#E5E5E5"> fourth step</font>

148
00:06:14,280 --> 00:06:18,570
is<font color="#E5E5E5"> the form summation so this</font>

149
00:06:16,890 --> 00:06:20,400
essentially doesn't<font color="#E5E5E5"> even have to be a</font>

150
00:06:18,570 --> 00:06:22,409
<font color="#E5E5E5">formal summation think of it as some</font>

151
00:06:20,400 --> 00:06:24,539
<font color="#CCCCCC">sort of a state change</font><font color="#E5E5E5"> which can cause</font>

152
00:06:22,410 --> 00:06:26,850
some<font color="#E5E5E5"> sort</font><font color="#CCCCCC"> of an abusive activity so in</font>

153
00:06:24,540 --> 00:06:28,410
our example of authentication<font color="#CCCCCC"> the form</font>

154
00:06:26,850 --> 00:06:29,640
<font color="#CCCCCC">submission is basically you're trying to</font>

155
00:06:28,410 --> 00:06:33,060
brute force

156
00:06:29,640 --> 00:06:35,039
for example the authentication page<font color="#E5E5E5"> so</font>

157
00:06:33,060 --> 00:06:37,710
in the during<font color="#E5E5E5"> the form summation the web</font>

158
00:06:35,040 --> 00:06:39,780
<font color="#E5E5E5">server web server now gets back the</font>

159
00:06:37,710 --> 00:06:41,430
content and then the web server

160
00:06:39,780 --> 00:06:44,219
basically queries the service provider

161
00:06:41,430 --> 00:06:46,290
which is the fifth step is tell me more

162
00:06:44,220 --> 00:06:47,310
about<font color="#E5E5E5"> this request</font><font color="#CCCCCC"> what do you know</font>

163
00:06:46,290 --> 00:06:49,650
about this browser<font color="#E5E5E5"> what do you know</font>

164
00:06:47,310 --> 00:06:51,960
about this user<font color="#CCCCCC"> can you tell me anything</font>

165
00:06:49,650 --> 00:06:54,570
<font color="#E5E5E5">like what is your prediction score can I</font>

166
00:06:51,960 --> 00:06:57,479
show<font color="#CCCCCC"> this user in should I</font><font color="#E5E5E5"> allow this</font>

167
00:06:54,570 --> 00:06:59,040
activity<font color="#CCCCCC"> or should I not</font><font color="#E5E5E5"> right so the</font>

168
00:06:57,480 --> 00:07:01,980
service provider responds back<font color="#CCCCCC"> with the</font>

169
00:06:59,040 --> 00:07:03,990
risk<font color="#CCCCCC"> score</font><font color="#E5E5E5"> it had calculated earlier</font><font color="#CCCCCC"> and</font>

170
00:07:01,980 --> 00:07:06,750
then there is this final<font color="#E5E5E5"> piece which</font><font color="#CCCCCC"> is</font>

171
00:07:03,990 --> 00:07:08,460
the mitigator<font color="#E5E5E5"> which basically based on</font>

172
00:07:06,750 --> 00:07:10,530
this risk score and other computations

173
00:07:08,460 --> 00:07:12,630
<font color="#E5E5E5">it either allows the request to go</font>

174
00:07:10,530 --> 00:07:14,760
through so the activity you can do the

175
00:07:12,630 --> 00:07:16,770
activity<font color="#E5E5E5"> or it takes some sort</font><font color="#CCCCCC"> of</font>

176
00:07:14,760 --> 00:07:18,719
<font color="#CCCCCC">medicated action for example you can</font>

177
00:07:16,770 --> 00:07:20,880
block the request it can<font color="#CCCCCC"> rate limited it</font>

178
00:07:18,720 --> 00:07:22,710
can<font color="#CCCCCC"> throw some sort of a</font><font color="#E5E5E5"> catcher you</font>

179
00:07:20,880 --> 00:07:26,700
might have seen<font color="#E5E5E5"> some</font><font color="#CCCCCC"> of these CAPTCHAs</font>

180
00:07:22,710 --> 00:07:29,700
also so yeah this<font color="#E5E5E5"> is like an overall</font>

181
00:07:26,700 --> 00:07:31,650
architecture<font color="#E5E5E5"> where basically the service</font>

182
00:07:29,700 --> 00:07:34,520
provider is sending some magical piece

183
00:07:31,650 --> 00:07:37,140
of code in a browser which collects some

184
00:07:34,520 --> 00:07:38,820
fingerprints<font color="#E5E5E5"> or some signals and some</font>

185
00:07:37,140 --> 00:07:40,680
<font color="#E5E5E5">machine learning model trains on it and</font>

186
00:07:38,820 --> 00:07:42,510
then gets back<font color="#CCCCCC"> a risk</font><font color="#E5E5E5"> score and based on</font>

187
00:07:40,680 --> 00:07:47,220
<font color="#E5E5E5">the risk score you decide do I want</font>

188
00:07:42,510 --> 00:07:50,969
allow<font color="#E5E5E5"> this activity or</font><font color="#CCCCCC"> not another</font>

189
00:07:47,220 --> 00:07:53,220
variant of another variant<font color="#E5E5E5"> this sort of</font>

190
00:07:50,970 --> 00:07:55,530
deployment model is an<font color="#CCCCCC"> inline deployment</font>

191
00:07:53,220 --> 00:07:57,690
model<font color="#E5E5E5"> where instead</font><font color="#CCCCCC"> of the service</font>

192
00:07:55,530 --> 00:08:00,150
provider<font color="#E5E5E5"> being somewhere else</font><font color="#CCCCCC"> the</font>

193
00:07:57,690 --> 00:08:02,640
service providers<font color="#CCCCCC"> inline this probably</font>

194
00:08:00,150 --> 00:08:05,429
<font color="#E5E5E5">is more common with if you are using</font>

195
00:08:02,640 --> 00:08:07,409
<font color="#E5E5E5">your probably</font><font color="#CCCCCC"> a CDN</font><font color="#E5E5E5"> and</font><font color="#CCCCCC"> then your</font>

196
00:08:05,430 --> 00:08:14,010
deployment<font color="#CCCCCC"> deploying something in the</font>

197
00:08:07,410 --> 00:08:15,770
CDN<font color="#E5E5E5"> so here things are</font><font color="#CCCCCC"> slightly simpler</font>

198
00:08:14,010 --> 00:08:18,210
where basically the<font color="#E5E5E5"> inline device</font>

199
00:08:15,770 --> 00:08:20,549
magically injects this fingerprint or<font color="#CCCCCC"> TS</font>

200
00:08:18,210 --> 00:08:21,900
file directly into<font color="#CCCCCC"> the page itself so</font>

201
00:08:20,550 --> 00:08:23,280
you<font color="#E5E5E5"> basically don't have to even modify</font>

202
00:08:21,900 --> 00:08:25,890
<font color="#E5E5E5">the source code of</font><font color="#CCCCCC"> the</font><font color="#E5E5E5"> of your</font>

203
00:08:23,280 --> 00:08:34,049
application<font color="#E5E5E5"> and an inline device also</font>

204
00:08:25,890 --> 00:08:36,390
<font color="#E5E5E5">acts as the mediator essentially cool</font>

205
00:08:34,049 --> 00:08:37,439
so given this like deployment model

206
00:08:36,390 --> 00:08:38,280
let's talk about the attacker it goes

207
00:08:37,440 --> 00:08:41,610
the attacker goals are pretty

208
00:08:38,280 --> 00:08:43,439
<font color="#E5E5E5">straightforward</font><font color="#CCCCCC"> like if I want it</font>

209
00:08:41,610 --> 00:08:44,490
<font color="#E5E5E5">basically if I'm an attacker and I want</font>

210
00:08:43,440 --> 00:08:46,770
to<font color="#E5E5E5"> conduct some sort of fraudulent</font>

211
00:08:44,490 --> 00:08:49,980
<font color="#E5E5E5">activity</font><font color="#CCCCCC"> I just want to do that without</font>

212
00:08:46,770 --> 00:08:52,350
basically<font color="#CCCCCC"> get being caught by</font><font color="#E5E5E5"> the fraud</font>

213
00:08:49,980 --> 00:08:53,610
detection<font color="#E5E5E5"> solution or if I'm trying to</font>

214
00:08:52,350 --> 00:08:54,900
<font color="#E5E5E5">automate some sort of an abusive</font>

215
00:08:53,610 --> 00:08:57,330
activity for example<font color="#CCCCCC"> creation</font>

216
00:08:54,900 --> 00:08:59,490
<font color="#E5E5E5">fake accounts</font><font color="#CCCCCC"> question of content I</font>

217
00:08:57,330 --> 00:09:01,290
basically want<font color="#E5E5E5"> to automate that using</font>

218
00:08:59,490 --> 00:09:06,300
some sort of a script without<font color="#E5E5E5"> getting</font>

219
00:09:01,290 --> 00:09:07,589
caught<font color="#E5E5E5"> like pretty straightforward</font><font color="#CCCCCC"> and</font>

220
00:09:06,300 --> 00:09:10,229
then of<font color="#CCCCCC"> course these solutions are</font>

221
00:09:07,590 --> 00:09:12,540
trying to protect against<font color="#E5E5E5"> that and then</font>

222
00:09:10,230 --> 00:09:14,160
the<font color="#E5E5E5"> threat model</font><font color="#CCCCCC"> here is so what are the</font>

223
00:09:12,540 --> 00:09:16,920
capabilities<font color="#E5E5E5"> capabilities of this</font>

224
00:09:14,160 --> 00:09:19,140
attacker<font color="#CCCCCC"> so in this model that attacker</font>

225
00:09:16,920 --> 00:09:20,310
basically controls the<font color="#CCCCCC"> client side so</font>

226
00:09:19,140 --> 00:09:23,370
they basically<font color="#CCCCCC"> control the</font><font color="#E5E5E5"> entire</font>

227
00:09:20,310 --> 00:09:26,219
browser<font color="#CCCCCC"> so they can basically craft</font>

228
00:09:23,370 --> 00:09:28,590
<font color="#E5E5E5">requests to the web server they can</font>

229
00:09:26,220 --> 00:09:30,210
modify the responses<font color="#E5E5E5"> whatever you need</font>

230
00:09:28,590 --> 00:09:34,320
so<font color="#E5E5E5"> essentially like if you go back to</font>

231
00:09:30,210 --> 00:09:37,460
the deployment diagram the basic control

232
00:09:34,320 --> 00:09:37,460
the<font color="#E5E5E5"> left-hand side the client browser</font>

233
00:09:38,780 --> 00:09:43,829
<font color="#E5E5E5">okay given</font><font color="#CCCCCC"> this set model</font><font color="#E5E5E5"> now like we</font>

234
00:09:41,910 --> 00:09:45,209
have established the architecture<font color="#CCCCCC"> you</font>

235
00:09:43,830 --> 00:09:48,740
<font color="#CCCCCC">have established your target goals we</font>

236
00:09:45,210 --> 00:09:50,850
have established like the threat<font color="#CCCCCC"> model</font>

237
00:09:48,740 --> 00:09:52,740
let's talk about the<font color="#E5E5E5"> security issues</font>

238
00:09:50,850 --> 00:09:55,230
with this sort of<font color="#CCCCCC"> architecture</font><font color="#E5E5E5"> the first</font>

239
00:09:52,740 --> 00:09:57,540
the<font color="#E5E5E5"> biggest problem here is you're</font>

240
00:09:55,230 --> 00:09:59,280
sending basically<font color="#E5E5E5"> JavaScript code</font><font color="#CCCCCC"> to all</font>

241
00:09:57,540 --> 00:10:00,870
the<font color="#CCCCCC"> browser's to</font><font color="#E5E5E5"> the browser and there</font>

242
00:09:59,280 --> 00:10:04,230
is<font color="#E5E5E5"> basically no</font><font color="#CCCCCC"> client side attestation</font>

243
00:10:00,870 --> 00:10:06,840
<font color="#E5E5E5">there is no no's underlying primitive</font>

244
00:10:04,230 --> 00:10:08,430
you can fall back to to make<font color="#E5E5E5"> sure that</font>

245
00:10:06,840 --> 00:10:11,190
the code which you're sending is

246
00:10:08,430 --> 00:10:12,660
actually running<font color="#E5E5E5"> and essentially you're</font>

247
00:10:11,190 --> 00:10:16,590
sending<font color="#E5E5E5"> this code in an attacker</font>

248
00:10:12,660 --> 00:10:17,610
<font color="#CCCCCC">controlled environment so let's see</font><font color="#E5E5E5"> like</font>

249
00:10:16,590 --> 00:10:20,700
what are the issues<font color="#E5E5E5"> which arise from</font>

250
00:10:17,610 --> 00:10:22,320
<font color="#E5E5E5">this so the first problem is the</font>

251
00:10:20,700 --> 00:10:24,420
attacker can basically<font color="#E5E5E5"> reverse engineer</font>

252
00:10:22,320 --> 00:10:28,110
the entire sensor so you're<font color="#E5E5E5"> sending this</font>

253
00:10:24,420 --> 00:10:30,270
magical fingerprint<font color="#CCCCCC"> JS file to as a</font>

254
00:10:28,110 --> 00:10:31,770
response<font color="#CCCCCC"> to every single</font><font color="#E5E5E5"> web request</font>

255
00:10:30,270 --> 00:10:33,540
say if I am an attacker and I make a

256
00:10:31,770 --> 00:10:36,270
<font color="#E5E5E5">request</font><font color="#CCCCCC"> I get back this</font><font color="#E5E5E5"> fingerprint</font><font color="#CCCCCC"> or</font>

257
00:10:33,540 --> 00:10:38,400
<font color="#CCCCCC">JS file and this</font><font color="#E5E5E5"> fingerprint this file</font>

258
00:10:36,270 --> 00:10:39,990
is where all the magic<font color="#CCCCCC"> happens where you</font>

259
00:10:38,400 --> 00:10:41,699
<font color="#E5E5E5">collect all</font><font color="#CCCCCC"> the signals for a machine</font>

260
00:10:39,990 --> 00:10:43,980
<font color="#CCCCCC">learning model or most</font><font color="#E5E5E5"> of the signals</font>

261
00:10:41,700 --> 00:10:45,990
<font color="#E5E5E5">for a</font><font color="#CCCCCC"> machine learning model</font><font color="#E5E5E5"> so I as an</font>

262
00:10:43,980 --> 00:10:48,600
attacker<font color="#E5E5E5"> I can open it up</font><font color="#CCCCCC"> and see</font>

263
00:10:45,990 --> 00:10:51,360
<font color="#E5E5E5">exactly like what I can open it up and</font>

264
00:10:48,600 --> 00:10:52,860
<font color="#E5E5E5">see exactly what</font><font color="#CCCCCC"> you are</font><font color="#E5E5E5"> looking</font><font color="#CCCCCC"> for so</font>

265
00:10:51,360 --> 00:10:55,890
<font color="#E5E5E5">let's talk</font><font color="#CCCCCC"> about what they are looking</font>

266
00:10:52,860 --> 00:10:59,250
<font color="#CCCCCC">for so the first big</font><font color="#E5E5E5"> piece is browser</font>

267
00:10:55,890 --> 00:11:01,640
fingerprinting<font color="#E5E5E5"> so essentially with</font>

268
00:10:59,250 --> 00:11:05,810
browser fingerprinting<font color="#CCCCCC"> the idea is that</font>

269
00:11:01,640 --> 00:11:08,639
you<font color="#E5E5E5"> want</font><font color="#CCCCCC"> a query that</font><font color="#E5E5E5"> the JavaScript</font>

270
00:11:05,810 --> 00:11:12,449
<font color="#E5E5E5">process and you want to ask</font>

271
00:11:08,639 --> 00:11:15,449
about basically<font color="#E5E5E5"> the browser or the</font>

272
00:11:12,449 --> 00:11:17,790
operating system or<font color="#CCCCCC"> the hardware so this</font>

273
00:11:15,449 --> 00:11:20,368
is a<font color="#E5E5E5"> screenshot from</font><font color="#CCCCCC"> this site</font><font color="#E5E5E5"> called</font>

274
00:11:17,790 --> 00:11:21,660
<font color="#CCCCCC">Penn optical ik dot</font><font color="#E5E5E5"> e</font><font color="#CCCCCC"> FF</font><font color="#E5E5E5"> dot org where</font>

275
00:11:20,369 --> 00:11:23,790
<font color="#E5E5E5">basically you can go to this</font><font color="#CCCCCC"> site and</font>

276
00:11:21,660 --> 00:11:25,410
<font color="#CCCCCC">then</font><font color="#E5E5E5"> you can test your browser and it</font>

277
00:11:23,790 --> 00:11:26,969
will<font color="#E5E5E5"> give you back your browser</font>

278
00:11:25,410 --> 00:11:29,309
fingerprint<font color="#CCCCCC"> so this is the browser</font>

279
00:11:26,970 --> 00:11:32,369
fingerprint of like my Chrome browser

280
00:11:29,309 --> 00:11:34,499
<font color="#E5E5E5">for example</font><font color="#CCCCCC"> and you have the list of</font>

281
00:11:32,369 --> 00:11:36,449
browser characteristics you are trying

282
00:11:34,499 --> 00:11:39,029
<font color="#E5E5E5">to fingerprint on the left</font><font color="#CCCCCC"> hand side for</font>

283
00:11:36,449 --> 00:11:40,079
<font color="#CCCCCC">example you have system fonts</font><font color="#E5E5E5"> so here</font>

284
00:11:39,029 --> 00:11:41,399
what<font color="#CCCCCC"> you</font><font color="#E5E5E5"> are looking for is you're</font>

285
00:11:40,079 --> 00:11:44,309
looking<font color="#E5E5E5"> for the set of fonts installed</font>

286
00:11:41,399 --> 00:11:45,569
on your<font color="#E5E5E5"> operating system right</font><font color="#CCCCCC"> on the</font>

287
00:11:44,309 --> 00:11:47,040
<font color="#CCCCCC">right-hand</font><font color="#E5E5E5"> side you</font><font color="#CCCCCC"> have the values so</font>

288
00:11:45,569 --> 00:11:50,160
these are the all the fonts which are

289
00:11:47,040 --> 00:11:52,769
installed<font color="#CCCCCC"> on my system and the third</font>

290
00:11:50,160 --> 00:11:54,809
interesting piece is the third column

291
00:11:52,769 --> 00:11:58,679
<font color="#CCCCCC">here which</font><font color="#E5E5E5"> is one</font><font color="#CCCCCC"> enix processors have</font>

292
00:11:54,809 --> 00:12:00,959
<font color="#E5E5E5">this value so one in</font><font color="#CCCCCC"> 20 dot 99 20.9 3</font>

293
00:11:58,679 --> 00:12:02,970
<font color="#E5E5E5">browsers or almost 21 browsers have</font>

294
00:12:00,959 --> 00:12:06,089
exactly the same<font color="#E5E5E5"> set</font><font color="#CCCCCC"> of system fonts as</font>

295
00:12:02,970 --> 00:12:07,619
my<font color="#E5E5E5"> browser</font><font color="#CCCCCC"> so essentially like if I was</font>

296
00:12:06,089 --> 00:12:10,860
some sort<font color="#E5E5E5"> of a data scientist and I was</font>

297
00:12:07,619 --> 00:12:13,489
looking at this data set of all browser

298
00:12:10,860 --> 00:12:16,079
fingerprints for all web requests<font color="#E5E5E5"> just</font>

299
00:12:13,489 --> 00:12:19,649
<font color="#CCCCCC">by looking at system fonts essentially</font>

300
00:12:16,079 --> 00:12:20,969
cut down<font color="#E5E5E5"> the data by 21 right so</font>

301
00:12:19,649 --> 00:12:22,739
<font color="#E5E5E5">essentially what you're trying to do is</font>

302
00:12:20,970 --> 00:12:25,369
you're<font color="#E5E5E5"> trying to query</font><font color="#CCCCCC"> for these browser</font>

303
00:12:22,739 --> 00:12:27,660
characteristics<font color="#E5E5E5"> and you're looking for</font>

304
00:12:25,369 --> 00:12:31,559
<font color="#E5E5E5">characteristics which kind of which make</font>

305
00:12:27,660 --> 00:12:33,389
a browser<font color="#E5E5E5"> semi unique and you want to</font>

306
00:12:31,559 --> 00:12:35,790
aggregate these signals<font color="#E5E5E5"> to basically</font>

307
00:12:33,389 --> 00:12:37,949
predict for example is<font color="#E5E5E5"> this a real real</font>

308
00:12:35,790 --> 00:12:40,199
browser<font color="#E5E5E5"> is this not a real browser or</font>

309
00:12:37,949 --> 00:12:46,079
how common is<font color="#CCCCCC"> this browser for this set</font>

310
00:12:40,199 --> 00:12:48,209
of<font color="#E5E5E5"> user and like just to</font><font color="#CCCCCC"> get</font><font color="#E5E5E5"> into a</font>

311
00:12:46,079 --> 00:12:49,769
little<font color="#E5E5E5"> bit more details browser</font>

312
00:12:48,209 --> 00:12:53,939
fingerprinting this is actually pretty

313
00:12:49,769 --> 00:12:56,730
<font color="#CCCCCC">old</font><font color="#E5E5E5"> technology</font><font color="#CCCCCC"> here are a list of things</font>

314
00:12:53,939 --> 00:12:59,279
which people<font color="#CCCCCC"> are looking for things like</font>

315
00:12:56,730 --> 00:13:01,949
any sorts of as I'm already mentioned

316
00:12:59,279 --> 00:13:04,049
fonts installed plugins<font color="#CCCCCC"> codecs language</font>

317
00:13:01,949 --> 00:13:06,859
packs<font color="#E5E5E5"> anything which</font><font color="#CCCCCC"> you install</font><font color="#E5E5E5"> on</font><font color="#CCCCCC"> your</font>

318
00:13:04,049 --> 00:13:10,739
system which can make you semi unique is

319
00:13:06,860 --> 00:13:12,329
pretty interesting<font color="#CCCCCC"> to</font><font color="#E5E5E5"> to them they're</font>

320
00:13:10,739 --> 00:13:13,739
looking for example information<font color="#CCCCCC"> about</font>

321
00:13:12,329 --> 00:13:14,449
<font color="#E5E5E5">your display the screen</font><font color="#CCCCCC"> size and so</font>

322
00:13:13,739 --> 00:13:16,559
forth

323
00:13:14,449 --> 00:13:19,469
<font color="#CCCCCC">simple stuff like operating system</font>

324
00:13:16,559 --> 00:13:21,089
version user registering<font color="#E5E5E5"> another</font>

325
00:13:19,470 --> 00:13:21,790
interesting piece is the<font color="#E5E5E5"> hardware</font>

326
00:13:21,089 --> 00:13:24,610
information

327
00:13:21,790 --> 00:13:26,860
so you<font color="#E5E5E5"> so here you're trying to</font>

328
00:13:24,610 --> 00:13:29,230
fingerprint the underlying<font color="#CCCCCC"> hardware from</font>

329
00:13:26,860 --> 00:13:31,420
<font color="#E5E5E5">JavaScript itself like the first piece</font>

330
00:13:29,230 --> 00:13:33,190
<font color="#CCCCCC">is the CPU architecture so that's pretty</font>

331
00:13:31,420 --> 00:13:35,560
<font color="#E5E5E5">straightforward</font><font color="#CCCCCC"> you want to ask for</font>

332
00:13:33,190 --> 00:13:38,530
example<font color="#CCCCCC"> how many</font><font color="#E5E5E5"> cores</font><font color="#CCCCCC"> are there</font><font color="#E5E5E5"> in this</font>

333
00:13:35,560 --> 00:13:40,060
processor and the next piece<font color="#CCCCCC"> is a GPU</font>

334
00:13:38,530 --> 00:13:43,300
<font color="#E5E5E5">canvas fingerprinting</font><font color="#CCCCCC"> which is pretty</font>

335
00:13:40,060 --> 00:13:45,400
interesting<font color="#CCCCCC"> so this came out a few years</font>

336
00:13:43,300 --> 00:13:48,670
<font color="#E5E5E5">ago from a research paper I think from</font>

337
00:13:45,400 --> 00:13:50,319
UCSD where the technique is what you do

338
00:13:48,670 --> 00:13:53,110
is you<font color="#CCCCCC"> paste</font><font color="#E5E5E5"> it create some sort of an</font>

339
00:13:50,320 --> 00:13:55,270
<font color="#CCCCCC">html5</font><font color="#E5E5E5"> canvas element and then you draw</font>

340
00:13:53,110 --> 00:13:59,350
some random image on top of<font color="#E5E5E5"> this canvas</font>

341
00:13:55,270 --> 00:14:01,060
element<font color="#CCCCCC"> and then what you do is</font><font color="#E5E5E5"> you try</font>

342
00:13:59,350 --> 00:14:03,670
<font color="#CCCCCC">to read the raw</font><font color="#E5E5E5"> pixels back from this</font>

343
00:14:01,060 --> 00:14:07,449
canvas element and the problem is<font color="#E5E5E5"> that</font>

344
00:14:03,670 --> 00:14:09,520
due<font color="#E5E5E5"> to differences in</font><font color="#CCCCCC"> the actual</font><font color="#E5E5E5"> GPU</font>

345
00:14:07,450 --> 00:14:11,650
<font color="#CCCCCC">hardware</font><font color="#E5E5E5"> and also because</font><font color="#CCCCCC"> of</font><font color="#E5E5E5"> the device</font>

346
00:14:09,520 --> 00:14:13,930
drivers when you read<font color="#E5E5E5"> back the pixels</font>

347
00:14:11,650 --> 00:14:16,240
the pixels are fingerprint<font color="#CCCCCC"> Abell based</font>

348
00:14:13,930 --> 00:14:18,400
on the actual hardware and the device

349
00:14:16,240 --> 00:14:20,200
driver itself which is<font color="#E5E5E5"> very interesting</font>

350
00:14:18,400 --> 00:14:22,060
<font color="#E5E5E5">right so you basically draw something on</font>

351
00:14:20,200 --> 00:14:24,610
<font color="#E5E5E5">a canvas and</font><font color="#CCCCCC"> you read back and then the</font>

352
00:14:22,060 --> 00:14:26,680
pixels are semi unique<font color="#E5E5E5"> and this</font><font color="#CCCCCC"> is</font><font color="#E5E5E5"> also</font>

353
00:14:24,610 --> 00:14:28,330
<font color="#E5E5E5">really cool</font><font color="#CCCCCC"> because</font><font color="#E5E5E5"> this is also really</font>

354
00:14:26,680 --> 00:14:30,819
stable<font color="#E5E5E5"> so it doesn't really change over</font>

355
00:14:28,330 --> 00:14:32,590
time because<font color="#CCCCCC"> your GPU</font><font color="#E5E5E5"> doesn't change or</font>

356
00:14:30,820 --> 00:14:35,800
time<font color="#E5E5E5"> and then your driver is really</font>

357
00:14:32,590 --> 00:14:37,120
update<font color="#CCCCCC"> another</font><font color="#E5E5E5"> interesting one is audio</font>

358
00:14:35,800 --> 00:14:40,060
stack fingerprinting<font color="#CCCCCC"> we're here</font>

359
00:14:37,120 --> 00:14:41,500
essentially trying to fingerprint<font color="#CCCCCC"> you're</font>

360
00:14:40,060 --> 00:14:44,199
doing the same<font color="#E5E5E5"> thing with the audio</font>

361
00:14:41,500 --> 00:14:48,070
stack itself<font color="#E5E5E5"> with the sound card and the</font>

362
00:14:44,200 --> 00:14:51,520
audio drivers and one interesting<font color="#E5E5E5"> tidbit</font>

363
00:14:48,070 --> 00:14:54,880
here<font color="#E5E5E5"> is this</font><font color="#CCCCCC"> I was introduced one year</font>

364
00:14:51,520 --> 00:14:57,250
<font color="#CCCCCC">ago around last year</font><font color="#E5E5E5"> by a paper from</font>

365
00:14:54,880 --> 00:14:58,900
Princeton and then as soon as they

366
00:14:57,250 --> 00:15:00,880
published the<font color="#E5E5E5"> paper within a within a</font>

367
00:14:58,900 --> 00:15:02,620
month some vendors<font color="#E5E5E5"> had basically</font>

368
00:15:00,880 --> 00:15:04,360
implemented the same or similar

369
00:15:02,620 --> 00:15:05,590
functionality which is<font color="#E5E5E5"> pretty</font>

370
00:15:04,360 --> 00:15:07,060
<font color="#E5E5E5">interesting which means that they are</font>

371
00:15:05,590 --> 00:15:10,720
<font color="#CCCCCC">looking for as much information as</font>

372
00:15:07,060 --> 00:15:12,609
<font color="#CCCCCC">possible so another scary part is none</font>

373
00:15:10,720 --> 00:15:15,520
<font color="#CCCCCC">of this requires any permissions right</font>

374
00:15:12,610 --> 00:15:18,700
<font color="#CCCCCC">it's JavaScript code you can read like</font>

375
00:15:15,520 --> 00:15:20,770
whatever you<font color="#E5E5E5"> want another interesting</font>

376
00:15:18,700 --> 00:15:22,570
stuff I<font color="#E5E5E5"> found was people doing weird</font>

377
00:15:20,770 --> 00:15:24,130
floating-point calculations<font color="#E5E5E5"> so they</font>

378
00:15:22,570 --> 00:15:26,230
would send<font color="#CCCCCC"> down like weird mathematical</font>

379
00:15:24,130 --> 00:15:28,930
problems<font color="#E5E5E5"> and they were they were looking</font>

380
00:15:26,230 --> 00:15:30,970
for<font color="#E5E5E5"> solutions like this did this code</font>

381
00:15:28,930 --> 00:15:32,739
actually<font color="#E5E5E5"> run did actually</font><font color="#CCCCCC"> get a</font><font color="#E5E5E5"> solution</font>

382
00:15:30,970 --> 00:15:35,260
<font color="#CCCCCC">for</font><font color="#E5E5E5"> this mathematical problem or they</font>

383
00:15:32,740 --> 00:15:37,090
were doing<font color="#E5E5E5"> weird manipulations or</font><font color="#CCCCCC"> Dom</font>

384
00:15:35,260 --> 00:15:39,790
some sort of a fake item<font color="#E5E5E5"> and the Dom</font>

385
00:15:37,090 --> 00:15:44,800
inserted in the Dom remove it<font color="#E5E5E5"> and so</font>

386
00:15:39,790 --> 00:15:49,060
forth<font color="#CCCCCC"> the other</font><font color="#E5E5E5"> interesting piece here</font>

387
00:15:44,800 --> 00:15:50,229
is user tracking all also for<font color="#CCCCCC"> this</font><font color="#E5E5E5"> for</font>

388
00:15:49,060 --> 00:15:52,839
user tracking<font color="#E5E5E5"> you don't need any</font>

389
00:15:50,230 --> 00:15:55,150
permissions<font color="#E5E5E5"> here like this is pretty</font>

390
00:15:52,840 --> 00:15:56,110
<font color="#E5E5E5">scary</font><font color="#CCCCCC"> stuff not everyone</font><font color="#E5E5E5"> does this every</font>

391
00:15:55,150 --> 00:15:57,550
almost everyone does browser

392
00:15:56,110 --> 00:15:59,620
fingerprinting not everyone does user

393
00:15:57,550 --> 00:16:00,729
<font color="#E5E5E5">tracking but with user tracking what</font>

394
00:15:59,620 --> 00:16:04,300
you're<font color="#E5E5E5"> essentially doing is you're</font>

395
00:16:00,730 --> 00:16:06,850
hooking for event types<font color="#CCCCCC"> in JavaScript</font>

396
00:16:04,300 --> 00:16:09,550
<font color="#E5E5E5">and the event types are related to</font>

397
00:16:06,850 --> 00:16:13,180
interesting stuff like mouse<font color="#E5E5E5"> movements</font>

398
00:16:09,550 --> 00:16:15,609
<font color="#CCCCCC">key presses if you are using a browser</font>

399
00:16:13,180 --> 00:16:17,260
on<font color="#CCCCCC"> a mobile device like what is the</font>

400
00:16:15,610 --> 00:16:19,360
device orientation did you<font color="#E5E5E5"> change the</font>

401
00:16:17,260 --> 00:16:22,120
device orientation<font color="#E5E5E5"> and essentially what</font>

402
00:16:19,360 --> 00:16:24,280
you are<font color="#CCCCCC"> looking for is your you hook and</font>

403
00:16:22,120 --> 00:16:26,260
you establish callbacks<font color="#E5E5E5"> so whenever an</font>

404
00:16:24,280 --> 00:16:28,630
event happens you get<font color="#E5E5E5"> the event type and</font>

405
00:16:26,260 --> 00:16:29,560
<font color="#E5E5E5">then you get the timestamp and what you</font>

406
00:16:28,630 --> 00:16:33,130
are essentially doing<font color="#E5E5E5"> is you're creating</font>

407
00:16:29,560 --> 00:16:36,189
<font color="#CCCCCC">this vector of</font><font color="#E5E5E5"> these tuples of event</font>

408
00:16:33,130 --> 00:16:38,560
type and<font color="#CCCCCC"> timestamp which you can</font>

409
00:16:36,190 --> 00:16:41,020
basically check on the server side<font color="#CCCCCC"> so</font>

410
00:16:38,560 --> 00:16:42,849
<font color="#E5E5E5">essentially what you would get is</font><font color="#CCCCCC"> oh at</font>

411
00:16:41,020 --> 00:16:45,130
the beginning of<font color="#E5E5E5"> the page load the</font>

412
00:16:42,850 --> 00:16:46,780
<font color="#CCCCCC">user's mouse was at this coordinate then</font>

413
00:16:45,130 --> 00:16:48,520
slowly they move the mouse<font color="#CCCCCC"> to this</font>

414
00:16:46,780 --> 00:16:50,709
coordinate<font color="#E5E5E5"> then they clicked it then</font>

415
00:16:48,520 --> 00:16:52,870
they started typing and and they'd press

416
00:16:50,710 --> 00:16:54,580
these keys and<font color="#CCCCCC"> then</font><font color="#E5E5E5"> essentially</font>

417
00:16:52,870 --> 00:16:56,200
basically<font color="#E5E5E5"> you had the entire kind of</font>

418
00:16:54,580 --> 00:17:00,070
session<font color="#E5E5E5"> and then you can recreate it on</font>

419
00:16:56,200 --> 00:17:01,300
server<font color="#E5E5E5"> side and another cool but scary</font>

420
00:17:00,070 --> 00:17:03,430
stuff is then you can also start

421
00:17:01,300 --> 00:17:06,099
<font color="#E5E5E5">fingerprinting the user pretty carefully</font>

422
00:17:03,430 --> 00:17:07,599
like what is there typing<font color="#E5E5E5"> behavior how</font>

423
00:17:06,099 --> 00:17:10,899
fast<font color="#E5E5E5"> do the type how do they usually</font>

424
00:17:07,599 --> 00:17:12,490
move their<font color="#E5E5E5"> mouse and so forth yeah and</font>

425
00:17:10,900 --> 00:17:15,640
then<font color="#CCCCCC"> I again like this is</font><font color="#E5E5E5"> pretty scary</font>

426
00:17:12,490 --> 00:17:17,290
stuff<font color="#E5E5E5"> you don't</font><font color="#CCCCCC"> need any permissions for</font>

427
00:17:15,640 --> 00:17:20,440
this and yeah some<font color="#E5E5E5"> renders are</font>

428
00:17:17,290 --> 00:17:22,480
definitely<font color="#E5E5E5"> doing this so yeah you have</font>

429
00:17:20,440 --> 00:17:25,079
the browser fingerprinting piece and

430
00:17:22,480 --> 00:17:30,700
then<font color="#E5E5E5"> you have the user tracking piece</font>

431
00:17:25,079 --> 00:17:33,070
the next piece is<font color="#CCCCCC"> anti tempering</font><font color="#E5E5E5"> so so</font>

432
00:17:30,700 --> 00:17:35,320
these<font color="#E5E5E5"> solutions these vendors are</font>

433
00:17:33,070 --> 00:17:36,700
in-house solutions they know that they

434
00:17:35,320 --> 00:17:39,669
are serving the<font color="#E5E5E5"> JavaScript with every</font>

435
00:17:36,700 --> 00:17:42,660
single<font color="#E5E5E5"> web request</font><font color="#CCCCCC"> so they know that</font>

436
00:17:39,670 --> 00:17:45,340
<font color="#E5E5E5">attackers</font><font color="#CCCCCC"> are looking at this code so</font>

437
00:17:42,660 --> 00:17:47,200
what can<font color="#E5E5E5"> they do</font><font color="#CCCCCC"> so</font><font color="#E5E5E5"> they're basically</font>

438
00:17:45,340 --> 00:17:49,070
looking they're implementing some anti

439
00:17:47,200 --> 00:17:51,980
tampering<font color="#E5E5E5"> technologies</font>

440
00:17:49,070 --> 00:17:54,320
<font color="#CCCCCC">I have seen like obfuscation being</font>

441
00:17:51,980 --> 00:17:56,090
implemented<font color="#CCCCCC"> busy</font><font color="#E5E5E5"> there there's an entire</font>

442
00:17:54,320 --> 00:17:58,600
spectrum where some<font color="#CCCCCC"> lenders</font><font color="#E5E5E5"> don't really</font>

443
00:17:56,090 --> 00:18:01,129
care at all<font color="#E5E5E5"> and other vendors basically</font>

444
00:17:58,600 --> 00:18:04,310
implementing really how heavily<font color="#CCCCCC"> offers</font>

445
00:18:01,130 --> 00:18:06,650
<font color="#CCCCCC">carried code</font><font color="#E5E5E5"> I've also seen like</font><font color="#CCCCCC"> malware</font>

446
00:18:04,310 --> 00:18:08,300
like pad code where you would send down

447
00:18:06,650 --> 00:18:10,760
<font color="#E5E5E5">some JavaScript which is really packed</font>

448
00:18:08,300 --> 00:18:12,530
and then you have a run unpacking<font color="#E5E5E5"> stub</font>

449
00:18:10,760 --> 00:18:16,780
which busy<font color="#CCCCCC"> unpack the JavaScript and</font>

450
00:18:12,530 --> 00:18:21,200
<font color="#CCCCCC">Ronsard</font><font color="#E5E5E5"> pretty interesting</font>

451
00:18:16,780 --> 00:18:22,730
another<font color="#E5E5E5"> interesting implementation I've</font>

452
00:18:21,200 --> 00:18:24,590
seen from like one particular<font color="#CCCCCC"> vendor is</font>

453
00:18:22,730 --> 00:18:26,510
<font color="#E5E5E5">they're randomizing the location of the</font>

454
00:18:24,590 --> 00:18:29,060
<font color="#E5E5E5">JavaScript file itself</font>

455
00:18:26,510 --> 00:18:30,920
so<font color="#CCCCCC"> you're</font><font color="#E5E5E5"> loading this file from like</font>

456
00:18:29,060 --> 00:18:32,840
some sort of<font color="#CCCCCC"> service provider</font><font color="#E5E5E5"> every time</font>

457
00:18:30,920 --> 00:18:35,000
you load the<font color="#CCCCCC"> page the source code of</font><font color="#E5E5E5"> the</font>

458
00:18:32,840 --> 00:18:37,520
page<font color="#E5E5E5"> would change and it would point to</font>

459
00:18:35,000 --> 00:18:38,960
a different<font color="#E5E5E5"> file location which was</font>

460
00:18:37,520 --> 00:18:41,120
<font color="#CCCCCC">interesting and</font><font color="#E5E5E5"> some wonders have gone</font>

461
00:18:38,960 --> 00:18:43,610
<font color="#E5E5E5">even one step forward but every single</font>

462
00:18:41,120 --> 00:18:46,610
<font color="#CCCCCC">time you</font><font color="#E5E5E5"> know the page</font><font color="#CCCCCC"> this javascript</font>

463
00:18:43,610 --> 00:18:51,409
code<font color="#E5E5E5"> changes dynamically which is</font>

464
00:18:46,610 --> 00:18:53,959
<font color="#E5E5E5">interesting but yeah you want to run</font>

465
00:18:51,410 --> 00:18:56,660
this code<font color="#E5E5E5"> but yeah it's not</font><font color="#CCCCCC"> much you can</font>

466
00:18:53,960 --> 00:18:59,000
do<font color="#E5E5E5"> so the final piece is the payload</font>

467
00:18:56,660 --> 00:19:00,440
itself<font color="#CCCCCC"> see you ran all this stuff right</font>

468
00:18:59,000 --> 00:19:02,780
you collected the browser fingerprint

469
00:19:00,440 --> 00:19:05,270
<font color="#E5E5E5">you corrected the user behavior now you</font>

470
00:19:02,780 --> 00:19:06,889
want<font color="#E5E5E5"> to ship it</font><font color="#CCCCCC"> back to the service</font>

471
00:19:05,270 --> 00:19:10,220
<font color="#CCCCCC">provider like that's the payload</font><font color="#E5E5E5"> and</font>

472
00:19:06,890 --> 00:19:13,190
I've seen different<font color="#CCCCCC"> implementations</font><font color="#E5E5E5"> base</font>

473
00:19:10,220 --> 00:19:15,560
64 is very common say basically<font color="#E5E5E5"> create a</font>

474
00:19:13,190 --> 00:19:19,040
giant blob and<font color="#E5E5E5"> then</font><font color="#CCCCCC"> you basics t4</font>

475
00:19:15,560 --> 00:19:20,570
<font color="#E5E5E5">encoded and you send it</font><font color="#CCCCCC"> back</font><font color="#E5E5E5"> some</font>

476
00:19:19,040 --> 00:19:22,760
<font color="#E5E5E5">vendors</font><font color="#CCCCCC"> were using</font><font color="#E5E5E5"> symmetric encryption</font>

477
00:19:20,570 --> 00:19:25,370
<font color="#E5E5E5">I don't even know why you would</font><font color="#CCCCCC"> even</font><font color="#E5E5E5"> try</font>

478
00:19:22,760 --> 00:19:27,290
that<font color="#E5E5E5"> like one vendor was using</font><font color="#CCCCCC"> DES and</font>

479
00:19:25,370 --> 00:19:31,820
then the key for<font color="#E5E5E5"> DES was in the source</font>

480
00:19:27,290 --> 00:19:33,230
code<font color="#E5E5E5"> so like I know why some other</font>

481
00:19:31,820 --> 00:19:35,600
<font color="#E5E5E5">vendors</font><font color="#CCCCCC"> for actually implementing their</font>

482
00:19:33,230 --> 00:19:37,280
<font color="#E5E5E5">own custom encryption schemes so they</font>

483
00:19:35,600 --> 00:19:40,340
would come up<font color="#CCCCCC"> with some weird function</font>

484
00:19:37,280 --> 00:19:42,230
to encrypt the blob right the problem

485
00:19:40,340 --> 00:19:43,850
<font color="#E5E5E5">here is if I'm an attacker</font><font color="#CCCCCC"> I actually</font>

486
00:19:42,230 --> 00:19:45,470
don't even care about<font color="#E5E5E5"> the decryption</font>

487
00:19:43,850 --> 00:19:47,209
<font color="#E5E5E5">algorithm</font><font color="#CCCCCC"> I only cared about the</font>

488
00:19:45,470 --> 00:19:48,320
encryption algorithm<font color="#E5E5E5"> and then I can</font>

489
00:19:47,210 --> 00:19:49,880
basically<font color="#E5E5E5"> rip out the encryption</font>

490
00:19:48,320 --> 00:19:52,310
algorithm<font color="#E5E5E5"> from the JavaScript</font><font color="#CCCCCC"> and</font>

491
00:19:49,880 --> 00:19:56,060
implement it in<font color="#E5E5E5"> my own scripts right so</font>

492
00:19:52,310 --> 00:19:58,429
yeah basically<font color="#E5E5E5"> there is no</font><font color="#CCCCCC"> client-side</font>

493
00:19:56,060 --> 00:20:00,260
attestation so people are trying various

494
00:19:58,430 --> 00:20:01,940
levels of stuff<font color="#CCCCCC"> but</font><font color="#E5E5E5"> yeah none of this</font>

495
00:20:00,260 --> 00:20:05,040
actually works

496
00:20:01,940 --> 00:20:06,480
next problem is<font color="#E5E5E5"> there are actually no</font>

497
00:20:05,040 --> 00:20:08,850
guarantees<font color="#CCCCCC"> of correct execution of</font>

498
00:20:06,480 --> 00:20:10,230
JavaScript<font color="#E5E5E5"> so first problem was you were</font>

499
00:20:08,850 --> 00:20:11,070
<font color="#E5E5E5">sending this code to all the attackers</font>

500
00:20:10,230 --> 00:20:13,800
as like a<font color="#E5E5E5"> nose</font>

501
00:20:11,070 --> 00:20:16,320
what you're looking<font color="#E5E5E5"> for the next</font><font color="#CCCCCC"> problem</font>

502
00:20:13,800 --> 00:20:20,580
is this code actually<font color="#E5E5E5"> doesn't even have</font>

503
00:20:16,320 --> 00:20:22,230
to execute correctly<font color="#E5E5E5"> so I would say that</font>

504
00:20:20,580 --> 00:20:23,790
<font color="#E5E5E5">the dumb bus attack here was the</font>

505
00:20:22,230 --> 00:20:25,050
stripping attack<font color="#E5E5E5"> where what you do is</font>

506
00:20:23,790 --> 00:20:28,500
<font color="#CCCCCC">you actually</font><font color="#E5E5E5"> don't even load the</font>

507
00:20:25,050 --> 00:20:30,780
JavaScript<font color="#CCCCCC"> and then you of</font><font color="#E5E5E5"> course never</font>

508
00:20:28,500 --> 00:20:32,850
send the fingerprint back<font color="#E5E5E5"> and and then</font>

509
00:20:30,780 --> 00:20:34,350
the risk code is never calculated so

510
00:20:32,850 --> 00:20:35,730
when when the web server<font color="#E5E5E5"> basically asked</font>

511
00:20:34,350 --> 00:20:37,800
for the risk or it doesn't get anything

512
00:20:35,730 --> 00:20:41,250
back and then the entire thing basically

513
00:20:37,800 --> 00:20:44,490
<font color="#CCCCCC">fails open</font><font color="#E5E5E5"> I don't know why you would do</font>

514
00:20:41,250 --> 00:20:47,880
<font color="#CCCCCC">that</font><font color="#E5E5E5"> maybe they</font><font color="#CCCCCC"> are</font><font color="#E5E5E5"> in some sort</font><font color="#CCCCCC"> of a</font>

515
00:20:44,490 --> 00:20:51,540
trial mode<font color="#CCCCCC"> I don't know but this has</font>

516
00:20:47,880 --> 00:20:53,880
<font color="#CCCCCC">definitely</font><font color="#E5E5E5"> happened other common problem</font>

517
00:20:51,540 --> 00:20:55,680
is replay attacks so I talked<font color="#CCCCCC"> about</font><font color="#E5E5E5"> this</font>

518
00:20:53,880 --> 00:20:58,890
giant<font color="#CCCCCC"> blob</font><font color="#E5E5E5"> this payload which you are</font>

519
00:20:55,680 --> 00:21:02,100
sending<font color="#CCCCCC"> back like here is a like a an</font>

520
00:20:58,890 --> 00:21:04,140
implementation for<font color="#CCCCCC"> PLC in this case</font>

521
00:21:02,100 --> 00:21:07,379
fingerprint<font color="#E5E5E5"> equals something that's the</font>

522
00:21:04,140 --> 00:21:10,140
payload<font color="#CCCCCC"> and then there is no actually</font>

523
00:21:07,380 --> 00:21:12,810
there's no token within the payload

524
00:21:10,140 --> 00:21:14,880
which is dynamic<font color="#E5E5E5"> right so on</font><font color="#CCCCCC"> server-side</font>

525
00:21:12,810 --> 00:21:17,280
there<font color="#E5E5E5"> are no checks on the freshness of</font>

526
00:21:14,880 --> 00:21:19,110
<font color="#E5E5E5">the payload so the problem is</font><font color="#CCCCCC"> that if I</font>

527
00:21:17,280 --> 00:21:20,760
<font color="#E5E5E5">can capture this in something like</font><font color="#CCCCCC"> per</font><font color="#E5E5E5"> a</font>

528
00:21:19,110 --> 00:21:23,399
person sort of man-in-the-middle proxy<font color="#E5E5E5"> I</font>

529
00:21:20,760 --> 00:21:25,260
can write a<font color="#E5E5E5"> script which basically sends</font>

530
00:21:23,400 --> 00:21:27,180
<font color="#E5E5E5">his blob or</font><font color="#CCCCCC"> modify this blob and</font>

531
00:21:25,260 --> 00:21:29,450
actually have to<font color="#E5E5E5"> never load the page and</font>

532
00:21:27,180 --> 00:21:34,050
I<font color="#E5E5E5"> will never run the script at all right</font>

533
00:21:29,450 --> 00:21:35,520
<font color="#E5E5E5">so replay attacks big big problem</font><font color="#CCCCCC"> okay</font>

534
00:21:34,050 --> 00:21:39,360
<font color="#E5E5E5">some people</font><font color="#CCCCCC"> have tried</font><font color="#E5E5E5"> to solve this</font>

535
00:21:35,520 --> 00:21:41,550
<font color="#CCCCCC">problem</font><font color="#E5E5E5"> with dynamic tokens like one</font>

536
00:21:39,360 --> 00:21:43,350
specific vendor or what they do is they

537
00:21:41,550 --> 00:21:45,270
create<font color="#CCCCCC"> a dynamic token to look for</font>

538
00:21:43,350 --> 00:21:47,490
freshness<font color="#E5E5E5"> of the pillow and then this</font>

539
00:21:45,270 --> 00:21:49,080
token is generated from the<font color="#E5E5E5"> timestamp</font><font color="#CCCCCC"> so</font>

540
00:21:47,490 --> 00:21:50,370
there is a function<font color="#CCCCCC"> f which takes in the</font>

541
00:21:49,080 --> 00:21:53,460
input their current timestamp<font color="#E5E5E5"> and</font>

542
00:21:50,370 --> 00:21:55,530
generates a token and then when they are

543
00:21:53,460 --> 00:21:58,500
<font color="#E5E5E5">sending the payload they append this</font>

544
00:21:55,530 --> 00:21:59,820
token say T<font color="#E5E5E5"> - at the beginning of the</font>

545
00:21:58,500 --> 00:22:02,460
<font color="#E5E5E5">payload and at the end of the payload</font>

546
00:21:59,820 --> 00:22:04,830
they append the timestamp<font color="#CCCCCC"> so on</font>

547
00:22:02,460 --> 00:22:06,420
<font color="#CCCCCC">server-side they take out the timestamp</font>

548
00:22:04,830 --> 00:22:09,990
<font color="#CCCCCC">they apply the same function f</font><font color="#E5E5E5"> and match</font>

549
00:22:06,420 --> 00:22:12,390
it with<font color="#CCCCCC"> T - which again</font><font color="#E5E5E5"> you can</font>

550
00:22:09,990 --> 00:22:14,400
replicate the<font color="#E5E5E5"> same thing on on your side</font>

551
00:22:12,390 --> 00:22:16,250
as well<font color="#CCCCCC"> right it is not providing any</font>

552
00:22:14,400 --> 00:22:20,670
<font color="#E5E5E5">sort of value</font>

553
00:22:16,250 --> 00:22:22,410
yeah other problems<font color="#E5E5E5"> yeah</font>

554
00:22:20,670 --> 00:22:24,480
headless browsers so headless browsers

555
00:22:22,410 --> 00:22:25,860
something like<font color="#E5E5E5"> selenium people use it</font>

556
00:22:24,480 --> 00:22:30,660
for<font color="#CCCCCC"> testing all the time</font>

557
00:22:25,860 --> 00:22:32,040
phantom<font color="#CCCCCC"> gears is also pretty common</font><font color="#E5E5E5"> some</font>

558
00:22:30,660 --> 00:22:33,900
of these<font color="#CCCCCC"> and these vendors are aware of</font>

559
00:22:32,040 --> 00:22:36,510
<font color="#E5E5E5">this</font><font color="#CCCCCC"> a few of</font><font color="#E5E5E5"> these vendors are aware</font><font color="#CCCCCC"> of</font>

560
00:22:33,900 --> 00:22:38,790
<font color="#E5E5E5">this</font><font color="#CCCCCC"> they are</font><font color="#E5E5E5"> also checking</font><font color="#CCCCCC"> for presence</font>

561
00:22:36,510 --> 00:22:40,710
of selenium or phantom gears<font color="#CCCCCC"> they</font><font color="#E5E5E5"> are</font>

562
00:22:38,790 --> 00:22:44,220
<font color="#E5E5E5">checking for presence of psyllium and</font>

563
00:22:40,710 --> 00:22:45,530
phantom<font color="#E5E5E5"> GS in JavaScript which again</font>

564
00:22:44,220 --> 00:22:50,960
yeah

565
00:22:45,530 --> 00:22:54,600
goes<font color="#E5E5E5"> back</font><font color="#CCCCCC"> to</font><font color="#E5E5E5"> the same problem</font><font color="#CCCCCC"> okay now</font>

566
00:22:50,960 --> 00:22:56,700
in<font color="#E5E5E5"> certain certain cases</font><font color="#CCCCCC"> thus the</font>

567
00:22:54,600 --> 00:22:58,350
<font color="#CCCCCC">JavaScript is heavily obfuscated so</font>

568
00:22:56,700 --> 00:23:01,170
every single<font color="#CCCCCC"> time you're</font><font color="#E5E5E5"> sending this</font>

569
00:22:58,350 --> 00:23:06,480
code<font color="#CCCCCC"> it's</font><font color="#E5E5E5"> really hard to like it was</font>

570
00:23:01,170 --> 00:23:07,830
<font color="#E5E5E5">engineer it</font><font color="#CCCCCC"> so in that case it's pretty</font>

571
00:23:06,480 --> 00:23:10,290
<font color="#E5E5E5">hard to basically write</font><font color="#CCCCCC"> a script and</font>

572
00:23:07,830 --> 00:23:13,050
<font color="#E5E5E5">then automate everything the problem</font>

573
00:23:10,290 --> 00:23:15,450
there<font color="#CCCCCC"> is the script</font><font color="#E5E5E5"> even</font><font color="#CCCCCC"> though it's</font>

574
00:23:13,050 --> 00:23:16,620
gathering<font color="#CCCCCC"> all these fingerprints</font><font color="#E5E5E5"> there</font>

575
00:23:15,450 --> 00:23:19,350
are still no guarantees<font color="#E5E5E5"> of</font><font color="#CCCCCC"> the</font>

576
00:23:16,620 --> 00:23:20,760
legitimacy of these fingerprints so what

577
00:23:19,350 --> 00:23:23,909
I mean<font color="#CCCCCC"> by that</font><font color="#E5E5E5"> is you</font><font color="#CCCCCC"> can actually Forge</font>

578
00:23:20,760 --> 00:23:26,070
<font color="#E5E5E5">these browser fingerprints so this is a</font>

579
00:23:23,910 --> 00:23:29,940
paper which came out probably<font color="#E5E5E5"> I think</font>

580
00:23:26,070 --> 00:23:31,980
last year from India<font color="#E5E5E5"> from France</font><font color="#CCCCCC"> this</font>

581
00:23:29,940 --> 00:23:34,740
<font color="#E5E5E5">paper called FB random where they</font>

582
00:23:31,980 --> 00:23:36,330
<font color="#CCCCCC">basically modified a browser which</font>

583
00:23:34,740 --> 00:23:38,070
introduces some sort of<font color="#E5E5E5"> noise in</font><font color="#CCCCCC"> your</font>

584
00:23:36,330 --> 00:23:39,659
browser fingerprint so every time<font color="#E5E5E5"> you</font>

585
00:23:38,070 --> 00:23:41,370
visit<font color="#E5E5E5"> visit a page the fingerprint</font>

586
00:23:39,660 --> 00:23:42,870
slightly changes and then the reason

587
00:23:41,370 --> 00:23:44,760
<font color="#CCCCCC">they implemented</font><font color="#E5E5E5"> this was for privacy</font>

588
00:23:42,870 --> 00:23:46,379
<font color="#CCCCCC">reasons because</font><font color="#E5E5E5"> of course you can you</font>

589
00:23:44,760 --> 00:23:49,440
can use this<font color="#CCCCCC"> say all the same</font><font color="#E5E5E5"> technology</font>

590
00:23:46,380 --> 00:23:50,820
for<font color="#E5E5E5"> user tracking as</font><font color="#CCCCCC"> well the thing is</font>

591
00:23:49,440 --> 00:23:53,520
<font color="#CCCCCC">that</font><font color="#E5E5E5"> you can basically use the same</font>

592
00:23:50,820 --> 00:23:55,200
technology<font color="#CCCCCC"> for</font><font color="#E5E5E5"> by for helping to bypass</font>

593
00:23:53,520 --> 00:23:56,310
some<font color="#E5E5E5"> of these solutions so what you can</font>

594
00:23:55,200 --> 00:23:57,660
essentially do<font color="#CCCCCC"> is you can come up with</font>

595
00:23:56,310 --> 00:24:00,060
<font color="#CCCCCC">the database and</font><font color="#E5E5E5"> normal fingerprints</font>

596
00:23:57,660 --> 00:24:02,280
which you can easily do if you have any

597
00:24:00,060 --> 00:24:04,590
normal<font color="#E5E5E5"> site and you</font><font color="#CCCCCC"> have any traffic you</font>

598
00:24:02,280 --> 00:24:06,780
can<font color="#CCCCCC"> basically capture browser</font>

599
00:24:04,590 --> 00:24:08,610
fingerprints on all people<font color="#CCCCCC"> and then you</font>

600
00:24:06,780 --> 00:24:11,730
can<font color="#CCCCCC"> basically</font><font color="#E5E5E5"> use some variant of this</font>

601
00:24:08,610 --> 00:24:13,740
<font color="#E5E5E5">too so</font><font color="#CCCCCC"> whereas I working on this project</font>

602
00:24:11,730 --> 00:24:15,960
<font color="#CCCCCC">I don't</font><font color="#E5E5E5"> think this paper had actually</font>

603
00:24:13,740 --> 00:24:20,610
come out so here is a reference

604
00:24:15,960 --> 00:24:22,530
<font color="#E5E5E5">implementation of this function called</font>

605
00:24:20,610 --> 00:24:23,459
get canvas fingerprint<font color="#E5E5E5"> so this is the</font>

606
00:24:22,530 --> 00:24:26,310
function which<font color="#E5E5E5"> is doing canvas</font>

607
00:24:23,460 --> 00:24:28,670
fingerprinting<font color="#E5E5E5"> and this is from an open</font>

608
00:24:26,310 --> 00:24:30,950
source library<font color="#CCCCCC"> called fingerprint</font><font color="#E5E5E5"> J's</font><font color="#CCCCCC"> to</font>

609
00:24:28,670 --> 00:24:32,960
so just a quick<font color="#E5E5E5"> recap</font><font color="#CCCCCC"> you basically draw</font>

610
00:24:30,950 --> 00:24:35,540
something on<font color="#CCCCCC"> a canvas and you read</font><font color="#E5E5E5"> it</font>

611
00:24:32,960 --> 00:24:37,100
back and then based on<font color="#CCCCCC"> your device</font>

612
00:24:35,540 --> 00:24:39,230
drivers and<font color="#E5E5E5"> hardware configuration</font>

613
00:24:37,100 --> 00:24:40,520
things are<font color="#CCCCCC"> different right so when you</font>

614
00:24:39,230 --> 00:24:42,920
call this<font color="#CCCCCC"> function you get some</font><font color="#E5E5E5"> sort of</font>

615
00:24:40,520 --> 00:24:44,300
base64 encoded string<font color="#E5E5E5"> I kind of</font>

616
00:24:42,920 --> 00:24:45,650
fingerprint is something<font color="#CCCCCC"> bra</font><font color="#E5E5E5"> right</font>

617
00:24:44,300 --> 00:24:50,629
that's the basic<font color="#E5E5E5"> C for version</font><font color="#CCCCCC"> of the</font>

618
00:24:45,650 --> 00:24:52,790
raw<font color="#CCCCCC"> pixels this</font><font color="#E5E5E5"> is a normal browser this</font>

619
00:24:50,630 --> 00:24:54,770
<font color="#CCCCCC">is a browser I</font><font color="#E5E5E5"> compiled from source so</font>

620
00:24:52,790 --> 00:24:57,170
this is WebKit<font color="#CCCCCC"> where</font><font color="#E5E5E5"> basically I</font>

621
00:24:54,770 --> 00:24:59,510
modified in the source code<font color="#E5E5E5"> the function</font>

622
00:24:57,170 --> 00:25:02,000
where you read back<font color="#E5E5E5"> the</font><font color="#CCCCCC"> raw</font><font color="#E5E5E5"> pixels from</font>

623
00:24:59,510 --> 00:25:03,710
<font color="#CCCCCC">the canvas element so here when you</font>

624
00:25:02,000 --> 00:25:05,450
essentially<font color="#E5E5E5"> call get</font><font color="#CCCCCC"> canvas fingerprint</font>

625
00:25:03,710 --> 00:25:06,920
<font color="#E5E5E5">you</font><font color="#CCCCCC"> get some sort of a fake</font><font color="#E5E5E5"> canvas</font>

626
00:25:05,450 --> 00:25:08,690
fingerprint<font color="#E5E5E5"> something which I control</font>

627
00:25:06,920 --> 00:25:10,850
which basically goes back to the point

628
00:25:08,690 --> 00:25:12,530
<font color="#E5E5E5">that since nothing</font><font color="#CCCCCC"> on client-side is</font>

629
00:25:10,850 --> 00:25:14,600
trusted even<font color="#CCCCCC"> though you are doing</font>

630
00:25:12,530 --> 00:25:16,100
<font color="#E5E5E5">heavily office carried code you still</font>

631
00:25:14,600 --> 00:25:19,909
cannot cross the browser itself because

632
00:25:16,100 --> 00:25:21,379
the browser will lie<font color="#CCCCCC"> to you and this</font>

633
00:25:19,910 --> 00:25:24,080
actually happens in real<font color="#CCCCCC"> world as well</font>

634
00:25:21,380 --> 00:25:26,420
<font color="#E5E5E5">so this</font><font color="#CCCCCC"> is a tool</font><font color="#E5E5E5"> which I found which</font>

635
00:25:24,080 --> 00:25:28,460
sells for<font color="#CCCCCC"> $400</font><font color="#E5E5E5"> in the underground</font>

636
00:25:26,420 --> 00:25:30,170
<font color="#E5E5E5">it's called anti detect brine crabs</font>

637
00:25:28,460 --> 00:25:30,530
wrote an article<font color="#E5E5E5"> about it few years ago</font>

638
00:25:30,170 --> 00:25:34,670
actually

639
00:25:30,530 --> 00:25:36,770
this is modified portable Firefox<font color="#E5E5E5"> where</font>

640
00:25:34,670 --> 00:25:38,960
you essentially provided the<font color="#E5E5E5"> the</font>

641
00:25:36,770 --> 00:25:40,850
fingerprint<font color="#E5E5E5"> and you want right</font><font color="#CCCCCC"> you</font>

642
00:25:38,960 --> 00:25:43,400
configure it<font color="#E5E5E5"> and then you run the tool</font>

643
00:25:40,850 --> 00:25:45,590
<font color="#E5E5E5">and then if any fingerprinting file runs</font>

644
00:25:43,400 --> 00:25:49,280
it basically gets<font color="#E5E5E5"> back the fingerprint</font>

645
00:25:45,590 --> 00:25:51,740
which you want it to believe pretty

646
00:25:49,280 --> 00:25:53,540
interesting<font color="#E5E5E5"> clearly the bad guys are not</font>

647
00:25:51,740 --> 00:25:55,190
reading academic<font color="#E5E5E5"> papers otherwise they</font>

648
00:25:53,540 --> 00:26:00,920
would use<font color="#E5E5E5"> something like</font><font color="#CCCCCC"> this</font><font color="#E5E5E5"> which is</font>

649
00:25:55,190 --> 00:26:03,800
open<font color="#CCCCCC"> source</font><font color="#E5E5E5"> and free</font><font color="#CCCCCC"> okay the next big</font>

650
00:26:00,920 --> 00:26:06,680
problem is<font color="#E5E5E5"> javascript cannot protect all</font>

651
00:26:03,800 --> 00:26:07,790
<font color="#CCCCCC">slows so we talked about</font><font color="#E5E5E5"> on client</font><font color="#CCCCCC"> side</font>

652
00:26:06,680 --> 00:26:13,900
there's no there's<font color="#CCCCCC"> no client side</font>

653
00:26:07,790 --> 00:26:16,100
attestation<font color="#E5E5E5"> on web but usually you have</font>

654
00:26:13,900 --> 00:26:18,740
<font color="#E5E5E5">like if you're talking about</font>

655
00:26:16,100 --> 00:26:20,840
<font color="#E5E5E5">authentication you don't you don't only</font>

656
00:26:18,740 --> 00:26:22,850
have<font color="#E5E5E5"> the</font><font color="#CCCCCC"> website</font><font color="#E5E5E5"> you also have some sort</font>

657
00:26:20,840 --> 00:26:26,240
<font color="#CCCCCC">of a mobile</font><font color="#E5E5E5"> app to</font><font color="#CCCCCC"> access your service</font>

658
00:26:22,850 --> 00:26:28,189
<font color="#CCCCCC">and of course</font><font color="#E5E5E5"> our mobile app you cannot</font>

659
00:26:26,240 --> 00:26:30,050
depend on the service because<font color="#CCCCCC"> of course</font>

660
00:26:28,190 --> 00:26:31,520
you<font color="#E5E5E5"> don't</font><font color="#CCCCCC"> have JavaScript</font><font color="#E5E5E5"> so essentially</font>

661
00:26:30,050 --> 00:26:34,970
like how do you solve this<font color="#CCCCCC"> problem</font><font color="#E5E5E5"> for</font>

662
00:26:31,520 --> 00:26:38,629
<font color="#E5E5E5">mobile one of the interesting solution</font>

663
00:26:34,970 --> 00:26:42,169
here<font color="#CCCCCC"> is you basically we</font><font color="#E5E5E5"> implement the</font>

664
00:26:38,630 --> 00:26:44,869
same<font color="#E5E5E5"> architecture where instead of</font>

665
00:26:42,169 --> 00:26:47,749
fingerprint<font color="#E5E5E5"> or GSR</font><font color="#CCCCCC"> JavaScript file you</font>

666
00:26:44,869 --> 00:26:49,749
basically create some sort of an<font color="#CCCCCC"> sdk you</font>

667
00:26:47,749 --> 00:26:52,279
<font color="#CCCCCC">recompile the mobile app with sdk</font>

668
00:26:49,749 --> 00:26:54,289
instead of gathering browser fingerprint

669
00:26:52,279 --> 00:26:55,669
<font color="#CCCCCC">you gather the device fingerprint and</font>

670
00:26:54,289 --> 00:26:57,169
then of course<font color="#CCCCCC"> you send back</font><font color="#E5E5E5"> the device</font>

671
00:26:55,669 --> 00:27:02,149
fingerprint<font color="#CCCCCC"> you</font><font color="#E5E5E5"> do the same computation</font>

672
00:26:57,169 --> 00:27:04,399
<font color="#CCCCCC">again and then yeah</font><font color="#E5E5E5"> same thing but the</font>

673
00:27:02,149 --> 00:27:06,080
good<font color="#CCCCCC"> thing here</font><font color="#E5E5E5"> is on device</font><font color="#CCCCCC"> ID there</font><font color="#E5E5E5"> is</font>

674
00:27:04,399 --> 00:27:08,629
device ID there<font color="#E5E5E5"> is devise a test station</font>

675
00:27:06,080 --> 00:27:12,109
<font color="#CCCCCC">so for example for</font><font color="#E5E5E5"> Android there is the</font>

676
00:27:08,629 --> 00:27:14,480
safety net API<font color="#CCCCCC"> for</font><font color="#E5E5E5"> iOS there's</font><font color="#CCCCCC"> a device</font>

677
00:27:12,109 --> 00:27:16,359
check API so essentially what you<font color="#CCCCCC"> can do</font>

678
00:27:14,480 --> 00:27:19,009
is you<font color="#E5E5E5"> can ask the operating</font><font color="#CCCCCC"> system</font>

679
00:27:16,359 --> 00:27:19,399
<font color="#CCCCCC">questions like is this device rooted</font><font color="#E5E5E5"> or</font>

680
00:27:19,009 --> 00:27:21,649
not

681
00:27:19,399 --> 00:27:23,600
am i running on an emulator<font color="#E5E5E5"> or not right</font>

682
00:27:21,649 --> 00:27:24,918
so the app can ask these<font color="#E5E5E5"> questions</font><font color="#CCCCCC"> of</font>

683
00:27:23,600 --> 00:27:28,100
the operating system the operating

684
00:27:24,919 --> 00:27:28,609
system can basically run a bunch of

685
00:27:28,100 --> 00:27:31,580
checks

686
00:27:28,609 --> 00:27:33,259
I gather a bunch<font color="#E5E5E5"> of signals</font><font color="#CCCCCC"> and then the</font>

687
00:27:31,580 --> 00:27:36,189
device<font color="#CCCCCC"> attestation test is</font><font color="#E5E5E5"> actually done</font>

688
00:27:33,259 --> 00:27:41,570
on<font color="#CCCCCC"> server-side</font><font color="#E5E5E5"> again not on</font><font color="#CCCCCC"> client-side</font>

689
00:27:36,190 --> 00:27:43,909
<font color="#E5E5E5">so things are definitely better</font><font color="#CCCCCC"> they</font><font color="#E5E5E5"> are</font>

690
00:27:41,570 --> 00:27:45,230
there<font color="#E5E5E5"> there are also like some work for</font>

691
00:27:43,909 --> 00:27:47,299
<font color="#E5E5E5">example earlier this year I think a</font>

692
00:27:45,230 --> 00:27:49,940
<font color="#CCCCCC">black head</font><font color="#E5E5E5"> there were some work about</font>

693
00:27:47,299 --> 00:27:51,710
Android safety net and how it works and

694
00:27:49,940 --> 00:27:53,690
different<font color="#CCCCCC"> issues but</font><font color="#E5E5E5"> having</font><font color="#CCCCCC"> and</font>

695
00:27:51,710 --> 00:27:57,639
<font color="#E5E5E5">basically</font><font color="#CCCCCC"> assume that this works pretty</font>

696
00:27:53,690 --> 00:28:00,679
well<font color="#E5E5E5"> compared</font><font color="#CCCCCC"> to the other model of web</font>

697
00:27:57,639 --> 00:28:03,168
<font color="#E5E5E5">so yeah just to</font><font color="#CCCCCC"> repeat</font><font color="#E5E5E5"> yeah basically</font>

698
00:28:00,679 --> 00:28:05,659
<font color="#E5E5E5">you have the mobile app SDK you have</font>

699
00:28:03,169 --> 00:28:07,249
<font color="#E5E5E5">instead of JavaScript we have similar</font>

700
00:28:05,659 --> 00:28:10,489
native code<font color="#CCCCCC"> and then you're</font><font color="#E5E5E5"> collecting</font>

701
00:28:07,249 --> 00:28:13,369
device fingerprint<font color="#E5E5E5"> and then yeah let's</font>

702
00:28:10,489 --> 00:28:14,629
talk<font color="#CCCCCC"> about Android for example</font><font color="#E5E5E5"> like why</font>

703
00:28:13,369 --> 00:28:16,249
you want the<font color="#E5E5E5"> device fingerprint again</font>

704
00:28:14,629 --> 00:28:17,899
you want as much signal as possible<font color="#E5E5E5"> I</font>

705
00:28:16,249 --> 00:28:19,669
<font color="#CCCCCC">already calculate I want to figure out</font>

706
00:28:17,899 --> 00:28:22,729
<font color="#E5E5E5">exactly how the user is interacting with</font>

707
00:28:19,669 --> 00:28:25,580
<font color="#CCCCCC">the device itself and on Android I</font>

708
00:28:22,730 --> 00:28:28,039
started<font color="#CCCCCC"> looking at</font><font color="#E5E5E5"> some apps and I</font>

709
00:28:25,580 --> 00:28:29,418
started<font color="#CCCCCC"> reverse-engineering them</font><font color="#E5E5E5"> and the</font>

710
00:28:28,039 --> 00:28:34,158
kind of stuff<font color="#CCCCCC"> I found</font><font color="#E5E5E5"> in some of the</font>

711
00:28:29,419 --> 00:28:37,039
SDKs was basically crazy<font color="#CCCCCC"> so on Android</font><font color="#E5E5E5"> a</font>

712
00:28:34,159 --> 00:28:38,779
lot<font color="#E5E5E5"> of this stuff is available</font><font color="#CCCCCC"> like what</font>

713
00:28:37,039 --> 00:28:41,658
is your IMEI number what is<font color="#CCCCCC"> your phone</font>

714
00:28:38,779 --> 00:28:43,340
number<font color="#CCCCCC"> what is a like information</font><font color="#E5E5E5"> about</font>

715
00:28:41,659 --> 00:28:44,749
a carrier operating system version<font color="#E5E5E5"> even</font>

716
00:28:43,340 --> 00:28:45,799
found some vendors are trying to

717
00:28:44,749 --> 00:28:48,830
fingerprint

718
00:28:45,799 --> 00:28:49,879
<font color="#E5E5E5">your file system structure</font><font color="#CCCCCC"> what is your</font>

719
00:28:48,830 --> 00:28:52,249
MAC address

720
00:28:49,879 --> 00:28:53,599
what is your geolocation<font color="#E5E5E5"> list of</font>

721
00:28:52,249 --> 00:28:56,929
installed<font color="#E5E5E5"> apps list of running apps</font>

722
00:28:53,599 --> 00:29:01,039
people<font color="#CCCCCC"> are running</font><font color="#E5E5E5"> writing J and</font><font color="#CCCCCC"> ICO</font>

723
00:28:56,929 --> 00:29:04,130
on<font color="#E5E5E5"> end Android</font><font color="#CCCCCC"> is basically</font><font color="#E5E5E5"> it's pretty</font>

724
00:29:01,039 --> 00:29:05,539
<font color="#E5E5E5">bad the situation</font><font color="#CCCCCC"> is</font><font color="#E5E5E5"> pretty</font><font color="#CCCCCC"> bad of</font>

725
00:29:04,130 --> 00:29:07,130
course<font color="#CCCCCC"> for</font><font color="#E5E5E5"> some of the stuff you require</font>

726
00:29:05,539 --> 00:29:09,520
permissions<font color="#E5E5E5"> but for many of these stuff</font>

727
00:29:07,130 --> 00:29:13,460
you<font color="#E5E5E5"> don't actually require permissions</font>

728
00:29:09,520 --> 00:29:15,200
<font color="#E5E5E5">and then I'm also not even sure like the</font>

729
00:29:13,460 --> 00:29:17,929
companies which are using some of these

730
00:29:15,200 --> 00:29:21,289
vendors<font color="#E5E5E5"> do they even</font><font color="#CCCCCC"> realize</font><font color="#E5E5E5"> like amount</font>

731
00:29:17,929 --> 00:29:22,940
of<font color="#CCCCCC"> information</font><font color="#E5E5E5"> these like companies are</font>

732
00:29:21,289 --> 00:29:26,140
<font color="#CCCCCC">collecting</font><font color="#E5E5E5"> because of course everything</font>

733
00:29:22,940 --> 00:29:28,909
is sent back until<font color="#CCCCCC"> their Cloud for</font>

734
00:29:26,140 --> 00:29:34,399
checking so another thing<font color="#CCCCCC"> to</font><font color="#E5E5E5"> note here</font>

735
00:29:28,909 --> 00:29:36,950
<font color="#CCCCCC">is on</font><font color="#E5E5E5"> on like mobile the situation is</font>

736
00:29:34,399 --> 00:29:39,620
pretty<font color="#CCCCCC"> uneven on</font><font color="#E5E5E5"> web almost everyone is</font>

737
00:29:36,950 --> 00:29:41,450
doing browser fingerprint<font color="#CCCCCC"> there is</font>

738
00:29:39,620 --> 00:29:43,309
<font color="#CCCCCC">already a pretty set a standard</font><font color="#E5E5E5"> of</font>

739
00:29:41,450 --> 00:29:45,350
things you can do for browser

740
00:29:43,309 --> 00:29:47,629
fingerprinting<font color="#E5E5E5"> and almost everyone is</font>

741
00:29:45,350 --> 00:29:48,379
doing<font color="#E5E5E5"> the same thing</font><font color="#CCCCCC"> on mobile things</font>

742
00:29:47,630 --> 00:29:50,659
are really<font color="#E5E5E5"> different</font>

743
00:29:48,380 --> 00:29:52,549
<font color="#E5E5E5">some vendors are looking for something</font>

744
00:29:50,659 --> 00:29:54,789
really<font color="#E5E5E5"> basic</font><font color="#CCCCCC"> and other</font><font color="#E5E5E5"> vendors are</font>

745
00:29:52,549 --> 00:30:00,200
collecting a lot of information

746
00:29:54,789 --> 00:30:01,970
what mentioning another<font color="#E5E5E5"> problem is like</font>

747
00:30:00,200 --> 00:30:04,640
yeah you have<font color="#CCCCCC"> a mobile app</font><font color="#E5E5E5"> for Android</font>

748
00:30:01,970 --> 00:30:07,610
what about iOS iOS is a completely

749
00:30:04,640 --> 00:30:09,980
different beast since<font color="#CCCCCC"> it's</font><font color="#E5E5E5"> closed closed</font>

750
00:30:07,610 --> 00:30:12,039
source<font color="#CCCCCC"> Apple has actually spent a lot of</font>

751
00:30:09,980 --> 00:30:14,390
time trying to<font color="#E5E5E5"> deal</font><font color="#CCCCCC"> with this problem</font>

752
00:30:12,039 --> 00:30:18,110
<font color="#CCCCCC">there</font><font color="#E5E5E5"> are you can only call a specific</font>

753
00:30:14,390 --> 00:30:19,730
<font color="#CCCCCC">set of set of</font><font color="#E5E5E5"> api's for iOS and then</font>

754
00:30:18,110 --> 00:30:20,990
<font color="#E5E5E5">there actually have been deprecating</font>

755
00:30:19,730 --> 00:30:25,669
some of these<font color="#CCCCCC"> api is</font><font color="#E5E5E5"> in newer versions</font>

756
00:30:20,990 --> 00:30:27,980
<font color="#CCCCCC">as well</font><font color="#E5E5E5"> so on iOS</font><font color="#CCCCCC"> things are definitely</font>

757
00:30:25,669 --> 00:30:29,809
<font color="#E5E5E5">much better</font><font color="#CCCCCC"> than</font><font color="#E5E5E5"> Android still you can</font>

758
00:30:27,980 --> 00:30:31,220
<font color="#E5E5E5">collect some amount of information but</font>

759
00:30:29,809 --> 00:30:34,190
<font color="#E5E5E5">the amount of signals you</font><font color="#CCCCCC"> can get on iOS</font>

760
00:30:31,220 --> 00:30:36,559
is much less than<font color="#E5E5E5"> on Android which</font>

761
00:30:34,190 --> 00:30:40,880
brings to another another problem<font color="#E5E5E5"> like</font>

762
00:30:36,559 --> 00:30:42,408
if I<font color="#E5E5E5"> am an attacker and I know that on</font>

763
00:30:40,880 --> 00:30:44,630
web you're collecting like 30 different

764
00:30:42,409 --> 00:30:46,610
signals<font color="#E5E5E5"> on Android</font><font color="#CCCCCC"> you are collecting 50</font>

765
00:30:44,630 --> 00:30:48,730
different<font color="#E5E5E5"> signals but an iOS you are</font>

766
00:30:46,610 --> 00:30:51,110
collecting only<font color="#CCCCCC"> 10 different signals I</font>

767
00:30:48,730 --> 00:30:53,240
would like<font color="#CCCCCC"> to pretend</font><font color="#E5E5E5"> to</font><font color="#CCCCCC"> be coming from</font>

768
00:30:51,110 --> 00:30:58,668
<font color="#E5E5E5">an iOS device there an Android device or</font>

769
00:30:53,240 --> 00:31:02,820
<font color="#E5E5E5">web or</font><font color="#CCCCCC"> web right okay then what about</font>

770
00:30:58,669 --> 00:31:05,220
API so even worse<font color="#E5E5E5"> so if</font>

771
00:31:02,820 --> 00:31:07,350
if there is also an API which you can

772
00:31:05,220 --> 00:31:09,630
hit for<font color="#E5E5E5"> for</font><font color="#CCCCCC"> example authentication or</font>

773
00:31:07,350 --> 00:31:12,090
something else<font color="#E5E5E5"> API is supposed to be</font>

774
00:31:09,630 --> 00:31:15,269
used<font color="#E5E5E5"> by programs and then with API</font>

775
00:31:12,090 --> 00:31:17,070
there's no<font color="#CCCCCC"> JavaScript</font><font color="#E5E5E5"> there's no mobile</font>

776
00:31:15,269 --> 00:31:18,720
app SDK there's nothing right<font color="#E5E5E5"> so</font>

777
00:31:17,070 --> 00:31:22,309
<font color="#E5E5E5">essentially</font><font color="#CCCCCC"> you're back to things like</font>

778
00:31:18,720 --> 00:31:25,370
rate limiting<font color="#E5E5E5"> and then like IP based of</font>

779
00:31:22,309 --> 00:31:28,710
basically fall back on this sort<font color="#E5E5E5"> of</font>

780
00:31:25,370 --> 00:31:30,029
calculations which<font color="#E5E5E5"> basically brings me</font>

781
00:31:28,710 --> 00:31:32,639
to takeaways

782
00:31:30,029 --> 00:31:34,440
so the first<font color="#E5E5E5"> takeaway is</font><font color="#CCCCCC"> they</font><font color="#E5E5E5"> found</font>

783
00:31:32,639 --> 00:31:35,969
bunch of implementation<font color="#E5E5E5"> and</font>

784
00:31:34,440 --> 00:31:39,750
architectural issues in multiple

785
00:31:35,970 --> 00:31:41,809
deployments again I think<font color="#CCCCCC"> the</font>

786
00:31:39,750 --> 00:31:43,710
fundamental problem is there is no

787
00:31:41,809 --> 00:31:45,870
<font color="#CCCCCC">client-side attestation there is no</font>

788
00:31:43,710 --> 00:31:48,389
<font color="#CCCCCC">route of trust in browsers so people</font>

789
00:31:45,870 --> 00:31:50,758
have pride but<font color="#E5E5E5"> you still of course get</font>

790
00:31:48,389 --> 00:31:52,979
some signal from browsers<font color="#CCCCCC"> so</font><font color="#E5E5E5"> people have</font>

791
00:31:50,759 --> 00:31:55,980
tried<font color="#CCCCCC"> to solve this in</font><font color="#E5E5E5"> multiple ways</font>

792
00:31:52,980 --> 00:31:58,559
with<font color="#CCCCCC"> tampering with obfuscation and</font>

793
00:31:55,980 --> 00:32:01,169
<font color="#E5E5E5">stuff but of course since there is no</font>

794
00:31:58,559 --> 00:32:04,049
<font color="#E5E5E5">pace this of course doesn't work right</font>

795
00:32:01,169 --> 00:32:06,600
if you have read the reflections on

796
00:32:04,049 --> 00:32:11,279
trusting<font color="#E5E5E5"> on trust paper from like 1970</font>

797
00:32:06,600 --> 00:32:13,408
<font color="#E5E5E5">it goes back to that the state</font><font color="#CCCCCC"> of the</font>

798
00:32:11,279 --> 00:32:15,299
world is better on<font color="#E5E5E5"> mobile</font><font color="#CCCCCC"> from a vendor</font>

799
00:32:13,409 --> 00:32:16,620
perspective<font color="#E5E5E5"> that you can probably get</font>

800
00:32:15,299 --> 00:32:20,250
more signal and of course you have

801
00:32:16,620 --> 00:32:24,090
<font color="#E5E5E5">client-side attestation</font><font color="#CCCCCC"> but yeah like</font>

802
00:32:20,250 --> 00:32:25,769
for users<font color="#E5E5E5"> we have spent a lot of time</font>

803
00:32:24,090 --> 00:32:27,809
and<font color="#CCCCCC"> energy</font><font color="#E5E5E5"> and research on browser</font>

804
00:32:25,769 --> 00:32:30,299
fingerprinting<font color="#E5E5E5"> and people understand</font>

805
00:32:27,809 --> 00:32:31,830
this<font color="#E5E5E5"> as a privacy</font><font color="#CCCCCC"> problem pretty well</font>

806
00:32:30,299 --> 00:32:33,658
<font color="#E5E5E5">but not many people</font><font color="#CCCCCC"> have talked about</font>

807
00:32:31,830 --> 00:32:36,149
device fingerprinting<font color="#E5E5E5"> and the kind of</font>

808
00:32:33,659 --> 00:32:39,750
<font color="#E5E5E5">stuff you can do on you can actually run</font>

809
00:32:36,149 --> 00:32:43,080
<font color="#E5E5E5">code</font><font color="#CCCCCC"> on the device which</font><font color="#E5E5E5"> is also a big</font>

810
00:32:39,750 --> 00:32:44,789
problem<font color="#CCCCCC"> another problem is getting a</font>

811
00:32:43,080 --> 00:32:47,100
baseline protection<font color="#CCCCCC"> across all flows is</font>

812
00:32:44,789 --> 00:32:49,860
extremely hard as I mentioned that if

813
00:32:47,100 --> 00:32:52,439
you have web mobile and API I will go

814
00:32:49,860 --> 00:32:56,158
after API<font color="#E5E5E5"> why would I</font><font color="#CCCCCC"> ever go</font><font color="#E5E5E5"> after</font>

815
00:32:52,440 --> 00:33:00,629
mobile like after<font color="#CCCCCC"> mobile</font><font color="#E5E5E5"> Android for</font>

816
00:32:56,159 --> 00:33:02,940
example so<font color="#E5E5E5"> you basically reduce down to</font>

817
00:33:00,629 --> 00:33:05,668
<font color="#CCCCCC">the minimum set of signals</font><font color="#E5E5E5"> you can</font>

818
00:33:02,940 --> 00:33:07,799
<font color="#E5E5E5">collect on any floor and of course there</font>

819
00:33:05,669 --> 00:33:09,750
<font color="#E5E5E5">are privacy</font><font color="#CCCCCC"> issues</font><font color="#E5E5E5"> with</font><font color="#CCCCCC"> this because</font><font color="#E5E5E5"> the</font>

820
00:33:07,799 --> 00:33:12,149
same set<font color="#E5E5E5"> of technology in the same set</font>

821
00:33:09,750 --> 00:33:13,470
<font color="#E5E5E5">of signals can be</font><font color="#CCCCCC"> used for</font><font color="#E5E5E5"> basically</font>

822
00:33:12,149 --> 00:33:16,469
<font color="#E5E5E5">tracking users</font>

823
00:33:13,470 --> 00:33:18,990
and actually<font color="#E5E5E5"> a lot</font><font color="#CCCCCC"> of browser vendors</font>

824
00:33:16,470 --> 00:33:21,059
are actually doing<font color="#E5E5E5"> a lot of work against</font>

825
00:33:18,990 --> 00:33:22,950
<font color="#E5E5E5">this like I think Dodd has canvas</font>

826
00:33:21,059 --> 00:33:24,269
fingerprinting detection<font color="#E5E5E5"> say if a script</font>

827
00:33:22,950 --> 00:33:26,549
runs which<font color="#CCCCCC"> is trying</font><font color="#E5E5E5"> to access the</font>

828
00:33:24,269 --> 00:33:28,799
canvas fingerprint<font color="#CCCCCC"> it</font><font color="#E5E5E5"> basically has a</font>

829
00:33:26,549 --> 00:33:30,960
<font color="#CCCCCC">pop-up and</font><font color="#E5E5E5"> it shows you and think</font><font color="#CCCCCC"> safari</font>

830
00:33:28,799 --> 00:33:33,210
has also done a<font color="#CCCCCC"> lot of</font><font color="#E5E5E5"> work here and</font>

831
00:33:30,960 --> 00:33:34,409
then also I think with<font color="#CCCCCC"> gdpr</font><font color="#E5E5E5"> like I don't</font>

832
00:33:33,210 --> 00:33:38,789
<font color="#E5E5E5">know it's going to be harder</font><font color="#CCCCCC"> and harder</font>

833
00:33:34,409 --> 00:33:44,149
to<font color="#CCCCCC"> collect this sort of signals</font><font color="#E5E5E5"> and yeah</font>

834
00:33:38,789 --> 00:33:46,710
just<font color="#E5E5E5"> final piece</font><font color="#CCCCCC"> funny</font><font color="#E5E5E5"> enough these</font>

835
00:33:44,149 --> 00:33:48,959
fraud<font color="#CCCCCC"> slash bar detection solutions</font><font color="#E5E5E5"> are</font>

836
00:33:46,710 --> 00:33:50,759
also finger printable<font color="#E5E5E5"> so they're trying</font>

837
00:33:48,960 --> 00:33:51,860
to fingerprint the user<font color="#E5E5E5"> but you</font><font color="#CCCCCC"> can also</font>

838
00:33:50,759 --> 00:33:54,450
fingerprint the vendors themselves

839
00:33:51,860 --> 00:33:57,029
<font color="#E5E5E5">because for example</font><font color="#CCCCCC"> a particular vendor</font>

840
00:33:54,450 --> 00:34:01,379
<font color="#E5E5E5">the script is deployed at ABC cbn.com</font>

841
00:33:57,029 --> 00:34:03,690
slash fingerprint or<font color="#E5E5E5"> GS</font><font color="#CCCCCC"> I know that now</font>

842
00:34:01,379 --> 00:34:06,240
they are<font color="#E5E5E5"> deployed here like ABC CDN dot</font>

843
00:34:03,690 --> 00:34:08,399
<font color="#E5E5E5">count</font><font color="#CCCCCC"> slash fingerprint not jeaious now</font>

844
00:34:06,240 --> 00:34:10,379
I can scan Alexa top<font color="#E5E5E5"> 1 million all these</font>

845
00:34:08,399 --> 00:34:12,118
<font color="#CCCCCC">sites</font><font color="#E5E5E5"> let's look for all the places</font>

846
00:34:10,379 --> 00:34:14,848
where you're<font color="#E5E5E5"> loading this piece of code</font>

847
00:34:12,119 --> 00:34:16,649
right so this<font color="#E5E5E5"> is</font><font color="#CCCCCC"> just an example</font><font color="#E5E5E5"> so I</font>

848
00:34:14,849 --> 00:34:18,540
know all<font color="#E5E5E5"> the places on the</font><font color="#CCCCCC"> Internet</font>

849
00:34:16,649 --> 00:34:19,949
which<font color="#CCCCCC"> is using the same piece</font><font color="#E5E5E5"> of like</font>

850
00:34:18,540 --> 00:34:23,069
<font color="#CCCCCC">bore detection or a fraud detection</font>

851
00:34:19,949 --> 00:34:25,949
technology suppose I want<font color="#CCCCCC"> to attack a</font>

852
00:34:23,069 --> 00:34:28,560
<font color="#E5E5E5">particular site a this is the the main</font>

853
00:34:25,949 --> 00:34:30,928
target I don't have to go after<font color="#E5E5E5"> a first</font>

854
00:34:28,560 --> 00:34:32,849
I can<font color="#CCCCCC"> go after</font><font color="#E5E5E5"> another site Z which is</font>

855
00:34:30,929 --> 00:34:35,099
using the same<font color="#CCCCCC"> solution</font><font color="#E5E5E5"> and I can learn</font>

856
00:34:32,849 --> 00:34:37,050
like how<font color="#CCCCCC"> do these solutions work</font><font color="#E5E5E5"> I get</font>

857
00:34:35,099 --> 00:34:38,579
<font color="#CCCCCC">reverse-engineer for</font><font color="#E5E5E5"> example the rate</font>

858
00:34:37,050 --> 00:34:40,859
limiting<font color="#E5E5E5"> solution or whatever the</font>

859
00:34:38,579 --> 00:34:43,349
<font color="#CCCCCC">rule-based systems are and then I can go</font>

860
00:34:40,859 --> 00:34:44,759
after<font color="#E5E5E5"> a so yeah it's pretty funny that</font>

861
00:34:43,349 --> 00:34:48,270
yeah<font color="#E5E5E5"> they're doing fingerprinting but</font>

862
00:34:44,760 --> 00:34:50,609
they're also fingerprint<font color="#CCCCCC"> table yeah and</font>

863
00:34:48,270 --> 00:34:53,210
that's<font color="#CCCCCC"> the end of the talk say if you</font>

864
00:34:50,609 --> 00:34:53,210
have<font color="#E5E5E5"> any questions</font>

