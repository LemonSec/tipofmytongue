1
00:00:00,199 --> 00:00:06,720
hi so as<font color="#CCCCCC"> Diana introduced me and I run</font>

2
00:00:03,990 --> 00:00:09,360
<font color="#E5E5E5">at stevia CEO and co-founder of screen</font><font color="#CCCCCC"> I</font>

3
00:00:06,720 --> 00:00:12,330
see some people<font color="#CCCCCC"> standing here you have a</font>

4
00:00:09,360 --> 00:00:14,129
free room here<font color="#CCCCCC"> so feel free to to move</font>

5
00:00:12,330 --> 00:00:19,859
<font color="#CCCCCC">and</font><font color="#E5E5E5"> take a</font><font color="#CCCCCC"> seat</font><font color="#E5E5E5"> that's the that's</font><font color="#CCCCCC"> the</font>

6
00:00:14,130 --> 00:00:22,710
right<font color="#E5E5E5"> time so I was</font><font color="#CCCCCC"> a at the</font><font color="#E5E5E5"> beginning</font>

7
00:00:19,859 --> 00:00:27,390
of<font color="#E5E5E5"> my career a pen tester and I spent</font>

8
00:00:22,710 --> 00:00:29,550
<font color="#E5E5E5">like five</font><font color="#CCCCCC"> years at Apple</font><font color="#E5E5E5"> working April</font>

9
00:00:27,390 --> 00:00:31,109
ecosystem like iOS<font color="#E5E5E5"> Mac OS</font>

10
00:00:29,550 --> 00:00:33,300
<font color="#CCCCCC">reverse-engineering shipped ography</font>

11
00:00:31,109 --> 00:00:36,750
attacks<font color="#E5E5E5"> we attacked the systems and we</font>

12
00:00:33,300 --> 00:00:40,468
helped Apple developers make them more

13
00:00:36,750 --> 00:00:42,480
<font color="#E5E5E5">secure and write more secure code today</font>

14
00:00:40,469 --> 00:00:45,000
<font color="#E5E5E5">this talk</font><font color="#CCCCCC"> is not</font><font color="#E5E5E5"> going</font><font color="#CCCCCC"> to be about</font>

15
00:00:42,480 --> 00:00:48,959
generic technical vulnerabilities<font color="#E5E5E5"> I'd</font>

16
00:00:45,000 --> 00:00:51,980
like to introduce a way to defend<font color="#E5E5E5"> your</font>

17
00:00:48,960 --> 00:00:55,590
company against business logic<font color="#E5E5E5"> threats</font>

18
00:00:51,980 --> 00:00:57,660
<font color="#E5E5E5">so let's take a step back in</font><font color="#CCCCCC"> time and</font>

19
00:00:55,590 --> 00:01:01,350
<font color="#E5E5E5">look at what applications were looked</font>

20
00:00:57,660 --> 00:01:05,099
like in the in the<font color="#E5E5E5"> 20s in the 20s</font>

21
00:01:01,350 --> 00:01:09,210
20 years ago right<font color="#E5E5E5"> so you had a lot of</font>

22
00:01:05,099 --> 00:01:11,880
<font color="#CCCCCC">custom code</font><font color="#E5E5E5"> and not much frameworks the</font>

23
00:01:09,210 --> 00:01:13,530
developers were writing a lot of

24
00:01:11,880 --> 00:01:15,479
<font color="#E5E5E5">low-level things like handling</font><font color="#CCCCCC"> cycle</font>

25
00:01:13,530 --> 00:01:19,110
queries handling connections<font color="#E5E5E5"> to external</font>

26
00:01:15,479 --> 00:01:23,580
services<font color="#E5E5E5"> vulnerabilities were lying in</font>

27
00:01:19,110 --> 00:01:26,400
this<font color="#E5E5E5"> queue some code 20 or 10 years</font>

28
00:01:23,580 --> 00:01:29,280
later<font color="#E5E5E5"> frameworks became predominant in</font>

29
00:01:26,400 --> 00:01:31,710
the<font color="#E5E5E5"> applications the amount of code</font>

30
00:01:29,280 --> 00:01:34,530
written by the developers<font color="#E5E5E5"> was reduced</font>

31
00:01:31,710 --> 00:01:36,658
and focusing<font color="#E5E5E5"> on the business logic not</font>

32
00:01:34,530 --> 00:01:39,180
<font color="#CCCCCC">anymore on the</font><font color="#E5E5E5"> generic technical things</font>

33
00:01:36,659 --> 00:01:41,280
that who were relying<font color="#E5E5E5"> on frameworks</font>

34
00:01:39,180 --> 00:01:43,320
right and everything got<font color="#E5E5E5"> a bit more</font>

35
00:01:41,280 --> 00:01:46,320
secure because frameworks are shared

36
00:01:43,320 --> 00:01:51,329
<font color="#CCCCCC">across the community and the community</font>

37
00:01:46,320 --> 00:01:53,689
is<font color="#E5E5E5"> improving them nowadays</font><font color="#CCCCCC"> the</font>

38
00:01:51,329 --> 00:01:56,189
<font color="#E5E5E5">monolithic applications are</font><font color="#CCCCCC"> going away</font>

39
00:01:53,689 --> 00:02:01,679
<font color="#E5E5E5">applications are relying on others to</font>

40
00:01:56,189 --> 00:02:03,479
<font color="#E5E5E5">call to</font><font color="#CCCCCC"> fulfil business requests right</font>

41
00:02:01,680 --> 00:02:05,549
so it's<font color="#CCCCCC"> time</font><font color="#E5E5E5"> you need to do something</font>

42
00:02:03,479 --> 00:02:07,979
replication relies on<font color="#E5E5E5"> external services</font>

43
00:02:05,549 --> 00:02:11,400
to get<font color="#CCCCCC"> billing information</font><font color="#E5E5E5"> user</font>

44
00:02:07,979 --> 00:02:13,709
authentication so the biggest remaining

45
00:02:11,400 --> 00:02:16,019
threat<font color="#E5E5E5"> today is not the</font>

46
00:02:13,709 --> 00:02:19,170
technical vulnerabilities but the

47
00:02:16,019 --> 00:02:22,349
business logic threats<font color="#E5E5E5"> so what's an</font>

48
00:02:19,170 --> 00:02:24,420
attack against business logic<font color="#E5E5E5"> well it</font>

49
00:02:22,349 --> 00:02:27,030
could be something targeting<font color="#E5E5E5"> a costly</font>

50
00:02:24,420 --> 00:02:29,659
operation<font color="#E5E5E5"> of your company like of the</font>

51
00:02:27,030 --> 00:02:33,000
<font color="#E5E5E5">ring a pizza it could be something</font>

52
00:02:29,659 --> 00:02:36,750
targeting a security action like<font color="#E5E5E5"> adding</font>

53
00:02:33,000 --> 00:02:38,400
credential to a<font color="#E5E5E5"> given user</font><font color="#CCCCCC"> could also</font><font color="#E5E5E5"> be</font>

54
00:02:36,750 --> 00:02:41,299
<font color="#E5E5E5">accessing confidential data like</font>

55
00:02:38,400 --> 00:02:44,159
downloading<font color="#E5E5E5"> a</font><font color="#CCCCCC"> pay slip</font><font color="#E5E5E5"> all of these are</font>

56
00:02:41,299 --> 00:02:45,959
business logic<font color="#E5E5E5"> actions that are very</font>

57
00:02:44,159 --> 00:02:48,480
<font color="#E5E5E5">sensitive and</font><font color="#CCCCCC"> that could be targeted by</font>

58
00:02:45,959 --> 00:02:50,430
an attacker that's specific<font color="#CCCCCC"> to you</font><font color="#E5E5E5"> right</font>

59
00:02:48,480 --> 00:02:55,069
the minerals<font color="#CCCCCC"> pizza won't have the same</font>

60
00:02:50,430 --> 00:02:58,170
business<font color="#CCCCCC"> threats as</font><font color="#E5E5E5"> Twilio or as the FDA</font>

61
00:02:55,069 --> 00:03:02,689
so such<font color="#E5E5E5"> protections cannot be generic</font>

62
00:02:58,170 --> 00:03:06,179
<font color="#E5E5E5">they need to be</font><font color="#CCCCCC"> tight to your business</font>

63
00:03:02,689 --> 00:03:12,290
so who in this room<font color="#CCCCCC"> has more than 10</font>

64
00:03:06,180 --> 00:03:20,819
<font color="#CCCCCC">applications</font><font color="#E5E5E5"> to protect more than 50</font>

65
00:03:12,290 --> 00:03:22,798
more<font color="#E5E5E5"> than 100 more</font><font color="#CCCCCC"> than</font><font color="#E5E5E5"> 1000 okay that's</font>

66
00:03:20,819 --> 00:03:25,730
a lot that's a lot<font color="#CCCCCC"> of applications ICS</font>

67
00:03:22,799 --> 00:03:30,180
which<font color="#E5E5E5"> further on more than 50 I think</font>

68
00:03:25,730 --> 00:03:32,578
yeah<font color="#E5E5E5"> that's that's a lot right</font><font color="#CCCCCC"> and it's</font>

69
00:03:30,180 --> 00:03:34,919
<font color="#CCCCCC">moving in the direction of</font><font color="#E5E5E5"> more and more</font>

70
00:03:32,579 --> 00:03:36,810
<font color="#CCCCCC">applications right squads are working</font>

71
00:03:34,919 --> 00:03:39,269
<font color="#CCCCCC">independently on applications they are</font>

72
00:03:36,810 --> 00:03:41,459
<font color="#CCCCCC">pushing code every</font><font color="#E5E5E5"> hour they are</font>

73
00:03:39,269 --> 00:03:45,540
deploying their applications multiple

74
00:03:41,459 --> 00:03:50,579
<font color="#E5E5E5">times a</font><font color="#CCCCCC"> day</font><font color="#E5E5E5"> and its application rely on</font>

75
00:03:45,540 --> 00:03:53,220
others<font color="#E5E5E5"> to fulfill its purpose so how do</font>

76
00:03:50,579 --> 00:03:56,609
<font color="#E5E5E5">we protect against business</font><font color="#CCCCCC"> logic</font>

77
00:03:53,220 --> 00:03:58,919
<font color="#E5E5E5">threats in these conditions it's not</font>

78
00:03:56,609 --> 00:04:00,989
<font color="#E5E5E5">possible to do it under</font><font color="#CCCCCC"> network cleaver</font>

79
00:03:58,919 --> 00:04:03,989
<font color="#E5E5E5">right because the actions are lying</font>

80
00:04:00,989 --> 00:04:06,359
inside your code and distributed across

81
00:04:03,989 --> 00:04:09,389
multiple<font color="#CCCCCC"> applications</font><font color="#E5E5E5"> it's not possible</font>

82
00:04:06,359 --> 00:04:11,819
with solutions such as<font color="#E5E5E5"> statics Oscar</font>

83
00:04:09,389 --> 00:04:14,489
analysis because they are not looking

84
00:04:11,819 --> 00:04:16,589
<font color="#CCCCCC">for</font><font color="#E5E5E5"> the</font><font color="#CCCCCC"> same thing</font><font color="#E5E5E5"> so</font><font color="#CCCCCC"> we have to</font>

85
00:04:14,489 --> 00:04:18,858
understand the business<font color="#E5E5E5"> meaning of the</font>

86
00:04:16,589 --> 00:04:22,078
actual code of the actual applications

87
00:04:18,858 --> 00:04:25,020
so the solution<font color="#CCCCCC"> is to decentralize</font><font color="#E5E5E5"> the</font>

88
00:04:22,079 --> 00:04:26,540
security<font color="#E5E5E5"> across each and every</font>

89
00:04:25,020 --> 00:04:29,870
applications<font color="#E5E5E5"> we</font>

90
00:04:26,540 --> 00:04:31,520
won't the security to run the closest to

91
00:04:29,870 --> 00:04:35,180
the<font color="#E5E5E5"> runtime and to the business logic as</font>

92
00:04:31,520 --> 00:04:36,919
possible<font color="#E5E5E5"> so that's the closer to the</font>

93
00:04:35,180 --> 00:04:40,130
business so that<font color="#E5E5E5"> you can be right inside</font>

94
00:04:36,920 --> 00:04:43,490
<font color="#E5E5E5">the application so it's</font><font color="#CCCCCC"> app</font><font color="#E5E5E5"> embeds its</font>

95
00:04:40,130 --> 00:04:46,540
own security logic it means that if a

96
00:04:43,490 --> 00:04:49,940
user<font color="#CCCCCC"> requests is</font><font color="#E5E5E5"> going into</font><font color="#CCCCCC"> your company</font>

97
00:04:46,540 --> 00:04:53,270
several<font color="#E5E5E5"> applications perform several</font>

98
00:04:49,940 --> 00:04:57,070
actions<font color="#E5E5E5"> some of them are sensitive we</font>

99
00:04:53,270 --> 00:05:00,200
want to react<font color="#E5E5E5"> if the sections are abused</font>

100
00:04:57,070 --> 00:05:04,520
so you have the big picture<font color="#CCCCCC"> but how</font>

101
00:05:00,200 --> 00:05:07,760
could<font color="#E5E5E5"> we do that thing</font><font color="#CCCCCC"> in practice</font><font color="#E5E5E5"> we</font>

102
00:05:04,520 --> 00:05:09,500
want<font color="#E5E5E5"> to collect events at</font><font color="#CCCCCC"> runtime</font><font color="#E5E5E5"> from</font>

103
00:05:07,760 --> 00:05:12,590
inside the applications where the

104
00:05:09,500 --> 00:05:15,050
business logic<font color="#CCCCCC"> lives right so we</font><font color="#E5E5E5"> need to</font>

105
00:05:12,590 --> 00:05:18,500
build<font color="#CCCCCC"> a</font><font color="#E5E5E5"> tool</font><font color="#CCCCCC"> box to help us do this the</font>

106
00:05:15,050 --> 00:05:21,350
first<font color="#E5E5E5"> item and these tool box is a</font>

107
00:05:18,500 --> 00:05:24,200
simple helper that<font color="#E5E5E5"> we can call it's</font>

108
00:05:21,350 --> 00:05:26,390
<font color="#E5E5E5">time-sensitive action is performed this</font>

109
00:05:24,200 --> 00:05:30,469
helper<font color="#E5E5E5"> will send information about</font>

110
00:05:26,390 --> 00:05:33,320
<font color="#E5E5E5">what's</font><font color="#CCCCCC"> happening in the application this</font>

111
00:05:30,470 --> 00:05:35,840
helper we need to put it inside<font color="#CCCCCC"> each and</font>

112
00:05:33,320 --> 00:05:38,719
<font color="#CCCCCC">every application</font><font color="#E5E5E5"> every time some</font>

113
00:05:35,840 --> 00:05:42,200
sensitive business<font color="#E5E5E5"> logic is performed</font>

114
00:05:38,720 --> 00:05:44,930
<font color="#E5E5E5">all right</font><font color="#CCCCCC"> so the goal is to</font><font color="#E5E5E5"> record each</font>

115
00:05:42,200 --> 00:05:48,950
sensitive action at runtime<font color="#CCCCCC"> when it's</font>

116
00:05:44,930 --> 00:05:51,500
performed second<font color="#CCCCCC"> item in our</font><font color="#E5E5E5"> toolbox</font><font color="#CCCCCC"> is</font>

117
00:05:48,950 --> 00:05:54,229
an event stream<font color="#CCCCCC"> okay all this</font>

118
00:05:51,500 --> 00:05:56,600
<font color="#E5E5E5">information we</font><font color="#CCCCCC"> are gathering we want</font>

119
00:05:54,230 --> 00:05:59,660
them<font color="#CCCCCC"> to be in an event stream in order</font>

120
00:05:56,600 --> 00:06:01,970
<font color="#E5E5E5">to process them and analyze them</font>

121
00:05:59,660 --> 00:06:06,320
that's the third item of<font color="#E5E5E5"> our</font><font color="#CCCCCC"> toolbox</font>

122
00:06:01,970 --> 00:06:08,240
processing and analysis engine<font color="#CCCCCC"> okay the</font>

123
00:06:06,320 --> 00:06:11,030
goal here<font color="#CCCCCC"> is to detect security</font>

124
00:06:08,240 --> 00:06:14,720
anomalies based on the<font color="#CCCCCC"> business behavior</font>

125
00:06:11,030 --> 00:06:17,450
<font color="#E5E5E5">of your applications so</font><font color="#CCCCCC"> last but not</font>

126
00:06:14,720 --> 00:06:20,420
least the fourth<font color="#CCCCCC"> item in our toolbox</font><font color="#E5E5E5"> the</font>

127
00:06:17,450 --> 00:06:22,849
security responses<font color="#E5E5E5"> we need to respond</font>

128
00:06:20,420 --> 00:06:25,550
<font color="#CCCCCC">each time we detect a security anomaly</font>

129
00:06:22,850 --> 00:06:27,590
so the response could be<font color="#E5E5E5"> we want to deny</font>

130
00:06:25,550 --> 00:06:31,700
a given action<font color="#E5E5E5"> or to log the user out</font>

131
00:06:27,590 --> 00:06:34,549
many<font color="#CCCCCC"> things could be done so</font><font color="#E5E5E5"> we have</font>

132
00:06:31,700 --> 00:06:36,710
<font color="#CCCCCC">this</font><font color="#E5E5E5"> four items in our toolbox we need</font>

133
00:06:34,550 --> 00:06:39,039
to architect them<font color="#E5E5E5"> we need a way to to</font>

134
00:06:36,710 --> 00:06:41,799
drive them concurrently

135
00:06:39,039 --> 00:06:44,469
using any streaming engine we can<font color="#E5E5E5"> quite</font>

136
00:06:41,800 --> 00:06:48,159
easily<font color="#CCCCCC"> express high-level</font><font color="#E5E5E5"> logic such as</font>

137
00:06:44,469 --> 00:06:51,939
<font color="#E5E5E5">alright if the rate of the function</font><font color="#CCCCCC"> user</font>

138
00:06:48,159 --> 00:06:53,649
token generation is usual<font color="#E5E5E5"> then I want to</font>

139
00:06:51,939 --> 00:06:55,990
lock<font color="#CCCCCC"> to user account</font><font color="#E5E5E5"> and I want to be</font>

140
00:06:53,649 --> 00:06:58,809
highlighted by a new<font color="#E5E5E5"> epoch</font><font color="#CCCCCC"> another way</font>

141
00:06:55,990 --> 00:07:01,960
to to say this is<font color="#CCCCCC"> okay I want</font><font color="#E5E5E5"> to count</font>

142
00:06:58,809 --> 00:07:04,360
the<font color="#CCCCCC"> number of call to a user</font>

143
00:07:01,960 --> 00:07:06,219
impersonation function<font color="#E5E5E5"> if this number of</font>

144
00:07:04,360 --> 00:07:08,770
code is more<font color="#E5E5E5"> than</font><font color="#CCCCCC"> ten</font><font color="#E5E5E5"> in one</font><font color="#CCCCCC"> minute</font>

145
00:07:06,219 --> 00:07:14,469
then I want to raise an exception<font color="#E5E5E5"> and to</font>

146
00:07:08,770 --> 00:07:15,998
call a pager for instance so that's very

147
00:07:14,469 --> 00:07:18,789
similar<font color="#E5E5E5"> to</font><font color="#CCCCCC"> the way</font><font color="#E5E5E5"> performance</font>

148
00:07:15,999 --> 00:07:21,669
monitoring evolved in the past<font color="#E5E5E5"> 20 years</font>

149
00:07:18,789 --> 00:07:23,919
<font color="#CCCCCC">to monitor performance of your</font>

150
00:07:21,669 --> 00:07:26,529
applications<font color="#CCCCCC"> twenty years</font><font color="#E5E5E5"> ago you</font><font color="#CCCCCC"> were</font>

151
00:07:23,919 --> 00:07:28,180
looking at the latency<font color="#E5E5E5"> okay it's a</font>

152
00:07:26,529 --> 00:07:30,459
measure<font color="#CCCCCC"> that you had on</font><font color="#E5E5E5"> your load</font>

153
00:07:28,180 --> 00:07:32,620
balancer reverse proxy and that were

154
00:07:30,459 --> 00:07:35,889
<font color="#E5E5E5">telling you this page is taking 100</font>

155
00:07:32,620 --> 00:07:38,680
millisecond<font color="#E5E5E5"> to respond it was working</font>

156
00:07:35,889 --> 00:07:41,529
but it's<font color="#E5E5E5"> not the best visibility you</font>

157
00:07:38,680 --> 00:07:43,360
<font color="#E5E5E5">could get right what you want is</font><font color="#CCCCCC"> to get</font>

158
00:07:41,529 --> 00:07:45,909
more detail<font color="#E5E5E5"> from inside the application</font>

159
00:07:43,360 --> 00:07:48,309
<font color="#E5E5E5">that's where tools such as New Relic or</font>

160
00:07:45,909 --> 00:07:50,949
<font color="#E5E5E5">AB dynamics have been helping the</font>

161
00:07:48,309 --> 00:07:51,879
developers<font color="#E5E5E5"> telling them</font><font color="#CCCCCC"> alright that's</font>

162
00:07:50,949 --> 00:07:54,430
the<font color="#E5E5E5"> database</font>

163
00:07:51,879 --> 00:07:59,050
who's taking too much time<font color="#CCCCCC"> this external</font>

164
00:07:54,430 --> 00:08:01,649
service is very<font color="#E5E5E5"> slow this even was one</font>

165
00:07:59,050 --> 00:08:05,889
<font color="#CCCCCC">of the enablement</font><font color="#E5E5E5"> of the DevOps movement</font>

166
00:08:01,649 --> 00:08:07,240
<font color="#E5E5E5">because developers and herbs</font><font color="#CCCCCC"> we are</font>

167
00:08:05,889 --> 00:08:08,499
<font color="#CCCCCC">working together to optimize the</font>

168
00:08:07,240 --> 00:08:12,879
<font color="#E5E5E5">performance of the applications</font>

169
00:08:08,499 --> 00:08:15,659
thanks to this visibility so AB<font color="#CCCCCC"> SEC is</font>

170
00:08:12,879 --> 00:08:18,479
taking the same direction from

171
00:08:15,659 --> 00:08:21,550
parametric and external protections to

172
00:08:18,479 --> 00:08:24,120
<font color="#CCCCCC">decentralize protection</font><font color="#E5E5E5"> inside the</font>

173
00:08:21,550 --> 00:08:27,699
runtime of the applications

174
00:08:24,120 --> 00:08:30,459
so how do we<font color="#E5E5E5"> want to do this at scale</font>

175
00:08:27,699 --> 00:08:34,180
<font color="#E5E5E5">I'm sure as</font><font color="#CCCCCC"> abstract practitioners you</font>

176
00:08:30,459 --> 00:08:36,729
<font color="#CCCCCC">envision a lot of</font><font color="#E5E5E5"> issues here</font><font color="#CCCCCC"> right</font><font color="#E5E5E5"> who</font>

177
00:08:34,179 --> 00:08:38,769
is<font color="#E5E5E5"> working in his company with two weeks</font>

178
00:08:36,729 --> 00:08:44,050
<font color="#CCCCCC">sprints or who's developer is working</font>

179
00:08:38,769 --> 00:08:46,990
<font color="#E5E5E5">with two sprints yeah maybe longer</font>

180
00:08:44,049 --> 00:08:49,269
three week Sprint's yeah I guess<font color="#CCCCCC"> two</font>

181
00:08:46,990 --> 00:08:52,350
which is<font color="#E5E5E5"> there is the</font><font color="#CCCCCC"> norm right that</font>

182
00:08:49,269 --> 00:08:54,270
<font color="#CCCCCC">slow attacks are minutes</font>

183
00:08:52,350 --> 00:08:56,910
when you want<font color="#CCCCCC"> to contour an attacker to</font>

184
00:08:54,270 --> 00:08:58,800
detect something<font color="#E5E5E5"> happening in your in</font>

185
00:08:56,910 --> 00:09:00,750
<font color="#CCCCCC">your company you don't</font><font color="#E5E5E5"> have to which to</font>

186
00:08:58,800 --> 00:09:05,790
respond right<font color="#E5E5E5"> the the order of magnitude</font>

187
00:09:00,750 --> 00:09:09,720
<font color="#CCCCCC">is not</font><font color="#E5E5E5"> however the minutes so anyway we</font>

188
00:09:05,790 --> 00:09:11,610
<font color="#E5E5E5">don't know by what</font><font color="#CCCCCC"> where</font><font color="#E5E5E5"> are where is</font>

189
00:09:09,720 --> 00:09:13,590
the security logic lying in all of our

190
00:09:11,610 --> 00:09:16,470
applications<font color="#CCCCCC"> all</font><font color="#E5E5E5"> right it's to be like</font>

191
00:09:13,590 --> 00:09:19,830
many of us manage more<font color="#CCCCCC"> than 50</font>

192
00:09:16,470 --> 00:09:21,930
applications<font color="#E5E5E5"> it's not possible to know</font>

193
00:09:19,830 --> 00:09:22,740
<font color="#E5E5E5">by</font><font color="#CCCCCC"> heard each and every</font><font color="#E5E5E5"> of these</font>

194
00:09:21,930 --> 00:09:24,630
applications

195
00:09:22,740 --> 00:09:27,330
anyway the developers<font color="#E5E5E5"> are per second</font>

196
00:09:24,630 --> 00:09:31,530
<font color="#E5E5E5">every day deploying applications</font><font color="#CCCCCC"> every</font>

197
00:09:27,330 --> 00:09:33,360
day and the whole organization<font color="#CCCCCC"> goal is</font>

198
00:09:31,530 --> 00:09:38,100
to make the developers move faster and

199
00:09:33,360 --> 00:09:40,170
<font color="#CCCCCC">faster right</font><font color="#E5E5E5"> so it's it's</font><font color="#CCCCCC"> not possible</font>

200
00:09:38,100 --> 00:09:42,870
to<font color="#E5E5E5"> manually put this inside each and</font>

201
00:09:40,170 --> 00:09:45,209
<font color="#CCCCCC">every application</font><font color="#E5E5E5"> and as abstract teams</font>

202
00:09:42,870 --> 00:09:47,520
<font color="#E5E5E5">we don't want to break this flow right</font>

203
00:09:45,210 --> 00:09:49,800
we don't<font color="#E5E5E5"> want</font><font color="#CCCCCC"> to break the developers</font>

204
00:09:47,520 --> 00:09:52,380
<font color="#CCCCCC">war</font><font color="#E5E5E5"> flow</font><font color="#CCCCCC"> first</font><font color="#E5E5E5"> of all it would slow down</font>

205
00:09:49,800 --> 00:09:55,469
<font color="#E5E5E5">all the company and secondly it</font><font color="#CCCCCC"> doesn't</font>

206
00:09:52,380 --> 00:09:57,300
actually<font color="#CCCCCC"> write so it's</font><font color="#E5E5E5"> not</font><font color="#CCCCCC"> possible to</font>

207
00:09:55,470 --> 00:10:02,960
do this by<font color="#E5E5E5"> hand we need something that</font>

208
00:09:57,300 --> 00:10:05,870
<font color="#E5E5E5">can push this</font><font color="#CCCCCC"> security information</font><font color="#E5E5E5"> to us</font>

209
00:10:02,960 --> 00:10:08,610
without involving the development teams

210
00:10:05,870 --> 00:10:12,180
the<font color="#CCCCCC"> wait</font><font color="#E5E5E5"> resist</font><font color="#CCCCCC"> is dynamic</font>

211
00:10:08,610 --> 00:10:14,580
instrumentation so what is<font color="#CCCCCC"> card</font>

212
00:10:12,180 --> 00:10:15,959
instrumentation here you have a function

213
00:10:14,580 --> 00:10:18,330
flow<font color="#E5E5E5"> right that's that's a program</font>

214
00:10:15,960 --> 00:10:21,450
<font color="#E5E5E5">execution several functions at some</font>

215
00:10:18,330 --> 00:10:25,020
point<font color="#E5E5E5"> a function called authenticate is</font>

216
00:10:21,450 --> 00:10:26,820
called<font color="#E5E5E5"> all right so it's highly</font>

217
00:10:25,020 --> 00:10:31,199
sensitive this mission we would like<font color="#CCCCCC"> to</font>

218
00:10:26,820 --> 00:10:33,810
track it how could we do<font color="#E5E5E5"> this there is a</font>

219
00:10:31,200 --> 00:10:36,870
<font color="#E5E5E5">famous example heavy everyone know</font><font color="#CCCCCC"> in</font>

220
00:10:33,810 --> 00:10:39,479
<font color="#E5E5E5">this room that</font><font color="#CCCCCC"> the antivirus antivirus</font>

221
00:10:36,870 --> 00:10:40,170
<font color="#CCCCCC">each time you open a file on your</font>

222
00:10:39,480 --> 00:10:42,870
computer

223
00:10:40,170 --> 00:10:46,410
they will proactively<font color="#CCCCCC"> check if the file</font>

224
00:10:42,870 --> 00:10:48,990
is holding a<font color="#E5E5E5"> very a virus or not how</font>

225
00:10:46,410 --> 00:10:52,079
does<font color="#E5E5E5"> it work you</font><font color="#CCCCCC"> did not change anything</font>

226
00:10:48,990 --> 00:10:56,370
<font color="#CCCCCC">on a new machine</font><font color="#E5E5E5"> to install antivirus</font>

227
00:10:52,080 --> 00:11:00,120
<font color="#CCCCCC">right antivirus transparently asked your</font>

228
00:10:56,370 --> 00:11:02,370
<font color="#E5E5E5">operating system to replace the opening</font>

229
00:11:00,120 --> 00:11:05,100
function with<font color="#E5E5E5"> its own opening function</font>

230
00:11:02,370 --> 00:11:05,760
so<font color="#E5E5E5"> it's time any program on your machine</font>

231
00:11:05,100 --> 00:11:08,910
<font color="#CCCCCC">is</font>

232
00:11:05,760 --> 00:11:10,439
in a file<font color="#E5E5E5"> the</font><font color="#CCCCCC"> antivirus opens</font><font color="#E5E5E5"> function</font>

233
00:11:08,910 --> 00:11:13,319
will be called<font color="#E5E5E5"> first</font>

234
00:11:10,440 --> 00:11:16,170
that's simple code instrumentation<font color="#E5E5E5"> it's</font>

235
00:11:13,320 --> 00:11:17,670
widely known<font color="#CCCCCC"> and used technique so we</font>

236
00:11:16,170 --> 00:11:22,469
<font color="#E5E5E5">could do the same in web applications</font>

237
00:11:17,670 --> 00:11:24,269
<font color="#E5E5E5">writer in our case instead of saying</font><font color="#CCCCCC"> our</font>

238
00:11:22,470 --> 00:11:26,610
<font color="#E5E5E5">I want to check</font><font color="#CCCCCC"> if there is a</font><font color="#E5E5E5"> virus</font>

239
00:11:24,269 --> 00:11:29,040
I will call my<font color="#E5E5E5"> helper you remember the</font>

240
00:11:26,610 --> 00:11:31,889
<font color="#CCCCCC">first</font><font color="#E5E5E5"> time in my toolbox and this helper</font>

241
00:11:29,040 --> 00:11:34,349
will send<font color="#E5E5E5"> information to our event</font>

242
00:11:31,889 --> 00:11:37,440
stream<font color="#E5E5E5"> okay so that's card</font>

243
00:11:34,350 --> 00:11:38,579
instrumentation<font color="#E5E5E5"> but it's not enough we</font>

244
00:11:37,440 --> 00:11:43,320
don't want to have to<font color="#E5E5E5"> code this</font>

245
00:11:38,579 --> 00:11:45,959
information what<font color="#CCCCCC"> we want is</font><font color="#E5E5E5"> to be able</font>

246
00:11:43,320 --> 00:11:48,839
<font color="#E5E5E5">to automatically</font><font color="#CCCCCC"> drive the application</font>

247
00:11:45,959 --> 00:11:50,609
telling<font color="#CCCCCC"> hit alright I want you to</font><font color="#E5E5E5"> record</font>

248
00:11:48,839 --> 00:11:52,920
<font color="#E5E5E5">this function and this function in this</font>

249
00:11:50,610 --> 00:11:55,589
<font color="#E5E5E5">function and</font><font color="#CCCCCC"> we want</font><font color="#E5E5E5"> to be able</font><font color="#CCCCCC"> to</font>

250
00:11:52,920 --> 00:12:00,060
change<font color="#E5E5E5"> this dynamically as often as we</font>

251
00:11:55,589 --> 00:12:03,209
want<font color="#CCCCCC"> as</font><font color="#E5E5E5"> soon as possible how does</font><font color="#CCCCCC"> it</font>

252
00:12:00,060 --> 00:12:05,160
<font color="#E5E5E5">work in practice well I guess you have</font>

253
00:12:03,209 --> 00:12:07,859
plenty of languages across<font color="#E5E5E5"> your</font>

254
00:12:05,160 --> 00:12:09,810
<font color="#E5E5E5">organization's 50 applications</font><font color="#CCCCCC"> don't</font>

255
00:12:07,860 --> 00:12:14,029
<font color="#E5E5E5">tell me you are using only one language</font>

256
00:12:09,810 --> 00:12:16,439
<font color="#E5E5E5">I don't belie</font><font color="#CCCCCC"> I</font><font color="#E5E5E5"> don't buy it so I guess</font>

257
00:12:14,029 --> 00:12:18,839
one<font color="#CCCCCC"> of the language this could be Ruby</font>

258
00:12:16,440 --> 00:12:20,790
but anyway my point is you have several

259
00:12:18,839 --> 00:12:22,680
methods<font color="#CCCCCC"> to handle dynamic</font>

260
00:12:20,790 --> 00:12:24,269
instrumentation<font color="#CCCCCC"> Ruby</font><font color="#E5E5E5"> is one of the</font>

261
00:12:22,680 --> 00:12:27,540
simplest example because<font color="#E5E5E5"> that's a very</font>

262
00:12:24,269 --> 00:12:29,399
<font color="#CCCCCC">dynamic language highly reflexive it has</font>

263
00:12:27,540 --> 00:12:32,849
a lot of built-in<font color="#E5E5E5"> helpers to help</font><font color="#CCCCCC"> you do</font>

264
00:12:29,399 --> 00:12:36,589
this here we<font color="#CCCCCC"> just take the</font><font color="#E5E5E5"> original</font>

265
00:12:32,850 --> 00:12:39,180
method<font color="#E5E5E5"> we rename it and we create our</font>

266
00:12:36,589 --> 00:12:41,339
helper method we rename it with the

267
00:12:39,180 --> 00:12:43,079
<font color="#E5E5E5">original</font><font color="#CCCCCC"> function name we</font><font color="#E5E5E5"> just have to</font>

268
00:12:41,339 --> 00:12:45,630
tell<font color="#E5E5E5"> our helper to call the</font><font color="#CCCCCC"> original</font>

269
00:12:43,079 --> 00:12:47,430
function<font color="#E5E5E5"> and that's it</font><font color="#CCCCCC"> or the</font><font color="#E5E5E5"> Ruby</font>

270
00:12:45,630 --> 00:12:48,990
program will believe that<font color="#E5E5E5"> it's calling</font>

271
00:12:47,430 --> 00:12:53,069
<font color="#CCCCCC">the original function when how our</font>

272
00:12:48,990 --> 00:12:57,839
helper will be called<font color="#E5E5E5"> Ruby quite easy</font>

273
00:12:53,069 --> 00:13:01,260
let's take<font color="#E5E5E5"> Java it's not the same you</font>

274
00:12:57,839 --> 00:13:04,199
know<font color="#CCCCCC"> Java is compiled</font><font color="#E5E5E5"> it's not as</font>

275
00:13:01,260 --> 00:13:07,139
trivial<font color="#E5E5E5"> to change as Ruby you need to</font>

276
00:13:04,199 --> 00:13:09,089
deal at those<font color="#CCCCCC"> by ticker liver to do this</font>

277
00:13:07,139 --> 00:13:12,180
<font color="#E5E5E5">you have several libraries that help you</font>

278
00:13:09,089 --> 00:13:15,209
do it<font color="#E5E5E5"> like Java ASM that allow you to</font>

279
00:13:12,180 --> 00:13:18,239
write plain bytecode it's a pleasure

280
00:13:15,209 --> 00:13:19,560
I love<font color="#E5E5E5"> that code but to do this at scale</font>

281
00:13:18,240 --> 00:13:23,209
<font color="#E5E5E5">across</font>

282
00:13:19,560 --> 00:13:25,888
running applications<font color="#E5E5E5"> not so easy</font><font color="#CCCCCC"> so</font>

283
00:13:23,209 --> 00:13:27,810
<font color="#E5E5E5">usually</font><font color="#CCCCCC"> you use a</font><font color="#E5E5E5"> third-party library</font>

284
00:13:25,889 --> 00:13:29,730
<font color="#E5E5E5">such as bad body which is open source</font>

285
00:13:27,810 --> 00:13:33,748
<font color="#CCCCCC">and help you instrument applications</font><font color="#E5E5E5"> as</font>

286
00:13:29,730 --> 00:13:35,490
much as you want<font color="#E5E5E5"> so not as easy in Java</font>

287
00:13:33,749 --> 00:13:39,059
<font color="#E5E5E5">as in other languages I'm not even</font>

288
00:13:35,490 --> 00:13:44,279
mentioning<font color="#E5E5E5"> PHP whose quarantine is</font><font color="#CCCCCC"> CDN</font>

289
00:13:39,059 --> 00:13:45,839
<font color="#E5E5E5">API is in C not</font><font color="#CCCCCC"> G s not so hard</font><font color="#E5E5E5"> but</font><font color="#CCCCCC"> you</font>

290
00:13:44,279 --> 00:13:48,420
have<font color="#E5E5E5"> specific use cases for each</font>

291
00:13:45,839 --> 00:13:52,350
<font color="#CCCCCC">function but it's possible</font><font color="#E5E5E5"> in its</font>

292
00:13:48,420 --> 00:13:55,139
language<font color="#E5E5E5"> to use such such helpers you</font>

293
00:13:52,350 --> 00:13:56,939
can think of it as<font color="#E5E5E5"> attaching to any</font>

294
00:13:55,139 --> 00:13:58,110
application<font color="#CCCCCC"> with a debugger</font><font color="#E5E5E5"> right it's</font>

295
00:13:56,939 --> 00:14:00,120
<font color="#E5E5E5">possible to do it remotely</font>

296
00:13:58,110 --> 00:14:01,649
<font color="#E5E5E5">gdb you attach with the PID of</font>

297
00:14:00,120 --> 00:14:07,559
duplication and<font color="#E5E5E5"> you can do whatever you</font>

298
00:14:01,649 --> 00:14:10,800
want<font color="#E5E5E5"> at any point it's the same so if</font>

299
00:14:07,559 --> 00:14:13,709
you do this<font color="#E5E5E5"> you are hooking running</font>

300
00:14:10,800 --> 00:14:15,779
programs you could retrieve all<font color="#CCCCCC"> the</font>

301
00:14:13,709 --> 00:14:17,430
context<font color="#CCCCCC"> you</font><font color="#E5E5E5"> need right because you are</font>

302
00:14:15,779 --> 00:14:19,740
<font color="#E5E5E5">inside the application inside the</font>

303
00:14:17,430 --> 00:14:23,248
framework so you might<font color="#CCCCCC"> be able</font><font color="#E5E5E5"> to</font><font color="#CCCCCC"> say</font>

304
00:14:19,740 --> 00:14:26,490
mmm this<font color="#E5E5E5"> is</font><font color="#CCCCCC"> a complicated user and our</font>

305
00:14:23,249 --> 00:14:29,370
helper will be able<font color="#E5E5E5"> will be</font><font color="#CCCCCC"> able to send</font>

306
00:14:26,490 --> 00:14:30,720
this information<font color="#CCCCCC"> to</font><font color="#E5E5E5"> our event stream so</font>

307
00:14:29,370 --> 00:14:34,500
we could retrieve like you some business

308
00:14:30,720 --> 00:14:38,069
<font color="#E5E5E5">information this function</font><font color="#CCCCCC"> that</font><font color="#E5E5E5"> is adding</font>

309
00:14:34,500 --> 00:14:40,410
role or a<font color="#E5E5E5"> permission to user</font><font color="#CCCCCC"> well I want</font>

310
00:14:38,069 --> 00:14:44,670
to<font color="#E5E5E5"> gather in my</font><font color="#CCCCCC"> event stream this rule</font>

311
00:14:40,410 --> 00:14:47,129
<font color="#CCCCCC">or this permission also we</font><font color="#E5E5E5"> are in the</font>

312
00:14:44,670 --> 00:14:49,050
framework<font color="#E5E5E5"> so I can gather any</font>

313
00:14:47,129 --> 00:14:51,629
<font color="#CCCCCC">information related to map</font><font color="#E5E5E5"> to</font><font color="#CCCCCC"> the</font>

314
00:14:49,050 --> 00:14:54,389
framework<font color="#CCCCCC"> that I want there cryptography</font>

315
00:14:51,629 --> 00:14:58,319
<font color="#CCCCCC">what is the</font><font color="#E5E5E5"> route that</font><font color="#CCCCCC"> is</font><font color="#E5E5E5"> being called</font>

316
00:14:54,389 --> 00:14:59,910
<font color="#CCCCCC">any</font><font color="#E5E5E5"> information you can</font><font color="#CCCCCC"> ask also</font><font color="#E5E5E5"> it's a</font>

317
00:14:58,319 --> 00:15:02,790
web application<font color="#CCCCCC"> so what the web</font>

318
00:14:59,910 --> 00:15:04,559
application receives is an HTTP packet

319
00:15:02,790 --> 00:15:09,149
at the beginning right<font color="#CCCCCC"> so you could</font><font color="#E5E5E5"> get</font>

320
00:15:04,559 --> 00:15:11,759
any<font color="#E5E5E5"> information from the layer</font><font color="#CCCCCC"> 7 or so</font>

321
00:15:09,149 --> 00:15:13,589
if<font color="#E5E5E5"> we are</font><font color="#CCCCCC"> in a micro service ecosystem</font>

322
00:15:11,759 --> 00:15:15,779
<font color="#E5E5E5">we could also get information about the</font>

323
00:15:13,589 --> 00:15:17,639
<font color="#E5E5E5">previous service that was called and if</font>

324
00:15:15,779 --> 00:15:19,319
you are using spanning information to

325
00:15:17,639 --> 00:15:21,720
understand<font color="#CCCCCC"> the</font><font color="#E5E5E5"> perfect flow of your</font>

326
00:15:19,319 --> 00:15:23,189
services across all your company well

327
00:15:21,720 --> 00:15:29,850
you could<font color="#CCCCCC"> recall</font><font color="#E5E5E5"> this information as</font>

328
00:15:23,189 --> 00:15:32,550
<font color="#E5E5E5">well now that's the</font><font color="#CCCCCC"> theory right but if</font>

329
00:15:29,850 --> 00:15:33,370
we want to<font color="#E5E5E5"> do this at scale we</font><font color="#CCCCCC"> need our</font>

330
00:15:32,550 --> 00:15:35,469
developers to

331
00:15:33,370 --> 00:15:38,350
trust us<font color="#CCCCCC"> and if you tell your developers</font>

332
00:15:35,470 --> 00:15:40,660
<font color="#CCCCCC">oh install this library don't worry</font><font color="#E5E5E5"> it's</font>

333
00:15:38,350 --> 00:15:42,040
<font color="#E5E5E5">gonna do magical thing and the Upstate</font>

334
00:15:40,660 --> 00:15:44,860
guys won't bother you anymore

335
00:15:42,040 --> 00:15:47,829
<font color="#E5E5E5">that completely true right</font><font color="#CCCCCC"> but it's what</font>

336
00:15:44,860 --> 00:15:49,570
we would<font color="#E5E5E5"> like</font><font color="#CCCCCC"> to do this library</font><font color="#E5E5E5"> needs</font>

337
00:15:47,830 --> 00:15:51,400
to be<font color="#E5E5E5"> ballot proof we don't want to have</font>

338
00:15:49,570 --> 00:15:54,850
like performance impacts and

339
00:15:51,400 --> 00:15:58,089
<font color="#E5E5E5">underdeveloped other applications so one</font>

340
00:15:54,850 --> 00:16:00,580
way<font color="#CCCCCC"> to do it is to build</font><font color="#E5E5E5"> a</font><font color="#CCCCCC"> simple and</font>

341
00:15:58,089 --> 00:16:03,010
reliable architecture you<font color="#E5E5E5"> spoon one</font>

342
00:16:00,580 --> 00:16:06,430
thread<font color="#E5E5E5"> that is reading</font><font color="#CCCCCC"> a new cue</font><font color="#E5E5E5"> okay</font>

343
00:16:03,010 --> 00:16:09,310
<font color="#CCCCCC">and then each time</font><font color="#E5E5E5"> a hooked function is</font>

344
00:16:06,430 --> 00:16:12,189
called<font color="#E5E5E5"> you can</font><font color="#CCCCCC"> easily push any time in</font>

345
00:16:09,310 --> 00:16:13,839
the queue<font color="#E5E5E5"> and so</font><font color="#CCCCCC"> it's the Ruby or the</font>

346
00:16:12,190 --> 00:16:16,839
java<font color="#E5E5E5"> virtual machine that will handle</font>

347
00:16:13,839 --> 00:16:19,839
this perfectly when some CPU<font color="#E5E5E5"> time</font><font color="#CCCCCC"> is</font>

348
00:16:16,839 --> 00:16:22,210
available<font color="#E5E5E5"> we'll run the thread that</font>

349
00:16:19,839 --> 00:16:24,100
allows me to<font color="#CCCCCC"> gather this information and</font>

350
00:16:22,210 --> 00:16:26,140
send them to<font color="#CCCCCC"> the event stream you could</font>

351
00:16:24,100 --> 00:16:27,940
do this as much<font color="#CCCCCC"> as</font><font color="#E5E5E5"> you want every second</font>

352
00:16:26,140 --> 00:16:30,100
every<font color="#CCCCCC"> ten second</font><font color="#E5E5E5"> anyway</font>

353
00:16:27,940 --> 00:16:32,310
the impact and the<font color="#E5E5E5"> application</font>

354
00:16:30,100 --> 00:16:34,390
performance will be many more which is

355
00:16:32,310 --> 00:16:36,849
what<font color="#E5E5E5"> we wanted</font><font color="#CCCCCC"> to achieve</font>

356
00:16:34,390 --> 00:16:38,709
of course it's best for reliability<font color="#E5E5E5"> as</font>

357
00:16:36,850 --> 00:16:40,630
well because let's say<font color="#CCCCCC"> for any reason</font>

358
00:16:38,709 --> 00:16:43,060
the network is<font color="#E5E5E5"> down or the event stream</font>

359
00:16:40,630 --> 00:16:44,950
is down where the thread can<font color="#E5E5E5"> wait</font><font color="#CCCCCC"> before</font>

360
00:16:43,060 --> 00:16:51,040
<font color="#E5E5E5">saying flashing all the data</font>

361
00:16:44,950 --> 00:16:54,400
<font color="#E5E5E5">Brod so how could this work at scale in</font>

362
00:16:51,040 --> 00:16:58,870
my<font color="#E5E5E5"> lab</font><font color="#CCCCCC"> or in my company I will</font><font color="#E5E5E5"> ask each</font>

363
00:16:54,400 --> 00:17:01,420
<font color="#CCCCCC">team to include</font><font color="#E5E5E5"> this simple library this</font>

364
00:16:58,870 --> 00:17:04,929
library<font color="#E5E5E5"> when the application starts can</font>

365
00:17:01,420 --> 00:17:09,040
fetch instrumentation directives<font color="#E5E5E5"> from a</font>

366
00:17:04,929 --> 00:17:13,240
server<font color="#CCCCCC"> I will write this file and I</font><font color="#E5E5E5"> will</font>

367
00:17:09,040 --> 00:17:15,609
ask the application to instrument any

368
00:17:13,240 --> 00:17:18,250
function I want<font color="#E5E5E5"> in this case it would be</font>

369
00:17:15,609 --> 00:17:21,458
the<font color="#E5E5E5"> token generation method of the user</font>

370
00:17:18,250 --> 00:17:23,650
class<font color="#CCCCCC"> and I want to say okay send me</font>

371
00:17:21,459 --> 00:17:26,290
<font color="#CCCCCC">some</font><font color="#E5E5E5"> properties such as</font><font color="#CCCCCC"> the impersonated</font>

372
00:17:23,650 --> 00:17:28,500
user here<font color="#CCCCCC"> I could also say</font><font color="#E5E5E5"> all right I</font>

373
00:17:26,290 --> 00:17:32,590
want<font color="#CCCCCC"> an impersonation method of the user</font>

374
00:17:28,500 --> 00:17:34,179
class<font color="#CCCCCC"> I can ask anything</font><font color="#E5E5E5"> my applications</font>

375
00:17:32,590 --> 00:17:35,620
will<font color="#E5E5E5"> retrieve this</font><font color="#CCCCCC"> information and we</font>

376
00:17:34,179 --> 00:17:37,840
could<font color="#E5E5E5"> imagine that they are retrieving</font>

377
00:17:35,620 --> 00:17:39,939
it like every minute<font color="#CCCCCC"> so it's time I</font>

378
00:17:37,840 --> 00:17:41,909
change this file<font color="#E5E5E5"> and I want to hook a</font>

379
00:17:39,940 --> 00:17:45,640
new method a new

380
00:17:41,910 --> 00:17:46,630
sensitive<font color="#E5E5E5"> business call I can hide it</font>

381
00:17:45,640 --> 00:17:46,870
<font color="#E5E5E5">easily in this file</font>

382
00:17:46,630 --> 00:17:52,120
the

383
00:17:46,870 --> 00:17:54,580
applications<font color="#CCCCCC"> will retreat</font><font color="#E5E5E5"> so each time</font>

384
00:17:52,120 --> 00:17:56,649
<font color="#E5E5E5">any application calls something you have</font>

385
00:17:54,580 --> 00:17:59,460
instrumented in the file we gather it

386
00:17:56,650 --> 00:18:01,840
<font color="#CCCCCC">and we retrieve it in the event stream</font>

387
00:17:59,460 --> 00:18:06,820
so based on this event<font color="#E5E5E5"> stream that is</font>

388
00:18:01,840 --> 00:18:11,080
<font color="#E5E5E5">now filled of many plenty data what can</font>

389
00:18:06,820 --> 00:18:12,970
we do<font color="#E5E5E5"> with an analysis we could take a</font>

390
00:18:11,080 --> 00:18:15,970
<font color="#E5E5E5">look at the volume of course is this</font>

391
00:18:12,970 --> 00:18:18,520
<font color="#CCCCCC">helper corner called</font><font color="#E5E5E5"> a lot or not we</font>

392
00:18:15,970 --> 00:18:21,190
could look at<font color="#E5E5E5"> the successive actions</font>

393
00:18:18,520 --> 00:18:23,620
performed by a given<font color="#E5E5E5"> user</font><font color="#CCCCCC"> or maybe a</font>

394
00:18:21,190 --> 00:18:26,470
given IP maybe brother given

395
00:18:23,620 --> 00:18:29,409
<font color="#CCCCCC">organization we could also detect</font>

396
00:18:26,470 --> 00:18:31,840
unusual activity running<font color="#E5E5E5"> some machine</font>

397
00:18:29,410 --> 00:18:34,900
<font color="#CCCCCC">learning algorithm forestry whatever on</font>

398
00:18:31,840 --> 00:18:37,059
<font color="#CCCCCC">the</font><font color="#E5E5E5"> streaming engine we could find</font>

399
00:18:34,900 --> 00:18:39,220
anomalies<font color="#E5E5E5"> in volume in proportions</font><font color="#CCCCCC"> per</font>

400
00:18:37,059 --> 00:18:41,678
IP per user per application<font color="#CCCCCC"> or</font>

401
00:18:39,220 --> 00:18:44,679
organization per group<font color="#E5E5E5"> whatever it</font>

402
00:18:41,679 --> 00:18:48,610
depends on your<font color="#CCCCCC"> business and also we</font>

403
00:18:44,679 --> 00:18:51,040
could<font color="#E5E5E5"> check the logic flows are these</font>

404
00:18:48,610 --> 00:18:53,320
IPS<font color="#E5E5E5"> in general calling these functions</font>

405
00:18:51,040 --> 00:18:55,600
in<font color="#E5E5E5"> the right order</font><font color="#CCCCCC"> or not all of</font><font color="#E5E5E5"> this is</font>

406
00:18:53,320 --> 00:18:58,480
up to<font color="#E5E5E5"> you because it's your business</font>

407
00:18:55,600 --> 00:19:01,090
<font color="#E5E5E5">logic and that's the place when you need</font>

408
00:18:58,480 --> 00:19:02,590
<font color="#CCCCCC">to configure things</font><font color="#E5E5E5"> and to react to</font>

409
00:19:01,090 --> 00:19:06,760
detect things<font color="#E5E5E5"> accordingly to your</font>

410
00:19:02,590 --> 00:19:11,320
<font color="#E5E5E5">business once we have detected things</font>

411
00:19:06,760 --> 00:19:13,420
such as<font color="#E5E5E5"> anomalies and we have been able</font>

412
00:19:11,320 --> 00:19:17,020
to<font color="#E5E5E5"> write security errors we want to</font>

413
00:19:13,420 --> 00:19:20,620
respond<font color="#E5E5E5"> what's powerful here is that</font>

414
00:19:17,020 --> 00:19:23,110
<font color="#E5E5E5">lying inside</font><font color="#CCCCCC"> the application we could</font>

415
00:19:20,620 --> 00:19:26,020
imagine implementing any kind of

416
00:19:23,110 --> 00:19:28,178
<font color="#E5E5E5">security response we want so we could</font>

417
00:19:26,020 --> 00:19:30,879
deny access completely to sensitive

418
00:19:28,179 --> 00:19:34,750
functions we<font color="#E5E5E5"> could also deny access to</font>

419
00:19:30,880 --> 00:19:36,640
<font color="#E5E5E5">whole service we could mark an account</font>

420
00:19:34,750 --> 00:19:38,740
as read-only so this account is<font color="#E5E5E5"> not</font>

421
00:19:36,640 --> 00:19:41,290
allowed to<font color="#CCCCCC"> pass things anymore</font><font color="#E5E5E5"> in the</font>

422
00:19:38,740 --> 00:19:47,380
database<font color="#E5E5E5"> for instance we could lock user</font>

423
00:19:41,290 --> 00:19:50,260
account<font color="#E5E5E5"> our rugged user out also Jenny</font>

424
00:19:47,380 --> 00:19:53,400
rich<font color="#E5E5E5"> our add method like triggering a</font>

425
00:19:50,260 --> 00:19:56,080
pager<font color="#CCCCCC"> firing a web</font><font color="#E5E5E5"> or creating a ticket</font>

426
00:19:53,400 --> 00:20:00,460
<font color="#E5E5E5">all</font><font color="#CCCCCC"> of this</font><font color="#E5E5E5"> is possible</font><font color="#CCCCCC"> with</font><font color="#E5E5E5"> this it's</font>

427
00:19:56,080 --> 00:20:02,770
up to you let<font color="#E5E5E5"> me ask you some</font>

428
00:20:00,460 --> 00:20:14,170
<font color="#CCCCCC">a personal question is there anyone</font>

429
00:20:02,770 --> 00:20:17,139
working<font color="#E5E5E5"> at Facebook in this room two</font>

430
00:20:14,170 --> 00:20:21,330
weeks ago<font color="#CCCCCC"> 50</font><font color="#E5E5E5"> million user accounts have</font>

431
00:20:17,140 --> 00:20:25,570
<font color="#CCCCCC">been stolen</font><font color="#E5E5E5"> at Facebook that's a lot and</font>

432
00:20:21,330 --> 00:20:28,449
no generic technical vulnerability has

433
00:20:25,570 --> 00:20:33,720
been used<font color="#E5E5E5"> by</font><font color="#CCCCCC"> these</font><font color="#E5E5E5"> hackers</font><font color="#CCCCCC"> to get this</font>

434
00:20:28,450 --> 00:20:37,300
<font color="#CCCCCC">information</font><font color="#E5E5E5"> only</font><font color="#CCCCCC"> business logic flows</font>

435
00:20:33,720 --> 00:20:40,630
<font color="#E5E5E5">three flows have been impacted here the</font>

436
00:20:37,300 --> 00:20:44,320
first one and Facebook's you have a view

437
00:20:40,630 --> 00:20:46,300
<font color="#E5E5E5">as fusion this function allows you when</font>

438
00:20:44,320 --> 00:20:47,919
you post<font color="#E5E5E5"> something to check it as your</font>

439
00:20:46,300 --> 00:20:50,590
mother for instance<font color="#E5E5E5"> to see</font><font color="#CCCCCC"> if you have</font>

440
00:20:47,920 --> 00:20:55,960
not if she will see<font color="#E5E5E5"> the thing you intend</font>

441
00:20:50,590 --> 00:20:58,480
her to see the second issue this first

442
00:20:55,960 --> 00:20:59,950
<font color="#CCCCCC">sorry that's</font><font color="#E5E5E5"> not an issue so</font><font color="#CCCCCC"> the view as</font>

443
00:20:58,480 --> 00:21:01,920
function it's supposed to be<font color="#E5E5E5"> read-only</font>

444
00:20:59,950 --> 00:21:04,420
<font color="#E5E5E5">obviously because you don't want</font>

445
00:21:01,920 --> 00:21:06,100
<font color="#CCCCCC">Facebook doesn't</font><font color="#E5E5E5"> want you to</font><font color="#CCCCCC"> a protein</font>

446
00:21:04,420 --> 00:21:08,290
<font color="#CCCCCC">and the behalf of your mother</font><font color="#E5E5E5"> all right</font>

447
00:21:06,100 --> 00:21:10,719
<font color="#E5E5E5">so the first issue was</font><font color="#CCCCCC"> that a</font><font color="#E5E5E5"> video</font>

448
00:21:08,290 --> 00:21:15,399
uploader<font color="#E5E5E5"> was displayed under view as</font>

449
00:21:10,720 --> 00:21:18,160
page first issue second<font color="#CCCCCC"> bagger the video</font>

450
00:21:15,400 --> 00:21:22,750
<font color="#E5E5E5">uploader was generating a token with</font>

451
00:21:18,160 --> 00:21:26,350
credentials<font color="#E5E5E5"> valid and Facebook mobile ap</font>

452
00:21:22,750 --> 00:21:29,980
is second issue<font color="#CCCCCC"> the third issue is that</font>

453
00:21:26,350 --> 00:21:33,000
<font color="#E5E5E5">this video uploader when called</font>

454
00:21:29,980 --> 00:21:36,210
in the context of the view as function

455
00:21:33,000 --> 00:21:39,400
was generating token for the

456
00:21:36,210 --> 00:21:43,180
impersonated person so if I were doing

457
00:21:39,400 --> 00:21:47,020
<font color="#E5E5E5">view as my mother uploading a video I</font>

458
00:21:43,180 --> 00:21:49,720
<font color="#E5E5E5">would be able</font><font color="#CCCCCC"> to retrieve the the</font>

459
00:21:47,020 --> 00:21:52,300
credentials for<font color="#CCCCCC"> the Facebook</font><font color="#E5E5E5"> mobile ap</font>

460
00:21:49,720 --> 00:21:54,790
<font color="#E5E5E5">is right that's how the hackers have</font>

461
00:21:52,300 --> 00:21:57,639
been able<font color="#E5E5E5"> to impersonate a lot of people</font>

462
00:21:54,790 --> 00:21:59,770
and automating this<font color="#CCCCCC"> they managed to</font>

463
00:21:57,640 --> 00:22:05,590
<font color="#E5E5E5">retrieve token for a lot of external</font>

464
00:21:59,770 --> 00:22:07,210
users so unlike us to guess how<font color="#CCCCCC"> Facebook</font>

465
00:22:05,590 --> 00:22:08,830
is implementing this<font color="#E5E5E5"> thing I'm really</font>

466
00:22:07,210 --> 00:22:10,600
<font color="#E5E5E5">sad</font><font color="#CCCCCC"> nobody's</font><font color="#E5E5E5"> from Facebook</font><font color="#CCCCCC"> actually</font>

467
00:22:08,830 --> 00:22:13,080
because I'd love<font color="#E5E5E5"> to</font><font color="#CCCCCC"> get the</font><font color="#E5E5E5"> feeling</font><font color="#CCCCCC"> on</font>

468
00:22:10,600 --> 00:22:14,459
that but if you<font color="#E5E5E5"> have friends</font><font color="#CCCCCC"> I</font><font color="#E5E5E5"> love</font>

469
00:22:13,080 --> 00:22:16,409
- I'd love<font color="#CCCCCC"> to get in touch</font><font color="#E5E5E5"> I think</font><font color="#CCCCCC"> there</font>

470
00:22:14,460 --> 00:22:20,250
<font color="#E5E5E5">are some Facebook guy in this in the</font>

471
00:22:16,410 --> 00:22:22,380
<font color="#E5E5E5">conference</font><font color="#CCCCCC"> so let's try</font><font color="#E5E5E5"> to guess to be</font>

472
00:22:20,250 --> 00:22:25,230
honest I don't<font color="#E5E5E5"> even have a Facebook</font>

473
00:22:22,380 --> 00:22:28,830
account<font color="#E5E5E5"> so and maybe not the</font><font color="#CCCCCC"> best -</font><font color="#E5E5E5"> to</font>

474
00:22:25,230 --> 00:22:32,340
discuss it if you disagree<font color="#E5E5E5"> but I think</font>

475
00:22:28,830 --> 00:22:34,949
from a developer point of view<font color="#E5E5E5"> that they</font>

476
00:22:32,340 --> 00:22:37,860
have like<font color="#E5E5E5"> three distinct distinct</font>

477
00:22:34,950 --> 00:22:39,990
<font color="#CCCCCC">services</font><font color="#E5E5E5"> the video uploader service the</font>

478
00:22:37,860 --> 00:22:44,219
view<font color="#CCCCCC"> ad service and these two ones are</font>

479
00:22:39,990 --> 00:22:46,800
publicly<font color="#E5E5E5"> facing the last one would be</font>

480
00:22:44,220 --> 00:22:51,930
the user token management<font color="#E5E5E5"> service this</font>

481
00:22:46,800 --> 00:22:55,879
<font color="#E5E5E5">service</font><font color="#CCCCCC"> is generating token only for the</font>

482
00:22:51,930 --> 00:22:59,130
<font color="#CCCCCC">- the view as in the</font><font color="#E5E5E5"> video uploader so</font>

483
00:22:55,880 --> 00:23:01,860
what do<font color="#CCCCCC"> we</font><font color="#E5E5E5"> want to record</font><font color="#CCCCCC"> if we were in</font>

484
00:22:59,130 --> 00:23:04,980
the<font color="#CCCCCC"> Facebook</font><font color="#E5E5E5"> security team wanting to</font>

485
00:23:01,860 --> 00:23:08,100
see this kind<font color="#E5E5E5"> of</font><font color="#CCCCCC"> flaws what are the</font>

486
00:23:04,980 --> 00:23:10,260
things<font color="#CCCCCC"> we'd like</font><font color="#E5E5E5"> to instrument from my</font>

487
00:23:08,100 --> 00:23:12,929
point of view I would<font color="#E5E5E5"> instrument the</font>

488
00:23:10,260 --> 00:23:16,650
impersonation function and the user<font color="#E5E5E5"> our</font>

489
00:23:12,930 --> 00:23:18,450
<font color="#E5E5E5">token generation functions so how do I</font>

490
00:23:16,650 --> 00:23:21,390
solve<font color="#E5E5E5"> it with the framework in the</font>

491
00:23:18,450 --> 00:23:23,160
<font color="#E5E5E5">toolbox we</font><font color="#CCCCCC"> have built together</font><font color="#E5E5E5"> first</font><font color="#CCCCCC"> I</font>

492
00:23:21,390 --> 00:23:25,020
want to<font color="#CCCCCC"> record a business logic actions</font>

493
00:23:23,160 --> 00:23:28,230
<font color="#E5E5E5">right so instrumenting these two</font>

494
00:23:25,020 --> 00:23:29,790
functions this<font color="#E5E5E5"> will</font><font color="#CCCCCC"> put events now or</font>

495
00:23:28,230 --> 00:23:32,310
<font color="#CCCCCC">even</font><font color="#E5E5E5"> stream it's time these functions</font>

496
00:23:29,790 --> 00:23:35,690
are called second I want to<font color="#E5E5E5"> define rules</font>

497
00:23:32,310 --> 00:23:39,659
<font color="#E5E5E5">to detect a vulnerability exploitation</font>

498
00:23:35,690 --> 00:23:41,310
probably anomalies detection here is is

499
00:23:39,660 --> 00:23:44,130
more than enough like is the user

500
00:23:41,310 --> 00:23:46,050
calling the impersonation<font color="#CCCCCC"> too much or is</font>

501
00:23:44,130 --> 00:23:49,290
a user<font color="#CCCCCC"> occurring</font><font color="#E5E5E5"> generate</font><font color="#CCCCCC"> a token</font><font color="#E5E5E5"> too</font>

502
00:23:46,050 --> 00:23:51,510
much and then I want to<font color="#E5E5E5"> figure security</font>

503
00:23:49,290 --> 00:23:53,430
responses<font color="#CCCCCC"> okay if I was a</font><font color="#E5E5E5"> Facebook</font>

504
00:23:51,510 --> 00:23:54,960
<font color="#E5E5E5">security engineer I would not block the</font>

505
00:23:53,430 --> 00:23:57,000
user right away right<font color="#CCCCCC"> I would probably</font>

506
00:23:54,960 --> 00:23:59,310
<font color="#E5E5E5">let this model run for a couple</font><font color="#CCCCCC"> days</font>

507
00:23:57,000 --> 00:24:03,000
couple weeks to see<font color="#CCCCCC"> how it goes</font>

508
00:23:59,310 --> 00:24:05,429
only tag<font color="#E5E5E5"> the users that</font><font color="#CCCCCC"> have been doing</font>

509
00:24:03,000 --> 00:24:07,230
bad things<font color="#E5E5E5"> are supposedly bad things but</font>

510
00:24:05,430 --> 00:24:09,780
once I'm pretty confident<font color="#E5E5E5"> the thing is</font>

511
00:24:07,230 --> 00:24:11,670
<font color="#CCCCCC">walking</font><font color="#E5E5E5"> there is no reason not</font><font color="#CCCCCC"> to block</font>

512
00:24:09,780 --> 00:24:16,620
the<font color="#E5E5E5"> user directly</font><font color="#CCCCCC"> off like them for</font>

513
00:24:11,670 --> 00:24:18,960
<font color="#E5E5E5">review to</font><font color="#CCCCCC"> build it at scale</font><font color="#E5E5E5"> well you</font>

514
00:24:16,620 --> 00:24:20,219
need<font color="#E5E5E5"> data streaming engines</font><font color="#CCCCCC"> these things</font>

515
00:24:18,960 --> 00:24:24,600
are getting<font color="#E5E5E5"> mainstream</font>

516
00:24:20,220 --> 00:24:26,169
<font color="#CCCCCC">Kefka Genesis Google DCP available</font>

517
00:24:24,600 --> 00:24:29,439
everywhere

518
00:24:26,169 --> 00:24:32,080
<font color="#CCCCCC">maleeh</font><font color="#E5E5E5"> detection can be done in any way</font>

519
00:24:29,440 --> 00:24:34,809
from<font color="#CCCCCC"> the the simplest firm to the</font><font color="#E5E5E5"> more</font>

520
00:24:32,080 --> 00:24:36,549
advanced<font color="#CCCCCC"> AI algorithm</font><font color="#E5E5E5"> but most</font><font color="#CCCCCC"> trimming</font>

521
00:24:34,809 --> 00:24:42,428
engines allow you to plug<font color="#CCCCCC"> easily systems</font>

522
00:24:36,549 --> 00:24:45,100
to do it so if we sum it up and from our

523
00:24:42,429 --> 00:24:48,789
<font color="#CCCCCC">Facebook's use case point of view then I</font>

524
00:24:45,100 --> 00:24:51,369
have an instrumentation file that is

525
00:24:48,789 --> 00:24:52,720
managed by the app<font color="#CCCCCC"> section</font><font color="#E5E5E5"> right and</font>

526
00:24:51,369 --> 00:24:55,959
describing<font color="#E5E5E5"> the functions</font>

527
00:24:52,720 --> 00:24:58,029
<font color="#E5E5E5">I want to instrument these things are</font>

528
00:24:55,960 --> 00:25:02,289
retrieved by<font color="#E5E5E5"> all the applications of my</font>

529
00:24:58,029 --> 00:25:04,239
company these applications when they run

530
00:25:02,289 --> 00:25:08,080
at<font color="#CCCCCC"> runtime each</font><font color="#E5E5E5"> time a</font><font color="#CCCCCC"> user request</font>

531
00:25:04,239 --> 00:25:11,200
triggers one of<font color="#CCCCCC"> these</font><font color="#E5E5E5"> actions they will</font>

532
00:25:08,080 --> 00:25:15,489
stream this data to my event stream my

533
00:25:11,200 --> 00:25:17,470
business logic<font color="#E5E5E5"> my security</font><font color="#CCCCCC"> business</font>

534
00:25:15,489 --> 00:25:19,450
logic will run in the<font color="#E5E5E5"> processing and</font>

535
00:25:17,470 --> 00:25:24,480
analysis engine<font color="#E5E5E5"> if I detect something</font>

536
00:25:19,450 --> 00:25:24,480
bad I can respond and lock the user out

537
00:25:24,659 --> 00:25:32,009
we've built a<font color="#CCCCCC"> simple open-source project</font>

538
00:25:28,090 --> 00:25:35,879
aiming at<font color="#CCCCCC"> illustrates this use cases</font>

539
00:25:32,009 --> 00:25:40,840
<font color="#E5E5E5">don't use it in production</font><font color="#CCCCCC"> it's for</font>

540
00:25:35,879 --> 00:25:43,928
testing purposes<font color="#CCCCCC"> it's built</font><font color="#E5E5E5"> and Ruby I'd</font>

541
00:25:40,840 --> 00:25:45,399
<font color="#E5E5E5">love</font><font color="#CCCCCC"> to get your feedback</font><font color="#E5E5E5"> on this and we</font>

542
00:25:43,929 --> 00:25:48,309
could improve it together and<font color="#E5E5E5"> move it</font>

543
00:25:45,399 --> 00:25:50,889
further it's<font color="#CCCCCC"> open source feel free to</font>

544
00:25:48,309 --> 00:25:55,539
open<font color="#CCCCCC"> a pull</font><font color="#E5E5E5"> request to</font><font color="#CCCCCC"> submit issues</font>

545
00:25:50,889 --> 00:25:57,580
<font color="#E5E5E5">there don't use it in production</font><font color="#CCCCCC"> that</font>

546
00:25:55,539 --> 00:26:00,129
was our<font color="#E5E5E5"> taken protecting applications</font>

547
00:25:57,580 --> 00:26:01,600
from a business logic<font color="#E5E5E5"> attacks</font><font color="#CCCCCC"> I'd be</font>

548
00:26:00,129 --> 00:26:04,389
happy to<font color="#E5E5E5"> answer any questions would you</font>

549
00:26:01,600 --> 00:26:07,090
<font color="#E5E5E5">have some and I'll be in the in the</font>

550
00:26:04,389 --> 00:26:10,299
hotel lobby<font color="#CCCCCC"> half-hour for</font><font color="#E5E5E5"> for the next</font>

551
00:26:07,090 --> 00:26:12,879
two<font color="#E5E5E5"> days so</font><font color="#CCCCCC"> please</font><font color="#E5E5E5"> don't forget to</font><font color="#CCCCCC"> vote</font>

552
00:26:10,299 --> 00:26:16,289
<font color="#CCCCCC">when you will leave the</font><font color="#E5E5E5"> conference to</font>

553
00:26:12,879 --> 00:26:16,289
say if you<font color="#CCCCCC"> liked this</font><font color="#E5E5E5"> talk on it</font>

554
00:26:16,320 --> 00:26:19,829
[Applause]

