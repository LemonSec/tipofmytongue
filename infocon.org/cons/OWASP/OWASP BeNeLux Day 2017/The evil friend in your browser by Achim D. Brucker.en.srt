1
00:00:02,570 --> 00:00:06,859
for example today I will talk a little

2
00:00:05,420 --> 00:00:09,500
bit about the other side of web

3
00:00:06,859 --> 00:00:12,200
application security not what is going

4
00:00:09,500 --> 00:00:15,379
on in the web application itself but

5
00:00:12,200 --> 00:00:17,360
what is going on on the PC of the user

6
00:00:15,380 --> 00:00:20,390
accessing a web application in

7
00:00:17,360 --> 00:00:21,259
particular on a specific part on within

8
00:00:20,390 --> 00:00:24,169
the browser

9
00:00:21,259 --> 00:00:26,390
but why I'm doing that my claim is that

10
00:00:24,169 --> 00:00:28,309
today web browsers are becoming as

11
00:00:26,390 --> 00:00:31,070
important as operating systems became

12
00:00:28,309 --> 00:00:34,070
two decades ago with respect to the

13
00:00:31,070 --> 00:00:36,980
security requirements that we have and

14
00:00:34,070 --> 00:00:39,020
they're becoming not only like operating

15
00:00:36,980 --> 00:00:42,739
systems popping up these error messages

16
00:00:39,020 --> 00:00:44,780
like please reboot that's actually in an

17
00:00:42,740 --> 00:00:46,700
actual error message of Chrome please

18
00:00:44,780 --> 00:00:49,520
shut down from and restart so to speak

19
00:00:46,700 --> 00:00:51,760
but more like what people are doing in

20
00:00:49,520 --> 00:00:54,440
processors like they are playing games

21
00:00:51,760 --> 00:00:56,300
there's a whole Adobe suit with a lot of

22
00:00:54,440 --> 00:00:58,280
applications that a couple of years ago

23
00:00:56,300 --> 00:01:01,250
we wouldn't have imagined to run in the

24
00:00:58,280 --> 00:01:03,489
web browser I recall when called Hamas

25
00:01:01,250 --> 00:01:06,140
try to be ported to the web browser

26
00:01:03,489 --> 00:01:08,509
beginning of nub was actually before

27
00:01:06,140 --> 00:01:11,210
2000 it was terribly slow as a Java

28
00:01:08,510 --> 00:01:13,360
applet nowadays even Photoshop runs in

29
00:01:11,210 --> 00:01:15,830
your web browser if you want to have it

30
00:01:13,360 --> 00:01:17,450
then of course we are all reading most

31
00:01:15,830 --> 00:01:19,820
of us are reading our emails in the web

32
00:01:17,450 --> 00:01:22,130
browser in one way or the other that's

33
00:01:19,820 --> 00:01:23,479
already security critical we don't want

34
00:01:22,130 --> 00:01:26,780
to have our emails published to

35
00:01:23,479 --> 00:01:28,760
everybody we are doing a banking but not

36
00:01:26,780 --> 00:01:30,860
only as private citizens we are using

37
00:01:28,760 --> 00:01:33,320
web browsers more and more for security

38
00:01:30,860 --> 00:01:34,040
critical tasks also companies are doing

39
00:01:33,320 --> 00:01:36,339
it more and more

40
00:01:34,040 --> 00:01:39,229
that's a screenshot of an s AP system

41
00:01:36,340 --> 00:01:40,970
most transactions and enterprises are at

42
00:01:39,229 --> 00:01:43,760
some point in time handled by an SE p

43
00:01:40,970 --> 00:01:45,650
systems also there we see the trend to

44
00:01:43,760 --> 00:01:47,930
move more and more functionality into

45
00:01:45,650 --> 00:01:49,790
the web browser so we should be able to

46
00:01:47,930 --> 00:01:52,369
expect from a web browser similar

47
00:01:49,790 --> 00:01:55,450
syracuse security guarantees as from an

48
00:01:52,369 --> 00:01:57,710
operating system so let's have a look

49
00:01:55,450 --> 00:02:01,520
there's a hell lot of work being done in

50
00:01:57,710 --> 00:02:02,839
protecting web users like guess most

51
00:02:01,520 --> 00:02:07,250
like you will hear in one of the later

52
00:02:02,840 --> 00:02:09,259
talks same origin policy HTTP only for

53
00:02:07,250 --> 00:02:12,169
cookie declarations content security

54
00:02:09,258 --> 00:02:15,260
policy that's already pretty much done

55
00:02:12,169 --> 00:02:16,730
protecting web users in the context of a

56
00:02:15,260 --> 00:02:18,859
specific web

57
00:02:16,730 --> 00:02:21,440
the web application providers are doing

58
00:02:18,860 --> 00:02:25,520
a lot to make it hard to attack their

59
00:02:21,440 --> 00:02:28,640
users the processor vendors are doing

60
00:02:25,520 --> 00:02:30,500
the same the major browser vendors are

61
00:02:28,640 --> 00:02:32,750
heavily invested in developing their web

62
00:02:30,500 --> 00:02:34,250
browsers securely we are seeing more and

63
00:02:32,750 --> 00:02:36,620
more approaches where taps are

64
00:02:34,250 --> 00:02:38,470
containerized so that won't happen ever

65
00:02:36,620 --> 00:02:41,660
pros are cannot influence the other one

66
00:02:38,470 --> 00:02:44,300
makes them more reliable more stable but

67
00:02:41,660 --> 00:02:45,920
also more secure javascript is being run

68
00:02:44,300 --> 00:02:49,130
in containers in different contexts

69
00:02:45,920 --> 00:02:50,929
these contexts so that it cannot affect

70
00:02:49,130 --> 00:02:54,200
other parts of your code so there's a

71
00:02:50,930 --> 00:02:56,209
not being done to make the major web

72
00:02:54,200 --> 00:02:58,310
browsers the trustworthy piece of

73
00:02:56,209 --> 00:02:59,840
software and I'm not blaming those

74
00:02:58,310 --> 00:03:05,180
vendors they are doing a tremendously

75
00:02:59,840 --> 00:03:07,640
good job so really a good basis but then

76
00:03:05,180 --> 00:03:10,970
we start to extent that basis with

77
00:03:07,640 --> 00:03:12,980
something called extensions some people

78
00:03:10,970 --> 00:03:16,310
call it add-ons that was the old name

79
00:03:12,980 --> 00:03:18,380
for Firefox small pieces of software

80
00:03:16,310 --> 00:03:21,380
that be installed within a web browser

81
00:03:18,380 --> 00:03:24,350
to extend the functionality and that's

82
00:03:21,380 --> 00:03:27,829
no longer the secured gate extensions

83
00:03:24,350 --> 00:03:31,459
can be very powerful and then we had the

84
00:03:27,830 --> 00:03:34,100
three-year-old starting to try to tear

85
00:03:31,459 --> 00:03:36,920
down the security vaults that we built

86
00:03:34,100 --> 00:03:38,930
up in the web browser from within we no

87
00:03:36,920 --> 00:03:41,630
longer have the external attacker that

88
00:03:38,930 --> 00:03:42,799
runs that needs to attack our computer

89
00:03:41,630 --> 00:03:46,130
we are running on nor the web

90
00:03:42,799 --> 00:03:47,600
application we are actually installing a

91
00:03:46,130 --> 00:03:50,989
piece of software into our web browser

92
00:03:47,600 --> 00:03:53,359
and that piece of software can start to

93
00:03:50,989 --> 00:03:55,400
reduce the security guarantees of our

94
00:03:53,360 --> 00:03:57,530
extension of our web browser and that's

95
00:03:55,400 --> 00:04:00,769
what I'm looking in into in the next

96
00:03:57,530 --> 00:04:02,329
couple of minutes I'm always fearing

97
00:04:00,769 --> 00:04:05,019
that one of my first semester students

98
00:04:02,329 --> 00:04:09,260
is writing those extensions that's my

99
00:04:05,019 --> 00:04:11,600
threat assessment so what are extensions

100
00:04:09,260 --> 00:04:13,340
from a user perspective I'm taking here

101
00:04:11,600 --> 00:04:16,459
the chrome example because they were the

102
00:04:13,340 --> 00:04:18,829
first one implementing a noble standard

103
00:04:16,459 --> 00:04:21,649
for web extensions which is now also

104
00:04:18,829 --> 00:04:23,600
implemented by all major browser vendors

105
00:04:21,649 --> 00:04:26,239
soon for Firefox we just made the switch

106
00:04:23,600 --> 00:04:28,070
a couple of weeks ago that was the

107
00:04:26,240 --> 00:04:30,139
latest versions the old a tall model is

108
00:04:28,070 --> 00:04:31,520
no longer working and we are

109
00:04:30,139 --> 00:04:34,849
working in the same world as the Chrome

110
00:04:31,520 --> 00:04:36,650
extensions Chrome or Google says in the

111
00:04:34,849 --> 00:04:39,080
documentation extensions are small

112
00:04:36,650 --> 00:04:41,929
software programs which is limited to no

113
00:04:39,080 --> 00:04:45,310
user interface hmm and then we see

114
00:04:41,930 --> 00:04:45,310
something like that in the chrome store

115
00:04:45,759 --> 00:04:53,090
400 megabytes in size and it's a game I

116
00:04:51,770 --> 00:04:56,830
would say that's a rather sophisticated

117
00:04:53,090 --> 00:04:58,729
user interface it's a full application

118
00:04:56,830 --> 00:05:00,650
and there are much more complex

119
00:04:58,729 --> 00:05:02,960
application in the store as well so they

120
00:05:00,650 --> 00:05:05,270
are not necessarily small they might be

121
00:05:02,960 --> 00:05:07,688
complex and have very sophisticated user

122
00:05:05,270 --> 00:05:11,060
interfaces

123
00:05:07,689 --> 00:05:12,620
what can extensions do in principle they

124
00:05:11,060 --> 00:05:14,960
are running in your browser they can

125
00:05:12,620 --> 00:05:17,090
access any information that your web

126
00:05:14,960 --> 00:05:19,758
browser accesses which means they can

127
00:05:17,090 --> 00:05:22,279
also read and modify any web request

128
00:05:19,759 --> 00:05:24,529
your browser makes and as it's running

129
00:05:22,279 --> 00:05:26,930
in the browser it accesses the data

130
00:05:24,529 --> 00:05:30,110
before it gets encrypted with respect to

131
00:05:26,930 --> 00:05:33,560
transport encryption so having that nice

132
00:05:30,110 --> 00:05:35,990
screen encryption everything is secure

133
00:05:33,560 --> 00:05:37,520
acting in your url bar doesn't help an

134
00:05:35,990 --> 00:05:39,740
extension can still access that data

135
00:05:37,520 --> 00:05:41,810
before it gets any encrypted when it's

136
00:05:39,740 --> 00:05:44,029
sent to the server or after it's

137
00:05:41,810 --> 00:05:50,870
decrypted when it's sent from the server

138
00:05:44,029 --> 00:05:52,639
to decline moreover it can modify not

139
00:05:50,870 --> 00:05:54,560
only the content part of the rack web

140
00:05:52,639 --> 00:05:57,409
request but also all header information

141
00:05:54,560 --> 00:06:00,199
into my surprise also security

142
00:05:57,409 --> 00:06:02,000
irrelevant headers like CSP policies so

143
00:06:00,199 --> 00:06:05,210
you can write a second extension which

144
00:06:02,000 --> 00:06:08,629
removes all CSP policy declarations and

145
00:06:05,210 --> 00:06:13,370
the web requests nice feature same for

146
00:06:08,629 --> 00:06:15,649
same origin policy course can also be

147
00:06:13,370 --> 00:06:17,330
disabled and of course you have the

148
00:06:15,649 --> 00:06:19,509
parts that user usually want adding

149
00:06:17,330 --> 00:06:21,830
additional buttons to your browser

150
00:06:19,509 --> 00:06:23,539
making nice background images or

151
00:06:21,830 --> 00:06:25,370
enhancing the functionality of your web

152
00:06:23,539 --> 00:06:29,089
browser in the context of a specific

153
00:06:25,370 --> 00:06:31,039
website removing features of a website

154
00:06:29,089 --> 00:06:33,020
like advertisement or adding new

155
00:06:31,039 --> 00:06:36,169
features that are not provided by the

156
00:06:33,020 --> 00:06:38,990
website shortcuts and so on so really

157
00:06:36,169 --> 00:06:41,899
useful they are offered in a chrome

158
00:06:38,990 --> 00:06:42,469
store or Firefox Safari have similar

159
00:06:41,899 --> 00:06:43,320
stores

160
00:06:42,469 --> 00:06:45,180
let's do

161
00:06:43,320 --> 00:06:47,940
small experiment and look for a

162
00:06:45,180 --> 00:06:50,070
calculator that should be a pretty easy

163
00:06:47,940 --> 00:06:53,040
extension shouldn't it and it shouldn't

164
00:06:50,070 --> 00:06:55,710
require a lot of security permissions a

165
00:06:53,040 --> 00:07:00,450
lot of Rights because I mean adding two

166
00:06:55,710 --> 00:07:03,930
numbers you find the nice long list of

167
00:07:00,450 --> 00:07:06,120
calculators actually selecting one yep

168
00:07:03,930 --> 00:07:10,350
looks nice let's install it

169
00:07:06,120 --> 00:07:12,660
oh that dialog box that chrome shows

170
00:07:10,350 --> 00:07:15,540
here tells me the extension that you

171
00:07:12,660 --> 00:07:19,140
just want to install can read and change

172
00:07:15,540 --> 00:07:20,820
all your data on websites you visit in

173
00:07:19,140 --> 00:07:23,820
that specific term that means that

174
00:07:20,820 --> 00:07:26,010
extension is asking you am I allowed to

175
00:07:23,820 --> 00:07:30,150
modify everything that you do on the web

176
00:07:26,010 --> 00:07:34,800
is that fine for you and most people

177
00:07:30,150 --> 00:07:37,590
click OK at extension so there's a

178
00:07:34,800 --> 00:07:41,340
potential security risk in there it's

179
00:07:37,590 --> 00:07:44,940
not only a potential one this is a real

180
00:07:41,340 --> 00:07:47,489
case which to my surprise only or mostly

181
00:07:44,940 --> 00:07:51,000
made it only into the German newspapers

182
00:07:47,490 --> 00:07:52,800
that was an extension web of trust which

183
00:07:51,000 --> 00:07:54,900
was actually advertised as making web

184
00:07:52,800 --> 00:07:57,540
browsing more secure the idea behind

185
00:07:54,900 --> 00:08:01,260
that extension was we have a database

186
00:07:57,540 --> 00:08:03,660
with websites that distribute malware or

187
00:08:01,260 --> 00:08:06,000
have other security critical content on

188
00:08:03,660 --> 00:08:07,830
it and before you process through that

189
00:08:06,000 --> 00:08:10,230
website we check if that OLS in our

190
00:08:07,830 --> 00:08:12,840
database and if yes we warn you that you

191
00:08:10,230 --> 00:08:16,560
do not by accident go to visit such

192
00:08:12,840 --> 00:08:18,539
websites what they did is not and for

193
00:08:16,560 --> 00:08:19,950
that functionality of course they need

194
00:08:18,540 --> 00:08:22,320
to have that permission that they can

195
00:08:19,950 --> 00:08:23,789
read what websites you are visiting but

196
00:08:22,320 --> 00:08:26,280
of course it would have been sufficient

197
00:08:23,790 --> 00:08:28,800
to read the domain name of the website

198
00:08:26,280 --> 00:08:31,229
you are visiting actually they copied

199
00:08:28,800 --> 00:08:34,590
your whole URL data including all

200
00:08:31,230 --> 00:08:36,930
parameters attached to it and then that

201
00:08:34,590 --> 00:08:43,110
company started to sell that data for

202
00:08:36,929 --> 00:08:45,810
marketing purposes a German news

203
00:08:43,110 --> 00:08:48,150
magazine they didn't even bought data

204
00:08:45,810 --> 00:08:50,520
from them it just called them and asked

205
00:08:48,150 --> 00:08:53,040
we are a company that wants to do data

206
00:08:50,520 --> 00:08:55,170
analytics we would like to have a test

207
00:08:53,040 --> 00:08:56,939
data set from you to see how good the

208
00:08:55,170 --> 00:08:59,670
quality of the data is

209
00:08:56,940 --> 00:09:05,190
so only was the data they got for free

210
00:08:59,670 --> 00:09:07,260
they were able P to Deanna my's the data

211
00:09:05,190 --> 00:09:09,210
because of you all the URL strings in

212
00:09:07,260 --> 00:09:10,950
you have possession IDs we visit web

213
00:09:09,210 --> 00:09:13,410
page like Facebook where your real name

214
00:09:10,950 --> 00:09:16,080
might be in the URL so you can rather

215
00:09:13,410 --> 00:09:17,370
easily Deanna my said they showed how

216
00:09:16,080 --> 00:09:19,170
they did that the whole big data

217
00:09:17,370 --> 00:09:23,100
analysis set was more or less crap and

218
00:09:19,170 --> 00:09:25,110
sed not very sophisticated I would say

219
00:09:23,100 --> 00:09:27,330
for somebody who has some basic Unix

220
00:09:25,110 --> 00:09:29,370
knowledge and they found interesting

221
00:09:27,330 --> 00:09:32,820
stuff in their text declarations of

222
00:09:29,370 --> 00:09:34,440
German members of parliament no insure

223
00:09:32,820 --> 00:09:36,960
me need text declarations are considered

224
00:09:34,440 --> 00:09:38,340
as something very previously critical

225
00:09:36,960 --> 00:09:40,380
and you don't share your text data with

226
00:09:38,340 --> 00:09:44,010
other people besides the text

227
00:09:40,380 --> 00:09:46,200
authorities international search variant

228
00:09:44,010 --> 00:09:48,390
information so the German police using

229
00:09:46,200 --> 00:09:50,250
Google Translate for translating a

230
00:09:48,390 --> 00:09:53,430
search warrant before contacting the

231
00:09:50,250 --> 00:09:55,530
British colleagues also not data that

232
00:09:53,430 --> 00:09:58,500
you need to transmit somewhere else and

233
00:09:55,530 --> 00:10:02,760
most likely also violates a number of

234
00:09:58,500 --> 00:10:05,280
data privacy laws so it is a real issue

235
00:10:02,760 --> 00:10:07,860
another example is more the money-making

236
00:10:05,280 --> 00:10:11,610
type of example that was heavily used in

237
00:10:07,860 --> 00:10:14,700
India an extension that replaced the

238
00:10:11,610 --> 00:10:17,330
support phone numbers of computer

239
00:10:14,700 --> 00:10:19,710
companies with very expensive numbers I

240
00:10:17,330 --> 00:10:21,450
haven't checked it but I assume that it

241
00:10:19,710 --> 00:10:23,670
just forwarded the calls to the original

242
00:10:21,450 --> 00:10:26,130
call center so the users calling those

243
00:10:23,670 --> 00:10:28,650
numbers got actually the service they

244
00:10:26,130 --> 00:10:31,350
wanted without the bad guys investing a

245
00:10:28,650 --> 00:10:33,750
lot in infrastructure and while maybe

246
00:10:31,350 --> 00:10:37,170
the original call center is charging you

247
00:10:33,750 --> 00:10:39,750
something like 50 pence a minute they

248
00:10:37,170 --> 00:10:43,050
charged five pounds and the difference

249
00:10:39,750 --> 00:10:47,550
most their revenue margin that looks

250
00:10:43,050 --> 00:10:49,410
like a pretty good business model not

251
00:10:47,550 --> 00:10:54,060
necessarily invading your privacy or

252
00:10:49,410 --> 00:10:56,520
your security but it goes to your bank

253
00:10:54,060 --> 00:11:04,829
account also not very nice so it is a

254
00:10:56,520 --> 00:11:06,540
threat yeah how do you actually how do

255
00:11:04,830 --> 00:11:10,810
people actually install those extensions

256
00:11:06,540 --> 00:11:12,400
because I mean I'm installing is 10

257
00:11:10,810 --> 00:11:14,829
because I want a certain functionality

258
00:11:12,400 --> 00:11:17,110
extensions are rated in the store there

259
00:11:14,830 --> 00:11:19,300
I have information about how many users

260
00:11:17,110 --> 00:11:21,190
are installing them most likely if I

261
00:11:19,300 --> 00:11:23,170
have two extensions providing a similar

262
00:11:21,190 --> 00:11:25,060
functionality I would choose the one

263
00:11:23,170 --> 00:11:27,160
with much more users that are much more

264
00:11:25,060 --> 00:11:29,050
popular popular so you need some ways

265
00:11:27,160 --> 00:11:31,750
for forcing people to install extensions

266
00:11:29,050 --> 00:11:34,930
one way actually is you visit a website

267
00:11:31,750 --> 00:11:36,820
and such a dialog box pops up to

268
00:11:34,930 --> 00:11:39,329
continue with that website you have to

269
00:11:36,820 --> 00:11:41,680
install the extension you have to do it

270
00:11:39,330 --> 00:11:45,220
it doesn't matter if you click OK or

271
00:11:41,680 --> 00:11:47,079
cancel and now assume that that website

272
00:11:45,220 --> 00:11:50,230
is offering something that at the moment

273
00:11:47,080 --> 00:11:52,300
you really want to look at so that's one

274
00:11:50,230 --> 00:11:56,740
way how people are actually forced into

275
00:11:52,300 --> 00:11:58,420
installing malicious extensions so let's

276
00:11:56,740 --> 00:12:01,810
have a quick look into what extensions

277
00:11:58,420 --> 00:12:05,589
are from a developer perspective I said

278
00:12:01,810 --> 00:12:08,439
they run in your web browser they are

279
00:12:05,589 --> 00:12:13,089
more or less governed by core web

280
00:12:08,440 --> 00:12:15,580
security measurements like CSP like

281
00:12:13,089 --> 00:12:17,560
content security policy class and

282
00:12:15,580 --> 00:12:18,970
permission model like the permission we

283
00:12:17,560 --> 00:12:20,739
have seen they might also ask for

284
00:12:18,970 --> 00:12:23,740
permission for accessing your microphone

285
00:12:20,740 --> 00:12:25,630
or your camera a very simple oh yeah

286
00:12:23,740 --> 00:12:28,030
let's not say simple a very

287
00:12:25,630 --> 00:12:30,189
straightforward permission model similar

288
00:12:28,030 --> 00:12:33,130
to what we've seen on earlier versions

289
00:12:30,190 --> 00:12:34,960
of Android and they are also now moving

290
00:12:33,130 --> 00:12:38,380
to more complex once in a dynamic

291
00:12:34,960 --> 00:12:39,670
permission model so maybe doing the same

292
00:12:38,380 --> 00:12:43,300
evolution the permission model on

293
00:12:39,670 --> 00:12:47,260
Android head the core thing of an

294
00:12:43,300 --> 00:12:49,240
extension is the content script which is

295
00:12:47,260 --> 00:12:51,550
the part that the extension actually

296
00:12:49,240 --> 00:12:53,620
executes we are seeing here in that

297
00:12:51,550 --> 00:12:55,660
content script declaration in the lower

298
00:12:53,620 --> 00:12:58,620
part of that piece of JavaScript on the

299
00:12:55,660 --> 00:13:01,360
right-hand side already

300
00:12:58,620 --> 00:13:03,430
something like matches all URL so that

301
00:13:01,360 --> 00:13:05,170
extension wants to execute the

302
00:13:03,430 --> 00:13:07,170
JavaScript stored in the content script

303
00:13:05,170 --> 00:13:09,370
file for all URLs that you are visiting

304
00:13:07,170 --> 00:13:11,020
when you are writing an extension that

305
00:13:09,370 --> 00:13:13,240
only you should interact with Facebook

306
00:13:11,020 --> 00:13:16,750
you would limit hopefully limit that to

307
00:13:13,240 --> 00:13:18,070
Facebook as a domain name and the

308
00:13:16,750 --> 00:13:20,290
background script is a piece of

309
00:13:18,070 --> 00:13:23,170
JavaScript which is injected into the

310
00:13:20,290 --> 00:13:24,469
web page that you visit and is executed

311
00:13:23,170 --> 00:13:29,449
in the context of

312
00:13:24,470 --> 00:13:31,220
that webpage yeah the background scripts

313
00:13:29,450 --> 00:13:34,730
have a two dimensional or permission

314
00:13:31,220 --> 00:13:36,080
system they sorry I mixed it up the

315
00:13:34,730 --> 00:13:38,540
content script is injected in the

316
00:13:36,080 --> 00:13:42,260
websites the background scripts are no

317
00:13:38,540 --> 00:13:45,230
it's mixed up on that slide sorry one

318
00:13:42,260 --> 00:13:47,300
uses this two-dimensional permission

319
00:13:45,230 --> 00:13:49,370
systems where you have permissions like

320
00:13:47,300 --> 00:13:51,229
accessing the camera as well as on which

321
00:13:49,370 --> 00:13:53,600
websites you want to do it the other one

322
00:13:51,230 --> 00:13:56,480
is either injected or not depending on

323
00:13:53,600 --> 00:13:58,970
the domain name so it can modify a lot

324
00:13:56,480 --> 00:14:03,380
mmm so let's have a look at a couple of

325
00:13:58,970 --> 00:14:05,690
real-world examples so first looking at

326
00:14:03,380 --> 00:14:07,220
the chrome store Chrome extensions are

327
00:14:05,690 --> 00:14:09,920
categorized so you have something like

328
00:14:07,220 --> 00:14:12,440
protect productivity apps there for

329
00:14:09,920 --> 00:14:15,199
example the apps included the extensions

330
00:14:12,440 --> 00:14:18,170
included that improve the user offline

331
00:14:15,200 --> 00:14:20,380
usability of google apps like the Ruby

332
00:14:18,170 --> 00:14:24,349
TextEdit or the Google spreadsheet

333
00:14:20,380 --> 00:14:27,080
there's fun and gaming communication

334
00:14:24,350 --> 00:14:30,110
accessibility web development is an own

335
00:14:27,080 --> 00:14:31,670
category and we see that most of those

336
00:14:30,110 --> 00:14:33,980
extensions claimed to be in the

337
00:14:31,670 --> 00:14:35,709
productivity apps or something for

338
00:14:33,980 --> 00:14:38,150
business users doing something serious

339
00:14:35,710 --> 00:14:40,730
but quite a number are also in the

340
00:14:38,150 --> 00:14:42,620
gaming and fun category or communication

341
00:14:40,730 --> 00:14:47,450
and accessibility and then the numbers

342
00:14:42,620 --> 00:14:49,100
go down in the chrome store they are not

343
00:14:47,450 --> 00:14:53,210
only extensions offer there are also

344
00:14:49,100 --> 00:14:55,940
simpler things offered like themes which

345
00:14:53,210 --> 00:14:57,620
is the theming of your web browser we

346
00:14:55,940 --> 00:15:01,850
haven't had a look at them in more

347
00:14:57,620 --> 00:15:03,590
detail there are apps that's more Chrome

348
00:15:01,850 --> 00:15:05,780
OS applications though those are

349
00:15:03,590 --> 00:15:08,150
technically speaking surprisingly also

350
00:15:05,780 --> 00:15:10,670
simplest extensions

351
00:15:08,150 --> 00:15:12,319
no more lies encapsulated webpages that

352
00:15:10,670 --> 00:15:13,849
you can install on your Chromebook and

353
00:15:12,320 --> 00:15:17,570
you get an icon on the desktop so to

354
00:15:13,850 --> 00:15:19,610
speak as well as a couple of very

355
00:15:17,570 --> 00:15:21,320
specific ones offered by Google which I

356
00:15:19,610 --> 00:15:23,300
personally haven't yet understood what

357
00:15:21,320 --> 00:15:28,010
they are doing they somehow work

358
00:15:23,300 --> 00:15:30,589
together with Google Apps offerings we

359
00:15:28,010 --> 00:15:33,020
are looking at that big pile of actually

360
00:15:30,590 --> 00:15:35,210
extensions that most likely in the

361
00:15:33,020 --> 00:15:36,829
future would also run on Firefox or

362
00:15:35,210 --> 00:15:38,180
hopefully this as little modifications

363
00:15:36,830 --> 00:15:40,910
as possible

364
00:15:38,180 --> 00:15:44,270
to run on Firefox where do I get those

365
00:15:40,910 --> 00:15:46,939
numbers from what we are doing is we

366
00:15:44,270 --> 00:15:48,829
have an extension troll or a piece of

367
00:15:46,940 --> 00:15:50,990
software that runs every night and

368
00:15:48,830 --> 00:15:51,740
checks nearly all extensions in the

369
00:15:50,990 --> 00:15:53,600
chrome store

370
00:15:51,740 --> 00:15:56,060
I cannot technically claim that we are

371
00:15:53,600 --> 00:15:59,420
crawling all of them but I'm pretty sure

372
00:15:56,060 --> 00:16:00,920
we are not missing a lot of them and if

373
00:15:59,420 --> 00:16:04,099
there's an update to the extension we

374
00:16:00,920 --> 00:16:06,860
obtain the actual source code of that

375
00:16:04,100 --> 00:16:08,779
extension from the chrome store and for

376
00:16:06,860 --> 00:16:10,910
all the extensions regardless if they

377
00:16:08,779 --> 00:16:12,560
are updated or not we take a copy of the

378
00:16:10,910 --> 00:16:14,449
metadata being available like the

379
00:16:12,560 --> 00:16:18,170
description the current number of active

380
00:16:14,450 --> 00:16:21,470
users or downloads who is the author of

381
00:16:18,170 --> 00:16:24,880
that extension version number or public

382
00:16:21,470 --> 00:16:27,800
the publication date and the like that

383
00:16:24,880 --> 00:16:29,570
gives us already that kind of static

384
00:16:27,800 --> 00:16:32,120
data that I showed on the large page and

385
00:16:29,570 --> 00:16:34,820
last slide and I will show a couple of

386
00:16:32,120 --> 00:16:37,370
additional statistics on the next slide

387
00:16:34,820 --> 00:16:39,050
as well and then we have also a

388
00:16:37,370 --> 00:16:41,390
framework where can instrument those

389
00:16:39,050 --> 00:16:43,849
extensions so we are modifying the

390
00:16:41,390 --> 00:16:45,890
JavaScript code automatically so if that

391
00:16:43,850 --> 00:16:48,220
extension get executed it looks

392
00:16:45,890 --> 00:16:50,900
additional information like for example

393
00:16:48,220 --> 00:16:53,180
which data is sent or to a third-party

394
00:16:50,900 --> 00:16:56,060
service from that extension which part

395
00:16:53,180 --> 00:16:59,060
of the process script Chavez wrote a

396
00:16:56,060 --> 00:17:01,339
code loaded from the website is accessed

397
00:16:59,060 --> 00:17:03,650
by that extension or does this extension

398
00:17:01,339 --> 00:17:06,740
access your local file system or local

399
00:17:03,650 --> 00:17:08,449
other local resources depending on the

400
00:17:06,740 --> 00:17:10,179
type of security analysis that we want

401
00:17:08,449 --> 00:17:13,130
to do we configure that extension

402
00:17:10,179 --> 00:17:15,110
differently and then we have a setup

403
00:17:13,130 --> 00:17:17,480
where we can install that instrumented

404
00:17:15,109 --> 00:17:20,300
extension into a freshly installed

405
00:17:17,480 --> 00:17:23,270
version of Chrome so no other extensions

406
00:17:20,300 --> 00:17:26,510
no other configuration that might plug

407
00:17:23,270 --> 00:17:28,610
things or harm that setup and run that

408
00:17:26,510 --> 00:17:30,290
in either in an interactive session so

409
00:17:28,610 --> 00:17:34,280
if you want to manually inspect an

410
00:17:30,290 --> 00:17:36,440
extension or using automation setup

411
00:17:34,280 --> 00:17:39,020
selenium that many web developers most

412
00:17:36,440 --> 00:17:41,000
likely will know to automatically then

413
00:17:39,020 --> 00:17:43,309
access a couple of websites interact

414
00:17:41,000 --> 00:17:45,650
with them how we interact with those

415
00:17:43,309 --> 00:17:47,360
websites we script that also specific to

416
00:17:45,650 --> 00:17:50,059
the type of analysis that we want to do

417
00:17:47,360 --> 00:17:52,010
so one test for example could be

418
00:17:50,059 --> 00:17:54,920
checking if websites changed

419
00:17:52,010 --> 00:17:57,110
behavior of YouTube in that case we

420
00:17:54,920 --> 00:17:59,720
would do a set up instrument all the

421
00:17:57,110 --> 00:18:02,659
80,000 extensions that we have in each

422
00:17:59,720 --> 00:18:05,390
of them individually let access them

423
00:18:02,660 --> 00:18:08,000
YouTube do a couple of interactions like

424
00:18:05,390 --> 00:18:10,510
searching for cat videos I guess YouTube

425
00:18:08,000 --> 00:18:12,920
now has a big pile of log files from us

426
00:18:10,510 --> 00:18:18,320
searching for cat videos and doing an

427
00:18:12,920 --> 00:18:19,610
automatic cat video watching daemon but

428
00:18:18,320 --> 00:18:21,409
that's the fun that you have if you have

429
00:18:19,610 --> 00:18:23,659
a high performance cluster from the

430
00:18:21,410 --> 00:18:28,610
University where you can just reuse use

431
00:18:23,660 --> 00:18:31,250
the resources as you like that's nice

432
00:18:28,610 --> 00:18:35,689
overall the extensions are three

433
00:18:31,250 --> 00:18:38,630
terabytes in size fun facts aside from

434
00:18:35,690 --> 00:18:41,450
those 3 terabytes 23 gigabytes our

435
00:18:38,630 --> 00:18:44,300
JavaScript and there are at least three

436
00:18:41,450 --> 00:18:46,340
extensions with more than 100 megabyte

437
00:18:44,300 --> 00:18:50,570
of pure JavaScript files

438
00:18:46,340 --> 00:18:52,580
I haven't yet looked into that pile of

439
00:18:50,570 --> 00:18:55,070
JavaScript a ship what they actually

440
00:18:52,580 --> 00:18:58,520
doing but that's the extreme side in

441
00:18:55,070 --> 00:19:01,429
terms of being large let's have a quick

442
00:18:58,520 --> 00:19:04,639
look at the popularity of the extensions

443
00:19:01,430 --> 00:19:06,740
what we see here most most important

444
00:19:04,640 --> 00:19:09,500
takeaway from that slide is they are

445
00:19:06,740 --> 00:19:13,070
less than 100 extensions which really

446
00:19:09,500 --> 00:19:15,200
have high download numbers so while

447
00:19:13,070 --> 00:19:23,300
there are many many many extensions in

448
00:19:15,200 --> 00:19:25,190
the store let's say only very few

449
00:19:23,300 --> 00:19:29,330
extensions have very high download

450
00:19:25,190 --> 00:19:31,840
numbers so here more than 1 million is

451
00:19:29,330 --> 00:19:35,720
less than 1% more than 100,000 downloads

452
00:19:31,840 --> 00:19:37,730
something like 25% and more than half of

453
00:19:35,720 --> 00:19:42,080
the extension have less than 100 users

454
00:19:37,730 --> 00:19:44,930
that's not a lot so again we are here

455
00:19:42,080 --> 00:19:46,669
have a store with a lot of offerings but

456
00:19:44,930 --> 00:19:50,750
only a few of them are actually really

457
00:19:46,670 --> 00:19:53,860
widely used extensions can be big arm

458
00:19:50,750 --> 00:19:56,480
that's the Java Script lines of code was

459
00:19:53,860 --> 00:19:58,100
some crude measurements of lines of code

460
00:19:56,480 --> 00:20:00,770
surf and so of course if it's an

461
00:19:58,100 --> 00:20:02,449
obfuscated script or minified script

462
00:20:00,770 --> 00:20:04,520
then it's only one line of code that's a

463
00:20:02,450 --> 00:20:06,000
little bit misleading we all know that

464
00:20:04,520 --> 00:20:09,600
lines of code is not a good measure

465
00:20:06,000 --> 00:20:11,790
but it gives some idea we also see again

466
00:20:09,600 --> 00:20:13,980
most of the extensions are actually

467
00:20:11,790 --> 00:20:15,899
small as Scooby claimed at the beginning

468
00:20:13,980 --> 00:20:18,960
but we have those outliers

469
00:20:15,900 --> 00:20:22,740
similarly in size most of them are more

470
00:20:18,960 --> 00:20:25,890
in the size range below one megabyte but

471
00:20:22,740 --> 00:20:27,510
there are also the others and there are

472
00:20:25,890 --> 00:20:29,580
a couple of extensions that are actually

473
00:20:27,510 --> 00:20:31,680
large and it makes sense that they are

474
00:20:29,580 --> 00:20:34,139
large I've seen one extension for

475
00:20:31,680 --> 00:20:36,390
example that is a training program for

476
00:20:34,140 --> 00:20:38,520
doctors in the third-world countries and

477
00:20:36,390 --> 00:20:39,630
I guess the idea there is you can

478
00:20:38,520 --> 00:20:42,300
install that extension on your

479
00:20:39,630 --> 00:20:45,090
Chromebook easily without having a lot

480
00:20:42,300 --> 00:20:47,280
of computing skills when you have a good

481
00:20:45,090 --> 00:20:48,720
internet connection and then have all

482
00:20:47,280 --> 00:20:51,090
the data that you need for treating

483
00:20:48,720 --> 00:20:52,590
patients offline when your internet

484
00:20:51,090 --> 00:20:54,300
connection is not that stable or you

485
00:20:52,590 --> 00:20:58,580
don't have an internet connection at all

486
00:20:54,300 --> 00:21:01,560
I can understand that business model so

487
00:20:58,580 --> 00:21:04,740
not all extensions that are large or by

488
00:21:01,560 --> 00:21:07,320
definition bad don't want to say that

489
00:21:04,740 --> 00:21:11,180
but I'm still wondering what you can do

490
00:21:07,320 --> 00:21:11,179
with 100 megabytes of JavaScript files

491
00:21:11,210 --> 00:21:15,300
what are they doing or what do you need

492
00:21:13,860 --> 00:21:17,820
to do if you want to do something bad

493
00:21:15,300 --> 00:21:21,120
with them if you want to observe the

494
00:21:17,820 --> 00:21:23,399
browsing behavior you only need to ask

495
00:21:21,120 --> 00:21:26,429
for permissions like the tap permission

496
00:21:23,400 --> 00:21:28,560
or the all URL permission and in check

497
00:21:26,430 --> 00:21:30,030
the contents or exact in check the

498
00:21:28,560 --> 00:21:33,149
content script on all sites that you

499
00:21:30,030 --> 00:21:35,490
visit that's the type of dialog box that

500
00:21:33,150 --> 00:21:38,010
you see that's exactly the one that

501
00:21:35,490 --> 00:21:39,690
we've seen was the calculator and I

502
00:21:38,010 --> 00:21:41,129
didn't need to search long for a

503
00:21:39,690 --> 00:21:44,520
calculator asking for that permission

504
00:21:41,130 --> 00:21:46,590
because roughly 60% of all the

505
00:21:44,520 --> 00:21:48,180
extensions that we analyze the requests

506
00:21:46,590 --> 00:21:50,699
the combination of permissions that

507
00:21:48,180 --> 00:21:53,580
gives you those rights the ability to

508
00:21:50,700 --> 00:21:58,350
observe your prowess in behavior in real

509
00:21:53,580 --> 00:22:01,620
time so more than every second extension

510
00:21:58,350 --> 00:22:04,730
asks for that and I did a little bit

511
00:22:01,620 --> 00:22:07,020
more detailed analysis surprisingly

512
00:22:04,730 --> 00:22:10,140
calculators are one of those categories

513
00:22:07,020 --> 00:22:12,680
that particularly often request a

514
00:22:10,140 --> 00:22:15,030
permission and interestingly enough

515
00:22:12,680 --> 00:22:17,790
those calculators that are used by many

516
00:22:15,030 --> 00:22:20,789
people request much more permissions

517
00:22:17,790 --> 00:22:22,559
than those extensions that we

518
00:22:20,789 --> 00:22:24,600
those calculators that request fewer

519
00:22:22,559 --> 00:22:27,740
permissions I don't have a scientific

520
00:22:24,600 --> 00:22:29,969
explanation for that only a personal one

521
00:22:27,740 --> 00:22:31,880
if you buy a Chromebook

522
00:22:29,970 --> 00:22:35,309
there is no calculator application

523
00:22:31,880 --> 00:22:38,580
pre-installed on the Chromebook and I

524
00:22:35,309 --> 00:22:41,010
just assume that you want to add two

525
00:22:38,580 --> 00:22:42,510
numbers you need to have a piece of

526
00:22:41,010 --> 00:22:44,309
software for that so you go into the

527
00:22:42,510 --> 00:22:47,429
chrome store search for calculators and

528
00:22:44,309 --> 00:22:47,970
you don't cut normal people I mean me

529
00:22:47,429 --> 00:22:50,010
neither

530
00:22:47,970 --> 00:22:52,080
would consider a calculator extension is

531
00:22:50,010 --> 00:22:54,299
something security critical you don't

532
00:22:52,080 --> 00:22:56,939
think long about installing a calculator

533
00:22:54,299 --> 00:22:59,429
app you assume it's something small and

534
00:22:56,940 --> 00:23:02,059
harmless so you just take the first one

535
00:22:59,429 --> 00:23:04,320
being shown yeah in the chrome store

536
00:23:02,059 --> 00:23:08,220
while for example we did a similar

537
00:23:04,320 --> 00:23:10,620
analysis for extra ad blockers which by

538
00:23:08,220 --> 00:23:12,419
definition have to request a very

539
00:23:10,620 --> 00:23:16,500
powerful set of permissions but also

540
00:23:12,419 --> 00:23:19,649
there are a couple of F block errs that

541
00:23:16,500 --> 00:23:20,940
ask for ridiculous permissions and

542
00:23:19,649 --> 00:23:23,279
interestingly enough they are not

543
00:23:20,940 --> 00:23:24,720
installed by users so it seems to be

544
00:23:23,279 --> 00:23:26,669
that an ad blocker is something people

545
00:23:24,720 --> 00:23:28,679
install after thinking much more about

546
00:23:26,669 --> 00:23:30,179
what they actually install and the

547
00:23:28,679 --> 00:23:32,419
calculator is more something that you

548
00:23:30,179 --> 00:23:35,460
install spontaneously that's my

549
00:23:32,419 --> 00:23:40,649
completely non-scientific personal

550
00:23:35,460 --> 00:23:43,860
assumption on that behavior um that's

551
00:23:40,649 --> 00:23:46,110
another nice combination of permissions

552
00:23:43,860 --> 00:23:48,570
that you can ask for be all URL and web

553
00:23:46,110 --> 00:23:52,590
request permission that's interestingly

554
00:23:48,570 --> 00:23:55,820
enough it shows exactly the same high

555
00:23:52,590 --> 00:23:59,340
level description in the chrome store

556
00:23:55,820 --> 00:24:01,439
but this is much more powerful so that's

557
00:23:59,340 --> 00:24:03,899
maybe something that could be improved

558
00:24:01,440 --> 00:24:06,330
in the user interface making the

559
00:24:03,899 --> 00:24:09,840
security assessment more easy to grasp

560
00:24:06,330 --> 00:24:12,059
and more user user-friendly the same

561
00:24:09,840 --> 00:24:13,860
high level message is being shown but

562
00:24:12,059 --> 00:24:15,510
actually it allows you to really modify

563
00:24:13,860 --> 00:24:18,840
each and every web request being

564
00:24:15,510 --> 00:24:20,669
received or sent and that includes this

565
00:24:18,840 --> 00:24:24,149
abling content security policy or

566
00:24:20,669 --> 00:24:26,700
same-origin policy so if an attacker if

567
00:24:24,149 --> 00:24:29,370
we then have an attacker that is able to

568
00:24:26,700 --> 00:24:31,379
force you to install an extension doing

569
00:24:29,370 --> 00:24:33,549
something like that and you access a

570
00:24:31,379 --> 00:24:36,189
website that tries to protect it's you

571
00:24:33,549 --> 00:24:38,590
as a content security policy the content

572
00:24:36,190 --> 00:24:41,769
security policy is void and suddenly the

573
00:24:38,590 --> 00:24:44,289
attacker is much more powerful so

574
00:24:41,769 --> 00:24:46,809
combined attacks being a standard weapon

575
00:24:44,289 --> 00:24:50,529
teka plus having a prepared a Chrome

576
00:24:46,809 --> 00:24:53,710
extension available really results in a

577
00:24:50,529 --> 00:24:55,299
very powerful attacker model and it

578
00:24:53,710 --> 00:24:59,710
breaks the security guarantees that we

579
00:24:55,299 --> 00:25:01,749
have in modern web browsers luckily only

580
00:24:59,710 --> 00:25:04,809
roughly 10% of the extensions that we

581
00:25:01,749 --> 00:25:08,759
analyzed request that permission set but

582
00:25:04,809 --> 00:25:12,940
still too many for my personal taste

583
00:25:08,759 --> 00:25:15,220
because I actually can only see web

584
00:25:12,940 --> 00:25:19,600
development extensions really needing

585
00:25:15,220 --> 00:25:21,639
that kind of power on a regular basis I

586
00:25:19,600 --> 00:25:23,619
mean if you have web developer or a

587
00:25:21,639 --> 00:25:24,939
security test or then of course it makes

588
00:25:23,619 --> 00:25:27,039
sense to have an extension that

589
00:25:24,940 --> 00:25:30,489
explicitly allows you to disable a

590
00:25:27,039 --> 00:25:32,259
content security policy easily or it

591
00:25:30,489 --> 00:25:36,100
might be at least more convenient than

592
00:25:32,259 --> 00:25:38,739
using a proxy in between and in

593
00:25:36,100 --> 00:25:41,428
particular it lamellae eliminates the

594
00:25:38,739 --> 00:25:44,320
need for setting up an SSL proxy so

595
00:25:41,429 --> 00:25:47,080
again there is some good reason for

596
00:25:44,320 --> 00:25:49,450
having extensions requesting that but I

597
00:25:47,080 --> 00:25:51,039
would assume that not 9% of the

598
00:25:49,450 --> 00:25:56,789
extensions are all for web developers

599
00:25:51,039 --> 00:25:59,408
and there are not again it's pretty easy

600
00:25:56,789 --> 00:26:02,679
this is the whole source code or a whole

601
00:25:59,409 --> 00:26:04,899
process more or less for creating an

602
00:26:02,679 --> 00:26:06,669
extension that steals all session

603
00:26:04,899 --> 00:26:11,018
cookies on all web sites that you visit

604
00:26:06,669 --> 00:26:12,639
and transports them to evil com so it's

605
00:26:11,019 --> 00:26:16,779
really not a lot of JavaScript that you

606
00:26:12,639 --> 00:26:18,519
need to know and more luckily as the

607
00:26:16,779 --> 00:26:20,739
extensions are distributed in source

608
00:26:18,519 --> 00:26:23,080
code form if you want to hide that in an

609
00:26:20,739 --> 00:26:25,239
extension and of course you need to have

610
00:26:23,080 --> 00:26:26,980
some attractive business model of that

611
00:26:25,239 --> 00:26:29,200
extension itself that people install it

612
00:26:26,980 --> 00:26:31,989
you just download takes whatever

613
00:26:29,200 --> 00:26:34,059
extensions that does something people

614
00:26:31,989 --> 00:26:36,399
really desire from the chrome store

615
00:26:34,059 --> 00:26:38,678
insert that little piece of JavaScript

616
00:26:36,399 --> 00:26:41,379
ricktum trick the configuration a little

617
00:26:38,679 --> 00:26:43,869
bit and resubmit it to Google and hope

618
00:26:41,379 --> 00:26:45,908
that people install your extension

619
00:26:43,869 --> 00:26:48,310
instead of the original one and that

620
00:26:45,909 --> 00:26:50,710
happens actually quite a lot

621
00:26:48,310 --> 00:26:52,179
it's still possible even to do that

622
00:26:50,710 --> 00:26:54,340
without changing the name of the

623
00:26:52,180 --> 00:26:58,330
extension because Google only checks an

624
00:26:54,340 --> 00:27:00,100
internal hash value or internally

625
00:26:58,330 --> 00:27:03,370
identify or not a hash and identify off

626
00:27:00,100 --> 00:27:05,709
the extension for uniqueness and

627
00:27:03,370 --> 00:27:08,610
otherwise you trick the name a little

628
00:27:05,710 --> 00:27:14,470
bit like we know it from domain names

629
00:27:08,610 --> 00:27:16,810
not very difficult either now I will

630
00:27:14,470 --> 00:27:18,010
show three different scenarios that we

631
00:27:16,810 --> 00:27:21,370
analyzed a little bit more in detail

632
00:27:18,010 --> 00:27:24,040
this is a very recent one most

633
00:27:21,370 --> 00:27:27,250
interesting to learn a little bit of how

634
00:27:24,040 --> 00:27:30,760
Google reacts what is being publicized

635
00:27:27,250 --> 00:27:32,710
in the media so end of September there

636
00:27:30,760 --> 00:27:34,629
was a big news release at least in the

637
00:27:32,710 --> 00:27:36,520
english-speaking world about Chrome

638
00:27:34,630 --> 00:27:38,110
extensions that mine mineiro in the

639
00:27:36,520 --> 00:27:40,990
background if you never heard about

640
00:27:38,110 --> 00:27:42,610
Monaro think Bitcoin it's a

641
00:27:40,990 --> 00:27:44,080
cryptocurrency it's the same as Bitcoin

642
00:27:42,610 --> 00:27:46,600
technically a little bit different but

643
00:27:44,080 --> 00:27:48,460
that doesn't matter at all the idea is

644
00:27:46,600 --> 00:27:51,429
if I can trick users into installing an

645
00:27:48,460 --> 00:27:54,550
extension that mines cryptocurrency in

646
00:27:51,430 --> 00:27:56,440
the background for my gain I'm becoming

647
00:27:54,550 --> 00:27:59,639
rich I have a lot large distributed

648
00:27:56,440 --> 00:28:04,800
network of people mining Bitcoin for me

649
00:27:59,640 --> 00:28:08,830
that was made public on September 19th

650
00:28:04,800 --> 00:28:10,570
in our regular download of extensions we

651
00:28:08,830 --> 00:28:12,820
only have a version of that extension

652
00:28:10,570 --> 00:28:15,100
which does not mind Bitcoin and then it

653
00:28:12,820 --> 00:28:17,050
was removed from the store which means

654
00:28:15,100 --> 00:28:19,510
Google removed that extension after

655
00:28:17,050 --> 00:28:23,080
being notified from the store in less

656
00:28:19,510 --> 00:28:26,140
than 20 hours roughly so very very

657
00:28:23,080 --> 00:28:28,060
quickly so most likely not many of the

658
00:28:26,140 --> 00:28:29,980
of the users of that extensions were

659
00:28:28,060 --> 00:28:33,940
actually affected because Kuby reacted

660
00:28:29,980 --> 00:28:37,090
so quickly and then I thought hmm we

661
00:28:33,940 --> 00:28:39,700
have that data available checking if the

662
00:28:37,090 --> 00:28:42,780
extensions are mining Manero if you have

663
00:28:39,700 --> 00:28:46,090
the source code isn't that difficult and

664
00:28:42,780 --> 00:28:48,280
I have that unused large computing

665
00:28:46,090 --> 00:28:50,860
facility of the universities so why not

666
00:28:48,280 --> 00:28:52,540
ran a big crap over all the extensions

667
00:28:50,860 --> 00:28:55,990
and check if other people are doing that

668
00:28:52,540 --> 00:29:00,010
as well and two days after the press

669
00:28:55,990 --> 00:29:01,270
release I found 16 at least 16 other

670
00:29:00,010 --> 00:29:04,990
extensions

671
00:29:01,270 --> 00:29:07,240
also mining Manero the interesting

672
00:29:04,990 --> 00:29:10,660
meta-analysis then was they were all

673
00:29:07,240 --> 00:29:13,510
published in the store after that press

674
00:29:10,660 --> 00:29:16,300
release so most likely that press

675
00:29:13,510 --> 00:29:18,970
release motivated people to say hey if

676
00:29:16,300 --> 00:29:20,879
that guy can make money with it I want

677
00:29:18,970 --> 00:29:24,130
to do it as well

678
00:29:20,880 --> 00:29:26,830
the other interesting observation was

679
00:29:24,130 --> 00:29:29,140
most of those 16 extensions were not

680
00:29:26,830 --> 00:29:32,800
fresh extensions but extensions with an

681
00:29:29,140 --> 00:29:35,170
already existing user base with which

682
00:29:32,800 --> 00:29:37,149
more or less looked and maintained so

683
00:29:35,170 --> 00:29:40,590
the last update was more than a year ago

684
00:29:37,150 --> 00:29:43,540
which is pretty long for an extension

685
00:29:40,590 --> 00:29:45,250
which led me to the assumption that most

686
00:29:43,540 --> 00:29:47,980
likely somebody I'd check the Google

687
00:29:45,250 --> 00:29:49,810
account of those developers and just

688
00:29:47,980 --> 00:29:55,750
waited for a good moment for making

689
00:29:49,810 --> 00:29:57,700
money with it interestingly the people

690
00:29:55,750 --> 00:29:59,350
that inserted the Monaro scripts forgot

691
00:29:57,700 --> 00:30:01,090
to add the necessary permissions for

692
00:29:59,350 --> 00:30:02,639
mining Manero and a couple of extensions

693
00:30:01,090 --> 00:30:05,110
so they needed to ship up an update

694
00:30:02,640 --> 00:30:09,760
which they actually did mostly within a

695
00:30:05,110 --> 00:30:12,129
day or I think eight out of the 16 and

696
00:30:09,760 --> 00:30:15,879
the other surprising aspect was I then

697
00:30:12,130 --> 00:30:18,490
also look to which wallets are those

698
00:30:15,880 --> 00:30:20,560
extension mining and there was a

699
00:30:18,490 --> 00:30:22,800
correlation between the original authors

700
00:30:20,560 --> 00:30:27,520
of the extension and the Bitcoin wallet

701
00:30:22,800 --> 00:30:31,540
I don't know why this has been done that

702
00:30:27,520 --> 00:30:33,550
kind of would count a counter would be a

703
00:30:31,540 --> 00:30:36,159
counter-argument to my reasoning that

704
00:30:33,550 --> 00:30:38,440
it's one guy that I checked a couple of

705
00:30:36,160 --> 00:30:43,600
accounts but maybe he wanted to hide his

706
00:30:38,440 --> 00:30:45,100
traces that way I don't know but they

707
00:30:43,600 --> 00:30:47,679
are really supporting those extensions

708
00:30:45,100 --> 00:30:49,919
and yeah we notified Google about them

709
00:30:47,680 --> 00:30:52,780
and they were also then successively

710
00:30:49,920 --> 00:30:54,100
removed from the store because that's at

711
00:30:52,780 --> 00:30:56,530
least a violation of the terms of

712
00:30:54,100 --> 00:30:58,449
services there are also a couple of

713
00:30:56,530 --> 00:31:01,149
extensions which mined Bitcoin on

714
00:30:58,450 --> 00:31:03,520
purpose which clearly state we are

715
00:31:01,150 --> 00:31:06,070
mining Bitcoin for example for the good

716
00:31:03,520 --> 00:31:09,330
of a charity and then of course if you

717
00:31:06,070 --> 00:31:11,800
install it there's nothing bad with it

718
00:31:09,330 --> 00:31:14,439
but if you do that in the background and

719
00:31:11,800 --> 00:31:15,899
use the power of your users then please

720
00:31:14,440 --> 00:31:18,309
inform them at

721
00:31:15,900 --> 00:31:22,450
another way of monetizing apps that

722
00:31:18,309 --> 00:31:25,000
we've seen as apps that change so

723
00:31:22,450 --> 00:31:27,100
Emerson hasn't affiliate program where

724
00:31:25,000 --> 00:31:29,799
if you add some tech to the link to an

725
00:31:27,100 --> 00:31:31,959
Emerson product and somebody accesses

726
00:31:29,799 --> 00:31:34,299
Emerson over that link and buys that

727
00:31:31,960 --> 00:31:37,659
product you get a little bit of the

728
00:31:34,299 --> 00:31:41,440
revenue and let's of course also an way

729
00:31:37,659 --> 00:31:43,360
of making money with extensions and

730
00:31:41,440 --> 00:31:45,309
that's not that easy to detect because

731
00:31:43,360 --> 00:31:47,439
they're usually hiding their traces it's

732
00:31:45,309 --> 00:31:49,330
only a small piece that you need to add

733
00:31:47,440 --> 00:31:51,400
it's more like yeah you need to replace

734
00:31:49,330 --> 00:31:53,740
any links to Emerson and add some

735
00:31:51,400 --> 00:31:55,600
parameter to the URL so that's something

736
00:31:53,740 --> 00:31:57,789
which is not easily to check statically

737
00:31:55,600 --> 00:32:00,760
so we did that was a dynamic analysis

738
00:31:57,789 --> 00:32:03,669
again where we run all the extensions on

739
00:32:00,760 --> 00:32:07,720
that large cluster and we checked if

740
00:32:03,669 --> 00:32:09,700
they are adding the links on on websites

741
00:32:07,720 --> 00:32:12,159
like Amazon CEO at UK which is the

742
00:32:09,700 --> 00:32:13,750
British version of Amazon British entry

743
00:32:12,159 --> 00:32:16,470
point to Emerson the International one

744
00:32:13,750 --> 00:32:18,940
to come domain and the Italian one and

745
00:32:16,470 --> 00:32:22,750
we also dare found quite a number of

746
00:32:18,940 --> 00:32:24,490
extensions which did that you hear we

747
00:32:22,750 --> 00:32:25,960
found also a large amount which actually

748
00:32:24,490 --> 00:32:29,200
declared in their terms and services

749
00:32:25,960 --> 00:32:31,390
that they are doing that again either

750
00:32:29,200 --> 00:32:33,549
for officially informing the users we

751
00:32:31,390 --> 00:32:35,440
are doing that to finance the

752
00:32:33,549 --> 00:32:38,590
development of the extensions and

753
00:32:35,440 --> 00:32:40,720
hopefully yeah happy with it or because

754
00:32:38,590 --> 00:32:44,470
there again was the idea of the revenue

755
00:32:40,720 --> 00:32:47,049
going to a charity but the large number

756
00:32:44,470 --> 00:32:48,970
did not declare it and again not

757
00:32:47,049 --> 00:32:51,460
necessarily security risk at least I

758
00:32:48,970 --> 00:32:54,100
cannot assess that because I do not know

759
00:32:51,460 --> 00:32:56,380
what information in Emerson affiliate

760
00:32:54,100 --> 00:32:59,049
partner actually gets about the people

761
00:32:56,380 --> 00:33:00,539
that accesses by something by M us and

762
00:32:59,049 --> 00:33:03,549
we are the links they are generating I

763
00:33:00,539 --> 00:33:05,289
assume that this would only be used with

764
00:33:03,549 --> 00:33:09,100
an Emerson I still consider that a

765
00:33:05,289 --> 00:33:11,500
privacy issue I mean at least Emerson

766
00:33:09,100 --> 00:33:14,168
knows that you did access their website

767
00:33:11,500 --> 00:33:15,760
coming from somebody that uses that tag

768
00:33:14,169 --> 00:33:17,679
and that could be of course an

769
00:33:15,760 --> 00:33:21,879
organization you don't want to associate

770
00:33:17,679 --> 00:33:24,010
with yourself with and maybe then

771
00:33:21,880 --> 00:33:26,409
suddenly strange things pop up in your

772
00:33:24,010 --> 00:33:28,160
MSN suggests list what you want to buy

773
00:33:26,409 --> 00:33:30,160
next

774
00:33:28,160 --> 00:33:32,450
let's say if that was a racist

775
00:33:30,160 --> 00:33:35,240
organization or so you might see some

776
00:33:32,450 --> 00:33:38,090
fancy books also in such a chest list so

777
00:33:35,240 --> 00:33:40,040
shouldn't be done either and it's

778
00:33:38,090 --> 00:33:41,510
definitely a violation of the terms of

779
00:33:40,040 --> 00:33:47,930
services of the Emerson affiliate

780
00:33:41,510 --> 00:33:50,300
program more security severe is actually

781
00:33:47,930 --> 00:33:52,430
something which we spotted as well in

782
00:33:50,300 --> 00:33:54,500
the dynamic analysis these are

783
00:33:52,430 --> 00:33:57,560
extensions which are misused in Google

784
00:33:54,500 --> 00:34:01,940
Analytics or other well-known Analytics

785
00:33:57,560 --> 00:34:04,129
JavaScript libraries so usually when you

786
00:34:01,940 --> 00:34:05,600
use those libraries like Google

787
00:34:04,130 --> 00:34:06,200
Analytics if you add that here to your

788
00:34:05,600 --> 00:34:08,810
website

789
00:34:06,200 --> 00:34:12,280
you only get information about the

790
00:34:08,810 --> 00:34:15,049
behavior of the user on your website

791
00:34:12,280 --> 00:34:16,730
you're collecting telemetry data to

792
00:34:15,050 --> 00:34:19,880
improve your website which buttons are

793
00:34:16,730 --> 00:34:23,240
click or something like that that's a

794
00:34:19,880 --> 00:34:26,210
reasonable use case you can also add

795
00:34:23,239 --> 00:34:29,359
those analytics scripts to your

796
00:34:26,210 --> 00:34:32,000
extension again if you do it as Google

797
00:34:29,360 --> 00:34:33,890
is suggesting it to learn what is the

798
00:34:32,000 --> 00:34:35,659
user doing with your extension again

799
00:34:33,889 --> 00:34:38,989
which buttons are clicked which features

800
00:34:35,659 --> 00:34:40,250
are used often make sense to collect

801
00:34:38,989 --> 00:34:42,439
that data if you want to improve your

802
00:34:40,250 --> 00:34:44,690
extension what we've seen is people

803
00:34:42,440 --> 00:34:46,639
extensions that actually inject those

804
00:34:44,690 --> 00:34:49,220
analytics scripts in each website that

805
00:34:46,639 --> 00:34:51,980
you visit and then suddenly that

806
00:34:49,219 --> 00:34:54,199
extension author learns your behavior on

807
00:34:51,980 --> 00:34:57,350
all web sites that you visit regardless

808
00:34:54,199 --> 00:35:00,259
if that domain is owned by him or her or

809
00:34:57,350 --> 00:35:02,750
if you're doing something with actively

810
00:35:00,260 --> 00:35:05,390
with this extension or not it's really

811
00:35:02,750 --> 00:35:07,640
collecting on large-scale your complete

812
00:35:05,390 --> 00:35:10,339
browsing behavior again as in the

813
00:35:07,640 --> 00:35:12,529
example was the German TV station

814
00:35:10,340 --> 00:35:14,810
including all parameters attached to the

815
00:35:12,530 --> 00:35:17,020
URL which means information about Google

816
00:35:14,810 --> 00:35:21,110
Docs that you are currently editing

817
00:35:17,020 --> 00:35:22,940
google translate Facebook content

818
00:35:21,110 --> 00:35:25,460
whenever something is attached to the

819
00:35:22,940 --> 00:35:27,380
URL it will be transmitted and it will

820
00:35:25,460 --> 00:35:30,380
be nicely translated to the servers of

821
00:35:27,380 --> 00:35:32,360
the analytics engine for example Google

822
00:35:30,380 --> 00:35:34,400
Analytics which makes it hard to detect

823
00:35:32,360 --> 00:35:36,140
it from the outside because most

824
00:35:34,400 --> 00:35:38,660
websites are already including Google

825
00:35:36,140 --> 00:35:40,850
Analytics if there are two requests to

826
00:35:38,660 --> 00:35:42,499
Google Analytics instead of one nearly

827
00:35:40,850 --> 00:35:45,710
nobody notices

828
00:35:42,499 --> 00:35:47,578
so that's really something we're

829
00:35:45,710 --> 00:35:49,200
instrumenting the actual source code of

830
00:35:47,579 --> 00:35:51,920
the extension comes handy because we

831
00:35:49,200 --> 00:35:55,529
know exactly that this request was

832
00:35:51,920 --> 00:35:58,200
initiated by that extension and we've

833
00:35:55,529 --> 00:36:00,329
even seen extensions adding unique

834
00:35:58,200 --> 00:36:03,149
identifiers to the request so that it

835
00:36:00,329 --> 00:36:06,990
really can identify you over all those

836
00:36:03,150 --> 00:36:08,460
websites which is not nicely shown in

837
00:36:06,990 --> 00:36:11,399
Google Analytics website then if you

838
00:36:08,460 --> 00:36:13,880
look into your webmaster console but I

839
00:36:11,400 --> 00:36:16,019
assume they have some scripts which then

840
00:36:13,880 --> 00:36:18,839
scrap that data from the Google

841
00:36:16,019 --> 00:36:22,229
Analytics website and analyze them

842
00:36:18,839 --> 00:36:24,930
locally No so that's something which I

843
00:36:22,230 --> 00:36:28,920
consider is really a big issue in terms

844
00:36:24,930 --> 00:36:30,660
of a privacy violation luckily we only

845
00:36:28,920 --> 00:36:32,940
detected 18 extensions and we are only

846
00:36:30,660 --> 00:36:34,950
talking about a quarter of a million of

847
00:36:32,940 --> 00:36:37,410
users which given the total number of

848
00:36:34,950 --> 00:36:41,249
users of Chrome is not that large so I

849
00:36:37,410 --> 00:36:43,170
don't want to hype it too much but from

850
00:36:41,249 --> 00:36:47,910
a technical perspective it's definitely

851
00:36:43,170 --> 00:36:50,609
an interesting attack outlook how can we

852
00:36:47,910 --> 00:36:52,410
map pros in making Krait again create in

853
00:36:50,609 --> 00:36:55,259
terms of increasing the security

854
00:36:52,410 --> 00:36:59,399
integrity privacy of the people actually

855
00:36:55,259 --> 00:37:02,759
using a web browser so how can we ensure

856
00:36:59,400 --> 00:37:04,890
that actually the content that you look

857
00:37:02,759 --> 00:37:06,239
at the website is not modified or only

858
00:37:04,890 --> 00:37:09,390
modified when you want to have it

859
00:37:06,239 --> 00:37:11,279
modified of course I cannot cross the

860
00:37:09,390 --> 00:37:13,140
web without a net blocker so I want the

861
00:37:11,279 --> 00:37:15,749
web blocker to modify certain content on

862
00:37:13,140 --> 00:37:17,578
websites but not all of them and what

863
00:37:15,749 --> 00:37:20,578
modifying content means might also be

864
00:37:17,579 --> 00:37:22,619
very context sensitive if I have white

865
00:37:20,579 --> 00:37:24,839
text on white background it's invisible

866
00:37:22,619 --> 00:37:26,999
to me but of course for the computer

867
00:37:24,839 --> 00:37:30,569
it's still there and if this is my bank

868
00:37:26,999 --> 00:37:32,129
statement or a wire transfer order then

869
00:37:30,569 --> 00:37:33,319
a couple of zeros here and there might

870
00:37:32,130 --> 00:37:36,150
make a big difference

871
00:37:33,319 --> 00:37:40,558
to my bank account to the computer if I

872
00:37:36,150 --> 00:37:42,480
can't see them it's not good for me data

873
00:37:40,559 --> 00:37:45,869
transmitted confidentiality privacy we

874
00:37:42,480 --> 00:37:48,390
already discussed on the long-term

875
00:37:45,869 --> 00:37:51,109
people not only we in general are

876
00:37:48,390 --> 00:37:53,308
working on sandboxing of extensions

877
00:37:51,109 --> 00:37:54,930
their works considering different

878
00:37:53,309 --> 00:37:55,920
permission models we've seen the

879
00:37:54,930 --> 00:37:57,779
presentation is not

880
00:37:55,920 --> 00:38:00,000
nice it's actually pretty hard for

881
00:37:57,780 --> 00:38:02,040
developers for specifying the minimal

882
00:38:00,000 --> 00:38:05,369
set of permissions that might be another

883
00:38:02,040 --> 00:38:07,558
reason by the overly specified them and

884
00:38:05,369 --> 00:38:11,069
just in case ask for too many

885
00:38:07,559 --> 00:38:12,450
permissions introducing of a dynamic

886
00:38:11,069 --> 00:38:15,569
permission model that's actually now

887
00:38:12,450 --> 00:38:20,419
becoming much more common today in

888
00:38:15,569 --> 00:38:23,369
nowadays and also better analysis tools

889
00:38:20,420 --> 00:38:26,430
so that's also part where we are working

890
00:38:23,369 --> 00:38:29,400
on on the short term if you are using

891
00:38:26,430 --> 00:38:31,169
extensions and you would like to

892
00:38:29,400 --> 00:38:35,160
minimize the risk falling in these kind

893
00:38:31,170 --> 00:38:36,960
of traps and principal to different

894
00:38:35,160 --> 00:38:39,509
models that the security community is

895
00:38:36,960 --> 00:38:42,000
discussing in general with software and

896
00:38:39,510 --> 00:38:45,450
software that might be take over from

897
00:38:42,000 --> 00:38:47,069
bad guys as frequent updates so you have

898
00:38:45,450 --> 00:38:49,169
the automated updates you always get a

899
00:38:47,069 --> 00:38:50,849
new version but that also means that if

900
00:38:49,170 --> 00:38:53,010
somebody is hijacking that extension you

901
00:38:50,849 --> 00:38:55,890
suddenly get that Bitcoin mining version

902
00:38:53,010 --> 00:38:57,690
pushed automatically on your computer or

903
00:38:55,890 --> 00:38:59,460
you have a strict governments you say

904
00:38:57,690 --> 00:39:01,829
exactly these are the five extensions

905
00:38:59,460 --> 00:39:04,290
that I allow my users to install if

906
00:39:01,829 --> 00:39:06,530
you're in a copyright setup and the

907
00:39:04,290 --> 00:39:08,880
update is being pushed we are some

908
00:39:06,530 --> 00:39:11,700
centralized update mechanism that I have

909
00:39:08,880 --> 00:39:13,079
under control so in theory I can inspect

910
00:39:11,700 --> 00:39:16,439
whatever is installed on the computer

911
00:39:13,079 --> 00:39:17,819
first before its installed in reality

912
00:39:16,440 --> 00:39:20,790
but it would like to have something in

913
00:39:17,819 --> 00:39:23,569
between of course and that might be an

914
00:39:20,790 --> 00:39:26,190
approach with whitelisting certain

915
00:39:23,569 --> 00:39:28,859
extensions where you believe that it's

916
00:39:26,190 --> 00:39:30,599
more unlikely that the Google account

917
00:39:28,859 --> 00:39:33,270
gets hijacked because the organization

918
00:39:30,599 --> 00:39:35,400
behind this very careful or Google

919
00:39:33,270 --> 00:39:38,339
offers them additional protection

920
00:39:35,400 --> 00:39:40,470
measures so for example the extensions

921
00:39:38,339 --> 00:39:43,740
of a directive by Google or other large

922
00:39:40,470 --> 00:39:47,910
companies most likely are less likely to

923
00:39:43,740 --> 00:39:50,308
get high check compared to the extension

924
00:39:47,910 --> 00:39:52,379
provided by a hobby programmer which

925
00:39:50,309 --> 00:39:58,170
doesn't have a lot of time for securing

926
00:39:52,380 --> 00:39:59,849
the whole development setup check so

927
00:39:58,170 --> 00:40:01,200
it's a general guideline and check the

928
00:39:59,849 --> 00:40:02,520
vendor of your extensions when you're

929
00:40:01,200 --> 00:40:04,430
installing something if there's a

930
00:40:02,520 --> 00:40:07,829
Facebook extension that are claiming

931
00:40:04,430 --> 00:40:09,720
originating from Facebook but the author

932
00:40:07,829 --> 00:40:13,260
text says something different that's

933
00:40:09,720 --> 00:40:15,060
specious check the permissions in

934
00:40:13,260 --> 00:40:17,280
particular active domains is something

935
00:40:15,060 --> 00:40:18,630
which is heavily over specified so if

936
00:40:17,280 --> 00:40:21,060
you're installing an extension for

937
00:40:18,630 --> 00:40:22,650
Facebook most likely need only to

938
00:40:21,060 --> 00:40:24,299
interact with Facebook if you're

939
00:40:22,650 --> 00:40:26,490
installing a calculator that gives you

940
00:40:24,300 --> 00:40:29,460
revenue calculations of from Amazon or

941
00:40:26,490 --> 00:40:31,950
Ebay you might want to have it to Excel

942
00:40:29,460 --> 00:40:34,890
access to eBay or Amazon but it doesn't

943
00:40:31,950 --> 00:40:36,899
need to access other websites it's a

944
00:40:34,890 --> 00:40:39,509
little bit tedious you have to do that

945
00:40:36,900 --> 00:40:42,000
manually because only you know what you

946
00:40:39,510 --> 00:40:44,040
expect from the extension but it's

947
00:40:42,000 --> 00:40:45,300
advisable if you are a little bit more

948
00:40:44,040 --> 00:40:48,119
security cautious

949
00:40:45,300 --> 00:40:50,970
then maybe powers up profiles on easy

950
00:40:48,119 --> 00:40:53,130
way of separating a Prosser instance

951
00:40:50,970 --> 00:40:55,560
which you are using for more security

952
00:40:53,130 --> 00:40:56,700
critical tasks like banking because

953
00:40:55,560 --> 00:40:59,369
those extensions are installed

954
00:40:56,700 --> 00:41:01,259
separately in each and every browser

955
00:40:59,369 --> 00:41:05,130
profile and all modern process easily

956
00:41:01,260 --> 00:41:06,450
allowed to switch profiles and yeah be

957
00:41:05,130 --> 00:41:08,340
aware of the risk when you're installing

958
00:41:06,450 --> 00:41:10,500
extensions maybe you don't want to test

959
00:41:08,340 --> 00:41:13,080
each and every strange extension in your

960
00:41:10,500 --> 00:41:15,450
main web browser again use a dedicated

961
00:41:13,080 --> 00:41:18,330
test profile or temporary profile for

962
00:41:15,450 --> 00:41:21,629
that thanks for that I'm happy to answer

963
00:41:18,330 --> 00:41:25,009
questions still have five minutes round

964
00:41:21,630 --> 00:41:25,010
about first of all thank you

965
00:41:30,180 --> 00:41:42,669
questions hello thank you for the talk I

966
00:41:40,480 --> 00:41:44,260
have a question about the extensions do

967
00:41:42,670 --> 00:41:46,660
you know imagine to have more than one

968
00:41:44,260 --> 00:41:48,280
extension which one is the order of the

969
00:41:46,660 --> 00:41:50,069
creation of the extension because you

970
00:41:48,280 --> 00:41:52,420
can kind of think of extension which is

971
00:41:50,070 --> 00:41:54,670
forbidding all this changing the headers

972
00:41:52,420 --> 00:41:58,000
for example kind of security exception

973
00:41:54,670 --> 00:41:59,860
whatever security the extension is so if

974
00:41:58,000 --> 00:42:02,110
you have two extensions on your browser

975
00:41:59,860 --> 00:42:08,740
it is executed in which world what can

976
00:42:02,110 --> 00:42:11,200
you kind of choose it that's a question

977
00:42:08,740 --> 00:42:12,759
I was asking myself if those extensions

978
00:42:11,200 --> 00:42:13,480
are injecting JavaScript in the same

979
00:42:12,760 --> 00:42:17,230
context

980
00:42:13,480 --> 00:42:20,530
I assume it's based on the order of the

981
00:42:17,230 --> 00:42:22,840
internal idea because the pros are is

982
00:42:20,530 --> 00:42:24,610
distinguishing those extensions by their

983
00:42:22,840 --> 00:42:26,740
ID and if you look or they're installed

984
00:42:24,610 --> 00:42:28,300
on the system for each extension your

985
00:42:26,740 --> 00:42:31,750
from directory which the ID name and I

986
00:42:28,300 --> 00:42:40,510
assume it's just in the order those IDs

987
00:42:31,750 --> 00:42:42,040
are sorted but I'm not sure but just to

988
00:42:40,510 --> 00:42:43,780
complete that if you have one extension

989
00:42:42,040 --> 00:42:45,610
that modifies the header data it of

990
00:42:43,780 --> 00:42:49,000
course hooks to the event for the web

991
00:42:45,610 --> 00:42:50,620
requests and then most likely it is able

992
00:42:49,000 --> 00:42:52,780
to modify them before other extensions

993
00:42:50,620 --> 00:42:54,460
get them the problem would be if two

994
00:42:52,780 --> 00:42:57,120
extensions want to modify the rep

995
00:42:54,460 --> 00:42:59,680
request then you have a race condition

996
00:42:57,120 --> 00:43:01,839
thanks for your presentation I always

997
00:42:59,680 --> 00:43:04,149
wonder how reliable the pop up system

998
00:43:01,840 --> 00:43:05,590
with the warning message disease in

999
00:43:04,150 --> 00:43:08,020
other words did you ever see an

1000
00:43:05,590 --> 00:43:11,950
extension not warning you for accessing

1001
00:43:08,020 --> 00:43:13,630
some data but in fact it did no we have

1002
00:43:11,950 --> 00:43:16,629
but we haven't explicitly looked into

1003
00:43:13,630 --> 00:43:18,760
that but I assume that that part is

1004
00:43:16,630 --> 00:43:19,930
pretty well done the problem at the

1005
00:43:18,760 --> 00:43:23,080
moment is more that the extension are

1006
00:43:19,930 --> 00:43:24,640
just asking for the permissions so I

1007
00:43:23,080 --> 00:43:28,810
haven't looked into circumventing a

1008
00:43:24,640 --> 00:43:31,810
permission system as such hi can two

1009
00:43:28,810 --> 00:43:35,580
extensions communicate yes so you can

1010
00:43:31,810 --> 00:43:39,430
have composite permission you can have

1011
00:43:35,580 --> 00:43:40,630
exchange between two permissions and of

1012
00:43:39,430 --> 00:43:42,549
course you can have two pom

1013
00:43:40,630 --> 00:43:44,200
extensions that both click

1014
00:43:42,550 --> 00:43:47,260
to a small set of extensions the

1015
00:43:44,200 --> 00:43:49,390
combination is problematic that's if you

1016
00:43:47,260 --> 00:43:57,970
want to plan an advanced attack that's

1017
00:43:49,390 --> 00:44:01,240
possible as well yeah we are using

1018
00:43:57,970 --> 00:44:03,220
Chrome on corporate level as well is it

1019
00:44:01,240 --> 00:44:04,750
possible to block all those exchanges or

1020
00:44:03,220 --> 00:44:07,049
whitelist exchanges on the corporate

1021
00:44:04,750 --> 00:44:09,400
flock from an enterprise perspective

1022
00:44:07,050 --> 00:44:10,840
should be possible I can't give a

1023
00:44:09,400 --> 00:44:14,140
definite answer for all operating

1024
00:44:10,840 --> 00:44:15,370
systems for example and Debian that's

1025
00:44:14,140 --> 00:44:17,140
the way that in the default installation

1026
00:44:15,370 --> 00:44:18,670
only extensions are activated that are

1027
00:44:17,140 --> 00:44:21,990
distributed we had the Debian software

1028
00:44:18,670 --> 00:44:24,100
repository which some people consider

1029
00:44:21,990 --> 00:44:26,290
painful other considered a security

1030
00:44:24,100 --> 00:44:27,759
advancement I would assume that for

1031
00:44:26,290 --> 00:44:29,410
example the windows at minutes copyright

1032
00:44:27,760 --> 00:44:31,320
adversative controls allow you to

1033
00:44:29,410 --> 00:44:33,819
control that as well

1034
00:44:31,320 --> 00:44:36,110
of course he's available to the breakers

1035
00:44:33,820 --> 00:44:41,010
well thank you Thanks

1036
00:44:36,110 --> 00:44:41,010
[Applause]

