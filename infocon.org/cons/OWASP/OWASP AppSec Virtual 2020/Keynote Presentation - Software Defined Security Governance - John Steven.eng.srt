1
00:00:03,170 --> 00:00:06,939
[Music]

2
00:00:09,400 --> 00:00:12,509
[Music]

3
00:00:14,960 --> 00:00:16,820
foreign

4
00:00:16,820 --> 00:00:20,199
[Music]

5
00:00:24,210 --> 00:00:27,199
[Music]

6
00:00:27,199 --> 00:00:30,199
i

7
00:00:36,890 --> 00:00:39,929
[Music]

8
00:00:40,950 --> 00:00:42,350
[Applause]

9
00:00:42,350 --> 00:00:45,060
[Music]

10
00:00:45,060 --> 00:00:48,180
[Applause]

11
00:00:48,180 --> 00:00:55,979
[Music]

12
00:01:00,270 --> 00:01:11,829
[Music]

13
00:01:14,240 --> 00:01:17,240
do

14
00:01:18,330 --> 00:01:21,420
[Music]

15
00:01:32,210 --> 00:01:35,350
[Music]

16
00:01:37,860 --> 00:01:43,900
[Music]

17
00:01:45,680 --> 00:01:48,540
do

18
00:01:48,540 --> 00:02:11,940
[Music]

19
00:02:19,320 --> 00:02:22,400
[Music]

20
00:02:28,120 --> 00:02:31,199
[Music]

21
00:02:36,210 --> 00:02:36,570
[Applause]

22
00:02:36,570 --> 00:02:38,320
[Music]

23
00:02:38,320 --> 00:02:38,690
[Applause]

24
00:02:38,690 --> 00:02:42,079
[Music]

25
00:02:42,140 --> 00:02:44,790
[Applause]

26
00:02:44,790 --> 00:02:44,910
[Music]

27
00:02:44,910 --> 00:02:51,079
[Applause]

28
00:02:56,120 --> 00:02:57,390
[Music]

29
00:02:57,390 --> 00:02:58,870
[Applause]

30
00:02:58,870 --> 00:03:21,810
[Music]

31
00:03:21,840 --> 00:03:23,270
so

32
00:03:23,270 --> 00:03:28,069
[Music]

33
00:03:32,890 --> 00:04:16,789
[Music]

34
00:04:20,410 --> 00:04:51,759
[Music]

35
00:04:51,759 --> 00:04:54,380
hello

36
00:04:54,380 --> 00:05:01,139
[Music]

37
00:05:08,160 --> 00:05:10,880
through his firm edify john stephen

38
00:05:10,880 --> 00:05:13,120
advises innovative security product

39
00:05:13,120 --> 00:05:15,759
firms as well as maturing security

40
00:05:15,759 --> 00:05:17,440
initiatives

41
00:05:17,440 --> 00:05:20,320
john leads one such firm zero north as

42
00:05:20,320 --> 00:05:21,680
cto

43
00:05:21,680 --> 00:05:23,919
for two decades john led technical

44
00:05:23,919 --> 00:05:26,720
direction at sigil where he rose to the

45
00:05:26,720 --> 00:05:28,880
position of co-cto

46
00:05:28,880 --> 00:05:32,320
he then founded and was cto of codoscope

47
00:05:32,320 --> 00:05:34,720
a sigil spin-off

48
00:05:34,720 --> 00:05:37,600
after sigil and codoscope's acquisition

49
00:05:37,600 --> 00:05:39,280
by synopsis

50
00:05:39,280 --> 00:05:41,759
john was the senior director of security

51
00:05:41,759 --> 00:05:44,160
technology and applied research

52
00:05:44,160 --> 00:05:47,360
he co-authors the bsim study and serves

53
00:05:47,360 --> 00:05:50,400
as co-editor of the building security in

54
00:05:50,400 --> 00:05:52,960
the department of ieee security and

55
00:05:52,960 --> 00:05:54,880
privacy magazine

56
00:05:54,880 --> 00:05:56,479
john is keenly interested in

57
00:05:56,479 --> 00:05:59,120
software-defined security governance at

58
00:05:59,120 --> 00:06:01,759
the cadence of modern development

59
00:06:01,759 --> 00:06:03,600
please welcome john stephen to the

60
00:06:03,600 --> 00:06:07,039
virtual podium

61
00:06:07,039 --> 00:06:08,639
hello everybody i'm john stephen

62
00:06:08,639 --> 00:06:10,479
founding principal of edify security as

63
00:06:10,479 --> 00:06:12,800
well as cto at zero north welcome to

64
00:06:12,800 --> 00:06:15,199
appsec global and this keynote

65
00:06:15,199 --> 00:06:17,199
as well as my home office and my son's

66
00:06:17,199 --> 00:06:19,360
first grade classroom

67
00:06:19,360 --> 00:06:21,680
um hopefully each and every one of you

68
00:06:21,680 --> 00:06:24,479
is safe sane and healthy and finding

69
00:06:24,479 --> 00:06:26,160
some unexpected joy amongst the

70
00:06:26,160 --> 00:06:27,600
challenges we're all

71
00:06:27,600 --> 00:06:30,400
struggling through right now

72
00:06:30,400 --> 00:06:32,319
i'm here today to talk to you about

73
00:06:32,319 --> 00:06:35,199
software-defined security governance

74
00:06:35,199 --> 00:06:36,080
and

75
00:06:36,080 --> 00:06:38,160
more generally what's happening in

76
00:06:38,160 --> 00:06:40,960
application security and how

77
00:06:40,960 --> 00:06:42,720
what we've taken for granted and what

78
00:06:42,720 --> 00:06:44,880
we've matured and optimized over the

79
00:06:44,880 --> 00:06:46,479
last two decades

80
00:06:46,479 --> 00:06:48,319
is really fundamentally changing

81
00:06:48,319 --> 00:06:50,240
underneath our feet and what we need to

82
00:06:50,240 --> 00:06:53,120
do about it to maintain it before

83
00:06:53,120 --> 00:06:55,759
and be effective in securing

84
00:06:55,759 --> 00:06:59,720
our organization as a software

85
00:07:02,240 --> 00:07:04,720
for years i've been talking uh with

86
00:07:04,720 --> 00:07:08,560
organizations um at conferences about

87
00:07:08,560 --> 00:07:09,759
how the

88
00:07:09,759 --> 00:07:11,280
trends in

89
00:07:11,280 --> 00:07:13,919
uh development have changed the way we

90
00:07:13,919 --> 00:07:16,080
need to address security

91
00:07:16,080 --> 00:07:18,560
talking about how

92
00:07:18,560 --> 00:07:20,400
you know these words get jumbled up by

93
00:07:20,400 --> 00:07:22,240
security professionals

94
00:07:22,240 --> 00:07:23,520
sometimes security professionals

95
00:07:23,520 --> 00:07:27,840
struggle to figure out how to address

96
00:07:27,840 --> 00:07:30,479
when their developers

97
00:07:30,479 --> 00:07:32,639
are are engaged and deeply passionate

98
00:07:32,639 --> 00:07:36,720
about something like agility or devops

99
00:07:36,720 --> 00:07:39,360
and so looking at the roots of these

100
00:07:39,360 --> 00:07:41,840
trends

101
00:07:41,840 --> 00:07:43,599
you know a focus on change and

102
00:07:43,599 --> 00:07:47,120
accelerating delivery a focus on tools

103
00:07:47,120 --> 00:07:49,599
and emphasizing automation

104
00:07:49,599 --> 00:07:50,479
um

105
00:07:50,479 --> 00:07:52,160
as well as a focus on breaking down

106
00:07:52,160 --> 00:07:54,400
those stove pipes that we in security of

107
00:07:54,400 --> 00:07:56,879
sometimes built up

108
00:07:56,879 --> 00:07:58,560
is one of the things

109
00:07:58,560 --> 00:07:59,599
um

110
00:07:59,599 --> 00:08:00,960
you know that i've spoken about

111
00:08:00,960 --> 00:08:02,879
extensively in the past

112
00:08:02,879 --> 00:08:05,039
last year at the bsim

113
00:08:05,039 --> 00:08:07,010
the building security maturity model

114
00:08:07,010 --> 00:08:08,720
[Music]

115
00:08:08,720 --> 00:08:12,639
we found that firms were responding to

116
00:08:12,639 --> 00:08:14,560
a variety of different

117
00:08:14,560 --> 00:08:17,280
um organizational motivations

118
00:08:17,280 --> 00:08:18,160
that

119
00:08:18,160 --> 00:08:20,240
they all wrapped up into the term of

120
00:08:20,240 --> 00:08:22,560
digital transformation

121
00:08:22,560 --> 00:08:24,479
digital transformation is probably the

122
00:08:24,479 --> 00:08:27,599
happiest term out there

123
00:08:27,599 --> 00:08:30,560
but there's real meat underneath it and

124
00:08:30,560 --> 00:08:32,719
looking at where that real meat has

125
00:08:32,719 --> 00:08:34,880
taken things like agility and things

126
00:08:34,880 --> 00:08:38,799
like devops and either

127
00:08:39,360 --> 00:08:42,320
amplified it or or or symbiotically

128
00:08:42,320 --> 00:08:46,240
created more change is really important

129
00:08:46,240 --> 00:08:48,640
um the first pillar

130
00:08:48,640 --> 00:08:51,040
uh is this notion that developers and

131
00:08:51,040 --> 00:08:52,800
organizations are outsourcing much much

132
00:08:52,800 --> 00:08:54,399
more of development than they have

133
00:08:54,399 --> 00:08:56,640
historically they're outsourcing more

134
00:08:56,640 --> 00:08:57,760
coding

135
00:08:57,760 --> 00:09:00,080
in terms of open source software they're

136
00:09:00,080 --> 00:09:02,480
outsourcing i.t itself to the cloud

137
00:09:02,480 --> 00:09:04,160
service providers

138
00:09:04,160 --> 00:09:06,160
and

139
00:09:06,160 --> 00:09:09,200
while they're doing this outsourcing um

140
00:09:09,200 --> 00:09:10,160
what

141
00:09:10,160 --> 00:09:11,519
that's

142
00:09:11,519 --> 00:09:14,240
highlighting is a developer's ability to

143
00:09:14,240 --> 00:09:15,680
self-service

144
00:09:15,680 --> 00:09:17,440
more and more aspects that the

145
00:09:17,440 --> 00:09:19,200
organization used to provide in soft

146
00:09:19,200 --> 00:09:21,360
pipes

147
00:09:21,360 --> 00:09:23,360
now that self-service

148
00:09:23,360 --> 00:09:25,200
uh when developers can go out and grab

149
00:09:25,200 --> 00:09:27,680
instances of you know ec2 or they can go

150
00:09:27,680 --> 00:09:29,760
out and grab whole web development or

151
00:09:29,760 --> 00:09:32,160
mobile development frameworks whole mfa

152
00:09:32,160 --> 00:09:33,600
or authentication authorization

153
00:09:33,600 --> 00:09:34,880
frameworks

154
00:09:34,880 --> 00:09:38,080
what that creates is a situation where

155
00:09:38,080 --> 00:09:40,240
because they were able to go get it

156
00:09:40,240 --> 00:09:42,880
and implement it themselves there's less

157
00:09:42,880 --> 00:09:44,240
opportunity

158
00:09:44,240 --> 00:09:46,399
there's less of a hook for security to

159
00:09:46,399 --> 00:09:48,959
be involved and that's sometimes made

160
00:09:48,959 --> 00:09:50,720
governance much harder

161
00:09:50,720 --> 00:09:54,240
for application security initiatives

162
00:09:54,240 --> 00:09:56,880
taking the outsourcing pillar and adding

163
00:09:56,880 --> 00:09:58,800
on to that the cultural imperative of

164
00:09:58,800 --> 00:10:00,880
devops the breaking down of the

165
00:10:00,880 --> 00:10:03,440
difference between the roles of

166
00:10:03,440 --> 00:10:06,160
operator and developer

167
00:10:06,160 --> 00:10:08,320
which you can see being symbiotic with

168
00:10:08,320 --> 00:10:10,640
moving to things like open source

169
00:10:10,640 --> 00:10:14,480
containers and cloud service provision

170
00:10:14,959 --> 00:10:16,959
means that there's an increasing

171
00:10:16,959 --> 00:10:18,640
responsiveness

172
00:10:18,640 --> 00:10:20,640
to delivery that developers can provide

173
00:10:20,640 --> 00:10:22,399
themselves and the engineers can avail

174
00:10:22,399 --> 00:10:25,839
themselves of with code that is is

175
00:10:25,839 --> 00:10:28,320
self-delivering in some sense but that's

176
00:10:28,320 --> 00:10:31,120
created a massive stress for security in

177
00:10:31,120 --> 00:10:33,200
terms of the cadence necessary to

178
00:10:33,200 --> 00:10:35,279
produce vulnerability discovery data in

179
00:10:35,279 --> 00:10:37,440
telemetry and provide that back to those

180
00:10:37,440 --> 00:10:39,920
engineers prior to

181
00:10:39,920 --> 00:10:41,040
release

182
00:10:41,040 --> 00:10:44,719
so that we can build security in

183
00:10:45,440 --> 00:10:48,640
that cadence stress in turn

184
00:10:48,640 --> 00:10:50,320
has

185
00:10:50,320 --> 00:10:52,720
doubly amplified the importance of

186
00:10:52,720 --> 00:10:54,880
automation within the process of the

187
00:10:54,880 --> 00:10:56,959
software life cycle within the process

188
00:10:56,959 --> 00:10:58,839
of the software delivery life

189
00:10:58,839 --> 00:11:01,200
cycle and

190
00:11:01,200 --> 00:11:03,120
so if we're focused on that increased

191
00:11:03,120 --> 00:11:05,440
responsiveness and we know that humans

192
00:11:05,440 --> 00:11:06,959
are the slowest thing in the loop we're

193
00:11:06,959 --> 00:11:08,640
going to remove as many of the humans as

194
00:11:08,640 --> 00:11:10,800
possible and highlight automation and

195
00:11:10,800 --> 00:11:13,040
we've seen that for years

196
00:11:13,040 --> 00:11:15,440
in cicd and in

197
00:11:15,440 --> 00:11:19,040
the challenge to security tools in

198
00:11:19,040 --> 00:11:20,800
participating in those automation

199
00:11:20,800 --> 00:11:23,120
pipelines and at the cadence that people

200
00:11:23,120 --> 00:11:24,399
need

201
00:11:24,399 --> 00:11:26,320
in order to do what what they want to do

202
00:11:26,320 --> 00:11:29,040
which is continuous or extremely low

203
00:11:29,040 --> 00:11:31,519
latency delivery and that has in fact

204
00:11:31,519 --> 00:11:32,959
created

205
00:11:32,959 --> 00:11:35,680
sort of an unwinnable war for a lot of

206
00:11:35,680 --> 00:11:37,440
security initiatives

207
00:11:37,440 --> 00:11:40,079
that are reliant on legacy maybe big box

208
00:11:40,079 --> 00:11:41,680
tools

209
00:11:41,680 --> 00:11:43,040
now there are tools out there that'll

210
00:11:43,040 --> 00:11:44,880
tell you that they've got the solution

211
00:11:44,880 --> 00:11:46,320
to this problem they fit within the

212
00:11:46,320 --> 00:11:48,720
devops cadence that they support

213
00:11:48,720 --> 00:11:51,040
um

214
00:11:51,040 --> 00:11:53,600
devops culture natively

215
00:11:53,600 --> 00:11:55,120
and there are tools that do a better job

216
00:11:55,120 --> 00:11:56,959
than others

217
00:11:56,959 --> 00:11:59,120
but i'm here to tell you

218
00:11:59,120 --> 00:12:01,680
that studying security initiatives and

219
00:12:01,680 --> 00:12:03,600
looking at these tools in great depth

220
00:12:03,600 --> 00:12:05,040
myself

221
00:12:05,040 --> 00:12:07,680
there simply is no silver bullet devops

222
00:12:07,680 --> 00:12:10,399
security tool there is no one tool that

223
00:12:10,399 --> 00:12:12,639
puts the sec in devops

224
00:12:12,639 --> 00:12:15,440
and in fact all of these tools fall prey

225
00:12:15,440 --> 00:12:16,880
to something i've been speaking about in

226
00:12:16,880 --> 00:12:19,200
keynotes here at oauth for years

227
00:12:19,200 --> 00:12:20,399
which is that

228
00:12:20,399 --> 00:12:22,560
they can find a percentage of the

229
00:12:22,560 --> 00:12:25,760
vulnerabilities and no tool finds a

230
00:12:25,760 --> 00:12:27,360
majority of the vulnerabilities let

231
00:12:27,360 --> 00:12:28,639
alone all of them

232
00:12:28,639 --> 00:12:30,399
so even if there was a tool that was

233
00:12:30,399 --> 00:12:32,560
perfectly aligned with these two pillars

234
00:12:32,560 --> 00:12:34,000
in the middle

235
00:12:34,000 --> 00:12:36,240
i'm here to tell you that your your

236
00:12:36,240 --> 00:12:39,120
initiative if it's strong and if it if

237
00:12:39,120 --> 00:12:41,760
it desires maturity is going to need to

238
00:12:41,760 --> 00:12:43,920
combine the telemetry from multiple

239
00:12:43,920 --> 00:12:45,040
tools

240
00:12:45,040 --> 00:12:47,600
not a single silver bullet tool in order

241
00:12:47,600 --> 00:12:50,240
to be effective

242
00:12:50,240 --> 00:12:51,519
there are vendors out there that tell

243
00:12:51,519 --> 00:12:53,600
you that um they can sell you all the

244
00:12:53,600 --> 00:12:56,079
tools necessary um

245
00:12:56,079 --> 00:12:58,720
that's a bit far-fetched as well um you

246
00:12:58,720 --> 00:13:01,040
know i don't see any portfolio of tools

247
00:13:01,040 --> 00:13:04,320
that one can buy from a single source um

248
00:13:04,320 --> 00:13:05,440
that

249
00:13:05,440 --> 00:13:07,920
that covers all the bases for for for

250
00:13:07,920 --> 00:13:09,760
security vulnerabilities for tech stacks

251
00:13:09,760 --> 00:13:11,680
and for organizations

252
00:13:11,680 --> 00:13:14,800
and um finally other imperatives are are

253
00:13:14,800 --> 00:13:16,240
affecting

254
00:13:16,240 --> 00:13:17,519
um

255
00:13:17,519 --> 00:13:19,519
the speed which we can do security and

256
00:13:19,519 --> 00:13:22,000
our accuracy and the way we mature our

257
00:13:22,000 --> 00:13:24,959
security programs

258
00:13:25,279 --> 00:13:27,279
more and more

259
00:13:27,279 --> 00:13:29,360
we are going to a micro service or

260
00:13:29,360 --> 00:13:31,200
orientation

261
00:13:31,200 --> 00:13:33,360
you know in concert with the desire to

262
00:13:33,360 --> 00:13:35,200
deliver continuously we're delivering

263
00:13:35,200 --> 00:13:37,200
smaller chunks of thing

264
00:13:37,200 --> 00:13:41,040
in concert with our desire to be

265
00:13:41,040 --> 00:13:43,279
agile and recognize we don't know

266
00:13:43,279 --> 00:13:44,959
necessarily what the customer wants day

267
00:13:44,959 --> 00:13:46,000
one

268
00:13:46,000 --> 00:13:47,600
we are building smaller and smaller

269
00:13:47,600 --> 00:13:48,399
parts

270
00:13:48,399 --> 00:13:51,519
um combining open source and other

271
00:13:51,519 --> 00:13:53,199
cloud service provider marketplace items

272
00:13:53,199 --> 00:13:56,000
into into microservices and delivering

273
00:13:56,000 --> 00:13:58,720
uh fabric or meshes of those things

274
00:13:58,720 --> 00:14:01,440
rather than monoliths

275
00:14:01,440 --> 00:14:03,519
and because of the microservice

276
00:14:03,519 --> 00:14:05,440
orientation because of our ability to

277
00:14:05,440 --> 00:14:08,480
self-service packaging and delivery

278
00:14:08,480 --> 00:14:10,639
we're able to reach for the brass ring

279
00:14:10,639 --> 00:14:13,040
of leverage and say

280
00:14:13,040 --> 00:14:15,279
not only can i incorporate open source

281
00:14:15,279 --> 00:14:16,720
into my build not only can i

282
00:14:16,720 --> 00:14:19,279
containerize elements of my software not

283
00:14:19,279 --> 00:14:20,959
only can i provide micro service

284
00:14:20,959 --> 00:14:24,160
architectures but in fact what i can do

285
00:14:24,160 --> 00:14:27,519
is i can provide software defined

286
00:14:27,519 --> 00:14:28,959
applications through things like

287
00:14:28,959 --> 00:14:30,639
infrastructure's code

288
00:14:30,639 --> 00:14:33,040
through things like orchestration

289
00:14:33,040 --> 00:14:36,959
and i can create leverage out of those

290
00:14:36,959 --> 00:14:39,519
lego pieces

291
00:14:39,519 --> 00:14:42,079
that i've created architecturally

292
00:14:42,079 --> 00:14:45,120
code component wise container-wise

293
00:14:45,120 --> 00:14:48,160
network infrastructure-wise

294
00:14:48,160 --> 00:14:49,519
and so

295
00:14:49,519 --> 00:14:52,079
these last two pieces

296
00:14:52,079 --> 00:14:54,320
really challenge the technologies that

297
00:14:54,320 --> 00:14:56,880
we've used historically as well as the

298
00:14:56,880 --> 00:14:58,240
governance techniques we've used

299
00:14:58,240 --> 00:15:01,440
historically to drive security

300
00:15:01,440 --> 00:15:02,399
now

301
00:15:02,399 --> 00:15:05,440
digital transformation though hypey um

302
00:15:05,440 --> 00:15:07,040
is an interesting thing to pay attention

303
00:15:07,040 --> 00:15:09,600
to from a security perspective because

304
00:15:09,600 --> 00:15:11,519
this notion of self-service and

305
00:15:11,519 --> 00:15:12,639
outsourcing

306
00:15:12,639 --> 00:15:14,639
the notion of culture change the notion

307
00:15:14,639 --> 00:15:16,639
of automation the notion of an

308
00:15:16,639 --> 00:15:19,199
architectural paradigm shift

309
00:15:19,199 --> 00:15:20,959
as well as a desire to leverage and

310
00:15:20,959 --> 00:15:22,079
provide

311
00:15:22,079 --> 00:15:24,839
infrastructure as code and

312
00:15:24,839 --> 00:15:28,079
orchestration those five waves

313
00:15:28,079 --> 00:15:29,279
when

314
00:15:29,279 --> 00:15:31,120
taken together

315
00:15:31,120 --> 00:15:33,519
create a sea change

316
00:15:33,519 --> 00:15:35,920
just like the web did when we were all

317
00:15:35,920 --> 00:15:38,959
programming c and c plus plus

318
00:15:38,959 --> 00:15:41,440
and so paying attention to each of these

319
00:15:41,440 --> 00:15:42,959
five trends

320
00:15:42,959 --> 00:15:44,880
um we may be able to ignore them for a

321
00:15:44,880 --> 00:15:46,079
period of time

322
00:15:46,079 --> 00:15:47,920
looking at all five in concert and how

323
00:15:47,920 --> 00:15:50,240
they combine in a firm's organ

324
00:15:50,240 --> 00:15:52,240
digital transformation

325
00:15:52,240 --> 00:15:54,480
means that we can no longer ignore these

326
00:15:54,480 --> 00:15:56,000
imperatives and that security is going

327
00:15:56,000 --> 00:15:58,560
to have to address these challenges with

328
00:15:58,560 --> 00:16:00,399
subject matter expertise

329
00:16:00,399 --> 00:16:02,800
in in new technology stacks cadence

330
00:16:02,800 --> 00:16:04,000
stresses

331
00:16:04,000 --> 00:16:07,120
um as well as an overwhelming need to

332
00:16:07,120 --> 00:16:08,720
automate to the point of developer

333
00:16:08,720 --> 00:16:10,720
self-service

334
00:16:10,720 --> 00:16:11,600
now

335
00:16:11,600 --> 00:16:13,600
you've probably heard pieces of this

336
00:16:13,600 --> 00:16:16,800
puzzle over the last two or three years

337
00:16:16,800 --> 00:16:18,880
what i'm here to tell you is that the

338
00:16:18,880 --> 00:16:20,959
digital transformation

339
00:16:20,959 --> 00:16:24,240
train is leaving the station for larger

340
00:16:24,240 --> 00:16:25,759
and more mature development

341
00:16:25,759 --> 00:16:27,199
organizations

342
00:16:27,199 --> 00:16:28,959
we had the

343
00:16:28,959 --> 00:16:30,639
thought leaders in terms of netflix and

344
00:16:30,639 --> 00:16:32,800
amazon etsy

345
00:16:32,800 --> 00:16:35,440
others who have really made developer

346
00:16:35,440 --> 00:16:37,440
self-service

347
00:16:37,440 --> 00:16:38,880
their calling

348
00:16:38,880 --> 00:16:41,279
and you know you've seen

349
00:16:41,279 --> 00:16:42,639
those individuals from those

350
00:16:42,639 --> 00:16:44,480
organizations present at conferences

351
00:16:44,480 --> 00:16:46,720
like this showing how you can automate

352
00:16:46,720 --> 00:16:49,120
pieces of delivery automate pieces of

353
00:16:49,120 --> 00:16:51,279
security telemetry

354
00:16:51,279 --> 00:16:53,519
the average firm

355
00:16:53,519 --> 00:16:54,639
we are now

356
00:16:54,639 --> 00:16:56,560
engaging in the bsim study

357
00:16:56,560 --> 00:16:57,920
is

358
00:16:57,920 --> 00:17:00,480
got an aggressive digital transformation

359
00:17:00,480 --> 00:17:03,759
initiative and so these five

360
00:17:03,759 --> 00:17:05,280
imperatives are going to drive the

361
00:17:05,280 --> 00:17:08,559
average firm and so it's not just the

362
00:17:08,559 --> 00:17:11,359
pointy edge of the spear industry wide

363
00:17:11,359 --> 00:17:14,000
it's handling these problems this way

364
00:17:14,000 --> 00:17:18,760
it's the it's the the mass of the shaft

365
00:17:19,599 --> 00:17:21,039
continuing on this slide instead of

366
00:17:21,039 --> 00:17:22,880
jumping ahead there are some really

367
00:17:22,880 --> 00:17:24,400
interesting things happening in each of

368
00:17:24,400 --> 00:17:27,199
these categories that have added

369
00:17:27,199 --> 00:17:28,559
security

370
00:17:28,559 --> 00:17:31,440
to the behaviors of development it truly

371
00:17:31,440 --> 00:17:33,440
builds security in as opposed to waiting

372
00:17:33,440 --> 00:17:34,799
for them to create something and telling

373
00:17:34,799 --> 00:17:37,120
them the baby's ugly

374
00:17:37,120 --> 00:17:39,600
when you saw the transition from java to

375
00:17:39,600 --> 00:17:41,679
javascript when you look at languages

376
00:17:41,679 --> 00:17:44,480
like go rust and others

377
00:17:44,480 --> 00:17:46,880
the web development frameworks that are

378
00:17:46,880 --> 00:17:48,400
coming out in these more modern

379
00:17:48,400 --> 00:17:50,480
languages

380
00:17:50,480 --> 00:17:52,240
despite some of the language theoretic

381
00:17:52,240 --> 00:17:54,240
challenges of things like javascript the

382
00:17:54,240 --> 00:17:56,400
languages themselves like golang are

383
00:17:56,400 --> 00:17:58,640
thinking about security uh from the

384
00:17:58,640 --> 00:18:00,640
ground up and the web

385
00:18:00,640 --> 00:18:02,799
um application development frameworks

386
00:18:02,799 --> 00:18:04,240
are thinking about things like

387
00:18:04,240 --> 00:18:06,240
contextually aware output encoding

388
00:18:06,240 --> 00:18:09,039
password storage um

389
00:18:09,039 --> 00:18:12,000
authorization authentication in the box

390
00:18:12,000 --> 00:18:13,919
and they're providing

391
00:18:13,919 --> 00:18:16,160
primitives that developers can use

392
00:18:16,160 --> 00:18:17,360
effectively

393
00:18:17,360 --> 00:18:19,760
to um

394
00:18:19,760 --> 00:18:23,039
to build secure systems

395
00:18:23,039 --> 00:18:26,720
when you look at what's happening in sdl

396
00:18:26,720 --> 00:18:29,600
github and gitlab have robust

397
00:18:29,600 --> 00:18:31,120
and

398
00:18:31,120 --> 00:18:32,880
very

399
00:18:32,880 --> 00:18:34,559
thoughtful security frameworks and

400
00:18:34,559 --> 00:18:37,440
security manifestos built into the way

401
00:18:37,440 --> 00:18:40,880
that their pipeline products work

402
00:18:40,880 --> 00:18:43,760
and so what was security champions

403
00:18:43,760 --> 00:18:45,919
implementing vulnerability discovery

404
00:18:45,919 --> 00:18:48,640
tools in jenkins is now a very natural

405
00:18:48,640 --> 00:18:50,880
process uh with github and git lab

406
00:18:50,880 --> 00:18:53,360
pipelines um you know

407
00:18:53,360 --> 00:18:55,840
of either on and secure by default

408
00:18:55,840 --> 00:18:57,200
security tools

409
00:18:57,200 --> 00:18:59,760
or or

410
00:19:00,240 --> 00:19:03,520
or easily added ones

411
00:19:06,160 --> 00:19:07,919
what we're seeing as we move to the

412
00:19:07,919 --> 00:19:09,760
newer technologies things like

413
00:19:09,760 --> 00:19:12,240
containers things like um

414
00:19:12,240 --> 00:19:15,120
infrastructure's code

415
00:19:15,120 --> 00:19:17,440
you know is that our security tooling

416
00:19:17,440 --> 00:19:21,280
isn't as robust there um and so

417
00:19:21,280 --> 00:19:26,559
whereas we've got um you know

418
00:19:27,280 --> 00:19:28,320
great

419
00:19:28,320 --> 00:19:30,799
uh technologies um

420
00:19:30,799 --> 00:19:32,640
you know in in in web development

421
00:19:32,640 --> 00:19:34,559
frameworks we've got open source tools

422
00:19:34,559 --> 00:19:37,120
we've got built-in capabilities in sdl

423
00:19:37,120 --> 00:19:39,600
and marketplace

424
00:19:39,600 --> 00:19:41,600
we've got open source

425
00:19:41,600 --> 00:19:43,280
and cloud provided tools in terms of

426
00:19:43,280 --> 00:19:45,200
containers and orchestration

427
00:19:45,200 --> 00:19:47,039
we've got infrastructure scanning tools

428
00:19:47,039 --> 00:19:48,480
both commercial

429
00:19:48,480 --> 00:19:49,760
cloud-based

430
00:19:49,760 --> 00:19:52,960
as well as open source we've got this

431
00:19:52,960 --> 00:19:54,160
sort of

432
00:19:54,160 --> 00:19:56,000
miss in configuration management which

433
00:19:56,000 --> 00:19:57,600
we'll look at more

434
00:19:57,600 --> 00:20:00,399
as we proceed

435
00:20:03,679 --> 00:20:06,320
what does this mean as we study firms

436
00:20:06,320 --> 00:20:09,120
and we look at the difference between

437
00:20:09,120 --> 00:20:12,000
central security initiatives uh you know

438
00:20:12,000 --> 00:20:14,480
legacy application security and what

439
00:20:14,480 --> 00:20:16,640
engineering-led firms are doing

440
00:20:16,640 --> 00:20:18,720
or what just simply engineers are doing

441
00:20:18,720 --> 00:20:21,200
to build security in for themselves

442
00:20:21,200 --> 00:20:23,760
there is a generational gap

443
00:20:23,760 --> 00:20:25,120
emerging

444
00:20:25,120 --> 00:20:27,120
um what does that mean well

445
00:20:27,120 --> 00:20:30,080
looking at the blue line we see that you

446
00:20:30,080 --> 00:20:30,960
know

447
00:20:30,960 --> 00:20:31,679
and

448
00:20:31,679 --> 00:20:34,480
um you know this is this is a notional

449
00:20:34,480 --> 00:20:36,880
graph right um there's there's no axes

450
00:20:36,880 --> 00:20:40,000
uh or or sort of legend here but um you

451
00:20:40,000 --> 00:20:41,039
know

452
00:20:41,039 --> 00:20:43,280
ten years ago we were talking about

453
00:20:43,280 --> 00:20:46,400
um you know ci cd from a secu you know

454
00:20:46,400 --> 00:20:47,440
from a security and development

455
00:20:47,440 --> 00:20:49,679
perspective we started to talk about the

456
00:20:49,679 --> 00:20:51,200
impact of

457
00:20:51,200 --> 00:20:52,960
outsourcing to the cloud and the cloud

458
00:20:52,960 --> 00:20:55,200
service providers security controls uh

459
00:20:55,200 --> 00:20:56,720
well architected

460
00:20:56,720 --> 00:20:58,720
um you know building for cloud securely

461
00:20:58,720 --> 00:21:01,840
cloud native security container security

462
00:21:01,840 --> 00:21:03,840
what we've heard over the last year to

463
00:21:03,840 --> 00:21:05,679
three

464
00:21:05,679 --> 00:21:07,919
is

465
00:21:09,760 --> 00:21:13,280
as a development organization we want to

466
00:21:13,280 --> 00:21:16,240
take all of the things that we built to

467
00:21:16,240 --> 00:21:17,840
transfer our

468
00:21:17,840 --> 00:21:18,559
our

469
00:21:18,559 --> 00:21:20,880
applications to the cloud

470
00:21:20,880 --> 00:21:23,520
and we want to remove the manual effort

471
00:21:23,520 --> 00:21:24,640
from

472
00:21:24,640 --> 00:21:26,640
that delivery process

473
00:21:26,640 --> 00:21:29,440
we're going to aggressively go after

474
00:21:29,440 --> 00:21:32,159
replacing all of our sre's behaviors

475
00:21:32,159 --> 00:21:35,360
with infrastructure as code

476
00:21:35,360 --> 00:21:37,360
so what they did for build

477
00:21:37,360 --> 00:21:38,159
and

478
00:21:38,159 --> 00:21:41,840
delivery with ci cd we're now doing for

479
00:21:41,840 --> 00:21:44,000
delivery to the cloud and in fact

480
00:21:44,000 --> 00:21:45,360
provisioning

481
00:21:45,360 --> 00:21:47,120
of the cloud assets

482
00:21:47,120 --> 00:21:48,320
creation

483
00:21:48,320 --> 00:21:50,000
of the containers

484
00:21:50,000 --> 00:21:52,400
combination of the containers and

485
00:21:52,400 --> 00:21:55,039
you know weaving the the microservices

486
00:21:55,039 --> 00:21:57,840
into fabrics or meshes

487
00:21:57,840 --> 00:21:59,919
and what we've seen in the bsim study

488
00:21:59,919 --> 00:22:02,000
over the last two years is

489
00:22:02,000 --> 00:22:04,640
that development executives are saying

490
00:22:04,640 --> 00:22:06,400
it's not good enough

491
00:22:06,400 --> 00:22:09,200
to simply convert what we did in the

492
00:22:09,200 --> 00:22:13,600
past to infrastructure as code

493
00:22:13,600 --> 00:22:16,880
we have to be able to make the developer

494
00:22:16,880 --> 00:22:18,960
self-service in the ability to

495
00:22:18,960 --> 00:22:20,720
instantiate

496
00:22:20,720 --> 00:22:23,440
a delivery capability

497
00:22:23,440 --> 00:22:25,760
we want not only infrastructure's code

498
00:22:25,760 --> 00:22:28,320
we want pipeline as a service

499
00:22:28,320 --> 00:22:31,120
so if we decide that a new business line

500
00:22:31,120 --> 00:22:32,799
wants to stand up the capability to

501
00:22:32,799 --> 00:22:34,960
deliver a mobile app and a backing

502
00:22:34,960 --> 00:22:37,679
service we want pipeline as a service

503
00:22:37,679 --> 00:22:39,679
that the development team

504
00:22:39,679 --> 00:22:40,880
can snap their fingers and

505
00:22:40,880 --> 00:22:42,720
instantaneously have

506
00:22:42,720 --> 00:22:44,480
the delivery capability associated with

507
00:22:44,480 --> 00:22:45,520
that

508
00:22:45,520 --> 00:22:48,080
now when they do that

509
00:22:48,080 --> 00:22:49,679
they're adding all kinds of

510
00:22:49,679 --> 00:22:52,720
non-functional requirements to those

511
00:22:52,720 --> 00:22:54,960
pipelines

512
00:22:54,960 --> 00:22:56,960
you know when they're doing a good job

513
00:22:56,960 --> 00:22:59,039
they're adding uh unit testing they're

514
00:22:59,039 --> 00:23:00,320
adding integration testing they're

515
00:23:00,320 --> 00:23:02,559
adding linting for their their coding

516
00:23:02,559 --> 00:23:03,840
standards

517
00:23:03,840 --> 00:23:06,240
they may add

518
00:23:06,240 --> 00:23:08,159
you know chaos monkey or or other things

519
00:23:08,159 --> 00:23:10,559
that allow them to do uh availability

520
00:23:10,559 --> 00:23:12,480
testing or or or other kinds of

521
00:23:12,480 --> 00:23:15,600
non-functional requirements testing

522
00:23:15,600 --> 00:23:16,880
um

523
00:23:16,880 --> 00:23:18,960
of the five organizations with which i

524
00:23:18,960 --> 00:23:21,039
worked over the last 12 months

525
00:23:21,039 --> 00:23:23,520
intimately all of them

526
00:23:23,520 --> 00:23:26,559
were working on pipeline as a service

527
00:23:26,559 --> 00:23:28,640
across the board not just in the cloud

528
00:23:28,640 --> 00:23:29,600
teams not just in the digital

529
00:23:29,600 --> 00:23:31,120
transformation teams

530
00:23:31,120 --> 00:23:32,960
but across the board

531
00:23:32,960 --> 00:23:35,280
in fact at least three of those five

532
00:23:35,280 --> 00:23:36,480
were at a point

533
00:23:36,480 --> 00:23:38,159
where a team could be brought into

534
00:23:38,159 --> 00:23:40,240
existence and they could snap their

535
00:23:40,240 --> 00:23:42,000
fingers and create a delivery pipeline

536
00:23:42,000 --> 00:23:43,679
associated with the tech stack they

537
00:23:43,679 --> 00:23:45,360
wanted

538
00:23:45,360 --> 00:23:47,520
and get a lot of those capabilities that

539
00:23:47,520 --> 00:23:49,600
i just described for free and on by

540
00:23:49,600 --> 00:23:51,760
default

541
00:23:51,760 --> 00:23:54,480
now i spoke with a uh

542
00:23:54,480 --> 00:23:56,320
an executive who ran a security

543
00:23:56,320 --> 00:23:58,880
initiative just last week

544
00:23:58,880 --> 00:24:00,080
and

545
00:24:00,080 --> 00:24:01,600
this individual had just joined a new

546
00:24:01,600 --> 00:24:04,320
organization and said i need to be able

547
00:24:04,320 --> 00:24:06,320
to integrate you know three to five

548
00:24:06,320 --> 00:24:08,320
tools um

549
00:24:08,320 --> 00:24:11,039
with the cicd pipeline

550
00:24:11,039 --> 00:24:14,159
you know in the next nine months

551
00:24:14,159 --> 00:24:16,559
that's what we see in this red line here

552
00:24:16,559 --> 00:24:18,480
there's a big gap between what

553
00:24:18,480 --> 00:24:20,080
development executives are trying to do

554
00:24:20,080 --> 00:24:21,520
snap your fingers and get a delivery

555
00:24:21,520 --> 00:24:23,919
capability with on by default

556
00:24:23,919 --> 00:24:26,559
assurance capabilities and what security

557
00:24:26,559 --> 00:24:28,240
is still talking about how do we

558
00:24:28,240 --> 00:24:31,039
integrate with ci cd

559
00:24:31,039 --> 00:24:33,679
and as we look at that driver of

560
00:24:33,679 --> 00:24:36,480
self-service as we look at what

561
00:24:36,480 --> 00:24:38,559
a developer is able to do

562
00:24:38,559 --> 00:24:40,559
for themselves

563
00:24:40,559 --> 00:24:42,559
to generate

564
00:24:42,559 --> 00:24:44,559
integrate

565
00:24:44,559 --> 00:24:47,440
deliver and then operate applications

566
00:24:47,440 --> 00:24:49,200
if we're still at the point from a

567
00:24:49,200 --> 00:24:51,760
security group perspective

568
00:24:51,760 --> 00:24:54,799
where we're trying to convert manual

569
00:24:54,799 --> 00:24:58,000
um ci cd integrations

570
00:24:58,000 --> 00:25:00,400
to champion driven uh security

571
00:25:00,400 --> 00:25:02,240
integrations where we we you know we

572
00:25:02,240 --> 00:25:05,200
spin up a group um inside of our dev

573
00:25:05,200 --> 00:25:08,880
development uh population to do that um

574
00:25:08,880 --> 00:25:11,440
or we're beginning to ask the question

575
00:25:11,440 --> 00:25:12,840
what would it mean

576
00:25:12,840 --> 00:25:14,640
for

577
00:25:14,640 --> 00:25:17,039
security tools to be run

578
00:25:17,039 --> 00:25:19,360
by default when a new cicd pipeline is

579
00:25:19,360 --> 00:25:20,640
built

580
00:25:20,640 --> 00:25:22,720
we're a few generations behind

581
00:25:22,720 --> 00:25:24,480
because when we haven't begun to ask the

582
00:25:24,480 --> 00:25:25,520
question

583
00:25:25,520 --> 00:25:27,840
what are we going to do for

584
00:25:27,840 --> 00:25:29,360
the cloud configuration and all the

585
00:25:29,360 --> 00:25:30,720
instances being stood up all the

586
00:25:30,720 --> 00:25:32,720
containers and marketplace items being

587
00:25:32,720 --> 00:25:34,400
pulled down from the cloud service

588
00:25:34,400 --> 00:25:36,080
provider what are we going to do to look

589
00:25:36,080 --> 00:25:37,919
at all the infrastructure's code and all

590
00:25:37,919 --> 00:25:41,279
the automation associated with not only

591
00:25:41,279 --> 00:25:43,039
an infrastructure is code

592
00:25:43,039 --> 00:25:44,960
but in the pipelines that

593
00:25:44,960 --> 00:25:47,039
that is housed in and executed and that

594
00:25:47,039 --> 00:25:49,520
created

595
00:25:50,799 --> 00:25:52,880
developers have gotten to the point

596
00:25:52,880 --> 00:25:55,200
where they can self-service i.t

597
00:25:55,200 --> 00:25:56,960
self-service major enterprise

598
00:25:56,960 --> 00:25:58,640
applications like

599
00:25:58,640 --> 00:26:00,480
rds directory

600
00:26:00,480 --> 00:26:03,840
authentication mfa

601
00:26:04,080 --> 00:26:05,679
postgres

602
00:26:05,679 --> 00:26:08,400
in fact their pipelines

603
00:26:08,400 --> 00:26:10,240
not just their build pipelines but their

604
00:26:10,240 --> 00:26:12,080
full delivery pipelines

605
00:26:12,080 --> 00:26:13,919
and in security

606
00:26:13,919 --> 00:26:15,360
we're still wondering how to integrate

607
00:26:15,360 --> 00:26:16,720
with cicd

608
00:26:16,720 --> 00:26:18,880
so if your organization if you are still

609
00:26:18,880 --> 00:26:21,279
trying to solve that problem

610
00:26:21,279 --> 00:26:23,840
the developer's ability to deliver

611
00:26:23,840 --> 00:26:27,120
is going to exponentially outpace

612
00:26:27,120 --> 00:26:29,440
your ability to govern

613
00:26:29,440 --> 00:26:30,720
and so

614
00:26:30,720 --> 00:26:35,520
this is the gap that we have to tackle

615
00:26:37,279 --> 00:26:38,400
now

616
00:26:38,400 --> 00:26:40,720
when i speak with a lot of security

617
00:26:40,720 --> 00:26:42,880
owners ssg owners

618
00:26:42,880 --> 00:26:45,360
they complain about the the myriad of

619
00:26:45,360 --> 00:26:47,440
technologies that their developers are

620
00:26:47,440 --> 00:26:48,400
using

621
00:26:48,400 --> 00:26:49,919
in order to get this level of

622
00:26:49,919 --> 00:26:51,679
self-service

623
00:26:51,679 --> 00:26:54,000
they may have a handle on maven they may

624
00:26:54,000 --> 00:26:56,799
have begun to get a handle on kubernetes

625
00:26:56,799 --> 00:26:58,159
but they may be struggling to figure out

626
00:26:58,159 --> 00:27:00,480
what to do about things like terraform

627
00:27:00,480 --> 00:27:02,000
and some of the other technologies this

628
00:27:02,000 --> 00:27:03,760
dio helm

629
00:27:03,760 --> 00:27:05,520
ansible and chef why did these things

630
00:27:05,520 --> 00:27:07,840
exist

631
00:27:08,720 --> 00:27:10,480
increasingly if engineering is going to

632
00:27:10,480 --> 00:27:12,559
be self-service

633
00:27:12,559 --> 00:27:14,880
building pipelines as code building

634
00:27:14,880 --> 00:27:18,240
infrastructure is code

635
00:27:19,600 --> 00:27:23,039
more software is more complexity

636
00:27:23,039 --> 00:27:25,039
these technologies have something in

637
00:27:25,039 --> 00:27:25,919
common

638
00:27:25,919 --> 00:27:28,559
they render the operating layer at which

639
00:27:28,559 --> 00:27:29,360
they

640
00:27:29,360 --> 00:27:30,880
function

641
00:27:30,880 --> 00:27:32,799
configurable by something like json

642
00:27:32,799 --> 00:27:35,600
reamble so

643
00:27:35,600 --> 00:27:37,440
you know when you look at a technology

644
00:27:37,440 --> 00:27:40,159
like terraform what you're enabling or

645
00:27:40,159 --> 00:27:41,760
you know engineers to do

646
00:27:41,760 --> 00:27:44,320
is consistently generate instances and

647
00:27:44,320 --> 00:27:46,320
topology to connect those instances or

648
00:27:46,320 --> 00:27:48,960
house it with configuration

649
00:27:48,960 --> 00:27:50,559
if you think about maven you're

650
00:27:50,559 --> 00:27:52,559
rendering the dependencies in the build

651
00:27:52,559 --> 00:27:54,960
in your environment

652
00:27:54,960 --> 00:27:57,039
configuration when you think about

653
00:27:57,039 --> 00:27:59,440
kubernetes you're taking

654
00:27:59,440 --> 00:28:01,760
a bazooka to the challenge of how you

655
00:28:01,760 --> 00:28:04,159
combine these components in into an

656
00:28:04,159 --> 00:28:05,360
application

657
00:28:05,360 --> 00:28:08,080
and and run them in a cluster uh uh you

658
00:28:08,080 --> 00:28:11,120
know or on virtualized hardware

659
00:28:11,120 --> 00:28:14,000
and manage the choices you have there

660
00:28:14,000 --> 00:28:15,760
istio and helm

661
00:28:15,760 --> 00:28:17,600
are they just like kubernetes no they're

662
00:28:17,600 --> 00:28:19,279
an orchestration layer that layers on

663
00:28:19,279 --> 00:28:22,480
top of it and that that that allows

664
00:28:22,480 --> 00:28:24,799
configuration to drive more complex

665
00:28:24,799 --> 00:28:26,240
relationships

666
00:28:26,240 --> 00:28:28,799
um or you know service level agreements

667
00:28:28,799 --> 00:28:30,399
between those components whether it be

668
00:28:30,399 --> 00:28:32,480
encryption east to west

669
00:28:32,480 --> 00:28:33,840
whether it be

670
00:28:33,840 --> 00:28:36,640
resource usage whether it be

671
00:28:36,640 --> 00:28:38,720
you know the way they connect and how

672
00:28:38,720 --> 00:28:40,559
they discover each other

673
00:28:40,559 --> 00:28:42,559
ansible chef and puppet many people are

674
00:28:42,559 --> 00:28:44,559
familiar with these things at least

675
00:28:44,559 --> 00:28:47,039
notionally these are technologies that

676
00:28:47,039 --> 00:28:49,520
render into configuration all of the

677
00:28:49,520 --> 00:28:51,039
different things you're going to forget

678
00:28:51,039 --> 00:28:52,880
to do to set that

679
00:28:52,880 --> 00:28:55,360
postgres server up or to set that nginx

680
00:28:55,360 --> 00:28:58,000
server up correctly with the application

681
00:28:58,000 --> 00:28:59,360
you want to run

682
00:28:59,360 --> 00:29:00,640
and make sure that everything is going

683
00:29:00,640 --> 00:29:01,600
to

684
00:29:01,600 --> 00:29:04,159
you know function

685
00:29:04,159 --> 00:29:06,159
you know the way you expect it to

686
00:29:06,159 --> 00:29:08,320
converting all of the operator

687
00:29:08,320 --> 00:29:10,000
packager

688
00:29:10,000 --> 00:29:11,440
deliverer

689
00:29:11,440 --> 00:29:13,600
steps to to to not just script but

690
00:29:13,600 --> 00:29:16,080
config

691
00:29:19,760 --> 00:29:21,760
we'll get we'll get into

692
00:29:21,760 --> 00:29:24,080
these technologies

693
00:29:24,080 --> 00:29:26,080
because they're controlling the things i

694
00:29:26,080 --> 00:29:29,279
just described have an outsized

695
00:29:29,279 --> 00:29:31,679
impact on what

696
00:29:31,679 --> 00:29:33,679
the security posture of the resulting

697
00:29:33,679 --> 00:29:36,240
service measure application looks like

698
00:29:36,240 --> 00:29:38,880
so naturally we ask the question

699
00:29:38,880 --> 00:29:41,440
what security stan scanners

700
00:29:41,440 --> 00:29:44,320
can we run on this configuration to see

701
00:29:44,320 --> 00:29:46,640
if we've got ssl rights see if we've got

702
00:29:46,640 --> 00:29:48,880
the encryption right to see if we've got

703
00:29:48,880 --> 00:29:51,200
identity right to see if we've got trust

704
00:29:51,200 --> 00:29:52,080
rate

705
00:29:52,080 --> 00:29:54,880
the answer is unfortunately not much

706
00:29:54,880 --> 00:29:56,640
with the exception of the flagship

707
00:29:56,640 --> 00:29:59,679
product um dependency tracker depends um

708
00:29:59,679 --> 00:30:02,399
that comes out of owasp um you know in

709
00:30:02,399 --> 00:30:04,480
composition analysis for those

710
00:30:04,480 --> 00:30:06,240
dependencies which ultimately end up in

711
00:30:06,240 --> 00:30:08,320
the containers we don't have a lot of

712
00:30:08,320 --> 00:30:11,200
weapons to bring to this battle

713
00:30:11,200 --> 00:30:12,799
even though

714
00:30:12,799 --> 00:30:15,039
these technologies are using

715
00:30:15,039 --> 00:30:16,960
or are gaining

716
00:30:16,960 --> 00:30:18,559
traction laurie williams just did a

717
00:30:18,559 --> 00:30:19,919
study

718
00:30:19,919 --> 00:30:20,840
on

719
00:30:20,840 --> 00:30:23,360
github in terms of the publicly

720
00:30:23,360 --> 00:30:25,120
available repos

721
00:30:25,120 --> 00:30:27,200
she and her team believed that

722
00:30:27,200 --> 00:30:29,039
infrastructure is code

723
00:30:29,039 --> 00:30:30,960
and the material associated with this

724
00:30:30,960 --> 00:30:33,039
these technologies in these slides may

725
00:30:33,039 --> 00:30:35,840
account for between six and eleven

726
00:30:35,840 --> 00:30:38,399
of the the public code base

727
00:30:38,399 --> 00:30:40,960
i think that number's probably low

728
00:30:40,960 --> 00:30:42,799
in your organization if your

729
00:30:42,799 --> 00:30:44,559
organization has committed to digital

730
00:30:44,559 --> 00:30:45,840
transformation

731
00:30:45,840 --> 00:30:47,919
based on what i've measured it makes

732
00:30:47,919 --> 00:30:49,600
sense that maybe

733
00:30:49,600 --> 00:30:51,600
publicly available open source you know

734
00:30:51,600 --> 00:30:53,840
um

735
00:30:54,080 --> 00:30:56,000
technologies may not have

736
00:30:56,000 --> 00:30:57,440
necessarily

737
00:30:57,440 --> 00:31:00,000
um you know taken the sort of paid time

738
00:31:00,000 --> 00:31:02,320
to to do as much conversion as as maybe

739
00:31:02,320 --> 00:31:04,880
an organization has the second thing

740
00:31:04,880 --> 00:31:07,279
that that study showed was that

741
00:31:07,279 --> 00:31:10,960
30 percent at like 29 of the churn on a

742
00:31:10,960 --> 00:31:12,559
monthly basis

743
00:31:12,559 --> 00:31:13,760
for

744
00:31:13,760 --> 00:31:14,559
the

745
00:31:14,559 --> 00:31:17,120
uh code bases that are checked in is

746
00:31:17,120 --> 00:31:20,000
this infrastructure's code

747
00:31:20,000 --> 00:31:22,399
so when we think about software security

748
00:31:22,399 --> 00:31:23,919
and we think about

749
00:31:23,919 --> 00:31:25,200
looking at

750
00:31:25,200 --> 00:31:27,279
where the technologies have the outsize

751
00:31:27,279 --> 00:31:29,519
impact on a security posture

752
00:31:29,519 --> 00:31:30,840
we have to think about these

753
00:31:30,840 --> 00:31:32,960
technologies and yet when we go out to

754
00:31:32,960 --> 00:31:35,200
buy our vulnerability discovery tools

755
00:31:35,200 --> 00:31:38,240
these things are not supported

756
00:31:38,240 --> 00:31:39,600
we see go

757
00:31:39,600 --> 00:31:41,919
we see swift support we see all kinds of

758
00:31:41,919 --> 00:31:44,000
different things we don't see ansible we

759
00:31:44,000 --> 00:31:47,200
don't see terraform

760
00:31:47,200 --> 00:31:50,399
what can be done today

761
00:31:50,399 --> 00:31:52,000
well

762
00:31:52,000 --> 00:31:53,679
software defined everything means more

763
00:31:53,679 --> 00:31:56,159
software and from an engineering

764
00:31:56,159 --> 00:31:57,919
perspective

765
00:31:57,919 --> 00:32:00,240
engineers are picking again languages

766
00:32:00,240 --> 00:32:04,399
and frameworks to do a better job

767
00:32:05,600 --> 00:32:07,440
bringing some of those security features

768
00:32:07,440 --> 00:32:09,760
we've asked for in threat models

769
00:32:09,760 --> 00:32:12,000
and we've found vulnerabilities with our

770
00:32:12,000 --> 00:32:14,960
scanners in for years

771
00:32:14,960 --> 00:32:17,840
looking at a modern recent version of

772
00:32:17,840 --> 00:32:20,399
django or even flask

773
00:32:20,399 --> 00:32:22,640
looking at golang web development

774
00:32:22,640 --> 00:32:23,760
looking at

775
00:32:23,760 --> 00:32:26,080
what the javascript ecosystem provides

776
00:32:26,080 --> 00:32:27,600
you again

777
00:32:27,600 --> 00:32:28,960
you're going to get contextually aware

778
00:32:28,960 --> 00:32:30,960
output code encoding

779
00:32:30,960 --> 00:32:32,480
for free

780
00:32:32,480 --> 00:32:34,399
almost all of those frameworks that i

781
00:32:34,399 --> 00:32:37,360
mentioned store passwords with a

782
00:32:37,360 --> 00:32:40,559
adaptive one-way cryptographic

783
00:32:40,559 --> 00:32:41,519
function

784
00:32:41,519 --> 00:32:44,399
as opposed to with just a hash

785
00:32:44,399 --> 00:32:46,159
many of those technologies flask

786
00:32:46,159 --> 00:32:48,480
accepted provide an authentication

787
00:32:48,480 --> 00:32:51,679
framework flask you can download one

788
00:32:51,679 --> 00:32:53,279
many of them provide an authorization

789
00:32:53,279 --> 00:32:54,960
framework behind their authentication

790
00:32:54,960 --> 00:32:57,200
framework

791
00:32:57,200 --> 00:32:59,919
encryption libraries and so on and so on

792
00:32:59,919 --> 00:33:03,039
so the dream of a sappy is kind of dead

793
00:33:03,039 --> 00:33:04,960
but the dream of

794
00:33:04,960 --> 00:33:07,200
the concept of having security

795
00:33:07,200 --> 00:33:09,360
primitives baked into a framework which

796
00:33:09,360 --> 00:33:11,679
developers can then leverage is very

797
00:33:11,679 --> 00:33:13,519
much alive and these framework

798
00:33:13,519 --> 00:33:15,919
maintainers have done a frankly great

799
00:33:15,919 --> 00:33:18,000
job of making sure that these

800
00:33:18,000 --> 00:33:20,640
technologies exist

801
00:33:20,640 --> 00:33:22,720
and they're on by default where it's not

802
00:33:22,720 --> 00:33:25,360
too painful so

803
00:33:25,360 --> 00:33:27,039
um

804
00:33:27,039 --> 00:33:30,080
you know upgrading to languages into web

805
00:33:30,080 --> 00:33:31,600
or mobile development frameworks that

806
00:33:31,600 --> 00:33:34,000
are modern gives you a huge leg up on

807
00:33:34,000 --> 00:33:36,000
the oau's top three class of

808
00:33:36,000 --> 00:33:38,159
vulnerabilities the sql injections the

809
00:33:38,159 --> 00:33:39,440
cross-site scriptings the cross-site

810
00:33:39,440 --> 00:33:42,000
request forgeries uh and what i've found

811
00:33:42,000 --> 00:33:44,480
historically in my career have been um

812
00:33:44,480 --> 00:33:45,919
you know a key class of top three

813
00:33:45,919 --> 00:33:47,440
vulnerabilities um failure to demand

814
00:33:47,440 --> 00:33:49,919
authentication or or or authenticating

815
00:33:49,919 --> 00:33:52,559
but not authorizing correct use before

816
00:33:52,559 --> 00:33:54,320
dispatching a privileged action or

817
00:33:54,320 --> 00:33:55,840
entity

818
00:33:55,840 --> 00:33:57,679
moving to these technologies is going to

819
00:33:57,679 --> 00:34:00,080
help us

820
00:34:01,200 --> 00:34:03,840
we need to do the same thing

821
00:34:03,840 --> 00:34:05,600
when we think about

822
00:34:05,600 --> 00:34:07,440
the recipes

823
00:34:07,440 --> 00:34:11,119
the code snippets um the config snippets

824
00:34:11,119 --> 00:34:13,599
the the the the templates of

825
00:34:13,599 --> 00:34:15,760
configuration that define our

826
00:34:15,760 --> 00:34:17,520
infrastructure

827
00:34:17,520 --> 00:34:19,199
and that define the manipulation or the

828
00:34:19,199 --> 00:34:21,679
orchestration of our infrastructure

829
00:34:21,679 --> 00:34:24,159
as well

830
00:34:25,199 --> 00:34:27,918
right now there are you know

831
00:34:27,918 --> 00:34:29,040
you know

832
00:34:29,040 --> 00:34:31,040
what developers are doing

833
00:34:31,040 --> 00:34:33,679
is they're cut and pasting

834
00:34:33,679 --> 00:34:35,760
either terraform scripts or cloud

835
00:34:35,760 --> 00:34:38,079
formation templates or or whatever

836
00:34:38,079 --> 00:34:39,520
they're using

837
00:34:39,520 --> 00:34:41,359
and

838
00:34:41,359 --> 00:34:43,599
that reuse is exceptional however that

839
00:34:43,599 --> 00:34:45,918
reuses a double-edged sword

840
00:34:45,918 --> 00:34:47,520
to the extent that the snippet of

841
00:34:47,520 --> 00:34:50,320
configuration that they've built

842
00:34:50,320 --> 00:34:52,079
is secure

843
00:34:52,079 --> 00:34:54,719
then we're getting leverage out of it to

844
00:34:54,719 --> 00:34:56,879
the extent that it's insecure

845
00:34:56,879 --> 00:34:58,480
what we have

846
00:34:58,480 --> 00:35:00,720
is a scenario where

847
00:35:00,720 --> 00:35:02,480
the leverage they're able to get out of

848
00:35:02,480 --> 00:35:03,680
this infrastructure's code and

849
00:35:03,680 --> 00:35:05,040
configuration

850
00:35:05,040 --> 00:35:07,359
means that they're going to replicate

851
00:35:07,359 --> 00:35:08,800
the vulnerability throughout their

852
00:35:08,800 --> 00:35:10,000
organization

853
00:35:10,000 --> 00:35:13,480
much more extensively

854
00:35:19,839 --> 00:35:23,200
the first thing we can do beyond moving

855
00:35:23,200 --> 00:35:25,680
to these modern frameworks is

856
00:35:25,680 --> 00:35:28,240
to leverage the open source scanning

857
00:35:28,240 --> 00:35:31,680
software that's out there to make sure

858
00:35:31,680 --> 00:35:33,839
that when developers

859
00:35:33,839 --> 00:35:35,359
use these

860
00:35:35,359 --> 00:35:38,160
more effective more secure frameworks

861
00:35:38,160 --> 00:35:39,839
that they're

862
00:35:39,839 --> 00:35:41,440
using the security controls everywhere

863
00:35:41,440 --> 00:35:43,200
they need to that they're not turning

864
00:35:43,200 --> 00:35:45,760
off the secure defaults that where there

865
00:35:45,760 --> 00:35:48,320
aren't default behaviors like

866
00:35:48,320 --> 00:35:50,079
um session management is one where you

867
00:35:50,079 --> 00:35:52,560
really have to tweak and twiddle uh ssl

868
00:35:52,560 --> 00:35:53,599
use is another one where you have to

869
00:35:53,599 --> 00:35:55,280
tweak and twiddle the frameworks and the

870
00:35:55,280 --> 00:35:57,920
defaults may not be secure

871
00:35:57,920 --> 00:35:59,200
using

872
00:35:59,200 --> 00:36:02,000
these freely available scanners

873
00:36:02,000 --> 00:36:04,000
you can very easily write good enough

874
00:36:04,000 --> 00:36:05,520
checks because it's you're just scanning

875
00:36:05,520 --> 00:36:07,680
configuration to figure out if the

876
00:36:07,680 --> 00:36:09,599
developer has invalidated a secure

877
00:36:09,599 --> 00:36:12,000
default or actually upgrade the default

878
00:36:12,000 --> 00:36:14,160
to something that is secure

879
00:36:14,160 --> 00:36:15,760
um semi-graph is something that's been

880
00:36:15,760 --> 00:36:18,000
talked about by um

881
00:36:18,000 --> 00:36:21,440
clint in oasp um sonar cube is is a

882
00:36:21,440 --> 00:36:23,680
widely available open source tool and

883
00:36:23,680 --> 00:36:24,960
and of course with the microsoft

884
00:36:24,960 --> 00:36:26,880
acquisition of semel

885
00:36:26,880 --> 00:36:28,640
you know there's there's a more powerful

886
00:36:28,640 --> 00:36:30,560
abstract interpretation engine that you

887
00:36:30,560 --> 00:36:32,960
can use to do fancier things you don't

888
00:36:32,960 --> 00:36:35,599
need to be fancy glorified grab semantic

889
00:36:35,599 --> 00:36:37,599
grep is sufficient to make sure that

890
00:36:37,599 --> 00:36:39,599
these config checks

891
00:36:39,599 --> 00:36:42,079
get done what you need to be done

892
00:36:42,079 --> 00:36:44,720
go through the os top three

893
00:36:44,720 --> 00:36:46,880
go through the framework documentation a

894
00:36:46,880 --> 00:36:48,240
lot of the framework maintainers

895
00:36:48,240 --> 00:36:49,520
describe what you need to do for

896
00:36:49,520 --> 00:36:51,119
security

897
00:36:51,119 --> 00:36:54,400
and make sure you have checks

898
00:36:54,400 --> 00:36:57,119
implement those checks

899
00:36:57,119 --> 00:36:59,440
in whatever

900
00:36:59,440 --> 00:37:02,560
think about this in terms of get offs

901
00:37:02,560 --> 00:37:04,160
whether you want to mandate it on

902
00:37:04,160 --> 00:37:05,599
check-in whether you want to do it

903
00:37:05,599 --> 00:37:06,880
asynchronously and generate pull

904
00:37:06,880 --> 00:37:09,680
requests for the developers your culture

905
00:37:09,680 --> 00:37:11,839
in your organization will need you to

906
00:37:11,839 --> 00:37:15,200
tune how you apply these checks

907
00:37:15,200 --> 00:37:17,760
to your tolerances

908
00:37:17,760 --> 00:37:18,800
but

909
00:37:18,800 --> 00:37:20,800
what i'm saying is that

910
00:37:20,800 --> 00:37:22,640
the underlying primitives provided by

911
00:37:22,640 --> 00:37:24,880
the frameworks are good

912
00:37:24,880 --> 00:37:27,760
and your ability as a security champion

913
00:37:27,760 --> 00:37:30,720
or you know a security group um you know

914
00:37:30,720 --> 00:37:33,119
participant is to use these freely

915
00:37:33,119 --> 00:37:34,800
available tools to make sure that the

916
00:37:34,800 --> 00:37:37,680
right thing gets done

917
00:37:37,680 --> 00:37:38,720
now

918
00:37:38,720 --> 00:37:41,599
we have to build on top of

919
00:37:41,599 --> 00:37:43,760
a secure base in addition to the code we

920
00:37:43,760 --> 00:37:44,640
write

921
00:37:44,640 --> 00:37:47,680
so we of course want to use dependency

922
00:37:47,680 --> 00:37:50,320
tracker the pandabot to make sure that

923
00:37:50,320 --> 00:37:52,960
our use of open source um

924
00:37:52,960 --> 00:37:53,920
you know

925
00:37:53,920 --> 00:37:56,480
is in fact secure we we all you know

926
00:37:56,480 --> 00:37:58,079
we've all focused on composition

927
00:37:58,079 --> 00:38:00,160
analysis here for you know the last

928
00:38:00,160 --> 00:38:01,440
three to five years i'm not going to dig

929
00:38:01,440 --> 00:38:03,280
into that in detail again we have no

930
00:38:03,280 --> 00:38:04,079
wasp

931
00:38:04,079 --> 00:38:06,320
flagship product that

932
00:38:06,320 --> 00:38:08,840
makes a ton of sense to use there

933
00:38:08,840 --> 00:38:10,720
[Music]

934
00:38:10,720 --> 00:38:12,320
some organizations are going to are

935
00:38:12,320 --> 00:38:14,480
going to really plump towards the auto

936
00:38:14,480 --> 00:38:17,040
fix and the pull requests

937
00:38:17,040 --> 00:38:18,240
you know others are just going to want

938
00:38:18,240 --> 00:38:20,079
the scan data and want the engineers to

939
00:38:20,079 --> 00:38:21,520
handle that

940
00:38:21,520 --> 00:38:23,440
again culturally you know make the fit

941
00:38:23,440 --> 00:38:26,160
that works for you

942
00:38:26,640 --> 00:38:28,800
use these technologies the amazon well

943
00:38:28,800 --> 00:38:31,599
architected tool

944
00:38:31,599 --> 00:38:34,160
is something we want to add to this so

945
00:38:34,160 --> 00:38:37,680
containers are like legos

946
00:38:38,400 --> 00:38:41,119
there are security responsibilities um

947
00:38:41,119 --> 00:38:43,520
security apis

948
00:38:43,520 --> 00:38:45,599
there are configuration

949
00:38:45,599 --> 00:38:47,119
demands

950
00:38:47,119 --> 00:38:49,200
on the way we build and provision our

951
00:38:49,200 --> 00:38:50,480
architecture

952
00:38:50,480 --> 00:38:52,160
using something like the amazon well

953
00:38:52,160 --> 00:38:54,000
architected tool

954
00:38:54,000 --> 00:38:55,920
if you use aws

955
00:38:55,920 --> 00:38:58,000
is a means by which you can secure not

956
00:38:58,000 --> 00:38:59,760
only the open source base on which you

957
00:38:59,760 --> 00:39:01,520
build but you know the top logical and

958
00:39:01,520 --> 00:39:03,680
infrastructure based on which you build

959
00:39:03,680 --> 00:39:06,160
as well

960
00:39:08,320 --> 00:39:10,000
finally

961
00:39:10,000 --> 00:39:11,520
you can apply

962
00:39:11,520 --> 00:39:14,800
either a cloud specific

963
00:39:14,800 --> 00:39:16,240
or a

964
00:39:16,240 --> 00:39:18,400
or a multi-cloud like a scout solution

965
00:39:18,400 --> 00:39:20,000
to

966
00:39:20,000 --> 00:39:21,760
scanning the infrastructure's code

967
00:39:21,760 --> 00:39:24,560
configuration

968
00:39:25,920 --> 00:39:27,280
to make sure that you're not doing

969
00:39:27,280 --> 00:39:29,359
something like exceptionally over broad

970
00:39:29,359 --> 00:39:31,680
permissions in in your perimeter or you

971
00:39:31,680 --> 00:39:34,400
know putting um storage storage uh

972
00:39:34,400 --> 00:39:36,560
persistent storage or queuing out there

973
00:39:36,560 --> 00:39:38,400
um that um

974
00:39:38,400 --> 00:39:39,599
it doesn't have permissions on it

975
00:39:39,599 --> 00:39:40,800
doesn't have authorization checks on it

976
00:39:40,800 --> 00:39:43,040
or that isn't encrypted

977
00:39:43,040 --> 00:39:43,920
now

978
00:39:43,920 --> 00:39:46,880
the challenge that you'll face building

979
00:39:46,880 --> 00:39:50,320
a security program around

980
00:39:51,280 --> 00:39:53,599
these tools

981
00:39:53,599 --> 00:39:56,640
in the code side you may get as much

982
00:39:56,640 --> 00:39:58,880
with modern frameworks as 80 percent or

983
00:39:58,880 --> 00:39:59,760
more

984
00:39:59,760 --> 00:40:01,040
effectiveness

985
00:40:01,040 --> 00:40:02,480
with these open source tools as a

986
00:40:02,480 --> 00:40:03,760
commercial tool

987
00:40:03,760 --> 00:40:06,640
based on my experience with dependapot

988
00:40:06,640 --> 00:40:10,079
and while architected you'll get again a

989
00:40:10,079 --> 00:40:11,839
robust performance out of the open

990
00:40:11,839 --> 00:40:15,040
source that you can build a program on

991
00:40:15,040 --> 00:40:16,560
mileage may vary

992
00:40:16,560 --> 00:40:18,480
but these are good tools now as we move

993
00:40:18,480 --> 00:40:21,359
over to infrastructure

994
00:40:21,359 --> 00:40:22,720
there isn't

995
00:40:22,720 --> 00:40:24,480
a cloud top 10

996
00:40:24,480 --> 00:40:27,520
per se there's um

997
00:40:28,319 --> 00:40:31,040
cis benchmark and other things

998
00:40:31,040 --> 00:40:32,720
but there's sort of that's not bottomed

999
00:40:32,720 --> 00:40:33,839
out

1000
00:40:33,839 --> 00:40:35,680
with the maturity of the oauth you know

1001
00:40:35,680 --> 00:40:37,599
apsec top ten

1002
00:40:37,599 --> 00:40:40,160
when i look at the rules inside of both

1003
00:40:40,160 --> 00:40:41,839
the cloud specific and and the

1004
00:40:41,839 --> 00:40:45,200
multi-cloud tools here

1005
00:40:45,760 --> 00:40:48,800
the ip is really sparse

1006
00:40:48,800 --> 00:40:51,760
so you'll get the lowest hanging fruit

1007
00:40:51,760 --> 00:40:52,720
but

1008
00:40:52,720 --> 00:40:55,359
you're going to need to augment these

1009
00:40:55,359 --> 00:40:59,598
tools inside of your organization with

1010
00:40:59,680 --> 00:41:01,119
more checks

1011
00:41:01,119 --> 00:41:03,520
that drive to your standards for

1012
00:41:03,520 --> 00:41:07,119
securing and harding this infrastructure

1013
00:41:07,119 --> 00:41:08,960
and

1014
00:41:08,960 --> 00:41:10,800
something there isn't a good open source

1015
00:41:10,800 --> 00:41:12,079
check for

1016
00:41:12,079 --> 00:41:13,359
is

1017
00:41:13,359 --> 00:41:15,760
the configuration management

1018
00:41:15,760 --> 00:41:19,760
so it's much easier to scan somebody's

1019
00:41:19,760 --> 00:41:20,720
you know

1020
00:41:20,720 --> 00:41:22,480
amazon config

1021
00:41:22,480 --> 00:41:24,480
than it is to scan their ansible or

1022
00:41:24,480 --> 00:41:26,000
their terraform

1023
00:41:26,000 --> 00:41:27,200
um

1024
00:41:27,200 --> 00:41:29,760
or their you know even their helm charts

1025
00:41:29,760 --> 00:41:34,720
and um evaluate those for security why

1026
00:41:34,720 --> 00:41:37,680
well because the definition of an ec2

1027
00:41:37,680 --> 00:41:39,920
instance or something similar in

1028
00:41:39,920 --> 00:41:43,839
um you know the cloud configuration

1029
00:41:44,800 --> 00:41:46,400
has

1030
00:41:46,400 --> 00:41:48,480
really simple

1031
00:41:48,480 --> 00:41:50,400
edges and really simple properties it's

1032
00:41:50,400 --> 00:41:52,720
a bucket it's encrypted

1033
00:41:52,720 --> 00:41:54,400
because the configuration management

1034
00:41:54,400 --> 00:41:55,520
tools

1035
00:41:55,520 --> 00:41:58,319
can actually act on these entities glue

1036
00:41:58,319 --> 00:42:01,040
them together change their behaviors you

1037
00:42:01,040 --> 00:42:02,640
have to model a bit

1038
00:42:02,640 --> 00:42:05,520
of what they're doing in order to get a

1039
00:42:05,520 --> 00:42:08,160
security scanner to work there

1040
00:42:08,160 --> 00:42:09,760
there are some commercial tools and

1041
00:42:09,760 --> 00:42:11,760
we'll talk about that a bit more

1042
00:42:11,760 --> 00:42:12,880
later

1043
00:42:12,880 --> 00:42:15,280
but but this configuration management is

1044
00:42:15,280 --> 00:42:16,800
a huge gap

1045
00:42:16,800 --> 00:42:18,400
in the vulnerability discovery space

1046
00:42:18,400 --> 00:42:20,079
right now

1047
00:42:20,079 --> 00:42:23,280
and the reason is because

1048
00:42:23,760 --> 00:42:26,640
frankly it's harder

1049
00:42:27,359 --> 00:42:28,960
and i don't think people are are really

1050
00:42:28,960 --> 00:42:30,319
aware

1051
00:42:30,319 --> 00:42:33,200
of the outside impact on on on posture

1052
00:42:33,200 --> 00:42:35,759
that this has

1053
00:42:35,839 --> 00:42:36,560
so

1054
00:42:36,560 --> 00:42:38,480
we need to focus on this problem we've

1055
00:42:38,480 --> 00:42:40,400
all got a pretty good handle on things

1056
00:42:40,400 --> 00:42:42,480
like sas sca and das other people are

1057
00:42:42,480 --> 00:42:44,880
using things like i asked

1058
00:42:44,880 --> 00:42:46,560
all of that is fine

1059
00:42:46,560 --> 00:42:47,920
we've taken our

1060
00:42:47,920 --> 00:42:49,520
our secure coding standards and we've

1061
00:42:49,520 --> 00:42:50,880
converted them into vulnerability

1062
00:42:50,880 --> 00:42:52,000
discovery

1063
00:42:52,000 --> 00:42:54,400
remediation practices and training

1064
00:42:54,400 --> 00:42:57,280
around those legacy technologies

1065
00:42:57,280 --> 00:42:58,720
in my mind

1066
00:42:58,720 --> 00:43:01,040
we really need to focus

1067
00:43:01,040 --> 00:43:03,440
on figuring out

1068
00:43:03,440 --> 00:43:05,920
how to take the things we talked about

1069
00:43:05,920 --> 00:43:07,359
in terms of coding standards don't call

1070
00:43:07,359 --> 00:43:08,960
this function call this function every

1071
00:43:08,960 --> 00:43:11,359
time before you do this

1072
00:43:11,359 --> 00:43:13,040
and convert those into security

1073
00:43:13,040 --> 00:43:14,640
blueprints

1074
00:43:14,640 --> 00:43:16,720
for the kinds of entities we're

1075
00:43:16,720 --> 00:43:18,400
instantiating

1076
00:43:18,400 --> 00:43:21,440
when we in when we build and connect

1077
00:43:21,440 --> 00:43:23,359
containers

1078
00:43:23,359 --> 00:43:25,280
when we configure and deliver

1079
00:43:25,280 --> 00:43:27,760
cloud-based assets through csp config

1080
00:43:27,760 --> 00:43:29,680
and when we orchestrate the combination

1081
00:43:29,680 --> 00:43:32,319
of those things into microservice

1082
00:43:32,319 --> 00:43:34,240
meshes or applications with

1083
00:43:34,240 --> 00:43:37,118
infrastructures code

1084
00:43:37,920 --> 00:43:39,359
the advantage

1085
00:43:39,359 --> 00:43:42,079
we get when we shift from

1086
00:43:42,079 --> 00:43:44,079
the left to the right here

1087
00:43:44,079 --> 00:43:45,599
is that

1088
00:43:45,599 --> 00:43:48,400
we can begin to look at

1089
00:43:48,400 --> 00:43:49,760
the way

1090
00:43:49,760 --> 00:43:52,880
that ctu office and ciso office want

1091
00:43:52,880 --> 00:43:54,560
applications to look

1092
00:43:54,560 --> 00:43:56,480
and say if you stay within our security

1093
00:43:56,480 --> 00:43:58,960
blueprints if you use our our verified

1094
00:43:58,960 --> 00:44:01,520
snippets

1095
00:44:02,000 --> 00:44:03,680
it's going to be much easier or we can

1096
00:44:03,680 --> 00:44:05,440
we can skip the auditing of your

1097
00:44:05,440 --> 00:44:06,880
infrastructure we can skip the audit of

1098
00:44:06,880 --> 00:44:09,599
your mesh because you followed the

1099
00:44:09,599 --> 00:44:12,800
blueprints in the ways you created it

1100
00:44:12,800 --> 00:44:14,160
and so we've always talked about

1101
00:44:14,160 --> 00:44:15,520
security standards and secure

1102
00:44:15,520 --> 00:44:16,960
architecture and getting leverage on

1103
00:44:16,960 --> 00:44:19,920
this stuff for years

1104
00:44:20,400 --> 00:44:22,800
finally infrastructure's code

1105
00:44:22,800 --> 00:44:24,880
gives us the ability to apply this

1106
00:44:24,880 --> 00:44:26,560
positive lens

1107
00:44:26,560 --> 00:44:28,640
to the scanning problem

1108
00:44:28,640 --> 00:44:30,400
um and to get this kind of positive

1109
00:44:30,400 --> 00:44:32,160
attestation

1110
00:44:32,160 --> 00:44:34,079
um out of our out of our of our

1111
00:44:34,079 --> 00:44:37,079
development

1112
00:44:40,319 --> 00:44:42,160
so

1113
00:44:42,160 --> 00:44:45,200
while we're shifting to open source and

1114
00:44:45,200 --> 00:44:48,720
git ops and scanning things

1115
00:44:49,040 --> 00:44:52,160
as we check them in with open source um

1116
00:44:52,160 --> 00:44:54,800
as we uh shift to where the code in the

1117
00:44:54,800 --> 00:44:55,680
churn is and look at our

1118
00:44:55,680 --> 00:44:58,160
infrastructure's code in our cloud

1119
00:44:58,160 --> 00:45:00,160
service provider configuration

1120
00:45:00,160 --> 00:45:02,560
we also need to

1121
00:45:02,560 --> 00:45:05,599
evolve past

1122
00:45:05,599 --> 00:45:08,400
run a scan and produce a report

1123
00:45:08,400 --> 00:45:10,000
remember that self-service driver

1124
00:45:10,000 --> 00:45:12,079
remember the cadence challenge we had

1125
00:45:12,079 --> 00:45:12,880
right

1126
00:45:12,880 --> 00:45:14,880
if it takes seven hours to run a scanner

1127
00:45:14,880 --> 00:45:16,480
if it takes two days to get a manual pen

1128
00:45:16,480 --> 00:45:17,680
test done

1129
00:45:17,680 --> 00:45:20,319
you can't do continuous delivery

1130
00:45:20,319 --> 00:45:21,760
so the third thing we need to do is we

1131
00:45:21,760 --> 00:45:23,599
need to evolve past

1132
00:45:23,599 --> 00:45:25,359
the scan in the report

1133
00:45:25,359 --> 00:45:28,240
now almost every individual tool has

1134
00:45:28,240 --> 00:45:30,319
jira integration

1135
00:45:30,319 --> 00:45:32,240
and something similar right you know

1136
00:45:32,240 --> 00:45:34,640
chat ops whatever right this is not what

1137
00:45:34,640 --> 00:45:37,839
we're talking about um because i've seen

1138
00:45:37,839 --> 00:45:39,760
organizations go from

1139
00:45:39,760 --> 00:45:42,800
running 5 10 tools and producing 510

1140
00:45:42,800 --> 00:45:44,880
reports

1141
00:45:44,880 --> 00:45:47,440
to producing five to ten integrations

1142
00:45:47,440 --> 00:45:49,680
between their security scanning tools

1143
00:45:49,680 --> 00:45:52,160
and their chat ops platform of choice or

1144
00:45:52,160 --> 00:45:53,440
or their um

1145
00:45:53,440 --> 00:45:55,440
their change management systems

1146
00:45:55,440 --> 00:45:57,920
all they've done is removed the paper

1147
00:45:57,920 --> 00:46:00,240
from the process of creating that

1148
00:46:00,240 --> 00:46:02,640
developer insurgency where an avalanche

1149
00:46:02,640 --> 00:46:04,400
of vulnerabilities an avalanche of

1150
00:46:04,400 --> 00:46:07,440
change requests comes in

1151
00:46:07,440 --> 00:46:08,720
so

1152
00:46:08,720 --> 00:46:10,880
we spent time from a legacy perspective

1153
00:46:10,880 --> 00:46:14,160
optimizing those touches and converting

1154
00:46:14,160 --> 00:46:17,440
our policy documents to gates in our in

1155
00:46:17,440 --> 00:46:21,119
our delivery process that executed um

1156
00:46:21,119 --> 00:46:23,200
and either you know broke the build or

1157
00:46:23,200 --> 00:46:24,240
or

1158
00:46:24,240 --> 00:46:26,000
or or did some other big red button

1159
00:46:26,000 --> 00:46:29,359
activity based on scanning rules

1160
00:46:29,359 --> 00:46:32,319
over the last three years we've

1161
00:46:32,319 --> 00:46:34,720
optimized the notion of gates and rules

1162
00:46:34,720 --> 00:46:37,680
we've created policy as code

1163
00:46:37,680 --> 00:46:39,760
some organizations have gotten very

1164
00:46:39,760 --> 00:46:41,440
clever about

1165
00:46:41,440 --> 00:46:43,599
running as much

1166
00:46:43,599 --> 00:46:45,599
scanning as is warranted by the

1167
00:46:45,599 --> 00:46:47,680
application or is warranted by early

1168
00:46:47,680 --> 00:46:49,680
scanning

1169
00:46:49,680 --> 00:46:53,200
some organizations have used

1170
00:46:53,280 --> 00:46:54,720
you know total vulnerability management

1171
00:46:54,720 --> 00:46:55,680
tools

1172
00:46:55,680 --> 00:46:56,400
or

1173
00:46:56,400 --> 00:46:57,200
or

1174
00:46:57,200 --> 00:46:58,480
or other

1175
00:46:58,480 --> 00:47:00,000
other tools this category is kind of

1176
00:47:00,000 --> 00:47:02,079
misnamed instead i'm going to combine

1177
00:47:02,079 --> 00:47:04,000
the tools results

1178
00:47:04,000 --> 00:47:05,680
before i submit something to the

1179
00:47:05,680 --> 00:47:08,400
developer maybe i can correlate findings

1180
00:47:08,400 --> 00:47:09,440
so they

1181
00:47:09,440 --> 00:47:11,680
they have all 10 pieces of information

1182
00:47:11,680 --> 00:47:13,200
on their desk at once when they make a

1183
00:47:13,200 --> 00:47:16,319
code change or a patch

1184
00:47:16,800 --> 00:47:18,960
all of these approaches are an

1185
00:47:18,960 --> 00:47:21,920
optimization of the point in time scan

1186
00:47:21,920 --> 00:47:24,800
based modality

1187
00:47:24,800 --> 00:47:25,839
and

1188
00:47:25,839 --> 00:47:27,119
when you look at the way that

1189
00:47:27,119 --> 00:47:29,040
engineering-led security initiatives

1190
00:47:29,040 --> 00:47:31,599
work they don't take that approach that

1191
00:47:31,599 --> 00:47:34,000
the legacy and central

1192
00:47:34,000 --> 00:47:35,520
security initiative

1193
00:47:35,520 --> 00:47:36,400
took

1194
00:47:36,400 --> 00:47:38,960
instead they say we're not going to

1195
00:47:38,960 --> 00:47:40,800
optimize

1196
00:47:40,800 --> 00:47:43,359
instead the legacy you know gated

1197
00:47:43,359 --> 00:47:46,000
approach we can't stand in the way of

1198
00:47:46,000 --> 00:47:47,760
delivering software

1199
00:47:47,760 --> 00:47:50,079
instead we're going to take the notion

1200
00:47:50,079 --> 00:47:52,000
of security policy we're going to

1201
00:47:52,000 --> 00:47:53,680
replace it with blueprints like we

1202
00:47:53,680 --> 00:47:56,079
described in the last slide

1203
00:47:56,079 --> 00:47:57,440
and then we're going to make sure we can

1204
00:47:57,440 --> 00:47:59,520
detect drift

1205
00:47:59,520 --> 00:48:01,280
off of those blueprints whether it's a

1206
00:48:01,280 --> 00:48:03,280
hardened container whether it's a

1207
00:48:03,280 --> 00:48:04,880
verified

1208
00:48:04,880 --> 00:48:07,440
instance config in the cloud in in in

1209
00:48:07,440 --> 00:48:10,079
confirmation templates uh whether it's

1210
00:48:10,079 --> 00:48:11,839
whatever

1211
00:48:11,839 --> 00:48:13,119
and finally

1212
00:48:13,119 --> 00:48:15,119
we're going to leverage technologies

1213
00:48:15,119 --> 00:48:17,359
that allow us to put guard rails

1214
00:48:17,359 --> 00:48:19,040
on the way that that orchestration

1215
00:48:19,040 --> 00:48:20,800
software works

1216
00:48:20,800 --> 00:48:23,440
and what we're able to do

1217
00:48:23,440 --> 00:48:26,400
in terms of

1218
00:48:27,599 --> 00:48:30,160
in terms of you know predicting

1219
00:48:30,160 --> 00:48:32,160
what the resulting service mesh will

1220
00:48:32,160 --> 00:48:34,240
look like or application will look like

1221
00:48:34,240 --> 00:48:36,240
and make sure that it conforms to our

1222
00:48:36,240 --> 00:48:37,839
desires for

1223
00:48:37,839 --> 00:48:39,920
authorization or use of east west

1224
00:48:39,920 --> 00:48:44,000
encryption or or any other number of

1225
00:48:44,000 --> 00:48:45,119
you know security standards or

1226
00:48:45,119 --> 00:48:47,200
blueprints

1227
00:48:47,200 --> 00:48:48,880
the difference between a guard rail and

1228
00:48:48,880 --> 00:48:50,720
a drift-based approach

1229
00:48:50,720 --> 00:48:52,559
is that you're defining what secure

1230
00:48:52,559 --> 00:48:54,160
looks like proactively just like you

1231
00:48:54,160 --> 00:48:56,880
tried to do proactive scanning

1232
00:48:56,880 --> 00:48:57,839
but

1233
00:48:57,839 --> 00:48:59,839
you're moving from a point in time scan

1234
00:48:59,839 --> 00:49:02,160
based approach to a real-time runtime

1235
00:49:02,160 --> 00:49:04,240
approach

1236
00:49:04,240 --> 00:49:05,920
you know that says

1237
00:49:05,920 --> 00:49:07,520
i'm not really going to know what the

1238
00:49:07,520 --> 00:49:08,880
posture

1239
00:49:08,880 --> 00:49:11,200
and

1240
00:49:11,280 --> 00:49:13,119
you know the software looks like until

1241
00:49:13,119 --> 00:49:14,720
it's running

1242
00:49:14,720 --> 00:49:16,800
so i will make sure that the things that

1243
00:49:16,800 --> 00:49:18,880
i hardened don't change

1244
00:49:18,880 --> 00:49:20,880
drift detection and i will make sure

1245
00:49:20,880 --> 00:49:24,319
that if anything violates a policy

1246
00:49:24,319 --> 00:49:26,960
that i get an event in real time

1247
00:49:26,960 --> 00:49:30,000
and so you've seen organizations

1248
00:49:30,000 --> 00:49:31,760
you know treat

1249
00:49:31,760 --> 00:49:33,680
security telemetry that used to be

1250
00:49:33,680 --> 00:49:35,839
vulnerability discovery reports more

1251
00:49:35,839 --> 00:49:38,880
like sim telemetry

1252
00:49:38,880 --> 00:49:41,680
than reporting

1253
00:49:41,839 --> 00:49:43,920
and because they're moving not to the

1254
00:49:43,920 --> 00:49:45,839
thousands of static analysis or dynamic

1255
00:49:45,839 --> 00:49:47,920
analysis rules and the report that you

1256
00:49:47,920 --> 00:49:49,680
know kills a tree

1257
00:49:49,680 --> 00:49:51,520
but because they're looking at those few

1258
00:49:51,520 --> 00:49:52,800
things

1259
00:49:52,800 --> 00:49:54,480
that tell them if developers are using

1260
00:49:54,480 --> 00:49:56,800
the frameworks correctly or sticking to

1261
00:49:56,800 --> 00:49:58,559
the hardened configuration

1262
00:49:58,559 --> 00:50:00,720
they can afford to immediately send

1263
00:50:00,720 --> 00:50:02,400
those events back to change management

1264
00:50:02,400 --> 00:50:03,520
or through the

1265
00:50:03,520 --> 00:50:06,880
sim or their desired focal point

1266
00:50:06,880 --> 00:50:11,280
because staying on the guard rails

1267
00:50:11,359 --> 00:50:14,079
is a lot less noisy than finding

1268
00:50:14,079 --> 00:50:15,680
thousands of vulnerabilities of which

1269
00:50:15,680 --> 00:50:19,440
half or more might be false positives

1270
00:50:19,920 --> 00:50:22,880
now what do we need to do is security

1271
00:50:22,880 --> 00:50:24,319
we need to

1272
00:50:24,319 --> 00:50:26,480
far transcend

1273
00:50:26,480 --> 00:50:28,960
our desires for cicd automation and

1274
00:50:28,960 --> 00:50:30,880
scanning rules and converting our policy

1275
00:50:30,880 --> 00:50:32,319
documents to

1276
00:50:32,319 --> 00:50:34,880
um you know automated scanning

1277
00:50:34,880 --> 00:50:37,359
we need to go beyond what members of the

1278
00:50:37,359 --> 00:50:38,880
bsim community have done trying to

1279
00:50:38,880 --> 00:50:41,920
implement policy as code

1280
00:50:41,920 --> 00:50:44,319
if all of the developer technologies are

1281
00:50:44,319 --> 00:50:46,800
simple yaml configuration and they're

1282
00:50:46,800 --> 00:50:48,720
checked into the repos

1283
00:50:48,720 --> 00:50:51,200
then the policies that govern both the

1284
00:50:51,200 --> 00:50:53,440
blueprints and the vulnerability

1285
00:50:53,440 --> 00:50:56,319
that that configuration

1286
00:50:56,319 --> 00:50:59,359
may possess also need to be config

1287
00:50:59,359 --> 00:51:01,359
and when we're managing

1288
00:51:01,359 --> 00:51:03,920
our security scanning

1289
00:51:03,920 --> 00:51:06,160
by creating policy as config and doing

1290
00:51:06,160 --> 00:51:09,040
git ops on our policy on our governance

1291
00:51:09,040 --> 00:51:11,280
just like development is

1292
00:51:11,280 --> 00:51:13,359
then and only then will we have the

1293
00:51:13,359 --> 00:51:16,160
ability to match the scale and leverage

1294
00:51:16,160 --> 00:51:17,440
and the cadence of the development

1295
00:51:17,440 --> 00:51:19,599
organization

1296
00:51:19,599 --> 00:51:20,839
and that's going to

1297
00:51:20,839 --> 00:51:23,599
require that will create governance on

1298
00:51:23,599 --> 00:51:26,559
their governance on on the governance

1299
00:51:26,559 --> 00:51:28,800
that development provides

1300
00:51:28,800 --> 00:51:31,280
now why their governance

1301
00:51:31,280 --> 00:51:33,680
the subject matter expertise necessary

1302
00:51:33,680 --> 00:51:35,359
to come through

1303
00:51:35,359 --> 00:51:37,839
the development frameworks

1304
00:51:37,839 --> 00:51:40,240
the infrastructure is code platforms and

1305
00:51:40,240 --> 00:51:42,480
the cloud service provider apis of which

1306
00:51:42,480 --> 00:51:45,599
there are more every three or four weeks

1307
00:51:45,599 --> 00:51:48,319
is going to overwhelm security groups

1308
00:51:48,319 --> 00:51:50,400
so enrolling security champions

1309
00:51:50,400 --> 00:51:52,800
enrolling developers

1310
00:51:52,800 --> 00:51:54,960
in self-governance

1311
00:51:54,960 --> 00:51:57,119
and having them participate in the

1312
00:51:57,119 --> 00:51:59,839
authorship of this policy configuration

1313
00:51:59,839 --> 00:52:01,920
is going to be essential to hitting the

1314
00:52:01,920 --> 00:52:03,760
breadth of technology support you're

1315
00:52:03,760 --> 00:52:07,200
going to need in your organization

1316
00:52:08,559 --> 00:52:10,400
some organizations are actually going

1317
00:52:10,400 --> 00:52:12,800
after

1318
00:52:12,880 --> 00:52:14,640
technology independent policy

1319
00:52:14,640 --> 00:52:16,800
description and have created

1320
00:52:16,800 --> 00:52:18,400
there's one organization

1321
00:52:18,400 --> 00:52:20,640
uh that's created a technology

1322
00:52:20,640 --> 00:52:23,440
independent policy language um where you

1323
00:52:23,440 --> 00:52:26,400
can in their ui create a policy for

1324
00:52:26,400 --> 00:52:29,680
encrypting storage um or uh you know

1325
00:52:29,680 --> 00:52:32,960
authorized use of a cloud-based asset

1326
00:52:32,960 --> 00:52:35,680
and the technology then converts that

1327
00:52:35,680 --> 00:52:38,720
policy down onto the different ways that

1328
00:52:38,720 --> 00:52:40,480
a particular cloud service provider may

1329
00:52:40,480 --> 00:52:43,599
manifest that whether it's s3 or rds or

1330
00:52:43,599 --> 00:52:45,119
like you

1331
00:52:45,119 --> 00:52:47,280
you know and so on and so forth

1332
00:52:47,280 --> 00:52:48,079
um

1333
00:52:48,079 --> 00:52:50,160
technology independent definition of

1334
00:52:50,160 --> 00:52:52,480
that policy configuration

1335
00:52:52,480 --> 00:52:54,240
um and then managing that as good ops is

1336
00:52:54,240 --> 00:52:57,280
kind of the brass ring for now um

1337
00:52:57,280 --> 00:52:58,880
in my in my searches i've only seen

1338
00:52:58,880 --> 00:53:01,119
concourse labs a startup do do that

1339
00:53:01,119 --> 00:53:03,760
level of abstraction

1340
00:53:03,760 --> 00:53:05,520
but that's where a security initiative

1341
00:53:05,520 --> 00:53:08,079
with you know a multi-hybrid cloud

1342
00:53:08,079 --> 00:53:09,839
scenario is going to need to go in order

1343
00:53:09,839 --> 00:53:11,440
to keep pace

1344
00:53:11,440 --> 00:53:13,280
with converting

1345
00:53:13,280 --> 00:53:15,200
what they're doing

1346
00:53:15,200 --> 00:53:17,359
to

1347
00:53:18,000 --> 00:53:19,760
govern each and every one of those cloud

1348
00:53:19,760 --> 00:53:20,720
platforms in the use of the

1349
00:53:20,720 --> 00:53:23,680
infrastructure technologies

1350
00:53:24,319 --> 00:53:25,920
so there's some key challenges with this

1351
00:53:25,920 --> 00:53:29,800
evolution that we're going to undertake

1352
00:53:29,920 --> 00:53:31,440
i believe myself or a colleague was the

1353
00:53:31,440 --> 00:53:33,760
first to say shift left

1354
00:53:33,760 --> 00:53:35,200
maybe back in

1355
00:53:35,200 --> 00:53:37,760
2001 november

1356
00:53:37,760 --> 00:53:39,839
shift the left

1357
00:53:39,839 --> 00:53:42,559
in this situation where we're

1358
00:53:42,559 --> 00:53:44,240
moving more and more of the code

1359
00:53:44,240 --> 00:53:46,960
infrastructure's code to the right

1360
00:53:46,960 --> 00:53:50,240
has become a tribute left in other words

1361
00:53:50,240 --> 00:53:52,640
we may have to scan things that

1362
00:53:52,640 --> 00:53:55,119
that either execute

1363
00:53:55,119 --> 00:53:59,440
or the the generate behaviors right

1364
00:53:59,440 --> 00:54:01,440
um in the life cycle and we're going to

1365
00:54:01,440 --> 00:54:03,839
have to attribute

1366
00:54:03,839 --> 00:54:06,559
those failures to the um or or the or

1367
00:54:06,559 --> 00:54:08,480
the change requests to the people you

1368
00:54:08,480 --> 00:54:11,119
know in the developer seat

1369
00:54:11,119 --> 00:54:14,079
that's necessary

1370
00:54:14,319 --> 00:54:16,640
as we move throughout the life cycle and

1371
00:54:16,640 --> 00:54:19,040
find more and more different places to

1372
00:54:19,040 --> 00:54:20,960
collect telemetry from

1373
00:54:20,960 --> 00:54:23,440
and attribute that to the left

1374
00:54:23,440 --> 00:54:25,920
and as we remove

1375
00:54:25,920 --> 00:54:27,520
scanning and reporting because it

1376
00:54:27,520 --> 00:54:30,079
doesn't fit our cadence of delivery

1377
00:54:30,079 --> 00:54:32,960
and we begin to provide more you know ad

1378
00:54:32,960 --> 00:54:35,680
hoc or event driven

1379
00:54:35,680 --> 00:54:37,760
you know change request material

1380
00:54:37,760 --> 00:54:39,680
engineers will consume events

1381
00:54:39,680 --> 00:54:42,720
continually once attributed to them

1382
00:54:42,720 --> 00:54:43,680
and

1383
00:54:43,680 --> 00:54:45,200
security executives will ask the

1384
00:54:45,200 --> 00:54:46,799
question

1385
00:54:46,799 --> 00:54:50,079
what does measurement look like

1386
00:54:50,319 --> 00:54:52,640
what does it mean to have you know

1387
00:54:52,640 --> 00:54:54,640
defect you know density how much cover

1388
00:54:54,640 --> 00:54:56,319
do i give the developers to fix things

1389
00:54:56,319 --> 00:54:58,000
do i track that are they going to gain

1390
00:54:58,000 --> 00:54:58,880
that

1391
00:54:58,880 --> 00:54:59,920
um

1392
00:54:59,920 --> 00:55:03,040
you know if i was scanning quarterly

1393
00:55:03,040 --> 00:55:04,880
and reporting to the board annually how

1394
00:55:04,880 --> 00:55:08,559
do i track the change

1395
00:55:10,480 --> 00:55:13,040
what we found this year in the bsim

1396
00:55:13,040 --> 00:55:14,960
study is that

1397
00:55:14,960 --> 00:55:18,480
organizations are are dealing with

1398
00:55:18,480 --> 00:55:20,559
the answer to the question of how to

1399
00:55:20,559 --> 00:55:21,839
implement

1400
00:55:21,839 --> 00:55:23,359
a scanless

1401
00:55:23,359 --> 00:55:25,119
continual vulnerability discovery

1402
00:55:25,119 --> 00:55:26,799
program

1403
00:55:26,799 --> 00:55:28,480
and what they're going to do

1404
00:55:28,480 --> 00:55:30,000
to

1405
00:55:30,000 --> 00:55:32,000
make sure that doesn't create

1406
00:55:32,000 --> 00:55:34,720
an avalanche of findings uh make sure it

1407
00:55:34,720 --> 00:55:36,160
doesn't overwhelm the developers make

1408
00:55:36,160 --> 00:55:38,559
sure the cadence of delivery of that is

1409
00:55:38,559 --> 00:55:40,079
commensurate with things like sprint

1410
00:55:40,079 --> 00:55:41,920
planning and other exercises and make

1411
00:55:41,920 --> 00:55:43,520
sure that the measurement that goes

1412
00:55:43,520 --> 00:55:46,079
along with that is compatible with the

1413
00:55:46,079 --> 00:55:47,760
way

1414
00:55:47,760 --> 00:55:49,119
or at least similar to the way that they

1415
00:55:49,119 --> 00:55:52,079
did it historically

1416
00:55:52,480 --> 00:55:55,119
if your organization isn't

1417
00:55:55,119 --> 00:55:57,119
thinking about how to get

1418
00:55:57,119 --> 00:55:59,760
to a continual feedback loop with

1419
00:55:59,760 --> 00:56:01,520
developers

1420
00:56:01,520 --> 00:56:03,920
and maintain the level of security

1421
00:56:03,920 --> 00:56:06,079
reporting that it had

1422
00:56:06,079 --> 00:56:07,040
this is something you're going to need

1423
00:56:07,040 --> 00:56:09,520
to begin to concentrate on

1424
00:56:09,520 --> 00:56:11,440
moreover again there is no silver bullet

1425
00:56:11,440 --> 00:56:12,720
tool

1426
00:56:12,720 --> 00:56:14,880
you're going to need in gartner's mine

1427
00:56:14,880 --> 00:56:17,040
10 to 30 tools to get cloud

1428
00:56:17,040 --> 00:56:19,200
fragmentation under control you know

1429
00:56:19,200 --> 00:56:20,480
certainly the average security

1430
00:56:20,480 --> 00:56:22,240
initiative has three to five

1431
00:56:22,240 --> 00:56:25,680
security tools in play at least

1432
00:56:25,680 --> 00:56:27,599
cohering

1433
00:56:27,599 --> 00:56:30,240
the res the results or the events from

1434
00:56:30,240 --> 00:56:31,760
all of those different pieces of

1435
00:56:31,760 --> 00:56:34,799
telemetry and making a single coherent

1436
00:56:34,799 --> 00:56:36,960
risk view these two things are the same

1437
00:56:36,960 --> 00:56:38,720
this is in the config this is it in the

1438
00:56:38,720 --> 00:56:40,400
code this is in the behavior that we

1439
00:56:40,400 --> 00:56:41,839
tested

1440
00:56:41,839 --> 00:56:43,359
here's all three pieces of information

1441
00:56:43,359 --> 00:56:45,440
distributable party so they can decide

1442
00:56:45,440 --> 00:56:48,079
the best way to fix that

1443
00:56:48,079 --> 00:56:50,240
that holistic view in converting those

1444
00:56:50,240 --> 00:56:52,319
pieces of vulnerability

1445
00:56:52,319 --> 00:56:56,079
or defect telemetry into a wrist view

1446
00:56:56,079 --> 00:56:59,680
and reporting that between

1447
00:56:59,680 --> 00:57:01,359
engineers

1448
00:57:01,359 --> 00:57:02,799
between engineers and the business and

1449
00:57:02,799 --> 00:57:04,480
between business and customers is the

1450
00:57:04,480 --> 00:57:06,880
second thing bsim organizations are

1451
00:57:06,880 --> 00:57:09,280
focusing on doing

1452
00:57:09,280 --> 00:57:10,839
in our last

1453
00:57:10,839 --> 00:57:13,359
study now these two things are advanced

1454
00:57:13,359 --> 00:57:14,799
they're in the three

1455
00:57:14,799 --> 00:57:18,160
tier of bsum activity which means that

1456
00:57:18,160 --> 00:57:20,799
only the most mature organizations are

1457
00:57:20,799 --> 00:57:22,480
the ones that are wrestling with these

1458
00:57:22,480 --> 00:57:24,640
problems

1459
00:57:24,640 --> 00:57:26,240
they're wrestling with this problem is a

1460
00:57:26,240 --> 00:57:28,000
harbinger that the mid market is going

1461
00:57:28,000 --> 00:57:30,000
to need to wrestle with these problems

1462
00:57:30,000 --> 00:57:32,400
um or that we're going to need um you

1463
00:57:32,400 --> 00:57:35,599
know tool vendors uh or pipeline vendors

1464
00:57:35,599 --> 00:57:37,119
um to begin to help us with these

1465
00:57:37,119 --> 00:57:41,480
problems before it hits the mid market

1466
00:57:41,599 --> 00:57:44,000
these challenges are reflected in the

1467
00:57:44,000 --> 00:57:46,240
way a modern life cycle actually works

1468
00:57:46,240 --> 00:57:48,880
in a mature security initiative

1469
00:57:48,880 --> 00:57:51,119
this is a slide i presented last year it

1470
00:57:51,119 --> 00:57:53,599
would be sim for a keynote and what you

1471
00:57:53,599 --> 00:57:55,839
see about this slide is there's a

1472
00:57:55,839 --> 00:57:57,520
million different life cycle slides you

1473
00:57:57,520 --> 00:57:59,280
know that show an infinity

1474
00:57:59,280 --> 00:58:01,520
others that flatten it out into

1475
00:58:01,520 --> 00:58:02,960
touch points

1476
00:58:02,960 --> 00:58:06,240
i chose this representation because

1477
00:58:06,240 --> 00:58:08,000
it shows three different phases of

1478
00:58:08,000 --> 00:58:10,160
telemetry coming back through you know

1479
00:58:10,160 --> 00:58:12,319
through security to development there's

1480
00:58:12,319 --> 00:58:14,880
the ide um there's your scm and there's

1481
00:58:14,880 --> 00:58:16,319
the build pipeline these are the

1482
00:58:16,319 --> 00:58:19,680
mechanisms that developers use

1483
00:58:19,680 --> 00:58:21,839
and the places that security hook

1484
00:58:21,839 --> 00:58:24,319
telemetry in

1485
00:58:24,319 --> 00:58:26,640
to provide building security in to the

1486
00:58:26,640 --> 00:58:28,880
developers

1487
00:58:28,880 --> 00:58:31,119
now the dynamism of software

1488
00:58:31,119 --> 00:58:34,720
has dictated that more and more of what

1489
00:58:34,720 --> 00:58:36,640
the software is going to look like and

1490
00:58:36,640 --> 00:58:38,799
behave like in production

1491
00:58:38,799 --> 00:58:40,559
is going to happen up here in this

1492
00:58:40,559 --> 00:58:42,160
artifact repository containers and

1493
00:58:42,160 --> 00:58:44,880
images and orchestration piece

1494
00:58:44,880 --> 00:58:47,359
telemetry from

1495
00:58:47,359 --> 00:58:48,480
you know

1496
00:58:48,480 --> 00:58:50,559
sort of cd

1497
00:58:50,559 --> 00:58:51,440
now

1498
00:58:51,440 --> 00:58:54,079
there are plenty of development tools

1499
00:58:54,079 --> 00:58:55,359
registries

1500
00:58:55,359 --> 00:58:57,280
frameworks platforms

1501
00:58:57,280 --> 00:58:59,440
that support this

1502
00:58:59,440 --> 00:59:01,040
but other than the container security

1503
00:59:01,040 --> 00:59:02,400
market

1504
00:59:02,400 --> 00:59:03,839
you don't see a lot of security

1505
00:59:03,839 --> 00:59:06,000
telemetry servicing this piece of the

1506
00:59:06,000 --> 00:59:07,680
puzzle

1507
00:59:07,680 --> 00:59:09,440
and then of course we have

1508
00:59:09,440 --> 00:59:10,799
uh you know right of release and

1509
00:59:10,799 --> 00:59:12,480
production in the kind of telemetry that

1510
00:59:12,480 --> 00:59:15,440
typically goes to operations um out of

1511
00:59:15,440 --> 00:59:18,880
that out of that that piece this modern

1512
00:59:18,880 --> 00:59:21,280
life cycle and the different cadences

1513
00:59:21,280 --> 00:59:22,799
associated with

1514
00:59:22,799 --> 00:59:23,680
what

1515
00:59:23,680 --> 00:59:25,839
is allowable from a security telemetry

1516
00:59:25,839 --> 00:59:27,920
latency perspective

1517
00:59:27,920 --> 00:59:29,760
is really interesting

1518
00:59:29,760 --> 00:59:32,480
and it's what the bsim community was

1519
00:59:32,480 --> 00:59:35,359
struggling with last year as we went

1520
00:59:35,359 --> 00:59:38,480
through this process of really engaging

1521
00:59:38,480 --> 00:59:40,559
with infrastructure as code with

1522
00:59:40,559 --> 00:59:43,680
orchestration with move to cloud

1523
00:59:43,680 --> 00:59:44,880
and they wrestled with how they were

1524
00:59:44,880 --> 00:59:47,599
going to adjust the telemetry that was

1525
00:59:47,599 --> 00:59:49,839
really front loaded to the left

1526
00:59:49,839 --> 00:59:52,480
into this new dynamic environment

1527
00:59:52,480 --> 00:59:53,359
and

1528
00:59:53,359 --> 00:59:55,520
what firms realized and what they began

1529
00:59:55,520 --> 00:59:57,280
to reflect in their behaviors is they

1530
00:59:57,280 --> 00:59:58,799
were combining

1531
00:59:58,799 --> 01:00:00,640
the the events that came out of the

1532
01:00:00,640 --> 01:00:02,559
stuff that they ran when they scanned

1533
01:00:02,559 --> 01:00:04,160
the builds

1534
01:00:04,160 --> 01:00:06,400
with the stuff that they ran

1535
01:00:06,400 --> 01:00:08,640
when they built containers orchestrated

1536
01:00:08,640 --> 01:00:10,319
the the combination of those containers

1537
01:00:10,319 --> 01:00:12,480
and delivered them

1538
01:00:12,480 --> 01:00:14,480
and the telemetry they were able to

1539
01:00:14,480 --> 01:00:17,520
instrument production with

1540
01:00:18,960 --> 01:00:20,880
and so whether using a commercial tool

1541
01:00:20,880 --> 01:00:23,599
or something else in here there needed

1542
01:00:23,599 --> 01:00:25,920
to be a way to figure out

1543
01:00:25,920 --> 01:00:28,480
if a piece of behavioral information

1544
01:00:28,480 --> 01:00:30,240
from production and something you could

1545
01:00:30,240 --> 01:00:31,760
glean from infrastructure's code or

1546
01:00:31,760 --> 01:00:33,599
containers and something you pulled from

1547
01:00:33,599 --> 01:00:34,799
defects

1548
01:00:34,799 --> 01:00:36,640
was the same thing

1549
01:00:36,640 --> 01:00:38,000
or related

1550
01:00:38,000 --> 01:00:39,200
and needed to go to the same

1551
01:00:39,200 --> 01:00:42,680
attributable developer

1552
01:00:44,319 --> 01:00:45,760
so

1553
01:00:45,760 --> 01:00:47,359
as the first or second person who said

1554
01:00:47,359 --> 01:00:49,040
shift left in the world i'm here to tell

1555
01:00:49,040 --> 01:00:50,400
you now

1556
01:00:50,400 --> 01:00:52,640
focusing app sex efforts in the next 12

1557
01:00:52,640 --> 01:00:54,160
to 24 months

1558
01:00:54,160 --> 01:00:57,599
means giving up the focus on shift left

1559
01:00:57,599 --> 01:00:59,040
and thinking about how you're going to

1560
01:00:59,040 --> 01:01:00,960
combine different pieces of information

1561
01:01:00,960 --> 01:01:02,960
from the left when you build

1562
01:01:02,960 --> 01:01:05,119
from the right after you deploy

1563
01:01:05,119 --> 01:01:06,640
and from even right of boom when

1564
01:01:06,640 --> 01:01:10,160
something goes wrong

1565
01:01:10,160 --> 01:01:11,839
you're going to need a mechanism and if

1566
01:01:11,839 --> 01:01:13,920
you don't want to buy one github and get

1567
01:01:13,920 --> 01:01:15,839
lab have exceptional ones

1568
01:01:15,839 --> 01:01:17,760
to combine those things and route them

1569
01:01:17,760 --> 01:01:20,559
to the right developer or engineer

1570
01:01:20,559 --> 01:01:22,640
and the dynamism of

1571
01:01:22,640 --> 01:01:25,200
you know modern software languages web

1572
01:01:25,200 --> 01:01:26,960
development frameworks and the way we

1573
01:01:26,960 --> 01:01:28,960
develop and combine and orchestrate

1574
01:01:28,960 --> 01:01:30,640
software with containers

1575
01:01:30,640 --> 01:01:32,960
is going to necessarily demand we shift

1576
01:01:32,960 --> 01:01:34,880
right

1577
01:01:34,880 --> 01:01:36,799
to get more accurate or to get lower

1578
01:01:36,799 --> 01:01:39,839
latency visibility

1579
01:01:39,839 --> 01:01:40,880
into

1580
01:01:40,880 --> 01:01:42,960
the security properties of our

1581
01:01:42,960 --> 01:01:44,400
components of our services and our

1582
01:01:44,400 --> 01:01:46,640
applications

1583
01:01:46,640 --> 01:01:49,040
the more right we shift the faster we

1584
01:01:49,040 --> 01:01:51,440
may go the more accurate telemetry we

1585
01:01:51,440 --> 01:01:53,280
may get but we're going to struggle with

1586
01:01:53,280 --> 01:01:55,839
attribution

1587
01:01:57,440 --> 01:01:59,280
the longer we wait and if we try to be

1588
01:01:59,280 --> 01:02:00,720
resilient like the netflix's and the

1589
01:02:00,720 --> 01:02:03,200
amazons of the world are

1590
01:02:03,200 --> 01:02:04,799
we take a resilience based approach we

1591
01:02:04,799 --> 01:02:07,039
say we can't build things perfectly what

1592
01:02:07,039 --> 01:02:08,799
we can do is make sure that we're able

1593
01:02:08,799 --> 01:02:12,960
to identify a tribute remediate and

1594
01:02:12,960 --> 01:02:15,640
or risk manage and re-deploy

1595
01:02:15,640 --> 01:02:17,359
instantaneously

1596
01:02:17,359 --> 01:02:19,440
that's a resilience argument

1597
01:02:19,440 --> 01:02:22,559
that's a struggle for firms

1598
01:02:22,559 --> 01:02:24,720
so safely navigating a purely right of

1599
01:02:24,720 --> 01:02:25,520
boom

1600
01:02:25,520 --> 01:02:27,680
phenomena as some organizations try to

1601
01:02:27,680 --> 01:02:28,960
do

1602
01:02:28,960 --> 01:02:31,680
is going to require a lot of maturity

1603
01:02:31,680 --> 01:02:33,680
in my opinion as a result of these

1604
01:02:33,680 --> 01:02:35,520
challenges and where we need to focus

1605
01:02:35,520 --> 01:02:38,079
based on dynamism appsec is really going

1606
01:02:38,079 --> 01:02:39,599
to need to focus on this middle what i

1607
01:02:39,599 --> 01:02:40,960
call the center orchestration and

1608
01:02:40,960 --> 01:02:43,440
containers

1609
01:02:43,680 --> 01:02:45,599
we focus on the ability of giving

1610
01:02:45,599 --> 01:02:47,760
developers and engineers

1611
01:02:47,760 --> 01:02:49,520
the ability to scan infrastructure's

1612
01:02:49,520 --> 01:02:52,480
code and scan containers and scan cloud

1613
01:02:52,480 --> 01:02:53,680
security provider

1614
01:02:53,680 --> 01:02:56,480
service provider configuration

1615
01:02:56,480 --> 01:02:57,680
and attribute that to the right

1616
01:02:57,680 --> 01:02:59,680
engineers we're really making a

1617
01:02:59,680 --> 01:03:02,640
difference

1618
01:03:02,640 --> 01:03:04,799
what's next

1619
01:03:04,799 --> 01:03:06,640
we we've spent years trying to make sure

1620
01:03:06,640 --> 01:03:08,000
that engineers can interact with

1621
01:03:08,000 --> 01:03:09,920
solutions that we can monitor adjust and

1622
01:03:09,920 --> 01:03:11,839
respond to their complaints about

1623
01:03:11,839 --> 01:03:14,319
accuracy their complaints about cadence

1624
01:03:14,319 --> 01:03:16,000
we thought that solutions must integrate

1625
01:03:16,000 --> 01:03:17,520
with the approved technology stack and

1626
01:03:17,520 --> 01:03:18,640
we had to meet them on their side of the

1627
01:03:18,640 --> 01:03:21,839
river slack jira

1628
01:03:22,559 --> 01:03:24,400
we're doing a much better job of meeting

1629
01:03:24,400 --> 01:03:26,319
their cadence meeting their self-service

1630
01:03:26,319 --> 01:03:28,640
requirements when we can scan all the

1631
01:03:28,640 --> 01:03:30,480
languages they use

1632
01:03:30,480 --> 01:03:32,000
when we recognize the languages they use

1633
01:03:32,000 --> 01:03:33,680
our infrastructure's code

1634
01:03:33,680 --> 01:03:35,680
their cloud service provider

1635
01:03:35,680 --> 01:03:38,160
configuration they're basically

1636
01:03:38,160 --> 01:03:40,240
config

1637
01:03:40,240 --> 01:03:42,640
and we need to give them not only

1638
01:03:42,640 --> 01:03:45,039
the ability to scan those languages but

1639
01:03:45,039 --> 01:03:46,319
we need to give them the ability to

1640
01:03:46,319 --> 01:03:48,640
self-service the definition

1641
01:03:48,640 --> 01:03:50,160
of vulnerability checks don't do this

1642
01:03:50,160 --> 01:03:51,680
it's always dangerous

1643
01:03:51,680 --> 01:03:54,720
and guardrails do it this way our

1644
01:03:54,720 --> 01:03:56,000
architect office and our security

1645
01:03:56,000 --> 01:03:58,240
architects like it this way for

1646
01:03:58,240 --> 01:03:59,920
themselves

1647
01:03:59,920 --> 01:04:01,760
because remember cut and paste is still

1648
01:04:01,760 --> 01:04:03,280
the way people develop

1649
01:04:03,280 --> 01:04:04,720
and if they're cut and pasting their

1650
01:04:04,720 --> 01:04:07,359
guardrails and their secure hardened

1651
01:04:07,359 --> 01:04:08,799
snippets

1652
01:04:08,799 --> 01:04:10,319
and their checks

1653
01:04:10,319 --> 01:04:11,760
then we're going to get leverage out of

1654
01:04:11,760 --> 01:04:14,640
the security outside of the house

1655
01:04:14,640 --> 01:04:17,039
we must give development the ability to

1656
01:04:17,039 --> 01:04:18,240
operate

1657
01:04:18,240 --> 01:04:20,319
monitor adjust and respond

1658
01:04:20,319 --> 01:04:23,760
to those guardrails themselves

1659
01:04:23,760 --> 01:04:25,280
and consume

1660
01:04:25,280 --> 01:04:27,520
reporting off of it at the cadence we

1661
01:04:27,520 --> 01:04:29,039
need

1662
01:04:29,039 --> 01:04:30,880
while providing back to them expertise

1663
01:04:30,880 --> 01:04:32,559
just in time

1664
01:04:32,559 --> 01:04:35,440
to their root loop

1665
01:04:36,640 --> 01:04:38,400
we must provide

1666
01:04:38,400 --> 01:04:40,880
traceable and immutable attestation for

1667
01:04:40,880 --> 01:04:42,720
what those things found attributable to

1668
01:04:42,720 --> 01:04:44,559
those artifacts because those artifacts

1669
01:04:44,559 --> 01:04:46,720
may be extremely ephemeral or they may

1670
01:04:46,720 --> 01:04:47,920
be

1671
01:04:47,920 --> 01:04:50,079
long-lived and persistent in a gold

1672
01:04:50,079 --> 01:04:54,240
source that's potentially public

1673
01:04:54,240 --> 01:04:56,400
so not only do we have to create this

1674
01:04:56,400 --> 01:04:58,000
scanning capability for things like

1675
01:04:58,000 --> 01:05:00,160
infrastructures code

1676
01:05:00,160 --> 01:05:01,760
for for for

1677
01:05:01,760 --> 01:05:04,000
cloud

1678
01:05:04,000 --> 01:05:06,960
service provider configuration

1679
01:05:06,960 --> 01:05:08,640
but because someone may use those

1680
01:05:08,640 --> 01:05:10,480
snippets and create something that lives

1681
01:05:10,480 --> 01:05:12,079
for a while

1682
01:05:12,079 --> 01:05:13,680
when there's a problem with that thing

1683
01:05:13,680 --> 01:05:15,119
we need to attribute it back to the

1684
01:05:15,119 --> 01:05:17,680
policy we scanned it and what security

1685
01:05:17,680 --> 01:05:19,280
nutrition information was associated

1686
01:05:19,280 --> 01:05:21,200
with

1687
01:05:21,200 --> 01:05:22,480
because

1688
01:05:22,480 --> 01:05:24,480
developers and engineers will will

1689
01:05:24,480 --> 01:05:26,160
self-service the creation of these

1690
01:05:26,160 --> 01:05:29,039
assets that's three buckets vpcs

1691
01:05:29,039 --> 01:05:30,160
services

1692
01:05:30,160 --> 01:05:31,839
containers

1693
01:05:31,839 --> 01:05:33,760
we need the enrollment

1694
01:05:33,760 --> 01:05:36,000
of the scanning and of the telemetry in

1695
01:05:36,000 --> 01:05:38,480
these assets to be automatic

1696
01:05:38,480 --> 01:05:40,079
along with

1697
01:05:40,079 --> 01:05:41,520
the creation of

1698
01:05:41,520 --> 01:05:44,960
security on and there by default

1699
01:05:44,960 --> 01:05:47,119
we've seen this happen with sca if

1700
01:05:47,119 --> 01:05:49,119
you're using open shifter using github

1701
01:05:49,119 --> 01:05:52,319
you get sca for free

1702
01:05:52,319 --> 01:05:54,319
it's in the ui

1703
01:05:54,319 --> 01:05:57,359
it's business as usual

1704
01:05:57,359 --> 01:05:59,839
you get the alerts

1705
01:05:59,839 --> 01:06:02,400
the security configuration

1706
01:06:02,400 --> 01:06:05,359
for the sca scanning as well as how you

1707
01:06:05,359 --> 01:06:07,520
build and s and how you define

1708
01:06:07,520 --> 01:06:08,720
dependencies

1709
01:06:08,720 --> 01:06:10,720
is configuration

1710
01:06:10,720 --> 01:06:12,880
so the security control is config

1711
01:06:12,880 --> 01:06:14,960
already

1712
01:06:14,960 --> 01:06:16,480
and

1713
01:06:16,480 --> 01:06:19,440
the ability to manage right of boom

1714
01:06:19,440 --> 01:06:22,559
um or or security research inbound is

1715
01:06:22,559 --> 01:06:24,319
integrated into the platform and meets

1716
01:06:24,319 --> 01:06:25,760
developers on their side of the river to

1717
01:06:25,760 --> 01:06:28,400
respond or to notify customers all of

1718
01:06:28,400 --> 01:06:30,640
these slides are a year or two old

1719
01:06:30,640 --> 01:06:31,760
why

1720
01:06:31,760 --> 01:06:35,039
because sca and because the pipeline

1721
01:06:35,039 --> 01:06:36,240
platforms

1722
01:06:36,240 --> 01:06:38,480
are solving this security from an

1723
01:06:38,480 --> 01:06:41,599
engineering-led perspective problem

1724
01:06:41,599 --> 01:06:43,359
as a necessity what i said earlier on in

1725
01:06:43,359 --> 01:06:45,520
the presentation

1726
01:06:45,520 --> 01:06:47,839
so if you listened to this presentation

1727
01:06:47,839 --> 01:06:49,920
and said that's too hard

1728
01:06:49,920 --> 01:06:51,359
understand this is where github and

1729
01:06:51,359 --> 01:06:53,440
gitlab already are

1730
01:06:53,440 --> 01:06:55,520
if you're a security vendor watch out if

1731
01:06:55,520 --> 01:06:57,359
you're if you're an organization using

1732
01:06:57,359 --> 01:07:01,839
security vendors think about this

1733
01:07:02,319 --> 01:07:04,319
there's gonna be attention over the next

1734
01:07:04,319 --> 01:07:06,640
12 to 36 months people are going to want

1735
01:07:06,640 --> 01:07:10,319
to use infrastructure as code to create

1736
01:07:10,319 --> 01:07:12,720
these trust boundaries between things

1737
01:07:12,720 --> 01:07:14,400
like containers and production things

1738
01:07:14,400 --> 01:07:16,880
like repos and other developers and

1739
01:07:16,880 --> 01:07:18,880
create gates again

1740
01:07:18,880 --> 01:07:22,319
governance people want to be governing

1741
01:07:22,319 --> 01:07:23,839
the people from

1742
01:07:23,839 --> 01:07:25,520
organizations like the netflix's like

1743
01:07:25,520 --> 01:07:27,200
the ed season like the amazons who think

1744
01:07:27,200 --> 01:07:29,039
about resilience and who say i'm going

1745
01:07:29,039 --> 01:07:30,480
to flex

1746
01:07:30,480 --> 01:07:33,599
i'm going to use agility at its extreme

1747
01:07:33,599 --> 01:07:36,640
i'm going to respond

1748
01:07:37,839 --> 01:07:39,359
those two things are going to be at odds

1749
01:07:39,359 --> 01:07:41,760
this is a slide from this year's bsim

1750
01:07:41,760 --> 01:07:43,280
where organizations are going to be

1751
01:07:43,280 --> 01:07:46,000
encouraged to create trusted boundaries

1752
01:07:46,000 --> 01:07:47,520
some firms that'll work with other firms

1753
01:07:47,520 --> 01:07:50,079
who will not

1754
01:07:50,079 --> 01:07:51,599
there's going to be a natural tension

1755
01:07:51,599 --> 01:07:55,359
between devops and appsec luminaries

1756
01:07:55,359 --> 01:07:57,440
policy will try to be enforced as gates

1757
01:07:57,440 --> 01:08:00,720
even when it's configurably easier

1758
01:08:01,119 --> 01:08:02,480
gates will always get in the way of

1759
01:08:02,480 --> 01:08:04,880
delivery

1760
01:08:05,520 --> 01:08:07,680
so the question is how can we focus on

1761
01:08:07,680 --> 01:08:09,119
the things

1762
01:08:09,119 --> 01:08:10,799
that we know will work and we know will

1763
01:08:10,799 --> 01:08:12,319
work for engineering led organizations

1764
01:08:12,319 --> 01:08:13,520
we know work for governance level

1765
01:08:13,520 --> 01:08:14,880
organizations

1766
01:08:14,880 --> 01:08:16,238
everything's becoming code we need to be

1767
01:08:16,238 --> 01:08:18,238
able to scan it be able to scan it when

1768
01:08:18,238 --> 01:08:19,679
it's checked in we need to scan it when

1769
01:08:19,679 --> 01:08:21,198
it's shared we need to scan it before

1770
01:08:21,198 --> 01:08:25,120
it's run to create assets

1771
01:08:25,120 --> 01:08:26,960
we don't have to gate based on what

1772
01:08:26,960 --> 01:08:28,560
those scans tell us but we have to

1773
01:08:28,560 --> 01:08:30,158
deliver that telemetry to developers

1774
01:08:30,158 --> 01:08:31,920
immediately has to get to the right

1775
01:08:31,920 --> 01:08:33,359
developers it has to be combined with

1776
01:08:33,359 --> 01:08:34,479
other information to help us make good

1777
01:08:34,479 --> 01:08:36,959
decisions

1778
01:08:37,679 --> 01:08:39,839
we have to learn how to get rid of that

1779
01:08:39,839 --> 01:08:43,679
that scan cadence and focus on that

1780
01:08:43,839 --> 01:08:45,759
if you take nothing else away from this

1781
01:08:45,759 --> 01:08:48,799
presentation remember

1782
01:08:49,600 --> 01:08:52,238
in the past we tried to shift left

1783
01:08:52,238 --> 01:08:54,238
getting an accurate picture of your

1784
01:08:54,238 --> 01:08:56,799
software's security posture requires you

1785
01:08:56,799 --> 01:08:58,479
to look left

1786
01:08:58,479 --> 01:09:01,520
to look right at behavior

1787
01:09:01,520 --> 01:09:03,600
and to absolutely focus on that

1788
01:09:03,600 --> 01:09:06,000
orchestration the cloud service provider

1789
01:09:06,000 --> 01:09:07,120
config

1790
01:09:07,120 --> 01:09:08,880
and the container constituency in the

1791
01:09:08,880 --> 01:09:10,080
center

1792
01:09:10,080 --> 01:09:11,279
look in the center that's where your

1793
01:09:11,279 --> 01:09:14,238
program is weak right now

1794
01:09:14,238 --> 01:09:16,000
probably

1795
01:09:16,000 --> 01:09:17,439
correlate

1796
01:09:17,439 --> 01:09:19,839
and focus on routing that telemetry from

1797
01:09:19,839 --> 01:09:22,238
left center and right to the right

1798
01:09:22,238 --> 01:09:24,080
engineers

1799
01:09:24,080 --> 01:09:25,920
maybe multiple engineers

1800
01:09:25,920 --> 01:09:27,359
one to handle a band-aid and one to

1801
01:09:27,359 --> 01:09:29,520
handle a proactive fix

1802
01:09:29,520 --> 01:09:32,640
it's more long-standing

1803
01:09:32,640 --> 01:09:34,399
if you're still writing

1804
01:09:34,399 --> 01:09:36,319
security policy

1805
01:09:36,319 --> 01:09:38,479
in building big box checks and you're

1806
01:09:38,479 --> 01:09:41,198
thinking about policy as code skip it

1807
01:09:41,198 --> 01:09:42,799
think about how to do governance as

1808
01:09:42,799 --> 01:09:44,000
config

1809
01:09:44,000 --> 01:09:45,359
developers are thinking about how to

1810
01:09:45,359 --> 01:09:47,679
scale pipelines as config you will need

1811
01:09:47,679 --> 01:09:50,399
to do that too

1812
01:09:50,479 --> 01:09:52,000
guard rails will be the cultural

1813
01:09:52,000 --> 01:09:54,320
instantiation

1814
01:09:54,320 --> 01:09:57,199
of standards and pro for vulnerability

1815
01:09:57,199 --> 01:09:59,520
detection and of proactive measures

1816
01:09:59,520 --> 01:10:01,120
and when it's defined as config it will

1817
01:10:01,120 --> 01:10:02,800
be executable

1818
01:10:02,800 --> 01:10:05,040
and it will be human readable

1819
01:10:05,040 --> 01:10:08,239
which is the best of both worlds

1820
01:10:08,239 --> 01:10:10,000
auto remediation

1821
01:10:10,000 --> 01:10:12,480
is becoming less of a toy and more is

1822
01:10:12,480 --> 01:10:15,199
something that really works

1823
01:10:15,199 --> 01:10:17,760
and it's the functional implementation

1824
01:10:17,760 --> 01:10:19,280
of collapsing the penetration

1825
01:10:19,280 --> 01:10:21,040
penetrating patch loop

1826
01:10:21,040 --> 01:10:22,960
where you can auto remediate fine where

1827
01:10:22,960 --> 01:10:26,239
you can't provide guardrails

1828
01:10:26,400 --> 01:10:29,120
it's still the code stupid

1829
01:10:29,120 --> 01:10:31,600
just understand that the code is

1830
01:10:31,600 --> 01:10:33,920
becoming config for the web development

1831
01:10:33,920 --> 01:10:36,239
frameworks it's becoming config for the

1832
01:10:36,239 --> 01:10:38,159
container's construction

1833
01:10:38,159 --> 01:10:39,360
it's becoming config for the

1834
01:10:39,360 --> 01:10:41,280
orchestration that cobbles together the

1835
01:10:41,280 --> 01:10:44,239
containers services and applications to

1836
01:10:44,239 --> 01:10:46,640
build the business application

1837
01:10:46,640 --> 01:10:49,679
go to where the code is understand that

1838
01:10:49,679 --> 01:10:51,760
in that orchestration layer we have a

1839
01:10:51,760 --> 01:10:54,400
massive technology gap as it pertains to

1840
01:10:54,400 --> 01:10:56,000
scanning that code and we need to fill

1841
01:10:56,000 --> 01:10:59,320
it right now

1842
01:11:01,120 --> 01:11:02,159
find

1843
01:11:02,159 --> 01:11:04,400
vendors that can scan

1844
01:11:04,400 --> 01:11:06,159
your

1845
01:11:06,159 --> 01:11:07,520
cloud

1846
01:11:07,520 --> 01:11:08,719
cloud config

1847
01:11:08,719 --> 01:11:11,280
and your infrastructures code

1848
01:11:11,280 --> 01:11:13,120
and check in all your code

1849
01:11:13,120 --> 01:11:15,120
and make sure that it's being applied so

1850
01:11:15,120 --> 01:11:17,920
scanners are being applied

1851
01:11:21,760 --> 01:11:24,880
the beauty of infrastructures code being

1852
01:11:24,880 --> 01:11:27,120
config

1853
01:11:27,120 --> 01:11:29,040
is that it makes

1854
01:11:29,040 --> 01:11:31,120
technologies that got long in the tooth

1855
01:11:31,120 --> 01:11:33,120
and that tried to maybe tackle too much

1856
01:11:33,120 --> 01:11:34,480
commercially

1857
01:11:34,480 --> 01:11:36,239
tractable again

1858
01:11:36,239 --> 01:11:38,560
so look at those open source solutions

1859
01:11:38,560 --> 01:11:40,560
and see where they can apply

1860
01:11:40,560 --> 01:11:42,080
if you can't find a tool to do the job

1861
01:11:42,080 --> 01:11:44,400
for you

1862
01:11:50,000 --> 01:11:52,400
as i think about security

1863
01:11:52,400 --> 01:11:54,640
i usually give a very negative

1864
01:11:54,640 --> 01:11:55,840
talk

1865
01:11:55,840 --> 01:11:57,440
about how technology is changing and

1866
01:11:57,440 --> 01:11:59,040
security can't keep up

1867
01:11:59,040 --> 01:12:00,560
the thing i want to leave people with

1868
01:12:00,560 --> 01:12:02,159
today

1869
01:12:02,159 --> 01:12:03,280
is that

1870
01:12:03,280 --> 01:12:04,320
this

1871
01:12:04,320 --> 01:12:07,040
transformation to self-service that

1872
01:12:07,040 --> 01:12:10,000
developers are undertaking this reliance

1873
01:12:10,000 --> 01:12:13,120
on reusable things like containers

1874
01:12:13,120 --> 01:12:14,400
pipelines

1875
01:12:14,400 --> 01:12:16,400
infrastructures code

1876
01:12:16,400 --> 01:12:17,840
cloud config

1877
01:12:17,840 --> 01:12:20,320
it's actually a godsend

1878
01:12:20,320 --> 01:12:23,679
our ability is security to skip over the

1879
01:12:23,679 --> 01:12:26,800
kind of linear automations and scale we

1880
01:12:26,800 --> 01:12:29,760
were looking for champions um

1881
01:12:29,760 --> 01:12:31,679
you know policies codes you know

1882
01:12:31,679 --> 01:12:33,199
scanning rules

1883
01:12:33,199 --> 01:12:35,040
our ability to skip over those things

1884
01:12:35,040 --> 01:12:36,800
and meet developers

1885
01:12:36,800 --> 01:12:39,360
at self-servicing security

1886
01:12:39,360 --> 01:12:43,520
configuration and guardrails as config

1887
01:12:43,520 --> 01:12:45,360
this is it for us we need to get on this

1888
01:12:45,360 --> 01:12:47,600
train and i encourage everybody to go

1889
01:12:47,600 --> 01:12:48,560
learn

1890
01:12:48,560 --> 01:12:50,719
these technologies and get on this train

1891
01:12:50,719 --> 01:12:52,080
in the organization

1892
01:12:52,080 --> 01:12:53,760
because missing this train means that

1893
01:12:53,760 --> 01:12:55,360
the engineers will have defined what

1894
01:12:55,360 --> 01:12:58,000
security means as they self-service i t

1895
01:12:58,000 --> 01:12:59,840
all the way up

1896
01:12:59,840 --> 01:13:01,280
if you engage them and learn these

1897
01:13:01,280 --> 01:13:02,880
technologies you have the opportunity to

1898
01:13:02,880 --> 01:13:04,320
meet them at the point of scale at the

1899
01:13:04,320 --> 01:13:06,640
fulcrum right now

1900
01:13:06,640 --> 01:13:10,320
and this is absolutely an essential

1901
01:13:10,320 --> 01:13:12,000
and exciting time to be a security

1902
01:13:12,000 --> 01:13:14,640
person as a result

1903
01:13:14,640 --> 01:13:17,520
thank you for your time and attention

1904
01:13:17,520 --> 01:13:19,760
and and uh and and putting up with this

1905
01:13:19,760 --> 01:13:22,719
weird format i uh i wish i could have um

1906
01:13:22,719 --> 01:13:26,000
been there in person to see all of you

1907
01:13:26,880 --> 01:13:28,239
thank you john for that great

1908
01:13:28,239 --> 01:13:30,320
presentation if you're interested in

1909
01:13:30,320 --> 01:13:32,080
hearing more from john he'll be holding

1910
01:13:32,080 --> 01:13:34,560
a q a session right after our closing

1911
01:13:34,560 --> 01:13:36,960
remarks but the conference isn't over

1912
01:13:36,960 --> 01:13:38,560
yet

1913
01:13:38,560 --> 01:13:41,520
our virtual expo hall is still open now

1914
01:13:41,520 --> 01:13:43,440
until 5 pm

1915
01:13:43,440 --> 01:13:45,199
you still have a chance to chat with our

1916
01:13:45,199 --> 01:13:47,360
sponsors and enter the scavenger hunt

1917
01:13:47,360 --> 01:13:50,159
for a chance to win a 500 amazon gift

1918
01:13:50,159 --> 01:13:51,520
card

1919
01:13:51,520 --> 01:13:53,280
our virtual career fair will be taking

1920
01:13:53,280 --> 01:13:54,880
place tomorrow morning

1921
01:13:54,880 --> 01:13:57,280
log in at 9 00 am to speak to live

1922
01:13:57,280 --> 01:13:59,360
recruiters

1923
01:13:59,360 --> 01:14:01,120
and we have one more round of live

1924
01:14:01,120 --> 01:14:02,640
networking sessions happening this

1925
01:14:02,640 --> 01:14:04,320
afternoon

1926
01:14:04,320 --> 01:14:06,239
now i'll turn it over to the owasp

1927
01:14:06,239 --> 01:14:10,639
executive director andrew vander stalk

1928
01:14:11,360 --> 01:14:13,280
thank you everyone for attending this

1929
01:14:13,280 --> 01:14:15,760
brand new appset global

1930
01:14:15,760 --> 01:14:16,800
we

1931
01:14:16,800 --> 01:14:18,719
obviously are in a difficult time with

1932
01:14:18,719 --> 01:14:20,719
the uh covered but this has actually

1933
01:14:20,719 --> 01:14:21,600
been an

1934
01:14:21,600 --> 01:14:23,679
unbelievable experience for us we've

1935
01:14:23,679 --> 01:14:25,440
learnt so much during this event and

1936
01:14:25,440 --> 01:14:26,640
we're going to be doing more of them

1937
01:14:26,640 --> 01:14:29,520
next year so thank you for attending i

1938
01:14:29,520 --> 01:14:31,520
hope that you actually make full use of

1939
01:14:31,520 --> 01:14:34,239
the remaining time to review all of the

1940
01:14:34,239 --> 01:14:36,640
talks you haven't yet seen

1941
01:14:36,640 --> 01:14:39,280
and have a look at the expo booths

1942
01:14:39,280 --> 01:14:40,719
talking about that

1943
01:14:40,719 --> 01:14:42,719
here are sponsors and thank you so much

1944
01:14:42,719 --> 01:14:44,560
without the sponsors we would not have

1945
01:14:44,560 --> 01:14:47,199
an event this year and they've really

1946
01:14:47,199 --> 01:14:48,719
taken a chance

1947
01:14:48,719 --> 01:14:51,280
you know betting upon a virtual event

1948
01:14:51,280 --> 01:14:53,280
um it actually has worked out really

1949
01:14:53,280 --> 01:14:55,440
well we've had a lot of hours being

1950
01:14:55,440 --> 01:14:58,080
broadcast and i think if you could help

1951
01:14:58,080 --> 01:15:00,480
us out by helping the sponsors out by

1952
01:15:00,480 --> 01:15:02,239
visiting the expo booths

1953
01:15:02,239 --> 01:15:05,040
looking at what they've got to offer and

1954
01:15:05,040 --> 01:15:06,719
entering into the swag and prize

1955
01:15:06,719 --> 01:15:08,719
competitions that would be really good

1956
01:15:08,719 --> 01:15:12,480
so thank you again for that sponsors

1957
01:15:14,000 --> 01:15:16,239
so we've had over 1600 attendees and

1958
01:15:16,239 --> 01:15:18,400
this week's one of the larger events

1959
01:15:18,400 --> 01:15:20,640
we've ever held we have held some pretty

1960
01:15:20,640 --> 01:15:22,480
large events but we're actually doing so

1961
01:15:22,480 --> 01:15:25,679
well that even after we go back to doing

1962
01:15:25,679 --> 01:15:27,760
in-person events we're very likely to

1963
01:15:27,760 --> 01:15:29,679
continue having at least one or two of

1964
01:15:29,679 --> 01:15:31,920
these global upsets in a year just

1965
01:15:31,920 --> 01:15:33,520
simply because it has been quite

1966
01:15:33,520 --> 01:15:36,800
successful we've had over 84 countries

1967
01:15:36,800 --> 01:15:38,480
registered to attend

1968
01:15:38,480 --> 01:15:42,320
which is remarkable we'd only often get

1969
01:15:42,320 --> 01:15:44,080
people coming in from overseas generally

1970
01:15:44,080 --> 01:15:46,480
from the speakers

1971
01:15:46,480 --> 01:15:47,760
but

1972
01:15:47,760 --> 01:15:49,280
this has been truly remarkable that

1973
01:15:49,280 --> 01:15:51,679
we've had such great coverage and it

1974
01:15:51,679 --> 01:15:53,840
shows the thirst for high quality

1975
01:15:53,840 --> 01:15:55,760
content and we're going to be continuing

1976
01:15:55,760 --> 01:15:58,480
to do that next year

1977
01:15:58,480 --> 01:16:00,800
we obviously have over 40 hours of

1978
01:16:00,800 --> 01:16:02,239
on-demand presentations that you're

1979
01:16:02,239 --> 01:16:04,000
still able to access

1980
01:16:04,000 --> 01:16:05,840
many of those have been viewed many

1981
01:16:05,840 --> 01:16:08,080
hundreds if not thousands of times

1982
01:16:08,080 --> 01:16:11,040
um i've personally you know i tend to

1983
01:16:11,040 --> 01:16:13,040
attend an event and i'll go to three or

1984
01:16:13,040 --> 01:16:15,679
four event um you know talks a day

1985
01:16:15,679 --> 01:16:18,239
i've actually seen over 20 of those

1986
01:16:18,239 --> 01:16:20,719
this is an amazing way of you know

1987
01:16:20,719 --> 01:16:22,880
instead of getting death by zoom or

1988
01:16:22,880 --> 01:16:24,719
having to do things in a compressed time

1989
01:16:24,719 --> 01:16:27,120
period when i've got time i can watch a

1990
01:16:27,120 --> 01:16:29,199
session this is actually really good and

1991
01:16:29,199 --> 01:16:31,520
it's a new way of consuming uh

1992
01:16:31,520 --> 01:16:32,400
our

1993
01:16:32,400 --> 01:16:34,000
the leading edge information that's

1994
01:16:34,000 --> 01:16:37,360
available in our industry

1995
01:16:38,400 --> 01:16:41,360
so again a call to action please become

1996
01:16:41,360 --> 01:16:44,080
a member we are looking for people to

1997
01:16:44,080 --> 01:16:44,960
become

1998
01:16:44,960 --> 01:16:48,320
individual student regional and lifetime

1999
01:16:48,320 --> 01:16:50,000
members

2000
01:16:50,000 --> 01:16:51,920
for leaders who are active and you've

2001
01:16:51,920 --> 01:16:53,920
been in the job for more than six months

2002
01:16:53,920 --> 01:16:55,600
we are actually offering complimentary

2003
01:16:55,600 --> 01:16:57,840
lead our membership very shortly be on

2004
01:16:57,840 --> 01:17:00,000
the lookout for that

2005
01:17:00,000 --> 01:17:02,640
become a sponsor if you're a corporate

2006
01:17:02,640 --> 01:17:05,600
member or corporate event sponsor you

2007
01:17:05,600 --> 01:17:07,360
actually have access to a very large

2008
01:17:07,360 --> 01:17:09,600
audience and it is wonderful to see the

2009
01:17:09,600 --> 01:17:11,679
support that we've had for this event

2010
01:17:11,679 --> 01:17:13,199
alone

2011
01:17:13,199 --> 01:17:15,280
we do have corporate membership packages

2012
01:17:15,280 --> 01:17:16,880
and we are looking for people to join

2013
01:17:16,880 --> 01:17:19,760
the corporate advisory board

2014
01:17:19,760 --> 01:17:22,159
create or join a project this is the

2015
01:17:22,159 --> 01:17:23,840
lifeblood of ours this is what we're

2016
01:17:23,840 --> 01:17:26,080
famous for

2017
01:17:26,080 --> 01:17:28,159
you know come for projects stay for the

2018
01:17:28,159 --> 01:17:30,480
chapters our community there's local

2019
01:17:30,480 --> 01:17:31,520
chapters

2020
01:17:31,520 --> 01:17:33,440
we've got heaps of virtual

2021
01:17:33,440 --> 01:17:35,280
events happening at the moment i would

2022
01:17:35,280 --> 01:17:36,640
recommend that if you're a chapter

2023
01:17:36,640 --> 01:17:38,640
leader and you haven't held events

2024
01:17:38,640 --> 01:17:41,199
virtually yet please do reach out to us

2025
01:17:41,199 --> 01:17:43,280
we've got plenty options available to

2026
01:17:43,280 --> 01:17:46,800
you through both meetup and through

2027
01:17:46,800 --> 01:17:48,880
running zoom meetings we actually do

2028
01:17:48,880 --> 01:17:51,040
have the ability to run very very large

2029
01:17:51,040 --> 01:17:53,360
virtual events including the size that

2030
01:17:53,360 --> 01:17:55,360
you're seeing today

2031
01:17:55,360 --> 01:17:57,440
i would recommend that if you're

2032
01:17:57,440 --> 01:17:58,880
interested in running a regional event

2033
01:17:58,880 --> 01:18:01,360
in your area we've done some recently

2034
01:18:01,360 --> 01:18:03,679
for example apsec africa we're going to

2035
01:18:03,679 --> 01:18:06,800
be running absentee indonesia shortly

2036
01:18:06,800 --> 01:18:09,199
those would only be possible with local

2037
01:18:09,199 --> 01:18:10,880
members working

2038
01:18:10,880 --> 01:18:13,040
tirelessly to create a local event for

2039
01:18:13,040 --> 01:18:14,400
themselves

2040
01:18:14,400 --> 01:18:16,000
the next two events are actually going

2041
01:18:16,000 --> 01:18:19,679
to be absec israel and absec indonesia i

2042
01:18:19,679 --> 01:18:21,360
would strongly hope that you could

2043
01:18:21,360 --> 01:18:22,800
actually attend those if you're in the

2044
01:18:22,800 --> 01:18:25,120
area

2045
01:18:25,120 --> 01:18:27,440
please feel free to join committees the

2046
01:18:27,440 --> 01:18:28,560
committee's

2047
01:18:28,560 --> 01:18:31,199
business is um completely transparent

2048
01:18:31,199 --> 01:18:33,760
there is an os events calendar that you

2049
01:18:33,760 --> 01:18:35,840
can join and the committees and the

2050
01:18:35,840 --> 01:18:37,199
global board meetings should be

2051
01:18:37,199 --> 01:18:39,040
advertised regularly

2052
01:18:39,040 --> 01:18:41,760
the global board held a global board

2053
01:18:41,760 --> 01:18:43,600
meeting

2054
01:18:43,600 --> 01:18:45,840
on tuesday this week and that would be

2055
01:18:45,840 --> 01:18:47,679
normally something that we would do

2056
01:18:47,679 --> 01:18:49,440
every single

2057
01:18:49,440 --> 01:18:51,679
normal global laptop event i would

2058
01:18:51,679 --> 01:18:53,840
strongly recommend that you do attend

2059
01:18:53,840 --> 01:18:55,199
global board meetings if you're

2060
01:18:55,199 --> 01:18:56,560
interested in the governance of the

2061
01:18:56,560 --> 01:18:58,400
foundation

2062
01:18:58,400 --> 01:19:01,840
lastly in 2021 we will be doing a fair

2063
01:19:01,840 --> 01:19:04,480
amount of fundraising donations and we

2064
01:19:04,480 --> 01:19:06,000
will be doing sponsorship drives and

2065
01:19:06,000 --> 01:19:08,239
membership drives please support our

2066
01:19:08,239 --> 01:19:09,920
efforts in those areas either

2067
01:19:09,920 --> 01:19:12,320
financially or get out there and help us

2068
01:19:12,320 --> 01:19:14,960
do the fundraising donations or

2069
01:19:14,960 --> 01:19:16,719
membership drives we really do

2070
01:19:16,719 --> 01:19:20,480
appreciate all of everyone's help in

2071
01:19:20,480 --> 01:19:22,560
sustaining the os

2072
01:19:22,560 --> 01:19:25,040
community

2073
01:19:25,679 --> 01:19:28,159
thank you so much the os staff the uh

2074
01:19:28,159 --> 01:19:30,480
alana and emily and kelly have worked

2075
01:19:30,480 --> 01:19:32,560
tirelessly to get this event running so

2076
01:19:32,560 --> 01:19:34,719
i particularly called out those folks

2077
01:19:34,719 --> 01:19:37,679
but everybody here has pulled together

2078
01:19:37,679 --> 01:19:39,920
um and really made oh us what it is this

2079
01:19:39,920 --> 01:19:40,719
year

2080
01:19:40,719 --> 01:19:43,520
um we are looking forward to a fantastic

2081
01:19:43,520 --> 01:19:45,760
2121 when we put this covert thing

2082
01:19:45,760 --> 01:19:47,040
behind us

2083
01:19:47,040 --> 01:19:49,040
i would strongly recommend that you know

2084
01:19:49,040 --> 01:19:50,800
if you've not said thank you to our

2085
01:19:50,800 --> 01:19:53,440
staff for helping you please do reach

2086
01:19:53,440 --> 01:19:55,360
out to them they love getting positive

2087
01:19:55,360 --> 01:19:57,839
feedback

2088
01:19:58,960 --> 01:20:01,120
closing remarks

2089
01:20:01,120 --> 01:20:03,440
it's time to rebuild omos

2090
01:20:03,440 --> 01:20:05,040
the foundation

2091
01:20:05,040 --> 01:20:09,199
has for its first 19 years sort of

2092
01:20:09,199 --> 01:20:11,440
gone from thing to thing to thing to

2093
01:20:11,440 --> 01:20:13,440
thing and we've done pretty well for

2094
01:20:13,440 --> 01:20:15,360
ourselves we've become the global

2095
01:20:15,360 --> 01:20:18,320
organization that is known for apsec

2096
01:20:18,320 --> 01:20:20,320
there are very few that are like us in

2097
01:20:20,320 --> 01:20:23,199
terms of size reach or impact

2098
01:20:23,199 --> 01:20:25,440
and i want to see that continue but we

2099
01:20:25,440 --> 01:20:27,920
need to focus on our mission

2100
01:20:27,920 --> 01:20:30,080
this year we've seen some pretty

2101
01:20:30,080 --> 01:20:33,040
terrible community interactions where

2102
01:20:33,040 --> 01:20:34,400
people have been

2103
01:20:34,400 --> 01:20:36,239
pulling each other down

2104
01:20:36,239 --> 01:20:38,400
it's time to end that

2105
01:20:38,400 --> 01:20:40,960
the community is running the community

2106
01:20:40,960 --> 01:20:42,719
and to do that we need everyone to pull

2107
01:20:42,719 --> 01:20:44,719
together and we can only do that if we

2108
01:20:44,719 --> 01:20:47,360
help each other if you're pulling people

2109
01:20:47,360 --> 01:20:48,159
down

2110
01:20:48,159 --> 01:20:50,400
i'd like you to leave

2111
01:20:50,400 --> 01:20:53,120
if you're helping people mentoring

2112
01:20:53,120 --> 01:20:55,760
building projects running chapters

2113
01:20:55,760 --> 01:20:58,560
helping people answering them on slack

2114
01:20:58,560 --> 01:21:01,280
that is exactly what we're famous for

2115
01:21:01,280 --> 01:21:02,960
if we're becoming famous for being a

2116
01:21:02,960 --> 01:21:05,360
toxic community

2117
01:21:05,360 --> 01:21:07,360
then that's not a good place for us it

2118
01:21:07,360 --> 01:21:10,000
can kill our entire community and in

2119
01:21:10,000 --> 01:21:11,280
fact that's the reason why i'm doing

2120
01:21:11,280 --> 01:21:14,239
this presentation our chair felt that it

2121
01:21:14,239 --> 01:21:15,120
was

2122
01:21:15,120 --> 01:21:16,719
not the right time or place for him to

2123
01:21:16,719 --> 01:21:19,600
actually do this presentation

2124
01:21:19,600 --> 01:21:21,280
that's incredibly sad

2125
01:21:21,280 --> 01:21:23,360
i like to think positive at the end of

2126
01:21:23,360 --> 01:21:26,080
the day if we can start building up

2127
01:21:26,080 --> 01:21:28,239
everything again in the way that's an

2128
01:21:28,239 --> 01:21:30,080
oauth way

2129
01:21:30,080 --> 01:21:31,520
we will get there

2130
01:21:31,520 --> 01:21:34,239
if we start thinking about devsecops and

2131
01:21:34,239 --> 01:21:37,679
working with developers not against them

2132
01:21:37,679 --> 01:21:40,560
with our community not against them

2133
01:21:40,560 --> 01:21:43,120
and building up the next generation we

2134
01:21:43,120 --> 01:21:46,639
will have a fantastic next 20 years

2135
01:21:46,639 --> 01:21:48,400
i need everyone to come along for this

2136
01:21:48,400 --> 01:21:50,080
journey and the only way for you to do

2137
01:21:50,080 --> 01:21:51,840
that is to participate

2138
01:21:51,840 --> 01:21:53,280
if everyone is busy yelling and

2139
01:21:53,280 --> 01:21:54,960
screaming and talking past each other

2140
01:21:54,960 --> 01:21:56,719
that's not going to happen

2141
01:21:56,719 --> 01:21:58,159
join and then become part of the

2142
01:21:58,159 --> 01:22:01,520
solution don't be part of the problem

2143
01:22:01,520 --> 01:22:02,400
again

2144
01:22:02,400 --> 01:22:05,040
i'm looking for positivity here we've

2145
01:22:05,040 --> 01:22:07,760
had positivity for many many years

2146
01:22:07,760 --> 01:22:11,199
and for whatever reason 2020 has been a

2147
01:22:11,199 --> 01:22:12,880
terrible year for many people and i

2148
01:22:12,880 --> 01:22:14,960
think it's brought out the worst in some

2149
01:22:14,960 --> 01:22:16,639
and it's time for us to put all of that

2150
01:22:16,639 --> 01:22:19,040
behind us and get going again with what

2151
01:22:19,040 --> 01:22:21,440
oas is about which is helping build

2152
01:22:21,440 --> 01:22:23,120
secure applications

2153
01:22:23,120 --> 01:22:24,719
we can only do that together as a

2154
01:22:24,719 --> 01:22:27,440
community we can only get the mind share

2155
01:22:27,440 --> 01:22:29,600
with developers if we're pulling

2156
01:22:29,600 --> 01:22:31,760
together in the same direction

2157
01:22:31,760 --> 01:22:33,600
that direction is now reasonably well

2158
01:22:33,600 --> 01:22:36,960
set but the details the devil is on the

2159
01:22:36,960 --> 01:22:41,280
details how we get there and what we do

2160
01:22:41,280 --> 01:22:43,840
we need to build these things together

2161
01:22:43,840 --> 01:22:46,080
the photo you see there are some of our

2162
01:22:46,080 --> 01:22:46,960
most

2163
01:22:46,960 --> 01:22:49,679
active people in our community for

2164
01:22:49,679 --> 01:22:53,760
example dr dirk wetter spiros who's the

2165
01:22:53,760 --> 01:22:55,920
driving force behind the outreach and

2166
01:22:55,920 --> 01:22:58,719
the chapters committee

2167
01:22:58,880 --> 01:23:01,120
and you know at the end of the day

2168
01:23:01,120 --> 01:23:03,840
i really want to make sure that we are

2169
01:23:03,840 --> 01:23:04,960
all

2170
01:23:04,960 --> 01:23:07,040
able to have happy smiley photos in

2171
01:23:07,040 --> 01:23:08,320
everything we do

2172
01:23:08,320 --> 01:23:10,880
at os if we're actually

2173
01:23:10,880 --> 01:23:12,719
fighting each other that's not going to

2174
01:23:12,719 --> 01:23:14,800
be like that anymore

2175
01:23:14,800 --> 01:23:17,280
i want to build this community up i want

2176
01:23:17,280 --> 01:23:19,920
to get to 10 000 members i want to have

2177
01:23:19,920 --> 01:23:22,880
a thousand projects i want us to be

2178
01:23:22,880 --> 01:23:24,960
deliberately involved in setting the

2179
01:23:24,960 --> 01:23:27,520
agenda for application security not only

2180
01:23:27,520 --> 01:23:29,840
in the next 20 years but over the next

2181
01:23:29,840 --> 01:23:30,800
five

2182
01:23:30,800 --> 01:23:32,480
the only way for us to do this is to

2183
01:23:32,480 --> 01:23:34,960
refocus on our mission and give up all

2184
01:23:34,960 --> 01:23:38,239
of the drama and all of the negativity

2185
01:23:38,239 --> 01:23:39,840
just let it go

2186
01:23:39,840 --> 01:23:41,280
put it behind us

2187
01:23:41,280 --> 01:23:43,040
work with the people that you felt that

2188
01:23:43,040 --> 01:23:45,520
you weren't communicating well with

2189
01:23:45,520 --> 01:23:47,679
i've done this it's really important

2190
01:23:47,679 --> 01:23:49,760
that the community comes together now

2191
01:23:49,760 --> 01:23:52,159
we've had a bad year let's put it behind

2192
01:23:52,159 --> 01:23:55,840
us and work very positively on events

2193
01:23:55,840 --> 01:23:59,199
chapters projects and of course getting

2194
01:23:59,199 --> 01:24:00,800
out there and promoting the application

2195
01:24:00,800 --> 01:24:03,280
security mission i really encourage

2196
01:24:03,280 --> 01:24:06,320
everyone to get involved

2197
01:24:07,199 --> 01:24:10,159
so see you next year i would love to see

2198
01:24:10,159 --> 01:24:12,159
you in person next year but in all

2199
01:24:12,159 --> 01:24:13,840
likelihood it's going to be a virtual

2200
01:24:13,840 --> 01:24:16,239
event however we are looking at running

2201
01:24:16,239 --> 01:24:20,320
a physical event in australia next year

2202
01:24:20,320 --> 01:24:22,159
more details as they come

2203
01:24:22,159 --> 01:24:25,360
our next virtual event will be in may in

2204
01:24:25,360 --> 01:24:28,400
to take place of the dublin event we'll

2205
01:24:28,400 --> 01:24:30,320
announce those details and a full

2206
01:24:30,320 --> 01:24:32,719
calendar of events very shortly please

2207
01:24:32,719 --> 01:24:35,120
keep your ears posted for any signs of

2208
01:24:35,120 --> 01:24:37,920
new events and as i said apsec israel is

2209
01:24:37,920 --> 01:24:40,239
coming up very very shortly and absent

2210
01:24:40,239 --> 01:24:42,400
indonesia is coming up shortly as well

2211
01:24:42,400 --> 01:24:43,920
if you are in those regions please

2212
01:24:43,920 --> 01:24:45,280
participate

2213
01:24:45,280 --> 01:24:47,040
i would strongly recommend getting

2214
01:24:47,040 --> 01:24:48,960
involved in any regional events

2215
01:24:48,960 --> 01:24:52,320
thank you thank you for your time

2216
01:24:52,800 --> 01:24:54,639
thank you andrew for those of you

2217
01:24:54,639 --> 01:24:56,560
interested in that q a session with john

2218
01:24:56,560 --> 01:24:57,600
stephen

2219
01:24:57,600 --> 01:25:00,159
click the link in the description below

2220
01:25:00,159 --> 01:25:02,159
you'll be muted when you enter in order

2221
01:25:02,159 --> 01:25:04,560
to ask a question you can do so in the

2222
01:25:04,560 --> 01:25:06,639
chat if we need you to elaborate we'll

2223
01:25:06,639 --> 01:25:07,920
unmute you

2224
01:25:07,920 --> 01:25:10,560
sadly we only have room for 500 people

2225
01:25:10,560 --> 01:25:12,719
so the first 500 folks will be able to

2226
01:25:12,719 --> 01:25:13,600
join

2227
01:25:13,600 --> 01:25:15,199
thank you we hope you had a great

2228
01:25:15,199 --> 01:25:19,638
conference and we'll see you next year

2229
01:25:37,920 --> 01:25:40,000
you

