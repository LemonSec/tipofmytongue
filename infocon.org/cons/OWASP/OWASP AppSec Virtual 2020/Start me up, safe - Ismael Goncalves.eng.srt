1
00:00:00,160 --> 00:00:01,839
acunetix helps thousands of

2
00:00:01,839 --> 00:00:04,000
organizations secure their websites and

3
00:00:04,000 --> 00:00:06,240
web applications across the globe

4
00:00:06,240 --> 00:00:07,759
whether you're a one-person team

5
00:00:07,759 --> 00:00:09,920
ensuring the security of a few websites

6
00:00:09,920 --> 00:00:12,000
or a large organization interested in

7
00:00:12,000 --> 00:00:13,599
automating your web vulnerability

8
00:00:13,599 --> 00:00:16,000
assessment and management acunetix is

9
00:00:16,000 --> 00:00:18,640
here to help

10
00:00:19,039 --> 00:00:22,000
hello everyone thanks for joining uh

11
00:00:22,000 --> 00:00:25,760
welcome to the roblox global upset 2020

12
00:00:25,760 --> 00:00:27,680
the virtual edition

13
00:00:27,680 --> 00:00:30,320
my name is ismail gonzalez and this

14
00:00:30,320 --> 00:00:35,200
presentation is called start me up safe

15
00:00:35,200 --> 00:00:37,760
let's go over that mandatory slide who i

16
00:00:37,760 --> 00:00:39,520
am

17
00:00:39,520 --> 00:00:41,040
i've been working in the

18
00:00:41,040 --> 00:00:43,200
information security industry

19
00:00:43,200 --> 00:00:45,440
specifically application security for

20
00:00:45,440 --> 00:00:48,160
about 13 years

21
00:00:48,160 --> 00:00:50,320
along with my career i've done

22
00:00:50,320 --> 00:00:52,000
lots of i've played lots of different

23
00:00:52,000 --> 00:00:53,120
roles

24
00:00:53,120 --> 00:00:54,239
such as

25
00:00:54,239 --> 00:00:55,840
developer

26
00:00:55,840 --> 00:00:59,600
building security solutions to companies

27
00:00:59,600 --> 00:01:02,320
pain tester performed lots of code

28
00:01:02,320 --> 00:01:03,760
review

29
00:01:03,760 --> 00:01:05,920
consulting and also in different

30
00:01:05,920 --> 00:01:07,920
industries such as government and the

31
00:01:07,920 --> 00:01:10,479
private sector especially the finance

32
00:01:10,479 --> 00:01:12,080
sector

33
00:01:12,080 --> 00:01:14,080
currently i'm a senior security

34
00:01:14,080 --> 00:01:15,920
consultant in f5

35
00:01:15,920 --> 00:01:19,360
and i'm also a cyber security advisor

36
00:01:19,360 --> 00:01:21,200
and i start up

37
00:01:21,200 --> 00:01:22,560
related with

38
00:01:22,560 --> 00:01:24,159
social network

39
00:01:24,159 --> 00:01:27,040
i'm also a former owasp chapter leader

40
00:01:27,040 --> 00:01:29,920
dao in brazil i am brazilian and i don't

41
00:01:29,920 --> 00:01:32,000
know how to dance samba

42
00:01:32,000 --> 00:01:34,720
uh i'm also i've made contributions to

43
00:01:34,720 --> 00:01:35,439
the

44
00:01:35,439 --> 00:01:37,920
some of the wasps projects such as the

45
00:01:37,920 --> 00:01:40,960
oas testing guide the yoga cheek shift

46
00:01:40,960 --> 00:01:45,040
and also the oas zap proxy communities

47
00:01:45,040 --> 00:01:46,799
i'm also a bug hunter

48
00:01:46,799 --> 00:01:48,159
and one of

49
00:01:48,159 --> 00:01:49,600
known

50
00:01:49,600 --> 00:01:51,920
bug bouncy initiatives

51
00:01:51,920 --> 00:01:52,640
and

52
00:01:52,640 --> 00:01:54,560
i put things and share things with the

53
00:01:54,560 --> 00:01:55,920
community

54
00:01:55,920 --> 00:01:57,200
on the

55
00:01:57,200 --> 00:02:00,320
on my github flash hiring colleges and

56
00:02:00,320 --> 00:02:01,439
also

57
00:02:01,439 --> 00:02:04,479
i blog when there is some specific time

58
00:02:04,479 --> 00:02:07,798
at the sharingfact.net

59
00:02:08,720 --> 00:02:10,878
so

60
00:02:10,959 --> 00:02:12,720
start me up safe

61
00:02:12,720 --> 00:02:15,280
um when i came up with this presentation

62
00:02:15,280 --> 00:02:18,480
topic i was i was thinking about

63
00:02:18,480 --> 00:02:21,040
about these small start lines especially

64
00:02:21,040 --> 00:02:24,000
they come up with like great ideas and

65
00:02:24,000 --> 00:02:26,160
those small companies

66
00:02:26,160 --> 00:02:27,680
and

67
00:02:27,680 --> 00:02:29,680
uh it's time to build their solutions

68
00:02:29,680 --> 00:02:31,599
and i was thinking

69
00:02:31,599 --> 00:02:34,000
you know they they might be struggling a

70
00:02:34,000 --> 00:02:35,599
lot to

71
00:02:35,599 --> 00:02:37,440
add security on top of the products and

72
00:02:37,440 --> 00:02:39,440
i was thinking how they could do better

73
00:02:39,440 --> 00:02:41,760
you know how we could consider all the

74
00:02:41,760 --> 00:02:43,120
challenges that we'd be seeing those

75
00:02:43,120 --> 00:02:45,040
kind of companies that they they suffer

76
00:02:45,040 --> 00:02:46,640
how they could do how they could do

77
00:02:46,640 --> 00:02:49,599
better and starting in certain security

78
00:02:49,599 --> 00:02:51,040
in their process

79
00:02:51,040 --> 00:02:53,280
since day one

80
00:02:53,280 --> 00:02:55,599
and there are a couple of numbers here

81
00:02:55,599 --> 00:02:57,440
uh quite interesting

82
00:02:57,440 --> 00:03:00,400
there is this research from vodafone

83
00:03:00,400 --> 00:03:02,640
that says that 80 of the high growth

84
00:03:02,640 --> 00:03:04,959
companies see superior as a business

85
00:03:04,959 --> 00:03:06,000
enabler

86
00:03:06,000 --> 00:03:07,920
and what does that mean see security as

87
00:03:07,920 --> 00:03:09,680
a business enabler

88
00:03:09,680 --> 00:03:11,680
that means that

89
00:03:11,680 --> 00:03:14,159
those leaders from those companies

90
00:03:14,159 --> 00:03:15,200
they

91
00:03:15,200 --> 00:03:18,800
see a security as a school to

92
00:03:18,800 --> 00:03:21,200
increase the business partnership to

93
00:03:21,200 --> 00:03:23,920
retain customer loyalty

94
00:03:23,920 --> 00:03:26,480
and to

95
00:03:26,480 --> 00:03:28,959
to be ready to expand

96
00:03:28,959 --> 00:03:30,159
the markets

97
00:03:30,159 --> 00:03:33,280
right and also being in compliance with

98
00:03:33,280 --> 00:03:36,080
regulations and law those who allow them

99
00:03:36,080 --> 00:03:37,040
to

100
00:03:37,040 --> 00:03:40,000
to expand their business and

101
00:03:40,000 --> 00:03:42,560
expand their partnerships in general

102
00:03:42,560 --> 00:03:43,599
however

103
00:03:43,599 --> 00:03:46,480
60 of the smaller business

104
00:03:46,480 --> 00:03:48,560
companies they are feeling poorly

105
00:03:48,560 --> 00:03:50,400
informed about security and this of

106
00:03:50,400 --> 00:03:52,480
course is security in general imagine

107
00:03:52,480 --> 00:03:55,439
now application security which is a

108
00:03:55,439 --> 00:03:57,680
quite complex topic as you can see we

109
00:03:57,680 --> 00:03:59,680
have a whole conference dedicated to app

110
00:03:59,680 --> 00:04:02,000
sex

111
00:04:02,720 --> 00:04:04,319
another number that caught my attention

112
00:04:04,319 --> 00:04:06,400
is the verizon data breach investigation

113
00:04:06,400 --> 00:04:10,080
report so in 2019 out of all the

114
00:04:10,080 --> 00:04:12,720
incidents that they investigated 28

115
00:04:12,720 --> 00:04:14,560
of the incidence

116
00:04:14,560 --> 00:04:16,720
of the data breach they were from small

117
00:04:16,720 --> 00:04:18,959
business what does that mean from those

118
00:04:18,959 --> 00:04:20,238
small companies

119
00:04:20,238 --> 00:04:22,079
that means that they are getting

120
00:04:22,079 --> 00:04:23,120
targeted

121
00:04:23,120 --> 00:04:25,040
either they are getting attacked

122
00:04:25,040 --> 00:04:28,080
directly on a target attacked or if

123
00:04:28,080 --> 00:04:30,400
there is something in the wild just

124
00:04:30,400 --> 00:04:32,000
happen to hit their servers their

125
00:04:32,000 --> 00:04:33,759
applications and

126
00:04:33,759 --> 00:04:34,960
and

127
00:04:34,960 --> 00:04:36,960
breach their systems

128
00:04:36,960 --> 00:04:39,360
and that is not a surprise right if you

129
00:04:39,360 --> 00:04:40,960
think that okay i have this small

130
00:04:40,960 --> 00:04:42,800
company i'm just discarding that i have

131
00:04:42,800 --> 00:04:44,560
this only application still not in

132
00:04:44,560 --> 00:04:46,639
production if you put the server in the

133
00:04:46,639 --> 00:04:47,520
cloud

134
00:04:47,520 --> 00:04:49,440
it's just a matter of minutes for the

135
00:04:49,440 --> 00:04:51,440
first http request

136
00:04:51,440 --> 00:04:52,160
to

137
00:04:52,160 --> 00:04:53,280
start

138
00:04:53,280 --> 00:04:55,280
hitting your web server probably for

139
00:04:55,280 --> 00:04:57,120
knowns on their abilities and of course

140
00:04:57,120 --> 00:04:58,639
if you have a component that that is

141
00:04:58,639 --> 00:05:01,440
vulnerable there's those

142
00:05:01,440 --> 00:05:04,240
automated attacks will basically breach

143
00:05:04,240 --> 00:05:06,240
into a system easily

144
00:05:06,240 --> 00:05:07,919
and there are some more

145
00:05:07,919 --> 00:05:09,759
numbers that is impressive uh as a

146
00:05:09,759 --> 00:05:11,280
bleeping computer

147
00:05:11,280 --> 00:05:13,360
over

148
00:05:13,360 --> 00:05:15,840
300 millions of record leakages from the

149
00:05:15,840 --> 00:05:17,520
fertilizer and on the top of everything

150
00:05:17,520 --> 00:05:18,720
like this

151
00:05:18,720 --> 00:05:21,840
there are laws and regulations that

152
00:05:21,840 --> 00:05:23,360
you'd be looking to comply right

153
00:05:23,360 --> 00:05:25,680
especially as their business grows and i

154
00:05:25,680 --> 00:05:28,560
could name a few of them like the gpdr

155
00:05:28,560 --> 00:05:30,800
and the lgpd in brazil

156
00:05:30,800 --> 00:05:34,479
the gpdr in europe so related to privacy

157
00:05:34,479 --> 00:05:38,320
concerns and also the pci css

158
00:05:38,320 --> 00:05:41,120
and finally there is the culture

159
00:05:41,120 --> 00:05:43,360
the cultural aspect of deserving

160
00:05:43,360 --> 00:05:45,919
security early then

161
00:05:45,919 --> 00:05:46,800
you

162
00:05:46,800 --> 00:05:48,880
is a chance for you to

163
00:05:48,880 --> 00:05:51,360
to base security into the culture of the

164
00:05:51,360 --> 00:05:53,840
company

165
00:05:54,320 --> 00:05:55,759
let's have a look

166
00:05:55,759 --> 00:05:57,759
how do you build your solution right

167
00:05:57,759 --> 00:06:00,160
traditionally as you had a great idea so

168
00:06:00,160 --> 00:06:03,039
you come up with this and and uh this is

169
00:06:03,039 --> 00:06:04,479
how

170
00:06:04,479 --> 00:06:07,199
security uh like a software development

171
00:06:07,199 --> 00:06:08,720
traditional that software development

172
00:06:08,720 --> 00:06:11,840
looks like and there was a really

173
00:06:11,840 --> 00:06:13,039
funny

174
00:06:13,039 --> 00:06:15,280
uh situation today when i showed this

175
00:06:15,280 --> 00:06:16,880
slide to my wife

176
00:06:16,880 --> 00:06:18,720
and she read where's the security sit

177
00:06:18,720 --> 00:06:21,039
here she pointed right away to test it

178
00:06:21,039 --> 00:06:23,840
even if she's not an i.t and i said no

179
00:06:23,840 --> 00:06:25,199
that's not the

180
00:06:25,199 --> 00:06:27,600
that's not the right place but

181
00:06:27,600 --> 00:06:30,960
lots of people are putting security only

182
00:06:30,960 --> 00:06:32,319
at the time they'll be releasing that

183
00:06:32,319 --> 00:06:33,280
product

184
00:06:33,280 --> 00:06:35,600
it's especially those small companies

185
00:06:35,600 --> 00:06:37,919
when they are about to make big

186
00:06:37,919 --> 00:06:39,840
integrations or do business with some

187
00:06:39,840 --> 00:06:41,440
partnerships

188
00:06:41,440 --> 00:06:44,000
they call the external company say hey

189
00:06:44,000 --> 00:06:46,479
i'm about to integrate this product that

190
00:06:46,479 --> 00:06:49,199
i built here with this big credit card

191
00:06:49,199 --> 00:06:51,280
supplier and they come with this big

192
00:06:51,280 --> 00:06:52,319
list of

193
00:06:52,319 --> 00:06:54,639
security tests that i need to run and i

194
00:06:54,639 --> 00:06:56,160
don't know anything like this can you

195
00:06:56,160 --> 00:06:58,639
help me then you're paying them and

196
00:06:58,639 --> 00:07:01,039
they'll likely find lots of security

197
00:07:01,039 --> 00:07:03,759
holes in your system

198
00:07:03,759 --> 00:07:06,319
uh that is not the correct way if you

199
00:07:06,319 --> 00:07:08,479
look at the

200
00:07:08,479 --> 00:07:09,919
if you look at this

201
00:07:09,919 --> 00:07:11,680
software development lifespanical there

202
00:07:11,680 --> 00:07:13,520
are lots of security that could be done

203
00:07:13,520 --> 00:07:17,039
across all the all those specific phases

204
00:07:17,039 --> 00:07:19,360
uh security requirements you'll be

205
00:07:19,360 --> 00:07:21,840
talking about the requirement phase

206
00:07:21,840 --> 00:07:23,919
you'll be taking into consideration

207
00:07:23,919 --> 00:07:26,720
regulatory requirements so just thinking

208
00:07:26,720 --> 00:07:29,680
about the pci dss for instance if you

209
00:07:29,680 --> 00:07:30,560
are

210
00:07:30,560 --> 00:07:32,400
willing to deal with credit cards in the

211
00:07:32,400 --> 00:07:34,720
future you might be subjected to that

212
00:07:34,720 --> 00:07:37,840
then you come to the design and uh you

213
00:07:37,840 --> 00:07:39,759
need to perform some specific threat

214
00:07:39,759 --> 00:07:41,520
modelling to understand the risks that

215
00:07:41,520 --> 00:07:43,759
your application and your business have

216
00:07:43,759 --> 00:07:46,720
and design a secure review on the top of

217
00:07:46,720 --> 00:07:48,879
that

218
00:07:48,879 --> 00:07:51,599
so time of coding there are a couple of

219
00:07:51,599 --> 00:07:53,919
activities secure activity that exists

220
00:07:53,919 --> 00:07:56,639
at the coding phase let's call it like

221
00:07:56,639 --> 00:07:58,080
this

222
00:07:58,080 --> 00:07:59,360
you'd have

223
00:07:59,360 --> 00:08:02,800
an approved list of tools and libraries

224
00:08:02,800 --> 00:08:06,400
you'd be performing a static analysis so

225
00:08:06,400 --> 00:08:07,440
looking for the code for the

226
00:08:07,440 --> 00:08:08,960
vulnerabilities

227
00:08:08,960 --> 00:08:11,520
you'd be following thicker coding

228
00:08:11,520 --> 00:08:12,639
practices

229
00:08:12,639 --> 00:08:13,759
how you do

230
00:08:13,759 --> 00:08:16,160
input validation how you

231
00:08:16,160 --> 00:08:19,599
prevent seeker injections

232
00:08:19,680 --> 00:08:20,640
don't store

233
00:08:20,640 --> 00:08:21,840
[Music]

234
00:08:21,840 --> 00:08:24,960
credentials in the source code etc and

235
00:08:24,960 --> 00:08:26,720
also some peer review those are all

236
00:08:26,720 --> 00:08:28,560
secure activities

237
00:08:28,560 --> 00:08:31,440
uh across the the software development

238
00:08:31,440 --> 00:08:33,760
life cycle then you do in the testing

239
00:08:33,760 --> 00:08:35,519
phase right on the top of the regolith

240
00:08:35,519 --> 00:08:38,479
has a unit test

241
00:08:39,440 --> 00:08:41,360
you'd have some security tests like

242
00:08:41,360 --> 00:08:43,120
dynamic analysis

243
00:08:43,120 --> 00:08:45,760
static analysis and dynamic analysis

244
00:08:45,760 --> 00:08:47,839
uh very well known as the vulnerability

245
00:08:47,839 --> 00:08:49,760
scanners you'll be running on the that

246
00:08:49,760 --> 00:08:52,320
specific phase of the security test then

247
00:08:52,320 --> 00:08:54,320
the time of release you want to do the

248
00:08:54,320 --> 00:08:56,000
paint testing for sure you want to make

249
00:08:56,000 --> 00:08:58,560
sure that everything looks good however

250
00:08:58,560 --> 00:09:00,880
you still need to plan on an incident

251
00:09:00,880 --> 00:09:03,120
response plan and you need to make sure

252
00:09:03,120 --> 00:09:05,760
that the interface structure that is

253
00:09:05,760 --> 00:09:08,000
supporting your application is is

254
00:09:08,000 --> 00:09:12,560
hardened so it follows hardening guides

255
00:09:12,560 --> 00:09:15,200
as well and finally when you release the

256
00:09:15,200 --> 00:09:16,640
product

257
00:09:16,640 --> 00:09:18,320
that is still the incident response

258
00:09:18,320 --> 00:09:20,720
activities you need to do continuous

259
00:09:20,720 --> 00:09:22,800
security testing because new vectors

260
00:09:22,800 --> 00:09:24,720
might arise and you might have left

261
00:09:24,720 --> 00:09:26,720
components in production that you're no

262
00:09:26,720 --> 00:09:28,080
longer

263
00:09:28,080 --> 00:09:29,760
using or

264
00:09:29,760 --> 00:09:32,480
they are an outdated component

265
00:09:32,480 --> 00:09:35,040
and vulnerability monitoring there are

266
00:09:35,040 --> 00:09:36,720
new vulnerabilities when you call the

267
00:09:36,720 --> 00:09:38,800
software there was no vulnerability for

268
00:09:38,800 --> 00:09:40,160
that specific

269
00:09:40,160 --> 00:09:42,240
let's say 35 component you're using but

270
00:09:42,240 --> 00:09:43,920
now there's a new vulnerability out

271
00:09:43,920 --> 00:09:45,519
there and people are

272
00:09:45,519 --> 00:09:48,080
starting to exploit that in the wild so

273
00:09:48,080 --> 00:09:50,320
how do you get information about that so

274
00:09:50,320 --> 00:09:51,600
as you can see

275
00:09:51,600 --> 00:09:54,560
there are lots of things here to do

276
00:09:54,560 --> 00:09:56,640
and and of course

277
00:09:56,640 --> 00:09:58,640
when you're thinking about those

278
00:09:58,640 --> 00:10:00,800
small companies there are even more

279
00:10:00,800 --> 00:10:02,079
challenges

280
00:10:02,079 --> 00:10:04,800
uh with the application security

281
00:10:04,800 --> 00:10:06,560
you know even in the big ones we have

282
00:10:06,560 --> 00:10:08,480
those challenges imagine on a very small

283
00:10:08,480 --> 00:10:10,480
company with a handful of developers a

284
00:10:10,480 --> 00:10:13,360
very small team sometimes you don't have

285
00:10:13,360 --> 00:10:15,680
a person or uh

286
00:10:15,680 --> 00:10:17,519
infosec team

287
00:10:17,519 --> 00:10:19,839
and imagine an abstract team or an

288
00:10:19,839 --> 00:10:22,160
abstract person right

289
00:10:22,160 --> 00:10:23,600
some of the challenges like the

290
00:10:23,600 --> 00:10:24,959
perception of

291
00:10:24,959 --> 00:10:28,640
security as a bottleneck this is

292
00:10:28,640 --> 00:10:31,040
one of the things that

293
00:10:31,040 --> 00:10:32,640
you know the business says okay so i'm

294
00:10:32,640 --> 00:10:33,680
putting

295
00:10:33,680 --> 00:10:35,600
all of those activities

296
00:10:35,600 --> 00:10:37,120
if you look at the pre the previous

297
00:10:37,120 --> 00:10:38,079
slide

298
00:10:38,079 --> 00:10:40,399
so many work to do this will slow down

299
00:10:40,399 --> 00:10:42,880
my process this is slow down

300
00:10:42,880 --> 00:10:45,200
the process and slow down the releases

301
00:10:45,200 --> 00:10:47,279
to go to the market right

302
00:10:47,279 --> 00:10:48,480
you'd be

303
00:10:48,480 --> 00:10:50,399
you might have lack of funding with

304
00:10:50,399 --> 00:10:53,040
sponsorship or lack of awareness

305
00:10:53,040 --> 00:10:54,640
you know it's a small company you have a

306
00:10:54,640 --> 00:10:56,000
great idea

307
00:10:56,000 --> 00:10:56,800
but

308
00:10:56,800 --> 00:10:59,279
you are not let's say especially these

309
00:10:59,279 --> 00:11:00,640
companies that are

310
00:11:00,640 --> 00:11:03,920
started by some ic folks so they might

311
00:11:03,920 --> 00:11:05,920
not have the proper education in terms

312
00:11:05,920 --> 00:11:08,000
of security they might not be aware of

313
00:11:08,000 --> 00:11:09,120
those

314
00:11:09,120 --> 00:11:10,800
all of those issues

315
00:11:10,800 --> 00:11:12,560
then the lack of

316
00:11:12,560 --> 00:11:14,480
specialized

317
00:11:14,480 --> 00:11:16,880
security immunology and

318
00:11:16,880 --> 00:11:18,079
resources

319
00:11:18,079 --> 00:11:20,320
right if you're thinking about freezing

320
00:11:20,320 --> 00:11:23,760
threat mode is a very specialized thing

321
00:11:23,760 --> 00:11:25,519
and lack of resources you don't have

322
00:11:25,519 --> 00:11:29,839
people to carry all of those activities

323
00:11:30,720 --> 00:11:33,360
and also lack overall strategy if you're

324
00:11:33,360 --> 00:11:34,800
thinking about those very small

325
00:11:34,800 --> 00:11:36,720
companies and thinking about the

326
00:11:36,720 --> 00:11:39,360
startups we usually are in the

327
00:11:39,360 --> 00:11:40,640
some sort of

328
00:11:40,640 --> 00:11:42,800
risky business they might change

329
00:11:42,800 --> 00:11:45,120
overnight their business direction with

330
00:11:45,120 --> 00:11:47,440
the kovid we saw lots of examples like

331
00:11:47,440 --> 00:11:49,040
that

332
00:11:49,040 --> 00:11:52,320
and last but not least uh the business

333
00:11:52,320 --> 00:11:54,959
pressure to go to the market right a

334
00:11:54,959 --> 00:11:57,440
small company needs res needs funds

335
00:11:57,440 --> 00:11:59,519
right it's money so they want the

336
00:11:59,519 --> 00:12:01,519
products to go to market

337
00:12:01,519 --> 00:12:04,720
this way they basically can

338
00:12:04,720 --> 00:12:06,880
start gain some revenue

339
00:12:06,880 --> 00:12:07,600
and

340
00:12:07,600 --> 00:12:09,600
gain our customers and maybe looking for

341
00:12:09,600 --> 00:12:12,079
more investors and

342
00:12:12,079 --> 00:12:14,320
other partnerships with

343
00:12:14,320 --> 00:12:18,320
more bigger companies and so on so

344
00:12:18,320 --> 00:12:21,519
lots of challenges here to to address

345
00:12:21,519 --> 00:12:22,800
then i thought

346
00:12:22,800 --> 00:12:25,839
considering all of this situation

347
00:12:25,839 --> 00:12:28,079
how one could start

348
00:12:28,079 --> 00:12:30,160
in where especially if you look into

349
00:12:30,160 --> 00:12:31,279
this

350
00:12:31,279 --> 00:12:33,279
previous graphic here and all those

351
00:12:33,279 --> 00:12:36,800
activities that involve

352
00:12:36,800 --> 00:12:40,240
delivering a secure solution uh how

353
00:12:40,240 --> 00:12:42,240
could you how could you one

354
00:12:42,240 --> 00:12:44,480
start these and where they should start

355
00:12:44,480 --> 00:12:45,920
which one is more important than the

356
00:12:45,920 --> 00:12:46,959
other

357
00:12:46,959 --> 00:12:48,959
i don't think there is a

358
00:12:48,959 --> 00:12:50,639
one size

359
00:12:50,639 --> 00:12:53,200
uh one-size-fits-all solution in my

360
00:12:53,200 --> 00:12:55,200
opinion this might vary

361
00:12:55,200 --> 00:12:58,560
and i thought about three items that

362
00:12:58,560 --> 00:13:00,320
some of the companies they could start

363
00:13:00,320 --> 00:13:01,200
and

364
00:13:01,200 --> 00:13:03,040
they would be using

365
00:13:03,040 --> 00:13:06,160
open source and free resources and you

366
00:13:06,160 --> 00:13:07,120
could

367
00:13:07,120 --> 00:13:09,200
start getting into the security right

368
00:13:09,200 --> 00:13:12,240
away since day one and improve the

369
00:13:12,240 --> 00:13:14,320
overall security culture of your

370
00:13:14,320 --> 00:13:16,000
organization

371
00:13:16,000 --> 00:13:17,680
let's get into them

372
00:13:17,680 --> 00:13:20,079
then a great start is secure

373
00:13:20,079 --> 00:13:21,519
requirements

374
00:13:21,519 --> 00:13:23,519
uh secure requirements

375
00:13:23,519 --> 00:13:26,320
is the foundation of any secure software

376
00:13:26,320 --> 00:13:28,880
it's the backbone of any secure software

377
00:13:28,880 --> 00:13:32,160
it's a quality attribute to increase

378
00:13:32,160 --> 00:13:35,600
trust on a solution on a specific system

379
00:13:35,600 --> 00:13:37,200
the security requirements they should be

380
00:13:37,200 --> 00:13:39,680
considered in all phases of the software

381
00:13:39,680 --> 00:13:41,760
development what do i mean

382
00:13:41,760 --> 00:13:43,920
for that by that

383
00:13:43,920 --> 00:13:45,839
it can be described as a non-functional

384
00:13:45,839 --> 00:13:49,120
requirement um imagine for instance a

385
00:13:49,120 --> 00:13:51,279
secure requirement is the system should

386
00:13:51,279 --> 00:13:52,399
prevent

387
00:13:52,399 --> 00:13:54,720
sql injection that is a clear secure

388
00:13:54,720 --> 00:13:56,240
requirement or

389
00:13:56,240 --> 00:13:57,120
your

390
00:13:57,120 --> 00:14:00,839
the api should have a mechanism that

391
00:14:00,839 --> 00:14:02,399
throttles

392
00:14:02,399 --> 00:14:03,680
uh

393
00:14:03,680 --> 00:14:05,920
ip addresses at the 10 requests per

394
00:14:05,920 --> 00:14:07,839
second those are also some secure

395
00:14:07,839 --> 00:14:09,360
requirements

396
00:14:09,360 --> 00:14:11,680
they could be developed

397
00:14:11,680 --> 00:14:13,760
either let's say for doing a more

398
00:14:13,760 --> 00:14:15,760
traditional waterfall model which

399
00:14:15,760 --> 00:14:17,440
usually people

400
00:14:17,440 --> 00:14:19,279
i i think they're not no longer using

401
00:14:19,279 --> 00:14:22,959
that nowadays they're more into agile

402
00:14:22,959 --> 00:14:24,720
ones and

403
00:14:24,720 --> 00:14:26,959
it could be part of your

404
00:14:26,959 --> 00:14:28,839
your spring

405
00:14:28,839 --> 00:14:31,440
basically it could be baked into the

406
00:14:31,440 --> 00:14:33,519
acceptance criteria or into your

407
00:14:33,519 --> 00:14:35,360
definition of done

408
00:14:35,360 --> 00:14:37,440
and also it can be used to derive

409
00:14:37,440 --> 00:14:39,680
security tasks and verification because

410
00:14:39,680 --> 00:14:41,519
you have the security requirements

411
00:14:41,519 --> 00:14:45,120
clearly stated as i said the api needs

412
00:14:45,120 --> 00:14:45,920
to

413
00:14:45,920 --> 00:14:48,160
support a maximum you know the api needs

414
00:14:48,160 --> 00:14:50,399
to try to any client that does more than

415
00:14:50,399 --> 00:14:53,120
10 requests per second so that's a clear

416
00:14:53,120 --> 00:14:55,360
secure requirement and you could

417
00:14:55,360 --> 00:14:58,720
bring this to the security tests and

418
00:14:58,720 --> 00:15:01,680
secure verification

419
00:15:01,680 --> 00:15:04,399
how do you do that you should use uh

420
00:15:04,399 --> 00:15:07,440
industry best practices uh combine that

421
00:15:07,440 --> 00:15:09,760
with some regulatory that you need to

422
00:15:09,760 --> 00:15:10,560
meet

423
00:15:10,560 --> 00:15:12,399
and submit some specific business

424
00:15:12,399 --> 00:15:14,720
requirement at the end

425
00:15:14,720 --> 00:15:17,920
also event early to collect benefits in

426
00:15:17,920 --> 00:15:20,079
the near future

427
00:15:20,079 --> 00:15:23,279
nist says that fixing a bug

428
00:15:23,279 --> 00:15:25,440
our weakness after the software is in

429
00:15:25,440 --> 00:15:26,880
production

430
00:15:26,880 --> 00:15:28,000
costs

431
00:15:28,000 --> 00:15:30,000
up to 30

432
00:15:30,000 --> 00:15:33,040
000 i'm sorry up to 30 10

433
00:15:33,040 --> 00:15:34,639
uh 30 times

434
00:15:34,639 --> 00:15:37,920
than fixing the specific bug when you're

435
00:15:37,920 --> 00:15:41,120
doing uh in the beginning right

436
00:15:41,120 --> 00:15:43,519
and i really like one example of a

437
00:15:43,519 --> 00:15:45,360
software that i've

438
00:15:45,360 --> 00:15:47,759
audit in the past and i call like the

439
00:15:47,759 --> 00:15:50,160
md5 case to illustrate a little bit of

440
00:15:50,160 --> 00:15:51,040
that

441
00:15:51,040 --> 00:15:54,560
and basically that specific system i've

442
00:15:54,560 --> 00:15:56,720
performed a penetration testing and a

443
00:15:56,720 --> 00:15:58,480
code review for that system and i found

444
00:15:58,480 --> 00:16:00,399
out the users

445
00:16:00,399 --> 00:16:01,680
were having their

446
00:16:01,680 --> 00:16:05,040
passwords start using the md5 mesh which

447
00:16:05,040 --> 00:16:06,720
is widely known

448
00:16:06,720 --> 00:16:08,959
as not secure and

449
00:16:08,959 --> 00:16:11,600
not good for that use case

450
00:16:11,600 --> 00:16:13,199
and the thing here is

451
00:16:13,199 --> 00:16:17,120
when i brought this to this issue to

452
00:16:17,120 --> 00:16:19,279
to the to the customer they they

453
00:16:19,279 --> 00:16:21,040
acknowledge the issue

454
00:16:21,040 --> 00:16:23,360
and basically we discussed a little bit

455
00:16:23,360 --> 00:16:24,480
of

456
00:16:24,480 --> 00:16:26,639
how would be complex to fix that in

457
00:16:26,639 --> 00:16:29,279
terms of time and in terms of money they

458
00:16:29,279 --> 00:16:31,440
outsourced the

459
00:16:31,440 --> 00:16:33,120
outsourcing the development so they need

460
00:16:33,120 --> 00:16:34,639
to brought the company the external

461
00:16:34,639 --> 00:16:37,600
company to fix the thing for them

462
00:16:37,600 --> 00:16:39,279
and as you can see if you're thinking

463
00:16:39,279 --> 00:16:41,600
about they planned database to have a

464
00:16:41,600 --> 00:16:43,759
specifically uh

465
00:16:43,759 --> 00:16:46,959
size to store an md5 hash so that is the

466
00:16:46,959 --> 00:16:48,560
first thing so they need to change the

467
00:16:48,560 --> 00:16:49,759
database

468
00:16:49,759 --> 00:16:52,800
then the system was in production

469
00:16:52,800 --> 00:16:55,600
a little bit sensitive so they need do

470
00:16:55,600 --> 00:16:57,920
the governors to scatter a change window

471
00:16:57,920 --> 00:16:59,839
to change the database then they'll need

472
00:16:59,839 --> 00:17:01,680
to change the code

473
00:17:01,680 --> 00:17:03,839
verify every time they use the type a

474
00:17:03,839 --> 00:17:06,880
username and password 3575

475
00:17:06,880 --> 00:17:08,799
okay if it matches then i

476
00:17:08,799 --> 00:17:10,319
record the new

477
00:17:10,319 --> 00:17:12,480
recommended hash algorithm to start the

478
00:17:12,480 --> 00:17:14,799
password then they do that for all of

479
00:17:14,799 --> 00:17:17,599
the users until and of course when you

480
00:17:17,599 --> 00:17:20,640
change the system like that you need to

481
00:17:20,640 --> 00:17:22,160
you need to do all the tests all the

482
00:17:22,160 --> 00:17:23,760
regression tests make sure everything is

483
00:17:23,760 --> 00:17:25,520
working fine sometimes you need a

484
00:17:25,520 --> 00:17:27,679
maintenance window as you can see this

485
00:17:27,679 --> 00:17:29,679
costs a lot and

486
00:17:29,679 --> 00:17:31,280
those are the kind of things that could

487
00:17:31,280 --> 00:17:33,039
have been avoided

488
00:17:33,039 --> 00:17:34,960
if they're practicing security

489
00:17:34,960 --> 00:17:36,000
requirements

490
00:17:36,000 --> 00:17:37,200
since

491
00:17:37,200 --> 00:17:39,520
the beginning of the

492
00:17:39,520 --> 00:17:42,720
of the software development

493
00:17:42,720 --> 00:17:44,000
but

494
00:17:44,000 --> 00:17:46,000
you mentioned some industry best

495
00:17:46,000 --> 00:17:47,919
practices where do i find those lists of

496
00:17:47,919 --> 00:17:50,480
things that could be rough uh a little

497
00:17:50,480 --> 00:17:53,039
bit complex right

498
00:17:53,039 --> 00:17:54,880
here comes the o1

499
00:17:54,880 --> 00:17:57,760
open security verification standard or

500
00:17:57,760 --> 00:18:00,760
asvs

501
00:18:00,960 --> 00:18:02,960
this is an application security standard

502
00:18:02,960 --> 00:18:05,039
which one could

503
00:18:05,039 --> 00:18:05,840
uh

504
00:18:05,840 --> 00:18:08,240
verify your application against those

505
00:18:08,240 --> 00:18:10,720
specific requirements that is reading

506
00:18:10,720 --> 00:18:13,440
that it's put together by experts

507
00:18:13,440 --> 00:18:14,559
is

508
00:18:14,559 --> 00:18:16,400
compliant

509
00:18:16,400 --> 00:18:18,559
with some nice recommendations

510
00:18:18,559 --> 00:18:22,720
with the common weakness enumeration

511
00:18:22,720 --> 00:18:24,799
as well which is well known in the

512
00:18:24,799 --> 00:18:26,000
industry

513
00:18:26,000 --> 00:18:28,559
and provides basically three levels

514
00:18:28,559 --> 00:18:30,880
of verification let's call like this

515
00:18:30,880 --> 00:18:32,240
verification

516
00:18:32,240 --> 00:18:34,480
and the level two is recommended for

517
00:18:34,480 --> 00:18:37,280
applications that contain sensitive data

518
00:18:37,280 --> 00:18:39,679
and what is the cool thing about the sds

519
00:18:39,679 --> 00:18:41,120
is they have

520
00:18:41,120 --> 00:18:42,559
14 sections

521
00:18:42,559 --> 00:18:43,840
and they

522
00:18:43,840 --> 00:18:46,400
they assist you answering most of the

523
00:18:46,400 --> 00:18:48,080
questions that you might have for

524
00:18:48,080 --> 00:18:49,600
instance

525
00:18:49,600 --> 00:18:51,200
how should i do

526
00:18:51,200 --> 00:18:53,520
how should i start a user's password how

527
00:18:53,520 --> 00:18:55,120
should i implement

528
00:18:55,120 --> 00:18:57,840
this authentication where should i use

529
00:18:57,840 --> 00:19:01,520
tls what kind of tls should i use

530
00:19:01,520 --> 00:19:02,320
so

531
00:19:02,320 --> 00:19:04,720
this is this standard answers that

532
00:19:04,720 --> 00:19:06,880
question for you how should i handle the

533
00:19:06,880 --> 00:19:11,200
api how should i handle for instance xml

534
00:19:11,200 --> 00:19:14,000
and you can see that it goes

535
00:19:14,000 --> 00:19:16,000
a little bit deep into some of those

536
00:19:16,000 --> 00:19:18,160
topics and also link that with some

537
00:19:18,160 --> 00:19:21,120
other amazing your watch resources

538
00:19:21,120 --> 00:19:23,679
it also address modern issues such as

539
00:19:23,679 --> 00:19:25,760
satisfied request surgery

540
00:19:25,760 --> 00:19:27,360
or two-factor

541
00:19:27,360 --> 00:19:29,280
authentication

542
00:19:29,280 --> 00:19:31,840
and even a little bit of iot so that

543
00:19:31,840 --> 00:19:33,120
would be

544
00:19:33,120 --> 00:19:35,840
a great place for you to

545
00:19:35,840 --> 00:19:38,240
start bringing this document and

546
00:19:38,240 --> 00:19:40,000
bringing this as part of your when

547
00:19:40,000 --> 00:19:40,799
you're

548
00:19:40,799 --> 00:19:42,720
writing your requirements to look into

549
00:19:42,720 --> 00:19:44,960
that because this is based on common

550
00:19:44,960 --> 00:19:47,840
thread modeling that applies to

551
00:19:47,840 --> 00:19:50,160
say the majority of the applications out

552
00:19:50,160 --> 00:19:52,000
there

553
00:19:52,000 --> 00:19:54,160
just for you to give an example here's

554
00:19:54,160 --> 00:19:56,160
the section for the password

555
00:19:56,160 --> 00:19:57,840
uh and you can see

556
00:19:57,840 --> 00:20:00,160
uh three items right verify the user set

557
00:20:00,160 --> 00:20:02,880
password that at least 12 characters

558
00:20:02,880 --> 00:20:04,480
how many times you asked it what is a

559
00:20:04,480 --> 00:20:06,720
good password right how many characters

560
00:20:06,720 --> 00:20:08,240
what's the minimum characters that i

561
00:20:08,240 --> 00:20:10,799
should have that verified passwords

562
00:20:10,799 --> 00:20:14,000
64 characters no longer are permitted

563
00:20:14,000 --> 00:20:15,280
and then there is a risk that's the

564
00:20:15,280 --> 00:20:16,960
reason for that it's a good

565
00:20:16,960 --> 00:20:19,039
a good start point because your

566
00:20:19,039 --> 00:20:20,960
developers and your team will start

567
00:20:20,960 --> 00:20:23,360
basically getting interested

568
00:20:23,360 --> 00:20:26,559
understanding why those uh

569
00:20:26,559 --> 00:20:29,039
why that state like this and then you

570
00:20:29,039 --> 00:20:31,039
can make the secure requirement as clear

571
00:20:31,039 --> 00:20:32,880
as that and

572
00:20:32,880 --> 00:20:36,400
very consistent and testable right

573
00:20:36,400 --> 00:20:38,400
and you can bake that into your user

574
00:20:38,400 --> 00:20:39,600
stories

575
00:20:39,600 --> 00:20:42,720
so i put an example here that uses story

576
00:20:42,720 --> 00:20:45,120
and writes the user should see a link to

577
00:20:45,120 --> 00:20:46,480
use assignment

578
00:20:46,480 --> 00:20:48,640
so if you're using a giant methodology

579
00:20:48,640 --> 00:20:50,960
so this story it goes a little bit like

580
00:20:50,960 --> 00:20:51,840
this

581
00:20:51,840 --> 00:20:53,440
um

582
00:20:53,440 --> 00:20:55,840
as an unregister use it i would like to

583
00:20:55,840 --> 00:20:58,559
register myself then i could start using

584
00:20:58,559 --> 00:21:00,640
the application so it's a very very

585
00:21:00,640 --> 00:21:03,200
simple definition of the user story

586
00:21:03,200 --> 00:21:04,559
and then there will be a bunch of user

587
00:21:04,559 --> 00:21:05,840
criteria

588
00:21:05,840 --> 00:21:09,039
i'm sorry of the substance criteria and

589
00:21:09,039 --> 00:21:11,039
you could bring those secure

590
00:21:11,039 --> 00:21:13,039
requirements you could bring those items

591
00:21:13,039 --> 00:21:15,679
from the asvs and

592
00:21:15,679 --> 00:21:17,360
adapt them to their

593
00:21:17,360 --> 00:21:20,480
users target so as acceptance criteria

594
00:21:20,480 --> 00:21:21,840
for instance for this specific

595
00:21:21,840 --> 00:21:23,200
functionality

596
00:21:23,200 --> 00:21:24,799
you should verify that you use a set

597
00:21:24,799 --> 00:21:27,120
password at least 12 characters verify

598
00:21:27,120 --> 00:21:30,559
their passwords 64k repairs alone and

599
00:21:30,559 --> 00:21:33,120
verify the password transmitter is

600
00:21:33,120 --> 00:21:35,120
provided to

601
00:21:35,120 --> 00:21:36,720
to help users

602
00:21:36,720 --> 00:21:39,360
uh to set a stronger password as you can

603
00:21:39,360 --> 00:21:41,840
see you should make them as clear as

604
00:21:41,840 --> 00:21:44,400
possible as consistent and testable

605
00:21:44,400 --> 00:21:46,000
so when you're building a task on the

606
00:21:46,000 --> 00:21:47,840
top of the the security requirement will

607
00:21:47,840 --> 00:21:49,840
drive your test not only the business

608
00:21:49,840 --> 00:21:51,440
requirements but also the security

609
00:21:51,440 --> 00:21:52,559
requirements

610
00:21:52,559 --> 00:21:54,720
as well

611
00:21:54,720 --> 00:21:57,360
and some of the items

612
00:21:57,360 --> 00:21:58,559
are

613
00:21:58,559 --> 00:22:00,159
not exactly

614
00:22:00,159 --> 00:22:02,159
um

615
00:22:02,159 --> 00:22:04,640
not uh not exactly non-functional

616
00:22:04,640 --> 00:22:06,240
security requirements they are they're

617
00:22:06,240 --> 00:22:08,320
provide functions like how we do a

618
00:22:08,320 --> 00:22:10,320
two-step authentication right it's a

619
00:22:10,320 --> 00:22:13,200
function that you'd be using that so and

620
00:22:13,200 --> 00:22:15,360
i think this is a great uh really great

621
00:22:15,360 --> 00:22:17,520
start and

622
00:22:17,520 --> 00:22:20,080
as i said if you have for instance this

623
00:22:20,080 --> 00:22:21,600
provide guidance for you how the story

624
00:22:21,600 --> 00:22:22,960
uses password

625
00:22:22,960 --> 00:22:24,960
if the company that i mentioned earlier

626
00:22:24,960 --> 00:22:27,280
had used that would be

627
00:22:27,280 --> 00:22:30,159
avoided you know they should be avoided

628
00:22:30,159 --> 00:22:33,840
as md5 specific situation

629
00:22:33,840 --> 00:22:35,520
so there's the first thing

630
00:22:35,520 --> 00:22:38,720
second thing that i consider that will

631
00:22:38,720 --> 00:22:41,679
help you and start security early

632
00:22:41,679 --> 00:22:44,000
and i put a stamp here as a quick link

633
00:22:44,000 --> 00:22:46,080
because i love that is the dependency

634
00:22:46,080 --> 00:22:48,240
scanning process

635
00:22:48,240 --> 00:22:50,159
so

636
00:22:50,159 --> 00:22:52,159
likelihood that you'll be using open

637
00:22:52,159 --> 00:22:55,120
source components in our solution

638
00:22:55,120 --> 00:22:57,679
is great right

639
00:22:57,679 --> 00:23:00,960
and the os top 10 a9 is using components

640
00:23:00,960 --> 00:23:03,840
with known vulnerabilities that means

641
00:23:03,840 --> 00:23:05,120
you're

642
00:23:05,120 --> 00:23:07,520
shipping your product with open source

643
00:23:07,520 --> 00:23:10,159
components and open source components

644
00:23:10,159 --> 00:23:11,679
that has

645
00:23:11,679 --> 00:23:12,960
open source components that have

646
00:23:12,960 --> 00:23:15,120
vulnerabilities so even if your code is

647
00:23:15,120 --> 00:23:16,480
completely secure the open source

648
00:23:16,480 --> 00:23:20,000
component might not be completely secure

649
00:23:20,000 --> 00:23:22,799
and there is one report from synopsis

650
00:23:22,799 --> 00:23:26,240
last year 99 of the code-based code

651
00:23:26,240 --> 00:23:29,600
bases outed in 2019 contain open source

652
00:23:29,600 --> 00:23:31,200
components and

653
00:23:31,200 --> 00:23:33,760
75 of those open source components they

654
00:23:33,760 --> 00:23:37,600
had vulnerabilities and 49 high risk

655
00:23:37,600 --> 00:23:39,120
vulnerabilities

656
00:23:39,120 --> 00:23:41,440
so and some open source components like

657
00:23:41,440 --> 00:23:45,440
jquery node.js react prime phases etc

658
00:23:45,440 --> 00:23:48,080
lots of them that you might be using

659
00:23:48,080 --> 00:23:50,400
day to day so the dependency checking

660
00:23:50,400 --> 00:23:51,360
process

661
00:23:51,360 --> 00:23:53,440
assists on identifying vulnerabilities

662
00:23:53,440 --> 00:23:55,360
on open source components

663
00:23:55,360 --> 00:23:57,760
and the way it does that is by

664
00:23:57,760 --> 00:23:59,440
the

665
00:23:59,440 --> 00:24:00,799
class of software that is called

666
00:24:00,799 --> 00:24:03,039
software composition analysis that can

667
00:24:03,039 --> 00:24:05,120
assist you in that task and this could

668
00:24:05,120 --> 00:24:08,080
be integrated into our cicd pipeline

669
00:24:08,080 --> 00:24:10,400
could be run on a schedule basis or

670
00:24:10,400 --> 00:24:12,799
integrated with the developer's id which

671
00:24:12,799 --> 00:24:13,520
you

672
00:24:13,520 --> 00:24:17,279
find even early problems with that

673
00:24:17,279 --> 00:24:19,760
the great project once dependence chat

674
00:24:19,760 --> 00:24:22,880
is one of the software composition

675
00:24:22,880 --> 00:24:24,799
composition analysis too

676
00:24:24,799 --> 00:24:26,559
and the way it works basically it

677
00:24:26,559 --> 00:24:28,960
attempts to detect public disclosure

678
00:24:28,960 --> 00:24:30,880
vulnerabilities contained within a

679
00:24:30,880 --> 00:24:33,360
project's dependency

680
00:24:33,360 --> 00:24:36,400
in doing that it leverages the national

681
00:24:36,400 --> 00:24:38,320
national vulnerability database from

682
00:24:38,320 --> 00:24:41,360
nist and compare the database on what

683
00:24:41,360 --> 00:24:43,919
you have in your dependency

684
00:24:43,919 --> 00:24:46,240
on the screen on the right i'm sorry on

685
00:24:46,240 --> 00:24:49,279
the left there is a

686
00:24:49,279 --> 00:24:50,679
snip of

687
00:24:50,679 --> 00:24:53,840
pom.xml fire from maven and where we

688
00:24:53,840 --> 00:24:55,520
specify the dependence

689
00:24:55,520 --> 00:24:57,120
check maintenance and then on the right

690
00:24:57,120 --> 00:24:59,520
in the bottom you see the output as an

691
00:24:59,520 --> 00:25:00,799
example

692
00:25:00,799 --> 00:25:02,320
so

693
00:25:02,320 --> 00:25:04,080
uh it found vulnerabilities of the

694
00:25:04,080 --> 00:25:06,559
bootstrap on the bootstrap minimum and

695
00:25:06,559 --> 00:25:07,840
also

696
00:25:07,840 --> 00:25:11,918
on the bus bouncy castle library

697
00:25:12,080 --> 00:25:14,480
this is specifically oasis depends check

698
00:25:14,480 --> 00:25:15,919
it scans

699
00:25:15,919 --> 00:25:18,640
with its own analyzer java applications

700
00:25:18,640 --> 00:25:20,960
and dotnet and also leverage third-party

701
00:25:20,960 --> 00:25:23,440
services and data source such as

702
00:25:23,440 --> 00:25:26,320
npm audit and retire.js for some

703
00:25:26,320 --> 00:25:27,600
specific

704
00:25:27,600 --> 00:25:29,520
technologies

705
00:25:29,520 --> 00:25:31,840
and this is it's it's a great wing as i

706
00:25:31,840 --> 00:25:33,279
said

707
00:25:33,279 --> 00:25:34,720
another example

708
00:25:34,720 --> 00:25:37,279
uh especially nowadays with javascript

709
00:25:37,279 --> 00:25:39,679
being really popular in react and

710
00:25:39,679 --> 00:25:43,840
node.js and node express is the npm

711
00:25:43,840 --> 00:25:46,480
package manager quality function and the

712
00:25:46,480 --> 00:25:47,600
yarn

713
00:25:47,600 --> 00:25:49,120
audit function

714
00:25:49,120 --> 00:25:52,400
so this is very simple to run you just

715
00:25:52,400 --> 00:25:55,679
run them from the command line

716
00:25:55,840 --> 00:25:58,640
on our source code folder npm audit or

717
00:25:58,640 --> 00:26:01,279
yarn audit it will check the components

718
00:26:01,279 --> 00:26:03,039
that you are using

719
00:26:03,039 --> 00:26:04,720
and the dependency of those components

720
00:26:04,720 --> 00:26:05,760
as well

721
00:26:05,760 --> 00:26:06,880
and it will bring to you the

722
00:26:06,880 --> 00:26:09,200
vulnerabilities and suggest you how you

723
00:26:09,200 --> 00:26:12,480
fix those components this is a great one

724
00:26:12,480 --> 00:26:16,559
integrates really easily with pipelines

725
00:26:16,559 --> 00:26:18,720
so i put an example on the right i

726
00:26:18,720 --> 00:26:21,520
create a pipeline with four stages

727
00:26:21,520 --> 00:26:23,679
check software composition analysis test

728
00:26:23,679 --> 00:26:25,120
build and apply

729
00:26:25,120 --> 00:26:26,080
and then

730
00:26:26,080 --> 00:26:29,679
on the stage check sca i run the yarn

731
00:26:29,679 --> 00:26:32,960
audits and i pipe the results to a text

732
00:26:32,960 --> 00:26:35,679
file so i could examine it later and the

733
00:26:35,679 --> 00:26:37,760
cool thing with this yarn audit and the

734
00:26:37,760 --> 00:26:41,120
npm audit if they find a vulnerability

735
00:26:41,120 --> 00:26:43,600
they exit the process

736
00:26:43,600 --> 00:26:46,159
uh with a status code other than zero

737
00:26:46,159 --> 00:26:48,080
and this breaks the build for you

738
00:26:48,080 --> 00:26:49,520
automatically

739
00:26:49,520 --> 00:26:52,240
which is great and i think this is my

740
00:26:52,240 --> 00:26:54,240
recommendation for this is start

741
00:26:54,240 --> 00:26:56,559
breaking the build with this if you find

742
00:26:56,559 --> 00:26:59,600
that you're using a software

743
00:26:59,600 --> 00:27:01,840
vulnerability you break the build early

744
00:27:01,840 --> 00:27:04,720
so this will give you

745
00:27:05,200 --> 00:27:07,760
they give a time to check this and it's

746
00:27:07,760 --> 00:27:09,360
so let's call it like your first

747
00:27:09,360 --> 00:27:11,520
security gateway right you could also

748
00:27:11,520 --> 00:27:13,360
run locally if you're a developer you

749
00:27:13,360 --> 00:27:15,039
could just run this and fix the things

750
00:27:15,039 --> 00:27:16,960
even to before commit to

751
00:27:16,960 --> 00:27:19,279
the code baseline

752
00:27:19,279 --> 00:27:21,600
and if you are in doubt because

753
00:27:21,600 --> 00:27:22,480
you know

754
00:27:22,480 --> 00:27:24,080
dealing with this

755
00:27:24,080 --> 00:27:26,960
uh terminologies might not be especially

756
00:27:26,960 --> 00:27:29,440
with lack of training uh you might be in

757
00:27:29,440 --> 00:27:31,520
doubt if there's a series or not i'll

758
00:27:31,520 --> 00:27:33,360
just go to the latest versions of the

759
00:27:33,360 --> 00:27:36,559
open source component

760
00:27:36,559 --> 00:27:37,840
and the last of the three that i

761
00:27:37,840 --> 00:27:38,880
recommend

762
00:27:38,880 --> 00:27:41,279
is deploying our static application

763
00:27:41,279 --> 00:27:43,039
security testing

764
00:27:43,039 --> 00:27:45,200
tool

765
00:27:45,200 --> 00:27:47,679
and this is fantastic because it speaks

766
00:27:47,679 --> 00:27:50,320
the language of the developers

767
00:27:50,320 --> 00:27:54,640
so it could catch errors uh really early

768
00:27:54,640 --> 00:27:56,640
in the software development life cycle

769
00:27:56,640 --> 00:27:57,679
when our

770
00:27:57,679 --> 00:28:00,159
when our coding

771
00:28:00,159 --> 00:28:02,960
such as hardcoded password sqlite best

772
00:28:02,960 --> 00:28:04,399
transversal

773
00:28:04,399 --> 00:28:07,200
with cryptography and hash algorithms

774
00:28:07,200 --> 00:28:10,880
and basically this will assist you with

775
00:28:10,880 --> 00:28:12,399
uh the verification of the

776
00:28:12,399 --> 00:28:13,679
implementation of your security

777
00:28:13,679 --> 00:28:16,080
requirements if you just said okay i

778
00:28:16,080 --> 00:28:18,399
need to

779
00:28:18,399 --> 00:28:19,490
not have

780
00:28:19,490 --> 00:28:21,120
[Music]

781
00:28:21,120 --> 00:28:23,279
secret injection vulnerability so the

782
00:28:23,279 --> 00:28:24,960
application should provide the mechanism

783
00:28:24,960 --> 00:28:26,799
to defense you've coded everything so

784
00:28:26,799 --> 00:28:29,520
you can use the sas to find

785
00:28:29,520 --> 00:28:31,600
if those problems are happening or not

786
00:28:31,600 --> 00:28:33,679
it can also be integrated with the cicd

787
00:28:33,679 --> 00:28:36,080
it could also be run on a schedule basis

788
00:28:36,080 --> 00:28:39,200
and also being part of the id

789
00:28:39,200 --> 00:28:41,600
plugin

790
00:28:41,600 --> 00:28:44,000
i put one example here i put the list

791
00:28:44,000 --> 00:28:46,880
i'll not name one specifically here um

792
00:28:46,880 --> 00:28:49,200
there is a list with the oas with a list

793
00:28:49,200 --> 00:28:50,559
of them

794
00:28:50,559 --> 00:28:52,720
so the cool thing is it highlights the

795
00:28:52,720 --> 00:28:54,640
precise source file

796
00:28:54,640 --> 00:28:57,360
and and the lines that have the issues

797
00:28:57,360 --> 00:28:59,279
and provides detailed explanation on the

798
00:28:59,279 --> 00:29:02,240
security issues and in general provide

799
00:29:02,240 --> 00:29:04,480
some guidance on how to fix them

800
00:29:04,480 --> 00:29:06,480
and one of the cool things that some of

801
00:29:06,480 --> 00:29:09,120
the code repositories that are out there

802
00:29:09,120 --> 00:29:11,760
now very popular in the cloud and they

803
00:29:11,760 --> 00:29:14,720
have the free versions of them they are

804
00:29:14,720 --> 00:29:17,360
making the sas the open source stuff of

805
00:29:17,360 --> 00:29:20,000
course available for private projects as

806
00:29:20,000 --> 00:29:22,240
well so definitely you should check this

807
00:29:22,240 --> 00:29:23,440
out

808
00:29:23,440 --> 00:29:25,039
i would recommend you to break the build

809
00:29:25,039 --> 00:29:26,880
initially

810
00:29:26,880 --> 00:29:28,159
you know especially the first time you

811
00:29:28,159 --> 00:29:31,200
run this might run might see lots of

812
00:29:31,200 --> 00:29:33,760
small things so i would digest

813
00:29:33,760 --> 00:29:35,360
everything how the two works because

814
00:29:35,360 --> 00:29:37,120
this is a more complex too

815
00:29:37,120 --> 00:29:39,120
than the software composition analysis

816
00:29:39,120 --> 00:29:42,640
too right and then you look if there is

817
00:29:42,640 --> 00:29:44,720
any false positive or that something is

818
00:29:44,720 --> 00:29:47,440
okay and also recommended to run

819
00:29:47,440 --> 00:29:49,919
more than one fast if possible so you

820
00:29:49,919 --> 00:29:51,520
could compare because sometimes

821
00:29:51,520 --> 00:29:53,600
especially the open source

822
00:29:53,600 --> 00:29:55,360
you might have different rules on

823
00:29:55,360 --> 00:29:57,520
different projects so you could compare

824
00:29:57,520 --> 00:29:59,200
one might catch one problem the other

825
00:29:59,200 --> 00:30:00,000
one

826
00:30:00,000 --> 00:30:01,919
might not catch

827
00:30:01,919 --> 00:30:05,279
that specific problem right

828
00:30:05,279 --> 00:30:07,520
and also for all the issues you

829
00:30:07,520 --> 00:30:09,919
identified like all the other security

830
00:30:09,919 --> 00:30:12,880
issues i strongly recommend you

831
00:30:12,880 --> 00:30:14,799
especially if you're using a labeling

832
00:30:14,799 --> 00:30:18,159
system on your bug tracker or on your

833
00:30:18,159 --> 00:30:20,720
issues tracker you create a label called

834
00:30:20,720 --> 00:30:22,799
security and then you mark that a

835
00:30:22,799 --> 00:30:25,279
specific issue with that security label

836
00:30:25,279 --> 00:30:27,200
and why why do i think that is cool

837
00:30:27,200 --> 00:30:28,720
because you could have a visibility

838
00:30:28,720 --> 00:30:30,960
right away first of all you're still

839
00:30:30,960 --> 00:30:33,360
feeling the culture of security right

840
00:30:33,360 --> 00:30:34,559
and

841
00:30:34,559 --> 00:30:36,720
you have that label you could basically

842
00:30:36,720 --> 00:30:38,399
select all that label right away

843
00:30:38,399 --> 00:30:41,520
security and maybe do a sprint to fix

844
00:30:41,520 --> 00:30:43,919
all those security you could pull all of

845
00:30:43,919 --> 00:30:45,039
them

846
00:30:45,039 --> 00:30:47,120
pretty easy

847
00:30:47,120 --> 00:30:48,320
so

848
00:30:48,320 --> 00:30:50,320
those are the three things that i

849
00:30:50,320 --> 00:30:52,880
consider you could start right away and

850
00:30:52,880 --> 00:30:54,640
this would make your software more

851
00:30:54,640 --> 00:30:56,960
secure since day one for sure and there

852
00:30:56,960 --> 00:31:00,080
are a few other small recommendations uh

853
00:31:00,080 --> 00:31:01,760
to close this out

854
00:31:01,760 --> 00:31:04,640
and one is get the developers in contact

855
00:31:04,640 --> 00:31:07,279
with the application security world

856
00:31:07,279 --> 00:31:08,880
and the way you could do this you could

857
00:31:08,880 --> 00:31:11,360
use the owasp black channel lots of

858
00:31:11,360 --> 00:31:13,679
people are discussing that daily

859
00:31:13,679 --> 00:31:15,200
the same problems we've been discussing

860
00:31:15,200 --> 00:31:17,440
here how you do authorization how you do

861
00:31:17,440 --> 00:31:19,039
authentication how you do security

862
00:31:19,039 --> 00:31:20,320
testing

863
00:31:20,320 --> 00:31:22,159
you attend the chapters

864
00:31:22,159 --> 00:31:24,080
uh you know local chapters meeting and

865
00:31:24,080 --> 00:31:26,799
look for meetups and especially now you

866
00:31:26,799 --> 00:31:29,120
have lots of meetups online there's no

867
00:31:29,120 --> 00:31:32,320
excuse to not learn about things invest

868
00:31:32,320 --> 00:31:34,720
in training for your developers i really

869
00:31:34,720 --> 00:31:36,960
like trains that combine

870
00:31:36,960 --> 00:31:39,360
some showcase showing hey this is a real

871
00:31:39,360 --> 00:31:42,159
scenario that specific vulnerability

872
00:31:42,159 --> 00:31:44,960
somebody does this and this and that's

873
00:31:44,960 --> 00:31:46,399
thinking about a

874
00:31:46,399 --> 00:31:49,279
malicious cross-site script and show

875
00:31:49,279 --> 00:31:51,519
show the impact and then show the

876
00:31:51,519 --> 00:31:53,279
vulnerable code

877
00:31:53,279 --> 00:31:55,679
and show how you fix that in the code

878
00:31:55,679 --> 00:31:58,240
and of course if you could do that

879
00:31:58,240 --> 00:32:00,320
if you could attend those classes you

880
00:32:00,320 --> 00:32:01,919
know at a certain point

881
00:32:01,919 --> 00:32:05,440
and you do something specific to your

882
00:32:05,440 --> 00:32:08,480
uh your stack that's even better and i

883
00:32:08,480 --> 00:32:09,760
would strongly recommend you to start

884
00:32:09,760 --> 00:32:12,799
with some free training from the various

885
00:32:12,799 --> 00:32:15,519
uh academics that they are out there you

886
00:32:15,519 --> 00:32:18,080
could start your data

887
00:32:18,080 --> 00:32:20,640
if using public cloud in probably the

888
00:32:20,640 --> 00:32:22,480
small companies they are

889
00:32:22,480 --> 00:32:24,159
moving toward the cloud right they are

890
00:32:24,159 --> 00:32:25,760
not keeping like a data center which

891
00:32:25,760 --> 00:32:27,200
does not make sense

892
00:32:27,200 --> 00:32:29,200
leverage the security features from the

893
00:32:29,200 --> 00:32:31,760
public cloud such as container image

894
00:32:31,760 --> 00:32:33,600
scanner

895
00:32:33,600 --> 00:32:35,279
secret storage

896
00:32:35,279 --> 00:32:37,760
and even generate ssl certificates for

897
00:32:37,760 --> 00:32:39,519
you without paying that because you're

898
00:32:39,519 --> 00:32:41,519
at a customer

899
00:32:41,519 --> 00:32:44,320
their repetitive tasks

900
00:32:44,320 --> 00:32:46,960
or integrate them with the cict i think

901
00:32:46,960 --> 00:32:48,320
that is the best approach is the

902
00:32:48,320 --> 00:32:50,559
integration i show the next very simple

903
00:32:50,559 --> 00:32:54,000
exam example that you could do that

904
00:32:54,000 --> 00:32:56,240
and establish the practice among the

905
00:32:56,240 --> 00:32:59,120
developers to integrate the code often

906
00:32:59,120 --> 00:33:00,799
that means you're committing the code

907
00:33:00,799 --> 00:33:01,919
that you are

908
00:33:01,919 --> 00:33:04,159
developing to

909
00:33:04,159 --> 00:33:06,799
to your code baseline so

910
00:33:06,799 --> 00:33:08,399
when you put the security checks on the

911
00:33:08,399 --> 00:33:11,840
ci cd this will be running more and you

912
00:33:11,840 --> 00:33:13,360
take the benefit that those secure

913
00:33:13,360 --> 00:33:15,120
checks will happen early and

914
00:33:15,120 --> 00:33:18,080
you'll be catching errors early

915
00:33:18,080 --> 00:33:19,919
keep an inventory of your application

916
00:33:19,919 --> 00:33:20,880
api

917
00:33:20,880 --> 00:33:24,320
and subscribe for vulnerability alerts

918
00:33:24,320 --> 00:33:26,559
just an example if you're

919
00:33:26,559 --> 00:33:28,720
using node.js then you have this

920
00:33:28,720 --> 00:33:31,120
application that sits on that specific

921
00:33:31,120 --> 00:33:34,080
url and then you have node.js then

922
00:33:34,080 --> 00:33:36,399
node.js reason has a google groups that

923
00:33:36,399 --> 00:33:38,399
you could subscribe yourself

924
00:33:38,399 --> 00:33:40,640
and every time a vulnerability

925
00:33:40,640 --> 00:33:42,880
results in a new js will be out they

926
00:33:42,880 --> 00:33:44,880
will alert you right away so that's a

927
00:33:44,880 --> 00:33:47,919
very very rudimentary process but could

928
00:33:47,919 --> 00:33:49,600
give you a quick win getting those

929
00:33:49,600 --> 00:33:51,679
alerts

930
00:33:51,679 --> 00:33:54,000
and when hiring an external company for

931
00:33:54,000 --> 00:33:56,399
a pin testing if you're doing

932
00:33:56,399 --> 00:33:58,399
periosteal release or because you're

933
00:33:58,399 --> 00:34:00,720
complying uh you're com you're making a

934
00:34:00,720 --> 00:34:02,880
compliance with some regulations

935
00:34:02,880 --> 00:34:05,519
prefer a hybrid methodology where you

936
00:34:05,519 --> 00:34:07,919
disclose with the fantastic company

937
00:34:07,919 --> 00:34:09,839
details of the software

938
00:34:09,839 --> 00:34:12,480
uh you make your developers accessible

939
00:34:12,480 --> 00:34:14,399
to the consultants because

940
00:34:14,399 --> 00:34:16,800
they will be do a better job for sure

941
00:34:16,800 --> 00:34:18,719
you know than just a simple black box

942
00:34:18,719 --> 00:34:20,480
and even share the source code with them

943
00:34:20,480 --> 00:34:22,320
they'll be able to see things that they

944
00:34:22,320 --> 00:34:24,480
might not see during the

945
00:34:24,480 --> 00:34:26,000
on the black box

946
00:34:26,000 --> 00:34:28,159
and finally

947
00:34:28,159 --> 00:34:29,199
uh

948
00:34:29,199 --> 00:34:31,839
you know after all of these lots of

949
00:34:31,839 --> 00:34:33,520
things that they could start doing to

950
00:34:33,520 --> 00:34:36,960
improve security as your business grows

951
00:34:36,960 --> 00:34:39,679
it's time to plan the next steps and the

952
00:34:39,679 --> 00:34:42,239
next steps basically are related with

953
00:34:42,239 --> 00:34:42,960
the

954
00:34:42,960 --> 00:34:44,159
software

955
00:34:44,159 --> 00:34:45,359
maturity

956
00:34:45,359 --> 00:34:48,159
uh in the osm the software issues

957
00:34:48,159 --> 00:34:49,679
material model

958
00:34:49,679 --> 00:34:52,639
is a great place to to do

959
00:34:52,639 --> 00:34:54,320
a self-assessment

960
00:34:54,320 --> 00:34:56,800
and see what other activities that you

961
00:34:56,800 --> 00:34:57,680
could

962
00:34:57,680 --> 00:35:00,640
introduce uh to your development

963
00:35:00,640 --> 00:35:03,280
lifecycle

964
00:35:03,280 --> 00:35:04,000
so

965
00:35:04,000 --> 00:35:06,000
thank you so much for having me for

966
00:35:06,000 --> 00:35:07,680
watching this presentation if you have

967
00:35:07,680 --> 00:35:10,320
questions or comments please send me an

968
00:35:10,320 --> 00:35:15,400
email at seasmyorg gmail.com

