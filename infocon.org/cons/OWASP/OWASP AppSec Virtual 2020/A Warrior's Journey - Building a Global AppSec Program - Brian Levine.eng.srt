1
00:00:00,160 --> 00:00:01,199
hello

2
00:00:01,199 --> 00:00:03,040
i'm brian levine and welcome to this

3
00:00:03,040 --> 00:00:05,759
session a warrior's journey building a

4
00:00:05,759 --> 00:00:09,600
global application security program

5
00:00:10,000 --> 00:00:11,679
before we get started just some quick

6
00:00:11,679 --> 00:00:14,080
highlights of my background

7
00:00:14,080 --> 00:00:16,079
so these days i'm senior director of

8
00:00:16,079 --> 00:00:19,199
product security for x-way software

9
00:00:19,199 --> 00:00:21,039
if you haven't heard of axway xway is an

10
00:00:21,039 --> 00:00:23,680
enterprise cloud services provider to

11
00:00:23,680 --> 00:00:26,560
fortune 2000 enterprises and global

12
00:00:26,560 --> 00:00:28,640
government customers

13
00:00:28,640 --> 00:00:30,480
my team and i support a global

14
00:00:30,480 --> 00:00:32,320
engineering organization

15
00:00:32,320 --> 00:00:34,719
with roughly 600 developers

16
00:00:34,719 --> 00:00:36,880
and seven r d locations

17
00:00:36,880 --> 00:00:39,360
and over 150 unique products in our

18
00:00:39,360 --> 00:00:41,839
catalog

19
00:00:42,239 --> 00:00:44,559
so my formal education is in industrial

20
00:00:44,559 --> 00:00:45,840
engineering

21
00:00:45,840 --> 00:00:47,360
and before getting into security

22
00:00:47,360 --> 00:00:48,559
full-time

23
00:00:48,559 --> 00:00:50,879
i held a number of systems engineering

24
00:00:50,879 --> 00:00:52,079
positions

25
00:00:52,079 --> 00:00:54,160
delivering secure data management and

26
00:00:54,160 --> 00:00:56,960
data protection solutions to federal

27
00:00:56,960 --> 00:01:00,800
aerospace and manufacturing businesses

28
00:01:00,800 --> 00:01:03,039
for fun i also enjoy practicing jiu

29
00:01:03,039 --> 00:01:05,280
jitsu and i don't back down from a

30
00:01:05,280 --> 00:01:06,880
challenge

31
00:01:06,880 --> 00:01:09,040
even if it's from my niece the karate

32
00:01:09,040 --> 00:01:13,720
past master pictured here

33
00:01:14,000 --> 00:01:15,680
so this journey began

34
00:01:15,680 --> 00:01:17,520
when i was interviewing for a security

35
00:01:17,520 --> 00:01:21,680
product management role at a sas startup

36
00:01:21,680 --> 00:01:23,680
during the process i asked if i could

37
00:01:23,680 --> 00:01:25,759
speak to their chief security officer

38
00:01:25,759 --> 00:01:28,320
and head of security engineering

39
00:01:28,320 --> 00:01:30,640
and so after a few awkward stairs

40
00:01:30,640 --> 00:01:32,880
the effective response was well

41
00:01:32,880 --> 00:01:34,960
we don't have those yet either

42
00:01:34,960 --> 00:01:36,000
and

43
00:01:36,000 --> 00:01:37,680
yeah we'd like you to handle that for us

44
00:01:37,680 --> 00:01:39,040
too

45
00:01:39,040 --> 00:01:40,880
and that's where our story begins so

46
00:01:40,880 --> 00:01:43,920
let's have some fun with it

47
00:01:44,479 --> 00:01:46,000
so i'll start off asking you the

48
00:01:46,000 --> 00:01:47,280
question

49
00:01:47,280 --> 00:01:49,840
where would you begin

50
00:01:49,840 --> 00:01:51,439
there's an alphabetic soup of standards

51
00:01:51,439 --> 00:01:55,920
to choose from you got iso sock2 osp

52
00:01:55,920 --> 00:02:00,240
nist bsum pci and on and on and on

53
00:02:00,240 --> 00:02:01,920
if you were tasked with building a

54
00:02:01,920 --> 00:02:03,439
security program

55
00:02:03,439 --> 00:02:05,680
it was day one in a new role

56
00:02:05,680 --> 00:02:07,680
which playbook would you use

57
00:02:07,680 --> 00:02:09,758
is there a script you can follow

58
00:02:09,758 --> 00:02:11,920
which set of frameworks would you use to

59
00:02:11,920 --> 00:02:15,119
get started in the right direction

60
00:02:17,440 --> 00:02:18,959
so my talk today is going to draw on

61
00:02:18,959 --> 00:02:20,560
this quote and the wisdoms of the

62
00:02:20,560 --> 00:02:22,879
martial arts master and philosopher

63
00:02:22,879 --> 00:02:24,879
bruce lee

64
00:02:24,879 --> 00:02:26,560
adapt what is useful

65
00:02:26,560 --> 00:02:29,760
reject what is useless and add what is

66
00:02:29,760 --> 00:02:32,160
specifically your own

67
00:02:32,160 --> 00:02:34,080
and so in that spirit i'm going to draw

68
00:02:34,080 --> 00:02:36,400
on my own experience with some of these

69
00:02:36,400 --> 00:02:38,720
frameworks and guidelines and cover the

70
00:02:38,720 --> 00:02:39,599
core

71
00:02:39,599 --> 00:02:41,280
foundational components

72
00:02:41,280 --> 00:02:44,160
that i feel have led to my success and i

73
00:02:44,160 --> 00:02:48,480
hope will help you get started

74
00:02:48,560 --> 00:02:50,879
and as well as i hope that

75
00:02:50,879 --> 00:02:52,800
you'll take some ideas away from this to

76
00:02:52,800 --> 00:02:54,800
advance your own application security

77
00:02:54,800 --> 00:02:57,200
program

78
00:02:59,120 --> 00:03:00,400
so what i'm hoping you'll get out of

79
00:03:00,400 --> 00:03:01,760
this talk

80
00:03:01,760 --> 00:03:03,920
are some strategies and tactics that you

81
00:03:03,920 --> 00:03:06,080
can use to develop and

82
00:03:06,080 --> 00:03:08,080
improve your program and what we're

83
00:03:08,080 --> 00:03:10,080
going to cover in these

84
00:03:10,080 --> 00:03:12,080
three core areas

85
00:03:12,080 --> 00:03:13,519
so we'll focus on

86
00:03:13,519 --> 00:03:15,840
establishing a security culture

87
00:03:15,840 --> 00:03:18,000
we'll look at developing and scaling

88
00:03:18,000 --> 00:03:19,680
security processes

89
00:03:19,680 --> 00:03:21,360
and we'll look at governance for

90
00:03:21,360 --> 00:03:23,280
ensuring visibility and executive

91
00:03:23,280 --> 00:03:25,280
accountability

92
00:03:25,280 --> 00:03:26,560
so i really look forward to hearing your

93
00:03:26,560 --> 00:03:28,080
feedback questions and maybe some

94
00:03:28,080 --> 00:03:30,080
different opinions other ideas that

95
00:03:30,080 --> 00:03:32,640
maybe you've found to be successful

96
00:03:32,640 --> 00:03:34,560
and also i'm going to try to be brief

97
00:03:34,560 --> 00:03:36,000
where i can because of the recorded

98
00:03:36,000 --> 00:03:37,440
format

99
00:03:37,440 --> 00:03:39,120
and attention spans for watching long

100
00:03:39,120 --> 00:03:40,799
videos so i might gloss over some

101
00:03:40,799 --> 00:03:42,879
details but i'll be happy to cover that

102
00:03:42,879 --> 00:03:45,120
in more depth or give you more detail if

103
00:03:45,120 --> 00:03:46,959
you just ping me and we can follow up

104
00:03:46,959 --> 00:03:49,440
offline

105
00:03:50,879 --> 00:03:53,599
so we'll start with culture

106
00:03:53,599 --> 00:03:55,840
security is everyone's responsibility

107
00:03:55,840 --> 00:03:57,040
you've probably all heard this

108
00:03:57,040 --> 00:03:58,959
declaration in some shape or form in

109
00:03:58,959 --> 00:04:01,360
your career

110
00:04:01,360 --> 00:04:03,680
but how do we really implement that

111
00:04:03,680 --> 00:04:05,519
everyone can't do security all of the

112
00:04:05,519 --> 00:04:06,640
time

113
00:04:06,640 --> 00:04:09,439
developers managers operations teams

114
00:04:09,439 --> 00:04:11,599
they all have day jobs to do

115
00:04:11,599 --> 00:04:13,760
so let's unpack this a little bit

116
00:04:13,760 --> 00:04:15,760
and talk about some of the key role

117
00:04:15,760 --> 00:04:17,600
players and what their responsibilities

118
00:04:17,600 --> 00:04:21,919
are in delivering a security program

119
00:04:23,120 --> 00:04:24,240
so the first role we're going to take a

120
00:04:24,240 --> 00:04:26,320
look at is the central application

121
00:04:26,320 --> 00:04:29,520
security group cisco this group goes by

122
00:04:29,520 --> 00:04:31,759
many names you may recognize some of

123
00:04:31,759 --> 00:04:32,960
these

124
00:04:32,960 --> 00:04:36,160
if you're looking at the olasp

125
00:04:36,160 --> 00:04:38,400
sam they call it the secure software

126
00:04:38,400 --> 00:04:41,600
center of eclip excellence or the ssce

127
00:04:41,600 --> 00:04:42,960
it's mouthful

128
00:04:42,960 --> 00:04:46,400
uh the bsim calls these these uh

129
00:04:46,400 --> 00:04:48,800
this team the secure sorry the software

130
00:04:48,800 --> 00:04:50,320
security group

131
00:04:50,320 --> 00:04:52,720
uh in my company x-way we call ourselves

132
00:04:52,720 --> 00:04:54,400
the product security group

133
00:04:54,400 --> 00:04:57,120
uh i've also worked with individuals who

134
00:04:57,120 --> 00:04:59,680
go by product security office

135
00:04:59,680 --> 00:05:01,199
so there's many names and you may

136
00:05:01,199 --> 00:05:04,080
recognize a few

137
00:05:04,320 --> 00:05:06,639
but whatever you choose to call it

138
00:05:06,639 --> 00:05:08,800
uh let's look at some of the guidance

139
00:05:08,800 --> 00:05:11,440
from our last sam and and bsim and

140
00:05:11,440 --> 00:05:12,960
others on

141
00:05:12,960 --> 00:05:14,400
what the what the roles and

142
00:05:14,400 --> 00:05:16,400
responsibilities are for your central

143
00:05:16,400 --> 00:05:19,120
security team

144
00:05:19,280 --> 00:05:21,840
so just highlighted in uh in red here a

145
00:05:21,840 --> 00:05:23,840
couple of the uh the ones that i

146
00:05:23,840 --> 00:05:26,160
resonate with and and have worked well

147
00:05:26,160 --> 00:05:27,840
for me

148
00:05:27,840 --> 00:05:31,120
number one defining the charter so make

149
00:05:31,120 --> 00:05:34,000
sure that it's defined written down and

150
00:05:34,000 --> 00:05:35,199
then you've got

151
00:05:35,199 --> 00:05:36,479
executive

152
00:05:36,479 --> 00:05:38,240
management buy-in and executive

153
00:05:38,240 --> 00:05:41,759
sponsorship on the charter

154
00:05:41,840 --> 00:05:45,280
the security group needs to publish sdlc

155
00:05:45,280 --> 00:05:46,479
standards

156
00:05:46,479 --> 00:05:49,039
and guidelines for app security

157
00:05:49,039 --> 00:05:51,759
and the product champions are typically

158
00:05:51,759 --> 00:05:54,000
the ones that are going to be required

159
00:05:54,000 --> 00:05:55,680
and responsible

160
00:05:55,680 --> 00:05:57,440
to first select

161
00:05:57,440 --> 00:05:59,919
the tools to use within the organization

162
00:05:59,919 --> 00:06:02,800
for security scanning and the sdlc

163
00:06:02,800 --> 00:06:05,800
process

164
00:06:07,120 --> 00:06:08,400
excuse me

165
00:06:08,400 --> 00:06:10,880
uh also some very interesting data and

166
00:06:10,880 --> 00:06:14,000
pointers from bsim

167
00:06:14,000 --> 00:06:16,800
so if you look at uh the bsim

168
00:06:16,800 --> 00:06:19,360
study and what they recommend for the

169
00:06:19,360 --> 00:06:21,199
ssg

170
00:06:21,199 --> 00:06:23,280
you can read the slide here but

171
00:06:23,280 --> 00:06:25,759
according to their observations the very

172
00:06:25,759 --> 00:06:29,120
first step is to form an ssg

173
00:06:29,120 --> 00:06:32,319
without an ssg success is very unlikely

174
00:06:32,319 --> 00:06:34,240
so they looked at 130 firms in the

175
00:06:34,240 --> 00:06:35,840
latest study

176
00:06:35,840 --> 00:06:37,840
and noted that every single one of them

177
00:06:37,840 --> 00:06:39,039
has a

178
00:06:39,039 --> 00:06:42,479
security software group

179
00:06:43,120 --> 00:06:45,039
so basically the message is don't try

180
00:06:45,039 --> 00:06:48,880
this at home if you don't have an ssg

181
00:06:48,880 --> 00:06:51,120
some also some interesting data from

182
00:06:51,120 --> 00:06:53,759
from this study

183
00:06:53,759 --> 00:06:57,039
if you look at the the first red arrow

184
00:06:57,039 --> 00:06:58,000
there

185
00:06:58,000 --> 00:07:00,080
the

186
00:07:00,080 --> 00:07:02,479
average size is two percent

187
00:07:02,479 --> 00:07:04,800
of

188
00:07:04,880 --> 00:07:07,199
ssg members to developers so in other

189
00:07:07,199 --> 00:07:09,520
words for every 100 developers you have

190
00:07:09,520 --> 00:07:12,639
two members on your ssg team

191
00:07:12,639 --> 00:07:15,440
and then firms with over 500 developers

192
00:07:15,440 --> 00:07:16,639
or more

193
00:07:16,639 --> 00:07:19,440
and that group the largest size of the

194
00:07:19,440 --> 00:07:21,759
ssg was three percent

195
00:07:21,759 --> 00:07:23,360
so it's a benchmark somewhere around one

196
00:07:23,360 --> 00:07:26,319
to three percent of your ssg team

197
00:07:26,319 --> 00:07:28,479
to the number of developers seems like

198
00:07:28,479 --> 00:07:31,280
the goal to shoot for

199
00:07:31,280 --> 00:07:32,800
and of course it all depends on the size

200
00:07:32,800 --> 00:07:34,720
of your organization your mission the

201
00:07:34,720 --> 00:07:36,800
business you're in and

202
00:07:36,800 --> 00:07:40,319
the information you're trying to protect

203
00:07:42,800 --> 00:07:45,039
so just some advice and notes on

204
00:07:45,039 --> 00:07:46,720
building your

205
00:07:46,720 --> 00:07:50,000
software security center of excellence

206
00:07:50,000 --> 00:07:52,960
number one getting started so securing

207
00:07:52,960 --> 00:07:55,440
executive sponsorship is critical you

208
00:07:55,440 --> 00:07:57,120
have to get executive buy-in and

209
00:07:57,120 --> 00:08:00,000
executive skin in the game

210
00:08:00,000 --> 00:08:01,680
believe me you will need this when it

211
00:08:01,680 --> 00:08:03,360
comes time to prioritize security

212
00:08:03,360 --> 00:08:06,479
alongside with feature development

213
00:08:06,479 --> 00:08:07,919
product roadmap

214
00:08:07,919 --> 00:08:09,039
and

215
00:08:09,039 --> 00:08:09,840
other

216
00:08:09,840 --> 00:08:11,520
stakeholders and other

217
00:08:11,520 --> 00:08:13,440
challenges to the business everyone's

218
00:08:13,440 --> 00:08:14,400
got a

219
00:08:14,400 --> 00:08:16,960
got a say in what the development team

220
00:08:16,960 --> 00:08:19,199
should work on next so getting

221
00:08:19,199 --> 00:08:21,680
visibility and sponsorship for security

222
00:08:21,680 --> 00:08:24,400
at the top down is is critical for your

223
00:08:24,400 --> 00:08:27,280
success

224
00:08:27,280 --> 00:08:29,199
additionally the charter and scope

225
00:08:29,199 --> 00:08:32,320
should be written documented

226
00:08:32,320 --> 00:08:35,679
and shared within the organization on a

227
00:08:35,679 --> 00:08:37,760
wiki or the corporate internet make sure

228
00:08:37,760 --> 00:08:39,279
this is documented

229
00:08:39,279 --> 00:08:42,559
shared and everyone has access to it and

230
00:08:42,559 --> 00:08:46,319
visibly understands it

231
00:08:46,640 --> 00:08:48,080
your goals and objectives need to be

232
00:08:48,080 --> 00:08:52,680
defined achievable and measurable

233
00:08:54,160 --> 00:08:55,519
you've done the first three you want to

234
00:08:55,519 --> 00:08:58,320
make sure you're aligned with r and d

235
00:08:58,320 --> 00:09:00,880
so you make sure that they

236
00:09:00,880 --> 00:09:03,440
are aligned in agreement with your scope

237
00:09:03,440 --> 00:09:06,480
your charter the goals of your ss dlc

238
00:09:06,480 --> 00:09:09,279
if not iterate go back again until you

239
00:09:09,279 --> 00:09:10,640
have that alignment

240
00:09:10,640 --> 00:09:12,320
uh additionally when you're working with

241
00:09:12,320 --> 00:09:14,080
engineering you know make sure you

242
00:09:14,080 --> 00:09:16,080
understand the procedures and tools they

243
00:09:16,080 --> 00:09:17,279
use today

244
00:09:17,279 --> 00:09:19,360
or are they are they using agile are

245
00:09:19,360 --> 00:09:20,800
they doing scrum are they doing

246
00:09:20,800 --> 00:09:22,959
continuous integration

247
00:09:22,959 --> 00:09:24,240
what's their

248
00:09:24,240 --> 00:09:25,839
product life cycle look like what does

249
00:09:25,839 --> 00:09:28,320
their road map look like make sure

250
00:09:28,320 --> 00:09:30,640
your security group understands

251
00:09:30,640 --> 00:09:33,040
the environment and has that business

252
00:09:33,040 --> 00:09:35,200
awareness

253
00:09:35,200 --> 00:09:38,480
of the product development life cycle

254
00:09:38,480 --> 00:09:41,200
before you before you start

255
00:09:41,200 --> 00:09:43,120
and then start with internal evangelism

256
00:09:43,120 --> 00:09:46,000
again the blogs internal blogs internal

257
00:09:46,000 --> 00:09:48,000
wikis corporate intranet

258
00:09:48,000 --> 00:09:49,839
slack channels

259
00:09:49,839 --> 00:09:51,040
teams

260
00:09:51,040 --> 00:09:55,200
uh establishing a a forum where you can

261
00:09:55,200 --> 00:09:56,640
put out your guidance put out your

262
00:09:56,640 --> 00:09:59,440
guidelines get discussion going ask for

263
00:09:59,440 --> 00:10:00,720
feedback

264
00:10:00,720 --> 00:10:02,880
these are all important goals to start

265
00:10:02,880 --> 00:10:05,120
building a culture and to spark start

266
00:10:05,120 --> 00:10:08,399
evangelizing security

267
00:10:08,640 --> 00:10:11,440
and then also the the ss ce is

268
00:10:11,440 --> 00:10:13,920
responsible to you know look at and see

269
00:10:13,920 --> 00:10:15,600
what platforms are we using what

270
00:10:15,600 --> 00:10:18,800
languages what the type what type of

271
00:10:18,800 --> 00:10:20,959
vulnerabilities are being discovered and

272
00:10:20,959 --> 00:10:24,480
identify tools to address and identify

273
00:10:24,480 --> 00:10:27,600
those types of issues

274
00:10:29,360 --> 00:10:30,800
so those are some points on you know

275
00:10:30,800 --> 00:10:33,120
getting started now let's look at if you

276
00:10:33,120 --> 00:10:34,560
already have

277
00:10:34,560 --> 00:10:36,399
a software security group and you're

278
00:10:36,399 --> 00:10:38,320
looking to kind of level up and take

279
00:10:38,320 --> 00:10:42,000
things further and improve the program

280
00:10:42,000 --> 00:10:44,560
so number one you know stay focused on

281
00:10:44,560 --> 00:10:48,240
the customer r d is your customer

282
00:10:48,240 --> 00:10:50,320
and as you progress you need to remember

283
00:10:50,320 --> 00:10:51,920
that

284
00:10:51,920 --> 00:10:53,680
their needs come first in terms of

285
00:10:53,680 --> 00:10:55,920
helping them achieve security in their

286
00:10:55,920 --> 00:10:58,560
workflow you have to align

287
00:10:58,560 --> 00:11:01,040
and make make it so that they can

288
00:11:01,040 --> 00:11:03,200
accomplish their goal of shipping

289
00:11:03,200 --> 00:11:04,480
software

290
00:11:04,480 --> 00:11:06,240
and you're serving their need

291
00:11:06,240 --> 00:11:08,480
and helping them achieve security in

292
00:11:08,480 --> 00:11:12,360
their software delivery

293
00:11:13,760 --> 00:11:15,920
we go from then getting starting phase

294
00:11:15,920 --> 00:11:17,440
and leveling up now we're we're

295
00:11:17,440 --> 00:11:20,000
enforcing and publishing ss dlc

296
00:11:20,000 --> 00:11:22,560
standards procedures and best practices

297
00:11:22,560 --> 00:11:24,959
uh we're no longer just sharing ideas

298
00:11:24,959 --> 00:11:28,720
but we're enforcing standards

299
00:11:28,720 --> 00:11:31,040
and then as as you grow and as the team

300
00:11:31,040 --> 00:11:33,040
continues to grow and scale you want to

301
00:11:33,040 --> 00:11:35,519
start identifying your promising members

302
00:11:35,519 --> 00:11:37,040
of the development organization that

303
00:11:37,040 --> 00:11:39,440
have a knack for security uh promote

304
00:11:39,440 --> 00:11:40,480
them

305
00:11:40,480 --> 00:11:42,640
or designate them as security champions

306
00:11:42,640 --> 00:11:44,720
or maybe they might be interested in

307
00:11:44,720 --> 00:11:45,680
joining

308
00:11:45,680 --> 00:11:46,399
the

309
00:11:46,399 --> 00:11:48,959
security software center of excellence

310
00:11:48,959 --> 00:11:53,199
and coming on to uh the core team

311
00:11:53,440 --> 00:11:55,200
and as you scale you know external

312
00:11:55,200 --> 00:11:57,920
evangelism comes a bigger part of the

313
00:11:57,920 --> 00:12:01,680
program so not only are you

314
00:12:01,760 --> 00:12:03,519
selling internally but now you're

315
00:12:03,519 --> 00:12:04,560
publicly

316
00:12:04,560 --> 00:12:06,880
talking about your program going uh to

317
00:12:06,880 --> 00:12:09,839
trade shows and giving talks going to uh

318
00:12:09,839 --> 00:12:11,200
conferences

319
00:12:11,200 --> 00:12:14,240
uh blog posts engaging with customers

320
00:12:14,240 --> 00:12:15,440
and um

321
00:12:15,440 --> 00:12:17,839
and doing a lot more outbound

322
00:12:17,839 --> 00:12:20,399
public marketing of your security

323
00:12:20,399 --> 00:12:22,720
program and the security of your your

324
00:12:22,720 --> 00:12:26,320
products that that you're delivering

325
00:12:26,639 --> 00:12:29,519
and as you scale up of course devsec ops

326
00:12:29,519 --> 00:12:30,880
automation

327
00:12:30,880 --> 00:12:32,639
uh really leveling up requires

328
00:12:32,639 --> 00:12:34,880
automation and continuous delivery at

329
00:12:34,880 --> 00:12:36,639
devops speed we'll talk about some of

330
00:12:36,639 --> 00:12:38,959
that here today

331
00:12:38,959 --> 00:12:41,040
and then data driven program management

332
00:12:41,040 --> 00:12:44,880
again as you scale to 100 150 1 000

333
00:12:44,880 --> 00:12:48,399
products in your catalog you need to

334
00:12:48,399 --> 00:12:49,279
measure

335
00:12:49,279 --> 00:12:51,200
the activities measure what your team is

336
00:12:51,200 --> 00:12:54,399
doing measure the security issues that

337
00:12:54,399 --> 00:12:56,399
are being discovered and the products

338
00:12:56,399 --> 00:12:57,920
that you're working with

339
00:12:57,920 --> 00:12:59,680
mine that data

340
00:12:59,680 --> 00:13:02,480
to improve your product

341
00:13:02,480 --> 00:13:05,839
process to prove your team's workflow to

342
00:13:05,839 --> 00:13:07,440
improve your team's charter so i'll give

343
00:13:07,440 --> 00:13:09,680
you an example

344
00:13:09,680 --> 00:13:11,519
in our company we looked at

345
00:13:11,519 --> 00:13:12,800
um

346
00:13:12,800 --> 00:13:14,959
defects that were being reported on

347
00:13:14,959 --> 00:13:17,680
certain a certain category of products

348
00:13:17,680 --> 00:13:19,200
we discovered

349
00:13:19,200 --> 00:13:20,720
across

350
00:13:20,720 --> 00:13:22,240
all of these products

351
00:13:22,240 --> 00:13:24,720
25 of the reported issues were

352
00:13:24,720 --> 00:13:26,800
third-party component

353
00:13:26,800 --> 00:13:28,160
related

354
00:13:28,160 --> 00:13:30,480
so we initiated a program and a

355
00:13:30,480 --> 00:13:33,279
procedure to improve our software

356
00:13:33,279 --> 00:13:35,760
composition analysis

357
00:13:35,760 --> 00:13:37,360
and select some new tools and some

358
00:13:37,360 --> 00:13:38,800
better procedures

359
00:13:38,800 --> 00:13:40,480
to reduce that

360
00:13:40,480 --> 00:13:44,240
specific type of vulnerability

361
00:13:46,880 --> 00:13:48,800
so the next

362
00:13:48,800 --> 00:13:50,880
role i'll talk about is the security

363
00:13:50,880 --> 00:13:52,480
champion

364
00:13:52,480 --> 00:13:55,120
uh so the security champion

365
00:13:55,120 --> 00:13:57,920
is uh here's you can see what sam

366
00:13:57,920 --> 00:14:00,000
their definition for security champion

367
00:14:00,000 --> 00:14:02,480
and you can also see some statistics

368
00:14:02,480 --> 00:14:03,839
from bsam

369
00:14:03,839 --> 00:14:07,199
uh the the from bsin uh the important

370
00:14:07,199 --> 00:14:09,920
thing here is that the security champion

371
00:14:09,920 --> 00:14:14,079
is defined for each development team

372
00:14:14,480 --> 00:14:16,480
and 42 percent of the firms in the

373
00:14:16,480 --> 00:14:18,160
beesome study

374
00:14:18,160 --> 00:14:20,320
42 of them have a security champions

375
00:14:20,320 --> 00:14:23,199
program and 65 of the firms

376
00:14:23,199 --> 00:14:24,240
have

377
00:14:24,240 --> 00:14:25,760
uh a program

378
00:14:25,760 --> 00:14:27,920
if they've been part of the bsm study

379
00:14:27,920 --> 00:14:31,519
more than one time

380
00:14:31,519 --> 00:14:33,920
now we'll look at some specifics on

381
00:14:33,920 --> 00:14:37,120
building that security champions program

382
00:14:37,120 --> 00:14:39,040
and leveling up the security champions

383
00:14:39,040 --> 00:14:41,439
program

384
00:14:42,240 --> 00:14:44,560
you can see also some some uh

385
00:14:44,560 --> 00:14:46,480
some companies call these security

386
00:14:46,480 --> 00:14:48,160
champions others call it security point

387
00:14:48,160 --> 00:14:51,920
of contact or the spock

388
00:14:51,920 --> 00:14:54,160
so you can choose a creative name that

389
00:14:54,160 --> 00:14:58,240
works for you um but the idea here is to

390
00:14:58,240 --> 00:14:59,839
identify

391
00:14:59,839 --> 00:15:01,760
individuals with a passion and an

392
00:15:01,760 --> 00:15:04,240
interest for security

393
00:15:04,240 --> 00:15:05,680
volunteers

394
00:15:05,680 --> 00:15:08,480
work a lot better than voluntold so it's

395
00:15:08,480 --> 00:15:10,959
always better to find the folks that are

396
00:15:10,959 --> 00:15:13,760
already coming to you asking about

397
00:15:13,760 --> 00:15:16,480
security topics asking about privacy

398
00:15:16,480 --> 00:15:18,480
raising security issues coming to you

399
00:15:18,480 --> 00:15:19,199
with

400
00:15:19,199 --> 00:15:20,880
with challenges and things to work on

401
00:15:20,880 --> 00:15:21,839
already

402
00:15:21,839 --> 00:15:24,079
those are the folks who want to

403
00:15:24,079 --> 00:15:27,120
identify and and name as your security

404
00:15:27,120 --> 00:15:29,120
champions

405
00:15:29,120 --> 00:15:31,040
with the security champion's main

406
00:15:31,040 --> 00:15:33,279
responsibility is to execute

407
00:15:33,279 --> 00:15:34,240
the

408
00:15:34,240 --> 00:15:36,720
secure development lifecycle procedures

409
00:15:36,720 --> 00:15:38,240
the testing

410
00:15:38,240 --> 00:15:39,920
the threat modeling the security

411
00:15:39,920 --> 00:15:42,000
scanning

412
00:15:42,000 --> 00:15:44,240
inside of the development project that

413
00:15:44,240 --> 00:15:45,519
they work on

414
00:15:45,519 --> 00:15:46,880
so they're kind of the single point of

415
00:15:46,880 --> 00:15:49,680
care the point of contact

416
00:15:49,680 --> 00:15:51,199
for the

417
00:15:51,199 --> 00:15:54,560
ssg as well as the individual on the

418
00:15:54,560 --> 00:15:56,480
team who's responsible hands on the

419
00:15:56,480 --> 00:15:58,880
keyboard for setting up

420
00:15:58,880 --> 00:16:01,040
and executing the scans they'll also

421
00:16:01,040 --> 00:16:03,600
work with the devops team

422
00:16:03,600 --> 00:16:05,279
and others on the team

423
00:16:05,279 --> 00:16:07,839
to instrument the tooling

424
00:16:07,839 --> 00:16:10,399
as well as

425
00:16:10,720 --> 00:16:12,720
some other activities we'll talk about

426
00:16:12,720 --> 00:16:14,800
in the next slide

427
00:16:14,800 --> 00:16:17,279
but triaging the findings that come back

428
00:16:17,279 --> 00:16:19,199
from the tooling getting that into the

429
00:16:19,199 --> 00:16:22,199
backlog

430
00:16:24,160 --> 00:16:26,399
in terms of scaling the program

431
00:16:26,399 --> 00:16:28,000
once

432
00:16:28,000 --> 00:16:29,519
you know you're kind of up and running

433
00:16:29,519 --> 00:16:31,440
and scaling

434
00:16:31,440 --> 00:16:33,839
now you're looking at multiple full-time

435
00:16:33,839 --> 00:16:36,480
champions per project some

436
00:16:36,480 --> 00:16:38,079
teams and some development teams will

437
00:16:38,079 --> 00:16:40,160
have multiple spocs

438
00:16:40,160 --> 00:16:42,560
some will have multiple full-time

439
00:16:42,560 --> 00:16:44,959
security champions working on one

440
00:16:44,959 --> 00:16:46,800
development project

441
00:16:46,800 --> 00:16:49,199
or a set of microservices for one

442
00:16:49,199 --> 00:16:51,839
product

443
00:16:51,839 --> 00:16:54,639
again as you scale up and mature

444
00:16:54,639 --> 00:16:56,399
your security champions are likely going

445
00:16:56,399 --> 00:16:58,720
to be pushing the curve

446
00:16:58,720 --> 00:17:00,000
they're going to be identifying

447
00:17:00,000 --> 00:17:02,320
improvements identifying new procedures

448
00:17:02,320 --> 00:17:04,480
new security tools that you can then

449
00:17:04,480 --> 00:17:05,839
leverage back

450
00:17:05,839 --> 00:17:08,079
within the ssg and

451
00:17:08,079 --> 00:17:10,319
also leverage through other

452
00:17:10,319 --> 00:17:12,400
to other development projects using

453
00:17:12,400 --> 00:17:16,079
these tools and advancements

454
00:17:16,079 --> 00:17:18,640
and then also sometimes the security

455
00:17:18,640 --> 00:17:19,760
champions

456
00:17:19,760 --> 00:17:22,079
uh as you evolve these

457
00:17:22,079 --> 00:17:24,319
these team members will eventually make

458
00:17:24,319 --> 00:17:26,959
their way onto your central secure

459
00:17:26,959 --> 00:17:28,480
software team

460
00:17:28,480 --> 00:17:32,640
uh or your software security group and

461
00:17:32,640 --> 00:17:36,799
uh and be core members of the ssg

462
00:17:38,799 --> 00:17:40,960
some gotchas and some anti-patterns to

463
00:17:40,960 --> 00:17:42,080
look out for

464
00:17:42,080 --> 00:17:43,440
with spock's

465
00:17:43,440 --> 00:17:46,000
number one is if your spock is the only

466
00:17:46,000 --> 00:17:47,760
member of the team responsible for

467
00:17:47,760 --> 00:17:49,039
security

468
00:17:49,039 --> 00:17:50,640
then

469
00:17:50,640 --> 00:17:52,320
and all security tasks and questions are

470
00:17:52,320 --> 00:17:55,600
assigned to the spoc

471
00:17:55,600 --> 00:17:57,760
now this box should be working with

472
00:17:57,760 --> 00:18:01,039
devops and build managers to prioritize

473
00:18:01,039 --> 00:18:03,600
and automate security testing into the

474
00:18:03,600 --> 00:18:05,600
pipeline is not always the spoc's

475
00:18:05,600 --> 00:18:07,120
responsibility

476
00:18:07,120 --> 00:18:08,160
to

477
00:18:08,160 --> 00:18:10,160
create the pipeline or create the devops

478
00:18:10,160 --> 00:18:12,559
tooling to run the scans this box

479
00:18:12,559 --> 00:18:16,000
responsible to help triage

480
00:18:16,000 --> 00:18:17,840
and review the findings and then put

481
00:18:17,840 --> 00:18:19,760
them into the backlog but then the

482
00:18:19,760 --> 00:18:22,480
entire development team is responsible

483
00:18:22,480 --> 00:18:25,280
to work on that backlog fixing security

484
00:18:25,280 --> 00:18:27,678
issues

485
00:18:27,760 --> 00:18:28,640
again

486
00:18:28,640 --> 00:18:30,799
the the second bullet here the second

487
00:18:30,799 --> 00:18:33,520
anti-pattern is you know if the spock is

488
00:18:33,520 --> 00:18:35,840
responsible to prioritize security into

489
00:18:35,840 --> 00:18:38,240
the product delivery cycle

490
00:18:38,240 --> 00:18:40,960
and uh the third anti-pattern is

491
00:18:40,960 --> 00:18:43,679
if there's an adversarial or subordinate

492
00:18:43,679 --> 00:18:45,600
relationship between

493
00:18:45,600 --> 00:18:49,360
the ssg and the security champion

494
00:18:49,360 --> 00:18:51,039
so for the last two bullets

495
00:18:51,039 --> 00:18:52,559
you know

496
00:18:52,559 --> 00:18:54,080
in terms of

497
00:18:54,080 --> 00:18:58,320
responsibilities for priorities and

498
00:18:58,320 --> 00:18:59,840
it's the engineering manager and the

499
00:18:59,840 --> 00:19:01,440
product manager and the executives to

500
00:19:01,440 --> 00:19:04,480
responsible to prioritize security

501
00:19:04,480 --> 00:19:07,120
it's not the spocs role to prioritize

502
00:19:07,120 --> 00:19:09,600
security

503
00:19:09,600 --> 00:19:11,919
you don't want to make the spock's job

504
00:19:11,919 --> 00:19:14,880
harder than it is already by also making

505
00:19:14,880 --> 00:19:17,760
them now convince their boss that

506
00:19:17,760 --> 00:19:20,160
security is priority this has to be top

507
00:19:20,160 --> 00:19:22,480
down driven from the executive

508
00:19:22,480 --> 00:19:24,559
top down so the executives are

509
00:19:24,559 --> 00:19:26,640
responsible to prioritize security the

510
00:19:26,640 --> 00:19:28,160
engineering managers the product

511
00:19:28,160 --> 00:19:30,960
managers are responsible to be aware

512
00:19:30,960 --> 00:19:31,919
and

513
00:19:31,919 --> 00:19:33,840
have visibility on the security of their

514
00:19:33,840 --> 00:19:36,160
product and they're accountable

515
00:19:36,160 --> 00:19:38,240
to make sure security is accomplished

516
00:19:38,240 --> 00:19:39,919
within their

517
00:19:39,919 --> 00:19:42,240
roadmap within their delivery cycle it's

518
00:19:42,240 --> 00:19:44,559
not the spocs responsibility to

519
00:19:44,559 --> 00:19:47,200
prioritize

520
00:19:47,760 --> 00:19:51,600
and as far as the uh the third bullet

521
00:19:51,600 --> 00:19:54,320
again making sure that

522
00:19:54,320 --> 00:19:57,679
your ssg keeps in mind that r d is the

523
00:19:57,679 --> 00:19:59,600
customer the spock is the customer the

524
00:19:59,600 --> 00:20:02,480
ssh is serving the security champion

525
00:20:02,480 --> 00:20:04,720
it's not a blaming culture if the

526
00:20:04,720 --> 00:20:06,880
product is failing security it's a

527
00:20:06,880 --> 00:20:08,960
business organizational product

528
00:20:08,960 --> 00:20:11,520
management issue it's not the spocs

529
00:20:11,520 --> 00:20:13,679
fault so we want to have execute in a

530
00:20:13,679 --> 00:20:15,600
blameless culture in a blameless

531
00:20:15,600 --> 00:20:18,158
environment

532
00:20:19,280 --> 00:20:21,600
so now we've established who the role

533
00:20:21,600 --> 00:20:22,960
players are

534
00:20:22,960 --> 00:20:26,000
uh how do we get teams to know and apply

535
00:20:26,000 --> 00:20:29,039
what we need them to do

536
00:20:29,039 --> 00:20:31,600
quote here knowing is not enough we must

537
00:20:31,600 --> 00:20:36,240
apply willing is not enough we must do

538
00:20:37,200 --> 00:20:39,280
so i'll talk about three core components

539
00:20:39,280 --> 00:20:41,520
for the education and awareness

540
00:20:41,520 --> 00:20:43,280
part of culture

541
00:20:43,280 --> 00:20:45,120
number one is structured training

542
00:20:45,120 --> 00:20:46,320
programs

543
00:20:46,320 --> 00:20:48,000
so we've got mandatory developer

544
00:20:48,000 --> 00:20:51,600
security training advanced role specific

545
00:20:51,600 --> 00:20:53,520
and platform specific training which is

546
00:20:53,520 --> 00:20:56,559
a little more hands-on

547
00:20:58,400 --> 00:21:01,919
the mandatory this is for all developers

548
00:21:01,919 --> 00:21:03,840
when they hire on

549
00:21:03,840 --> 00:21:05,600
they are required to take a training and

550
00:21:05,600 --> 00:21:08,159
then either annually or biannually after

551
00:21:08,159 --> 00:21:10,720
that take a refresher

552
00:21:10,720 --> 00:21:12,799
the advanced blue belt classes these are

553
00:21:12,799 --> 00:21:15,840
for you know more role specific platform

554
00:21:15,840 --> 00:21:17,760
specific language specific where we want

555
00:21:17,760 --> 00:21:19,919
to get more hands-on

556
00:21:19,919 --> 00:21:21,360
into

557
00:21:21,360 --> 00:21:22,720
you know

558
00:21:22,720 --> 00:21:25,200
fixing code and looking at specific

559
00:21:25,200 --> 00:21:26,960
problems in the languages they work

560
00:21:26,960 --> 00:21:28,080
every day

561
00:21:28,080 --> 00:21:30,320
and do hands-on exercises hands-on

562
00:21:30,320 --> 00:21:33,760
coding challenges uh related to their

563
00:21:33,760 --> 00:21:36,559
day-to-day responsibility

564
00:21:36,559 --> 00:21:40,320
and the black belt is more behavioral

565
00:21:40,320 --> 00:21:41,120
uh

566
00:21:41,120 --> 00:21:42,880
achievements and certification so this

567
00:21:42,880 --> 00:21:45,919
can be hosting a security meetup writing

568
00:21:45,919 --> 00:21:48,559
a security blog post

569
00:21:48,559 --> 00:21:50,880
publishing something internally or

570
00:21:50,880 --> 00:21:52,559
externally

571
00:21:52,559 --> 00:21:54,559
these are all behaviors that

572
00:21:54,559 --> 00:21:56,400
contribute to someone's achievement of

573
00:21:56,400 --> 00:21:58,799
the black belt

574
00:21:58,799 --> 00:22:00,799
and it may take several years to build

575
00:22:00,799 --> 00:22:02,080
out a

576
00:22:02,080 --> 00:22:04,720
training program and to

577
00:22:04,720 --> 00:22:08,000
see a cohort go from white belt to blue

578
00:22:08,000 --> 00:22:10,240
belt to black belt

579
00:22:10,240 --> 00:22:12,159
so obviously if you're just starting out

580
00:22:12,159 --> 00:22:14,880
start with the mandatory developer

581
00:22:14,880 --> 00:22:17,520
security training uh which will include

582
00:22:17,520 --> 00:22:19,440
you know the top 10 the last

583
00:22:19,440 --> 00:22:23,120
vulnerabilities common security

584
00:22:23,120 --> 00:22:24,240
mistakes

585
00:22:24,240 --> 00:22:27,039
developers make and uh spreading that

586
00:22:27,039 --> 00:22:30,400
awareness around uh common challenges

587
00:22:30,400 --> 00:22:33,280
the third uh bucket here on the slide

588
00:22:33,280 --> 00:22:36,000
is security events uh these are kind of

589
00:22:36,000 --> 00:22:38,480
security days where we do a workshop day

590
00:22:38,480 --> 00:22:40,720
we'll have someone from the ssg

591
00:22:40,720 --> 00:22:42,000
go into

592
00:22:42,000 --> 00:22:42,799
the

593
00:22:42,799 --> 00:22:43,679
um

594
00:22:43,679 --> 00:22:44,799
the site

595
00:22:44,799 --> 00:22:47,600
r d site or within a team and do some

596
00:22:47,600 --> 00:22:49,200
immersion uh

597
00:22:49,200 --> 00:22:51,039
usually we'll do some some structured

598
00:22:51,039 --> 00:22:52,320
training

599
00:22:52,320 --> 00:22:54,799
and then do some tournament uh or

600
00:22:54,799 --> 00:22:56,240
challenges

601
00:22:56,240 --> 00:22:59,200
uh we also use uh capture the flags

602
00:22:59,200 --> 00:23:01,280
uh this is a great way to again bring

603
00:23:01,280 --> 00:23:03,200
people together in a fun way

604
00:23:03,200 --> 00:23:05,280
uh it's hands-on it's fun and gets

605
00:23:05,280 --> 00:23:07,200
people interacting and really kind of

606
00:23:07,200 --> 00:23:10,240
seeing some real world challenges uh

607
00:23:10,240 --> 00:23:12,159
either on sort of the capture the flag

608
00:23:12,159 --> 00:23:14,400
type of uh targets or

609
00:23:14,400 --> 00:23:16,080
even setting up challenges where they

610
00:23:16,080 --> 00:23:18,880
get to attack and and hack into their

611
00:23:18,880 --> 00:23:21,520
their own products

612
00:23:21,520 --> 00:23:22,720
uh

613
00:23:22,720 --> 00:23:25,360
just uh mention here we use uh alas

614
00:23:25,360 --> 00:23:27,200
security shepherd is one of the tools we

615
00:23:27,200 --> 00:23:29,760
use for capture the flags and there's a

616
00:23:29,760 --> 00:23:32,159
lot of other great uh tools out there

617
00:23:32,159 --> 00:23:34,159
open source and commercial you can use

618
00:23:34,159 --> 00:23:36,159
here

619
00:23:36,159 --> 00:23:38,320
and then finally the third part

620
00:23:38,320 --> 00:23:41,279
is the recognitions and rewards i really

621
00:23:41,279 --> 00:23:42,480
want to

622
00:23:42,480 --> 00:23:44,640
reward and praise

623
00:23:44,640 --> 00:23:46,400
people for taking

624
00:23:46,400 --> 00:23:49,279
the initiative and for

625
00:23:49,279 --> 00:23:50,880
for taking advantage of the training

626
00:23:50,880 --> 00:23:53,440
available to them and going the extra

627
00:23:53,440 --> 00:23:56,240
extra extra mile as needed in their

628
00:23:56,240 --> 00:23:58,720
products and across these challenges so

629
00:23:58,720 --> 00:24:00,400
you know publicly praising them and

630
00:24:00,400 --> 00:24:04,559
slack teams company intranet

631
00:24:04,559 --> 00:24:06,559
you can launch a security stars program

632
00:24:06,559 --> 00:24:08,799
where again you on a periodic basis

633
00:24:08,799 --> 00:24:11,600
either quarterly or monthly or

634
00:24:11,600 --> 00:24:12,880
just ad hoc

635
00:24:12,880 --> 00:24:14,159
you know

636
00:24:14,159 --> 00:24:16,799
name who the security stars are for that

637
00:24:16,799 --> 00:24:18,400
for that um

638
00:24:18,400 --> 00:24:20,159
that time period and announce them

639
00:24:20,159 --> 00:24:21,679
publicly

640
00:24:21,679 --> 00:24:24,720
um and also of course a little swag

641
00:24:24,720 --> 00:24:26,799
and some unexpected inexpensive gift

642
00:24:26,799 --> 00:24:29,200
cards can go a long way this is a fun

643
00:24:29,200 --> 00:24:31,200
and engaging way to do kind of breed

644
00:24:31,200 --> 00:24:32,799
awareness

645
00:24:32,799 --> 00:24:33,600
and

646
00:24:33,600 --> 00:24:35,520
brand your application security program

647
00:24:35,520 --> 00:24:37,200
have t-shirts made

648
00:24:37,200 --> 00:24:39,440
come up with a logo for your team

649
00:24:39,440 --> 00:24:41,679
uh and share those as awards

650
00:24:41,679 --> 00:24:44,080
and also of course you know hit up your

651
00:24:44,080 --> 00:24:46,320
vendors

652
00:24:46,320 --> 00:24:48,960
they're a great source resource for

653
00:24:48,960 --> 00:24:53,360
hoodies stickers and other fun giveaways

654
00:24:55,440 --> 00:24:57,279
so now we're going to move into the

655
00:24:57,279 --> 00:25:00,080
second area we talked about and

656
00:25:00,080 --> 00:25:01,600
highlight some of the processes and

657
00:25:01,600 --> 00:25:03,600
technologies needed at the foundation

658
00:25:03,600 --> 00:25:07,679
level and also what's needed to advance

659
00:25:07,679 --> 00:25:10,320
your program

660
00:25:12,080 --> 00:25:13,840
so the first step

661
00:25:13,840 --> 00:25:16,400
is to define your security gates and

662
00:25:16,400 --> 00:25:19,440
passing criteria

663
00:25:20,480 --> 00:25:22,559
and i just highlighted uh this is from

664
00:25:22,559 --> 00:25:24,480
the microsoft

665
00:25:24,480 --> 00:25:26,799
sdl but i'm highlighting here kind of

666
00:25:26,799 --> 00:25:28,400
three

667
00:25:28,400 --> 00:25:29,520
areas we're going to we're going to

668
00:25:29,520 --> 00:25:31,760
focus on

669
00:25:31,760 --> 00:25:32,880
at this

670
00:25:32,880 --> 00:25:34,720
at this point

671
00:25:34,720 --> 00:25:36,880
so establishing security requirements

672
00:25:36,880 --> 00:25:38,320
the idea here

673
00:25:38,320 --> 00:25:40,559
is this is the optimal time to define

674
00:25:40,559 --> 00:25:42,880
the requirements as upfront during the

675
00:25:42,880 --> 00:25:46,720
initial planning phases of the product

676
00:25:49,200 --> 00:25:50,720
and we want to integrate security in a

677
00:25:50,720 --> 00:25:52,960
way that it doesn't disrupt

678
00:25:52,960 --> 00:25:55,520
delivery and the life cycle of the

679
00:25:55,520 --> 00:25:57,679
product so letting the team know up

680
00:25:57,679 --> 00:26:00,320
front as far in advance when they start

681
00:26:00,320 --> 00:26:02,320
developing this project and what are the

682
00:26:02,320 --> 00:26:03,840
security requirements what are the

683
00:26:03,840 --> 00:26:05,840
security bars what do what does the

684
00:26:05,840 --> 00:26:07,279
development team

685
00:26:07,279 --> 00:26:11,200
need to do in order to achieve a passing

686
00:26:11,200 --> 00:26:15,279
grade on your security requirement

687
00:26:15,440 --> 00:26:17,760
and so this is really important to

688
00:26:17,760 --> 00:26:19,679
document this it's really important to

689
00:26:19,679 --> 00:26:21,440
meet with the teams and go over the

690
00:26:21,440 --> 00:26:23,279
security requirements so that everyone

691
00:26:23,279 --> 00:26:25,120
knows what they are

692
00:26:25,120 --> 00:26:26,960
it's really

693
00:26:26,960 --> 00:26:30,000
it builds trust in the program that

694
00:26:30,000 --> 00:26:33,120
improves understanding

695
00:26:33,600 --> 00:26:36,480
lets us reduce friction and frustration

696
00:26:36,480 --> 00:26:38,960
at the end of the process no one likes

697
00:26:38,960 --> 00:26:40,640
surprises

698
00:26:40,640 --> 00:26:42,400
engineering will

699
00:26:42,400 --> 00:26:45,440
be frustrated and lose good will

700
00:26:45,440 --> 00:26:48,240
if requirements are constantly moving or

701
00:26:48,240 --> 00:26:51,720
not well defined

702
00:26:53,440 --> 00:26:55,600
and so here in a typical sdl we would

703
00:26:55,600 --> 00:26:57,520
define our requirements

704
00:26:57,520 --> 00:26:59,760
the requirements phase

705
00:26:59,760 --> 00:27:02,640
the development team executes the

706
00:27:02,640 --> 00:27:04,960
procedures and then we get to the

707
00:27:04,960 --> 00:27:06,799
release phase then we will have a final

708
00:27:06,799 --> 00:27:09,600
security review or fsr

709
00:27:09,600 --> 00:27:12,400
where we check and verify that the team

710
00:27:12,400 --> 00:27:13,679
has hit

711
00:27:13,679 --> 00:27:15,600
the requirements that that were agreed

712
00:27:15,600 --> 00:27:16,400
to

713
00:27:16,400 --> 00:27:20,279
at the start of the project

714
00:27:21,760 --> 00:27:24,240
so this uh next pro tip draws some

715
00:27:24,240 --> 00:27:26,720
inspiration from these words from bruce

716
00:27:26,720 --> 00:27:28,399
lee again

717
00:27:28,399 --> 00:27:29,840
be shapeless

718
00:27:29,840 --> 00:27:32,159
formless like water

719
00:27:32,159 --> 00:27:36,080
water can flow or water can crash

720
00:27:36,080 --> 00:27:38,639
be water

721
00:27:39,039 --> 00:27:40,799
and what does that mean with respect to

722
00:27:40,799 --> 00:27:42,720
our security program well

723
00:27:42,720 --> 00:27:44,720
what this means is you want to merge

724
00:27:44,720 --> 00:27:46,480
your security into the existing

725
00:27:46,480 --> 00:27:49,279
development cycle

726
00:27:49,279 --> 00:27:51,200
first you identify the gates and collect

727
00:27:51,200 --> 00:27:53,200
the results but don't enforce them yet

728
00:27:53,200 --> 00:27:55,760
you want to flow into the process like

729
00:27:55,760 --> 00:27:58,559
water you're not here to cause

730
00:27:58,559 --> 00:28:00,640
a team and development crash at this

731
00:28:00,640 --> 00:28:02,960
stage you want to show up

732
00:28:02,960 --> 00:28:04,559
observe the security posture of the

733
00:28:04,559 --> 00:28:07,520
product observe what the team is doing

734
00:28:07,520 --> 00:28:09,520
and adapt your security requirements to

735
00:28:09,520 --> 00:28:11,120
the tools and instruments that are in

736
00:28:11,120 --> 00:28:12,799
place and already in use by the

737
00:28:12,799 --> 00:28:15,200
developers

738
00:28:15,200 --> 00:28:19,200
and so um this both of these uh

739
00:28:19,200 --> 00:28:20,559
statements

740
00:28:20,559 --> 00:28:24,080
come from the bsim

741
00:28:24,880 --> 00:28:26,880
so defining checks

742
00:28:26,880 --> 00:28:28,000
but

743
00:28:28,000 --> 00:28:29,120
without

744
00:28:29,120 --> 00:28:30,559
enforcing them

745
00:28:30,559 --> 00:28:33,520
there's also a tip from from beeson

746
00:28:33,520 --> 00:28:36,240
uh and so again what this means is that

747
00:28:36,240 --> 00:28:38,080
you know we're going to define the

748
00:28:38,080 --> 00:28:39,600
security

749
00:28:39,600 --> 00:28:42,080
metrics the security criteria we want to

750
00:28:42,080 --> 00:28:43,360
look at

751
00:28:43,360 --> 00:28:45,360
we could decide which points in the

752
00:28:45,360 --> 00:28:46,880
process we should be doing these

753
00:28:46,880 --> 00:28:48,000
security

754
00:28:48,000 --> 00:28:49,279
requirements

755
00:28:49,279 --> 00:28:50,159
but

756
00:28:50,159 --> 00:28:52,240
we will not start enforcing them

757
00:28:52,240 --> 00:28:53,840
straight out of the gate we'll just

758
00:28:53,840 --> 00:28:55,120
observe

759
00:28:55,120 --> 00:28:57,120
and then

760
00:28:57,120 --> 00:28:58,960
when the team gets comfortable with the

761
00:28:58,960 --> 00:29:00,640
tools when the team gets comfortable

762
00:29:00,640 --> 00:29:02,720
with the metrics

763
00:29:02,720 --> 00:29:04,320
then we'll choose an agreed upon

764
00:29:04,320 --> 00:29:06,559
timeline to then start enforcing them

765
00:29:06,559 --> 00:29:08,559
and making them mandatory

766
00:29:08,559 --> 00:29:10,240
but first

767
00:29:10,240 --> 00:29:13,559
just observe

768
00:29:17,760 --> 00:29:19,600
and so for

769
00:29:19,600 --> 00:29:21,360
security gates and defining security

770
00:29:21,360 --> 00:29:22,880
bars and security requirements i'm just

771
00:29:22,880 --> 00:29:24,320
going to give an example here here's

772
00:29:24,320 --> 00:29:26,000
what one security gate might look like

773
00:29:26,000 --> 00:29:28,559
for one control so software component

774
00:29:28,559 --> 00:29:30,320
analysis

775
00:29:30,320 --> 00:29:34,000
so for software component analysis

776
00:29:34,240 --> 00:29:36,640
for isr and fsr the project is scanned

777
00:29:36,640 --> 00:29:40,559
using the approved sca tools all results

778
00:29:40,559 --> 00:29:43,279
are reviewed by the development team

779
00:29:43,279 --> 00:29:44,960
and then if assuming we're doing

780
00:29:44,960 --> 00:29:47,520
enforcement now all critical high and

781
00:29:47,520 --> 00:29:50,000
medium issues are resolved prior to the

782
00:29:50,000 --> 00:29:52,399
release

783
00:29:52,960 --> 00:29:55,520
again it doesn't have to be

784
00:29:55,520 --> 00:29:57,919
extremely verbose uh just something

785
00:29:57,919 --> 00:30:00,720
that's clear concrete measurable you can

786
00:30:00,720 --> 00:30:03,440
put in writing to the development team

787
00:30:03,440 --> 00:30:04,960
they can see exactly what the

788
00:30:04,960 --> 00:30:06,320
requirement is

789
00:30:06,320 --> 00:30:07,679
they know how to measure it and they

790
00:30:07,679 --> 00:30:10,399
know that they know how to know if

791
00:30:10,399 --> 00:30:12,320
they've achieved and passed the security

792
00:30:12,320 --> 00:30:14,559
bar

793
00:30:15,360 --> 00:30:17,120
and so in practice you'll follow kind of

794
00:30:17,120 --> 00:30:19,919
a pattern like this

795
00:30:19,919 --> 00:30:22,080
on the other security gates or security

796
00:30:22,080 --> 00:30:25,279
bars you need for your for your

797
00:30:25,279 --> 00:30:27,520
environment so for example

798
00:30:27,520 --> 00:30:30,399
we have bars for threat modeling secure

799
00:30:30,399 --> 00:30:32,320
design review

800
00:30:32,320 --> 00:30:34,240
static application testing container

801
00:30:34,240 --> 00:30:36,240
analysis attack surface analysis and

802
00:30:36,240 --> 00:30:39,039
dynamic scanning each of these controls

803
00:30:39,039 --> 00:30:42,000
will have a security bar definition that

804
00:30:42,000 --> 00:30:43,440
says how do you

805
00:30:43,440 --> 00:30:44,480
test this

806
00:30:44,480 --> 00:30:46,480
how do you measure it and what's the

807
00:30:46,480 --> 00:30:50,919
passing criteria for that bar

808
00:30:53,600 --> 00:30:55,120
now the process section here so far

809
00:30:55,120 --> 00:30:57,039
we've covered the foundational aspects

810
00:30:57,039 --> 00:31:00,480
to defining your sdlc process

811
00:31:00,480 --> 00:31:02,559
now we'll take a look at what this looks

812
00:31:02,559 --> 00:31:06,080
like at scale in a devops world

813
00:31:06,080 --> 00:31:08,480
keeping pace with continuous delivery

814
00:31:08,480 --> 00:31:10,480
continuous deployment and continuous

815
00:31:10,480 --> 00:31:12,320
security

816
00:31:12,320 --> 00:31:15,039
so i like this quote from bruce lee here

817
00:31:15,039 --> 00:31:17,360
i fear not who has practiced 10 thousand

818
00:31:17,360 --> 00:31:18,720
kicks

819
00:31:18,720 --> 00:31:20,640
but i fear the one who has practiced one

820
00:31:20,640 --> 00:31:22,799
kick ten thousand times about ten

821
00:31:22,799 --> 00:31:24,240
thousand times is what we're talking

822
00:31:24,240 --> 00:31:28,480
about here now is that the sdlc

823
00:31:28,480 --> 00:31:30,000
is great

824
00:31:30,000 --> 00:31:32,399
but how do you do that 10 000 times how

825
00:31:32,399 --> 00:31:35,519
do you do 100 releases per

826
00:31:35,519 --> 00:31:38,720
week or per day if needed and still meet

827
00:31:38,720 --> 00:31:40,880
your security requirements

828
00:31:40,880 --> 00:31:43,360
uh so that's kind of the subject now

829
00:31:43,360 --> 00:31:45,440
uh we're going to move into more of an

830
00:31:45,440 --> 00:31:48,000
advanced sdlc

831
00:31:48,000 --> 00:31:50,000
uh at scale you know now we're talking

832
00:31:50,000 --> 00:31:54,640
about continuous security and devsecops

833
00:31:54,640 --> 00:31:56,240
so we'll go through all of the details

834
00:31:56,240 --> 00:31:57,840
on this slide

835
00:31:57,840 --> 00:32:00,559
but the point here is that in today's

836
00:32:00,559 --> 00:32:03,039
devops life cycle where we have frequent

837
00:32:03,039 --> 00:32:07,840
small changes your mvp hot fixes

838
00:32:07,840 --> 00:32:11,360
minor changes etc all going out multiple

839
00:32:11,360 --> 00:32:15,200
deployments sometimes per day there

840
00:32:15,200 --> 00:32:17,600
isn't enough time to perform 100 of the

841
00:32:17,600 --> 00:32:20,399
manual security tests and sometimes the

842
00:32:20,399 --> 00:32:22,559
automated security tests on every single

843
00:32:22,559 --> 00:32:25,440
change and release to production

844
00:32:25,440 --> 00:32:27,360
so how do we overcome that

845
00:32:27,360 --> 00:32:30,080
and scale security requirements to devop

846
00:32:30,080 --> 00:32:32,480
speed and scale

847
00:32:32,480 --> 00:32:34,960
there's no longer a shift left as you

848
00:32:34,960 --> 00:32:37,519
can see there is no left it's it's a

849
00:32:37,519 --> 00:32:39,039
shift everywhere

850
00:32:39,039 --> 00:32:41,279
so now security is ingrained in every

851
00:32:41,279 --> 00:32:45,360
step of the devops life cycle

852
00:32:49,679 --> 00:32:52,559
so here's a notional example of what a

853
00:32:52,559 --> 00:32:55,679
continuous security pipeline at scale

854
00:32:55,679 --> 00:32:57,840
would kind of look like

855
00:32:57,840 --> 00:33:00,240
obviously requires a high level of

856
00:33:00,240 --> 00:33:01,519
automation

857
00:33:01,519 --> 00:33:04,240
and orchestration

858
00:33:04,240 --> 00:33:07,360
and again this is just an example

859
00:33:07,360 --> 00:33:09,519
there's some some vendor names and

860
00:33:09,519 --> 00:33:11,360
examples here on this slide again these

861
00:33:11,360 --> 00:33:13,440
are just notional examples

862
00:33:13,440 --> 00:33:16,000
uh they are not meant to endorse any of

863
00:33:16,000 --> 00:33:18,159
these these vendors

864
00:33:18,159 --> 00:33:20,399
just some examples of some that we've

865
00:33:20,399 --> 00:33:22,639
seen

866
00:33:23,519 --> 00:33:24,720
so here

867
00:33:24,720 --> 00:33:26,240
what we're illustrating is that security

868
00:33:26,240 --> 00:33:30,799
is integrated into the ci pipeline

869
00:33:30,799 --> 00:33:32,640
then security monitoring is integrated

870
00:33:32,640 --> 00:33:37,200
into operations telemetry and procedures

871
00:33:37,600 --> 00:33:39,440
defect management

872
00:33:39,440 --> 00:33:41,600
is centralized backlit backlog

873
00:33:41,600 --> 00:33:44,159
management is centralized and it's all

874
00:33:44,159 --> 00:33:45,919
integrated

875
00:33:45,919 --> 00:33:48,480
and we want to use the same

876
00:33:48,480 --> 00:33:50,559
systems that the engineers use every

877
00:33:50,559 --> 00:33:52,640
single day to do their work that's where

878
00:33:52,640 --> 00:33:54,799
we want the security information and the

879
00:33:54,799 --> 00:33:56,880
security

880
00:33:56,880 --> 00:33:59,679
tasks security defects all entered into

881
00:33:59,679 --> 00:34:02,000
that same information that the engineers

882
00:34:02,000 --> 00:34:04,159
are looking at every day

883
00:34:04,159 --> 00:34:07,120
security can't be something that happens

884
00:34:07,120 --> 00:34:10,000
on the side or at the end

885
00:34:10,000 --> 00:34:12,079
and dropping off a report to someone to

886
00:34:12,079 --> 00:34:14,960
now go look through a document to figure

887
00:34:14,960 --> 00:34:16,719
out what needs to be done

888
00:34:16,719 --> 00:34:18,879
the security tooling

889
00:34:18,879 --> 00:34:22,320
is integrated uh directly into the

890
00:34:22,320 --> 00:34:25,280
engineering and development pipeline

891
00:34:25,280 --> 00:34:27,679
and so we'll kind of just quickly go

892
00:34:27,679 --> 00:34:30,399
through this um example here

893
00:34:30,399 --> 00:34:31,839
uh

894
00:34:31,839 --> 00:34:34,560
we won't spend too much time on it again

895
00:34:34,560 --> 00:34:36,079
if you if you want more details about

896
00:34:36,079 --> 00:34:38,320
this or the previous slide ping me and

897
00:34:38,320 --> 00:34:41,679
i'll be happy to uh to share more depth

898
00:34:41,679 --> 00:34:44,239
um but in this example you can see that

899
00:34:44,239 --> 00:34:46,839
security tests are

900
00:34:46,839 --> 00:34:50,639
done before deploying to staging

901
00:34:50,639 --> 00:34:52,719
once we deploy the stage we run so we

902
00:34:52,719 --> 00:34:55,119
run the dynamic

903
00:34:55,119 --> 00:34:57,760
testing and surface analysis testing if

904
00:34:57,760 --> 00:34:58,880
it passes

905
00:34:58,880 --> 00:35:00,839
those tests then we can deploy to

906
00:35:00,839 --> 00:35:03,760
production and for out-of-band tests

907
00:35:03,760 --> 00:35:06,240
that don't happen during the pipeline we

908
00:35:06,240 --> 00:35:08,720
we check via apis to see the latest

909
00:35:08,720 --> 00:35:11,440
result from those tools for example

910
00:35:11,440 --> 00:35:13,359
uh in threat modeling

911
00:35:13,359 --> 00:35:14,800
you can check and see

912
00:35:14,800 --> 00:35:18,079
has this product or feature had a threat

913
00:35:18,079 --> 00:35:20,000
model and

914
00:35:20,000 --> 00:35:23,440
if so are there any open or outstanding

915
00:35:23,440 --> 00:35:25,119
issues that were raised from that threat

916
00:35:25,119 --> 00:35:29,480
model that haven't been addressed yet

917
00:35:32,240 --> 00:35:35,040
so another uh quick example before we

918
00:35:35,040 --> 00:35:37,119
move on you know highlighted on that

919
00:35:37,119 --> 00:35:39,440
last slide slide what a kind of

920
00:35:39,440 --> 00:35:41,200
end-to-end

921
00:35:41,200 --> 00:35:43,440
security automation framework looks like

922
00:35:43,440 --> 00:35:45,200
i'm going to take a kind of deeper look

923
00:35:45,200 --> 00:35:48,240
into an actual ci cd pipeline with

924
00:35:48,240 --> 00:35:51,359
security built in

925
00:35:51,680 --> 00:35:53,839
the point example here is you know

926
00:35:53,839 --> 00:35:55,920
developers want

927
00:35:55,920 --> 00:35:58,560
pipelines that run fast they want fast

928
00:35:58,560 --> 00:36:00,240
build time and they want immediate

929
00:36:00,240 --> 00:36:02,160
feedback

930
00:36:02,160 --> 00:36:04,000
problem with that is some security tests

931
00:36:04,000 --> 00:36:07,200
cannot be done on every single build

932
00:36:07,200 --> 00:36:10,160
so what a ci pipeline like this would do

933
00:36:10,160 --> 00:36:12,800
is on the test that can be run directly

934
00:36:12,800 --> 00:36:14,480
in the pipeline so for example

935
00:36:14,480 --> 00:36:16,480
dependency check

936
00:36:16,480 --> 00:36:19,040
for composition analysis

937
00:36:19,040 --> 00:36:21,760
and twist lock for container scan they

938
00:36:21,760 --> 00:36:24,400
will be run in line anything that

939
00:36:24,400 --> 00:36:26,640
happens either

940
00:36:26,640 --> 00:36:28,320
maybe on a weekly

941
00:36:28,320 --> 00:36:30,880
basis or as a manual process they will

942
00:36:30,880 --> 00:36:33,520
just go and fetch the latest result

943
00:36:33,520 --> 00:36:36,079
from that job and then as long as

944
00:36:36,079 --> 00:36:38,480
everything passes then the build passes

945
00:36:38,480 --> 00:36:40,240
and the pipeline passes and they can

946
00:36:40,240 --> 00:36:43,439
move on to the next stage

947
00:36:46,880 --> 00:36:48,640
so now we've come to the third and final

948
00:36:48,640 --> 00:36:50,880
stop on our tour

949
00:36:50,880 --> 00:36:53,520
and i appreciate your patience and

950
00:36:53,520 --> 00:36:55,920
attention so far i'm gonna cover two

951
00:36:55,920 --> 00:36:58,160
core components on governance

952
00:36:58,160 --> 00:37:00,400
and uh and then

953
00:37:00,400 --> 00:37:02,160
and then we'll wrap up

954
00:37:02,160 --> 00:37:03,760
uh so the first

955
00:37:03,760 --> 00:37:05,119
concept we're gonna talk about is

956
00:37:05,119 --> 00:37:07,200
establishing a meaningful metric and

957
00:37:07,200 --> 00:37:08,880
kpis

958
00:37:08,880 --> 00:37:10,800
and the second point we'll talk about is

959
00:37:10,800 --> 00:37:12,880
handling security exceptions and risk

960
00:37:12,880 --> 00:37:17,920
acceptance as part of your sdlc process

961
00:37:18,640 --> 00:37:20,320
so in this example

962
00:37:20,320 --> 00:37:23,200
i'm sharing some kpi metrics and

963
00:37:23,200 --> 00:37:25,919
dashboards

964
00:37:26,720 --> 00:37:29,200
in this example i'm showing

965
00:37:29,200 --> 00:37:31,680
we have a aggregated risk score and this

966
00:37:31,680 --> 00:37:33,040
risk level is determined by an

967
00:37:33,040 --> 00:37:34,640
aggregation of all the components

968
00:37:34,640 --> 00:37:37,440
included in this product

969
00:37:37,440 --> 00:37:39,760
you can see kind of by by product but

970
00:37:39,760 --> 00:37:42,480
then also by component you know what the

971
00:37:42,480 --> 00:37:43,920
what the score is

972
00:37:43,920 --> 00:37:45,280
and then this

973
00:37:45,280 --> 00:37:48,079
score is made up of the individual

974
00:37:48,079 --> 00:37:49,760
results

975
00:37:49,760 --> 00:37:52,160
of the various security scans and

976
00:37:52,160 --> 00:37:53,839
security requirements

977
00:37:53,839 --> 00:37:56,799
for that component

978
00:37:57,040 --> 00:37:59,839
so one of the really important point i'm

979
00:37:59,839 --> 00:38:01,920
trying to illustrate here is that you

980
00:38:01,920 --> 00:38:03,839
know number one

981
00:38:03,839 --> 00:38:05,760
you want to aggregate this information

982
00:38:05,760 --> 00:38:08,240
you want to aggregate the metrics and

983
00:38:08,240 --> 00:38:10,400
use these to communicate

984
00:38:10,400 --> 00:38:11,599
risk

985
00:38:11,599 --> 00:38:13,839
to the business you want to share this

986
00:38:13,839 --> 00:38:15,760
at the executive level

987
00:38:15,760 --> 00:38:18,480
so that they you know see trends and

988
00:38:18,480 --> 00:38:19,920
they're aware of the current security

989
00:38:19,920 --> 00:38:21,359
posture

990
00:38:21,359 --> 00:38:22,960
you also want to use this share it

991
00:38:22,960 --> 00:38:25,119
across all all of r d

992
00:38:25,119 --> 00:38:27,839
so every team can see how they're doing

993
00:38:27,839 --> 00:38:31,119
relative to other areas of the business

994
00:38:31,119 --> 00:38:32,720
you're going to measure their trends and

995
00:38:32,720 --> 00:38:34,640
then use those trends to improve your

996
00:38:34,640 --> 00:38:37,040
program

997
00:38:39,680 --> 00:38:41,839
so the next point

998
00:38:41,839 --> 00:38:43,280
related to

999
00:38:43,280 --> 00:38:46,800
governance is around accountability

1000
00:38:46,800 --> 00:38:49,599
so we talked about the sdlc process

1001
00:38:49,599 --> 00:38:50,880
and how

1002
00:38:50,880 --> 00:38:53,520
the product and the engineering projects

1003
00:38:53,520 --> 00:38:54,800
have to

1004
00:38:54,800 --> 00:38:56,800
achieve a pass

1005
00:38:56,800 --> 00:39:00,480
in the security bar to move forward

1006
00:39:00,480 --> 00:39:02,079
we kind of touched on what happens if a

1007
00:39:02,079 --> 00:39:03,760
product doesn't meet the security gate

1008
00:39:03,760 --> 00:39:06,160
and that's what we're talking about here

1009
00:39:06,160 --> 00:39:08,079
so remember at the end the goal is to

1010
00:39:08,079 --> 00:39:10,400
release software and get our valuable

1011
00:39:10,400 --> 00:39:13,520
products out into the customer's hands

1012
00:39:13,520 --> 00:39:17,119
we don't live in an ideal world where

1013
00:39:17,119 --> 00:39:19,200
every engineering project is going to

1014
00:39:19,200 --> 00:39:21,520
meet every requirement on every release

1015
00:39:21,520 --> 00:39:23,839
whether we're talking about quality

1016
00:39:23,839 --> 00:39:27,040
feature development security tests

1017
00:39:27,040 --> 00:39:29,440
occasionally at least once in a while

1018
00:39:29,440 --> 00:39:31,760
you may have a scenario where a product

1019
00:39:31,760 --> 00:39:33,839
is trying to hit a release target date

1020
00:39:33,839 --> 00:39:35,680
and needs to move forward

1021
00:39:35,680 --> 00:39:37,200
so this is why we have an exception

1022
00:39:37,200 --> 00:39:38,320
procedure

1023
00:39:38,320 --> 00:39:40,000
and this is a critical part of the

1024
00:39:40,000 --> 00:39:42,160
business so that

1025
00:39:42,160 --> 00:39:44,400
a hot fix or important release is not

1026
00:39:44,400 --> 00:39:47,520
caught in in a loop and getting blocked

1027
00:39:47,520 --> 00:39:50,160
due to a security finding that may not

1028
00:39:50,160 --> 00:39:52,560
be a high risk

1029
00:39:52,560 --> 00:39:54,800
and so what is a security exception the

1030
00:39:54,800 --> 00:39:57,440
risk approval process look like

1031
00:39:57,440 --> 00:39:58,400
well first

1032
00:39:58,400 --> 00:40:01,040
requires a mitigation plan and a

1033
00:40:01,040 --> 00:40:03,359
timeline and the timeline and plan

1034
00:40:03,359 --> 00:40:05,200
should be relative to the risk and the

1035
00:40:05,200 --> 00:40:07,760
severity

1036
00:40:07,760 --> 00:40:08,640
and

1037
00:40:08,640 --> 00:40:11,520
requires approval

1038
00:40:11,520 --> 00:40:14,079
documented in a system of records so the

1039
00:40:14,079 --> 00:40:16,079
official approval should be documented

1040
00:40:16,079 --> 00:40:18,160
and depending on

1041
00:40:18,160 --> 00:40:20,319
the issue and level of severity

1042
00:40:20,319 --> 00:40:23,280
escalate up to the executive level to

1043
00:40:23,280 --> 00:40:25,440
get that approval

1044
00:40:25,440 --> 00:40:28,800
this way it's the line of business

1045
00:40:28,800 --> 00:40:31,200
and the executive that owns the risk the

1046
00:40:31,200 --> 00:40:33,680
development team is not owning the risk

1047
00:40:33,680 --> 00:40:35,760
the spoc doesn't own the risk the

1048
00:40:35,760 --> 00:40:38,560
business managers and the executives own

1049
00:40:38,560 --> 00:40:40,560
the wrist

1050
00:40:40,560 --> 00:40:43,119
and the the most important point here

1051
00:40:43,119 --> 00:40:45,200
is that we

1052
00:40:45,200 --> 00:40:46,640
capture these

1053
00:40:46,640 --> 00:40:48,880
approvals and mitigation plans in our

1054
00:40:48,880 --> 00:40:50,800
system of record in our engineering

1055
00:40:50,800 --> 00:40:54,560
tooling so in this case we're using jira

1056
00:40:54,560 --> 00:40:56,960
to make sure that

1057
00:40:56,960 --> 00:40:57,839
the

1058
00:40:57,839 --> 00:40:59,680
approval is captured but also that we

1059
00:40:59,680 --> 00:41:02,160
enforce it with our automation system

1060
00:41:02,160 --> 00:41:04,640
and orchestration so that if

1061
00:41:04,640 --> 00:41:07,520
we agree to fix something by

1062
00:41:07,520 --> 00:41:08,480
uh

1063
00:41:08,480 --> 00:41:09,839
by december

1064
00:41:09,839 --> 00:41:10,800
and

1065
00:41:10,800 --> 00:41:12,480
the engineering team

1066
00:41:12,480 --> 00:41:14,400
is now trying to release in december and

1067
00:41:14,400 --> 00:41:16,560
they haven't fixed that issue yet

1068
00:41:16,560 --> 00:41:18,160
then that will block the bill that'll

1069
00:41:18,160 --> 00:41:21,359
block the release and they will have

1070
00:41:21,359 --> 00:41:23,280
they have to go back and

1071
00:41:23,280 --> 00:41:25,839
resolve and meet their mitigation plan

1072
00:41:25,839 --> 00:41:28,480
or the project is blocked

1073
00:41:28,480 --> 00:41:30,640
and so that again is necessary when

1074
00:41:30,640 --> 00:41:32,400
really we want to scale

1075
00:41:32,400 --> 00:41:36,560
the risk acceptance program

1076
00:41:36,560 --> 00:41:37,200
and

1077
00:41:37,200 --> 00:41:39,760
achieve this at scale across 100 150

1078
00:41:39,760 --> 00:41:42,720
products you need to make sure that that

1079
00:41:42,720 --> 00:41:43,920
decision

1080
00:41:43,920 --> 00:41:45,440
is enforced

1081
00:41:45,440 --> 00:41:49,160
in an automated fashion

1082
00:41:52,000 --> 00:41:56,160
and so now i'm going to wrap up here

1083
00:41:56,160 --> 00:41:58,160
just to recap

1084
00:41:58,160 --> 00:42:00,400
we explored the foundations in the three

1085
00:42:00,400 --> 00:42:02,560
key areas culture

1086
00:42:02,560 --> 00:42:04,720
process and governance

1087
00:42:04,720 --> 00:42:07,839
and i gave examples that you can take

1088
00:42:07,839 --> 00:42:09,119
number one if you're just getting

1089
00:42:09,119 --> 00:42:11,119
started and building a program

1090
00:42:11,119 --> 00:42:13,839
but also hopefully if

1091
00:42:13,839 --> 00:42:16,240
if you're looking to improve your apsec

1092
00:42:16,240 --> 00:42:17,839
program and improve your abstract

1093
00:42:17,839 --> 00:42:20,160
program to the next stage some takeaways

1094
00:42:20,160 --> 00:42:22,160
and actions you can take

1095
00:42:22,160 --> 00:42:25,200
to go to the next level

1096
00:42:25,599 --> 00:42:29,440
so the advice and takeaways again

1097
00:42:29,440 --> 00:42:30,540
begin where you are

1098
00:42:30,540 --> 00:42:32,240
[Music]

1099
00:42:32,240 --> 00:42:34,880
focus on these foundations set yourself

1100
00:42:34,880 --> 00:42:36,960
up for success

1101
00:42:36,960 --> 00:42:38,400
and

1102
00:42:38,400 --> 00:42:40,400
some questions to ask as you go along

1103
00:42:40,400 --> 00:42:42,160
you know what are the critical risks and

1104
00:42:42,160 --> 00:42:44,880
objectives for your business

1105
00:42:44,880 --> 00:42:47,040
start small

1106
00:42:47,040 --> 00:42:48,800
use iteration and

1107
00:42:48,800 --> 00:42:52,000
minimum viable product and that mindset

1108
00:42:52,000 --> 00:42:53,599
to get things moving

1109
00:42:53,599 --> 00:42:55,760
establish some success and build from

1110
00:42:55,760 --> 00:42:58,079
there

1111
00:42:58,079 --> 00:43:00,400
so i hope you found something useful

1112
00:43:00,400 --> 00:43:01,920
i really

1113
00:43:01,920 --> 00:43:03,760
would love to hear your feedback please

1114
00:43:03,760 --> 00:43:06,720
let me know your thoughts

1115
00:43:07,599 --> 00:43:09,200
where you can find me

1116
00:43:09,200 --> 00:43:12,319
on social media usually

1117
00:43:12,319 --> 00:43:15,920
here linkedin is the one i usually check

1118
00:43:15,920 --> 00:43:17,920
shoot me a private message or mention me

1119
00:43:17,920 --> 00:43:20,400
in a comment

1120
00:43:20,400 --> 00:43:22,720
greatly appreciate any thoughts comments

1121
00:43:22,720 --> 00:43:25,040
feedback disagreements

1122
00:43:25,040 --> 00:43:27,280
complaints arguments

1123
00:43:27,280 --> 00:43:28,800
anything at all

1124
00:43:28,800 --> 00:43:31,680
just engage me and i'll be happy to

1125
00:43:31,680 --> 00:43:33,760
discuss more and share

1126
00:43:33,760 --> 00:43:35,920
additional details

1127
00:43:35,920 --> 00:43:39,040
thank you very much

