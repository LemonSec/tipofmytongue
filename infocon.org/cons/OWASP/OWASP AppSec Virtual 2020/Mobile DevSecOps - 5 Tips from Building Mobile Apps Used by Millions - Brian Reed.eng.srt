1
00:00:02,879 --> 00:00:05,839
arcsan is now digital.ai

2
00:00:05,839 --> 00:00:07,759
join us at our booth in the virtual expo

3
00:00:07,759 --> 00:00:10,080
hall to learn how our app protection

4
00:00:10,080 --> 00:00:12,080
white box cryptography and threat

5
00:00:12,080 --> 00:00:14,080
analytics solutions can help you stay

6
00:00:14,080 --> 00:00:18,320
ahead of the evolving threat landscape

7
00:00:20,640 --> 00:00:22,480
hello everyone my name is brian reed i'm

8
00:00:22,480 --> 00:00:24,320
the chief mobility officer here at now

9
00:00:24,320 --> 00:00:26,160
secure and i'm here to do today's

10
00:00:26,160 --> 00:00:28,320
presentation at the oasp event mobile

11
00:00:28,320 --> 00:00:30,800
devsecops five tips from building mobile

12
00:00:30,800 --> 00:00:34,480
apps used by millions or really zillions

13
00:00:34,480 --> 00:00:36,160
i'm excited to be leading the session

14
00:00:36,160 --> 00:00:38,160
today i've been doing mobile mobile

15
00:00:38,160 --> 00:00:39,920
security mobile applications and mobile

16
00:00:39,920 --> 00:00:42,160
innovations dating back more than 15

17
00:00:42,160 --> 00:00:44,320
years in the days of blackberry hard to

18
00:00:44,320 --> 00:00:45,760
believe in that realm that we were

19
00:00:45,760 --> 00:00:47,440
looking at 10 to 20 percent of the world

20
00:00:47,440 --> 00:00:49,440
with mobile devices instead of 150

21
00:00:49,440 --> 00:00:50,960
percent of the world with mobile devices

22
00:00:50,960 --> 00:00:52,399
today

23
00:00:52,399 --> 00:00:53,840
and over that period of time i've had a

24
00:00:53,840 --> 00:00:55,360
lot of experience working with different

25
00:00:55,360 --> 00:00:57,039
organizations both from a mobile

26
00:00:57,039 --> 00:00:58,879
security deployment perspective and from

27
00:00:58,879 --> 00:01:00,239
a mobile application development

28
00:01:00,239 --> 00:01:02,160
perspective working with organizations

29
00:01:02,160 --> 00:01:03,920
like uber and under armour and vivid

30
00:01:03,920 --> 00:01:06,159
seats and sony and so on and so forth

31
00:01:06,159 --> 00:01:07,760
and so today i hope to share with you

32
00:01:07,760 --> 00:01:09,600
the best practices we've learned over

33
00:01:09,600 --> 00:01:11,439
the last number of years to really help

34
00:01:11,439 --> 00:01:14,640
you with your mobile dev sec ops program

35
00:01:14,640 --> 00:01:16,720
within your organization

36
00:01:16,720 --> 00:01:18,880
as we get started let's focus for a

37
00:01:18,880 --> 00:01:20,479
minute on how mobile is really

38
00:01:20,479 --> 00:01:22,400
transforming the world you may or may

39
00:01:22,400 --> 00:01:24,960
not be aware that that as of last year

40
00:01:24,960 --> 00:01:25,840
70

41
00:01:25,840 --> 00:01:28,240
69 70 percent of all digital traffic on

42
00:01:28,240 --> 00:01:30,320
the internet and all digital time spent

43
00:01:30,320 --> 00:01:32,720
is actually in mobile apps not web

44
00:01:32,720 --> 00:01:34,640
as a security professional you may be

45
00:01:34,640 --> 00:01:37,200
focused on the web side of security

46
00:01:37,200 --> 00:01:38,799
testing but i'm glad you're here to talk

47
00:01:38,799 --> 00:01:40,720
about the mobile side of security

48
00:01:40,720 --> 00:01:42,399
testing because that's where the traffic

49
00:01:42,399 --> 00:01:44,960
is and that's where the bad guys are

50
00:01:44,960 --> 00:01:48,159
and so 15 years ago the or excuse me 10

51
00:01:48,159 --> 00:01:50,720
years ago the owasp program began and

52
00:01:50,720 --> 00:01:52,560
then a few years after that the oauth

53
00:01:52,560 --> 00:01:54,720
mobile program began and that's what

54
00:01:54,720 --> 00:01:56,320
we're going to focus on today really is

55
00:01:56,320 --> 00:01:58,880
looking at the oas mobile top 10 and how

56
00:01:58,880 --> 00:02:00,799
to build a successful mobile dev set ops

57
00:02:00,799 --> 00:02:02,479
program leveraging it

58
00:02:02,479 --> 00:02:04,399
so if we think about the overall economy

59
00:02:04,399 --> 00:02:06,719
it's amazing with 2.6 billion devices

60
00:02:06,719 --> 00:02:08,399
four and a half million apps in the app

61
00:02:08,399 --> 00:02:10,639
stores uh estimates are between 20 and

62
00:02:10,639 --> 00:02:12,480
30 million mobile apps built for

63
00:02:12,480 --> 00:02:15,040
internal use inside of organizations and

64
00:02:15,040 --> 00:02:16,319
there's millions of mobile app

65
00:02:16,319 --> 00:02:18,000
developers almost as many as web

66
00:02:18,000 --> 00:02:19,920
developers but we've got this giant

67
00:02:19,920 --> 00:02:22,000
shortage of some 3 million cyber

68
00:02:22,000 --> 00:02:25,120
security professionals and as a panel i

69
00:02:25,120 --> 00:02:27,440
was on last year i wish i could be on a

70
00:02:27,440 --> 00:02:29,040
live panel again but a panel i was on

71
00:02:29,040 --> 00:02:32,239
last year said uh the cso of a leading

72
00:02:32,239 --> 00:02:34,640
institution in chicago said trying to

73
00:02:34,640 --> 00:02:37,519
find a mobile pen testing skilled person

74
00:02:37,519 --> 00:02:39,519
is like trying to find a unicorn on

75
00:02:39,519 --> 00:02:41,920
roller skates they're very hard so if

76
00:02:41,920 --> 00:02:43,920
you're looking to learn mobile as well

77
00:02:43,920 --> 00:02:46,080
it's a great career advancement for you

78
00:02:46,080 --> 00:02:47,760
there's some really good opportunities

79
00:02:47,760 --> 00:02:49,760
in the marketplace

80
00:02:49,760 --> 00:02:52,000
so when we think about innovation before

81
00:02:52,000 --> 00:02:53,920
we get into seeing some cool apps and

82
00:02:53,920 --> 00:02:55,360
some interesting things around building

83
00:02:55,360 --> 00:02:57,280
a program waves and waves of mobile

84
00:02:57,280 --> 00:02:59,280
innovation continue right today you can

85
00:02:59,280 --> 00:03:01,360
use the mind map ar application to

86
00:03:01,360 --> 00:03:03,920
actually draw mind maps over augmented

87
00:03:03,920 --> 00:03:06,319
reality of photos we know about digital

88
00:03:06,319 --> 00:03:07,840
payments but now we have digital car

89
00:03:07,840 --> 00:03:10,879
keys i have a tesla i can summon my car

90
00:03:10,879 --> 00:03:12,959
i have an aura health ring it monitors

91
00:03:12,959 --> 00:03:14,159
my health if you're interested in the

92
00:03:14,159 --> 00:03:16,720
nba the nba has partnered with aura to

93
00:03:16,720 --> 00:03:18,959
really work on a testing

94
00:03:18,959 --> 00:03:20,959
health app for use in like covet

95
00:03:20,959 --> 00:03:22,560
situations for athletes so there's all

96
00:03:22,560 --> 00:03:24,799
these great innovations in the market

97
00:03:24,799 --> 00:03:26,400
that we're all enjoying

98
00:03:26,400 --> 00:03:30,159
but the reality is that some 85

99
00:03:30,159 --> 00:03:32,480
of all mobile apps in the app store have

100
00:03:32,480 --> 00:03:34,959
a security bug that's pretty staggering

101
00:03:34,959 --> 00:03:38,080
and some 70 of those apps leak data that

102
00:03:38,080 --> 00:03:40,560
would violate gdpr or ccpa

103
00:03:40,560 --> 00:03:42,799
now we've been benchmarking public app

104
00:03:42,799 --> 00:03:44,400
store data so

105
00:03:44,400 --> 00:03:46,319
publicly available data as opposed to

106
00:03:46,319 --> 00:03:48,159
your private applications and of course

107
00:03:48,159 --> 00:03:49,360
everybody wants to build a great

108
00:03:49,360 --> 00:03:51,280
application and secure application but

109
00:03:51,280 --> 00:03:52,959
the benchmarks continue to show these

110
00:03:52,959 --> 00:03:55,439
stats year in year out and so what that

111
00:03:55,439 --> 00:03:57,280
tells us is while organizations are

112
00:03:57,280 --> 00:03:59,040
producing great mobile application

113
00:03:59,040 --> 00:04:01,120
experiences they're missing the ball on

114
00:04:01,120 --> 00:04:03,280
the security side of the house and when

115
00:04:03,280 --> 00:04:04,480
you dig into the benchmark there

116
00:04:04,480 --> 00:04:06,080
actually are real patterns right so

117
00:04:06,080 --> 00:04:08,159
fifty percent of mobile apps have

118
00:04:08,159 --> 00:04:10,400
insecure data storage and about have ha

119
00:04:10,400 --> 00:04:12,480
have insecure communication

120
00:04:12,480 --> 00:04:14,239
almost half of them have insecure

121
00:04:14,239 --> 00:04:16,639
extraneous functionality again these are

122
00:04:16,639 --> 00:04:19,279
from oauth top 10. the good news is most

123
00:04:19,279 --> 00:04:21,199
of them have secure authentication and

124
00:04:21,199 --> 00:04:23,280
so what we've been trying to do is help

125
00:04:23,280 --> 00:04:25,840
organizations leveraging the os tools i

126
00:04:25,840 --> 00:04:27,759
mean svs top 10 etc we're going to talk

127
00:04:27,759 --> 00:04:29,520
about that in a few minutes as well as

128
00:04:29,520 --> 00:04:31,360
other best practices to really raise the

129
00:04:31,360 --> 00:04:33,840
bar on mobile security

130
00:04:33,840 --> 00:04:35,199
and so today we're here to look at

131
00:04:35,199 --> 00:04:37,160
mobile security at the intersection of

132
00:04:37,160 --> 00:04:39,199
devsecops and you know if you think

133
00:04:39,199 --> 00:04:41,199
about your own organization today you

134
00:04:41,199 --> 00:04:43,680
may have a devsecops program you may not

135
00:04:43,680 --> 00:04:45,680
you may be using it for mobile or web

136
00:04:45,680 --> 00:04:47,520
and you may be in one of three stages

137
00:04:47,520 --> 00:04:49,520
there's the dark ages stage which is the

138
00:04:49,520 --> 00:04:52,160
manual testing late cycle there's the

139
00:04:52,160 --> 00:04:54,080
steamroller stage which is basically

140
00:04:54,080 --> 00:04:55,680
development does what they want and runs

141
00:04:55,680 --> 00:04:57,520
over security and then there's the

142
00:04:57,520 --> 00:04:59,440
automation stage which is really what

143
00:04:59,440 --> 00:05:01,199
devsecops is all about one of the

144
00:05:01,199 --> 00:05:03,680
cornerstones of it is automation and

145
00:05:03,680 --> 00:05:05,759
fast friction free pipelines and so

146
00:05:05,759 --> 00:05:07,840
we'll look at some of that today through

147
00:05:07,840 --> 00:05:09,440
this process

148
00:05:09,440 --> 00:05:11,759
so what i'd like to do is talk about

149
00:05:11,759 --> 00:05:13,680
five really interesting case studies

150
00:05:13,680 --> 00:05:15,759
from mega organizations doing really

151
00:05:15,759 --> 00:05:17,840
pretty amazing things uh when it comes

152
00:05:17,840 --> 00:05:20,240
to mobile some i can name some will

153
00:05:20,240 --> 00:05:22,400
remain nameless as i work my way through

154
00:05:22,400 --> 00:05:24,320
this content

155
00:05:24,320 --> 00:05:26,000
so let's talk about the first one the

156
00:05:26,000 --> 00:05:28,080
first one is uber i'd be willing to bet

157
00:05:28,080 --> 00:05:29,840
everybody that's watching this has used

158
00:05:29,840 --> 00:05:31,520
uber or lyft or one of the ride sharing

159
00:05:31,520 --> 00:05:33,840
apps they're a great example of mobile

160
00:05:33,840 --> 00:05:37,280
first uber didn't even exist years ago

161
00:05:37,280 --> 00:05:39,280
and it came to fruition in part because

162
00:05:39,280 --> 00:05:40,639
of the evolution of the mobile

163
00:05:40,639 --> 00:05:42,000
capabilities

164
00:05:42,000 --> 00:05:44,160
they have an astronomical install base

165
00:05:44,160 --> 00:05:47,360
500 million installs on android alone

166
00:05:47,360 --> 00:05:49,600
now imagine this scenario right so

167
00:05:49,600 --> 00:05:51,120
you're on the application security team

168
00:05:51,120 --> 00:05:52,160
you're on the application development

169
00:05:52,160 --> 00:05:54,080
team you've got thousands and thousands

170
00:05:54,080 --> 00:05:56,319
of developers all over the world you

171
00:05:56,319 --> 00:05:59,440
have one single source code stack for

172
00:05:59,440 --> 00:06:01,919
the consumer application that actually

173
00:06:01,919 --> 00:06:04,000
uses feature flags and compiles downs

174
00:06:04,000 --> 00:06:05,520
and builds differently in different

175
00:06:05,520 --> 00:06:07,360
regions and countries they have the

176
00:06:07,360 --> 00:06:09,600
ability to roll out micro payments using

177
00:06:09,600 --> 00:06:12,400
real cash in in places like asia or

178
00:06:12,400 --> 00:06:14,560
third world countries and other places

179
00:06:14,560 --> 00:06:16,639
it's a trucking application not just you

180
00:06:16,639 --> 00:06:18,800
know order a truck for delivery not just

181
00:06:18,800 --> 00:06:21,520
order a car for human transportation

182
00:06:21,520 --> 00:06:22,479
massive

183
00:06:22,479 --> 00:06:23,840
customization yet complete

184
00:06:23,840 --> 00:06:26,160
centralization and as part of all of

185
00:06:26,160 --> 00:06:28,000
that they've got automated security

186
00:06:28,000 --> 00:06:30,479
testing at multiple layers built into

187
00:06:30,479 --> 00:06:32,639
their pipeline and so while they're able

188
00:06:32,639 --> 00:06:34,400
to do very fast

189
00:06:34,400 --> 00:06:37,360
commit test push-to-prod

190
00:06:37,360 --> 00:06:39,840
cycles within a day within hours what

191
00:06:39,840 --> 00:06:41,520
they've got is a rigorous testing

192
00:06:41,520 --> 00:06:43,520
paradigm built into everything from a

193
00:06:43,520 --> 00:06:45,360
security functionality and privacy

194
00:06:45,360 --> 00:06:47,120
perspective and that's driving their

195
00:06:47,120 --> 00:06:49,280
automation there's a link here to an

196
00:06:49,280 --> 00:06:51,680
event um from one of the original

197
00:06:51,680 --> 00:06:54,160
founding ctos that talks about their uh

198
00:06:54,160 --> 00:06:56,800
explosion into a hundred thousand um

199
00:06:56,800 --> 00:06:59,199
micro services it's i i'm sharing that

200
00:06:59,199 --> 00:07:01,280
for for some background to get a sense

201
00:07:01,280 --> 00:07:03,840
of how complex their environment is

202
00:07:03,840 --> 00:07:06,080
so let's look at another really big

203
00:07:06,080 --> 00:07:07,680
application you probably know which is

204
00:07:07,680 --> 00:07:09,840
mcdonald's right so mcdonald's is an

205
00:07:09,840 --> 00:07:13,280
example of massive local customization

206
00:07:13,280 --> 00:07:15,840
so from a mcdonald's perspective every

207
00:07:15,840 --> 00:07:18,080
mcdonald's store can customize its own

208
00:07:18,080 --> 00:07:21,280
menu think about that you've got 38 000

209
00:07:21,280 --> 00:07:23,840
almost 40 000 stores around the world

210
00:07:23,840 --> 00:07:25,680
that basically means 40 000 different

211
00:07:25,680 --> 00:07:27,840
flavors of a common mobile application

212
00:07:27,840 --> 00:07:30,080
to support each store with millions of

213
00:07:30,080 --> 00:07:32,319
installs as well and so again they use a

214
00:07:32,319 --> 00:07:34,319
common code base again they use feature

215
00:07:34,319 --> 00:07:37,440
flags they use simple customization um

216
00:07:37,440 --> 00:07:39,440
to allow it depending on the store you

217
00:07:39,440 --> 00:07:41,280
pick the menu will change you process

218
00:07:41,280 --> 00:07:42,319
the order they have all the

219
00:07:42,319 --> 00:07:44,400
sophisticated ways of walk to the car

220
00:07:44,400 --> 00:07:46,560
uber eats deliver you know what have you

221
00:07:46,560 --> 00:07:48,080
so it's very excited to see what they've

222
00:07:48,080 --> 00:07:49,520
done and when when you look at

223
00:07:49,520 --> 00:07:51,440
mcdonald's uh telling the story of

224
00:07:51,440 --> 00:07:53,680
mobile they talk about a 4x growth in

225
00:07:53,680 --> 00:07:55,440
food delivery over the last three years

226
00:07:55,440 --> 00:07:57,440
which is an amazing stat we often thinks

227
00:07:57,440 --> 00:07:58,720
of pizza delivery but they have a

228
00:07:58,720 --> 00:08:01,120
massive food delivery uh program in

229
00:08:01,120 --> 00:08:03,039
place certainly during covent we're all

230
00:08:03,039 --> 00:08:05,199
doing the food delivery thing

231
00:08:05,199 --> 00:08:07,199
now here's a really interesting one so

232
00:08:07,199 --> 00:08:09,440
this is an example of an organization

233
00:08:09,440 --> 00:08:12,000
that went through a strategic business

234
00:08:12,000 --> 00:08:14,639
digital transformation so allstate you

235
00:08:14,639 --> 00:08:16,240
might think of as a sleepy insurance

236
00:08:16,240 --> 00:08:17,759
company you've probably seen their ads

237
00:08:17,759 --> 00:08:19,599
on tv and so on and so forth but

238
00:08:19,599 --> 00:08:21,120
allstate is actually a massive

239
00:08:21,120 --> 00:08:22,960
innovation machine and so they've

240
00:08:22,960 --> 00:08:25,199
delivered really amazing innovations and

241
00:08:25,199 --> 00:08:26,960
they're actually driven by innovations

242
00:08:26,960 --> 00:08:28,720
across their technology platform they've

243
00:08:28,720 --> 00:08:30,560
really become a technology company that

244
00:08:30,560 --> 00:08:32,799
happens to do insurance now what they

245
00:08:32,799 --> 00:08:34,399
chose to do as part of this multi-year

246
00:08:34,399 --> 00:08:36,080
digital transformation is they actually

247
00:08:36,080 --> 00:08:38,479
build out a common infrastructure that

248
00:08:38,479 --> 00:08:40,719
every application team uses they took

249
00:08:40,719 --> 00:08:42,559
the legacy systems and stubbed them out

250
00:08:42,559 --> 00:08:44,800
at the api layer they created a common

251
00:08:44,800 --> 00:08:47,040
tool chain for a mobile devops and

252
00:08:47,040 --> 00:08:48,560
mobile dev tech ops as well as a

253
00:08:48,560 --> 00:08:50,240
web-based infrastructure so

254
00:08:50,240 --> 00:08:51,760
organizations when they're looking to

255
00:08:51,760 --> 00:08:53,360
write a new application can simply

256
00:08:53,360 --> 00:08:55,040
request the infrastructure that they

257
00:08:55,040 --> 00:08:56,959
need the tooling the testing the risk

258
00:08:56,959 --> 00:08:59,440
but also the denied jenkins and jira do

259
00:08:59,440 --> 00:09:00,880
they need kubernetes what cloud they

260
00:09:00,880 --> 00:09:02,720
want to live in you know live in or

261
00:09:02,720 --> 00:09:04,640
deploy into what infrastructure or

262
00:09:04,640 --> 00:09:06,560
legacy systems they need to connect to

263
00:09:06,560 --> 00:09:08,320
what database compute power all that

264
00:09:08,320 --> 00:09:10,080
kind of stuff they requested that's

265
00:09:10,080 --> 00:09:11,839
actually almost instantaneously within a

266
00:09:11,839 --> 00:09:13,519
few days delivered to them and all the

267
00:09:13,519 --> 00:09:15,120
testing instructures actually built into

268
00:09:15,120 --> 00:09:17,040
it so in their world their security

269
00:09:17,040 --> 00:09:18,880
testing professionals are actually

270
00:09:18,880 --> 00:09:20,800
spending time making sure the tooling

271
00:09:20,800 --> 00:09:22,880
has the right policy set up and spending

272
00:09:22,880 --> 00:09:25,200
time coaching and mentoring teams as

273
00:09:25,200 --> 00:09:27,040
opposed to manually testing everything

274
00:09:27,040 --> 00:09:28,720
every day so some cool stuff on

275
00:09:28,720 --> 00:09:30,320
innovation at the link you see here as

276
00:09:30,320 --> 00:09:31,519
well

277
00:09:31,519 --> 00:09:32,560
now i want to tell you a little bit

278
00:09:32,560 --> 00:09:34,640
about vivid seats so you may know vivid

279
00:09:34,640 --> 00:09:36,240
seats are in the second hand ticketing

280
00:09:36,240 --> 00:09:38,080
market they've literally sold billions

281
00:09:38,080 --> 00:09:39,920
and billions of tickets

282
00:09:39,920 --> 00:09:41,920
and what you may not know is that vivid

283
00:09:41,920 --> 00:09:43,519
seats not only has the commercial app

284
00:09:43,519 --> 00:09:45,120
you might use but they actually run the

285
00:09:45,120 --> 00:09:46,800
exchange in the back end that most of

286
00:09:46,800 --> 00:09:49,120
the other third-party ticketing

287
00:09:49,120 --> 00:09:51,360
companies use as the auction house for

288
00:09:51,360 --> 00:09:52,560
moving those

289
00:09:52,560 --> 00:09:54,240
assets around and so what they've

290
00:09:54,240 --> 00:09:57,519
created is small fast moving teams so

291
00:09:57,519 --> 00:09:59,440
their mobile and web teams are very

292
00:09:59,440 --> 00:10:01,440
small they're small group of people

293
00:10:01,440 --> 00:10:03,600
they're developers in qa they don't even

294
00:10:03,600 --> 00:10:05,200
have security people on their teams

295
00:10:05,200 --> 00:10:07,839
because developers in qa are responsible

296
00:10:07,839 --> 00:10:10,079
for being experts in security they have

297
00:10:10,079 --> 00:10:12,560
corporate security but security is truly

298
00:10:12,560 --> 00:10:14,160
embedded in the skills and the knowledge

299
00:10:14,160 --> 00:10:16,160
set and the tooling for how their

300
00:10:16,160 --> 00:10:17,920
infrastructure runs and it's really an

301
00:10:17,920 --> 00:10:20,640
impressive fast-moving team to see a lot

302
00:10:20,640 --> 00:10:22,399
of innovations if you want to learn more

303
00:10:22,399 --> 00:10:24,640
about them the um the vivid seats

304
00:10:24,640 --> 00:10:26,399
engineering team actually has a medium a

305
00:10:26,399 --> 00:10:28,000
blog on medium you can have a look at

306
00:10:28,000 --> 00:10:30,320
and get some cool stuff out there

307
00:10:30,320 --> 00:10:31,920
and so finally i can't tell you the name

308
00:10:31,920 --> 00:10:33,360
of this company but they're involved in

309
00:10:33,360 --> 00:10:35,360
the payments world and what's really

310
00:10:35,360 --> 00:10:36,959
amazing about them

311
00:10:36,959 --> 00:10:38,720
is that unlike the others that i've

312
00:10:38,720 --> 00:10:40,240
talked about there were centralized

313
00:10:40,240 --> 00:10:42,640
teams this is a massively decentralized

314
00:10:42,640 --> 00:10:45,120
world so they literally have hundreds of

315
00:10:45,120 --> 00:10:46,800
development teams scattered around the

316
00:10:46,800 --> 00:10:48,640
world working on different projects at

317
00:10:48,640 --> 00:10:49,920
any given time

318
00:10:49,920 --> 00:10:51,440
and so they needed to figure out an

319
00:10:51,440 --> 00:10:54,000
infrastructure and a testing scheme that

320
00:10:54,000 --> 00:10:55,760
would enable them to deliver those

321
00:10:55,760 --> 00:10:58,880
mobile apps but test locally nationally

322
00:10:58,880 --> 00:11:00,959
before and after release and so on and

323
00:11:00,959 --> 00:11:03,440
so forth so while they have some teams

324
00:11:03,440 --> 00:11:05,600
running in an agile world and there may

325
00:11:05,600 --> 00:11:07,519
be some humans doing testing there's

326
00:11:07,519 --> 00:11:09,440
other teams that are running through

327
00:11:09,440 --> 00:11:11,920
automation in the tool chain still other

328
00:11:11,920 --> 00:11:13,519
teams actually interface with the

329
00:11:13,519 --> 00:11:16,000
tooling to the public app stores so they

330
00:11:16,000 --> 00:11:17,680
actually publish an application to the

331
00:11:17,680 --> 00:11:19,200
app store and then it's pulled down from

332
00:11:19,200 --> 00:11:21,360
the app store tested and verified in

333
00:11:21,360 --> 00:11:22,800
maybe a third world country where there

334
00:11:22,800 --> 00:11:25,040
isn't a local security team that happens

335
00:11:25,040 --> 00:11:26,800
within a few hours and that means that

336
00:11:26,800 --> 00:11:28,160
they catch anything and they fix it

337
00:11:28,160 --> 00:11:29,680
quickly if they have to so there's

338
00:11:29,680 --> 00:11:31,440
another kind of interesting scenario

339
00:11:31,440 --> 00:11:33,040
we've seen here

340
00:11:33,040 --> 00:11:34,720
so what i've done is i basically walked

341
00:11:34,720 --> 00:11:36,399
you through five interesting case

342
00:11:36,399 --> 00:11:38,320
studies and they all have a set of

343
00:11:38,320 --> 00:11:40,000
common things that i want to share with

344
00:11:40,000 --> 00:11:42,399
you that's really the lessons learned

345
00:11:42,399 --> 00:11:44,079
so the first thing is that we're all in

346
00:11:44,079 --> 00:11:46,160
all all in this together right so

347
00:11:46,160 --> 00:11:48,320
security and devops have to be partners

348
00:11:48,320 --> 00:11:50,240
in this process right you don't want the

349
00:11:50,240 --> 00:11:51,760
steamroller world where development

350
00:11:51,760 --> 00:11:54,079
steam rolling ahead you don't want the

351
00:11:54,079 --> 00:11:56,079
legacy world where manual testing is

352
00:11:56,079 --> 00:11:58,639
slowing everything down right so working

353
00:11:58,639 --> 00:12:01,279
on partnership sharing community

354
00:12:01,279 --> 00:12:04,240
enablement finding security leaders

355
00:12:04,240 --> 00:12:06,240
within the development scope all of

356
00:12:06,240 --> 00:12:08,240
those things are a critical thing and

357
00:12:08,240 --> 00:12:09,600
everything else i'm going to talk about

358
00:12:09,600 --> 00:12:11,519
using techniques and processes don't

359
00:12:11,519 --> 00:12:13,760
matter if there isn't some level of

360
00:12:13,760 --> 00:12:16,560
partnership between those two teams

361
00:12:16,560 --> 00:12:18,320
and we work with a lot of top tech

362
00:12:18,320 --> 00:12:20,399
companies and other kinds of businesses

363
00:12:20,399 --> 00:12:22,800
in the world and the head of appsec uh

364
00:12:22,800 --> 00:12:25,040
to silicon valley tech company that you

365
00:12:25,040 --> 00:12:26,320
know well

366
00:12:26,320 --> 00:12:28,240
said this so well i'd love to repeat it

367
00:12:28,240 --> 00:12:30,240
and the ultimate shift left is into the

368
00:12:30,240 --> 00:12:32,480
mind of the developer right if you could

369
00:12:32,480 --> 00:12:34,880
take a security skilled professional and

370
00:12:34,880 --> 00:12:36,959
insert what they know about secure code

371
00:12:36,959 --> 00:12:38,480
development and put it in the brain of

372
00:12:38,480 --> 00:12:40,560
every developer in your organization

373
00:12:40,560 --> 00:12:42,880
that would be nirvana right so that

374
00:12:42,880 --> 00:12:45,120
means as a best practice you need to

375
00:12:45,120 --> 00:12:48,000
establish a formal training and expert

376
00:12:48,000 --> 00:12:49,680
resources type program in your

377
00:12:49,680 --> 00:12:51,440
organization so all of these

378
00:12:51,440 --> 00:12:53,200
organizations have a knowledge and

379
00:12:53,200 --> 00:12:55,360
skills-based baseline which is you

380
00:12:55,360 --> 00:12:56,880
either know this or you don't if you're

381
00:12:56,880 --> 00:12:58,800
a new developer coming in you have to go

382
00:12:58,800 --> 00:13:00,160
through these developer security

383
00:13:00,160 --> 00:13:02,320
training programs they use standards

384
00:13:02,320 --> 00:13:05,200
like the oasp m a svs and mstg and so

385
00:13:05,200 --> 00:13:07,519
forth they have security advocates

386
00:13:07,519 --> 00:13:09,600
embedded in development teams they might

387
00:13:09,600 --> 00:13:11,839
be security people excuse me they might

388
00:13:11,839 --> 00:13:13,440
be security people reassigned to a

389
00:13:13,440 --> 00:13:15,200
development team but where possible

390
00:13:15,200 --> 00:13:16,320
they're actually trying to find

391
00:13:16,320 --> 00:13:17,680
developers who are willing to be a

392
00:13:17,680 --> 00:13:19,519
security lead on the team

393
00:13:19,519 --> 00:13:21,120
they leverage courseware they leverage

394
00:13:21,120 --> 00:13:23,120
training they use outside training they

395
00:13:23,120 --> 00:13:25,200
go to conferences like this hopefully

396
00:13:25,200 --> 00:13:26,639
some of you are actually from the

397
00:13:26,639 --> 00:13:28,320
development side participating in

398
00:13:28,320 --> 00:13:30,480
training like uh this training here at

399
00:13:30,480 --> 00:13:33,200
oas at the sauce global event because

400
00:13:33,200 --> 00:13:34,639
it's a great way to learn and understand

401
00:13:34,639 --> 00:13:37,600
how to be more effective

402
00:13:37,680 --> 00:13:39,519
so the second thing the second key

403
00:13:39,519 --> 00:13:41,040
learning is recognizing that mobile and

404
00:13:41,040 --> 00:13:43,040
web are fundamentally different i bet a

405
00:13:43,040 --> 00:13:44,880
lot of you come from the web world

406
00:13:44,880 --> 00:13:46,880
mobile may be new to you or you might be

407
00:13:46,880 --> 00:13:48,320
more advanced when it comes to mobile

408
00:13:48,320 --> 00:13:50,800
security testing or mobile development

409
00:13:50,800 --> 00:13:52,639
but the fundamental architectures are

410
00:13:52,639 --> 00:13:54,240
web and mobile are different and that

411
00:13:54,240 --> 00:13:56,399
means testing tools and techniques and

412
00:13:56,399 --> 00:13:58,000
development techniques are fundamentally

413
00:13:58,000 --> 00:13:58,880
different

414
00:13:58,880 --> 00:14:01,360
right we forget about the fact that 98

415
00:14:01,360 --> 00:14:03,120
of the code of a web app lives behind a

416
00:14:03,120 --> 00:14:04,800
firewall and has all those layers of

417
00:14:04,800 --> 00:14:07,040
defense behind the firewall right and

418
00:14:07,040 --> 00:14:08,560
some code yes comes down to the browser

419
00:14:08,560 --> 00:14:10,000
but guess what the browser itself

420
00:14:10,000 --> 00:14:12,000
protects the code as well so just the

421
00:14:12,000 --> 00:14:13,680
network communications because browsers

422
00:14:13,680 --> 00:14:15,680
by default use ssl you have to deal with

423
00:14:15,680 --> 00:14:17,600
certificates and all that other stuff

424
00:14:17,600 --> 00:14:19,680
with mobile it's the complete opposite

425
00:14:19,680 --> 00:14:21,440
right almost all the mobile code lives

426
00:14:21,440 --> 00:14:23,199
in the wild right a lot of mobile apps

427
00:14:23,199 --> 00:14:25,120
we see are 50 60 percent of the code is

428
00:14:25,120 --> 00:14:27,199
on the device the rest is is behind the

429
00:14:27,199 --> 00:14:29,839
firewall behind some apis that code on

430
00:14:29,839 --> 00:14:31,920
that mobile device is easily reversible

431
00:14:31,920 --> 00:14:33,360
you can reverse any application the

432
00:14:33,360 --> 00:14:34,959
tools are there we have open source

433
00:14:34,959 --> 00:14:36,560
tools freedom radari that you can use to

434
00:14:36,560 --> 00:14:39,600
reverse an ios app even if it's been drm

435
00:14:39,600 --> 00:14:41,600
and so as part of that then the

436
00:14:41,600 --> 00:14:43,600
developer and the security professional

437
00:14:43,600 --> 00:14:45,600
security testing person needs to

438
00:14:45,600 --> 00:14:48,000
understand those fundamental differences

439
00:14:48,000 --> 00:14:50,639
and adapt their testing approaches to to

440
00:14:50,639 --> 00:14:52,320
protect against that

441
00:14:52,320 --> 00:14:54,079
so if we look at the mobile attack

442
00:14:54,079 --> 00:14:56,240
surface for example understanding the

443
00:14:56,240 --> 00:14:58,320
mobile attack surface means recognizing

444
00:14:58,320 --> 00:15:00,160
that attacks come in four areas so you

445
00:15:00,160 --> 00:15:02,240
have the code itself making sure the

446
00:15:02,240 --> 00:15:04,800
code was properly written cleanly

447
00:15:04,800 --> 00:15:06,800
the second is data at rest right so

448
00:15:06,800 --> 00:15:08,880
that's data storage and in memory on the

449
00:15:08,880 --> 00:15:10,639
device the third is data in motion

450
00:15:10,639 --> 00:15:12,639
that's the connection and the transport

451
00:15:12,639 --> 00:15:14,480
of data over the air and the fourth is

452
00:15:14,480 --> 00:15:16,240
the api back ends and what's going on

453
00:15:16,240 --> 00:15:18,240
with that connection back end and what

454
00:15:18,240 --> 00:15:19,920
we find time and again if you remember

455
00:15:19,920 --> 00:15:22,320
earlier i talked about m2 and m3 as

456
00:15:22,320 --> 00:15:24,720
being high violation areas where 50

457
00:15:24,720 --> 00:15:26,160
percent of the apps have issues with

458
00:15:26,160 --> 00:15:28,639
data and rest and 50 48 of the apps have

459
00:15:28,639 --> 00:15:30,560
issues and data in motion that's these

460
00:15:30,560 --> 00:15:32,480
two areas and we find that's largely

461
00:15:32,480 --> 00:15:34,480
because companies don't have the right

462
00:15:34,480 --> 00:15:36,639
testing techniques in place for mobile

463
00:15:36,639 --> 00:15:38,079
and therefore these areas are just

464
00:15:38,079 --> 00:15:40,560
uncovered and therefore defects escape

465
00:15:40,560 --> 00:15:43,040
and you have security bones in the wild

466
00:15:43,040 --> 00:15:44,880
and that's all we want to have happen so

467
00:15:44,880 --> 00:15:46,399
you know whether you are new to mobile

468
00:15:46,399 --> 00:15:47,519
or not i'm going to walk through a quick

469
00:15:47,519 --> 00:15:49,680
mobile attack so what's a bad guy do

470
00:15:49,680 --> 00:15:51,279
takes the mobile app and he downloads it

471
00:15:51,279 --> 00:15:53,120
and he reverses it lots of reversing

472
00:15:53,120 --> 00:15:54,480
tools out there will get me close to

473
00:15:54,480 --> 00:15:56,240
source code they'll manipulate the

474
00:15:56,240 --> 00:15:57,920
inputs and the outputs to learn how it

475
00:15:57,920 --> 00:15:59,920
behaves more often than not you can

476
00:15:59,920 --> 00:16:01,759
harvest some kind of pii from an

477
00:16:01,759 --> 00:16:03,440
application and device as well as its

478
00:16:03,440 --> 00:16:05,680
communication to the back end you might

479
00:16:05,680 --> 00:16:07,519
actually during that process discover

480
00:16:07,519 --> 00:16:09,440
insecure network communication and m3

481
00:16:09,440 --> 00:16:11,759
violation there's no cert validation or

482
00:16:11,759 --> 00:16:14,000
hosting validation so guess what you can

483
00:16:14,000 --> 00:16:16,079
inject a redirection so now you can

484
00:16:16,079 --> 00:16:18,399
redirect and run a phishing attempt

485
00:16:18,399 --> 00:16:19,839
maybe that phishing attempt drives them

486
00:16:19,839 --> 00:16:21,360
to a place that forces them to log in

487
00:16:21,360 --> 00:16:23,440
again and we give you basically all the

488
00:16:23,440 --> 00:16:25,199
credentials logging into that

489
00:16:25,199 --> 00:16:26,880
infrastructure maybe you can redirect

490
00:16:26,880 --> 00:16:28,480
payment as we've seen with some

491
00:16:28,480 --> 00:16:30,320
commercial breaches in the last year or

492
00:16:30,320 --> 00:16:32,000
what have you now you've got account

493
00:16:32,000 --> 00:16:33,680
takeover and you've got all this data

494
00:16:33,680 --> 00:16:35,279
attacked back in so you don't want to

495
00:16:35,279 --> 00:16:37,199
have this happen you need to understand

496
00:16:37,199 --> 00:16:39,199
the anatomy of an attack understand the

497
00:16:39,199 --> 00:16:40,720
attack surface and then make sure you

498
00:16:40,720 --> 00:16:43,680
have the right testing tools in place

499
00:16:43,680 --> 00:16:45,279
so number three here is really looking

500
00:16:45,279 --> 00:16:47,040
at the os mobile project there are

501
00:16:47,040 --> 00:16:49,360
fantastic tools you know years ago the

502
00:16:49,360 --> 00:16:51,759
os mobile top 10 got started because of

503
00:16:51,759 --> 00:16:53,920
a common recognition across many of us

504
00:16:53,920 --> 00:16:55,360
that web and mobile were fundamentally

505
00:16:55,360 --> 00:16:56,240
different

506
00:16:56,240 --> 00:16:58,000
about three years ago the oauth mobile

507
00:16:58,000 --> 00:17:00,959
project got up got a boost and the masvs

508
00:17:00,959 --> 00:17:03,120
and mstg were created

509
00:17:03,120 --> 00:17:05,119
highly recommend you attend sessions

510
00:17:05,119 --> 00:17:07,599
about this take the time to download and

511
00:17:07,599 --> 00:17:09,119
look at the books they're available

512
00:17:09,119 --> 00:17:11,679
online there's your links here for you

513
00:17:11,679 --> 00:17:13,760
to go learn more information about them

514
00:17:13,760 --> 00:17:15,760
the aus mobile project will help you

515
00:17:15,760 --> 00:17:18,319
truly understand what the threat models

516
00:17:18,319 --> 00:17:19,839
are what the attack vectors are where

517
00:17:19,839 --> 00:17:22,079
the risks are and then the process for

518
00:17:22,079 --> 00:17:23,760
properly testing an application and

519
00:17:23,760 --> 00:17:24,880
there's a great

520
00:17:24,880 --> 00:17:27,359
security checklist available at owasp as

521
00:17:27,359 --> 00:17:28,160
well

522
00:17:28,160 --> 00:17:29,280
now you're not going to learn this

523
00:17:29,280 --> 00:17:30,400
overnight

524
00:17:30,400 --> 00:17:32,240
but what you want to do is think about

525
00:17:32,240 --> 00:17:33,919
starting where the most frequent issues

526
00:17:33,919 --> 00:17:34,640
are

527
00:17:34,640 --> 00:17:37,520
the mstg is like 200 and some pages and

528
00:17:37,520 --> 00:17:38,880
you're not tomorrow going to suddenly

529
00:17:38,880 --> 00:17:40,799
have a test suite that will do all that

530
00:17:40,799 --> 00:17:42,480
so if we go back to the os mobile top 10

531
00:17:42,480 --> 00:17:43,679
remember i was talking earlier about

532
00:17:43,679 --> 00:17:44,880
some stats let's look at these real

533
00:17:44,880 --> 00:17:47,760
quick so m2 and m3 around insecure data

534
00:17:47,760 --> 00:17:49,120
storage and communication where there's

535
00:17:49,120 --> 00:17:51,440
a high degree of failure so we recommend

536
00:17:51,440 --> 00:17:53,120
you build out your testing suite to make

537
00:17:53,120 --> 00:17:54,799
sure you're covering those what does

538
00:17:54,799 --> 00:17:56,880
that mean that means das the only way to

539
00:17:56,880 --> 00:17:59,200
test m2 and m3 is dynamic security

540
00:17:59,200 --> 00:18:00,960
testing there are ways to automate it

541
00:18:00,960 --> 00:18:01,919
i'm going to show you how to do that in

542
00:18:01,919 --> 00:18:03,039
the tool chain

543
00:18:03,039 --> 00:18:05,200
m7 one third of the apps have coding

544
00:18:05,200 --> 00:18:07,360
mistakes got to catch those and then

545
00:18:07,360 --> 00:18:08,960
there's a lower number around reverse

546
00:18:08,960 --> 00:18:10,400
engineering and extraneous functionality

547
00:18:10,400 --> 00:18:12,400
but they still create

548
00:18:12,400 --> 00:18:14,080
issues those can be harder to test for

549
00:18:14,080 --> 00:18:15,679
they sometimes require additional human

550
00:18:15,679 --> 00:18:17,760
review but a lot of this stuff can be

551
00:18:17,760 --> 00:18:19,200
automated and we're going to show you

552
00:18:19,200 --> 00:18:21,520
how to do that in a few minutes

553
00:18:21,520 --> 00:18:23,520
so when we look at the overall mission

554
00:18:23,520 --> 00:18:26,400
of mobile devsecops it's all about

555
00:18:26,400 --> 00:18:28,960
automation and integration for speed so

556
00:18:28,960 --> 00:18:31,840
how do i build security into my pipeline

557
00:18:31,840 --> 00:18:33,760
build security into my programs and

558
00:18:33,760 --> 00:18:36,160
automate as much as possible and leave

559
00:18:36,160 --> 00:18:38,400
the manual work behind or make it so the

560
00:18:38,400 --> 00:18:40,400
manual work is only needed occasionally

561
00:18:40,400 --> 00:18:42,000
for high risk or complicated type

562
00:18:42,000 --> 00:18:44,400
scenarios they can't be automated

563
00:18:44,400 --> 00:18:47,120
right so the new world of mobile testing

564
00:18:47,120 --> 00:18:48,400
over the past three or four years

565
00:18:48,400 --> 00:18:49,760
there's a number of vendors now that

566
00:18:49,760 --> 00:18:52,160
provide automated mobile apps testing

567
00:18:52,160 --> 00:18:54,240
that deliver at least sas and das and

568
00:18:54,240 --> 00:18:56,400
some of them deliver i asked as well

569
00:18:56,400 --> 00:18:58,160
and this actually plugs into the tool

570
00:18:58,160 --> 00:19:00,480
chain and what's great is because it now

571
00:19:00,480 --> 00:19:03,280
does binary testing binary testing means

572
00:19:03,280 --> 00:19:05,919
low false positives sas and is combined

573
00:19:05,919 --> 00:19:07,919
to deliver low false positives and

574
00:19:07,919 --> 00:19:09,280
binary testing means you can test any

575
00:19:09,280 --> 00:19:10,480
language or framework so now you don't

576
00:19:10,480 --> 00:19:11,919
have to worry about what language was it

577
00:19:11,919 --> 00:19:13,760
written in because a lot of the sas

578
00:19:13,760 --> 00:19:15,360
traditional sas source code tools of

579
00:19:15,360 --> 00:19:17,600
course are dependent on language what's

580
00:19:17,600 --> 00:19:19,760
also cool about it is the os mobile top

581
00:19:19,760 --> 00:19:21,840
10 and mstg can be built into this and

582
00:19:21,840 --> 00:19:23,520
so you'll find tooling that will enable

583
00:19:23,520 --> 00:19:25,360
you to do that and then you can tune how

584
00:19:25,360 --> 00:19:26,880
you want to do the testing based on the

585
00:19:26,880 --> 00:19:28,720
risk and the velocity of the site of the

586
00:19:28,720 --> 00:19:29,600
cycle

587
00:19:29,600 --> 00:19:31,280
and so when you get into automation

588
00:19:31,280 --> 00:19:32,799
there's some really cool things that can

589
00:19:32,799 --> 00:19:34,799
happen so when you're building your

590
00:19:34,799 --> 00:19:37,280
checklist for tooling for automation

591
00:19:37,280 --> 00:19:39,200
make sure your checklist includes static

592
00:19:39,200 --> 00:19:40,720
dynamic and interactive testing

593
00:19:40,720 --> 00:19:43,200
capabilities it is possible across

594
00:19:43,200 --> 00:19:45,600
multiple vendors to actually be able to

595
00:19:45,600 --> 00:19:47,200
do these three things

596
00:19:47,200 --> 00:19:50,400
as part of an automated testing scenario

597
00:19:50,400 --> 00:19:52,960
no it's not a mobile pen test it takes a

598
00:19:52,960 --> 00:19:55,679
human expertise to do it but imagine

599
00:19:55,679 --> 00:19:58,400
automating 70 or 80 percent of the human

600
00:19:58,400 --> 00:20:00,640
test in a way that allows you to plug it

601
00:20:00,640 --> 00:20:02,720
into an automated tool chain

602
00:20:02,720 --> 00:20:05,120
and run on a daily basis

603
00:20:05,120 --> 00:20:07,039
right so the capabilities are there you

604
00:20:07,039 --> 00:20:08,880
can take advantage of them now and then

605
00:20:08,880 --> 00:20:11,200
do the manual testing when you need to

606
00:20:11,200 --> 00:20:12,880
now as part of this you need to run the

607
00:20:12,880 --> 00:20:15,200
integration cycle as well so not only

608
00:20:15,200 --> 00:20:16,159
are you automating it but you're

609
00:20:16,159 --> 00:20:18,080
plugging it in so look for tooling that

610
00:20:18,080 --> 00:20:19,440
integrates with your ci cd

611
00:20:19,440 --> 00:20:22,159
infrastructure so jenkins jira azure

612
00:20:22,159 --> 00:20:24,159
devops bitrise what have you whatever

613
00:20:24,159 --> 00:20:26,320
tools you're using a lot of the tools

614
00:20:26,320 --> 00:20:27,360
out there in the market that do

615
00:20:27,360 --> 00:20:28,960
automated testing will integrate and so

616
00:20:28,960 --> 00:20:30,720
that basically means no human actually

617
00:20:30,720 --> 00:20:32,960
has to do anything and so now you can

618
00:20:32,960 --> 00:20:34,640
see on the left that jenkins build is

619
00:20:34,640 --> 00:20:36,880
being kicked off when the jenkins build

620
00:20:36,880 --> 00:20:39,280
completes automatically via api in

621
00:20:39,280 --> 00:20:41,200
connector the binary is passed to the

622
00:20:41,200 --> 00:20:43,520
automated test suite the test suite then

623
00:20:43,520 --> 00:20:45,360
runs and the test week then generates

624
00:20:45,360 --> 00:20:47,840
jira tickets so developers and security

625
00:20:47,840 --> 00:20:49,440
staff don't have to log into a tool and

626
00:20:49,440 --> 00:20:51,520
manually run a test system does it for

627
00:20:51,520 --> 00:20:53,280
you like a smoke test or a functional

628
00:20:53,280 --> 00:20:55,039
test and it automatically feeds you

629
00:20:55,039 --> 00:20:56,320
those tickets

630
00:20:56,320 --> 00:20:58,000
now the ticketing you need to make sure

631
00:20:58,000 --> 00:20:59,520
is useful for developers to fix the

632
00:20:59,520 --> 00:21:01,280
issues so make sure you get issue

633
00:21:01,280 --> 00:21:03,120
description remediation repair

634
00:21:03,120 --> 00:21:05,679
instructions any context details where

635
00:21:05,679 --> 00:21:08,000
did it happen line of code what have you

636
00:21:08,000 --> 00:21:10,000
uh and make sure that you've got all the

637
00:21:10,000 --> 00:21:11,440
right information so a developer can

638
00:21:11,440 --> 00:21:13,679
take that ticket and fix the issue and

639
00:21:13,679 --> 00:21:15,440
some organizations will choose to have a

640
00:21:15,440 --> 00:21:17,440
human verify the tickets on the security

641
00:21:17,440 --> 00:21:19,200
team before they go to dev but all the

642
00:21:19,200 --> 00:21:21,120
organizations i showed you they don't

643
00:21:21,120 --> 00:21:22,640
have humans in the loop anymore after

644
00:21:22,640 --> 00:21:24,400
they built trust in the tools they let

645
00:21:24,400 --> 00:21:26,640
it run in an automated fashion

646
00:21:26,640 --> 00:21:27,840
now you're going to say especially if

647
00:21:27,840 --> 00:21:29,280
your pen testing professional what about

648
00:21:29,280 --> 00:21:31,200
a high risk scenario what about manual

649
00:21:31,200 --> 00:21:32,159
testing

650
00:21:32,159 --> 00:21:34,080
so the reality is for any high-risk app

651
00:21:34,080 --> 00:21:35,919
absolutely you should do an expert

652
00:21:35,919 --> 00:21:38,320
driven manual full scope pen test

653
00:21:38,320 --> 00:21:40,799
definitely do that leverage the mstg to

654
00:21:40,799 --> 00:21:42,720
get there but what's great about this is

655
00:21:42,720 --> 00:21:44,640
if you're testing 70 or 80 of the code

656
00:21:44,640 --> 00:21:46,720
every day in an automated fashion that

657
00:21:46,720 --> 00:21:48,240
means the special stuff that the pen

658
00:21:48,240 --> 00:21:50,480
tester has to dig into is less of a

659
00:21:50,480 --> 00:21:52,400
workload it gets rid of the grunt work

660
00:21:52,400 --> 00:21:53,440
and then you can focus on the

661
00:21:53,440 --> 00:21:55,360
interesting stuff testing captcha

662
00:21:55,360 --> 00:21:57,360
multi-factor authentication iot

663
00:21:57,360 --> 00:21:58,640
integration

664
00:21:58,640 --> 00:22:00,159
maybe the automated testing finds

665
00:22:00,159 --> 00:22:01,600
something indicative that you need to do

666
00:22:01,600 --> 00:22:03,679
deeper forensics on it's really cool to

667
00:22:03,679 --> 00:22:05,600
watch this automation and integration

668
00:22:05,600 --> 00:22:07,840
occur and those are really foundations

669
00:22:07,840 --> 00:22:10,960
of the mobile devsecops tool chain

670
00:22:10,960 --> 00:22:13,200
so if we kind of bring it all together

671
00:22:13,200 --> 00:22:14,799
right it's all about

672
00:22:14,799 --> 00:22:17,360
integrating and automating as much as

673
00:22:17,360 --> 00:22:18,480
you can

674
00:22:18,480 --> 00:22:20,559
and so as a security professional you

675
00:22:20,559 --> 00:22:22,559
need to be an advocate and an advanced

676
00:22:22,559 --> 00:22:24,960
security tester yourself but helping

677
00:22:24,960 --> 00:22:27,039
your organization understand how to

678
00:22:27,039 --> 00:22:29,200
weave and inject

679
00:22:29,200 --> 00:22:31,679
uh security into the fabric of how they

680
00:22:31,679 --> 00:22:34,159
operate is really a critical goal and

681
00:22:34,159 --> 00:22:36,159
every organization that i talked about

682
00:22:36,159 --> 00:22:38,480
earlier has a multi-level uh

683
00:22:38,480 --> 00:22:40,240
multi-element security testing

684
00:22:40,240 --> 00:22:42,559
capabilities and so what you see here

685
00:22:42,559 --> 00:22:44,640
are the common things that we find in

686
00:22:44,640 --> 00:22:46,640
the most successful organization so

687
00:22:46,640 --> 00:22:48,080
starting at the bottom if we think of

688
00:22:48,080 --> 00:22:51,120
this as our life cycle right so the the

689
00:22:51,120 --> 00:22:53,360
security training of all roles goes on

690
00:22:53,360 --> 00:22:54,960
consistently and they meet that minimum

691
00:22:54,960 --> 00:22:57,600
security bar product managers are

692
00:22:57,600 --> 00:22:59,840
providing security requirements within

693
00:22:59,840 --> 00:23:02,240
applications uh not just developers

694
00:23:02,240 --> 00:23:04,240
guessing what should to include threat

695
00:23:04,240 --> 00:23:05,919
modeling is being performed often

696
00:23:05,919 --> 00:23:07,840
security and developers together it's a

697
00:23:07,840 --> 00:23:09,679
great way to teach developers how to do

698
00:23:09,679 --> 00:23:11,679
their own threat modeling as part of the

699
00:23:11,679 --> 00:23:14,080
scenario using a variety of tools to

700
00:23:14,080 --> 00:23:16,640
help the developer so these ide plug-ins

701
00:23:16,640 --> 00:23:19,360
that are sas like spell checking tools

702
00:23:19,360 --> 00:23:21,039
are quite popular

703
00:23:21,039 --> 00:23:23,760
that's different from sas repo scans

704
00:23:23,760 --> 00:23:25,440
that's as the developers are writing

705
00:23:25,440 --> 00:23:27,440
code some of these ide plugins are

706
00:23:27,440 --> 00:23:29,039
pretty good at detecting hey you wrote

707
00:23:29,039 --> 00:23:30,960
this command wrong you chose http not

708
00:23:30,960 --> 00:23:33,280
https are you doing certificate wrong

709
00:23:33,280 --> 00:23:34,640
here's a way to properly structure a

710
00:23:34,640 --> 00:23:36,400
certificate certificates setup call

711
00:23:36,400 --> 00:23:38,000
and what have you so they're really nice

712
00:23:38,000 --> 00:23:39,360
developer gains

713
00:23:39,360 --> 00:23:42,320
sca repo scans is critical mobile apps

714
00:23:42,320 --> 00:23:45,600
typically 40 50 70 of a mobile app has

715
00:23:45,600 --> 00:23:47,200
open source in it

716
00:23:47,200 --> 00:23:49,840
make sure your team has a mechanism to

717
00:23:49,840 --> 00:23:52,720
scan those open source repos that you're

718
00:23:52,720 --> 00:23:55,120
bringing in we find time and again the

719
00:23:55,120 --> 00:23:57,360
vulnerabilities our customers find with

720
00:23:57,360 --> 00:23:58,480
our tooling

721
00:23:58,480 --> 00:24:00,480
come from third-party open source or

722
00:24:00,480 --> 00:24:03,120
third-party paid libraries they embedded

723
00:24:03,120 --> 00:24:05,120
not from the code they wrote themselves

724
00:24:05,120 --> 00:24:06,640
i think we're all learning that open

725
00:24:06,640 --> 00:24:08,400
source has a big risk it's got a big

726
00:24:08,400 --> 00:24:10,320
benefit too of course but make sure

727
00:24:10,320 --> 00:24:11,919
you're scanning it okay

728
00:24:11,919 --> 00:24:14,640
so you know then within all of that as

729
00:24:14,640 --> 00:24:16,640
you build the app then do your static

730
00:24:16,640 --> 00:24:18,640
dynamic you know interactive binary

731
00:24:18,640 --> 00:24:20,960
analysis as part of the cycle feed those

732
00:24:20,960 --> 00:24:23,039
tickets back where necessary for the

733
00:24:23,039 --> 00:24:25,279
high risk apps do your pen testing and

734
00:24:25,279 --> 00:24:26,720
then make sure you have a mechanism to

735
00:24:26,720 --> 00:24:29,120
monitor those uh production apps as well

736
00:24:29,120 --> 00:24:31,120
right it's entirely possible that

737
00:24:31,120 --> 00:24:32,799
something didn't translate right into

738
00:24:32,799 --> 00:24:34,960
the app store when it goes public or

739
00:24:34,960 --> 00:24:36,960
someone might be trying to resubmit your

740
00:24:36,960 --> 00:24:39,760
app in a rogue way or maybe a developer

741
00:24:39,760 --> 00:24:42,640
snuck past you and did a build patch and

742
00:24:42,640 --> 00:24:44,240
got pushed live

743
00:24:44,240 --> 00:24:45,919
and you didn't catch it in the tool

744
00:24:45,919 --> 00:24:47,840
chain or the manual testing process but

745
00:24:47,840 --> 00:24:49,600
you can catch it by monitoring the app

746
00:24:49,600 --> 00:24:51,840
store or the production infrastructure

747
00:24:51,840 --> 00:24:53,679
now all of this doesn't work if you

748
00:24:53,679 --> 00:24:55,120
don't have security policies and

749
00:24:55,120 --> 00:24:56,320
governance in place and every

750
00:24:56,320 --> 00:24:58,640
organization i talked about before has

751
00:24:58,640 --> 00:25:00,240
strong policy and government and

752
00:25:00,240 --> 00:25:01,679
governance in place in order to make

753
00:25:01,679 --> 00:25:03,360
them successful

754
00:25:03,360 --> 00:25:05,600
the other thing is don't forget securing

755
00:25:05,600 --> 00:25:07,360
the tool chain itself

756
00:25:07,360 --> 00:25:09,120
so a number of organizations have been

757
00:25:09,120 --> 00:25:11,039
breached through their tools that is an

758
00:25:11,039 --> 00:25:13,600
emerging attack surface so whether you

759
00:25:13,600 --> 00:25:15,520
are responsible for the tooling itself

760
00:25:15,520 --> 00:25:17,679
or others make sure the right thing is

761
00:25:17,679 --> 00:25:19,279
happening right make sure they're

762
00:25:19,279 --> 00:25:20,960
dealing with authentication

763
00:25:20,960 --> 00:25:23,279
authorization access controls all of

764
00:25:23,279 --> 00:25:25,039
those things are you know there's no s3

765
00:25:25,039 --> 00:25:26,960
buckets left open god there was just

766
00:25:26,960 --> 00:25:29,120
another breach yesterday on that it's

767
00:25:29,120 --> 00:25:31,919
crazy right so as a as a steward of

768
00:25:31,919 --> 00:25:33,760
security make sure the tool chain itself

769
00:25:33,760 --> 00:25:35,440
and all the infrastructure of the

770
00:25:35,440 --> 00:25:37,679
application is secured in and of itself

771
00:25:37,679 --> 00:25:39,200
while you're also testing the actual

772
00:25:39,200 --> 00:25:42,480
application infrastructure

773
00:25:42,480 --> 00:25:43,919
and so when we look at this what's

774
00:25:43,919 --> 00:25:45,360
really interesting is is you may be

775
00:25:45,360 --> 00:25:48,000
familiar with a 2020 devops community

776
00:25:48,000 --> 00:25:50,159
survey for five years a group of

777
00:25:50,159 --> 00:25:52,640
organizations now secure sonatype and

778
00:25:52,640 --> 00:25:53,520
others

779
00:25:53,520 --> 00:25:55,279
have been publishing a devops community

780
00:25:55,279 --> 00:25:56,960
survey and this year's survey had some

781
00:25:56,960 --> 00:25:58,559
really interesting data

782
00:25:58,559 --> 00:26:00,880
and so organizations were filling out

783
00:26:00,880 --> 00:26:02,799
the survey and able to based on their

784
00:26:02,799 --> 00:26:04,159
questions determine whether they were

785
00:26:04,159 --> 00:26:05,200
mature

786
00:26:05,200 --> 00:26:07,120
average or immature

787
00:26:07,120 --> 00:26:08,960
and so there's some striking data about

788
00:26:08,960 --> 00:26:10,720
the mature ones like the five

789
00:26:10,720 --> 00:26:12,960
organizations i talked about earlier the

790
00:26:12,960 --> 00:26:16,159
first one is that they use many tools

791
00:26:16,159 --> 00:26:18,240
and of those tools they use them

792
00:26:18,240 --> 00:26:20,159
frequently so they're using csa

793
00:26:20,159 --> 00:26:21,760
container security they're using das

794
00:26:21,760 --> 00:26:23,840
they're using sca they're using i asked

795
00:26:23,840 --> 00:26:26,400
right best in class organizations choose

796
00:26:26,400 --> 00:26:27,919
to use multiple tools because they

797
00:26:27,919 --> 00:26:29,679
realize it takes a village like the

798
00:26:29,679 --> 00:26:31,600
picture we just saw the other thing

799
00:26:31,600 --> 00:26:33,760
that's interesting on the right right is

800
00:26:33,760 --> 00:26:37,120
that those who are mature are 350

801
00:26:37,120 --> 00:26:40,000
percent more likely to use tools through

802
00:26:40,000 --> 00:26:42,000
the entire tool chain so that's all of

803
00:26:42,000 --> 00:26:45,760
these not just those those key five

804
00:26:45,760 --> 00:26:47,440
and so as part of this there's a link

805
00:26:47,440 --> 00:26:49,200
here the devops survey

806
00:26:49,200 --> 00:26:51,600
good have a look at it uh encourage you

807
00:26:51,600 --> 00:26:53,120
to track that in the future there's a

808
00:26:53,120 --> 00:26:55,360
lot of good information in it and when

809
00:26:55,360 --> 00:26:57,039
we look at governance as well i always

810
00:26:57,039 --> 00:26:58,559
like to take a take a second on

811
00:26:58,559 --> 00:27:00,400
governance because as security analysts

812
00:27:00,400 --> 00:27:02,080
and development teams we still have to

813
00:27:02,080 --> 00:27:03,520
deal with governance and compliance

814
00:27:03,520 --> 00:27:04,799
typically or we're asked by other

815
00:27:04,799 --> 00:27:06,720
organizations to deal with it and those

816
00:27:06,720 --> 00:27:08,799
successful mature organizations are

817
00:27:08,799 --> 00:27:11,440
twice as likely to include automated

818
00:27:11,440 --> 00:27:13,440
security and compliance testing as part

819
00:27:13,440 --> 00:27:15,360
of their governance program and so some

820
00:27:15,360 --> 00:27:16,640
of the organizations i talked about

821
00:27:16,640 --> 00:27:17,679
earlier

822
00:27:17,679 --> 00:27:19,120
their pipelines actually generate

823
00:27:19,120 --> 00:27:20,720
reporting that feeds into risk

824
00:27:20,720 --> 00:27:22,480
compliance and governance or the grc

825
00:27:22,480 --> 00:27:25,600
teams which is pretty awesome

826
00:27:25,760 --> 00:27:27,679
so a lot of information shared today i

827
00:27:27,679 --> 00:27:30,480
want to want to summarize here so

828
00:27:30,480 --> 00:27:32,640
what sets apart world-class

829
00:27:32,640 --> 00:27:34,640
organizations from the rest of the world

830
00:27:34,640 --> 00:27:37,120
is really five key things they empower

831
00:27:37,120 --> 00:27:39,440
with absec training programs across dev

832
00:27:39,440 --> 00:27:40,399
qa

833
00:27:40,399 --> 00:27:43,279
and security they recognize security as

834
00:27:43,279 --> 00:27:45,520
a skill as a critical criteria and they

835
00:27:45,520 --> 00:27:47,039
practice what they preach in terms of

836
00:27:47,039 --> 00:27:49,120
delivering it the second thing is all

837
00:27:49,120 --> 00:27:50,640
the organizations recognize

838
00:27:50,640 --> 00:27:52,159
fundamentally the differences between

839
00:27:52,159 --> 00:27:54,640
mobile and web and they therefore have

840
00:27:54,640 --> 00:27:56,640
threat models they have processes they

841
00:27:56,640 --> 00:27:58,000
have testing they have development

842
00:27:58,000 --> 00:28:00,880
strategies all of those things are run

843
00:28:00,880 --> 00:28:02,159
differently the knowledge and

844
00:28:02,159 --> 00:28:03,919
understanding is recognized to be

845
00:28:03,919 --> 00:28:06,000
different and so like the venn diagram

846
00:28:06,000 --> 00:28:07,520
some are similar but they take care of

847
00:28:07,520 --> 00:28:09,520
the special things

848
00:28:09,520 --> 00:28:11,440
all of them leverage os right industry

849
00:28:11,440 --> 00:28:12,720
standards matter there's such a

850
00:28:12,720 --> 00:28:16,000
fantastic level of information and

851
00:28:16,000 --> 00:28:17,840
resources knowledge resources available

852
00:28:17,840 --> 00:28:19,600
from owasp and the community of

853
00:28:19,600 --> 00:28:22,000
participants around oasp like us and

854
00:28:22,000 --> 00:28:23,679
we're excited to share best practices

855
00:28:23,679 --> 00:28:25,520
with you like today

856
00:28:25,520 --> 00:28:27,679
practice devops devops is all about

857
00:28:27,679 --> 00:28:29,279
automate and integrate everything let

858
00:28:29,279 --> 00:28:31,039
the system and the tools do the work

859
00:28:31,039 --> 00:28:33,760
enable the humans to focus on their job

860
00:28:33,760 --> 00:28:35,440
while the infrastructure and the tooling

861
00:28:35,440 --> 00:28:38,159
does the work for them and then finally

862
00:28:38,159 --> 00:28:40,000
really recognize security is not a

863
00:28:40,000 --> 00:28:41,600
silver bullet

864
00:28:41,600 --> 00:28:43,120
inject security throughout the tool

865
00:28:43,120 --> 00:28:45,120
chain and all the different places that

866
00:28:45,120 --> 00:28:47,520
are necessary to really bring it across

867
00:28:47,520 --> 00:28:49,200
as we saw for many organizations

868
00:28:49,200 --> 00:28:52,240
securities 10 11 12 points when it when

869
00:28:52,240 --> 00:28:54,559
you look at the overall environment that

870
00:28:54,559 --> 00:28:56,799
we're producing applications and making

871
00:28:56,799 --> 00:28:58,720
sure that security is layered in at

872
00:28:58,720 --> 00:29:00,799
every different point that's reasonable

873
00:29:00,799 --> 00:29:02,640
within that life cycle you can be the

874
00:29:02,640 --> 00:29:04,399
security champion that can bring this

875
00:29:04,399 --> 00:29:06,320
and really drive success into your

876
00:29:06,320 --> 00:29:08,320
mobile devsecops team

877
00:29:08,320 --> 00:29:10,240
so before we wrap up i want to share a

878
00:29:10,240 --> 00:29:12,000
lot of resources you'll have all of

879
00:29:12,000 --> 00:29:14,559
these links there's a great cyber intel

880
00:29:14,559 --> 00:29:16,320
class if you haven't seen cyber it's

881
00:29:16,320 --> 00:29:17,679
good learning resource if you don't know

882
00:29:17,679 --> 00:29:19,760
a lot about mobile appsec 30 minutes

883
00:29:19,760 --> 00:29:20,720
you'll be

884
00:29:20,720 --> 00:29:22,799
get a good baseline there's resources

885
00:29:22,799 --> 00:29:24,399
here on how to set up the tool chain so

886
00:29:24,399 --> 00:29:25,840
if you're looking at tool choices and

887
00:29:25,840 --> 00:29:27,679
feature capabilities and how to

888
00:29:27,679 --> 00:29:29,200
integrate it all together there's some

889
00:29:29,200 --> 00:29:31,600
development best practices i shared a

890
00:29:31,600 --> 00:29:33,520
bit around top vulnerabilities there's a

891
00:29:33,520 --> 00:29:35,120
great infographic that will walk you

892
00:29:35,120 --> 00:29:36,640
through the top five most frequent

893
00:29:36,640 --> 00:29:38,559
vulnerabilities that can help you and

894
00:29:38,559 --> 00:29:39,760
your developers figure out where to

895
00:29:39,760 --> 00:29:41,520
focus your work there's a link to the

896
00:29:41,520 --> 00:29:43,360
devops survey here we encourage you to

897
00:29:43,360 --> 00:29:45,120
have a look at it and if you're big into

898
00:29:45,120 --> 00:29:46,880
mobile dev secops there's a newsletter

899
00:29:46,880 --> 00:29:48,480
you can follow as well with tips and

900
00:29:48,480 --> 00:29:50,000
tricks you can use

901
00:29:50,000 --> 00:29:52,000
coming out every two weeks

902
00:29:52,000 --> 00:29:53,600
and so with that i'd like to thank you

903
00:29:53,600 --> 00:29:55,440
all for attending today i realize we

904
00:29:55,440 --> 00:29:57,200
don't have live q a you're welcome to

905
00:29:57,200 --> 00:30:00,240
hit me up uh at my email address or on

906
00:30:00,240 --> 00:30:02,320
twitter as a follow-up and i look

907
00:30:02,320 --> 00:30:03,919
forward to meeting you some point in the

908
00:30:03,919 --> 00:30:06,240
future thanks for attending our wasp

909
00:30:06,240 --> 00:30:09,039
session

