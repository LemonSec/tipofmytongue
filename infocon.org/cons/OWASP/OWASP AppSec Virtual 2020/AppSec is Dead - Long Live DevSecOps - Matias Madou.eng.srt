1
00:00:00,160 --> 00:00:01,839
acunetix helps thousands of

2
00:00:01,839 --> 00:00:04,000
organizations secure their websites and

3
00:00:04,000 --> 00:00:06,240
web applications across the globe

4
00:00:06,240 --> 00:00:07,759
whether you're a one-person team

5
00:00:07,759 --> 00:00:09,920
ensuring the security of a few websites

6
00:00:09,920 --> 00:00:12,000
or a large organization interested in

7
00:00:12,000 --> 00:00:13,599
automating your web vulnerability

8
00:00:13,599 --> 00:00:16,000
assessment and management acunetix is

9
00:00:16,000 --> 00:00:18,640
here to help

10
00:00:19,520 --> 00:00:21,199
thanks all for joining in my name is

11
00:00:21,199 --> 00:00:23,519
matias madhu i'm the cto and co-founder

12
00:00:23,519 --> 00:00:25,279
of secure code warrior

13
00:00:25,279 --> 00:00:27,599
and today i would like to talk for about

14
00:00:27,599 --> 00:00:31,119
absolutes dead long-lived devsecops

15
00:00:31,119 --> 00:00:33,040
a little bit of a history about myself

16
00:00:33,040 --> 00:00:35,680
my name is matias madhu and i started my

17
00:00:35,680 --> 00:00:37,840
career at ghent university in belgium

18
00:00:37,840 --> 00:00:40,239
where i pursued a phd in application

19
00:00:40,239 --> 00:00:41,600
security

20
00:00:41,600 --> 00:00:44,079
with my phd i actually moved to the us

21
00:00:44,079 --> 00:00:45,680
and i joined and at that time small

22
00:00:45,680 --> 00:00:48,399
company called fordify

23
00:00:48,399 --> 00:00:51,120
fordify was a company that was doing

24
00:00:51,120 --> 00:00:53,039
really really good at finding problems

25
00:00:53,039 --> 00:00:54,800
in code and i've spent seven years all

26
00:00:54,800 --> 00:00:56,480
together and i think we did a really

27
00:00:56,480 --> 00:00:57,920
good job

28
00:00:57,920 --> 00:01:00,879
ultimately what made me jump is i

29
00:01:00,879 --> 00:01:02,960
thought at the end of the of the seventh

30
00:01:02,960 --> 00:01:05,519
year i actually realized that it wasn't

31
00:01:05,519 --> 00:01:07,840
all too hard to find problems in code if

32
00:01:07,840 --> 00:01:10,240
you never tell a developer how to write

33
00:01:10,240 --> 00:01:12,560
secure code in the first place so with

34
00:01:12,560 --> 00:01:13,920
that knowledge we actually started

35
00:01:13,920 --> 00:01:17,040
secure code warrior and our vision our

36
00:01:17,040 --> 00:01:18,720
mission what we really would like to

37
00:01:18,720 --> 00:01:20,320
achieve is

38
00:01:20,320 --> 00:01:22,799
if you're an organization and you want

39
00:01:22,799 --> 00:01:25,119
to write secure code from the start you

40
00:01:25,119 --> 00:01:27,119
should think about secure code warrior

41
00:01:27,119 --> 00:01:28,880
because secure code warrior can provide

42
00:01:28,880 --> 00:01:30,560
you with the tools and the training and

43
00:01:30,560 --> 00:01:32,799
the help that you need to write secure

44
00:01:32,799 --> 00:01:35,680
code from the start

45
00:01:37,200 --> 00:01:39,600
so what would i like to talk about today

46
00:01:39,600 --> 00:01:41,680
so first of all i would like to figure

47
00:01:41,680 --> 00:01:42,960
out like hey

48
00:01:42,960 --> 00:01:45,119
why on earth are we still talking about

49
00:01:45,119 --> 00:01:46,640
writing secure code

50
00:01:46,640 --> 00:01:48,640
isn't that problem already solved you

51
00:01:48,640 --> 00:01:50,479
know

52
00:01:50,479 --> 00:01:52,640
and what is the security person actually

53
00:01:52,640 --> 00:01:54,479
doing on a day-to-day basis so if this

54
00:01:54,479 --> 00:01:56,880
is not solved like um how are we

55
00:01:56,880 --> 00:01:58,960
tracking towards solving this particular

56
00:01:58,960 --> 00:02:01,520
problem of writing secure code

57
00:02:01,520 --> 00:02:04,079
then i would like to dive into

58
00:02:04,079 --> 00:02:05,680
something that i found which is like

59
00:02:05,680 --> 00:02:07,840
called calms and culture automation

60
00:02:07,840 --> 00:02:09,840
measurement and sharing which fits

61
00:02:09,840 --> 00:02:11,840
really really nicely with devops but i

62
00:02:11,840 --> 00:02:14,000
was wondering like hey how can we fit

63
00:02:14,000 --> 00:02:16,080
security in there how can we fit

64
00:02:16,080 --> 00:02:17,760
security into the culture into the

65
00:02:17,760 --> 00:02:19,520
automation into the measurement into the

66
00:02:19,520 --> 00:02:22,480
sharing into this new way of working

67
00:02:22,480 --> 00:02:24,160
and ultimately would like to come to a

68
00:02:24,160 --> 00:02:26,480
conclusion um and i don't think there's

69
00:02:26,480 --> 00:02:28,480
time for q a or that we don't do q a

70
00:02:28,480 --> 00:02:30,080
today

71
00:02:30,080 --> 00:02:30,959
um

72
00:02:30,959 --> 00:02:33,120
why are we still talking about

73
00:02:33,120 --> 00:02:35,920
the impossibility of writing secure code

74
00:02:35,920 --> 00:02:38,000
well um actually first of all i tried to

75
00:02:38,000 --> 00:02:40,000
figure out what is one of the most

76
00:02:40,000 --> 00:02:42,800
expensive coding errors that happened in

77
00:02:42,800 --> 00:02:44,800
recent history

78
00:02:44,800 --> 00:02:46,400
and it i came

79
00:02:46,400 --> 00:02:48,560
to to the ariana 5 rocket

80
00:02:48,560 --> 00:02:51,760
with the ariana 5 rocket within a minute

81
00:02:51,760 --> 00:02:54,000
after the launch they had to detonate or

82
00:02:54,000 --> 00:02:55,599
self-detonate

83
00:02:55,599 --> 00:02:56,959
the rocket

84
00:02:56,959 --> 00:03:01,680
with that 7 billion was lost 7 billion

85
00:03:01,680 --> 00:03:03,680
but even spending 7 billion would not

86
00:03:03,680 --> 00:03:05,360
bring the rocket back you know it took

87
00:03:05,360 --> 00:03:08,239
10 years of work to actually produce and

88
00:03:08,239 --> 00:03:10,640
construct this particular rocket

89
00:03:10,640 --> 00:03:13,920
and what happened was actually very

90
00:03:13,920 --> 00:03:16,800
small tiny coding mistake

91
00:03:16,800 --> 00:03:21,280
where for velocity it was um a 60 64-bit

92
00:03:21,280 --> 00:03:23,519
float they actually at some point in

93
00:03:23,519 --> 00:03:26,000
time try to convert that into a 16-bit

94
00:03:26,000 --> 00:03:28,640
integer of course an overflow happened

95
00:03:28,640 --> 00:03:30,400
that if you would have proper error

96
00:03:30,400 --> 00:03:31,440
handling

97
00:03:31,440 --> 00:03:33,440
you can actually get away with that but

98
00:03:33,440 --> 00:03:35,519
for performance reasons they actually

99
00:03:35,519 --> 00:03:38,319
suppress the error handling which led

100
00:03:38,319 --> 00:03:40,400
you know to instead of the rocking going

101
00:03:40,400 --> 00:03:42,000
rocket going up the rockets suddenly

102
00:03:42,000 --> 00:03:43,599
wanted to go backwards and they had to

103
00:03:43,599 --> 00:03:45,519
self-detonate the rocket

104
00:03:45,519 --> 00:03:49,200
a good 30 seconds into the launch

105
00:03:49,200 --> 00:03:51,680
well imagine being the developer that

106
00:03:51,680 --> 00:03:53,760
had written the code on the left hand

107
00:03:53,760 --> 00:03:56,400
side or that had commented out and the

108
00:03:56,400 --> 00:03:58,239
actual the actual

109
00:03:58,239 --> 00:04:02,000
error handling method um

110
00:04:02,000 --> 00:04:04,640
small coding mistake

111
00:04:04,640 --> 00:04:07,200
big financial

112
00:04:07,200 --> 00:04:08,080
loss

113
00:04:08,080 --> 00:04:10,480
but nasa actually learned its lesson

114
00:04:10,480 --> 00:04:12,640
what nasa said is like well let's let's

115
00:04:12,640 --> 00:04:14,799
learn from this mistake you know it it

116
00:04:14,799 --> 00:04:16,399
looks like a pine on paper this looks

117
00:04:16,399 --> 00:04:19,040
like a tiny mistake just um not having

118
00:04:19,040 --> 00:04:20,399
that that

119
00:04:20,399 --> 00:04:22,639
error handling routine over there but it

120
00:04:22,639 --> 00:04:25,040
had big big consequences and what nasa

121
00:04:25,040 --> 00:04:26,639
did was actually very smart they said

122
00:04:26,639 --> 00:04:29,600
hey you know what how about we invest

123
00:04:29,600 --> 00:04:31,199
into

124
00:04:31,199 --> 00:04:32,800
checking and double checking and triple

125
00:04:32,800 --> 00:04:35,199
checking or code that goes into a rocket

126
00:04:35,199 --> 00:04:37,440
so that ultimately we do not have such a

127
00:04:37,440 --> 00:04:39,759
huge loss so let's

128
00:04:39,759 --> 00:04:42,400
spend a little bit more beforehand so

129
00:04:42,400 --> 00:04:44,639
that we don't you know have to have that

130
00:04:44,639 --> 00:04:46,960
gigantic loss so what nasa did they

131
00:04:46,960 --> 00:04:50,000
upped it um their their spending on

132
00:04:50,000 --> 00:04:51,840
lines of code and over here you can see

133
00:04:51,840 --> 00:04:53,840
that nasa spent around a thousand

134
00:04:53,840 --> 00:04:56,720
dollars per line of code in 2001 where

135
00:04:56,720 --> 00:04:59,520
the average of um other code that was

136
00:04:59,520 --> 00:05:03,360
written um during 2001 was roughly 50

137
00:05:03,360 --> 00:05:05,680
and and you know it actually worked out

138
00:05:05,680 --> 00:05:07,360
because something like that did not

139
00:05:07,360 --> 00:05:10,360
happen

140
00:05:11,520 --> 00:05:12,320
sorry

141
00:05:12,320 --> 00:05:13,199
um

142
00:05:13,199 --> 00:05:15,440
today you would say well that's an old

143
00:05:15,440 --> 00:05:17,199
coding mistake you know that was old

144
00:05:17,199 --> 00:05:19,840
code um today there's there's new stuff

145
00:05:19,840 --> 00:05:21,840
you know there's um

146
00:05:21,840 --> 00:05:24,160
more interesting problems like sql

147
00:05:24,160 --> 00:05:26,080
injection the feature where you can

148
00:05:26,080 --> 00:05:27,919
actually read everything from the

149
00:05:27,919 --> 00:05:30,000
database you can update any piece of

150
00:05:30,000 --> 00:05:32,800
data in the database you can remove data

151
00:05:32,800 --> 00:05:34,240
from the database

152
00:05:34,240 --> 00:05:36,479
you can display data from the database

153
00:05:36,479 --> 00:05:38,080
an interesting feature called sql

154
00:05:38,080 --> 00:05:40,639
injection it's not a feature of course

155
00:05:40,639 --> 00:05:43,360
um it is one of the major problems and

156
00:05:43,360 --> 00:05:44,960
where you would think that this is a new

157
00:05:44,960 --> 00:05:47,919
thing well when we were decorating our

158
00:05:47,919 --> 00:05:49,840
office our secure code warrior office i

159
00:05:49,840 --> 00:05:50,720
actually

160
00:05:50,720 --> 00:05:52,479
put this particular frame on the wall

161
00:05:52,479 --> 00:05:54,800
and it's an xkcd about sql injection

162
00:05:54,800 --> 00:05:56,319
actually a signed one that i received

163
00:05:56,319 --> 00:05:58,319
from my manager back in the day at

164
00:05:58,319 --> 00:05:59,440
fortify

165
00:05:59,440 --> 00:06:01,199
and that was signed hey um merry

166
00:06:01,199 --> 00:06:04,160
christmas mathias i'm from jacob 2008

167
00:06:04,160 --> 00:06:07,360
this is 12 years ago um so

168
00:06:07,360 --> 00:06:09,199
we're we're talking about sql injection

169
00:06:09,199 --> 00:06:12,560
for the last 12 years and even in 2008

170
00:06:12,560 --> 00:06:14,160
that was not a new thing

171
00:06:14,160 --> 00:06:18,240
in 2008 that was already 10 years old um

172
00:06:18,240 --> 00:06:19,840
so you may ask yourself well is this

173
00:06:19,840 --> 00:06:21,360
going to be another talk about sql

174
00:06:21,360 --> 00:06:22,720
injection no this is not going to be

175
00:06:22,720 --> 00:06:24,960
another talk about sql injection this is

176
00:06:24,960 --> 00:06:27,440
just to illustrate how

177
00:06:27,440 --> 00:06:29,520
far back we have to go since that

178
00:06:29,520 --> 00:06:31,759
problem was discovered and here we are

179
00:06:31,759 --> 00:06:33,600
2020 we're still talking about that

180
00:06:33,600 --> 00:06:34,639
problem

181
00:06:34,639 --> 00:06:36,960
so is that still a problem

182
00:06:36,960 --> 00:06:39,280
well it seems like it is you know

183
00:06:39,280 --> 00:06:40,800
because there's data and as jim

184
00:06:40,800 --> 00:06:43,039
barksdale former ceo of netscape said

185
00:06:43,039 --> 00:06:44,800
like hey if we have data let's look at

186
00:06:44,800 --> 00:06:46,800
the data if we have opinions let's go

187
00:06:46,800 --> 00:06:49,440
with mine so luckily for everybody

188
00:06:49,440 --> 00:06:51,360
watching this video we have some data so

189
00:06:51,360 --> 00:06:53,919
you don't have to go with my opinions

190
00:06:53,919 --> 00:06:55,759
first of all one out of three newly

191
00:06:55,759 --> 00:06:58,560
scanned applications has sql injection

192
00:06:58,560 --> 00:07:00,479
the joke goes that two out of three do

193
00:07:00,479 --> 00:07:03,599
not have a database

194
00:07:03,599 --> 00:07:06,479
every year we write 111 billion lines of

195
00:07:06,479 --> 00:07:09,440
code we are all software developers and

196
00:07:09,440 --> 00:07:11,520
creators you know where where is the

197
00:07:11,520 --> 00:07:13,520
software deleter in our organization

198
00:07:13,520 --> 00:07:15,199
nobody has the title of being the

199
00:07:15,199 --> 00:07:16,960
software the leader we only want to have

200
00:07:16,960 --> 00:07:18,800
more bigger

201
00:07:18,800 --> 00:07:20,960
fancier features that's what our

202
00:07:20,960 --> 00:07:23,120
customers request so we want to do more

203
00:07:23,120 --> 00:07:24,720
more and more

204
00:07:24,720 --> 00:07:27,440
it is 30 times more expensive to fix a

205
00:07:27,440 --> 00:07:29,599
problem at the end of the cycle then all

206
00:07:29,599 --> 00:07:31,680
the way in the beginning okay the joke

207
00:07:31,680 --> 00:07:32,960
goes that

208
00:07:32,960 --> 00:07:34,960
because of that we only fix one out of

209
00:07:34,960 --> 00:07:36,960
30 problems that land our book tracking

210
00:07:36,960 --> 00:07:38,240
system

211
00:07:38,240 --> 00:07:40,560
and the average global cost of a

212
00:07:40,560 --> 00:07:45,440
security breach is yes almost 4 million

213
00:07:45,440 --> 00:07:48,240
so why are we still talking about sql

214
00:07:48,240 --> 00:07:50,400
injection and let me give you a very

215
00:07:50,400 --> 00:07:52,479
simple example i think pretty much the

216
00:07:52,479 --> 00:07:56,319
only code example um in my talk here of

217
00:07:56,319 --> 00:07:58,000
why we are still talking about sql

218
00:07:58,000 --> 00:08:00,479
injection well we have this query it's

219
00:08:00,479 --> 00:08:03,280
concatenation we have four parameters

220
00:08:03,280 --> 00:08:05,440
and if your pen testers come back and

221
00:08:05,440 --> 00:08:07,759
they scream and say oh my god parameter

222
00:08:07,759 --> 00:08:10,080
one and parameter two are vulnerable to

223
00:08:10,080 --> 00:08:12,560
sql injection well then instantly we go

224
00:08:12,560 --> 00:08:14,400
to the developers and they actually have

225
00:08:14,400 --> 00:08:16,720
to fix parameter one and parameter two

226
00:08:16,720 --> 00:08:18,080
because there's

227
00:08:18,080 --> 00:08:21,520
immediate danger we are exposed

228
00:08:21,520 --> 00:08:23,759
if parameter three you know our static

229
00:08:23,759 --> 00:08:25,520
analysis solution comes back and says

230
00:08:25,520 --> 00:08:28,160
you know what if all the stars align and

231
00:08:28,160 --> 00:08:29,840
if something really funky and tricky

232
00:08:29,840 --> 00:08:31,840
happen well then potentially maybe this

233
00:08:31,840 --> 00:08:34,320
particular path in our application gets

234
00:08:34,320 --> 00:08:36,159
executed and that will be a sql

235
00:08:36,159 --> 00:08:37,279
injection

236
00:08:37,279 --> 00:08:39,120
at that point in time what quite often

237
00:08:39,120 --> 00:08:42,080
happens in organizations is that they

238
00:08:42,080 --> 00:08:44,000
start a fight between security

239
00:08:44,000 --> 00:08:47,120
developers and qa to figure out if this

240
00:08:47,120 --> 00:08:49,600
is really really a problem and if this

241
00:08:49,600 --> 00:08:52,480
is really really really a problem then

242
00:08:52,480 --> 00:08:53,279
well

243
00:08:53,279 --> 00:08:55,440
one day the developers are going to fix

244
00:08:55,440 --> 00:08:56,480
that

245
00:08:56,480 --> 00:08:59,600
quite often you know just fixing it is

246
00:08:59,600 --> 00:09:02,160
is way less work than starting this

247
00:09:02,160 --> 00:09:05,360
particular fight in organizations

248
00:09:05,360 --> 00:09:07,760
last but not least if parameter four if

249
00:09:07,760 --> 00:09:09,360
none of our

250
00:09:09,360 --> 00:09:11,519
white hat hackers if none of our tools

251
00:09:11,519 --> 00:09:12,800
come back and say you know what

252
00:09:12,800 --> 00:09:15,519
parameter four is a problem well we are

253
00:09:15,519 --> 00:09:17,519
not going to fix parameter form because

254
00:09:17,519 --> 00:09:19,200
you know why

255
00:09:19,200 --> 00:09:21,760
it's it's not a problem you know it our

256
00:09:21,760 --> 00:09:23,760
application works nobody is telling that

257
00:09:23,760 --> 00:09:26,720
this is a problem so don't touch it um

258
00:09:26,720 --> 00:09:28,800
everything works fine do not touch the

259
00:09:28,800 --> 00:09:29,920
code

260
00:09:29,920 --> 00:09:31,760
well if um

261
00:09:31,760 --> 00:09:34,480
first of all our tools you know may have

262
00:09:34,480 --> 00:09:36,880
made a mistake and it may be a problem

263
00:09:36,880 --> 00:09:39,040
but even if it's not a problem today if

264
00:09:39,040 --> 00:09:41,200
tomorrow a new developer comes on board

265
00:09:41,200 --> 00:09:43,120
and something called a copy-paste

266
00:09:43,120 --> 00:09:45,680
problem problem if he copies this piece

267
00:09:45,680 --> 00:09:47,680
of code and he pastes it somewhere else

268
00:09:47,680 --> 00:09:49,920
and he's using it in another context it

269
00:09:49,920 --> 00:09:51,600
may be a problem

270
00:09:51,600 --> 00:09:54,000
or if a developer creates a new path in

271
00:09:54,000 --> 00:09:56,959
the application it may become a problem

272
00:09:56,959 --> 00:09:58,959
and that is exactly why we're still

273
00:09:58,959 --> 00:10:01,760
talking about sql injection 22 years

274
00:10:01,760 --> 00:10:04,160
after it was discovered because there is

275
00:10:04,160 --> 00:10:06,480
no holistic approach on how to tackle

276
00:10:06,480 --> 00:10:08,880
sql injection today and especially not

277
00:10:08,880 --> 00:10:12,000
in our old applications

278
00:10:12,160 --> 00:10:13,920
let's put it in a different perspective

279
00:10:13,920 --> 00:10:15,440
from a company

280
00:10:15,440 --> 00:10:18,079
there are security issues if you look at

281
00:10:18,079 --> 00:10:20,000
your bug tracking system i've never seen

282
00:10:20,000 --> 00:10:22,240
an empty bug tracking system there are

283
00:10:22,240 --> 00:10:24,320
always bugs in the bug tracking system

284
00:10:24,320 --> 00:10:25,920
and yes some of them are security

285
00:10:25,920 --> 00:10:28,480
problems and we ask a developer can you

286
00:10:28,480 --> 00:10:31,040
fix the security problems we give them

287
00:10:31,040 --> 00:10:33,839
well nothing we don't give him any help

288
00:10:33,839 --> 00:10:36,320
you know just fix the code please

289
00:10:36,320 --> 00:10:38,800
um and we ask him to fix the the

290
00:10:38,800 --> 00:10:40,880
security issues with very little help

291
00:10:40,880 --> 00:10:43,120
why why is that because well first of

292
00:10:43,120 --> 00:10:45,920
all the scale of your apsec team is very

293
00:10:45,920 --> 00:10:48,399
very small

294
00:10:48,399 --> 00:10:50,959
data says that on average there's one

295
00:10:50,959 --> 00:10:53,200
person per 100 developers yes some

296
00:10:53,200 --> 00:10:55,760
studies say it's almost two but these

297
00:10:55,760 --> 00:10:57,920
studies include only organizations that

298
00:10:57,920 --> 00:10:59,760
already think about

299
00:10:59,760 --> 00:11:01,839
writing secure code there are so many

300
00:11:01,839 --> 00:11:03,519
organizations that that where it's not

301
00:11:03,519 --> 00:11:05,600
even on the roadmap so

302
00:11:05,600 --> 00:11:07,920
there's and imagine 100 people you are

303
00:11:07,920 --> 00:11:09,920
the one person that on a day-to-day

304
00:11:09,920 --> 00:11:13,120
basis has to make sure that the code

305
00:11:13,120 --> 00:11:15,440
being written by 100 productive

306
00:11:15,440 --> 00:11:18,560
developers is secure imagine that do you

307
00:11:18,560 --> 00:11:20,640
know 100 people have you spoken to 100

308
00:11:20,640 --> 00:11:22,800
people in the last month

309
00:11:22,800 --> 00:11:26,560
that is just it's impossible

310
00:11:26,880 --> 00:11:29,600
on top of that developers and security

311
00:11:29,600 --> 00:11:31,279
you know what they kind of speak a

312
00:11:31,279 --> 00:11:33,760
different language right um developers

313
00:11:33,760 --> 00:11:34,560
you know

314
00:11:34,560 --> 00:11:36,320
they talk about technology stacks they

315
00:11:36,320 --> 00:11:38,399
talk about code they talk about features

316
00:11:38,399 --> 00:11:40,399
and how good they are

317
00:11:40,399 --> 00:11:42,720
and and they just want to make sure that

318
00:11:42,720 --> 00:11:44,560
what they need to produce for

319
00:11:44,560 --> 00:11:46,800
um the product manager is actually

320
00:11:46,800 --> 00:11:48,079
delivered

321
00:11:48,079 --> 00:11:51,600
if we talk about um security well

322
00:11:51,600 --> 00:11:53,920
um all they need to do is find you know

323
00:11:53,920 --> 00:11:55,680
one problem in the code and and they

324
00:11:55,680 --> 00:11:57,120
just say hey you know there's one

325
00:11:57,120 --> 00:11:59,600
problem and we gonna call your baby ugly

326
00:11:59,600 --> 00:12:02,320
because you know it it falls apart

327
00:12:02,320 --> 00:12:04,800
um they also tell you what the problem

328
00:12:04,800 --> 00:12:07,040
is and quite often they will not tell

329
00:12:07,040 --> 00:12:08,880
you what the solution is because quite

330
00:12:08,880 --> 00:12:11,360
often they're well not really deep into

331
00:12:11,360 --> 00:12:13,440
that technology and they only know how

332
00:12:13,440 --> 00:12:15,200
to break the system but not really build

333
00:12:15,200 --> 00:12:17,040
the system

334
00:12:17,040 --> 00:12:20,079
there's a ton of overhead so even if you

335
00:12:20,079 --> 00:12:21,839
need to fix a particular

336
00:12:21,839 --> 00:12:24,880
issue it takes a lot of steps before

337
00:12:24,880 --> 00:12:26,639
getting that actually resolved remember

338
00:12:26,639 --> 00:12:28,480
the 30 times more expensive well this

339
00:12:28,480 --> 00:12:31,200
comes into play here where on every

340
00:12:31,200 --> 00:12:32,880
problem that is fixed by the developer

341
00:12:32,880 --> 00:12:34,639
he needs to find the fix implement the

342
00:12:34,639 --> 00:12:37,040
fix and so on and so forth

343
00:12:37,040 --> 00:12:38,639
so that's the first problem so

344
00:12:38,639 --> 00:12:40,560
ultimately yes he fixes a couple of

345
00:12:40,560 --> 00:12:43,920
problems like the os top one maybe top

346
00:12:43,920 --> 00:12:45,040
three

347
00:12:45,040 --> 00:12:46,639
it's going to be hard to fix the os top

348
00:12:46,639 --> 00:12:47,440
10

349
00:12:47,440 --> 00:12:49,760
but that's what we claimed with you

350
00:12:49,760 --> 00:12:52,240
on top of that as i said we create more

351
00:12:52,240 --> 00:12:55,279
features we create more code which

352
00:12:55,279 --> 00:12:57,440
introduces more problems there's

353
00:12:57,440 --> 00:12:58,480
actually

354
00:12:58,480 --> 00:13:00,800
scanning solutions that find 700

355
00:13:00,800 --> 00:13:03,120
different categories of problems

356
00:13:03,120 --> 00:13:06,240
700 so it's nearly impossible for a

357
00:13:06,240 --> 00:13:09,360
developer to not make a mistake

358
00:13:09,360 --> 00:13:11,360
and last but not least there are these

359
00:13:11,360 --> 00:13:13,839
problems that are unfound or

360
00:13:13,839 --> 00:13:15,920
not discovered yet

361
00:13:15,920 --> 00:13:18,800
and i intentionally use the infinity

362
00:13:18,800 --> 00:13:20,720
loop over here because that is the never

363
00:13:20,720 --> 00:13:22,639
ending story that we would like to break

364
00:13:22,639 --> 00:13:24,720
so this infinity loop we would love to

365
00:13:24,720 --> 00:13:26,639
break

366
00:13:26,639 --> 00:13:29,360
so software

367
00:13:29,519 --> 00:13:32,160
software security person today what is

368
00:13:32,160 --> 00:13:34,320
he doing and what is he supposed to be

369
00:13:34,320 --> 00:13:36,320
doing well today

370
00:13:36,320 --> 00:13:38,880
he is supposed to think about

371
00:13:38,880 --> 00:13:40,480
really the hard questions the tough

372
00:13:40,480 --> 00:13:42,720
questions on hey how can i steer all

373
00:13:42,720 --> 00:13:44,720
these developers in an organization in

374
00:13:44,720 --> 00:13:46,639
writing secure code he should be

375
00:13:46,639 --> 00:13:48,880
thinking about that as i've said before

376
00:13:48,880 --> 00:13:50,639
you know there's only one person per 100

377
00:13:50,639 --> 00:13:52,880
developers that is really doing this

378
00:13:52,880 --> 00:13:54,160
that is really thinking about

379
00:13:54,160 --> 00:13:56,320
application security so quite often they

380
00:13:56,320 --> 00:13:59,040
are just dragged into other things like

381
00:13:59,040 --> 00:14:01,600
finding the same problem over and over

382
00:14:01,600 --> 00:14:04,000
and over again and not being able to

383
00:14:04,000 --> 00:14:06,959
break that infinite loop and figure out

384
00:14:06,959 --> 00:14:09,600
like hey how can we for once and for all

385
00:14:09,600 --> 00:14:11,040
solve this particular problem he's

386
00:14:11,040 --> 00:14:13,440
trying to build a team um he's trying to

387
00:14:13,440 --> 00:14:17,360
deliver um the the the security stamp on

388
00:14:17,360 --> 00:14:19,199
time and he's trying to make the

389
00:14:19,199 --> 00:14:21,040
deadlines that is everything that he's

390
00:14:21,040 --> 00:14:23,120
doing um while he should be thinking

391
00:14:23,120 --> 00:14:25,440
about producing secure codes

392
00:14:25,440 --> 00:14:27,360
one thing that is good about application

393
00:14:27,360 --> 00:14:30,160
security is quite often it is not a

394
00:14:30,160 --> 00:14:32,399
budgeting problem there is money to be

395
00:14:32,399 --> 00:14:34,480
spent because security is in a lot of

396
00:14:34,480 --> 00:14:37,839
organizations very very important

397
00:14:37,839 --> 00:14:40,079
and as my good friend notorious big

398
00:14:40,079 --> 00:14:42,560
would say more money is more problems

399
00:14:42,560 --> 00:14:44,720
and that actually perfectly relates to

400
00:14:44,720 --> 00:14:46,720
what we're doing today in code because

401
00:14:46,720 --> 00:14:49,120
we're producing more and more and more

402
00:14:49,120 --> 00:14:51,279
code and we're actually producing more

403
00:14:51,279 --> 00:14:55,120
vulnerabilities and why is that

404
00:14:55,120 --> 00:14:57,519
and what is the biggest i think secret

405
00:14:57,519 --> 00:14:59,440
that we need to

406
00:14:59,440 --> 00:15:02,720
work on today is the fact that

407
00:15:02,720 --> 00:15:04,959
i think the way we can get out of this

408
00:15:04,959 --> 00:15:07,639
cycle is really making sure that there's

409
00:15:07,639 --> 00:15:10,000
cross-pollination between developers and

410
00:15:10,000 --> 00:15:12,399
security developers should more and more

411
00:15:12,399 --> 00:15:14,959
understand how to produce secure code

412
00:15:14,959 --> 00:15:17,440
but at the same time at the same time

413
00:15:17,440 --> 00:15:20,399
the security people really have to start

414
00:15:20,399 --> 00:15:22,560
understanding the code

415
00:15:22,560 --> 00:15:24,720
quite often it is sufficient for a

416
00:15:24,720 --> 00:15:27,279
security person to just break it

417
00:15:27,279 --> 00:15:29,440
give it back to developers and then say

418
00:15:29,440 --> 00:15:32,320
fix it and i i don't think you know if

419
00:15:32,320 --> 00:15:34,800
you're still a person today that does

420
00:15:34,800 --> 00:15:36,800
not understand code and in your

421
00:15:36,800 --> 00:15:38,720
application security or software

422
00:15:38,720 --> 00:15:42,000
security software security well

423
00:15:42,000 --> 00:15:44,320
unfortunately you know it's it's not

424
00:15:44,320 --> 00:15:46,079
gonna it's not gonna be your job in the

425
00:15:46,079 --> 00:15:47,920
next five years because

426
00:15:47,920 --> 00:15:49,839
the security people will have to

427
00:15:49,839 --> 00:15:52,000
understand codes they will have to sit

428
00:15:52,000 --> 00:15:54,399
down with developers they will have to

429
00:15:54,399 --> 00:15:57,279
help the developers in producing

430
00:15:57,279 --> 00:16:02,079
a secure solution a secure end product

431
00:16:02,720 --> 00:16:05,199
all right how can we create secure code

432
00:16:05,199 --> 00:16:07,199
today

433
00:16:07,199 --> 00:16:08,880
first of all there's a lot of

434
00:16:08,880 --> 00:16:12,000
methodologies out there we um or a lot

435
00:16:12,000 --> 00:16:14,800
of people think we have moved on from

436
00:16:14,800 --> 00:16:17,279
waterfall and we're all doing agile and

437
00:16:17,279 --> 00:16:19,839
we're moving into devops

438
00:16:19,839 --> 00:16:22,320
i'm not quite sure if that's true quite

439
00:16:22,320 --> 00:16:25,920
often i see a waterfall which is still

440
00:16:25,920 --> 00:16:27,680
you know it's still actually a waterfall

441
00:16:27,680 --> 00:16:29,759
but we're trying to hide that and and we

442
00:16:29,759 --> 00:16:32,320
call it agile but if we go back to to

443
00:16:32,320 --> 00:16:34,160
the root of what we're doing we're doing

444
00:16:34,160 --> 00:16:36,160
a waterfall mechanism anyway there's

445
00:16:36,160 --> 00:16:38,000
companies that moved on from waterfall

446
00:16:38,000 --> 00:16:40,720
they're doing really good agile

447
00:16:40,720 --> 00:16:43,199
where they work and and split up the

448
00:16:43,199 --> 00:16:45,839
work into shorter cycles where they're

449
00:16:45,839 --> 00:16:48,800
where there's more rapid feedback cycles

450
00:16:48,800 --> 00:16:50,639
from the customers that are using the

451
00:16:50,639 --> 00:16:53,279
software and they actually produce a

452
00:16:53,279 --> 00:16:55,360
solution that is closer to what a

453
00:16:55,360 --> 00:16:56,639
developer

454
00:16:56,639 --> 00:16:59,040
to to what the end customer or a group

455
00:16:59,040 --> 00:17:01,360
of customers wants to see

456
00:17:01,360 --> 00:17:03,519
and yes even some of the organizations

457
00:17:03,519 --> 00:17:05,760
has really moved on from agile and are

458
00:17:05,760 --> 00:17:08,160
more working the devops way

459
00:17:08,160 --> 00:17:10,640
where the developer the way i see it is

460
00:17:10,640 --> 00:17:12,079
the developer

461
00:17:12,079 --> 00:17:13,679
gets more

462
00:17:13,679 --> 00:17:15,280
authority he gets

463
00:17:15,280 --> 00:17:17,359
he gets more responsibility of what he's

464
00:17:17,359 --> 00:17:19,280
doing because what he's producing is

465
00:17:19,280 --> 00:17:21,520
also going to be rapidly put into

466
00:17:21,520 --> 00:17:22,959
production that he is going to be

467
00:17:22,959 --> 00:17:24,959
responsible for that code so he has to

468
00:17:24,959 --> 00:17:27,760
make sure there's it's adequately tested

469
00:17:27,760 --> 00:17:29,679
and it's also going to be adequately

470
00:17:29,679 --> 00:17:31,679
tested moving forward if other people

471
00:17:31,679 --> 00:17:33,520
produce code

472
00:17:33,520 --> 00:17:36,960
so i think security has to

473
00:17:36,960 --> 00:17:39,600
adopt over here we cannot say well um

474
00:17:39,600 --> 00:17:41,679
from a security perspective we live in

475
00:17:41,679 --> 00:17:43,520
waterfall model and this is going to be

476
00:17:43,520 --> 00:17:45,679
the thing that you need to do

477
00:17:45,679 --> 00:17:47,919
no i think um

478
00:17:47,919 --> 00:17:50,799
if this is the way that we produce code

479
00:17:50,799 --> 00:17:54,240
security has to move on too and has to

480
00:17:54,240 --> 00:17:56,480
adapt and figure out how we can work in

481
00:17:56,480 --> 00:17:59,440
these new methodologies um and and

482
00:17:59,440 --> 00:18:01,840
that's quite often misunderstood where

483
00:18:01,840 --> 00:18:03,919
security is no this is the way we have

484
00:18:03,919 --> 00:18:05,919
to do it even though you guys have moved

485
00:18:05,919 --> 00:18:07,919
on

486
00:18:07,919 --> 00:18:08,640
so

487
00:18:08,640 --> 00:18:10,960
how can we move on there's a couple ways

488
00:18:10,960 --> 00:18:13,039
so first of all we can ask the

489
00:18:13,039 --> 00:18:14,400
developers

490
00:18:14,400 --> 00:18:17,039
to work harder and faster

491
00:18:17,039 --> 00:18:18,640
and do more

492
00:18:18,640 --> 00:18:20,000
guess what

493
00:18:20,000 --> 00:18:22,240
developers will not be happy about that

494
00:18:22,240 --> 00:18:24,799
because they already have a job you know

495
00:18:24,799 --> 00:18:27,360
and that is producing features

496
00:18:27,360 --> 00:18:30,480
in their job title it doesn't say secure

497
00:18:30,480 --> 00:18:31,840
and security

498
00:18:31,840 --> 00:18:34,400
and what developers will claim is hey

499
00:18:34,400 --> 00:18:36,000
you know what there are people in this

500
00:18:36,000 --> 00:18:37,919
organization that are responsible for

501
00:18:37,919 --> 00:18:40,160
security because it's in their name it's

502
00:18:40,160 --> 00:18:41,520
in their

503
00:18:41,520 --> 00:18:44,799
job title so

504
00:18:44,799 --> 00:18:46,720
we have to make sure that

505
00:18:46,720 --> 00:18:49,120
from a security perspective we reach the

506
00:18:49,120 --> 00:18:52,400
developers we help the developers

507
00:18:52,400 --> 00:18:54,559
and we really have to make sure that we

508
00:18:54,559 --> 00:18:56,480
can communicate with them and that they

509
00:18:56,480 --> 00:18:58,880
are producing secure code so it's not by

510
00:18:58,880 --> 00:19:01,679
asking developers to work harder

511
00:19:01,679 --> 00:19:04,400
and and faster no we really have to work

512
00:19:04,400 --> 00:19:06,880
smarter

513
00:19:06,960 --> 00:19:09,360
so how can we work smarter well i think

514
00:19:09,360 --> 00:19:11,679
we can work smarter

515
00:19:11,679 --> 00:19:15,360
by integrating with the tools that they

516
00:19:15,360 --> 00:19:17,760
are using on a day-to-day basis

517
00:19:17,760 --> 00:19:18,559
so

518
00:19:18,559 --> 00:19:22,480
a developer is is already working in a

519
00:19:22,480 --> 00:19:24,799
number of tools today like in slack like

520
00:19:24,799 --> 00:19:27,120
in github like in jira he's working in

521
00:19:27,120 --> 00:19:29,600
an ide so he's already working in in

522
00:19:29,600 --> 00:19:32,160
these tools um i think there's an

523
00:19:32,160 --> 00:19:36,080
opportunity for security to be there in

524
00:19:36,080 --> 00:19:38,240
these tools to integrate with these

525
00:19:38,240 --> 00:19:41,520
tools and be there at the tip of their

526
00:19:41,520 --> 00:19:44,720
fingers when they actually need it so

527
00:19:44,720 --> 00:19:47,600
if they are discussing in slack

528
00:19:47,600 --> 00:19:49,280
a particular

529
00:19:49,280 --> 00:19:51,520
security vulnerability or a security

530
00:19:51,520 --> 00:19:54,240
problem well it would be good if out of

531
00:19:54,240 --> 00:19:56,320
the blue they get some help what that

532
00:19:56,320 --> 00:19:58,080
particular problem is and how they can

533
00:19:58,080 --> 00:19:59,440
solve that problem

534
00:19:59,440 --> 00:20:02,720
or if they are typing in their ide that

535
00:20:02,720 --> 00:20:05,440
something pops up and and guides him and

536
00:20:05,440 --> 00:20:08,640
helps them in producing secure code or

537
00:20:08,640 --> 00:20:11,120
if they have a problem in the bug

538
00:20:11,120 --> 00:20:14,159
tracking system being filed a security

539
00:20:14,159 --> 00:20:16,320
vulnerability in the bug tracking system

540
00:20:16,320 --> 00:20:18,000
that when they go there they

541
00:20:18,000 --> 00:20:20,400
automatically get a relevant training

542
00:20:20,400 --> 00:20:22,960
module in the language and framework

543
00:20:22,960 --> 00:20:25,200
that they are using and they can

544
00:20:25,200 --> 00:20:26,880
instantly actually eradicate that

545
00:20:26,880 --> 00:20:29,919
problem so i really think there's

546
00:20:29,919 --> 00:20:32,720
an opportunity for application security

547
00:20:32,720 --> 00:20:36,000
today to move on from the waterfall way

548
00:20:36,000 --> 00:20:40,640
of working to be more nimble and be more

549
00:20:40,640 --> 00:20:43,840
in the tools and give rapid feedback to

550
00:20:43,840 --> 00:20:45,600
the developers when they actually need

551
00:20:45,600 --> 00:20:48,240
it so we should not distract them or

552
00:20:48,240 --> 00:20:51,039
disturb them with their work no we

553
00:20:51,039 --> 00:20:53,280
should be there we should be smart and

554
00:20:53,280 --> 00:20:57,360
we should pop up when they need us

555
00:20:59,120 --> 00:21:01,440
some people will say yes we can actually

556
00:21:01,440 --> 00:21:02,799
extend

557
00:21:02,799 --> 00:21:05,520
um the the whole the the the infinity

558
00:21:05,520 --> 00:21:07,440
loop of of devops and say you know

559
00:21:07,440 --> 00:21:09,360
there's also a place for training and

560
00:21:09,360 --> 00:21:11,919
assessing where um you know if we do

561
00:21:11,919 --> 00:21:14,320
something if we um

562
00:21:14,320 --> 00:21:17,120
go through the different stages um

563
00:21:17,120 --> 00:21:19,280
with new technologies you know there's

564
00:21:19,280 --> 00:21:21,280
there's constantly

565
00:21:21,280 --> 00:21:24,000
new technologies being pushed into

566
00:21:24,000 --> 00:21:26,240
organizations well it is really hard for

567
00:21:26,240 --> 00:21:28,480
developers to keep up with that

568
00:21:28,480 --> 00:21:30,799
we're convinced that in the new way of

569
00:21:30,799 --> 00:21:33,360
working in these um

570
00:21:33,360 --> 00:21:34,880
rapid

571
00:21:34,880 --> 00:21:36,960
development cycles there's also a place

572
00:21:36,960 --> 00:21:39,280
for training and actually learning about

573
00:21:39,280 --> 00:21:41,440
new technologies and and doing that in a

574
00:21:41,440 --> 00:21:43,280
secure way

575
00:21:43,280 --> 00:21:45,039
so that we're actually using the latest

576
00:21:45,039 --> 00:21:46,880
and greatest which is the best fit for

577
00:21:46,880 --> 00:21:50,240
what we're trying to achieve today

578
00:21:50,960 --> 00:21:53,039
so then i was actually trying to figure

579
00:21:53,039 --> 00:21:54,400
out um

580
00:21:54,400 --> 00:21:57,600
how can we be successful with devops and

581
00:21:57,600 --> 00:21:59,679
i actually googled that i said hey and

582
00:21:59,679 --> 00:22:02,400
what are what are the devops pillars for

583
00:22:02,400 --> 00:22:03,600
success

584
00:22:03,600 --> 00:22:06,799
um and when i typed that it came back

585
00:22:06,799 --> 00:22:08,960
with you know what google thinks it's

586
00:22:08,960 --> 00:22:11,440
between three and nine pillars that is

587
00:22:11,440 --> 00:22:13,360
roughly what i figured out you know

588
00:22:13,360 --> 00:22:15,679
there nobody really knows but it seems

589
00:22:15,679 --> 00:22:17,280
to between three and nine so i actually

590
00:22:17,280 --> 00:22:19,600
did a little bit more digging into these

591
00:22:19,600 --> 00:22:20,559
pillars

592
00:22:20,559 --> 00:22:22,640
um and and

593
00:22:22,640 --> 00:22:23,760
one

594
00:22:23,760 --> 00:22:25,600
of

595
00:22:25,600 --> 00:22:27,280
these pillars i found very very

596
00:22:27,280 --> 00:22:29,600
interesting it started with calms

597
00:22:29,600 --> 00:22:31,200
culture automation measurement and

598
00:22:31,200 --> 00:22:33,520
sharing a little bit after that

599
00:22:33,520 --> 00:22:35,760
it was transformed into columns with

600
00:22:35,760 --> 00:22:37,200
lean in there

601
00:22:37,200 --> 00:22:39,600
i'll leave lean out of this conversation

602
00:22:39,600 --> 00:22:40,880
because i think everything needs to be

603
00:22:40,880 --> 00:22:43,679
lean but i found it very interesting and

604
00:22:43,679 --> 00:22:45,600
it really matches with what i see in

605
00:22:45,600 --> 00:22:48,799
organizations if where where

606
00:22:48,799 --> 00:22:51,600
this whole movement from waterfall to

607
00:22:51,600 --> 00:22:53,760
devops where it really worked out i

608
00:22:53,760 --> 00:22:55,840
think they did a really good job

609
00:22:55,840 --> 00:22:58,080
towards culture towards automating a lot

610
00:22:58,080 --> 00:23:00,320
towards measure measuring the right

611
00:23:00,320 --> 00:23:02,960
thing and towards smart sharing

612
00:23:02,960 --> 00:23:04,000
so

613
00:23:04,000 --> 00:23:05,440
when i looked at the pillars when i

614
00:23:05,440 --> 00:23:06,720
looked at a lot of pillars i thought

615
00:23:06,720 --> 00:23:08,559
well that's that's quite interesting and

616
00:23:08,559 --> 00:23:10,559
then my second question was like

617
00:23:10,559 --> 00:23:13,919
gee how would security fit in there like

618
00:23:13,919 --> 00:23:14,960
how

619
00:23:14,960 --> 00:23:17,520
how can security fit into the culture

620
00:23:17,520 --> 00:23:19,360
and to the automation to measurement

621
00:23:19,360 --> 00:23:21,679
into the sharing

622
00:23:21,679 --> 00:23:23,360
and interestingly enough another thing

623
00:23:23,360 --> 00:23:26,640
that i figured out was um with devops

624
00:23:26,640 --> 00:23:28,799
yes you first need need to make sure

625
00:23:28,799 --> 00:23:32,080
that you level out death and ops before

626
00:23:32,080 --> 00:23:35,120
you can put security into the mix so so

627
00:23:35,120 --> 00:23:36,400
don't get me wrong

628
00:23:36,400 --> 00:23:38,799
first make sure that your devops thing

629
00:23:38,799 --> 00:23:40,720
is really working and because if you're

630
00:23:40,720 --> 00:23:42,559
going to throw security on top of that

631
00:23:42,559 --> 00:23:43,600
without

632
00:23:43,600 --> 00:23:46,159
having to without having leveled out the

633
00:23:46,159 --> 00:23:48,240
development that you and the operations

634
00:23:48,240 --> 00:23:50,960
side if they are not in sync it don't

635
00:23:50,960 --> 00:23:52,559
start with security you know don't throw

636
00:23:52,559 --> 00:23:54,799
security into the mix make sure that you

637
00:23:54,799 --> 00:23:56,559
first figure that out before you throw

638
00:23:56,559 --> 00:23:58,480
security into the mix but if you throw

639
00:23:58,480 --> 00:24:00,960
security into the mix i think

640
00:24:00,960 --> 00:24:02,880
from a secure from a from a cultural

641
00:24:02,880 --> 00:24:06,320
perspective it is everybody's job

642
00:24:06,320 --> 00:24:08,799
i think it does not make sense to always

643
00:24:08,799 --> 00:24:11,919
blame the developers for faulty code all

644
00:24:11,919 --> 00:24:14,159
too often we hear you know it's the

645
00:24:14,159 --> 00:24:16,400
developer's fault it's like building a

646
00:24:16,400 --> 00:24:18,240
house you know if you build a house and

647
00:24:18,240 --> 00:24:20,080
at the end of the day you know you want

648
00:24:20,080 --> 00:24:21,679
to have your house and you put a lot of

649
00:24:21,679 --> 00:24:23,440
pressure on the people like build it

650
00:24:23,440 --> 00:24:25,440
build it faster faster faster and at the

651
00:24:25,440 --> 00:24:27,520
end of the day if the entire electricity

652
00:24:27,520 --> 00:24:30,480
system is is the wiring is just faulty

653
00:24:30,480 --> 00:24:32,480
well you know you can almost start from

654
00:24:32,480 --> 00:24:34,720
scratch or if you do not put a burglar

655
00:24:34,720 --> 00:24:36,720
system in there well

656
00:24:36,720 --> 00:24:38,720
you have to rip out the walls again to

657
00:24:38,720 --> 00:24:40,880
try and and make it

658
00:24:40,880 --> 00:24:42,640
work so

659
00:24:42,640 --> 00:24:44,960
you have to give people the time to

660
00:24:44,960 --> 00:24:47,120
think about hey how are we really going

661
00:24:47,120 --> 00:24:49,919
to do this like how are we going to make

662
00:24:49,919 --> 00:24:52,159
a secure system or in this case you know

663
00:24:52,159 --> 00:24:54,559
how are we going to make sure that every

664
00:24:54,559 --> 00:24:56,240
person comes in at the right time and

665
00:24:56,240 --> 00:24:58,960
does the right thing so it it takes some

666
00:24:58,960 --> 00:25:01,520
strategy and strategizing

667
00:25:01,520 --> 00:25:04,000
in that particular project to make it

668
00:25:04,000 --> 00:25:06,640
work so from a software development

669
00:25:06,640 --> 00:25:10,720
perspective it is the exact same thing

670
00:25:10,720 --> 00:25:13,279
developers need to be given the time to

671
00:25:13,279 --> 00:25:15,840
think about and to educate and learn and

672
00:25:15,840 --> 00:25:17,760
train themselves and in how to write

673
00:25:17,760 --> 00:25:19,919
secure code it does not make sense to

674
00:25:19,919 --> 00:25:21,200
say hey you know what by the end of the

675
00:25:21,200 --> 00:25:23,120
month that that that piece of software

676
00:25:23,120 --> 00:25:26,000
needs to be done and not giving any time

677
00:25:26,000 --> 00:25:29,440
to to to bring them up to speed on how

678
00:25:29,440 --> 00:25:31,840
to produce that in a secure way

679
00:25:31,840 --> 00:25:33,120
so

680
00:25:33,120 --> 00:25:35,279
don't blame the developers i would say

681
00:25:35,279 --> 00:25:37,760
first of all have a look if if there was

682
00:25:37,760 --> 00:25:39,360
sufficient time being given to

683
00:25:39,360 --> 00:25:41,360
developers to educate and to upskill

684
00:25:41,360 --> 00:25:43,840
themselves

685
00:25:44,480 --> 00:25:46,480
that doesn't mean you know that that

686
00:25:46,480 --> 00:25:48,880
developers are our free game you know

687
00:25:48,880 --> 00:25:51,520
the the developers

688
00:25:51,520 --> 00:25:54,080
they also have to chip in and and they

689
00:25:54,080 --> 00:25:56,720
also have to understand that you know

690
00:25:56,720 --> 00:25:59,200
the only code that can be written in an

691
00:25:59,200 --> 00:26:02,880
organization is secure code okay so if

692
00:26:02,880 --> 00:26:05,120
they are given the time well then it's

693
00:26:05,120 --> 00:26:07,200
it's just trying to figure out how can

694
00:26:07,200 --> 00:26:09,679
we make the developers interested in

695
00:26:09,679 --> 00:26:11,360
security um

696
00:26:11,360 --> 00:26:12,960
and i think we have to make sure that

697
00:26:12,960 --> 00:26:14,799
that we match

698
00:26:14,799 --> 00:26:17,120
his thinking you know developers are

699
00:26:17,120 --> 00:26:20,320
very creative they like games

700
00:26:20,320 --> 00:26:23,360
or needs to be gamified

701
00:26:23,360 --> 00:26:25,919
they like to do stuff hands-on it has to

702
00:26:25,919 --> 00:26:27,919
be always accessible so there's a lot of

703
00:26:27,919 --> 00:26:30,640
their parameters there of of what a

704
00:26:30,640 --> 00:26:34,320
developer expects from um uh

705
00:26:34,320 --> 00:26:38,240
you know on how to produce secure code

706
00:26:38,240 --> 00:26:40,159
at the same time the developer has to

707
00:26:40,159 --> 00:26:42,720
see the benefits you know he should

708
00:26:42,720 --> 00:26:44,559
one day wake up and say you know what i

709
00:26:44,559 --> 00:26:46,080
want to learn about security i have no

710
00:26:46,080 --> 00:26:47,440
idea why but i want to learn about

711
00:26:47,440 --> 00:26:49,360
security no like he has to see the

712
00:26:49,360 --> 00:26:51,760
benefit of producing secure code you

713
00:26:51,760 --> 00:26:53,039
know

714
00:26:53,039 --> 00:26:55,679
and and ways to do that is for example

715
00:26:55,679 --> 00:26:57,760
if you make sure in your organization

716
00:26:57,760 --> 00:27:00,400
that um developers with security and

717
00:27:00,400 --> 00:27:01,840
knowledge

718
00:27:01,840 --> 00:27:04,080
can do very interesting

719
00:27:04,080 --> 00:27:06,480
coding projects like if you need to work

720
00:27:06,480 --> 00:27:08,880
on something that has to be super secure

721
00:27:08,880 --> 00:27:10,320
well maybe you have to pick the

722
00:27:10,320 --> 00:27:12,960
developers um that are thinking in a

723
00:27:12,960 --> 00:27:14,480
particular way that are thinking about

724
00:27:14,480 --> 00:27:16,400
producing secure codes

725
00:27:16,400 --> 00:27:18,000
they have to understand that they are

726
00:27:18,000 --> 00:27:19,760
highly sought after developers and

727
00:27:19,760 --> 00:27:20,960
they're actually a good reason you know

728
00:27:20,960 --> 00:27:23,279
when you're a developer and you start

729
00:27:23,279 --> 00:27:25,919
developing code you make mistakes like

730
00:27:25,919 --> 00:27:28,240
what's the semi semicolon and oh i

731
00:27:28,240 --> 00:27:30,320
forgot the semicolon so you make um

732
00:27:30,320 --> 00:27:35,360
syntactical uh mistakes once you're

733
00:27:35,360 --> 00:27:36,880
once you go once you're above that

734
00:27:36,880 --> 00:27:39,200
hurdle you know then you think about

735
00:27:39,200 --> 00:27:40,960
algorithms like hey how can i make an

736
00:27:40,960 --> 00:27:42,559
algorithm once you make an algorithm you

737
00:27:42,559 --> 00:27:44,080
think about well how can i design a

738
00:27:44,080 --> 00:27:46,240
system that works together and that's

739
00:27:46,240 --> 00:27:48,480
only once you're really a senior

740
00:27:48,480 --> 00:27:51,600
developer that you realize like oh my

741
00:27:51,600 --> 00:27:54,240
god people can misuse my code oh that's

742
00:27:54,240 --> 00:27:56,240
quite interesting oh there's stuff like

743
00:27:56,240 --> 00:27:58,320
software security what is software

744
00:27:58,320 --> 00:28:01,120
security oh interesting so

745
00:28:01,120 --> 00:28:04,000
um i definitely see a correlation

746
00:28:04,000 --> 00:28:06,799
between a security savvy developer and a

747
00:28:06,799 --> 00:28:08,559
good developer and that's absolutely

748
00:28:08,559 --> 00:28:12,000
normal so if if if you can bring that

749
00:28:12,000 --> 00:28:14,159
across to your developers and they

750
00:28:14,159 --> 00:28:17,279
understand that well they should be more

751
00:28:17,279 --> 00:28:19,760
interested in in learning about

752
00:28:19,760 --> 00:28:22,399
producing secure code because you know

753
00:28:22,399 --> 00:28:23,919
if that's associated with a good

754
00:28:23,919 --> 00:28:25,520
developer well they should have an

755
00:28:25,520 --> 00:28:28,158
interest in that

756
00:28:28,799 --> 00:28:30,799
last but not least well from a cultural

757
00:28:30,799 --> 00:28:33,120
perspective um very interesting i think

758
00:28:33,120 --> 00:28:35,360
with corona too i think we are really

759
00:28:35,360 --> 00:28:40,159
moving on um from boring schools from uh

760
00:28:40,159 --> 00:28:43,360
in person classes i think there's to be

761
00:28:43,360 --> 00:28:46,480
more and more interesting new tech that

762
00:28:46,480 --> 00:28:49,120
that will surface um on how we are going

763
00:28:49,120 --> 00:28:51,840
to educate people um and i think that is

764
00:28:51,840 --> 00:28:53,600
a really really good movement if i look

765
00:28:53,600 --> 00:28:55,440
at my own kids this is even a slide from

766
00:28:55,440 --> 00:28:58,399
two years ago if i look at my own kids

767
00:28:58,399 --> 00:29:00,640
they hate french in school they love

768
00:29:00,640 --> 00:29:02,480
french on duolingo

769
00:29:02,480 --> 00:29:05,200
why you know it's obvious

770
00:29:05,200 --> 00:29:07,600
why but you know it's interesting that

771
00:29:07,600 --> 00:29:09,600
the school system has not moved on and

772
00:29:09,600 --> 00:29:13,279
adopted new ways of learning

773
00:29:13,279 --> 00:29:14,799
automation

774
00:29:14,799 --> 00:29:17,679
automation is big in in devops

775
00:29:17,679 --> 00:29:18,559
they

776
00:29:18,559 --> 00:29:20,640
we try to take the human as much as

777
00:29:20,640 --> 00:29:21,840
possible

778
00:29:21,840 --> 00:29:23,120
out of the loop

779
00:29:23,120 --> 00:29:25,360
we try to avoid human error and we do

780
00:29:25,360 --> 00:29:28,640
that by putting automation in there

781
00:29:28,640 --> 00:29:30,000
first of all

782
00:29:30,000 --> 00:29:32,159
in automation for security i would say

783
00:29:32,159 --> 00:29:35,120
take tools that make sense for you take

784
00:29:35,120 --> 00:29:37,600
tools and that fit the technology and

785
00:29:37,600 --> 00:29:39,279
the tech stack and the company culture

786
00:29:39,279 --> 00:29:41,679
all too often i see one group deciding

787
00:29:41,679 --> 00:29:44,240
on a technology and using that

788
00:29:44,240 --> 00:29:46,240
where it does not make sense at all for

789
00:29:46,240 --> 00:29:47,200
another

790
00:29:47,200 --> 00:29:48,960
group in the organization well they say

791
00:29:48,960 --> 00:29:50,559
you know what it works for java and this

792
00:29:50,559 --> 00:29:52,720
other group is using javascript

793
00:29:52,720 --> 00:29:54,960
kind of the same let's take that tool no

794
00:29:54,960 --> 00:29:56,480
that's not that's not how it works right

795
00:29:56,480 --> 00:29:59,520
so you really need to take tools and and

796
00:29:59,520 --> 00:30:00,640
and

797
00:30:00,640 --> 00:30:02,559
take something that works across the

798
00:30:02,559 --> 00:30:03,840
organization

799
00:30:03,840 --> 00:30:05,760
if you're going to put it in in the

800
00:30:05,760 --> 00:30:08,159
automated tests

801
00:30:08,159 --> 00:30:12,000
coffee test uh one that i really like is

802
00:30:12,000 --> 00:30:15,200
if a developer goes for a coffee and he

803
00:30:15,200 --> 00:30:17,520
presses you know what build this thing

804
00:30:17,520 --> 00:30:19,760
by the time he comes back he should have

805
00:30:19,760 --> 00:30:23,279
very valuable input so it should either

806
00:30:23,279 --> 00:30:25,200
break from a security perspective or

807
00:30:25,200 --> 00:30:27,440
pass you know so you should try to cram

808
00:30:27,440 --> 00:30:29,600
as many tests as possible

809
00:30:29,600 --> 00:30:31,919
under in in like five minutes or if it's

810
00:30:31,919 --> 00:30:34,880
10 minutes whatever your coffee break is

811
00:30:34,880 --> 00:30:36,320
and if it doesn't fit in that five

812
00:30:36,320 --> 00:30:40,559
minute you either have to parallelize or

813
00:30:40,559 --> 00:30:43,919
put things into a nightly build

814
00:30:43,919 --> 00:30:46,000
maybe counterintuitive one for

815
00:30:46,000 --> 00:30:48,320
automation and security is um

816
00:30:48,320 --> 00:30:50,240
don't block the builds do not block the

817
00:30:50,240 --> 00:30:52,080
release um

818
00:30:52,080 --> 00:30:53,840
very counter-intuitive because we're

819
00:30:53,840 --> 00:30:55,760
always used from a security perspective

820
00:30:55,760 --> 00:30:57,840
to stop

821
00:30:57,840 --> 00:30:59,039
and break

822
00:30:59,039 --> 00:31:02,080
um and quite often afterwards we say ah

823
00:31:02,080 --> 00:31:04,320
we're wrong sorry uh we should not have

824
00:31:04,320 --> 00:31:06,720
broken the build here um so only if

825
00:31:06,720 --> 00:31:08,720
you're 100 confident you should still

826
00:31:08,720 --> 00:31:10,880
block it and you still should still

827
00:31:10,880 --> 00:31:13,279
break the build but only if you're 100

828
00:31:13,279 --> 00:31:14,799
confident and there's not a whole lot of

829
00:31:14,799 --> 00:31:19,679
cases where you're 100 confident

830
00:31:19,679 --> 00:31:22,159
developers and how they communicate with

831
00:31:22,159 --> 00:31:24,720
each other if i send an email to

832
00:31:24,720 --> 00:31:26,880
some of my top developers insecure code

833
00:31:26,880 --> 00:31:30,000
warrior i guarantee you that i will not

834
00:31:30,000 --> 00:31:32,559
have an answer in the next week

835
00:31:32,559 --> 00:31:34,960
if i ping them on slack

836
00:31:34,960 --> 00:31:37,279
within minutes i have an answer so

837
00:31:37,279 --> 00:31:39,039
developers no longer read email i'm

838
00:31:39,039 --> 00:31:41,039
sorry you we have to from a security

839
00:31:41,039 --> 00:31:43,360
perspective integrate with how they

840
00:31:43,360 --> 00:31:45,279
communicate and not the other way around

841
00:31:45,279 --> 00:31:49,120
so we have to find out ways um to work

842
00:31:49,120 --> 00:31:52,399
with them and not the other way around

843
00:31:52,399 --> 00:31:54,559
last but not least if we depend a lot on

844
00:31:54,559 --> 00:31:57,360
automation well um especially from a

845
00:31:57,360 --> 00:31:59,360
security perspective make sure there's

846
00:31:59,360 --> 00:32:01,200
like no dependencies that everything

847
00:32:01,200 --> 00:32:03,360
runs in a in a standalone container

848
00:32:03,360 --> 00:32:06,159
there's a very simple reason why because

849
00:32:06,159 --> 00:32:08,480
if our stuff goes down you know if if

850
00:32:08,480 --> 00:32:10,399
we're stopping and breaking they all

851
00:32:10,399 --> 00:32:12,640
gonna point to security and they are

852
00:32:12,640 --> 00:32:15,039
they do not yet they

853
00:32:15,039 --> 00:32:18,080
they know they do not like security that

854
00:32:18,080 --> 00:32:19,360
much so

855
00:32:19,360 --> 00:32:21,600
we have to try and get the developers on

856
00:32:21,600 --> 00:32:23,679
our side so try to do everything you can

857
00:32:23,679 --> 00:32:28,159
to not stop them and not break them

858
00:32:28,159 --> 00:32:31,200
skip lean i'll go to measurement um

859
00:32:31,200 --> 00:32:33,200
measuring is a very interesting one so

860
00:32:33,200 --> 00:32:35,279
in devops we're trying to measure

861
00:32:35,279 --> 00:32:38,480
um as much as we can but we have to

862
00:32:38,480 --> 00:32:40,640
think really hard about what we're

863
00:32:40,640 --> 00:32:42,559
measuring especially from a security

864
00:32:42,559 --> 00:32:44,159
perspective because it's

865
00:32:44,159 --> 00:32:47,279
all too easy to measure the wrong thing

866
00:32:47,279 --> 00:32:48,080
like

867
00:32:48,080 --> 00:32:49,919
measuring the number of problems that

868
00:32:49,919 --> 00:32:52,080
you can find and that is

869
00:32:52,080 --> 00:32:54,159
that is the wrong thing because it gives

870
00:32:54,159 --> 00:32:56,880
an incentive to just find problems it

871
00:32:56,880 --> 00:32:58,399
does not give an incentive to fix

872
00:32:58,399 --> 00:33:00,320
problems it gives an incentive to find

873
00:33:00,320 --> 00:33:02,480
problems that and that does not help to

874
00:33:02,480 --> 00:33:04,799
the end goal the end goal of an

875
00:33:04,799 --> 00:33:08,000
organization is to produce secure code

876
00:33:08,000 --> 00:33:09,279
to ship

877
00:33:09,279 --> 00:33:11,600
features with confidence that is the end

878
00:33:11,600 --> 00:33:13,760
goal of an organization

879
00:33:13,760 --> 00:33:15,200
finding

880
00:33:15,200 --> 00:33:17,919
problems a lot of problems cannot be the

881
00:33:17,919 --> 00:33:19,440
end goal

882
00:33:19,440 --> 00:33:20,159
so

883
00:33:20,159 --> 00:33:22,159
from a security perspective we have to

884
00:33:22,159 --> 00:33:23,919
think about

885
00:33:23,919 --> 00:33:25,120
you know

886
00:33:25,120 --> 00:33:27,600
how can we help this entire organization

887
00:33:27,600 --> 00:33:30,720
succeed okay and not you know

888
00:33:30,720 --> 00:33:32,320
not not trying to measure things that

889
00:33:32,320 --> 00:33:34,320
are not really helping at all and in

890
00:33:34,320 --> 00:33:35,600
devops there's a lot of things that you

891
00:33:35,600 --> 00:33:37,519
can measure like deployment frequency

892
00:33:37,519 --> 00:33:40,159
change volume deployment time and so on

893
00:33:40,159 --> 00:33:41,440
and so forth

894
00:33:41,440 --> 00:33:43,760
there's a lot of good things where

895
00:33:43,760 --> 00:33:45,519
security can help

896
00:33:45,519 --> 00:33:48,159
so it can help and think about hey how

897
00:33:48,159 --> 00:33:50,399
can security help with the deployment

898
00:33:50,399 --> 00:33:52,000
frequency how can we make sure that

899
00:33:52,000 --> 00:33:53,600
we're not blocking

900
00:33:53,600 --> 00:33:55,360
that like if they're at a particular

901
00:33:55,360 --> 00:33:59,200
frequency that we help them and

902
00:33:59,200 --> 00:34:01,120
make sure that they even go faster if

903
00:34:01,120 --> 00:34:02,960
that's possible

904
00:34:02,960 --> 00:34:04,559
there's things that

905
00:34:04,559 --> 00:34:06,880
we do not want to measure and definitely

906
00:34:06,880 --> 00:34:08,719
do not want to put an emphasis on like

907
00:34:08,719 --> 00:34:10,800
for example mean time to failure it

908
00:34:10,800 --> 00:34:13,760
means hey what is the time between two

909
00:34:13,760 --> 00:34:15,280
failures

910
00:34:15,280 --> 00:34:17,199
and if we're trying to optimize that

911
00:34:17,199 --> 00:34:18,879
we're trying to figure out like hey how

912
00:34:18,879 --> 00:34:20,800
can we lengthen

913
00:34:20,800 --> 00:34:23,679
the the time between two failures and

914
00:34:23,679 --> 00:34:25,760
what happens at that time if you're if

915
00:34:25,760 --> 00:34:28,159
you're trying to do that is you're

916
00:34:28,159 --> 00:34:30,800
hiding problems you're hiding failures

917
00:34:30,800 --> 00:34:33,040
so this is the wrong thing to do what

918
00:34:33,040 --> 00:34:35,040
you really should do is

919
00:34:35,040 --> 00:34:38,159
fail fast and measure how fast you can

920
00:34:38,159 --> 00:34:39,199
recover

921
00:34:39,199 --> 00:34:41,599
that is contributing to the end goal

922
00:34:41,599 --> 00:34:44,079
which is shipping code with confidence

923
00:34:44,079 --> 00:34:46,960
okay so don't try to lengthen the time

924
00:34:46,960 --> 00:34:48,879
in between two failures

925
00:34:48,879 --> 00:34:51,760
try to fail fast and make sure you're up

926
00:34:51,760 --> 00:34:54,159
and running fast after failure that is a

927
00:34:54,159 --> 00:34:57,040
good thing to measure

928
00:34:57,680 --> 00:35:01,119
last but not least sharing

929
00:35:01,119 --> 00:35:03,599
sharing information i already alluded to

930
00:35:03,599 --> 00:35:07,359
that one um the days of an absent person

931
00:35:07,359 --> 00:35:09,440
just giving stacks of paper to

932
00:35:09,440 --> 00:35:11,920
developers and asking them to fix the

933
00:35:11,920 --> 00:35:15,440
problems these days are over

934
00:35:15,440 --> 00:35:18,320
sharing documents is is not gonna make

935
00:35:18,320 --> 00:35:21,040
the cut in the next five years um

936
00:35:21,040 --> 00:35:23,119
sharing needs to be done smarter and

937
00:35:23,119 --> 00:35:25,359
especially from a security perspective

938
00:35:25,359 --> 00:35:27,680
um let's have a look at what we're doing

939
00:35:27,680 --> 00:35:30,000
today um or maybe what we're not doing

940
00:35:30,000 --> 00:35:32,880
today but should be doing if we find a

941
00:35:32,880 --> 00:35:34,640
problem we're gonna log that problem in

942
00:35:34,640 --> 00:35:37,119
our bug tracking system a developer will

943
00:35:37,119 --> 00:35:39,280
take that problem he's gonna find a fix

944
00:35:39,280 --> 00:35:40,880
for that problem

945
00:35:40,880 --> 00:35:42,320
and this is the thing that we're not

946
00:35:42,320 --> 00:35:44,160
doing today is sharing because what

947
00:35:44,160 --> 00:35:46,320
we're doing today is we're fixing that

948
00:35:46,320 --> 00:35:47,680
problem

949
00:35:47,680 --> 00:35:49,839
and we're checking that in and we're

950
00:35:49,839 --> 00:35:52,160
closing the bug and you know where that

951
00:35:52,160 --> 00:35:54,240
information is going it's going into a

952
00:35:54,240 --> 00:35:56,160
black hole nobody knows how that

953
00:35:56,160 --> 00:35:58,400
particular problem was fixed

954
00:35:58,400 --> 00:36:00,560
we are not warning other people like hey

955
00:36:00,560 --> 00:36:02,240
if you encounter something like that

956
00:36:02,240 --> 00:36:04,960
this is how you can fix it or we do not

957
00:36:04,960 --> 00:36:07,280
even proactively tell people hey you

958
00:36:07,280 --> 00:36:10,160
know what we found this once let's never

959
00:36:10,160 --> 00:36:11,920
do that again and this is how you

960
00:36:11,920 --> 00:36:14,400
actually produce secure code without

961
00:36:14,400 --> 00:36:16,240
introducing that problem

962
00:36:16,240 --> 00:36:18,800
so sharing is very very important and

963
00:36:18,800 --> 00:36:21,280
i'm not talking about hey let's write a

964
00:36:21,280 --> 00:36:23,599
document and ship that document to all

965
00:36:23,599 --> 00:36:25,680
your colleagues around you no that's not

966
00:36:25,680 --> 00:36:28,160
what i'm talking about i'm talking about

967
00:36:28,160 --> 00:36:30,800
technology that captures information

968
00:36:30,800 --> 00:36:34,160
technology that captures the bad code

969
00:36:34,160 --> 00:36:36,480
and the good code and that actually is

970
00:36:36,480 --> 00:36:38,800
rolled out to all your fellow developers

971
00:36:38,800 --> 00:36:40,720
where they say hey you know what this

972
00:36:40,720 --> 00:36:44,720
particular problem has happened before

973
00:36:44,720 --> 00:36:47,200
this is how you should do it this is the

974
00:36:47,200 --> 00:36:49,280
wrong thing and this is how you should

975
00:36:49,280 --> 00:36:51,280
do it so you should share through

976
00:36:51,280 --> 00:36:54,400
technology like integrate with the ci cd

977
00:36:54,400 --> 00:36:57,119
into the ide wherever but share through

978
00:36:57,119 --> 00:36:59,119
technology do not share by writing

979
00:36:59,119 --> 00:37:00,079
endless

980
00:37:00,079 --> 00:37:03,119
pages of documents

981
00:37:04,320 --> 00:37:05,839
all right

982
00:37:05,839 --> 00:37:08,240
i hope i was able in this presentation

983
00:37:08,240 --> 00:37:10,000
to show you why we're still talking

984
00:37:10,000 --> 00:37:13,280
about problems like sql injection

985
00:37:13,280 --> 00:37:16,720
why this problem which is 22 years old

986
00:37:16,720 --> 00:37:20,880
which is still a top problem in

987
00:37:20,880 --> 00:37:23,839
in the world is not fixed today and and

988
00:37:23,839 --> 00:37:26,480
why it is not fixed today and and

989
00:37:26,480 --> 00:37:29,440
why a software security person is not

990
00:37:29,440 --> 00:37:32,320
able to get that out of of his way you

991
00:37:32,320 --> 00:37:33,280
know

992
00:37:33,280 --> 00:37:35,119
what he's doing on a day-to-day basis

993
00:37:35,119 --> 00:37:36,800
and what he should be doing on the on a

994
00:37:36,800 --> 00:37:38,560
day-to-day basis

995
00:37:38,560 --> 00:37:39,680
i also

996
00:37:39,680 --> 00:37:42,480
hope i was able to tell you how we can

997
00:37:42,480 --> 00:37:44,880
actually embed software security or

998
00:37:44,880 --> 00:37:47,280
application security into the culture

999
00:37:47,280 --> 00:37:48,720
the automation the measurement and the

1000
00:37:48,720 --> 00:37:52,240
sharing so once your organization

1001
00:37:52,240 --> 00:37:55,359
is embracing devops well here are some

1002
00:37:55,359 --> 00:37:57,680
things that you can do to actually

1003
00:37:57,680 --> 00:38:00,000
move security into the culture into the

1004
00:38:00,000 --> 00:38:02,000
automation into the measurement and into

1005
00:38:02,000 --> 00:38:05,160
the sharing

1006
00:38:06,160 --> 00:38:08,400
i really hope you got something out of

1007
00:38:08,400 --> 00:38:10,240
this presentation my name is matias

1008
00:38:10,240 --> 00:38:14,078
madhu and thank you very much

