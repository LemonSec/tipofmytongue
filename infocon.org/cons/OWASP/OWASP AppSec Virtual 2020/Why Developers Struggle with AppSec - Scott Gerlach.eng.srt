1
00:00:00,260 --> 00:00:17,990
[Music]

2
00:00:19,439 --> 00:00:21,359
hi everyone scott gerlach from stackhawk

3
00:00:21,359 --> 00:00:22,880
here uh

4
00:00:22,880 --> 00:00:24,560
happy to be at this olaf's conference

5
00:00:24,560 --> 00:00:25,680
today

6
00:00:25,680 --> 00:00:27,279
today we're talking about three reasons

7
00:00:27,279 --> 00:00:29,199
developers struggle with app second and

8
00:00:29,199 --> 00:00:31,439
how to make that easier

9
00:00:31,439 --> 00:00:33,600
as i said i'm scott gerlach the cso and

10
00:00:33,600 --> 00:00:36,079
co-founder of stackhawk

11
00:00:36,079 --> 00:00:38,239
got a lot of experience doing this the

12
00:00:38,239 --> 00:00:40,239
wrong way hopefully i can help give you

13
00:00:40,239 --> 00:00:43,200
some education on a better way to do it

14
00:00:43,200 --> 00:00:45,200
let's start with overview of appsec

15
00:00:45,200 --> 00:00:47,200
appsec is good in theory

16
00:00:47,200 --> 00:00:49,840
there's tools like static code analysis

17
00:00:49,840 --> 00:00:53,840
uh dynamic code analysis rasp is waff

18
00:00:53,840 --> 00:00:56,000
all these things build a really robust

19
00:00:56,000 --> 00:00:58,160
application security program there's

20
00:00:58,160 --> 00:00:59,440
some problems with some of these things

21
00:00:59,440 --> 00:01:02,079
as well static code analysis is

22
00:01:02,079 --> 00:01:04,720
sometimes noisy and often lacks context

23
00:01:04,720 --> 00:01:07,600
of how the application is running

24
00:01:07,600 --> 00:01:10,080
and it's language dependent so if you're

25
00:01:10,080 --> 00:01:12,320
writing in in like a go language or

26
00:01:12,320 --> 00:01:14,240
something similar to that there's very

27
00:01:14,240 --> 00:01:15,920
few tools out there that actually

28
00:01:15,920 --> 00:01:19,680
provide value to dynamic code analysis

29
00:01:19,680 --> 00:01:22,720
better at actual app context but still

30
00:01:22,720 --> 00:01:25,360
somewhat noisy and also a ton of those

31
00:01:25,360 --> 00:01:27,600
tools are really hard to use uh and then

32
00:01:27,600 --> 00:01:29,759
rasp and i asked and laugh those are

33
00:01:29,759 --> 00:01:32,159
basically wait till someone else finds

34
00:01:32,159 --> 00:01:35,920
it in production i guess maybe um not to

35
00:01:35,920 --> 00:01:37,520
say that they're bad

36
00:01:37,520 --> 00:01:39,439
but they're not the only thing and or

37
00:01:39,439 --> 00:01:40,799
the first thing you should probably

38
00:01:40,799 --> 00:01:43,520
deploy in your abstech journey

39
00:01:43,520 --> 00:01:44,799
so let's start talking about some of

40
00:01:44,799 --> 00:01:46,479
these problems

41
00:01:46,479 --> 00:01:47,600
problem one

42
00:01:47,600 --> 00:01:49,680
the benevolent security team or lack

43
00:01:49,680 --> 00:01:51,200
thereof

44
00:01:51,200 --> 00:01:52,880
some some organizations don't even have

45
00:01:52,880 --> 00:01:55,840
a security team i'm assuming most people

46
00:01:55,840 --> 00:01:57,759
that are in attendance at this oasp

47
00:01:57,759 --> 00:02:00,000
conference are on a security team

48
00:02:00,000 --> 00:02:02,399
but maybe looking forward to how to how

49
00:02:02,399 --> 00:02:05,040
to grow that

50
00:02:07,360 --> 00:02:10,399
uh we have a lot of trust issues

51
00:02:10,399 --> 00:02:13,120
as a security as security organizations

52
00:02:13,120 --> 00:02:14,720
uh this is a tweet that charlie miller

53
00:02:14,720 --> 00:02:16,319
actually sent out in february right

54
00:02:16,319 --> 00:02:18,879
before uh coronavirus hit us pretty hard

55
00:02:18,879 --> 00:02:19,680
um

56
00:02:19,680 --> 00:02:21,280
and i love this tweet because he kind of

57
00:02:21,280 --> 00:02:23,200
sums up this whole trust issue thing

58
00:02:23,200 --> 00:02:25,840
that we have as security uh security

59
00:02:25,840 --> 00:02:26,720
teams

60
00:02:26,720 --> 00:02:28,640
he said i'm not sure if a new hire dev

61
00:02:28,640 --> 00:02:31,280
is in position to evaluate risk for a

62
00:02:31,280 --> 00:02:33,519
feature product or a company

63
00:02:33,519 --> 00:02:35,120
i think professional security people can

64
00:02:35,120 --> 00:02:37,120
do this better

65
00:02:37,120 --> 00:02:39,840
and it like i said it just sums up the

66
00:02:39,840 --> 00:02:42,959
entire thing and and the whole point is

67
00:02:42,959 --> 00:02:44,319
new hire dev

68
00:02:44,319 --> 00:02:47,519
got hired to make risk decisions they

69
00:02:47,519 --> 00:02:50,080
make risk decisions on how to write code

70
00:02:50,080 --> 00:02:52,000
and they make risk decisions on how to

71
00:02:52,000 --> 00:02:54,480
deploy code and ps they work with their

72
00:02:54,480 --> 00:02:56,560
peers to figure out what risk is good

73
00:02:56,560 --> 00:02:59,120
and what risk is bad and so this is

74
00:02:59,120 --> 00:03:00,800
already happening

75
00:03:00,800 --> 00:03:02,480
whether or not the security team knows

76
00:03:02,480 --> 00:03:03,760
about it

77
00:03:03,760 --> 00:03:05,440
and so it kind of like i said it just

78
00:03:05,440 --> 00:03:07,519
embodies this whole trust thing that

79
00:03:07,519 --> 00:03:09,599
we've got going on and i like to think

80
00:03:09,599 --> 00:03:12,000
of it more like this

81
00:03:12,000 --> 00:03:13,040
uh

82
00:03:13,040 --> 00:03:14,400
i wouldn't want to put a new hire

83
00:03:14,400 --> 00:03:16,400
developer in the position of making an

84
00:03:16,400 --> 00:03:19,519
uninformed risk decision again when they

85
00:03:19,519 --> 00:03:21,040
are making risk decisions they're

86
00:03:21,040 --> 00:03:22,800
collaborating with their peer groups

87
00:03:22,800 --> 00:03:24,799
they're saying hey other engineers that

88
00:03:24,799 --> 00:03:26,720
have been here for a while and even if

89
00:03:26,720 --> 00:03:29,360
they've been there for a while hey peer

90
00:03:29,360 --> 00:03:32,400
peers other developers engineers what's

91
00:03:32,400 --> 00:03:34,239
the what's a smart way to do this i've

92
00:03:34,239 --> 00:03:35,519
been working on this thing and i've got

93
00:03:35,519 --> 00:03:37,920
some ideas but how do i actually do this

94
00:03:37,920 --> 00:03:39,840
and what doesn't happen is they don't go

95
00:03:39,840 --> 00:03:42,000
off and grab the security team and go

96
00:03:42,000 --> 00:03:43,360
hey

97
00:03:43,360 --> 00:03:44,840
how should i do this

98
00:03:44,840 --> 00:03:47,840
because the answer is often no you

99
00:03:47,840 --> 00:03:49,200
shouldn't do that

100
00:03:49,200 --> 00:03:50,879
that's just not the right answer

101
00:03:50,879 --> 00:03:53,120
so that that's one of the hard things

102
00:03:53,120 --> 00:03:55,120
and then

103
00:03:55,120 --> 00:03:57,760
to bat this to combat this

104
00:03:57,760 --> 00:04:00,000
trust issue oftentimes security teams

105
00:04:00,000 --> 00:04:03,040
come up with this great new idea

106
00:04:03,040 --> 00:04:06,159
we should teach them how to do our job

107
00:04:06,159 --> 00:04:08,400
and by by that we say let's teach them

108
00:04:08,400 --> 00:04:10,080
appsec so that they're really good at

109
00:04:10,080 --> 00:04:11,840
appsec because we're really good at

110
00:04:11,840 --> 00:04:12,879
appsync

111
00:04:12,879 --> 00:04:14,400
and so that will probably fix the

112
00:04:14,400 --> 00:04:15,519
problem

113
00:04:15,519 --> 00:04:18,000
uh and that what that really turns into

114
00:04:18,000 --> 00:04:20,720
is here's a ton of new acronyms to learn

115
00:04:20,720 --> 00:04:23,440
uh we should talk about how risk works

116
00:04:23,440 --> 00:04:24,320
uh

117
00:04:24,320 --> 00:04:25,919
ps the internet is a bad place i don't

118
00:04:25,919 --> 00:04:27,759
know if you knew that or not if you have

119
00:04:27,759 --> 00:04:28,560
any

120
00:04:28,560 --> 00:04:31,120
and then ultimately if you've sent any

121
00:04:31,120 --> 00:04:32,880
of your devs to a security training if

122
00:04:32,880 --> 00:04:34,880
you already have a security program and

123
00:04:34,880 --> 00:04:36,400
you've implemented security training if

124
00:04:36,400 --> 00:04:38,240
you've sent any of your developers to

125
00:04:38,240 --> 00:04:39,680
the security program

126
00:04:39,680 --> 00:04:41,840
think about who usually gets selected

127
00:04:41,840 --> 00:04:43,919
it's usually the senior engineers and

128
00:04:43,919 --> 00:04:46,080
they're expected to come back and train

129
00:04:46,080 --> 00:04:48,320
the rest of the engineers on how to do

130
00:04:48,320 --> 00:04:49,520
application security because you can't

131
00:04:49,520 --> 00:04:52,000
send the entire engineering team

132
00:04:52,000 --> 00:04:53,440
and it just doesn't happen because

133
00:04:53,440 --> 00:04:55,280
they're out learning stuff outside of

134
00:04:55,280 --> 00:04:57,440
context of code that they write outside

135
00:04:57,440 --> 00:04:59,120
of context of

136
00:04:59,120 --> 00:05:01,120
applications that they're building

137
00:05:01,120 --> 00:05:02,800
and they don't have time while they're

138
00:05:02,800 --> 00:05:06,080
shipping features and fixing bugs to go

139
00:05:06,080 --> 00:05:09,199
teach juniors or other peers how to be

140
00:05:09,199 --> 00:05:11,280
application security specialists

141
00:05:11,280 --> 00:05:13,840
that's why we have that job it should be

142
00:05:13,840 --> 00:05:16,960
a consulting role and the trick here is

143
00:05:16,960 --> 00:05:19,759
how do we get into this consulting role

144
00:05:19,759 --> 00:05:23,360
and how do we not do it the wrong way

145
00:05:23,360 --> 00:05:24,960
and so this kind of let's teach them

146
00:05:24,960 --> 00:05:28,320
apsec is at best misguided and at worst

147
00:05:28,320 --> 00:05:30,880
it continues to drive division between

148
00:05:30,880 --> 00:05:31,680
uh

149
00:05:31,680 --> 00:05:34,720
devs and security teams because

150
00:05:34,720 --> 00:05:36,960
what you're really saying is you don't

151
00:05:36,960 --> 00:05:39,120
know how to do

152
00:05:39,120 --> 00:05:40,479
your job

153
00:05:40,479 --> 00:05:42,960
but we can teach you how to do our job

154
00:05:42,960 --> 00:05:43,919
which is

155
00:05:43,919 --> 00:05:46,880
silly and if you think about it

156
00:05:46,880 --> 00:05:48,880
in context of

157
00:05:48,880 --> 00:05:51,440
what the executive team asks from the fp

158
00:05:51,440 --> 00:05:53,840
a team or the accounting team hey we

159
00:05:53,840 --> 00:05:55,280
need to figure out what the business

160
00:05:55,280 --> 00:05:57,280
would look like if we modeled out a new

161
00:05:57,280 --> 00:05:59,039
price increase

162
00:05:59,039 --> 00:06:01,199
and so the fb and 18 doesn't turn around

163
00:06:01,199 --> 00:06:03,039
and go yeah we could totally help you

164
00:06:03,039 --> 00:06:05,600
there but uh first let's teach you about

165
00:06:05,600 --> 00:06:07,199
the gl

166
00:06:07,199 --> 00:06:10,000
so it's a debits and credit system and

167
00:06:10,000 --> 00:06:12,240
you put the money and like that doesn't

168
00:06:12,240 --> 00:06:14,800
happen they just provide tools for the

169
00:06:14,800 --> 00:06:17,680
executive team to go hey man tweak tweak

170
00:06:17,680 --> 00:06:19,759
these inputs tweak these outputs

171
00:06:19,759 --> 00:06:21,680
and you can make to smart decisions

172
00:06:21,680 --> 00:06:23,840
because we've built this giant model

173
00:06:23,840 --> 00:06:26,880
that helps inform you of the question

174
00:06:26,880 --> 00:06:28,880
that you have to ask

175
00:06:28,880 --> 00:06:30,960
and so

176
00:06:30,960 --> 00:06:32,479
figuring out how to be better

177
00:06:32,479 --> 00:06:33,840
consultants

178
00:06:33,840 --> 00:06:35,680
as application security teams is super

179
00:06:35,680 --> 00:06:37,600
important to the engineering team so

180
00:06:37,600 --> 00:06:39,360
that they can self-serve some of their

181
00:06:39,360 --> 00:06:40,319
questions

182
00:06:40,319 --> 00:06:42,400
is the code that i'm writing safe

183
00:06:42,400 --> 00:06:44,160
how do i how should i be thinking about

184
00:06:44,160 --> 00:06:45,840
risk what things should i be fixing

185
00:06:45,840 --> 00:06:47,600
those kinds of things

186
00:06:47,600 --> 00:06:50,000
engaging them in

187
00:06:50,000 --> 00:06:53,199
a partnership is really important

188
00:06:53,199 --> 00:06:54,720
one of the other problems

189
00:06:54,720 --> 00:06:57,680
that we have as security folk uh and

190
00:06:57,680 --> 00:06:59,120
this always

191
00:06:59,120 --> 00:07:01,039
always hurts my soul is this chase to

192
00:07:01,039 --> 00:07:03,520
perfection uh

193
00:07:03,520 --> 00:07:05,520
we always think of eliminating of all

194
00:07:05,520 --> 00:07:08,720
risk uh patch all the things don't do

195
00:07:08,720 --> 00:07:10,960
anything in the cloud those kind of

196
00:07:10,960 --> 00:07:13,039
large branded statements

197
00:07:13,039 --> 00:07:14,000
uh

198
00:07:14,000 --> 00:07:16,080
and so we we come up with like hey i

199
00:07:16,080 --> 00:07:16,880
found

200
00:07:16,880 --> 00:07:18,880
all of these issues we should fix every

201
00:07:18,880 --> 00:07:20,720
single one of them if patching isn't a

202
00:07:20,720 --> 00:07:24,560
hundred percent then it's zero percent

203
00:07:24,560 --> 00:07:26,000
we we

204
00:07:26,000 --> 00:07:27,680
struggle to think of

205
00:07:27,680 --> 00:07:30,400
risk in the context of the business

206
00:07:30,400 --> 00:07:32,639
business is there to take risk and

207
00:07:32,639 --> 00:07:34,960
provide solutions to a customer

208
00:07:34,960 --> 00:07:37,039
even thinking you can solve a problem

209
00:07:37,039 --> 00:07:40,080
for a customer is a risk itself

210
00:07:40,080 --> 00:07:42,000
so we need to be providing as security

211
00:07:42,000 --> 00:07:45,759
teams measured informed risk to operate

212
00:07:45,759 --> 00:07:48,639
and security is no different right the

213
00:07:48,639 --> 00:07:50,400
business is taking those measured and

214
00:07:50,400 --> 00:07:52,400
informed risks security should be

215
00:07:52,400 --> 00:07:54,400
feeding into that helping the business

216
00:07:54,400 --> 00:07:57,360
say we should maybe be taking this risk

217
00:07:57,360 --> 00:07:59,280
and one of the

218
00:07:59,280 --> 00:08:02,479
embodied statements here uh that i have

219
00:08:02,479 --> 00:08:04,240
from a product vp

220
00:08:04,240 --> 00:08:06,400
which i'm looking at my slides right now

221
00:08:06,400 --> 00:08:08,560
and i've repeated on the next slide for

222
00:08:08,560 --> 00:08:09,840
some reason

223
00:08:09,840 --> 00:08:12,160
uh is i've never had a satisfying

224
00:08:12,160 --> 00:08:14,240
conversation on why a security issue is

225
00:08:14,240 --> 00:08:17,120
ever more important than a feature ever

226
00:08:17,120 --> 00:08:17,919
and

227
00:08:17,919 --> 00:08:20,400
like if that doesn't summarize

228
00:08:20,400 --> 00:08:22,960
what a bad job we're kind of doing like

229
00:08:22,960 --> 00:08:24,800
this is one that's one person right

230
00:08:24,800 --> 00:08:26,639
there may be examples of this working

231
00:08:26,639 --> 00:08:28,639
really really well uh in other

232
00:08:28,639 --> 00:08:31,039
businesses in another context

233
00:08:31,039 --> 00:08:33,200
but if that doesn't embody like it's a

234
00:08:33,200 --> 00:08:36,240
problem it could get hacked

235
00:08:36,240 --> 00:08:38,559
if that doesn't embody the uh the

236
00:08:38,559 --> 00:08:40,240
guidance that we're getting and how

237
00:08:40,240 --> 00:08:42,320
we're doing it incorrectly i don't know

238
00:08:42,320 --> 00:08:44,240
what does

239
00:08:44,240 --> 00:08:46,000
uh and that's all if you have a security

240
00:08:46,000 --> 00:08:47,920
team if you don't have a security team

241
00:08:47,920 --> 00:08:50,000
uh you're the cto or the vp of

242
00:08:50,000 --> 00:08:52,839
engineering and you've been tasked with

243
00:08:52,839 --> 00:08:55,040
security kind of a smaller company

244
00:08:55,040 --> 00:08:56,640
smaller org

245
00:08:56,640 --> 00:08:58,480
that can lead to any one of those these

246
00:08:58,480 --> 00:09:00,000
thought statements right here where do i

247
00:09:00,000 --> 00:09:02,480
start oh my god forget this i've got

248
00:09:02,480 --> 00:09:04,160
other things to do that are

249
00:09:04,160 --> 00:09:06,320
more actionable and more important

250
00:09:06,320 --> 00:09:08,880
and wait a minute maybe that devops team

251
00:09:08,880 --> 00:09:11,040
can help me here

252
00:09:11,040 --> 00:09:13,600
so those are that's kind of the security

253
00:09:13,600 --> 00:09:15,760
team problem that's that's feeding this

254
00:09:15,760 --> 00:09:19,040
appsec problem a little bit

255
00:09:19,040 --> 00:09:21,600
problem two appsec tools are built for

256
00:09:21,600 --> 00:09:24,480
security teams so many enterprise

257
00:09:24,480 --> 00:09:27,120
application security tools are built for

258
00:09:27,120 --> 00:09:29,279
large or small

259
00:09:29,279 --> 00:09:30,880
enterprise security teams so that means

260
00:09:30,880 --> 00:09:32,560
that they've got a lot of configuration

261
00:09:32,560 --> 00:09:34,240
a lot of buttons a lot of switches a lot

262
00:09:34,240 --> 00:09:36,800
of a lot of cool whiz-bang features

263
00:09:36,800 --> 00:09:38,720
but what that often ends up looking like

264
00:09:38,720 --> 00:09:41,760
in actuality is something like this

265
00:09:41,760 --> 00:09:43,839
they're really complicated hard to

266
00:09:43,839 --> 00:09:45,440
understand the context of what you're

267
00:09:45,440 --> 00:09:46,720
looking at

268
00:09:46,720 --> 00:09:48,720
and if you try to give an engineer

269
00:09:48,720 --> 00:09:50,800
access to a tool that looked like this i

270
00:09:50,800 --> 00:09:52,000
mean not that these guys aren't

271
00:09:52,000 --> 00:09:53,920
engineers but they're specialized in

272
00:09:53,920 --> 00:09:55,200
this thing

273
00:09:55,200 --> 00:09:56,080
um

274
00:09:56,080 --> 00:09:58,080
they close it pretty quick right they'd

275
00:09:58,080 --> 00:10:00,160
go uh this is too much for me to learn

276
00:10:00,160 --> 00:10:02,160
i've got stuff to do or they start

277
00:10:02,160 --> 00:10:04,240
making fun of how it was developed

278
00:10:04,240 --> 00:10:05,760
neither of those things is what you want

279
00:10:05,760 --> 00:10:07,440
them to be doing you want them to be

280
00:10:07,440 --> 00:10:08,959
able to use the tool consume the

281
00:10:08,959 --> 00:10:10,079
information

282
00:10:10,079 --> 00:10:12,399
and make that really really good

283
00:10:12,399 --> 00:10:15,760
make good decisions based on it

284
00:10:16,079 --> 00:10:17,279
the other problem here security

285
00:10:17,279 --> 00:10:19,279
webster's we uh

286
00:10:19,279 --> 00:10:21,040
they're all built in security person

287
00:10:21,040 --> 00:10:24,399
language we a developer's job is not to

288
00:10:24,399 --> 00:10:26,160
learn all this new stuff but they have

289
00:10:26,160 --> 00:10:28,480
to know how to protect against it or

290
00:10:28,480 --> 00:10:29,680
prevent it

291
00:10:29,680 --> 00:10:31,200
um and

292
00:10:31,200 --> 00:10:33,600
both of these things on this slide here

293
00:10:33,600 --> 00:10:36,480
many of you may know are the same thing

294
00:10:36,480 --> 00:10:38,720
csrf xsrf

295
00:10:38,720 --> 00:10:40,399
a developer would look at that go why is

296
00:10:40,399 --> 00:10:42,399
there two names for the same thing

297
00:10:42,399 --> 00:10:43,839
this is ridiculous

298
00:10:43,839 --> 00:10:44,800
um

299
00:10:44,800 --> 00:10:47,120
and really ultimately here is this is

300
00:10:47,120 --> 00:10:49,839
misconfiguration of access control allow

301
00:10:49,839 --> 00:10:50,959
origin

302
00:10:50,959 --> 00:10:53,200
and neither of these things say that

303
00:10:53,200 --> 00:10:55,120
uh so it's really hard to go

304
00:10:55,120 --> 00:10:57,040
okay cool you found crosshairs quest

305
00:10:57,040 --> 00:10:59,040
forgery problem on this application i

306
00:10:59,040 --> 00:11:01,760
built how do i actually fix it

307
00:11:01,760 --> 00:11:04,480
uh and so then the googling begins and

308
00:11:04,480 --> 00:11:06,000
it's not that they can't find the answer

309
00:11:06,000 --> 00:11:07,440
to it because they can

310
00:11:07,440 --> 00:11:08,800
it's that they don't have time to do

311
00:11:08,800 --> 00:11:10,959
that they're busy working on other stuff

312
00:11:10,959 --> 00:11:11,920
this is

313
00:11:11,920 --> 00:11:14,480
not their specific job they just need to

314
00:11:14,480 --> 00:11:18,320
fix bugs and go about their business

315
00:11:18,720 --> 00:11:20,880
there are good appsec dev tools out

316
00:11:20,880 --> 00:11:22,640
there stuff that's

317
00:11:22,640 --> 00:11:25,120
developer native in the context of how

318
00:11:25,120 --> 00:11:29,680
they work in their workflow self-serving

319
00:11:29,680 --> 00:11:31,040
self-service

320
00:11:31,040 --> 00:11:31,920
uh

321
00:11:31,920 --> 00:11:35,760
helping them produce secure safe code

322
00:11:35,760 --> 00:11:38,560
some of those tools are sneak fossa npm

323
00:11:38,560 --> 00:11:40,320
audit uh

324
00:11:40,320 --> 00:11:43,040
github's package inspection and pr bot

325
00:11:43,040 --> 00:11:46,240
depend about uh the oauth dependency

326
00:11:46,240 --> 00:11:47,519
checker tool

327
00:11:47,519 --> 00:11:49,440
um and at least one other one that i

328
00:11:49,440 --> 00:11:51,279
know about that comes from the company i

329
00:11:51,279 --> 00:11:52,880
i come from

330
00:11:52,880 --> 00:11:53,839
anyway

331
00:11:53,839 --> 00:11:56,160
uh last of all all these kind of

332
00:11:56,160 --> 00:12:00,079
application security tools um

333
00:12:00,079 --> 00:12:02,480
all suffer from this last problem for

334
00:12:02,480 --> 00:12:05,680
the most part and that is problem three

335
00:12:05,680 --> 00:12:08,079
the production bias

336
00:12:08,079 --> 00:12:10,959
all these things are set up so that they

337
00:12:10,959 --> 00:12:13,920
can easily run in production

338
00:12:13,920 --> 00:12:15,279
and there's a bunch of problems with

339
00:12:15,279 --> 00:12:18,480
that so let's dig into that

340
00:12:18,480 --> 00:12:20,720
first of all production bias

341
00:12:20,720 --> 00:12:21,760
um

342
00:12:21,760 --> 00:12:24,240
the first problem in there is the people

343
00:12:24,240 --> 00:12:26,720
so the security team is usually one of

344
00:12:26,720 --> 00:12:30,000
the ones that enter in

345
00:12:30,320 --> 00:12:32,639
edit

346
00:12:32,959 --> 00:12:33,760
this

347
00:12:33,760 --> 00:12:35,200
yeah sorry

348
00:12:35,200 --> 00:12:36,959
the security team is usually one of the

349
00:12:36,959 --> 00:12:38,959
ones that first

350
00:12:38,959 --> 00:12:41,360
experiences one of these appsec tools

351
00:12:41,360 --> 00:12:43,360
and the first place they run the tool is

352
00:12:43,360 --> 00:12:45,279
in production because that's where they

353
00:12:45,279 --> 00:12:46,240
know

354
00:12:46,240 --> 00:12:49,920
the application the best

355
00:12:50,399 --> 00:12:52,320
they always end up going okay i need to

356
00:12:52,320 --> 00:12:53,600
be able to run this to production and

357
00:12:53,600 --> 00:12:56,560
that's where we've put a ton of uh

358
00:12:56,560 --> 00:12:58,560
ton of technology in there to make the

359
00:12:58,560 --> 00:13:00,800
user experience really good and the bot

360
00:13:00,800 --> 00:13:03,200
experience really bad and then we always

361
00:13:03,200 --> 00:13:05,120
have a problem as security people going

362
00:13:05,120 --> 00:13:06,639
you know what this has to be able to

363
00:13:06,639 --> 00:13:09,279
defeat all of my bot protections so that

364
00:13:09,279 --> 00:13:11,600
it can scan my production environment

365
00:13:11,600 --> 00:13:14,399
which is the the silliest thing

366
00:13:14,399 --> 00:13:16,240
i've done this myself and it's just a

367
00:13:16,240 --> 00:13:17,839
silly way to think because you're like

368
00:13:17,839 --> 00:13:20,639
okay all this anti-bot stuff that i put

369
00:13:20,639 --> 00:13:23,440
in place should be defeatable by this

370
00:13:23,440 --> 00:13:25,040
bot that i'm going to use to scan

371
00:13:25,040 --> 00:13:26,399
production

372
00:13:26,399 --> 00:13:28,560
and then the other person that this

373
00:13:28,560 --> 00:13:30,639
production bias serves is the pen tester

374
00:13:30,639 --> 00:13:33,200
and the pen tester production is their

375
00:13:33,200 --> 00:13:34,959
only access to the app so that's the

376
00:13:34,959 --> 00:13:36,880
only place they know the app

377
00:13:36,880 --> 00:13:39,600
uh and what what the repercussions that

378
00:13:39,600 --> 00:13:41,440
come out of this kind of production bias

379
00:13:41,440 --> 00:13:43,760
for people is you're more focused on the

380
00:13:43,760 --> 00:13:45,760
numbers of things found

381
00:13:45,760 --> 00:13:48,639
than finding and fixing the right things

382
00:13:48,639 --> 00:13:50,240
so pen testers

383
00:13:50,240 --> 00:13:52,560
their value is in how many things did

384
00:13:52,560 --> 00:13:55,279
you find the security team's value in

385
00:13:55,279 --> 00:13:57,279
the tool that they bought is in how many

386
00:13:57,279 --> 00:13:59,279
things did it find

387
00:13:59,279 --> 00:14:02,720
and not did i find and can i fix the

388
00:14:02,720 --> 00:14:04,480
right things

389
00:14:04,480 --> 00:14:05,279
uh

390
00:14:05,279 --> 00:14:07,360
it's inefficient because neither of

391
00:14:07,360 --> 00:14:09,920
these two teams in most cases

392
00:14:09,920 --> 00:14:12,079
uh are the fixers of any of these

393
00:14:12,079 --> 00:14:13,519
problems

394
00:14:13,519 --> 00:14:15,839
and then it reinforces that adversarial

395
00:14:15,839 --> 00:14:17,680
relationship that we talked about

396
00:14:17,680 --> 00:14:18,480
of

397
00:14:18,480 --> 00:14:20,880
hey look i broke your cool thing isn't

398
00:14:20,880 --> 00:14:23,040
that awesome and you should be proud as

399
00:14:23,040 --> 00:14:25,839
secure as an abstech professional

400
00:14:25,839 --> 00:14:29,360
of finding things that are hard to find

401
00:14:29,360 --> 00:14:32,240
security problems that are tricky to to

402
00:14:32,240 --> 00:14:35,040
either discover or exploit or whatever

403
00:14:35,040 --> 00:14:37,279
but that again is not the value of the

404
00:14:37,279 --> 00:14:38,480
developer they're thinking about

405
00:14:38,480 --> 00:14:42,480
delivering value to the customer so

406
00:14:43,199 --> 00:14:45,760
undoing that uh adversarial relationship

407
00:14:45,760 --> 00:14:48,240
is super important

408
00:14:48,240 --> 00:14:50,399
there's also a timing issue associated

409
00:14:50,399 --> 00:14:52,240
with this production bias

410
00:14:52,240 --> 00:14:54,480
and as companies are rapidly shipping

411
00:14:54,480 --> 00:14:56,079
code to production

412
00:14:56,079 --> 00:14:58,240
security is not baked into this workflow

413
00:14:58,240 --> 00:15:00,959
and um

414
00:15:01,040 --> 00:15:02,880
either you're not rapidly shipping in

415
00:15:02,880 --> 00:15:06,079
which case uh appsec processes act as a

416
00:15:06,079 --> 00:15:07,279
blocker

417
00:15:07,279 --> 00:15:11,040
so that first one there that top one

418
00:15:11,040 --> 00:15:11,839
or

419
00:15:11,839 --> 00:15:14,240
if you're scanning in production after

420
00:15:14,240 --> 00:15:15,920
something gets deployed

421
00:15:15,920 --> 00:15:18,000
then you're playing catch-up uh and so

422
00:15:18,000 --> 00:15:19,519
you're unaware of things that are

423
00:15:19,519 --> 00:15:21,199
getting put into production

424
00:15:21,199 --> 00:15:23,279
or in that first one you're saying don't

425
00:15:23,279 --> 00:15:24,720
don't deploy anything to production

426
00:15:24,720 --> 00:15:26,800
until i check it

427
00:15:26,800 --> 00:15:29,120
and so neither of those things are super

428
00:15:29,120 --> 00:15:32,079
devops friendly

429
00:15:33,920 --> 00:15:35,360
and then after tools that are run in

430
00:15:35,360 --> 00:15:37,199
production after release are used in

431
00:15:37,199 --> 00:15:39,680
frequently infrequently

432
00:15:39,680 --> 00:15:41,040
you know some

433
00:15:41,040 --> 00:15:43,279
some duration after release so you know

434
00:15:43,279 --> 00:15:44,480
you've put

435
00:15:44,480 --> 00:15:46,560
you potentially put security bugs into

436
00:15:46,560 --> 00:15:48,639
production that you're unaware of

437
00:15:48,639 --> 00:15:51,120
in a hope to unblock the development

438
00:15:51,120 --> 00:15:52,000
team

439
00:15:52,000 --> 00:15:54,800
but now you've undone a bunch of what

440
00:15:54,800 --> 00:15:56,160
you're trying to do in the first place

441
00:15:56,160 --> 00:15:59,360
and that's the knapsec program

442
00:15:59,360 --> 00:16:02,399
uh i did see a cool mobius of this thing

443
00:16:02,399 --> 00:16:03,839
the other day

444
00:16:03,839 --> 00:16:05,440
that had security wrapped around this

445
00:16:05,440 --> 00:16:07,199
entire mobius

446
00:16:07,199 --> 00:16:09,600
and that's fine except for that's also

447
00:16:09,600 --> 00:16:11,360
not how it works like

448
00:16:11,360 --> 00:16:14,720
the operations of a of a product is also

449
00:16:14,720 --> 00:16:17,040
around the entire mobius the

450
00:16:17,040 --> 00:16:19,040
deployment of a product the architecture

451
00:16:19,040 --> 00:16:20,639
the planning of the product could also

452
00:16:20,639 --> 00:16:22,720
be around the entire mobius but it's

453
00:16:22,720 --> 00:16:25,839
just more of the flow of where how how

454
00:16:25,839 --> 00:16:29,040
this mobius works and uh

455
00:16:29,040 --> 00:16:30,399
coming up with a new design of the

456
00:16:30,399 --> 00:16:32,320
mobius that says it's all the way around

457
00:16:32,320 --> 00:16:34,720
this whole thing also doesn't help

458
00:16:34,720 --> 00:16:35,600
because

459
00:16:35,600 --> 00:16:37,360
that doesn't give you insight into where

460
00:16:37,360 --> 00:16:40,240
it should end up

461
00:16:42,320 --> 00:16:44,079
ultimately

462
00:16:44,079 --> 00:16:45,600
there is a major problem with appsec

463
00:16:45,600 --> 00:16:47,199
tools that favor running in production

464
00:16:47,199 --> 00:16:49,440
and that again is the bugs are in

465
00:16:49,440 --> 00:16:51,519
production

466
00:16:51,519 --> 00:16:53,759
so this process is super frustrating for

467
00:16:53,759 --> 00:16:55,920
software engineers the security team is

468
00:16:55,920 --> 00:16:58,399
running those infrequent scans of code

469
00:16:58,399 --> 00:17:00,160
that are already in production

470
00:17:00,160 --> 00:17:02,240
engage in a bunch of ticket shuffling to

471
00:17:02,240 --> 00:17:04,480
find the engineering team that wrote or

472
00:17:04,480 --> 00:17:06,799
can otherwise fix that issue

473
00:17:06,799 --> 00:17:08,079
in code

474
00:17:08,079 --> 00:17:09,599
the team has moved on to other

475
00:17:09,599 --> 00:17:11,439
engineering work that has business value

476
00:17:11,439 --> 00:17:14,480
and they have conflicting priorities

477
00:17:14,480 --> 00:17:16,799
often security tickets lack the

478
00:17:16,799 --> 00:17:18,880
concept of business context as to why

479
00:17:18,880 --> 00:17:20,400
they're important to fix over current

480
00:17:20,400 --> 00:17:21,599
sprint work

481
00:17:21,599 --> 00:17:23,679
a team that team has probably long moved

482
00:17:23,679 --> 00:17:25,439
on to other engineering work that

483
00:17:25,439 --> 00:17:27,039
creates business value and they they

484
00:17:27,039 --> 00:17:29,280
have conflicting priorities and often

485
00:17:29,280 --> 00:17:31,440
security tickets lack the concept of

486
00:17:31,440 --> 00:17:33,600
business context as to why they're

487
00:17:33,600 --> 00:17:35,280
important to fix over current sprint

488
00:17:35,280 --> 00:17:37,520
work

489
00:17:37,520 --> 00:17:39,200
there may be a lot of times that will

490
00:17:39,200 --> 00:17:40,799
intentionally ship security bugs to

491
00:17:40,799 --> 00:17:42,000
production

492
00:17:42,000 --> 00:17:43,760
but the intentionality is the important

493
00:17:43,760 --> 00:17:45,200
things

494
00:17:45,200 --> 00:17:46,720
you should be

495
00:17:46,720 --> 00:17:48,400
doing that with your eyes wide open you

496
00:17:48,400 --> 00:17:49,679
should know

497
00:17:49,679 --> 00:17:51,520
that you're intentionally going i know

498
00:17:51,520 --> 00:17:53,360
about this security bug we have to

499
00:17:53,360 --> 00:17:55,360
deliver this feature but we'll come back

500
00:17:55,360 --> 00:17:56,799
to the security bug after we've

501
00:17:56,799 --> 00:17:59,280
delivered the feature

502
00:17:59,280 --> 00:18:00,799
you might know that the exposure is

503
00:18:00,799 --> 00:18:02,720
limited in that situation will be fixed

504
00:18:02,720 --> 00:18:04,480
in next sprint

505
00:18:04,480 --> 00:18:06,400
but production should not be the first

506
00:18:06,400 --> 00:18:08,480
place you're checking if there are any

507
00:18:08,480 --> 00:18:11,200
security bugs

508
00:18:13,520 --> 00:18:15,440
another problem with the production bias

509
00:18:15,440 --> 00:18:17,200
is context

510
00:18:17,200 --> 00:18:19,039
checking for security bugs in production

511
00:18:19,039 --> 00:18:20,559
is inefficient

512
00:18:20,559 --> 00:18:22,720
engineers have moved on to other tasks

513
00:18:22,720 --> 00:18:25,200
uh and doing this involves

514
00:18:25,200 --> 00:18:27,360
heavy contact switching something that

515
00:18:27,360 --> 00:18:28,720
they wrote

516
00:18:28,720 --> 00:18:32,000
two weeks a month three months ago

517
00:18:32,000 --> 00:18:34,160
requires heavy contact switch to get

518
00:18:34,160 --> 00:18:37,200
back into that code

519
00:18:38,320 --> 00:18:39,760
it scanning

520
00:18:39,760 --> 00:18:43,280
on www or on app

521
00:18:43,280 --> 00:18:44,720
in production makes it difficult to

522
00:18:44,720 --> 00:18:47,200
identify the app or service affected so

523
00:18:47,200 --> 00:18:48,559
many of those

524
00:18:48,559 --> 00:18:50,240
many of those apps and services are

525
00:18:50,240 --> 00:18:52,240
micro services backed

526
00:18:52,240 --> 00:18:54,080
they appear to be one thing to a

527
00:18:54,080 --> 00:18:55,760
customer but they're little bits of

528
00:18:55,760 --> 00:18:58,160
services all over the place

529
00:18:58,160 --> 00:19:00,160
and then that that leads to that ticket

530
00:19:00,160 --> 00:19:02,880
shuffle again

531
00:19:05,120 --> 00:19:06,320
and then of course you've got the

532
00:19:06,320 --> 00:19:09,039
business risk what is the actual

533
00:19:09,039 --> 00:19:11,120
risk of the app to the business how

534
00:19:11,120 --> 00:19:13,280
important is it to the business

535
00:19:13,280 --> 00:19:15,360
what kind of data does it handle those

536
00:19:15,360 --> 00:19:17,039
kinds of things those are often some of

537
00:19:17,039 --> 00:19:18,480
the first questions you ask as an

538
00:19:18,480 --> 00:19:20,000
abstract person hey what does this thing

539
00:19:20,000 --> 00:19:22,400
even do how important is it to us

540
00:19:22,400 --> 00:19:24,480
and being able to know that up front and

541
00:19:24,480 --> 00:19:26,320
know it before you start deploying to

542
00:19:26,320 --> 00:19:29,120
fix or deploy into production is

543
00:19:29,120 --> 00:19:31,280
critical to being able to get business

544
00:19:31,280 --> 00:19:33,360
context as to why you should be or

545
00:19:33,360 --> 00:19:36,639
should not be fixing things

546
00:19:37,360 --> 00:19:38,799
and you can think about that as should

547
00:19:38,799 --> 00:19:40,559
we be fixing all of the bugs on an

548
00:19:40,559 --> 00:19:42,559
internal application

549
00:19:42,559 --> 00:19:45,280
or going fast on something else

550
00:19:45,280 --> 00:19:48,160
or going fast on an internal application

551
00:19:48,160 --> 00:19:49,679
uh and then

552
00:19:49,679 --> 00:19:51,280
you can think of the other thing you can

553
00:19:51,280 --> 00:19:52,880
think of is how should we think about

554
00:19:52,880 --> 00:19:54,960
our apps and the data they handle like

555
00:19:54,960 --> 00:19:57,280
what is what it really is the importance

556
00:19:57,280 --> 00:20:00,160
of uh of a piece of technology to the

557
00:20:00,160 --> 00:20:02,960
business is it critical to

558
00:20:02,960 --> 00:20:04,799
serving customers is it critical to

559
00:20:04,799 --> 00:20:07,600
onboarding customers is it critical to

560
00:20:07,600 --> 00:20:09,520
the operation of the business all these

561
00:20:09,520 --> 00:20:13,918
things go into how important is this

562
00:20:15,360 --> 00:20:17,600
so really what we have here

563
00:20:17,600 --> 00:20:18,720
is

564
00:20:18,720 --> 00:20:21,360
the wrong team doing stuff at the wrong

565
00:20:21,360 --> 00:20:24,400
time in the wrong context you've got the

566
00:20:24,400 --> 00:20:26,640
security team who often can't fix

567
00:20:26,640 --> 00:20:27,760
problems

568
00:20:27,760 --> 00:20:29,520
scanning and production

569
00:20:29,520 --> 00:20:31,760
with bugs are already there

570
00:20:31,760 --> 00:20:33,360
in the wrong context

571
00:20:33,360 --> 00:20:36,080
of how important is this thing to us we

572
00:20:36,080 --> 00:20:37,600
know about the

573
00:20:37,600 --> 00:20:39,760
url or the host or whatever it is that

574
00:20:39,760 --> 00:20:42,080
exists on the internet that's exposed to

575
00:20:42,080 --> 00:20:44,720
the public or exposed to customers with

576
00:20:44,720 --> 00:20:47,360
sign-ins those kinds of things

577
00:20:47,360 --> 00:20:49,120
but we don't know

578
00:20:49,120 --> 00:20:51,200
why it's important or the microservices

579
00:20:51,200 --> 00:20:53,440
that are behind all those applications

580
00:20:53,440 --> 00:20:55,360
that support and make it work the way

581
00:20:55,360 --> 00:20:56,720
that it works

582
00:20:56,720 --> 00:20:59,600
and so understanding that context

583
00:20:59,600 --> 00:21:00,880
being able to

584
00:21:00,880 --> 00:21:02,799
have the team that develops those

585
00:21:02,799 --> 00:21:04,480
microservices

586
00:21:04,480 --> 00:21:06,640
scan code understand

587
00:21:06,640 --> 00:21:08,960
security risk security bugs

588
00:21:08,960 --> 00:21:10,400
while they're developing code while

589
00:21:10,400 --> 00:21:12,159
they're merging code

590
00:21:12,159 --> 00:21:14,559
is super super important

591
00:21:14,559 --> 00:21:17,919
so how to get started uh the right way

592
00:21:17,919 --> 00:21:20,080
uh there's some there's an interesting

593
00:21:20,080 --> 00:21:22,640
thing you can think about when you're

594
00:21:22,640 --> 00:21:24,240
when you're trying to implement an apsec

595
00:21:24,240 --> 00:21:26,080
program and you're thinking about

596
00:21:26,080 --> 00:21:28,840
how engineers

597
00:21:28,840 --> 00:21:31,840
work and that is that's kind of this you

598
00:21:31,840 --> 00:21:33,760
know when a team is writing code they

599
00:21:33,760 --> 00:21:35,520
know the syntax is wrong when it doesn't

600
00:21:35,520 --> 00:21:38,159
compile or a linter tells them

601
00:21:38,159 --> 00:21:39,600
and when a team merges code they know

602
00:21:39,600 --> 00:21:41,360
there's a problem when it can't merge or

603
00:21:41,360 --> 00:21:42,799
it doesn't merge

604
00:21:42,799 --> 00:21:44,320
when a team runs unit tests they know

605
00:21:44,320 --> 00:21:47,120
the code is wrong because the tests fail

606
00:21:47,120 --> 00:21:48,480
if there's unit tests hopefully there's

607
00:21:48,480 --> 00:21:50,400
unit tests

608
00:21:50,400 --> 00:21:52,880
and when a team runs integration tests

609
00:21:52,880 --> 00:21:54,640
they know the code is wrong

610
00:21:54,640 --> 00:21:55,919
because it doesn't work the way it's

611
00:21:55,919 --> 00:21:58,000
supposed to do

612
00:21:58,000 --> 00:22:00,320
when you add appsec into this process

613
00:22:00,320 --> 00:22:02,080
you should be saying when a team

614
00:22:02,080 --> 00:22:03,679
introduces a security bug or a

615
00:22:03,679 --> 00:22:06,080
vulnerability they know because it fails

616
00:22:06,080 --> 00:22:08,240
a security test

617
00:22:08,240 --> 00:22:09,520
while they're writing code while they're

618
00:22:09,520 --> 00:22:11,200
merging code

619
00:22:11,200 --> 00:22:15,440
so let's talk about the the right time

620
00:22:15,440 --> 00:22:16,480
uh

621
00:22:16,480 --> 00:22:18,960
the the right time to think about this

622
00:22:18,960 --> 00:22:19,840
uh

623
00:22:19,840 --> 00:22:21,039
security

624
00:22:21,039 --> 00:22:24,000
is in that local dev and ci cd process

625
00:22:24,000 --> 00:22:26,720
as you're writing code obviously there's

626
00:22:26,720 --> 00:22:28,799
some design that goes into this but

627
00:22:28,799 --> 00:22:31,039
design is great

628
00:22:31,039 --> 00:22:33,600
if you can't catch and test while you're

629
00:22:33,600 --> 00:22:37,039
writing code and doing ci cd then design

630
00:22:37,039 --> 00:22:38,240
is

631
00:22:38,240 --> 00:22:39,200
design

632
00:22:39,200 --> 00:22:42,240
right the uh the code itself may have

633
00:22:42,240 --> 00:22:44,240
had one design but in implementation it

634
00:22:44,240 --> 00:22:46,640
gets changed so being able to test while

635
00:22:46,640 --> 00:22:49,760
you're writing code in ci cd uh

636
00:22:49,760 --> 00:22:51,120
instrumenting those tests gives

637
00:22:51,120 --> 00:22:53,520
immediate feedback and the ability to

638
00:22:53,520 --> 00:22:55,440
test locally allows engineers to quickly

639
00:22:55,440 --> 00:22:56,559
iterate

640
00:22:56,559 --> 00:22:58,880
the fix and test loop if a nude bug was

641
00:22:58,880 --> 00:23:01,280
identified and it doesn't show up as

642
00:23:01,280 --> 00:23:03,919
this black box thing in ci that breaks

643
00:23:03,919 --> 00:23:06,000
their build because they can't replicate

644
00:23:06,000 --> 00:23:08,880
the tests locally

645
00:23:08,880 --> 00:23:11,200
i hate putting the kind of black box

646
00:23:11,200 --> 00:23:13,760
things into into a process that

647
00:23:13,760 --> 00:23:15,520
they also can't use on their local

648
00:23:15,520 --> 00:23:17,919
desktop because it's just that that

649
00:23:17,919 --> 00:23:19,679
mysterious thing that breaks the build

650
00:23:19,679 --> 00:23:21,520
and the ulti ultimately the thing that

651
00:23:21,520 --> 00:23:23,039
happens is how do i turn that thing off

652
00:23:23,039 --> 00:23:26,559
how do i how do i defeat that

653
00:23:26,559 --> 00:23:28,000
um

654
00:23:28,000 --> 00:23:31,280
so being able to test local dev ci cd

655
00:23:31,280 --> 00:23:33,360
staging pre-prod

656
00:23:33,360 --> 00:23:36,320
all those things is super important if

657
00:23:36,320 --> 00:23:37,919
you can test while you're writing code

658
00:23:37,919 --> 00:23:40,320
and test while you're building code

659
00:23:40,320 --> 00:23:42,240
security tools should play well in those

660
00:23:42,240 --> 00:23:45,600
phases of development as well

661
00:23:47,520 --> 00:23:50,400
ultimately engineers are smart we should

662
00:23:50,400 --> 00:23:52,880
let them be smart

663
00:23:52,880 --> 00:23:54,640
security teams tend to want to approve

664
00:23:54,640 --> 00:23:56,640
everything and that what that ultimately

665
00:23:56,640 --> 00:23:58,240
means is

666
00:23:58,240 --> 00:24:01,360
other people can't make decisions

667
00:24:01,360 --> 00:24:02,960
collaboration with the security team is

668
00:24:02,960 --> 00:24:05,679
where business contacts come in comes in

669
00:24:05,679 --> 00:24:07,600
making comments about types of security

670
00:24:07,600 --> 00:24:09,039
checks and where they are

671
00:24:09,039 --> 00:24:11,600
best instrument instrumented

672
00:24:11,600 --> 00:24:13,440
with context in mind

673
00:24:13,440 --> 00:24:16,000
as source code analysis does this well

674
00:24:16,000 --> 00:24:19,360
historically dast doesn't do it well

675
00:24:19,360 --> 00:24:21,840
um but it's getting better right there's

676
00:24:21,840 --> 00:24:25,039
more das tools out there um

677
00:24:25,039 --> 00:24:27,120
if you run das if you can run das on

678
00:24:27,120 --> 00:24:29,760
smaller bits of code with new findings

679
00:24:29,760 --> 00:24:31,440
it's more likely

680
00:24:31,440 --> 00:24:32,960
that the code that you've just

681
00:24:32,960 --> 00:24:35,840
introduced is responsible for

682
00:24:35,840 --> 00:24:38,000
the security bug that exists that you

683
00:24:38,000 --> 00:24:40,240
find

684
00:24:43,200 --> 00:24:45,120
allowing that technology to spark

685
00:24:45,120 --> 00:24:46,559
collaboration between development and

686
00:24:46,559 --> 00:24:48,799
security but enable devs to do their

687
00:24:48,799 --> 00:24:51,279
work let them do their job of developing

688
00:24:51,279 --> 00:24:52,240
software

689
00:24:52,240 --> 00:24:54,720
they care about security

690
00:24:54,720 --> 00:24:56,400
they just can't know about it today

691
00:24:56,400 --> 00:24:58,320
because it's too hard it's too expensive

692
00:24:58,320 --> 00:25:01,440
to know about it and ultimately this

693
00:25:01,440 --> 00:25:03,600
business risk is a collaboration there's

694
00:25:03,600 --> 00:25:07,120
not a single team that knows the answer

695
00:25:07,120 --> 00:25:09,120
and so it's all about talking about this

696
00:25:09,120 --> 00:25:12,480
stuff together in a collaboration and

697
00:25:12,480 --> 00:25:14,320
you know this is this has been a long

698
00:25:14,320 --> 00:25:16,159
history between security and development

699
00:25:16,159 --> 00:25:17,279
teams and

700
00:25:17,279 --> 00:25:18,880
there's probably going to be a couple of

701
00:25:18,880 --> 00:25:21,120
therapy sessions needed just to figure

702
00:25:21,120 --> 00:25:23,440
this out to get it into better into

703
00:25:23,440 --> 00:25:25,279
better shape uh

704
00:25:25,279 --> 00:25:27,640
hey you make me feel

705
00:25:27,640 --> 00:25:30,080
undervalued and unwanted when you say i

706
00:25:30,080 --> 00:25:32,480
can't do anything as a developer

707
00:25:32,480 --> 00:25:34,480
well it makes me feel

708
00:25:34,480 --> 00:25:36,720
horrible when we push security bugs into

709
00:25:36,720 --> 00:25:38,640
production those are all great things to

710
00:25:38,640 --> 00:25:40,960
hash out between each other but it

711
00:25:40,960 --> 00:25:42,880
should be a collaboration between an

712
00:25:42,880 --> 00:25:45,120
appsec team and a development team where

713
00:25:45,120 --> 00:25:46,640
they're both talking to each other

714
00:25:46,640 --> 00:25:48,640
they're both engaged in the problems

715
00:25:48,640 --> 00:25:50,559
that they're finding and solutions that

716
00:25:50,559 --> 00:25:53,200
go into that

717
00:25:53,279 --> 00:25:55,039
just you just have to start

718
00:25:55,039 --> 00:25:56,960
engage an engineering team and their

719
00:25:56,960 --> 00:25:58,480
pipeline

720
00:25:58,480 --> 00:26:00,480
be able to give them the ability to auto

721
00:26:00,480 --> 00:26:02,400
check on every merge give them

722
00:26:02,400 --> 00:26:04,960
visibility in their tooling slack

723
00:26:04,960 --> 00:26:07,440
teams whatever they're using how they

724
00:26:07,440 --> 00:26:09,440
consume data ask them how do you want to

725
00:26:09,440 --> 00:26:11,520
consume this data

726
00:26:11,520 --> 00:26:13,440
give them the ability to reproduce the

727
00:26:13,440 --> 00:26:16,000
finding the errors that are finding

728
00:26:16,000 --> 00:26:17,600
and be able to self-serve that

729
00:26:17,600 --> 00:26:20,080
reproduction not hey go talk to this one

730
00:26:20,080 --> 00:26:22,240
application security guy if a problem

731
00:26:22,240 --> 00:26:23,679
pops up and he'll tell you how to

732
00:26:23,679 --> 00:26:25,440
reproduce it oh but he's on vacation

733
00:26:25,440 --> 00:26:27,520
this week

734
00:26:27,520 --> 00:26:29,520
or gal application security gal that's

735
00:26:29,520 --> 00:26:31,760
fine too um

736
00:26:31,760 --> 00:26:34,000
anyway let them self serve

737
00:26:34,000 --> 00:26:36,480
this should all live with developers

738
00:26:36,480 --> 00:26:38,640
and that enables you to democratize this

739
00:26:38,640 --> 00:26:41,039
application security information across

740
00:26:41,039 --> 00:26:42,880
the organization

741
00:26:42,880 --> 00:26:45,279
choose an app or service choose a

742
00:26:45,279 --> 00:26:47,919
technology software composition analysis

743
00:26:47,919 --> 00:26:50,640
dynamic application security testing

744
00:26:50,640 --> 00:26:53,760
get that working in a thing and then

745
00:26:53,760 --> 00:26:56,320
iterate on that make it better get that

746
00:26:56,320 --> 00:26:58,240
team really successful and then expand

747
00:26:58,240 --> 00:27:00,400
throughout the organization to make that

748
00:27:00,400 --> 00:27:02,720
more and more and more valuable all over

749
00:27:02,720 --> 00:27:05,880
the place

750
00:27:06,640 --> 00:27:08,320
ultimately that's all i got for you

751
00:27:08,320 --> 00:27:10,640
thank you for your time uh on this olas

752
00:27:10,640 --> 00:27:12,880
meeting super happy to be here if you've

753
00:27:12,880 --> 00:27:14,559
got any questions

754
00:27:14,559 --> 00:27:16,799
uh about stackhawk or about an apsec

755
00:27:16,799 --> 00:27:19,039
program please give me a call

756
00:27:19,039 --> 00:27:21,679
shoot me a tweet send me an email hit up

757
00:27:21,679 --> 00:27:24,320
stackhawk.com i'll be happy to have a

758
00:27:24,320 --> 00:27:26,159
conversation with you just give you some

759
00:27:26,159 --> 00:27:27,919
insights from my experience

760
00:27:27,919 --> 00:27:28,720
uh

761
00:27:28,720 --> 00:27:30,559
and i hope everyone has a great app

762
00:27:30,559 --> 00:27:31,600
owasp

763
00:27:31,600 --> 00:27:34,559
conference

