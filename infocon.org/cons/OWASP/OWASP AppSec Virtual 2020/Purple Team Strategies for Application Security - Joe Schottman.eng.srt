1
00:00:02,879 --> 00:00:05,839
arcsan is now digital.ai

2
00:00:05,839 --> 00:00:07,759
join us at our booth in the virtual expo

3
00:00:07,759 --> 00:00:10,080
hall to learn how our app protection

4
00:00:10,080 --> 00:00:12,080
white box cryptography and threat

5
00:00:12,080 --> 00:00:14,080
analytics solutions can help you stay

6
00:00:14,080 --> 00:00:18,320
ahead of the evolving threat landscape

7
00:00:21,439 --> 00:00:23,600
good day this is purple team strategies

8
00:00:23,600 --> 00:00:25,920
for application security my name is joe

9
00:00:25,920 --> 00:00:30,000
shotman i'm a senior security analyst

10
00:00:30,000 --> 00:00:31,119
i was trying to figure out what to call

11
00:00:31,119 --> 00:00:33,040
this presentation i searched and

12
00:00:33,040 --> 00:00:34,399
searched for a word that means to make

13
00:00:34,399 --> 00:00:36,239
something more purple and it turns out

14
00:00:36,239 --> 00:00:37,920
that there actually is a word and it's

15
00:00:37,920 --> 00:00:39,760
in purpling

16
00:00:39,760 --> 00:00:41,360
but that's a really terrible word so i

17
00:00:41,360 --> 00:00:44,320
just decided not to use it

18
00:00:44,320 --> 00:00:46,079
about me i'm a senior security analyst

19
00:00:46,079 --> 00:00:48,000
for truest formally bb t focused on

20
00:00:48,000 --> 00:00:50,079
application security i've got a wide

21
00:00:50,079 --> 00:00:51,600
ranging background i've worked in web

22
00:00:51,600 --> 00:00:53,440
application development i've done devops

23
00:00:53,440 --> 00:00:55,360
in system administration i've done all

24
00:00:55,360 --> 00:00:56,879
kinds of blue team things but mostly

25
00:00:56,879 --> 00:00:58,559
focused on threat hunting and doing

26
00:00:58,559 --> 00:01:00,160
instant response

27
00:01:00,160 --> 00:01:01,600
for the past few years i've been really

28
00:01:01,600 --> 00:01:02,879
focused on application security and

29
00:01:02,879 --> 00:01:04,640
penetration testing

30
00:01:04,640 --> 00:01:07,280
and i'm very enterprising so some of

31
00:01:07,280 --> 00:01:08,640
what i'm talking about may not make

32
00:01:08,640 --> 00:01:10,799
sense for your smaller organizations i

33
00:01:10,799 --> 00:01:12,320
work in very large organizations that

34
00:01:12,320 --> 00:01:13,840
have hundreds of thousands or millions

35
00:01:13,840 --> 00:01:16,400
of users hundreds of applications and

36
00:01:16,400 --> 00:01:18,479
really really large attack surfaces and

37
00:01:18,479 --> 00:01:19,920
a large part of my work is figuring out

38
00:01:19,920 --> 00:01:20,799
how to

39
00:01:20,799 --> 00:01:22,400
cut down on our work

40
00:01:22,400 --> 00:01:23,600
and make sure that we've got all these

41
00:01:23,600 --> 00:01:25,439
nooks and crannies secured

42
00:01:25,439 --> 00:01:26,720
but even if you're working for a

43
00:01:26,720 --> 00:01:28,640
relatively small group that doesn't have

44
00:01:28,640 --> 00:01:30,560
as big of a problem as we do i think

45
00:01:30,560 --> 00:01:33,680
you'll find some of this useful

46
00:01:33,840 --> 00:01:35,600
obligatory disclaimer i'm not speaking

47
00:01:35,600 --> 00:01:38,079
on behalf of tourist bb t or any other

48
00:01:38,079 --> 00:01:42,320
entity all opinions expressed on my own

49
00:01:42,479 --> 00:01:43,520
so you're going to be seeing a lot of

50
00:01:43,520 --> 00:01:45,439
photos of this guy and you may if you're

51
00:01:45,439 --> 00:01:47,200
not familiar with the

52
00:01:47,200 --> 00:01:48,799
immigrant punk scene you may not be

53
00:01:48,799 --> 00:01:50,720
feeling familiar with him but this is

54
00:01:50,720 --> 00:01:53,680
eugene hoots who is the lead singer of

55
00:01:53,680 --> 00:01:55,920
a group called gogo bordello and they

56
00:01:55,920 --> 00:01:57,439
are most famous for a song called start

57
00:01:57,439 --> 00:01:59,920
wearing purple and i've thrown some

58
00:01:59,920 --> 00:02:01,600
pictures of in him in my natural

59
00:02:01,600 --> 00:02:03,759
inclination is to do really really dull

60
00:02:03,759 --> 00:02:06,719
presentations where it's just text and

61
00:02:06,719 --> 00:02:08,239
people like a little bit more excitement

62
00:02:08,239 --> 00:02:10,080
and as you can see he is a very

63
00:02:10,080 --> 00:02:11,840
evocative gentleman who is expressive

64
00:02:11,840 --> 00:02:13,680
with his face so i chose some

65
00:02:13,680 --> 00:02:14,959
interesting photos to keep you guys

66
00:02:14,959 --> 00:02:17,440
engaged

67
00:02:17,599 --> 00:02:19,200
the agenda for this talk i'm going to

68
00:02:19,200 --> 00:02:20,959
give a kind of overview of what purple

69
00:02:20,959 --> 00:02:22,879
teams are and how they work i'm going to

70
00:02:22,879 --> 00:02:24,879
touch briefly on best dynamic

71
00:02:24,879 --> 00:02:26,640
application security testing just in

72
00:02:26,640 --> 00:02:28,080
case you're not familiar with how those

73
00:02:28,080 --> 00:02:29,760
work i'm going to talk about the

74
00:02:29,760 --> 00:02:31,040
specific problems i've encountered

75
00:02:31,040 --> 00:02:33,280
making bass more purple and some of the

76
00:02:33,280 --> 00:02:35,360
ways to address it and some general

77
00:02:35,360 --> 00:02:36,480
strategies for making application

78
00:02:36,480 --> 00:02:38,480
security more purple

79
00:02:38,480 --> 00:02:40,000
i'm not really going to touch a lot on

80
00:02:40,000 --> 00:02:43,360
the ci dev devsecops type of work

81
00:02:43,360 --> 00:02:46,879
but i'll i will glance on it

82
00:02:46,879 --> 00:02:50,160
so purple team in a nutshell

83
00:02:50,160 --> 00:02:51,680
the offensive and defensive staff

84
00:02:51,680 --> 00:02:52,879
working together

85
00:02:52,879 --> 00:02:54,959
it's realigning so that the techniques

86
00:02:54,959 --> 00:02:57,599
and strategies the teams and incentives

87
00:02:57,599 --> 00:02:59,599
all drive the offensive and defensive

88
00:02:59,599 --> 00:03:01,519
teams working together with a singular

89
00:03:01,519 --> 00:03:03,680
goal of making the company or enterprise

90
00:03:03,680 --> 00:03:05,680
more secure rather than working within

91
00:03:05,680 --> 00:03:07,840
their narrow towers

92
00:03:07,840 --> 00:03:09,680
and maybe not being as effective as they

93
00:03:09,680 --> 00:03:13,200
could be working hand in hand

94
00:03:14,319 --> 00:03:16,080
blue teams often perceive in kind of

95
00:03:16,080 --> 00:03:17,680
adversarial relationship with the red

96
00:03:17,680 --> 00:03:19,200
team

97
00:03:19,200 --> 00:03:20,560
there's this feeling that someone's

98
00:03:20,560 --> 00:03:22,400
going to come in find a vulnerability

99
00:03:22,400 --> 00:03:23,519
kind of punch you in the face because

100
00:03:23,519 --> 00:03:25,680
you can't detect block or mitigate it

101
00:03:25,680 --> 00:03:27,040
and then go tell the senior management

102
00:03:27,040 --> 00:03:29,120
that there's a problem so it's all about

103
00:03:29,120 --> 00:03:32,400
trying to avoid this for the most part

104
00:03:32,400 --> 00:03:33,599
i'm going to go in and do the thing that

105
00:03:33,599 --> 00:03:34,720
you're not supposed to do and just read

106
00:03:34,720 --> 00:03:36,159
the slide this is a great quote from

107
00:03:36,159 --> 00:03:37,680
daniel measler who's one of the leading

108
00:03:37,680 --> 00:03:39,680
thought leaders in the space a purple

109
00:03:39,680 --> 00:03:41,120
team is a function designed to enhance

110
00:03:41,120 --> 00:03:42,879
information sharing between and the

111
00:03:42,879 --> 00:03:44,080
ultimate effectiveness of an

112
00:03:44,080 --> 00:03:47,120
organization's random blue teams

113
00:03:47,120 --> 00:03:48,720
for the purposes of this talk i'm going

114
00:03:48,720 --> 00:03:50,319
to be using red as generic offensive

115
00:03:50,319 --> 00:03:52,560
security this could be das the dynamic

116
00:03:52,560 --> 00:03:54,560
application scanning the sas the source

117
00:03:54,560 --> 00:03:56,400
code scanning things like black duck

118
00:03:56,400 --> 00:03:57,280
that look for open source

119
00:03:57,280 --> 00:03:58,480
vulnerabilities

120
00:03:58,480 --> 00:03:59,519
anything that's like a more

121
00:03:59,519 --> 00:04:00,959
sophisticated pen test or red team

122
00:04:00,959 --> 00:04:02,799
engagement and blue is just the

123
00:04:02,799 --> 00:04:04,400
defensive staff in general

124
00:04:04,400 --> 00:04:05,760
this could be the security operations

125
00:04:05,760 --> 00:04:07,120
center staff the people who work

126
00:04:07,120 --> 00:04:08,799
responding to alerts could be the people

127
00:04:08,799 --> 00:04:11,040
who monitor and tune the firewalls and

128
00:04:11,040 --> 00:04:12,959
the web application firewalls it could

129
00:04:12,959 --> 00:04:14,879
involve the threat intel groups

130
00:04:14,879 --> 00:04:16,478
operations the people who are running

131
00:04:16,478 --> 00:04:18,560
the systems and the developers are even

132
00:04:18,560 --> 00:04:20,079
tied in as part of this

133
00:04:20,079 --> 00:04:21,279
so it's

134
00:04:21,279 --> 00:04:22,639
you'll find different definitions of red

135
00:04:22,639 --> 00:04:23,840
and blue in different talks but for the

136
00:04:23,840 --> 00:04:25,600
purposes of this talk i'm going to be

137
00:04:25,600 --> 00:04:28,720
using these

138
00:04:28,720 --> 00:04:30,400
some more definitions it's a

139
00:04:30,400 --> 00:04:31,759
collaborative effort between the

140
00:04:31,759 --> 00:04:34,560
defenders and simulated attackers

141
00:04:34,560 --> 00:04:37,759
to figure out how attackers can get in

142
00:04:37,759 --> 00:04:39,759
the first step of any serious attack is

143
00:04:39,759 --> 00:04:41,680
getting getting that foothold and once

144
00:04:41,680 --> 00:04:42,880
you get the foothold then they start

145
00:04:42,880 --> 00:04:44,639
looking around for what they can plunder

146
00:04:44,639 --> 00:04:46,400
on that system or start pivoting deeper

147
00:04:46,400 --> 00:04:48,160
and deepening the systems into other

148
00:04:48,160 --> 00:04:50,240
systems

149
00:04:50,240 --> 00:04:51,600
using this strategy you can start

150
00:04:51,600 --> 00:04:52,800
finding the ways that they get that

151
00:04:52,800 --> 00:04:55,280
initial foothold and cut them off

152
00:04:55,280 --> 00:04:56,720
it's working to make sure that if they

153
00:04:56,720 --> 00:04:58,240
do get that foothold you can detect them

154
00:04:58,240 --> 00:04:59,919
right after they occur

155
00:04:59,919 --> 00:05:01,360
how to make sure that you can spot them

156
00:05:01,360 --> 00:05:02,880
after they started start pivoting from

157
00:05:02,880 --> 00:05:05,120
one system to another or d

158
00:05:05,120 --> 00:05:06,960
in some cases going from one level of

159
00:05:06,960 --> 00:05:08,880
access to another

160
00:05:08,880 --> 00:05:10,560
it's timing them making it harder

161
00:05:10,560 --> 00:05:12,000
because

162
00:05:12,000 --> 00:05:13,520
you cut down on what they can do inside

163
00:05:13,520 --> 00:05:15,280
the network and reducing the available

164
00:05:15,280 --> 00:05:18,000
tools there on the system so a purple

165
00:05:18,000 --> 00:05:19,840
team engagement might say we found that

166
00:05:19,840 --> 00:05:21,360
netcat was pre-installed in systems and

167
00:05:21,360 --> 00:05:22,880
i was able to use that to effectively

168
00:05:22,880 --> 00:05:24,720
pull in other tools so unless there's

169
00:05:24,720 --> 00:05:26,400
this legitimate system reason why to

170
00:05:26,400 --> 00:05:28,240
have netcat on that system go ahead and

171
00:05:28,240 --> 00:05:30,000
pull it off

172
00:05:30,000 --> 00:05:31,280
and it just generally increases

173
00:05:31,280 --> 00:05:32,960
education and situational awareness of

174
00:05:32,960 --> 00:05:35,600
what goes on in the specific enterprise

175
00:05:35,600 --> 00:05:37,440
on both sides

176
00:05:37,440 --> 00:05:38,880
so the blue team doesn't necessarily

177
00:05:38,880 --> 00:05:40,320
know what how attackers are going to be

178
00:05:40,320 --> 00:05:41,520
targeting them

179
00:05:41,520 --> 00:05:42,960
the red team doesn't necessarily know

180
00:05:42,960 --> 00:05:44,400
exactly what's

181
00:05:44,400 --> 00:05:46,479
available what targets are available

182
00:05:46,479 --> 00:05:47,919
what weaknesses the blue team knows

183
00:05:47,919 --> 00:05:49,680
about so by increasing the information

184
00:05:49,680 --> 00:05:52,000
sharing between the two teams it lets

185
00:05:52,000 --> 00:05:54,000
both sides work more effectively

186
00:05:54,000 --> 00:05:55,840
and the bottom line for management is it

187
00:05:55,840 --> 00:05:57,520
increases the return on investment that

188
00:05:57,520 --> 00:05:59,600
they put into both teams and it makes

189
00:05:59,600 --> 00:06:00,880
them both more effective using a

190
00:06:00,880 --> 00:06:03,520
feedback loop

191
00:06:05,440 --> 00:06:07,360
so as an offensive security practitioner

192
00:06:07,360 --> 00:06:08,880
i try to be very aware that simply

193
00:06:08,880 --> 00:06:10,319
finding vulnerabilities does not make

194
00:06:10,319 --> 00:06:12,479
the company more secure

195
00:06:12,479 --> 00:06:14,319
it's the going through i mean going

196
00:06:14,319 --> 00:06:15,360
through and getting the vulnerabilities

197
00:06:15,360 --> 00:06:16,800
immediate it definitely makes it more

198
00:06:16,800 --> 00:06:18,240
secure as well

199
00:06:18,240 --> 00:06:20,240
but with the large attack surfaces in

200
00:06:20,240 --> 00:06:21,680
modern enterprises

201
00:06:21,680 --> 00:06:23,199
it's not necessarily practical to do

202
00:06:23,199 --> 00:06:25,199
significant testing on every part of it

203
00:06:25,199 --> 00:06:26,720
you have to make the blue team more

204
00:06:26,720 --> 00:06:28,560
effective at doing their job as part of

205
00:06:28,560 --> 00:06:30,400
testing

206
00:06:30,400 --> 00:06:32,720
things change rapidly with devops things

207
00:06:32,720 --> 00:06:33,840
can change

208
00:06:33,840 --> 00:06:35,199
new systems can be deployed in a matter

209
00:06:35,199 --> 00:06:37,360
of minutes in some cases companies are

210
00:06:37,360 --> 00:06:39,199
rolling out new code

211
00:06:39,199 --> 00:06:40,960
multiple times a day there's simply no

212
00:06:40,960 --> 00:06:42,639
way that security can test every single

213
00:06:42,639 --> 00:06:44,639
bit of it but what you can do is make

214
00:06:44,639 --> 00:06:46,160
the blue team more effectively detecting

215
00:06:46,160 --> 00:06:48,080
attacks by letting them know how things

216
00:06:48,080 --> 00:06:49,680
work

217
00:06:49,680 --> 00:06:50,960
if you have what you consider to be a

218
00:06:50,960 --> 00:06:52,880
successful attack where you found a

219
00:06:52,880 --> 00:06:54,479
vulnerability if you haven't taken that

220
00:06:54,479 --> 00:06:55,919
as an opportunity to make the blue team

221
00:06:55,919 --> 00:06:59,840
more effective to me that's a failure

222
00:07:01,120 --> 00:07:03,280
pushing appstack right so the concept of

223
00:07:03,280 --> 00:07:04,960
pushing application security left into

224
00:07:04,960 --> 00:07:06,240
the ci pipeline and that sort of thing

225
00:07:06,240 --> 00:07:08,080
has been a huge buzzword in the industry

226
00:07:08,080 --> 00:07:09,520
and i fully agree with it and that's

227
00:07:09,520 --> 00:07:11,039
part of my work as well

228
00:07:11,039 --> 00:07:12,639
but i also like the idea of pushing it

229
00:07:12,639 --> 00:07:14,720
right so if left is the development

230
00:07:14,720 --> 00:07:16,800
cycle right as people in operations

231
00:07:16,800 --> 00:07:18,720
actually running it

232
00:07:18,720 --> 00:07:20,720
they're the last lines of defense

233
00:07:20,720 --> 00:07:22,960
there's an old truism that

234
00:07:22,960 --> 00:07:24,639
an attacker only needs the defense to

235
00:07:24,639 --> 00:07:26,319
fail wants to be able to get in but at

236
00:07:26,319 --> 00:07:27,759
the same time

237
00:07:27,759 --> 00:07:29,520
just getting in usually isn't the end

238
00:07:29,520 --> 00:07:30,639
goal

239
00:07:30,639 --> 00:07:32,160
the attacker only needs to mess up once

240
00:07:32,160 --> 00:07:34,319
for the defensive side to find it also

241
00:07:34,319 --> 00:07:35,919
so by helping provide the blue team with

242
00:07:35,919 --> 00:07:37,680
the skills to find it early in the

243
00:07:37,680 --> 00:07:39,599
attack phase you can cut them off before

244
00:07:39,599 --> 00:07:41,520
anything significant happens

245
00:07:41,520 --> 00:07:42,720
you don't necessarily want to ever tell

246
00:07:42,720 --> 00:07:44,479
your boss that you know a system was

247
00:07:44,479 --> 00:07:46,479
breached and they got a web show on but

248
00:07:46,479 --> 00:07:48,000
that's a far better thing to tell them

249
00:07:48,000 --> 00:07:49,120
than say

250
00:07:49,120 --> 00:07:50,800
they then got domain admin control and

251
00:07:50,800 --> 00:07:51,759
we're able to pivot throughout the

252
00:07:51,759 --> 00:07:53,120
entire network and x will treat all of

253
00:07:53,120 --> 00:07:55,440
our customer data

254
00:07:55,440 --> 00:07:57,280
so the part of the point of the concept

255
00:07:57,280 --> 00:07:59,680
this entire concept is moving

256
00:07:59,680 --> 00:08:01,759
application security specifically right

257
00:08:01,759 --> 00:08:03,280
into the area of the sock work where

258
00:08:03,280 --> 00:08:04,639
typically i've found that there's not

259
00:08:04,639 --> 00:08:06,080
been great training

260
00:08:06,080 --> 00:08:09,680
not great opportunities there

261
00:08:10,160 --> 00:08:11,840
so purple is a spectrum like the

262
00:08:11,840 --> 00:08:13,520
background of the slide

263
00:08:13,520 --> 00:08:15,280
you don't have to do everything that i

264
00:08:15,280 --> 00:08:17,120
talk about be called purple you can come

265
00:08:17,120 --> 00:08:18,319
up with your own ideas to be called

266
00:08:18,319 --> 00:08:20,080
purple it's all about going through and

267
00:08:20,080 --> 00:08:21,440
picking and choosing which parts of the

268
00:08:21,440 --> 00:08:23,039
concepts work for you for your

269
00:08:23,039 --> 00:08:25,120
applications for your staff and choosing

270
00:08:25,120 --> 00:08:28,560
what's going to be most effective

271
00:08:29,360 --> 00:08:30,639
so i'm going to do a little walk through

272
00:08:30,639 --> 00:08:33,599
with eugene and sergi

273
00:08:33,599 --> 00:08:35,120
eugene would be another man to know

274
00:08:35,120 --> 00:08:36,719
where the band

275
00:08:36,719 --> 00:08:38,640
so in a more conventional purple team

276
00:08:38,640 --> 00:08:40,880
engagement we have sergey over here who

277
00:08:40,880 --> 00:08:42,958
is the penetration tester and he

278
00:08:42,958 --> 00:08:44,880
lets the blue team know that he just

279
00:08:44,880 --> 00:08:47,120
used a zero to attack tool that just

280
00:08:47,120 --> 00:08:48,560
dropped wants to know if there was any

281
00:08:48,560 --> 00:08:50,000
defensive capability of spotting or

282
00:08:50,000 --> 00:08:52,160
mitigating it

283
00:08:52,160 --> 00:08:53,760
here we have our very stressed out sock

284
00:08:53,760 --> 00:08:55,839
operator who responds and says

285
00:08:55,839 --> 00:08:57,360
no there was not actually visibility

286
00:08:57,360 --> 00:08:59,519
into it but now that they know that the

287
00:08:59,519 --> 00:09:00,720
issue exists and that there is an

288
00:09:00,720 --> 00:09:02,080
exploitable vulnerability within the

289
00:09:02,080 --> 00:09:04,080
system they've gone ahead and deployed a

290
00:09:04,080 --> 00:09:06,800
detection pattern that should help

291
00:09:06,800 --> 00:09:08,399
and in doing the research he's also come

292
00:09:08,399 --> 00:09:10,399
up with some additional information

293
00:09:10,399 --> 00:09:12,160
that might be interesting to do in a

294
00:09:12,160 --> 00:09:13,440
retest

295
00:09:13,440 --> 00:09:15,600
of the tool

296
00:09:15,600 --> 00:09:17,519
as part of the feedback loop he

297
00:09:17,519 --> 00:09:19,120
the pen tester takes that additional

298
00:09:19,120 --> 00:09:21,120
tool that the defensive team found

299
00:09:21,120 --> 00:09:23,519
applies it and runs the test again and

300
00:09:23,519 --> 00:09:26,720
double checks to see if it worked

301
00:09:26,720 --> 00:09:28,880
yet again our stock analyst working in

302
00:09:28,880 --> 00:09:30,720
direct communication with the pen tester

303
00:09:30,720 --> 00:09:32,880
can say okay

304
00:09:32,880 --> 00:09:34,959
that part worked and i've now enabled an

305
00:09:34,959 --> 00:09:38,000
additional feature in the end

306
00:09:41,200 --> 00:09:43,360
based on that feedback the defense team

307
00:09:43,360 --> 00:09:45,279
can then say okay that encoding

308
00:09:45,279 --> 00:09:47,360
technique did or didn't work and perhaps

309
00:09:47,360 --> 00:09:50,560
enable an additional feature on the

310
00:09:53,040 --> 00:09:54,480
based on that additional feedback the

311
00:09:54,480 --> 00:09:56,560
defense's team can then say okay that

312
00:09:56,560 --> 00:09:58,399
encoding did or didn't work and maybe

313
00:09:58,399 --> 00:10:00,800
enable an additional encoding tool to

314
00:10:00,800 --> 00:10:03,519
help be able to detect it

315
00:10:03,519 --> 00:10:04,800
at the end of the day the team working

316
00:10:04,800 --> 00:10:06,240
together has pulled off performance and

317
00:10:06,240 --> 00:10:09,279
everyone takes a big battle

318
00:10:10,480 --> 00:10:13,200
so just as a note a purple team is not a

319
00:10:13,200 --> 00:10:15,120
team per se it's

320
00:10:15,120 --> 00:10:17,200
not really someone's job title

321
00:10:17,200 --> 00:10:19,839
it's a ethos and way of working where

322
00:10:19,839 --> 00:10:21,440
someone may still be red team someone

323
00:10:21,440 --> 00:10:23,519
may still be blue team it's just a way

324
00:10:23,519 --> 00:10:24,880
of changing how they think and how they

325
00:10:24,880 --> 00:10:27,760
interact with each other

326
00:10:29,519 --> 00:10:31,600
when everything works well the purple

327
00:10:31,600 --> 00:10:34,079
team system is relatively simple

328
00:10:34,079 --> 00:10:34,800
you

329
00:10:34,800 --> 00:10:36,560
the attackers locate a vulnerability

330
00:10:36,560 --> 00:10:38,240
they exploit the vulnerability

331
00:10:38,240 --> 00:10:39,760
they work together with the blue team to

332
00:10:39,760 --> 00:10:41,440
say where are the gaps in the logging

333
00:10:41,440 --> 00:10:43,600
and or mitigations and work to remediate

334
00:10:43,600 --> 00:10:44,800
it together

335
00:10:44,800 --> 00:10:46,480
they resolve the issue and then they

336
00:10:46,480 --> 00:10:48,480
train the staff on what happened how to

337
00:10:48,480 --> 00:10:52,320
detect it and look for similar things

338
00:10:53,760 --> 00:10:55,279
some silos have observed working

339
00:10:55,279 --> 00:10:56,959
application security

340
00:10:56,959 --> 00:10:58,959
the red team testing applications may

341
00:10:58,959 --> 00:11:00,399
know how to tack the applications they

342
00:11:00,399 --> 00:11:02,240
can run tools against it and look at

343
00:11:02,240 --> 00:11:03,680
what the results are but they don't

344
00:11:03,680 --> 00:11:04,959
necessarily understand the underlying

345
00:11:04,959 --> 00:11:05,760
work

346
00:11:05,760 --> 00:11:07,519
they may not know javascript they may

347
00:11:07,519 --> 00:11:10,399
not know python

348
00:11:12,800 --> 00:11:14,240
some silos are observed working

349
00:11:14,240 --> 00:11:16,240
application security the red team may

350
00:11:16,240 --> 00:11:18,720
not know

351
00:11:20,160 --> 00:11:21,680
some silos have observed working

352
00:11:21,680 --> 00:11:23,839
application security the red team may

353
00:11:23,839 --> 00:11:25,279
know how to attack applications but they

354
00:11:25,279 --> 00:11:26,959
don't necessarily know how they work

355
00:11:26,959 --> 00:11:29,120
under the hood they may not be familiar

356
00:11:29,120 --> 00:11:31,120
with the topology on the network is

357
00:11:31,120 --> 00:11:32,399
whether there's a waf whether there's

358
00:11:32,399 --> 00:11:33,600
load balancing that might be affecting

359
00:11:33,600 --> 00:11:35,360
the results and they don't necessarily

360
00:11:35,360 --> 00:11:37,200
understand how some of these can skew

361
00:11:37,200 --> 00:11:38,800
the results

362
00:11:38,800 --> 00:11:40,000
the blue team can see the attacks

363
00:11:40,000 --> 00:11:41,440
happening and they can respond to alerts

364
00:11:41,440 --> 00:11:42,640
if there's alerts going off but they

365
00:11:42,640 --> 00:11:44,399
don't necessarily know how to differ

366
00:11:44,399 --> 00:11:46,320
differentiate between the severity of

367
00:11:46,320 --> 00:11:48,079
different types of attacks whether

368
00:11:48,079 --> 00:11:50,160
something is a successful sql injection

369
00:11:50,160 --> 00:11:52,000
attack that needs to be up acted on

370
00:11:52,000 --> 00:11:53,920
immediately or just noise on the

371
00:11:53,920 --> 00:11:55,120
internet

372
00:11:55,120 --> 00:11:57,839
and

373
00:12:00,480 --> 00:12:01,920
some silos have observed working in

374
00:12:01,920 --> 00:12:03,440
application security

375
00:12:03,440 --> 00:12:04,800
the red team may know how to attack

376
00:12:04,800 --> 00:12:06,399
applications but they don't necessarily

377
00:12:06,399 --> 00:12:07,680
understand what's going underneath the

378
00:12:07,680 --> 00:12:08,560
hood

379
00:12:08,560 --> 00:12:09,920
they may not understand what the network

380
00:12:09,920 --> 00:12:11,680
topology is whether there's things like

381
00:12:11,680 --> 00:12:13,040
glass or load balancers that may be

382
00:12:13,040 --> 00:12:15,040
throwing out the results and as a result

383
00:12:15,040 --> 00:12:16,480
they may not be getting the results they

384
00:12:16,480 --> 00:12:18,160
think they're getting this can skew

385
00:12:18,160 --> 00:12:19,600
whether something is a true or false

386
00:12:19,600 --> 00:12:20,639
positive

387
00:12:20,639 --> 00:12:21,920
the blue team can see the attacks

388
00:12:21,920 --> 00:12:23,440
happening they can respond if alerts are

389
00:12:23,440 --> 00:12:25,760
going off inside their detection engines

390
00:12:25,760 --> 00:12:26,880
but they may not know how to

391
00:12:26,880 --> 00:12:28,399
differentiate between a successful and

392
00:12:28,399 --> 00:12:30,480
unsuccessful sql injection attack and

393
00:12:30,480 --> 00:12:32,639
that can be very important in responding

394
00:12:32,639 --> 00:12:34,480
to a real world attacker that's

395
00:12:34,480 --> 00:12:36,079
important versus spending time on

396
00:12:36,079 --> 00:12:37,360
something that's just noise from being

397
00:12:37,360 --> 00:12:38,720
on the internet

398
00:12:38,720 --> 00:12:40,480
they may not know the difference between

399
00:12:40,480 --> 00:12:42,320
the impact of sql injection cross-site

400
00:12:42,320 --> 00:12:44,560
scripting and how to prioritize as

401
00:12:44,560 --> 00:12:46,399
another example

402
00:12:46,399 --> 00:12:47,760
developers for the most part they just

403
00:12:47,760 --> 00:12:49,440
want to add the features and keep the

404
00:12:49,440 --> 00:12:51,200
system relatively stable that's

405
00:12:51,200 --> 00:12:52,320
typically what they're incentivized to

406
00:12:52,320 --> 00:12:55,120
do rather than building for security

407
00:12:55,120 --> 00:12:56,480
so

408
00:12:56,480 --> 00:12:57,760
i'm not going to talk too much about the

409
00:12:57,760 --> 00:12:59,120
developers but definitely keeping them

410
00:12:59,120 --> 00:13:00,480
in the loop about

411
00:13:00,480 --> 00:13:01,839
what is effective what makes the

412
00:13:01,839 --> 00:13:03,360
attacker's lives harder it can be really

413
00:13:03,360 --> 00:13:06,000
important

414
00:13:06,000 --> 00:13:07,600
dest dynamic application security

415
00:13:07,600 --> 00:13:10,240
testing in a nutshell

416
00:13:10,240 --> 00:13:11,680
this is the easiest and cheapest way to

417
00:13:11,680 --> 00:13:13,920
do application security testing you may

418
00:13:13,920 --> 00:13:15,920
know it from tools such as zap proxy or

419
00:13:15,920 --> 00:13:18,399
burp suite where you're doing black box

420
00:13:18,399 --> 00:13:20,639
testing is guess an application you do a

421
00:13:20,639 --> 00:13:22,079
little bit of heuristics looking at what

422
00:13:22,079 --> 00:13:24,240
comes back in responses for things like

423
00:13:24,240 --> 00:13:26,079
a vulnerable javascript library or

424
00:13:26,079 --> 00:13:27,519
whether it's got headers indicate that

425
00:13:27,519 --> 00:13:28,800
there's a vulnerability but for the most

426
00:13:28,800 --> 00:13:30,720
part it's fuzzing and i'm not using

427
00:13:30,720 --> 00:13:32,800
fuzzing in a complete garbage sense here

428
00:13:32,800 --> 00:13:34,880
but just fuzzing is in this context is

429
00:13:34,880 --> 00:13:36,959
throwing inappropriate inputs

430
00:13:36,959 --> 00:13:38,399
at the

431
00:13:38,399 --> 00:13:40,320
web application and looking at what

432
00:13:40,320 --> 00:13:41,440
comes back and trying to guess whether

433
00:13:41,440 --> 00:13:43,199
there is a successful attack based on

434
00:13:43,199 --> 00:13:44,000
that

435
00:13:44,000 --> 00:13:45,199
so you may be throwing in special

436
00:13:45,199 --> 00:13:47,360
characters that trigger sql and looking

437
00:13:47,360 --> 00:13:49,279
to see if there's a sql error and once

438
00:13:49,279 --> 00:13:50,560
you find that you can go ahead and

439
00:13:50,560 --> 00:13:52,800
actually do a successful attack using it

440
00:13:52,800 --> 00:13:54,240
you may be putting special characters

441
00:13:54,240 --> 00:13:56,480
that create javascript which lets you do

442
00:13:56,480 --> 00:13:58,560
a cross-site scripting attack

443
00:13:58,560 --> 00:14:00,240
but the key point it's all about

444
00:14:00,240 --> 00:14:02,000
interacting with a server sending it

445
00:14:02,000 --> 00:14:03,040
something that the server is not

446
00:14:03,040 --> 00:14:04,720
expecting that it handles in an

447
00:14:04,720 --> 00:14:06,880
inappropriate manner and deducing that

448
00:14:06,880 --> 00:14:10,000
there's a vulnerability that way

449
00:14:10,000 --> 00:14:11,519
because it's doing all these tests

450
00:14:11,519 --> 00:14:13,279
blindly it can generate tens of

451
00:14:13,279 --> 00:14:15,040
thousands if not hundreds of thousands

452
00:14:15,040 --> 00:14:17,920
of requests the web server and almost

453
00:14:17,920 --> 00:14:18,880
all of those are going to show up as

454
00:14:18,880 --> 00:14:20,000
something offensive if you've got a

455
00:14:20,000 --> 00:14:22,160
well-tuned web application web

456
00:14:22,160 --> 00:14:24,320
application firewall

457
00:14:24,320 --> 00:14:26,000
it's really noisy and it's really easy

458
00:14:26,000 --> 00:14:28,079
to spot if you run it at a normal speed

459
00:14:28,079 --> 00:14:30,000
if you're doing in a stealthy fashion

460
00:14:30,000 --> 00:14:31,760
you can do tests here and there and get

461
00:14:31,760 --> 00:14:33,120
very slow results back without

462
00:14:33,120 --> 00:14:34,720
necessarily triggering a whole lot of

463
00:14:34,720 --> 00:14:36,959
intention from the defense but you can't

464
00:14:36,959 --> 00:14:39,120
get good coverage of an application so

465
00:14:39,120 --> 00:14:40,480
typically you just point it out

466
00:14:40,480 --> 00:14:41,839
application

467
00:14:41,839 --> 00:14:44,480
and go and then there's the tens of

468
00:14:44,480 --> 00:14:45,600
thousands hundreds of thousands of

469
00:14:45,600 --> 00:14:48,560
requests that i mentioned

470
00:14:48,800 --> 00:14:50,639
why destiny's improvement

471
00:14:50,639 --> 00:14:52,480
so i'm going to do a little comparison

472
00:14:52,480 --> 00:14:54,959
between das tests and attackers a das

473
00:14:54,959 --> 00:14:56,399
test in my experience is typically run

474
00:14:56,399 --> 00:14:59,120
for one to two days it's mostly if not

475
00:14:59,120 --> 00:15:00,880
entirely automated in

476
00:15:00,880 --> 00:15:02,959
that fashion there's def

477
00:15:02,959 --> 00:15:04,720
there's longer attacks that are do use

478
00:15:04,720 --> 00:15:06,880
task tools that go on for a week or

479
00:15:06,880 --> 00:15:08,800
longer they're done with more hands-on

480
00:15:08,800 --> 00:15:10,560
tools i tend to think of those more as

481
00:15:10,560 --> 00:15:12,720
an application pen test than what i

482
00:15:12,720 --> 00:15:14,320
think of as a dust which is more of the

483
00:15:14,320 --> 00:15:16,399
automated testing

484
00:15:16,399 --> 00:15:17,680
and it's mostly separate tests for

485
00:15:17,680 --> 00:15:19,440
discrete issues it doesn't typically

486
00:15:19,440 --> 00:15:20,800
look at how different things can be

487
00:15:20,800 --> 00:15:21,920
chained together

488
00:15:21,920 --> 00:15:23,839
so a very common thing is you might have

489
00:15:23,839 --> 00:15:25,680
cross-site scripting that on its own

490
00:15:25,680 --> 00:15:27,279
doesn't seem that important but you can

491
00:15:27,279 --> 00:15:28,959
use that to grab the session cookie from

492
00:15:28,959 --> 00:15:30,560
an administrator and use the

493
00:15:30,560 --> 00:15:32,399
administrators access to upload a web

494
00:15:32,399 --> 00:15:34,399
shell or do something else that executes

495
00:15:34,399 --> 00:15:36,639
commands on the server itself

496
00:15:36,639 --> 00:15:38,560
the automated tools don't typically do

497
00:15:38,560 --> 00:15:39,920
that and if you've got a very limited

498
00:15:39,920 --> 00:15:41,279
period of time you may not be able to

499
00:15:41,279 --> 00:15:42,480
spot it even if you're doing some

500
00:15:42,480 --> 00:15:43,920
hands-on

501
00:15:43,920 --> 00:15:45,519
attackers on the other hand they've got

502
00:15:45,519 --> 00:15:46,800
as long as they need

503
00:15:46,800 --> 00:15:48,320
as i mentioned i work for large

504
00:15:48,320 --> 00:15:49,920
organizations that get a lot of

505
00:15:49,920 --> 00:15:52,000
attention from the various groups known

506
00:15:52,000 --> 00:15:53,680
as apts i've worked in banking i've

507
00:15:53,680 --> 00:15:55,360
worked in major publishing i've worked

508
00:15:55,360 --> 00:15:58,000
in a major university

509
00:15:58,000 --> 00:15:59,199
they're interested in what companies

510
00:15:59,199 --> 00:16:00,639
like that have and even if you're not a

511
00:16:00,639 --> 00:16:02,160
giant financial institution if you're

512
00:16:02,160 --> 00:16:03,759
not a giant university

513
00:16:03,759 --> 00:16:04,880
you'd be surprised at some of the

514
00:16:04,880 --> 00:16:06,160
businesses these companies are going

515
00:16:06,160 --> 00:16:07,040
after

516
00:16:07,040 --> 00:16:08,800
things like ransomware and the uptick

517
00:16:08,800 --> 00:16:10,320
and if your company has millions of

518
00:16:10,320 --> 00:16:12,079
dollars and that they can get them out

519
00:16:12,079 --> 00:16:13,279
of you

520
00:16:13,279 --> 00:16:15,519
by blackmailing you with your files

521
00:16:15,519 --> 00:16:17,600
you are now of interest

522
00:16:17,600 --> 00:16:19,040
the attackers can combine the automated

523
00:16:19,040 --> 00:16:20,800
and manual testing they can find that

524
00:16:20,800 --> 00:16:22,560
interesting little grain of oh there's a

525
00:16:22,560 --> 00:16:24,240
cross-site scripting vulnerability what

526
00:16:24,240 --> 00:16:26,160
can i do with it and then they combine

527
00:16:26,160 --> 00:16:27,440
the different vulnerabilities to achieve

528
00:16:27,440 --> 00:16:30,000
their goals

529
00:16:31,600 --> 00:16:33,199
if you work hand in hand you can test

530
00:16:33,199 --> 00:16:35,199
smarter so

531
00:16:35,199 --> 00:16:36,880
as part of os you may be familiar with

532
00:16:36,880 --> 00:16:38,639
durbuster it's if you're not it's a

533
00:16:38,639 --> 00:16:40,720
popular tool that guesses files and

534
00:16:40,720 --> 00:16:42,240
directories based on really common file

535
00:16:42,240 --> 00:16:43,839
names and extensions

536
00:16:43,839 --> 00:16:46,560
it breaks through security security

537
00:16:46,560 --> 00:16:48,399
it can be a standalone tool or a lot of

538
00:16:48,399 --> 00:16:49,920
the functionalities built into zap at

539
00:16:49,920 --> 00:16:50,880
this point

540
00:16:50,880 --> 00:16:52,079
and there's other similar tools that

541
00:16:52,079 --> 00:16:54,000
just say i know that there's a bunch of

542
00:16:54,000 --> 00:16:56,160
like slash tests slash

543
00:16:56,160 --> 00:16:57,759
images etc and we'll just go through in

544
00:16:57,759 --> 00:16:59,360
brute force

545
00:16:59,360 --> 00:17:00,720
but if you're working with a defensive

546
00:17:00,720 --> 00:17:02,240
team why spend time doing that when you

547
00:17:02,240 --> 00:17:04,079
can just work with the blue team and

548
00:17:04,079 --> 00:17:05,439
look at the actual file system and

549
00:17:05,439 --> 00:17:06,959
enumerate what's there

550
00:17:06,959 --> 00:17:08,079
rather than spending time that you could

551
00:17:08,079 --> 00:17:09,599
be spending doing more intelligent

552
00:17:09,599 --> 00:17:11,119
hands-on testing

553
00:17:11,119 --> 00:17:12,319
cheat and take advantage of the fact

554
00:17:12,319 --> 00:17:13,520
that you've got access to the system

555
00:17:13,520 --> 00:17:14,559
themselves

556
00:17:14,559 --> 00:17:15,679
in addition to looking at the file

557
00:17:15,679 --> 00:17:17,039
system you can do things like scrape the

558
00:17:17,039 --> 00:17:19,439
weblogs for non-obvious files and pads

559
00:17:19,439 --> 00:17:21,119
if you depending on how your system is

560
00:17:21,119 --> 00:17:22,640
configured there may be things that

561
00:17:22,640 --> 00:17:24,799
donate on the file system but exist as a

562
00:17:24,799 --> 00:17:26,880
valid path so by combining the two you

563
00:17:26,880 --> 00:17:27,919
can start making sure that you've got

564
00:17:27,919 --> 00:17:30,480
full coverage in your testing

565
00:17:30,480 --> 00:17:33,120
another example sql injection sql map is

566
00:17:33,120 --> 00:17:35,120
a great tool for detecting and then

567
00:17:35,120 --> 00:17:37,200
doing exploitation of sql

568
00:17:37,200 --> 00:17:39,760
vulnerability

569
00:17:40,880 --> 00:17:43,039
smarter sql injection sql map is a tool

570
00:17:43,039 --> 00:17:44,559
that many people are here probably

571
00:17:44,559 --> 00:17:46,400
familiar with it's a great tool it's

572
00:17:46,400 --> 00:17:48,160
used for finding and exploiting sql

573
00:17:48,160 --> 00:17:49,919
injection vulnerabilities

574
00:17:49,919 --> 00:17:51,360
but again it generates thousands of

575
00:17:51,360 --> 00:17:52,960
requests

576
00:17:52,960 --> 00:17:54,080
if you've got the ability to work with

577
00:17:54,080 --> 00:17:55,760
the blue team and just say for the

578
00:17:55,760 --> 00:17:57,360
temporary time during the test go ahead

579
00:17:57,360 --> 00:17:58,799
and turn on the database for both

580
00:17:58,799 --> 00:18:00,400
logging and look at everything that's

581
00:18:00,400 --> 00:18:02,320
flowing to the database you can get

582
00:18:02,320 --> 00:18:03,600
better results especially for things

583
00:18:03,600 --> 00:18:05,200
like blind sql injection then you can

584
00:18:05,200 --> 00:18:09,120
get just using an automated tool

585
00:18:09,120 --> 00:18:10,640
and just to clarify here i'm not just

586
00:18:10,640 --> 00:18:12,720
talking about gray box testing both the

587
00:18:12,720 --> 00:18:14,799
examples i just gave would be an example

588
00:18:14,799 --> 00:18:16,799
of just working with the gray box to

589
00:18:16,799 --> 00:18:18,080
open up some visibility into what's

590
00:18:18,080 --> 00:18:19,440
going underneath the hood

591
00:18:19,440 --> 00:18:20,960
i really want to stress that it's not

592
00:18:20,960 --> 00:18:22,400
just having the blue team do stuff for

593
00:18:22,400 --> 00:18:24,320
you but interacting with them and making

594
00:18:24,320 --> 00:18:25,600
sure that they share information that

595
00:18:25,600 --> 00:18:27,280
they know about the web application that

596
00:18:27,280 --> 00:18:29,440
you may not have visibility into

597
00:18:29,440 --> 00:18:30,559
the people who actually do the

598
00:18:30,559 --> 00:18:32,400
operations of the system

599
00:18:32,400 --> 00:18:34,320
they too will have some concepts about

600
00:18:34,320 --> 00:18:36,000
what might be vulnerable some things

601
00:18:36,000 --> 00:18:37,039
that keep them up at night worrying

602
00:18:37,039 --> 00:18:38,960
about it if you get on board and talk

603
00:18:38,960 --> 00:18:40,400
with them they can give you some really

604
00:18:40,400 --> 00:18:42,480
valuable feedback and similarly as a

605
00:18:42,480 --> 00:18:44,000
tester you can give them feedback about

606
00:18:44,000 --> 00:18:45,600
this is what made your life harder this

607
00:18:45,600 --> 00:18:47,120
is what made your life easier during the

608
00:18:47,120 --> 00:18:48,799
test so they can make it harder for the

609
00:18:48,799 --> 00:18:51,039
real world attackers

610
00:18:51,039 --> 00:18:52,720
and purpling problems i just had to go

611
00:18:52,720 --> 00:18:53,840
back to the word because it's so

612
00:18:53,840 --> 00:18:55,039
terrible

613
00:18:55,039 --> 00:18:57,360
problem number one is extremely noisy as

614
00:18:57,360 --> 00:18:58,720
a result of these hundreds of thousands

615
00:18:58,720 --> 00:19:01,120
of requests the ids the left et cetera

616
00:19:01,120 --> 00:19:03,520
they may be bypassed the specific rule

617
00:19:03,520 --> 00:19:05,039
they may be tuned out on that system or

618
00:19:05,039 --> 00:19:06,720
the analysts just may not be looking at

619
00:19:06,720 --> 00:19:08,799
it this makes sense because it'll drive

620
00:19:08,799 --> 00:19:10,880
them crazy crazy trying to pay attention

621
00:19:10,880 --> 00:19:12,400
to all those events or you may be

622
00:19:12,400 --> 00:19:14,240
charged by the event or by the amount of

623
00:19:14,240 --> 00:19:16,799
data flowing to your sim

624
00:19:16,799 --> 00:19:18,320
to solve this when you do find something

625
00:19:18,320 --> 00:19:19,919
that's exploitable go ahead and

626
00:19:19,919 --> 00:19:21,280
re-enable everything make sure that

627
00:19:21,280 --> 00:19:23,039
people are paying attention and rerun

628
00:19:23,039 --> 00:19:24,880
just the successful part of the attack

629
00:19:24,880 --> 00:19:26,559
you don't need to necessarily care that

630
00:19:26,559 --> 00:19:29,280
the noisy stuff that's not working is

631
00:19:29,280 --> 00:19:30,960
paid attention to you want to make sure

632
00:19:30,960 --> 00:19:32,400
that they're able to pay attention to

633
00:19:32,400 --> 00:19:35,200
and spot what does work

634
00:19:35,200 --> 00:19:36,720
problem number two

635
00:19:36,720 --> 00:19:38,880
it's often tested applications are often

636
00:19:38,880 --> 00:19:40,240
tested in non-production environments

637
00:19:40,240 --> 00:19:42,080
that don't have the full instrumentation

638
00:19:42,080 --> 00:19:43,919
of a production environment in some

639
00:19:43,919 --> 00:19:45,919
cases they may not be monitored at all

640
00:19:45,919 --> 00:19:47,120
so you may have separate test

641
00:19:47,120 --> 00:19:48,400
infrastructure that may be a separate

642
00:19:48,400 --> 00:19:49,679
test web that may not have the same

643
00:19:49,679 --> 00:19:52,000
configuration as the main infrastructure

644
00:19:52,000 --> 00:19:55,120
it may not have a waff at all

645
00:19:55,120 --> 00:19:57,200
to solve this again it's very similar

646
00:19:57,200 --> 00:19:58,480
when you have something that works

647
00:19:58,480 --> 00:20:00,720
replay it in the production system to

648
00:20:00,720 --> 00:20:04,240
see if it's detected and acted upon

649
00:20:04,240 --> 00:20:05,919
in some cases you don't actually need to

650
00:20:05,919 --> 00:20:08,000
attack the production infrastructure so

651
00:20:08,000 --> 00:20:09,280
if you have a dangerous vulnerability

652
00:20:09,280 --> 00:20:11,520
that could cause a production outage and

653
00:20:11,520 --> 00:20:12,559
you don't want to be running that

654
00:20:12,559 --> 00:20:14,640
against the main server

655
00:20:14,640 --> 00:20:16,640
but if all you're doing is tuning a waf

656
00:20:16,640 --> 00:20:19,039
or a ids ips

657
00:20:19,039 --> 00:20:20,640
you can simply send those packets to

658
00:20:20,640 --> 00:20:23,039
server that's not vulnerable

659
00:20:23,039 --> 00:20:24,960
all that really all that those detection

660
00:20:24,960 --> 00:20:26,799
capabilities care about is the offensive

661
00:20:26,799 --> 00:20:29,280
tool comes through the wire so the fact

662
00:20:29,280 --> 00:20:30,640
that the server itself is not vulnerable

663
00:20:30,640 --> 00:20:32,320
doesn't matter but now you've been able

664
00:20:32,320 --> 00:20:33,840
to tune and look and see whether your

665
00:20:33,840 --> 00:20:35,760
production infrastructure detects and or

666
00:20:35,760 --> 00:20:38,799
response to that attack

667
00:20:39,120 --> 00:20:40,799
problem three the blue team may not be

668
00:20:40,799 --> 00:20:42,480
successfully trained to successfully

669
00:20:42,480 --> 00:20:44,320
differentiate between successful and

670
00:20:44,320 --> 00:20:46,400
unsuccessful attack

671
00:20:46,400 --> 00:20:48,080
so a big part of why i started speaking

672
00:20:48,080 --> 00:20:49,200
in the first place is i had sock

673
00:20:49,200 --> 00:20:51,440
analysts coming to me asking things like

674
00:20:51,440 --> 00:20:52,960
are we vulnerable to the one equals one

675
00:20:52,960 --> 00:20:53,919
attack

676
00:20:53,919 --> 00:20:56,320
and i'm not criticizing the stock staff

677
00:20:56,320 --> 00:20:57,679
in this case the problem was we weren't

678
00:20:57,679 --> 00:20:59,600
providing good training to them and we

679
00:20:59,600 --> 00:21:00,799
weren't making sure that they knew what

680
00:21:00,799 --> 00:21:02,000
sql injection it was what the

681
00:21:02,000 --> 00:21:04,559
implications were and how it works

682
00:21:04,559 --> 00:21:06,000
there's a big difference between a sql

683
00:21:06,000 --> 00:21:08,400
injection attack that the laugh or ids

684
00:21:08,400 --> 00:21:10,559
spots that has a 500 response and a 400

685
00:21:10,559 --> 00:21:13,280
response because in both of those cases

686
00:21:13,280 --> 00:21:14,880
something went wrong and the attack

687
00:21:14,880 --> 00:21:17,039
probably didn't actually trigger the sql

688
00:21:17,039 --> 00:21:18,400
server probably did not actually run

689
00:21:18,400 --> 00:21:19,360
anything

690
00:21:19,360 --> 00:21:20,799
but if you're getting a successful

691
00:21:20,799 --> 00:21:22,320
looking sql injection attack and it's

692
00:21:22,320 --> 00:21:24,080
giving a tuned response

693
00:21:24,080 --> 00:21:25,280
that's something that could be dangerous

694
00:21:25,280 --> 00:21:27,520
that really needs investigation

695
00:21:27,520 --> 00:21:29,440
making sure that you work with both

696
00:21:29,440 --> 00:21:31,600
sides so that you have it you as an

697
00:21:31,600 --> 00:21:33,760
attacker have access to the web logs and

698
00:21:33,760 --> 00:21:35,679
they as the defense have access to your

699
00:21:35,679 --> 00:21:37,840
knowledge of what did and didn't work

700
00:21:37,840 --> 00:21:39,039
will give them the knowledge to start

701
00:21:39,039 --> 00:21:41,120
differentiating between the noise that's

702
00:21:41,120 --> 00:21:42,400
just part of being on the internet at

703
00:21:42,400 --> 00:21:43,760
this point because you're going to be

704
00:21:43,760 --> 00:21:46,320
attacked 24 7 pretty much

705
00:21:46,320 --> 00:21:47,840
and what you actually have to care about

706
00:21:47,840 --> 00:21:50,559
as a stock analyst

707
00:21:50,559 --> 00:21:52,240
problem number four

708
00:21:52,240 --> 00:21:53,840
the testing maybe is testing security

709
00:21:53,840 --> 00:21:54,799
infrastructure not the actual

710
00:21:54,799 --> 00:21:55,919
application

711
00:21:55,919 --> 00:21:57,840
so in this case you may have a waft that

712
00:21:57,840 --> 00:22:00,240
the pen testing team is unaware of and

713
00:22:00,240 --> 00:22:02,159
it's detecting mitigating blocking

714
00:22:02,159 --> 00:22:04,320
what's going on and so you're running

715
00:22:04,320 --> 00:22:05,200
your test and you're not getting

716
00:22:05,200 --> 00:22:07,840
anything back in your results so you

717
00:22:07,840 --> 00:22:09,840
give it a okay everything looks good

718
00:22:09,840 --> 00:22:11,120
result

719
00:22:11,120 --> 00:22:12,400
the application assault could still be

720
00:22:12,400 --> 00:22:13,840
vulnerable and if the attacker finds a

721
00:22:13,840 --> 00:22:15,760
way of attacking it bypassing the laugh

722
00:22:15,760 --> 00:22:17,039
or coming in through a different way

723
00:22:17,039 --> 00:22:19,280
that it doesn't get monitored by the wef

724
00:22:19,280 --> 00:22:21,039
then you're vulnerable

725
00:22:21,039 --> 00:22:22,799
as such during the test the blue team if

726
00:22:22,799 --> 00:22:23,919
they see something that's being

727
00:22:23,919 --> 00:22:26,400
completely blocked by the ids ips or

728
00:22:26,400 --> 00:22:28,080
wrap or something

729
00:22:28,080 --> 00:22:29,840
interrupting the test and saying hey i

730
00:22:29,840 --> 00:22:31,200
don't think that you're getting the

731
00:22:31,200 --> 00:22:32,799
results that you think you're getting

732
00:22:32,799 --> 00:22:34,480
this can be really important it saves

733
00:22:34,480 --> 00:22:36,320
everyone's time and helps reduce the

734
00:22:36,320 --> 00:22:37,679
actual vulnerabilities make sure that

735
00:22:37,679 --> 00:22:38,640
you're testing what you think you're

736
00:22:38,640 --> 00:22:39,600
testing

737
00:22:39,600 --> 00:22:41,120
in some cases you do want to be testing

738
00:22:41,120 --> 00:22:43,200
through the weft but in other cases if

739
00:22:43,200 --> 00:22:44,240
you're trying to test the application

740
00:22:44,240 --> 00:22:45,679
itself you want to make sure that you've

741
00:22:45,679 --> 00:22:47,919
got a straight path through and it's the

742
00:22:47,919 --> 00:22:51,280
blue team that can guarantee that

743
00:22:51,280 --> 00:22:52,960
problem number five the blue team may

744
00:22:52,960 --> 00:22:54,720
actually not receive receive the test

745
00:22:54,720 --> 00:22:56,960
results there can be a lot of siloing

746
00:22:56,960 --> 00:22:58,880
about who gets what results so the

747
00:22:58,880 --> 00:23:00,480
results may go to management the results

748
00:23:00,480 --> 00:23:02,799
may go to the dev team to fix the

749
00:23:02,799 --> 00:23:04,480
problem but if you're not telling the

750
00:23:04,480 --> 00:23:06,320
blue team on a regular basis hey last

751
00:23:06,320 --> 00:23:08,000
month during our testing we found three

752
00:23:08,000 --> 00:23:09,760
different sql injection attacks in code

753
00:23:09,760 --> 00:23:12,080
that was produced by team foo

754
00:23:12,080 --> 00:23:13,120
they don't know to look at other

755
00:23:13,120 --> 00:23:14,320
applications that was written by that

756
00:23:14,320 --> 00:23:15,679
same team because

757
00:23:15,679 --> 00:23:17,760
people reuse code all the time

758
00:23:17,760 --> 00:23:19,520
there may be vulnerable vulnerabilities

759
00:23:19,520 --> 00:23:20,720
in the application that didn't get

760
00:23:20,720 --> 00:23:22,559
tested as part of your testing that they

761
00:23:22,559 --> 00:23:24,080
can say okay because we've got the

762
00:23:24,080 --> 00:23:26,159
situational awareness of what was found

763
00:23:26,159 --> 00:23:27,919
we can go ahead and make sure that we

764
00:23:27,919 --> 00:23:30,080
can

765
00:23:30,159 --> 00:23:31,520
look for that vulnerability and other

766
00:23:31,520 --> 00:23:35,240
code that may be affected

767
00:23:36,400 --> 00:23:38,720
a big concept of purple team engagements

768
00:23:38,720 --> 00:23:41,360
is automation and repeatability

769
00:23:41,360 --> 00:23:43,440
if you if you as an attacker can make it

770
00:23:43,440 --> 00:23:44,880
easy for the blue team to repeat the

771
00:23:44,880 --> 00:23:46,880
attack it means they can do things on

772
00:23:46,880 --> 00:23:48,240
their own they don't always have to come

773
00:23:48,240 --> 00:23:50,400
to you again and again for help this can

774
00:23:50,400 --> 00:23:51,760
be as simple as right-clicking most

775
00:23:51,760 --> 00:23:53,679
parts of burp and you can just export it

776
00:23:53,679 --> 00:23:55,840
as a curl command that they can then use

777
00:23:55,840 --> 00:23:57,520
to recreate the attack

778
00:23:57,520 --> 00:23:59,039
it frees up your time as a penetration

779
00:23:59,039 --> 00:24:00,880
tester it allows the developers to test

780
00:24:00,880 --> 00:24:02,880
it independently and it helps the blue

781
00:24:02,880 --> 00:24:04,400
team they can take those exact same

782
00:24:04,400 --> 00:24:05,919
rules like i said they can point at a

783
00:24:05,919 --> 00:24:06,880
server that doesn't have to be

784
00:24:06,880 --> 00:24:08,720
vulnerable and you can still use that to

785
00:24:08,720 --> 00:24:10,720
tune the wafts

786
00:24:10,720 --> 00:24:11,919
when you're following up to make sure

787
00:24:11,919 --> 00:24:13,679
that the vulnerability was patched

788
00:24:13,679 --> 00:24:16,159
correctly though always use a

789
00:24:16,159 --> 00:24:17,760
slightly different attack

790
00:24:17,760 --> 00:24:19,360
in some cases developers will do things

791
00:24:19,360 --> 00:24:20,400
like look for one equals one

792
00:24:20,400 --> 00:24:22,720
specifically if that's example and two

793
00:24:22,720 --> 00:24:24,640
equals two will work just fine so

794
00:24:24,640 --> 00:24:25,840
definitely make sure that you switch it

795
00:24:25,840 --> 00:24:27,600
up to make sure that they didn't just

796
00:24:27,600 --> 00:24:30,000
fix that specific case but they fixed

797
00:24:30,000 --> 00:24:31,279
the root problem

798
00:24:31,279 --> 00:24:32,880
as part of the purple process i

799
00:24:32,880 --> 00:24:34,559
definitely advocate pushing left

800
00:24:34,559 --> 00:24:36,000
integrate the sas and dynamic

801
00:24:36,000 --> 00:24:37,360
application testing early in the

802
00:24:37,360 --> 00:24:39,279
development process this lets them fix

803
00:24:39,279 --> 00:24:40,960
it easier and faster in the development

804
00:24:40,960 --> 00:24:42,159
process when it's still fresh in their

805
00:24:42,159 --> 00:24:43,039
minds

806
00:24:43,039 --> 00:24:44,720
but also make sure that those results go

807
00:24:44,720 --> 00:24:46,559
to the last team in the blue team so if

808
00:24:46,559 --> 00:24:48,400
a developer does make a mistake you know

809
00:24:48,400 --> 00:24:50,240
i'm not criticizing the developer it's

810
00:24:50,240 --> 00:24:52,159
it happens but make sure that both sides

811
00:24:52,159 --> 00:24:53,440
aware that that did happen so they can

812
00:24:53,440 --> 00:24:56,799
look for similar things elsewhere

813
00:24:57,679 --> 00:24:59,600
and work hand in hand to make the real

814
00:24:59,600 --> 00:25:01,440
attacker's lives miserable

815
00:25:01,440 --> 00:25:03,279
the red team can give valuable insights

816
00:25:03,279 --> 00:25:05,360
into what slowed them down

817
00:25:05,360 --> 00:25:08,000
so a great painful idea that i love for

818
00:25:08,000 --> 00:25:09,679
implementing to make attackers lives

819
00:25:09,679 --> 00:25:10,640
miserable

820
00:25:10,640 --> 00:25:12,799
if you have life rules that trigger only

821
00:25:12,799 --> 00:25:15,120
on very very obvious attacks so

822
00:25:15,120 --> 00:25:17,120
literally the one equals one or the

823
00:25:17,120 --> 00:25:19,919
alert text box cross-site scripting if

824
00:25:19,919 --> 00:25:21,279
rather than just blocking that you

825
00:25:21,279 --> 00:25:22,880
redirect that to the logout function the

826
00:25:22,880 --> 00:25:24,320
web application

827
00:25:24,320 --> 00:25:25,360
that means when someone's running an

828
00:25:25,360 --> 00:25:27,120
automated scanner against you every time

829
00:25:27,120 --> 00:25:28,720
they do something that's a completely

830
00:25:28,720 --> 00:25:31,279
obvious 100 guaranteed hit as something

831
00:25:31,279 --> 00:25:33,200
malicious it kills the session they have

832
00:25:33,200 --> 00:25:34,720
to go log in again

833
00:25:34,720 --> 00:25:36,080
if you set a limit on how many times you

834
00:25:36,080 --> 00:25:38,320
can log in an hour that limits them and

835
00:25:38,320 --> 00:25:40,080
also if it gets painful they may just go

836
00:25:40,080 --> 00:25:41,600
find someone else who's got a weaker

837
00:25:41,600 --> 00:25:43,279
business to attack and leave you alone

838
00:25:43,279 --> 00:25:45,120
for a while

839
00:25:45,120 --> 00:25:46,559
immutable file systems are great for

840
00:25:46,559 --> 00:25:48,240
this if you can make your file systems

841
00:25:48,240 --> 00:25:49,919
so nothing can be written to it that

842
00:25:49,919 --> 00:25:51,200
eliminates the ability of doing things

843
00:25:51,200 --> 00:25:53,679
like web shells

844
00:25:53,679 --> 00:25:55,440
going through and making sure that as an

845
00:25:55,440 --> 00:25:57,120
attacker i know that a lot of people

846
00:25:57,120 --> 00:25:58,960
just have a single default account for

847
00:25:58,960 --> 00:26:01,520
read and write access to the database or

848
00:26:01,520 --> 00:26:03,120
it can read every every single table

849
00:26:03,120 --> 00:26:04,720
within the database

850
00:26:04,720 --> 00:26:06,799
if i tell the defensive team hey if you

851
00:26:06,799 --> 00:26:08,880
restrict write access to only a few

852
00:26:08,880 --> 00:26:10,799
pages that need it and if you make sure

853
00:26:10,799 --> 00:26:12,640
that only a few the tables have the real

854
00:26:12,640 --> 00:26:13,679
information

855
00:26:13,679 --> 00:26:15,440
really valuable information

856
00:26:15,440 --> 00:26:18,080
that nothing other than the pages needed

857
00:26:18,080 --> 00:26:21,039
then if i do get in a a

858
00:26:21,039 --> 00:26:22,480
prior to testing the blue team can give

859
00:26:22,480 --> 00:26:23,840
feedback on what the highest risk

860
00:26:23,840 --> 00:26:25,039
applications are

861
00:26:25,039 --> 00:26:26,159
they tend to know where the bodies are

862
00:26:26,159 --> 00:26:27,520
buried and what's really valuable and

863
00:26:27,520 --> 00:26:29,039
what's not they know where they're

864
00:26:29,039 --> 00:26:30,480
seeing real world attacks that may need

865
00:26:30,480 --> 00:26:32,159
to be validated and make sure that

866
00:26:32,159 --> 00:26:33,279
there's not something that's actually

867
00:26:33,279 --> 00:26:35,360
exploitable there you know the topology

868
00:26:35,360 --> 00:26:37,200
of the monitoring protective systems of

869
00:26:37,200 --> 00:26:38,960
the network so they can say if you want

870
00:26:38,960 --> 00:26:40,000
to make sure that you're attacking the

871
00:26:40,000 --> 00:26:41,679
application itself use this ip and this

872
00:26:41,679 --> 00:26:43,279
host header rather than going through

873
00:26:43,279 --> 00:26:44,320
this

874
00:26:44,320 --> 00:26:45,760
hostname which may be going out through

875
00:26:45,760 --> 00:26:47,120
cdn and through some defensive

876
00:26:47,120 --> 00:26:48,320
infrastructure

877
00:26:48,320 --> 00:26:50,320
they know where coverage gaps are

878
00:26:50,320 --> 00:26:52,480
so there may be some cases where they

879
00:26:52,480 --> 00:26:53,679
know that there's a gap that they want

880
00:26:53,679 --> 00:26:55,279
help proving it and they may not get

881
00:26:55,279 --> 00:26:57,200
traction until the pen test report lands

882
00:26:57,200 --> 00:26:58,000
says

883
00:26:58,000 --> 00:26:59,440
using this gap we were able to exploit

884
00:26:59,440 --> 00:27:01,039
the system so they can give feedback on

885
00:27:01,039 --> 00:27:01,919
that

886
00:27:01,919 --> 00:27:02,880
they have the information on

887
00:27:02,880 --> 00:27:04,880
applications what application platform

888
00:27:04,880 --> 00:27:06,000
it's running on what language it's

889
00:27:06,000 --> 00:27:07,440
written and what database program it's

890
00:27:07,440 --> 00:27:09,360
running on there's no sense in spending

891
00:27:09,360 --> 00:27:11,200
time doing mysql attacks if it's running

892
00:27:11,200 --> 00:27:13,039
on oracle or vice versa

893
00:27:13,039 --> 00:27:14,480
they know what the compensating controls

894
00:27:14,480 --> 00:27:17,279
are so they may be able to say

895
00:27:17,279 --> 00:27:19,279
okay so this is a high high-risk

896
00:27:19,279 --> 00:27:20,640
application that probably has some

897
00:27:20,640 --> 00:27:22,640
vulnerabilities but it's locked down to

898
00:27:22,640 --> 00:27:24,000
just these 10 ips within the

899
00:27:24,000 --> 00:27:26,240
organization so maybe we should pay

900
00:27:26,240 --> 00:27:27,600
attention to something that's internet

901
00:27:27,600 --> 00:27:29,120
facing instead

902
00:27:29,120 --> 00:27:30,799
the appsec team can give some feedback

903
00:27:30,799 --> 00:27:32,159
to the blue team on what the strategy

904
00:27:32,159 --> 00:27:33,600
for the test will be

905
00:27:33,600 --> 00:27:35,120
what the techniques tools and procedures

906
00:27:35,120 --> 00:27:36,320
are that are used to bypass those

907
00:27:36,320 --> 00:27:38,080
defenses and that will give the blue

908
00:27:38,080 --> 00:27:39,679
team the ability to start looking for

909
00:27:39,679 --> 00:27:41,840
those ttps and start tuning to try to

910
00:27:41,840 --> 00:27:44,320
detect them

911
00:27:44,320 --> 00:27:45,520
during the testing the application

912
00:27:45,520 --> 00:27:47,360
security testing team can provide

913
00:27:47,360 --> 00:27:48,720
feedback on whether there's true or

914
00:27:48,720 --> 00:27:50,799
false positives indicators on what to

915
00:27:50,799 --> 00:27:52,480
search for so

916
00:27:52,480 --> 00:27:54,399
if i say hey i just got

917
00:27:54,399 --> 00:27:56,720
attacked to work did you see it

918
00:27:56,720 --> 00:27:58,720
starting something vague lessons start

919
00:27:58,720 --> 00:27:59,919
booking the logs but doesn't tell them

920
00:27:59,919 --> 00:28:01,679
what to look for but if they're spending

921
00:28:01,679 --> 00:28:03,039
time and not finding it i can give them

922
00:28:03,039 --> 00:28:05,200
more useful information and make sure

923
00:28:05,200 --> 00:28:06,080
that they're not just spending their

924
00:28:06,080 --> 00:28:08,080
wheels

925
00:28:08,080 --> 00:28:09,760
i can give information on what's the

926
00:28:09,760 --> 00:28:11,360
really successful meaningful parts of

927
00:28:11,360 --> 00:28:13,279
the test so there's a lot of tools that

928
00:28:13,279 --> 00:28:14,720
will generate a lot of findings that

929
00:28:14,720 --> 00:28:16,720
really aren't that important but are

930
00:28:16,720 --> 00:28:17,760
included in reports is like

931
00:28:17,760 --> 00:28:20,320
informational by providing context on

932
00:28:20,320 --> 00:28:21,520
okay

933
00:28:21,520 --> 00:28:23,760
this may be it rated as a medium but i

934
00:28:23,760 --> 00:28:25,120
think i can chain it together with this

935
00:28:25,120 --> 00:28:26,720
other medium this other medium to make

936
00:28:26,720 --> 00:28:28,799
it high i can give that context to help

937
00:28:28,799 --> 00:28:30,159
them understand the bigger picture of

938
00:28:30,159 --> 00:28:31,279
the risk

939
00:28:31,279 --> 00:28:32,720
the blue team can provide information on

940
00:28:32,720 --> 00:28:34,159
what the test looks like in the logging

941
00:28:34,159 --> 00:28:36,880
systems so in some cases a test may be

942
00:28:36,880 --> 00:28:38,159
overwhelming the server itself and it

943
00:28:38,159 --> 00:28:40,240
may just not stop responding very well

944
00:28:40,240 --> 00:28:41,679
you can get true or false pauses because

945
00:28:41,679 --> 00:28:43,679
of that that information can be really

946
00:28:43,679 --> 00:28:45,760
useful to the red team and say okay

947
00:28:45,760 --> 00:28:47,039
maybe i need to throttle the attacks

948
00:28:47,039 --> 00:28:47,840
more

949
00:28:47,840 --> 00:28:49,120
down more

950
00:28:49,120 --> 00:28:50,640
maybe i need to start stop doing this

951
00:28:50,640 --> 00:28:51,600
particular thing that's causing

952
00:28:51,600 --> 00:28:52,880
instability so i can make sure that the

953
00:28:52,880 --> 00:28:55,039
other tests do run successfully

954
00:28:55,039 --> 00:28:56,559
you can provide information about

955
00:28:56,559 --> 00:28:58,159
environmental factors that may be

956
00:28:58,159 --> 00:28:59,840
affecting it so if there's heavy load

957
00:28:59,840 --> 00:29:01,039
coming from something else that may be

958
00:29:01,039 --> 00:29:03,840
impacting it as well

959
00:29:03,840 --> 00:29:05,360
after the testing concludes the appsec

960
00:29:05,360 --> 00:29:07,279
team can provide additional feedback on

961
00:29:07,279 --> 00:29:09,039
the modding results what they thought

962
00:29:09,039 --> 00:29:10,320
did work and didn't work as far as

963
00:29:10,320 --> 00:29:12,080
catching them they can provide the

964
00:29:12,080 --> 00:29:13,360
limited

965
00:29:13,360 --> 00:29:14,799
re-testing in the production environment

966
00:29:14,799 --> 00:29:16,080
if the test was being done in the test

967
00:29:16,080 --> 00:29:18,080
environment they can do that re-test in

968
00:29:18,080 --> 00:29:19,279
the production to see if there's still

969
00:29:19,279 --> 00:29:21,279
the vulnerabilities there and or if the

970
00:29:21,279 --> 00:29:23,120
detection works better there they can

971
00:29:23,120 --> 00:29:24,559
help write their detection rules if

972
00:29:24,559 --> 00:29:26,720
necessary they can help recreate the

973
00:29:26,720 --> 00:29:28,240
attack so that you can feed information

974
00:29:28,240 --> 00:29:30,399
to the sim so you can mark what this is

975
00:29:30,399 --> 00:29:31,840
what an attack looks like and show it to

976
00:29:31,840 --> 00:29:34,640
analysts inside the sim

977
00:29:34,640 --> 00:29:36,000
they can give a blue team-oriented

978
00:29:36,000 --> 00:29:38,399
read-through of their results you don't

979
00:29:38,399 --> 00:29:39,600
need to tell them everything about the

980
00:29:39,600 --> 00:29:41,279
application vulnerability necessarily

981
00:29:41,279 --> 00:29:43,440
but giving them the high picture big

982
00:29:43,440 --> 00:29:45,200
picture view of what happened and what

983
00:29:45,200 --> 00:29:47,120
you found can be really useful for them

984
00:29:47,120 --> 00:29:48,559
you can give assistance doing threat

985
00:29:48,559 --> 00:29:50,080
hunting so if you found a significant

986
00:29:50,080 --> 00:29:51,279
vulnerability that someone else might

987
00:29:51,279 --> 00:29:52,960
have exploited you might want to stop

988
00:29:52,960 --> 00:29:54,320
and actually threat hunt and see if

989
00:29:54,320 --> 00:29:55,440
someone else has found that same

990
00:29:55,440 --> 00:29:57,679
vulnerability and working hands in hand

991
00:29:57,679 --> 00:29:59,520
can be really valuable there

992
00:29:59,520 --> 00:30:00,720
you can do the follow-up with the

993
00:30:00,720 --> 00:30:02,240
testing to validate that

994
00:30:02,240 --> 00:30:04,000
that any mitigations were done

995
00:30:04,000 --> 00:30:05,120
successful

996
00:30:05,120 --> 00:30:06,159
you can also set up learning

997
00:30:06,159 --> 00:30:07,520
environments

998
00:30:07,520 --> 00:30:09,120
i think it's a great idea to teach the

999
00:30:09,120 --> 00:30:10,399
blue team to do some of the offensive

1000
00:30:10,399 --> 00:30:11,440
work because it helps them better

1001
00:30:11,440 --> 00:30:13,360
understand it so setting up a cyber

1002
00:30:13,360 --> 00:30:15,120
range and doing hands-on lessons on how

1003
00:30:15,120 --> 00:30:17,039
to do something like using burp suite

1004
00:30:17,039 --> 00:30:20,559
how to use zap can be really valuable

1005
00:30:20,559 --> 00:30:22,159
the blue team can do validation of the

1006
00:30:22,159 --> 00:30:24,399
findings so there may be cases where the

1007
00:30:24,399 --> 00:30:25,760
attacker thinks that something works

1008
00:30:25,760 --> 00:30:27,520
successfully but the blue team has

1009
00:30:27,520 --> 00:30:29,520
access to the logs and can say okay it

1010
00:30:29,520 --> 00:30:31,120
looks like it worked successfully but we

1011
00:30:31,120 --> 00:30:33,919
can prove using the logs that didn't

1012
00:30:33,919 --> 00:30:35,360
working together you can make sure that

1013
00:30:35,360 --> 00:30:37,360
that incorrect false positive doesn't go

1014
00:30:37,360 --> 00:30:39,360
into the report that management sees

1015
00:30:39,360 --> 00:30:40,960
which makes everyone's life better

1016
00:30:40,960 --> 00:30:42,000
because the red team doesn't want to

1017
00:30:42,000 --> 00:30:43,279
give bad results and the blue team

1018
00:30:43,279 --> 00:30:45,120
doesn't want to be shown as having had

1019
00:30:45,120 --> 00:30:46,799
failures

1020
00:30:46,799 --> 00:30:49,039
working together can help solve that

1021
00:30:49,039 --> 00:30:50,960
they can give a sign off on the report

1022
00:30:50,960 --> 00:30:52,399
so you don't want to have the blue team

1023
00:30:52,399 --> 00:30:54,000
able to completely block a report going

1024
00:30:54,000 --> 00:30:56,559
out but again if they think legitimately

1025
00:30:56,559 --> 00:30:58,559
something is false positive making sure

1026
00:30:58,559 --> 00:31:00,080
that they have some ability to add a

1027
00:31:00,080 --> 00:31:01,600
gate before it goes off to management

1028
00:31:01,600 --> 00:31:03,679
can be really valuable again for both

1029
00:31:03,679 --> 00:31:04,880
sides

1030
00:31:04,880 --> 00:31:06,399
and they can work to improve the

1031
00:31:06,399 --> 00:31:09,039
instrument instrumentation to plug gaps

1032
00:31:09,039 --> 00:31:10,159
so if they find that there wasn't

1033
00:31:10,159 --> 00:31:12,080
visibility into network segment on the

1034
00:31:12,080 --> 00:31:13,919
ids they can make sure that that gets

1035
00:31:13,919 --> 00:31:16,399
resolved

1036
00:31:16,640 --> 00:31:19,200
for managers i'd like to say

1037
00:31:19,200 --> 00:31:21,519
stress working together and think

1038
00:31:21,519 --> 00:31:23,039
holistically about reducing risk the

1039
00:31:23,039 --> 00:31:25,120
enterprise rather than just reducing

1040
00:31:25,120 --> 00:31:28,559
then one side winning or losing

1041
00:31:28,559 --> 00:31:30,080
very often i've seen that the red team

1042
00:31:30,080 --> 00:31:31,120
will have a completely different

1043
00:31:31,120 --> 00:31:32,480
management structure than the blue team

1044
00:31:32,480 --> 00:31:34,480
particularly in large organizations and

1045
00:31:34,480 --> 00:31:36,080
so they may be working in much different

1046
00:31:36,080 --> 00:31:37,840
goals as far as like their performance

1047
00:31:37,840 --> 00:31:39,840
evaluation or bonuses

1048
00:31:39,840 --> 00:31:40,960
depend on

1049
00:31:40,960 --> 00:31:42,159
if you make working together the

1050
00:31:42,159 --> 00:31:44,159
priority you can get the better results

1051
00:31:44,159 --> 00:31:46,000
that actually make things more secure

1052
00:31:46,000 --> 00:31:47,440
rather than just finding vulnerabilities

1053
00:31:47,440 --> 00:31:48,799
or saying that vulnerabilities don't

1054
00:31:48,799 --> 00:31:52,000
exist or got closed

1055
00:31:52,480 --> 00:31:54,080
wrapping up

1056
00:31:54,080 --> 00:31:56,080
again think in terms of increasing

1057
00:31:56,080 --> 00:31:57,440
collaboration the ways that your

1058
00:31:57,440 --> 00:31:59,120
different teams can work together rather

1059
00:31:59,120 --> 00:32:00,720
than opposition

1060
00:32:00,720 --> 00:32:02,320
think in terms of reducing risk rather

1061
00:32:02,320 --> 00:32:04,000
than discrete tests

1062
00:32:04,000 --> 00:32:06,799
so a single dashed test in and of itself

1063
00:32:06,799 --> 00:32:08,559
isn't the big picture

1064
00:32:08,559 --> 00:32:10,720
10 tests taken singularly are not the

1065
00:32:10,720 --> 00:32:12,799
big picture but building a big picture

1066
00:32:12,799 --> 00:32:14,080
with both the offensive and defensive

1067
00:32:14,080 --> 00:32:15,600
team looking at those 10 tests and

1068
00:32:15,600 --> 00:32:17,679
figuring out okay how do we remediate

1069
00:32:17,679 --> 00:32:19,120
includes these gaps and how do we look

1070
00:32:19,120 --> 00:32:20,880
for what else might exist based on these

1071
00:32:20,880 --> 00:32:22,480
results is what gives you the best

1072
00:32:22,480 --> 00:32:24,080
results

1073
00:32:24,080 --> 00:32:25,519
i think in terms of pushing application

1074
00:32:25,519 --> 00:32:28,240
security both left and right it's not

1075
00:32:28,240 --> 00:32:29,679
enough to just put things the ci

1076
00:32:29,679 --> 00:32:31,360
pipeline you have to make sure

1077
00:32:31,360 --> 00:32:33,120
especially at the large enterprise scale

1078
00:32:33,120 --> 00:32:35,039
that your defensive staff is skilled at

1079
00:32:35,039 --> 00:32:37,679
responding detecting mitigating etc

1080
00:32:37,679 --> 00:32:38,960
attacks

1081
00:32:38,960 --> 00:32:40,480
take every advantage you have against

1082
00:32:40,480 --> 00:32:42,640
your attackers like i said earlier

1083
00:32:42,640 --> 00:32:44,080
there's the old truism and security that

1084
00:32:44,080 --> 00:32:45,039
the attack

1085
00:32:45,039 --> 00:32:46,399
the attackers only need the defense to

1086
00:32:46,399 --> 00:32:48,240
mess up wants to be able to get in

1087
00:32:48,240 --> 00:32:49,760
but think in terms of things like the

1088
00:32:49,760 --> 00:32:51,519
cyber kill chain or the miter attack

1089
00:32:51,519 --> 00:32:53,519
framework most attackers don't just want

1090
00:32:53,519 --> 00:32:55,120
to get onto a system or have a very

1091
00:32:55,120 --> 00:32:56,880
simple attack work they want to get

1092
00:32:56,880 --> 00:32:58,640
ransomware they want to get pii if they

1093
00:32:58,640 --> 00:33:00,960
want to get your private files

1094
00:33:00,960 --> 00:33:02,559
if you think in terms of detecting them

1095
00:33:02,559 --> 00:33:04,000
at some point before they succeed in

1096
00:33:04,000 --> 00:33:05,919
their goal rather than simply in terms

1097
00:33:05,919 --> 00:33:08,559
of stopping that initial detection or

1098
00:33:08,559 --> 00:33:10,399
that initial attack that's where you're

1099
00:33:10,399 --> 00:33:11,519
going to get the best value for your

1100
00:33:11,519 --> 00:33:13,919
company

1101
00:33:15,519 --> 00:33:17,120
questions thoughts you are welcome to

1102
00:33:17,120 --> 00:33:19,519
hit me up on twitter i have dms open

1103
00:33:19,519 --> 00:33:21,200
if you do a tiny bit of os and you can

1104
00:33:21,200 --> 00:33:23,919
figure out my email addresses or during

1105
00:33:23,919 --> 00:33:25,760
the event i'll be available for chat

1106
00:33:25,760 --> 00:33:27,279
during this

1107
00:33:27,279 --> 00:33:30,760
thanks for your time

