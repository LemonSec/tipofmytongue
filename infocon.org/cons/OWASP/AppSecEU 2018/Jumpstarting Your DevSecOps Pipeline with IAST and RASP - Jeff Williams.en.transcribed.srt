1
00:00:10,220 --> 00:00:14,120
<font color="#CCCCCC">I said</font><font color="#E5E5E5"> earlier I've got to work</font><font color="#CCCCCC"> or</font>

2
00:00:12,770 --> 00:00:15,920
<font color="#E5E5E5">somebody's been</font><font color="#CCCCCC"> in a</font><font color="#E5E5E5"> lost for a long</font>

3
00:00:14,120 --> 00:00:17,330
time I'm gonna<font color="#E5E5E5"> add a really</font><font color="#CCCCCC"> for Jeff</font>

4
00:00:15,920 --> 00:00:21,640
Williams because he's been<font color="#CCCCCC"> an OS for a</font>

5
00:00:17,330 --> 00:00:23,570
really long time<font color="#E5E5E5"> so I'm happy to</font>

6
00:00:21,640 --> 00:00:25,460
announce<font color="#E5E5E5"> Jeff Williams and is</font>

7
00:00:23,570 --> 00:00:28,250
jump-starting your<font color="#E5E5E5"> dev</font><font color="#CCCCCC"> sec ops pipeline</font>

8
00:00:25,460 --> 00:00:34,489
with<font color="#CCCCCC"> ia st and</font><font color="#E5E5E5"> rasp let's give it up for</font>

9
00:00:28,250 --> 00:00:36,710
<font color="#E5E5E5">Jeff</font><font color="#CCCCCC"> all right hey thanks everyone for</font>

10
00:00:34,489 --> 00:00:39,500
<font color="#E5E5E5">coming out so you may not know me</font><font color="#CCCCCC"> but</font>

11
00:00:36,710 --> 00:00:42,020
you<font color="#E5E5E5"> may</font><font color="#CCCCCC"> use some of my work I wrote the</font>

12
00:00:39,500 --> 00:00:44,420
<font color="#CCCCCC">aw stop ten</font><font color="#E5E5E5"> I wrote webgoat</font><font color="#CCCCCC"> I wrote a</font>

13
00:00:42,020 --> 00:00:46,910
sappy<font color="#CCCCCC"> I led OS for eight years when we</font>

14
00:00:44,420 --> 00:00:49,340
<font color="#E5E5E5">were first just starting out and it's</font>

15
00:00:46,910 --> 00:00:50,989
actually some of<font color="#E5E5E5"> the work that</font><font color="#CCCCCC"> I value</font>

16
00:00:49,340 --> 00:00:53,050
the<font color="#CCCCCC"> most in my career</font><font color="#E5E5E5"> it's</font><font color="#CCCCCC"> really</font>

17
00:00:50,990 --> 00:00:56,570
rewarding<font color="#E5E5E5"> to contribute so this is a</font>

18
00:00:53,050 --> 00:00:59,480
initial<font color="#E5E5E5"> plea join a project contribute</font>

19
00:00:56,570 --> 00:01:02,420
what you know<font color="#CCCCCC"> there's a tiny number of</font>

20
00:00:59,480 --> 00:01:04,548
<font color="#CCCCCC">app</font><font color="#E5E5E5"> sect people in the world</font><font color="#CCCCCC"> and</font><font color="#E5E5E5"> 16 to</font>

21
00:01:02,420 --> 00:01:06,200
<font color="#E5E5E5">20 million developers worldwide</font><font color="#CCCCCC"> we've</font>

22
00:01:04,549 --> 00:01:07,880
got a massive<font color="#CCCCCC"> problem so</font><font color="#E5E5E5"> you know join</font>

23
00:01:06,200 --> 00:01:11,780
up do<font color="#E5E5E5"> something it's it's a super</font>

24
00:01:07,880 --> 00:01:14,330
rewarding<font color="#CCCCCC"> so I'm gonna start</font><font color="#E5E5E5"> out with a</font>

25
00:01:11,780 --> 00:01:15,440
couple<font color="#E5E5E5"> of facts it's a little bit of</font>

26
00:01:14,330 --> 00:01:17,649
downer

27
00:01:15,440 --> 00:01:21,020
the average application out there<font color="#CCCCCC"> is</font>

28
00:01:17,650 --> 00:01:23,450
<font color="#E5E5E5">super</font><font color="#CCCCCC"> horrible this</font><font color="#E5E5E5"> is sort of a</font>

29
00:01:21,020 --> 00:01:24,920
representation of most applications you

30
00:01:23,450 --> 00:01:28,900
got libraries down here on the bottom

31
00:01:24,920 --> 00:01:31,159
and custom code up here<font color="#CCCCCC"> on the top</font><font color="#E5E5E5"> now</font>

32
00:01:28,900 --> 00:01:34,820
one<font color="#CCCCCC"> thing that's</font><font color="#E5E5E5"> kind of interesting is</font>

33
00:01:31,159 --> 00:01:37,159
that 71%<font color="#E5E5E5"> of library code is never</font>

34
00:01:34,820 --> 00:01:38,750
invoked<font color="#E5E5E5"> like it's just along for</font><font color="#CCCCCC"> the</font>

35
00:01:37,159 --> 00:01:41,780
<font color="#E5E5E5">ride</font><font color="#CCCCCC"> it</font><font color="#E5E5E5"> gets compiled into applications</font>

36
00:01:38,750 --> 00:01:43,070
but it never runs so that's<font color="#CCCCCC"> actually</font>

37
00:01:41,780 --> 00:01:44,270
<font color="#E5E5E5">pretty important when you're considering</font>

38
00:01:43,070 --> 00:01:46,940
where you're going to<font color="#E5E5E5"> spend</font><font color="#CCCCCC"> your</font>

39
00:01:44,270 --> 00:01:48,679
security time<font color="#CCCCCC"> I want you to think about</font>

40
00:01:46,940 --> 00:01:51,048
<font color="#CCCCCC">just the code</font><font color="#E5E5E5"> that runs code that</font>

41
00:01:48,680 --> 00:01:53,690
doesn't<font color="#CCCCCC"> run really isn't a problem</font><font color="#E5E5E5"> so if</font>

42
00:01:51,049 --> 00:01:55,310
<font color="#E5E5E5">you look at that then</font><font color="#CCCCCC"> three-quarters of</font>

43
00:01:53,690 --> 00:01:59,090
what you're<font color="#CCCCCC"> looking at is custom code</font>

44
00:01:55,310 --> 00:02:00,200
and<font color="#E5E5E5"> 1/4 is library code and you know</font>

45
00:01:59,090 --> 00:02:02,299
there are<font color="#E5E5E5"> folks out there that are</font>

46
00:02:00,200 --> 00:02:03,979
<font color="#E5E5E5">saying over and</font><font color="#CCCCCC"> over again you know</font><font color="#E5E5E5"> 90%</font>

47
00:02:02,299 --> 00:02:05,000
<font color="#E5E5E5">of your application is</font><font color="#CCCCCC"> libraries so</font>

48
00:02:03,979 --> 00:02:08,449
that's where you<font color="#CCCCCC"> got to spend all</font><font color="#E5E5E5"> your</font>

49
00:02:05,000 --> 00:02:10,068
effort that is<font color="#CCCCCC"> misleading so focus on</font>

50
00:02:08,449 --> 00:02:12,619
where the<font color="#CCCCCC"> vulnerabilities actually are</font>

51
00:02:10,068 --> 00:02:14,540
you're likely to have<font color="#CCCCCC"> one maybe two</font>

52
00:02:12,620 --> 00:02:16,790
vulnerabilities in your library<font color="#E5E5E5"> code for</font>

53
00:02:14,540 --> 00:02:18,950
a<font color="#E5E5E5"> typical application and on average</font>

54
00:02:16,790 --> 00:02:22,099
twenty six point seven vulnerabilities

55
00:02:18,950 --> 00:02:24,480
in your custom code<font color="#E5E5E5"> so focus your</font>

56
00:02:22,099 --> 00:02:27,899
efforts a little bit<font color="#E5E5E5"> by the way this</font>

57
00:02:24,480 --> 00:02:30,840
is terrifying<font color="#CCCCCC"> if this was one or two</font>

58
00:02:27,900 --> 00:02:33,540
serious vulnerabilities per app that

59
00:02:30,840 --> 00:02:36,840
would<font color="#E5E5E5"> be a crisis in my mind because</font>

60
00:02:33,540 --> 00:02:39,179
these apps are critical<font color="#E5E5E5"> and we are not</font>

61
00:02:36,840 --> 00:02:40,830
doing<font color="#E5E5E5"> very well</font><font color="#CCCCCC"> if this was</font><font color="#E5E5E5"> like the</font>

62
00:02:39,180 --> 00:02:43,440
airline industry for instance and every

63
00:02:40,830 --> 00:02:46,290
plane you looked at had<font color="#E5E5E5"> 26.7 safety</font>

64
00:02:43,440 --> 00:02:48,420
vulnerabilities in it<font color="#E5E5E5"> you probably fly a</font>

65
00:02:46,290 --> 00:02:51,420
lot but you guys are doing<font color="#CCCCCC"> your banking</font>

66
00:02:48,420 --> 00:02:54,319
<font color="#E5E5E5">and doing your online activities in</font>

67
00:02:51,420 --> 00:03:00,810
<font color="#E5E5E5">applications</font><font color="#CCCCCC"> that are super vulnerable</font>

68
00:02:54,319 --> 00:03:03,238
<font color="#CCCCCC">ok</font><font color="#E5E5E5"> so that would be bad</font><font color="#CCCCCC"> there's also a</font>

69
00:03:00,810 --> 00:03:05,130
lot<font color="#CCCCCC"> of attack</font><font color="#E5E5E5"> activity so this is data</font>

70
00:03:03,239 --> 00:03:08,760
collected<font color="#CCCCCC"> across</font><font color="#E5E5E5"> tens of thousands of</font>

71
00:03:05,130 --> 00:03:11,970
<font color="#E5E5E5">applications</font><font color="#CCCCCC"> over the last month</font><font color="#E5E5E5"> and</font>

72
00:03:08,760 --> 00:03:14,310
every<font color="#CCCCCC"> application that we protect was</font>

73
00:03:11,970 --> 00:03:16,500
attacked<font color="#E5E5E5"> the attacks are rampant out</font>

74
00:03:14,310 --> 00:03:17,970
there more<font color="#E5E5E5"> than half</font><font color="#CCCCCC"> are attack love</font>

75
00:03:16,500 --> 00:03:19,640
sequel injection and these<font color="#E5E5E5"> numbers go up</font>

76
00:03:17,970 --> 00:03:22,709
<font color="#E5E5E5">and down a little bit every month but</font>

77
00:03:19,640 --> 00:03:23,670
there's a ton of attack traffic<font color="#E5E5E5"> going on</font>

78
00:03:22,709 --> 00:03:25,470
out there<font color="#CCCCCC"> so that's</font><font color="#E5E5E5"> not</font><font color="#CCCCCC"> a great</font>

79
00:03:23,670 --> 00:03:29,030
<font color="#E5E5E5">combination</font><font color="#CCCCCC"> a lot</font><font color="#E5E5E5"> of vulnerabilities a</font>

80
00:03:25,470 --> 00:03:30,450
lot of attacks going<font color="#E5E5E5"> on</font><font color="#CCCCCC"> is a recipe for</font>

81
00:03:29,030 --> 00:03:33,600
<font color="#E5E5E5">disaster</font>

82
00:03:30,450 --> 00:03:36,510
<font color="#CCCCCC">ok so it's a little</font><font color="#E5E5E5"> bit of the situation</font>

83
00:03:33,600 --> 00:03:40,769
I am<font color="#CCCCCC"> trying to change that</font><font color="#E5E5E5"> we</font><font color="#CCCCCC"> have</font><font color="#E5E5E5"> to do</font>

84
00:03:36,510 --> 00:03:43,370
better<font color="#E5E5E5"> and</font><font color="#CCCCCC"> dev SEC Ops is a possible</font>

85
00:03:40,769 --> 00:03:47,220
path forward

86
00:03:43,370 --> 00:03:49,560
DevOps has had really promising results

87
00:03:47,220 --> 00:03:51,900
for development<font color="#E5E5E5"> in terms of improving</font>

88
00:03:49,560 --> 00:03:54,060
not<font color="#CCCCCC"> only the pace of delivery but also</font>

89
00:03:51,900 --> 00:03:55,980
the quality<font color="#E5E5E5"> of delivery and this is like</font>

90
00:03:54,060 --> 00:03:58,019
the big thing<font color="#CCCCCC"> that companies struggle to</font>

91
00:03:55,980 --> 00:04:00,988
get<font color="#E5E5E5"> over is it seems like moving faster</font>

92
00:03:58,019 --> 00:04:01,819
<font color="#E5E5E5">would make you less quality but it's not</font>

93
00:04:00,989 --> 00:04:04,290
true

94
00:04:01,819 --> 00:04:06,420
organizations that invest in<font color="#CCCCCC"> DevOps by</font>

95
00:04:04,290 --> 00:04:11,100
and<font color="#E5E5E5"> large have massive improvements in</font>

96
00:04:06,420 --> 00:04:14,910
quality<font color="#E5E5E5"> and resilience and and so on so</font>

97
00:04:11,100 --> 00:04:17,339
this<font color="#CCCCCC"> is I mean this is a key experiment</font>

98
00:04:14,910 --> 00:04:21,589
<font color="#E5E5E5">that we can try we can try applying the</font>

99
00:04:17,339 --> 00:04:25,200
principles of DevOps to security and

100
00:04:21,589 --> 00:04:27,479
that's a look that's<font color="#E5E5E5"> not an obvious</font>

101
00:04:25,200 --> 00:04:29,520
<font color="#E5E5E5">thing to do there are a lot of companies</font>

102
00:04:27,479 --> 00:04:33,000
<font color="#E5E5E5">out there that are telling you what dev</font>

103
00:04:29,520 --> 00:04:35,460
saw SEC Ops is most of them are<font color="#E5E5E5"> just</font>

104
00:04:33,000 --> 00:04:37,979
saying to apply a little DevOps lipstick

105
00:04:35,460 --> 00:04:41,520
<font color="#E5E5E5">to the traditional ways that we do</font>

106
00:04:37,979 --> 00:04:44,400
<font color="#E5E5E5">security so I'll tell</font><font color="#CCCCCC"> you like plugging</font>

107
00:04:41,520 --> 00:04:46,289
fortify or<font color="#CCCCCC"> ver code</font><font color="#E5E5E5"> into</font><font color="#CCCCCC"> Jenkins</font><font color="#E5E5E5"> and</font>

108
00:04:44,400 --> 00:04:50,580
running it as part of every build is not

109
00:04:46,289 --> 00:04:53,729
<font color="#E5E5E5">deaf cyclist</font><font color="#CCCCCC"> that's a trivial</font><font color="#E5E5E5"> step</font>

110
00:04:50,580 --> 00:04:55,590
that's automating the<font color="#E5E5E5"> Scan button this</font>

111
00:04:53,729 --> 00:05:00,419
<font color="#CCCCCC">is a much more fundamental translation</font>

112
00:04:55,590 --> 00:05:02,758
and I think the path is to<font color="#E5E5E5"> look at what</font>

113
00:05:00,419 --> 00:05:04,080
<font color="#CCCCCC">Jean Kim laid out for us in the Phoenix</font>

114
00:05:02,759 --> 00:05:06,569
<font color="#E5E5E5">project</font><font color="#CCCCCC"> where she should obviously read</font>

115
00:05:04,080 --> 00:05:10,289
if you haven't read it<font color="#CCCCCC"> but he lays out</font>

116
00:05:06,569 --> 00:05:12,330
three ways of DevOps<font color="#CCCCCC"> and we need to</font>

117
00:05:10,289 --> 00:05:14,969
translate<font color="#E5E5E5"> those for security into three</font>

118
00:05:12,330 --> 00:05:16,889
ways of security and see if this<font color="#CCCCCC"> will</font>

119
00:05:14,970 --> 00:05:18,630
work<font color="#CCCCCC"> I still</font><font color="#E5E5E5"> think we're in early days</font>

120
00:05:16,889 --> 00:05:20,699
<font color="#E5E5E5">for this but I fully believe that</font><font color="#CCCCCC"> this</font>

121
00:05:18,630 --> 00:05:22,889
is<font color="#E5E5E5"> the right path forward to massive</font>

122
00:05:20,699 --> 00:05:25,889
improvements in<font color="#CCCCCC"> security</font><font color="#E5E5E5"> but this is a</font>

123
00:05:22,889 --> 00:05:29,159
different talk<font color="#E5E5E5"> we're gonna talk about</font>

124
00:05:25,889 --> 00:05:33,840
<font color="#E5E5E5">automation</font><font color="#CCCCCC"> today if you're interested in</font>

125
00:05:29,159 --> 00:05:37,259
<font color="#CCCCCC">that topic I just published</font><font color="#E5E5E5"> this ref</font>

126
00:05:33,840 --> 00:05:38,818
card<font color="#E5E5E5"> on deaf</font><font color="#CCCCCC"> se</font><font color="#E5E5E5"> cops for D zone and I</font>

127
00:05:37,259 --> 00:05:41,009
strongly encourage<font color="#E5E5E5"> you</font><font color="#CCCCCC"> to</font><font color="#E5E5E5"> look at it</font>

128
00:05:38,819 --> 00:05:43,139
it's<font color="#E5E5E5"> got its pretty lengthy and it's got</font>

129
00:05:41,009 --> 00:05:46,860
a good explanation<font color="#E5E5E5"> of how that process</font>

130
00:05:43,139 --> 00:05:49,130
<font color="#E5E5E5">should work as a side</font><font color="#CCCCCC"> comment</font><font color="#E5E5E5"> I wish I</font>

131
00:05:46,860 --> 00:05:52,039
could<font color="#E5E5E5"> have published this at a loss but</font>

132
00:05:49,130 --> 00:05:54,210
almost makes it<font color="#E5E5E5"> really difficult for</font>

133
00:05:52,039 --> 00:05:56,310
vendors to participate and<font color="#E5E5E5"> that's a</font>

134
00:05:54,210 --> 00:06:01,169
challenge<font color="#CCCCCC"> for OS</font><font color="#E5E5E5"> but I'd like</font><font color="#CCCCCC"> to see</font>

135
00:05:56,310 --> 00:06:03,360
addressed um<font color="#CCCCCC"> okay so today we're gonna</font>

136
00:06:01,169 --> 00:06:04,740
<font color="#E5E5E5">focus on something much narrower we're</font>

137
00:06:03,360 --> 00:06:07,320
just going<font color="#E5E5E5"> to talk about the automation</font>

138
00:06:04,740 --> 00:06:10,320
piece of deficit cops<font color="#E5E5E5"> we're gonna build</font>

139
00:06:07,320 --> 00:06:12,659
a dev<font color="#E5E5E5"> sack ops pipeline and we're gonna</font>

140
00:06:10,320 --> 00:06:15,690
use<font color="#E5E5E5"> two technologies called</font><font color="#CCCCCC"> iist</font>

141
00:06:12,659 --> 00:06:19,409
and rasp<font color="#E5E5E5"> who's here is heard of either I</font>

142
00:06:15,690 --> 00:06:21,180
asked<font color="#E5E5E5"> or rasp okay so that's</font><font color="#CCCCCC"> fantastic</font>

143
00:06:19,409 --> 00:06:23,490
<font color="#CCCCCC">because</font><font color="#E5E5E5"> that's a big change from a</font>

144
00:06:21,180 --> 00:06:24,690
couple<font color="#E5E5E5"> of years ago so I wanted to talk</font>

145
00:06:23,490 --> 00:06:27,539
a little<font color="#E5E5E5"> bit about kind</font><font color="#CCCCCC"> of how we got</font>

146
00:06:24,690 --> 00:06:29,280
<font color="#CCCCCC">here there's two parts of app sack</font>

147
00:06:27,539 --> 00:06:31,020
there's the development<font color="#CCCCCC"> side where we</font>

148
00:06:29,280 --> 00:06:33,090
want to make our<font color="#E5E5E5"> code better with a code</font>

149
00:06:31,020 --> 00:06:34,409
<font color="#E5E5E5">quality side where we want to find</font>

150
00:06:33,090 --> 00:06:36,210
vulnerabilities and eliminate them<font color="#E5E5E5"> and</font>

151
00:06:34,409 --> 00:06:37,770
then there's the<font color="#E5E5E5"> operation side</font><font color="#CCCCCC"> this is</font>

152
00:06:36,210 --> 00:06:40,739
<font color="#CCCCCC">where</font><font color="#E5E5E5"> we</font><font color="#CCCCCC"> need to</font><font color="#E5E5E5"> identify and</font><font color="#CCCCCC"> block</font>

153
00:06:37,770 --> 00:06:42,630
attacks now historically those have<font color="#E5E5E5"> been</font>

154
00:06:40,740 --> 00:06:44,810
two completely separate processes

155
00:06:42,630 --> 00:06:48,440
practiced<font color="#E5E5E5"> largely by different people</font>

156
00:06:44,810 --> 00:06:48,440
<font color="#E5E5E5">that's really weird</font>

157
00:06:48,570 --> 00:06:55,050
the technologies on the the<font color="#E5E5E5"> development</font>

158
00:06:52,710 --> 00:06:57,570
side forever<font color="#E5E5E5"> we had just SAST and DAST</font>

159
00:06:55,050 --> 00:07:00,830
tools<font color="#E5E5E5"> static analysis</font><font color="#CCCCCC"> and dynamic</font>

160
00:06:57,570 --> 00:07:02,820
scanners and those tools were<font color="#E5E5E5"> everything</font>

161
00:07:00,830 --> 00:07:04,650
you know they're always<font color="#E5E5E5"> really</font>

162
00:07:02,820 --> 00:07:07,310
frustrating they're slow<font color="#CCCCCC"> and inaccurate</font>

163
00:07:04,650 --> 00:07:10,620
but<font color="#E5E5E5"> that's what we had for a long time a</font>

164
00:07:07,310 --> 00:07:12,210
few<font color="#E5E5E5"> years ago I asked came out that</font>

165
00:07:10,620 --> 00:07:13,830
stands for interactive<font color="#CCCCCC"> applications</font>

166
00:07:12,210 --> 00:07:16,140
security<font color="#CCCCCC"> testing and the big difference</font>

167
00:07:13,830 --> 00:07:18,380
<font color="#CCCCCC">is they take some</font><font color="#E5E5E5"> of the techniques of</font>

168
00:07:16,140 --> 00:07:20,789
SAST and DAST and some other things and

169
00:07:18,380 --> 00:07:22,770
delivers them<font color="#CCCCCC"> from inside</font><font color="#E5E5E5"> the running</font>

170
00:07:20,790 --> 00:07:24,840
application using a technique called

171
00:07:22,770 --> 00:07:26,909
instrumentation<font color="#E5E5E5"> we'll talk a little bit</font>

172
00:07:24,840 --> 00:07:28,979
about<font color="#E5E5E5"> how that works in a second but</font>

173
00:07:26,910 --> 00:07:30,870
getting inside the app is the<font color="#CCCCCC"> key</font><font color="#E5E5E5"> here</font>

174
00:07:28,980 --> 00:07:33,840
<font color="#E5E5E5">when you're inside the app you</font><font color="#CCCCCC"> have more</font>

175
00:07:30,870 --> 00:07:35,010
context so you can find a broader range

176
00:07:33,840 --> 00:07:37,080
of things<font color="#E5E5E5"> and</font><font color="#CCCCCC"> you</font><font color="#E5E5E5"> could be much more</font>

177
00:07:35,010 --> 00:07:40,020
accurate<font color="#E5E5E5"> so that's the big advance here</font>

178
00:07:37,080 --> 00:07:42,270
<font color="#E5E5E5">and interestingly almost the same thing</font>

179
00:07:40,020 --> 00:07:45,240
happened<font color="#E5E5E5"> on the operational side so for</font>

180
00:07:42,270 --> 00:07:46,500
years we had WAAFs and<font color="#CCCCCC"> IDs that was sort</font>

181
00:07:45,240 --> 00:07:48,930
of it that's how you protected apps

182
00:07:46,500 --> 00:07:50,910
<font color="#E5E5E5">these look at HTTP traffic and try to</font>

183
00:07:48,930 --> 00:07:52,860
block<font color="#CCCCCC"> attacks but they don't know what</font>

184
00:07:50,910 --> 00:07:54,120
they're defending<font color="#E5E5E5"> and so they make a lot</font>

185
00:07:52,860 --> 00:07:56,270
of mistakes<font color="#E5E5E5"> so</font><font color="#CCCCCC"> your</font><font color="#E5E5E5"> pricing a lot of</font>

186
00:07:54,120 --> 00:07:59,370
<font color="#CCCCCC">whack bypasses and</font><font color="#E5E5E5"> and things like that</font>

187
00:07:56,270 --> 00:08:03,210
<font color="#CCCCCC">rasp protects applications from inside</font>

188
00:07:59,370 --> 00:08:04,740
the app and so rasp sees the data the

189
00:08:03,210 --> 00:08:06,900
way<font color="#E5E5E5"> the app sees the data not what it</font>

190
00:08:04,740 --> 00:08:08,610
looks<font color="#E5E5E5"> like on</font><font color="#CCCCCC"> the wire</font><font color="#E5E5E5"> and so it can do</font>

191
00:08:06,900 --> 00:08:10,590
a<font color="#E5E5E5"> lot better job here so interestingly</font>

192
00:08:08,610 --> 00:08:13,170
that development happened<font color="#E5E5E5"> you know</font>

193
00:08:10,590 --> 00:08:15,869
roughly the same<font color="#CCCCCC"> timeframe and I think</font>

194
00:08:13,170 --> 00:08:18,030
the<font color="#E5E5E5"> trend is to provide those two things</font>

195
00:08:15,870 --> 00:08:20,820
together so<font color="#CCCCCC"> a single</font><font color="#E5E5E5"> agent that provides</font>

196
00:08:18,030 --> 00:08:22,409
<font color="#E5E5E5">I asked</font><font color="#CCCCCC"> and rasp</font><font color="#E5E5E5"> and software</font>

197
00:08:20,820 --> 00:08:24,840
composition analysis which<font color="#CCCCCC"> is sort of a</font>

198
00:08:22,410 --> 00:08:27,990
third branch<font color="#E5E5E5"> of this that's come</font><font color="#CCCCCC"> out of</font>

199
00:08:24,840 --> 00:08:30,239
the scene<font color="#CCCCCC"> to analyze open</font><font color="#E5E5E5"> source</font>

200
00:08:27,990 --> 00:08:32,720
libraries<font color="#CCCCCC"> okay so that's a</font><font color="#E5E5E5"> little the</font>

201
00:08:30,240 --> 00:08:34,680
historical<font color="#CCCCCC"> background of how we got here</font>

202
00:08:32,720 --> 00:08:37,260
<font color="#CCCCCC">want</font><font color="#E5E5E5"> to talk a little</font><font color="#CCCCCC"> bit about how I</font>

203
00:08:34,679 --> 00:08:40,469
asked<font color="#CCCCCC"> and rasp</font><font color="#E5E5E5"> really work</font><font color="#CCCCCC"> so I want you</font>

204
00:08:37,260 --> 00:08:44,939
to<font color="#CCCCCC"> imagine your application or API big</font>

205
00:08:40,470 --> 00:08:47,220
codebase across the whole stack and with

206
00:08:44,940 --> 00:08:49,620
I asked<font color="#CCCCCC"> Andres</font><font color="#E5E5E5"> what you do is you add a</font>

207
00:08:47,220 --> 00:08:51,120
component<font color="#E5E5E5"> to</font><font color="#CCCCCC"> the application I mean</font>

208
00:08:49,620 --> 00:08:53,010
technically it's an agent but<font color="#E5E5E5"> it's not</font>

209
00:08:51,120 --> 00:08:55,260
like an<font color="#E5E5E5"> operating system agent this</font><font color="#CCCCCC"> is</font>

210
00:08:53,010 --> 00:08:58,230
<font color="#CCCCCC">like a library you add to</font><font color="#E5E5E5"> your app</font>

211
00:08:55,260 --> 00:09:00,720
and what that library does is it

212
00:08:58,230 --> 00:09:03,630
instruments your applications so<font color="#CCCCCC"> it puts</font>

213
00:09:00,720 --> 00:09:05,220
sensors all<font color="#CCCCCC"> over your application this</font>

214
00:09:03,630 --> 00:09:07,620
<font color="#E5E5E5">is</font><font color="#CCCCCC"> a little bit like plugging</font><font color="#E5E5E5"> into that</font>

215
00:09:05,220 --> 00:09:09,630
diagnostic<font color="#E5E5E5"> port in your car so you can</font>

216
00:09:07,620 --> 00:09:11,460
get you know readouts directly<font color="#E5E5E5"> from the</font>

217
00:09:09,630 --> 00:09:13,620
engine<font color="#E5E5E5"> and temperature and speed and</font>

218
00:09:11,460 --> 00:09:15,750
rpms and so on<font color="#E5E5E5"> it's a little</font><font color="#CCCCCC"> like that</font>

219
00:09:13,620 --> 00:09:17,520
<font color="#E5E5E5">for your software</font><font color="#CCCCCC"> so we're gonna read</font>

220
00:09:15,750 --> 00:09:19,950
this data<font color="#CCCCCC"> directly from</font><font color="#E5E5E5"> the</font><font color="#CCCCCC"> running app</font>

221
00:09:17,520 --> 00:09:21,350
we're gonna watch it<font color="#E5E5E5"> run and using that</font>

222
00:09:19,950 --> 00:09:26,130
<font color="#CCCCCC">information we're gonna</font><font color="#E5E5E5"> identify</font>

223
00:09:21,350 --> 00:09:30,090
<font color="#E5E5E5">vulnerabilities and attacks so with I</font>

224
00:09:26,130 --> 00:09:32,340
asked imagine a developer<font color="#E5E5E5"> just using</font>

225
00:09:30,090 --> 00:09:33,750
this application normally right he's

226
00:09:32,340 --> 00:09:36,450
developing it he's running at local

227
00:09:33,750 --> 00:09:38,220
<font color="#E5E5E5">environment or in a QA</font><font color="#CCCCCC"> environment</font><font color="#E5E5E5"> when</font>

228
00:09:36,450 --> 00:09:40,400
he runs<font color="#E5E5E5"> this and the instrumentation is</font>

229
00:09:38,220 --> 00:09:42,990
in place<font color="#E5E5E5"> because he's got the agent so</font>

230
00:09:40,400 --> 00:09:44,689
imagine a sequel injection<font color="#CCCCCC"> kind of</font>

231
00:09:42,990 --> 00:09:47,850
<font color="#E5E5E5">vulnerability that he's just introduced</font>

232
00:09:44,690 --> 00:09:50,460
he types in let's say<font color="#CCCCCC"> the word Jeff into</font>

233
00:09:47,850 --> 00:09:52,230
<font color="#E5E5E5">his application that data flows through</font>

234
00:09:50,460 --> 00:09:54,270
the application inspect all the<font color="#E5E5E5"> data</font>

235
00:09:52,230 --> 00:09:57,110
paths<font color="#E5E5E5"> flow through the application</font><font color="#CCCCCC"> we'll</font>

236
00:09:54,270 --> 00:10:01,980
<font color="#E5E5E5">focus on this one that flows through and</font>

237
00:09:57,110 --> 00:10:04,110
ends up<font color="#CCCCCC"> eventually in a sequel query now</font>

238
00:10:01,980 --> 00:10:05,670
that I asked can see it sees this<font color="#E5E5E5"> path</font>

239
00:10:04,110 --> 00:10:07,500
and<font color="#E5E5E5"> it can look back</font><font color="#CCCCCC"> across this path</font>

240
00:10:05,670 --> 00:10:08,939
<font color="#E5E5E5">and say hey was</font><font color="#CCCCCC"> that data escaped or</font>

241
00:10:07,500 --> 00:10:11,340
parameterised in some way<font color="#CCCCCC"> that</font><font color="#E5E5E5"> would</font>

242
00:10:08,940 --> 00:10:13,320
have prevented<font color="#E5E5E5"> sequel injection if not</font>

243
00:10:11,340 --> 00:10:15,480
then we know we've confirmed this is a

244
00:10:13,320 --> 00:10:17,310
vulnerable<font color="#CCCCCC"> path through the application</font>

245
00:10:15,480 --> 00:10:19,890
we know it's exploitable<font color="#E5E5E5"> and we can</font>

246
00:10:17,310 --> 00:10:21,989
report it so this<font color="#E5E5E5"> is you know again why</font>

247
00:10:19,890 --> 00:10:23,580
I asked<font color="#CCCCCC"> and rasp</font><font color="#E5E5E5"> are more accurate</font><font color="#CCCCCC"> than</font>

248
00:10:21,990 --> 00:10:25,650
<font color="#E5E5E5">sassed and laughs and things like that</font>

249
00:10:23,580 --> 00:10:27,990
<font color="#E5E5E5">it's because they can only report things</font>

250
00:10:25,650 --> 00:10:29,730
that actually<font color="#E5E5E5"> happen in the application</font>

251
00:10:27,990 --> 00:10:31,470
they don't build<font color="#E5E5E5"> a model of the</font>

252
00:10:29,730 --> 00:10:35,120
application they're using the actual

253
00:10:31,470 --> 00:10:37,410
application<font color="#E5E5E5"> as what they're studying and</font>

254
00:10:35,120 --> 00:10:39,150
similarly<font color="#CCCCCC"> on the rasp side it</font><font color="#E5E5E5"> works</font>

255
00:10:37,410 --> 00:10:41,910
almost<font color="#E5E5E5"> the same way this time</font><font color="#CCCCCC"> imagine an</font>

256
00:10:39,150 --> 00:10:44,370
attack and you know the attacker enters

257
00:10:41,910 --> 00:10:46,110
or one equals one<font color="#E5E5E5"> or something well that</font>

258
00:10:44,370 --> 00:10:47,880
data flows through the application you

259
00:10:46,110 --> 00:10:50,220
know it gets appended to strings and

260
00:10:47,880 --> 00:10:53,930
split<font color="#E5E5E5"> up into pieces and so on and</font>

261
00:10:50,220 --> 00:10:56,730
<font color="#E5E5E5">eventually it ends up in a sequel query</font>

262
00:10:53,930 --> 00:10:59,400
the<font color="#CCCCCC"> rasp can analyze that sequel query</font>

263
00:10:56,730 --> 00:11:02,130
and say hey that data modified the

264
00:10:59,400 --> 00:11:04,530
meaning of that sequel query<font color="#E5E5E5"> that's the</font>

265
00:11:02,130 --> 00:11:06,720
definition of sequel injection<font color="#E5E5E5"> and so we</font>

266
00:11:04,530 --> 00:11:08,310
can say we've we've literally<font color="#E5E5E5"> observed a</font>

267
00:11:06,720 --> 00:11:10,200
sequel injection attack in

268
00:11:08,310 --> 00:11:12,750
the application we've confirmed it<font color="#E5E5E5"> and</font>

269
00:11:10,200 --> 00:11:15,000
we can intervene and prevent that query

270
00:11:12,750 --> 00:11:17,670
from going to the database<font color="#E5E5E5"> so the</font>

271
00:11:15,000 --> 00:11:19,860
difference<font color="#CCCCCC"> here between rasp and a laugh</font>

272
00:11:17,670 --> 00:11:21,750
is you know the<font color="#CCCCCC"> rat the wife has to</font><font color="#E5E5E5"> sit</font>

273
00:11:19,860 --> 00:11:24,420
in front<font color="#E5E5E5"> of the app and it can only see</font>

274
00:11:21,750 --> 00:11:27,839
the HTTP rasp can see everything<font color="#CCCCCC"> that's</font>

275
00:11:24,420 --> 00:11:29,130
<font color="#CCCCCC">going on here and you know it knows the</font>

276
00:11:27,839 --> 00:11:30,839
exact line of code it knows the full

277
00:11:29,130 --> 00:11:33,120
query that's going to the database it

278
00:11:30,839 --> 00:11:34,140
knows<font color="#E5E5E5"> everything about this attack so I</font>

279
00:11:33,120 --> 00:11:37,770
<font color="#CCCCCC">could do a better job of</font><font color="#E5E5E5"> blocking it</font>

280
00:11:34,140 --> 00:11:39,779
<font color="#E5E5E5">everybody with me so far</font><font color="#CCCCCC"> okay good all</font>

281
00:11:37,770 --> 00:11:42,270
<font color="#E5E5E5">right so today what we're gonna do is</font>

282
00:11:39,779 --> 00:11:46,740
we're<font color="#CCCCCC"> gonna use Iestyn</font><font color="#E5E5E5"> rasp to transform</font>

283
00:11:42,270 --> 00:11:49,680
a relatively simple<font color="#CCCCCC"> DevOps pipeline into</font>

284
00:11:46,740 --> 00:11:51,210
a<font color="#E5E5E5"> dev</font><font color="#CCCCCC"> sec ops pipeline</font><font color="#E5E5E5"> okay so we're</font>

285
00:11:49,680 --> 00:11:56,339
gonna do this in three steps<font color="#E5E5E5"> we've got</font>

286
00:11:51,210 --> 00:11:57,510
development<font color="#CCCCCC"> CI CD and production we're</font>

287
00:11:56,339 --> 00:11:59,640
gonna do it we're gonna<font color="#E5E5E5"> spend</font><font color="#CCCCCC"> some time</font>

288
00:11:57,510 --> 00:12:03,510
in<font color="#E5E5E5"> each of these</font><font color="#CCCCCC"> areas so we're gonna</font>

289
00:11:59,640 --> 00:12:04,770
use<font color="#CCCCCC"> IIST and rasp here in development to</font>

290
00:12:03,510 --> 00:12:06,960
automatically identify vulnerabilities

291
00:12:04,770 --> 00:12:08,010
and feed them and you know get access to

292
00:12:06,960 --> 00:12:10,770
<font color="#E5E5E5">them</font><font color="#CCCCCC"> and the tools that</font><font color="#E5E5E5"> we're already</font>

293
00:12:08,010 --> 00:12:12,660
using<font color="#CCCCCC"> in dev very tight feedback</font><font color="#E5E5E5"> then</font>

294
00:12:10,770 --> 00:12:13,890
we're gonna do<font color="#E5E5E5"> what we're gonna do</font>

295
00:12:12,660 --> 00:12:16,920
something<font color="#CCCCCC"> with libraries</font><font color="#E5E5E5"> then we're</font>

296
00:12:13,890 --> 00:12:18,839
<font color="#CCCCCC">gonna do sort</font><font color="#E5E5E5"> of the same</font><font color="#CCCCCC"> thing in QA</font>

297
00:12:16,920 --> 00:12:20,880
and test environment<font color="#E5E5E5"> we're gonna add I</font>

298
00:12:18,839 --> 00:12:22,770
asked<font color="#E5E5E5"> rasp agent here and we're gonna</font>

299
00:12:20,880 --> 00:12:25,770
run our test suite<font color="#CCCCCC"> and we're gonna</font><font color="#E5E5E5"> get</font>

300
00:12:22,770 --> 00:12:28,800
feedback directly into our<font color="#CCCCCC"> bug tracking</font>

301
00:12:25,770 --> 00:12:32,520
tools and our build process<font color="#E5E5E5"> and then</font>

302
00:12:28,800 --> 00:12:34,349
finally in production we're gonna add is

303
00:12:32,520 --> 00:12:36,720
<font color="#E5E5E5">harassment here we're gonna get great</font>

304
00:12:34,350 --> 00:12:39,630
telemetry<font color="#E5E5E5"> around who's attacking us what</font>

305
00:12:36,720 --> 00:12:42,530
they're doing and what apps they're

306
00:12:39,630 --> 00:12:47,040
attacking<font color="#CCCCCC"> I and feed that into</font><font color="#E5E5E5"> our our</font>

307
00:12:42,530 --> 00:12:48,660
<font color="#CCCCCC">sim so most</font><font color="#E5E5E5"> people talk about dev set</font>

308
00:12:47,040 --> 00:12:51,510
cops they really are only talking<font color="#E5E5E5"> about</font>

309
00:12:48,660 --> 00:12:54,930
<font color="#E5E5E5">dev</font><font color="#CCCCCC"> sec</font><font color="#E5E5E5"> they actually don't think</font><font color="#CCCCCC"> about</font>

310
00:12:51,510 --> 00:12:56,610
ops<font color="#E5E5E5"> and</font><font color="#CCCCCC"> sec ops is a really important</font>

311
00:12:54,930 --> 00:12:59,069
<font color="#E5E5E5">part of this</font><font color="#CCCCCC"> puzzle so I want you to</font>

312
00:12:56,610 --> 00:13:03,540
remember this piece it's an important

313
00:12:59,070 --> 00:13:04,920
part<font color="#E5E5E5"> of dev</font><font color="#CCCCCC"> set</font><font color="#E5E5E5"> cops landscape</font><font color="#CCCCCC"> ok let's</font>

314
00:13:03,540 --> 00:13:06,270
get started<font color="#CCCCCC"> so yeah these are</font><font color="#E5E5E5"> the four</font>

315
00:13:04,920 --> 00:13:07,829
<font color="#E5E5E5">steps we're going to go through we're</font>

316
00:13:06,270 --> 00:13:11,970
gonna start in development<font color="#E5E5E5"> and then or</font>

317
00:13:07,830 --> 00:13:14,790
work our way forward<font color="#E5E5E5"> so the goals for</font>

318
00:13:11,970 --> 00:13:17,160
<font color="#CCCCCC">development here's what I'd love to</font>

319
00:13:14,790 --> 00:13:20,819
accomplish<font color="#CCCCCC"> right</font><font color="#E5E5E5"> I want</font><font color="#CCCCCC"> to see security</font>

320
00:13:17,160 --> 00:13:23,280
<font color="#E5E5E5">speed and scale ok</font><font color="#CCCCCC"> security means</font>

321
00:13:20,820 --> 00:13:24,870
we've got the right<font color="#E5E5E5"> of three rules the</font>

322
00:13:23,280 --> 00:13:27,240
right policies we're<font color="#E5E5E5"> checking a broad</font>

323
00:13:24,870 --> 00:13:30,060
range of stuff<font color="#E5E5E5"> so this is interesting</font>

324
00:13:27,240 --> 00:13:31,500
static tools don't check a lot<font color="#CCCCCC"> of things</font>

325
00:13:30,060 --> 00:13:33,689
they<font color="#E5E5E5"> don't check clickjacking they don't</font>

326
00:13:31,500 --> 00:13:34,920
check things like parameter pollution

327
00:13:33,690 --> 00:13:36,210
<font color="#E5E5E5">they don't check the things that are</font>

328
00:13:34,920 --> 00:13:38,849
obvious<font color="#E5E5E5"> in HTML</font><font color="#CCCCCC"> because they don't have</font>

329
00:13:36,210 --> 00:13:40,410
<font color="#CCCCCC">access to the HTML dynamic tools don't</font>

330
00:13:38,850 --> 00:13:42,960
check<font color="#E5E5E5"> things that are buried deep</font><font color="#CCCCCC"> in</font><font color="#E5E5E5"> the</font>

331
00:13:40,410 --> 00:13:45,510
code things like<font color="#E5E5E5"> hard-coded passwords</font>

332
00:13:42,960 --> 00:13:49,620
<font color="#E5E5E5">and wrong encryption algorithms because</font>

333
00:13:45,510 --> 00:13:51,330
they can't see that<font color="#E5E5E5"> and frankly you know</font>

334
00:13:49,620 --> 00:13:53,420
neither of<font color="#CCCCCC"> those approaches is really</font>

335
00:13:51,330 --> 00:13:55,650
good at identifying<font color="#E5E5E5"> things like</font>

336
00:13:53,420 --> 00:13:58,079
injection problems<font color="#E5E5E5"> the number one thing</font>

337
00:13:55,650 --> 00:14:00,600
in<font color="#CCCCCC"> stock</font><font color="#E5E5E5"> ten but Seco injection</font>

338
00:13:58,080 --> 00:14:03,570
cross-site scripting<font color="#E5E5E5"> xxe all those</font>

339
00:14:00,600 --> 00:14:05,190
<font color="#E5E5E5">communication all those do</font><font color="#CCCCCC"> dynamic and</font>

340
00:14:03,570 --> 00:14:08,430
<font color="#E5E5E5">Static tools are not great at that</font><font color="#CCCCCC"> cuz</font>

341
00:14:05,190 --> 00:14:09,960
<font color="#E5E5E5">data flow analysis is really hard speed</font>

342
00:14:08,430 --> 00:14:12,750
is really important<font color="#E5E5E5"> we want to give</font>

343
00:14:09,960 --> 00:14:14,940
developers<font color="#E5E5E5"> instant feedback that's when</font>

344
00:14:12,750 --> 00:14:16,980
we<font color="#E5E5E5"> can solve these problems</font><font color="#CCCCCC"> for the most</font>

345
00:14:14,940 --> 00:14:18,300
you<font color="#E5E5E5"> know the most cost-effectively give</font>

346
00:14:16,980 --> 00:14:21,980
instant feedback through the<font color="#CCCCCC"> tools that</font>

347
00:14:18,300 --> 00:14:24,209
<font color="#E5E5E5">are</font><font color="#CCCCCC"> already using and then scale is</font>

348
00:14:21,980 --> 00:14:26,130
critically important<font color="#E5E5E5"> and so many people</font>

349
00:14:24,210 --> 00:14:30,030
<font color="#E5E5E5">miss this if you're securing one</font>

350
00:14:26,130 --> 00:14:32,790
application I you know any process will

351
00:14:30,030 --> 00:14:35,610
look<font color="#E5E5E5"> great but if you zoom</font><font color="#CCCCCC"> out and</font><font color="#E5E5E5"> you</font>

352
00:14:32,790 --> 00:14:38,280
<font color="#E5E5E5">say hey I've got 50 apps or 100 apps or</font>

353
00:14:35,610 --> 00:14:40,230
10,000 apps<font color="#CCCCCC"> all of a</font><font color="#E5E5E5"> sudden you have to</font>

354
00:14:38,280 --> 00:14:43,110
be really<font color="#CCCCCC"> careful about</font><font color="#E5E5E5"> any step in that</font>

355
00:14:40,230 --> 00:14:45,440
process<font color="#CCCCCC"> that requires experts</font><font color="#E5E5E5"> if there's</font>

356
00:14:43,110 --> 00:14:48,600
an expert involved<font color="#E5E5E5"> it won't scale</font>

357
00:14:45,440 --> 00:14:49,800
<font color="#E5E5E5">because there are not</font><font color="#CCCCCC"> enough experts so</font>

358
00:14:48,600 --> 00:14:51,450
every<font color="#CCCCCC"> organization every big</font>

359
00:14:49,800 --> 00:14:53,670
organization that I've worked with runs

360
00:14:51,450 --> 00:14:56,190
into this problem<font color="#E5E5E5"> they can't scale their</font>

361
00:14:53,670 --> 00:14:57,839
program they get stuck at 50 apps or 70

362
00:14:56,190 --> 00:14:59,100
apps or something because<font color="#CCCCCC"> they</font><font color="#E5E5E5"> just</font>

363
00:14:57,840 --> 00:15:01,710
<font color="#E5E5E5">don't have enough experts to drive</font>

364
00:14:59,100 --> 00:15:03,570
people<font color="#E5E5E5"> through a lot of cases what they</font>

365
00:15:01,710 --> 00:15:05,490
do is they lower the bar so they start

366
00:15:03,570 --> 00:15:07,920
turning off rules and pretty soon you've

367
00:15:05,490 --> 00:15:11,340
got<font color="#E5E5E5"> a very expensive noisy XSS detector</font>

368
00:15:07,920 --> 00:15:12,810
and that's not helping anybody<font color="#CCCCCC"> so it has</font>

369
00:15:11,340 --> 00:15:14,340
to work and scale also<font color="#E5E5E5"> mean</font><font color="#CCCCCC"> it has to</font>

370
00:15:12,810 --> 00:15:17,729
<font color="#E5E5E5">work across all your different</font><font color="#CCCCCC"> kinds of</font>

371
00:15:14,340 --> 00:15:20,550
<font color="#E5E5E5">apps api's are a critical</font><font color="#CCCCCC"> part of the</font>

372
00:15:17,730 --> 00:15:24,390
<font color="#E5E5E5">landscape now who here's developing an</font>

373
00:15:20,550 --> 00:15:28,290
application<font color="#CCCCCC"> that uses AP is holy</font>

374
00:15:24,390 --> 00:15:30,390
that's<font color="#E5E5E5"> like 80 percent at least</font><font color="#CCCCCC"> static</font>

375
00:15:28,290 --> 00:15:32,160
<font color="#E5E5E5">and dynamic tools don't work on AP</font><font color="#CCCCCC"> is</font>

376
00:15:30,390 --> 00:15:34,140
sorry they just don't

377
00:15:32,160 --> 00:15:36,150
I've run massive experiments with

378
00:15:34,140 --> 00:15:38,010
lots of test cases<font color="#E5E5E5"> dynamic tools can't</font>

379
00:15:36,150 --> 00:15:40,709
scan them static tools can't handle the

380
00:15:38,010 --> 00:15:42,630
frameworks they just don't work so we

381
00:15:40,710 --> 00:15:44,520
<font color="#E5E5E5">need a different approach</font><font color="#CCCCCC"> so that's</font>

382
00:15:42,630 --> 00:15:49,380
those<font color="#CCCCCC"> are like goals right so let's dig</font>

383
00:15:44,520 --> 00:15:51,000
in<font color="#CCCCCC"> today we're</font><font color="#E5E5E5"> gonna</font><font color="#CCCCCC"> use I asked and</font>

384
00:15:49,380 --> 00:15:52,860
rasp<font color="#E5E5E5"> agent from contrast that's my</font>

385
00:15:51,000 --> 00:15:55,320
company<font color="#CCCCCC"> this</font><font color="#E5E5E5"> is our</font><font color="#CCCCCC"> Community Edition</font>

386
00:15:52,860 --> 00:15:57,090
<font color="#E5E5E5">it's free for everyone so you can go and</font>

387
00:15:55,320 --> 00:15:59,370
sign up<font color="#E5E5E5"> and get</font><font color="#CCCCCC"> started</font><font color="#E5E5E5"> with this but</font>

388
00:15:57,090 --> 00:15:59,790
it's<font color="#CCCCCC"> you're free to use</font><font color="#E5E5E5"> whatever I asked</font>

389
00:15:59,370 --> 00:16:01,830
<font color="#CCCCCC">and rasp</font>

390
00:15:59,790 --> 00:16:05,610
technology you want<font color="#E5E5E5"> this is a generic</font>

391
00:16:01,830 --> 00:16:07,830
talk to use this<font color="#E5E5E5"> you sign up and then</font>

392
00:16:05,610 --> 00:16:10,170
<font color="#E5E5E5">you get an account you log in you</font>

393
00:16:07,830 --> 00:16:12,240
download the agent will be<font color="#E5E5E5"> doing Java</font>

394
00:16:10,170 --> 00:16:15,360
examples so you'll download<font color="#E5E5E5"> the jar file</font>

395
00:16:12,240 --> 00:16:17,100
it's<font color="#CCCCCC"> a</font><font color="#E5E5E5"> just a standard Java stuff drop</font>

396
00:16:15,360 --> 00:16:19,440
it in on<font color="#CCCCCC"> your application</font><font color="#E5E5E5"> server and</font>

397
00:16:17,100 --> 00:16:22,880
then that's it<font color="#E5E5E5"> you're off to the races</font>

398
00:16:19,440 --> 00:16:25,260
<font color="#CCCCCC">so that's the getting started part and</font>

399
00:16:22,880 --> 00:16:26,790
I'm<font color="#E5E5E5"> gonna I'm gonna demonstrate this</font>

400
00:16:25,260 --> 00:16:28,080
rather<font color="#E5E5E5"> than go through slides so I've</font>

401
00:16:26,790 --> 00:16:29,579
got three environments<font color="#CCCCCC"> that we're going</font>

402
00:16:28,080 --> 00:16:30,960
<font color="#E5E5E5">to use so pay attention</font><font color="#CCCCCC"> at the top of</font>

403
00:16:29,580 --> 00:16:33,120
the screen<font color="#E5E5E5"> here</font><font color="#CCCCCC"> this one's my</font>

404
00:16:30,960 --> 00:16:34,290
development<font color="#E5E5E5"> environment</font><font color="#CCCCCC"> I've got a CI</font>

405
00:16:33,120 --> 00:16:36,990
see the<font color="#E5E5E5"> environment that we'll talk</font>

406
00:16:34,290 --> 00:16:38,189
<font color="#E5E5E5">about in a few minutes and a production</font>

407
00:16:36,990 --> 00:16:42,060
environment that we'll get<font color="#E5E5E5"> to in</font><font color="#CCCCCC"> a</font>

408
00:16:38,190 --> 00:16:44,040
second as well<font color="#E5E5E5"> so in development</font><font color="#CCCCCC"> I want</font>

409
00:16:42,060 --> 00:16:45,800
you to imagine I'm writing some code

410
00:16:44,040 --> 00:16:48,449
this<font color="#E5E5E5"> is an</font><font color="#CCCCCC"> application called pet clinic</font>

411
00:16:45,800 --> 00:16:51,390
<font color="#CCCCCC">it's a spring application that uses</font>

412
00:16:48,450 --> 00:16:56,730
hibernate and<font color="#E5E5E5"> spring boot so it's it's</font>

413
00:16:51,390 --> 00:16:59,370
decently complicated and I've just added

414
00:16:56,730 --> 00:17:02,040
<font color="#E5E5E5">it</font><font color="#CCCCCC"> to you know my Eclipse</font><font color="#E5E5E5"> environment</font>

415
00:16:59,370 --> 00:17:04,440
<font color="#CCCCCC">and I've got it running</font><font color="#E5E5E5"> here so I added</font>

416
00:17:02,040 --> 00:17:05,819
the contrast jar file<font color="#E5E5E5"> this is my</font><font color="#CCCCCC"> Iestyn</font>

417
00:17:04,440 --> 00:17:08,730
rasp<font color="#E5E5E5"> agent</font><font color="#CCCCCC"> I just dropped</font><font color="#E5E5E5"> in to my</font>

418
00:17:05,819 --> 00:17:13,079
project here<font color="#E5E5E5"> and then in my palm to</font>

419
00:17:08,730 --> 00:17:15,270
enable it<font color="#CCCCCC"> oh boy I don't have my cursor</font>

420
00:17:13,079 --> 00:17:20,280
<font color="#E5E5E5">that's really a pain there it is okay so</font>

421
00:17:15,270 --> 00:17:23,160
in in my palm<font color="#E5E5E5"> I've enabled it in two</font>

422
00:17:20,280 --> 00:17:25,349
<font color="#CCCCCC">places</font><font color="#E5E5E5"> here I've enabled it in the</font>

423
00:17:23,160 --> 00:17:27,060
spring boot plugin<font color="#E5E5E5"> so this will launch</font>

424
00:17:25,349 --> 00:17:28,439
it every time<font color="#E5E5E5"> the application</font><font color="#CCCCCC"> runs as</font>

425
00:17:27,060 --> 00:17:32,580
you're doing<font color="#CCCCCC"> your normal testing and</font>

426
00:17:28,440 --> 00:17:36,270
then I've<font color="#CCCCCC"> enabled it in the Surefire</font>

427
00:17:32,580 --> 00:17:37,470
<font color="#E5E5E5">plugin you can see</font><font color="#CCCCCC"> right</font><font color="#E5E5E5"> here</font><font color="#CCCCCC"> and</font><font color="#E5E5E5"> this</font>

428
00:17:36,270 --> 00:17:41,129
will<font color="#E5E5E5"> run it every time we run our</font>

429
00:17:37,470 --> 00:17:42,900
automated test cases<font color="#CCCCCC"> okay</font><font color="#E5E5E5"> so with</font><font color="#CCCCCC"> that</font>

430
00:17:41,130 --> 00:17:44,970
I've already<font color="#E5E5E5"> started the</font><font color="#CCCCCC"> application but</font>

431
00:17:42,900 --> 00:17:47,360
it just starts up normally with contrast

432
00:17:44,970 --> 00:17:47,360
in place

433
00:17:47,850 --> 00:17:51,330
I'll just start doing<font color="#E5E5E5"> a little bit of</font>

434
00:17:50,100 --> 00:17:53,580
testing<font color="#CCCCCC"> so this is the pet clinic</font>

435
00:17:51,330 --> 00:17:56,850
application and now as I browse around

436
00:17:53,580 --> 00:18:00,330
<font color="#E5E5E5">and type in stuff contrast is in the</font>

437
00:17:56,850 --> 00:18:02,370
<font color="#E5E5E5">background doing security testing and</font>

438
00:18:00,330 --> 00:18:07,770
you can see already that<font color="#E5E5E5"> there's new</font>

439
00:18:02,370 --> 00:18:09,899
vulnerabilities<font color="#E5E5E5"> piling in</font><font color="#CCCCCC"> so this is you</font>

440
00:18:07,770 --> 00:18:11,280
know<font color="#E5E5E5"> this is how you</font><font color="#CCCCCC"> use I asked is it's</font>

441
00:18:09,900 --> 00:18:13,169
<font color="#E5E5E5">just in the background finding</font>

442
00:18:11,280 --> 00:18:17,490
vulnerabilities as you do your normal QA

443
00:18:13,169 --> 00:18:20,700
activities anyone can do<font color="#CCCCCC"> this just</font><font color="#E5E5E5"> a</font>

444
00:18:17,490 --> 00:18:22,890
side note<font color="#E5E5E5"> someone yesterday stopped by</font>

445
00:18:20,700 --> 00:18:24,929
the booth as a developer they said they

446
00:18:22,890 --> 00:18:27,780
had an app and<font color="#CCCCCC"> said well why</font><font color="#E5E5E5"> don't we</font>

447
00:18:24,929 --> 00:18:30,660
<font color="#E5E5E5">just try</font><font color="#CCCCCC"> it and so he sat down he signed</font>

448
00:18:27,780 --> 00:18:32,879
up<font color="#CCCCCC"> grabbed</font><font color="#E5E5E5"> the</font><font color="#CCCCCC"> Iast agent added it to</font>

449
00:18:30,660 --> 00:18:34,500
<font color="#E5E5E5">his app and two minutes</font><font color="#CCCCCC"> later</font><font color="#E5E5E5"> he was</font>

450
00:18:32,880 --> 00:18:36,900
<font color="#E5E5E5">using contrast finding vulnerabilities</font>

451
00:18:34,500 --> 00:18:39,960
and analyzing his libraries and stuff<font color="#E5E5E5"> so</font>

452
00:18:36,900 --> 00:18:41,280
this<font color="#E5E5E5"> really can be</font><font color="#CCCCCC"> quite quick</font><font color="#E5E5E5"> so I'll</font>

453
00:18:39,960 --> 00:18:43,169
go into some<font color="#CCCCCC"> of</font><font color="#E5E5E5"> these alerts in just a</font>

454
00:18:41,280 --> 00:18:46,200
second<font color="#E5E5E5"> but you can see</font><font color="#CCCCCC"> you know using</font><font color="#E5E5E5"> I</font>

455
00:18:43,169 --> 00:18:48,570
asked is really easy now in this case

456
00:18:46,200 --> 00:18:51,330
there's<font color="#E5E5E5"> an IDE</font><font color="#CCCCCC"> plug-in and I'll just</font>

457
00:18:48,570 --> 00:18:52,439
refresh<font color="#E5E5E5"> this here these are the</font>

458
00:18:51,330 --> 00:18:56,309
<font color="#E5E5E5">vulnerabilities that</font><font color="#CCCCCC"> we've just</font>

459
00:18:52,440 --> 00:18:57,690
discovered<font color="#E5E5E5"> in in contrast so here you</font>

460
00:18:56,309 --> 00:19:00,000
can see there's a<font color="#CCCCCC"> hibernate injection</font>

461
00:18:57,690 --> 00:19:01,169
path traversal stored XSS<font color="#CCCCCC"> you know some</font>

462
00:19:00,000 --> 00:19:03,780
of<font color="#CCCCCC"> these</font><font color="#E5E5E5"> are actually pretty hard for</font>

463
00:19:01,169 --> 00:19:06,630
tools<font color="#CCCCCC"> geo traditional tools to find</font><font color="#E5E5E5"> I'll</font>

464
00:19:03,780 --> 00:19:10,049
dig into<font color="#E5E5E5"> the the hibernate injection</font>

465
00:19:06,630 --> 00:19:12,390
here<font color="#E5E5E5"> and you can see there's an overview</font>

466
00:19:10,049 --> 00:19:14,460
of<font color="#E5E5E5"> what happened and I'm gonna try</font><font color="#CCCCCC"> and</font>

467
00:19:12,390 --> 00:19:18,870
zoom in<font color="#E5E5E5"> on this let's see if this works</font>

468
00:19:14,460 --> 00:19:21,240
<font color="#CCCCCC">so this</font><font color="#E5E5E5"> tells a nice little story about</font>

469
00:19:18,870 --> 00:19:23,428
<font color="#E5E5E5">this vulnerability it says hey here's</font>

470
00:19:21,240 --> 00:19:26,940
some details<font color="#CCCCCC"> from an HTTP request</font><font color="#E5E5E5"> this</font>

471
00:19:23,429 --> 00:19:29,100
<font color="#E5E5E5">is part of the get that that data that</font>

472
00:19:26,940 --> 00:19:30,870
<font color="#CCCCCC">asdf was accessed on this following</font><font color="#E5E5E5"> line</font>

473
00:19:29,100 --> 00:19:32,909
<font color="#CCCCCC">of code</font><font color="#E5E5E5"> so it gives you the method and</font>

474
00:19:30,870 --> 00:19:34,590
the line number<font color="#E5E5E5"> and then it shows you</font>

475
00:19:32,910 --> 00:19:36,510
where that data landed in this sequel

476
00:19:34,590 --> 00:19:40,168
query so you can see that same<font color="#CCCCCC"> SDF that</font>

477
00:19:36,510 --> 00:19:41,730
<font color="#E5E5E5">I just typed in right here</font><font color="#CCCCCC"> that's the</font>

478
00:19:40,169 --> 00:19:43,260
kind of the definition<font color="#CCCCCC"> of sequel</font>

479
00:19:41,730 --> 00:19:46,049
injection the data flowed from untrusted

480
00:19:43,260 --> 00:19:48,169
<font color="#E5E5E5">source through into a sequel query</font>

481
00:19:46,049 --> 00:19:51,270
without<font color="#E5E5E5"> being parameterised or escaped</font>

482
00:19:48,169 --> 00:19:52,740
<font color="#E5E5E5">that's really powerful story that</font><font color="#CCCCCC"> that</font>

483
00:19:51,270 --> 00:19:56,280
developers<font color="#E5E5E5"> can get their head around to</font>

484
00:19:52,740 --> 00:19:58,710
go fix this now

485
00:19:56,280 --> 00:20:00,240
this you know this<font color="#CCCCCC"> vulnerability has</font>

486
00:19:58,710 --> 00:20:01,440
some<font color="#E5E5E5"> details about what you need to do</font>

487
00:20:00,240 --> 00:20:03,390
to fix it

488
00:20:01,440 --> 00:20:07,470
in terms of you know<font color="#E5E5E5"> making this a safe</font>

489
00:20:03,390 --> 00:20:09,060
hql query<font color="#CCCCCC"> by the way this is hibernate</font>

490
00:20:07,470 --> 00:20:11,910
injection<font color="#E5E5E5"> it's a little bit different</font>

491
00:20:09,060 --> 00:20:14,310
<font color="#CCCCCC">than sequel injection</font><font color="#E5E5E5"> because</font><font color="#CCCCCC"> this</font>

492
00:20:11,910 --> 00:20:16,680
<font color="#CCCCCC">application uses</font><font color="#E5E5E5"> hibernate</font><font color="#CCCCCC"> there's the</font>

493
00:20:14,310 --> 00:20:19,889
query is a little more complicated<font color="#E5E5E5"> but I</font>

494
00:20:16,680 --> 00:20:21,360
<font color="#CCCCCC">ask</font><font color="#E5E5E5"> can handle that no problem</font><font color="#CCCCCC"> and</font>

495
00:20:19,890 --> 00:20:22,830
there's also a lot of<font color="#E5E5E5"> details</font><font color="#CCCCCC"> here about</font>

496
00:20:21,360 --> 00:20:25,320
<font color="#E5E5E5">this vulnerability so you can see</font>

497
00:20:22,830 --> 00:20:28,710
there's you know the line of code where

498
00:20:25,320 --> 00:20:31,320
<font color="#CCCCCC">the the parameter came in the details of</font>

499
00:20:28,710 --> 00:20:32,280
building this query<font color="#E5E5E5"> and then the the</font>

500
00:20:31,320 --> 00:20:34,439
line of code where this was actually

501
00:20:32,280 --> 00:20:36,480
<font color="#E5E5E5">sent to the database so you can really</font>

502
00:20:34,440 --> 00:20:40,140
see the whole flow and the full stack

503
00:20:36,480 --> 00:20:42,180
trace for for each of these steps<font color="#CCCCCC"> and</font>

504
00:20:40,140 --> 00:20:44,040
the idea the whole idea<font color="#E5E5E5"> here is to make</font>

505
00:20:42,180 --> 00:20:46,110
<font color="#CCCCCC">this fixable for a developer so I can</font>

506
00:20:44,040 --> 00:20:48,899
double click<font color="#E5E5E5"> on this and</font><font color="#CCCCCC"> go</font><font color="#E5E5E5"> directly to</font>

507
00:20:46,110 --> 00:20:52,310
<font color="#CCCCCC">the exact line of code where</font><font color="#E5E5E5"> that</font>

508
00:20:48,900 --> 00:20:54,720
<font color="#E5E5E5">vulnerability exists in the software so</font>

509
00:20:52,310 --> 00:20:56,520
the idea here again<font color="#E5E5E5"> so let's make this</font>

510
00:20:54,720 --> 00:20:57,720
easy<font color="#CCCCCC"> for developers let's give it</font><font color="#E5E5E5"> to</font>

511
00:20:56,520 --> 00:21:01,560
<font color="#E5E5E5">them in the tools that</font><font color="#CCCCCC"> they're already</font>

512
00:20:57,720 --> 00:21:03,900
<font color="#E5E5E5">using so I showed you</font><font color="#CCCCCC"> before that that</font>

513
00:21:01,560 --> 00:21:05,879
slack message<font color="#E5E5E5"> I got we got these same</font>

514
00:21:03,900 --> 00:21:10,110
vulnerabilities right through my slack

515
00:21:05,880 --> 00:21:11,670
<font color="#E5E5E5">channel and I here's a stored cross-site</font>

516
00:21:10,110 --> 00:21:12,959
scripting event<font color="#CCCCCC"> you can see some data</font>

517
00:21:11,670 --> 00:21:15,300
you<font color="#E5E5E5"> know went into data place in</font>

518
00:21:12,960 --> 00:21:17,190
database in one place and then somewhere

519
00:21:15,300 --> 00:21:17,669
else some other<font color="#E5E5E5"> thread pulled out that</font>

520
00:21:17,190 --> 00:21:19,710
<font color="#E5E5E5">data</font>

521
00:21:17,670 --> 00:21:25,950
I asked contract that through the

522
00:21:19,710 --> 00:21:27,630
application<font color="#E5E5E5"> so slack is an interesting</font>

523
00:21:25,950 --> 00:21:28,800
way<font color="#CCCCCC"> of getting Valle nura bilities to</font>

524
00:21:27,630 --> 00:21:30,450
people in development because<font color="#CCCCCC"> they get</font>

525
00:21:28,800 --> 00:21:32,460
<font color="#E5E5E5">that instant feedback that hey something</font>

526
00:21:30,450 --> 00:21:33,660
<font color="#E5E5E5">went wrong</font><font color="#CCCCCC"> and</font><font color="#E5E5E5"> I wanted to show</font><font color="#CCCCCC"> you one</font>

527
00:21:32,460 --> 00:21:37,260
last<font color="#E5E5E5"> way that</font><font color="#CCCCCC"> I think is</font><font color="#E5E5E5"> kind of</font>

528
00:21:33,660 --> 00:21:39,150
<font color="#E5E5E5">interesting</font><font color="#CCCCCC"> this</font><font color="#E5E5E5"> is a chrome</font><font color="#CCCCCC"> plug-in and</font>

529
00:21:37,260 --> 00:21:41,820
<font color="#E5E5E5">so I'm going</font><font color="#CCCCCC"> to gets the same</font>

530
00:21:39,150 --> 00:21:44,130
application<font color="#CCCCCC"> here I'll go to the page</font>

531
00:21:41,820 --> 00:21:48,990
that<font color="#E5E5E5"> had that hql vulnerability on it</font>

532
00:21:44,130 --> 00:21:52,200
and here you<font color="#CCCCCC"> can</font><font color="#E5E5E5"> see this little I asked</font>

533
00:21:48,990 --> 00:21:53,520
<font color="#E5E5E5">rasp plug-in here I can get the the data</font>

534
00:21:52,200 --> 00:21:56,670
about the vulnerabilities that are

535
00:21:53,520 --> 00:21:57,990
actually on<font color="#E5E5E5"> this page so for</font><font color="#CCCCCC"> a developer</font>

536
00:21:56,670 --> 00:22:00,720
as they're just browsing like using

537
00:21:57,990 --> 00:22:02,400
<font color="#E5E5E5">their app in development they can get</font>

538
00:22:00,720 --> 00:22:04,350
feedback<font color="#CCCCCC"> on hey this page has</font><font color="#E5E5E5"> these</font>

539
00:22:02,400 --> 00:22:05,670
vulnerabilities<font color="#E5E5E5"> in it so it's a nice way</font>

540
00:22:04,350 --> 00:22:07,679
of just<font color="#CCCCCC"> kind of raising awareness</font><font color="#E5E5E5"> and</font>

541
00:22:05,670 --> 00:22:09,120
the next step for<font color="#CCCCCC"> us by the</font><font color="#E5E5E5"> way is to</font>

542
00:22:07,680 --> 00:22:10,560
highlight the field

543
00:22:09,120 --> 00:22:12,209
so that you can see this field<font color="#CCCCCC"> that</font>

544
00:22:10,560 --> 00:22:15,060
you're<font color="#E5E5E5"> typing data in right now is</font>

545
00:22:12,210 --> 00:22:16,440
vulnerable<font color="#CCCCCC"> to some kind of attack</font><font color="#E5E5E5"> so</font>

546
00:22:15,060 --> 00:22:18,179
again this is I think this is<font color="#E5E5E5"> some of</font>

547
00:22:16,440 --> 00:22:23,250
<font color="#E5E5E5">the kind</font><font color="#CCCCCC"> of</font><font color="#E5E5E5"> research that</font><font color="#CCCCCC"> OS ought to be</font>

548
00:22:18,180 --> 00:22:27,360
<font color="#CCCCCC">doing is make this data more useful ok</font>

549
00:22:23,250 --> 00:22:31,430
<font color="#E5E5E5">so that's a crash course in</font><font color="#CCCCCC"> Iestyn</font>

550
00:22:27,360 --> 00:22:33,479
development<font color="#E5E5E5"> we're gonna move to</font><font color="#CCCCCC"> C sed</font>

551
00:22:31,430 --> 00:22:35,310
environmentally<font color="#CCCCCC"> Berry's in just a second</font>

552
00:22:33,480 --> 00:22:37,440
I have a few slides<font color="#CCCCCC"> here that in case</font>

553
00:22:35,310 --> 00:22:39,270
<font color="#E5E5E5">this demo didn't work these are</font><font color="#CCCCCC"> backup</font>

554
00:22:37,440 --> 00:22:42,750
<font color="#CCCCCC">slides so here's what we</font><font color="#E5E5E5"> did we</font><font color="#CCCCCC"> put I</font>

555
00:22:39,270 --> 00:22:45,240
asked into the project<font color="#E5E5E5"> we we found some</font>

556
00:22:42,750 --> 00:22:46,500
vulnerabilities<font color="#E5E5E5"> and we delivered it</font>

557
00:22:45,240 --> 00:22:49,470
through a bunch<font color="#E5E5E5"> of different sources so</font>

558
00:22:46,500 --> 00:22:52,670
I forgot<font color="#CCCCCC"> to</font><font color="#E5E5E5"> show this retired</font><font color="#CCCCCC"> @j</font><font color="#E5E5E5"> s</font>

559
00:22:49,470 --> 00:22:56,990
<font color="#CCCCCC">plug-in I think is is great this is a</font>

560
00:22:52,670 --> 00:23:00,420
<font color="#E5E5E5">non-contrast tool but this is uh oops</font>

561
00:22:56,990 --> 00:23:02,820
<font color="#E5E5E5">this is a great way to to find libraries</font>

562
00:23:00,420 --> 00:23:04,800
in in<font color="#E5E5E5"> JavaScript and anything that's out</font>

563
00:23:02,820 --> 00:23:07,439
of date<font color="#CCCCCC"> with known vulnerabilities</font><font color="#E5E5E5"> so</font>

564
00:23:04,800 --> 00:23:09,659
it's a chrome<font color="#E5E5E5"> plug-in that relies on</font>

565
00:23:07,440 --> 00:23:11,700
retired<font color="#CCCCCC"> @j s</font><font color="#E5E5E5"> this will tell you about</font>

566
00:23:09,660 --> 00:23:13,470
any libraries<font color="#CCCCCC"> javascript libraries that</font>

567
00:23:11,700 --> 00:23:15,480
<font color="#CCCCCC">are out of date or need</font><font color="#E5E5E5"> you know have</font>

568
00:23:13,470 --> 00:23:17,190
known vulnerabilities on any page<font color="#CCCCCC"> that</font>

569
00:23:15,480 --> 00:23:18,690
you visit and it's<font color="#E5E5E5"> terrifying when</font>

570
00:23:17,190 --> 00:23:20,190
you're on your<font color="#CCCCCC"> online banking site and</font>

571
00:23:18,690 --> 00:23:22,280
<font color="#CCCCCC">they've got you</font><font color="#E5E5E5"> know five or six</font>

572
00:23:20,190 --> 00:23:25,410
libraries<font color="#E5E5E5"> that need updating</font><font color="#CCCCCC"> that's</font>

573
00:23:22,280 --> 00:23:28,710
concerning so I strongly recommend<font color="#E5E5E5"> I</font>

574
00:23:25,410 --> 00:23:29,700
recommend this tool and so<font color="#E5E5E5"> I was just a</font>

575
00:23:28,710 --> 00:23:32,340
few<font color="#E5E5E5"> of the integrations</font>

576
00:23:29,700 --> 00:23:34,290
I asked<font color="#E5E5E5"> Anna</font><font color="#CCCCCC"> ASP</font><font color="#E5E5E5"> are integrated into a</font>

577
00:23:32,340 --> 00:23:35,610
whole bunch<font color="#E5E5E5"> of</font><font color="#CCCCCC"> different</font><font color="#E5E5E5"> tools but</font><font color="#CCCCCC"> we</font>

578
00:23:34,290 --> 00:23:37,980
don't have<font color="#E5E5E5"> time to look at all</font><font color="#CCCCCC"> of them</font>

579
00:23:35,610 --> 00:23:43,350
but they're easy to integrate<font color="#E5E5E5"> into</font><font color="#CCCCCC"> a</font>

580
00:23:37,980 --> 00:23:45,060
bunch<font color="#E5E5E5"> of stuff</font><font color="#CCCCCC"> ok so let's move to</font><font color="#E5E5E5"> open</font>

581
00:23:43,350 --> 00:23:47,909
<font color="#CCCCCC">source libraries we showed by the</font><font color="#E5E5E5"> way I</font>

582
00:23:45,060 --> 00:23:49,440
think<font color="#E5E5E5"> we</font><font color="#CCCCCC"> showed that</font><font color="#E5E5E5"> I said whereas do</font>

583
00:23:47,910 --> 00:23:52,170
that security thing<font color="#E5E5E5"> the rule set is very</font>

584
00:23:49,440 --> 00:23:53,760
<font color="#E5E5E5">broad and it's super fast</font><font color="#CCCCCC"> so you get</font>

585
00:23:52,170 --> 00:23:55,620
that instant<font color="#E5E5E5"> feedback and it scales</font>

586
00:23:53,760 --> 00:23:57,390
<font color="#E5E5E5">really nicely we just did one app but it</font>

587
00:23:55,620 --> 00:24:00,080
works<font color="#E5E5E5"> the same and distributed across</font>

588
00:23:57,390 --> 00:24:04,910
all your apps so the next thing is

589
00:24:00,080 --> 00:24:09,060
<font color="#E5E5E5">locking</font><font color="#CCCCCC"> down some open source libraries</font>

590
00:24:04,910 --> 00:24:12,300
let's<font color="#E5E5E5"> I'm sorry let's look at this real</font>

591
00:24:09,060 --> 00:24:14,550
quick<font color="#E5E5E5"> so my goals here are to get open</font>

592
00:24:12,300 --> 00:24:16,980
source under control<font color="#E5E5E5"> in organizations we</font>

593
00:24:14,550 --> 00:24:18,840
need to we need<font color="#CCCCCC"> to</font><font color="#E5E5E5"> know what we have so</font>

594
00:24:16,980 --> 00:24:21,420
in my<font color="#CCCCCC"> vision</font><font color="#E5E5E5"> everyone should know</font>

595
00:24:18,840 --> 00:24:22,800
exactly<font color="#E5E5E5"> what open source they're running</font>

596
00:24:21,420 --> 00:24:24,780
on every server every

597
00:24:22,800 --> 00:24:27,990
we're in their<font color="#E5E5E5"> organization always up to</font>

598
00:24:24,780 --> 00:24:31,110
<font color="#E5E5E5">date</font><font color="#CCCCCC"> I like tools like dependency check</font>

599
00:24:27,990 --> 00:24:32,910
but<font color="#E5E5E5"> you have to run a scan and so it's</font>

600
00:24:31,110 --> 00:24:34,649
<font color="#E5E5E5">you'd have to build some infrastructure</font>

601
00:24:32,910 --> 00:24:36,360
to<font color="#E5E5E5"> keep everything up to</font><font color="#CCCCCC"> date I</font><font color="#E5E5E5"> ask does</font>

602
00:24:34,650 --> 00:24:39,120
<font color="#E5E5E5">this will show you it collects all the</font>

603
00:24:36,360 --> 00:24:42,000
information continuously<font color="#CCCCCC"> you need to</font>

604
00:24:39,120 --> 00:24:44,010
assess those libraries<font color="#CCCCCC"> not for just</font>

605
00:24:42,000 --> 00:24:45,600
known vulnerabilities no one<font color="#E5E5E5"> follower</font>

606
00:24:44,010 --> 00:24:48,000
abilities it's the easiest problem in

607
00:24:45,600 --> 00:24:49,199
<font color="#CCCCCC">app</font><font color="#E5E5E5"> sack it's literally are using this</font>

608
00:24:48,000 --> 00:24:51,030
library<font color="#E5E5E5"> then yes you have this</font>

609
00:24:49,200 --> 00:24:52,860
vulnerability<font color="#E5E5E5"> but</font><font color="#CCCCCC"> also unknown</font>

610
00:24:51,030 --> 00:24:54,480
vulnerabilities in these libraries<font color="#CCCCCC"> as</font>

611
00:24:52,860 --> 00:24:56,729
<font color="#E5E5E5">well because there's lots of them</font>

612
00:24:54,480 --> 00:24:58,740
<font color="#E5E5E5">there's probably a handful of security</font>

613
00:24:56,730 --> 00:25:02,450
researchers<font color="#CCCCCC"> out there</font><font color="#E5E5E5"> looking at open</font>

614
00:24:58,740 --> 00:25:04,230
<font color="#E5E5E5">source libraries that's crazy</font>

615
00:25:02,450 --> 00:25:05,640
<font color="#CCCCCC">anyway we can talk about</font><font color="#E5E5E5"> that another</font>

616
00:25:04,230 --> 00:25:07,950
time<font color="#CCCCCC"> and</font><font color="#E5E5E5"> then the last thing</font><font color="#CCCCCC"> is</font>

617
00:25:05,640 --> 00:25:09,630
detection really isn't enough<font color="#E5E5E5"> it's not</font>

618
00:25:07,950 --> 00:25:12,390
<font color="#CCCCCC">enough to just have</font><font color="#E5E5E5"> the fire alarm</font>

619
00:25:09,630 --> 00:25:15,420
we need the fire extinguishers<font color="#E5E5E5"> and so</font>

620
00:25:12,390 --> 00:25:16,800
rasp<font color="#E5E5E5"> here will protect those libraries</font>

621
00:25:15,420 --> 00:25:19,080
from being exploited<font color="#E5E5E5"> even</font><font color="#CCCCCC"> if they're</font>

622
00:25:16,800 --> 00:25:26,909
vulnerable<font color="#CCCCCC"> so we'll take</font><font color="#E5E5E5"> a look at all</font>

623
00:25:19,080 --> 00:25:34,350
that<font color="#E5E5E5"> so let me let me go to demo here</font>

624
00:25:26,910 --> 00:25:36,000
<font color="#E5E5E5">and I'll just pull up what what this I</font>

625
00:25:34,350 --> 00:25:37,740
<font color="#E5E5E5">asked</font><font color="#CCCCCC"> tool is found</font><font color="#E5E5E5"> about libraries in</font>

626
00:25:36,000 --> 00:25:40,800
this<font color="#CCCCCC"> environment so we just started this</font>

627
00:25:37,740 --> 00:25:42,780
<font color="#CCCCCC">and when we</font><font color="#E5E5E5"> started the is totally</font>

628
00:25:40,800 --> 00:25:45,090
registered with this you know this

629
00:25:42,780 --> 00:25:47,100
console and it started<font color="#E5E5E5"> reporting data</font>

630
00:25:45,090 --> 00:25:48,840
<font color="#E5E5E5">and here we see you know sort of the</font>

631
00:25:47,100 --> 00:25:51,740
<font color="#E5E5E5">dashboard for this we see we've found a</font>

632
00:25:48,840 --> 00:25:54,990
few<font color="#E5E5E5"> vulnerabilities in in development</font>

633
00:25:51,740 --> 00:25:57,360
<font color="#CCCCCC">and</font><font color="#E5E5E5"> I'll click on the libraries tab here</font>

634
00:25:54,990 --> 00:25:59,820
<font color="#E5E5E5">and you can see that I asked has</font>

635
00:25:57,360 --> 00:26:02,280
<font color="#E5E5E5">analyzed all</font><font color="#CCCCCC"> the libraries</font><font color="#E5E5E5"> in the</font>

636
00:25:59,820 --> 00:26:03,689
project<font color="#E5E5E5"> reports them here tells you what</font>

637
00:26:02,280 --> 00:26:06,330
version<font color="#E5E5E5"> you're</font><font color="#CCCCCC"> using what the latest</font>

638
00:26:03,690 --> 00:26:08,310
<font color="#E5E5E5">version is and how much of</font><font color="#CCCCCC"> that library</font>

639
00:26:06,330 --> 00:26:10,199
is<font color="#CCCCCC"> actually used and actually that's</font>

640
00:26:08,310 --> 00:26:12,870
<font color="#CCCCCC">really important if you want to save</font><font color="#E5E5E5"> 72</font>

641
00:26:10,200 --> 00:26:14,280
<font color="#E5E5E5">percent of your work then don't look at</font>

642
00:26:12,870 --> 00:26:16,290
the libraries<font color="#CCCCCC"> that are never invoked</font>

643
00:26:14,280 --> 00:26:17,280
<font color="#E5E5E5">because they don't matter</font><font color="#CCCCCC"> these are the</font>

644
00:26:16,290 --> 00:26:19,590
ones that<font color="#E5E5E5"> matter the ones that are</font>

645
00:26:17,280 --> 00:26:21,540
<font color="#CCCCCC">actually being used and</font><font color="#E5E5E5"> we got details</font>

646
00:26:19,590 --> 00:26:22,770
about<font color="#CCCCCC"> that any known vulnerabilities in</font>

647
00:26:21,540 --> 00:26:25,920
any of these libraries<font color="#E5E5E5"> so this one has</font>

648
00:26:22,770 --> 00:26:27,600
<font color="#CCCCCC">five sea</font><font color="#E5E5E5"> V's against it and you can pull</font>

649
00:26:25,920 --> 00:26:30,370
<font color="#CCCCCC">it up</font><font color="#E5E5E5"> and see</font>

650
00:26:27,600 --> 00:26:32,590
exactly what<font color="#CCCCCC"> vole 'nor abilities are</font>

651
00:26:30,370 --> 00:26:34,179
there you<font color="#E5E5E5"> can see for any library you</font>

652
00:26:32,590 --> 00:26:35,889
can<font color="#E5E5E5"> see exactly what applications are</font>

653
00:26:34,180 --> 00:26:37,600
<font color="#CCCCCC">using it</font><font color="#E5E5E5"> and exactly what servers it's</font>

654
00:26:35,890 --> 00:26:39,760
running on so<font color="#E5E5E5"> I want you to imagine</font>

655
00:26:37,600 --> 00:26:42,149
tomorrow<font color="#E5E5E5"> some researcher finds a new</font>

656
00:26:39,760 --> 00:26:44,530
vulnerability in Apache Commons<font color="#CCCCCC"> exec</font>

657
00:26:42,150 --> 00:26:46,810
well you can<font color="#E5E5E5"> just type that in here</font><font color="#CCCCCC"> and</font>

658
00:26:44,530 --> 00:26:48,370
pull up and see exactly where<font color="#E5E5E5"> that</font>

659
00:26:46,810 --> 00:26:50,110
library is<font color="#E5E5E5"> everywhere in your enterprise</font>

660
00:26:48,370 --> 00:26:52,030
<font color="#CCCCCC">that's what we need is we don't</font><font color="#E5E5E5"> need to</font>

661
00:26:50,110 --> 00:26:56,590
be scanning everything<font color="#E5E5E5"> we need to be we</font>

662
00:26:52,030 --> 00:27:01,570
need<font color="#CCCCCC"> to know what we're running um okay</font>

663
00:26:56,590 --> 00:27:03,909
<font color="#E5E5E5">so let's see well cover the attack bit</font>

664
00:27:01,570 --> 00:27:05,980
in a at the<font color="#E5E5E5"> end because I'm running</font><font color="#CCCCCC"> a</font>

665
00:27:03,910 --> 00:27:07,600
little short on<font color="#CCCCCC"> time</font><font color="#E5E5E5"> I will say that</font>

666
00:27:05,980 --> 00:27:12,670
this<font color="#E5E5E5"> is a really important problem this</font>

667
00:27:07,600 --> 00:27:14,139
<font color="#E5E5E5">is</font><font color="#CCCCCC"> the</font><font color="#E5E5E5"> Equifax vulnerability this is the</font>

668
00:27:12,670 --> 00:27:15,970
attack on the library and you can<font color="#E5E5E5"> see</font>

669
00:27:14,140 --> 00:27:18,100
there's an<font color="#E5E5E5"> expression language injection</font>

670
00:27:15,970 --> 00:27:23,260
attack<font color="#E5E5E5"> in this request this is the one</font>

671
00:27:18,100 --> 00:27:26,050
<font color="#E5E5E5">that we</font><font color="#CCCCCC"> actually blocked and this is</font>

672
00:27:23,260 --> 00:27:28,660
super easy to<font color="#E5E5E5"> exploit because it's a</font><font color="#CCCCCC"> 1:1</font>

673
00:27:26,050 --> 00:27:30,639
HTTP request<font color="#E5E5E5"> completely takes over</font><font color="#CCCCCC"> your</font>

674
00:27:28,660 --> 00:27:32,350
app server<font color="#E5E5E5"> and it's nothing to do with</font>

675
00:27:30,640 --> 00:27:37,570
your code it's completely inside<font color="#E5E5E5"> the</font>

676
00:27:32,350 --> 00:27:39,340
<font color="#E5E5E5">library so it's really important you</font>

677
00:27:37,570 --> 00:27:43,600
need<font color="#CCCCCC"> to be able</font><font color="#E5E5E5"> to respond to new</font>

678
00:27:39,340 --> 00:27:45,220
vulnerabilities<font color="#E5E5E5"> within hours</font><font color="#CCCCCC"> that's how</font>

679
00:27:43,600 --> 00:27:46,300
fast the<font color="#CCCCCC"> attacks start happening against</font>

680
00:27:45,220 --> 00:27:49,450
<font color="#E5E5E5">new vulnerabilities that get released</font>

681
00:27:46,300 --> 00:27:51,700
<font color="#CCCCCC">and</font><font color="#E5E5E5"> so I want you to</font><font color="#CCCCCC"> consider</font><font color="#E5E5E5"> if your</font>

682
00:27:49,450 --> 00:27:53,500
current approach is to scan then when a

683
00:27:51,700 --> 00:27:55,180
new<font color="#E5E5E5"> vulnerability comes out you've got</font>

684
00:27:53,500 --> 00:27:57,400
to go scan everything<font color="#E5E5E5"> for where you're</font>

685
00:27:55,180 --> 00:27:59,440
using<font color="#E5E5E5"> that library</font><font color="#CCCCCC"> you've got to</font><font color="#E5E5E5"> figure</font>

686
00:27:57,400 --> 00:28:00,880
out<font color="#E5E5E5"> if you're using it you're going to</font>

687
00:27:59,440 --> 00:28:02,230
rewrite the app you could get the new

688
00:28:00,880 --> 00:28:04,300
applicant the new library then<font color="#CCCCCC"> you have</font>

689
00:28:02,230 --> 00:28:06,280
<font color="#CCCCCC">to rewrite the app to</font><font color="#E5E5E5"> be compatible with</font>

690
00:28:04,300 --> 00:28:08,919
<font color="#CCCCCC">that new library</font><font color="#E5E5E5"> they retest it and</font>

691
00:28:06,280 --> 00:28:11,620
redeploy it<font color="#E5E5E5"> that's really expensive</font><font color="#CCCCCC"> and</font>

692
00:28:08,920 --> 00:28:13,150
so I believe<font color="#CCCCCC"> you have to have</font><font color="#E5E5E5"> better</font>

693
00:28:11,620 --> 00:28:15,040
infrastructure in place<font color="#CCCCCC"> to respond</font>

694
00:28:13,150 --> 00:28:17,410
within hours<font color="#CCCCCC"> I don't see any other</font>

695
00:28:15,040 --> 00:28:18,790
alternative<font color="#CCCCCC"> than</font><font color="#E5E5E5"> rasp here to get in</font>

696
00:28:17,410 --> 00:28:23,740
front<font color="#E5E5E5"> of this attack and protect</font>

697
00:28:18,790 --> 00:28:25,330
applications from being exploited<font color="#CCCCCC"> okay</font>

698
00:28:23,740 --> 00:28:27,880
so that's it we assess all the<font color="#E5E5E5"> open</font>

699
00:28:25,330 --> 00:28:33,159
source with I asked them then we protect

700
00:28:27,880 --> 00:28:37,890
it with rasp so let's<font color="#E5E5E5"> move</font><font color="#CCCCCC"> to</font><font color="#E5E5E5"> the CSE</font>

701
00:28:33,160 --> 00:28:40,090
<font color="#CCCCCC">the environment</font><font color="#E5E5E5"> here the goals in CI CD</font>

702
00:28:37,890 --> 00:28:40,580
you want security<font color="#E5E5E5"> testing to</font><font color="#CCCCCC"> be</font>

703
00:28:40,090 --> 00:28:43,610
contained

704
00:28:40,580 --> 00:28:44,779
every build to be secured<font color="#E5E5E5"> and the</font>

705
00:28:43,610 --> 00:28:46,070
problem with some of<font color="#E5E5E5"> the legacy</font><font color="#CCCCCC"> tools</font>

706
00:28:44,779 --> 00:28:48,740
they just take too long<font color="#CCCCCC"> they can take</font>

707
00:28:46,070 --> 00:28:51,110
hours or days<font color="#CCCCCC"> to run</font><font color="#E5E5E5"> and so it's</font><font color="#CCCCCC"> very</font>

708
00:28:48,740 --> 00:28:55,039
<font color="#CCCCCC">difficult to do this without disrupting</font>

709
00:28:51,110 --> 00:28:57,080
the the process<font color="#CCCCCC"> and then</font><font color="#E5E5E5"> you want it to</font>

710
00:28:55,039 --> 00:28:58,789
be really<font color="#E5E5E5"> integrated into</font><font color="#CCCCCC"> that</font><font color="#E5E5E5"> process</font>

711
00:28:57,080 --> 00:29:00,980
so you know when when<font color="#CCCCCC"> you discover</font>

712
00:28:58,789 --> 00:29:02,929
something<font color="#E5E5E5"> you want it to be integrated</font>

713
00:29:00,980 --> 00:29:04,460
into<font color="#E5E5E5"> Jenkins so that you can fail the</font>

714
00:29:02,929 --> 00:29:08,600
build you<font color="#E5E5E5"> want to be integrated into the</font>

715
00:29:04,460 --> 00:29:12,080
<font color="#E5E5E5">bug tracker like JIRA or</font><font color="#CCCCCC"> sarena or</font>

716
00:29:08,600 --> 00:29:14,269
something so that<font color="#E5E5E5"> you can track</font><font color="#CCCCCC"> that</font>

717
00:29:12,080 --> 00:29:16,639
item and get it fixed<font color="#CCCCCC"> so you</font><font color="#E5E5E5"> really need</font>

718
00:29:14,269 --> 00:29:18,139
a full REST API<font color="#E5E5E5"> here so that you can</font>

719
00:29:16,639 --> 00:29:21,709
<font color="#E5E5E5">integrate it with</font><font color="#CCCCCC"> your stuff and a</font><font color="#E5E5E5"> bunch</font>

720
00:29:18,139 --> 00:29:23,479
<font color="#E5E5E5">of plugins</font><font color="#CCCCCC"> and sauce and</font><font color="#E5E5E5"> then really I</font>

721
00:29:21,710 --> 00:29:26,000
<font color="#CCCCCC">think it's important</font><font color="#E5E5E5"> to be</font><font color="#CCCCCC"> able</font><font color="#E5E5E5"> to</font>

722
00:29:23,480 --> 00:29:27,980
<font color="#E5E5E5">manage</font><font color="#CCCCCC"> security policy across all of</font>

723
00:29:26,000 --> 00:29:30,440
<font color="#E5E5E5">your applications</font><font color="#CCCCCC"> so</font><font color="#E5E5E5"> you know be nice if</font>

724
00:29:27,980 --> 00:29:33,110
I could<font color="#E5E5E5"> say hey we're gonna we're</font><font color="#CCCCCC"> gonna</font>

725
00:29:30,440 --> 00:29:34,730
<font color="#E5E5E5">move from Triple DES to AES I had a</font>

726
00:29:33,110 --> 00:29:36,019
<font color="#E5E5E5">customer who tried this by the way they</font>

727
00:29:34,730 --> 00:29:37,010
said we're gonna<font color="#E5E5E5"> get rid of</font><font color="#CCCCCC"> Triple DES</font>

728
00:29:36,019 --> 00:29:38,929
we don't<font color="#CCCCCC"> think</font><font color="#E5E5E5"> that's the future we're</font>

729
00:29:37,010 --> 00:29:42,019
gonna<font color="#CCCCCC"> move</font><font color="#E5E5E5"> to</font><font color="#CCCCCC"> eight yes</font><font color="#E5E5E5"> so they turned</font>

730
00:29:38,929 --> 00:29:43,340
on that rule<font color="#E5E5E5"> and they had thousands of</font>

731
00:29:42,019 --> 00:29:45,200
<font color="#CCCCCC">places where they</font><font color="#E5E5E5"> were using Triple DES</font>

732
00:29:43,340 --> 00:29:48,379
you don't realize where md5 and Triple

733
00:29:45,200 --> 00:29:50,330
DES are in forever<font color="#E5E5E5"> in in our world so</font>

734
00:29:48,380 --> 00:29:52,100
<font color="#CCCCCC">they backed off</font><font color="#E5E5E5"> that</font><font color="#CCCCCC"> they said yeah you</font>

735
00:29:50,330 --> 00:29:55,340
<font color="#CCCCCC">know what Triple DES probably fine for</font>

736
00:29:52,100 --> 00:29:56,658
another<font color="#E5E5E5"> a little</font><font color="#CCCCCC"> while</font><font color="#E5E5E5"> but it's it's</font>

737
00:29:55,340 --> 00:29:58,850
useful to<font color="#E5E5E5"> be</font><font color="#CCCCCC"> able</font><font color="#E5E5E5"> to do that kind of</font>

738
00:29:56,659 --> 00:30:00,230
experiment in a<font color="#CCCCCC"> real-time you</font><font color="#E5E5E5"> know</font>

739
00:29:58,850 --> 00:30:02,629
<font color="#CCCCCC">imagine if</font><font color="#E5E5E5"> you've tried to enable that</font>

740
00:30:00,230 --> 00:30:04,669
<font color="#E5E5E5">rule with the static tool you'd have to</font>

741
00:30:02,630 --> 00:30:07,970
go rescan every single application<font color="#CCCCCC"> I</font>

742
00:30:04,669 --> 00:30:10,970
would<font color="#E5E5E5"> take for two years so this is</font><font color="#CCCCCC"> the</font>

743
00:30:07,970 --> 00:30:13,789
<font color="#E5E5E5">kind of experiment that we need so here</font>

744
00:30:10,970 --> 00:30:16,669
I'll look at my<font color="#E5E5E5"> CI see the environment</font>

745
00:30:13,789 --> 00:30:19,820
<font color="#CCCCCC">here</font><font color="#E5E5E5"> again</font><font color="#CCCCCC"> this</font><font color="#E5E5E5"> works the same way I'll</font>

746
00:30:16,669 --> 00:30:22,220
run I can run my<font color="#E5E5E5"> test cases here from I</font>

747
00:30:19,820 --> 00:30:25,460
can either<font color="#E5E5E5"> run them from you</font><font color="#CCCCCC"> know my</font>

748
00:30:22,220 --> 00:30:29,740
<font color="#E5E5E5">development</font><font color="#CCCCCC"> environment or I can go to</font>

749
00:30:25,460 --> 00:30:33,110
<font color="#E5E5E5">my CCIT see in my CI CD environment and</font>

750
00:30:29,740 --> 00:30:34,549
I'll schedule out your schedule<font color="#CCCCCC"> - builds</font>

751
00:30:33,110 --> 00:30:35,449
that's awesome<font color="#E5E5E5"> so those are going to run</font>

752
00:30:34,549 --> 00:30:37,820
in the<font color="#CCCCCC"> background they're gonna start</font>

753
00:30:35,450 --> 00:30:40,760
doing security testing<font color="#CCCCCC"> I might be logged</font>

754
00:30:37,820 --> 00:30:43,730
out<font color="#CCCCCC"> maybe that's what's going on here</font><font color="#E5E5E5"> um</font>

755
00:30:40,760 --> 00:30:44,840
<font color="#E5E5E5">so those builds are going to run and</font>

756
00:30:43,730 --> 00:30:48,860
they're going<font color="#E5E5E5"> to generate lots of</font>

757
00:30:44,840 --> 00:30:50,928
security findings<font color="#CCCCCC"> I have it set up so</font>

758
00:30:48,860 --> 00:30:54,229
<font color="#CCCCCC">that those</font><font color="#E5E5E5"> findings when they come in</font>

759
00:30:50,929 --> 00:30:57,379
they go<font color="#CCCCCC"> directly</font><font color="#E5E5E5"> into my JIRA</font>

760
00:30:54,230 --> 00:30:59,749
and again this is a difference between

761
00:30:57,379 --> 00:31:01,820
security<font color="#E5E5E5"> and</font><font color="#CCCCCC"> development</font><font color="#E5E5E5"> and security</font>

762
00:30:59,749 --> 00:31:03,950
and<font color="#CCCCCC"> si sed</font><font color="#E5E5E5"> in development you want</font>

763
00:31:01,820 --> 00:31:06,710
instant feedback<font color="#E5E5E5"> to developers so that</font>

764
00:31:03,950 --> 00:31:08,029
they can fix it in stride<font color="#CCCCCC"> that</font><font color="#E5E5E5"> cuts the</font>

765
00:31:06,710 --> 00:31:09,619
<font color="#E5E5E5">cost of those</font><font color="#CCCCCC"> vulnerabilities almost</font>

766
00:31:08,029 --> 00:31:10,940
zero<font color="#E5E5E5"> but if somehow those</font>

767
00:31:09,619 --> 00:31:12,109
vulnerabilities sneak<font color="#E5E5E5"> through that</font>

768
00:31:10,940 --> 00:31:13,970
process and somebody checks in

769
00:31:12,109 --> 00:31:15,619
<font color="#CCCCCC">vulnerable code and it gets into</font><font color="#E5E5E5"> into</font><font color="#CCCCCC"> C</font>

770
00:31:13,970 --> 00:31:17,330
<font color="#CCCCCC">ICD then I think</font><font color="#E5E5E5"> you won a little more</font>

771
00:31:15,619 --> 00:31:19,988
formal process you<font color="#E5E5E5"> want to create a</font>

772
00:31:17,330 --> 00:31:22,699
ticket<font color="#E5E5E5"> get it tracked get it fixed and</font>

773
00:31:19,989 --> 00:31:25,340
so I like<font color="#E5E5E5"> I like automatically doing</font>

774
00:31:22,700 --> 00:31:28,070
this<font color="#E5E5E5"> this</font><font color="#CCCCCC"> plugin is a two-way</font>

775
00:31:25,340 --> 00:31:30,379
integration<font color="#E5E5E5"> so that</font><font color="#CCCCCC"> when you close</font><font color="#E5E5E5"> the</font>

776
00:31:28,070 --> 00:31:32,418
<font color="#E5E5E5">JIRA ticket it closes it in the</font><font color="#CCCCCC"> Iast</font>

777
00:31:30,379 --> 00:31:33,830
<font color="#E5E5E5">tool as well so you can see I'm getting</font>

778
00:31:32,419 --> 00:31:36,769
a bunch<font color="#E5E5E5"> of new vulnerabilities as the</font>

779
00:31:33,830 --> 00:31:43,908
test<font color="#CCCCCC"> case is run in</font><font color="#E5E5E5"> the background here</font>

780
00:31:36,769 --> 00:31:45,139
<font color="#E5E5E5">that's a little annoying</font><font color="#CCCCCC"> so another</font>

781
00:31:43,909 --> 00:31:47,809
thing that<font color="#E5E5E5"> I think is important is</font>

782
00:31:45,139 --> 00:31:49,758
getting<font color="#E5E5E5"> code coverage metrics like if</font>

783
00:31:47,809 --> 00:31:51,139
you're<font color="#E5E5E5"> using I asked you want to make</font>

784
00:31:49,759 --> 00:31:54,499
<font color="#CCCCCC">sure that you actually tested your</font>

785
00:31:51,139 --> 00:31:55,879
application<font color="#E5E5E5"> so normal</font><font color="#CCCCCC"> security tools</font>

786
00:31:54,499 --> 00:31:59,059
don't really tell<font color="#E5E5E5"> you how</font><font color="#CCCCCC"> much of</font><font color="#E5E5E5"> the</font>

787
00:31:55,879 --> 00:32:00,918
app they covered my<font color="#E5E5E5"> - tools they don't</font>

788
00:31:59,059 --> 00:32:03,619
do a great job<font color="#E5E5E5"> of</font><font color="#CCCCCC"> covering a lot of</font><font color="#E5E5E5"> code</font>

789
00:32:00,919 --> 00:32:04,789
<font color="#CCCCCC">I encourage you to measure you know hook</font>

790
00:32:03,619 --> 00:32:07,428
up a code coverage tool while you're

791
00:32:04,789 --> 00:32:09,619
<font color="#E5E5E5">running your - tool just to see</font><font color="#CCCCCC"> static</font>

792
00:32:07,429 --> 00:32:11,929
tools interestingly<font color="#E5E5E5"> also don't do a</font>

793
00:32:09,619 --> 00:32:13,609
great job<font color="#E5E5E5"> of covering all</font><font color="#CCCCCC"> your</font><font color="#E5E5E5"> code it</font>

794
00:32:11,929 --> 00:32:15,259
sounds like they would<font color="#CCCCCC"> write they looked</font>

795
00:32:13,609 --> 00:32:17,509
should look at every line of<font color="#E5E5E5"> code</font><font color="#CCCCCC"> but</font>

796
00:32:15,259 --> 00:32:19,279
<font color="#E5E5E5">that's not really how they work static</font>

797
00:32:17,509 --> 00:32:21,019
tools build a model of your application

798
00:32:19,279 --> 00:32:22,519
<font color="#E5E5E5">and then they follow a bunch of paths</font>

799
00:32:21,019 --> 00:32:24,859
through<font color="#E5E5E5"> it but</font><font color="#CCCCCC"> they're</font><font color="#E5E5E5"> not very</font><font color="#CCCCCC"> good</font><font color="#E5E5E5"> at</font>

800
00:32:22,519 --> 00:32:26,179
it<font color="#CCCCCC"> so they miss a</font><font color="#E5E5E5"> lot</font><font color="#CCCCCC"> of things for</font>

801
00:32:24,859 --> 00:32:29,119
<font color="#CCCCCC">instance any path that goes through a</font>

802
00:32:26,179 --> 00:32:30,379
<font color="#E5E5E5">library or a framework they miss because</font>

803
00:32:29,119 --> 00:32:33,109
they don't analyze<font color="#E5E5E5"> all that code it's</font>

804
00:32:30,379 --> 00:32:35,090
too big<font color="#E5E5E5"> so this is an important way to</font>

805
00:32:33,109 --> 00:32:37,730
understand what is<font color="#E5E5E5"> actually being</font>

806
00:32:35,090 --> 00:32:40,970
security tested this is from a tool

807
00:32:37,730 --> 00:32:42,169
called jacoco<font color="#CCCCCC"> and I actually</font><font color="#E5E5E5"> I put it in</font>

808
00:32:40,970 --> 00:32:44,359
my palm I don't know if you saw<font color="#CCCCCC"> that</font>

809
00:32:42,169 --> 00:32:46,460
when I<font color="#E5E5E5"> was setting this up but</font><font color="#CCCCCC"> you</font><font color="#E5E5E5"> can</font>

810
00:32:44,359 --> 00:32:49,189
see it's just<font color="#E5E5E5"> another Java agent you can</font>

811
00:32:46,460 --> 00:32:54,019
run it right alongside<font color="#E5E5E5"> I asked just add</font>

812
00:32:49,190 --> 00:32:56,359
the jacoco agent<font color="#E5E5E5"> to the jar and then I</font>

813
00:32:54,019 --> 00:32:58,999
get a nice report of coverage in<font color="#E5E5E5"> this</font>

814
00:32:56,359 --> 00:33:00,529
application so I can you know<font color="#E5E5E5"> pull up</font>

815
00:32:58,999 --> 00:33:02,869
these<font color="#E5E5E5"> numbers you can even drill down</font>

816
00:33:00,529 --> 00:33:06,259
into<font color="#E5E5E5"> these different classes</font><font color="#CCCCCC"> and you</font><font color="#E5E5E5"> can</font>

817
00:33:02,869 --> 00:33:07,250
see exactly what lines of code were

818
00:33:06,259 --> 00:33:09,650
tested these are

819
00:33:07,250 --> 00:33:10,970
<font color="#CCCCCC">all lines of codes</font><font color="#E5E5E5"> actually ran and then</font>

820
00:33:09,650 --> 00:33:13,190
you can see I probably need<font color="#E5E5E5"> to do some</font>

821
00:33:10,970 --> 00:33:15,440
<font color="#E5E5E5">work on</font><font color="#CCCCCC"> my test Suites</font><font color="#E5E5E5"> for get visits</font>

822
00:33:13,190 --> 00:33:19,750
and set visits<font color="#E5E5E5"> right to get full</font>

823
00:33:15,440 --> 00:33:23,450
<font color="#E5E5E5">coverage over those okay</font>

824
00:33:19,750 --> 00:33:25,460
see<font color="#E5E5E5"> do I have anything else here</font><font color="#CCCCCC"> no I</font>

825
00:33:23,450 --> 00:33:26,990
think<font color="#E5E5E5"> that's it so at this point we're</font>

826
00:33:25,460 --> 00:33:30,320
making<font color="#E5E5E5"> some good progress</font><font color="#CCCCCC"> I'm</font><font color="#E5E5E5"> gonna show</font>

827
00:33:26,990 --> 00:33:36,710
the the Iast<font color="#CCCCCC"> tool dashboard here and I'm</font>

828
00:33:30,320 --> 00:33:38,600
gonna<font color="#E5E5E5"> zoom in on the pet clinic app and</font>

829
00:33:36,710 --> 00:33:40,700
what you'll<font color="#CCCCCC"> see</font><font color="#E5E5E5"> is we're making some</font>

830
00:33:38,600 --> 00:33:43,939
good progress<font color="#CCCCCC"> here</font><font color="#E5E5E5"> we've now got a</font>

831
00:33:40,700 --> 00:33:46,820
<font color="#E5E5E5">pipeline that automatically finds</font>

832
00:33:43,940 --> 00:33:48,830
vulnerabilities and development we're

833
00:33:46,820 --> 00:33:50,540
also seeing<font color="#CCCCCC"> uh-oh some of those are</font>

834
00:33:48,830 --> 00:33:52,820
<font color="#CCCCCC">sneaking through</font><font color="#E5E5E5"> into QA so this is a</font>

835
00:33:50,540 --> 00:33:54,889
sign<font color="#E5E5E5"> of a very unhealthy project you'd</font>

836
00:33:52,820 --> 00:33:56,330
like<font color="#E5E5E5"> to see this this</font><font color="#CCCCCC"> is good find</font>

837
00:33:54,890 --> 00:33:58,490
vulnerabilities here and fix them great

838
00:33:56,330 --> 00:34:00,169
but if they're<font color="#E5E5E5"> sneaking in</font><font color="#CCCCCC"> here</font><font color="#E5E5E5"> you got</font>

839
00:33:58,490 --> 00:34:01,730
a<font color="#E5E5E5"> process problem so you need to figure</font>

840
00:34:00,170 --> 00:34:02,840
<font color="#E5E5E5">out what's going</font><font color="#CCCCCC"> on you know why</font><font color="#E5E5E5"> are</font>

841
00:34:01,730 --> 00:34:04,400
people<font color="#E5E5E5"> checking in code with</font>

842
00:34:02,840 --> 00:34:05,449
vulnerabilities and<font color="#E5E5E5"> then what we're</font>

843
00:34:04,400 --> 00:34:09,470
<font color="#E5E5E5">gonna do now</font><font color="#CCCCCC"> is</font><font color="#E5E5E5"> we're gonna move</font><font color="#CCCCCC"> to</font>

844
00:34:05,450 --> 00:34:10,730
production<font color="#E5E5E5"> so let me just make</font><font color="#CCCCCC"> sure</font>

845
00:34:09,469 --> 00:34:14,270
there's nothing<font color="#E5E5E5"> else I wanted to</font><font color="#CCCCCC"> say</font>

846
00:34:10,730 --> 00:34:17,210
here<font color="#E5E5E5"> so</font><font color="#CCCCCC"> I asked</font><font color="#E5E5E5"> I asked works with all</font>

847
00:34:14,270 --> 00:34:20,480
kinds of testing<font color="#E5E5E5"> whether it's manual</font>

848
00:34:17,210 --> 00:34:22,550
testing<font color="#E5E5E5"> or automated testing or</font><font color="#CCCCCC"> even</font>

849
00:34:20,480 --> 00:34:24,800
real user testing<font color="#CCCCCC"> I asked as they're</font>

850
00:34:22,550 --> 00:34:26,179
<font color="#E5E5E5">watching and finding vulnerabilities</font><font color="#CCCCCC"> so</font>

851
00:34:24,800 --> 00:34:28,010
I<font color="#CCCCCC"> think we've achieved these goals it's</font>

852
00:34:26,179 --> 00:34:29,230
continuous<font color="#CCCCCC"> runs all</font><font color="#E5E5E5"> the time in the</font>

853
00:34:28,010 --> 00:34:32,060
<font color="#CCCCCC">background you don't have to do anything</font>

854
00:34:29,230 --> 00:34:33,770
anyone can use<font color="#CCCCCC"> I</font><font color="#E5E5E5"> asked to find</font>

855
00:34:32,060 --> 00:34:35,389
vulnerabilities and fix them it's

856
00:34:33,770 --> 00:34:38,030
<font color="#E5E5E5">integrated into</font><font color="#CCCCCC"> your</font><font color="#E5E5E5"> environments really</font>

857
00:34:35,389 --> 00:34:39,770
<font color="#CCCCCC">nicely</font><font color="#E5E5E5"> and you get this ability to</font>

858
00:34:38,030 --> 00:34:44,600
<font color="#E5E5E5">control policy you get this instant</font>

859
00:34:39,770 --> 00:34:46,340
feedback on what's going<font color="#E5E5E5"> on</font><font color="#CCCCCC"> alright so</font>

860
00:34:44,600 --> 00:34:49,610
that's a<font color="#E5E5E5"> little rushed</font><font color="#CCCCCC"> there's a lot</font>

861
00:34:46,340 --> 00:34:51,530
last step production we need<font color="#CCCCCC"> to</font>

862
00:34:49,610 --> 00:34:55,250
understand what's going<font color="#CCCCCC"> on</font><font color="#E5E5E5"> in</font><font color="#CCCCCC"> production</font>

863
00:34:51,530 --> 00:34:58,340
so here<font color="#E5E5E5"> are my goals for</font><font color="#CCCCCC"> what happens in</font>

864
00:34:55,250 --> 00:35:00,110
in operations we need<font color="#E5E5E5"> visibility</font><font color="#CCCCCC"> we need</font>

865
00:34:58,340 --> 00:35:01,640
to know who's<font color="#CCCCCC"> attacking us</font><font color="#E5E5E5"> what</font>

866
00:35:00,110 --> 00:35:03,560
techniques they're using<font color="#E5E5E5"> and what they</font>

867
00:35:01,640 --> 00:35:04,850
<font color="#E5E5E5">are targeting what apps</font><font color="#CCCCCC"> an</font><font color="#E5E5E5"> API is</font>

868
00:35:03,560 --> 00:35:07,460
<font color="#E5E5E5">they're targeting with their attacks</font>

869
00:35:04,850 --> 00:35:09,170
<font color="#E5E5E5">that's just a visibility piece that's</font>

870
00:35:07,460 --> 00:35:11,120
great for<font color="#CCCCCC"> threat Intel this will really</font>

871
00:35:09,170 --> 00:35:14,690
<font color="#CCCCCC">help</font><font color="#E5E5E5"> you focus your program on what</font>

872
00:35:11,120 --> 00:35:16,220
matters<font color="#E5E5E5"> we also need to protect those</font>

873
00:35:14,690 --> 00:35:18,200
applications like<font color="#E5E5E5"> it's if we observe</font>

874
00:35:16,220 --> 00:35:18,480
<font color="#E5E5E5">them we might as</font><font color="#CCCCCC"> well stop them</font><font color="#E5E5E5"> from</font>

875
00:35:18,200 --> 00:35:21,839
work

876
00:35:18,480 --> 00:35:23,760
right so we got<font color="#E5E5E5"> to be accurate here</font>

877
00:35:21,840 --> 00:35:26,160
<font color="#E5E5E5">right so</font><font color="#CCCCCC"> we can't over block or under</font>

878
00:35:23,760 --> 00:35:28,590
block<font color="#CCCCCC"> and we don't want</font><font color="#E5E5E5"> to spend</font><font color="#CCCCCC"> a lot</font>

879
00:35:26,160 --> 00:35:30,930
<font color="#E5E5E5">of time configuring stuff and then on</font>

880
00:35:28,590 --> 00:35:32,250
<font color="#CCCCCC">the control dimension</font><font color="#E5E5E5"> again we want to</font>

881
00:35:30,930 --> 00:35:33,868
<font color="#E5E5E5">make sure that this protection keeps</font>

882
00:35:32,250 --> 00:35:36,090
<font color="#CCCCCC">up-to-date right some of these</font><font color="#E5E5E5"> things</font>

883
00:35:33,869 --> 00:35:38,070
are time critical for new<font color="#CCCCCC"> CVE</font><font color="#E5E5E5"> comes out</font>

884
00:35:36,090 --> 00:35:42,270
<font color="#CCCCCC">we want to push</font><font color="#E5E5E5"> that protection out</font>

885
00:35:38,070 --> 00:35:44,460
everywhere so that<font color="#E5E5E5"> we're protected so</font>

886
00:35:42,270 --> 00:35:46,670
let's look at let's<font color="#E5E5E5"> look at how</font><font color="#CCCCCC"> that</font>

887
00:35:44,460 --> 00:35:46,670
goes

888
00:35:47,090 --> 00:35:53,070
yeah so<font color="#CCCCCC"> Rass protects</font><font color="#E5E5E5"> from within</font><font color="#CCCCCC"> I</font>

889
00:35:49,680 --> 00:35:55,379
wanted to show one<font color="#CCCCCC"> thing about why rasp</font>

890
00:35:53,070 --> 00:35:58,140
is<font color="#E5E5E5"> a little different so this is an</font>

891
00:35:55,380 --> 00:36:00,330
untrusted deserialization<font color="#CCCCCC"> attack</font><font color="#E5E5E5"> and you</font>

892
00:35:58,140 --> 00:36:02,310
can see a serialized object in<font color="#E5E5E5"> this</font>

893
00:36:00,330 --> 00:36:05,310
payload<font color="#E5E5E5"> what happens here is the</font>

894
00:36:02,310 --> 00:36:09,359
attacker<font color="#E5E5E5"> creates a malicious object that</font>

895
00:36:05,310 --> 00:36:11,580
and it contains objects<font color="#E5E5E5"> that the</font>

896
00:36:09,359 --> 00:36:14,369
application wasn't expecting and it just

897
00:36:11,580 --> 00:36:16,980
turns out<font color="#CCCCCC"> that when you when you</font>

898
00:36:14,369 --> 00:36:19,020
deserialize<font color="#E5E5E5"> these objects they cause</font>

899
00:36:16,980 --> 00:36:20,010
code to run because<font color="#E5E5E5"> when you deserialize</font>

900
00:36:19,020 --> 00:36:23,009
an object you<font color="#CCCCCC"> have</font><font color="#E5E5E5"> to run the</font>

901
00:36:20,010 --> 00:36:26,250
constructor<font color="#E5E5E5"> for those objects and so if</font>

902
00:36:23,010 --> 00:36:28,410
you craft this up<font color="#CCCCCC"> just right you</font><font color="#E5E5E5"> can get</font>

903
00:36:26,250 --> 00:36:30,119
that code to run here<font color="#E5E5E5"> and in this case</font>

904
00:36:28,410 --> 00:36:31,350
it's running a runtime dot exec and

905
00:36:30,119 --> 00:36:34,260
launching the count<font color="#CCCCCC"> program that's a</font>

906
00:36:31,350 --> 00:36:36,810
complete host<font color="#CCCCCC"> takeover with one simple</font>

907
00:36:34,260 --> 00:36:38,940
request<font color="#E5E5E5"> right so this</font><font color="#CCCCCC"> is the</font><font color="#E5E5E5"> kind of</font>

908
00:36:36,810 --> 00:36:40,710
attack that<font color="#E5E5E5"> laughs can't see and will</font>

909
00:36:38,940 --> 00:36:43,020
never<font color="#E5E5E5"> see because all they see is a</font>

910
00:36:40,710 --> 00:36:44,640
serialized<font color="#CCCCCC"> object you're not going to</font>

911
00:36:43,020 --> 00:36:47,400
deserialize the object in the<font color="#CCCCCC"> laughs and</font>

912
00:36:44,640 --> 00:36:49,049
check it to see<font color="#CCCCCC"> if it's okay or not</font><font color="#E5E5E5"> it's</font>

913
00:36:47,400 --> 00:36:51,180
no one<font color="#E5E5E5"> you</font><font color="#CCCCCC"> know you'd have</font><font color="#E5E5E5"> to do</font>

914
00:36:49,050 --> 00:36:54,780
everything<font color="#CCCCCC"> so this is</font><font color="#E5E5E5"> really important</font>

915
00:36:51,180 --> 00:36:56,480
<font color="#E5E5E5">and rasp can do this because rasp is</font>

916
00:36:54,780 --> 00:36:58,980
inside the running application it can

917
00:36:56,480 --> 00:37:00,780
essentially sandbox the D serialization

918
00:36:58,980 --> 00:37:02,520
process and prevent bad things from

919
00:37:00,780 --> 00:37:05,580
happening<font color="#CCCCCC"> so that's why it's</font><font color="#E5E5E5"> quite</font>

920
00:37:02,520 --> 00:37:06,900
<font color="#E5E5E5">different than then laughs and just</font>

921
00:37:05,580 --> 00:37:09,990
before<font color="#E5E5E5"> we</font><font color="#CCCCCC"> get to</font><font color="#E5E5E5"> it everyone always</font>

922
00:37:06,900 --> 00:37:13,830
<font color="#CCCCCC">asked this rasp is really fast much</font>

923
00:37:09,990 --> 00:37:15,540
faster<font color="#CCCCCC"> than a wife or even</font><font color="#E5E5E5"> than SSL here</font>

924
00:37:13,830 --> 00:37:18,540
you see SSL typically takes about<font color="#E5E5E5"> five</font>

925
00:37:15,540 --> 00:37:20,550
milliseconds our implementation adds

926
00:37:18,540 --> 00:37:22,230
about 50 microseconds<font color="#CCCCCC"> to a round-trip</font>

927
00:37:20,550 --> 00:37:24,119
request but you should measure whatever

928
00:37:22,230 --> 00:37:25,590
<font color="#E5E5E5">rasp you decided to use measure it</font>

929
00:37:24,119 --> 00:37:27,840
carefully<font color="#CCCCCC"> so you know if it's got a</font>

930
00:37:25,590 --> 00:37:28,980
performance<font color="#E5E5E5"> impact</font><font color="#CCCCCC"> but it's it's super</font>

931
00:37:27,840 --> 00:37:30,480
fast cuz it's running as<font color="#CCCCCC"> part of the</font>

932
00:37:28,980 --> 00:37:32,339
code itself essentially

933
00:37:30,480 --> 00:37:35,070
<font color="#E5E5E5">okay so let's take a look</font><font color="#CCCCCC"> here this</font>

934
00:37:32,339 --> 00:37:40,440
development<font color="#CCCCCC"> gsdd</font><font color="#E5E5E5"> go into production here</font>

935
00:37:35,070 --> 00:37:42,720
and so this<font color="#E5E5E5"> is my app running in in my</font>

936
00:37:40,440 --> 00:37:45,060
<font color="#E5E5E5">prod environment and you know all I have</font>

937
00:37:42,720 --> 00:37:46,439
to do is is try<font color="#E5E5E5"> to attack this</font><font color="#CCCCCC"> oh I</font>

938
00:37:45,060 --> 00:37:49,078
should I<font color="#CCCCCC"> should first demonstrate</font><font color="#E5E5E5"> like</font>

939
00:37:46,440 --> 00:37:51,750
what this looks like in in dev if I go

940
00:37:49,079 --> 00:37:53,790
to my my browser here<font color="#E5E5E5"> I you can see this</font>

941
00:37:51,750 --> 00:37:56,760
is vulnerable to<font color="#CCCCCC"> hql injection if I</font>

942
00:37:53,790 --> 00:37:59,400
actually try to<font color="#E5E5E5"> exploit it I pull all</font>

943
00:37:56,760 --> 00:38:03,510
the<font color="#CCCCCC"> data out of the database right</font><font color="#E5E5E5"> so</font>

944
00:37:59,400 --> 00:38:07,230
clearly exploitable<font color="#CCCCCC"> in</font><font color="#E5E5E5"> production though</font>

945
00:38:03,510 --> 00:38:08,910
I've got rasp enabled and so when I try

946
00:38:07,230 --> 00:38:10,290
to<font color="#E5E5E5"> do that same attack I'll just do I'll</font>

947
00:38:08,910 --> 00:38:11,480
do<font color="#E5E5E5"> Davis here you can see this is you</font>

948
00:38:10,290 --> 00:38:14,040
know just<font color="#E5E5E5"> pulling up the right</font>

949
00:38:11,480 --> 00:38:18,690
<font color="#E5E5E5">information</font><font color="#CCCCCC"> but when I try to run</font><font color="#E5E5E5"> this</font>

950
00:38:14,040 --> 00:38:20,940
<font color="#E5E5E5">attack now rasp intervenes it prevented</font>

951
00:38:18,690 --> 00:38:23,040
that<font color="#E5E5E5"> sequel attack from making it to</font><font color="#CCCCCC"> the</font>

952
00:38:20,940 --> 00:38:25,380
<font color="#CCCCCC">database and really what rasped us</font>

953
00:38:23,040 --> 00:38:27,119
inside is<font color="#E5E5E5"> it's it's going right to</font><font color="#CCCCCC"> the</font>

954
00:38:25,380 --> 00:38:29,250
line of code<font color="#E5E5E5"> that's sending that query</font>

955
00:38:27,119 --> 00:38:31,680
to the database<font color="#E5E5E5"> and it's throwing an</font>

956
00:38:29,250 --> 00:38:33,900
exception<font color="#CCCCCC"> basically it's it's</font>

957
00:38:31,680 --> 00:38:35,460
essentially pretending that the database

958
00:38:33,900 --> 00:38:36,569
doesn't<font color="#E5E5E5"> work right now like it's just</font>

959
00:38:35,460 --> 00:38:38,490
<font color="#E5E5E5">throwing an exception like the database</font>

960
00:38:36,569 --> 00:38:40,259
is down<font color="#E5E5E5"> that way the application</font><font color="#CCCCCC"> can</font>

961
00:38:38,490 --> 00:38:41,700
close this transaction<font color="#E5E5E5"> and clean up</font>

962
00:38:40,260 --> 00:38:43,740
anything<font color="#E5E5E5"> so</font><font color="#CCCCCC"> you don't</font><font color="#E5E5E5"> leave anything in</font>

963
00:38:41,700 --> 00:38:46,290
<font color="#E5E5E5">an inconsistent</font><font color="#CCCCCC"> state and maintain</font>

964
00:38:43,740 --> 00:38:49,259
database integrity<font color="#CCCCCC"> and you've got</font><font color="#E5E5E5"> your</font>

965
00:38:46,290 --> 00:38:50,640
application<font color="#CCCCCC"> protected so</font><font color="#E5E5E5"> you can see I</font>

966
00:38:49,260 --> 00:38:52,800
<font color="#CCCCCC">just got an alert</font><font color="#E5E5E5"> that says hey we're</font>

967
00:38:50,640 --> 00:38:55,799
under attack<font color="#CCCCCC"> and you can go check the</font>

968
00:38:52,800 --> 00:38:59,069
dashboard here<font color="#E5E5E5"> to see what attacks look</font>

969
00:38:55,800 --> 00:39:01,319
like against<font color="#E5E5E5"> your application again this</font>

970
00:38:59,069 --> 00:39:04,319
will<font color="#E5E5E5"> always be up</font><font color="#CCCCCC"> to</font><font color="#E5E5E5"> date but here we've</font>

971
00:39:01,319 --> 00:39:06,390
got<font color="#E5E5E5"> a bunch of attacks and I'll open</font>

972
00:39:04,319 --> 00:39:08,520
this up<font color="#E5E5E5"> to everything so you can see all</font>

973
00:39:06,390 --> 00:39:10,109
the<font color="#E5E5E5"> different attacks you can see here's</font>

974
00:39:08,520 --> 00:39:15,180
<font color="#CCCCCC">the sequel injection attack that we just</font>

975
00:39:10,109 --> 00:39:16,500
did<font color="#E5E5E5"> was the attack value here's a you</font>

976
00:39:15,180 --> 00:39:18,930
know<font color="#E5E5E5"> expression language injection and</font>

977
00:39:16,500 --> 00:39:21,240
<font color="#E5E5E5">see</font><font color="#CCCCCC"> V's get attacked here</font><font color="#E5E5E5"> you know lots</font>

978
00:39:18,930 --> 00:39:23,310
of different<font color="#CCCCCC"> things</font><font color="#E5E5E5"> going on here but</font>

979
00:39:21,240 --> 00:39:25,259
this is critical<font color="#E5E5E5"> information you should</font>

980
00:39:23,310 --> 00:39:26,549
know<font color="#E5E5E5"> who's</font><font color="#CCCCCC"> attacking you and</font><font color="#E5E5E5"> what</font>

981
00:39:25,260 --> 00:39:28,440
techniques<font color="#E5E5E5"> they're using I don't see how</font>

982
00:39:26,550 --> 00:39:30,540
you can<font color="#E5E5E5"> defend your app if you don't</font>

983
00:39:28,440 --> 00:39:31,950
know what's going<font color="#E5E5E5"> on and what's cool</font>

984
00:39:30,540 --> 00:39:34,349
about rasp is that you<font color="#E5E5E5"> get all the</font>

985
00:39:31,950 --> 00:39:37,230
<font color="#CCCCCC">details so if I open this up you can</font><font color="#E5E5E5"> see</font>

986
00:39:34,349 --> 00:39:39,210
hey this<font color="#E5E5E5"> is the you know the full HTTP</font>

987
00:39:37,230 --> 00:39:41,910
request<font color="#E5E5E5"> you can see right</font><font color="#CCCCCC"> down</font><font color="#E5E5E5"> into</font><font color="#CCCCCC"> the</font>

988
00:39:39,210 --> 00:39:42,990
sequel query<font color="#E5E5E5"> you can even see the exact</font>

989
00:39:41,910 --> 00:39:46,618
line of code

990
00:39:42,990 --> 00:39:49,919
that this<font color="#E5E5E5"> this attack targeted</font><font color="#CCCCCC"> again</font>

991
00:39:46,619 --> 00:39:52,050
<font color="#CCCCCC">it's a lot different than a</font><font color="#E5E5E5"> laugh</font><font color="#CCCCCC"> a wife</font>

992
00:39:49,920 --> 00:39:53,070
could never tell you all this<font color="#E5E5E5"> stuff</font><font color="#CCCCCC"> it</font>

993
00:39:52,050 --> 00:39:56,160
could never tell you the<font color="#E5E5E5"> currently</font>

994
00:39:53,070 --> 00:40:01,920
logged<font color="#E5E5E5"> in user</font><font color="#CCCCCC"> so just a lot of benefits</font>

995
00:39:56,160 --> 00:40:05,810
here<font color="#E5E5E5"> from an attack perspective okay am</font>

996
00:40:01,920 --> 00:40:06,960
i<font color="#E5E5E5"> doing</font><font color="#CCCCCC"> on time at almost up I'm sorry</font>

997
00:40:05,810 --> 00:40:09,210
<font color="#E5E5E5">okay</font>

998
00:40:06,960 --> 00:40:13,410
<font color="#E5E5E5">gotcha I'll just wrap</font><font color="#CCCCCC"> it up then</font><font color="#E5E5E5"> we're</font>

999
00:40:09,210 --> 00:40:15,420
<font color="#E5E5E5">right there okay so look that's the</font>

1000
00:40:13,410 --> 00:40:18,359
pipeline that we built today<font color="#E5E5E5"> anyone</font><font color="#CCCCCC"> can</font>

1001
00:40:15,420 --> 00:40:20,670
do<font color="#CCCCCC"> this I'll just say if you</font><font color="#E5E5E5"> want to</font>

1002
00:40:18,360 --> 00:40:21,930
<font color="#CCCCCC">scale</font><font color="#E5E5E5"> your program then you want</font>

1003
00:40:20,670 --> 00:40:23,580
<font color="#E5E5E5">something that</font><font color="#CCCCCC"> can</font><font color="#E5E5E5"> really run in</font>

1004
00:40:21,930 --> 00:40:28,020
parallel<font color="#CCCCCC"> and that's what I asked Ben</font>

1005
00:40:23,580 --> 00:40:29,520
rasp<font color="#CCCCCC"> Iestyn rasp can give you and so</font>

1006
00:40:28,020 --> 00:40:31,470
I'll let you<font color="#E5E5E5"> guys</font><font color="#CCCCCC"> know so this</font><font color="#E5E5E5"> is just</font>

1007
00:40:29,520 --> 00:40:34,230
<font color="#CCCCCC">available so it's</font><font color="#E5E5E5"> early access you guys</font>

1008
00:40:31,470 --> 00:40:36,810
can grab contrast<font color="#E5E5E5"> Community Edition</font>

1009
00:40:34,230 --> 00:40:39,570
and give it a try<font color="#E5E5E5"> I just visit this URL</font>

1010
00:40:36,810 --> 00:40:42,180
<font color="#CCCCCC">sign</font><font color="#E5E5E5"> up download the jar and</font><font color="#CCCCCC"> and get</font>

1011
00:40:39,570 --> 00:40:44,480
going it's currently<font color="#CCCCCC"> it's just Java</font><font color="#E5E5E5"> but</font>

1012
00:40:42,180 --> 00:40:48,029
we will as<font color="#CCCCCC"> soon</font><font color="#E5E5E5"> as we can</font><font color="#CCCCCC"> we will make</font>

1013
00:40:44,480 --> 00:40:51,240
net Ruby Python and node available as

1014
00:40:48,030 --> 00:40:53,580
well<font color="#CCCCCC"> so we're</font><font color="#E5E5E5"> pushing hard</font><font color="#CCCCCC"> to do this</font><font color="#E5E5E5"> I</font>

1015
00:40:51,240 --> 00:40:55,410
<font color="#E5E5E5">really feel good about this oh this</font><font color="#CCCCCC"> is</font>

1016
00:40:53,580 --> 00:40:57,060
<font color="#E5E5E5">like it's actually</font><font color="#CCCCCC"> a</font><font color="#E5E5E5"> little bit hard to</font>

1017
00:40:55,410 --> 00:40:58,440
<font color="#CCCCCC">talk your venture investors into</font>

1018
00:40:57,060 --> 00:41:02,220
<font color="#E5E5E5">allowing you to do something like</font><font color="#CCCCCC"> this</font>

1019
00:40:58,440 --> 00:41:04,080
<font color="#E5E5E5">but for</font><font color="#CCCCCC"> me</font><font color="#E5E5E5"> this is</font><font color="#CCCCCC"> a path</font><font color="#E5E5E5"> to giving</font>

1020
00:41:02,220 --> 00:41:05,459
great security<font color="#E5E5E5"> tools to all the</font>

1021
00:41:04,080 --> 00:41:08,310
developers in the world<font color="#E5E5E5"> that will</font><font color="#CCCCCC"> never</font>

1022
00:41:05,460 --> 00:41:10,170
be<font color="#CCCCCC"> able</font><font color="#E5E5E5"> to afford you</font><font color="#CCCCCC"> know the</font><font color="#E5E5E5"> fortifies</font>

1023
00:41:08,310 --> 00:41:12,660
and<font color="#CCCCCC"> ferret codes and and tools out there</font>

1024
00:41:10,170 --> 00:41:15,840
any small team in<font color="#CCCCCC"> the world can use this</font>

1025
00:41:12,660 --> 00:41:17,819
to write great secure code themselves<font color="#E5E5E5"> so</font>

1026
00:41:15,840 --> 00:41:19,530
that's it I'm<font color="#E5E5E5"> sorry I'm at a time I'm</font>

1027
00:41:17,820 --> 00:41:23,119
<font color="#E5E5E5">happy</font><font color="#CCCCCC"> to take a</font><font color="#E5E5E5"> few questions if I can</font>

1028
00:41:19,530 --> 00:41:23,119
<font color="#CCCCCC">or else in a place to</font><font color="#E5E5E5"> crap</font>

1029
00:41:25,910 --> 00:41:32,850
<font color="#CCCCCC">Thanks question</font><font color="#E5E5E5"> right here yeah thanks</font>

1030
00:41:31,470 --> 00:41:34,890
good talk

1031
00:41:32,850 --> 00:41:37,170
so how do you<font color="#CCCCCC"> know that's</font><font color="#E5E5E5"> in</font><font color="#CCCCCC"> the</font>

1032
00:41:34,890 --> 00:41:40,049
specific data flow<font color="#E5E5E5"> something is not</font>

1033
00:41:37,170 --> 00:41:43,740
<font color="#CCCCCC">being escapes</font><font color="#E5E5E5"> how do you conclude that</font>

1034
00:41:40,050 --> 00:41:46,770
yes so I asked typically knows about all

1035
00:41:43,740 --> 00:41:48,629
the standard encoders<font color="#CCCCCC"> the way that we do</font>

1036
00:41:46,770 --> 00:41:50,490
it<font color="#E5E5E5"> we actually have some AI</font><font color="#CCCCCC"> built-in</font>

1037
00:41:48,630 --> 00:41:53,670
that automatically identifies methods

1038
00:41:50,490 --> 00:41:56,790
that<font color="#E5E5E5"> look like escape methods</font><font color="#CCCCCC"> but</font><font color="#E5E5E5"> you</font>

1039
00:41:53,670 --> 00:42:00,480
have to recognize<font color="#E5E5E5"> the methods if I write</font>

1040
00:41:56,790 --> 00:42:02,310
a custom way of<font color="#E5E5E5"> skating escaping yeah</font>

1041
00:42:00,480 --> 00:42:04,770
contrast will automatically identify it

1042
00:42:02,310 --> 00:42:07,170
very likely<font color="#E5E5E5"> and add it to our</font><font color="#CCCCCC"> list of</font>

1043
00:42:04,770 --> 00:42:08,640
known escapers and will point it out to

1044
00:42:07,170 --> 00:42:12,600
<font color="#CCCCCC">you in the trace and then you can</font>

1045
00:42:08,640 --> 00:42:14,730
approve it<font color="#E5E5E5"> as approved escaper if you</font>

1046
00:42:12,600 --> 00:42:17,368
want to<font color="#E5E5E5"> okay</font><font color="#CCCCCC"> it's a very complicated</font>

1047
00:42:14,730 --> 00:42:20,430
problem but it's<font color="#CCCCCC"> we've put a</font><font color="#E5E5E5"> lot of work</font>

1048
00:42:17,369 --> 00:42:24,540
into solving<font color="#E5E5E5"> that yeah thank you Jeff so</font>

1049
00:42:20,430 --> 00:42:26,609
you shown the picture of<font color="#E5E5E5"> Jacko Co unit</font>

1050
00:42:24,540 --> 00:42:28,590
as an integrator<font color="#E5E5E5"> and test a company in</font>

1051
00:42:26,610 --> 00:42:31,320
the sonarqube interface right<font color="#E5E5E5"> like</font>

1052
00:42:28,590 --> 00:42:34,140
showing<font color="#CCCCCC"> us a coverage</font><font color="#E5E5E5"> that's I asked to</font>

1053
00:42:31,320 --> 00:42:36,600
<font color="#E5E5E5">provide any</font><font color="#CCCCCC"> kind</font><font color="#E5E5E5"> of coverage metrics to</font>

1054
00:42:34,140 --> 00:42:38,400
say that<font color="#CCCCCC"> the AIA still covered this most</font>

1055
00:42:36,600 --> 00:42:40,890
part of the code for the security and

1056
00:42:38,400 --> 00:42:44,880
<font color="#E5E5E5">these rules would apply like yeah see</font>

1057
00:42:40,890 --> 00:42:46,830
<font color="#CCCCCC">yeah</font><font color="#E5E5E5"> yes so right now you</font><font color="#CCCCCC"> can rely on a</font>

1058
00:42:44,880 --> 00:42:51,630
standard code coverage tool like jacoco

1059
00:42:46,830 --> 00:42:52,740
or ECL<font color="#CCCCCC"> Emma or something but that's</font>

1060
00:42:51,630 --> 00:42:54,030
something<font color="#CCCCCC"> that we are</font><font color="#E5E5E5"> adding</font><font color="#CCCCCC"> to the</font>

1061
00:42:52,740 --> 00:42:56,160
<font color="#E5E5E5">product so you'll know exactly what was</font>

1062
00:42:54,030 --> 00:42:57,330
tested<font color="#CCCCCC"> that's</font><font color="#E5E5E5"> probably not something</font>

1063
00:42:56,160 --> 00:42:59,160
that you're ever gonna get from<font color="#CCCCCC"> your</font>

1064
00:42:57,330 --> 00:43:00,779
static tool vendor you'll never know

1065
00:42:59,160 --> 00:43:06,509
what it<font color="#CCCCCC"> actually looked at and what it</font>

1066
00:43:00,780 --> 00:43:08,140
didn't I prefer to know all<font color="#CCCCCC"> right let's</font>

1067
00:43:06,510 --> 00:43:14,300
give it up<font color="#E5E5E5"> for</font><font color="#CCCCCC"> Jeff all right</font>

1068
00:43:08,140 --> 00:43:14,299
[Applause]

