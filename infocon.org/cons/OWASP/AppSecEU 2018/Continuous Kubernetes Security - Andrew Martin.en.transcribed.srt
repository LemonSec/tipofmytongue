1
00:00:12,510 --> 00:00:15,889
please say hello<font color="#CCCCCC"> to Martin</font>

2
00:00:15,940 --> 00:00:27,530
[Applause]

3
00:00:22,390 --> 00:00:30,140
right hello everybody<font color="#CCCCCC"> I am</font><font color="#E5E5E5"> ecstatic to</font>

4
00:00:27,530 --> 00:00:32,029
<font color="#CCCCCC">be speaking</font><font color="#E5E5E5"> at</font><font color="#CCCCCC"> an event I used to live</font>

5
00:00:30,140 --> 00:00:33,650
in<font color="#E5E5E5"> Bristol</font><font color="#CCCCCC"> and drive down for the</font>

6
00:00:32,029 --> 00:00:36,290
<font color="#E5E5E5">evening to come to the</font><font color="#CCCCCC"> chapter</font><font color="#E5E5E5"> meetups</font>

7
00:00:33,650 --> 00:00:39,650
<font color="#CCCCCC">here and I was</font><font color="#E5E5E5"> has taught me a great</font>

8
00:00:36,290 --> 00:00:45,410
deal<font color="#E5E5E5"> over my life in Korea so ecstatic</font>

9
00:00:39,650 --> 00:00:47,930
<font color="#E5E5E5">to be here</font><font color="#CCCCCC"> hello I</font><font color="#E5E5E5"> am Andy</font><font color="#CCCCCC"> a bit of</font>

10
00:00:45,410 --> 00:00:50,179
<font color="#E5E5E5">everything</font><font color="#CCCCCC"> maybe a technical milliner by</font>

11
00:00:47,930 --> 00:00:53,000
the stage<font color="#E5E5E5"> but I'm certainly a build</font>

12
00:00:50,180 --> 00:00:55,550
fanatic<font color="#E5E5E5"> and an advocate</font><font color="#CCCCCC"> of continuous</font>

13
00:00:53,000 --> 00:00:57,800
everything<font color="#E5E5E5"> I'm a founder of control</font>

14
00:00:55,550 --> 00:01:01,699
plane which is continuous delivery for

15
00:00:57,800 --> 00:01:04,220
container security essentially<font color="#E5E5E5"> and I</font>

16
00:01:01,699 --> 00:01:07,220
want to talk today about<font color="#CCCCCC"> the kubernetes</font>

17
00:01:04,220 --> 00:01:08,658
<font color="#E5E5E5">attack surface ecosystem tooling that's</font>

18
00:01:07,220 --> 00:01:10,780
available<font color="#E5E5E5"> to deal with building</font>

19
00:01:08,659 --> 00:01:13,760
pipelines to<font color="#E5E5E5"> assert our state's and</font>

20
00:01:10,780 --> 00:01:17,200
obviously continuous security compliance

21
00:01:13,760 --> 00:01:19,400
and assertions<font color="#E5E5E5"> why does this matter</font>

22
00:01:17,200 --> 00:01:23,390
<font color="#CCCCCC">because we need to</font><font color="#E5E5E5"> know the state</font><font color="#CCCCCC"> of our</font>

23
00:01:19,400 --> 00:01:25,640
<font color="#E5E5E5">systems performance veracity load why</font>

24
00:01:23,390 --> 00:01:28,040
not security<font color="#E5E5E5"> of course I'm preaching to</font>

25
00:01:25,640 --> 00:01:29,900
<font color="#CCCCCC">the choir here but if we</font><font color="#E5E5E5"> don't know the</font>

26
00:01:28,040 --> 00:01:31,700
state<font color="#CCCCCC"> of our systems we</font><font color="#E5E5E5"> can never know</font>

27
00:01:29,900 --> 00:01:35,090
if they've<font color="#CCCCCC"> been compromised or our</font>

28
00:01:31,700 --> 00:01:38,510
<font color="#E5E5E5">burning</font><font color="#CCCCCC"> lesson everything is fine when</font>

29
00:01:35,090 --> 00:01:40,430
nothing bad is going on<font color="#E5E5E5"> but how do we</font>

30
00:01:38,510 --> 00:01:42,380
harden<font color="#E5E5E5"> a kubernetes cluster to be</font>

31
00:01:40,430 --> 00:01:45,440
resistant to<font color="#E5E5E5"> an attacker</font><font color="#CCCCCC"> that has</font>

32
00:01:42,380 --> 00:01:47,710
<font color="#E5E5E5">already broken in everything public</font>

33
00:01:45,440 --> 00:01:50,660
facing in kubernetes<font color="#CCCCCC"> is in a container</font>

34
00:01:47,710 --> 00:01:53,780
<font color="#CCCCCC">so we want to make our containers as</font>

35
00:01:50,660 --> 00:01:56,330
difficult to<font color="#E5E5E5"> break out</font><font color="#CCCCCC"> of or pivot</font><font color="#E5E5E5"> from</font>

36
00:01:53,780 --> 00:01:58,760
as possible we<font color="#E5E5E5"> also need to lock</font><font color="#CCCCCC"> down</font>

37
00:01:56,330 --> 00:02:01,759
<font color="#CCCCCC">our API is data stores network security</font>

38
00:01:58,760 --> 00:02:04,930
so even a compromised system does not

39
00:02:01,760 --> 00:02:07,490
give up decrees and crown jewels<font color="#E5E5E5"> easily</font>

40
00:02:04,930 --> 00:02:09,160
giving us more time to<font color="#E5E5E5"> detect the</font><font color="#CCCCCC"> attack</font>

41
00:02:07,490 --> 00:02:16,190
<font color="#E5E5E5">and shut it down</font>

42
00:02:09,160 --> 00:02:17,900
<font color="#E5E5E5">so we're going to go</font><font color="#CCCCCC"> crazy deep you</font>

43
00:02:16,190 --> 00:02:20,150
don't know Cuban actors already then<font color="#E5E5E5"> I</font>

44
00:02:17,900 --> 00:02:22,099
hope this will<font color="#CCCCCC"> be an enlightening</font>

45
00:02:20,150 --> 00:02:24,730
<font color="#CCCCCC">experience</font><font color="#E5E5E5"> if you do I hope that there</font>

46
00:02:22,099 --> 00:02:28,100
<font color="#CCCCCC">is something for</font><font color="#E5E5E5"> you as well</font>

47
00:02:24,730 --> 00:02:30,230
so how secure is Cuban<font color="#E5E5E5"> assets is it safe</font>

48
00:02:28,100 --> 00:02:31,100
<font color="#E5E5E5">to run</font><font color="#CCCCCC"> multi-talented in a public cloud</font>

49
00:02:30,230 --> 00:02:33,049
on

50
00:02:31,100 --> 00:02:36,530
beep I locked in a safe in a box

51
00:02:33,050 --> 00:02:38,780
<font color="#E5E5E5">suspended above the Thames can we really</font>

52
00:02:36,530 --> 00:02:41,870
run<font color="#E5E5E5"> Google style multi-talented</font>

53
00:02:38,780 --> 00:02:44,420
<font color="#E5E5E5">infrastructure safely</font><font color="#CCCCCC"> and how do we</font><font color="#E5E5E5"> make</font>

54
00:02:41,870 --> 00:02:48,380
sure<font color="#CCCCCC"> that what</font><font color="#E5E5E5"> is safe today is also</font>

55
00:02:44,420 --> 00:02:51,049
safe tomorrow<font color="#E5E5E5"> so we will talk about</font>

56
00:02:48,380 --> 00:02:54,470
common pones<font color="#CCCCCC"> of kubernetes and look at</font>

57
00:02:51,050 --> 00:02:56,630
how<font color="#E5E5E5"> it's been broken</font><font color="#CCCCCC"> how to harden how</font>

58
00:02:54,470 --> 00:02:58,430
to deal with our workloads because there

59
00:02:56,630 --> 00:02:59,870
are two<font color="#E5E5E5"> different networks</font><font color="#CCCCCC"> in kubernetes</font>

60
00:02:58,430 --> 00:03:02,060
warmth of control<font color="#E5E5E5"> playing and one for</font>

61
00:02:59,870 --> 00:03:04,580
the<font color="#E5E5E5"> containers hard and soft</font>

62
00:03:02,060 --> 00:03:06,590
multi-tenancy patterns and<font color="#CCCCCC"> how to build</font>

63
00:03:04,580 --> 00:03:09,590
this<font color="#CCCCCC"> in very high compliance</font><font color="#E5E5E5"> super</font>

64
00:03:06,590 --> 00:03:12,190
paranoid environments<font color="#E5E5E5"> and finally tying</font>

65
00:03:09,590 --> 00:03:16,220
<font color="#E5E5E5">it all together with continuous security</font>

66
00:03:12,190 --> 00:03:19,910
so back<font color="#E5E5E5"> in the day the cubelets was</font>

67
00:03:16,220 --> 00:03:22,880
insecure security fails to keep up with

68
00:03:19,910 --> 00:03:25,160
the pace of feature delivery<font color="#E5E5E5"> as I'm sure</font>

69
00:03:22,880 --> 00:03:28,220
we all<font color="#CCCCCC"> know one thing to note here</font><font color="#E5E5E5"> is</font>

70
00:03:25,160 --> 00:03:32,030
<font color="#E5E5E5">the kubernetes feels really insecure by</font>

71
00:03:28,220 --> 00:03:34,370
default<font color="#E5E5E5"> which</font><font color="#CCCCCC"> is not a good look but of</font>

72
00:03:32,030 --> 00:03:37,760
<font color="#E5E5E5">course it has proliferated aggressively</font>

73
00:03:34,370 --> 00:03:40,820
it is the most popular projects in terms

74
00:03:37,760 --> 00:03:44,239
<font color="#E5E5E5">of new contributors and it is an open</font>

75
00:03:40,820 --> 00:03:45,440
source success story<font color="#E5E5E5"> let's say and it's</font>

76
00:03:44,240 --> 00:03:48,770
been deployed<font color="#E5E5E5"> into everywhere you could</font>

77
00:03:45,440 --> 00:03:52,960
possibly imagine<font color="#CCCCCC"> so historically there</font>

78
00:03:48,770 --> 00:03:55,400
<font color="#CCCCCC">was</font><font color="#E5E5E5"> an a back model that would mount a</font>

79
00:03:52,960 --> 00:03:58,160
service account token into<font color="#E5E5E5"> every pod</font>

80
00:03:55,400 --> 00:04:00,410
<font color="#E5E5E5">that service count had essentially</font><font color="#CCCCCC"> route</font>

81
00:03:58,160 --> 00:04:06,740
permission on the API server<font color="#E5E5E5"> so up</font><font color="#CCCCCC"> until</font>

82
00:04:00,410 --> 00:04:07,340
our<font color="#E5E5E5"> back was shipped in 1.6 then</font><font color="#CCCCCC"> RTE</font><font color="#E5E5E5"> in</font>

83
00:04:06,740 --> 00:04:10,040
a pod

84
00:04:07,340 --> 00:04:14,270
meant<font color="#E5E5E5"> you could then route the cluster</font>

85
00:04:10,040 --> 00:04:17,000
<font color="#E5E5E5">from one RC workload security this</font><font color="#CCCCCC"> is</font>

86
00:04:14,270 --> 00:04:19,100
<font color="#E5E5E5">about running</font><font color="#CCCCCC"> set comp</font><font color="#E5E5E5"> in</font><font color="#CCCCCC"> communities</font>

87
00:04:17,000 --> 00:04:21,709
<font color="#E5E5E5">again the set comp extension while</font>

88
00:04:19,100 --> 00:04:24,470
available<font color="#CCCCCC"> and docker</font><font color="#E5E5E5"> was not available</font>

89
00:04:21,709 --> 00:04:28,580
in<font color="#E5E5E5"> the</font><font color="#CCCCCC"> cumulated proxy layer essentially</font>

90
00:04:24,470 --> 00:04:29,980
up until I lose the version numbers but

91
00:04:28,580 --> 00:04:32,419
anyway this talk from<font color="#E5E5E5"> Jesse</font><font color="#CCCCCC"> Frisell</font>

92
00:04:29,980 --> 00:04:34,490
demonstrates how to defeat a dirty cow

93
00:04:32,420 --> 00:04:36,950
attack<font color="#E5E5E5"> of course containers are sharing</font>

94
00:04:34,490 --> 00:04:40,850
the same<font color="#E5E5E5"> kernel so a kernel breakout is</font>

95
00:04:36,950 --> 00:04:42,770
container<font color="#CCCCCC"> to</font><font color="#E5E5E5"> hosts very quickly</font><font color="#CCCCCC"> coupons</font>

96
00:04:40,850 --> 00:04:44,930
<font color="#CCCCCC">or another great</font><font color="#E5E5E5"> talk from Brad Guzman</font>

97
00:04:42,770 --> 00:04:47,180
<font color="#E5E5E5">on the</font><font color="#CCCCCC"> misconfigurations</font><font color="#E5E5E5"> and</font>

98
00:04:44,930 --> 00:04:49,190
<font color="#CCCCCC">Kuras is in a cluster that he saw</font><font color="#E5E5E5"> in</font>

99
00:04:47,180 --> 00:04:51,410
vendor-supplied distributions<font color="#CCCCCC"> he worked</font>

100
00:04:49,190 --> 00:04:54,500
<font color="#CCCCCC">with</font><font color="#E5E5E5"> the vendors responsibly disclosed</font>

101
00:04:51,410 --> 00:04:56,300
<font color="#E5E5E5">then delivered this talk it really</font><font color="#CCCCCC"> did a</font>

102
00:04:54,500 --> 00:04:57,199
great deal of good for the ecosystem<font color="#E5E5E5"> at</font>

103
00:04:56,300 --> 00:04:58,550
large

104
00:04:57,199 --> 00:05:01,130
helm which is<font color="#CCCCCC"> the deployment</font>

105
00:04:58,550 --> 00:05:03,440
configuration<font color="#E5E5E5"> tool had an open to you uh</font>

106
00:05:01,130 --> 00:05:06,080
<font color="#E5E5E5">PC interface until kind of recently it</font>

107
00:05:03,440 --> 00:05:08,030
didn't have TLS until bit less recently

108
00:05:06,080 --> 00:05:09,800
which meant again if you could make a G

109
00:05:08,030 --> 00:05:11,809
RPC call<font color="#CCCCCC"> for an unprivileged container</font>

110
00:05:09,800 --> 00:05:13,789
<font color="#CCCCCC">in your cluster you could spin up a</font>

111
00:05:11,810 --> 00:05:16,070
privileged container<font color="#E5E5E5"> which of course</font>

112
00:05:13,789 --> 00:05:18,530
<font color="#E5E5E5">breaks out of all namespaces in the</font>

113
00:05:16,070 --> 00:05:21,680
sense is essentially<font color="#E5E5E5"> running a process</font>

114
00:05:18,530 --> 00:05:24,530
<font color="#CCCCCC">on the host</font><font color="#E5E5E5"> and game over</font>

115
00:05:21,680 --> 00:05:28,220
so the unsecured<font color="#E5E5E5"> s dashboard from Tesla</font>

116
00:05:24,530 --> 00:05:29,900
again this dashboard<font color="#CCCCCC"> had service account</font>

117
00:05:28,220 --> 00:05:32,449
tokens that<font color="#E5E5E5"> gave it elevated permissions</font>

118
00:05:29,900 --> 00:05:34,609
to<font color="#E5E5E5"> the API server so</font><font color="#CCCCCC"> compromise at the</font>

119
00:05:32,449 --> 00:05:37,310
dashboard leads to a<font color="#E5E5E5"> compromise a full</font>

120
00:05:34,610 --> 00:05:40,490
routing of<font color="#CCCCCC"> the cluster in this case they</font>

121
00:05:37,310 --> 00:05:43,910
actually did<font color="#E5E5E5"> all sorts of things</font><font color="#CCCCCC"> to</font><font color="#E5E5E5"> get</font>

122
00:05:40,490 --> 00:05:46,970
<font color="#E5E5E5">this dashboard</font><font color="#CCCCCC"> on the public</font><font color="#E5E5E5"> Internet</font><font color="#CCCCCC"> it</font>

123
00:05:43,910 --> 00:05:48,440
was intentional but<font color="#E5E5E5"> sadly mistaken</font><font color="#CCCCCC"> way</font>

124
00:05:46,970 --> 00:05:51,949
<font color="#CCCCCC">of</font><font color="#E5E5E5"> doing things</font>

125
00:05:48,440 --> 00:05:55,370
we've had a recent<font color="#CCCCCC"> subpath volume mount</font>

126
00:05:51,949 --> 00:05:58,159
that<font color="#CCCCCC"> symlink traversal issue</font><font color="#E5E5E5"> of course</font>

127
00:05:55,370 --> 00:06:00,889
<font color="#CCCCCC">amount points is it's from the host</font>

128
00:05:58,159 --> 00:06:02,479
<font color="#E5E5E5">mount points process namespaces memory</font>

129
00:06:00,889 --> 00:06:04,039
and<font color="#E5E5E5"> approaches communication they're all</font>

130
00:06:02,479 --> 00:06:07,219
namespaces<font color="#CCCCCC"> that you can share</font><font color="#E5E5E5"> with the</font>

131
00:06:04,039 --> 00:06:09,050
<font color="#E5E5E5">host violating your security boundary as</font>

132
00:06:07,220 --> 00:06:10,610
with<font color="#E5E5E5"> privileged mode it is foot gun</font>

133
00:06:09,050 --> 00:06:12,440
<font color="#CCCCCC">central and we will look at</font><font color="#E5E5E5"> how to</font>

134
00:06:10,610 --> 00:06:14,870
<font color="#CCCCCC">mitigate those sort of things</font>

135
00:06:12,440 --> 00:06:15,860
of<font color="#E5E5E5"> course kubernetes</font><font color="#CCCCCC"> is a very</font>

136
00:06:14,870 --> 00:06:18,830
<font color="#E5E5E5">fast-moving</font>

137
00:06:15,860 --> 00:06:20,210
and very broad<font color="#CCCCCC"> and wide attack surface</font>

138
00:06:18,830 --> 00:06:22,849
<font color="#E5E5E5">and because it's on there's so much</font>

139
00:06:20,210 --> 00:06:24,739
active development<font color="#E5E5E5"> of course new code is</font>

140
00:06:22,849 --> 00:06:26,570
<font color="#E5E5E5">somewhere folks to hide this was</font>

141
00:06:24,740 --> 00:06:28,820
probably latent<font color="#E5E5E5"> in kubernetes for a good</font>

142
00:06:26,570 --> 00:06:31,190
couple<font color="#E5E5E5"> of years and again</font><font color="#CCCCCC"> allowed</font>

143
00:06:28,820 --> 00:06:34,270
container breakouts<font color="#E5E5E5"> well host breakout</font>

144
00:06:31,190 --> 00:06:37,940
<font color="#E5E5E5">via pass traversal</font><font color="#CCCCCC"> on a mounted volume</font>

145
00:06:34,270 --> 00:06:40,940
so ultimately the<font color="#E5E5E5"> first thing we have to</font>

146
00:06:37,940 --> 00:06:43,789
<font color="#CCCCCC">do in a</font><font color="#E5E5E5"> cube nest cluster is create a</font>

147
00:06:40,940 --> 00:06:46,849
cluster see a sign our<font color="#CCCCCC"> root certs</font><font color="#E5E5E5"> and</font>

148
00:06:43,789 --> 00:06:49,090
<font color="#E5E5E5">our lease and run mutual TLS across the</font>

149
00:06:46,849 --> 00:06:51,620
control<font color="#CCCCCC"> plane</font><font color="#E5E5E5"> absolutely vital</font>

150
00:06:49,090 --> 00:06:54,229
<font color="#E5E5E5">otherwise we are leaking traffic that</font>

151
00:06:51,620 --> 00:06:56,840
<font color="#E5E5E5">can lead to cluster compromised</font><font color="#CCCCCC"> city</font>

152
00:06:54,229 --> 00:06:58,580
security<font color="#E5E5E5"> again I realize that the choir</font>

153
00:06:56,840 --> 00:07:00,318
<font color="#E5E5E5">is here and I'm preaching to them</font>

154
00:06:58,580 --> 00:07:02,210
but of course<font color="#CCCCCC"> we want to do these</font><font color="#E5E5E5"> things</font>

155
00:07:00,319 --> 00:07:04,520
<font color="#E5E5E5">because we</font><font color="#CCCCCC"> know it's impossible to</font>

156
00:07:02,210 --> 00:07:07,938
secure anything<font color="#CCCCCC"> without automation</font><font color="#E5E5E5"> on</font>

157
00:07:04,520 --> 00:07:10,240
almost<font color="#E5E5E5"> everything and</font><font color="#CCCCCC"> a continuous</font>

158
00:07:07,939 --> 00:07:15,039
delivery<font color="#CCCCCC"> content</font><font color="#E5E5E5"> security</font><font color="#CCCCCC"> sharer a</font>

159
00:07:10,240 --> 00:07:18,919
beautifully<font color="#E5E5E5"> recursive loopy future</font>

160
00:07:15,039 --> 00:07:22,340
<font color="#CCCCCC">marvelous</font><font color="#E5E5E5"> so let's look at the control</font>

161
00:07:18,919 --> 00:07:24,650
plane this<font color="#E5E5E5"> is what kubernetes looks like</font>

162
00:07:22,340 --> 00:07:26,688
at a high level<font color="#E5E5E5"> we have in this case</font>

163
00:07:24,650 --> 00:07:27,770
this is<font color="#CCCCCC"> a single master you'll</font><font color="#E5E5E5"> always</font>

164
00:07:26,689 --> 00:07:31,069
<font color="#E5E5E5">want to run this with high availability</font>

165
00:07:27,770 --> 00:07:33,378
on the master nodes there<font color="#E5E5E5"> they're built</font>

166
00:07:31,069 --> 00:07:34,699
<font color="#E5E5E5">to run in that manner and importantly</font>

167
00:07:33,379 --> 00:07:38,479
what we have here is a lot of networking

168
00:07:34,699 --> 00:07:40,550
<font color="#E5E5E5">communication so the API server is the</font>

169
00:07:38,479 --> 00:07:42,409
<font color="#E5E5E5">single point of truth</font><font color="#CCCCCC"> it is the only</font>

170
00:07:40,550 --> 00:07:44,810
place that data<font color="#E5E5E5"> should ever be accessed</font>

171
00:07:42,409 --> 00:07:45,650
LCD should be<font color="#E5E5E5"> for whatever we go into</font>

172
00:07:44,810 --> 00:07:47,690
this but firewalled

173
00:07:45,650 --> 00:07:51,138
and<font color="#CCCCCC"> firewalled exclusively to the api</font>

174
00:07:47,690 --> 00:07:53,509
server<font color="#E5E5E5"> if one is running cops then the</font>

175
00:07:51,139 --> 00:07:55,580
Calico<font color="#E5E5E5"> plugin</font><font color="#CCCCCC"> that you are using talks</font>

176
00:07:53,509 --> 00:08:01,879
directly to<font color="#E5E5E5"> an unencrypted</font><font color="#CCCCCC"> SCD an</font>

177
00:07:55,580 --> 00:08:03,560
unencrypted that CD is<font color="#CCCCCC"> its again routes</font>

178
00:08:01,879 --> 00:08:06,949
<font color="#E5E5E5">straight into the cluster</font><font color="#CCCCCC"> more or</font><font color="#E5E5E5"> less</font>

179
00:08:03,560 --> 00:08:08,360
so there<font color="#E5E5E5"> is no provision for keys here</font>

180
00:08:06,949 --> 00:08:10,009
<font color="#E5E5E5">we'll go</font><font color="#CCCCCC"> through</font><font color="#E5E5E5"> this as well but but</font>

181
00:08:08,360 --> 00:08:13,520
<font color="#E5E5E5">ultimately we have a single point of</font>

182
00:08:10,009 --> 00:08:15,259
truth<font color="#E5E5E5"> in the API server and we'll scale</font>

183
00:08:13,520 --> 00:08:16,909
<font color="#E5E5E5">that API servers then we have the</font>

184
00:08:15,259 --> 00:08:19,099
cheddar<font color="#E5E5E5"> and controller manager which do</font>

185
00:08:16,909 --> 00:08:21,259
similar<font color="#E5E5E5"> but slightly distinct jobs in</font>

186
00:08:19,099 --> 00:08:24,139
terms of actually<font color="#E5E5E5"> assigning a</font><font color="#CCCCCC"> workload</font>

187
00:08:21,259 --> 00:08:27,199
<font color="#E5E5E5">to a node versus assigning the</font>

188
00:08:24,139 --> 00:08:29,839
horizontal scalability and<font color="#E5E5E5"> and various</font>

189
00:08:27,199 --> 00:08:31,909
other<font color="#E5E5E5"> startup functions</font><font color="#CCCCCC"> the</font><font color="#E5E5E5"> controller</font>

190
00:08:29,839 --> 00:08:33,469
management deals with then on the

191
00:08:31,909 --> 00:08:36,078
individual<font color="#E5E5E5"> nodes themselves we have</font><font color="#CCCCCC"> the</font>

192
00:08:33,469 --> 00:08:37,219
operating system which my preference

193
00:08:36,078 --> 00:08:40,399
would<font color="#E5E5E5"> be</font><font color="#CCCCCC"> something very lightweight</font>

194
00:08:37,219 --> 00:08:42,349
<font color="#CCCCCC">immutable lockdown chorus was</font><font color="#E5E5E5"> very good</font>

195
00:08:40,399 --> 00:08:44,300
at this<font color="#CCCCCC"> and who's the kind</font><font color="#E5E5E5"> of poster</font>

196
00:08:42,349 --> 00:08:46,459
child this revolution<font color="#CCCCCC"> there are now a</font>

197
00:08:44,300 --> 00:08:49,640
<font color="#E5E5E5">few others that do it if you go on gke</font>

198
00:08:46,459 --> 00:08:52,430
<font color="#E5E5E5">the image that you the operating system</font>

199
00:08:49,640 --> 00:08:53,959
image that you run there<font color="#E5E5E5"> it's beautiful</font>

200
00:08:52,430 --> 00:08:57,380
there's no<font color="#E5E5E5"> exact permissions on a lot of</font>

201
00:08:53,959 --> 00:08:59,060
<font color="#CCCCCC">things</font><font color="#E5E5E5"> and it's constricted so even if</font>

202
00:08:57,380 --> 00:09:01,189
you break out<font color="#CCCCCC"> onto</font><font color="#E5E5E5"> the</font><font color="#CCCCCC"> host you still</font>

203
00:08:59,060 --> 00:09:02,750
have a<font color="#E5E5E5"> lot more work to</font><font color="#CCCCCC"> do there is also</font>

204
00:09:01,190 --> 00:09:05,240
a minimal attack surface<font color="#E5E5E5"> of course</font>

205
00:09:02,750 --> 00:09:07,430
because these distributions do not come

206
00:09:05,240 --> 00:09:09,079
with package managers<font color="#E5E5E5"> the pattern is if</font>

207
00:09:07,430 --> 00:09:10,969
you want to<font color="#E5E5E5"> debug</font><font color="#CCCCCC"> something</font><font color="#E5E5E5"> you pull</font>

208
00:09:09,079 --> 00:09:11,729
down<font color="#E5E5E5"> the container with those debug</font>

209
00:09:10,970 --> 00:09:14,730
tools

210
00:09:11,730 --> 00:09:16,170
and you run it that way<font color="#CCCCCC"> so</font><font color="#E5E5E5"> lockdown</font><font color="#CCCCCC"> OS</font>

211
00:09:14,730 --> 00:09:18,329
<font color="#E5E5E5">contain a runtime is typically docker</font>

212
00:09:16,170 --> 00:09:20,729
<font color="#CCCCCC">although that is now changing with</font><font color="#E5E5E5"> Red</font>

213
00:09:18,329 --> 00:09:22,888
<font color="#CCCCCC">Hat release of cryo</font><font color="#E5E5E5"> potato runtime</font>

214
00:09:20,730 --> 00:09:25,320
interface plugin there is<font color="#CCCCCC"> Intel's quatre</font>

215
00:09:22,889 --> 00:09:27,540
containers which integrates with

216
00:09:25,320 --> 00:09:29,850
<font color="#CCCCCC">hardware VTX extensions to run</font>

217
00:09:27,540 --> 00:09:33,380
virtualized<font color="#E5E5E5"> virtual machines as</font>

218
00:09:29,850 --> 00:09:37,980
containers<font color="#E5E5E5"> and that is now full circle</font>

219
00:09:33,380 --> 00:09:40,160
<font color="#E5E5E5">that obviously</font><font color="#CCCCCC"> is probably a trade-off</font>

220
00:09:37,980 --> 00:09:44,550
<font color="#CCCCCC">and balance between whether one requires</font>

221
00:09:40,160 --> 00:09:46,740
<font color="#E5E5E5">fast startup or the extra guarantees the</font>

222
00:09:44,550 --> 00:09:50,639
virtualization gives the containers

223
00:09:46,740 --> 00:09:53,190
don't<font color="#E5E5E5"> so yeah of course and then onto</font>

224
00:09:50,639 --> 00:09:55,500
the cube look which<font color="#CCCCCC"> is</font><font color="#E5E5E5"> the agent for the</font>

225
00:09:53,190 --> 00:09:58,290
API server and a networking<font color="#E5E5E5"> which is a</font>

226
00:09:55,500 --> 00:09:59,399
container<font color="#E5E5E5"> network interface</font><font color="#CCCCCC"> plug-in the</font>

227
00:09:58,290 --> 00:10:01,560
important thing<font color="#CCCCCC"> to note here</font><font color="#E5E5E5"> is</font><font color="#CCCCCC"> that</font>

228
00:09:59,399 --> 00:10:03,690
this is just<font color="#CCCCCC"> a bunch of abstractions and</font>

229
00:10:01,560 --> 00:10:07,709
indirection<font color="#E5E5E5"> debugging stuff in here is a</font>

230
00:10:03,690 --> 00:10:10,380
<font color="#E5E5E5">nightmare we will look at this further</font>

231
00:10:07,709 --> 00:10:12,899
<font color="#CCCCCC">so</font><font color="#E5E5E5"> minimal viable security tell us</font>

232
00:10:10,380 --> 00:10:15,300
everywhere as<font color="#CCCCCC"> you've said</font><font color="#E5E5E5"> we now have</font>

233
00:10:12,899 --> 00:10:17,940
<font color="#E5E5E5">provision to bootstrap TLS nodes so</font>

234
00:10:15,300 --> 00:10:20,579
historically you'd have to bake your

235
00:10:17,940 --> 00:10:23,279
keys<font color="#E5E5E5"> into</font><font color="#CCCCCC"> your golden image that you use</font>

236
00:10:20,579 --> 00:10:26,310
<font color="#E5E5E5">to horizontally scale your nodes now</font>

237
00:10:23,279 --> 00:10:29,189
there is a TLS bootstrap that initiates

238
00:10:26,310 --> 00:10:31,949
<font color="#CCCCCC">trusts using the public key of the</font>

239
00:10:29,190 --> 00:10:35,850
certificate<font color="#E5E5E5"> on the API server uses that</font>

240
00:10:31,949 --> 00:10:38,579
for temporary exemption essentially<font color="#E5E5E5"> for</font>

241
00:10:35,850 --> 00:10:41,310
he<font color="#CCCCCC"> bullet passed the CSR receives a</font>

242
00:10:38,579 --> 00:10:45,420
certificate<font color="#E5E5E5"> mutual TLS an authentication</font>

243
00:10:41,310 --> 00:10:47,010
therefore and and then we have joined a

244
00:10:45,420 --> 00:10:50,209
cluster from<font color="#E5E5E5"> a golden</font><font color="#CCCCCC"> image</font><font color="#E5E5E5"> without</font>

245
00:10:47,010 --> 00:10:52,410
baking secrets into the image<font color="#E5E5E5"> super nice</font>

246
00:10:50,209 --> 00:10:54,319
turning up<font color="#E5E5E5"> that is what it looks like</font>

247
00:10:52,410 --> 00:10:56,550
<font color="#E5E5E5">for those of you to care Oh</font>

248
00:10:54,319 --> 00:10:58,620
<font color="#CCCCCC">Semin 8ly slides afterwards there's a</font>

249
00:10:56,550 --> 00:11:01,889
lot of<font color="#CCCCCC"> information in them I won't go</font>

250
00:10:58,620 --> 00:11:04,110
too deep<font color="#CCCCCC"> into everything</font><font color="#E5E5E5"> our back</font><font color="#CCCCCC"> role</font>

251
00:11:01,889 --> 00:11:07,560
based access control is the way to slice

252
00:11:04,110 --> 00:11:09,660
and dice<font color="#CCCCCC"> to cluster permissions so</font>

253
00:11:07,560 --> 00:11:11,638
<font color="#CCCCCC">instead of that</font><font color="#E5E5E5"> nebulous</font><font color="#CCCCCC"> ploud one has</font>

254
00:11:09,660 --> 00:11:16,189
this<font color="#E5E5E5"> abstraction</font><font color="#CCCCCC"> they're super difficult</font>

255
00:11:11,639 --> 00:11:18,769
<font color="#CCCCCC">to audit one of my</font><font color="#E5E5E5"> Powell's is recently</font>

256
00:11:16,190 --> 00:11:22,520
enticer one of my<font color="#E5E5E5"> powers has recently</font>

257
00:11:18,769 --> 00:11:26,060
written a load of bats<font color="#CCCCCC"> tests for these</font>

258
00:11:22,520 --> 00:11:29,900
<font color="#E5E5E5">work yeah</font><font color="#CCCCCC"> so you can literally use the Q</font>

259
00:11:26,060 --> 00:11:41,599
control off while<font color="#CCCCCC"> achieving a certain</font>

260
00:11:29,900 --> 00:11:43,400
<font color="#E5E5E5">user and then a certain state of yeah</font>

261
00:11:41,600 --> 00:11:45,940
<font color="#E5E5E5">and so that's</font><font color="#CCCCCC"> really nice that again</font>

262
00:11:43,400 --> 00:11:49,010
leads toward continual assertions of

263
00:11:45,940 --> 00:11:51,730
identity enrolled in the cluster<font color="#CCCCCC"> and</font>

264
00:11:49,010 --> 00:11:55,160
<font color="#E5E5E5">that</font><font color="#CCCCCC"> is</font><font color="#E5E5E5"> certainly the</font><font color="#CCCCCC"> message that I'm</font>

265
00:11:51,730 --> 00:11:57,860
<font color="#CCCCCC">trying to</font><font color="#E5E5E5"> convey today that auditing our</font>

266
00:11:55,160 --> 00:12:01,550
back is super<font color="#E5E5E5"> difficult</font><font color="#CCCCCC"> because ideally</font>

267
00:11:57,860 --> 00:12:03,170
<font color="#E5E5E5">the access</font><font color="#CCCCCC"> our back in a Cuban asset</font>

268
00:12:01,550 --> 00:12:05,479
should be federated<font color="#CCCCCC"> and we should push</font>

269
00:12:03,170 --> 00:12:07,130
identity out to a third party<font color="#E5E5E5"> system so</font>

270
00:12:05,480 --> 00:12:08,720
that on-boarding and off-boarding<font color="#CCCCCC"> is an</font>

271
00:12:07,130 --> 00:12:11,230
organizational concern and not<font color="#CCCCCC"> a</font>

272
00:12:08,720 --> 00:12:13,160
<font color="#CCCCCC">snowflake concern for cluster a B or C</font>

273
00:12:11,230 --> 00:12:14,660
<font color="#E5E5E5">that doesn't mean that auditing these</font>

274
00:12:13,160 --> 00:12:16,819
roles is difficult because all we have

275
00:12:14,660 --> 00:12:20,449
is<font color="#CCCCCC"> a claim or a group</font><font color="#E5E5E5"> coming in from our</font>

276
00:12:16,820 --> 00:12:22,220
federated identity so making<font color="#CCCCCC"> sure</font><font color="#E5E5E5"> that</font>

277
00:12:20,450 --> 00:12:24,950
these group these are back<font color="#E5E5E5"> roles are</font>

278
00:12:22,220 --> 00:12:26,840
locked down<font color="#E5E5E5"> super important and an easy</font>

279
00:12:24,950 --> 00:12:29,930
thing<font color="#E5E5E5"> to get wrong without static</font>

280
00:12:26,840 --> 00:12:32,510
analysis or testing on them<font color="#E5E5E5"> there are</font>

281
00:12:29,930 --> 00:12:35,719
lots of ways<font color="#CCCCCC"> to connect to vanassa's</font><font color="#E5E5E5"> to</font>

282
00:12:32,510 --> 00:12:39,470
an identity service<font color="#E5E5E5"> there are</font><font color="#CCCCCC"> also many</font>

283
00:12:35,720 --> 00:12:41,060
<font color="#CCCCCC">ways to authenticate ultimately you can</font>

284
00:12:39,470 --> 00:12:42,320
just call<font color="#E5E5E5"> out to</font><font color="#CCCCCC"> your</font><font color="#E5E5E5"> own</font><font color="#CCCCCC"> binary and</font>

285
00:12:41,060 --> 00:12:44,359
have that do whatever<font color="#CCCCCC"> side-channel</font>

286
00:12:42,320 --> 00:12:48,200
<font color="#E5E5E5">authentication you require and then</font>

287
00:12:44,360 --> 00:12:51,830
bring back<font color="#E5E5E5"> your authentication into the</font>

288
00:12:48,200 --> 00:12:54,650
cluster legacy authorization is

289
00:12:51,830 --> 00:12:56,570
old-school<font color="#CCCCCC"> on gke you need to manually</font>

290
00:12:54,650 --> 00:12:59,150
disable it I hope this flag will become

291
00:12:56,570 --> 00:13:01,030
deprecated and default soon<font color="#CCCCCC"> GK</font><font color="#E5E5E5"> is the</font>

292
00:12:59,150 --> 00:13:03,800
google kubernetes engine which is<font color="#E5E5E5"> their</font>

293
00:13:01,030 --> 00:13:06,250
opinionated distribution I love it

294
00:13:03,800 --> 00:13:08,569
personally<font color="#CCCCCC"> I think it's a</font><font color="#E5E5E5"> fabulous tool</font>

295
00:13:06,250 --> 00:13:10,880
<font color="#E5E5E5">it's essentially a distributed system on</font>

296
00:13:08,570 --> 00:13:11,530
a blocking API called which is<font color="#CCCCCC"> a CLI</font>

297
00:13:10,880 --> 00:13:15,890
one-liner

298
00:13:11,530 --> 00:13:17,660
really quite magical<font color="#E5E5E5"> the port name I</font>

299
00:13:15,890 --> 00:13:19,850
mean the flag name says it all<font color="#CCCCCC"> really</font>

300
00:13:17,660 --> 00:13:23,770
<font color="#CCCCCC">they ship</font><font color="#E5E5E5"> within secure port because at</font>

301
00:13:19,850 --> 00:13:26,420
one stage it was<font color="#E5E5E5"> a way to monitor the</font>

302
00:13:23,770 --> 00:13:28,250
applications of bootstrap<font color="#CCCCCC"> they've worked</font>

303
00:13:26,420 --> 00:13:31,459
around it<font color="#E5E5E5"> now they should always be set</font>

304
00:13:28,250 --> 00:13:34,130
to<font color="#E5E5E5"> zero otherwise your 88-key port gives</font>

305
00:13:31,460 --> 00:13:36,009
you read-only access to the API<font color="#CCCCCC"> as you</font>

306
00:13:34,130 --> 00:13:37,779
can see there it<font color="#E5E5E5"> is locked down to local</font>

307
00:13:36,009 --> 00:13:39,910
which is a theoretical security boundary

308
00:13:37,779 --> 00:13:42,550
<font color="#E5E5E5">but I mean I'm privileged user can get</font>

309
00:13:39,910 --> 00:13:44,319
on and still have access<font color="#CCCCCC"> to</font><font color="#E5E5E5"> that</font>

310
00:13:42,550 --> 00:13:45,699
loopback adapter so that<font color="#CCCCCC"> should</font><font color="#E5E5E5"> be</font>

311
00:13:44,319 --> 00:13:46,300
disabled<font color="#E5E5E5"> otherwise you can do things</font>

312
00:13:45,699 --> 00:13:48,758
<font color="#E5E5E5">like this</font>

313
00:13:46,300 --> 00:13:52,209
this is leaking secrets for<font color="#CCCCCC"> a service</font>

314
00:13:48,759 --> 00:13:54,629
account<font color="#E5E5E5"> token system anonymous if we</font>

315
00:13:52,209 --> 00:13:57,339
<font color="#E5E5E5">allowed this</font><font color="#CCCCCC"> so</font><font color="#E5E5E5"> unless we disable this</font>

316
00:13:54,629 --> 00:13:59,739
<font color="#E5E5E5">we</font><font color="#CCCCCC"> leak our version information</font><font color="#E5E5E5"> on the</font>

317
00:13:57,339 --> 00:14:03,339
API server<font color="#E5E5E5"> the API server under</font><font color="#CCCCCC"> is</font><font color="#E5E5E5"> zero</font>

318
00:13:59,739 --> 00:14:05,139
trust model is sitting publicly on some

319
00:14:03,339 --> 00:14:07,709
network with this mutual TLS

320
00:14:05,139 --> 00:14:10,809
authentication that<font color="#E5E5E5"> I've bang on about</font>

321
00:14:07,709 --> 00:14:13,059
<font color="#E5E5E5">however if you</font><font color="#CCCCCC"> are</font><font color="#E5E5E5"> just driving by and</font>

322
00:14:10,809 --> 00:14:16,149
you have<font color="#CCCCCC"> anonymous or</font><font color="#E5E5E5"> thon then you can</font>

323
00:14:13,059 --> 00:14:19,149
scrape this from<font color="#CCCCCC"> six four four three</font>

324
00:14:16,149 --> 00:14:21,699
ports that hang around the<font color="#CCCCCC"> internet this</font>

325
00:14:19,149 --> 00:14:26,019
<font color="#E5E5E5">is the</font><font color="#CCCCCC"> HDD model that is recommended at</font>

326
00:14:21,699 --> 00:14:29,170
<font color="#CCCCCC">C D is V plus the state when you</font><font color="#E5E5E5"> submit</font>

327
00:14:26,019 --> 00:14:30,660
a pod to<font color="#E5E5E5"> the cluster it is validated in</font>

328
00:14:29,170 --> 00:14:33,368
various different ways mutated and

329
00:14:30,660 --> 00:14:36,699
finally validated again and then

330
00:14:33,369 --> 00:14:39,429
persisted<font color="#E5E5E5"> to</font><font color="#CCCCCC"> xcd nothing else happens</font>

331
00:14:36,699 --> 00:14:43,420
the controller and<font color="#E5E5E5"> the scheduler then</font>

332
00:14:39,429 --> 00:14:45,579
scan at CD for configuration blocks

333
00:14:43,420 --> 00:14:47,889
let's say without certain annotations

334
00:14:45,579 --> 00:14:49,989
<font color="#E5E5E5">and then as they</font><font color="#CCCCCC"> share do it on</font><font color="#E5E5E5"> two</font>

335
00:14:47,889 --> 00:14:51,610
nodes<font color="#CCCCCC"> then those annotations</font><font color="#E5E5E5"> re added so</font>

336
00:14:49,990 --> 00:14:54,339
it's it's a really<font color="#CCCCCC"> nice pattern actually</font>

337
00:14:51,610 --> 00:14:58,149
<font color="#CCCCCC">because it fully decoupled everything</font>

338
00:14:54,339 --> 00:14:59,980
but at<font color="#E5E5E5"> CD is absolutely required</font><font color="#CCCCCC"> to</font><font color="#E5E5E5"> not</font>

339
00:14:58,149 --> 00:15:01,959
<font color="#E5E5E5">only be available but</font><font color="#CCCCCC"> also secured</font>

340
00:14:59,980 --> 00:15:04,540
because everything everything everything

341
00:15:01,959 --> 00:15:06,160
<font color="#E5E5E5">is persisted</font><font color="#CCCCCC"> to</font><font color="#E5E5E5"> XE d super important get</font>

342
00:15:04,540 --> 00:15:09,969
it as far<font color="#E5E5E5"> away from all the rest of your</font>

343
00:15:06,160 --> 00:15:13,809
infrastructure<font color="#E5E5E5"> as possible and of course</font>

344
00:15:09,970 --> 00:15:15,999
certificate<font color="#E5E5E5"> rotation sto is network</font>

345
00:15:13,809 --> 00:15:18,939
security<font color="#E5E5E5"> for the application tier that</font>

346
00:15:15,999 --> 00:15:21,399
now stands up its own CA<font color="#E5E5E5"> runs a reverse</font>

347
00:15:18,939 --> 00:15:24,189
property called<font color="#CCCCCC"> envoy</font><font color="#E5E5E5"> for a</font><font color="#CCCCCC"> matt leinart</font>

348
00:15:21,399 --> 00:15:28,660
<font color="#E5E5E5">lift which is</font><font color="#CCCCCC"> a modern c++ code base</font>

349
00:15:24,189 --> 00:15:30,819
they exist and what that<font color="#E5E5E5"> does is pull</font>

350
00:15:28,660 --> 00:15:32,919
the new certificate<font color="#E5E5E5"> every hour for this</font>

351
00:15:30,819 --> 00:15:34,329
mutual authentication<font color="#E5E5E5"> it's actually</font>

352
00:15:32,919 --> 00:15:36,399
backed<font color="#CCCCCC"> by something called spiffy which</font>

353
00:15:34,329 --> 00:15:39,368
is secure production<font color="#CCCCCC"> infrastructure for</font>

354
00:15:36,399 --> 00:15:41,199
everybody which is<font color="#CCCCCC"> workload identity so</font>

355
00:15:39,369 --> 00:15:42,910
by<font color="#E5E5E5"> signing an identity to a</font><font color="#CCCCCC"> workload</font>

356
00:15:41,199 --> 00:15:45,429
that we trust we<font color="#CCCCCC"> can a code</font><font color="#E5E5E5"> that on a</font>

357
00:15:42,910 --> 00:15:47,589
<font color="#CCCCCC">csr we can request a TLS certificate and</font>

358
00:15:45,429 --> 00:15:50,110
we can mutually encrypt<font color="#E5E5E5"> our</font>

359
00:15:47,589 --> 00:15:53,470
communication<font color="#E5E5E5"> and do that with</font><font color="#CCCCCC"> ok</font>

360
00:15:50,110 --> 00:15:57,640
<font color="#E5E5E5">and these things need rotating in</font>

361
00:15:53,470 --> 00:15:59,829
<font color="#CCCCCC">classes itself however because EDD was</font>

362
00:15:57,640 --> 00:16:02,649
not encrypted by default<font color="#CCCCCC"> and in fact</font>

363
00:15:59,829 --> 00:16:05,290
still<font color="#CCCCCC"> is not so even getting on</font><font color="#E5E5E5"> to one</font>

364
00:16:02,649 --> 00:16:06,550
<font color="#CCCCCC">of those xcd nodes I'm forcing a core</font>

365
00:16:05,290 --> 00:16:08,110
<font color="#E5E5E5">dump you can get everything out and read</font>

366
00:16:06,550 --> 00:16:11,949
it<font color="#CCCCCC"> or you can read it if you can get</font>

367
00:16:08,110 --> 00:16:15,519
<font color="#CCCCCC">access to the client</font><font color="#E5E5E5"> the API so now has</font>

368
00:16:11,950 --> 00:16:19,149
<font color="#E5E5E5">provision to do this and yes there is</font>

369
00:16:15,519 --> 00:16:22,510
more detail<font color="#CCCCCC"> available</font><font color="#E5E5E5"> so workloads we</font>

370
00:16:19,149 --> 00:16:25,029
know about containers<font color="#E5E5E5"> bless him</font>

371
00:16:22,510 --> 00:16:27,220
so containers form the basis of the<font color="#CCCCCC"> cube</font>

372
00:16:25,029 --> 00:16:29,019
<font color="#E5E5E5">letter security model so while these</font>

373
00:16:27,220 --> 00:16:31,240
mechanisms are good for<font color="#E5E5E5"> layering</font><font color="#CCCCCC"> defense</font>

374
00:16:29,019 --> 00:16:33,160
<font color="#CCCCCC">in depth</font><font color="#E5E5E5"> and have</font><font color="#CCCCCC"> mitigated a number of</font>

375
00:16:31,240 --> 00:16:35,320
kernel vulnerabilities on top of<font color="#CCCCCC"> app sec</font>

376
00:16:33,160 --> 00:16:36,810
it only takes a<font color="#CCCCCC"> single bad kernel bug of</font>

377
00:16:35,320 --> 00:16:39,399
which historically there have been<font color="#E5E5E5"> a few</font>

378
00:16:36,810 --> 00:16:41,469
<font color="#E5E5E5">to bypass all these</font><font color="#CCCCCC"> mechanisms and</font>

379
00:16:39,399 --> 00:16:42,790
<font color="#E5E5E5">escape the container</font><font color="#CCCCCC"> now that is a</font>

380
00:16:41,470 --> 00:16:45,640
generalization<font color="#E5E5E5"> of course because</font>

381
00:16:42,790 --> 00:16:49,149
layering will increase our resilience to

382
00:16:45,640 --> 00:16:51,579
various different<font color="#CCCCCC"> forms of bug now</font>

383
00:16:49,149 --> 00:16:53,440
notably there are still multiple

384
00:16:51,579 --> 00:16:56,050
resources<font color="#E5E5E5"> that are not namespace in the</font>

385
00:16:53,440 --> 00:16:58,260
kernel system time the kernel<font color="#E5E5E5"> keyring</font>

386
00:16:56,050 --> 00:17:01,390
the kernel audit log<font color="#E5E5E5"> dns resolution</font>

387
00:16:58,260 --> 00:17:03,519
<font color="#E5E5E5">devices bits of proc so we still leak</font>

388
00:17:01,390 --> 00:17:05,260
<font color="#E5E5E5">things and we still have good enough</font>

389
00:17:03,519 --> 00:17:08,380
security<font color="#E5E5E5"> as</font><font color="#CCCCCC"> it's viewed by the kernel</font>

390
00:17:05,260 --> 00:17:11,199
developers but not if we bust out of

391
00:17:08,380 --> 00:17:13,439
<font color="#E5E5E5">these namespaces so the pod the lowest</font>

392
00:17:11,199 --> 00:17:16,630
addressable component<font color="#E5E5E5"> in</font><font color="#CCCCCC"> cuba neces and</font>

393
00:17:13,439 --> 00:17:21,400
here's an insecure one with privileged

394
00:17:16,630 --> 00:17:24,660
<font color="#E5E5E5">enabled this is running</font><font color="#CCCCCC"> its route it is</font>

395
00:17:21,400 --> 00:17:26,799
privileged<font color="#CCCCCC"> we we have no set</font><font color="#E5E5E5"> comp here</font>

396
00:17:24,660 --> 00:17:29,770
<font color="#CCCCCC">this is never something</font><font color="#E5E5E5"> we should</font>

397
00:17:26,799 --> 00:17:31,629
knowingly submit to a pod<font color="#CCCCCC"> of course</font><font color="#E5E5E5"> we</font>

398
00:17:29,770 --> 00:17:33,790
wrote a tool<font color="#E5E5E5"> cube Seck it's static</font>

399
00:17:31,630 --> 00:17:35,760
analysis cube nested resources<font color="#CCCCCC"> and it</font>

400
00:17:33,790 --> 00:17:37,990
comes<font color="#E5E5E5"> with a load of human readable</font>

401
00:17:35,760 --> 00:17:41,280
<font color="#E5E5E5">responses to why you're receiving these</font>

402
00:17:37,990 --> 00:17:44,620
particular judgments against the pod and

403
00:17:41,280 --> 00:17:47,168
secondarily<font color="#E5E5E5"> it's just an</font><font color="#CCCCCC"> API call</font><font color="#E5E5E5"> and it</font>

404
00:17:44,620 --> 00:17:50,290
will<font color="#E5E5E5"> return you not only</font><font color="#CCCCCC"> a risk</font><font color="#E5E5E5"> risk</font>

405
00:17:47,169 --> 00:17:52,059
score<font color="#CCCCCC"> which is basically if it's below</font>

406
00:17:50,290 --> 00:17:53,830
<font color="#CCCCCC">zero you probably shouldn't deploy this</font>

407
00:17:52,059 --> 00:17:56,830
<font color="#CCCCCC">pot at</font><font color="#E5E5E5"> all and you should probably set</font>

408
00:17:53,830 --> 00:18:00,220
that well<font color="#E5E5E5"> above</font><font color="#CCCCCC"> 15 or 20 because</font><font color="#E5E5E5"> that</font>

409
00:17:56,830 --> 00:18:02,230
<font color="#E5E5E5">requires a lot of positive security</font>

410
00:18:00,220 --> 00:18:04,090
enhancing flags to be<font color="#E5E5E5"> added to get you</font>

411
00:18:02,230 --> 00:18:06,670
to that<font color="#E5E5E5"> risk score and then</font>

412
00:18:04,090 --> 00:18:08,439
try and vindicate<font color="#CCCCCC"> its decisions</font><font color="#E5E5E5"> and also</font>

413
00:18:06,670 --> 00:18:11,950
give you some advisories on what you can

414
00:18:08,440 --> 00:18:15,210
do to increase your<font color="#E5E5E5"> score</font><font color="#CCCCCC"> so</font><font color="#E5E5E5"> table</font>

415
00:18:11,950 --> 00:18:17,890
security policies are the API servers

416
00:18:15,210 --> 00:18:20,230
<font color="#CCCCCC">static analysis for pod</font><font color="#E5E5E5"> gamal if you</font>

417
00:18:17,890 --> 00:18:22,300
have in this<font color="#E5E5E5"> case host</font><font color="#CCCCCC"> network if you</font>

418
00:18:20,230 --> 00:18:23,920
<font color="#E5E5E5">try and</font><font color="#CCCCCC"> mount if you try and</font><font color="#E5E5E5"> bind to</font>

419
00:18:22,300 --> 00:18:27,639
your<font color="#E5E5E5"> host network adapter so breaking</font>

420
00:18:23,920 --> 00:18:28,720
<font color="#CCCCCC">out of your</font><font color="#E5E5E5"> the the network namespace so</font>

421
00:18:27,640 --> 00:18:31,120
if you're trying<font color="#CCCCCC"> to</font><font color="#E5E5E5"> share that with</font><font color="#CCCCCC"> the</font>

422
00:18:28,720 --> 00:18:33,880
host<font color="#E5E5E5"> then this</font><font color="#CCCCCC"> pod security policy will</font>

423
00:18:31,120 --> 00:18:35,469
deny it<font color="#CCCCCC"> as with sharing interpersonal</font>

424
00:18:33,880 --> 00:18:37,240
<font color="#CCCCCC">communication in the process namespace</font>

425
00:18:35,470 --> 00:18:40,000
this forces you to run as<font color="#E5E5E5"> a non root</font>

426
00:18:37,240 --> 00:18:41,890
user<font color="#E5E5E5"> there is a dirty secrets which is</font>

427
00:18:40,000 --> 00:18:44,680
the<font color="#CCCCCC"> username space has never quite</font><font color="#E5E5E5"> been</font>

428
00:18:41,890 --> 00:18:46,720
finished you may<font color="#E5E5E5"> notice that docker runs</font>

429
00:18:44,680 --> 00:18:47,260
<font color="#E5E5E5">without the user name space enabled by</font>

430
00:18:46,720 --> 00:18:49,600
default

431
00:18:47,260 --> 00:18:52,300
<font color="#CCCCCC">Kuban athis does the same this is</font>

432
00:18:49,600 --> 00:18:53,830
because discretionary access control and

433
00:18:52,300 --> 00:18:55,600
<font color="#E5E5E5">the fundament of the Linux</font><font color="#CCCCCC"> security</font>

434
00:18:53,830 --> 00:18:58,689
model is all based on the identity<font color="#CCCCCC"> of a</font>

435
00:18:55,600 --> 00:19:00,820
user<font color="#E5E5E5"> making that work through multiple</font>

436
00:18:58,690 --> 00:19:03,610
namespaces is difficult<font color="#E5E5E5"> and nobody</font>

437
00:19:00,820 --> 00:19:06,010
really wants<font color="#CCCCCC"> to hang the synthetic</font>

438
00:19:03,610 --> 00:19:07,570
benchmark penalty on their layer of the

439
00:19:06,010 --> 00:19:09,550
stack<font color="#CCCCCC"> so the kernel doesn't</font><font color="#E5E5E5"> want it the</font>

440
00:19:07,570 --> 00:19:12,240
block<font color="#CCCCCC"> devices</font><font color="#E5E5E5"> drivers it wants it the</font>

441
00:19:09,550 --> 00:19:16,419
file system<font color="#CCCCCC"> drivers they want it and</font>

442
00:19:12,240 --> 00:19:18,400
what<font color="#CCCCCC"> lenhardt pottering has suggested is</font>

443
00:19:16,420 --> 00:19:21,280
<font color="#CCCCCC">that what we really need there is a</font>

444
00:19:18,400 --> 00:19:24,070
<font color="#E5E5E5">shift file system so the request goes to</font>

445
00:19:21,280 --> 00:19:25,780
<font color="#E5E5E5">the file system</font><font color="#CCCCCC"> the ID is looked up</font><font color="#E5E5E5"> in a</font>

446
00:19:24,070 --> 00:19:27,460
map held in memory<font color="#E5E5E5"> by the file system</font>

447
00:19:25,780 --> 00:19:29,889
and then mapped to the equivalent user

448
00:19:27,460 --> 00:19:31,510
on the host of<font color="#CCCCCC"> course this then becomes</font>

449
00:19:29,890 --> 00:19:33,520
<font color="#E5E5E5">complex if your</font><font color="#CCCCCC"> binds mounted to</font>

450
00:19:31,510 --> 00:19:34,570
multiple places<font color="#E5E5E5"> at the same time</font><font color="#CCCCCC"> and we</font>

451
00:19:33,520 --> 00:19:38,290
start to understand why no one's

452
00:19:34,570 --> 00:19:40,210
<font color="#CCCCCC">actually fixed this so that's</font><font color="#E5E5E5"> probably</font>

453
00:19:38,290 --> 00:19:42,190
five years<font color="#CCCCCC"> away</font><font color="#E5E5E5"> the long and short of</font>

454
00:19:40,210 --> 00:19:44,080
<font color="#CCCCCC">this is that</font><font color="#E5E5E5"> running is</font><font color="#CCCCCC"> roofs and cider</font>

455
00:19:42,190 --> 00:19:45,940
container is running<font color="#CCCCCC"> as root on the</font><font color="#E5E5E5"> host</font>

456
00:19:44,080 --> 00:19:48,449
<font color="#E5E5E5">because there are no user name spaces</font>

457
00:19:45,940 --> 00:19:51,910
that can have<font color="#CCCCCC"> very serious</font><font color="#E5E5E5"> implications</font>

458
00:19:48,450 --> 00:19:53,500
<font color="#CCCCCC">in some situations and if you run</font><font color="#E5E5E5"> an</font>

459
00:19:51,910 --> 00:19:54,760
open shift cluster<font color="#E5E5E5"> the admission</font>

460
00:19:53,500 --> 00:19:57,880
controller will prevent you from running

461
00:19:54,760 --> 00:20:01,120
<font color="#E5E5E5">anything as routes and it also</font><font color="#CCCCCC"> rebind</font><font color="#E5E5E5"> to</font>

462
00:19:57,880 --> 00:20:04,480
<font color="#E5E5E5">a user to an arbitrary plus 30k random</font>

463
00:20:01,120 --> 00:20:06,340
ID<font color="#E5E5E5"> so the even multiple pods starting</font>

464
00:20:04,480 --> 00:20:07,990
with multiple containers sorry

465
00:20:06,340 --> 00:20:09,850
<font color="#E5E5E5">starting</font><font color="#CCCCCC"> somewhat aeneas they're given</font>

466
00:20:07,990 --> 00:20:12,460
different user IDs<font color="#E5E5E5"> to try and</font><font color="#CCCCCC"> work</font>

467
00:20:09,850 --> 00:20:14,290
<font color="#CCCCCC">around this problem slightly a lot of</font>

468
00:20:12,460 --> 00:20:17,110
people find sorry a<font color="#E5E5E5"> lot of people sign</font>

469
00:20:14,290 --> 00:20:19,030
<font color="#E5E5E5">that</font><font color="#CCCCCC"> to</font><font color="#E5E5E5"> user</font><font color="#CCCCCC"> 1,000</font>

470
00:20:17,110 --> 00:20:20,709
probably exists on<font color="#E5E5E5"> your host so you'll</font>

471
00:20:19,030 --> 00:20:23,200
<font color="#CCCCCC">just then inheriting the permissions of</font>

472
00:20:20,710 --> 00:20:27,760
that user<font color="#CCCCCC"> so strongly</font><font color="#E5E5E5"> recommended to go</font>

473
00:20:23,200 --> 00:20:30,450
high and high in random so<font color="#CCCCCC"> resource</font>

474
00:20:27,760 --> 00:20:34,540
<font color="#E5E5E5">linting Gareth odd gasps rush Rhodes</font>

475
00:20:30,450 --> 00:20:36,670
<font color="#E5E5E5">cube test is</font><font color="#CCCCCC"> it's kind of the</font><font color="#E5E5E5"> other</font>

476
00:20:34,540 --> 00:20:38,470
angle it exposes cube nation's resources

477
00:20:36,670 --> 00:20:42,390
<font color="#E5E5E5">and allows you to</font><font color="#CCCCCC"> run</font><font color="#E5E5E5"> a Python</font><font color="#CCCCCC"> desk</font>

478
00:20:38,470 --> 00:20:46,179
<font color="#E5E5E5">dialect called Skylark which is the</font>

479
00:20:42,390 --> 00:20:51,940
<font color="#E5E5E5">anyway against your your kubernetes</font>

480
00:20:46,179 --> 00:20:57,090
resources so deployments as this brave

481
00:20:51,940 --> 00:20:58,890
individual is performing right<font color="#CCCCCC"> so</font>

482
00:20:57,090 --> 00:21:02,918
deployments contain a few<font color="#E5E5E5"> extra things</font>

483
00:20:58,890 --> 00:21:06,220
<font color="#E5E5E5">notably these luminaries if you don't</font>

484
00:21:02,919 --> 00:21:09,190
recognize<font color="#CCCCCC"> the names our</font><font color="#E5E5E5"> core original</font>

485
00:21:06,220 --> 00:21:11,830
kubernetes<font color="#E5E5E5"> either</font><font color="#CCCCCC"> some founders or early</font>

486
00:21:09,190 --> 00:21:13,990
engineers it's all based on the Borg

487
00:21:11,830 --> 00:21:16,330
system from Google which<font color="#E5E5E5"> is aggressive</font>

488
00:21:13,990 --> 00:21:19,210
<font color="#CCCCCC">multi-talented</font><font color="#E5E5E5"> with containers all</font><font color="#CCCCCC"> moved</font>

489
00:21:16,330 --> 00:21:20,559
to<font color="#CCCCCC"> a mega which was Borg b2 they learnt</font>

490
00:21:19,210 --> 00:21:22,660
things they were all the changes back

491
00:21:20,559 --> 00:21:26,770
and they've reintegrated them into Borg

492
00:21:22,660 --> 00:21:28,510
<font color="#E5E5E5">and most notably labels so of course</font>

493
00:21:26,770 --> 00:21:31,299
these other<font color="#E5E5E5"> things as well but labels</font>

494
00:21:28,510 --> 00:21:32,950
are our secret sauce<font color="#CCCCCC"> and kubernetes</font><font color="#E5E5E5"> now</font>

495
00:21:31,299 --> 00:21:34,780
it<font color="#E5E5E5"> sounds super boring they're just</font>

496
00:21:32,950 --> 00:21:39,910
<font color="#E5E5E5">metadata annotations like why would</font><font color="#CCCCCC"> you</font>

497
00:21:34,780 --> 00:21:41,428
give two hoots<font color="#E5E5E5"> they are a fundamental</font>

498
00:21:39,910 --> 00:21:43,690
security primitive in kubernetes

499
00:21:41,429 --> 00:21:46,210
everything everything is addressed<font color="#E5E5E5"> by</font>

500
00:21:43,690 --> 00:21:48,280
label selectors a lot of things that<font color="#E5E5E5"> are</font>

501
00:21:46,210 --> 00:21:52,690
addressed by label selectors that<font color="#CCCCCC"> are</font>

502
00:21:48,280 --> 00:21:56,139
used to reconcile<font color="#E5E5E5"> a pod or a</font><font color="#CCCCCC"> resources</font>

503
00:21:52,690 --> 00:21:59,620
defined behavior<font color="#E5E5E5"> with its targets these</font>

504
00:21:56,140 --> 00:22:01,120
are not validated<font color="#E5E5E5"> ever ever at all full</font>

505
00:21:59,620 --> 00:22:03,820
stop triple golden bags there's no

506
00:22:01,120 --> 00:22:05,830
returns<font color="#CCCCCC"> they are such a frequent point</font>

507
00:22:03,820 --> 00:22:07,540
of<font color="#E5E5E5"> debugging pain and security</font>

508
00:22:05,830 --> 00:22:10,860
vulnerabilities<font color="#CCCCCC"> you make a typo</font><font color="#E5E5E5"> in a</font>

509
00:22:07,540 --> 00:22:13,240
label<font color="#CCCCCC"> so by extension static analysis on</font>

510
00:22:10,860 --> 00:22:15,879
the actual resources<font color="#E5E5E5"> that are submitted</font>

511
00:22:13,240 --> 00:22:17,770
to<font color="#E5E5E5"> the pod absolutely paramount</font><font color="#CCCCCC"> there</font>

512
00:22:15,880 --> 00:22:20,950
are other<font color="#CCCCCC"> patterns like get ops</font><font color="#E5E5E5"> which is</font>

513
00:22:17,770 --> 00:22:23,700
emerging which is essentially committing

514
00:22:20,950 --> 00:22:26,169
your cluster state<font color="#E5E5E5"> to a git repository</font>

515
00:22:23,700 --> 00:22:29,050
<font color="#E5E5E5">we actually layer multiple levels of</font>

516
00:22:26,169 --> 00:22:30,540
controls on<font color="#CCCCCC"> top of that</font><font color="#E5E5E5"> for source code</font>

517
00:22:29,050 --> 00:22:34,260
<font color="#E5E5E5">safety and</font>

518
00:22:30,540 --> 00:22:36,300
rusty<font color="#CCCCCC"> for eyes on every pull request and</font>

519
00:22:34,260 --> 00:22:37,980
static analysis on everything there<font color="#CCCCCC"> and</font>

520
00:22:36,300 --> 00:22:40,169
then the cluster reaches out<font color="#CCCCCC"> to that git</font>

521
00:22:37,980 --> 00:22:42,240
repo to pull its configuration<font color="#E5E5E5"> back in</font>

522
00:22:40,170 --> 00:22:44,160
so no one<font color="#E5E5E5"> actually has bright access to</font>

523
00:22:42,240 --> 00:22:45,690
the cluster and then it asserts<font color="#CCCCCC"> its</font>

524
00:22:44,160 --> 00:22:50,130
<font color="#CCCCCC">state and unifies the state with that</font>

525
00:22:45,690 --> 00:22:51,630
<font color="#E5E5E5">desired state in the git</font><font color="#CCCCCC"> repo</font><font color="#E5E5E5"> that's</font><font color="#CCCCCC"> a</font>

526
00:22:50,130 --> 00:22:54,240
good place to<font color="#CCCCCC"> check for labels going</font>

527
00:22:51,630 --> 00:22:56,370
wrong services<font color="#E5E5E5"> also use labels to</font>

528
00:22:54,240 --> 00:22:57,900
address the pods behind them<font color="#E5E5E5"> and they're</font>

529
00:22:56,370 --> 00:23:02,729
quite<font color="#E5E5E5"> an oculist it's not a lot going</font><font color="#CCCCCC"> on</font>

530
00:22:57,900 --> 00:23:04,860
there they're essentially<font color="#E5E5E5"> just a virtual</font>

531
00:23:02,730 --> 00:23:07,260
IP that will redirect traffic to<font color="#E5E5E5"> where</font>

532
00:23:04,860 --> 00:23:09,780
needs to go<font color="#E5E5E5"> but the one benefit they</font>

533
00:23:07,260 --> 00:23:11,580
have we don't want to run as roots in

534
00:23:09,780 --> 00:23:12,810
our containers<font color="#CCCCCC"> if we run a</font><font color="#E5E5E5"> web server</font>

535
00:23:11,580 --> 00:23:15,000
<font color="#E5E5E5">we're probably used to binding through</font>

536
00:23:12,810 --> 00:23:16,919
<font color="#E5E5E5">ATM for</font><font color="#CCCCCC"> four three if you look at Apache</font>

537
00:23:15,000 --> 00:23:18,510
<font color="#CCCCCC">nginx</font><font color="#E5E5E5"> they will start this route and</font>

538
00:23:16,920 --> 00:23:21,390
then drop privileges for their<font color="#E5E5E5"> Forks</font>

539
00:23:18,510 --> 00:23:23,820
<font color="#E5E5E5">children so they're not running the</font>

540
00:23:21,390 --> 00:23:25,260
<font color="#CCCCCC">actual web server process at sorry</font>

541
00:23:23,820 --> 00:23:28,260
anything<font color="#E5E5E5"> but the web server process only</font>

542
00:23:25,260 --> 00:23:29,640
<font color="#E5E5E5">the workers are running its routes that</font>

543
00:23:28,260 --> 00:23:32,580
is not a nice pattern<font color="#E5E5E5"> in containers so</font>

544
00:23:29,640 --> 00:23:35,370
<font color="#CCCCCC">what we can do here is remap ports from</font>

545
00:23:32,580 --> 00:23:37,470
say<font color="#CCCCCC"> 8 4 4 3</font><font color="#E5E5E5"> so we've built a container</font>

546
00:23:35,370 --> 00:23:39,600
<font color="#E5E5E5">we would run it as non routes have it</font>

547
00:23:37,470 --> 00:23:41,100
bind to<font color="#E5E5E5"> those very high ports which</font>

548
00:23:39,600 --> 00:23:45,780
don't<font color="#CCCCCC"> require a capped net</font><font color="#E5E5E5"> by in the</font>

549
00:23:41,100 --> 00:23:47,639
admin<font color="#E5E5E5"> and then we use a service to</font>

550
00:23:45,780 --> 00:23:49,980
<font color="#E5E5E5">essentially act as a shim</font><font color="#CCCCCC"> as</font><font color="#E5E5E5"> a</font>

551
00:23:47,640 --> 00:23:52,890
translation layer to the service<font color="#E5E5E5"> receive</font>

552
00:23:49,980 --> 00:23:55,620
requests<font color="#CCCCCC"> from</font><font color="#E5E5E5"> 443 because that's a</font>

553
00:23:52,890 --> 00:23:56,970
command<font color="#E5E5E5"> to the key proxy the</font><font color="#CCCCCC"> API server</font>

554
00:23:55,620 --> 00:23:58,439
which is configuring<font color="#E5E5E5"> to</font><font color="#CCCCCC"> keep proxy which</font>

555
00:23:56,970 --> 00:24:02,430
is<font color="#E5E5E5"> already running his routes and has</font>

556
00:23:58,440 --> 00:24:03,900
these<font color="#CCCCCC"> network mutation privileges but in</font>

557
00:24:02,430 --> 00:24:07,140
the container we<font color="#CCCCCC"> can run as non-root</font>

558
00:24:03,900 --> 00:24:10,070
user and avoid a layer of<font color="#CCCCCC"> insecurity</font>

559
00:24:07,140 --> 00:24:12,240
<font color="#E5E5E5">that would result in the event of an RTE</font>

560
00:24:10,070 --> 00:24:14,939
service<font color="#E5E5E5"> accounts spoke about these</font>

561
00:24:12,240 --> 00:24:18,660
briefly by default<font color="#E5E5E5"> they were mounted</font>

562
00:24:14,940 --> 00:24:23,490
<font color="#E5E5E5">into all containers as as privileged and</font>

563
00:24:18,660 --> 00:24:30,270
as such should be audited and yeah

564
00:24:23,490 --> 00:24:32,190
<font color="#CCCCCC">double checked let's say excuse me</font>

565
00:24:30,270 --> 00:24:34,980
<font color="#CCCCCC">I</font><font color="#E5E5E5"> love admission controllers these</font>

566
00:24:32,190 --> 00:24:37,350
things are awesome<font color="#E5E5E5"> this is again it's</font>

567
00:24:34,980 --> 00:24:40,170
very<font color="#E5E5E5"> simple the way you get a pod into</font>

568
00:24:37,350 --> 00:24:41,669
<font color="#CCCCCC">xcd where it can then be looked at by</font>

569
00:24:40,170 --> 00:24:43,800
<font color="#E5E5E5">the controller manager in the scheduler</font>

570
00:24:41,670 --> 00:24:44,310
<font color="#E5E5E5">is through the API server single point</font>

571
00:24:43,800 --> 00:24:46,520
of entry

572
00:24:44,310 --> 00:24:49,200
for all<font color="#E5E5E5"> that information and we</font>

573
00:24:46,520 --> 00:24:52,290
<font color="#E5E5E5">authenticate and authorize our user we</font>

574
00:24:49,200 --> 00:24:53,760
mutate<font color="#E5E5E5"> the resource itself which might</font>

575
00:24:52,290 --> 00:24:55,170
include<font color="#E5E5E5"> something like adding a default</font>

576
00:24:53,760 --> 00:24:58,140
service account<font color="#E5E5E5"> or making</font><font color="#CCCCCC"> sure that</font>

577
00:24:55,170 --> 00:24:59,280
specific labels are added or maybe

578
00:24:58,140 --> 00:25:01,530
putting the time of the<font color="#CCCCCC"> deployment</font>

579
00:24:59,280 --> 00:25:02,820
actually is one<font color="#E5E5E5"> of them and then then we</font>

580
00:25:01,530 --> 00:25:04,710
validate the schema to make sure<font color="#E5E5E5"> we</font>

581
00:25:02,820 --> 00:25:06,600
haven't<font color="#CCCCCC"> booked anything in our mutation</font>

582
00:25:04,710 --> 00:25:08,520
step and then finally we validate the

583
00:25:06,600 --> 00:25:10,169
admission controller<font color="#E5E5E5"> that where that is</font>

584
00:25:08,520 --> 00:25:12,270
where<font color="#CCCCCC"> for example the pod security</font>

585
00:25:10,170 --> 00:25:13,440
policy comes in and says well you've

586
00:25:12,270 --> 00:25:15,180
tried to<font color="#E5E5E5"> submit something which is</font>

587
00:25:13,440 --> 00:25:18,030
<font color="#E5E5E5">running as a root user or you've tried</font>

588
00:25:15,180 --> 00:25:19,470
to break out<font color="#CCCCCC"> of network</font><font color="#E5E5E5"> you</font><font color="#CCCCCC"> first</font><font color="#E5E5E5"> set</font>

589
00:25:18,030 --> 00:25:22,440
the boolean<font color="#E5E5E5"> to true for the network</font>

590
00:25:19,470 --> 00:25:24,660
<font color="#CCCCCC">namespace with the</font><font color="#E5E5E5"> host</font><font color="#CCCCCC"> I'm afraid I</font>

591
00:25:22,440 --> 00:25:26,370
can't do<font color="#CCCCCC"> that and and you'll be denied</font>

592
00:25:24,660 --> 00:25:29,190
at that stage<font color="#E5E5E5"> all those past and we</font>

593
00:25:26,370 --> 00:25:32,580
persist<font color="#E5E5E5"> at CD admission controllers are</font>

594
00:25:29,190 --> 00:25:35,670
the<font color="#E5E5E5"> root of the staff analysis that</font>

595
00:25:32,580 --> 00:25:37,800
kubernetes does we have a new extensible

596
00:25:35,670 --> 00:25:40,050
web hook admission controller so<font color="#E5E5E5"> we can</font>

597
00:25:37,800 --> 00:25:42,060
put arbitrary<font color="#E5E5E5"> functions on the end of</font>

598
00:25:40,050 --> 00:25:44,220
those<font color="#E5E5E5"> they include things like twist</font>

599
00:25:42,060 --> 00:25:46,440
lock an acro which will<font color="#CCCCCC"> perform</font><font color="#E5E5E5"> image</font>

600
00:25:44,220 --> 00:25:48,330
vulnerability scanning from<font color="#CCCCCC"> CDE feeds</font>

601
00:25:46,440 --> 00:25:50,580
from repository<font color="#E5E5E5"> package maintainer</font><font color="#CCCCCC"> z'</font>

602
00:25:48,330 --> 00:25:52,679
<font color="#CCCCCC">and we submit the pod manifest to</font><font color="#E5E5E5"> them</font>

603
00:25:50,580 --> 00:25:56,730
they validate whether the<font color="#E5E5E5"> image that</font>

604
00:25:52,680 --> 00:25:58,200
we've passed is compliant by<font color="#E5E5E5"> whatever we</font>

605
00:25:56,730 --> 00:26:02,730
have configured in those<font color="#E5E5E5"> systems and</font>

606
00:25:58,200 --> 00:26:05,220
then permit<font color="#E5E5E5"> or deny that pod into</font><font color="#CCCCCC"> the</font>

607
00:26:02,730 --> 00:26:07,590
cluster<font color="#CCCCCC"> supercool loads of</font><font color="#E5E5E5"> things that</font>

608
00:26:05,220 --> 00:26:08,670
<font color="#E5E5E5">we can do in there the web</font><font color="#CCCCCC"> bugs</font><font color="#E5E5E5"> are</font>

609
00:26:07,590 --> 00:26:09,899
actually a bit<font color="#CCCCCC"> difficult to write</font>

610
00:26:08,670 --> 00:26:11,550
because<font color="#E5E5E5"> they're very opinionated and</font>

611
00:26:09,900 --> 00:26:14,610
<font color="#E5E5E5">require</font><font color="#CCCCCC"> you to encode</font><font color="#E5E5E5"> the public portion</font>

612
00:26:11,550 --> 00:26:18,899
<font color="#E5E5E5">of</font><font color="#CCCCCC"> a SAN</font><font color="#E5E5E5"> sorry of the the key that</font>

613
00:26:14,610 --> 00:26:21,149
<font color="#E5E5E5">you're using</font><font color="#CCCCCC"> TLS</font><font color="#E5E5E5"> exchange into the web</font>

614
00:26:18,900 --> 00:26:23,760
manifest<font color="#CCCCCC"> as you deploy it</font><font color="#E5E5E5"> but I think</font>

615
00:26:21,150 --> 00:26:28,050
super paranoid<font color="#CCCCCC"> it's a good thing so</font>

616
00:26:23,760 --> 00:26:29,790
cubelet config<font color="#E5E5E5"> these are not cuba config</font>

617
00:26:28,050 --> 00:26:31,340
these are more<font color="#E5E5E5"> api server admission</font>

618
00:26:29,790 --> 00:26:34,290
<font color="#E5E5E5">controllers</font>

619
00:26:31,340 --> 00:26:35,730
order really matters here if<font color="#E5E5E5"> you change</font>

620
00:26:34,290 --> 00:26:36,360
<font color="#E5E5E5">the order you will change what cascades</font>

621
00:26:35,730 --> 00:26:38,880
from one to the other

622
00:26:36,360 --> 00:26:40,909
they're run sequentially<font color="#E5E5E5"> there's lots of</font>

623
00:26:38,880 --> 00:26:45,060
information<font color="#E5E5E5"> here</font><font color="#CCCCCC"> that I</font><font color="#E5E5E5"> will not go into</font>

624
00:26:40,910 --> 00:26:47,460
in any depth due to the time but image

625
00:26:45,060 --> 00:26:49,560
policy<font color="#E5E5E5"> as I've spoken about denying</font>

626
00:26:47,460 --> 00:26:51,270
escalating execution means that if

627
00:26:49,560 --> 00:26:53,190
you're running<font color="#E5E5E5"> pod is privileged you do</font>

628
00:26:51,270 --> 00:26:57,299
not want the user to attach to it

629
00:26:53,190 --> 00:27:00,239
<font color="#CCCCCC">remotely because of course they have</font>

630
00:26:57,299 --> 00:27:02,720
that is a<font color="#CCCCCC"> privileged pod</font><font color="#E5E5E5"> and you're</font>

631
00:27:00,239 --> 00:27:04,320
essentially<font color="#CCCCCC"> routing the hosts</font><font color="#E5E5E5"> just with</font>

632
00:27:02,720 --> 00:27:08,820
opening a<font color="#E5E5E5"> WebSocket</font>

633
00:27:04,320 --> 00:27:11,939
to that to that<font color="#CCCCCC"> pod</font><font color="#E5E5E5"> limit Ranger is the</font>

634
00:27:08,820 --> 00:27:14,158
way that we permits namespaces to have a

635
00:27:11,940 --> 00:27:16,980
certain<font color="#CCCCCC"> number of resources so it's</font><font color="#E5E5E5"> C</font>

636
00:27:14,159 --> 00:27:21,149
<font color="#CCCCCC">group based CPU and memory allocation</font>

637
00:27:16,980 --> 00:27:23,100
<font color="#E5E5E5">and resource accounting super</font><font color="#CCCCCC"> useful to</font>

638
00:27:21,149 --> 00:27:25,080
apply<font color="#CCCCCC"> to namespaces which name spaces</font>

639
00:27:23,100 --> 00:27:26,969
are the the logical mapping for our

640
00:27:25,080 --> 00:27:28,918
applications<font color="#E5E5E5"> people leave them in a lot</font>

641
00:27:26,970 --> 00:27:30,450
<font color="#CCCCCC">of</font><font color="#E5E5E5"> different ways I've seen deployments</font>

642
00:27:28,919 --> 00:27:33,090
where namespaces are<font color="#E5E5E5"> around single</font>

643
00:27:30,450 --> 00:27:35,759
single<font color="#E5E5E5"> scaling entities</font><font color="#CCCCCC"> I think has been</font>

644
00:27:33,090 --> 00:27:39,389
<font color="#E5E5E5">insane frankly and for a logical</font>

645
00:27:35,759 --> 00:27:41,999
grouping of similar concerns<font color="#CCCCCC"> namespaces</font>

646
00:27:39,389 --> 00:27:45,238
are also<font color="#E5E5E5"> where we hang our network</font>

647
00:27:41,999 --> 00:27:47,549
policies which are<font color="#E5E5E5"> cloud native dynamic</font>

648
00:27:45,239 --> 00:27:50,519
firewalls essentially and<font color="#CCCCCC"> there's always</font>

649
00:27:47,549 --> 00:27:52,559
<font color="#E5E5E5">quota</font><font color="#CCCCCC"> it's same at the previous node</font>

650
00:27:50,519 --> 00:27:55,259
restriction is super cool but an example

651
00:27:52,559 --> 00:27:59,158
of how complex this<font color="#E5E5E5"> whole fluster</font><font color="#CCCCCC"> clock</font>

652
00:27:55,259 --> 00:28:02,759
<font color="#E5E5E5">is this prevents pods from requesting</font>

653
00:27:59,159 --> 00:28:04,470
secrets for sorry it prevents cubelets

654
00:28:02,759 --> 00:28:09,559
from requesting secrets for pods<font color="#E5E5E5"> that</font>

655
00:28:04,470 --> 00:28:12,960
they do not<font color="#E5E5E5"> have running locally so</font><font color="#CCCCCC"> by</font>

656
00:28:09,559 --> 00:28:15,809
induction<font color="#CCCCCC"> of course we can you</font><font color="#E5E5E5"> can see</font>

657
00:28:12,960 --> 00:28:17,909
that<font color="#CCCCCC"> a cubelet can request to anything</font>

658
00:28:15,809 --> 00:28:20,178
it can request any secret<font color="#E5E5E5"> so access</font><font color="#CCCCCC"> to a</font>

659
00:28:17,909 --> 00:28:22,409
cubelet<font color="#E5E5E5"> which is an agent on a node</font>

660
00:28:20,179 --> 00:28:24,149
means that you can request secrets from

661
00:28:22,409 --> 00:28:26,399
<font color="#E5E5E5">the cluster and those secrets in a lot</font>

662
00:28:24,149 --> 00:28:27,959
<font color="#CCCCCC">of cases actually cryptograph</font><font color="#E5E5E5"> jacking in</font>

663
00:28:26,399 --> 00:28:32,309
cases contain

664
00:28:27,960 --> 00:28:34,470
AWS keys that<font color="#E5E5E5"> contain the the root</font><font color="#CCCCCC"> CAS</font>

665
00:28:32,309 --> 00:28:37,619
for<font color="#CCCCCC"> the</font><font color="#E5E5E5"> cluster they contain joining</font>

666
00:28:34,470 --> 00:28:41,909
tokens for dynamic<font color="#E5E5E5"> scaling systems like</font>

667
00:28:37,619 --> 00:28:44,609
cube<font color="#CCCCCC"> ADM this</font><font color="#E5E5E5"> is very useful to run</font>

668
00:28:41,909 --> 00:28:47,129
these are the default permissions that<font color="#E5E5E5"> a</font>

669
00:28:44,609 --> 00:28:52,158
node has and as you can<font color="#CCCCCC"> see it can</font><font color="#E5E5E5"> do</font><font color="#CCCCCC"> a</font>

670
00:28:47,129 --> 00:28:55,439
<font color="#E5E5E5">lot of things and no restriction finally</font>

671
00:28:52,159 --> 00:28:56,580
has to run in tandem with<font color="#E5E5E5"> the previous</font>

672
00:28:55,440 --> 00:28:59,039
<font color="#E5E5E5">mission controller to actually have to</font>

673
00:28:56,580 --> 00:29:00,418
make any<font color="#E5E5E5"> sense</font><font color="#CCCCCC"> I hope</font><font color="#E5E5E5"> you're starting to</font>

674
00:28:59,039 --> 00:29:02,908
understand why I'm such a strong

675
00:29:00,419 --> 00:29:04,980
advocate of continuous assertions and

676
00:29:02,909 --> 00:29:08,040
pipeline driven deployments and security

677
00:29:04,980 --> 00:29:10,950
for this stuff because it<font color="#E5E5E5"> is very</font>

678
00:29:08,040 --> 00:29:12,750
<font color="#E5E5E5">Brod I'd say so</font>

679
00:29:10,950 --> 00:29:14,940
<font color="#E5E5E5">the pod security policy as I said it's</font>

680
00:29:12,750 --> 00:29:17,670
also just an admission controller<font color="#E5E5E5"> it's</font>

681
00:29:14,940 --> 00:29:21,480
static and static analysis on<font color="#E5E5E5"> on this</font>

682
00:29:17,670 --> 00:29:23,640
pods<font color="#E5E5E5"> and one should</font><font color="#CCCCCC"> absolutely always</font><font color="#E5E5E5"> be</font>

683
00:29:21,480 --> 00:29:25,080
<font color="#CCCCCC">running</font><font color="#E5E5E5"> a pod security policy</font><font color="#CCCCCC"> you can</font>

684
00:29:23,640 --> 00:29:27,140
hang<font color="#E5E5E5"> them on a</font><font color="#CCCCCC"> namespace so you can run</font>

685
00:29:25,080 --> 00:29:29,460
different levels for<font color="#CCCCCC"> different workloads</font>

686
00:29:27,140 --> 00:29:31,260
<font color="#E5E5E5">service accounts are mounted and by</font>

687
00:29:29,460 --> 00:29:33,630
default<font color="#CCCCCC"> you may</font><font color="#E5E5E5"> not want that more</font>

688
00:29:31,260 --> 00:29:34,860
information<font color="#E5E5E5"> is available and of course</font>

689
00:29:33,630 --> 00:29:37,980
we have the validating admission

690
00:29:34,860 --> 00:29:40,500
<font color="#CCCCCC">webhooks which means that we can</font><font color="#E5E5E5"> apply</font>

691
00:29:37,980 --> 00:29:41,790
our<font color="#E5E5E5"> own arbitrary security gates to</font><font color="#CCCCCC"> the</font>

692
00:29:40,500 --> 00:29:43,950
<font color="#E5E5E5">hosted and managed kubernetes</font>

693
00:29:41,790 --> 00:29:46,980
distributions which generally pretty

694
00:29:43,950 --> 00:29:50,010
awesome eks is very new<font color="#E5E5E5"> so I would not</font>

695
00:29:46,980 --> 00:29:53,040
apply the same<font color="#CCCCCC"> awesomeness</font><font color="#E5E5E5"> to it just</font>

696
00:29:50,010 --> 00:29:56,100
<font color="#E5E5E5">yet more stuff there about how to</font><font color="#CCCCCC"> writes</font>

697
00:29:53,040 --> 00:29:59,730
these<font color="#E5E5E5"> things</font><font color="#CCCCCC"> okay this is</font><font color="#E5E5E5"> about</font>

698
00:29:56,100 --> 00:30:01,230
encryption<font color="#E5E5E5"> on</font><font color="#CCCCCC"> at CD you need to enable</font>

699
00:29:59,730 --> 00:30:03,840
this experimental encryption provider

700
00:30:01,230 --> 00:30:06,120
config<font color="#E5E5E5"> on the API server and then</font>

701
00:30:03,840 --> 00:30:08,459
provide<font color="#CCCCCC"> it a symmetric key</font><font color="#E5E5E5"> in order</font><font color="#CCCCCC"> for</font>

702
00:30:06,120 --> 00:30:10,790
it to transparently encrypt the keys and

703
00:30:08,460 --> 00:30:15,840
values for<font color="#CCCCCC"> what it's writing</font><font color="#E5E5E5"> into</font><font color="#CCCCCC"> xcd</font>

704
00:30:10,790 --> 00:30:18,080
now this means<font color="#CCCCCC"> that ultimately without</font>

705
00:30:15,840 --> 00:30:20,760
this what goes into<font color="#CCCCCC"> XE d is plain</font><font color="#E5E5E5"> text</font>

706
00:30:18,080 --> 00:30:23,100
these<font color="#E5E5E5"> are also in he's</font><font color="#CCCCCC"> rotating manually</font>

707
00:30:20,760 --> 00:30:26,490
<font color="#E5E5E5">at this point in time this only landed</font>

708
00:30:23,100 --> 00:30:29,699
<font color="#E5E5E5">what</font><font color="#CCCCCC"> every</font><font color="#E5E5E5"> 120 1708 recently before that</font>

709
00:30:26,490 --> 00:30:31,860
secrets well in fact they<font color="#CCCCCC"> still are but</font>

710
00:30:29,700 --> 00:30:35,100
<font color="#CCCCCC">before that secrets for base64 encoded</font>

711
00:30:31,860 --> 00:30:37,500
and pushed into<font color="#CCCCCC"> XE d so again not a good</font>

712
00:30:35,100 --> 00:30:40,129
<font color="#E5E5E5">story on</font><font color="#CCCCCC"> security features but of course</font>

713
00:30:37,500 --> 00:30:44,760
the<font color="#CCCCCC"> project has vindicated</font><font color="#E5E5E5"> itself with</font>

714
00:30:40,130 --> 00:30:47,580
an insane level<font color="#E5E5E5"> of adoption plenty more</font>

715
00:30:44,760 --> 00:30:51,379
stuff<font color="#E5E5E5"> there all good</font><font color="#CCCCCC"> sealed secrets at</font>

716
00:30:47,580 --> 00:30:54,750
<font color="#E5E5E5">the bottom is notable that runs its own</font>

717
00:30:51,380 --> 00:30:57,240
it runs a pod inside<font color="#E5E5E5"> a namespace so you</font>

718
00:30:54,750 --> 00:30:59,670
can use the key<font color="#E5E5E5"> that you share</font><font color="#CCCCCC"> with</font><font color="#E5E5E5"> that</font>

719
00:30:57,240 --> 00:31:01,740
sealed<font color="#E5E5E5"> secrets instance to encrypt your</font>

720
00:30:59,670 --> 00:31:03,810
<font color="#CCCCCC">secrets you can write just the values</font>

721
00:31:01,740 --> 00:31:05,520
encrypted into<font color="#E5E5E5"> a gift ops repo so</font>

722
00:31:03,810 --> 00:31:07,860
maintaining<font color="#E5E5E5"> this full everything</font><font color="#CCCCCC"> is</font>

723
00:31:05,520 --> 00:31:09,690
<font color="#CCCCCC">codes when that hits the cluster</font><font color="#E5E5E5"> then</font>

724
00:31:07,860 --> 00:31:11,340
the sealed secret is a special custom

725
00:31:09,690 --> 00:31:14,130
resource definition that is watched for

726
00:31:11,340 --> 00:31:16,679
by sealed secrets decrypted in cluster

727
00:31:14,130 --> 00:31:18,210
and written back as an actual secret<font color="#E5E5E5"> so</font>

728
00:31:16,680 --> 00:31:20,250
<font color="#E5E5E5">that</font><font color="#CCCCCC"> ensures that we</font><font color="#E5E5E5"> not only have</font>

729
00:31:18,210 --> 00:31:21,389
<font color="#CCCCCC">secure transports of those secrets enter</font>

730
00:31:20,250 --> 00:31:22,709
the cluster

731
00:31:21,389 --> 00:31:24,449
<font color="#E5E5E5">it means again</font><font color="#CCCCCC"> that we don't</font><font color="#E5E5E5"> have right</font>

732
00:31:22,709 --> 00:31:29,700
access to<font color="#CCCCCC"> the cluster</font><font color="#E5E5E5"> and it means that</font>

733
00:31:24,450 --> 00:31:32,129
<font color="#E5E5E5">in case of disaster or maliciousness</font><font color="#CCCCCC"> we</font>

734
00:31:29,700 --> 00:31:33,839
can rebuild<font color="#E5E5E5"> the entire application like</font>

735
00:31:32,129 --> 00:31:35,509
<font color="#CCCCCC">that of</font><font color="#E5E5E5"> course depending on what it is</font>

736
00:31:33,839 --> 00:31:38,700
<font color="#E5E5E5">you may want to rotate your keys anyway</font>

737
00:31:35,509 --> 00:31:42,509
<font color="#E5E5E5">token request API again super awesome</font>

738
00:31:38,700 --> 00:31:44,609
basically this is the problem<font color="#E5E5E5"> with</font><font color="#CCCCCC"> jobs</font>

739
00:31:42,509 --> 00:31:46,200
<font color="#E5E5E5">as we know is not</font><font color="#CCCCCC"> a</font><font color="#E5E5E5"> rotation</font><font color="#CCCCCC"> on every</font>

740
00:31:44,609 --> 00:31:49,139
<font color="#CCCCCC">request otherwise we are subject to</font>

741
00:31:46,200 --> 00:31:51,929
replays<font color="#E5E5E5"> token requests is how not to be</font>

742
00:31:49,139 --> 00:31:53,488
subject to replay attacks and<font color="#CCCCCC"> compliant</font>

743
00:31:51,929 --> 00:31:56,820
scanning<font color="#CCCCCC"> there's</font><font color="#E5E5E5"> lots of stuff here if</font>

744
00:31:53,489 --> 00:31:57,839
we want our clusters again to be if you

745
00:31:56,820 --> 00:31:59,908
always<font color="#E5E5E5"> want to know the state</font><font color="#CCCCCC"> of</font><font color="#E5E5E5"> these</font>

746
00:31:57,839 --> 00:32:03,059
<font color="#E5E5E5">clusters then strongly recommend running</font>

747
00:31:59,909 --> 00:32:04,469
<font color="#E5E5E5">these</font><font color="#CCCCCC"> cos benchmarks that have</font><font color="#E5E5E5"> run them</font>

748
00:32:03,059 --> 00:32:07,158
are<font color="#E5E5E5"> always very difficult to get</font><font color="#CCCCCC"> a</font>

749
00:32:04,469 --> 00:32:10,139
hundred<font color="#E5E5E5"> percent on but well worth it and</font>

750
00:32:07,159 --> 00:32:13,799
yeah lots of good stuff<font color="#CCCCCC"> that every</font>

751
00:32:10,139 --> 00:32:15,718
scanning<font color="#E5E5E5"> some of this is</font><font color="#CCCCCC"> open-source in</font>

752
00:32:13,799 --> 00:32:18,209
fact all of<font color="#E5E5E5"> this is open</font><font color="#CCCCCC"> source</font><font color="#E5E5E5"> the the</font>

753
00:32:15,719 --> 00:32:20,190
<font color="#E5E5E5">plow integration is a hundred percent</font>

754
00:32:18,209 --> 00:32:22,379
recommended in<font color="#E5E5E5"> order to use Clare</font>

755
00:32:20,190 --> 00:32:25,259
because Clara<font color="#CCCCCC"> quasi to post each image</font>

756
00:32:22,379 --> 00:32:28,918
<font color="#E5E5E5">of your each layer of</font><font color="#CCCCCC"> the</font><font color="#E5E5E5"> docket image</font>

757
00:32:25,259 --> 00:32:31,529
to the HTTP server<font color="#E5E5E5"> hang around for a bit</font>

758
00:32:28,919 --> 00:32:36,089
<font color="#CCCCCC">post</font><font color="#E5E5E5"> the next one so</font><font color="#CCCCCC"> cloud just wraps</font>

759
00:32:31,529 --> 00:32:39,570
that<font color="#E5E5E5"> all up super nice and gives you the</font>

760
00:32:36,089 --> 00:32:42,678
<font color="#E5E5E5">same</font><font color="#CCCCCC"> CVE vulnerability analysis feed is</font>

761
00:32:39,570 --> 00:32:44,999
used as it's used by the<font color="#E5E5E5"> most products</font>

762
00:32:42,679 --> 00:32:46,979
and the docker hub<font color="#E5E5E5"> notably his</font>

763
00:32:44,999 --> 00:32:50,070
<font color="#E5E5E5">deprecated its use of this in fact it's</font>

764
00:32:46,979 --> 00:32:52,409
now removed<font color="#E5E5E5"> so at this stage we want to</font>

765
00:32:50,070 --> 00:32:54,149
secure some networking<font color="#CCCCCC"> this is broadly</font>

766
00:32:52,409 --> 00:32:56,339
what the life of a packet looks like

767
00:32:54,149 --> 00:32:57,958
between<font color="#CCCCCC"> two nodes my</font><font color="#E5E5E5"> strongest</font>

768
00:32:56,339 --> 00:32:59,339
recommendation if you're thinking of

769
00:32:57,959 --> 00:33:01,559
<font color="#CCCCCC">running cuban that is is</font><font color="#E5E5E5"> to choose</font>

770
00:32:59,339 --> 00:33:04,499
container network interface<font color="#E5E5E5"> plugin</font><font color="#CCCCCC"> that</font>

771
00:33:01,559 --> 00:33:08,519
you are<font color="#CCCCCC"> ok with already</font><font color="#E5E5E5"> because we have</font>

772
00:33:04,499 --> 00:33:10,979
everything from VLAN through like pure

773
00:33:08,519 --> 00:33:14,609
<font color="#CCCCCC">ethernet</font><font color="#E5E5E5"> bgp implementations got a</font>

774
00:33:10,979 --> 00:33:16,919
calculation layers<font color="#CCCCCC"> 4 and 7</font><font color="#E5E5E5"> various other</font>

775
00:33:14,609 --> 00:33:18,689
<font color="#CCCCCC">jiggery-pokery and everything that we do</font>

776
00:33:16,919 --> 00:33:21,089
is dependent<font color="#E5E5E5"> upon the inter pod</font>

777
00:33:18,690 --> 00:33:23,369
communication the deployment model<font color="#CCCCCC"> of</font>

778
00:33:21,089 --> 00:33:26,369
kubernetes is flat it's meant<font color="#E5E5E5"> to mimic</font>

779
00:33:23,369 --> 00:33:28,738
<font color="#E5E5E5">VMs and be easy to migrate VMs</font><font color="#CCCCCC"> onto so</font>

780
00:33:26,369 --> 00:33:31,399
all<font color="#CCCCCC"> note all pods must be able</font><font color="#E5E5E5"> to</font>

781
00:33:28,739 --> 00:33:34,870
address<font color="#E5E5E5"> all other pods on a network</font>

782
00:33:31,399 --> 00:33:36,610
point here is it is

783
00:33:34,870 --> 00:33:38,649
but we have never<font color="#CCCCCC"> a policy to save us</font>

784
00:33:36,610 --> 00:33:41,020
<font color="#E5E5E5">you must</font><font color="#CCCCCC"> be</font><font color="#E5E5E5"> running one</font><font color="#CCCCCC"> of the plugins</font>

785
00:33:38,650 --> 00:33:45,280
<font color="#CCCCCC">that supports network policy in order to</font>

786
00:33:41,020 --> 00:33:48,210
use network policy<font color="#E5E5E5"> this</font><font color="#CCCCCC"> is</font><font color="#E5E5E5"> interesting</font>

787
00:33:45,280 --> 00:33:50,860
this so missing a slide<font color="#E5E5E5"> yeah anyway so</font>

788
00:33:48,210 --> 00:33:54,030
<font color="#E5E5E5">we've</font><font color="#CCCCCC"> net very</font><font color="#E5E5E5"> strongly recommended team</font>

789
00:33:50,860 --> 00:33:57,370
in London<font color="#CCCCCC"> who built the original</font>

790
00:33:54,030 --> 00:33:59,080
<font color="#E5E5E5">encrypted overlay for docker</font><font color="#CCCCCC"> they are</font>

791
00:33:57,370 --> 00:34:00,340
now ultimately going<font color="#E5E5E5"> to replace the</font><font color="#CCCCCC"> Lib</font>

792
00:33:59,080 --> 00:34:02,740
<font color="#CCCCCC">Network as</font><font color="#E5E5E5"> well so that will be built</font>

793
00:34:00,340 --> 00:34:05,709
<font color="#CCCCCC">into all docker</font><font color="#E5E5E5"> networking</font>

794
00:34:02,740 --> 00:34:09,730
implementations<font color="#E5E5E5"> and yeah hi talented</font>

795
00:34:05,710 --> 00:34:13,330
local<font color="#E5E5E5"> team</font><font color="#CCCCCC"> so</font><font color="#E5E5E5"> this is a network policy</font>

796
00:34:09,730 --> 00:34:15,040
<font color="#E5E5E5">one of the poor decisions that I slander</font>

797
00:34:13,330 --> 00:34:16,960
them for but<font color="#E5E5E5"> of course I don't</font>

798
00:34:15,040 --> 00:34:19,060
necessarily know any better<font color="#E5E5E5"> is that this</font>

799
00:34:16,960 --> 00:34:21,490
is this pod selector here without<font color="#E5E5E5"> a</font>

800
00:34:19,060 --> 00:34:22,960
<font color="#E5E5E5">visible selector is actually a wild card</font>

801
00:34:21,489 --> 00:34:25,839
<font color="#E5E5E5">so that</font><font color="#CCCCCC"> is a</font><font color="#E5E5E5"> default</font>

802
00:34:22,960 --> 00:34:28,449
failed closed policy which I understand

803
00:34:25,840 --> 00:34:30,040
<font color="#CCCCCC">makes sense but surely that should be an</font>

804
00:34:28,449 --> 00:34:31,270
invalid resource<font color="#E5E5E5"> format and you should</font>

805
00:34:30,040 --> 00:34:33,190
get<font color="#E5E5E5"> an error because</font><font color="#CCCCCC"> I don't think</font>

806
00:34:31,270 --> 00:34:36,900
<font color="#CCCCCC">that's very obvious anyway so that</font><font color="#E5E5E5"> is a</font>

807
00:34:33,190 --> 00:34:39,780
<font color="#E5E5E5">default</font><font color="#CCCCCC"> deny for</font><font color="#E5E5E5"> every every pods</font>

808
00:34:36,900 --> 00:34:42,070
<font color="#CCCCCC">network</font><font color="#E5E5E5"> communication in the namespace</font>

809
00:34:39,780 --> 00:34:45,040
this<font color="#E5E5E5"> is what you would then layer on</font><font color="#CCCCCC"> top</font>

810
00:34:42,070 --> 00:34:48,040
which are exemptions<font color="#E5E5E5"> for in this case 53</font>

811
00:34:45,040 --> 00:34:50,170
UDP and TCP as you can see again<font color="#CCCCCC"> we've</font>

812
00:34:48,040 --> 00:34:54,009
got<font color="#E5E5E5"> a pod selector with match labels the</font>

813
00:34:50,170 --> 00:34:56,170
only way<font color="#E5E5E5"> that this is actually providing</font>

814
00:34:54,010 --> 00:34:57,580
this these network exemptions<font color="#E5E5E5"> is if</font>

815
00:34:56,170 --> 00:35:00,100
those match labels are exactly correct

816
00:34:57,580 --> 00:35:01,750
<font color="#CCCCCC">on the deployments again there's no</font>

817
00:35:00,100 --> 00:35:04,299
validation here<font color="#E5E5E5"> if someone wants</font><font color="#CCCCCC"> to</font>

818
00:35:01,750 --> 00:35:06,610
build<font color="#E5E5E5"> the tool to analyze and tell you</font>

819
00:35:04,300 --> 00:35:09,850
where you've got matches for labels<font color="#E5E5E5"> that</font>

820
00:35:06,610 --> 00:35:12,580
<font color="#E5E5E5">you do not have I would deploy it if you</font>

821
00:35:09,850 --> 00:35:14,200
don't mind<font color="#CCCCCC"> so of course in</font><font color="#E5E5E5"> this case</font>

822
00:35:12,580 --> 00:35:16,360
we've got a<font color="#CCCCCC"> fail-safe because we've</font>

823
00:35:14,200 --> 00:35:18,879
denied all<font color="#E5E5E5"> egress in the namespace</font>

824
00:35:16,360 --> 00:35:20,230
<font color="#E5E5E5">anyway and we're not relying</font><font color="#CCCCCC"> on that</font>

825
00:35:18,880 --> 00:35:22,840
particular project err<font color="#CCCCCC"> to keep us safe</font>

826
00:35:20,230 --> 00:35:26,770
<font color="#E5E5E5">that actually enables networking and</font>

827
00:35:22,840 --> 00:35:30,100
connectivity<font color="#CCCCCC"> dns is a</font><font color="#E5E5E5"> non deterministic</font>

828
00:35:26,770 --> 00:35:33,670
resolution so there is no dns<font color="#CCCCCC"> in network</font>

829
00:35:30,100 --> 00:35:35,290
policies that is illegal<font color="#CCCCCC"> of course that</font>

830
00:35:33,670 --> 00:35:37,270
could<font color="#E5E5E5"> be</font><font color="#CCCCCC"> because we've got geo IPS or</font>

831
00:35:35,290 --> 00:35:39,759
round robin low bouncing or whatever

832
00:35:37,270 --> 00:35:42,280
<font color="#E5E5E5">that is so that's</font><font color="#CCCCCC"> all very</font><font color="#E5E5E5"> nice can we</font>

833
00:35:39,760 --> 00:35:43,960
do any better<font color="#CCCCCC"> of course we can 2018 is</font>

834
00:35:42,280 --> 00:35:45,490
the year of<font color="#CCCCCC"> the</font><font color="#E5E5E5"> service mesh</font><font color="#CCCCCC"> I'm sure</font>

835
00:35:43,960 --> 00:35:46,150
you've heard of<font color="#CCCCCC"> sto and</font><font color="#E5E5E5"> various other</font>

836
00:35:45,490 --> 00:35:47,680
flavors

837
00:35:46,150 --> 00:35:49,900
everybody is deploying

838
00:35:47,680 --> 00:35:51,480
something or in this ecosystem are

839
00:35:49,900 --> 00:35:54,579
working towards it

840
00:35:51,480 --> 00:35:56,740
it's really awesome<font color="#CCCCCC"> come</font><font color="#E5E5E5"> along</font><font color="#CCCCCC"> to sto</font>

841
00:35:54,579 --> 00:35:59,290
London if you want to learn more but

842
00:35:56,740 --> 00:36:02,410
suffice to say it is<font color="#CCCCCC"> still on its way to</font>

843
00:35:59,290 --> 00:36:04,540
a 1.0 release<font color="#CCCCCC"> there have</font><font color="#E5E5E5"> been issues</font>

844
00:36:02,410 --> 00:36:07,868
with<font color="#E5E5E5"> the</font><font color="#CCCCCC"> Envoy integration they've taken</font>

845
00:36:04,540 --> 00:36:10,180
the v1 API which would Paul the central

846
00:36:07,869 --> 00:36:11,559
<font color="#E5E5E5">infrastructure at a certain scale that</font>

847
00:36:10,180 --> 00:36:13,210
<font color="#E5E5E5">would take down the sto infrastructure</font>

848
00:36:11,559 --> 00:36:15,609
that's<font color="#E5E5E5"> all self hosted in the same</font><font color="#CCCCCC"> few</font>

849
00:36:13,210 --> 00:36:19,599
<font color="#CCCCCC">Banesto they changed that API from v1</font>

850
00:36:15,609 --> 00:36:22,450
rest v2<font color="#CCCCCC"> GRP see much nicer</font><font color="#E5E5E5"> no longer</font>

851
00:36:19,599 --> 00:36:24,550
battle testers<font color="#E5E5E5"> and yes there is work</font><font color="#CCCCCC"> to</font>

852
00:36:22,450 --> 00:36:27,040
do<font color="#E5E5E5"> and all contributions of course are</font>

853
00:36:24,550 --> 00:36:29,109
welcome<font color="#CCCCCC"> I don't have a lot of</font><font color="#E5E5E5"> time but</font>

854
00:36:27,040 --> 00:36:31,450
these are here<font color="#E5E5E5"> for starett</font><font color="#CCCCCC"> II the</font>

855
00:36:29,109 --> 00:36:34,960
service<font color="#CCCCCC"> mesh is ultimately an encrypted</font>

856
00:36:31,450 --> 00:36:36,189
web of<font color="#CCCCCC"> HD 52 connections in envoys case</font>

857
00:36:34,960 --> 00:36:37,660
we have mutual<font color="#CCCCCC"> to your left on all</font><font color="#E5E5E5"> of</font>

858
00:36:36,190 --> 00:36:40,150
those individually<font color="#E5E5E5"> because</font><font color="#CCCCCC"> we've got</font>

859
00:36:37,660 --> 00:36:42,279
<font color="#CCCCCC">spiffy that mutual TLS is actually the</font>

860
00:36:40,150 --> 00:36:43,990
workload identity so<font color="#E5E5E5"> compromise the</font>

861
00:36:42,280 --> 00:36:45,970
single pod only affects the

862
00:36:43,990 --> 00:36:47,919
<font color="#E5E5E5">communication from that pod to</font><font color="#CCCCCC"> the thing</font>

863
00:36:45,970 --> 00:36:50,200
that's allowed<font color="#CCCCCC"> to talk to we also have</font>

864
00:36:47,920 --> 00:36:53,109
our back and kubernetes<font color="#CCCCCC"> we have granular</font>

865
00:36:50,200 --> 00:36:54,700
HTTP verbage<font color="#E5E5E5"> our back as well so</font><font color="#CCCCCC"> we can</font>

866
00:36:53,109 --> 00:36:57,670
<font color="#E5E5E5">overlay</font><font color="#CCCCCC"> it</font><font color="#E5E5E5"> still on to an existing</font>

867
00:36:54,700 --> 00:36:59,259
<font color="#CCCCCC">system</font><font color="#E5E5E5"> it also extends nicely</font><font color="#CCCCCC"> onto VMs</font><font color="#E5E5E5"> I</font>

868
00:36:57,670 --> 00:37:01,829
feel like I'm pitching<font color="#CCCCCC"> for it it's</font><font color="#E5E5E5"> great</font>

869
00:36:59,260 --> 00:37:05,440
but<font color="#E5E5E5"> of course baby steps gently gently</font>

870
00:37:01,829 --> 00:37:07,030
<font color="#CCCCCC">that's kind of what it</font><font color="#E5E5E5"> looks like really</font>

871
00:37:05,440 --> 00:37:10,299
good<font color="#CCCCCC"> workshop from Chris and</font><font color="#E5E5E5"> pasta</font><font color="#CCCCCC"> Red</font>

872
00:37:07,030 --> 00:37:13,980
Hat guru<font color="#E5E5E5"> there and and yeah this</font><font color="#CCCCCC"> is what</font>

873
00:37:10,299 --> 00:37:16,059
gives you<font color="#E5E5E5"> the moon on stick more or less</font>

874
00:37:13,980 --> 00:37:18,609
really<font color="#E5E5E5"> excited about the deployment</font>

875
00:37:16,059 --> 00:37:22,390
<font color="#E5E5E5">strategies these enable dark traffic</font>

876
00:37:18,609 --> 00:37:25,089
routing or like dark Canaries<font color="#CCCCCC"> as I like</font>

877
00:37:22,390 --> 00:37:26,890
to<font color="#CCCCCC"> say and yes there's all sorts there</font>

878
00:37:25,089 --> 00:37:28,770
<font color="#E5E5E5">this is a route rule for SEO and</font><font color="#CCCCCC"> it's</font>

879
00:37:26,890 --> 00:37:32,290
actually performing routing based upon

880
00:37:28,770 --> 00:37:35,200
the regex<font color="#CCCCCC"> of the cookie header</font><font color="#E5E5E5"> why can</font>

881
00:37:32,290 --> 00:37:37,779
it do<font color="#CCCCCC"> that</font><font color="#E5E5E5"> because in this model envoy</font>

882
00:37:35,200 --> 00:37:40,750
is terminating the TLS<font color="#E5E5E5"> a kubernetes pod</font>

883
00:37:37,780 --> 00:37:43,390
is a singular network namespace<font color="#E5E5E5"> so envoy</font>

884
00:37:40,750 --> 00:37:45,460
is able to fire up<font color="#CCCCCC"> iced tea tables all</font>

885
00:37:43,390 --> 00:37:47,920
<font color="#CCCCCC">cumulated</font><font color="#E5E5E5"> networking is IP tables for</font>

886
00:37:45,460 --> 00:37:50,799
which I<font color="#E5E5E5"> apologize fire up IT IP tables</font>

887
00:37:47,920 --> 00:37:55,900
redirect all<font color="#CCCCCC"> traffic back to port one</font>

888
00:37:50,799 --> 00:37:58,030
<font color="#CCCCCC">devil 37</font><font color="#E5E5E5"> and as a result all outbound</font>

889
00:37:55,900 --> 00:38:00,700
<font color="#E5E5E5">and inbound communication to the</font>

890
00:37:58,030 --> 00:38:03,790
downstream service here

891
00:38:00,700 --> 00:38:05,980
is proxied by<font color="#E5E5E5"> envoy again no exceptions</font>

892
00:38:03,790 --> 00:38:07,960
envoy is also the<font color="#E5E5E5"> place that takes the</font>

893
00:38:05,980 --> 00:38:11,319
workload identity request<font color="#E5E5E5"> the</font>

894
00:38:07,960 --> 00:38:12,670
certificate<font color="#E5E5E5"> and so terminates at</font><font color="#CCCCCC"> Els</font><font color="#E5E5E5"> so</font>

895
00:38:11,319 --> 00:38:14,799
it's able<font color="#E5E5E5"> to see these requests in plain</font>

896
00:38:12,670 --> 00:38:18,250
<font color="#E5E5E5">text while maintaining security because</font>

897
00:38:14,799 --> 00:38:19,780
it's essentially<font color="#E5E5E5"> running is sidecar so</font>

898
00:38:18,250 --> 00:38:20,859
that's how we<font color="#E5E5E5"> get the plain text cookie</font>

899
00:38:19,780 --> 00:38:22,960
<font color="#CCCCCC">headed there and we were able to route</font>

900
00:38:20,859 --> 00:38:24,930
on<font color="#CCCCCC"> it</font><font color="#E5E5E5"> we've written more tooling because</font>

901
00:38:22,960 --> 00:38:27,609
this<font color="#E5E5E5"> again was</font><font color="#CCCCCC"> very difficult to</font><font color="#E5E5E5"> deploy</font>

902
00:38:24,930 --> 00:38:30,160
<font color="#CCCCCC">Vanessa</font><font color="#E5E5E5"> is aggressively parallelized</font>

903
00:38:27,609 --> 00:38:32,710
<font color="#CCCCCC">nmap with</font><font color="#E5E5E5"> some namespace invasion and</font>

904
00:38:30,160 --> 00:38:34,569
remote<font color="#E5E5E5"> access capability that</font><font color="#CCCCCC"> you</font>

905
00:38:32,710 --> 00:38:36,510
basically<font color="#E5E5E5"> describe what you think</font><font color="#CCCCCC"> the</font>

906
00:38:34,569 --> 00:38:39,190
network<font color="#E5E5E5"> topology should look like and</font>

907
00:38:36,510 --> 00:38:42,160
this is<font color="#E5E5E5"> the the</font><font color="#CCCCCC"> cube Metis version so</font>

908
00:38:39,190 --> 00:38:45,460
it's plain old instance and kubernetes

909
00:38:42,160 --> 00:38:47,558
aware<font color="#E5E5E5"> and what it will do is</font><font color="#CCCCCC"> ssh onto</font>

910
00:38:45,460 --> 00:38:49,480
the node that<font color="#E5E5E5"> is running one of these</font>

911
00:38:47,559 --> 00:38:51,490
pods<font color="#E5E5E5"> it will attach to</font><font color="#CCCCCC"> the same network</font>

912
00:38:49,480 --> 00:38:52,869
namespace which<font color="#CCCCCC"> means</font><font color="#E5E5E5"> that outbound</font>

913
00:38:51,490 --> 00:38:55,000
requests appear to be coming<font color="#CCCCCC"> from</font><font color="#E5E5E5"> the</font>

914
00:38:52,869 --> 00:38:58,299
<font color="#CCCCCC">same</font><font color="#E5E5E5"> network adapter as the existing pod</font>

915
00:38:55,000 --> 00:39:00,030
and then<font color="#E5E5E5"> it will run</font><font color="#CCCCCC"> and</font><font color="#E5E5E5"> map in the most</font>

916
00:38:58,299 --> 00:39:03,400
aggressively<font color="#E5E5E5"> parallelized way that the</font>

917
00:39:00,030 --> 00:39:04,839
<font color="#E5E5E5">host will manage it can also run</font>

918
00:39:03,400 --> 00:39:06,849
slightly<font color="#E5E5E5"> differently where it uses</font><font color="#CCCCCC"> the</font>

919
00:39:04,839 --> 00:39:08,170
labels<font color="#E5E5E5"> of the services but of course</font>

920
00:39:06,849 --> 00:39:10,150
<font color="#E5E5E5">we're then subjecting ourselves to</font>

921
00:39:08,170 --> 00:39:12,520
possible bugs there and by spinning up a

922
00:39:10,150 --> 00:39:14,230
pod<font color="#CCCCCC"> in a cluster we're</font><font color="#E5E5E5"> also impacting</font>

923
00:39:12,520 --> 00:39:16,170
what<font color="#CCCCCC"> cuban SSC's so this is a</font>

924
00:39:14,230 --> 00:39:18,849
transparent<font color="#E5E5E5"> way of</font><font color="#CCCCCC"> testing things</font>

925
00:39:16,170 --> 00:39:22,240
without impacting the<font color="#E5E5E5"> kubernetes</font>

926
00:39:18,849 --> 00:39:24,790
<font color="#E5E5E5">deployments nice tap</font><font color="#CCCCCC"> outputs</font><font color="#E5E5E5"> lots of</font>

927
00:39:22,240 --> 00:39:28,799
<font color="#E5E5E5">interesting stuff there</font><font color="#CCCCCC"> ok</font><font color="#E5E5E5"> let's recap</font>

928
00:39:24,790 --> 00:39:30,790
<font color="#CCCCCC">we don't have very much time left for</font>

929
00:39:28,799 --> 00:39:33,609
<font color="#CCCCCC">securing our hosts we've spoken about</font>

930
00:39:30,790 --> 00:39:36,880
these minimal<font color="#CCCCCC"> APR minimal operating</font>

931
00:39:33,609 --> 00:39:40,000
systems<font color="#E5E5E5"> of course we want our set comm</font>

932
00:39:36,880 --> 00:39:41,530
<font color="#E5E5E5">apparmor</font><font color="#CCCCCC"> selinux etc</font><font color="#E5E5E5"> enabled and a</font>

933
00:39:40,000 --> 00:39:43,510
<font color="#E5E5E5">mutable infrastructure just</font><font color="#CCCCCC"> prevents</font>

934
00:39:41,530 --> 00:39:45,490
configuration drift containers are

935
00:39:43,510 --> 00:39:47,650
running immutably<font color="#E5E5E5"> and you could</font><font color="#CCCCCC"> even</font>

936
00:39:45,490 --> 00:39:49,540
prevent<font color="#E5E5E5"> you can run them</font><font color="#CCCCCC"> with</font><font color="#E5E5E5"> an</font>

937
00:39:47,650 --> 00:39:51,339
immutable<font color="#E5E5E5"> filesystem flag</font><font color="#CCCCCC"> so they don't</font>

938
00:39:49,540 --> 00:39:55,420
<font color="#E5E5E5">they</font><font color="#CCCCCC"> don't write to</font><font color="#E5E5E5"> any where apart from</font>

939
00:39:51,339 --> 00:39:57,160
maybe<font color="#CCCCCC"> camp why not extend that the</font>

940
00:39:55,420 --> 00:39:58,780
<font color="#E5E5E5">infrastructure we're already there so</font>

941
00:39:57,160 --> 00:40:00,970
you'd be useful<font color="#E5E5E5"> and of course grouping</font>

942
00:39:58,780 --> 00:40:03,190
nodes by type<font color="#E5E5E5"> is really useful as well</font>

943
00:40:00,970 --> 00:40:04,180
we don't want network<font color="#CCCCCC"> access</font><font color="#E5E5E5"> to anything</font>

944
00:40:03,190 --> 00:40:05,470
at all<font color="#E5E5E5"> from our pods</font>

945
00:40:04,180 --> 00:40:07,419
<font color="#E5E5E5">this is such a common source of</font>

946
00:40:05,470 --> 00:40:11,078
escalation<font color="#CCCCCC"> as is of course the cloud</font>

947
00:40:07,420 --> 00:40:13,240
<font color="#CCCCCC">provide a metadata</font><font color="#E5E5E5"> API it's the attack</font>

948
00:40:11,079 --> 00:40:14,000
service unfortunately<font color="#E5E5E5"> again is one broad</font>

949
00:40:13,240 --> 00:40:15,649
because

950
00:40:14,000 --> 00:40:17,420
of the way<font color="#E5E5E5"> this thing's been developed</font>

951
00:40:15,650 --> 00:40:19,190
<font color="#E5E5E5">there</font><font color="#CCCCCC"> are ways to property to the</font>

952
00:40:17,420 --> 00:40:20,420
metadata<font color="#E5E5E5"> API it's</font><font color="#CCCCCC"> a solve problem make</font>

953
00:40:19,190 --> 00:40:23,349
<font color="#CCCCCC">sure you're running</font><font color="#E5E5E5"> something like</font><font color="#CCCCCC"> this</font>

954
00:40:20,420 --> 00:40:24,500
<font color="#CCCCCC">oh we're missing</font><font color="#E5E5E5"> a picture of kittens</font>

955
00:40:23,349 --> 00:40:27,530
<font color="#E5E5E5">devastating</font>

956
00:40:24,500 --> 00:40:30,849
<font color="#CCCCCC">all right well</font><font color="#E5E5E5"> ah thank you this is</font><font color="#CCCCCC"> this</font>

957
00:40:27,530 --> 00:40:30,849
<font color="#E5E5E5">is what I think</font><font color="#CCCCCC"> human s actually is</font>

958
00:40:33,520 --> 00:40:38,950
<font color="#CCCCCC">bless them all okay soft multiple C we</font>

959
00:40:36,710 --> 00:40:41,000
want<font color="#CCCCCC"> to</font><font color="#E5E5E5"> isolate things by namespace</font>

960
00:40:38,950 --> 00:40:43,578
default<font color="#CCCCCC"> network positing</font><font color="#E5E5E5"> pod security</font>

961
00:40:41,000 --> 00:40:46,460
policies on those namespaces<font color="#E5E5E5"> limits and</font>

962
00:40:43,579 --> 00:40:47,720
<font color="#CCCCCC">I mean</font><font color="#E5E5E5"> despite the promise of running</font>

963
00:40:46,460 --> 00:40:50,119
<font color="#E5E5E5">this heavily multi-talented</font>

964
00:40:47,720 --> 00:40:51,230
infrastructure do not run similar

965
00:40:50,119 --> 00:40:52,760
<font color="#E5E5E5">concerns</font>

966
00:40:51,230 --> 00:40:55,010
sorry different concerns like<font color="#CCCCCC"> Devon</font>

967
00:40:52,760 --> 00:40:57,109
production on same things scan

968
00:40:55,010 --> 00:41:00,710
<font color="#E5E5E5">everything run policy we've been through</font>

969
00:40:57,109 --> 00:41:02,299
a<font color="#E5E5E5"> lot of this hard multi-tenancy</font><font color="#CCCCCC"> only</font>

970
00:41:00,710 --> 00:41:04,039
<font color="#CCCCCC">catalog your existing security</font>

971
00:41:02,299 --> 00:41:06,559
boundaries this<font color="#CCCCCC"> is not a</font><font color="#E5E5E5"> panacea there's</font>

972
00:41:04,039 --> 00:41:08,150
no magic bullet<font color="#CCCCCC"> here</font><font color="#E5E5E5"> we really must</font>

973
00:41:06,559 --> 00:41:10,490
separate things in the way that we would

974
00:41:08,150 --> 00:41:13,190
<font color="#E5E5E5">traditionally we can annotate on nodes</font>

975
00:41:10,490 --> 00:41:15,169
<font color="#CCCCCC">with labels</font><font color="#E5E5E5"> we have advanced</font><font color="#CCCCCC"> edge</font>

976
00:41:13,190 --> 00:41:16,609
willing features such as pod anti

977
00:41:15,170 --> 00:41:20,359
affinity<font color="#CCCCCC"> that prevents things from being</font>

978
00:41:16,609 --> 00:41:22,788
Co deployed and<font color="#E5E5E5"> we can also once we</font>

979
00:41:20,359 --> 00:41:24,410
don't<font color="#E5E5E5"> that run a layer of analysis</font><font color="#CCCCCC"> on</font>

980
00:41:22,789 --> 00:41:25,760
<font color="#CCCCCC">our</font><font color="#E5E5E5"> running workloads to make sure that</font>

981
00:41:24,410 --> 00:41:27,379
we're never actually crossing these

982
00:41:25,760 --> 00:41:29,150
boundaries<font color="#E5E5E5"> ultimately if your security</font>

983
00:41:27,380 --> 00:41:31,190
concerns are high enough run<font color="#CCCCCC"> multiple</font>

984
00:41:29,150 --> 00:41:33,859
clusters<font color="#E5E5E5"> there is no other way of</font><font color="#CCCCCC"> saying</font>

985
00:41:31,190 --> 00:41:35,299
it there are lots of<font color="#E5E5E5"> container</font><font color="#CCCCCC"> runtimes</font>

986
00:41:33,859 --> 00:41:37,819
we've spoken<font color="#E5E5E5"> about some of these the</font>

987
00:41:35,299 --> 00:41:40,730
virtual<font color="#CCCCCC"> Kuebler is so cool it</font><font color="#E5E5E5"> basically</font>

988
00:41:37,819 --> 00:41:44,000
acts<font color="#E5E5E5"> as a shim to any other system</font><font color="#CCCCCC"> so</font>

989
00:41:40,730 --> 00:41:46,760
you could put you could put a mainframe

990
00:41:44,000 --> 00:41:48,529
<font color="#E5E5E5">behind a</font><font color="#CCCCCC"> Kuebler and have cuban asses</font>

991
00:41:46,760 --> 00:41:54,710
addressing that mainframe and scheduling

992
00:41:48,529 --> 00:41:56,809
things on it via<font color="#E5E5E5"> vacuum</font><font color="#CCCCCC"> s itself yeah so</font>

993
00:41:54,710 --> 00:41:58,460
hard multi-tenancy with<font color="#CCCCCC"> a</font><font color="#E5E5E5"> shared control</font>

994
00:41:56,809 --> 00:42:00,619
<font color="#E5E5E5">plane that is the compromise that one is</font>

995
00:41:58,460 --> 00:42:02,390
making I'm still<font color="#CCCCCC"> whizzing tweak at the</font>

996
00:42:00,619 --> 00:42:07,609
end of these good stuff from<font color="#E5E5E5"> our friend</font>

997
00:42:02,390 --> 00:42:10,940
Dan Walsh<font color="#CCCCCC"> and of course intrusion</font>

998
00:42:07,609 --> 00:42:13,420
detection is important because despite

999
00:42:10,940 --> 00:42:15,500
<font color="#E5E5E5">all these layers of</font><font color="#CCCCCC"> Defense</font>

1000
00:42:13,420 --> 00:42:18,230
<font color="#CCCCCC">defense-in-depth is the mantra that we</font>

1001
00:42:15,500 --> 00:42:19,940
always<font color="#E5E5E5"> repeat to ourselves lots of</font>

1002
00:42:18,230 --> 00:42:23,299
useful<font color="#E5E5E5"> stuff here the auto-generating of</font>

1003
00:42:19,940 --> 00:42:25,549
our back from order exemptions<font color="#CCCCCC"> is super</font>

1004
00:42:23,299 --> 00:42:27,730
<font color="#E5E5E5">cool</font><font color="#CCCCCC"> we get</font><font color="#E5E5E5"> all it logs from gke to</font>

1005
00:42:25,549 --> 00:42:30,849
everything everything<font color="#CCCCCC"> is audited</font>

1006
00:42:27,730 --> 00:42:33,130
various<font color="#E5E5E5"> different levels of request</font>

1007
00:42:30,849 --> 00:42:34,990
logging so<font color="#CCCCCC"> you would never log the</font>

1008
00:42:33,130 --> 00:42:38,020
request body<font color="#CCCCCC"> of a secret post or a</font>

1009
00:42:34,990 --> 00:42:39,129
secret<font color="#E5E5E5"> gate for example</font><font color="#CCCCCC"> that is what</font><font color="#E5E5E5"> all</font>

1010
00:42:38,020 --> 00:42:41,200
<font color="#E5E5E5">did to our back looks like but I went</font>

1011
00:42:39,130 --> 00:42:43,060
<font color="#E5E5E5">going for any detail loads of stuff</font>

1012
00:42:41,200 --> 00:42:44,770
<font color="#CCCCCC">about</font><font color="#E5E5E5"> privilege container builds when</font>

1013
00:42:43,060 --> 00:42:48,040
you build a container you're doing it as

1014
00:42:44,770 --> 00:42:50,770
<font color="#E5E5E5">routes</font><font color="#CCCCCC"> Alexis all right who</font><font color="#E5E5E5"> is a genius</font>

1015
00:42:48,040 --> 00:42:54,329
<font color="#E5E5E5">from Australia has shipped loads of</font>

1016
00:42:50,770 --> 00:42:57,550
features<font color="#CCCCCC"> into run C and a</font><font color="#E5E5E5"> go Lang and</font>

1017
00:42:54,329 --> 00:43:01,480
<font color="#E5E5E5">the Kerbal to get rootless container</font>

1018
00:42:57,550 --> 00:43:03,700
<font color="#CCCCCC">build</font><font color="#E5E5E5"> closer to reality</font><font color="#CCCCCC"> Lord</font><font color="#E5E5E5"> so far well</font>

1019
00:43:01,480 --> 00:43:05,770
<font color="#E5E5E5">recommended to follow and of course</font>

1020
00:43:03,700 --> 00:43:07,240
there's no point doing<font color="#E5E5E5"> this unless</font><font color="#CCCCCC"> we</font>

1021
00:43:05,770 --> 00:43:10,270
continually assert it not<font color="#E5E5E5"> only in the</font>

1022
00:43:07,240 --> 00:43:14,319
pipeline<font color="#E5E5E5"> but</font><font color="#CCCCCC"> also at runtime</font><font color="#E5E5E5"> thank you</font>

1023
00:43:10,270 --> 00:43:16,329
for the cat metaphor<font color="#CCCCCC"> internets yes so</font>

1024
00:43:14,320 --> 00:43:19,000
the system continually self validates<font color="#E5E5E5"> we</font>

1025
00:43:16,329 --> 00:43:20,940
become<font color="#E5E5E5"> more robust and the</font><font color="#CCCCCC"> Advanta</font>

1026
00:43:19,000 --> 00:43:25,980
<font color="#CCCCCC">Federation testers are not left with</font>

1027
00:43:20,940 --> 00:43:29,430
automated scanning grabbable fruits so

1028
00:43:25,980 --> 00:43:34,420
don't get<font color="#E5E5E5"> caught out be proactive and</font>

1029
00:43:29,430 --> 00:43:35,770
preempt what<font color="#E5E5E5"> it's coming there we go</font><font color="#CCCCCC"> to</font>

1030
00:43:34,420 --> 00:43:37,720
brave new world of<font color="#E5E5E5"> cuba Nettie's gives</font>

1031
00:43:35,770 --> 00:43:39,759
us so much but it also dramatically

1032
00:43:37,720 --> 00:43:41,500
increases the<font color="#E5E5E5"> attack surface there are</font>

1033
00:43:39,760 --> 00:43:43,930
lots of<font color="#E5E5E5"> interesting new and varied ways</font>

1034
00:43:41,500 --> 00:43:45,550
to defend<font color="#E5E5E5"> things but ultimately</font><font color="#CCCCCC"> we need</font>

1035
00:43:43,930 --> 00:43:46,440
oversight<font color="#E5E5E5"> and centralized control from</font>

1036
00:43:45,550 --> 00:43:48,490
pipelines

1037
00:43:46,440 --> 00:43:50,290
<font color="#CCCCCC">yeah security testing keeps you young</font>

1038
00:43:48,490 --> 00:43:52,439
I'm sure you're all aware thank you very

1039
00:43:50,290 --> 00:43:52,440
much

1040
00:43:52,570 --> 00:43:59,659
[Applause]

1041
00:44:05,100 --> 00:44:10,990
hi um<font color="#E5E5E5"> I really liked your talk</font><font color="#CCCCCC"> and</font><font color="#E5E5E5"> I</font>

1042
00:44:09,100 --> 00:44:14,380
feel<font color="#E5E5E5"> that you had the exact right amount</font>

1043
00:44:10,990 --> 00:44:16,600
of cat memes<font color="#CCCCCC"> that was</font><font color="#E5E5E5"> very good</font><font color="#CCCCCC"> and I</font>

1044
00:44:14,380 --> 00:44:19,570
would<font color="#CCCCCC"> like</font><font color="#E5E5E5"> to know when your slides will</font>

1045
00:44:16,600 --> 00:44:23,049
be available so<font color="#CCCCCC"> that puts you every</font>

1046
00:44:19,570 --> 00:44:24,310
single<font color="#E5E5E5"> thing in them let's see</font><font color="#CCCCCC"> so I will</font>

1047
00:44:23,050 --> 00:44:37,450
<font color="#E5E5E5">publish them on Twitter where they will</font>

1048
00:44:24,310 --> 00:44:40,509
probably<font color="#E5E5E5"> get picked up by yes yeah hi hi</font>

1049
00:44:37,450 --> 00:44:42,520
I<font color="#E5E5E5"> have two</font><font color="#CCCCCC"> questions many</font><font color="#E5E5E5"> of the</font>

1050
00:44:40,510 --> 00:44:44,230
security<font color="#E5E5E5"> concerns you mentioned it</font>

1051
00:44:42,520 --> 00:44:49,600
during<font color="#E5E5E5"> your presentation is out there</font>

1052
00:44:44,230 --> 00:44:51,340
<font color="#E5E5E5">yeah can</font><font color="#CCCCCC"> hear me can you hear me now</font>

1053
00:44:49,600 --> 00:44:53,170
<font color="#CCCCCC">yeah yeah so</font><font color="#E5E5E5"> many of the security</font>

1054
00:44:51,340 --> 00:44:55,270
<font color="#E5E5E5">concerns you mentioned</font><font color="#CCCCCC"> in your</font>

1055
00:44:53,170 --> 00:44:58,000
<font color="#CCCCCC">presentation it's already addressed in</font>

1056
00:44:55,270 --> 00:45:00,580
the<font color="#CCCCCC"> OpenShift so why not I mean if</font>

1057
00:44:58,000 --> 00:45:02,619
somebody's worried about<font color="#CCCCCC"> security and a</font>

1058
00:45:00,580 --> 00:45:05,319
multi-tenancy cluster why not use

1059
00:45:02,619 --> 00:45:07,869
<font color="#CCCCCC">OpenShift cluster and</font><font color="#E5E5E5"> they - shift is</font>

1060
00:45:05,320 --> 00:45:09,490
great<font color="#E5E5E5"> yeah it's very</font><font color="#CCCCCC"> pinyin Isis the</font>

1061
00:45:07,869 --> 00:45:11,560
<font color="#E5E5E5">only reason not to use</font><font color="#CCCCCC"> open</font><font color="#E5E5E5"> shift</font>

1062
00:45:09,490 --> 00:45:14,529
frankly is vendor lock-in<font color="#E5E5E5"> apart from</font>

1063
00:45:11,560 --> 00:45:16,450
<font color="#E5E5E5">that I mean it's I mean end of the day</font>

1064
00:45:14,530 --> 00:45:17,890
opener shift origin is open source I

1065
00:45:16,450 --> 00:45:19,839
mean you don't<font color="#CCCCCC"> need to worry about</font><font color="#E5E5E5"> yeah</font>

1066
00:45:17,890 --> 00:45:24,190
it's<font color="#E5E5E5"> true for the post enterprises</font>

1067
00:45:19,840 --> 00:45:26,230
tomorrow they demand the heads to<font color="#CCCCCC"> roll</font>

1068
00:45:24,190 --> 00:45:28,000
when something breaks frankly and they

1069
00:45:26,230 --> 00:45:29,859
require that<font color="#CCCCCC"> enterprises</font><font color="#E5E5E5"> port licensing</font>

1070
00:45:28,000 --> 00:45:31,480
<font color="#E5E5E5">but</font><font color="#CCCCCC"> i OpenShift actually contribute</font>

1071
00:45:29,859 --> 00:45:33,640
<font color="#E5E5E5">loads of security features back to Cuba</font>

1072
00:45:31,480 --> 00:45:36,730
NASA's like<font color="#CCCCCC"> are back and various other</font>

1073
00:45:33,640 --> 00:45:39,879
things<font color="#CCCCCC"> so if we ship this awesome</font>

1074
00:45:36,730 --> 00:45:43,359
basically since you mentioned core<font color="#E5E5E5"> is</font>

1075
00:45:39,880 --> 00:45:47,650
<font color="#E5E5E5">looping like one slide like third or</font>

1076
00:45:43,359 --> 00:45:50,830
fourth so why is that<font color="#E5E5E5"> for loop</font><font color="#CCCCCC"> for</font><font color="#E5E5E5"> eyes</font>

1077
00:45:47,650 --> 00:45:53,230
<font color="#E5E5E5">always cross yeah yeah poor West is now</font>

1078
00:45:50,830 --> 00:45:58,380
obviously the Red Hat team<font color="#CCCCCC"> Red</font><font color="#E5E5E5"> Hat</font><font color="#CCCCCC"> bots</font>

1079
00:45:53,230 --> 00:46:01,000
<font color="#CCCCCC">core OS</font><font color="#E5E5E5"> they are folding tectonic into</font>

1080
00:45:58,380 --> 00:46:02,290
the the Red Hat okay<font color="#E5E5E5"> open shift</font>

1081
00:46:01,000 --> 00:46:03,820
application itself which is super cool

1082
00:46:02,290 --> 00:46:06,250
<font color="#E5E5E5">and they're also folding the core OS</font>

1083
00:46:03,820 --> 00:46:07,960
<font color="#CCCCCC">container Linux into the</font><font color="#E5E5E5"> Dora and taking</font>

1084
00:46:06,250 --> 00:46:09,400
excuse me the<font color="#E5E5E5"> Omaha</font>

1085
00:46:07,960 --> 00:46:11,470
update mechanism which they got<font color="#E5E5E5"> from</font>

1086
00:46:09,400 --> 00:46:14,680
<font color="#E5E5E5">Chrome OS which is active built on</font><font color="#CCCCCC"> Gen 2</font>

1087
00:46:11,470 --> 00:46:17,049
<font color="#CCCCCC">whole layer in that direction there it's</font>

1088
00:46:14,680 --> 00:46:18,580
<font color="#E5E5E5">awesome yeah</font><font color="#CCCCCC"> though it's</font><font color="#E5E5E5"> been</font>

1089
00:46:17,050 --> 00:46:21,510
walked by<font color="#CCCCCC"> kim</font><font color="#E5E5E5"> bulk so we can run flat</font>

1090
00:46:18,580 --> 00:46:21,509
<font color="#E5E5E5">car</font><font color="#CCCCCC"> linux which</font><font color="#E5E5E5"> is the</font>

