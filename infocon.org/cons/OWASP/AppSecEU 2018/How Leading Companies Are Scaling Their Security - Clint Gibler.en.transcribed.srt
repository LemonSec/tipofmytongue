1
00:00:10,120 --> 00:00:14,600
<font color="#E5E5E5">okay cool</font><font color="#CCCCCC"> oh yeah thank you</font><font color="#E5E5E5"> so</font><font color="#CCCCCC"> much for</font>

2
00:00:13,190 --> 00:00:16,520
coming and<font color="#E5E5E5"> thank you very much to the</font>

3
00:00:14,600 --> 00:00:17,750
organizers<font color="#E5E5E5"> for</font><font color="#CCCCCC"> having me</font><font color="#E5E5E5"> my name is</font>

4
00:00:16,520 --> 00:00:20,180
Clint<font color="#E5E5E5"> and today we're going to be</font>

5
00:00:17,750 --> 00:00:22,670
talking<font color="#E5E5E5"> about a number</font><font color="#CCCCCC"> of specific tools</font>

6
00:00:20,180 --> 00:00:24,439
techniques and<font color="#E5E5E5"> processes</font><font color="#CCCCCC"> that about 10</font>

7
00:00:22,670 --> 00:00:26,990
to<font color="#CCCCCC"> 20 different bay area companies are</font>

8
00:00:24,439 --> 00:00:28,330
<font color="#CCCCCC">using to scale their security</font><font color="#E5E5E5"> so before</font>

9
00:00:26,990 --> 00:00:30,320
we get<font color="#E5E5E5"> into it</font><font color="#CCCCCC"> a little</font><font color="#E5E5E5"> bit about me</font>

10
00:00:28,330 --> 00:00:32,150
<font color="#E5E5E5">some would consider</font><font color="#CCCCCC"> a security</font>

11
00:00:30,320 --> 00:00:34,850
consultant<font color="#E5E5E5"> and research</font><font color="#CCCCCC"> director at</font><font color="#E5E5E5"> NCC</font>

12
00:00:32,150 --> 00:00:36,470
<font color="#E5E5E5">group we do penetration testing for web</font>

13
00:00:34,850 --> 00:00:40,790
apps mobile network hardware review

14
00:00:36,470 --> 00:00:42,290
crypto pretty much anything<font color="#CCCCCC"> I am from</font>

15
00:00:40,790 --> 00:00:44,239
the Midwest originally and then moving

16
00:00:42,290 --> 00:00:46,100
to San Francisco I realized that in

17
00:00:44,239 --> 00:00:48,519
order<font color="#CCCCCC"> for anyone to take me seriously I</font>

18
00:00:46,100 --> 00:00:51,590
needed to<font color="#E5E5E5"> start dressing like this</font>

19
00:00:48,520 --> 00:00:53,960
<font color="#E5E5E5">before</font><font color="#CCCCCC"> that I was a security engineer</font>

20
00:00:51,590 --> 00:00:56,120
and before that<font color="#E5E5E5"> I was a PhD student at</font>

21
00:00:53,960 --> 00:00:59,840
the<font color="#E5E5E5"> University of California Davis where</font>

22
00:00:56,120 --> 00:01:00,980
I dressed like<font color="#E5E5E5"> this so</font><font color="#CCCCCC"> just to</font><font color="#E5E5E5"> make sure</font>

23
00:00:59,840 --> 00:01:02,989
<font color="#E5E5E5">we're all</font><font color="#CCCCCC"> on</font><font color="#E5E5E5"> the</font><font color="#CCCCCC"> same page let's</font><font color="#E5E5E5"> talk a</font>

24
00:01:00,980 --> 00:01:04,190
<font color="#CCCCCC">little</font><font color="#E5E5E5"> bit about some of</font><font color="#CCCCCC"> the agile and</font>

25
00:01:02,989 --> 00:01:06,740
DevOps changes we've seen<font color="#CCCCCC"> over the</font><font color="#E5E5E5"> past</font>

26
00:01:04,190 --> 00:01:09,640
<font color="#E5E5E5">few years so there's been this big</font><font color="#CCCCCC"> push</font>

27
00:01:06,740 --> 00:01:11,690
to release<font color="#CCCCCC"> say</font><font color="#E5E5E5"> daily not quarterly</font>

28
00:01:09,640 --> 00:01:13,990
<font color="#CCCCCC">there's this idea</font><font color="#E5E5E5"> of infrastructure as</font>

29
00:01:11,690 --> 00:01:15,770
code using config management tools<font color="#E5E5E5"> and</font>

30
00:01:13,990 --> 00:01:17,208
<font color="#CCCCCC">generally there's a lot of benefits to</font>

31
00:01:15,770 --> 00:01:19,160
<font color="#E5E5E5">this right it allows developers</font><font color="#CCCCCC"> to move</font>

32
00:01:17,209 --> 00:01:20,660
<font color="#E5E5E5">more</font><font color="#CCCCCC"> quickly iterate based on user</font>

33
00:01:19,160 --> 00:01:22,670
feedback<font color="#E5E5E5"> and</font><font color="#CCCCCC"> has a bunch of nice</font>

34
00:01:20,660 --> 00:01:24,500
<font color="#CCCCCC">features but at the</font><font color="#E5E5E5"> same time this can</font>

35
00:01:22,670 --> 00:01:26,270
<font color="#E5E5E5">be challenging for the security team</font>

36
00:01:24,500 --> 00:01:29,420
right so the ratio in most<font color="#E5E5E5"> companies is</font>

37
00:01:26,270 --> 00:01:30,440
50 to 1 or greater<font color="#E5E5E5"> of developers</font><font color="#CCCCCC"> to</font>

38
00:01:29,420 --> 00:01:32,090
security people

39
00:01:30,440 --> 00:01:33,170
you can't possibly review all the code

40
00:01:32,090 --> 00:01:34,849
<font color="#E5E5E5">but at the same time you can't be</font><font color="#CCCCCC"> a</font>

41
00:01:33,170 --> 00:01:36,110
<font color="#E5E5E5">gatekeeper</font><font color="#CCCCCC"> right you can't say you can't</font>

42
00:01:34,849 --> 00:01:38,390
<font color="#CCCCCC">release this</font><font color="#E5E5E5"> until I've looked at</font>

43
00:01:36,110 --> 00:01:40,130
everything in most<font color="#E5E5E5"> companies and code</font>

44
00:01:38,390 --> 00:01:43,250
goes from development to<font color="#CCCCCC"> production very</font>

45
00:01:40,130 --> 00:01:44,839
quickly so at<font color="#E5E5E5"> high level this talk is</font>

46
00:01:43,250 --> 00:01:47,000
essentially a collection of specific

47
00:01:44,840 --> 00:01:49,330
tools<font color="#E5E5E5"> processes and automation Pro tips</font>

48
00:01:47,000 --> 00:01:51,920
for scaling your<font color="#CCCCCC"> company's Apps efforts</font>

49
00:01:49,330 --> 00:01:53,630
again this is taking<font color="#E5E5E5"> lessons learned and</font>

50
00:01:51,920 --> 00:01:55,429
some<font color="#E5E5E5"> best ideas from talking with a</font>

51
00:01:53,630 --> 00:01:58,160
<font color="#CCCCCC">number of</font><font color="#E5E5E5"> different</font><font color="#CCCCCC"> companies</font><font color="#E5E5E5"> largely in</font>

52
00:01:55,429 --> 00:02:00,319
<font color="#CCCCCC">the Bay Area but not</font><font color="#E5E5E5"> entirely so we'll</font>

53
00:01:58,160 --> 00:02:03,770
talk<font color="#CCCCCC"> about</font><font color="#E5E5E5"> some things that work some</font>

54
00:02:00,319 --> 00:02:05,239
<font color="#CCCCCC">things that don't work</font><font color="#E5E5E5"> and really</font><font color="#CCCCCC"> one of</font>

55
00:02:03,770 --> 00:02:06,738
<font color="#E5E5E5">my motivations for giving this talk is</font>

56
00:02:05,239 --> 00:02:08,390
I'm sure many of you work at companies

57
00:02:06,739 --> 00:02:10,310
<font color="#CCCCCC">that</font><font color="#E5E5E5"> do all sorts of cool stuff that</font>

58
00:02:08,389 --> 00:02:12,019
<font color="#CCCCCC">I've never heard</font><font color="#E5E5E5"> or thought</font><font color="#CCCCCC"> about and I</font>

59
00:02:10,310 --> 00:02:14,209
<font color="#E5E5E5">would love for you</font><font color="#CCCCCC"> to come</font><font color="#E5E5E5"> up after or</font>

60
00:02:12,020 --> 00:02:15,770
email me or tweet at me or<font color="#CCCCCC"> whatever and</font>

61
00:02:14,209 --> 00:02:18,439
I'd<font color="#E5E5E5"> love to talk</font><font color="#CCCCCC"> about this with you</font>

62
00:02:15,770 --> 00:02:20,299
more so I've included this quote because

63
00:02:18,439 --> 00:02:21,890
<font color="#E5E5E5">I think it sums up a lot</font><font color="#CCCCCC"> of companies</font>

64
00:02:20,299 --> 00:02:23,480
challenges very well which is<font color="#CCCCCC"> this</font>

65
00:02:21,890 --> 00:02:25,099
<font color="#E5E5E5">essentially you</font>

66
00:02:23,480 --> 00:02:26,929
we're building so many<font color="#E5E5E5"> services so much</font>

67
00:02:25,099 --> 00:02:29,000
stuff is going<font color="#E5E5E5"> on you know how do we</font>

68
00:02:26,930 --> 00:02:30,709
<font color="#E5E5E5">keep up we really need to scale our</font>

69
00:02:29,000 --> 00:02:33,110
efforts better than linearly<font color="#CCCCCC"> with</font><font color="#E5E5E5"> AB</font>

70
00:02:30,709 --> 00:02:34,580
<font color="#CCCCCC">psych engineer time</font><font color="#E5E5E5"> so really</font><font color="#CCCCCC"> in one</font>

71
00:02:33,110 --> 00:02:38,349
sentence this talk is you<font color="#CCCCCC"> know how do</font>

72
00:02:34,580 --> 00:02:40,340
you scale security so a few disclaimers

73
00:02:38,349 --> 00:02:42,290
<font color="#CCCCCC">I'm gonna mention</font><font color="#E5E5E5"> a number of different</font>

74
00:02:40,340 --> 00:02:44,480
<font color="#E5E5E5">things some</font><font color="#CCCCCC"> of these work in your</font>

75
00:02:42,290 --> 00:02:45,829
company some<font color="#E5E5E5"> of them might not so you</font>

76
00:02:44,480 --> 00:02:47,569
<font color="#E5E5E5">know if they don't work ignore them</font>

77
00:02:45,830 --> 00:02:48,950
that's<font color="#E5E5E5"> fine really</font><font color="#CCCCCC"> it's the mindset and</font>

78
00:02:47,569 --> 00:02:50,720
the methodology<font color="#CCCCCC"> that I think is more</font>

79
00:02:48,950 --> 00:02:52,458
important here<font color="#CCCCCC"> I'm gonna reference</font>

80
00:02:50,720 --> 00:02:54,650
several tools and products<font color="#E5E5E5"> this isn't an</font>

81
00:02:52,459 --> 00:02:56,390
endorsement<font color="#E5E5E5"> and also this is a confined</font>

82
00:02:54,650 --> 00:02:59,510
amount of time so it's not<font color="#E5E5E5"> everything</font>

83
00:02:56,390 --> 00:03:00,950
important<font color="#E5E5E5"> in</font><font color="#CCCCCC"> Dev</font><font color="#E5E5E5"> psych ops so I'm going</font>

84
00:02:59,510 --> 00:03:02,569
to talk<font color="#CCCCCC"> about some specific technical</font>

85
00:03:00,950 --> 00:03:03,828
<font color="#CCCCCC">measures but ultimately at the</font><font color="#E5E5E5"> end</font><font color="#CCCCCC"> of</font>

86
00:03:02,569 --> 00:03:06,200
the day no<font color="#CCCCCC"> matter how many</font><font color="#E5E5E5"> good ideas</font>

87
00:03:03,829 --> 00:03:08,989
<font color="#CCCCCC">you have you need buy-in from the people</font>

88
00:03:06,200 --> 00:03:10,760
involved<font color="#E5E5E5"> right so just some ideas for</font>

89
00:03:08,989 --> 00:03:11,900
getting<font color="#E5E5E5"> security management</font><font color="#CCCCCC"> onboard</font><font color="#E5E5E5"> you</font>

90
00:03:10,760 --> 00:03:13,399
know you can say oh this<font color="#E5E5E5"> is</font><font color="#CCCCCC"> gonna</font><font color="#E5E5E5"> be</font>

91
00:03:11,900 --> 00:03:15,290
<font color="#E5E5E5">some nice cost savings we</font><font color="#CCCCCC"> can do</font><font color="#E5E5E5"> more</font>

92
00:03:13,400 --> 00:03:16,670
<font color="#CCCCCC">with the same</font><font color="#E5E5E5"> headcount</font><font color="#CCCCCC"> we can scale our</font>

93
00:03:15,290 --> 00:03:18,530
security team along with<font color="#CCCCCC"> the</font><font color="#E5E5E5"> dev team</font>

94
00:03:16,670 --> 00:03:19,970
<font color="#E5E5E5">and things like that for security</font>

95
00:03:18,530 --> 00:03:22,069
<font color="#E5E5E5">engineers you can pitch them on hey</font>

96
00:03:19,970 --> 00:03:24,349
let's<font color="#E5E5E5"> automate the boring things right</font>

97
00:03:22,069 --> 00:03:27,319
let's spend time on high leveraged<font color="#E5E5E5"> high</font>

98
00:03:24,349 --> 00:03:29,060
ROI tasks and then for developers<font color="#CCCCCC"> there</font>

99
00:03:27,319 --> 00:03:30,349
<font color="#CCCCCC">are perhaps the most important people to</font>

100
00:03:29,060 --> 00:03:32,840
get<font color="#CCCCCC"> on board</font>

101
00:03:30,349 --> 00:03:35,238
ideally any new security<font color="#E5E5E5"> processes need</font>

102
00:03:32,840 --> 00:03:37,609
to<font color="#CCCCCC"> be no low</font><font color="#E5E5E5"> to no additional</font><font color="#CCCCCC"> friction</font>

103
00:03:35,239 --> 00:03:38,840
for developers<font color="#CCCCCC"> if you have alerts or</font>

104
00:03:37,609 --> 00:03:41,239
tool output<font color="#E5E5E5"> that you're trying to push</font>

105
00:03:38,840 --> 00:03:43,069
the developers<font color="#E5E5E5"> directly without vetting</font>

106
00:03:41,239 --> 00:03:45,260
them ideally this<font color="#E5E5E5"> is about zero percent</font>

107
00:03:43,069 --> 00:03:47,450
false positives or as low as<font color="#CCCCCC"> possible</font>

108
00:03:45,260 --> 00:03:50,000
<font color="#E5E5E5">otherwise they sort of build some</font>

109
00:03:47,450 --> 00:03:51,440
resentment<font color="#E5E5E5"> and ideally when you're</font>

110
00:03:50,000 --> 00:03:53,450
developing<font color="#E5E5E5"> new standards and</font><font color="#CCCCCC"> processes</font>

111
00:03:51,440 --> 00:03:55,130
you want to make it as easy<font color="#CCCCCC"> to adopt as</font>

112
00:03:53,450 --> 00:03:56,358
possible<font color="#E5E5E5"> essentially a drop in a</font>

113
00:03:55,130 --> 00:03:58,489
<font color="#CCCCCC">replacement so if you're writing a</font>

114
00:03:56,359 --> 00:04:00,769
<font color="#E5E5E5">secure wrapper for something ideally it</font>

115
00:03:58,489 --> 00:04:02,180
has the same you know arguments and type

116
00:04:00,769 --> 00:04:04,120
so<font color="#E5E5E5"> you can just change</font><font color="#CCCCCC"> the class name to</font>

117
00:04:02,180 --> 00:04:06,980
the secure version

118
00:04:04,120 --> 00:04:08,359
<font color="#CCCCCC">ideally in addition to saying hey do</font>

119
00:04:06,980 --> 00:04:09,798
this<font color="#E5E5E5"> it's more secure you also provide</font>

120
00:04:08,359 --> 00:04:11,629
<font color="#E5E5E5">some benefits outside just security</font>

121
00:04:09,799 --> 00:04:13,010
<font color="#CCCCCC">maybe like hey if you use</font><font color="#E5E5E5"> our library</font>

122
00:04:11,629 --> 00:04:14,690
also we'll give you a some nice

123
00:04:13,010 --> 00:04:17,298
performance<font color="#CCCCCC"> sort of telemetry</font>

124
00:04:14,690 --> 00:04:18,649
information as well<font color="#E5E5E5"> and then one thing</font>

125
00:04:17,298 --> 00:04:20,659
that we found in<font color="#CCCCCC"> practice is that</font>

126
00:04:18,649 --> 00:04:23,810
developers care about<font color="#CCCCCC"> security but also</font>

127
00:04:20,660 --> 00:04:25,039
if you<font color="#E5E5E5"> show them the fixing bugs hey</font>

128
00:04:23,810 --> 00:04:26,780
we're<font color="#E5E5E5"> improving the robustness and the</font>

129
00:04:25,039 --> 00:04:29,120
code quality<font color="#E5E5E5"> of this thing you've loved</font>

130
00:04:26,780 --> 00:04:31,130
<font color="#CCCCCC">and we built as well</font><font color="#E5E5E5"> can also be a good</font>

131
00:04:29,120 --> 00:04:33,770
selling point<font color="#CCCCCC"> okay so we've talked about</font>

132
00:04:31,130 --> 00:04:36,590
<font color="#E5E5E5">who I am some agile stuff some important</font>

133
00:04:33,770 --> 00:04:37,490
memes who's involved<font color="#E5E5E5"> and but the</font>

134
00:04:36,590 --> 00:04:42,380
majority<font color="#CCCCCC"> of this talk</font><font color="#E5E5E5"> is</font>

135
00:04:37,490 --> 00:04:45,190
going to be about the how<font color="#E5E5E5"> I really</font>

136
00:04:42,380 --> 00:04:47,210
expected<font color="#CCCCCC"> that to</font><font color="#E5E5E5"> go over better here</font>

137
00:04:45,190 --> 00:04:50,000
<font color="#E5E5E5">alright so here the</font><font color="#CCCCCC"> quarry areas we're</font>

138
00:04:47,210 --> 00:04:51,349
<font color="#E5E5E5">gonna be talking about</font><font color="#CCCCCC"> so first we're</font>

139
00:04:50,000 --> 00:04:52,400
<font color="#E5E5E5">gonna be talking about some</font><font color="#CCCCCC"> specific</font>

140
00:04:51,349 --> 00:04:54,319
tools<font color="#E5E5E5"> that companies have built</font>

141
00:04:52,400 --> 00:04:56,359
<font color="#CCCCCC">internally to gain visibility into what</font>

142
00:04:54,319 --> 00:04:58,819
engineering teams are working<font color="#CCCCCC"> on we're</font>

143
00:04:56,360 --> 00:05:00,289
<font color="#E5E5E5">gonna talk</font><font color="#CCCCCC"> about some high ROI libraries</font>

144
00:04:58,819 --> 00:05:01,849
that<font color="#E5E5E5"> the security engineering team built</font>

145
00:05:00,289 --> 00:05:03,229
and then there's a bunch<font color="#CCCCCC"> of</font><font color="#E5E5E5"> different</font>

146
00:05:01,849 --> 00:05:05,060
areas<font color="#E5E5E5"> in the</font><font color="#CCCCCC"> SDLC where you can</font>

147
00:05:03,229 --> 00:05:07,370
implement some<font color="#CCCCCC"> sort of security touch</font>

148
00:05:05,060 --> 00:05:08,509
points so specifically we're going to<font color="#E5E5E5"> be</font>

149
00:05:07,370 --> 00:05:10,610
talking<font color="#E5E5E5"> about doing some lightweight</font>

150
00:05:08,509 --> 00:05:12,800
static analysis on developer machines as

151
00:05:10,610 --> 00:05:14,990
well as on<font color="#E5E5E5"> code as it</font><font color="#CCCCCC"> goes in code</font>

152
00:05:12,800 --> 00:05:16,699
hosting<font color="#E5E5E5"> we'll talk about doing some</font>

153
00:05:14,990 --> 00:05:18,680
dynamic<font color="#CCCCCC"> analysis and fuzzing</font><font color="#E5E5E5"> in the</font>

154
00:05:16,699 --> 00:05:20,180
<font color="#E5E5E5">tests and QA environment</font><font color="#CCCCCC"> and then</font>

155
00:05:18,680 --> 00:05:23,990
finally in production we'll talk about

156
00:05:20,180 --> 00:05:26,599
<font color="#E5E5E5">some monitoring and remediation</font><font color="#CCCCCC"> okay so</font>

157
00:05:23,990 --> 00:05:28,699
let's get to it<font color="#CCCCCC"> so one challenge a</font>

158
00:05:26,599 --> 00:05:30,229
number of<font color="#CCCCCC"> apps tech teams have is you</font>

159
00:05:28,699 --> 00:05:32,419
<font color="#E5E5E5">know what all is the engineering team</font>

160
00:05:30,229 --> 00:05:33,979
working<font color="#E5E5E5"> on at a given point in time so</font>

161
00:05:32,419 --> 00:05:36,080
you you can't really feasibly attend

162
00:05:33,979 --> 00:05:38,330
every dev team stand up and at the same

163
00:05:36,080 --> 00:05:39,770
<font color="#CCCCCC">time</font><font color="#E5E5E5"> you can't expect every dev team</font>

164
00:05:38,330 --> 00:05:42,109
lead to know everything that security

165
00:05:39,770 --> 00:05:44,030
cares about so basically we want<font color="#E5E5E5"> a a</font>

166
00:05:42,110 --> 00:05:45,409
<font color="#E5E5E5">low-friction automated way to get an</font>

167
00:05:44,030 --> 00:05:46,969
<font color="#E5E5E5">idea</font><font color="#CCCCCC"> about you know what</font><font color="#E5E5E5"> are people</font>

168
00:05:45,409 --> 00:05:49,190
<font color="#CCCCCC">working on and where should</font><font color="#E5E5E5"> I</font><font color="#CCCCCC"> focus my</font>

169
00:05:46,969 --> 00:05:50,300
limited<font color="#E5E5E5"> time as an app psych engineer so</font>

170
00:05:49,190 --> 00:05:52,759
here's a<font color="#CCCCCC"> couple of</font><font color="#E5E5E5"> examples</font>

171
00:05:50,300 --> 00:05:54,560
so you could say scrape slack<font color="#CCCCCC"> all the</font>

172
00:05:52,759 --> 00:05:56,030
<font color="#E5E5E5">public channels the dev team channels</font>

173
00:05:54,560 --> 00:05:58,280
for security relevant keywords such as

174
00:05:56,030 --> 00:06:00,530
crypto security hash et cetera<font color="#E5E5E5"> and maybe</font>

175
00:05:58,280 --> 00:06:01,849
you pop in and say<font color="#E5E5E5"> oh what do you what</font>

176
00:06:00,530 --> 00:06:04,429
are<font color="#E5E5E5"> you chatting about like can I offer</font>

177
00:06:01,849 --> 00:06:06,409
any guidance<font color="#E5E5E5"> or assistance one company</font>

178
00:06:04,430 --> 00:06:09,289
has some<font color="#E5E5E5"> automated tooling in place that</font>

179
00:06:06,409 --> 00:06:11,360
will<font color="#CCCCCC"> auto scrape</font><font color="#E5E5E5"> Trello and JIRA boards</font>

180
00:06:09,289 --> 00:06:13,310
so essentially the development team will

181
00:06:11,360 --> 00:06:15,020
tag<font color="#E5E5E5"> issues that our security relevant</font>

182
00:06:13,310 --> 00:06:17,690
with security and the tool basically

183
00:06:15,020 --> 00:06:19,370
continuously<font color="#CCCCCC"> polls to say you know what</font>

184
00:06:17,690 --> 00:06:20,780
is currently being<font color="#E5E5E5"> worked on what's</font>

185
00:06:19,370 --> 00:06:22,069
going to<font color="#E5E5E5"> be worked on that's relevant to</font>

186
00:06:20,780 --> 00:06:26,150
security<font color="#E5E5E5"> and then they reach out to the</font>

187
00:06:22,069 --> 00:06:27,860
<font color="#CCCCCC">teams as appropriate so along the same</font>

188
00:06:26,150 --> 00:06:29,780
lines<font color="#CCCCCC"> a</font><font color="#E5E5E5"> number of companies</font><font color="#CCCCCC"> have built</font>

189
00:06:27,860 --> 00:06:31,729
some<font color="#E5E5E5"> internal web apps that</font><font color="#CCCCCC"> are</font>

190
00:06:29,780 --> 00:06:33,229
essentially self-service threat modeling

191
00:06:31,729 --> 00:06:35,599
<font color="#E5E5E5">security checklist type things</font>

192
00:06:33,229 --> 00:06:37,639
so slack gave a talk at<font color="#E5E5E5"> app</font><font color="#CCCCCC"> sec USA last</font>

193
00:06:35,599 --> 00:06:39,349
year and then recently<font color="#E5E5E5"> they wrote a blog</font>

194
00:06:37,639 --> 00:06:40,580
post<font color="#E5E5E5"> and released a tool that I'm</font><font color="#CCCCCC"> going</font>

195
00:06:39,349 --> 00:06:42,979
to show<font color="#E5E5E5"> you a couple</font><font color="#CCCCCC"> of screenshots for</font>

196
00:06:40,580 --> 00:06:44,419
but<font color="#E5E5E5"> basically the</font><font color="#CCCCCC"> idea is</font><font color="#E5E5E5"> you</font><font color="#CCCCCC"> know there</font>

197
00:06:42,979 --> 00:06:46,400
are dozens<font color="#E5E5E5"> to hundreds of internal</font>

198
00:06:44,419 --> 00:06:48,529
services where can I add<font color="#E5E5E5"> the</font><font color="#CCCCCC"> most value</font>

199
00:06:46,400 --> 00:06:50,340
as an app psych engineering you can't

200
00:06:48,529 --> 00:06:52,860
always threat model everything<font color="#E5E5E5"> so what</font>

201
00:06:50,340 --> 00:06:54,330
<font color="#E5E5E5">matters the most</font><font color="#CCCCCC"> so the first thing that</font>

202
00:06:52,860 --> 00:06:56,430
developers<font color="#E5E5E5"> are presented with is you</font>

203
00:06:54,330 --> 00:06:57,810
<font color="#CCCCCC">know</font><font color="#E5E5E5"> provide you know who are you</font>

204
00:06:56,430 --> 00:07:00,720
what<font color="#CCCCCC"> JIRA ticket are you working on</font>

205
00:06:57,810 --> 00:07:01,889
where's<font color="#E5E5E5"> the code stuff like that</font><font color="#CCCCCC"> then</font>

206
00:07:00,720 --> 00:07:04,229
there's a couple<font color="#E5E5E5"> of high-level questions</font>

207
00:07:01,889 --> 00:07:06,300
to<font color="#E5E5E5"> try to get an idea of you know what</font>

208
00:07:04,229 --> 00:07:08,070
<font color="#CCCCCC">how risky is this</font><font color="#E5E5E5"> how much</font><font color="#CCCCCC"> should the</font>

209
00:07:06,300 --> 00:07:10,350
<font color="#E5E5E5">security team be involved like</font><font color="#CCCCCC"> do</font><font color="#E5E5E5"> one</font>

210
00:07:08,070 --> 00:07:11,760
security<font color="#E5E5E5"> involved are you changing new</font>

211
00:07:10,350 --> 00:07:15,510
<font color="#CCCCCC">authentication or security controls</font>

212
00:07:11,760 --> 00:07:17,190
things<font color="#E5E5E5"> like that and then it brings you</font>

213
00:07:15,510 --> 00:07:18,810
<font color="#E5E5E5">to sort of a more detailed checklist</font>

214
00:07:17,190 --> 00:07:20,580
<font color="#E5E5E5">where like</font><font color="#CCCCCC"> okay what language are you</font>

215
00:07:18,810 --> 00:07:24,180
using<font color="#E5E5E5"> whatever you select</font><font color="#CCCCCC"> it will give</font>

216
00:07:20,580 --> 00:07:25,409
you some language specific advice like

217
00:07:24,180 --> 00:07:27,540
this<font color="#E5E5E5"> is how to do things securely in</font>

218
00:07:25,410 --> 00:07:29,160
Python<font color="#CCCCCC"> or make sure to avoid</font><font color="#E5E5E5"> this</font><font color="#CCCCCC"> and</font>

219
00:07:27,540 --> 00:07:30,780
<font color="#E5E5E5">then here are some things that</font><font color="#CCCCCC"> tend to</font>

220
00:07:29,160 --> 00:07:33,060
<font color="#CCCCCC">be potentially dangerous for</font><font color="#E5E5E5"> example</font>

221
00:07:30,780 --> 00:07:35,190
parsing XML<font color="#E5E5E5"> or URL parsing or some</font>

222
00:07:33,060 --> 00:07:37,280
common web issues and basically the

223
00:07:35,190 --> 00:07:39,719
developer fills out<font color="#CCCCCC"> all these things and</font>

224
00:07:37,280 --> 00:07:42,450
then it will<font color="#CCCCCC"> auto create to JIRA tickets</font>

225
00:07:39,720 --> 00:07:44,639
one<font color="#E5E5E5"> assigned to the development team and</font>

226
00:07:42,450 --> 00:07:47,219
then one assigned to the app<font color="#CCCCCC"> SEC team so</font>

227
00:07:44,639 --> 00:07:48,720
for the developer team they get<font color="#E5E5E5"> this</font>

228
00:07:47,220 --> 00:07:50,370
nice little<font color="#CCCCCC"> checklist that</font><font color="#E5E5E5"> says here's</font>

229
00:07:48,720 --> 00:07:51,900
all the<font color="#E5E5E5"> things based on</font><font color="#CCCCCC"> what I filled</font>

230
00:07:50,370 --> 00:07:53,639
out<font color="#E5E5E5"> these are probably the things I</font>

231
00:07:51,900 --> 00:07:54,810
should<font color="#E5E5E5"> think about so as they're</font>

232
00:07:53,639 --> 00:07:56,070
developing the<font color="#CCCCCC"> future they can go</font><font color="#E5E5E5"> back</font>

233
00:07:54,810 --> 00:07:59,460
<font color="#E5E5E5">to this and say</font><font color="#CCCCCC"> okay I've made sure to</font>

234
00:07:56,070 --> 00:08:00,870
<font color="#E5E5E5">check</font><font color="#CCCCCC"> that I'm parsing XML securely</font><font color="#E5E5E5"> I'm</font>

235
00:07:59,460 --> 00:08:02,549
doing all<font color="#CCCCCC"> these other things</font><font color="#E5E5E5"> right and</font>

236
00:08:00,870 --> 00:08:03,960
then this<font color="#E5E5E5"> JIRA ticket for the security</font>

237
00:08:02,550 --> 00:08:06,510
team puts everything in a<font color="#E5E5E5"> nice place</font>

238
00:08:03,960 --> 00:08:07,590
that makes it very easy<font color="#E5E5E5"> for them</font><font color="#CCCCCC"> to vet</font>

239
00:08:06,510 --> 00:08:09,330
all<font color="#CCCCCC"> the things</font><font color="#E5E5E5"> that you would care about</font>

240
00:08:07,590 --> 00:08:11,669
so it has<font color="#E5E5E5"> links</font><font color="#CCCCCC"> to</font><font color="#E5E5E5"> the technical and</font>

241
00:08:09,330 --> 00:08:13,590
design<font color="#E5E5E5"> specs</font><font color="#CCCCCC"> you know who on the dev</font>

242
00:08:11,669 --> 00:08:14,639
<font color="#E5E5E5">team should I reach out to where are</font>

243
00:08:13,590 --> 00:08:17,849
they talking<font color="#CCCCCC"> about it which slack</font>

244
00:08:14,639 --> 00:08:18,810
channels and things<font color="#CCCCCC"> like that</font><font color="#E5E5E5"> so both of</font>

245
00:08:17,849 --> 00:08:22,950
<font color="#E5E5E5">these things so far have been</font>

246
00:08:18,810 --> 00:08:24,300
essentially<font color="#CCCCCC"> I am only so much time</font><font color="#E5E5E5"> what</font>

247
00:08:22,950 --> 00:08:27,090
should I care<font color="#CCCCCC"> about and how can I</font><font color="#E5E5E5"> find</font>

248
00:08:24,300 --> 00:08:29,520
out those<font color="#CCCCCC"> things quickly</font><font color="#E5E5E5"> another way to</font>

249
00:08:27,090 --> 00:08:31,409
do<font color="#E5E5E5"> that is a different company has sort</font>

250
00:08:29,520 --> 00:08:33,900
<font color="#E5E5E5">of this live dashboard that displays</font>

251
00:08:31,410 --> 00:08:36,570
risk by service based<font color="#E5E5E5"> on various factors</font>

252
00:08:33,900 --> 00:08:38,098
<font color="#E5E5E5">so some of these could be you know how</font>

253
00:08:36,570 --> 00:08:40,200
important is the service to the business

254
00:08:38,099 --> 00:08:41,940
how many known vulnerabilities does it

255
00:08:40,200 --> 00:08:43,979
have however<font color="#E5E5E5"> we found them is it facing</font>

256
00:08:41,940 --> 00:08:45,810
<font color="#E5E5E5">the</font><font color="#CCCCCC"> internet or is it just internal and</font>

257
00:08:43,979 --> 00:08:48,810
things like<font color="#CCCCCC"> that</font><font color="#E5E5E5"> and also there</font><font color="#CCCCCC"> are</font>

258
00:08:45,810 --> 00:08:50,489
various<font color="#E5E5E5"> AWS config metrics such as you</font>

259
00:08:48,810 --> 00:08:51,900
<font color="#E5E5E5">know what</font><font color="#CCCCCC"> Adri us account what sort of</font>

260
00:08:50,490 --> 00:08:53,400
<font color="#E5E5E5">security groups is in what is it have</font>

261
00:08:51,900 --> 00:08:55,980
permission<font color="#CCCCCC"> to do how many instance</font><font color="#E5E5E5"> of</font>

262
00:08:53,400 --> 00:08:58,110
the<font color="#E5E5E5"> instances</font><font color="#CCCCCC"> of it out</font><font color="#E5E5E5"> there etc</font><font color="#CCCCCC"> so</font>

263
00:08:55,980 --> 00:09:01,410
basically this allows<font color="#CCCCCC"> them</font><font color="#E5E5E5"> to say</font><font color="#CCCCCC"> okay</font>

264
00:08:58,110 --> 00:09:03,089
this there are a bunch<font color="#CCCCCC"> of</font><font color="#E5E5E5"> these services</font>

265
00:09:01,410 --> 00:09:03,540
running it's facing the<font color="#CCCCCC"> Internet I</font>

266
00:09:03,089 --> 00:09:07,320
<font color="#E5E5E5">probably</font>

267
00:09:03,540 --> 00:09:10,290
to focus<font color="#E5E5E5"> my time here</font><font color="#CCCCCC"> okay let's talk</font>

268
00:09:07,320 --> 00:09:11,670
<font color="#E5E5E5">about some libraries so really the in</font>

269
00:09:10,290 --> 00:09:13,139
many respects I<font color="#CCCCCC"> think the highest</font><font color="#E5E5E5"> ROI</font>

270
00:09:11,670 --> 00:09:14,670
security engineering<font color="#E5E5E5"> things you can do</font>

271
00:09:13,139 --> 00:09:17,100
as a knapsack engineer is build

272
00:09:14,670 --> 00:09:19,920
libraries<font color="#CCCCCC"> that are</font><font color="#E5E5E5"> secure by default</font><font color="#CCCCCC"> if</font>

273
00:09:17,100 --> 00:09:21,990
we look back say<font color="#E5E5E5"> 10-15 years for many</font>

274
00:09:19,920 --> 00:09:23,610
web frameworks such as rails<font color="#CCCCCC"> you had to</font>

275
00:09:21,990 --> 00:09:25,649
add this<font color="#CCCCCC"> additional call in order to do</font>

276
00:09:23,610 --> 00:09:26,850
output encoding securely<font color="#E5E5E5"> so back in</font>

277
00:09:25,649 --> 00:09:29,790
those days<font color="#CCCCCC"> you had to do something right</font>

278
00:09:26,850 --> 00:09:31,350
to be secure<font color="#CCCCCC"> unsurprisingly</font><font color="#E5E5E5"> a cross-site</font>

279
00:09:29,790 --> 00:09:34,139
scripting was much<font color="#E5E5E5"> more prevalent</font><font color="#CCCCCC"> what</font>

280
00:09:31,350 --> 00:09:36,319
once it became a default<font color="#CCCCCC"> you had to</font>

281
00:09:34,139 --> 00:09:39,029
change<font color="#E5E5E5"> something in order to be</font><font color="#CCCCCC"> insecure</font>

282
00:09:36,319 --> 00:09:40,290
<font color="#E5E5E5">that happened much less frequently</font><font color="#CCCCCC"> so</font>

283
00:09:39,029 --> 00:09:42,389
when you're<font color="#CCCCCC"> thinking about</font><font color="#E5E5E5"> what</font><font color="#CCCCCC"> do you</font>

284
00:09:40,290 --> 00:09:44,670
<font color="#E5E5E5">want to spend time</font><font color="#CCCCCC"> building some areas</font>

285
00:09:42,389 --> 00:09:47,069
<font color="#CCCCCC">you should</font><font color="#E5E5E5"> perhaps consider our managing</font>

286
00:09:44,670 --> 00:09:49,620
secrets things related to crypto often

287
00:09:47,069 --> 00:09:52,229
<font color="#CCCCCC">allsey sequel</font><font color="#E5E5E5"> file system access</font><font color="#CCCCCC"> shell</font>

288
00:09:49,620 --> 00:09:54,000
exec things like that<font color="#CCCCCC"> one</font><font color="#E5E5E5"> interesting</font>

289
00:09:52,230 --> 00:09:57,240
example<font color="#E5E5E5"> is a company has banned the use</font>

290
00:09:54,000 --> 00:09:58,440
of md5<font color="#CCCCCC"> and instead</font><font color="#E5E5E5"> they require</font>

291
00:09:57,240 --> 00:10:00,930
developers to<font color="#E5E5E5"> use this function</font><font color="#CCCCCC"> called</font>

292
00:09:58,440 --> 00:10:02,490
non cryptographically secure md5<font color="#CCCCCC"> so you</font>

293
00:10:00,930 --> 00:10:03,930
can md5<font color="#E5E5E5"> that's basically a wrapper</font>

294
00:10:02,490 --> 00:10:06,029
around<font color="#E5E5E5"> it but you have to explicitly</font>

295
00:10:03,930 --> 00:10:08,459
acknowledge<font color="#E5E5E5"> I know that I'm not relying</font>

296
00:10:06,029 --> 00:10:11,339
<font color="#E5E5E5">on the randomness properties of calling</font>

297
00:10:08,459 --> 00:10:13,050
this here's some other cool examples

298
00:10:11,339 --> 00:10:15,149
we've seen<font color="#E5E5E5"> this first one is</font><font color="#CCCCCC"> probably</font>

299
00:10:13,050 --> 00:10:17,250
one of<font color="#E5E5E5"> my favorites which is</font><font color="#CCCCCC"> this one</font>

300
00:10:15,149 --> 00:10:19,380
company<font color="#E5E5E5"> has a test case</font><font color="#CCCCCC"> that will</font>

301
00:10:17,250 --> 00:10:21,199
programmatically iterate through every

302
00:10:19,380 --> 00:10:23,279
route<font color="#E5E5E5"> that is every exposed endpoint</font>

303
00:10:21,199 --> 00:10:25,170
introspect on<font color="#E5E5E5"> the code in each of those</font>

304
00:10:23,279 --> 00:10:26,730
and because they have a specific<font color="#CCCCCC"> method</font>

305
00:10:25,170 --> 00:10:29,040
that is performing access control checks

306
00:10:26,730 --> 00:10:31,440
<font color="#E5E5E5">it looks to see if any endpoint is not</font>

307
00:10:29,040 --> 00:10:32,939
calling<font color="#CCCCCC"> that method</font><font color="#E5E5E5"> just whenever anyone</font>

308
00:10:31,440 --> 00:10:35,130
wants the test suite<font color="#E5E5E5"> so they found that</font>

309
00:10:32,940 --> 00:10:37,110
<font color="#E5E5E5">this actually found a couple of times a</font>

310
00:10:35,130 --> 00:10:38,279
new developer joins the team<font color="#E5E5E5"> and they</font>

311
00:10:37,110 --> 00:10:39,630
don't know how they do<font color="#E5E5E5"> things so they</font>

312
00:10:38,279 --> 00:10:42,510
add a new endpoint but<font color="#E5E5E5"> they forgot to</font>

313
00:10:39,630 --> 00:10:44,579
<font color="#CCCCCC">add an</font><font color="#E5E5E5"> honest and authentication check</font>

314
00:10:42,510 --> 00:10:47,220
and this actually<font color="#CCCCCC"> just immediately</font>

315
00:10:44,579 --> 00:10:49,290
<font color="#E5E5E5">founded on</font><font color="#CCCCCC"> check-in or I guess as soon</font>

316
00:10:47,220 --> 00:10:51,389
as they ran the test<font color="#E5E5E5"> we'd rather so I</font>

317
00:10:49,290 --> 00:10:53,819
thought<font color="#E5E5E5"> that was super neat</font><font color="#CCCCCC"> other</font>

318
00:10:51,389 --> 00:10:56,010
companies<font color="#E5E5E5"> have built</font><font color="#CCCCCC"> say a view library</font>

319
00:10:53,819 --> 00:10:57,269
or a data model wrapper library<font color="#E5E5E5"> that</font>

320
00:10:56,010 --> 00:10:59,100
essentially eliminated classes of

321
00:10:57,269 --> 00:11:00,779
vulnerabilities<font color="#E5E5E5"> and really the core</font>

322
00:10:59,100 --> 00:11:02,279
takeaway here<font color="#E5E5E5"> is if something is hard</font><font color="#CCCCCC"> to</font>

323
00:11:00,779 --> 00:11:04,560
<font color="#E5E5E5">do securely if you have to be aware</font><font color="#CCCCCC"> of</font>

324
00:11:02,279 --> 00:11:05,970
different<font color="#E5E5E5"> things basically just build a</font>

325
00:11:04,560 --> 00:11:07,229
secure by default implementation and

326
00:11:05,970 --> 00:11:10,470
then make it<font color="#E5E5E5"> very easy for everyone to</font>

327
00:11:07,230 --> 00:11:12,959
<font color="#CCCCCC">use one company that I think does this</font>

328
00:11:10,470 --> 00:11:15,480
<font color="#CCCCCC">really</font><font color="#E5E5E5"> well is Netflix so hasta and</font>

329
00:11:12,959 --> 00:11:17,010
<font color="#E5E5E5">Patrick gave a talk at</font><font color="#CCCCCC"> oxide Kali about</font>

330
00:11:15,480 --> 00:11:17,529
this<font color="#E5E5E5"> and they had this slide</font><font color="#CCCCCC"> that I</font>

331
00:11:17,010 --> 00:11:19,180
<font color="#E5E5E5">included</font>

332
00:11:17,529 --> 00:11:20,920
<font color="#E5E5E5">their permission because I really like</font>

333
00:11:19,180 --> 00:11:22,420
it so on the left side this is<font color="#E5E5E5"> where</font>

334
00:11:20,920 --> 00:11:25,149
<font color="#E5E5E5">they started as a company</font><font color="#CCCCCC"> a number of</font>

335
00:11:22,420 --> 00:11:27,490
years ago<font color="#CCCCCC"> a lot of these are</font><font color="#E5E5E5"> very</font>

336
00:11:25,149 --> 00:11:29,079
manually driven<font color="#E5E5E5"> and you're sort</font><font color="#CCCCCC"> of</font>

337
00:11:27,490 --> 00:11:31,149
limited to how much person time you have

338
00:11:29,079 --> 00:11:32,709
but over time they've really invested<font color="#E5E5E5"> in</font>

339
00:11:31,149 --> 00:11:33,999
security<font color="#E5E5E5"> engineering efforts and they've</font>

340
00:11:32,709 --> 00:11:36,609
moved as far<font color="#CCCCCC"> to the right as possible</font>

341
00:11:33,999 --> 00:11:38,740
<font color="#CCCCCC">where everything they do is ideally is</font>

342
00:11:36,610 --> 00:11:40,839
highly leveraged<font color="#E5E5E5"> as possible so I've</font>

343
00:11:38,740 --> 00:11:43,029
I've linked there to the talk I

344
00:11:40,839 --> 00:11:44,889
encourage you<font color="#CCCCCC"> to</font><font color="#E5E5E5"> check it out but the</font>

345
00:11:43,029 --> 00:11:46,779
idea<font color="#E5E5E5"> the paved road they call out</font><font color="#CCCCCC"> is</font>

346
00:11:44,889 --> 00:11:49,180
essentially<font color="#E5E5E5"> let's make it as easy for</font>

347
00:11:46,779 --> 00:11:50,410
<font color="#CCCCCC">developers as possible to do the</font><font color="#E5E5E5"> secure</font>

348
00:11:49,180 --> 00:11:52,059
thing and get up and<font color="#E5E5E5"> running so you're</font>

349
00:11:50,410 --> 00:11:53,709
improving developer productivity<font color="#E5E5E5"> but</font>

350
00:11:52,059 --> 00:11:58,600
<font color="#E5E5E5">also making it more secure at</font><font color="#CCCCCC"> the same</font>

351
00:11:53,709 --> 00:12:01,149
time<font color="#CCCCCC"> ok so let's talk about some</font><font color="#E5E5E5"> student</font>

352
00:11:58,600 --> 00:12:02,559
static and dynamic analysis<font color="#CCCCCC"> but before</font>

353
00:12:01,149 --> 00:12:04,779
<font color="#E5E5E5">we do that I want to do a brief</font>

354
00:12:02,559 --> 00:12:07,600
diversion<font color="#E5E5E5"> to make sure we're all on the</font>

355
00:12:04,779 --> 00:12:09,339
<font color="#CCCCCC">same page so at a</font><font color="#E5E5E5"> high level static</font>

356
00:12:07,600 --> 00:12:10,870
analysis is reasoning<font color="#E5E5E5"> about code based</font>

357
00:12:09,339 --> 00:12:12,970
on<font color="#E5E5E5"> looking at it while a dynamic</font>

358
00:12:10,870 --> 00:12:14,620
analysis is you run the<font color="#E5E5E5"> code and observe</font>

359
00:12:12,970 --> 00:12:15,970
how<font color="#CCCCCC"> it behaves so there are some</font>

360
00:12:14,620 --> 00:12:18,430
fundamental trade-offs<font color="#CCCCCC"> here based on</font><font color="#E5E5E5"> the</font>

361
00:12:15,970 --> 00:12:19,779
analysis type technique that is sort of

362
00:12:18,430 --> 00:12:21,160
not dependent<font color="#E5E5E5"> on a tool these</font><font color="#CCCCCC"> just</font>

363
00:12:19,779 --> 00:12:22,930
fundamental sort of computer science

364
00:12:21,160 --> 00:12:24,639
limitation type things so static

365
00:12:22,930 --> 00:12:26,378
analysis is high coverage<font color="#E5E5E5"> and that</font><font color="#CCCCCC"> you</font>

366
00:12:24,639 --> 00:12:27,550
see all the code<font color="#E5E5E5"> but it tends to be</font>

367
00:12:26,379 --> 00:12:28,120
imprecise that is there are false

368
00:12:27,550 --> 00:12:31,059
positives

369
00:12:28,120 --> 00:12:32,439
conversely dynamic analysis generally

370
00:12:31,059 --> 00:12:33,699
code coverage<font color="#E5E5E5"> is a challenge it's</font>

371
00:12:32,439 --> 00:12:35,529
difficult to<font color="#CCCCCC"> exercise all of</font><font color="#E5E5E5"> an</font>

372
00:12:33,699 --> 00:12:38,199
applications functionality but<font color="#E5E5E5"> it tends</font>

373
00:12:35,529 --> 00:12:40,449
to<font color="#E5E5E5"> be more precise in that when it finds</font>

374
00:12:38,199 --> 00:12:41,740
issues<font color="#E5E5E5"> they're usually true issues</font>

375
00:12:40,449 --> 00:12:43,059
because you<font color="#E5E5E5"> just saw it happen</font><font color="#CCCCCC"> this</font>

376
00:12:41,740 --> 00:12:44,920
<font color="#E5E5E5">isn't always true but</font><font color="#CCCCCC"> that's the general</font>

377
00:12:43,059 --> 00:12:47,670
<font color="#CCCCCC">idea and both of these rays and</font>

378
00:12:44,920 --> 00:12:50,019
complexity from<font color="#E5E5E5"> simple to</font><font color="#CCCCCC"> more advanced</font>

379
00:12:47,670 --> 00:12:51,519
so I talked with<font color="#E5E5E5"> a number of engineers</font>

380
00:12:50,019 --> 00:12:53,170
at various<font color="#E5E5E5"> companies</font><font color="#CCCCCC"> and said hey do you</font>

381
00:12:51,519 --> 00:12:55,779
use<font color="#E5E5E5"> static analysis what do you think</font>

382
00:12:53,170 --> 00:12:58,420
and ninety-nine point eight percent<font color="#E5E5E5"> of</font>

383
00:12:55,779 --> 00:13:00,009
the time<font color="#E5E5E5"> this is what they said</font><font color="#CCCCCC"> which</font>

384
00:12:58,420 --> 00:13:02,050
makes me sad<font color="#CCCCCC"> because</font><font color="#E5E5E5"> I think static</font>

385
00:13:00,009 --> 00:13:03,399
analysis is awesome but I think what

386
00:13:02,050 --> 00:13:05,139
happened for many<font color="#E5E5E5"> of them is that they</font>

387
00:13:03,399 --> 00:13:06,339
got very excited about it<font color="#CCCCCC"> there whoa</font>

388
00:13:05,139 --> 00:13:07,480
we're good we're gonna use<font color="#CCCCCC"> it it's gonna</font>

389
00:13:06,339 --> 00:13:09,490
find<font color="#CCCCCC"> a</font><font color="#E5E5E5"> bunch of bugs it's gonna be</font>

390
00:13:07,480 --> 00:13:11,470
awesome<font color="#CCCCCC"> but then they ran</font><font color="#E5E5E5"> it for the</font>

391
00:13:09,490 --> 00:13:13,959
first time and then this happens<font color="#E5E5E5"> right</font>

392
00:13:11,470 --> 00:13:15,459
<font color="#E5E5E5">so they so</font><font color="#CCCCCC"> they</font><font color="#E5E5E5"> get this report</font><font color="#CCCCCC"> that has</font>

393
00:13:13,959 --> 00:13:17,559
a thousand findings they start triaging

394
00:13:15,459 --> 00:13:19,149
them and there's like one or two<font color="#E5E5E5"> they</font>

395
00:13:17,559 --> 00:13:21,790
care about<font color="#E5E5E5"> but most of them they</font>

396
00:13:19,149 --> 00:13:23,410
generally don't so<font color="#E5E5E5"> I get asked this a</font>

397
00:13:21,790 --> 00:13:25,779
lot<font color="#CCCCCC"> you know</font><font color="#E5E5E5"> should I buy</font><font color="#CCCCCC"> this should I</font>

398
00:13:23,410 --> 00:13:27,399
use<font color="#E5E5E5"> it so I just wanted to sort of give</font>

399
00:13:25,779 --> 00:13:29,170
you some<font color="#E5E5E5"> high-level tips on this we've</font>

400
00:13:27,399 --> 00:13:30,680
actually got brought in by a number<font color="#E5E5E5"> of</font>

401
00:13:29,170 --> 00:13:32,449
<font color="#E5E5E5">companies to help them</font><font color="#CCCCCC"> integrate</font>

402
00:13:30,680 --> 00:13:34,609
<font color="#CCCCCC">martial sass tools into their sdlc</font><font color="#E5E5E5"> and</font>

403
00:13:32,450 --> 00:13:36,140
<font color="#E5E5E5">here are some things we found</font>

404
00:13:34,610 --> 00:13:38,360
so some considerations you should

405
00:13:36,140 --> 00:13:39,830
<font color="#E5E5E5">probably make do we have large legacy</font>

406
00:13:38,360 --> 00:13:41,540
<font color="#E5E5E5">code bases that haven't been thoroughly</font>

407
00:13:39,830 --> 00:13:43,580
<font color="#E5E5E5">vetted this may be</font><font color="#CCCCCC"> useful</font>

408
00:13:41,540 --> 00:13:45,410
are you<font color="#E5E5E5"> using Java or other statically</font>

409
00:13:43,580 --> 00:13:47,540
typed language<font color="#CCCCCC"> languages it's generally</font>

410
00:13:45,410 --> 00:13:49,399
hard for static analysis in general<font color="#CCCCCC"> to</font>

411
00:13:47,540 --> 00:13:51,380
deal with dynamic<font color="#CCCCCC"> canal</font><font color="#E5E5E5"> dynamic</font>

412
00:13:49,399 --> 00:13:53,420
languages such as Python Ruby JavaScript

413
00:13:51,380 --> 00:13:56,300
<font color="#CCCCCC">and so forth</font><font color="#E5E5E5"> do you have a mature</font>

414
00:13:53,420 --> 00:13:57,920
security program<font color="#CCCCCC"> does your org</font><font color="#E5E5E5"> use</font>

415
00:13:56,300 --> 00:14:00,199
custom frameworks with non-standard

416
00:13:57,920 --> 00:14:01,219
control flow<font color="#E5E5E5"> if so that's fine but</font>

417
00:14:00,200 --> 00:14:03,190
essentially you're gonna have to write

418
00:14:01,220 --> 00:14:05,390
custom<font color="#E5E5E5"> rules that teach the tool how</font>

419
00:14:03,190 --> 00:14:06,320
data<font color="#CCCCCC"> flows through</font><font color="#E5E5E5"> your program so just</font>

420
00:14:05,390 --> 00:14:07,880
<font color="#E5E5E5">to know that you're gonna have to do</font>

421
00:14:06,320 --> 00:14:10,820
this if you don't<font color="#E5E5E5"> use a standard</font>

422
00:14:07,880 --> 00:14:13,220
<font color="#E5E5E5">framework that it already supports and</font>

423
00:14:10,820 --> 00:14:14,930
also<font color="#CCCCCC"> are you</font><font color="#E5E5E5"> willing to invest weeks</font><font color="#CCCCCC"> two</font>

424
00:14:13,220 --> 00:14:16,459
months<font color="#CCCCCC"> of security engineer time during</font>

425
00:14:14,930 --> 00:14:17,870
the rollout<font color="#E5E5E5"> so we've done this a number</font>

426
00:14:16,459 --> 00:14:19,369
<font color="#E5E5E5">of times</font><font color="#CCCCCC"> for different companies I would</font>

427
00:14:17,870 --> 00:14:21,920
<font color="#E5E5E5">say it always takes at least weeks</font>

428
00:14:19,370 --> 00:14:23,779
<font color="#E5E5E5">oftentimes months in most companies</font><font color="#CCCCCC"> so</font>

429
00:14:21,920 --> 00:14:25,279
just just<font color="#E5E5E5"> be aware of that it's not you</font>

430
00:14:23,779 --> 00:14:28,100
buy it you plug it in and<font color="#CCCCCC"> you're</font><font color="#E5E5E5"> done</font>

431
00:14:25,279 --> 00:14:29,540
<font color="#CCCCCC">usually there's a fair</font><font color="#E5E5E5"> amount of work so</font>

432
00:14:28,100 --> 00:14:31,250
regardless<font color="#E5E5E5"> of what you decide to do I</font>

433
00:14:29,540 --> 00:14:33,589
would<font color="#E5E5E5"> encourage you to calculate</font><font color="#CCCCCC"> the</font><font color="#E5E5E5"> ROI</font>

434
00:14:31,250 --> 00:14:34,940
here<font color="#E5E5E5"> so how much security engineer time</font>

435
00:14:33,589 --> 00:14:37,339
is required<font color="#CCCCCC"> to come through the results</font>

436
00:14:34,940 --> 00:14:39,470
<font color="#E5E5E5">versus how many bugs of what severity do</font>

437
00:14:37,339 --> 00:14:41,839
we find so let's say you spend<font color="#CCCCCC"> a month</font>

438
00:14:39,470 --> 00:14:43,580
triaging<font color="#CCCCCC"> bugs from a commercial assess</font>

439
00:14:41,839 --> 00:14:45,350
tool<font color="#E5E5E5"> and you find say one or two mediums</font>

440
00:14:43,580 --> 00:14:47,570
<font color="#E5E5E5">well in that case depending on your</font>

441
00:14:45,350 --> 00:14:48,860
<font color="#CCCCCC">codebase you may just say hey just</font><font color="#E5E5E5"> do a</font>

442
00:14:47,570 --> 00:14:50,240
month of pen testing instead because

443
00:14:48,860 --> 00:14:51,410
given that<font color="#CCCCCC"> amount of</font><font color="#E5E5E5"> time you're</font>

444
00:14:50,240 --> 00:14:53,810
probably<font color="#E5E5E5"> gonna find better bugs than</font>

445
00:14:51,410 --> 00:14:55,910
that<font color="#CCCCCC"> but again it</font><font color="#E5E5E5"> depends on your</font>

446
00:14:53,810 --> 00:14:57,560
<font color="#CCCCCC">codebase is it going to be an initial</font>

447
00:14:55,910 --> 00:14:58,939
upfront<font color="#E5E5E5"> time investment with a low</font>

448
00:14:57,560 --> 00:15:02,000
recurring time cost or is it going<font color="#CCCCCC"> to</font><font color="#E5E5E5"> be</font>

449
00:14:58,940 --> 00:15:03,740
continuously a lot of time<font color="#CCCCCC"> many</font>

450
00:15:02,000 --> 00:15:05,750
<font color="#CCCCCC">companies</font><font color="#E5E5E5"> have found that you might find</font>

451
00:15:03,740 --> 00:15:07,160
a<font color="#CCCCCC"> bunch of good bugs when you</font><font color="#E5E5E5"> initially</font>

452
00:15:05,750 --> 00:15:10,010
start using it but over time as<font color="#E5E5E5"> your</font>

453
00:15:07,160 --> 00:15:11,930
maturity<font color="#E5E5E5"> as a program improves things</font>

454
00:15:10,010 --> 00:15:13,279
<font color="#E5E5E5">get a</font><font color="#CCCCCC"> bit better</font><font color="#E5E5E5"> and a number of</font>

455
00:15:11,930 --> 00:15:15,199
<font color="#E5E5E5">companies</font><font color="#CCCCCC"> have started</font><font color="#E5E5E5"> rolling their own</font>

456
00:15:13,279 --> 00:15:18,760
or writing<font color="#CCCCCC"> custom rules and we'll talk a</font>

457
00:15:15,200 --> 00:15:21,320
bit<font color="#CCCCCC"> about</font><font color="#E5E5E5"> that soon</font><font color="#CCCCCC"> okay cool</font>

458
00:15:18,760 --> 00:15:22,610
so here are<font color="#CCCCCC"> some</font><font color="#E5E5E5"> things if you're</font>

459
00:15:21,320 --> 00:15:23,959
writing<font color="#E5E5E5"> safe and lightweight static</font>

460
00:15:22,610 --> 00:15:26,180
analysis check some developers machines

461
00:15:23,959 --> 00:15:27,529
<font color="#E5E5E5">here's what you should consider these</font>

462
00:15:26,180 --> 00:15:29,239
can<font color="#E5E5E5"> be done as get hooked or as part of</font>

463
00:15:27,529 --> 00:15:31,339
the test suite<font color="#E5E5E5"> and generally it needs to</font>

464
00:15:29,240 --> 00:15:33,350
be fast<font color="#CCCCCC"> with low</font><font color="#E5E5E5"> to no false positives</font>

465
00:15:31,339 --> 00:15:35,810
<font color="#CCCCCC">so some</font><font color="#E5E5E5"> examples we've</font><font color="#CCCCCC"> seen at different</font>

466
00:15:33,350 --> 00:15:37,520
<font color="#CCCCCC">companies</font><font color="#E5E5E5"> reject all database accesses</font>

467
00:15:35,810 --> 00:15:39,609
<font color="#CCCCCC">that don't use sort of</font><font color="#E5E5E5"> this known</font>

468
00:15:37,520 --> 00:15:43,439
approved<font color="#E5E5E5"> API or if it seems like</font><font color="#CCCCCC"> it's</font>

469
00:15:39,610 --> 00:15:45,690
concatenating sequel strings just<font color="#E5E5E5"> ban it</font>

470
00:15:43,440 --> 00:15:48,150
you could been known dangerous<font color="#E5E5E5"> functions</font>

471
00:15:45,690 --> 00:15:50,310
such<font color="#CCCCCC"> as shell exec</font><font color="#E5E5E5"> one company uses</font><font color="#CCCCCC"> es</font>

472
00:15:48,150 --> 00:15:52,680
<font color="#CCCCCC">Lin in their</font><font color="#E5E5E5"> nodejs applications to</font>

473
00:15:50,310 --> 00:15:54,329
check for the use<font color="#E5E5E5"> of eval or</font><font color="#CCCCCC"> a new</font>

474
00:15:52,680 --> 00:15:56,550
function so essentially they've wiped

475
00:15:54,330 --> 00:15:58,680
out certain<font color="#CCCCCC"> RCE code injection</font><font color="#E5E5E5"> type</font>

476
00:15:56,550 --> 00:15:59,939
attacks<font color="#CCCCCC"> you can also try to reject</font>

477
00:15:58,680 --> 00:16:00,479
commits that<font color="#E5E5E5"> seem</font><font color="#CCCCCC"> like they're adding</font>

478
00:15:59,940 --> 00:16:02,940
secrets

479
00:16:00,480 --> 00:16:05,010
so this first<font color="#E5E5E5"> link is a tool that by AWS</font>

480
00:16:02,940 --> 00:16:06,300
labs that<font color="#E5E5E5"> aims to do that and I've also</font>

481
00:16:05,010 --> 00:16:07,890
linked a couple of<font color="#E5E5E5"> tools that find</font>

482
00:16:06,300 --> 00:16:10,530
secrets and<font color="#E5E5E5"> sources</font><font color="#CCCCCC"> that are already</font>

483
00:16:07,890 --> 00:16:12,569
<font color="#E5E5E5">there so</font><font color="#CCCCCC"> one thing to note here is these</font>

484
00:16:10,530 --> 00:16:13,800
<font color="#E5E5E5">are essentially grips but</font><font color="#CCCCCC"> they have nice</font>

485
00:16:12,570 --> 00:16:16,410
security wins<font color="#E5E5E5"> even</font><font color="#CCCCCC"> though they're very</font>

486
00:16:13,800 --> 00:16:17,459
simple<font color="#E5E5E5"> but at the same time you want</font><font color="#CCCCCC"> to</font>

487
00:16:16,410 --> 00:16:19,380
<font color="#E5E5E5">make</font><font color="#CCCCCC"> sure</font><font color="#E5E5E5"> you don't do this too</font>

488
00:16:17,460 --> 00:16:20,400
aggressively that developers keep trying

489
00:16:19,380 --> 00:16:21,750
to commit and then<font color="#E5E5E5"> you block them and</font>

490
00:16:20,400 --> 00:16:24,140
<font color="#E5E5E5">then they'll find</font><font color="#CCCCCC"> ways around you and</font>

491
00:16:21,750 --> 00:16:28,140
they'll hate you<font color="#CCCCCC"> so</font><font color="#E5E5E5"> don't do that</font>

492
00:16:24,140 --> 00:16:29,670
<font color="#CCCCCC">okay</font><font color="#E5E5E5"> so code hosting this is when codes</font>

493
00:16:28,140 --> 00:16:34,080
<font color="#E5E5E5">already been pushed into github</font><font color="#CCCCCC"> gitlab</font>

494
00:16:29,670 --> 00:16:35,490
or in<font color="#CCCCCC"> C ICD</font><font color="#E5E5E5"> tool like Jenkins</font><font color="#CCCCCC"> you can do</font>

495
00:16:34,080 --> 00:16:37,140
on receive<font color="#CCCCCC"> hook store on new branch</font>

496
00:16:35,490 --> 00:16:40,710
creation<font color="#CCCCCC"> things</font><font color="#E5E5E5"> like that and we'll talk</font>

497
00:16:37,140 --> 00:16:42,030
<font color="#CCCCCC">about four</font><font color="#E5E5E5"> different core areas so the</font>

498
00:16:40,710 --> 00:16:43,860
first one is essentially<font color="#E5E5E5"> doing</font><font color="#CCCCCC"> the</font><font color="#E5E5E5"> same</font>

499
00:16:42,030 --> 00:16:45,500
type of checks<font color="#E5E5E5"> that you do in developers</font>

500
00:16:43,860 --> 00:16:48,720
machines you probably want to do<font color="#E5E5E5"> that in</font>

501
00:16:45,500 --> 00:16:50,850
a<font color="#CCCCCC"> CI CD pipeline as well</font><font color="#E5E5E5"> so the</font>

502
00:16:48,720 --> 00:16:52,470
developers laptop<font color="#E5E5E5"> maybe not set</font><font color="#CCCCCC"> up and</font>

503
00:16:50,850 --> 00:16:54,840
<font color="#E5E5E5">just for sort of a</font><font color="#CCCCCC"> defense-in-depth</font><font color="#E5E5E5"> you</font>

504
00:16:52,470 --> 00:16:56,130
probably want to<font color="#E5E5E5"> check here as well but</font>

505
00:16:54,840 --> 00:16:57,960
one neat thing you can do here that<font color="#CCCCCC"> I</font>

506
00:16:56,130 --> 00:16:59,790
want to<font color="#E5E5E5"> point out is you can use this</font>

507
00:16:57,960 --> 00:17:01,980
idea<font color="#E5E5E5"> to improve code quality over time</font>

508
00:16:59,790 --> 00:17:04,139
<font color="#CCCCCC">by</font><font color="#E5E5E5"> blocking new editions of</font>

509
00:17:01,980 --> 00:17:07,589
<font color="#E5E5E5">anti-patterns while allowing existing</font>

510
00:17:04,140 --> 00:17:08,790
ones<font color="#E5E5E5"> so if you just say one and</font><font color="#CCCCCC"> two</font><font color="#E5E5E5"> fix</font>

511
00:17:07,589 --> 00:17:10,619
everything in<font color="#E5E5E5"> the</font><font color="#CCCCCC"> codebase developers</font>

512
00:17:08,790 --> 00:17:12,000
are adding bad stuff perhaps faster than

513
00:17:10,619 --> 00:17:13,530
you<font color="#E5E5E5"> can fix them if there are many of</font>

514
00:17:12,000 --> 00:17:15,420
<font color="#E5E5E5">them</font><font color="#CCCCCC"> in a few of you</font><font color="#E5E5E5"> right so the idea</font>

515
00:17:13,530 --> 00:17:16,800
<font color="#CCCCCC">here is for example if you're trying to</font>

516
00:17:15,420 --> 00:17:18,750
migrate<font color="#CCCCCC"> to a strict content security</font>

517
00:17:16,800 --> 00:17:20,550
policy<font color="#E5E5E5"> but</font><font color="#CCCCCC"> your</font><font color="#E5E5E5"> inline JavaScript</font>

518
00:17:18,750 --> 00:17:22,770
everywhere<font color="#E5E5E5"> so what</font><font color="#CCCCCC"> you can do is you can</font>

519
00:17:20,550 --> 00:17:24,030
block<font color="#E5E5E5"> new inline</font><font color="#CCCCCC"> JavaScript so if you</font>

520
00:17:22,770 --> 00:17:27,530
stem the bleeding things aren't<font color="#E5E5E5"> getting</font>

521
00:17:24,030 --> 00:17:30,090
worse<font color="#CCCCCC"> which gives you time then to allow</font>

522
00:17:27,530 --> 00:17:32,370
you<font color="#CCCCCC"> to</font><font color="#E5E5E5"> gradually refractor existing code</font>

523
00:17:30,090 --> 00:17:35,459
<font color="#E5E5E5">so keep it from getting</font><font color="#CCCCCC"> worse and</font><font color="#E5E5E5"> then</font>

524
00:17:32,370 --> 00:17:36,689
you can start<font color="#E5E5E5"> making it better</font><font color="#CCCCCC"> instead</font>

525
00:17:35,460 --> 00:17:39,530
<font color="#CCCCCC">of</font><font color="#E5E5E5"> just blocking sometimes you might</font>

526
00:17:36,690 --> 00:17:42,090
<font color="#E5E5E5">just</font><font color="#CCCCCC"> want to get a heads up so</font><font color="#E5E5E5"> is maybe</font>

527
00:17:39,530 --> 00:17:43,530
someone is doing<font color="#E5E5E5"> some file system</font>

528
00:17:42,090 --> 00:17:45,840
interactions or crypto related things

529
00:17:43,530 --> 00:17:47,070
and as a<font color="#E5E5E5"> security engineer</font><font color="#CCCCCC"> you may just</font>

530
00:17:45,840 --> 00:17:48,169
<font color="#E5E5E5">want to know hey let</font><font color="#CCCCCC"> me know if anyone's</font>

531
00:17:47,070 --> 00:17:50,399
doing anything like<font color="#E5E5E5"> this</font>

532
00:17:48,170 --> 00:17:51,840
so essentially rather than blocking<font color="#E5E5E5"> it</font>

533
00:17:50,400 --> 00:17:53,670
here you are sending an alert maybe<font color="#E5E5E5"> a</font>

534
00:17:51,840 --> 00:17:55,840
slack message or an email<font color="#CCCCCC"> or whatever</font>

535
00:17:53,670 --> 00:17:57,820
<font color="#E5E5E5">platform you</font><font color="#CCCCCC"> use to say hey the</font>

536
00:17:55,840 --> 00:17:58,959
user and this branch of<font color="#E5E5E5"> this repo is</font>

537
00:17:57,820 --> 00:18:01,418
adding something<font color="#E5E5E5"> that you probably care</font>

538
00:17:58,960 --> 00:18:03,309
about here's a link<font color="#CCCCCC"> to it so this</font><font color="#E5E5E5"> gives</font>

539
00:18:01,419 --> 00:18:04,779
you<font color="#CCCCCC"> some context automatically without</font>

540
00:18:03,309 --> 00:18:06,100
asking<font color="#CCCCCC"> people</font><font color="#E5E5E5"> you know how applications</font>

541
00:18:04,779 --> 00:18:08,409
<font color="#E5E5E5">are evolving and where you may want to</font>

542
00:18:06,100 --> 00:18:10,870
pay attention<font color="#E5E5E5"> to this also lets you</font>

543
00:18:08,409 --> 00:18:13,590
correct common area errors early<font color="#CCCCCC"> so</font>

544
00:18:10,870 --> 00:18:15,549
<font color="#CCCCCC">maybe someone is</font><font color="#E5E5E5"> using hashing say</font>

545
00:18:13,590 --> 00:18:16,570
<font color="#CCCCCC">sha-256 when they mean to be encrypting</font>

546
00:18:15,549 --> 00:18:20,650
so you can have<font color="#E5E5E5"> those</font><font color="#CCCCCC"> conversations</font>

547
00:18:16,570 --> 00:18:23,770
<font color="#E5E5E5">earlier rather than later</font><font color="#CCCCCC"> a related idea</font>

548
00:18:20,650 --> 00:18:25,450
<font color="#E5E5E5">is in most code bases there are files or</font>

549
00:18:23,770 --> 00:18:27,400
directory structures that<font color="#CCCCCC"> are you know</font>

550
00:18:25,450 --> 00:18:29,529
<font color="#E5E5E5">probably shouldn't change very</font><font color="#CCCCCC"> much</font>

551
00:18:27,400 --> 00:18:31,809
maybe things related to authorization or

552
00:18:29,529 --> 00:18:33,100
authentication<font color="#CCCCCC"> the login flow session</font>

553
00:18:31,809 --> 00:18:34,960
management encryption wrappers stuff

554
00:18:33,100 --> 00:18:36,219
like that stuff<font color="#CCCCCC"> that</font><font color="#E5E5E5"> basically</font><font color="#CCCCCC"> as a</font>

555
00:18:34,960 --> 00:18:38,020
security<font color="#E5E5E5"> person you probably</font><font color="#CCCCCC"> want to</font>

556
00:18:36,220 --> 00:18:40,240
<font color="#E5E5E5">know if this ever changes because</font><font color="#CCCCCC"> if in</font>

557
00:18:38,020 --> 00:18:42,789
most cases should not change<font color="#CCCCCC"> very</font><font color="#E5E5E5"> often</font>

558
00:18:40,240 --> 00:18:44,080
so<font color="#CCCCCC"> this you</font><font color="#E5E5E5"> can either look at the</font>

559
00:18:42,789 --> 00:18:45,490
<font color="#E5E5E5">commits to see which files are changed</font>

560
00:18:44,080 --> 00:18:48,158
<font color="#E5E5E5">or hash them and look for those hashes</font>

561
00:18:45,490 --> 00:18:49,899
<font color="#E5E5E5">changing and things like that so if you</font>

562
00:18:48,159 --> 00:18:51,700
wanted<font color="#E5E5E5"> to you could perhaps also take</font>

563
00:18:49,899 --> 00:18:53,649
this further to say you know only<font color="#E5E5E5"> let</font>

564
00:18:51,700 --> 00:18:55,240
the<font color="#CCCCCC"> security team or specific senior</font>

565
00:18:53,649 --> 00:18:57,459
developers modify<font color="#CCCCCC"> these critical</font><font color="#E5E5E5"> files</font>

566
00:18:55,240 --> 00:18:59,080
you could<font color="#E5E5E5"> build models of who tends to</font>

567
00:18:57,460 --> 00:19:00,669
edit what with the<font color="#E5E5E5"> intuition of if</font>

568
00:18:59,080 --> 00:19:02,408
someone is editing code they tend not to

569
00:19:00,669 --> 00:19:04,840
work on<font color="#E5E5E5"> they may have less context and</font>

570
00:19:02,409 --> 00:19:06,909
<font color="#E5E5E5">may be more likely to</font><font color="#CCCCCC"> introduce</font><font color="#E5E5E5"> bugs and</font>

571
00:19:04,840 --> 00:19:09,070
then finally<font color="#E5E5E5"> another example is square</font>

572
00:19:06,909 --> 00:19:10,570
in the blog post<font color="#CCCCCC"> i linked earlier said</font>

573
00:19:09,070 --> 00:19:12,490
that<font color="#CCCCCC"> they leverage code turn and code</font>

574
00:19:10,570 --> 00:19:16,809
quality metrics<font color="#E5E5E5"> about where they</font><font color="#CCCCCC"> should</font>

575
00:19:12,490 --> 00:19:18,669
focus their<font color="#E5E5E5"> time so last one for this as</font>

576
00:19:16,809 --> 00:19:20,918
an organization<font color="#CCCCCC"> you should determine a</font>

577
00:19:18,669 --> 00:19:22,779
policy based<font color="#E5E5E5"> on</font><font color="#CCCCCC"> four</font><font color="#E5E5E5"> out of</font><font color="#CCCCCC"> date</font>

578
00:19:20,919 --> 00:19:25,690
dependencies of what severity how

579
00:19:22,779 --> 00:19:27,010
quickly should we try<font color="#E5E5E5"> to patch it</font><font color="#CCCCCC"> one</font>

580
00:19:25,690 --> 00:19:30,220
company does something<font color="#CCCCCC"> pretty cool</font><font color="#E5E5E5"> which</font>

581
00:19:27,010 --> 00:19:31,779
is<font color="#E5E5E5"> whenever a developer adds a new</font>

582
00:19:30,220 --> 00:19:33,640
dependency<font color="#CCCCCC"> they have some</font><font color="#E5E5E5"> automated</font>

583
00:19:31,779 --> 00:19:35,440
processes that essentially try<font color="#E5E5E5"> to</font>

584
00:19:33,640 --> 00:19:37,210
determine what<font color="#E5E5E5"> is the trustworthiness</font><font color="#CCCCCC"> of</font>

585
00:19:35,440 --> 00:19:39,039
this newly added dependency<font color="#E5E5E5"> so it'll</font>

586
00:19:37,210 --> 00:19:40,779
query say for example for<font color="#E5E5E5"> NPM it'll</font>

587
00:19:39,039 --> 00:19:42,158
query the NPM registry and say you know

588
00:19:40,779 --> 00:19:44,260
how many downloads has this had in the

589
00:19:42,159 --> 00:19:46,779
past<font color="#CCCCCC"> say month or six months what</font><font color="#E5E5E5"> about</font>

590
00:19:44,260 --> 00:19:48,039
all time<font color="#CCCCCC"> does this use any dangerous</font>

591
00:19:46,779 --> 00:19:49,600
functions that<font color="#E5E5E5"> I should know</font><font color="#CCCCCC"> about you</font>

592
00:19:48,039 --> 00:19:51,220
know is<font color="#E5E5E5"> it shell exacting or using eval</font>

593
00:19:49,600 --> 00:19:52,539
or<font color="#E5E5E5"> things like that</font><font color="#CCCCCC"> so basically</font>

594
00:19:51,220 --> 00:19:54,490
whenever there's a<font color="#CCCCCC"> new dependency they</font>

595
00:19:52,539 --> 00:19:56,500
have immediate<font color="#CCCCCC"> insight into at least</font><font color="#E5E5E5"> a</font>

596
00:19:54,490 --> 00:19:58,659
high level<font color="#CCCCCC"> of gauge of should I use</font><font color="#E5E5E5"> this</font>

597
00:19:56,500 --> 00:20:01,510
or not<font color="#CCCCCC"> so there's a lot of</font><font color="#E5E5E5"> tools to do</font>

598
00:19:58,659 --> 00:20:03,820
this some open source such as language

599
00:20:01,510 --> 00:20:06,039
specific ones or<font color="#CCCCCC"> hospital pendency check</font>

600
00:20:03,820 --> 00:20:09,679
and then there<font color="#CCCCCC"> are</font><font color="#E5E5E5"> infinity commercial</font>

601
00:20:06,039 --> 00:20:11,360
ones so in a<font color="#E5E5E5"> number</font><font color="#CCCCCC"> of these the</font>

602
00:20:09,680 --> 00:20:13,430
idea has been you<font color="#CCCCCC"> know given new code</font>

603
00:20:11,360 --> 00:20:16,010
run some arbitrary checks on it to check

604
00:20:13,430 --> 00:20:17,870
our various properties so<font color="#CCCCCC"> scum blur</font><font color="#E5E5E5"> from</font>

605
00:20:16,010 --> 00:20:19,580
Netflix and a<font color="#E5E5E5"> couple of others</font><font color="#CCCCCC"> feel</font><font color="#E5E5E5"> free</font>

606
00:20:17,870 --> 00:20:20,570
to give it a those a look there's

607
00:20:19,580 --> 00:20:22,790
<font color="#E5E5E5">probably a bunch of others I'm</font><font color="#CCCCCC"> not</font>

608
00:20:20,570 --> 00:20:24,230
linking<font color="#E5E5E5"> here</font><font color="#CCCCCC"> and then there's some other</font>

609
00:20:22,790 --> 00:20:25,610
<font color="#E5E5E5">tools that are more focused on wrapping</font>

610
00:20:24,230 --> 00:20:27,890
other tools rather than specifically

611
00:20:25,610 --> 00:20:29,330
hooking into<font color="#E5E5E5"> the CI CD but just for your</font>

612
00:20:27,890 --> 00:20:33,620
reference in<font color="#CCCCCC"> case it's useful I include</font>

613
00:20:29,330 --> 00:20:37,060
a couple<font color="#CCCCCC"> of those</font><font color="#E5E5E5"> alright so let's talk</font>

614
00:20:33,620 --> 00:20:39,530
about<font color="#E5E5E5"> the testing QA environment so</font>

615
00:20:37,060 --> 00:20:41,360
despite what marketing for most

616
00:20:39,530 --> 00:20:44,030
companies will<font color="#E5E5E5"> tell you it's</font>

617
00:20:41,360 --> 00:20:45,530
fundamentally difficult for SAS dynamic

618
00:20:44,030 --> 00:20:47,690
analysis tools to be well on<font color="#E5E5E5"> modern</font>

619
00:20:45,530 --> 00:20:49,639
<font color="#E5E5E5">JavaScript heavy applications it's</font>

620
00:20:47,690 --> 00:20:50,720
<font color="#E5E5E5">difficult to understand</font><font color="#CCCCCC"> how they work if</font>

621
00:20:49,640 --> 00:20:53,390
there is<font color="#E5E5E5"> a sort of complicated</font>

622
00:20:50,720 --> 00:20:54,730
<font color="#E5E5E5">multi-step flows if it's very JavaScript</font>

623
00:20:53,390 --> 00:20:56,990
heavy these<font color="#E5E5E5"> are</font><font color="#CCCCCC"> just fundamentally hard</font>

624
00:20:54,730 --> 00:20:58,610
and about two-thirds of<font color="#E5E5E5"> the way</font><font color="#CCCCCC"> into the</font>

625
00:20:56,990 --> 00:21:00,290
talk for<font color="#E5E5E5"> this app</font><font color="#CCCCCC"> sec</font><font color="#E5E5E5"> us a talk from</font>

626
00:20:58,610 --> 00:21:02,179
<font color="#CCCCCC">last year he calls out specifically some</font>

627
00:21:00,290 --> 00:21:03,680
issues that<font color="#CCCCCC"> are challenging but let's</font>

628
00:21:02,180 --> 00:21:07,120
talk<font color="#CCCCCC"> about some</font><font color="#E5E5E5"> ways</font><font color="#CCCCCC"> that tend to be</font>

629
00:21:03,680 --> 00:21:09,920
useful<font color="#CCCCCC"> in practice so one</font><font color="#E5E5E5"> thing</font><font color="#CCCCCC"> is just</font>

630
00:21:07,120 --> 00:21:11,510
<font color="#CCCCCC">ensuring that a nice security</font><font color="#E5E5E5"> baseline</font>

631
00:21:09,920 --> 00:21:13,280
is being enforced so whenever we release

632
00:21:11,510 --> 00:21:15,890
<font color="#E5E5E5">a new service</font><font color="#CCCCCC"> let's make sure it's only</font>

633
00:21:13,280 --> 00:21:18,500
<font color="#E5E5E5">talking over TLS and it's using strong</font>

634
00:21:15,890 --> 00:21:21,110
ciphers<font color="#CCCCCC"> we can also check headers you</font>

635
00:21:18,500 --> 00:21:23,090
know are you<font color="#E5E5E5"> using</font><font color="#CCCCCC"> a strong CSP</font><font color="#E5E5E5"> are you</font>

636
00:21:21,110 --> 00:21:23,590
using<font color="#E5E5E5"> the right cookie flags and things</font>

637
00:21:23,090 --> 00:21:25,280
like that

638
00:21:23,590 --> 00:21:27,320
so one thing<font color="#CCCCCC"> that I think</font><font color="#E5E5E5"> is</font>

639
00:21:25,280 --> 00:21:30,350
particularly cool<font color="#E5E5E5"> is what's there on</font><font color="#CCCCCC"> the</font>

640
00:21:27,320 --> 00:21:32,240
bottom<font color="#E5E5E5"> which</font><font color="#CCCCCC"> is oftentimes these</font><font color="#E5E5E5"> desk</font>

641
00:21:30,350 --> 00:21:34,159
tools you need to<font color="#E5E5E5"> do a lot</font><font color="#CCCCCC"> of</font><font color="#E5E5E5"> upfront</font>

642
00:21:32,240 --> 00:21:35,870
config to say here's<font color="#E5E5E5"> how you log in</font>

643
00:21:34,160 --> 00:21:37,190
here's how all<font color="#E5E5E5"> these different flow is</font>

644
00:21:35,870 --> 00:21:39,800
work and that configuration<font color="#E5E5E5"> can</font><font color="#CCCCCC"> be very</font>

645
00:21:37,190 --> 00:21:41,420
time intensive<font color="#E5E5E5"> so the idea here is you</font>

646
00:21:39,800 --> 00:21:43,460
<font color="#E5E5E5">probably already have integration tests</font>

647
00:21:41,420 --> 00:21:44,750
that exercise most<font color="#E5E5E5"> of the application so</font>

648
00:21:43,460 --> 00:21:47,000
rather than having to teach the tool

649
00:21:44,750 --> 00:21:48,920
essentially configure your integration

650
00:21:47,000 --> 00:21:51,800
test<font color="#E5E5E5"> to use the tools such as burp suite</font>

651
00:21:48,920 --> 00:21:53,870
or SAP as a proxy<font color="#E5E5E5"> and then when you run</font>

652
00:21:51,800 --> 00:21:54,919
the integration tests<font color="#CCCCCC"> it's exercising</font>

653
00:21:53,870 --> 00:21:57,139
all the different<font color="#CCCCCC"> end points with</font>

654
00:21:54,920 --> 00:21:59,330
arguments<font color="#E5E5E5"> realistic that what you expect</font>

655
00:21:57,140 --> 00:22:01,160
so the tool knows all the different

656
00:21:59,330 --> 00:22:03,260
<font color="#CCCCCC">things and</font><font color="#E5E5E5"> then essentially condition</font>

657
00:22:01,160 --> 00:22:08,600
run<font color="#E5E5E5"> active scanner from there to sort of</font>

658
00:22:03,260 --> 00:22:10,340
<font color="#E5E5E5">fuzz so if you get bugs reported by a</font>

659
00:22:08,600 --> 00:22:11,810
pen test or bug<font color="#E5E5E5"> money or however</font><font color="#CCCCCC"> I would</font>

660
00:22:10,340 --> 00:22:14,540
encourage you to<font color="#E5E5E5"> add unit tests that</font>

661
00:22:11,810 --> 00:22:16,610
<font color="#CCCCCC">test that</font><font color="#E5E5E5"> exact same issue so say in</font>

662
00:22:14,540 --> 00:22:18,080
this<font color="#E5E5E5"> end point in this parameter there</font>

663
00:22:16,610 --> 00:22:19,540
was cross-site scripting just<font color="#E5E5E5"> add a unit</font>

664
00:22:18,080 --> 00:22:20,960
test<font color="#E5E5E5"> that</font><font color="#CCCCCC"> makes sure that that</font><font color="#E5E5E5"> never</font>

665
00:22:19,540 --> 00:22:23,240
happens again

666
00:22:20,960 --> 00:22:26,240
because occasionally<font color="#CCCCCC"> based</font><font color="#E5E5E5"> on how</font>

667
00:22:23,240 --> 00:22:28,820
different systems change or various

668
00:22:26,240 --> 00:22:30,559
<font color="#CCCCCC">coder</font><font color="#E5E5E5"> factors issues could reoccur so</font>

669
00:22:28,820 --> 00:22:32,029
this<font color="#CCCCCC"> make sure that doesn't happen this</font>

670
00:22:30,559 --> 00:22:34,190
<font color="#E5E5E5">was called out</font><font color="#CCCCCC"> by</font><font color="#E5E5E5"> Zane Lackey</font><font color="#CCCCCC"> in his</font>

671
00:22:32,029 --> 00:22:35,750
black<font color="#CCCCCC"> cat talk last year and overall I</font>

672
00:22:34,190 --> 00:22:36,320
would<font color="#E5E5E5"> very much encourage you to check</font>

673
00:22:35,750 --> 00:22:39,080
<font color="#CCCCCC">that one out</font>

674
00:22:36,320 --> 00:22:40,668
<font color="#E5E5E5">it's of all the</font><font color="#CCCCCC"> dev</font><font color="#E5E5E5"> suck up talks I've</font>

675
00:22:39,080 --> 00:22:42,049
seen<font color="#E5E5E5"> that's probably one of my favorite</font>

676
00:22:40,669 --> 00:22:45,460
so I would I would HIGHLY highly

677
00:22:42,049 --> 00:22:47,840
recommend that<font color="#E5E5E5"> one and it's on</font><font color="#CCCCCC"> YouTube</font>

678
00:22:45,460 --> 00:22:49,490
<font color="#CCCCCC">so</font><font color="#E5E5E5"> a quick case study we were brought in</font>

679
00:22:47,840 --> 00:22:51,168
<font color="#CCCCCC">by a company to</font><font color="#E5E5E5"> integrate fuzzing into</font>

680
00:22:49,490 --> 00:22:53,149
their<font color="#CCCCCC"> es s DLC</font><font color="#E5E5E5"> and I just wanted to talk</font>

681
00:22:51,169 --> 00:22:54,679
a bit<font color="#CCCCCC"> about that process so the</font>

682
00:22:53,149 --> 00:22:56,330
<font color="#E5E5E5">situation is they had a number of</font>

683
00:22:54,679 --> 00:22:58,520
services written in C<font color="#CCCCCC"> that was parsing</font>

684
00:22:56,330 --> 00:23:01,490
traffic from the internet<font color="#E5E5E5"> WebSocket</font>

685
00:22:58,520 --> 00:23:02,690
<font color="#CCCCCC">Jason etc they needed very high uptime</font>

686
00:23:01,490 --> 00:23:04,789
<font color="#E5E5E5">they were processing billions of</font>

687
00:23:02,690 --> 00:23:06,230
messages<font color="#CCCCCC"> a day and this</font><font color="#E5E5E5"> is what we did</font>

688
00:23:04,789 --> 00:23:08,390
<font color="#E5E5E5">so some of the challenges</font><font color="#CCCCCC"> where the code</font>

689
00:23:06,230 --> 00:23:10,250
was very tightly coupled so it was hard

690
00:23:08,390 --> 00:23:12,710
<font color="#CCCCCC">to write some good test</font><font color="#E5E5E5"> harnesses by</font>

691
00:23:10,250 --> 00:23:14,450
test harness I mean essentially<font color="#E5E5E5"> it's</font>

692
00:23:12,710 --> 00:23:16,340
sort of a unit<font color="#E5E5E5"> test that tells the</font>

693
00:23:14,450 --> 00:23:17,600
fuzzer you know start here<font color="#E5E5E5"> and then this</font>

694
00:23:16,340 --> 00:23:18,830
<font color="#E5E5E5">is one functional area and then you</font>

695
00:23:17,600 --> 00:23:20,418
<font color="#CCCCCC">write another test harness or another</font>

696
00:23:18,830 --> 00:23:21,860
<font color="#E5E5E5">functional area and the idea is by</font>

697
00:23:20,419 --> 00:23:23,870
having<font color="#E5E5E5"> a set of test harnesses you can</font>

698
00:23:21,860 --> 00:23:26,570
have the<font color="#E5E5E5"> fuzzer get good coverage</font><font color="#CCCCCC"> of</font><font color="#E5E5E5"> all</font>

699
00:23:23,870 --> 00:23:27,889
<font color="#E5E5E5">of</font><font color="#CCCCCC"> a complex</font><font color="#E5E5E5"> application and also they</font>

700
00:23:26,570 --> 00:23:30,289
wanted us to<font color="#CCCCCC"> sort of</font><font color="#E5E5E5"> scale this across</font><font color="#CCCCCC"> a</font>

701
00:23:27,890 --> 00:23:31,940
<font color="#CCCCCC">cluster of</font><font color="#E5E5E5"> machines</font><font color="#CCCCCC"> so the first thing</font>

702
00:23:30,289 --> 00:23:33,529
we<font color="#E5E5E5"> did was sort</font><font color="#CCCCCC"> of understand the</font><font color="#E5E5E5"> code</font>

703
00:23:31,940 --> 00:23:34,789
<font color="#CCCCCC">right separate harnesses for different</font>

704
00:23:33,529 --> 00:23:36,529
functional<font color="#CCCCCC"> areas to make</font><font color="#E5E5E5"> sure we were</font>

705
00:23:34,789 --> 00:23:38,179
getting good<font color="#CCCCCC"> coverage we set up a</font>

706
00:23:36,529 --> 00:23:40,309
fuzzing cluster that continuously fuzzed

707
00:23:38,179 --> 00:23:42,260
<font color="#E5E5E5">new builds as soon as they were released</font>

708
00:23:40,309 --> 00:23:44,658
<font color="#E5E5E5">based on various priority metrics so is</font>

709
00:23:42,260 --> 00:23:46,549
this<font color="#CCCCCC"> internet</font><font color="#E5E5E5"> facing how important is</font>

710
00:23:44,659 --> 00:23:47,990
<font color="#E5E5E5">this service things like that and then</font>

711
00:23:46,549 --> 00:23:49,908
we made a table<font color="#E5E5E5"> for the development team</font>

712
00:23:47,990 --> 00:23:51,590
<font color="#CCCCCC">that was essentially if you change</font><font color="#E5E5E5"> this</font>

713
00:23:49,909 --> 00:23:52,789
part of the code<font color="#E5E5E5"> run this test harness</font>

714
00:23:51,590 --> 00:23:55,070
so they can make<font color="#CCCCCC"> sure that they're</font>

715
00:23:52,789 --> 00:23:58,640
focusing their fuzzing efforts<font color="#E5E5E5"> on where</font>

716
00:23:55,070 --> 00:23:59,990
it's most impactful<font color="#E5E5E5"> so some</font><font color="#CCCCCC"> things they</font>

717
00:23:58,640 --> 00:24:01,789
added after we left<font color="#E5E5E5"> that we didn't have</font>

718
00:23:59,990 --> 00:24:03,980
time to<font color="#CCCCCC"> get to</font><font color="#E5E5E5"> during the scope of the</font>

719
00:24:01,789 --> 00:24:05,809
engagement is they set up<font color="#E5E5E5"> some process</font>

720
00:24:03,980 --> 00:24:07,549
such<font color="#E5E5E5"> that every time a crash was</font>

721
00:24:05,809 --> 00:24:09,168
detected it would automatically create a

722
00:24:07,549 --> 00:24:11,360
JIRA ticket<font color="#E5E5E5"> with the test input that</font>

723
00:24:09,169 --> 00:24:12,890
caused it<font color="#E5E5E5"> in the stack trace and then</font>

724
00:24:11,360 --> 00:24:14,449
assign it<font color="#CCCCCC"> to the project</font><font color="#E5E5E5"> owner so they</font>

725
00:24:12,890 --> 00:24:15,980
could say you<font color="#E5E5E5"> know run this on this</font>

726
00:24:14,450 --> 00:24:17,870
specific build and it'll cause a crash

727
00:24:15,980 --> 00:24:19,159
<font color="#E5E5E5">and here's what we saw and also you want</font>

728
00:24:17,870 --> 00:24:20,899
<font color="#CCCCCC">to</font><font color="#E5E5E5"> do some work and deduplicating</font>

729
00:24:19,159 --> 00:24:24,140
identical crashes to make it<font color="#E5E5E5"> more</font>

730
00:24:20,899 --> 00:24:25,520
actionable so some<font color="#E5E5E5"> lessons</font><font color="#CCCCCC"> learned this</font>

731
00:24:24,140 --> 00:24:26,960
<font color="#E5E5E5">isn't</font><font color="#CCCCCC"> surprising ideally there's a</font>

732
00:24:25,520 --> 00:24:29,090
constant dialogue<font color="#CCCCCC"> between the</font><font color="#E5E5E5"> security</font>

733
00:24:26,960 --> 00:24:30,860
and<font color="#E5E5E5"> the development team</font><font color="#CCCCCC"> this can make</font>

734
00:24:29,090 --> 00:24:32,918
things<font color="#E5E5E5"> a lot easier for example if you</font>

735
00:24:30,860 --> 00:24:35,149
work with<font color="#CCCCCC"> them to establish</font><font color="#E5E5E5"> a clean API</font>

736
00:24:32,919 --> 00:24:36,900
<font color="#CCCCCC">it makes it much easier to fuzz and</font>

737
00:24:35,149 --> 00:24:38,699
again I<font color="#E5E5E5"> mentioned this earlier</font>

738
00:24:36,900 --> 00:24:40,230
but the dev team<font color="#E5E5E5"> really appreciated the</font>

739
00:24:38,700 --> 00:24:41,340
bugs<font color="#CCCCCC"> not just for the security but</font>

740
00:24:40,230 --> 00:24:43,890
because we were<font color="#CCCCCC"> helping them make their</font>

741
00:24:41,340 --> 00:24:45,870
code better and<font color="#CCCCCC"> more robust I think in</font>

742
00:24:43,890 --> 00:24:49,830
the<font color="#E5E5E5"> first two or</font><font color="#CCCCCC"> three days we</font><font color="#E5E5E5"> found 12</font>

743
00:24:45,870 --> 00:24:51,510
or<font color="#E5E5E5"> 13 unique crashes which was not found</font>

744
00:24:49,830 --> 00:24:53,159
by internal testing or unit tests<font color="#E5E5E5"> and</font>

745
00:24:51,510 --> 00:24:55,379
<font color="#E5E5E5">things like that so</font><font color="#CCCCCC"> they they were</font>

746
00:24:53,160 --> 00:24:57,060
really<font color="#E5E5E5"> happy about that some open</font>

747
00:24:55,380 --> 00:24:58,920
problems<font color="#CCCCCC"> this is not specific just to</font>

748
00:24:57,060 --> 00:25:00,570
<font color="#CCCCCC">this but just in fuzzing in general like</font>

749
00:24:58,920 --> 00:25:01,770
how long<font color="#CCCCCC"> do you fuzz</font>

750
00:25:00,570 --> 00:25:03,360
<font color="#E5E5E5">is it possible to automatically</font>

751
00:25:01,770 --> 00:25:05,250
programmatically only fuzz newly

752
00:25:03,360 --> 00:25:07,320
modified code<font color="#E5E5E5"> these</font><font color="#CCCCCC"> are some</font><font color="#E5E5E5"> interesting</font>

753
00:25:05,250 --> 00:25:08,490
problems<font color="#CCCCCC"> for future work and I'm the one</font>

754
00:25:07,320 --> 00:25:10,409
<font color="#E5E5E5">talking about</font><font color="#CCCCCC"> it but</font><font color="#E5E5E5"> really the people</font>

755
00:25:08,490 --> 00:25:14,520
<font color="#E5E5E5">who deserve credit are ryan Sullivan and</font>

756
00:25:10,410 --> 00:25:15,990
Gabe<font color="#E5E5E5"> pike</font><font color="#CCCCCC"> okay so a lot of people are</font>

757
00:25:14,520 --> 00:25:17,510
not<font color="#CCCCCC"> happy with</font><font color="#E5E5E5"> existing tools and they</font>

758
00:25:15,990 --> 00:25:20,940
want<font color="#E5E5E5"> to write some</font><font color="#CCCCCC"> of their own</font><font color="#E5E5E5"> so</font>

759
00:25:17,510 --> 00:25:22,410
here's some<font color="#CCCCCC"> here's some best practices I</font>

760
00:25:20,940 --> 00:25:24,270
would<font color="#E5E5E5"> encourage you rather than building</font>

761
00:25:22,410 --> 00:25:25,950
or using or building one tool that<font color="#E5E5E5"> tries</font>

762
00:25:24,270 --> 00:25:28,650
to<font color="#CCCCCC"> find</font><font color="#E5E5E5"> everything instead focus on</font>

763
00:25:25,950 --> 00:25:31,020
solving one class<font color="#CCCCCC"> of vulnerability</font><font color="#E5E5E5"> very</font>

764
00:25:28,650 --> 00:25:32,700
well<font color="#E5E5E5"> and you may want</font><font color="#CCCCCC"> to</font><font color="#E5E5E5"> say oh let's</font>

765
00:25:31,020 --> 00:25:34,050
just find the<font color="#E5E5E5"> most severe first that's a</font>

766
00:25:32,700 --> 00:25:36,300
good place to<font color="#E5E5E5"> start but I would</font>

767
00:25:34,050 --> 00:25:38,610
encourage<font color="#E5E5E5"> you instead</font><font color="#CCCCCC"> to think</font><font color="#E5E5E5"> you know</font>

768
00:25:36,300 --> 00:25:40,500
<font color="#E5E5E5">yes how severe is it but also how</font>

769
00:25:38,610 --> 00:25:42,510
precisely<font color="#E5E5E5"> can we find this like can</font><font color="#CCCCCC"> we</font>

770
00:25:40,500 --> 00:25:44,730
find a tool that finds this bug class

771
00:25:42,510 --> 00:25:45,960
with few<font color="#CCCCCC"> to no false positives</font><font color="#E5E5E5"> such that</font>

772
00:25:44,730 --> 00:25:47,310
we can essentially report<font color="#CCCCCC"> results</font>

773
00:25:45,960 --> 00:25:50,070
directly<font color="#E5E5E5"> to developers without the</font>

774
00:25:47,310 --> 00:25:52,110
<font color="#E5E5E5">security team vetting so even if this is</font>

775
00:25:50,070 --> 00:25:54,090
a low<font color="#E5E5E5"> severity issue if you can find it</font>

776
00:25:52,110 --> 00:25:56,399
100%<font color="#E5E5E5"> of the time all the time and never</font>

777
00:25:54,090 --> 00:25:58,350
be wrong then essentially<font color="#E5E5E5"> you can wipe</font>

778
00:25:56,400 --> 00:25:59,550
<font color="#E5E5E5">this across a bug off and not have to</font>

779
00:25:58,350 --> 00:26:01,050
worry about<font color="#E5E5E5"> it and then redouble all</font>

780
00:25:59,550 --> 00:26:02,909
those other efforts on solving<font color="#E5E5E5"> the</font>

781
00:26:01,050 --> 00:26:05,639
remaining and then choose another<font color="#CCCCCC"> bug</font>

782
00:26:02,910 --> 00:26:06,750
class and repeat<font color="#E5E5E5"> and ideally whenever</font>

783
00:26:05,640 --> 00:26:10,080
you send something<font color="#E5E5E5"> to the development</font>

784
00:26:06,750 --> 00:26:12,000
team it's<font color="#CCCCCC"> very high signal right so</font>

785
00:26:10,080 --> 00:26:13,530
again<font color="#CCCCCC"> the large company did this they</font>

786
00:26:12,000 --> 00:26:14,940
have tens hundreds of thousands of

787
00:26:13,530 --> 00:26:17,070
services they attack one class<font color="#CCCCCC"> of bugs</font>

788
00:26:14,940 --> 00:26:20,250
<font color="#E5E5E5">at a time and one thing</font><font color="#CCCCCC"> that was</font>

789
00:26:17,070 --> 00:26:23,820
<font color="#CCCCCC">interesting is they allow anyone to add</font>

790
00:26:20,250 --> 00:26:25,140
new rules<font color="#E5E5E5"> to be checked but if a rule</font>

791
00:26:23,820 --> 00:26:27,300
has<font color="#CCCCCC"> been flagged too</font><font color="#E5E5E5"> many times is</font>

792
00:26:25,140 --> 00:26:28,650
having too many<font color="#E5E5E5"> false</font><font color="#CCCCCC"> positives</font><font color="#E5E5E5"> it will</font>

793
00:26:27,300 --> 00:26:30,450
automatically<font color="#E5E5E5"> turn itself off and like</font>

794
00:26:28,650 --> 00:26:33,240
stop bothering other<font color="#E5E5E5"> people so I thought</font>

795
00:26:30,450 --> 00:26:36,510
that<font color="#E5E5E5"> was nice okay</font><font color="#CCCCCC"> we're reaching</font><font color="#E5E5E5"> the</font>

796
00:26:33,240 --> 00:26:38,730
<font color="#CCCCCC">homestretch so some infrastructure best</font>

797
00:26:36,510 --> 00:26:40,950
practices<font color="#E5E5E5"> many organizations are</font><font color="#CCCCCC"> using</font>

798
00:26:38,730 --> 00:26:43,080
config management tools like<font color="#E5E5E5"> puppet chef</font>

799
00:26:40,950 --> 00:26:45,690
etc<font color="#E5E5E5"> which makes the configuration of</font>

800
00:26:43,080 --> 00:26:47,639
servers declarative and reproducible and

801
00:26:45,690 --> 00:26:49,110
in version<font color="#CCCCCC"> control so you</font><font color="#E5E5E5"> can check so</font>

802
00:26:47,640 --> 00:26:50,520
this makes<font color="#E5E5E5"> it easy</font><font color="#CCCCCC"> for example if a</font>

803
00:26:49,110 --> 00:26:52,800
server reaches an

804
00:26:50,520 --> 00:26:54,360
clean<font color="#CCCCCC"> state for example someone SS HSN</font>

805
00:26:52,800 --> 00:26:55,340
<font color="#E5E5E5">it makes it very easy</font><font color="#CCCCCC"> to</font><font color="#E5E5E5"> wipe in a</font>

806
00:26:54,360 --> 00:26:57,510
reprovision

807
00:26:55,340 --> 00:26:58,709
ideally you're also providing<font color="#CCCCCC"> some sort</font>

808
00:26:57,510 --> 00:27:01,080
<font color="#CCCCCC">of</font><font color="#E5E5E5"> secret</font><font color="#CCCCCC"> management service that</font>

809
00:26:58,710 --> 00:27:03,000
developers<font color="#E5E5E5"> can use so that they don't</font>

810
00:27:01,080 --> 00:27:05,280
<font color="#E5E5E5">have to roll their own which</font><font color="#CCCCCC"> is hard</font><font color="#E5E5E5"> in</font>

811
00:27:03,000 --> 00:27:07,800
as an additional hardening step you can

812
00:27:05,280 --> 00:27:09,510
roll out mutual<font color="#E5E5E5"> TLS using certs between</font>

813
00:27:07,800 --> 00:27:13,470
internal<font color="#E5E5E5"> services not</font><font color="#CCCCCC"> just externally</font>

814
00:27:09,510 --> 00:27:16,050
facing so a couple<font color="#E5E5E5"> of cool tools both</font>

815
00:27:13,470 --> 00:27:19,260
from Netflix<font color="#E5E5E5"> so the first is repo kid so</font>

816
00:27:16,050 --> 00:27:21,600
when a developer<font color="#E5E5E5"> releases a new service</font>

817
00:27:19,260 --> 00:27:23,190
at Netflix<font color="#E5E5E5"> it's granted a base set of</font>

818
00:27:21,600 --> 00:27:25,260
<font color="#CCCCCC">eight abuse permissions just by default</font>

819
00:27:23,190 --> 00:27:27,420
and then what repo kit does is it

820
00:27:25,260 --> 00:27:29,580
watches how this app behaves<font color="#CCCCCC"> over time</font>

821
00:27:27,420 --> 00:27:30,990
and then gradually starts removing AWS

822
00:27:29,580 --> 00:27:32,520
permissions<font color="#E5E5E5"> that it doesn't think it</font>

823
00:27:30,990 --> 00:27:35,160
needs based on<font color="#E5E5E5"> the API calls and what</font>

824
00:27:32,520 --> 00:27:36,810
it's<font color="#E5E5E5"> doing and essentially if removing a</font>

825
00:27:35,160 --> 00:27:38,580
permission causes it<font color="#CCCCCC"> to crash</font><font color="#E5E5E5"> it then</font>

826
00:27:36,810 --> 00:27:40,320
rolls that back and<font color="#CCCCCC"> gives it</font><font color="#E5E5E5"> back so</font>

827
00:27:38,580 --> 00:27:42,419
what's incredibly cool about this is

828
00:27:40,320 --> 00:27:44,159
<font color="#E5E5E5">that applications eventually reach a</font>

829
00:27:42,420 --> 00:27:46,230
steady state<font color="#CCCCCC"> of least privilege with</font>

830
00:27:44,160 --> 00:27:47,520
minimal security<font color="#E5E5E5"> team interaction right</font>

831
00:27:46,230 --> 00:27:49,170
<font color="#E5E5E5">so there's no meeting up front before</font>

832
00:27:47,520 --> 00:27:50,790
<font color="#CCCCCC">you</font><font color="#E5E5E5"> did the work saying like I hey what</font>

833
00:27:49,170 --> 00:27:51,900
do<font color="#E5E5E5"> you need to do okay</font><font color="#CCCCCC"> based</font><font color="#E5E5E5"> on what</font>

834
00:27:50,790 --> 00:27:53,730
you've described I<font color="#CCCCCC"> think that you need</font>

835
00:27:51,900 --> 00:27:55,830
these permissions<font color="#E5E5E5"> and at the same</font><font color="#CCCCCC"> time</font>

836
00:27:53,730 --> 00:27:57,240
the developers<font color="#E5E5E5"> don't need extensive</font>

837
00:27:55,830 --> 00:27:59,909
understanding<font color="#E5E5E5"> of AWS permissions which</font>

838
00:27:57,240 --> 00:28:01,200
is pretty complex<font color="#E5E5E5"> right so essentially</font>

839
00:27:59,910 --> 00:28:03,540
by<font color="#CCCCCC"> doing nothing but having</font><font color="#E5E5E5"> good</font>

840
00:28:01,200 --> 00:28:05,670
infrastructure<font color="#E5E5E5"> they can over time have</font>

841
00:28:03,540 --> 00:28:06,899
all their services<font color="#E5E5E5"> reach this nice</font><font color="#CCCCCC"> at</font>

842
00:28:05,670 --> 00:28:09,230
least<font color="#CCCCCC"> privileged state and I think there</font>

843
00:28:06,900 --> 00:28:11,910
is<font color="#E5E5E5"> some new stuff in this area</font><font color="#CCCCCC"> to come</font>

844
00:28:09,230 --> 00:28:13,110
the other<font color="#E5E5E5"> tools chaos monkey so many</font>

845
00:28:11,910 --> 00:28:15,390
<font color="#E5E5E5">people have heard of this but the</font><font color="#CCCCCC"> idea</font>

846
00:28:13,110 --> 00:28:18,389
is<font color="#E5E5E5"> they</font><font color="#CCCCCC"> force</font><font color="#E5E5E5"> developers to build robust</font>

847
00:28:15,390 --> 00:28:20,220
apps by programmatically just shutting

848
00:28:18,390 --> 00:28:21,960
down instances of a service and may

849
00:28:20,220 --> 00:28:24,240
forcing them to<font color="#CCCCCC"> be very robust in</font><font color="#E5E5E5"> the</font>

850
00:28:21,960 --> 00:28:27,690
<font color="#E5E5E5">face</font><font color="#CCCCCC"> of random failures so what I like</font>

851
00:28:24,240 --> 00:28:29,040
<font color="#E5E5E5">about this is rather than say having the</font>

852
00:28:27,690 --> 00:28:30,300
developer build something<font color="#E5E5E5"> and then</font>

853
00:28:29,040 --> 00:28:32,909
afterwards you<font color="#E5E5E5"> come to them and say hey</font>

854
00:28:30,300 --> 00:28:34,889
<font color="#CCCCCC">you need to do this - essentially you're</font>

855
00:28:32,910 --> 00:28:37,620
making your assumptions<font color="#E5E5E5"> and requirements</font>

856
00:28:34,890 --> 00:28:40,890
explicit<font color="#CCCCCC"> upfront</font><font color="#E5E5E5"> specified in code and</font>

857
00:28:37,620 --> 00:28:42,300
then making them test that from the

858
00:28:40,890 --> 00:28:45,500
beginning<font color="#CCCCCC"> rather than sort of ex post</font>

859
00:28:42,300 --> 00:28:45,500
<font color="#E5E5E5">facto making them do more work</font>

860
00:28:49,660 --> 00:28:54,680
<font color="#CCCCCC">okay</font><font color="#E5E5E5"> so let's talk a bit</font><font color="#CCCCCC"> about detecting</font>

861
00:28:52,970 --> 00:28:56,420
<font color="#E5E5E5">attacks at</font><font color="#CCCCCC"> run time so one</font><font color="#E5E5E5"> idea is</font>

862
00:28:54,680 --> 00:28:58,250
having<font color="#E5E5E5"> canary is either on servers or</font>

863
00:28:56,420 --> 00:29:00,920
laptops<font color="#CCCCCC"> something that</font><font color="#E5E5E5"> looks</font><font color="#CCCCCC"> juicy for</font>

864
00:28:58,250 --> 00:29:02,780
example and AWS access token<font color="#E5E5E5"> credit</font>

865
00:29:00,920 --> 00:29:03,920
cards things like that<font color="#CCCCCC"> a couple of</font>

866
00:29:02,780 --> 00:29:05,930
companies<font color="#E5E5E5"> are doing this which i</font><font color="#CCCCCC"> think</font>

867
00:29:03,920 --> 00:29:07,760
is pretty<font color="#E5E5E5"> neat on their website and the</font>

868
00:29:05,930 --> 00:29:09,560
login<font color="#E5E5E5"> page or in the company logos they</font>

869
00:29:07,760 --> 00:29:12,260
have some<font color="#CCCCCC"> JavaScript</font><font color="#E5E5E5"> that essentially if</font>

870
00:29:09,560 --> 00:29:13,730
an attacker were to mirror<font color="#E5E5E5"> that page for</font>

871
00:29:12,260 --> 00:29:15,320
<font color="#CCCCCC">example for a phishing attack if they</font>

872
00:29:13,730 --> 00:29:17,240
<font color="#E5E5E5">hosted somewhere else the JavaScript and</font>

873
00:29:15,320 --> 00:29:19,010
<font color="#E5E5E5">the page</font><font color="#CCCCCC"> will send some telemetry</font><font color="#E5E5E5"> back</font>

874
00:29:17,240 --> 00:29:20,540
<font color="#E5E5E5">to the app psych team that says hey did</font>

875
00:29:19,010 --> 00:29:22,610
<font color="#E5E5E5">you know your login page is hosted on an</font>

876
00:29:20,540 --> 00:29:24,379
attacker<font color="#CCCCCC"> comm you probably didn't mean</font>

877
00:29:22,610 --> 00:29:26,540
that<font color="#E5E5E5"> you should check it out so you sort</font>

878
00:29:24,380 --> 00:29:30,980
of get this<font color="#E5E5E5"> a live</font><font color="#CCCCCC"> feedback</font><font color="#E5E5E5"> on if people</font>

879
00:29:26,540 --> 00:29:32,960
are naively copying your assets<font color="#CCCCCC"> this</font><font color="#E5E5E5"> one</font>

880
00:29:30,980 --> 00:29:35,060
is also pretty<font color="#E5E5E5"> cool overriding runtime</font>

881
00:29:32,960 --> 00:29:36,830
environment to detect code<font color="#CCCCCC"> injection</font><font color="#E5E5E5"> so</font>

882
00:29:35,060 --> 00:29:38,270
the idea here<font color="#E5E5E5"> is</font><font color="#CCCCCC"> this one company</font><font color="#E5E5E5"> looked</font>

883
00:29:36,830 --> 00:29:40,639
across all of their<font color="#CCCCCC"> front-end code and</font>

884
00:29:38,270 --> 00:29:42,770
found<font color="#CCCCCC"> do we ever legitimately use alert</font>

885
00:29:40,640 --> 00:29:44,150
<font color="#E5E5E5">and the answer was no so</font><font color="#CCCCCC"> essentially</font>

886
00:29:42,770 --> 00:29:45,980
what they did<font color="#E5E5E5"> is in JavaScript they</font>

887
00:29:44,150 --> 00:29:48,110
programmatically overrode it<font color="#E5E5E5"> such</font><font color="#CCCCCC"> that</font>

888
00:29:45,980 --> 00:29:50,510
in<font color="#E5E5E5"> JavaScript when alert has ever called</font>

889
00:29:48,110 --> 00:29:52,760
it first sends some innocuous telemetry

890
00:29:50,510 --> 00:29:55,580
<font color="#E5E5E5">back to the app</font><font color="#CCCCCC"> site team and says hey</font>

891
00:29:52,760 --> 00:29:57,140
you know<font color="#E5E5E5"> this user on this page</font><font color="#CCCCCC"> and this</font>

892
00:29:55,580 --> 00:29:59,780
other meta information<font color="#CCCCCC"> just triggered an</font>

893
00:29:57,140 --> 00:30:02,210
alert<font color="#E5E5E5"> and then it triggers an alert so</font>

894
00:29:59,780 --> 00:30:05,120
the user sees it<font color="#E5E5E5"> so basically what</font>

895
00:30:02,210 --> 00:30:06,320
happened was<font color="#E5E5E5"> they were doing a business</font>

896
00:30:05,120 --> 00:30:07,729
<font color="#E5E5E5">deal with another</font><font color="#CCCCCC"> company</font><font color="#E5E5E5"> and that</font>

897
00:30:06,320 --> 00:30:09,740
company without telling them engaged

898
00:30:07,730 --> 00:30:11,930
<font color="#E5E5E5">this third party pentest</font><font color="#CCCCCC"> firm to test</font>

899
00:30:09,740 --> 00:30:13,820
their site and as the<font color="#E5E5E5"> person was doing</font>

900
00:30:11,930 --> 00:30:15,110
<font color="#E5E5E5">it he ended up finding he or she ended</font>

901
00:30:13,820 --> 00:30:18,560
<font color="#E5E5E5">up finding a cross-site scripting</font>

902
00:30:15,110 --> 00:30:19,909
vulnerability and essentially the app

903
00:30:18,560 --> 00:30:20,659
sect team knew about<font color="#E5E5E5"> it</font><font color="#CCCCCC"> immediately as</font>

904
00:30:19,910 --> 00:30:22,610
<font color="#CCCCCC">soon as it happens</font>

905
00:30:20,660 --> 00:30:24,020
and they actually<font color="#E5E5E5"> fixed it and rolled it</font>

906
00:30:22,610 --> 00:30:25,729
out to<font color="#CCCCCC"> production</font><font color="#E5E5E5"> you know in like an</font>

907
00:30:24,020 --> 00:30:27,560
hour after<font color="#E5E5E5"> it was found so by the time</font>

908
00:30:25,730 --> 00:30:28,760
the other party<font color="#CCCCCC"> was like</font><font color="#E5E5E5"> hey by the way</font>

909
00:30:27,560 --> 00:30:32,330
you have this vulnerability<font color="#E5E5E5"> if they were</font>

910
00:30:28,760 --> 00:30:34,490
like what vulnerability it's fine and

911
00:30:32,330 --> 00:30:37,070
yeah<font color="#E5E5E5"> and</font><font color="#CCCCCC"> Zane</font><font color="#E5E5E5"> lackeys talk at blackhat</font>

912
00:30:34,490 --> 00:30:40,060
<font color="#CCCCCC">he was one of the early</font><font color="#E5E5E5"> people doing</font>

913
00:30:37,070 --> 00:30:42,980
this at Etsy back there back in<font color="#CCCCCC"> the day</font>

914
00:30:40,060 --> 00:30:44,450
<font color="#CCCCCC">so conceptually I think</font><font color="#E5E5E5"> this also could</font>

915
00:30:42,980 --> 00:30:46,910
<font color="#CCCCCC">be done with other server-side languages</font>

916
00:30:44,450 --> 00:30:48,830
such as Ruby<font color="#CCCCCC"> and Python</font><font color="#E5E5E5"> so say for</font>

917
00:30:46,910 --> 00:30:50,840
example<font color="#CCCCCC"> you</font><font color="#E5E5E5"> have a service</font><font color="#CCCCCC"> that</font><font color="#E5E5E5"> never</font>

918
00:30:48,830 --> 00:30:52,540
rests the file system or never shell

919
00:30:50,840 --> 00:30:54,439
execs<font color="#E5E5E5"> in theory you could</font>

920
00:30:52,540 --> 00:30:56,899
programmatically<font color="#E5E5E5"> at runtime overwrite</font>

921
00:30:54,440 --> 00:30:58,670
those methods such that any time someone

922
00:30:56,900 --> 00:31:00,780
<font color="#E5E5E5">tries to open a file or write a file or</font>

923
00:30:58,670 --> 00:31:02,660
things like<font color="#CCCCCC"> that via some sort of code</font>

924
00:31:00,780 --> 00:31:05,460
Injection attack<font color="#CCCCCC"> however they get it</font>

925
00:31:02,660 --> 00:31:07,140
<font color="#CCCCCC">instead of doing it instead you've said</font>

926
00:31:05,460 --> 00:31:09,330
<font color="#E5E5E5">and telemetry back to the app site team</font>

927
00:31:07,140 --> 00:31:12,270
and you raise an exception<font color="#E5E5E5"> or fail or</font>

928
00:31:09,330 --> 00:31:14,310
something like<font color="#E5E5E5"> that another</font><font color="#CCCCCC"> example a</font>

929
00:31:12,270 --> 00:31:17,360
<font color="#CCCCCC">company wrote an XML parsing</font><font color="#E5E5E5"> wrapper</font>

930
00:31:14,310 --> 00:31:19,139
library<font color="#E5E5E5"> that mitigates xxe so</font>

931
00:31:17,360 --> 00:31:21,780
essentially when<font color="#CCCCCC"> everywhere</font><font color="#E5E5E5"> whenever</font>

932
00:31:19,140 --> 00:31:23,340
<font color="#CCCCCC">anyone tries to provide some input that</font>

933
00:31:21,780 --> 00:31:25,770
<font color="#CCCCCC">causes them to reach out to some</font>

934
00:31:23,340 --> 00:31:28,620
external<font color="#E5E5E5"> party they log that and send</font>

935
00:31:25,770 --> 00:31:30,900
<font color="#E5E5E5">telemetry back</font><font color="#CCCCCC"> so again key lesson here</font>

936
00:31:28,620 --> 00:31:33,510
they got the developers to buy into<font color="#E5E5E5"> this</font>

937
00:31:30,900 --> 00:31:34,800
very easily because they said hey<font color="#E5E5E5"> we're</font>

938
00:31:33,510 --> 00:31:37,560
<font color="#E5E5E5">gonna give you a</font><font color="#CCCCCC"> bunch of nice telemetry</font>

939
00:31:34,800 --> 00:31:39,030
<font color="#CCCCCC">oh</font><font color="#E5E5E5"> by the way it's more secure so the</font>

940
00:31:37,560 --> 00:31:40,620
<font color="#E5E5E5">developers wanted performance</font>

941
00:31:39,030 --> 00:31:42,030
information<font color="#CCCCCC"> and</font><font color="#E5E5E5"> telemetry and</font><font color="#CCCCCC"> they</font><font color="#E5E5E5"> got</font>

942
00:31:40,620 --> 00:31:45,000
that in addition to<font color="#CCCCCC"> security</font><font color="#E5E5E5"> so</font>

943
00:31:42,030 --> 00:31:47,160
<font color="#E5E5E5">something to keep in mind</font><font color="#CCCCCC"> also a</font><font color="#E5E5E5"> bunch</font>

944
00:31:45,000 --> 00:31:48,840
of security tools have<font color="#CCCCCC"> user agent tells</font>

945
00:31:47,160 --> 00:31:53,310
unless you configure<font color="#CCCCCC"> it so this is sort</font>

946
00:31:48,840 --> 00:31:54,899
of a<font color="#CCCCCC"> trivial thing to look for it ok so</font>

947
00:31:53,310 --> 00:31:56,429
one of the<font color="#E5E5E5"> last things you can have</font>

948
00:31:54,900 --> 00:31:58,170
systems<font color="#E5E5E5"> that detect when security</font>

949
00:31:56,430 --> 00:32:01,200
policies are violated<font color="#E5E5E5"> and essentially</font>

950
00:31:58,170 --> 00:32:03,060
<font color="#CCCCCC">auto remediate</font><font color="#E5E5E5"> so for example if you</font>

951
00:32:01,200 --> 00:32:05,160
think<font color="#E5E5E5"> you know our AWS cloud trailer</font>

952
00:32:03,060 --> 00:32:06,750
should always be enabled so for example

953
00:32:05,160 --> 00:32:08,670
an attacker who's gotten in who wants to

954
00:32:06,750 --> 00:32:10,620
disable this<font color="#E5E5E5"> to avoid detection</font>

955
00:32:08,670 --> 00:32:13,170
this company has an<font color="#CCCCCC"> AWS</font><font color="#E5E5E5"> lambda which</font>

956
00:32:10,620 --> 00:32:16,229
will<font color="#E5E5E5"> auto re-enable it immediately and</font>

957
00:32:13,170 --> 00:32:18,180
<font color="#E5E5E5">also alert the security</font><font color="#CCCCCC"> team or you</font>

958
00:32:16,230 --> 00:32:19,740
might<font color="#E5E5E5"> have a policy</font><font color="#CCCCCC"> that</font><font color="#E5E5E5"> says AWS</font>

959
00:32:18,180 --> 00:32:21,150
instances should not be accessible on

960
00:32:19,740 --> 00:32:22,410
all ports<font color="#CCCCCC"> of the internet</font><font color="#E5E5E5"> if this</font>

961
00:32:21,150 --> 00:32:24,720
happens it's probably an accident<font color="#E5E5E5"> we</font>

962
00:32:22,410 --> 00:32:27,000
never want this to<font color="#E5E5E5"> happen so basically</font>

963
00:32:24,720 --> 00:32:28,800
this company<font color="#E5E5E5"> whenever an AWS instance is</font>

964
00:32:27,000 --> 00:32:30,720
spun up with this insecure network

965
00:32:28,800 --> 00:32:32,760
configuration and AWS lambda will

966
00:32:30,720 --> 00:32:34,650
<font color="#CCCCCC">immediately shut it down</font><font color="#E5E5E5"> so the the</font>

967
00:32:32,760 --> 00:32:36,240
window<font color="#E5E5E5"> even if a developer accidentally</font>

968
00:32:34,650 --> 00:32:36,690
does something it shuts it<font color="#CCCCCC"> down</font>

969
00:32:36,240 --> 00:32:39,030
immediately

970
00:32:36,690 --> 00:32:40,950
<font color="#E5E5E5">so data dog has a blog post or they</font>

971
00:32:39,030 --> 00:32:43,200
<font color="#CCCCCC">talked about</font><font color="#E5E5E5"> this area a bit more which</font>

972
00:32:40,950 --> 00:32:44,910
<font color="#CCCCCC">is also</font><font color="#E5E5E5"> cool to check out some sort of</font>

973
00:32:43,200 --> 00:32:46,530
<font color="#E5E5E5">the core takeaway here is are there</font><font color="#CCCCCC"> some</font>

974
00:32:44,910 --> 00:32:48,330
things about<font color="#E5E5E5"> your</font><font color="#CCCCCC"> environment</font><font color="#E5E5E5"> which</font>

975
00:32:46,530 --> 00:32:50,010
essentially should<font color="#E5E5E5"> always be true such</font>

976
00:32:48,330 --> 00:32:51,750
that<font color="#E5E5E5"> if it's not true really we should</font>

977
00:32:50,010 --> 00:32:52,860
fix it automatically<font color="#E5E5E5"> as</font><font color="#CCCCCC"> soon as possible</font>

978
00:32:51,750 --> 00:32:54,630
there's never a case where<font color="#CCCCCC"> there should</font>

979
00:32:52,860 --> 00:32:56,520
<font color="#E5E5E5">not be</font><font color="#CCCCCC"> true</font><font color="#E5E5E5"> think if there's a way where</font>

980
00:32:54,630 --> 00:32:58,800
you<font color="#E5E5E5"> can you know first detect when this</font>

981
00:32:56,520 --> 00:33:01,139
ever changes and then second can you

982
00:32:58,800 --> 00:33:02,340
programmatically change it back again

983
00:33:01,140 --> 00:33:05,550
you have to<font color="#E5E5E5"> make sure that this can't</font>

984
00:33:02,340 --> 00:33:09,659
legitimately<font color="#E5E5E5"> be that way</font><font color="#CCCCCC"> all right</font><font color="#E5E5E5"> so</font>

985
00:33:05,550 --> 00:33:12,180
this<font color="#CCCCCC"> is pretty clustered but I tried to</font>

986
00:33:09,660 --> 00:33:13,950
<font color="#E5E5E5">put sort of like a tldr of everything as</font>

987
00:33:12,180 --> 00:33:16,250
much<font color="#E5E5E5"> as</font><font color="#CCCCCC"> possible on one page</font>

988
00:33:13,950 --> 00:33:18,570
<font color="#CCCCCC">I missed a lot</font><font color="#E5E5E5"> of stuff obviously but</font>

989
00:33:16,250 --> 00:33:22,230
yeah in case<font color="#E5E5E5"> you want everything in one</font>

990
00:33:18,570 --> 00:33:24,870
place<font color="#CCCCCC"> perhaps this is useful yeah so</font>

991
00:33:22,230 --> 00:33:27,990
this is largely what I have

992
00:33:24,870 --> 00:33:30,239
<font color="#CCCCCC">I blew through things extra quick</font>

993
00:33:27,990 --> 00:33:31,830
because<font color="#E5E5E5"> I knew we are tied on</font><font color="#CCCCCC"> timing</font><font color="#E5E5E5"> so</font>

994
00:33:30,240 --> 00:33:33,600
I'm building<font color="#E5E5E5"> a best practices</font><font color="#CCCCCC"> they're</font>

995
00:33:31,830 --> 00:33:37,049
<font color="#E5E5E5">sort of a dev</font><font color="#CCCCCC"> SEC</font><font color="#E5E5E5"> ops pro tips playbook</font>

996
00:33:33,600 --> 00:33:38,850
<font color="#CCCCCC">I would</font><font color="#E5E5E5"> love to chat with</font><font color="#CCCCCC"> you more</font><font color="#E5E5E5"> if</font>

997
00:33:37,049 --> 00:33:39,990
you<font color="#CCCCCC"> want to share how your</font><font color="#E5E5E5"> company does</font>

998
00:33:38,850 --> 00:33:41,668
things or if you want me to<font color="#E5E5E5"> let</font><font color="#CCCCCC"> you</font><font color="#E5E5E5"> know</font>

999
00:33:39,990 --> 00:33:43,320
when<font color="#E5E5E5"> I write blog posts or white papers</font>

1000
00:33:41,669 --> 00:33:45,799
on<font color="#E5E5E5"> this please let me know I would love</font>

1001
00:33:43,320 --> 00:33:48,418
to<font color="#E5E5E5"> chef I'm also available to chat</font><font color="#CCCCCC"> now</font>

1002
00:33:45,799 --> 00:33:49,620
<font color="#CCCCCC">and then you can go there for these</font>

1003
00:33:48,419 --> 00:33:52,320
slides<font color="#E5E5E5"> that</font><font color="#CCCCCC"> I'm currently presenting</font>

1004
00:33:49,620 --> 00:33:54,330
right now and yeah I think we have some

1005
00:33:52,320 --> 00:33:56,870
<font color="#E5E5E5">time for some</font><font color="#CCCCCC"> questions so I would love</font>

1006
00:33:54,330 --> 00:33:56,870
<font color="#E5E5E5">to hear from you</font>

1007
00:34:03,049 --> 00:34:07,519
thank you thank you<font color="#CCCCCC"> all right do we have</font>

1008
00:34:05,159 --> 00:34:07,519
<font color="#CCCCCC">any questions</font>

1009
00:34:13,639 --> 00:34:19,408
what would be<font color="#E5E5E5"> your</font><font color="#CCCCCC"> advice to</font><font color="#E5E5E5"> a brand new</font>

1010
00:34:16,350 --> 00:34:21,210
app<font color="#E5E5E5"> SEC team so let's say they've hired</font>

1011
00:34:19,409 --> 00:34:24,030
their first app<font color="#CCCCCC"> SEC person at a company</font>

1012
00:34:21,210 --> 00:34:25,620
and the company<font color="#CCCCCC"> is doing DevOps like</font>

1013
00:34:24,030 --> 00:34:26,940
what<font color="#E5E5E5"> would be the first one or</font><font color="#CCCCCC"> two</font>

1014
00:34:25,620 --> 00:34:30,600
<font color="#E5E5E5">things</font><font color="#CCCCCC"> you would suggest</font><font color="#E5E5E5"> that they do</font>

1015
00:34:26,940 --> 00:34:33,030
<font color="#E5E5E5">right</font><font color="#CCCCCC"> away for</font><font color="#E5E5E5"> big wins okay high ROI</font>

1016
00:34:30,600 --> 00:34:34,889
immediate big wins<font color="#E5E5E5"> for a new app</font><font color="#CCCCCC"> site</font>

1017
00:34:33,030 --> 00:34:37,679
program<font color="#E5E5E5"> mm-hmm</font>

1018
00:34:34,889 --> 00:34:39,540
I think the first thing<font color="#CCCCCC"> that might be</font>

1019
00:34:37,679 --> 00:34:43,470
<font color="#CCCCCC">useful is just really gauging where you</font>

1020
00:34:39,540 --> 00:34:47,850
are<font color="#CCCCCC"> so one thing that</font><font color="#E5E5E5"> I can I think</font><font color="#CCCCCC"> it'd</font>

1021
00:34:43,469 --> 00:34:49,560
be<font color="#CCCCCC"> useful is saying like</font><font color="#E5E5E5"> aggregating</font>

1022
00:34:47,850 --> 00:34:51,060
what vulnerabilities you're finding<font color="#E5E5E5"> out</font>

1023
00:34:49,560 --> 00:34:52,440
<font color="#E5E5E5">about and learning about from all the</font>

1024
00:34:51,060 --> 00:34:54,600
different sources so figure<font color="#E5E5E5"> out you know</font>

1025
00:34:52,440 --> 00:34:56,030
if<font color="#CCCCCC"> we're getting pen test or doing bug</font>

1026
00:34:54,600 --> 00:34:57,810
bounty or different things<font color="#E5E5E5"> like</font><font color="#CCCCCC"> that</font>

1027
00:34:56,030 --> 00:34:59,400
<font color="#CCCCCC">what are all the different bugs we're</font>

1028
00:34:57,810 --> 00:35:00,600
seeing where are they and sort<font color="#E5E5E5"> of what</font>

1029
00:34:59,400 --> 00:35:02,880
are their classes and then trying to

1030
00:35:00,600 --> 00:35:04,920
<font color="#E5E5E5">figure out basically where am I</font><font color="#CCCCCC"> gonna</font>

1031
00:35:02,880 --> 00:35:06,210
<font color="#E5E5E5">get the most value for my time so a lot</font>

1032
00:35:04,920 --> 00:35:08,550
<font color="#CCCCCC">of the things I talk about</font><font color="#E5E5E5"> they can get</font>

1033
00:35:06,210 --> 00:35:09,870
you huge<font color="#E5E5E5"> long term wins are these big</font>

1034
00:35:08,550 --> 00:35:12,150
security<font color="#E5E5E5"> engineering efforts that take</font>

1035
00:35:09,870 --> 00:35:13,740
<font color="#CCCCCC">even very good companies with senior</font>

1036
00:35:12,150 --> 00:35:18,690
developers like Netflix<font color="#CCCCCC"> like five years</font>

1037
00:35:13,740 --> 00:35:20,370
<font color="#CCCCCC">to build</font><font color="#E5E5E5"> yeah I guess I would say</font>

1038
00:35:18,690 --> 00:35:21,900
opening a bug bounty<font color="#E5E5E5"> program can be</font>

1039
00:35:20,370 --> 00:35:24,509
useful for<font color="#CCCCCC"> getting some continuous</font>

1040
00:35:21,900 --> 00:35:25,770
coverage<font color="#CCCCCC"> initially have a private</font>

1041
00:35:24,510 --> 00:35:27,600
program<font color="#E5E5E5"> with a small number of</font><font color="#CCCCCC"> people so</font>

1042
00:35:25,770 --> 00:35:29,520
<font color="#CCCCCC">you don't get a deluge</font><font color="#E5E5E5"> but that can be</font>

1043
00:35:27,600 --> 00:35:31,500
useful yeah I guess<font color="#E5E5E5"> first</font><font color="#CCCCCC"> I</font><font color="#E5E5E5"> would find</font>

1044
00:35:29,520 --> 00:35:33,600
out how are things currently and

1045
00:35:31,500 --> 00:35:36,180
understand just<font color="#E5E5E5"> for my company what are</font>

1046
00:35:33,600 --> 00:35:38,460
sort of the the quick wins and and some

1047
00:35:36,180 --> 00:35:40,980
<font color="#E5E5E5">of the developer machine quick grep type</font>

1048
00:35:38,460 --> 00:35:42,630
things<font color="#E5E5E5"> those are very easy to implement</font>

1049
00:35:40,980 --> 00:35:48,830
<font color="#E5E5E5">as well and they can be</font><font color="#CCCCCC"> very high signal</font>

1050
00:35:42,630 --> 00:35:48,830
so yeah thank<font color="#CCCCCC"> you any</font><font color="#E5E5E5"> other questions</font>

1051
00:35:59,440 --> 00:36:06,260
<font color="#E5E5E5">and hello you</font><font color="#CCCCCC"> speak a lot about</font><font color="#E5E5E5"> what</font>

1052
00:36:04,220 --> 00:36:09,560
would I call<font color="#E5E5E5"> technical security testing</font>

1053
00:36:06,260 --> 00:36:11,570
static<font color="#E5E5E5"> analysis dynamic analysis have</font>

1054
00:36:09,560 --> 00:36:14,210
you ever seen also things<font color="#E5E5E5"> like</font>

1055
00:36:11,570 --> 00:36:16,900
developing methodology tooling which has

1056
00:36:14,210 --> 00:36:22,300
<font color="#E5E5E5">BDD security or these kind of</font><font color="#CCCCCC"> things</font>

1057
00:36:16,900 --> 00:36:22,300
<font color="#E5E5E5">within your experiences you know</font>

1058
00:36:23,380 --> 00:36:28,100
<font color="#CCCCCC">development type things</font><font color="#E5E5E5"> where right like</font>

1059
00:36:26,210 --> 00:36:30,140
cucumber<font color="#CCCCCC"> ask</font><font color="#E5E5E5"> tests that are like it</font>

1060
00:36:28,100 --> 00:36:32,180
should not do<font color="#CCCCCC"> this or</font><font color="#E5E5E5"> it should do this</font>

1061
00:36:30,140 --> 00:36:35,540
and things like that<font color="#E5E5E5"> in fact I think</font>

1062
00:36:32,180 --> 00:36:39,529
that BDD security<font color="#E5E5E5"> scripts lots of</font>

1063
00:36:35,540 --> 00:36:43,009
security scenarios and test it and drive

1064
00:36:39,530 --> 00:36:46,160
the<font color="#CCCCCC"> development to</font><font color="#E5E5E5"> the developer is</font>

1065
00:36:43,010 --> 00:36:48,860
riven by the test<font color="#CCCCCC"> when is developing its</font>

1066
00:36:46,160 --> 00:36:51,830
application and BDD<font color="#CCCCCC"> secretly provides a</font>

1067
00:36:48,860 --> 00:36:55,100
lot of<font color="#E5E5E5"> these scenarios and</font><font color="#CCCCCC"> you just have</font>

1068
00:36:51,830 --> 00:36:56,960
<font color="#E5E5E5">to it seems plug into into your</font>

1069
00:36:55,100 --> 00:36:59,480
application so it can be run

1070
00:36:56,960 --> 00:37:02,270
automatically using as the ICD<font color="#E5E5E5"> like</font>

1071
00:36:59,480 --> 00:37:05,030
Jenkins<font color="#E5E5E5"> to drive this and this is a very</font>

1072
00:37:02,270 --> 00:37:08,440
interesting promises but<font color="#E5E5E5"> I'm wondering</font>

1073
00:37:05,030 --> 00:37:11,330
if it's a<font color="#E5E5E5"> dream</font><font color="#CCCCCC"> or so have you ever</font>

1074
00:37:08,440 --> 00:37:12,650
experienced<font color="#CCCCCC"> that or</font><font color="#E5E5E5"> not yeah okay</font>

1075
00:37:11,330 --> 00:37:14,509
<font color="#E5E5E5">conceptually I think that that's</font><font color="#CCCCCC"> a good</font>

1076
00:37:12,650 --> 00:37:15,740
idea<font color="#CCCCCC"> honestly I haven't seen that in</font>

1077
00:37:14,510 --> 00:37:17,530
<font color="#CCCCCC">many</font><font color="#E5E5E5"> companies that doesn't mean it's</font>

1078
00:37:15,740 --> 00:37:20,750
not<font color="#CCCCCC"> a</font><font color="#E5E5E5"> good idea I just haven't seen</font><font color="#CCCCCC"> it</font>

1079
00:37:17,530 --> 00:37:22,940
but the the Mozilla<font color="#E5E5E5"> talk I referenced</font>

1080
00:37:20,750 --> 00:37:24,890
earlier<font color="#E5E5E5"> does sort of</font><font color="#CCCCCC"> automatically run</font>

1081
00:37:22,940 --> 00:37:26,690
<font color="#CCCCCC">zap</font><font color="#E5E5E5"> with sort of baseline settings on</font>

1082
00:37:24,890 --> 00:37:29,350
every newly newly deployed service so in

1083
00:37:26,690 --> 00:37:36,130
some ways the checks they've implemented

1084
00:37:29,350 --> 00:37:38,360
are sort of<font color="#E5E5E5"> BDDs tests yeah I think</font>

1085
00:37:36,130 --> 00:37:40,310
<font color="#E5E5E5">creating some automated tests that</font>

1086
00:37:38,360 --> 00:37:41,720
assume certain security properties like

1087
00:37:40,310 --> 00:37:42,770
you can't access<font color="#E5E5E5"> without off or things</font>

1088
00:37:41,720 --> 00:37:45,379
like<font color="#CCCCCC"> that I</font><font color="#E5E5E5"> think</font><font color="#CCCCCC"> that could be useful</font>

1089
00:37:42,770 --> 00:37:47,990
<font color="#E5E5E5">but it's not just a concept you have</font><font color="#CCCCCC"> a -</font>

1090
00:37:45,380 --> 00:37:49,790
which is called<font color="#E5E5E5"> BDD security and which</font>

1091
00:37:47,990 --> 00:37:52,370
is based<font color="#E5E5E5"> on</font><font color="#CCCCCC"> Columba</font><font color="#E5E5E5"> with a framework</font>

1092
00:37:49,790 --> 00:37:54,650
which<font color="#CCCCCC"> is a lot like</font><font color="#E5E5E5"> okay you got some</font>

1093
00:37:52,370 --> 00:37:56,720
<font color="#CCCCCC">security stories</font><font color="#E5E5E5"> driven and</font><font color="#CCCCCC"> you have</font>

1094
00:37:54,650 --> 00:37:59,840
just<font color="#E5E5E5"> to plug</font><font color="#CCCCCC"> in into</font><font color="#E5E5E5"> your application so</font>

1095
00:37:56,720 --> 00:38:02,569
I was<font color="#E5E5E5"> wondering on my contact if it's</font>

1096
00:37:59,840 --> 00:38:04,970
interesting to<font color="#CCCCCC"> just spend time</font><font color="#E5E5E5"> on that</font>

1097
00:38:02,570 --> 00:38:08,000
and see<font color="#CCCCCC"> if it's really really usable or</font>

1098
00:38:04,970 --> 00:38:09,259
not but yeah there's some tools I linked

1099
00:38:08,000 --> 00:38:09,730
earlier like gauntlet and things like

1100
00:38:09,260 --> 00:38:13,510
<font color="#E5E5E5">that</font>

1101
00:38:09,730 --> 00:38:14,740
it seems -<font color="#E5E5E5"> next -</font><font color="#CCCCCC"> comes in</font><font color="#E5E5E5"> I guess yeah</font>

1102
00:38:13,510 --> 00:38:17,380
robot framework and<font color="#E5E5E5"> gauntlet are</font>

1103
00:38:14,740 --> 00:38:19,328
specifically<font color="#E5E5E5"> to do that</font><font color="#CCCCCC"> yeah let's try</font>

1104
00:38:17,380 --> 00:38:21,910
<font color="#CCCCCC">two more about that after I'd like to</font>

1105
00:38:19,329 --> 00:38:23,410
<font color="#E5E5E5">think about</font><font color="#CCCCCC"> that more I haven't seen it</font>

1106
00:38:21,910 --> 00:38:28,589
used much<font color="#E5E5E5"> but that doesn't mean it's not</font>

1107
00:38:23,410 --> 00:38:28,589
<font color="#E5E5E5">necessarily</font><font color="#CCCCCC"> useful just</font><font color="#E5E5E5"> my experiences</font>

1108
00:38:35,520 --> 00:38:40,240
do you have any tips<font color="#E5E5E5"> for large</font>

1109
00:38:38,380 --> 00:38:43,210
enterprise companies where you've got a

1110
00:38:40,240 --> 00:38:44,649
lot<font color="#CCCCCC"> of varying</font><font color="#E5E5E5"> levels of maturity</font><font color="#CCCCCC"> and</font>

1111
00:38:43,210 --> 00:38:47,470
development practices<font color="#E5E5E5"> like you've got</font>

1112
00:38:44,650 --> 00:38:49,960
some teams are absolutely<font color="#E5E5E5"> top level</font>

1113
00:38:47,470 --> 00:38:52,750
agile and some teams<font color="#E5E5E5"> are still using</font>

1114
00:38:49,960 --> 00:38:56,320
stuff from the practices<font color="#E5E5E5"> from</font><font color="#CCCCCC"> the 90s</font>

1115
00:38:52,750 --> 00:38:58,470
<font color="#CCCCCC">and waterfall at all</font><font color="#E5E5E5"> just scaling your</font>

1116
00:38:56,320 --> 00:39:01,090
security to cover<font color="#E5E5E5"> those different levels</font>

1117
00:38:58,470 --> 00:39:03,270
<font color="#CCCCCC">okay</font><font color="#E5E5E5"> yeah so</font><font color="#CCCCCC"> the question is how do</font><font color="#E5E5E5"> you</font>

1118
00:39:01,090 --> 00:39:06,160
work in a<font color="#CCCCCC"> large enterprise</font><font color="#E5E5E5"> with</font>

1119
00:39:03,270 --> 00:39:08,050
companies<font color="#E5E5E5"> or development groups some</font>

1120
00:39:06,160 --> 00:39:14,430
agile<font color="#E5E5E5"> some waterfall like very different</font>

1121
00:39:08,050 --> 00:39:16,900
<font color="#CCCCCC">type styles yeah I guess a lot of</font><font color="#E5E5E5"> this</font>

1122
00:39:14,430 --> 00:39:18,160
these ideas assume certain<font color="#E5E5E5"> sort of</font>

1123
00:39:16,900 --> 00:39:20,770
development practices and certain

1124
00:39:18,160 --> 00:39:23,470
methodologies<font color="#CCCCCC"> I would say in that case</font>

1125
00:39:20,770 --> 00:39:25,750
it could<font color="#CCCCCC"> be useful</font><font color="#E5E5E5"> to sort of do an</font>

1126
00:39:23,470 --> 00:39:26,950
asset invert inventory experience type

1127
00:39:25,750 --> 00:39:28,570
thing where you<font color="#CCCCCC"> know what are</font><font color="#E5E5E5"> all the</font>

1128
00:39:26,950 --> 00:39:30,220
things<font color="#E5E5E5"> we're building which of these are</font>

1129
00:39:28,570 --> 00:39:32,950
<font color="#E5E5E5">most critical to</font><font color="#CCCCCC"> the business what would</font>

1130
00:39:30,220 --> 00:39:37,120
<font color="#E5E5E5">be the worst</font><font color="#CCCCCC"> if they got compromised</font><font color="#E5E5E5"> and</font>

1131
00:39:32,950 --> 00:39:39,129
also say we have some<font color="#CCCCCC"> front-facing like</font>

1132
00:39:37,120 --> 00:39:40,509
new web apps but generally they use

1133
00:39:39,130 --> 00:39:41,950
<font color="#CCCCCC">modern frameworks and they're fine but</font>

1134
00:39:40,510 --> 00:39:43,180
we have<font color="#E5E5E5"> one or two web apps that are</font>

1135
00:39:41,950 --> 00:39:45,490
still important but<font color="#E5E5E5"> they're written in</font>

1136
00:39:43,180 --> 00:39:48,879
super old Java spring and they have like

1137
00:39:45,490 --> 00:39:51,250
<font color="#CCCCCC">20 known criticals</font><font color="#E5E5E5"> in them yeah I guess</font>

1138
00:39:48,880 --> 00:39:53,890
inventory everything figuring out what

1139
00:39:51,250 --> 00:39:55,750
is the<font color="#E5E5E5"> most important and how many how</font>

1140
00:39:53,890 --> 00:39:58,000
much time we should spend on them and

1141
00:39:55,750 --> 00:39:59,680
focus<font color="#E5E5E5"> there and sort of gradually try to</font>

1142
00:39:58,000 --> 00:40:01,510
increase the<font color="#E5E5E5"> bar everywhere but sort of</font>

1143
00:39:59,680 --> 00:40:02,950
<font color="#E5E5E5">first figure out what's the most</font>

1144
00:40:01,510 --> 00:40:05,680
important<font color="#CCCCCC"> where should I focus my at</font>

1145
00:40:02,950 --> 00:40:07,870
<font color="#CCCCCC">least initial efforts because again</font>

1146
00:40:05,680 --> 00:40:10,359
these ideas<font color="#E5E5E5"> some of</font><font color="#CCCCCC"> them can</font><font color="#E5E5E5"> be sort of</font>

1147
00:40:07,870 --> 00:40:13,000
<font color="#E5E5E5">generically rolled out such as just like</font>

1148
00:40:10,360 --> 00:40:16,240
whenever say Jenkins deploy<font color="#E5E5E5"> something</font>

1149
00:40:13,000 --> 00:40:17,740
let's throw<font color="#CCCCCC"> zap or burp at it</font><font color="#E5E5E5"> but a lot</font>

1150
00:40:16,240 --> 00:40:20,589
<font color="#CCCCCC">of</font><font color="#E5E5E5"> things are sort of code base or</font>

1151
00:40:17,740 --> 00:40:22,029
language specific<font color="#E5E5E5"> see I would figure out</font>

1152
00:40:20,590 --> 00:40:24,310
what do<font color="#E5E5E5"> you care</font><font color="#CCCCCC"> about most and</font><font color="#E5E5E5"> where</font>

1153
00:40:22,030 --> 00:40:26,590
should<font color="#E5E5E5"> you initially try to reduce risk</font>

1154
00:40:24,310 --> 00:40:28,360
<font color="#E5E5E5">the fastest basically where can you get</font>

1155
00:40:26,590 --> 00:40:33,840
<font color="#E5E5E5">the quickest wins the fastest is really</font>

1156
00:40:28,360 --> 00:40:33,840
what<font color="#E5E5E5"> most of this is yeah thank you</font>

1157
00:40:42,640 --> 00:40:49,420
[Applause]

1158
00:40:45,190 --> 00:40:49,420
thank you I have another question

1159
00:40:49,490 --> 00:40:53,149
it's about<font color="#E5E5E5"> logging monitoring and the</font>

1160
00:40:51,560 --> 00:40:55,340
<font color="#E5E5E5">run time medication</font><font color="#CCCCCC"> side</font><font color="#E5E5E5"> protection</font><font color="#CCCCCC"> you</font>

1161
00:40:53,150 --> 00:40:57,440
talked about<font color="#E5E5E5"> lot about telemetry we we</font>

1162
00:40:55,340 --> 00:41:01,970
are we<font color="#E5E5E5"> improved a lot in</font><font color="#CCCCCC"> the last two or</font>

1163
00:40:57,440 --> 00:41:04,330
three<font color="#CCCCCC"> years on detecting logging and</font>

1164
00:41:01,970 --> 00:41:09,919
transmitting all security warnings and

1165
00:41:04,330 --> 00:41:11,810
abnormal use cases<font color="#E5E5E5"> and I heard quite a</font>

1166
00:41:09,920 --> 00:41:14,720
bunch about<font color="#E5E5E5"> run time medications</font><font color="#CCCCCC"> air</font>

1167
00:41:11,810 --> 00:41:16,640
protection in the past month<font color="#E5E5E5"> whether</font><font color="#CCCCCC"> on</font>

1168
00:41:14,720 --> 00:41:19,040
<font color="#CCCCCC">a technical point of view to detect</font><font color="#E5E5E5"> a</font>

1169
00:41:16,640 --> 00:41:21,529
<font color="#E5E5E5">pattern and to detect flows in the</font>

1170
00:41:19,040 --> 00:41:23,390
business logic<font color="#E5E5E5"> like this user never</font>

1171
00:41:21,530 --> 00:41:25,550
accessed<font color="#E5E5E5"> this kind of transaction and</font>

1172
00:41:23,390 --> 00:41:28,420
now he is so I should I<font color="#E5E5E5"> should write a</font>

1173
00:41:25,550 --> 00:41:32,000
warning<font color="#E5E5E5"> and did you did you in your</font>

1174
00:41:28,420 --> 00:41:35,840
experience<font color="#E5E5E5"> found out about implementing</font>

1175
00:41:32,000 --> 00:41:38,180
this this kind of product like<font color="#E5E5E5"> a runtime</font>

1176
00:41:35,840 --> 00:41:39,890
application<font color="#E5E5E5"> side protection so is your</font>

1177
00:41:38,180 --> 00:41:42,259
question<font color="#E5E5E5"> what are sort of the challenges</font>

1178
00:41:39,890 --> 00:41:43,670
or what are the so<font color="#CCCCCC"> we're people</font><font color="#E5E5E5"> focused</font>

1179
00:41:42,260 --> 00:41:45,320
in implementing the<font color="#E5E5E5"> runtime is it</font>

1180
00:41:43,670 --> 00:41:47,900
detection so it's it's like is<font color="#E5E5E5"> it a</font>

1181
00:41:45,320 --> 00:41:49,970
dream or<font color="#CCCCCC"> is it</font><font color="#E5E5E5"> something that that</font><font color="#CCCCCC"> is</font>

1182
00:41:47,900 --> 00:41:51,710
<font color="#E5E5E5">really implemented in production</font>

1183
00:41:49,970 --> 00:41:54,350
<font color="#CCCCCC">environments on some</font><font color="#E5E5E5"> critical</font>

1184
00:41:51,710 --> 00:41:56,420
applications<font color="#E5E5E5"> there are some companies</font>

1185
00:41:54,350 --> 00:41:59,120
<font color="#CCCCCC">that do</font><font color="#E5E5E5"> implement it in production</font>

1186
00:41:56,420 --> 00:42:00,800
<font color="#CCCCCC">environments</font><font color="#E5E5E5"> there is one pretty</font>

1187
00:41:59,120 --> 00:42:03,170
forward-thinking company that can

1188
00:42:00,800 --> 00:42:05,210
<font color="#E5E5E5">actually so far as say like oh this</font>

1189
00:42:03,170 --> 00:42:07,420
currently<font color="#E5E5E5"> this current user has done</font>

1190
00:42:05,210 --> 00:42:10,670
things<font color="#CCCCCC"> that seem to be pretty malicious</font>

1191
00:42:07,420 --> 00:42:12,650
<font color="#CCCCCC">and they can sort of flip some</font>

1192
00:42:10,670 --> 00:42:15,140
environment flags at runtime<font color="#CCCCCC"> that say</font>

1193
00:42:12,650 --> 00:42:16,700
let's start<font color="#E5E5E5"> messing with this user a bit</font>

1194
00:42:15,140 --> 00:42:18,920
maybe we respond a<font color="#CCCCCC"> little bit slower</font>

1195
00:42:16,700 --> 00:42:20,720
<font color="#E5E5E5">maybe we don't let then hit certain</font>

1196
00:42:18,920 --> 00:42:23,000
<font color="#E5E5E5">critical paths or things</font><font color="#CCCCCC"> like that</font><font color="#E5E5E5"> so I</font>

1197
00:42:20,720 --> 00:42:26,540
<font color="#E5E5E5">will say it's it</font><font color="#CCCCCC"> takes a lot of work and</font>

1198
00:42:23,000 --> 00:42:27,980
is advanced and<font color="#E5E5E5"> I can't speak to</font><font color="#CCCCCC"> any</font>

1199
00:42:26,540 --> 00:42:29,090
commercial products in this space most

1200
00:42:27,980 --> 00:42:30,590
of the<font color="#E5E5E5"> people I've talked with have</font>

1201
00:42:29,090 --> 00:42:32,390
implemented their own so I'm<font color="#E5E5E5"> not</font>

1202
00:42:30,590 --> 00:42:37,640
recommending<font color="#E5E5E5"> like oh this is something</font>

1203
00:42:32,390 --> 00:42:39,049
you<font color="#CCCCCC"> should buy so we have to</font><font color="#E5E5E5"> code</font><font color="#CCCCCC"> it the</font>

1204
00:42:37,640 --> 00:42:41,359
people who<font color="#CCCCCC"> I've talked with</font><font color="#E5E5E5"> have</font>

1205
00:42:39,050 --> 00:42:42,320
implemented themselves<font color="#E5E5E5"> I just don't have</font>

1206
00:42:41,360 --> 00:42:44,800
<font color="#E5E5E5">enough experience</font><font color="#CCCCCC"> with existing</font>

1207
00:42:42,320 --> 00:42:47,090
<font color="#E5E5E5">solutions to recommend or refute them</font>

1208
00:42:44,800 --> 00:42:48,530
<font color="#CCCCCC">but yeah I think</font><font color="#E5E5E5"> adding telemetry and</font>

1209
00:42:47,090 --> 00:42:50,750
things like<font color="#CCCCCC"> that is very important</font><font color="#E5E5E5"> and</font>

1210
00:42:48,530 --> 00:42:51,740
<font color="#E5E5E5">very useful</font><font color="#CCCCCC"> because you see what</font>

1211
00:42:50,750 --> 00:42:53,930
actually<font color="#E5E5E5"> happens not</font>

1212
00:42:51,740 --> 00:42:59,720
<font color="#E5E5E5">what you think might</font><font color="#CCCCCC"> be happening sounds</font>

1213
00:42:53,930 --> 00:43:02,710
<font color="#E5E5E5">like you're going</font><font color="#CCCCCC"> the right direction we</font>

1214
00:42:59,720 --> 00:43:02,709
have time for one last question

1215
00:43:03,010 --> 00:43:08,180
so in companies with limited<font color="#E5E5E5"> resources</font>

1216
00:43:05,600 --> 00:43:10,368
when you're doing these consulting and

1217
00:43:08,180 --> 00:43:12,919
you go<font color="#E5E5E5"> to</font><font color="#CCCCCC"> the handoff</font>

1218
00:43:10,369 --> 00:43:14,630
we tend<font color="#E5E5E5"> to deal with the fact should we</font>

1219
00:43:12,920 --> 00:43:17,060
develop<font color="#CCCCCC"> this security</font><font color="#E5E5E5"> feature</font><font color="#CCCCCC"> in-house</font>

1220
00:43:14,630 --> 00:43:19,400
first doing a consultant<font color="#E5E5E5"> like what are</font>

1221
00:43:17,060 --> 00:43:20,660
the risks<font color="#E5E5E5"> of running through a</font>

1222
00:43:19,400 --> 00:43:23,450
consultant<font color="#E5E5E5"> and then not being able to</font>

1223
00:43:20,660 --> 00:43:25,310
manage<font color="#CCCCCC"> that specific like what</font><font color="#E5E5E5"> would you</font>

1224
00:43:23,450 --> 00:43:27,290
suggest working<font color="#CCCCCC"> on internally with</font>

1225
00:43:25,310 --> 00:43:31,369
limited resources versus<font color="#E5E5E5"> putting off to</font>

1226
00:43:27,290 --> 00:43:34,160
a consulting firm<font color="#E5E5E5"> okay yeah so so the</font>

1227
00:43:31,369 --> 00:43:35,240
question<font color="#CCCCCC"> is if you have a small</font><font color="#E5E5E5"> team and</font>

1228
00:43:34,160 --> 00:43:36,920
<font color="#E5E5E5">you want</font><font color="#CCCCCC"> to engage consultants to help</font>

1229
00:43:35,240 --> 00:43:38,209
<font color="#CCCCCC">with this type of stuff how do you do</font>

1230
00:43:36,920 --> 00:43:40,220
that effectively<font color="#E5E5E5"> rather than bringing</font>

1231
00:43:38,210 --> 00:43:41,930
them in and then you have trouble

1232
00:43:40,220 --> 00:43:45,020
maintaining it<font color="#E5E5E5"> and sort</font><font color="#CCCCCC"> of like you know</font>

1233
00:43:41,930 --> 00:43:48,230
<font color="#E5E5E5">we've wasted our money</font><font color="#CCCCCC"> yeah I would say</font>

1234
00:43:45,020 --> 00:43:50,540
<font color="#CCCCCC">a lot</font><font color="#E5E5E5"> of these efforts are a non-trivial</font>

1235
00:43:48,230 --> 00:43:51,800
amount<font color="#E5E5E5"> of work</font><font color="#CCCCCC"> so you're not usually</font>

1236
00:43:50,540 --> 00:43:53,240
gonna<font color="#CCCCCC"> be able to</font><font color="#E5E5E5"> bring in a consulting</font>

1237
00:43:51,800 --> 00:43:54,350
firm<font color="#E5E5E5"> for like one week or</font><font color="#CCCCCC"> two</font><font color="#E5E5E5"> weeks and</font>

1238
00:43:53,240 --> 00:43:57,770
<font color="#E5E5E5">like get one of these type of things</font>

1239
00:43:54,350 --> 00:43:59,230
done<font color="#CCCCCC"> I would say in</font><font color="#E5E5E5"> this capacity would</font>

1240
00:43:57,770 --> 00:44:02,240
it might make<font color="#E5E5E5"> sense</font><font color="#CCCCCC"> to bring</font><font color="#E5E5E5"> in</font>

1241
00:43:59,230 --> 00:44:04,580
consultants for a certain amount of time

1242
00:44:02,240 --> 00:44:05,839
<font color="#CCCCCC">to say like hey help help advise us help</font>

1243
00:44:04,580 --> 00:44:07,279
figure out<font color="#E5E5E5"> like what are we gonna do</font>

1244
00:44:05,840 --> 00:44:08,480
based on<font color="#E5E5E5"> our organization</font><font color="#CCCCCC"> look at what</font>

1245
00:44:07,280 --> 00:44:10,760
we<font color="#CCCCCC"> already have implemented look at our</font>

1246
00:44:08,480 --> 00:44:11,810
Deb processes and how everything<font color="#E5E5E5"> works</font>

1247
00:44:10,760 --> 00:44:13,010
together<font color="#E5E5E5"> and let's come</font><font color="#CCCCCC"> up with like a</font>

1248
00:44:11,810 --> 00:44:15,440
plan together<font color="#E5E5E5"> and maybe start</font>

1249
00:44:13,010 --> 00:44:17,570
implementing<font color="#E5E5E5"> it which then</font><font color="#CCCCCC"> is sort</font><font color="#E5E5E5"> of</font>

1250
00:44:15,440 --> 00:44:18,920
carried out and finished by<font color="#CCCCCC"> your team</font><font color="#E5E5E5"> I</font>

1251
00:44:17,570 --> 00:44:20,270
<font color="#E5E5E5">think ultimately the</font><font color="#CCCCCC"> abside</font><font color="#E5E5E5"> team needs</font>

1252
00:44:18,920 --> 00:44:21,530
<font color="#CCCCCC">to own this right</font><font color="#E5E5E5"> because they're gonna</font>

1253
00:44:20,270 --> 00:44:23,240
be<font color="#CCCCCC"> the people working with</font><font color="#E5E5E5"> it the whole</font>

1254
00:44:21,530 --> 00:44:25,070
<font color="#E5E5E5">time</font><font color="#CCCCCC"> so I think consultants can</font><font color="#E5E5E5"> be a</font>

1255
00:44:23,240 --> 00:44:26,149
nice advisory and sort of help<font color="#E5E5E5"> and maybe</font>

1256
00:44:25,070 --> 00:44:28,250
you<font color="#E5E5E5"> bring them in periodically</font>

1257
00:44:26,150 --> 00:44:29,750
throughout the<font color="#CCCCCC"> process but depending on</font>

1258
00:44:28,250 --> 00:44:30,980
your budget<font color="#CCCCCC"> it might not make sense to</font>

1259
00:44:29,750 --> 00:44:33,020
<font color="#E5E5E5">have them actually implement it</font>

1260
00:44:30,980 --> 00:44:35,180
ultimately the app team needs to<font color="#E5E5E5"> know</font>

1261
00:44:33,020 --> 00:44:36,410
how this<font color="#E5E5E5"> works but the consultants may</font>

1262
00:44:35,180 --> 00:44:37,910
have seen this at a bunch<font color="#E5E5E5"> of companies</font>

1263
00:44:36,410 --> 00:44:39,740
<font color="#E5E5E5">and they can advise Oh for you I know</font>

1264
00:44:37,910 --> 00:44:41,299
<font color="#E5E5E5">this is gonna be hard or something like</font>

1265
00:44:39,740 --> 00:44:44,270
that<font color="#E5E5E5"> and sort of save you some time and</font>

1266
00:44:41,300 --> 00:44:46,400
<font color="#CCCCCC">get</font><font color="#E5E5E5"> you in the right</font><font color="#CCCCCC"> direction so I</font>

1267
00:44:44,270 --> 00:44:50,680
don't<font color="#CCCCCC"> it's some high-level thoughts so</font>

1268
00:44:46,400 --> 00:44:52,540
thank you<font color="#CCCCCC"> all right thank you</font><font color="#E5E5E5"> Clint</font>

1269
00:44:50,680 --> 00:44:57,698
please thank<font color="#CCCCCC"> you</font>

1270
00:44:52,540 --> 00:44:57,699
[Applause]

