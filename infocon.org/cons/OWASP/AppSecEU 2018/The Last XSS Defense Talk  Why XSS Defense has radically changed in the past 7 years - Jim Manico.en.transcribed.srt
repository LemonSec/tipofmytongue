1
00:00:11,800 --> 00:00:18,130
afternoon everyone<font color="#CCCCCC"> I hope</font><font color="#E5E5E5"> you are</font><font color="#CCCCCC"> doing</font>

2
00:00:14,830 --> 00:00:20,170
<font color="#E5E5E5">well and</font><font color="#CCCCCC"> you having a good day this</font>

3
00:00:18,130 --> 00:00:22,360
<font color="#E5E5E5">afternoon</font><font color="#CCCCCC"> we've got three talks</font><font color="#E5E5E5"> coming</font>

4
00:00:20,170 --> 00:00:24,670
up in this room<font color="#E5E5E5"> so we're going</font><font color="#CCCCCC"> to kick</font>

5
00:00:22,360 --> 00:00:26,980
off<font color="#CCCCCC"> with German Monaco</font><font color="#E5E5E5"> talking about</font>

6
00:00:24,670 --> 00:00:29,410
<font color="#CCCCCC">cross-site scripting</font><font color="#E5E5E5"> so over to you</font>

7
00:00:26,980 --> 00:00:33,370
thank<font color="#CCCCCC"> you</font><font color="#E5E5E5"> so much hello everyone how's</font>

8
00:00:29,410 --> 00:00:35,410
everyone doing today let's try<font color="#E5E5E5"> that one</font>

9
00:00:33,370 --> 00:00:39,010
more time<font color="#E5E5E5"> hello everyone how's everyone</font>

10
00:00:35,410 --> 00:00:40,839
doing today<font color="#E5E5E5"> let's get to</font><font color="#CCCCCC"> work we're</font>

11
00:00:39,010 --> 00:00:42,699
gonna talk about<font color="#E5E5E5"> cross-site scripting</font>

12
00:00:40,840 --> 00:00:45,219
defense<font color="#E5E5E5"> I have given talks of this</font>

13
00:00:42,700 --> 00:00:49,210
nature<font color="#CCCCCC"> so much so</font><font color="#E5E5E5"> many times this is my</font>

14
00:00:45,219 --> 00:00:51,489
promise<font color="#E5E5E5"> to</font><font color="#CCCCCC"> myself</font><font color="#E5E5E5"> to be my last XSS</font>

15
00:00:49,210 --> 00:00:52,960
defense<font color="#E5E5E5"> talk ever I'm gonna find new</font>

16
00:00:51,489 --> 00:00:53,949
things<font color="#E5E5E5"> to talk about but</font><font color="#CCCCCC"> we still have</font>

17
00:00:52,960 --> 00:00:55,690
<font color="#E5E5E5">stuff to work through</font>

18
00:00:53,949 --> 00:00:57,760
<font color="#E5E5E5">we're gonna define</font><font color="#CCCCCC"> the cross-site</font>

19
00:00:55,690 --> 00:01:00,849
scripting is briefly we're gonna look at

20
00:00:57,760 --> 00:01:04,360
output escaping HTML<font color="#E5E5E5"> standardization</font>

21
00:01:00,850 --> 00:01:07,780
<font color="#CCCCCC">safe</font><font color="#E5E5E5"> use</font><font color="#CCCCCC"> of</font><font color="#E5E5E5"> JavaScript sandboxing of</font>

22
00:01:04,360 --> 00:01:10,000
dangerous contents safe<font color="#E5E5E5"> use</font><font color="#CCCCCC"> of</font><font color="#E5E5E5"> JSON in</font>

23
00:01:07,780 --> 00:01:12,520
the browser<font color="#E5E5E5"> as well as content security</font>

24
00:01:10,000 --> 00:01:14,170
policy<font color="#E5E5E5"> which gives us pretty much the</font>

25
00:01:12,520 --> 00:01:17,140
total<font color="#E5E5E5"> body of</font><font color="#CCCCCC"> knowledge around</font>

26
00:01:14,170 --> 00:01:19,300
cross-site scripting defense<font color="#E5E5E5"> so this is</font>

27
00:01:17,140 --> 00:01:22,120
my<font color="#E5E5E5"> personal grid that I use in class</font>

28
00:01:19,300 --> 00:01:25,149
this<font color="#CCCCCC"> is</font><font color="#E5E5E5"> my commercial deck which ivory</font>

29
00:01:22,120 --> 00:01:26,740
licensed as<font color="#CCCCCC"> share-alike a</font><font color="#E5E5E5"> Creative</font>

30
00:01:25,150 --> 00:01:28,360
<font color="#E5E5E5">Commons so people can use</font><font color="#CCCCCC"> it</font>

31
00:01:26,740 --> 00:01:30,220
commercially<font color="#E5E5E5"> so this is one this</font><font color="#CCCCCC"> is my</font>

32
00:01:28,360 --> 00:01:32,470
<font color="#E5E5E5">favorite deck I put like years of work</font>

33
00:01:30,220 --> 00:01:34,150
into this<font color="#E5E5E5"> so I think open sourcing it is</font>

34
00:01:32,470 --> 00:01:36,370
a personal big deal for me it's done

35
00:01:34,150 --> 00:01:37,960
please use it and spread the word let's

36
00:01:36,370 --> 00:01:39,880
get to work here<font color="#E5E5E5"> my name is jim manikan</font>

37
00:01:37,960 --> 00:01:43,059
<font color="#E5E5E5">I'll be your presenter for today the</font>

38
00:01:39,880 --> 00:01:45,729
real Jedi behind mic business in my life

39
00:01:43,060 --> 00:01:48,520
<font color="#E5E5E5">is this blue person who's my wife</font><font color="#CCCCCC"> Tracey</font>

40
00:01:45,730 --> 00:01:50,620
<font color="#E5E5E5">she's the real Jedi behind the scene but</font>

41
00:01:48,520 --> 00:01:53,860
I'm<font color="#E5E5E5"> very grateful to</font><font color="#CCCCCC"> be here let's do</font>

42
00:01:50,620 --> 00:01:56,860
this<font color="#E5E5E5"> this and I want this talk hangs off</font>

43
00:01:53,860 --> 00:01:58,690
another talk by<font color="#CCCCCC"> dr. Mario Heinrich</font><font color="#E5E5E5"> who's</font>

44
00:01:56,860 --> 00:02:01,000
probably<font color="#CCCCCC"> one of the best cross-site</font>

45
00:01:58,690 --> 00:02:03,039
scripting attack<font color="#E5E5E5"> thinkers that I know of</font>

46
00:02:01,000 --> 00:02:06,220
on<font color="#CCCCCC"> the planet he's here giving a talk</font>

47
00:02:03,040 --> 00:02:08,200
and<font color="#CCCCCC"> his perspective is XSS is</font><font color="#E5E5E5"> dead</font><font color="#CCCCCC"> we</font>

48
00:02:06,220 --> 00:02:10,030
don't<font color="#CCCCCC"> get it from a defensive point of</font>

49
00:02:08,199 --> 00:02:13,149
view very<font color="#CCCCCC"> few people take this seriously</font>

50
00:02:10,030 --> 00:02:14,860
<font color="#E5E5E5">that that</font><font color="#CCCCCC"> talk is</font><font color="#E5E5E5"> complementary to</font><font color="#CCCCCC"> what</font>

51
00:02:13,150 --> 00:02:17,349
I'm<font color="#E5E5E5"> going to talk about today as well so</font>

52
00:02:14,860 --> 00:02:19,300
<font color="#CCCCCC">what is cross-site scripting it's first</font>

53
00:02:17,349 --> 00:02:22,359
of<font color="#E5E5E5"> all it's a misnomer</font><font color="#CCCCCC"> it's the wrong</font>

54
00:02:19,300 --> 00:02:24,240
name<font color="#E5E5E5"> cross-site scripting as a name</font>

55
00:02:22,360 --> 00:02:26,580
needs to<font color="#E5E5E5"> go away</font><font color="#CCCCCC"> and it should be</font>

56
00:02:24,240 --> 00:02:29,640
called JavaScript<font color="#E5E5E5"> injection or attacker</font>

57
00:02:26,580 --> 00:02:31,500
<font color="#E5E5E5">driven JavaScript it's also the</font><font color="#CCCCCC"> most</font>

58
00:02:29,640 --> 00:02:34,079
common web vulnerability<font color="#E5E5E5"> by any</font>

59
00:02:31,500 --> 00:02:37,140
measurement I've seen and it's also very

60
00:02:34,080 --> 00:02:39,720
<font color="#CCCCCC">easy</font><font color="#E5E5E5"> to find via auditing to some degree</font>

61
00:02:37,140 --> 00:02:42,000
<font color="#E5E5E5">that's debatable</font><font color="#CCCCCC"> it's also easy</font><font color="#E5E5E5"> to</font>

62
00:02:39,720 --> 00:02:45,690
exploit<font color="#E5E5E5"> you just need to know JavaScript</font>

63
00:02:42,000 --> 00:02:47,760
<font color="#CCCCCC">and</font><font color="#E5E5E5"> you know individually fixing</font>

64
00:02:45,690 --> 00:02:50,250
cross-site scripting is sometimes easy

65
00:02:47,760 --> 00:02:52,590
with each individual problem but the

66
00:02:50,250 --> 00:02:55,530
scale<font color="#CCCCCC"> of the problem is dramatic</font>

67
00:02:52,590 --> 00:02:58,470
everybody has XSS in their apps<font color="#E5E5E5"> for the</font>

68
00:02:55,530 --> 00:03:00,870
most part<font color="#E5E5E5"> and last it's easy to</font>

69
00:02:58,470 --> 00:03:04,680
reintroduce during development<font color="#E5E5E5"> and</font><font color="#CCCCCC"> the</font>

70
00:03:00,870 --> 00:03:07,140
impact is really<font color="#E5E5E5"> damaging and a lot of</font>

71
00:03:04,680 --> 00:03:09,720
<font color="#E5E5E5">managers don't take cross-site scripting</font>

72
00:03:07,140 --> 00:03:11,970
seriously because how<font color="#E5E5E5"> because how often</font>

73
00:03:09,720 --> 00:03:14,370
<font color="#CCCCCC">it shows up</font><font color="#E5E5E5"> I'm here to say it's</font>

74
00:03:11,970 --> 00:03:16,830
something<font color="#E5E5E5"> we have</font><font color="#CCCCCC"> got to deal with if we</font>

75
00:03:14,370 --> 00:03:18,720
want a secure application and we have to

76
00:03:16,830 --> 00:03:19,230
deal<font color="#CCCCCC"> with it more than</font><font color="#E5E5E5"> we deal with it</font>

77
00:03:18,720 --> 00:03:22,980
today

78
00:03:19,230 --> 00:03:26,940
having<font color="#CCCCCC"> ok XSS defense in my opinion</font>

79
00:03:22,980 --> 00:03:28,769
means<font color="#E5E5E5"> you have no XSS defense we either</font>

80
00:03:26,940 --> 00:03:30,780
got to<font color="#E5E5E5"> take this seriously</font><font color="#CCCCCC"> and</font>

81
00:03:28,770 --> 00:03:33,000
rigorously or don't worry about<font color="#E5E5E5"> it</font>

82
00:03:30,780 --> 00:03:34,260
because<font color="#CCCCCC"> again most</font><font color="#E5E5E5"> people</font><font color="#CCCCCC"> did do it and</font>

83
00:03:33,000 --> 00:03:36,720
<font color="#E5E5E5">it</font><font color="#CCCCCC"> would I</font><font color="#E5E5E5"> would call a half assed way</font>

84
00:03:34,260 --> 00:03:39,359
and I want you to do it as a<font color="#E5E5E5"> primary</font>

85
00:03:36,720 --> 00:03:42,330
defensive layer of your app for<font color="#E5E5E5"> those</font>

86
00:03:39,360 --> 00:03:45,420
<font color="#E5E5E5">who are new and XSS the hacker it's one</font>

87
00:03:42,330 --> 00:03:48,120
<font color="#E5E5E5">of many ways to</font><font color="#CCCCCC"> launch</font><font color="#E5E5E5"> XSS against a</font>

88
00:03:45,420 --> 00:03:50,519
victim I'll send a link with an XSS

89
00:03:48,120 --> 00:03:53,460
payload in it to a user<font color="#CCCCCC"> who clicks</font><font color="#E5E5E5"> on</font>

90
00:03:50,520 --> 00:03:55,140
that link<font color="#E5E5E5"> the payloads refract reflected</font>

91
00:03:53,460 --> 00:03:57,390
in the user interview and in the user

92
00:03:55,140 --> 00:04:00,029
interface<font color="#CCCCCC"> and one of many attacks could</font>

93
00:03:57,390 --> 00:04:02,519
<font color="#E5E5E5">be stealing of data defacing the site</font>

94
00:04:00,030 --> 00:04:04,350
<font color="#E5E5E5">and similar this is what we mean by XSS</font>

95
00:04:02,520 --> 00:04:06,960
<font color="#E5E5E5">you're injecting JavaScript into a</font>

96
00:04:04,350 --> 00:04:09,480
<font color="#CCCCCC">website that a victim another user of</font>

97
00:04:06,960 --> 00:04:11,160
<font color="#CCCCCC">that site runs into in some way now what</font>

98
00:04:09,480 --> 00:04:14,040
do these there's many kinds<font color="#CCCCCC"> of XSS</font>

99
00:04:11,160 --> 00:04:16,320
delivery mechanisms<font color="#CCCCCC"> I can embed it evil</font>

100
00:04:14,040 --> 00:04:18,870
JavaScript into your site<font color="#CCCCCC"> I can put it</font>

101
00:04:16,320 --> 00:04:21,298
<font color="#E5E5E5">on a URL as a reflective vector or I can</font>

102
00:04:18,870 --> 00:04:23,310
do dom-based xss<font color="#E5E5E5"> between inner</font>

103
00:04:21,298 --> 00:04:26,039
<font color="#E5E5E5">JavaScript interaction there's actually</font>

104
00:04:23,310 --> 00:04:27,930
a<font color="#CCCCCC"> couple other payload types</font><font color="#E5E5E5"> but there's</font>

105
00:04:26,040 --> 00:04:30,360
<font color="#E5E5E5">actually a couple other payload delivery</font>

106
00:04:27,930 --> 00:04:33,419
types but let's look<font color="#E5E5E5"> at actual payloads</font>

107
00:04:30,360 --> 00:04:36,450
<font color="#E5E5E5">again eventually the victim runs across</font>

108
00:04:33,419 --> 00:04:37,659
<font color="#E5E5E5">JavaScript that your developers never</font>

109
00:04:36,450 --> 00:04:40,060
built<font color="#E5E5E5"> what kind of</font>

110
00:04:37,660 --> 00:04:42,160
payloads<font color="#CCCCCC"> can we do here</font><font color="#E5E5E5"> so</font><font color="#CCCCCC"> this is</font><font color="#E5E5E5"> the</font>

111
00:04:40,060 --> 00:04:45,550
basic XSS payload<font color="#E5E5E5"> I've seen a lot of</font>

112
00:04:42,160 --> 00:04:48,220
classes where I'm building<font color="#CCCCCC"> an evil URL</font>

113
00:04:45,550 --> 00:04:50,500
<font color="#CCCCCC">I'm grabbing a copy</font><font color="#E5E5E5"> of the cookie and</font>

114
00:04:48,220 --> 00:04:52,510
sending it to<font color="#CCCCCC"> a different</font><font color="#E5E5E5"> domain</font><font color="#CCCCCC"> this</font>

115
00:04:50,500 --> 00:04:55,660
would launch<font color="#E5E5E5"> in the</font><font color="#CCCCCC"> victim's browser</font>

116
00:04:52,510 --> 00:04:57,909
<font color="#CCCCCC">steal their cookie pass it</font><font color="#E5E5E5"> to my server</font>

117
00:04:55,660 --> 00:05:01,180
<font color="#E5E5E5">where I can then use it to hijack</font><font color="#CCCCCC"> that</font>

118
00:04:57,910 --> 00:05:04,000
account<font color="#CCCCCC"> so here's my question</font><font color="#E5E5E5"> is HTTP</font>

119
00:05:01,180 --> 00:05:07,780
only an important defense in browser

120
00:05:04,000 --> 00:05:09,580
security<font color="#E5E5E5"> today do you</font><font color="#CCCCCC"> think there's</font><font color="#E5E5E5"> a</font>

121
00:05:07,780 --> 00:05:12,909
question<font color="#E5E5E5"> for you have to answer now do</font>

122
00:05:09,580 --> 00:05:15,849
you think HTTP only is an important

123
00:05:12,910 --> 00:05:18,240
defense<font color="#E5E5E5"> in secure coding today</font><font color="#CCCCCC"> what's</font>

124
00:05:15,850 --> 00:05:22,390
your what's<font color="#CCCCCC"> your opinion shout it out</font>

125
00:05:18,240 --> 00:05:25,030
<font color="#E5E5E5">who says yes no no show of hands</font>

126
00:05:22,390 --> 00:05:28,740
I want a verbal<font color="#E5E5E5"> response who here thinks</font>

127
00:05:25,030 --> 00:05:31,989
HTTP only is valuable shout yes

128
00:05:28,740 --> 00:05:35,230
who thinks<font color="#CCCCCC"> HTP only is not too valuable</font>

129
00:05:31,990 --> 00:05:37,420
<font color="#E5E5E5">defense shout no it's about half and</font>

130
00:05:35,230 --> 00:05:40,450
half<font color="#E5E5E5"> here's my take on</font><font color="#CCCCCC"> their right first</font>

131
00:05:37,420 --> 00:05:42,430
of all HTTP only stops JavaScript and

132
00:05:40,450 --> 00:05:45,219
other client-side scripts to access

133
00:05:42,430 --> 00:05:47,320
cookie data<font color="#CCCCCC"> we</font><font color="#E5E5E5"> usually recommend</font><font color="#CCCCCC"> that we</font>

134
00:05:45,220 --> 00:05:49,420
use this for session IDs for developer

135
00:05:47,320 --> 00:05:52,060
<font color="#E5E5E5">I'm here to tell you that this defense</font>

136
00:05:49,420 --> 00:05:55,060
is almost useless<font color="#CCCCCC"> here's why here's</font><font color="#E5E5E5"> my</font>

137
00:05:52,060 --> 00:05:58,270
bypass<font color="#E5E5E5"> I build</font><font color="#CCCCCC"> to remember I'm</font><font color="#E5E5E5"> storing</font>

138
00:05:55,060 --> 00:06:01,510
this<font color="#E5E5E5"> in your site launching it Invicta</font>

139
00:05:58,270 --> 00:06:05,140
<font color="#CCCCCC">in users of your</font><font color="#E5E5E5"> site</font><font color="#CCCCCC"> I'm already in</font>

140
00:06:01,510 --> 00:06:07,659
<font color="#E5E5E5">your domain</font><font color="#CCCCCC"> Ajax</font><font color="#E5E5E5"> to your mail endpoint</font>

141
00:06:05,140 --> 00:06:10,180
<font color="#E5E5E5">to your boss you're a jerk there sorry</font>

142
00:06:07,660 --> 00:06:14,440
<font color="#E5E5E5">about</font><font color="#CCCCCC"> that bus so there's a this ajax</font>

143
00:06:10,180 --> 00:06:16,240
call is in your code does HTTP only help

144
00:06:14,440 --> 00:06:18,250
you here no because<font color="#CCCCCC"> the cookie gets</font>

145
00:06:16,240 --> 00:06:20,470
attached automatically to this<font color="#E5E5E5"> request</font>

146
00:06:18,250 --> 00:06:22,720
<font color="#CCCCCC">will the same site</font><font color="#E5E5E5"> token stop this</font>

147
00:06:20,470 --> 00:06:25,180
<font color="#CCCCCC">request forgery</font><font color="#E5E5E5"> no it's in your site</font>

148
00:06:22,720 --> 00:06:27,730
will it<font color="#CCCCCC"> wilt the new token binding</font>

149
00:06:25,180 --> 00:06:30,730
standard<font color="#E5E5E5"> for tokens help you know it's</font>

150
00:06:27,730 --> 00:06:33,100
in your site so I<font color="#E5E5E5"> don't need to steal</font>

151
00:06:30,730 --> 00:06:35,200
your cookie<font color="#CCCCCC"> I can force</font><font color="#E5E5E5"> your browser to</font>

152
00:06:33,100 --> 00:06:38,050
<font color="#E5E5E5">use the cookie that's a kind of stored</font>

153
00:06:35,200 --> 00:06:40,000
<font color="#E5E5E5">forgery so that's the perspective of</font>

154
00:06:38,050 --> 00:06:42,850
attackers I was teaching this for<font color="#E5E5E5"> years</font>

155
00:06:40,000 --> 00:06:44,830
<font color="#CCCCCC">until</font><font color="#E5E5E5"> recently Mario said Jim I don't</font>

156
00:06:42,850 --> 00:06:47,320
<font color="#E5E5E5">care about HTTP only here's how I would</font>

157
00:06:44,830 --> 00:06:48,880
<font color="#E5E5E5">abuse it so let's rethink how important</font>

158
00:06:47,320 --> 00:06:51,070
that<font color="#E5E5E5"> is</font><font color="#CCCCCC"> I still think you should</font><font color="#E5E5E5"> use it</font>

159
00:06:48,880 --> 00:06:53,680
<font color="#E5E5E5">but it's trivial to bypass</font>

160
00:06:51,070 --> 00:06:56,320
here's here's Twitter<font color="#E5E5E5"> that they had this</font>

161
00:06:53,680 --> 00:06:58,840
malformed URL back in 2010<font color="#E5E5E5"> this</font>

162
00:06:56,320 --> 00:07:02,050
<font color="#CCCCCC">JavaScript got to rot ride free because</font>

163
00:06:58,840 --> 00:07:04,690
<font color="#CCCCCC">of their inappropriate improper URL</font>

164
00:07:02,050 --> 00:07:06,610
parsing that<font color="#CCCCCC"> JavaScript got to ride free</font>

165
00:07:04,690 --> 00:07:08,800
includes<font color="#E5E5E5"> everything here and what this</font>

166
00:07:06,610 --> 00:07:11,440
attack did was it grabbed a<font color="#E5E5E5"> copy of the</font>

167
00:07:08,800 --> 00:07:14,410
<font color="#E5E5E5">C surf talkin and replayed it in a worm</font>

168
00:07:11,440 --> 00:07:16,480
like<font color="#E5E5E5"> fashion so millions of people were</font>

169
00:07:14,410 --> 00:07:18,550
<font color="#CCCCCC">tweeting</font><font color="#E5E5E5"> about a love of goats</font>

170
00:07:16,480 --> 00:07:20,020
that's actually quite<font color="#E5E5E5"> illegal in most of</font>

171
00:07:18,550 --> 00:07:22,630
the<font color="#CCCCCC"> southern United States</font><font color="#E5E5E5"> at least</font>

172
00:07:20,020 --> 00:07:24,340
<font color="#E5E5E5">let's move on so here's a virtual site</font>

173
00:07:22,630 --> 00:07:27,219
defacement the bad team is<font color="#E5E5E5"> obviously</font>

174
00:07:24,340 --> 00:07:30,310
Liverpool Liverpool<font color="#CCCCCC"> Kicks worse than my</font>

175
00:07:27,220 --> 00:07:31,720
mum and Here I am<font color="#CCCCCC"> overriding the entire</font>

176
00:07:30,310 --> 00:07:34,510
<font color="#CCCCCC">but I'm just</font><font color="#E5E5E5"> kidding I'll even watch</font>

177
00:07:31,720 --> 00:07:38,050
Liverpool sorry<font color="#E5E5E5"> so it's</font><font color="#CCCCCC"> document.body</font>

178
00:07:34,510 --> 00:07:40,659
<font color="#CCCCCC">enter HTML</font><font color="#E5E5E5"> what does that overwrite the</font>

179
00:07:38,050 --> 00:07:43,180
entire page<font color="#E5E5E5"> its rightful site</font><font color="#CCCCCC"> defacement</font>

180
00:07:40,660 --> 00:07:45,220
<font color="#E5E5E5">here here I am</font><font color="#CCCCCC"> with XSS</font><font color="#E5E5E5"> where I'm</font>

181
00:07:43,180 --> 00:07:47,530
trapping the<font color="#E5E5E5"> password submission event</font>

182
00:07:45,220 --> 00:07:50,350
<font color="#E5E5E5">and using that same</font><font color="#CCCCCC"> image trick to steal</font>

183
00:07:47,530 --> 00:07:52,659
your password here's XSS with no letters

184
00:07:50,350 --> 00:07:55,750
here's XSS with no letters or numbers

185
00:07:52,660 --> 00:07:58,240
here's XSS your entire city using beef

186
00:07:55,750 --> 00:07:59,710
and<font color="#E5E5E5"> an intercepting proxy here's like oh</font>

187
00:07:58,240 --> 00:08:02,020
yeah<font color="#E5E5E5"> just use markdown</font>

188
00:07:59,710 --> 00:08:05,049
well here's XSS against markdown right

189
00:08:02,020 --> 00:08:06,760
here's XSS that's a<font color="#E5E5E5"> poly got from one of</font>

190
00:08:05,050 --> 00:08:08,740
the best in the world<font color="#E5E5E5"> Gareth hey hey</font>

191
00:08:06,760 --> 00:08:10,930
Gareth<font color="#E5E5E5"> are you here Gareth</font>

192
00:08:08,740 --> 00:08:13,720
he's here find him one of<font color="#E5E5E5"> the best in</font>

193
00:08:10,930 --> 00:08:15,760
the planet<font color="#E5E5E5"> this</font><font color="#CCCCCC"> is a</font><font color="#E5E5E5"> polygon test that</font>

194
00:08:13,720 --> 00:08:19,330
will work in a<font color="#E5E5E5"> JavaScript title style</font>

195
00:08:15,760 --> 00:08:21,430
<font color="#E5E5E5">text area XMP and other contexts are</font>

196
00:08:19,330 --> 00:08:23,680
interesting for<font color="#E5E5E5"> you penetration testers</font>

197
00:08:21,430 --> 00:08:25,570
here's one test I can fuzz across the

198
00:08:23,680 --> 00:08:26,950
whole app it'll<font color="#E5E5E5"> pop everywhere</font>

199
00:08:25,570 --> 00:08:29,140
this is<font color="#E5E5E5"> Creative Commons you'll get</font>

200
00:08:26,950 --> 00:08:30,520
these<font color="#E5E5E5"> slides here's dr. Mario Heinrich</font>

201
00:08:29,140 --> 00:08:33,130
he's<font color="#E5E5E5"> number he's the best out there he</font>

202
00:08:30,520 --> 00:08:36,159
<font color="#CCCCCC">is here he is doing</font><font color="#E5E5E5"> a fetch to pop your</font>

203
00:08:33,130 --> 00:08:38,439
login page then use a call to rewrite

204
00:08:36,159 --> 00:08:40,719
the domain<font color="#CCCCCC"> to evil comm so show</font><font color="#E5E5E5"> your</font>

205
00:08:38,440 --> 00:08:42,310
login form<font color="#E5E5E5"> then rewrite it to</font><font color="#CCCCCC"> an evil</font>

206
00:08:40,720 --> 00:08:44,710
domain this<font color="#E5E5E5"> is</font><font color="#CCCCCC"> a really cool attack and</font>

207
00:08:42,309 --> 00:08:46,510
here's<font color="#E5E5E5"> Cotto from from Google</font><font color="#CCCCCC"> hey Mario</font>

208
00:08:44,710 --> 00:08:47,680
that's three lines I made a two lines

209
00:08:46,510 --> 00:08:49,930
and I can make<font color="#E5E5E5"> it less and they're</font>

210
00:08:47,680 --> 00:08:51,699
<font color="#E5E5E5">fighting over how to reduce the payload</font>

211
00:08:49,930 --> 00:08:54,339
is awesome<font color="#E5E5E5"> what</font><font color="#CCCCCC"> else</font>

212
00:08:51,700 --> 00:08:57,100
<font color="#E5E5E5">here's let's go mine cyber cyber coins</font>

213
00:08:54,340 --> 00:08:59,020
through XSS<font color="#E5E5E5"> right so the why am i</font>

214
00:08:57,100 --> 00:09:01,270
showing you<font color="#E5E5E5"> these we've got to take this</font>

215
00:08:59,020 --> 00:09:04,250
<font color="#E5E5E5">seriously this is not just innocent</font>

216
00:09:01,270 --> 00:09:06,860
defacement<font color="#E5E5E5"> this is complete rune</font>

217
00:09:04,250 --> 00:09:09,290
<font color="#CCCCCC">of your authentication layer of your of</font>

218
00:09:06,860 --> 00:09:11,780
displaying content<font color="#E5E5E5"> of protecting content</font>

219
00:09:09,290 --> 00:09:13,939
<font color="#E5E5E5">this</font><font color="#CCCCCC"> is a game</font><font color="#E5E5E5"> over event we have to do</font>

220
00:09:11,780 --> 00:09:15,800
<font color="#E5E5E5">better at taking</font><font color="#CCCCCC"> this seriously as mario</font>

221
00:09:13,940 --> 00:09:17,780
is telling us look at the history<font color="#CCCCCC"> of the</font>

222
00:09:15,800 --> 00:09:20,209
last<font color="#CCCCCC"> 10 years we have not taken this</font>

223
00:09:17,780 --> 00:09:21,920
seriously<font color="#E5E5E5"> and almost apps are littered</font>

224
00:09:20,210 --> 00:09:24,830
with this vulnerability class<font color="#E5E5E5"> so how do</font>

225
00:09:21,920 --> 00:09:25,729
we stop this<font color="#E5E5E5"> problem we stop this it's</font>

226
00:09:24,830 --> 00:09:28,280
complicated

227
00:09:25,730 --> 00:09:30,890
here's my philosophy<font color="#CCCCCC"> on XSS defense</font>

228
00:09:28,280 --> 00:09:33,260
<font color="#E5E5E5">assume every variable is dangerous the</font>

229
00:09:30,890 --> 00:09:35,360
whole<font color="#E5E5E5"> concept of taint tracking is BS</font>

230
00:09:33,260 --> 00:09:37,010
when it comes to defense don't look<font color="#E5E5E5"> if</font>

231
00:09:35,360 --> 00:09:39,410
the variable is dangerous<font color="#CCCCCC"> to waste of</font>

232
00:09:37,010 --> 00:09:41,300
<font color="#E5E5E5">your time</font><font color="#CCCCCC"> build a user interface where</font>

233
00:09:39,410 --> 00:09:42,800
every variable<font color="#E5E5E5"> is automatically</font>

234
00:09:41,300 --> 00:09:45,229
protected<font color="#E5E5E5"> that's that's a better</font>

235
00:09:42,800 --> 00:09:47,420
defensive strategy as an architect<font color="#E5E5E5"> also</font>

236
00:09:45,230 --> 00:09:49,400
make<font color="#CCCCCC"> sure that every variable</font><font color="#E5E5E5"> and all</font>

237
00:09:47,420 --> 00:09:52,880
<font color="#CCCCCC">content that is and</font><font color="#E5E5E5"> it's added</font><font color="#CCCCCC"> it's</font>

238
00:09:49,400 --> 00:09:54,260
protected in the UI layer itself<font color="#CCCCCC"> we</font>

239
00:09:52,880 --> 00:09:56,660
don't want to depend<font color="#E5E5E5"> on things like</font>

240
00:09:54,260 --> 00:09:59,420
<font color="#CCCCCC">validation or a</font><font color="#E5E5E5"> laugh excuse me that</font>

241
00:09:56,660 --> 00:10:00,949
hurts to even<font color="#E5E5E5"> say that</font><font color="#CCCCCC"> word so what we</font>

242
00:09:59,420 --> 00:10:03,319
can't depend<font color="#E5E5E5"> on these compensating</font>

243
00:10:00,950 --> 00:10:05,150
controls to save you<font color="#CCCCCC"> I think we should</font>

244
00:10:03,320 --> 00:10:08,030
build user<font color="#CCCCCC"> interfaces</font><font color="#E5E5E5"> that are self</font>

245
00:10:05,150 --> 00:10:09,860
protecting and be careful<font color="#E5E5E5"> of developers</font>

246
00:10:08,030 --> 00:10:12,410
who<font color="#CCCCCC"> are using</font><font color="#E5E5E5"> these new frameworks and</font>

247
00:10:09,860 --> 00:10:15,110
turning off<font color="#CCCCCC"> to security by</font><font color="#E5E5E5"> the way</font>

248
00:10:12,410 --> 00:10:17,480
dangerously set<font color="#CCCCCC"> inner HTML</font><font color="#E5E5E5"> and react</font>

249
00:10:15,110 --> 00:10:18,950
that's a dangerous thing<font color="#CCCCCC"> to do and it's</font>

250
00:10:17,480 --> 00:10:21,410
a good Lang set that they<font color="#CCCCCC"> name it</font>

251
00:10:18,950 --> 00:10:23,630
dangerously<font color="#E5E5E5"> this is my personal like</font>

252
00:10:21,410 --> 00:10:26,329
print out sheet that<font color="#E5E5E5"> I put in my cubicle</font>

253
00:10:23,630 --> 00:10:28,610
<font color="#E5E5E5">when I am coding a user interfaces I</font>

254
00:10:26,330 --> 00:10:30,260
encourage you to<font color="#E5E5E5"> print this out clean it</font>

255
00:10:28,610 --> 00:10:32,210
up as you see<font color="#E5E5E5"> fit and distribute this to</font>

256
00:10:30,260 --> 00:10:33,710
your developers the slot are we taking a

257
00:10:32,210 --> 00:10:34,330
<font color="#E5E5E5">picture</font><font color="#CCCCCC"> with a picture but</font><font color="#E5E5E5"> you put your</font>

258
00:10:33,710 --> 00:10:36,290
<font color="#CCCCCC">put</font><font color="#E5E5E5"> your picture</font>

259
00:10:34,330 --> 00:10:43,400
<font color="#CCCCCC">all</font><font color="#E5E5E5"> right picture picture</font><font color="#CCCCCC"> a go-ahead</font>

260
00:10:36,290 --> 00:10:46,400
<font color="#E5E5E5">picture mom</font><font color="#CCCCCC"> okay anything this properly</font>

261
00:10:43,400 --> 00:10:48,350
<font color="#CCCCCC">okay so so the first layer of Defense</font>

262
00:10:46,400 --> 00:10:50,810
<font color="#E5E5E5">right is encoding are we all</font><font color="#CCCCCC"> wear of</font>

263
00:10:48,350 --> 00:10:52,400
<font color="#E5E5E5">encoding what kind of encoding do we</font>

264
00:10:50,810 --> 00:10:55,219
need to do in the user<font color="#E5E5E5"> interface to stop</font>

265
00:10:52,400 --> 00:10:58,280
XSS<font color="#E5E5E5"> this is layer</font><font color="#CCCCCC"> 1 defense circa</font><font color="#E5E5E5"> late</font>

266
00:10:55,220 --> 00:11:00,440
90s<font color="#E5E5E5"> till today we</font><font color="#CCCCCC"> want to</font><font color="#E5E5E5"> do contextual</font>

267
00:10:58,280 --> 00:11:02,300
output escaping every major language has

268
00:11:00,440 --> 00:11:04,160
an escaping library<font color="#E5E5E5"> we're taking</font>

269
00:11:02,300 --> 00:11:06,349
<font color="#CCCCCC">dangerous characters like this which the</font>

270
00:11:04,160 --> 00:11:08,000
browser thinks is code and converting<font color="#E5E5E5"> it</font>

271
00:11:06,350 --> 00:11:11,030
to<font color="#CCCCCC"> display data</font><font color="#E5E5E5"> this is just the less</font>

272
00:11:08,000 --> 00:11:13,070
<font color="#E5E5E5">than sign displayed not actually code in</font>

273
00:11:11,030 --> 00:11:15,680
the browser per<font color="#E5E5E5"> se and what we should do</font>

274
00:11:13,070 --> 00:11:17,870
is validate<font color="#E5E5E5"> everything and even</font>

275
00:11:15,680 --> 00:11:21,020
if it's valid<font color="#CCCCCC"> still escape it because</font>

276
00:11:17,870 --> 00:11:22,820
<font color="#E5E5E5">you know valid data is still dangerous</font>

277
00:11:21,020 --> 00:11:24,560
data in the context<font color="#E5E5E5"> of secure coding</font>

278
00:11:22,820 --> 00:11:28,910
<font color="#E5E5E5">what makes this problem</font><font color="#CCCCCC"> more</font>

279
00:11:24,560 --> 00:11:31,729
difficulties we have to contain the

280
00:11:28,910 --> 00:11:34,399
context of where we're putting<font color="#E5E5E5"> data in</font>

281
00:11:31,730 --> 00:11:36,560
an HTML document<font color="#CCCCCC"> this</font><font color="#E5E5E5"> really makes the</font>

282
00:11:34,399 --> 00:11:38,750
problem more difficult we have<font color="#CCCCCC"> a library</font>

283
00:11:36,560 --> 00:11:41,899
<font color="#CCCCCC">at OAuth written by</font><font color="#E5E5E5"> dr. Jeff I can now</font>

284
00:11:38,750 --> 00:11:43,730
see who bought a<font color="#E5E5E5"> really rich encoder for</font>

285
00:11:41,899 --> 00:11:45,290
the<font color="#CCCCCC"> Java</font><font color="#E5E5E5"> programming ecosystem it's one</font>

286
00:11:43,730 --> 00:11:47,480
of the most frequently used<font color="#CCCCCC"> Java</font>

287
00:11:45,290 --> 00:11:49,699
encoders in<font color="#CCCCCC"> the world today</font><font color="#E5E5E5"> and for</font><font color="#CCCCCC"> it</font>

288
00:11:47,480 --> 00:11:52,010
for Java<font color="#CCCCCC"> and so what</font><font color="#E5E5E5"> this</font><font color="#CCCCCC"> means</font><font color="#E5E5E5"> is</font><font color="#CCCCCC"> for</font>

289
00:11:49,700 --> 00:11:54,050
<font color="#CCCCCC">every different</font><font color="#E5E5E5"> location in a website</font><font color="#CCCCCC"> I</font>

290
00:11:52,010 --> 00:11:55,939
need a different kind<font color="#E5E5E5"> of escaping and if</font>

291
00:11:54,050 --> 00:11:58,160
we have the same functions in dotnet<font color="#E5E5E5"> and</font>

292
00:11:55,940 --> 00:12:00,170
so<font color="#E5E5E5"> for attributes a different we</font><font color="#CCCCCC"> need a</font>

293
00:11:58,160 --> 00:12:04,250
different kind<font color="#CCCCCC"> of escaping here encode</font>

294
00:12:00,170 --> 00:12:05,390
<font color="#CCCCCC">for attribute for like a</font><font color="#E5E5E5"> URL</font><font color="#CCCCCC"> fragment we</font>

295
00:12:04,250 --> 00:12:07,339
need a different<font color="#E5E5E5"> kind of escaping</font>

296
00:12:05,390 --> 00:12:09,319
<font color="#CCCCCC">anybody want to</font><font color="#E5E5E5"> tell me how to escape</font>

297
00:12:07,339 --> 00:12:12,380
properly in<font color="#E5E5E5"> this context it's a hard</font>

298
00:12:09,320 --> 00:12:15,830
<font color="#E5E5E5">question</font><font color="#CCCCCC"> so here I am</font><font color="#E5E5E5"> the black is my</font>

299
00:12:12,380 --> 00:12:18,560
code<font color="#CCCCCC"> the red is content I'm adding to</font>

300
00:12:15,830 --> 00:12:20,209
the URL dynamically anybody want to<font color="#E5E5E5"> tell</font>

301
00:12:18,560 --> 00:12:27,349
<font color="#CCCCCC">me how</font><font color="#E5E5E5"> to escape in this context</font>

302
00:12:20,209 --> 00:12:29,930
properly defenders come on number<font color="#E5E5E5"> one</font>

303
00:12:27,350 --> 00:12:33,230
look what context is<font color="#E5E5E5"> this in number one</font>

304
00:12:29,930 --> 00:12:35,839
it's in a URL<font color="#CCCCCC"> and number two it's in an</font>

305
00:12:33,230 --> 00:12:38,540
<font color="#CCCCCC">attribute</font><font color="#E5E5E5"> so how do we escape this well</font>

306
00:12:35,839 --> 00:12:42,350
the way is like this<font color="#E5E5E5"> as I'm building the</font>

307
00:12:38,540 --> 00:12:45,020
URL I escape for URL<font color="#E5E5E5"> and as I take that</font>

308
00:12:42,350 --> 00:12:47,360
<font color="#E5E5E5">URL and add it to an</font><font color="#CCCCCC"> attribute I escape</font>

309
00:12:45,020 --> 00:12:49,189
for the attribute context<font color="#E5E5E5"> this gets a</font>

310
00:12:47,360 --> 00:12:52,190
<font color="#E5E5E5">little hairy this is a common mistake</font>

311
00:12:49,190 --> 00:12:53,660
<font color="#CCCCCC">that developers will make what else do</font>

312
00:12:52,190 --> 00:12:56,690
we have<font color="#E5E5E5"> any and by the way suppose</font>

313
00:12:53,660 --> 00:12:59,150
<font color="#E5E5E5">you're allowing a user to</font><font color="#CCCCCC"> submit a URL</font><font color="#E5E5E5"> a</font>

314
00:12:56,690 --> 00:13:01,370
common place I see is a user profile

315
00:12:59,150 --> 00:13:03,560
with an entry to add their<font color="#CCCCCC"> home page</font>

316
00:13:01,370 --> 00:13:07,490
<font color="#E5E5E5">which we then turn into</font><font color="#CCCCCC"> a hyperlink</font>

317
00:13:03,560 --> 00:13:10,130
well<font color="#E5E5E5"> you we have to disallow JavaScript</font>

318
00:13:07,490 --> 00:13:12,500
links<font color="#CCCCCC"> is the issue here this is one area</font>

319
00:13:10,130 --> 00:13:15,770
<font color="#CCCCCC">of programming I need to do some</font><font color="#E5E5E5"> kind of</font>

320
00:13:12,500 --> 00:13:18,200
<font color="#CCCCCC">validation to make sure the URL is not</font><font color="#E5E5E5"> a</font>

321
00:13:15,770 --> 00:13:20,149
JavaScript URL and I'm<font color="#E5E5E5"> doing this not</font>

322
00:13:18,200 --> 00:13:22,579
<font color="#E5E5E5">with</font><font color="#CCCCCC"> the regular</font><font color="#E5E5E5"> expression I'm doing</font>

323
00:13:20,149 --> 00:13:25,339
with the URI class in Java or.net or

324
00:13:22,579 --> 00:13:27,560
similar and programmatically making sure

325
00:13:25,339 --> 00:13:29,390
that there's no JavaScript scheme or

326
00:13:27,560 --> 00:13:32,959
protocol being<font color="#E5E5E5"> used</font>

327
00:13:29,390 --> 00:13:35,930
another area of<font color="#CCCCCC"> XSS defense</font><font color="#E5E5E5"> now when we</font>

328
00:13:32,960 --> 00:13:39,080
<font color="#E5E5E5">have a complete</font><font color="#CCCCCC"> URL I need to escape</font><font color="#E5E5E5"> it</font>

329
00:13:35,930 --> 00:13:41,839
<font color="#CCCCCC">for</font><font color="#E5E5E5"> attributes in the attribute and for</font>

330
00:13:39,080 --> 00:13:44,120
normal HTML<font color="#E5E5E5"> escaping between two tags</font>

331
00:13:41,840 --> 00:13:47,300
<font color="#E5E5E5">the point I'm trying to</font><font color="#CCCCCC"> make here</font><font color="#E5E5E5"> is</font>

332
00:13:44,120 --> 00:13:50,420
<font color="#E5E5E5">I'll</font><font color="#CCCCCC"> have a piece of content a URL</font><font color="#E5E5E5"> it's</font>

333
00:13:47,300 --> 00:13:52,760
valid<font color="#E5E5E5"> when do I escape it do I escape it</font>

334
00:13:50,420 --> 00:13:55,939
before I<font color="#E5E5E5"> put it in the</font><font color="#CCCCCC"> database</font><font color="#E5E5E5"> or do I</font>

335
00:13:52,760 --> 00:13:58,040
escape it<font color="#CCCCCC"> or do</font><font color="#E5E5E5"> I escape it after when</font>

336
00:13:55,940 --> 00:13:59,330
I'm<font color="#E5E5E5"> building the user do I escape it</font>

337
00:13:58,040 --> 00:14:01,160
when<font color="#CCCCCC"> I before I</font><font color="#E5E5E5"> put it in the database</font>

338
00:13:59,330 --> 00:14:02,960
<font color="#CCCCCC">or do I escape it when I'm adding</font><font color="#E5E5E5"> into</font>

339
00:14:01,160 --> 00:14:04,850
the user<font color="#E5E5E5"> interface</font><font color="#CCCCCC"> a lot of people want</font>

340
00:14:02,960 --> 00:14:07,550
to<font color="#CCCCCC"> escape before</font><font color="#E5E5E5"> it goes in the database</font>

341
00:14:04,850 --> 00:14:09,230
<font color="#CCCCCC">I recommend against that because</font><font color="#E5E5E5"> we may</font>

342
00:14:07,550 --> 00:14:09,650
have<font color="#CCCCCC"> when we extract data from a</font>

343
00:14:09,230 --> 00:14:12,560
<font color="#E5E5E5">database</font>

344
00:14:09,650 --> 00:14:15,050
we may have to<font color="#E5E5E5"> escape it the same piece</font>

345
00:14:12,560 --> 00:14:17,660
<font color="#CCCCCC">of data may need to be escaped</font>

346
00:14:15,050 --> 00:14:19,819
<font color="#E5E5E5">differently based on the context of</font>

347
00:14:17,660 --> 00:14:22,760
display<font color="#E5E5E5"> so I</font><font color="#CCCCCC"> think</font><font color="#E5E5E5"> our focus should be</font>

348
00:14:19,820 --> 00:14:23,750
<font color="#E5E5E5">escaping in the user interface</font><font color="#CCCCCC"> here's an</font>

349
00:14:22,760 --> 00:14:25,580
interesting one<font color="#E5E5E5"> if you're doing</font>

350
00:14:23,750 --> 00:14:27,770
<font color="#E5E5E5">old-school programming with inline</font>

351
00:14:25,580 --> 00:14:30,410
JavaScript that<font color="#E5E5E5"> we want to quote and do</font>

352
00:14:27,770 --> 00:14:32,750
<font color="#E5E5E5">JavaScript escaping when we're adding</font>

353
00:14:30,410 --> 00:14:34,490
data<font color="#E5E5E5"> to JavaScript space as a developer</font>

354
00:14:32,750 --> 00:14:36,650
there's<font color="#CCCCCC"> a little little tricky</font><font color="#E5E5E5"> and why</font>

355
00:14:34,490 --> 00:14:40,040
why is this<font color="#E5E5E5"> a bad idea why should we</font>

356
00:14:36,650 --> 00:14:42,590
never have to do this why<font color="#E5E5E5"> should we</font>

357
00:14:40,040 --> 00:14:44,689
never have to do JavaScript escaping in

358
00:14:42,590 --> 00:14:46,730
a properly built<font color="#E5E5E5"> application because we</font>

359
00:14:44,690 --> 00:14:49,280
should not<font color="#E5E5E5"> be allowing as a developer</font>

360
00:14:46,730 --> 00:14:52,520
inline<font color="#E5E5E5"> JavaScript all of our JavaScript</font>

361
00:14:49,280 --> 00:14:55,220
<font color="#E5E5E5">should be in a separate</font><font color="#CCCCCC"> j/s file if we</font>

362
00:14:52,520 --> 00:14:57,439
plan to<font color="#E5E5E5"> use content security policy so</font>

363
00:14:55,220 --> 00:15:00,590
<font color="#E5E5E5">we tend to discourage</font><font color="#CCCCCC"> Oh kind of</font>

364
00:14:57,440 --> 00:15:03,020
<font color="#E5E5E5">programming like this so this this take</font>

365
00:15:00,590 --> 00:15:05,270
and<font color="#CCCCCC"> what one last one CSS right</font><font color="#E5E5E5"> if I'm</font>

366
00:15:03,020 --> 00:15:07,939
adding<font color="#E5E5E5"> data to a style I want to use CSS</font>

367
00:15:05,270 --> 00:15:09,410
encoding<font color="#E5E5E5"> and for all these contexts we</font>

368
00:15:07,940 --> 00:15:11,750
want to have a we want to quote those

369
00:15:09,410 --> 00:15:13,540
variable as well so this<font color="#E5E5E5"> is not a skate</font>

370
00:15:11,750 --> 00:15:16,310
<font color="#E5E5E5">this is not exciting</font><font color="#CCCCCC"> but</font><font color="#E5E5E5"> this is</font>

371
00:15:13,540 --> 00:15:18,380
fundamental knowledge to building secure

372
00:15:16,310 --> 00:15:19,699
applications<font color="#CCCCCC"> I'm open sourcing this</font>

373
00:15:18,380 --> 00:15:22,189
because you hackers you penetrate

374
00:15:19,700 --> 00:15:23,690
penetration testers please steal<font color="#E5E5E5"> this</font>

375
00:15:22,190 --> 00:15:25,970
put your name on<font color="#E5E5E5"> I don't care</font>

376
00:15:23,690 --> 00:15:29,300
and use it<font color="#E5E5E5"> to educate developers</font><font color="#CCCCCC"> around</font>

377
00:15:25,970 --> 00:15:31,700
<font color="#E5E5E5">how difficult this problem really is you</font>

378
00:15:29,300 --> 00:15:35,089
<font color="#CCCCCC">know not I can teach a</font><font color="#E5E5E5"> full-day course</font>

379
00:15:31,700 --> 00:15:37,280
on this<font color="#CCCCCC"> it</font><font color="#E5E5E5"> is that complicated</font><font color="#CCCCCC"> so a few</font>

380
00:15:35,090 --> 00:15:39,440
notes<font color="#E5E5E5"> this is always gonna be unsafe</font>

381
00:15:37,280 --> 00:15:42,709
<font color="#CCCCCC">this</font><font color="#E5E5E5"> is like saying I'll take your data</font>

382
00:15:39,440 --> 00:15:43,279
<font color="#E5E5E5">any valid this is XSS by design so be</font>

383
00:15:42,710 --> 00:15:45,709
careful

384
00:15:43,279 --> 00:15:49,269
there's some slots<font color="#E5E5E5"> in an HTML document</font>

385
00:15:45,709 --> 00:15:52,638
<font color="#CCCCCC">we</font><font color="#E5E5E5"> just can't put data into safely ever</font>

386
00:15:49,269 --> 00:15:54,980
<font color="#E5E5E5">also be careful of developers who</font>

387
00:15:52,639 --> 00:15:57,019
<font color="#CCCCCC">disable</font><font color="#E5E5E5"> framework security so</font>

388
00:15:54,980 --> 00:15:59,420
dangerously set<font color="#CCCCCC"> inner HTML what</font>

389
00:15:57,019 --> 00:16:01,819
framework is<font color="#CCCCCC"> that for that's react</font>

390
00:15:59,420 --> 00:16:03,469
<font color="#E5E5E5">turning off their defaults escaping</font><font color="#CCCCCC"> do a</font>

391
00:16:01,819 --> 00:16:04,790
search on this and you'll<font color="#E5E5E5"> see you</font>

392
00:16:03,470 --> 00:16:07,309
usually find XSS

393
00:16:04,790 --> 00:16:09,860
what about bypass<font color="#CCCCCC"> Security Trust HTML</font>

394
00:16:07,309 --> 00:16:11,660
where's<font color="#E5E5E5"> that that's angular right</font>

395
00:16:09,860 --> 00:16:13,879
there's<font color="#E5E5E5"> good language security really</font>

396
00:16:11,660 --> 00:16:15,680
<font color="#E5E5E5">warning developers this is dangerous to</font>

397
00:16:13,879 --> 00:16:18,230
use<font color="#CCCCCC"> they look out for those as a</font>

398
00:16:15,680 --> 00:16:20,029
security<font color="#E5E5E5"> analyst the future should not</font>

399
00:16:18,230 --> 00:16:22,370
be manually escaping<font color="#E5E5E5"> look at go</font>

400
00:16:20,029 --> 00:16:24,620
templates<font color="#E5E5E5"> it does all the escaping for</font>

401
00:16:22,370 --> 00:16:26,899
you automatically<font color="#CCCCCC"> a lot</font><font color="#E5E5E5"> of developers</font>

402
00:16:24,620 --> 00:16:29,779
tell a lot<font color="#E5E5E5"> of security people say that</font>

403
00:16:26,899 --> 00:16:32,839
the double escaping of URLs<font color="#E5E5E5"> that's</font>

404
00:16:29,779 --> 00:16:35,990
overkill<font color="#E5E5E5"> well here's</font><font color="#CCCCCC"> Google</font><font color="#E5E5E5"> I have</font><font color="#CCCCCC"> a URL</font>

405
00:16:32,839 --> 00:16:39,230
fragment<font color="#E5E5E5"> and they're doing both URL</font>

406
00:16:35,990 --> 00:16:41,449
escaping and attribute escaping<font color="#CCCCCC"> this</font><font color="#E5E5E5"> is</font>

407
00:16:39,230 --> 00:16:43,540
very sharp<font color="#E5E5E5"> brain power</font><font color="#CCCCCC"> that build this</font>

408
00:16:41,449 --> 00:16:46,189
so I'm leaping<font color="#E5E5E5"> off of that logic</font><font color="#CCCCCC"> in</font>

409
00:16:43,540 --> 00:16:48,079
recommendations I make in class so let's

410
00:16:46,189 --> 00:16:50,149
<font color="#E5E5E5">look at the next series of</font><font color="#CCCCCC"> defenses here</font>

411
00:16:48,079 --> 00:16:53,149
so we covered the<font color="#E5E5E5"> top here that we</font>

412
00:16:50,149 --> 00:16:55,370
covered manual escaping we covered avoid

413
00:16:53,149 --> 00:16:57,439
JavaScript URLs and all the different

414
00:16:55,370 --> 00:16:58,850
<font color="#E5E5E5">kinds of escaping let's look at some of</font>

415
00:16:57,439 --> 00:17:01,459
the more advanced techniques<font color="#E5E5E5"> that's</font>

416
00:16:58,850 --> 00:17:03,829
necessary to build a secure application

417
00:17:01,459 --> 00:17:07,698
<font color="#E5E5E5">today so the next step is when can</font><font color="#CCCCCC"> we</font>

418
00:17:03,829 --> 00:17:09,740
<font color="#CCCCCC">not escape if we're slinging HTML</font>

419
00:17:07,699 --> 00:17:10,309
suddenly escaping is not the right

420
00:17:09,740 --> 00:17:12,770
<font color="#E5E5E5">defense</font>

421
00:17:10,309 --> 00:17:16,129
where does HTML show up well if you're

422
00:17:12,770 --> 00:17:19,309
using<font color="#E5E5E5"> tiny MCE you're literally letting</font>

423
00:17:16,130 --> 00:17:22,010
users<font color="#E5E5E5"> of your app use a WYSIWYG editor</font>

424
00:17:19,309 --> 00:17:25,730
<font color="#E5E5E5">when you hit submit</font><font color="#CCCCCC"> it's a big chunk of</font>

425
00:17:22,010 --> 00:17:28,280
<font color="#E5E5E5">HTML why can't we just escape that chunk</font>

426
00:17:25,730 --> 00:17:30,169
of HTML<font color="#E5E5E5"> in the user interface to</font><font color="#CCCCCC"> provide</font>

427
00:17:28,280 --> 00:17:32,260
<font color="#E5E5E5">security why is that not the right</font>

428
00:17:30,169 --> 00:17:37,220
answer

429
00:17:32,260 --> 00:17:39,289
what's that what will you see<font color="#CCCCCC"> if you</font>

430
00:17:37,220 --> 00:17:42,890
escape<font color="#CCCCCC"> this</font><font color="#E5E5E5"> HTML what will you see on</font>

431
00:17:39,289 --> 00:17:46,220
screen<font color="#E5E5E5"> you'll see the HTML text will it</font>

432
00:17:42,890 --> 00:17:48,110
be safe<font color="#CCCCCC"> yes</font><font color="#E5E5E5"> but your application</font><font color="#CCCCCC"> will</font>

433
00:17:46,220 --> 00:17:51,230
<font color="#E5E5E5">have been broken so good you can't</font>

434
00:17:48,110 --> 00:17:52,729
escape HTML we need to use some kind<font color="#CCCCCC"> of</font>

435
00:17:51,230 --> 00:17:55,669
HTML sanitizer

436
00:17:52,730 --> 00:17:56,960
we at<font color="#E5E5E5"> wasp Michael Samuelle from Google</font>

437
00:17:55,669 --> 00:17:59,720
who's a<font color="#E5E5E5"> secure</font>

438
00:17:56,960 --> 00:18:02,029
engineer does actual coding<font color="#E5E5E5"> wrote and</font>

439
00:17:59,720 --> 00:18:04,039
continues to maintain<font color="#E5E5E5"> this project for</font>

440
00:18:02,029 --> 00:18:07,340
the Java ecosystem<font color="#E5E5E5"> and I think the most</font>

441
00:18:04,039 --> 00:18:09,649
important library<font color="#E5E5E5"> in HTML sanitization</font>

442
00:18:07,340 --> 00:18:12,168
<font color="#E5E5E5">is</font><font color="#CCCCCC"> mario dom purify we'll look at</font><font color="#E5E5E5"> that</font>

443
00:18:09,649 --> 00:18:14,149
<font color="#E5E5E5">in just a second</font><font color="#CCCCCC"> so server-side when</font>

444
00:18:12,169 --> 00:18:16,700
you're sending<font color="#E5E5E5"> me a chunk of HTML</font>

445
00:18:14,149 --> 00:18:20,120
I can build<font color="#E5E5E5"> a policy and</font><font color="#CCCCCC"> just a policy</font>

446
00:18:16,700 --> 00:18:23,870
sanitize the HTML and give me safe HTML

447
00:18:20,120 --> 00:18:27,918
as a quick<font color="#E5E5E5"> aside it's almost impossible</font>

448
00:18:23,870 --> 00:18:30,620
<font color="#E5E5E5">to detect if a chunk of HTML is insecure</font>

449
00:18:27,919 --> 00:18:33,740
<font color="#CCCCCC">like</font><font color="#E5E5E5"> I want an API that</font><font color="#CCCCCC"> says is this</font>

450
00:18:30,620 --> 00:18:36,709
HTML safe or not<font color="#E5E5E5"> no language does that</font>

451
00:18:33,740 --> 00:18:40,360
well<font color="#E5E5E5"> what I can</font><font color="#CCCCCC"> say is here's a policy</font>

452
00:18:36,710 --> 00:18:43,159
<font color="#E5E5E5">here's the tags I'm gonna allow please</font>

453
00:18:40,360 --> 00:18:46,549
remove<font color="#E5E5E5"> any content</font><font color="#CCCCCC"> that</font><font color="#E5E5E5"> doesn't fit</font>

454
00:18:43,159 --> 00:18:48,740
those tags<font color="#CCCCCC"> and do a sanitizing round</font><font color="#E5E5E5"> one</font>

455
00:18:46,549 --> 00:18:51,379
<font color="#E5E5E5">of the rules of secure coding is you</font>

456
00:18:48,740 --> 00:18:53,830
validate and if those validation rules

457
00:18:51,380 --> 00:18:56,270
<font color="#E5E5E5">fail what should we do with</font><font color="#CCCCCC"> that content</font>

458
00:18:53,830 --> 00:18:58,760
<font color="#E5E5E5">you're submitting</font><font color="#CCCCCC"> content to my web</font>

459
00:18:56,270 --> 00:19:01,908
service you<font color="#E5E5E5"> my validation rules say it's</font>

460
00:18:58,760 --> 00:19:04,010
invalid content<font color="#E5E5E5"> what's my next move drop</font>

461
00:19:01,909 --> 00:19:06,529
the<font color="#E5E5E5"> whole request but when it comes to</font>

462
00:19:04,010 --> 00:19:10,399
HTML sanitizers<font color="#E5E5E5"> we don't have that</font>

463
00:19:06,529 --> 00:19:13,490
<font color="#E5E5E5">luxury</font><font color="#CCCCCC"> it take bad HTML from</font><font color="#E5E5E5"> a user with</font>

464
00:19:10,399 --> 00:19:16,070
<font color="#CCCCCC">attacks in it sanitize it and then put</font>

465
00:19:13,490 --> 00:19:17,720
the sanitized version of<font color="#E5E5E5"> this content in</font>

466
00:19:16,070 --> 00:19:19,970
the database<font color="#E5E5E5"> is usually my</font>

467
00:19:17,720 --> 00:19:21,980
recommendation<font color="#E5E5E5"> it's a strange case in</font>

468
00:19:19,970 --> 00:19:23,990
the<font color="#E5E5E5"> world of</font><font color="#CCCCCC"> security in my opinion and</font>

469
00:19:21,980 --> 00:19:26,330
a lot of<font color="#E5E5E5"> people make mistakes here</font><font color="#CCCCCC"> if</font>

470
00:19:23,990 --> 00:19:28,789
you're a dotnet<font color="#E5E5E5"> author there is no good</font>

471
00:19:26,330 --> 00:19:30,529
sanitizer in<font color="#CCCCCC"> the.net ecosystem</font><font color="#E5E5E5"> and I'll</font>

472
00:19:28,789 --> 00:19:33,379
just look at where you're<font color="#E5E5E5"> doing HTML</font>

473
00:19:30,529 --> 00:19:34,850
<font color="#CCCCCC">authoring I almost always find an XSS</font>

474
00:19:33,380 --> 00:19:37,279
<font color="#CCCCCC">endpoint there because of the lack of</font>

475
00:19:34,850 --> 00:19:40,039
<font color="#E5E5E5">this in some languages this is why</font><font color="#CCCCCC"> Dom</font>

476
00:19:37,279 --> 00:19:42,740
purify is so important with<font color="#E5E5E5"> Dom purify</font>

477
00:19:40,039 --> 00:19:44,360
it's a JavaScript<font color="#CCCCCC"> library it's</font><font color="#E5E5E5"> not if</font>

478
00:19:42,740 --> 00:19:47,149
<font color="#E5E5E5">you have to</font><font color="#CCCCCC"> configure</font><font color="#E5E5E5"> it it's very it's</font>

479
00:19:44,360 --> 00:19:50,389
very tolerant<font color="#E5E5E5"> of HTML and JavaScript</font>

480
00:19:47,149 --> 00:19:52,879
<font color="#E5E5E5">it's high</font><font color="#CCCCCC"> speed using</font><font color="#E5E5E5"> browser native</font>

481
00:19:50,390 --> 00:19:56,590
constructs<font color="#E5E5E5"> so I can by the way</font>

482
00:19:52,880 --> 00:19:58,279
<font color="#CCCCCC">enter HTML is that safe to use is</font>

483
00:19:56,590 --> 00:20:00,620
<font color="#CCCCCC">innerhtml</font>

484
00:19:58,279 --> 00:20:03,799
a safe construct to use in<font color="#CCCCCC"> javascript</font>

485
00:20:00,620 --> 00:20:07,219
from<font color="#CCCCCC"> a security</font><font color="#E5E5E5"> perspective no it's not</font>

486
00:20:03,799 --> 00:20:10,399
<font color="#CCCCCC">because I that gets to enter HTML well</font>

487
00:20:07,220 --> 00:20:10,550
XSS will lead to XSS<font color="#E5E5E5"> here's a quick</font><font color="#CCCCCC"> way</font>

488
00:20:10,399 --> 00:20:13,060
to

489
00:20:10,550 --> 00:20:15,470
<font color="#CCCCCC">Fix al are actually saw a large</font>

490
00:20:13,060 --> 00:20:17,960
<font color="#CCCCCC">multi-million</font><font color="#E5E5E5"> line application and</font>

491
00:20:15,470 --> 00:20:20,930
locked it down and pushed it live in one

492
00:20:17,960 --> 00:20:22,850
day<font color="#E5E5E5"> with this trick innerhtml is</font>

493
00:20:20,930 --> 00:20:24,770
dangerous<font color="#CCCCCC"> I'll just</font><font color="#E5E5E5"> wrap down purify</font>

494
00:20:22,850 --> 00:20:26,750
around that dangerous content<font color="#E5E5E5"> and this</font>

495
00:20:24,770 --> 00:20:29,810
risk goes away<font color="#E5E5E5"> this should be how the</font>

496
00:20:26,750 --> 00:20:31,760
browser works natively<font color="#CCCCCC"> and it will in</font>

497
00:20:29,810 --> 00:20:35,450
the<font color="#CCCCCC"> near future but</font><font color="#E5E5E5"> this is a quick way</font>

498
00:20:31,760 --> 00:20:38,300
to<font color="#E5E5E5"> fix older applications</font><font color="#CCCCCC"> pre the early</font>

499
00:20:35,450 --> 00:20:40,460
Ajax<font color="#E5E5E5"> weak browsers were inconsistent we</font>

500
00:20:38,300 --> 00:20:43,430
sent a lot<font color="#CCCCCC"> of chunks</font><font color="#E5E5E5"> of HTML around the</font>

501
00:20:40,460 --> 00:20:46,100
Dom so old<font color="#E5E5E5"> apps</font><font color="#CCCCCC"> it's a quick fix again</font>

502
00:20:43,430 --> 00:20:49,220
we saw I saw<font color="#E5E5E5"> an app with part of</font><font color="#CCCCCC"> my</font><font color="#E5E5E5"> team</font>

503
00:20:46,100 --> 00:20:51,770
<font color="#E5E5E5">and the customer was like we got a quote</font>

504
00:20:49,220 --> 00:20:53,870
from another consultancy<font color="#E5E5E5"> who want a</font>

505
00:20:51,770 --> 00:20:56,060
quarter million dollars to<font color="#E5E5E5"> rewrite the</font>

506
00:20:53,870 --> 00:20:57,679
whole JavaScript layer and I'm like I

507
00:20:56,060 --> 00:20:59,720
can I'll do it<font color="#E5E5E5"> for 20 bucks</font><font color="#CCCCCC"> in a</font>

508
00:20:57,680 --> 00:21:01,820
<font color="#E5E5E5">cheeseburger</font><font color="#CCCCCC"> and they're like quite</font>

509
00:20:59,720 --> 00:21:03,710
compelling<font color="#CCCCCC"> and</font><font color="#E5E5E5"> there's</font><font color="#CCCCCC"> the sales</font><font color="#E5E5E5"> guy</font>

510
00:21:01,820 --> 00:21:05,810
here<font color="#E5E5E5"> going what is wrong with you Jim</font>

511
00:21:03,710 --> 00:21:07,280
<font color="#CCCCCC">ten</font><font color="#E5E5E5"> dollars</font><font color="#CCCCCC"> into cheeseburger</font><font color="#E5E5E5"> it's</font>

512
00:21:05,810 --> 00:21:11,000
called<font color="#CCCCCC"> karma</font><font color="#E5E5E5"> don't worry about it don't</font>

513
00:21:07,280 --> 00:21:13,070
worry<font color="#CCCCCC"> about</font><font color="#E5E5E5"> it so we just</font><font color="#CCCCCC"> found all the</font>

514
00:21:11,000 --> 00:21:16,280
<font color="#E5E5E5">dangerous sinks they were</font><font color="#CCCCCC"> using this</font><font color="#E5E5E5"> per</font>

515
00:21:13,070 --> 00:21:18,439
standard<font color="#CCCCCC"> did that in</font><font color="#E5E5E5"> about</font><font color="#CCCCCC"> 3000</font><font color="#E5E5E5"> places</font>

516
00:21:16,280 --> 00:21:20,750
<font color="#E5E5E5">we're done in a day that app was being</font>

517
00:21:18,440 --> 00:21:23,540
pushed live which<font color="#CCCCCC"> radically less</font><font color="#E5E5E5"> XSS</font>

518
00:21:20,750 --> 00:21:24,550
<font color="#E5E5E5">love this</font><font color="#CCCCCC"> library</font><font color="#E5E5E5"> so and and what the</font>

519
00:21:23,540 --> 00:21:27,290
other reason I like<font color="#CCCCCC"> this library</font>

520
00:21:24,550 --> 00:21:29,990
<font color="#CCCCCC">remember one of</font><font color="#E5E5E5"> the principles of secure</font>

521
00:21:27,290 --> 00:21:33,050
user interface in my opinion is make

522
00:21:29,990 --> 00:21:35,920
<font color="#CCCCCC">sure the user interface</font><font color="#E5E5E5"> does the defense</font>

523
00:21:33,050 --> 00:21:38,780
<font color="#E5E5E5">automatically try not to depend on</font>

524
00:21:35,920 --> 00:21:42,260
server-side constructs<font color="#E5E5E5"> as we move</font><font color="#CCCCCC"> into</font>

525
00:21:38,780 --> 00:21:44,840
react<font color="#CCCCCC"> and angular</font><font color="#E5E5E5"> and using this</font><font color="#CCCCCC"> library</font>

526
00:21:42,260 --> 00:21:47,060
<font color="#CCCCCC">I</font><font color="#E5E5E5"> can build a secure user interface</font>

527
00:21:44,840 --> 00:21:50,000
where<font color="#E5E5E5"> every single variable from the</font>

528
00:21:47,060 --> 00:21:52,669
<font color="#E5E5E5">server is a dangerous payload by by</font>

529
00:21:50,000 --> 00:21:53,930
<font color="#E5E5E5">using react angular and proper Dom</font>

530
00:21:52,670 --> 00:21:57,890
purification<font color="#CCCCCC"> where needed</font>

531
00:21:53,930 --> 00:21:59,600
so yeah there we go well here's let's

532
00:21:57,890 --> 00:22:02,450
look at Dom XSS now let's go a<font color="#CCCCCC"> little</font>

533
00:21:59,600 --> 00:22:04,790
<font color="#E5E5E5">deeper into</font><font color="#CCCCCC"> it Dom XSS happens usually</font>

534
00:22:02,450 --> 00:22:07,160
when<font color="#E5E5E5"> we're moving data back and forth</font>

535
00:22:04,790 --> 00:22:10,100
<font color="#E5E5E5">between different</font><font color="#CCCCCC"> JavaScript</font><font color="#E5E5E5"> functions</font>

536
00:22:07,160 --> 00:22:12,110
<font color="#E5E5E5">all of these functions</font><font color="#CCCCCC"> eval document</font>

537
00:22:10,100 --> 00:22:14,330
<font color="#CCCCCC">writes that these</font><font color="#E5E5E5"> are all</font><font color="#CCCCCC"> extremely</font>

538
00:22:12,110 --> 00:22:17,000
dangerous<font color="#E5E5E5"> in fact most of our</font>

539
00:22:14,330 --> 00:22:18,889
assignments and function calls in

540
00:22:17,000 --> 00:22:21,080
JavaScript are<font color="#E5E5E5"> very</font><font color="#CCCCCC"> dangerous if I get</font>

541
00:22:18,890 --> 00:22:23,180
bad content to that<font color="#E5E5E5"> variable</font><font color="#CCCCCC"> to that</font>

542
00:22:21,080 --> 00:22:24,168
<font color="#E5E5E5">assignment or variable leads to exercise</font>

543
00:22:23,180 --> 00:22:26,480
least<font color="#E5E5E5"> JavaScript</font>

544
00:22:24,169 --> 00:22:28,399
execution<font color="#CCCCCC"> I want to use I want to</font><font color="#E5E5E5"> use</font>

545
00:22:26,480 --> 00:22:30,619
<font color="#E5E5E5">safe functions but very few of</font><font color="#CCCCCC"> them are</font>

546
00:22:28,399 --> 00:22:31,908
and here they are<font color="#CCCCCC"> right this</font><font color="#E5E5E5"> is the safe</font>

547
00:22:30,619 --> 00:22:34,759
collection of function something<font color="#E5E5E5"> like</font>

548
00:22:31,909 --> 00:22:38,359
<font color="#E5E5E5">text content class name</font><font color="#CCCCCC"> setting a safe</font>

549
00:22:34,759 --> 00:22:40,609
attribute dot value<font color="#E5E5E5"> is safe the put and</font>

550
00:22:38,359 --> 00:22:42,590
<font color="#E5E5E5">inner HTML is safe if I'm properly Dom</font>

551
00:22:40,609 --> 00:22:44,960
purifying it the point I'm trying to

552
00:22:42,590 --> 00:22:48,109
<font color="#E5E5E5">make is with a little bit of knowledge</font><font color="#CCCCCC"> a</font>

553
00:22:44,960 --> 00:22:50,840
developer will understand how I<font color="#CCCCCC"> can</font>

554
00:22:48,109 --> 00:22:53,178
safely push data<font color="#CCCCCC"> around</font><font color="#E5E5E5"> in JavaScript</font>

555
00:22:50,840 --> 00:22:55,730
<font color="#E5E5E5">and these problems go away</font><font color="#CCCCCC"> it doesn't</font>

556
00:22:53,179 --> 00:22:58,369
<font color="#CCCCCC">harm innovation it's just a</font><font color="#E5E5E5"> little bit</font>

557
00:22:55,730 --> 00:23:01,580
of knowledge<font color="#E5E5E5"> and a very simplistic trick</font>

558
00:22:58,369 --> 00:23:03,709
<font color="#E5E5E5">and Dom XSS just goes away but the</font>

559
00:23:01,580 --> 00:23:06,559
problem is what if you're<font color="#E5E5E5"> writing code</font>

560
00:23:03,710 --> 00:23:08,690
<font color="#CCCCCC">for several months or years without</font><font color="#E5E5E5"> this</font>

561
00:23:06,559 --> 00:23:11,690
<font color="#CCCCCC">knowledge</font><font color="#E5E5E5"> you're</font><font color="#CCCCCC"> going to write lots of</font>

562
00:23:08,690 --> 00:23:13,999
XSS and unwinding it is extremely

563
00:23:11,690 --> 00:23:16,879
painful<font color="#E5E5E5"> and difficult again why I like</font>

564
00:23:13,999 --> 00:23:19,489
that<font color="#E5E5E5"> Dom purify tricks so much so again</font>

565
00:23:16,879 --> 00:23:22,248
my<font color="#CCCCCC"> recommendation is heavily educate</font>

566
00:23:19,489 --> 00:23:24,919
your team<font color="#E5E5E5"> about proper user interface</font>

567
00:23:22,249 --> 00:23:27,739
security before<font color="#CCCCCC"> a</font><font color="#E5E5E5"> project starts is a</font>

568
00:23:24,919 --> 00:23:30,350
most cost effective way<font color="#E5E5E5"> to</font><font color="#CCCCCC"> address this</font>

569
00:23:27,739 --> 00:23:32,239
issue also<font color="#CCCCCC"> let's look at</font><font color="#E5E5E5"> JSON we're</font>

570
00:23:30,350 --> 00:23:34,549
doing a lot of JSON<font color="#E5E5E5"> slinging in the</font>

571
00:23:32,239 --> 00:23:36,379
modern area before we<font color="#E5E5E5"> get to</font><font color="#CCCCCC"> json</font><font color="#E5E5E5"> yeah</font>

572
00:23:34,549 --> 00:23:38,539
all<font color="#CCCCCC"> of jquery is dangerous</font><font color="#E5E5E5"> pretty much</font>

573
00:23:36,379 --> 00:23:40,879
all of it and there and there's you<font color="#CCCCCC"> know</font>

574
00:23:38,539 --> 00:23:44,119
and there's a few safe things to do in

575
00:23:40,879 --> 00:23:47,840
jquery<font color="#E5E5E5"> like dot</font><font color="#CCCCCC"> txt</font><font color="#E5E5E5"> and dot</font><font color="#CCCCCC"> val</font><font color="#E5E5E5"> and dot</font>

576
00:23:44,119 --> 00:23:51,408
HTML if your<font color="#E5E5E5"> Dom purifying so there's</font>

577
00:23:47,840 --> 00:23:53,959
very few safe ways to<font color="#E5E5E5"> populate the Dom</font>

578
00:23:51,409 --> 00:23:56,299
even<font color="#E5E5E5"> in</font><font color="#CCCCCC"> jQuery</font><font color="#E5E5E5"> and and a little bit of</font>

579
00:23:53,960 --> 00:23:58,700
knowledge goes a long way to<font color="#E5E5E5"> building</font>

580
00:23:56,299 --> 00:24:00,980
secure applications so what does this

581
00:23:58,700 --> 00:24:04,669
slide mean remember I just<font color="#CCCCCC"> said that</font>

582
00:24:00,980 --> 00:24:07,220
text content<font color="#E5E5E5"> is safe but some developer</font>

583
00:24:04,669 --> 00:24:10,369
used it like this<font color="#CCCCCC"> in a JSP</font>

584
00:24:07,220 --> 00:24:13,159
and this led to XSS<font color="#E5E5E5"> where this use</font><font color="#CCCCCC"> of</font>

585
00:24:10,369 --> 00:24:16,459
text content<font color="#E5E5E5"> is completely safe why is</font>

586
00:24:13,159 --> 00:24:19,159
text content dangerous here<font color="#E5E5E5"> and why is</font>

587
00:24:16,460 --> 00:24:22,970
text content safe there<font color="#E5E5E5"> any thoughts</font>

588
00:24:19,159 --> 00:24:26,559
folks yes sir

589
00:24:22,970 --> 00:24:31,100
no<font color="#CCCCCC"> hand just shout it out what's</font><font color="#E5E5E5"> that</font>

590
00:24:26,559 --> 00:24:34,489
<font color="#CCCCCC">give</font><font color="#E5E5E5"> it a little</font><font color="#CCCCCC"> louder which one up</font>

591
00:24:31,100 --> 00:24:36,830
here<font color="#E5E5E5"> right where is this being rendered</font>

592
00:24:34,489 --> 00:24:39,460
what part of my architecture is this

593
00:24:36,830 --> 00:24:43,250
logic being<font color="#CCCCCC"> process</font>

594
00:24:39,460 --> 00:24:46,610
it's on the server<font color="#E5E5E5"> so before this even</font>

595
00:24:43,250 --> 00:24:50,060
renders<font color="#E5E5E5"> I can manipulate that request</font>

596
00:24:46,610 --> 00:24:52,159
data break out of<font color="#CCCCCC"> this text content and</font>

597
00:24:50,060 --> 00:24:54,770
just<font color="#CCCCCC"> add my own evil script</font><font color="#E5E5E5"> because</font><font color="#CCCCCC"> we</font>

598
00:24:52,160 --> 00:24:56,660
are not<font color="#E5E5E5"> even executing JavaScript yet</font>

599
00:24:54,770 --> 00:24:58,760
we're assembling it on the server<font color="#CCCCCC"> now</font>

600
00:24:56,660 --> 00:25:00,650
down here<font color="#CCCCCC"> were in the middle of</font>

601
00:24:58,760 --> 00:25:03,379
JavaScript execution<font color="#CCCCCC"> data</font><font color="#E5E5E5"> is being</font>

602
00:25:00,650 --> 00:25:06,140
passed in the dot J's file<font color="#E5E5E5"> data is being</font>

603
00:25:03,380 --> 00:25:08,750
passed<font color="#E5E5E5"> to this variable and</font><font color="#CCCCCC"> that use of</font>

604
00:25:06,140 --> 00:25:11,120
text content is safe<font color="#E5E5E5"> so if you're moving</font>

605
00:25:08,750 --> 00:25:13,880
<font color="#E5E5E5">data back and</font><font color="#CCCCCC"> forth between</font><font color="#E5E5E5"> JavaScript</font>

606
00:25:11,120 --> 00:25:16,729
<font color="#E5E5E5">functions text content is safe if your</font>

607
00:25:13,880 --> 00:25:18,590
server-side rendering content<font color="#E5E5E5"> all bets</font>

608
00:25:16,730 --> 00:25:21,140
are off you have to<font color="#E5E5E5"> do manual escaping</font>

609
00:25:18,590 --> 00:25:22,820
yourself<font color="#E5E5E5"> so let's look at JSON next</font>

610
00:25:21,140 --> 00:25:25,040
we're winding<font color="#E5E5E5"> neared that we're winding</font>

611
00:25:22,820 --> 00:25:28,250
<font color="#E5E5E5">down near the</font><font color="#CCCCCC"> end here</font><font color="#E5E5E5"> what else do we</font>

612
00:25:25,040 --> 00:25:31,639
got<font color="#CCCCCC"> so when you're</font><font color="#E5E5E5"> parsing JSON use JSON</font>

613
00:25:28,250 --> 00:25:33,590
dot parse<font color="#E5E5E5"> if you use eval in an older</font>

614
00:25:31,640 --> 00:25:37,430
browser especially<font color="#E5E5E5"> that could lead to</font>

615
00:25:33,590 --> 00:25:40,010
XSS<font color="#CCCCCC"> if you're gonna embed JSON don't you</font>

616
00:25:37,430 --> 00:25:42,110
stringify<font color="#E5E5E5"> there's a lot of react another</font>

617
00:25:40,010 --> 00:25:45,440
documentation<font color="#CCCCCC"> that says if you're gonna</font>

618
00:25:42,110 --> 00:25:47,810
embed a piece of JSON on a page then

619
00:25:45,440 --> 00:25:49,430
stringify it<font color="#E5E5E5"> which leads to attacks like</font>

620
00:25:47,810 --> 00:25:52,250
<font color="#E5E5E5">this this is nonsense</font><font color="#CCCCCC"> strangles there's</font>

621
00:25:49,430 --> 00:25:54,320
nothing secure about stringify<font color="#E5E5E5"> if you</font>

622
00:25:52,250 --> 00:25:56,210
see a developer using it block them from

623
00:25:54,320 --> 00:25:58,790
checking it in there's no good<font color="#E5E5E5"> use</font><font color="#CCCCCC"> for</font>

624
00:25:56,210 --> 00:26:00,740
this function<font color="#CCCCCC"> we should be using</font><font color="#E5E5E5"> JSON</font>

625
00:25:58,790 --> 00:26:03,889
serialization<font color="#CCCCCC"> it's a safe use of</font>

626
00:26:00,740 --> 00:26:06,560
serialization<font color="#E5E5E5"> so here json stringify</font>

627
00:26:03,890 --> 00:26:08,450
<font color="#E5E5E5">there's my bypass and</font><font color="#CCCCCC"> the script because</font>

628
00:26:06,560 --> 00:26:10,550
double<font color="#CCCCCC"> Tilda's are not recognized in</font><font color="#E5E5E5"> the</font>

629
00:26:08,450 --> 00:26:12,410
browser<font color="#E5E5E5"> and I got my bypass in a pretty</font>

630
00:26:10,550 --> 00:26:13,700
trivial fashion what we<font color="#E5E5E5"> should do is</font>

631
00:26:12,410 --> 00:26:15,830
<font color="#E5E5E5">something we see from Yahoo right we</font>

632
00:26:13,700 --> 00:26:18,340
should<font color="#CCCCCC"> suit we should do serializing of</font>

633
00:26:15,830 --> 00:26:20,360
<font color="#E5E5E5">JSON there's a lot of different JSON</font>

634
00:26:18,340 --> 00:26:22,760
serializers<font color="#CCCCCC"> in the JavaScript ecosystem</font>

635
00:26:20,360 --> 00:26:25,100
<font color="#E5E5E5">the best is from Yahoo this old-school</font>

636
00:26:22,760 --> 00:26:27,170
<font color="#E5E5E5">well maintained still maintained to this</font>

637
00:26:25,100 --> 00:26:28,909
<font color="#E5E5E5">day when you serialize something JSON</font>

638
00:26:27,170 --> 00:26:30,320
<font color="#E5E5E5">and embed</font><font color="#CCCCCC"> it all the</font><font color="#E5E5E5"> dangerous</font>

639
00:26:28,910 --> 00:26:33,440
characters are escaped as we would

640
00:26:30,320 --> 00:26:35,600
<font color="#CCCCCC">expect</font><font color="#E5E5E5"> and</font><font color="#CCCCCC"> it's a safe way to</font><font color="#E5E5E5"> embed JSON</font>

641
00:26:33,440 --> 00:26:39,140
in the browser<font color="#CCCCCC"> usually for performance</font>

642
00:26:35,600 --> 00:26:42,409
purposes<font color="#CCCCCC"> all</font><font color="#E5E5E5"> right sandboxing if you</font>

643
00:26:39,140 --> 00:26:45,400
have a<font color="#E5E5E5"> advertisement first of all secure</font>

644
00:26:42,410 --> 00:26:48,980
applications don't use ads secure

645
00:26:45,400 --> 00:26:51,860
applications do not<font color="#E5E5E5"> embed ads from</font>

646
00:26:48,980 --> 00:26:54,440
<font color="#E5E5E5">third-party trashy advertising that</font>

647
00:26:51,860 --> 00:26:57,709
<font color="#E5E5E5">works this is easy for me</font><font color="#CCCCCC"> to say but I'm</font>

648
00:26:54,440 --> 00:27:00,080
I'm<font color="#E5E5E5"> I'm messing with a multi-billion</font>

649
00:26:57,710 --> 00:27:02,000
dollar industry so I don't want to<font color="#E5E5E5"> deny</font>

650
00:27:00,080 --> 00:27:03,860
the reality of<font color="#CCCCCC"> having to do ads to</font>

651
00:27:02,000 --> 00:27:05,809
monetize some<font color="#E5E5E5"> of your websites but</font>

652
00:27:03,860 --> 00:27:07,610
realize you're taking<font color="#CCCCCC"> a big risk and I</font>

653
00:27:05,809 --> 00:27:10,160
recommend<font color="#E5E5E5"> what</font><font color="#CCCCCC"> you do is drop your ads</font>

654
00:27:07,610 --> 00:27:11,899
in an iframe sandbox<font color="#E5E5E5"> with the width and</font>

655
00:27:10,160 --> 00:27:14,480
you can with all<font color="#E5E5E5"> the different scripts</font>

656
00:27:11,900 --> 00:27:16,760
<font color="#E5E5E5">turned off</font><font color="#CCCCCC"> now you can visually render</font>

657
00:27:14,480 --> 00:27:18,830
an ad and disable JavaScript<font color="#CCCCCC"> your ad</font>

658
00:27:16,760 --> 00:27:21,650
networks will pay you a lot less if

659
00:27:18,830 --> 00:27:23,840
you're gonna embed an ad directly on

660
00:27:21,650 --> 00:27:26,690
your site though<font color="#E5E5E5"> that's you're basically</font>

661
00:27:23,840 --> 00:27:28,970
saying I don't<font color="#CCCCCC"> care about security in my</font>

662
00:27:26,690 --> 00:27:31,820
opinion because<font color="#E5E5E5"> it's a easy path of</font>

663
00:27:28,970 --> 00:27:33,860
attack<font color="#E5E5E5"> so I and I like new browsers</font>

664
00:27:31,820 --> 00:27:36,168
anybody plays brave at all what does

665
00:27:33,860 --> 00:27:38,928
brave have<font color="#E5E5E5"> a brave as a browser from</font>

666
00:27:36,169 --> 00:27:41,750
Brandon<font color="#E5E5E5"> Ike in the old Firefox team what</font>

667
00:27:38,929 --> 00:27:43,940
what is brave doing<font color="#E5E5E5"> they're doing ad</font>

668
00:27:41,750 --> 00:27:45,799
blocking by default<font color="#E5E5E5"> that's what a secure</font>

669
00:27:43,940 --> 00:27:47,240
browser<font color="#E5E5E5"> does we're not gonna see</font><font color="#CCCCCC"> that</font>

670
00:27:45,799 --> 00:27:49,730
from other players anytime soon though

671
00:27:47,240 --> 00:27:53,150
<font color="#E5E5E5">so there's in</font><font color="#CCCCCC"> fact anybody</font><font color="#E5E5E5"> ever see the</font>

672
00:27:49,730 --> 00:27:55,160
site jsfiddle by any chance this<font color="#E5E5E5"> is</font><font color="#CCCCCC"> a</font>

673
00:27:53,150 --> 00:27:58,340
developer site you can upload your<font color="#CCCCCC"> own</font>

674
00:27:55,160 --> 00:28:00,440
<font color="#E5E5E5">JavaScript</font><font color="#CCCCCC"> to it and it executes on the</font>

675
00:27:58,340 --> 00:28:02,899
site<font color="#E5E5E5"> what do you think of</font><font color="#CCCCCC"> that security</font>

676
00:28:00,440 --> 00:28:06,080
<font color="#CCCCCC">people that should give you pause right</font>

677
00:28:02,900 --> 00:28:08,929
<font color="#E5E5E5">but they deliver that</font><font color="#CCCCCC"> javascript in a</font>

678
00:28:06,080 --> 00:28:10,850
<font color="#E5E5E5">sandbox iframe with the</font><font color="#CCCCCC"> lao scripts</font>

679
00:28:08,929 --> 00:28:12,320
<font color="#E5E5E5">turned on everything else turned off and</font>

680
00:28:10,850 --> 00:28:15,469
they deliver from<font color="#E5E5E5"> a different domain</font>

681
00:28:12,320 --> 00:28:17,960
<font color="#E5E5E5">which is</font><font color="#CCCCCC"> a it's a different origin</font><font color="#E5E5E5"> and a</font>

682
00:28:15,470 --> 00:28:20,270
different domain<font color="#E5E5E5"> cookies are bound by</font>

683
00:28:17,960 --> 00:28:21,679
<font color="#E5E5E5">the domain</font><font color="#CCCCCC"> everything else is bound</font><font color="#E5E5E5"> by</font>

684
00:28:20,270 --> 00:28:23,510
<font color="#E5E5E5">the origin there those are these are</font>

685
00:28:21,679 --> 00:28:25,640
different<font color="#E5E5E5"> things</font><font color="#CCCCCC"> so they've shut they've</font>

686
00:28:23,510 --> 00:28:28,100
isolated this<font color="#E5E5E5"> content from both the</font>

687
00:28:25,640 --> 00:28:30,260
origin<font color="#E5E5E5"> and the domain and they have a</font>

688
00:28:28,100 --> 00:28:32,178
sandboxed iframe which is a<font color="#E5E5E5"> unique</font>

689
00:28:30,260 --> 00:28:34,340
origin and now you can execute

690
00:28:32,179 --> 00:28:36,650
<font color="#CCCCCC">JavaScript</font><font color="#E5E5E5"> in your website from a third</font>

691
00:28:34,340 --> 00:28:38,918
party<font color="#CCCCCC"> in a secure fashion it's just it's</font>

692
00:28:36,650 --> 00:28:41,330
it's<font color="#CCCCCC"> stunt development but it's doable</font>

693
00:28:38,919 --> 00:28:43,850
<font color="#E5E5E5">so we're back</font><font color="#CCCCCC"> to this part we're back to</font>

694
00:28:41,330 --> 00:28:48,770
the final<font color="#E5E5E5"> part of the grid how we</font><font color="#CCCCCC"> untime</font>

695
00:28:43,850 --> 00:28:52,219
a mask<font color="#E5E5E5"> 15 minutes that includes</font>

696
00:28:48,770 --> 00:28:54,139
questions<font color="#CCCCCC"> excellent</font><font color="#E5E5E5"> so let's look at</font>

697
00:28:52,220 --> 00:28:56,600
<font color="#E5E5E5">let's go let's go to Rome for a second</font>

698
00:28:54,140 --> 00:29:00,020
right let's go to Rome two years<font color="#E5E5E5"> ago in</font>

699
00:28:56,600 --> 00:29:03,110
Rome we saw two very outstanding Google

700
00:29:00,020 --> 00:29:05,210
engineers<font color="#CCCCCC"> Mike where are</font><font color="#E5E5E5"> they yeah mmm</font>

701
00:29:03,110 --> 00:29:06,139
<font color="#E5E5E5">Michele</font><font color="#CCCCCC"> spagnolo and Lucas</font><font color="#E5E5E5"> why</font>

702
00:29:05,210 --> 00:29:08,330
<font color="#E5E5E5">shabam I think they're here at this</font>

703
00:29:06,140 --> 00:29:10,850
conference right go see their talk

704
00:29:08,330 --> 00:29:12,799
they're awesome<font color="#CCCCCC"> with a depending on your</font>

705
00:29:10,850 --> 00:29:16,549
<font color="#CCCCCC">perspective this talk is either a very</font>

706
00:29:12,799 --> 00:29:19,700
<font color="#CCCCCC">awesome name</font><font color="#E5E5E5"> or a very unfortunate</font><font color="#CCCCCC"> name</font>

707
00:29:16,549 --> 00:29:22,639
making CSP great again this is the best

708
00:29:19,700 --> 00:29:25,010
talk on content security policy<font color="#E5E5E5"> of all</font>

709
00:29:22,640 --> 00:29:28,399
time<font color="#E5E5E5"> and it's</font><font color="#CCCCCC"> and again CSP is a</font>

710
00:29:25,010 --> 00:29:31,940
response header it's meant to<font color="#E5E5E5"> it's meant</font>

711
00:29:28,399 --> 00:29:34,250
to allow you to programmatically<font color="#E5E5E5"> disable</font>

712
00:29:31,940 --> 00:29:35,870
and limit what the browser can do as

713
00:29:34,250 --> 00:29:38,059
soon<font color="#E5E5E5"> as you turn</font><font color="#CCCCCC"> on content security</font>

714
00:29:35,870 --> 00:29:39,590
policy<font color="#CCCCCC"> a whole bunch of things</font><font color="#E5E5E5"> take</font>

715
00:29:38,059 --> 00:29:42,950
effect<font color="#E5E5E5"> right</font><font color="#CCCCCC"> away it's</font><font color="#E5E5E5"> just</font><font color="#CCCCCC"> a response</font>

716
00:29:39,590 --> 00:29:46,129
<font color="#CCCCCC">header right away inline javascript</font>

717
00:29:42,950 --> 00:29:48,529
stops working<font color="#CCCCCC"> right what else</font><font color="#E5E5E5"> works so</font>

718
00:29:46,130 --> 00:29:50,480
<font color="#E5E5E5">inline script stops working</font><font color="#CCCCCC"> the eval</font>

719
00:29:48,529 --> 00:29:52,520
function<font color="#CCCCCC"> is turned off and</font><font color="#E5E5E5"> the browser</font>

720
00:29:50,480 --> 00:29:56,480
is limited in how it can<font color="#CCCCCC"> execute</font>

721
00:29:52,520 --> 00:29:59,270
<font color="#E5E5E5">JavaScript and for years CSP</font><font color="#CCCCCC"> has</font><font color="#E5E5E5"> been</font>

722
00:29:56,480 --> 00:30:01,899
live how many people are using CSP in

723
00:29:59,270 --> 00:30:04,549
this room in their work<font color="#E5E5E5"> what yeah like a</font>

724
00:30:01,899 --> 00:30:07,340
good number<font color="#E5E5E5"> like 20% of you</font>

725
00:30:04,549 --> 00:30:09,950
but overall CSP is very elusive<font color="#CCCCCC"> or</font>

726
00:30:07,340 --> 00:30:12,740
people use CSP policies that are<font color="#CCCCCC"> very</font>

727
00:30:09,950 --> 00:30:15,860
easy to<font color="#CCCCCC"> bypass and for most</font><font color="#E5E5E5"> developers</font>

728
00:30:12,740 --> 00:30:19,130
moving to CSP is painfully difficult

729
00:30:15,860 --> 00:30:21,350
<font color="#CCCCCC">because</font><font color="#E5E5E5"> of</font><font color="#CCCCCC"> the individual customization</font>

730
00:30:19,130 --> 00:30:22,850
you<font color="#E5E5E5"> need for every page that's why all</font>

731
00:30:21,350 --> 00:30:25,370
you raised your hand your consultants

732
00:30:22,850 --> 00:30:27,020
probably charging<font color="#E5E5E5"> people to roll out CSP</font>

733
00:30:25,370 --> 00:30:28,908
per page I don't<font color="#E5E5E5"> think that's a good</font>

734
00:30:27,020 --> 00:30:31,610
idea<font color="#CCCCCC"> though I don't</font><font color="#E5E5E5"> think that kind of</font>

735
00:30:28,909 --> 00:30:33,409
<font color="#CCCCCC">whitelisting effort and manual policy</font>

736
00:30:31,610 --> 00:30:34,820
<font color="#E5E5E5">creation</font><font color="#CCCCCC"> I don't</font><font color="#E5E5E5"> think the benefits are</font>

737
00:30:33,409 --> 00:30:37,370
worth it<font color="#CCCCCC"> I think this should be</font><font color="#E5E5E5"> your</font>

738
00:30:34,820 --> 00:30:41,029
policy<font color="#E5E5E5"> now this is a this is a</font><font color="#CCCCCC"> two-year</font>

739
00:30:37,370 --> 00:30:43,428
<font color="#CCCCCC">old slide I am</font><font color="#E5E5E5"> eager to look at a slide</font>

740
00:30:41,029 --> 00:30:46,100
that<font color="#E5E5E5"> has a better description of CSP in</font>

741
00:30:43,429 --> 00:30:48,440
the modern world<font color="#CCCCCC"> two years later</font><font color="#E5E5E5"> I</font><font color="#CCCCCC"> think</font>

742
00:30:46,100 --> 00:30:50,240
this is the best<font color="#E5E5E5"> out there</font><font color="#CCCCCC"> so what this</font>

743
00:30:48,440 --> 00:30:52,159
<font color="#CCCCCC">policy does is that</font><font color="#E5E5E5"> this is again this</font>

744
00:30:50,240 --> 00:30:53,690
<font color="#CCCCCC">is from this is a slide directly</font><font color="#E5E5E5"> from</font>

745
00:30:52,159 --> 00:30:57,260
<font color="#CCCCCC">these two gentlemen who are here today</font>

746
00:30:53,690 --> 00:30:59,570
<font color="#CCCCCC">so we have a CSP policy</font><font color="#E5E5E5"> that says let's</font>

747
00:30:57,260 --> 00:31:03,620
let's not<font color="#CCCCCC"> our inline script</font>

748
00:30:59,570 --> 00:31:05,960
<font color="#E5E5E5">let's automatically allow dependencies</font>

749
00:31:03,620 --> 00:31:08,149
<font color="#E5E5E5">from one library to bubble up to the top</font>

750
00:31:05,960 --> 00:31:11,330
<font color="#CCCCCC">let's make sure that</font><font color="#E5E5E5"> we're allowing</font>

751
00:31:08,149 --> 00:31:13,549
unsafe inline<font color="#E5E5E5"> only if it's a very old</font>

752
00:31:11,330 --> 00:31:15,620
<font color="#CCCCCC">version of</font><font color="#E5E5E5"> the policy and let's revert</font>

753
00:31:13,549 --> 00:31:18,230
to a whitelist<font color="#CCCCCC"> only for old versions of</font>

754
00:31:15,620 --> 00:31:18,679
the policy so in a new browser where CSP

755
00:31:18,230 --> 00:31:21,350
level

756
00:31:18,680 --> 00:31:24,230
we have a knots<font color="#CCCCCC"> which means we can add a</font>

757
00:31:21,350 --> 00:31:26,480
<font color="#CCCCCC">nonce to inline CSP</font><font color="#E5E5E5"> we have strict</font>

758
00:31:24,230 --> 00:31:28,880
dynamic which says any chunk which is

759
00:31:26,480 --> 00:31:31,520
not allow the whole<font color="#CCCCCC"> hierarchy of those</font>

760
00:31:28,880 --> 00:31:34,250
files to automatically load and and and

761
00:31:31,520 --> 00:31:36,800
as soon as we turn<font color="#E5E5E5"> on the knots unsafe</font>

762
00:31:34,250 --> 00:31:39,200
in I'm sorry<font color="#CCCCCC"> Suze we knots unsafe</font><font color="#E5E5E5"> inline</font>

763
00:31:36,800 --> 00:31:40,790
<font color="#E5E5E5">is turned off and as soon</font><font color="#CCCCCC"> as we put on</font>

764
00:31:39,200 --> 00:31:42,920
strict dynamic which is automatic

765
00:31:40,790 --> 00:31:44,870
propagation<font color="#CCCCCC"> it turns off</font><font color="#E5E5E5"> the whitelist</font>

766
00:31:42,920 --> 00:31:47,510
<font color="#E5E5E5">now that we drop down to an older</font>

767
00:31:44,870 --> 00:31:50,809
browser CSP level<font color="#CCCCCC"> 2 same exact policy</font>

768
00:31:47,510 --> 00:31:53,300
<font color="#E5E5E5">mind you the knots</font><font color="#CCCCCC"> takes effect</font><font color="#E5E5E5"> strict</font>

769
00:31:50,809 --> 00:31:56,270
dynamic never worked in CSP<font color="#CCCCCC"> 2 didn't</font>

770
00:31:53,300 --> 00:31:58,129
exist<font color="#E5E5E5"> so unsafe inline is still disabled</font>

771
00:31:56,270 --> 00:32:00,670
because<font color="#E5E5E5"> I'm not saying and and the</font>

772
00:31:58,130 --> 00:32:03,650
<font color="#CCCCCC">wildcard policy shows up saying</font><font color="#E5E5E5"> any</font>

773
00:32:00,670 --> 00:32:06,170
<font color="#E5E5E5">JavaScript over HTTP is allowed to load</font>

774
00:32:03,650 --> 00:32:07,460
<font color="#E5E5E5">this is not a strict policy but the</font>

775
00:32:06,170 --> 00:32:10,250
point is we're trying to<font color="#E5E5E5"> make a</font>

776
00:32:07,460 --> 00:32:11,750
deliverable policy that developers can

777
00:32:10,250 --> 00:32:14,480
use<font color="#E5E5E5"> that will have backwards</font>

778
00:32:11,750 --> 00:32:17,660
compatibility across older versions<font color="#E5E5E5"> of</font>

779
00:32:14,480 --> 00:32:19,970
CSP<font color="#E5E5E5"> this pulls it off</font><font color="#CCCCCC"> it's I've I was</font>

780
00:32:17,660 --> 00:32:22,010
teaching a company recently<font color="#CCCCCC"> a</font><font color="#E5E5E5"> very large</font>

781
00:32:19,970 --> 00:32:24,230
food company<font color="#E5E5E5"> it's one of the engineers</font>

782
00:32:22,010 --> 00:32:26,270
who<font color="#E5E5E5"> ran their main domain which is</font>

783
00:32:24,230 --> 00:32:28,460
complex<font color="#E5E5E5"> push this out in the middle of</font>

784
00:32:26,270 --> 00:32:31,070
class because it got through<font color="#CCCCCC"> his DevOps</font>

785
00:32:28,460 --> 00:32:32,780
automation a<font color="#E5E5E5"> little shocked but it was</font>

786
00:32:31,070 --> 00:32:35,059
it's awesome it's easy to roll this out

787
00:32:32,780 --> 00:32:38,450
and it's<font color="#CCCCCC"> and last as we fall back to a</font>

788
00:32:35,059 --> 00:32:40,399
CSP level one browser<font color="#CCCCCC"> what</font><font color="#E5E5E5"> not</font><font color="#CCCCCC"> just</font>

789
00:32:38,450 --> 00:32:42,530
don't<font color="#E5E5E5"> work</font><font color="#CCCCCC"> circ dynamic doesn't</font><font color="#E5E5E5"> work and</font>

790
00:32:40,400 --> 00:32:46,280
<font color="#E5E5E5">we have a very unsecure policy unsafe</font>

791
00:32:42,530 --> 00:32:48,620
<font color="#E5E5E5">inline and any an endo any HBS site as a</font>

792
00:32:46,280 --> 00:32:50,750
whitelist<font color="#CCCCCC"> well your at CSP level</font><font color="#E5E5E5"> one in</font>

793
00:32:48,620 --> 00:32:52,820
the first<font color="#E5E5E5"> place</font><font color="#CCCCCC"> knop</font><font color="#E5E5E5"> Singh doesn't exist</font>

794
00:32:50,750 --> 00:32:54,950
<font color="#E5E5E5">and you're using inline JavaScript</font><font color="#CCCCCC"> I</font>

795
00:32:52,820 --> 00:32:58,010
can't help you here<font color="#E5E5E5"> so this is set up to</font>

796
00:32:54,950 --> 00:33:00,320
<font color="#E5E5E5">fall back properly and still at least be</font>

797
00:32:58,010 --> 00:33:03,290
enabled in an older browser<font color="#CCCCCC"> I love this</font>

798
00:33:00,320 --> 00:33:05,750
because<font color="#E5E5E5"> the CSP level one which requires</font>

799
00:33:03,290 --> 00:33:07,850
strict<font color="#E5E5E5"> in</font><font color="#CCCCCC"> law a lack of inline script</font>

800
00:33:05,750 --> 00:33:11,000
<font color="#E5E5E5">I've seen people mess with it for years</font>

801
00:33:07,850 --> 00:33:12,678
<font color="#CCCCCC">and not push it live and as soon as</font><font color="#E5E5E5"> not</font>

802
00:33:11,000 --> 00:33:14,960
<font color="#E5E5E5">Singh shows up we see it get to push</font>

803
00:33:12,679 --> 00:33:18,950
live<font color="#E5E5E5"> din days and as soon as this shows</font>

804
00:33:14,960 --> 00:33:21,050
up strict<font color="#E5E5E5"> dynamic CSP level</font><font color="#CCCCCC"> 3 policy it</font>

805
00:33:18,950 --> 00:33:24,500
becomes<font color="#E5E5E5"> we can deliver it in the middle</font>

806
00:33:21,050 --> 00:33:28,730
of class right<font color="#E5E5E5"> so this is</font><font color="#CCCCCC"> all together</font>

807
00:33:24,500 --> 00:33:30,470
<font color="#E5E5E5">now this is how you stop</font><font color="#CCCCCC"> extra sass well</font>

808
00:33:28,730 --> 00:33:32,269
if<font color="#E5E5E5"> this was a facebook relationship</font>

809
00:33:30,470 --> 00:33:36,979
status

810
00:33:32,269 --> 00:33:40,190
what would it<font color="#CCCCCC"> be it's complicated how</font>

811
00:33:36,979 --> 00:33:42,289
important is this risk category<font color="#CCCCCC"> if you</font>

812
00:33:40,190 --> 00:33:44,959
care<font color="#E5E5E5"> about secure websites you've got to</font>

813
00:33:42,289 --> 00:33:47,239
take too seriously<font color="#CCCCCC"> so the whole point</font><font color="#E5E5E5"> of</font>

814
00:33:44,959 --> 00:33:49,940
this talk is is it's complicated<font color="#CCCCCC"> it</font>

815
00:33:47,239 --> 00:33:51,320
requires a rich amount of<font color="#E5E5E5"> understanding</font>

816
00:33:49,940 --> 00:33:53,629
<font color="#E5E5E5">of how the browser works and how to</font>

817
00:33:51,320 --> 00:33:55,729
build user<font color="#CCCCCC"> interfaces and if you don't</font>

818
00:33:53,629 --> 00:33:58,759
<font color="#E5E5E5">actively work with developers from day</font>

819
00:33:55,729 --> 00:34:01,759
one<font color="#E5E5E5"> to ensure</font><font color="#CCCCCC"> that</font><font color="#E5E5E5"> this knowledge is is</font>

820
00:33:58,759 --> 00:34:04,009
across any<font color="#E5E5E5"> developers mind then you're</font>

821
00:34:01,759 --> 00:34:06,139
likely to get<font color="#E5E5E5"> insecure apps and if you</font>

822
00:34:04,009 --> 00:34:08,629
<font color="#E5E5E5">start building complicated JavaScript</font>

823
00:34:06,139 --> 00:34:11,839
<font color="#E5E5E5">weeks months</font><font color="#CCCCCC"> and months</font><font color="#E5E5E5"> without security</font>

824
00:34:08,629 --> 00:34:13,848
<font color="#E5E5E5">in mind unwinding that mess and making</font>

825
00:34:11,839 --> 00:34:16,219
it secure<font color="#CCCCCC"> is</font><font color="#E5E5E5"> gonna be very</font><font color="#CCCCCC"> expensive</font><font color="#E5E5E5"> and</font>

826
00:34:13,849 --> 00:34:18,859
problematic<font color="#E5E5E5"> in most situations so I'd</font>

827
00:34:16,219 --> 00:34:21,770
like<font color="#E5E5E5"> you</font><font color="#CCCCCC"> to strike this strike it early</font>

828
00:34:18,859 --> 00:34:23,210
<font color="#CCCCCC">on in your teams</font><font color="#E5E5E5"> and verify early and</font>

829
00:34:21,770 --> 00:34:25,879
often to<font color="#CCCCCC"> make sure you're building</font><font color="#E5E5E5"> this</font>

830
00:34:23,210 --> 00:34:28,730
<font color="#E5E5E5">right that's my story</font><font color="#CCCCCC"> I'm very grateful</font>

831
00:34:25,879 --> 00:34:30,730
<font color="#E5E5E5">you all spent the time</font><font color="#CCCCCC"> to listen</font><font color="#E5E5E5"> we have</font>

832
00:34:28,730 --> 00:34:33,049
actually a<font color="#CCCCCC"> lot</font><font color="#E5E5E5"> of time for Q&A I</font>

833
00:34:30,730 --> 00:34:40,719
encourage<font color="#E5E5E5"> you to ask</font><font color="#CCCCCC"> questions so</font><font color="#E5E5E5"> any</font>

834
00:34:33,049 --> 00:34:40,719
questions go ahead<font color="#CCCCCC"> go ahead</font>

835
00:34:41,929 --> 00:34:51,139
<font color="#CCCCCC">Hey I was</font><font color="#E5E5E5"> just</font><font color="#CCCCCC"> wondering are you</font><font color="#E5E5E5"> aware</font>

836
00:34:44,539 --> 00:34:52,309
of any XSS<font color="#E5E5E5"> payloads in SVG</font><font color="#CCCCCC"> tax because I</font>

837
00:34:51,139 --> 00:34:53,929
just<font color="#E5E5E5"> showed you one beginning of the</font>

838
00:34:52,309 --> 00:34:55,849
talk<font color="#E5E5E5"> let me show it you again look at</font>

839
00:34:53,929 --> 00:34:59,240
let's go look at<font color="#E5E5E5"> Gareth</font><font color="#CCCCCC"> Hayes's polygon</font>

840
00:34:55,849 --> 00:35:05,930
<font color="#E5E5E5">and there are tons of SVG payloads this</font>

841
00:34:59,240 --> 00:35:08,689
is just this is<font color="#CCCCCC"> just</font><font color="#E5E5E5"> one right right</font>

842
00:35:05,930 --> 00:35:11,509
there<font color="#E5E5E5"> this is exactly an SVG payload</font>

843
00:35:08,690 --> 00:35:14,029
<font color="#CCCCCC">okay</font><font color="#E5E5E5"> there boom</font><font color="#CCCCCC"> I just there's too many</font>

844
00:35:11,510 --> 00:35:16,309
of them<font color="#E5E5E5"> it's an area a lot of</font><font color="#CCCCCC"> Dell</font><font color="#E5E5E5"> doors</font>

845
00:35:14,029 --> 00:35:18,500
don't lock down<font color="#E5E5E5"> they don't actually do</font>

846
00:35:16,309 --> 00:35:21,079
<font color="#E5E5E5">good validation of SVG markup so it's</font><font color="#CCCCCC"> an</font>

847
00:35:18,500 --> 00:35:22,670
common attack payload<font color="#CCCCCC"> that the the big</font>

848
00:35:21,079 --> 00:35:23,960
players like<font color="#E5E5E5"> to use there you go sir</font>

849
00:35:22,670 --> 00:35:25,700
<font color="#E5E5E5">okay thanks</font>

850
00:35:23,960 --> 00:35:30,250
and it quite more questions<font color="#CCCCCC"> please ask</font>

851
00:35:25,700 --> 00:35:30,250
<font color="#CCCCCC">questions help me out here</font><font color="#E5E5E5"> yes sir</font>

852
00:35:39,539 --> 00:35:44,079
<font color="#E5E5E5">let's take a step back you're talking</font>

853
00:35:41,650 --> 00:35:45,670
about<font color="#E5E5E5"> angular and react right you're not</font>

854
00:35:44,079 --> 00:35:47,799
supposed to do server-side rendering of

855
00:35:45,670 --> 00:35:49,390
those of those frameworks<font color="#CCCCCC"> period Jack</font>

856
00:35:47,799 --> 00:35:52,200
<font color="#CCCCCC">those are all that you're supposed</font><font color="#E5E5E5"> to</font>

857
00:35:49,390 --> 00:35:55,089
build react<font color="#E5E5E5"> and angular templates as</font>

858
00:35:52,200 --> 00:35:57,819
static pieces of content<font color="#CCCCCC"> push them to</font>

859
00:35:55,089 --> 00:36:00,250
the browser<font color="#E5E5E5"> make</font><font color="#CCCCCC"> round-trip Ajax calls</font>

860
00:35:57,819 --> 00:36:02,529
primarily to get JSON and<font color="#E5E5E5"> then</font><font color="#CCCCCC"> deal with</font>

861
00:36:00,250 --> 00:36:04,599
that framework<font color="#E5E5E5"> client side where it</font>

862
00:36:02,529 --> 00:36:07,510
knows how<font color="#E5E5E5"> to handle untrusted content if</font>

863
00:36:04,599 --> 00:36:09,880
you're<font color="#E5E5E5"> doing server side react or</font>

864
00:36:07,510 --> 00:36:11,799
angular rendering mixed with<font color="#CCCCCC"> request</font>

865
00:36:09,880 --> 00:36:13,990
data<font color="#E5E5E5"> that leads to a vulnerability</font>

866
00:36:11,799 --> 00:36:16,299
category called<font color="#CCCCCC"> mark-up</font><font color="#E5E5E5"> called template</font>

867
00:36:13,990 --> 00:36:18,578
injection where I can now inject content

868
00:36:16,299 --> 00:36:21,609
into your<font color="#E5E5E5"> page that's rendering react</font><font color="#CCCCCC"> an</font>

869
00:36:18,579 --> 00:36:23,109
add and change react code at<font color="#E5E5E5"> that point</font>

870
00:36:21,609 --> 00:36:26,259
<font color="#E5E5E5">I don't care what you're doing</font><font color="#CCCCCC"> it's game</font>

871
00:36:23,109 --> 00:36:28,538
<font color="#CCCCCC">over</font><font color="#E5E5E5"> now</font><font color="#CCCCCC"> and you know that's my</font>

872
00:36:26,260 --> 00:36:30,400
traditional philosophy on this<font color="#CCCCCC"> jack and</font>

873
00:36:28,539 --> 00:36:31,869
you're like yeah Jim but I live in<font color="#CCCCCC"> a</font>

874
00:36:30,400 --> 00:36:34,420
different<font color="#CCCCCC"> world</font><font color="#E5E5E5"> called the</font><font color="#CCCCCC"> real world</font>

875
00:36:31,869 --> 00:36:36,279
where developers<font color="#E5E5E5"> still do this</font><font color="#CCCCCC"> a lot</font><font color="#E5E5E5"> and</font>

876
00:36:34,420 --> 00:36:39,009
you got to be careful<font color="#E5E5E5"> here</font><font color="#CCCCCC"> Jack if it's</font>

877
00:36:36,279 --> 00:36:41,430
like an integer and you're dynamically

878
00:36:39,009 --> 00:36:43,779
adding an integer to a template<font color="#E5E5E5"> right</font>

879
00:36:41,430 --> 00:36:46,058
then we<font color="#E5E5E5"> can validate</font><font color="#CCCCCC"> that it's an</font>

880
00:36:43,779 --> 00:36:47,980
integer<font color="#E5E5E5"> use an integer class and we know</font>

881
00:36:46,059 --> 00:36:50,170
for sure it's an integer<font color="#CCCCCC"> you cannot</font>

882
00:36:47,980 --> 00:36:51,970
inject through an integer<font color="#CCCCCC"> you can do</font>

883
00:36:50,170 --> 00:36:53,740
access control by pass through it

884
00:36:51,970 --> 00:36:55,629
sometimes<font color="#CCCCCC"> but you can't</font><font color="#E5E5E5"> inject</font>

885
00:36:53,740 --> 00:36:57,669
JavaScript to an integer<font color="#E5E5E5"> and now that's</font>

886
00:36:55,630 --> 00:36:59,019
safe to<font color="#CCCCCC"> do server-side rendering</font><font color="#E5E5E5"> let's</font>

887
00:36:57,670 --> 00:37:00,609
say you're putting<font color="#CCCCCC"> a username</font><font color="#E5E5E5"> doing</font>

888
00:36:59,019 --> 00:37:02,008
server-side rendering<font color="#CCCCCC"> mix with react</font>

889
00:37:00,609 --> 00:37:04,720
it's just letters<font color="#CCCCCC"> and numbers only</font>

890
00:37:02,009 --> 00:37:07,240
<font color="#E5E5E5">nothing else okay</font><font color="#CCCCCC"> I can do that safely</font>

891
00:37:04,720 --> 00:37:09,339
<font color="#E5E5E5">but start adding spaces and I can hop</font>

892
00:37:07,240 --> 00:37:11,019
out<font color="#CCCCCC"> of an attribute</font><font color="#E5E5E5"> start giving me any</font>

893
00:37:09,339 --> 00:37:12,578
meta characters look at the different

894
00:37:11,019 --> 00:37:15,578
ways<font color="#E5E5E5"> of getting exercise into your site</font>

895
00:37:12,579 --> 00:37:18,309
<font color="#E5E5E5">as soon as the content is anything but</font>

896
00:37:15,579 --> 00:37:20,410
<font color="#E5E5E5">the most simplistic of content these</font>

897
00:37:18,309 --> 00:37:22,920
problems show up<font color="#E5E5E5"> so you can do stuff</font>

898
00:37:20,410 --> 00:37:26,618
<font color="#CCCCCC">Jack like server-side</font>

899
00:37:22,920 --> 00:37:28,450
HTML sanitization or run<font color="#E5E5E5"> XSS filters</font>

900
00:37:26,619 --> 00:37:31,269
through server-side content<font color="#E5E5E5"> you and I</font>

901
00:37:28,450 --> 00:37:33,250
both know that's not complete defense<font color="#E5E5E5"> so</font>

902
00:37:31,269 --> 00:37:35,950
you're talking<font color="#E5E5E5"> about a dangerous</font><font color="#CCCCCC"> pattern</font>

903
00:37:33,250 --> 00:37:38,259
if you<font color="#E5E5E5"> can validate strictly because the</font>

904
00:37:35,950 --> 00:37:40,269
content<font color="#E5E5E5"> is simple you may get away with</font>

905
00:37:38,259 --> 00:37:43,359
it<font color="#CCCCCC"> but if</font><font color="#E5E5E5"> that</font><font color="#CCCCCC"> content is not</font><font color="#E5E5E5"> simple</font>

906
00:37:40,269 --> 00:37:45,279
<font color="#CCCCCC">like a</font><font color="#E5E5E5"> URL a chunk of markup and address</font>

907
00:37:43,359 --> 00:37:47,920
<font color="#CCCCCC">good luck valid just no way you can</font>

908
00:37:45,279 --> 00:37:48,220
<font color="#CCCCCC">validate an address that makes it secure</font>

909
00:37:47,920 --> 00:37:51,340
from

910
00:37:48,220 --> 00:37:52,930
<font color="#CCCCCC">sucess in my opinion so that's my long</font>

911
00:37:51,340 --> 00:38:01,480
<font color="#CCCCCC">answer to a short question</font><font color="#E5E5E5"> fair answer</font>

912
00:37:52,930 --> 00:38:03,520
<font color="#CCCCCC">oh no</font><font color="#E5E5E5"> demetri demetri demetri has been</font>

913
00:38:01,480 --> 00:38:05,410
<font color="#E5E5E5">an app</font><font color="#CCCCCC"> sec</font><font color="#E5E5E5"> pro for about 20</font><font color="#CCCCCC"> years now</font>

914
00:38:03,520 --> 00:38:07,720
working<font color="#CCCCCC"> for the</font><font color="#E5E5E5"> largest Internet</font>

915
00:38:05,410 --> 00:38:13,779
companies out there<font color="#CCCCCC"> alright</font><font color="#E5E5E5"> wait wait no</font>

916
00:38:07,720 --> 00:38:16,029
<font color="#E5E5E5">no let me</font><font color="#CCCCCC"> ask what do you</font><font color="#E5E5E5"> got</font><font color="#CCCCCC"> um</font><font color="#E5E5E5"> so I</font>

917
00:38:13,780 --> 00:38:17,740
<font color="#E5E5E5">won let's say you you want to detect</font>

918
00:38:16,030 --> 00:38:20,380
<font color="#E5E5E5">those from the ability</font><font color="#CCCCCC"> of the static</font>

919
00:38:17,740 --> 00:38:23,109
analysis so<font color="#CCCCCC"> already you're charged with</font>

920
00:38:20,380 --> 00:38:24,910
<font color="#CCCCCC">the task of like detecting these 3</font>

921
00:38:23,109 --> 00:38:26,920
million lines of code<font color="#E5E5E5"> or writing a</font>

922
00:38:24,910 --> 00:38:29,020
system that analyzes pull requests and

923
00:38:26,920 --> 00:38:30,430
<font color="#E5E5E5">sketch of like what would you</font><font color="#CCCCCC"> what would</font>

924
00:38:29,020 --> 00:38:33,460
<font color="#E5E5E5">you recommend are there any tools</font>

925
00:38:30,430 --> 00:38:36,759
<font color="#E5E5E5">flybase or how would</font><font color="#CCCCCC"> you micro machine</font>

926
00:38:33,460 --> 00:38:38,650
is if any vendor tells you just<font color="#CCCCCC"> by my</font>

927
00:38:36,760 --> 00:38:40,990
discovery tool that will solve all<font color="#E5E5E5"> your</font>

928
00:38:38,650 --> 00:38:42,640
problems find all your bugs<font color="#E5E5E5"> Jack Bauer</font>

929
00:38:40,990 --> 00:38:46,000
them off the roof<font color="#E5E5E5"> of your building and</font>

930
00:38:42,640 --> 00:38:49,140
move on<font color="#E5E5E5"> the real</font><font color="#CCCCCC"> the reality here about</font>

931
00:38:46,000 --> 00:38:52,240
dynamic or static tools is never

932
00:38:49,140 --> 00:38:54,069
depending someone everyone<font color="#E5E5E5"> I need some</font>

933
00:38:52,240 --> 00:38:55,569
tweeting<font color="#E5E5E5"> let's get everyone get</font><font color="#CCCCCC"> your</font>

934
00:38:54,070 --> 00:38:59,400
tweets ready you ready<font color="#CCCCCC"> get your tweets</font>

935
00:38:55,570 --> 00:39:04,480
ready<font color="#E5E5E5"> I'm at</font><font color="#CCCCCC"> manic otitis out</font><font color="#E5E5E5"> never</font>

936
00:38:59,400 --> 00:39:08,230
depend<font color="#E5E5E5"> on one tool to</font><font color="#CCCCCC"> do</font><font color="#E5E5E5"> application</font>

937
00:39:04,480 --> 00:39:11,619
security<font color="#E5E5E5"> ever the best out there will</font>

938
00:39:08,230 --> 00:39:13,930
<font color="#E5E5E5">use a dev ops were</font><font color="#CCCCCC"> a dev ops automated</font>

939
00:39:11,619 --> 00:39:15,670
testing chain and throw<font color="#E5E5E5"> everything in</font>

940
00:39:13,930 --> 00:39:18,190
the kitchen<font color="#E5E5E5"> sink at it and do good</font>

941
00:39:15,670 --> 00:39:20,589
triage and combine that with pen testing

942
00:39:18,190 --> 00:39:21,520
combine<font color="#E5E5E5"> that with static analysis</font><font color="#CCCCCC"> tuned</font>

943
00:39:20,589 --> 00:39:24,099
to go fast

944
00:39:21,520 --> 00:39:25,030
combine that with dynamic analysis tuned

945
00:39:24,099 --> 00:39:27,250
to go fast

946
00:39:25,030 --> 00:39:29,410
combine that with dynamic analysis done

947
00:39:27,250 --> 00:39:31,690
by<font color="#E5E5E5"> a developer that's are done by a</font>

948
00:39:29,410 --> 00:39:33,970
security<font color="#E5E5E5"> Pro done slowly</font><font color="#CCCCCC"> and carefully</font>

949
00:39:31,690 --> 00:39:35,890
combine that with static analysis done

950
00:39:33,970 --> 00:39:37,509
slowly<font color="#E5E5E5"> and carefully all those</font>

951
00:39:35,890 --> 00:39:40,000
techniques together<font color="#E5E5E5"> you'll still miss</font>

952
00:39:37,510 --> 00:39:41,980
stuff<font color="#E5E5E5"> so my answer to you</font><font color="#CCCCCC"> is the</font>

953
00:39:40,000 --> 00:39:43,630
<font color="#E5E5E5">question is how do</font><font color="#CCCCCC"> we</font><font color="#E5E5E5"> find cross-site</font>

954
00:39:41,980 --> 00:39:46,300
scripting statically<font color="#E5E5E5"> it's at the basic</font>

955
00:39:43,630 --> 00:39:49,180
question<font color="#E5E5E5"> and my answer is don't depend</font>

956
00:39:46,300 --> 00:39:51,130
on any one vendor<font color="#CCCCCC"> and</font><font color="#E5E5E5"> I'm talking</font><font color="#CCCCCC"> about</font>

957
00:39:49,180 --> 00:39:55,080
my<font color="#CCCCCC"> own come talk about anyone have a</font>

958
00:39:51,130 --> 00:39:58,240
plethora of<font color="#E5E5E5"> different tools in place</font>

959
00:39:55,080 --> 00:40:00,848
<font color="#CCCCCC">rotate those tools over time and you'll</font>

960
00:39:58,240 --> 00:40:02,109
have the best<font color="#CCCCCC"> work with automation to</font>

961
00:40:00,849 --> 00:40:04,210
find those bugs

962
00:40:02,109 --> 00:40:06,069
number two<font color="#CCCCCC"> all of that's gonna</font><font color="#E5E5E5"> miss</font>

963
00:40:04,210 --> 00:40:07,930
stuff<font color="#E5E5E5"> so you want to augment that with</font>

964
00:40:06,069 --> 00:40:09,970
the<font color="#E5E5E5"> human being expert if you have a</font>

965
00:40:07,930 --> 00:40:12,339
<font color="#E5E5E5">high</font><font color="#CCCCCC"> risk application they'll miss stuff</font>

966
00:40:09,970 --> 00:40:15,189
too<font color="#E5E5E5"> so this is why content security</font>

967
00:40:12,339 --> 00:40:16,119
policy is so important to save you<font color="#E5E5E5"> when</font>

968
00:40:15,190 --> 00:40:17,319
mistakes are made

969
00:40:16,119 --> 00:40:21,430
next question<font color="#CCCCCC"> it's not a fair answer</font>

970
00:40:17,319 --> 00:40:23,230
<font color="#CCCCCC">Dimitri by the way Gareth</font><font color="#E5E5E5"> Hayes whose</font>

971
00:40:21,430 --> 00:40:25,660
tweet is on the<font color="#E5E5E5"> screen is presenting</font>

972
00:40:23,230 --> 00:40:27,819
here tomorrow<font color="#E5E5E5"> at 1:30 is a dummy's</font>

973
00:40:25,660 --> 00:40:33,819
history i agree more<font color="#CCCCCC"> question for</font>

974
00:40:27,819 --> 00:40:35,130
<font color="#E5E5E5">questions okay thank you</font><font color="#CCCCCC"> very much Jim</font>

975
00:40:33,819 --> 00:40:42,349
for an<font color="#E5E5E5"> amazing</font>

976
00:40:35,130 --> 00:40:42,349
[Applause]

