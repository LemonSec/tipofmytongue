1
00:00:12,350 --> 00:00:17,360
hello everyone<font color="#E5E5E5"> good afternoon</font>

2
00:00:14,900 --> 00:00:19,689
<font color="#CCCCCC">I am Suroosh steadily and I'm working</font>

3
00:00:17,360 --> 00:00:24,470
<font color="#CCCCCC">for NCC group</font><font color="#E5E5E5"> as a security consultant</font>

4
00:00:19,689 --> 00:00:27,050
<font color="#CCCCCC">welcome to my past techniques so today</font>

5
00:00:24,470 --> 00:00:29,360
I'm going<font color="#CCCCCC"> to talk about</font><font color="#E5E5E5"> a number of</font>

6
00:00:27,050 --> 00:00:32,119
methods<font color="#E5E5E5"> to bypass web application</font>

7
00:00:29,360 --> 00:00:34,460
firewalls<font color="#E5E5E5"> these methods are</font><font color="#CCCCCC"> not new</font>

8
00:00:32,119 --> 00:00:36,440
probably<font color="#E5E5E5"> most of them have been</font>

9
00:00:34,460 --> 00:00:38,360
discussed in<font color="#CCCCCC"> the past but they have been</font>

10
00:00:36,440 --> 00:00:41,629
overlooked so I'm going to<font color="#E5E5E5"> discuss them</font>

11
00:00:38,360 --> 00:00:44,000
<font color="#E5E5E5">today</font><font color="#CCCCCC"> most nodes</font><font color="#E5E5E5"> contain a lot of HTTP</font>

12
00:00:41,629 --> 00:00:49,430
requests<font color="#E5E5E5"> so if you're a HTTP logger</font>

13
00:00:44,000 --> 00:00:52,220
<font color="#E5E5E5">you're in it for a tree so if you're a</font>

14
00:00:49,430 --> 00:00:54,320
pen tester and you have a verification

15
00:00:52,220 --> 00:00:56,540
firewall<font color="#E5E5E5"> in front of your web</font>

16
00:00:54,320 --> 00:00:59,659
application when you're doing<font color="#CCCCCC"> web</font>

17
00:00:56,540 --> 00:01:02,420
application testing<font color="#E5E5E5"> you're gonna be mad</font>

18
00:00:59,659 --> 00:01:05,750
<font color="#E5E5E5">it's it's a</font><font color="#CCCCCC"> nightmare because the</font>

19
00:01:02,420 --> 00:01:08,390
testing is very<font color="#E5E5E5"> slow and it so and it</font>

20
00:01:05,750 --> 00:01:12,049
doesn't<font color="#CCCCCC"> provide a satisfactory result</font>

21
00:01:08,390 --> 00:01:14,060
because<font color="#E5E5E5"> some of the automated testing</font>

22
00:01:12,049 --> 00:01:16,909
requests are going<font color="#E5E5E5"> to be killed silently</font>

23
00:01:14,060 --> 00:01:19,010
<font color="#E5E5E5">so you're not sure if for example all</font>

24
00:01:16,909 --> 00:01:21,530
your scans<font color="#E5E5E5"> that means successful as and</font>

25
00:01:19,010 --> 00:01:24,440
as a human<font color="#CCCCCC"> being you can make mistakes</font>

26
00:01:21,530 --> 00:01:27,170
<font color="#CCCCCC">you can't cover everything manually</font><font color="#E5E5E5"> what</font>

27
00:01:24,440 --> 00:01:28,759
you may ask<font color="#CCCCCC"> you're the hacker</font><font color="#E5E5E5"> you have</font>

28
00:01:27,170 --> 00:01:30,500
been trained for this<font color="#E5E5E5"> what can't you</font>

29
00:01:28,760 --> 00:01:34,070
just boy pass the<font color="#CCCCCC"> rough it's part</font><font color="#E5E5E5"> of the</font>

30
00:01:30,500 --> 00:01:35,690
<font color="#E5E5E5">assessment the answer is time so we</font>

31
00:01:34,070 --> 00:01:38,419
don't<font color="#E5E5E5"> have enough time during a bail</font>

32
00:01:35,690 --> 00:01:40,789
application assessment<font color="#E5E5E5"> to basically</font>

33
00:01:38,420 --> 00:01:41,930
assess the<font color="#E5E5E5"> valve as well we can only</font>

34
00:01:40,790 --> 00:01:43,700
test the web application assessment

35
00:01:41,930 --> 00:01:46,580
<font color="#E5E5E5">during one week or two</font><font color="#CCCCCC"> weeks that</font><font color="#E5E5E5"> we</font>

36
00:01:43,700 --> 00:01:48,590
have<font color="#E5E5E5"> for the web app and then if there</font>

37
00:01:46,580 --> 00:01:50,810
<font color="#CCCCCC">is a raft there</font><font color="#E5E5E5"> then what would happen</font>

38
00:01:48,590 --> 00:01:52,400
<font color="#E5E5E5">is it's going to block us and it's going</font>

39
00:01:50,810 --> 00:01:56,180
to slow<font color="#CCCCCC"> down</font><font color="#E5E5E5"> the test so you don't get</font>

40
00:01:52,400 --> 00:01:58,130
value<font color="#E5E5E5"> for you for your money</font><font color="#CCCCCC"> and also</font><font color="#E5E5E5"> it</font>

41
00:01:56,180 --> 00:02:01,250
does reduce<font color="#E5E5E5"> the quality of the reports</font>

42
00:01:58,130 --> 00:02:04,670
<font color="#E5E5E5">because it means that</font><font color="#CCCCCC"> you are</font><font color="#E5E5E5"> not going</font>

43
00:02:01,250 --> 00:02:07,420
to<font color="#E5E5E5"> have</font><font color="#CCCCCC"> all the issues in</font><font color="#E5E5E5"> your report at</font>

44
00:02:04,670 --> 00:02:10,610
the same time<font color="#E5E5E5"> math effectiveness test is</font>

45
00:02:07,420 --> 00:02:13,519
completely<font color="#E5E5E5"> a separate assessment so you</font>

46
00:02:10,610 --> 00:02:15,319
<font color="#CCCCCC">basically if you you have to go for</font><font color="#E5E5E5"> that</font>

47
00:02:13,519 --> 00:02:18,080
assessment<font color="#CCCCCC"> if you want to assess your</font>

48
00:02:15,319 --> 00:02:21,140
<font color="#E5E5E5">valve or you have to go for a normal web</font>

49
00:02:18,080 --> 00:02:24,170
application assessment<font color="#E5E5E5"> so where can you</font>

50
00:02:21,140 --> 00:02:25,999
find<font color="#CCCCCC"> someone</font><font color="#E5E5E5"> to bypass maybe first of</font>

51
00:02:24,170 --> 00:02:27,619
<font color="#E5E5E5">all if you have permissions then you can</font>

52
00:02:25,999 --> 00:02:30,739
do this you<font color="#E5E5E5"> can just say</font>

53
00:02:27,620 --> 00:02:33,440
and basic cross-site scripting or sequel

54
00:02:30,739 --> 00:02:35,480
injection<font color="#E5E5E5"> to a website and to see if you</font>

55
00:02:33,440 --> 00:02:37,879
<font color="#CCCCCC">can receive one of these error messages</font>

56
00:02:35,480 --> 00:02:40,190
access<font color="#E5E5E5"> denied or something and it</font>

57
00:02:37,879 --> 00:02:42,230
<font color="#E5E5E5">doesn't matter</font><font color="#CCCCCC"> if the parameter is valid</font>

58
00:02:40,190 --> 00:02:43,819
or<font color="#CCCCCC"> not you can just send it over and see</font>

59
00:02:42,230 --> 00:02:45,319
what<font color="#E5E5E5"> would</font><font color="#CCCCCC"> happen if you get</font><font color="#E5E5E5"> one</font><font color="#CCCCCC"> of</font>

60
00:02:43,819 --> 00:02:48,379
these<font color="#E5E5E5"> access denied probably there is a</font>

61
00:02:45,319 --> 00:02:53,540
path and<font color="#E5E5E5"> you</font><font color="#CCCCCC"> have to bypass</font><font color="#E5E5E5"> it</font><font color="#CCCCCC"> if you</font>

62
00:02:48,379 --> 00:02:56,750
are<font color="#E5E5E5"> doing tests on it so that's or based</font>

63
00:02:53,540 --> 00:03:00,379
on whitelist or blacklist<font color="#CCCCCC"> might</font><font color="#E5E5E5"> lists</font>

64
00:02:56,750 --> 00:03:02,930
are more secure<font color="#CCCCCC"> you</font><font color="#E5E5E5"> basically you have</font>

65
00:03:00,379 --> 00:03:03,200
it it does only<font color="#E5E5E5"> allow a good thing to go</font>

66
00:03:02,930 --> 00:03:06,079
through

67
00:03:03,200 --> 00:03:07,640
and blacklist or less secure<font color="#E5E5E5"> and they</font>

68
00:03:06,079 --> 00:03:10,730
have a<font color="#E5E5E5"> database of things that are bad</font>

69
00:03:07,640 --> 00:03:13,790
<font color="#E5E5E5">and shouldn't go through that said</font>

70
00:03:10,730 --> 00:03:16,099
whitelist<font color="#CCCCCC"> vas or very hard to basically</font>

71
00:03:13,790 --> 00:03:18,409
be trained to be configured<font color="#E5E5E5"> you need a</font>

72
00:03:16,099 --> 00:03:20,629
specialist for that for them<font color="#E5E5E5"> and then</font>

73
00:03:18,409 --> 00:03:22,370
<font color="#E5E5E5">you basically there are very</font><font color="#CCCCCC"> high</font><font color="#E5E5E5"> it</font>

74
00:03:20,629 --> 00:03:24,379
<font color="#E5E5E5">meant high maintenance</font><font color="#CCCCCC"> so if you change</font>

75
00:03:22,370 --> 00:03:25,879
your web application what would<font color="#E5E5E5"> happen</font>

76
00:03:24,379 --> 00:03:28,190
is that<font color="#E5E5E5"> you have to train you laugh</font>

77
00:03:25,879 --> 00:03:29,870
again<font color="#CCCCCC"> and you have</font><font color="#E5E5E5"> to tell the</font><font color="#CCCCCC"> valve</font>

78
00:03:28,190 --> 00:03:32,239
<font color="#CCCCCC">that this is a new page these</font><font color="#E5E5E5"> are the</font>

79
00:03:29,870 --> 00:03:34,730
new parameters you have<font color="#CCCCCC"> to allow this to</font>

80
00:03:32,239 --> 00:03:37,849
<font color="#CCCCCC">go in so all that it's</font><font color="#E5E5E5"> just hard work</font>

81
00:03:34,730 --> 00:03:39,828
and it is very very<font color="#E5E5E5"> expensive</font><font color="#CCCCCC"> blacklists</font>

82
00:03:37,849 --> 00:03:42,440
on the other hand or chip you<font color="#CCCCCC"> can just</font>

83
00:03:39,829 --> 00:03:45,590
basically<font color="#E5E5E5"> pay a small minimum amount of</font>

84
00:03:42,440 --> 00:03:47,560
<font color="#E5E5E5">money for a buff in the cloud</font><font color="#CCCCCC"> put</font><font color="#E5E5E5"> it in</font>

85
00:03:45,590 --> 00:03:51,079
<font color="#E5E5E5">front of your web server and that's it</font>

86
00:03:47,560 --> 00:03:53,359
<font color="#CCCCCC">and normally you don't need to change</font>

87
00:03:51,079 --> 00:03:55,400
any<font color="#CCCCCC"> configuration on them</font><font color="#E5E5E5"> saying that</font>

88
00:03:53,359 --> 00:03:57,470
<font color="#E5E5E5">sometimes you still need to do a little</font>

89
00:03:55,400 --> 00:03:59,090
<font color="#E5E5E5">bit</font><font color="#CCCCCC"> of configuration</font><font color="#E5E5E5"> changes but as soon</font>

90
00:03:57,470 --> 00:04:00,859
as<font color="#E5E5E5"> you do that it's fine</font>

91
00:03:59,090 --> 00:04:03,109
it everything is fine with the blacklist

92
00:04:00,859 --> 00:04:05,239
<font color="#CCCCCC">months</font><font color="#E5E5E5"> so the blackness months are the</font>

93
00:04:03,109 --> 00:04:08,150
most<font color="#CCCCCC"> popular</font><font color="#E5E5E5"> ones and the ones that I'm</font>

94
00:04:05,239 --> 00:04:11,329
going<font color="#CCCCCC"> to discuss</font><font color="#E5E5E5"> here today before I</font>

95
00:04:08,150 --> 00:04:14,030
start with<font color="#E5E5E5"> methods and everything let's</font>

96
00:04:11,329 --> 00:04:16,549
just talk about something<font color="#CCCCCC"> that</font><font color="#E5E5E5"> is out</font>

97
00:04:14,030 --> 00:04:18,349
<font color="#CCCCCC">there and most</font><font color="#E5E5E5"> people know about it you</font>

98
00:04:16,548 --> 00:04:20,560
may know<font color="#CCCCCC"> that it's</font><font color="#E5E5E5"> very easy</font><font color="#CCCCCC"> to put a</font>

99
00:04:18,349 --> 00:04:23,719
<font color="#CCCCCC">rough in the cloud in front of your</font>

100
00:04:20,560 --> 00:04:27,020
website<font color="#E5E5E5"> by changing the DNS server to</font>

101
00:04:23,720 --> 00:04:28,910
<font color="#CCCCCC">the rough company's DNS all the requests</font>

102
00:04:27,020 --> 00:04:31,820
are<font color="#E5E5E5"> not going through the valve and</font>

103
00:04:28,910 --> 00:04:34,340
<font color="#E5E5E5">you're secure however if someone knows</font>

104
00:04:31,820 --> 00:04:36,620
your IP<font color="#CCCCCC"> address they can see they</font>

105
00:04:34,340 --> 00:04:38,270
<font color="#E5E5E5">probably can still send the request</font>

106
00:04:36,620 --> 00:04:41,060
directly<font color="#E5E5E5"> to you</font><font color="#CCCCCC"> without going</font><font color="#E5E5E5"> through</font>

107
00:04:38,270 --> 00:04:41,330
the bath<font color="#E5E5E5"> thinking that the IP address is</font>

108
00:04:41,060 --> 00:04:42,830
<font color="#CCCCCC">bay</font>

109
00:04:41,330 --> 00:04:44,750
sickly a secret and you can keep it

110
00:04:42,830 --> 00:04:47,030
secret forever it's completely wrong

111
00:04:44,750 --> 00:04:49,099
<font color="#E5E5E5">there are</font><font color="#CCCCCC"> a lot of methods</font><font color="#E5E5E5"> to find our</font>

112
00:04:47,030 --> 00:04:51,198
IP<font color="#CCCCCC"> address and sooner or later</font><font color="#E5E5E5"> someone</font>

113
00:04:49,099 --> 00:04:54,770
<font color="#CCCCCC">will find the IP</font><font color="#E5E5E5"> address and</font><font color="#CCCCCC"> you vuf</font>

114
00:04:51,199 --> 00:04:57,650
will<font color="#E5E5E5"> be bypassed</font><font color="#CCCCCC"> so if you're</font><font color="#E5E5E5"> going to</font>

115
00:04:54,770 --> 00:04:59,780
do that<font color="#E5E5E5"> my recommendation is to set a</font>

116
00:04:57,650 --> 00:05:04,128
very like a secret header or something

117
00:04:59,780 --> 00:05:05,989
in the in the vast panel and on<font color="#E5E5E5"> the web</font>

118
00:05:04,129 --> 00:05:07,639
application side you basically have to

119
00:05:05,990 --> 00:05:09,469
say if<font color="#E5E5E5"> you can't see this header it's</font>

120
00:05:07,639 --> 00:05:13,789
not<font color="#E5E5E5"> coming</font><font color="#CCCCCC"> from the</font><font color="#E5E5E5"> bath so just kill</font><font color="#CCCCCC"> it</font>

121
00:05:09,469 --> 00:05:15,409
<font color="#E5E5E5">yes that can make a bottleneck and</font><font color="#CCCCCC"> if</font>

122
00:05:13,789 --> 00:05:17,930
there is a<font color="#CCCCCC"> denial of</font><font color="#E5E5E5"> service on the bath</font>

123
00:05:15,409 --> 00:05:20,780
you may go down<font color="#E5E5E5"> but at the same time it</font>

124
00:05:17,930 --> 00:05:22,879
will it will make<font color="#E5E5E5"> sure that</font><font color="#CCCCCC"> you always</font>

125
00:05:20,780 --> 00:05:25,309
<font color="#E5E5E5">have a bath in front of your web</font>

126
00:05:22,879 --> 00:05:26,719
applications and<font color="#E5E5E5"> these baths in the</font>

127
00:05:25,310 --> 00:05:28,879
cloud are very useful they give you a

128
00:05:26,719 --> 00:05:31,159
lot<font color="#CCCCCC"> of</font><font color="#E5E5E5"> statistics you you don't need to</font>

129
00:05:28,879 --> 00:05:32,750
maintain them<font color="#E5E5E5"> they are very cheap that's</font>

130
00:05:31,159 --> 00:05:37,550
<font color="#CCCCCC">why many people are using them</font><font color="#E5E5E5"> these</font>

131
00:05:32,750 --> 00:05:40,520
days so I have<font color="#E5E5E5"> categorize the vast boy</font>

132
00:05:37,550 --> 00:05:43,909
passes into a number of<font color="#E5E5E5"> categories</font><font color="#CCCCCC"> so</font>

133
00:05:40,520 --> 00:05:46,370
the<font color="#E5E5E5"> first category</font><font color="#CCCCCC"> that you everyone</font>

134
00:05:43,909 --> 00:05:49,639
knows<font color="#CCCCCC"> about or the newer mist pilots so</font>

135
00:05:46,370 --> 00:05:52,190
if a payload is not in that<font color="#E5E5E5"> blacklist</font>

136
00:05:49,639 --> 00:05:53,449
database and use that<font color="#E5E5E5"> obviously can go</font>

137
00:05:52,190 --> 00:05:56,839
through<font color="#E5E5E5"> because it's not there</font>

138
00:05:53,449 --> 00:06:00,650
also if you start changing<font color="#CCCCCC"> the payload</font>

139
00:05:56,839 --> 00:06:03,529
<font color="#E5E5E5">for example change</font><font color="#CCCCCC"> the capitalization</font>

140
00:06:00,650 --> 00:06:05,960
make it uppercase or apply encoding and

141
00:06:03,529 --> 00:06:08,900
<font color="#E5E5E5">do these kind of things</font><font color="#CCCCCC"> on the payloads</font>

142
00:06:05,960 --> 00:06:11,448
<font color="#E5E5E5">then it may go</font><font color="#CCCCCC"> through as well at the</font>

143
00:06:08,900 --> 00:06:15,099
<font color="#E5E5E5">same time some</font><font color="#CCCCCC"> of the buffs have some</font>

144
00:06:11,449 --> 00:06:18,740
exceptions<font color="#E5E5E5"> set so developers think</font><font color="#CCCCCC"> ok I</font>

145
00:06:15,099 --> 00:06:21,020
we have we have this like certain user

146
00:06:18,740 --> 00:06:23,120
agent<font color="#E5E5E5"> old Nokia phone but whenever</font>

147
00:06:21,020 --> 00:06:24,378
they're<font color="#CCCCCC"> browsing</font><font color="#E5E5E5"> our website</font><font color="#CCCCCC"> we're</font>

148
00:06:23,120 --> 00:06:26,569
blocking<font color="#E5E5E5"> them because they are sending</font>

149
00:06:24,379 --> 00:06:29,389
<font color="#E5E5E5">something unusual so let's just say</font>

150
00:06:26,569 --> 00:06:31,099
whenever this is the user agent<font color="#CCCCCC"> you</font>

151
00:06:29,389 --> 00:06:32,719
don't need to go through all these rules

152
00:06:31,099 --> 00:06:35,180
and<font color="#E5E5E5"> all these</font><font color="#CCCCCC"> last so if you find those</font>

153
00:06:32,719 --> 00:06:37,310
kind<font color="#E5E5E5"> of like exceptions you can bypass</font>

154
00:06:35,180 --> 00:06:38,810
the buff easily well it's kind<font color="#E5E5E5"> of</font>

155
00:06:37,310 --> 00:06:42,080
sometimes<font color="#E5E5E5"> it's</font><font color="#CCCCCC"> very difficult to find</font>

156
00:06:38,810 --> 00:06:44,330
<font color="#E5E5E5">those because there are secrets but also</font>

157
00:06:42,080 --> 00:06:46,370
there has been something<font color="#E5E5E5"> in the past</font>

158
00:06:44,330 --> 00:06:48,378
that if you were sending a large<font color="#E5E5E5"> request</font>

159
00:06:46,370 --> 00:06:50,060
to<font color="#E5E5E5"> above you could have bypassed it as</font>

160
00:06:48,379 --> 00:06:52,130
well<font color="#E5E5E5"> because graphs were like this is</font>

161
00:06:50,060 --> 00:06:53,599
<font color="#CCCCCC">very large for me to handle it may cause</font>

162
00:06:52,130 --> 00:06:54,800
<font color="#CCCCCC">then a lot of service it looks like a</font>

163
00:06:53,599 --> 00:06:56,740
file upload<font color="#CCCCCC"> I can</font>

164
00:06:54,800 --> 00:06:59,870
do anything<font color="#CCCCCC"> about it and without</font>

165
00:06:56,740 --> 00:07:01,699
<font color="#CCCCCC">inspection</font><font color="#E5E5E5"> it can go through so that's</font>

166
00:06:59,870 --> 00:07:04,009
another method<font color="#E5E5E5"> however today I'm going</font>

167
00:07:01,699 --> 00:07:07,970
<font color="#CCCCCC">to talk about</font><font color="#E5E5E5"> payload delivery and</font>

168
00:07:04,009 --> 00:07:10,490
request mutation techniques<font color="#E5E5E5"> so let us</font>

169
00:07:07,970 --> 00:07:12,470
start<font color="#E5E5E5"> with payload delivery there are a</font>

170
00:07:10,490 --> 00:07:17,180
number of<font color="#E5E5E5"> methods that you can send your</font>

171
00:07:12,470 --> 00:07:20,419
HTTP<font color="#E5E5E5"> requests to</font><font color="#CCCCCC"> a server</font><font color="#E5E5E5"> so depends on</font>

172
00:07:17,180 --> 00:07:24,740
these methods if laughs don't know about

173
00:07:20,419 --> 00:07:28,659
<font color="#E5E5E5">them</font><font color="#CCCCCC"> they can be bypassed</font><font color="#E5E5E5"> so for example</font>

174
00:07:24,740 --> 00:07:30,729
<font color="#CCCCCC">a few days ago I saw this</font><font color="#E5E5E5"> a very good</font>

175
00:07:28,659 --> 00:07:34,280
<font color="#E5E5E5">vulnerability blog posts</font><font color="#CCCCCC"> about</font>

176
00:07:30,729 --> 00:07:36,650
unsupported SSL TLS ciphers boy the<font color="#CCCCCC"> bass</font>

177
00:07:34,280 --> 00:07:38,119
so basically the guy who found this or

178
00:07:36,650 --> 00:07:40,549
identified this issue that there<font color="#E5E5E5"> was a</font>

179
00:07:38,120 --> 00:07:44,419
bath and when<font color="#E5E5E5"> the bath couldn't</font>

180
00:07:40,550 --> 00:07:46,370
understand this<font color="#E5E5E5"> SL cipher and bought</font>

181
00:07:44,419 --> 00:07:48,169
that cipher<font color="#E5E5E5"> was being supported</font><font color="#CCCCCC"> by the</font>

182
00:07:46,370 --> 00:07:50,389
web server<font color="#E5E5E5"> was basically passing</font>

183
00:07:48,169 --> 00:07:53,960
everything<font color="#CCCCCC"> through to the web server and</font>

184
00:07:50,389 --> 00:07:56,180
was<font color="#CCCCCC"> boy passing the bath</font><font color="#E5E5E5"> and it was very</font>

185
00:07:53,960 --> 00:07:58,250
<font color="#E5E5E5">good research and I</font><font color="#CCCCCC"> was really amazed</font><font color="#E5E5E5"> by</font>

186
00:07:56,180 --> 00:08:00,440
that<font color="#CCCCCC"> and I was thinking maybe you can</font>

187
00:07:58,250 --> 00:08:02,930
just<font color="#E5E5E5"> apply</font><font color="#CCCCCC"> to</font><font color="#E5E5E5"> HTTP</font><font color="#CCCCCC"> 2 as well I don't</font>

188
00:08:00,440 --> 00:08:06,319
know<font color="#E5E5E5"> it might</font><font color="#CCCCCC"> be possible but</font><font color="#E5E5E5"> then now</font>

189
00:08:02,930 --> 00:08:10,490
if you set that<font color="#E5E5E5"> cipher in bear suit and</font>

190
00:08:06,319 --> 00:08:12,169
put it in<font color="#E5E5E5"> front of like input</font><font color="#CCCCCC"> it setting</font>

191
00:08:10,490 --> 00:08:15,310
on the browser<font color="#CCCCCC"> then maybe you</font><font color="#E5E5E5"> can just</font>

192
00:08:12,169 --> 00:08:17,990
bypass the bath<font color="#E5E5E5"> and just test as usual</font>

193
00:08:15,310 --> 00:08:20,750
today<font color="#CCCCCC"> however I'm just going to talk</font>

194
00:08:17,990 --> 00:08:24,860
about HTTP version 0.9 and HTTP

195
00:08:20,750 --> 00:08:27,770
pipelining<font color="#E5E5E5"> because those are interesting</font>

196
00:08:24,860 --> 00:08:30,560
and also normally developers even

197
00:08:27,770 --> 00:08:33,620
testers don't<font color="#E5E5E5"> know</font><font color="#CCCCCC"> about them that much</font>

198
00:08:30,560 --> 00:08:37,250
<font color="#E5E5E5">and they have me forgotten so I'm going</font>

199
00:08:33,620 --> 00:08:41,448
to<font color="#E5E5E5"> talk about those things</font><font color="#CCCCCC"> so let's</font>

200
00:08:37,250 --> 00:08:43,909
start with HTTP version 0.9<font color="#E5E5E5"> this is the</font>

201
00:08:41,448 --> 00:08:46,520
this<font color="#E5E5E5"> is basically the first HTTP</font><font color="#CCCCCC"> that</font>

202
00:08:43,909 --> 00:08:49,459
came out didn't have<font color="#CCCCCC"> any version</font><font color="#E5E5E5"> it was</font>

203
00:08:46,520 --> 00:08:52,790
just one line<font color="#CCCCCC"> of a get request get a</font>

204
00:08:49,459 --> 00:08:55,790
slash<font color="#E5E5E5"> that's it or get a slash page</font>

205
00:08:52,790 --> 00:08:58,339
that's it<font color="#E5E5E5"> that was</font><font color="#CCCCCC"> the request no header</font>

206
00:08:55,790 --> 00:09:02,269
was<font color="#E5E5E5"> so being supported no HTTP version</font>

207
00:08:58,339 --> 00:09:05,600
<font color="#E5E5E5">nothing it was just a request to an IP</font>

208
00:09:02,269 --> 00:09:08,570
address<font color="#E5E5E5"> and that was it so and so it's</font>

209
00:09:05,600 --> 00:09:10,820
<font color="#CCCCCC">very old and</font><font color="#E5E5E5"> because it's very old</font>

210
00:09:08,570 --> 00:09:13,700
most of the<font color="#CCCCCC"> baths</font><font color="#E5E5E5"> are</font><font color="#CCCCCC"> non-new they may</font>

211
00:09:10,820 --> 00:09:17,480
<font color="#E5E5E5">not know about these these kind of like</font>

212
00:09:13,700 --> 00:09:19,340
requests so but what can go wrong with

213
00:09:17,480 --> 00:09:21,680
HTTP version<font color="#CCCCCC"> it doesn't support header</font>

214
00:09:19,340 --> 00:09:25,640
it doesn't support<font color="#E5E5E5"> a lot of things</font><font color="#CCCCCC"> but</font>

215
00:09:21,680 --> 00:09:29,180
<font color="#E5E5E5">and and the latest version of</font><font color="#CCCCCC"> RFC</font><font color="#E5E5E5"> for</font>

216
00:09:25,640 --> 00:09:31,819
HTTP 1.1<font color="#E5E5E5"> says that it should</font><font color="#CCCCCC"> not being</font>

217
00:09:29,180 --> 00:09:34,160
supported at all but during my research

218
00:09:31,820 --> 00:09:36,170
I<font color="#CCCCCC"> realized that all the web servers that</font>

219
00:09:34,160 --> 00:09:40,040
I was testing we are supporting HTTP

220
00:09:36,170 --> 00:09:42,709
version 0.9 is still like today<font color="#E5E5E5"> so it's</font>

221
00:09:40,040 --> 00:09:44,959
being<font color="#CCCCCC"> supported at the</font><font color="#E5E5E5"> same time you can</font>

222
00:09:42,710 --> 00:09:48,760
<font color="#E5E5E5">still send an absolute URL in a get</font>

223
00:09:44,960 --> 00:09:51,380
request so it can be<font color="#E5E5E5"> like this here so</font>

224
00:09:48,760 --> 00:09:53,840
as you can see<font color="#E5E5E5"> we have get and then you</font>

225
00:09:51,380 --> 00:09:56,330
<font color="#CCCCCC">have an absolute URL and domain name</font>

226
00:09:53,840 --> 00:09:58,730
<font color="#E5E5E5">here and some parameters</font><font color="#CCCCCC"> and there is no</font>

227
00:09:56,330 --> 00:10:02,980
HTTP version as I said<font color="#E5E5E5"> so you can still</font>

228
00:09:58,730 --> 00:10:05,900
target those applications that accept

229
00:10:02,980 --> 00:10:09,680
<font color="#CCCCCC">requests using get and there are just</font>

230
00:10:05,900 --> 00:10:12,740
some parameters interestingly<font color="#CCCCCC"> Apache</font>

231
00:10:09,680 --> 00:10:15,739
<font color="#CCCCCC">Tomcat supports headers with HTTP</font>

232
00:10:12,740 --> 00:10:18,230
version 0.9<font color="#E5E5E5"> it's just against a standard</font>

233
00:10:15,740 --> 00:10:20,720
but they are doing<font color="#CCCCCC"> it there it's just</font>

234
00:10:18,230 --> 00:10:22,430
fun so now you can whenever<font color="#E5E5E5"> you're</font>

235
00:10:20,720 --> 00:10:24,800
testing something<font color="#CCCCCC"> on apache tomcat you</font>

236
00:10:22,430 --> 00:10:27,140
can just send her she'd be version 0.9

237
00:10:24,800 --> 00:10:32,120
and that's it it's gonna work<font color="#CCCCCC"> they don't</font>

238
00:10:27,140 --> 00:10:35,900
<font color="#E5E5E5">care about it and okay and also this</font>

239
00:10:32,120 --> 00:10:39,230
talk in<font color="#E5E5E5"> DEFCON 20 for hiding wiki's in</font>

240
00:10:35,900 --> 00:10:42,829
<font color="#E5E5E5">HTTP basically covers some interesting</font>

241
00:10:39,230 --> 00:10:44,660
issues<font color="#CCCCCC"> using HTTP version 0.9 I really</font>

242
00:10:42,830 --> 00:10:48,110
recommend you<font color="#E5E5E5"> to actually go and</font><font color="#CCCCCC"> look at</font>

243
00:10:44,660 --> 00:10:50,270
<font color="#E5E5E5">that and this like the short</font>

244
00:10:48,110 --> 00:10:52,580
recommendation here is<font color="#E5E5E5"> before I start</font>

245
00:10:50,270 --> 00:10:54,620
anything with HTTP version 0.9<font color="#E5E5E5"> just</font>

246
00:10:52,580 --> 00:10:56,840
disable it it's safer it's not being

247
00:10:54,620 --> 00:11:00,650
<font color="#E5E5E5">used by anything just disable just make</font>

248
00:10:56,840 --> 00:11:03,050
sure it can't go to your<font color="#E5E5E5"> web server so</font>

249
00:11:00,650 --> 00:11:05,750
how can you send HTTP version 0.9 I

250
00:11:03,050 --> 00:11:08,479
tried<font color="#E5E5E5"> fiddler I tried the</font><font color="#CCCCCC"> boy tried web</font>

251
00:11:05,750 --> 00:11:11,000
<font color="#CCCCCC">site</font><font color="#E5E5E5"> I tried all these like web proxies</font>

252
00:11:08,480 --> 00:11:13,010
none<font color="#E5E5E5"> of them could send HTTP version 0.9</font>

253
00:11:11,000 --> 00:11:14,660
<font color="#E5E5E5">actually</font><font color="#CCCCCC"> bear sweet could but</font><font color="#E5E5E5"> it was not</font>

254
00:11:13,010 --> 00:11:15,460
<font color="#E5E5E5">showing the response so I had to use</font>

255
00:11:14,660 --> 00:11:18,270
Wireshark

256
00:11:15,460 --> 00:11:21,660
but you can always<font color="#E5E5E5"> use</font>

257
00:11:18,270 --> 00:11:25,050
<font color="#E5E5E5">net-net cat</font><font color="#CCCCCC"> OpenSSL</font><font color="#E5E5E5"> so on so forth but</font>

258
00:11:21,660 --> 00:11:27,030
who wants<font color="#E5E5E5"> to use these tools when when</font>

259
00:11:25,050 --> 00:11:28,469
testing about application<font color="#CCCCCC"> you</font><font color="#E5E5E5"> really</font>

260
00:11:27,030 --> 00:11:32,850
<font color="#E5E5E5">don't want to use those low-level tools</font>

261
00:11:28,470 --> 00:11:35,850
<font color="#E5E5E5">so I'm going to show you a method to</font>

262
00:11:32,850 --> 00:11:40,680
<font color="#CCCCCC">sent HTTP version 0.9 in</font><font color="#E5E5E5"> birth suite</font>

263
00:11:35,850 --> 00:11:43,020
using HTTP pipelining<font color="#CCCCCC"> so let's start</font>

264
00:11:40,680 --> 00:11:44,489
using HTTP pipelining<font color="#CCCCCC"> so what is how</font>

265
00:11:43,020 --> 00:11:48,210
should<font color="#E5E5E5"> it be</font><font color="#CCCCCC"> populating this is very</font>

266
00:11:44,490 --> 00:11:53,070
quick introduction<font color="#E5E5E5"> and I was stolen that</font>

267
00:11:48,210 --> 00:11:56,070
<font color="#CCCCCC">images well from somewhere so</font><font color="#E5E5E5"> in HTTP</font>

268
00:11:53,070 --> 00:11:57,570
you can basically send your<font color="#E5E5E5"> request and</font>

269
00:11:56,070 --> 00:11:59,430
then there is a response<font color="#CCCCCC"> send a</font><font color="#E5E5E5"> request</font>

270
00:11:57,570 --> 00:12:02,190
<font color="#E5E5E5">there is a response however they</font>

271
00:11:59,430 --> 00:12:05,760
<font color="#E5E5E5">introduce pipelining feature to HTTP</font>

272
00:12:02,190 --> 00:12:08,610
version 1.1 and 1.0<font color="#CCCCCC"> so now you can</font>

273
00:12:05,760 --> 00:12:11,010
basically send multiple<font color="#E5E5E5"> HTTP requests as</font>

274
00:12:08,610 --> 00:12:13,590
part of one HTTP request and the server

275
00:12:11,010 --> 00:12:15,420
<font color="#E5E5E5">will respond</font><font color="#CCCCCC"> to them at the</font><font color="#E5E5E5"> same</font><font color="#CCCCCC"> time</font>

276
00:12:13,590 --> 00:12:17,640
however when I say at the<font color="#E5E5E5"> same time if</font>

277
00:12:15,420 --> 00:12:20,339
you<font color="#E5E5E5"> process the first one then</font><font color="#CCCCCC"> the next</font>

278
00:12:17,640 --> 00:12:24,060
one<font color="#E5E5E5"> then the one</font><font color="#CCCCCC"> after</font><font color="#E5E5E5"> and then we will</font>

279
00:12:20,340 --> 00:12:26,250
send<font color="#E5E5E5"> all the responses in one request</font>

280
00:12:24,060 --> 00:12:28,920
and one in one response and you will see

281
00:12:26,250 --> 00:12:31,290
<font color="#CCCCCC">everything at the same time</font><font color="#E5E5E5"> the only bad</font>

282
00:12:28,920 --> 00:12:33,479
thing<font color="#E5E5E5"> about HTTP pipelining for Ted for</font>

283
00:12:31,290 --> 00:12:35,910
testing and for<font color="#CCCCCC"> bypassing laughs is</font><font color="#E5E5E5"> that</font>

284
00:12:33,480 --> 00:12:38,370
<font color="#E5E5E5">it's hop by hop it means if it goes</font>

285
00:12:35,910 --> 00:12:40,020
through the proxy<font color="#E5E5E5"> it's up to the proxy</font>

286
00:12:38,370 --> 00:12:43,800
to decide what to do<font color="#CCCCCC"> with it</font>

287
00:12:40,020 --> 00:12:46,439
some proxies basically will say<font color="#CCCCCC"> okay I'm</font>

288
00:12:43,800 --> 00:12:49,650
gonna send<font color="#CCCCCC"> multiple requests</font><font color="#E5E5E5"> I'm not</font>

289
00:12:46,440 --> 00:12:50,460
going<font color="#E5E5E5"> to continue sending HTTP</font>

290
00:12:49,650 --> 00:12:53,760
pipelining

291
00:12:50,460 --> 00:12:55,320
some proxies just let it go and some

292
00:12:53,760 --> 00:12:57,930
other proxies just<font color="#E5E5E5"> send the first</font>

293
00:12:55,320 --> 00:13:01,020
request<font color="#E5E5E5"> it all depends on how the actual</font>

294
00:12:57,930 --> 00:13:03,270
proxy works<font color="#E5E5E5"> but on the standard they</font>

295
00:13:01,020 --> 00:13:06,480
should<font color="#E5E5E5"> really send all the requests how</font>

296
00:13:03,270 --> 00:13:09,540
it's up to them<font color="#E5E5E5"> so here is an example of</font>

297
00:13:06,480 --> 00:13:11,190
HTTP pipelining<font color="#CCCCCC"> so as you can see</font><font color="#E5E5E5"> here</font>

298
00:13:09,540 --> 00:13:14,040
this is<font color="#E5E5E5"> the first request imagine this</font>

299
00:13:11,190 --> 00:13:15,390
is in pursuit<font color="#E5E5E5"> for example and this</font><font color="#CCCCCC"> is</font>

300
00:13:14,040 --> 00:13:17,520
the first<font color="#E5E5E5"> request that's a get request</font>

301
00:13:15,390 --> 00:13:19,680
<font color="#E5E5E5">and then I have the post request</font>

302
00:13:17,520 --> 00:13:24,810
immediately<font color="#E5E5E5"> after because the first</font>

303
00:13:19,680 --> 00:13:27,150
request<font color="#E5E5E5"> is HTTP 1.0 it's just I chose to</font>

304
00:13:24,810 --> 00:13:29,839
use<font color="#CCCCCC"> that in here</font><font color="#E5E5E5"> just as an</font><font color="#CCCCCC"> example</font><font color="#E5E5E5"> I</font>

305
00:13:27,150 --> 00:13:31,980
had<font color="#E5E5E5"> to include connection</font><font color="#CCCCCC"> keepalive</font>

306
00:13:29,840 --> 00:13:33,720
<font color="#E5E5E5">otherwise it would think</font><font color="#CCCCCC"> that</font>

307
00:13:31,980 --> 00:13:37,800
connection is closed<font color="#E5E5E5"> because that's</font>

308
00:13:33,720 --> 00:13:40,710
default on<font color="#CCCCCC"> 1.0 and it wouldn't do HTTP</font>

309
00:13:37,800 --> 00:13:43,140
pipelining<font color="#E5E5E5"> for</font><font color="#CCCCCC"> 1.1 I don't</font><font color="#E5E5E5"> need to</font>

310
00:13:40,710 --> 00:13:45,990
mention<font color="#E5E5E5"> this</font><font color="#CCCCCC"> because by default it's on</font>

311
00:13:43,140 --> 00:13:49,110
keep alive<font color="#E5E5E5"> so it will go through fine</font>

312
00:13:45,990 --> 00:13:50,640
and you can<font color="#CCCCCC"> send multiple</font><font color="#E5E5E5"> messages you</font>

313
00:13:49,110 --> 00:13:53,400
<font color="#CCCCCC">don't need to send</font><font color="#E5E5E5"> two but I could only</font>

314
00:13:50,640 --> 00:13:55,530
fit two<font color="#CCCCCC"> in these slides</font><font color="#E5E5E5"> so and I can</font>

315
00:13:53,400 --> 00:13:57,930
<font color="#CCCCCC">even send them</font><font color="#E5E5E5"> the other way</font><font color="#CCCCCC"> around so I</font>

316
00:13:55,530 --> 00:13:59,760
<font color="#E5E5E5">can send the post request</font><font color="#CCCCCC"> first</font><font color="#E5E5E5"> and then</font>

317
00:13:57,930 --> 00:14:01,500
the get request<font color="#CCCCCC"> however</font><font color="#E5E5E5"> if I'm doing</font>

318
00:13:59,760 --> 00:14:03,960
that<font color="#CCCCCC"> you have</font><font color="#E5E5E5"> to make sure</font><font color="#CCCCCC"> the content</font>

319
00:14:01,500 --> 00:14:06,330
<font color="#CCCCCC">length is actually showing the</font>

320
00:14:03,960 --> 00:14:08,460
characters that<font color="#E5E5E5"> are in the post body of</font>

321
00:14:06,330 --> 00:14:10,800
your<font color="#CCCCCC"> request otherwise the server</font><font color="#E5E5E5"> won't</font>

322
00:14:08,460 --> 00:14:12,840
see it<font color="#E5E5E5"> as you can see I've</font><font color="#CCCCCC"> just</font>

323
00:14:10,800 --> 00:14:14,189
misplaced them<font color="#E5E5E5"> so the server this time</font>

324
00:14:12,840 --> 00:14:16,200
is going<font color="#E5E5E5"> to see the post and the</font>

325
00:14:14,190 --> 00:14:18,840
negative<font color="#CCCCCC"> request</font><font color="#E5E5E5"> you could have had</font>

326
00:14:16,200 --> 00:14:22,230
three<font color="#CCCCCC"> posts requires one</font><font color="#E5E5E5"> get requires</font>

327
00:14:18,840 --> 00:14:24,960
<font color="#E5E5E5">anything this</font><font color="#CCCCCC"> is</font><font color="#E5E5E5"> just an example</font><font color="#CCCCCC"> so how</font>

328
00:14:22,230 --> 00:14:26,310
can<font color="#E5E5E5"> you do that using</font><font color="#CCCCCC"> Pepsi so</font>

329
00:14:24,960 --> 00:14:28,710
embarrassing if you want to do that

330
00:14:26,310 --> 00:14:31,439
<font color="#E5E5E5">first of all make sure</font><font color="#CCCCCC"> that the content</font>

331
00:14:28,710 --> 00:14:33,570
<font color="#CCCCCC">links update is disabled</font><font color="#E5E5E5"> otherwise it</font>

332
00:14:31,440 --> 00:14:36,000
will update the content lengths and<font color="#E5E5E5"> it</font>

333
00:14:33,570 --> 00:14:38,580
will ruin it<font color="#E5E5E5"> for you</font><font color="#CCCCCC"> also what I found</font>

334
00:14:36,000 --> 00:14:40,890
was if there is<font color="#CCCCCC"> accept</font><font color="#E5E5E5"> encoding</font>

335
00:14:38,580 --> 00:14:44,670
<font color="#E5E5E5">sometimes you can see the response</font><font color="#CCCCCC"> in</font>

336
00:14:40,890 --> 00:14:47,610
the<font color="#E5E5E5"> response panel because virtually</font>

337
00:14:44,670 --> 00:14:51,000
doesn't<font color="#E5E5E5"> show the responses when it's</font>

338
00:14:47,610 --> 00:14:53,250
compressed<font color="#E5E5E5"> and it's pipelined in here</font>

339
00:14:51,000 --> 00:14:56,040
<font color="#E5E5E5">I'm sending</font><font color="#CCCCCC"> two requests at the same</font>

340
00:14:53,250 --> 00:14:58,140
time with<font color="#CCCCCC"> one HTTP request and as you</font>

341
00:14:56,040 --> 00:15:00,770
can<font color="#CCCCCC"> see</font><font color="#E5E5E5"> I've received the first response</font>

342
00:14:58,140 --> 00:15:04,770
here and the<font color="#E5E5E5"> next response followed by</font>

343
00:15:00,770 --> 00:15:06,720
HTTP<font color="#E5E5E5"> slash 1.5 200 the status code and</font>

344
00:15:04,770 --> 00:15:09,990
the response for the second<font color="#E5E5E5"> request so</font>

345
00:15:06,720 --> 00:15:14,520
you can use this to<font color="#E5E5E5"> basically send HTTP</font>

346
00:15:09,990 --> 00:15:18,780
pipelining<font color="#CCCCCC"> to a web server</font><font color="#E5E5E5"> so what has</font>

347
00:15:14,520 --> 00:15:21,510
this to<font color="#E5E5E5"> do with the HTTP version 0.9</font>

348
00:15:18,780 --> 00:15:25,280
because now I should if you<font color="#E5E5E5"> send just</font>

349
00:15:21,510 --> 00:15:27,350
this get<font color="#E5E5E5"> without any kind of like header</font>

350
00:15:25,280 --> 00:15:31,290
<font color="#CCCCCC">yep</font>

351
00:15:27,350 --> 00:15:33,630
you can't see the response<font color="#E5E5E5"> also if you</font>

352
00:15:31,290 --> 00:15:35,219
send used other tools<font color="#E5E5E5"> they will say it's</font>

353
00:15:33,630 --> 00:15:37,230
<font color="#E5E5E5">invalid and they will not send it over</font>

354
00:15:35,220 --> 00:15:39,360
but if you send it through pipelining

355
00:15:37,230 --> 00:15:41,340
<font color="#E5E5E5">you will see the response and that's</font>

356
00:15:39,360 --> 00:15:44,640
cool because now I can use<font color="#E5E5E5"> my favorite</font>

357
00:15:41,340 --> 00:15:45,570
tool<font color="#E5E5E5"> to basically perform my</font><font color="#CCCCCC"> test so</font>

358
00:15:44,640 --> 00:15:48,030
<font color="#E5E5E5">this</font>

359
00:15:45,570 --> 00:15:50,520
really happened in one<font color="#E5E5E5"> of the tests I</font>

360
00:15:48,030 --> 00:15:52,829
had so it wasn't admin but it was

361
00:15:50,520 --> 00:15:56,010
something<font color="#CCCCCC"> else so imagine there</font><font color="#E5E5E5"> is a</font>

362
00:15:52,830 --> 00:15:57,840
website that<font color="#E5E5E5"> has a wife in</font><font color="#CCCCCC"> front of it</font>

363
00:15:56,010 --> 00:16:00,270
and that<font color="#E5E5E5"> valve has blocked the word</font>

364
00:15:57,840 --> 00:16:02,550
admin whenever it<font color="#CCCCCC"> sees admin in the</font><font color="#E5E5E5"> URL</font>

365
00:16:00,270 --> 00:16:05,160
<font color="#E5E5E5">anywhere it</font><font color="#CCCCCC"> blots the request and it</font>

366
00:16:02,550 --> 00:16:09,030
cares about it<font color="#CCCCCC"> doesn't care</font><font color="#E5E5E5"> about the</font>

367
00:16:05,160 --> 00:16:10,680
character cases so<font color="#E5E5E5"> it's case insensitive</font>

368
00:16:09,030 --> 00:16:12,750
so you couldn't boy pass it by<font color="#CCCCCC"> opera</font>

369
00:16:10,680 --> 00:16:15,510
casing admin or anything like<font color="#E5E5E5"> that</font><font color="#CCCCCC"> also</font>

370
00:16:12,750 --> 00:16:17,310
<font color="#CCCCCC">it had a feature that</font><font color="#E5E5E5"> was supporting URL</font>

371
00:16:15,510 --> 00:16:19,020
encoding so<font color="#CCCCCC"> you could understand if I</font>

372
00:16:17,310 --> 00:16:21,810
was encoding it so I had no<font color="#E5E5E5"> way to</font>

373
00:16:19,020 --> 00:16:24,150
bypass<font color="#CCCCCC"> it also</font><font color="#E5E5E5"> directed traversal in</font>

374
00:16:21,810 --> 00:16:27,030
here can't work because it can still see

375
00:16:24,150 --> 00:16:30,630
admin in<font color="#CCCCCC"> the request so what I did</font>

376
00:16:27,030 --> 00:16:32,760
<font color="#E5E5E5">basically</font><font color="#CCCCCC"> i targeted a page</font><font color="#E5E5E5"> that was a</font>

377
00:16:30,630 --> 00:16:36,930
<font color="#E5E5E5">normal page</font><font color="#CCCCCC"> indexed DOJ's</font><font color="#E5E5E5"> me in</font><font color="#CCCCCC"> this</font>

378
00:16:32,760 --> 00:16:38,850
example and the<font color="#CCCCCC"> content</font><font color="#E5E5E5"> links here is 10</font>

379
00:16:36,930 --> 00:16:42,359
so as you<font color="#E5E5E5"> can</font><font color="#CCCCCC"> see I have</font><font color="#E5E5E5"> 10 characters</font>

380
00:16:38,850 --> 00:16:44,850
<font color="#E5E5E5">before the get request to the to the</font>

381
00:16:42,360 --> 00:16:46,830
target page and so I sent<font color="#E5E5E5"> that request</font>

382
00:16:44,850 --> 00:16:49,940
<font color="#CCCCCC">an event through</font><font color="#E5E5E5"> the valve the valve</font>

383
00:16:46,830 --> 00:16:52,710
didn't know about HTTP version 0.9 and

384
00:16:49,940 --> 00:16:54,960
because of<font color="#CCCCCC"> that it didn't even see this</font>

385
00:16:52,710 --> 00:16:57,120
as the second<font color="#E5E5E5"> request</font><font color="#CCCCCC"> just</font><font color="#E5E5E5"> let it go to</font>

386
00:16:54,960 --> 00:16:59,430
the web server<font color="#E5E5E5"> and in the response</font>

387
00:16:57,120 --> 00:17:02,400
<font color="#E5E5E5">I had the response of index dot JSP</font><font color="#CCCCCC"> as</font>

388
00:16:59,430 --> 00:17:04,948
well as this<font color="#CCCCCC"> receptor</font><font color="#E5E5E5"> JSP page on the</font>

389
00:17:02,400 --> 00:17:06,599
admin side<font color="#E5E5E5"> the now imagine if that reset</font>

390
00:17:04,949 --> 00:17:08,790
<font color="#E5E5E5">page was resetting something on the</font>

391
00:17:06,599 --> 00:17:10,889
server<font color="#CCCCCC"> and because this is JSP</font><font color="#E5E5E5"> on</font><font color="#CCCCCC"> apache</font>

392
00:17:08,790 --> 00:17:14,069
<font color="#CCCCCC">tomcat i could have included headers</font><font color="#E5E5E5"> and</font>

393
00:17:10,890 --> 00:17:17,550
this is the this<font color="#CCCCCC"> is an example here to</font>

394
00:17:14,069 --> 00:17:20,369
confuse the<font color="#CCCCCC"> vApps</font><font color="#E5E5E5"> even further so</font><font color="#CCCCCC"> apache</font>

395
00:17:17,550 --> 00:17:22,260
<font color="#CCCCCC">tomcat</font><font color="#E5E5E5"> also supports carriage return</font>

396
00:17:20,369 --> 00:17:24,839
<font color="#E5E5E5">rather than the whole carriage return</font>

397
00:17:22,260 --> 00:17:27,209
line<font color="#CCCCCC"> field</font><font color="#E5E5E5"> so basically after you have</font>

398
00:17:24,839 --> 00:17:30,090
<font color="#E5E5E5">your first request</font><font color="#CCCCCC"> you</font><font color="#E5E5E5"> can start the</font>

399
00:17:27,209 --> 00:17:31,680
second request<font color="#E5E5E5"> in HTTP version 0.9 you</font>

400
00:17:30,090 --> 00:17:34,110
don't need to<font color="#CCCCCC"> mention the version so</font>

401
00:17:31,680 --> 00:17:37,560
header starts from here<font color="#CCCCCC"> because</font><font color="#E5E5E5"> I have a</font>

402
00:17:34,110 --> 00:17:39,479
carriage return here and then I'm

403
00:17:37,560 --> 00:17:42,810
sending<font color="#CCCCCC"> a post request because</font><font color="#E5E5E5"> why not</font>

404
00:17:39,480 --> 00:17:45,960
<font color="#CCCCCC">Apache</font><font color="#E5E5E5"> Tomcat supports it so that can go</font>

405
00:17:42,810 --> 00:17:48,750
through<font color="#E5E5E5"> and that can really hit</font><font color="#CCCCCC"> that</font>

406
00:17:45,960 --> 00:17:52,230
like add user dot JSP page so if you

407
00:17:48,750 --> 00:17:55,980
have an<font color="#CCCCCC"> Apache Tomcat</font><font color="#E5E5E5"> verbs or even more</font>

408
00:17:52,230 --> 00:17:58,290
confused<font color="#E5E5E5"> can be more confused in the</font>

409
00:17:55,980 --> 00:17:59,110
example that I had so the solution we

410
00:17:58,290 --> 00:18:01,269
found was

411
00:17:59,110 --> 00:18:03,789
there was a tick box<font color="#E5E5E5"> somewhere</font><font color="#CCCCCC"> hidden</font>

412
00:18:01,269 --> 00:18:06,519
inside the bath and it was saying

413
00:18:03,789 --> 00:18:07,059
disable HTTP version 0.9<font color="#CCCCCC"> or something</font>

414
00:18:06,519 --> 00:18:09,100
like<font color="#E5E5E5"> that</font>

415
00:18:07,059 --> 00:18:11,168
as soon as<font color="#E5E5E5"> we did</font><font color="#CCCCCC"> that it worked one but</font>

416
00:18:09,100 --> 00:18:14,168
by default<font color="#CCCCCC"> it wasn't it so it should be</font>

417
00:18:11,169 --> 00:18:16,240
version 0.9<font color="#E5E5E5"> by default was supported I</font>

418
00:18:14,169 --> 00:18:20,260
think it should be<font color="#E5E5E5"> daughter</font><font color="#CCCCCC"> very round I</font>

419
00:18:16,240 --> 00:18:22,450
have also<font color="#E5E5E5"> created a poison like a module</font>

420
00:18:20,260 --> 00:18:24,158
<font color="#E5E5E5">or just function that you can</font><font color="#CCCCCC"> use if you</font>

421
00:18:22,450 --> 00:18:25,840
<font color="#CCCCCC">want to if you</font><font color="#E5E5E5"> want</font><font color="#CCCCCC"> to basically send</font>

422
00:18:24,159 --> 00:18:27,700
your<font color="#CCCCCC"> requests</font><font color="#E5E5E5"> they're not using burp</font>

423
00:18:25,840 --> 00:18:29,649
suite just<font color="#E5E5E5"> using Python</font><font color="#CCCCCC"> because you need</font>

424
00:18:27,700 --> 00:18:32,260
HTTP pipelining or something like<font color="#E5E5E5"> that</font>

425
00:18:29,649 --> 00:18:35,080
<font color="#CCCCCC">it basically fixed the pipelining for</font>

426
00:18:32,260 --> 00:18:37,000
you it fixed the headers<font color="#E5E5E5"> the it cares</font>

427
00:18:35,080 --> 00:18:38,740
about content links and everything<font color="#CCCCCC"> so</font>

428
00:18:37,000 --> 00:18:43,090
it's very<font color="#E5E5E5"> functional and you can use</font><font color="#CCCCCC"> it</font>

429
00:18:38,740 --> 00:18:44,950
if you<font color="#CCCCCC"> want to okay</font><font color="#E5E5E5"> that was about the</font>

430
00:18:43,090 --> 00:18:47,620
<font color="#E5E5E5">delivery</font><font color="#CCCCCC"> and now</font><font color="#E5E5E5"> I'm going to talk about</font>

431
00:18:44,950 --> 00:18:50,889
<font color="#E5E5E5">request mutation that's the actual part</font>

432
00:18:47,620 --> 00:18:54,250
I<font color="#E5E5E5"> like more because I can do more with</font>

433
00:18:50,889 --> 00:18:56,649
<font color="#E5E5E5">this so what is request mutation and</font>

434
00:18:54,250 --> 00:18:59,919
what is<font color="#E5E5E5"> this category so basically web</font>

435
00:18:56,649 --> 00:19:02,500
servers may act differently<font color="#CCCCCC"> depends</font><font color="#E5E5E5"> on</font>

436
00:18:59,919 --> 00:19:05,080
how they received<font color="#CCCCCC"> the requests</font><font color="#E5E5E5"> something</font>

437
00:19:02,500 --> 00:19:06,940
<font color="#E5E5E5">that is valid for one web server may not</font>

438
00:19:05,080 --> 00:19:08,918
be valid<font color="#CCCCCC"> for another</font><font color="#E5E5E5"> web server because</font>

439
00:19:06,940 --> 00:19:11,830
they have<font color="#E5E5E5"> implemented things differently</font>

440
00:19:08,919 --> 00:19:15,159
<font color="#E5E5E5">and when this happens when there</font><font color="#CCCCCC"> are</font>

441
00:19:11,830 --> 00:19:17,019
kind of like different features or

442
00:19:15,159 --> 00:19:19,330
different things being supported<font color="#CCCCCC"> by the</font>

443
00:19:17,019 --> 00:19:21,130
web servers<font color="#E5E5E5"> you probably can't find boy</font>

444
00:19:19,330 --> 00:19:24,970
passes because<font color="#CCCCCC"> graphs</font><font color="#E5E5E5"> can also implement</font>

445
00:19:21,130 --> 00:19:27,370
them differently so<font color="#E5E5E5"> we know about like</font>

446
00:19:24,970 --> 00:19:29,799
HTTP may know about<font color="#E5E5E5"> HTTP parameter</font>

447
00:19:27,370 --> 00:19:31,989
pollutions like if you duplicate some

448
00:19:29,799 --> 00:19:34,990
parameters<font color="#E5E5E5"> if</font><font color="#CCCCCC"> apps don't know about</font><font color="#E5E5E5"> it</font>

449
00:19:31,990 --> 00:19:36,909
they may<font color="#CCCCCC"> be able</font><font color="#E5E5E5"> to find a boy pass the</font>

450
00:19:34,990 --> 00:19:39,399
directory traversal and things like<font color="#CCCCCC"> that</font>

451
00:19:36,909 --> 00:19:41,380
might lead to a boy pass as well today

452
00:19:39,399 --> 00:19:43,840
I'm going<font color="#CCCCCC"> to talk about miss</font><font color="#E5E5E5"> shaped</font>

453
00:19:41,380 --> 00:19:47,289
<font color="#E5E5E5">requests but before doing that I'm going</font>

454
00:19:43,840 --> 00:19:49,750
to talk<font color="#CCCCCC"> about RFC</font><font color="#E5E5E5"> so you can</font><font color="#CCCCCC"> basically</font>

455
00:19:47,289 --> 00:19:51,760
it's like I have seen<font color="#E5E5E5"> other talks</font><font color="#CCCCCC"> also</font>

456
00:19:49,750 --> 00:19:54,340
in<font color="#CCCCCC"> app psyche you they were saying</font><font color="#E5E5E5"> read</font>

457
00:19:51,760 --> 00:19:57,070
RFC find the<font color="#CCCCCC"> vulnerabilities that's true</font>

458
00:19:54,340 --> 00:19:59,799
so if you really<font color="#CCCCCC"> want to find some good</font>

459
00:19:57,070 --> 00:20:02,049
vulnerabilities read the RFC<font color="#E5E5E5"> find the</font>

460
00:19:59,799 --> 00:20:05,080
<font color="#E5E5E5">vaguest statements like recommended</font>

461
00:20:02,049 --> 00:20:07,210
<font color="#CCCCCC">suggests that may may not</font><font color="#E5E5E5"> so any web</font>

462
00:20:05,080 --> 00:20:09,129
server or web application firewalls<font color="#E5E5E5"> or</font>

463
00:20:07,210 --> 00:20:12,060
proxies in the middle may have

464
00:20:09,130 --> 00:20:14,960
implemented these things differently

465
00:20:12,060 --> 00:20:17,970
and because of these<font color="#E5E5E5"> differences</font><font color="#CCCCCC"> a</font>

466
00:20:14,960 --> 00:20:20,490
request that<font color="#E5E5E5"> can be that is</font>

467
00:20:17,970 --> 00:20:23,760
understandable by the web server cannot

468
00:20:20,490 --> 00:20:26,100
even be parsed<font color="#E5E5E5"> by</font><font color="#CCCCCC"> the valve so</font><font color="#E5E5E5"> that is</font>

469
00:20:23,760 --> 00:20:28,020
where it<font color="#CCCCCC"> becomes interesting however</font>

470
00:20:26,100 --> 00:20:31,020
that said if you're just looking<font color="#E5E5E5"> in</font>

471
00:20:28,020 --> 00:20:33,270
<font color="#E5E5E5">normal features in RFC that's probably</font>

472
00:20:31,020 --> 00:20:35,490
<font color="#E5E5E5">know</font><font color="#CCCCCC"> about them</font><font color="#E5E5E5"> because they're they're</font>

473
00:20:33,270 --> 00:20:37,920
known<font color="#E5E5E5"> they people have talked about them</font>

474
00:20:35,490 --> 00:20:39,690
in<font color="#E5E5E5"> the past of us like the</font><font color="#CCCCCC"> verbs</font><font color="#E5E5E5"> are</font><font color="#CCCCCC"> not</font>

475
00:20:37,920 --> 00:20:42,060
<font color="#CCCCCC">as stupid</font><font color="#E5E5E5"> they will go and read or if</font>

476
00:20:39,690 --> 00:20:43,710
<font color="#E5E5E5">sees as well themselves and if there is</font>

477
00:20:42,060 --> 00:20:45,540
something<font color="#E5E5E5"> like</font><font color="#CCCCCC"> this they understand it</font>

478
00:20:43,710 --> 00:20:49,650
so what what this one<font color="#E5E5E5"> is it's</font><font color="#CCCCCC"> just an</font>

479
00:20:45,540 --> 00:20:51,330
example<font color="#CCCCCC"> in RFC says</font><font color="#E5E5E5"> basically it has</font>

480
00:20:49,650 --> 00:20:53,940
been obsoleted in the latest version but

481
00:20:51,330 --> 00:20:56,429
it<font color="#E5E5E5"> is a still being supported you can</font><font color="#CCCCCC"> in</font>

482
00:20:53,940 --> 00:21:00,000
the<font color="#E5E5E5"> request that you're sending you can</font>

483
00:20:56,430 --> 00:21:03,030
have the header value in multi lines<font color="#E5E5E5"> as</font>

484
00:21:00,000 --> 00:21:06,210
long as the<font color="#E5E5E5"> next line a start with a</font>

485
00:21:03,030 --> 00:21:09,690
space or<font color="#CCCCCC"> tab</font><font color="#E5E5E5"> long tab character then it</font>

486
00:21:06,210 --> 00:21:11,940
will be part of the the header<font color="#E5E5E5"> as you</font>

487
00:21:09,690 --> 00:21:13,620
can see it here for<font color="#CCCCCC"> example host header</font>

488
00:21:11,940 --> 00:21:16,740
and<font color="#E5E5E5"> then I have some space characters</font>

489
00:21:13,620 --> 00:21:19,739
tab characters and then I have a domain

490
00:21:16,740 --> 00:21:21,690
name<font color="#CCCCCC"> that what</font><font color="#E5E5E5"> that had been filtered so</font>

491
00:21:19,740 --> 00:21:23,910
basically I haven't boy passed any buffs

492
00:21:21,690 --> 00:21:26,250
using this technique using like line

493
00:21:23,910 --> 00:21:28,710
folding in headers<font color="#E5E5E5"> but in the past I've</font>

494
00:21:26,250 --> 00:21:30,840
<font color="#CCCCCC">both has some</font><font color="#E5E5E5"> websites that they're</font>

495
00:21:28,710 --> 00:21:34,020
filtered by<font color="#E5E5E5"> the company I was working</font>

496
00:21:30,840 --> 00:21:38,520
<font color="#CCCCCC">for using this</font><font color="#E5E5E5"> because I really needed</font>

497
00:21:34,020 --> 00:21:42,150
<font color="#CCCCCC">to access</font><font color="#E5E5E5"> that Facebook page so that's</font>

498
00:21:38,520 --> 00:21:44,370
<font color="#E5E5E5">it now I'm going to talk about custom</font>

499
00:21:42,150 --> 00:21:46,950
implementation<font color="#E5E5E5"> that these are the things</font>

500
00:21:44,370 --> 00:21:49,199
<font color="#CCCCCC">that are basically very interesting</font>

501
00:21:46,950 --> 00:21:51,570
these<font color="#E5E5E5"> are the things</font><font color="#CCCCCC"> that are not in the</font>

502
00:21:49,200 --> 00:21:53,790
RFC<font color="#E5E5E5"> but then developers of the web</font>

503
00:21:51,570 --> 00:21:55,950
<font color="#E5E5E5">servers or proxy decided to basically</font>

504
00:21:53,790 --> 00:21:58,230
<font color="#CCCCCC">support this</font><font color="#E5E5E5"> or develop web</font><font color="#CCCCCC"> technology</font>

505
00:21:55,950 --> 00:22:01,050
support decided to support<font color="#E5E5E5"> these kind</font>

506
00:21:58,230 --> 00:22:04,050
things because they are<font color="#E5E5E5"> cool because why</font>

507
00:22:01,050 --> 00:22:06,540
not<font color="#CCCCCC"> so the only way of finding</font><font color="#E5E5E5"> these</font>

508
00:22:04,050 --> 00:22:08,460
<font color="#CCCCCC">things are to fuzz it to basically go</font>

509
00:22:06,540 --> 00:22:10,920
there and see what would happen<font color="#E5E5E5"> if I add</font>

510
00:22:08,460 --> 00:22:13,140
<font color="#E5E5E5">this character if I do this or do that</font>

511
00:22:10,920 --> 00:22:15,180
<font color="#CCCCCC">and I really like the semicolon</font>

512
00:22:13,140 --> 00:22:17,820
character<font color="#E5E5E5"> it does different</font><font color="#CCCCCC"> things in</font>

513
00:22:15,180 --> 00:22:19,860
different web<font color="#E5E5E5"> servers</font><font color="#CCCCCC"> and web</font>

514
00:22:17,820 --> 00:22:23,639
applications<font color="#CCCCCC"> to just give you some</font>

515
00:22:19,860 --> 00:22:25,770
examples<font color="#CCCCCC"> you know like in the</font><font color="#E5E5E5"> in the URL</font>

516
00:22:23,640 --> 00:22:27,870
or<font color="#E5E5E5"> in the body of</font><font color="#CCCCCC"> a request</font>

517
00:22:25,770 --> 00:22:31,320
ampersand is a delimiter between

518
00:22:27,870 --> 00:22:33,540
parameters however important<font color="#CCCCCC"> Django you</font>

519
00:22:31,320 --> 00:22:36,000
can replace the ampersand with semicolon

520
00:22:33,540 --> 00:22:39,210
and send it over and it will understand

521
00:22:36,000 --> 00:22:42,480
it as a delimiter<font color="#CCCCCC"> so if there is a valve</font>

522
00:22:39,210 --> 00:22:44,790
<font color="#CCCCCC">that cares about</font><font color="#E5E5E5"> the parameters and it</font>

523
00:22:42,480 --> 00:22:46,590
says it has a rule<font color="#E5E5E5"> that for example</font><font color="#CCCCCC"> menu</font>

524
00:22:44,790 --> 00:22:50,129
<font color="#CCCCCC">C is admin equal to one or</font><font color="#E5E5E5"> something</font>

525
00:22:46,590 --> 00:22:52,439
<font color="#E5E5E5">just like to request if you</font><font color="#CCCCCC"> add a</font>

526
00:22:50,130 --> 00:22:55,590
parameter like this and add semicolon

527
00:22:52,440 --> 00:22:58,350
after that and so on you can basically

528
00:22:55,590 --> 00:23:00,780
bypass it and<font color="#E5E5E5"> the other thing is like</font>

529
00:22:58,350 --> 00:23:04,020
<font color="#E5E5E5">ASB Classic on</font><font color="#CCCCCC"> OAS is</font><font color="#E5E5E5"> always crazy about</font>

530
00:23:00,780 --> 00:23:06,899
<font color="#CCCCCC">stuff like just to give you an example</font>

531
00:23:04,020 --> 00:23:10,800
if you<font color="#E5E5E5"> have a person character</font><font color="#CCCCCC"> not being</font>

532
00:23:06,900 --> 00:23:14,130
followed by a hex value<font color="#CCCCCC"> it can't be seen</font>

533
00:23:10,800 --> 00:23:18,210
<font color="#CCCCCC">from an</font><font color="#E5E5E5"> HP classic application so</font>

534
00:23:14,130 --> 00:23:18,630
percent<font color="#E5E5E5"> s is equal to s that's quite</font>

535
00:23:18,210 --> 00:23:21,570
good

536
00:23:18,630 --> 00:23:24,660
<font color="#E5E5E5">also it converts it converts the</font>

537
00:23:21,570 --> 00:23:28,770
characters in<font color="#CCCCCC"> UTF like for example utf-8</font>

538
00:23:24,660 --> 00:23:31,620
so when you have like<font color="#CCCCCC"> - a or</font><font color="#E5E5E5"> something</font>

539
00:23:28,770 --> 00:23:35,879
<font color="#E5E5E5">like</font><font color="#CCCCCC"> that if you</font><font color="#E5E5E5"> convert it to a and in</font>

540
00:23:31,620 --> 00:23:38,550
here like<font color="#E5E5E5"> we have I here letter I this</font>

541
00:23:35,880 --> 00:23:40,650
is in utf-8 it's probably<font color="#E5E5E5"> I some sort of</font>

542
00:23:38,550 --> 00:23:42,840
<font color="#CCCCCC">avi dots on</font><font color="#E5E5E5"> top of it or something</font><font color="#CCCCCC"> like</font>

543
00:23:40,650 --> 00:23:44,700
<font color="#CCCCCC">that</font><font color="#E5E5E5"> it will be converted to I and it</font>

544
00:23:42,840 --> 00:23:48,720
will be a script again<font color="#E5E5E5"> so you can bypass</font>

545
00:23:44,700 --> 00:23:51,420
buffs using that even some<font color="#E5E5E5"> of the like a</font>

546
00:23:48,720 --> 00:23:53,309
<font color="#CCCCCC">conte cross-site scripting features on</font>

547
00:23:51,420 --> 00:23:57,360
the<font color="#CCCCCC"> browsers can be bypassed</font><font color="#E5E5E5"> using</font><font color="#CCCCCC"> this</font>

548
00:23:53,309 --> 00:24:00,720
features<font color="#CCCCCC"> and so Apache Tomcat uses Simic</font>

549
00:23:57,360 --> 00:24:02,969
semicolon in<font color="#CCCCCC"> the URL path differently as</font>

550
00:24:00,720 --> 00:24:05,100
<font color="#E5E5E5">well</font><font color="#CCCCCC"> so</font><font color="#E5E5E5"> anything in the path when you're</font>

551
00:24:02,970 --> 00:24:08,610
<font color="#E5E5E5">sending something to Apache Tomcat is a</font>

552
00:24:05,100 --> 00:24:10,709
comment so unless it sees a slash<font color="#CCCCCC"> so</font>

553
00:24:08,610 --> 00:24:13,709
basically<font color="#E5E5E5"> this path here is equal to</font>

554
00:24:10,710 --> 00:24:16,080
<font color="#E5E5E5">this the red one in front of it so</font><font color="#CCCCCC"> part</font>

555
00:24:13,710 --> 00:24:19,290
<font color="#CCCCCC">one semicolon foo is equal to slash path</font>

556
00:24:16,080 --> 00:24:22,020
one so you can still go there and see a

557
00:24:19,290 --> 00:24:27,030
page if it cares about different things

558
00:24:22,020 --> 00:24:28,679
in the URL however I'm going<font color="#E5E5E5"> to talk</font>

559
00:24:27,030 --> 00:24:31,770
about<font color="#E5E5E5"> something completely different</font>

560
00:24:28,679 --> 00:24:34,620
<font color="#E5E5E5">today and that's content encoding that</font>

561
00:24:31,770 --> 00:24:36,929
<font color="#CCCCCC">is what I like and I think it hadn't</font>

562
00:24:34,620 --> 00:24:39,600
been covered before<font color="#CCCCCC"> we published some</font>

563
00:24:36,929 --> 00:24:43,080
<font color="#E5E5E5">blog</font><font color="#CCCCCC"> posts in NCC</font>

564
00:24:39,600 --> 00:24:45,899
website<font color="#CCCCCC"> so basically if</font><font color="#E5E5E5"> you read the RFC</font>

565
00:24:43,080 --> 00:24:48,960
it says yes we can have<font color="#E5E5E5"> content encoding</font>

566
00:24:45,900 --> 00:24:51,090
in responses<font color="#E5E5E5"> actually it</font><font color="#CCCCCC"> doesn't say</font>

567
00:24:48,960 --> 00:24:53,760
responses it says has TTP messages<font color="#CCCCCC"> and</font>

568
00:24:51,090 --> 00:24:56,428
because<font color="#CCCCCC"> of that you can</font><font color="#E5E5E5"> use content</font>

569
00:24:53,760 --> 00:24:59,070
encoding<font color="#E5E5E5"> in the requests as well</font><font color="#CCCCCC"> as</font><font color="#E5E5E5"> the</font>

570
00:24:56,429 --> 00:25:04,350
response response<font color="#CCCCCC"> requests so what would</font>

571
00:24:59,070 --> 00:25:07,080
<font color="#E5E5E5">happen</font><font color="#CCCCCC"> is if you use</font><font color="#E5E5E5"> care set in a</font>

572
00:25:04,350 --> 00:25:09,149
request you will encode all the

573
00:25:07,080 --> 00:25:10,980
characters that<font color="#CCCCCC"> are inside the</font><font color="#E5E5E5"> request</font>

574
00:25:09,150 --> 00:25:13,080
<font color="#E5E5E5">and you will send it to</font><font color="#CCCCCC"> the</font><font color="#E5E5E5"> server from</font>

575
00:25:10,980 --> 00:25:14,970
server point of view<font color="#E5E5E5"> it's completely</font>

576
00:25:13,080 --> 00:25:16,590
fine and<font color="#CCCCCC"> it's normal but it will bypass</font>

577
00:25:14,970 --> 00:25:21,929
all the<font color="#CCCCCC"> buffs</font>

578
00:25:16,590 --> 00:25:24,178
in the middle so request encoding is

579
00:25:21,929 --> 00:25:26,549
<font color="#E5E5E5">also can also be challenging</font><font color="#CCCCCC"> because any</font>

580
00:25:24,179 --> 00:25:29,940
web server can<font color="#E5E5E5"> implement it</font><font color="#CCCCCC"> differently</font>

581
00:25:26,549 --> 00:25:32,610
there<font color="#CCCCCC"> I couldn't basically</font><font color="#E5E5E5"> so when I</font>

582
00:25:29,940 --> 00:25:36,809
tried<font color="#CCCCCC"> HP classic on</font><font color="#E5E5E5"> Ras did not support</font>

583
00:25:32,610 --> 00:25:40,830
it also<font color="#E5E5E5"> Apache</font><font color="#CCCCCC"> is when I had PHP did not</font>

584
00:25:36,809 --> 00:25:44,280
support it so that's it<font color="#E5E5E5"> but for a</font><font color="#CCCCCC"> sspx</font>

585
00:25:40,830 --> 00:25:46,199
<font color="#E5E5E5">Apache Tomcat and for Python</font><font color="#CCCCCC"> to entry on</font>

586
00:25:44,280 --> 00:25:48,270
<font color="#CCCCCC">Django when I tried it worked</font>

587
00:25:46,200 --> 00:25:51,480
however if you<font color="#E5E5E5"> look at this table you</font>

588
00:25:48,270 --> 00:25:53,370
will<font color="#CCCCCC"> see the differences any single one</font>

589
00:25:51,480 --> 00:25:55,350
<font color="#CCCCCC">of them is different</font><font color="#E5E5E5"> than the others</font><font color="#CCCCCC"> so</font>

590
00:25:53,370 --> 00:25:59,158
if you<font color="#E5E5E5"> really want to use this technique</font>

591
00:25:55,350 --> 00:26:01,230
during<font color="#E5E5E5"> testing to bypass maths you will</font>

592
00:25:59,159 --> 00:26:02,970
have a hard time<font color="#E5E5E5"> to create a</font><font color="#CCCCCC"> tool and</font>

593
00:26:01,230 --> 00:26:06,570
you need to<font color="#CCCCCC"> customize your tool every</font>

594
00:26:02,970 --> 00:26:10,530
time and so this<font color="#CCCCCC"> is how you basically</font>

595
00:26:06,570 --> 00:26:13,020
<font color="#E5E5E5">need</font><font color="#CCCCCC"> to encode your</font><font color="#E5E5E5"> parameters you this</font>

596
00:26:10,530 --> 00:26:15,570
this<font color="#CCCCCC"> simple Python code here can be</font><font color="#E5E5E5"> used</font>

597
00:26:13,020 --> 00:26:17,158
to<font color="#E5E5E5"> basically encode the payload using</font>

598
00:26:15,570 --> 00:26:19,168
IBM<font color="#E5E5E5"> 0:37</font>

599
00:26:17,159 --> 00:26:23,010
and then it will give you this I have

600
00:26:19,169 --> 00:26:25,440
<font color="#CCCCCC">your L encoded it in here and that's it</font>

601
00:26:23,010 --> 00:26:28,080
it's very<font color="#E5E5E5"> easy however you can't use</font>

602
00:26:25,440 --> 00:26:30,929
<font color="#E5E5E5">this easily during</font><font color="#CCCCCC"> a test</font><font color="#E5E5E5"> we need</font>

603
00:26:28,080 --> 00:26:35,549
<font color="#E5E5E5">something to</font><font color="#CCCCCC"> basically automate the</font>

604
00:26:30,929 --> 00:26:38,940
whole<font color="#E5E5E5"> thing and I have created a burp</font>

605
00:26:35,549 --> 00:26:41,340
suite<font color="#CCCCCC"> plug-in extension called</font><font color="#E5E5E5"> HTTP</font>

606
00:26:38,940 --> 00:26:43,980
smuggler<font color="#CCCCCC"> and you can</font><font color="#E5E5E5"> download it from</font>

607
00:26:41,340 --> 00:26:46,559
<font color="#E5E5E5">github</font><font color="#CCCCCC"> it's</font><font color="#E5E5E5"> accessible it's still not</font><font color="#CCCCCC"> in</font>

608
00:26:43,980 --> 00:26:49,470
<font color="#E5E5E5">bad</font><font color="#CCCCCC"> pasture</font><font color="#E5E5E5"> because this is an early</font>

609
00:26:46,559 --> 00:26:51,820
<font color="#CCCCCC">version</font><font color="#E5E5E5"> of it and but there is a Java</font>

610
00:26:49,470 --> 00:26:54,400
file you<font color="#E5E5E5"> can just download it and add it</font>

611
00:26:51,820 --> 00:26:56,500
your<font color="#CCCCCC"> birth seed</font><font color="#E5E5E5"> and you can select the</font>

612
00:26:54,400 --> 00:26:58,570
<font color="#CCCCCC">policy you</font><font color="#E5E5E5"> want and if for example</font>

613
00:26:56,500 --> 00:27:00,820
<font color="#E5E5E5">you're testing a new web server that is</font>

614
00:26:58,570 --> 00:27:03,040
<font color="#E5E5E5">not there then</font><font color="#CCCCCC"> you need to use</font><font color="#E5E5E5"> the</font>

615
00:27:00,820 --> 00:27:06,060
<font color="#E5E5E5">custom one and just go</font><font color="#CCCCCC"> there and</font><font color="#E5E5E5"> see</font>

616
00:27:03,040 --> 00:27:08,740
which one will work on the web server

617
00:27:06,060 --> 00:27:11,770
<font color="#E5E5E5">just give you some examples</font><font color="#CCCCCC"> like this is</font>

618
00:27:08,740 --> 00:27:13,930
<font color="#E5E5E5">CloudFlare and I'm sending a sequel</font>

619
00:27:11,770 --> 00:27:16,570
injection payload for<font color="#CCCCCC"> you</font><font color="#E5E5E5"> find the</font>

620
00:27:13,930 --> 00:27:18,070
pointer<font color="#E5E5E5"> yeah here so this is the</font><font color="#CCCCCC"> normal</font>

621
00:27:16,570 --> 00:27:20,379
security injection payload that<font color="#E5E5E5"> I'm</font>

622
00:27:18,070 --> 00:27:22,720
<font color="#E5E5E5">sending if I send it normally I will</font><font color="#CCCCCC"> get</font>

623
00:27:20,380 --> 00:27:26,130
for a tree which<font color="#CCCCCC"> is like</font><font color="#E5E5E5"> I have been</font>

624
00:27:22,720 --> 00:27:29,410
blocked if I use HTTP a smuggler and

625
00:27:26,130 --> 00:27:32,380
because<font color="#E5E5E5"> this was JSP I was using</font><font color="#CCCCCC"> Apache</font>

626
00:27:29,410 --> 00:27:34,500
<font color="#CCCCCC">Tomcat</font><font color="#E5E5E5"> policy and I'm sending this using</font>

627
00:27:32,380 --> 00:27:36,970
<font color="#E5E5E5">HTTP smuggler then can go through</font>

628
00:27:34,500 --> 00:27:38,500
<font color="#CCCCCC">CloudFlare</font><font color="#E5E5E5"> without being blocked the</font>

629
00:27:36,970 --> 00:27:42,550
same with other paths

630
00:27:38,500 --> 00:27:43,840
<font color="#CCCCCC">I have even</font><font color="#E5E5E5"> tried in a mod</font><font color="#CCCCCC"> security</font><font color="#E5E5E5"> but</font>

631
00:27:42,550 --> 00:27:46,210
as you can<font color="#E5E5E5"> see</font><font color="#CCCCCC"> I have cheated a little</font>

632
00:27:43,840 --> 00:27:49,870
<font color="#E5E5E5">bit of</font><font color="#CCCCCC"> added ampersand here</font><font color="#E5E5E5"> I've also</font>

633
00:27:46,210 --> 00:27:53,740
capitalized<font color="#CCCCCC"> our letter here was needed</font>

634
00:27:49,870 --> 00:27:56,050
and now if you send it<font color="#E5E5E5"> without HTTPS</font>

635
00:27:53,740 --> 00:27:58,750
<font color="#E5E5E5">Mugler you will be blocked but if you</font>

636
00:27:56,050 --> 00:28:02,889
send it through HTTPS Mugler<font color="#E5E5E5"> then it</font>

637
00:27:58,750 --> 00:28:05,830
will be bypassed<font color="#CCCCCC"> and there is no in like</font>

638
00:28:02,890 --> 00:28:07,720
alerts from<font color="#E5E5E5"> or warnings from</font><font color="#CCCCCC"> mod</font>

639
00:28:05,830 --> 00:28:11,439
security<font color="#E5E5E5"> so this method can be quite</font>

640
00:28:07,720 --> 00:28:14,020
<font color="#CCCCCC">useful however</font><font color="#E5E5E5"> HTTP encoding is not</font>

641
00:28:11,440 --> 00:28:16,540
<font color="#CCCCCC">always useful for testing</font><font color="#E5E5E5"> if you have</font>

642
00:28:14,020 --> 00:28:18,730
utf-8 characters in your<font color="#E5E5E5"> request it may</font>

643
00:28:16,540 --> 00:28:22,450
<font color="#E5E5E5">replace some of</font><font color="#CCCCCC"> the characters with some</font>

644
00:28:18,730 --> 00:28:23,650
question<font color="#CCCCCC"> marks or something so if the</font>

645
00:28:22,450 --> 00:28:26,380
<font color="#E5E5E5">request that you're sending to the</font>

646
00:28:23,650 --> 00:28:28,480
<font color="#E5E5E5">server is changing</font><font color="#CCCCCC"> something on the</font>

647
00:28:26,380 --> 00:28:31,120
server<font color="#E5E5E5"> side</font><font color="#CCCCCC"> you have to be careful about</font>

648
00:28:28,480 --> 00:28:33,790
<font color="#CCCCCC">using</font><font color="#E5E5E5"> that using HTTP smuggler there is</font>

649
00:28:31,120 --> 00:28:36,939
a<font color="#E5E5E5"> checkbox that is disabled by default</font>

650
00:28:33,790 --> 00:28:38,860
<font color="#CCCCCC">and so it's safe to use</font><font color="#E5E5E5"> HTTP smuggler</font><font color="#CCCCCC"> as</font>

651
00:28:36,940 --> 00:28:40,420
soon<font color="#E5E5E5"> as it sends</font><font color="#CCCCCC"> that it is changing a</font>

652
00:28:38,860 --> 00:28:43,240
character to something it doesn't<font color="#CCCCCC"> have</font>

653
00:28:40,420 --> 00:28:45,850
any idea about it<font color="#E5E5E5"> will not work it</font><font color="#CCCCCC"> will</font>

654
00:28:43,240 --> 00:28:49,780
just return the<font color="#CCCCCC"> actual HTTP</font><font color="#E5E5E5"> request and</font>

655
00:28:45,850 --> 00:28:54,669
<font color="#E5E5E5">it will not encode it and I found very</font>

656
00:28:49,780 --> 00:28:56,290
<font color="#CCCCCC">interesting like I can't side-effect I</font>

657
00:28:54,670 --> 00:28:58,840
should say<font color="#CCCCCC"> because this wasn't a bath</font>

658
00:28:56,290 --> 00:29:01,930
<font color="#CCCCCC">bypass</font><font color="#E5E5E5"> this was just a side effect that</font>

659
00:28:58,840 --> 00:29:04,600
again we published in<font color="#CCCCCC"> NCC group blog and</font>

660
00:29:01,930 --> 00:29:07,210
Microsoft basically said it

661
00:29:04,600 --> 00:29:09,189
is very minor and<font color="#CCCCCC"> it doesn't really pass</font>

662
00:29:07,210 --> 00:29:13,710
the<font color="#CCCCCC"> security bar but it's</font><font color="#E5E5E5"> very good and</font>

663
00:29:09,190 --> 00:29:16,090
very interesting<font color="#E5E5E5"> so if you use</font><font color="#CCCCCC"> request</font>

664
00:29:13,710 --> 00:29:19,000
<font color="#CCCCCC">value and so request validation</font><font color="#E5E5E5"> in.net</font>

665
00:29:16,090 --> 00:29:21,459
<font color="#E5E5E5">basically blocks any HTML codes that are</font>

666
00:29:19,000 --> 00:29:22,360
<font color="#E5E5E5">being sent to a dotnet page and it will</font>

667
00:29:21,460 --> 00:29:25,690
<font color="#E5E5E5">show</font><font color="#CCCCCC"> you an error</font>

668
00:29:22,360 --> 00:29:26,919
so it's<font color="#CCCCCC"> an auntie CSS XSS</font><font color="#E5E5E5"> protection so</font>

669
00:29:25,690 --> 00:29:28,900
that's it

670
00:29:26,920 --> 00:29:31,120
however I found<font color="#E5E5E5"> out if you have</font><font color="#CCCCCC"> uh</font>

671
00:29:28,900 --> 00:29:33,100
<font color="#CCCCCC">narrow resume next</font><font color="#E5E5E5"> in vb.net</font><font color="#CCCCCC"> or for</font>

672
00:29:31,120 --> 00:29:35,919
<font color="#CCCCCC">example an empty catch like we have</font><font color="#E5E5E5"> here</font>

673
00:29:33,100 --> 00:29:38,290
<font color="#E5E5E5">in seashore</font><font color="#CCCCCC"> and it is reading some query</font>

674
00:29:35,920 --> 00:29:40,090
string or foreign parameters<font color="#E5E5E5"> the first</font>

675
00:29:38,290 --> 00:29:43,840
time that it reads query string or

676
00:29:40,090 --> 00:29:46,330
foreign parameters<font color="#E5E5E5"> it is basically going</font>

677
00:29:43,840 --> 00:29:48,250
<font color="#E5E5E5">to</font><font color="#CCCCCC"> say okay this</font><font color="#E5E5E5"> is an empty value the</font>

678
00:29:46,330 --> 00:29:50,560
second time it reads the same parameters

679
00:29:48,250 --> 00:29:56,830
or another parameter<font color="#CCCCCC"> it actually sees</font>

680
00:29:50,560 --> 00:30:01,270
the<font color="#CCCCCC"> value so this is useful to basically</font>

681
00:29:56,830 --> 00:30:03,550
exploit some<font color="#E5E5E5"> stored XSS and it it is</font>

682
00:30:01,270 --> 00:30:06,450
also useful<font color="#E5E5E5"> to bypass some validations</font>

683
00:30:03,550 --> 00:30:09,340
<font color="#E5E5E5">because it has time of check time of use</font>

684
00:30:06,450 --> 00:30:11,800
vulnerability<font color="#E5E5E5"> because when it reads it</font>

685
00:30:09,340 --> 00:30:14,050
<font color="#E5E5E5">for the first time it's empty</font><font color="#CCCCCC"> and then</font>

686
00:30:11,800 --> 00:30:17,590
it wants<font color="#E5E5E5"> to read it again it's not</font><font color="#CCCCCC"> empty</font>

687
00:30:14,050 --> 00:30:19,870
<font color="#CCCCCC">so that's when you can basically bypass</font>

688
00:30:17,590 --> 00:30:21,580
some some protections but it's rare to

689
00:30:19,870 --> 00:30:24,699
see it but whenever you see<font color="#CCCCCC"> it it's</font>

690
00:30:21,580 --> 00:30:28,240
vulnerable<font color="#CCCCCC"> and the twist here is</font><font color="#E5E5E5"> if your</font>

691
00:30:24,700 --> 00:30:31,870
payload<font color="#E5E5E5"> is in the URL</font><font color="#CCCCCC"> you have to</font><font color="#E5E5E5"> send</font><font color="#CCCCCC"> a</font>

692
00:30:28,240 --> 00:30:34,000
post<font color="#E5E5E5"> request and if the</font><font color="#CCCCCC"> payload is in</font>

693
00:30:31,870 --> 00:30:36,429
the body<font color="#E5E5E5"> you</font><font color="#CCCCCC"> have to send</font><font color="#E5E5E5"> a get request</font>

694
00:30:34,000 --> 00:30:38,890
as long as you keep the<font color="#E5E5E5"> content type</font>

695
00:30:36,430 --> 00:30:40,930
from<font color="#E5E5E5"> our s point of view it's a still a</font>

696
00:30:38,890 --> 00:30:44,050
post request<font color="#CCCCCC"> so it doesn't matter but it</font>

697
00:30:40,930 --> 00:30:48,370
will bypass<font color="#E5E5E5"> the request validation so</font>

698
00:30:44,050 --> 00:30:54,550
that's the small<font color="#CCCCCC"> choice</font><font color="#E5E5E5"> there here is an</font>

699
00:30:48,370 --> 00:30:56,649
example so in this aspx page<font color="#CCCCCC"> we had that</font>

700
00:30:54,550 --> 00:30:59,530
on<font color="#E5E5E5"> error regime next and it was</font>

701
00:30:56,650 --> 00:31:03,640
basically showing<font color="#E5E5E5"> the</font><font color="#CCCCCC"> post param one</font>

702
00:30:59,530 --> 00:31:06,220
once twice and host param<font color="#CCCCCC"> two only once</font>

703
00:31:03,640 --> 00:31:08,740
<font color="#CCCCCC">let me see if I can show the pointer so</font>

704
00:31:06,220 --> 00:31:11,080
as you<font color="#E5E5E5"> can</font><font color="#CCCCCC"> see here the post param one</font>

705
00:31:08,740 --> 00:31:13,600
and post round<font color="#E5E5E5"> two was being sent to the</font>

706
00:31:11,080 --> 00:31:16,720
server<font color="#E5E5E5"> encoded as you can see here and</font>

707
00:31:13,600 --> 00:31:18,279
they have been encoded using IBM 500 and

708
00:31:16,720 --> 00:31:21,309
because they are<font color="#E5E5E5"> in the</font>

709
00:31:18,279 --> 00:31:24,340
of this<font color="#E5E5E5"> request I'm sending it get where</font>

710
00:31:21,309 --> 00:31:26,830
so that was needed<font color="#E5E5E5"> but I'm because I'm</font>

711
00:31:24,340 --> 00:31:30,609
still keeping<font color="#E5E5E5"> the content time as is the</font>

712
00:31:26,830 --> 00:31:33,549
<font color="#CCCCCC">survival state</font><font color="#E5E5E5"> as a post request so if</font>

713
00:31:30,609 --> 00:31:36,309
there<font color="#CCCCCC"> wasn't any</font><font color="#E5E5E5"> request validation if</font>

714
00:31:33,549 --> 00:31:39,969
it was disabled<font color="#CCCCCC"> I would have seen</font><font color="#E5E5E5"> three</font>

715
00:31:36,309 --> 00:31:41,859
alerts here<font color="#CCCCCC"> to</font><font color="#E5E5E5"> like because I was</font>

716
00:31:39,969 --> 00:31:43,779
<font color="#E5E5E5">printing this parameter twice and this</font>

717
00:31:41,859 --> 00:31:46,239
<font color="#E5E5E5">parameter once</font><font color="#CCCCCC"> I would</font><font color="#E5E5E5"> have seen a lot</font>

718
00:31:43,779 --> 00:31:50,619
more<font color="#E5E5E5"> but there is an empty</font><font color="#CCCCCC"> string and</font>

719
00:31:46,239 --> 00:31:52,749
then this<font color="#E5E5E5"> and here is an</font><font color="#CCCCCC"> example for a</font>

720
00:31:50,619 --> 00:31:55,178
sequel injection challenged<font color="#CCCCCC"> or</font><font color="#E5E5E5"> basically</font>

721
00:31:52,749 --> 00:31:57,369
put<font color="#CCCCCC"> on my Twitter unfortunately nobody</font>

722
00:31:55,179 --> 00:31:59,859
<font color="#E5E5E5">solved this on time some people solved</font>

723
00:31:57,369 --> 00:32:02,529
it afterwards after<font color="#CCCCCC"> the deadline but was</font>

724
00:31:59,859 --> 00:32:03,158
quite past the deadline and<font color="#E5E5E5"> I had they</font>

725
00:32:02,529 --> 00:32:05,679
had<font color="#E5E5E5"> help</font>

726
00:32:03,159 --> 00:32:07,929
so for that reason I'm<font color="#CCCCCC"> not announcing</font>

727
00:32:05,679 --> 00:32:11,190
<font color="#E5E5E5">them as the winner but this this is the</font>

728
00:32:07,929 --> 00:32:14,859
<font color="#E5E5E5">this</font><font color="#CCCCCC"> is the code so honorarium next and</font>

729
00:32:11,190 --> 00:32:18,849
then<font color="#CCCCCC"> I am reading</font><font color="#E5E5E5"> the UID here saying if</font>

730
00:32:14,859 --> 00:32:21,699
it contains single code then it's unsafe

731
00:32:18,849 --> 00:32:24,879
and<font color="#CCCCCC"> des know</font><font color="#E5E5E5"> it if it doesn't then read</font>

732
00:32:21,700 --> 00:32:27,099
it<font color="#CCCCCC"> again and create a sequel query</font>

733
00:32:24,879 --> 00:32:28,509
<font color="#E5E5E5">obviously this is unsafe and then I was</font>

734
00:32:27,099 --> 00:32:30,218
doing<font color="#E5E5E5"> something afterward in this</font>

735
00:32:28,509 --> 00:32:32,979
example I'm just<font color="#E5E5E5"> showing it out you</font>

736
00:32:30,219 --> 00:32:35,619
shouldn't<font color="#CCCCCC"> like showing it on the page</font><font color="#E5E5E5"> so</font>

737
00:32:32,979 --> 00:32:38,950
if you send the request<font color="#CCCCCC"> like this UID</font>

738
00:32:35,619 --> 00:32:41,499
<font color="#E5E5E5">some</font><font color="#CCCCCC"> haich-d a HTML tag here to trigger</font>

739
00:32:38,950 --> 00:32:44,080
request validation<font color="#E5E5E5"> and then your sequel</font>

740
00:32:41,499 --> 00:32:46,989
injection<font color="#E5E5E5"> afterwards then you can</font>

741
00:32:44,080 --> 00:32:50,289
exploit this as you can<font color="#CCCCCC"> see because</font><font color="#E5E5E5"> the</font>

742
00:32:46,989 --> 00:32:54,759
<font color="#E5E5E5">parameter was in the URL</font><font color="#CCCCCC"> I had to send</font>

743
00:32:50,289 --> 00:32:57,009
the post message here and this is all

744
00:32:54,759 --> 00:33:00,129
being 500<font color="#E5E5E5"> encoded again and it goes to</font>

745
00:32:57,009 --> 00:33:03,009
the server and exploit the application

746
00:33:00,129 --> 00:33:12,279
as<font color="#CCCCCC"> you can see it will see it as</font><font color="#E5E5E5"> like</font>

747
00:33:03,009 --> 00:33:14,259
being<font color="#E5E5E5"> injected which was very good so if</font>

748
00:33:12,279 --> 00:33:17,229
how<font color="#CCCCCC"> can you stop this request encoding</font>

749
00:33:14,259 --> 00:33:19,179
is bad how<font color="#E5E5E5"> can you stop it the way I</font>

750
00:33:17,229 --> 00:33:21,519
found to stop this using mod<font color="#E5E5E5"> security</font>

751
00:33:19,179 --> 00:33:24,339
was using this rule so basically this

752
00:33:21,519 --> 00:33:28,570
rule says whenever you see<font color="#CCCCCC"> care set in a</font>

753
00:33:24,339 --> 00:33:30,849
request<font color="#E5E5E5"> or the the</font><font color="#CCCCCC"> cache is not utf-8 if</font>

754
00:33:28,570 --> 00:33:31,720
it is in the request<font color="#E5E5E5"> then just deny the</font>

755
00:33:30,849 --> 00:33:33,610
that

756
00:33:31,720 --> 00:33:35,830
<font color="#CCCCCC">Qwest this is also a rule for</font>

757
00:33:33,610 --> 00:33:39,459
encapsulate just an<font color="#E5E5E5"> example to say like</font>

758
00:33:35,830 --> 00:33:42,668
<font color="#E5E5E5">this we can basically implement at a</font>

759
00:33:39,460 --> 00:33:45,490
similarly<font color="#E5E5E5"> on other laughs so it will say</font>

760
00:33:42,669 --> 00:33:47,890
<font color="#E5E5E5">again the same thing character set</font>

761
00:33:45,490 --> 00:33:51,429
shouldn't be there<font color="#CCCCCC"> but</font><font color="#E5E5E5"> if it is there</font>

762
00:33:47,890 --> 00:33:54,120
<font color="#CCCCCC">then it shouldn't be utf-8 it should be</font>

763
00:33:51,429 --> 00:33:57,460
only utf-8 and<font color="#E5E5E5"> nothing else</font>

764
00:33:54,120 --> 00:34:03,280
maybe I brought I've written<font color="#E5E5E5"> that wrong</font>

765
00:33:57,460 --> 00:34:05,850
<font color="#E5E5E5">but not sure</font><font color="#CCCCCC"> okay so now I</font><font color="#E5E5E5"> have a test</font>

766
00:34:03,280 --> 00:34:10,000
case<font color="#E5E5E5"> walk through to just talk</font><font color="#CCCCCC"> about</font>

767
00:34:05,850 --> 00:34:12,609
things very<font color="#CCCCCC"> fast so in here I'm just</font>

768
00:34:10,000 --> 00:34:14,918
<font color="#E5E5E5">going to show you how to</font><font color="#CCCCCC"> bypass some web</font>

769
00:34:12,609 --> 00:34:17,918
application firewalls<font color="#E5E5E5"> when I'm when I</font>

770
00:34:14,918 --> 00:34:20,230
have<font color="#CCCCCC"> OS 10 and and a speaks page which</font>

771
00:34:17,918 --> 00:34:22,658
is very fast<font color="#CCCCCC"> I'm going</font><font color="#E5E5E5"> through some</font>

772
00:34:20,230 --> 00:34:24,760
simple<font color="#E5E5E5"> steps and</font><font color="#CCCCCC"> will show</font><font color="#E5E5E5"> you how you</font>

773
00:34:22,659 --> 00:34:28,899
can bypass them just by using<font color="#CCCCCC"> some</font>

774
00:34:24,760 --> 00:34:31,389
simple<font color="#E5E5E5"> steps so I have an a speaks page</font>

775
00:34:28,899 --> 00:34:35,138
that I accept<font color="#E5E5E5"> a post request and it's</font>

776
00:34:31,389 --> 00:34:38,409
vulnerable<font color="#E5E5E5"> so for in the</font><font color="#CCCCCC"> first</font><font color="#E5E5E5"> step I'm</font>

777
00:34:35,139 --> 00:34:41,349
just replacing<font color="#E5E5E5"> post we'd get so this is</font>

778
00:34:38,409 --> 00:34:44,560
my request<font color="#CCCCCC"> I'm just replacing</font><font color="#E5E5E5"> this post</font>

779
00:34:41,349 --> 00:34:46,450
<font color="#CCCCCC">we'd get as you can see I have a sequel</font>

780
00:34:44,560 --> 00:34:49,330
injection payload here that is going<font color="#E5E5E5"> to</font>

781
00:34:46,449 --> 00:34:51,549
be<font color="#E5E5E5"> blocked by all the buffs like in this</font>

782
00:34:49,330 --> 00:34:53,589
<font color="#E5E5E5">example</font><font color="#CCCCCC"> I haven't covered</font><font color="#E5E5E5"> any other just</font>

783
00:34:51,550 --> 00:34:57,070
because<font color="#CCCCCC"> these</font><font color="#E5E5E5"> were easier</font><font color="#CCCCCC"> to be tested</font><font color="#E5E5E5"> I</font>

784
00:34:53,589 --> 00:35:00,250
know it<font color="#E5E5E5"> quickly tested them during the</font>

785
00:34:57,070 --> 00:35:02,040
slides just<font color="#E5E5E5"> like a few days ago so as</font>

786
00:35:00,250 --> 00:35:04,330
you can see<font color="#CCCCCC"> I've</font><font color="#E5E5E5"> replaced post we'd get</font>

787
00:35:02,040 --> 00:35:07,240
nothing happened they still know<font color="#CCCCCC"> about</font>

788
00:35:04,330 --> 00:35:10,839
it haven't<font color="#CCCCCC"> been bypassed and everything</font>

789
00:35:07,240 --> 00:35:13,990
is good<font color="#CCCCCC"> so in the second step I'm going</font>

790
00:35:10,839 --> 00:35:16,570
<font color="#E5E5E5">to change the content type from URL</font>

791
00:35:13,990 --> 00:35:19,419
encoded to<font color="#E5E5E5"> multi-part standard</font>

792
00:35:16,570 --> 00:35:21,640
everything should<font color="#E5E5E5"> work fine and all the</font>

793
00:35:19,420 --> 00:35:25,480
web servers<font color="#E5E5E5"> should support it except</font>

794
00:35:21,640 --> 00:35:27,970
<font color="#CCCCCC">Apache Tomcat</font><font color="#E5E5E5"> and it should be fine</font>

795
00:35:25,480 --> 00:35:30,070
so for this example<font color="#E5E5E5"> that</font><font color="#CCCCCC"> I have oh yes</font>

796
00:35:27,970 --> 00:35:33,069
and a space so this is the content type

797
00:35:30,070 --> 00:35:35,859
<font color="#E5E5E5">URL encoded</font><font color="#CCCCCC"> I have just</font><font color="#E5E5E5"> changed this</font>

798
00:35:33,070 --> 00:35:37,750
using multi-part form data<font color="#E5E5E5"> and boundary</font>

799
00:35:35,859 --> 00:35:39,369
<font color="#E5E5E5">so you can just embarr so you can just</font>

800
00:35:37,750 --> 00:35:42,430
<font color="#CCCCCC">right-click change the content type it's</font>

801
00:35:39,369 --> 00:35:44,470
very easy<font color="#E5E5E5"> to do</font><font color="#CCCCCC"> that still</font><font color="#E5E5E5"> because this</font>

802
00:35:42,430 --> 00:35:46,710
is quite a standard<font color="#E5E5E5"> it's being blocked</font>

803
00:35:44,470 --> 00:35:49,810
<font color="#E5E5E5">by</font>

804
00:35:46,710 --> 00:35:51,520
now from this<font color="#E5E5E5"> point it becomes</font>

805
00:35:49,810 --> 00:35:54,190
<font color="#CCCCCC">interesting</font><font color="#E5E5E5"> now I'm going to remove</font>

806
00:35:51,520 --> 00:35:57,940
<font color="#E5E5E5">unnecessary parts that web servers don't</font>

807
00:35:54,190 --> 00:36:01,180
need basically to understand a post

808
00:35:57,940 --> 00:36:02,890
request on our yes<font color="#CCCCCC"> I should say oh yes</font>

809
00:36:01,180 --> 00:36:06,460
<font color="#E5E5E5">doesn't need these some other web</font>

810
00:36:02,890 --> 00:36:08,410
servers have other behaviors<font color="#E5E5E5"> so in here</font>

811
00:36:06,460 --> 00:36:11,560
what<font color="#E5E5E5"> I'm</font><font color="#CCCCCC"> going to do</font><font color="#E5E5E5"> I'm going</font><font color="#CCCCCC"> to</font><font color="#E5E5E5"> remove</font>

812
00:36:08,410 --> 00:36:14,520
these highlighted<font color="#E5E5E5"> in red</font><font color="#CCCCCC"> character</font><font color="#E5E5E5"> so</font><font color="#CCCCCC"> -</font>

813
00:36:11,560 --> 00:36:19,210
<font color="#E5E5E5">- characters here here here</font><font color="#CCCCCC"> and also</font>

814
00:36:14,520 --> 00:36:20,920
after the last boundary<font color="#E5E5E5"> it's not a</font>

815
00:36:19,210 --> 00:36:23,320
standard<font color="#E5E5E5"> but I'm doing it because</font><font color="#CCCCCC"> I yes</font>

816
00:36:20,920 --> 00:36:26,620
doesn't<font color="#E5E5E5"> care</font><font color="#CCCCCC"> and then I'm</font><font color="#E5E5E5"> also removing</font>

817
00:36:23,320 --> 00:36:29,160
this form data just by doing that

818
00:36:26,620 --> 00:36:32,200
<font color="#CCCCCC">CloudFlare</font><font color="#E5E5E5"> an Akuma have been bypassed</font>

819
00:36:29,160 --> 00:36:35,440
immediately yes<font color="#E5E5E5"> in capsule</font><font color="#CCCCCC"> or haven't</font>

820
00:36:32,200 --> 00:36:38,080
been<font color="#CCCCCC"> by</font><font color="#E5E5E5"> us so they had some protections</font>

821
00:36:35,440 --> 00:36:40,540
in place to know about<font color="#E5E5E5"> this but this</font>

822
00:36:38,080 --> 00:36:42,130
can't be parsed by<font color="#E5E5E5"> those two so they</font>

823
00:36:40,540 --> 00:36:45,940
have been bought us was very<font color="#E5E5E5"> easy</font><font color="#CCCCCC"> bought</font>

824
00:36:42,130 --> 00:36:48,070
us<font color="#E5E5E5"> so now I'm going to add some unused</font>

825
00:36:45,940 --> 00:36:49,960
<font color="#E5E5E5">part or unnecessary parts to the same</font>

826
00:36:48,070 --> 00:36:52,990
<font color="#E5E5E5">request to see what would happen</font><font color="#CCCCCC"> if I</font>

827
00:36:49,960 --> 00:36:56,530
confuse the vast even further to see<font color="#CCCCCC"> if</font>

828
00:36:52,990 --> 00:36:59,259
I can bypass them completely<font color="#CCCCCC"> in here</font>

829
00:36:56,530 --> 00:37:01,300
<font color="#E5E5E5">this was the previous</font><font color="#CCCCCC"> request</font><font color="#E5E5E5"> that I had</font>

830
00:36:59,260 --> 00:37:03,460
<font color="#CCCCCC">I've already bypassed two of the buffs</font>

831
00:37:01,300 --> 00:37:07,240
fair enough but<font color="#E5E5E5"> I'm now going</font><font color="#CCCCCC"> to add</font>

832
00:37:03,460 --> 00:37:10,330
more<font color="#E5E5E5"> useless parts to it</font><font color="#CCCCCC"> as you</font><font color="#E5E5E5"> can</font><font color="#CCCCCC"> see</font>

833
00:37:07,240 --> 00:37:12,819
<font color="#CCCCCC">of I have added</font><font color="#E5E5E5"> an additional boundary</font>

834
00:37:10,330 --> 00:37:15,640
that<font color="#CCCCCC"> is not needed</font><font color="#E5E5E5"> highest ignores</font><font color="#CCCCCC"> that</font>

835
00:37:12,820 --> 00:37:18,340
I've also<font color="#CCCCCC"> added these green parts here</font>

836
00:37:15,640 --> 00:37:20,379
as well as this<font color="#E5E5E5"> filename here the space</font>

837
00:37:18,340 --> 00:37:22,150
after<font color="#E5E5E5"> the file name was actually</font>

838
00:37:20,380 --> 00:37:24,520
important because<font color="#E5E5E5"> if you don't do that</font>

839
00:37:22,150 --> 00:37:27,160
<font color="#E5E5E5">aspx is this is a file upload so it's</font>

840
00:37:24,520 --> 00:37:30,400
not going to be a request form a valid

841
00:37:27,160 --> 00:37:32,799
<font color="#E5E5E5">post request so for that reason</font>

842
00:37:30,400 --> 00:37:34,690
oh yes<font color="#E5E5E5"> still sees this as a valid post</font>

843
00:37:32,800 --> 00:37:37,420
request and it ignores<font color="#CCCCCC"> the file name</font>

844
00:37:34,690 --> 00:37:39,910
<font color="#E5E5E5">however at this point all</font><font color="#CCCCCC"> the VAS</font><font color="#E5E5E5"> that I</font>

845
00:37:37,420 --> 00:37:43,180
was testing have been bypassed<font color="#E5E5E5"> which was</font>

846
00:37:39,910 --> 00:37:46,960
quite<font color="#E5E5E5"> cool but you may say two of those</font>

847
00:37:43,180 --> 00:37:48,580
valves have already been bypassed so for

848
00:37:46,960 --> 00:37:50,080
that reason I'm<font color="#E5E5E5"> going to jump from a</font>

849
00:37:48,580 --> 00:37:54,069
step<font color="#CCCCCC"> two to a step</font><font color="#E5E5E5"> four</font>

850
00:37:50,080 --> 00:37:56,290
so after I change the URL encoded to

851
00:37:54,070 --> 00:37:58,680
multi-part I'm not going to just add

852
00:37:56,290 --> 00:38:03,220
<font color="#CCCCCC">unnecessary parts without</font>

853
00:37:58,680 --> 00:38:06,220
removing any any actually any<font color="#CCCCCC"> parts that</font>

854
00:38:03,220 --> 00:38:07,870
<font color="#CCCCCC">was not used</font><font color="#E5E5E5"> so</font><font color="#CCCCCC"> I'm just adding a stuff</font>

855
00:38:06,220 --> 00:38:11,049
<font color="#E5E5E5">to the same request that I had</font>

856
00:38:07,870 --> 00:38:11,589
previously<font color="#E5E5E5"> just by doing</font><font color="#CCCCCC"> that in capsule</font>

857
00:38:11,050 --> 00:38:14,700
<font color="#CCCCCC">and akamai</font>

858
00:38:11,590 --> 00:38:18,300
have been bypassed<font color="#CCCCCC"> this time</font><font color="#E5E5E5"> CloudFlare</font>

859
00:38:14,700 --> 00:38:23,319
actually wasn't<font color="#CCCCCC"> bypassing</font><font color="#E5E5E5"> so that as it</font>

860
00:38:18,300 --> 00:38:29,520
<font color="#CCCCCC">saw</font><font color="#E5E5E5"> that as a as an</font><font color="#CCCCCC"> as a dangerous</font><font color="#E5E5E5"> input</font>

861
00:38:23,320 --> 00:38:32,620
so<font color="#E5E5E5"> still there and no just basically</font>

862
00:38:29,520 --> 00:38:35,160
<font color="#E5E5E5">okay I only have five minutes I know so</font>

863
00:38:32,620 --> 00:38:38,290
I'm gonna finish this early so if I just

864
00:38:35,160 --> 00:38:40,089
encode the same thing like if I applied

865
00:38:38,290 --> 00:38:42,610
<font color="#CCCCCC">request encoding on the request that I</font>

866
00:38:40,090 --> 00:38:44,560
had it has<font color="#E5E5E5"> already bypass all the valves</font>

867
00:38:42,610 --> 00:38:46,780
<font color="#E5E5E5">I know the</font><font color="#CCCCCC"> request encoding on its own</font>

868
00:38:44,560 --> 00:38:49,660
can bypass all<font color="#CCCCCC"> the vas as well but</font><font color="#E5E5E5"> if I</font>

869
00:38:46,780 --> 00:38:52,090
do<font color="#E5E5E5"> that just</font><font color="#CCCCCC"> that</font><font color="#E5E5E5"> this was the first</font>

870
00:38:49,660 --> 00:38:55,120
request<font color="#E5E5E5"> that I had and this request is</font>

871
00:38:52,090 --> 00:38:57,250
<font color="#CCCCCC">actually equal</font><font color="#E5E5E5"> to the request that I had</font>

872
00:38:55,120 --> 00:38:59,080
<font color="#E5E5E5">initially and it will go through</font><font color="#CCCCCC"> all the</font>

873
00:38:57,250 --> 00:39:01,800
baths and<font color="#CCCCCC"> boy pass everything and</font>

874
00:38:59,080 --> 00:39:05,140
nothing can understand it except OS and

875
00:39:01,800 --> 00:39:07,600
aspx page that<font color="#E5E5E5"> I had there and it's a</font>

876
00:39:05,140 --> 00:39:10,870
valid sequel injection<font color="#E5E5E5"> and it's it's</font>

877
00:39:07,600 --> 00:39:13,330
fine<font color="#E5E5E5"> it does work</font><font color="#CCCCCC"> so lesson learned</font><font color="#E5E5E5"> here</font>

878
00:39:10,870 --> 00:39:16,779
just quickly go through them<font color="#E5E5E5"> so if</font>

879
00:39:13,330 --> 00:39:18,850
you're using vats in the cloud<font color="#E5E5E5"> just do</font>

880
00:39:16,780 --> 00:39:21,430
something so using IP address directly

881
00:39:18,850 --> 00:39:26,200
can't bypass it<font color="#E5E5E5"> also don't support HTTP</font>

882
00:39:21,430 --> 00:39:30,730
version 0.9<font color="#E5E5E5"> at all</font><font color="#CCCCCC"> do not accept</font><font color="#E5E5E5"> that</font>

883
00:39:26,200 --> 00:39:33,460
<font color="#E5E5E5">only accept known character sets also</font>

884
00:39:30,730 --> 00:39:36,310
discard malformed<font color="#E5E5E5"> HTTP requests don't</font>

885
00:39:33,460 --> 00:39:39,100
accept invalid ones and also<font color="#CCCCCC"> if you can</font>

886
00:39:36,310 --> 00:39:41,290
<font color="#E5E5E5">afford using a voiceless buff then use</font>

887
00:39:39,100 --> 00:39:44,830
that<font color="#E5E5E5"> it's it's the best and remember to</font>

888
00:39:41,290 --> 00:39:46,930
white lace<font color="#CCCCCC"> pen Tessa's IP</font><font color="#E5E5E5"> address during</font>

889
00:39:44,830 --> 00:39:48,790
an assessment<font color="#E5E5E5"> and remove remove that</font>

890
00:39:46,930 --> 00:39:51,399
afterwards because if you<font color="#E5E5E5"> don't do that</font>

891
00:39:48,790 --> 00:39:51,790
you don't<font color="#E5E5E5"> get the value for money that's</font>

892
00:39:51,400 --> 00:39:54,460
<font color="#E5E5E5">it</font>

893
00:39:51,790 --> 00:40:01,808
with that thank you very<font color="#E5E5E5"> much</font>

894
00:39:54,460 --> 00:40:01,809
[Applause]

895
00:40:02,720 --> 00:40:08,598
<font color="#E5E5E5">do we have any questions before we</font><font color="#CCCCCC"> break</font>

896
00:40:06,240 --> 00:40:08,598
<font color="#CCCCCC">for coffee</font>

897
00:40:14,870 --> 00:40:21,950
thanks for a<font color="#E5E5E5"> great talk</font><font color="#CCCCCC"> Suresh</font><font color="#E5E5E5"> obviously</font>

898
00:40:17,630 --> 00:40:24,200
the fact<font color="#CCCCCC"> that some of the cloud woth</font>

899
00:40:21,950 --> 00:40:26,180
<font color="#E5E5E5">providers like</font><font color="#CCCCCC"> CloudFlare leak capsular</font>

900
00:40:24,200 --> 00:40:28,129
behave differently for different tests

901
00:40:26,180 --> 00:40:30,200
<font color="#E5E5E5">have you relayed the results of his</font>

902
00:40:28,130 --> 00:40:33,440
<font color="#E5E5E5">research to them and - they actually</font>

903
00:40:30,200 --> 00:40:35,120
<font color="#E5E5E5">have a way of fixing their rule set to</font>

904
00:40:33,440 --> 00:40:36,860
make sure they catch those<font color="#E5E5E5"> exploits in</font>

905
00:40:35,120 --> 00:40:39,140
<font color="#E5E5E5">the future</font><font color="#CCCCCC"> so basically I</font><font color="#E5E5E5"> send the</font>

906
00:40:36,860 --> 00:40:41,300
resulting<font color="#E5E5E5"> cloud flare and in capsular in</font>

907
00:40:39,140 --> 00:40:43,190
the first place and what I got<font color="#E5E5E5"> was</font><font color="#CCCCCC"> like</font>

908
00:40:41,300 --> 00:40:45,320
this is very<font color="#E5E5E5"> standard to bypass</font>

909
00:40:43,190 --> 00:40:47,600
blacklist<font color="#E5E5E5"> buffs and it is quite normal</font>

910
00:40:45,320 --> 00:40:49,310
<font color="#E5E5E5">every now and then we will be bypassed</font>

911
00:40:47,600 --> 00:40:51,290
<font color="#CCCCCC">so then I</font><font color="#E5E5E5"> was like are</font><font color="#CCCCCC"> you</font><font color="#E5E5E5"> going to</font>

912
00:40:49,310 --> 00:40:52,670
patch this and they said yes we<font color="#E5E5E5"> are</font>

913
00:40:51,290 --> 00:40:55,190
going to do<font color="#CCCCCC"> something about</font><font color="#E5E5E5"> it</font><font color="#CCCCCC"> I</font>

914
00:40:52,670 --> 00:40:58,310
reported this basically last year around

915
00:40:55,190 --> 00:41:01,190
<font color="#E5E5E5">the</font><font color="#CCCCCC"> same time as now and our blog post</font>

916
00:40:58,310 --> 00:41:02,750
was published<font color="#E5E5E5"> in</font><font color="#CCCCCC"> September so basically</font>

917
00:41:01,190 --> 00:41:06,610
it's completely public they know about

918
00:41:02,750 --> 00:41:06,610
<font color="#E5E5E5">it they</font><font color="#CCCCCC"> haven't</font><font color="#E5E5E5"> done</font><font color="#CCCCCC"> anything for it so</font>

919
00:41:07,270 --> 00:41:11,020
any more<font color="#E5E5E5"> questions</font>

920
00:41:16,090 --> 00:41:20,080
and<font color="#E5E5E5"> of text for</font><font color="#CCCCCC"> the great presentation</font>

921
00:41:18,430 --> 00:41:22,299
and<font color="#E5E5E5"> the question is</font><font color="#CCCCCC"> under which</font>

922
00:41:20,080 --> 00:41:23,170
conditions<font color="#E5E5E5"> all this test was run because</font>

923
00:41:22,300 --> 00:41:25,840
there's<font color="#E5E5E5"> a different configuration</font>

924
00:41:23,170 --> 00:41:29,200
<font color="#E5E5E5">different rule sets yeah I don't know in</font>

925
00:41:25,840 --> 00:41:31,630
<font color="#E5E5E5">which so so the walkthrough was</font><font color="#CCCCCC"> Ras a</font>

926
00:41:29,200 --> 00:41:34,180
<font color="#CCCCCC">specs</font><font color="#E5E5E5"> but when I was</font><font color="#CCCCCC"> doing</font><font color="#E5E5E5"> my research I</font>

927
00:41:31,630 --> 00:41:36,460
was<font color="#E5E5E5"> I I had those web servers that</font><font color="#CCCCCC"> in</font>

928
00:41:34,180 --> 00:41:38,140
that<font color="#CCCCCC"> table that</font><font color="#E5E5E5"> you saw earlier on the</font>

929
00:41:36,460 --> 00:41:41,260
<font color="#E5E5E5">request encoding of assessing against</font>

930
00:41:38,140 --> 00:41:43,600
those<font color="#CCCCCC"> I have created a github</font><font color="#E5E5E5"> project</font>

931
00:41:41,260 --> 00:41:45,160
called HTTP ninja if actually if you go

932
00:41:43,600 --> 00:41:47,920
to http the ninja<font color="#CCCCCC"> website you will</font><font color="#E5E5E5"> be</font>

933
00:41:45,160 --> 00:41:50,109
redirected<font color="#E5E5E5"> to that</font><font color="#CCCCCC"> I've forced a</font><font color="#E5E5E5"> lot of</font>

934
00:41:47,920 --> 00:41:53,110
web<font color="#E5E5E5"> servers and things like that but it</font>

935
00:41:50,110 --> 00:41:54,460
sees still in progress<font color="#CCCCCC"> so if you go</font>

936
00:41:53,110 --> 00:41:57,400
<font color="#E5E5E5">there you</font><font color="#CCCCCC"> will see</font><font color="#E5E5E5"> a table of all</font>

937
00:41:54,460 --> 00:42:00,160
different behaviors<font color="#E5E5E5"> a lot more than you</font>

938
00:41:57,400 --> 00:42:02,350
saw here that<font color="#E5E5E5"> how they basically act</font>

939
00:42:00,160 --> 00:42:04,270
differently<font color="#E5E5E5"> and depends</font><font color="#CCCCCC"> on what you have</font>

940
00:42:02,350 --> 00:42:06,370
<font color="#CCCCCC">you</font><font color="#E5E5E5"> need to</font><font color="#CCCCCC"> basically</font><font color="#E5E5E5"> decide what you</font>

941
00:42:04,270 --> 00:42:09,400
want to<font color="#E5E5E5"> do the question is about the</font>

942
00:42:06,370 --> 00:42:11,920
configuration<font color="#CCCCCC"> of the work itself okay</font>

943
00:42:09,400 --> 00:42:14,500
and there is all the rules<font color="#E5E5E5"> and</font><font color="#CCCCCC"> your</font>

944
00:42:11,920 --> 00:42:16,570
<font color="#E5E5E5">enable so there were all defaults so I</font>

945
00:42:14,500 --> 00:42:20,140
did<font color="#CCCCCC"> not add anything to them and I did</font>

946
00:42:16,570 --> 00:42:31,830
<font color="#E5E5E5">not remove anything from them so that's</font>

947
00:42:20,140 --> 00:42:31,830
right any more questions<font color="#CCCCCC"> okay</font>

948
00:42:31,940 --> 00:42:35,940
[Applause]

