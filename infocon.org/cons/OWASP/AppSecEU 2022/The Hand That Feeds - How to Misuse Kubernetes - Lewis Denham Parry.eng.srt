1
00:00:03,959 --> 00:00:06,660
hi everybody and welcome to the deaf

2
00:00:06,660 --> 00:00:09,480
second strike my name is Marsh the fever

3
00:00:09,480 --> 00:00:11,880
and I'm a volunteer at the oasu

4
00:00:11,880 --> 00:00:14,219
community and I'll be moderating this

5
00:00:14,219 --> 00:00:16,560
session so during the next 45 minutes

6
00:00:16,560 --> 00:00:19,619
we'll hear Lewis Denham Perry present

7
00:00:19,619 --> 00:00:21,720
the hand that feeds how to misuse

8
00:00:21,720 --> 00:00:25,080
kubernetes so please submit any

9
00:00:25,080 --> 00:00:27,599
questions you have during the session in

10
00:00:27,599 --> 00:00:30,599
the Q a tab and I'll be asking our

11
00:00:30,599 --> 00:00:33,360
speaker the questions in the in the last

12
00:00:33,360 --> 00:00:35,340
10 minutes of the session

13
00:00:35,340 --> 00:00:38,280
so let me introduce Lewis orchestrates

14
00:00:38,280 --> 00:00:40,500
container by day and and hacks them by

15
00:00:40,500 --> 00:00:43,860
night he has Consultants consulted in

16
00:00:43,860 --> 00:00:45,719
many roles from developing software on

17
00:00:45,719 --> 00:00:47,340
bare metal to building the

18
00:00:47,340 --> 00:00:49,079
infrastructure in the cloud

19
00:00:49,079 --> 00:00:51,120
he's the head of training at control

20
00:00:51,120 --> 00:00:53,520
plane assisting others in understanding

21
00:00:53,520 --> 00:00:56,219
and implementing best practices and has

22
00:00:56,219 --> 00:00:58,020
presented talks and a workshop at

23
00:00:58,020 --> 00:01:00,360
numerous International conferences from

24
00:01:00,360 --> 00:01:03,899
cubecon sense b-sides to local meetups

25
00:01:03,899 --> 00:01:07,500
and Wells with that I'll hand over the

26
00:01:07,500 --> 00:01:09,060
world to you Lewis

27
00:01:09,060 --> 00:01:10,680
take it away

28
00:01:10,680 --> 00:01:14,100
yes that's um a great introduction

29
00:01:14,100 --> 00:01:15,720
um and it feels like I wrote back myself

30
00:01:15,720 --> 00:01:19,500
a while back but um yeah it's thank you

31
00:01:19,500 --> 00:01:21,180
everyone for attending today

32
00:01:21,180 --> 00:01:23,520
um hopefully you can see my uh screen as

33
00:01:23,520 --> 00:01:24,360
well

34
00:01:24,360 --> 00:01:26,880
um so I will be talking today about the

35
00:01:26,880 --> 00:01:30,659
hand that feeds how to misuse kubernetes

36
00:01:30,659 --> 00:01:33,540
now whilst I've got your attention here

37
00:01:33,540 --> 00:01:35,579
um some of my favorite speakers that

38
00:01:35,579 --> 00:01:37,560
I've gone to um they start off with a

39
00:01:37,560 --> 00:01:39,299
slide that means a lot of them I'm gonna

40
00:01:39,299 --> 00:01:41,220
go into kubernetes and how we can misuse

41
00:01:41,220 --> 00:01:43,259
it but to begin with I'd also like to

42
00:01:43,259 --> 00:01:46,079
just state that everybody belongs um

43
00:01:46,079 --> 00:01:48,299
I suffer with mental health issues I've

44
00:01:48,299 --> 00:01:50,460
suffered from depression and so

45
00:01:50,460 --> 00:01:51,840
um and so I just want to take this

46
00:01:51,840 --> 00:01:53,399
opportunity just to say if anyone else

47
00:01:53,399 --> 00:01:55,740
is in that same boat you're not alone go

48
00:01:55,740 --> 00:01:57,540
find some resources there's this great

49
00:01:57,540 --> 00:01:59,100
uh mental health factors that I've met

50
00:01:59,100 --> 00:02:00,659
at a conference a couple of months ago

51
00:02:00,659 --> 00:02:02,700
in America and they do some great

52
00:02:02,700 --> 00:02:04,560
initiatives there but

53
00:02:04,560 --> 00:02:07,500
yeah and equally with this honesty

54
00:02:07,500 --> 00:02:09,239
aspect right now

55
00:02:09,239 --> 00:02:12,420
um I wasn't very well yesterday and um

56
00:02:12,420 --> 00:02:14,700
yeah I understand that we've all been in

57
00:02:14,700 --> 00:02:16,260
this uh issue for the last couple of

58
00:02:16,260 --> 00:02:17,599
years where

59
00:02:17,599 --> 00:02:19,980
the first is it going to be that thing

60
00:02:19,980 --> 00:02:22,500
and it isn't at the moment I think it's

61
00:02:22,500 --> 00:02:24,599
food poisoning which hasn't been great

62
00:02:24,599 --> 00:02:26,520
um so leading up to today

63
00:02:26,520 --> 00:02:29,580
um I was very anxious at about 2 A.M 3

64
00:02:29,580 --> 00:02:31,319
A.M 4 a.m this morning as I couldn't

65
00:02:31,319 --> 00:02:33,420
sleep and I had a fever

66
00:02:33,420 --> 00:02:35,580
um so hopefully today please

67
00:02:35,580 --> 00:02:37,200
um I'm going to try and take it a little

68
00:02:37,200 --> 00:02:38,280
bit slowly

69
00:02:38,280 --> 00:02:39,959
um please ask some questions I'm more

70
00:02:39,959 --> 00:02:42,599
than happy to do my best to answer them

71
00:02:42,599 --> 00:02:44,040
um I've currently got some great

72
00:02:44,040 --> 00:02:46,260
medication uh which says that I

73
00:02:46,260 --> 00:02:47,700
shouldn't be operating heavy machinery

74
00:02:47,700 --> 00:02:50,280
so I've taken my laptop instead of my

75
00:02:50,280 --> 00:02:52,200
tower to walk through today so hopefully

76
00:02:52,200 --> 00:02:53,760
fingers crossed we'll get through this

77
00:02:53,760 --> 00:02:56,040
but yeah let's have a look

78
00:02:56,040 --> 00:03:00,300
now I this for me is what it's all about

79
00:03:00,300 --> 00:03:02,519
and this is my favorite slide that I've

80
00:03:02,519 --> 00:03:03,720
made for this talk

81
00:03:03,720 --> 00:03:06,780
um now the hand that feeds

82
00:03:06,780 --> 00:03:08,099
um incidentally if you're looking at

83
00:03:08,099 --> 00:03:09,599
getting into speaking

84
00:03:09,599 --> 00:03:10,260
um

85
00:03:10,260 --> 00:03:13,319
what I did and my creative process has

86
00:03:13,319 --> 00:03:16,140
been to attach to songs and so uh this

87
00:03:16,140 --> 00:03:18,060
is a song by Nine Inch Nails

88
00:03:18,060 --> 00:03:19,860
um called The Hand That Feeds but that's

89
00:03:19,860 --> 00:03:21,900
what I think kubernetes is

90
00:03:21,900 --> 00:03:24,480
um kubernetes um we declare the state

91
00:03:24,480 --> 00:03:26,400
that we want to be running across our

92
00:03:26,400 --> 00:03:29,280
clusters and then kubernetes feeds us

93
00:03:29,280 --> 00:03:31,319
these workloads and so we're dependent

94
00:03:31,319 --> 00:03:34,019
on that but what happens when we bite

95
00:03:34,019 --> 00:03:35,700
the hand that feeds how can we

96
00:03:35,700 --> 00:03:38,340
manipulate kubernetes to be able to run

97
00:03:38,340 --> 00:03:40,319
workloads that might be malicious or

98
00:03:40,319 --> 00:03:42,480
might be give us some pivot Points and

99
00:03:42,480 --> 00:03:44,459
so forth

100
00:03:44,459 --> 00:03:46,080
right so even though I've had this

101
00:03:46,080 --> 00:03:47,519
introduction

102
00:03:47,519 --> 00:03:50,040
um I've I am Lewis

103
00:03:50,040 --> 00:03:52,140
um you can find me at Dan and Parry um I

104
00:03:52,140 --> 00:03:53,879
also work for control plane as a head of

105
00:03:53,879 --> 00:03:54,959
training

106
00:03:54,959 --> 00:03:56,640
um I would say that control plane first

107
00:03:56,640 --> 00:03:59,400
started off um as curators of gifts and

108
00:03:59,400 --> 00:04:02,040
then we pivoted into Dev stack UPS

109
00:04:02,040 --> 00:04:03,959
um but as a company we work in the cloud

110
00:04:03,959 --> 00:04:06,120
native space and we work out securing it

111
00:04:06,120 --> 00:04:08,459
so we do everything from consultancy to

112
00:04:08,459 --> 00:04:10,319
training to pen testing

113
00:04:10,319 --> 00:04:11,879
um if any of that is of interest to you

114
00:04:11,879 --> 00:04:13,739
whether you want to jump on board or if

115
00:04:13,739 --> 00:04:14,879
you want to help us solve some difficult

116
00:04:14,879 --> 00:04:17,820
problems and please drop me a message

117
00:04:17,820 --> 00:04:20,399
under this this is my branding slide for

118
00:04:20,399 --> 00:04:22,019
the company as well control plane so

119
00:04:22,019 --> 00:04:23,460
this was an at another conference as

120
00:04:23,460 --> 00:04:24,360
well

121
00:04:24,360 --> 00:04:26,520
um we like just to have these talks we

122
00:04:26,520 --> 00:04:27,900
like to talk about what we're doing and

123
00:04:27,900 --> 00:04:29,580
how we're doing things

124
00:04:29,580 --> 00:04:31,259
um and this was my marketing idea to put

125
00:04:31,259 --> 00:04:34,680
our flashy sticker outside of a hotel

126
00:04:34,680 --> 00:04:36,960
now you might already know some of us

127
00:04:36,960 --> 00:04:40,620
from our book hacking kubernetes so uh

128
00:04:40,620 --> 00:04:42,479
there's Andy and Michael

129
00:04:42,479 --> 00:04:44,820
um they were the core authors for that

130
00:04:44,820 --> 00:04:47,340
um it's available online in all your

131
00:04:47,340 --> 00:04:48,840
favorite bookstores everywhere you want

132
00:04:48,840 --> 00:04:50,820
to go and you can get a free copy of it

133
00:04:50,820 --> 00:04:52,440
via that website

134
00:04:52,440 --> 00:04:54,780
um and in that book it was a really

135
00:04:54,780 --> 00:04:57,600
great experience for us and that's

136
00:04:57,600 --> 00:04:59,400
we put our best foot forward saying

137
00:04:59,400 --> 00:05:01,080
right this is what we deem to be

138
00:05:01,080 --> 00:05:03,360
attacking and defending kubernetes and

139
00:05:03,360 --> 00:05:04,800
we reached out to other people within

140
00:05:04,800 --> 00:05:06,540
the industry and they came back and this

141
00:05:06,540 --> 00:05:08,820
really opened up our eyes as well

142
00:05:08,820 --> 00:05:10,380
um there's such great content in there

143
00:05:10,380 --> 00:05:12,720
now usually the office sign up my name

144
00:05:12,720 --> 00:05:14,639
is in the book so if you do purchase a

145
00:05:14,639 --> 00:05:16,740
book um if you see me in real life I'm

146
00:05:16,740 --> 00:05:18,240
more than happy to highlight my name if

147
00:05:18,240 --> 00:05:19,320
you so wish

148
00:05:19,320 --> 00:05:21,360
now as you've probably been aware I've

149
00:05:21,360 --> 00:05:23,220
got some terrible dad jokes on the go so

150
00:05:23,220 --> 00:05:25,440
we'll just do one last one

151
00:05:25,440 --> 00:05:28,320
so could anyone tell me what this is

152
00:05:28,320 --> 00:05:30,419
um so we can see that there's someone

153
00:05:30,419 --> 00:05:31,740
going to a store there and there's

154
00:05:31,740 --> 00:05:33,419
another person

155
00:05:33,419 --> 00:05:35,520
now this is a little bit difficult as

156
00:05:35,520 --> 00:05:37,320
well to do because at this moment in

157
00:05:37,320 --> 00:05:39,720
time I think I can see the chat on my

158
00:05:39,720 --> 00:05:43,259
phone but um hopefully

159
00:05:43,259 --> 00:05:45,960
if this is not a line incidentally in

160
00:05:45,960 --> 00:05:47,820
the UK we don't call this a line we call

161
00:05:47,820 --> 00:05:49,620
it something else

162
00:05:49,620 --> 00:05:53,820
so this is what I call Q beer net tease

163
00:05:53,820 --> 00:05:56,520
um now

164
00:05:56,520 --> 00:05:58,680
yes keep an Aziz has been around for a

165
00:05:58,680 --> 00:06:00,240
while um and this is what we're going to

166
00:06:00,240 --> 00:06:01,860
be talking about today and as I said

167
00:06:01,860 --> 00:06:04,919
it's it's this basis of fighting the

168
00:06:04,919 --> 00:06:06,720
hand that feeds now

169
00:06:06,720 --> 00:06:08,699
as head of training

170
00:06:08,699 --> 00:06:11,400
personally I learned best by

171
00:06:11,400 --> 00:06:13,800
working with things and when I say

172
00:06:13,800 --> 00:06:15,720
working really I mean breaking things

173
00:06:15,720 --> 00:06:17,759
and then fixing things

174
00:06:17,759 --> 00:06:20,039
um I'm very much a Hands-On person

175
00:06:20,039 --> 00:06:21,720
I really wish I could be the other way

176
00:06:21,720 --> 00:06:23,039
around where I could read something and

177
00:06:23,039 --> 00:06:25,139
understand it then I go into it but in

178
00:06:25,139 --> 00:06:27,180
all honesty I'm someone who I just want

179
00:06:27,180 --> 00:06:29,520
to hack away at something break it and

180
00:06:29,520 --> 00:06:30,900
then I read about it and fully

181
00:06:30,900 --> 00:06:32,580
understand it

182
00:06:32,580 --> 00:06:35,160
so with our training and we do CTF

183
00:06:35,160 --> 00:06:37,199
exercises uh captured Flags which I

184
00:06:37,199 --> 00:06:39,360
assume you're aware of but um capture

185
00:06:39,360 --> 00:06:41,400
flags for us it's gamification of its

186
00:06:41,400 --> 00:06:42,300
learning

187
00:06:42,300 --> 00:06:44,160
um a little bit of a brief history for

188
00:06:44,160 --> 00:06:45,960
me I started off as a web developer as I

189
00:06:45,960 --> 00:06:47,639
was introduced by last

190
00:06:47,639 --> 00:06:49,440
um and security was a terrifying concept

191
00:06:49,440 --> 00:06:52,020
to me um the reason it terrified me is

192
00:06:52,020 --> 00:06:54,600
because I found it difficult how to know

193
00:06:54,600 --> 00:06:56,340
when I've done a good job and if you

194
00:06:56,340 --> 00:06:57,900
just saw the previous threat modeling

195
00:06:57,900 --> 00:06:59,699
talk well that's one of the core things

196
00:06:59,699 --> 00:07:02,120
how do we know we've done a good job

197
00:07:02,120 --> 00:07:04,500
at this time and linked to my mental

198
00:07:04,500 --> 00:07:07,319
health I had to reevaluate what I was

199
00:07:07,319 --> 00:07:08,880
doing for my career and I realized I

200
00:07:08,880 --> 00:07:12,060
like solving problems now and problems

201
00:07:12,060 --> 00:07:13,860
are usually associated with puzzles and

202
00:07:13,860 --> 00:07:16,080
that's what I feel this is so with

203
00:07:16,080 --> 00:07:18,060
capture Flags they give us defined

204
00:07:18,060 --> 00:07:20,460
boundaries and they give us puzzles that

205
00:07:20,460 --> 00:07:22,319
we can work with so what we do at

206
00:07:22,319 --> 00:07:23,759
control plane is is that we create

207
00:07:23,759 --> 00:07:25,220
capture flag

208
00:07:25,220 --> 00:07:28,080
competitions but we also use them for

209
00:07:28,080 --> 00:07:30,120
training and the basis of this is is

210
00:07:30,120 --> 00:07:31,740
that if I teach you how to hack

211
00:07:31,740 --> 00:07:33,599
kubernetes I'm going to have your

212
00:07:33,599 --> 00:07:35,099
attention and then if I have your

213
00:07:35,099 --> 00:07:36,060
attention then we can talk about

214
00:07:36,060 --> 00:07:38,220
defending it it's a lot easier for me to

215
00:07:38,220 --> 00:07:39,840
be able to protect and then figure out

216
00:07:39,840 --> 00:07:42,360
how to defend than the other way around

217
00:07:42,360 --> 00:07:44,699
so with this this is something that we

218
00:07:44,699 --> 00:07:46,800
uh do uh for a number of companies

219
00:07:46,800 --> 00:07:48,840
um if this is of interest to you we've

220
00:07:48,840 --> 00:07:51,300
got a lot of backlog of scenarios um

221
00:07:51,300 --> 00:07:53,220
that I'm more than happy to share with

222
00:07:53,220 --> 00:07:53,940
you

223
00:07:53,940 --> 00:07:55,560
um we've been doing this at security

224
00:07:55,560 --> 00:07:57,599
days kubecon for the last three years

225
00:07:57,599 --> 00:08:00,360
now we'll also be doing another CTF um

226
00:08:00,360 --> 00:08:02,580
competition in Detroit later in this

227
00:08:02,580 --> 00:08:05,099
year so if if these are of interest to

228
00:08:05,099 --> 00:08:06,900
you please reach out to me um on

229
00:08:06,900 --> 00:08:08,940
whatever channel it's quite easy to find

230
00:08:08,940 --> 00:08:11,460
me on my internet on my internet on our

231
00:08:11,460 --> 00:08:13,860
Internet thanks to my surname um there's

232
00:08:13,860 --> 00:08:15,900
only one Lewiston Parry at this moment

233
00:08:15,900 --> 00:08:17,940
in time so please feel free to reach out

234
00:08:17,940 --> 00:08:19,379
and I'm more than happy to send you some

235
00:08:19,379 --> 00:08:21,479
credentials over an insecured path to

236
00:08:21,479 --> 00:08:23,460
give you these SSH credentials and then

237
00:08:23,460 --> 00:08:26,960
you can attack some clusters

238
00:08:27,360 --> 00:08:29,280
so let's just have a look here this is

239
00:08:29,280 --> 00:08:31,379
you might attack framework by Microsoft

240
00:08:31,379 --> 00:08:33,360
uh looking into some of the uh

241
00:08:33,360 --> 00:08:35,339
techniques for hacking or attacking

242
00:08:35,339 --> 00:08:36,659
kubernetes

243
00:08:36,659 --> 00:08:39,120
um the main I'm not expecting you to go

244
00:08:39,120 --> 00:08:40,979
through all of these but it is a great

245
00:08:40,979 --> 00:08:43,020
resource to use to understand what we

246
00:08:43,020 --> 00:08:46,500
have now kubernetes is on a four-month

247
00:08:46,500 --> 00:08:48,600
release cycle so every year there's

248
00:08:48,600 --> 00:08:50,339
three new releases

249
00:08:50,339 --> 00:08:51,420
um

250
00:08:51,420 --> 00:08:52,800
the point that I'm trying to make here

251
00:08:52,800 --> 00:08:54,120
is is that we can see depreciated

252
00:08:54,120 --> 00:08:55,500
techniques and there's new techniques

253
00:08:55,500 --> 00:08:57,060
coming each time

254
00:08:57,060 --> 00:08:57,720
um

255
00:08:57,720 --> 00:08:59,640
so we're going to go through a couple of

256
00:08:59,640 --> 00:09:00,899
these today

257
00:09:00,899 --> 00:09:02,640
um and we're going to do a CTF together

258
00:09:02,640 --> 00:09:03,959
so I'm going to show you one of our

259
00:09:03,959 --> 00:09:05,700
scenarios that we do

260
00:09:05,700 --> 00:09:06,779
um and hopefully we can just hack

261
00:09:06,779 --> 00:09:08,220
together so hopefully you can sit back

262
00:09:08,220 --> 00:09:09,360
relax

263
00:09:09,360 --> 00:09:11,760
um and uh yeah I'll try and keep the

264
00:09:11,760 --> 00:09:13,680
chat available on my phone so if you do

265
00:09:13,680 --> 00:09:15,540
have questions please feel free to shout

266
00:09:15,540 --> 00:09:19,500
them out um go from there cool

267
00:09:19,500 --> 00:09:21,899
so section zero always start with zero

268
00:09:21,899 --> 00:09:25,519
our DIY bug bouncing program

269
00:09:25,740 --> 00:09:29,339
no hopefully you this is a beauty of

270
00:09:29,339 --> 00:09:31,320
virtual conferences it's never a case of

271
00:09:31,320 --> 00:09:32,700
okay at the back of your room can you

272
00:09:32,700 --> 00:09:33,899
hear me or can you see my screen okay

273
00:09:33,899 --> 00:09:35,640
it's like cool hopefully you can see my

274
00:09:35,640 --> 00:09:37,080
shared screen otherwise this is going to

275
00:09:37,080 --> 00:09:39,420
suck for the next half hour or so yeah

276
00:09:39,420 --> 00:09:42,899
but I see it this was a Oh cheers thanks

277
00:09:42,899 --> 00:09:43,860
mate

278
00:09:43,860 --> 00:09:45,540
um so

279
00:09:45,540 --> 00:09:47,880
this was uh one of the CTF scenarios

280
00:09:47,880 --> 00:09:49,380
this was our introduction scenario that

281
00:09:49,380 --> 00:09:51,540
we did for kubecon North America at uh

282
00:09:51,540 --> 00:09:55,140
21. the conference was based in um La so

283
00:09:55,140 --> 00:09:57,240
we took a concept of Hollywood so our

284
00:09:57,240 --> 00:09:59,760
CTF exercises were based on film

285
00:09:59,760 --> 00:10:01,380
um as we go through the CTF challenge

286
00:10:01,380 --> 00:10:03,540
we'll look more as into this influence

287
00:10:03,540 --> 00:10:05,760
from film but here what we can see from

288
00:10:05,760 --> 00:10:07,080
our website is is that we've got a

289
00:10:07,080 --> 00:10:09,660
memory CI CD build system uh where

290
00:10:09,660 --> 00:10:11,940
experiences become memories

291
00:10:11,940 --> 00:10:15,779
which movie could this be so let me just

292
00:10:15,779 --> 00:10:18,300
switch my mouse to my laptop there we go

293
00:10:18,300 --> 00:10:22,260
so I can check the build status and you

294
00:10:22,260 --> 00:10:23,399
can tell this was probably made by

295
00:10:23,399 --> 00:10:24,959
myself because the build system is

296
00:10:24,959 --> 00:10:27,300
currently down which isn't ideal also

297
00:10:27,300 --> 00:10:28,860
why is this perfectly facing on the

298
00:10:28,860 --> 00:10:30,480
internet

299
00:10:30,480 --> 00:10:31,440
um

300
00:10:31,440 --> 00:10:33,540
now so we've had like a build status we

301
00:10:33,540 --> 00:10:34,920
can see well it's down if we look at our

302
00:10:34,920 --> 00:10:36,480
utilities then

303
00:10:36,480 --> 00:10:38,700
um this to me looks like it's offering

304
00:10:38,700 --> 00:10:40,260
some help for

305
00:10:40,260 --> 00:10:40,860
um

306
00:10:40,860 --> 00:10:43,500
for assist admins um to look into what's

307
00:10:43,500 --> 00:10:45,660
happening with our service now with our

308
00:10:45,660 --> 00:10:47,399
utilities I can see that we have a ping

309
00:10:47,399 --> 00:10:49,860
address here so I don't want to use one

310
00:10:49,860 --> 00:10:52,160
password

311
00:10:53,640 --> 00:10:54,959
there we go

312
00:10:54,959 --> 00:10:56,459
um

313
00:10:56,459 --> 00:10:58,980
so I'm just going to Ping 1.1.1.1 and

314
00:10:58,980 --> 00:11:00,360
I'll submit this

315
00:11:00,360 --> 00:11:02,399
if we can see there

316
00:11:02,399 --> 00:11:06,480
um it's it's pre-panded it with ping

317
00:11:06,480 --> 00:11:09,720
hyphen C3 and we can see that we get the

318
00:11:09,720 --> 00:11:12,240
response back from the website

319
00:11:12,240 --> 00:11:15,060
now this is interesting for me and

320
00:11:15,060 --> 00:11:17,040
hopefully

321
00:11:17,040 --> 00:11:18,839
um this might be

322
00:11:18,839 --> 00:11:20,760
um of interest to you especially at the

323
00:11:20,760 --> 00:11:22,380
OAS conference what might have happened

324
00:11:22,380 --> 00:11:23,399
there

325
00:11:23,399 --> 00:11:25,980
so if we have a look here and so I've

326
00:11:25,980 --> 00:11:28,800
pulled up the um developer tools um

327
00:11:28,800 --> 00:11:30,600
again I'm using Chrome at this moment in

328
00:11:30,600 --> 00:11:32,220
time whichever browser you should be

329
00:11:32,220 --> 00:11:35,640
able to follow along with and uh do this

330
00:11:35,640 --> 00:11:38,160
um so if I just refresh this page

331
00:11:38,160 --> 00:11:40,800
I can see that I've got a Diagnostics

332
00:11:40,800 --> 00:11:43,500
PHP command

333
00:11:43,500 --> 00:11:45,360
now this is a beautiful thing that I

334
00:11:45,360 --> 00:11:47,040
have here if I right click on this and I

335
00:11:47,040 --> 00:11:50,100
click copy and copy as curl

336
00:11:50,100 --> 00:11:52,200
I can go to my terminal

337
00:11:52,200 --> 00:11:54,360
and in my terminal I can paste this and

338
00:11:54,360 --> 00:11:56,220
there is a lot that has been pasted in

339
00:11:56,220 --> 00:11:59,579
there but if I hit enter

340
00:11:59,579 --> 00:12:02,040
then I can see the HTML response from

341
00:12:02,040 --> 00:12:04,140
this website again

342
00:12:04,140 --> 00:12:05,880
um this is probably why I'm no longer a

343
00:12:05,880 --> 00:12:07,380
front-end developer by the way if you're

344
00:12:07,380 --> 00:12:09,240
looking at the website I've I personally

345
00:12:09,240 --> 00:12:10,620
I think it works really well I think

346
00:12:10,620 --> 00:12:13,680
it's clean and clear and and concise but

347
00:12:13,680 --> 00:12:14,940
yes

348
00:12:14,940 --> 00:12:16,620
um so I can see the HTML response here

349
00:12:16,620 --> 00:12:19,560
so let's have a look back at this um

350
00:12:19,560 --> 00:12:21,240
my previous command for some reason

351
00:12:21,240 --> 00:12:24,019
isn't there

352
00:12:24,480 --> 00:12:27,660
let's just there we go

353
00:12:27,660 --> 00:12:30,180
so here we can see uh what we're sending

354
00:12:30,180 --> 00:12:32,100
across so let's just do a quick test

355
00:12:32,100 --> 00:12:33,720
here and again I'm sorry for the amount

356
00:12:33,720 --> 00:12:35,339
of information it does become clearer in

357
00:12:35,339 --> 00:12:37,200
a moment I swear we will make things

358
00:12:37,200 --> 00:12:39,959
always try harder but to begin with

359
00:12:39,959 --> 00:12:41,399
we're just going to try our proof of

360
00:12:41,399 --> 00:12:43,800
concept so instead of doing the Ping um

361
00:12:43,800 --> 00:12:46,560
and then it's HTML encoded I'm just

362
00:12:46,560 --> 00:12:48,839
going to run who am I

363
00:12:48,839 --> 00:12:50,639
so with this I get a response from the

364
00:12:50,639 --> 00:12:52,320
website but this time I can see that I'm

365
00:12:52,320 --> 00:12:54,300
nginx

366
00:12:54,300 --> 00:12:56,339
so this is allowing me to do an

367
00:12:56,339 --> 00:12:57,899
injection attack on the website where I

368
00:12:57,899 --> 00:13:01,100
can run some commands

369
00:13:03,060 --> 00:13:05,579
and so at doing NLS I can list the files

370
00:13:05,579 --> 00:13:06,540
that I have in the current working

371
00:13:06,540 --> 00:13:07,680
directory

372
00:13:07,680 --> 00:13:09,779
so this is my point of entry into the

373
00:13:09,779 --> 00:13:11,279
system and this is what we're going to

374
00:13:11,279 --> 00:13:13,260
do for our attack

375
00:13:13,260 --> 00:13:14,820
um so our attack in this instance what

376
00:13:14,820 --> 00:13:16,980
we're going to attempt to do is create a

377
00:13:16,980 --> 00:13:19,680
reverse shell so um instead of me having

378
00:13:19,680 --> 00:13:21,480
to constantly do this I'm going to try

379
00:13:21,480 --> 00:13:22,920
harder and I'm going to make it easier

380
00:13:22,920 --> 00:13:25,500
for me to be able to access this website

381
00:13:25,500 --> 00:13:26,940
so there are going to be a couple of

382
00:13:26,940 --> 00:13:28,920
things that we do to achieve this

383
00:13:28,920 --> 00:13:31,620
now first of all um I hope you love bash

384
00:13:31,620 --> 00:13:33,480
I absolutely love bash

385
00:13:33,480 --> 00:13:35,220
um it's

386
00:13:35,220 --> 00:13:37,440
it's just it's everywhere it runs

387
00:13:37,440 --> 00:13:39,180
everything so I'm just going to change

388
00:13:39,180 --> 00:13:41,339
this to uh double quotes now because

389
00:13:41,339 --> 00:13:43,200
what I'm going to do is I'm going to put

390
00:13:43,200 --> 00:13:45,779
in dollar one

391
00:13:45,779 --> 00:13:49,019
so I need it paying equal though so in

392
00:13:49,019 --> 00:13:50,760
doing the double quotes then instead of

393
00:13:50,760 --> 00:13:52,380
having single quotes single quotes are

394
00:13:52,380 --> 00:13:54,480
literal so that would essentially be

395
00:13:54,480 --> 00:13:56,160
sending across dollar one to the website

396
00:13:56,160 --> 00:13:57,300
but what I'm trying to do is I'm trying

397
00:13:57,300 --> 00:13:58,560
to prepare my payload so I'm not

398
00:13:58,560 --> 00:14:00,360
expecting anything to work here and it

399
00:14:00,360 --> 00:14:03,300
does show a lovely PHP error again

400
00:14:03,300 --> 00:14:04,620
giving me some information as to what's

401
00:14:04,620 --> 00:14:06,540
potentially going on there

402
00:14:06,540 --> 00:14:09,180
now here we go this is where with all

403
00:14:09,180 --> 00:14:10,680
the medication I'm currently on to try

404
00:14:10,680 --> 00:14:13,680
and keep going trying to uh pair up on

405
00:14:13,680 --> 00:14:16,260
the interwebs right now so

406
00:14:16,260 --> 00:14:19,260
the command that I'm going for

407
00:14:19,260 --> 00:14:21,060
is that I'm creating a bash function

408
00:14:21,060 --> 00:14:24,000
called exec and then in the exact

409
00:14:24,000 --> 00:14:25,980
function I'm just going to take through

410
00:14:25,980 --> 00:14:28,620
what I previously created there

411
00:14:28,620 --> 00:14:31,380
um and I that the Bang Bang the two

412
00:14:31,380 --> 00:14:32,820
explanation marks that's just going to

413
00:14:32,820 --> 00:14:34,200
be replaced with a previous command that

414
00:14:34,200 --> 00:14:36,000
we ran

415
00:14:36,000 --> 00:14:38,459
so if I run that I don't get a response

416
00:14:38,459 --> 00:14:40,380
but now what I can do is I can run exec

417
00:14:40,380 --> 00:14:41,639
who

418
00:14:41,639 --> 00:14:43,620
am I

419
00:14:43,620 --> 00:14:45,660
and now I get a response from a website

420
00:14:45,660 --> 00:14:47,339
so instead of me having to go back

421
00:14:47,339 --> 00:14:48,779
through that kill command that was

422
00:14:48,779 --> 00:14:50,699
provided from the website this time I've

423
00:14:50,699 --> 00:14:51,899
just made it a bit better so I can just

424
00:14:51,899 --> 00:14:53,399
do exec

425
00:14:53,399 --> 00:14:55,440
um LS

426
00:14:55,440 --> 00:14:57,779
um or I can do exact if I do uh and

427
00:14:57,779 --> 00:14:59,699
double quotes uh

428
00:14:59,699 --> 00:15:02,699
exactly then this is uh giving me some

429
00:15:02,699 --> 00:15:04,079
information back

430
00:15:04,079 --> 00:15:04,740
um

431
00:15:04,740 --> 00:15:06,240
so again we're starting to get

432
00:15:06,240 --> 00:15:08,220
information out of this website but we

433
00:15:08,220 --> 00:15:09,720
can do better

434
00:15:09,720 --> 00:15:11,639
um we can make this experience a little

435
00:15:11,639 --> 00:15:14,100
bit easier for us and that's why we want

436
00:15:14,100 --> 00:15:16,740
to use this reverse shell

437
00:15:16,740 --> 00:15:19,260
so I'm using something locally on my

438
00:15:19,260 --> 00:15:21,060
terminal called TMax that's terminal

439
00:15:21,060 --> 00:15:22,320
multiplexer

440
00:15:22,320 --> 00:15:24,300
um if this is the first time you've seen

441
00:15:24,300 --> 00:15:25,199
this

442
00:15:25,199 --> 00:15:27,180
um definitely have a look into this um

443
00:15:27,180 --> 00:15:29,279
tmux is just invaluable and to be able

444
00:15:29,279 --> 00:15:31,920
to get these uh functions across

445
00:15:31,920 --> 00:15:33,060
um

446
00:15:33,060 --> 00:15:35,639
so I I guess I should ask in the chat

447
00:15:35,639 --> 00:15:39,060
but do people use engrock um so usually

448
00:15:39,060 --> 00:15:41,940
people use engrock to um share say a

449
00:15:41,940 --> 00:15:43,019
website or something that they're

450
00:15:43,019 --> 00:15:44,279
developing on their local machine so

451
00:15:44,279 --> 00:15:45,480
that they can share a port onto their

452
00:15:45,480 --> 00:15:47,100
local machine uh publicly on the

453
00:15:47,100 --> 00:15:48,420
internet

454
00:15:48,420 --> 00:15:51,660
now I'm just preparing our uh I'm

455
00:15:51,660 --> 00:15:54,839
preparing our attack and so at the

456
00:15:54,839 --> 00:15:56,519
moment in time I am at my house which is

457
00:15:56,519 --> 00:15:58,139
a luxury and sometimes when I deliver

458
00:15:58,139 --> 00:16:00,420
this talk I'm on a personal hotspot or

459
00:16:00,420 --> 00:16:02,760
on someone else's Wi-Fi network so using

460
00:16:02,760 --> 00:16:05,339
angrock it gives me this public endpoint

461
00:16:05,339 --> 00:16:06,320
um

462
00:16:06,320 --> 00:16:10,260
zero.tcp.angrove.io 19843

463
00:16:10,260 --> 00:16:12,480
and any traffic that's received on that

464
00:16:12,480 --> 00:16:16,440
will go to my local host on Port 31337

465
00:16:16,440 --> 00:16:19,500
now here I I'm looking at you here now

466
00:16:19,500 --> 00:16:20,820
there's an element of trust for this

467
00:16:20,820 --> 00:16:22,920
please don't deed us but please just

468
00:16:22,920 --> 00:16:25,620
please be kind for the next half hour so

469
00:16:25,620 --> 00:16:27,240
we can go through this because we got

470
00:16:27,240 --> 00:16:28,920
three levels of attacks here if you

471
00:16:28,920 --> 00:16:30,540
start hitting that then it's gonna suck

472
00:16:30,540 --> 00:16:33,060
for me and I'm not I don't think I've

473
00:16:33,060 --> 00:16:34,380
got enough water in me to be able to cry

474
00:16:34,380 --> 00:16:36,139
today so

475
00:16:36,139 --> 00:16:38,459
so we've got this port available now

476
00:16:38,459 --> 00:16:40,139
there's a tool that I'd like to use um

477
00:16:40,139 --> 00:16:42,300
so some people use netcat um but there's

478
00:16:42,300 --> 00:16:43,920
this tool called Penelope and I'll share

479
00:16:43,920 --> 00:16:45,240
a link into it in a slides in a moment

480
00:16:45,240 --> 00:16:50,639
so Penelope is it's like netcat but with

481
00:16:50,639 --> 00:16:52,620
Emojis it manages these reverse shell

482
00:16:52,620 --> 00:16:54,360
sessions for us

483
00:16:54,360 --> 00:16:56,759
so what's happening now is it's using

484
00:16:56,759 --> 00:16:59,579
Penelope and I've given port 31337 on my

485
00:16:59,579 --> 00:17:01,440
local machine Penelope is waiting for

486
00:17:01,440 --> 00:17:04,619
any traffic that is coming to that port

487
00:17:04,619 --> 00:17:07,260
now we want to go back to our uh onto

488
00:17:07,260 --> 00:17:09,059
our hack

489
00:17:09,059 --> 00:17:11,579
so let me just quickly check so we just

490
00:17:11,579 --> 00:17:13,079
got to remember this part

491
00:17:13,079 --> 00:17:15,079
um

492
00:17:15,780 --> 00:17:19,699
let's just copy past of this

493
00:17:23,040 --> 00:17:25,439
I swear sometimes I do type a little bit

494
00:17:25,439 --> 00:17:26,880
faster I'm just leaving that in my

495
00:17:26,880 --> 00:17:28,740
history just for a moment

496
00:17:28,740 --> 00:17:31,799
um so let's try this then let's try an

497
00:17:31,799 --> 00:17:33,900
exact and we're going to run ncat now

498
00:17:33,900 --> 00:17:36,059
we're going to run ncat on that website

499
00:17:36,059 --> 00:17:37,860
that we're looking uh that we're

500
00:17:37,860 --> 00:17:38,820
attacking

501
00:17:38,820 --> 00:17:40,620
so we're going to use end card and then

502
00:17:40,620 --> 00:17:42,600
we're going to use bin shell and we're

503
00:17:42,600 --> 00:17:45,780
going to use uh V hyphen n and we want

504
00:17:45,780 --> 00:17:49,799
to use that previous uh now I'm gonna

505
00:17:49,799 --> 00:17:51,539
have to edit this a little bit

506
00:17:51,539 --> 00:17:53,280
because I don't want to have a colon

507
00:17:53,280 --> 00:17:54,419
there

508
00:17:54,419 --> 00:17:57,179
so I'm running ncat

509
00:17:57,179 --> 00:17:59,220
um and it's going to attempt to connect

510
00:17:59,220 --> 00:18:00,140
onto

511
00:18:00,140 --> 00:18:03,780
0.tcp.ng.io on 19843 now remember then

512
00:18:03,780 --> 00:18:05,340
when that's received on the public

513
00:18:05,340 --> 00:18:07,200
internet that's going to then tunnel it

514
00:18:07,200 --> 00:18:11,940
through onto my local host on Port 31337

515
00:18:12,960 --> 00:18:15,480
so we've got a little bit of an issue

516
00:18:15,480 --> 00:18:17,820
here in that we can see that the name

517
00:18:17,820 --> 00:18:20,600
does not resolve

518
00:18:21,900 --> 00:18:24,360
so

519
00:18:24,360 --> 00:18:27,059
we can either quit and get half an hour

520
00:18:27,059 --> 00:18:28,740
back two days or we'll try a little bit

521
00:18:28,740 --> 00:18:30,120
harder

522
00:18:30,120 --> 00:18:31,799
so what I'm going to do is hopefully

523
00:18:31,799 --> 00:18:33,360
I've still got this in my basement yes

524
00:18:33,360 --> 00:18:36,419
we do so I'm just going to dig on this

525
00:18:36,419 --> 00:18:38,880
and I can see the IP address Associated

526
00:18:38,880 --> 00:18:42,240
of the a record Associated to zero.tcpng

527
00:18:42,240 --> 00:18:44,400
so what we're going to do is we're going

528
00:18:44,400 --> 00:18:46,380
to replace the DNS entry just with the

529
00:18:46,380 --> 00:18:48,720
IP address

530
00:18:48,720 --> 00:18:50,760
because if we can't resolve a DNS entry

531
00:18:50,760 --> 00:18:52,380
well it can hopefully resolve an IP

532
00:18:52,380 --> 00:18:56,059
address so if I run this now

533
00:18:56,100 --> 00:18:57,960
nothing is happening but let's go and

534
00:18:57,960 --> 00:19:00,480
have a look hopefully and yeah ah yes we

535
00:19:00,480 --> 00:19:03,480
can see um so Penelope has got a reverse

536
00:19:03,480 --> 00:19:04,260
shell

537
00:19:04,260 --> 00:19:07,440
um and it's assigned it to session id1

538
00:19:07,440 --> 00:19:09,240
um again Penelope is a great tool

539
00:19:09,240 --> 00:19:11,220
definitely recommended and

540
00:19:11,220 --> 00:19:13,500
I say all this it's mainly the Emojis as

541
00:19:13,500 --> 00:19:16,020
well like anything with Emojis I'm all

542
00:19:16,020 --> 00:19:18,000
in maybe I shouldn't admit that maybe

543
00:19:18,000 --> 00:19:19,799
that's one of the weaknesses of myself I

544
00:19:19,799 --> 00:19:21,720
should not admit but now that I've got

545
00:19:21,720 --> 00:19:24,299
this reverse shell

546
00:19:24,299 --> 00:19:29,539
so I can do an LS I can do an lsla

547
00:19:29,580 --> 00:19:32,820
um yeah and so to point us to what we've

548
00:19:32,820 --> 00:19:35,460
achieved here is is that instead of us

549
00:19:35,460 --> 00:19:37,620
having to go back and do our hack to be

550
00:19:37,620 --> 00:19:40,220
able to let me just get back onto this

551
00:19:40,220 --> 00:19:43,380
instead of us having to use our hack

552
00:19:43,380 --> 00:19:46,620
um but that should still be fine

553
00:19:46,620 --> 00:19:49,260
when we started off and we had this huge

554
00:19:49,260 --> 00:19:51,960
uh huge huge call request

555
00:19:51,960 --> 00:19:54,419
we've tried harder we've made it to a

556
00:19:54,419 --> 00:19:56,340
position

557
00:19:56,340 --> 00:19:58,380
where

558
00:19:58,380 --> 00:20:00,299
we can just run it as if it was on our

559
00:20:00,299 --> 00:20:02,100
local machine and so I Go reverse shell

560
00:20:02,100 --> 00:20:03,720
available there so this is my entry

561
00:20:03,720 --> 00:20:06,059
point now into this website and wherever

562
00:20:06,059 --> 00:20:07,799
this website is running this isn't

563
00:20:07,799 --> 00:20:09,360
incidentally isn't to do anything with

564
00:20:09,360 --> 00:20:10,980
kubernetes at this point but this is

565
00:20:10,980 --> 00:20:12,660
just showing an attack that can happen

566
00:20:12,660 --> 00:20:14,580
one of the feedbacks that we took from

567
00:20:14,580 --> 00:20:16,380
our CTF challenges used to be that well

568
00:20:16,380 --> 00:20:18,840
you're giving me SSH credentials so if

569
00:20:18,840 --> 00:20:20,520
you give me SSH credentials then I'm

570
00:20:20,520 --> 00:20:21,780
fine I just don't give anyone SSH

571
00:20:21,780 --> 00:20:23,760
credentials to my clusters which again

572
00:20:23,760 --> 00:20:26,039
great practice but we wanted to show

573
00:20:26,039 --> 00:20:27,360
this attack

574
00:20:27,360 --> 00:20:30,120
um and how we can mitigate it so let's

575
00:20:30,120 --> 00:20:33,240
just go back to our slidex website

576
00:20:33,240 --> 00:20:35,880
so what do we do and we opened up this

577
00:20:35,880 --> 00:20:37,020
back door

578
00:20:37,020 --> 00:20:38,460
um and we are able to get into the

579
00:20:38,460 --> 00:20:40,919
website so we identified an injection

580
00:20:40,919 --> 00:20:43,620
exploit on our cicd website so remember

581
00:20:43,620 --> 00:20:46,559
our website where memories are made

582
00:20:46,559 --> 00:20:48,059
um and we managed to run the shell

583
00:20:48,059 --> 00:20:50,100
commands via kill

584
00:20:50,100 --> 00:20:52,260
now doing that from terminal we're able

585
00:20:52,260 --> 00:20:54,360
to start playing about with that um and

586
00:20:54,360 --> 00:20:55,740
then we set up a reverse shell using

587
00:20:55,740 --> 00:20:58,080
engrock and Penelope other tools are

588
00:20:58,080 --> 00:20:59,700
available but that's what we've done

589
00:20:59,700 --> 00:21:02,460
here and I think we can all agree as I

590
00:21:02,460 --> 00:21:04,080
alluded to earlier on this one is a job

591
00:21:04,080 --> 00:21:06,600
done well so far so if angrog is New

592
00:21:06,600 --> 00:21:08,580
View then please have a look there and

593
00:21:08,580 --> 00:21:13,159
also uh look at Penelope 2 as well

594
00:21:13,380 --> 00:21:14,940
now this wouldn't be a security talk

595
00:21:14,940 --> 00:21:16,679
without talking about um how do we

596
00:21:16,679 --> 00:21:18,840
prevent this well all our specs factors

597
00:21:18,840 --> 00:21:20,340
practices for reason you're at this

598
00:21:20,340 --> 00:21:21,660
conference today

599
00:21:21,660 --> 00:21:23,220
um we shouldn't be able to send a

600
00:21:23,220 --> 00:21:24,960
request to a website and be able to

601
00:21:24,960 --> 00:21:27,299
remotely run commands uh within wherever

602
00:21:27,299 --> 00:21:28,620
it's running

603
00:21:28,620 --> 00:21:31,380
um so from a container perspective we

604
00:21:31,380 --> 00:21:34,200
want to limit the tools within the image

605
00:21:34,200 --> 00:21:36,240
um so for example we don't necessarily

606
00:21:36,240 --> 00:21:38,159
need to have bash in there and we don't

607
00:21:38,159 --> 00:21:39,299
need to have a shell in there

608
00:21:39,299 --> 00:21:40,740
potentially

609
00:21:40,740 --> 00:21:43,020
um and again probably you've probably

610
00:21:43,020 --> 00:21:44,400
heard more about this in a frat modeling

611
00:21:44,400 --> 00:21:47,159
talk previously if you've got publicly

612
00:21:47,159 --> 00:21:48,600
um if we've got public workloads because

613
00:21:48,600 --> 00:21:50,159
at the end of the day we're on the

614
00:21:50,159 --> 00:21:51,179
internet we need to have some

615
00:21:51,179 --> 00:21:53,280
public-facing workloads

616
00:21:53,280 --> 00:21:55,140
do a threat model like have a look into

617
00:21:55,140 --> 00:21:57,059
do we really need to have bash there can

618
00:21:57,059 --> 00:21:58,620
we can we build this architecture to

619
00:21:58,620 --> 00:22:01,320
prevent to create security and depth

620
00:22:01,320 --> 00:22:03,240
um so that this reverse shell couldn't

621
00:22:03,240 --> 00:22:05,100
have happened

622
00:22:05,100 --> 00:22:06,600
um ultimately as well this could just be

623
00:22:06,600 --> 00:22:09,840
a bit of a nightmare for you or um as

624
00:22:09,840 --> 00:22:11,340
sometimes I know this isn't helpful for

625
00:22:11,340 --> 00:22:12,539
anyone but we could just turn off all

626
00:22:12,539 --> 00:22:14,039
the computers and we could just go back

627
00:22:14,039 --> 00:22:16,500
and live a happy life without having to

628
00:22:16,500 --> 00:22:19,640
Ramona about computers

629
00:22:19,799 --> 00:22:21,539
so we're going to go for a little bit of

630
00:22:21,539 --> 00:22:23,640
a speed run in kubernetes

631
00:22:23,640 --> 00:22:26,820
now to do the speed run I'm going to go

632
00:22:26,820 --> 00:22:30,740
back to our reversal

633
00:22:31,500 --> 00:22:34,080
so I'm just neither I've landed in here

634
00:22:34,080 --> 00:22:36,360
and again I'm

635
00:22:36,360 --> 00:22:38,100
I'm sure if you're a pen tester you're

636
00:22:38,100 --> 00:22:39,120
probably screaming at me right now

637
00:22:39,120 --> 00:22:41,940
saying well IDs it's yeah I get that but

638
00:22:41,940 --> 00:22:43,440
again this is for us this is our

639
00:22:43,440 --> 00:22:45,080
learning tool this is a way to get you

640
00:22:45,080 --> 00:22:48,419
thinking about kubernetes

641
00:22:48,419 --> 00:22:51,360
so once I land in here I might start to

642
00:22:51,360 --> 00:22:52,980
try to find out some information as to

643
00:22:52,980 --> 00:22:54,299
what I have available to me so I can

644
00:22:54,299 --> 00:22:56,159
look at our environment variables and

645
00:22:56,159 --> 00:22:57,840
there's nothing too much available to us

646
00:22:57,840 --> 00:22:59,220
there

647
00:22:59,220 --> 00:23:00,960
um I could look at the processes that we

648
00:23:00,960 --> 00:23:03,059
have running

649
00:23:03,059 --> 00:23:06,179
so I can see like this is listing all

650
00:23:06,179 --> 00:23:08,100
processes I can see that there's an

651
00:23:08,100 --> 00:23:10,980
nginx worker process uh the master is

652
00:23:10,980 --> 00:23:13,500
PID one so that's the core process that

653
00:23:13,500 --> 00:23:15,840
is running we can also see where we uh

654
00:23:15,840 --> 00:23:17,760
ran our end cap from earlier on on the

655
00:23:17,760 --> 00:23:20,220
shell and python free there that's um

656
00:23:20,220 --> 00:23:22,020
Penelope just upgrading our experience

657
00:23:22,020 --> 00:23:25,260
and finally on process 88 is our PSO

658
00:23:25,260 --> 00:23:27,179
August that we just run there

659
00:23:27,179 --> 00:23:28,980
I could look at DF

660
00:23:28,980 --> 00:23:30,960
um and see what we have available now

661
00:23:30,960 --> 00:23:32,880
there's some smells here already to

662
00:23:32,880 --> 00:23:34,080
start saying to me well I'm running

663
00:23:34,080 --> 00:23:36,299
kubernetes because I can see that there

664
00:23:36,299 --> 00:23:38,340
is a service account mounted we'll come

665
00:23:38,340 --> 00:23:41,120
back to that in a moment

666
00:23:41,400 --> 00:23:43,320
um but let's have a look let's see if we

667
00:23:43,320 --> 00:23:45,960
can have a look at our amounts

668
00:23:45,960 --> 00:23:48,260
now I don't have any mounts available

669
00:23:48,260 --> 00:23:50,820
but remember if we have a look at our PS

670
00:23:50,820 --> 00:23:52,799
aux

671
00:23:52,799 --> 00:23:55,380
we got process one available to us and

672
00:23:55,380 --> 00:23:59,360
if we go into our proc

673
00:23:59,700 --> 00:24:01,500
and if I do LS

674
00:24:01,500 --> 00:24:03,240
so each of these

675
00:24:03,240 --> 00:24:04,980
um ID each of these numbers here are

676
00:24:04,980 --> 00:24:07,200
associated with appears up here

677
00:24:07,200 --> 00:24:10,640
so if we go into one

678
00:24:13,700 --> 00:24:15,600
here I can see a number of things

679
00:24:15,600 --> 00:24:17,760
available so for example if I cut out

680
00:24:17,760 --> 00:24:19,200
the command line let's see if we can get

681
00:24:19,200 --> 00:24:20,880
that

682
00:24:20,880 --> 00:24:22,860
um we can see the initial command that

683
00:24:22,860 --> 00:24:24,900
was a run for this process but the file

684
00:24:24,900 --> 00:24:27,360
that I'm interested in is mounts

685
00:24:27,360 --> 00:24:30,600
so if I cut out mounts then even though

686
00:24:30,600 --> 00:24:32,580
the main command wasn't working

687
00:24:32,580 --> 00:24:33,900
um I'm still able to see the amounts

688
00:24:33,900 --> 00:24:35,640
that we have available

689
00:24:35,640 --> 00:24:37,799
so when using a tools that I might have

690
00:24:37,799 --> 00:24:40,460
disposal

691
00:24:40,559 --> 00:24:44,899
so if I grep and kubernetes

692
00:24:45,960 --> 00:24:48,179
spelled it first time again I can see

693
00:24:48,179 --> 00:24:49,559
here the temporary file system that we

694
00:24:49,559 --> 00:24:52,080
have running with our service account

695
00:24:52,080 --> 00:24:54,659
let's have a look as well so

696
00:24:54,659 --> 00:24:57,740
temp FS

697
00:24:58,200 --> 00:24:59,460
so we're looking at temporary file

698
00:24:59,460 --> 00:25:01,559
systems and we've got a couple of things

699
00:25:01,559 --> 00:25:03,918
here

700
00:25:04,919 --> 00:25:06,900
I say a couple of things what am I

701
00:25:06,900 --> 00:25:09,120
looking for this is always a point when

702
00:25:09,120 --> 00:25:11,100
I panic because

703
00:25:11,100 --> 00:25:13,919
um yeah we'll come into that now

704
00:25:13,919 --> 00:25:14,700
um

705
00:25:14,700 --> 00:25:16,260
so

706
00:25:16,260 --> 00:25:18,840
kubernetes when we run kubernetes

707
00:25:18,840 --> 00:25:20,400
there's this concept of conflict maps

708
00:25:20,400 --> 00:25:22,740
and secrets so conflict maps and secrets

709
00:25:22,740 --> 00:25:23,760
are essentially the environment

710
00:25:23,760 --> 00:25:25,799
variables or parameters or files that

711
00:25:25,799 --> 00:25:27,539
would be putting into our application

712
00:25:27,539 --> 00:25:30,419
and so with kubernetes when we uh create

713
00:25:30,419 --> 00:25:32,880
a config map or a secret then it's held

714
00:25:32,880 --> 00:25:34,740
as a temporary file system within the

715
00:25:34,740 --> 00:25:37,320
container so it's mounted in there so

716
00:25:37,320 --> 00:25:38,940
this is the reason I'm looking for this

717
00:25:38,940 --> 00:25:40,980
is because these files if they're

718
00:25:40,980 --> 00:25:44,340
mounted into this container then that's

719
00:25:44,340 --> 00:25:46,320
probably points of interest um for me to

720
00:25:46,320 --> 00:25:47,580
look into

721
00:25:47,580 --> 00:25:49,620
um and I'll have some value there so

722
00:25:49,620 --> 00:25:52,440
let's just see if we got run emotional

723
00:25:52,440 --> 00:25:54,120
status

724
00:25:54,120 --> 00:25:55,980
so I should be able to see emotional

725
00:25:55,980 --> 00:25:58,919
status update again like oh yeah it's

726
00:25:58,919 --> 00:26:01,980
somewhere there again apologies I'm so

727
00:26:01,980 --> 00:26:03,900
rough right now

728
00:26:03,900 --> 00:26:04,559
um

729
00:26:04,559 --> 00:26:06,960
so I can see emotional status and so if

730
00:26:06,960 --> 00:26:10,640
I cut out the emotional status

731
00:26:11,900 --> 00:26:13,860
uh it's because I'm not in that

732
00:26:13,860 --> 00:26:15,900
directory am I I'm emotional status

733
00:26:15,900 --> 00:26:18,179
current

734
00:26:18,179 --> 00:26:19,740
I can see

735
00:26:19,740 --> 00:26:22,860
um anger fear and disgust

736
00:26:22,860 --> 00:26:25,020
so let's just replay that command and

737
00:26:25,020 --> 00:26:27,419
we'll append that with an echo so we get

738
00:26:27,419 --> 00:26:29,760
onto a new line

739
00:26:29,760 --> 00:26:32,159
so anger fear disgust

740
00:26:32,159 --> 00:26:36,539
now let's see if anyone can so you don't

741
00:26:36,539 --> 00:26:37,860
need to know about kubernetes for this

742
00:26:37,860 --> 00:26:39,840
point what movie is this related to so

743
00:26:39,840 --> 00:26:42,419
if in if in the chat or anything if you

744
00:26:42,419 --> 00:26:43,740
can figure out the movie that was just

745
00:26:43,740 --> 00:26:46,380
related to that would really help out

746
00:26:46,380 --> 00:26:48,240
so whilst we do that now we're just

747
00:26:48,240 --> 00:26:49,919
going to have a look into our kubernetes

748
00:26:49,919 --> 00:26:51,299
so

749
00:26:51,299 --> 00:26:53,340
um Cube cuddle version so Cube cuddle is

750
00:26:53,340 --> 00:26:55,500
a binary and what that does is it

751
00:26:55,500 --> 00:26:57,059
connects onto our kubernetes cluster

752
00:26:57,059 --> 00:26:58,320
we've got some slides to show you what a

753
00:26:58,320 --> 00:26:59,760
kubernetes cluster is

754
00:26:59,760 --> 00:27:02,100
in a moment but I can see here I've got

755
00:27:02,100 --> 00:27:04,799
a couple of warnings but I can see the

756
00:27:04,799 --> 00:27:06,960
connection to server localhost 8080 was

757
00:27:06,960 --> 00:27:08,520
refused

758
00:27:08,520 --> 00:27:10,020
so even though I got the binary

759
00:27:10,020 --> 00:27:11,159
available

760
00:27:11,159 --> 00:27:12,960
um I don't have access to the cluster

761
00:27:12,960 --> 00:27:14,159
because I'm not authenticating myself

762
00:27:14,159 --> 00:27:16,500
I'm not using a token now if you

763
00:27:16,500 --> 00:27:18,720
remember we did have a service account

764
00:27:18,720 --> 00:27:21,539
so that's how we do it on time okay we

765
00:27:21,539 --> 00:27:23,760
might just speed run this bit a little

766
00:27:23,760 --> 00:27:24,960
but let's have a look at our service

767
00:27:24,960 --> 00:27:28,799
count so let's go CD uh

768
00:27:28,799 --> 00:27:33,440
run secrets kubernetes

769
00:27:33,779 --> 00:27:35,580
and then let's go into our service

770
00:27:35,580 --> 00:27:37,200
account

771
00:27:37,200 --> 00:27:39,299
now here we've got our search we've got

772
00:27:39,299 --> 00:27:40,919
a namespace from a token so let's have a

773
00:27:40,919 --> 00:27:43,080
look at our namespace so we're currently

774
00:27:43,080 --> 00:27:44,760
in CI memories

775
00:27:44,760 --> 00:27:48,480
and let's cut out our token

776
00:27:48,480 --> 00:27:50,760
so in cutting out our token to me that

777
00:27:50,760 --> 00:27:52,860
looks like a jot and so what that's

778
00:27:52,860 --> 00:27:54,179
going to do is that's going to

779
00:27:54,179 --> 00:27:56,460
authenticate my uh I can use the service

780
00:27:56,460 --> 00:27:57,900
account to be able to authenticate

781
00:27:57,900 --> 00:28:00,539
against a kubernetes API

782
00:28:00,539 --> 00:28:02,279
if I can authenticate against humanize

783
00:28:02,279 --> 00:28:04,140
API I might be able to run some

784
00:28:04,140 --> 00:28:06,419
workloads

785
00:28:06,419 --> 00:28:07,740
so

786
00:28:07,740 --> 00:28:09,419
um at this point

787
00:28:09,419 --> 00:28:12,360
I'm going to blame it on the sickness

788
00:28:12,360 --> 00:28:14,580
um but I'm just going to do a copy pasta

789
00:28:14,580 --> 00:28:16,679
here's the command that I ran earlier I

790
00:28:16,679 --> 00:28:18,179
will talk through it here

791
00:28:18,179 --> 00:28:20,460
so we've got cube Castle hyphen hyphen

792
00:28:20,460 --> 00:28:22,020
server equals https

793
00:28:22,020 --> 00:28:25,020
kubernetes.default.service.cluster.local

794
00:28:25,740 --> 00:28:28,320
so fun fact uh kubernetes runs its own

795
00:28:28,320 --> 00:28:29,520
DNS

796
00:28:29,520 --> 00:28:31,559
um and that's what we use to be able to

797
00:28:31,559 --> 00:28:33,419
communicate within our cluster so we can

798
00:28:33,419 --> 00:28:35,100
assume that this is uh within our

799
00:28:35,100 --> 00:28:36,720
cluster so it's going to connect onto

800
00:28:36,720 --> 00:28:39,299
our kubernetes service our kubernetes

801
00:28:39,299 --> 00:28:41,940
API then I can pass through a token so

802
00:28:41,940 --> 00:28:44,279
I'm going to cut out a VAR run Secrets

803
00:28:44,279 --> 00:28:46,860
keep nice IO service account token

804
00:28:46,860 --> 00:28:49,679
finally um I don't care if it's insecure

805
00:28:49,679 --> 00:28:50,940
right now so I'm going to pass through

806
00:28:50,940 --> 00:28:53,100
to skip the TLs verify and then I'm

807
00:28:53,100 --> 00:28:55,860
going to request version

808
00:28:55,860 --> 00:28:57,779
so if I do that I can now see that I'm

809
00:28:57,779 --> 00:29:00,960
getting a server version response

810
00:29:00,960 --> 00:29:02,820
so that's gone from trying to do Cube

811
00:29:02,820 --> 00:29:05,418
cuddle version

812
00:29:05,460 --> 00:29:07,980
because of Q config file hasn't been set

813
00:29:07,980 --> 00:29:11,100
if I run this command and I pass through

814
00:29:11,100 --> 00:29:12,840
the server that I want to connect onto

815
00:29:12,840 --> 00:29:14,820
the token that I have then it gives me a

816
00:29:14,820 --> 00:29:16,919
response from a server

817
00:29:16,919 --> 00:29:19,919
now as you've already figured out I'm a

818
00:29:19,919 --> 00:29:22,020
bit lazy and so I want to make things

819
00:29:22,020 --> 00:29:23,880
easier for me

820
00:29:23,880 --> 00:29:25,440
so I don't want to keep having to go

821
00:29:25,440 --> 00:29:26,880
back to this so we're going to create an

822
00:29:26,880 --> 00:29:29,779
alias for a moment

823
00:29:29,880 --> 00:29:31,740
this is where I panicked when I try to

824
00:29:31,740 --> 00:29:34,020
remember how to spell alias

825
00:29:34,020 --> 00:29:36,000
shout out to everyone who's dyslexic out

826
00:29:36,000 --> 00:29:37,080
there

827
00:29:37,080 --> 00:29:39,139
um

828
00:29:41,340 --> 00:29:43,440
so sometimes with kubernetes

829
00:29:43,440 --> 00:29:44,700
um

830
00:29:44,700 --> 00:29:46,380
forgotten the trap's name now but there

831
00:29:46,380 --> 00:29:48,059
is a really good resource to be able to

832
00:29:48,059 --> 00:29:49,620
get these aliases for some really good

833
00:29:49,620 --> 00:29:51,539
accumulative aliases so now if I just do

834
00:29:51,539 --> 00:29:54,140
kvision

835
00:29:54,240 --> 00:29:56,039
um certainly having to replay that

836
00:29:56,039 --> 00:29:57,720
command I can just do K so I can do K

837
00:29:57,720 --> 00:29:59,640
get pods

838
00:29:59,640 --> 00:30:02,460
um oh that's forbidden

839
00:30:02,460 --> 00:30:04,919
so maybe let's have a look at services

840
00:30:04,919 --> 00:30:07,320
so parts are a concept within kubernetes

841
00:30:07,320 --> 00:30:09,240
so pods are essentially containers that

842
00:30:09,240 --> 00:30:10,740
we have running it now as our workloads

843
00:30:10,740 --> 00:30:13,260
so I don't use Cube cuddle I want to use

844
00:30:13,260 --> 00:30:15,179
K I'm going to use my Alias K get

845
00:30:15,179 --> 00:30:17,220
service

846
00:30:17,220 --> 00:30:19,140
I'm getting an error from server is

847
00:30:19,140 --> 00:30:20,820
forbidden so even though this is an

848
00:30:20,820 --> 00:30:23,220
error this isn't a bad error this is

849
00:30:23,220 --> 00:30:24,899
just telling me you know you're not

850
00:30:24,899 --> 00:30:26,039
allowed to do this and this is because

851
00:30:26,039 --> 00:30:28,440
we're using role-based access control so

852
00:30:28,440 --> 00:30:30,720
for all based access control or rbac we

853
00:30:30,720 --> 00:30:31,799
can Define

854
00:30:31,799 --> 00:30:34,200
um what a service account or user has

855
00:30:34,200 --> 00:30:35,520
access to

856
00:30:35,520 --> 00:30:37,860
so this service account for instance I'm

857
00:30:37,860 --> 00:30:40,620
not able to uh for a service account and

858
00:30:40,620 --> 00:30:43,679
it kind um called mind reader

859
00:30:43,679 --> 00:30:45,299
um it can't look at services in the

860
00:30:45,299 --> 00:30:47,399
namespace default

861
00:30:47,399 --> 00:30:49,500
now there's this beautiful command uh

862
00:30:49,500 --> 00:30:52,559
that I first learned from uh Duffy um

863
00:30:52,559 --> 00:30:54,659
I've got Duffy's Twitter handle later on

864
00:30:54,659 --> 00:30:57,059
in the talk but what we can do is I can

865
00:30:57,059 --> 00:30:59,159
do cubicle can I get parts

866
00:30:59,159 --> 00:31:02,399
no can I get service

867
00:31:02,399 --> 00:31:03,840
no

868
00:31:03,840 --> 00:31:05,640
that's great but I just want to do the

869
00:31:05,640 --> 00:31:06,960
Hail Mary on this and just tell me

870
00:31:06,960 --> 00:31:08,760
everything that I can and can't do so if

871
00:31:08,760 --> 00:31:12,059
I do hyphen hyphen list then it shows me

872
00:31:12,059 --> 00:31:14,100
all the things that I can and can't do

873
00:31:14,100 --> 00:31:16,919
with this service account now um Ian

874
00:31:16,919 --> 00:31:18,779
Coldwater as well they've got a great

875
00:31:18,779 --> 00:31:19,799
quote

876
00:31:19,799 --> 00:31:21,960
um we're all made of stars but your R

877
00:31:21,960 --> 00:31:24,179
back shouldn't be if you're seeing Stars

878
00:31:24,179 --> 00:31:25,620
everywhere at this point in time it

879
00:31:25,620 --> 00:31:27,179
means that you're cluster Avenue and

880
00:31:27,179 --> 00:31:28,620
that's a great day for you if you're

881
00:31:28,620 --> 00:31:30,840
looking at uh trying to utilize this

882
00:31:30,840 --> 00:31:33,000
cluster but it's a bad day for anyone

883
00:31:33,000 --> 00:31:34,500
else who's trying to defend this cluster

884
00:31:34,500 --> 00:31:36,600
if you can do absolutely everything then

885
00:31:36,600 --> 00:31:38,340
you can run workloads anywhere across

886
00:31:38,340 --> 00:31:39,840
your state you could do a denial of

887
00:31:39,840 --> 00:31:41,279
wallet attack you could spin up some

888
00:31:41,279 --> 00:31:42,720
crypto minus if people are still doing

889
00:31:42,720 --> 00:31:45,120
crypto mining I'm sure they are

890
00:31:45,120 --> 00:31:49,679
um and uh so that that's a bad day now

891
00:31:49,679 --> 00:31:53,159
but again we want to try harder now if

892
00:31:53,159 --> 00:31:54,480
we can remember

893
00:31:54,480 --> 00:31:56,539
um

894
00:31:56,700 --> 00:31:58,559
actually just trying to remember where

895
00:31:58,559 --> 00:31:59,820
we are

896
00:31:59,820 --> 00:32:01,140
how ironic

897
00:32:01,140 --> 00:32:03,480
um PWD okay so I am in service account

898
00:32:03,480 --> 00:32:06,120
so if I do an LS so remember we had this

899
00:32:06,120 --> 00:32:08,520
file called namespace and we can see

900
00:32:08,520 --> 00:32:11,720
that it says CI memories

901
00:32:14,039 --> 00:32:17,220
So namespaces within kubernetes

902
00:32:17,220 --> 00:32:19,080
um it's a virtualization technique to

903
00:32:19,080 --> 00:32:22,799
event to run uh say a virtual cluster so

904
00:32:22,799 --> 00:32:24,120
what do I mean by that well if you're

905
00:32:24,120 --> 00:32:26,340
running a cluster we can use namespaces

906
00:32:26,340 --> 00:32:27,779
to run independent workloads so a

907
00:32:27,779 --> 00:32:29,159
namespace might have a name CS

908
00:32:29,159 --> 00:32:30,899
production staging

909
00:32:30,899 --> 00:32:32,399
um it could be developers it could be

910
00:32:32,399 --> 00:32:33,779
Luis it could be whatever you want it to

911
00:32:33,779 --> 00:32:35,640
be it could be cicd

912
00:32:35,640 --> 00:32:37,500
in this instance we've got CI memories

913
00:32:37,500 --> 00:32:40,260
so if we go back to our Command when we

914
00:32:40,260 --> 00:32:43,020
try to keep our get service

915
00:32:43,020 --> 00:32:45,299
this is saying that um

916
00:32:45,299 --> 00:32:47,100
we can't do this command within the

917
00:32:47,100 --> 00:32:49,740
namespace default so default is a

918
00:32:49,740 --> 00:32:50,880
default namespace that's created by

919
00:32:50,880 --> 00:32:53,220
kubernetes so if we can't do that within

920
00:32:53,220 --> 00:32:55,080
default then maybe let's have a look at

921
00:32:55,080 --> 00:32:59,700
what we can do but within CI memories

922
00:32:59,700 --> 00:33:01,260
so let's

923
00:33:01,260 --> 00:33:02,940
um okay

924
00:33:02,940 --> 00:33:05,940
uh

925
00:33:06,419 --> 00:33:09,360
off can I list okay

926
00:33:09,360 --> 00:33:12,539
a off can I list now if I go back here

927
00:33:12,539 --> 00:33:14,399
and I'm going to do

928
00:33:14,399 --> 00:33:18,739
um hyphen and CI hyphen memories

929
00:33:20,179 --> 00:33:22,799
so now I'm stating that well I wanted to

930
00:33:22,799 --> 00:33:24,539
see what I can and can't do with NCI

931
00:33:24,539 --> 00:33:25,380
memories

932
00:33:25,380 --> 00:33:27,299
now within here I can see that there's

933
00:33:27,299 --> 00:33:29,460
one subtle difference I can do things

934
00:33:29,460 --> 00:33:31,740
with config Maps

935
00:33:31,740 --> 00:33:34,140
okay so I'm going to look at the chat um

936
00:33:34,140 --> 00:33:35,460
I don't think there's much chat on the

937
00:33:35,460 --> 00:33:38,100
go that's totally cool I I get it I said

938
00:33:38,100 --> 00:33:39,480
for you to sit back relax so I wasn't

939
00:33:39,480 --> 00:33:41,279
expecting any chapter

940
00:33:41,279 --> 00:33:41,940
um

941
00:33:41,940 --> 00:33:46,399
let's remember our emotional status

942
00:33:47,159 --> 00:33:50,640
so anger fear disgust now hopefully

943
00:33:50,640 --> 00:33:52,860
you're shouting of the movie to me which

944
00:33:52,860 --> 00:33:55,019
is um inside out of a beautiful movie

945
00:33:55,019 --> 00:33:57,299
about memories and how

946
00:33:57,299 --> 00:33:59,460
um how they're managed um but there are

947
00:33:59,460 --> 00:34:01,559
two emotions that are missing here

948
00:34:01,559 --> 00:34:03,840
um ironically right now joy and sadness

949
00:34:03,840 --> 00:34:08,280
is well I'm still always looking for Joy

950
00:34:08,280 --> 00:34:08,879
um

951
00:34:08,879 --> 00:34:13,020
so let's have a look maybe if we just uh

952
00:34:13,020 --> 00:34:16,500
and see if we can change this file

953
00:34:16,500 --> 00:34:17,760
so I'm going to use Vim because

954
00:34:17,760 --> 00:34:19,500
obviously we've got them in here

955
00:34:19,500 --> 00:34:24,080
um so I'm going to add dry and sadness

956
00:34:24,599 --> 00:34:27,179
I'm going to save it but the file is

957
00:34:27,179 --> 00:34:29,839
read-only

958
00:34:31,500 --> 00:34:34,260
now that file is read-only because it's

959
00:34:34,260 --> 00:34:35,520
a config map

960
00:34:35,520 --> 00:34:38,159
um this is uh kubernetes is putting this

961
00:34:38,159 --> 00:34:40,320
config map into our um into our

962
00:34:40,320 --> 00:34:43,619
container and by default is setting it

963
00:34:43,619 --> 00:34:45,179
to read only because if we're using a

964
00:34:45,179 --> 00:34:46,560
conflict map right this is some better

965
00:34:46,560 --> 00:34:48,000
practice we don't want to have it

966
00:34:48,000 --> 00:34:49,918
overwritten because this is this is

967
00:34:49,918 --> 00:34:51,960
what's effect in our application this is

968
00:34:51,960 --> 00:34:53,280
what we have running so we don't really

969
00:34:53,280 --> 00:34:55,500
want to edit it in within here but

970
00:34:55,500 --> 00:34:57,480
remember about this title of talk um

971
00:34:57,480 --> 00:34:59,400
misusing kubernetes fighting the hand

972
00:34:59,400 --> 00:35:00,540
that feeds

973
00:35:00,540 --> 00:35:03,300
let's see what we can potentially do so

974
00:35:03,300 --> 00:35:05,880
if we go back to

975
00:35:05,880 --> 00:35:08,640
our Command here that we had earlier on

976
00:35:08,640 --> 00:35:10,260
um our Alias K so what we've done this

977
00:35:10,260 --> 00:35:13,200
time is is that um we've added on to uh

978
00:35:13,200 --> 00:35:15,720
our namespaces CI memories

979
00:35:15,720 --> 00:35:18,660
so now I've got uh Naval I've got CI

980
00:35:18,660 --> 00:35:23,420
memories I can just do get config Maps

981
00:35:24,119 --> 00:35:25,920
and I can see the config maps that I

982
00:35:25,920 --> 00:35:28,079
have available within this namespace and

983
00:35:28,079 --> 00:35:30,060
I can see that there's a motion sphere

984
00:35:30,060 --> 00:35:33,780
so if I output so let's get emotions we

985
00:35:33,780 --> 00:35:35,460
don't care about the root search at the

986
00:35:35,460 --> 00:35:36,839
moment

987
00:35:36,839 --> 00:35:38,400
I do care about spelling emotions

988
00:35:38,400 --> 00:35:39,540
correctly

989
00:35:39,540 --> 00:35:42,540
um and I output it as yaml I can see

990
00:35:42,540 --> 00:35:44,760
here that the current emotions uh anger

991
00:35:44,760 --> 00:35:47,280
fear and disgust

992
00:35:47,280 --> 00:35:50,339
now if you remember with our auth can I

993
00:35:50,339 --> 00:35:51,839
list

994
00:35:51,839 --> 00:35:54,119
so config Maps I can get list patch and

995
00:35:54,119 --> 00:35:56,280
update

996
00:35:56,280 --> 00:36:00,320
so I'm going to do okay edit

997
00:36:02,339 --> 00:36:05,220
eventually spells added

998
00:36:05,220 --> 00:36:07,920
um config Maps

999
00:36:07,920 --> 00:36:11,900
let's just clear the screen for um

1000
00:36:11,940 --> 00:36:15,300
config Maps emotions

1001
00:36:15,300 --> 00:36:18,839
so now I'm using Cube cuddle I'm able to

1002
00:36:18,839 --> 00:36:21,599
um just get the yaml back and it's

1003
00:36:21,599 --> 00:36:23,160
opened it up and then for me which I'm

1004
00:36:23,160 --> 00:36:27,140
happy with so I can do Joy sadness

1005
00:36:27,180 --> 00:36:32,359
and then just for me because

1006
00:36:34,700 --> 00:36:37,980
I'm just gonna add it in here as well

1007
00:36:37,980 --> 00:36:40,500
so now I'm going to save that file and

1008
00:36:40,500 --> 00:36:42,599
we can see that we get a response so

1009
00:36:42,599 --> 00:36:44,280
this is coming from cubicle to see our

1010
00:36:44,280 --> 00:36:47,400
config map emotions has been edited

1011
00:36:47,400 --> 00:36:49,320
so let's replay our Command that we had

1012
00:36:49,320 --> 00:36:50,520
earlier on

1013
00:36:50,520 --> 00:36:53,160
our emotions output is yaml so we can

1014
00:36:53,160 --> 00:36:55,380
see our current emotions are now Joyce

1015
00:36:55,380 --> 00:36:57,960
sadness anger fear and disgust now we've

1016
00:36:57,960 --> 00:36:59,760
updated the conflict map within

1017
00:36:59,760 --> 00:37:02,040
something called FCD which is the state

1018
00:37:02,040 --> 00:37:03,839
store within kubernetes we'll have a

1019
00:37:03,839 --> 00:37:06,240
look at that in a slice in a moment

1020
00:37:06,240 --> 00:37:08,940
now let's sometimes take a look it could

1021
00:37:08,940 --> 00:37:10,680
take a little bit of time so let's have

1022
00:37:10,680 --> 00:37:14,099
a look at our run emotional statuses

1023
00:37:14,099 --> 00:37:16,260
current emotions

1024
00:37:16,260 --> 00:37:17,700
there we go

1025
00:37:17,700 --> 00:37:19,920
so now we can see that kubernetes has

1026
00:37:19,920 --> 00:37:22,260
updated our config map within this

1027
00:37:22,260 --> 00:37:24,480
container to have Joyce and sadness and

1028
00:37:24,480 --> 00:37:26,579
get fear and disgust bows are the

1029
00:37:26,579 --> 00:37:28,200
emotions that we have within inside out

1030
00:37:28,200 --> 00:37:30,720
so let's just have a look back on our

1031
00:37:30,720 --> 00:37:32,940
website

1032
00:37:32,940 --> 00:37:34,980
and we'll go back and let's just see

1033
00:37:34,980 --> 00:37:37,200
what's happened here

1034
00:37:37,200 --> 00:37:39,560
let's have a look at our build status

1035
00:37:39,560 --> 00:37:42,119
unable to open file

1036
00:37:42,119 --> 00:37:45,240
well that sucks but

1037
00:37:45,240 --> 00:37:48,420
um I was expecting to see that that I I

1038
00:37:48,420 --> 00:37:50,700
hopefully this yeah

1039
00:37:50,700 --> 00:37:53,460
then that's for VR cards I was expecting

1040
00:37:53,460 --> 00:37:54,480
to see that everything is running

1041
00:37:54,480 --> 00:37:56,040
perfectly right now but that's okay

1042
00:37:56,040 --> 00:37:57,780
we'll leave it like that

1043
00:37:57,780 --> 00:37:59,160
so let's talk about what we've just

1044
00:37:59,160 --> 00:38:01,700
achieved there

1045
00:38:03,839 --> 00:38:07,260
we've used Cube cuttle and Cube cuddle

1046
00:38:07,260 --> 00:38:10,020
is a binary that allows us to connect to

1047
00:38:10,020 --> 00:38:12,900
the kubernetes API server so if you're

1048
00:38:12,900 --> 00:38:16,020
new to kubernetes on kubernetes just use

1049
00:38:16,020 --> 00:38:17,760
this best practice um it's just got a

1050
00:38:17,760 --> 00:38:19,920
restful endpoint as an API server so

1051
00:38:19,920 --> 00:38:22,260
when we're running these commands to get

1052
00:38:22,260 --> 00:38:25,619
uh edit um we could use apply create

1053
00:38:25,619 --> 00:38:27,720
these things it's all just connecting to

1054
00:38:27,720 --> 00:38:29,579
this API server the main thing to be

1055
00:38:29,579 --> 00:38:31,320
aware of is is that within kubernetes

1056
00:38:31,320 --> 00:38:33,540
everything should go via the API server

1057
00:38:33,540 --> 00:38:36,359
and this is what we call our master and

1058
00:38:36,359 --> 00:38:37,740
so that's also what we call for control

1059
00:38:37,740 --> 00:38:39,000
plane

1060
00:38:39,000 --> 00:38:41,640
and here we've got uh things but called

1061
00:38:41,640 --> 00:38:43,440
the scheduler so the scheduler runs our

1062
00:38:43,440 --> 00:38:45,060
workloads we got controller manager so

1063
00:38:45,060 --> 00:38:46,440
that runs everything that we have within

1064
00:38:46,440 --> 00:38:48,540
our cluster the cool thing here is that

1065
00:38:48,540 --> 00:38:51,359
we have apps at CD is a key value store

1066
00:38:51,359 --> 00:38:53,940
and so what's happened is there's a flat

1067
00:38:53,940 --> 00:38:55,560
we use Cube cuddle and we use that

1068
00:38:55,560 --> 00:38:57,359
service account that we found and then

1069
00:38:57,359 --> 00:38:59,640
we've gone and we've requested

1070
00:38:59,640 --> 00:39:00,420
um

1071
00:39:00,420 --> 00:39:02,460
we said actually we're going to add join

1072
00:39:02,460 --> 00:39:04,079
subnets to this config map and in

1073
00:39:04,079 --> 00:39:06,300
updating it at CD we've managed to

1074
00:39:06,300 --> 00:39:08,280
misuse kubernetes because now kubernetes

1075
00:39:08,280 --> 00:39:09,660
has said well I need to update these

1076
00:39:09,660 --> 00:39:12,119
config Maps over here and so using

1077
00:39:12,119 --> 00:39:13,200
cubelet

1078
00:39:13,200 --> 00:39:15,000
um cubelet is what's running our

1079
00:39:15,000 --> 00:39:16,680
containers for us across our state in

1080
00:39:16,680 --> 00:39:18,900
our nodes in our data plane

1081
00:39:18,900 --> 00:39:20,579
um and instantly we've got Q proxy here

1082
00:39:20,579 --> 00:39:22,619
Cube proxy is what's allowing us to um

1083
00:39:22,619 --> 00:39:26,720
have that in DNS that we had earlier on

1084
00:39:27,359 --> 00:39:28,500
so

1085
00:39:28,500 --> 00:39:30,599
um interacting with brain of kubernetes

1086
00:39:30,599 --> 00:39:32,460
so everything goes by the API as I just

1087
00:39:32,460 --> 00:39:34,079
mentioned there are three main binaries

1088
00:39:34,079 --> 00:39:36,359
there's Cube cuddle um so Cube cuddle

1089
00:39:36,359 --> 00:39:38,400
again you don't have to use cubicle you

1090
00:39:38,400 --> 00:39:40,020
could just use kill if you wanted to but

1091
00:39:40,020 --> 00:39:41,760
Cube cuddle is a binary that allows us

1092
00:39:41,760 --> 00:39:43,920
to connect to our server uh our API

1093
00:39:43,920 --> 00:39:46,560
sorry our API server keyboard is running

1094
00:39:46,560 --> 00:39:48,119
on our data planes and our control

1095
00:39:48,119 --> 00:39:49,680
planes on our nodes and that's just

1096
00:39:49,680 --> 00:39:51,900
running our workplace for us Cube admin

1097
00:39:51,900 --> 00:39:53,940
is a shout out just saying how you can

1098
00:39:53,940 --> 00:39:57,500
create servers if you so wish

1099
00:39:57,900 --> 00:40:02,000
and that is what's just said there

1100
00:40:02,339 --> 00:40:04,740
so let's just go into

1101
00:40:04,740 --> 00:40:07,079
um our underlying technology as well for

1102
00:40:07,079 --> 00:40:07,920
a moment

1103
00:40:07,920 --> 00:40:10,320
um I'm going to try and give some time I

1104
00:40:10,320 --> 00:40:11,880
think and just check on the time okay

1105
00:40:11,880 --> 00:40:13,320
we've got about 10 minutes left for

1106
00:40:13,320 --> 00:40:14,400
questions

1107
00:40:14,400 --> 00:40:16,680
so just to do a bit of a background as

1108
00:40:16,680 --> 00:40:18,020
well so containerization

1109
00:40:18,020 --> 00:40:20,339
containerization doesn't didn't come

1110
00:40:20,339 --> 00:40:23,339
from Docker and Docker had a great user

1111
00:40:23,339 --> 00:40:25,800
experience but what containers are are

1112
00:40:25,800 --> 00:40:28,020
Linux namespaces Linux c groups and

1113
00:40:28,020 --> 00:40:30,599
system capabilities as well as you could

1114
00:40:30,599 --> 00:40:32,579
argue some secret sauce

1115
00:40:32,579 --> 00:40:35,700
Linux namespaces this is what creates

1116
00:40:35,700 --> 00:40:37,859
this um this concept of the sandbox

1117
00:40:37,859 --> 00:40:40,020
environment it's isolation so using the

1118
00:40:40,020 --> 00:40:43,560
Linux namespaces um we can create it so

1119
00:40:43,560 --> 00:40:44,880
that container believes that it's got

1120
00:40:44,880 --> 00:40:46,440
its own file system

1121
00:40:46,440 --> 00:40:48,180
um we can create a Linux namespace

1122
00:40:48,180 --> 00:40:49,920
Network so then it believes that it does

1123
00:40:49,920 --> 00:40:51,599
its own network

1124
00:40:51,599 --> 00:40:53,579
um these are what we utilize to be able

1125
00:40:53,579 --> 00:40:55,020
to build that environment so that when

1126
00:40:55,020 --> 00:40:57,420
we go into a container it isn't the root

1127
00:40:57,420 --> 00:40:58,980
of a machine this is what it believes to

1128
00:40:58,980 --> 00:41:01,260
be as it just feels that it is its own

1129
00:41:01,260 --> 00:41:03,060
machine and it's and it's only got

1130
00:41:03,060 --> 00:41:04,560
access to processes which is another

1131
00:41:04,560 --> 00:41:06,900
namespace incidentally that's why the

1132
00:41:06,900 --> 00:41:09,420
container can only see its own processes

1133
00:41:09,420 --> 00:41:11,760
we've also got this concept of c groups

1134
00:41:11,760 --> 00:41:13,980
and C group stands for control groups

1135
00:41:13,980 --> 00:41:15,780
now control groups are there to manage

1136
00:41:15,780 --> 00:41:17,940
for Noisy Neighbor issue so if we're

1137
00:41:17,940 --> 00:41:19,800
running multiple processes on a machine

1138
00:41:19,800 --> 00:41:22,140
and say that you've got your unique

1139
00:41:22,140 --> 00:41:23,460
selling point for your business and

1140
00:41:23,460 --> 00:41:25,680
that's process save one

1141
00:41:25,680 --> 00:41:27,240
and you'll just like right use as much

1142
00:41:27,240 --> 00:41:28,619
of a machine as you want but then you've

1143
00:41:28,619 --> 00:41:30,839
got an underlying process that isn't as

1144
00:41:30,839 --> 00:41:33,480
important so say that it just reduces

1145
00:41:33,480 --> 00:41:35,520
the size of an image so it's like it's

1146
00:41:35,520 --> 00:41:37,079
it's great but it isn't business

1147
00:41:37,079 --> 00:41:39,480
critical so you might utilize c groups

1148
00:41:39,480 --> 00:41:41,099
to ensure that the amount of CPU and

1149
00:41:41,099 --> 00:41:42,900
memory that that process can use can be

1150
00:41:42,900 --> 00:41:45,599
limited so that if there is an issue

1151
00:41:45,599 --> 00:41:47,760
within there so if there's a bug or well

1152
00:41:47,760 --> 00:41:49,980
and as we're talking about OAS well if

1153
00:41:49,980 --> 00:41:52,440
if someone does exploit it then it can

1154
00:41:52,440 --> 00:41:54,599
only use so much CPU and memory now this

1155
00:41:54,599 --> 00:41:55,980
is a great way for us to be able to

1156
00:41:55,980 --> 00:41:57,900
handle that and so Linux namespaces and

1157
00:41:57,900 --> 00:42:00,180
Linux c groups they're not specific to

1158
00:42:00,180 --> 00:42:02,400
Containers this work containers use this

1159
00:42:02,400 --> 00:42:04,260
is the abstraction to be able to provide

1160
00:42:04,260 --> 00:42:06,660
these environments

1161
00:42:06,660 --> 00:42:09,599
so yeah uh namespaces limits how much

1162
00:42:09,599 --> 00:42:11,700
you can see and c groups limits how much

1163
00:42:11,700 --> 00:42:14,240
you can access

1164
00:42:14,579 --> 00:42:18,119
and Brad giesman a lovely lovely person

1165
00:42:18,119 --> 00:42:19,920
um has this great quote it's not a

1166
00:42:19,920 --> 00:42:21,359
container Escape it's a process that

1167
00:42:21,359 --> 00:42:23,040
wants to be free so when we're looking

1168
00:42:23,040 --> 00:42:25,320
within containers and when I did the PS

1169
00:42:25,320 --> 00:42:27,480
at Orcs earlier on we only saw processes

1170
00:42:27,480 --> 00:42:29,760
that were running within that container

1171
00:42:29,760 --> 00:42:32,460
um if we ran that PS orgs on the machine

1172
00:42:32,460 --> 00:42:33,839
that was running the container so we'd

1173
00:42:33,839 --> 00:42:35,160
be able to see them

1174
00:42:35,160 --> 00:42:36,720
um and that's also just a great thing to

1175
00:42:36,720 --> 00:42:41,000
have a look at um in your own time

1176
00:42:42,480 --> 00:42:44,160
um right so we've got to container

1177
00:42:44,160 --> 00:42:45,359
breakout let's see if we can get this

1178
00:42:45,359 --> 00:42:48,180
container breakout done now

1179
00:42:48,180 --> 00:42:50,579
so our config maps have been updated ah

1180
00:42:50,579 --> 00:42:52,079
yes and so

1181
00:42:52,079 --> 00:42:54,839
um and Penelope has been disconnected

1182
00:42:54,839 --> 00:42:56,220
that's okay

1183
00:42:56,220 --> 00:42:57,780
and the reason I say that's okay because

1184
00:42:57,780 --> 00:43:00,660
we've uh we we prepared our attack here

1185
00:43:00,660 --> 00:43:02,819
so I just ran this command again

1186
00:43:02,819 --> 00:43:05,400
and then if I go back to Penelope

1187
00:43:05,400 --> 00:43:07,319
I can see that a new shell has been

1188
00:43:07,319 --> 00:43:10,380
assigned so I can go on to session two

1189
00:43:10,380 --> 00:43:13,460
and now I have a new cell available now

1190
00:43:13,460 --> 00:43:16,079
this is a new container that we have

1191
00:43:16,079 --> 00:43:18,119
running and so I don't have my aliases

1192
00:43:18,119 --> 00:43:20,339
available to me anymore so if I do K get

1193
00:43:20,339 --> 00:43:23,040
pods K isn't found that's because

1194
00:43:23,040 --> 00:43:24,119
um the disconnection that's happened

1195
00:43:24,119 --> 00:43:27,180
kubernetes has updated uh this container

1196
00:43:27,180 --> 00:43:29,940
that we're running behind the scenes

1197
00:43:29,940 --> 00:43:31,560
again we're a little bit short on time

1198
00:43:31,560 --> 00:43:33,000
so let me just show the end of this

1199
00:43:33,000 --> 00:43:34,200
attack now the important thing about

1200
00:43:34,200 --> 00:43:36,119
this attack is that at this moment in

1201
00:43:36,119 --> 00:43:38,760
time we were we were able to interact

1202
00:43:38,760 --> 00:43:40,619
with kubernetes and we kind of fixed

1203
00:43:40,619 --> 00:43:42,359
something here again for a CTF this is

1204
00:43:42,359 --> 00:43:44,280
all about us teaching and learning um so

1205
00:43:44,280 --> 00:43:46,740
that others can learn

1206
00:43:46,740 --> 00:43:49,740
um but let's have a look

1207
00:43:49,740 --> 00:43:53,899
um let's do our Mount command here

1208
00:43:54,540 --> 00:43:56,220
so I didn't have access to mount but if

1209
00:43:56,220 --> 00:43:58,020
I do cut

1210
00:43:58,020 --> 00:44:02,060
proc one thanks

1211
00:44:03,000 --> 00:44:05,520
so I can see something in here

1212
00:44:05,520 --> 00:44:08,780
called docker

1213
00:44:10,380 --> 00:44:11,819
I can see a couple of things in here

1214
00:44:11,819 --> 00:44:13,380
called Docker but at the bottom I can

1215
00:44:13,380 --> 00:44:16,260
see run sock dot Docker so incidentally

1216
00:44:16,260 --> 00:44:18,119
it's usually called Docker dot sock but

1217
00:44:18,119 --> 00:44:20,339
when we did this CTF and this was part

1218
00:44:20,339 --> 00:44:21,960
of our competition mode so we wanted to

1219
00:44:21,960 --> 00:44:23,880
make it a little bit more difficult and

1220
00:44:23,880 --> 00:44:27,060
just be a bit annoying in that manner

1221
00:44:27,060 --> 00:44:27,960
um

1222
00:44:27,960 --> 00:44:29,819
so if I got a darker socket available if

1223
00:44:29,819 --> 00:44:31,200
I run Docker I've got the binary

1224
00:44:31,200 --> 00:44:33,359
available but if I do a Docker PS I

1225
00:44:33,359 --> 00:44:34,740
can't connect onto the docker Daemon

1226
00:44:34,740 --> 00:44:36,599
because as we can see there is tempting

1227
00:44:36,599 --> 00:44:38,400
to find the dock of demon on the Run

1228
00:44:38,400 --> 00:44:40,680
darker dot suck this is the Linux so in

1229
00:44:40,680 --> 00:44:42,720
Linux everything is a file and the

1230
00:44:42,720 --> 00:44:44,880
docker.sark is an API endpoint for the

1231
00:44:44,880 --> 00:44:47,040
demon um that the docker client uh is

1232
00:44:47,040 --> 00:44:49,859
trying to connect onto

1233
00:44:49,859 --> 00:44:51,839
so if we just have a look here again so

1234
00:44:51,839 --> 00:44:53,160
actually what we want to connect this

1235
00:44:53,160 --> 00:44:57,119
onto is uh run slash uh

1236
00:44:57,119 --> 00:45:00,119
docker

1237
00:45:01,920 --> 00:45:05,280
because I am

1238
00:45:05,280 --> 00:45:09,540
I feel like I'm running out of of and do

1239
00:45:09,540 --> 00:45:10,800
you have a moment so I'm just going to

1240
00:45:10,800 --> 00:45:13,319
do a copy Pastor again so in passing

1241
00:45:13,319 --> 00:45:14,819
across let's just see this command again

1242
00:45:14,819 --> 00:45:18,200
Docker hyphen host uh Unix uh Varan

1243
00:45:18,200 --> 00:45:20,880
soccer.nps so if I run that it's showing

1244
00:45:20,880 --> 00:45:23,040
me all the containers that we have

1245
00:45:23,040 --> 00:45:24,900
running on this virtual machine at this

1246
00:45:24,900 --> 00:45:27,060
moment in time now why might we have

1247
00:45:27,060 --> 00:45:30,540
that well just remember that this is

1248
00:45:30,540 --> 00:45:32,280
still unable to open the file apparently

1249
00:45:32,280 --> 00:45:34,560
oh there we go clunk the machine is now

1250
00:45:34,560 --> 00:45:36,060
perfectly balanced on running properly

1251
00:45:36,060 --> 00:45:38,700
all sockets are now neatly aligned so

1252
00:45:38,700 --> 00:45:40,380
that socket's about being neatly aligned

1253
00:45:40,380 --> 00:45:42,180
is trying to allude to this concept of

1254
00:45:42,180 --> 00:45:44,040
the darker socket

1255
00:45:44,040 --> 00:45:46,619
um so this is a memory cicd build system

1256
00:45:46,619 --> 00:45:48,180
and what we used to see is is that

1257
00:45:48,180 --> 00:45:49,800
people would incorporate the docker

1258
00:45:49,800 --> 00:45:51,599
socket into the cicd build system

1259
00:45:51,599 --> 00:45:54,420
because previously you had to say you

1260
00:45:54,420 --> 00:45:56,160
had to connect onto a Docker socket to

1261
00:45:56,160 --> 00:45:57,780
be able to build images or you might be

1262
00:45:57,780 --> 00:45:59,040
looking to run them as well as part of

1263
00:45:59,040 --> 00:46:00,240
your process

1264
00:46:00,240 --> 00:46:02,640
not ideal there's evidence was available

1265
00:46:02,640 --> 00:46:04,920
um so you don't need to give access to a

1266
00:46:04,920 --> 00:46:06,359
Docker socket to be able to do this

1267
00:46:06,359 --> 00:46:08,099
equally as a runtime there are other

1268
00:46:08,099 --> 00:46:10,200
runtimes available too

1269
00:46:10,200 --> 00:46:12,000
um again a losing to the previous talk

1270
00:46:12,000 --> 00:46:13,740
fret modeling great place to be able to

1271
00:46:13,740 --> 00:46:14,880
look at this as to which contained

1272
00:46:14,880 --> 00:46:16,680
runtime you should be using and at what

1273
00:46:16,680 --> 00:46:18,240
basis

1274
00:46:18,240 --> 00:46:20,099
so on that let's just look at our Docker

1275
00:46:20,099 --> 00:46:22,980
socket again now so if I can look at

1276
00:46:22,980 --> 00:46:25,440
what we have running then potentially I

1277
00:46:25,440 --> 00:46:26,760
can also

1278
00:46:26,760 --> 00:46:29,460
run something ourselves

1279
00:46:29,460 --> 00:46:31,619
so I'm just putting an alias for D

1280
00:46:31,619 --> 00:46:34,560
Docker so and now I can just run D and

1281
00:46:34,560 --> 00:46:37,279
run this command

1282
00:46:38,400 --> 00:46:41,160
and just to say we should be done in

1283
00:46:41,160 --> 00:46:42,900
about five minutes as well just to make

1284
00:46:42,900 --> 00:46:44,400
sure that everyone is cool on the

1285
00:46:44,400 --> 00:46:45,960
moderation front

1286
00:46:45,960 --> 00:46:48,900
um I'm going to do D run I'm going to

1287
00:46:48,900 --> 00:46:51,180
run an interactive container um it

1288
00:46:51,180 --> 00:46:52,859
doesn't stand for interactive but that's

1289
00:46:52,859 --> 00:46:55,440
how it remembers hyphen hyphen RM means

1290
00:46:55,440 --> 00:46:57,540
that once this uh container stops one

1291
00:46:57,540 --> 00:46:59,160
the process one within this container

1292
00:46:59,160 --> 00:47:01,079
stops then I have to stop a container

1293
00:47:01,079 --> 00:47:03,900
now hyphen hyphen privileged um if

1294
00:47:03,900 --> 00:47:05,880
you're new to Containers privileged is

1295
00:47:05,880 --> 00:47:07,619
the most dangerous flag in the whole of

1296
00:47:07,619 --> 00:47:10,680
compute was a quote by Andrew Martin

1297
00:47:10,680 --> 00:47:12,839
um and talking about Linux namespaces a

1298
00:47:12,839 --> 00:47:13,859
moment ago

1299
00:47:13,859 --> 00:47:16,319
what running as privilege does is it

1300
00:47:16,319 --> 00:47:18,300
removes that it removes that isolation

1301
00:47:18,300 --> 00:47:20,520
so that allows me access to save host

1302
00:47:20,520 --> 00:47:23,400
namespaces so the um IP addresses and so

1303
00:47:23,400 --> 00:47:24,660
forth the reason you might see

1304
00:47:24,660 --> 00:47:26,280
privileged is if you if you've got

1305
00:47:26,280 --> 00:47:27,780
developers who are looking to use like

1306
00:47:27,780 --> 00:47:29,700
say some Hardware that's on the machine

1307
00:47:29,700 --> 00:47:31,859
that's running the container so we say

1308
00:47:31,859 --> 00:47:34,020
that you're doing some machine learning

1309
00:47:34,020 --> 00:47:36,420
and you want to use a GPU

1310
00:47:36,420 --> 00:47:38,579
within that container the container has

1311
00:47:38,579 --> 00:47:40,020
its namespace so it doesn't have access

1312
00:47:40,020 --> 00:47:41,940
to GPU

1313
00:47:41,940 --> 00:47:43,500
um if we run out as privilege then it's

1314
00:47:43,500 --> 00:47:44,940
essentially running as root on the

1315
00:47:44,940 --> 00:47:47,520
machine so it can access it the thing

1316
00:47:47,520 --> 00:47:49,260
the main takeaway here is is least

1317
00:47:49,260 --> 00:47:50,819
privilege so we want to give it as

1318
00:47:50,819 --> 00:47:53,280
little privilege as possible instead of

1319
00:47:53,280 --> 00:47:55,140
giving a privileged parameter like this

1320
00:47:55,140 --> 00:47:56,819
you would want to look at enabling

1321
00:47:56,819 --> 00:47:58,680
capabilities so the system capabilities

1322
00:47:58,680 --> 00:48:00,359
to be able to access it

1323
00:48:00,359 --> 00:48:03,900
so um after the privileged flag we've

1324
00:48:03,900 --> 00:48:06,420
got a hyphen hyphen process ID is equal

1325
00:48:06,420 --> 00:48:08,220
to host so we're attaching this

1326
00:48:08,220 --> 00:48:11,280
container to the host process ID and um

1327
00:48:11,280 --> 00:48:13,920
using Justin cormack who is the CTO at

1328
00:48:13,920 --> 00:48:17,160
Docker now um again lovely lovely person

1329
00:48:17,160 --> 00:48:18,720
um and we're using their container that

1330
00:48:18,720 --> 00:48:22,759
they've named NS enter one

1331
00:48:22,980 --> 00:48:25,260
so the image was no longer it wasn't

1332
00:48:25,260 --> 00:48:26,880
able to be found locally it's pulled it

1333
00:48:26,880 --> 00:48:28,859
down and now I have another terminal

1334
00:48:28,859 --> 00:48:31,920
so if I do an lsla

1335
00:48:31,920 --> 00:48:34,079
I can see I'm in another file system

1336
00:48:34,079 --> 00:48:36,000
again and you're like well yes you're in

1337
00:48:36,000 --> 00:48:37,440
another container obviously there's a

1338
00:48:37,440 --> 00:48:39,420
new file system that you're able to but

1339
00:48:39,420 --> 00:48:41,760
this is a process ID of host

1340
00:48:41,760 --> 00:48:44,040
and so now what I've done is if I do a

1341
00:48:44,040 --> 00:48:46,800
psest PS aux

1342
00:48:46,800 --> 00:48:48,720
I can see all the processes that are

1343
00:48:48,720 --> 00:48:51,119
running on this machine so now I've

1344
00:48:51,119 --> 00:48:53,160
become root I've become root of this

1345
00:48:53,160 --> 00:48:55,260
machine and that's important because

1346
00:48:55,260 --> 00:48:57,060
I've gone from being in a position where

1347
00:48:57,060 --> 00:48:58,859
I didn't have any access I was within a

1348
00:48:58,859 --> 00:49:01,619
container we used our service accounting

1349
00:49:01,619 --> 00:49:04,140
Cube and in Cube cuddle to then be able

1350
00:49:04,140 --> 00:49:05,880
to fix this Pipeline and knock the

1351
00:49:05,880 --> 00:49:10,640
docker socket for us and Docker um

1352
00:49:10,980 --> 00:49:12,720
um when we're running Docker we're

1353
00:49:12,720 --> 00:49:13,920
running it as a root and then that

1354
00:49:13,920 --> 00:49:16,680
allows us to run uh containers as root

1355
00:49:16,680 --> 00:49:18,359
and so that's our point where we're able

1356
00:49:18,359 --> 00:49:20,400
to Pivot out from being a user without

1357
00:49:20,400 --> 00:49:23,880
these um with uh with the least

1358
00:49:23,880 --> 00:49:27,119
privilege to be in route with everything

1359
00:49:27,119 --> 00:49:29,819
um so yeah and then within this if we

1360
00:49:29,819 --> 00:49:32,819
just have a look and just to show you

1361
00:49:32,819 --> 00:49:34,319
again please don't tell anyone else

1362
00:49:34,319 --> 00:49:35,760
about the flag

1363
00:49:35,760 --> 00:49:39,500
um if I cut out root

1364
00:49:41,640 --> 00:49:45,000
and then flag.txt it's almost like I

1365
00:49:45,000 --> 00:49:47,780
already knew where it was

1366
00:49:49,200 --> 00:49:50,640
um that was our flag

1367
00:49:50,640 --> 00:49:52,680
um so now I've shared it with you as the

1368
00:49:52,680 --> 00:49:54,599
flag is essentially useless now

1369
00:49:54,599 --> 00:49:57,119
um but the point here is is that

1370
00:49:57,119 --> 00:49:58,680
hopefully as you've seen with this talk

1371
00:49:58,680 --> 00:50:00,839
you've gone from a basis of just having

1372
00:50:00,839 --> 00:50:03,180
access to a website which

1373
00:50:03,180 --> 00:50:05,220
um didn't well arguably it wasn't even

1374
00:50:05,220 --> 00:50:07,260
working properly at the time

1375
00:50:07,260 --> 00:50:09,000
um and we were able to find an exploit

1376
00:50:09,000 --> 00:50:10,500
in there to be able to create a reverse

1377
00:50:10,500 --> 00:50:12,660
shell and we're creating a reverse cell

1378
00:50:12,660 --> 00:50:15,119
it allowed us to get into the system and

1379
00:50:15,119 --> 00:50:17,099
in getting to the system

1380
00:50:17,099 --> 00:50:19,920
um we were able to then start peeking

1381
00:50:19,920 --> 00:50:22,200
around and we had like other config Maps

1382
00:50:22,200 --> 00:50:24,480
um we remembered that inside out is an

1383
00:50:24,480 --> 00:50:26,099
amazing movie if you haven't seen it I

1384
00:50:26,099 --> 00:50:28,500
definitely recommend it for this weekend

1385
00:50:28,500 --> 00:50:30,660
um as we updated the config map because

1386
00:50:30,660 --> 00:50:32,280
utilizing our service account and seeing

1387
00:50:32,280 --> 00:50:33,780
what we had

1388
00:50:33,780 --> 00:50:35,940
in doing so it created a darker socket

1389
00:50:35,940 --> 00:50:37,380
being available which allowed us to

1390
00:50:37,380 --> 00:50:39,060
connect onto the docker socket and to be

1391
00:50:39,060 --> 00:50:41,040
able to run a workload that we set as

1392
00:50:41,040 --> 00:50:42,900
privileged which allowed us to then gain

1393
00:50:42,900 --> 00:50:46,460
as access as root

1394
00:50:46,819 --> 00:50:49,500
so let's just tidy up on these slides

1395
00:50:49,500 --> 00:50:50,940
and then we've got some times for

1396
00:50:50,940 --> 00:50:53,460
questions so there we go and what do we

1397
00:50:53,460 --> 00:50:55,859
do so we've used our fake ID to then say

1398
00:50:55,859 --> 00:50:59,160
that we are now root and We've ran a

1399
00:50:59,160 --> 00:51:00,540
privileged container to be able to do

1400
00:51:00,540 --> 00:51:02,940
that pass through the process ID and

1401
00:51:02,940 --> 00:51:05,220
everything was good

1402
00:51:05,220 --> 00:51:07,619
so we did some attack diagrams as well

1403
00:51:07,619 --> 00:51:10,500
for this uh so we can see that our

1404
00:51:10,500 --> 00:51:12,960
container within um our pod was

1405
00:51:12,960 --> 00:51:15,660
connecting to xcd well actually this

1406
00:51:15,660 --> 00:51:16,619
should be

1407
00:51:16,619 --> 00:51:19,079
um this should be by the API server

1408
00:51:19,079 --> 00:51:22,380
updates well that's an issue

1409
00:51:22,380 --> 00:51:24,359
um and then as we can see here with the

1410
00:51:24,359 --> 00:51:26,099
airplane level we created this reverse

1411
00:51:26,099 --> 00:51:28,260
shell we find the CI memories namespace

1412
00:51:28,260 --> 00:51:30,000
again it's this information it's not

1413
00:51:30,000 --> 00:51:32,040
leaking it's we just we have this

1414
00:51:32,040 --> 00:51:33,180
information available to us there's

1415
00:51:33,180 --> 00:51:34,800
other ways that we can find out as well

1416
00:51:34,800 --> 00:51:37,079
different namespaces but in doing so

1417
00:51:37,079 --> 00:51:39,119
we're able to access SCD and we had a

1418
00:51:39,119 --> 00:51:40,740
look and then finally we ran this

1419
00:51:40,740 --> 00:51:42,000
command

1420
00:51:42,000 --> 00:51:43,920
um so if you are ever locked out of your

1421
00:51:43,920 --> 00:51:45,359
machine and you've got Docker running on

1422
00:51:45,359 --> 00:51:46,859
it and you're able to get in there's

1423
00:51:46,859 --> 00:51:48,839
user then this has saved numerous people

1424
00:51:48,839 --> 00:51:52,500
in being able to access YouTube again

1425
00:51:52,500 --> 00:51:57,059
um right and there we go so mitigations

1426
00:51:57,059 --> 00:51:57,900
um

1427
00:51:57,900 --> 00:52:00,660
defense in depth um don't connect Docker

1428
00:52:00,660 --> 00:52:02,339
sockets into containers ideally look at

1429
00:52:02,339 --> 00:52:04,680
like say build it or Calico uh but no

1430
00:52:04,680 --> 00:52:07,980
mechanical ah gosh

1431
00:52:07,980 --> 00:52:09,780
five more minutes

1432
00:52:09,780 --> 00:52:12,180
um look at utilizing uh the the tools

1433
00:52:12,180 --> 00:52:13,380
that are available to be able to build

1434
00:52:13,380 --> 00:52:15,240
images without having to connect onto

1435
00:52:15,240 --> 00:52:17,160
the darker socket if required if you do

1436
00:52:17,160 --> 00:52:18,480
need to connect onto the darker socket

1437
00:52:18,480 --> 00:52:20,339
then do a threat model that have this as

1438
00:52:20,339 --> 00:52:21,960
deep as you can don't have it publicly

1439
00:52:21,960 --> 00:52:24,119
facing it in these workloads

1440
00:52:24,119 --> 00:52:26,640
um yeah we got a number of um so there's

1441
00:52:26,640 --> 00:52:29,220
other things there about capabilities

1442
00:52:29,220 --> 00:52:31,260
so oh we're coming to the final stretch

1443
00:52:31,260 --> 00:52:33,780
so just to say thank you to at jpts

1444
00:52:33,780 --> 00:52:36,960
underscore so James is a pen tester at a

1445
00:52:36,960 --> 00:52:38,280
control plane

1446
00:52:38,280 --> 00:52:41,280
um he helped build this scenario at gave

1447
00:52:41,280 --> 00:52:44,280
a phenomenal talk at kubecon I keep

1448
00:52:44,280 --> 00:52:46,619
saying everyone's lovely I I don't know

1449
00:52:46,619 --> 00:52:48,780
how about this I'm surrounded by lovely

1450
00:52:48,780 --> 00:52:49,800
people

1451
00:52:49,800 --> 00:52:51,300
um so that's definitely someone to

1452
00:52:51,300 --> 00:52:53,400
follow and watch and their career is

1453
00:52:53,400 --> 00:52:55,440
just going to go astronomical

1454
00:52:55,440 --> 00:52:58,260
and that as well I've got uh V as well

1455
00:52:58,260 --> 00:53:01,559
so v um we met our conference um and

1456
00:53:01,559 --> 00:53:03,960
they helped bring this talk up and bring

1457
00:53:03,960 --> 00:53:06,839
make it bigger so again someone who is

1458
00:53:06,839 --> 00:53:08,460
just phenomenal and someone I'd

1459
00:53:08,460 --> 00:53:11,579
recommend to follow and to that um I've

1460
00:53:11,579 --> 00:53:13,740
done tag the planet so these are just a

1461
00:53:13,740 --> 00:53:15,720
couple of people I've put myself in

1462
00:53:15,720 --> 00:53:17,760
there like how self-indulgent of me but

1463
00:53:17,760 --> 00:53:18,960
these are some of the people that I've

1464
00:53:18,960 --> 00:53:21,359
mentioned um but also um these are some

1465
00:53:21,359 --> 00:53:23,220
of the people that I follow personally

1466
00:53:23,220 --> 00:53:24,540
to be able to keep an eye on the

1467
00:53:24,540 --> 00:53:27,180
industry uh Duffy from earlier on is

1468
00:53:27,180 --> 00:53:29,520
milorin um I think I pronounced it that

1469
00:53:29,520 --> 00:53:32,040
right you had Brad guzmann um yeah so

1470
00:53:32,040 --> 00:53:33,660
please have a look at those Twitter

1471
00:53:33,660 --> 00:53:34,920
accounts if you want to keep up to date

1472
00:53:34,920 --> 00:53:36,420
with those things

1473
00:53:36,420 --> 00:53:38,339
other than that I'll tell you what it's

1474
00:53:38,339 --> 00:53:39,839
all about it's all about punk rock so

1475
00:53:39,839 --> 00:53:41,700
thank you for your time um I tried to

1476
00:53:41,700 --> 00:53:43,980
create this slide as a way to remind me

1477
00:53:43,980 --> 00:53:46,079
of when I used to run Windows and when

1478
00:53:46,079 --> 00:53:49,500
it all uh or get a little bit static but

1479
00:53:49,500 --> 00:53:51,780
to that um thank you thank you for your

1480
00:53:51,780 --> 00:53:52,500
time

1481
00:53:52,500 --> 00:53:54,240
um I'm happy to take as many questions

1482
00:53:54,240 --> 00:53:56,640
as we have in the next five minutes and

1483
00:53:56,640 --> 00:53:58,500
um yeah

1484
00:53:58,500 --> 00:54:01,260
all right thank you Lewis awesome demo

1485
00:54:01,260 --> 00:54:03,740
by the way

1486
00:54:04,740 --> 00:54:06,900
um thank you I see no questions in the Q

1487
00:54:06,900 --> 00:54:09,359
a but I've got some for you

1488
00:54:09,359 --> 00:54:11,400
um so what are the common pitfalls when

1489
00:54:11,400 --> 00:54:13,020
when we speak about kubernetes security

1490
00:54:13,020 --> 00:54:15,980
and in general

1491
00:54:16,020 --> 00:54:16,640
um

1492
00:54:16,640 --> 00:54:19,099
I would

1493
00:54:19,099 --> 00:54:23,220
it's misconfiguration and so kubernetes

1494
00:54:23,220 --> 00:54:26,819
is yeah it's no longer a bright young

1495
00:54:26,819 --> 00:54:29,280
web Snapper that it used to be but it is

1496
00:54:29,280 --> 00:54:32,839
constantly evolving and

1497
00:54:33,660 --> 00:54:36,359
what we see is that when classes are

1498
00:54:36,359 --> 00:54:38,579
great so previously for example

1499
00:54:38,579 --> 00:54:39,960
um when you created a cluster for the

1500
00:54:39,960 --> 00:54:41,400
first time it would create a kubernetes

1501
00:54:41,400 --> 00:54:43,920
dashboard that dashboard gave you access

1502
00:54:43,920 --> 00:54:45,720
as cluster admin

1503
00:54:45,720 --> 00:54:48,059
so it gave you out of this beautiful UI

1504
00:54:48,059 --> 00:54:50,579
but what happened was some people

1505
00:54:50,579 --> 00:54:52,619
um just they created a clusters the

1506
00:54:52,619 --> 00:54:53,640
first time creating the cluster and

1507
00:54:53,640 --> 00:54:54,960
that's important like people need to be

1508
00:54:54,960 --> 00:54:57,480
able to build things to be able to learn

1509
00:54:57,480 --> 00:54:58,859
um but they were creating them perfectly

1510
00:54:58,859 --> 00:55:00,720
facing and so people were able to gain

1511
00:55:00,720 --> 00:55:02,760
access to these dashboards and again

1512
00:55:02,760 --> 00:55:04,619
similar attack path in that you could

1513
00:55:04,619 --> 00:55:06,839
run a privileged a container within a

1514
00:55:06,839 --> 00:55:08,220
pod and then you've got access to the

1515
00:55:08,220 --> 00:55:09,599
nodes

1516
00:55:09,599 --> 00:55:11,700
um there's also a company who makes some

1517
00:55:11,700 --> 00:55:13,740
electric cars within America who had an

1518
00:55:13,740 --> 00:55:15,420
attack happened there

1519
00:55:15,420 --> 00:55:17,640
um and someone got access to a

1520
00:55:17,640 --> 00:55:20,160
kubernetes dashboard which essentially

1521
00:55:20,160 --> 00:55:22,740
gave access to their S3 bucket Keys

1522
00:55:22,740 --> 00:55:24,540
um and then there's crypto mining that

1523
00:55:24,540 --> 00:55:26,220
was happening across the data plane as

1524
00:55:26,220 --> 00:55:27,359
well

1525
00:55:27,359 --> 00:55:30,119
um so I'd say it's misconfigurations

1526
00:55:30,119 --> 00:55:31,920
um and I understand it's so simple for

1527
00:55:31,920 --> 00:55:33,240
me to say misconfigurations and

1528
00:55:33,240 --> 00:55:34,740
constantly same as configurations I

1529
00:55:34,740 --> 00:55:36,000
would definitely recommend the book

1530
00:55:36,000 --> 00:55:38,099
hacking kubernetes

1531
00:55:38,099 --> 00:55:40,800
um but I'd also say as well for people

1532
00:55:40,800 --> 00:55:44,099
who are new to kubernetes kubernetes is

1533
00:55:44,099 --> 00:55:46,500
just another name built on years and

1534
00:55:46,500 --> 00:55:49,559
years of um of core Technologies when

1535
00:55:49,559 --> 00:55:50,940
you if you're looking to get started in

1536
00:55:50,940 --> 00:55:52,500
kubernetes if you're coming from a

1537
00:55:52,500 --> 00:55:53,760
networking background if you're coming

1538
00:55:53,760 --> 00:55:55,859
from uh let's say storage if you're an

1539
00:55:55,859 --> 00:55:57,900
app there for so forth focus on

1540
00:55:57,900 --> 00:55:59,280
something that you can connect with

1541
00:55:59,280 --> 00:56:00,960
because you quite quickly learned that

1542
00:56:00,960 --> 00:56:03,359
actually these things that like these

1543
00:56:03,359 --> 00:56:04,920
acronyms and so forth are just built on

1544
00:56:04,920 --> 00:56:07,020
best practices that you already know as

1545
00:56:07,020 --> 00:56:08,280
soon as you get that point where you're

1546
00:56:08,280 --> 00:56:09,839
comfortable then you're standing on the

1547
00:56:09,839 --> 00:56:11,760
shoulders of giants because then you see

1548
00:56:11,760 --> 00:56:13,380
these best practices from everyone else

1549
00:56:13,380 --> 00:56:16,260
so yeah I guess those are the core ones

1550
00:56:16,260 --> 00:56:17,339
for

1551
00:56:17,339 --> 00:56:18,780
um this tools as well from companies

1552
00:56:18,780 --> 00:56:19,980
like um

1553
00:56:19,980 --> 00:56:21,900
Aqua security

1554
00:56:21,900 --> 00:56:24,119
um so they've got cube bench example

1555
00:56:24,119 --> 00:56:25,619
that can give you a score to say what's

1556
00:56:25,619 --> 00:56:28,079
happening with your cluster I I'd still

1557
00:56:28,079 --> 00:56:30,300
say today though it's that's a great

1558
00:56:30,300 --> 00:56:33,000
starter but pen testing is also our best

1559
00:56:33,000 --> 00:56:34,440
for this as well to find out those

1560
00:56:34,440 --> 00:56:36,059
aspects

1561
00:56:36,059 --> 00:56:38,700
um and also yeah I would say there's

1562
00:56:38,700 --> 00:56:40,740
companies now that are really focusing

1563
00:56:40,740 --> 00:56:43,920
on um service meshes so these companies

1564
00:56:43,920 --> 00:56:46,500
like high surveillance uh tetrate

1565
00:56:46,500 --> 00:56:47,880
um

1566
00:56:47,880 --> 00:56:49,740
that's where it's also getting quite

1567
00:56:49,740 --> 00:56:51,540
exciting for me because as a network

1568
00:56:51,540 --> 00:56:53,040
it's a flat network but now we're

1569
00:56:53,040 --> 00:56:55,200
solving these problems with um like TLS

1570
00:56:55,200 --> 00:56:56,579
at rest and so forth and it's just

1571
00:56:56,579 --> 00:56:58,200
further building up

1572
00:56:58,200 --> 00:57:01,640
um security into our clusters

1573
00:57:01,640 --> 00:57:04,619
right cool thanks for the uh and the

1574
00:57:04,619 --> 00:57:06,480
information uh maybe one more question

1575
00:57:06,480 --> 00:57:08,160
because I see we only have the two

1576
00:57:08,160 --> 00:57:09,720
minutes left

1577
00:57:09,720 --> 00:57:12,180
um and in the demo you showed us the the

1578
00:57:12,180 --> 00:57:14,520
entry point uh injection with the

1579
00:57:14,520 --> 00:57:18,300
reversion what are other uh entry points

1580
00:57:18,300 --> 00:57:21,599
that could cause damage to uh a

1581
00:57:21,599 --> 00:57:23,940
kubernetes environment

1582
00:57:23,940 --> 00:57:25,500
um great question

1583
00:57:25,500 --> 00:57:26,760
um

1584
00:57:26,760 --> 00:57:29,400
probably our back misconfigurations so

1585
00:57:29,400 --> 00:57:31,140
that service account

1586
00:57:31,140 --> 00:57:32,220
um

1587
00:57:32,220 --> 00:57:34,619
if and creating a cluster you're giving

1588
00:57:34,619 --> 00:57:37,140
people access to the API and so equally

1589
00:57:37,140 --> 00:57:39,960
having the API the kubernetes API server

1590
00:57:39,960 --> 00:57:41,760
publicly available is a big No-No have

1591
00:57:41,760 --> 00:57:45,119
it hidden behind a VPN or anything to

1592
00:57:45,119 --> 00:57:46,680
ensure that you've got a level of trust

1593
00:57:46,680 --> 00:57:47,640
fit

1594
00:57:47,640 --> 00:57:49,980
um but yeah I'll backness configurations

1595
00:57:49,980 --> 00:57:52,500
looking at service accounts um Insider

1596
00:57:52,500 --> 00:57:54,420
attacks potentially and by Insider

1597
00:57:54,420 --> 00:57:56,640
attacks is this basis of um so I gave a

1598
00:57:56,640 --> 00:57:58,559
talk at kubecon about fret modeling and

1599
00:57:58,559 --> 00:58:00,300
also after following this talking fret

1600
00:58:00,300 --> 00:58:01,920
modeling as well

1601
00:58:01,920 --> 00:58:04,619
um yeah a bit there are those issues

1602
00:58:04,619 --> 00:58:06,540
where people can get leverage and these

1603
00:58:06,540 --> 00:58:09,119
Services accounts if gained access

1604
00:58:09,119 --> 00:58:11,160
um as we showed there once I spent about

1605
00:58:11,160 --> 00:58:13,380
privileged container if it was publicly

1606
00:58:13,380 --> 00:58:15,300
facing then I could have just added my

1607
00:58:15,300 --> 00:58:17,940
public key into the authorized keys and

1608
00:58:17,940 --> 00:58:19,680
then I could have sshed onto that node

1609
00:58:19,680 --> 00:58:21,900
in doing that my next phase of the

1610
00:58:21,900 --> 00:58:23,880
attack would be to kill that container

1611
00:58:23,880 --> 00:58:25,500
and look at running it on another node

1612
00:58:25,500 --> 00:58:27,599
and before you know it I've got SSH

1613
00:58:27,599 --> 00:58:29,160
access to all the machines across the

1614
00:58:29,160 --> 00:58:30,599
estate and then it's essentially game

1615
00:58:30,599 --> 00:58:33,300
over because again like I've been keep

1616
00:58:33,300 --> 00:58:34,859
going on I like to make things simple

1617
00:58:34,859 --> 00:58:35,819
for me I don't want to have to keep

1618
00:58:35,819 --> 00:58:37,260
spinning up reverse shells to be able to

1619
00:58:37,260 --> 00:58:39,680
game access

1620
00:58:39,780 --> 00:58:42,960
all right cool nice it was basically all

1621
00:58:42,960 --> 00:58:46,020
about keeping the least privilege and

1622
00:58:46,020 --> 00:58:48,480
don't do misconfiguration

1623
00:58:48,480 --> 00:58:50,520
I wish I wish it was more exciting at

1624
00:58:50,520 --> 00:58:53,339
times um but it's like this is

1625
00:58:53,339 --> 00:58:55,440
I guess it's just best practice it's

1626
00:58:55,440 --> 00:58:57,720
everything that we've been talking about

1627
00:58:57,720 --> 00:59:00,780
today yesterday Years Gone by it's

1628
00:59:00,780 --> 00:59:03,720
continuing that practice and um yeah

1629
00:59:03,720 --> 00:59:05,339
yeah

1630
00:59:05,339 --> 00:59:07,520
all right thanks Lewis

1631
00:59:07,520 --> 00:59:10,020
then I will wrap up and I want to thank

1632
00:59:10,020 --> 00:59:13,799
you for this uh interesting session so

1633
00:59:13,799 --> 00:59:16,140
thank you Lewis and

1634
00:59:16,140 --> 00:59:17,880
have a nice day

1635
00:59:17,880 --> 00:59:20,160
Andrew cheers last

1636
00:59:20,160 --> 00:59:22,819
bye-bye

