1
00:00:03,120 --> 00:00:06,839
good morning everybody and welcome to uh

2
00:00:06,839 --> 00:00:09,960
OS appsec EU virtual in the year of

3
00:00:09,960 --> 00:00:11,580
2022.

4
00:00:11,580 --> 00:00:14,700
um today we are going to talk about the

5
00:00:14,700 --> 00:00:18,000
web honey bot projects uh with with

6
00:00:18,000 --> 00:00:19,920
respect to OS

7
00:00:19,920 --> 00:00:21,900
um of course uh this is really important

8
00:00:21,900 --> 00:00:23,939
to understand on how we can get

9
00:00:23,939 --> 00:00:25,920
protected without any kind of

10
00:00:25,920 --> 00:00:28,340
information on the attack that that

11
00:00:28,340 --> 00:00:30,720
attackers can do on us right so it is

12
00:00:30,720 --> 00:00:32,279
really important for us to gather some

13
00:00:32,279 --> 00:00:33,719
kind of intelligence to prepare

14
00:00:33,719 --> 00:00:36,420
ourselves better on the approach that

15
00:00:36,420 --> 00:00:39,120
attackers can take and today we have uh

16
00:00:39,120 --> 00:00:42,239
Adrian Winkles who is going to take us

17
00:00:42,239 --> 00:00:44,280
through the Journey on how we can

18
00:00:44,280 --> 00:00:46,980
actually understand about the

19
00:00:46,980 --> 00:00:50,520
um the the path that attackers take to

20
00:00:50,520 --> 00:00:51,899
to do

21
00:00:51,899 --> 00:00:53,340
um to do attacks on different

22
00:00:53,340 --> 00:00:55,260
applications

23
00:00:55,260 --> 00:00:57,660
um and we'll explain also about the

24
00:00:57,660 --> 00:01:00,059
project that ovest has taken with

25
00:01:00,059 --> 00:01:03,420
respect to the Honeypot uh Adrian is a

26
00:01:03,420 --> 00:01:04,739
director of cyber security and

27
00:01:04,739 --> 00:01:08,040
networking research group uh in Anglia

28
00:01:08,040 --> 00:01:10,260
Ruskin University and has been

29
00:01:10,260 --> 00:01:13,320
associated with for quite some time and

30
00:01:13,320 --> 00:01:16,080
I would like uh Adrian to welcome and

31
00:01:16,080 --> 00:01:17,820
I'll give him the stage to introduce

32
00:01:17,820 --> 00:01:20,820
himself and also talk about Honeypot

33
00:01:20,820 --> 00:01:23,700
thread intelligence project

34
00:01:23,700 --> 00:01:25,740
um welcome Adrian okay thank you very

35
00:01:25,740 --> 00:01:27,960
much thank you and uh good morning

36
00:01:27,960 --> 00:01:30,720
everyone in UK time or good afternoon if

37
00:01:30,720 --> 00:01:33,780
you're elsewhere

38
00:01:33,780 --> 00:01:35,400
um to introduce myself

39
00:01:35,400 --> 00:01:38,880
um my name's Adrian minkos

40
00:01:38,880 --> 00:01:41,640
um I have been associated with both as a

41
00:01:41,640 --> 00:01:44,100
chapter leader for obas Cambridge and

42
00:01:44,100 --> 00:01:47,360
the OS Europe board member since

43
00:01:47,360 --> 00:01:50,700
2012 so about 10 years

44
00:01:50,700 --> 00:01:52,799
um and I would also involve another

45
00:01:52,799 --> 00:01:54,720
other professional bodies

46
00:01:54,720 --> 00:01:57,720
um sci-sec the bcs's uh cyber forensics

47
00:01:57,720 --> 00:01:59,820
special interest group

48
00:01:59,820 --> 00:02:00,600
um

49
00:02:00,600 --> 00:02:03,540
and my main role is one of um security

50
00:02:03,540 --> 00:02:06,840
research and an academic institution in

51
00:02:06,840 --> 00:02:10,039
Cambridge in the UK

52
00:02:10,080 --> 00:02:12,300
so

53
00:02:12,300 --> 00:02:15,720
more purpose is why

54
00:02:15,720 --> 00:02:19,620
honey pots or why Oprah oh the majority

55
00:02:19,620 --> 00:02:27,000
of web related traffic is HTTP and https

56
00:02:27,000 --> 00:02:27,959
um

57
00:02:27,959 --> 00:02:30,420
in our Modern Age of cloud if you like

58
00:02:30,420 --> 00:02:32,760
many of our SAS offerings have of course

59
00:02:32,760 --> 00:02:34,800
web applications

60
00:02:34,800 --> 00:02:37,700
so

61
00:02:37,860 --> 00:02:41,819
in a way we need to be very

62
00:02:41,819 --> 00:02:45,360
mindful of what web traffic is coming in

63
00:02:45,360 --> 00:02:47,519
and out of an organization how it can be

64
00:02:47,519 --> 00:02:51,000
abused and that not

65
00:02:51,000 --> 00:02:53,580
uh all traffic is genuine but you also

66
00:02:53,580 --> 00:02:56,280
need to understand of course that

67
00:02:56,280 --> 00:02:57,660
um

68
00:02:57,660 --> 00:02:59,280
we need to understand where the threats

69
00:02:59,280 --> 00:03:00,180
come from

70
00:03:00,180 --> 00:03:01,980
where

71
00:03:01,980 --> 00:03:04,920
um who could be an imposter all those

72
00:03:04,920 --> 00:03:06,720
sort of arguments

73
00:03:06,720 --> 00:03:07,500
um

74
00:03:07,500 --> 00:03:09,959
so you don't need to understand in the

75
00:03:09,959 --> 00:03:11,819
age of encryption what's going on inside

76
00:03:11,819 --> 00:03:15,120
those packets but we need to know if

77
00:03:15,120 --> 00:03:18,540
they're coming from a

78
00:03:18,540 --> 00:03:21,239
unusual source is it something that's

79
00:03:21,239 --> 00:03:23,940
been associated with previous attacks or

80
00:03:23,940 --> 00:03:28,440
previous uh harvesting of data or has it

81
00:03:28,440 --> 00:03:29,519
been

82
00:03:29,519 --> 00:03:31,440
um is there something about the way that

83
00:03:31,440 --> 00:03:33,900
a connection has been set up or the

84
00:03:33,900 --> 00:03:35,580
session IDs have been used or anything

85
00:03:35,580 --> 00:03:38,700
else so if you took the um K to the

86
00:03:38,700 --> 00:03:42,239
Center for Applied internet data they're

87
00:03:42,239 --> 00:03:45,180
saying that 85 ish of token into traffic

88
00:03:45,180 --> 00:03:49,640
is related to http and https

89
00:03:51,560 --> 00:03:54,060
modern day web architectures are

90
00:03:54,060 --> 00:03:56,480
complicated

91
00:03:58,080 --> 00:04:00,840
that also means that the attacks are

92
00:04:00,840 --> 00:04:02,700
going to be complicated

93
00:04:02,700 --> 00:04:05,480
so

94
00:04:06,480 --> 00:04:10,920
given the amount of PETA terabytes of

95
00:04:10,920 --> 00:04:13,019
data that is being exchanged in web

96
00:04:13,019 --> 00:04:15,780
conversations attacks that only work for

97
00:04:15,780 --> 00:04:17,880
example on point zero one percent of

98
00:04:17,880 --> 00:04:21,120
users are still valuable so knowing that

99
00:04:21,120 --> 00:04:24,240
threat intelligence is still useful

100
00:04:24,240 --> 00:04:27,600
because that might be the attack that

101
00:04:27,600 --> 00:04:29,759
compromises your organization

102
00:04:29,759 --> 00:04:32,000
foreign

103
00:04:34,800 --> 00:04:38,699
it isn't just simple HTTP it isn't just

104
00:04:38,699 --> 00:04:43,440
https we have multiple Stacks built for

105
00:04:43,440 --> 00:04:45,000
different platforms

106
00:04:45,000 --> 00:04:47,400
web applications mobile Voice Web

107
00:04:47,400 --> 00:04:49,440
Services

108
00:04:49,440 --> 00:04:52,040
um all the cloud related offerings

109
00:04:52,040 --> 00:04:57,540
we have things like XML X query

110
00:04:57,540 --> 00:04:58,400
um

111
00:04:58,400 --> 00:05:01,620
we have web architecture principles

112
00:05:01,620 --> 00:05:04,080
they're all built on top of one web

113
00:05:04,080 --> 00:05:06,720
so we have lots of different potential

114
00:05:06,720 --> 00:05:09,620
attack vectors

115
00:05:12,720 --> 00:05:15,600
that complexity of course means that the

116
00:05:15,600 --> 00:05:17,600
diversity of tax is high

117
00:05:17,600 --> 00:05:20,400
we can have an attacker on a server we

118
00:05:20,400 --> 00:05:22,380
can have an attacker on a client

119
00:05:22,380 --> 00:05:23,880
you can have an attacker on a client

120
00:05:23,880 --> 00:05:25,979
virus server you can have an attack on

121
00:05:25,979 --> 00:05:28,320
the server throw a server and of course

122
00:05:28,320 --> 00:05:31,039
we can have attackers on intermediers

123
00:05:31,039 --> 00:05:33,660
Proxy Systems

124
00:05:33,660 --> 00:05:35,639
um our

125
00:05:35,639 --> 00:05:39,360
web applications extend into Supply

126
00:05:39,360 --> 00:05:42,780
chains into customer relationship

127
00:05:42,780 --> 00:05:45,600
systems CRM systems and that

128
00:05:45,600 --> 00:05:49,740
um so the diverse attack angles

129
00:05:49,740 --> 00:05:51,600
just on

130
00:05:51,600 --> 00:05:53,699
main applications

131
00:05:53,699 --> 00:05:56,160
are also diverse as well so the attacks

132
00:05:56,160 --> 00:05:58,320
can come from so we need to learn as

133
00:05:58,320 --> 00:06:00,060
much information as possible is

134
00:06:00,060 --> 00:06:03,080
essentially what I'm saying

135
00:06:04,560 --> 00:06:06,060
so

136
00:06:06,060 --> 00:06:08,220
our

137
00:06:08,220 --> 00:06:10,560
first line of defense if you like for

138
00:06:10,560 --> 00:06:14,340
things like uh web applications is that

139
00:06:14,340 --> 00:06:15,780
good old friend the web application

140
00:06:15,780 --> 00:06:18,180
firewall the WAFF

141
00:06:18,180 --> 00:06:18,960
um

142
00:06:18,960 --> 00:06:21,000
and the wife of course comes in many

143
00:06:21,000 --> 00:06:23,100
different forms

144
00:06:23,100 --> 00:06:23,880
um

145
00:06:23,880 --> 00:06:26,580
essentially we're putting it as

146
00:06:26,580 --> 00:06:27,600
uh

147
00:06:27,600 --> 00:06:29,940
a barrier to look at this traffic is

148
00:06:29,940 --> 00:06:32,160
good which traffic is bad and block the

149
00:06:32,160 --> 00:06:36,120
bad it's in its very simplistic form

150
00:06:36,120 --> 00:06:36,960
um

151
00:06:36,960 --> 00:06:40,440
it tends to act as a proxy as well

152
00:06:40,440 --> 00:06:42,360
um

153
00:06:42,360 --> 00:06:45,360
but the Waf confront our web server it

154
00:06:45,360 --> 00:06:47,220
can front

155
00:06:47,220 --> 00:06:49,680
um our load balancer it actually used in

156
00:06:49,680 --> 00:06:53,100
many different ways the waft is our

157
00:06:53,100 --> 00:06:55,560
application Level defense

158
00:06:55,560 --> 00:06:58,340
essentially

159
00:06:59,340 --> 00:07:01,380
remember we can put the ref

160
00:07:01,380 --> 00:07:03,240
in line

161
00:07:03,240 --> 00:07:05,880
outline I mentioned we could put it on

162
00:07:05,880 --> 00:07:07,500
the web server

163
00:07:07,500 --> 00:07:11,340
itself it can use different types of

164
00:07:11,340 --> 00:07:13,620
Technologies it can use both signature

165
00:07:13,620 --> 00:07:17,160
detection and heuristics

166
00:07:17,160 --> 00:07:18,360
um the important thing about having a

167
00:07:18,360 --> 00:07:21,539
WAFF it's often driven by PCI

168
00:07:21,539 --> 00:07:25,259
requirements remember PCI DSS

169
00:07:25,259 --> 00:07:26,099
um

170
00:07:26,099 --> 00:07:28,319
payment card Industries digital security

171
00:07:28,319 --> 00:07:31,039
standard

172
00:07:31,199 --> 00:07:33,960
laughs aren't approved

173
00:07:33,960 --> 00:07:35,880
offering

174
00:07:35,880 --> 00:07:39,000
um they're expected as part of DC PCI

175
00:07:39,000 --> 00:07:41,819
DSS approval

176
00:07:41,819 --> 00:07:44,780
foreign

177
00:07:48,199 --> 00:07:51,599
can you not use it as an IDs well you

178
00:07:51,599 --> 00:07:54,000
potentially could use it in some forms

179
00:07:54,000 --> 00:07:56,099
as an IDs and that's perhaps where we're

180
00:07:56,099 --> 00:07:58,560
looking at the waft more

181
00:07:58,560 --> 00:08:01,139
as a honeypotter probe we'll come on to

182
00:08:01,139 --> 00:08:02,940
that in a second

183
00:08:02,940 --> 00:08:05,419
so

184
00:08:06,000 --> 00:08:07,139
particularly because we're talking about

185
00:08:07,139 --> 00:08:10,259
oasp we ought to talk about in terms of

186
00:08:10,259 --> 00:08:11,460
laughs

187
00:08:11,460 --> 00:08:13,319
mod security

188
00:08:13,319 --> 00:08:16,620
and but mod security is the open source

189
00:08:16,620 --> 00:08:18,960
web application firewall and perhaps the

190
00:08:18,960 --> 00:08:21,000
most popular web and it's been around

191
00:08:21,000 --> 00:08:23,699
since about 2002 in one form or another

192
00:08:23,699 --> 00:08:26,580
so a good 20 odd years

193
00:08:26,580 --> 00:08:27,599
um

194
00:08:27,599 --> 00:08:30,900
we are into version three now it's

195
00:08:30,900 --> 00:08:34,679
designed to be an open and of course it

196
00:08:34,679 --> 00:08:36,360
is supported by

197
00:08:36,360 --> 00:08:39,299
one of our assistant projects the oasp

198
00:08:39,299 --> 00:08:41,700
core rule set this was first developed

199
00:08:41,700 --> 00:08:46,800
in 2009 as a main providing free generic

200
00:08:46,800 --> 00:08:48,660
walls and what security in other words

201
00:08:48,660 --> 00:08:50,760
to be able to get people up and started

202
00:08:50,760 --> 00:08:53,399
with a standard set of rules for

203
00:08:53,399 --> 00:08:55,680
protecting your web applications without

204
00:08:55,680 --> 00:08:57,959
having to necessarily uh have the

205
00:08:57,959 --> 00:08:59,820
expertise to write your own to start

206
00:08:59,820 --> 00:09:01,320
with

207
00:09:01,320 --> 00:09:04,500
so a good starting point so what's in

208
00:09:04,500 --> 00:09:08,760
the um oscore all set it's a set of

209
00:09:08,760 --> 00:09:11,100
generic plug-and-play waffles

210
00:09:11,100 --> 00:09:14,339
you can choose your mode of operation it

211
00:09:14,339 --> 00:09:18,360
can be standard or anomaly scoring

212
00:09:18,360 --> 00:09:20,940
um and it has a it's expect a wide range

213
00:09:20,940 --> 00:09:23,220
of detection categories it can look at

214
00:09:23,220 --> 00:09:25,320
validating protocols

215
00:09:25,320 --> 00:09:28,980
uh identify malicious clients look for

216
00:09:28,980 --> 00:09:30,779
things like generic attack signatures

217
00:09:30,779 --> 00:09:34,080
known vulnerability signatures things

218
00:09:34,080 --> 00:09:36,899
like Trojans back doors

219
00:09:36,899 --> 00:09:38,279
um

220
00:09:38,279 --> 00:09:41,220
looking for data leakage outbound

221
00:09:41,220 --> 00:09:43,620
and things like

222
00:09:43,620 --> 00:09:44,180
um

223
00:09:44,180 --> 00:09:47,220
antivirus and denial of service

224
00:09:47,220 --> 00:09:50,100
scriptures for example

225
00:09:50,100 --> 00:09:52,200
so

226
00:09:52,200 --> 00:09:55,500
the CRS is traditional detection mode

227
00:09:55,500 --> 00:09:57,480
is

228
00:09:57,480 --> 00:10:00,180
a bit like IDs IPS mode with

229
00:10:00,180 --> 00:10:03,779
self-contained rules like HTTP itself

230
00:10:03,779 --> 00:10:06,120
those rules are stateless

231
00:10:06,120 --> 00:10:08,100
there's no intelligent shared between

232
00:10:08,100 --> 00:10:09,660
wrought

233
00:10:09,660 --> 00:10:11,880
um if a rule triggers it will execute

234
00:10:11,880 --> 00:10:14,880
either a disruptive or a locking action

235
00:10:14,880 --> 00:10:17,820
and that type of usage is easier for a

236
00:10:17,820 --> 00:10:19,740
new user to understand

237
00:10:19,740 --> 00:10:22,500
it's not optimal from a rules management

238
00:10:22,500 --> 00:10:24,480
perspective

239
00:10:24,480 --> 00:10:26,760
um how do you handle false positives or

240
00:10:26,760 --> 00:10:29,279
exceptions and again it's not optimal

241
00:10:29,279 --> 00:10:31,560
from the security perspective not every

242
00:10:31,560 --> 00:10:34,339
site has the same risk tolerance

243
00:10:34,339 --> 00:10:37,320
and lower security alerts for example

244
00:10:37,320 --> 00:10:40,880
can often largely be ignored

245
00:10:40,880 --> 00:10:42,420
foreign

246
00:10:42,420 --> 00:10:45,120
we're interested

247
00:10:45,120 --> 00:10:48,180
from a sort of Honeypot perspective from

248
00:10:48,180 --> 00:10:51,439
the event locking capability

249
00:10:51,779 --> 00:10:52,680
um

250
00:10:52,680 --> 00:10:55,819
you can log

251
00:10:56,040 --> 00:10:59,459
um using much using mud security

252
00:10:59,459 --> 00:11:02,060
um event data to both Apache error log

253
00:11:02,060 --> 00:11:06,180
and to a mod SEC audit log

254
00:11:06,180 --> 00:11:09,779
and that can be pushed out using the M

255
00:11:09,779 --> 00:11:13,440
log C routine whatever is HTT HTTP or

256
00:11:13,440 --> 00:11:15,660
Json

257
00:11:15,660 --> 00:11:20,160
um and you can also do a correlated mode

258
00:11:20,160 --> 00:11:22,219
um

259
00:11:22,260 --> 00:11:23,760
those basic rules are considered

260
00:11:23,760 --> 00:11:25,560
reference and don't necessarily go into

261
00:11:25,560 --> 00:11:27,440
the Apache error log

262
00:11:27,440 --> 00:11:30,899
and those

263
00:11:30,899 --> 00:11:32,940
loggings are analyzed both inbound and

264
00:11:32,940 --> 00:11:34,800
outbound event and generate special

265
00:11:34,800 --> 00:11:36,899
events and you can set it up in the

266
00:11:36,899 --> 00:11:38,940
individual configuration files through

267
00:11:38,940 --> 00:11:42,680
remote security to do that now

268
00:11:42,680 --> 00:11:47,040
what's the O wasp Honeypot project about

269
00:11:47,040 --> 00:11:49,800
what we really want to be able to do is

270
00:11:49,800 --> 00:11:53,100
take real-time detailed web application

271
00:11:53,100 --> 00:11:54,540
attacks

272
00:11:54,540 --> 00:11:57,120
report on them and generate threat

273
00:11:57,120 --> 00:11:59,399
reports to The Wider community

274
00:11:59,399 --> 00:12:02,640
so this is an open Community approach to

275
00:12:02,640 --> 00:12:05,880
making that threat intelligence data

276
00:12:05,880 --> 00:12:08,640
available to anyone who wants to use it

277
00:12:08,640 --> 00:12:11,459
so essentially this is a rebooted

278
00:12:11,459 --> 00:12:14,339
project it's a relaunched version of the

279
00:12:14,339 --> 00:12:17,600
earlier of the web

280
00:12:18,500 --> 00:12:22,380
uh Spider Labs trustworth project and

281
00:12:22,380 --> 00:12:24,360
we're moving away from the dedicated M

282
00:12:24,360 --> 00:12:25,620
log C

283
00:12:25,620 --> 00:12:27,899
uh based consoles

284
00:12:27,899 --> 00:12:29,779
because

285
00:12:29,779 --> 00:12:34,380
any type of reporting tool that relies

286
00:12:34,380 --> 00:12:37,800
on just one

287
00:12:37,800 --> 00:12:39,660
uh

288
00:12:39,660 --> 00:12:42,540
logging client or logging server an

289
00:12:42,540 --> 00:12:46,019
application is dependent on that client

290
00:12:46,019 --> 00:12:48,660
on that logging being able to be

291
00:12:48,660 --> 00:12:50,579
maintained

292
00:12:50,579 --> 00:12:55,560
um if the open source uh build isn't

293
00:12:55,560 --> 00:12:57,660
maintained or several of those aren't

294
00:12:57,660 --> 00:12:59,399
maintained then they'll be running to

295
00:12:59,399 --> 00:13:01,560
the project that you can log some but it

296
00:13:01,560 --> 00:13:03,420
isn't being collected properly so that's

297
00:13:03,420 --> 00:13:05,459
that's where we That's the basis of

298
00:13:05,459 --> 00:13:07,800
where we've come on from

299
00:13:07,800 --> 00:13:10,260
so the original project was

300
00:13:10,260 --> 00:13:12,959
um to have

301
00:13:12,959 --> 00:13:17,160
essentially VM uh

302
00:13:17,160 --> 00:13:20,519
mod Security based honey pots attached

303
00:13:20,519 --> 00:13:22,459
to dummy

304
00:13:22,459 --> 00:13:26,220
Apache web service on Virtual machines

305
00:13:26,220 --> 00:13:30,600
hosted in data centers and

306
00:13:30,600 --> 00:13:33,180
they all pointed back to a mod security

307
00:13:33,180 --> 00:13:35,000
console host

308
00:13:35,000 --> 00:13:38,220
uh where a dedicated

309
00:13:38,220 --> 00:13:39,320
um

310
00:13:39,320 --> 00:13:43,200
amnoxy based application uh would pull

311
00:13:43,200 --> 00:13:45,360
the probe data together

312
00:13:45,360 --> 00:13:47,760
and be able to do correlations and those

313
00:13:47,760 --> 00:13:49,260
sort of things of the threat

314
00:13:49,260 --> 00:13:50,880
intelligence support together

315
00:13:50,880 --> 00:13:53,940
problem is you might want to have

316
00:13:53,940 --> 00:13:57,920
multiple platforms a virtual machine is

317
00:13:57,920 --> 00:14:01,740
is Deployable in Cloud environments it's

318
00:14:01,740 --> 00:14:04,560
Deployable in data centers but it's not

319
00:14:04,560 --> 00:14:06,860
the only platform you might want to use

320
00:14:06,860 --> 00:14:11,880
using a m log C based

321
00:14:11,880 --> 00:14:13,220
um

322
00:14:13,220 --> 00:14:16,040
proprietary it's still a it's still a

323
00:14:16,040 --> 00:14:19,380
documented standard but

324
00:14:19,380 --> 00:14:21,779
um the development of a dedicated

325
00:14:21,779 --> 00:14:22,980
console

326
00:14:22,980 --> 00:14:25,920
perhaps problems you really want to go

327
00:14:25,920 --> 00:14:29,160
to feed into some more generic tool to

328
00:14:29,160 --> 00:14:31,620
make the threat intelligence data more

329
00:14:31,620 --> 00:14:34,680
useful and and to last the problem we

330
00:14:34,680 --> 00:14:36,300
have when we inherited the project was

331
00:14:36,300 --> 00:14:38,639
that the

332
00:14:38,639 --> 00:14:41,160
build for the probes there but the

333
00:14:41,160 --> 00:14:43,019
consoles weren't

334
00:14:43,019 --> 00:14:45,300
so we've had to sort of re-engineer what

335
00:14:45,300 --> 00:14:47,000
we wanted to do

336
00:14:47,000 --> 00:14:49,440
so as I said before the older event

337
00:14:49,440 --> 00:14:51,480
consoles were broken open source product

338
00:14:51,480 --> 00:14:53,100
there was no current development meant

339
00:14:53,100 --> 00:14:54,360
started again

340
00:14:54,360 --> 00:14:56,639
the deploying

341
00:14:56,639 --> 00:14:59,940
the virtual machine at an OVA yes it's

342
00:14:59,940 --> 00:15:02,940
easy deployment in cloud and data center

343
00:15:02,940 --> 00:15:05,820
environments but

344
00:15:05,820 --> 00:15:08,880
you want to think about more

345
00:15:08,880 --> 00:15:10,519
molten method deployment

346
00:15:10,519 --> 00:15:13,320
containerization Docker for example and

347
00:15:13,320 --> 00:15:14,519
we need to think about putting the

348
00:15:14,519 --> 00:15:16,740
threat intelligence into some sort of

349
00:15:16,740 --> 00:15:19,260
system that we shared something like

350
00:15:19,260 --> 00:15:23,300
misp as a as a possible example

351
00:15:23,300 --> 00:15:27,600
so our proof of concept layout

352
00:15:27,600 --> 00:15:29,760
um was

353
00:15:29,760 --> 00:15:32,339
a number of web clients being able to

354
00:15:32,339 --> 00:15:34,620
attack a

355
00:15:34,620 --> 00:15:37,620
dummy

356
00:15:37,980 --> 00:15:41,160
web application Apache web server sits

357
00:15:41,160 --> 00:15:43,860
there with Mod security behind it in the

358
00:15:43,860 --> 00:15:45,620
CRS rules

359
00:15:45,620 --> 00:15:50,220
those that mod SEC audit logs are pushed

360
00:15:50,220 --> 00:15:51,779
into elk

361
00:15:51,779 --> 00:15:55,139
essentially as Json using elk a

362
00:15:55,139 --> 00:15:58,500
combination of logs Dash and kibana

363
00:15:58,500 --> 00:16:03,180
um to format it and push it as honey but

364
00:16:03,180 --> 00:16:05,579
honey pot information and push it as fit

365
00:16:05,579 --> 00:16:07,860
intelligent into misc and the idea was

366
00:16:07,860 --> 00:16:09,920
that we can deploy some of this as

367
00:16:09,920 --> 00:16:13,560
Docker containers so the build becomes

368
00:16:13,560 --> 00:16:17,040
that more easily and multiple Deployable

369
00:16:17,040 --> 00:16:19,219
foreign

370
00:16:20,300 --> 00:16:23,279
so one of the bits of work we've done is

371
00:16:23,279 --> 00:16:26,519
building honey traps and Reporting fed

372
00:16:26,519 --> 00:16:29,940
intelligence so

373
00:16:30,959 --> 00:16:33,959
being able to trap attacker even an

374
00:16:33,959 --> 00:16:36,139
automated attacker doing certain things

375
00:16:36,139 --> 00:16:38,459
and be able to

376
00:16:38,459 --> 00:16:40,620
um if you like

377
00:16:40,620 --> 00:16:43,500
lure them with a certain amount of bait

378
00:16:43,500 --> 00:16:45,660
identified the attacker from his or her

379
00:16:45,660 --> 00:16:47,459
actions and gathering information so

380
00:16:47,459 --> 00:16:50,719
from the logs effectively

381
00:16:52,139 --> 00:16:55,320
um so what we plan to do with

382
00:16:55,320 --> 00:16:59,160
how many traps is adding

383
00:16:59,160 --> 00:17:02,540
fake listening ports

384
00:17:02,699 --> 00:17:04,619
um and if an attacker is trying to

385
00:17:04,619 --> 00:17:06,839
access them then there might be a

386
00:17:06,839 --> 00:17:09,500
presumption they could be malicious

387
00:17:09,500 --> 00:17:12,959
adding fake entries in robot.text and if

388
00:17:12,959 --> 00:17:15,299
anyone acts as this is that restricted

389
00:17:15,299 --> 00:17:19,500
location again it raises suspicions

390
00:17:19,500 --> 00:17:21,119
um uh

391
00:17:21,119 --> 00:17:23,699
adding fake HTML comments and if someone

392
00:17:23,699 --> 00:17:26,819
reacts to those HTML comments again you

393
00:17:26,819 --> 00:17:29,580
could tag as potentially being malicious

394
00:17:29,580 --> 00:17:32,720
if we add fake hidden form Fields

395
00:17:32,720 --> 00:17:34,799
Triggers on them means someone's looking

396
00:17:34,799 --> 00:17:36,720
into the HTML and trying to action

397
00:17:36,720 --> 00:17:37,919
things

398
00:17:37,919 --> 00:17:40,500
and adding fake cookie data and if the

399
00:17:40,500 --> 00:17:42,539
cookies are manipulated again it could

400
00:17:42,539 --> 00:17:43,799
be

401
00:17:43,799 --> 00:17:47,580
confer this uh malicious so

402
00:17:47,580 --> 00:17:49,799
like if we're doing

403
00:17:49,799 --> 00:17:50,640
um

404
00:17:50,640 --> 00:17:52,100
foreign

405
00:17:52,100 --> 00:17:54,240
listening ports

406
00:17:54,240 --> 00:17:56,039
um

407
00:17:56,039 --> 00:17:58,620
we can generate an alert on traffic

408
00:17:58,620 --> 00:18:01,500
received on a fake Port uh we can log

409
00:18:01,500 --> 00:18:04,980
that with the uh Associated client

410
00:18:04,980 --> 00:18:07,559
that's made that's made the um request

411
00:18:07,559 --> 00:18:10,860
this IP address etc etc

412
00:18:10,860 --> 00:18:12,179
um

413
00:18:12,179 --> 00:18:14,760
we can identify

414
00:18:14,760 --> 00:18:16,820
um

415
00:18:17,480 --> 00:18:20,760
credentials that have been used in

416
00:18:20,760 --> 00:18:24,240
accessing the robot.txt file

417
00:18:24,240 --> 00:18:27,240
um has someone tried attack on a

418
00:18:27,240 --> 00:18:29,400
location that you wouldn't normally and

419
00:18:29,400 --> 00:18:32,840
associate with being accessed

420
00:18:32,880 --> 00:18:36,120
um again are we seeing people

421
00:18:36,120 --> 00:18:40,200
um manipulating fake HTML comments and

422
00:18:40,200 --> 00:18:42,179
we can then generate a Honey Trap alert

423
00:18:42,179 --> 00:18:45,900
that that looks that looks at that

424
00:18:45,900 --> 00:18:46,980
again

425
00:18:46,980 --> 00:18:49,340
hidden form fields

426
00:18:49,340 --> 00:18:52,260
we can see some of the attacks that come

427
00:18:52,260 --> 00:18:55,620
in and access some of those

428
00:18:55,620 --> 00:18:56,280
um

429
00:18:56,280 --> 00:18:58,140
types of

430
00:18:58,140 --> 00:19:01,740
manipulation and again fake cookie data

431
00:19:01,740 --> 00:19:04,500
is there as well and if people are

432
00:19:04,500 --> 00:19:07,559
accessing that those sort of files

433
00:19:07,559 --> 00:19:09,660
so those are cookies

434
00:19:09,660 --> 00:19:11,160
um what are they doing with them

435
00:19:11,160 --> 00:19:13,980
why should they be accessing them uh in

436
00:19:13,980 --> 00:19:14,940
that way

437
00:19:14,940 --> 00:19:16,679
so

438
00:19:16,679 --> 00:19:19,140
each of those

439
00:19:19,140 --> 00:19:22,559
types of alerts as well as the standard

440
00:19:22,559 --> 00:19:24,000
other sort of things that come in Via

441
00:19:24,000 --> 00:19:27,600
CRS can be directed via

442
00:19:27,600 --> 00:19:30,720
log station kibana using elasticsearches

443
00:19:30,720 --> 00:19:33,900
out community and pushed into misp a

444
00:19:33,900 --> 00:19:36,000
misp is ideal because it's there as a

445
00:19:36,000 --> 00:19:39,120
threatened Sheldon sharing platform

446
00:19:39,120 --> 00:19:40,740
um and that's the way in which we can

447
00:19:40,740 --> 00:19:43,500
make threat intelligence available

448
00:19:43,500 --> 00:19:45,720
and part of the work we want to do is

449
00:19:45,720 --> 00:19:49,020
maybe adapt that into

450
00:19:49,020 --> 00:19:51,360
um other formats like sticks etc for

451
00:19:51,360 --> 00:19:54,260
sharing threat intelligence a bit wider

452
00:19:54,260 --> 00:19:57,720
so some of the other ongoing and future

453
00:19:57,720 --> 00:19:59,880
work that we're looking at doing

454
00:19:59,880 --> 00:20:01,940
um

455
00:20:03,419 --> 00:20:05,820
so we've done some of the setup proof

456
00:20:05,820 --> 00:20:08,039
content to understand how mod post

457
00:20:08,039 --> 00:20:09,660
security interacts with a receiving

458
00:20:09,660 --> 00:20:12,059
console so we've done the VMS we've got

459
00:20:12,059 --> 00:20:14,940
the docker to store logs from multiple

460
00:20:14,940 --> 00:20:16,740
probes that works we can do

461
00:20:16,740 --> 00:20:19,919
multi-dockage deployments

462
00:20:19,919 --> 00:20:23,000
um we want to look at

463
00:20:23,520 --> 00:20:24,720
um

464
00:20:24,720 --> 00:20:26,880
Contour options to visualize that threat

465
00:20:26,880 --> 00:20:30,419
data we looked at things like

466
00:20:30,419 --> 00:20:33,960
the mod security audit console waffle

467
00:20:33,960 --> 00:20:36,919
um all of them had scripts for single

468
00:20:36,919 --> 00:20:39,120
single use probe to multiple approach

469
00:20:39,120 --> 00:20:42,299
but they're broken in terms of Open

470
00:20:42,299 --> 00:20:47,299
Source deployments so we're looking at

471
00:20:47,299 --> 00:20:50,880
the elk type approach to pull that

472
00:20:50,880 --> 00:20:52,740
information together and we have a

473
00:20:52,740 --> 00:20:55,679
prefer concept that does that

474
00:20:55,679 --> 00:20:56,520
um

475
00:20:56,520 --> 00:20:59,280
we've developed a mechanism to convert

476
00:20:59,280 --> 00:21:02,460
the original stored data from MySQL into

477
00:21:02,460 --> 00:21:04,919
Json

478
00:21:04,919 --> 00:21:07,380
and also to provide a mechanism to

479
00:21:07,380 --> 00:21:11,760
convert the M mode security audit log

480
00:21:11,760 --> 00:21:12,539
um

481
00:21:12,539 --> 00:21:14,460
into a new format

482
00:21:14,460 --> 00:21:17,700
and using elasticsearch blog suggestion

483
00:21:17,700 --> 00:21:20,940
keyboard we can visualize data

484
00:21:20,940 --> 00:21:24,320
um Miss now provides a way of

485
00:21:24,320 --> 00:21:26,940
visualizing and sharing it in a better

486
00:21:26,940 --> 00:21:29,179
way

487
00:21:30,000 --> 00:21:32,280
so

488
00:21:32,280 --> 00:21:35,520
what we want to be able to do is provide

489
00:21:35,520 --> 00:21:36,480
um

490
00:21:36,480 --> 00:21:39,059
a further mechanism to forward output

491
00:21:39,059 --> 00:21:41,720
into a threat intelligence system

492
00:21:41,720 --> 00:21:45,000
essentially using sticks format into

493
00:21:45,000 --> 00:21:46,919
something like the Miss project

494
00:21:46,919 --> 00:21:49,620
so we can share that threat data from

495
00:21:49,620 --> 00:21:52,559
multiple probes and honeypots maybe even

496
00:21:52,559 --> 00:21:54,900
taxi format

497
00:21:54,900 --> 00:21:56,760
um but we need to do in a fallback that

498
00:21:56,760 --> 00:21:58,740
Miss can deal with

499
00:21:58,740 --> 00:22:01,620
we're also looking at uh new approaches

500
00:22:01,620 --> 00:22:04,020
for log transfers

501
00:22:04,020 --> 00:22:04,679
um

502
00:22:04,679 --> 00:22:06,960
Json is what we're experimenting with at

503
00:22:06,960 --> 00:22:08,400
the moment

504
00:22:08,400 --> 00:22:12,120
um and as well as improving the Honeypot

505
00:22:12,120 --> 00:22:13,980
to start using

506
00:22:13,980 --> 00:22:15,240
um

507
00:22:15,240 --> 00:22:17,520
more of the CRS version three and three

508
00:22:17,520 --> 00:22:19,559
point X features

509
00:22:19,559 --> 00:22:20,100
um

510
00:22:20,100 --> 00:22:23,340
I've worked with is developing a new

511
00:22:23,340 --> 00:22:25,799
alternative small front Honeypot probe

512
00:22:25,799 --> 00:22:28,080
maybe based on small Hardware devices

513
00:22:28,080 --> 00:22:31,200
we've got a Docker version

514
00:22:31,200 --> 00:22:31,860
um

515
00:22:31,860 --> 00:22:34,080
big piece of work we need to do is maybe

516
00:22:34,080 --> 00:22:35,880
a machine learning approach to be able

517
00:22:35,880 --> 00:22:37,320
to

518
00:22:37,320 --> 00:22:38,640
um

519
00:22:38,640 --> 00:22:40,799
look at the threat intelligence and

520
00:22:40,799 --> 00:22:42,240
maybe

521
00:22:42,240 --> 00:22:43,020
um

522
00:22:43,020 --> 00:22:44,760
you know ultimately be able to rewrite

523
00:22:44,760 --> 00:22:46,559
some of the rules so there's a an

524
00:22:46,559 --> 00:22:49,919
Adaptive feedback routine so we can

525
00:22:49,919 --> 00:22:51,539
um actually

526
00:22:51,539 --> 00:22:54,179
Challenge and change what the probes are

527
00:22:54,179 --> 00:22:56,360
detecting

528
00:22:56,360 --> 00:23:01,140
so if there are four main stages

529
00:23:01,140 --> 00:23:03,179
um that I think of work that we want to

530
00:23:03,179 --> 00:23:04,039
do

531
00:23:04,039 --> 00:23:06,419
first one is if you like some form of

532
00:23:06,419 --> 00:23:09,240
data massage so we want to put the

533
00:23:09,240 --> 00:23:11,280
output into a threat intelligent format

534
00:23:11,280 --> 00:23:13,200
sticks and taxi would seem the most

535
00:23:13,200 --> 00:23:15,179
obvious

536
00:23:15,179 --> 00:23:18,840
um we need to develop a probe management

537
00:23:18,840 --> 00:23:20,100
platform

538
00:23:20,100 --> 00:23:22,440
whereby we can manage multiple

539
00:23:22,440 --> 00:23:24,419
deployments we've already tested that we

540
00:23:24,419 --> 00:23:27,000
can deploy multiple Docker and VM

541
00:23:27,000 --> 00:23:28,740
instances and getting it all reported

542
00:23:28,740 --> 00:23:31,380
back to the same Cabana and logs Dash

543
00:23:31,380 --> 00:23:32,700
elk

544
00:23:32,700 --> 00:23:34,380
platform but we need to be able to

545
00:23:34,380 --> 00:23:36,659
manage those individual probes whether

546
00:23:36,659 --> 00:23:40,559
it's to update CRS or to perform other

547
00:23:40,559 --> 00:23:44,539
sort of housekeeping operations

548
00:23:45,000 --> 00:23:46,020
um

549
00:23:46,020 --> 00:23:48,419
also the format the probe already

550
00:23:48,419 --> 00:23:50,580
mentioned New World Tour alternative

551
00:23:50,580 --> 00:23:52,799
small footprint Honeypot and probe

552
00:23:52,799 --> 00:23:56,880
formats and also we want to do those

553
00:23:56,880 --> 00:23:59,460
machine learning enabled rules be able

554
00:23:59,460 --> 00:24:02,460
to have that feedback mechanism

555
00:24:02,460 --> 00:24:05,400
um from the

556
00:24:05,400 --> 00:24:07,980
uh Community threat intelligence that

557
00:24:07,980 --> 00:24:10,080
can be fed back

558
00:24:10,080 --> 00:24:13,500
um to enhance the rules so this might be

559
00:24:13,500 --> 00:24:16,620
a machine learning enabled changes to

560
00:24:16,620 --> 00:24:19,620
CRS for example this is a a bit more

561
00:24:19,620 --> 00:24:22,879
wider and ambitious project

562
00:24:24,140 --> 00:24:27,960
so taking those small parts what we want

563
00:24:27,960 --> 00:24:33,120
to do is is develop a a probe management

564
00:24:33,120 --> 00:24:34,799
solution to manage those probes either

565
00:24:34,799 --> 00:24:36,179
svms

566
00:24:36,179 --> 00:24:38,280
Docker images or small footprint

567
00:24:38,280 --> 00:24:40,140
HoneyCuts

568
00:24:40,140 --> 00:24:40,980
um

569
00:24:40,980 --> 00:24:43,799
where we can either have a push pull

570
00:24:43,799 --> 00:24:47,100
approach use an API or use a script to

571
00:24:47,100 --> 00:24:49,559
manage those Pros but multiple probes

572
00:24:49,559 --> 00:24:53,640
need some sort of of management features

573
00:24:53,640 --> 00:24:55,580
foreign

574
00:24:55,580 --> 00:24:58,799
if you want further information we have

575
00:24:58,799 --> 00:25:01,400
a

576
00:25:02,100 --> 00:25:05,539
GitHub repository uh for the OS highbot

577
00:25:05,539 --> 00:25:08,159
we have some project pages

578
00:25:08,159 --> 00:25:09,600
and we also obviously have a stack

579
00:25:09,600 --> 00:25:11,039
Channel

580
00:25:11,039 --> 00:25:12,960
um we have a

581
00:25:12,960 --> 00:25:14,820
I have a couple of students working on

582
00:25:14,820 --> 00:25:18,059
the probe management over the next few

583
00:25:18,059 --> 00:25:19,799
months but any other people that wish to

584
00:25:19,799 --> 00:25:23,220
contribute to the GitHub repository or I

585
00:25:23,220 --> 00:25:25,740
think they can help yeah please

586
00:25:25,740 --> 00:25:28,980
um get in touch and I'd be more than

587
00:25:28,980 --> 00:25:31,799
happy to hear from you if you need my

588
00:25:31,799 --> 00:25:34,140
personal Twitter or my email address

589
00:25:34,140 --> 00:25:36,779
and I'm open for questions

590
00:25:36,779 --> 00:25:40,080
yeah okay if there are no questions I

591
00:25:40,080 --> 00:25:41,940
would like to thank Adrian and everybody

592
00:25:41,940 --> 00:25:44,640
else for attending the session

593
00:25:44,640 --> 00:25:46,559
um of course you can reach out to Adrian

594
00:25:46,559 --> 00:25:50,039
anytime at his Twitter account or the

595
00:25:50,039 --> 00:25:52,860
email and on the screen

596
00:25:52,860 --> 00:25:55,500
have a wonderful day and enjoy other

597
00:25:55,500 --> 00:26:00,320
sessions as well thank you thank you

