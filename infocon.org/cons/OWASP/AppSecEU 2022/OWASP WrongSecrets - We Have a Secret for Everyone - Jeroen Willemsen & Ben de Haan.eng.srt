1
00:00:03,540 --> 00:00:06,120
hi everyone welcome to the Builder track

2
00:00:06,120 --> 00:00:09,059
I am Muskan mangla I volunteer in the OS

3
00:00:09,059 --> 00:00:10,559
Community I'll be moderating this

4
00:00:10,559 --> 00:00:12,960
session during the next 45 minutes

5
00:00:12,960 --> 00:00:16,020
you'll be listening to Geron and Ben

6
00:00:16,020 --> 00:00:19,260
present over strong secrets we have a

7
00:00:19,260 --> 00:00:21,539
secret for everyone please submit any

8
00:00:21,539 --> 00:00:22,920
questions you have during this session

9
00:00:22,920 --> 00:00:25,260
in the QA tab just to the right of this

10
00:00:25,260 --> 00:00:27,539
video in the Huawei platform I'll be

11
00:00:27,539 --> 00:00:29,220
asking the speakers your questions in

12
00:00:29,220 --> 00:00:30,359
the last 10 minutes of the session

13
00:00:30,359 --> 00:00:32,520
please note that the chart function is

14
00:00:32,520 --> 00:00:35,040
disabled for the attendees but you can

15
00:00:35,040 --> 00:00:36,960
leave comments and chat using the chat

16
00:00:36,960 --> 00:00:38,399
tab in the Huawei

17
00:00:38,399 --> 00:00:40,260
so well I'll introduce the speakers

18
00:00:40,260 --> 00:00:43,500
briefly Geron is a typical security jack

19
00:00:43,500 --> 00:00:45,600
of all trades as a Hands-On security

20
00:00:45,600 --> 00:00:48,300
architect with a knack for or to

21
00:00:48,300 --> 00:00:50,820
Automation and risk management Geron has

22
00:00:50,820 --> 00:00:52,440
been involved in the various obas

23
00:00:52,440 --> 00:00:55,500
projects now focusing on obas uh wrong

24
00:00:55,500 --> 00:00:57,719
Secrets Ben is a freelance security

25
00:00:57,719 --> 00:01:00,180
consultant and engineer when specially

26
00:01:00,180 --> 00:01:02,280
specialized special Specialties are

27
00:01:02,280 --> 00:01:04,379
architecting and implementing Cloud

28
00:01:04,379 --> 00:01:06,960
security and building secure cicd

29
00:01:06,960 --> 00:01:09,960
environments in agile devops and SRE

30
00:01:09,960 --> 00:01:11,159
cultures

31
00:01:11,159 --> 00:01:14,159
now handing over to you uh Jaron and Ben

32
00:01:14,159 --> 00:01:16,979
uh for forgive me if I pronounce your

33
00:01:16,979 --> 00:01:20,759
names uh wrong so yeah over to you guys

34
00:01:20,759 --> 00:01:23,700
you did awesome thank you so much for

35
00:01:23,700 --> 00:01:25,799
introducing us let's start sharing some

36
00:01:25,799 --> 00:01:28,680
screens see the Technologies with us

37
00:01:28,680 --> 00:01:30,540
all right all right all right I think

38
00:01:30,540 --> 00:01:33,720
you can see it now so welcome everybody

39
00:01:33,720 --> 00:01:35,759
um to oval from Secrets

40
00:01:35,759 --> 00:01:37,500
um we hope to uh entertain you a little

41
00:01:37,500 --> 00:01:39,720
bit with our project in the upcoming 45

42
00:01:39,720 --> 00:01:42,360
to 60 minutes

43
00:01:42,360 --> 00:01:44,340
um and with content I think we can be

44
00:01:44,340 --> 00:01:46,200
very short about um about our

45
00:01:46,200 --> 00:01:48,060
introduction for ourselves

46
00:01:48,060 --> 00:01:48,900
um

47
00:01:48,900 --> 00:01:50,960
so I'm Joan

48
00:01:50,960 --> 00:01:53,760
and here right next to me is uh

49
00:01:53,760 --> 00:01:55,079
[Music]

50
00:01:55,079 --> 00:01:57,659
yeah Ben

51
00:01:57,659 --> 00:02:00,140
that's right

52
00:02:00,259 --> 00:02:02,820
and uh let's move ahead so we have more

53
00:02:02,820 --> 00:02:04,560
time for awesome content

54
00:02:04,560 --> 00:02:05,939
so

55
00:02:05,939 --> 00:02:06,780
um

56
00:02:06,780 --> 00:02:09,598
let's start with a little bull uh this

57
00:02:09,598 --> 00:02:11,340
side of the screen at least for me I

58
00:02:11,340 --> 00:02:12,420
hope it's also for you when I write

59
00:02:12,420 --> 00:02:13,800
inside the screen there is this

60
00:02:13,800 --> 00:02:16,080
beautiful uh pool uh where you can fill

61
00:02:16,080 --> 00:02:18,060
in uh where did you find secretive in

62
00:02:18,060 --> 00:02:20,580
the projects you had access to

63
00:02:20,580 --> 00:02:23,459
um and well I can't access it on my

64
00:02:23,459 --> 00:02:24,720
computer and show it live because then

65
00:02:24,720 --> 00:02:26,640
we get the funny audio loopback but

66
00:02:26,640 --> 00:02:29,760
right now I'll refresh it again I see

67
00:02:29,760 --> 00:02:33,540
about 34 responses answers

68
00:02:33,540 --> 00:02:35,580
right over here

69
00:02:35,580 --> 00:02:36,900
um let's see if I can show it like that

70
00:02:36,900 --> 00:02:38,400
okay this is a bit funny I don't think

71
00:02:38,400 --> 00:02:39,900
that works very well

72
00:02:39,900 --> 00:02:42,000
um but basically what we can tell is

73
00:02:42,000 --> 00:02:44,220
that a lot of people found secrets in

74
00:02:44,220 --> 00:02:45,840
git

75
00:02:45,840 --> 00:02:48,120
um uh a lot of people found secretion

76
00:02:48,120 --> 00:02:50,340
and farce in secret managers in Cloud

77
00:02:50,340 --> 00:02:52,200
vendor Solutions but also in the cicd

78
00:02:52,200 --> 00:02:54,300
pipeline and a few of them found them in

79
00:02:54,300 --> 00:02:55,800
Docker containers and libraries

80
00:02:55,800 --> 00:02:57,660
executables or in workload schedulers

81
00:02:57,660 --> 00:02:59,459
all right awesome well that information

82
00:02:59,459 --> 00:03:01,700
I think we all touch stuff a little bit

83
00:03:01,700 --> 00:03:04,560
let's get ready to do stuff

84
00:03:04,560 --> 00:03:06,000
so

85
00:03:06,000 --> 00:03:07,440
um the first question of course would

86
00:03:07,440 --> 00:03:09,540
then be if we go to this poll is hey hey

87
00:03:09,540 --> 00:03:11,159
but um

88
00:03:11,159 --> 00:03:14,280
what are secrets what can be a secret so

89
00:03:14,280 --> 00:03:15,780
here's a few examples of possible

90
00:03:15,780 --> 00:03:17,459
Secrets right again there can be plenty

91
00:03:17,459 --> 00:03:18,959
of course

92
00:03:18,959 --> 00:03:21,720
um you can think of uh uh various things

93
00:03:21,720 --> 00:03:26,099
like uh uh uh um your password which

94
00:03:26,099 --> 00:03:28,440
makes total sense private Keys whether

95
00:03:28,440 --> 00:03:31,379
for TLS configuration gpg

96
00:03:31,379 --> 00:03:33,239
um I am access keys for your Cloud

97
00:03:33,239 --> 00:03:34,319
vendor

98
00:03:34,319 --> 00:03:35,700
um

99
00:03:35,700 --> 00:03:38,760
um but then of course also API keys or

100
00:03:38,760 --> 00:03:42,780
um a little bit less easy OTP seats

101
00:03:42,780 --> 00:03:46,500
um MFA backup codes uh 2fa code for as

102
00:03:46,500 --> 00:03:49,200
long as they're valid uh QR codes to

103
00:03:49,200 --> 00:03:50,940
sign on easily and stuff like that and

104
00:03:50,940 --> 00:03:52,920
all of a sudden that it starts to grow

105
00:03:52,920 --> 00:03:54,900
and grow and grow so apparently there is

106
00:03:54,900 --> 00:03:57,959
quite a few Secrets out there

107
00:03:57,959 --> 00:03:59,220
so

108
00:03:59,220 --> 00:04:00,720
um then the next question would of

109
00:04:00,720 --> 00:04:02,280
course be

110
00:04:02,280 --> 00:04:03,620
um

111
00:04:03,620 --> 00:04:05,760
if you had to rotate all your

112
00:04:05,760 --> 00:04:07,799
organization secrets

113
00:04:07,799 --> 00:04:11,459
would you actually know where they are

114
00:04:11,459 --> 00:04:13,860
um and not not just what you know

115
00:04:13,860 --> 00:04:15,900
well your team lead decided that it

116
00:04:15,900 --> 00:04:18,000
should be or where your season decided

117
00:04:18,000 --> 00:04:19,798
they should be or your lead architect or

118
00:04:19,798 --> 00:04:21,000
whoever books you're voting your

119
00:04:21,000 --> 00:04:22,860
organization but also where everybody

120
00:04:22,860 --> 00:04:25,320
else eventually puts those Secrets which

121
00:04:25,320 --> 00:04:28,320
might be in different places basically

122
00:04:28,320 --> 00:04:30,060
um and they actually know their purpose

123
00:04:30,060 --> 00:04:33,240
remember how um uh Jack from the other

124
00:04:33,240 --> 00:04:36,360
unit basically just um uh committed this

125
00:04:36,360 --> 00:04:38,100
password thing do you actually know

126
00:04:38,100 --> 00:04:40,320
where this is for

127
00:04:40,320 --> 00:04:43,080
um more importantly

128
00:04:43,080 --> 00:04:44,759
um can you rotate it timely when you're

129
00:04:44,759 --> 00:04:46,620
compromised so if you know earlier

130
00:04:46,620 --> 00:04:49,680
secrets are get and rotate it and do you

131
00:04:49,680 --> 00:04:52,020
actually know well lots of other things

132
00:04:52,020 --> 00:04:53,759
about your secrets who lost touch them

133
00:04:53,759 --> 00:04:56,460
stuff like that so

134
00:04:56,460 --> 00:04:58,320
for this it's again time for a little

135
00:04:58,320 --> 00:05:00,300
poll again at the right hand side of

136
00:05:00,300 --> 00:05:02,100
your screen there is a second bowl which

137
00:05:02,100 --> 00:05:03,720
asks you do you know the location for

138
00:05:03,720 --> 00:05:06,479
the secrets in your organization

139
00:05:06,479 --> 00:05:08,340
so this pool has been on for quite a

140
00:05:08,340 --> 00:05:10,860
while and we have quite a few responses

141
00:05:10,860 --> 00:05:13,320
from what I can tell as well

142
00:05:13,320 --> 00:05:16,199
um oh it's still growing pretty cool so

143
00:05:16,199 --> 00:05:18,840
let's jump in at 30 responses five

144
00:05:18,840 --> 00:05:20,699
people said that they know the location

145
00:05:20,699 --> 00:05:23,639
of all the secrets in their organization

146
00:05:23,639 --> 00:05:26,039
I'm very impressed by them because I've

147
00:05:26,039 --> 00:05:27,539
never worked in an organization where I

148
00:05:27,539 --> 00:05:29,340
knew all the secrets or where all the

149
00:05:29,340 --> 00:05:31,259
secrets were located because there were

150
00:05:31,259 --> 00:05:32,639
always too many people trying to be

151
00:05:32,639 --> 00:05:35,340
quick and stuff and Ben Walsh will show

152
00:05:35,340 --> 00:05:37,979
what quick means in that sense uh during

153
00:05:37,979 --> 00:05:39,780
our demo but that's really let's not

154
00:05:39,780 --> 00:05:41,639
steal the standard for now

155
00:05:41,639 --> 00:05:44,880
um uh but 26 respondents this far has

156
00:05:44,880 --> 00:05:46,500
responded no and I think that's really

157
00:05:46,500 --> 00:05:48,060
an honest response because it's very

158
00:05:48,060 --> 00:05:50,039
hard to know where your secrets are

159
00:05:50,039 --> 00:05:52,440
so that's about the location of things

160
00:05:52,440 --> 00:05:54,600
in the context of Secrets but apparently

161
00:05:54,600 --> 00:05:56,039
there's more to this than just that

162
00:05:56,039 --> 00:05:59,280
right so

163
00:05:59,280 --> 00:06:00,180
um

164
00:06:00,180 --> 00:06:00,900
yeah

165
00:06:00,900 --> 00:06:03,479
can you tell us when your secret was

166
00:06:03,479 --> 00:06:06,900
lost Borrowed by an ex-colic or an

167
00:06:06,900 --> 00:06:09,000
active colleague

168
00:06:09,000 --> 00:06:10,440
you know because some administrative

169
00:06:10,440 --> 00:06:12,419
tasks need to be done or because he was

170
00:06:12,419 --> 00:06:14,520
he or she or it was sect

171
00:06:14,520 --> 00:06:16,979
um and tried to uh take a few items home

172
00:06:16,979 --> 00:06:20,340
to have different licenses for instance

173
00:06:20,340 --> 00:06:21,720
um we can all say that it never happens

174
00:06:21,720 --> 00:06:23,460
but we all also know that this happens

175
00:06:23,460 --> 00:06:25,380
very often

176
00:06:25,380 --> 00:06:26,580
um

177
00:06:26,580 --> 00:06:29,460
more importantly can you also tell when

178
00:06:29,460 --> 00:06:31,680
a secret was not working anymore so this

179
00:06:31,680 --> 00:06:33,120
we often can tell because then all of a

180
00:06:33,120 --> 00:06:34,740
sudden our service is added right

181
00:06:34,740 --> 00:06:36,240
because then the whole service goes down

182
00:06:36,240 --> 00:06:37,560
if it's integrated with some other

183
00:06:37,560 --> 00:06:40,319
server for which it needed a secret that

184
00:06:40,319 --> 00:06:42,600
is apparently not that hard

185
00:06:42,600 --> 00:06:44,340
um unfortunately we're often very much

186
00:06:44,340 --> 00:06:46,500
just too late because the audit started

187
00:06:46,500 --> 00:06:49,020
and we eventually find out that it was

188
00:06:49,020 --> 00:06:52,020
because the secret was no longer working

189
00:06:52,020 --> 00:06:53,699
and then there's this funny guy from

190
00:06:53,699 --> 00:06:55,199
Despicable Me

191
00:06:55,199 --> 00:06:56,819
um that tries to present something for

192
00:06:56,819 --> 00:06:59,940
us as well on the slide so let's assume

193
00:06:59,940 --> 00:07:01,979
we found out where our secrets are which

194
00:07:01,979 --> 00:07:05,100
is great we start monitoring them we

195
00:07:05,100 --> 00:07:06,479
make an alert when they when they're

196
00:07:06,479 --> 00:07:08,400
grabbed and then we look on the entry

197
00:07:08,400 --> 00:07:10,560
that they are grabs another question is

198
00:07:10,560 --> 00:07:13,020
do you looked it correctly or do we end

199
00:07:13,020 --> 00:07:16,199
up having the the data uh of this given

200
00:07:16,199 --> 00:07:18,120
Secrets writing your audit law or in

201
00:07:18,120 --> 00:07:20,400
tomorrow where too many people have

202
00:07:20,400 --> 00:07:21,979
access to

203
00:07:21,979 --> 00:07:23,759
okay

204
00:07:23,759 --> 00:07:26,880
so apparently Secrets management is

205
00:07:26,880 --> 00:07:28,680
special

206
00:07:28,680 --> 00:07:32,520
um by now we know that many uh of uh the

207
00:07:32,520 --> 00:07:33,780
things that we present with the novel

208
00:07:33,780 --> 00:07:35,280
conferences are considered special

209
00:07:35,280 --> 00:07:37,919
otherwise we'll be talking about it but

210
00:07:37,919 --> 00:07:39,240
secret management by itself

211
00:07:39,240 --> 00:07:41,880
unfortunately needs some attention

212
00:07:41,880 --> 00:07:43,919
um and that is why we introduced uh

213
00:07:43,919 --> 00:07:46,319
projects over strong secrets

214
00:07:46,319 --> 00:07:49,020
all right what is it tell me more let's

215
00:07:49,020 --> 00:07:50,400
go

216
00:07:50,400 --> 00:07:54,479
um so it's basically a vulnerable app uh

217
00:07:54,479 --> 00:07:57,240
and a secret detector despat you'll see

218
00:07:57,240 --> 00:07:59,880
when Deb demonstrates the app in the

219
00:07:59,880 --> 00:08:01,380
larger portion how that works and you

220
00:08:01,380 --> 00:08:03,000
can find in our readme how the secret

221
00:08:03,000 --> 00:08:05,639
detector test bet Works what we

222
00:08:05,639 --> 00:08:07,680
basically did is we have a bunch of

223
00:08:07,680 --> 00:08:08,900
challenges

224
00:08:08,900 --> 00:08:11,580
uh where you need to find a secret

225
00:08:11,580 --> 00:08:14,160
within the code or within some other

226
00:08:14,160 --> 00:08:16,680
asset that we created for you where some

227
00:08:16,680 --> 00:08:19,259
people Miss have funny beliefs about

228
00:08:19,259 --> 00:08:22,379
that's a secret over there is safe

229
00:08:22,379 --> 00:08:24,120
um and next to that the secret detector

230
00:08:24,120 --> 00:08:25,919
does bad basically

231
00:08:25,919 --> 00:08:28,080
um has a few additional Secrets inside

232
00:08:28,080 --> 00:08:30,479
git so you can let the your secret

233
00:08:30,479 --> 00:08:32,580
detector run through and see if it

234
00:08:32,580 --> 00:08:34,080
detects the things

235
00:08:34,080 --> 00:08:36,419
um that are out there but by that you

236
00:08:36,419 --> 00:08:38,159
know how effective your secrets detector

237
00:08:38,159 --> 00:08:41,520
is and whether it's configured correctly

238
00:08:41,520 --> 00:08:43,740
we have a few goals about this so by now

239
00:08:43,740 --> 00:08:45,000
you understand we think Secrets

240
00:08:45,000 --> 00:08:46,560
management is special

241
00:08:46,560 --> 00:08:48,300
um so yeah we would love to educate

242
00:08:48,300 --> 00:08:49,380
people on secret management and

243
00:08:49,380 --> 00:08:51,060
spitfalls

244
00:08:51,060 --> 00:08:53,279
and we would like to help people reflect

245
00:08:53,279 --> 00:08:55,019
on the secret management strategy so

246
00:08:55,019 --> 00:08:57,420
while you're doing these exercises

247
00:08:57,420 --> 00:09:01,320
in our vulnerable app ask yourself hey

248
00:09:01,320 --> 00:09:04,019
are we doing something similar here or

249
00:09:04,019 --> 00:09:06,180
are we at risk doing something similar

250
00:09:06,180 --> 00:09:08,220
or have I seen somebody in my

251
00:09:08,220 --> 00:09:09,720
organization doing something similar

252
00:09:09,720 --> 00:09:13,740
should I improve my strategy

253
00:09:13,740 --> 00:09:15,720
um and there and of course you know

254
00:09:15,720 --> 00:09:16,920
trying to promote secretary management

255
00:09:16,920 --> 00:09:19,800
that's an important facet of security

256
00:09:19,800 --> 00:09:21,899
um all of this could never have happened

257
00:09:21,899 --> 00:09:24,300
without the tremendous support of our

258
00:09:24,300 --> 00:09:25,860
volunteers

259
00:09:25,860 --> 00:09:28,080
um so these are most of them some of

260
00:09:28,080 --> 00:09:30,240
them we they didn't want to be mentioned

261
00:09:30,240 --> 00:09:32,040
but still huge shout out to the

262
00:09:32,040 --> 00:09:35,160
anonymous people helping us as well

263
00:09:35,160 --> 00:09:37,920
um special thanks to Nana Tibor

264
00:09:37,920 --> 00:09:42,300
um uh Josh Mike and yours who did quite

265
00:09:42,300 --> 00:09:44,459
a lot of cool stuff to help us out and

266
00:09:44,459 --> 00:09:46,980
special call out to Dave and Martinez

267
00:09:46,980 --> 00:09:48,600
her tester is also helping us out a lot

268
00:09:48,600 --> 00:09:50,040
in other things

269
00:09:50,040 --> 00:09:51,360
um and of course

270
00:09:51,360 --> 00:09:54,180
um a special call out tomorrow Kula who

271
00:09:54,180 --> 00:09:56,160
has done a tremendous job on helping us

272
00:09:56,160 --> 00:09:58,320
to promote a project correctly

273
00:09:58,320 --> 00:10:00,000
um and Bjorn for being an inspiration

274
00:10:00,000 --> 00:10:02,100
with uh many things he has already done

275
00:10:02,100 --> 00:10:03,839
for all for such a long time and helped

276
00:10:03,839 --> 00:10:07,380
us along the way of uh little tidbits

277
00:10:07,380 --> 00:10:09,540
having that set and of course reach out

278
00:10:09,540 --> 00:10:12,420
to bed amen finally presenting This

279
00:10:12,420 --> 00:10:14,519
Together apologies gentlemen for take

280
00:10:14,519 --> 00:10:15,899
and ladies for taking your time on that

281
00:10:15,899 --> 00:10:17,640
one so

282
00:10:17,640 --> 00:10:19,920
um okay so what did we built of the

283
00:10:19,920 --> 00:10:21,500
volunteers you might wander by now right

284
00:10:21,500 --> 00:10:24,420
let's have a look at our architecture so

285
00:10:24,420 --> 00:10:26,339
the vulnerable application is basically

286
00:10:26,339 --> 00:10:30,959
spring boot application that um uh uh

287
00:10:30,959 --> 00:10:33,420
sits in a Docker container and a Docker

288
00:10:33,420 --> 00:10:35,339
container you can run on your desk on

289
00:10:35,339 --> 00:10:37,260
your machine directly but you can also

290
00:10:37,260 --> 00:10:41,160
just uh visit our website in Heroku

291
00:10:41,160 --> 00:10:43,640
which is uh wrong secrets.airoko web.com

292
00:10:43,640 --> 00:10:45,600
which you can also find in the project

293
00:10:45,600 --> 00:10:48,959
readme or we can load it as a bot and

294
00:10:48,959 --> 00:10:51,180
run into the kubernetes platform uh

295
00:10:51,180 --> 00:10:52,560
right now we have scripts to support

296
00:10:52,560 --> 00:10:55,440
mini Cube AWS which is completely

297
00:10:55,440 --> 00:10:57,180
terraformed for you but you can also

298
00:10:57,180 --> 00:11:01,320
tear it down correctly gcp in azure

299
00:11:01,320 --> 00:11:04,079
um as well as a mini Cube actually so

300
00:11:04,079 --> 00:11:05,399
you can also just run the kubernetes

301
00:11:05,399 --> 00:11:07,260
exercises and evolved exercise locally

302
00:11:07,260 --> 00:11:10,380
and in every layer we basically add more

303
00:11:10,380 --> 00:11:12,540
secrets so if you just run the docker

304
00:11:12,540 --> 00:11:13,860
container locally you get a bunch of

305
00:11:13,860 --> 00:11:16,800
Secrets but if you want to enjoy the

306
00:11:16,800 --> 00:11:18,540
fill flavor of it use one of the cloud

307
00:11:18,540 --> 00:11:20,760
providers noted in this slide to have

308
00:11:20,760 --> 00:11:23,060
fun with it

309
00:11:23,060 --> 00:11:23,459
[Music]

310
00:11:23,459 --> 00:11:24,600
um

311
00:11:24,600 --> 00:11:26,880
having that said giving us a lot of

312
00:11:26,880 --> 00:11:32,399
space for Ben to uh start showing some

313
00:11:32,399 --> 00:11:34,980
awesome demos over to you yes we'll uh

314
00:11:34,980 --> 00:11:38,220
thank you will do let me share my screen

315
00:11:38,220 --> 00:11:41,120
as well

316
00:11:41,700 --> 00:11:44,339
there we go

317
00:11:44,339 --> 00:11:46,560
all right

318
00:11:46,560 --> 00:11:48,600
um so

319
00:11:48,600 --> 00:11:52,019
you can find wrong secrets on GitHub and

320
00:11:52,019 --> 00:11:54,120
like you and also said on Heroku and

321
00:11:54,120 --> 00:11:56,820
that's the easiest way to

322
00:11:56,820 --> 00:12:01,320
try it out in in a uh well

323
00:12:01,320 --> 00:12:03,740
easily

324
00:12:03,740 --> 00:12:07,019
please don't run any testing tools

325
00:12:07,019 --> 00:12:09,959
directly on Heroku there's not really

326
00:12:09,959 --> 00:12:11,640
any dynamic

327
00:12:11,640 --> 00:12:15,360
uh challenges going on so using things

328
00:12:15,360 --> 00:12:18,180
like a wasp sep well while they're in my

329
00:12:18,180 --> 00:12:20,040
YouTube some results that's not really

330
00:12:20,040 --> 00:12:22,279
the goal of our Challenge and also

331
00:12:22,279 --> 00:12:25,560
hiroku notes freed Heroku notes don't

332
00:12:25,560 --> 00:12:27,480
really like it when you do that

333
00:12:27,480 --> 00:12:30,360
so be gentle with it you can of course

334
00:12:30,360 --> 00:12:32,940
uh just walk through all of the

335
00:12:32,940 --> 00:12:34,920
challenges that are supported by this

336
00:12:34,920 --> 00:12:36,200
environment

337
00:12:36,200 --> 00:12:38,899
once you go to wrong

338
00:12:38,899 --> 00:12:40,980
secrets.herokuapp.com you'll be greeted

339
00:12:40,980 --> 00:12:43,139
with this screen it's both available in

340
00:12:43,139 --> 00:12:46,079
a light and a dark mode

341
00:12:46,079 --> 00:12:48,360
and then there's all the challenges

342
00:12:48,360 --> 00:12:51,240
listed below we currently have 18 there

343
00:12:51,240 --> 00:12:52,920
are some more in the works on which I'll

344
00:12:52,920 --> 00:12:55,260
share later

345
00:12:55,260 --> 00:12:57,779
um but there's like you don't say that

346
00:12:57,779 --> 00:13:00,600
challenges at every layer here

347
00:13:00,600 --> 00:13:03,240
and you'll also see that some challenges

348
00:13:03,240 --> 00:13:06,720
are disabled so uh depending on the

349
00:13:06,720 --> 00:13:08,399
environment you're running in you might

350
00:13:08,399 --> 00:13:11,180
might need to

351
00:13:11,180 --> 00:13:14,760
do something else to get working or we

352
00:13:14,760 --> 00:13:18,060
require some dependencies Etc so of

353
00:13:18,060 --> 00:13:20,339
course challenges for specific to a

354
00:13:20,339 --> 00:13:21,660
cloud environment

355
00:13:21,660 --> 00:13:25,139
don't work on Heroku so those challenges

356
00:13:25,139 --> 00:13:28,880
will be grayed out for you

357
00:13:29,100 --> 00:13:31,680
now this is all nicely responsive or at

358
00:13:31,680 --> 00:13:34,680
least it should be and you can even do

359
00:13:34,680 --> 00:13:37,320
some of this on your phone as well if

360
00:13:37,320 --> 00:13:41,959
you so desire for some hacking on the go

361
00:13:42,540 --> 00:13:46,560
what we also want to do of course is not

362
00:13:46,560 --> 00:13:48,600
only show you and teach you how things

363
00:13:48,600 --> 00:13:50,700
go wrong but also point you in the

364
00:13:50,700 --> 00:13:53,399
direction of how you should do things so

365
00:13:53,399 --> 00:13:55,680
not only have we included some resources

366
00:13:55,680 --> 00:13:57,779
on the home page uh but when you

367
00:13:57,779 --> 00:14:00,600
actually go to a challenge

368
00:14:00,600 --> 00:14:03,540
um you can also look at hints which will

369
00:14:03,540 --> 00:14:06,540
provide you with a step-by-step guidance

370
00:14:06,540 --> 00:14:09,000
on how to retrieve the secret

371
00:14:09,000 --> 00:14:11,579
and for some of the challenges we've

372
00:14:11,579 --> 00:14:14,700
actually had remarks okay

373
00:14:14,700 --> 00:14:18,899
um I'm doing this but why is this a bad

374
00:14:18,899 --> 00:14:22,500
thing so we decided to also include a

375
00:14:22,500 --> 00:14:25,200
section on on what's wrong in this

376
00:14:25,200 --> 00:14:26,279
approach

377
00:14:26,279 --> 00:14:30,720
So speaking of uh this Challenge and

378
00:14:30,720 --> 00:14:32,700
what's wrong with uh centralized

379
00:14:32,700 --> 00:14:35,459
hard-coded password

380
00:14:35,459 --> 00:14:39,180
um let's give it a go

381
00:14:39,180 --> 00:14:42,600
so what's happening here and the

382
00:14:42,600 --> 00:14:46,380
description gives us a brief primer so

383
00:14:46,380 --> 00:14:48,420
people write a proof of concept I'm

384
00:14:48,420 --> 00:14:50,040
going to start with a hard-coded secret

385
00:14:50,040 --> 00:14:53,600
for instance a password in code

386
00:14:53,600 --> 00:14:56,399
but you may end up pushing your code to

387
00:14:56,399 --> 00:14:58,440
production and forgetting that you had

388
00:14:58,440 --> 00:15:02,699
still this hard growth thing going on

389
00:15:02,699 --> 00:15:04,800
so this is one of those things that

390
00:15:04,800 --> 00:15:07,500
would be very easy to detect of course

391
00:15:07,500 --> 00:15:09,300
if you have access to the source code

392
00:15:09,300 --> 00:15:12,060
and uh one of the easiest ways that's

393
00:15:12,060 --> 00:15:14,699
probably installed on uh well nearly all

394
00:15:14,699 --> 00:15:17,459
machines uh is grep

395
00:15:17,459 --> 00:15:20,820
um so what we could do is just grab for

396
00:15:20,820 --> 00:15:24,899
password and now if we do that on our

397
00:15:24,899 --> 00:15:28,980
repository we'll get a a ton of results

398
00:15:28,980 --> 00:15:31,440
uh for for different reasons hopefully

399
00:15:31,440 --> 00:15:33,779
you will have

400
00:15:33,779 --> 00:15:36,300
maybe only somewhat less meaningful

401
00:15:36,300 --> 00:15:39,899
results on your own projects

402
00:15:39,899 --> 00:15:41,519
um let's see

403
00:15:41,519 --> 00:15:44,279
but let's grab in the repo and see what

404
00:15:44,279 --> 00:15:45,360
comes up

405
00:15:45,360 --> 00:15:49,440
so there's a lot of things here and a

406
00:15:49,440 --> 00:15:50,820
lot of them

407
00:15:50,820 --> 00:15:52,860
are a centered around documentation of

408
00:15:52,860 --> 00:15:55,139
course but there is also some

409
00:15:55,139 --> 00:15:58,980
interesting things that may be what we

410
00:15:58,980 --> 00:16:03,180
are looking for I know uh out of

411
00:16:03,180 --> 00:16:05,880
experience of course that it should be

412
00:16:05,880 --> 00:16:07,260
this one

413
00:16:07,260 --> 00:16:10,680
so let's go ahead and I've already

414
00:16:10,680 --> 00:16:13,380
create uh completed this challenge in

415
00:16:13,380 --> 00:16:15,480
this session but

416
00:16:15,480 --> 00:16:17,820
there we go we found a centralized

417
00:16:17,820 --> 00:16:19,980
hard-coded password

418
00:16:19,980 --> 00:16:21,600
and

419
00:16:21,600 --> 00:16:24,000
of course for an open source application

420
00:16:24,000 --> 00:16:27,959
this is especially bad uh don't do this

421
00:16:27,959 --> 00:16:30,540
don't put your secret in code

422
00:16:30,540 --> 00:16:32,040
um

423
00:16:32,040 --> 00:16:34,560
it gives I'm sorry earlier the entire

424
00:16:34,560 --> 00:16:37,079
world access to it and it's also quite

425
00:16:37,079 --> 00:16:39,360
hard to erase this from internet memory

426
00:16:39,360 --> 00:16:41,459
so everything that is behind this

427
00:16:41,459 --> 00:16:43,680
password should be considered

428
00:16:43,680 --> 00:16:46,560
compromised the second lead lands in

429
00:16:46,560 --> 00:16:48,920
GitHub

430
00:16:49,019 --> 00:16:53,040
right let's go to a

431
00:16:53,040 --> 00:16:54,660
it's a different challenge that is

432
00:16:54,660 --> 00:16:56,699
related to Docker in this case I wanted

433
00:16:56,699 --> 00:16:58,320
to say a somewhat more complicated

434
00:16:58,320 --> 00:17:01,680
challenge but I I wish it's it's maybe

435
00:17:01,680 --> 00:17:04,859
even easier to figure out uh where this

436
00:17:04,859 --> 00:17:06,299
secret is

437
00:17:06,299 --> 00:17:08,160
so

438
00:17:08,160 --> 00:17:08,819
um

439
00:17:08,819 --> 00:17:11,160
going here there's the docker argument

440
00:17:11,160 --> 00:17:13,740
based password so you know maybe if you

441
00:17:13,740 --> 00:17:17,339
use Docker that you can provide command

442
00:17:17,339 --> 00:17:20,839
line arguments to set different things

443
00:17:20,839 --> 00:17:24,000
uh not necessarily hard coding them in

444
00:17:24,000 --> 00:17:26,699
the code but you supply it a password

445
00:17:26,699 --> 00:17:28,980
for instance in the command line

446
00:17:28,980 --> 00:17:33,600
and thus this password is now in your

447
00:17:33,600 --> 00:17:36,660
batch history probably or you may have

448
00:17:36,660 --> 00:17:38,400
passed it in in a somewhat more

449
00:17:38,400 --> 00:17:40,740
sophisticated way and it's a bit harder

450
00:17:40,740 --> 00:17:43,320
to retrieve but

451
00:17:43,320 --> 00:17:45,559
um if you use darker arm means there's

452
00:17:45,559 --> 00:17:49,080
still ways to retrieve this thing quite

453
00:17:49,080 --> 00:17:50,460
easily

454
00:17:50,460 --> 00:17:51,310
and

455
00:17:51,310 --> 00:17:51,960
[Music]

456
00:17:51,960 --> 00:17:52,860
um

457
00:17:52,860 --> 00:17:55,559
we give a brief primer again on how this

458
00:17:55,559 --> 00:17:56,820
is done

459
00:17:56,820 --> 00:17:59,340
so in this case

460
00:17:59,340 --> 00:18:02,280
uh we can easily spot What's Happening

461
00:18:02,280 --> 00:18:05,100
by looking at how the layers are

462
00:18:05,100 --> 00:18:06,240
constructed

463
00:18:06,240 --> 00:18:09,740
now if you put your image on Docker help

464
00:18:09,740 --> 00:18:12,600
there's this nice overview of the layers

465
00:18:12,600 --> 00:18:14,160
and of course there are different tools

466
00:18:14,160 --> 00:18:17,220
to dissect this but in this case we

467
00:18:17,220 --> 00:18:19,320
don't even need to do anything special

468
00:18:19,320 --> 00:18:23,460
we just go to Docker Hub and go to wrong

469
00:18:23,460 --> 00:18:25,799
secrets

470
00:18:25,799 --> 00:18:28,320
there we go

471
00:18:28,320 --> 00:18:32,220
look at the most recent one

472
00:18:32,220 --> 00:18:37,380
and uh here we have this interesting

473
00:18:37,380 --> 00:18:38,700
command

474
00:18:38,700 --> 00:18:41,460
image layer 14 where there's this

475
00:18:41,460 --> 00:18:43,740
arc-based password

476
00:18:43,740 --> 00:18:46,559
hello Global appsec this is just a

477
00:18:46,559 --> 00:18:48,120
temporary password

478
00:18:48,120 --> 00:18:50,039
oopsie Daisy

479
00:18:50,039 --> 00:18:52,620
so again this is public for all the

480
00:18:52,620 --> 00:18:55,520
world to see

481
00:18:55,679 --> 00:18:58,220
and you may for your own environment

482
00:18:58,220 --> 00:19:01,500
think of ways even if the Stocker image

483
00:19:01,500 --> 00:19:03,360
is private that this is probably not a

484
00:19:03,360 --> 00:19:06,860
desirable thing to do right

485
00:19:07,679 --> 00:19:11,600
so let's go that's it

486
00:19:14,520 --> 00:19:16,620
all right

487
00:19:16,620 --> 00:19:19,980
um now one of my favorite challenges

488
00:19:19,980 --> 00:19:21,840
actually

489
00:19:21,840 --> 00:19:24,860
um is more related to cicd we've had the

490
00:19:24,860 --> 00:19:27,840
docker container we've had uh the the

491
00:19:27,840 --> 00:19:29,700
code and

492
00:19:29,700 --> 00:19:32,940
um another place to store Secrets would

493
00:19:32,940 --> 00:19:35,820
be your CI platform but of course if you

494
00:19:35,820 --> 00:19:38,340
have a CI platform that stores secrets

495
00:19:38,340 --> 00:19:41,280
then you also need to consider the

496
00:19:41,280 --> 00:19:43,919
access to that sequence

497
00:19:43,919 --> 00:19:47,940
um and if you have for instance GitHub

498
00:19:47,940 --> 00:19:50,100
actions then GitHub actions needs to

499
00:19:50,100 --> 00:19:53,880
interact with this Secret in some way

500
00:19:53,880 --> 00:19:55,799
um maybe 2x there's a cloud environment

501
00:19:55,799 --> 00:19:57,419
for example

502
00:19:57,419 --> 00:19:59,520
and

503
00:19:59,520 --> 00:20:01,860
if someone creates

504
00:20:01,860 --> 00:20:05,280
uh a workflow that accidentally spits

505
00:20:05,280 --> 00:20:08,220
out the secret in the log

506
00:20:08,220 --> 00:20:11,220
uh or even

507
00:20:11,220 --> 00:20:14,820
uh this might be a malicious thing going

508
00:20:14,820 --> 00:20:18,179
on where uh it's it's not some error

509
00:20:18,179 --> 00:20:20,640
accidentally logging it

510
00:20:20,640 --> 00:20:23,520
um it's it's pretty easy to exfil sorry

511
00:20:23,520 --> 00:20:25,260
these things

512
00:20:25,260 --> 00:20:29,880
so normally you may know that GitHub and

513
00:20:29,880 --> 00:20:34,500
other CI systems mask their secrets in

514
00:20:34,500 --> 00:20:35,880
the logs

515
00:20:35,880 --> 00:20:39,299
so here we see a sample workflow

516
00:20:39,299 --> 00:20:41,460
in GitHub and and what's happening is

517
00:20:41,460 --> 00:20:44,460
that there's a bash script that loads in

518
00:20:44,460 --> 00:20:46,020
an environment variable where we have a

519
00:20:46,020 --> 00:20:50,039
secrets so the the challenge 13 key

520
00:20:50,039 --> 00:20:51,539
and

521
00:20:51,539 --> 00:20:54,780
um it will just Echo out the key

522
00:20:54,780 --> 00:20:57,360
um and and that will be masked

523
00:20:57,360 --> 00:20:59,100
and then

524
00:20:59,100 --> 00:21:02,340
even if you encode it with base64 Once

525
00:21:02,340 --> 00:21:05,220
then it will probably still mask this

526
00:21:05,220 --> 00:21:08,039
output in the logs but if you encode it

527
00:21:08,039 --> 00:21:10,980
twice or Thrice or you can go several

528
00:21:10,980 --> 00:21:13,080
layers deep depending on what you need

529
00:21:13,080 --> 00:21:14,940
then

530
00:21:14,940 --> 00:21:16,559
um

531
00:21:16,559 --> 00:21:19,799
your mileage may vary but you will

532
00:21:19,799 --> 00:21:22,620
probably end up with the secret

533
00:21:22,620 --> 00:21:25,500
so running this command

534
00:21:25,500 --> 00:21:28,919
first we have the the plane output where

535
00:21:28,919 --> 00:21:32,340
we just load this thing and indeed it

536
00:21:32,340 --> 00:21:36,059
seems like it's masked and now

537
00:21:36,059 --> 00:21:37,559
there's the

538
00:21:37,559 --> 00:21:41,460
double encoder thing and there we have a

539
00:21:41,460 --> 00:21:44,940
double encoded base64 Secret

540
00:21:44,940 --> 00:21:47,880
now if we go to our tournament terminal

541
00:21:47,880 --> 00:21:49,220
and

542
00:21:49,220 --> 00:21:52,559
decode that thing

543
00:21:52,559 --> 00:21:57,840
we end up with this nicely random string

544
00:21:57,840 --> 00:22:00,539
which we can put over here

545
00:22:00,539 --> 00:22:02,880
and there we go we have successfully

546
00:22:02,880 --> 00:22:06,240
exfiltrated a secret from GitHub and

547
00:22:06,240 --> 00:22:08,960
sold our challenge

548
00:22:10,020 --> 00:22:11,100
so

549
00:22:11,100 --> 00:22:13,919
the final thing that I want to show you

550
00:22:13,919 --> 00:22:17,100
is also still somewhat related to code

551
00:22:17,100 --> 00:22:19,679
which is challenge 15.

552
00:22:19,679 --> 00:22:24,299
say you have Aus access keys and you

553
00:22:24,299 --> 00:22:27,840
accidentally hard-coded them but

554
00:22:27,840 --> 00:22:32,639
you were smart and removed them again

555
00:22:33,780 --> 00:22:36,780
but only after you had already committed

556
00:22:36,780 --> 00:22:38,880
your secrets

557
00:22:38,880 --> 00:22:41,220
so

558
00:22:41,220 --> 00:22:43,919
um one thing we can do

559
00:22:43,919 --> 00:22:45,440
is

560
00:22:45,440 --> 00:22:49,919
use truffle hog to detect secrets that

561
00:22:49,919 --> 00:22:51,179
are in

562
00:22:51,179 --> 00:22:52,200
um

563
00:22:52,200 --> 00:22:55,140
in the git history

564
00:22:55,140 --> 00:22:57,000
and

565
00:22:57,000 --> 00:23:00,299
for our projects naturally that yields a

566
00:23:00,299 --> 00:23:03,419
lot of results so I I had to get a bit

567
00:23:03,419 --> 00:23:06,240
funny with trufflehog uh and and do

568
00:23:06,240 --> 00:23:08,460
specifically a grab for the thing we

569
00:23:08,460 --> 00:23:11,100
want but you could just run troughlog 3

570
00:23:11,100 --> 00:23:13,860
on our gits Repository

571
00:23:13,860 --> 00:23:18,678
and then grip for AWS

572
00:23:20,640 --> 00:23:25,919
and there we go in a second or so

573
00:23:25,919 --> 00:23:28,520
it's probably

574
00:23:29,520 --> 00:23:30,900
checking out right now

575
00:23:30,900 --> 00:23:33,059
[Music]

576
00:23:33,059 --> 00:23:36,139
processing the results

577
00:23:43,760 --> 00:23:46,860
there we go

578
00:23:46,860 --> 00:23:48,960
so as you can see there are some

579
00:23:48,960 --> 00:23:54,679
different entries related to Secrets

580
00:23:55,020 --> 00:23:57,539
uh

581
00:23:57,539 --> 00:23:59,820
uh

582
00:23:59,820 --> 00:24:01,440
these secrets

583
00:24:01,440 --> 00:24:06,360
they they uh are then again like in code

584
00:24:06,360 --> 00:24:09,000
easily exfiltrated but there's a neat

585
00:24:09,000 --> 00:24:14,400
thing about this so say these keys were

586
00:24:14,400 --> 00:24:16,860
not put in there accidentally

587
00:24:16,860 --> 00:24:18,900
but rather

588
00:24:18,900 --> 00:24:20,880
on purpose

589
00:24:20,880 --> 00:24:24,260
in the sense that once you use these

590
00:24:24,260 --> 00:24:27,900
you know that someone has been going

591
00:24:27,900 --> 00:24:30,900
through your code and uh checking out

592
00:24:30,900 --> 00:24:33,120
whether there are any secrets so

593
00:24:33,120 --> 00:24:34,799
I can result

594
00:24:34,799 --> 00:24:36,600
I'm not sure if you're familiar with the

595
00:24:36,600 --> 00:24:38,360
concept

596
00:24:38,360 --> 00:24:42,179
but what we could do

597
00:24:42,179 --> 00:24:44,960
uh

598
00:24:47,039 --> 00:24:51,200
is check out one of these keys

599
00:24:51,960 --> 00:24:55,380
let me access key ID

600
00:24:55,380 --> 00:24:59,280
and then do this

601
00:24:59,280 --> 00:25:01,260
I don't really care about the region I

602
00:25:01,260 --> 00:25:02,640
think

603
00:25:02,640 --> 00:25:09,720
and then do AWS SDS get call or identity

604
00:25:10,140 --> 00:25:14,299
profile wrong secrets

605
00:25:14,520 --> 00:25:18,419
and now in this case

606
00:25:18,419 --> 00:25:20,700
uh let's see

607
00:25:20,700 --> 00:25:22,679
probably use the wrong

608
00:25:22,679 --> 00:25:24,840
one did I

609
00:25:24,840 --> 00:25:26,760
configure

610
00:25:26,760 --> 00:25:28,919
I didn't sacrifice to go to the demo God

611
00:25:28,919 --> 00:25:31,279
sorry

612
00:25:33,960 --> 00:25:36,799
there we go

613
00:25:40,500 --> 00:25:42,600
yes

614
00:25:42,600 --> 00:25:46,620
so I used my canary token whoops and now

615
00:25:46,620 --> 00:25:51,240
I've landed on a tripwire on which uh

616
00:25:51,240 --> 00:25:53,700
as a hacker you would probably know by

617
00:25:53,700 --> 00:25:56,640
this stage that your activity has now

618
00:25:56,640 --> 00:26:00,480
been uh yeah is being monitored and is

619
00:26:00,480 --> 00:26:04,260
now being alerted on so as a Defender as

620
00:26:04,260 --> 00:26:06,240
a builder this is a useful thing to do

621
00:26:06,240 --> 00:26:08,940
to just leave Cannery tokens here and

622
00:26:08,940 --> 00:26:10,380
there

623
00:26:10,380 --> 00:26:11,039
um

624
00:26:11,039 --> 00:26:13,380
if someone is rummaging through your

625
00:26:13,380 --> 00:26:14,720
code or whatever

626
00:26:14,720 --> 00:26:17,159
and maybe even your your local machine

627
00:26:17,159 --> 00:26:19,080
leave one of these on your local machine

628
00:26:19,080 --> 00:26:22,580
as default AWS credentials

629
00:26:22,580 --> 00:26:25,080
that if they are used

630
00:26:25,080 --> 00:26:28,620
you know you are compromised

631
00:26:28,620 --> 00:26:33,120
now we also have this uh stats thing in

632
00:26:33,120 --> 00:26:35,940
our wrong Secrets app and

633
00:26:35,940 --> 00:26:41,220
um this also shows us uh a a web token

634
00:26:41,220 --> 00:26:44,640
that's uh that's uh

635
00:26:44,640 --> 00:26:48,000
again a gallery token and it shows us

636
00:26:48,000 --> 00:26:49,559
what

637
00:26:49,559 --> 00:26:53,279
uh uh generate token will be received

638
00:26:53,279 --> 00:26:56,700
and the last one last entry was just

639
00:26:56,700 --> 00:27:01,820
shown uh this is probably me then

640
00:27:02,100 --> 00:27:05,959
going to a specific URL

641
00:27:07,020 --> 00:27:09,419
so that's a nice way for you to know

642
00:27:09,419 --> 00:27:11,760
that their

643
00:27:11,760 --> 00:27:14,220
well is an attacker maybe accessing your

644
00:27:14,220 --> 00:27:17,640
platform and if this secret is located

645
00:27:17,640 --> 00:27:20,400
close to your other secrets

646
00:27:20,400 --> 00:27:22,620
it's probably high time you start doing

647
00:27:22,620 --> 00:27:24,720
some incident response and maybe

648
00:27:24,720 --> 00:27:28,620
rotating Secrets or closing access to

649
00:27:28,620 --> 00:27:31,500
some parts of your system

650
00:27:31,500 --> 00:27:33,659
to contain

651
00:27:33,659 --> 00:27:35,100
okay

652
00:27:35,100 --> 00:27:38,940
that's it for this demo part

653
00:27:38,940 --> 00:27:41,279
um let's

654
00:27:41,279 --> 00:27:43,940
progress

655
00:27:44,520 --> 00:27:47,059
now

656
00:27:47,640 --> 00:27:49,320
we have

657
00:27:49,320 --> 00:27:51,720
18 challenges as of now and we're also

658
00:27:51,720 --> 00:27:54,840
working on more like I said so what's on

659
00:27:54,840 --> 00:27:55,799
the roadmap

660
00:27:55,799 --> 00:27:58,679
now first off we probably want to

661
00:27:58,679 --> 00:28:00,960
improve the development experience a

662
00:28:00,960 --> 00:28:03,419
bits currently it's quite cumbersome to

663
00:28:03,419 --> 00:28:05,760
add a new challenge and go through the

664
00:28:05,760 --> 00:28:07,320
testing Loop go through the verification

665
00:28:07,320 --> 00:28:08,460
again

666
00:28:08,460 --> 00:28:10,919
so we want to make this easier for

667
00:28:10,919 --> 00:28:13,140
everyone working on our project and and

668
00:28:13,140 --> 00:28:16,260
Implement a nicer development experience

669
00:28:16,260 --> 00:28:19,380
for instance with live reloading

670
00:28:19,380 --> 00:28:21,440
we also want to do

671
00:28:21,440 --> 00:28:24,900
some Secrets management yeah secret

672
00:28:24,900 --> 00:28:27,299
hiding in in binaries for example so

673
00:28:27,299 --> 00:28:29,760
hard coding something in code is one

674
00:28:29,760 --> 00:28:32,580
thing but you could also hard code it in

675
00:28:32,580 --> 00:28:35,760
a binary and then

676
00:28:35,760 --> 00:28:39,860
um what would happen is that it still

677
00:28:39,860 --> 00:28:43,320
often quite easily detectable and

678
00:28:43,320 --> 00:28:45,299
there's various degrees of course in

679
00:28:45,299 --> 00:28:47,940
which this is easy to detect you can go

680
00:28:47,940 --> 00:28:50,039
from some simple string to something

681
00:28:50,039 --> 00:28:52,620
that's obfuscated Etc so that's another

682
00:28:52,620 --> 00:28:55,380
area that we are exploding exploring

683
00:28:55,380 --> 00:28:57,299
one thing to note

684
00:28:57,299 --> 00:28:59,940
is that all of these challenges that we

685
00:28:59,940 --> 00:29:02,340
have here are things that we've seen in

686
00:29:02,340 --> 00:29:03,240
the wild

687
00:29:03,240 --> 00:29:06,840
so if there's any scenario that we

688
00:29:06,840 --> 00:29:10,020
discover or you hopefully you have seen

689
00:29:10,020 --> 00:29:12,179
something interesting as

690
00:29:12,179 --> 00:29:15,000
potential contributors uh you could flag

691
00:29:15,000 --> 00:29:17,340
it and and say okay I've seen this

692
00:29:17,340 --> 00:29:19,860
interesting thing and maybe it's a nice

693
00:29:19,860 --> 00:29:21,360
idea to make a challenge out of it

694
00:29:21,360 --> 00:29:24,240
you're welcome to uh do something for

695
00:29:24,240 --> 00:29:26,039
that yourself of course but you're also

696
00:29:26,039 --> 00:29:29,100
welcome very welcome to just post it as

697
00:29:29,100 --> 00:29:32,580
a potential challenge in an issue in our

698
00:29:32,580 --> 00:29:34,140
GitHub

699
00:29:34,140 --> 00:29:37,200
another thing we're working on is like a

700
00:29:37,200 --> 00:29:40,799
multi-user CDF or cdfd support various

701
00:29:40,799 --> 00:29:42,779
UI improvements

702
00:29:42,779 --> 00:29:46,679
um we want to have foreign secrets uh

703
00:29:46,679 --> 00:29:48,779
additionally available as a secret

704
00:29:48,779 --> 00:29:51,960
detection testbed so that various secret

705
00:29:51,960 --> 00:29:55,320
detection tools can use it as a sort of

706
00:29:55,320 --> 00:29:57,600
Benchmark of how well they are at

707
00:29:57,600 --> 00:29:59,419
detecting things or

708
00:29:59,419 --> 00:30:02,340
and how good they are at not detecting

709
00:30:02,340 --> 00:30:04,500
things that are false positives and

710
00:30:04,500 --> 00:30:06,840
there's much much more for that please

711
00:30:06,840 --> 00:30:10,679
check out our GitHub at commune wrong

712
00:30:10,679 --> 00:30:15,020
Secrets slash issues as well

713
00:30:15,140 --> 00:30:21,140
so having said that back to you uh

714
00:30:21,659 --> 00:30:23,940
all right sorry that was technically

715
00:30:23,940 --> 00:30:26,039
stuff not helping out thank you so much

716
00:30:26,039 --> 00:30:28,380
ben really awesome demo

717
00:30:28,380 --> 00:30:31,140
um so now you might ask yourself okay

718
00:30:31,140 --> 00:30:33,840
this is tons of ways of how not to do it

719
00:30:33,840 --> 00:30:36,720
so how should we do it

720
00:30:36,720 --> 00:30:39,000
um like Ben already mentioned uh you

721
00:30:39,000 --> 00:30:40,440
wrong she gives us a secret detection

722
00:30:40,440 --> 00:30:41,820
Benchmark to find out if there's

723
00:30:41,820 --> 00:30:44,220
anything inside that um that you're not

724
00:30:44,220 --> 00:30:47,340
detecting yet in your Pipelines

725
00:30:47,340 --> 00:30:49,500
um and of course make sure you're also

726
00:30:49,500 --> 00:30:51,299
prepared for having the detector

727
00:30:51,299 --> 00:30:52,620
actually even as a pre-commit hook

728
00:30:52,620 --> 00:30:55,020
instead of just in your pipeline because

729
00:30:55,020 --> 00:30:57,120
hey you rather want to find out whether

730
00:30:57,120 --> 00:30:59,640
something is violating before it hits

731
00:30:59,640 --> 00:31:02,880
gits in a lot of other places

732
00:31:02,880 --> 00:31:04,200
so

733
00:31:04,200 --> 00:31:05,760
um

734
00:31:05,760 --> 00:31:07,380
um there's a bunch of resources we

735
00:31:07,380 --> 00:31:09,899
picked in that in our application which

736
00:31:09,899 --> 00:31:12,779
you can visit uh like a Blog about

737
00:31:12,779 --> 00:31:15,059
Secrets management references to open

738
00:31:15,059 --> 00:31:18,299
Sam which is also being I thought being

739
00:31:18,299 --> 00:31:20,340
presented this uh this conference as

740
00:31:20,340 --> 00:31:22,980
well an awesome talk to check out

741
00:31:22,980 --> 00:31:24,360
um and then of course a secret detection

742
00:31:24,360 --> 00:31:26,340
Topic at GitHub where you can find a lot

743
00:31:26,340 --> 00:31:28,320
of tools other examples and other

744
00:31:28,320 --> 00:31:30,360
resources you might want to jump into to

745
00:31:30,360 --> 00:31:32,340
find diff out and to learn of about

746
00:31:32,340 --> 00:31:34,440
Secrets management then there's almost

747
00:31:34,440 --> 00:31:36,179
Secrets management cheat sheet that is

748
00:31:36,179 --> 00:31:37,620
really recommended to ever read through

749
00:31:37,620 --> 00:31:40,260
thank you so much jamanico for governing

750
00:31:40,260 --> 00:31:42,419
that and then there's the open cre

751
00:31:42,419 --> 00:31:44,760
project where our project is integrated

752
00:31:44,760 --> 00:31:46,320
with that the moment you go over there

753
00:31:46,320 --> 00:31:48,360
you basically find out all about Secrets

754
00:31:48,360 --> 00:31:49,980
management the different uh standards

755
00:31:49,980 --> 00:31:51,720
like the asvs and other things so

756
00:31:51,720 --> 00:31:52,980
anything always predict and understand

757
00:31:52,980 --> 00:31:55,380
it as well by the way

758
00:31:55,380 --> 00:31:56,760
um this Friday there will be an awesome

759
00:31:56,760 --> 00:31:59,520
presentation by Robin Spiros about open

760
00:31:59,520 --> 00:32:02,340
Theory and if you're really done with

761
00:32:02,340 --> 00:32:04,260
scrolling through hundreds of resources

762
00:32:04,260 --> 00:32:06,720
and to Google your every day you

763
00:32:06,720 --> 00:32:08,399
should watch it and see how you can

764
00:32:08,399 --> 00:32:09,899
contribute to it because I think it's an

765
00:32:09,899 --> 00:32:11,039
awesome growth to where it's a better

766
00:32:11,039 --> 00:32:13,620
standard to interact with each other

767
00:32:13,620 --> 00:32:15,120
all right

768
00:32:15,120 --> 00:32:18,000
um so having that said

769
00:32:18,000 --> 00:32:20,220
um the next very next question would

770
00:32:20,220 --> 00:32:21,720
that be I suppose

771
00:32:21,720 --> 00:32:23,820
um yeah what can we take away from this

772
00:32:23,820 --> 00:32:25,200
so if you're watching right now or

773
00:32:25,200 --> 00:32:26,820
watching this afterwards it's recording

774
00:32:26,820 --> 00:32:28,559
what would be the takeaways from our

775
00:32:28,559 --> 00:32:30,659
projects in general

776
00:32:30,659 --> 00:32:33,240
um and of course still you know try it

777
00:32:33,240 --> 00:32:35,520
out give it a test and learn from it but

778
00:32:35,520 --> 00:32:37,200
let's let's have a look at the takeaways

779
00:32:37,200 --> 00:32:38,039
anyway

780
00:32:38,039 --> 00:32:39,960
first of all never hard code anywhere

781
00:32:39,960 --> 00:32:41,700
that means anywhere in your

782
00:32:41,700 --> 00:32:43,500
configuration whether it's the metadata

783
00:32:43,500 --> 00:32:45,299
of a binary or something else anything

784
00:32:45,299 --> 00:32:46,559
really

785
00:32:46,559 --> 00:32:49,740
um or in your Cloud configuration or in

786
00:32:49,740 --> 00:32:51,020
um

787
00:32:51,020 --> 00:32:54,840
uh in uh in your cicd pipeline in a way

788
00:32:54,840 --> 00:32:56,640
that you can't really rotate it anywhere

789
00:32:56,640 --> 00:32:58,980
where you where it can be yet make sure

790
00:32:58,980 --> 00:33:00,659
it's not just hardcoded and easily

791
00:33:00,659 --> 00:33:03,620
detected

792
00:33:03,620 --> 00:33:07,320
and whether you're use your advanced

793
00:33:07,320 --> 00:33:09,360
technology user or not make sure you

794
00:33:09,360 --> 00:33:11,640
don't trust the defaults because many of

795
00:33:11,640 --> 00:33:13,440
the platforms that we're using today to

796
00:33:13,440 --> 00:33:15,539
generate create software to integrate it

797
00:33:15,539 --> 00:33:16,980
with our pipelines and to basically

798
00:33:16,980 --> 00:33:18,840
deploy to production have a set of

799
00:33:18,840 --> 00:33:21,059
defaults that are mostly tailored at

800
00:33:21,059 --> 00:33:23,760
making sure you can start deploying ASAP

801
00:33:23,760 --> 00:33:25,500
so if you have a few lines of code then

802
00:33:25,500 --> 00:33:26,820
you magically have an application you

803
00:33:26,820 --> 00:33:28,380
can do stuff of course it's not magic

804
00:33:28,380 --> 00:33:30,120
it's depending a lot of configuration

805
00:33:30,120 --> 00:33:31,919
defaults and those defaults might

806
00:33:31,919 --> 00:33:33,179
actually hamper you if it comes to

807
00:33:33,179 --> 00:33:35,779
secret management

808
00:33:36,059 --> 00:33:38,279
rotate Secrets often and if you can use

809
00:33:38,279 --> 00:33:40,019
ephemeral Secrets where the secret

810
00:33:40,019 --> 00:33:42,299
generation and deletion basically shows

811
00:33:42,299 --> 00:33:44,279
an intent to use a certain service but

812
00:33:44,279 --> 00:33:45,779
that the secret will only be there for

813
00:33:45,779 --> 00:33:47,279
as long as you have basically use that

814
00:33:47,279 --> 00:33:50,100
service for a given request

815
00:33:50,100 --> 00:33:51,659
um reduced to Blossom radius of your

816
00:33:51,659 --> 00:33:53,760
secret so if a secret is somewhere

817
00:33:53,760 --> 00:33:55,799
somewhat hard-coded or if a secret is

818
00:33:55,799 --> 00:33:57,000
easy detectable within your

819
00:33:57,000 --> 00:33:59,159
infrastructure or somewhere else make

820
00:33:59,159 --> 00:34:01,140
sure that the secret Is Not An Almighty

821
00:34:01,140 --> 00:34:02,340
password to your complete Cloud

822
00:34:02,340 --> 00:34:03,899
environment and anything else you

823
00:34:03,899 --> 00:34:05,519
possibly could attend to

824
00:34:05,519 --> 00:34:08,460
make sure that that given secret is then

825
00:34:08,460 --> 00:34:11,219
only allowing the servers consuming it

826
00:34:11,219 --> 00:34:13,679
to do exactly what it needs no extra

827
00:34:13,679 --> 00:34:15,839
writer whatsoever

828
00:34:15,839 --> 00:34:17,940
and make sure you reduce exposure you

829
00:34:17,940 --> 00:34:19,918
don't have to so the easy thing

830
00:34:19,918 --> 00:34:21,300
everybody would think of is okay let's

831
00:34:21,300 --> 00:34:22,980
make sure all of our you know company

832
00:34:22,980 --> 00:34:24,899
repositories aren't public

833
00:34:24,899 --> 00:34:26,820
but maybe we should go a few steps

834
00:34:26,820 --> 00:34:28,619
further and thinking of hey do really

835
00:34:28,619 --> 00:34:30,359
everybody in your organization need to

836
00:34:30,359 --> 00:34:31,918
have access to all the assets within the

837
00:34:31,918 --> 00:34:33,540
organization or can we take it down a

838
00:34:33,540 --> 00:34:34,560
little bit

839
00:34:34,560 --> 00:34:36,659
similarly issue we have maybe policies

840
00:34:36,659 --> 00:34:38,040
in our secret management solution to

841
00:34:38,040 --> 00:34:39,659
make sure that some people can access

842
00:34:39,659 --> 00:34:42,359
some of the secrets they require but in

843
00:34:42,359 --> 00:34:44,099
most cases possibly nobody needs access

844
00:34:44,099 --> 00:34:45,540
and it's just a computer thing you'll

845
00:34:45,540 --> 00:34:47,159
need to see the main the data of a

846
00:34:47,159 --> 00:34:49,139
secret

847
00:34:49,139 --> 00:34:50,639
um and have logging alerting in place

848
00:34:50,639 --> 00:34:53,099
not like the guy from The Little Disney

849
00:34:53,099 --> 00:34:54,359
movie

850
00:34:54,359 --> 00:34:56,940
um but make sure you really can tell uh

851
00:34:56,940 --> 00:34:59,280
when a secret is being accessed and more

852
00:34:59,280 --> 00:35:00,780
importantly make sure you're able to

853
00:35:00,780 --> 00:35:03,660
tell from the uh

854
00:35:03,660 --> 00:35:07,440
resource required that is basically used

855
00:35:07,440 --> 00:35:09,660
as the place where you authenticate to

856
00:35:09,660 --> 00:35:11,940
with the secret or the place that will

857
00:35:11,940 --> 00:35:13,619
basically generate materials with the

858
00:35:13,619 --> 00:35:15,420
secret that

859
00:35:15,420 --> 00:35:16,800
um

860
00:35:16,800 --> 00:35:18,599
um that really shows locking and

861
00:35:18,599 --> 00:35:20,640
alerting to see like hey where is the

862
00:35:20,640 --> 00:35:23,640
secrets consumer coming from is that

863
00:35:23,640 --> 00:35:25,500
from the place it's supposed to be or is

864
00:35:25,500 --> 00:35:28,520
it somewhere completely different

865
00:35:29,099 --> 00:35:30,960
um you haven't that set

866
00:35:30,960 --> 00:35:33,359
um we can really use your help

867
00:35:33,359 --> 00:35:35,940
um so if you want to uh have a drive of

868
00:35:35,940 --> 00:35:38,220
our of our project promote it if you can

869
00:35:38,220 --> 00:35:40,500
give feedback whether through a wolf

870
00:35:40,500 --> 00:35:42,839
slack or project wrong Secrets um and

871
00:35:42,839 --> 00:35:45,240
try to improve your project with PRS if

872
00:35:45,240 --> 00:35:46,680
you feel like hey this is something I

873
00:35:46,680 --> 00:35:48,119
can do I would love to contribute a

874
00:35:48,119 --> 00:35:50,339
little bit and of course we'll list you

875
00:35:50,339 --> 00:35:53,099
as one of our contributors then as uh uh

876
00:35:53,099 --> 00:35:54,420
um and promote you in any of our

877
00:35:54,420 --> 00:35:56,640
sessions

878
00:35:56,640 --> 00:36:00,240
and that sort of computer session a

879
00:36:00,240 --> 00:36:02,339
little bit earlier than expected so we

880
00:36:02,339 --> 00:36:04,079
still have a little bit of time left are

881
00:36:04,079 --> 00:36:06,740
there any questions

882
00:36:09,420 --> 00:36:11,220
I think

883
00:36:11,220 --> 00:36:13,020
um there are no questions so far from

884
00:36:13,020 --> 00:36:15,780
the audience and it was really uh

885
00:36:15,780 --> 00:36:17,820
amazing and wonderful session from you

886
00:36:17,820 --> 00:36:19,920
guys because we have covered all the

887
00:36:19,920 --> 00:36:22,079
aspects of from the attackers point of

888
00:36:22,079 --> 00:36:24,960
view and to the defender's side how to

889
00:36:24,960 --> 00:36:26,579
um how to find the secrets and how to

890
00:36:26,579 --> 00:36:28,859
secure the secrets to reduce the attack

891
00:36:28,859 --> 00:36:31,619
surface and the major key takeaways from

892
00:36:31,619 --> 00:36:33,839
this session is like we should not uh

893
00:36:33,839 --> 00:36:36,839
store the secrets in a hard-coded way to

894
00:36:36,839 --> 00:36:39,420
reduce the attack surface and always

895
00:36:39,420 --> 00:36:42,000
keep logging and alerting in place very

896
00:36:42,000 --> 00:36:43,980
insightful and very great session thank

897
00:36:43,980 --> 00:36:45,180
you so much again

898
00:36:45,180 --> 00:36:48,300
yeah I do have some questions so what is

899
00:36:48,300 --> 00:36:49,980
your favorite challenge of the project

900
00:36:49,980 --> 00:36:52,579
and why

901
00:36:55,320 --> 00:36:57,839
you want to start doing it yeah sure so

902
00:36:57,839 --> 00:37:01,380
my favorite challenge is let me share my

903
00:37:01,380 --> 00:37:03,359
screen on that one

904
00:37:03,359 --> 00:37:04,740
because

905
00:37:04,740 --> 00:37:06,859
um is I think

906
00:37:06,859 --> 00:37:11,820
uh sorry is 14. so 14 is special to me

907
00:37:11,820 --> 00:37:14,220
because when I try to explain our

908
00:37:14,220 --> 00:37:15,780
project to a friend of mine who's a

909
00:37:15,780 --> 00:37:17,760
driving instructor so it has nothing to

910
00:37:17,760 --> 00:37:21,720
do with it he was like hey isn't this

911
00:37:21,720 --> 00:37:23,700
the same as my colleague who just has

912
00:37:23,700 --> 00:37:25,980
one two three four as his password to

913
00:37:25,980 --> 00:37:27,599
his password manager and it has all

914
00:37:27,599 --> 00:37:29,099
these awesome passwords inside but it's

915
00:37:29,099 --> 00:37:30,780
just one two three four and I felt like

916
00:37:30,780 --> 00:37:32,760
that's stupid why would you do that and

917
00:37:32,760 --> 00:37:35,040
we figured that is awesome that needs to

918
00:37:35,040 --> 00:37:36,660
be a challenge and this challenge

919
00:37:36,660 --> 00:37:38,940
basically shows that Secrets management

920
00:37:38,940 --> 00:37:41,280
is not just some corporate infosec thing

921
00:37:41,280 --> 00:37:43,680
or whatever or or a unicorn let's do

922
00:37:43,680 --> 00:37:45,900
this right type of thing but it's in our

923
00:37:45,900 --> 00:37:48,660
daily lives um in every person that

924
00:37:48,660 --> 00:37:50,520
needs to you know secure access to

925
00:37:50,520 --> 00:37:52,859
whatever Services you dare he or she is

926
00:37:52,859 --> 00:37:55,380
using uh you end up

927
00:37:55,380 --> 00:37:57,960
um having to protect your secrets so so

928
00:37:57,960 --> 00:37:59,760
this is to me is one of the most awesome

929
00:37:59,760 --> 00:38:02,160
challenges uh um because it has a

930
00:38:02,160 --> 00:38:03,900
beautiful story behind it

931
00:38:03,900 --> 00:38:05,820
[Music]

932
00:38:05,820 --> 00:38:08,400
thank you for answering the question so

933
00:38:08,400 --> 00:38:10,440
the next question from my end is like

934
00:38:10,440 --> 00:38:12,599
like uh it is awesome to hear that

935
00:38:12,599 --> 00:38:15,060
you're running a multi-cloud application

936
00:38:15,060 --> 00:38:17,760
but what was your experience with

937
00:38:17,760 --> 00:38:19,500
building this application for multiple

938
00:38:19,500 --> 00:38:22,160
environments

939
00:38:23,400 --> 00:38:25,140
right yeah

940
00:38:25,140 --> 00:38:25,980
um

941
00:38:25,980 --> 00:38:29,579
I having bills all through the the cloud

942
00:38:29,579 --> 00:38:31,200
environments

943
00:38:31,200 --> 00:38:33,300
um or well three of the major public

944
00:38:33,300 --> 00:38:35,339
clouds I should say

945
00:38:35,339 --> 00:38:39,119
it's it's it's quite painful to

946
00:38:39,119 --> 00:38:41,820
um to do this even though we were using

947
00:38:41,820 --> 00:38:44,400
kubernetes and theoretically that's

948
00:38:44,400 --> 00:38:46,020
something that's quite portable right

949
00:38:46,020 --> 00:38:49,920
you go from from what to uh to the other

950
00:38:49,920 --> 00:38:50,880
um

951
00:38:50,880 --> 00:38:54,119
but uh there are always implementation

952
00:38:54,119 --> 00:38:56,640
details associated with a specific cloud

953
00:38:56,640 --> 00:38:57,780
and

954
00:38:57,780 --> 00:39:00,300
especially learning Azure for example

955
00:39:00,300 --> 00:39:02,640
and how that interacts with our an

956
00:39:02,640 --> 00:39:07,079
environment was uh quite a pain

957
00:39:07,079 --> 00:39:09,420
um not even going into

958
00:39:09,420 --> 00:39:12,359
the updates and say uh there's some life

959
00:39:12,359 --> 00:39:13,740
cycle management update you have to

960
00:39:13,740 --> 00:39:15,599
upgrade a major kubernetes version and

961
00:39:15,599 --> 00:39:17,940
then that's different per Cloud as well

962
00:39:17,940 --> 00:39:19,500
so

963
00:39:19,500 --> 00:39:23,220
um there are quite some things

964
00:39:23,220 --> 00:39:26,280
um that are yeah painful in in

965
00:39:26,280 --> 00:39:28,800
maintaining three separate clouds and I

966
00:39:28,800 --> 00:39:30,180
think it's it's

967
00:39:30,180 --> 00:39:33,900
really good to keep a bit of focus if

968
00:39:33,900 --> 00:39:37,260
you want to do things well

969
00:39:37,260 --> 00:39:41,040
um before you go multi-cloud and there's

970
00:39:41,040 --> 00:39:43,820
actually because of this there are some

971
00:39:43,820 --> 00:39:47,280
challenges in there uh specific to some

972
00:39:47,280 --> 00:39:49,020
of the clouds

973
00:39:49,020 --> 00:39:50,280
um that are

974
00:39:50,280 --> 00:39:52,500
pitfalls

975
00:39:52,500 --> 00:39:54,000
um and if you want to do things in a

976
00:39:54,000 --> 00:39:56,160
generic way like put things in terraform

977
00:39:56,160 --> 00:39:58,560
and put things in a terraform state for

978
00:39:58,560 --> 00:40:00,480
example uh you might end up with a

979
00:40:00,480 --> 00:40:02,339
secret entire form State and and that's

980
00:40:02,339 --> 00:40:03,780
also

981
00:40:03,780 --> 00:40:05,640
um one of the things that we then

982
00:40:05,640 --> 00:40:07,859
highlighted as a challenge

983
00:40:07,859 --> 00:40:08,940
um

984
00:40:08,940 --> 00:40:13,460
uh so that you can learn from that

985
00:40:13,680 --> 00:40:15,660
okay thanks for answering this question

986
00:40:15,660 --> 00:40:17,880
uh one more question from the audience

987
00:40:17,880 --> 00:40:20,280
is it life project could we expect or

988
00:40:20,280 --> 00:40:23,880
new challenges to pop up in the future

989
00:40:23,880 --> 00:40:26,820
so I'll I'll take this one so

990
00:40:26,820 --> 00:40:29,700
um yes it's a very live project we have

991
00:40:29,700 --> 00:40:32,760
releases almost every two weeks at least

992
00:40:32,760 --> 00:40:34,079
that's what we attend to whether it's

993
00:40:34,079 --> 00:40:36,300
maintenance releases because uh GitHub

994
00:40:36,300 --> 00:40:37,680
is telling us that our resources are

995
00:40:37,680 --> 00:40:39,300
outdated again and to make sure you can

996
00:40:39,300 --> 00:40:42,060
use this we are updating it on a regular

997
00:40:42,060 --> 00:40:43,859
basis

998
00:40:43,859 --> 00:40:45,900
um we this morning just announce the

999
00:40:45,900 --> 00:40:47,940
upcoming of the first binary search

1000
00:40:47,940 --> 00:40:49,680
challenges and I don't mean buying a

1001
00:40:49,680 --> 00:40:51,480
research tree like algorithmic fun stuff

1002
00:40:51,480 --> 00:40:53,880
but you know reverse engineer binaries

1003
00:40:53,880 --> 00:40:55,920
to find the secrets inside which will

1004
00:40:55,920 --> 00:40:57,780
start with releasing a sea level a sea

1005
00:40:57,780 --> 00:41:00,000
based challenge then C plus plus golang

1006
00:41:00,000 --> 00:41:02,520
rust and maybe even Swift so we can

1007
00:41:02,520 --> 00:41:04,020
virtually show it doesn't matter which

1008
00:41:04,020 --> 00:41:06,119
language you use or how you go to

1009
00:41:06,119 --> 00:41:07,920
machine goat

1010
00:41:07,920 --> 00:41:11,520
um you'll end up in trouble basically

1011
00:41:11,520 --> 00:41:13,320
um so that's that's the one list

1012
00:41:13,320 --> 00:41:14,640
um similarly

1013
00:41:14,640 --> 00:41:17,760
um uh uh there is a few challenges being

1014
00:41:17,760 --> 00:41:20,040
worked on by a few volunteers already

1015
00:41:20,040 --> 00:41:22,800
um which are assigned issues um and we

1016
00:41:22,800 --> 00:41:24,780
have started some of the preparations

1017
00:41:24,780 --> 00:41:27,420
for ctfd which is going relatively slow

1018
00:41:27,420 --> 00:41:28,859
because there's a lot of integration we

1019
00:41:28,859 --> 00:41:30,000
need to make sure that will work

1020
00:41:30,000 --> 00:41:31,500
properly

1021
00:41:31,500 --> 00:41:33,119
um and the test bed is continuously

1022
00:41:33,119 --> 00:41:35,339
extending and we already hooked up with

1023
00:41:35,339 --> 00:41:37,740
one of the organizations that publicly

1024
00:41:37,740 --> 00:41:39,900
said hey where that skid guardian and

1025
00:41:39,900 --> 00:41:41,280
git Guardian if you're watching this

1026
00:41:41,280 --> 00:41:42,720
thank you so much for your support and

1027
00:41:42,720 --> 00:41:44,700
Shout out in your blog we basically said

1028
00:41:44,700 --> 00:41:47,099
We are Becoming ovos member because I

1029
00:41:47,099 --> 00:41:49,560
want to do this and a few other things

1030
00:41:49,560 --> 00:41:51,240
um we are in touch with them to make

1031
00:41:51,240 --> 00:41:53,460
sure that we add more and more secrets

1032
00:41:53,460 --> 00:41:55,440
and we hope that other security or

1033
00:41:55,440 --> 00:41:57,240
Secrets vendors will follow

1034
00:41:57,240 --> 00:42:00,180
um to you know uh test their stuff the

1035
00:42:00,180 --> 00:42:01,500
test bet and at the same time we're

1036
00:42:01,500 --> 00:42:03,300
extending it continuously

1037
00:42:03,300 --> 00:42:05,940
so not just challenges but also uh

1038
00:42:05,940 --> 00:42:07,619
Secrets hidden in one branch to see if

1039
00:42:07,619 --> 00:42:10,700
you can basically find them

1040
00:42:14,460 --> 00:42:17,220
project shows mostly what is not a good

1041
00:42:17,220 --> 00:42:19,140
idea in terms of handling Secrets can

1042
00:42:19,140 --> 00:42:22,320
you share a few good ideas as well for

1043
00:42:22,320 --> 00:42:23,520
the same

1044
00:42:23,520 --> 00:42:25,200
sure sure

1045
00:42:25,200 --> 00:42:27,319
um

1046
00:42:29,720 --> 00:42:32,760
so um uh so

1047
00:42:32,760 --> 00:42:35,700
um uh there's a few things so of course

1048
00:42:35,700 --> 00:42:37,140
there were the takeaways right let's

1049
00:42:37,140 --> 00:42:39,720
let's quickly dive into those so that we

1050
00:42:39,720 --> 00:42:41,940
can easily still see them

1051
00:42:41,940 --> 00:42:44,280
um so these are the basic takeaways as

1052
00:42:44,280 --> 00:42:45,660
they never hard code if you don't have

1053
00:42:45,660 --> 00:42:47,640
to don't trust default of the platforms

1054
00:42:47,640 --> 00:42:49,140
make sure you rotate or use it for

1055
00:42:49,140 --> 00:42:51,599
Emerald secrets and once you start

1056
00:42:51,599 --> 00:42:53,339
thinking about rotation intramural

1057
00:42:53,339 --> 00:42:54,960
secrets you automatically end up with

1058
00:42:54,960 --> 00:42:57,079
one of the more major secret management

1059
00:42:57,079 --> 00:42:59,579
platforms that are designed to do this

1060
00:42:59,579 --> 00:43:02,760
well which can be any of the known Vault

1061
00:43:02,760 --> 00:43:05,160
projects basically

1062
00:43:05,160 --> 00:43:07,619
um and of course reducing the blast

1063
00:43:07,619 --> 00:43:09,540
radius of a secret which means actually

1064
00:43:09,540 --> 00:43:11,760
not specifically handle Secrets

1065
00:43:11,760 --> 00:43:13,560
management but really reconsider your

1066
00:43:13,560 --> 00:43:15,300
identity and access management strategy

1067
00:43:15,300 --> 00:43:18,480
so not one account to rule them all but

1068
00:43:18,480 --> 00:43:20,579
multiple accounts for different reasons

1069
00:43:20,579 --> 00:43:22,500
um and good luck with managing those

1070
00:43:22,500 --> 00:43:23,160
um

1071
00:43:23,160 --> 00:43:24,720
and of course

1072
00:43:24,720 --> 00:43:26,160
um uh you're looking alerting is

1073
00:43:26,160 --> 00:43:28,140
something that is also very important

1074
00:43:28,140 --> 00:43:32,460
what we often see in the wild uh uh is

1075
00:43:32,460 --> 00:43:34,400
that um

1076
00:43:34,400 --> 00:43:36,780
teams often say like Hey we're never

1077
00:43:36,780 --> 00:43:39,599
hacked or um uh we sure secrets are

1078
00:43:39,599 --> 00:43:42,240
secure but there is no law showing when

1079
00:43:42,240 --> 00:43:43,920
when a secret has been used for

1080
00:43:43,920 --> 00:43:45,839
authentication for instance or when some

1081
00:43:45,839 --> 00:43:48,720
resource that can only be accessed after

1082
00:43:48,720 --> 00:43:51,540
the sequence is being used that that the

1083
00:43:51,540 --> 00:43:53,160
access to that given resources being

1084
00:43:53,160 --> 00:43:55,140
lost so

1085
00:43:55,140 --> 00:43:56,160
um make sure you get your looking

1086
00:43:56,160 --> 00:43:58,619
alerting in place not just about from

1087
00:43:58,619 --> 00:44:00,839
your secrets management tool but also on

1088
00:44:00,839 --> 00:44:05,579
those ends uh where uh we basically

1089
00:44:05,579 --> 00:44:08,460
um uh are waiting for the secrets to

1090
00:44:08,460 --> 00:44:09,660
land in order to be able to do

1091
00:44:09,660 --> 00:44:12,618
actionable items

1092
00:44:12,839 --> 00:44:16,440
so in that sense yeah um that's uh um

1093
00:44:16,440 --> 00:44:19,920
that's uh um that can be very valuable

1094
00:44:19,920 --> 00:44:21,540
um and the other thing really is the

1095
00:44:21,540 --> 00:44:23,700
resources we showed earlier

1096
00:44:23,700 --> 00:44:25,319
um and those resources still need to be

1097
00:44:25,319 --> 00:44:28,140
extended a bit and that will be let me

1098
00:44:28,140 --> 00:44:31,260
see if I can quickly pop that up

1099
00:44:31,260 --> 00:44:32,819
um that will be basically going over

1100
00:44:32,819 --> 00:44:35,220
these resources where it opens here we

1101
00:44:35,220 --> 00:44:36,960
link can be really recommended because

1102
00:44:36,960 --> 00:44:39,000
you get tons of resources from the asvs

1103
00:44:39,000 --> 00:44:40,319
and other things in terms of actionable

1104
00:44:40,319 --> 00:44:42,359
items they can really help you as well

1105
00:44:42,359 --> 00:44:43,800
as the secret management cheat sheet

1106
00:44:43,800 --> 00:44:45,599
that more verbally tries to explain what

1107
00:44:45,599 --> 00:44:46,920
you should do or shouldn't do in

1108
00:44:46,920 --> 00:44:48,839
situations with the CI CD and stuff like

1109
00:44:48,839 --> 00:44:50,960
that

1110
00:44:51,060 --> 00:44:53,520
I'm definitely gonna have a look for

1111
00:44:53,520 --> 00:44:56,760
this resources and thanks for the

1112
00:44:56,760 --> 00:44:58,319
amazing session and the wonderful

1113
00:44:58,319 --> 00:45:00,900
session I really appreciate the session

1114
00:45:00,900 --> 00:45:02,339
and yeah

1115
00:45:02,339 --> 00:45:06,180
so I think we are over and

1116
00:45:06,180 --> 00:45:09,020
okay bye

1117
00:45:09,720 --> 00:45:11,280
thanks a lot

1118
00:45:11,280 --> 00:45:15,079
thank you thank you so much bye-bye

