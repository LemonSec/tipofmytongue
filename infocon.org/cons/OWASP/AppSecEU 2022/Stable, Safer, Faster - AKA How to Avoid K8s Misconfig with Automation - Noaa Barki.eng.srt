1
00:00:04,920 --> 00:00:07,560
hi everyone and welcome to the death

2
00:00:07,560 --> 00:00:10,320
secups track my name is larger fever and

3
00:00:10,320 --> 00:00:12,660
I'm a volunteer at the OAS community and

4
00:00:12,660 --> 00:00:15,059
I'll be moderating this session so

5
00:00:15,059 --> 00:00:17,640
during the next 45 minutes we'll hear

6
00:00:17,640 --> 00:00:21,300
Noah Barky present the stable stable

7
00:00:21,300 --> 00:00:24,359
safer faster okay how to avoid

8
00:00:24,359 --> 00:00:27,779
kubernetes misconfig with automation so

9
00:00:27,779 --> 00:00:30,000
please submit any questions you may have

10
00:00:30,000 --> 00:00:32,820
in the Q a tab and I'll be asking our

11
00:00:32,820 --> 00:00:34,860
speaker your questions in the last 10

12
00:00:34,860 --> 00:00:37,920
minutes so and with that I'll hand over

13
00:00:37,920 --> 00:00:41,160
the world's the world the World to You

14
00:00:41,160 --> 00:00:42,780
Noah

15
00:00:42,780 --> 00:00:45,180
thank you very much and thank you

16
00:00:45,180 --> 00:00:46,980
everybody for joining me for this

17
00:00:46,980 --> 00:00:49,800
session I'm super excited about it and

18
00:00:49,800 --> 00:00:51,660
mainly because

19
00:00:51,660 --> 00:00:53,579
the story behind the stock actually

20
00:00:53,579 --> 00:00:56,579
began a long long time ago one day my

21
00:00:56,579 --> 00:00:59,100
dear friend Neve who is also a colleague

22
00:00:59,100 --> 00:01:00,660
he's a devops engineer in the company

23
00:01:00,660 --> 00:01:02,940
that I work for has invited me to

24
00:01:02,940 --> 00:01:05,700
joining him to a meet-up and I said yeah

25
00:01:05,700 --> 00:01:07,560
sure it sounds fun what's what's the

26
00:01:07,560 --> 00:01:10,460
made up and he said I don't remember

27
00:01:10,460 --> 00:01:14,520
something about Fox definitely get UPS

28
00:01:14,520 --> 00:01:17,820
and well first of all he totally had me

29
00:01:17,820 --> 00:01:21,360
get UPS I mean come on but there was

30
00:01:21,360 --> 00:01:25,259
still a small problem though because

31
00:01:25,259 --> 00:01:27,600
I'm a developer I'm not a devops

32
00:01:27,600 --> 00:01:29,340
engineer I do

33
00:01:29,340 --> 00:01:34,140
I do a lot of devops work and I do work

34
00:01:34,140 --> 00:01:36,600
with a lot of damage technology but I'm

35
00:01:36,600 --> 00:01:39,720
a full stack engineer so I don't live I

36
00:01:39,720 --> 00:01:41,820
don't think I should be there like I I'm

37
00:01:41,820 --> 00:01:45,360
not like a real devops you know and he

38
00:01:45,360 --> 00:01:46,500
completely

39
00:01:46,500 --> 00:01:48,600
disagree with me and told me that it's

40
00:01:48,600 --> 00:01:50,759
complete nonsense and that I should be

41
00:01:50,759 --> 00:01:52,439
there he will send me the address he

42
00:01:52,439 --> 00:01:54,899
told me be there to know it's tomorrow 8

43
00:01:54,899 --> 00:01:56,100
am

44
00:01:56,100 --> 00:02:00,600
and I said okay let's do it and we went

45
00:02:00,600 --> 00:02:02,399
and ladies and gentlemen

46
00:02:02,399 --> 00:02:05,280
it was the best Meetup that I have ever

47
00:02:05,280 --> 00:02:09,660
been to why two reasons first of all it

48
00:02:09,660 --> 00:02:11,220
was the first time that I realized how

49
00:02:11,220 --> 00:02:13,200
much I loved devops and the second

50
00:02:13,200 --> 00:02:15,420
reason is that it was the first time

51
00:02:15,420 --> 00:02:18,660
that I said out loud that I believe that

52
00:02:18,660 --> 00:02:21,599
every developer should practice devops

53
00:02:21,599 --> 00:02:24,599
at least a little bit so now after I

54
00:02:24,599 --> 00:02:26,459
said it now we can really start talking

55
00:02:26,459 --> 00:02:30,060
so hi everybody my name is Noah barki I

56
00:02:30,060 --> 00:02:32,819
am a developer Advocate and a full stack

57
00:02:32,819 --> 00:02:36,060
developer for about seven years and also

58
00:02:36,060 --> 00:02:38,280
a tech writer one of the leaders of

59
00:02:38,280 --> 00:02:40,500
GitHub Israel Community which is their

60
00:02:40,500 --> 00:02:42,599
largest digital community in the whole

61
00:02:42,599 --> 00:02:46,200
world you know in the whole universe and

62
00:02:46,200 --> 00:02:48,360
I also work at an amazing company called

63
00:02:48,360 --> 00:02:50,280
the tree where we help developers and

64
00:02:50,280 --> 00:02:52,500
devops Engineers to prevent kubernetes

65
00:02:52,500 --> 00:02:54,900
misconfigurations from ever reaching

66
00:02:54,900 --> 00:02:56,879
production but why am I telling you all

67
00:02:56,879 --> 00:02:59,640
this it's because partly my job at the

68
00:02:59,640 --> 00:03:01,860
tree is not only to understand how

69
00:03:01,860 --> 00:03:03,720
kubernetes work but also to understand

70
00:03:03,720 --> 00:03:06,900
how you can blow up your own clusters so

71
00:03:06,900 --> 00:03:09,180
researching about misconfiguration is a

72
00:03:09,180 --> 00:03:12,239
big part of my role but let's go back to

73
00:03:12,239 --> 00:03:13,440
the Meetup story

74
00:03:13,440 --> 00:03:16,800
so oh of course I forgot that I have the

75
00:03:16,800 --> 00:03:18,659
slide yes what are we going to talk

76
00:03:18,659 --> 00:03:20,819
about today today we'll talk about how

77
00:03:20,819 --> 00:03:23,519
to shift left create an automated and

78
00:03:23,519 --> 00:03:25,640
best pipeline for your kubernetes

79
00:03:25,640 --> 00:03:27,780
deployments while preventing these

80
00:03:27,780 --> 00:03:29,819
configurations from reaching production

81
00:03:29,819 --> 00:03:32,159
we'll talk about rbcd a little bit we'll

82
00:03:32,159 --> 00:03:33,720
cover some pipelines and we'll talk

83
00:03:33,720 --> 00:03:35,519
about best practices when it comes to

84
00:03:35,519 --> 00:03:38,220
kubernetes so now let's go back to the

85
00:03:38,220 --> 00:03:40,620
Meetup story so

86
00:03:40,620 --> 00:03:44,280
we went to the Meetup and obviously I

87
00:03:44,280 --> 00:03:46,200
was the only developer there

88
00:03:46,200 --> 00:03:48,120
I remember that everybody seemed to be

89
00:03:48,120 --> 00:03:50,159
like so grown up like they figured

90
00:03:50,159 --> 00:03:51,780
everything in life

91
00:03:51,780 --> 00:03:54,239
and they started with a 40-minute

92
00:03:54,239 --> 00:03:56,400
session about Fox which was very

93
00:03:56,400 --> 00:03:59,459
interesting uh way more channel for

94
00:03:59,459 --> 00:04:01,980
obviously but more in that later and

95
00:04:01,980 --> 00:04:04,739
after that the organizer said the pizzas

96
00:04:04,739 --> 00:04:06,599
in the bad guys let's take a short break

97
00:04:06,599 --> 00:04:09,959
and then we'll have a panel so I looked

98
00:04:09,959 --> 00:04:11,760
at Steve and I was like so surprised and

99
00:04:11,760 --> 00:04:14,519
Neve told me that apparently they have

100
00:04:14,519 --> 00:04:17,220
they having a panel a cloud native

101
00:04:17,220 --> 00:04:19,440
experts panel where people can ask them

102
00:04:19,440 --> 00:04:21,180
whatever they want

103
00:04:21,180 --> 00:04:24,479
and you know how it usually goes people

104
00:04:24,479 --> 00:04:26,160
are too embarrassed to ask anything

105
00:04:26,160 --> 00:04:30,660
right so after four or three minutes of

106
00:04:30,660 --> 00:04:34,020
silence one guy raised his hand and said

107
00:04:34,020 --> 00:04:37,080
that they started to use jfrog registry

108
00:04:37,080 --> 00:04:39,300
in the company that he works for and

109
00:04:39,300 --> 00:04:40,139
that

110
00:04:40,139 --> 00:04:42,600
and he shared that he's very frustrated

111
00:04:42,600 --> 00:04:45,120
with the developers and some of the

112
00:04:45,120 --> 00:04:47,520
devops engineer in in his organization

113
00:04:47,520 --> 00:04:49,860
because not only that they don't know

114
00:04:49,860 --> 00:04:53,820
how to use the registry they get so mad

115
00:04:53,820 --> 00:04:57,479
all the time because they upset that

116
00:04:57,479 --> 00:05:00,540
they're built are getting failed and he

117
00:05:00,540 --> 00:05:03,180
don't know what to do so he asked the

118
00:05:03,180 --> 00:05:05,699
cloud native experts what are the best

119
00:05:05,699 --> 00:05:07,199
practices when it comes to shift left

120
00:05:07,199 --> 00:05:09,840
how I'm supposed to do it and they

121
00:05:09,840 --> 00:05:11,400
talked about it and then another guy

122
00:05:11,400 --> 00:05:13,380
raised his hand and said that yeah I

123
00:05:13,380 --> 00:05:15,300
actually have the same problem but these

124
00:05:15,300 --> 00:05:17,460
security issues what am I supposed to do

125
00:05:17,460 --> 00:05:19,380
with those Developers

126
00:05:19,380 --> 00:05:22,500
and they talked about it in another guy

127
00:05:22,500 --> 00:05:24,240
raised to send and said that he's too

128
00:05:24,240 --> 00:05:27,240
afraid to add kubernetes resources to

129
00:05:27,240 --> 00:05:30,000
the application repository because he is

130
00:05:30,000 --> 00:05:31,320
afraid that the developers those

131
00:05:31,320 --> 00:05:33,840
developers will ruin everything and they

132
00:05:33,840 --> 00:05:35,580
talk about those developers and those

133
00:05:35,580 --> 00:05:38,180
developers and I was like sitting there

134
00:05:38,180 --> 00:05:41,280
hearing those developers ruin and you

135
00:05:41,280 --> 00:05:43,979
don't care who don't understand we don't

136
00:05:43,979 --> 00:05:46,680
know nothing about kubernetes I was like

137
00:05:46,680 --> 00:05:50,039
how can they say that but but you know

138
00:05:50,039 --> 00:05:51,720
it was too embarrassed to say something

139
00:05:51,720 --> 00:05:53,460
because I'm one of those developers

140
00:05:53,460 --> 00:05:55,680
right

141
00:05:55,680 --> 00:05:58,199
but after a few minutes

142
00:05:58,199 --> 00:06:00,120
I calmed myself

143
00:06:00,120 --> 00:06:03,180
and I decided that no no no this is not

144
00:06:03,180 --> 00:06:05,639
a bug this is a feature that I am the

145
00:06:05,639 --> 00:06:07,259
only developer here

146
00:06:07,259 --> 00:06:10,440
so I raise my hand and I said

147
00:06:10,440 --> 00:06:12,560
hi hi hi

148
00:06:12,560 --> 00:06:15,660
my name is Noah I am a developer

149
00:06:15,660 --> 00:06:18,660
Advocate and I'm a foster developer and

150
00:06:18,660 --> 00:06:21,780
may I speak in the name of my people no

151
00:06:21,780 --> 00:06:24,300
I didn't say that I just asked

152
00:06:24,300 --> 00:06:26,759
permission to speak and permission was

153
00:06:26,759 --> 00:06:29,100
granted I remember that everybody like

154
00:06:29,100 --> 00:06:31,319
turned around to see who's always just

155
00:06:31,319 --> 00:06:34,199
got permission to speak in this panel of

156
00:06:34,199 --> 00:06:36,780
obviously I was in the back and Liv like

157
00:06:36,780 --> 00:06:38,580
looked at me and was like I don't know

158
00:06:38,580 --> 00:06:39,479
her

159
00:06:39,479 --> 00:06:41,759
and

160
00:06:41,759 --> 00:06:45,600
I hesitated for a minute and I looked at

161
00:06:45,600 --> 00:06:47,220
everybody and I said

162
00:06:47,220 --> 00:06:49,800
well you say that we don't care

163
00:06:49,800 --> 00:06:51,539
you say that we might ruin everything

164
00:06:51,539 --> 00:06:53,699
and that we don't know how to use

165
00:06:53,699 --> 00:06:57,180
kubernetes or other mainly devops

166
00:06:57,180 --> 00:06:58,979
Technologies and you're right you're

167
00:06:58,979 --> 00:07:01,560
right but first of all give me some

168
00:07:01,560 --> 00:07:04,580
credit here I mean

169
00:07:04,680 --> 00:07:07,380
you have to remember that we're

170
00:07:07,380 --> 00:07:10,199
different personas we use different

171
00:07:10,199 --> 00:07:12,900
tools we even have different goals I

172
00:07:12,900 --> 00:07:15,300
mean I wake up every morning to be the

173
00:07:15,300 --> 00:07:17,819
best feature machine that this world has

174
00:07:17,819 --> 00:07:21,240
ever seen I have code to write tests to

175
00:07:21,240 --> 00:07:23,819
run bugs to fix I have the next feature

176
00:07:23,819 --> 00:07:26,099
to plan I also have tons of phone

177
00:07:26,099 --> 00:07:28,440
requests to review and I also need to

178
00:07:28,440 --> 00:07:30,000
make sure that me and my teammates

179
00:07:30,000 --> 00:07:31,680
follow best practices regarding

180
00:07:31,680 --> 00:07:33,780
stability maintenance security

181
00:07:33,780 --> 00:07:36,120
availability I also need to make sure

182
00:07:36,120 --> 00:07:38,280
that my application my features are

183
00:07:38,280 --> 00:07:41,280
reliable so why should I suddenly care

184
00:07:41,280 --> 00:07:43,440
about those yaml files that you put to

185
00:07:43,440 --> 00:07:45,900
my repository what the heck is terraform

186
00:07:45,900 --> 00:07:49,620
and why is the memory limit so important

187
00:07:49,620 --> 00:07:52,919
how do you expect us to work together on

188
00:07:52,919 --> 00:07:54,960
the same technology when I don't even

189
00:07:54,960 --> 00:07:57,739
understand it

190
00:07:59,160 --> 00:08:01,500
and then one guy

191
00:08:01,500 --> 00:08:04,199
has asked me the question that I fear

192
00:08:04,199 --> 00:08:06,500
the most

193
00:08:07,020 --> 00:08:08,880
he said

194
00:08:08,880 --> 00:08:10,380
so

195
00:08:10,380 --> 00:08:13,580
what do you suggest

196
00:08:13,800 --> 00:08:16,740
and I learned to them

197
00:08:16,740 --> 00:08:20,039
I was so embarrassed

198
00:08:20,039 --> 00:08:22,199
but once again I decided that no no this

199
00:08:22,199 --> 00:08:23,879
is not about this picture this is not

200
00:08:23,879 --> 00:08:26,520
about this is a feature and I said that

201
00:08:26,520 --> 00:08:28,860
well if you think about it kubernetes

202
00:08:28,860 --> 00:08:32,159
sort of like grabbed everybody and made

203
00:08:32,159 --> 00:08:35,820
us sit at table for the first time maybe

204
00:08:35,820 --> 00:08:38,760
like all of us and made us made us work

205
00:08:38,760 --> 00:08:41,219
on the same technology we have the I.T

206
00:08:41,219 --> 00:08:43,500
we have the devs we have the QA we have

207
00:08:43,500 --> 00:08:45,899
machine learning Engineers data

208
00:08:45,899 --> 00:08:49,440
scientists Security Experts and

209
00:08:49,440 --> 00:08:52,200
surprisingly the only one that actually

210
00:08:52,200 --> 00:08:54,839
know how to use kubernetes the cluster

211
00:08:54,839 --> 00:08:57,839
admin the kubernetes champion is the

212
00:08:57,839 --> 00:09:00,480
devops so here we go here it goes with

213
00:09:00,480 --> 00:09:02,820
the blink of an eye the devops become a

214
00:09:02,820 --> 00:09:04,080
bottleneck

215
00:09:04,080 --> 00:09:06,600
and this is why I see a lot of people

216
00:09:06,600 --> 00:09:08,580
talk about Chief left chief of security

217
00:09:08,580 --> 00:09:11,339
she steps tests and I even saw some

218
00:09:11,339 --> 00:09:13,320
articles and sessions about how to shift

219
00:09:13,320 --> 00:09:15,480
data management which is awesome if you

220
00:09:15,480 --> 00:09:16,620
ask me about

221
00:09:16,620 --> 00:09:20,760
the one thing that people tend to forget

222
00:09:20,760 --> 00:09:23,720
is how to shift left responsibilities

223
00:09:23,720 --> 00:09:27,180
and I hate that because if for instance

224
00:09:27,180 --> 00:09:30,560
I shift left security

225
00:09:30,560 --> 00:09:34,019
and I decide that this is this is

226
00:09:34,019 --> 00:09:36,300
something that I'm going to do now it is

227
00:09:36,300 --> 00:09:38,820
my job right now as a devops engineer to

228
00:09:38,820 --> 00:09:41,580
scan my images to make sure that I don't

229
00:09:41,580 --> 00:09:44,760
pull vulnerabilities images that it's my

230
00:09:44,760 --> 00:09:46,620
job to make sure that everybody use

231
00:09:46,620 --> 00:09:48,920
digestions instead of tags and other

232
00:09:48,920 --> 00:09:51,240
responsibilities this is my

233
00:09:51,240 --> 00:09:53,640
responsibility now but nobody teaches me

234
00:09:53,640 --> 00:09:56,580
how should I supposed to how how am I

235
00:09:56,580 --> 00:09:59,640
supposed to do it where should I start

236
00:09:59,640 --> 00:10:01,680
everybody talks about how important it

237
00:10:01,680 --> 00:10:04,080
is but not about the responsibility

238
00:10:04,080 --> 00:10:06,480
so let's talk about how to delegate

239
00:10:06,480 --> 00:10:09,300
responsibilities how to shift stuff not

240
00:10:09,300 --> 00:10:12,000
only the security or the testing or

241
00:10:12,000 --> 00:10:15,060
whatever you want to shift left but also

242
00:10:15,060 --> 00:10:16,860
how you should have the responsibility

243
00:10:16,860 --> 00:10:19,380
how you make it like really effective in

244
00:10:19,380 --> 00:10:21,720
your organization

245
00:10:21,720 --> 00:10:23,880
so starting with delegating the

246
00:10:23,880 --> 00:10:25,800
knowledge you need to learn about best

247
00:10:25,800 --> 00:10:28,500
practices and to teach others in the

248
00:10:28,500 --> 00:10:31,380
organizations educate the Developers for

249
00:10:31,380 --> 00:10:33,300
instance about kubernetes what is

250
00:10:33,300 --> 00:10:35,760
kubernetes what are its main components

251
00:10:35,760 --> 00:10:38,700
why specific configurations like memory

252
00:10:38,700 --> 00:10:41,220
limit are so important for their own

253
00:10:41,220 --> 00:10:44,220
work Educators in terms they will

254
00:10:44,220 --> 00:10:46,860
understand and explain to them what's in

255
00:10:46,860 --> 00:10:49,380
it for them how this is important for

256
00:10:49,380 --> 00:10:52,019
their own work for instance don't just

257
00:10:52,019 --> 00:10:56,700
ask the developers to use digest shares

258
00:10:56,700 --> 00:11:00,060
instead of tags no explain to them that

259
00:11:00,060 --> 00:11:02,640
shares are basically passion identifiers

260
00:11:02,640 --> 00:11:05,399
for the images and that tags are mutable

261
00:11:05,399 --> 00:11:10,860
so if you use hash or shares that are

262
00:11:10,860 --> 00:11:12,839
basically work the same as git commits

263
00:11:12,839 --> 00:11:15,540
you can guarantee that your image is the

264
00:11:15,540 --> 00:11:18,240
same so you prevent images in production

265
00:11:18,240 --> 00:11:19,860
from changing the unexpectedly because

266
00:11:19,860 --> 00:11:22,560
attackers can override the tag and I

267
00:11:22,560 --> 00:11:24,959
promise you that if you will explain it

268
00:11:24,959 --> 00:11:26,640
to them in a way that they will

269
00:11:26,640 --> 00:11:28,920
understand why it is so important for

270
00:11:28,920 --> 00:11:31,380
their own work they will not do the same

271
00:11:31,380 --> 00:11:33,420
mistake again because nobody wants to

272
00:11:33,420 --> 00:11:35,100
take down production and this is

273
00:11:35,100 --> 00:11:37,800
everyone's responsibility

274
00:11:37,800 --> 00:11:40,200
but you're probably thinking to yourself

275
00:11:40,200 --> 00:11:42,660
oh my God no are you crazy I'm not going

276
00:11:42,660 --> 00:11:45,060
to start you to make courses right now I

277
00:11:45,060 --> 00:11:46,860
have a lot of things to do I have a job

278
00:11:46,860 --> 00:11:49,680
you know so yeah it doesn't mean that

279
00:11:49,680 --> 00:11:51,300
suddenly you need to educate everybody

280
00:11:51,300 --> 00:11:53,700
about communities and everybody needs to

281
00:11:53,700 --> 00:11:55,860
learn everything about kubernetes yeah

282
00:11:55,860 --> 00:11:59,640
do it wisely choose your Champions pick

283
00:11:59,640 --> 00:12:02,459
those developers who are most interested

284
00:12:02,459 --> 00:12:05,279
in infrastructure code It's usually the

285
00:12:05,279 --> 00:12:07,200
back-end developers because it's sort of

286
00:12:07,200 --> 00:12:09,660
like the back end of the package but

287
00:12:09,660 --> 00:12:13,019
it's not really necessary the two stones

288
00:12:13,019 --> 00:12:16,019
developers and educate your knowledge to

289
00:12:16,019 --> 00:12:17,399
them

290
00:12:17,399 --> 00:12:20,399
why well think about it every

291
00:12:20,399 --> 00:12:22,440
organization has those front-end and

292
00:12:22,440 --> 00:12:24,000
back-end Developers

293
00:12:24,000 --> 00:12:26,399
you have those front-end developers who

294
00:12:26,399 --> 00:12:28,440
will never do back-end development but

295
00:12:28,440 --> 00:12:29,579
on the other hand you have those

296
00:12:29,579 --> 00:12:31,560
back-end developers who will never do

297
00:12:31,560 --> 00:12:33,779
front-end developers development because

298
00:12:33,779 --> 00:12:36,779
it's only silent in CSS and pixels I

299
00:12:36,779 --> 00:12:37,920
don't like it

300
00:12:37,920 --> 00:12:41,579
but every once in a while you have those

301
00:12:41,579 --> 00:12:44,519
True full stack developers you have

302
00:12:44,519 --> 00:12:47,459
those developers who do both Who belongs

303
00:12:47,459 --> 00:12:49,800
to both tribes who can explain the

304
00:12:49,800 --> 00:12:52,079
back-end developers what is the

305
00:12:52,079 --> 00:12:54,120
front-end development and vice versa

306
00:12:54,120 --> 00:12:56,220
this is the kind of developers that you

307
00:12:56,220 --> 00:12:58,620
look for but with devops technology with

308
00:12:58,620 --> 00:13:01,440
security responsibilities because they

309
00:13:01,440 --> 00:13:03,959
belong to both tribes and they can

310
00:13:03,959 --> 00:13:09,839
become your Ambassador in every Dev team

311
00:13:09,839 --> 00:13:12,899
and once you do it and you trust me it

312
00:13:12,899 --> 00:13:15,839
will take time it's process and they

313
00:13:15,839 --> 00:13:17,160
don't need to understand everything

314
00:13:17,160 --> 00:13:20,519
about AWS or Google or gt or whatever

315
00:13:20,519 --> 00:13:22,320
they need to understand the most

316
00:13:22,320 --> 00:13:23,459
relevant

317
00:13:23,459 --> 00:13:26,040
stuff that are related to the walk but

318
00:13:26,040 --> 00:13:28,800
when they understand it when they gained

319
00:13:28,800 --> 00:13:30,060
you trust

320
00:13:30,060 --> 00:13:33,000
grant them permissions permit them to

321
00:13:33,000 --> 00:13:34,920
educate the rest of the developers

322
00:13:34,920 --> 00:13:38,100
because then you will see that when a

323
00:13:38,100 --> 00:13:39,839
developer needs to ask something about

324
00:13:39,839 --> 00:13:43,800
this ICD or whatever they will come to

325
00:13:43,800 --> 00:13:47,399
the champion instead of you and here you

326
00:13:47,399 --> 00:13:50,100
reduce the bottleneck from yourself and

327
00:13:50,100 --> 00:13:52,380
you can be more focused on the rest of

328
00:13:52,380 --> 00:13:55,579
the things that you need to do

329
00:13:56,940 --> 00:13:59,279
now you're probably wondering okay

330
00:13:59,279 --> 00:14:01,860
sounds interesting but how let's let's

331
00:14:01,860 --> 00:14:03,899
talk in practice how do I do it so there

332
00:14:03,899 --> 00:14:05,399
are many ways to learn and share

333
00:14:05,399 --> 00:14:06,899
knowledge when it comes to sharing

334
00:14:06,899 --> 00:14:09,779
knowledge you can have company internal

335
00:14:09,779 --> 00:14:11,820
meetups you can share newsletters and

336
00:14:11,820 --> 00:14:14,160
white papers and you can share emails

337
00:14:14,160 --> 00:14:16,560
and when it comes to learning about best

338
00:14:16,560 --> 00:14:20,220
practices the most efficient way if you

339
00:14:20,220 --> 00:14:22,740
ask me is to learn from other companies

340
00:14:22,740 --> 00:14:25,560
tell your stories trust me before we

341
00:14:25,560 --> 00:14:27,240
launch the tree we wanted to learn as

342
00:14:27,240 --> 00:14:28,440
much as possible about the common

343
00:14:28,440 --> 00:14:30,420
misconfigurations and the pitfalls in

344
00:14:30,420 --> 00:14:33,300
the kubernetes area so what we did was

345
00:14:33,300 --> 00:14:36,959
to read more than 100 kubernetes failure

346
00:14:36,959 --> 00:14:39,540
stories and this is why I would like to

347
00:14:39,540 --> 00:14:42,380
welcome you to my very own private show

348
00:14:42,380 --> 00:14:46,250
what's the mistake game show

349
00:14:46,250 --> 00:14:47,579
[Music]

350
00:14:47,579 --> 00:14:49,740
are you ready okay let me explain it

351
00:14:49,740 --> 00:14:52,139
again so the game goes like this I'm

352
00:14:52,139 --> 00:14:54,600
going to show you two kubernetes

353
00:14:54,600 --> 00:14:58,380
manifests each time I'm going to point

354
00:14:58,380 --> 00:15:02,040
into a specific key on every manifest

355
00:15:02,040 --> 00:15:05,160
you will have to look very carefully

356
00:15:05,160 --> 00:15:07,680
and tell me well you can't tell me but

357
00:15:07,680 --> 00:15:09,720
you can tell me later in the Q a how did

358
00:15:09,720 --> 00:15:11,699
it went for you

359
00:15:11,699 --> 00:15:14,339
and you will have to decide which one

360
00:15:14,339 --> 00:15:17,279
you will deploy left

361
00:15:17,279 --> 00:15:19,680
or right green or blue

362
00:15:19,680 --> 00:15:24,420
are you ready let's do it so this is a

363
00:15:24,420 --> 00:15:26,760
current job configuration pay attention

364
00:15:26,760 --> 00:15:29,639
to the concurrency policy which one you

365
00:15:29,639 --> 00:15:30,779
will deploy

366
00:15:30,779 --> 00:15:32,639
left

367
00:15:32,639 --> 00:15:34,260
all right

368
00:15:34,260 --> 00:15:36,420
I'll give you all I'll give you like 10

369
00:15:36,420 --> 00:15:39,199
seconds for that

370
00:15:41,760 --> 00:15:46,519
I should have had like the sounds like

371
00:15:46,800 --> 00:15:51,079
to make it more interesting okay shut up

372
00:15:53,220 --> 00:15:59,699
and the right answer yay s right

373
00:16:00,120 --> 00:16:02,339
we always want to make sure that we set

374
00:16:02,339 --> 00:16:04,320
the concurrency policy to either forbid

375
00:16:04,320 --> 00:16:07,139
or to replace because if we wouldn't

376
00:16:07,139 --> 00:16:09,240
whenever the crown job will get failed

377
00:16:09,240 --> 00:16:11,699
it won't replace the previous one and

378
00:16:11,699 --> 00:16:13,440
this is actually something that happened

379
00:16:13,440 --> 00:16:15,899
to Target they had one feeling contract

380
00:16:15,899 --> 00:16:17,760
that created thousands of PODS that were

381
00:16:17,760 --> 00:16:21,000
constantly restarting and not only that

382
00:16:21,000 --> 00:16:22,860
it took their cluster down but it also

383
00:16:22,860 --> 00:16:25,860
caused them a lot of money let's move

384
00:16:25,860 --> 00:16:27,660
forward quickly to the next question

385
00:16:27,660 --> 00:16:30,420
this is another contract configuration

386
00:16:30,420 --> 00:16:33,060
and once again pay attention to the

387
00:16:33,060 --> 00:16:35,459
concurrency apology which one would it

388
00:16:35,459 --> 00:16:37,380
be left

389
00:16:37,380 --> 00:16:40,279
all right

390
00:16:50,880 --> 00:16:54,790
are you ready and the right answer is

391
00:16:54,790 --> 00:16:56,040
[Music]

392
00:16:56,040 --> 00:16:58,199
right again

393
00:16:58,199 --> 00:17:01,199
you see here on the left side the

394
00:17:01,199 --> 00:17:03,779
concurrency policy isn't part of the

395
00:17:03,779 --> 00:17:05,699
current job spec so we end up with

396
00:17:05,699 --> 00:17:08,579
Punjab basically without any limits and

397
00:17:08,579 --> 00:17:10,939
this is actually what happened to

398
00:17:10,939 --> 00:17:13,140
zelander which is an online fashion

399
00:17:13,140 --> 00:17:15,780
company with over six thousands

400
00:17:15,780 --> 00:17:18,900
employees they actually use the correct

401
00:17:18,900 --> 00:17:20,939
configuration or they placed it

402
00:17:20,939 --> 00:17:22,559
incorrectly in their yaml which

403
00:17:22,559 --> 00:17:26,099
basically took their API server down and

404
00:17:26,099 --> 00:17:28,799
yeah very very sad story let's move

405
00:17:28,799 --> 00:17:30,179
forward to the next and the last

406
00:17:30,179 --> 00:17:32,700
question I hope you with me

407
00:17:32,700 --> 00:17:35,280
this is supposed to be very easy for you

408
00:17:35,280 --> 00:17:38,580
containers this is a simple card which

409
00:17:38,580 --> 00:17:42,500
one would it be left or right

410
00:17:44,220 --> 00:17:48,360
and of course the right answer is the

411
00:17:48,360 --> 00:17:50,880
right and I'm sure you all got it but

412
00:17:50,880 --> 00:17:53,039
unfortunately blue Matador which was a

413
00:17:53,039 --> 00:17:54,960
small startup company back then they

414
00:17:54,960 --> 00:17:59,100
forgot to add the memory limit and what

415
00:17:59,100 --> 00:18:01,440
happened to them is that they their pod

416
00:18:01,440 --> 00:18:04,140
basically hosted a similogic application

417
00:18:04,140 --> 00:18:07,080
and their container are memory hubs so

418
00:18:07,080 --> 00:18:09,360
without having any limits

419
00:18:09,360 --> 00:18:11,640
nothing basically stopped from those

420
00:18:11,640 --> 00:18:13,140
containers to take up all the memory in

421
00:18:13,140 --> 00:18:16,440
the cluster and eventually caused out of

422
00:18:16,440 --> 00:18:18,660
memory issues

423
00:18:18,660 --> 00:18:22,380
sorry very sad very sad story but you

424
00:18:22,380 --> 00:18:23,460
see

425
00:18:23,460 --> 00:18:26,640
blue metador and the Lando and Target

426
00:18:26,640 --> 00:18:28,559
they aren't the only companies who

427
00:18:28,559 --> 00:18:30,059
suffered from these pretty innocent

428
00:18:30,059 --> 00:18:31,020
mistakes

429
00:18:31,020 --> 00:18:33,000
we're talking about big companies I'm

430
00:18:33,000 --> 00:18:34,580
talking about Google

431
00:18:34,580 --> 00:18:37,860
Skyscanner Spotify Airbnb data dog

432
00:18:37,860 --> 00:18:40,500
Toyota is not there and Joker and

433
00:18:40,500 --> 00:18:42,120
Microsoft and

434
00:18:42,120 --> 00:18:44,280
talk about talk about it with me after

435
00:18:44,280 --> 00:18:46,320
this session I have tons of story to

436
00:18:46,320 --> 00:18:49,380
share with you how Tesla accidentally

437
00:18:49,380 --> 00:18:51,539
forgot one of their credentials and an

438
00:18:51,539 --> 00:18:53,940
attacker did the mic or

439
00:18:53,940 --> 00:18:56,640
um a crypto minoring on their services

440
00:18:56,640 --> 00:18:57,960
it's

441
00:18:57,960 --> 00:19:01,260
the stories are endless

442
00:19:01,260 --> 00:19:04,140
and first of all this is why I highly

443
00:19:04,140 --> 00:19:05,700
recommend you to read about other

444
00:19:05,700 --> 00:19:07,320
companies from your stories not only

445
00:19:07,320 --> 00:19:09,480
that you will learn so much about best

446
00:19:09,480 --> 00:19:12,240
practices what to do what not to do and

447
00:19:12,240 --> 00:19:15,059
you will think about other edge cases

448
00:19:15,059 --> 00:19:19,440
which you probably wouldn't think about

449
00:19:19,440 --> 00:19:22,679
it will also very important because it

450
00:19:22,679 --> 00:19:24,720
will force you to ask yourself the

451
00:19:24,720 --> 00:19:27,179
ultimate question which is how can I

452
00:19:27,179 --> 00:19:30,660
make sure it will never happen to me how

453
00:19:30,660 --> 00:19:32,820
can I make sure I would become one of

454
00:19:32,820 --> 00:19:34,380
those failure stories what is the

455
00:19:34,380 --> 00:19:36,600
stability and the security that I want

456
00:19:36,600 --> 00:19:39,360
to achieve from my production and how do

457
00:19:39,360 --> 00:19:40,559
I do it

458
00:19:40,559 --> 00:19:43,559
so for my research there are three types

459
00:19:43,559 --> 00:19:45,780
of misconfigurations when it basically

460
00:19:45,780 --> 00:19:47,880
when it comes to communities but it's

461
00:19:47,880 --> 00:19:49,440
relevant to all infrastructure code

462
00:19:49,440 --> 00:19:50,880
actually

463
00:19:50,880 --> 00:19:53,220
so the first type of this configuration

464
00:19:53,220 --> 00:19:55,860
is what I like to call syntax error

465
00:19:55,860 --> 00:19:57,360
which combines all the mistakes that

466
00:19:57,360 --> 00:19:59,220
happen because we accidentally submitted

467
00:19:59,220 --> 00:20:01,740
invalid the anode file or kubernetes

468
00:20:01,740 --> 00:20:04,860
resource within valid schema and I know

469
00:20:04,860 --> 00:20:07,500
it may sound very basic but you would be

470
00:20:07,500 --> 00:20:09,179
surprised to know how many companies

471
00:20:09,179 --> 00:20:11,039
share their stories their failure

472
00:20:11,039 --> 00:20:12,299
stories because they accidentally

473
00:20:12,299 --> 00:20:15,240
submitted invalid young and file or

474
00:20:15,240 --> 00:20:18,419
invalid kubernetes resource my favorite

475
00:20:18,419 --> 00:20:20,960
story actually is the Skyscanner one

476
00:20:20,960 --> 00:20:24,660
they accidentally deleted their Shirley

477
00:20:24,660 --> 00:20:26,640
braces one of their curly braces in

478
00:20:26,640 --> 00:20:29,700
their home chart and it basically

479
00:20:29,700 --> 00:20:32,340
deleted all their namespaces with in the

480
00:20:32,340 --> 00:20:34,200
left hand with one corrupted namespace

481
00:20:34,200 --> 00:20:37,559
and they had five hours of production

482
00:20:37,559 --> 00:20:42,840
down downtime yeah five hours so yeah we

483
00:20:42,840 --> 00:20:44,760
have the syntax errors but the next type

484
00:20:44,760 --> 00:20:47,820
of this configuration is what I like to

485
00:20:47,820 --> 00:20:51,200
call Knowledge issues which

486
00:20:51,200 --> 00:20:53,460
combines all the mistakes that happen

487
00:20:53,460 --> 00:20:54,720
because

488
00:20:54,720 --> 00:20:57,059
as I said when we talk about kubernetes

489
00:20:57,059 --> 00:20:59,400
we have a lot of different personas

490
00:20:59,400 --> 00:21:01,679
working on the same technology and

491
00:21:01,679 --> 00:21:04,860
usually often most of the personas don't

492
00:21:04,860 --> 00:21:07,140
know what are the best practices how to

493
00:21:07,140 --> 00:21:08,760
actually reduce kubernetes and

494
00:21:08,760 --> 00:21:10,820
kubernetes is like it's like a pilot

495
00:21:10,820 --> 00:21:13,799
cockpit you have so many buttons and so

496
00:21:13,799 --> 00:21:16,620
many options to configure it that

497
00:21:16,620 --> 00:21:19,320
usually the default configuration is not

498
00:21:19,320 --> 00:21:21,720
the one that's most suitable for you

499
00:21:21,720 --> 00:21:23,400
so

500
00:21:23,400 --> 00:21:26,520
um it's I see a lot of misconfigurations

501
00:21:26,520 --> 00:21:30,419
that happen because we used companies

502
00:21:30,419 --> 00:21:33,360
use the default configurations and they

503
00:21:33,360 --> 00:21:36,419
they misconfigured their kubernetes

504
00:21:36,419 --> 00:21:37,500
resources

505
00:21:37,500 --> 00:21:41,580
but knowing about the industry best

506
00:21:41,580 --> 00:21:44,580
practices is not enough you also need to

507
00:21:44,580 --> 00:21:46,320
make sure that you are aligned with your

508
00:21:46,320 --> 00:21:48,840
teammates that you and your teammates

509
00:21:48,840 --> 00:21:50,700
are in line with the same best practices

510
00:21:50,700 --> 00:21:52,380
and that you are aligned with the

511
00:21:52,380 --> 00:21:54,120
internal best practices in your

512
00:21:54,120 --> 00:21:56,760
organizations for things like using the

513
00:21:56,760 --> 00:21:58,799
private registry for your research for

514
00:21:58,799 --> 00:22:00,900
your images or to setting a specific

515
00:22:00,900 --> 00:22:02,460
amount of limit for your production

516
00:22:02,460 --> 00:22:05,220
cluster cluster resources and another

517
00:22:05,220 --> 00:22:08,159
type for your in the development

518
00:22:08,159 --> 00:22:11,340
clusters and I don't know it's pretty

519
00:22:11,340 --> 00:22:13,200
much depending on your organization but

520
00:22:13,200 --> 00:22:15,000
you need to make sure that you are

521
00:22:15,000 --> 00:22:18,740
aligned with your teammates

522
00:22:18,900 --> 00:22:22,080
so let's review each one of these types

523
00:22:22,080 --> 00:22:23,760
of misconfigurations and see how we can

524
00:22:23,760 --> 00:22:26,100
prevent it from happening to us so

525
00:22:26,100 --> 00:22:29,100
starting with the syntax errors first of

526
00:22:29,100 --> 00:22:31,500
all we want to make sure that our file

527
00:22:31,500 --> 00:22:33,299
format is correct

528
00:22:33,299 --> 00:22:37,500
whether it is Json Yahoo Mails Docker

529
00:22:37,500 --> 00:22:40,799
files XML what are Juna whatever the

530
00:22:40,799 --> 00:22:43,380
file format that you use

531
00:22:43,380 --> 00:22:45,539
you need to make sure that it's correct

532
00:22:45,539 --> 00:22:46,559
right

533
00:22:46,559 --> 00:22:49,740
so I highly recommend you to use the

534
00:22:49,740 --> 00:22:53,039
open source y Cube project it's a

535
00:22:53,039 --> 00:22:55,440
portable CLI yummy processor and it's so

536
00:22:55,440 --> 00:22:58,140
easy to use I highly recommend you to

537
00:22:58,140 --> 00:22:59,400
use it

538
00:22:59,400 --> 00:23:02,340
for verifying that your file format are

539
00:23:02,340 --> 00:23:03,960
correct

540
00:23:03,960 --> 00:23:06,840
but after that we also want to make sure

541
00:23:06,840 --> 00:23:09,000
that whatever is written in that file is

542
00:23:09,000 --> 00:23:12,000
also correct right so we basically want

543
00:23:12,000 --> 00:23:15,419
to verify our resource syntax that the

544
00:23:15,419 --> 00:23:17,760
schema that the resource syntax is

545
00:23:17,760 --> 00:23:20,340
according to is correct according to the

546
00:23:20,340 --> 00:23:23,820
schema and the built-in option that we

547
00:23:23,820 --> 00:23:26,580
can do is to use the cube cutter with

548
00:23:26,580 --> 00:23:29,760
the dry run fluid which basically tells

549
00:23:29,760 --> 00:23:32,700
keep scale to communities and the API

550
00:23:32,700 --> 00:23:36,000
server to not apply this resource to

551
00:23:36,000 --> 00:23:37,919
only validate it

552
00:23:37,919 --> 00:23:40,200
now there are a couple of issues with

553
00:23:40,200 --> 00:23:42,480
this approach and usually I prefer the

554
00:23:42,480 --> 00:23:43,520
native

555
00:23:43,520 --> 00:23:48,000
option but still first of all everybody

556
00:23:48,000 --> 00:23:50,039
needs to make sure everybody needs to

557
00:23:50,039 --> 00:23:53,039
have Cube catalogsis which is usually

558
00:23:53,039 --> 00:23:54,480
not the case but let's say that

559
00:23:54,480 --> 00:23:58,140
everybody has two pathologies to use the

560
00:23:58,140 --> 00:24:00,539
driver and sled you need to use one of

561
00:24:00,539 --> 00:24:02,820
the following strategies you can use the

562
00:24:02,820 --> 00:24:04,559
client strategy which is not very

563
00:24:04,559 --> 00:24:07,380
helpful because it only prints out the

564
00:24:07,380 --> 00:24:10,200
resource that you want to submit

565
00:24:10,200 --> 00:24:12,780
and the service strategy which is

566
00:24:12,780 --> 00:24:15,059
actually the one that we look for is

567
00:24:15,059 --> 00:24:17,100
required cluster connection and you

568
00:24:17,100 --> 00:24:18,600
certainly don't want to give everybody

569
00:24:18,600 --> 00:24:20,280
in your organization cluster connection

570
00:24:20,280 --> 00:24:21,600
right now so

571
00:24:21,600 --> 00:24:24,299
as an alternative I highly recommend you

572
00:24:24,299 --> 00:24:26,760
to use the coupon form we even use it in

573
00:24:26,760 --> 00:24:28,919
the train it basically allows you to do

574
00:24:28,919 --> 00:24:30,419
the same thing and to verify your

575
00:24:30,419 --> 00:24:33,240
resource syntax but without any cluster

576
00:24:33,240 --> 00:24:35,059
connection without any Q Capital

577
00:24:35,059 --> 00:24:38,940
permissions because it pulls all

578
00:24:38,940 --> 00:24:41,100
kubernetes resource schemas into a

579
00:24:41,100 --> 00:24:43,799
GitHub repository and then it send the

580
00:24:43,799 --> 00:24:46,500
request to that repository so

581
00:24:46,500 --> 00:24:51,900
very recommended a I use it all the time

582
00:24:51,900 --> 00:24:54,419
let's talk about best practices

583
00:24:54,419 --> 00:24:57,059
how do we make sure that we follow these

584
00:24:57,059 --> 00:24:59,940
best practices and how do we actually

585
00:24:59,940 --> 00:25:02,940
enforce this on development because we

586
00:25:02,940 --> 00:25:05,700
want to shift left right so first of all

587
00:25:05,700 --> 00:25:08,100
you need to define the policies and the

588
00:25:08,100 --> 00:25:09,960
rules that you want to enforce

589
00:25:09,960 --> 00:25:12,960
whether it is about Network policy

590
00:25:12,960 --> 00:25:16,260
whether it is about memory limit or to

591
00:25:16,260 --> 00:25:18,299
make sure that every container has a

592
00:25:18,299 --> 00:25:21,840
Madness or writing a scrub or I don't

593
00:25:21,840 --> 00:25:22,440
know

594
00:25:22,440 --> 00:25:25,080
the requirement to the policies that you

595
00:25:25,080 --> 00:25:27,480
will decide are dependent on the

596
00:25:27,480 --> 00:25:30,120
requirements of your workloads the real

597
00:25:30,120 --> 00:25:31,919
question is

598
00:25:31,919 --> 00:25:34,620
how would you distribute those policies

599
00:25:34,620 --> 00:25:37,620
how and where you will enforce those

600
00:25:37,620 --> 00:25:39,179
stress practices

601
00:25:39,179 --> 00:25:41,400
because where you will enforce those

602
00:25:41,400 --> 00:25:44,159
best practices might affect your entire

603
00:25:44,159 --> 00:25:46,799
organization and if you shift left and

604
00:25:46,799 --> 00:25:49,740
you enforce the policies in the CI which

605
00:25:49,740 --> 00:25:50,520
is

606
00:25:50,520 --> 00:25:53,400
highly recommended if you ask me but you

607
00:25:53,400 --> 00:25:55,200
need to remember that it will affect

608
00:25:55,200 --> 00:25:58,080
everybody in the development teams in

609
00:25:58,080 --> 00:26:00,360
your organization so you really need to

610
00:26:00,360 --> 00:26:02,100
think about it and think about where

611
00:26:02,100 --> 00:26:03,960
would be the most suitable place for

612
00:26:03,960 --> 00:26:05,640
each type of policy that you want to

613
00:26:05,640 --> 00:26:08,120
enforce

614
00:26:08,580 --> 00:26:09,900
machine

615
00:26:09,900 --> 00:26:12,779
now let's dig a Little Deeper when it

616
00:26:12,779 --> 00:26:14,700
comes to policy enforcement and the

617
00:26:14,700 --> 00:26:16,500
first thing that I want to that I want

618
00:26:16,500 --> 00:26:19,080
to talk about before we see some some

619
00:26:19,080 --> 00:26:22,260
things and some stuff in action is

620
00:26:22,260 --> 00:26:25,679
to start slow do it gradually remember

621
00:26:25,679 --> 00:26:28,679
the guy from a made-up story that told

622
00:26:28,679 --> 00:26:31,740
told everybody that they started to use

623
00:26:31,740 --> 00:26:33,840
jfug registry and that was very

624
00:26:33,840 --> 00:26:35,039
frustrated

625
00:26:35,039 --> 00:26:39,419
his problem was that on one day they

626
00:26:39,419 --> 00:26:41,820
decided to drop on everybody a gigantic

627
00:26:41,820 --> 00:26:43,799
restriction regarding images and

628
00:26:43,799 --> 00:26:46,320
packages no don't do it

629
00:26:46,320 --> 00:26:49,620
gradually choose one team have that team

630
00:26:49,620 --> 00:26:52,260
as your pilot team have a meeting make

631
00:26:52,260 --> 00:26:55,440
sure everybody understand what is the

632
00:26:55,440 --> 00:26:57,960
scope of this enforcement why is it so

633
00:26:57,960 --> 00:27:01,679
useful why now why today when is the

634
00:27:01,679 --> 00:27:04,440
most suitable time have agreement with

635
00:27:04,440 --> 00:27:08,340
everybody and then gradually add the

636
00:27:08,340 --> 00:27:10,799
enforcement to the pipeline

637
00:27:10,799 --> 00:27:14,400
do it slowly don't drop in everybody's

638
00:27:14,400 --> 00:27:16,740
gigantic restrictions and policy

639
00:27:16,740 --> 00:27:20,419
enforcement in one day

640
00:27:22,380 --> 00:27:25,020
now I believe in two things

641
00:27:25,020 --> 00:27:26,700
especially when it comes to enforcement

642
00:27:26,700 --> 00:27:29,159
but I believe in two things I believe in

643
00:27:29,159 --> 00:27:32,340
shifts left and I believe in detox I

644
00:27:32,340 --> 00:27:35,220
believe that every kubernetes resource

645
00:27:35,220 --> 00:27:37,679
should be handled exactly the same as

646
00:27:37,679 --> 00:27:39,659
your source code

647
00:27:39,659 --> 00:27:42,240
and I believe that your git repository

648
00:27:42,240 --> 00:27:45,059
should be your single source of Truth

649
00:27:45,059 --> 00:27:47,880
and as soon as you identify a mistake

650
00:27:47,880 --> 00:27:49,500
the less it might take your production

651
00:27:49,500 --> 00:27:51,480
down this is a fact

652
00:27:51,480 --> 00:27:54,659
so with this mindset the way I see it we

653
00:27:54,659 --> 00:27:56,880
should automatically validate our

654
00:27:56,880 --> 00:28:00,539
resources on every code change in the CI

655
00:28:00,539 --> 00:28:02,460
and furthermore

656
00:28:02,460 --> 00:28:04,860
integrating and validating your

657
00:28:04,860 --> 00:28:07,440
resources in the CIA with tools that can

658
00:28:07,440 --> 00:28:10,440
be used as a local testing Library can

659
00:28:10,440 --> 00:28:12,720
extremely help you nurture the devops

660
00:28:12,720 --> 00:28:14,279
culture in your organization because

661
00:28:14,279 --> 00:28:16,919
developers they are used to it they are

662
00:28:16,919 --> 00:28:19,020
used to local testing this is actually

663
00:28:19,020 --> 00:28:21,179
part of their policy

664
00:28:21,179 --> 00:28:24,260
every developer runs the unit test

665
00:28:24,260 --> 00:28:28,740
package locally on here on his or her

666
00:28:28,740 --> 00:28:30,659
machine before they submit a poll

667
00:28:30,659 --> 00:28:33,419
request and guess what they expect at

668
00:28:33,419 --> 00:28:35,580
least those tests to be run again in the

669
00:28:35,580 --> 00:28:38,039
CI so we're allowing the developers to

670
00:28:38,039 --> 00:28:41,159
do the same with infrastructure code and

671
00:28:41,159 --> 00:28:43,980
kubernetes resources will allow you to

672
00:28:43,980 --> 00:28:46,620
delegate more responsibilities

673
00:28:46,620 --> 00:28:49,260
to the developers and therefore it will

674
00:28:49,260 --> 00:28:52,140
liberate you from the constant need to

675
00:28:52,140 --> 00:28:54,000
guard and fence every kubernetes

676
00:28:54,000 --> 00:28:55,620
resource from any possible

677
00:28:55,620 --> 00:28:58,559
misconfiguration and you can adjust this

678
00:28:58,559 --> 00:29:01,080
to any type of Team you want to delegate

679
00:29:01,080 --> 00:29:03,539
your responsibilities to because if you

680
00:29:03,539 --> 00:29:05,820
want to delegate responsibilities to the

681
00:29:05,820 --> 00:29:08,159
devops just need to think about what are

682
00:29:08,159 --> 00:29:10,140
the tools that the Devils used and to

683
00:29:10,140 --> 00:29:13,080
try adjust the tools that you give to

684
00:29:13,080 --> 00:29:15,179
them for policy enforcement

685
00:29:15,179 --> 00:29:18,360
to make sure that they're resemble as

686
00:29:18,360 --> 00:29:19,980
much as possible to the tools that they

687
00:29:19,980 --> 00:29:21,899
are used to work with

688
00:29:21,899 --> 00:29:25,260
let them play in their own field

689
00:29:25,260 --> 00:29:29,220
okay so let's talk real business so I

690
00:29:29,220 --> 00:29:32,640
said that I am a github's believer and

691
00:29:32,640 --> 00:29:35,760
I'm also an rbcd fan now I don't know

692
00:29:35,760 --> 00:29:38,100
how many of you use RV City that's

693
00:29:38,100 --> 00:29:39,960
that's all let's talk about it let's

694
00:29:39,960 --> 00:29:41,880
talk about rvcd for a minute

695
00:29:41,880 --> 00:29:44,820
and to really understand the essence and

696
00:29:44,820 --> 00:29:48,059
the advantages in rbcd let's talk about

697
00:29:48,059 --> 00:29:51,000
how CP workflow looks like without RBC

698
00:29:51,000 --> 00:29:53,940
so you know how it usually goes we have

699
00:29:53,940 --> 00:29:56,399
the developer that push new code to the

700
00:29:56,399 --> 00:29:59,100
application and triggers the CI pipeline

701
00:29:59,100 --> 00:30:01,980
now let's say that I use Jenkins and of

702
00:30:01,980 --> 00:30:04,440
course kubernetes cluster in production

703
00:30:04,440 --> 00:30:08,340
now in the CI server we test the code we

704
00:30:08,340 --> 00:30:11,220
build the code we build new image of the

705
00:30:11,220 --> 00:30:14,279
application and we store that image in

706
00:30:14,279 --> 00:30:18,120
the docker registry then the CD server

707
00:30:18,120 --> 00:30:20,100
for example Jenkins

708
00:30:20,100 --> 00:30:22,559
update kubernetes deployment resource of

709
00:30:22,559 --> 00:30:24,539
the application and deploys it to the

710
00:30:24,539 --> 00:30:27,960
cluster now there are a couple of

711
00:30:27,960 --> 00:30:30,480
challenges with this pipelines first of

712
00:30:30,480 --> 00:30:32,700
all for Jenkins to actually do

713
00:30:32,700 --> 00:30:35,820
everything that I said we need to allow

714
00:30:35,820 --> 00:30:39,179
in allow it to work with Q people so for

715
00:30:39,179 --> 00:30:41,340
cube cuddle to actually work we need to

716
00:30:41,340 --> 00:30:43,320
configure some we need to configurate

717
00:30:43,320 --> 00:30:45,240
access for our kubernetes cluster in

718
00:30:45,240 --> 00:30:46,260
Jenkins

719
00:30:46,260 --> 00:30:49,440
additionally since we work with cloud

720
00:30:49,440 --> 00:30:52,760
provider for instance PKS we need to

721
00:30:52,760 --> 00:30:55,799
provide GMT in some AWS credentials

722
00:30:55,799 --> 00:30:57,960
which is a security issue and a

723
00:30:57,960 --> 00:31:01,020
configuration issue if you're asking now

724
00:31:01,020 --> 00:31:03,299
another issue which is much more

725
00:31:03,299 --> 00:31:06,419
important in my opinion is that once

726
00:31:06,419 --> 00:31:08,700
Jenkins update the deployment we don't

727
00:31:08,700 --> 00:31:11,880
have any visibility over that deployment

728
00:31:11,880 --> 00:31:14,159
status if something goes wrong if the

729
00:31:14,159 --> 00:31:16,500
deployment is unsuccessful we need to

730
00:31:16,500 --> 00:31:18,539
manually look into the logs which is

731
00:31:18,539 --> 00:31:22,679
very unconvenient and we often can miss

732
00:31:22,679 --> 00:31:24,360
a lot of stuff

733
00:31:24,360 --> 00:31:25,740
so

734
00:31:25,740 --> 00:31:28,980
argosity is meant just for that and it

735
00:31:28,980 --> 00:31:32,700
was built to make continuous deployment

736
00:31:32,700 --> 00:31:35,820
for kubernetes clusters much more

737
00:31:35,820 --> 00:31:38,640
efficient and it does it it simply

738
00:31:38,640 --> 00:31:41,640
reversing the flow instead of pushing

739
00:31:41,640 --> 00:31:44,820
the deployment to the cluster Argo pulls

740
00:31:44,820 --> 00:31:48,419
the deployment from the repository and

741
00:31:48,419 --> 00:31:51,000
applies it to the cluster and this is

742
00:31:51,000 --> 00:31:53,580
the big part rbcd is part of the

743
00:31:53,580 --> 00:31:55,620
kubernetes cluster so you don't need to

744
00:31:55,620 --> 00:31:57,840
provide any secrets or credentials for

745
00:31:57,840 --> 00:32:00,539
it to actually work

746
00:32:00,539 --> 00:32:03,120
so let's review how we see that how how

747
00:32:03,120 --> 00:32:05,820
ACP workflow looks like with urban city

748
00:32:05,820 --> 00:32:08,399
so it goes the same developer commit

749
00:32:08,399 --> 00:32:11,279
something triggers the ca CCI server we

750
00:32:11,279 --> 00:32:12,899
build push

751
00:32:12,899 --> 00:32:16,200
and then when we update the deployment

752
00:32:16,200 --> 00:32:18,960
DML we need is deployment demo either

753
00:32:18,960 --> 00:32:20,880
detects the changes

754
00:32:20,880 --> 00:32:22,980
and pulls those changes from the

755
00:32:22,980 --> 00:32:25,620
repository not not from Jenkins from the

756
00:32:25,620 --> 00:32:29,520
repository and applies it to the cluster

757
00:32:29,520 --> 00:32:33,179
now you're probably wondering okay what

758
00:32:33,179 --> 00:32:36,059
will happen if I will type Cube CTL

759
00:32:36,059 --> 00:32:38,820
apply and I will update some changes

760
00:32:38,820 --> 00:32:40,140
manually

761
00:32:40,140 --> 00:32:42,779
since argue city is installed on the

762
00:32:42,779 --> 00:32:45,419
classroom when you do sell something

763
00:32:45,419 --> 00:32:48,179
like that are the other CD controller

764
00:32:48,179 --> 00:32:50,460
will detect that the cluster is now out

765
00:32:50,460 --> 00:32:53,340
of is out of sync with the stated in the

766
00:32:53,340 --> 00:32:56,159
repository and it will overwrite the

767
00:32:56,159 --> 00:32:59,460
state in the repository with the cluster

768
00:32:59,460 --> 00:33:03,000
state which will make our GitHub git

769
00:33:03,000 --> 00:33:08,419
repository our single source of Truth

770
00:33:08,580 --> 00:33:13,260
now I talked a lot about repositories

771
00:33:13,260 --> 00:33:15,360
and this is important so a quick note

772
00:33:15,360 --> 00:33:17,159
about repositories when it comes to

773
00:33:17,159 --> 00:33:21,000
githubs not necessarily Argo City but

774
00:33:21,000 --> 00:33:24,600
it's important so it's been established

775
00:33:24,600 --> 00:33:26,460
as a best practice when it comes to

776
00:33:26,460 --> 00:33:29,100
GitHub to separate their repositories

777
00:33:29,100 --> 00:33:32,519
and to have one repository for all the

778
00:33:32,519 --> 00:33:34,919
source code of your application and

779
00:33:34,919 --> 00:33:36,960
another repository for all the

780
00:33:36,960 --> 00:33:39,960
configurations why because if you have a

781
00:33:39,960 --> 00:33:42,000
lot of configuration files we have

782
00:33:42,000 --> 00:33:43,860
Ingress we have Services we have

783
00:33:43,860 --> 00:33:45,899
deployments we have ham chart we may be

784
00:33:45,899 --> 00:33:49,679
careful we have maybe customized we have

785
00:33:49,679 --> 00:33:51,960
a lot of configurations file that we

786
00:33:51,960 --> 00:33:53,399
need to manage

787
00:33:53,399 --> 00:33:56,700
and when we change service for instance

788
00:33:56,700 --> 00:33:59,460
we don't want to trigger all the CI CD

789
00:33:59,460 --> 00:34:03,360
pipeline for our application so it's a

790
00:34:03,360 --> 00:34:06,179
best practice to separate between the

791
00:34:06,179 --> 00:34:08,879
application repository source code and

792
00:34:08,879 --> 00:34:11,760
application configuration Repository so

793
00:34:11,760 --> 00:34:15,839
if you look at how CD workflow with rxcd

794
00:34:15,839 --> 00:34:17,760
looks now when we separated the

795
00:34:17,760 --> 00:34:20,280
repository we have the developer which

796
00:34:20,280 --> 00:34:24,179
triggers a commit and triggers the CIA

797
00:34:24,179 --> 00:34:26,699
server does the code to build the image

798
00:34:26,699 --> 00:34:30,500
push to the registry update kubernetes

799
00:34:30,500 --> 00:34:34,199
Resources with the new image and push

800
00:34:34,199 --> 00:34:37,379
and update it and approach and update it

801
00:34:37,379 --> 00:34:40,739
in a different repository in the git Ops

802
00:34:40,739 --> 00:34:42,679
repository where all the application

803
00:34:42,679 --> 00:34:44,839
configuration

804
00:34:44,839 --> 00:34:48,839
managed are we sitting watch that

805
00:34:48,839 --> 00:34:52,320
repository and applies those changes to

806
00:34:52,320 --> 00:34:55,619
the cluster so if you think about it in

807
00:34:55,619 --> 00:34:58,800
the CI of that repository you can start

808
00:34:58,800 --> 00:35:00,960
your approxy enforcement

809
00:35:00,960 --> 00:35:04,820
and not in the application Repository

810
00:35:06,260 --> 00:35:10,520
now the good news is that you have

811
00:35:10,520 --> 00:35:13,800
Champions Dev Champions that you can

812
00:35:13,800 --> 00:35:16,440
trust in let's say that you work with

813
00:35:16,440 --> 00:35:18,900
githubs and you work with rbcd and you

814
00:35:18,900 --> 00:35:21,240
define the tools and you define all the

815
00:35:21,240 --> 00:35:22,619
policies and rules that you want to

816
00:35:22,619 --> 00:35:25,800
enforce and there are many officer

817
00:35:25,800 --> 00:35:27,480
students you can use

818
00:35:27,480 --> 00:35:30,420
to use for policy enforcement you can

819
00:35:30,420 --> 00:35:32,820
use oppa you can use caver now you can

820
00:35:32,820 --> 00:35:36,300
use gatekeeper confidence data you can

821
00:35:36,300 --> 00:35:38,099
you have a lot of Open Source tools that

822
00:35:38,099 --> 00:35:39,359
you can use

823
00:35:39,359 --> 00:35:41,280
in they're all open source so you can

824
00:35:41,280 --> 00:35:42,900
use them today

825
00:35:42,900 --> 00:35:45,420
bad news

826
00:35:45,420 --> 00:35:47,160
is that this is only the beginning

827
00:35:47,160 --> 00:35:50,339
because you also need to manage all your

828
00:35:50,339 --> 00:35:51,480
policies

829
00:35:51,480 --> 00:35:54,420
and by that I mean to have an easy way

830
00:35:54,420 --> 00:35:58,260
to dynamically adjust your policies

831
00:35:58,260 --> 00:36:00,660
and I see a lot of people that tend to

832
00:36:00,660 --> 00:36:03,480
think that git is the place to do it and

833
00:36:03,480 --> 00:36:06,599
git is great for implementation and for

834
00:36:06,599 --> 00:36:08,460
Version Control but not for management

835
00:36:08,460 --> 00:36:10,859
because git won't provide you anything

836
00:36:10,859 --> 00:36:13,079
that you need keep on providing for

837
00:36:13,079 --> 00:36:15,300
instance a visibility over which

838
00:36:15,300 --> 00:36:17,460
policies are being practiced and give

839
00:36:17,460 --> 00:36:19,859
one provider away to Grant permissions

840
00:36:19,859 --> 00:36:23,400
over who can create or delete a policy

841
00:36:23,400 --> 00:36:25,800
and when you have dozens of git

842
00:36:25,800 --> 00:36:27,540
repositories and you have dozens of

843
00:36:27,540 --> 00:36:29,820
policies now you have another nightmare

844
00:36:29,820 --> 00:36:31,859
to make sure that everybody actually

845
00:36:31,859 --> 00:36:34,740
uses the same version of your policy so

846
00:36:34,740 --> 00:36:36,119
not only you want to make sure that

847
00:36:36,119 --> 00:36:38,220
everybody is using the same version of

848
00:36:38,220 --> 00:36:40,920
kubernetes resources you need to worry

849
00:36:40,920 --> 00:36:42,960
about having the same version of your

850
00:36:42,960 --> 00:36:44,160
policies

851
00:36:44,160 --> 00:36:46,079
this is absurd

852
00:36:46,079 --> 00:36:49,200
so you need to make sure you have

853
00:36:49,200 --> 00:36:51,720
one place where you can control review

854
00:36:51,720 --> 00:36:54,720
and monitor your policies

855
00:36:54,720 --> 00:36:56,520
and the next important thing that I

856
00:36:56,520 --> 00:36:58,800
wanted to talk about is that it's

857
00:36:58,800 --> 00:37:01,800
crucial to provide guidelines along with

858
00:37:01,800 --> 00:37:05,040
your policies on how to actually fix the

859
00:37:05,040 --> 00:37:06,359
policies

860
00:37:06,359 --> 00:37:10,079
think about me I'm a developer and you

861
00:37:10,079 --> 00:37:12,359
certainly don't want to make me feel

862
00:37:12,359 --> 00:37:15,359
frustrated definitely after putting all

863
00:37:15,359 --> 00:37:18,480
that effort in creating an a defining

864
00:37:18,480 --> 00:37:20,099
the policies that you want to enforce

865
00:37:20,099 --> 00:37:21,359
you don't want to make me feel

866
00:37:21,359 --> 00:37:23,220
frustrated because I don't know how to

867
00:37:23,220 --> 00:37:25,020
fix one of the policies when it gets

868
00:37:25,020 --> 00:37:27,420
held maybe I don't know how to add the

869
00:37:27,420 --> 00:37:29,460
library's probe you want to make me feel

870
00:37:29,460 --> 00:37:32,579
frustrated no of course not and I do

871
00:37:32,579 --> 00:37:36,540
know but you know those Developers

872
00:37:36,540 --> 00:37:37,800
anyway

873
00:37:37,800 --> 00:37:40,440
it's it's really important to provide

874
00:37:40,440 --> 00:37:44,280
guidelines detail detailings and how to

875
00:37:44,280 --> 00:37:46,440
how to tell them why it's so important

876
00:37:46,440 --> 00:37:49,560
where it got wrong and how to do it and

877
00:37:49,560 --> 00:37:51,000
I promise you

878
00:37:51,000 --> 00:37:54,119
if you do it no developer will do the

879
00:37:54,119 --> 00:37:57,540
same mistake again

880
00:37:57,540 --> 00:37:59,520
and this is why having this centralized

881
00:37:59,520 --> 00:38:03,119
policy management is crucial

882
00:38:03,119 --> 00:38:06,119
now as I said you have many open source

883
00:38:06,119 --> 00:38:08,160
tools that you can use to start your

884
00:38:08,160 --> 00:38:10,079
policy enforcement in your organization

885
00:38:10,079 --> 00:38:12,119
but the tool that I want to talk about

886
00:38:12,119 --> 00:38:14,099
today because they all take different

887
00:38:14,099 --> 00:38:15,960
approach the tool that I want to talk

888
00:38:15,960 --> 00:38:17,940
about today is the trick and to show you

889
00:38:17,940 --> 00:38:19,859
how we believe in the tree is the right

890
00:38:19,859 --> 00:38:22,380
way to start your policy enforcement

891
00:38:22,380 --> 00:38:25,619
so what is the tree the tree is an open

892
00:38:25,619 --> 00:38:27,359
source centralized policy management

893
00:38:27,359 --> 00:38:32,220
solution for kubernetes so and and it

894
00:38:32,220 --> 00:38:35,820
was built to help devops engineers

895
00:38:35,820 --> 00:38:38,280
to delegate kubernetes responsibilities

896
00:38:38,280 --> 00:38:42,000
to the developers teams more efficiently

897
00:38:42,000 --> 00:38:44,040
so if you think about it

898
00:38:44,040 --> 00:38:46,560
imagine the pipeline

899
00:38:46,560 --> 00:38:49,440
on the one side in the one hand you have

900
00:38:49,440 --> 00:38:51,420
the devops engineers who are the cluster

901
00:38:51,420 --> 00:38:53,640
admins who are the best who knows the

902
00:38:53,640 --> 00:38:55,619
best practices and what are the

903
00:38:55,619 --> 00:38:58,560
necessary enforcement in kubernetes

904
00:38:58,560 --> 00:39:00,420
but on the other hand you have the

905
00:39:00,420 --> 00:39:02,220
developers who actually needs to follow

906
00:39:02,220 --> 00:39:03,180
these best

907
00:39:03,180 --> 00:39:04,740
on development

908
00:39:04,740 --> 00:39:06,660
so the tree is right there in the middle

909
00:39:06,660 --> 00:39:09,900
between everybody we have an officer CLI

910
00:39:09,900 --> 00:39:12,300
that allowed the dev of steams to

911
00:39:12,300 --> 00:39:14,940
implement and control their policies in

912
00:39:14,940 --> 00:39:17,579
a centralized location and on the other

913
00:39:17,579 --> 00:39:20,099
hand we provide a way to for the

914
00:39:20,099 --> 00:39:22,680
developers to scan and validate their

915
00:39:22,680 --> 00:39:25,260
resources locally and in the CIA on

916
00:39:25,260 --> 00:39:28,280
development so when a devops engineer

917
00:39:28,280 --> 00:39:31,380
they changed one of the policies modify

918
00:39:31,380 --> 00:39:33,720
one of the policies to propagate those

919
00:39:33,720 --> 00:39:38,000
changes across all the pipeline

920
00:39:39,200 --> 00:39:42,720
so as I said we have an open source CLI

921
00:39:42,720 --> 00:39:45,480
we have thousands of stars dozens of

922
00:39:45,480 --> 00:39:47,640
contributors I'd highly encourage you to

923
00:39:47,640 --> 00:39:49,500
join our community it's very much alive

924
00:39:49,500 --> 00:39:52,980
and to submit a pull request and the way

925
00:39:52,980 --> 00:39:54,780
that it works is that it basically

926
00:39:54,780 --> 00:39:56,460
combines everything that we just talked

927
00:39:56,460 --> 00:39:59,160
about for every file and for every

928
00:39:59,160 --> 00:40:02,099
resource that you run the CLI with the

929
00:40:02,099 --> 00:40:04,020
three tests and the path that you want

930
00:40:04,020 --> 00:40:06,660
to scan for every file and resource that

931
00:40:06,660 --> 00:40:09,540
exists in that path the tree runs three

932
00:40:09,540 --> 00:40:13,560
steps automated three steps checks it

933
00:40:13,560 --> 00:40:15,180
validates that your file is actually

934
00:40:15,180 --> 00:40:17,339
valid and that your kubernetes resource

935
00:40:17,339 --> 00:40:19,260
schema is correct and the last but not

936
00:40:19,260 --> 00:40:21,960
least it verifies that the policy checks

937
00:40:21,960 --> 00:40:25,200
that you file is actually according

938
00:40:25,200 --> 00:40:27,660
following to the best practices in the

939
00:40:27,660 --> 00:40:31,440
industry now we know how much effort it

940
00:40:31,440 --> 00:40:35,220
takes to Define policies and rules so we

941
00:40:35,220 --> 00:40:36,720
don't think you should waste your own

942
00:40:36,720 --> 00:40:38,700
your all your time on that we've got

943
00:40:38,700 --> 00:40:40,980
your back we already come with built-in

944
00:40:40,980 --> 00:40:43,020
policies and best practices for

945
00:40:43,020 --> 00:40:45,839
kubernetes early City and other CNC

946
00:40:45,839 --> 00:40:46,980
projects

947
00:40:46,980 --> 00:40:48,300
and

948
00:40:48,300 --> 00:40:50,339
yes as I said it'd be specifically

949
00:40:50,339 --> 00:40:52,800
designed to be ran in the Ci or as a

950
00:40:52,800 --> 00:40:54,720
local testing library or even even as

951
00:40:54,720 --> 00:40:57,500
pre-committal

952
00:40:57,720 --> 00:41:00,660
now oh my God what happened to my slide

953
00:41:00,660 --> 00:41:02,040
okay

954
00:41:02,040 --> 00:41:03,720
um sorry about that

955
00:41:03,720 --> 00:41:06,660
um it's supposed to be here so to get

956
00:41:06,660 --> 00:41:08,339
started with the tree first of all you

957
00:41:08,339 --> 00:41:10,079
need to install it on your machine it's

958
00:41:10,079 --> 00:41:14,040
a basic current command and then you can

959
00:41:14,040 --> 00:41:17,760
use the CLI to scan your resources now

960
00:41:17,760 --> 00:41:19,560
if you want to scan your resources on

961
00:41:19,560 --> 00:41:21,240
development or in your local machine or

962
00:41:21,240 --> 00:41:24,180
in the CI as as I showed you you can use

963
00:41:24,180 --> 00:41:26,339
three tests to CLI with the three test

964
00:41:26,339 --> 00:41:28,440
command and the test of all the files

965
00:41:28,440 --> 00:41:31,380
that you want to scan but if you want to

966
00:41:31,380 --> 00:41:33,300
scan your resources in production in the

967
00:41:33,300 --> 00:41:36,420
classroom you can use our Cube cuddle

968
00:41:36,420 --> 00:41:40,140
plugin in with three tests and to give

969
00:41:40,140 --> 00:41:42,480
it all the parameters and the namespace

970
00:41:42,480 --> 00:41:44,599
and the resources that you want to scan

971
00:41:44,599 --> 00:41:48,359
and very soon we'll have our own web

972
00:41:48,359 --> 00:41:52,940
hook a admission web so stay tuned

973
00:41:53,640 --> 00:41:56,160
and yeah this is uh how you can

974
00:41:56,160 --> 00:41:58,140
integrate the tree in the CI and

975
00:41:58,140 --> 00:42:01,800
addition in addition to the CLI we also

976
00:42:01,800 --> 00:42:03,599
provide you a way to dynamically adjust

977
00:42:03,599 --> 00:42:05,820
your policies and way to manage all your

978
00:42:05,820 --> 00:42:07,380
policies so we have a dashboard

979
00:42:07,380 --> 00:42:09,420
application where you can configure your

980
00:42:09,420 --> 00:42:11,579
policies using cut using Code using

981
00:42:11,579 --> 00:42:15,000
policies code you can Define it once and

982
00:42:15,000 --> 00:42:18,420
then write it everywhere and you can

983
00:42:18,420 --> 00:42:21,300
monitor and review all your policies to

984
00:42:21,300 --> 00:42:23,339
see all your policies execution to get

985
00:42:23,339 --> 00:42:26,700
full observability over your status you

986
00:42:26,700 --> 00:42:28,920
can grant permissions you can get

987
00:42:28,920 --> 00:42:32,960
reports and a lot of management stuff

988
00:42:33,079 --> 00:42:35,700
now to sum up

989
00:42:35,700 --> 00:42:38,540
I

990
00:42:38,760 --> 00:42:41,700
I highly in

991
00:42:41,700 --> 00:42:44,040
I really hope that this session inspired

992
00:42:44,040 --> 00:42:45,960
you to start thinking about the policies

993
00:42:45,960 --> 00:42:49,740
in your organization and I really hope

994
00:42:49,740 --> 00:42:53,700
that now you will start to see your job

995
00:42:53,700 --> 00:42:57,000
your devops that the devops is really

996
00:42:57,000 --> 00:43:00,060
not a role and that

997
00:43:00,060 --> 00:43:02,060
um

998
00:43:02,640 --> 00:43:06,420
yeah basically basically it and thank

999
00:43:06,420 --> 00:43:10,079
you very much for watching this video

1000
00:43:10,079 --> 00:43:12,920
bye-bye

1001
00:43:14,640 --> 00:43:17,819
all right thank you Lua for the uh

1002
00:43:17,819 --> 00:43:20,460
interesting session what an energy you

1003
00:43:20,460 --> 00:43:22,339
have I must say

1004
00:43:22,339 --> 00:43:27,180
thank you very good list I don't see any

1005
00:43:27,180 --> 00:43:29,460
um questions in the Q a

1006
00:43:29,460 --> 00:43:31,980
um but but I've got some for you

1007
00:43:31,980 --> 00:43:33,599
um okay see

1008
00:43:33,599 --> 00:43:35,940
um an organization wants to adopt the

1009
00:43:35,940 --> 00:43:38,400
the Argo City or or whatever get Ops 2

1010
00:43:38,400 --> 00:43:41,520
or policy management uh what are some of

1011
00:43:41,520 --> 00:43:44,400
the common pitfalls that can happen when

1012
00:43:44,400 --> 00:43:47,099
when adopting that

1013
00:43:47,099 --> 00:43:48,900
so actually

1014
00:43:48,900 --> 00:43:49,680
um

1015
00:43:49,680 --> 00:43:52,740
I I planned the demo but I saw that I

1016
00:43:52,740 --> 00:43:55,560
might not have enough time so um maybe I

1017
00:43:55,560 --> 00:43:57,540
can do it right now but

1018
00:43:57,540 --> 00:44:01,920
um there are a some pitfalls that

1019
00:44:01,920 --> 00:44:04,020
okay let me ask you a question before I

1020
00:44:04,020 --> 00:44:05,220
answer yours

1021
00:44:05,220 --> 00:44:06,839
um are you talking about like Mission

1022
00:44:06,839 --> 00:44:08,819
practical misconfigurations that you can

1023
00:44:08,819 --> 00:44:10,680
do on your resources when it comes to

1024
00:44:10,680 --> 00:44:14,240
Argo or in more high level

1025
00:44:14,240 --> 00:44:17,839
and more high level

1026
00:44:18,960 --> 00:44:21,180
um so

1027
00:44:21,180 --> 00:44:25,980
I think that I I don't have many types

1028
00:44:25,980 --> 00:44:27,599
of pitfalls when it comes to Dragon City

1029
00:44:27,599 --> 00:44:30,300
because it's pretty straightforward it

1030
00:44:30,300 --> 00:44:32,880
is a young project but the community is

1031
00:44:32,880 --> 00:44:35,339
Thrive and it is amazing so I don't see

1032
00:44:35,339 --> 00:44:37,619
a lot of

1033
00:44:37,619 --> 00:44:40,500
pitfalls or issues that an organization

1034
00:44:40,500 --> 00:44:44,700
can have like at a higher level and

1035
00:44:44,700 --> 00:44:46,140
and

1036
00:44:46,140 --> 00:44:49,079
but when it comes to how to configure it

1037
00:44:49,079 --> 00:44:50,819
yeah there are many

1038
00:44:50,819 --> 00:44:53,640
there are many ways to like

1039
00:44:53,640 --> 00:44:58,319
um screw up your um describe your egg or

1040
00:44:58,319 --> 00:45:01,140
rbcd and configurations and there are

1041
00:45:01,140 --> 00:45:03,420
many ways because rvcd is so versatile

1042
00:45:03,420 --> 00:45:06,900
and you can plug it basically like plug

1043
00:45:06,900 --> 00:45:09,240
and play and you need to configure

1044
00:45:09,240 --> 00:45:10,800
everything so

1045
00:45:10,800 --> 00:45:14,160
for instance if you have monorepo and

1046
00:45:14,160 --> 00:45:16,560
one of the best practices that nobody

1047
00:45:16,560 --> 00:45:19,319
talks about is to make sure you don't

1048
00:45:19,319 --> 00:45:21,180
use the different configuration of our

1049
00:45:21,180 --> 00:45:24,300
city which is to watch the repository

1050
00:45:24,300 --> 00:45:26,339
every three seconds

1051
00:45:26,339 --> 00:45:28,380
because when you want to repo and your

1052
00:45:28,380 --> 00:45:30,839
repository is huge then it can be

1053
00:45:30,839 --> 00:45:33,540
performance issues you can obviously it

1054
00:45:33,540 --> 00:45:36,319
can be very very slow and it can

1055
00:45:36,319 --> 00:45:39,599
overload your repository and the best

1056
00:45:39,599 --> 00:45:42,420
practice is to use the Web book so there

1057
00:45:42,420 --> 00:45:43,619
are

1058
00:45:43,619 --> 00:45:46,140
there are challenges when you start to

1059
00:45:46,140 --> 00:45:48,060
work with obviously on how to actually

1060
00:45:48,060 --> 00:45:51,000
configure it but

1061
00:45:51,000 --> 00:45:54,540
um it's pretty much plug and play and

1062
00:45:54,540 --> 00:45:56,880
and obviously there's only one project

1063
00:45:56,880 --> 00:45:59,339
when it comes to Argo so you also have

1064
00:45:59,339 --> 00:46:01,260
the workflows and you also have events

1065
00:46:01,260 --> 00:46:03,720
and you have the rollouts and workflows

1066
00:46:03,720 --> 00:46:05,940
is basically to run jobs on kubernetes

1067
00:46:05,940 --> 00:46:08,220
cluster and all those speech for

1068
00:46:08,220 --> 00:46:12,359
fallouts and it gives a full a nice

1069
00:46:12,359 --> 00:46:14,040
detailed

1070
00:46:14,040 --> 00:46:17,040
um for a canary or blue game or a blue

1071
00:46:17,040 --> 00:46:19,020
green rollouts which is very very nice

1072
00:46:19,020 --> 00:46:22,319
because it uses crds for that and it's

1073
00:46:22,319 --> 00:46:25,079
super cool I I can actually show you if

1074
00:46:25,079 --> 00:46:26,640
you want

1075
00:46:26,640 --> 00:46:28,680
yeah I think we have some some time to

1076
00:46:28,680 --> 00:46:29,520
spare

1077
00:46:29,520 --> 00:46:31,859
um to go for it okay so let's let's do

1078
00:46:31,859 --> 00:46:34,440
the demo that I was too afraid to do

1079
00:46:34,440 --> 00:46:36,500
um

1080
00:46:37,020 --> 00:46:39,240
sure it actually I was just uh too

1081
00:46:39,240 --> 00:46:44,040
afraid uh okay so who's let me just

1082
00:46:44,040 --> 00:46:46,020
switch to

1083
00:46:46,020 --> 00:46:47,819
see my

1084
00:46:47,819 --> 00:46:50,339
tabs

1085
00:46:50,339 --> 00:46:53,099
okay this is good okay so as you can see

1086
00:46:53,099 --> 00:46:56,819
here I have a demo application this is

1087
00:46:56,819 --> 00:46:58,560
my mobix

1088
00:46:58,560 --> 00:47:01,500
um oh yeah ice cream shop you see my

1089
00:47:01,500 --> 00:47:04,200
screen we still see the uh two sum up

1090
00:47:04,200 --> 00:47:05,400
slide

1091
00:47:05,400 --> 00:47:10,579
okay I'll share it let's show it again

1092
00:47:13,560 --> 00:47:16,500
okay not this one this one

1093
00:47:16,500 --> 00:47:19,920
okay so uh this is a this is my

1094
00:47:19,920 --> 00:47:22,200
application my barcelotto ice cream shop

1095
00:47:22,200 --> 00:47:23,400
application

1096
00:47:23,400 --> 00:47:24,960
and

1097
00:47:24,960 --> 00:47:26,400
um I

1098
00:47:26,400 --> 00:47:29,460
use the argosity for the CD pipeline so

1099
00:47:29,460 --> 00:47:31,680
this is basically how obviously the UI

1100
00:47:31,680 --> 00:47:33,599
looks like and I really like it because

1101
00:47:33,599 --> 00:47:37,020
you can see all the relationship in your

1102
00:47:37,020 --> 00:47:40,920
application resources and it's very very

1103
00:47:40,920 --> 00:47:43,200
nice and to configure it it's super

1104
00:47:43,200 --> 00:47:46,200
simple basically you need to tell Argo

1105
00:47:46,200 --> 00:47:48,119
City this is the repository that I want

1106
00:47:48,119 --> 00:47:51,359
you to watch and this is the cluster

1107
00:47:51,359 --> 00:47:53,520
that I want you to be installed on so to

1108
00:47:53,520 --> 00:47:57,300
install argocity a typical deployment is

1109
00:47:57,300 --> 00:47:59,579
very straightforward you just create a

1110
00:47:59,579 --> 00:48:01,800
UCD namespace which is one of the best

1111
00:48:01,800 --> 00:48:03,780
practices actually because if you don't

1112
00:48:03,780 --> 00:48:05,760
then the internal components you need to

1113
00:48:05,760 --> 00:48:08,220
reconfigure them it will be very messy

1114
00:48:08,220 --> 00:48:11,599
sometimes and then you simply apply

1115
00:48:11,599 --> 00:48:15,680
all the crds the cluster roles findings

1116
00:48:15,680 --> 00:48:18,119
in their repository server and the

1117
00:48:18,119 --> 00:48:19,920
controller and everything that obviously

1118
00:48:19,920 --> 00:48:22,920
needs you install it on your cluster

1119
00:48:22,920 --> 00:48:26,700
pretty straightforward and after that

1120
00:48:26,700 --> 00:48:29,640
you need to tell rbcd this is my

1121
00:48:29,640 --> 00:48:31,859
application this is my Repository

1122
00:48:31,859 --> 00:48:34,140
I need you to watch on that and to apply

1123
00:48:34,140 --> 00:48:35,700
it to the classroom you're installed on

1124
00:48:35,700 --> 00:48:39,500
so when you

1125
00:48:40,380 --> 00:48:42,420
when you go to our city you just simply

1126
00:48:42,420 --> 00:48:45,800
go here new application

1127
00:48:45,800 --> 00:48:50,460
test demo and the project is default

1128
00:48:50,460 --> 00:48:51,900
project is like

1129
00:48:51,900 --> 00:48:53,940
um the parent of application it can have

1130
00:48:53,940 --> 00:48:56,400
multiple application in one project

1131
00:48:56,400 --> 00:48:58,500
right now I don't want the application

1132
00:48:58,500 --> 00:49:01,079
to be coupled so I use the default

1133
00:49:01,079 --> 00:49:01,880
project

1134
00:49:01,880 --> 00:49:03,619
and

1135
00:49:03,619 --> 00:49:07,619
sync policies whether I want rbcd to

1136
00:49:07,619 --> 00:49:10,859
um automatically check for changes for

1137
00:49:10,859 --> 00:49:14,280
the new committee on every three seconds

1138
00:49:14,280 --> 00:49:16,640
or not do I want to do it manually so

1139
00:49:16,640 --> 00:49:21,060
let's choose automatic and there are a

1140
00:49:21,060 --> 00:49:24,780
lot of other configurations this is my

1141
00:49:24,780 --> 00:49:27,780
repository URL I want you to revision

1142
00:49:27,780 --> 00:49:30,839
the head and now I need to give it the

1143
00:49:30,839 --> 00:49:33,420
path of all the files that I wanted to

1144
00:49:33,420 --> 00:49:36,480
watch on I will only watches on

1145
00:49:36,480 --> 00:49:39,839
kubernetes files but it's important to

1146
00:49:39,839 --> 00:49:42,060
give it the path of all the files where

1147
00:49:42,060 --> 00:49:44,940
they are located in the Repository

1148
00:49:44,940 --> 00:49:47,460
now this is a cluster that you are

1149
00:49:47,460 --> 00:49:51,060
installed and

1150
00:49:52,619 --> 00:49:54,960
apply everything to the Mobic

1151
00:49:54,960 --> 00:49:58,700
sparkilateral martial law

1152
00:49:58,700 --> 00:50:03,240
any up namespace and we pretty much got

1153
00:50:03,240 --> 00:50:05,460
it now

1154
00:50:05,460 --> 00:50:07,440
now I will have two applications with

1155
00:50:07,440 --> 00:50:10,319
the name so let's see that

1156
00:50:10,319 --> 00:50:13,400
what is the problem

1157
00:50:13,980 --> 00:50:15,980
um

1158
00:50:16,020 --> 00:50:18,680
all right

1159
00:50:21,660 --> 00:50:23,579
and now this is pretty much the same

1160
00:50:23,579 --> 00:50:25,440
application but as you can see our goal

1161
00:50:25,440 --> 00:50:27,720
just pulls everything

1162
00:50:27,720 --> 00:50:30,919
I don't know

1163
00:50:31,680 --> 00:50:34,980
he's probably not offset oh yeah okay

1164
00:50:34,980 --> 00:50:36,599
so

1165
00:50:36,599 --> 00:50:39,240
I go basically like run everything and

1166
00:50:39,240 --> 00:50:43,260
syncing all the all the resources from

1167
00:50:43,260 --> 00:50:45,180
the Repository

1168
00:50:45,180 --> 00:50:47,819
it's not really healthy I think to have

1169
00:50:47,819 --> 00:50:49,700
two applications in the same repository

1170
00:50:49,700 --> 00:50:54,300
but it's for the demo sake and as you

1171
00:50:54,300 --> 00:50:55,440
can see here

1172
00:50:55,440 --> 00:50:57,180
I can

1173
00:50:57,180 --> 00:51:00,119
let's review the code I can this is the

1174
00:51:00,119 --> 00:51:04,020
and this is the code of the Repository

1175
00:51:04,020 --> 00:51:06,540
um with the application and I can change

1176
00:51:06,540 --> 00:51:09,980
my deployment to use different

1177
00:51:09,980 --> 00:51:14,819
image let's say that I wanted to use v a

1178
00:51:14,819 --> 00:51:16,859
two

1179
00:51:16,859 --> 00:51:19,079
did you

1180
00:51:19,079 --> 00:51:22,740
right z11

1181
00:51:24,020 --> 00:51:30,050
zero and now when I will define it

1182
00:51:30,050 --> 00:51:31,260
[Music]

1183
00:51:31,260 --> 00:51:34,980
yes and let's say change the current

1184
00:51:34,980 --> 00:51:37,140
image

1185
00:51:37,140 --> 00:51:40,339
okay Crush

1186
00:51:45,559 --> 00:51:50,960
uh let's move to this

1187
00:51:52,020 --> 00:51:55,079
nice help are you a little bit you know

1188
00:51:55,079 --> 00:51:59,339
if you see that he's out of sync and

1189
00:51:59,339 --> 00:52:03,660
it's supposed to one of the mornings

1190
00:52:03,660 --> 00:52:06,119
the location and there's his parents if

1191
00:52:06,119 --> 00:52:07,619
you can see yeah okay it doesn't like

1192
00:52:07,619 --> 00:52:11,660
the second application let's do it

1193
00:52:18,540 --> 00:52:23,040
and uh this is not good okay uh it was a

1194
00:52:23,040 --> 00:52:27,558
bad idea I think but let's

1195
00:52:29,400 --> 00:52:33,720
oh okay nice it works so now the sync is

1196
00:52:33,720 --> 00:52:36,960
okay and as you can see I got deploys my

1197
00:52:36,960 --> 00:52:38,000
new

1198
00:52:38,000 --> 00:52:43,220
image you can take some time I have

1199
00:52:43,920 --> 00:52:46,079
and therefore he's offline yeah I need

1200
00:52:46,079 --> 00:52:48,000
to already yeah I have some network

1201
00:52:48,000 --> 00:52:49,619
issues

1202
00:52:49,619 --> 00:52:52,980
and because I host it locally but

1203
00:52:52,980 --> 00:52:55,619
as you can see he's already started with

1204
00:52:55,619 --> 00:53:00,240
deploying the next image and if we wait

1205
00:53:00,240 --> 00:53:02,579
I can show you the the different kind of

1206
00:53:02,579 --> 00:53:04,800
the application and

1207
00:53:04,800 --> 00:53:08,339
what I did in my repository is that I

1208
00:53:08,339 --> 00:53:11,760
added three as it work so just in the CI

1209
00:53:11,760 --> 00:53:14,610
so if I open a full request

1210
00:53:14,610 --> 00:53:15,180
[Music]

1211
00:53:15,180 --> 00:53:16,079
um

1212
00:53:16,079 --> 00:53:19,619
if I open a Chromecast I can see that I

1213
00:53:19,619 --> 00:53:21,059
run the tree

1214
00:53:21,059 --> 00:53:25,140
I have a cool question actually prepared

1215
00:53:25,140 --> 00:53:27,599
that I run the tree in the CI so I can

1216
00:53:27,599 --> 00:53:30,300
enforce it and validate my resources on

1217
00:53:30,300 --> 00:53:32,940
every code change so argue cities take

1218
00:53:32,940 --> 00:53:35,280
care of all the cd part and in the CIA

1219
00:53:35,280 --> 00:53:37,140
can use scale of actions whatever I want

1220
00:53:37,140 --> 00:53:40,440
and in the ciflower you can integrate

1221
00:53:40,440 --> 00:53:41,460
the tree

1222
00:53:41,460 --> 00:53:44,220
from any policy person tool that you

1223
00:53:44,220 --> 00:53:46,759
want to use

1224
00:53:50,640 --> 00:53:54,420
all right cool thanks for the for the

1225
00:53:54,420 --> 00:53:57,780
demo you know what uh I've I see we we

1226
00:53:57,780 --> 00:54:00,720
got an uh a question in the Q a

1227
00:54:00,720 --> 00:54:04,260
um okay for you I'll I'll ask it uh with

1228
00:54:04,260 --> 00:54:05,819
the proposed separation between

1229
00:54:05,819 --> 00:54:08,640
configuration and Source codes where is

1230
00:54:08,640 --> 00:54:11,160
the best place to put infrastructure as

1231
00:54:11,160 --> 00:54:13,399
code

1232
00:54:13,619 --> 00:54:17,280
uh that depends I see a lot of people

1233
00:54:17,280 --> 00:54:18,540
that

1234
00:54:18,540 --> 00:54:21,000
think that it's it's uh it's supposed to

1235
00:54:21,000 --> 00:54:25,020
be in a different repository and I I

1236
00:54:25,020 --> 00:54:27,740
think it makes a lot of sense because

1237
00:54:27,740 --> 00:54:30,200
it's like a different

1238
00:54:30,200 --> 00:54:32,880
responsibility and different and like

1239
00:54:32,880 --> 00:54:35,280
different logic unit and we usually need

1240
00:54:35,280 --> 00:54:38,280
to configure it on a different

1241
00:54:38,280 --> 00:54:39,119
um

1242
00:54:39,119 --> 00:54:42,839
okay I think it's the right word but

1243
00:54:42,839 --> 00:54:44,460
um it's pretty much depends on how you

1244
00:54:44,460 --> 00:54:46,740
work so if you want to elaborate maybe a

1245
00:54:46,740 --> 00:54:48,599
little bit how your organization work

1246
00:54:48,599 --> 00:54:51,599
maybe what are the how many people you

1247
00:54:51,599 --> 00:54:53,220
have in your team how many teams you

1248
00:54:53,220 --> 00:54:58,079
have if your teams work on you have like

1249
00:54:58,079 --> 00:54:59,520
a couple of teams of work on the

1250
00:54:59,520 --> 00:55:02,220
terraform and on the infrastructure then

1251
00:55:02,220 --> 00:55:04,440
yeah having it separated with pository

1252
00:55:04,440 --> 00:55:07,619
much I think it would be best but if not

1253
00:55:07,619 --> 00:55:10,020
if it's just like

1254
00:55:10,020 --> 00:55:13,920
um simple and it's it's not a lot and

1255
00:55:13,920 --> 00:55:15,059
you can

1256
00:55:15,059 --> 00:55:18,180
use in one repository for all the

1257
00:55:18,180 --> 00:55:20,779
configurations

1258
00:55:24,420 --> 00:55:27,180
yeah okay thanks for the answer I think

1259
00:55:27,180 --> 00:55:30,960
that uh that's pretty clear

1260
00:55:30,960 --> 00:55:34,980
um you spoke a lot about uh Argo CT

1261
00:55:34,980 --> 00:55:37,740
um well I know there are other GitHub

1262
00:55:37,740 --> 00:55:41,660
GitHub stores like flux

1263
00:55:41,660 --> 00:55:44,880
how would you compare them

1264
00:55:44,880 --> 00:55:47,900
obviously the influx or potato potato

1265
00:55:47,900 --> 00:55:51,240
and they are the same pretty much I

1266
00:55:51,240 --> 00:55:54,839
think one of them has tenant support it

1267
00:55:54,839 --> 00:55:59,099
just sucks I think not RV City but other

1268
00:55:59,099 --> 00:56:03,059
than that they are the same thing

1269
00:56:03,059 --> 00:56:04,380
um

1270
00:56:04,380 --> 00:56:09,059
and I prefer argue City because it also

1271
00:56:09,059 --> 00:56:11,099
provides me the rollout and the events

1272
00:56:11,099 --> 00:56:12,599
and the workflows if you work with

1273
00:56:12,599 --> 00:56:15,240
machine learning then it's it's really

1274
00:56:15,240 --> 00:56:17,700
useful and I really like the view of

1275
00:56:17,700 --> 00:56:19,319
Harbor City

1276
00:56:19,319 --> 00:56:22,260
Flex doesn't have this kind of view I'm

1277
00:56:22,260 --> 00:56:26,339
like they got me hooked when I saw it uh

1278
00:56:26,339 --> 00:56:28,559
it is amazing so

1279
00:56:28,559 --> 00:56:29,480
um

1280
00:56:29,480 --> 00:56:32,700
facts in my opinion is great and it's

1281
00:56:32,700 --> 00:56:34,500
it's it's the same like you don't even

1282
00:56:34,500 --> 00:56:36,480
need to change a lot of your

1283
00:56:36,480 --> 00:56:39,660
configuration if you think about it but

1284
00:56:39,660 --> 00:56:41,579
um it's pretty much the same thing

1285
00:56:41,579 --> 00:56:44,180
yeah

1286
00:56:45,480 --> 00:56:49,800
yeah okay thank you uh I see no other

1287
00:56:49,800 --> 00:56:51,359
questions

1288
00:56:51,359 --> 00:56:54,720
um so I think we're good to to wrap up

1289
00:56:54,720 --> 00:56:55,920
this session

1290
00:56:55,920 --> 00:56:58,440
thank you very much for having me thank

1291
00:56:58,440 --> 00:57:00,300
you very much for watching

1292
00:57:00,300 --> 00:57:04,260
yeah I want to thank you uh Noah bye bye

1293
00:57:04,260 --> 00:57:07,220
bye bye

