1
00:00:03,659 --> 00:00:07,020
hi everyone welcome to ovas app check

2
00:00:07,020 --> 00:00:09,599
and today we're here with the builder

3
00:00:09,599 --> 00:00:12,420
sessions and for the next 45 minutes you

4
00:00:12,420 --> 00:00:15,420
will have tadmavi today to actually talk

5
00:00:15,420 --> 00:00:18,960
about the topic abusing Cloud apps 101

6
00:00:18,960 --> 00:00:22,080
command and control before I introduce

7
00:00:22,080 --> 00:00:24,359
the speaker I just wanted to give you a

8
00:00:24,359 --> 00:00:27,420
few uh things to go about for the next

9
00:00:27,420 --> 00:00:29,760
45 minutes I'll be the moderator for

10
00:00:29,760 --> 00:00:31,560
this session so I will come up back

11
00:00:31,560 --> 00:00:34,260
again after he's done so if you have any

12
00:00:34,260 --> 00:00:36,360
questions you can post it down

13
00:00:36,360 --> 00:00:38,399
on the Google platform on the right side

14
00:00:38,399 --> 00:00:40,559
of the video and we'll be taking those

15
00:00:40,559 --> 00:00:43,860
questions once after the speaker is done

16
00:00:43,860 --> 00:00:46,739
with this session and uh you know

17
00:00:46,739 --> 00:00:49,559
there's no chat options available for

18
00:00:49,559 --> 00:00:52,079
the attendees on the zoom so if you want

19
00:00:52,079 --> 00:00:54,239
to post in any Chat thing or any

20
00:00:54,239 --> 00:00:56,160
questions you can use the Hoover

21
00:00:56,160 --> 00:00:58,500
platform for the same I'll be looking at

22
00:00:58,500 --> 00:01:00,120
down all of the comments to bring it

23
00:01:00,120 --> 00:01:02,280
down to the speaker and we can discuss

24
00:01:02,280 --> 00:01:05,339
that at the last 15 minutes so we have

25
00:01:05,339 --> 00:01:08,040
the topic here as abusing Cloud apps 101

26
00:01:08,040 --> 00:01:11,340
command and control and we have a great

27
00:01:11,340 --> 00:01:13,680
great speaker here he's a threat

28
00:01:13,680 --> 00:01:16,439
researcher at netscope threat labs and

29
00:01:16,439 --> 00:01:18,900
is focused on cloud application views

30
00:01:18,900 --> 00:01:21,479
and cloud enabled thread detection

31
00:01:21,479 --> 00:01:24,420
so really I welcome you to Mommy today

32
00:01:24,420 --> 00:01:27,000
and over to you for the session

33
00:01:27,000 --> 00:01:29,100
thank you very much Samana that was a

34
00:01:29,100 --> 00:01:31,560
great introduction I hope everyone is

35
00:01:31,560 --> 00:01:33,479
having a great time here at Olaf's

36
00:01:33,479 --> 00:01:35,700
global app SEC 2022 and we have a very

37
00:01:35,700 --> 00:01:37,799
exciting talk prepared for you today so

38
00:01:37,799 --> 00:01:40,140
let's get started

39
00:01:40,140 --> 00:01:42,119
um like saman said I am a currently a

40
00:01:42,119 --> 00:01:43,920
threat researcher here at uh netsco

41
00:01:43,920 --> 00:01:45,900
previously I've held positions as a

42
00:01:45,900 --> 00:01:47,759
researcher a software engineer and as a

43
00:01:47,759 --> 00:01:50,220
developer at multiple companies I have

44
00:01:50,220 --> 00:01:52,860
my masters in cyber security from Drexel

45
00:01:52,860 --> 00:01:56,159
University and I also have an oscp in

46
00:01:56,159 --> 00:01:58,740
various Cloud certifications as well my

47
00:01:58,740 --> 00:02:00,840
interest range from capture their Flags

48
00:02:00,840 --> 00:02:03,240
exploit development to the study of

49
00:02:03,240 --> 00:02:05,460
cloud application abuse as well which is

50
00:02:05,460 --> 00:02:07,020
a really nice segue into what we're

51
00:02:07,020 --> 00:02:09,538
going to be talking about today

52
00:02:09,538 --> 00:02:12,420
so it is my hope that everyone attending

53
00:02:12,420 --> 00:02:14,940
this session today takes away four key

54
00:02:14,940 --> 00:02:17,520
takeaways with them firstly what is

55
00:02:17,520 --> 00:02:19,379
cloud C2 what is cloud Community Control

56
00:02:19,379 --> 00:02:22,500
what does that really mean secondly what

57
00:02:22,500 --> 00:02:24,239
cloud applications are abused for

58
00:02:24,239 --> 00:02:26,160
command and control in the wild right is

59
00:02:26,160 --> 00:02:28,020
this even really happening is this is

60
00:02:28,020 --> 00:02:31,680
this tactic occurring thirdly if this is

61
00:02:31,680 --> 00:02:33,840
happening how can you simulate this in

62
00:02:33,840 --> 00:02:35,340
your corporate Network so that you can

63
00:02:35,340 --> 00:02:36,959
see if the controls you have in place

64
00:02:36,959 --> 00:02:38,819
can detect this tactic

65
00:02:38,819 --> 00:02:41,580
and then lastly if you do have gaps in

66
00:02:41,580 --> 00:02:43,680
your security posture what defenses can

67
00:02:43,680 --> 00:02:45,180
you put in place so that you have a more

68
00:02:45,180 --> 00:02:46,560
complete Security posture and you can

69
00:02:46,560 --> 00:02:48,540
identify this tactic being used in your

70
00:02:48,540 --> 00:02:50,459
environment right so those are the four

71
00:02:50,459 --> 00:02:52,860
takeaways let's get started

72
00:02:52,860 --> 00:02:54,959
first start with talking about what

73
00:02:54,959 --> 00:02:56,940
cloud C2 is what do we mean when we say

74
00:02:56,940 --> 00:02:58,980
cloud Community Control

75
00:02:58,980 --> 00:03:01,440
before we Define command Cloud command

76
00:03:01,440 --> 00:03:03,180
and control however we need to take a

77
00:03:03,180 --> 00:03:04,620
step back and talk about what community

78
00:03:04,620 --> 00:03:07,319
control is so command and control is a

79
00:03:07,319 --> 00:03:09,660
stage in the Cyber kill chain the Cyber

80
00:03:09,660 --> 00:03:11,879
kill chain maybe for those of you who

81
00:03:11,879 --> 00:03:14,400
aren't familiar is a set of steps uh an

82
00:03:14,400 --> 00:03:16,739
attacker uses when compromising a Target

83
00:03:16,739 --> 00:03:18,840
system and this was developed by

84
00:03:18,840 --> 00:03:20,819
Lockheed and Martin and it typically

85
00:03:20,819 --> 00:03:22,860
starts out with the attacker performing

86
00:03:22,860 --> 00:03:24,720
some reconnaissance you can see this on

87
00:03:24,720 --> 00:03:26,879
the right side of your screen or the

88
00:03:26,879 --> 00:03:28,800
slide I mean it starts out with some

89
00:03:28,800 --> 00:03:30,780
attacker performance and reconnaissance

90
00:03:30,780 --> 00:03:33,060
they'll gather some information I'm

91
00:03:33,060 --> 00:03:35,340
going to gather some information they'll

92
00:03:35,340 --> 00:03:37,560
try to find any weaknesses they can

93
00:03:37,560 --> 00:03:40,140
weaponize on malicious payload against

94
00:03:40,140 --> 00:03:42,299
once they've weaponized this payload

95
00:03:42,299 --> 00:03:44,340
they'll deliver it and then exploit that

96
00:03:44,340 --> 00:03:45,900
weakness once they've exploited that

97
00:03:45,900 --> 00:03:48,060
weakness they will install a particular

98
00:03:48,060 --> 00:03:50,519
piece of malware on the target system

99
00:03:50,519 --> 00:03:53,159
that will phone back home and pull for

100
00:03:53,159 --> 00:03:55,080
additional commands so this traffic

101
00:03:55,080 --> 00:03:57,540
where a compromised device is pulling

102
00:03:57,540 --> 00:04:00,120
for additional commands is what we refer

103
00:04:00,120 --> 00:04:01,799
to as command and control

104
00:04:01,799 --> 00:04:03,959
traditionally it has involved this you

105
00:04:03,959 --> 00:04:05,280
know compromised device polling for

106
00:04:05,280 --> 00:04:09,480
commands via mediums like https and DNS

107
00:04:09,480 --> 00:04:11,760
directly to the attacker controlled

108
00:04:11,760 --> 00:04:13,439
server if you wanted to simulate

109
00:04:13,439 --> 00:04:14,939
Community Control you would have used

110
00:04:14,939 --> 00:04:16,680
Frameworks like Cobalt strike and

111
00:04:16,680 --> 00:04:19,019
Powershell Empire to simulate this in

112
00:04:19,019 --> 00:04:21,000
your team engagement or penetration test

113
00:04:21,000 --> 00:04:22,979
assessments so that you could see if the

114
00:04:22,979 --> 00:04:26,599
controls you have would identify this

115
00:04:26,880 --> 00:04:28,919
so now that we've covered what command

116
00:04:28,919 --> 00:04:30,900
and control is what do we mean when we

117
00:04:30,900 --> 00:04:34,080
say cloud command control or Cloud C2 so

118
00:04:34,080 --> 00:04:36,120
traditionally what we've seen attackers

119
00:04:36,120 --> 00:04:37,440
do is they'll set up their own

120
00:04:37,440 --> 00:04:39,120
infrastructure their own servers their

121
00:04:39,120 --> 00:04:41,340
own domains and their own hosts to

122
00:04:41,340 --> 00:04:42,960
Tunnel traffic through and you can see

123
00:04:42,960 --> 00:04:44,880
this on the top right a compromised

124
00:04:44,880 --> 00:04:46,740
device is going to reach out

125
00:04:46,740 --> 00:04:48,720
to the attacker-owned infrastructure

126
00:04:48,720 --> 00:04:50,699
that's set up by the attacker which will

127
00:04:50,699 --> 00:04:52,560
then pull commands from the attacker

128
00:04:52,560 --> 00:04:54,240
machine right so this is what the

129
00:04:54,240 --> 00:04:56,699
traditional setup was like this this is

130
00:04:56,699 --> 00:04:58,380
tough to detect but the security

131
00:04:58,380 --> 00:05:01,020
Community has done a pretty good job of

132
00:05:01,020 --> 00:05:03,120
using threat intelligence Feats to

133
00:05:03,120 --> 00:05:05,100
identify the sort of infrastructure so

134
00:05:05,100 --> 00:05:07,440
the attacker uh sorry the security

135
00:05:07,440 --> 00:05:09,300
Personnel would identify a server that's

136
00:05:09,300 --> 00:05:11,880
used for C2 they will take this IP

137
00:05:11,880 --> 00:05:14,160
address or this host they'll feed it to

138
00:05:14,160 --> 00:05:15,780
a threat intelligence feed that other

139
00:05:15,780 --> 00:05:18,300
security Personnel can consume and then

140
00:05:18,300 --> 00:05:20,520
defend against the DC traffic to their

141
00:05:20,520 --> 00:05:21,780
Network

142
00:05:21,780 --> 00:05:24,780
what attackers have done is recently

143
00:05:24,780 --> 00:05:26,580
they've started using or I should say

144
00:05:26,580 --> 00:05:29,280
abusing Cloud applications as a medium

145
00:05:29,280 --> 00:05:31,380
for Community Control right so instead

146
00:05:31,380 --> 00:05:33,060
of these infrastructure we'll see

147
00:05:33,060 --> 00:05:35,100
Dropbox instances Google Drive folders

148
00:05:35,100 --> 00:05:37,740
right slack channels S3 buckets as a

149
00:05:37,740 --> 00:05:39,600
medium to Tunnel their commands back and

150
00:05:39,600 --> 00:05:41,820
forth now why would an attacker want to

151
00:05:41,820 --> 00:05:44,160
do this well firstly it's very minimal

152
00:05:44,160 --> 00:05:45,840
setup it's very easy to kind of get set

153
00:05:45,840 --> 00:05:47,940
up and going into these Cloud apps right

154
00:05:47,940 --> 00:05:51,060
secondly they're very uh they're cheap

155
00:05:51,060 --> 00:05:53,580
if not free so they're very cost

156
00:05:53,580 --> 00:05:56,699
efficient and thirdly it's even tougher

157
00:05:56,699 --> 00:05:58,919
to detect this traffic since everyone

158
00:05:58,919 --> 00:06:00,840
uses you know they're so popular and

159
00:06:00,840 --> 00:06:03,000
ubiquitous you blend in with the

160
00:06:03,000 --> 00:06:05,699
existing traffic that much more so it's

161
00:06:05,699 --> 00:06:08,100
that much more enticing for attackers to

162
00:06:08,100 --> 00:06:10,139
use these Cloud applications as a medium

163
00:06:10,139 --> 00:06:13,039
for C2

164
00:06:13,139 --> 00:06:16,440
so what we are refer to as C2 is

165
00:06:16,440 --> 00:06:18,180
actually categorized in miter attackers

166
00:06:18,180 --> 00:06:20,220
also miter attack those of you that

167
00:06:20,220 --> 00:06:21,720
maybe aren't familiar with it is a

168
00:06:21,720 --> 00:06:24,300
framework for categorizing the tactics

169
00:06:24,300 --> 00:06:26,639
and techniques that you see

170
00:06:26,639 --> 00:06:28,860
um that attackers are performing in the

171
00:06:28,860 --> 00:06:29,880
wild

172
00:06:29,880 --> 00:06:33,180
C2 is categorized as technique 1102 or

173
00:06:33,180 --> 00:06:35,039
abusing web services for command and

174
00:06:35,039 --> 00:06:37,800
control and it's broken down into three

175
00:06:37,800 --> 00:06:40,199
sub techniques the first sub technique

176
00:06:40,199 --> 00:06:42,600
is bi-directional communication and this

177
00:06:42,600 --> 00:06:44,220
is really what we're going to focus in

178
00:06:44,220 --> 00:06:46,500
for this talk right it's where the

179
00:06:46,500 --> 00:06:49,259
attacker is sending commands to and

180
00:06:49,259 --> 00:06:51,240
receiving output from a compromise

181
00:06:51,240 --> 00:06:53,639
system over a cloud application so both

182
00:06:53,639 --> 00:06:55,319
the forward and the reverse

183
00:06:55,319 --> 00:06:58,139
communication is happening over com over

184
00:06:58,139 --> 00:07:00,840
a cloud application instance now while

185
00:07:00,840 --> 00:07:02,880
we won't cover the other two however

186
00:07:02,880 --> 00:07:05,340
it's important to mention them because I

187
00:07:05,340 --> 00:07:06,600
know they exist because they are

188
00:07:06,600 --> 00:07:08,940
important the second sub technique is

189
00:07:08,940 --> 00:07:11,280
one-way communication this is where the

190
00:07:11,280 --> 00:07:13,860
attacker will send commands to the

191
00:07:13,860 --> 00:07:15,900
victim or the compromise system without

192
00:07:15,900 --> 00:07:17,880
receiving any output back so it's just

193
00:07:17,880 --> 00:07:19,979
the forward Direction this is

194
00:07:19,979 --> 00:07:21,740
um if you can think of it as another

195
00:07:21,740 --> 00:07:24,180
level of adding stealth from the

196
00:07:24,180 --> 00:07:25,440
attacker's point of view you know they

197
00:07:25,440 --> 00:07:27,479
want to blend in and you know lie under

198
00:07:27,479 --> 00:07:29,340
the radar that much more

199
00:07:29,340 --> 00:07:31,800
the third sub technique is dead drop

200
00:07:31,800 --> 00:07:33,000
resolvers

201
00:07:33,000 --> 00:07:34,259
um for those of you maybe that are

202
00:07:34,259 --> 00:07:35,940
familiar with like spy movies and

203
00:07:35,940 --> 00:07:37,680
Espionage right you know what the

204
00:07:37,680 --> 00:07:39,360
concept of a dead drop is so you can

205
00:07:39,360 --> 00:07:41,099
think of a dead drop resolver as a

206
00:07:41,099 --> 00:07:43,080
digital debt drop right this is where

207
00:07:43,080 --> 00:07:45,720
the attackers abusing the Cloud app to

208
00:07:45,720 --> 00:07:47,639
host information that point to

209
00:07:47,639 --> 00:07:51,000
additional C2 infrastructure so the

210
00:07:51,000 --> 00:07:52,860
communication doesn't actually occur

211
00:07:52,860 --> 00:07:55,979
over a cloud application but the end

212
00:07:55,979 --> 00:07:57,840
point of where that communication should

213
00:07:57,840 --> 00:07:59,780
occur to or should

214
00:07:59,780 --> 00:08:02,699
communicate to is reaching out is is

215
00:08:02,699 --> 00:08:04,800
hosted on a Cloud app so here you can

216
00:08:04,800 --> 00:08:06,539
see a YouTube comment right this is an

217
00:08:06,539 --> 00:08:08,580
instance of a dead drop resolver where

218
00:08:08,580 --> 00:08:10,440
the attacker has left a message that

219
00:08:10,440 --> 00:08:12,300
says my keyboard doesn't work some

220
00:08:12,300 --> 00:08:14,099
gibberish but then at the end of the

221
00:08:14,099 --> 00:08:16,740
second line is a b64 encoded endpoint

222
00:08:16,740 --> 00:08:18,599
that the compromise system will pull

223
00:08:18,599 --> 00:08:20,759
down decode and then reach out to for

224
00:08:20,759 --> 00:08:23,360
additional commands

225
00:08:23,360 --> 00:08:25,620
so that's kind of a quick introduction

226
00:08:25,620 --> 00:08:28,199
of what cloud community control is what

227
00:08:28,199 --> 00:08:30,539
we you know we say cloud C2 now let's

228
00:08:30,539 --> 00:08:33,659
talk about how thick how often is this

229
00:08:33,659 --> 00:08:35,099
happening in the wild right what are

230
00:08:35,099 --> 00:08:36,719
attackers doing how are they abusing

231
00:08:36,719 --> 00:08:38,880
these Cloud applications

232
00:08:38,880 --> 00:08:40,919
so here in this slide it's a little bit

233
00:08:40,919 --> 00:08:43,020
of a busy slide but what we wanted to

234
00:08:43,020 --> 00:08:45,540
show is the malware samples and the

235
00:08:45,540 --> 00:08:47,339
cloud applications they've abused for

236
00:08:47,339 --> 00:08:49,800
commanded control so we can see

237
00:08:49,800 --> 00:08:52,560
boxcar Nimble Mamba and crutch of abuse

238
00:08:52,560 --> 00:08:55,260
Dropbox graphite and blue light have

239
00:08:55,260 --> 00:08:58,140
abuse OneDrive a-clip has a b slack

240
00:08:58,140 --> 00:09:00,000
we've seen GitHub abuse Google Drive

241
00:09:00,000 --> 00:09:02,220
abuse Twitter abuse Tumblr Blogspot

242
00:09:02,220 --> 00:09:04,440
Google Docs Google script paste and one

243
00:09:04,440 --> 00:09:07,140
Hub telegram right and this is a select

244
00:09:07,140 --> 00:09:09,000
list the list goes on a much more

245
00:09:09,000 --> 00:09:10,860
detailed list can be found on miter's

246
00:09:10,860 --> 00:09:13,519
page right there's a

247
00:09:13,519 --> 00:09:17,279
there's so much variety here and so much

248
00:09:17,279 --> 00:09:19,140
application so many applications that

249
00:09:19,140 --> 00:09:21,060
have been abused that we really want to

250
00:09:21,060 --> 00:09:23,220
have you guys take away from this slide

251
00:09:23,220 --> 00:09:25,380
is that no Cloud app is immune to this

252
00:09:25,380 --> 00:09:27,899
attackers have abused Cloud apps or have

253
00:09:27,899 --> 00:09:29,640
a bees the Cloud app or they are going

254
00:09:29,640 --> 00:09:31,380
to abuse the Cloud app right it's it's

255
00:09:31,380 --> 00:09:32,519
either happened or it's going to happen

256
00:09:32,519 --> 00:09:35,160
right they're they're kind of uh

257
00:09:35,160 --> 00:09:37,440
diversifying and kind of getting depth

258
00:09:37,440 --> 00:09:40,080
that's what we really want to show here

259
00:09:40,080 --> 00:09:41,880
so in the previous side we kind of

260
00:09:41,880 --> 00:09:44,640
showed the the instances of of malware

261
00:09:44,640 --> 00:09:45,899
and the cloud applications they're

262
00:09:45,899 --> 00:09:47,940
abusing what we wanted to show in this

263
00:09:47,940 --> 00:09:51,540
slide is how we could um can we get some

264
00:09:51,540 --> 00:09:53,760
aggregate insights from these uh from

265
00:09:53,760 --> 00:09:55,860
these from these instances so we looked

266
00:09:55,860 --> 00:09:58,800
at our 23 known and reported instances

267
00:09:58,800 --> 00:10:01,200
of cloud community control over a

268
00:10:01,200 --> 00:10:04,380
two-year period from April 2020 to April

269
00:10:04,380 --> 00:10:05,760
2022

270
00:10:05,760 --> 00:10:07,560
and these are just new and reported

271
00:10:07,560 --> 00:10:09,480
instances right so there's like a lot

272
00:10:09,480 --> 00:10:11,220
more that are not known or that have not

273
00:10:11,220 --> 00:10:13,140
been reported but if we just look at the

274
00:10:13,140 --> 00:10:14,880
ones that are known and reported we can

275
00:10:14,880 --> 00:10:16,920
see we can we can

276
00:10:16,920 --> 00:10:19,380
get some insights one of the insights is

277
00:10:19,380 --> 00:10:21,720
which Cloud applications do these

278
00:10:21,720 --> 00:10:25,019
attackers prefer you can if we take a

279
00:10:25,019 --> 00:10:26,700
look at that chart we can see that um

280
00:10:26,700 --> 00:10:28,740
Dropbox is by far the most preferred app

281
00:10:28,740 --> 00:10:31,740
but eight instances of the 23 OneDrive

282
00:10:31,740 --> 00:10:33,839
is a second at five and then Google

283
00:10:33,839 --> 00:10:36,540
drive four instances and then and then

284
00:10:36,540 --> 00:10:38,279
after that you have telegram at two and

285
00:10:38,279 --> 00:10:40,260
then slack Google Docs Google sites

286
00:10:40,260 --> 00:10:42,120
glitch GitHub Gmail Cloud film Cloud

287
00:10:42,120 --> 00:10:44,040
front all at one instance

288
00:10:44,040 --> 00:10:45,600
so these attackers are kind of

289
00:10:45,600 --> 00:10:47,940
preferring these top three Cloud apps uh

290
00:10:47,940 --> 00:10:50,399
the most you know Dropbox OneDrive in

291
00:10:50,399 --> 00:10:54,180
Google Drive in this preference is even

292
00:10:54,180 --> 00:10:55,920
more apparent if we go ahead and

293
00:10:55,920 --> 00:10:58,519
categorize these Cloud applications

294
00:10:58,519 --> 00:11:01,079
based on the services they provide to

295
00:11:01,079 --> 00:11:03,360
their users so if we categorize uh

296
00:11:03,360 --> 00:11:05,279
Dropbox Google Drive and OneDrive as

297
00:11:05,279 --> 00:11:06,720
cloud storage because they're cloud

298
00:11:06,720 --> 00:11:08,399
storage applications

299
00:11:08,399 --> 00:11:11,399
we can see that

300
00:11:11,399 --> 00:11:14,279
cloud storage app is by far the most

301
00:11:14,279 --> 00:11:16,740
preferred by these attackers right at 17

302
00:11:16,740 --> 00:11:20,519
instances of the 23 then you have uh not

303
00:11:20,519 --> 00:11:22,320
so very close second social

304
00:11:22,320 --> 00:11:24,600
collaboration and CDN maps at two

305
00:11:24,600 --> 00:11:27,300
instances each web design platform as a

306
00:11:27,300 --> 00:11:29,040
service development to the Webmail all

307
00:11:29,040 --> 00:11:32,220
one instance each right so when we see a

308
00:11:32,220 --> 00:11:33,839
chart like this when we see that cloud

309
00:11:33,839 --> 00:11:36,540
storage is by far the most preferred app

310
00:11:36,540 --> 00:11:39,060
it's 17 instances of the 23 we ask

311
00:11:39,060 --> 00:11:41,579
ourselves why is why is this the case

312
00:11:41,579 --> 00:11:43,740
right why why are these Cloud apps

313
00:11:43,740 --> 00:11:45,180
referred

314
00:11:45,180 --> 00:11:48,180
um this way and while we can't really

315
00:11:48,180 --> 00:11:50,700
know the answer until we sit down with

316
00:11:50,700 --> 00:11:52,560
these attackers and Survey them and ask

317
00:11:52,560 --> 00:11:54,600
them why they made the decisions what we

318
00:11:54,600 --> 00:11:56,720
can do is infer

319
00:11:56,720 --> 00:11:59,519
and further reasoning based on the

320
00:11:59,519 --> 00:12:00,959
actions we took in the cloud

321
00:12:00,959 --> 00:12:04,920
applications so we we see that there we

322
00:12:04,920 --> 00:12:06,660
came across three reasons that might

323
00:12:06,660 --> 00:12:09,420
likely explain what's happening firstly

324
00:12:09,420 --> 00:12:12,000
how easy is it to get set up in Cloud

325
00:12:12,000 --> 00:12:14,160
applications right these these Cloud

326
00:12:14,160 --> 00:12:16,500
apps make it super simple to get set up

327
00:12:16,500 --> 00:12:17,880
three to five minutes and you have a

328
00:12:17,880 --> 00:12:19,940
fresh account you're ready to go right

329
00:12:19,940 --> 00:12:23,040
secondly how popular in ubiquitous are

330
00:12:23,040 --> 00:12:24,720
these Cloud applications right if you're

331
00:12:24,720 --> 00:12:27,300
trying to uh everyone has a Google Drive

332
00:12:27,300 --> 00:12:28,800
account right everyone has a Gmail

333
00:12:28,800 --> 00:12:31,079
account if you're on a compromised

334
00:12:31,079 --> 00:12:32,399
system and you're trying to blend in

335
00:12:32,399 --> 00:12:34,920
with to the existing traffic you have a

336
00:12:34,920 --> 00:12:36,360
better chance of doing that if you're

337
00:12:36,360 --> 00:12:37,500
targeting one of these Cloud

338
00:12:37,500 --> 00:12:38,880
applications

339
00:12:38,880 --> 00:12:41,700
or sorry if you're if you're using one

340
00:12:41,700 --> 00:12:42,959
of these Cloud applications right

341
00:12:42,959 --> 00:12:46,260
thirdly and this is a trickier one is

342
00:12:46,260 --> 00:12:48,839
how easily does it integrate to the

343
00:12:48,839 --> 00:12:51,480
existing workflow right we know that

344
00:12:51,480 --> 00:12:53,100
attackers are lazy and they're going to

345
00:12:53,100 --> 00:12:55,260
choose the easiest way to get to the to

346
00:12:55,260 --> 00:12:56,399
get to the goal right that's where

347
00:12:56,399 --> 00:12:58,019
they're the attackers

348
00:12:58,019 --> 00:13:01,200
but when we take a traditional C2 type

349
00:13:01,200 --> 00:13:03,139
of setup that's been around for a while

350
00:13:03,139 --> 00:13:05,880
and how how does that work they'll take

351
00:13:05,880 --> 00:13:07,620
the data they'll encrypt it and encode

352
00:13:07,620 --> 00:13:09,420
it this is um malware seeing Planet

353
00:13:09,420 --> 00:13:11,339
victim right it'll take the data encrypt

354
00:13:11,339 --> 00:13:14,220
it and code it and they'll HTTP post it

355
00:13:14,220 --> 00:13:15,420
to their server

356
00:13:15,420 --> 00:13:17,820
okay well if they wanted to use a cloud

357
00:13:17,820 --> 00:13:19,680
storage app what would have to change

358
00:13:19,680 --> 00:13:22,320
they'll take that data encrypt it encode

359
00:13:22,320 --> 00:13:25,079
it write it to a file and upload it

360
00:13:25,079 --> 00:13:27,360
that's three to two to three lines of

361
00:13:27,360 --> 00:13:28,680
code that needs to change that's not

362
00:13:28,680 --> 00:13:31,079
that much at all right versus you look

363
00:13:31,079 --> 00:13:33,420
at an application like slack maybe what

364
00:13:33,420 --> 00:13:34,680
would they have to do they would have to

365
00:13:34,680 --> 00:13:37,079
take that information create a slack

366
00:13:37,079 --> 00:13:39,959
Channel post it reply you know post it

367
00:13:39,959 --> 00:13:41,339
as a message reply to that message

368
00:13:41,339 --> 00:13:43,260
delete that message right it gets a

369
00:13:43,260 --> 00:13:44,820
little bit more complicated and we've

370
00:13:44,820 --> 00:13:46,980
seen attackers do this as well

371
00:13:46,980 --> 00:13:52,079
but we also see uh we also tend to see

372
00:13:52,079 --> 00:13:54,779
these attackers kind of choose the

373
00:13:54,779 --> 00:13:56,459
easiest way to get to their goal right

374
00:13:56,459 --> 00:13:58,980
and that's that's kind of why uh we

375
00:13:58,980 --> 00:14:00,600
believe cloud storage app is the most

376
00:14:00,600 --> 00:14:02,820
preferred

377
00:14:02,820 --> 00:14:04,680
next what we so we looked at the

378
00:14:04,680 --> 00:14:06,779
categories and which categories the most

379
00:14:06,779 --> 00:14:08,459
preferred but what we also wanted to

380
00:14:08,459 --> 00:14:10,139
look at is what features in each

381
00:14:10,139 --> 00:14:12,360
category are abused right

382
00:14:12,360 --> 00:14:14,339
so when we look at cloud storage apps

383
00:14:14,339 --> 00:14:16,079
like Dropbox and OneDrive we've seen

384
00:14:16,079 --> 00:14:18,120
uploading files downloading files

385
00:14:18,120 --> 00:14:20,519
deleting files with social apps like

386
00:14:20,519 --> 00:14:22,680
telegram we've seen bot usage right

387
00:14:22,680 --> 00:14:24,120
you've seen reading messages writing

388
00:14:24,120 --> 00:14:26,220
messages with collaboration apps like

389
00:14:26,220 --> 00:14:28,019
slack we've seen creating channels

390
00:14:28,019 --> 00:14:29,279
reading messages writing messages

391
00:14:29,279 --> 00:14:31,440
replying to messages

392
00:14:31,440 --> 00:14:33,540
CDN apps like cloudfront we've seen

393
00:14:33,540 --> 00:14:36,240
proxy traffic via CDN Network web design

394
00:14:36,240 --> 00:14:37,680
apps like Google sites you've seen

395
00:14:37,680 --> 00:14:40,199
dga-like algorithms to pass data to

396
00:14:40,199 --> 00:14:42,779
different URL every day platform as a

397
00:14:42,779 --> 00:14:44,459
service apps like glitch we've seen

398
00:14:44,459 --> 00:14:46,260
creating custom applications and then

399
00:14:46,260 --> 00:14:48,180
uploading files to those custom apps

400
00:14:48,180 --> 00:14:50,639
development tool apps like GitHub we've

401
00:14:50,639 --> 00:14:53,160
seen creating repositories adding commit

402
00:14:53,160 --> 00:14:55,860
deleting commits right Webmail apps like

403
00:14:55,860 --> 00:14:58,139
Gmail you see the writing draft emails

404
00:14:58,139 --> 00:15:00,300
adding attachments right so the reason

405
00:15:00,300 --> 00:15:02,459
we have this table here is you can see

406
00:15:02,459 --> 00:15:04,079
that these attackers aren't taking their

407
00:15:04,079 --> 00:15:05,660
existing

408
00:15:05,660 --> 00:15:08,160
methodology and kind of shoving it into

409
00:15:08,160 --> 00:15:09,660
the Cloud app no they're actually

410
00:15:09,660 --> 00:15:12,300
leveraging the features in the cloud

411
00:15:12,300 --> 00:15:15,360
application to kind of make their

412
00:15:15,360 --> 00:15:17,639
offensive workflow better right they're

413
00:15:17,639 --> 00:15:19,860
using channels in slack they're using

414
00:15:19,860 --> 00:15:22,079
repositories in GitHub and they're kind

415
00:15:22,079 --> 00:15:25,019
of reaping the benefits of using these

416
00:15:25,019 --> 00:15:27,420
Cloud applications as well

417
00:15:27,420 --> 00:15:29,719
foreign

418
00:15:33,420 --> 00:15:34,680
so

419
00:15:34,680 --> 00:15:36,600
we act let's talk about what we covered

420
00:15:36,600 --> 00:15:38,459
so we talked about what cloud C2 was

421
00:15:38,459 --> 00:15:40,500
right we defined what cloud C2 is and

422
00:15:40,500 --> 00:15:42,120
then we looked at some trends that are

423
00:15:42,120 --> 00:15:44,100
happening in the wild with regards to

424
00:15:44,100 --> 00:15:46,680
Cloud Community Control now we want to

425
00:15:46,680 --> 00:15:49,620
do is take a closer look and see how we

426
00:15:49,620 --> 00:15:51,420
can simulate this in our Network so that

427
00:15:51,420 --> 00:15:54,300
we could see if the controls we have can

428
00:15:54,300 --> 00:15:56,820
identify this tactic being used

429
00:15:56,820 --> 00:15:59,220
we're primarily going to use three tools

430
00:15:59,220 --> 00:16:01,079
to do this Empire C3 and Covenant and

431
00:16:01,079 --> 00:16:02,399
we'll cover what those are in just a

432
00:16:02,399 --> 00:16:03,300
second

433
00:16:03,300 --> 00:16:05,100
we're going to focus in our two

434
00:16:05,100 --> 00:16:07,860
applications here Dropbox and GitHub so

435
00:16:07,860 --> 00:16:09,600
Dropbox is a representative for cloud

436
00:16:09,600 --> 00:16:11,519
storage and GitHub as a representative

437
00:16:11,519 --> 00:16:13,079
for

438
00:16:13,079 --> 00:16:15,240
um development tools and for each of

439
00:16:15,240 --> 00:16:16,560
these apps what we'll do is we'll talk

440
00:16:16,560 --> 00:16:18,240
about what is the Cloud app meant to do

441
00:16:18,240 --> 00:16:20,339
why would an attacker want to use this

442
00:16:20,339 --> 00:16:21,540
Cloud app or abuse This Cloud

443
00:16:21,540 --> 00:16:23,880
application we'll go over a real world

444
00:16:23,880 --> 00:16:26,399
example of abuse of this Cloud app and

445
00:16:26,399 --> 00:16:28,019
then for the bulk of it we're going to

446
00:16:28,019 --> 00:16:29,760
go through a detailed walkthrough of how

447
00:16:29,760 --> 00:16:31,199
you can simulate this in red team

448
00:16:31,199 --> 00:16:33,240
engagement and then finally we'll

449
00:16:33,240 --> 00:16:35,160
briefly take a look of how this Cloud

450
00:16:35,160 --> 00:16:37,199
application is being abused

451
00:16:37,199 --> 00:16:39,180
so that we can um

452
00:16:39,180 --> 00:16:41,100
kind of see what's happening under the

453
00:16:41,100 --> 00:16:42,720
hood right

454
00:16:42,720 --> 00:16:44,279
so the tools we're going to use are

455
00:16:44,279 --> 00:16:46,440
Empire Covenant and custom Commander

456
00:16:46,440 --> 00:16:48,959
controller C3 Empire is a Powershell and

457
00:16:48,959 --> 00:16:50,820
Python 3 post exploitation framework

458
00:16:50,820 --> 00:16:52,800
it's open source and maintained by PC

459
00:16:52,800 --> 00:16:55,259
security it's a Unix based so if you're

460
00:16:55,259 --> 00:16:57,660
kind of a a Linux shop maybe you want to

461
00:16:57,660 --> 00:17:00,240
use that tool Covenant on the other hand

462
00:17:00,240 --> 00:17:03,000
is a collaborative.net C2 framework

463
00:17:03,000 --> 00:17:05,579
it's also open source and it's Windows

464
00:17:05,579 --> 00:17:07,319
based so if your windows shop maybe you

465
00:17:07,319 --> 00:17:09,000
want to prefer that one

466
00:17:09,000 --> 00:17:10,859
um C3 on the other hand are custom

467
00:17:10,859 --> 00:17:13,260
command and control isn't um it's a

468
00:17:13,260 --> 00:17:14,520
little bit different from Empire and

469
00:17:14,520 --> 00:17:16,439
Covenant while these other tools kind of

470
00:17:16,439 --> 00:17:18,959
focus on the command execution and

471
00:17:18,959 --> 00:17:21,900
interpretation portion C3 kind of

472
00:17:21,900 --> 00:17:23,640
focuses on the medium the command is

473
00:17:23,640 --> 00:17:25,500
going through so the definition is it's

474
00:17:25,500 --> 00:17:27,419
a framework for rapid prototyping of

475
00:17:27,419 --> 00:17:29,580
custom C2 channels so it lets you kind

476
00:17:29,580 --> 00:17:31,679
of quickly get set up with new uh

477
00:17:31,679 --> 00:17:33,240
committed control channels that you want

478
00:17:33,240 --> 00:17:36,059
to use and it provides integration with

479
00:17:36,059 --> 00:17:38,340
tools like Cobalt strike and Covenant so

480
00:17:38,340 --> 00:17:39,960
that you can kind of offload that

481
00:17:39,960 --> 00:17:42,360
command interpretation portion off to

482
00:17:42,360 --> 00:17:44,340
them to develop their maintained by

483
00:17:44,340 --> 00:17:46,320
f-secure labs they are you know great

484
00:17:46,320 --> 00:17:49,320
all of these tools are very well

485
00:17:49,320 --> 00:17:51,000
maintained they're really a blast to

486
00:17:51,000 --> 00:17:52,380
work with so if you have you know some

487
00:17:52,380 --> 00:17:53,940
time and you're trying to learn a new

488
00:17:53,940 --> 00:17:55,620
tool I highly recommend you take a look

489
00:17:55,620 --> 00:17:57,120
at these

490
00:17:57,120 --> 00:17:59,760
so first let's take a closer look into a

491
00:17:59,760 --> 00:18:02,940
Dropbox so Dropbox is a very popular

492
00:18:02,940 --> 00:18:05,400
cloud storage application and since it's

493
00:18:05,400 --> 00:18:07,020
a cloud storage application right it

494
00:18:07,020 --> 00:18:08,520
tends to be abused by uploading

495
00:18:08,520 --> 00:18:10,500
downloading and deleting encrypted and

496
00:18:10,500 --> 00:18:13,200
encoded files it has a highly flexible

497
00:18:13,200 --> 00:18:15,299
app development interface and it's very

498
00:18:15,299 --> 00:18:18,240
easy to get set up in Dropbox it also

499
00:18:18,240 --> 00:18:20,400
exists as an Enterprise and a personal

500
00:18:20,400 --> 00:18:23,100
cloud and this kind of entices attackers

501
00:18:23,100 --> 00:18:25,320
that much more to use it since you know

502
00:18:25,320 --> 00:18:27,000
the corporation they're targeting or the

503
00:18:27,000 --> 00:18:29,220
company they're targeting might be you

504
00:18:29,220 --> 00:18:31,320
you know an Enterprise level client of

505
00:18:31,320 --> 00:18:34,380
the of Dropbox already

506
00:18:34,380 --> 00:18:37,080
so let's go over a real world abuse of

507
00:18:37,080 --> 00:18:39,720
Dropbox so uh threat actor by the name

508
00:18:39,720 --> 00:18:42,299
of mole rats was founded abusing Dropbox

509
00:18:42,299 --> 00:18:44,400
for Community Control earlier this year

510
00:18:44,400 --> 00:18:46,559
in January this threat actor is known

511
00:18:46,559 --> 00:18:48,179
for being stealthy and they've

512
00:18:48,179 --> 00:18:50,220
previously used this tactic of abusing

513
00:18:50,220 --> 00:18:52,679
Cloud apps what's really interesting

514
00:18:52,679 --> 00:18:55,980
here is that they actually used multiple

515
00:18:55,980 --> 00:18:58,440
accounts in this exploitation workflow

516
00:18:58,440 --> 00:19:01,140
on this uh offensive flow right and we

517
00:19:01,140 --> 00:19:02,580
can kind of see this flow along the

518
00:19:02,580 --> 00:19:05,640
right uh malicious Office document gets

519
00:19:05,640 --> 00:19:07,740
downloaded by victim executes some

520
00:19:07,740 --> 00:19:10,080
Powershell code this Powershell code

521
00:19:10,080 --> 00:19:11,880
download and execute the dot net

522
00:19:11,880 --> 00:19:14,940
backdoor this backdoor talks to the

523
00:19:14,940 --> 00:19:16,860
attacker communicates to the attacker

524
00:19:16,860 --> 00:19:19,140
via these Dropbox instances right and

525
00:19:19,140 --> 00:19:20,820
the attacker kind of segmented or

526
00:19:20,820 --> 00:19:23,460
segregated these

527
00:19:23,460 --> 00:19:26,280
um Cloud applications based on their

528
00:19:26,280 --> 00:19:28,200
responsibility so you had one drop one

529
00:19:28,200 --> 00:19:30,900
dropbox instances just for C2 another

530
00:19:30,900 --> 00:19:32,940
Dropbox is just for file infiltration

531
00:19:32,940 --> 00:19:34,559
Etc right so you can kind of see that

532
00:19:34,559 --> 00:19:35,880
they were separating these

533
00:19:35,880 --> 00:19:38,039
responsibilities out based on the based

534
00:19:38,039 --> 00:19:40,740
on the account so if one gets burned

535
00:19:40,740 --> 00:19:42,000
they can still talk through the

536
00:19:42,000 --> 00:19:45,000
compromised machines

537
00:19:45,000 --> 00:19:46,799
so how can we simulate this in our

538
00:19:46,799 --> 00:19:48,840
Network right where you can do this

539
00:19:48,840 --> 00:19:52,280
using tools like Dropbox C2 C3 or Empire

540
00:19:52,280 --> 00:19:54,960
for us we're going to use Empire below

541
00:19:54,960 --> 00:19:56,580
but that's somewhat arbitrary you can

542
00:19:56,580 --> 00:19:58,559
really use any of the tools and achieve

543
00:19:58,559 --> 00:20:00,900
the same um same result

544
00:20:00,900 --> 00:20:02,640
we're going to follow a four-step

545
00:20:02,640 --> 00:20:04,860
process to do this we are going to first

546
00:20:04,860 --> 00:20:07,020
create an attacker control Dropbox

547
00:20:07,020 --> 00:20:09,360
account then we're going to go ahead and

548
00:20:09,360 --> 00:20:11,280
set up an Empire server an Empire

549
00:20:11,280 --> 00:20:13,860
listener with an access token from the

550
00:20:13,860 --> 00:20:15,000
Dropbox account so we're going to

551
00:20:15,000 --> 00:20:16,500
connect to the Empire server with the

552
00:20:16,500 --> 00:20:18,720
Dropbox account and then thirdly we're

553
00:20:18,720 --> 00:20:20,700
going to generate a malicious payload

554
00:20:20,700 --> 00:20:23,220
from Empire and deliver it directly to

555
00:20:23,220 --> 00:20:25,260
the victim kind of simulate a compromise

556
00:20:25,260 --> 00:20:27,299
and then once we have a victim the

557
00:20:27,299 --> 00:20:28,919
attacker communicating by the Dropbox

558
00:20:28,919 --> 00:20:30,419
account we're going to interact with the

559
00:20:30,419 --> 00:20:32,280
compromise device by tunneling commands

560
00:20:32,280 --> 00:20:34,500
through Dropbox so

561
00:20:34,500 --> 00:20:36,720
um let's get started

562
00:20:36,720 --> 00:20:38,760
so firstly we're going to go ahead and

563
00:20:38,760 --> 00:20:40,500
create the attacker control Dropbox

564
00:20:40,500 --> 00:20:42,240
account and generate an access token

565
00:20:42,240 --> 00:20:44,220
here we've signed up for Dropbox and we

566
00:20:44,220 --> 00:20:46,620
can go ahead and create a new app on the

567
00:20:46,620 --> 00:20:48,299
platform we're going to give it sculpt

568
00:20:48,299 --> 00:20:50,520
access we're going to say uh you know

569
00:20:50,520 --> 00:20:53,700
you want full access to to Dropbox or to

570
00:20:53,700 --> 00:20:55,440
the Dropbox accounts rather we're going

571
00:20:55,440 --> 00:20:57,480
to give it Empire C2 and then give it

572
00:20:57,480 --> 00:20:59,580
you know full read and write access one

573
00:20:59,580 --> 00:21:01,440
thing that's not captured in the screen

574
00:21:01,440 --> 00:21:04,320
cap below is there's a place where you

575
00:21:04,320 --> 00:21:06,179
can download these you can copy the

576
00:21:06,179 --> 00:21:07,679
access token it's not shown on the

577
00:21:07,679 --> 00:21:09,480
screen cap but we've grabbed that access

578
00:21:09,480 --> 00:21:10,919
token as well

579
00:21:10,919 --> 00:21:13,020
and also you can kind of see a little

580
00:21:13,020 --> 00:21:15,780
Legend on the top right that shows you

581
00:21:15,780 --> 00:21:18,299
where we are in the attack flow so you

582
00:21:18,299 --> 00:21:19,679
can kind of see

583
00:21:19,679 --> 00:21:20,460
um

584
00:21:20,460 --> 00:21:23,340
right now we're in the Dropbox portion

585
00:21:23,340 --> 00:21:26,340
right that's what we're setting up

586
00:21:26,340 --> 00:21:28,140
once we set that up we're going to go

587
00:21:28,140 --> 00:21:30,720
ahead and set up an Empire server an

588
00:21:30,720 --> 00:21:32,640
Empire listener with these with this

589
00:21:32,640 --> 00:21:35,400
access token so we have a Linux machine

590
00:21:35,400 --> 00:21:37,440
here where we've installed Empire we're

591
00:21:37,440 --> 00:21:39,480
going to set up Dropbox and give it that

592
00:21:39,480 --> 00:21:43,020
API token if uh you know pass it the API

593
00:21:43,020 --> 00:21:45,240
token and everything's gone well we can

594
00:21:45,240 --> 00:21:48,000
type in the execute command and we

595
00:21:48,000 --> 00:21:50,460
should see that the listener Dropbox has

596
00:21:50,460 --> 00:21:52,260
successfully started so we've connected

597
00:21:52,260 --> 00:21:55,440
this Dropbox sorry this Empire server

598
00:21:55,440 --> 00:21:57,059
this Empire listener with the Dropbox

599
00:21:57,059 --> 00:21:59,299
account

600
00:21:59,340 --> 00:22:01,919
so what does this do

601
00:22:01,919 --> 00:22:03,299
um behind the scenes right so this is

602
00:22:03,299 --> 00:22:06,480
actually going to go into the uh Dropbox

603
00:22:06,480 --> 00:22:08,460
account and create a folder here it's

604
00:22:08,460 --> 00:22:10,500
new Empire that's the default we didn't

605
00:22:10,500 --> 00:22:12,000
really change it but you can change that

606
00:22:12,000 --> 00:22:13,080
to whatever

607
00:22:13,080 --> 00:22:15,539
um you know you feel like is appropriate

608
00:22:15,539 --> 00:22:18,059
here we've uh it's created an Empire

609
00:22:18,059 --> 00:22:20,580
folder that has three subfolders results

610
00:22:20,580 --> 00:22:23,220
staging and taskings and this is really

611
00:22:23,220 --> 00:22:24,360
kind of

612
00:22:24,360 --> 00:22:26,880
um laying the groundwork or the

613
00:22:26,880 --> 00:22:28,799
foundation for that communication leader

614
00:22:28,799 --> 00:22:30,299
so that that you know the compromise

615
00:22:30,299 --> 00:22:32,220
system can

616
00:22:32,220 --> 00:22:34,320
um reach out to the attacker and the

617
00:22:34,320 --> 00:22:36,179
attacker to the compromise system over

618
00:22:36,179 --> 00:22:39,059
this uh over these folders or over this

619
00:22:39,059 --> 00:22:42,320
application that's been set up

620
00:22:43,140 --> 00:22:45,539
so now that we have the Dropbox account

621
00:22:45,539 --> 00:22:48,059
connected to the Empire server and

622
00:22:48,059 --> 00:22:49,500
that's you know fully functional and

623
00:22:49,500 --> 00:22:50,760
running

624
00:22:50,760 --> 00:22:52,020
um what we're going to do is we're going

625
00:22:52,020 --> 00:22:54,299
to generate a malicious payload and

626
00:22:54,299 --> 00:22:55,980
deliver it directly to the victim to

627
00:22:55,980 --> 00:22:58,500
kind of simulate a compromise normally

628
00:22:58,500 --> 00:23:00,900
in a red team engagement or maybe a pen

629
00:23:00,900 --> 00:23:03,960
test assessment what you'd follow is or

630
00:23:03,960 --> 00:23:05,400
what would typically happen is you'd

631
00:23:05,400 --> 00:23:07,440
have a phishing campaign that you

632
00:23:07,440 --> 00:23:09,360
download you know malicious document or

633
00:23:09,360 --> 00:23:12,120
a malicious link file that then would

634
00:23:12,120 --> 00:23:15,000
download this as an XT payload we're

635
00:23:15,000 --> 00:23:16,679
kind of skipping all of that here just

636
00:23:16,679 --> 00:23:18,179
for the sake of brevity we're just going

637
00:23:18,179 --> 00:23:19,740
to copy this payload over and kind of

638
00:23:19,740 --> 00:23:21,480
simulate what you know compromise that

639
00:23:21,480 --> 00:23:23,280
has happened right

640
00:23:23,280 --> 00:23:25,380
so we're going to use the Stager module

641
00:23:25,380 --> 00:23:28,020
in Empire we are going to set the

642
00:23:28,020 --> 00:23:31,140
listener to Dropbox and generate uh you

643
00:23:31,140 --> 00:23:32,580
know that payload as a Windows batch

644
00:23:32,580 --> 00:23:34,320
file uh we're going to name it

645
00:23:34,320 --> 00:23:36,600
launcher.bet we're going to copy that to

646
00:23:36,600 --> 00:23:38,640
the victim and we're going to execute

647
00:23:38,640 --> 00:23:40,919
that once we execute that we should see

648
00:23:40,919 --> 00:23:43,380
a Powershell process start up and this

649
00:23:43,380 --> 00:23:45,059
Powershell process is going to fold back

650
00:23:45,059 --> 00:23:47,159
home to the attacker and register what's

651
00:23:47,159 --> 00:23:49,440
called an agent right so this agent is

652
00:23:49,440 --> 00:23:51,240
going to have you know agent name it's

653
00:23:51,240 --> 00:23:52,620
going to have the language information

654
00:23:52,620 --> 00:23:54,840
about the AP address the username that's

655
00:23:54,840 --> 00:23:56,940
running out as the process name process

656
00:23:56,940 --> 00:23:59,700
ID the delay the last time we've seen

657
00:23:59,700 --> 00:24:01,440
and most importantly the medium it's

658
00:24:01,440 --> 00:24:03,299
communicating through which is uh

659
00:24:03,299 --> 00:24:06,500
Dropbox in this case

660
00:24:07,380 --> 00:24:08,940
so we have

661
00:24:08,940 --> 00:24:10,860
um once you set all that up we can

662
00:24:10,860 --> 00:24:12,539
interact with the compromise device we

663
00:24:12,539 --> 00:24:15,000
have a quick video here see if this will

664
00:24:15,000 --> 00:24:18,080
uh play for us

665
00:24:24,299 --> 00:24:27,020
okay cool

666
00:24:27,840 --> 00:24:30,539
so here we can see um

667
00:24:30,539 --> 00:24:32,159
so what we have is we have the victim

668
00:24:32,159 --> 00:24:34,740
machine set up and we've copied this uh

669
00:24:34,740 --> 00:24:36,419
batch file or this Windows batch file

670
00:24:36,419 --> 00:24:38,280
over to the victim machine we've named

671
00:24:38,280 --> 00:24:40,260
it launcher.bet and we're going to go

672
00:24:40,260 --> 00:24:42,419
ahead and execute that on the victim and

673
00:24:42,419 --> 00:24:44,940
see what happens

674
00:24:44,940 --> 00:24:47,640
so once you execute that we should see

675
00:24:47,640 --> 00:24:51,240
two Powershell processes have spun up

676
00:24:51,240 --> 00:24:53,400
right and we go to the attacker screen

677
00:24:53,400 --> 00:24:56,760
what we see is uh

678
00:24:56,760 --> 00:24:59,340
this agent will check in right and

679
00:24:59,340 --> 00:25:01,679
they'll have a unique agent name

680
00:25:01,679 --> 00:25:03,419
since this is a multi-stage deployment

681
00:25:03,419 --> 00:25:05,460
it does take a while for the agent to

682
00:25:05,460 --> 00:25:08,340
get uh fully set up so if we kind of

683
00:25:08,340 --> 00:25:09,720
list it out it's still not kind of

684
00:25:09,720 --> 00:25:11,460
completely set up yet just give it one

685
00:25:11,460 --> 00:25:14,580
or two more seconds you can see that

686
00:25:14,580 --> 00:25:16,500
um

687
00:25:16,500 --> 00:25:18,480
we can see it's now fully set up we have

688
00:25:18,480 --> 00:25:20,760
all the same details as before you know

689
00:25:20,760 --> 00:25:22,919
the agent name the language IP username

690
00:25:22,919 --> 00:25:25,559
process name process ID the delay last

691
00:25:25,559 --> 00:25:27,539
time we've seen in the medium right The

692
00:25:27,539 --> 00:25:29,460
Listener so we're going to go ahead and

693
00:25:29,460 --> 00:25:31,679
interact with that agent we're going to

694
00:25:31,679 --> 00:25:34,260
type two commands we want to see

695
00:25:34,260 --> 00:25:34,980
um

696
00:25:34,980 --> 00:25:37,260
we're going to see who we are in the

697
00:25:37,260 --> 00:25:39,600
list of the processes one thing to note

698
00:25:39,600 --> 00:25:42,360
here is that the victim operates on a

699
00:25:42,360 --> 00:25:44,159
polling architecture

700
00:25:44,159 --> 00:25:47,100
which means that it reaches

701
00:25:47,100 --> 00:25:49,200
um out to the Dropbox folder to look for

702
00:25:49,200 --> 00:25:51,480
new convenience at a specified interval

703
00:25:51,480 --> 00:25:53,880
this interval is

704
00:25:53,880 --> 00:25:55,679
um you know specified in this delay

705
00:25:55,679 --> 00:25:59,400
column here so here at 60 seconds so in

706
00:25:59,400 --> 00:26:00,779
um

707
00:26:00,779 --> 00:26:02,279
so this means it's going to check

708
00:26:02,279 --> 00:26:03,720
commands or the victim's going to check

709
00:26:03,720 --> 00:26:05,340
community in the Dropbox folder for 60

710
00:26:05,340 --> 00:26:06,900
seconds this is important to note

711
00:26:06,900 --> 00:26:09,179
because if you set this to know for once

712
00:26:09,179 --> 00:26:11,520
a day you might not see the result of

713
00:26:11,520 --> 00:26:15,000
the command right away

714
00:26:15,000 --> 00:26:16,799
so here we just have to wait a little

715
00:26:16,799 --> 00:26:19,260
bit until the agent checks in but if we

716
00:26:19,260 --> 00:26:20,760
look at the Dropbox account in the

717
00:26:20,760 --> 00:26:22,559
meantime what we see is how this

718
00:26:22,559 --> 00:26:24,299
communication is happening right you see

719
00:26:24,299 --> 00:26:27,299
that the attacker is going to upload

720
00:26:27,299 --> 00:26:28,860
these text files

721
00:26:28,860 --> 00:26:30,419
the victim is going to download them

722
00:26:30,419 --> 00:26:32,659
delete them and then upload the results

723
00:26:32,659 --> 00:26:35,640
of uh these operations as different text

724
00:26:35,640 --> 00:26:37,559
files right and then the attacker is

725
00:26:37,559 --> 00:26:39,059
going to pull that down and then Parson

726
00:26:39,059 --> 00:26:42,840
uh show the results in that in that

727
00:26:42,840 --> 00:26:43,980
console

728
00:26:43,980 --> 00:26:47,520
and it's also the agent names kind of

729
00:26:47,520 --> 00:26:50,340
lines up to the the name of the text

730
00:26:50,340 --> 00:26:53,178
file in this case

731
00:26:58,200 --> 00:26:59,640
all right well that kind of happened

732
00:26:59,640 --> 00:27:02,220
quickly but you can kind of see do we

733
00:27:02,220 --> 00:27:03,960
list of the processes that just came up

734
00:27:03,960 --> 00:27:06,539
right you see the process uh name the

735
00:27:06,539 --> 00:27:09,000
process ID the architecture the username

736
00:27:09,000 --> 00:27:11,159
it's running ads and some some memory

737
00:27:11,159 --> 00:27:14,000
information right

738
00:27:15,179 --> 00:27:17,279
so now what we want to do is if we go

739
00:27:17,279 --> 00:27:19,140
back to the victim

740
00:27:19,140 --> 00:27:21,840
um what we want to look at is so this is

741
00:27:21,840 --> 00:27:23,520
an application called Fiddler maybe

742
00:27:23,520 --> 00:27:24,960
those of you that aren't familiar with

743
00:27:24,960 --> 00:27:29,100
Fiddler Fiddler is a web proxy that we

744
00:27:29,100 --> 00:27:30,299
have running on the victim machine

745
00:27:30,299 --> 00:27:33,900
that'll show us the processes and the

746
00:27:33,900 --> 00:27:35,700
web connections that's originating from

747
00:27:35,700 --> 00:27:37,860
these processes right

748
00:27:37,860 --> 00:27:40,320
so here we can see that this Powershell

749
00:27:40,320 --> 00:27:43,100
process is reaching out to

750
00:27:43,100 --> 00:27:45,120
dropboxapi.com and it's you know

751
00:27:45,120 --> 00:27:47,460
Gathering some information

752
00:27:47,460 --> 00:27:49,200
on

753
00:27:49,200 --> 00:27:52,620
um you know these these uh encrypted

754
00:27:52,620 --> 00:27:55,440
encoded text files and if we try to see

755
00:27:55,440 --> 00:27:57,900
what the contents look like at one of

756
00:27:57,900 --> 00:27:59,220
the

757
00:27:59,220 --> 00:28:01,140
requests we're trying to download these

758
00:28:01,140 --> 00:28:03,059
files you can see that it's not legible

759
00:28:03,059 --> 00:28:04,620
right it's it's

760
00:28:04,620 --> 00:28:07,080
completely gibberish at this at this

761
00:28:07,080 --> 00:28:09,199
level

762
00:28:12,840 --> 00:28:14,520
awesome

763
00:28:14,520 --> 00:28:17,100
so what did we just see right we saw how

764
00:28:17,100 --> 00:28:18,720
this interaction is happening between

765
00:28:18,720 --> 00:28:21,539
the compromise device and the the

766
00:28:21,539 --> 00:28:22,740
attacker's machine right this

767
00:28:22,740 --> 00:28:24,779
interaction is happening by uploading

768
00:28:24,779 --> 00:28:27,179
and downloading these um encrypted task

769
00:28:27,179 --> 00:28:29,220
files you can see on the left side of

770
00:28:29,220 --> 00:28:31,679
our screen these text files if you try

771
00:28:31,679 --> 00:28:33,539
to download it open one of them you can

772
00:28:33,539 --> 00:28:36,179
see that there's really if they're not

773
00:28:36,179 --> 00:28:38,880
legible at all it's encrypted and if we

774
00:28:38,880 --> 00:28:40,559
take a look at the code we can see that

775
00:28:40,559 --> 00:28:42,299
the the portion of the code that's

776
00:28:42,299 --> 00:28:44,100
actually doing this is using an advanced

777
00:28:44,100 --> 00:28:45,960
encryption standard algorithm to kind of

778
00:28:45,960 --> 00:28:47,640
encrypt that

779
00:28:47,640 --> 00:28:51,000
um that data that's going back and forth

780
00:28:51,000 --> 00:28:53,700
so let's summarize what we just talked

781
00:28:53,700 --> 00:28:55,620
about right so Dropbox is a cloud

782
00:28:55,620 --> 00:28:57,539
storage app that's similar to you know

783
00:28:57,539 --> 00:29:00,299
OneDrive and Google Drive it's abused by

784
00:29:00,299 --> 00:29:02,460
uploading downloading and deleting these

785
00:29:02,460 --> 00:29:04,740
encrypted files if you want to simulate

786
00:29:04,740 --> 00:29:07,020
a threat actor using this technique you

787
00:29:07,020 --> 00:29:09,480
can do that using tools like Dropbox C2

788
00:29:09,480 --> 00:29:11,820
C3 and Empire

789
00:29:11,820 --> 00:29:13,799
and one thing to note here is depending

790
00:29:13,799 --> 00:29:15,840
on maybe the sophistication level you're

791
00:29:15,840 --> 00:29:19,080
trying to model you can you can use

792
00:29:19,080 --> 00:29:20,580
these tools differently so if you're

793
00:29:20,580 --> 00:29:23,580
trying to model a unsophisticated threat

794
00:29:23,580 --> 00:29:24,960
actor a threat actor of low

795
00:29:24,960 --> 00:29:27,059
sophistication you can use the default

796
00:29:27,059 --> 00:29:29,520
configurations the tool like Empire or

797
00:29:29,520 --> 00:29:30,720
C3

798
00:29:30,720 --> 00:29:32,820
if you're in a Model A moderately

799
00:29:32,820 --> 00:29:34,559
sophisticated threat actor you could do

800
00:29:34,559 --> 00:29:36,840
that easy you know you could take these

801
00:29:36,840 --> 00:29:38,340
tools and comp customize their

802
00:29:38,340 --> 00:29:39,960
configurations a little bit so that you

803
00:29:39,960 --> 00:29:41,580
can kind of fly under the radar a little

804
00:29:41,580 --> 00:29:43,020
bit better

805
00:29:43,020 --> 00:29:45,000
and if you want to model a highly

806
00:29:45,000 --> 00:29:46,620
sophisticated threat actor you know the

807
00:29:46,620 --> 00:29:48,240
kind of attacker that we've seen

808
00:29:48,240 --> 00:29:50,700
targeted attacks in the real world what

809
00:29:50,700 --> 00:29:52,860
you might do is use multiple accounts

810
00:29:52,860 --> 00:29:56,159
with segregated responsibilities so that

811
00:29:56,159 --> 00:29:57,600
the you know the data transfers

812
00:29:57,600 --> 00:30:00,419
separated amongst them right you might

813
00:30:00,419 --> 00:30:03,840
also really tune your traffic to match

814
00:30:03,840 --> 00:30:05,880
what's happening in the network so if

815
00:30:05,880 --> 00:30:08,159
you hop onto victim Network and you see

816
00:30:08,159 --> 00:30:10,140
that there is one person that uses

817
00:30:10,140 --> 00:30:13,260
Dropbox a lot and you know that person's

818
00:30:13,260 --> 00:30:15,059
in HR or whatever maybe you want to use

819
00:30:15,059 --> 00:30:17,340
that person's machine to kind of tunnel

820
00:30:17,340 --> 00:30:19,260
your commands outside of the outside of

821
00:30:19,260 --> 00:30:20,640
the network so it kind of Blends into

822
00:30:20,640 --> 00:30:23,940
that traffic a little bit better right

823
00:30:23,940 --> 00:30:25,559
cool

824
00:30:25,559 --> 00:30:28,380
so now let's take a closer look into uh

825
00:30:28,380 --> 00:30:29,880
GitHub abuse right we're going to follow

826
00:30:29,880 --> 00:30:32,580
a similar structure here as well

827
00:30:32,580 --> 00:30:34,020
um GitHub maybe those of you aren't

828
00:30:34,020 --> 00:30:35,820
familiar is a code development platform

829
00:30:35,820 --> 00:30:39,200
it's primarily a source code repository

830
00:30:39,200 --> 00:30:42,120
platform but it's grown to be much more

831
00:30:42,120 --> 00:30:44,700
than that at this point and since it's

832
00:30:44,700 --> 00:30:46,500
really a source code repository platform

833
00:30:46,500 --> 00:30:48,240
it does tend to be abused by creating

834
00:30:48,240 --> 00:30:50,520
repositories and adding commits

835
00:30:50,520 --> 00:30:53,100
similar to Dropbox it also has a very

836
00:30:53,100 --> 00:30:54,960
flexible application development

837
00:30:54,960 --> 00:30:56,399
interface that lets you kind of quickly

838
00:30:56,399 --> 00:30:58,980
get set up and get going and kind of use

839
00:30:58,980 --> 00:31:03,600
this app as as you might need right

840
00:31:03,600 --> 00:31:06,720
if you take a look at a real world abuse

841
00:31:06,720 --> 00:31:10,679
of this app when we saw uh Lazarus aptr

842
00:31:10,679 --> 00:31:13,500
very sophisticated North Korean apt it's

843
00:31:13,500 --> 00:31:15,000
very famous

844
00:31:15,000 --> 00:31:17,700
um leverage GitHub for C2 earlier this

845
00:31:17,700 --> 00:31:19,380
year so the attack flow it's very

846
00:31:19,380 --> 00:31:20,940
similar to what we're seeing at that

847
00:31:20,940 --> 00:31:23,520
given time uh malicious Office document

848
00:31:23,520 --> 00:31:26,760
gets downloaded it you know does a bunch

849
00:31:26,760 --> 00:31:28,860
of other malicious processes stuff right

850
00:31:28,860 --> 00:31:31,679
it spins up folders it does some

851
00:31:31,679 --> 00:31:34,020
malicious link stuff malicious dll stuff

852
00:31:34,020 --> 00:31:36,899
but also communicates

853
00:31:36,899 --> 00:31:39,960
um out to the attacker via a GitHub

854
00:31:39,960 --> 00:31:42,600
repository right and what it does it

855
00:31:42,600 --> 00:31:45,419
retrieves the files present in the image

856
00:31:45,419 --> 00:31:48,480
directory of a GitHub repo and then it

857
00:31:48,480 --> 00:31:50,340
grabs the commands from those files

858
00:31:50,340 --> 00:31:52,740
executes the command from those files

859
00:31:52,740 --> 00:31:56,279
and uploads the command results uh the

860
00:31:56,279 --> 00:31:57,779
command results are committed to the

861
00:31:57,779 --> 00:32:00,179
repo Under The Meta files directory

862
00:32:00,179 --> 00:32:02,700
where the file name denotes the time at

863
00:32:02,700 --> 00:32:04,500
which it was executed so it kind of

864
00:32:04,500 --> 00:32:07,740
really gets its money's worth from from

865
00:32:07,740 --> 00:32:11,340
the GitHub account it has set up

866
00:32:11,340 --> 00:32:13,620
so if you wanted to simulate this how

867
00:32:13,620 --> 00:32:16,260
would you go about doing that you we did

868
00:32:16,260 --> 00:32:17,340
this using

869
00:32:17,340 --> 00:32:19,620
um C3 and Covenant and we followed the

870
00:32:19,620 --> 00:32:21,419
steps that were outlined by f-secure

871
00:32:21,419 --> 00:32:23,820
great set of steps we kind of slimmed

872
00:32:23,820 --> 00:32:25,559
them down and kind of summarized them to

873
00:32:25,559 --> 00:32:28,320
that same four-step flow we followed for

874
00:32:28,320 --> 00:32:29,640
Dropbox

875
00:32:29,640 --> 00:32:32,159
um these two these four steps are

876
00:32:32,159 --> 00:32:34,200
firstly we're going to sign up for this

877
00:32:34,200 --> 00:32:35,820
GitHub account and we're going to create

878
00:32:35,820 --> 00:32:37,620
this access token or create a personal

879
00:32:37,620 --> 00:32:39,960
token once we have that we're going to

880
00:32:39,960 --> 00:32:43,140
set up C3 and Covenant with a GitHub

881
00:32:43,140 --> 00:32:45,059
channel right and we're going to use the

882
00:32:45,059 --> 00:32:46,559
steps again outlined but if security

883
00:32:46,559 --> 00:32:48,360
steps are kind of much more detailed

884
00:32:48,360 --> 00:32:50,580
right there like hole in this repo set

885
00:32:50,580 --> 00:32:52,140
it up this way past these configuration

886
00:32:52,140 --> 00:32:55,020
framers Etc right we're gonna follow

887
00:32:55,020 --> 00:32:56,760
those steps instead of C3 and Covenant

888
00:32:56,760 --> 00:32:58,620
once we have those two set up we're

889
00:32:58,620 --> 00:33:00,960
going to generate a malicious

890
00:33:00,960 --> 00:33:02,880
um we're going to generate a malicious

891
00:33:02,880 --> 00:33:05,880
payload that contains this GitHub token

892
00:33:05,880 --> 00:33:07,620
and we're gonna

893
00:33:07,620 --> 00:33:10,620
um run this on the victim machine to

894
00:33:10,620 --> 00:33:12,659
simulate a compromise

895
00:33:12,659 --> 00:33:14,940
once we have uh simulated this

896
00:33:14,940 --> 00:33:17,340
compromise we're going to interact with

897
00:33:17,340 --> 00:33:19,140
the compromise device by tunneling

898
00:33:19,140 --> 00:33:21,179
commands through GitHub and you kind of

899
00:33:21,179 --> 00:33:23,940
see this in the attack flow the chart at

900
00:33:23,940 --> 00:33:26,279
the bottom right the C3 server the

901
00:33:26,279 --> 00:33:28,440
Gateway is going to upload those

902
00:33:28,440 --> 00:33:30,059
commands to GitHub

903
00:33:30,059 --> 00:33:33,059
the malicious process or the relay

904
00:33:33,059 --> 00:33:35,039
that's running on the victim server it's

905
00:33:35,039 --> 00:33:36,480
going to pull those commands down

906
00:33:36,480 --> 00:33:39,240
execute them upload those task results

907
00:33:39,240 --> 00:33:41,460
to GitHub then the Gateway is going to

908
00:33:41,460 --> 00:33:43,380
pull down those task results parse them

909
00:33:43,380 --> 00:33:47,179
and and show them on the console

910
00:33:49,140 --> 00:33:51,720
so let's follow the first step and sign

911
00:33:51,720 --> 00:33:53,100
up for GitHub account sorry so we'll

912
00:33:53,100 --> 00:33:54,779
sign up for a GitHub account we go ahead

913
00:33:54,779 --> 00:33:56,940
and create a personal token we're going

914
00:33:56,940 --> 00:34:00,179
to name it C3 and we are going to give

915
00:34:00,179 --> 00:34:04,279
it full access to this account right

916
00:34:06,299 --> 00:34:08,460
once we have that GitHub account fully

917
00:34:08,460 --> 00:34:11,760
set up we are going to uh set up C3 and

918
00:34:11,760 --> 00:34:15,139
Covenant with um

919
00:34:15,839 --> 00:34:17,639
we're going to set up C3 and Covenant

920
00:34:17,639 --> 00:34:19,800
with a GitHub Channel using these steps

921
00:34:19,800 --> 00:34:21,719
right the steps that were we referred to

922
00:34:21,719 --> 00:34:23,879
earlier that were outlined by a f-secure

923
00:34:23,879 --> 00:34:27,239
one thing to note here is that C3 and

924
00:34:27,239 --> 00:34:29,460
Covenant are you know two separate

925
00:34:29,460 --> 00:34:31,918
repositories that are being contained at

926
00:34:31,918 --> 00:34:35,520
different pieces so if you um

927
00:34:35,520 --> 00:34:38,219
if you set these up together uh we found

928
00:34:38,219 --> 00:34:40,560
that there might be some compatibility

929
00:34:40,560 --> 00:34:43,500
um gotchas we so to solve that we found

930
00:34:43,500 --> 00:34:45,659
that the best commit hash is as that

931
00:34:45,659 --> 00:34:47,639
commit ash from covenant that works uh

932
00:34:47,639 --> 00:34:50,219
pretty well for all our use cases that

933
00:34:50,219 --> 00:34:51,780
we mentioned here right but we're going

934
00:34:51,780 --> 00:34:54,119
to set up C3 and then we are going to go

935
00:34:54,119 --> 00:34:57,599
ahead and generate that um once we set

936
00:34:57,599 --> 00:34:59,880
up the Gateway we're going to do is

937
00:34:59,880 --> 00:35:02,339
set up the GitHub Channel as as that

938
00:35:02,339 --> 00:35:04,140
medium and if we have that set up we can

939
00:35:04,140 --> 00:35:06,720
see that on the screen on the bottom

940
00:35:06,720 --> 00:35:07,920
right that's what it should look like

941
00:35:07,920 --> 00:35:09,720
right you have the Gateway which is the

942
00:35:09,720 --> 00:35:13,819
C3 service connected to the channel

943
00:35:15,660 --> 00:35:17,820
so what does this do right similar to

944
00:35:17,820 --> 00:35:20,520
how we saw with um

945
00:35:20,520 --> 00:35:22,740
Dropbox and the Empire folder being

946
00:35:22,740 --> 00:35:25,500
created in Dropbox in GitHub this is

947
00:35:25,500 --> 00:35:26,820
going to go ahead and create a

948
00:35:26,820 --> 00:35:29,640
repository to be used for the C2 channel

949
00:35:29,640 --> 00:35:31,260
in the GitHub account right so this

950
00:35:31,260 --> 00:35:34,800
repository is named the e5j you can kind

951
00:35:34,800 --> 00:35:36,839
of see that it resembles any GitHub

952
00:35:36,839 --> 00:35:39,119
repository right it has a readme etc

953
00:35:39,119 --> 00:35:40,560
right

954
00:35:40,560 --> 00:35:42,599
so we're kind of laying that groundwork

955
00:35:42,599 --> 00:35:45,359
here similar to how we did with the

956
00:35:45,359 --> 00:35:48,140
Dropbox account

957
00:35:49,079 --> 00:35:51,839
so once we've set up the GitHub account

958
00:35:51,839 --> 00:35:54,200
and it's communicated to

959
00:35:54,200 --> 00:35:57,960
connected to the C3 Gateway we can go

960
00:35:57,960 --> 00:36:00,300
ahead and generate the malicious payload

961
00:36:00,300 --> 00:36:02,700
it'll contain that GitHub token and

962
00:36:02,700 --> 00:36:04,200
we're going to download that and run it

963
00:36:04,200 --> 00:36:07,140
on the victim machine so here

964
00:36:07,140 --> 00:36:07,800
um

965
00:36:07,800 --> 00:36:10,800
C3 has this really amazing interactive

966
00:36:10,800 --> 00:36:14,220
UI that we can go ahead and create and

967
00:36:14,220 --> 00:36:16,020
download what we call a relay so the

968
00:36:16,020 --> 00:36:17,820
relay is kind of that malicious payload

969
00:36:17,820 --> 00:36:19,980
we're going to download that relay copy

970
00:36:19,980 --> 00:36:21,420
it over to the victim machine again

971
00:36:21,420 --> 00:36:24,240
we're going to skip all those other

972
00:36:24,240 --> 00:36:26,339
important steps for the sake of brevity

973
00:36:26,339 --> 00:36:29,099
right and we're going to run it as admin

974
00:36:29,099 --> 00:36:31,500
on the victim machine

975
00:36:31,500 --> 00:36:33,780
so what this does once you run it on the

976
00:36:33,780 --> 00:36:35,579
victim machine it's going to spin up a

977
00:36:35,579 --> 00:36:37,140
process that's going to phone back home

978
00:36:37,140 --> 00:36:39,540
through GitHub and it's going to like

979
00:36:39,540 --> 00:36:41,880
kind of set up that um the connection

980
00:36:41,880 --> 00:36:43,619
that we need to kind of tunnel commands

981
00:36:43,619 --> 00:36:45,359
back and forth once we have this set up

982
00:36:45,359 --> 00:36:48,420
we can type commands like who am I uh

983
00:36:48,420 --> 00:36:50,400
that'll tell us who we are and then get

984
00:36:50,400 --> 00:36:52,140
the current directory which is going to

985
00:36:52,140 --> 00:36:55,500
give us details around uh where where we

986
00:36:55,500 --> 00:36:57,060
are in the in the machine in the file

987
00:36:57,060 --> 00:36:59,400
system right so how this kind of flows

988
00:36:59,400 --> 00:37:00,900
you can kind of see on the right side

989
00:37:00,900 --> 00:37:03,359
the Gateway or the you know the C3

990
00:37:03,359 --> 00:37:05,640
server is going to send those commands

991
00:37:05,640 --> 00:37:07,440
through the channel so the channel is

992
00:37:07,440 --> 00:37:10,140
like those two squares in the middle

993
00:37:10,140 --> 00:37:12,720
um the purple and the black square and

994
00:37:12,720 --> 00:37:15,780
then the victim on the far side is going

995
00:37:15,780 --> 00:37:17,940
to pull those commands down execute them

996
00:37:17,940 --> 00:37:20,040
and then upload the results back through

997
00:37:20,040 --> 00:37:22,140
the channel through GitHub right so both

998
00:37:22,140 --> 00:37:24,540
the victim and the C3 Gateway they're

999
00:37:24,540 --> 00:37:26,400
both on internal networks so they don't

1000
00:37:26,400 --> 00:37:28,020
communicate to each other outside of

1001
00:37:28,020 --> 00:37:31,079
GitHub at all right

1002
00:37:31,079 --> 00:37:34,380
so we said that the abused GitHub or the

1003
00:37:34,380 --> 00:37:36,960
communicate via GitHub but how exactly

1004
00:37:36,960 --> 00:37:38,460
is this happening

1005
00:37:38,460 --> 00:37:41,040
from the GitHub side right like what

1006
00:37:41,040 --> 00:37:42,240
what are the steps it's actually

1007
00:37:42,240 --> 00:37:44,460
following well it's very similar to

1008
00:37:44,460 --> 00:37:46,800
Dropbox in that there are encrypted and

1009
00:37:46,800 --> 00:37:49,200
encoded files but in this case they're

1010
00:37:49,200 --> 00:37:51,660
going to get added to a local repository

1011
00:37:51,660 --> 00:37:53,280
that's going to get pushed up into

1012
00:37:53,280 --> 00:37:55,200
remote into the remote

1013
00:37:55,200 --> 00:37:55,800
um

1014
00:37:55,800 --> 00:37:58,140
the remote copyright and get in GitHub

1015
00:37:58,140 --> 00:37:59,940
so you see the attacker commits these

1016
00:37:59,940 --> 00:38:02,280
files to the repo then the victim is

1017
00:38:02,280 --> 00:38:04,800
going to download and delete these files

1018
00:38:04,800 --> 00:38:07,260
and then push those changes up right and

1019
00:38:07,260 --> 00:38:08,579
the victim is going to execute those

1020
00:38:08,579 --> 00:38:11,579
commands again upload the results from

1021
00:38:11,579 --> 00:38:13,140
those tasks then the attacker is going

1022
00:38:13,140 --> 00:38:15,119
to pull those down and delete them and

1023
00:38:15,119 --> 00:38:16,920
then they're going to repeat all these

1024
00:38:16,920 --> 00:38:19,079
steps for every command that that

1025
00:38:19,079 --> 00:38:20,579
happens right so that's how that

1026
00:38:20,579 --> 00:38:23,579
communication is happening via uh via

1027
00:38:23,579 --> 00:38:26,000
GitHub

1028
00:38:27,720 --> 00:38:29,460
so let's summarize what we just talked

1029
00:38:29,460 --> 00:38:32,220
about we saw that GitHub is a code

1030
00:38:32,220 --> 00:38:34,140
development app a source code repository

1031
00:38:34,140 --> 00:38:37,680
app that to bees by adding commits that

1032
00:38:37,680 --> 00:38:39,480
contain these encrypted and encoded

1033
00:38:39,480 --> 00:38:41,880
files if you wanted to simulate the

1034
00:38:41,880 --> 00:38:44,040
threat actor using this technique you

1035
00:38:44,040 --> 00:38:46,200
could do that using tools like C3 and

1036
00:38:46,200 --> 00:38:47,220
Covenant

1037
00:38:47,220 --> 00:38:49,020
and depending on the sophistication

1038
00:38:49,020 --> 00:38:51,900
level here as well you might use these

1039
00:38:51,900 --> 00:38:53,579
uh tools differently so if you want to

1040
00:38:53,579 --> 00:38:56,700
model a low sophisticated ER attack with

1041
00:38:56,700 --> 00:38:58,440
low sophistication or unsophisticated

1042
00:38:58,440 --> 00:38:59,579
they're actually you just use the

1043
00:38:59,579 --> 00:39:01,440
default configurations using a tool like

1044
00:39:01,440 --> 00:39:04,320
Empire C3 and see uh See if your

1045
00:39:04,320 --> 00:39:06,540
controls can pick that up if you want to

1046
00:39:06,540 --> 00:39:08,880
Model A moderately sophisticated threat

1047
00:39:08,880 --> 00:39:10,140
actor you can customize those

1048
00:39:10,140 --> 00:39:12,660
configurations a little bit and if you

1049
00:39:12,660 --> 00:39:14,579
want to model a highly sophisticated

1050
00:39:14,579 --> 00:39:16,500
threat actor a targeted attack in the

1051
00:39:16,500 --> 00:39:18,119
real world then you might go ahead and

1052
00:39:18,119 --> 00:39:20,880
really tune the existing traffic to

1053
00:39:20,880 --> 00:39:23,460
match what's in the network so maybe

1054
00:39:23,460 --> 00:39:26,579
tunnel your commands through

1055
00:39:26,579 --> 00:39:28,920
the development department instead of

1056
00:39:28,920 --> 00:39:31,619
the you know HR department that way the

1057
00:39:31,619 --> 00:39:34,859
likelihood of them using uh GitHub is

1058
00:39:34,859 --> 00:39:38,760
more right there's a higher likelihood

1059
00:39:38,760 --> 00:39:41,040
so while we didn't mention these other

1060
00:39:41,040 --> 00:39:42,900
tools because we don't see them as much

1061
00:39:42,900 --> 00:39:45,960
they're also very important to know

1062
00:39:45,960 --> 00:39:47,720
um you know they know they exist right

1063
00:39:47,720 --> 00:39:51,240
is your outlook C2 abuses Outlook email

1064
00:39:51,240 --> 00:39:53,400
address for C2

1065
00:39:53,400 --> 00:39:55,560
um gc2 abuses Google sheet and Google

1066
00:39:55,560 --> 00:39:57,960
Drives to execute command on its victims

1067
00:39:57,960 --> 00:39:59,460
so the commands are actually written as

1068
00:39:59,460 --> 00:40:02,040
in the cells in the Google Sheets and

1069
00:40:02,040 --> 00:40:04,320
then call it a C2 abuses Outlook won't

1070
00:40:04,320 --> 00:40:06,660
Nook on one note in Microsoft teams for

1071
00:40:06,660 --> 00:40:09,119
C2 so these other tools maybe the the

1072
00:40:09,119 --> 00:40:11,579
corporate corporate system you're

1073
00:40:11,579 --> 00:40:14,400
targeting uses these other tools uh uses

1074
00:40:14,400 --> 00:40:15,960
these other Cloud applications that you

1075
00:40:15,960 --> 00:40:17,820
want to kind of blend in with maybe you

1076
00:40:17,820 --> 00:40:21,260
want to use these other tools as well

1077
00:40:21,660 --> 00:40:24,780
so let's talk about let's take a step

1078
00:40:24,780 --> 00:40:26,220
back and kind of talk about what we

1079
00:40:26,220 --> 00:40:28,680
covered We Begin by talking about what

1080
00:40:28,680 --> 00:40:32,700
cloud C2 was we defined Cloud C2 and we

1081
00:40:32,700 --> 00:40:34,980
kind of saw some standardizations that

1082
00:40:34,980 --> 00:40:38,339
exist in in the industry today then we

1083
00:40:38,339 --> 00:40:40,140
went ahead and looked at some trends

1084
00:40:40,140 --> 00:40:42,480
that exist in the wild right what are

1085
00:40:42,480 --> 00:40:44,339
attackers doing is this even really

1086
00:40:44,339 --> 00:40:45,660
happening you try to answer those

1087
00:40:45,660 --> 00:40:48,420
questions right then we finished talking

1088
00:40:48,420 --> 00:40:50,820
about how we can set this up in our

1089
00:40:50,820 --> 00:40:52,740
internal Network so that we can simulate

1090
00:40:52,740 --> 00:40:55,020
the threat actor using this tool so that

1091
00:40:55,020 --> 00:40:57,119
we can check our controls and test our

1092
00:40:57,119 --> 00:40:59,220
controls and see where the gaps are say

1093
00:40:59,220 --> 00:41:01,800
we did identify a gap what defenses do

1094
00:41:01,800 --> 00:41:03,480
we need to put in place right first of

1095
00:41:03,480 --> 00:41:05,760
all why don't the existing security

1096
00:41:05,760 --> 00:41:07,980
controls pick this up right it's hard to

1097
00:41:07,980 --> 00:41:09,540
detect

1098
00:41:09,540 --> 00:41:13,320
here we have a screen cap of Fiddler

1099
00:41:13,320 --> 00:41:15,420
running so Fiddler is that web proxy

1100
00:41:15,420 --> 00:41:17,520
application that runs on the victim that

1101
00:41:17,520 --> 00:41:18,900
we saw earlier

1102
00:41:18,900 --> 00:41:20,339
in

1103
00:41:20,339 --> 00:41:22,500
while while this was running on the

1104
00:41:22,500 --> 00:41:24,420
victim machine we also had the malicious

1105
00:41:24,420 --> 00:41:27,720
relay that was connecting to C3 and we

1106
00:41:27,720 --> 00:41:30,240
also had the GitHub desktop application

1107
00:41:30,240 --> 00:41:32,940
running right and we just looked at the

1108
00:41:32,940 --> 00:41:35,460
you know the endpoints these URLs that

1109
00:41:35,460 --> 00:41:38,339
these applications were reaching out to

1110
00:41:38,339 --> 00:41:41,640
and here you can see the the two

1111
00:41:41,640 --> 00:41:44,520
processes and in the endpoints right so

1112
00:41:44,520 --> 00:41:47,820
firstly both the malicious and benign

1113
00:41:47,820 --> 00:41:49,500
traffic right the benign and Cloud C2

1114
00:41:49,500 --> 00:41:51,900
traffic is going to the same domain

1115
00:41:51,900 --> 00:41:54,359
api.github.com

1116
00:41:54,359 --> 00:41:56,820
this domain is a valid cloud provider

1117
00:41:56,820 --> 00:41:59,040
domain it's github's domain and the

1118
00:41:59,040 --> 00:42:00,599
traffic to this domain is encrypted

1119
00:42:00,599 --> 00:42:02,040
using the cloud provider certificate

1120
00:42:02,040 --> 00:42:03,420
that could that could would otherwise

1121
00:42:03,420 --> 00:42:06,359
right this is why this is challenging

1122
00:42:06,359 --> 00:42:08,460
because these server these IP addresses

1123
00:42:08,460 --> 00:42:10,500
associated with API github.com the

1124
00:42:10,500 --> 00:42:13,260
hostname api.github.com you can't put

1125
00:42:13,260 --> 00:42:15,240
that into a signature feed into threat

1126
00:42:15,240 --> 00:42:17,520
intelligence feed because there's just

1127
00:42:17,520 --> 00:42:19,440
so much benign traffic going there if

1128
00:42:19,440 --> 00:42:21,720
you can't block this out right so you

1129
00:42:21,720 --> 00:42:24,060
need other methods to detect this

1130
00:42:24,060 --> 00:42:26,280
particular technique

1131
00:42:26,280 --> 00:42:28,380
so what can what can we do to detect

1132
00:42:28,380 --> 00:42:30,480
this firstly

1133
00:42:30,480 --> 00:42:33,599
um identify and block known malware I

1134
00:42:33,599 --> 00:42:35,339
know this is silly to say but don't even

1135
00:42:35,339 --> 00:42:38,099
let it get to the Cloud C2 or the C2

1136
00:42:38,099 --> 00:42:39,420
stage

1137
00:42:39,420 --> 00:42:41,700
um if you can because once it gets to

1138
00:42:41,700 --> 00:42:45,420
the C2 stage it's going to be uh pretty

1139
00:42:45,420 --> 00:42:47,099
challenging to detect so if you can

1140
00:42:47,099 --> 00:42:48,900
block this earlier on

1141
00:42:48,900 --> 00:42:52,260
um definitely try and do that secondly

1142
00:42:52,260 --> 00:42:57,260
um oh well this shut down on me

1143
00:43:04,920 --> 00:43:07,140
sorry about that you have to kind of

1144
00:43:07,140 --> 00:43:08,520
move around

1145
00:43:08,520 --> 00:43:09,900
um

1146
00:43:09,900 --> 00:43:13,440
okay secondly if you want to um

1147
00:43:13,440 --> 00:43:16,079
if you don't see any Court any use for

1148
00:43:16,079 --> 00:43:19,020
uh certain Cloud application in

1149
00:43:19,020 --> 00:43:20,760
in your corporate environment you know

1150
00:43:20,760 --> 00:43:22,619
disallow communication to that

1151
00:43:22,619 --> 00:43:24,900
non-corporate cloud application maybe if

1152
00:43:24,900 --> 00:43:26,579
you can't disallow all communication

1153
00:43:26,579 --> 00:43:29,220
maybe what you can do is

1154
00:43:29,220 --> 00:43:31,260
um

1155
00:43:31,260 --> 00:43:33,780
uh monitor usages of that cloud

1156
00:43:33,780 --> 00:43:35,579
application so you can investigate what

1157
00:43:35,579 --> 00:43:38,099
happens right thirdly

1158
00:43:38,099 --> 00:43:40,140
um adequate logging and monitoring it's

1159
00:43:40,140 --> 00:43:43,140
so important to make sure you see all

1160
00:43:43,140 --> 00:43:45,180
the endpoints your processes are the

1161
00:43:45,180 --> 00:43:46,920
processes on your networks are reaching

1162
00:43:46,920 --> 00:43:49,079
out to and this is an oauth top 10 issue

1163
00:43:49,079 --> 00:43:51,359
right make sure you have

1164
00:43:51,359 --> 00:43:52,560
um you know adequate logging and

1165
00:43:52,560 --> 00:43:54,960
monitoring in place

1166
00:43:54,960 --> 00:43:57,780
fourthly uh regular beaconing Behavior

1167
00:43:57,780 --> 00:43:59,819
maybe this isn't

1168
00:43:59,819 --> 00:44:00,560
um

1169
00:44:00,560 --> 00:44:03,599
necessarily malicious but if you see a

1170
00:44:03,599 --> 00:44:05,700
certain process beaconing back out at a

1171
00:44:05,700 --> 00:44:07,380
certain interval that should be

1172
00:44:07,380 --> 00:44:09,359
something you um you'd want to

1173
00:44:09,359 --> 00:44:12,500
investigate a little bit more

1174
00:44:14,819 --> 00:44:17,040
um unsigned application making network

1175
00:44:17,040 --> 00:44:20,400
connection should be a big giveaway so

1176
00:44:20,400 --> 00:44:21,839
if you see that happening in your

1177
00:44:21,839 --> 00:44:24,119
corporate environment make sure that you

1178
00:44:24,119 --> 00:44:26,220
kind of block that it should not be a

1179
00:44:26,220 --> 00:44:27,839
common use case right make sure like you

1180
00:44:27,839 --> 00:44:30,420
know when that happens user agents that

1181
00:44:30,420 --> 00:44:32,520
are associated with known malware so the

1182
00:44:32,520 --> 00:44:34,980
Empire user agents kind of it's a little

1183
00:44:34,980 --> 00:44:37,680
bit static and it doesn't there aren't a

1184
00:44:37,680 --> 00:44:40,740
lot of benign users that use that uh too

1185
00:44:40,740 --> 00:44:42,480
often so if you see that make sure you

1186
00:44:42,480 --> 00:44:44,540
kind of block that out

1187
00:44:44,540 --> 00:44:48,060
the last two are actually um we got from

1188
00:44:48,060 --> 00:44:49,740
f-secure's blogs and they're really

1189
00:44:49,740 --> 00:44:51,480
they're really good detection so we

1190
00:44:51,480 --> 00:44:54,359
wanted to note them here as well

1191
00:44:54,359 --> 00:44:58,380
um f-secure monitored all of um the

1192
00:44:58,380 --> 00:45:00,420
processes and the network connections

1193
00:45:00,420 --> 00:45:04,380
from these processes across time and the

1194
00:45:04,380 --> 00:45:06,359
across time the model the packets that

1195
00:45:06,359 --> 00:45:07,500
were transferred outside of the

1196
00:45:07,500 --> 00:45:09,119
corporate Network and you see when an

1197
00:45:09,119 --> 00:45:12,540
endpoint is compromised that traffic at

1198
00:45:12,540 --> 00:45:13,800
that instance of time is going to kind

1199
00:45:13,800 --> 00:45:15,839
of stand doubt so make sure and this is

1200
00:45:15,839 --> 00:45:17,819
kind of at the bottom right right so the

1201
00:45:17,819 --> 00:45:19,319
screen cap at the bottom right you can

1202
00:45:19,319 --> 00:45:20,760
kind of see that this compromise

1203
00:45:20,760 --> 00:45:22,440
endpoint kind of stands out and you want

1204
00:45:22,440 --> 00:45:24,780
to use that to identify

1205
00:45:24,780 --> 00:45:26,400
um endpoints that might be potentially

1206
00:45:26,400 --> 00:45:28,140
compromised

1207
00:45:28,140 --> 00:45:33,420
lastly um the C2 stage is followed by

1208
00:45:33,420 --> 00:45:34,560
um

1209
00:45:34,560 --> 00:45:36,780
actions on objectives which is the last

1210
00:45:36,780 --> 00:45:40,319
stage in the Cyber kill chain this stage

1211
00:45:40,319 --> 00:45:41,460
is

1212
00:45:41,460 --> 00:45:43,079
um

1213
00:45:43,079 --> 00:45:45,420
if you're maybe not able to identify the

1214
00:45:45,420 --> 00:45:47,460
C2 stage because the attacker is low and

1215
00:45:47,460 --> 00:45:49,380
slow and you really it's beginning out

1216
00:45:49,380 --> 00:45:52,440
once a week and you can't identify it

1217
00:45:52,440 --> 00:45:54,060
usually

1218
00:45:54,060 --> 00:45:56,700
um action on objective stage is going to

1219
00:45:56,700 --> 00:45:59,520
require them to it's typically data

1220
00:45:59,520 --> 00:46:01,020
exfiltration right and they're going to

1221
00:46:01,020 --> 00:46:03,060
do it over the C2 channel so if you see

1222
00:46:03,060 --> 00:46:04,740
large amounts of data moving off your

1223
00:46:04,740 --> 00:46:06,920
corporate Network to an application that

1224
00:46:06,920 --> 00:46:09,839
you don't see any corporate use for that

1225
00:46:09,839 --> 00:46:12,240
should warrant you know a lot of alarms

1226
00:46:12,240 --> 00:46:13,859
going off and you should kind of dig

1227
00:46:13,859 --> 00:46:17,119
into that a little bit more

1228
00:46:17,880 --> 00:46:20,940
so let's go all the way back and kind of

1229
00:46:20,940 --> 00:46:23,460
talk about those four key points we

1230
00:46:23,460 --> 00:46:24,780
started with

1231
00:46:24,780 --> 00:46:27,839
what is cloud C2 we defined Cloud C2 as

1232
00:46:27,839 --> 00:46:29,460
command and control via Cloud

1233
00:46:29,460 --> 00:46:33,359
application we saw that um

1234
00:46:33,359 --> 00:46:36,599
we saw a few uh definitions and a few

1235
00:46:36,599 --> 00:46:38,220
categorizations that exist in the

1236
00:46:38,220 --> 00:46:40,560
industry today and then we went over and

1237
00:46:40,560 --> 00:46:42,119
talked about which Cloud applications

1238
00:46:42,119 --> 00:46:43,980
are abused with C2 and we saw a vast

1239
00:46:43,980 --> 00:46:46,079
majority of them can be abused and we

1240
00:46:46,079 --> 00:46:48,180
saw some Trends and some insights and we

1241
00:46:48,180 --> 00:46:50,040
even categorized these apps and saw some

1242
00:46:50,040 --> 00:46:51,720
features that are abused in each

1243
00:46:51,720 --> 00:46:52,920
category

1244
00:46:52,920 --> 00:46:55,619
then we went over how you can simulate

1245
00:46:55,619 --> 00:46:57,119
this in your network and we went over

1246
00:46:57,119 --> 00:46:59,280
two example applications Dropbox and

1247
00:46:59,280 --> 00:47:01,560
GitHub and we saw we can do this with

1248
00:47:01,560 --> 00:47:03,720
four steps when using a tool tools like

1249
00:47:03,720 --> 00:47:07,079
Empire C3 and Covenant and then lastly

1250
00:47:07,079 --> 00:47:09,420
we talked about what defenses can be put

1251
00:47:09,420 --> 00:47:10,859
in place and we saw there's numerous

1252
00:47:10,859 --> 00:47:12,660
controls that we can put in place to

1253
00:47:12,660 --> 00:47:15,180
identify and detect quality to both at

1254
00:47:15,180 --> 00:47:17,040
the endpoint at the network level right

1255
00:47:17,040 --> 00:47:19,680
and we can use these uh defenses to kind

1256
00:47:19,680 --> 00:47:22,380
of help our security posture from a

1257
00:47:22,380 --> 00:47:25,339
defender's standpoint

1258
00:47:25,740 --> 00:47:28,020
awesome so that brings us to the end of

1259
00:47:28,020 --> 00:47:29,400
the talk and I have a few more minutes

1260
00:47:29,400 --> 00:47:31,859
to go but uh and I'll be happy to start

1261
00:47:31,859 --> 00:47:34,140
taking questions but in case uh kind of

1262
00:47:34,140 --> 00:47:36,900
ran out my Twitter handle is at dog Lulu

1263
00:47:36,900 --> 00:47:38,579
and my LinkedIn is

1264
00:47:38,579 --> 00:47:40,740
um D Mula geta we have a bunch of

1265
00:47:40,740 --> 00:47:42,720
research on cloud application abuses on

1266
00:47:42,720 --> 00:47:44,099
our blog so feel free to kind of follow

1267
00:47:44,099 --> 00:47:45,599
us there or

1268
00:47:45,599 --> 00:47:46,980
um if you just really want to talk

1269
00:47:46,980 --> 00:47:49,020
anything cyber security I'm always open

1270
00:47:49,020 --> 00:47:51,900
to having uh you know these discussions

1271
00:47:51,900 --> 00:47:53,579
please reach out to me I'll be happy to

1272
00:47:53,579 --> 00:47:55,319
kind of answer any questions you have

1273
00:47:55,319 --> 00:47:57,720
borrowing that you know thank you very

1274
00:47:57,720 --> 00:47:59,880
much for attending this talk and if you

1275
00:47:59,880 --> 00:48:01,440
have any questions I'll be happy to

1276
00:48:01,440 --> 00:48:03,960
start taking them now thank you thank

1277
00:48:03,960 --> 00:48:05,760
you very much like Mario it was great

1278
00:48:05,760 --> 00:48:07,920
presentation so much interesting content

1279
00:48:07,920 --> 00:48:10,800
and thank you very much for sharing it

1280
00:48:10,800 --> 00:48:13,800
uh so I wanted to ask the first question

1281
00:48:13,800 --> 00:48:16,859
that I have here are there any patterns

1282
00:48:16,859 --> 00:48:18,720
you have noticed with Cloud applications

1283
00:48:18,720 --> 00:48:21,900
features and abuse frequency

1284
00:48:21,900 --> 00:48:23,880
yeah that's a really good question yeah

1285
00:48:23,880 --> 00:48:25,079
so

1286
00:48:25,079 --> 00:48:27,599
um this is kind of going back to that um

1287
00:48:27,599 --> 00:48:29,940
slide where we saw the

1288
00:48:29,940 --> 00:48:33,440
maybe I can go back really quick

1289
00:48:38,700 --> 00:48:40,560
yeah so here

1290
00:48:40,560 --> 00:48:42,480
um we have seen some patterns right

1291
00:48:42,480 --> 00:48:44,760
these these uh attackers are kind of

1292
00:48:44,760 --> 00:48:47,880
preferring uh certain categories of

1293
00:48:47,880 --> 00:48:49,500
cloud applications a little bit more and

1294
00:48:49,500 --> 00:48:51,300
they're attacking them at a higher

1295
00:48:51,300 --> 00:48:53,160
frequency and these

1296
00:48:53,160 --> 00:48:54,599
um the reason for these cloud storage

1297
00:48:54,599 --> 00:48:57,420
applications we kind of went over a few

1298
00:48:57,420 --> 00:48:58,800
reasons that might be the case you know

1299
00:48:58,800 --> 00:49:00,780
they're easy to get get set up and get

1300
00:49:00,780 --> 00:49:03,000
going a lot of people use them so

1301
00:49:03,000 --> 00:49:05,339
they're very easy to kind of blend

1302
00:49:05,339 --> 00:49:08,420
um into and then lastly they're they

1303
00:49:08,420 --> 00:49:11,400
integrate really so the integratability

1304
00:49:11,400 --> 00:49:13,500
factor is important to integrate really

1305
00:49:13,500 --> 00:49:16,140
well into the existing flow they have so

1306
00:49:16,140 --> 00:49:20,400
attackers are kind of more enticed to

1307
00:49:20,400 --> 00:49:22,740
use these category of cop of

1308
00:49:22,740 --> 00:49:24,300
applications more in the in their

1309
00:49:24,300 --> 00:49:27,839
attacker flow but we um we will see in

1310
00:49:27,839 --> 00:49:29,819
the near future and as time progresses

1311
00:49:29,819 --> 00:49:31,560
that a lot of these other other

1312
00:49:31,560 --> 00:49:33,119
categories are also going to start

1313
00:49:33,119 --> 00:49:36,140
seeing some traffic as well

1314
00:49:36,140 --> 00:49:39,839
thank you very much great thank you and

1315
00:49:39,839 --> 00:49:41,460
the second question this is not

1316
00:49:41,460 --> 00:49:43,680
something that cloud providers should

1317
00:49:43,680 --> 00:49:47,520
deal with is it why uh is this something

1318
00:49:47,520 --> 00:49:51,960
I as a Defender have to worry about

1319
00:49:51,960 --> 00:49:53,819
yeah that's a that's a really good

1320
00:49:53,819 --> 00:49:56,220
question right um

1321
00:49:56,220 --> 00:49:59,359
if let me answer that in two parts so

1322
00:49:59,359 --> 00:50:02,160
firstly the cloud providers are doing

1323
00:50:02,160 --> 00:50:04,440
you know what they can do to detect this

1324
00:50:04,440 --> 00:50:06,420
there's a lot of instances where they

1325
00:50:06,420 --> 00:50:09,000
have abuse portals and everything where

1326
00:50:09,000 --> 00:50:11,940
if you identify abuse of the particular

1327
00:50:11,940 --> 00:50:14,520
Cloud app you can kind of reach out and

1328
00:50:14,520 --> 00:50:16,380
let the provider know they'll bring it

1329
00:50:16,380 --> 00:50:18,359
down they have some

1330
00:50:18,359 --> 00:50:20,280
processes and police automation please

1331
00:50:20,280 --> 00:50:22,079
kind of identify abusing of their

1332
00:50:22,079 --> 00:50:23,579
platform

1333
00:50:23,579 --> 00:50:25,619
um but you have to imagine what it looks

1334
00:50:25,619 --> 00:50:27,480
like from their angle right if you go

1335
00:50:27,480 --> 00:50:30,359
back to the Dropbox example the attacker

1336
00:50:30,359 --> 00:50:33,420
is really uploading a file downloading a

1337
00:50:33,420 --> 00:50:35,460
file deleting a file from the Dropbox

1338
00:50:35,460 --> 00:50:37,020
point of view there's really not much

1339
00:50:37,020 --> 00:50:39,119
you can do there that that's that's

1340
00:50:39,119 --> 00:50:41,099
exactly what you want the application to

1341
00:50:41,099 --> 00:50:43,680
be used for it's only when uh you know

1342
00:50:43,680 --> 00:50:45,660
someone says this is using this

1343
00:50:45,660 --> 00:50:47,280
application is being used to move data

1344
00:50:47,280 --> 00:50:49,559
off my system that that becomes a

1345
00:50:49,559 --> 00:50:51,720
problem right so there's a visibility uh

1346
00:50:51,720 --> 00:50:53,640
problem there that it's it's difficult

1347
00:50:53,640 --> 00:50:55,319
for the cloud provider to see especially

1348
00:50:55,319 --> 00:50:58,440
in targeted attacks right so this is why

1349
00:50:58,440 --> 00:51:00,839
as a Defender we kind of went over that

1350
00:51:00,839 --> 00:51:02,520
list of defenses that might help you

1351
00:51:02,520 --> 00:51:06,119
identify the sort of traffic in your um

1352
00:51:06,119 --> 00:51:08,280
in your environment

1353
00:51:08,280 --> 00:51:09,599
yep

1354
00:51:09,599 --> 00:51:12,180
thank you very much for your answers uh

1355
00:51:12,180 --> 00:51:14,099
is anything else you would like to share

1356
00:51:14,099 --> 00:51:16,319
is there any communities that people may

1357
00:51:16,319 --> 00:51:21,300
uh join to get more information

1358
00:51:21,300 --> 00:51:23,339
yeah absolutely so

1359
00:51:23,339 --> 00:51:26,900
accidentally touched on the link

1360
00:51:29,460 --> 00:51:34,559
so I uh I have this slide here

1361
00:51:34,559 --> 00:51:37,440
so um these are my uh these are this is

1362
00:51:37,440 --> 00:51:39,000
my information that's my Twitter handle

1363
00:51:39,000 --> 00:51:40,380
my LinkedIn those are the two best

1364
00:51:40,380 --> 00:51:42,119
places kind of get additional

1365
00:51:42,119 --> 00:51:44,760
information on this so if you uh kind of

1366
00:51:44,760 --> 00:51:47,760
reach back reach out to me and get um

1367
00:51:47,760 --> 00:51:50,040
I don't think we're going to give these

1368
00:51:50,040 --> 00:51:51,960
slide decks out but if you reach out to

1369
00:51:51,960 --> 00:51:53,579
me I'll personally send these slide

1370
00:51:53,579 --> 00:51:54,900
decks over to you so that you can have

1371
00:51:54,900 --> 00:51:57,839
the links and the references Etc uh and

1372
00:51:57,839 --> 00:52:01,500
also if you go to the my research team

1373
00:52:01,500 --> 00:52:03,000
is the netscope threat lab research

1374
00:52:03,000 --> 00:52:04,740
teams we have a Blog where we talk about

1375
00:52:04,740 --> 00:52:07,020
all this stuff on a weekly basis so we

1376
00:52:07,020 --> 00:52:08,940
have a bunch of additional not just

1377
00:52:08,940 --> 00:52:11,220
YouTube or additional Cloud application

1378
00:52:11,220 --> 00:52:13,980
abuse as well so if you want the latest

1379
00:52:13,980 --> 00:52:16,260
and greatest in that space that's uh you

1380
00:52:16,260 --> 00:52:17,579
know that's the best place to reach out

1381
00:52:17,579 --> 00:52:19,859
to it's a great question so Lana thank

1382
00:52:19,859 --> 00:52:22,040
you

1383
00:52:22,160 --> 00:52:24,960
it was so good it was a very interesting

1384
00:52:24,960 --> 00:52:27,660
presentation I am sure that people will

1385
00:52:27,660 --> 00:52:29,160
reach out to you and will ask more

1386
00:52:29,160 --> 00:52:30,440
questions

1387
00:52:30,440 --> 00:52:34,460
thank you thank you very much and

1388
00:52:34,460 --> 00:52:37,740
thank you for being the active part and

1389
00:52:37,740 --> 00:52:40,200
speaker in this conference thank you

1390
00:52:40,200 --> 00:52:41,760
very much for having me

1391
00:52:41,760 --> 00:52:44,160
appreciate it I'll stop sharing now and

1392
00:52:44,160 --> 00:52:46,680
I'll um give that a throw back to you

1393
00:52:46,680 --> 00:52:49,098
thanks

