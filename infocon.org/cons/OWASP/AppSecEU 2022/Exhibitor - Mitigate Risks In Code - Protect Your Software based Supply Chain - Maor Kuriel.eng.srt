1
00:00:04,940 --> 00:00:08,240
hi Mel

2
00:00:09,240 --> 00:00:13,440
yes I'm here okay perfect

3
00:00:13,440 --> 00:00:15,900
um did you want to go ahead and test

4
00:00:15,900 --> 00:00:18,000
your slides make sure that you can share

5
00:00:18,000 --> 00:00:20,539
your screen

6
00:00:24,439 --> 00:00:28,039
yeah perfect

7
00:00:28,320 --> 00:00:30,980
okay

8
00:00:30,980 --> 00:00:34,500
can you see me I can see you

9
00:00:34,500 --> 00:00:37,620
perfect now the slide is

10
00:00:37,620 --> 00:00:39,540
shifting slides great

11
00:00:39,540 --> 00:00:42,600
okay so we're gonna kick off at top of

12
00:00:42,600 --> 00:00:44,460
the hour

13
00:00:44,460 --> 00:00:46,739
um I will put a

14
00:00:46,739 --> 00:00:50,579
you know go time note in the chat

15
00:00:50,579 --> 00:00:52,200
um and we will be good to go but did you

16
00:00:52,200 --> 00:00:54,059
have any questions

17
00:00:54,059 --> 00:00:58,680
and no just one thing to comment uh the

18
00:00:58,680 --> 00:01:01,800
company's name went for a Rebrand lucky

19
00:01:01,800 --> 00:01:03,480
two weeks ago it's not white sauce

20
00:01:03,480 --> 00:01:08,000
anymore it's Mend my name yeah

21
00:01:10,100 --> 00:01:12,840
take care of

22
00:01:12,840 --> 00:01:17,520
great so beside that and talk and

23
00:01:17,520 --> 00:01:20,040
I think it's a it's an interesting topic

24
00:01:20,040 --> 00:01:22,220
hopefully we'll get a lot of questions

25
00:01:22,220 --> 00:01:26,060
let's see how it goes

26
00:01:26,820 --> 00:01:29,400
on the previous uh meeting the the

27
00:01:29,400 --> 00:01:31,560
presenter was a little I mean I don't

28
00:01:31,560 --> 00:01:35,100
know if it was little too fast but um we

29
00:01:35,100 --> 00:01:38,460
ended up uh 10 minutes before the end I

30
00:01:38,460 --> 00:01:41,040
mean in 35 minutes he finished his

31
00:01:41,040 --> 00:01:44,220
presentation and we didn't had enough I

32
00:01:44,220 --> 00:01:46,920
had to put to take some question from my

33
00:01:46,920 --> 00:01:50,700
on the pool of question so um

34
00:01:50,700 --> 00:01:54,240
yeah my um computer froze so I couldn't

35
00:01:54,240 --> 00:01:57,119
pull up the list of questions

36
00:01:57,119 --> 00:02:01,140
um if there was any provided so yeah um

37
00:02:01,140 --> 00:02:03,540
there were two provided and I added like

38
00:02:03,540 --> 00:02:06,600
three or four from from my slides

39
00:02:06,600 --> 00:02:11,539
we were able to um to add some content

40
00:02:15,350 --> 00:02:18,530
[Music]

41
00:02:30,060 --> 00:02:33,060
foreign

42
00:02:38,060 --> 00:02:41,879
community and I will be moderating this

43
00:02:41,879 --> 00:02:45,120
session during the next 45 minutes you

44
00:02:45,120 --> 00:02:47,760
will be listening to more curiel from

45
00:02:47,760 --> 00:02:50,940
mind IO present uh present in chip

46
00:02:50,940 --> 00:02:52,800
product with confidence securing your

47
00:02:52,800 --> 00:02:54,980
software Supply Channel

48
00:02:54,980 --> 00:02:57,480
lays submit any questions you have

49
00:02:57,480 --> 00:03:00,300
during the session in the Q a tab just

50
00:03:00,300 --> 00:03:02,459
to the right of this video in the Uber

51
00:03:02,459 --> 00:03:06,180
platform I will be asking more your

52
00:03:06,180 --> 00:03:08,879
question in the last 10 or 15 minutes of

53
00:03:08,879 --> 00:03:10,860
this session

54
00:03:10,860 --> 00:03:12,840
please note that the chat function in

55
00:03:12,840 --> 00:03:15,300
Zoom is disabled for attendees but you

56
00:03:15,300 --> 00:03:17,099
can leave comments and chat using the

57
00:03:17,099 --> 00:03:19,459
chat tab in Hoover

58
00:03:19,459 --> 00:03:22,260
ql is product director and mindao

59
00:03:22,260 --> 00:03:24,780
formerly known as white Source leading

60
00:03:24,780 --> 00:03:27,420
the area of cloud native solution he has

61
00:03:27,420 --> 00:03:29,099
over 10 years of information security

62
00:03:29,099 --> 00:03:32,040
experience as a product director at

63
00:03:32,040 --> 00:03:35,099
midao he supports organization in the

64
00:03:35,099 --> 00:03:38,280
digital transformation and improves the

65
00:03:38,280 --> 00:03:40,500
Securities through devsecups

66
00:03:40,500 --> 00:03:43,440
he's passionate about delivering easy to

67
00:03:43,440 --> 00:03:45,540
use cyber security products

68
00:03:45,540 --> 00:03:47,220
and defending the feature of cloud

69
00:03:47,220 --> 00:03:50,640
native security more the floor is now

70
00:03:50,640 --> 00:03:52,080
used

71
00:03:52,080 --> 00:03:54,780
thank you very much guys very happy to

72
00:03:54,780 --> 00:03:56,760
be here

73
00:03:56,760 --> 00:03:59,700
um first time that I'm presenting in OAS

74
00:03:59,700 --> 00:04:00,599
so

75
00:04:00,599 --> 00:04:02,879
it's a very exciting presentation for

76
00:04:02,879 --> 00:04:05,400
Marianne and I'm also going to talk

77
00:04:05,400 --> 00:04:07,280
about a topic that

78
00:04:07,280 --> 00:04:10,500
I'm very very passionate about supplies

79
00:04:10,500 --> 00:04:13,620
and security I've been past year that

80
00:04:13,620 --> 00:04:15,540
I've been working at men and before that

81
00:04:15,540 --> 00:04:18,600
I was working for aqua security and the

82
00:04:18,600 --> 00:04:21,120
entire Cloud native ecosystem

83
00:04:21,120 --> 00:04:24,360
there is a lot of attack breaches there

84
00:04:24,360 --> 00:04:25,979
are a lot of attack vectors out there

85
00:04:25,979 --> 00:04:28,020
but once again that gathers everything

86
00:04:28,020 --> 00:04:31,560
into a single problem area is supply

87
00:04:31,560 --> 00:04:33,240
chain security you can tackle the

88
00:04:33,240 --> 00:04:35,580
container or serverless and

89
00:04:35,580 --> 00:04:37,259
infrastructures go and do whatever you

90
00:04:37,259 --> 00:04:39,780
want but supply chain security is

91
00:04:39,780 --> 00:04:43,620
something that because the shipment to

92
00:04:43,620 --> 00:04:46,560
the cloud and everything in the cloud is

93
00:04:46,560 --> 00:04:48,740
also defined

94
00:04:48,740 --> 00:04:53,280
it's a very let's say lucrative it's a

95
00:04:53,280 --> 00:04:54,900
very attractive attack Vector for

96
00:04:54,900 --> 00:04:57,419
adversaries and when they are attacking

97
00:04:57,419 --> 00:04:59,940
your supply chain they can potentially

98
00:04:59,940 --> 00:05:01,820
reconfigure and do whatever they want

99
00:05:01,820 --> 00:05:05,100
with your environment your application

100
00:05:05,100 --> 00:05:07,380
and we're going to cover a couple of

101
00:05:07,380 --> 00:05:10,979
examples during our slides I would love

102
00:05:10,979 --> 00:05:13,380
to get as much questions as possible and

103
00:05:13,380 --> 00:05:16,020
we won't have any enough time

104
00:05:16,020 --> 00:05:18,600
my email is over here my Twitter account

105
00:05:18,600 --> 00:05:21,600
feel free to reach out or through the

106
00:05:21,600 --> 00:05:25,320
slack of August

107
00:05:25,320 --> 00:05:29,220
um I love to talk about this this topic

108
00:05:29,220 --> 00:05:33,080
um for you who don't know

109
00:05:33,240 --> 00:05:36,840
that men is an abstract company so this

110
00:05:36,840 --> 00:05:38,220
is also something that we are doing on a

111
00:05:38,220 --> 00:05:41,280
day-to-day based basic so this is

112
00:05:41,280 --> 00:05:42,539
something that we're very passionate

113
00:05:42,539 --> 00:05:45,000
here at our company

114
00:05:45,000 --> 00:05:48,000
uh okay so let's start first of all

115
00:05:48,000 --> 00:05:51,000
right

116
00:05:51,419 --> 00:05:52,800
this is what we're going to go over

117
00:05:52,800 --> 00:05:55,039
today our journey today is going to be

118
00:05:55,039 --> 00:05:57,800
from the entire

119
00:05:57,800 --> 00:06:00,900
defining the problem area getting a

120
00:06:00,900 --> 00:06:03,720
clear understanding why it's it's a

121
00:06:03,720 --> 00:06:06,479
while we are talking about this

122
00:06:06,479 --> 00:06:08,940
from there we're gonna go and see how we

123
00:06:08,940 --> 00:06:11,460
can address it one thing I want you guys

124
00:06:11,460 --> 00:06:14,400
to take from this uh from this talk is

125
00:06:14,400 --> 00:06:17,460
not only the things that I'm saying I'm

126
00:06:17,460 --> 00:06:19,400
going to go over a couple of the

127
00:06:19,400 --> 00:06:22,560
reference architect from the cncf best

128
00:06:22,560 --> 00:06:25,259
practices from the field I'm going to go

129
00:06:25,259 --> 00:06:28,139
over about open source project that I'm

130
00:06:28,139 --> 00:06:30,840
involved in and that and that you can

131
00:06:30,840 --> 00:06:31,740
use

132
00:06:31,740 --> 00:06:34,979
actionable steps you I really hope that

133
00:06:34,979 --> 00:06:38,160
you can finish this talk and go and

134
00:06:38,160 --> 00:06:39,840
Google all the stuff that I'm talking

135
00:06:39,840 --> 00:06:43,740
about from cncf from uh the for the open

136
00:06:43,740 --> 00:06:45,000
source project that I want to talk about

137
00:06:45,000 --> 00:06:47,960
and start using it so you'll be able to

138
00:06:47,960 --> 00:06:51,860
get some value not only from my personal

139
00:06:51,860 --> 00:06:54,660
knowledge and my experience that you

140
00:06:54,660 --> 00:06:57,300
will actionable stuff

141
00:06:57,300 --> 00:06:59,400
so I'm going to talk about a couple of

142
00:06:59,400 --> 00:07:02,160
uh approaches that they are out there

143
00:07:02,160 --> 00:07:05,180
for example one of them shifting left

144
00:07:05,180 --> 00:07:08,940
and what is good about it and what I'm

145
00:07:08,940 --> 00:07:10,800
looking at and

146
00:07:10,800 --> 00:07:13,500
is what it's missing

147
00:07:13,500 --> 00:07:16,139
how as I said we're going to define the

148
00:07:16,139 --> 00:07:18,960
problem area and I'm going to cover uh

149
00:07:18,960 --> 00:07:21,240
at the end of it because this is a huge

150
00:07:21,240 --> 00:07:24,660
topic Supply security where I can give a

151
00:07:24,660 --> 00:07:28,380
a one-week course about this and all

152
00:07:28,380 --> 00:07:30,060
these topics but I'm going to focus only

153
00:07:30,060 --> 00:07:33,300
on the the initial step of the supply

154
00:07:33,300 --> 00:07:35,759
chain on the source code and the

155
00:07:35,759 --> 00:07:37,560
importance of up-to-date dependencies

156
00:07:37,560 --> 00:07:39,720
and how to introduce automation into

157
00:07:39,720 --> 00:07:42,060
that you know to save you time and keep

158
00:07:42,060 --> 00:07:44,940
you up to date and be as secure as

159
00:07:44,940 --> 00:07:46,259
possible at the beginning of the supply

160
00:07:46,259 --> 00:07:47,819
chain

161
00:07:47,819 --> 00:07:49,319
with that

162
00:07:49,319 --> 00:07:52,139
let's jump to the first slide we're

163
00:07:52,139 --> 00:07:54,120
moving to the cloud all the workloads

164
00:07:54,120 --> 00:07:56,220
all the applications uh the digital

165
00:07:56,220 --> 00:07:58,620
transformation is happening in the past

166
00:07:58,620 --> 00:08:01,139
years cloud cloud adoption leads to

167
00:08:01,139 --> 00:08:04,680
devops devops leads to Agile coding when

168
00:08:04,680 --> 00:08:07,800
you do a this leads to a lot more

169
00:08:07,800 --> 00:08:11,000
developers writing code microservices

170
00:08:11,000 --> 00:08:14,220
and a lot a lot more code has been

171
00:08:14,220 --> 00:08:16,500
shipped out the problem with that is the

172
00:08:16,500 --> 00:08:18,720
security teams are being kept in the

173
00:08:18,720 --> 00:08:22,560
same area they have a funding very hard

174
00:08:22,560 --> 00:08:25,500
to deal with all this information all

175
00:08:25,500 --> 00:08:27,479
this content they are being bombarded

176
00:08:27,479 --> 00:08:30,780
with all this stuff they need to adapt

177
00:08:30,780 --> 00:08:34,260
really fast to the PACE to the to the

178
00:08:34,260 --> 00:08:37,380
velocity to the technology

179
00:08:37,380 --> 00:08:40,740
okay and there's a lot of stuff over

180
00:08:40,740 --> 00:08:42,899
there they need to know how to attend

181
00:08:42,899 --> 00:08:45,000
okay they are shifting from simple

182
00:08:45,000 --> 00:08:46,320
waterfall

183
00:08:46,320 --> 00:08:51,959
as DLC to an agent one and with that the

184
00:08:51,959 --> 00:08:53,880
attackers are looking at okay the

185
00:08:53,880 --> 00:08:56,279
adversars are looking okay where how can

186
00:08:56,279 --> 00:08:59,640
can I compromise the organization for

187
00:08:59,640 --> 00:09:01,500
data mining malware or whatever they

188
00:09:01,500 --> 00:09:04,080
want personal gains what's the best way

189
00:09:04,080 --> 00:09:06,720
to hook into the system so in the past

190
00:09:06,720 --> 00:09:09,180
year resources and you can see the the

191
00:09:09,180 --> 00:09:11,519
statistic right in front of you we're

192
00:09:11,519 --> 00:09:13,140
seeing that supply chain attacks are on

193
00:09:13,140 --> 00:09:16,920
the rise the main reasons is that Supply

194
00:09:16,920 --> 00:09:18,779
chains when you compromise a simple

195
00:09:18,779 --> 00:09:23,640
Pipeline and you can affect a lot of

196
00:09:23,640 --> 00:09:25,500
resources out there

197
00:09:25,500 --> 00:09:29,580
and yeah is the increase is very popular

198
00:09:29,580 --> 00:09:31,860
with all the examples I think the most

199
00:09:31,860 --> 00:09:34,560
popular one that you can see that you

200
00:09:34,560 --> 00:09:36,120
listed here is the solar wind that

201
00:09:36,120 --> 00:09:38,399
everyone heard about it the Tweed also

202
00:09:38,399 --> 00:09:41,760
of course but all the other stuff are

203
00:09:41,760 --> 00:09:44,880
very popular if you're in the security

204
00:09:44,880 --> 00:09:47,040
are very known if you're in the security

205
00:09:47,040 --> 00:09:50,100
Echo ecosystem I'm not not sure what you

206
00:09:50,100 --> 00:09:52,200
guys are familiar with also but

207
00:09:52,200 --> 00:09:54,420
the boundaries of security when it looks

208
00:09:54,420 --> 00:09:56,220
when you're looking at say supply chain

209
00:09:56,220 --> 00:09:59,580
supply chain management is extends from

210
00:09:59,580 --> 00:10:02,519
the your source code into one time and

211
00:10:02,519 --> 00:10:04,560
it's very challenging to get a clear

212
00:10:04,560 --> 00:10:06,540
understanding on where do I want to

213
00:10:06,540 --> 00:10:09,060
start where is a good place that I need

214
00:10:09,060 --> 00:10:12,420
to focus my attention on the runtime but

215
00:10:12,420 --> 00:10:15,540
it might be too too late because my code

216
00:10:15,540 --> 00:10:17,760
is already being compromised and it's in

217
00:10:17,760 --> 00:10:20,279
my production in my supply chain but

218
00:10:20,279 --> 00:10:22,980
there is too many components running

219
00:10:22,980 --> 00:10:25,080
over there how I know that every

220
00:10:25,080 --> 00:10:28,320
component is using the same control and

221
00:10:28,320 --> 00:10:30,180
security control sorry on the

222
00:10:30,180 --> 00:10:32,519
dependencies on the pre-build on the

223
00:10:32,519 --> 00:10:34,980
GitHub but do I have the right content

224
00:10:34,980 --> 00:10:37,980
of the security exposure that the risk

225
00:10:37,980 --> 00:10:40,200
exposure so there's a lot of stuff

226
00:10:40,200 --> 00:10:42,720
there's a lot of questions and we don't

227
00:10:42,720 --> 00:10:43,560
know

228
00:10:43,560 --> 00:10:45,720
and with all these questions with all

229
00:10:45,720 --> 00:10:49,200
these challenges this is one of the very

230
00:10:49,200 --> 00:10:52,260
favorite line that I like to I quote the

231
00:10:52,260 --> 00:10:54,140
purpose of technology is to solve

232
00:10:54,140 --> 00:10:56,640
problems for businesses not to create

233
00:10:56,640 --> 00:11:00,779
one not to create not to be one okay and

234
00:11:00,779 --> 00:11:03,120
this is a a lot of people there are a

235
00:11:03,120 --> 00:11:06,060
lot of customers that I'm talking to

236
00:11:06,060 --> 00:11:08,220
in the past years I'm saying okay when

237
00:11:08,220 --> 00:11:09,899
I'm moving to the cloud there's too many

238
00:11:09,899 --> 00:11:11,760
challenges too many problems okay I need

239
00:11:11,760 --> 00:11:13,279
to put a stop

240
00:11:13,279 --> 00:11:16,200
let's take it down a notch I don't want

241
00:11:16,200 --> 00:11:19,620
to go as fast as my business wants but

242
00:11:19,620 --> 00:11:22,079
that's not that's also not a very good

243
00:11:22,079 --> 00:11:23,040
approach

244
00:11:23,040 --> 00:11:24,720
because

245
00:11:24,720 --> 00:11:28,980
the customers the market is is does want

246
00:11:28,980 --> 00:11:31,380
to everyone to go there so we need to

247
00:11:31,380 --> 00:11:33,540
find a solution so how you can solve the

248
00:11:33,540 --> 00:11:35,839
solution the best way to solve something

249
00:11:35,839 --> 00:11:38,820
and of course I've been sarcastic here

250
00:11:38,820 --> 00:11:40,680
is you know the problem

251
00:11:40,680 --> 00:11:43,200
okay I didn't I didn't see it nobody saw

252
00:11:43,200 --> 00:11:45,480
me addressing it like nobody can blame

253
00:11:45,480 --> 00:11:46,140
me

254
00:11:46,140 --> 00:11:48,839
that's not of course that's not a valid

255
00:11:48,839 --> 00:11:52,320
approach but the most traditional way to

256
00:11:52,320 --> 00:11:54,959
do this stuff is to address this is look

257
00:11:54,959 --> 00:11:56,880
at the new compliance framework with a

258
00:11:56,880 --> 00:11:59,519
new paperwork and Implement new rules

259
00:11:59,519 --> 00:12:02,519
and market and training for the users

260
00:12:02,519 --> 00:12:05,459
and and when the users are failing to

261
00:12:05,459 --> 00:12:07,980
align with the best practices blaming

262
00:12:07,980 --> 00:12:10,019
the users not working okay let's do a

263
00:12:10,019 --> 00:12:11,880
different compliance simulation

264
00:12:11,880 --> 00:12:13,860
and again and again and again it's a

265
00:12:13,860 --> 00:12:15,300
vicious circle

266
00:12:15,300 --> 00:12:17,120
and so

267
00:12:17,120 --> 00:12:19,980
when it comes to Cloud adoptions and

268
00:12:19,980 --> 00:12:22,980
agile people are really love to go and

269
00:12:22,980 --> 00:12:26,760
say okay let's shift left let's take all

270
00:12:26,760 --> 00:12:30,980
our security controls sorry second

271
00:12:32,519 --> 00:12:35,220
let's take all our security controls

272
00:12:35,220 --> 00:12:39,839
and run them as early as I can

273
00:12:39,839 --> 00:12:42,060
okay and this will solve my problems

274
00:12:42,060 --> 00:12:44,940
okay I don't need to do it and to

275
00:12:44,940 --> 00:12:47,459
implement all the different stuff but

276
00:12:47,459 --> 00:12:49,680
when we are looking at

277
00:12:49,680 --> 00:12:51,120
this

278
00:12:51,120 --> 00:12:54,000
okay shift left is not enough

279
00:12:54,000 --> 00:12:56,339
the main reason why why it's not enough

280
00:12:56,339 --> 00:12:59,339
is the the first thing is there is no

281
00:12:59,339 --> 00:13:01,620
clear process validation

282
00:13:01,620 --> 00:13:04,019
when you're looking at the entire sdrc

283
00:13:04,019 --> 00:13:06,060
your entire pipeline how can you get

284
00:13:06,060 --> 00:13:07,740
confidence and assurance that your

285
00:13:07,740 --> 00:13:11,940
security check your SAS ran on your code

286
00:13:11,940 --> 00:13:14,600
repo your SCA ran

287
00:13:14,600 --> 00:13:18,899
uh on your open source components your

288
00:13:18,899 --> 00:13:22,380
cicd artifact will scan accordingly and

289
00:13:22,380 --> 00:13:27,300
all of these scan ran on the same on the

290
00:13:27,300 --> 00:13:28,800
same Pipeline and all the security

291
00:13:28,800 --> 00:13:31,800
checks and their results align with your

292
00:13:31,800 --> 00:13:33,300
best practices and the security

293
00:13:33,300 --> 00:13:36,060
guidelines it's very challenging

294
00:13:36,060 --> 00:13:38,160
usually all the application security

295
00:13:38,160 --> 00:13:42,540
tools the other fast SCA is does name it

296
00:13:42,540 --> 00:13:44,100
are not communicating with one another

297
00:13:44,100 --> 00:13:46,200
there is no one

298
00:13:46,200 --> 00:13:49,800
one platform that is doing this by the

299
00:13:49,800 --> 00:13:50,639
way

300
00:13:50,639 --> 00:13:52,980
if you if you're looking for a single

301
00:13:52,980 --> 00:13:55,560
platform we can reach out to me but

302
00:13:55,560 --> 00:13:57,480
that's different though different topic

303
00:13:57,480 --> 00:14:00,079
there is no process Integrity no process

304
00:14:00,079 --> 00:14:03,480
you have no idea if

305
00:14:03,480 --> 00:14:05,880
the CI materials that you're using the

306
00:14:05,880 --> 00:14:07,800
products or tampered with for example

307
00:14:07,800 --> 00:14:10,019
what happened with the solar blast when

308
00:14:10,019 --> 00:14:11,579
they checked everything they scanned

309
00:14:11,579 --> 00:14:14,279
everything the the signature the

310
00:14:14,279 --> 00:14:17,040
signature of the component of the dll

311
00:14:17,040 --> 00:14:20,220
that was tampered with that communicated

312
00:14:20,220 --> 00:14:21,899
to the CNC server and download the

313
00:14:21,899 --> 00:14:24,660
demolitions payload was everything was

314
00:14:24,660 --> 00:14:26,399
as expected

315
00:14:26,399 --> 00:14:28,800
but

316
00:14:28,800 --> 00:14:31,079
we all know how it ended

317
00:14:31,079 --> 00:14:33,720
and the main reason is that no Integrity

318
00:14:33,720 --> 00:14:37,079
checks were gone nobody knew exactly

319
00:14:37,079 --> 00:14:40,019
that that was bringing today to the my

320
00:14:40,019 --> 00:14:42,660
first point no agent validation nobody

321
00:14:42,660 --> 00:14:45,600
had a

322
00:14:45,600 --> 00:14:49,560
clear insights on if the Personnel the

323
00:14:49,560 --> 00:14:52,519
application the components are doing

324
00:14:52,519 --> 00:14:55,199
what they need to do and not doing

325
00:14:55,199 --> 00:14:57,180
malicious activities or even not even

326
00:14:57,180 --> 00:14:58,860
not monistativity just doing stuff that

327
00:14:58,860 --> 00:15:00,959
they're not supposed to do

328
00:15:00,959 --> 00:15:02,880
there is no validation over there so

329
00:15:02,880 --> 00:15:04,620
that's the main challenge over there

330
00:15:04,620 --> 00:15:06,480
when we're looking at it and the quote

331
00:15:06,480 --> 00:15:07,980
on the bottom that it's pretty much

332
00:15:07,980 --> 00:15:10,560
saying that with all the advance of

333
00:15:10,560 --> 00:15:12,959
Technologies with all the advance that

334
00:15:12,959 --> 00:15:15,779
we have in cryptographic algorithm and

335
00:15:15,779 --> 00:15:18,240
security techniques we see the security

336
00:15:18,240 --> 00:15:21,420
practices are not are not keeping up the

337
00:15:21,420 --> 00:15:23,399
pace and this is not something that I

338
00:15:23,399 --> 00:15:25,380
said this is one of the chairmen of the

339
00:15:25,380 --> 00:15:29,639
cncf security tag total that's one of

340
00:15:29,639 --> 00:15:31,019
the biggest groups out there for cloud

341
00:15:31,019 --> 00:15:32,880
native security

342
00:15:32,880 --> 00:15:34,199
okay

343
00:15:34,199 --> 00:15:37,320
so you ask yourself with all these

344
00:15:37,320 --> 00:15:39,779
challenges with all these problems what

345
00:15:39,779 --> 00:15:43,199
can we do how can we challenge how can

346
00:15:43,199 --> 00:15:45,060
we fix how can you start others in all

347
00:15:45,060 --> 00:15:46,500
these problems

348
00:15:46,500 --> 00:15:51,779
so a very good start that I see is go to

349
00:15:51,779 --> 00:15:55,459
the supply chain security best practices

350
00:15:55,459 --> 00:15:59,820
white paper of the cncs it's there it

351
00:15:59,820 --> 00:16:01,680
helps you to fill the gap on the best

352
00:16:01,680 --> 00:16:03,839
practices for supply chain security it's

353
00:16:03,839 --> 00:16:06,360
evaluate a lot of tools that helps you

354
00:16:06,360 --> 00:16:07,459
define

355
00:16:07,459 --> 00:16:10,699
best practices for supply chain security

356
00:16:10,699 --> 00:16:13,800
it's evolves around for a main key

357
00:16:13,800 --> 00:16:17,399
principles trust automation Clarity and

358
00:16:17,399 --> 00:16:20,279
mutual authentication and I'll elaborate

359
00:16:20,279 --> 00:16:23,060
a little bit about each of them

360
00:16:23,060 --> 00:16:26,579
regarding trust it helps you to create

361
00:16:26,579 --> 00:16:28,560
some sort of guidelines and

362
00:16:28,560 --> 00:16:31,620
understanding how to build trust on

363
00:16:31,620 --> 00:16:34,139
every step of your supply chain

364
00:16:34,139 --> 00:16:37,760
supply chain sorry

365
00:16:39,360 --> 00:16:41,759
it's recommended to do that with a

366
00:16:41,759 --> 00:16:43,380
combination of cryptographic at station

367
00:16:43,380 --> 00:16:45,060
and verification

368
00:16:45,060 --> 00:16:46,800
automation

369
00:16:46,800 --> 00:16:48,480
when it comes to automation it's very

370
00:16:48,480 --> 00:16:50,820
good crucial because of the challenge

371
00:16:50,820 --> 00:16:53,040
that we heard that we talked about in

372
00:16:53,040 --> 00:16:55,860
previous slides you had there's a lot of

373
00:16:55,860 --> 00:16:57,720
pipeline there's a lot of microservices

374
00:16:57,720 --> 00:16:59,820
a lot of developers are shipping out

375
00:16:59,820 --> 00:17:02,699
code then so there's a lot you need to

376
00:17:02,699 --> 00:17:05,459
implement automation into your security

377
00:17:05,459 --> 00:17:07,859
of your supply chain

378
00:17:07,859 --> 00:17:10,520
because this can significantly reduce

379
00:17:10,520 --> 00:17:14,040
possible human error and configuration

380
00:17:14,040 --> 00:17:16,459
drift

381
00:17:16,919 --> 00:17:19,740
this is also to a previous slide blend

382
00:17:19,740 --> 00:17:22,220
the user

383
00:17:24,319 --> 00:17:27,900
Clarity Clarity and that's the challenge

384
00:17:27,900 --> 00:17:31,080
of the the build environment used in the

385
00:17:31,080 --> 00:17:33,059
supply chain should be clearly defined

386
00:17:33,059 --> 00:17:36,179
limited scope that it does it's the

387
00:17:36,179 --> 00:17:38,400
action that it's been that have been ran

388
00:17:38,400 --> 00:17:41,340
executed are the actions that we believe

389
00:17:41,340 --> 00:17:45,299
and we want them to be executed and of

390
00:17:45,299 --> 00:17:46,679
course authentication all entities

391
00:17:46,679 --> 00:17:48,900
operating supply chain environment must

392
00:17:48,900 --> 00:17:51,419
be mutually authenticated uh using

393
00:17:51,419 --> 00:17:53,880
hardened authentication mechanism and

394
00:17:53,880 --> 00:17:56,820
key rotation you don't want to create a

395
00:17:56,820 --> 00:17:58,220
super user

396
00:17:58,220 --> 00:18:01,440
a super user applied to one of the

397
00:18:01,440 --> 00:18:03,780
objects on one of the entities that are

398
00:18:03,780 --> 00:18:05,880
running and forget about it that's the

399
00:18:05,880 --> 00:18:09,600
best way to infiltrate supply chain

400
00:18:09,600 --> 00:18:12,660
with all but now I read this document

401
00:18:12,660 --> 00:18:15,059
it's an amazing document there's a lot

402
00:18:15,059 --> 00:18:17,580
of good insights but at the end of it I

403
00:18:17,580 --> 00:18:19,740
was looking like this

404
00:18:19,740 --> 00:18:22,460
the main reason that I was looking

405
00:18:22,460 --> 00:18:26,720
confused and I didn't know okay

406
00:18:26,720 --> 00:18:29,280
there was a lot of them a lot of uh

407
00:18:29,280 --> 00:18:31,700
running moving parts and I was very

408
00:18:31,700 --> 00:18:35,280
challenging in creating a full picture

409
00:18:35,280 --> 00:18:37,679
it's not so obvious of how all the

410
00:18:37,679 --> 00:18:39,780
processes and tools that are describing

411
00:18:39,780 --> 00:18:42,960
document tie all together not uh it's

412
00:18:42,960 --> 00:18:45,419
not so obvious that or how the practices

413
00:18:45,419 --> 00:18:48,120
I can and how how are they actually

414
00:18:48,120 --> 00:18:51,299
relevant to my specific environment to

415
00:18:51,299 --> 00:18:54,600
my pain there's a lot of a lot of stuff

416
00:18:54,600 --> 00:18:57,080
out there

417
00:18:57,090 --> 00:18:59,059
[Music]

418
00:18:59,059 --> 00:19:02,400
taking one of the best practices to to

419
00:19:02,400 --> 00:19:04,340
my specific environment

420
00:19:04,340 --> 00:19:07,039
you won't be able to 100

421
00:19:07,039 --> 00:19:10,140
uh replicate this to a different

422
00:19:10,140 --> 00:19:11,940
to a different environment to a

423
00:19:11,940 --> 00:19:14,880
different customer to a different uh for

424
00:19:14,880 --> 00:19:18,240
example running Jenkins on AWS or with

425
00:19:18,240 --> 00:19:21,179
code with the code code pipe you won't

426
00:19:21,179 --> 00:19:23,160
be able to run it on Azure devops so

427
00:19:23,160 --> 00:19:26,340
with cs circuit CR because the this one

428
00:19:26,340 --> 00:19:29,220
my environment is run on based on Java

429
00:19:29,220 --> 00:19:31,500
and he's running on C so and there's a

430
00:19:31,500 --> 00:19:34,500
lot of different components and you need

431
00:19:34,500 --> 00:19:37,380
something much more clearer

432
00:19:37,380 --> 00:19:40,380
so when I finished reading this I didn't

433
00:19:40,380 --> 00:19:42,299
know where to start I didn't know

434
00:19:42,299 --> 00:19:44,520
exactly what tools were out for me and

435
00:19:44,520 --> 00:19:46,740
what is the right path and if I was

436
00:19:46,740 --> 00:19:49,080
confused I'm sure that a lot of people

437
00:19:49,080 --> 00:19:52,380
out there were confused along with me so

438
00:19:52,380 --> 00:19:54,840
this brings me to the second part

439
00:19:54,840 --> 00:19:57,840
so what can I do it's exactly it's a

440
00:19:57,840 --> 00:19:59,220
very good question guys I know that all

441
00:19:59,220 --> 00:20:01,679
you guys are thought about it at the end

442
00:20:01,679 --> 00:20:04,200
of the previous slide so the first thing

443
00:20:04,200 --> 00:20:05,760
that we must do

444
00:20:05,760 --> 00:20:08,820
is clearly understand and Define the

445
00:20:08,820 --> 00:20:10,140
problem scope

446
00:20:10,140 --> 00:20:13,020
I understand I talked about it a little

447
00:20:13,020 --> 00:20:15,120
bit at the beginning the the problem

448
00:20:15,120 --> 00:20:18,600
scope the security and Supply the

449
00:20:18,600 --> 00:20:21,900
security is not only on specific section

450
00:20:21,900 --> 00:20:25,140
of your CSD pipeline it goes from your

451
00:20:25,140 --> 00:20:27,720
source code onto the runtime to the

452
00:20:27,720 --> 00:20:31,919
actual deployment and for each of the on

453
00:20:31,919 --> 00:20:34,200
each of the standard you see here

454
00:20:34,200 --> 00:20:37,320
you need problems problems verification

455
00:20:37,320 --> 00:20:39,059
you need to gain Assurance on the origin

456
00:20:39,059 --> 00:20:41,520
of the artifacts you know to understand

457
00:20:41,520 --> 00:20:43,799
that the artifact that you're using

458
00:20:43,799 --> 00:20:48,240
is exactly what you think or what you

459
00:20:48,240 --> 00:20:50,760
think that he is a specific open source

460
00:20:50,760 --> 00:20:53,340
project is not then that you're using or

461
00:20:53,340 --> 00:20:56,100
a package is not being wrapped around in

462
00:20:56,100 --> 00:20:57,840
a malicious scope

463
00:20:57,840 --> 00:21:00,059
the next step of that okay you know what

464
00:21:00,059 --> 00:21:02,820
you're using you need to again clear

465
00:21:02,820 --> 00:21:05,340
understanding on the actual steps and

466
00:21:05,340 --> 00:21:08,340
actions that this component is has been

467
00:21:08,340 --> 00:21:13,740
is taken not only looking okay on on the

468
00:21:13,740 --> 00:21:15,780
bill of materials of that specific

469
00:21:15,780 --> 00:21:18,360
object you need to also look at the

470
00:21:18,360 --> 00:21:20,880
actions and the steps and the activity

471
00:21:20,880 --> 00:21:23,400
that this component is doing and this

472
00:21:23,400 --> 00:21:26,039
goes from for your pipeline steps or

473
00:21:26,039 --> 00:21:29,820
steps in Jenkins or in certain CI this

474
00:21:29,820 --> 00:21:32,400
goes for actual code that you're writing

475
00:21:32,400 --> 00:21:35,940
or leveraging on your artifact that

476
00:21:35,940 --> 00:21:37,200
you're building your runtime

477
00:21:37,200 --> 00:21:38,580
configuration

478
00:21:38,580 --> 00:21:40,460
all of this

479
00:21:40,460 --> 00:21:44,340
and you and for each of the steps of

480
00:21:44,340 --> 00:21:46,380
each of the companies that you know

481
00:21:46,380 --> 00:21:49,080
you're right now checking you need to

482
00:21:49,080 --> 00:21:51,200
create a circle of trust dependencies

483
00:21:51,200 --> 00:21:53,760
keep constantly check the artifact

484
00:21:53,760 --> 00:21:56,400
dependencies and see that nothing is

485
00:21:56,400 --> 00:21:59,340
nothing changed and you have full trust

486
00:21:59,340 --> 00:22:01,860
with it and Providence of the artifacts

487
00:22:01,860 --> 00:22:04,140
as it used

488
00:22:04,140 --> 00:22:07,020
so after the Define the problem

489
00:22:07,020 --> 00:22:11,400
scope I found that this white paper this

490
00:22:11,400 --> 00:22:14,280
reference architect is a very good it's

491
00:22:14,280 --> 00:22:17,880
a good place to start because this is a

492
00:22:17,880 --> 00:22:20,820
prototype that you can take as a proof

493
00:22:20,820 --> 00:22:24,419
of content as a POC guide and this gives

494
00:22:24,419 --> 00:22:27,780
you a very clear understanding on all

495
00:22:27,780 --> 00:22:30,419
the components that you might have in

496
00:22:30,419 --> 00:22:32,940
your supply chain environment how to

497
00:22:32,940 --> 00:22:34,919
introduce automation

498
00:22:34,919 --> 00:22:38,820
how to introduce security and by default

499
00:22:38,820 --> 00:22:42,000
okay and this was producing the past

500
00:22:42,000 --> 00:22:46,260
months based on the massive feedback

501
00:22:46,260 --> 00:22:47,580
that we got

502
00:22:47,580 --> 00:22:51,059
the difference the the field got on the

503
00:22:51,059 --> 00:22:53,039
previous document because we want

504
00:22:53,039 --> 00:22:56,700
something that we can make take and

505
00:22:56,700 --> 00:22:58,080
start using it

506
00:22:58,080 --> 00:22:59,520
and I know what you guys are thinking

507
00:22:59,520 --> 00:23:01,380
right now well you just talked about the

508
00:23:01,380 --> 00:23:03,059
white paper and yeah give me another

509
00:23:03,059 --> 00:23:05,700
guide I don't want a guide I want to do

510
00:23:05,700 --> 00:23:07,559
I want to use something

511
00:23:07,559 --> 00:23:10,740
that uh like you said I want to take it

512
00:23:10,740 --> 00:23:12,900
and I want to use it in my environment I

513
00:23:12,900 --> 00:23:14,940
want to learn from it

514
00:23:14,940 --> 00:23:16,919
on job training

515
00:23:16,919 --> 00:23:20,460
you are 100 but in order to run you need

516
00:23:20,460 --> 00:23:22,679
to start working and this is the way

517
00:23:22,679 --> 00:23:25,020
that you uh you walk

518
00:23:25,020 --> 00:23:28,559
and after you you run you read this uh

519
00:23:28,559 --> 00:23:30,480
this document in fully understand by the

520
00:23:30,480 --> 00:23:32,700
way it's not that long I think it's like

521
00:23:32,700 --> 00:23:38,100
uh 20 40 pages even less okay and it's a

522
00:23:38,100 --> 00:23:39,659
very good one I highly recommend go and

523
00:23:39,659 --> 00:23:42,480
read it but after you finish reading it

524
00:23:42,480 --> 00:23:45,780
if you want to do uh the actual steps

525
00:23:45,780 --> 00:23:48,059
the Practical steps and Implement them

526
00:23:48,059 --> 00:23:50,159
in your environment

527
00:23:50,159 --> 00:23:51,600
go

528
00:23:51,600 --> 00:23:54,360
to the this open source project this is

529
00:23:54,360 --> 00:23:56,220
our office project that was create

530
00:23:56,220 --> 00:24:00,780
created by a Citibank and but

531
00:24:00,780 --> 00:24:02,700
specifically by Michael and Brad from

532
00:24:02,700 --> 00:24:04,740
from City and they contributed to the

533
00:24:04,740 --> 00:24:06,000
open access

534
00:24:06,000 --> 00:24:08,520
it takes all the secure software Factory

535
00:24:08,520 --> 00:24:10,799
and best practices implementation

536
00:24:10,799 --> 00:24:14,159
guidelines and translate them into

537
00:24:14,159 --> 00:24:16,620
actionable steps it uses open source

538
00:24:16,620 --> 00:24:17,820
projects

539
00:24:17,820 --> 00:24:20,580
only open source projects in order to

540
00:24:20,580 --> 00:24:22,740
create a set of tools patterns and

541
00:24:22,740 --> 00:24:26,400
policies to help you build Supply chains

542
00:24:26,400 --> 00:24:30,120
and supply chain pipelines sorry

543
00:24:30,120 --> 00:24:33,419
and create the artifacts with confidence

544
00:24:33,419 --> 00:24:34,880
and

545
00:24:34,880 --> 00:24:37,320
retraceable province which means that

546
00:24:37,320 --> 00:24:39,419
you can take what you in the pipeline

547
00:24:39,419 --> 00:24:41,580
that you created here and easily

548
00:24:41,580 --> 00:24:44,880
translated into any system that you have

549
00:24:44,880 --> 00:24:47,400
the best practices the open source that

550
00:24:47,400 --> 00:24:50,820
they are using again and for a automatic

551
00:24:50,820 --> 00:24:52,559
everything is around automation

552
00:24:52,559 --> 00:24:55,679
everything around security and it's also

553
00:24:55,679 --> 00:24:59,100
compliance with the salsa the best

554
00:24:59,100 --> 00:25:02,179
practices of Sasa which is the framework

555
00:25:02,179 --> 00:25:07,440
for uh that I forgot the exact acronyms

556
00:25:07,440 --> 00:25:10,320
at the end of the slide I can check it

557
00:25:10,320 --> 00:25:12,360
but it's compliance with the with all

558
00:25:12,360 --> 00:25:14,100
the salsa levels

559
00:25:14,100 --> 00:25:17,100
it uses uh it helps to implement

560
00:25:17,100 --> 00:25:19,080
ultimate signing for your artifact with

561
00:25:19,080 --> 00:25:20,940
Sig Stone and cosine

562
00:25:20,940 --> 00:25:24,419
and for the pipeline management the the

563
00:25:24,419 --> 00:25:26,640
framework and the Observer again you

564
00:25:26,640 --> 00:25:30,179
need to check everything okay you it

565
00:25:30,179 --> 00:25:32,220
level checked on change in pipelines

566
00:25:32,220 --> 00:25:33,900
admission controller is being

567
00:25:33,900 --> 00:25:35,900
implemented here with Ivano identity

568
00:25:35,900 --> 00:25:38,940
attestation is being generated by spire

569
00:25:38,940 --> 00:25:40,860
and everything is running on top of

570
00:25:40,860 --> 00:25:42,059
kubernetes

571
00:25:42,059 --> 00:25:46,520
a very amazing project

572
00:25:47,840 --> 00:25:50,279
personally I've been familiar with this

573
00:25:50,279 --> 00:25:52,980
project I think for more than six months

574
00:25:52,980 --> 00:25:54,960
they

575
00:25:54,960 --> 00:25:57,539
um I've reached uh Michael and gave a

576
00:25:57,539 --> 00:25:59,039
lecture about it lucky

577
00:25:59,039 --> 00:26:03,059
in the not in in the previous coupon

578
00:26:03,059 --> 00:26:05,600
and from there I've been start working

579
00:26:05,600 --> 00:26:08,880
with this project Amazing Project very

580
00:26:08,880 --> 00:26:10,159
very simple

581
00:26:10,159 --> 00:26:13,880
uh and simple to use

582
00:26:15,120 --> 00:26:17,279
uh

583
00:26:17,279 --> 00:26:20,220
the Fresca and the supply chain Factory

584
00:26:20,220 --> 00:26:23,279
helps us to focus and to address the

585
00:26:23,279 --> 00:26:26,940
problem scope based on the different

586
00:26:26,940 --> 00:26:30,600
steps of your sdlc

587
00:26:30,600 --> 00:26:33,240
it divides you to the pre-build the

588
00:26:33,240 --> 00:26:35,700
build and the post build what it does

589
00:26:35,700 --> 00:26:37,860
pretty much is look at each of the

590
00:26:37,860 --> 00:26:39,480
components and gives you the best

591
00:26:39,480 --> 00:26:42,120
practices the steps the tools in order

592
00:26:42,120 --> 00:26:45,720
to implement security and align

593
00:26:45,720 --> 00:26:49,679
with these guidelines with the with the

594
00:26:49,679 --> 00:26:51,779
verification transfer independencies for

595
00:26:51,779 --> 00:26:54,720
each of them not only for specific

596
00:26:54,720 --> 00:26:57,840
component which means for you guys that

597
00:26:57,840 --> 00:27:00,720
if you in your environment are in charge

598
00:27:00,720 --> 00:27:04,860
only on your cicd system and you want to

599
00:27:04,860 --> 00:27:08,220
boost the security and implement the

600
00:27:08,220 --> 00:27:11,640
implement the the best security and in

601
00:27:11,640 --> 00:27:14,460
guidelines and align with this best part

602
00:27:14,460 --> 00:27:16,400
with this

603
00:27:16,400 --> 00:27:20,220
uh with these values you can just go

604
00:27:20,220 --> 00:27:23,039
read the guide look at the tools and

605
00:27:23,039 --> 00:27:25,080
take whatever you want from it same

606
00:27:25,080 --> 00:27:27,659
thing goes for the pre-build steps if

607
00:27:27,659 --> 00:27:29,039
you're only working with your GitHub

608
00:27:29,039 --> 00:27:30,840
repo dependency open source management

609
00:27:30,840 --> 00:27:33,659
you can also do the same thing and the

610
00:27:33,659 --> 00:27:35,520
post build

611
00:27:35,520 --> 00:27:36,539
okay

612
00:27:36,539 --> 00:27:40,440
so again it's a very good guide and the

613
00:27:40,440 --> 00:27:43,500
the best practices here helps us to

614
00:27:43,500 --> 00:27:47,840
create a secure pipeline end-to-end

615
00:27:49,440 --> 00:27:52,200
there are more not only the guys that I

616
00:27:52,200 --> 00:27:54,480
just start the guidelines and the best

617
00:27:54,480 --> 00:27:56,400
practices I want to talk to you guys

618
00:27:56,400 --> 00:27:59,460
about software materials

619
00:27:59,460 --> 00:28:02,580
now there's a quote here from an article

620
00:28:02,580 --> 00:28:05,940
that I found a way back that I'm not

621
00:28:05,940 --> 00:28:08,760
gonna record it but it helps us to

622
00:28:08,760 --> 00:28:11,220
understand that software materials are

623
00:28:11,220 --> 00:28:13,440
very valuable for organization

624
00:28:13,440 --> 00:28:16,080
especially when they are tackling the

625
00:28:16,080 --> 00:28:19,580
challenge in supply chain security

626
00:28:19,580 --> 00:28:23,760
but while s-bomb are useful to

627
00:28:23,760 --> 00:28:25,679
organization it does not guarantee the

628
00:28:25,679 --> 00:28:28,740
actual insights that you want

629
00:28:28,740 --> 00:28:33,200
to get they provide on information

630
00:28:35,520 --> 00:28:37,140
they provide only information to

631
00:28:37,140 --> 00:28:39,360
organization about the actual components

632
00:28:39,360 --> 00:28:42,000
that they are using in your software the

633
00:28:42,000 --> 00:28:43,679
latest self is not enough because it

634
00:28:43,679 --> 00:28:45,500
doesn't give you the actual

635
00:28:45,500 --> 00:28:49,500
and the expert exploit activity the

636
00:28:49,500 --> 00:28:52,080
contents to the risk factor of which of

637
00:28:52,080 --> 00:28:53,880
the components and not all

638
00:28:53,880 --> 00:28:55,919
vulnerabilities were born alike

639
00:28:55,919 --> 00:28:58,980
because one vulnerability One open

640
00:28:58,980 --> 00:29:01,440
source project one package that is being

641
00:29:01,440 --> 00:29:05,880
let's say very high risk high and very

642
00:29:05,880 --> 00:29:07,919
there is an attack Vector for one of

643
00:29:07,919 --> 00:29:09,779
them when we take the same package and

644
00:29:09,779 --> 00:29:13,020
run it on a different program or on a

645
00:29:13,020 --> 00:29:15,840
different version of the product the the

646
00:29:15,840 --> 00:29:19,380
risk might shift you need to add this

647
00:29:19,380 --> 00:29:22,500
this information into your question

648
00:29:22,500 --> 00:29:24,779
so s-bomb is a very good start but it's

649
00:29:24,779 --> 00:29:25,919
not

650
00:29:25,919 --> 00:29:28,559
it's not something that you can rely on

651
00:29:28,559 --> 00:29:31,440
for that I highly recommend to integrate

652
00:29:31,440 --> 00:29:33,840
also a thing called Vex vulnerability

653
00:29:33,840 --> 00:29:35,520
exposure Exchange

654
00:29:35,520 --> 00:29:38,779
Vex is pretty much a standard

655
00:29:38,779 --> 00:29:42,059
and that gives you a clear understanding

656
00:29:42,059 --> 00:29:44,419
on the content that

657
00:29:44,419 --> 00:29:48,720
is provided by your s-bomb

658
00:29:48,720 --> 00:29:50,880
it assists you to communicate the actual

659
00:29:50,880 --> 00:29:53,460
exploitability of the vulnerability

660
00:29:53,460 --> 00:29:55,919
and it's a very passing standard that

661
00:29:55,919 --> 00:29:57,600
declares whether the product is

662
00:29:57,600 --> 00:30:00,779
vulnerable to a specific vulnerability

663
00:30:00,779 --> 00:30:02,700
so when we are protecting the supply

664
00:30:02,700 --> 00:30:04,919
chain for development is

665
00:30:04,919 --> 00:30:08,940
we need to get all the also introduce

666
00:30:08,940 --> 00:30:11,460
automation tools such as defects and

667
00:30:11,460 --> 00:30:14,100
s-bomb it gives you the necessary

668
00:30:14,100 --> 00:30:15,899
insights you know to manage your supply

669
00:30:15,899 --> 00:30:18,659
chain in a very efficient way otherwise

670
00:30:18,659 --> 00:30:21,059
you just get bombarded with information

671
00:30:21,059 --> 00:30:25,140
that is not relevant for your needs

672
00:30:25,140 --> 00:30:28,380
and it helps us it's safe it saves

673
00:30:28,380 --> 00:30:29,580
valuable time

674
00:30:29,580 --> 00:30:33,419
because if you see right now in this is

675
00:30:33,419 --> 00:30:35,279
one of the examples by the way there's a

676
00:30:35,279 --> 00:30:37,380
link on the bottom that you can go and

677
00:30:37,380 --> 00:30:42,500
you can get all the information on vex

678
00:30:44,059 --> 00:30:45,840
from there

679
00:30:45,840 --> 00:30:47,520
as you can see

680
00:30:47,520 --> 00:30:49,679
a specific vulnerability that you see

681
00:30:49,679 --> 00:30:53,159
over here on the different uh

682
00:30:53,159 --> 00:30:55,320
on a specific vendor on specific

683
00:30:55,320 --> 00:30:56,640
products

684
00:30:56,640 --> 00:31:00,539
okay it has a different uh different

685
00:31:00,539 --> 00:31:03,299
effect the risk factor changes and you

686
00:31:03,299 --> 00:31:06,240
need to get this Insight in order to

687
00:31:06,240 --> 00:31:09,419
get clear understanding and Define

688
00:31:09,419 --> 00:31:11,600
guidelines and

689
00:31:11,600 --> 00:31:14,460
steps of actions for your organization

690
00:31:14,460 --> 00:31:16,440
otherwise if you think that everything

691
00:31:16,440 --> 00:31:18,899
is vulnerable a specific package is

692
00:31:18,899 --> 00:31:21,539
vulnerable you might send your Security

693
00:31:21,539 --> 00:31:24,840
Administrations or Developers for wild

694
00:31:24,840 --> 00:31:27,500
goose chase

695
00:31:28,200 --> 00:31:30,059
now

696
00:31:30,059 --> 00:31:33,600
I said that addressing the problem area

697
00:31:33,600 --> 00:31:37,020
it's very good to divide it to the the

698
00:31:37,020 --> 00:31:39,419
following three pillars the pre-build

699
00:31:39,419 --> 00:31:42,600
the build and the post build so right

700
00:31:42,600 --> 00:31:45,480
now what I want to do is I want to focus

701
00:31:45,480 --> 00:31:47,580
on the previous phase

702
00:31:47,580 --> 00:31:49,860
I want to focus on the and talk to guys

703
00:31:49,860 --> 00:31:52,080
about how to keep your dependencies up

704
00:31:52,080 --> 00:31:54,659
to date and some of you guys might look

705
00:31:54,659 --> 00:31:56,580
like this skills right now because why

706
00:31:56,580 --> 00:31:58,799
you talked about the full picture right

707
00:31:58,799 --> 00:32:00,299
now now you're focusing on on

708
00:32:00,299 --> 00:32:02,460
dependencies on the pre-build why you

709
00:32:02,460 --> 00:32:04,620
want to take us on into that why it's so

710
00:32:04,620 --> 00:32:07,380
important good question you guys have

711
00:32:07,380 --> 00:32:10,559
very good questions so far I love it so

712
00:32:10,559 --> 00:32:12,059
the main reason that I want to talk

713
00:32:12,059 --> 00:32:13,320
about this

714
00:32:13,320 --> 00:32:15,659
is that

715
00:32:15,659 --> 00:32:17,760
when you are keeping your update up to

716
00:32:17,760 --> 00:32:20,700
date the what's in it for me

717
00:32:20,700 --> 00:32:22,620
you prevent yourself from exposing

718
00:32:22,620 --> 00:32:24,360
yourself to vulnerabilities because the

719
00:32:24,360 --> 00:32:27,779
latest version by might not it's not

720
00:32:27,779 --> 00:32:30,360
might it won't have the all the

721
00:32:30,360 --> 00:32:33,059
vulnerabilities and exposures you always

722
00:32:33,059 --> 00:32:36,059
get all the latest features and API bug

723
00:32:36,059 --> 00:32:39,539
fixes and zero day fire layers which I

724
00:32:39,539 --> 00:32:41,340
don't know if some of you are familiar

725
00:32:41,340 --> 00:32:43,380
with this phrase a fire drill means that

726
00:32:43,380 --> 00:32:44,940
the new vulnerability was just

727
00:32:44,940 --> 00:32:47,580
discovered and your customer is pressing

728
00:32:47,580 --> 00:32:49,740
the company okay fix it right now fix it

729
00:32:49,740 --> 00:32:52,140
now fix it yesterday

730
00:32:52,140 --> 00:32:55,320
okay and you think your company is

731
00:32:55,320 --> 00:32:56,940
coming to you I said you need to fix it

732
00:32:56,940 --> 00:32:59,580
but you're 18 months and 10 releases out

733
00:32:59,580 --> 00:33:02,520
of date what would you do how can you do

734
00:33:02,520 --> 00:33:04,740
that and this stuff without breaking the

735
00:33:04,740 --> 00:33:06,440
bill without getting all the confidence

736
00:33:06,440 --> 00:33:09,240
that's a fire drill that's a pain that's

737
00:33:09,240 --> 00:33:11,399
a challenge that

738
00:33:11,399 --> 00:33:15,059
a very frightening thing to encounter

739
00:33:15,059 --> 00:33:17,419
and when we are looking at

740
00:33:17,419 --> 00:33:20,519
the statistic about this

741
00:33:20,519 --> 00:33:22,380
when you're constantly up to date you're

742
00:33:22,380 --> 00:33:24,620
already avoiding 90 of new discover

743
00:33:24,620 --> 00:33:27,320
vulnerabilities and non-vulnerabilities

744
00:33:27,320 --> 00:33:32,460
are exploited in 60 of all known Bridges

745
00:33:32,460 --> 00:33:35,460
the surveyed the full information is in

746
00:33:35,460 --> 00:33:36,840
the link below

747
00:33:36,840 --> 00:33:40,500
okay I convince you guys you want to you

748
00:33:40,500 --> 00:33:42,419
you guys want to stay at the latest and

749
00:33:42,419 --> 00:33:45,299
greatest version of all your softwares

750
00:33:45,299 --> 00:33:48,360
but there is a pain

751
00:33:48,360 --> 00:33:50,399
it takes time

752
00:33:50,399 --> 00:33:52,740
first of all you need to understand what

753
00:33:52,740 --> 00:33:54,539
our what are the pencies of your project

754
00:33:54,539 --> 00:33:56,659
open source projects Docker images

755
00:33:56,659 --> 00:33:59,880
internal dependencies that's that's by

756
00:33:59,880 --> 00:34:01,860
itself is a lot of work

757
00:34:01,860 --> 00:34:04,799
then you need to go and find do I have

758
00:34:04,799 --> 00:34:06,899
the an updated version

759
00:34:06,899 --> 00:34:09,540
if I have another version can I use it

760
00:34:09,540 --> 00:34:11,879
can I update without breaking my build

761
00:34:11,879 --> 00:34:14,399
test on a list

762
00:34:14,399 --> 00:34:17,219
okay then I need to actually open the pr

763
00:34:17,219 --> 00:34:20,040
and have the dependencies and do all the

764
00:34:20,040 --> 00:34:22,679
steps that are steps two and four on

765
00:34:22,679 --> 00:34:24,839
each of the dependencies on the right

766
00:34:24,839 --> 00:34:27,359
you can see also the estimation of the

767
00:34:27,359 --> 00:34:30,179
time that it takes

768
00:34:30,179 --> 00:34:34,679
okay you can blindly upgrade everything

769
00:34:34,679 --> 00:34:38,339
you can't blindly go and say okay I've

770
00:34:38,339 --> 00:34:41,040
uh I have I'm fully covered because

771
00:34:41,040 --> 00:34:43,800
there was a lot out there and human

772
00:34:43,800 --> 00:34:46,080
health always happen

773
00:34:46,080 --> 00:34:48,960
so how can we help you guys with this of

774
00:34:48,960 --> 00:34:50,820
talking about a lot of tools a lot of

775
00:34:50,820 --> 00:34:53,099
guidelines with Fresca the open source

776
00:34:53,099 --> 00:34:55,379
project for the entire sdlc so right now

777
00:34:55,379 --> 00:34:56,699
I'm going to focus on the on the

778
00:34:56,699 --> 00:34:58,859
pre-build for that

779
00:34:58,859 --> 00:35:00,660
I want to take you guys and introduce

780
00:35:00,660 --> 00:35:02,220
you guys with an open source project

781
00:35:02,220 --> 00:35:04,800
which is called renovate runaway does

782
00:35:04,800 --> 00:35:07,200
exactly all the work that is described

783
00:35:07,200 --> 00:35:09,180
in here

784
00:35:09,180 --> 00:35:12,300
it scan your projects and and defend

785
00:35:12,300 --> 00:35:14,640
identify all dependencies for open

786
00:35:14,640 --> 00:35:17,520
source components infrastructures code

787
00:35:17,520 --> 00:35:20,599
files Docker files docker-based images

788
00:35:20,599 --> 00:35:24,060
it goes and looks for your actual Depend

789
00:35:24,060 --> 00:35:27,119
and updated dependencies if they're out

790
00:35:27,119 --> 00:35:28,260
there

791
00:35:28,260 --> 00:35:31,380
it automatically opens a PR field and

792
00:35:31,380 --> 00:35:36,740
gives you clear insights on the

793
00:35:39,359 --> 00:35:41,460
sorry on the release notes committee

794
00:35:41,460 --> 00:35:43,920
story and test status now one thing that

795
00:35:43,920 --> 00:35:48,660
I I found very valuable and all the

796
00:35:48,660 --> 00:35:50,579
people that are using it also it gives

797
00:35:50,579 --> 00:35:52,020
you the merge confidence marriage

798
00:35:52,020 --> 00:35:55,500
confidence means to you guys that okay I

799
00:35:55,500 --> 00:35:58,619
wanna if looking at the first example I

800
00:35:58,619 --> 00:36:01,680
have the remarks a stringfly version 8.1

801
00:36:01,680 --> 00:36:04,079
or 100 to 9.0

802
00:36:04,079 --> 00:36:06,020
based on the statistic that that

803
00:36:06,020 --> 00:36:09,839
renovate collected by himself he can he

804
00:36:09,839 --> 00:36:12,359
gives you the the Insight that sixty

805
00:36:12,359 --> 00:36:14,520
percent of the guys the developers that

806
00:36:14,520 --> 00:36:17,339
upgraded version number one

807
00:36:17,339 --> 00:36:20,520
survive the build so 40 didn't survive

808
00:36:20,520 --> 00:36:23,220
so it has within it defined a low

809
00:36:23,220 --> 00:36:25,020
confidence and

810
00:36:25,020 --> 00:36:27,660
zero adoption rate but if you're looking

811
00:36:27,660 --> 00:36:30,240
at the bottom example you get clear

812
00:36:30,240 --> 00:36:32,420
insights on all

813
00:36:32,420 --> 00:36:35,640
the guys that upgraded and get a very

814
00:36:35,640 --> 00:36:40,920
100 tax confidence with adoption and it

815
00:36:40,920 --> 00:36:42,599
didn't bring to build

816
00:36:42,599 --> 00:36:45,660
pretty much Works in a very

817
00:36:45,660 --> 00:36:48,720
simple non-intusive way by the way it

818
00:36:48,720 --> 00:36:51,380
not only can open the pl it's also

819
00:36:51,380 --> 00:36:54,359
based on your configuration it can also

820
00:36:54,359 --> 00:36:59,160
create some clear email if you merge the

821
00:36:59,160 --> 00:37:00,960
fix automatically

822
00:37:00,960 --> 00:37:03,660
but this is a configurable you can

823
00:37:03,660 --> 00:37:06,720
Define it for him or for here

824
00:37:06,720 --> 00:37:09,119
it's a very non-inclusive manage

825
00:37:09,119 --> 00:37:11,040
everything and

826
00:37:11,040 --> 00:37:13,440
all the developers all the I just came

827
00:37:13,440 --> 00:37:16,140
back from kubecon like two weeks ago

828
00:37:16,140 --> 00:37:19,020
people that I talked about it about this

829
00:37:19,020 --> 00:37:20,040
project

830
00:37:20,040 --> 00:37:21,359
love it

831
00:37:21,359 --> 00:37:24,660
a lot of people are using it

832
00:37:24,660 --> 00:37:27,480
okay I've been talking for 45 and 43

833
00:37:27,480 --> 00:37:29,940
minutes 44 minutes okay let's start

834
00:37:29,940 --> 00:37:31,619
wrapping it up and I also want to give

835
00:37:31,619 --> 00:37:34,560
you guys time for uh questions

836
00:37:34,560 --> 00:37:37,140
so what did we cover the main points

837
00:37:37,140 --> 00:37:39,000
that we cover in this slide deck the

838
00:37:39,000 --> 00:37:41,460
first thing is that we need to gain

839
00:37:41,460 --> 00:37:44,099
clear understanding that supply chain is

840
00:37:44,099 --> 00:37:46,920
a very powerful attack vector

841
00:37:46,920 --> 00:37:52,020
we don't let's not put all our hopes on

842
00:37:52,020 --> 00:37:54,780
security scanning that is being done on

843
00:37:54,780 --> 00:37:58,800
your own single point of the sdlc

844
00:37:58,800 --> 00:38:00,900
of course shifting left is not enough

845
00:38:00,900 --> 00:38:02,579
you have to introduce Providence

846
00:38:02,579 --> 00:38:04,680
certification trustworthiness and

847
00:38:04,680 --> 00:38:08,220
dependencies of the values on the that

848
00:38:08,220 --> 00:38:10,260
we talked about

849
00:38:10,260 --> 00:38:12,780
s-bomb is a very good start it's a very

850
00:38:12,780 --> 00:38:14,280
good spot but it's not enough because

851
00:38:14,280 --> 00:38:16,859
only it only gives you the visibility to

852
00:38:16,859 --> 00:38:19,260
the actual component that you have if

853
00:38:19,260 --> 00:38:21,720
you want to get inside the content that

854
00:38:21,720 --> 00:38:25,920
that of a specific uh component package

855
00:38:25,920 --> 00:38:27,359
has

856
00:38:27,359 --> 00:38:29,760
what is the risk factor you need to

857
00:38:29,760 --> 00:38:31,560
introduce vex

858
00:38:31,560 --> 00:38:33,180
the expert abilities

859
00:38:33,180 --> 00:38:36,420
the standard

860
00:38:36,420 --> 00:38:39,000
you have to have especially in Cloud

861
00:38:39,000 --> 00:38:41,660
native environments Cloud native

862
00:38:41,660 --> 00:38:43,579
Supply

863
00:38:43,579 --> 00:38:47,280
chains you have to have the content for

864
00:38:47,280 --> 00:38:50,940
your van for your risk otherwise you

865
00:38:50,940 --> 00:38:52,320
will get bombarded with a lot of

866
00:38:52,320 --> 00:38:55,440
information you won't find yourself

867
00:38:55,440 --> 00:38:58,800
and you and you lose it

868
00:38:58,800 --> 00:39:00,900
and I'm saying it based on a lot of

869
00:39:00,900 --> 00:39:04,460
talks that I had with customers

870
00:39:05,280 --> 00:39:07,740
go and read the skill software factor

871
00:39:07,740 --> 00:39:10,380
it's a very if you guys are managing

872
00:39:10,380 --> 00:39:13,140
your supply chain if you are interested

873
00:39:13,140 --> 00:39:15,420
in this topic if you want to learn how

874
00:39:15,420 --> 00:39:18,240
to beef of your security

875
00:39:18,240 --> 00:39:20,280
go and read it you'll get a lot of

876
00:39:20,280 --> 00:39:23,280
information from it if

877
00:39:23,280 --> 00:39:26,099
if you want to get some tools that will

878
00:39:26,099 --> 00:39:28,740
help you with your day-to-day work

879
00:39:28,740 --> 00:39:31,560
go and get familiar with the renovate

880
00:39:31,560 --> 00:39:34,020
and Fresca

881
00:39:34,020 --> 00:39:37,140
one will help you to keep your software

882
00:39:37,140 --> 00:39:39,839
updates up to date in a very simple way

883
00:39:39,839 --> 00:39:41,760
the other one will help you create

884
00:39:41,760 --> 00:39:43,440
artifacts

885
00:39:43,440 --> 00:39:45,000
secure the entire

886
00:39:45,000 --> 00:39:49,320
um give you examples and and tools and

887
00:39:49,320 --> 00:39:50,640
guidelines that you can use on your

888
00:39:50,640 --> 00:39:51,720
day-to-day

889
00:39:51,720 --> 00:39:53,460
in order for you guys

890
00:39:53,460 --> 00:39:57,020
to implement in your environment

891
00:39:57,720 --> 00:39:59,460
from here I would like to open this

892
00:39:59,460 --> 00:40:00,859
questions

893
00:40:00,859 --> 00:40:03,119
and of course guys

894
00:40:03,119 --> 00:40:04,859
this is my email this is my Twitter

895
00:40:04,859 --> 00:40:07,980
again if you guys want something if you

896
00:40:07,980 --> 00:40:09,720
want to have questions right now I'd

897
00:40:09,720 --> 00:40:12,480
love to answer if not we can also take

898
00:40:12,480 --> 00:40:13,740
it

899
00:40:13,740 --> 00:40:16,859
offline but I would love to hear

900
00:40:16,859 --> 00:40:19,859
anything from you guys

901
00:40:19,859 --> 00:40:23,520
okay so first question I have is uh

902
00:40:23,520 --> 00:40:26,940
regarding provenance verification if all

903
00:40:26,940 --> 00:40:29,400
package managers out there were

904
00:40:29,400 --> 00:40:32,640
requiring package signature using best

905
00:40:32,640 --> 00:40:34,140
practices

906
00:40:34,140 --> 00:40:36,720
then wouldn't we solve most of the

907
00:40:36,720 --> 00:40:39,720
problem it feels like today's industry

908
00:40:39,720 --> 00:40:42,660
comes up with new technologies without

909
00:40:42,660 --> 00:40:46,160
considering this from the beginning

910
00:40:46,200 --> 00:40:48,900
so

911
00:40:48,900 --> 00:40:50,520
so

912
00:40:50,520 --> 00:40:53,280
yes it was sold but only for a specific

913
00:40:53,280 --> 00:40:56,000
section of the supply chain security

914
00:40:56,000 --> 00:40:58,680
because if you know if you know guys

915
00:40:58,680 --> 00:41:01,440
remember when just look for the slide

916
00:41:01,440 --> 00:41:03,619
right to now

917
00:41:03,619 --> 00:41:06,619
just

918
00:41:08,000 --> 00:41:10,560
to see it

919
00:41:10,560 --> 00:41:13,680
I agree it was sold but only for a

920
00:41:13,680 --> 00:41:16,680
specific uh section

921
00:41:16,680 --> 00:41:19,560
a specific section of your uh of your

922
00:41:19,560 --> 00:41:20,880
sdlc

923
00:41:20,880 --> 00:41:23,760
so if you are moving

924
00:41:23,760 --> 00:41:27,359
in your pipeline right now to let's say

925
00:41:27,359 --> 00:41:29,099
to the build artifact to the build

926
00:41:29,099 --> 00:41:32,280
Pipelines okay and you're getting all

927
00:41:32,280 --> 00:41:37,020
the verification from your and from your

928
00:41:37,020 --> 00:41:40,619
essay from your company and you get you

929
00:41:40,619 --> 00:41:42,900
sign everything great but how do you

930
00:41:42,900 --> 00:41:45,480
know that it's not been tackled across

931
00:41:45,480 --> 00:41:48,480
the sdrc how do you know that on your

932
00:41:48,480 --> 00:41:51,540
code repo your local code repo the other

933
00:41:51,540 --> 00:41:53,760
side didn't hook into the system and

934
00:41:53,760 --> 00:41:55,800
tempted with it this is exactly what

935
00:41:55,800 --> 00:41:57,900
happened with the soloing if you

936
00:41:57,900 --> 00:41:59,820
remember because in the solo Wing what

937
00:41:59,820 --> 00:42:03,000
happened is that the the all the the

938
00:42:03,000 --> 00:42:06,359
artifact the dll the code everything was

939
00:42:06,359 --> 00:42:08,880
with the right signature everything was

940
00:42:08,880 --> 00:42:11,280
with the right uh scan results

941
00:42:11,280 --> 00:42:15,359
everything was working it has uh all the

942
00:42:15,359 --> 00:42:17,099
all the right things

943
00:42:17,099 --> 00:42:19,260
all the all the dots and all the eyes

944
00:42:19,260 --> 00:42:22,800
were crossing uh checked what what we

945
00:42:22,800 --> 00:42:24,800
still found this

946
00:42:24,800 --> 00:42:28,260
uh was still in charge of this uh this

947
00:42:28,260 --> 00:42:29,880
attack

948
00:42:29,880 --> 00:42:33,480
so then my my short answer is yes it's a

949
00:42:33,480 --> 00:42:35,339
good thing but it's once of the entire

950
00:42:35,339 --> 00:42:36,960
problem scope because the problem scope

951
00:42:36,960 --> 00:42:39,720
does not focus in on your specific it

952
00:42:39,720 --> 00:42:41,460
goes from the code Reaper

953
00:42:41,460 --> 00:42:44,700
all the way to the London

954
00:42:44,700 --> 00:42:47,640
to the actual deployment

955
00:42:47,640 --> 00:42:50,700
thank you uh what would be the core

956
00:42:50,700 --> 00:42:52,500
differences to your point of view

957
00:42:52,500 --> 00:42:55,020
between renovate and depend about so

958
00:42:55,020 --> 00:42:57,680
another product

959
00:42:58,740 --> 00:43:01,260
so one of the main things that I can say

960
00:43:01,260 --> 00:43:03,859
is the automation that introduced

961
00:43:03,859 --> 00:43:08,280
renovate from uh can and I mentioned

962
00:43:08,280 --> 00:43:10,200
that renovate

963
00:43:10,200 --> 00:43:13,020
is an open source tool that 500 million

964
00:43:13,020 --> 00:43:17,220
people adopted it's been downloaded and

965
00:43:17,220 --> 00:43:19,380
also it can also do the merge

966
00:43:19,380 --> 00:43:21,660
automatically and also give you the most

967
00:43:21,660 --> 00:43:25,200
confident not only does the updating the

968
00:43:25,200 --> 00:43:26,760
merge confidence is a very powerful

969
00:43:26,760 --> 00:43:29,160
thing so if I'm going

970
00:43:29,160 --> 00:43:34,819
to this slide to the second

971
00:43:37,260 --> 00:43:39,359
so you'll see you get full information

972
00:43:39,359 --> 00:43:42,599
not only okay there's a new version

973
00:43:42,599 --> 00:43:45,000
I'm giving you the statistic before I'm

974
00:43:45,000 --> 00:43:46,440
implementing I'm giving you the

975
00:43:46,440 --> 00:43:49,440
statistic okay or the adoption rate the

976
00:43:49,440 --> 00:43:51,839
mail is confident and how many bills

977
00:43:51,839 --> 00:43:53,760
this fix has been broken

978
00:43:53,760 --> 00:43:56,940
and you can also do a fully automation

979
00:43:56,940 --> 00:44:00,240
so if you trust this if you trust this

980
00:44:00,240 --> 00:44:03,300
tool and you don't only want you to open

981
00:44:03,300 --> 00:44:05,640
the pr for you guys for the updates you

982
00:44:05,640 --> 00:44:06,900
can also do

983
00:44:06,900 --> 00:44:09,359
um having mailed the code automatically

984
00:44:09,359 --> 00:44:11,460
if you trust the package and you trust

985
00:44:11,460 --> 00:44:12,599
your code

986
00:44:12,599 --> 00:44:15,480
so that's some of them I don't want to

987
00:44:15,480 --> 00:44:19,260
get into a you know competitive question

988
00:44:19,260 --> 00:44:22,680
okay so okay

989
00:44:22,680 --> 00:44:25,560
um where can I download the tools that

990
00:44:25,560 --> 00:44:27,839
you covered in your presentation such as

991
00:44:27,839 --> 00:44:31,200
renovate and Fresca so if you go over to

992
00:44:31,200 --> 00:44:34,740
GitHub and type Fresca or type renovate

993
00:44:34,740 --> 00:44:37,440
renovate you will get it it's it's one

994
00:44:37,440 --> 00:44:39,240
of the first options

995
00:44:39,240 --> 00:44:43,020
if you want I can also share it give me

996
00:44:43,020 --> 00:44:44,160
a couple of seconds I can share it on

997
00:44:44,160 --> 00:44:47,280
the chat or on and you can send it to

998
00:44:47,280 --> 00:44:49,859
everyone in the in the slide deck that

999
00:44:49,859 --> 00:44:52,619
is I shared also with the

1000
00:44:52,619 --> 00:44:55,800
with the guys that organized the

1001
00:44:55,800 --> 00:44:57,780
conference they have the link

1002
00:44:57,780 --> 00:45:00,180
I plug the links over there so if anyone

1003
00:45:00,180 --> 00:45:03,660
wants to slides just reach out to the

1004
00:45:03,660 --> 00:45:05,579
conference guys and they will send it to

1005
00:45:05,579 --> 00:45:07,560
him you will have a direct link also to

1006
00:45:07,560 --> 00:45:09,900
the to the reference architect and the

1007
00:45:09,900 --> 00:45:13,680
supply chain security Factory

1008
00:45:13,680 --> 00:45:16,859
thank you uh from from your perspective

1009
00:45:16,859 --> 00:45:18,900
what is the main challenge when working

1010
00:45:18,900 --> 00:45:21,359
with Cloud native artifacts

1011
00:45:21,359 --> 00:45:23,520
the main challenge that I'm seeing is

1012
00:45:23,520 --> 00:45:25,560
again the actual

1013
00:45:25,560 --> 00:45:28,319
the accurate security posture

1014
00:45:28,319 --> 00:45:32,400
I I try to address this when I when I

1015
00:45:32,400 --> 00:45:34,800
talked about the s-bomb which is good

1016
00:45:34,800 --> 00:45:37,920
but not enough but it's not only for the

1017
00:45:37,920 --> 00:45:40,319
artifacts because when we are looking at

1018
00:45:40,319 --> 00:45:44,160
the entire sdlc you have to gain a clear

1019
00:45:44,160 --> 00:45:46,140
understanding on what you are running

1020
00:45:46,140 --> 00:45:48,800
where you are running it and how it runs

1021
00:45:48,800 --> 00:45:52,560
and what's the difference when all these

1022
00:45:52,560 --> 00:45:53,900
three

1023
00:45:53,900 --> 00:45:56,819
these components affect the risk posture

1024
00:45:56,819 --> 00:45:59,660
if I'll take a specific

1025
00:45:59,660 --> 00:46:02,819
a Docker image or an open source project

1026
00:46:02,819 --> 00:46:04,740
and I'll run it on different

1027
00:46:04,740 --> 00:46:08,400
environments even if I'll do it only or

1028
00:46:08,400 --> 00:46:12,480
I'll run it on AWS or in azure

1029
00:46:12,480 --> 00:46:14,400
the infrastructure configuration will

1030
00:46:14,400 --> 00:46:17,160
affect the actual response if I'm

1031
00:46:17,160 --> 00:46:19,200
exposed to the internet or not export to

1032
00:46:19,200 --> 00:46:21,359
the internet if the open source package

1033
00:46:21,359 --> 00:46:25,020
is running on top of Ubuntu or on top of

1034
00:46:25,020 --> 00:46:28,740
Debian or on top of a red hat images

1035
00:46:28,740 --> 00:46:32,280
okay the security risk might change

1036
00:46:32,280 --> 00:46:35,700
so we need to have the main challenge is

1037
00:46:35,700 --> 00:46:39,119
to get the clear the inaccurate security

1038
00:46:39,119 --> 00:46:44,040
posture of your artifacts

1039
00:46:44,040 --> 00:46:47,940
thank you uh off our left

1040
00:46:47,940 --> 00:46:52,079
should I shift my security tools

1041
00:46:52,079 --> 00:46:53,940
um so there will be effective accurate

1042
00:46:53,940 --> 00:46:56,700
and provide me with actionable results

1043
00:46:56,700 --> 00:46:59,160
but in the meantime I need to train all

1044
00:46:59,160 --> 00:47:01,500
my developers so

1045
00:47:01,500 --> 00:47:03,119
um what's your point of view on this

1046
00:47:03,119 --> 00:47:04,319
matter

1047
00:47:04,319 --> 00:47:09,060
so as far left as possible to shift to

1048
00:47:09,060 --> 00:47:11,940
be also also to provide value it depends

1049
00:47:11,940 --> 00:47:14,640
on your day-to-day activities and what

1050
00:47:14,640 --> 00:47:17,099
you're working it's exactly why I

1051
00:47:17,099 --> 00:47:20,040
presented this I'll show you the screen

1052
00:47:20,040 --> 00:47:23,060
why we have

1053
00:47:23,420 --> 00:47:27,839
this Slide the these slides if you're

1054
00:47:27,839 --> 00:47:31,040
right now working on your CSD pipeline

1055
00:47:31,040 --> 00:47:34,740
or you're working uh your devops which

1056
00:47:34,740 --> 00:47:38,579
is focusing more to uh delivery so I

1057
00:47:38,579 --> 00:47:40,740
would say shift as far as the beginning

1058
00:47:40,740 --> 00:47:44,040
of the the pipeline scan the artifacts

1059
00:47:44,040 --> 00:47:48,420
butt scan it when the the scan it when

1060
00:47:48,420 --> 00:47:51,540
the entire artifact is near completion

1061
00:47:51,540 --> 00:47:54,540
because as I said the challenge that we

1062
00:47:54,540 --> 00:47:57,060
addressed before the the risk posture if

1063
00:47:57,060 --> 00:48:00,180
I look right now only on the different

1064
00:48:00,180 --> 00:48:02,040
components that I have and I'll scan

1065
00:48:02,040 --> 00:48:05,160
them so I won't have the accurate

1066
00:48:05,160 --> 00:48:07,859
security departure so only when I scan

1067
00:48:07,859 --> 00:48:10,500
it as far as possible

1068
00:48:10,500 --> 00:48:14,940
in the sdrc on my pipeline okay I will

1069
00:48:14,940 --> 00:48:17,880
get the clear security posture the same

1070
00:48:17,880 --> 00:48:20,040
thing goes for the pre-build if I'm

1071
00:48:20,040 --> 00:48:22,380
looking at the pre-build so my

1072
00:48:22,380 --> 00:48:25,920
recommendation is to implement a a s a

1073
00:48:25,920 --> 00:48:29,520
good SCA solution right the on top of

1074
00:48:29,520 --> 00:48:33,060
your uh your code repo GitHub and bitbug

1075
00:48:33,060 --> 00:48:35,280
it whatever so you will be able to scan

1076
00:48:35,280 --> 00:48:37,260
your artifacts right before they are

1077
00:48:37,260 --> 00:48:40,140
being generated and pulled into the

1078
00:48:40,140 --> 00:48:41,640
pipeline

1079
00:48:41,640 --> 00:48:45,660
so as far left as possible depends on

1080
00:48:45,660 --> 00:48:49,098
your boundaries of work

1081
00:48:51,180 --> 00:48:53,819
thank you I'm checking on over if we

1082
00:48:53,819 --> 00:48:56,599
have any more questions

1083
00:48:57,300 --> 00:49:00,599
it seems that we answered all the

1084
00:49:00,599 --> 00:49:01,700
questions

1085
00:49:01,700 --> 00:49:04,140
thank you very much for your time it's

1086
00:49:04,140 --> 00:49:06,780
now the lunch break so people you can

1087
00:49:06,780 --> 00:49:09,300
attend the new new session this

1088
00:49:09,300 --> 00:49:11,160
afternoon that's over for my shift so

1089
00:49:11,160 --> 00:49:12,720
have a nice day thank you so much for

1090
00:49:12,720 --> 00:49:16,140
your time and I'm looking forward to um

1091
00:49:16,140 --> 00:49:20,118
to seeing you again bye-bye

