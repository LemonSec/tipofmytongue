1
00:00:07,410 --> 00:00:07,950
alright

2
00:00:07,950 --> 00:00:12,320
welcome ladies and gentlemen thank you
for joining us liked it

3
00:00:12,320 --> 00:00:16,129
give it thank you to our sponsors for
this track NT objectives that are

4
00:00:16,129 --> 00:00:16,710
sponsored

5
00:00:16,710 --> 00:00:19,890
this room in this track got a great talk
for you now

6
00:00:19,890 --> 00:00:24,300
Linea using interactive static analysis
for early detection have suffered on

7
00:00:24,300 --> 00:00:25,039
abilities

8
00:00:25,039 --> 00:00:28,390
and got bill to you and

9
00:00:28,390 --> 00:00:32,059
june's you from universe if North
Carolina Charlotte

10
00:00:32,059 --> 00:00:35,260
units BTU thank you very much

11
00:00:35,260 --> 00:00:38,510
I the story we're gonna tell thing

12
00:00:38,510 --> 00:00:42,629
the story we're gonna tell is a
essentially doing

13
00:00:42,629 --> 00:00:45,860
interactive static analysis as
developers type

14
00:00:45,860 --> 00:00:51,020
so people are used to using ID's ID clip
sweet I be mixing texier

15
00:00:51,020 --> 00:00:54,530
you get 1 I've results above errors

16
00:00:54,530 --> 00:00:57,559
and we want to do that for us static
analysis findings

17
00:00:57,559 --> 00:01:00,620
software vulnerabilities that
essentially which I do

18
00:01:00,620 --> 00:01:04,100
I think Michael Howard's talk this

19
00:01:04,100 --> 00:01:08,990
lunchtime sort of sets the stage very
well education is a huge issue

20
00:01:08,990 --> 00:01:13,380
people are not train and even if people
are trained the often forget because you

21
00:01:13,380 --> 00:01:14,880
have pressures deadlines

22
00:01:14,880 --> 00:01:19,380
et cetera so I so so what we're trying
to do is to fill that gap

23
00:01:19,380 --> 00:01:23,900
to be very mine for didn't to keep in
the front of people's

24
00:01:23,900 --> 00:01:27,770
consciousness so

25
00:01:27,770 --> 00:01:31,450
so that those without the basic
observation is Chris static and dynamic

26
00:01:31,450 --> 00:01:32,570
analysis tools are

27
00:01:32,570 --> 00:01:35,790
are reactive you you sort of do this
after you have

28
00:01:35,790 --> 00:01:39,610
which some checkpoints oh its you what
you are not fixing the by against you

29
00:01:39,610 --> 00:01:42,670
as you produced 'em you sort of some
distance away

30
00:01:42,670 --> 00:01:46,549
from that and India typically run by
security professionals

31
00:01:46,549 --> 00:01:49,970
saw approaches as I mentioned earlier is

32
00:01:49,970 --> 00:01:53,180
is really push the envelope are
interactivity

33
00:01:53,180 --> 00:01:58,000
along with the construction of the cold
while developers already Cup

34
00:01:58,000 --> 00:02:02,130
hand the therefore by makes initiative
we mean

35
00:02:02,130 --> 00:02:05,689
its develop oriented and we want to keep
developers in the loop

36
00:02:05,689 --> 00:02:10,970
so the advantages a nice proactive
support of developers with your ability

37
00:02:10,970 --> 00:02:12,599
to have detection and prevention

38
00:02:12,599 --> 00:02:17,459
we want to specifically leverage
developers knowledge about application

39
00:02:17,459 --> 00:02:18,750
contest in logic

40
00:02:18,750 --> 00:02:23,129
to drive custom I stated static analysis
got a lot of times

41
00:02:23,129 --> 00:02:26,989
when you static analysis you used used
by security professionals

42
00:02:26,989 --> 00:02:30,269
and they don't really have the
ApplicationContext

43
00:02:30,269 --> 00:02:34,040
so we're trying to use this tool to
bridge the two and we'll show you it a

44
00:02:34,040 --> 00:02:35,150
couple of demos

45
00:02:35,150 --> 00:02:38,700
about that NN in of course the whole
idea is to drive to

46
00:02:38,700 --> 00:02:41,709
fix my own abilities as early as
possible

47
00:02:41,709 --> 00:02:44,970
cuz you know we we heard gene kim's talk
yet

48
00:02:44,970 --> 00:02:48,160
sometimes you don't get around fixing
the stone abilities even if you'd no

49
00:02:48,160 --> 00:02:51,629
exist so other the

50
00:02:51,629 --> 00:02:55,180
there's two kinds O interactive's did
static analysis we

51
00:02:55,180 --> 00:03:00,540
we have a implemented one is up
interactive data flow analysis which

52
00:03:00,540 --> 00:03:03,950
you know everybody is familiar with the
typical kinds of 10 propagation

53
00:03:03,950 --> 00:03:07,620
in an injection attacks Sonova analysis
for food

54
00:03:07,620 --> 00:03:10,840
for detecting ingestion access injection
vulnerabilities

55
00:03:10,840 --> 00:03:13,909
we also are experimenting with

56
00:03:13,909 --> 00:03:18,000
what we call interactive control flow
analysis the idea is

57
00:03:18,000 --> 00:03:21,420
sometimes you have you have security
policies in variance

58
00:03:21,420 --> 00:03:25,450
things like access control policies see
serve protection et cetera

59
00:03:25,450 --> 00:03:29,000
that you wanna make sure that when you
write code you have

60
00:03:29,000 --> 00:03:33,519
have satisfy those policies and they're
very difficult to detect with data flow

61
00:03:33,519 --> 00:03:35,769
analysis they're really control flow
problems

62
00:03:35,769 --> 00:03:39,720
so so we have some ideas on how to deal
with that and I'll show you share that

63
00:03:39,720 --> 00:03:40,239
with you

64
00:03:40,239 --> 00:03:43,370
now I gave a version of this talk

65
00:03:43,370 --> 00:03:46,780
last year a minute Minneapolis at
Absecon USA

66
00:03:46,780 --> 00:03:49,799
a so-so I will spend a few minutes

67
00:03:49,799 --> 00:03:52,980
the next few minutes just sort of give
you a little bit of a rehash of what we

68
00:03:52,980 --> 00:03:54,239
did last year because

69
00:03:54,239 --> 00:03:57,519
someone you may not be may not have been
there

70
00:03:57,519 --> 00:04:01,360
and but we've done a lot of new work
since 10 so we'll show you more

71
00:04:01,360 --> 00:04:05,459
results and and will also show you some
other current research things that that

72
00:04:05,459 --> 00:04:06,680
they were working on right now

73
00:04:06,680 --> 00:04:12,019
so with that I one commercial Nexus I'll
pull type

74
00:04:12,019 --> 00:04:15,280
demo love a project called a side which
stands for

75
00:04:15,280 --> 00:04:18,570
application security in an ideal
environment

76
00:04:18,570 --> 00:04:23,300
and heart of this is an open source OS
project so so you can't go go

77
00:04:23,300 --> 00:04:26,740
a West Poseidon and you find the page
and

78
00:04:26,740 --> 00:04:31,090
so I saw out is i rationale is this is
designed to be used by

79
00:04:31,090 --> 00:04:34,639
developers not to security professionals
we wanna

80
00:04:34,639 --> 00:04:38,360
have the developers be sort of recognize

81
00:04:38,360 --> 00:04:41,759
instead I'll be calling security
problems is seeing Santa when riding

82
00:04:41,759 --> 00:04:42,840
coat thinking about

83
00:04:42,840 --> 00:04:46,770
what sort of problems I should prevent
we should what we want the tour to tell

84
00:04:46,770 --> 00:04:47,820
the developers

85
00:04:47,820 --> 00:04:50,970
here wanna think about that right a

86
00:04:50,970 --> 00:04:55,470
one might buy so by minimizing extreme
bird not developers

87
00:04:55,470 --> 00:04:59,440
and then we also want to again leverage
developers knowledge

88
00:04:59,440 --> 00:05:02,910
in terms of customized security analysis

89
00:05:02,910 --> 00:05:06,810
so with that June is gonna stand show
the live demo of

90
00:05:06,810 --> 00:05:11,470
a power system both the interactive data
flow analysis and data for static

91
00:05:11,470 --> 00:05:12,530
analysis and I'll

92
00:05:12,530 --> 00:05:15,650
come back and talk to you a little bit
more about

93
00:05:15,650 --> 00:05:19,430
that the sum of the theory and the
mining design issue behind it

94
00:05:19,430 --> 00:05:22,610
so so what he's gonna do is gonna show
you

95
00:05:22,610 --> 00:05:25,669
a an example in an in a in a

96
00:05:25,669 --> 00:05:29,070
in Eclipse environment so we have our

97
00:05:29,070 --> 00:05:32,100
plugging running ed aside plugging
running

98
00:05:32,100 --> 00:05:35,509
so as you see that there are two
warnings and these warnings are

99
00:05:35,509 --> 00:05:37,380
generated because you are reading

100
00:05:37,380 --> 00:05:41,550
and trusted aide in this case get
parameter like this this is an adjusted

101
00:05:41,550 --> 00:05:45,090
so if you commented out and I the show
you how its interactive it is

102
00:05:45,090 --> 00:05:48,400
if you commented on the line the one he
goes away

103
00:05:48,400 --> 00:05:51,970
if you I commented it shows up

104
00:05:51,970 --> 00:05:55,710
so this is that the kinda interactive
style they were driving for

105
00:05:55,710 --> 00:05:59,250
so now if you look at if you click on
that Devils icon

106
00:05:59,250 --> 00:06:02,569
it tells you that you in this case it's
it's a it's a

107
00:06:02,569 --> 00:06:06,800
you to input validation for this thing
right and what we have done is we have

108
00:06:06,800 --> 00:06:07,259
put

109
00:06:07,259 --> 00:06:11,229
are the is sappy library underneath so

110
00:06:11,229 --> 00:06:14,300
you know developer can go down this and
shoes

111
00:06:14,300 --> 00:06:19,180
what validation mechanism he or she
wishes to choose a peach you something

112
00:06:19,180 --> 00:06:23,449
say for example c-string and they were
actually generate cut now

113
00:06:23,449 --> 00:06:26,460
some developers I get some developers
were like it so

114
00:06:26,460 --> 00:06:29,930
so this is you know we're not seeing
this is one size fit all but this is

115
00:06:29,930 --> 00:06:32,979
some of the options that you could do

116
00:06:32,979 --> 00:06:37,539
in the next case in this case you know
%uh the request parameter is passed

117
00:06:37,539 --> 00:06:39,090
through an integer

118
00:06:39,090 --> 00:06:43,090
so you know you don't have to worry
about right so now UK you can also

119
00:06:43,090 --> 00:06:45,419
choose to ignore it

120
00:06:45,419 --> 00:06:48,630
hand and this one will go away so the
idea is

121
00:06:48,630 --> 00:06:52,630
you know as you type in a this gets done

122
00:06:52,630 --> 00:06:57,789
yes where

123
00:06:57,789 --> 00:06:58,159
I

124
00:06:58,159 --> 00:07:01,319
its its to what along with the the
workspace

125
00:07:01,319 --> 00:07:05,620
along with the project up

126
00:07:05,620 --> 00:07:08,960
back back back yes yes okay

127
00:07:08,960 --> 00:07:13,960
back not a we also do something with the
dynamic SQL statement so if

128
00:07:13,960 --> 00:07:17,069
if people ever where the use dynamic SQL
statements

129
00:07:17,069 --> 00:07:20,319
we want to miss a this is not something
you should do okay

130
00:07:20,319 --> 00:07:23,530
we want to stop them in sort of very
very

131
00:07:23,530 --> 00:07:29,009
clear terms alright so this is it just a
very quick overview of what interactive

132
00:07:29,009 --> 00:07:30,759
data flow analysis looks like

133
00:07:30,759 --> 00:07:34,860
are so let's look at to the next part
which is the interactive control flow

134
00:07:34,860 --> 00:07:35,580
analysis

135
00:07:35,580 --> 00:07:39,029
and and idea we we propose here is

136
00:07:39,029 --> 00:07:43,069
we call interactive code imitation so
here's an example

137
00:07:43,069 --> 00:07:46,439
where I let's say you you

138
00:07:46,439 --> 00:07:51,129
you you have access some sensitive
database tables like the context is

139
00:07:51,129 --> 00:07:54,250
you have some security you know a

140
00:07:54,250 --> 00:07:57,629
you know application security people or
security lead

141
00:07:57,629 --> 00:08:00,819
therefore project you would say these
tables

142
00:08:00,819 --> 00:08:05,750
are sensitive okay whenever you change
the state of these tables

143
00:08:05,750 --> 00:08:09,740
you need to do to access control when
you do protection of

144
00:08:09,740 --> 00:08:13,139
see surf right and so what we do then

145
00:08:13,139 --> 00:08:16,810
he was used to clear that this is all
policy-driven you can writing rules

146
00:08:16,810 --> 00:08:21,289
it's not hard wired into the code and as
developers write code

147
00:08:21,289 --> 00:08:25,639
that touches these tables we threw up
warning I

148
00:08:25,639 --> 00:08:30,479
we threw up warning at the level of your
entry-level method whether it's a

149
00:08:30,479 --> 00:08:34,550
an action or servlet something that
starts your web transaction

150
00:08:34,550 --> 00:08:37,789
so the reason we throw up that
particular warning

151
00:08:37,789 --> 00:08:40,969
and you go back at flag is because

152
00:08:40,969 --> 00:08:45,050
in this procedure in this function call
if we go Joe into it

153
00:08:45,050 --> 00:08:48,880
it actually Access database

154
00:08:48,880 --> 00:08:53,390
writes a SQL statement so our rules says
if you touch this table

155
00:08:53,390 --> 00:08:56,500
we watching the n.o take for for access
control of cell

156
00:08:56,500 --> 00:08:59,709
so then you have the the warning so if
you click on this

157
00:08:59,709 --> 00:09:04,770
flack we ask you to show us where you
access control logic

158
00:09:04,770 --> 00:09:09,319
not not every sort of piece of code
passes as access control logic

159
00:09:09,319 --> 00:09:13,310
they must be ballin expressions so in
this particular case

160
00:09:13,310 --> 00:09:17,970
you wanna lol you want entertains you go
back and you say okay here is

161
00:09:17,970 --> 00:09:21,130
checking the user session is not now

162
00:09:21,130 --> 00:09:25,910
I am NOT a tad and then there's another
one that the user actually

163
00:09:25,910 --> 00:09:31,380
owns the account me now

164
00:09:31,380 --> 00:09:35,100
so this information again is stored in
the meta data they're basically says

165
00:09:35,100 --> 00:09:39,990
for this particular access control those
these are actually my logic

166
00:09:39,990 --> 00:09:43,270
yet does the access control check now
just to show you

167
00:09:43,270 --> 00:09:46,630
if you just throw some you know like
assignment statement

168
00:09:46,630 --> 00:09:50,790
you tried and noted that you can add a
third statement and because it's not a

169
00:09:50,790 --> 00:09:51,410
bully in

170
00:09:51,410 --> 00:09:55,250
expression aside it's going just ignore
it so it's only looking for

171
00:09:55,250 --> 00:09:59,630
Boolean expressions there are connected
along the execution paths understands

172
00:09:59,630 --> 00:09:59,910
their

173
00:09:59,910 --> 00:10:03,430
the control flow path acts now the

174
00:10:03,430 --> 00:10:06,870
the interesting idea the proposal we
have is you know we

175
00:10:06,870 --> 00:10:10,970
also hurt some speakers talk about code
with you being

176
00:10:10,970 --> 00:10:14,899
this great idea cocoa with you a call
with you is incredibly difficult

177
00:10:14,899 --> 00:10:18,699
one of the reasons is in progress with
difficult is because you are you you

178
00:10:18,699 --> 00:10:20,850
gotta talk to someone is what you
actually did

179
00:10:20,850 --> 00:10:24,870
right so we're trying to do is you know
doesn't solve all the problems

180
00:10:24,870 --> 00:10:29,220
but the the hypothesis is with the to
like this

181
00:10:29,220 --> 00:10:32,490
you could start build some critical and
notations

182
00:10:32,490 --> 00:10:35,779
so that somebody without a head actually
having to talk to

183
00:10:35,779 --> 00:10:40,160
sit down face to face with their
developer I can pull up to code and say

184
00:10:40,160 --> 00:10:44,699
you now uniform I for my organization
when you touch this

185
00:10:44,699 --> 00:10:48,490
piece of data I wanna make sure what
somebody inspected the code

186
00:10:48,490 --> 00:10:51,519
and in the talking actually give you
some some some ideas

187
00:10:51,519 --> 00:10:55,800
yes are

188
00:10:55,800 --> 00:10:59,069
it in our current implementation no

189
00:10:59,069 --> 00:11:03,370
okay but you know there's no reason why
should you could save this with

190
00:11:03,370 --> 00:11:07,579
along with Madina so when you open up
make in ALK refurbished as long as you

191
00:11:07,579 --> 00:11:07,829
are

192
00:11:07,779 --> 00:11:10,900
your workspace is alive yes but if you
kill the app

193
00:11:10,900 --> 00:11:14,380
you kill the workspace week we have you
know is experimental we haven't gotten

194
00:11:14,380 --> 00:11:15,199
to the point if

195
00:11:15,199 --> 00:11:22,199
sort of making that persist yet yet

196
00:11:22,910 --> 00:11:26,980
okay but E their %ah to use UI issues
are

197
00:11:26,980 --> 00:11:31,010
obviously okay but that this is the idea
is you know that this is the proposition

198
00:11:31,010 --> 00:11:34,010
back so so those are the just give you a

199
00:11:34,010 --> 00:11:38,370
a sort of a very quick a taste up what

200
00:11:38,370 --> 00:11:42,439
this interactive static analysis looks
like a let's go back to their

201
00:11:42,439 --> 00:11:49,439
their presentation

202
00:11:51,949 --> 00:11:55,540
that back so again to recruit due to

203
00:11:55,540 --> 00:11:59,899
rehash it is a interactive data phone as
is this policy German take advantage

204
00:11:59,899 --> 00:12:00,519
over

205
00:12:00,519 --> 00:12:04,079
you know essentially popular influences
algorithms

206
00:12:04,079 --> 00:12:07,889
we want to be my an assist developers
fix each team source

207
00:12:07,889 --> 00:12:11,029
for automatic validation and and code
refactoring

208
00:12:11,029 --> 00:12:14,670
and instantly we have to analyse the
code

209
00:12:14,670 --> 00:12:19,379
with the cup control flow analysis we
identify critical sensitive

210
00:12:19,379 --> 00:12:23,910
operational cold and in this is the part
when I mean by leveraging application

211
00:12:23,910 --> 00:12:25,480
context and develop a knowledge

212
00:12:25,480 --> 00:12:28,939
to develop as they are writing code is
he okay where did you do it

213
00:12:28,939 --> 00:12:32,170
we believe that is the hypothesis is
that's the time

214
00:12:32,170 --> 00:12:35,779
the most familiar with the application
context and knowledge they could provide

215
00:12:35,779 --> 00:12:36,910
that information

216
00:12:36,910 --> 00:12:40,679
and when I'll show you is how this kind
of information

217
00:12:40,679 --> 00:12:44,389
can actually be used to do additional
static analysis

218
00:12:44,389 --> 00:12:48,439
things that you couldn't do in typical
static analysis tools

219
00:12:48,439 --> 00:12:51,879
today so I arm

220
00:12:51,879 --> 00:12:55,569
the subscript so

221
00:12:55,569 --> 00:12:59,269
so so so to give you an idea of what
sort of analysis you could do

222
00:12:59,269 --> 00:13:02,749
with this additional information that
you could couldn't easily do with

223
00:13:02,749 --> 00:13:07,129
current static analysis to so so imagine
this example give your country code

224
00:13:07,129 --> 00:13:08,249
example later on

225
00:13:08,249 --> 00:13:12,790
sorry have some kind kinda web entry
right and then it goes to some database

226
00:13:12,790 --> 00:13:13,600
access

227
00:13:13,600 --> 00:13:17,360
any you ask a developer see where is
your access control check see for

228
00:13:17,360 --> 00:13:18,389
example ceaser

229
00:13:18,389 --> 00:13:21,470
protection for that particular update
and then to

230
00:13:21,470 --> 00:13:25,600
this quickly sign on the side is where
the annotation s

231
00:13:25,600 --> 00:13:29,040
and with that information we can run

232
00:13:29,040 --> 00:13:32,429
static analysis by looking at all
possible paths

233
00:13:32,429 --> 00:13:36,169
from all possible where the entry to
that particular

234
00:13:36,169 --> 00:13:39,379
database operation and if we find

235
00:13:39,379 --> 00:13:43,490
there is a path along which there is no
annotation

236
00:13:43,490 --> 00:13:47,509
then that is a possible point for what

237
00:13:47,509 --> 00:13:50,869
for bypassing authentic check like for
access control so

238
00:13:50,869 --> 00:13:54,850
so we actually have found Cole found
those kinds of on ability seeing

239
00:13:54,850 --> 00:13:58,799
in real life called and I'll show you an
example that now that's the kind of

240
00:13:58,799 --> 00:13:59,839
analysis that you

241
00:13:59,839 --> 00:14:04,610
couldn't really do easily with current
static analysis tool because

242
00:14:04,610 --> 00:14:08,399
the transfer of knowledge between your
developers and

243
00:14:08,399 --> 00:14:12,779
you are security cold auditors sort of
the white walls to do that is just

244
00:14:12,779 --> 00:14:18,819
so complex it's just not going to happen
and so now I'm gonna talk to you a

245
00:14:18,819 --> 00:14:21,119
little bit about the valuation this is
great so

246
00:14:21,119 --> 00:14:24,329
you know would research when I T sort of

247
00:14:24,329 --> 00:14:28,759
product so so we have to say you know
how well that works

248
00:14:28,759 --> 00:14:32,029
so we we r we will we wait we the

249
00:14:32,029 --> 00:14:35,689
get a in-depth analysis of an open
source project Apache roll-up

250
00:14:35,689 --> 00:14:39,309
which has about 65,000 lines have Java
code

251
00:14:39,309 --> 00:14:42,549
and it's quite the quite Whiteley you so
if you do know

252
00:14:42,549 --> 00:14:45,910
Google search powered by Lola no public
over million

253
00:14:45,910 --> 00:14:50,049
sites pop-up s actually actively
maintained so

254
00:14:50,049 --> 00:14:55,490
is a reasonably well-maintained open
source project so we did his first we'll

255
00:14:55,490 --> 00:14:56,179
look at the

256
00:14:56,179 --> 00:14:59,339
evaluation up interactive data flow
analysis we take their

257
00:14:59,339 --> 00:15:03,289
Apache roller we benchmarked against
fortify s yet

258
00:15:03,289 --> 00:15:06,980
so we have a John Milton some of you may
know him

259
00:15:06,980 --> 00:15:10,819
is here at the conference is that the
the lead for an abscess a project

260
00:15:10,819 --> 00:15:14,110
and happens to be a former student of
mine so

261
00:15:14,110 --> 00:15:17,549
so I said John hey you know I know you
do a lot of static analysis why don't

262
00:15:17,549 --> 00:15:19,879
you do a benchmark for C span two days

263
00:15:19,879 --> 00:15:23,879
did a professional job of doing static
analysis on

264
00:15:23,879 --> 00:15:27,549
I suppose what he would have done for
for a for commercial job

265
00:15:27,549 --> 00:15:31,069
and then what we did was we we we we we
we ran this

266
00:15:31,069 --> 00:15:35,209
against side and compare our results
against his results wheezing

267
00:15:35,209 --> 00:15:38,619
that as Oracle so we want what we found
was

268
00:15:38,619 --> 00:15:45,100
that aside found were only looking for a
site is only looking for 10 source

269
00:15:45,100 --> 00:15:46,429
obligation kinds of problems

270
00:15:46,429 --> 00:15:50,740
so ninety-two percent of the problems he
found a site also found right

271
00:15:50,740 --> 00:15:56,660
and I'll %uh there are two issues that
not detected by side but mostly those

272
00:15:56,660 --> 00:15:57,129
are

273
00:15:57,129 --> 00:16:01,689
GSP issues we haven't really implemented
GSP detection in our

274
00:16:01,689 --> 00:16:04,480
aside yet there's no reason why we
couldn't it just you know it's a

275
00:16:04,480 --> 00:16:05,610
research prototype

276
00:16:05,610 --> 00:16:09,249
we there some struts fun a

277
00:16:09,249 --> 00:16:12,769
structures yet that again we have not
implement its ok to the ones that that

278
00:16:12,769 --> 00:16:14,610
that's not covered are the ones that

279
00:16:14,610 --> 00:16:18,169
we quit easily extend our our prototype

280
00:16:18,169 --> 00:16:22,029
to deal with we also found some more

281
00:16:22,029 --> 00:16:25,459
things that's what if I didn't recognize
as

282
00:16:25,459 --> 00:16:28,509
as as problems but we found that there
were problems

283
00:16:28,509 --> 00:16:31,949
so so these are problems you're
basically fall into two categories:

284
00:16:31,949 --> 00:16:35,019
one category is I'll

285
00:16:35,019 --> 00:16:38,610
uuuu you use you red untrusted data

286
00:16:38,610 --> 00:16:42,629
but you sort of didn't do anything with
it so fortify says since it doesn't do

287
00:16:42,629 --> 00:16:44,269
anything now have the worst for

288
00:16:44,269 --> 00:16:48,279
a trigger so I'm not gonna worry about
whereas we take the approach

289
00:16:48,279 --> 00:16:52,899
that says if you touch and trusted data
we ask you to validate

290
00:16:52,899 --> 00:16:55,909
right now the philosophy there is

291
00:16:55,909 --> 00:16:59,679
eventually somehow this day to make it
used

292
00:16:59,679 --> 00:17:03,730
to extension it's better to sort of
validated the beginning so those for you

293
00:17:03,730 --> 00:17:04,299
to this can

294
00:17:04,299 --> 00:17:07,939
with there are some some the a

295
00:17:07,939 --> 00:17:11,289
false positive as well so example of
course positive is

296
00:17:11,289 --> 00:17:15,139
you know somebody's weeding in a binary
value and it can only be interpreted as

297
00:17:15,139 --> 00:17:16,299
to enforce

298
00:17:16,299 --> 00:17:19,589
so a so so so so you know that's that's

299
00:17:19,589 --> 00:17:23,579
that's very application-specific and yes
I would be able to tell that so there

300
00:17:23,579 --> 00:17:24,500
are some love

301
00:17:24,500 --> 00:17:28,600
of those kinds of things and out of the
120 at 118

302
00:17:28,600 --> 00:17:32,480
we we recognize we we we classify 24 as
being

303
00:17:32,480 --> 00:17:36,440
up that type know those with it false
positives

304
00:17:36,440 --> 00:17:40,000
we also evaluated interactive control
flow analysis

305
00:17:40,000 --> 00:17:43,850
so what what what what to wear again we
did is again remember

306
00:17:43,850 --> 00:17:48,250
interactive control for an ass is about
annotation so we ran

307
00:17:48,250 --> 00:17:51,629
aside against a

308
00:17:51,629 --> 00:17:55,149
against wrought by the way both the the

309
00:17:55,149 --> 00:17:59,010
this version is the primary by former
student of mine she's just a pet

310
00:17:59,010 --> 00:18:02,690
defender a PhD dissertation so so the so
we we we sort of

311
00:18:02,690 --> 00:18:06,360
took a code we ran it against aside

312
00:18:06,360 --> 00:18:10,879
and a end so we simulated what the
developer would have to go through if

313
00:18:10,879 --> 00:18:13,230
they were writing the code using soft

314
00:18:13,230 --> 00:18:17,210
and we're specifically looking for
ceaser protection so whenever

315
00:18:17,210 --> 00:18:20,590
the the a rolla changes

316
00:18:20,590 --> 00:18:23,669
it stayed at its state you know ads you
know for example

317
00:18:23,669 --> 00:18:28,320
Adam add a blog entry changes its state
we asked where is the ceasar protection

318
00:18:28,320 --> 00:18:29,139
mechanism

319
00:18:29,139 --> 00:18:32,629
okay and sure enough we found 70 days

320
00:18:32,629 --> 00:18:36,049
there were seven for abilities that
started at least

321
00:18:36,049 --> 00:18:40,789
from Laura 31 to roll a 5-1 which is the
current release

322
00:18:40,789 --> 00:18:44,330
that yup they they've done numerous

323
00:18:44,330 --> 00:18:48,129
face lifts in frameworks in all these
jazz/nu I

324
00:18:48,129 --> 00:18:51,139
but those ceaser protection coaches
would have sailed on

325
00:18:51,139 --> 00:18:54,830
so we can test it all the versions in
the middle they all have these problems

326
00:18:54,830 --> 00:18:59,590
we r reported to the robot roll a team
and a fixed it any credit at us for

327
00:18:59,590 --> 00:19:03,059
for finding those bodies series so so
that's what I've

328
00:19:03,059 --> 00:19:06,720
email mine is at least preliminary proof

329
00:19:06,720 --> 00:19:10,139
that if you have something like that
hate you know this is basically

330
00:19:10,139 --> 00:19:14,730
not rocket science race just when you're
writing code did the the toes as he

331
00:19:14,730 --> 00:19:16,440
weighs you see self-protection

332
00:19:16,440 --> 00:19:20,379
in in we we think that you know people
know what what to do but he's pick up

333
00:19:20,379 --> 00:19:21,820
for whatever reason

334
00:19:21,820 --> 00:19:25,399
so here is an example this is an actual
cold so

335
00:19:25,399 --> 00:19:29,520
you as you can see that this on weblog
seve

336
00:19:29,520 --> 00:19:33,580
well web entry this is when rolla
commits to

337
00:19:33,580 --> 00:19:37,529
the web entry to the database and and at
that point we would have

338
00:19:37,529 --> 00:19:42,309
as you see here are with the red flag
was well where's your ceaser protection

339
00:19:42,309 --> 00:19:46,429
and the developer will look at this
incest okay I checked for authentication

340
00:19:46,429 --> 00:19:48,440
but I didn't check for C serve so

341
00:19:48,440 --> 00:19:51,470
hopefully somebody would have thought
about it in

342
00:19:51,470 --> 00:19:54,549
added to the two added the ceasar
protection enough course

343
00:19:54,549 --> 00:19:57,559
we cannot ensure with the added it
correctly or not but

344
00:19:57,559 --> 00:20:01,659
least they have they would have to think
about it

345
00:20:01,659 --> 00:20:04,850
right so so that's a

346
00:20:04,850 --> 00:20:08,899
the quick overview love evaluation you
know how effective it is we have

347
00:20:08,899 --> 00:20:10,510
supplementary data

348
00:20:10,510 --> 00:20:15,360
against he open source project that
seems like it should work

349
00:20:15,360 --> 00:20:18,409
okay we also thought about education is
we

350
00:20:18,409 --> 00:20:21,960
started out with this presentation see
well you know universities

351
00:20:21,960 --> 00:20:27,030
don't teach secure coding the reason is
most faculty like developers

352
00:20:27,030 --> 00:20:31,409
never training secure complete right and
we have security crisis

353
00:20:31,409 --> 00:20:35,220
right we talk about their policies in a

354
00:20:35,220 --> 00:20:38,950
you know access control and all that but
we don't necessary connect this week

355
00:20:38,950 --> 00:20:39,780
called

356
00:20:39,780 --> 00:20:43,580
right and the on and the

357
00:20:43,580 --> 00:20:48,649
so so so the same problem that we have
industry so how about using aside

358
00:20:48,649 --> 00:20:51,899
as an education towards because most are
students

359
00:20:51,899 --> 00:20:55,600
go through the four-year computer
science program will have to use Eclipse

360
00:20:55,600 --> 00:20:56,350
Java

361
00:20:56,350 --> 00:21:00,100
to write their projects and stuff so
that's a hypothesis is why do we just

362
00:21:00,100 --> 00:21:00,990
throw this

363
00:21:00,990 --> 00:21:04,580
in the air and then and see people can
learn

364
00:21:04,580 --> 00:21:08,559
bye bye by using this tool and that we
we we we

365
00:21:08,559 --> 00:21:11,859
got a grant from the National Science
Foundation so we we built

366
00:21:11,859 --> 00:21:15,340
this this evaluation exercise

367
00:21:15,340 --> 00:21:19,500
so what we did was as though we do a
gamble when we do a demo for the

368
00:21:19,500 --> 00:21:25,169
education version now education versions
essentially the same version you saw

369
00:21:25,169 --> 00:21:28,830
but what we did was we had a lot more
explanations

370
00:21:28,830 --> 00:21:32,220
because we thought that you know these
people

371
00:21:32,220 --> 00:21:35,609
would have never heard about secure
programming date you make many of them

372
00:21:35,609 --> 00:21:36,549
have never heard about

373
00:21:36,549 --> 00:21:40,990
SQL injection so so when we throw
warning at these people

374
00:21:40,990 --> 00:21:45,330
we won it sort of explain to them what
the so we wait so this is our first

375
00:21:45,330 --> 00:21:46,070
attempt at

376
00:21:46,070 --> 00:21:50,149
at doing that a few click on this thing
again you see those

377
00:21:50,149 --> 00:21:53,950
I along with the the choices we have we
added that the

378
00:21:53,950 --> 00:21:57,450
the REIT read more button in which case
we

379
00:21:57,450 --> 00:22:00,980
up

380
00:22:00,980 --> 00:22:07,980
we go online

381
00:22:08,340 --> 00:22:11,760
in a week we we sought to explain what
is in Provo

382
00:22:11,760 --> 00:22:15,540
nation you go on and a and the type of
attacks

383
00:22:15,540 --> 00:22:20,720
and we also Linkin whatever appropriate
material from OS website so

384
00:22:20,720 --> 00:22:24,080
so you from there you can have jump off
points 20 s

385
00:22:24,080 --> 00:22:28,110
I

386
00:22:28,110 --> 00:22:31,130
so so so so it is a as an integration

387
00:22:31,130 --> 00:22:34,390
that's cool let's look at it the the

388
00:22:34,390 --> 00:22:41,299
dynamic SQL case I so here's dynamic SQL
statement

389
00:22:41,299 --> 00:22:44,690
you do it we'd noises don't do this but
we also tell people

390
00:22:44,690 --> 00:22:47,950
what they should do so here is a a

391
00:22:47,950 --> 00:22:51,370
page explaining what is SQL injection

392
00:22:51,370 --> 00:22:55,190
and and how to do it right this case use
parameterized

393
00:22:55,190 --> 00:22:59,440
SQL statements we have sample cold
people can look at

394
00:22:59,440 --> 00:23:04,480
so-and-so right so this is the version
we implement it was designed to be used

395
00:23:04,480 --> 00:23:05,610
by students

396
00:23:05,610 --> 00:23:09,919
and so what we did was okay you know we
have to evaluate how effective that is

397
00:23:09,919 --> 00:23:10,630
right so

398
00:23:10,630 --> 00:23:13,790
let's go back to their thing right so

399
00:23:13,790 --> 00:23:17,350
so we did evaluation I we

400
00:23:17,350 --> 00:23:21,010
we just a just before the a this this

401
00:23:21,010 --> 00:23:24,130
this conference so our paper got
accepted so so so feel

402
00:23:24,130 --> 00:23:28,780
much more comfortable talking about it
so we we recorded 20 graduate students

403
00:23:28,780 --> 00:23:32,410
who have no secure programming training
and awe

404
00:23:32,410 --> 00:23:36,020
this they were just fresh master
students

405
00:23:36,020 --> 00:23:40,040
or senior undergraduate students and
they're working on a web based

406
00:23:40,040 --> 00:23:41,710
application project that

407
00:23:41,710 --> 00:23:44,780
that uses no typical stuff SQL you know

408
00:23:44,780 --> 00:23:49,940
is a java-based web application and we
asked them to work in the lab

409
00:23:49,940 --> 00:23:52,950
our machines with with sightings to
offer to

410
00:23:52,950 --> 00:23:56,290
for three hours we give them a little
bit incentives for them to do that

411
00:23:56,290 --> 00:24:00,690
and and we administer its a set of
questions

412
00:24:00,690 --> 00:24:03,880
which are true force questions before
the

413
00:24:03,880 --> 00:24:08,610
start the project right so these are
your typical secure programming kinds

414
00:24:08,610 --> 00:24:09,230
questions

415
00:24:09,230 --> 00:24:12,900
and then we ask them to work three hours
on their project

416
00:24:12,900 --> 00:24:16,940
and the day came by the way this is all
transparent they can save their

417
00:24:16,940 --> 00:24:20,820
project as a WAV file and then go home
and continue work on

418
00:24:20,820 --> 00:24:24,260
on their on the on their laptops so this
is what do we do

419
00:24:24,260 --> 00:24:27,980
and we also do a post a

420
00:24:27,980 --> 00:24:32,880
three-hour test ever was weekend version
of our test

421
00:24:32,880 --> 00:24:37,070
that that very much similar to minimize
quite different set of questions

422
00:24:37,070 --> 00:24:41,540
also true false questions we test them
after they have used to of course

423
00:24:41,540 --> 00:24:44,870
now what you would expect big being true
false questions

424
00:24:44,870 --> 00:24:48,419
you know you get 50 percent chance of
getting like so

425
00:24:48,419 --> 00:24:53,820
indeed before that before they used a
tool the average score is like 53

426
00:24:53,820 --> 00:24:58,830
percept so it's roughly about you know
random but after

427
00:24:58,830 --> 00:25:02,040
they got ten percent increase okay and
we

428
00:25:02,040 --> 00:25:05,610
we ran through your nose status
statistical analysis tools and it shows

429
00:25:05,610 --> 00:25:07,190
it's very sick statistically

430
00:25:07,190 --> 00:25:10,980
significant so the idea is you know just
after using three hours

431
00:25:10,980 --> 00:25:14,070
AP you begin to dry in the concept

432
00:25:14,070 --> 00:25:17,280
input validation are putting coding and
things like that

433
00:25:17,280 --> 00:25:21,929
this is not with anybody teaching them
just by reading the material going to OS

434
00:25:21,929 --> 00:25:25,840
understanding those guys information
another interesting thing is

435
00:25:25,840 --> 00:25:29,610
I remember the SQL statements right

436
00:25:29,610 --> 00:25:33,260
so for all the students know love them
use piercings

437
00:25:33,260 --> 00:25:36,520
they all use Google's we act which
because we week or their

438
00:25:36,520 --> 00:25:41,140
keystrokes using the screen capture
functions will we see them actually goal

439
00:25:41,140 --> 00:25:44,380
go online search and if I guess would be
fine

440
00:25:44,380 --> 00:25:48,460
if I dynamic SQL statements are the cut
and paste they put stuff in there

441
00:25:48,460 --> 00:25:54,030
none of them use pistons but aside ones
that don't do that in years that the

442
00:25:54,030 --> 00:25:54,549
staff

443
00:25:54,549 --> 00:25:58,120
even though you know for for ethical
purposes we have to go through ethical

444
00:25:58,120 --> 00:26:00,330
review boards for human subjects studies

445
00:26:00,330 --> 00:26:05,120
we could not give people extra credit
for doing security right because the

446
00:26:05,120 --> 00:26:07,770
course is not about security you know we
we do in

447
00:26:07,770 --> 00:26:11,179
do not interfere with that the way the
courses taught so so

448
00:26:11,179 --> 00:26:15,169
getting the security right doesn't give
students an extra points

449
00:26:15,169 --> 00:26:18,419
but even in the context of that are

450
00:26:18,419 --> 00:26:23,840
25 percent of the students voluntarily
change the dynamic SQL statements

451
00:26:23,840 --> 00:26:27,470
to prepare it stings right so so that's
that's kinda very heartening

452
00:26:27,470 --> 00:26:31,450
I mean iraqi just so so that students
really care the CD stains is a

453
00:26:31,450 --> 00:26:34,270
you probably have heard about SQL
injection but they don't really don't

454
00:26:34,270 --> 00:26:35,000
know what it is

455
00:26:35,000 --> 00:26:38,120
so the speak understand it's a bad thing
we

456
00:26:38,120 --> 00:26:41,909
what we see is for those 25 percent
students they would actually go onto

457
00:26:41,909 --> 00:26:45,669
Google search find more about how to
write

458
00:26:45,669 --> 00:26:49,250
PSQ still prepared ask you still
statements right

459
00:26:49,250 --> 00:26:54,040
and then sort of adapted in but then got
that's that's that's when interest

460
00:26:54,040 --> 00:26:57,490
so so that's also any cell preliminary
results shows that

461
00:26:57,490 --> 00:27:01,179
if you have something like that and
imagine you can reinforce this

462
00:27:01,179 --> 00:27:05,190
throughout classrooms with professors
hopefully after four years people see

463
00:27:05,190 --> 00:27:06,659
this thing repeatedly

464
00:27:06,659 --> 00:27:11,880
that the no understand little bit about
secure programming when they graduate

465
00:27:11,880 --> 00:27:15,090
saw so so so so that's what I've

466
00:27:15,090 --> 00:27:19,090
concludes my second part of my talk
first part is sorta overviews is a good

467
00:27:19,090 --> 00:27:19,700
demo

468
00:27:19,700 --> 00:27:23,280
second part is evaluation well how well
it works

469
00:27:23,280 --> 00:27:27,100
now I'm gonna move to the third part of
the talk which is some of the the

470
00:27:27,100 --> 00:27:29,050
research issues they're working on

471
00:27:29,050 --> 00:27:32,990
and this is not implemented you know
best stuff is doing in the laboratory

472
00:27:32,990 --> 00:27:34,429
situation

473
00:27:34,429 --> 00:27:37,890
now the current implementation of static
analysis is

474
00:27:37,890 --> 00:27:42,210
even though is interactive from a user's
perspective but we are rebuilding their

475
00:27:42,210 --> 00:27:45,790
the analysis every time somebody it's a
key right which is

476
00:27:45,790 --> 00:27:49,270
you know force for custom project which
is fine you know you know the computers

477
00:27:49,270 --> 00:27:51,120
a fast enough it's not a big problem

478
00:27:51,120 --> 00:27:54,659
but for for larger projects that's
that's obviously not good work

479
00:27:54,659 --> 00:27:58,130
so what we're gonna tried what we're
doing on this actually part of his

480
00:27:58,130 --> 00:28:01,800
PhD dissertation is to look at
multi-threaded

481
00:28:01,800 --> 00:28:06,230
incremental static analysis out with
them so the idea is we take advantage of

482
00:28:06,230 --> 00:28:06,720
the

483
00:28:06,720 --> 00:28:10,530
eclipse architecture actually its
architect it very nicely

484
00:28:10,530 --> 00:28:13,669
that you have a sort of the GATT

485
00:28:13,669 --> 00:28:16,880
to have base and then you have a thread
that

486
00:28:16,880 --> 00:28:20,960
that deals with you I because eclipse
want to make sure that the use our

487
00:28:20,960 --> 00:28:24,649
interaction guess highest priority you
do not want to freeze the user from

488
00:28:24,649 --> 00:28:25,570
doing anything else

489
00:28:25,570 --> 00:28:29,450
I soda the plugin are replicating
separate

490
00:28:29,450 --> 00:28:32,610
threats so so what we want to do is
wonder

491
00:28:32,610 --> 00:28:36,880
take advantage of this architecture by
running our interactive data flow and

492
00:28:36,880 --> 00:28:38,140
control flow analysis

493
00:28:38,140 --> 00:28:42,040
in the background utilizing multi-core
processors

494
00:28:42,040 --> 00:28:46,880
and then the hope the idea is as not
Google next slide

495
00:28:46,880 --> 00:28:49,880
so as so as

496
00:28:49,880 --> 00:28:53,049
developers tight being cold

497
00:28:53,049 --> 00:28:58,250
and they changed the EST we want to be
able to see well has the st. changed in

498
00:28:58,250 --> 00:29:00,140
and build incremental

499
00:29:00,140 --> 00:29:03,690
changes into our control flow diagram
and data flow diagrams

500
00:29:03,690 --> 00:29:07,200
and and then perform our analysis and
get feedback

501
00:29:07,200 --> 00:29:11,720
to that to the developers so so we're
working on this this interactive

502
00:29:11,720 --> 00:29:16,280
version incremental version of their the
out with

503
00:29:16,280 --> 00:29:19,460
I also wanna talk a little bit about the
pass coverage

504
00:29:19,460 --> 00:29:22,490
out with them which I I talk to you a
little bit about which is

505
00:29:22,490 --> 00:29:27,080
in West you have the analysis how do you
take advantage of this information

506
00:29:27,080 --> 00:29:30,570
and find additional phone abilities so
why

507
00:29:30,570 --> 00:29:34,409
so this is this is now with what we call
the the path coverage in the analysis

508
00:29:34,409 --> 00:29:37,850
this is particular asses is again
looking for

509
00:29:37,850 --> 00:29:41,600
invariants you know we assuming that the
user is going to give us

510
00:29:41,600 --> 00:29:44,640
those in the that the developers are
going to give us those in variance

511
00:29:44,640 --> 00:29:47,990
and then I will go is to look at all
possible paths

512
00:29:47,990 --> 00:29:52,110
throughout the execution of the program
see if all the paths are covered

513
00:29:52,110 --> 00:29:55,520
by control by by bowling checks

514
00:29:55,520 --> 00:29:58,790
if they are not if they are not covered
then that

515
00:29:58,790 --> 00:30:03,659
signify some kinda bypass probs so week
what we found this was with a also

516
00:30:03,659 --> 00:30:05,570
reported last year when we were

517
00:30:05,570 --> 00:30:10,030
and OS last year but it was not
implement it was kinda fury

518
00:30:10,030 --> 00:30:13,200
and a so-so over the last

519
00:30:13,200 --> 00:30:16,559
over this past summer he actually
implemented this out so we have a

520
00:30:16,559 --> 00:30:18,890
version of this out with them implement
it already

521
00:30:18,890 --> 00:30:22,220
and again we use rolla as an example

522
00:30:22,220 --> 00:30:27,149
so here's an actual piece of coding
roller that had this phone ability in it

523
00:30:27,149 --> 00:30:31,020
and I and if you go on to their okay so
here is a a

524
00:30:31,020 --> 00:30:36,049
piece of cold where a the the one in the

525
00:30:36,049 --> 00:30:39,159
in in pink at you know process kept

526
00:30:39,159 --> 00:30:42,510
right so this is where you you get the
work to right

527
00:30:42,510 --> 00:30:45,649
and the reason its its its its

528
00:30:45,649 --> 00:30:50,600
diane is because that's where the the
the database gets update

529
00:30:50,600 --> 00:30:54,080
iraq and the and it seems wasn't talking

530
00:30:54,080 --> 00:30:58,590
get CA who is the basic accepted and all
you access control

531
00:30:58,590 --> 00:31:01,610
logic check are in what is

532
00:31:01,610 --> 00:31:05,800
the golden box in the handle the what is
this comp hando

533
00:31:05,800 --> 00:31:09,780
have the %ah get handler right so so so
we we we we

534
00:31:09,780 --> 00:31:13,100
again we simulated what aside would have
done with country with

535
00:31:13,100 --> 00:31:16,440
way with the and notation so we ask you
you say hey

536
00:31:16,440 --> 00:31:19,530
I look at you handle process get which
will

537
00:31:19,530 --> 00:31:23,379
update your database right where you are
access control check

538
00:31:23,379 --> 00:31:26,929
for this particular operation and a and
then you

539
00:31:26,929 --> 00:31:30,260
go through the code and and and and and
this is handy week

540
00:31:30,260 --> 00:31:34,190
a there's a there's a routine called a
authenticate

541
00:31:34,190 --> 00:31:37,300
and then there is a and use can take a
seat down there

542
00:31:37,300 --> 00:31:41,070
it 'cause a causa verified user

543
00:31:41,070 --> 00:31:44,300
towards the end right and then so

544
00:31:44,300 --> 00:31:48,370
so inside verified user you have you the
check abuser

545
00:31:48,370 --> 00:31:51,790
you know user ID and passwords right so
from

546
00:31:51,790 --> 00:31:54,970
from a developer perspective and
rotation is is

547
00:31:54,970 --> 00:31:59,570
fairly simple I've coded to verify user
he wrote two checks check user ID check

548
00:31:59,570 --> 00:32:00,260
password

549
00:32:00,260 --> 00:32:03,879
here's the access control I've done my
job right

550
00:32:03,879 --> 00:32:06,929
but if you go back to the code

551
00:32:06,929 --> 00:32:12,480
because verified user is called inside
this nested

552
00:32:12,480 --> 00:32:16,090
if statement right so if the conditions

553
00:32:16,090 --> 00:32:19,990
underlined in red female

554
00:32:19,990 --> 00:32:24,000
right the user doesn't gets verified

555
00:32:24,000 --> 00:32:27,330
okay and %uh so that's an excess pika
pika so-so

556
00:32:27,330 --> 00:32:30,629
the pass coverage out with will be able
to find that because you've

557
00:32:30,629 --> 00:32:35,020
you annotated user ID and password and
we found these paths

558
00:32:35,020 --> 00:32:38,460
that will bypass you access control we
will fight this as a

559
00:32:38,460 --> 00:32:42,100
as a vulnerability and a and and I i
suppose you can

560
00:32:42,100 --> 00:32:46,710
imagine yet you know in their in in
revising and riding coat

561
00:32:46,710 --> 00:32:50,429
these things things like that could
happen you you take things you put in in

562
00:32:50,429 --> 00:32:51,460
a Reuben

563
00:32:51,460 --> 00:32:55,129
and then and pretty soon you lose track
of which past few you actually did the

564
00:32:55,129 --> 00:32:55,659
check

565
00:32:55,659 --> 00:33:00,040
so so-so we take this issue again some
preliminary prove

566
00:33:00,040 --> 00:33:04,280
that butts like they're out there and I
and II

567
00:33:04,280 --> 00:33:07,840
it and that's really difficult to find
with

568
00:33:07,840 --> 00:33:11,129
you know current static analysis tools
but again by

569
00:33:11,129 --> 00:33:14,679
leveraging the knowledge of the
developer by sort of telling us a little

570
00:33:14,679 --> 00:33:15,780
bit about

571
00:33:15,780 --> 00:33:20,050
the semantics of the code that we will
be able to to find those kinds

572
00:33:20,050 --> 00:33:24,090
is so again this is the

573
00:33:24,090 --> 00:33:27,100
picture a high-level picture
representation of this

574
00:33:27,100 --> 00:33:31,570
so we just went over to our mental
mapping up this against a West top 10 is

575
00:33:31,570 --> 00:33:32,070
OK

576
00:33:32,070 --> 00:33:35,629
what sort of problems we can't deal with
in West up to obviously injection

577
00:33:35,629 --> 00:33:36,510
attacks

578
00:33:36,510 --> 00:33:40,370
we can't deal with with the address this
with interactive data for nasa's

579
00:33:40,370 --> 00:33:44,370
cross-site scripting some parts of and
and directed the

580
00:33:44,370 --> 00:33:47,840
and validated we do rights and forwards
right

581
00:33:47,840 --> 00:33:52,169
I with control flow analysis we can do
but broken authentication

582
00:33:52,169 --> 00:33:56,010
in security iraq object reference to
when you reference an object we can see

583
00:33:56,010 --> 00:33:57,679
well where's your access control check

584
00:33:57,679 --> 00:34:01,700
annotation C serve enhance again some
parts of

585
00:34:01,700 --> 00:34:06,360
and validated redirects informants so
about 60 percent

586
00:34:06,360 --> 00:34:09,960
after the cattle grazing top 10 can be

587
00:34:09,960 --> 00:34:13,510
in some fashion addressed by this
interactive

588
00:34:13,510 --> 00:34:19,359
analysis so again a quick conclusion I
love what we have done is

589
00:34:19,359 --> 00:34:23,550
again the concept of interactive
analysis by pushing it all the way

590
00:34:23,550 --> 00:34:26,889
to the developer cide

591
00:34:26,889 --> 00:34:31,609
and again two kinds over now says data
for analysis which look at

592
00:34:31,609 --> 00:34:35,010
injection attacks the data validation
issues

593
00:34:35,010 --> 00:34:40,220
and control flow which is you know
dealing with the invariance and policies

594
00:34:40,220 --> 00:34:43,399
and we have evaluated with and

595
00:34:43,399 --> 00:34:46,730
a reasonable open source project can we
you know so

596
00:34:46,730 --> 00:34:50,520
serving a proof-of-concept things that
it might work

597
00:34:50,520 --> 00:34:54,280
and we have tested out with their
students and and see that it does have a

598
00:34:54,280 --> 00:34:55,500
fax in terms of

599
00:34:55,500 --> 00:34:58,930
helping them retaining and learn and
retain information

600
00:34:58,930 --> 00:35:02,569
and I so it's your some future work now

601
00:35:02,569 --> 00:35:05,670
obviously you know where we're working
on interactive

602
00:35:05,670 --> 00:35:09,380
out with them so that we want this
incrementally with implemented path

603
00:35:09,380 --> 00:35:11,150
coverage we now we have two

604
00:35:11,150 --> 00:35:14,260
put this together and we have to look at
performance make people

605
00:35:14,260 --> 00:35:17,500
ask you sir how fast it was not okay

606
00:35:17,500 --> 00:35:21,500
my hunch is its its it's gonna be fast

607
00:35:21,500 --> 00:35:25,800
you know we have to have the code to
prove that

608
00:35:25,800 --> 00:35:29,500
a so anyway so I I wanna acknowledge

609
00:35:29,500 --> 00:35:33,470
the National Science Foundation for
funding us this work

610
00:35:33,470 --> 00:35:37,310
fortify for giving us an education
license so that we could do this kind of

611
00:35:37,310 --> 00:35:38,030
stuff

612
00:35:38,030 --> 00:35:42,339
and the my student who is currently a
interning at fortify

613
00:35:42,339 --> 00:35:46,330
for a for implementing the first version
of of the code

614
00:35:46,330 --> 00:35:49,580
and most importantly that all our

615
00:35:49,580 --> 00:35:53,280
papers Sen some of this Co that we feel

616
00:35:53,280 --> 00:35:56,720
relatively stable are all

617
00:35:56,720 --> 00:36:00,290
Roos website in a it is our intention to

618
00:36:00,290 --> 00:36:04,670
you know eventually as we find it things
mature will with this is the place where

619
00:36:04,670 --> 00:36:08,310
all the stuff will be made available to
the community

620
00:36:08,310 --> 00:36:13,560
we love to get your feedback and and and
down the road participation contribution

621
00:36:13,560 --> 00:36:14,390
to go

622
00:36:14,390 --> 00:36:17,440
et cetera site yeah

623
00:36:17,440 --> 00:36:21,220
aversion me that the the dataflow part
is available it's is is

624
00:36:21,220 --> 00:36:25,000
we're getting ready to actually do a
second release

625
00:36:25,000 --> 00:36:28,380
the one that's currently out there is a
older version

626
00:36:28,380 --> 00:36:31,920
what you saw today will be out in Annex

627
00:36:31,920 --> 00:36:36,170
couple weeks we're doing a much more

628
00:36:36,170 --> 00:36:39,300
live study right now so so we have the
company's

629
00:36:39,300 --> 00:36:42,740
worship it out in the next few weeks we
have

630
00:36:42,740 --> 00:36:46,220
really not looked at you know this is
what the this

631
00:36:46,220 --> 00:36:49,740
obviously a lot of you usability issues

632
00:36:49,740 --> 00:36:53,470
organization issues and there's also
technology issues with

633
00:36:53,470 --> 00:36:56,720
with particularly with the way eclipse
handles things

634
00:36:56,720 --> 00:37:00,560
okay so so work very open to that

635
00:37:00,560 --> 00:37:05,390
but but our hour ago frankly is right
now to get the out with them to work and

636
00:37:05,390 --> 00:37:09,089
and get some results are in and we
haven't really gotten to that

637
00:37:09,089 --> 00:37:14,380
I mean a a theoretically there shouldn't
be any problems

638
00:37:14,380 --> 00:37:17,700
right meets just as we see is a matter
of coding

639
00:37:17,700 --> 00:37:21,490
but but but we haven't have happened I
mean whether that's better than

640
00:37:21,490 --> 00:37:24,819
than the alternative we don't know

641
00:37:24,819 --> 00:37:28,050
I think I'll we we we did look at find
bugs

642
00:37:28,050 --> 00:37:32,270
the the differences what we're trying to
do is is really interactive me

643
00:37:32,270 --> 00:37:35,520
find boxes still very much like static
analysis

644
00:37:35,520 --> 00:37:39,330
you can run static analysis for example
you can run fortify

645
00:37:39,330 --> 00:37:43,300
inside and I D right as a plugin so you
write your code you push a button you

646
00:37:43,300 --> 00:37:44,100
get with

647
00:37:44,100 --> 00:37:47,618
in you you look at the results in you
collated

648
00:37:47,619 --> 00:37:51,240
the code and what we're trying to do is

649
00:37:51,240 --> 00:37:56,010
skip that step run a continuously and
have the warnings

650
00:37:56,010 --> 00:37:59,910
be so to present it ride in the context
of the cold

651
00:37:59,910 --> 00:38:03,500
as opposed to having the developing
these two weeks look at the report

652
00:38:03,500 --> 00:38:06,740
I mean so my analogy is when I don't
programming which is like

653
00:38:06,740 --> 00:38:10,000
you know I'm many many years ago longer
than I get

654
00:38:10,000 --> 00:38:14,080
bit that you know I used to have a deck
of cards and store it in and somebody

655
00:38:14,080 --> 00:38:15,690
give the printouts and I

656
00:38:15,690 --> 00:38:19,050
I look at the look at the warnings and
figure out which like me

657
00:38:19,050 --> 00:38:22,460
that's that the mentality of static
analysis today

658
00:38:22,460 --> 00:38:26,089
essentially you read the reports and try
to figure out were China

659
00:38:26,089 --> 00:38:33,089
question closer to the

660
00:38:37,110 --> 00:38:38,970
thank you %ah

