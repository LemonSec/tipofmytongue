1
00:00:04,540 --> 00:00:08,889
well<font color="#CCCCCC"> you guys</font><font color="#E5E5E5"> I think we gonna make the</font>

2
00:00:06,430 --> 00:00:10,389
<font color="#E5E5E5">start and thanks everyone for coming my</font>

3
00:00:08,889 --> 00:00:14,280
name is James<font color="#E5E5E5"> and I'm going to be doing</font>

4
00:00:10,389 --> 00:00:18,460
a talk today and a pls anything away is

5
00:00:14,280 --> 00:00:20,169
little bit this doesn't work that's just

6
00:00:18,460 --> 00:00:22,899
<font color="#CCCCCC">a point doesn't actually change anything</font>

7
00:00:20,170 --> 00:00:24,430
so firstly is about me but I said my

8
00:00:22,899 --> 00:00:26,500
<font color="#CCCCCC">name is james johnson i'm a student</font>

9
00:00:24,430 --> 00:00:28,270
athletes Beckett universities and with

10
00:00:26,500 --> 00:00:31,119
my<font color="#E5E5E5"> final year studying computer</font>

11
00:00:28,270 --> 00:00:33,640
forensics and security app<font color="#E5E5E5"> co lsm is</font>

12
00:00:31,119 --> 00:00:36,070
being developed as part of my family

13
00:00:33,640 --> 00:00:37,930
<font color="#E5E5E5">year project an addition also heavily</font>

14
00:00:36,070 --> 00:00:40,750
involved with<font color="#E5E5E5"> lee tackling society and</font>

15
00:00:37,930 --> 00:00:43,840
also been<font color="#E5E5E5"> able to attend and the</font>

16
00:00:40,750 --> 00:00:45,340
discomfort is this quite a lot of<font color="#CCCCCC"> it and</font>

17
00:00:43,840 --> 00:00:48,270
just off the back of<font color="#CCCCCC"> that</font><font color="#E5E5E5"> as well as i'm</font>

18
00:00:45,340 --> 00:00:51,280
not<font color="#E5E5E5"> doing any work</font><font color="#CCCCCC"> or anything like</font><font color="#E5E5E5"> that</font>

19
00:00:48,270 --> 00:00:53,440
that's all there is to me greatly so

20
00:00:51,280 --> 00:00:55,750
what am I going to be talking about well

21
00:00:53,440 --> 00:00:57,550
the torque split into three sections the

22
00:00:55,750 --> 00:01:00,010
first<font color="#CCCCCC"> section is titled apples and</font>

23
00:00:57,550 --> 00:01:01,419
<font color="#CCCCCC">Packers</font><font color="#E5E5E5"> okay I'm going to go into that</font>

24
00:01:00,010 --> 00:01:03,160
<font color="#E5E5E5">in a bit more detail in a little while</font>

25
00:01:01,420 --> 00:01:05,019
second one is called<font color="#CCCCCC"> Phillips security</font>

26
00:01:03,160 --> 00:01:10,030
module framework and the last bit is

27
00:01:05,019 --> 00:01:11,920
about my module itself at<font color="#CCCCCC"> CLSA so just</font>

28
00:01:10,030 --> 00:01:13,300
did a shortened way one what I'm

29
00:01:11,920 --> 00:01:16,420
actually going to<font color="#E5E5E5"> be talking about his</font>

30
00:01:13,300 --> 00:01:19,149
access controls a load of acronyms<font color="#E5E5E5"> Mac</font>

31
00:01:16,420 --> 00:01:20,320
car back that<font color="#CCCCCC"> Apple's and hackles we go</font>

32
00:01:19,150 --> 00:01:21,909
<font color="#CCCCCC">an overall and then you'll know all of</font>

33
00:01:20,320 --> 00:01:23,020
them needed by the end of this going<font color="#E5E5E5"> to</font>

34
00:01:21,909 --> 00:01:24,850
talk about<font color="#E5E5E5"> the different Street</font>

35
00:01:23,020 --> 00:01:27,009
user-oriented and application oriented

36
00:01:24,850 --> 00:01:28,839
access controls and it talked a little

37
00:01:27,010 --> 00:01:30,850
bit about the linux kernel and Colonel

38
00:01:28,840 --> 00:01:33,580
data structures the<font color="#CCCCCC"> Linux security</font>

39
00:01:30,850 --> 00:01:35,559
module framework and then how<font color="#E5E5E5"> apps</font><font color="#CCCCCC"> Els</font>

40
00:01:33,580 --> 00:01:39,158
then uses the next security module

41
00:01:35,560 --> 00:01:42,850
framework to implement a<font color="#CCCCCC"> conditional</font>

42
00:01:39,159 --> 00:01:45,460
access<font color="#E5E5E5"> controls that doesn't work again</font>

43
00:01:42,850 --> 00:01:47,490
I'm juniper for now so first session

44
00:01:45,460 --> 00:01:49,479
section we've got apples and tackles

45
00:01:47,490 --> 00:01:52,839
we're<font color="#E5E5E5"> going to start off with access</font>

46
00:01:49,479 --> 00:01:54,729
control what is access control well a

47
00:01:52,840 --> 00:01:56,650
definition of access controls is that

48
00:01:54,729 --> 00:02:00,549
it's a set of controls to restrict

49
00:01:56,650 --> 00:02:01,570
access<font color="#E5E5E5"> to certain resources this is</font>

50
00:02:00,549 --> 00:02:02,950
something<font color="#CCCCCC"> that we all have access</font>

51
00:02:01,570 --> 00:02:04,869
control room we've got this in place

52
00:02:02,950 --> 00:02:07,660
throughout our lives our front door with

53
00:02:04,870 --> 00:02:10,570
let just anyone walk into<font color="#CCCCCC"> our house you</font>

54
00:02:07,660 --> 00:02:12,700
would think then we've got a work in<font color="#E5E5E5"> the</font>

55
00:02:10,570 --> 00:02:15,489
gym maybe we've access controls in place

56
00:02:12,700 --> 00:02:17,410
there when your phone might not be a

57
00:02:15,490 --> 00:02:19,750
thumbprint might be a passcode you still

58
00:02:17,410 --> 00:02:22,780
access controls in place there your

59
00:02:19,750 --> 00:02:25,390
social social networking even a roller

60
00:02:22,780 --> 00:02:27,250
coaster you have to be a certain height

61
00:02:25,390 --> 00:02:29,829
to get on that<font color="#E5E5E5"> roller coaster and you</font>

62
00:02:27,250 --> 00:02:31,180
<font color="#CCCCCC">have to</font><font color="#E5E5E5"> queue in a certain line to get</font>

63
00:02:29,830 --> 00:02:32,710
<font color="#CCCCCC">on there there's access controls before</font>

64
00:02:31,180 --> 00:02:35,740
you're allowed to get on<font color="#CCCCCC"> that roller</font>

65
00:02:32,710 --> 00:02:37,590
coaster so the app such controls I'm

66
00:02:35,740 --> 00:02:40,570
going to be talking<font color="#E5E5E5"> about is related to</font>

67
00:02:37,590 --> 00:02:43,570
computer specifically<font color="#CCCCCC"> Linux permissions</font>

68
00:02:40,570 --> 00:02:45,720
and Linux access controls so now we're

69
00:02:43,570 --> 00:02:48,070
going to<font color="#E5E5E5"> go</font><font color="#CCCCCC"> over all the acronyms are</font>

70
00:02:45,720 --> 00:02:49,210
muttered over quickly earlier we're

71
00:02:48,070 --> 00:02:51,790
<font color="#CCCCCC">going</font><font color="#E5E5E5"> to talk about deck which is</font>

72
00:02:49,210 --> 00:02:52,840
discretionary access control as part of

73
00:02:51,790 --> 00:02:55,750
that I'm going<font color="#E5E5E5"> to talk about access</font>

74
00:02:52,840 --> 00:02:57,880
control lists and the idea of<font color="#E5E5E5"> a program</font>

75
00:02:55,750 --> 00:02:58,900
based access control is and<font color="#E5E5E5"> I'm also</font>

76
00:02:57,880 --> 00:03:00,790
going<font color="#E5E5E5"> to mention</font><font color="#CCCCCC"> though it's not</font><font color="#E5E5E5"> the</font>

77
00:02:58,900 --> 00:03:02,380
topic let's talk what mandatory access

78
00:03:00,790 --> 00:03:05,470
control is and what role based access

79
00:03:02,380 --> 00:03:07,930
control is as well so we'll start what

80
00:03:05,470 --> 00:03:09,730
is an apple when a call is an access

81
00:03:07,930 --> 00:03:11,500
control<font color="#E5E5E5"> is again like I said we're</font>

82
00:03:09,730 --> 00:03:14,619
talking<font color="#CCCCCC"> about specifically here Linux</font>

83
00:03:11,500 --> 00:03:16,600
permissions and Linux access controls so

84
00:03:14,620 --> 00:03:18,790
an access control list tells a computer

85
00:03:16,600 --> 00:03:20,680
the access rights and permissions that a

86
00:03:18,790 --> 00:03:22,420
user has to a particular system object

87
00:03:20,680 --> 00:03:25,480
we spray that down a bit so the

88
00:03:22,420 --> 00:03:27,730
permissions of what the user is allowed

89
00:03:25,480 --> 00:03:29,290
<font color="#CCCCCC">to do specifically an access control is</font>

90
00:03:27,730 --> 00:03:33,100
we're looking mainly at read write and

91
00:03:29,290 --> 00:03:34,870
execute permissions an object directory

92
00:03:33,100 --> 00:03:36,790
file something like that so we've been

93
00:03:34,870 --> 00:03:38,860
looking<font color="#CCCCCC"> at our access control list tell</font>

94
00:03:36,790 --> 00:03:42,280
the computer what that user is able to

95
00:03:38,860 --> 00:03:45,130
do to that file if we look<font color="#E5E5E5"> at it</font>

96
00:03:42,280 --> 00:03:47,769
graphically here we've<font color="#CCCCCC"> got a file over</font>

97
00:03:45,130 --> 00:03:49,660
here directory similarly hardly anything

98
00:03:47,769 --> 00:03:51,730
like that<font color="#E5E5E5"> now you can have an ankle</font>

99
00:03:49,660 --> 00:03:53,590
attached<font color="#CCCCCC"> to it with</font><font color="#E5E5E5"> the user</font>

100
00:03:51,730 --> 00:03:55,149
right execute permissions on there this

101
00:03:53,590 --> 00:03:57,250
is what we call user-oriented access

102
00:03:55,150 --> 00:04:00,610
controls because it defined by the user

103
00:03:57,250 --> 00:04:03,519
themselves so what<font color="#E5E5E5"> is our packing and</font>

104
00:04:00,610 --> 00:04:07,090
the package idea is<font color="#E5E5E5"> really what my final</font>

105
00:04:03,519 --> 00:04:09,610
year project has<font color="#CCCCCC"> been about so in the</font>

106
00:04:07,090 --> 00:04:11,319
same way it tells<font color="#E5E5E5"> a computer the</font><font color="#CCCCCC"> access</font>

107
00:04:09,610 --> 00:04:13,000
rights and permissions that a program<font color="#E5E5E5"> or</font>

108
00:04:11,319 --> 00:04:14,950
application has to a particular system

109
00:04:13,000 --> 00:04:17,048
object so the only difference there is

110
00:04:14,950 --> 00:04:21,310
<font color="#E5E5E5">that we're specifying an application</font>

111
00:04:17,048 --> 00:04:23,770
rather than by user and to get a<font color="#E5E5E5"> look at</font>

112
00:04:21,310 --> 00:04:26,110
it graphically we've got a fire over

113
00:04:23,770 --> 00:04:28,419
<font color="#CCCCCC">here and we've got</font><font color="#E5E5E5"> our program based</font>

114
00:04:26,110 --> 00:04:30,699
Apple attached to it there yet this is

115
00:04:28,419 --> 00:04:32,139
just an overview looking at it sort of

116
00:04:30,699 --> 00:04:33,760
theoretically like that we're going to

117
00:04:32,139 --> 00:04:36,280
more practical details about how<font color="#CCCCCC"> that</font>

118
00:04:33,760 --> 00:04:38,949
works in a minute so this is<font color="#E5E5E5"> giving us</font>

119
00:04:36,280 --> 00:04:41,940
<font color="#E5E5E5">the idea of user-oriented access control</font>

120
00:04:38,949 --> 00:04:44,260
and application oriented access control

121
00:04:41,940 --> 00:04:48,300
like a<font color="#CCCCCC"> sailor</font><font color="#E5E5E5"> is going to talk about Mac</font>

122
00:04:44,260 --> 00:04:51,039
and our back so mandatory access control

123
00:04:48,300 --> 00:04:54,070
labels file system objects<font color="#E5E5E5"> so our files</font>

124
00:04:51,039 --> 00:04:56,469
directories with a classification it

125
00:04:54,070 --> 00:04:59,169
then assigns a user a classification or

126
00:04:56,470 --> 00:05:01,270
a clearance the excess is then granted

127
00:04:59,169 --> 00:05:04,000
based on checking the user clearance

128
00:05:01,270 --> 00:05:06,010
against the objects classification so we

129
00:05:04,000 --> 00:05:08,349
have an<font color="#E5E5E5"> example here we've got an object</font>

130
00:05:06,010 --> 00:05:09,820
that<font color="#E5E5E5"> has a classification of secret and</font>

131
00:05:08,349 --> 00:05:12,490
we've got a use of it<font color="#E5E5E5"> as a clearance of</font>

132
00:05:09,820 --> 00:05:16,210
secret that user is able to<font color="#E5E5E5"> access that</font>

133
00:05:12,490 --> 00:05:17,950
<font color="#E5E5E5">part under them if that user had</font>

134
00:05:16,210 --> 00:05:20,770
clearance of guests and wasn't able to

135
00:05:17,950 --> 00:05:22,090
access objects with the classification

136
00:05:20,770 --> 00:05:25,599
and secret they would<font color="#E5E5E5"> then not be able</font>

137
00:05:22,090 --> 00:05:27,669
to<font color="#E5E5E5"> access</font><font color="#CCCCCC"> that</font><font color="#E5E5E5"> file so</font><font color="#CCCCCC"> the rules and</font>

138
00:05:25,599 --> 00:05:29,110
criteria and mac and manage access

139
00:05:27,669 --> 00:05:31,389
controllers they're defined by the

140
00:05:29,110 --> 00:05:34,060
system administrator so normally<font color="#CCCCCC"> you</font>

141
00:05:31,389 --> 00:05:36,700
would find<font color="#E5E5E5"> mandatory access controls in</font>

142
00:05:34,060 --> 00:05:39,849
something<font color="#E5E5E5"> like a</font><font color="#CCCCCC"> government institution</font>

143
00:05:36,700 --> 00:05:41,800
a big big organization where the<font color="#E5E5E5"> people</font>

144
00:05:39,849 --> 00:05:44,770
at the<font color="#E5E5E5"> top</font><font color="#CCCCCC"> or to really lock down what</font>

145
00:05:41,800 --> 00:05:47,280
their users are able to do<font color="#E5E5E5"> and the end</font>

146
00:05:44,770 --> 00:05:49,448
users can't change that criteria there

147
00:05:47,280 --> 00:05:53,229
so now going on to role-based access

148
00:05:49,449 --> 00:05:55,120
control the difference here<font color="#E5E5E5"> is the</font>

149
00:05:53,229 --> 00:05:55,840
access is defined by the<font color="#E5E5E5"> ability of a</font>

150
00:05:55,120 --> 00:05:59,050
user

151
00:05:55,840 --> 00:06:00,909
perform a task so rather than<font color="#E5E5E5"> labeling</font>

152
00:05:59,050 --> 00:06:03,790
each object we're looking at the tasks

153
00:06:00,910 --> 00:06:05,979
<font color="#CCCCCC">that a user is trying to do tasks might</font>

154
00:06:03,790 --> 00:06:08,220
be here in a file creating a fire what

155
00:06:05,979 --> 00:06:10,300
if I were filed and like we had

156
00:06:08,220 --> 00:06:12,070
classifications and clearances before

157
00:06:10,300 --> 00:06:13,780
here we've got our roles that are

158
00:06:12,070 --> 00:06:16,090
<font color="#E5E5E5">assigned to users and that role</font>

159
00:06:13,780 --> 00:06:19,510
determine what tasks that user is able

160
00:06:16,090 --> 00:06:23,229
to do so again in an example we've<font color="#E5E5E5"> got</font>

161
00:06:19,510 --> 00:06:25,389
our<font color="#E5E5E5"> object by our user with our manager</font>

162
00:06:23,229 --> 00:06:28,270
here wants to modify that far the task

163
00:06:25,389 --> 00:06:31,030
is to modify the role is the manager and

164
00:06:28,270 --> 00:06:34,810
in this<font color="#CCCCCC"> situation the role of manager is</font>

165
00:06:31,030 --> 00:06:36,760
able to perform that task say it was

166
00:06:34,810 --> 00:06:38,200
somebody working in support they don't

167
00:06:36,760 --> 00:06:40,780
have<font color="#E5E5E5"> the same role they would then not</font>

168
00:06:38,200 --> 00:06:45,219
be able<font color="#CCCCCC"> to perform that task and modify</font>

169
00:06:40,780 --> 00:06:47,020
that far so it's an alternative to

170
00:06:45,220 --> 00:06:48,850
object my object based access control as

171
00:06:47,020 --> 00:06:50,979
I mentioned before so rather than<font color="#CCCCCC"> having</font>

172
00:06:48,850 --> 00:06:52,870
to label every single object and put

173
00:06:50,979 --> 00:06:55,690
carrying out like that the whole<font color="#E5E5E5"> way</font>

174
00:06:52,870 --> 00:06:57,669
through you can<font color="#CCCCCC"> easily add create change</font>

175
00:06:55,690 --> 00:07:00,160
or a loon prompt and makes it quite a

176
00:06:57,669 --> 00:07:03,549
good system to roll out if you want to

177
00:07:00,160 --> 00:07:05,919
sort be able to manage it like that so

178
00:07:03,550 --> 00:07:08,320
we've now gone over<font color="#E5E5E5"> DAC ackles</font><font color="#CCCCCC"> Packers</font>

179
00:07:05,919 --> 00:07:09,880
<font color="#CCCCCC">Mac and</font><font color="#E5E5E5"> are back and hopefully now to</font>

180
00:07:08,320 --> 00:07:11,889
all of you they're<font color="#E5E5E5"> not just the load of</font>

181
00:07:09,880 --> 00:07:15,460
acronyms a lot of you will have heard of

182
00:07:11,889 --> 00:07:17,500
a lot of it before anyway so

183
00:07:15,460 --> 00:07:20,320
implementation of access control

184
00:07:17,500 --> 00:07:24,280
mechanisms again in the next so access

185
00:07:20,320 --> 00:07:26,950
control lists are configured ID user by

186
00:07:24,280 --> 00:07:30,070
a group or by users not in<font color="#CCCCCC"> that group</font>

187
00:07:26,950 --> 00:07:31,510
also known as other now the way we do

188
00:07:30,070 --> 00:07:34,060
that in the next<font color="#E5E5E5"> is we use the package</font>

189
00:07:31,510 --> 00:07:36,580
<font color="#E5E5E5">apple and you can do that</font><font color="#CCCCCC"> on a deviant</font>

190
00:07:34,060 --> 00:07:39,010
system we're sudo apt-get at all and it

191
00:07:36,580 --> 00:07:41,859
gives you the tools set<font color="#E5E5E5"> f a call and get</font>

192
00:07:39,010 --> 00:07:45,430
a faculty I say<font color="#E5E5E5"> Apple quite a lot</font><font color="#CCCCCC"> in</font>

193
00:07:41,860 --> 00:07:47,820
this<font color="#CCCCCC"> talks by the way so here we've got</font>

194
00:07:45,430 --> 00:07:52,090
<font color="#CCCCCC">an</font><font color="#E5E5E5"> example in a set a pack of command</font>

195
00:07:47,820 --> 00:07:56,950
the first bit specifies the rules that

196
00:07:52,090 --> 00:07:59,469
<font color="#CCCCCC">you're wanting to set to this file the</font>

197
00:07:56,950 --> 00:08:02,020
rules can be defined by user with you

198
00:07:59,470 --> 00:08:04,900
prefix at the start you can divide it by

199
00:08:02,020 --> 00:08:05,270
group with the<font color="#E5E5E5"> G prefix or you can have</font>

200
00:08:04,900 --> 00:08:08,179
it on

201
00:08:05,270 --> 00:08:10,460
other with<font color="#E5E5E5"> your home you then identify</font>

202
00:08:08,180 --> 00:08:12,500
the user by two ID and the permissions

203
00:08:10,460 --> 00:08:15,820
for that groups are identified by their

204
00:08:12,500 --> 00:08:18,260
GID commissions for that on<font color="#E5E5E5"> the end then</font>

205
00:08:15,820 --> 00:08:20,840
see if we look in<font color="#E5E5E5"> this example as we had</font>

206
00:08:18,260 --> 00:08:23,840
before the<font color="#E5E5E5"> user rule here because we've</font>

207
00:08:20,840 --> 00:08:28,969
<font color="#E5E5E5">got the you user James is able to read</font>

208
00:08:23,840 --> 00:08:30,380
and<font color="#E5E5E5"> write that</font><font color="#CCCCCC"> file homes on fire and</font>

209
00:08:28,970 --> 00:08:32,030
looking at<font color="#E5E5E5"> it graphically how we did</font>

210
00:08:30,380 --> 00:08:34,520
before that<font color="#E5E5E5"> would look</font><font color="#CCCCCC"> like this this</font>

211
00:08:32,030 --> 00:08:36,860
<font color="#E5E5E5">file has an apple attached to it the</font>

212
00:08:34,520 --> 00:08:40,669
user<font color="#E5E5E5"> James can read and write but cannot</font>

213
00:08:36,860 --> 00:08:43,940
execute here we go they can read but

214
00:08:40,669 --> 00:08:46,610
they can't execute the dash X option

215
00:08:43,940 --> 00:08:50,240
allows<font color="#CCCCCC"> you to remove the Commission's</font>

216
00:08:46,610 --> 00:08:53,360
their say on that fire so what's the

217
00:08:50,240 --> 00:08:54,320
problem or what the problem what<font color="#E5E5E5"> the</font>

218
00:08:53,360 --> 00:08:56,480
proper I think we can<font color="#E5E5E5"> have a look a</font>

219
00:08:54,320 --> 00:08:58,090
problem<font color="#CCCCCC"> on a couple slides in so under</font>

220
00:08:56,480 --> 00:09:00,650
traditional access control<font color="#CCCCCC"> lists</font>

221
00:08:58,090 --> 00:09:05,780
applications inherit the privileges of

222
00:09:00,650 --> 00:09:08,390
the user<font color="#CCCCCC"> that runs them so you have an</font>

223
00:09:05,780 --> 00:09:11,780
application calculator same<font color="#E5E5E5"> route runs</font>

224
00:09:08,390 --> 00:09:15,080
calculator calculator then inherit the

225
00:09:11,780 --> 00:09:17,180
full permissions of room now the

226
00:09:15,080 --> 00:09:20,030
question<font color="#E5E5E5"> is does calculate to need the</font>

227
00:09:17,180 --> 00:09:21,589
same permissions whose room I guess<font color="#CCCCCC"> it</font>

228
00:09:20,030 --> 00:09:23,660
kind of depends what it's calculating

229
00:09:21,590 --> 00:09:25,460
but generally a calculator doesn't

230
00:09:23,660 --> 00:09:27,140
really need you know all the permissions

231
00:09:25,460 --> 00:09:28,700
<font color="#CCCCCC">in room it's just an example anywhere if</font>

232
00:09:27,140 --> 00:09:31,280
we<font color="#E5E5E5"> think about a lot of applications</font>

233
00:09:28,700 --> 00:09:32,990
that<font color="#E5E5E5"> don't actually need the full set of</font>

234
00:09:31,280 --> 00:09:37,459
privileges and commissions that the user

235
00:09:32,990 --> 00:09:40,700
running<font color="#E5E5E5"> them is granting so here we</font><font color="#CCCCCC"> can</font>

236
00:09:37,460 --> 00:09:43,970
set an ankle for the user James have no

237
00:09:40,700 --> 00:09:46,220
permissions on this file so the user

238
00:09:43,970 --> 00:09:49,460
James would not be able to<font color="#E5E5E5"> read</font><font color="#CCCCCC"> it right</font>

239
00:09:46,220 --> 00:09:52,010
it or executor now if the application

240
00:09:49,460 --> 00:09:54,140
went to read that file it would be

241
00:09:52,010 --> 00:09:55,730
allowed to and what it looks like here I

242
00:09:54,140 --> 00:09:56,990
understand that route has more

243
00:09:55,730 --> 00:09:59,300
permissions than the user what was

244
00:09:56,990 --> 00:10:01,160
running it anyway<font color="#E5E5E5"> so if we was to run it</font>

245
00:09:59,300 --> 00:10:03,140
it would have the full permissions but

246
00:10:01,160 --> 00:10:03,959
it's just to just to show<font color="#CCCCCC"> you</font><font color="#E5E5E5"> how an</font>

247
00:10:03,140 --> 00:10:05,250
application

248
00:10:03,960 --> 00:10:06,840
<font color="#CCCCCC">herricks all of those permissions and</font>

249
00:10:05,250 --> 00:10:09,000
then can access files that it might not

250
00:10:06,840 --> 00:10:12,780
necessarily need to<font color="#E5E5E5"> or the user doesn't</font>

251
00:10:09,000 --> 00:10:14,910
want it<font color="#CCCCCC"> to so this</font><font color="#E5E5E5"> is pretty much what</font>

252
00:10:12,780 --> 00:10:16,740
I've said here where they don't need the

253
00:10:14,910 --> 00:10:18,930
same<font color="#E5E5E5"> permissions so applications can</font>

254
00:10:16,740 --> 00:10:21,750
then misbehave either by accident or

255
00:10:18,930 --> 00:10:23,040
through malicious intent Andy you know

256
00:10:21,750 --> 00:10:26,070
<font color="#E5E5E5">you can leave system resources</font>

257
00:10:23,040 --> 00:10:27,689
vulnerable just application of using

258
00:10:26,070 --> 00:10:29,490
their privileges that's the<font color="#CCCCCC"> whole idea</font>

259
00:10:27,690 --> 00:10:33,780
if I find this program based access

260
00:10:29,490 --> 00:10:36,600
control list I'm going<font color="#E5E5E5"> through today</font><font color="#CCCCCC"> so</font>

261
00:10:33,780 --> 00:10:38,490
one aim of axial lsm which is the module

262
00:10:36,600 --> 00:10:40,110
I've been developing<font color="#E5E5E5"> is to create the</font>

263
00:10:38,490 --> 00:10:43,650
program based access control is a

264
00:10:40,110 --> 00:10:45,390
<font color="#CCCCCC">pathway to prevent applications from</font>

265
00:10:43,650 --> 00:10:48,240
inheriting the privileges of user the

266
00:10:45,390 --> 00:10:51,660
broccoli but that's the first and main

267
00:10:48,240 --> 00:10:53,550
aim of one doing another aim for the

268
00:10:51,660 --> 00:10:56,910
majority for the module comes down to

269
00:10:53,550 --> 00:10:58,949
the complexity for the user so this is

270
00:10:56,910 --> 00:11:00,689
<font color="#E5E5E5">quite a fancy sentence</font><font color="#CCCCCC"> but an increasing</font>

271
00:10:58,950 --> 00:11:02,430
granularity of the security policies

272
00:11:00,690 --> 00:11:05,700
leads to an increase in the complexity

273
00:11:02,430 --> 00:11:07,500
for the user that<font color="#CCCCCC"> basically means</font><font color="#E5E5E5"> that</font>

274
00:11:05,700 --> 00:11:09,540
as security policies get more and more

275
00:11:07,500 --> 00:11:12,030
complex it gets more and more difficult

276
00:11:09,540 --> 00:11:13,410
<font color="#E5E5E5">for users to understand what they're</font>

277
00:11:12,030 --> 00:11:17,069
implementing and be able to implement

278
00:11:13,410 --> 00:11:18,689
them effectively over a large area so

279
00:11:17,070 --> 00:11:21,030
<font color="#E5E5E5">I'm now going to tell</font><font color="#CCCCCC"> your little</font><font color="#E5E5E5"> story</font>

280
00:11:18,690 --> 00:11:22,950
you<font color="#CCCCCC"> don't have to imagine for a minute</font>

281
00:11:21,030 --> 00:11:26,400
<font color="#E5E5E5">okay and it's the idea of this effective</font>

282
00:11:22,950 --> 00:11:29,220
security versus potential security so

283
00:11:26,400 --> 00:11:31,740
probably right now a lot of you want to

284
00:11:29,220 --> 00:11:34,890
be here<font color="#E5E5E5"> a lot of you probably want</font><font color="#CCCCCC"> to</font><font color="#E5E5E5"> be</font>

285
00:11:31,740 --> 00:11:36,690
in Costa right now and<font color="#E5E5E5"> we probably also</font>

286
00:11:34,890 --> 00:11:38,280
in this<font color="#E5E5E5"> situation before you</font><font color="#CCCCCC"> know</font>

287
00:11:36,690 --> 00:11:41,130
someone parking in a place the quickly

288
00:11:38,280 --> 00:11:44,370
shouldn't be and blocking blocking where

289
00:11:41,130 --> 00:11:46,230
you are so I'm not<font color="#CCCCCC"> claiming to be a</font>

290
00:11:44,370 --> 00:11:49,350
Photoshop genius in any of the

291
00:11:46,230 --> 00:11:52,170
pictures that come up so in this we want

292
00:11:49,350 --> 00:11:53,340
to get to Costa we're<font color="#E5E5E5"> locked in now</font>

293
00:11:52,170 --> 00:11:55,229
we're going to look<font color="#E5E5E5"> at this as an out</font>

294
00:11:53,340 --> 00:11:57,570
from an effective security versus

295
00:11:55,230 --> 00:11:59,700
potential security standpoint and on the

296
00:11:57,570 --> 00:12:01,980
side for potential security you could

297
00:11:59,700 --> 00:12:05,490
<font color="#E5E5E5">have a government-issue bulletproof</font>

298
00:12:01,980 --> 00:12:07,680
limousine vehicle car<font color="#E5E5E5"> whatever you want</font>

299
00:12:05,490 --> 00:12:09,090
<font color="#E5E5E5">you know bulletproof is going to get you</font>

300
00:12:07,680 --> 00:12:12,239
there really safe you're going to be

301
00:12:09,090 --> 00:12:14,280
absolutely<font color="#CCCCCC"> fine when you get there so</font>

302
00:12:12,240 --> 00:12:16,800
we've got potential security on the

303
00:12:14,280 --> 00:12:17,819
other<font color="#E5E5E5"> hand for effective security we're</font>

304
00:12:16,800 --> 00:12:20,370
looking<font color="#E5E5E5"> at something that's not quite</font>

305
00:12:17,820 --> 00:12:24,300
this big something that's not quite as

306
00:12:20,370 --> 00:12:27,330
complex not quite a secure and well I

307
00:12:24,300 --> 00:12:30,390
found this and I<font color="#E5E5E5"> thought I secure but</font>

308
00:12:27,330 --> 00:12:35,660
that works so you<font color="#E5E5E5"> still want</font><font color="#CCCCCC"> to get</font>

309
00:12:30,390 --> 00:12:38,040
across them now this is<font color="#CCCCCC"> the problem</font><font color="#E5E5E5"> we</font>

310
00:12:35,660 --> 00:12:41,100
this<font color="#E5E5E5"> is the</font><font color="#CCCCCC"> problem with potential</font>

311
00:12:38,040 --> 00:12:43,860
security I couldn't fit<font color="#E5E5E5"> him on the drive</font>

312
00:12:41,100 --> 00:12:46,950
<font color="#E5E5E5">never mind get them off so you didn't</font>

313
00:12:43,860 --> 00:12:49,770
get<font color="#CCCCCC"> cost up on the other</font><font color="#E5E5E5"> hand</font><font color="#CCCCCC"> fits all</font>

314
00:12:46,950 --> 00:12:52,530
<font color="#E5E5E5">there I think you can probably fit</font>

315
00:12:49,770 --> 00:12:55,350
between the wheelie bins over here so

316
00:12:52,530 --> 00:12:57,720
you<font color="#E5E5E5"> get to Kosta I'm really the lesson</font>

317
00:12:55,350 --> 00:12:59,790
from this story in what uses a

318
00:12:57,720 --> 00:13:02,790
bulletproof<font color="#E5E5E5"> car to get to customer if</font>

319
00:12:59,790 --> 00:13:04,110
you can't get<font color="#CCCCCC"> it off the driveway that's</font>

320
00:13:02,790 --> 00:13:06,060
that's really what when you take from

321
00:13:04,110 --> 00:13:07,920
that story so it's the idea that the

322
00:13:06,060 --> 00:13:10,109
level of security user is able to

323
00:13:07,920 --> 00:13:12,360
implement versus the potential security

324
00:13:10,110 --> 00:13:16,610
benefit offered by that service or

325
00:13:12,360 --> 00:13:19,140
control another wave of apps<font color="#CCCCCC"> USM</font>

326
00:13:16,610 --> 00:13:22,080
providers<font color="#E5E5E5"> human readable abstraction of</font>

327
00:13:19,140 --> 00:13:23,310
the policy so that users are<font color="#E5E5E5"> able to</font>

328
00:13:22,080 --> 00:13:25,350
understand what their implement

329
00:13:23,310 --> 00:13:27,540
implementing they're able<font color="#E5E5E5"> to configure</font>

330
00:13:25,350 --> 00:13:29,490
them and<font color="#E5E5E5"> there they know exactly what</font>

331
00:13:27,540 --> 00:13:32,969
they are putting in place on<font color="#E5E5E5"> their</font>

332
00:13:29,490 --> 00:13:35,670
systems so they're really<font color="#CCCCCC"> i'm aiming for</font>

333
00:13:32,970 --> 00:13:37,260
a high level<font color="#E5E5E5"> of defective security like</font>

334
00:13:35,670 --> 00:13:39,000
it says<font color="#E5E5E5"> there that through control of</font>

335
00:13:37,260 --> 00:13:41,850
the users are able to understand and

336
00:13:39,000 --> 00:13:43,620
manage so the<font color="#E5E5E5"> next part of my</font><font color="#CCCCCC"> talk and</font>

337
00:13:41,850 --> 00:13:46,800
if you talk about the lineage security

338
00:13:43,620 --> 00:13:48,210
module framework and how it allows the

339
00:13:46,800 --> 00:13:51,599
development of additional kernel level

340
00:13:48,210 --> 00:13:53,579
security the focus is on

341
00:13:51,600 --> 00:13:56,759
access control modules with the<font color="#E5E5E5"> Linux</font>

342
00:13:53,579 --> 00:13:58,410
<font color="#E5E5E5">security module framework selinux which</font>

343
00:13:56,759 --> 00:14:00,839
you might sit on a number plate a minute

344
00:13:58,410 --> 00:14:03,569
ago that is a managed access control

345
00:14:00,839 --> 00:14:05,550
solution that is built using the linux

346
00:14:03,569 --> 00:14:08,279
<font color="#CCCCCC">tutorials your framework there's also</font>

347
00:14:05,550 --> 00:14:10,258
other ones such as a farmer and smack

348
00:14:08,279 --> 00:14:13,949
and there's a couple<font color="#E5E5E5"> of other ones as</font>

349
00:14:10,259 --> 00:14:16,079
well so the talk before this for those

350
00:14:13,949 --> 00:14:17,490
of you in here and someone spoke a

351
00:14:16,079 --> 00:14:19,170
little bit about the colonel did we look

352
00:14:17,490 --> 00:14:21,660
<font color="#E5E5E5">at it from a slightly different point of</font>

353
00:14:19,170 --> 00:14:24,240
view so when we look here we've got<font color="#CCCCCC"> a</font>

354
00:14:21,660 --> 00:14:28,199
computer<font color="#CCCCCC"> and we've got lots of different</font>

355
00:14:24,240 --> 00:14:29,040
things<font color="#CCCCCC"> that make up our computer what</font>

356
00:14:28,199 --> 00:14:30,719
we're going to do is we're going to

357
00:14:29,040 --> 00:14:33,000
split this computer up into four

358
00:14:30,720 --> 00:14:37,889
different<font color="#CCCCCC"> limbs</font><font color="#E5E5E5"> we've got on the bottom</font>

359
00:14:33,000 --> 00:14:40,259
our<font color="#CCCCCC"> Hardware CPU memory I hard drive all</font>

360
00:14:37,889 --> 00:14:42,449
those<font color="#E5E5E5"> things are computers need and then</font>

361
00:14:40,259 --> 00:14:43,589
above that we've got our code and then

362
00:14:42,449 --> 00:14:44,939
above that we've got the operating

363
00:14:43,589 --> 00:14:47,339
system and then the applications

364
00:14:44,940 --> 00:14:49,440
installed on top two levels are a user

365
00:14:47,339 --> 00:14:52,410
space the colonel is<font color="#CCCCCC"> our</font><font color="#E5E5E5"> kernel space</font>

366
00:14:49,440 --> 00:14:55,319
the<font color="#E5E5E5"> hardware is a hardware space the</font>

367
00:14:52,410 --> 00:14:57,439
Colonel's job is to communicate to the

368
00:14:55,319 --> 00:14:59,699
hardware<font color="#E5E5E5"> of their half of user space</font>

369
00:14:57,439 --> 00:15:01,800
backwards and forwards it handles that

370
00:14:59,699 --> 00:15:03,959
communication and as we mentioned<font color="#CCCCCC"> in the</font>

371
00:15:01,800 --> 00:15:06,149
last book<font color="#E5E5E5"> here if you were in here no</font>

372
00:15:03,959 --> 00:15:08,699
problem but user space communicates the

373
00:15:06,149 --> 00:15:10,589
kernel through system calls and that's

374
00:15:08,699 --> 00:15:13,979
so that user space cannot directly

375
00:15:10,589 --> 00:15:15,540
access the kernel memory itself and and

376
00:15:13,980 --> 00:15:18,660
it and<font color="#E5E5E5"> it has to</font><font color="#CCCCCC"> do it through the API</font>

377
00:15:15,540 --> 00:15:20,730
and through the system course so it's

378
00:15:18,660 --> 00:15:22,110
just an example of actually putting

379
00:15:20,730 --> 00:15:24,300
things in there again on your limit

380
00:15:22,110 --> 00:15:27,839
might<font color="#E5E5E5"> have LibreOffice you might have</font><font color="#CCCCCC"> a</font>

381
00:15:24,300 --> 00:15:29,339
gnome desktop environment and this is

382
00:15:27,839 --> 00:15:32,490
<font color="#CCCCCC">actually the development machine that</font>

383
00:15:29,339 --> 00:15:34,590
I'm testing my<font color="#E5E5E5"> module</font><font color="#CCCCCC"> of so hardware</font>

384
00:15:32,490 --> 00:15:37,590
it's just the same hardware

385
00:15:34,590 --> 00:15:40,380
computer and it's running<font color="#CCCCCC"> Linux kernel</font>

386
00:15:37,590 --> 00:15:42,870
4.3 with the axial security what you

387
00:15:40,380 --> 00:15:44,730
enabled it's both TV and eight point one

388
00:15:42,870 --> 00:15:47,430
point zero with<font color="#E5E5E5"> the DBA desktop</font>

389
00:15:44,730 --> 00:15:48,810
environment and applications wise i'm

390
00:15:47,430 --> 00:15:52,319
actually using nano is a test

391
00:15:48,810 --> 00:15:54,390
application which some people already

392
00:15:52,320 --> 00:15:55,890
turn their nose up<font color="#CCCCCC"> but the reason</font><font color="#E5E5E5"> for</font>

393
00:15:54,390 --> 00:15:57,750
that is<font color="#CCCCCC"> that actually been able just to</font>

394
00:15:55,890 --> 00:15:59,520
completely shut nano off the<font color="#CCCCCC"> system so</font>

395
00:15:57,750 --> 00:16:01,590
it's you know if you want a module that

396
00:15:59,520 --> 00:16:07,949
can stop nano doing anything on your

397
00:16:01,590 --> 00:16:10,050
system I give<font color="#E5E5E5"> you that so we're we're</font>

398
00:16:07,950 --> 00:16:11,820
looking at now with<font color="#E5E5E5"> this Linux security</font>

399
00:16:10,050 --> 00:16:15,569
module framework is in the kernel where

400
00:16:11,820 --> 00:16:17,010
my man I'm quickly going to<font color="#CCCCCC"> mention some</font>

401
00:16:15,570 --> 00:16:18,660
kernel data structures just because

402
00:16:17,010 --> 00:16:20,520
they're relevant to what what I'm going

403
00:16:18,660 --> 00:16:23,370
to<font color="#CCCCCC"> be</font><font color="#E5E5E5"> saying as I go forward we've got</font>

404
00:16:20,520 --> 00:16:26,010
<font color="#E5E5E5">our I note which is what most of us see</font>

405
00:16:23,370 --> 00:16:27,510
as a file and it's the file that's

406
00:16:26,010 --> 00:16:29,610
actually stored on it is so the inode is

407
00:16:27,510 --> 00:16:32,370
the attributes about<font color="#CCCCCC"> the file and then</font>

408
00:16:29,610 --> 00:16:34,590
it stores a file data structure federal

409
00:16:32,370 --> 00:16:36,810
data structure is actually an open file

410
00:16:34,590 --> 00:16:38,340
object so you're nuts and i know'd on

411
00:16:36,810 --> 00:16:41,280
the distant when you go open that file

412
00:16:38,340 --> 00:16:43,230
if this<font color="#E5E5E5"> then a file object for that</font><font color="#CCCCCC"> i</font>

413
00:16:41,280 --> 00:16:45,209
know'd as well when<font color="#CCCCCC"> they've got super</font>

414
00:16:43,230 --> 00:16:48,600
block data structure at the<font color="#CCCCCC"> Holts</font>

415
00:16:45,210 --> 00:16:50,220
metadata for the file system that<font color="#CCCCCC"> i'll</font>

416
00:16:48,600 --> 00:16:53,150
<font color="#E5E5E5">be honest the super robbers and there's</font>

417
00:16:50,220 --> 00:16:56,720
a lot<font color="#CCCCCC"> of lot of stuff held in there and</font>

418
00:16:53,150 --> 00:16:59,010
so what is the security<font color="#E5E5E5"> module framework</font>

419
00:16:56,720 --> 00:17:01,170
when it provides a general Colonel

420
00:16:59,010 --> 00:17:03,870
framework to support security modules

421
00:17:01,170 --> 00:17:06,480
like<font color="#CCCCCC"> I said before primarily focused on</font>

422
00:17:03,870 --> 00:17:08,579
access control modules by itself it

423
00:17:06,480 --> 00:17:10,860
doesn't actually give any more security

424
00:17:08,579 --> 00:17:13,139
to Linux or the system that<font color="#E5E5E5"> you're</font>

425
00:17:10,859 --> 00:17:14,879
running<font color="#CCCCCC"> on running it on itself if you</font>

426
00:17:13,140 --> 00:17:17,580
were<font color="#E5E5E5"> just to compile it just as it is</font>

427
00:17:14,880 --> 00:17:20,100
and run nothing<font color="#E5E5E5"> would be any more secure</font>

428
00:17:17,579 --> 00:17:21,389
on your system and<font color="#CCCCCC"> actually I'll just</font>

429
00:17:20,099 --> 00:17:24,179
<font color="#E5E5E5">put a</font><font color="#CCCCCC"> little liquid down there if you</font>

430
00:17:21,390 --> 00:17:27,540
want to have a read a bit more<font color="#CCCCCC"> about the</font>

431
00:17:24,180 --> 00:17:30,210
framework itself at the<font color="#CCCCCC"> NSA's website</font>

432
00:17:27,540 --> 00:17:31,830
it's actually I'm quite a good paper on

433
00:17:30,210 --> 00:17:36,630
it but<font color="#CCCCCC"> it's up to you if you want to go</font>

434
00:17:31,830 --> 00:17:38,879
visit so how does it<font color="#E5E5E5"> work well the idea</font>

435
00:17:36,630 --> 00:17:40,310
<font color="#CCCCCC">of it is that an app security fields to</font>

436
00:17:38,880 --> 00:17:42,080
these data structures those

437
00:17:40,310 --> 00:17:43,639
talking about<font color="#E5E5E5"> before not just those days</font>

438
00:17:42,080 --> 00:17:46,520
structures but other data structures as

439
00:17:43,640 --> 00:17:48,830
well<font color="#E5E5E5"> it then insert hook functions at</font>

440
00:17:46,520 --> 00:17:50,930
critical points in the kernel code to

441
00:17:48,830 --> 00:17:52,490
manage those security fields and then

442
00:17:50,930 --> 00:17:55,760
based<font color="#CCCCCC"> off those security fields you can</font>

443
00:17:52,490 --> 00:17:59,870
<font color="#E5E5E5">perform access control them so here</font>

444
00:17:55,760 --> 00:18:02,180
we've got a file okay we've got a file

445
00:17:59,870 --> 00:18:04,669
as we know it in our panel data

446
00:18:02,180 --> 00:18:06,020
structure we've got our I know we've got

447
00:18:04,670 --> 00:18:08,360
an application because with our

448
00:18:06,020 --> 00:18:10,070
application or into access controls

449
00:18:08,360 --> 00:18:11,750
we're<font color="#E5E5E5"> gonna have to be thinking about</font>

450
00:18:10,070 --> 00:18:13,129
applications as well and when an

451
00:18:11,750 --> 00:18:17,420
application is running its

452
00:18:13,130 --> 00:18:20,030
representative as a process so the<font color="#CCCCCC"> lsm</font>

453
00:18:17,420 --> 00:18:22,850
<font color="#CCCCCC">ax security labels to these data</font>

454
00:18:20,030 --> 00:18:24,530
structures you then have<font color="#E5E5E5"> functions to</font>

455
00:18:22,850 --> 00:18:27,409
access and populate and make decisions

456
00:18:24,530 --> 00:18:30,139
<font color="#CCCCCC">based off those security labels and what</font>

457
00:18:27,410 --> 00:18:31,820
you've what you've stored in it so with

458
00:18:30,140 --> 00:18:34,090
the inode object we've got security

459
00:18:31,820 --> 00:18:36,439
hooks such as the I lowdown up security

460
00:18:34,090 --> 00:18:38,419
<font color="#E5E5E5">yeah I know free security hook and</font>

461
00:18:36,440 --> 00:18:40,130
they're responsible for<font color="#E5E5E5"> allocating and</font>

462
00:18:38,420 --> 00:18:43,220
freeing the memory that<font color="#CCCCCC"> you need if</font>

463
00:18:40,130 --> 00:18:45,860
you're actually going<font color="#CCCCCC"> to put anything in</font>

464
00:18:43,220 --> 00:18:47,930
the honored security level same with the

465
00:18:45,860 --> 00:18:49,790
file there's an hour security of free

466
00:18:47,930 --> 00:18:53,900
security and the same<font color="#CCCCCC"> aetna super block</font>

467
00:18:49,790 --> 00:18:56,510
as<font color="#CCCCCC"> well so we've looked at this and that</font>

468
00:18:53,900 --> 00:18:59,470
should all be making sense by now so

469
00:18:56,510 --> 00:19:02,330
this<font color="#E5E5E5"> is a diagram from the internet that</font>

470
00:18:59,470 --> 00:19:03,830
explains<font color="#E5E5E5"> how the NSM works and this is</font>

471
00:19:02,330 --> 00:19:08,689
where the hook functions actually come

472
00:19:03,830 --> 00:19:11,929
in when it goes up runs a process all of

473
00:19:08,690 --> 00:19:13,730
the standard Linux tough we'll call<font color="#E5E5E5"> it</font>

474
00:19:11,930 --> 00:19:16,790
linux stuff all of the standard Linux

475
00:19:13,730 --> 00:19:18,800
stuff happens until just before the

476
00:19:16,790 --> 00:19:22,340
excess decision is made and then the

477
00:19:18,800 --> 00:19:24,740
hook is access so that means<font color="#E5E5E5"> that all</font>

478
00:19:22,340 --> 00:19:25,820
your standard<font color="#CCCCCC"> deck Jets so if</font><font color="#E5E5E5"> you're at</font>

479
00:19:24,740 --> 00:19:28,220
all the permissions that we've already

480
00:19:25,820 --> 00:19:29,870
looked at any other security in the

481
00:19:28,220 --> 00:19:32,120
linen in limits itself or that you've

482
00:19:29,870 --> 00:19:34,399
got going<font color="#E5E5E5"> on it will check all of that</font>

483
00:19:32,120 --> 00:19:36,919
first<font color="#E5E5E5"> and then</font><font color="#CCCCCC"> the Linux security module</font>

484
00:19:34,400 --> 00:19:41,780
has the last say in whether access is

485
00:19:36,920 --> 00:19:45,290
granted so now<font color="#CCCCCC"> I'm</font><font color="#E5E5E5"> going to go on to my</font>

486
00:19:41,780 --> 00:19:47,899
module axial lsm<font color="#E5E5E5"> I'm going to talk about</font>

487
00:19:45,290 --> 00:19:50,780
how up CL uses this little secure

488
00:19:47,900 --> 00:19:54,470
module framework to impair our program

489
00:19:50,780 --> 00:19:56,330
based access control so the first

490
00:19:54,470 --> 00:19:58,970
question here is how do you define an

491
00:19:56,330 --> 00:20:01,129
application or<font color="#CCCCCC"> a program as we saw</font>

492
00:19:58,970 --> 00:20:03,320
earlier users are identified by their

493
00:20:01,130 --> 00:20:08,810
you<font color="#E5E5E5"> I did if they're in a group</font><font color="#CCCCCC"> I</font><font color="#E5E5E5"> they</font>

494
00:20:03,320 --> 00:20:11,750
GID so like us in there they defined by

495
00:20:08,810 --> 00:20:14,750
their uid now app<font color="#CCCCCC"> CL understand if</font><font color="#E5E5E5"> you</font>

496
00:20:11,750 --> 00:20:16,760
uses the path of an application as the

497
00:20:14,750 --> 00:20:19,610
application identified one of<font color="#E5E5E5"> the</font>

498
00:20:16,760 --> 00:20:21,860
reasons for<font color="#E5E5E5"> this is the aim for a high</font>

499
00:20:19,610 --> 00:20:24,740
level<font color="#E5E5E5"> of effective security users</font><font color="#CCCCCC"> be</font>

500
00:20:21,860 --> 00:20:27,409
<font color="#CCCCCC">able to understand what they're doing if</font>

501
00:20:24,740 --> 00:20:29,390
you get a user to<font color="#E5E5E5"> specify an application</font>

502
00:20:27,410 --> 00:20:30,890
by the path people will<font color="#E5E5E5"> be able to</font>

503
00:20:29,390 --> 00:20:33,380
understand<font color="#CCCCCC"> that they'll be</font><font color="#E5E5E5"> able to see</font>

504
00:20:30,890 --> 00:20:35,750
and know what's going<font color="#E5E5E5"> on so in example</font>

505
00:20:33,380 --> 00:20:40,940
there with our application nano we've

506
00:20:35,750 --> 00:20:42,320
got the hard bit nano for that so the

507
00:20:40,940 --> 00:20:44,540
key development<font color="#CCCCCC"> folks I'm going through</font>

508
00:20:42,320 --> 00:20:46,879
<font color="#E5E5E5">these one at a time the first one is the</font>

509
00:20:44,540 --> 00:20:50,629
labor process with that parts of the

510
00:20:46,880 --> 00:20:53,000
application so that the path stood sorry

511
00:20:50,630 --> 00:20:54,710
so that the process stores the part of

512
00:20:53,000 --> 00:20:56,870
the application and within able to

513
00:20:54,710 --> 00:21:00,380
identify those applications based on the

514
00:20:56,870 --> 00:21:03,020
park so as we saw before we've<font color="#CCCCCC"> got</font>

515
00:21:00,380 --> 00:21:05,450
security labels on our kernel data

516
00:21:03,020 --> 00:21:09,710
structures<font color="#CCCCCC"> a nap CL wants to add the</font>

517
00:21:05,450 --> 00:21:12,170
application path to the secure today the

518
00:21:09,710 --> 00:21:14,960
second bit is to label and i<font color="#CCCCCC"> know'd with</font>

519
00:21:12,170 --> 00:21:17,510
the pack all entries program based

520
00:21:14,960 --> 00:21:19,520
access control list entries so the

521
00:21:17,510 --> 00:21:24,080
application path and the relevant

522
00:21:19,520 --> 00:21:25,879
permissions need to be stored<font color="#E5E5E5"> in</font><font color="#CCCCCC"> them so</font>

523
00:21:24,080 --> 00:21:28,280
as we can see as<font color="#E5E5E5"> well as the application</font>

524
00:21:25,880 --> 00:21:31,280
path being stored<font color="#E5E5E5"> at CL wants to store</font>

525
00:21:28,280 --> 00:21:33,740
the path<font color="#E5E5E5"> and the permissions for that</font>

526
00:21:31,280 --> 00:21:37,580
item so then it knows what permissions

527
00:21:33,740 --> 00:21:40,190
about that I know has it's been able to

528
00:21:37,580 --> 00:21:42,080
check<font color="#E5E5E5"> the path to identify whether it's</font>

529
00:21:40,190 --> 00:21:44,030
the current application coming to that

530
00:21:42,080 --> 00:21:46,850
in a bit<font color="#E5E5E5"> more detail so as an example</font>

531
00:21:44,030 --> 00:21:52,428
<font color="#CCCCCC">width and</font><font color="#E5E5E5"> I actual application in there</font>

532
00:21:46,850 --> 00:21:53,840
got bin<font color="#CCCCCC"> nano</font><font color="#E5E5E5"> and are so just before</font>

533
00:21:52,429 --> 00:21:55,789
as we saw this earlier i'm just going<font color="#CCCCCC"> to</font>

534
00:21:53,840 --> 00:21:57,408
bring this back up because as i go in

535
00:21:55,789 --> 00:21:59,299
and explain some of the functions

536
00:21:57,409 --> 00:22:01,490
themselves it's worth bearing this in

537
00:21:59,299 --> 00:22:05,509
mind just to see where is actually

538
00:22:01,490 --> 00:22:08,840
occurring when it goes<font color="#CCCCCC"> off so how we saw</font>

539
00:22:05,509 --> 00:22:11,570
that set before visually it would look

540
00:22:08,840 --> 00:22:13,908
<font color="#CCCCCC">like this where our application goes to</font>

541
00:22:11,570 --> 00:22:15,799
access the file Ave Maria<font color="#E5E5E5"> Commission</font>

542
00:22:13,909 --> 00:22:19,399
<font color="#E5E5E5">certainly that hasn't got right</font>

543
00:22:15,799 --> 00:22:21,740
<font color="#CCCCCC">Commission's so it can't</font><font color="#E5E5E5"> write the last</font>

544
00:22:19,399 --> 00:22:23,719
<font color="#E5E5E5">one is to store a representation of the</font>

545
00:22:21,740 --> 00:22:26,720
<font color="#E5E5E5">permission entries in the file</font><font color="#CCCCCC"> system</font>

546
00:22:23,720 --> 00:22:29,090
extended attributes there is a reason

547
00:22:26,720 --> 00:22:31,490
<font color="#CCCCCC">for this and I think</font><font color="#E5E5E5"> I actually cover it</font>

548
00:22:29,090 --> 00:22:33,379
in a little<font color="#E5E5E5"> while so I'll see if I do if</font>

549
00:22:31,490 --> 00:22:37,669
<font color="#E5E5E5">I don't remind me and I'll</font><font color="#CCCCCC"> come back</font><font color="#E5E5E5"> to</font>

550
00:22:33,379 --> 00:22:40,850
it so if you get to keep it on the level

551
00:22:37,669 --> 00:22:42,499
where users are able to understand the

552
00:22:40,850 --> 00:22:44,449
extended attributes are going to be used

553
00:22:42,499 --> 00:22:47,299
to actually set the<font color="#E5E5E5"> permissions to these</font>

554
00:22:44,450 --> 00:22:50,720
five and it's done in a very similar way

555
00:22:47,299 --> 00:22:54,019
to how Apple's work so again I'm deep in

556
00:22:50,720 --> 00:22:55,580
you can do the sudo apt-get action which

557
00:22:54,019 --> 00:22:57,610
gives you a<font color="#CCCCCC"> file system attribute</font>

558
00:22:55,580 --> 00:23:00,649
package basically so rather than

559
00:22:57,610 --> 00:23:02,899
specifying your access controls you're

560
00:23:00,649 --> 00:23:08,029
specifying a file system and extended

561
00:23:02,899 --> 00:23:09,498
attribute so<font color="#E5E5E5"> waste that works as you</font><font color="#CCCCCC"> saw</font>

562
00:23:08,029 --> 00:23:11,440
on the side here<font color="#CCCCCC"> we've got our set f</font>

563
00:23:09,499 --> 00:23:14,570
attribute and I'm<font color="#E5E5E5"> getting fat tribute</font>

564
00:23:11,440 --> 00:23:15,619
now the set works in the same way as it

565
00:23:14,570 --> 00:23:18,799
did for the at all but we've got a

566
00:23:15,619 --> 00:23:21,289
<font color="#CCCCCC">couple of extra fields now the first one</font>

567
00:23:18,799 --> 00:23:24,200
the dash n is for the exact tribunal and

568
00:23:21,289 --> 00:23:27,259
that tells the security module which

569
00:23:24,200 --> 00:23:31,639
security namespace that this attribute

570
00:23:27,259 --> 00:23:33,889
is for the dash V is the<font color="#E5E5E5"> value which is</font>

571
00:23:31,639 --> 00:23:36,379
going<font color="#E5E5E5"> to specify the rules and also the</font>

572
00:23:33,889 --> 00:23:39,019
path that<font color="#CCCCCC"> we want to</font><font color="#E5E5E5"> enforce and the</font>

573
00:23:36,379 --> 00:23:42,199
dash<font color="#E5E5E5"> H specifies the file that which</font>

574
00:23:39,019 --> 00:23:45,049
wanting to enforce the permissions on so

575
00:23:42,200 --> 00:23:47,720
the<font color="#CCCCCC"> x attribute name space as i said the</font>

576
00:23:45,049 --> 00:23:50,529
fashion specifies this namespace<font color="#CCCCCC"> in the</font>

577
00:23:47,720 --> 00:23:54,799
kernel the security doctrine<font color="#E5E5E5"> that name</font>

578
00:23:50,529 --> 00:23:57,529
tells the security module that that

579
00:23:54,799 --> 00:24:01,100
extended attribute is for security

580
00:23:57,529 --> 00:24:03,520
module the axial suffix on the end of

581
00:24:01,100 --> 00:24:09,639
<font color="#E5E5E5">their tell y module that</font>

582
00:24:03,520 --> 00:24:11,320
and security<font color="#E5E5E5"> attribute is for app cm and</font>

583
00:24:09,640 --> 00:24:13,210
so<font color="#E5E5E5"> from here with the value we can see</font>

584
00:24:11,320 --> 00:24:15,700
<font color="#E5E5E5">that the application nano has read</font>

585
00:24:13,210 --> 00:24:20,220
permissions on the file photo<font color="#CCCCCC"> status on</font>

586
00:24:15,700 --> 00:24:22,780
fire then the<font color="#E5E5E5"> idea from this is after</font>

587
00:24:20,220 --> 00:24:25,180
setting the extended attribute it

588
00:24:22,780 --> 00:24:27,520
populates the island security label as

589
00:24:25,180 --> 00:24:29,440
we were talking<font color="#E5E5E5"> about a minute</font><font color="#CCCCCC"> ago with</font>

590
00:24:27,520 --> 00:24:33,879
the entries and permissions based on

591
00:24:29,440 --> 00:24:37,390
that value so here we<font color="#CCCCCC"> can see we set the</font>

592
00:24:33,880 --> 00:24:39,760
value been an 00 appt CL will then

593
00:24:37,390 --> 00:24:43,480
populate your name security label based

594
00:24:39,760 --> 00:24:45,490
on that to see if Italy we've got<font color="#E5E5E5"> our</font>

595
00:24:43,480 --> 00:24:46,840
file and we think about our program

596
00:24:45,490 --> 00:24:49,900
based<font color="#CCCCCC"> a call that we were talking about</font>

597
00:24:46,840 --> 00:24:52,840
before attached<font color="#CCCCCC"> to that far with</font><font color="#E5E5E5"> only</font>

598
00:24:49,900 --> 00:24:55,870
read permissions so it goes to read it

599
00:24:52,840 --> 00:24:59,439
absolutely fine wants to write it not

600
00:24:55,870 --> 00:25:01,600
out so the<font color="#CCCCCC"> way this works is you set</font>

601
00:24:59,440 --> 00:25:03,790
your extended attribute which populates

602
00:25:01,600 --> 00:25:06,429
the I know security label and that gives

603
00:25:03,790 --> 00:25:08,170
you your papal over the next bit of the

604
00:25:06,430 --> 00:25:10,840
talks between now and the end I'm going

605
00:25:08,170 --> 00:25:12,970
<font color="#E5E5E5">to talk about how app CL actually uses</font>

606
00:25:10,840 --> 00:25:14,590
the framework and the hooks itself that

607
00:25:12,970 --> 00:25:19,120
I'm<font color="#E5E5E5"> using so this will make a bit</font><font color="#CCCCCC"> more</font>

608
00:25:14,590 --> 00:25:21,340
sense so the much of itself is them in a

609
00:25:19,120 --> 00:25:25,409
folder called axial because that's the

610
00:25:21,340 --> 00:25:29,290
name of it and<font color="#CCCCCC"> that in there it's</font>

611
00:25:25,410 --> 00:25:32,830
<font color="#E5E5E5">compiled into the linux kernel 4.3 in</font>

612
00:25:29,290 --> 00:25:34,899
the security subdirectory you add the

613
00:25:32,830 --> 00:25:36,520
axial folder and<font color="#CCCCCC"> you have to edit the</font>

614
00:25:34,900 --> 00:25:38,230
make file link a conflict<font color="#E5E5E5"> just to the</font>

615
00:25:36,520 --> 00:25:42,580
<font color="#E5E5E5">configuration of</font><font color="#CCCCCC"> the colonel when you</font>

616
00:25:38,230 --> 00:25:46,180
compile it the files in there I've gotta

617
00:25:42,580 --> 00:25:48,460
pee LOL s7 ops ii and<font color="#E5E5E5"> Audino see which</font>

618
00:25:46,180 --> 00:25:50,020
are my main files and<font color="#E5E5E5"> then I've got the</font>

619
00:25:48,460 --> 00:25:51,880
header files for those in an including

620
00:25:50,020 --> 00:25:53,710
folder as well again there's a make file

621
00:25:51,880 --> 00:25:56,500
in a cake config in there for the

622
00:25:53,710 --> 00:26:02,890
colonel configuration and for compiling

623
00:25:56,500 --> 00:26:04,780
as well so<font color="#E5E5E5"> axioo understand sorry axioo</font>

624
00:26:02,890 --> 00:26:06,670
underscore<font color="#CCCCCC"> i descend or</font><font color="#E5E5E5"> see it</font>

625
00:26:04,780 --> 00:26:07,440
initializes the module it's where the

626
00:26:06,670 --> 00:26:08,789
other sim cook

627
00:26:07,440 --> 00:26:11,039
options are and it's where the

628
00:26:08,789 --> 00:26:14,700
permissions are<font color="#E5E5E5"> enforced so this is</font>

629
00:26:11,039 --> 00:26:16,649
<font color="#CCCCCC">where the sir in</font><font color="#E5E5E5"> the axial smh the</font>

630
00:26:14,700 --> 00:26:18,990
header file our security labels are

631
00:26:16,649 --> 00:26:20,639
defined and the actual<font color="#E5E5E5"> apple entries</font>

632
00:26:18,990 --> 00:26:24,139
themselves the data structure that<font color="#E5E5E5"> holds</font>

633
00:26:20,639 --> 00:26:27,029
the Packer is defined in there as well

634
00:26:24,139 --> 00:26:29,370
then in or<font color="#E5E5E5"> did not</font><font color="#CCCCCC"> see it</font><font color="#E5E5E5"> just contains</font>

635
00:26:27,029 --> 00:26:31,980
at the moment a few audit functions

636
00:26:29,370 --> 00:26:34,469
which<font color="#E5E5E5"> help me which helped the module</font>

637
00:26:31,980 --> 00:26:36,649
check the path of the current process

638
00:26:34,470 --> 00:26:38,820
against the label on<font color="#E5E5E5"> your i know'd and</font>

639
00:26:36,649 --> 00:26:41,518
it counts the<font color="#CCCCCC"> number of commission</font>

640
00:26:38,820 --> 00:26:44,009
entries that you've got and it also does

641
00:26:41,519 --> 00:26:48,240
conditional checks on that as well an

642
00:26:44,009 --> 00:26:50,970
ordinance<font color="#CCCCCC"> H actually defines a the</font>

643
00:26:48,240 --> 00:26:52,799
security data structure<font color="#CCCCCC"> that the part</font>

644
00:26:50,970 --> 00:26:56,549
for the application<font color="#E5E5E5"> is stored in called</font>

645
00:26:52,799 --> 00:27:01,879
task audit beta it sounds like a fancy

646
00:26:56,549 --> 00:27:01,879
name so last section in this talk then

647
00:27:03,440 --> 00:27:08,580
starting off<font color="#E5E5E5"> in axiom we're going to</font>

648
00:27:06,389 --> 00:27:11,729
look at the security labeling to start

649
00:27:08,580 --> 00:27:13,230
with now the security<font color="#E5E5E5"> labeling hooks</font>

650
00:27:11,730 --> 00:27:14,700
that are relevant for this we<font color="#E5E5E5"> spoke</font>

651
00:27:13,230 --> 00:27:16,679
about quickly earlier we've got<font color="#CCCCCC"> the I</font>

652
00:27:14,700 --> 00:27:19,169
know he'll up security and the I know

653
00:27:16,679 --> 00:27:21,360
free security like we said is also file

654
00:27:19,169 --> 00:27:24,210
a lock and file free I'm not<font color="#E5E5E5"> going to</font>

655
00:27:21,360 --> 00:27:26,908
<font color="#E5E5E5">look at those today now this</font><font color="#CCCCCC"> is a</font>

656
00:27:24,210 --> 00:27:29,460
description of the actual hooks

657
00:27:26,909 --> 00:27:32,789
themselves the app sales using this is

658
00:27:29,460 --> 00:27:35,490
the name of security hook app CL hook

659
00:27:32,789 --> 00:27:38,100
name there and this is what what the

660
00:27:35,490 --> 00:27:40,080
hook does so the alert security hook

661
00:27:38,100 --> 00:27:43,019
<font color="#E5E5E5">alligators and attaches the security</font>

662
00:27:40,080 --> 00:27:48,049
structure as we we mentioned earlier and

663
00:27:43,019 --> 00:27:52,440
<font color="#CCCCCC">freeing it then freezing so we see here</font>

664
00:27:48,049 --> 00:27:55,019
it's at<font color="#E5E5E5"> that last point just before the</font>

665
00:27:52,440 --> 00:27:57,539
action is made that<font color="#E5E5E5"> it's consulted and</font>

666
00:27:55,019 --> 00:27:59,879
then you can follow out your actions so

667
00:27:57,539 --> 00:28:01,139
if<font color="#E5E5E5"> we look at the hook itself and this</font>

668
00:27:59,879 --> 00:28:02,969
is how i'm going to<font color="#E5E5E5"> go through a few</font>

669
00:28:01,139 --> 00:28:05,370
looks this nice one is<font color="#E5E5E5"> just to</font><font color="#CCCCCC"> show you</font>

670
00:28:02,970 --> 00:28:08,879
<font color="#E5E5E5">how I'm going through</font><font color="#CCCCCC"> book so</font><font color="#E5E5E5"> it makes</font>

671
00:28:05,370 --> 00:28:12,539
sense really<font color="#E5E5E5"> so with the I know Dunlop</font>

672
00:28:08,879 --> 00:28:16,039
security hook got the inode and the

673
00:28:12,539 --> 00:28:18,600
inode security label the output function

674
00:28:16,039 --> 00:28:19,920
sex and I know security label to null

675
00:28:18,600 --> 00:28:24,409
and then

676
00:28:19,920 --> 00:28:27,900
to that Island the free security hook

677
00:28:24,410 --> 00:28:30,180
app CL sets the inode security label to

678
00:28:27,900 --> 00:28:34,680
know and then freeze the label that was

679
00:28:30,180 --> 00:28:36,330
stored on that island so carry on the

680
00:28:34,680 --> 00:28:41,160
new security labeling this<font color="#E5E5E5"> is now</font>

681
00:28:36,330 --> 00:28:43,399
looking at labeling the process path so

682
00:28:41,160 --> 00:28:46,020
the it's stored in the credentials

683
00:28:43,400 --> 00:28:48,030
native structure and so we've got<font color="#E5E5E5"> four</font>

684
00:28:46,020 --> 00:28:49,470
different we've got four different hooks

685
00:28:48,030 --> 00:28:52,080
<font color="#E5E5E5">there for that we've got</font><font color="#CCCCCC"> our friend</font>

686
00:28:49,470 --> 00:28:54,210
analog lab<font color="#E5E5E5"> Craig free thread repair and</font>

687
00:28:52,080 --> 00:28:56,520
repent transfer it's basically the<font color="#E5E5E5"> same</font>

688
00:28:54,210 --> 00:28:58,410
as year<font color="#E5E5E5"> Alex security</font><font color="#CCCCCC"> and your free</font>

689
00:28:56,520 --> 00:28:59,940
security except when it<font color="#CCCCCC"> comes to</font>

690
00:28:58,410 --> 00:29:03,030
credentials like this you've got<font color="#CCCCCC"> to deal</font>

691
00:28:59,940 --> 00:29:05,300
with transferring them over and also

692
00:29:03,030 --> 00:29:08,490
preparing a set before you actually

693
00:29:05,300 --> 00:29:10,169
populate it<font color="#E5E5E5"> I'm not going to go into</font>

694
00:29:08,490 --> 00:29:12,750
<font color="#CCCCCC">each of them this is</font><font color="#E5E5E5"> just the table</font>

695
00:29:10,170 --> 00:29:16,830
<font color="#E5E5E5">again same table but it tells you what</font>

696
00:29:12,750 --> 00:29:18,240
each of those hooks do and the top<font color="#E5E5E5"> I'm</font>

697
00:29:16,830 --> 00:29:22,379
gonna have a look through now quickly on

698
00:29:18,240 --> 00:29:25,200
this one is the<font color="#CCCCCC"> EP RM set crater which</font>

699
00:29:22,380 --> 00:29:27,450
saves security information in the

700
00:29:25,200 --> 00:29:30,030
security field based on information

701
00:29:27,450 --> 00:29:33,090
about a big hero and I'm going to tell

702
00:29:30,030 --> 00:29:36,870
<font color="#CCCCCC">you</font><font color="#E5E5E5"> what aids so binkie our own set</font>

703
00:29:33,090 --> 00:29:39,030
crater so I've said it saves security

704
00:29:36,870 --> 00:29:42,270
information in the great security field

705
00:29:39,030 --> 00:29:45,300
and<font color="#E5E5E5"> and the Linux bin PRN structure</font>

706
00:29:42,270 --> 00:29:47,670
which is passed to this hook and it's a

707
00:29:45,300 --> 00:29:51,149
structure used<font color="#E5E5E5"> to hold the arguments and</font>

708
00:29:47,670 --> 00:29:53,790
that use<font color="#CCCCCC"> we're loading binaries so when</font>

709
00:29:51,150 --> 00:29:56,850
a binary is loaded and it captures the

710
00:29:53,790 --> 00:30:01,260
path of that binary and it stores it in

711
00:29:56,850 --> 00:30:04,740
the credentials for that<font color="#CCCCCC"> process so here</font>

712
00:30:01,260 --> 00:30:08,940
as we can<font color="#E5E5E5"> see app</font><font color="#CCCCCC"> Co the</font><font color="#E5E5E5"> bpr a hook</font>

713
00:30:04,740 --> 00:30:10,800
identifies the path<font color="#E5E5E5"> for that binary and</font>

714
00:30:08,940 --> 00:30:15,110
then stores it in our task<font color="#E5E5E5"> or edit data</font>

715
00:30:10,800 --> 00:30:15,110
<font color="#E5E5E5">to run our credentials over there</font>

716
00:30:17,440 --> 00:30:23,570
we then have from that unknown<font color="#E5E5E5"> I know</font>

717
00:30:21,169 --> 00:30:27,350
security<font color="#CCCCCC"> level</font><font color="#E5E5E5"> set and our process</font>

718
00:30:23,570 --> 00:30:29,509
security level set so<font color="#E5E5E5"> going on to the</font>

719
00:30:27,350 --> 00:30:31,610
extended attributes we've got a set

720
00:30:29,509 --> 00:30:33,710
descending attribute<font color="#CCCCCC"> apotex ended</font>

721
00:30:31,610 --> 00:30:36,199
attribute again extended attribute a

722
00:30:33,710 --> 00:30:38,629
list extended attribute and a remove

723
00:30:36,200 --> 00:30:41,269
extended attribute pretty

724
00:30:38,629 --> 00:30:43,428
self-explanatory what all of those mean

725
00:30:41,269 --> 00:30:45,559
really what these do is the settings

726
00:30:43,429 --> 00:30:48,080
attribute it checks permissions for that

727
00:30:45,559 --> 00:30:51,649
user to<font color="#CCCCCC"> set extended afternoon so just</font>

728
00:30:48,080 --> 00:30:54,590
<font color="#CCCCCC">before you is set all of your normal</font>

729
00:30:51,649 --> 00:30:58,998
access controls go through consult sexy

730
00:30:54,590 --> 00:31:01,459
<font color="#CCCCCC">lsm and it checks that that user has</font>

731
00:30:58,999 --> 00:31:03,980
permission<font color="#CCCCCC"> to say extended attribute now</font>

732
00:31:01,460 --> 00:31:05,990
at the moment axial just checks that<font color="#CCCCCC"> the</font>

733
00:31:03,980 --> 00:31:08,059
user is running as root and so the user

734
00:31:05,990 --> 00:31:13,549
has<font color="#E5E5E5"> to run as root to be able to set set</font>

735
00:31:08,059 --> 00:31:15,350
<font color="#CCCCCC">the attribute so again a table saying</font>

736
00:31:13,549 --> 00:31:17,330
what each of them does bit pretty

737
00:31:15,350 --> 00:31:18,590
<font color="#E5E5E5">self-explanatory from the name</font><font color="#CCCCCC"> its</font>

738
00:31:17,330 --> 00:31:20,749
checks permission before that the only

739
00:31:18,590 --> 00:31:23,689
<font color="#CCCCCC">thing is</font><font color="#E5E5E5"> the post set extended attribute</font>

740
00:31:20,749 --> 00:31:25,639
I was said to set X act checks your

741
00:31:23,690 --> 00:31:29,080
permissions to set them and you purchase

742
00:31:25,639 --> 00:31:32,090
their exact you then deal with<font color="#CCCCCC"> the DA</font>

743
00:31:29,080 --> 00:31:33,470
the attribute that you said so you have

744
00:31:32,090 --> 00:31:35,830
to do that in a separate hook itself

745
00:31:33,470 --> 00:31:39,409
after you've checked<font color="#E5E5E5"> both permission</font>

746
00:31:35,830 --> 00:31:41,210
Sonia trees themselves and we were

747
00:31:39,409 --> 00:31:43,279
looking<font color="#CCCCCC"> at this earlier which gave us</font>

748
00:31:41,210 --> 00:31:46,159
our pakil idea over here but what

749
00:31:43,279 --> 00:31:49,399
actually is this well the only security

750
00:31:46,159 --> 00:31:52,249
language stores an array of an array of

751
00:31:49,399 --> 00:31:55,850
entries and these entries store a pack

752
00:31:52,249 --> 00:32:00,440
of entry that pakil entry has a tag the

753
00:31:55,850 --> 00:32:02,418
<font color="#E5E5E5">permission and a factoring and that's</font>

754
00:32:00,440 --> 00:32:05,320
basically what this<font color="#CCCCCC"> is so on</font><font color="#E5E5E5"> our</font>

755
00:32:02,419 --> 00:32:08,649
security label we've got an array of

756
00:32:05,320 --> 00:32:11,299
entries which is our pakil entries over

757
00:32:08,649 --> 00:32:12,830
so like<font color="#CCCCCC"> i said</font><font color="#E5E5E5"> about the posts a</font>

758
00:32:11,299 --> 00:32:14,179
extended attribute after you've checked

759
00:32:12,830 --> 00:32:17,360
permissions to set your extended

760
00:32:14,179 --> 00:32:21,889
attribute you can<font color="#CCCCCC"> then update the only</font>

761
00:32:17,360 --> 00:32:24,260
security field from them so here the

762
00:32:21,889 --> 00:32:26,020
first thing it does it takes the name

763
00:32:24,260 --> 00:32:32,120
and it checks that it has the<font color="#CCCCCC"> axial</font>

764
00:32:26,020 --> 00:32:34,970
<font color="#E5E5E5">security database then it takes the</font>

765
00:32:32,120 --> 00:32:37,070
value and it splits it into the path and

766
00:32:34,970 --> 00:32:40,520
the permissions based on the value

767
00:32:37,070 --> 00:32:44,480
that's been set the function make axial

768
00:32:40,520 --> 00:32:47,090
entry then converts this into the axial

769
00:32:44,480 --> 00:32:49,700
pakil entry structure and that's then

770
00:32:47,090 --> 00:32:52,939
stored as an entry<font color="#E5E5E5"> on the inode security</font>

771
00:32:49,700 --> 00:32:56,920
rating now if this is<font color="#CCCCCC"> just an example</font>

772
00:32:52,940 --> 00:33:00,020
this<font color="#CCCCCC"> is some</font><font color="#E5E5E5"> kernel log output so here</font>

773
00:32:56,920 --> 00:33:02,270
can you<font color="#CCCCCC"> see that on the way so you can</font>

774
00:33:00,020 --> 00:33:05,240
just<font color="#CCCCCC"> see they offset three values</font><font color="#E5E5E5"> orphan</font>

775
00:33:02,270 --> 00:33:08,060
<font color="#E5E5E5">a no read write execute and</font><font color="#CCCCCC"> the axial</font>

776
00:33:05,240 --> 00:33:09,920
sorry to<font color="#E5E5E5"> make pakil entry function as</font>

777
00:33:08,060 --> 00:33:13,600
then split it up so we've got the path

778
00:33:09,920 --> 00:33:16,430
and the permission permission permission

779
00:33:13,600 --> 00:33:18,530
and that would then be stored as three

780
00:33:16,430 --> 00:33:22,730
separate entries on that array in the

781
00:33:18,530 --> 00:33:24,170
<font color="#E5E5E5">lane so now this should make sense um</font>

782
00:33:22,730 --> 00:33:27,800
you know what's<font color="#E5E5E5"> happening between each</font>

783
00:33:24,170 --> 00:33:30,290
bit here and walk epochal actually it so

784
00:33:27,800 --> 00:33:33,200
now we've actually extended that idea to

785
00:33:30,290 --> 00:33:35,360
this that we set our value the HCL lsm

786
00:33:33,200 --> 00:33:39,020
security hook then populates the inode

787
00:33:35,360 --> 00:33:41,060
security label from that value with our

788
00:33:39,020 --> 00:33:44,900
<font color="#CCCCCC">apple actually being an array of entries</font>

789
00:33:41,060 --> 00:33:46,010
on the lane now that things are labeled

790
00:33:44,900 --> 00:33:47,360
we've actually not to enforce the

791
00:33:46,010 --> 00:33:50,450
permissions to our read write execute

792
00:33:47,360 --> 00:33:52,639
permission this bit isn't isn't finished

793
00:33:50,450 --> 00:33:54,650
yet the modulus to London developments

794
00:33:52,640 --> 00:33:58,280
there are still still things that<font color="#E5E5E5"> need</font>

795
00:33:54,650 --> 00:34:00,470
to be done but it's getting there and we

796
00:33:58,280 --> 00:34:02,629
look<font color="#E5E5E5"> really at</font><font color="#CCCCCC"> 22 different</font><font color="#E5E5E5"> types of</font>

797
00:34:00,470 --> 00:34:04,460
<font color="#E5E5E5">commission of reading and we've got our</font>

798
00:34:02,630 --> 00:34:08,090
general<font color="#CCCCCC"> permission hooks and then we've</font>

799
00:34:04,460 --> 00:34:09,560
got<font color="#E5E5E5"> our more specific permissions so as</font>

800
00:34:08,090 --> 00:34:12,350
<font color="#E5E5E5">I mentioned early or did not see has</font>

801
00:34:09,560 --> 00:34:14,000
some important audit functions for the

802
00:34:12,350 --> 00:34:15,949
rest of this I'm only really going to

803
00:34:14,000 --> 00:34:17,989
talk about three of them and the check

804
00:34:15,949 --> 00:34:20,388
<font color="#E5E5E5">car and print park which just checks at</font>

805
00:34:17,989 --> 00:34:22,479
one of the tackle entry and<font color="#CCCCCC"> as a path</font>

806
00:34:20,389 --> 00:34:25,310
name that matches the current process

807
00:34:22,480 --> 00:34:27,429
then it's got a axial check permission

808
00:34:25,310 --> 00:34:29,500
last match which checks the

809
00:34:27,429 --> 00:34:31,899
to Mars against the<font color="#CCCCCC"> pack alem trees and</font>

810
00:34:29,500 --> 00:34:34,210
then check<font color="#CCCCCC"> out the match checks for a</font>

811
00:34:31,899 --> 00:34:39,388
specific requested permission rather

812
00:34:34,210 --> 00:34:41,740
than a mask that's<font color="#E5E5E5"> being passed to it so</font>

813
00:34:39,389 --> 00:34:43,750
here we've got our Rhino permission and

814
00:34:41,739 --> 00:34:46,828
our file Commission so the inode

815
00:34:43,750 --> 00:34:51,369
permission is called in the existing

816
00:34:46,829 --> 00:34:55,540
<font color="#CCCCCC">Linux permission checks so the owner</font>

817
00:34:51,369 --> 00:34:57,730
permission hook gives axial a hook in to

818
00:34:55,540 --> 00:35:03,550
also perform additional access control

819
00:34:57,730 --> 00:35:05,890
when Linux checks its permissions so the

820
00:35:03,550 --> 00:35:08,829
app<font color="#CCCCCC"> CEO</font><font color="#E5E5E5"> check permission last matches</font>

821
00:35:05,890 --> 00:35:11,140
the function that's used in this in this

822
00:35:08,829 --> 00:35:13,990
hook you pass the<font color="#E5E5E5"> ID own security label</font>

823
00:35:11,140 --> 00:35:16,569
the current credentials and the

824
00:35:13,990 --> 00:35:20,680
permission mask we've got the inode

825
00:35:16,569 --> 00:35:24,099
admission hook takes the inode checks

826
00:35:20,680 --> 00:35:27,040
the path against the path on the entries

827
00:35:24,099 --> 00:35:29,020
in the array and then runs this function

828
00:35:27,040 --> 00:35:31,300
to check<font color="#E5E5E5"> that the mask that's passed to</font>

829
00:35:29,020 --> 00:35:34,780
it<font color="#E5E5E5"> it's requested permission that the</font>

830
00:35:31,300 --> 00:35:37,420
<font color="#E5E5E5">colonel is asking</font><font color="#CCCCCC"> for is present on the</font>

831
00:35:34,780 --> 00:35:38,589
label if it's<font color="#E5E5E5"> not if it's asking for</font>

832
00:35:37,420 --> 00:35:41,170
writing<font color="#CCCCCC"> its own you've got read</font>

833
00:35:38,589 --> 00:35:44,440
permission then it won't work around

834
00:35:41,170 --> 00:35:47,470
access based on that there are more

835
00:35:44,440 --> 00:35:50,260
specific permissions we're looking at an

836
00:35:47,470 --> 00:35:54,069
actual operation itself so and I know

837
00:35:50,260 --> 00:35:55,599
the I know<font color="#E5E5E5"> Craig hook is called funnily</font>

838
00:35:54,069 --> 00:35:58,599
enough every time you go to create an

839
00:35:55,599 --> 00:36:00,640
item and the<font color="#E5E5E5"> I don't rename book funnily</font>

840
00:35:58,599 --> 00:36:05,170
enough is called every time you want<font color="#E5E5E5"> to</font>

841
00:36:00,640 --> 00:36:08,049
rename a knife so the check<font color="#CCCCCC"> out per</font>

842
00:36:05,170 --> 00:36:10,359
match it takes the I know security label

843
00:36:08,049 --> 00:36:12,700
the current credentials the requested

844
00:36:10,359 --> 00:36:14,440
permission and because it based off the

845
00:36:12,700 --> 00:36:17,589
other function at the moment it also

846
00:36:14,440 --> 00:36:19,420
takes a<font color="#CCCCCC"> mouse but those two you pass the</font>

847
00:36:17,589 --> 00:36:19,850
same permission to them and it then

848
00:36:19,420 --> 00:36:21,950
checks

849
00:36:19,850 --> 00:36:24,589
you've got the permission you're asking

850
00:36:21,950 --> 00:36:26,960
for see that in action in the island of

851
00:36:24,590 --> 00:36:30,620
great hook just<font color="#E5E5E5"> before and I noticed</font>

852
00:36:26,960 --> 00:36:33,410
created app<font color="#CCCCCC"> cl's consulted again checks</font>

853
00:36:30,620 --> 00:36:36,589
the current credential path against that

854
00:36:33,410 --> 00:36:39,560
on the island security label and then

855
00:36:36,590 --> 00:36:41,090
thought I know create and I've specified

856
00:36:39,560 --> 00:36:44,779
that you have to<font color="#E5E5E5"> have write permission</font>

857
00:36:41,090 --> 00:36:48,020
to be able<font color="#E5E5E5"> to</font><font color="#CCCCCC"> be</font><font color="#E5E5E5"> able to write sorry to</font>

858
00:36:44,780 --> 00:36:50,600
be<font color="#CCCCCC"> able to create that far so I entries</font>

859
00:36:48,020 --> 00:36:54,320
had write permission on man let<font color="#CCCCCC"> it be</font>

860
00:36:50,600 --> 00:36:57,350
fine look if it didn't if it just<font color="#E5E5E5"> had</font>

861
00:36:54,320 --> 00:37:00,220
read and it was asking for<font color="#E5E5E5"> ID and then</font>

862
00:36:57,350 --> 00:37:06,589
they wouldn't grant access based on that

863
00:37:00,220 --> 00:37:08,839
so the next<font color="#CCCCCC"> steps the</font><font color="#E5E5E5"> next steps the</font>

864
00:37:06,590 --> 00:37:11,270
literal next steps for me is the<font color="#E5E5E5"> problem</font>

865
00:37:08,840 --> 00:37:15,860
with<font color="#E5E5E5"> all of this is the I know security</font>

866
00:37:11,270 --> 00:37:17,990
label is stored in RAM and so you set

867
00:37:15,860 --> 00:37:19,550
the auto security label based off the

868
00:37:17,990 --> 00:37:21,740
extended attribute this is what I was

869
00:37:19,550 --> 00:37:23,540
<font color="#E5E5E5">going to come back to and I am coming</font>

870
00:37:21,740 --> 00:37:26,779
back<font color="#E5E5E5"> to it so I did remember I need to</font>

871
00:37:23,540 --> 00:37:28,279
remind me<font color="#E5E5E5"> now and the extended attribute</font>

872
00:37:26,780 --> 00:37:30,530
the<font color="#CCCCCC"> filesystem</font><font color="#E5E5E5"> extended attributes</font>

873
00:37:28,280 --> 00:37:32,420
stored on the list whereas the island

874
00:37:30,530 --> 00:37:34,100
spiritual ableism this is one reason

875
00:37:32,420 --> 00:37:36,950
<font color="#E5E5E5">I've been using the extended attributes</font>

876
00:37:34,100 --> 00:37:39,380
so that when you reboot the system there

877
00:37:36,950 --> 00:37:42,649
<font color="#CCCCCC">is still a</font><font color="#E5E5E5"> record of the commissioners</font>

878
00:37:39,380 --> 00:37:44,510
that<font color="#E5E5E5"> you want to enforce so next thing</font>

879
00:37:42,650 --> 00:37:47,000
that<font color="#CCCCCC"> the module do is is going to</font>

880
00:37:44,510 --> 00:37:49,850
repopulate the inode security<font color="#CCCCCC"> label in</font>

881
00:37:47,000 --> 00:37:52,760
the same way it did on the photo set X a

882
00:37:49,850 --> 00:37:54,290
crook and accept it will do it when it

883
00:37:52,760 --> 00:37:59,090
reboots based on the value that's<font color="#E5E5E5"> stored</font>

884
00:37:54,290 --> 00:38:00,620
for it so again we can see<font color="#E5E5E5"> here the same</font>

885
00:37:59,090 --> 00:38:02,870
i'm not<font color="#E5E5E5"> sure why that's in there twice</font>

886
00:38:00,620 --> 00:38:04,279
actually but on the next steps there the

887
00:38:02,870 --> 00:38:05,690
way this<font color="#CCCCCC"> is going</font><font color="#E5E5E5"> to be done you got</font>

888
00:38:04,280 --> 00:38:08,600
some more bugs there's quite a lot<font color="#E5E5E5"> of</font>

889
00:38:05,690 --> 00:38:10,010
hooks in the<font color="#CCCCCC"> NSM framework now when it</font>

890
00:38:08,600 --> 00:38:12,350
first started there wasn't as many

891
00:38:10,010 --> 00:38:14,840
business there's quite a few now now the

892
00:38:12,350 --> 00:38:18,560
steps security get security<font color="#E5E5E5"> list</font>

893
00:38:14,840 --> 00:38:21,400
security notify security context and set

894
00:38:18,560 --> 00:38:24,500
security context the couple more

895
00:38:21,400 --> 00:38:27,410
basically all<font color="#CCCCCC"> of these have to be</font>

896
00:38:24,500 --> 00:38:28,369
<font color="#CCCCCC">working together just right and when you</font>

897
00:38:27,410 --> 00:38:30,019
remove it<font color="#E5E5E5"> or</font>

898
00:38:28,369 --> 00:38:34,690
populated I haven't<font color="#E5E5E5"> got it just right</font>

899
00:38:30,019 --> 00:38:37,160
yet so the set security home the idea is

900
00:38:34,690 --> 00:38:41,420
that it checks the security<font color="#E5E5E5"> namespace</font>

901
00:38:37,160 --> 00:38:44,660
again and it then runs our make axial

902
00:38:41,420 --> 00:38:46,759
entry function to populate it based off

903
00:38:44,660 --> 00:38:49,129
the value<font color="#E5E5E5"> that's that so it actually</font>

904
00:38:46,759 --> 00:38:50,960
works in exactly the same way it's just

905
00:38:49,130 --> 00:38:53,210
calling on a different hook so rather

906
00:38:50,960 --> 00:38:55,700
than populating it when the extended

907
00:38:53,210 --> 00:38:58,180
attribute is set it's populated based on

908
00:38:55,700 --> 00:39:00,410
that attribute when the system reboots

909
00:38:58,180 --> 00:39:01,430
so the last time back to<font color="#CCCCCC"> this format</font>

910
00:39:00,410 --> 00:39:05,890
you're probably sick of seeing this

911
00:39:01,430 --> 00:39:08,419
image now but we now have from that our

912
00:39:05,890 --> 00:39:12,920
application oriented access control

913
00:39:08,420 --> 00:39:15,259
model so then further development for

914
00:39:12,920 --> 00:39:18,410
this after<font color="#CCCCCC"> the next steps and once I've</font>

915
00:39:15,259 --> 00:39:19,519
<font color="#CCCCCC">got all</font><font color="#E5E5E5"> of that working to two bits of</font>

916
00:39:18,410 --> 00:39:21,109
further development i'm going to talk

917
00:39:19,519 --> 00:39:23,868
<font color="#E5E5E5">about quickly the first one is</font>

918
00:39:21,109 --> 00:39:27,950
application<font color="#CCCCCC"> route and the second one is</font>

919
00:39:23,869 --> 00:39:31,220
<font color="#E5E5E5">default application types such as a web</font>

920
00:39:27,950 --> 00:39:35,480
application type<font color="#CCCCCC"> i have a PTP type word</font>

921
00:39:31,220 --> 00:39:37,399
processing type something like so the

922
00:39:35,480 --> 00:39:40,609
first<font color="#E5E5E5"> one we were looking at groups has</font>

923
00:39:37,400 --> 00:39:45,039
been<font color="#E5E5E5"> that</font><font color="#CCCCCC"> cause we saw they were stored</font>

924
00:39:40,609 --> 00:39:48,410
with you uid firms for group ggod depots

925
00:39:45,039 --> 00:39:50,420
now to make it nice and<font color="#CCCCCC"> simple and keep</font>

926
00:39:48,410 --> 00:39:52,069
it keep it nice for the user to you so

927
00:39:50,420 --> 00:39:54,529
that it reflects the<font color="#E5E5E5"> apple a bit more</font>

928
00:39:52,069 --> 00:39:58,460
and we can just<font color="#CCCCCC"> turn this into adding a</font>

929
00:39:54,529 --> 00:40:01,789
you before the parking permissions to to

930
00:39:58,460 --> 00:40:03,559
set our user tackle wouldn't be user

931
00:40:01,789 --> 00:40:05,930
sorry that would be<font color="#E5E5E5"> application not user</font>

932
00:40:03,559 --> 00:40:08,509
on that second one so here where it says

933
00:40:05,930 --> 00:40:10,999
<font color="#E5E5E5">user that would be</font><font color="#CCCCCC"> application so ignore</font>

934
00:40:08,509 --> 00:40:12,589
that but group would still be group but

935
00:40:10,999 --> 00:40:15,379
it would<font color="#CCCCCC"> be an application group and so</font>

936
00:40:12,589 --> 00:40:16,910
you<font color="#E5E5E5"> can set application groups and you</font>

937
00:40:15,380 --> 00:40:18,289
can have the other so we still reflect

938
00:40:16,910 --> 00:40:20,509
about the<font color="#E5E5E5"> only difference is beer with</font>

939
00:40:18,289 --> 00:40:23,779
<font color="#CCCCCC">the application not user at the top</font>

940
00:40:20,509 --> 00:40:28,039
<font color="#CCCCCC">there</font><font color="#E5E5E5"> then the second one like I said a</font>

941
00:40:23,779 --> 00:40:29,779
default application types in the abseil

942
00:40:28,039 --> 00:40:32,539
papal entry structure at the<font color="#E5E5E5"> moment I</font>

943
00:40:29,779 --> 00:40:36,680
<font color="#E5E5E5">have an unused field which</font><font color="#CCCCCC"> is the</font><font color="#E5E5E5"> tag</font>

944
00:40:32,539 --> 00:40:39,170
and now that will be used for<font color="#E5E5E5"> a default</font>

945
00:40:36,680 --> 00:40:40,750
application types so you might have say

946
00:40:39,170 --> 00:40:43,690
a word document

947
00:40:40,750 --> 00:40:45,670
or word processing application and you

948
00:40:43,690 --> 00:40:48,400
know that word processing applications

949
00:40:45,670 --> 00:40:51,310
need a default set of permissions and

950
00:40:48,400 --> 00:40:53,860
you would then be able to<font color="#E5E5E5"> specify per</font>

951
00:40:51,310 --> 00:40:55,660
application type rather than the

952
00:40:53,860 --> 00:40:57,460
application itself and then any

953
00:40:55,660 --> 00:40:59,799
applications that fall under that type

954
00:40:57,460 --> 00:41:01,450
would be enforced like that there's a

955
00:40:59,800 --> 00:41:02,860
there's a bit more<font color="#CCCCCC"> with putting default</font>

956
00:41:01,450 --> 00:41:04,540
permissions and things like that in

957
00:41:02,860 --> 00:41:08,400
there but that's somewhere that it can

958
00:41:04,540 --> 00:41:11,110
go from<font color="#E5E5E5"> here</font><font color="#CCCCCC"> as well so in conclusion</font>

959
00:41:08,400 --> 00:41:13,420
come back to this slide we talked about

960
00:41:11,110 --> 00:41:15,270
access controls talked about<font color="#E5E5E5"> map our</font>

961
00:41:13,420 --> 00:41:17,650
backpack apples and Pacal's

962
00:41:15,270 --> 00:41:20,230
user-oriented application-oriented

963
00:41:17,650 --> 00:41:23,710
<font color="#CCCCCC">access controls talks about a load of</font>

964
00:41:20,230 --> 00:41:25,720
the next<font color="#CCCCCC"> colonel data structures the</font>

965
00:41:23,710 --> 00:41:27,100
<font color="#CCCCCC">linux security module framework and then</font>

966
00:41:25,720 --> 00:41:29,410
for axial we've talked about<font color="#E5E5E5"> the hook</font>

967
00:41:27,100 --> 00:41:31,299
functions you want it<font color="#E5E5E5"> functions the</font>

968
00:41:29,410 --> 00:41:37,109
<font color="#E5E5E5">packer design and future work on it as</font>

969
00:41:31,300 --> 00:41:37,110
well has<font color="#E5E5E5"> anyone got your questions</font>

970
00:41:40,700 --> 00:41:46,710
did you<font color="#E5E5E5"> look at alternative approaches</font>

971
00:41:43,530 --> 00:41:49,980
or using<font color="#E5E5E5"> Cypress of ideas simple vs</font>

972
00:41:46,710 --> 00:41:54,630
these places called<font color="#CCCCCC"> horizontals on</font>

973
00:41:49,980 --> 00:41:56,460
<font color="#E5E5E5">desktop and I've mainly a part of the</font>

974
00:41:54,630 --> 00:41:58,770
project has been to you<font color="#E5E5E5"> to security</font>

975
00:41:56,460 --> 00:42:00,150
module framework so a lot of a lot what

976
00:41:58,770 --> 00:42:01,830
I've<font color="#E5E5E5"> been doing has been looking at the</font>

977
00:42:00,150 --> 00:42:04,260
existing modules there which as I said

978
00:42:01,830 --> 00:42:06,450
before is my desi lydic<font color="#CCCCCC"> at parmer smack</font>

979
00:42:04,260 --> 00:42:09,090
things like that and the idea<font color="#CCCCCC"> was to use</font>

980
00:42:06,450 --> 00:42:12,149
that framework to just try<font color="#E5E5E5"> and implement</font>

981
00:42:09,090 --> 00:42:13,800
this model and as far as as far as the

982
00:42:12,150 --> 00:42:15,450
other one though that you mentioned now

983
00:42:13,800 --> 00:42:18,770
I haven't looked into a lot of them<font color="#E5E5E5"> too</font>

984
00:42:15,450 --> 00:42:18,770
<font color="#E5E5E5">much at the moment</font>

985
00:42:27,870 --> 00:42:35,920
so on the diagram he has<font color="#E5E5E5"> slide that we</font>

986
00:42:32,110 --> 00:42:38,710
have the sort<font color="#E5E5E5"> of chain of checks and</font>

987
00:42:35,920 --> 00:42:42,670
then you said the<font color="#E5E5E5"> one who has the final</font>

988
00:42:38,710 --> 00:42:45,940
say yeah how does<font color="#CCCCCC"> that work that I mean</font>

989
00:42:42,670 --> 00:42:49,210
dude<font color="#E5E5E5"> I'm guessing that the steps higher</font>

990
00:42:45,940 --> 00:42:50,950
up the chain if they fail then your

991
00:42:49,210 --> 00:42:52,360
module<font color="#E5E5E5"> will never be involved in this</font>

992
00:42:50,950 --> 00:42:55,180
question i'm thinking<font color="#CCCCCC"> like if you say</font>

993
00:42:52,360 --> 00:42:57,490
now as we access a file the usual a

994
00:42:55,180 --> 00:43:02,259
zombie access we'll do a<font color="#CCCCCC"> little writing</font>

995
00:42:57,490 --> 00:43:04,689
this would be access the like you say

996
00:43:02,260 --> 00:43:06,610
whichever stage<font color="#CCCCCC"> it's then denied access</font>

997
00:43:04,690 --> 00:43:08,020
that is where it would<font color="#CCCCCC"> be cut off so</font>

998
00:43:06,610 --> 00:43:09,580
they wouldn't consult anything further

999
00:43:08,020 --> 00:43:11,650
down than that so if it's already

1000
00:43:09,580 --> 00:43:13,480
already offered by that under the<font color="#CCCCCC"> data</font>

1001
00:43:11,650 --> 00:43:14,590
check to live there say an error and

1002
00:43:13,480 --> 00:43:22,390
then<font color="#E5E5E5"> wouldn't wouldn't carry that</font>

1003
00:43:14,590 --> 00:43:25,630
through and<font color="#CCCCCC"> i started at the start</font><font color="#E5E5E5"> of a</font>

1004
00:43:22,390 --> 00:43:28,210
fun year and so would have been except

1005
00:43:25,630 --> 00:43:30,190
temara started research forex off in the

1006
00:43:28,210 --> 00:43:32,860
summer before this<font color="#E5E5E5"> i hadn't hadn't done</font>

1007
00:43:30,190 --> 00:43:35,290
any<font color="#E5E5E5"> c programming before and i would</font>

1008
00:43:32,860 --> 00:43:36,730
really turn all that much so did a

1009
00:43:35,290 --> 00:43:38,770
couple of<font color="#E5E5E5"> months research like that and</font>

1010
00:43:36,730 --> 00:43:42,340
then then you have the developments in

1011
00:43:38,770 --> 00:43:43,960
September but I've<font color="#CCCCCC"> changed my mind on</font>

1012
00:43:42,340 --> 00:43:48,330
what needs to be done so many times

1013
00:43:43,960 --> 00:43:48,330
between now and then but<font color="#CCCCCC"> yeah</font>

1014
00:43:53,180 --> 00:44:00,660
as a reason using them the 4.3 Carol's

1015
00:43:57,599 --> 00:44:03,900
<font color="#E5E5E5">owing their features in the lsm those</font>

1016
00:44:00,660 --> 00:44:06,868
the reason I'm using the 4.3 kernel is

1017
00:44:03,900 --> 00:44:08,490
when I<font color="#CCCCCC"> started the current version of</font>

1018
00:44:06,869 --> 00:44:12,390
the colonel was four point one point six

1019
00:44:08,490 --> 00:44:14,279
and I were developing against that the

1020
00:44:12,390 --> 00:44:15,720
problem we're<font color="#E5E5E5"> going from kernel versions</font>

1021
00:44:14,279 --> 00:44:17,640
of kernel version is nothing is

1022
00:44:15,720 --> 00:44:21,959
guaranteed to be the same between each

1023
00:44:17,640 --> 00:44:24,569
version so and about January just<font color="#E5E5E5"> before</font>

1024
00:44:21,960 --> 00:44:26,730
january i decided to update 4.3<font color="#CCCCCC"> a</font>

1025
00:44:24,569 --> 00:44:29,069
village before january because that's

1026
00:44:26,730 --> 00:44:30,779
what it<font color="#E5E5E5"> was at the time and the thing</font>

1027
00:44:29,069 --> 00:44:33,299
that they've changed was how to

1028
00:44:30,779 --> 00:44:34,829
initialize all<font color="#E5E5E5"> of the hooks the whole</font>

1029
00:44:33,299 --> 00:44:36,990
way the other<font color="#E5E5E5"> celebrate was what changed</font>

1030
00:44:34,829 --> 00:44:38,910
and<font color="#CCCCCC"> i met with</font><font color="#E5E5E5"> my supervisor and I</font>

1031
00:44:36,990 --> 00:44:40,439
basically said I'm not updating kernel

1032
00:44:38,910 --> 00:44:43,230
versions again before the<font color="#CCCCCC"> project's</font>

1033
00:44:40,440 --> 00:44:45,150
finished because he kind of say going to

1034
00:44:43,230 --> 00:44:46,859
do that<font color="#E5E5E5"> now there's a lot more in there</font>

1035
00:44:45,150 --> 00:44:49,619
and that would<font color="#E5E5E5"> have taken a lot project</font>

1036
00:44:46,859 --> 00:44:52,230
time to change that but<font color="#E5E5E5"> following the</font>

1037
00:44:49,619 --> 00:44:54,539
completion of the project for unique I

1038
00:44:52,230 --> 00:44:57,150
can then<font color="#E5E5E5"> continue work on it to</font><font color="#CCCCCC"> update</font>

1039
00:44:54,539 --> 00:45:04,019
it to the latest latest version does

1040
00:44:57,150 --> 00:45:05,880
that make you like<font color="#E5E5E5"> a and it makes a good</font>

1041
00:45:04,019 --> 00:45:07,950
case for you if you're doing something

1042
00:45:05,880 --> 00:45:10,589
like that submitting submitting the work

1043
00:45:07,950 --> 00:45:12,419
up because if you submit some code to

1044
00:45:10,589 --> 00:45:14,700
the colonel community and something gets

1045
00:45:12,420 --> 00:45:16,440
accepted some of the<font color="#CCCCCC"> maintenance on that</font>

1046
00:45:14,700 --> 00:45:18,359
kind of get those by the<font color="#E5E5E5"> people that</font>

1047
00:45:16,440 --> 00:45:20,130
control certain areas but some of that

1048
00:45:18,359 --> 00:45:21,989
maintenance get done gets done for you

1049
00:45:20,130 --> 00:45:24,569
so it's kind of to encourage people to

1050
00:45:21,989 --> 00:45:25,890
submit their code and get<font color="#E5E5E5"> it involved</font>

1051
00:45:24,569 --> 00:45:28,019
<font color="#E5E5E5">with their</font><font color="#CCCCCC"> search that some of that gets</font>

1052
00:45:25,890 --> 00:45:29,308
<font color="#CCCCCC">done for you otherwise it can be</font>

1053
00:45:28,019 --> 00:45:38,819
difficult going from version to version

1054
00:45:29,309 --> 00:45:41,720
depending what's changed<font color="#CCCCCC"> okay and</font><font color="#E5E5E5"> so am</font>

1055
00:45:38,819 --> 00:45:44,730
i under something that every time you

1056
00:45:41,720 --> 00:45:47,609
<font color="#E5E5E5">make some progress on</font><font color="#CCCCCC"> what're you</font>

1057
00:45:44,730 --> 00:45:49,380
active asset that's<font color="#E5E5E5"> great so do you have</font>

1058
00:45:47,610 --> 00:45:51,390
the<font color="#CCCCCC"> development pipeline or sometimes</font>

1059
00:45:49,380 --> 00:45:53,550
even<font color="#E5E5E5"> through itself to do all of their</font>

1060
00:45:51,390 --> 00:45:56,220
for sure how exactly does among us as

1061
00:45:53,550 --> 00:45:59,550
the pre your hands<font color="#E5E5E5"> also do any automated</font>

1062
00:45:56,220 --> 00:46:02,430
tasking on it at the moment i'll be

1063
00:45:59,550 --> 00:46:04,440
honest as far as testing goes and there

1064
00:46:02,430 --> 00:46:06,629
was quite a long time with development

1065
00:46:04,440 --> 00:46:08,430
that there was actually nothing being

1066
00:46:06,630 --> 00:46:10,320
printed out anywhere it was<font color="#E5E5E5"> literally</font>

1067
00:46:08,430 --> 00:46:14,970
just<font color="#CCCCCC"> trying</font><font color="#E5E5E5"> to get things to be in the</font>

1068
00:46:10,320 --> 00:46:16,530
right place sorry could you ask that

1069
00:46:14,970 --> 00:46:19,680
<font color="#E5E5E5">last bit again just forgot what I was</font>

1070
00:46:16,530 --> 00:46:20,970
already<font color="#E5E5E5"> Thursday yes so I haven't</font><font color="#CCCCCC"> really</font>

1071
00:46:19,680 --> 00:46:22,859
been able to do a<font color="#E5E5E5"> lot of testing like</font>

1072
00:46:20,970 --> 00:46:25,439
that I do have a script because I

1073
00:46:22,860 --> 00:46:28,590
develop it and using the IDE actin and

1074
00:46:25,440 --> 00:46:30,210
so I develop it in there and<font color="#E5E5E5"> then</font><font color="#CCCCCC"> I sync</font>

1075
00:46:28,590 --> 00:46:33,420
it to my gear<font color="#E5E5E5"> and then I've</font><font color="#CCCCCC"> got a script</font>

1076
00:46:30,210 --> 00:46:35,790
the updates it into the kernel directory

1077
00:46:33,420 --> 00:46:37,890
and then then does the compile there as

1078
00:46:35,790 --> 00:46:40,350
well so<font color="#CCCCCC"> I've got</font><font color="#E5E5E5"> that bit automated as</font>

1079
00:46:37,890 --> 00:46:43,170
far as going from going from there

1080
00:46:40,350 --> 00:46:45,060
through to compile but the testing side

1081
00:46:43,170 --> 00:46:47,520
of it<font color="#E5E5E5"> and that's just after every</font>

1082
00:46:45,060 --> 00:46:49,200
compile I'm trying<font color="#CCCCCC"> to</font><font color="#E5E5E5"> do one specific</font>

1083
00:46:47,520 --> 00:46:52,470
thing so at the moment I test that and

1084
00:46:49,200 --> 00:46:55,350
then I then I carry<font color="#CCCCCC"> off so a couple</font>

1085
00:46:52,470 --> 00:46:57,299
suggestions are firstly in terms of the

1086
00:46:55,350 --> 00:46:59,100
fact<font color="#E5E5E5"> of the</font><font color="#CCCCCC"> units on cisco</font>

1087
00:46:57,300 --> 00:47:01,050
infrastructure changes<font color="#CCCCCC"> or original basis</font>

1088
00:46:59,100 --> 00:47:03,240
you should<font color="#E5E5E5"> probably out with occasional</font>

1089
00:47:01,050 --> 00:47:05,490
<font color="#CCCCCC">charge introduce</font><font color="#E5E5E5"> loads of patching ok</font>

1090
00:47:03,240 --> 00:47:07,319
they always say all the security testing

1091
00:47:05,490 --> 00:47:09,870
site it would probably<font color="#E5E5E5"> be worse you</font>

1092
00:47:07,320 --> 00:47:11,460
<font color="#E5E5E5">usually do jokes as Trinity Cisco plus</font>

1093
00:47:09,870 --> 00:47:14,310
<font color="#E5E5E5">I've emphasized pretty much to define</font>

1094
00:47:11,460 --> 00:47:19,880
some of the<font color="#E5E5E5"> Lotus code</font><font color="#CCCCCC"> okay yeah</font>

1095
00:47:14,310 --> 00:47:19,880
brilliant thank you yeah<font color="#CCCCCC"> ennis</font>

1096
00:47:22,590 --> 00:47:27,310
with regards to testing like how do<font color="#E5E5E5"> you</font>

1097
00:47:25,360 --> 00:47:29,560
approach like<font color="#CCCCCC"> making sure the more</font>

1098
00:47:27,310 --> 00:47:32,230
<font color="#CCCCCC">you're grabbing is</font><font color="#E5E5E5"> curbside not just</font>

1099
00:47:29,560 --> 00:47:35,350
like importantly<font color="#E5E5E5"> petrol how to make sure</font>

1100
00:47:32,230 --> 00:47:37,450
you can offer overflow in your home<font color="#CCCCCC"> are</font>

1101
00:47:35,350 --> 00:47:39,610
<font color="#E5E5E5">you checking by handling or is just</font>

1102
00:47:37,450 --> 00:47:42,850
bigger welding Department and estar

1103
00:47:39,610 --> 00:47:44,380
later and at the<font color="#CCCCCC"> moment because</font>

1104
00:47:42,850 --> 00:47:46,480
everything<font color="#CCCCCC"> that happens within the</font>

1105
00:47:44,380 --> 00:47:49,270
colonel is in kernel space the problem

1106
00:47:46,480 --> 00:47:50,620
that you've got is like<font color="#E5E5E5"> with the setting</font>

1107
00:47:49,270 --> 00:47:52,930
extended attributes and things like that

1108
00:47:50,620 --> 00:47:55,210
you're obviously taking user input and

1109
00:47:52,930 --> 00:47:56,319
<font color="#E5E5E5">your then you let nothing and that's</font>

1110
00:47:55,210 --> 00:47:58,450
where you've<font color="#E5E5E5"> got four overflows from</font>

1111
00:47:56,320 --> 00:48:00,460
come in and things like that and so will

1112
00:47:58,450 --> 00:48:02,080
there will be some checking in place for

1113
00:48:00,460 --> 00:48:04,060
that but at the moment there isn't and

1114
00:48:02,080 --> 00:48:05,770
the extended attributes thing I is

1115
00:48:04,060 --> 00:48:08,350
something I've been doing quite recently

1116
00:48:05,770 --> 00:48:09,790
so I will be will be putting some checks

1117
00:48:08,350 --> 00:48:16,390
in place there but at the moment that's

1118
00:48:09,790 --> 00:48:18,550
not that's the<font color="#E5E5E5"> window I'll distract are</font>

1119
00:48:16,390 --> 00:48:20,109
you planning on I guess once you finish

1120
00:48:18,550 --> 00:48:22,600
something off before<font color="#CCCCCC"> but</font><font color="#E5E5E5"> you're planning</font>

1121
00:48:20,110 --> 00:48:25,780
on a dolphin sourcing at all and it is

1122
00:48:22,600 --> 00:48:28,150
actually<font color="#CCCCCC"> open now and I've got a</font>

1123
00:48:25,780 --> 00:48:30,040
development site for it as well which

1124
00:48:28,150 --> 00:48:31,600
just has like my development blog has

1125
00:48:30,040 --> 00:48:33,430
not been<font color="#E5E5E5"> going a lot part of the reason</font>

1126
00:48:31,600 --> 00:48:36,040
I've done that is there's not a lot

1127
00:48:33,430 --> 00:48:38,169
material for people getting into kernel

1128
00:48:36,040 --> 00:48:39,610
development and Colonel<font color="#E5E5E5"> promos not a lot</font>

1129
00:48:38,170 --> 00:48:41,770
<font color="#CCCCCC">of material out there for people that</font>

1130
00:48:39,610 --> 00:48:43,330
don't necessarily have a lot of

1131
00:48:41,770 --> 00:48:45,790
knowledge for it in the<font color="#E5E5E5"> first place when</font>

1132
00:48:43,330 --> 00:48:47,470
I started I definitely did it so the

1133
00:48:45,790 --> 00:48:49,060
development blog got done I've

1134
00:48:47,470 --> 00:48:50,529
definitely got out<font color="#E5E5E5"> there just so people</font>

1135
00:48:49,060 --> 00:48:53,230
that maybe you're interested<font color="#E5E5E5"> in it can</font>

1136
00:48:50,530 --> 00:48:54,460
see the stuff i stumbled upon the stuff

1137
00:48:53,230 --> 00:48:56,140
that i learned as I went along with

1138
00:48:54,460 --> 00:48:58,540
maybe the jhino just a bit of<font color="#E5E5E5"> a resource</font>

1139
00:48:56,140 --> 00:48:59,770
for people wanting to<font color="#E5E5E5"> get into that but</font>

1140
00:48:58,540 --> 00:49:02,170
if any of you are to have<font color="#E5E5E5"> a look at that</font>

1141
00:48:59,770 --> 00:49:09,040
<font color="#E5E5E5">website see see what</font><font color="#CCCCCC"> the updates are and</font>

1142
00:49:02,170 --> 00:49:10,480
just go<font color="#E5E5E5"> to axial dash lsm don't you and</font>

1143
00:49:09,040 --> 00:49:14,840
<font color="#E5E5E5">you'll you've ever seen a place to</font>

1144
00:49:10,480 --> 00:49:19,010
prevent<font color="#E5E5E5"> all</font><font color="#CCCCCC"> the operation but you</font>

1145
00:49:14,840 --> 00:49:29,020
<font color="#E5E5E5">we modules of the stasis for the voice</font>

1146
00:49:19,010 --> 00:49:29,020
actor and I don't reproach to illness

1147
00:49:29,410 --> 00:49:35,060
one present but mass<font color="#E5E5E5"> common user</font>

1148
00:49:32,180 --> 00:49:39,980
contributions<font color="#CCCCCC"> very public policy so far</font>

1149
00:49:35,060 --> 00:49:41,690
and that's<font color="#E5E5E5"> all right but to be fair I</font>

1150
00:49:39,980 --> 00:49:43,700
haven't<font color="#E5E5E5"> really been publicizing it or</font>

1151
00:49:41,690 --> 00:49:45,380
sending out at the<font color="#E5E5E5"> moment especially</font>

1152
00:49:43,700 --> 00:49:48,500
<font color="#CCCCCC">with stuff where it was at the beginning</font>

1153
00:49:45,380 --> 00:49:49,790
stage you know<font color="#E5E5E5"> I've been</font><font color="#CCCCCC"> using it more</font>

1154
00:49:48,500 --> 00:49:55,730
than anything just to maintain my<font color="#E5E5E5"> voice</font>

1155
00:49:49,790 --> 00:49:57,200
<font color="#E5E5E5">and stuff like that</font><font color="#CCCCCC"> but yeah no no so if</font>

1156
00:49:55,730 --> 00:49:58,940
any of<font color="#E5E5E5"> you want to go to that website</font>

1157
00:49:57,200 --> 00:50:00,290
there's a link to my get on there if any

1158
00:49:58,940 --> 00:50:02,420
of you after today wanna go<font color="#E5E5E5"> and make</font>

1159
00:50:00,290 --> 00:50:04,340
some make some suggestions I'd be great

1160
00:50:02,420 --> 00:50:06,650
and some feedback on it anything like

1161
00:50:04,340 --> 00:50:08,240
that<font color="#E5E5E5"> javon up dropping dropping a</font>

1162
00:50:06,650 --> 00:50:11,110
message or something we might be

1163
00:50:08,240 --> 00:50:11,109
thinking about it that'd<font color="#CCCCCC"> be great</font>

