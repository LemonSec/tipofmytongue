1
00:00:05,320 --> 00:00:09,040
you guys though thanks

2
00:00:10,980 --> 00:00:15,940
this is about talk on the project we've

3
00:00:13,780 --> 00:00:18,549
been working on for on top of any year

4
00:00:15,940 --> 00:00:21,000
now are looking at live analysis of

5
00:00:18,550 --> 00:00:24,070
volatile memory by that I mean man

6
00:00:21,000 --> 00:00:28,840
rather than<font color="#E5E5E5"> staking forensic don't</font>

7
00:00:24,070 --> 00:00:31,720
sobbing now compulsory who is our 30th

8
00:00:28,840 --> 00:00:34,210
what happens<font color="#CCCCCC"> you have attained my main</font>

9
00:00:31,720 --> 00:00:36,070
interests lying around where cyberspace

10
00:00:34,210 --> 00:00:38,940
meets the real worlds has been be<font color="#E5E5E5"> a shin</font>

11
00:00:36,070 --> 00:00:41,980
from that but I<font color="#E5E5E5"> mean like power plants</font>

12
00:00:38,940 --> 00:00:44,379
transport systems and needed<font color="#CCCCCC"> to control</font>

13
00:00:41,980 --> 00:00:49,209
units but it's difficult<font color="#CCCCCC"> to explain</font>

14
00:00:44,379 --> 00:00:51,640
epidemic unique key number would

15
00:00:49,210 --> 00:00:53,769
consider<font color="#CCCCCC"> top of amateur career</font><font color="#E5E5E5"> just an</font>

16
00:00:51,640 --> 00:00:56,399
introduction<font color="#E5E5E5"> to this talk it'll be</font>

17
00:00:53,769 --> 00:01:01,870
fairly sort of<font color="#E5E5E5"> high-level overview</font>

18
00:00:56,399 --> 00:01:04,720
looking at basic learn basics all<font color="#E5E5E5"> the</font>

19
00:01:01,870 --> 00:01:06,908
memory just imagine of people in here<font color="#E5E5E5"> of</font>

20
00:01:04,720 --> 00:01:09,640
millions and Elizabeth just a quick over

21
00:01:06,909 --> 00:01:11,200
you<font color="#E5E5E5"> to pick</font><font color="#CCCCCC"> people up to the level look</font>

22
00:01:09,640 --> 00:01:12,789
at some data structures in finder<font color="#E5E5E5"> the</font>

23
00:01:11,200 --> 00:01:15,250
memories of one of the artifacts will be

24
00:01:12,789 --> 00:01:19,000
looking<font color="#E5E5E5"> for to get anything out of this</font>

25
00:01:15,250 --> 00:01:22,570
<font color="#E5E5E5">product then a look at volatility of</font>

26
00:01:19,000 --> 00:01:25,509
equal to the two main tools for static

27
00:01:22,570 --> 00:01:27,579
analysis and looking at how we<font color="#CCCCCC"> can use</font>

28
00:01:25,509 --> 00:01:29,770
them<font color="#CCCCCC"> for live analysis and they're</font>

29
00:01:27,579 --> 00:01:33,119
finally<font color="#E5E5E5"> how</font><font color="#CCCCCC"> I can</font><font color="#E5E5E5"> customize the whole</font>

30
00:01:29,770 --> 00:01:36,609
thing of<font color="#E5E5E5"> paper the saga is just having</font>

31
00:01:33,119 --> 00:01:38,109
never returned it so imagine at some

32
00:01:36,609 --> 00:01:42,189
level at least familiar<font color="#E5E5E5"> with the idea</font>

33
00:01:38,109 --> 00:01:43,719
address mapping the operating system and

34
00:01:42,189 --> 00:01:46,178
<font color="#CCCCCC">programming see virtual the best</font>

35
00:01:43,719 --> 00:01:50,499
sentence they don't see the actual

36
00:01:46,179 --> 00:01:52,390
underlying run the processor handles at

37
00:01:50,499 --> 00:01:55,570
the lowest level<font color="#E5E5E5"> I'm converting these</font>

38
00:01:52,390 --> 00:01:58,090
address spaces into physical<font color="#CCCCCC"> Madame vice</font>

39
00:01:55,570 --> 00:02:00,609
versa so the operating system requests

40
00:01:58,090 --> 00:02:02,600
and address it is sent to the processor

41
00:02:00,609 --> 00:02:05,509
and then the memory management unit

42
00:02:02,600 --> 00:02:07,669
you look sat at a table and<font color="#E5E5E5"> carries</font>

43
00:02:05,509 --> 00:02:09,110
haven't converted I'll go into<font color="#CCCCCC"> the mass</font>

44
00:02:07,670 --> 00:02:12,530
of the conversion<font color="#CCCCCC"> at</font><font color="#E5E5E5"> the moment but it's</font>

45
00:02:09,110 --> 00:02:15,290
not<font color="#CCCCCC"> that complicated living the MMU</font>

46
00:02:12,530 --> 00:02:17,780
contains a buffer called the translation

47
00:02:15,290 --> 00:02:20,179
lookaside buffer which stores a basic

48
00:02:17,780 --> 00:02:21,950
table for the<font color="#E5E5E5"> lookup there are multiple</font>

49
00:02:20,180 --> 00:02:24,830
others but that sort<font color="#E5E5E5"> of the first stage</font>

50
00:02:21,950 --> 00:02:29,420
that it goes to<font color="#E5E5E5"> define other tables and</font>

51
00:02:24,830 --> 00:02:31,010
so on to look at the diagram at the

52
00:02:29,420 --> 00:02:33,019
bottom there don't know if you<font color="#CCCCCC"> can see</font>

53
00:02:31,010 --> 00:02:37,069
other way is just<font color="#E5E5E5"> a basic mock-up of how</font>

54
00:02:33,020 --> 00:02:39,920
you convert your virtual address into

55
00:02:37,069 --> 00:02:43,369
we're actually is<font color="#CCCCCC"> a memory</font><font color="#E5E5E5"> so you have a</font>

56
00:02:39,920 --> 00:02:46,518
given 32-bit systems we have 32 bits and

57
00:02:43,370 --> 00:02:49,610
address the first<font color="#CCCCCC"> 10 a directory table</font>

58
00:02:46,519 --> 00:02:53,420
so<font color="#CCCCCC"> it takes</font><font color="#E5E5E5"> that goes</font><font color="#CCCCCC"> to looks up in</font>

59
00:02:49,610 --> 00:02:55,910
this table where that section is then

60
00:02:53,420 --> 00:02:57,440
that value takes you to the next page

61
00:02:55,910 --> 00:02:59,959
table because there'll be multiple page

62
00:02:57,440 --> 00:03:01,459
tables and then the next<font color="#CCCCCC"> 10 tells you</font>

63
00:02:59,959 --> 00:03:03,799
the offset within that table to go<font color="#CCCCCC"> to</font>

64
00:03:01,459 --> 00:03:06,110
and then that to the next<font color="#CCCCCC"> stage</font><font color="#E5E5E5"> where</font>

65
00:03:03,799 --> 00:03:09,799
<font color="#CCCCCC">you have the actual physical address the</font>

66
00:03:06,110 --> 00:03:11,570
page rings splits down your memory in

67
00:03:09,799 --> 00:03:15,230
<font color="#CCCCCC">three sections</font><font color="#E5E5E5"> which can switch to</font>

68
00:03:11,570 --> 00:03:18,040
another memory by the processor to make

69
00:03:15,230 --> 00:03:21,140
it more efficient and also to allow a

70
00:03:18,040 --> 00:03:23,000
program to work as though it had access

71
00:03:21,140 --> 00:03:25,458
to the entire four gigabytes or<font color="#E5E5E5"> prime</font>

72
00:03:23,000 --> 00:03:27,230
<font color="#E5E5E5">I'm not around you have a machine it</font>

73
00:03:25,459 --> 00:03:29,510
doesn't<font color="#E5E5E5"> have</font><font color="#CCCCCC"> to pay attention to Hamlet</font>

74
00:03:27,230 --> 00:03:30,858
other processes are using the processor

75
00:03:29,510 --> 00:03:35,420
will<font color="#E5E5E5"> just switched up in and out</font><font color="#CCCCCC"> I</font>

76
00:03:30,859 --> 00:03:37,640
<font color="#CCCCCC">declare this 32-bit supports up to four</font>

77
00:03:35,420 --> 00:03:41,030
gigabytes of RAM but there's also known

78
00:03:37,640 --> 00:03:43,700
<font color="#CCCCCC">calls</font><font color="#E5E5E5"> physical address extension which</font>

79
00:03:41,030 --> 00:03:45,320
some changes this is to add a couple

80
00:03:43,700 --> 00:03:48,649
<font color="#E5E5E5">stages into the system which supports up</font>

81
00:03:45,320 --> 00:03:50,630
to 64 gigabytes of memory then 64-bit

82
00:03:48,650 --> 00:03:52,790
it's basically the<font color="#E5E5E5"> same theory at the</font>

83
00:03:50,630 --> 00:03:57,469
<font color="#E5E5E5">moment a thing of suppressing</font>

84
00:03:52,790 --> 00:04:01,370
that no processes use all 64 bits the

85
00:03:57,469 --> 00:04:05,930
most of them windows 8 certainly uses 40

86
00:04:01,370 --> 00:04:07,489
bits of the address the remaining bits

87
00:04:05,930 --> 00:04:10,189
are set depending on what the<font color="#E5E5E5"> last bit</font>

88
00:04:07,489 --> 00:04:13,609
of it 47 receptive it's warm in the<font color="#E5E5E5"> rest</font>

89
00:04:10,189 --> 00:04:15,470
<font color="#E5E5E5">and 13 less than or zeros the page size</font>

90
00:04:13,609 --> 00:04:18,380
is a slightly different you have four

91
00:04:15,470 --> 00:04:21,649
kilobytes to make or want gig and<font color="#E5E5E5"> these</font>

92
00:04:18,380 --> 00:04:28,340
<font color="#CCCCCC">are advocated by flags set within the</font>

93
00:04:21,649 --> 00:04:30,590
address we<font color="#E5E5E5"> have to address bound just to</font>

94
00:04:28,340 --> 00:04:32,119
have a quick look at this again say

95
00:04:30,590 --> 00:04:34,039
their page map and directory point is

96
00:04:32,120 --> 00:04:35,389
added to the other tables so amazing

97
00:04:34,039 --> 00:04:38,330
what I mean there is that there are 2

98
00:04:35,389 --> 00:04:43,310
more stages at the far end there which

99
00:04:38,330 --> 00:04:47,090
<font color="#E5E5E5">get more memory size actually just point</font>

100
00:04:43,310 --> 00:04:51,410
out quickly this<font color="#E5E5E5"> cr3 here that is a</font>

101
00:04:47,090 --> 00:04:56,448
register on the xeon processor which

102
00:04:51,410 --> 00:04:58,039
stores the base of the look-up tables so

103
00:04:56,449 --> 00:05:01,190
that is the<font color="#CCCCCC"> first stage that's always</font>

104
00:04:58,039 --> 00:05:02,630
<font color="#E5E5E5">injected to tell you telephone</font><font color="#CCCCCC"> sesa</font>

105
00:05:01,190 --> 00:05:07,280
where it should start off looking for

106
00:05:02,630 --> 00:05:09,289
the<font color="#E5E5E5"> look aside buffer basically moving</font>

107
00:05:07,280 --> 00:05:11,179
on from that<font color="#E5E5E5"> Greyhound simlish levels</font>

108
00:05:09,289 --> 00:05:12,770
<font color="#E5E5E5">can</font><font color="#CCCCCC"> drive and what's become familiar</font>

109
00:05:11,180 --> 00:05:17,270
with this is just quickly<font color="#E5E5E5"> to go over it</font>

110
00:05:12,770 --> 00:05:19,669
you have most processors will and it's

111
00:05:17,270 --> 00:05:23,690
different<font color="#CCCCCC"> for Windows and</font><font color="#E5E5E5"> Linux and as</font>

112
00:05:19,669 --> 00:05:26,389
you back later for that<font color="#E5E5E5"> Mac will follow</font>

113
00:05:23,690 --> 00:05:30,979
<font color="#E5E5E5">something like this so ring</font><font color="#CCCCCC"> three is</font>

114
00:05:26,389 --> 00:05:32,900
where any programs we use one powerpoint

115
00:05:30,979 --> 00:05:37,639
or whatever any of those buns and

116
00:05:32,900 --> 00:05:40,880
injuring three ring to walk<font color="#E5E5E5"> device</font>

117
00:05:37,639 --> 00:05:42,169
<font color="#E5E5E5">drivers so things like we practiced our</font>

118
00:05:40,880 --> 00:05:44,949
driver examine have

119
00:05:42,169 --> 00:05:48,109
and the thing clear the<font color="#E5E5E5"> hero is the</font><font color="#CCCCCC"> girl</font>

120
00:05:44,949 --> 00:05:50,029
so that's where sections of the

121
00:05:48,110 --> 00:05:52,039
operating system will run with maximum

122
00:05:50,029 --> 00:05:54,860
current access any part of a physical

123
00:05:52,039 --> 00:05:58,248
<font color="#E5E5E5">hardware without any kind of</font>

124
00:05:54,860 --> 00:06:00,499
restrictions placed on obviously this is

125
00:05:58,249 --> 00:06:02,749
designed so that thing's running in room

126
00:06:00,499 --> 00:06:04,909
<font color="#CCCCCC">3 your user programs can't be written to</font>

127
00:06:02,749 --> 00:06:08,449
just access any<font color="#E5E5E5"> exception of memory</font>

128
00:06:04,909 --> 00:06:11,569
access and alter other processes memory

129
00:06:08,449 --> 00:06:21,669
is sub protection things lockdown what's

130
00:06:11,569 --> 00:06:26,210
available to them<font color="#E5E5E5"> so these think these</font>

131
00:06:21,669 --> 00:06:31,520
you get<font color="#E5E5E5"> from ring 3 to bring</font><font color="#CCCCCC"> 0 by using</font>

132
00:06:26,210 --> 00:06:34,159
system calls udderly<font color="#E5E5E5"> called Oct</font><font color="#CCCCCC"> ow</font><font color="#E5E5E5"> or i</font>

133
00:06:31,520 --> 00:06:37,758
<font color="#E5E5E5">absorb commands and this allows you to</font>

134
00:06:34,159 --> 00:06:40,639
make calls down<font color="#CCCCCC"> to the windows in this</font>

135
00:06:37,759 --> 00:06:46,460
case windows curl to say read a file

136
00:06:40,639 --> 00:06:48,379
access memory open up access of graphics

137
00:06:46,460 --> 00:06:51,198
drive have your graphics card that kind

138
00:06:48,379 --> 00:06:53,149
of thing so you can't write code that

139
00:06:51,199 --> 00:06:57,520
does<font color="#E5E5E5"> that itself you have to use the</font>

140
00:06:53,149 --> 00:07:00,289
existing<font color="#E5E5E5"> API built into the windows girl</font>

141
00:06:57,520 --> 00:07:01,818
so this is quick summary user<font color="#E5E5E5"> mode</font>

142
00:07:00,289 --> 00:07:04,128
programs i presented the range of

143
00:07:01,819 --> 00:07:06,830
virtualized addresses that cannot access

144
00:07:04,129 --> 00:07:07,879
any address outside this range and are

145
00:07:06,830 --> 00:07:11,300
not aware of the physical addresses

146
00:07:07,879 --> 00:07:13,399
<font color="#CCCCCC">which then that all see that faculty can</font>

147
00:07:11,300 --> 00:07:17,240
access any<font color="#E5E5E5"> addresses to make life</font>

148
00:07:13,399 --> 00:07:20,089
analysis by tripping because can't write

149
00:07:17,240 --> 00:07:23,240
a program at<font color="#E5E5E5"> the basic level to just be</font>

150
00:07:20,089 --> 00:07:25,039
any memory this is just<font color="#E5E5E5"> more quick</font>

151
00:07:23,240 --> 00:07:27,819
suddenly<font color="#CCCCCC"> i won't come back to this</font>

152
00:07:25,039 --> 00:07:31,039
afterwards OS the OS<font color="#E5E5E5"> introduced</font>

153
00:07:27,819 --> 00:07:34,430
implements two kinds<font color="#E5E5E5"> of protection on</font>

154
00:07:31,039 --> 00:07:37,248
memories that doesn't actually affect

155
00:07:34,430 --> 00:07:38,810
this process<font color="#E5E5E5"> apple we're not trying to</font>

156
00:07:37,249 --> 00:07:41,930
get anything to run where shouldn't and

157
00:07:38,810 --> 00:07:45,560
that simply mark certain areas or binary

158
00:07:41,930 --> 00:07:48,760
as not executable so that's not a

159
00:07:45,560 --> 00:07:50,880
<font color="#CCCCCC">problem for us aslr is more than</font>

160
00:07:48,760 --> 00:07:55,390
because it<font color="#E5E5E5"> makes it</font><font color="#CCCCCC"> very hard to find</font>

161
00:07:50,880 --> 00:07:57,460
what links to what within memory instead

162
00:07:55,390 --> 00:07:59,860
of having a nice compact binary you drop

163
00:07:57,460 --> 00:08:01,989
stuff spread over a much larger area so

164
00:07:59,860 --> 00:08:04,330
if you're doing from scratch that's much

165
00:08:01,990 --> 00:08:08,650
or difficult thing to overcome not

166
00:08:04,330 --> 00:08:10,000
impossible but difficult<font color="#E5E5E5"> so now I will</font>

167
00:08:08,650 --> 00:08:12,580
turn which will have a look at some of

168
00:08:10,000 --> 00:08:14,140
the data structures that are interesting

169
00:08:12,580 --> 00:08:16,719
to us the main one I've been<font color="#E5E5E5"> looking at</font>

170
00:08:14,140 --> 00:08:19,539
today for time sake is process our

171
00:08:16,720 --> 00:08:24,970
processes now within memory these are

172
00:08:19,540 --> 00:08:26,110
defined by<font color="#E5E5E5"> the e process structure not</font>

173
00:08:24,970 --> 00:08:30,100
sure if you<font color="#CCCCCC"> can</font><font color="#E5E5E5"> see how to write but</font>

174
00:08:26,110 --> 00:08:34,060
this is basically<font color="#CCCCCC"> how it'll set is this</font>

175
00:08:30,100 --> 00:08:36,070
a lot lately out why for what it has so

176
00:08:34,059 --> 00:08:38,020
you'll have the e process which contains

177
00:08:36,070 --> 00:08:40,930
all the information about<font color="#E5E5E5"> it you have</font>

178
00:08:38,020 --> 00:08:43,720
threads can be any number of threads

179
00:08:40,929 --> 00:08:45,640
conceivably<font color="#CCCCCC"> you have a handle table to</font>

180
00:08:43,720 --> 00:08:48,580
any file objects and so that it has open

181
00:08:45,640 --> 00:08:52,420
or needs to open any memory call system

182
00:08:48,580 --> 00:08:55,330
calls up anything you<font color="#CCCCCC"> have SIDS for who</font>

183
00:08:52,420 --> 00:08:59,620
who runs it whatever<font color="#CCCCCC"> the privilege will</font>

184
00:08:55,330 --> 00:09:02,620
<font color="#CCCCCC">it have on</font><font color="#E5E5E5"> the machine and what accesses</font>

185
00:08:59,620 --> 00:09:05,650
I have to the machine learning modules

186
00:09:02,620 --> 00:09:07,570
are basically a exe so if you look<font color="#E5E5E5"> at</font>

187
00:09:05,650 --> 00:09:10,810
<font color="#E5E5E5">look</font><font color="#CCCCCC"> at this with a memory for say</font>

188
00:09:07,570 --> 00:09:12,460
notepad.exe you have this ethos<font color="#E5E5E5"> s which</font>

189
00:09:10,810 --> 00:09:14,410
defines everything but then within the

190
00:09:12,460 --> 00:09:17,590
modules you<font color="#E5E5E5"> have the actual string to</font>

191
00:09:14,410 --> 00:09:21,730
where the exe is on your back on your

192
00:09:17,590 --> 00:09:24,880
<font color="#E5E5E5">heartburn when your file system the VA</font>

193
00:09:21,730 --> 00:09:26,800
DS<font color="#CCCCCC"> our virtual address descriptors and</font>

194
00:09:24,880 --> 00:09:28,660
they describe all the various dress

195
00:09:26,800 --> 00:09:33,250
spaces which are allocated to this

196
00:09:28,660 --> 00:09:36,250
process now each process is doubly

197
00:09:33,250 --> 00:09:38,650
linked to other processes so what that

198
00:09:36,250 --> 00:09:40,720
means is you<font color="#CCCCCC"> have within the structure</font>

199
00:09:38,650 --> 00:09:43,959
this active process links object and

200
00:09:40,720 --> 00:09:45,400
that contains<font color="#CCCCCC"> two heels f wink and be</font>

201
00:09:43,960 --> 00:09:50,170
<font color="#CCCCCC">linked which just simply falling</font>

202
00:09:45,400 --> 00:09:52,959
<font color="#E5E5E5">backlink and they relate</font><font color="#CCCCCC"> to a tree up</font>

203
00:09:50,170 --> 00:09:56,110
string of the line or processes so every

204
00:09:52,960 --> 00:09:56,980
single one in memory theoretically it

205
00:09:56,110 --> 00:09:58,930
linked to<font color="#CCCCCC"> the</font>

206
00:09:56,980 --> 00:10:01,709
stream by having a link to the next one

207
00:09:58,930 --> 00:10:05,019
in line and<font color="#CCCCCC"> lincoln</font><font color="#E5E5E5"> furious one like</font>

208
00:10:01,709 --> 00:10:08,018
that link starts in kernel debugging

209
00:10:05,019 --> 00:10:10,089
memory where<font color="#CCCCCC"> there is a address which</font>

210
00:10:08,019 --> 00:10:14,139
starts a process basically are streaming

211
00:10:10,089 --> 00:10:17,290
start at all things like task manager I

212
00:10:14,139 --> 00:10:20,920
believe process explorer<font color="#CCCCCC"> third party</font>

213
00:10:17,290 --> 00:10:24,670
tool they rely<font color="#CCCCCC"> on</font><font color="#E5E5E5"> this list to show you</font>

214
00:10:20,920 --> 00:10:27,160
processes so they<font color="#CCCCCC"> just what they walk</font>

215
00:10:24,670 --> 00:10:29,529
through<font color="#E5E5E5"> this list unless all the data of</font>

216
00:10:27,160 --> 00:10:31,600
<font color="#CCCCCC">the equal out of that that is not a</font>

217
00:10:29,529 --> 00:10:34,300
hundred percent foolproof because it is

218
00:10:31,600 --> 00:10:36,310
<font color="#CCCCCC">possible none of the values in</font><font color="#E5E5E5"> a process</font>

219
00:10:34,300 --> 00:10:40,599
header are actually critical to running

220
00:10:36,310 --> 00:10:43,660
a process so it's possible to change

221
00:10:40,600 --> 00:10:46,269
alter these lists to basically unlink it

222
00:10:43,660 --> 00:10:49,889
and we begin with in memory<font color="#CCCCCC"> so I'm not</font>

223
00:10:46,269 --> 00:10:52,149
visible to things like Canada and so

224
00:10:49,889 --> 00:10:55,240
that's not<font color="#CCCCCC"> tentative</font><font color="#E5E5E5"> to trying to name</font>

225
00:10:52,149 --> 00:10:58,000
it something different now you can use

226
00:10:55,240 --> 00:10:59,980
the<font color="#E5E5E5"> windows debugger</font><font color="#CCCCCC"> to have a pig look</font>

227
00:10:58,000 --> 00:11:01,990
at the structure of cuts out<font color="#CCCCCC"> whether</font>

228
00:10:59,980 --> 00:11:04,510
loss of it because it would<font color="#CCCCCC"> be otherwise</font>

229
00:11:01,990 --> 00:11:06,910
but the specter some of the key was the

230
00:11:04,510 --> 00:11:10,689
PCB is the process control block that

231
00:11:06,910 --> 00:11:12,399
contains fiscal fields<font color="#CCCCCC"> are including</font>

232
00:11:10,690 --> 00:11:13,899
things like the time spent in memory of

233
00:11:12,399 --> 00:11:16,839
the time it's being paged out of memory

234
00:11:13,899 --> 00:11:20,380
and<font color="#CCCCCC"> the magnetizer</font><font color="#E5E5E5"> spending</font><font color="#CCCCCC"> Colonel I'll</font>

235
00:11:16,839 --> 00:11:22,209
use alone create exit time they're just

236
00:11:20,380 --> 00:11:25,269
<font color="#E5E5E5">UTC slide type stamps telling you when</font>

237
00:11:22,209 --> 00:11:28,540
process we've created the<font color="#E5E5E5"> exit 1 will be</font>

238
00:11:25,269 --> 00:11:30,670
<font color="#E5E5E5">0 until it is actually Exeter's unique</font>

239
00:11:28,540 --> 00:11:33,880
process ID is your PID the thing you

240
00:11:30,670 --> 00:11:36,219
will<font color="#CCCCCC"> see in task manager and you can see</font>

241
00:11:33,880 --> 00:11:38,410
where the active process links is the

242
00:11:36,220 --> 00:11:42,310
doubly linked list telling you which is

243
00:11:38,410 --> 00:11:43,930
ahead of which is behind<font color="#E5E5E5"> session from</font>

244
00:11:42,310 --> 00:11:45,638
such links is very similar to active

245
00:11:43,930 --> 00:11:47,779
process links but the links to<font color="#CCCCCC"> the</font>

246
00:11:45,639 --> 00:11:53,220
session on the computer

247
00:11:47,779 --> 00:11:57,420
so this would<font color="#CCCCCC"> be the option user perhaps</font>

248
00:11:53,220 --> 00:11:59,820
most<font color="#E5E5E5"> likely we're all processes one</font>

249
00:11:57,420 --> 00:12:03,000
users running would be linked separately

250
00:11:59,820 --> 00:12:07,620
to the normal active absent rocks and

251
00:12:03,000 --> 00:12:11,250
things<font color="#CCCCCC"> you know token is just</font><font color="#E5E5E5"> going</font>

252
00:12:07,620 --> 00:12:14,759
through<font color="#E5E5E5"> binary</font><font color="#CCCCCC"> X</font><font color="#E5E5E5"> IDs inherited from</font>

253
00:12:11,250 --> 00:12:20,370
unique process ID is<font color="#CCCCCC"> the parent xid FOP</font>

254
00:12:14,759 --> 00:12:24,449
I be the peb is the process and virus

255
00:12:20,370 --> 00:12:26,040
block contains some of the new<font color="#CCCCCC"> pets</font><font color="#E5E5E5"> are</font>

256
00:12:24,449 --> 00:12:30,149
<font color="#E5E5E5">a listing of addresses and so on that</font>

257
00:12:26,040 --> 00:12:32,430
you<font color="#CCCCCC"> have available</font><font color="#E5E5E5"> to this process the</font>

258
00:12:30,149 --> 00:12:35,040
ones ferric top explanatory active

259
00:12:32,430 --> 00:12:37,079
threads of a number<font color="#CCCCCC"> of threads available</font>

260
00:12:35,040 --> 00:12:40,439
I'm<font color="#E5E5E5"> running under this process your</font>

261
00:12:37,079 --> 00:12:43,079
threadless head is appointed to the<font color="#CCCCCC"> for</font>

262
00:12:40,440 --> 00:12:46,350
<font color="#CCCCCC">the eath read structures which define</font>

263
00:12:43,079 --> 00:12:49,410
threads going to assess<font color="#CCCCCC"> an image file</font>

264
00:12:46,350 --> 00:12:56,910
name is the first 16 characters in ascii

265
00:12:49,410 --> 00:12:58,410
of the<font color="#CCCCCC"> time to the image</font><font color="#E5E5E5"> of your exe so</font>

266
00:12:56,910 --> 00:13:02,370
help me identify<font color="#CCCCCC"> processors with a</font>

267
00:12:58,410 --> 00:13:04,410
memory<font color="#E5E5E5"> it's as I say this basic way is</font>

268
00:13:02,370 --> 00:13:07,079
using a kernel debugger<font color="#CCCCCC"> datablock and</font>

269
00:13:04,410 --> 00:13:10,139
walking along the path of PS active

270
00:13:07,079 --> 00:13:14,670
process head lists now let<font color="#CCCCCC"> us say that</font>

271
00:13:10,139 --> 00:13:16,560
<font color="#E5E5E5">is not a hundred percent foolproof if</font>

272
00:13:14,670 --> 00:13:18,120
you're<font color="#E5E5E5"> trying to do an investigation to</font>

273
00:13:16,560 --> 00:13:20,729
between<font color="#E5E5E5"> rather than simply see what's</font>

274
00:13:18,120 --> 00:13:22,230
going<font color="#E5E5E5"> on in clear ideal environment if</font>

275
00:13:20,730 --> 00:13:24,209
you're interested<font color="#E5E5E5"> to see if something</font>

276
00:13:22,230 --> 00:13:25,550
<font color="#E5E5E5">malicious is being done that doesn't</font>

277
00:13:24,209 --> 00:13:30,079
necessarily show

278
00:13:25,550 --> 00:13:33,170
<font color="#E5E5E5">gene so recalls</font><font color="#CCCCCC"> PSLs clogging up the</font>

279
00:13:30,080 --> 00:13:39,649
lines most illness as due process it for

280
00:13:33,170 --> 00:13:41,479
process process<font color="#E5E5E5"> first and the second</font>

281
00:13:39,649 --> 00:13:44,240
another way is to literally just scanned

282
00:13:41,480 --> 00:13:46,060
through memory pool for any equal sex

283
00:13:44,240 --> 00:13:49,040
objects which you can find through

284
00:13:46,060 --> 00:13:53,000
looking<font color="#E5E5E5"> for signatures based on the</font>

285
00:13:49,040 --> 00:13:56,630
structure saw that again is more

286
00:13:53,000 --> 00:13:58,670
foolproof but does often<font color="#E5E5E5"> from what I</font>

287
00:13:56,630 --> 00:13:59,870
<font color="#E5E5E5">ascribe</font><font color="#CCCCCC"> edge which was often cause false</font>

288
00:13:58,670 --> 00:14:02,060
positives because a lot of things<font color="#E5E5E5"> can</font>

289
00:13:59,870 --> 00:14:04,279
look<font color="#CCCCCC"> very similar it seemed or a lot of</font>

290
00:14:02,060 --> 00:14:07,219
<font color="#CCCCCC">the threat object citizens as well</font><font color="#E5E5E5"> and</font>

291
00:14:04,279 --> 00:14:08,959
<font color="#E5E5E5">even before that then there are</font>

292
00:14:07,220 --> 00:14:11,630
<font color="#E5E5E5">alternative process listings which work</font>

293
00:14:08,959 --> 00:14:14,359
in very much the same way<font color="#E5E5E5"> as the active</font>

294
00:14:11,630 --> 00:14:16,459
context head thing you've got thread

295
00:14:14,360 --> 00:14:18,260
scanning where you can<font color="#E5E5E5"> look for instead</font>

296
00:14:16,459 --> 00:14:20,689
<font color="#CCCCCC">of ye process block your pretty thread</font>

297
00:14:18,260 --> 00:14:22,279
blocks and<font color="#E5E5E5"> you can assume</font><font color="#CCCCCC"> that they were</font>

298
00:14:20,690 --> 00:14:23,870
linked to a process you can<font color="#CCCCCC"> then work</font>

299
00:14:22,279 --> 00:14:25,579
back up to see what their hair and

300
00:14:23,870 --> 00:14:29,269
processes and mapped all settles this

301
00:14:25,579 --> 00:14:32,660
way this clients live a long time

302
00:14:29,269 --> 00:14:34,430
subsystem is involved in making every in

303
00:14:32,660 --> 00:14:39,620
creating and killing every single

304
00:14:34,430 --> 00:14:42,829
process so it getting that<font color="#E5E5E5"> maintains its</font>

305
00:14:39,620 --> 00:14:45,140
own handle table separate to everything

306
00:14:42,829 --> 00:14:50,839
else of all<font color="#CCCCCC"> processes bowling on the</font>

307
00:14:45,140 --> 00:14:52,579
<font color="#E5E5E5">machine and also threats that again is</font>

308
00:14:50,839 --> 00:14:55,190
possible to get into memory and edit

309
00:14:52,579 --> 00:14:58,010
<font color="#E5E5E5">that's remove threats but you're having</font>

310
00:14:55,190 --> 00:15:01,640
<font color="#CCCCCC">more</font><font color="#E5E5E5"> laser difficulty there the final</font>

311
00:14:58,010 --> 00:15:03,700
one is PSP<font color="#CCCCCC"> CID this is a special handle</font>

312
00:15:01,640 --> 00:15:06,680
table<font color="#E5E5E5"> within kernel debugging memory</font>

313
00:15:03,700 --> 00:15:11,149
again it's slightly redundant but it's

314
00:15:06,680 --> 00:15:12,529
just another another<font color="#E5E5E5"> way of checking its</font>

315
00:15:11,149 --> 00:15:14,810
stores<font color="#E5E5E5"> references to all active</font>

316
00:15:12,529 --> 00:15:17,689
processes and<font color="#E5E5E5"> threat objects but only</font>

317
00:15:14,810 --> 00:15:19,430
active once the depression<font color="#E5E5E5"> awesome there</font>

318
00:15:17,690 --> 00:15:22,170
a couple of rootkit detection tools for

319
00:15:19,430 --> 00:15:24,599
black lights and<font color="#E5E5E5"> I sort use this blender</font>

320
00:15:22,170 --> 00:15:26,670
but it will prove academically to not be

321
00:15:24,600 --> 00:15:28,380
foolproof and<font color="#CCCCCC"> that you</font><font color="#E5E5E5"> can still have</font>

322
00:15:26,670 --> 00:15:30,750
that tables remove processes from it and

323
00:15:28,380 --> 00:15:32,100
hide them again if you want<font color="#CCCCCC"> let's put at</font>

324
00:15:30,750 --> 00:15:36,300
the bottom here so<font color="#E5E5E5"> they're easy to read</font>

325
00:15:32,100 --> 00:15:37,829
but this is me running recall the PS

326
00:15:36,300 --> 00:15:41,099
list<font color="#E5E5E5"> plug-in on me Calista list</font>

327
00:15:37,829 --> 00:15:42,420
processors and you can see maybe the

328
00:15:41,100 --> 00:15:45,420
difficult methods you can use here

329
00:15:42,420 --> 00:15:50,250
actually not PS active process at CSI SS

330
00:15:45,420 --> 00:15:51,899
ooh PSD CID table sessions and<font color="#E5E5E5"> panels so</font>

331
00:15:50,250 --> 00:15:55,889
you can see<font color="#CCCCCC"> that each of those can be</font>

332
00:15:51,899 --> 00:15:57,779
<font color="#CCCCCC">use</font><font color="#E5E5E5"> just a quick look at some other</font>

333
00:15:55,889 --> 00:15:59,430
structures and say mostly focusing on

334
00:15:57,779 --> 00:16:02,070
the processes today<font color="#E5E5E5"> you've got your</font>

335
00:15:59,430 --> 00:16:06,000
standard C C++ take two types of strings

336
00:16:02,070 --> 00:16:09,000
you have your integers your lists the

337
00:16:06,000 --> 00:16:13,019
trees singly and ugly linked lists your

338
00:16:09,000 --> 00:16:15,690
standard raised almost or<font color="#E5E5E5"> WH ones with</font>

339
00:16:13,019 --> 00:16:19,139
your<font color="#E5E5E5"> echoing and</font><font color="#CCCCCC"> Mac feeling values and</font>

340
00:16:15,690 --> 00:16:21,209
trees linked lists and trees are<font color="#CCCCCC"> very</font>

341
00:16:19,139 --> 00:16:23,040
hard to detect on the road of every you

342
00:16:21,209 --> 00:16:26,989
don't know really what is linked to what

343
00:16:23,040 --> 00:16:29,130
the WLAN is a little bit<font color="#CCCCCC"> you find</font>

344
00:16:26,990 --> 00:16:33,420
democratic values the singly linked list

345
00:16:29,130 --> 00:16:35,189
<font color="#E5E5E5">and trees are quite hard to locate then</font>

346
00:16:33,420 --> 00:16:39,680
other OS way destructive like you

347
00:16:35,190 --> 00:16:44,690
process which through each<font color="#E5E5E5"> red</font><font color="#CCCCCC"> or even</font>

348
00:16:39,680 --> 00:16:49,349
<font color="#CCCCCC">finds a summary of those through the</font>

349
00:16:44,690 --> 00:16:51,149
through windy road by actually to

350
00:16:49,350 --> 00:16:53,160
running that commandment with a stop at

351
00:16:51,149 --> 00:16:55,260
the end<font color="#CCCCCC"> annapolis all of them</font><font color="#E5E5E5"> and then</font>

352
00:16:53,160 --> 00:16:58,800
you can refine it down if you just

353
00:16:55,260 --> 00:17:00,300
<font color="#E5E5E5">entered thread where the name is that it</font>

354
00:16:58,800 --> 00:17:03,329
would<font color="#E5E5E5"> list all kinds of thread up there</font>

355
00:17:00,300 --> 00:17:05,879
ebrary thread multiple different kinds

356
00:17:03,329 --> 00:17:06,839
of thread objects which you can then go

357
00:17:05,880 --> 00:17:12,089
into more detail

358
00:17:06,839 --> 00:17:14,490
listings like<font color="#CCCCCC"> Africa process and leaders</font>

359
00:17:12,089 --> 00:17:18,510
consists<font color="#CCCCCC"> of a number of standard beta</font>

360
00:17:14,490 --> 00:17:22,819
test facility recall what are the main

361
00:17:18,510 --> 00:17:25,379
tools I've been using besides hyphen

362
00:17:22,819 --> 00:17:27,349
this Creek solely of their volatility

363
00:17:25,380 --> 00:17:32,039
<font color="#CCCCCC">who's first at least a black rat DC in</font>

364
00:17:27,349 --> 00:17:35,490
2007 and sort of adopted as the best

365
00:17:32,039 --> 00:17:37,980
<font color="#E5E5E5">around as far as I can tell it's very</font>

366
00:17:35,490 --> 00:17:40,350
comprehensive bill some years and years

367
00:17:37,980 --> 00:17:42,960
of academic research by the<font color="#E5E5E5"> authors</font>

368
00:17:40,350 --> 00:17:47,908
think there's<font color="#CCCCCC"> four replying on the main</font>

369
00:17:42,960 --> 00:17:49,169
authors and these people have now more

370
00:17:47,909 --> 00:17:51,450
recently published a book called the

371
00:17:49,169 --> 00:17:53,250
<font color="#CCCCCC">arts memory for ethnics which if this is</font>

372
00:17:51,450 --> 00:17:55,649
something you're interested in<font color="#E5E5E5"> I would</font>

373
00:17:53,250 --> 00:17:59,730
recommend<font color="#E5E5E5"> it's quite a heavy reading a</font>

374
00:17:55,649 --> 00:18:03,389
book in the<font color="#E5E5E5"> seven 2011 they created thus</font>

375
00:17:59,730 --> 00:18:06,000
cadet branch which was intended<font color="#E5E5E5"> to</font>

376
00:18:03,390 --> 00:18:07,649
increase modularity increase efficiency

377
00:18:06,000 --> 00:18:09,090
<font color="#CCCCCC">and make it as more usable rather than</font>

378
00:18:07,649 --> 00:18:12,270
being a pure air<font color="#E5E5E5"> open a command line</font>

379
00:18:09,090 --> 00:18:14,789
tool after a couple<font color="#CCCCCC"> of years this has</font>

380
00:18:12,270 --> 00:18:17,100
been adopted<font color="#E5E5E5"> into volatility and the</font>

381
00:18:14,789 --> 00:18:19,890
creators of<font color="#CCCCCC"> V Corps of Cadets gotta</font>

382
00:18:17,100 --> 00:18:24,570
shoot so they<font color="#E5E5E5"> split off themselves and</font>

383
00:18:19,890 --> 00:18:26,220
became recall<font color="#E5E5E5"> and independent project it</font>

384
00:18:24,570 --> 00:18:27,899
includes slightly more external

385
00:18:26,220 --> 00:18:30,210
contributions<font color="#E5E5E5"> and volatility which is</font>

386
00:18:27,899 --> 00:18:32,250
very much<font color="#E5E5E5"> a work of the five for people</font>

387
00:18:30,210 --> 00:18:36,240
with plugins written by some community

388
00:18:32,250 --> 00:18:39,059
members we call doesn't<font color="#E5E5E5"> memory capture</font>

389
00:18:36,240 --> 00:18:40,799
using a<font color="#E5E5E5"> third-party tool and a lot of</font>

390
00:18:39,059 --> 00:18:45,270
<font color="#E5E5E5">press corps base has</font><font color="#CCCCCC"> been edited by</font>

391
00:18:40,799 --> 00:18:47,360
community sources personally I found it

392
00:18:45,270 --> 00:18:50,970
slightly more usable than<font color="#E5E5E5"> voices</font>

393
00:18:47,360 --> 00:18:51,429
intended to be and also<font color="#CCCCCC"> a</font><font color="#E5E5E5"> little bit</font>

394
00:18:50,970 --> 00:18:52,750
more

395
00:18:51,430 --> 00:18:54,940
it seems to be updated faster from

396
00:18:52,750 --> 00:18:59,590
operating systems which was used to look

397
00:18:54,940 --> 00:19:02,170
like better switch to<font color="#E5E5E5"> Windows 10 so if</font>

398
00:18:59,590 --> 00:19:05,800
using<font color="#CCCCCC"> these static analysis you can</font>

399
00:19:02,170 --> 00:19:09,610
acquire a image file with just simple

400
00:19:05,800 --> 00:19:14,050
<font color="#E5E5E5">commando that we call a SF</font><font color="#CCCCCC"> for wire this</font>

401
00:19:09,610 --> 00:19:16,840
uses<font color="#E5E5E5"> their own custom memory memory</font>

402
00:19:14,050 --> 00:19:19,750
forensics capture file they<font color="#E5E5E5"> created the</font>

403
00:19:16,840 --> 00:19:24,909
AFF for format to replace things like

404
00:19:19,750 --> 00:19:27,820
more<font color="#E5E5E5"> l crash</font><font color="#CCCCCC"> shows the windows because</font>

405
00:19:24,910 --> 00:19:30,250
they saw issues<font color="#CCCCCC"> with those if they're</font>

406
00:19:27,820 --> 00:19:32,830
trying<font color="#CCCCCC"> to write a fast usable tool</font>

407
00:19:30,250 --> 00:19:34,960
there's no they have no ability to store

408
00:19:32,830 --> 00:19:38,919
sparse regions memory so all<font color="#E5E5E5"> reserved</font>

409
00:19:34,960 --> 00:19:40,630
regions are padded out the zeros which

410
00:19:38,920 --> 00:19:43,050
gives a larger image like image size and

411
00:19:40,630 --> 00:19:46,240
strictly necessary so if you have a

412
00:19:43,050 --> 00:19:49,629
direct<font color="#E5E5E5"> memory access a carbon requires</font>

413
00:19:46,240 --> 00:19:51,610
direct memory access the graphics cards

414
00:19:49,630 --> 00:19:53,170
then it might deserve a certain amount

415
00:19:51,610 --> 00:19:54,580
of ground which would then must be<font color="#CCCCCC"> a</font>

416
00:19:53,170 --> 00:19:57,220
block and<font color="#E5E5E5"> zeros which are complete</font>

417
00:19:54,580 --> 00:20:00,580
convenience video so it doesn't allow

418
00:19:57,220 --> 00:20:02,710
you to<font color="#CCCCCC"> uncross that down the other ones</font>

419
00:20:00,580 --> 00:20:04,300
also had no support for compression or

420
00:20:02,710 --> 00:20:06,550
encryption which they felt a very

421
00:20:04,300 --> 00:20:10,000
valuable thing because after<font color="#E5E5E5"> minions</font>

422
00:20:06,550 --> 00:20:14,770
flow so by using profession they're able

423
00:20:10,000 --> 00:20:17,830
<font color="#E5E5E5">to speed up that process and what yeah</font>

424
00:20:14,770 --> 00:20:19,389
they<font color="#E5E5E5"> I think</font><font color="#CCCCCC"> I think we call them</font>

425
00:20:17,830 --> 00:20:21,850
capture children if you make mine a

426
00:20:19,390 --> 00:20:23,950
second so it doesn't<font color="#CCCCCC"> take long stage</font>

427
00:20:21,850 --> 00:20:24,850
<font color="#E5E5E5">this</font><font color="#CCCCCC"> other gigs of</font><font color="#E5E5E5"> RAM when it take no</font>

428
00:20:23,950 --> 00:20:29,140
time at all to

429
00:20:24,850 --> 00:20:30,669
<font color="#E5E5E5">all day there's also notes or</font>

430
00:20:29,140 --> 00:20:32,230
<font color="#E5E5E5">traditional metadata which is something</font>

431
00:20:30,670 --> 00:20:34,750
<font color="#E5E5E5">they wanted they wanted to not have to</font>

432
00:20:32,230 --> 00:20:37,870
do a complete fresh start scan every

433
00:20:34,750 --> 00:20:40,980
time your image<font color="#CCCCCC"> so when it takes the</font>

434
00:20:37,870 --> 00:20:43,209
image it's also pulling out certain

435
00:20:40,980 --> 00:20:45,070
fields and storing them with the

436
00:20:43,210 --> 00:20:49,900
original to make the hope of the process

437
00:20:45,070 --> 00:20:51,100
of analysis a little bit easier and they

438
00:20:49,900 --> 00:20:54,700
also want<font color="#E5E5E5"> to do include things like a</font>

439
00:20:51,100 --> 00:20:57,399
page file header and so on this is just

440
00:20:54,700 --> 00:21:01,150
<font color="#E5E5E5">an example of running PS listening I'll</font>

441
00:20:57,400 --> 00:21:03,370
represent you see down the left of the

442
00:21:01,150 --> 00:21:05,170
virtual memories virtual memory

443
00:21:03,370 --> 00:21:07,899
addresses you can<font color="#E5E5E5"> also set it to show</font>

444
00:21:05,170 --> 00:21:10,030
the physical<font color="#E5E5E5"> memory investment water so</font>

445
00:21:07,900 --> 00:21:12,250
promoted<font color="#CCCCCC"> when we call a live system we</font>

446
00:21:10,030 --> 00:21:14,680
need to introduce<font color="#E5E5E5"> another</font><font color="#CCCCCC"> set well</font>

447
00:21:12,250 --> 00:21:18,940
technically don't<font color="#E5E5E5"> but I'll go through it</font>

448
00:21:14,680 --> 00:21:21,280
<font color="#CCCCCC">longer my first win win p mm or the pmm</font>

449
00:21:18,940 --> 00:21:24,340
acquisition<font color="#CCCCCC"> sweet was created by another</font>

450
00:21:21,280 --> 00:21:27,389
person another right body<font color="#E5E5E5"> going to</font>

451
00:21:24,340 --> 00:21:33,730
<font color="#E5E5E5">confuse with the authors of volatility</font>

452
00:21:27,390 --> 00:21:36,640
it's just it's comes in ESC or you can

453
00:21:33,730 --> 00:21:39,610
get the<font color="#E5E5E5"> sequel see profiles or as a</font>

454
00:21:36,640 --> 00:21:44,410
Python library for<font color="#E5E5E5"> it it basically</font>

455
00:21:39,610 --> 00:21:47,050
contains two drivers for x86 and x64

456
00:21:44,410 --> 00:21:50,080
which one occur 11 so they<font color="#E5E5E5"> haven't all</font>

457
00:21:47,050 --> 00:21:51,520
the actual gathering of the<font color="#E5E5E5"> memory I've</font>

458
00:21:50,080 --> 00:21:54,490
forgotten along slides but they also

459
00:21:51,520 --> 00:21:56,710
have functionality to enable vital so

460
00:21:54,490 --> 00:21:58,900
you can light arbitrarily to memory

461
00:21:56,710 --> 00:22:01,780
which<font color="#E5E5E5"> it's quite interesting</font><font color="#CCCCCC"> you'd</font><font color="#E5E5E5"> be</font>

462
00:21:58,900 --> 00:22:04,120
able to use that to say highly processes

463
00:22:01,780 --> 00:22:05,530
if you want to edit the header file edit

464
00:22:04,120 --> 00:22:08,060
the

465
00:22:05,530 --> 00:22:10,940
this included<font color="#E5E5E5"> part of me corners now</font>

466
00:22:08,060 --> 00:22:12,830
<font color="#E5E5E5">maintain closely by recall or legal</font>

467
00:22:10,940 --> 00:22:14,600
foundation but<font color="#E5E5E5"> is also available at the</font>

468
00:22:12,830 --> 00:22:17,149
standards<font color="#CCCCCC"> then if you want to use it a</font>

469
00:22:14,600 --> 00:22:19,429
Python you actually just import it has

470
00:22:17,150 --> 00:22:20,720
anything else imagine I could before<font color="#CCCCCC"> the</font>

471
00:22:19,430 --> 00:22:26,240
finding out the exact module so<font color="#CCCCCC"> is</font>

472
00:22:20,720 --> 00:22:29,960
important yes it includes design

473
00:22:26,240 --> 00:22:32,360
terrible driver if you love it<font color="#E5E5E5"> here you</font>

474
00:22:29,960 --> 00:22:35,750
see the<font color="#E5E5E5"> name</font><font color="#CCCCCC"> of hydrogen</font><font color="#E5E5E5"> in</font><font color="#CCCCCC"> here</font><font color="#E5E5E5"> it's</font>

475
00:22:32,360 --> 00:22:38,899
bit fuzzy<font color="#E5E5E5"> glow so</font><font color="#CCCCCC"> there's learning the</font>

476
00:22:35,750 --> 00:22:40,310
Python file here where's the e-tag to

477
00:22:38,900 --> 00:22:42,680
tell them where the driver is and then

478
00:22:40,310 --> 00:22:44,149
<font color="#CCCCCC">that L to tell it to load the driver but</font>

479
00:22:42,680 --> 00:22:46,520
they're not do anything with it<font color="#E5E5E5"> just</font>

480
00:22:44,150 --> 00:22:48,230
loads the driver shuts down you can see

481
00:22:46,520 --> 00:22:52,610
<font color="#E5E5E5">here the</font><font color="#CCCCCC"> address for the CR three</font>

482
00:22:48,230 --> 00:22:54,770
register the kernel space addresses the

483
00:22:52,610 --> 00:22:56,469
physical addresses and then your virtual

484
00:22:54,770 --> 00:23:00,760
memory<font color="#E5E5E5"> Rangers down here which you can</font>

485
00:22:56,470 --> 00:23:07,220
interact with this was some need to go

486
00:23:00,760 --> 00:23:10,100
<font color="#E5E5E5">under it also creates a file handle so</font>

487
00:23:07,220 --> 00:23:13,610
it loads your driver and then reads I

488
00:23:10,100 --> 00:23:16,129
happen to them which is<font color="#E5E5E5"> the / / / email</font>

489
00:23:13,610 --> 00:23:20,780
now this had this acts as any other file

490
00:23:16,130 --> 00:23:23,990
you can open it using<font color="#E5E5E5"> C++ just create</font>

491
00:23:20,780 --> 00:23:26,540
file it's just a file handle so you can

492
00:23:23,990 --> 00:23:29,320
attach recall to it as though you're

493
00:23:26,540 --> 00:23:32,480
attaching it to your AFF for capture fun

494
00:23:29,320 --> 00:23:34,189
so that's me running PS list live on the

495
00:23:32,480 --> 00:23:41,270
bond between without very big<font color="#E5E5E5"> the cap</font><font color="#CCCCCC"> to</font>

496
00:23:34,190 --> 00:23:43,670
<font color="#CCCCCC">file before hand there</font><font color="#E5E5E5"> is an option to</font>

497
00:23:41,270 --> 00:23:47,210
envy call which is just<font color="#E5E5E5"> a flash live</font>

498
00:23:43,670 --> 00:23:48,470
which can replace the file name there it

499
00:23:47,210 --> 00:23:50,780
does exactly the same thing it just

500
00:23:48,470 --> 00:23:53,680
wants<font color="#E5E5E5"> driver for you and then just step</font>

501
00:23:50,780 --> 00:23:53,680
gets its get your<font color="#E5E5E5"> status</font>

502
00:23:57,759 --> 00:24:05,090
so we want to<font color="#E5E5E5"> look at customizing it</font>

503
00:24:00,590 --> 00:24:09,289
with Python so regal has a<font color="#E5E5E5"> Python</font>

504
00:24:05,090 --> 00:24:14,209
<font color="#E5E5E5">library to poop on it has heavy support</font>

505
00:24:09,289 --> 00:24:17,509
for writing plugins my team Parsons if

506
00:24:14,210 --> 00:24:18,889
you wanted to go to a certain they

507
00:24:17,509 --> 00:24:22,220
disrupted within every the middle have

508
00:24:18,889 --> 00:24:23,928
support for Charlie as for providing

509
00:24:22,220 --> 00:24:26,419
things<font color="#E5E5E5"> and different image files</font><font color="#CCCCCC"> without</font>

510
00:24:23,929 --> 00:24:28,999
<font color="#CCCCCC">playing</font><font color="#E5E5E5"> live happily on air</font><font color="#CCCCCC"> it does</font>

511
00:24:26,419 --> 00:24:30,860
support war and all the all the formats

512
00:24:28,999 --> 00:24:33,049
but if you put<font color="#E5E5E5"> some using feel from the</font>

513
00:24:30,860 --> 00:24:35,719
new one they would you be able to fight

514
00:24:33,049 --> 00:24:39,350
for it you can also just use it

515
00:24:35,720 --> 00:24:42,499
automated which is what I'm most

516
00:24:39,350 --> 00:24:44,389
interested in here and to try and use it

517
00:24:42,499 --> 00:24:48,169
as an automated detection tool rather

518
00:24:44,389 --> 00:24:50,149
than a happy memory and what static

519
00:24:48,169 --> 00:24:53,539
analyzer for absolute events happen but

520
00:24:50,149 --> 00:24:58,129
also detecting for today see your basic

521
00:24:53,539 --> 00:25:02,059
session creates an instance of me call

522
00:24:58,129 --> 00:25:04,279
if you're using boom if you're using it

523
00:25:02,059 --> 00:25:09,799
live you just replace this with your dog

524
00:25:04,279 --> 00:25:12,619
<font color="#E5E5E5">you know address and then the URL we</font>

525
00:25:09,799 --> 00:25:15,039
call and<font color="#CCCCCC"> volatility require a profile of</font>

526
00:25:12,619 --> 00:25:18,709
the<font color="#E5E5E5"> operating system you're working on</font>

527
00:25:15,039 --> 00:25:20,658
so they need<font color="#E5E5E5"> to know how where to look</font>

528
00:25:18,710 --> 00:25:23,960
for things have read things so they have

529
00:25:20,659 --> 00:25:25,309
profiles each operating system any

530
00:25:23,960 --> 00:25:27,919
corrosion operating system you have

531
00:25:25,309 --> 00:25:30,230
<font color="#E5E5E5">service pack versions as well normally</font>

532
00:25:27,919 --> 00:25:31,369
recall handles that very well and

533
00:25:30,230 --> 00:25:32,659
automatically detected when you're

534
00:25:31,369 --> 00:25:36,949
running much better than well as energy

535
00:25:32,659 --> 00:25:40,429
does and so you just feed of that URL

536
00:25:36,950 --> 00:25:43,759
and if you<font color="#CCCCCC"> look up</font><font color="#E5E5E5"> the correct format</font>

537
00:25:40,429 --> 00:25:49,370
<font color="#E5E5E5">form and then just you print and put</font>

538
00:25:43,759 --> 00:25:51,050
anybody value so yeah eventually

539
00:25:49,370 --> 00:25:53,059
before we yet this<font color="#E5E5E5"> you be able to</font>

540
00:25:51,050 --> 00:25:54,620
<font color="#E5E5E5">wastewater image format you can also do</font>

541
00:25:53,059 --> 00:25:57,500
output regulars if you want<font color="#E5E5E5"> me to</font><font color="#CCCCCC"> boil</font>

542
00:25:54,620 --> 00:26:03,830
in<font color="#E5E5E5"> this vector file your place an FML so</font>

543
00:25:57,500 --> 00:26:06,470
on to get in a particular web so you can

544
00:26:03,830 --> 00:26:09,530
also skip the<font color="#CCCCCC"> week all step all together</font>

545
00:26:06,470 --> 00:26:12,170
if you want<font color="#E5E5E5"> to script things and just</font><font color="#CCCCCC"> be</font>

546
00:26:09,530 --> 00:26:15,770
<font color="#CCCCCC">windy men which also has Python</font>

547
00:26:12,170 --> 00:26:17,540
libraries and load the load the driver

548
00:26:15,770 --> 00:26:19,990
and just interact with it as well as a

549
00:26:17,540 --> 00:26:23,120
survivor it's a lot more complicated

550
00:26:19,990 --> 00:26:24,679
because you're defeating<font color="#CCCCCC"> war memory you</font>

551
00:26:23,120 --> 00:26:26,659
haven't<font color="#E5E5E5"> got any other systems that's</font>

552
00:26:24,679 --> 00:26:29,809
being built into bollington volatility

553
00:26:26,660 --> 00:26:34,179
and then<font color="#CCCCCC"> recall which has taken years of</font>

554
00:26:29,809 --> 00:26:36,530
a team of<font color="#CCCCCC"> people better there so they</font>

555
00:26:34,179 --> 00:26:38,420
you're<font color="#E5E5E5"> starting from scratch again but</font>

556
00:26:36,530 --> 00:26:41,149
it really has particular purpose<font color="#CCCCCC"> for it</font>

557
00:26:38,420 --> 00:26:43,190
<font color="#E5E5E5">it might be the really want to go it</font>

558
00:26:41,150 --> 00:26:48,650
runs on Python 2.7 as is every damn

559
00:26:43,190 --> 00:26:50,870
thing you also you also<font color="#E5E5E5"> eat pie</font><font color="#CCCCCC"> Lindsay</font>

560
00:26:48,650 --> 00:26:53,630
to which is<font color="#CCCCCC"> Windows attention to my</font>

561
00:26:50,870 --> 00:26:55,760
phone so enables you to do things that

562
00:26:53,630 --> 00:26:59,990
<font color="#E5E5E5">you don't be doing C C++ like you clean</font>

563
00:26:55,760 --> 00:27:02,150
file to interact things in a better way

564
00:26:59,990 --> 00:27:03,410
you can't actually open the files or

565
00:27:02,150 --> 00:27:12,760
you're<font color="#E5E5E5"> doing in pointless if you're</font>

566
00:27:03,410 --> 00:27:16,760
using<font color="#E5E5E5"> email so just a basic this is my</font>

567
00:27:12,760 --> 00:27:19,100
job just my basically function so I set

568
00:27:16,760 --> 00:27:20,629
the fire going to read providers result

569
00:27:19,100 --> 00:27:22,370
and that is literally into a meeting to

570
00:27:20,630 --> 00:27:26,090
remember the restaurateurs<font color="#CCCCCC"> dumping it to</font>

571
00:27:22,370 --> 00:27:28,550
a blog file so let two lines just very

572
00:27:26,090 --> 00:27:32,090
new<font color="#CCCCCC"> media dot txt file or txt file and</font>

573
00:27:28,550 --> 00:27:33,500
your you've read memo you then have<font color="#CCCCCC"> the</font>

574
00:27:32,090 --> 00:27:39,379
problems of working out which name of

575
00:27:33,500 --> 00:27:43,010
your wet so

576
00:27:39,380 --> 00:27:44,840
the volatility and<font color="#E5E5E5"> recall handle address</font>

577
00:27:43,010 --> 00:27:47,300
translation for you so they worked out

578
00:27:44,840 --> 00:27:48,649
they have all translation from your

579
00:27:47,300 --> 00:27:51,919
virtual addresses to physical addresses

580
00:27:48,650 --> 00:27:54,080
so if you can use them interchangeably

581
00:27:51,920 --> 00:27:57,770
and you can just reference them and it

582
00:27:54,080 --> 00:28:01,040
uses its set dates I've go to work have

583
00:27:57,770 --> 00:28:05,720
what connected to what so to not use

584
00:28:01,040 --> 00:28:07,610
that I was getting very confused by<font color="#E5E5E5"> what</font>

585
00:28:05,720 --> 00:28:09,590
I'm getting while the biggest problems I

586
00:28:07,610 --> 00:28:13,699
was having for instance was at detecting

587
00:28:09,590 --> 00:28:17,689
my<font color="#CCCCCC"> balloon</font><font color="#E5E5E5"> program so I really improved</font>

588
00:28:13,700 --> 00:28:21,590
search for notepad.exe and 9 of the 13

589
00:28:17,690 --> 00:28:25,040
results and I get would be variations on

590
00:28:21,590 --> 00:28:26,030
search string for don't have exe so that

591
00:28:25,040 --> 00:28:27,980
was one of<font color="#E5E5E5"> the top of those having</font>

592
00:28:26,030 --> 00:28:29,899
originally was working what was<font color="#CCCCCC"> actually</font>

593
00:28:27,980 --> 00:28:34,160
meant to come back and what was coming

594
00:28:29,900 --> 00:28:36,020
<font color="#E5E5E5">back so but with a bit more time I'm</font>

595
00:28:34,160 --> 00:28:40,430
<font color="#CCCCCC">sure that we gonna go around this</font>

596
00:28:36,020 --> 00:28:43,550
outputs the data is as a string so

597
00:28:40,430 --> 00:28:45,770
<font color="#CCCCCC">converted</font><font color="#E5E5E5"> to</font><font color="#CCCCCC"> asking but by latest</font>

598
00:28:43,550 --> 00:28:49,040
version does it is hex instead because

599
00:28:45,770 --> 00:28:56,990
it's<font color="#CCCCCC"> bit lenders random</font><font color="#E5E5E5"> ASCII characters</font>

600
00:28:49,040 --> 00:28:59,090
if it's not actually a stray<font color="#CCCCCC"> dumping</font>

601
00:28:56,990 --> 00:29:01,490
processes this was something I was

602
00:28:59,090 --> 00:29:06,500
looking at more recently you can use

603
00:29:01,490 --> 00:29:08,960
recall to dump processes so if you were

604
00:29:06,500 --> 00:29:11,750
trying<font color="#CCCCCC"> to analyze whether by me being</font>

605
00:29:08,960 --> 00:29:13,400
changed but you couldn't get hold of the

606
00:29:11,750 --> 00:29:16,220
original binary<font color="#E5E5E5"> and in the rolling</font>

607
00:29:13,400 --> 00:29:18,380
machine you can use a plug-in it's

608
00:29:16,220 --> 00:29:21,560
already written for people to just pull

609
00:29:18,380 --> 00:29:24,860
that binary nap it's not immediately

610
00:29:21,560 --> 00:29:26,210
laudable it's missing handle tables and

611
00:29:24,860 --> 00:29:30,699
<font color="#E5E5E5">I'm not actually sure what else are</font>

612
00:29:26,210 --> 00:29:33,920
looking at this last night<font color="#CCCCCC"> but it can</font>

613
00:29:30,700 --> 00:29:36,150
very quickly be rebuilt<font color="#E5E5E5"> to actually run</font>

614
00:29:33,920 --> 00:29:39,390
click as know

615
00:29:36,150 --> 00:29:41,760
I want to<font color="#E5E5E5"> try</font><font color="#CCCCCC"> to break down a little out</font>

616
00:29:39,390 --> 00:29:44,180
just to see just show you how we call

617
00:29:41,760 --> 00:29:44,180
works

618
00:29:59,020 --> 00:30:08,679
so we go a long way around and<font color="#E5E5E5"> just</font>

619
00:30:02,179 --> 00:30:08,679
start off with wind email directory

620
00:30:16,739 --> 00:30:23,109
yeah so there's the output from<font color="#E5E5E5"> thinking</font>

621
00:30:20,019 --> 00:30:28,769
that I now have the<font color="#CCCCCC"> flight object at the</font>

622
00:30:23,109 --> 00:30:28,769
movies on people so

623
00:30:33,970 --> 00:30:40,140
<font color="#E5E5E5">so the basic</font>

624
00:30:36,360 --> 00:30:46,939
hello world program compiles the new SLR

625
00:30:40,140 --> 00:30:46,940
option though<font color="#CCCCCC"> SLR option to demonstrate</font>

626
00:31:13,700 --> 00:31:18,380
so there must be<font color="#E5E5E5"> listed the processes</font>

627
00:31:15,830 --> 00:31:21,260
but<font color="#E5E5E5"> I only wanted to show the one that</font>

628
00:31:18,380 --> 00:31:23,600
is matching hello world I just<font color="#E5E5E5"> need this</font>

629
00:31:21,260 --> 00:31:31,480
<font color="#CCCCCC">get the ID could do a task manager but</font>

630
00:31:23,600 --> 00:31:31,480
that's boring so now I've got any ID

631
00:31:46,840 --> 00:31:48,870
Oh

632
00:31:56,940 --> 00:32:03,150
so that's just telling it where<font color="#CCCCCC"> to dump</font>

633
00:31:59,230 --> 00:32:03,150
to the<font color="#E5E5E5"> e mc2 and then</font>

634
00:32:29,750 --> 00:32:38,530
right so if I pull<font color="#CCCCCC"> this up in see their</font>

635
00:32:34,790 --> 00:32:43,000
size hundreds of people kilobytes which

636
00:32:38,530 --> 00:32:43,000
is exactly the same

637
00:32:53,190 --> 00:32:59,460
as the original or exit no epsilon<font color="#E5E5E5"> 0 EXE</font>

638
00:32:57,110 --> 00:33:02,070
so the only thing that's different is

639
00:32:59,460 --> 00:33:05,130
its handle table broken that have to

640
00:33:02,070 --> 00:33:06,810
rebuild that manually and then it

641
00:33:05,130 --> 00:33:09,210
reveals<font color="#CCCCCC"> panel</font><font color="#E5E5E5"> system call that needs to</font>

642
00:33:06,810 --> 00:33:11,250
pin to<font color="#CCCCCC"> the screen and so on without</font>

643
00:33:09,210 --> 00:33:21,420
fracturing but don't think about at the

644
00:33:11,250 --> 00:33:28,380
moment<font color="#CCCCCC"> attached</font><font color="#E5E5E5"> about it all other terms</font>

645
00:33:21,420 --> 00:33:31,020
oh yeah oh my rates mean it was<font color="#CCCCCC"> just</font>

646
00:33:28,380 --> 00:33:37,950
that but that does a you can rebuild it

647
00:33:31,020 --> 00:33:40,080
to<font color="#CCCCCC"> Polly it also</font><font color="#E5E5E5"> seems of that</font><font color="#CCCCCC"> recalls</font>

648
00:33:37,950 --> 00:33:44,370
<font color="#CCCCCC">very quick even when using</font><font color="#E5E5E5"> an alive</font>

649
00:33:40,080 --> 00:33:46,770
system they pulled<font color="#CCCCCC"> out the process which</font>

650
00:33:44,370 --> 00:33:49,320
<font color="#CCCCCC">is fairly fast and that's using all of</font>

651
00:33:46,770 --> 00:33:51,060
the methods the deeply involved when UPS

652
00:33:49,320 --> 00:33:54,300
list to every<font color="#E5E5E5"> single one of the methods</font>

653
00:33:51,060 --> 00:33:57,120
<font color="#CCCCCC">I mentioned earlier so it's done that</font>

654
00:33:54,300 --> 00:33:58,680
pretty quickly but they<font color="#E5E5E5"> hope she loved</font>

655
00:33:57,120 --> 00:34:00,860
that any huge amount but I've got some

656
00:33:58,680 --> 00:34:00,860
jungle

657
00:34:11,750 --> 00:34:15,739
so the<font color="#CCCCCC"> next</font><font color="#E5E5E5"> steps for the project</font><font color="#CCCCCC"> was</font>

658
00:34:14,060 --> 00:34:17,739
<font color="#E5E5E5">this has been more</font><font color="#CCCCCC"> than all of you</font>

659
00:34:15,739 --> 00:34:22,069
rather than<font color="#E5E5E5"> a look at my appt level</font>

660
00:34:17,739 --> 00:34:23,899
where I've got<font color="#CCCCCC"> to with</font><font color="#E5E5E5"> this and that is</font>

661
00:34:22,070 --> 00:34:27,679
because I sort of around<font color="#E5E5E5"> in circles for</font>

662
00:34:23,899 --> 00:34:31,310
lunch so I have a bison script that

663
00:34:27,679 --> 00:34:33,520
reads memory searches memory and also to

664
00:34:31,310 --> 00:34:37,549
expect monitors memory so I can input

665
00:34:33,520 --> 00:34:40,340
about an exe<font color="#CCCCCC"> on to look for more just a</font>

666
00:34:37,550 --> 00:34:41,780
<font color="#E5E5E5">wild card values everything got exe and</font>

667
00:34:40,340 --> 00:34:43,399
it'll go through documenting the ones it

668
00:34:41,780 --> 00:34:45,649
finds<font color="#E5E5E5"> and notify you of any new ones</font>

669
00:34:43,399 --> 00:34:48,109
<font color="#CCCCCC">that was where a lots to get to but the</font>

670
00:34:45,649 --> 00:34:51,638
false positives<font color="#E5E5E5"> but you</font><font color="#CCCCCC"> make to make it</font>

671
00:34:48,110 --> 00:34:58,930
actually work for<font color="#E5E5E5"> the moment</font><font color="#CCCCCC"> but</font><font color="#E5E5E5"> we get</font>

672
00:34:51,639 --> 00:35:01,280
some a next step using we call instead

673
00:34:58,930 --> 00:35:04,040
<font color="#CCCCCC">of going all the way down to Brittany</font>

674
00:35:01,280 --> 00:35:06,340
men to try and monitor flying processes

675
00:35:04,040 --> 00:35:08,960
we shouldn't be<font color="#E5E5E5"> there so the basic</font>

676
00:35:06,340 --> 00:35:12,560
example banking system processes which

677
00:35:08,960 --> 00:35:14,300
are being abused services dot exe for

678
00:35:12,560 --> 00:35:16,279
example should always be running but

679
00:35:14,300 --> 00:35:19,280
<font color="#CCCCCC">only one of them should be</font><font color="#E5E5E5"> run so if you</font>

680
00:35:16,280 --> 00:35:21,050
there's no checking that in the OS so if

681
00:35:19,280 --> 00:35:23,410
you have something<font color="#E5E5E5"> like this it might be</font>

682
00:35:21,050 --> 00:35:26,120
something that malware which I hide as

683
00:35:23,410 --> 00:35:32,839
so there's just an example but there are

684
00:35:26,120 --> 00:35:34,310
one<font color="#E5E5E5"> good youth as well yeah doing my own</font>

685
00:35:32,840 --> 00:35:37,030
programs they have their issues with

686
00:35:34,310 --> 00:35:41,090
address mapping<font color="#CCCCCC"> aslr becomes a problem</font>

687
00:35:37,030 --> 00:35:42,110
which volatility gets around and there

688
00:35:41,090 --> 00:35:44,330
are<font color="#CCCCCC"> things like the issues mentioned</font>

689
00:35:42,110 --> 00:35:46,400
where you can't was very hard to work

690
00:35:44,330 --> 00:35:51,290
out what is a tree what is a list and

691
00:35:46,400 --> 00:35:54,020
what is<font color="#E5E5E5"> it you get constant it's very</font>

692
00:35:51,290 --> 00:35:55,540
complex to work out which one of our

693
00:35:54,020 --> 00:35:59,620
which one arm to go to the fourth

694
00:35:55,540 --> 00:36:01,630
which are just string variables so it's

695
00:35:59,620 --> 00:36:04,630
going to be is quite a long job to get

696
00:36:01,630 --> 00:36:06,340
the<font color="#CCCCCC"> five min</font><font color="#E5E5E5"> program working my ultimate</font>

697
00:36:04,630 --> 00:36:07,690
ambition and the main these<font color="#CCCCCC"> mash</font>

698
00:36:06,340 --> 00:36:11,770
<font color="#CCCCCC">yourself is project in the first place</font>

699
00:36:07,690 --> 00:36:15,430
is the<font color="#CCCCCC"> our</font><font color="#E5E5E5"> stage I would like to have it</font>

700
00:36:11,770 --> 00:36:19,509
<font color="#E5E5E5">Welling an automated detection on known</font>

701
00:36:15,430 --> 00:36:23,560
malware in memory using<font color="#CCCCCC"> our well the are</font>

702
00:36:19,510 --> 00:36:25,930
being the heat is we're doing a lot of

703
00:36:23,560 --> 00:36:27,070
malware now is trying<font color="#E5E5E5"> to point out two</font>

704
00:36:25,930 --> 00:36:29,410
guards<font color="#CCCCCC"> around</font><font color="#E5E5E5"> whether the detection</font>

705
00:36:27,070 --> 00:36:31,330
techniques trying to maintain itself in

706
00:36:29,410 --> 00:36:34,149
<font color="#E5E5E5">RAM as much as</font><font color="#CCCCCC"> white as possible without</font>

707
00:36:31,330 --> 00:36:36,670
leaving a footprint on the hard drive so

708
00:36:34,150 --> 00:36:39,280
if<font color="#CCCCCC"> I can use if you can use something</font>

709
00:36:36,670 --> 00:36:41,020
like this it might be a way to find cash

710
00:36:39,280 --> 00:36:42,810
some of the other ones signature

711
00:36:41,020 --> 00:36:49,870
detection obviously works unknown

712
00:36:42,810 --> 00:36:52,420
malware<font color="#E5E5E5"> that is the Western so and that</font>

713
00:36:49,870 --> 00:36:54,910
is<font color="#E5E5E5"> the end of I thought thank you for</font>

714
00:36:52,420 --> 00:36:56,170
listening I don't know if these slides

715
00:36:54,910 --> 00:36:57,580
are going to be available<font color="#E5E5E5"> online</font>

716
00:36:56,170 --> 00:36:59,680
anywhere when I stopped some references

717
00:36:57,580 --> 00:37:01,150
<font color="#E5E5E5">to the bottom there in case it was</font>

718
00:36:59,680 --> 00:37:03,640
investors couple of books a couple of

719
00:37:01,150 --> 00:37:05,730
<font color="#CCCCCC">things I used and might get over the</font>

720
00:37:03,640 --> 00:37:09,129
bottom there as my current vital tool

721
00:37:05,730 --> 00:37:13,260
which I need to update our innovative in

722
00:37:09,130 --> 00:37:13,260
while you can see you roughly

