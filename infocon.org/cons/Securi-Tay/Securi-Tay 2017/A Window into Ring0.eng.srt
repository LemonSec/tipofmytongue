1
00:00:03,140 --> 00:00:07,589
cool

2
00:00:04,470 --> 00:00:09,989
<font color="#E5E5E5">Aaron I'm Sam let me talk</font><font color="#CCCCCC"> about Windows</font>

3
00:00:07,589 --> 00:00:11,849
security<font color="#E5E5E5"> the alternative tile for</font><font color="#CCCCCC"> this</font>

4
00:00:09,990 --> 00:00:13,650
talk is please stop<font color="#E5E5E5"> using Windows 7 what</font>

5
00:00:11,849 --> 00:00:15,839
year is this why<font color="#CCCCCC"> are you</font><font color="#E5E5E5"> doing that and</font>

6
00:00:13,650 --> 00:00:17,880
<font color="#CCCCCC">as you</font><font color="#E5E5E5"> see later on that's because it</font>

7
00:00:15,839 --> 00:00:21,060
<font color="#E5E5E5">just makes life so</font><font color="#CCCCCC"> much easier for the a</font>

8
00:00:17,880 --> 00:00:23,939
PT's Who<font color="#E5E5E5"> am I</font>

9
00:00:21,060 --> 00:00:25,650
Sam Sam<font color="#E5E5E5"> I said before I work in the</font>

10
00:00:23,939 --> 00:00:27,689
<font color="#CCCCCC">research practice named of</font><font color="#E5E5E5"> your work</font>

11
00:00:25,650 --> 00:00:30,479
wise I<font color="#E5E5E5"> focus on software security</font>

12
00:00:27,689 --> 00:00:32,700
<font color="#E5E5E5">product</font><font color="#CCCCCC"> security stuff like that in my</font>

13
00:00:30,480 --> 00:00:34,680
spare time<font color="#CCCCCC"> a company research time I've</font>

14
00:00:32,700 --> 00:00:36,420
been splitting my time between<font color="#CCCCCC"> poky at</font>

15
00:00:34,680 --> 00:00:40,950
<font color="#CCCCCC">Windows and effectively trying</font><font color="#E5E5E5"> to</font>

16
00:00:36,420 --> 00:00:42,750
automate myself at the job<font color="#E5E5E5"> and it's</font>

17
00:00:40,950 --> 00:00:44,160
interesting<font color="#CCCCCC"> to talk and this is gonna be</font>

18
00:00:42,750 --> 00:00:45,510
kind of a survey style thing it's<font color="#E5E5E5"> not</font>

19
00:00:44,160 --> 00:00:48,059
<font color="#E5E5E5">gonna be about dropping o days and stuff</font>

20
00:00:45,510 --> 00:00:49,680
and focus on concepts more of a

21
00:00:48,059 --> 00:00:51,510
systemization of knowledge type thing

22
00:00:49,680 --> 00:00:52,620
<font color="#CCCCCC">it's the kind</font><font color="#E5E5E5"> of based off what I've</font>

23
00:00:51,510 --> 00:00:54,239
been doing for<font color="#CCCCCC"> the past</font><font color="#E5E5E5"> year reading</font>

24
00:00:52,620 --> 00:00:55,468
<font color="#CCCCCC">Karina's</font><font color="#E5E5E5"> amounts of</font><font color="#CCCCCC"> all kinds</font><font color="#E5E5E5"> of my</font>

25
00:00:54,239 --> 00:00:58,858
papers and<font color="#CCCCCC"> playing with bugs and</font>

26
00:00:55,469 --> 00:01:00,329
reversing random things as a<font color="#E5E5E5"> reference</font>

27
00:00:58,859 --> 00:01:01,890
<font color="#E5E5E5">slide for things I directly talk about</font>

28
00:01:00,329 --> 00:01:03,270
<font color="#E5E5E5">there's also a git repo which has</font>

29
00:01:01,890 --> 00:01:04,559
basically<font color="#E5E5E5"> everything I've read</font><font color="#CCCCCC"> over the</font>

30
00:01:03,270 --> 00:01:08,970
past year that's<font color="#CCCCCC"> been super useful</font>

31
00:01:04,559 --> 00:01:10,560
I learned something<font color="#E5E5E5"> soft with motivation</font>

32
00:01:08,970 --> 00:01:12,750
saying why we're<font color="#CCCCCC"> doing this why am I</font>

33
00:01:10,560 --> 00:01:13,830
here<font color="#E5E5E5"> what am i doing my life</font><font color="#CCCCCC"> are they</font>

34
00:01:12,750 --> 00:01:15,509
<font color="#CCCCCC">going</font><font color="#E5E5E5"> to talk</font><font color="#CCCCCC"> about the attack surface</font>

35
00:01:13,830 --> 00:01:17,520
and what there is to<font color="#E5E5E5"> attack in Windows</font>

36
00:01:15,509 --> 00:01:20,159
<font color="#CCCCCC">and how you</font><font color="#E5E5E5"> interact with it I'll then</font>

37
00:01:17,520 --> 00:01:21,689
go a bit into bug hunting<font color="#E5E5E5"> and what kind</font>

38
00:01:20,159 --> 00:01:22,920
of tools techniques people<font color="#E5E5E5"> use to find</font>

39
00:01:21,689 --> 00:01:25,250
bugs<font color="#CCCCCC"> in Windows how they've been</font><font color="#E5E5E5"> found</font>

40
00:01:22,920 --> 00:01:30,119
publicly and then I'll do a<font color="#E5E5E5"> run-through</font>

41
00:01:25,250 --> 00:01:31,740
<font color="#CCCCCC">CVE 2016 7 to 55 which hopefully</font><font color="#E5E5E5"> I have</font>

42
00:01:30,119 --> 00:01:33,090
a<font color="#E5E5E5"> working exploit for it worked like 20</font>

43
00:01:31,740 --> 00:01:38,039
times last night<font color="#E5E5E5"> but it'll probably fail</font>

44
00:01:33,090 --> 00:01:39,810
now<font color="#CCCCCC"> which is the one Google disclosed</font>

45
00:01:38,040 --> 00:01:41,670
<font color="#E5E5E5">after kind of being exploited in wild</font>

46
00:01:39,810 --> 00:01:43,250
just<font color="#E5E5E5"> before Christmas and kind of dumped</font>

47
00:01:41,670 --> 00:01:45,570
on Microsoft and there was lots of drama

48
00:01:43,250 --> 00:01:47,250
<font color="#E5E5E5">and I'll have a few</font><font color="#CCCCCC"> conclusions and</font><font color="#E5E5E5"> you</font>

49
00:01:45,570 --> 00:01:51,479
can ask<font color="#E5E5E5"> me questions</font><font color="#CCCCCC"> and make me look</font>

50
00:01:47,250 --> 00:01:53,159
stupid<font color="#CCCCCC"> so motivation and why do</font><font color="#E5E5E5"> we need</font>

51
00:01:51,479 --> 00:01:55,500
to evolve<font color="#E5E5E5"> our attack in Windows kernel</font>

52
00:01:53,159 --> 00:01:59,130
why do we<font color="#E5E5E5"> need to attack with stuff the</font>

53
00:01:55,500 --> 00:02:01,619
reality<font color="#E5E5E5"> is the over the past</font><font color="#CCCCCC"> 10 plus</font>

54
00:01:59,130 --> 00:02:03,179
years<font color="#CCCCCC"> people have realized</font><font color="#E5E5E5"> that if you</font>

55
00:02:01,619 --> 00:02:04,469
own a browser you shouldn't immediately

56
00:02:03,180 --> 00:02:05,490
<font color="#E5E5E5">have the keys to the kingdom and be able</font>

57
00:02:04,469 --> 00:02:06,509
<font color="#CCCCCC">to do whatever you want so we've</font>

58
00:02:05,490 --> 00:02:09,359
<font color="#CCCCCC">introduced</font><font color="#E5E5E5"> things like software</font><font color="#CCCCCC"> sound</font>

59
00:02:06,509 --> 00:02:11,129
boxing so generally how this will work

60
00:02:09,360 --> 00:02:12,010
so for example in a web browser<font color="#E5E5E5"> it's</font>

61
00:02:11,129 --> 00:02:14,829
simplified

62
00:02:12,010 --> 00:02:17,049
your<font color="#E5E5E5"> browser content processors will be</font>

63
00:02:14,830 --> 00:02:19,180
<font color="#CCCCCC">run in a very low physic low permission</font>

64
00:02:17,050 --> 00:02:21,269
process<font color="#E5E5E5"> they</font><font color="#CCCCCC"> all have to talk to</font><font color="#E5E5E5"> another</font>

65
00:02:19,180 --> 00:02:24,459
process<font color="#CCCCCC"> which has kind</font><font color="#E5E5E5"> of user level</font>

66
00:02:21,269 --> 00:02:25,780
<font color="#E5E5E5">privileges too</font><font color="#CCCCCC"> called</font><font color="#E5E5E5"> process and then</font>

67
00:02:24,459 --> 00:02:27,879
you'll send it messages to do things

68
00:02:25,780 --> 00:02:28,989
like<font color="#CCCCCC"> add files and things like that it</font>

69
00:02:27,879 --> 00:02:30,940
<font color="#CCCCCC">just</font><font color="#E5E5E5"> means</font><font color="#CCCCCC"> that the content process</font>

70
00:02:28,989 --> 00:02:32,140
can't if someone<font color="#CCCCCC"> owns your browser we</font>

71
00:02:30,940 --> 00:02:33,489
can't<font color="#CCCCCC"> directly</font><font color="#E5E5E5"> start reading a file</font>

72
00:02:32,140 --> 00:02:34,899
<font color="#CCCCCC">system you can only</font><font color="#E5E5E5"> get it by</font><font color="#CCCCCC"> the</font>

73
00:02:33,489 --> 00:02:36,880
content processor to<font color="#E5E5E5"> do things like pop</font>

74
00:02:34,900 --> 00:02:39,450
warnings to user make user<font color="#CCCCCC"> selects to</font>

75
00:02:36,880 --> 00:02:41,500
limit what kind of things you can do<font color="#CCCCCC"> I</font>

76
00:02:39,450 --> 00:02:49,420
mean<font color="#CCCCCC"> the broker itself will be</font><font color="#E5E5E5"> making</font>

77
00:02:41,500 --> 00:02:51,730
<font color="#E5E5E5">calls to the</font><font color="#CCCCCC"> Co</font><font color="#E5E5E5"> Federation so ie7 kind</font>

78
00:02:49,420 --> 00:02:53,920
of<font color="#E5E5E5"> implemented the</font><font color="#CCCCCC"> first public sandbox</font>

79
00:02:51,730 --> 00:02:55,780
but<font color="#E5E5E5"> it was terrible</font><font color="#CCCCCC"> so I know</font><font color="#E5E5E5"> one go</font>

80
00:02:53,920 --> 00:02:58,238
fuzzy security did an entire<font color="#E5E5E5"> routine</font>

81
00:02:55,780 --> 00:03:00,040
<font color="#E5E5E5">while still in the sandbox</font><font color="#CCCCCC"> just because</font>

82
00:02:58,239 --> 00:03:02,560
they were so<font color="#E5E5E5"> give you so many</font>

83
00:03:00,040 --> 00:03:04,030
permissions let you still do things it's

84
00:03:02,560 --> 00:03:04,420
got<font color="#E5E5E5"> more and more effective over the</font>

85
00:03:04,030 --> 00:03:07,390
years

86
00:03:04,420 --> 00:03:12,760
<font color="#CCCCCC">Firefox finally got a real sandbox</font><font color="#E5E5E5"> like</font>

87
00:03:07,390 --> 00:03:13,779
<font color="#E5E5E5">two</font><font color="#CCCCCC"> months</font><font color="#E5E5E5"> ago</font><font color="#CCCCCC"> and she's good and part</font>

88
00:03:12,760 --> 00:03:15,370
of the thing<font color="#CCCCCC"> that's helped with this is</font>

89
00:03:13,780 --> 00:03:17,410
the<font color="#E5E5E5"> concept</font><font color="#CCCCCC"> of low integrity processes</font>

90
00:03:15,370 --> 00:03:19,840
<font color="#CCCCCC">fees is a concept</font><font color="#E5E5E5"> introduced Windows</font>

91
00:03:17,410 --> 00:03:21,519
Vista<font color="#CCCCCC"> where you can have processes and</font>

92
00:03:19,840 --> 00:03:23,290
different integrity levels generally<font color="#CCCCCC"> as</font>

93
00:03:21,519 --> 00:03:25,660
a usual<font color="#E5E5E5"> be a medium of an things that</font>

94
00:03:23,290 --> 00:03:27,250
system will<font color="#E5E5E5"> be a high etcetera</font><font color="#CCCCCC"> and but</font>

95
00:03:25,660 --> 00:03:28,690
low integrity<font color="#E5E5E5"> will have access to</font><font color="#CCCCCC"> very</font>

96
00:03:27,250 --> 00:03:29,829
<font color="#E5E5E5">little and once you have a lot</font>

97
00:03:28,690 --> 00:03:30,700
<font color="#CCCCCC">interpreting process you can also do</font>

98
00:03:29,829 --> 00:03:32,889
things<font color="#E5E5E5"> like restricted permissions</font>

99
00:03:30,700 --> 00:03:37,420
further so it can do<font color="#E5E5E5"> very little on the</font>

100
00:03:32,889 --> 00:03:39,489
system so sandbox<font color="#CCCCCC"> escape</font><font color="#E5E5E5"> what</font><font color="#CCCCCC"> we</font><font color="#E5E5E5"> want to</font>

101
00:03:37,420 --> 00:03:40,450
do here we've compromised a client<font color="#E5E5E5"> we</font>

102
00:03:39,489 --> 00:03:42,670
can't do anything<font color="#E5E5E5"> we're stuck in the</font>

103
00:03:40,450 --> 00:03:43,869
sandbox<font color="#CCCCCC"> we're gonna need some way to</font>

104
00:03:42,670 --> 00:03:46,149
isolate<font color="#E5E5E5"> our privileges so we can</font>

105
00:03:43,870 --> 00:03:47,950
actually do interesting<font color="#E5E5E5"> things so you</font>

106
00:03:46,150 --> 00:03:50,950
could attack the<font color="#CCCCCC"> prokhor itself and</font><font color="#E5E5E5"> that</font>

107
00:03:47,950 --> 00:03:53,858
been various exploits<font color="#CCCCCC"> in focus for</font>

108
00:03:50,950 --> 00:03:56,920
sandbox isn't<font color="#E5E5E5"> past but it's quite a</font>

109
00:03:53,859 --> 00:03:58,180
limited attack base there's not a huge

110
00:03:56,920 --> 00:04:00,940
amount<font color="#E5E5E5"> of</font><font color="#CCCCCC"> functionality</font><font color="#E5E5E5"> than generally</font>

111
00:03:58,180 --> 00:04:03,609
they've been well researched

112
00:04:00,940 --> 00:04:06,940
meanwhile the kernel is<font color="#CCCCCC"> monolithic and</font>

113
00:04:03,609 --> 00:04:08,200
massive and messy and every year as you

114
00:04:06,940 --> 00:04:10,810
<font color="#E5E5E5">can see from these kind of two columns</font>

115
00:04:08,200 --> 00:04:12,940
<font color="#E5E5E5">this is just comparing 2015 to 2016 in</font>

116
00:04:10,810 --> 00:04:14,980
terms of<font color="#E5E5E5"> box patched in parts of the</font>

117
00:04:12,940 --> 00:04:17,440
Windows kernel<font color="#CCCCCC"> and the year on your</font>

118
00:04:14,980 --> 00:04:20,079
growth is massive<font color="#E5E5E5"> and you can look back</font>

119
00:04:17,440 --> 00:04:21,649
and it's<font color="#CCCCCC"> the same with 2014</font><font color="#E5E5E5"> 2015 2013 to</font>

120
00:04:20,079 --> 00:04:27,280
2014 is just

121
00:04:21,649 --> 00:04:30,169
<font color="#CCCCCC">less</font><font color="#E5E5E5"> so how do we actually go about</font>

122
00:04:27,280 --> 00:04:31,609
increasing<font color="#CCCCCC"> our privileges</font><font color="#E5E5E5"> so I'm</font><font color="#CCCCCC"> going</font>

123
00:04:30,169 --> 00:04:33,740
<font color="#CCCCCC">to</font><font color="#E5E5E5"> kind of go through what the actual</font>

124
00:04:31,610 --> 00:04:35,960
<font color="#CCCCCC">mechanism is rather than kind</font><font color="#E5E5E5"> of the</font>

125
00:04:33,740 --> 00:04:37,430
ExpoDisc<font color="#CCCCCC"> okay</font><font color="#E5E5E5"> we've got trade excuse me</font>

126
00:04:35,960 --> 00:04:45,258
<font color="#E5E5E5">colonel how do we actually</font><font color="#CCCCCC"> use that to</font>

127
00:04:37,430 --> 00:04:47,300
do more so<font color="#E5E5E5"> Windows has this concept of</font>

128
00:04:45,259 --> 00:04:48,620
access token<font color="#E5E5E5"> objects and when it's going</font>

129
00:04:47,300 --> 00:04:51,680
<font color="#E5E5E5">on everything's an object but it's a</font>

130
00:04:48,620 --> 00:04:54,139
file or processor<font color="#CCCCCC"> or Fred or access</font>

131
00:04:51,680 --> 00:04:56,389
token and<font color="#CCCCCC"> so this is almost</font><font color="#E5E5E5"> like cookies</font>

132
00:04:54,139 --> 00:04:57,710
but in the kernel space and so<font color="#E5E5E5"> it will</font>

133
00:04:56,389 --> 00:04:58,970
say what<font color="#CCCCCC"> you have access to what</font>

134
00:04:57,710 --> 00:05:01,340
permissions<font color="#E5E5E5"> you have what you can it</font>

135
00:04:58,970 --> 00:05:03,919
can't read<font color="#E5E5E5"> what API is you can call it</font>

136
00:05:01,340 --> 00:05:06,380
cetera so the way we generally probe

137
00:05:03,919 --> 00:05:08,719
<font color="#CCCCCC">esque</font><font color="#E5E5E5"> is we find the access token for</font>

138
00:05:06,380 --> 00:05:10,190
<font color="#CCCCCC">the system process</font><font color="#E5E5E5"> we steal that replace</font>

139
00:05:08,720 --> 00:05:13,070
ours with it<font color="#E5E5E5"> and sometimes we can do</font>

140
00:05:10,190 --> 00:05:15,169
whatever<font color="#CCCCCC"> we fancy there's other methods</font>

141
00:05:13,070 --> 00:05:17,990
<font color="#CCCCCC">as well</font><font color="#E5E5E5"> so you can do things like take</font>

142
00:05:15,169 --> 00:05:19,490
another process<font color="#E5E5E5"> give your user more</font>

143
00:05:17,990 --> 00:05:22,070
permission so you can edit<font color="#E5E5E5"> the process</font>

144
00:05:19,490 --> 00:05:23,199
and then attach inject shell code system

145
00:05:22,070 --> 00:05:27,349
keys<font color="#E5E5E5"> kingdom if you go</font>

146
00:05:23,199 --> 00:05:30,320
you can also so every object<font color="#CCCCCC"> in Windows</font>

147
00:05:27,349 --> 00:05:32,780
has a field for<font color="#CCCCCC"> a security descriptor</font>

148
00:05:30,320 --> 00:05:34,310
<font color="#E5E5E5">which is a</font><font color="#CCCCCC"> list of kind of who has</font>

149
00:05:32,780 --> 00:05:35,809
<font color="#CCCCCC">access to it so if you look</font><font color="#E5E5E5"> at file</font>

150
00:05:34,310 --> 00:05:39,199
<font color="#CCCCCC">commissioners go</font><font color="#E5E5E5"> through that system</font><font color="#CCCCCC"> can</font>

151
00:05:35,810 --> 00:05:40,400
<font color="#E5E5E5">read write execute user can read and so</font>

152
00:05:39,199 --> 00:05:42,080
you can replace<font color="#E5E5E5"> the point it's about</font>

153
00:05:40,400 --> 00:05:44,150
<font color="#CCCCCC">descriptive</font><font color="#E5E5E5"> with a null pointer and by</font>

154
00:05:42,080 --> 00:05:45,500
<font color="#CCCCCC">default Windows</font><font color="#E5E5E5"> will fail open so</font>

155
00:05:44,150 --> 00:05:47,060
everyone will<font color="#CCCCCC"> have access so</font><font color="#E5E5E5"> everything</font>

156
00:05:45,500 --> 00:05:51,800
and again<font color="#E5E5E5"> you can attach injection shell</font>

157
00:05:47,060 --> 00:05:53,720
code<font color="#E5E5E5"> you win so now I'm going to outline</font>

158
00:05:51,800 --> 00:05:57,550
<font color="#E5E5E5">the kind of attack surface what there is</font>

159
00:05:53,720 --> 00:05:59,570
in Windows what there is to attack so

160
00:05:57,550 --> 00:06:01,159
Windows is obviously<font color="#E5E5E5"> huge</font><font color="#CCCCCC"> so there's a</font>

161
00:05:59,570 --> 00:06:03,949
lot of<font color="#E5E5E5"> attack service I'm gonna focus on</font>

162
00:06:01,159 --> 00:06:05,240
<font color="#E5E5E5">the kind</font><font color="#CCCCCC"> of free areas where most of the</font>

163
00:06:03,949 --> 00:06:08,090
in the wild<font color="#E5E5E5"> exploits you'll encounter</font>

164
00:06:05,240 --> 00:06:14,479
actually target these are system calls

165
00:06:08,090 --> 00:06:17,150
drivers and<font color="#CCCCCC"> func passing so what is a</font>

166
00:06:14,479 --> 00:06:19,460
<font color="#E5E5E5">system call essentially in the real</font>

167
00:06:17,150 --> 00:06:21,229
world<font color="#CCCCCC"> a user land application has very</font>

168
00:06:19,460 --> 00:06:22,820
little permission to do anything<font color="#E5E5E5"> you're</font>

169
00:06:21,229 --> 00:06:25,969
<font color="#E5E5E5">running in bring free which is</font><font color="#CCCCCC"> the less</font>

170
00:06:22,820 --> 00:06:28,039
privileged<font color="#CCCCCC"> one them Intel to do anything</font>

171
00:06:25,970 --> 00:06:29,539
serious you<font color="#E5E5E5"> have to fire for a</font><font color="#CCCCCC"> cost to</font>

172
00:06:28,039 --> 00:06:31,370
<font color="#E5E5E5">the kernel to do things for you and</font>

173
00:06:29,539 --> 00:06:34,099
these<font color="#CCCCCC"> are</font><font color="#E5E5E5"> called system calls so in</font>

174
00:06:31,370 --> 00:06:38,210
Windows generally access these<font color="#CCCCCC"> four</font>

175
00:06:34,100 --> 00:06:39,920
indeed<font color="#E5E5E5"> I ll use</font><font color="#CCCCCC"> a</font><font color="#E5E5E5"> 32d ll etc and</font><font color="#CCCCCC"> these</font>

176
00:06:38,210 --> 00:06:41,690
<font color="#CCCCCC">will be implemented on the back</font><font color="#E5E5E5"> end by</font>

177
00:06:39,920 --> 00:06:43,070
other binaries which<font color="#E5E5E5"> will run in a high</font>

178
00:06:41,690 --> 00:06:47,630
privilege<font color="#E5E5E5"> mode and be able to do things</font>

179
00:06:43,070 --> 00:06:50,540
like mess<font color="#CCCCCC"> with the</font><font color="#E5E5E5"> system</font><font color="#CCCCCC"> state so</font>

180
00:06:47,630 --> 00:06:51,800
there's<font color="#E5E5E5"> kind of two core binaries and</font>

181
00:06:50,540 --> 00:06:53,180
they've been sped<font color="#CCCCCC"> up a bit in later</font>

182
00:06:51,800 --> 00:06:54,770
versions<font color="#E5E5E5"> but conceptually it's still</font>

183
00:06:53,180 --> 00:06:59,810
kind<font color="#CCCCCC"> of to</font><font color="#E5E5E5"> call binaries responsible</font>

184
00:06:54,770 --> 00:07:02,479
handling<font color="#CCCCCC"> means first one wind effects UK</font>

185
00:06:59,810 --> 00:07:05,690
<font color="#CCCCCC">miss has</font><font color="#E5E5E5"> about a thousand plus system</font>

186
00:07:02,480 --> 00:07:07,670
<font color="#E5E5E5">calls it supports it's got lots of very</font>

187
00:07:05,690 --> 00:07:09,650
complex functionality<font color="#CCCCCC"> it was also</font>

188
00:07:07,670 --> 00:07:12,560
written<font color="#E5E5E5"> about 90s which is famous for</font>

189
00:07:09,650 --> 00:07:15,200
<font color="#CCCCCC">having high security standards</font><font color="#E5E5E5"> and it's</font>

190
00:07:12,560 --> 00:07:20,000
doing all of this horrendous complex<font color="#E5E5E5"> GUI</font>

191
00:07:15,200 --> 00:07:21,409
programming<font color="#CCCCCC"> all in kernel mode it's</font>

192
00:07:20,000 --> 00:07:23,000
quite honest about how much money<font color="#CCCCCC"> issue</font>

193
00:07:21,410 --> 00:07:25,760
<font color="#CCCCCC">business this</font><font color="#E5E5E5"> is taken from a Microsoft</font>

194
00:07:23,000 --> 00:07:27,860
job posting<font color="#E5E5E5"> it's one of our</font><font color="#CCCCCC"> components</font>

195
00:07:25,760 --> 00:07:29,570
<font color="#CCCCCC">win fax UK dot says is the vector of</font><font color="#E5E5E5"> a</font>

196
00:07:27,860 --> 00:07:31,130
<font color="#CCCCCC">60%</font><font color="#E5E5E5"> or more</font><font color="#CCCCCC"> of all</font><font color="#E5E5E5"> kernel mode</font><font color="#CCCCCC"> Windows</font>

197
00:07:29,570 --> 00:07:32,870
exploits<font color="#CCCCCC"> and it's talking</font><font color="#E5E5E5"> to white</font>

198
00:07:31,130 --> 00:07:34,670
papers at blackhat every year so<font color="#CCCCCC"> we're</font>

199
00:07:32,870 --> 00:07:35,810
at the cutting<font color="#E5E5E5"> edge of fixing</font>

200
00:07:34,670 --> 00:07:39,140
vulnerabilities as well as developing

201
00:07:35,810 --> 00:07:41,720
mitigations so I've truly embraced<font color="#E5E5E5"> the</font>

202
00:07:39,140 --> 00:07:45,260
leading position<font color="#E5E5E5"> in the car not exploit</font>

203
00:07:41,720 --> 00:07:47,420
marker<font color="#E5E5E5"> meanwhile into OS kernel this is</font>

204
00:07:45,260 --> 00:07:49,310
the actual kind<font color="#CCCCCC"> of kernel executive so</font>

205
00:07:47,420 --> 00:07:50,720
<font color="#CCCCCC">where as win first UK manages with GUI</font>

206
00:07:49,310 --> 00:07:52,490
and<font color="#E5E5E5"> stuff like that</font><font color="#CCCCCC"> into your eyes</font>

207
00:07:50,720 --> 00:07:54,680
<font color="#CCCCCC">kernel provides</font><font color="#E5E5E5"> kind of the core kernel</font>

208
00:07:52,490 --> 00:07:57,230
functionality so this is<font color="#CCCCCC"> processors</font>

209
00:07:54,680 --> 00:08:01,400
<font color="#E5E5E5">Fred's virtual memory and everything you</font>

210
00:07:57,230 --> 00:08:03,650
need<font color="#E5E5E5"> for the system</font><font color="#CCCCCC"> to actually run so</font>

211
00:08:01,400 --> 00:08:05,719
it says a much lower system<font color="#E5E5E5"> call count</font>

212
00:08:03,650 --> 00:08:07,130
<font color="#E5E5E5">than</font><font color="#CCCCCC"> win fact UK is also not doing</font>

213
00:08:05,720 --> 00:08:10,280
<font color="#E5E5E5">things like graphics processing which</font>

214
00:08:07,130 --> 00:08:11,840
are finicky<font color="#CCCCCC"> and complex</font><font color="#E5E5E5"> so kind of as a</font>

215
00:08:10,280 --> 00:08:13,669
consequence there's been a lot less

216
00:08:11,840 --> 00:08:16,190
public vulnerabilities in this<font color="#E5E5E5"> and</font>

217
00:08:13,670 --> 00:08:20,690
however<font color="#CCCCCC"> it's still a</font><font color="#E5E5E5"> huge</font><font color="#CCCCCC"> codebase</font><font color="#E5E5E5"> so</font>

218
00:08:16,190 --> 00:08:24,800
there's still stuff<font color="#E5E5E5"> to be found drivers</font>

219
00:08:20,690 --> 00:08:26,450
is used by<font color="#E5E5E5"> windows to provide an</font>

220
00:08:24,800 --> 00:08:28,370
interface<font color="#CCCCCC"> for the user to things like</font>

221
00:08:26,450 --> 00:08:30,229
<font color="#E5E5E5">hardware</font><font color="#CCCCCC"> that also</font><font color="#E5E5E5"> be used by firmware</font>

222
00:08:28,370 --> 00:08:32,780
<font color="#E5E5E5">updates to update things like BIOS unify</font>

223
00:08:30,230 --> 00:08:33,919
firmware<font color="#E5E5E5"> antivirus will use them to do</font>

224
00:08:32,780 --> 00:08:36,409
<font color="#CCCCCC">things like stop you kidding they use</font>

225
00:08:33,919 --> 00:08:39,199
that process<font color="#CCCCCC"> or to pass executables</font>

226
00:08:36,409 --> 00:08:40,848
because why not<font color="#CCCCCC"> and also</font><font color="#E5E5E5"> we use I say</font>

227
00:08:39,200 --> 00:08:42,530
<font color="#CCCCCC">anti-cheat to make sure we get</font><font color="#E5E5E5"> our</font>

228
00:08:40,849 --> 00:08:45,210
hooking and use that process<font color="#CCCCCC"> and making</font>

229
00:08:42,530 --> 00:08:47,500
<font color="#E5E5E5">sure you always often from set health</font>

230
00:08:45,210 --> 00:08:50,050
so there's many<font color="#E5E5E5"> ways to talk drivers</font>

231
00:08:47,500 --> 00:08:53,200
<font color="#CCCCCC">most of the folks have been</font><font color="#E5E5E5"> into core</font>

232
00:08:50,050 --> 00:08:55,000
components the first<font color="#CCCCCC"> one of these input</font>

233
00:08:53,200 --> 00:08:57,010
output controls this<font color="#CCCCCC"> is a</font><font color="#E5E5E5"> faithfully way</font>

234
00:08:55,000 --> 00:08:58,930
<font color="#CCCCCC">you can send a message to</font><font color="#E5E5E5"> a driver and</font>

235
00:08:57,010 --> 00:09:00,640
it will run a<font color="#E5E5E5"> function on that you kind</font>

236
00:08:58,930 --> 00:09:02,319
<font color="#E5E5E5">of send it a number which identifies</font>

237
00:09:00,640 --> 00:09:04,390
which I or controller it is<font color="#E5E5E5"> you</font><font color="#CCCCCC"> also</font>

238
00:09:02,320 --> 00:09:06,910
send a pointer to<font color="#CCCCCC"> an input buffer</font><font color="#E5E5E5"> how</font>

239
00:09:04,390 --> 00:09:08,920
long that lover is how long the buffer

240
00:09:06,910 --> 00:09:12,339
is and then it will go off and do things

241
00:09:08,920 --> 00:09:13,870
<font color="#E5E5E5">on that there's also shared memory you</font>

242
00:09:12,340 --> 00:09:15,850
can allocate<font color="#E5E5E5"> which is where you'll have</font>

243
00:09:13,870 --> 00:09:17,530
a shared memory region that users

244
00:09:15,850 --> 00:09:19,240
basically<font color="#CCCCCC"> write to the driver can read</font>

245
00:09:17,530 --> 00:09:20,800
<font color="#E5E5E5">from directly and this kind of allows</font>

246
00:09:19,240 --> 00:09:22,510
you to do faster data transfer<font color="#E5E5E5"> between</font>

247
00:09:20,800 --> 00:09:24,670
the<font color="#E5E5E5"> two and especially if you're doing</font>

248
00:09:22,510 --> 00:09:28,930
say you'll say GPU<font color="#E5E5E5"> drive or awesome your</font>

249
00:09:24,670 --> 00:09:32,860
<font color="#CCCCCC">map and</font><font color="#E5E5E5"> sadly focally drivers do</font>

250
00:09:28,930 --> 00:09:34,510
terrible terrible things so in this

251
00:09:32,860 --> 00:09:37,030
picture<font color="#E5E5E5"> this is a collection of four</font>

252
00:09:34,510 --> 00:09:40,090
drivers<font color="#E5E5E5"> and kind of found publicly</font>

253
00:09:37,030 --> 00:09:41,439
described and<font color="#CCCCCC"> quick reverse so you don't</font>

254
00:09:40,090 --> 00:09:42,670
really each one was going<font color="#E5E5E5"> on here the</font>

255
00:09:41,440 --> 00:09:44,950
key thing is<font color="#CCCCCC"> that</font><font color="#E5E5E5"> the box is highlighted</font>

256
00:09:42,670 --> 00:09:47,319
<font color="#E5E5E5">in green other key things</font><font color="#CCCCCC"> - driver knees</font>

257
00:09:44,950 --> 00:09:48,730
just so<font color="#E5E5E5"> kind of</font><font color="#CCCCCC"> exist</font><font color="#E5E5E5"> the boxes and red</font>

258
00:09:47,320 --> 00:09:51,490
<font color="#E5E5E5">are</font><font color="#CCCCCC"> things</font><font color="#E5E5E5"> which completely break the</font>

259
00:09:48,730 --> 00:09:54,700
<font color="#E5E5E5">windows security model and quite kind</font>

260
00:09:51,490 --> 00:09:56,350
leave us<font color="#CCCCCC"> also</font><font color="#E5E5E5"> sign copies of these</font><font color="#CCCCCC"> MSI</font>

261
00:09:54,700 --> 00:09:58,420
<font color="#E5E5E5">I've signed free of them ASIS have</font>

262
00:09:56,350 --> 00:09:59,470
another one signed and<font color="#CCCCCC"> fertilized you</font>

263
00:09:58,420 --> 00:10:00,910
always loads on a system they'll do

264
00:09:59,470 --> 00:10:06,310
<font color="#E5E5E5">things like let you read</font><font color="#CCCCCC"> write any</font>

265
00:10:00,910 --> 00:10:07,959
memory which is<font color="#E5E5E5"> nice and handy fun</font>

266
00:10:06,310 --> 00:10:09,310
passing<font color="#CCCCCC"> and interesting here is that</font>

267
00:10:07,960 --> 00:10:11,470
<font color="#E5E5E5">sense out fonts are actually mentally</font>

268
00:10:09,310 --> 00:10:13,180
complex they'll include things like

269
00:10:11,470 --> 00:10:14,710
small instruction<font color="#E5E5E5"> sets used to describe</font>

270
00:10:13,180 --> 00:10:17,859
<font color="#E5E5E5">how</font><font color="#CCCCCC"> to</font><font color="#E5E5E5"> render the font and stuff like</font>

271
00:10:14,710 --> 00:10:20,110
that these again<font color="#E5E5E5"> there have been a</font><font color="#CCCCCC"> 150</font>

272
00:10:17,860 --> 00:10:22,240
<font color="#CCCCCC">km an eclair</font><font color="#E5E5E5"> and traditionally</font><font color="#CCCCCC"> in</font>

273
00:10:20,110 --> 00:10:24,460
Windows they've mostly been done in

274
00:10:22,240 --> 00:10:26,950
kernel mode<font color="#E5E5E5"> and so you're doing</font><font color="#CCCCCC"> this</font>

275
00:10:24,460 --> 00:10:28,330
kind<font color="#CCCCCC"> of complex graphic</font><font color="#E5E5E5"> type operations</font>

276
00:10:26,950 --> 00:10:29,950
and running<font color="#CCCCCC"> this instruction set</font><font color="#E5E5E5"> that</font>

277
00:10:28,330 --> 00:10:33,760
<font color="#CCCCCC">you were</font><font color="#E5E5E5"> doing it all in kernel mode</font>

278
00:10:29,950 --> 00:10:35,470
lots of privileges<font color="#E5E5E5"> so I</font><font color="#CCCCCC"> talked a bit now</font>

279
00:10:33,760 --> 00:10:38,110
about bug hunting and how people kind<font color="#E5E5E5"> of</font>

280
00:10:35,470 --> 00:10:40,180
look for bugs<font color="#E5E5E5"> in</font><font color="#CCCCCC"> Cal code come how we do</font>

281
00:10:38,110 --> 00:10:42,730
it

282
00:10:40,180 --> 00:10:44,140
first off kernel fuzzy and<font color="#E5E5E5"> misses</font>

283
00:10:42,730 --> 00:10:45,790
<font color="#E5E5E5">something MWA loves too much we've done</font>

284
00:10:44,140 --> 00:10:48,130
it three times<font color="#E5E5E5"> on three different</font>

285
00:10:45,790 --> 00:10:51,880
<font color="#CCCCCC">countries and why did it slightly</font>

286
00:10:48,130 --> 00:10:53,110
different each time<font color="#E5E5E5"> and so we've also I</font>

287
00:10:51,880 --> 00:10:55,870
<font color="#E5E5E5">can source one of these we can</font><font color="#CCCCCC"> your play</font>

288
00:10:53,110 --> 00:10:58,540
off and these are all kind<font color="#E5E5E5"> of generally</font>

289
00:10:55,870 --> 00:11:00,070
focused on fuzzing<font color="#E5E5E5"> win32</font><font color="#CCCCCC"> kay</font>

290
00:10:58,540 --> 00:11:01,510
and because it's<font color="#CCCCCC"> looking through it's an</font>

291
00:11:00,070 --> 00:11:04,750
easy target<font color="#CCCCCC"> it's kind of</font><font color="#E5E5E5"> where</font><font color="#CCCCCC"> all the</font>

292
00:11:01,510 --> 00:11:08,650
bugs live so what does<font color="#E5E5E5"> Colonel fussing</font>

293
00:11:04,750 --> 00:11:10,840
actually entail so generally you'll have

294
00:11:08,650 --> 00:11:12,579
reverse-engineered<font color="#CCCCCC"> a bunch of system</font>

295
00:11:10,840 --> 00:11:14,230
calls library calls<font color="#CCCCCC"> what how they work</font>

296
00:11:12,580 --> 00:11:17,320
<font color="#E5E5E5">what arguments they take what they</font>

297
00:11:14,230 --> 00:11:19,270
return so you'll generate<font color="#CCCCCC"> force values</font>

298
00:11:17,320 --> 00:11:20,890
for the basic soaps are like if it takes

299
00:11:19,270 --> 00:11:24,010
an<font color="#E5E5E5"> integer</font><font color="#CCCCCC"> you will generate a random</font>

300
00:11:20,890 --> 00:11:28,090
<font color="#E5E5E5">number that is 32 bits it takes</font>

301
00:11:24,010 --> 00:11:31,000
character random 8-bit value<font color="#CCCCCC"> you then</font>

302
00:11:28,090 --> 00:11:32,650
have a database<font color="#E5E5E5"> of all handles you have</font>

303
00:11:31,000 --> 00:11:35,110
so in Windows a handle is just<font color="#E5E5E5"> kind of</font>

304
00:11:32,650 --> 00:11:36,370
an identifier<font color="#CCCCCC"> for an object to avoid</font>

305
00:11:35,110 --> 00:11:38,050
<font color="#CCCCCC">people passing around points and stuff</font>

306
00:11:36,370 --> 00:11:40,300
<font color="#CCCCCC">of that</font><font color="#E5E5E5"> because it's dirty it doesn't</font>

307
00:11:38,050 --> 00:11:41,920
like it and so all the handles<font color="#CCCCCC"> you get</font>

308
00:11:40,300 --> 00:11:43,120
back you'll save and then if you need

309
00:11:41,920 --> 00:11:45,790
<font color="#E5E5E5">them</font><font color="#CCCCCC"> for an</font><font color="#E5E5E5"> up cool you'll grab them</font>

310
00:11:43,120 --> 00:11:47,080
from your database<font color="#CCCCCC"> you'll log all the</font>

311
00:11:45,790 --> 00:11:49,959
<font color="#E5E5E5">items you've got and what function</font>

312
00:11:47,080 --> 00:11:51,250
you're<font color="#CCCCCC"> going to call execute it saves</font>

313
00:11:49,960 --> 00:11:53,860
anything it returns<font color="#E5E5E5"> if you haven't</font>

314
00:11:51,250 --> 00:11:55,120
crashed go back to one keep doing it

315
00:11:53,860 --> 00:11:57,400
till you do<font color="#CCCCCC"> crashing if you have crashed</font>

316
00:11:55,120 --> 00:12:02,710
the system dies when it pops back<font color="#E5E5E5"> up</font>

317
00:11:57,400 --> 00:12:05,140
save the debug dump and your log<font color="#E5E5E5"> so Nils</font>

318
00:12:02,710 --> 00:12:07,540
<font color="#E5E5E5">who I trusted a long project for Google</font>

319
00:12:05,140 --> 00:12:08,890
<font color="#E5E5E5">project zero doing this and there's some</font>

320
00:12:07,540 --> 00:12:10,810
extra stuff in there to do with managing

321
00:12:08,890 --> 00:12:12,880
it<font color="#CCCCCC"> and how he did automate some of</font><font color="#E5E5E5"> the</font>

322
00:12:10,810 --> 00:12:14,439
reversing stuff but basically<font color="#E5E5E5"> he found</font>

323
00:12:12,880 --> 00:12:20,830
all the bugs<font color="#E5E5E5"> and just went six months</font>

324
00:12:14,440 --> 00:12:23,170
<font color="#E5E5E5">beating the crap out of</font><font color="#CCCCCC"> win32</font><font color="#E5E5E5"> K dots s3</font>

325
00:12:20,830 --> 00:12:25,180
on code review not really that

326
00:12:23,170 --> 00:12:26,890
applicable to muscle code obviously

327
00:12:25,180 --> 00:12:29,620
<font color="#CCCCCC">everything</font><font color="#E5E5E5"> is</font><font color="#CCCCCC"> very proprietary we're not</font>

328
00:12:26,890 --> 00:12:31,540
giving out the source code etc<font color="#E5E5E5"> and there</font>

329
00:12:29,620 --> 00:12:34,090
are the odd exception<font color="#CCCCCC"> though</font><font color="#E5E5E5"> so this is</font>

330
00:12:31,540 --> 00:12:36,189
from<font color="#E5E5E5"> the fondant</font><font color="#CCCCCC"> Patil much</font><font color="#E5E5E5"> later it</font>

331
00:12:34,090 --> 00:12:39,520
turned out the actual bug was publicly

332
00:12:36,190 --> 00:12:42,400
viewable in the NT<font color="#E5E5E5"> for source code that</font>

333
00:12:39,520 --> 00:12:43,900
someone<font color="#CCCCCC"> had leaked on get</font><font color="#E5E5E5"> up and so you</font>

334
00:12:42,400 --> 00:12:46,030
could just<font color="#E5E5E5"> kind of actually do code</font>

335
00:12:43,900 --> 00:12:52,300
River there I find it via<font color="#E5E5E5"> leaked code</font>

336
00:12:46,030 --> 00:12:54,760
and so<font color="#E5E5E5"> reverse engineering doing a</font>

337
00:12:52,300 --> 00:12:55,839
sacral binary level<font color="#E5E5E5"> obviously the kernel</font>

338
00:12:54,760 --> 00:12:58,660
<font color="#E5E5E5">and the components you're looking at a</font>

339
00:12:55,840 --> 00:12:59,830
huge<font color="#E5E5E5"> and however</font><font color="#CCCCCC"> reverse-engineering</font>

340
00:12:58,660 --> 00:13:00,969
does help support the other<font color="#CCCCCC"> thing</font><font color="#E5E5E5"> so if</font>

341
00:12:59,830 --> 00:13:02,020
you want<font color="#E5E5E5"> to know what system calls the</font>

342
00:13:00,970 --> 00:13:03,610
<font color="#E5E5E5">first you can have to reverse engineer</font>

343
00:13:02,020 --> 00:13:05,040
them because<font color="#CCCCCC"> Markus doesn't document</font>

344
00:13:03,610 --> 00:13:07,210
them you know<font color="#E5E5E5"> what's up for yourself</font>

345
00:13:05,040 --> 00:13:09,530
there are<font color="#E5E5E5"> some things that</font><font color="#CCCCCC"> will</font><font color="#E5E5E5"> help you</font>

346
00:13:07,210 --> 00:13:10,760
<font color="#CCCCCC">so Windows does have</font>

347
00:13:09,530 --> 00:13:12,589
well it's called<font color="#E5E5E5"> a</font><font color="#CCCCCC"> symbol server</font><font color="#E5E5E5"> this</font>

348
00:13:10,760 --> 00:13:14,660
<font color="#E5E5E5">will do things like if you have a binary</font>

349
00:13:12,590 --> 00:13:16,250
<font color="#E5E5E5">it will be able to pull in</font><font color="#CCCCCC"> some of the</font>

350
00:13:14,660 --> 00:13:17,569
debug<font color="#E5E5E5"> data so you'll be able to get some</font>

351
00:13:16,250 --> 00:13:21,650
<font color="#CCCCCC">things</font><font color="#E5E5E5"> like function names maybe</font>

352
00:13:17,570 --> 00:13:23,330
argument type structures and<font color="#CCCCCC"> for some</font>

353
00:13:21,650 --> 00:13:24,740
binaries there a lot friendlier on the

354
00:13:23,330 --> 00:13:25,730
older versions<font color="#CCCCCC"> Windows like Windows 7</font>

355
00:13:24,740 --> 00:13:27,260
there's a lot more symbols available

356
00:13:25,730 --> 00:13:29,000
<font color="#E5E5E5">when you</font><font color="#CCCCCC"> up to Windows 10 there's a lot</font>

357
00:13:27,260 --> 00:13:31,250
less<font color="#CCCCCC"> which is why</font><font color="#E5E5E5"> quite often people</font>

358
00:13:29,000 --> 00:13:32,720
start by saying<font color="#E5E5E5"> something on Windows 7</font>

359
00:13:31,250 --> 00:13:35,810
<font color="#E5E5E5">then ported to Windows 10 with them</font>

360
00:13:32,720 --> 00:13:37,670
that's<font color="#E5E5E5"> public information there's also a</font>

361
00:13:35,810 --> 00:13:39,680
project<font color="#CCCCCC"> called react to us which is</font>

362
00:13:37,670 --> 00:13:41,780
being<font color="#CCCCCC"> led by</font><font color="#E5E5E5"> Alex</font><font color="#CCCCCC"> on</font><font color="#E5E5E5"> ask you for like</font><font color="#CCCCCC"> 10</font>

363
00:13:39,680 --> 00:13:43,760
years<font color="#CCCCCC"> he's basically spent most of his</font>

364
00:13:41,780 --> 00:13:45,020
<font color="#CCCCCC">life at</font><font color="#E5E5E5"> this point just reverse</font>

365
00:13:43,760 --> 00:13:47,360
engineering the Windows kernel and

366
00:13:45,020 --> 00:13:49,420
<font color="#E5E5E5">they're aiming to do any kind of Windows</font>

367
00:13:47,360 --> 00:13:51,350
<font color="#CCCCCC">or like</font><font color="#E5E5E5"> environment you can live in and</font>

368
00:13:49,420 --> 00:13:52,729
<font color="#E5E5E5">so if you're looking</font><font color="#CCCCCC"> at by the kernel</font>

369
00:13:51,350 --> 00:13:54,020
there's a good chance they've reversed a

370
00:13:52,730 --> 00:13:55,400
fair chunk of it so you can<font color="#CCCCCC"> kind of go</font>

371
00:13:54,020 --> 00:13:57,050
look at what they think<font color="#E5E5E5"> that code looks</font>

372
00:13:55,400 --> 00:14:01,459
<font color="#CCCCCC">like in C which is a lot more</font>

373
00:13:57,050 --> 00:14:03,439
<font color="#CCCCCC">approachable</font><font color="#E5E5E5"> than unknown binary but</font>

374
00:14:01,460 --> 00:14:05,300
obviously roasting<font color="#E5E5E5"> does have some value</font>

375
00:14:03,440 --> 00:14:06,770
so if it's now<font color="#E5E5E5"> really targeted</font><font color="#CCCCCC"> to say if</font>

376
00:14:05,300 --> 00:14:07,790
you think<font color="#CCCCCC"> there's a problem</font><font color="#E5E5E5"> area or</font>

377
00:14:06,770 --> 00:14:09,260
<font color="#E5E5E5">something in particular you think is</font>

378
00:14:07,790 --> 00:14:10,550
dodgy you can kind of go in have a look

379
00:14:09,260 --> 00:14:13,400
<font color="#E5E5E5">at a binary see if you can work out</font>

380
00:14:10,550 --> 00:14:14,719
what's going on<font color="#E5E5E5"> and to be honest the</font>

381
00:14:13,400 --> 00:14:16,280
kernels massive you're still finding

382
00:14:14,720 --> 00:14:18,260
<font color="#E5E5E5">bugs by fuzzing which you can just</font><font color="#CCCCCC"> turn</font>

383
00:14:16,280 --> 00:14:24,290
on and sit back why bother doing all the

384
00:14:18,260 --> 00:14:25,610
manual work<font color="#CCCCCC"> third-party drivers like the</font>

385
00:14:24,290 --> 00:14:26,449
ones I<font color="#CCCCCC"> showed earlier</font><font color="#E5E5E5"> have been</font><font color="#CCCCCC"> a</font><font color="#E5E5E5"> good</font>

386
00:14:25,610 --> 00:14:28,790
source of bugs<font color="#CCCCCC"> from a version</font>

387
00:14:26,450 --> 00:14:30,589
engineering<font color="#E5E5E5"> way and mostly because they</font>

388
00:14:28,790 --> 00:14:32,810
tend to be<font color="#CCCCCC"> quite</font><font color="#E5E5E5"> small the code quality</font>

389
00:14:30,589 --> 00:14:35,089
is very<font color="#E5E5E5"> low and they'll do things like</font>

390
00:14:32,810 --> 00:14:37,670
<font color="#CCCCCC">math.random physical memory into</font><font color="#E5E5E5"> users</font>

391
00:14:35,089 --> 00:14:40,010
base<font color="#CCCCCC"> and it just generates helper and</font>

392
00:14:37,670 --> 00:14:43,069
there's a few tools about to help<font color="#E5E5E5"> speed</font>

393
00:14:40,010 --> 00:14:44,720
up reversing drivers<font color="#CCCCCC"> I released one NCC</font>

394
00:14:43,070 --> 00:14:46,490
released one like<font color="#CCCCCC"> four</font><font color="#E5E5E5"> weeks later and</font>

395
00:14:44,720 --> 00:14:51,980
there's<font color="#CCCCCC"> probably works better that I</font>

396
00:14:46,490 --> 00:14:53,839
released my first<font color="#E5E5E5"> so again you can also</font>

397
00:14:51,980 --> 00:14:55,700
post drivers so once you've worked<font color="#E5E5E5"> out</font>

398
00:14:53,839 --> 00:14:57,470
what<font color="#E5E5E5"> the</font><font color="#CCCCCC"> i/o</font><font color="#E5E5E5"> control codes discussed</font>

399
00:14:55,700 --> 00:14:59,600
before are<font color="#E5E5E5"> you can plug them into a</font>

400
00:14:57,470 --> 00:15:01,460
<font color="#E5E5E5">buzzer and let that do kind of random</font>

401
00:14:59,600 --> 00:15:04,640
<font color="#CCCCCC">fuzzing on them Amma's cool tool I think</font>

402
00:15:01,460 --> 00:15:06,650
partners did<font color="#E5E5E5"> which kind of fuzz these</font>

403
00:15:04,640 --> 00:15:08,060
<font color="#E5E5E5">dumbly they does a lot of patterns that</font>

404
00:15:06,650 --> 00:15:09,079
<font color="#E5E5E5">are commenting drivers so a lot of</font>

405
00:15:08,060 --> 00:15:10,760
<font color="#E5E5E5">things like when using the input buffer</font>

406
00:15:09,080 --> 00:15:13,250
they'll put the<font color="#E5E5E5"> buffer size in the first</font>

407
00:15:10,760 --> 00:15:15,290
<font color="#E5E5E5">four bytes and things like</font><font color="#CCCCCC"> that</font><font color="#E5E5E5"> so it's</font>

408
00:15:13,250 --> 00:15:16,460
kind of a slightly more aware<font color="#E5E5E5"> other and</font>

409
00:15:15,290 --> 00:15:19,240
it also does cool stuff like<font color="#E5E5E5"> manage</font>

410
00:15:16,460 --> 00:15:19,240
<font color="#CCCCCC">usual crashes for you</font>

411
00:15:19,920 --> 00:15:25,120
font funding again<font color="#CCCCCC"> and Giroux</font><font color="#E5E5E5"> from</font>

412
00:15:23,949 --> 00:15:27,219
project zero is pretty much been

413
00:15:25,120 --> 00:15:28,899
dominating<font color="#CCCCCC"> lists because they have lots</font>

414
00:15:27,220 --> 00:15:31,779
of computers<font color="#E5E5E5"> and he spent a long time</font>

415
00:15:28,899 --> 00:15:33,250
reversing<font color="#E5E5E5"> this also things like the font</font>

416
00:15:31,779 --> 00:15:34,930
specification is publicly<font color="#CCCCCC"> open so you</font>

417
00:15:33,250 --> 00:15:36,459
can do very targeted fuzzing<font color="#E5E5E5"> it's</font><font color="#CCCCCC"> you're</font>

418
00:15:34,930 --> 00:15:37,810
<font color="#CCCCCC">just</font><font color="#E5E5E5"> generating random files you're</font>

419
00:15:36,459 --> 00:15:39,430
doing it within spec you're looking at

420
00:15:37,810 --> 00:15:41,800
edge cases and zooming in on

421
00:15:39,430 --> 00:15:43,209
particularly<font color="#E5E5E5"> interesting parts and he</font>

422
00:15:41,800 --> 00:15:44,979
has just<font color="#CCCCCC"> been finding dozens and dozens</font>

423
00:15:43,209 --> 00:15:51,250
box a years kind<font color="#E5E5E5"> of doing this as kind</font>

424
00:15:44,980 --> 00:15:53,170
<font color="#E5E5E5">of a part-time multi-year effort kind</font><font color="#CCCCCC"> of</font>

425
00:15:51,250 --> 00:15:56,680
a last way you can do this is you<font color="#E5E5E5"> can do</font>

426
00:15:53,170 --> 00:15:58,779
patch<font color="#CCCCCC"> tipping so Windows patches Tuesday</font>

427
00:15:56,680 --> 00:16:00,430
<font color="#E5E5E5">this used to be a lot bigger back when</font>

428
00:15:58,779 --> 00:16:02,470
like each<font color="#E5E5E5"> security update was an</font>

429
00:16:00,430 --> 00:16:03,910
individual update so you<font color="#E5E5E5"> could have to</font>

430
00:16:02,470 --> 00:16:05,470
search<font color="#CCCCCC"> through</font><font color="#E5E5E5"> a lot less code but</font>

431
00:16:03,910 --> 00:16:07,569
basically you<font color="#CCCCCC"> can take two binaries get</font>

432
00:16:05,470 --> 00:16:09,250
a binary different tool see what

433
00:16:07,570 --> 00:16:11,769
differences<font color="#E5E5E5"> go through look</font><font color="#CCCCCC"> for security</font>

434
00:16:09,250 --> 00:16:13,300
relevant changes sometimes<font color="#E5E5E5"> this is easy</font>

435
00:16:11,769 --> 00:16:16,690
sometimes<font color="#E5E5E5"> it's just not even worth</font>

436
00:16:13,300 --> 00:16:18,699
<font color="#E5E5E5">trying and so for</font><font color="#CCCCCC"> example we can get</font>

437
00:16:16,690 --> 00:16:20,440
some hints<font color="#CCCCCC"> so this is</font><font color="#E5E5E5"> a</font><font color="#CCCCCC"> CV which was</font>

438
00:16:18,699 --> 00:16:23,050
<font color="#E5E5E5">exploited publicly a couple years ago</font>

439
00:16:20,440 --> 00:16:24,339
<font color="#CCCCCC">and this</font><font color="#E5E5E5"> one wasn't</font><font color="#CCCCCC"> so y'all find</font><font color="#E5E5E5"> out</font>

440
00:16:23,050 --> 00:16:27,250
<font color="#E5E5E5">because it was quite a small</font><font color="#CCCCCC"> update and</font>

441
00:16:24,339 --> 00:16:28,810
<font color="#E5E5E5">the kind of cool 22 there is just the</font>

442
00:16:27,250 --> 00:16:30,310
only<font color="#E5E5E5"> change to</font><font color="#CCCCCC"> this whole function</font><font color="#E5E5E5"> was</font>

443
00:16:28,810 --> 00:16:32,319
they started validating<font color="#E5E5E5"> this pointer</font>

444
00:16:30,310 --> 00:16:33,609
they were<font color="#CCCCCC"> previously using and it turns</font>

445
00:16:32,319 --> 00:16:36,790
out the issue was at<font color="#E5E5E5"> that</font><font color="#CCCCCC"> point</font><font color="#E5E5E5"> it could</font>

446
00:16:33,610 --> 00:16:37,959
<font color="#E5E5E5">be like - free and then by placing</font><font color="#CCCCCC"> stuff</font>

447
00:16:36,790 --> 00:16:42,430
in the right<font color="#E5E5E5"> place in the</font><font color="#CCCCCC"> memory you</font>

448
00:16:37,959 --> 00:16:44,199
could<font color="#E5E5E5"> code execution so move on now</font><font color="#CCCCCC"> to</font>

449
00:16:42,430 --> 00:16:45,880
talk<font color="#E5E5E5"> about negations and how</font><font color="#CCCCCC"> its</font><font color="#E5E5E5"> kind</font><font color="#CCCCCC"> of</font>

450
00:16:44,199 --> 00:16:48,519
evolved however<font color="#E5E5E5"> the years windows has</font>

451
00:16:45,880 --> 00:16:50,260
try to make it harder<font color="#CCCCCC"> for people to put</font>

452
00:16:48,519 --> 00:16:55,839
together<font color="#CCCCCC"> can I sports and be able</font><font color="#E5E5E5"> to own</font>

453
00:16:50,260 --> 00:17:02,380
the system so I'm going to steal<font color="#CCCCCC"> a pen</font>

454
00:16:55,839 --> 00:17:06,069
hooks taxonomy<font color="#CCCCCC"> for</font><font color="#E5E5E5"> export negations so</font>

455
00:17:02,380 --> 00:17:07,630
type 0 is a<font color="#CCCCCC"> C programming error that can</font>

456
00:17:06,069 --> 00:17:09,339
<font color="#E5E5E5">be exploded it's no longer exploitable</font>

457
00:17:07,630 --> 00:17:12,339
<font color="#E5E5E5">because you've added this medication it</font>

458
00:17:09,339 --> 00:17:14,980
just stops that all together so<font color="#CCCCCC"> i1 is a</font>

459
00:17:12,339 --> 00:17:16,629
weak immigration<font color="#E5E5E5"> this is where there's a</font>

460
00:17:14,980 --> 00:17:18,339
particular<font color="#E5E5E5"> technique</font><font color="#CCCCCC"> attackers</font><font color="#E5E5E5"> are</font><font color="#CCCCCC"> using</font>

461
00:17:16,630 --> 00:17:21,730
and you<font color="#E5E5E5"> put in extra code that just</font>

462
00:17:18,339 --> 00:17:23,678
stops that singular technique<font color="#CCCCCC"> type 2 is</font>

463
00:17:21,730 --> 00:17:25,329
say you remove the whole feature<font color="#E5E5E5"> so for</font>

464
00:17:23,679 --> 00:17:26,589
example when Microsoft<font color="#CCCCCC"> launched</font><font color="#E5E5E5"> edge</font>

465
00:17:25,329 --> 00:17:27,369
they remove things like vbscript and

466
00:17:26,589 --> 00:17:28,690
jscript

467
00:17:27,369 --> 00:17:29,830
because no one was<font color="#CCCCCC"> using for anything</font>

468
00:17:28,690 --> 00:17:31,760
legit so that they were<font color="#E5E5E5"> only being used</font>

469
00:17:29,830 --> 00:17:34,070
<font color="#E5E5E5">to hack stuff</font>

470
00:17:31,760 --> 00:17:35,390
so<font color="#E5E5E5"> previous a chain extension so in user</font>

471
00:17:34,070 --> 00:17:37,370
<font color="#CCCCCC">mode this would be</font><font color="#E5E5E5"> something like</font><font color="#CCCCCC"> a SLR</font>

472
00:17:35,390 --> 00:17:38,929
<font color="#E5E5E5">which means that if an attacker wants to</font>

473
00:17:37,370 --> 00:17:44,659
<font color="#CCCCCC">explode on a relative I need to have an</font>

474
00:17:38,929 --> 00:17:45,590
extra<font color="#E5E5E5"> book so the number of exploit</font>

475
00:17:44,660 --> 00:17:48,470
mitigations<font color="#E5E5E5"> windows has been</font>

476
00:17:45,590 --> 00:17:49,610
ever-increasing year on year on year<font color="#E5E5E5"> I'm</font>

477
00:17:48,470 --> 00:17:50,960
only going to<font color="#E5E5E5"> cover</font><font color="#CCCCCC"> a few of</font><font color="#E5E5E5"> the key</font>

478
00:17:49,610 --> 00:17:54,169
interesting ones ones that make life

479
00:17:50,960 --> 00:17:56,929
hard<font color="#CCCCCC"> for people doing this Windows 10 is</font>

480
00:17:54,170 --> 00:17:58,340
picking these up very<font color="#E5E5E5"> rapidly</font><font color="#CCCCCC"> and kind</font>

481
00:17:56,929 --> 00:18:00,320
<font color="#CCCCCC">of every time we do a</font><font color="#E5E5E5"> major release</font>

482
00:17:58,340 --> 00:18:02,299
they'll have to free for all kind of

483
00:18:00,320 --> 00:18:06,260
changes which makes<font color="#E5E5E5"> life harder ranging</font>

484
00:18:02,299 --> 00:18:09,110
from kind<font color="#E5E5E5"> of</font><font color="#CCCCCC"> forms of</font><font color="#E5E5E5"> the types so once</font>

485
00:18:06,260 --> 00:18:14,210
upon<font color="#CCCCCC"> a time back in</font><font color="#E5E5E5"> the day and XP Vista</font>

486
00:18:09,110 --> 00:18:17,209
7<font color="#E5E5E5"> Windows 7 32 bit and kernel memory has</font>

487
00:18:14,210 --> 00:18:20,179
no excuse so you mostly<font color="#CCCCCC"> has no</font><font color="#E5E5E5"> execute</font>

488
00:18:17,210 --> 00:18:22,130
and so you can't<font color="#E5E5E5"> just put</font><font color="#CCCCCC"> shell code in</font>

489
00:18:20,179 --> 00:18:25,100
there<font color="#E5E5E5"> and jump to it however there was</font>

490
00:18:22,130 --> 00:18:27,080
nothing stopping you<font color="#E5E5E5"> as a user allocates</font>

491
00:18:25,100 --> 00:18:28,879
Michelle code making<font color="#E5E5E5"> it executable and</font>

492
00:18:27,080 --> 00:18:30,320
then once you use kernel it just points

493
00:18:28,880 --> 00:18:33,650
<font color="#CCCCCC">it back at where your shell code</font><font color="#E5E5E5"> is in</font>

494
00:18:30,320 --> 00:18:35,870
user mode<font color="#E5E5E5"> and running it back and back</font>

495
00:18:33,650 --> 00:18:39,080
in the day if<font color="#E5E5E5"> you could control</font><font color="#CCCCCC"> hydro</font>

496
00:18:35,870 --> 00:18:40,909
<font color="#E5E5E5">flow so over</font><font color="#CCCCCC"> ie</font><font color="#E5E5E5"> I pee somewhere on your</font>

497
00:18:39,080 --> 00:18:42,470
<font color="#E5E5E5">back your shell code if you've got a</font>

498
00:18:40,910 --> 00:18:44,780
<font color="#E5E5E5">right condition where you can say</font>

499
00:18:42,470 --> 00:18:46,640
control what value you can write to any

500
00:18:44,780 --> 00:18:48,620
location<font color="#CCCCCC"> in memory do look for something</font>

501
00:18:46,640 --> 00:18:50,990
like<font color="#CCCCCC"> a function table update one of the</font>

502
00:18:48,620 --> 00:18:52,280
function pointers cause the function to

503
00:18:50,990 --> 00:18:54,290
be<font color="#E5E5E5"> called your show hoodie at run is</font>

504
00:18:52,280 --> 00:18:55,790
dead and then if<font color="#E5E5E5"> you get you'll replace</font>

505
00:18:54,290 --> 00:19:01,250
the afterwards to avoid blue screaming

506
00:18:55,790 --> 00:19:03,290
later and so<font color="#E5E5E5"> Intel decided this was</font>

507
00:19:01,250 --> 00:19:06,970
probably<font color="#E5E5E5"> not a good thing</font><font color="#CCCCCC"> and</font><font color="#E5E5E5"> possibly</font>

508
00:19:03,290 --> 00:19:09,230
with<font color="#E5E5E5"> some</font><font color="#CCCCCC"> input from of people imagined</font>

509
00:19:06,970 --> 00:19:12,919
so introduce what is<font color="#CCCCCC"> called supervisor</font>

510
00:19:09,230 --> 00:19:15,140
mode execution<font color="#E5E5E5"> revenge ring in about</font>

511
00:19:12,919 --> 00:19:16,520
<font color="#CCCCCC">2012</font><font color="#E5E5E5"> and then at the</font><font color="#CCCCCC"> end</font><font color="#E5E5E5"> of the year</font>

512
00:19:15,140 --> 00:19:19,160
when Windows 8 was first released this

513
00:19:16,520 --> 00:19:20,720
already<font color="#E5E5E5"> had support baked in basically</font>

514
00:19:19,160 --> 00:19:22,940
if you attempt<font color="#CCCCCC"> to do the attack I just</font>

515
00:19:20,720 --> 00:19:25,669
said the system<font color="#E5E5E5"> or blue screen</font><font color="#CCCCCC"> and for a</font>

516
00:19:22,940 --> 00:19:30,010
<font color="#E5E5E5">fault and</font><font color="#CCCCCC"> died so now you have to work a</font>

517
00:19:25,669 --> 00:19:32,809
<font color="#E5E5E5">bit harder so there are ways you can</font>

518
00:19:30,010 --> 00:19:34,460
bypass this so instead<font color="#CCCCCC"> of</font><font color="#E5E5E5"> relying on</font>

519
00:19:32,809 --> 00:19:36,470
getting codecs<font color="#E5E5E5"> you in a system you can</font>

520
00:19:34,460 --> 00:19:38,900
<font color="#CCCCCC">do things like</font><font color="#E5E5E5"> what if I use tokens and</font>

521
00:19:36,470 --> 00:19:42,140
<font color="#CCCCCC">sake before without kind of hijacking</font>

522
00:19:38,900 --> 00:19:43,160
control flow<font color="#CCCCCC"> we</font><font color="#E5E5E5"> kind of generally steer</font>

523
00:19:42,140 --> 00:19:44,310
the thing depending<font color="#E5E5E5"> on what is right</font><font color="#CCCCCC"> to</font>

524
00:19:43,160 --> 00:19:45,480
steal

525
00:19:44,310 --> 00:19:46,500
also do things like just pull<font color="#E5E5E5"> out their</font>

526
00:19:45,480 --> 00:19:49,740
<font color="#E5E5E5">locker keys if that's what you're</font>

527
00:19:46,500 --> 00:19:51,450
interested in there<font color="#E5E5E5"> are some bypasses so</font>

528
00:19:49,740 --> 00:19:53,280
back<font color="#CCCCCC"> MIDI cues returning reprogramming</font>

529
00:19:51,450 --> 00:19:54,480
<font color="#E5E5E5">I'm going with the devil there is but</font>

530
00:19:53,280 --> 00:19:55,950
<font color="#E5E5E5">basically if you reuse code that's</font>

531
00:19:54,480 --> 00:19:57,600
already<font color="#E5E5E5"> there</font><font color="#CCCCCC"> so you're just reusing</font>

532
00:19:55,950 --> 00:20:00,330
<font color="#E5E5E5">bits code that's already in the kernel</font>

533
00:19:57,600 --> 00:20:01,469
<font color="#E5E5E5">and there was</font><font color="#CCCCCC"> originally in all of those</font>

534
00:20:00,330 --> 00:20:03,030
windows that was kind of<font color="#E5E5E5"> a gadget in</font>

535
00:20:01,470 --> 00:20:06,000
there which was<font color="#E5E5E5"> just turn s map off so</font>

536
00:20:03,030 --> 00:20:07,320
you'd jump to that run that code go<font color="#CCCCCC"> back</font>

537
00:20:06,000 --> 00:20:09,360
to yours<font color="#E5E5E5"> and then execute your own shell</font>

538
00:20:07,320 --> 00:20:11,850
<font color="#E5E5E5">code and</font><font color="#CCCCCC"> users</font><font color="#E5E5E5"> face again this is</font>

539
00:20:09,360 --> 00:20:12,959
getting a<font color="#E5E5E5"> lot harder</font><font color="#CCCCCC"> now and so much</font>

540
00:20:11,850 --> 00:20:15,000
left<font color="#E5E5E5"> need</font><font color="#CCCCCC"> to use control flow guard</font>

541
00:20:12,960 --> 00:20:16,530
which makes it harder but it's a depth

542
00:20:15,000 --> 00:20:20,670
there because that's kind of a<font color="#E5E5E5"> whole</font>

543
00:20:16,530 --> 00:20:21,930
talk<font color="#CCCCCC"> in its own</font><font color="#E5E5E5"> alternatively you can</font>

544
00:20:20,670 --> 00:20:25,440
just<font color="#CCCCCC"> find a drive a</font><font color="#E5E5E5"> little turn off for</font>

545
00:20:21,930 --> 00:20:29,130
<font color="#E5E5E5">you and not bother and</font><font color="#CCCCCC"> just was</font><font color="#E5E5E5"> Capcom's</font>

546
00:20:25,440 --> 00:20:31,170
<font color="#CCCCCC">anti-cheat and</font><font color="#E5E5E5"> so these are kind</font><font color="#CCCCCC"> of</font>

547
00:20:29,130 --> 00:20:33,420
reverse engineer values and<font color="#E5E5E5"> but</font>

548
00:20:31,170 --> 00:20:35,220
<font color="#CCCCCC">effective leave a logic flow in the</font><font color="#E5E5E5"> only</font>

549
00:20:33,420 --> 00:20:36,660
<font color="#E5E5E5">thing this driver did was it disabled</font>

550
00:20:35,220 --> 00:20:38,520
this protection<font color="#CCCCCC"> execute</font><font color="#E5E5E5"> your show</font>

551
00:20:36,660 --> 00:20:41,430
<font color="#E5E5E5">execute the code you pointed it to and</font>

552
00:20:38,520 --> 00:20:43,500
<font color="#E5E5E5">then turned it back on so this is really</font>

553
00:20:41,430 --> 00:20:45,630
just code<font color="#E5E5E5"> execution a system as a</font>

554
00:20:43,500 --> 00:20:48,410
service and shockingly people weren't

555
00:20:45,630 --> 00:20:48,410
<font color="#E5E5E5">too happy about that</font>

556
00:20:48,680 --> 00:20:52,440
<font color="#CCCCCC">x1</font><font color="#E5E5E5"> kernel address space layout</font>

557
00:20:50,670 --> 00:20:54,690
randomization<font color="#CCCCCC"> you might heard about this</font>

558
00:20:52,440 --> 00:20:57,300
in<font color="#CCCCCC"> Soyuz merge with browsers</font><font color="#E5E5E5"> that kind</font>

559
00:20:54,690 --> 00:20:58,620
<font color="#E5E5E5">of software and this basically makes it</font>

560
00:20:57,300 --> 00:21:00,000
so<font color="#CCCCCC"> that things aren't loaded at</font>

561
00:20:58,620 --> 00:21:01,469
predictable addresses<font color="#CCCCCC"> so you</font><font color="#E5E5E5"> can't abuse</font>

562
00:21:00,000 --> 00:21:02,490
<font color="#E5E5E5">the same object every time because</font>

563
00:21:01,470 --> 00:21:06,030
<font color="#E5E5E5">that's always going to be a different</font>

564
00:21:02,490 --> 00:21:08,220
place<font color="#E5E5E5"> it was introduced with Vista it</font>

565
00:21:06,030 --> 00:21:09,600
has the potential<font color="#E5E5E5"> to be the kind of</font>

566
00:21:08,220 --> 00:21:12,450
<font color="#CCCCCC">negation that</font><font color="#E5E5E5"> means you do need another</font>

567
00:21:09,600 --> 00:21:13,649
<font color="#CCCCCC">VOC to pull off an exploit and they've</font>

568
00:21:12,450 --> 00:21:15,240
<font color="#CCCCCC">kind</font><font color="#E5E5E5"> of increasingly made it more</font>

569
00:21:13,650 --> 00:21:16,380
randoms<font color="#CCCCCC"> as more bits of randomness and</font>

570
00:21:15,240 --> 00:21:17,730
<font color="#E5E5E5">it's even harder to</font><font color="#CCCCCC"> find out where</font>

571
00:21:16,380 --> 00:21:21,420
things are even if you have<font color="#CCCCCC"> information</font>

572
00:21:17,730 --> 00:21:22,650
<font color="#CCCCCC">and stuff however that's</font><font color="#E5E5E5"> in Windows as</font>

573
00:21:21,420 --> 00:21:24,780
complex system there's a lot of almost

574
00:21:22,650 --> 00:21:27,540
<font color="#E5E5E5">kind of</font><font color="#CCCCCC"> pie design leaks which bypass</font>

575
00:21:24,780 --> 00:21:29,850
this and so the classic one for this was

576
00:21:27,540 --> 00:21:31,560
<font color="#E5E5E5">undocumented API called NT query system</font>

577
00:21:29,850 --> 00:21:34,459
information<font color="#E5E5E5"> which existed to give you</font>

578
00:21:31,560 --> 00:21:36,629
information about<font color="#E5E5E5"> the</font><font color="#CCCCCC"> system running</font><font color="#E5E5E5"> and</font>

579
00:21:34,460 --> 00:21:39,330
you could do things like pass this

580
00:21:36,630 --> 00:21:41,670
system handle<font color="#CCCCCC"> information</font><font color="#E5E5E5"> and just like</font>

581
00:21:39,330 --> 00:21:43,260
an enum value<font color="#E5E5E5"> so</font><font color="#CCCCCC"> we I can't move</font><font color="#E5E5E5"> my head</font>

582
00:21:41,670 --> 00:21:45,630
<font color="#E5E5E5">but it's basically it's</font><font color="#CCCCCC"> that integer and</font>

583
00:21:43,260 --> 00:21:47,850
it has a nice name and so if you<font color="#E5E5E5"> pass it</font>

584
00:21:45,630 --> 00:21:49,890
<font color="#CCCCCC">some Hannam information</font><font color="#E5E5E5"> it would tell</font>

585
00:21:47,850 --> 00:21:52,679
you where all<font color="#E5E5E5"> of the objects lived in</font>

586
00:21:49,890 --> 00:21:55,230
kernel memory<font color="#E5E5E5"> so it</font><font color="#CCCCCC"> includes things like</font>

587
00:21:52,680 --> 00:21:56,820
also what process owns them there's

588
00:21:55,230 --> 00:21:57,230
gonna be things<font color="#E5E5E5"> like security tokens and</font>

589
00:21:56,820 --> 00:21:59,960
<font color="#E5E5E5">Fred's</font>

590
00:21:57,230 --> 00:22:01,700
process and<font color="#CCCCCC"> files</font><font color="#E5E5E5"> and just super handy</font>

591
00:21:59,960 --> 00:22:06,020
if you're looking to say<font color="#CCCCCC"> corrupt one of</font>

592
00:22:01,700 --> 00:22:07,309
them<font color="#CCCCCC"> they're also</font><font color="#E5E5E5"> a lover augment</font><font color="#CCCCCC"> as</font><font color="#E5E5E5"> the</font>

593
00:22:06,020 --> 00:22:09,410
much information you<font color="#CCCCCC"> pass it and that'll</font>

594
00:22:07,309 --> 00:22:11,270
give you<font color="#CCCCCC"> the names all those</font><font color="#E5E5E5"> riders this</font>

595
00:22:09,410 --> 00:22:12,650
has loaded<font color="#E5E5E5"> and where they're locating</font><font color="#CCCCCC"> a</font>

596
00:22:11,270 --> 00:22:14,960
<font color="#E5E5E5">kernel memory</font><font color="#CCCCCC"> so again if you're looking</font>

597
00:22:12,650 --> 00:22:16,580
<font color="#E5E5E5">to</font><font color="#CCCCCC"> abused one</font><font color="#E5E5E5"> of those you don't</font><font color="#CCCCCC"> need to</font>

598
00:22:14,960 --> 00:22:18,440
bother any kind of complex a so I'll

599
00:22:16,580 --> 00:22:21,230
bypass the<font color="#CCCCCC"> system is</font><font color="#E5E5E5"> just gonna give you</font>

600
00:22:18,440 --> 00:22:23,870
that<font color="#E5E5E5"> information</font><font color="#CCCCCC"> and sadly</font><font color="#E5E5E5"> when you got</font>

601
00:22:21,230 --> 00:22:26,059
to Windows 8.1<font color="#E5E5E5"> Microsoft</font><font color="#CCCCCC"> stop that so</font>

602
00:22:23,870 --> 00:22:29,439
from<font color="#E5E5E5"> a low integrity process you just</font>

603
00:22:26,059 --> 00:22:31,370
<font color="#CCCCCC">get rejected</font><font color="#E5E5E5"> if you try to run this now</font>

604
00:22:29,440 --> 00:22:33,230
and<font color="#E5E5E5"> the key thing is</font><font color="#CCCCCC"> so that means</font><font color="#E5E5E5"> that</font>

605
00:22:31,370 --> 00:22:34,729
it can't be<font color="#CCCCCC"> used in things like sandbox</font>

606
00:22:33,230 --> 00:22:36,110
breakouts<font color="#CCCCCC"> she's</font><font color="#E5E5E5"> gonna be running</font><font color="#CCCCCC"> a</font>

607
00:22:34,730 --> 00:22:38,090
<font color="#E5E5E5">little charity you can't call this is</font>

608
00:22:36,110 --> 00:22:41,030
still if you<font color="#E5E5E5"> can get users</font><font color="#CCCCCC"> to run a</font>

609
00:22:38,090 --> 00:22:42,678
binary<font color="#E5E5E5"> it's still gonna work</font><font color="#CCCCCC"> and but at</font>

610
00:22:41,030 --> 00:22:46,428
least makes people work a little bit

611
00:22:42,679 --> 00:22:49,850
harder<font color="#E5E5E5"> and so I did a long long blog</font>

612
00:22:46,429 --> 00:22:52,580
post on this<font color="#E5E5E5"> and so this is all taken</font>

613
00:22:49,850 --> 00:22:54,409
<font color="#CCCCCC">from a white paper jury did about</font><font color="#E5E5E5"> ten</font>

614
00:22:52,580 --> 00:22:55,639
years<font color="#E5E5E5"> ago and I was kind of went through</font>

615
00:22:54,410 --> 00:22:58,280
<font color="#E5E5E5">and</font><font color="#CCCCCC"> looked at how many of these have</font>

616
00:22:55,640 --> 00:22:59,540
<font color="#CCCCCC">actually</font><font color="#E5E5E5"> stopped by Microsoft now</font><font color="#CCCCCC"> kind</font>

617
00:22:58,280 --> 00:23:01,460
<font color="#E5E5E5">of a keeping</font><font color="#CCCCCC"> seconds</font><font color="#E5E5E5"> around here is that</font>

618
00:22:59,540 --> 00:23:03,260
<font color="#E5E5E5">because</font><font color="#CCCCCC"> a lot of these are by</font><font color="#E5E5E5"> design</font>

619
00:23:01,460 --> 00:23:04,520
Microsoft can't just get<font color="#E5E5E5"> rid of them</font>

620
00:23:03,260 --> 00:23:05,690
<font color="#E5E5E5">because it'll</font><font color="#CCCCCC"> create</font><font color="#E5E5E5"> stability</font><font color="#CCCCCC"> and they</font>

621
00:23:04,520 --> 00:23:09,520
have a lot of backwards<font color="#CCCCCC"> compatibility</font>

622
00:23:05,690 --> 00:23:11,990
support<font color="#E5E5E5"> they kind</font><font color="#CCCCCC"> of story standby and</font>

623
00:23:09,520 --> 00:23:13,580
also<font color="#CCCCCC"> as</font><font color="#E5E5E5"> question</font><font color="#CCCCCC"> marks me corrected by</font>

624
00:23:11,990 --> 00:23:14,780
Alex<font color="#CCCCCC"> I asked</font><font color="#E5E5E5"> you this morning</font><font color="#CCCCCC"> over</font>

625
00:23:13,580 --> 00:23:17,000
Twitter<font color="#E5E5E5"> I don't really have time to</font>

626
00:23:14,780 --> 00:23:21,860
<font color="#CCCCCC">update my slides</font><font color="#E5E5E5"> and so they're just</font><font color="#CCCCCC"> tix</font>

627
00:23:17,000 --> 00:23:23,120
now they<font color="#E5E5E5"> turned out I was confused yeah</font>

628
00:23:21,860 --> 00:23:24,049
<font color="#E5E5E5">so we're keeping to say well that</font><font color="#CCCCCC"> is</font><font color="#E5E5E5"> my</font>

629
00:23:23,120 --> 00:23:25,520
<font color="#CCCCCC">little</font><font color="#E5E5E5"> you putting a lot of effort into</font>

630
00:23:24,049 --> 00:23:27,379
plugging these and making<font color="#E5E5E5"> it harder</font><font color="#CCCCCC"> to</font>

631
00:23:25,520 --> 00:23:31,129
get past a<font color="#CCCCCC"> solo has kind of a key</font>

632
00:23:27,380 --> 00:23:33,679
protection another migration we did was

633
00:23:31,130 --> 00:23:35,059
so in C C++<font color="#E5E5E5"> when you use pointers</font>

634
00:23:33,679 --> 00:23:36,890
there's kind<font color="#CCCCCC"> of a really common</font>

635
00:23:35,059 --> 00:23:38,360
programming mistake which<font color="#CCCCCC"> is you</font>

636
00:23:36,890 --> 00:23:40,490
<font color="#E5E5E5">dereference point about making</font><font color="#CCCCCC"> sure it's</font>

637
00:23:38,360 --> 00:23:42,889
a real value<font color="#E5E5E5"> so</font><font color="#CCCCCC"> someone's passed in 0</font><font color="#E5E5E5"> he</font>

638
00:23:40,490 --> 00:23:44,840
trusted<font color="#E5E5E5"> you reference it and use the</font>

639
00:23:42,890 --> 00:23:46,250
space<font color="#E5E5E5"> that's</font><font color="#CCCCCC"> not really useful</font><font color="#E5E5E5"> you can't</font>

640
00:23:44,840 --> 00:23:47,899
really exploit<font color="#CCCCCC"> that because you can't</font>

641
00:23:46,250 --> 00:23:50,929
get anything in that<font color="#E5E5E5"> memory range</font>

642
00:23:47,900 --> 00:23:53,179
<font color="#E5E5E5">however if it's in kernel code because</font>

643
00:23:50,929 --> 00:23:56,480
you're a user<font color="#E5E5E5"> back in the day and tell</font>

644
00:23:53,179 --> 00:23:58,070
<font color="#CCCCCC">Windows 7 64 bit you could map the first</font>

645
00:23:56,480 --> 00:23:59,960
page of<font color="#E5E5E5"> memory which starts</font><font color="#CCCCCC"> later s</font><font color="#E5E5E5"> 0</font>

646
00:23:58,070 --> 00:24:02,629
they kind of go to reference it you

647
00:23:59,960 --> 00:24:04,429
could data<font color="#CCCCCC"> there steer it kind of steer</font>

648
00:24:02,630 --> 00:24:05,990
the kernel function towards executing

649
00:24:04,429 --> 00:24:09,340
something<font color="#E5E5E5"> or changing some value that</font>

650
00:24:05,990 --> 00:24:09,340
<font color="#E5E5E5">would give you code execution assistant</font>

651
00:24:10,779 --> 00:24:14,929
so no one suspect for where you<font color="#E5E5E5"> just</font>

652
00:24:13,639 --> 00:24:16,218
override<font color="#CCCCCC"> the point</font><font color="#E5E5E5"> it's</font><font color="#CCCCCC"> a fixture</font><font color="#E5E5E5"> it's</font>

653
00:24:14,929 --> 00:24:17,749
descriptive with an old pointer and

654
00:24:16,219 --> 00:24:20,989
<font color="#CCCCCC">Windows would fail open</font><font color="#E5E5E5"> and give you the</font>

655
00:24:17,749 --> 00:24:22,940
keys<font color="#CCCCCC"> to the kingdom</font><font color="#E5E5E5"> they worked and so</font>

656
00:24:20,989 --> 00:24:27,289
now when you go to<font color="#CCCCCC"> get handle to a</font>

657
00:24:22,940 --> 00:24:29,299
process<font color="#E5E5E5"> yep and what do</font><font color="#CCCCCC"> you things like</font>

658
00:24:27,289 --> 00:24:33,009
<font color="#E5E5E5">okay it's the secret to descriptive</font>

659
00:24:29,299 --> 00:24:35,299
field<font color="#E5E5E5"> no</font><font color="#CCCCCC"> okay no joke is it process</font><font color="#E5E5E5"> and</font>

660
00:24:33,009 --> 00:24:37,820
it's the<font color="#CCCCCC"> security required flag set</font>

661
00:24:35,299 --> 00:24:39,709
these are all true and I'll just give

662
00:24:37,820 --> 00:24:42,079
<font color="#CCCCCC">you</font><font color="#E5E5E5"> a</font><font color="#CCCCCC"> view screen</font><font color="#E5E5E5"> and everything will</font>

663
00:24:39,709 --> 00:24:43,969
die and actually<font color="#E5E5E5"> did a really good</font>

664
00:24:42,079 --> 00:24:45,918
in-depth write-up of this which is<font color="#E5E5E5"> where</font>

665
00:24:43,969 --> 00:24:48,229
I<font color="#CCCCCC"> stole</font><font color="#E5E5E5"> the screenshot from and because</font>

666
00:24:45,919 --> 00:24:49,339
I have five<font color="#E5E5E5"> sets of myself and this is</font>

667
00:24:48,229 --> 00:24:51,049
<font color="#CCCCCC">the type of mitigation it's just</font>

668
00:24:49,339 --> 00:24:53,029
stopping away people were exploiting

669
00:24:51,049 --> 00:24:58,069
bugs<font color="#E5E5E5"> in a very specific kind</font><font color="#CCCCCC"> of</font>

670
00:24:53,029 --> 00:25:00,139
circumstance so<font color="#E5E5E5"> another thing to be done</font>

671
00:24:58,069 --> 00:25:01,789
<font color="#E5E5E5">is they've been removing functionality</font>

672
00:25:00,139 --> 00:25:04,189
out of kernel space<font color="#E5E5E5"> it was less there to</font>

673
00:25:01,789 --> 00:25:05,419
attack<font color="#E5E5E5"> fun passing is always kind</font><font color="#CCCCCC"> of</font>

674
00:25:04,190 --> 00:25:07,639
being<font color="#E5E5E5"> a running joke about Windows</font>

675
00:25:05,419 --> 00:25:09,799
security<font color="#E5E5E5"> because</font><font color="#CCCCCC"> of a</font><font color="#E5E5E5"> fonts of a kernel</font>

676
00:25:07,639 --> 00:25:11,779
that<font color="#E5E5E5"> stupid worried to do that they're</font>

677
00:25:09,799 --> 00:25:14,179
now starting to genuinely<font color="#E5E5E5"> kind of move</font>

678
00:25:11,779 --> 00:25:16,099
away from<font color="#E5E5E5"> that now if you're</font><font color="#CCCCCC"> safe</font><font color="#E5E5E5"> brows</font>

679
00:25:14,179 --> 00:25:17,659
mean to an edge<font color="#E5E5E5"> you</font><font color="#CCCCCC"> load</font><font color="#E5E5E5"> a</font><font color="#CCCCCC"> new font</font><font color="#E5E5E5"> that</font>

680
00:25:16,099 --> 00:25:21,259
gets done in a very<font color="#CCCCCC"> restricted up</font>

681
00:25:17,659 --> 00:25:22,579
container only<font color="#CCCCCC"> Matt doesn't really get</font>

682
00:25:21,259 --> 00:25:23,839
you anything you<font color="#E5E5E5"> just</font><font color="#CCCCCC"> end up</font><font color="#E5E5E5"> in</font><font color="#CCCCCC"> an even</font>

683
00:25:22,579 --> 00:25:26,649
stricter sandbox and<font color="#E5E5E5"> you would if you</font>

684
00:25:23,839 --> 00:25:29,239
owned edge<font color="#E5E5E5"> so at that point that kind of</font>

685
00:25:26,649 --> 00:25:30,529
vectors completely gone<font color="#CCCCCC"> away and they</font>

686
00:25:29,239 --> 00:25:31,969
don't<font color="#CCCCCC"> that</font><font color="#E5E5E5"> by just removing the</font>

687
00:25:30,529 --> 00:25:38,659
functionality you're<font color="#E5E5E5"> targeting believe</font>

688
00:25:31,969 --> 00:25:40,759
it they've also starts with<font color="#CCCCCC"> Flint a</font>

689
00:25:38,659 --> 00:25:42,829
similar<font color="#E5E5E5"> thing with wind face its UK so</font>

690
00:25:40,759 --> 00:25:44,929
now you can set<font color="#E5E5E5"> some process values when</font>

691
00:25:42,829 --> 00:25:46,489
you<font color="#E5E5E5"> create</font><font color="#CCCCCC"> Fred etc and you can make it</font>

692
00:25:44,929 --> 00:25:48,859
<font color="#CCCCCC">so that</font><font color="#E5E5E5"> it doesn't have access to most</font>

693
00:25:46,489 --> 00:25:50,899
win32<font color="#CCCCCC"> kpi's which have been such as good</font>

694
00:25:48,859 --> 00:25:54,698
to source of bugs for people doing

695
00:25:50,899 --> 00:25:54,698
<font color="#E5E5E5">exploit development for so many years</font>

696
00:25:54,879 --> 00:26:00,468
<font color="#E5E5E5">I'm not going to move on to</font><font color="#CCCCCC"> give some</font>

697
00:25:57,379 --> 00:26:02,958
details on<font color="#E5E5E5"> CVE 2016 and</font><font color="#CCCCCC"> 255</font>

698
00:26:00,469 --> 00:26:10,479
how is exploited how it was<font color="#E5E5E5"> exploding in</font>

699
00:26:02,959 --> 00:26:13,639
wild<font color="#E5E5E5"> services from the Google Blog</font>

700
00:26:10,479 --> 00:26:15,319
<font color="#E5E5E5">October last year they found this one</font>

701
00:26:13,639 --> 00:26:19,279
ability<font color="#CCCCCC"> being a spot in the wild</font><font color="#E5E5E5"> they</font>

702
00:26:15,319 --> 00:26:20,928
told Microsoft after seven days because

703
00:26:19,279 --> 00:26:21,510
they have a policy<font color="#CCCCCC"> this apparently it</font>

704
00:26:20,929 --> 00:26:24,300
happens off

705
00:26:21,510 --> 00:26:25,860
enough<font color="#CCCCCC"> they publicized information so</font>

706
00:26:24,300 --> 00:26:30,360
that<font color="#E5E5E5"> people</font><font color="#CCCCCC"> could be aware and</font><font color="#E5E5E5"> protect</font>

707
00:26:25,860 --> 00:26:32,040
<font color="#E5E5E5">themselves and McAfee and Trend Micro</font>

708
00:26:30,360 --> 00:26:35,550
both did really<font color="#E5E5E5"> good blog post giving</font>

709
00:26:32,040 --> 00:26:38,310
details on this<font color="#E5E5E5"> attack by reverse</font>

710
00:26:35,550 --> 00:26:41,570
<font color="#CCCCCC">engineering the attack binaries</font><font color="#E5E5E5"> someone</font>

711
00:26:38,310 --> 00:26:41,570
just walked<font color="#E5E5E5"> through helvis was exploited</font>

712
00:26:43,190 --> 00:26:47,550
so this demo worked like<font color="#E5E5E5"> 20 times last</font>

713
00:26:45,870 --> 00:26:52,620
night<font color="#CCCCCC"> so I expect</font><font color="#E5E5E5"> it to fail miserably</font>

714
00:26:47,550 --> 00:26:55,860
now so I was<font color="#E5E5E5"> originally</font><font color="#CCCCCC"> gonna talk</font>

715
00:26:52,620 --> 00:26:57,899
through<font color="#E5E5E5"> it while the expert ran however</font>

716
00:26:55,860 --> 00:26:59,280
I'm paranoid it's gonna fail and<font color="#E5E5E5"> then so</font>

717
00:26:57,900 --> 00:27:02,070
this way hopefully<font color="#E5E5E5"> I'll have</font><font color="#CCCCCC"> enough</font><font color="#E5E5E5"> time</font>

718
00:26:59,280 --> 00:27:05,460
for<font color="#E5E5E5"> my machine to reboot before</font><font color="#CCCCCC"> Irina</font>

719
00:27:02,070 --> 00:27:08,310
<font color="#CCCCCC">and so here it gives</font><font color="#E5E5E5"> some context it's</font>

720
00:27:05,460 --> 00:27:09,630
just self the system it's done nothing

721
00:27:08,310 --> 00:27:11,250
<font color="#E5E5E5">particularly malicious it's just in a</font>

722
00:27:09,630 --> 00:27:15,270
bit<font color="#E5E5E5"> of window management the exploits</font>

723
00:27:11,250 --> 00:27:16,530
where it wants to<font color="#CCCCCC"> be here it's running</font>

724
00:27:15,270 --> 00:27:19,260
the<font color="#CCCCCC"> actual</font><font color="#E5E5E5"> memory corruption this is</font>

725
00:27:16,530 --> 00:27:22,230
<font color="#E5E5E5">what's damaging things it's</font><font color="#CCCCCC"> more stuff</font>

726
00:27:19,260 --> 00:27:25,760
now<font color="#E5E5E5"> it's realized from kernel memory</font>

727
00:27:22,230 --> 00:27:38,880
<font color="#E5E5E5">it's found out what it wants to corrupt</font>

728
00:27:25,760 --> 00:27:40,470
<font color="#CCCCCC">damn it every time yeah that's</font><font color="#E5E5E5"> fine all</font>

729
00:27:38,880 --> 00:27:42,660
<font color="#E5E5E5">right I'll try</font><font color="#CCCCCC"> it again</font><font color="#E5E5E5"> at the</font><font color="#CCCCCC"> end</font><font color="#E5E5E5"> and</font>

730
00:27:40,470 --> 00:27:50,670
hopefully if you know I'll put<font color="#CCCCCC"> the code</font>

731
00:27:42,660 --> 00:27:54,120
up next week anyway here's how you would

732
00:27:50,670 --> 00:27:59,160
exploit it<font color="#E5E5E5"> and if you want terrible</font>

733
00:27:54,120 --> 00:28:02,580
person<font color="#CCCCCC"> all right so there's two kind of</font>

734
00:27:59,160 --> 00:28:04,920
key components<font color="#CCCCCC"> of his exploit</font><font color="#E5E5E5"> one it</font>

735
00:28:02,580 --> 00:28:07,320
<font color="#E5E5E5">uses is</font><font color="#CCCCCC"> the ability for a specific</font>

736
00:28:04,920 --> 00:28:09,120
<font color="#E5E5E5">structure it can basically get a copy of</font>

737
00:28:07,320 --> 00:28:10,740
<font color="#E5E5E5">the structure in kernel memory which you</font>

738
00:28:09,120 --> 00:28:12,389
can use to<font color="#E5E5E5"> bypass a slower find out</font>

739
00:28:10,740 --> 00:28:15,510
where things are help guide the

740
00:28:12,390 --> 00:28:17,250
exploitation process<font color="#CCCCCC"> a</font><font color="#E5E5E5"> second the part</font>

741
00:28:15,510 --> 00:28:19,020
that actually<font color="#E5E5E5"> kind of corrupts memory</font>

742
00:28:17,250 --> 00:28:22,920
and kernel is there has the ability to

743
00:28:19,020 --> 00:28:26,070
or any<font color="#E5E5E5"> byte in memory with</font><font color="#CCCCCC"> fall which</font>

744
00:28:22,920 --> 00:28:27,360
<font color="#E5E5E5">means you can set a single bit by</font>

745
00:28:26,070 --> 00:28:29,429
combining these two issues<font color="#E5E5E5"> I managed</font><font color="#CCCCCC"> to</font>

746
00:28:27,360 --> 00:28:31,919
<font color="#E5E5E5">get</font><font color="#CCCCCC"> system code execution on</font><font color="#E5E5E5"> Windows 7</font>

747
00:28:29,430 --> 00:28:34,760
<font color="#E5E5E5">to 10 up to anniversary update both</font>

748
00:28:31,920 --> 00:28:34,760
32-bit and<font color="#E5E5E5"> 64-bit</font>

749
00:28:35,510 --> 00:28:41,720
some data link was this undocumented

750
00:28:38,150 --> 00:28:44,840
Fletcher<font color="#E5E5E5"> called hey structure called</font><font color="#CCCCCC"> hm</font>

751
00:28:41,720 --> 00:28:47,450
<font color="#CCCCCC">fathered a handle basically you passed</font>

752
00:28:44,840 --> 00:28:49,520
this<font color="#E5E5E5"> a handle to a window and it was</font>

753
00:28:47,450 --> 00:28:50,809
kind enough<font color="#E5E5E5"> to take</font><font color="#CCCCCC"> a structure which</font><font color="#E5E5E5"> is</font>

754
00:28:49,520 --> 00:28:53,750
associate<font color="#E5E5E5"> with</font><font color="#CCCCCC"> that and</font><font color="#E5E5E5"> just copy it</font>

755
00:28:50,809 --> 00:28:55,760
into user memory<font color="#E5E5E5"> luckily when it copies</font>

756
00:28:53,750 --> 00:28:57,470
it also includes<font color="#E5E5E5"> things like</font><font color="#CCCCCC"> the pointer</font>

757
00:28:55,760 --> 00:28:58,490
to where it lives<font color="#E5E5E5"> in kernel memory at</font>

758
00:28:57,470 --> 00:28:59,929
which point<font color="#E5E5E5"> you don't have to worry</font>

759
00:28:58,490 --> 00:29:03,080
<font color="#E5E5E5">about this alarm anymore because you</font>

760
00:28:59,929 --> 00:29:04,670
know<font color="#CCCCCC"> where</font><font color="#E5E5E5"> this fing lips and the</font>

761
00:29:03,080 --> 00:29:07,520
corruption primitive<font color="#CCCCCC"> sweet more complex</font>

762
00:29:04,670 --> 00:29:10,070
<font color="#E5E5E5">it's like a window object there's a</font>

763
00:29:07,520 --> 00:29:11,720
functional<font color="#CCCCCC"> miss which lets you set some</font>

764
00:29:10,070 --> 00:29:14,720
memory<font color="#CCCCCC"> which is</font><font color="#E5E5E5"> finally used</font><font color="#CCCCCC"> by the</font>

765
00:29:11,720 --> 00:29:16,549
memory and you could modify one of<font color="#CCCCCC"> the</font>

766
00:29:14,720 --> 00:29:17,660
fields on<font color="#E5E5E5"> the window with no checks</font>

767
00:29:16,549 --> 00:29:20,299
it<font color="#E5E5E5"> wasn't successfully check you were</font>

768
00:29:17,660 --> 00:29:22,490
modifying it<font color="#CCCCCC"> and then another</font><font color="#E5E5E5"> function</font>

769
00:29:20,299 --> 00:29:23,600
when<font color="#CCCCCC"> you which can</font><font color="#E5E5E5"> be triggered</font><font color="#CCCCCC"> by</font>

770
00:29:22,490 --> 00:29:25,010
something<font color="#E5E5E5"> between</font><font color="#CCCCCC"> windows it's not the</font>

771
00:29:23,600 --> 00:29:26,959
<font color="#E5E5E5">only way</font><font color="#CCCCCC"> in</font><font color="#E5E5E5"> which we're good</font><font color="#CCCCCC"> and</font><font color="#E5E5E5"> when it</font>

772
00:29:25,010 --> 00:29:28,700
tries to<font color="#E5E5E5"> find the</font><font color="#CCCCCC"> next window</font><font color="#E5E5E5"> it will</font>

773
00:29:26,960 --> 00:29:31,850
take that<font color="#E5E5E5"> value and use it as a pointer</font>

774
00:29:28,700 --> 00:29:33,919
and so by<font color="#E5E5E5"> setting this</font><font color="#CCCCCC"> pointer to any</font>

775
00:29:31,850 --> 00:29:35,659
address you could then of course the

776
00:29:33,919 --> 00:29:37,549
logic<font color="#CCCCCC"> to happen on</font><font color="#E5E5E5"> that and what it'll</font>

777
00:29:35,660 --> 00:29:41,900
do<font color="#CCCCCC"> is it all set take your</font><font color="#E5E5E5"> address add</font>

778
00:29:37,549 --> 00:29:43,730
<font color="#E5E5E5">hex 28 and or it</font><font color="#CCCCCC"> will 4 which means that</font>

779
00:29:41,900 --> 00:29:46,610
you can<font color="#E5E5E5"> take any</font><font color="#CCCCCC"> by in the</font><font color="#E5E5E5"> whole windows</font>

780
00:29:43,730 --> 00:29:50,690
address space<font color="#E5E5E5"> and just set it sick fit</font>

781
00:29:46,610 --> 00:29:53,510
<font color="#E5E5E5">and so how do</font><font color="#CCCCCC"> I actually turn this into</font>

782
00:29:50,690 --> 00:29:55,250
a function<font color="#CCCCCC"> export so step one they</font>

783
00:29:53,510 --> 00:29:56,270
create<font color="#E5E5E5"> X hundred</font><font color="#CCCCCC"> windows objects it</font>

784
00:29:55,250 --> 00:30:00,970
could be any large number of<font color="#CCCCCC"> windows</font>

785
00:29:56,270 --> 00:30:03,950
objects that's 256 I'm pretty sure<font color="#CCCCCC"> and</font>

786
00:30:00,970 --> 00:30:05,090
it creates these it uses the HM validate

787
00:30:03,950 --> 00:30:07,190
to find out where they all live in

788
00:30:05,090 --> 00:30:09,709
kernel memory and then it finds<font color="#CCCCCC"> two</font>

789
00:30:07,190 --> 00:30:11,840
which are close enough together<font color="#E5E5E5"> and in</font>

790
00:30:09,710 --> 00:30:14,330
that case<font color="#E5E5E5"> it seemed to be free</font><font color="#CCCCCC"> F G 0 0</font>

791
00:30:11,840 --> 00:30:17,178
and then destroy the other ones throw

792
00:30:14,330 --> 00:30:18,379
them away you've got your two targets so

793
00:30:17,179 --> 00:30:20,120
the first window becomes<font color="#CCCCCC"> your primary</font>

794
00:30:18,380 --> 00:30:22,520
one your second window<font color="#E5E5E5"> comes your</font>

795
00:30:20,120 --> 00:30:24,860
<font color="#CCCCCC">secondary one which is higher up in</font>

796
00:30:22,520 --> 00:30:28,610
memory which doesn't<font color="#E5E5E5"> make sense</font><font color="#CCCCCC"> from</font><font color="#E5E5E5"> my</font>

797
00:30:24,860 --> 00:30:31,280
diagram but it's higher<font color="#E5E5E5"> value and so</font>

798
00:30:28,610 --> 00:30:33,889
even if occur option and there's<font color="#E5E5E5"> a value</font>

799
00:30:31,280 --> 00:30:35,990
for<font color="#E5E5E5"> all in attack window object called</font>

800
00:30:33,890 --> 00:30:37,370
CB<font color="#E5E5E5"> window extra which defines how</font><font color="#CCCCCC"> much</font>

801
00:30:35,990 --> 00:30:38,450
extra memory<font color="#E5E5E5"> space there is after the</font>

802
00:30:37,370 --> 00:30:43,340
structure which can<font color="#E5E5E5"> be used to store</font>

803
00:30:38,450 --> 00:30:47,650
things so this<font color="#E5E5E5"> is the kind of target</font>

804
00:30:43,340 --> 00:30:50,620
we're going to corrupt so to<font color="#E5E5E5"> begin with</font>

805
00:30:47,650 --> 00:30:52,960
zero there's no extra memory using the

806
00:30:50,620 --> 00:30:55,239
corruption primitive<font color="#E5E5E5"> we can or the</font><font color="#CCCCCC"> high</font>

807
00:30:52,960 --> 00:30:58,210
<font color="#CCCCCC">spike so that</font><font color="#E5E5E5"> goes from being a zero</font>

808
00:30:55,240 --> 00:31:01,300
<font color="#CCCCCC">bicep extra memory to large number of</font>

809
00:30:58,210 --> 00:31:02,770
hex bytes<font color="#CCCCCC"> and that key</font><font color="#E5E5E5"> thing is that</font>

810
00:31:01,300 --> 00:31:09,159
<font color="#E5E5E5">this also means it now includes</font><font color="#CCCCCC"> the</font>

811
00:31:02,770 --> 00:31:12,010
second structure so<font color="#E5E5E5"> how so we have the</font>

812
00:31:09,160 --> 00:31:13,180
<font color="#CCCCCC">ability to do come out with the second</font>

813
00:31:12,010 --> 00:31:14,790
structure<font color="#E5E5E5"> now how do we actually turn</font>

814
00:31:13,180 --> 00:31:17,080
<font color="#CCCCCC">that into reading writing kernel memory</font>

815
00:31:14,790 --> 00:31:20,620
<font color="#CCCCCC">to start with we</font><font color="#E5E5E5"> need to get a read</font>

816
00:31:17,080 --> 00:31:23,740
primitive<font color="#E5E5E5"> and so there's a field in</font>

817
00:31:20,620 --> 00:31:25,179
attack<font color="#E5E5E5"> window which</font><font color="#CCCCCC"> is sp</font><font color="#E5E5E5"> wind parent</font>

818
00:31:23,740 --> 00:31:29,890
<font color="#CCCCCC">basically this</font><font color="#E5E5E5"> is a pointer to the</font>

819
00:31:25,180 --> 00:31:31,810
<font color="#E5E5E5">windows parent window so when you call</font>

820
00:31:29,890 --> 00:31:33,880
<font color="#CCCCCC">the function</font><font color="#E5E5E5"> call</font><font color="#CCCCCC"> and to use a get</font>

821
00:31:31,810 --> 00:31:37,389
ancestor<font color="#E5E5E5"> that's meant to</font><font color="#CCCCCC"> return the</font>

822
00:31:33,880 --> 00:31:39,040
handle value for<font color="#E5E5E5"> that parent and so by</font>

823
00:31:37,390 --> 00:31:40,750
calculating<font color="#E5E5E5"> the difference between where</font>

824
00:31:39,040 --> 00:31:42,970
your spare region memory and we know one

825
00:31:40,750 --> 00:31:45,600
starts and where<font color="#E5E5E5"> that is located</font>

826
00:31:42,970 --> 00:31:48,730
<font color="#E5E5E5">in your spare memory region you can call</font>

827
00:31:45,600 --> 00:31:50,939
<font color="#E5E5E5">NT yeah</font>

828
00:31:48,730 --> 00:31:53,140
<font color="#CCCCCC">NT use</font><font color="#E5E5E5"> a set window long pointer</font>

829
00:31:50,940 --> 00:31:55,210
<font color="#CCCCCC">overwrite that</font><font color="#E5E5E5"> value with an arbitrary</font>

830
00:31:53,140 --> 00:31:56,770
address in memory and then<font color="#E5E5E5"> when you call</font>

831
00:31:55,210 --> 00:31:59,230
<font color="#E5E5E5">that</font><font color="#CCCCCC"> ng using</font><font color="#E5E5E5"> an ancestor it's going to</font>

832
00:31:56,770 --> 00:32:01,600
go<font color="#E5E5E5"> to our memory read 32 bits of</font><font color="#CCCCCC"> memory</font>

833
00:31:59,230 --> 00:32:02,890
it finds there and return it to<font color="#CCCCCC"> you so</font>

834
00:32:01,600 --> 00:32:10,449
at this point you can read<font color="#E5E5E5"> any four</font>

835
00:32:02,890 --> 00:32:11,830
bytes in memory at a time diagrams so

836
00:32:10,450 --> 00:32:13,690
how do we<font color="#E5E5E5"> get</font><font color="#CCCCCC"> a</font><font color="#E5E5E5"> right parameter from</font>

837
00:32:11,830 --> 00:32:14,919
this and so<font color="#CCCCCC"> we have the</font><font color="#E5E5E5"> ability to read</font>

838
00:32:13,690 --> 00:32:16,510
any<font color="#CCCCCC"> kernel memory will not be able</font><font color="#E5E5E5"> to</font>

839
00:32:14,920 --> 00:32:18,840
<font color="#CCCCCC">Reiko memory because I've always be</font>

840
00:32:16,510 --> 00:32:21,940
can't actually do<font color="#CCCCCC"> anything that fun and</font>

841
00:32:18,840 --> 00:32:24,669
so key<font color="#E5E5E5"> thing is it has a tag window has</font>

842
00:32:21,940 --> 00:32:26,500
a string name field<font color="#E5E5E5"> and by overwriting</font>

843
00:32:24,670 --> 00:32:29,200
the<font color="#E5E5E5"> waffle pointer with a similar</font>

844
00:32:26,500 --> 00:32:30,880
technique we find out where the<font color="#CCCCCC"> boiler</font>

845
00:32:29,200 --> 00:32:33,190
lives on the second tag<font color="#CCCCCC"> wins</font>

846
00:32:30,880 --> 00:32:36,040
find out the difference<font color="#E5E5E5"> use NT set long</font>

847
00:32:33,190 --> 00:32:38,110
pointer to overwrite it<font color="#E5E5E5"> we can then use</font>

848
00:32:36,040 --> 00:32:41,050
<font color="#E5E5E5">the function which is meant to set</font><font color="#CCCCCC"> a</font>

849
00:32:38,110 --> 00:32:42,370
string name that will follow on our

850
00:32:41,050 --> 00:32:43,870
corrupted pointer and it will go there

851
00:32:42,370 --> 00:32:46,000
<font color="#E5E5E5">and write the string we pass to</font><font color="#CCCCCC"> it</font>

852
00:32:43,870 --> 00:32:48,600
whatever<font color="#E5E5E5"> address in memory we've decided</font>

853
00:32:46,000 --> 00:32:48,600
we<font color="#CCCCCC"> want to</font><font color="#E5E5E5"> write</font>

854
00:32:52,180 --> 00:32:55,120
now we've got the ability<font color="#E5E5E5"> to read and</font>

855
00:32:53,410 --> 00:32:57,880
<font color="#CCCCCC">write</font><font color="#E5E5E5"> anywhere in memory that</font><font color="#CCCCCC"> we fancy</font>

856
00:32:55,120 --> 00:33:03,459
<font color="#E5E5E5">how do we actually turn this into</font>

857
00:32:57,880 --> 00:33:05,770
something<font color="#E5E5E5"> useful so another nice thing</font>

858
00:33:03,460 --> 00:33:10,450
<font color="#CCCCCC">about the tag win</font><font color="#E5E5E5"> structure is it</font>

859
00:33:05,770 --> 00:33:12,010
includes a pointer<font color="#E5E5E5"> to attack</font><font color="#CCCCCC"> Fred which</font>

860
00:33:10,450 --> 00:33:14,110
is the kind<font color="#E5E5E5"> of Fred</font><font color="#CCCCCC"> object to use by</font>

861
00:33:12,010 --> 00:33:15,790
with it<font color="#E5E5E5"> okay but from there you can get</font>

862
00:33:14,110 --> 00:33:19,649
<font color="#E5E5E5">the Fred object which is used by the</font>

863
00:33:15,790 --> 00:33:21,520
<font color="#E5E5E5">kernel from there you can look the</font>

864
00:33:19,650 --> 00:33:23,470
<font color="#CCCCCC">pacing wrist procedure</font><font color="#E5E5E5"> state but we</font>

865
00:33:21,520 --> 00:33:24,610
don't really<font color="#E5E5E5"> care what</font><font color="#CCCCCC"> actually is so</font>

866
00:33:23,470 --> 00:33:29,260
we're going<font color="#E5E5E5"> to find this other pointer</font>

867
00:33:24,610 --> 00:33:30,699
we can read this<font color="#CCCCCC"> again and that has a</font>

868
00:33:29,260 --> 00:33:32,860
<font color="#CCCCCC">pointer to the process object living in</font>

869
00:33:30,700 --> 00:33:34,930
the kernel<font color="#E5E5E5"> the process object has these</font>

870
00:33:32,860 --> 00:33:36,790
handy fields<font color="#CCCCCC"> you need process ID which</font>

871
00:33:34,930 --> 00:33:39,370
<font color="#E5E5E5">is what</font><font color="#CCCCCC"> prop the process ID of that</font>

872
00:33:36,790 --> 00:33:43,330
<font color="#E5E5E5">process is a pointer to its security</font>

873
00:33:39,370 --> 00:33:44,830
<font color="#E5E5E5">token and a the P void active process</font>

874
00:33:43,330 --> 00:33:46,659
<font color="#CCCCCC">thinks which is a rate polite one</font>

875
00:33:44,830 --> 00:33:48,699
because<font color="#CCCCCC"> that means you can follow that</font>

876
00:33:46,660 --> 00:33:53,080
<font color="#CCCCCC">along</font><font color="#E5E5E5"> and find all the other processes</font>

877
00:33:48,700 --> 00:33:54,640
in<font color="#E5E5E5"> the system so then what we want to do</font>

878
00:33:53,080 --> 00:33:56,260
is we're going<font color="#CCCCCC"> to</font><font color="#E5E5E5"> reverse it find the</font>

879
00:33:54,640 --> 00:33:58,480
process<font color="#E5E5E5"> which has the processor idea for</font>

880
00:33:56,260 --> 00:34:00,100
we're<font color="#E5E5E5"> going to find it</font><font color="#CCCCCC"> I'm going to find</font>

881
00:33:58,480 --> 00:34:02,140
its security token<font color="#E5E5E5"> we're going to copy</font>

882
00:34:00,100 --> 00:34:04,990
<font color="#E5E5E5">it</font><font color="#CCCCCC"> and we're just</font><font color="#E5E5E5"> going to paste it</font><font color="#CCCCCC"> over</font>

883
00:34:02,140 --> 00:34:08,620
right<font color="#E5E5E5"> well pointer to its crew to token</font>

884
00:34:04,990 --> 00:34:12,520
<font color="#E5E5E5">even and add a</font><font color="#CCCCCC"> map point we're system</font>

885
00:34:08,620 --> 00:34:14,549
now<font color="#CCCCCC"> there's a screenshot in the</font>

886
00:34:12,520 --> 00:34:26,440
expletive running successfully

887
00:34:14,550 --> 00:34:28,300
<font color="#CCCCCC">just</font><font color="#E5E5E5"> that spilled too many rumors so</font>

888
00:34:26,440 --> 00:34:30,159
some caveats<font color="#CCCCCC"> here so much love for our</font>

889
00:34:28,300 --> 00:34:33,429
blog post saying<font color="#E5E5E5"> basically how that</font>

890
00:34:30,159 --> 00:34:34,659
already mitigate this risk<font color="#E5E5E5"> it's not</font>

891
00:34:33,429 --> 00:34:36,639
gonna go into<font color="#E5E5E5"> depth here but</font><font color="#CCCCCC"> basically</font>

892
00:34:34,659 --> 00:34:38,169
around<font color="#CCCCCC"> the primitive</font><font color="#E5E5E5"> views there so</font>

893
00:34:36,639 --> 00:34:39,460
things<font color="#E5E5E5"> like this rename buffer they'll</font>

894
00:34:38,168 --> 00:34:41,080
make sure<font color="#E5E5E5"> that that's</font><font color="#CCCCCC"> actually in a sane</font>

895
00:34:39,460 --> 00:34:42,790
memory range you can't just set it<font color="#E5E5E5"> to</font>

896
00:34:41,080 --> 00:34:45,279
anywhere<font color="#E5E5E5"> I go off writing everything and</font>

897
00:34:42,790 --> 00:34:47,320
<font color="#E5E5E5">weather then briefly afterwards another</font>

898
00:34:45,280 --> 00:34:52,419
guy<font color="#E5E5E5"> posted</font><font color="#CCCCCC"> a blog post which walks</font><font color="#E5E5E5"> you</font>

899
00:34:47,320 --> 00:34:54,700
through<font color="#E5E5E5"> bypassing</font><font color="#CCCCCC"> missed</font><font color="#E5E5E5"> jokes so</font>

900
00:34:52,418 --> 00:34:57,339
inclusions<font color="#E5E5E5"> the Windows kernel is massive</font>

901
00:34:54,699 --> 00:34:58,660
and<font color="#CCCCCC"> complex and messy</font><font color="#E5E5E5"> exploit the phone</font>

902
00:34:57,340 --> 00:35:00,940
that's<font color="#CCCCCC"> kind of harder but</font><font color="#E5E5E5"> it's still</font>

903
00:34:58,660 --> 00:35:03,129
possible<font color="#E5E5E5"> most people are doing it mostly</font>

904
00:35:00,940 --> 00:35:04,740
unknown government entities in the

905
00:35:03,130 --> 00:35:07,710
eastern part of the world

906
00:35:04,740 --> 00:35:09,569
it's not going<font color="#E5E5E5"> away anytime</font><font color="#CCCCCC"> soon these</font>

907
00:35:07,710 --> 00:35:10,680
have<font color="#CCCCCC"> value</font><font color="#E5E5E5"> they're useful</font><font color="#CCCCCC"> and as long as</font>

908
00:35:09,570 --> 00:35:14,930
<font color="#CCCCCC">people are able</font><font color="#E5E5E5"> to put</font><font color="#CCCCCC"> these</font><font color="#E5E5E5"> together</font>

909
00:35:10,680 --> 00:35:28,109
they're<font color="#E5E5E5"> going to be used questions</font>

910
00:35:14,930 --> 00:35:29,669
anyone<font color="#CCCCCC"> while</font><font color="#E5E5E5"> I wait history boot</font><font color="#CCCCCC"> crayon</font>

911
00:35:28,109 --> 00:35:53,520
inevitably your<font color="#CCCCCC"> vaults make me look</font>

912
00:35:29,670 --> 00:35:56,310
<font color="#E5E5E5">stupid the question and so I think</font><font color="#CCCCCC"> I</font>

913
00:35:53,520 --> 00:35:58,230
remember<font color="#E5E5E5"> correctly so I think keeping is</font>

914
00:35:56,310 --> 00:36:00,750
part of<font color="#E5E5E5"> the protections they were</font>

915
00:35:58,230 --> 00:36:02,730
working on with<font color="#E5E5E5"> until also bringing kind</font>

916
00:36:00,750 --> 00:36:04,619
of a whole raft of<font color="#E5E5E5"> features and sort</font>

917
00:36:02,730 --> 00:36:05,880
also enhancing things like<font color="#E5E5E5"> the virtual</font>

918
00:36:04,619 --> 00:36:08,820
<font color="#CCCCCC">machine-based</font><font color="#E5E5E5"> security features and</font>

919
00:36:05,880 --> 00:36:10,770
<font color="#E5E5E5">pushing those aggressively so I can kind</font>

920
00:36:08,820 --> 00:36:12,810
of see why<font color="#E5E5E5"> they've given up a limit so</font>

921
00:36:10,770 --> 00:36:14,670
<font color="#CCCCCC">it</font><font color="#E5E5E5"> might still be providing massive</font>

922
00:36:12,810 --> 00:36:17,339
value for<font color="#E5E5E5"> especially like large</font><font color="#CCCCCC"> fan-out</font>

923
00:36:14,670 --> 00:36:19,380
<font color="#E5E5E5">shield running Windows 7 everywhere but</font>

924
00:36:17,339 --> 00:36:21,930
at<font color="#CCCCCC"> some point Microsoft</font><font color="#E5E5E5"> did have to stop</font>

925
00:36:19,380 --> 00:36:23,400
investing on<font color="#CCCCCC"> monkey-patching</font><font color="#E5E5E5"> clients who</font>

926
00:36:21,930 --> 00:36:24,660
are<font color="#E5E5E5"> being annoying when they really</font>

927
00:36:23,400 --> 00:36:25,859
<font color="#E5E5E5">won't be portrayed</font><font color="#CCCCCC"> in case you ever</font>

928
00:36:24,660 --> 00:36:28,618
<font color="#E5E5E5">noticed I've been pushing Windows 10</font>

929
00:36:25,859 --> 00:36:30,750
quite hard<font color="#E5E5E5"> and a lot of the virtual</font>

930
00:36:28,619 --> 00:36:33,150
<font color="#CCCCCC">machine-based</font><font color="#E5E5E5"> off is pretty awesome</font><font color="#CCCCCC"> and</font>

931
00:36:30,750 --> 00:36:35,280
does raise<font color="#CCCCCC"> the bar to</font><font color="#E5E5E5"> mental levels</font>

932
00:36:33,150 --> 00:36:38,910
which makes me a bit sad<font color="#CCCCCC"> cuz I'll</font>

933
00:36:35,280 --> 00:36:39,690
probably<font color="#E5E5E5"> unemployed</font><font color="#CCCCCC"> too I think it's</font>

934
00:36:38,910 --> 00:36:41,520
something they kind of have to

935
00:36:39,690 --> 00:36:43,170
<font color="#CCCCCC">inevitably do at some point so I guess</font>

936
00:36:41,520 --> 00:36:52,589
<font color="#E5E5E5">that you have to bite the</font><font color="#CCCCCC"> bullet and</font>

937
00:36:43,170 --> 00:36:54,480
make people sad<font color="#E5E5E5"> anyone else okay</font><font color="#CCCCCC"> I'm</font>

938
00:36:52,589 --> 00:36:55,770
gonna give this<font color="#CCCCCC"> another run and if it</font>

939
00:36:54,480 --> 00:36:58,280
fails I'm gonna go have a beer and

940
00:36:55,770 --> 00:36:58,280
correct

941
00:37:08,560 --> 00:37:11,909
[Music]

942
00:37:15,519 --> 00:37:20,419
sorry<font color="#E5E5E5"> things like at this point it's</font>

943
00:37:18,589 --> 00:37:20,990
create the window objects and so it's

944
00:37:20,420 --> 00:37:23,749
<font color="#CCCCCC">gonna</font><font color="#E5E5E5"> target</font>

945
00:37:20,990 --> 00:37:25,399
<font color="#E5E5E5">throwing away the others then it's</font>

946
00:37:23,749 --> 00:37:29,319
<font color="#E5E5E5">usable</font><font color="#CCCCCC"> ich to find the address</font><font color="#E5E5E5"> of the</font>

947
00:37:25,400 --> 00:37:31,509
<font color="#CCCCCC">Silvie Winfield</font><font color="#E5E5E5"> in the primary window</font>

948
00:37:29,319 --> 00:37:40,599
this is<font color="#E5E5E5"> the actual memory corruption</font>

949
00:37:31,509 --> 00:37:43,099
<font color="#E5E5E5">taking place hopefully</font><font color="#CCCCCC"> Hey ah okay</font>

950
00:37:40,599 --> 00:37:44,599
<font color="#E5E5E5">anyway</font><font color="#CCCCCC"> I'm gonna put the code up for</font>

951
00:37:43,099 --> 00:37:45,650
that next week<font color="#CCCCCC"> I swear it was working</font>

952
00:37:44,599 --> 00:37:48,829
<font color="#E5E5E5">out here you'll have to take my word for</font>

953
00:37:45,650 --> 00:37:50,900
it and it will probably<font color="#E5E5E5"> be</font><font color="#CCCCCC"> uneven</font><font color="#E5E5E5"> mine</font>

954
00:37:48,829 --> 00:37:53,480
<font color="#E5E5E5">or</font><font color="#CCCCCC"> elapsed get help</font><font color="#E5E5E5"> I'll tweet about it</font>

955
00:37:50,900 --> 00:37:55,490
<font color="#CCCCCC">and</font><font color="#E5E5E5"> for all</font><font color="#CCCCCC"> over the place</font><font color="#E5E5E5"> um but that</font>

956
00:37:53,480 --> 00:37:56,990
did was at the point<font color="#E5E5E5"> where it was</font><font color="#CCCCCC"> kind</font>

957
00:37:55,490 --> 00:37:59,569
of<font color="#E5E5E5"> trivially enforceable to Windows 7</font><font color="#CCCCCC"> or</font>

958
00:37:56,990 --> 00:38:00,919
Windows 10<font color="#E5E5E5"> and there's some cool</font><font color="#CCCCCC"> tricks</font>

959
00:37:59,569 --> 00:38:02,299
the<font color="#CCCCCC"> authors did if</font><font color="#E5E5E5"> you look at most blog</font>

960
00:38:00,920 --> 00:38:05,269
<font color="#E5E5E5">posts to</font><font color="#CCCCCC"> do things on a</font><font color="#E5E5E5"> couple we'd</font>

961
00:38:02,299 --> 00:38:06,259
hard-coding offsets and so<font color="#E5E5E5"> basically all</font>

962
00:38:05,269 --> 00:38:08,328
<font color="#E5E5E5">we</font><font color="#CCCCCC"> had to change between Windows</font>

963
00:38:06,259 --> 00:38:09,619
versions<font color="#E5E5E5"> were system for numbers and</font><font color="#CCCCCC"> one</font>

964
00:38:08,329 --> 00:38:11,690
or two<font color="#E5E5E5"> offsets instructions</font><font color="#CCCCCC"> that</font>

965
00:38:09,619 --> 00:38:17,150
<font color="#E5E5E5">Microsoft only changes on major releases</font>

966
00:38:11,690 --> 00:38:20,130
<font color="#E5E5E5">and thank you</font><font color="#CCCCCC"> I'll try</font><font color="#E5E5E5"> to get a working</font>

967
00:38:17,150 --> 00:38:24,699
demo<font color="#E5E5E5"> up somewhere at some point</font>

968
00:38:20,130 --> 00:38:24,699
[Applause]

