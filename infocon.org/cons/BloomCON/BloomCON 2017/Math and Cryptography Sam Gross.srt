1
00:00:00,000 --> 00:00:09,389
unitech not recording her sure<font color="#E5E5E5"> okay</font>

2
00:00:08,069 --> 00:00:11,759
thanks everybody of showing up we have

3
00:00:09,389 --> 00:00:12,959
<font color="#CCCCCC">dr. Sam gross here from noblesse and</font>

4
00:00:11,759 --> 00:00:17,070
he's here to talk to you about math and

5
00:00:12,960 --> 00:00:20,039
<font color="#E5E5E5">cryptography so here he is thank you</font>

6
00:00:17,070 --> 00:00:24,390
thank<font color="#CCCCCC"> you I'm an</font><font color="#E5E5E5"> emergency fill in my</font>

7
00:00:20,039 --> 00:00:26,279
name is TBA and and I am officially

8
00:00:24,390 --> 00:00:30,570
<font color="#E5E5E5">licensed with the yellow badge now to</font>

9
00:00:26,279 --> 00:00:34,410
speak<font color="#E5E5E5"> out loud in public so I'm official</font>

10
00:00:30,570 --> 00:00:37,920
<font color="#E5E5E5">call official so about an hour ago I</font>

11
00:00:34,410 --> 00:00:39,809
took Oh half a dozen talks I've given

12
00:00:37,920 --> 00:00:43,890
over the last year to various clients

13
00:00:39,809 --> 00:00:45,360
etc merge them all together and stripped

14
00:00:43,890 --> 00:00:48,000
out any of<font color="#E5E5E5"> the sensitive sensitive or</font>

15
00:00:45,360 --> 00:00:49,200
classified parts and hopefully it works

16
00:00:48,000 --> 00:00:55,710
and there's<font color="#E5E5E5"> something interesting left</font>

17
00:00:49,200 --> 00:00:57,000
<font color="#E5E5E5">okay so some of my favorite things did I</font>

18
00:00:55,710 --> 00:01:00,449
promise you in the<font color="#E5E5E5"> first slides the</font>

19
00:00:57,000 --> 00:01:03,930
means and remember it was promised<font color="#E5E5E5"> okay</font>

20
00:01:00,449 --> 00:01:07,500
here<font color="#E5E5E5"> we go so I noblest we followed with</font>

21
00:01:03,930 --> 00:01:09,540
with with bounding laughter what

22
00:01:07,500 --> 00:01:11,880
happened in the FBI vs apple case and

23
00:01:09,540 --> 00:01:13,290
these<font color="#E5E5E5"> are</font><font color="#CCCCCC"> some of our favorites my</font>

24
00:01:11,880 --> 00:01:18,089
particular<font color="#CCCCCC"> favorite is up in the</font><font color="#E5E5E5"> top</font>

25
00:01:13,290 --> 00:01:20,220
right corner so in the interest of time

26
00:01:18,090 --> 00:01:22,049
<font color="#E5E5E5">and making this appear to be an official</font>

27
00:01:20,220 --> 00:01:24,950
talk all pause from<font color="#CCCCCC"> while you</font><font color="#E5E5E5"> read those</font>

28
00:01:22,049 --> 00:01:24,950
so I fill up the whole hour

29
00:01:26,940 --> 00:01:35,520
<font color="#E5E5E5">alright that was a compliment so some</font>

30
00:01:33,390 --> 00:01:37,080
<font color="#E5E5E5">other of our favorite current events you</font>

31
00:01:35,520 --> 00:01:38,280
might have remembered at some point in

32
00:01:37,080 --> 00:01:42,270
time getting a notification from

33
00:01:38,280 --> 00:01:44,490
LinkedIn to reset your password right so

34
00:01:42,270 --> 00:01:47,130
a big problem happened there and i have

35
00:01:44,490 --> 00:01:48,780
i have one particular<font color="#CCCCCC"> case that really</font>

36
00:01:47,130 --> 00:01:52,170
illustrates what happened quite well

37
00:01:48,780 --> 00:01:55,230
everybody knows our friend Mark

38
00:01:52,170 --> 00:01:57,030
Zuckerberg I mean Zuckerberg so he<font color="#E5E5E5"> was</font>

39
00:01:55,230 --> 00:01:58,350
<font color="#E5E5E5">affected by this and so he's admitting</font>

40
00:01:57,030 --> 00:02:00,810
something in this picture<font color="#E5E5E5"> I like to</font>

41
00:01:58,350 --> 00:02:03,270
thank and that's was that his password

42
00:02:00,810 --> 00:02:05,970
for at least one<font color="#CCCCCC"> of those sites was the</font>

43
00:02:03,270 --> 00:02:09,210
phrase da da da and<font color="#E5E5E5"> that and that site</font>

44
00:02:05,970 --> 00:02:12,120
hashed his password with md5 which you

45
00:02:09,210 --> 00:02:13,830
learn in the next talk my colleague mark

46
00:02:12,120 --> 00:02:17,400
sanders that's a horribly bad thing to

47
00:02:13,830 --> 00:02:20,760
<font color="#E5E5E5">do does anybody know the reference pull</font>

48
00:02:17,400 --> 00:02:24,030
the room anybody know the reference<font color="#E5E5E5"> at</font>

49
00:02:20,760 --> 00:02:27,929
<font color="#E5E5E5">all so I know this it's the 1980s hit</font>

50
00:02:24,030 --> 00:02:31,350
song by trio with the same title<font color="#E5E5E5"> da da</font>

51
00:02:27,930 --> 00:02:42,930
<font color="#E5E5E5">da made popular in a 1992 Volkswagen</font>

52
00:02:31,350 --> 00:02:47,040
commercial I hope they got that<font color="#CCCCCC"> alright</font>

53
00:02:42,930 --> 00:02:50,280
so there's my plug for<font color="#CCCCCC"> marks talk so the</font>

54
00:02:47,040 --> 00:02:56,130
RSA algorithm may know what the initials

55
00:02:50,280 --> 00:02:58,230
stand for yeah those<font color="#E5E5E5"> people so their</font>

56
00:02:56,130 --> 00:02:59,820
initials with the first last<font color="#E5E5E5"> name I love</font>

57
00:02:58,230 --> 00:03:03,690
that picture on<font color="#E5E5E5"> the left my favorites</font>

58
00:02:59,820 --> 00:03:06,750
1977 and we're still using it nineteen

59
00:03:03,690 --> 00:03:09,030
seventy-seven fun math facts because

60
00:03:06,750 --> 00:03:11,910
that's what I do all the mathematics /

61
00:03:09,030 --> 00:03:13,980
RSA was laid out by 1670 by Leonard

62
00:03:11,910 --> 00:03:17,190
Euler all of it there has been<font color="#E5E5E5"> nothing</font>

63
00:03:13,980 --> 00:03:21,899
no new<font color="#E5E5E5"> development in RSA since that</font>

64
00:03:17,190 --> 00:03:24,750
mathematical development since 1670 so

65
00:03:21,900 --> 00:03:26,250
how it<font color="#CCCCCC"> works so I talked about</font><font color="#E5E5E5"> this last</font>

66
00:03:24,750 --> 00:03:28,530
year so I guess this is kind of nice i

67
00:03:26,250 --> 00:03:30,120
get to<font color="#E5E5E5"> follow up on it so i won't go in</font>

68
00:03:28,530 --> 00:03:31,410
<font color="#CCCCCC">i won't bore you with lots of</font>

69
00:03:30,120 --> 00:03:34,830
mathematical details like i did last

70
00:03:31,410 --> 00:03:36,510
year so we<font color="#CCCCCC"> we pick</font><font color="#E5E5E5"> two really large</font>

71
00:03:34,830 --> 00:03:38,700
primes right so right now they're like

72
00:03:36,510 --> 00:03:40,060
three<font color="#E5E5E5"> hundred digits long period inches</font>

73
00:03:38,700 --> 00:03:41,290
long prime numbers we

74
00:03:40,060 --> 00:03:45,010
apply them together and<font color="#E5E5E5"> we get a product</font>

75
00:03:41,290 --> 00:03:47,140
the product is is what we call public

76
00:03:45,010 --> 00:03:49,090
key<font color="#E5E5E5"> and that's the information that's</font>

77
00:03:47,140 --> 00:03:50,829
used<font color="#E5E5E5"> to encrypt a message so I send you</font>

78
00:03:49,090 --> 00:03:52,959
my public key with Public Instruction

79
00:03:50,830 --> 00:03:55,180
saying here use this big number I just

80
00:03:52,959 --> 00:03:58,000
gave<font color="#CCCCCC"> you to encrypt whatever message you</font>

81
00:03:55,180 --> 00:03:59,769
want back to me right and<font color="#E5E5E5"> the reason why</font>

82
00:03:58,000 --> 00:04:01,090
why I can decrypt it and read your

83
00:03:59,769 --> 00:04:03,430
<font color="#E5E5E5">message and no one else in the universe</font>

84
00:04:01,090 --> 00:04:04,810
can is because I have some secret

85
00:04:03,430 --> 00:04:07,989
information and<font color="#E5E5E5"> that's the primes that I</font>

86
00:04:04,810 --> 00:04:10,150
started<font color="#CCCCCC"> with right so what's the</font><font color="#E5E5E5"> what's</font>

87
00:04:07,989 --> 00:04:14,739
the mathematical process that breaks our

88
00:04:10,150 --> 00:04:16,810
essay it's in that<font color="#E5E5E5"> picture that Emma's</font>

89
00:04:14,739 --> 00:04:22,030
brother Drew and crayons a little while

90
00:04:16,810 --> 00:04:25,210
ago yeah yeah so factoring the factoring

91
00:04:22,029 --> 00:04:26,469
problem is what breaks<font color="#CCCCCC"> RSA so so taking</font>

92
00:04:25,210 --> 00:04:29,530
a<font color="#CCCCCC"> number and factoring it into its</font>

93
00:04:26,470 --> 00:04:32,830
constituent<font color="#CCCCCC"> Prime's so on the right here</font>

94
00:04:29,530 --> 00:04:34,210
that's exactly what's happening so

95
00:04:32,830 --> 00:04:35,950
there's some<font color="#E5E5E5"> other information in the</font>

96
00:04:34,210 --> 00:04:39,940
picture does anybody notice anything

97
00:04:35,950 --> 00:04:42,639
<font color="#E5E5E5">else in the picture so the primes are</font>

98
00:04:39,940 --> 00:04:45,100
given<font color="#CCCCCC"> two two and three and two</font><font color="#E5E5E5"> three</font>

99
00:04:42,639 --> 00:04:46,360
and three but they weren't just listed

100
00:04:45,100 --> 00:04:47,919
some<font color="#E5E5E5"> of them were circled as well what's</font>

101
00:04:46,360 --> 00:04:52,330
<font color="#E5E5E5">the significance of the primes that are</font>

102
00:04:47,919 --> 00:04:54,070
circled the<font color="#E5E5E5"> math talk you're supposed to</font>

103
00:04:52,330 --> 00:04:57,789
participate

104
00:04:54,070 --> 00:04:59,409
<font color="#E5E5E5">no so that's the primes that they have</font>

105
00:04:57,790 --> 00:05:01,570
in common right we call it the<font color="#E5E5E5"> greatest</font>

106
00:04:59,410 --> 00:05:03,580
common<font color="#CCCCCC"> divisor then right</font><font color="#E5E5E5"> okay well it</font>

107
00:05:01,570 --> 00:05:04,840
<font color="#E5E5E5">turns out that if you have two numbers</font>

108
00:05:03,580 --> 00:05:06,820
it's really easy to calculate the

109
00:05:04,840 --> 00:05:09,310
greatest<font color="#CCCCCC"> common divisor so the question</font>

110
00:05:06,820 --> 00:05:11,650
is is what if we have<font color="#E5E5E5"> two public keys</font>

111
00:05:09,310 --> 00:05:15,790
that share a prime factor one of them

112
00:05:11,650 --> 00:05:18,370
right so<font color="#E5E5E5"> user a user 1 pick the</font><font color="#CCCCCC"> Prime's</font>

113
00:05:15,790 --> 00:05:21,250
<font color="#CCCCCC">P</font><font color="#E5E5E5"> and</font><font color="#CCCCCC"> Q and user to pick the prime P and</font>

114
00:05:18,370 --> 00:05:22,300
some other prime are all right remember

115
00:05:21,250 --> 00:05:25,300
those are given out in public to the

116
00:05:22,300 --> 00:05:26,890
<font color="#E5E5E5">whole world right and if an adversary or</font>

117
00:05:25,300 --> 00:05:28,270
something in the middle calculates the

118
00:05:26,890 --> 00:05:31,960
greatest<font color="#CCCCCC"> common divisor they'll recover</font>

119
00:05:28,270 --> 00:05:33,580
p and simple division will give give our

120
00:05:31,960 --> 00:05:35,200
and you have the q and r<font color="#E5E5E5"> and give the</font>

121
00:05:33,580 --> 00:05:36,250
keys to the kingdom right and

122
00:05:35,200 --> 00:05:39,219
calculating the greatest common<font color="#CCCCCC"> divisor</font>

123
00:05:36,250 --> 00:05:41,950
is pretty pretty quick for numbers of

124
00:05:39,220 --> 00:05:45,520
this scale using 30 digit<font color="#E5E5E5"> primes it took</font>

125
00:05:41,950 --> 00:05:48,580
<font color="#CCCCCC">three point or I'm sorry point zero</font>

126
00:05:45,520 --> 00:05:49,570
<font color="#E5E5E5">three</font><font color="#CCCCCC"> 14 seconds</font><font color="#E5E5E5"> on my laptop right here</font>

127
00:05:48,580 --> 00:05:52,780
to calculate a greatest common divisor

128
00:05:49,570 --> 00:05:56,950
at that scale<font color="#E5E5E5"> that was a pied a pun</font><font color="#CCCCCC"> but</font>

129
00:05:52,780 --> 00:05:59,469
<font color="#E5E5E5">I know that was long past but</font><font color="#CCCCCC"> really</font><font color="#E5E5E5"> was</font>

130
00:05:56,950 --> 00:06:03,670
there I appointed 14 seconds did it

131
00:05:59,470 --> 00:06:06,820
<font color="#E5E5E5">actually happen so it's really really</font>

132
00:06:03,670 --> 00:06:08,350
fast so what you would really like to do

133
00:06:06,820 --> 00:06:10,240
<font color="#CCCCCC">is scan the entire public facing</font>

134
00:06:08,350 --> 00:06:11,590
internet right and you're going to<font color="#CCCCCC"> get</font>

135
00:06:10,240 --> 00:06:13,900
something<font color="#E5E5E5"> on</font><font color="#CCCCCC"> the order of like a</font><font color="#E5E5E5"> hundred</font>

136
00:06:11,590 --> 00:06:17,109
million public keys right just from TLS

137
00:06:13,900 --> 00:06:18,190
certificate alone all right and<font color="#E5E5E5"> then</font>

138
00:06:17,110 --> 00:06:20,440
what you<font color="#CCCCCC"> would really like to do is see</font>

139
00:06:18,190 --> 00:06:22,450
which ones you can break<font color="#CCCCCC"> all right so</font>

140
00:06:20,440 --> 00:06:24,640
every pair of distinct TLS certificate

141
00:06:22,450 --> 00:06:27,430
you want to calculate a greatest common

142
00:06:24,640 --> 00:06:28,900
divisor of right so that's on the order

143
00:06:27,430 --> 00:06:30,550
of like a hundred<font color="#E5E5E5"> million choose to</font>

144
00:06:28,900 --> 00:06:32,530
calculations for those of you that took

145
00:06:30,550 --> 00:06:35,440
like probability and stats right basic

146
00:06:32,530 --> 00:06:36,669
stats class so that ranks up there with

147
00:06:35,440 --> 00:06:38,080
like intractable right because you're

148
00:06:36,670 --> 00:06:44,320
looking<font color="#CCCCCC"> at hundreds of years to do that</font>

149
00:06:38,080 --> 00:06:46,150
<font color="#E5E5E5">okay so this happened with a data set</font>

150
00:06:44,320 --> 00:06:49,030
has happened a couple a month ago with

151
00:06:46,150 --> 00:06:51,789
the<font color="#E5E5E5"> data set from</font><font color="#CCCCCC"> November and this is</font>

152
00:06:49,030 --> 00:06:54,159
data from a scan in November 2016 of the

153
00:06:51,790 --> 00:06:57,310
entire public facing internet right all

154
00:06:54,160 --> 00:06:58,660
<font color="#CCCCCC">of it and this comparison paralyzes</font>

155
00:06:57,310 --> 00:06:59,950
every possible public key that's out

156
00:06:58,660 --> 00:07:01,930
there in the public facing internet and

157
00:06:59,950 --> 00:07:04,990
there's the results of how<font color="#E5E5E5"> many of them</font>

158
00:07:01,930 --> 00:07:06,460
share distinct prime factor right some

159
00:07:04,990 --> 00:07:07,750
people are still using export grade

160
00:07:06,460 --> 00:07:11,500
cryptography at

161
00:07:07,750 --> 00:07:13,090
512<font color="#CCCCCC"> but level anybody still have like an</font>

162
00:07:11,500 --> 00:07:14,710
old router from the 90s that still

163
00:07:13,090 --> 00:07:17,530
plugged in to their internet at home

164
00:07:14,710 --> 00:07:21,489
yeah I wouldn't<font color="#E5E5E5"> I wouldn't use that</font>

165
00:07:17,530 --> 00:07:23,109
that's probably<font color="#CCCCCC"> those 142,000 and that's</font>

166
00:07:21,490 --> 00:07:24,550
just<font color="#CCCCCC"> in TLS certificates right that's</font>

167
00:07:23,110 --> 00:07:26,020
<font color="#CCCCCC">not from all the other variants of the</font>

168
00:07:24,550 --> 00:07:28,030
RSA protocol that are out there as a

169
00:07:26,020 --> 00:07:31,419
standard right just just TLS certificate

170
00:07:28,030 --> 00:07:33,309
1024-bit is the real scary one because

171
00:07:31,420 --> 00:07:35,230
that still a standard people<font color="#E5E5E5"> still</font>

172
00:07:33,310 --> 00:07:38,260
widely widely use it look at that 12

173
00:07:35,230 --> 00:07:40,120
almost 13 million 13 million devices

174
00:07:38,260 --> 00:07:43,240
servers connected with TLS certificate

175
00:07:40,120 --> 00:07:45,160
it's a surprising number how long do you

176
00:07:43,240 --> 00:07:48,550
think this took for us to do it probably

177
00:07:45,160 --> 00:07:52,480
not hundreds of years right four hours

178
00:07:48,550 --> 00:07:55,000
four hours so our team at noblesse we

179
00:07:52,480 --> 00:07:56,770
developed a really<font color="#E5E5E5"> nice algorithm that</font>

180
00:07:55,000 --> 00:07:59,020
does this massive greatest common

181
00:07:56,770 --> 00:08:00,849
divisor computation by not doing it

182
00:07:59,020 --> 00:08:04,000
pairwise doing it in a very nice way

183
00:08:00,850 --> 00:08:05,740
very clever way i<font color="#E5E5E5"> should add so some</font>

184
00:08:04,000 --> 00:08:07,419
wonderful developers<font color="#CCCCCC"> that worked on</font><font color="#E5E5E5"> that</font>

185
00:08:05,740 --> 00:08:11,919
<font color="#CCCCCC">daniel you helped us work on it raise</font>

186
00:08:07,419 --> 00:08:13,419
your hand Daniel yay all right<font color="#E5E5E5"> yeah so</font>

187
00:08:11,919 --> 00:08:15,159
the mathematics of it was absolutely fun

188
00:08:13,419 --> 00:08:19,060
and I'm sure Daniel say the software

189
00:08:15,160 --> 00:08:20,530
development was too yeah so four hours

190
00:08:19,060 --> 00:08:23,050
oh and I should<font color="#CCCCCC"> mention it's like an</font>

191
00:08:20,530 --> 00:08:25,750
off-the-shelf box all rather robust box

192
00:08:23,050 --> 00:08:27,370
that did it in four hours so I think<font color="#E5E5E5"> it</font>

193
00:08:25,750 --> 00:08:29,979
has like six hundred gigabytes of RAM

194
00:08:27,370 --> 00:08:34,419
and the total machine costs like maybe

195
00:08:29,979 --> 00:08:36,370
two thousand dollars to do it yeah so

196
00:08:34,419 --> 00:08:38,380
not that<font color="#E5E5E5"> bad and I think on a laptop we</font>

197
00:08:36,370 --> 00:08:40,360
actually did a test case on a laptop we

198
00:08:38,380 --> 00:08:42,789
ran out of ram for the 2048-bit case but

199
00:08:40,360 --> 00:08:47,440
we did<font color="#CCCCCC"> the 1024 is in like seven</font><font color="#E5E5E5"> days on</font>

200
00:08:42,789 --> 00:08:49,540
a laptop yeah so it works it works<font color="#E5E5E5"> and</font>

201
00:08:47,440 --> 00:08:53,980
<font color="#E5E5E5">you</font><font color="#CCCCCC"> can detect</font><font color="#E5E5E5"> keys that are that are</font>

202
00:08:49,540 --> 00:08:55,270
vulnerable like that<font color="#CCCCCC"> alright so we hope</font>

203
00:08:53,980 --> 00:08:57,160
<font color="#E5E5E5">that the factoring problem is</font>

204
00:08:55,270 --> 00:08:58,630
intractable when we just saw that it's

205
00:08:57,160 --> 00:09:00,880
<font color="#E5E5E5">very important to pick Prime's that</font>

206
00:08:58,630 --> 00:09:03,160
nobody else in<font color="#E5E5E5"> the world is picked when</font>

207
00:09:00,880 --> 00:09:06,790
you form your public key so what does

208
00:09:03,160 --> 00:09:11,350
intractable mean well the next sort of

209
00:09:06,790 --> 00:09:13,990
standard in breaking RSA so in 2010 768

210
00:09:11,350 --> 00:09:15,790
bit key was factored and that's the

211
00:09:13,990 --> 00:09:17,170
record factorization of a large number

212
00:09:15,790 --> 00:09:19,329
right now seven or sixty eight bits from

213
00:09:17,170 --> 00:09:21,790
2010 at<font color="#E5E5E5"> least the public record</font>

214
00:09:19,329 --> 00:09:24,128
so 1024 that is like the<font color="#E5E5E5"> next big</font>

215
00:09:21,790 --> 00:09:25,389
standard right you might<font color="#E5E5E5"> say that 768</font>

216
00:09:24,129 --> 00:09:26,619
but it really isn't standard but when

217
00:09:25,389 --> 00:09:27,790
you start using it in like digital

218
00:09:26,619 --> 00:09:29,350
signature schemes and things like that

219
00:09:27,790 --> 00:09:32,709
you'll see lots of variants and key

220
00:09:29,350 --> 00:09:35,920
sizes right so what's the cost of

221
00:09:32,709 --> 00:09:38,378
breaking it so the<font color="#CCCCCC"> record goes to arjun</font>

222
00:09:35,920 --> 00:09:40,449
<font color="#CCCCCC">lundström oh I don't</font><font color="#E5E5E5"> think</font><font color="#CCCCCC"> Arjun is</font>

223
00:09:38,379 --> 00:09:42,699
going to pop up for<font color="#E5E5E5"> study areas the</font>

224
00:09:40,449 --> 00:09:46,089
record holder is<font color="#E5E5E5"> Arjun monstre who wrote</font>

225
00:09:42,699 --> 00:09:48,339
a paper in 2005 designing this really

226
00:09:46,089 --> 00:09:50,709
<font color="#E5E5E5">really nice machine a theoretical</font>

227
00:09:48,339 --> 00:09:53,439
machine and the development<font color="#E5E5E5"> costs of</font>

228
00:09:50,709 --> 00:09:55,599
building such machine was estimated

229
00:09:53,439 --> 00:09:57,670
about 80 million dollars and specialized

230
00:09:55,600 --> 00:09:59,769
hardware to do this and it uses an

231
00:09:57,670 --> 00:10:01,689
optical sensor right so when the

232
00:09:59,769 --> 00:10:03,939
computation that I'm<font color="#E5E5E5"> going</font><font color="#CCCCCC"> to</font><font color="#E5E5E5"> talk about</font>

233
00:10:01,689 --> 00:10:05,589
later finds a number of interests rather

234
00:10:03,939 --> 00:10:08,349
than<font color="#E5E5E5"> testing it</font><font color="#CCCCCC"> to make sure</font><font color="#E5E5E5"> it's what</font>

235
00:10:05,589 --> 00:10:09,999
we want and LED flashes on the

236
00:10:08,350 --> 00:10:11,799
<font color="#E5E5E5">motherboard and an optical sensor</font>

237
00:10:09,999 --> 00:10:13,329
records the frequency<font color="#CCCCCC"> that the LED</font>

238
00:10:11,799 --> 00:10:15,549
flashes that for that split moment in

239
00:10:13,329 --> 00:10:17,109
time and uses that to probabilistically

240
00:10:15,549 --> 00:10:19,689
determine some interval of that special

241
00:10:17,110 --> 00:10:21,339
value lives in to follow up on later so

242
00:10:19,689 --> 00:10:23,259
it can immediately determine lots of

243
00:10:21,339 --> 00:10:25,509
<font color="#E5E5E5">these values right at the speed of light</font>

244
00:10:23,259 --> 00:10:27,730
essentially or very close to it rather

245
00:10:25,509 --> 00:10:29,230
than plugging in a number right checking

246
00:10:27,730 --> 00:10:31,119
the output see if it's good okay now

247
00:10:29,230 --> 00:10:35,350
verifying the output think it's good

248
00:10:31,119 --> 00:10:36,459
yeah so with<font color="#E5E5E5"> this special machine that</font>

249
00:10:35,350 --> 00:10:39,129
by the way has never been built before

250
00:10:36,459 --> 00:10:43,329
it exists only in a paper can you wait

251
00:10:39,129 --> 00:10:50,139
to the end Emma<font color="#E5E5E5"> okay no way to the end I</font>

252
00:10:43,329 --> 00:10:55,748
got<font color="#E5E5E5"> time it sorry it's fast like a</font>

253
00:10:50,139 --> 00:10:57,579
cheetah so it's never been built before

254
00:10:55,749 --> 00:11:01,209
never been built before it's in a paper

255
00:10:57,579 --> 00:11:03,549
and the electricity costs in 2005 putted

256
00:11:01,209 --> 00:11:05,888
it like 70 million dollars just to run

257
00:11:03,549 --> 00:11:11,199
that machine for a year to break 1024

258
00:11:05,889 --> 00:11:13,389
bit RSA<font color="#CCCCCC"> alright so I want to drop the</font>

259
00:11:11,199 --> 00:11:15,219
microphone but I need it here we have a

260
00:11:13,389 --> 00:11:17,889
new heuristic as of like maybe a month

261
00:11:15,220 --> 00:11:21,309
ago it's going to<font color="#E5E5E5"> cost zero dollars and</font>

262
00:11:17,889 --> 00:11:23,199
specialized hardware and we can do it in

263
00:11:21,309 --> 00:11:25,839
a year like up to<font color="#CCCCCC"> a year and</font><font color="#E5E5E5"> to do it in</font>

264
00:11:23,199 --> 00:11:27,969
<font color="#E5E5E5">the year it'll cost like</font><font color="#CCCCCC"> 60 5.7 million</font>

265
00:11:25,839 --> 00:11:29,410
dollars so still a lot<font color="#CCCCCC"> of money i'm</font>

266
00:11:27,970 --> 00:11:32,199
still waiting on somebody to give me<font color="#E5E5E5"> 60</font>

267
00:11:29,410 --> 00:11:33,010
5.7 million dollars to try if<font color="#E5E5E5"> anybody</font>

268
00:11:32,199 --> 00:11:36,819
knows anybody

269
00:11:33,010 --> 00:11:40,360
I'd like<font color="#CCCCCC"> to know somebody to we can be</font>

270
00:11:36,820 --> 00:11:42,340
friends but<font color="#E5E5E5"> not on facebook as we saw</font>

271
00:11:40,360 --> 00:11:46,330
what Mark did with<font color="#CCCCCC"> Agilent not do that</font>

272
00:11:42,340 --> 00:11:48,040
<font color="#CCCCCC">all right so I want</font><font color="#E5E5E5"> to talk about how</font>

273
00:11:46,330 --> 00:11:50,380
the<font color="#CCCCCC"> state-of-the-art</font><font color="#E5E5E5"> process works right</font>

274
00:11:48,040 --> 00:11:51,969
so what was it Arjun monsters doing and

275
00:11:50,380 --> 00:11:56,110
what research have we been doing<font color="#CCCCCC"> in</font>

276
00:11:51,970 --> 00:11:58,030
things like<font color="#E5E5E5"> that so just like in the</font>

277
00:11:56,110 --> 00:12:01,360
<font color="#E5E5E5">case of where our essay came from what</font>

278
00:11:58,030 --> 00:12:02,770
did I say 1670 so where does where does

279
00:12:01,360 --> 00:12:05,860
the eye of the mathematical ideas for

280
00:12:02,770 --> 00:12:08,829
breaking our essay come from not 1970

281
00:12:05,860 --> 00:12:11,320
right so everything<font color="#CCCCCC"> that we have today</font>

282
00:12:08,830 --> 00:12:13,240
for breaking our essay comes from a long

283
00:12:11,320 --> 00:12:16,720
<font color="#E5E5E5">time</font><font color="#CCCCCC"> ago and offers far far away there</font>

284
00:12:13,240 --> 00:12:20,290
was this idea at the sky pfm all right I

285
00:12:16,720 --> 00:12:22,390
write about<font color="#E5E5E5"> 1650 before the</font><font color="#CCCCCC"> math for</font><font color="#E5E5E5"> RSA</font>

286
00:12:20,290 --> 00:12:24,310
was even laid out and he<font color="#E5E5E5"> wanted to know</font>

287
00:12:22,390 --> 00:12:25,689
how do you factor numbers quickly right

288
00:12:24,310 --> 00:12:27,250
you don't want to just check divisors

289
00:12:25,690 --> 00:12:30,730
right that was really boring in

290
00:12:27,250 --> 00:12:33,220
elementary school and<font color="#CCCCCC"> it's still lame so</font>

291
00:12:30,730 --> 00:12:35,170
so he<font color="#CCCCCC"> jiri phrased the question to how</font>

292
00:12:33,220 --> 00:12:36,580
do we find square square numbers every

293
00:12:35,170 --> 00:12:42,699
knows<font color="#E5E5E5"> the square number is right for</font>

294
00:12:36,580 --> 00:12:44,200
nine not 1760 no work right<font color="#E5E5E5"> okay oh yeah</font>

295
00:12:42,700 --> 00:12:48,490
I<font color="#CCCCCC"> even got a picture just glad that</font>

296
00:12:44,200 --> 00:12:50,140
worked<font color="#CCCCCC"> so here is this idea what if we</font>

297
00:12:48,490 --> 00:12:51,910
<font color="#E5E5E5">could find two squares whole number</font>

298
00:12:50,140 --> 00:12:54,220
squares and look at their difference

299
00:12:51,910 --> 00:12:55,719
right we know from like<font color="#E5E5E5"> fifth grade how</font>

300
00:12:54,220 --> 00:12:58,870
a difference of<font color="#E5E5E5"> squares factors right</font>

301
00:12:55,720 --> 00:13:00,460
just like that and pheromones idea was

302
00:12:58,870 --> 00:13:03,190
well what if we<font color="#E5E5E5"> could find two squares</font>

303
00:13:00,460 --> 00:13:07,000
whose difference is divisible by n right

304
00:13:03,190 --> 00:13:09,370
then all of the all of the factors of n

305
00:13:07,000 --> 00:13:12,190
would have to be spread<font color="#E5E5E5"> out between the</font>

306
00:13:09,370 --> 00:13:15,610
divisors of<font color="#E5E5E5"> X minus y and X plus y right</font>

307
00:13:12,190 --> 00:13:18,340
there's this bad case where well what if

308
00:13:15,610 --> 00:13:20,290
what if X minus y is 0 and x and y are

309
00:13:18,340 --> 00:13:21,370
actually the same and all the divisors

310
00:13:20,290 --> 00:13:25,420
live in there then we get no information

311
00:13:21,370 --> 00:13:27,460
right no<font color="#E5E5E5"> information at all but but if</font>

312
00:13:25,420 --> 00:13:29,680
we can find two squares such that

313
00:13:27,460 --> 00:13:34,270
neither of these<font color="#CCCCCC"> are entirely divisible</font>

314
00:13:29,680 --> 00:13:36,520
by n then<font color="#CCCCCC"> we can take a gcd of say the</font>

315
00:13:34,270 --> 00:13:39,160
number<font color="#E5E5E5"> n and x minus y and</font><font color="#CCCCCC"> that will</font>

316
00:13:36,520 --> 00:13:41,590
give us back a prime factor alright so

317
00:13:39,160 --> 00:13:43,990
that was fair<font color="#CCCCCC"> Amma's idea so here's an</font>

318
00:13:41,590 --> 00:13:46,570
example<font color="#CCCCCC"> I counted on my fingers for this</font>

319
00:13:43,990 --> 00:13:50,440
and you can you can have a calculator

320
00:13:46,570 --> 00:13:53,830
you can check me hopefully and it's<font color="#E5E5E5"> 2041</font>

321
00:13:50,440 --> 00:13:56,980
you can pick X is 311 and why is 14 16

322
00:13:53,830 --> 00:14:00,670
and there's the squares and there's x

323
00:13:56,980 --> 00:14:02,589
squared minus y squared and and there's

324
00:14:00,670 --> 00:14:05,920
<font color="#E5E5E5">the greatest</font><font color="#CCCCCC"> common divisor of</font><font color="#E5E5E5"> X minus y</font>

325
00:14:02,589 --> 00:14:09,070
and you get back 13 so what happens if

326
00:14:05,920 --> 00:14:12,219
you divide if you divide x squared minus

327
00:14:09,070 --> 00:14:13,779
y squared x 13 you can reduce it again

328
00:14:12,220 --> 00:14:16,630
and<font color="#E5E5E5"> keep getting more prime factors</font>

329
00:14:13,779 --> 00:14:17,649
until until you don't<font color="#E5E5E5"> have until you</font>

330
00:14:16,630 --> 00:14:21,760
have one of these that<font color="#E5E5E5"> are evenly</font>

331
00:14:17,649 --> 00:14:23,260
divisible by by the<font color="#CCCCCC"> quotient okay any</font>

332
00:14:21,760 --> 00:14:25,510
questions<font color="#E5E5E5"> about that</font><font color="#CCCCCC"> that's like the</font>

333
00:14:23,260 --> 00:14:30,490
highlight of everything it's all

334
00:14:25,510 --> 00:14:32,620
downhill from here maybe so where have

335
00:14:30,490 --> 00:14:34,180
we gone since then so every modern

336
00:14:32,620 --> 00:14:36,490
factoring algorithm that come<font color="#CCCCCC"> around has</font>

337
00:14:34,180 --> 00:14:38,709
relied on finding these differences of

338
00:14:36,490 --> 00:14:42,520
squares that Fair my love dad<font color="#E5E5E5"> all right</font>

339
00:14:38,709 --> 00:14:44,199
everyone of them so so<font color="#E5E5E5"> Dixon 1981 had</font>

340
00:14:42,520 --> 00:14:46,630
the first real big breakthrough in his

341
00:14:44,200 --> 00:14:49,029
random squares method and that was a way

342
00:14:46,630 --> 00:14:51,459
of<font color="#E5E5E5"> not going start to finish checking</font>

343
00:14:49,029 --> 00:14:52,720
every square but just randomly<font color="#CCCCCC"> have you</font>

344
00:14:51,459 --> 00:14:54,369
know some<font color="#E5E5E5"> random number generator and</font>

345
00:14:52,720 --> 00:14:55,540
looking at random values of squares and

346
00:14:54,370 --> 00:14:58,870
checking them and that sped it up quite

347
00:14:55,540 --> 00:15:00,279
<font color="#E5E5E5">a bit Carl Pomerance Peter Montgomery</font>

348
00:14:58,870 --> 00:15:02,980
and George Pollard or on there as<font color="#CCCCCC"> well</font>

349
00:15:00,279 --> 00:15:07,180
so<font color="#CCCCCC"> I have</font><font color="#E5E5E5"> some pictures there's Dixon</font>

350
00:15:02,980 --> 00:15:09,100
there's Carl that actually happens to be

351
00:15:07,180 --> 00:15:12,250
Carl at the University of South Carolina

352
00:15:09,100 --> 00:15:13,600
from last year when<font color="#CCCCCC"> we were having a</font>

353
00:15:12,250 --> 00:15:16,000
<font color="#CCCCCC">conversation about something that</font><font color="#E5E5E5"> I'm</font>

354
00:15:13,600 --> 00:15:19,300
very proud to talk about today so

355
00:15:16,000 --> 00:15:22,600
there's Carl quadratic sieve<font color="#CCCCCC"> discoverer</font>

356
00:15:19,300 --> 00:15:24,969
<font color="#E5E5E5">Peter Montgomery had an idea when he was</font>

357
00:15:22,600 --> 00:15:26,560
when he was coding<font color="#E5E5E5"> this algorithm of</font>

358
00:15:24,970 --> 00:15:27,880
<font color="#E5E5E5">Carl's of how to speed it up so we'll</font>

359
00:15:26,560 --> 00:15:29,770
talk<font color="#E5E5E5"> about that on the next slide too</font>

360
00:15:27,880 --> 00:15:32,770
and then George Pollard had a very

361
00:15:29,770 --> 00:15:34,480
clever idea there's George for how to

362
00:15:32,770 --> 00:15:36,250
factor very special numbers of<font color="#E5E5E5"> 2 to the</font>

363
00:15:34,480 --> 00:15:41,230
<font color="#E5E5E5">K minus 1 they may seen numbers like</font>

364
00:15:36,250 --> 00:15:42,250
that<font color="#E5E5E5"> before powers of 2 minus 1 what's</font>

365
00:15:41,230 --> 00:15:47,590
that

366
00:15:42,250 --> 00:15:49,060
oh yeah they could pop up there but in

367
00:15:47,590 --> 00:15:52,120
terms of like factoring in<font color="#CCCCCC"> Prime's</font>

368
00:15:49,060 --> 00:15:54,550
there's this great site called the great

369
00:15:52,120 --> 00:15:55,750
internet<font color="#CCCCCC"> Marcin prime search and so</font>

370
00:15:54,550 --> 00:15:58,390
numbers like that that happen to be

371
00:15:55,750 --> 00:15:59,980
<font color="#E5E5E5">prime are called</font><font color="#CCCCCC"> Marcin primes and</font><font color="#E5E5E5"> those</font>

372
00:15:58,390 --> 00:16:01,600
<font color="#E5E5E5">are actually very important for elliptic</font>

373
00:15:59,980 --> 00:16:04,480
curve cryptography for finding<font color="#E5E5E5"> Mar</font>

374
00:16:01,600 --> 00:16:06,340
sometimes they make<font color="#CCCCCC"> very good look the</font>

375
00:16:04,480 --> 00:16:09,370
curves but that's another talk all

376
00:16:06,340 --> 00:16:14,530
together so complexity analysis analysis

377
00:16:09,370 --> 00:16:16,180
here's the runtime<font color="#CCCCCC"> of it so the fair mom</font>

378
00:16:14,530 --> 00:16:18,430
<font color="#CCCCCC">essa dove just</font><font color="#E5E5E5"> checking every square</font>

379
00:16:16,180 --> 00:16:20,979
right is exponential time runs an

380
00:16:18,430 --> 00:16:23,199
exponential time and if you had any

381
00:16:20,980 --> 00:16:24,970
complexity theory classes or<font color="#CCCCCC"> anything or</font>

382
00:16:23,200 --> 00:16:27,340
looked at runtime analysis of algorithms

383
00:16:24,970 --> 00:16:29,440
you'll see that these are now all sub

384
00:16:27,340 --> 00:16:32,560
exponential subjects Mitchell albums so

385
00:16:29,440 --> 00:16:35,260
they're faster so<font color="#E5E5E5"> Dixon's random squares</font>

386
00:16:32,560 --> 00:16:38,170
method was looking at the output<font color="#E5E5E5"> of the</font>

387
00:16:35,260 --> 00:16:40,360
<font color="#CCCCCC">polynomial f of x</font><font color="#E5E5E5"> equals x squared right</font>

388
00:16:38,170 --> 00:16:42,370
and<font color="#E5E5E5"> using those right and of course</font>

389
00:16:40,360 --> 00:16:45,580
bouncing around at random between values

390
00:16:42,370 --> 00:16:47,830
<font color="#CCCCCC">of that polynomial Pomerance is big idea</font>

391
00:16:45,580 --> 00:16:49,839
<font color="#CCCCCC">for the quadratic</font><font color="#E5E5E5"> sieve was to use x</font>

392
00:16:47,830 --> 00:16:52,270
squared minus n to try to find squares

393
00:16:49,839 --> 00:16:53,830
whose difference is divisible by n right

394
00:16:52,270 --> 00:16:55,150
and you can see<font color="#E5E5E5"> what happened in the</font>

395
00:16:53,830 --> 00:16:58,120
constant it went from the square root of

396
00:16:55,150 --> 00:16:59,620
<font color="#CCCCCC">8 down to one in the exponent and that</font>

397
00:16:58,120 --> 00:17:01,839
was rather significant and set some

398
00:16:59,620 --> 00:17:04,810
records which you can google in the

399
00:17:01,839 --> 00:17:06,670
<font color="#E5E5E5">early 90s so when</font><font color="#CCCCCC"> peter Montgomery</font><font color="#E5E5E5"> coded</font>

400
00:17:04,810 --> 00:17:10,929
this up he found that<font color="#E5E5E5"> the run time</font>

401
00:17:06,670 --> 00:17:14,650
increases exponentially as as values of

402
00:17:10,930 --> 00:17:17,410
x squared get far away from square root

403
00:17:14,650 --> 00:17:19,270
of n so the further away your input<font color="#E5E5E5"> X is</font>

404
00:17:17,410 --> 00:17:21,880
from square root of n the longer it's

405
00:17:19,270 --> 00:17:24,520
going to take to check<font color="#E5E5E5"> those right to</font>

406
00:17:21,880 --> 00:17:26,140
check those so he said well what if what

407
00:17:24,520 --> 00:17:28,389
if as<font color="#E5E5E5"> you start to get far away</font><font color="#CCCCCC"> from</font>

408
00:17:26,140 --> 00:17:31,420
square root of n right you bring it back

409
00:17:28,390 --> 00:17:33,010
right you just do a linear composition

410
00:17:31,420 --> 00:17:35,020
or a linear shift everybody's done this

411
00:17:33,010 --> 00:17:37,660
and like pre alg in precalculus right

412
00:17:35,020 --> 00:17:39,730
linear shift of<font color="#E5E5E5"> the graph bring it back</font>

413
00:17:37,660 --> 00:17:41,740
<font color="#CCCCCC">use use two numbers a and B that are</font>

414
00:17:39,730 --> 00:17:44,110
that are relatively prime no<font color="#E5E5E5"> devices in</font>

415
00:17:41,740 --> 00:17:46,810
common to bring the input back close to

416
00:17:44,110 --> 00:17:48,610
square<font color="#CCCCCC"> root of n all right enormous</font>

417
00:17:46,810 --> 00:17:50,139
speed up and set a lot more records cut

418
00:17:48,610 --> 00:17:54,459
the exponent and a half this time from

419
00:17:50,140 --> 00:17:55,660
one down to a half right so Pollard's

420
00:17:54,460 --> 00:17:55,950
algorithm we won't talk about<font color="#E5E5E5"> it too</font>

421
00:17:55,660 --> 00:17:57,600
much

422
00:17:55,950 --> 00:18:00,360
except for<font color="#E5E5E5"> it</font><font color="#CCCCCC"> was for that special case</font>

423
00:17:57,600 --> 00:18:02,908
but<font color="#CCCCCC"> carl palmer instance and Friends of</font>

424
00:18:00,360 --> 00:18:05,969
his came along in 1992 and generalized

425
00:18:02,909 --> 00:18:07,710
it to what we call now the general

426
00:18:05,970 --> 00:18:09,179
number field sieve and this is the state

427
00:18:07,710 --> 00:18:11,820
of the art algorithm for factoring the

428
00:18:09,179 --> 00:18:14,340
general number field sieve and just to

429
00:18:11,820 --> 00:18:18,269
go<font color="#CCCCCC"> back and</font><font color="#E5E5E5"> forth so look at the</font>

430
00:18:14,340 --> 00:18:20,490
complexity right the the power on the

431
00:18:18,269 --> 00:18:22,889
login factor and the exponent for all of

432
00:18:20,490 --> 00:18:23,970
them is one half right the powers all

433
00:18:22,889 --> 00:18:26,158
one half and the only thing that's

434
00:18:23,970 --> 00:18:29,610
changed is that linear constant out

435
00:18:26,159 --> 00:18:32,070
front<font color="#CCCCCC"> right so the term in the runtime</font>

436
00:18:29,610 --> 00:18:34,080
that's controlling right how long the

437
00:18:32,070 --> 00:18:36,120
algorithm is going to take right the

438
00:18:34,080 --> 00:18:40,710
biggest contributor to it is that<font color="#E5E5E5"> power</font>

439
00:18:36,120 --> 00:18:42,479
on on the logarithm term all right and

440
00:18:40,710 --> 00:18:45,510
what happened they got cut from a half

441
00:18:42,480 --> 00:18:47,610
down to one third right very<font color="#E5E5E5"> very big</font>

442
00:18:45,510 --> 00:18:51,899
saving and that was what is responsible

443
00:18:47,610 --> 00:18:53,879
<font color="#CCCCCC">for the 2010 factoring record of the 768</font>

444
00:18:51,899 --> 00:18:56,789
<font color="#E5E5E5">bit number it took about three years of</font>

445
00:18:53,880 --> 00:18:59,130
computing across academic clusters all

446
00:18:56,789 --> 00:19:05,279
over the world due in three years<font color="#E5E5E5"> and</font>

447
00:18:59,130 --> 00:19:07,110
was quite<font color="#E5E5E5"> a quite a deal you paid</font>

448
00:19:05,279 --> 00:19:13,380
attention put your picture up there for

449
00:19:07,110 --> 00:19:15,658
a reason that's not Hugh<font color="#E5E5E5"> okay</font><font color="#CCCCCC"> all right</font>

450
00:19:13,380 --> 00:19:16,950
so how does it<font color="#E5E5E5"> work how does it work so</font>

451
00:19:15,659 --> 00:19:20,610
it should go<font color="#E5E5E5"> back to this idea of fair</font>

452
00:19:16,950 --> 00:19:22,289
<font color="#CCCCCC">mom right</font><font color="#E5E5E5"> if a bit a little bit of</font>

453
00:19:20,610 --> 00:19:24,059
linear<font color="#CCCCCC"> algebra you remember solving</font>

454
00:19:22,289 --> 00:19:25,440
systems of linear equations like in high

455
00:19:24,059 --> 00:19:30,090
school<font color="#E5E5E5"> all right that's all you need</font>

456
00:19:25,440 --> 00:19:31,230
here<font color="#CCCCCC"> okay so a definition what we want</font>

457
00:19:30,090 --> 00:19:33,360
to<font color="#CCCCCC"> look for is we want</font><font color="#E5E5E5"> to look for</font>

458
00:19:31,230 --> 00:19:35,639
numbers that are smooth so we picked

459
00:19:33,360 --> 00:19:38,370
some really big bound and we want to

460
00:19:35,639 --> 00:19:41,370
find numbers all of whose prime factors

461
00:19:38,370 --> 00:19:43,918
are less than<font color="#E5E5E5"> that bound that bound so</font>

462
00:19:41,370 --> 00:19:45,539
if my down is<font color="#E5E5E5"> 10 right I'm looking for</font>

463
00:19:43,919 --> 00:19:47,730
numbers whose prime factorization is

464
00:19:45,539 --> 00:19:50,340
comprised only a two threes and fives

465
00:19:47,730 --> 00:19:51,659
and sevens right doesn't matter how<font color="#CCCCCC"> big</font>

466
00:19:50,340 --> 00:19:53,070
the numbers are how big<font color="#E5E5E5"> the powers are</font>

467
00:19:51,659 --> 00:19:56,159
but we<font color="#CCCCCC"> are only allowing those Prime's</font>

468
00:19:53,070 --> 00:19:59,309
right allowing this prime so I want<font color="#CCCCCC"> to</font>

469
00:19:56,159 --> 00:20:01,110
<font color="#E5E5E5">find a lot</font><font color="#CCCCCC"> of</font><font color="#E5E5E5"> them in particular if i</font>

470
00:19:59,309 --> 00:20:02,668
count all the primes that are less<font color="#CCCCCC"> than</font>

471
00:20:01,110 --> 00:20:05,399
or equal that<font color="#E5E5E5"> bound like like it was</font>

472
00:20:02,669 --> 00:20:08,460
what<font color="#CCCCCC"> 235 and said it</font><font color="#E5E5E5"> was for primes</font>

473
00:20:05,399 --> 00:20:09,250
right so in that case if my bound be was

474
00:20:08,460 --> 00:20:12,280
<font color="#E5E5E5">10 I would</font>

475
00:20:09,250 --> 00:20:15,100
15 smooth numbers one more than<font color="#E5E5E5"> the</font>

476
00:20:12,280 --> 00:20:16,629
<font color="#E5E5E5">number of primes all right</font><font color="#CCCCCC"> okay so what</font>

477
00:20:15,100 --> 00:20:18,159
can I do with these smooth numbers so

478
00:20:16,630 --> 00:20:21,010
they don't have to be squares itit just

479
00:20:18,160 --> 00:20:23,950
have to be smooth what can I do with

480
00:20:21,010 --> 00:20:25,660
them well i can write out their prime

481
00:20:23,950 --> 00:20:28,780
factorizations all right because they're

482
00:20:25,660 --> 00:20:30,580
<font color="#E5E5E5">not that big hopefully so there they are</font>

483
00:20:28,780 --> 00:20:31,899
prime factorizations all the problems

484
00:20:30,580 --> 00:20:34,960
less than B some of those exponents

485
00:20:31,900 --> 00:20:37,660
might be<font color="#CCCCCC"> 0</font><font color="#E5E5E5"> and I'm trying to keep track</font>

486
00:20:34,960 --> 00:20:39,340
if things are a square or not right so

487
00:20:37,660 --> 00:20:40,240
what determines if a number is square if

488
00:20:39,340 --> 00:20:45,760
you're looking at its prime

489
00:20:40,240 --> 00:20:47,710
factorization exponent you look at the

490
00:20:45,760 --> 00:20:49,840
exponents right if the exponents even no

491
00:20:47,710 --> 00:20:51,730
<font color="#E5E5E5">matter what it</font><font color="#CCCCCC"> is then that divisor is</font>

492
00:20:49,840 --> 00:20:53,350
going to be that that that part

493
00:20:51,730 --> 00:20:55,240
contribute by that time is going to<font color="#E5E5E5"> be</font><font color="#CCCCCC"> a</font>

494
00:20:53,350 --> 00:20:58,330
square<font color="#E5E5E5"> and if it's odd it's going to be</font>

495
00:20:55,240 --> 00:21:00,070
a non square right so in terms<font color="#E5E5E5"> of</font>

496
00:20:58,330 --> 00:21:01,960
squareness I don't<font color="#E5E5E5"> care</font><font color="#CCCCCC"> about the number</font>

497
00:21:00,070 --> 00:21:03,429
i only care about the exponent so let's

498
00:21:01,960 --> 00:21:05,830
<font color="#E5E5E5">look at just the exponent so</font><font color="#CCCCCC"> i can make</font>

499
00:21:03,430 --> 00:21:07,930
a matrix of just the exponent right and

500
00:21:05,830 --> 00:21:09,820
<font color="#CCCCCC">i really</font><font color="#E5E5E5"> don't like big numbers right</font><font color="#CCCCCC"> i</font>

501
00:21:07,930 --> 00:21:11,620
could have big exponents my favorite

502
00:21:09,820 --> 00:21:14,770
numbers are what digital forensics

503
00:21:11,620 --> 00:21:19,689
people what's your favorite numbers<font color="#E5E5E5"> 0</font><font color="#CCCCCC"> &</font>

504
00:21:14,770 --> 00:21:21,820
<font color="#E5E5E5">1 yeah Lee Rosen one right so if an</font>

505
00:21:19,690 --> 00:21:23,320
<font color="#CCCCCC">exponents even then when i divide it by</font>

506
00:21:21,820 --> 00:21:25,780
2 is going to leave remainder<font color="#E5E5E5"> 0 and if</font>

507
00:21:23,320 --> 00:21:27,310
it's odd can leave remainder 1 so i can

508
00:21:25,780 --> 00:21:29,020
use zeros and ones to<font color="#E5E5E5"> keep track of the</font>

509
00:21:27,310 --> 00:21:32,320
evenness and oddness of the<font color="#E5E5E5"> exponent</font>

510
00:21:29,020 --> 00:21:34,690
right now take a<font color="#CCCCCC"> look at that</font><font color="#E5E5E5"> matrix and</font>

511
00:21:32,320 --> 00:21:38,830
note how many rows and columns there are

512
00:21:34,690 --> 00:21:42,370
in particular<font color="#E5E5E5"> there</font><font color="#CCCCCC"> is exactly one more</font>

513
00:21:38,830 --> 00:21:48,340
row than there are columns and what does

514
00:21:42,370 --> 00:21:50,050
that<font color="#CCCCCC"> mean anybody ever reduce matrices</font>

515
00:21:48,340 --> 00:21:52,000
to solve systems of equations you do it

516
00:21:50,050 --> 00:21:55,840
in calculus you're my calculus class

517
00:21:52,000 --> 00:21:58,450
here I know you did it<font color="#CCCCCC"> Erica talk to</font>

518
00:21:55,840 --> 00:21:59,620
what's that you<font color="#E5E5E5"> have a free variable</font>

519
00:21:58,450 --> 00:22:01,390
which means that<font color="#E5E5E5"> there's some</font>

520
00:21:59,620 --> 00:22:05,919
combinations of the roads that<font color="#E5E5E5"> will add</font>

521
00:22:01,390 --> 00:22:07,570
up to<font color="#CCCCCC"> 0 right and we call that linear</font>

522
00:22:05,920 --> 00:22:11,500
dependence right the rows are linearly

523
00:22:07,570 --> 00:22:13,929
dependent right now if you add exponents

524
00:22:11,500 --> 00:22:15,530
that's the same as doing what with the

525
00:22:13,930 --> 00:22:18,080
original numbers

526
00:22:15,530 --> 00:22:20,060
multiplying right when you multiply two

527
00:22:18,080 --> 00:22:22,159
numbers you add the exponent yeah<font color="#E5E5E5"> okay</font>

528
00:22:20,060 --> 00:22:24,649
so<font color="#CCCCCC"> that corresponds to multiplying your</font>

529
00:22:22,160 --> 00:22:26,300
original numbers so having all the

530
00:22:24,650 --> 00:22:28,100
exponents in the sum of the row being

531
00:22:26,300 --> 00:22:30,050
<font color="#CCCCCC">zero is going to correspond to all the</font>

532
00:22:28,100 --> 00:22:31,909
exponents in the product of<font color="#E5E5E5"> your</font>

533
00:22:30,050 --> 00:22:33,980
original smooth numbers being even and

534
00:22:31,910 --> 00:22:36,440
what did you<font color="#CCCCCC"> just find you found a</font>

535
00:22:33,980 --> 00:22:38,030
square drop the mic not really but you

536
00:22:36,440 --> 00:22:41,540
found a square right you found a square

537
00:22:38,030 --> 00:22:43,550
so we can we can take the I the idea of

538
00:22:41,540 --> 00:22:46,100
detecting smooth numbers and use this

539
00:22:43,550 --> 00:22:51,770
linear algebra trick to find squares for

540
00:22:46,100 --> 00:22:53,840
fermo right<font color="#CCCCCC"> okay so and I</font><font color="#E5E5E5"> just said</font><font color="#CCCCCC"> that</font>

541
00:22:51,770 --> 00:22:55,370
the product is the corresponding numbers

542
00:22:53,840 --> 00:22:56,959
that you began with with<font color="#E5E5E5"> the roads that</font>

543
00:22:55,370 --> 00:23:00,199
you add it together will end up<font color="#CCCCCC"> being a</font>

544
00:22:56,960 --> 00:23:01,580
perfect<font color="#E5E5E5"> square all right so here's an</font>

545
00:23:00,200 --> 00:23:03,560
outline of the general number field

546
00:23:01,580 --> 00:23:06,889
sieve right the world's fastest

547
00:23:03,560 --> 00:23:09,770
factoring algorithm so we pick a good

548
00:23:06,890 --> 00:23:11,510
polynomial right we want that<font color="#E5E5E5"> polynomial</font>

549
00:23:09,770 --> 00:23:14,180
to give us lots and lots and lots of

550
00:23:11,510 --> 00:23:16,430
smooth numbers right we're looking for

551
00:23:14,180 --> 00:23:17,990
smooth numbers right so if we<font color="#E5E5E5"> pick a</font>

552
00:23:16,430 --> 00:23:20,420
good enough polynomial it'll give us

553
00:23:17,990 --> 00:23:21,710
more smooth numbers right<font color="#E5E5E5"> than just</font>

554
00:23:20,420 --> 00:23:24,410
going through and checking every number

555
00:23:21,710 --> 00:23:27,350
for smoothness so a<font color="#E5E5E5"> really good</font>

556
00:23:24,410 --> 00:23:30,110
polynomial will do it we want to look at

557
00:23:27,350 --> 00:23:32,959
at inputs for that polynomial that not

558
00:23:30,110 --> 00:23:34,429
only give us a square but when<font color="#E5E5E5"> you</font>

559
00:23:32,960 --> 00:23:36,650
divide<font color="#CCCCCC"> it by the number you're trying to</font>

560
00:23:34,430 --> 00:23:38,090
factor you also get smooth right so

561
00:23:36,650 --> 00:23:39,830
there's two sides this you want<font color="#E5E5E5"> square</font>

562
00:23:38,090 --> 00:23:43,159
and you want smooth so you can<font color="#E5E5E5"> build</font>

563
00:23:39,830 --> 00:23:44,330
squares on the other side<font color="#CCCCCC"> alright and</font>

564
00:23:43,160 --> 00:23:45,890
<font color="#E5E5E5">then we can use our linear algebra here</font>

565
00:23:44,330 --> 00:23:47,990
to<font color="#E5E5E5"> find a subset whose product is</font><font color="#CCCCCC"> a</font>

566
00:23:45,890 --> 00:23:50,000
square like we just talked about<font color="#E5E5E5"> okay so</font>

567
00:23:47,990 --> 00:23:53,660
here's<font color="#E5E5E5"> the big thing and we'll focus on</font>

568
00:23:50,000 --> 00:23:56,270
<font color="#E5E5E5">this for a moment</font><font color="#CCCCCC"> so on one</font><font color="#E5E5E5"> side I have</font>

569
00:23:53,660 --> 00:23:57,680
what will call the regular or the

570
00:23:56,270 --> 00:24:00,110
rational side where we're looking at

571
00:23:57,680 --> 00:24:02,660
regular numbers those are the outputs

572
00:24:00,110 --> 00:24:04,490
the<font color="#E5E5E5"> product of all of them is a square</font>

573
00:24:02,660 --> 00:24:06,080
right the product of all the outputs of

574
00:24:04,490 --> 00:24:07,820
the square we rigged it to work that way

575
00:24:06,080 --> 00:24:10,250
all right by looking at outputs of

576
00:24:07,820 --> 00:24:15,500
polynomial right and if i look at the

577
00:24:10,250 --> 00:24:17,720
values<font color="#E5E5E5"> after I after</font><font color="#CCCCCC"> I /</font><font color="#E5E5E5"> n look at their</font>

578
00:24:15,500 --> 00:24:20,750
remainders after<font color="#CCCCCC"> i divided by n right</font>

579
00:24:17,720 --> 00:24:22,280
<font color="#CCCCCC">there smooth right and I pick only those</font>

580
00:24:20,750 --> 00:24:25,130
that i can<font color="#CCCCCC"> use my linear algebra trick</font>

581
00:24:22,280 --> 00:24:27,620
on so that<font color="#CCCCCC"> I get a smooth square in</font><font color="#E5E5E5"> the</font>

582
00:24:25,130 --> 00:24:29,539
end right smooth square so what do I

583
00:24:27,620 --> 00:24:31,820
have now I have

584
00:24:29,539 --> 00:24:33,739
all of the output happens to be a

585
00:24:31,820 --> 00:24:36,559
perfect<font color="#E5E5E5"> square their outputs of</font>

586
00:24:33,739 --> 00:24:39,229
polynomials right who's asked where the

587
00:24:36,559 --> 00:24:40,549
<font color="#E5E5E5">students will</font><font color="#CCCCCC"> buy hem right and we</font><font color="#E5E5E5"> just</font>

588
00:24:39,229 --> 00:24:47,570
found our differences of squares per

589
00:24:40,549 --> 00:24:49,279
fare<font color="#CCCCCC"> MA</font><font color="#E5E5E5"> ok so that's it alright so my</font>

590
00:24:47,570 --> 00:24:52,100
summary of all that and why it should

591
00:24:49,279 --> 00:24:54,259
matter so we<font color="#E5E5E5"> start by picking a really</font>

592
00:24:52,100 --> 00:24:57,889
good polynomial<font color="#CCCCCC"> that has a very high</font>

593
00:24:54,259 --> 00:25:01,999
probability of doing what giving a

594
00:24:57,889 --> 00:25:03,678
smooth squares right then we input lots

595
00:25:01,999 --> 00:25:05,720
and lots of values of it until<font color="#E5E5E5"> we find</font>

596
00:25:03,679 --> 00:25:07,669
lots<font color="#E5E5E5"> and lots of smooth squares right</font>

597
00:25:05,720 --> 00:25:09,830
what<font color="#E5E5E5"> should happen better than better</font>

598
00:25:07,669 --> 00:25:11,539
than 5050 right if we picked a good

599
00:25:09,830 --> 00:25:12,769
polynomial and then hopefully<font color="#CCCCCC"> with our</font>

600
00:25:11,539 --> 00:25:15,200
linear algebra trick that'll that'll

601
00:25:12,769 --> 00:25:16,820
produce a factorization all right so

602
00:25:15,200 --> 00:25:20,059
where's all<font color="#E5E5E5"> the research been since</font>

603
00:25:16,820 --> 00:25:21,979
since the early<font color="#E5E5E5"> 90s it's all focused on</font>

604
00:25:20,059 --> 00:25:23,928
one all right the mass researchers all

605
00:25:21,979 --> 00:25:26,179
focused on one how do we pick such a

606
00:25:23,929 --> 00:25:27,889
good polynomial all right anybody<font color="#CCCCCC"> that</font>

607
00:25:26,179 --> 00:25:29,269
can make<font color="#E5E5E5"> a better a polynomial than you</font>

608
00:25:27,889 --> 00:25:34,879
can is going to be<font color="#CCCCCC"> able to factor a</font>

609
00:25:29,269 --> 00:25:37,279
faster so on the computer science side

610
00:25:34,879 --> 00:25:39,019
the research is<font color="#E5E5E5"> focused on improving the</font>

611
00:25:37,279 --> 00:25:40,669
parallelization of the second step how

612
00:25:39,019 --> 00:25:42,379
do<font color="#E5E5E5"> you check all of these outputs that</font>

613
00:25:40,669 --> 00:25:44,479
was<font color="#CCCCCC"> Leinster zai jia with the optical</font>

614
00:25:42,379 --> 00:25:46,070
<font color="#E5E5E5">sensor right once there's an output</font>

615
00:25:44,479 --> 00:25:47,720
that's worth checking probabilistically

616
00:25:46,070 --> 00:25:50,809
you save it<font color="#CCCCCC"> for later by just looking at</font>

617
00:25:47,720 --> 00:25:52,700
the flash of the LED all right and step

618
00:25:50,809 --> 00:25:54,649
<font color="#CCCCCC">3 how do you parallel eyes reducing that</font>

619
00:25:52,700 --> 00:25:55,999
big matrix that you have in the end<font color="#CCCCCC"> all</font>

620
00:25:54,649 --> 00:25:59,928
right right now the block<font color="#CCCCCC"> Weidman</font>

621
00:25:55,999 --> 00:26:04,669
algorithm is the is the best hi nothing

622
00:25:59,929 --> 00:26:07,849
else has really changed until so this

623
00:26:04,669 --> 00:26:09,919
paper<font color="#E5E5E5"> I think came out in 2013 and my</font>

624
00:26:07,849 --> 00:26:12,859
<font color="#E5E5E5">names on there somewhere plenty of time</font>

625
00:26:09,919 --> 00:26:14,509
and the title<font color="#CCCCCC"> of it you'll notice is</font>

626
00:26:12,859 --> 00:26:16,879
this really big number all right<font color="#E5E5E5"> that's</font>

627
00:26:14,509 --> 00:26:18,590
<font color="#E5E5E5">my that's my favorite</font><font color="#CCCCCC"> number so my</font>

628
00:26:16,879 --> 00:26:21,289
co-authors there and he's sent<font color="#CCCCCC"> me an</font>

629
00:26:18,590 --> 00:26:24,470
email shortly after Christmas because he

630
00:26:21,289 --> 00:26:27,830
got<font color="#E5E5E5"> a google home for</font><font color="#CCCCCC"> christmas and you</font>

631
00:26:24,470 --> 00:26:30,169
can teach<font color="#E5E5E5"> google home things right in</font>

632
00:26:27,830 --> 00:26:32,790
<font color="#E5E5E5">particular you can teach</font><font color="#CCCCCC"> it what your</font>

633
00:26:30,169 --> 00:26:36,870
favorite number<font color="#CCCCCC"> is your favorite number</font>

634
00:26:32,790 --> 00:26:41,760
my favorite<font color="#CCCCCC"> number is 49 million 598</font>

635
00:26:36,870 --> 00:26:44,370
octillion 656 sectarian 989<font color="#E5E5E5"> Experian 151</font>

636
00:26:41,760 --> 00:26:47,340
quintillion 226 clearly in ninety eight

637
00:26:44,370 --> 00:26:51,060
trillion 104 billion 244 million five

638
00:26:47,340 --> 00:26:52,439
hundred twelve thousand 918<font color="#E5E5E5"> alright so</font>

639
00:26:51,060 --> 00:26:54,389
there's thirty two digits there it

640
00:26:52,440 --> 00:26:56,700
starts with a<font color="#E5E5E5"> four and ends in an eight</font>

641
00:26:54,390 --> 00:26:58,800
and the paper is about a connection

642
00:26:56,700 --> 00:27:01,770
between prime numbers and polynomials

643
00:26:58,800 --> 00:27:05,399
and I like<font color="#E5E5E5"> the title because it's</font>

644
00:27:01,770 --> 00:27:07,440
obviously not prime somehow in there it

645
00:27:05,400 --> 00:27:09,510
comes together<font color="#E5E5E5"> and work</font><font color="#CCCCCC"> okay so I'm</font>

646
00:27:07,440 --> 00:27:13,050
<font color="#E5E5E5">gonna talk next for the next 20 minutes</font>

647
00:27:09,510 --> 00:27:14,190
or so about this paper of mine and that

648
00:27:13,050 --> 00:27:16,139
really big number why it's so

649
00:27:14,190 --> 00:27:19,500
interesting and how it's related to

650
00:27:16,140 --> 00:27:24,360
factoring factoring really big numbers

651
00:27:19,500 --> 00:27:26,520
<font color="#E5E5E5">okay so here's the problem that deals</font>

652
00:27:24,360 --> 00:27:28,649
with there's this famous book from the

653
00:27:26,520 --> 00:27:31,470
first published<font color="#CCCCCC"> nearly 1900s problems</font>

654
00:27:28,650 --> 00:27:34,080
and theorems and analysis the subject of

655
00:27:31,470 --> 00:27:35,370
<font color="#E5E5E5">that book goes way back a lot of the</font>

656
00:27:34,080 --> 00:27:38,399
problems in there were originally posed

657
00:27:35,370 --> 00:27:43,139
by Gauss right in the late 1700s early

658
00:27:38,400 --> 00:27:45,600
1800s one of them in particular looks

659
00:27:43,140 --> 00:27:48,270
<font color="#CCCCCC">like this so if you take</font><font color="#E5E5E5"> a prime number</font>

660
00:27:45,600 --> 00:27:50,129
and you write it in base 10 in terms of

661
00:27:48,270 --> 00:27:52,230
its digits that's all that's going on up

662
00:27:50,130 --> 00:27:54,450
there all right every number can be

663
00:27:52,230 --> 00:27:56,850
thought of as a polynomial in 10 instead

664
00:27:54,450 --> 00:27:58,230
of X well what if you replace the the

665
00:27:56,850 --> 00:28:02,370
tens with X's then you get a real

666
00:27:58,230 --> 00:28:04,740
polynomial right and and this theorem in

667
00:28:02,370 --> 00:28:07,620
this book it's called<font color="#CCCCCC"> Cohen's criterion</font>

668
00:28:04,740 --> 00:28:08,940
says that the polynomial get is always

669
00:28:07,620 --> 00:28:10,229
irreducible if you start with a prime

670
00:28:08,940 --> 00:28:14,040
number you're<font color="#E5E5E5"> always going to get an</font>

671
00:28:10,230 --> 00:28:16,080
irreducible polynomial<font color="#CCCCCC"> all right so</font><font color="#E5E5E5"> for</font>

672
00:28:14,040 --> 00:28:18,930
example there's this person I know whose

673
00:28:16,080 --> 00:28:23,040
name's Jenny and Jenny's favorite prime

674
00:28:18,930 --> 00:28:26,160
number is 8675309 and if you write<font color="#CCCCCC"> that</font>

675
00:28:23,040 --> 00:28:27,960
<font color="#CCCCCC">as a polynomial its ear adduce Allah</font>

676
00:28:26,160 --> 00:28:32,190
doesn't factor it doesn't split up into

677
00:28:27,960 --> 00:28:34,710
into other factors so jenny has it has a

678
00:28:32,190 --> 00:28:38,760
twin<font color="#CCCCCC"> sister who also has a favorite</font>

679
00:28:34,710 --> 00:28:41,280
<font color="#CCCCCC">Prime it's 8 6 75 3 11 and and that</font>

680
00:28:38,760 --> 00:28:43,020
polynomial is also irreducible and if

681
00:28:41,280 --> 00:28:45,870
you don't quite get the reference there

682
00:28:43,020 --> 00:28:46,230
is this hit single by a person named one

683
00:28:45,870 --> 00:28:47,879
hit

684
00:28:46,230 --> 00:28:53,370
they're<font color="#E5E5E5"> tommy tutone by the same title</font>

685
00:28:47,880 --> 00:28:54,540
8675309 oh and<font color="#E5E5E5"> if you're too young to</font>

686
00:28:53,370 --> 00:28:57,959
<font color="#E5E5E5">know what that's a picture of its called</font>

687
00:28:54,540 --> 00:29:01,889
a vinyl record vinyl record<font color="#E5E5E5"> all right</font>

688
00:28:57,960 --> 00:29:05,040
<font color="#CCCCCC">okay so a question with posed and this</font>

689
00:29:01,890 --> 00:29:07,200
question goes back at least a Gauss what

690
00:29:05,040 --> 00:29:10,168
is so special about digits what if you

691
00:29:07,200 --> 00:29:11,970
have polynomials that you plug in 10 at

692
00:29:10,169 --> 00:29:13,590
and you get back a prime but the

693
00:29:11,970 --> 00:29:14,910
coefficients aren't just digits anymore

694
00:29:13,590 --> 00:29:18,928
they can be arbitrarily large what

695
00:29:14,910 --> 00:29:20,460
happens then all right okay and<font color="#CCCCCC"> that</font>

696
00:29:18,929 --> 00:29:22,530
<font color="#E5E5E5">problem was open for a very very long</font>

697
00:29:20,460 --> 00:29:25,740
time until I until I wrote that paper

698
00:29:22,530 --> 00:29:28,799
and the answer is no there's<font color="#CCCCCC"> nothing</font>

699
00:29:25,740 --> 00:29:30,990
special about digits at all how big can

700
00:29:28,799 --> 00:29:32,610
you make the coefficients well you can't

701
00:29:30,990 --> 00:29:35,610
<font color="#E5E5E5">make them any bigger than that number</font>

702
00:29:32,610 --> 00:29:37,229
<font color="#E5E5E5">that google home read to you right in</font>

703
00:29:35,610 --> 00:29:39,149
other words there's an<font color="#E5E5E5"> example of a</font>

704
00:29:37,230 --> 00:29:42,179
polynomial whose largest coefficient

705
00:29:39,150 --> 00:29:45,510
ends<font color="#E5E5E5"> and a 9 is the same number but</font>

706
00:29:42,179 --> 00:29:47,070
ending in a<font color="#E5E5E5"> 9 right when you plug in 10</font>

707
00:29:45,510 --> 00:29:48,720
you get<font color="#E5E5E5"> back a really big prime number</font>

708
00:29:47,070 --> 00:29:52,139
yet you can factor that polynomial

709
00:29:48,720 --> 00:29:53,580
really easily and<font color="#E5E5E5"> then I prove</font><font color="#CCCCCC"> that</font>

710
00:29:52,140 --> 00:29:57,870
anything smaller would be irreducible

711
00:29:53,580 --> 00:30:02,610
<font color="#CCCCCC">okay all right so what does this have to</font>

712
00:29:57,870 --> 00:30:04,649
do with factoring well since then so

713
00:30:02,610 --> 00:30:06,840
some former colleagues divine<font color="#E5E5E5"> Scott done</font>

714
00:30:04,650 --> 00:30:09,179
in Morgan Cole showed that there's

715
00:30:06,840 --> 00:30:11,879
<font color="#CCCCCC">nothing special about</font><font color="#E5E5E5"> 10 right it works</font>

716
00:30:09,179 --> 00:30:17,280
for any<font color="#E5E5E5"> other base so if you if you take</font>

717
00:30:11,880 --> 00:30:19,530
f of 13 and<font color="#E5E5E5"> it happens to be a prime and</font>

718
00:30:17,280 --> 00:30:21,090
all the coefficients are less than<font color="#E5E5E5"> that</font>

719
00:30:19,530 --> 00:30:22,260
big number<font color="#E5E5E5"> that they identified and the</font>

720
00:30:21,090 --> 00:30:23,699
polynomial has to also be irreducible

721
00:30:22,260 --> 00:30:25,650
that's the largest<font color="#CCCCCC"> number that you can</font>

722
00:30:23,700 --> 00:30:27,960
use and they<font color="#E5E5E5"> found similar numbers for</font>

723
00:30:25,650 --> 00:30:29,610
all different bases actually from three

724
00:30:27,960 --> 00:30:37,620
all<font color="#CCCCCC"> the way up through 20</font><font color="#E5E5E5"> in their</font>

725
00:30:29,610 --> 00:30:40,049
publication and just last year it turns

726
00:30:37,620 --> 00:30:42,030
out that those big numbers yeah they're

727
00:30:40,049 --> 00:30:43,168
<font color="#E5E5E5">not that special as hard as</font><font color="#CCCCCC"> we try to</font>

728
00:30:42,030 --> 00:30:44,610
find all of them they're not that

729
00:30:43,169 --> 00:30:46,830
special you<font color="#E5E5E5"> can generate them for any</font>

730
00:30:44,610 --> 00:30:49,678
base with this<font color="#E5E5E5"> very nice combinatorial</font>

731
00:30:46,830 --> 00:30:52,230
formula so that's another very next

732
00:30:49,679 --> 00:30:55,810
result<font color="#E5E5E5"> okay what was the question again</font>

733
00:30:52,230 --> 00:30:59,410
what<font color="#CCCCCC"> does this have to do with factoring</font>

734
00:30:55,810 --> 00:31:01,600
members so here's the basic idea if you

735
00:30:59,410 --> 00:31:04,450
start with a polynomial that's reducible

736
00:31:01,600 --> 00:31:07,360
with f10 being prime then then you would

737
00:31:04,450 --> 00:31:09,010
have<font color="#E5E5E5"> a factorization g of 10 times H of</font>

738
00:31:07,360 --> 00:31:10,479
10 but f of 10 was prime so you have a

739
00:31:09,010 --> 00:31:14,770
factorization of a prime which means

740
00:31:10,480 --> 00:31:16,210
what how does the prime factor 1 times

741
00:31:14,770 --> 00:31:18,730
the prime that means that one of<font color="#E5E5E5"> those</font>

742
00:31:16,210 --> 00:31:22,720
<font color="#E5E5E5">say</font><font color="#CCCCCC"> G of 10 has to be has to be</font><font color="#E5E5E5"> one</font>

743
00:31:18,730 --> 00:31:25,270
right and so it turns out that if you

744
00:31:22,720 --> 00:31:27,190
<font color="#E5E5E5">start with a polynomial</font><font color="#CCCCCC"> G of 10 that</font>

745
00:31:25,270 --> 00:31:28,480
happens to<font color="#CCCCCC"> be</font><font color="#E5E5E5"> one and try to build a</font>

746
00:31:27,190 --> 00:31:31,060
polynomial with all positive

747
00:31:28,480 --> 00:31:32,470
coefficients right then at<font color="#E5E5E5"> least one</font><font color="#CCCCCC"> of</font>

748
00:31:31,060 --> 00:31:33,760
those coefficients has to be bigger than

749
00:31:32,470 --> 00:31:36,580
the<font color="#E5E5E5"> number that's in the title my paper</font>

750
00:31:33,760 --> 00:31:38,379
<font color="#CCCCCC">all right so there you go now you don't</font>

751
00:31:36,580 --> 00:31:42,970
have<font color="#E5E5E5"> to go read the 20 some odd pages</font>

752
00:31:38,380 --> 00:31:46,690
that i wrote you know<font color="#CCCCCC"> okay so i just</font>

753
00:31:42,970 --> 00:31:49,270
said<font color="#E5E5E5"> that</font><font color="#CCCCCC"> all right all right</font><font color="#E5E5E5"> so what's</font>

754
00:31:46,690 --> 00:31:52,720
happened since then so Carl Pomerance

755
00:31:49,270 --> 00:31:55,120
once asked me a question relating this

756
00:31:52,720 --> 00:31:58,060
and it was the<font color="#CCCCCC"> following what if instead</font>

757
00:31:55,120 --> 00:32:00,699
of FSN being a prime as in my theorem

758
00:31:58,060 --> 00:32:03,250
what if you had ff10 equaling a product

759
00:32:00,700 --> 00:32:04,570
of two primes right p times q so what

760
00:32:03,250 --> 00:32:06,460
we're thinking<font color="#E5E5E5"> about public key type</font>

761
00:32:04,570 --> 00:32:11,710
numbers here right public key type

762
00:32:06,460 --> 00:32:14,350
numbers well if<font color="#CCCCCC"> F was reducible would</font>

763
00:32:11,710 --> 00:32:16,570
you get a factorization into P and Q

764
00:32:14,350 --> 00:32:21,040
right if the polynomial is reducible

765
00:32:16,570 --> 00:32:24,310
could you do it right so if<font color="#CCCCCC"> g of 10 and</font>

766
00:32:21,040 --> 00:32:25,960
<font color="#E5E5E5">h of 10 are not one right then that</font>

767
00:32:24,310 --> 00:32:28,929
would be a factorization into<font color="#E5E5E5"> p times q</font>

768
00:32:25,960 --> 00:32:31,240
wouldn't it right so the heart of<font color="#CCCCCC"> Carl's</font>

769
00:32:28,930 --> 00:32:33,310
question was is there any way in<font color="#E5E5E5"> this</font>

770
00:32:31,240 --> 00:32:35,740
case that<font color="#E5E5E5"> you can exclude or at least</font>

771
00:32:33,310 --> 00:32:38,889
characterize what types of numbers will

772
00:32:35,740 --> 00:32:40,360
give you back a G of<font color="#E5E5E5"> 10 being one right</font>

773
00:32:38,890 --> 00:32:43,090
<font color="#E5E5E5">because then in theory it would work for</font>

774
00:32:40,360 --> 00:32:46,570
everything else right and my answer at

775
00:32:43,090 --> 00:32:49,030
the time to him was was I don't<font color="#E5E5E5"> know not</font>

776
00:32:46,570 --> 00:32:50,530
at all<font color="#E5E5E5"> not enough information right so</font>

777
00:32:49,030 --> 00:32:52,210
the flow on the idea is there's no<font color="#CCCCCC"> way</font>

778
00:32:50,530 --> 00:32:53,889
to rule out this case of G of<font color="#CCCCCC"> 10</font><font color="#E5E5E5"> being</font>

779
00:32:52,210 --> 00:32:56,080
one and<font color="#CCCCCC"> that's why it doesn't work as a</font>

780
00:32:53,890 --> 00:32:57,100
factoring algorithm or at least when<font color="#CCCCCC"> he</font>

781
00:32:56,080 --> 00:32:59,919
asked me the question that's why I

782
00:32:57,100 --> 00:33:00,919
didn't work as a factoring algorithm all

783
00:32:59,920 --> 00:33:02,600
right

784
00:33:00,920 --> 00:33:04,070
so yeah I gave<font color="#E5E5E5"> him answer or no</font>

785
00:33:02,600 --> 00:33:06,110
guarantee but it sounds<font color="#CCCCCC"> interesting</font>

786
00:33:04,070 --> 00:33:08,750
enough interesting enough that<font color="#E5E5E5"> I've</font>

787
00:33:06,110 --> 00:33:14,689
thought<font color="#E5E5E5"> about it since then until I</font>

788
00:33:08,750 --> 00:33:17,270
don't know a week ago is that<font color="#E5E5E5"> just what</font>

789
00:33:14,690 --> 00:33:21,950
was<font color="#E5E5E5"> up there resistant than you oh</font><font color="#CCCCCC"> okay</font>

790
00:33:17,270 --> 00:33:23,720
new<font color="#CCCCCC"> theorem new theorem so the statement</font>

791
00:33:21,950 --> 00:33:27,470
<font color="#E5E5E5">of the theorem is that my big number</font>

792
00:33:23,720 --> 00:33:29,150
minus 1 ends in a<font color="#CCCCCC"> 7 I really want to</font>

793
00:33:27,470 --> 00:33:30,620
<font color="#E5E5E5">drop the Michael on that so verify that</font>

794
00:33:29,150 --> 00:33:34,490
when you subtract one you<font color="#E5E5E5"> really do get</font>

795
00:33:30,620 --> 00:33:36,379
the number behind below yeah<font color="#E5E5E5"> okay that's</font>

796
00:33:34,490 --> 00:33:37,820
a<font color="#E5E5E5"> very profound theorem that gives us a</font>

797
00:33:36,380 --> 00:33:41,330
new factoring algorithm very profound

798
00:33:37,820 --> 00:33:44,750
thank you<font color="#CCCCCC"> all right so how does</font><font color="#E5E5E5"> it</font><font color="#CCCCCC"> work</font>

799
00:33:41,330 --> 00:33:46,610
so the basic idea again right how do we

800
00:33:44,750 --> 00:33:48,830
rule out this case of G of<font color="#CCCCCC"> 10 being one</font>

801
00:33:46,610 --> 00:33:51,439
<font color="#E5E5E5">right well it turns</font><font color="#CCCCCC"> out if all the</font>

802
00:33:48,830 --> 00:33:53,899
coefficients of<font color="#E5E5E5"> s are smaller than that</font>

803
00:33:51,440 --> 00:33:57,710
new number<font color="#CCCCCC"> one less than my number then</font>

804
00:33:53,900 --> 00:34:01,040
you can<font color="#E5E5E5"> guarantee that that neither G or</font>

805
00:33:57,710 --> 00:34:02,510
H evaluate to 1 you can<font color="#E5E5E5"> guarantee</font><font color="#CCCCCC"> it</font><font color="#E5E5E5"> all</font>

806
00:34:01,040 --> 00:34:05,990
<font color="#E5E5E5">right so</font><font color="#CCCCCC"> as long as the coefficients</font>

807
00:34:02,510 --> 00:34:07,700
aren't that big and likewise there's a

808
00:34:05,990 --> 00:34:10,250
similar number one last for all of the

809
00:34:07,700 --> 00:34:13,370
other bases right so what you want to do

810
00:34:10,250 --> 00:34:17,659
in my<font color="#CCCCCC"> proposed factoring algorithm is I</font>

811
00:34:13,370 --> 00:34:19,310
<font color="#E5E5E5">think it's here is it here yeah that's</font>

812
00:34:17,659 --> 00:34:21,529
commitment<font color="#CCCCCC"> ok so what you really</font><font color="#E5E5E5"> want to</font>

813
00:34:19,310 --> 00:34:24,469
do is you want to find a polynomial

814
00:34:21,530 --> 00:34:26,300
that's reducible and find a polynomial

815
00:34:24,469 --> 00:34:28,100
that has an input doesn't matter what

816
00:34:26,300 --> 00:34:29,360
input it is long as it's<font color="#E5E5E5"> not too for</font>

817
00:34:28,100 --> 00:34:30,918
special reason all right<font color="#CCCCCC"> because we</font>

818
00:34:29,360 --> 00:34:33,650
found<font color="#E5E5E5"> the big numbers for every other</font>

819
00:34:30,918 --> 00:34:35,690
base in theory right so as long as<font color="#E5E5E5"> f of</font>

820
00:34:33,650 --> 00:34:39,050
some input gives you back<font color="#CCCCCC"> P times Q</font>

821
00:34:35,690 --> 00:34:42,860
right<font color="#E5E5E5"> and</font><font color="#CCCCCC"> f is reducible you get a</font>

822
00:34:39,050 --> 00:34:45,679
factorization so f evaluated something

823
00:34:42,860 --> 00:34:48,410
is equal to N or P times Q and the

824
00:34:45,679 --> 00:34:49,700
coefficients<font color="#CCCCCC"> of F are less than the big</font>

825
00:34:48,409 --> 00:34:51,859
number that corresponds to base

826
00:34:49,699 --> 00:34:53,359
something right whatever your input was

827
00:34:51,860 --> 00:34:58,250
and then you've guaranteed that you

828
00:34:53,360 --> 00:35:00,350
factored guaranteed be<font color="#CCCCCC"> exactly okay so</font>

829
00:34:58,250 --> 00:35:03,530
what questions should you have now is

830
00:35:00,350 --> 00:35:06,110
the first how can you find such a

831
00:35:03,530 --> 00:35:07,670
polynomial<font color="#E5E5E5"> all right you're asking</font><font color="#CCCCCC"> these</font>

832
00:35:06,110 --> 00:35:10,190
questions right how do you find such a

833
00:35:07,670 --> 00:35:11,840
polynomial and is searching for<font color="#E5E5E5"> one of</font>

834
00:35:10,190 --> 00:35:12,960
those polynomials faster than general

835
00:35:11,840 --> 00:35:16,290
number<font color="#E5E5E5"> field sieve</font>

836
00:35:12,960 --> 00:35:18,810
is it<font color="#E5E5E5"> factor and if it is faster then</font>

837
00:35:16,290 --> 00:35:20,700
then we've just solved a problem that

838
00:35:18,810 --> 00:35:22,290
goes all the way back<font color="#CCCCCC"> to</font><font color="#E5E5E5"> fermo right a</font>

839
00:35:20,700 --> 00:35:28,348
problem that was that's<font color="#E5E5E5"> been a couple</font>

840
00:35:22,290 --> 00:35:35,369
<font color="#E5E5E5">hundred years old all right and that's</font>

841
00:35:28,349 --> 00:35:39,089
<font color="#E5E5E5">allowed to tell</font><font color="#CCCCCC"> you about that another</font>

842
00:35:35,369 --> 00:35:40,650
picture that's what happens when<font color="#CCCCCC"> you</font>

843
00:35:39,089 --> 00:35:41,640
throw a talk together you have no<font color="#E5E5E5"> idea</font>

844
00:35:40,650 --> 00:35:46,230
what's gonna happen when you press the

845
00:35:41,640 --> 00:35:49,170
button I'm<font color="#E5E5E5"> hoping this won't get me</font>

846
00:35:46,230 --> 00:35:52,109
disinvited next year but oh<font color="#CCCCCC"> okay we're</font>

847
00:35:49,170 --> 00:36:07,380
good so I'll take<font color="#CCCCCC"> questions anybody has</font>

848
00:35:52,109 --> 00:36:18,210
them that was fun thank you let's do it

849
00:36:07,380 --> 00:36:26,940
<font color="#CCCCCC">again</font><font color="#E5E5E5"> sometime yeah no no not at all</font>

850
00:36:18,210 --> 00:36:29,910
right no at<font color="#E5E5E5"> all so so yeah so if you</font>

851
00:36:26,940 --> 00:36:31,800
take n right and you write it in base 10

852
00:36:29,910 --> 00:36:33,299
and<font color="#E5E5E5"> then replace the tens with X's you</font>

853
00:36:31,800 --> 00:36:35,880
get a polynomial such that when you plug

854
00:36:33,300 --> 00:36:37,080
in 10 you get<font color="#E5E5E5"> back p times q right so</font>

855
00:36:35,880 --> 00:36:39,900
you can generate a polynomial it's

856
00:36:37,080 --> 00:36:42,119
related to P and Q in that way and check

857
00:36:39,900 --> 00:36:43,830
it to see if it factors right we check

858
00:36:42,119 --> 00:36:46,800
<font color="#CCCCCC">to see the factors if it does factor</font>

859
00:36:43,830 --> 00:36:48,180
right the fact that the fact that digits

860
00:36:46,800 --> 00:36:50,310
are smaller than the big number that i

861
00:36:48,180 --> 00:36:52,259
gave you would guarantee that that

862
00:36:50,310 --> 00:36:54,450
factorization gives you a factorization

863
00:36:52,260 --> 00:36:56,820
of n into P and Q does<font color="#E5E5E5"> that make sense</font>

864
00:36:54,450 --> 00:36:59,669
right<font color="#E5E5E5"> it guarantees that neither of the</font>

865
00:36:56,820 --> 00:37:02,910
polynomial factors evaluates to 1 with

866
00:36:59,670 --> 00:37:04,849
no information that make sense mm-hmm

867
00:37:02,910 --> 00:37:10,999
bail

868
00:37:04,849 --> 00:37:18,920
yeah Emma that was you<font color="#CCCCCC"> when you were a</font>

869
00:37:10,999 --> 00:37:24,950
little<font color="#E5E5E5"> baby do not call</font><font color="#CCCCCC"> honey I don't</font>

870
00:37:18,920 --> 00:37:28,999
<font color="#CCCCCC">know where I found that at yeah he'll</font>

871
00:37:24,950 --> 00:37:34,669
<font color="#CCCCCC">never without them this</font><font color="#E5E5E5"> is all on the</font>

872
00:37:28,999 --> 00:37:41,419
record to I<font color="#CCCCCC"> turn this off before you yes</font>

873
00:37:34,670 --> 00:37:43,130
I don't<font color="#CCCCCC"> think</font><font color="#E5E5E5"> so honey although didn't</font>

874
00:37:41,420 --> 00:37:47,089
Steve Irwin get in trouble for dangling

875
00:37:43,130 --> 00:37:48,410
his kid over the balcony at the<font color="#E5E5E5"> zoo they</font>

876
00:37:47,089 --> 00:37:50,479
may know who Steve Irwin is the

877
00:37:48,410 --> 00:37:51,859
crocodile hunter guy yeah<font color="#CCCCCC"> I'm pretty</font>

878
00:37:50,479 --> 00:37:56,808
<font color="#CCCCCC">sure that was in the news when I was in</font>

879
00:37:51,859 --> 00:38:06,229
college or something we got to 25

880
00:37:56,809 --> 00:38:07,579
minutes we<font color="#E5E5E5"> keep</font><font color="#CCCCCC"> doing this yeah so</font>

881
00:38:06,229 --> 00:38:09,319
you're talking<font color="#E5E5E5"> about pheromones little</font>

882
00:38:07,579 --> 00:38:11,210
theorem which is different than the

883
00:38:09,319 --> 00:38:13,219
Fairmont's theorem that<font color="#E5E5E5"> I put up right</font>

884
00:38:11,210 --> 00:38:14,779
so yeah so for everybody else in the

885
00:38:13,219 --> 00:38:17,509
audience there's a there's a theorem

886
00:38:14,779 --> 00:38:18,890
that you learn in elementary number

887
00:38:17,509 --> 00:38:20,690
theory as an undergrad if you're a math

888
00:38:18,890 --> 00:38:23,150
major and it's called pheromones little

889
00:38:20,690 --> 00:38:25,130
theorem and that's actually related to

890
00:38:23,150 --> 00:38:27,019
everything so if you go back since we

891
00:38:25,130 --> 00:38:33,170
<font color="#E5E5E5">have time let me go all the way back to</font>

892
00:38:27,019 --> 00:38:38,930
<font color="#E5E5E5">that slide right</font>

893
00:38:33,170 --> 00:38:40,579
no back further than that hold on it

894
00:38:38,930 --> 00:38:41,868
doesn't want to go back see if you go

895
00:38:40,579 --> 00:38:44,180
all the way<font color="#CCCCCC"> back to</font><font color="#E5E5E5"> that slide about how</font>

896
00:38:41,869 --> 00:39:04,910
how the RSA algorithm actually<font color="#CCCCCC"> works</font>

897
00:38:44,180 --> 00:39:07,490
right okay right<font color="#CCCCCC"> so the way the</font>

898
00:39:04,910 --> 00:39:09,470
algorithm works is that you take your

899
00:39:07,490 --> 00:39:11,720
<font color="#E5E5E5">message which is represented as a number</font>

900
00:39:09,470 --> 00:39:13,549
right yeah you to ascii characters

901
00:39:11,720 --> 00:39:15,980
whatever you want and you raise it to

902
00:39:13,549 --> 00:39:17,960
that power n<font color="#E5E5E5"> I'm sorry you raise it to</font>

903
00:39:15,980 --> 00:39:19,640
an exponent right which is<font color="#E5E5E5"> called the</font>

904
00:39:17,960 --> 00:39:21,589
<font color="#E5E5E5">public encrypting exponent or whatever</font>

905
00:39:19,640 --> 00:39:24,618
right the public exponent oh by the way

906
00:39:21,589 --> 00:39:27,140
I<font color="#E5E5E5"> think it's 341 for every standard and</font>

907
00:39:24,619 --> 00:39:28,339
an RSA and pretty sure<font color="#E5E5E5"> it's 341 you have</font>

908
00:39:27,140 --> 00:39:31,819
to check me on that I'm probably<font color="#E5E5E5"> wrong</font>

909
00:39:28,339 --> 00:39:34,700
in fact I'm sure alone it's 300

910
00:39:31,819 --> 00:39:36,680
<font color="#E5E5E5">something isn't it do you remember no</font>

911
00:39:34,700 --> 00:39:39,020
there's nothing important about it<font color="#E5E5E5"> right</font>

912
00:39:36,680 --> 00:39:40,669
you cake you take your message<font color="#E5E5E5"> and you</font>

913
00:39:39,020 --> 00:39:41,720
raise it to that exponent and then you

914
00:39:40,670 --> 00:39:43,369
calculate the remainder when you divide

915
00:39:41,720 --> 00:39:44,359
by<font color="#CCCCCC"> n and that's your secret that's your</font>

916
00:39:43,369 --> 00:39:48,349
secret message and you send<font color="#E5E5E5"> that on</font>

917
00:39:44,359 --> 00:39:50,598
right so the<font color="#E5E5E5"> way it works to decrypt the</font>

918
00:39:48,349 --> 00:39:55,790
message and why you need<font color="#E5E5E5"> to know p and q</font>

919
00:39:50,599 --> 00:39:57,290
is you need<font color="#CCCCCC"> to know how many numbers</font>

920
00:39:55,790 --> 00:40:00,529
there are<font color="#E5E5E5"> that are less</font><font color="#CCCCCC"> than or equal to</font>

921
00:39:57,290 --> 00:40:01,579
n<font color="#CCCCCC"> that have no divisors in common</font><font color="#E5E5E5"> all</font>

922
00:40:00,530 --> 00:40:03,440
<font color="#E5E5E5">right that's called euler's totient</font>

923
00:40:01,579 --> 00:40:06,589
function which you might remember call

924
00:40:03,440 --> 00:40:09,140
it fee of n from number theory right so

925
00:40:06,589 --> 00:40:12,558
there's a connection between that that

926
00:40:09,140 --> 00:40:15,589
value and P and Q right so right now the

927
00:40:12,559 --> 00:40:18,410
only way the only way to calculate that

928
00:40:15,589 --> 00:40:21,410
<font color="#CCCCCC">value which you need to decrypt is to</font>

929
00:40:18,410 --> 00:40:23,210
first calculate P and Q right and if you

930
00:40:21,410 --> 00:40:25,160
could come<font color="#E5E5E5"> up with a better way a</font>

931
00:40:23,210 --> 00:40:27,349
different way of calculating that value

932
00:40:25,160 --> 00:40:29,299
euler's totient function without knowing

933
00:40:27,349 --> 00:40:30,799
the prime factorization you'll win a

934
00:40:29,299 --> 00:40:33,680
million dollars is the clay<font color="#E5E5E5"> institute</font>

935
00:40:30,799 --> 00:40:36,650
prize<font color="#E5E5E5"> and you'll be given a MacArthur</font>

936
00:40:33,680 --> 00:40:37,970
Genius grant all right and and you will

937
00:40:36,650 --> 00:40:41,310
solve one of the<font color="#E5E5E5"> most difficult problem</font>

938
00:40:37,970 --> 00:40:51,930
outstanding open problems in mathematics

939
00:40:41,310 --> 00:40:59,549
instant fame<font color="#CCCCCC"> No More school</font><font color="#E5E5E5"> Montana oh I</font>

940
00:40:51,930 --> 00:41:01,200
<font color="#E5E5E5">don't remember I don't remember oh so</font>

941
00:40:59,550 --> 00:41:03,000
that is<font color="#E5E5E5"> so that was that was</font><font color="#CCCCCC"> the famous</font>

942
00:41:01,200 --> 00:41:05,160
thing right that you can calculate<font color="#E5E5E5"> it in</font>

943
00:41:03,000 --> 00:41:07,560
verse<font color="#CCCCCC"> 4 that exponent right using</font>

944
00:41:05,160 --> 00:41:09,870
<font color="#CCCCCC">pheromones little theorem right and the</font>

945
00:41:07,560 --> 00:41:12,540
inverse is guaranteed by Euler's

946
00:41:09,870 --> 00:41:13,890
function<font color="#CCCCCC"> right</font><font color="#E5E5E5"> Oilers function the fair</font>

947
00:41:12,540 --> 00:41:16,230
<font color="#E5E5E5">Mazel theorem gives you away using</font>

948
00:41:13,890 --> 00:41:17,790
Euler's function to calculate an inverse

949
00:41:16,230 --> 00:41:19,260
for that exponent so you can<font color="#E5E5E5"> recover</font>

950
00:41:17,790 --> 00:41:20,490
back the encrypted message<font color="#E5E5E5"> if I had a</font>

951
00:41:19,260 --> 00:41:22,050
chalkboard I would write it out in one

952
00:41:20,490 --> 00:41:42,089
line it would make so much more sense

953
00:41:22,050 --> 00:41:44,040
than me talking about yeah yeah yeah so

954
00:41:42,090 --> 00:41:47,790
it's very very problematic right

955
00:41:44,040 --> 00:41:49,350
extremely problematic so if you have the

956
00:41:47,790 --> 00:41:52,200
private key for one of these long-term

957
00:41:49,350 --> 00:41:53,880
TLS certificate right then that's<font color="#E5E5E5"> the</font>

958
00:41:52,200 --> 00:41:55,649
way and so let's say Google's TLS

959
00:41:53,880 --> 00:41:57,450
certificate you were<font color="#CCCCCC"> able</font><font color="#E5E5E5"> to factor it</font>

960
00:41:55,650 --> 00:42:00,090
right or found a collision that factored

961
00:41:57,450 --> 00:42:02,430
it right in<font color="#E5E5E5"> this data set right then</font>

962
00:42:00,090 --> 00:42:04,710
<font color="#E5E5E5">what could you do right you could you</font>

963
00:42:02,430 --> 00:42:06,540
could fraudulently right tell everybody

964
00:42:04,710 --> 00:42:08,790
that your google and it would pass

965
00:42:06,540 --> 00:42:10,410
everybody a certificate check all right

966
00:42:08,790 --> 00:42:12,300
you get to impersonate google all over

967
00:42:10,410 --> 00:42:16,470
the world and everybody would trust you

968
00:42:12,300 --> 00:42:29,010
that you are<font color="#E5E5E5"> Google yeah</font>

969
00:42:16,470 --> 00:42:30,868
for what let's encrypt you have to tell

970
00:42:29,010 --> 00:42:32,670
me<font color="#E5E5E5"> what that</font><font color="#CCCCCC"> is sorry I don't I'm I</font>

971
00:42:30,869 --> 00:42:36,840
don't do computers<font color="#E5E5E5"> I just seemed it oh</font>

972
00:42:32,670 --> 00:42:41,280
so they<font color="#E5E5E5"> do they give you certificates</font>

973
00:42:36,840 --> 00:42:45,030
right<font color="#E5E5E5"> okay fine certificate so normally</font>

974
00:42:41,280 --> 00:42:47,310
<font color="#CCCCCC">the way those work is is you provide the</font>

975
00:42:45,030 --> 00:42:49,740
public key all right they don't generate

976
00:42:47,310 --> 00:42:51,480
it for you you generate yourself submit

977
00:42:49,740 --> 00:42:53,368
that public key<font color="#E5E5E5"> on to their a website or</font>

978
00:42:51,480 --> 00:42:56,490
to<font color="#CCCCCC"> their service</font><font color="#E5E5E5"> and they give you back</font>

979
00:42:53,369 --> 00:42:58,770
a certificate that says this is trusted

980
00:42:56,490 --> 00:43:01,140
to have come from this<font color="#E5E5E5"> person right so</font>

981
00:42:58,770 --> 00:43:03,359
so that third party has no idea what

982
00:43:01,140 --> 00:43:05,400
your private key is that<font color="#E5E5E5"> makes sense</font>

983
00:43:03,359 --> 00:43:07,770
they're<font color="#CCCCCC"> just they're just saying that</font>

984
00:43:05,400 --> 00:43:09,240
that we are we're telling the rest of

985
00:43:07,770 --> 00:43:10,800
the world<font color="#E5E5E5"> that it came from you and you</font>

986
00:43:09,240 --> 00:43:14,660
should believe us it didn't<font color="#CCCCCC"> come from</font>

987
00:43:10,800 --> 00:43:14,660
him yeah

988
00:43:18,760 --> 00:43:31,990
right now for a factoring out with them

989
00:43:21,370 --> 00:43:37,810
yeah so not connected with<font color="#E5E5E5"> our day or</font>

990
00:43:31,990 --> 00:43:40,330
sure so yeah I'm probably not<font color="#CCCCCC"> the best</font>

991
00:43:37,810 --> 00:43:41,529
person to ask that<font color="#E5E5E5"> right so back when I</font>

992
00:43:40,330 --> 00:43:42,700
was a professor I used to say that

993
00:43:41,530 --> 00:43:45,010
whenever<font color="#E5E5E5"> you sign up to take a math</font>

994
00:43:42,700 --> 00:43:46,600
class you<font color="#E5E5E5"> are willingly subjecting</font>

995
00:43:45,010 --> 00:43:47,980
yourself to the bias of that person<font color="#E5E5E5"> and</font>

996
00:43:46,600 --> 00:43:50,200
how they look at the scientific world

997
00:43:47,980 --> 00:43:51,550
right so there's two types of

998
00:43:50,200 --> 00:43:53,620
cryptographers that I've noticed<font color="#E5E5E5"> now</font>

999
00:43:51,550 --> 00:43:57,910
that i'm not<font color="#E5E5E5"> a professor there's the</font>

1000
00:43:53,620 --> 00:44:00,490
type that types in ssh key gen right and

1001
00:43:57,910 --> 00:44:01,690
knows how to use<font color="#E5E5E5"> a library and implement</font>

1002
00:44:00,490 --> 00:44:03,640
it correctly and call themselves<font color="#CCCCCC"> a</font>

1003
00:44:01,690 --> 00:44:04,750
cryptographer right and then there's of

1004
00:44:03,640 --> 00:44:06,220
course<font color="#CCCCCC"> the side of cryptography the</font>

1005
00:44:04,750 --> 00:44:08,560
<font color="#E5E5E5">deals with the algorithms itself how do</font>

1006
00:44:06,220 --> 00:44:10,899
you prove<font color="#CCCCCC"> that something is secure right</font>

1007
00:44:08,560 --> 00:44:12,490
how you prove<font color="#E5E5E5"> that something secure or</font>

1008
00:44:10,900 --> 00:44:13,540
more secure than something<font color="#E5E5E5"> else how do</font>

1009
00:44:12,490 --> 00:44:15,879
you prove something that's vulnerable

1010
00:44:13,540 --> 00:44:17,500
right we call that crypt analysis right

1011
00:44:15,880 --> 00:44:18,460
and you can say well there's two types

1012
00:44:17,500 --> 00:44:20,110
of vulnerabilities there's a

1013
00:44:18,460 --> 00:44:21,850
mathematical vulnerability like this

1014
00:44:20,110 --> 00:44:23,830
like this collision algorithm that

1015
00:44:21,850 --> 00:44:25,450
exists or somebody coming up with a

1016
00:44:23,830 --> 00:44:26,680
better factoring algorithm there's that

1017
00:44:25,450 --> 00:44:29,529
vulnerability and then there's a

1018
00:44:26,680 --> 00:44:32,410
vulnerability that that some idiot used

1019
00:44:29,530 --> 00:44:34,270
md5 to hash a password right and there's

1020
00:44:32,410 --> 00:44:37,000
some other idiots that use da da for

1021
00:44:34,270 --> 00:44:37,990
their password yeah and<font color="#E5E5E5"> then those kinds</font>

1022
00:44:37,000 --> 00:44:39,190
but you see the difference in the

1023
00:44:37,990 --> 00:44:40,959
vulnerabilities does that make sense so

1024
00:44:39,190 --> 00:44:43,780
what I'm saying is there's two active

1025
00:44:40,960 --> 00:44:45,730
errors of<font color="#E5E5E5"> research right one of them you</font>

1026
00:44:43,780 --> 00:44:47,410
might a good<font color="#E5E5E5"> example would be these you</font>

1027
00:44:45,730 --> 00:44:50,890
know these people to finance l0 day

1028
00:44:47,410 --> 00:44:52,930
things right and then the other<font color="#E5E5E5"> side are</font>

1029
00:44:50,890 --> 00:44:56,470
you<font color="#CCCCCC"> know the lonely math nerds that</font><font color="#E5E5E5"> sit</font>

1030
00:44:52,930 --> 00:44:59,379
in<font color="#CCCCCC"> a room with no windows and think</font><font color="#E5E5E5"> math</font>

1031
00:44:56,470 --> 00:45:00,759
yeah so which one were you asking about

1032
00:44:59,380 --> 00:45:02,200
I can't comment on the former one

1033
00:45:00,760 --> 00:45:05,650
because I don't yeah I<font color="#E5E5E5"> don't do</font>

1034
00:45:02,200 --> 00:45:07,029
computers but the one<font color="#E5E5E5"> that I</font><font color="#CCCCCC"> came so</font>

1035
00:45:05,650 --> 00:45:10,540
we're what<font color="#E5E5E5"> are active areas of research</font>

1036
00:45:07,030 --> 00:45:12,370
in cryptography so there is similar

1037
00:45:10,540 --> 00:45:15,250
collision algorithms and I took

1038
00:45:12,370 --> 00:45:17,680
something<font color="#E5E5E5"> slides out in in digital</font>

1039
00:45:15,250 --> 00:45:19,090
signatures right and they work a little

1040
00:45:17,680 --> 00:45:20,950
bit differently they're not a collision

1041
00:45:19,090 --> 00:45:22,000
of greatest common divisors does anybody

1042
00:45:20,950 --> 00:45:25,600
know how a digital signature algorithm

1043
00:45:22,000 --> 00:45:31,450
works you<font color="#E5E5E5"> know or you have questions</font>

1044
00:45:25,600 --> 00:45:33,549
so broken broken is probably very bad

1045
00:45:31,450 --> 00:45:35,080
terms somebody produced two pdfs that

1046
00:45:33,550 --> 00:45:37,990
are different that hash to the same

1047
00:45:35,080 --> 00:45:39,640
value right so essentially in theory

1048
00:45:37,990 --> 00:45:42,850
sha-1 is worthless because somebody

1049
00:45:39,640 --> 00:45:44,470
found<font color="#CCCCCC"> a collision well in theory right</font>

1050
00:45:42,850 --> 00:45:47,230
there's infinitely many collisions out

1051
00:45:44,470 --> 00:45:49,480
there right because you're taking<font color="#CCCCCC"> an</font>

1052
00:45:47,230 --> 00:45:51,250
infinite space of any file in the world

1053
00:45:49,480 --> 00:45:56,470
or any message in the world and turning

1054
00:45:51,250 --> 00:45:58,240
it<font color="#CCCCCC"> into how many</font><font color="#E5E5E5"> characters 5i will not</font>

1055
00:45:56,470 --> 00:46:00,910
that many characters right so you're

1056
00:45:58,240 --> 00:46:03,009
bound to get collisions yeah so somebody

1057
00:46:00,910 --> 00:46:05,680
just happen to<font color="#CCCCCC"> find one or produce one</font>

1058
00:46:03,010 --> 00:46:07,030
but anyways what was I saying about

1059
00:46:05,680 --> 00:46:08,950
digital signature hours and collisions

1060
00:46:07,030 --> 00:46:12,460
right<font color="#E5E5E5"> so to make</font><font color="#CCCCCC"> a digital signature</font>

1061
00:46:08,950 --> 00:46:14,919
what you have to do is you take you take

1062
00:46:12,460 --> 00:46:16,660
a private signing key together with a

1063
00:46:14,920 --> 00:46:20,230
hash of some document you want to sign

1064
00:46:16,660 --> 00:46:21,790
right<font color="#CCCCCC"> and a random number that you</font>

1065
00:46:20,230 --> 00:46:23,860
generate that nobody else generate and

1066
00:46:21,790 --> 00:46:26,650
then you hand that to somebody and they

1067
00:46:23,860 --> 00:46:28,900
can verify that<font color="#E5E5E5"> you signed it right in</font>

1068
00:46:26,650 --> 00:46:32,380
such a way that you<font color="#E5E5E5"> can</font><font color="#CCCCCC"> never decide you</font>

1069
00:46:28,900 --> 00:46:33,700
can never you can never deny that you

1070
00:46:32,380 --> 00:46:34,750
ever signed it to a third party either

1071
00:46:33,700 --> 00:46:35,710
right because<font color="#CCCCCC"> you're the only one that</font>

1072
00:46:34,750 --> 00:46:37,240
<font color="#E5E5E5">could have signed it cuz you're the only</font>

1073
00:46:35,710 --> 00:46:39,580
one with the public key or with the

1074
00:46:37,240 --> 00:46:41,620
private signing key right so it turns

1075
00:46:39,580 --> 00:46:43,779
<font color="#E5E5E5">out that if</font><font color="#CCCCCC"> you sign two different</font>

1076
00:46:41,620 --> 00:46:46,240
messages with this using<font color="#CCCCCC"> the same random</font>

1077
00:46:43,780 --> 00:46:48,130
number right you can back compute to the

1078
00:46:46,240 --> 00:46:51,490
private key<font color="#E5E5E5"> alright and then what can</font>

1079
00:46:48,130 --> 00:46:54,220
<font color="#E5E5E5">you do it</font><font color="#CCCCCC"> for with a private</font><font color="#E5E5E5"> key if</font>

1080
00:46:51,490 --> 00:46:55,750
you're really<font color="#E5E5E5"> mad at Sony you can use</font>

1081
00:46:54,220 --> 00:46:58,299
their private key to fraudulently

1082
00:46:55,750 --> 00:47:00,850
request more data from them like I<font color="#CCCCCC"> don't</font>

1083
00:46:58,300 --> 00:47:03,400
<font color="#CCCCCC">know the payrolls of very famous actors</font>

1084
00:47:00,850 --> 00:47:05,380
right you can do that kind of thing so

1085
00:47:03,400 --> 00:47:07,300
that<font color="#E5E5E5"> was</font><font color="#CCCCCC"> that was</font><font color="#E5E5E5"> the big Sony leak that</font>

1086
00:47:05,380 --> 00:47:11,410
happened over<font color="#CCCCCC"> something with North Korea</font>

1087
00:47:07,300 --> 00:47:12,580
I don't know but anyway so how you can

1088
00:47:11,410 --> 00:47:16,240
go<font color="#CCCCCC"> through and you can you can do a</font>

1089
00:47:12,580 --> 00:47:17,860
<font color="#CCCCCC">similar out a similar test of digital</font>

1090
00:47:16,240 --> 00:47:19,089
signatures all across the world right so

1091
00:47:17,860 --> 00:47:20,860
there's one area of research<font color="#E5E5E5"> that we're</font>

1092
00:47:19,090 --> 00:47:23,470
focused on there's factoring algorithms

1093
00:47:20,860 --> 00:47:25,330
there's other cryptographic protocols

1094
00:47:23,470 --> 00:47:27,910
you might<font color="#E5E5E5"> have heard of the discrete</font>

1095
00:47:25,330 --> 00:47:29,860
logarithm problem right it's sort of

1096
00:47:27,910 --> 00:47:32,080
analogous to factoring in the sense that

1097
00:47:29,860 --> 00:47:34,330
there's lots<font color="#E5E5E5"> of theorems that relate the</font>

1098
00:47:32,080 --> 00:47:36,069
<font color="#E5E5E5">two right so there's a variant of the</font>

1099
00:47:34,330 --> 00:47:38,020
general number field sieve that will

1100
00:47:36,070 --> 00:47:39,760
solve that discrete logarithm

1101
00:47:38,020 --> 00:47:41,440
problem and break that type of<font color="#CCCCCC"> cripple</font>

1102
00:47:39,760 --> 00:47:46,590
so there's active research in how do you

1103
00:47:41,440 --> 00:47:46,590
<font color="#E5E5E5">speed up that process as well right yeah</font>

1104
00:48:03,810 --> 00:48:12,120
so in fact scanning all of ipv6 is

1105
00:48:09,720 --> 00:48:14,129
intractable right what is it<font color="#E5E5E5"> like 30</font>

1106
00:48:12,120 --> 00:48:31,859
million years or something it's

1107
00:48:14,130 --> 00:48:34,050
<font color="#E5E5E5">estimated horrible yeah I don't</font><font color="#CCCCCC"> know</font>

1108
00:48:31,860 --> 00:48:50,360
anything about<font color="#CCCCCC"> the protocol I don't do</font>

1109
00:48:34,050 --> 00:48:50,360
computers yeah

1110
00:49:14,590 --> 00:49:17,769
[Music]

1111
00:49:41,360 --> 00:49:46,400
well I've got<font color="#E5E5E5"> another fun one that's</font>

1112
00:49:43,700 --> 00:49:47,480
probably it's a topic research that it's

1113
00:49:46,400 --> 00:49:48,950
at the interface that's sort of the

1114
00:49:47,480 --> 00:49:50,900
vulnerability side of cryptography the

1115
00:49:48,950 --> 00:49:53,029
<font color="#E5E5E5">math side</font><font color="#CCCCCC"> all right so i</font><font color="#E5E5E5"> think it was</font>

1116
00:49:50,900 --> 00:49:55,580
like<font color="#E5E5E5"> last year or so it was found out</font>

1117
00:49:53,030 --> 00:49:56,990
that Isis decided<font color="#E5E5E5"> we decided it would be</font>

1118
00:49:55,580 --> 00:50:01,310
more secure if they rolled their own

1119
00:49:56,990 --> 00:50:04,069
cryptography standards<font color="#CCCCCC"> ok so they use</font>

1120
00:50:01,310 --> 00:50:06,230
<font color="#E5E5E5">you know they used a variant of RSA and</font>

1121
00:50:04,070 --> 00:50:09,950
they thought well everybody's using

1122
00:50:06,230 --> 00:50:12,320
1024-bit right so we would be<font color="#E5E5E5"> more</font>

1123
00:50:09,950 --> 00:50:13,879
<font color="#E5E5E5">secure if we use something that's a bit</font>

1124
00:50:12,320 --> 00:50:16,010
more obscure than what everybody else is

1125
00:50:13,880 --> 00:50:17,930
doing so we<font color="#E5E5E5"> should use like six hundred</font>

1126
00:50:16,010 --> 00:50:20,390
<font color="#CCCCCC">and twelve bits I don't remember</font><font color="#E5E5E5"> what it</font>

1127
00:50:17,930 --> 00:50:22,430
was<font color="#CCCCCC"> something like</font><font color="#E5E5E5"> that</font><font color="#CCCCCC"> right yeah and</font>

1128
00:50:20,390 --> 00:50:25,490
not<font color="#E5E5E5"> only that but because we're the only</font>

1129
00:50:22,430 --> 00:50:27,649
people in the world using 612 bit it

1130
00:50:25,490 --> 00:50:29,779
<font color="#E5E5E5">makes it really easy to see right</font>

1131
00:50:27,650 --> 00:50:33,590
anybody implementing cut algorithm must

1132
00:50:29,780 --> 00:50:35,150
be yes so we love it when people try to

1133
00:50:33,590 --> 00:50:36,560
roll their own cryptography<font color="#CCCCCC"> Ivan let me</font>

1134
00:50:35,150 --> 00:50:38,150
try to roll their own hash function once

1135
00:50:36,560 --> 00:50:48,200
to a while ago that didn't work out<font color="#CCCCCC"> so</font>

1136
00:50:38,150 --> 00:50:50,960
well for them either ya know multiple

1137
00:50:48,200 --> 00:50:55,609
multiple people using an overlapping

1138
00:50:50,960 --> 00:50:58,760
prime factor right and yeah so there it

1139
00:50:55,610 --> 00:51:00,620
is right so it's two people both

1140
00:50:58,760 --> 00:51:03,140
generate public keys but they both share

1141
00:51:00,620 --> 00:51:04,040
the prime<font color="#E5E5E5"> P you</font><font color="#CCCCCC"> can calculate it I mean</font>

1142
00:51:03,140 --> 00:51:05,150
you<font color="#E5E5E5"> can calculate with Euclid's</font>

1143
00:51:04,040 --> 00:51:07,279
algorithm for one of them in

1144
00:51:05,150 --> 00:51:08,780
microseconds right calculate the

1145
00:51:07,280 --> 00:51:11,900
greatest<font color="#E5E5E5"> common divisor and recover p</font>

1146
00:51:08,780 --> 00:51:13,160
and then you just do simple division to

1147
00:51:11,900 --> 00:51:15,200
get Q&R now you have the keys in the

1148
00:51:13,160 --> 00:51:16,490
kingdom right and the reason another

1149
00:51:15,200 --> 00:51:20,540
reason why these are so dangerous is

1150
00:51:16,490 --> 00:51:22,790
that organizations love to not pay four

1151
00:51:20,540 --> 00:51:24,140
separate signed certificates so every

1152
00:51:22,790 --> 00:51:26,900
server is using the same TLS certificate

1153
00:51:24,140 --> 00:51:28,970
right so what happens if you have the

1154
00:51:26,900 --> 00:51:31,370
keys to one of them then you're in and

1155
00:51:28,970 --> 00:51:33,350
you have the keys to all too many others

1156
00:51:31,370 --> 00:51:34,040
and once you're in those you<font color="#E5E5E5"> have you</font>

1157
00:51:33,350 --> 00:51:36,080
know all<font color="#CCCCCC"> these fun little</font>

1158
00:51:34,040 --> 00:51:37,460
vulnerabilities like ms 08 and things

1159
00:51:36,080 --> 00:51:40,430
like that you<font color="#E5E5E5"> guys talked about</font><font color="#CCCCCC"> in</font>

1160
00:51:37,460 --> 00:51:41,900
digital forensics right and<font color="#E5E5E5"> you and you</font>

1161
00:51:40,430 --> 00:51:43,399
start<font color="#E5E5E5"> getting more stuff from all over</font>

1162
00:51:41,900 --> 00:51:44,720
the place right<font color="#E5E5E5"> so one door opens</font>

1163
00:51:43,400 --> 00:51:46,010
another opens another and open<font color="#CCCCCC"> those and</font>

1164
00:51:44,720 --> 00:51:48,859
you just<font color="#E5E5E5"> keep going until you can't go</font>

1165
00:51:46,010 --> 00:51:50,600
anymore<font color="#CCCCCC"> yeah and by the</font><font color="#E5E5E5"> end you've owned</font>

1166
00:51:48,860 --> 00:51:52,170
something right so how you say it you

1167
00:51:50,600 --> 00:51:54,868
owned

1168
00:51:52,170 --> 00:51:56,880
you did what pentesting people when you

1169
00:51:54,869 --> 00:52:00,359
like when you penetrate<font color="#CCCCCC"> somebody's</font>

1170
00:51:56,880 --> 00:52:07,410
server you call it owning or<font color="#CCCCCC"> poet okay</font>

1171
00:52:00,359 --> 00:52:17,700
gosh<font color="#E5E5E5"> I'm on the record for</font><font color="#CCCCCC"> that</font><font color="#E5E5E5"> aren't I</font>

1172
00:52:07,410 --> 00:52:22,500
for not knowing that<font color="#E5E5E5"> term yeah but</font>

1173
00:52:17,700 --> 00:52:47,069
what's what I don't know anything about

1174
00:52:22,500 --> 00:52:55,890
<font color="#CCCCCC">that I don't even know</font><font color="#E5E5E5"> what those</font>

1175
00:52:47,069 --> 00:52:58,259
applications are sorry I don't<font color="#E5E5E5"> okay yeah</font>

1176
00:52:55,890 --> 00:52:59,759
I've<font color="#E5E5E5"> sent a text message before no I</font>

1177
00:52:58,260 --> 00:53:02,670
have sent a text message before I follow

1178
00:52:59,760 --> 00:53:04,680
you there so this is they're like little

1179
00:53:02,670 --> 00:53:09,510
apps to encrypt your text messages okay

1180
00:53:04,680 --> 00:53:10,649
okay<font color="#CCCCCC"> all right I believe you i'm not</font>

1181
00:53:09,510 --> 00:53:13,430
called people<font color="#CCCCCC"> on my cell phone before</font>

1182
00:53:10,650 --> 00:53:13,430
too but that's<font color="#E5E5E5"> about it</font>

1183
00:53:21,950 --> 00:53:26,210
yeah and that was the whole discussion

1184
00:53:23,780 --> 00:53:27,589
right I mean so any other thing is<font color="#E5E5E5"> you</font>

1185
00:53:26,210 --> 00:53:30,020
know everybody loves these<font color="#E5E5E5"> buzzwords</font>

1186
00:53:27,589 --> 00:53:31,790
like internet of things right how often

1187
00:53:30,020 --> 00:53:37,190
is somebody upgrading the firmware of

1188
00:53:31,790 --> 00:53:39,560
the<font color="#E5E5E5"> refrigerator never right never so if</font>

1189
00:53:37,190 --> 00:53:43,130
there was some flaw ulnar ability right

1190
00:53:39,560 --> 00:53:45,078
or or some collision right that was

1191
00:53:43,130 --> 00:53:46,099
generated in that certificates on there

1192
00:53:45,079 --> 00:53:49,010
it's never going to<font color="#E5E5E5"> get up to it's</font>

1193
00:53:46,099 --> 00:53:50,329
<font color="#E5E5E5">always going to be there right and in</font>

1194
00:53:49,010 --> 00:53:52,790
fact what we find is that exactly

1195
00:53:50,329 --> 00:53:54,950
happened so a couple years<font color="#E5E5E5"> ago in</font>

1196
00:53:52,790 --> 00:53:56,329
<font color="#E5E5E5">another study</font><font color="#CCCCCC"> about about collisions</font>

1197
00:53:54,950 --> 00:53:59,328
they weren't using the same algorithm to

1198
00:53:56,329 --> 00:54:01,940
find them as we are but what they found

1199
00:53:59,329 --> 00:54:03,859
was just by collecting metadata on

1200
00:54:01,940 --> 00:54:05,150
affected servers right just by

1201
00:54:03,859 --> 00:54:06,589
connecting back to the server and<font color="#E5E5E5"> saying</font>

1202
00:54:05,150 --> 00:54:08,150
what operating system you're using right

1203
00:54:06,589 --> 00:54:09,920
<font color="#E5E5E5">what type of device are you what</font>

1204
00:54:08,150 --> 00:54:12,440
firmware version they collected a lot<font color="#E5E5E5"> of</font>

1205
00:54:09,920 --> 00:54:14,780
information and found that there<font color="#E5E5E5"> was</font>

1206
00:54:12,440 --> 00:54:17,990
about 50,000 IBM<font color="#E5E5E5"> enterprise level</font>

1207
00:54:14,780 --> 00:54:20,420
servers right whose default TLS

1208
00:54:17,990 --> 00:54:25,339
certificates came from a set of prime

1209
00:54:20,420 --> 00:54:26,540
that was<font color="#E5E5E5"> nine long only</font><font color="#CCCCCC"> nine Prime's 450</font>

1210
00:54:25,339 --> 00:54:28,490
used across fifty thousand different

1211
00:54:26,540 --> 00:54:29,509
machines so what was happening was so of

1212
00:54:28,490 --> 00:54:32,089
course that<font color="#CCCCCC"> you</font><font color="#E5E5E5"> know they notify the</font>

1213
00:54:29,510 --> 00:54:34,010
people did to say they notified IBM<font color="#E5E5E5"> you</font>

1214
00:54:32,089 --> 00:54:36,200
know six<font color="#E5E5E5"> months</font><font color="#CCCCCC"> before they were going</font>

1215
00:54:34,010 --> 00:54:38,390
to publish whatever the agreement is and

1216
00:54:36,200 --> 00:54:39,589
what is IBM do whatever they figure<font color="#CCCCCC"> out</font>

1217
00:54:38,390 --> 00:54:40,819
well will they figure<font color="#E5E5E5"> out was these</font>

1218
00:54:39,589 --> 00:54:44,540
things are coming<font color="#E5E5E5"> down the</font><font color="#CCCCCC"> production</font>

1219
00:54:40,819 --> 00:54:47,750
line right and a robot is booting them

1220
00:54:44,540 --> 00:54:49,700
up to do the function check right going

1221
00:54:47,750 --> 00:54:51,290
down<font color="#E5E5E5"> to the next stage right the default</font>

1222
00:54:49,700 --> 00:54:52,430
certificate is generated going down the

1223
00:54:51,290 --> 00:54:54,349
next stage they're all happening exactly

1224
00:54:52,430 --> 00:54:55,759
the same moment in time right<font color="#E5E5E5"> so the</font>

1225
00:54:54,349 --> 00:54:58,040
random<font color="#E5E5E5"> number generator that's that's</font>

1226
00:54:55,760 --> 00:54:59,780
you know polling various like you know

1227
00:54:58,040 --> 00:55:01,190
noise of the sound card and that kind of

1228
00:54:59,780 --> 00:55:03,260
stuff<font color="#E5E5E5"> from every machine is essentially</font>

1229
00:55:01,190 --> 00:55:04,760
identical as it goes down<font color="#CCCCCC"> the line right</font>

1230
00:55:03,260 --> 00:55:06,410
<font color="#E5E5E5">so of course the random</font><font color="#CCCCCC"> number generator</font>

1231
00:55:04,760 --> 00:55:07,819
or the pseudo-random number generator is

1232
00:55:06,410 --> 00:55:09,560
going to be generating or is<font color="#E5E5E5"> going to</font>

1233
00:55:07,819 --> 00:55:13,790
with high probability generate the same

1234
00:55:09,560 --> 00:55:16,009
<font color="#CCCCCC">Prime's for you so then again that's on</font>

1235
00:55:13,790 --> 00:55:17,300
an implementation side right there's an

1236
00:55:16,010 --> 00:55:18,710
interesting research in mathematics

1237
00:55:17,300 --> 00:55:21,859
about how do you effectively generate

1238
00:55:18,710 --> 00:55:24,530
random data and anybody<font color="#E5E5E5"> if you come</font>

1239
00:55:21,859 --> 00:55:27,259
across any company that wants to sell

1240
00:55:24,530 --> 00:55:32,910
<font color="#CCCCCC">you a service to generate truly random</font>

1241
00:55:27,260 --> 00:55:38,040
numbers run run right Alan Turing proved

1242
00:55:32,910 --> 00:55:40,620
that no machine can can generate a truly

1243
00:55:38,040 --> 00:55:43,380
uniformly distributed data set right so

1244
00:55:40,620 --> 00:55:47,190
true randomness does not exist in the

1245
00:55:43,380 --> 00:55:48,660
world of computers right it's<font color="#E5E5E5"> impossible</font>

1246
00:55:47,190 --> 00:55:50,310
to detect in nature either true

1247
00:55:48,660 --> 00:55:52,290
randomness and very interesting<font color="#CCCCCC"> result</font>

1248
00:55:50,310 --> 00:55:54,060
so the best<font color="#E5E5E5"> you can do</font><font color="#CCCCCC"> with a limit</font>

1249
00:55:52,290 --> 00:55:56,730
point those you take in calculus you

1250
00:55:54,060 --> 00:55:58,320
give<font color="#E5E5E5"> me some number epsilon really small</font>

1251
00:55:56,730 --> 00:56:00,390
number and you want to approximate

1252
00:55:58,320 --> 00:56:03,270
uniformly distribute or approximate

1253
00:56:00,390 --> 00:56:04,620
random that closely well in theory if

1254
00:56:03,270 --> 00:56:06,180
you have enough computation power you

1255
00:56:04,620 --> 00:56:07,859
can do it and<font color="#E5E5E5"> the smaller epsilon is the</font>

1256
00:56:06,180 --> 00:56:09,839
more computation power you have<font color="#E5E5E5"> to use</font>

1257
00:56:07,860 --> 00:56:19,470
<font color="#CCCCCC">but</font><font color="#E5E5E5"> you can never actually get truly</font>

1258
00:56:09,840 --> 00:56:24,140
random inside of a computer<font color="#CCCCCC"> ok yeah like</font>

1259
00:56:19,470 --> 00:56:24,140
five minutes I don't know yeah

1260
00:56:26,390 --> 00:56:41,150
yeah there's lots<font color="#E5E5E5"> of different</font><font color="#CCCCCC"> ways to</font>

1261
00:56:39,619 --> 00:56:43,130
<font color="#CCCCCC">try to do it normally what happens is</font>

1262
00:56:41,150 --> 00:56:45,619
you take what's called pseudo random

1263
00:56:43,130 --> 00:56:47,450
data right so you pull the<font color="#E5E5E5"> sound card</font>

1264
00:56:45,619 --> 00:56:48,859
you pull the mouse position but that's

1265
00:56:47,450 --> 00:56:51,049
not anywhere close to uniformly

1266
00:56:48,859 --> 00:56:52,670
distributed well one of the valuable

1267
00:56:51,049 --> 00:56:55,819
characteristics of a cryptographic hash

1268
00:56:52,670 --> 00:56:57,799
function is<font color="#CCCCCC"> that its output right with</font>

1269
00:56:55,819 --> 00:57:00,140
you know whatever<font color="#E5E5E5"> inputs its output</font>

1270
00:56:57,799 --> 00:57:02,569
should be<font color="#E5E5E5"> approximately or as close as</font>

1271
00:57:00,140 --> 00:57:04,549
possible uniformly random were uniformly

1272
00:57:02,569 --> 00:57:07,130
distributed that<font color="#E5E5E5"> make sense so you take</font>

1273
00:57:04,549 --> 00:57:08,869
this pseudo random input right that's

1274
00:57:07,130 --> 00:57:10,339
<font color="#E5E5E5">not really random because if you I knew</font>

1275
00:57:08,869 --> 00:57:12,680
what soundtrack you were listening to<font color="#CCCCCC"> I</font>

1276
00:57:10,339 --> 00:57:13,759
could reconstruct it right and then you

1277
00:57:12,680 --> 00:57:15,169
run it through a cryptographic hash

1278
00:57:13,760 --> 00:57:17,450
function now of a sudden it's more

1279
00:57:15,170 --> 00:57:20,210
uniformly ran more uniformly distributed

1280
00:57:17,450 --> 00:57:22,910
right<font color="#E5E5E5"> so you save that that that ultra</font>

1281
00:57:20,210 --> 00:57:26,089
hashed data right you save it in a file

1282
00:57:22,910 --> 00:57:29,029
on Linux it's called / dev random or dev

1283
00:57:26,089 --> 00:57:30,950
you random all right you random i think

1284
00:57:29,029 --> 00:57:35,059
is for legacy purposes but I don't know

1285
00:57:30,950 --> 00:57:36,680
computers yeah so and<font color="#E5E5E5"> then whenever you</font>

1286
00:57:35,059 --> 00:57:39,230
need a<font color="#E5E5E5"> random number for cryptographic</font>

1287
00:57:36,680 --> 00:57:41,419
purposes you grab from that file and

1288
00:57:39,230 --> 00:57:43,099
it's constantly replaced in a stream<font color="#E5E5E5"> all</font>

1289
00:57:41,420 --> 00:57:44,089
<font color="#E5E5E5">right well what if you're doing you know</font>

1290
00:57:43,099 --> 00:57:47,269
millions and millions of calculations

1291
00:57:44,089 --> 00:57:49,549
per second right and you're<font color="#E5E5E5"> taking away</font>

1292
00:57:47,269 --> 00:57:51,859
<font color="#E5E5E5">from</font><font color="#CCCCCC"> that file faster</font><font color="#E5E5E5"> than its being</font>

1293
00:57:49,549 --> 00:57:54,529
repopulated<font color="#CCCCCC"> right well you can you can</font>

1294
00:57:51,859 --> 00:57:56,000
force right very non uniformly

1295
00:57:54,529 --> 00:57:58,160
distributed data to come out<font color="#CCCCCC"> of it</font><font color="#E5E5E5"> and</font>

1296
00:57:56,000 --> 00:57:59,150
that's exactly what what a recent attack

1297
00:57:58,160 --> 00:58:01,250
actually does i<font color="#E5E5E5"> think it's called the</font>

1298
00:57:59,150 --> 00:58:05,779
drown attack right where you've been

1299
00:58:01,250 --> 00:58:08,089
barred so first you have to put pone the

1300
00:58:05,779 --> 00:58:10,160
machine you have<font color="#CCCCCC"> to get in right and</font>

1301
00:58:08,089 --> 00:58:11,058
then you constantly you have some virus

1302
00:58:10,160 --> 00:58:12,799
or something or malware in the

1303
00:58:11,059 --> 00:58:14,900
background that constantly makes calls

1304
00:58:12,799 --> 00:58:17,210
for random data faster than the<font color="#E5E5E5"> computer</font>

1305
00:58:14,900 --> 00:58:19,069
can generate it right<font color="#E5E5E5"> and then you start</font>

1306
00:58:17,210 --> 00:58:21,650
looking<font color="#E5E5E5"> at the outputs of all the of all</font>

1307
00:58:19,069 --> 00:58:23,269
of all the values for cryptographic

1308
00:58:21,650 --> 00:58:26,550
purposes that have been generated and

1309
00:58:23,269 --> 00:58:31,589
well then there you have<font color="#CCCCCC"> it</font>

1310
00:58:26,550 --> 00:58:33,060
yeah there's hardware based methods that

1311
00:58:31,590 --> 00:58:36,150
are that<font color="#E5E5E5"> seem to be better so there's</font>

1312
00:58:33,060 --> 00:58:38,460
some there's some very<font color="#E5E5E5"> expensive thing</font>

1313
00:58:36,150 --> 00:58:40,290
that has<font color="#CCCCCC"> to do with like measuring how</font>

1314
00:58:38,460 --> 00:58:49,200
photons bounce back and forth and some

1315
00:58:40,290 --> 00:58:59,160
tube on a motherboard yeah yeah I like

1316
00:58:49,200 --> 00:59:02,759
that<font color="#E5E5E5"> one that one's a given yeah so</font>

1317
00:58:59,160 --> 00:59:04,440
that's the whole point right the closer

1318
00:59:02,760 --> 00:59:05,850
you get to uniformly distributed which

1319
00:59:04,440 --> 00:59:07,890
for all intents and purposes is what

1320
00:59:05,850 --> 00:59:10,110
random means right the closer you get to

1321
00:59:07,890 --> 00:59:12,210
a uniformly distributed data set right

1322
00:59:10,110 --> 00:59:13,740
uniform distribute means that every

1323
00:59:12,210 --> 00:59:14,970
element has equal probability of

1324
00:59:13,740 --> 00:59:17,490
occurring if you just start picking

1325
00:59:14,970 --> 00:59:19,109
seconds right so the closer you get the

1326
00:59:17,490 --> 00:59:21,060
closer you want to get to uniformly

1327
00:59:19,110 --> 00:59:23,130
distributed the more computational power

1328
00:59:21,060 --> 00:59:27,690
it takes to approximate that does that

1329
00:59:23,130 --> 00:59:29,820
make sense yeah so it's a limit point if

1330
00:59:27,690 --> 00:59:31,350
you want the only way to get truly

1331
00:59:29,820 --> 00:59:32,940
uniformly distributed a tour truly

1332
00:59:31,350 --> 00:59:35,370
random data is to have a truly<font color="#E5E5E5"> random</font>

1333
00:59:32,940 --> 00:59:36,780
data set which is impossible<font color="#CCCCCC"> to get</font>

1334
00:59:35,370 --> 00:59:37,830
because<font color="#E5E5E5"> you have to approximate you can</font>

1335
00:59:36,780 --> 00:59:45,450
pull me<font color="#E5E5E5"> distribute to get it the first</font>

1336
00:59:37,830 --> 00:59:57,450
place yeah all right I'm going to<font color="#E5E5E5"> go to</font>

1337
00:59:45,450 --> 01:00:01,910
<font color="#E5E5E5">the next talk thank you</font><font color="#CCCCCC"> you only</font>

1338
00:59:57,450 --> 01:00:13,129
interrupted<font color="#E5E5E5"> five-time real winner</font>

1339
01:00:01,910 --> 01:00:22,279
but that most days the<font color="#CCCCCC"> buildings on fire</font>

1340
01:00:13,130 --> 01:00:25,099
yet so we'll call<font color="#E5E5E5"> it a win we're going</font>

1341
01:00:22,280 --> 01:00:28,250
<font color="#E5E5E5">to go to marks talk</font><font color="#CCCCCC"> now honey we have</font>

1342
01:00:25,099 --> 01:00:29,809
<font color="#E5E5E5">one more it's the last one and you're</font>

1343
01:00:28,250 --> 01:00:38,450
<font color="#CCCCCC">going to be extra good in not an</font>

1344
01:00:29,809 --> 01:00:52,670
irregular sorry so sorry that's after

1345
01:00:38,450 --> 01:00:55,000
and we're all done you're busy hmm fun

1346
01:00:52,670 --> 01:00:55,000
is it

1347
01:01:05,819 --> 01:01:07,880
you

