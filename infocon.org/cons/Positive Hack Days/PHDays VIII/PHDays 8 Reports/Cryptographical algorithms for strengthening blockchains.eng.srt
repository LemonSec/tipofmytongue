1
00:00:00,060 --> 00:00:09,870
cryptographic algorithms<font color="#CCCCCC"> to to increase</font>

2
00:00:03,870 --> 00:00:12,210
the blockchain<font color="#E5E5E5"> strength first of like</font><font color="#CCCCCC"> to</font>

3
00:00:09,870 --> 00:00:17,299
thank everybody who<font color="#CCCCCC"> came to listen</font>

4
00:00:12,210 --> 00:00:20,430
second this<font color="#CCCCCC"> year's are</font><font color="#E5E5E5"> a few years as</font>

5
00:00:17,300 --> 00:00:24,060
our we<font color="#E5E5E5"> are supported by various large</font>

6
00:00:20,430 --> 00:00:27,119
companies in terms of training<font color="#E5E5E5"> students</font>

7
00:00:24,060 --> 00:00:30,689
who are doing<font color="#CCCCCC"> all that we started</font><font color="#E5E5E5"> from</font>

8
00:00:27,119 --> 00:00:31,640
<font color="#E5E5E5">as we</font><font color="#CCCCCC"> soft-pedal looks</font><font color="#E5E5E5"> in this right now</font>

9
00:00:30,689 --> 00:00:39,480
<font color="#CCCCCC">jetbrains</font>

10
00:00:31,640 --> 00:00:41,070
and share of a lab in cryptographic data

11
00:00:39,480 --> 00:00:47,699
protection and<font color="#E5E5E5"> the students do all the</font>

12
00:00:41,070 --> 00:00:55,050
work actually<font color="#E5E5E5"> let's start so in 2016 the</font>

13
00:00:47,700 --> 00:00:59,449
next released<font color="#E5E5E5"> draft entitled</font><font color="#CCCCCC"> reporting</font>

14
00:00:55,050 --> 00:00:59,449
post quantum cryptography

15
00:01:05,489 --> 00:01:11,470
this draft<font color="#E5E5E5"> presented NIST's current</font>

16
00:01:09,670 --> 00:01:17,880
understanding about standards of quantum

17
00:01:11,470 --> 00:01:21,910
computers if you're not afraid<font color="#E5E5E5"> of</font>

18
00:01:17,880 --> 00:01:24,339
quantum computers so<font color="#E5E5E5"> we may continue so</font>

19
00:01:21,910 --> 00:01:27,580
they wrote<font color="#CCCCCC"> a list of algorithm which</font>

20
00:01:24,340 --> 00:01:30,580
considered vulnerable<font color="#E5E5E5"> for the quantum</font>

21
00:01:27,580 --> 00:01:33,429
computer<font color="#CCCCCC"> and</font><font color="#E5E5E5"> we see</font><font color="#CCCCCC"> that here the</font>

22
00:01:30,580 --> 00:01:35,530
vulnerable<font color="#E5E5E5"> are those algorithms which</font>

23
00:01:33,430 --> 00:01:42,119
<font color="#E5E5E5">are used in system</font><font color="#CCCCCC"> blockchain in</font>

24
00:01:35,530 --> 00:01:47,050
<font color="#E5E5E5">particular hash function</font><font color="#CCCCCC"> apologize</font>

25
00:01:42,119 --> 00:01:54,460
<font color="#E5E5E5">symmetric key like AES then hash</font>

26
00:01:47,050 --> 00:02:00,100
function second and third it means that

27
00:01:54,460 --> 00:02:04,000
the size<font color="#E5E5E5"> of password would be two times</font>

28
00:02:00,100 --> 00:02:08,440
<font color="#E5E5E5">more like</font><font color="#CCCCCC"> 500 bits and our</font><font color="#E5E5E5"> say public</font>

29
00:02:04,000 --> 00:02:10,769
key signatures<font color="#E5E5E5"> key</font><font color="#CCCCCC"> establishment from</font>

30
00:02:08,440 --> 00:02:12,010
<font color="#E5E5E5">the quantum computer</font><font color="#CCCCCC"> point of view is</font>

31
00:02:10,769 --> 00:02:14,650
vulnerable

32
00:02:12,010 --> 00:02:17,920
it could be immediately hacked<font color="#E5E5E5"> if they</font>

33
00:02:14,650 --> 00:02:21,700
want to<font color="#CCCCCC"> do it then</font><font color="#E5E5E5"> elliptic curve</font>

34
00:02:17,920 --> 00:02:25,149
<font color="#E5E5E5">cryptography signatures key exchange is</font>

35
00:02:21,700 --> 00:02:27,579
no<font color="#E5E5E5"> longer secure and</font><font color="#CCCCCC"> Finnick</font><font color="#E5E5E5"> field</font>

36
00:02:25,150 --> 00:02:34,209
<font color="#E5E5E5">cryptography</font><font color="#CCCCCC"> in digital signature</font>

37
00:02:27,580 --> 00:02:39,370
algorithm they are not sustainable<font color="#CCCCCC"> it</font>

38
00:02:34,209 --> 00:02:42,820
means that if anybody has a quantum

39
00:02:39,370 --> 00:02:46,090
computer<font color="#CCCCCC"> in fifteen hundred qubits</font><font color="#E5E5E5"> it</font>

40
00:02:42,820 --> 00:02:51,640
could be quickly hacked<font color="#CCCCCC"> and there was</font>

41
00:02:46,090 --> 00:02:56,230
the<font color="#E5E5E5"> competition about how to make a</font>

42
00:02:51,640 --> 00:03:02,048
stronger<font color="#E5E5E5"> to avoid hacking let me add one</font>

43
00:02:56,230 --> 00:03:07,810
more<font color="#CCCCCC"> thing</font><font color="#E5E5E5"> that all of the things which</font>

44
00:03:02,049 --> 00:03:13,140
are no<font color="#E5E5E5"> longer secure everybody is</font>

45
00:03:07,810 --> 00:03:13,140
familiar with<font color="#CCCCCC"> cryptography</font><font color="#E5E5E5"> it discovered</font>

46
00:03:13,209 --> 00:03:24,579
in the<font color="#CCCCCC"> finit fields of signatures</font>

47
00:03:16,900 --> 00:03:28,900
<font color="#CCCCCC">they're using 66 percent of</font><font color="#E5E5E5"> one figure</font>

48
00:03:24,579 --> 00:03:32,500
and everybody's<font color="#E5E5E5"> knows about it</font><font color="#CCCCCC"> so long</font>

49
00:03:28,900 --> 00:03:36,790
as a method of<font color="#E5E5E5"> opening the system start</font>

50
00:03:32,500 --> 00:03:43,239
talking full-scale<font color="#CCCCCC"> I can disclose</font><font color="#E5E5E5"> a</font>

51
00:03:36,790 --> 00:03:49,328
digital signature<font color="#CCCCCC"> easy an RSA</font><font color="#E5E5E5"> as the key</font>

52
00:03:43,239 --> 00:03:54,900
size is needed 2048 bits the number of

53
00:03:49,329 --> 00:04:00,989
<font color="#CCCCCC">figures which is split</font><font color="#E5E5E5"> it's very hard</font>

54
00:03:54,900 --> 00:04:00,989
normally they use<font color="#E5E5E5"> the same figure there</font>

55
00:04:01,019 --> 00:04:10,930
so turns out that<font color="#E5E5E5"> people can hack this</font>

56
00:04:06,250 --> 00:04:22,419
<font color="#E5E5E5">as well and the whole blockchain is</font>

57
00:04:10,930 --> 00:04:25,750
under<font color="#E5E5E5"> hit so those of you who</font><font color="#CCCCCC"> work with</font>

58
00:04:22,419 --> 00:04:31,710
post<font color="#E5E5E5"> quantum cryptography</font><font color="#CCCCCC"> they are based</font>

59
00:04:25,750 --> 00:04:34,840
on<font color="#CCCCCC"> so called and Pete asked one of the</font>

60
00:04:31,710 --> 00:04:38,590
well-known<font color="#CCCCCC"> MP tasks said everybody's</font>

61
00:04:34,840 --> 00:04:47,380
familiar is the<font color="#CCCCCC"> solution of the system</font>

62
00:04:38,590 --> 00:04:52,000
<font color="#E5E5E5">of line the authentic equations and our</font>

63
00:04:47,380 --> 00:04:58,599
<font color="#CCCCCC">sad experience</font><font color="#E5E5E5"> suggests that we have a</font>

64
00:04:52,000 --> 00:05:00,550
backpack schemes they satisfy the

65
00:04:58,599 --> 00:05:02,110
conditions of<font color="#E5E5E5"> these limitations</font><font color="#CCCCCC"> the bit</font>

66
00:05:00,550 --> 00:05:06,759
is either 0 or 1

67
00:05:02,110 --> 00:05:08,680
<font color="#E5E5E5">and we nee we can go into this quantum</font>

68
00:05:06,759 --> 00:05:10,750
<font color="#E5E5E5">equations and nothing helps that but the</font>

69
00:05:08,680 --> 00:05:14,080
second task is<font color="#E5E5E5"> more interesting is to</font>

70
00:05:10,750 --> 00:05:18,449
<font color="#E5E5E5">find a solution of polynominal equations</font>

71
00:05:14,080 --> 00:05:22,120
<font color="#CCCCCC">and the most</font><font color="#E5E5E5"> difficult case when this</font>

72
00:05:18,449 --> 00:05:25,270
figure is less than number of unknowns

73
00:05:22,120 --> 00:05:28,240
<font color="#E5E5E5">and if the is</font>

74
00:05:25,270 --> 00:05:30,460
less than n number of questions is less

75
00:05:28,240 --> 00:05:33,810
than number<font color="#E5E5E5"> of unknowns and this</font>

76
00:05:30,460 --> 00:05:38,799
<font color="#E5E5E5">equation is</font><font color="#CCCCCC"> 10th</font><font color="#E5E5E5"> Gilbert problem it was</font>

77
00:05:33,810 --> 00:05:40,900
resolved<font color="#CCCCCC"> in 1917 so algorithmically it's</font>

78
00:05:38,800 --> 00:05:42,430
not resolved we don't know the algorithm

79
00:05:40,900 --> 00:05:44,580
<font color="#E5E5E5">when it's hacked</font>

80
00:05:42,430 --> 00:05:55,870
unlike the<font color="#CCCCCC"> lanyard system where I can</font>

81
00:05:44,580 --> 00:05:59,859
select<font color="#E5E5E5"> all the - so what primitives</font>

82
00:05:55,870 --> 00:06:02,980
<font color="#E5E5E5">could be built for</font><font color="#CCCCCC"> blockchain these are</font>

83
00:05:59,860 --> 00:06:05,950
hash function digital signature change

84
00:06:02,980 --> 00:06:08,110
of keys also<font color="#E5E5E5"> we have to increase</font><font color="#CCCCCC"> the</font>

85
00:06:05,950 --> 00:06:17,979
<font color="#CCCCCC">size of</font><font color="#E5E5E5"> the key and from our point of</font>

86
00:06:08,110 --> 00:06:24,090
view using symmetrical algorithms<font color="#E5E5E5"> we</font>

87
00:06:17,980 --> 00:06:29,700
have<font color="#E5E5E5"> to use the probable block</font>

88
00:06:24,090 --> 00:06:33,760
<font color="#E5E5E5">encryption and our students built the</font>

89
00:06:29,700 --> 00:06:38,560
system<font color="#E5E5E5"> of this kind so</font><font color="#CCCCCC"> we have another</font>

90
00:06:33,760 --> 00:06:45,300
type of encryption which people prefer I

91
00:06:38,560 --> 00:06:45,300
mean those<font color="#CCCCCC"> who do</font><font color="#E5E5E5"> the cryptography</font>

92
00:06:53,439 --> 00:07:02,169
so and in best condition that<font color="#E5E5E5"> M is more</font>

93
00:06:57,309 --> 00:07:07,330
than<font color="#E5E5E5"> n so</font><font color="#CCCCCC"> that the task is the theory</font>

94
00:07:02,169 --> 00:07:10,719
<font color="#E5E5E5">it's</font><font color="#CCCCCC"> great</font><font color="#E5E5E5"> theory so another task for</font>

95
00:07:07,330 --> 00:07:18,219
some people nobody's using<font color="#E5E5E5"> that it means</font>

96
00:07:10,719 --> 00:07:25,349
that any equation in any<font color="#CCCCCC"> polynominal</font>

97
00:07:18,219 --> 00:07:33,879
equations could be used in full figures

98
00:07:25,349 --> 00:07:34,769
if we have a standard basis this could

99
00:07:33,879 --> 00:07:41,139
be fulfilled

100
00:07:34,769 --> 00:07:45,489
<font color="#E5E5E5">so the main drawback of all the</font>

101
00:07:41,139 --> 00:07:49,329
algorithms<font color="#CCCCCC"> for posts quantum</font>

102
00:07:45,489 --> 00:07:52,659
cryptography<font color="#E5E5E5"> is strong growth of data</font>

103
00:07:49,329 --> 00:07:55,599
for open key and digital signature from

104
00:07:52,659 --> 00:08:01,438
kilobytes<font color="#CCCCCC"> megabytes you have to pay for</font>

105
00:07:55,599 --> 00:08:01,438
<font color="#CCCCCC">security</font><font color="#E5E5E5"> that nobody would hack you so</font>

106
00:08:03,839 --> 00:08:11,139
it will<font color="#E5E5E5"> have to</font><font color="#CCCCCC"> pay through large size</font>

107
00:08:08,379 --> 00:08:15,550
<font color="#E5E5E5">of the key or open key the first</font><font color="#CCCCCC"> task we</font>

108
00:08:11,139 --> 00:08:21,309
had is a task of building<font color="#E5E5E5"> a</font><font color="#CCCCCC"> system with</font>

109
00:08:15,550 --> 00:08:27,369
open key which would<font color="#E5E5E5"> be most safe so the</font>

110
00:08:21,309 --> 00:08:33,058
point is<font color="#CCCCCC"> that if M is equals</font><font color="#E5E5E5"> M</font><font color="#CCCCCC"> I mean</font>

111
00:08:27,369 --> 00:08:33,059
polynominal<font color="#E5E5E5"> task this could be resolved</font>

112
00:08:34,649 --> 00:08:44,589
the standard ways using<font color="#E5E5E5"> the grab</font><font color="#CCCCCC"> nurse</font>

113
00:08:38,769 --> 00:08:50,410
basis or using them<font color="#E5E5E5"> illuminance</font><font color="#CCCCCC"> Theory</font>

114
00:08:44,589 --> 00:08:54,939
<font color="#E5E5E5">methods which was called resultant at</font>

115
00:08:50,410 --> 00:08:56,529
the middle of<font color="#CCCCCC"> 19th century too scary</font><font color="#E5E5E5"> to</font>

116
00:08:54,939 --> 00:09:00,069
death I<font color="#E5E5E5"> want to show you how it looks</font>

117
00:08:56,529 --> 00:09:02,759
<font color="#E5E5E5">for two and</font><font color="#CCCCCC"> three</font><font color="#E5E5E5"> variables</font><font color="#CCCCCC"> it's very</font>

118
00:09:00,069 --> 00:09:07,079
scary thing<font color="#CCCCCC"> to watch actually</font>

119
00:09:02,759 --> 00:09:10,800
we tested students what happened

120
00:09:07,080 --> 00:09:17,410
the best case which we squeezed out<font color="#CCCCCC"> was</font>

121
00:09:10,800 --> 00:09:22,180
200 variables 200 equations<font color="#E5E5E5"> the key is a</font>

122
00:09:17,410 --> 00:09:36,069
normal size and setting up the key takes

123
00:09:22,180 --> 00:09:38,620
<font color="#E5E5E5">one hour after that turned out that we</font>

124
00:09:36,070 --> 00:09:44,760
need to have as many unknowns as boss

125
00:09:38,620 --> 00:09:50,460
variables then as you will see later<font color="#CCCCCC"> on</font>

126
00:09:44,760 --> 00:09:50,460
if<font color="#CCCCCC"> x allows the growth off</font>

127
00:10:03,170 --> 00:10:09,479
so in case when the number of equations

128
00:10:07,290 --> 00:10:13,740
<font color="#E5E5E5">coincides with the number of unknowns in</font>

129
00:10:09,480 --> 00:10:15,350
the task B which is M<font color="#E5E5E5"> equals n the task</font>

130
00:10:13,740 --> 00:10:16,470
could be<font color="#E5E5E5"> resolved either through</font>

131
00:10:15,350 --> 00:10:19,890
illuminant

132
00:10:16,470 --> 00:10:24,060
method theory or through the grab<font color="#CCCCCC"> neurs</font>

133
00:10:19,890 --> 00:10:27,439
basis however<font color="#E5E5E5"> the task could be more</font>

134
00:10:24,060 --> 00:10:29,579
<font color="#CCCCCC">complicated</font><font color="#E5E5E5"> using the Cremona or</font>

135
00:10:27,440 --> 00:10:34,950
transition in this case there is<font color="#E5E5E5"> no</font>

136
00:10:29,579 --> 00:10:39,229
<font color="#E5E5E5">chance to allocate the main members</font>

137
00:10:34,950 --> 00:10:40,980
<font color="#E5E5E5">because in</font><font color="#CCCCCC"> reality they will not be such</font>

138
00:10:39,230 --> 00:10:44,279
experiments<font color="#CCCCCC"> show that</font><font color="#E5E5E5"> in this situation</font>

139
00:10:40,980 --> 00:10:51,810
support that would<font color="#E5E5E5"> be as many variables</font>

140
00:10:44,279 --> 00:10:55,010
<font color="#E5E5E5">as possible in this case the standards</font>

141
00:10:51,810 --> 00:10:57,268
are<font color="#E5E5E5"> not available in post quantum</font>

142
00:10:55,010 --> 00:11:00,000
cryptography<font color="#E5E5E5"> actually we</font><font color="#CCCCCC"> started from 8</font>

143
00:10:57,269 --> 00:11:02,300
<font color="#E5E5E5">variables there's no result</font><font color="#CCCCCC"> to go to</font>

144
00:11:00,000 --> 00:11:05,070
internal cycle and<font color="#E5E5E5"> that's it after that</font>

145
00:11:02,300 --> 00:11:12,979
<font color="#CCCCCC">editor story it's</font><font color="#E5E5E5"> all checked by</font>

146
00:11:05,070 --> 00:11:12,980
students there<font color="#E5E5E5"> are no standards right</font>

147
00:11:13,010 --> 00:11:18,720
<font color="#E5E5E5">stand no service for post quantum</font>

148
00:11:15,750 --> 00:11:21,990
cryptography<font color="#E5E5E5"> and since 2016</font><font color="#CCCCCC"> there's a</font>

149
00:11:18,720 --> 00:11:26,490
<font color="#CCCCCC">strong</font><font color="#E5E5E5"> discussion</font><font color="#CCCCCC"> about what can and</font>

150
00:11:21,990 --> 00:11:29,820
<font color="#CCCCCC">what cannot be</font><font color="#E5E5E5"> done with the so they</font>

151
00:11:26,490 --> 00:11:32,070
<font color="#E5E5E5">arranged the drafts we have discussions</font>

152
00:11:29,820 --> 00:11:34,829
and beginning<font color="#E5E5E5"> of August</font><font color="#CCCCCC"> so</font><font color="#E5E5E5"> this</font><font color="#CCCCCC"> year the</font>

153
00:11:32,070 --> 00:11:37,339
students must take make a decision what

154
00:11:34,829 --> 00:11:42,239
goes to draft and I have a feeling<font color="#CCCCCC"> that</font>

155
00:11:37,339 --> 00:11:44,490
none<font color="#CCCCCC"> of the structures shown must not</font>

156
00:11:42,240 --> 00:11:48,290
come to a job because<font color="#E5E5E5"> they</font><font color="#CCCCCC"> are all bad</font>

157
00:11:44,490 --> 00:11:48,290
oh sorry

158
00:11:50,510 --> 00:12:01,670
<font color="#CCCCCC">I forgot to mention and that's it</font>

159
00:11:56,140 --> 00:12:06,680
<font color="#CCCCCC">dusk could be get complicated through</font>

160
00:12:01,670 --> 00:12:09,560
the Cremona<font color="#E5E5E5"> transition you may know it</font>

161
00:12:06,680 --> 00:12:11,750
as<font color="#E5E5E5"> the face</font><font color="#CCCCCC"> sell</font><font color="#E5E5E5"> grades this</font><font color="#CCCCCC"> is a very</font>

162
00:12:09,560 --> 00:12:15,260
particular<font color="#E5E5E5"> case of the Cremona</font>

163
00:12:11,750 --> 00:12:19,790
transition very very particular<font color="#E5E5E5"> thing</font>

164
00:12:15,260 --> 00:12:21,830
<font color="#CCCCCC">please keep this in mind</font><font color="#E5E5E5"> and finally all</font>

165
00:12:19,790 --> 00:12:25,490
<font color="#CCCCCC">of the structures which are brought</font>

166
00:12:21,830 --> 00:12:30,980
which can't<font color="#E5E5E5"> be shown later they work</font>

167
00:12:25,490 --> 00:12:32,900
fine with<font color="#E5E5E5"> the Galois fields but they</font>

168
00:12:30,980 --> 00:12:36,800
have their own<font color="#CCCCCC"> specifics so</font><font color="#E5E5E5"> we need to</font>

169
00:12:32,900 --> 00:12:39,550
keep<font color="#E5E5E5"> this</font><font color="#CCCCCC"> mind so let's start from</font><font color="#E5E5E5"> the</font>

170
00:12:36,800 --> 00:12:46,849
<font color="#E5E5E5">hash function the point is that</font>

171
00:12:39,550 --> 00:12:49,609
according<font color="#CCCCCC"> to</font><font color="#E5E5E5"> our approach we don't need</font>

172
00:12:46,850 --> 00:12:52,870
the hash<font color="#E5E5E5"> function</font><font color="#CCCCCC"> that brings</font><font color="#E5E5E5"> back the</font>

173
00:12:49,610 --> 00:12:56,840
bits we don't need<font color="#E5E5E5"> it at all because all</font>

174
00:12:52,870 --> 00:13:02,120
<font color="#CCCCCC">the calculations are made according</font><font color="#E5E5E5"> to</font>

175
00:12:56,840 --> 00:13:04,940
<font color="#E5E5E5">the model of a big number and the number</font>

176
00:13:02,120 --> 00:13:06,290
<font color="#CCCCCC">it's not</font><font color="#E5E5E5"> selling</font><font color="#CCCCCC"> its give just any</font>

177
00:13:04,940 --> 00:13:09,800
<font color="#CCCCCC">number that's</font><font color="#E5E5E5"> why we need the hash</font>

178
00:13:06,290 --> 00:13:14,000
<font color="#E5E5E5">function which works in the fields other</font>

179
00:13:09,800 --> 00:13:19,219
<font color="#E5E5E5">in circles of some sort so that</font><font color="#CCCCCC"> puts</font>

180
00:13:14,000 --> 00:13:21,860
some figures at<font color="#CCCCCC"> the and which must be</font>

181
00:13:19,220 --> 00:13:24,440
<font color="#CCCCCC">equal to</font><font color="#E5E5E5"> the bit numbers for example</font><font color="#CCCCCC"> the</font>

182
00:13:21,860 --> 00:13:29,050
certain document is described by<font color="#E5E5E5"> the set</font>

183
00:13:24,440 --> 00:13:31,880
<font color="#CCCCCC">of figures</font><font color="#E5E5E5"> x equals</font><font color="#CCCCCC"> x1 x2 etcetera also</font>

184
00:13:29,050 --> 00:13:35,719
we have the size of these<font color="#E5E5E5"> figures and</font>

185
00:13:31,880 --> 00:13:39,320
<font color="#E5E5E5">bits so what happens in the entry hash</font>

186
00:13:35,720 --> 00:13:43,280
function<font color="#E5E5E5"> actually at eight bits another</font>

187
00:13:39,320 --> 00:13:45,890
useful thing is that we need that the

188
00:13:43,280 --> 00:13:50,300
hash function<font color="#CCCCCC"> that</font><font color="#E5E5E5"> we were building</font>

189
00:13:45,890 --> 00:13:51,890
would depend<font color="#E5E5E5"> on a lot</font><font color="#CCCCCC"> of parameters</font><font color="#E5E5E5"> in</font>

190
00:13:50,300 --> 00:13:56,120
this case is hard to search for

191
00:13:51,890 --> 00:13:57,590
collision<font color="#CCCCCC"> because I wrote</font><font color="#E5E5E5"> different</font>

192
00:13:56,120 --> 00:14:00,400
parameters<font color="#CCCCCC"> for the same hash function</font>

193
00:13:57,590 --> 00:14:00,400
and it means that

194
00:14:00,720 --> 00:14:06,540
different hash functions become

195
00:14:03,149 --> 00:14:10,220
different<font color="#E5E5E5"> although in fact same</font>

196
00:14:06,540 --> 00:14:18,810
principle is used<font color="#CCCCCC"> like the past password</font>

197
00:14:10,220 --> 00:14:25,040
so let's generate number functions so<font color="#CCCCCC"> h</font>

198
00:14:18,810 --> 00:14:32,279
<font color="#CCCCCC">IG u cyclically</font>

199
00:14:25,040 --> 00:14:33,379
expression is first but as this<font color="#E5E5E5"> is</font><font color="#CCCCCC"> a</font>

200
00:14:32,279 --> 00:14:39,600
polynomial

201
00:14:33,379 --> 00:14:46,470
and variables<font color="#E5E5E5"> we need</font><font color="#CCCCCC"> to replace</font><font color="#E5E5E5"> zero to</font>

202
00:14:39,600 --> 00:14:51,060
<font color="#E5E5E5">something that's why the second</font>

203
00:14:46,470 --> 00:14:56,370
parameter is what shall we replace the

204
00:14:51,060 --> 00:15:00,119
zero<font color="#E5E5E5"> with it's not the parameter for a</font>

205
00:14:56,370 --> 00:15:04,079
hash function<font color="#E5E5E5"> then we choose a certain</font>

206
00:15:00,120 --> 00:15:08,339
parameter<font color="#E5E5E5"> P which is number with the</font>

207
00:15:04,079 --> 00:15:12,949
models<font color="#E5E5E5"> and name the size of vectors we</font>

208
00:15:08,339 --> 00:15:12,949
choose a certain recurrent sequence and

209
00:15:13,189 --> 00:15:18,630
the vectors for this sequence<font color="#CCCCCC"> and we</font>

210
00:15:16,800 --> 00:15:20,550
have the sequence<font color="#E5E5E5"> of</font><font color="#CCCCCC"> vectors and the</font>

211
00:15:18,630 --> 00:15:22,560
data for<font color="#E5E5E5"> the recurrent sequence are the</font>

212
00:15:20,550 --> 00:15:26,910
parameters and let's build the hash

213
00:15:22,560 --> 00:15:36,089
function<font color="#E5E5E5"> so then we build a structure</font>

214
00:15:26,910 --> 00:15:38,189
right so we calculate this so and the

215
00:15:36,089 --> 00:15:40,170
good thing is I don't have<font color="#E5E5E5"> to add any</font>

216
00:15:38,189 --> 00:15:43,170
zeros at the<font color="#E5E5E5"> end of the file because</font><font color="#CCCCCC"> the</font>

217
00:15:40,170 --> 00:15:45,540
file is ended exactly<font color="#CCCCCC"> where it ends and</font>

218
00:15:43,170 --> 00:15:49,050
the hash is going to be this see the

219
00:15:45,540 --> 00:15:52,079
amount the sum<font color="#CCCCCC"> of these things</font><font color="#E5E5E5"> so to</font>

220
00:15:49,050 --> 00:15:54,540
this calculation<font color="#E5E5E5"> of hash it is not</font>

221
00:15:52,079 --> 00:15:58,680
relevant<font color="#E5E5E5"> so I don't have to add any</font>

222
00:15:54,540 --> 00:16:01,860
zeros to nothing as people normally do

223
00:15:58,680 --> 00:16:10,680
<font color="#E5E5E5">that what is the collision or does it</font>

224
00:16:01,860 --> 00:16:11,800
<font color="#E5E5E5">mean it means that if the age x equals</font>

225
00:16:10,680 --> 00:16:17,170
dead

226
00:16:11,800 --> 00:16:23,199
point is that H<font color="#CCCCCC"> of X and H of Z are</font>

227
00:16:17,170 --> 00:16:26,529
different<font color="#E5E5E5"> functions the problem is that</font>

228
00:16:23,200 --> 00:16:29,620
it's not<font color="#CCCCCC"> possible to solve</font><font color="#E5E5E5"> the</font>

229
00:16:26,529 --> 00:16:32,050
polynomial<font color="#CCCCCC"> function equations</font><font color="#E5E5E5"> so for</font>

230
00:16:29,620 --> 00:16:33,820
<font color="#E5E5E5">example is this data are like this these</font>

231
00:16:32,050 --> 00:16:36,760
<font color="#CCCCCC">are the parameters the</font><font color="#E5E5E5"> last parameter is</font>

232
00:16:33,820 --> 00:16:42,790
shift<font color="#E5E5E5"> up mode 8 this could be also</font>

233
00:16:36,760 --> 00:16:48,040
parameter<font color="#E5E5E5"> and we calculate this after</font>

234
00:16:42,790 --> 00:16:50,860
that<font color="#E5E5E5"> and we</font><font color="#CCCCCC"> calculate the vector after</font>

235
00:16:48,040 --> 00:16:53,260
<font color="#CCCCCC">that make a shift</font><font color="#E5E5E5"> defined in the</font>

236
00:16:50,860 --> 00:16:56,500
parameter and<font color="#E5E5E5"> then we calculate</font><font color="#CCCCCC"> the next</font>

237
00:16:53,260 --> 00:16:59,410
<font color="#E5E5E5">vector from the recurrence of sequence</font>

238
00:16:56,500 --> 00:17:05,709
but the<font color="#E5E5E5"> vector which abusers don't know</font>

239
00:16:59,410 --> 00:17:10,270
anything about<font color="#E5E5E5"> so at the</font><font color="#CCCCCC"> end we say that</font>

240
00:17:05,709 --> 00:17:13,650
by the get a hash function so this hash

241
00:17:10,270 --> 00:17:17,709
function from our point<font color="#E5E5E5"> of view is</font>

242
00:17:13,650 --> 00:17:22,510
strong<font color="#E5E5E5"> there is no question whether it</font>

243
00:17:17,709 --> 00:17:27,760
<font color="#E5E5E5">is going to be hacked if there is any</font>

244
00:17:22,510 --> 00:17:38,309
collision by<font color="#E5E5E5"> a simple reason</font><font color="#CCCCCC"> I can</font>

245
00:17:27,760 --> 00:17:38,309
change this hash this hash function<font color="#E5E5E5"> and</font>

246
00:17:38,940 --> 00:17:44,230
<font color="#CCCCCC">it will</font><font color="#E5E5E5"> not</font><font color="#CCCCCC"> be able to coincide</font><font color="#E5E5E5"> because</font>

247
00:17:41,980 --> 00:17:48,660
for this reason you<font color="#CCCCCC"> have to solve two</font>

248
00:17:44,230 --> 00:17:51,640
polynominal<font color="#E5E5E5"> equations so we believe</font><font color="#CCCCCC"> that</font>

249
00:17:48,660 --> 00:17:53,860
the<font color="#E5E5E5"> best object for the digital</font>

250
00:17:51,640 --> 00:17:56,559
signature<font color="#E5E5E5"> is a hash function developed</font>

251
00:17:53,860 --> 00:17:58,918
earlier we are<font color="#E5E5E5"> most interested of the</font>

252
00:17:56,559 --> 00:18:03,570
option of the digital signature with

253
00:17:58,919 --> 00:18:06,460
different expressions so digital

254
00:18:03,570 --> 00:18:09,250
signature<font color="#E5E5E5"> and exchange of the keys keys</font>

255
00:18:06,460 --> 00:18:15,220
<font color="#CCCCCC">exchanged to build the digital signature</font>

256
00:18:09,250 --> 00:18:19,430
we need to have open key the object of

257
00:18:15,220 --> 00:18:22,530
digital signature<font color="#CCCCCC"> is a hash function</font>

258
00:18:19,430 --> 00:18:26,310
but let's<font color="#E5E5E5"> first talk about how we are</font>

259
00:18:22,530 --> 00:18:30,899
<font color="#E5E5E5">building the open team because</font><font color="#CCCCCC"> there's</font>

260
00:18:26,310 --> 00:18:33,990
the<font color="#E5E5E5"> basis</font><font color="#CCCCCC"> for</font><font color="#E5E5E5"> the other things option of</font>

261
00:18:30,900 --> 00:18:40,290
the digital key using<font color="#E5E5E5"> superposition</font><font color="#CCCCCC"> with</font>

262
00:18:33,990 --> 00:18:45,270
a tasks<font color="#CCCCCC"> a and</font><font color="#E5E5E5"> B so point is that I</font>

263
00:18:40,290 --> 00:18:49,200
cannot<font color="#CCCCCC"> know how to build polynomial</font>

264
00:18:45,270 --> 00:18:51,240
system of equations<font color="#CCCCCC"> that I know</font><font color="#E5E5E5"> about</font>

265
00:18:49,200 --> 00:18:57,480
that<font color="#E5E5E5"> there's only one</font><font color="#CCCCCC"> solution</font>

266
00:18:51,240 --> 00:19:02,090
which is normally wrong and they can

267
00:18:57,480 --> 00:19:05,130
find the solution so we take

268
00:19:02,090 --> 00:19:13,740
superposition of<font color="#E5E5E5"> liner expression with</font>

269
00:19:05,130 --> 00:19:24,330
polynominal and then everything could be

270
00:19:13,740 --> 00:19:28,350
<font color="#E5E5E5">Crestor</font><font color="#CCCCCC"> behind your tradition another</font>

271
00:19:24,330 --> 00:19:30,330
story<font color="#E5E5E5"> how to save RSA from the quantum</font>

272
00:19:28,350 --> 00:19:32,550
<font color="#CCCCCC">computer</font><font color="#E5E5E5"> as I got used to talk to</font>

273
00:19:30,330 --> 00:19:41,570
students<font color="#E5E5E5"> it's very simple just imagine</font>

274
00:19:32,550 --> 00:19:46,800
<font color="#CCCCCC">that x and y make from 0 to 3 it's</font><font color="#E5E5E5"> 5 bit</font>

275
00:19:41,570 --> 00:19:50,780
digits and<font color="#E5E5E5"> the simple did chosen 41</font><font color="#CCCCCC"> we</font>

276
00:19:46,800 --> 00:19:55,220
<font color="#E5E5E5">calculate this thing by module clearly</font>

277
00:19:50,780 --> 00:20:00,889
this module is resolved after<font color="#CCCCCC"> most of</font><font color="#E5E5E5"> 41</font>

278
00:19:55,220 --> 00:20:06,320
those know the theory about<font color="#E5E5E5"> circles</font>

279
00:20:00,890 --> 00:20:06,320
there's the answer<font color="#E5E5E5"> then</font><font color="#CCCCCC"> let</font>

280
00:20:23,610 --> 00:20:33,370
and then lets the<font color="#E5E5E5"> let's raise it to the</font>

281
00:20:27,550 --> 00:20:38,740
third<font color="#CCCCCC"> power right and the</font><font color="#E5E5E5"> idea is like</font>

282
00:20:33,370 --> 00:20:46,719
that so we<font color="#E5E5E5"> have</font><font color="#CCCCCC"> the open key the option</font>

283
00:20:38,740 --> 00:20:50,440
of this<font color="#E5E5E5"> open key the options of</font><font color="#CCCCCC"> using</font>

284
00:20:46,720 --> 00:20:53,530
this open case of first option to give

285
00:20:50,440 --> 00:20:55,750
the<font color="#CCCCCC"> key itself in the module under which</font>

286
00:20:53,530 --> 00:20:59,110
the calculations were<font color="#CCCCCC"> made in second</font>

287
00:20:55,750 --> 00:21:01,750
option<font color="#E5E5E5"> the</font><font color="#CCCCCC"> key itself is</font><font color="#E5E5E5"> given also the</font>

288
00:20:59,110 --> 00:21:05,709
size and bits<font color="#CCCCCC"> in</font><font color="#E5E5E5"> the module on which the</font>

289
00:21:01,750 --> 00:21:07,600
calculations were made<font color="#E5E5E5"> is not given at</font>

290
00:21:05,710 --> 00:21:11,500
all<font color="#E5E5E5"> there's no task</font><font color="#CCCCCC"> of factorization</font><font color="#E5E5E5"> and</font>

291
00:21:07,600 --> 00:21:20,649
we cannot resolve<font color="#CCCCCC"> this</font><font color="#E5E5E5"> because any</font>

292
00:21:11,500 --> 00:21:23,730
question so it looks like<font color="#CCCCCC"> when team</font>

293
00:21:20,650 --> 00:21:28,950
model<font color="#E5E5E5"> is not given there's no chance</font>

294
00:21:23,730 --> 00:21:28,950
there's no point in factorization at all

295
00:21:34,679 --> 00:21:43,690
this approach<font color="#CCCCCC"> is bad</font><font color="#E5E5E5"> because the size of</font>

296
00:21:38,349 --> 00:21:45,908
open key becomes very very big even the

297
00:21:43,690 --> 00:21:49,029
open key itself<font color="#E5E5E5"> is not very</font><font color="#CCCCCC"> large</font><font color="#E5E5E5"> but</font>

298
00:21:45,909 --> 00:21:55,299
data which I returned<font color="#E5E5E5"> back</font><font color="#CCCCCC"> to me become</font>

299
00:21:49,029 --> 00:21:59,580
very<font color="#E5E5E5"> large very bulky but you</font><font color="#CCCCCC"> don't have</font>

300
00:21:55,299 --> 00:21:59,580
a problem<font color="#E5E5E5"> of putting into multipliers</font>

301
00:22:05,890 --> 00:22:10,179
so what's good about<font color="#E5E5E5"> this</font>

302
00:22:20,380 --> 00:22:37,510
<font color="#CCCCCC">a small number</font><font color="#E5E5E5"> there's nothing so small</font>

303
00:22:31,960 --> 00:22:39,940
numbers are not relevant so so that what

304
00:22:37,510 --> 00:23:08,530
happens if we<font color="#E5E5E5"> don't give the module in</font>

305
00:22:39,940 --> 00:23:12,300
this case the cube root<font color="#CCCCCC"> is not the round</font>

306
00:23:08,530 --> 00:23:15,660
number even number<font color="#E5E5E5"> Finnick number right</font>

307
00:23:12,300 --> 00:23:15,659
we<font color="#E5E5E5"> had an option</font>

308
00:23:41,700 --> 00:23:54,220
so now let's go to<font color="#E5E5E5"> digital signature so</font>

309
00:23:50,260 --> 00:23:57,360
we need to so for the final establishing

310
00:23:54,220 --> 00:24:00,250
of the<font color="#E5E5E5"> key we have to choose the</font>

311
00:23:57,360 --> 00:24:04,689
<font color="#CCCCCC">polynomial function and let</font><font color="#E5E5E5"> it be the</font>

312
00:24:00,250 --> 00:24:07,809
second polynomial function<font color="#E5E5E5"> also need to</font>

313
00:24:04,690 --> 00:24:10,510
give the<font color="#E5E5E5"> amount of 41 let's assume</font><font color="#CCCCCC"> that</font>

314
00:24:07,809 --> 00:24:13,570
the function<font color="#E5E5E5"> of this document is 33 then</font>

315
00:24:10,510 --> 00:24:18,309
I put a signature of<font color="#CCCCCC"> the document type</font>

316
00:24:13,570 --> 00:24:21,220
like open<font color="#CCCCCC"> 3 open key</font><font color="#E5E5E5"> and I sent a pair</font>

317
00:24:18,309 --> 00:24:23,260
and the document<font color="#E5E5E5"> the receiver can</font>

318
00:24:21,220 --> 00:24:25,659
calculate the hash of<font color="#E5E5E5"> the document gets</font>

319
00:24:23,260 --> 00:24:28,899
a figure 33 when they calculate the

320
00:24:25,659 --> 00:24:31,360
polynomial function<font color="#CCCCCC"> on the module 41 and</font>

321
00:24:28,899 --> 00:24:31,899
the gate 33<font color="#CCCCCC"> therefore the signature is</font>

322
00:24:31,360 --> 00:24:35,500
correct

323
00:24:31,899 --> 00:24:40,418
I can be checked sending certain number

324
00:24:35,500 --> 00:24:46,380
which is<font color="#CCCCCC"> D motor Oracle 0 as last 41</font><font color="#E5E5E5"> and</font>

325
00:24:40,419 --> 00:24:52,289
asked to<font color="#E5E5E5"> present a pair</font><font color="#CCCCCC"> X&Y</font><font color="#E5E5E5"> such as this</font>

326
00:24:46,380 --> 00:24:55,990
and it's clear<font color="#E5E5E5"> the abuser should check</font>

327
00:24:52,289 --> 00:25:00,220
1641 options so and then what we do<font color="#E5E5E5"> to</font>

328
00:24:55,990 --> 00:25:05,889
write the second equation from RSA and

329
00:25:00,220 --> 00:25:12,149
we know how to<font color="#E5E5E5"> resolve it we find a pair</font>

330
00:25:05,889 --> 00:25:16,418
x and y<font color="#E5E5E5"> and we</font><font color="#CCCCCC"> send they give me 1</font>

331
00:25:12,149 --> 00:25:19,570
figure<font color="#E5E5E5"> and I can stop any figure</font>

332
00:25:16,419 --> 00:25:24,320
whatever<font color="#E5E5E5"> the hash is available for</font>

333
00:25:19,570 --> 00:25:27,480
<font color="#CCCCCC">example second</font><font color="#E5E5E5"> option</font>

334
00:25:24,320 --> 00:25:30,480
there's a free polynominal<font color="#E5E5E5"> reflection</font><font color="#CCCCCC"> I</font>

335
00:25:27,480 --> 00:25:34,860
didn't know how to do it at all<font color="#CCCCCC"> but</font><font color="#E5E5E5"> what</font>

336
00:25:30,480 --> 00:25:38,419
I know is<font color="#CCCCCC"> that I have a</font><font color="#E5E5E5"> route let's make</font>

337
00:25:34,860 --> 00:25:41,100
the replacement<font color="#CCCCCC"> of</font><font color="#E5E5E5"> the variables</font><font color="#CCCCCC"> I</font>

338
00:25:38,419 --> 00:25:44,340
decided not to open the<font color="#E5E5E5"> brackets because</font>

339
00:25:41,100 --> 00:25:54,000
<font color="#E5E5E5">it's very very very large but a nominal</font>

340
00:25:44,340 --> 00:25:56,250
function so the receiver<font color="#E5E5E5"> has a document</font>

341
00:25:54,000 --> 00:25:59,309
<font color="#E5E5E5">and they conclude</font><font color="#CCCCCC"> the cash function and</font>

342
00:25:56,250 --> 00:26:03,419
they must get end up with the pair<font color="#E5E5E5"> X 11</font>

343
00:25:59,309 --> 00:26:10,610
<font color="#CCCCCC">Y 4</font><font color="#E5E5E5"> and</font><font color="#CCCCCC"> the signature</font><font color="#E5E5E5"> the receiver is</font>

344
00:26:03,419 --> 00:26:10,610
sent a pair B equals 3<font color="#CCCCCC"> and Q equals 43</font>

345
00:26:10,940 --> 00:26:21,840
to free figures that I can restore after

346
00:26:14,100 --> 00:26:24,480
that putting<font color="#CCCCCC"> four figures eleven four is</font>

347
00:26:21,840 --> 00:26:28,620
a hash<font color="#E5E5E5"> three and forty three are the</font>

348
00:26:24,480 --> 00:26:31,950
parameters and putting them in the open

349
00:26:28,620 --> 00:26:34,379
key we must end up with the<font color="#CCCCCC"> zeros at the</font>

350
00:26:31,950 --> 00:26:37,860
<font color="#E5E5E5">end and what are the zeros we will</font>

351
00:26:34,380 --> 00:26:42,000
understand now the the<font color="#E5E5E5"> grid theory and</font>

352
00:26:37,860 --> 00:26:46,350
the system based on the grid theory here

353
00:26:42,000 --> 00:26:48,960
we model<font color="#E5E5E5"> the</font><font color="#CCCCCC"> task in the backpack</font>

354
00:26:46,350 --> 00:26:58,469
as we call them for<font color="#E5E5E5"> example let's take</font>

355
00:26:48,960 --> 00:27:05,929
this polynomial<font color="#CCCCCC"> function 27 X and now</font>

356
00:26:58,470 --> 00:27:05,929
let's<font color="#CCCCCC"> do this so in this equation I</font>

357
00:27:06,200 --> 00:27:13,940
transfer<font color="#CCCCCC"> four times three twelve bits</font>

358
00:27:09,510 --> 00:27:15,870
and then I built orthogonal vectors

359
00:27:13,940 --> 00:27:18,750
following these conditions

360
00:27:15,870 --> 00:27:20,370
I hope those<font color="#CCCCCC"> who are interested will</font>

361
00:27:18,750 --> 00:27:22,860
take a look at that<font color="#E5E5E5"> that's the simplest</font>

362
00:27:20,370 --> 00:27:26,299
version which was<font color="#E5E5E5"> ever fitting in the</font>

363
00:27:22,860 --> 00:27:31,860
text format of the slide<font color="#E5E5E5"> we said the</font>

364
00:27:26,299 --> 00:27:35,360
vectors and the vectors<font color="#E5E5E5"> the way you can</font>

365
00:27:31,860 --> 00:27:38,280
read in the book

366
00:27:35,360 --> 00:27:42,030
published in nineteen foot eight full

367
00:27:38,280 --> 00:27:45,840
volume in algebraic equations<font color="#E5E5E5"> so the</font>

368
00:27:42,030 --> 00:27:48,240
point<font color="#E5E5E5"> is how to make this</font><font color="#CCCCCC"> even and then</font>

369
00:27:45,840 --> 00:27:51,300
we get a<font color="#E5E5E5"> system of equations</font><font color="#CCCCCC"> like this</font>

370
00:27:48,240 --> 00:27:57,570
<font color="#E5E5E5">what we see is that a system coincides</font>

371
00:27:51,300 --> 00:28:04,710
with what's known<font color="#CCCCCC"> in the quantum</font>

372
00:27:57,570 --> 00:28:08,270
cryptography<font color="#E5E5E5"> theory as a grid system so</font>

373
00:28:04,710 --> 00:28:11,070
it turns<font color="#E5E5E5"> out that those</font><font color="#CCCCCC"> two vectors</font>

374
00:28:08,270 --> 00:28:15,660
<font color="#CCCCCC">27:47</font><font color="#E5E5E5"> and</font><font color="#CCCCCC"> as 7428</font>

375
00:28:11,070 --> 00:28:18,270
of both orthogonal to this this and this

376
00:28:15,660 --> 00:28:20,280
both so which means that<font color="#CCCCCC"> multiply in a</font>

377
00:28:18,270 --> 00:28:24,690
scalar way one by the<font color="#E5E5E5"> other will get</font>

378
00:28:20,280 --> 00:28:28,110
<font color="#E5E5E5">zero and because</font><font color="#CCCCCC"> i</font><font color="#E5E5E5"> know what</font><font color="#CCCCCC"> i have been</font>

379
00:28:24,690 --> 00:28:30,420
multiplying in a scalar way<font color="#E5E5E5"> then</font><font color="#CCCCCC"> i will</font>

380
00:28:28,110 --> 00:28:32,729
do<font color="#E5E5E5"> exactly this and as a result i'll get</font>

381
00:28:30,420 --> 00:28:34,800
this very equation that<font color="#CCCCCC"> i had in the</font>

382
00:28:32,730 --> 00:28:40,320
<font color="#CCCCCC">beginning so the question of</font><font color="#E5E5E5"> how to look</font>

383
00:28:34,800 --> 00:28:42,600
<font color="#CCCCCC">for the orthogonal</font><font color="#E5E5E5"> a vector especially</font>

384
00:28:40,320 --> 00:28:45,470
considering that<font color="#CCCCCC"> i'm going to take it to</font>

385
00:28:42,600 --> 00:28:50,419
the power of<font color="#E5E5E5"> three</font><font color="#CCCCCC"> is completely vague</font>

386
00:28:45,470 --> 00:28:53,820
so<font color="#CCCCCC"> we'll</font><font color="#E5E5E5"> encrypt the following numbers</font>

387
00:28:50,420 --> 00:28:55,440
recover<font color="#E5E5E5"> at the source data</font><font color="#CCCCCC"> actually it's</font>

388
00:28:53,820 --> 00:28:58,620
a question<font color="#CCCCCC"> of implementation how to</font>

389
00:28:55,440 --> 00:29:02,700
recover<font color="#E5E5E5"> the initial data this is the way</font>

390
00:28:58,620 --> 00:29:06,000
how<font color="#CCCCCC"> you should just divide the one by</font>

391
00:29:02,700 --> 00:29:13,260
the<font color="#E5E5E5"> other and so</font><font color="#CCCCCC"> on</font><font color="#E5E5E5"> how can we</font>

392
00:29:06,000 --> 00:29:19,220
strengthen the cryptography firstly you

393
00:29:13,260 --> 00:29:23,030
should<font color="#E5E5E5"> do not write in the backpack</font><font color="#CCCCCC"> do</font>

394
00:29:19,220 --> 00:29:26,640
modulo<font color="#E5E5E5"> a strong strong modulo</font>

395
00:29:23,030 --> 00:29:29,160
multiplication<font color="#E5E5E5"> but like this</font><font color="#CCCCCC"> I will</font><font color="#E5E5E5"> have</font>

396
00:29:26,640 --> 00:29:31,940
<font color="#E5E5E5">a matrix of how much it can do it four</font>

397
00:29:29,160 --> 00:29:35,070
by four these<font color="#E5E5E5"> are</font><font color="#CCCCCC"> fake</font><font color="#E5E5E5"> this</font><font color="#CCCCCC"> is a fake</font>

398
00:29:31,940 --> 00:29:39,530
<font color="#E5E5E5">variable I already</font><font color="#CCCCCC"> did it I can actually</font>

399
00:29:35,070 --> 00:29:42,960
<font color="#E5E5E5">multiply four by four</font><font color="#CCCCCC"> matrix</font><font color="#E5E5E5"> and we'll</font>

400
00:29:39,530 --> 00:29:45,149
get some<font color="#E5E5E5"> other number in front of it and</font>

401
00:29:42,960 --> 00:29:47,470
another<font color="#E5E5E5"> number</font><font color="#CCCCCC"> so I'm being offered to</font>

402
00:29:45,150 --> 00:29:54,549
solve this set of equations<font color="#E5E5E5"> and</font>

403
00:29:47,470 --> 00:29:57,130
<font color="#E5E5E5">hereafter standards some standards like</font>

404
00:29:54,549 --> 00:30:04,480
<font color="#E5E5E5">under standard backpack method you also</font>

405
00:29:57,130 --> 00:30:09,520
need to replace the<font color="#CCCCCC"> variables so</font><font color="#E5E5E5"> let's</font>

406
00:30:04,480 --> 00:30:16,030
come back<font color="#E5E5E5"> how RCA was saved</font><font color="#CCCCCC"> here it's</font>

407
00:30:09,520 --> 00:30:18,100
about<font color="#E5E5E5"> us going and making it so</font><font color="#CCCCCC"> that we</font>

408
00:30:16,030 --> 00:30:21,309
first<font color="#E5E5E5"> use a strong modular</font>

409
00:30:18,100 --> 00:30:24,158
multiplication then we take<font color="#CCCCCC"> it</font><font color="#E5E5E5"> to the</font>

410
00:30:21,309 --> 00:30:26,470
power<font color="#CCCCCC"> of</font><font color="#E5E5E5"> three</font><font color="#CCCCCC"> and we're</font><font color="#E5E5E5"> not going to</font>

411
00:30:24,159 --> 00:30:29,730
say anything<font color="#E5E5E5"> about modulo if won't</font>

412
00:30:26,470 --> 00:30:34,450
encrypt something<font color="#E5E5E5"> and then nothing</font>

413
00:30:29,730 --> 00:30:38,289
<font color="#E5E5E5">fierson will happen so we compute the</font>

414
00:30:34,450 --> 00:30:41,860
public key<font color="#E5E5E5"> and this expression equation</font>

415
00:30:38,289 --> 00:30:45,370
<font color="#CCCCCC">after all we have opened up</font><font color="#E5E5E5"> the</font>

416
00:30:41,860 --> 00:30:48,729
<font color="#CCCCCC">parentheses</font><font color="#E5E5E5"> this is the public key well</font>

417
00:30:45,370 --> 00:30:50,620
I forgot to<font color="#E5E5E5"> correct it</font><font color="#CCCCCC"> this</font><font color="#E5E5E5"> square</font><font color="#CCCCCC"> so</font>

418
00:30:48,730 --> 00:30:51,299
<font color="#CCCCCC">this is going</font><font color="#E5E5E5"> to be public key it's a</font>

419
00:30:50,620 --> 00:30:54,459
polynomial

420
00:30:51,299 --> 00:30:58,600
<font color="#CCCCCC">we don't know how to solve its unique</font>

421
00:30:54,460 --> 00:31:00,460
<font color="#E5E5E5">and there are three and unknown</font>

422
00:30:58,600 --> 00:31:06,039
<font color="#CCCCCC">variables then the question how to solve</font>

423
00:31:00,460 --> 00:31:09,370
it not known the<font color="#CCCCCC"> Gilbert</font><font color="#E5E5E5"> theorem proof</font>

424
00:31:06,039 --> 00:31:13,270
says that there's no<font color="#E5E5E5"> algorithm here's</font>

425
00:31:09,370 --> 00:31:18,129
the real form of the<font color="#CCCCCC"> Oh of the public</font>

426
00:31:13,270 --> 00:31:23,799
key<font color="#CCCCCC"> I</font><font color="#E5E5E5"> am NOT</font><font color="#CCCCCC"> passing the</font><font color="#E5E5E5"> modulo well try</font>

427
00:31:18,130 --> 00:31:25,929
to solve the system<font color="#E5E5E5"> we failed</font><font color="#CCCCCC"> I must say</font>

428
00:31:23,799 --> 00:31:29,710
<font color="#E5E5E5">that all this work was</font><font color="#CCCCCC"> done</font><font color="#E5E5E5"> by students</font>

429
00:31:25,929 --> 00:31:31,900
<font color="#CCCCCC">I only enroll students of the first</font>

430
00:31:29,710 --> 00:31:34,030
second or<font color="#CCCCCC"> third year</font><font color="#E5E5E5"> and they did it so</font>

431
00:31:31,900 --> 00:31:36,640
<font color="#CCCCCC">I had</font><font color="#E5E5E5"> to teach them everything</font><font color="#CCCCCC"> that</font>

432
00:31:34,030 --> 00:31:39,250
<font color="#E5E5E5">you've heard</font><font color="#CCCCCC"> about now and we taught</font>

433
00:31:36,640 --> 00:31:42,490
them in such a<font color="#E5E5E5"> way that they should</font><font color="#CCCCCC"> know</font>

434
00:31:39,250 --> 00:31:43,990
modular arithmetic<font color="#E5E5E5"> that</font><font color="#CCCCCC"> they should be</font>

435
00:31:42,490 --> 00:31:45,520
able to<font color="#E5E5E5"> write all these</font><font color="#CCCCCC"> things in the</font>

436
00:31:43,990 --> 00:31:51,309
correct way because there are so many

437
00:31:45,520 --> 00:31:54,789
<font color="#E5E5E5">errors in that I found in software it's</font>

438
00:31:51,309 --> 00:32:00,250
especially difficult to work with<font color="#E5E5E5"> errors</font>

439
00:31:54,789 --> 00:32:01,240
that were about large<font color="#CCCCCC"> numbers you can</font>

440
00:32:00,250 --> 00:32:04,720
just

441
00:32:01,240 --> 00:32:13,120
use a strong modular<font color="#E5E5E5"> multiplication and</font>

442
00:32:04,720 --> 00:32:17,170
then now this next<font color="#E5E5E5"> thing</font><font color="#CCCCCC"> is</font><font color="#E5E5E5"> based on</font>

443
00:32:13,120 --> 00:32:22,679
homomorphic encryption<font color="#E5E5E5"> the point is that</font>

444
00:32:17,170 --> 00:32:26,380
we provided homomorphic encryption<font color="#E5E5E5"> for</font>

445
00:32:22,680 --> 00:32:30,720
the secure database for the<font color="#CCCCCC"> Minister of</font>

446
00:32:26,380 --> 00:32:34,870
<font color="#CCCCCC">science</font><font color="#E5E5E5"> and education the system the</font>

447
00:32:30,720 --> 00:32:37,270
<font color="#E5E5E5">access had to be built so</font><font color="#CCCCCC"> that every</font>

448
00:32:34,870 --> 00:32:41,469
particular<font color="#E5E5E5"> person should only get to the</font>

449
00:32:37,270 --> 00:32:43,650
<font color="#E5E5E5">authorized place and so it</font><font color="#CCCCCC"> comes</font><font color="#E5E5E5"> from</font>

450
00:32:41,470 --> 00:32:48,010
<font color="#E5E5E5">there</font>

451
00:32:43,650 --> 00:32:54,550
let's compare let's<font color="#E5E5E5"> match</font><font color="#CCCCCC"> a three</font>

452
00:32:48,010 --> 00:32:56,940
<font color="#CCCCCC">components vector to this expression</font><font color="#E5E5E5"> so</font>

453
00:32:54,550 --> 00:33:00,580
this<font color="#E5E5E5"> is going to look like this</font>

454
00:32:56,940 --> 00:33:06,910
remember that<font color="#E5E5E5"> computation was done a</font>

455
00:33:00,580 --> 00:33:12,100
modulo<font color="#E5E5E5"> 130,000 and</font><font color="#CCCCCC"> 8061</font><font color="#E5E5E5"> so I've built</font>

456
00:33:06,910 --> 00:33:17,530
<font color="#E5E5E5">three vectors</font><font color="#CCCCCC"> I built a set</font><font color="#E5E5E5"> of numbers</font>

457
00:33:12,100 --> 00:33:21,219
<font color="#CCCCCC">that</font><font color="#E5E5E5"> yields exactly that if you a scalar</font>

458
00:33:17,530 --> 00:33:28,899
multiplied by one secret vector<font color="#E5E5E5"> then you</font>

459
00:33:21,220 --> 00:33:30,820
get this<font color="#E5E5E5"> sequence of</font><font color="#CCCCCC"> seventeen twenty</font>

460
00:33:28,900 --> 00:33:33,070
<font color="#CCCCCC">seven four</font><font color="#E5E5E5"> three</font><font color="#CCCCCC"> seven</font><font color="#E5E5E5"> and so and so</font>

461
00:33:30,820 --> 00:33:36,399
forth and<font color="#E5E5E5"> so</font><font color="#CCCCCC"> we got this</font><font color="#E5E5E5"> over in this</font>

462
00:33:33,070 --> 00:33:39,580
public key you can do whatever you want

463
00:33:36,400 --> 00:33:43,990
with<font color="#E5E5E5"> them you can take it to cube you</font>

464
00:33:39,580 --> 00:33:47,110
<font color="#E5E5E5">can pass it on or not pass it on</font><font color="#CCCCCC"> by the</font>

465
00:33:43,990 --> 00:33:50,710
way to<font color="#E5E5E5"> show how ingenious the students</font>

466
00:33:47,110 --> 00:33:54,219
were they had an<font color="#E5E5E5"> idea</font><font color="#CCCCCC"> you can replace</font>

467
00:33:50,710 --> 00:33:56,050
these variables<font color="#E5E5E5"> and the variable that's</font>

468
00:33:54,220 --> 00:34:02,340
<font color="#E5E5E5">going</font><font color="#CCCCCC"> to become</font><font color="#E5E5E5"> the first after this</font>

469
00:33:56,050 --> 00:34:05,770
replacement<font color="#CCCCCC"> it will have</font><font color="#E5E5E5"> the information</font>

470
00:34:02,340 --> 00:34:11,279
<font color="#E5E5E5">so for instance the</font><font color="#CCCCCC"> eighth</font><font color="#E5E5E5"> bit in each</font>

471
00:34:05,770 --> 00:34:19,090
one will<font color="#E5E5E5"> be fake</font><font color="#CCCCCC"> so I pass less</font>

472
00:34:11,280 --> 00:34:21,190
bits<font color="#CCCCCC"> and let's say bit</font><font color="#E5E5E5"> five is fake so</font>

473
00:34:19,090 --> 00:34:22,960
you can<font color="#E5E5E5"> install anything</font><font color="#CCCCCC"> as part of</font>

474
00:34:21,190 --> 00:34:25,540
these<font color="#E5E5E5"> bits</font><font color="#CCCCCC"> and you'll get an a</font>

475
00:34:22,960 --> 00:34:29,560
predictable number so this was an<font color="#E5E5E5"> idea</font>

476
00:34:25,540 --> 00:34:32,199
of my students so it appears that it's

477
00:34:29,560 --> 00:34:36,159
an public key encryption but

478
00:34:32,199 --> 00:34:39,460
probabilistic<font color="#E5E5E5"> well thank you for your</font>

479
00:34:36,159 --> 00:34:42,159
<font color="#E5E5E5">attention now</font>

480
00:34:39,460 --> 00:34:43,960
a technical question for you to

481
00:34:42,159 --> 00:34:45,820
understand what kind of<font color="#E5E5E5"> difficulties</font><font color="#CCCCCC"> we</font>

482
00:34:43,960 --> 00:34:51,940
had to overcome<font color="#CCCCCC"> how many</font><font color="#E5E5E5"> minutes do I</font>

483
00:34:45,820 --> 00:34:54,179
have left<font color="#CCCCCC"> twenty uh</font><font color="#E5E5E5"> I was talking to the</font>

484
00:34:51,940 --> 00:35:02,850
<font color="#E5E5E5">first appears</font>

485
00:34:54,179 --> 00:35:02,850
okay so<font color="#CCCCCC"> eliminates this is hell</font>

486
00:35:03,210 --> 00:35:13,330
the case is<font color="#CCCCCC"> broken where I have a</font>

487
00:35:11,410 --> 00:35:15,700
<font color="#E5E5E5">polynomial set of</font><font color="#CCCCCC"> questions and</font><font color="#E5E5E5"> the</font>

488
00:35:13,330 --> 00:35:17,950
<font color="#E5E5E5">number of unknowns is equal to the</font>

489
00:35:15,700 --> 00:35:21,250
number<font color="#CCCCCC"> of</font><font color="#E5E5E5"> equations I</font><font color="#CCCCCC"> have this</font><font color="#E5E5E5"> set and</font>

490
00:35:17,950 --> 00:35:27,100
<font color="#E5E5E5">I want to solve these two questions</font><font color="#CCCCCC"> so</font>

491
00:35:21,250 --> 00:35:32,140
there's a free term so rewriting<font color="#CCCCCC"> it to</font>

492
00:35:27,100 --> 00:35:36,520
such in<font color="#CCCCCC"> such a form we get a matrix like</font>

493
00:35:32,140 --> 00:35:40,060
this<font color="#E5E5E5"> so I write the</font><font color="#CCCCCC"> first line and</font><font color="#E5E5E5"> then</font>

494
00:35:36,520 --> 00:35:46,480
I write<font color="#E5E5E5"> the second line and actually</font>

495
00:35:40,060 --> 00:35:51,940
here we have times<font color="#CCCCCC"> X times X</font><font color="#E5E5E5"> square and</font>

496
00:35:46,480 --> 00:35:56,290
<font color="#E5E5E5">this</font><font color="#CCCCCC"> means that it's multiplied by</font><font color="#E5E5E5"> X of</font>

497
00:35:51,940 --> 00:36:00,760
this is times X as<font color="#E5E5E5"> well and</font><font color="#CCCCCC"> this is</font>

498
00:35:56,290 --> 00:36:06,790
times X square<font color="#E5E5E5"> and this</font><font color="#CCCCCC"> unity actually</font>

499
00:36:00,760 --> 00:36:11,920
<font color="#CCCCCC">does cube here and as a result</font><font color="#E5E5E5"> and now I</font>

500
00:36:06,790 --> 00:36:15,160
<font color="#E5E5E5">apply a go a Gaussian method for this</font>

501
00:36:11,920 --> 00:36:18,180
<font color="#CCCCCC">multi-term expression and I get a set of</font>

502
00:36:15,160 --> 00:36:18,180
<font color="#CCCCCC">equations</font><font color="#E5E5E5"> like this</font>

503
00:36:19,490 --> 00:36:30,350
and the last<font color="#E5E5E5"> equation here according</font><font color="#CCCCCC"> to</font>

504
00:36:26,080 --> 00:36:32,960
<font color="#E5E5E5">the premise</font><font color="#CCCCCC"> that</font><font color="#E5E5E5"> we need to get zero</font><font color="#CCCCCC"> its</font>

505
00:36:30,350 --> 00:36:37,779
<font color="#E5E5E5">determinant equals zero and because it</font>

506
00:36:32,960 --> 00:36:42,950
equals zero excludes<font color="#CCCCCC"> eliminate the</font>

507
00:36:37,780 --> 00:36:49,690
variable<font color="#CCCCCC"> y and</font><font color="#E5E5E5"> for X we get the</font>

508
00:36:42,950 --> 00:36:52,069
<font color="#E5E5E5">following equation this equation is 4x</font>

509
00:36:49,690 --> 00:36:58,700
<font color="#CCCCCC">under the condition that</font><font color="#E5E5E5"> the determinant</font>

510
00:36:52,070 --> 00:37:01,520
is equal<font color="#E5E5E5"> to</font><font color="#CCCCCC"> zero</font><font color="#E5E5E5"> and this condition and</font>

511
00:36:58,700 --> 00:37:05,000
<font color="#E5E5E5">this condition is just the determinant</font>

512
00:37:01,520 --> 00:37:08,780
of the of the previous equipment<font color="#CCCCCC"> at the</font>

513
00:37:05,000 --> 00:37:12,290
determinant of the last<font color="#E5E5E5"> two lines</font><font color="#CCCCCC"> a 2x2</font>

514
00:37:08,780 --> 00:37:15,619
matrix<font color="#CCCCCC"> in this case</font><font color="#E5E5E5"> X obviously</font><font color="#CCCCCC"> satisfy</font>

515
00:37:12,290 --> 00:37:17,210
<font color="#E5E5E5">this</font><font color="#CCCCCC"> equation y equals minus</font><font color="#E5E5E5"> 1 in this</font>

516
00:37:15,619 --> 00:37:20,180
<font color="#E5E5E5">case so I found</font><font color="#CCCCCC"> one solution</font>

517
00:37:17,210 --> 00:37:23,780
so therefore this<font color="#CCCCCC"> before this pair this</font>

518
00:37:20,180 --> 00:37:27,859
pair will<font color="#CCCCCC"> be</font><font color="#E5E5E5"> like this you can use vieta</font>

519
00:37:23,780 --> 00:37:34,580
theorem and as a result we're going<font color="#E5E5E5"> to</font>

520
00:37:27,859 --> 00:37:36,200
<font color="#E5E5E5">get three more roots so I've been able</font>

521
00:37:34,580 --> 00:37:38,359
to<font color="#E5E5E5"> solve this system using the</font>

522
00:37:36,200 --> 00:37:43,640
eliminated so this is about the

523
00:37:38,359 --> 00:37:53,290
<font color="#E5E5E5">eliminate but with even three variables</font>

524
00:37:43,640 --> 00:37:53,290
<font color="#E5E5E5">you never get anywhere but the point is</font>

525
00:37:55,450 --> 00:38:03,710
we eliminate<font color="#CCCCCC"> one element from</font><font color="#E5E5E5"> each pair</font>

526
00:38:00,410 --> 00:38:08,509
<font color="#CCCCCC">and get the same problem</font><font color="#E5E5E5"> but</font><font color="#CCCCCC"> it's now</font>

527
00:38:03,710 --> 00:38:10,970
said<font color="#CCCCCC"> so i'll then find ways to</font><font color="#E5E5E5"> derive x</font>

528
00:38:08,510 --> 00:38:13,930
<font color="#E5E5E5">and y and</font><font color="#CCCCCC"> here we have reduced</font><font color="#E5E5E5"> it to the</font>

529
00:38:10,970 --> 00:38:17,660
case<font color="#E5E5E5"> that we have seen before</font>

530
00:38:13,930 --> 00:38:19,069
now<font color="#E5E5E5"> our</font><font color="#CCCCCC"> Cremona</font><font color="#E5E5E5"> transform what's all</font>

531
00:38:17,660 --> 00:38:24,259
<font color="#E5E5E5">about</font>

532
00:38:19,070 --> 00:38:30,800
let's introduce let's fix certain modulo

533
00:38:24,260 --> 00:38:36,339
M such that bringing k1 k2 and<font color="#CCCCCC"> ok and</font>

534
00:38:30,800 --> 00:38:52,450
it's the power in ^<font color="#E5E5E5"> K 1 K 2</font><font color="#CCCCCC"> and K n is a</font>

535
00:38:36,339 --> 00:38:52,450
mutually so this is the<font color="#E5E5E5"> direct criminal</font>

536
00:38:53,140 --> 00:39:00,069
presentation representation but in the

537
00:38:56,810 --> 00:39:04,160
case of<font color="#CCCCCC"> deaths and a yes</font><font color="#E5E5E5"> this equals</font>

538
00:39:00,069 --> 00:39:10,359
unity<font color="#E5E5E5"> and this is a boolean multi-term</font>

539
00:39:04,160 --> 00:39:17,770
equation of arbitrary form<font color="#CCCCCC"> f 1 these</font>

540
00:39:10,359 --> 00:39:21,650
multi terms for my system are arbitrary

541
00:39:17,770 --> 00:39:25,369
<font color="#E5E5E5">however I choose them</font>

542
00:39:21,650 --> 00:39:26,750
I can<font color="#CCCCCC"> always finding an inverse</font><font color="#E5E5E5"> 1 so</font>

543
00:39:25,369 --> 00:39:37,569
this<font color="#E5E5E5"> is the essence of the Cremona</font>

544
00:39:26,750 --> 00:39:41,740
transform so<font color="#E5E5E5"> there's also the lower</font>

545
00:39:37,569 --> 00:39:46,060
triangular<font color="#CCCCCC"> Cremona</font><font color="#E5E5E5"> mapping like this</font>

546
00:39:41,740 --> 00:39:55,689
let's take other mappings to be<font color="#E5E5E5"> zeros</font>

547
00:39:46,060 --> 00:40:01,630
module is the<font color="#E5E5E5"> same s 1</font><font color="#CCCCCC"> 2</font><font color="#E5E5E5"> s n a mutually</font>

548
00:39:55,690 --> 00:40:07,250
mapable module<font color="#E5E5E5"> M you can use a</font>

549
00:40:01,630 --> 00:40:10,930
reversible Finnick<font color="#E5E5E5"> mapping and take any</font>

550
00:40:07,250 --> 00:40:15,170
superposition of these two<font color="#E5E5E5"> things a</font>

551
00:40:10,930 --> 00:40:17,868
simple example<font color="#CCCCCC"> N equals</font><font color="#E5E5E5"> 2 so the upper</font>

552
00:40:15,170 --> 00:40:21,170
triangle transform like this<font color="#E5E5E5"> cube and</font>

553
00:40:17,869 --> 00:40:21,920
<font color="#E5E5E5">square</font><font color="#CCCCCC"> and</font><font color="#E5E5E5"> this</font><font color="#CCCCCC"> is the law a lower</font>

554
00:40:21,170 --> 00:40:25,099
triangular

555
00:40:21,920 --> 00:40:30,950
let's take superposition<font color="#E5E5E5"> he'll have the</font>

556
00:40:25,099 --> 00:40:34,599
power of<font color="#E5E5E5"> 6</font><font color="#CCCCCC"> where this multi term is</font>

557
00:40:30,950 --> 00:40:37,640
irreversible but any algorithm like

558
00:40:34,599 --> 00:40:41,510
illuminant they will first start

559
00:40:37,640 --> 00:40:43,430
processing<font color="#CCCCCC"> 6 because it's the highest</font><font color="#E5E5E5"> in</font>

560
00:40:41,510 --> 00:40:48,500
power

561
00:40:43,430 --> 00:40:54,230
so in principle in the second equation

562
00:40:48,500 --> 00:41:00,950
<font color="#E5E5E5">that's sold separately I'm going to have</font>

563
00:40:54,230 --> 00:41:05,240
the power of<font color="#CCCCCC"> six which means that that's</font>

564
00:41:00,950 --> 00:41:09,379
you can't grab the<font color="#E5E5E5"> basis</font><font color="#CCCCCC"> here</font>

565
00:41:05,240 --> 00:41:15,680
I<font color="#E5E5E5"> grab</font><font color="#CCCCCC"> the basis robbing</font><font color="#E5E5E5"> basis is two</font>

566
00:41:09,380 --> 00:41:18,829
variables<font color="#E5E5E5"> I also take it to the power of</font>

567
00:41:15,680 --> 00:41:22,220
three<font color="#CCCCCC"> and there are only</font><font color="#E5E5E5"> two basis</font>

568
00:41:18,829 --> 00:41:24,500
elements here<font color="#E5E5E5"> note here that they're a</font>

569
00:41:22,220 --> 00:41:27,680
little bit<font color="#E5E5E5"> different from other ones we</font>

570
00:41:24,500 --> 00:41:30,260
had before<font color="#CCCCCC"> firstly note that we</font><font color="#E5E5E5"> only</font>

571
00:41:27,680 --> 00:41:33,410
have a Y here so you<font color="#CCCCCC"> have</font><font color="#E5E5E5"> to find an</font>

572
00:41:30,260 --> 00:41:38,920
integer solution for<font color="#E5E5E5"> y is the power</font><font color="#CCCCCC"> of</font>

573
00:41:33,410 --> 00:41:48,279
<font color="#CCCCCC">nine actually you can say use a replace</font>

574
00:41:38,920 --> 00:41:54,589
<font color="#CCCCCC">Y cube by another variable so</font><font color="#E5E5E5"> you have</font>

575
00:41:48,279 --> 00:41:58,789
you<font color="#E5E5E5"> have a cubic</font><font color="#CCCCCC"> equation here and I now</font>

576
00:41:54,589 --> 00:42:02,779
have<font color="#E5E5E5"> to find an integer</font><font color="#CCCCCC"> a solution for</font>

577
00:41:58,789 --> 00:42:08,809
this equation<font color="#E5E5E5"> it's the favorite task</font>

578
00:42:02,779 --> 00:42:12,470
<font color="#E5E5E5">from school contests so they never</font>

579
00:42:08,809 --> 00:42:15,230
explained anything<font color="#E5E5E5"> about the</font><font color="#CCCCCC"> grub in</font><font color="#E5E5E5"> a</font>

580
00:42:12,470 --> 00:42:17,118
base basis at the children that they

581
00:42:15,230 --> 00:42:19,640
offer<font color="#E5E5E5"> this problem but they</font><font color="#CCCCCC"> asked them</font>

582
00:42:17,119 --> 00:42:21,650
to find an integer solution and now let

583
00:42:19,640 --> 00:42:24,259
<font color="#CCCCCC">me</font><font color="#E5E5E5"> show you how it</font><font color="#CCCCCC"> looks for</font><font color="#E5E5E5"> three</font>

584
00:42:21,650 --> 00:42:31,220
variables this<font color="#E5E5E5"> the set of equations for</font>

585
00:42:24,260 --> 00:42:33,380
<font color="#E5E5E5">three so quite an innocent set of</font>

586
00:42:31,220 --> 00:42:36,020
equations<font color="#E5E5E5"> so the first global basis if</font>

587
00:42:33,380 --> 00:42:37,730
you think that's it you are<font color="#E5E5E5"> mr.</font><font color="#CCCCCC"> strong</font>

588
00:42:36,020 --> 00:42:44,420
<font color="#E5E5E5">you're mistaken it's the first equation</font>

589
00:42:37,730 --> 00:42:50,150
<font color="#CCCCCC">of the grosvenor basis Z to the 27th</font><font color="#E5E5E5"> and</font>

590
00:42:44,420 --> 00:42:52,690
this is the second equation<font color="#E5E5E5"> question how</font>

591
00:42:50,150 --> 00:42:52,690
<font color="#E5E5E5">to solve them</font>

592
00:42:53,310 --> 00:42:59,680
that's another one there are four four

593
00:42:56,290 --> 00:43:02,500
of them all<font color="#CCCCCC"> told up to the power of</font><font color="#E5E5E5"> 25</font>

594
00:42:59,680 --> 00:43:07,348
<font color="#CCCCCC">how to solve them and</font><font color="#E5E5E5"> a similar</font><font color="#CCCCCC"> thing</font>

595
00:43:02,500 --> 00:43:11,020
<font color="#CCCCCC">for</font><font color="#E5E5E5"> X this is just a for the variable</font><font color="#CCCCCC"> y</font>

596
00:43:07,349 --> 00:43:13,540
but there's a simple<font color="#CCCCCC"> series similar set</font>

597
00:43:11,020 --> 00:43:17,849
for<font color="#E5E5E5"> X and you need to solve them and</font>

598
00:43:13,540 --> 00:43:21,940
then you'll break a public key system

599
00:43:17,849 --> 00:43:25,180
under no other conditions unless you

600
00:43:21,940 --> 00:43:27,310
first solve this equation<font color="#CCCCCC"> you'll be able</font>

601
00:43:25,180 --> 00:43:29,470
<font color="#E5E5E5">to find it the question what computer</font>

602
00:43:27,310 --> 00:43:31,450
will be<font color="#CCCCCC"> able to do that well I think</font>

603
00:43:29,470 --> 00:43:36,578
that<font color="#CCCCCC"> there's no such computer in the</font>

604
00:43:31,450 --> 00:43:41,078
<font color="#E5E5E5">world this day and age and there's</font>

605
00:43:36,579 --> 00:43:43,869
creating this<font color="#CCCCCC"> problem</font><font color="#E5E5E5"> basis or at least</font>

606
00:43:41,079 --> 00:43:49,150
the mathematical<font color="#E5E5E5"> software managed to</font>

607
00:43:43,869 --> 00:43:51,700
solve<font color="#E5E5E5"> it</font><font color="#CCCCCC"> but</font><font color="#E5E5E5"> not after the powers of</font>

608
00:43:49,150 --> 00:43:54,660
<font color="#E5E5E5">five and six there are lots of other</font>

609
00:43:51,700 --> 00:43:59,410
things<font color="#E5E5E5"> now my first year students are</font>

610
00:43:54,660 --> 00:44:02,109
<font color="#CCCCCC">generalizing the backpack problem</font><font color="#E5E5E5"> there</font>

611
00:43:59,410 --> 00:44:09,129
<font color="#E5E5E5">are lots of questions</font><font color="#CCCCCC"> to</font><font color="#E5E5E5"> it although</font>

612
00:44:02,109 --> 00:44:13,529
<font color="#E5E5E5">it's the</font><font color="#CCCCCC"> second part of my</font><font color="#E5E5E5"> the second</font>

613
00:44:09,130 --> 00:44:19,349
group<font color="#CCCCCC"> of students developing the case</font>

614
00:44:13,530 --> 00:44:23,170
with elliptic<font color="#E5E5E5"> cryptography even though</font>

615
00:44:19,349 --> 00:44:27,609
it was mentioned<font color="#CCCCCC"> there's going down the</font>

616
00:44:23,170 --> 00:44:31,270
<font color="#CCCCCC">drain now</font><font color="#E5E5E5"> but they decided to invent an</font>

617
00:44:27,609 --> 00:44:35,339
ISO<font color="#CCCCCC"> Genie</font><font color="#E5E5E5"> method</font><font color="#CCCCCC"> but I think it's</font><font color="#E5E5E5"> just a</font>

618
00:44:31,270 --> 00:44:45,180
prop<font color="#CCCCCC"> that's not going to</font><font color="#E5E5E5"> last actually</font>

619
00:44:35,339 --> 00:44:50,940
read<font color="#CCCCCC"> about elliptic cryptography in</font>

620
00:44:45,180 --> 00:44:57,960
lectures from on a projective geometry

621
00:44:50,940 --> 00:44:57,960
<font color="#CCCCCC">read by a guy who was wounded</font><font color="#E5E5E5"> in the</font>

622
00:44:58,650 --> 00:45:02,849
<font color="#E5E5E5">Napoleon Napoleonic war</font>

623
00:45:03,410 --> 00:45:09,319
so it's<font color="#E5E5E5"> quite no question if you're</font>

624
00:45:06,380 --> 00:45:11,869
<font color="#E5E5E5">really interested in that come to me and</font>

625
00:45:09,319 --> 00:45:15,049
I can add something<font color="#E5E5E5"> I have 15 students</font>

626
00:45:11,869 --> 00:45:19,819
working<font color="#E5E5E5"> on these problems</font><font color="#CCCCCC"> now this is</font>

627
00:45:15,049 --> 00:45:24,670
the spirit<font color="#E5E5E5"> so</font><font color="#CCCCCC"> okay questions you asked</font>

628
00:45:19,819 --> 00:45:24,670
me to run faster any questions

629
00:45:26,289 --> 00:45:37,039
so can I switch it off<font color="#CCCCCC"> okay okay so one</font>

630
00:45:33,979 --> 00:45:39,160
by one<font color="#CCCCCC"> I have several questions there</font>

631
00:45:37,039 --> 00:45:42,199
was number one<font color="#E5E5E5"> the simplest which</font>

632
00:45:39,160 --> 00:45:46,160
solvers<font color="#CCCCCC"> did your students use in the</font>

633
00:45:42,199 --> 00:45:48,259
<font color="#E5E5E5">beginning of the lecture it was rather a</font>

634
00:45:46,160 --> 00:45:50,828
lecture than a<font color="#E5E5E5"> presentation right you</font>

635
00:45:48,259 --> 00:45:55,430
mentioned<font color="#E5E5E5"> that your students tried all</font>

636
00:45:50,829 --> 00:45:59,259
solver packages that try<font color="#CCCCCC"> to solve so can</font>

637
00:45:55,430 --> 00:46:02,690
<font color="#E5E5E5">you list them</font><font color="#CCCCCC"> apart</font><font color="#E5E5E5"> blast</font><font color="#CCCCCC"> could Oh blast</font>

638
00:45:59,259 --> 00:46:05,390
<font color="#E5E5E5">you know what those that did work</font><font color="#CCCCCC"> we</font>

639
00:46:02,690 --> 00:46:07,910
just rejected them at the only<font color="#E5E5E5"> one that</font>

640
00:46:05,390 --> 00:46:12,038
here longer<font color="#CCCCCC"> than others was Mathematica</font>

641
00:46:07,910 --> 00:46:14,660
<font color="#E5E5E5">the latest version whether no</font>

642
00:46:12,039 --> 00:46:18,440
accelerators are used there why<font color="#CCCCCC"> should</font>

643
00:46:14,660 --> 00:46:22,899
<font color="#E5E5E5">you use them the thing is look the</font>

644
00:46:18,440 --> 00:46:25,789
numbers<font color="#E5E5E5"> that you get when there are five</font>

645
00:46:22,900 --> 00:46:28,390
of five variables<font color="#CCCCCC"> they're</font><font color="#E5E5E5"> not even</font>

646
00:46:25,789 --> 00:46:33,829
<font color="#CCCCCC">64-bit what was the dimensionality there</font>

647
00:46:28,390 --> 00:46:37,940
220 220<font color="#CCCCCC"> q the bus I</font><font color="#E5E5E5"> think it sold quite</font>

648
00:46:33,829 --> 00:46:41,119
fast<font color="#CCCCCC"> I I doubt we'll</font><font color="#E5E5E5"> try</font><font color="#CCCCCC"> okay so you</font>

649
00:46:37,940 --> 00:46:43,670
haven't tried<font color="#E5E5E5"> cool oh I'll note for</font>

650
00:46:41,119 --> 00:46:45,890
myself CUDA<font color="#CCCCCC"> we didn't</font><font color="#E5E5E5"> use Kudo that's</font>

651
00:46:43,670 --> 00:46:48,400
for<font color="#E5E5E5"> sure but for first year first year</font>

652
00:46:45,890 --> 00:46:55,219
<font color="#E5E5E5">students and Kudo are kind of a oxymoron</font>

653
00:46:48,400 --> 00:46:59,930
okay another question<font color="#E5E5E5"> you use a general</font>

654
00:46:55,219 --> 00:47:02,779
polynomial systems right of course<font color="#E5E5E5"> I</font>

655
00:46:59,930 --> 00:47:05,299
gave<font color="#E5E5E5"> examples that just fit there are</font>

656
00:47:02,779 --> 00:47:07,430
examples there that<font color="#E5E5E5"> so another</font><font color="#CCCCCC"> question</font>

657
00:47:05,299 --> 00:47:11,119
which is practically which is absolutely

658
00:47:07,430 --> 00:47:13,500
practical yeah there's an interesting

659
00:47:11,119 --> 00:47:16,770
<font color="#E5E5E5">project now</font><font color="#CCCCCC"> noise</font><font color="#E5E5E5"> TCP</font>

660
00:47:13,500 --> 00:47:21,720
you heard anything<font color="#CCCCCC"> about</font><font color="#E5E5E5"> it the one that</font>

661
00:47:16,770 --> 00:47:26,790
<font color="#E5E5E5">new hope from Google runs no no well</font>

662
00:47:21,720 --> 00:47:29,700
yeah<font color="#E5E5E5"> I think they have organized their</font>

663
00:47:26,790 --> 00:47:31,590
<font color="#CCCCCC">own company running an interesting</font>

664
00:47:29,700 --> 00:47:33,890
project<font color="#CCCCCC"> called nice</font><font color="#E5E5E5"> TCP</font>

665
00:47:31,590 --> 00:47:36,870
well it's only<font color="#E5E5E5"> a big drawback is</font><font color="#CCCCCC"> that</font>

666
00:47:33,890 --> 00:47:39,029
they don't<font color="#E5E5E5"> have any serious crypt</font>

667
00:47:36,870 --> 00:47:44,630
analysis well<font color="#CCCCCC"> the thing is</font><font color="#E5E5E5"> that new hope</font>

668
00:47:39,030 --> 00:47:48,870
<font color="#E5E5E5">and the fraud algorithm that's used</font><font color="#CCCCCC"> they</font>

669
00:47:44,630 --> 00:47:56,910
have a one unpleasant<font color="#E5E5E5"> trait</font><font color="#CCCCCC"> they're</font>

670
00:47:48,870 --> 00:48:01,920
solving the problem of<font color="#E5E5E5"> well minimum</font>

671
00:47:56,910 --> 00:48:04,649
vectors in the grid<font color="#E5E5E5"> and</font><font color="#CCCCCC"> they they use</font>

672
00:48:01,920 --> 00:48:09,780
the grid<font color="#CCCCCC"> okay this is the</font><font color="#E5E5E5"> mathematical</font>

673
00:48:04,650 --> 00:48:11,130
part so<font color="#CCCCCC"> this strength</font><font color="#E5E5E5"> isn't</font><font color="#CCCCCC"> that the</font>

674
00:48:09,780 --> 00:48:17,670
strength problem is that they can't

675
00:48:11,130 --> 00:48:18,810
prove that<font color="#CCCCCC"> it is a</font><font color="#E5E5E5"> really strong problem</font>

676
00:48:17,670 --> 00:48:21,350
<font color="#CCCCCC">okay I got it</font>

677
00:48:18,810 --> 00:48:26,420
there's also one engineering point

678
00:48:21,350 --> 00:48:26,420
<font color="#E5E5E5">they're generating a familial keys here</font>

679
00:48:28,940 --> 00:48:36,170
so the world they should<font color="#E5E5E5"> only</font><font color="#CCCCCC"> be</font>

680
00:48:33,150 --> 00:48:39,390
available<font color="#CCCCCC"> during this session</font><font color="#E5E5E5"> so if we</font>

681
00:48:36,170 --> 00:48:41,130
have them<font color="#E5E5E5"> give the traffic we can't</font><font color="#CCCCCC"> fill</font>

682
00:48:39,390 --> 00:48:46,020
<font color="#E5E5E5">restore well the problem there</font><font color="#CCCCCC"> is that</font>

683
00:48:41,130 --> 00:48:49,620
<font color="#E5E5E5">in</font><font color="#CCCCCC"> principle</font><font color="#E5E5E5"> there's a nonzero</font>

684
00:48:46,020 --> 00:48:53,280
probability that<font color="#CCCCCC"> we'll never decrypt do</font>

685
00:48:49,620 --> 00:48:55,670
you<font color="#E5E5E5"> know you are that just because they</font>

686
00:48:53,280 --> 00:49:02,100
create these vectors in a random way

687
00:48:55,670 --> 00:49:04,470
yeah<font color="#E5E5E5"> so</font><font color="#CCCCCC"> we</font><font color="#E5E5E5"> can get a correct session but</font>

688
00:49:02,100 --> 00:49:10,200
<font color="#E5E5E5">you haven't done any serious analysis</font>

689
00:49:04,470 --> 00:49:11,879
that no we<font color="#CCCCCC"> just did it our own way</font><font color="#E5E5E5"> yes</font>

690
00:49:10,200 --> 00:49:15,629
<font color="#E5E5E5">thank you</font><font color="#CCCCCC"> very</font><font color="#E5E5E5"> much it</font><font color="#CCCCCC"> was an exciting</font>

691
00:49:11,880 --> 00:49:17,070
presentation thank you thank you<font color="#CCCCCC"> for</font>

692
00:49:15,630 --> 00:49:20,340
<font color="#CCCCCC">your presentation I also have two</font>

693
00:49:17,070 --> 00:49:23,220
<font color="#CCCCCC">questions firstly</font><font color="#E5E5E5"> you mentioned in</font><font color="#CCCCCC"> one</font>

694
00:49:20,340 --> 00:49:24,820
<font color="#CCCCCC">of your slides that the modulo should be</font>

695
00:49:23,220 --> 00:49:27,160
quite long

696
00:49:24,820 --> 00:49:31,840
<font color="#CCCCCC">what kind of lengths</font><font color="#E5E5E5"> should the keys</font>

697
00:49:27,160 --> 00:49:33,480
have in this<font color="#E5E5E5"> in these systems microphone</font>

698
00:49:31,840 --> 00:49:41,020
<font color="#CCCCCC">please</font>

699
00:49:33,480 --> 00:49:49,480
microphone<font color="#CCCCCC"> can you please ask the</font>

700
00:49:41,020 --> 00:49:53,280
speaker to use the microphone the

701
00:49:49,480 --> 00:49:53,280
speaker has dropped the microphone

702
00:50:00,350 --> 00:50:04,200
<font color="#CCCCCC">what I'm sorry the</font><font color="#E5E5E5"> translation is not</font>

703
00:50:02,640 --> 00:50:08,129
possible because<font color="#E5E5E5"> the speaker is</font><font color="#CCCCCC"> not</font>

704
00:50:04,200 --> 00:50:10,740
using<font color="#E5E5E5"> the microphone well I take</font><font color="#CCCCCC"> it to</font>

705
00:50:08,130 --> 00:50:14,430
<font color="#E5E5E5">the power of three the person does</font><font color="#CCCCCC"> no</font>

706
00:50:10,740 --> 00:50:17,609
modulo how well they build the inverse

707
00:50:14,430 --> 00:50:20,580
mapping<font color="#E5E5E5"> there's no way for them to do it</font>

708
00:50:17,610 --> 00:50:24,900
because<font color="#CCCCCC"> I am NOT</font><font color="#E5E5E5"> passing the modulo to</font>

709
00:50:20,580 --> 00:50:27,299
them<font color="#E5E5E5"> my modulo is you know long gone and</font>

710
00:50:24,900 --> 00:50:29,130
then I take<font color="#CCCCCC"> it to</font><font color="#E5E5E5"> the power of three so</font>

711
00:50:27,300 --> 00:50:30,360
you get some numbers<font color="#E5E5E5"> and try to figure</font>

712
00:50:29,130 --> 00:50:35,670
them out<font color="#E5E5E5"> go figure</font>

713
00:50:30,360 --> 00:50:37,320
so there's a version where the<font color="#E5E5E5"> module</font><font color="#CCCCCC"> is</font>

714
00:50:35,670 --> 00:50:40,170
to be passed like what digital<font color="#E5E5E5"> signature</font>

715
00:50:37,320 --> 00:50:42,120
<font color="#E5E5E5">do that otherwise I'll be</font><font color="#CCCCCC"> able to</font>

716
00:50:40,170 --> 00:50:44,370
decrypt<font color="#E5E5E5"> it but to persuade the other guy</font>

717
00:50:42,120 --> 00:50:49,650
<font color="#CCCCCC">that it's what they need is impossible</font>

718
00:50:44,370 --> 00:50:51,900
<font color="#E5E5E5">so here the question is this is the</font>

719
00:50:49,650 --> 00:50:54,630
<font color="#E5E5E5">reason why I called it safe RCA the</font>

720
00:50:51,900 --> 00:50:56,160
<font color="#E5E5E5">module modulo</font><font color="#CCCCCC"> is never passed</font><font color="#E5E5E5"> but</font>

721
00:50:54,630 --> 00:50:59,310
there's a version where the<font color="#E5E5E5"> module is</font>

722
00:50:56,160 --> 00:51:02,790
<font color="#E5E5E5">not passed so it doesn't take long</font><font color="#CCCCCC"> to</font>

723
00:50:59,310 --> 00:51:06,509
generate keys for<font color="#CCCCCC"> that well for</font><font color="#E5E5E5"> eight</font>

724
00:51:02,790 --> 00:51:10,680
variables it's okay<font color="#E5E5E5"> the problem</font><font color="#CCCCCC"> is with</font>

725
00:51:06,510 --> 00:51:12,560
a larger<font color="#E5E5E5"> number</font><font color="#CCCCCC"> point is that so when</font>

726
00:51:10,680 --> 00:51:16,560
there are more variables we use<font color="#CCCCCC"> a</font>

727
00:51:12,560 --> 00:51:18,600
<font color="#E5E5E5">different approach the latest one either</font>

728
00:51:16,560 --> 00:51:20,930
<font color="#E5E5E5">the great theory or homomorphic</font>

729
00:51:18,600 --> 00:51:27,180
encryption but they use different<font color="#E5E5E5"> modulo</font>

730
00:51:20,930 --> 00:51:35,100
<font color="#CCCCCC">three equations with eight unknowns it's</font>

731
00:51:27,180 --> 00:51:38,430
quite tolerable<font color="#E5E5E5"> well at least we haven't</font>

732
00:51:35,100 --> 00:51:39,720
seen any problems<font color="#E5E5E5"> about that the key is</font>

733
00:51:38,430 --> 00:51:43,470
not too long

734
00:51:39,720 --> 00:51:46,500
can you<font color="#E5E5E5"> mention in numbers how long it</font>

735
00:51:43,470 --> 00:51:51,060
takes seconds minutes<font color="#E5E5E5"> so with a</font><font color="#CCCCCC"> to</font><font color="#E5E5E5"> 100</font>

736
00:51:46,500 --> 00:51:53,370
variables<font color="#CCCCCC"> it's one</font><font color="#E5E5E5"> and a half hours well</font>

737
00:51:51,060 --> 00:51:56,160
so every time<font color="#E5E5E5"> now it's</font><font color="#CCCCCC"> just for the</font>

738
00:51:53,370 --> 00:52:03,180
generation of the key encryption happens

739
00:51:56,160 --> 00:52:06,270
very fast<font color="#CCCCCC"> a minute the questions are</font>

740
00:52:03,180 --> 00:52:09,359
<font color="#CCCCCC">that the key is generated</font><font color="#E5E5E5"> for a long</font>

741
00:52:06,270 --> 00:52:11,009
time the key itself<font color="#E5E5E5"> but I'm talking</font>

742
00:52:09,360 --> 00:52:13,740
<font color="#CCCCCC">about the public key and</font><font color="#E5E5E5"> the</font><font color="#CCCCCC"> second</font>

743
00:52:11,010 --> 00:52:14,280
question<font color="#CCCCCC"> is about the fact that the</font>

744
00:52:13,740 --> 00:52:16,740
modulo

745
00:52:14,280 --> 00:52:19,590
is not<font color="#CCCCCC"> passed in the system</font><font color="#E5E5E5"> there's a</font>

746
00:52:16,740 --> 00:52:21,569
version<font color="#E5E5E5"> a way you pass it and so there's</font>

747
00:52:19,590 --> 00:52:22,860
a version<font color="#CCCCCC"> a way you don't</font><font color="#E5E5E5"> pass well for</font>

748
00:52:21,570 --> 00:52:24,420
the for the<font color="#E5E5E5"> version of</font><font color="#CCCCCC"> way</font><font color="#E5E5E5"> you don't</font>

749
00:52:22,860 --> 00:52:25,920
pass for instance I want to send you<font color="#CCCCCC"> an</font>

750
00:52:24,420 --> 00:52:30,570
encrypted message<font color="#CCCCCC"> how will I know which</font>

751
00:52:25,920 --> 00:52:31,860
modulo should I use so<font color="#E5E5E5"> to encrypt I pass</font>

752
00:52:30,570 --> 00:52:37,290
you the<font color="#CCCCCC"> information that all numbers</font>

753
00:52:31,860 --> 00:52:40,370
<font color="#CCCCCC">should be 11</font><font color="#E5E5E5"> have</font><font color="#CCCCCC"> bit 11 bits each</font>

754
00:52:37,290 --> 00:52:45,800
number 11 bits<font color="#E5E5E5"> and from this information</font>

755
00:52:40,370 --> 00:52:51,900
<font color="#E5E5E5">it Lord won't know which key so I have</font>

756
00:52:45,800 --> 00:52:54,750
to find such coefficients<font color="#CCCCCC"> that should be</font>

757
00:52:51,900 --> 00:52:57,540
of a certain dimensionality yes<font color="#E5E5E5"> I tell</font>

758
00:52:54,750 --> 00:53:02,630
<font color="#CCCCCC">you just 10 bits and myself</font><font color="#E5E5E5"> I take the</font>

759
00:52:57,540 --> 00:53:05,540
modulo of 15 bits it's slower

760
00:53:02,630 --> 00:53:17,270
<font color="#CCCCCC">ok got it</font>

761
00:53:05,540 --> 00:53:17,270
<font color="#CCCCCC">have yours somebody raise your hand oh</font>

762
00:53:19,640 --> 00:53:23,549
thank<font color="#E5E5E5"> you for your presentation it</font>

763
00:53:22,140 --> 00:53:25,440
appears that's my<font color="#E5E5E5"> question is a</font>

764
00:53:23,550 --> 00:53:27,600
continuation of<font color="#E5E5E5"> the previous one look if</font>

765
00:53:25,440 --> 00:53:29,880
we don't<font color="#E5E5E5"> pass the modulo but we pass</font>

766
00:53:27,600 --> 00:53:32,730
<font color="#CCCCCC">through the length</font><font color="#E5E5E5"> of the bits that</font><font color="#CCCCCC"> we</font>

767
00:53:29,880 --> 00:53:35,130
need to use<font color="#CCCCCC"> for</font><font color="#E5E5E5"> to verify</font><font color="#CCCCCC"> our system</font><font color="#E5E5E5"> or</font>

768
00:53:32,730 --> 00:53:37,860
why<font color="#CCCCCC"> don't you propose that the</font>

769
00:53:35,130 --> 00:53:39,390
malefactor knowing the public key<font color="#E5E5E5"> and</font>

770
00:53:37,860 --> 00:53:42,750
<font color="#E5E5E5">the length of the variables that we</font><font color="#CCCCCC"> need</font>

771
00:53:39,390 --> 00:53:46,500
<font color="#E5E5E5">to pass will not just enumerate all the</font>

772
00:53:42,750 --> 00:53:51,420
<font color="#E5E5E5">numbers for these variables or yes of</font>

773
00:53:46,500 --> 00:53:56,790
course it<font color="#CCCCCC"> takes</font><font color="#E5E5E5"> a long</font><font color="#CCCCCC"> time 200</font><font color="#E5E5E5"> yes</font>

774
00:53:51,420 --> 00:53:58,770
clear<font color="#E5E5E5"> microphone</font><font color="#CCCCCC"> I understand it's a</font>

775
00:53:56,790 --> 00:54:02,370
<font color="#CCCCCC">very large</font><font color="#E5E5E5"> number it's a very long in</font>

776
00:53:58,770 --> 00:54:05,640
<font color="#CCCCCC">aberration 2,000 bits means that you can</font>

777
00:54:02,370 --> 00:54:07,380
hack RCA in such a way yes<font color="#E5E5E5"> but it</font>

778
00:54:05,640 --> 00:54:11,580
doesn't<font color="#CCCCCC"> mean that</font><font color="#E5E5E5"> it's not a solvable</font>

779
00:54:07,380 --> 00:54:13,620
problem<font color="#CCCCCC"> that's</font><font color="#E5E5E5"> in theory it's</font><font color="#CCCCCC"> possible a</font>

780
00:54:11,580 --> 00:54:19,259
quantum computer<font color="#CCCCCC"> could perhaps enumerate</font>

781
00:54:13,620 --> 00:54:22,450
them<font color="#E5E5E5"> no the thing is</font>

782
00:54:19,260 --> 00:54:24,490
enumeration<font color="#CCCCCC"> you know</font><font color="#E5E5E5"> you can solve</font>

783
00:54:22,450 --> 00:54:28,020
anything with enumeration<font color="#E5E5E5"> the question</font>

784
00:54:24,490 --> 00:54:28,020
is how<font color="#E5E5E5"> long</font><font color="#CCCCCC"> will it is going</font><font color="#E5E5E5"> to take</font>

785
00:54:28,440 --> 00:54:37,300
what the<font color="#E5E5E5"> quantum</font><font color="#CCCCCC"> cuenta</font><font color="#E5E5E5"> qtek do it can</font>

786
00:54:32,200 --> 00:54:41,259
enumerate<font color="#E5E5E5"> only the powers of a certain</font>

787
00:54:37,300 --> 00:54:43,869
number four number factorization<font color="#E5E5E5"> okay</font>

788
00:54:41,260 --> 00:54:46,180
another small question have you<font color="#E5E5E5"> tried to</font>

789
00:54:43,869 --> 00:54:48,220
do such enumeration for small<font color="#E5E5E5"> numbers</font>

790
00:54:46,180 --> 00:54:49,868
just to<font color="#E5E5E5"> measure of course I deal with it</font>

791
00:54:48,220 --> 00:54:53,319
do<font color="#E5E5E5"> you have any of these this</font>

792
00:54:49,869 --> 00:54:57,630
<font color="#CCCCCC">information or I think we had a</font>

793
00:54:53,320 --> 00:55:00,130
reference<font color="#CCCCCC"> so to the result</font><font color="#E5E5E5"> sixteen</font>

794
00:54:57,630 --> 00:55:04,930
<font color="#CCCCCC">sixteen hundred eighty-three</font><font color="#E5E5E5"> numbers I</font>

795
00:55:00,130 --> 00:55:07,330
think but<font color="#CCCCCC"> just imagine that</font><font color="#E5E5E5"> it's all</font>

796
00:55:04,930 --> 00:55:11,529
done<font color="#CCCCCC"> by first second</font><font color="#E5E5E5"> or third</font><font color="#CCCCCC"> year</font>

797
00:55:07,330 --> 00:55:14,200
students<font color="#CCCCCC"> so they first need to</font><font color="#E5E5E5"> be taught</font>

798
00:55:11,530 --> 00:55:17,230
cryptography it's quite natural<font color="#E5E5E5"> also</font>

799
00:55:14,200 --> 00:55:19,930
<font color="#CCCCCC">being able to</font><font color="#E5E5E5"> work with large numbers</font>

800
00:55:17,230 --> 00:55:26,260
they are not they<font color="#CCCCCC"> don't yet know that</font>

801
00:55:19,930 --> 00:55:29,618
<font color="#CCCCCC">and the worst</font><font color="#E5E5E5"> thing</font><font color="#CCCCCC"> is the skill to</font>

802
00:55:26,260 --> 00:55:33,849
implement implementation skills so it

803
00:55:29,619 --> 00:55:38,050
all fails<font color="#E5E5E5"> because they use wrong methods</font>

804
00:55:33,849 --> 00:55:40,270
to implement<font color="#E5E5E5"> just imagine now that</font><font color="#CCCCCC"> you</font>

805
00:55:38,050 --> 00:55:43,030
mentioned that<font color="#E5E5E5"> I haven't seen result</font><font color="#CCCCCC"> I</font>

806
00:55:40,270 --> 00:55:45,580
haven't seen references to the results

807
00:55:43,030 --> 00:55:47,650
of your presentation<font color="#E5E5E5"> firstly I was told</font>

808
00:55:45,580 --> 00:55:52,000
that<font color="#E5E5E5"> this whole presentation will be</font>

809
00:55:47,650 --> 00:55:54,010
posted somewhere<font color="#E5E5E5"> you can read the my</font>

810
00:55:52,000 --> 00:55:58,140
dresses there so if any questions or

811
00:55:54,010 --> 00:56:01,680
ideas<font color="#CCCCCC"> get in touch okay thank you</font>

812
00:55:58,140 --> 00:56:01,680
the time is<font color="#CCCCCC"> up</font>

