1
00:00:03,140 --> 00:00:14,099
thank you for coming I'm a I work in the

2
00:00:11,639 --> 00:00:18,840
security lab in Kaspersky and I won the

3
00:00:14,099 --> 00:00:21,990
Torah is a very interesting topic the

4
00:00:18,840 --> 00:00:27,349
use of CIL our integration functionality

5
00:00:21,990 --> 00:00:32,390
for persistent what is it

6
00:00:27,349 --> 00:00:37,710
functionality that allows you to improve

7
00:00:32,390 --> 00:00:41,010
your sequel server because you can

8
00:00:37,710 --> 00:00:50,329
create at any top net language your

9
00:00:41,010 --> 00:00:50,329
users functions types virtually anything

10
00:00:50,420 --> 00:00:58,920
important you can import into a sequel

11
00:00:52,680 --> 00:01:04,519
server and use as if they're native it's

12
00:00:58,920 --> 00:01:08,909
more than convenient does it look like

13
00:01:04,519 --> 00:01:13,439
storing of some users code storing and

14
00:01:08,909 --> 00:01:17,659
executing of some users code in the DB

15
00:01:13,439 --> 00:01:17,658
yes this is exactly true

16
00:01:20,070 --> 00:01:28,710
how does this code who is it stored in

17
00:01:24,600 --> 00:01:40,679
the Debian we can determine the assembly

18
00:01:28,710 --> 00:01:47,070
assembly is it's a c-sharp rewritten and

19
00:01:40,680 --> 00:01:48,990
it will help us to determine a type and

20
00:01:47,070 --> 00:01:56,758
this code would be stored in the

21
00:01:48,990 --> 00:01:59,550
database it's not a server object unlike

22
00:01:56,759 --> 00:02:01,950
a speed CC empty shell that's at the

23
00:01:59,550 --> 00:02:04,490
server level this is a certainly

24
00:02:01,950 --> 00:02:09,750
database object it sounds dangerous

25
00:02:04,490 --> 00:02:14,670
indeed it sounds dangerous and it's a

26
00:02:09,750 --> 00:02:17,660
why the tools of security restrictions

27
00:02:14,670 --> 00:02:21,450
have been invented let's consider them

28
00:02:17,660 --> 00:02:29,670
Eve in the sequel server for the access

29
00:02:21,450 --> 00:02:31,649
to data the access to data is provided

30
00:02:29,670 --> 00:02:35,070
if the subject has right so that's

31
00:02:31,650 --> 00:02:38,430
logical the user is getting access to

32
00:02:35,070 --> 00:02:41,040
some entry in the chart if he has rights

33
00:02:38,430 --> 00:02:44,610
what about the code because the codes

34
00:02:41,040 --> 00:02:48,060
that's executed only has one subject the

35
00:02:44,610 --> 00:02:50,940
server that executed one subject and

36
00:02:48,060 --> 00:02:54,090
what can you do and that's why as a

37
00:02:50,940 --> 00:02:56,720
model was invented two different shades

38
00:02:54,090 --> 00:03:00,650
the codes by Z

39
00:02:56,720 --> 00:03:03,530
at a level of danger there are hazardous

40
00:03:00,650 --> 00:03:07,100
dangerous with the codes a code having

41
00:03:03,530 --> 00:03:13,510
external access and safe code secure

42
00:03:07,100 --> 00:03:15,769
code as unsecure code does not have any

43
00:03:13,510 --> 00:03:20,260
restrictions from the sequel server it

44
00:03:15,770 --> 00:03:24,260
can contain whatever you want it may

45
00:03:20,260 --> 00:03:26,600
create new flows the launcher start new

46
00:03:24,260 --> 00:03:29,870
applications no restriction at all and

47
00:03:26,600 --> 00:03:33,880
the code with external access has

48
00:03:29,870 --> 00:03:33,880
restrictions that it should not contain

49
00:03:33,910 --> 00:03:41,660
control of streams or turning to the

50
00:03:38,300 --> 00:03:43,640
general memory synchronization so the

51
00:03:41,660 --> 00:03:49,070
code with external access should not

52
00:03:43,640 --> 00:03:50,779
leave the civil service processor it

53
00:03:49,070 --> 00:03:54,920
should not control any other

54
00:03:50,780 --> 00:03:57,680
applications and it is named do you know

55
00:03:54,920 --> 00:04:00,530
with external access this code may turn

56
00:03:57,680 --> 00:04:02,180
to your rel download something you

57
00:04:00,530 --> 00:04:04,910
imagine how good it is to make a

58
00:04:02,180 --> 00:04:08,510
procedure and call it name it a get get

59
00:04:04,910 --> 00:04:11,000
user info and in in one query it will

60
00:04:08,510 --> 00:04:13,160
assemble all informations or information

61
00:04:11,000 --> 00:04:15,590
from your exchanges old open the catalog

62
00:04:13,160 --> 00:04:20,000
and you will always have actual

63
00:04:15,590 --> 00:04:23,930
information about the user up to you

64
00:04:20,000 --> 00:04:27,860
know how much how many days of vacation

65
00:04:23,930 --> 00:04:31,460
he has still left currently

66
00:04:27,860 --> 00:04:34,849
and security Six Sigma secured Paulito

67
00:04:31,460 --> 00:04:38,000
and additionally you have restrictions

68
00:04:34,849 --> 00:04:41,330
it restrictions would be imposed and no

69
00:04:38,000 --> 00:04:44,750
external access no external resources

70
00:04:41,330 --> 00:04:49,099
should be there it should work only with

71
00:04:44,750 --> 00:04:53,800
this data in the sequel server but it

72
00:04:49,099 --> 00:04:59,000
has small bonus it can use a context

73
00:04:53,800 --> 00:05:03,319
connection so you can connect within

74
00:04:59,000 --> 00:05:07,069
that sequel server yeah to another DB

75
00:05:03,319 --> 00:05:11,840
with the rights if you write a code

76
00:05:07,069 --> 00:05:17,110
properly with the DB sequel server DB

77
00:05:11,840 --> 00:05:20,869
rights or you may impersonate a user and

78
00:05:17,110 --> 00:05:23,629
a user who launches a certain storage

79
00:05:20,870 --> 00:05:28,370
and that doesn't the dosa does something

80
00:05:23,629 --> 00:05:30,590
and have the access rights to the data

81
00:05:28,370 --> 00:05:33,740
inside sequel server on behalf of the

82
00:05:30,590 --> 00:05:35,628
user and it's quite logical restriction

83
00:05:33,740 --> 00:05:38,120
by the danger level

84
00:05:35,629 --> 00:05:42,379
it's interesting how they are realized

85
00:05:38,120 --> 00:05:44,180
and they realized on both sides and from

86
00:05:42,379 --> 00:05:47,839
this simple server point at the moment

87
00:05:44,180 --> 00:05:55,669
of identifying the code reading the

88
00:05:47,839 --> 00:05:59,419
culture when we say great assembly would

89
00:05:55,669 --> 00:06:03,258
be checked and for the external access

90
00:05:59,419 --> 00:06:06,099
code injection that it does not contain

91
00:06:03,259 --> 00:06:10,699
any suspicious attributes like

92
00:06:06,099 --> 00:06:14,110
containing uncontrolled codes or it

93
00:06:10,699 --> 00:06:17,659
contains tags that it uses

94
00:06:14,110 --> 00:06:20,060
synchronization with other processes if

95
00:06:17,659 --> 00:06:22,400
it's not there it's good and it would be

96
00:06:20,060 --> 00:06:28,039
done through this utility that's called

97
00:06:22,400 --> 00:06:33,739
peeve in every machine with this

98
00:06:28,039 --> 00:06:35,659
framework there is a utility and that

99
00:06:33,740 --> 00:06:44,560
you can analyze you can perform an

100
00:06:35,659 --> 00:06:47,089
analysis of code and we need to again

101
00:06:44,560 --> 00:06:50,709
confirms that in order to add a code

102
00:06:47,089 --> 00:06:54,709
into a GP you don't need those a rights

103
00:06:50,709 --> 00:06:57,229
so they took just to add we have enough

104
00:06:54,709 --> 00:06:59,240
administrator rights for DP even less we

105
00:06:57,229 --> 00:07:01,399
need oh that means that after completing

106
00:06:59,240 --> 00:07:07,639
a puzzle done it for some needed and

107
00:07:01,399 --> 00:07:11,029
even less and so there is another

108
00:07:07,639 --> 00:07:13,969
limitation that's once the code is

109
00:07:11,029 --> 00:07:18,680
executed on a runtime on the environment

110
00:07:13,969 --> 00:07:21,500
of execution and so if your assembly at

111
00:07:18,680 --> 00:07:25,009
the time of execution touches upon

112
00:07:21,500 --> 00:07:28,389
different type or different a method

113
00:07:25,009 --> 00:07:31,190
that is meant for this level of access

114
00:07:28,389 --> 00:07:33,800
so then the sudden the mistake will come

115
00:07:31,190 --> 00:07:36,259
up immediately and the mistakes that

116
00:07:33,800 --> 00:07:38,649
make it can be processed somehow but

117
00:07:36,259 --> 00:07:44,750
anyway so it will come up immediately

118
00:07:38,649 --> 00:07:46,669
and so then these this terms are

119
00:07:44,750 --> 00:07:48,949
sufficient to make sure that there is a

120
00:07:46,669 --> 00:07:51,589
certain code goes in database and that

121
00:07:48,949 --> 00:07:54,289
is executed it's not the case so this

122
00:07:51,589 --> 00:07:58,399
subject with us the Seco server does the

123
00:07:54,289 --> 00:07:59,320
code and it will not do your code it

124
00:07:58,399 --> 00:08:02,410
will not aunt

125
00:07:59,320 --> 00:08:05,170
the time when until you have said to the

126
00:08:02,410 --> 00:08:07,840
sicko server that this code is a trusted

127
00:08:05,170 --> 00:08:11,140
code trustworthy code that can be done

128
00:08:07,840 --> 00:08:13,479
and so then anyone can add the code a

129
00:08:11,140 --> 00:08:15,280
code but on a single server can execute

130
00:08:13,480 --> 00:08:17,620
it but you need to tell the secret

131
00:08:15,280 --> 00:08:21,580
server it's okay you can do it it's done

132
00:08:17,620 --> 00:08:25,150
yes as the practice shows with the help

133
00:08:21,580 --> 00:08:29,109
of this option a trustworthy option

134
00:08:25,150 --> 00:08:31,570
database trustworthy in in the database

135
00:08:29,110 --> 00:08:33,159
user can put this flag this is the TEL

136
00:08:31,570 --> 00:08:36,220
secure server there's everything that's

137
00:08:33,159 --> 00:08:38,409
in this databases is trustworthy it's

138
00:08:36,220 --> 00:08:40,930
trust was it so then to execute

139
00:08:38,409 --> 00:08:43,209
everything that's inside but it's not

140
00:08:40,929 --> 00:08:46,660
the best practice even on Microsoft site

141
00:08:43,210 --> 00:08:49,900
that says please don't use this option

142
00:08:46,660 --> 00:08:52,959
for the database earnest database

143
00:08:49,900 --> 00:08:56,620
trustworthy don't trust the data that

144
00:08:52,960 --> 00:09:00,610
that anyone can change but usually

145
00:08:56,620 --> 00:09:02,860
everyone does that in this fashion so in

146
00:09:00,610 --> 00:09:05,410
order to change the parameters of set

147
00:09:02,860 --> 00:09:11,110
trustworthy as you need to have the

148
00:09:05,410 --> 00:09:13,990
rights of sysadmin sysadmin and so so

149
00:09:11,110 --> 00:09:16,120
nice to had anyone anyone the code can

150
00:09:13,990 --> 00:09:19,510
occur can add the code but Allah sees

151
00:09:16,120 --> 00:09:22,480
that men can do it it's not the case so

152
00:09:19,510 --> 00:09:25,660
there is a radical option so canceling

153
00:09:22,480 --> 00:09:28,180
all all security parameters at this

154
00:09:25,660 --> 00:09:30,880
service level you need admin rights for

155
00:09:28,180 --> 00:09:34,870
the server so kill their strict security

156
00:09:30,880 --> 00:09:37,660
kill their CL hair a strict security but

157
00:09:34,870 --> 00:09:43,360
we can add the assembly not with the

158
00:09:37,660 --> 00:09:45,000
help of certain we can always add with

159
00:09:43,360 --> 00:09:48,390
the help of an interesting mechanism

160
00:09:45,000 --> 00:09:52,000
which will allow us even in

161
00:09:48,390 --> 00:09:55,540
untrustworthy database to identify this

162
00:09:52,000 --> 00:09:58,720
assembly as a trustworthy assembly so it

163
00:09:55,540 --> 00:10:01,390
is done with the help of symmetrical key

164
00:09:58,720 --> 00:10:02,850
you create a symmetrical key so then the

165
00:10:01,390 --> 00:10:05,550
assembly and the

166
00:10:02,850 --> 00:10:08,610
a certain a unique identifier and this

167
00:10:05,550 --> 00:10:11,099
unique identifier thus on this basis we

168
00:10:08,610 --> 00:10:16,500
create a certain login and for this log

169
00:10:11,100 --> 00:10:18,990
and we had to - - we add two tools at

170
00:10:16,500 --> 00:10:22,500
all rights at all right external access

171
00:10:18,990 --> 00:10:24,449
and unsafe access access and in other

172
00:10:22,500 --> 00:10:26,850
words when our server meets this

173
00:10:24,449 --> 00:10:29,279
assembly this understands what kind of

174
00:10:26,850 --> 00:10:30,930
assembly is that understands that so

175
00:10:29,279 --> 00:10:33,540
there is a certain of a gene associated

176
00:10:30,930 --> 00:10:36,479
and due rights are there launched it no

177
00:10:33,540 --> 00:10:39,810
problem like an external access access

178
00:10:36,480 --> 00:10:43,910
to any way you want and unsafe access

179
00:10:39,810 --> 00:10:48,388
without any limitations and this is done

180
00:10:43,910 --> 00:10:52,560
as it is shown in this example so I am

181
00:10:48,389 --> 00:10:58,500
adding this code that allows to think

182
00:10:52,560 --> 00:11:02,180
Yandex pings and psycho server launches

183
00:10:58,500 --> 00:11:06,899
ping and see that it's done without any

184
00:11:02,180 --> 00:11:09,540
execution of any ambitious shell just as

185
00:11:06,899 --> 00:11:13,850
just executed it's just done but the

186
00:11:09,540 --> 00:11:15,839
basis but database is not trustworthy

187
00:11:13,850 --> 00:11:21,180
environment it's very interesting

188
00:11:15,839 --> 00:11:24,089
feature but what is happening at the

189
00:11:21,180 --> 00:11:28,920
time when we add the code and at the

190
00:11:24,089 --> 00:11:35,579
time when we do it so when we add the

191
00:11:28,920 --> 00:11:38,969
code so they create assembly out of the

192
00:11:35,579 --> 00:11:42,930
existing assembly of what we needed any

193
00:11:38,970 --> 00:11:45,540
type of undo database this this type is

194
00:11:42,930 --> 00:11:48,138
described by the program in the assembly

195
00:11:45,540 --> 00:11:51,120
and you see it does not does not

196
00:11:48,139 --> 00:11:53,880
generate any any launches it does not

197
00:11:51,120 --> 00:11:56,310
generate any up demand the creation

198
00:11:53,880 --> 00:11:59,689
nothing happens

199
00:11:56,310 --> 00:12:04,469
only only at the time when we initiate

200
00:11:59,690 --> 00:12:09,470
initiate the variable so the abdomen is

201
00:12:04,470 --> 00:12:12,650
created and then then the that it in our

202
00:12:09,470 --> 00:12:15,300
our variable is initiated which we

203
00:12:12,650 --> 00:12:18,180
determined by a code and then there is a

204
00:12:15,300 --> 00:12:20,310
small small shell code as well so then

205
00:12:18,180 --> 00:12:23,219
it launched with the rights of sacral

206
00:12:20,310 --> 00:12:25,109
server circle server's rights so the

207
00:12:23,220 --> 00:12:32,370
external access with the rights of the

208
00:12:25,110 --> 00:12:38,100
sequel server and at the same time these

209
00:12:32,370 --> 00:12:42,330
domains this domain of the assembly

210
00:12:38,100 --> 00:12:46,470
particle server application a specific

211
00:12:42,330 --> 00:12:50,490
launch occurs in the abdomen of our

212
00:12:46,470 --> 00:12:55,250
database detective database and it

213
00:12:50,490 --> 00:12:59,940
contains SQL type 2 that I created so

214
00:12:55,250 --> 00:13:01,800
malware malware assembly inside which so

215
00:12:59,940 --> 00:13:04,980
there is certain of type which I

216
00:13:01,800 --> 00:13:09,810
initiated and it connected with the

217
00:13:04,980 --> 00:13:13,020
server that Metasploit and then so I

218
00:13:09,810 --> 00:13:16,079
need to point out that any addition of

219
00:13:13,020 --> 00:13:19,350
assemblies have been loaded and they are

220
00:13:16,080 --> 00:13:23,040
on the disk and descale type and no path

221
00:13:19,350 --> 00:13:26,760
right because psycho server when they

222
00:13:23,040 --> 00:13:29,390
went create assembly at this time when

223
00:13:26,760 --> 00:13:33,300
it creates assembly

224
00:13:29,390 --> 00:13:37,319
it adds the data from from this assembly

225
00:13:33,300 --> 00:13:38,630
- - to its database and never comes back

226
00:13:37,320 --> 00:13:42,370
to this file

227
00:13:38,630 --> 00:13:45,560
and then the the the consequent the

228
00:13:42,370 --> 00:13:48,490
consequent load is done by the order of

229
00:13:45,560 --> 00:13:51,649
assembly alone that's it so it's done

230
00:13:48,490 --> 00:13:55,100
it's done a PowerShell scripts those who

231
00:13:51,649 --> 00:13:57,500
write viruses and they use very often

232
00:13:55,100 --> 00:13:59,569
that's why we cannot determine where it

233
00:13:57,500 --> 00:14:05,990
where it says well since this

234
00:13:59,569 --> 00:14:11,319
potentially malware assembly and then we

235
00:14:05,990 --> 00:14:14,709
need to and then we need to point out

236
00:14:11,319 --> 00:14:18,819
all these limitations and restrictions

237
00:14:14,709 --> 00:14:23,719
existing that a check database checks

238
00:14:18,819 --> 00:14:26,599
and code checks so they all probably

239
00:14:23,720 --> 00:14:31,370
work well they protect I believe it but

240
00:14:26,600 --> 00:14:34,130
not do not not always as as we as we see

241
00:14:31,370 --> 00:14:36,319
as we see as a monitoring specialist

242
00:14:34,130 --> 00:14:38,750
telling you the people don't use it

243
00:14:36,319 --> 00:14:42,769
people don't use them so there are lots

244
00:14:38,750 --> 00:14:47,389
of different servers which have similar

245
00:14:42,769 --> 00:14:50,360
samplers and so then the database is

246
00:14:47,389 --> 00:14:53,750
less trustworthy pointed out the 1s

247
00:14:50,360 --> 00:14:56,959
servers also identified as such and then

248
00:14:53,750 --> 00:14:59,930
here is named log so then that last

249
00:14:56,959 --> 00:15:02,209
version of assistance sa configuration

250
00:14:59,930 --> 00:15:04,550
manager the most recent version what

251
00:15:02,209 --> 00:15:09,829
does that it identified databases of

252
00:15:04,550 --> 00:15:11,029
psycho server as GCM as trustworthy and

253
00:15:09,829 --> 00:15:14,420
everything that's inside

254
00:15:11,029 --> 00:15:20,110
what's Putin there from all computer is

255
00:15:14,420 --> 00:15:24,560
trustworthy for SCCM and allows to use

256
00:15:20,110 --> 00:15:28,220
tailored for psycho server in accordance

257
00:15:24,560 --> 00:15:31,579
with the relevant SCCM but this green

258
00:15:28,220 --> 00:15:35,180
the killer from Microsoft scientists one

259
00:15:31,579 --> 00:15:38,810
click to link don't you set trustworthy

260
00:15:35,180 --> 00:15:45,010
please they're using attend you

261
00:15:38,810 --> 00:15:45,010
in other words as a huge enterprise

262
00:15:46,300 --> 00:15:53,740
businesses have this big risks running

263
00:15:53,770 --> 00:16:03,680
insist but they recommend strongly to

264
00:15:56,570 --> 00:16:05,960
their evalee those risks important part

265
00:16:03,680 --> 00:16:09,319
of everything how to monitor it all you

266
00:16:05,960 --> 00:16:13,180
have to wash it off and it's true that

267
00:16:09,320 --> 00:16:15,440
there are some means an SQL server audit

268
00:16:13,180 --> 00:16:19,430
that can be tuned

269
00:16:15,440 --> 00:16:22,250
unlike the monitoring of the XPS Center

270
00:16:19,430 --> 00:16:25,160
shell which is a server object so we

271
00:16:22,250 --> 00:16:29,330
need to monitor all databases all

272
00:16:25,160 --> 00:16:33,110
databases and that we have to have to

273
00:16:29,330 --> 00:16:38,540
reconcile with it that's the way to do

274
00:16:33,110 --> 00:16:42,080
it we in my opinion SQL server audit

275
00:16:38,540 --> 00:16:46,880
does not allow to properly monitor what

276
00:16:42,080 --> 00:16:48,770
we want to monitor yes it shows us so

277
00:16:46,880 --> 00:16:51,710
the tables at the time of the creation

278
00:16:48,770 --> 00:16:54,260
of assembly at the moment of the up

279
00:16:51,710 --> 00:16:57,560
demand creation the time of creation of

280
00:16:54,260 --> 00:17:00,710
the abdomen domain so they it shows but

281
00:16:57,560 --> 00:17:05,450
it's not enough it's a very curtail and

282
00:17:00,710 --> 00:17:08,990
as I was saying eSATA monitor procedures

283
00:17:05,450 --> 00:17:11,900
makes no sense because instead of

284
00:17:08,990 --> 00:17:14,810
procedure can create a trigger which

285
00:17:11,900 --> 00:17:19,190
will contain shellcode method better and

286
00:17:14,810 --> 00:17:22,730
so this way in in my database if I had

287
00:17:19,190 --> 00:17:26,270
added this one one line and shell code

288
00:17:22,730 --> 00:17:28,610
immediately I was triggered without any

289
00:17:26,270 --> 00:17:31,580
procedures there is another method so

290
00:17:28,610 --> 00:17:35,050
there is a method of dynamic cutter

291
00:17:31,580 --> 00:17:38,750
catalogs or representation so we can

292
00:17:35,050 --> 00:17:42,870
dynamic management views so then the

293
00:17:38,750 --> 00:17:47,610
association associated the sample

294
00:17:42,870 --> 00:17:49,979
on the SQL server very convenient we can

295
00:17:47,610 --> 00:17:53,310
set up triggers that will provide

296
00:17:49,980 --> 00:17:56,760
certain information that is difficult

297
00:17:53,310 --> 00:18:00,720
moreover it is done at the same server

298
00:17:56,760 --> 00:18:03,210
that we monitor but if if a case

299
00:18:00,720 --> 00:18:09,570
miscreant has an access to that as

300
00:18:03,210 --> 00:18:12,830
possible then another method cql Server

301
00:18:09,570 --> 00:18:15,629
profiler that is called excel event

302
00:18:12,830 --> 00:18:18,480
modern version so there isn't a catalog

303
00:18:15,630 --> 00:18:21,150
for events assembly alone and then you

304
00:18:18,480 --> 00:18:21,720
can see that here what so there's a

305
00:18:21,150 --> 00:18:27,090
problem

306
00:18:21,720 --> 00:18:30,450
SQL type is malware assembly it uploaded

307
00:18:27,090 --> 00:18:34,110
and it had loaded and then there is a

308
00:18:30,450 --> 00:18:38,880
subtlety it goes into a text log or it

309
00:18:34,110 --> 00:18:41,459
goes into a separate table so the

310
00:18:38,880 --> 00:18:44,340
disinformation again in within the

311
00:18:41,460 --> 00:18:46,860
framework of one single server which is

312
00:18:44,340 --> 00:18:51,929
not reliable in my view that's why I

313
00:18:46,860 --> 00:18:55,320
would recommend to use so then outside

314
00:18:51,930 --> 00:18:57,810
utilities with the help of size month

315
00:18:55,320 --> 00:19:01,320
you can do the monitoring of the load

316
00:18:57,810 --> 00:19:05,929
whole libraries this month cannot tell

317
00:19:01,320 --> 00:19:10,169
us when this this assembly load is used

318
00:19:05,930 --> 00:19:13,590
and what at what time because it cannot

319
00:19:10,170 --> 00:19:15,960
work with Kol see how her are see how

320
00:19:13,590 --> 00:19:18,810
hard and that's about there so during

321
00:19:15,960 --> 00:19:20,520
the assembly so this counter check when

322
00:19:18,810 --> 00:19:23,490
during the execution of the part of

323
00:19:20,520 --> 00:19:25,770
runtime and from sequel server at the

324
00:19:23,490 --> 00:19:28,880
time at the time was worth one Edition

325
00:19:25,770 --> 00:19:33,540
took place so the assembly check the PP

326
00:19:28,880 --> 00:19:36,840
PP verify is done and if if it I'll oh

327
00:19:33,540 --> 00:19:40,710
it lost be verified Adel then the circle

328
00:19:36,840 --> 00:19:42,600
server has had certain assembly attitude

329
00:19:40,710 --> 00:19:43,440
so what's going to happen to it we don't

330
00:19:42,600 --> 00:19:46,649
know

331
00:19:43,440 --> 00:19:49,270
happens only when they're certain and

332
00:19:46,650 --> 00:19:52,300
trustworthy assembly is that it because

333
00:19:49,270 --> 00:19:54,790
all trustworthy assembly signed by

334
00:19:52,300 --> 00:19:57,510
Microsoft they don't generate such event

335
00:19:54,790 --> 00:20:01,950
and that is why

336
00:19:57,510 --> 00:20:05,020
and once the up domain appears and

337
00:20:01,950 --> 00:20:07,360
everything is up and running we see that

338
00:20:05,020 --> 00:20:11,920
the circle server besides everything

339
00:20:07,360 --> 00:20:14,560
just loads additional assemblies so from

340
00:20:11,920 --> 00:20:18,670
the dotnet environment so there the

341
00:20:14,560 --> 00:20:21,490
system transactions for example and so

342
00:20:18,670 --> 00:20:23,260
we shoot money to or such things it's

343
00:20:21,490 --> 00:20:29,170
not difficult if you have access to the

344
00:20:23,260 --> 00:20:35,580
Seco server just see what happened or or

345
00:20:29,170 --> 00:20:37,900
you can use so then other socks then

346
00:20:35,580 --> 00:20:40,389
third-party applications that can

347
00:20:37,900 --> 00:20:43,930
monitor all this you can make use of

348
00:20:40,390 --> 00:20:47,700
them so your third party cell and this

349
00:20:43,930 --> 00:20:51,520
I'd like to summarize as in order to

350
00:20:47,700 --> 00:20:53,410
launch the code to run your code to run

351
00:20:51,520 --> 00:20:57,580
you don't have to be the database

352
00:20:53,410 --> 00:21:00,940
administrator so moreover you can go

353
00:20:57,580 --> 00:21:04,510
around it and another kind of create

354
00:21:00,940 --> 00:21:10,810
ourselves but alter assembly to change

355
00:21:04,510 --> 00:21:13,810
the existing assembly and and so it's a

356
00:21:10,810 --> 00:21:17,710
scary but it's great because I have to

357
00:21:13,810 --> 00:21:22,270
do is you have to be you have to be

358
00:21:17,710 --> 00:21:23,670
database admin to to to run to run your

359
00:21:22,270 --> 00:21:27,780
code you don't

360
00:21:23,670 --> 00:21:30,690
it's great at the same time so the times

361
00:21:27,780 --> 00:21:33,270
when the monitor only SPC and the share

362
00:21:30,690 --> 00:21:36,000
the server objects they're gone so then

363
00:21:33,270 --> 00:21:38,580
they need to monitor all databases that

364
00:21:36,000 --> 00:21:41,720
are in the application that's my opinion

365
00:21:38,580 --> 00:21:47,750
and I think that's correct

366
00:21:41,720 --> 00:21:51,060
try to find the to stock tank databases

367
00:21:47,750 --> 00:21:55,350
in your infrastructure to see that have

368
00:21:51,060 --> 00:21:56,429
been flagged as trustworthy I just

369
00:21:55,350 --> 00:22:00,179
watched them closely

370
00:21:56,430 --> 00:22:03,440
and they're so thank you thank you for

371
00:22:00,180 --> 00:22:03,440
coming questions

372
00:22:12,190 --> 00:22:18,080
short question concerning the method

373
00:22:15,309 --> 00:22:21,350
that as you said you don't have to do

374
00:22:18,080 --> 00:22:24,740
trustworthy and allow the doing the code

375
00:22:21,350 --> 00:22:26,540
through the user creation and the so you

376
00:22:24,740 --> 00:22:29,660
create the kiai how to read the user

377
00:22:26,540 --> 00:22:34,220
what rights do they require they don't

378
00:22:29,660 --> 00:22:36,380
require any rights and after that men of

379
00:22:34,220 --> 00:22:40,160
sicko server so they're quite high the

380
00:22:36,380 --> 00:22:49,250
clearance aside but but it's not server

381
00:22:40,160 --> 00:22:53,960
admin the what how often so then if in

382
00:22:49,250 --> 00:22:56,350
case of compromising it may happen how

383
00:22:53,960 --> 00:23:00,559
often you come across how many users

384
00:22:56,350 --> 00:23:02,530
with high with high rights to to use

385
00:23:00,559 --> 00:23:05,570
keys but they are not seasoned minsum

386
00:23:02,530 --> 00:23:08,330
have what they use the keys although

387
00:23:05,570 --> 00:23:11,139
they are not the administrator as a

388
00:23:08,330 --> 00:23:13,120
specialist for monitoring in my practice

389
00:23:11,140 --> 00:23:15,140
unfortunately it happens quite often

390
00:23:13,120 --> 00:23:17,870
because unfortunately this very

391
00:23:15,140 --> 00:23:19,940
convenient had to give this the the

392
00:23:17,870 --> 00:23:24,800
admin server to give it that means

393
00:23:19,940 --> 00:23:26,179
server and they so then they can give

394
00:23:24,800 --> 00:23:28,760
this main server

395
00:23:26,179 --> 00:23:32,530
even for the computer so that this is

396
00:23:28,760 --> 00:23:32,530
unfortunate here unfortunate

397
00:23:39,279 --> 00:23:45,500
and then you said where is this

398
00:23:42,129 --> 00:23:48,350
equipment comes and so then so this

399
00:23:45,500 --> 00:23:53,080
approach is quite straight a widely

400
00:23:48,350 --> 00:23:57,350
spread the sequel server 2005 and

401
00:23:53,080 --> 00:23:59,480
moreover such things exist in Metasploit

402
00:23:57,350 --> 00:24:04,070
even they're not very popular but

403
00:23:59,480 --> 00:24:07,549
they're there Metasploit and powerup SQL

404
00:24:04,070 --> 00:24:11,799
but but all practical implementations

405
00:24:07,549 --> 00:24:15,139
they use the creations of malware

406
00:24:11,799 --> 00:24:16,940
assemblies that do the procedures and

407
00:24:15,139 --> 00:24:19,100
there is why so all these things that

408
00:24:16,940 --> 00:24:22,000
have been accumulated from XP and the

409
00:24:19,100 --> 00:24:25,059
shell the kind of work there because

410
00:24:22,000 --> 00:24:30,070
because it's a very popular instruments

411
00:24:25,059 --> 00:24:32,360
and they so they do only the malware

412
00:24:30,070 --> 00:24:35,509
procedures they can't do the malware

413
00:24:32,360 --> 00:24:40,610
type only the procedure and so that's

414
00:24:35,509 --> 00:24:42,830
why this idea is not new in Secret

415
00:24:40,610 --> 00:24:45,139
Service it appeared to this opportunity

416
00:24:42,830 --> 00:24:48,350
2005 it was even easier there was no

417
00:24:45,139 --> 00:24:52,918
option of strict security any added

418
00:24:48,350 --> 00:24:58,899
assembly could be malware and

419
00:24:52,919 --> 00:25:03,729
it's nothing that we should fight and

420
00:24:58,899 --> 00:25:06,178
it's August or or and it's applied so

421
00:25:03,729 --> 00:25:09,129
that's a very good method of persistence

422
00:25:06,179 --> 00:25:11,949
records backup of the database and

423
00:25:09,129 --> 00:25:14,309
turning it around and deploying it and

424
00:25:11,949 --> 00:25:17,349
so we have the same kind of assembling

425
00:25:14,309 --> 00:25:26,559
and it will be launched between the two

426
00:25:17,349 --> 00:25:29,198
run it will run so question I have a

427
00:25:26,559 --> 00:25:31,539
question if my application and DP does

428
00:25:29,199 --> 00:25:34,839
not use those assemblies can I just

429
00:25:31,539 --> 00:25:39,549
switch off the remove the opportunity to

430
00:25:34,839 --> 00:25:45,369
to do by default certainly it's a oh but

431
00:25:39,549 --> 00:25:50,469
if you install the database it will be

432
00:25:45,369 --> 00:25:51,418
on if your installed exchange in some

433
00:25:50,469 --> 00:25:54,309
cases

434
00:25:51,419 --> 00:25:55,139
so everything that use integration

435
00:25:54,309 --> 00:25:58,359
services

436
00:25:55,139 --> 00:26:04,928
Microsoft has this technology the DB

437
00:25:58,359 --> 00:26:13,499
will be using Kor and Kor functionality

438
00:26:04,929 --> 00:26:15,489
can be discouraged off other questions

439
00:26:13,499 --> 00:26:18,239
Thank You Alexander for your

440
00:26:15,489 --> 00:26:18,239
presentations

