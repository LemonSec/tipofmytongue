1
00:00:00,120 --> 00:00:06,060
yes in disguise Oprah I will talk about

2
00:00:02,939 --> 00:00:08,490
the Android applications vulnerabilities

3
00:00:06,060 --> 00:00:13,349
what I mean when the realtors are quite

4
00:00:08,490 --> 00:00:16,560
easy but the specialists there often

5
00:00:13,349 --> 00:00:19,590
they they ignore their analysis and

6
00:00:16,560 --> 00:00:21,689
that's putting flags so then they just

7
00:00:19,590 --> 00:00:24,689
browse them and they don't go into

8
00:00:21,689 --> 00:00:28,980
detail that is why I wrote I will just

9
00:00:24,689 --> 00:00:31,410
it's kind of workshop lecture and so you

10
00:00:28,980 --> 00:00:34,469
later can take this presentation and do

11
00:00:31,410 --> 00:00:36,329
the same steps that were going to do so

12
00:00:34,469 --> 00:00:44,149
we can just follow the same steps that I

13
00:00:36,329 --> 00:00:44,149
will I will follow then let's do it

14
00:00:54,980 --> 00:01:02,209
I'm from alarm company I and I analyze

15
00:00:58,850 --> 00:01:12,290
vulnerability of applications and mobile

16
00:01:02,210 --> 00:01:15,770
Wi-Fi and I do everything channel where

17
00:01:12,290 --> 00:01:18,799
you can always publish my materials and

18
00:01:15,770 --> 00:01:22,610
I talk there about the applications

19
00:01:18,799 --> 00:01:24,619
security vulnerabilities applications

20
00:01:22,610 --> 00:01:27,380
because I'm security specialist I can

21
00:01:24,619 --> 00:01:30,399
always visit visit my site and see so

22
00:01:27,380 --> 00:01:34,100
we'll talk about two vulnerabilities

23
00:01:30,399 --> 00:01:37,940
which is application debuggable and

24
00:01:34,100 --> 00:01:40,699
Android backup vulnerability hmm

25
00:01:37,940 --> 00:01:42,590
and so those who are familiar with this

26
00:01:40,700 --> 00:01:45,380
they may think that there is not nothing

27
00:01:42,590 --> 00:01:47,690
special there but I think that certainly

28
00:01:45,380 --> 00:01:50,679
you still can learn something from it

29
00:01:47,690 --> 00:01:56,959
so first we'll talk about debuggable

30
00:01:50,679 --> 00:02:01,390
application debuggable and because the

31
00:01:56,959 --> 00:02:04,340
main the main challenge so there are

32
00:02:01,390 --> 00:02:08,720
fairly simple to understand owner

33
00:02:04,340 --> 00:02:11,480
ability but not not not the easiest to

34
00:02:08,720 --> 00:02:14,770
exploit and analyze yes it's a high risk

35
00:02:11,480 --> 00:02:18,379
they just flag it and this is it and

36
00:02:14,770 --> 00:02:20,239
this is what I talk about when it to

37
00:02:18,379 --> 00:02:25,819
analyze what can be done with the help

38
00:02:20,239 --> 00:02:29,150
of debuggable approach and if there is a

39
00:02:25,819 --> 00:02:32,988
danger then we need to talk about that

40
00:02:29,150 --> 00:02:35,569
but but here we'll talk how to do now to

41
00:02:32,989 --> 00:02:41,300
look at it how to change it improve it

42
00:02:35,569 --> 00:02:43,350
and how to properly unit and so then the

43
00:02:41,300 --> 00:02:45,810
specialists they just say that this

44
00:02:43,350 --> 00:02:48,329
vulnerability there is a flag red flag

45
00:02:45,810 --> 00:02:50,850
so then the analysis is not done

46
00:02:48,330 --> 00:02:53,240
properly of the application and that is

47
00:02:50,850 --> 00:02:57,269
why we need just to follow up on that

48
00:02:53,240 --> 00:03:00,050
and so this slide is for those who want

49
00:02:57,270 --> 00:03:06,690
to work on it with Android applications

50
00:03:00,050 --> 00:03:08,130
and and so there are instruments so

51
00:03:06,690 --> 00:03:13,760
there are lots of it because for example

52
00:03:08,130 --> 00:03:16,620
Android studio can can do a lot but this

53
00:03:13,760 --> 00:03:19,920
presentation tells you about the

54
00:03:16,620 --> 00:03:22,380
instrumentation set and a very popular

55
00:03:19,920 --> 00:03:28,670
good good good list of the proper

56
00:03:22,380 --> 00:03:33,109
instruments then so we'll check it on

57
00:03:28,670 --> 00:03:35,579
execute Bank developed by a secure bank

58
00:03:33,110 --> 00:03:37,110
developed by one of the specialists and

59
00:03:35,580 --> 00:03:40,770
so he developed this a wonderful

60
00:03:37,110 --> 00:03:43,470
application to secure insecure Bank -

61
00:03:40,770 --> 00:03:47,700
that has the banking interface password

62
00:03:43,470 --> 00:03:50,280
parole server and so transactions are

63
00:03:47,700 --> 00:03:53,250
stored there and so then there are other

64
00:03:50,280 --> 00:03:56,640
things in this app insecure bank and

65
00:03:53,250 --> 00:03:59,160
that could be easily applied in and so

66
00:03:56,640 --> 00:04:01,799
if even you know you can you can even

67
00:03:59,160 --> 00:04:04,079
just try to play with it because it's

68
00:04:01,800 --> 00:04:07,140
it's a good learning device so I can

69
00:04:04,080 --> 00:04:09,870
just learn a lot and so you can just do

70
00:04:07,140 --> 00:04:12,329
a lot and learn a lot using this

71
00:04:09,870 --> 00:04:14,250
application so then there are some other

72
00:04:12,330 --> 00:04:17,280
there is another application which

73
00:04:14,250 --> 00:04:20,160
describes many applications so let's

74
00:04:17,279 --> 00:04:21,510
talk about the so debugging of this

75
00:04:20,160 --> 00:04:23,510
application

76
00:04:21,510 --> 00:04:26,150
[Music]

77
00:04:23,510 --> 00:04:30,800
so what is debuggable application

78
00:04:26,150 --> 00:04:34,070
debuggable I think that everyone knows

79
00:04:30,800 --> 00:04:37,130
so we can somehow they do the process

80
00:04:34,070 --> 00:04:39,469
command by command and Android provides

81
00:04:37,130 --> 00:04:42,500
a debugger that allows to do the

82
00:04:39,470 --> 00:04:43,690
following and you can see that on the

83
00:04:42,500 --> 00:04:48,920
slide

84
00:04:43,690 --> 00:04:52,040
gerrae Kotlin and CC plus code set

85
00:04:48,920 --> 00:04:55,820
breakpoints that examine variables and

86
00:04:52,040 --> 00:04:59,570
evaluate expressionism why is it

87
00:04:55,820 --> 00:05:03,050
dangerous because I will explain why

88
00:04:59,570 --> 00:05:06,710
it's it's really dangerous because

89
00:05:03,050 --> 00:05:09,980
because if you do the debug on your

90
00:05:06,710 --> 00:05:14,989
application on your cell phone because

91
00:05:09,980 --> 00:05:21,260
you can have just a similar rights to

92
00:05:14,990 --> 00:05:26,030
this application so then and so a

93
00:05:21,260 --> 00:05:28,340
specialist who will get your cell phone

94
00:05:26,030 --> 00:05:29,719
can can I can't manipulate the

95
00:05:28,340 --> 00:05:33,200
environment settings of the application

96
00:05:29,720 --> 00:05:36,230
gain access to the information stored in

97
00:05:33,200 --> 00:05:40,039
the application and and get lots of

98
00:05:36,230 --> 00:05:43,970
information from this application on

99
00:05:40,040 --> 00:05:47,270
Android not not not all models and some

100
00:05:43,970 --> 00:05:49,610
some models opposition differently and

101
00:05:47,270 --> 00:05:51,770
so they say it's not possible and so a

102
00:05:49,610 --> 00:05:55,160
fixed it we can go around the blockings

103
00:05:51,770 --> 00:05:57,799
etc and it is much more difficult to the

104
00:05:55,160 --> 00:06:00,710
same application that does not have

105
00:05:57,800 --> 00:06:03,530
debug mode enabled since you must have

106
00:06:00,710 --> 00:06:06,109
root access in some Android devices

107
00:06:03,530 --> 00:06:08,919
getting root access is difficult and so

108
00:06:06,110 --> 00:06:13,070
we need to describe this support yeah

109
00:06:08,920 --> 00:06:17,690
and then the user who solve his cell

110
00:06:13,070 --> 00:06:20,480
phone so can can actually if it's in the

111
00:06:17,690 --> 00:06:23,080
hands of a professional so I can make

112
00:06:20,480 --> 00:06:28,940
sure that no information can be

113
00:06:23,080 --> 00:06:32,359
extracted from this cell phone so how we

114
00:06:28,940 --> 00:06:38,060
do it then that's in this application

115
00:06:32,360 --> 00:06:39,620
first let's talk about how to determine

116
00:06:38,060 --> 00:06:42,440
that there's an application is

117
00:06:39,620 --> 00:06:43,070
debuggable so arrow the commands for

118
00:06:42,440 --> 00:06:45,290
consult

119
00:06:43,070 --> 00:06:48,320
I wrote this commands for consult and

120
00:06:45,290 --> 00:06:52,550
file manifest all information is there

121
00:06:48,320 --> 00:06:57,400
for proper tuning of the application so

122
00:06:52,550 --> 00:07:00,260
then we can unpack application apk epoch

123
00:06:57,400 --> 00:07:01,690
then with the help of grep will find

124
00:07:00,260 --> 00:07:04,900
debuggable

125
00:07:01,690 --> 00:07:08,990
which which is in the tag application

126
00:07:04,900 --> 00:07:14,510
and and then so it means that it can be

127
00:07:08,990 --> 00:07:16,640
tunable if it has this point then let's

128
00:07:14,510 --> 00:07:20,690
see what what can be what can be done in

129
00:07:16,640 --> 00:07:25,099
this application and we have different

130
00:07:20,690 --> 00:07:28,210
solutions but the they were not of

131
00:07:25,100 --> 00:07:30,440
interest to me and I developed my own

132
00:07:28,210 --> 00:07:34,820
application can use different resources

133
00:07:30,440 --> 00:07:39,400
layouts and I developed this example how

134
00:07:34,820 --> 00:07:41,810
can get the password from the root time

135
00:07:39,400 --> 00:07:43,219
so after you have to bring a brief

136
00:07:41,810 --> 00:07:46,010
analysis of the application you can

137
00:07:43,220 --> 00:07:49,160
understand that that it can feel in the

138
00:07:46,010 --> 00:07:52,010
credential fields automatically if they

139
00:07:49,160 --> 00:07:54,080
have already been developed

140
00:07:52,010 --> 00:07:56,659
and then and then they they get the

141
00:07:54,080 --> 00:07:59,300
legging and and password and send them

142
00:07:56,660 --> 00:08:02,380
to the server and so then the

143
00:07:59,300 --> 00:08:05,630
application when you authorized it once

144
00:08:02,380 --> 00:08:07,610
authenticated and then you get during

145
00:08:05,630 --> 00:08:10,610
your session you can't continue to work

146
00:08:07,610 --> 00:08:13,910
so this is the session cannot be dragged

147
00:08:10,610 --> 00:08:16,280
out so it should be encrypted but it can

148
00:08:13,910 --> 00:08:19,910
be decrypted and sent to the server and

149
00:08:16,280 --> 00:08:21,909
this is the same so then share

150
00:08:19,910 --> 00:08:25,610
preference files they being scripted

151
00:08:21,910 --> 00:08:27,830
password is there and a certain runtime

152
00:08:25,610 --> 00:08:29,750
it's okay without root because not

153
00:08:27,830 --> 00:08:31,969
everyone will take it out information

154
00:08:29,750 --> 00:08:35,600
about the but the press work and then we

155
00:08:31,970 --> 00:08:41,740
can transfer the help of tuning we can

156
00:08:35,600 --> 00:08:47,750
do it so then you can see the function

157
00:08:41,740 --> 00:08:51,470
code analysis how to how to properly so

158
00:08:47,750 --> 00:08:53,540
break break this break the password so

159
00:08:51,470 --> 00:08:56,150
after examining the activity which is

160
00:08:53,540 --> 00:09:00,020
responsible for the login page we can

161
00:08:56,150 --> 00:09:02,209
find so this field data function and if

162
00:09:00,020 --> 00:09:04,340
you can see that at some point the

163
00:09:02,210 --> 00:09:07,880
corrupted password is put into a

164
00:09:04,340 --> 00:09:10,730
variable and can stored in it and this

165
00:09:07,880 --> 00:09:12,950
means that we can monitor the state of

166
00:09:10,730 --> 00:09:19,430
the variable and Yakuts value when

167
00:09:12,950 --> 00:09:22,500
debugging and you can easily and that

168
00:09:19,430 --> 00:09:26,670
might take a lot of time

169
00:09:22,500 --> 00:09:30,630
and so how did logging how to how to

170
00:09:26,670 --> 00:09:33,150
connect or debugging so this is very

171
00:09:30,630 --> 00:09:35,520
important so not too how to connect it

172
00:09:33,150 --> 00:09:38,040
as you can see how it's done so there

173
00:09:35,520 --> 00:09:42,000
are different ways of debugging so then

174
00:09:38,040 --> 00:09:45,329
GDP that is is the best means and then

175
00:09:42,000 --> 00:09:47,700
GDP and then then other paths Android

176
00:09:45,330 --> 00:09:53,700
studio can be tuned up attitudinal as

177
00:09:47,700 --> 00:09:55,950
well this use j DP 0 and and so here you

178
00:09:53,700 --> 00:10:00,360
will find the first line is that the

179
00:09:55,950 --> 00:10:03,240
process that is is performed and we know

180
00:10:00,360 --> 00:10:08,970
that it's it is debuggable a so then

181
00:10:03,240 --> 00:10:13,770
common command draw it so that 4 to 7 7

182
00:10:08,970 --> 00:10:17,550
J DWP and with the help of j DP protocol

183
00:10:13,770 --> 00:10:19,050
and Java debugging protocol and with the

184
00:10:17,550 --> 00:10:22,890
help of this protocol they to connect

185
00:10:19,050 --> 00:10:29,160
this process can start sending commands

186
00:10:22,890 --> 00:10:34,800
and to debug then so then then the

187
00:10:29,160 --> 00:10:38,100
before the port JDP protocol process and

188
00:10:34,800 --> 00:10:40,859
connect with the help of GDP JDP attach

189
00:10:38,100 --> 00:10:42,600
local host host and you can see this

190
00:10:40,860 --> 00:10:49,130
picture so it means that you

191
00:10:42,600 --> 00:10:49,130
successfully connected then

192
00:10:49,520 --> 00:10:56,040
so there are lots of lots of commands so

193
00:10:53,550 --> 00:10:58,140
what can be done in GDP I will tell you

194
00:10:56,040 --> 00:11:00,449
only so that what we can do with the

195
00:10:58,140 --> 00:11:03,150
help of GDP so can work with the

196
00:11:00,450 --> 00:11:06,360
debugger and now debugger has a number

197
00:11:03,150 --> 00:11:10,740
of commands and some commands a very

198
00:11:06,360 --> 00:11:14,850
convenient so come Android since if your

199
00:11:10,740 --> 00:11:17,070
bank - okay so getting on on the results

200
00:11:14,850 --> 00:11:20,760
in the run times you can find your own

201
00:11:17,070 --> 00:11:24,210
your own part that is responsible for

202
00:11:20,760 --> 00:11:30,360
your own function field data and so this

203
00:11:24,210 --> 00:11:35,460
list is command is and then the output

204
00:11:30,360 --> 00:11:38,010
is quite quite considerable that we

205
00:11:35,460 --> 00:11:41,070
found the class that responsible for the

206
00:11:38,010 --> 00:11:44,640
method of field data field data then we

207
00:11:41,070 --> 00:11:47,130
see method class has identified that we

208
00:11:44,640 --> 00:11:49,350
need to tune top debug and we find that

209
00:11:47,130 --> 00:11:52,560
there is method method is there and then

210
00:11:49,350 --> 00:11:56,279
we can do the breakpoint breakpoint for

211
00:11:52,560 --> 00:11:59,130
this method and then then order 23 stop

212
00:11:56,279 --> 00:12:01,730
in class method so this is the command

213
00:11:59,130 --> 00:12:04,980
so when you when you when you get this

214
00:12:01,730 --> 00:12:08,820
in runtime so we can always restore it

215
00:12:04,980 --> 00:12:12,959
and slowly debug it and look where the

216
00:12:08,820 --> 00:12:16,260
fluid the password is is decrypted and

217
00:12:12,959 --> 00:12:19,650
and try to drag it out so we press this

218
00:12:16,260 --> 00:12:25,770
button so it just goes down to

219
00:12:19,650 --> 00:12:28,800
breakpoint age IT so thread may mean and

220
00:12:25,770 --> 00:12:33,230
then you can always put the Java and

221
00:12:28,800 --> 00:12:33,229
commands list you can see where you are

222
00:12:34,610 --> 00:12:43,490
and then available mechanisms available

223
00:12:39,589 --> 00:12:48,529
debugging commands first itself

224
00:12:43,490 --> 00:12:50,959
continue continue continue yes after the

225
00:12:48,529 --> 00:12:53,660
break point then step execute the

226
00:12:50,959 --> 00:12:55,729
current line stop at the method entry

227
00:12:53,660 --> 00:13:00,529
and so then step by step command by

228
00:12:55,730 --> 00:13:03,290
command then it goes into the functions

229
00:13:00,529 --> 00:13:04,970
this process then it goes inside the

230
00:13:03,290 --> 00:13:08,689
function and start to look for the

231
00:13:04,970 --> 00:13:10,249
password so next allow us to do the

232
00:13:08,689 --> 00:13:13,339
function in one step

233
00:13:10,249 --> 00:13:16,759
executes the current line so then you

234
00:13:13,339 --> 00:13:21,079
can just reference data extraction that

235
00:13:16,759 --> 00:13:23,360
next can just do not stop at the method

236
00:13:21,079 --> 00:13:26,149
entry and then another for looking

237
00:13:23,360 --> 00:13:28,819
possible for the password is local local

238
00:13:26,149 --> 00:13:31,100
so give print the values of all

239
00:13:28,819 --> 00:13:33,378
variables local pair to the current

240
00:13:31,100 --> 00:13:35,720
method and so on you can see them and

241
00:13:33,379 --> 00:13:39,079
even change them so then there is a

242
00:13:35,720 --> 00:13:43,269
function of set but it can change the

243
00:13:39,079 --> 00:13:47,118
value of our variables as well a yuta

244
00:13:43,269 --> 00:13:50,269
detectors are feeding etc but it's quite

245
00:13:47,119 --> 00:13:52,670
difficult but but for debugging is this

246
00:13:50,269 --> 00:13:56,600
one is quite easy and this is the

247
00:13:52,670 --> 00:13:59,299
results so the locals command that shows

248
00:13:56,600 --> 00:14:02,959
all variables and at the certain point

249
00:13:59,299 --> 00:14:04,699
in time so I did several next and I show

250
00:14:02,959 --> 00:14:07,579
that there is a there is a password open

251
00:14:04,699 --> 00:14:12,618
password that I got in this application

252
00:14:07,579 --> 00:14:16,160
that could be debugged then this is this

253
00:14:12,619 --> 00:14:18,290
is the indicator that it's applicable in

254
00:14:16,160 --> 00:14:20,899
this application so then debugging is

255
00:14:18,290 --> 00:14:23,779
applicable to this application so then

256
00:14:20,899 --> 00:14:26,019
Joe tack that leaves five minutes and it

257
00:14:23,779 --> 00:14:29,389
can just drag it out of the help of

258
00:14:26,019 --> 00:14:31,939
debugging at this and no need just to do

259
00:14:29,389 --> 00:14:33,520
that because it's easy to kill this

260
00:14:31,939 --> 00:14:36,699
application

261
00:14:33,520 --> 00:14:40,600
and he says this is what we talk when we

262
00:14:36,700 --> 00:14:43,810
do the debugging and then for this

263
00:14:40,600 --> 00:14:45,940
passion is what security specialists

264
00:14:43,810 --> 00:14:49,029
when they just to take more effort to

265
00:14:45,940 --> 00:14:51,220
debug applications and for developers

266
00:14:49,029 --> 00:14:53,589
you need is the body because when you

267
00:14:51,220 --> 00:14:56,700
when you develop the code you need to

268
00:14:53,589 --> 00:14:59,260
use the different different different

269
00:14:56,700 --> 00:15:02,020
methods of development so they're not

270
00:14:59,260 --> 00:15:05,350
for debugging for releases you need to

271
00:15:02,020 --> 00:15:08,529
do this debugging and can be able just

272
00:15:05,350 --> 00:15:10,120
to provide both those variants and to

273
00:15:08,529 --> 00:15:19,720
confirm the availability of this

274
00:15:10,120 --> 00:15:22,630
opportunity demonstrated now backup by

275
00:15:19,720 --> 00:15:25,600
capping let's talk about the cups and

276
00:15:22,630 --> 00:15:31,350
the so those who don't know what Android

277
00:15:25,600 --> 00:15:31,350
is it might be very interesting for him

278
00:15:32,459 --> 00:15:42,399
so what is back up where the how

279
00:15:37,660 --> 00:15:52,959
dangerous it can be and how prevalent it

280
00:15:42,399 --> 00:15:56,500
is so what goes into the backup and what

281
00:15:52,959 --> 00:15:59,979
they will do with the backup so then

282
00:15:56,500 --> 00:16:05,440
data gets into the backup

283
00:15:59,980 --> 00:16:09,220
of application if an application it

284
00:16:05,440 --> 00:16:12,190
allows reserved backup then backup

285
00:16:09,220 --> 00:16:13,480
function can actually with the help of

286
00:16:12,190 --> 00:16:15,850
this you can just get this this

287
00:16:13,480 --> 00:16:18,310
information as we'll talk about the

288
00:16:15,850 --> 00:16:20,460
leakage of data it's not that you can

289
00:16:18,310 --> 00:16:24,099
can get the backup of your application

290
00:16:20,460 --> 00:16:28,420
you need to have physical access is

291
00:16:24,100 --> 00:16:31,690
difficult but what Android version six

292
00:16:28,420 --> 00:16:34,630
zero you can hire so NATO L to do how to

293
00:16:31,690 --> 00:16:41,320
backup my data listen you you think so

294
00:16:34,630 --> 00:16:43,570
it's included but if it's on this

295
00:16:41,320 --> 00:16:46,570
automatic backup if you go from Android

296
00:16:43,570 --> 00:16:48,850
on draw it and you don't want to lose

297
00:16:46,570 --> 00:16:50,950
data your phone you don't turn it on and

298
00:16:48,850 --> 00:16:54,430
you need to understand what is doing so

299
00:16:50,950 --> 00:16:57,750
it gets the information from the from

300
00:16:54,430 --> 00:17:01,780
the application 24 hours if it's allowed

301
00:16:57,750 --> 00:17:04,540
top by Wi-Fi and now no more than 25

302
00:17:01,780 --> 00:17:08,109
megabytes so what kind of summation goes

303
00:17:04,540 --> 00:17:11,109
there but in my experience when I

304
00:17:08,109 --> 00:17:14,260
analyzed this application the developers

305
00:17:11,109 --> 00:17:18,119
put there very often so developers put

306
00:17:14,260 --> 00:17:18,119
their different

307
00:17:18,470 --> 00:17:33,720
so so Android has four types of chip

308
00:17:29,970 --> 00:17:36,480
reference databases internal storage

309
00:17:33,720 --> 00:17:39,060
external storage so four types so then

310
00:17:36,480 --> 00:17:42,150
shared preferences file see we have so

311
00:17:39,060 --> 00:17:45,629
what is stored there was not stored so

312
00:17:42,150 --> 00:17:46,620
what is internal stores internal

313
00:17:45,630 --> 00:17:51,570
external storage

314
00:17:46,620 --> 00:17:55,379
what's external internal storage so that

315
00:17:51,570 --> 00:17:59,850
the keys will of keys as well passwords

316
00:17:55,380 --> 00:18:02,610
peon etc so very very comfortable to

317
00:17:59,850 --> 00:18:05,159
store their their shared preferences is

318
00:18:02,610 --> 00:18:07,919
not encrypted and shred preference goes

319
00:18:05,160 --> 00:18:10,380
into the cup every time you backup your

320
00:18:07,920 --> 00:18:13,410
application it goes into the into the

321
00:18:10,380 --> 00:18:16,020
cloud but the cloud is connected to your

322
00:18:13,410 --> 00:18:20,160
Google account and a Google account

323
00:18:16,020 --> 00:18:23,340
through the social engineering so then

324
00:18:20,160 --> 00:18:25,710
you can always restore it from your

325
00:18:23,340 --> 00:18:29,340
smartphone if you get a new smartphone

326
00:18:25,710 --> 00:18:32,810
and download all your data there a

327
00:18:29,340 --> 00:18:36,120
southern files saved to your app

328
00:18:32,810 --> 00:18:38,820
international storage so they get there

329
00:18:36,120 --> 00:18:42,090
as well so they are to be backed up

330
00:18:38,820 --> 00:18:44,250
backed up as well but not all files and

331
00:18:42,090 --> 00:18:46,679
files and directories also get files

332
00:18:44,250 --> 00:18:48,570
dear which is an application and then

333
00:18:46,680 --> 00:18:49,669
there are directory files inside so they

334
00:18:48,570 --> 00:18:52,599
don't know

335
00:18:49,669 --> 00:18:56,239
so the same the same was true of

336
00:18:52,599 --> 00:18:58,789
databases they're not encrypted they

337
00:18:56,239 --> 00:19:01,729
encrypt a lot especially that they did

338
00:18:58,789 --> 00:19:05,049
the work with the social media people

339
00:19:01,729 --> 00:19:08,239
contacts could be can distort their

340
00:19:05,049 --> 00:19:12,019
banks who liked it so that develop their

341
00:19:08,239 --> 00:19:14,899
own propriety for mation for the

342
00:19:12,019 --> 00:19:18,079
department's HR stuff so they they love

343
00:19:14,899 --> 00:19:22,579
to store their nests so that's the HR

344
00:19:18,079 --> 00:19:26,178
files or passwords etc the an external

345
00:19:22,579 --> 00:19:29,450
storage storage so is your SD card SD

346
00:19:26,179 --> 00:19:32,809
cards as the is very well since SD card

347
00:19:29,450 --> 00:19:35,419
so every application so you can they can

348
00:19:32,809 --> 00:19:38,899
always see your SD card so then

349
00:19:35,419 --> 00:19:41,029
everywhere everything from A to Z but

350
00:19:38,899 --> 00:19:42,320
not the SD card is backed up but only

351
00:19:41,029 --> 00:19:45,139
one file date

352
00:19:42,320 --> 00:19:48,769
Android Android data application than

353
00:19:45,139 --> 00:19:52,549
files so then not not all SD card

354
00:19:48,769 --> 00:19:56,089
information will be backed up because an

355
00:19:52,549 --> 00:20:01,119
SD card you can put in to the SD card

356
00:19:56,089 --> 00:20:05,479
anything about then then ok then the

357
00:20:01,119 --> 00:20:09,799
leakage channel exists so with the help

358
00:20:05,479 --> 00:20:13,309
of a adb so one utility that is very

359
00:20:09,799 --> 00:20:14,959
good for working with android so you

360
00:20:13,309 --> 00:20:18,158
need just to learn it because it's great

361
00:20:14,959 --> 00:20:18,159
as a very good utility

362
00:20:19,740 --> 00:20:25,620
so so then you need to know the password

363
00:20:22,169 --> 00:20:29,010
to this device otherwise you cannot do

364
00:20:25,620 --> 00:20:34,529
the backup and the second method is a

365
00:20:29,010 --> 00:20:37,710
leakage on auto automatic backups user

366
00:20:34,529 --> 00:20:42,149
data from apps that targeted around on

367
00:20:37,710 --> 00:20:45,779
android 6.0 api level 23 or later and

368
00:20:42,149 --> 00:20:49,709
that's all they did a basis and it's

369
00:20:45,779 --> 00:20:53,039
stored in G Drive could be interesting

370
00:20:49,710 --> 00:20:58,080
to unpack people in fact that works and

371
00:20:53,039 --> 00:21:02,309
then various vendors away so they do

372
00:20:58,080 --> 00:21:04,970
their own things for backup and I was

373
00:21:02,309 --> 00:21:08,309
implement their own backup mechanisms

374
00:21:04,970 --> 00:21:11,250
and it's the same story in the

375
00:21:08,309 --> 00:21:16,440
application backups data so this data

376
00:21:11,250 --> 00:21:20,909
may become vulnerable vulnerable so when

377
00:21:16,440 --> 00:21:24,299
a specialist do the backup and so it's

378
00:21:20,909 --> 00:21:27,440
kind of some sort of database pressure

379
00:21:24,299 --> 00:21:31,559
is just sending data to the cloud and so

380
00:21:27,440 --> 00:21:35,549
and they certainly related to many risks

381
00:21:31,559 --> 00:21:38,580
and I will order them for each

382
00:21:35,549 --> 00:21:40,649
instrument for health template in the

383
00:21:38,580 --> 00:21:43,019
way of social engineering yes so that's

384
00:21:40,649 --> 00:21:46,590
Google Google page Google account

385
00:21:43,019 --> 00:21:50,159
Android is there so so long all open and

386
00:21:46,590 --> 00:21:53,220
so this is the after determine that an

387
00:21:50,159 --> 00:21:54,960
application is allowed backups so we can

388
00:21:53,220 --> 00:21:59,220
see that what works what doesn't

389
00:21:54,960 --> 00:22:02,070
so they try to unpack application apk

390
00:21:59,220 --> 00:22:04,019
and then you look and in attack

391
00:22:02,070 --> 00:22:06,240
application rights activities

392
00:22:04,019 --> 00:22:08,759
applications looking for android

393
00:22:06,240 --> 00:22:12,269
debuggable true if it's true could be

394
00:22:08,759 --> 00:22:16,190
backed up if not could not picked up as

395
00:22:12,269 --> 00:22:19,320
about you need to to go deeper

396
00:22:16,190 --> 00:22:20,909
exploitation so that you know to check

397
00:22:19,320 --> 00:22:22,889
it you need to work with the application

398
00:22:20,909 --> 00:22:28,169
and fill it with data then using the

399
00:22:22,889 --> 00:22:30,779
Android debug bridge and then we connect

400
00:22:28,169 --> 00:22:33,240
us through ADB and get backup file and

401
00:22:30,779 --> 00:22:36,389
backup file is an archive tera our key

402
00:22:33,240 --> 00:22:43,670
archive it has 24 bytes and its

403
00:22:36,389 --> 00:22:47,030
signature so

404
00:22:43,670 --> 00:22:49,760
just have a be all on Java Android

405
00:22:47,030 --> 00:22:52,550
backup extractor it can unpack and

406
00:22:49,760 --> 00:22:58,160
repack and you get backup it will have

407
00:22:52,550 --> 00:22:59,960
this same spatial reference TP Zen

408
00:22:58,160 --> 00:23:03,110
resources that is nothing interesting

409
00:22:59,960 --> 00:23:06,470
very often there are files external

410
00:23:03,110 --> 00:23:11,750
files and the only thing I wanted to

411
00:23:06,470 --> 00:23:17,210
tell you have you seen it because in

412
00:23:11,750 --> 00:23:20,240
fact you well don't think that is just

413
00:23:17,210 --> 00:23:24,410
background some files some data 0

414
00:23:20,240 --> 00:23:26,300
mechanism of signifies unit which the

415
00:23:24,410 --> 00:23:29,480
developers should listen to and these

416
00:23:26,300 --> 00:23:33,580
are exceptions you can accept some

417
00:23:29,480 --> 00:23:37,370
storages of files or you can show tell

418
00:23:33,580 --> 00:23:41,570
point to the descriptor file and tag it

419
00:23:37,370 --> 00:23:44,120
and actually point out was going to be

420
00:23:41,570 --> 00:23:55,280
backed up and there are files that cache

421
00:23:44,120 --> 00:23:57,949
files and no backup files you can

422
00:23:55,280 --> 00:24:02,360
actually deactivate the backup function

423
00:23:57,950 --> 00:24:04,850
if you are sure that your next iPhone is

424
00:24:02,360 --> 00:24:08,449
I an iPhone just which a tougher if you

425
00:24:04,850 --> 00:24:15,830
are not going to have more androids it

426
00:24:08,450 --> 00:24:18,890
works so and as I told you we planted

427
00:24:15,830 --> 00:24:23,330
this topic in Russian

428
00:24:18,890 --> 00:24:26,980
Ronit and show how you can simply learn

429
00:24:23,330 --> 00:24:29,720
it and the purpose of this lecture is to

430
00:24:26,980 --> 00:24:32,270
explain that I have many friends who do

431
00:24:29,720 --> 00:24:34,970
on occasion security and are afraid to

432
00:24:32,270 --> 00:24:36,620
go to Android or though etcetera it's a

433
00:24:34,970 --> 00:24:38,110
nice thing when you understand

434
00:24:36,620 --> 00:24:43,178
everything is competitive

435
00:24:38,110 --> 00:24:45,340
and you can see you can just look at the

436
00:24:43,179 --> 00:24:46,120
vulnerabilities and the settings that's

437
00:24:45,340 --> 00:24:48,699
good

438
00:24:46,120 --> 00:24:50,939
that's why I appeal to you study it's

439
00:24:48,700 --> 00:25:01,750
simple and gives you new knowledge and

440
00:24:50,940 --> 00:25:04,320
skills I thank you I'm ready to take

441
00:25:01,750 --> 00:25:04,320
your questions

442
00:25:05,399 --> 00:25:14,918
thank you have a short questions are

443
00:25:08,350 --> 00:25:19,840
there any ways to fit Google account and

444
00:25:14,919 --> 00:25:23,500
they will spit out all the backups I was

445
00:25:19,840 --> 00:25:27,610
looking at you cannot just drag back up

446
00:25:23,500 --> 00:25:30,850
from the ground you can get and show all

447
00:25:27,610 --> 00:25:32,340
the applications probably the wrong I

448
00:25:30,850 --> 00:25:36,519
don't know

449
00:25:32,340 --> 00:25:42,610
was there any research it's my next

450
00:25:36,519 --> 00:25:44,230
research probably thank you for the

451
00:25:42,610 --> 00:25:48,449
question

452
00:25:44,230 --> 00:25:48,450
so that's it thank you I'll see you

