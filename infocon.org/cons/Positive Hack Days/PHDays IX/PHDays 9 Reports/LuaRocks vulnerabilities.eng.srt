1
00:00:00,000 --> 00:00:06,150
about vulnerabilities in my name is

2
00:00:03,360 --> 00:00:08,160
Maxime do you enough we work with

3
00:00:06,150 --> 00:00:09,990
positive technologies searching the

4
00:00:08,160 --> 00:00:12,840
security technologies of web

5
00:00:09,990 --> 00:00:14,429
applications and we also develop

6
00:00:12,840 --> 00:00:19,590
positive technologies Application

7
00:00:14,429 --> 00:00:22,439
Firewall you can go to the link and see

8
00:00:19,590 --> 00:00:25,050
what we do our product is based on law

9
00:00:22,439 --> 00:00:27,720
the programming language quite popular

10
00:00:25,050 --> 00:00:29,670
product and it's used in many

11
00:00:27,720 --> 00:00:32,040
applications that you know but she

12
00:00:29,670 --> 00:00:34,640
sisters Cisco jinx Maki security

13
00:00:32,040 --> 00:00:40,200
whatever they see on the slide and

14
00:00:34,640 --> 00:00:43,110
everything with ID application security

15
00:00:40,200 --> 00:00:46,530
and the most popular product uh before

16
00:00:43,110 --> 00:00:49,920
the packet manager before the package

17
00:00:46,530 --> 00:00:52,250
manager is law rocks what is law rocks

18
00:00:49,920 --> 00:00:55,670
several complaints a clear server

19
00:00:52,250 --> 00:00:58,109
applications written in law language

20
00:00:55,670 --> 00:01:01,199
allowing to install packages to your

21
00:00:58,109 --> 00:01:03,930
servers and web interface to this

22
00:01:01,199 --> 00:01:07,280
website for developers and authors of

23
00:01:03,930 --> 00:01:12,930
the modules that written in moon script

24
00:01:07,280 --> 00:01:17,400
language compiled in law as our product

25
00:01:12,930 --> 00:01:19,710
is based well is a used for information

26
00:01:17,400 --> 00:01:22,170
security we decided when we wanted to

27
00:01:19,710 --> 00:01:26,580
ordered and check how safe it is and if

28
00:01:22,170 --> 00:01:30,680
it can be used as the source we have

29
00:01:26,580 --> 00:01:30,679
open source code we could do it legally

30
00:01:33,530 --> 00:01:39,509
the website allows the author to

31
00:01:36,299 --> 00:01:44,509
register identify use the email and

32
00:01:39,509 --> 00:01:48,030
password and use IP IDs that allows to

33
00:01:44,509 --> 00:01:53,460
use console application and rest type it

34
00:01:48,030 --> 00:01:54,740
own modules would be loaded with the

35
00:01:53,460 --> 00:01:57,600
Roxburgh files

36
00:01:54,740 --> 00:02:01,339
this is meta information that describes

37
00:01:57,600 --> 00:02:01,339
the modules and

38
00:02:02,340 --> 00:02:09,479
and the comments for assembly if it is a

39
00:02:06,130 --> 00:02:15,670
binary module it's a place where

40
00:02:09,479 --> 00:02:19,709
miscreant can use his code you can go to

41
00:02:15,670 --> 00:02:22,569
the official website and see what we are

42
00:02:19,709 --> 00:02:25,720
talking about the web site is quite

43
00:02:22,569 --> 00:02:29,950
popular lore rocks and the modules have

44
00:02:25,720 --> 00:02:33,430
more than 3.5 million downloads and the

45
00:02:29,950 --> 00:02:37,420
weekly over 20,000 times as some modules

46
00:02:33,430 --> 00:02:41,260
would be downloaded and when they are

47
00:02:37,420 --> 00:02:43,958
compromised so it can really damage

48
00:02:41,260 --> 00:02:48,849
there because as some console commands

49
00:02:43,959 --> 00:02:55,330
can be introduced that actually that

50
00:02:48,849 --> 00:02:59,950
actually have make compromised the

51
00:02:55,330 --> 00:03:01,780
server and the spread as a malware and

52
00:02:59,950 --> 00:03:03,548
we discovered that several

53
00:03:01,780 --> 00:03:06,850
vulnerabilities that we are ready to

54
00:03:03,549 --> 00:03:09,880
share as there is registration of the

55
00:03:06,850 --> 00:03:11,790
user reserved for the website there

56
00:03:09,880 --> 00:03:16,810
should be some kind of mechanism to

57
00:03:11,790 --> 00:03:25,810
change the password we started with this

58
00:03:16,810 --> 00:03:27,819
place and so that's how we re restoring

59
00:03:25,810 --> 00:03:30,730
the password so the person decides to

60
00:03:27,819 --> 00:03:33,730
change her he will send a query to the

61
00:03:30,730 --> 00:03:37,328
server and tell his email and he will

62
00:03:33,730 --> 00:03:40,988
get a letter with a secret token so the

63
00:03:37,329 --> 00:03:43,480
user can change his password ah yeah and

64
00:03:40,989 --> 00:03:46,470
we see the function at the screen front

65
00:03:43,480 --> 00:03:53,100
that generates unique secret token and

66
00:03:46,470 --> 00:03:55,959
generate key and the the it's 30 symbols

67
00:03:53,100 --> 00:04:00,880
as the function looks like that

68
00:03:55,959 --> 00:04:07,299
so from math package we export random

69
00:04:00,880 --> 00:04:12,129
and it returns random and returns the

70
00:04:07,299 --> 00:04:20,108
symbols from a scheme and so what is

71
00:04:12,129 --> 00:04:24,789
random in law a math package is wrapping

72
00:04:20,108 --> 00:04:30,570
over the system wipsy functions the

73
00:04:24,789 --> 00:04:33,550
random functions looks as follows a

74
00:04:30,570 --> 00:04:36,250
minimum and maximum value would be set

75
00:04:33,550 --> 00:04:39,729
of a random number and then some

76
00:04:36,250 --> 00:04:42,520
operations would be performed you see a

77
00:04:39,729 --> 00:04:44,680
runty in red is the calling with a

78
00:04:42,520 --> 00:04:49,960
system rent function that usually is

79
00:04:44,680 --> 00:04:51,760
vulnerable to forecasting since we have

80
00:04:49,960 --> 00:04:54,609
this around function this would be seed

81
00:04:51,760 --> 00:04:57,280
some places and we found this place yes

82
00:04:54,610 --> 00:05:00,460
what was in the cup mode file and this

83
00:04:57,280 --> 00:05:04,599
said it's set with the value of the

84
00:05:00,460 --> 00:05:06,070
current time so what is the scenario so

85
00:05:04,599 --> 00:05:10,120
we build the scenario and looks like

86
00:05:06,070 --> 00:05:12,840
this so we need to set our password so

87
00:05:10,120 --> 00:05:17,530
to send to send the query for resetting

88
00:05:12,840 --> 00:05:21,219
identifying our email make make make a

89
00:05:17,530 --> 00:05:24,809
query for the user's password that you

90
00:05:21,219 --> 00:05:30,039
want to attack and then so get the reset

91
00:05:24,810 --> 00:05:35,159
token from email then we done with and

92
00:05:30,039 --> 00:05:38,590
we generate sequences random signal

93
00:05:35,159 --> 00:05:40,750
sequences that if a find said that was

94
00:05:38,590 --> 00:05:44,619
used for the generation of this sequence

95
00:05:40,750 --> 00:05:47,380
so we can predict the next token that

96
00:05:44,620 --> 00:05:51,039
will be generated in future if you find

97
00:05:47,380 --> 00:05:53,770
this token and if we put it in our in

98
00:05:51,039 --> 00:05:59,169
our link and then we change the password

99
00:05:53,770 --> 00:06:01,719
of another user so email email a user a

100
00:05:59,169 --> 00:06:03,460
mail where can I find it in this

101
00:06:01,719 --> 00:06:08,800
screenshot you can see the rocks back

102
00:06:03,460 --> 00:06:12,960
file which is used for for uploading

103
00:06:08,800 --> 00:06:16,150
packages how this lo package should be

104
00:06:12,960 --> 00:06:17,510
uploaded so maintainer about fields

105
00:06:16,150 --> 00:06:20,210
differences for me

106
00:06:17,510 --> 00:06:23,180
and you can find the email here or can

107
00:06:20,210 --> 00:06:26,510
find on he tab what the author can be

108
00:06:23,180 --> 00:06:29,480
found as well otherwise there's a

109
00:06:26,510 --> 00:06:33,020
service service Gravatar so I can use

110
00:06:29,480 --> 00:06:37,970
Gravatar to look for the email it uses

111
00:06:33,020 --> 00:06:40,159
the if it uses the the user a mail as at

112
00:06:37,970 --> 00:06:43,040
avatar for his service he said go

113
00:06:40,160 --> 00:06:45,680
through and e5 hashing go through this

114
00:06:43,040 --> 00:06:49,220
function and in red you can see hash of

115
00:06:45,680 --> 00:06:51,710
the user email so by when the basis of

116
00:06:49,220 --> 00:06:57,500
this information can restore the user

117
00:06:51,710 --> 00:07:00,020
email another problem another reference

118
00:06:57,500 --> 00:07:04,640
we need to know the the seat when the

119
00:07:00,020 --> 00:07:06,740
service was like launched in order to in

120
00:07:04,640 --> 00:07:10,490
order to in order to put the generator

121
00:07:06,740 --> 00:07:13,970
of random sequences at the time when we

122
00:07:10,490 --> 00:07:16,430
launched it so Twitter rowlocks the last

123
00:07:13,970 --> 00:07:19,970
two it was about that they rebooted the

124
00:07:16,430 --> 00:07:21,830
server on certain day so then they

125
00:07:19,970 --> 00:07:24,200
developed the program they generates a

126
00:07:21,830 --> 00:07:26,900
random sequences started to look for

127
00:07:24,200 --> 00:07:29,330
tokens that come to our email for

128
00:07:26,900 --> 00:07:31,669
restoration no result and then we

129
00:07:29,330 --> 00:07:34,250
decided to see where the problem is and

130
00:07:31,670 --> 00:07:37,940
we the turul rocks is using sort of law

131
00:07:34,250 --> 00:07:41,630
five one four five three it uses logit

132
00:07:37,940 --> 00:07:45,800
logic some modifications of law which

133
00:07:41,630 --> 00:07:48,860
are aimed for higher efficiency and then

134
00:07:45,800 --> 00:07:51,710
has inside the implementations of the

135
00:07:48,860 --> 00:07:57,020
majority of standards functions about

136
00:07:51,710 --> 00:07:59,090
legit users usually its owner random and

137
00:07:57,020 --> 00:08:01,549
so the result of the random does not

138
00:07:59,090 --> 00:08:06,950
depend on the systemic random which

139
00:08:01,550 --> 00:08:10,850
contains in in Lipsy and after rewriting

140
00:08:06,950 --> 00:08:13,420
the codes to town force algorithm we got

141
00:08:10,850 --> 00:08:13,420
the result

142
00:08:14,730 --> 00:08:22,090
so there will be a video with exploit we

143
00:08:19,930 --> 00:08:28,810
just change the passwords for our

144
00:08:22,090 --> 00:08:34,299
account and for the victim so we go to

145
00:08:28,810 --> 00:08:39,849
our email get the token that we got it's

146
00:08:34,299 --> 00:08:42,549
a secret one and we shall just predict

147
00:08:39,849 --> 00:08:46,650
the values that were generated for the

148
00:08:42,549 --> 00:08:46,650
user who got the email who got our email

149
00:08:46,890 --> 00:09:04,780
we show the minimum and maximum range

150
00:08:51,100 --> 00:09:07,330
for cito and the depth of the symbols so

151
00:09:04,780 --> 00:09:10,420
several seconds later we have the result

152
00:09:07,330 --> 00:09:16,960
we got the results the depth is 130

153
00:09:10,420 --> 00:09:19,780
symbols we got the token that most

154
00:09:16,960 --> 00:09:22,990
probably was sent to another user we use

155
00:09:19,780 --> 00:09:25,540
your URL into the token for the user

156
00:09:22,990 --> 00:09:26,620
that we guessed and idea and we login

157
00:09:25,540 --> 00:09:29,310
into the system

158
00:09:26,620 --> 00:09:29,310
hijack

159
00:09:34,109 --> 00:09:44,649
so the next slide and we can stop the

160
00:09:36,850 --> 00:09:47,109
video so eagle just told us about

161
00:09:44,649 --> 00:09:54,309
capturing the account by email and now

162
00:09:47,109 --> 00:09:58,720
let me tell you then as I mentioned IP

163
00:09:54,309 --> 00:10:01,660
keys are used at the website and rest IP

164
00:09:58,720 --> 00:10:05,410
well some you can you can observe some

165
00:10:01,660 --> 00:10:07,238
of them you can observe IP key and then

166
00:10:05,410 --> 00:10:10,029
delete and look at the modules and

167
00:10:07,239 --> 00:10:16,199
download the rock spec file that's

168
00:10:10,029 --> 00:10:16,199
exactly what the perpetrator once and

169
00:10:17,819 --> 00:10:24,368
then when we consider is a key

170
00:10:20,799 --> 00:10:30,100
generation function we see is the same

171
00:10:24,369 --> 00:10:32,949
function that used for the password

172
00:10:30,100 --> 00:10:35,829
changes so it's also vulnerable to the

173
00:10:32,949 --> 00:10:38,378
predictability vulnerability so with the

174
00:10:35,829 --> 00:10:41,019
same mechanism we just predict the IP

175
00:10:38,379 --> 00:10:45,699
key and make a query to download as a

176
00:10:41,019 --> 00:10:48,970
malicious module and there is a

177
00:10:45,699 --> 00:10:52,540
difference in this scenario when the

178
00:10:48,970 --> 00:10:54,610
password will be changed the author will

179
00:10:52,540 --> 00:10:57,160
finally get an email I will see that

180
00:10:54,610 --> 00:11:00,429
someone tried to change his password he

181
00:10:57,160 --> 00:11:05,759
will not be able to log in and he will

182
00:11:00,429 --> 00:11:08,889
write to the support and then in case of

183
00:11:05,759 --> 00:11:12,879
but in case you predict the key he will

184
00:11:08,889 --> 00:11:14,499
not know about it soon it will go

185
00:11:12,879 --> 00:11:19,600
unnoticed for a long time

186
00:11:14,499 --> 00:11:23,230
Igor and now the next vulnerability is

187
00:11:19,600 --> 00:11:26,230
the arbitrary files record so LaRocca

188
00:11:23,230 --> 00:11:29,499
have both specific vulnerabilities that

189
00:11:26,230 --> 00:11:31,600
are quite rare but there is a file

190
00:11:29,499 --> 00:11:35,430
record and download in the system rock

191
00:11:31,600 --> 00:11:38,250
spec and so on most

192
00:11:35,430 --> 00:11:44,880
probably we can interact with the file

193
00:11:38,250 --> 00:11:48,240
system so there is a case an example of

194
00:11:44,880 --> 00:11:52,560
rock spec file with a field in fact rock

195
00:11:48,240 --> 00:11:54,930
spec file is a code executable code that

196
00:11:52,560 --> 00:11:56,729
will be executed in a sandbox in this

197
00:11:54,930 --> 00:12:02,900
case and sandbox that there are no

198
00:11:56,730 --> 00:12:07,350
functions and it's difficult to interact

199
00:12:02,900 --> 00:12:10,010
and as we can see there is filled

200
00:12:07,350 --> 00:12:14,970
package version these fields are used

201
00:12:10,010 --> 00:12:17,970
for the generation of ways will auto

202
00:12:14,970 --> 00:12:22,500
locate the file and on the end a server

203
00:12:17,970 --> 00:12:31,200
and this field will be filtered and one

204
00:12:22,500 --> 00:12:33,960
of them as is this one and so all this

205
00:12:31,200 --> 00:12:39,510
symbol as outside of a scheme will be

206
00:12:33,960 --> 00:12:42,390
deleted so we send a query to download

207
00:12:39,510 --> 00:12:45,060
the rock spec file and in the rocks spec

208
00:12:42,390 --> 00:12:48,840
the away show package and version and as

209
00:12:45,060 --> 00:12:52,050
we see the version is used as with

210
00:12:48,840 --> 00:12:56,460
slashes and the dots as they are within

211
00:12:52,050 --> 00:12:59,699
the range so we can use this tool we can

212
00:12:56,460 --> 00:13:01,860
record files into arbitrary chart the

213
00:12:59,700 --> 00:13:05,160
directories and create those directories

214
00:13:01,860 --> 00:13:07,650
and we see the monitoring of file system

215
00:13:05,160 --> 00:13:12,050
and the server where file are loaded and

216
00:13:07,650 --> 00:13:16,020
then after the query we have an event

217
00:13:12,050 --> 00:13:18,719
modify and the record of the file on the

218
00:13:16,020 --> 00:13:24,300
storage default bucket to way is the

219
00:13:18,720 --> 00:13:26,760
possum we made the record but there's

220
00:13:24,300 --> 00:13:30,959
one trigger so we cannot record any

221
00:13:26,760 --> 00:13:34,490
files we can record any files but with

222
00:13:30,960 --> 00:13:34,490
the postfix rocks back

223
00:13:38,459 --> 00:13:50,529
we can also record file so what works

224
00:13:47,259 --> 00:13:53,470
work also is subject to brute-force

225
00:13:50,529 --> 00:13:56,110
attacks it's possible because of the

226
00:13:53,470 --> 00:13:57,490
token of to use it will not be invalid

227
00:13:56,110 --> 00:14:01,779
so you can use it again

228
00:13:57,490 --> 00:14:03,819
you can reuse it and it it becomes

229
00:14:01,779 --> 00:14:08,160
possible for the lack of some right

230
00:14:03,819 --> 00:14:12,399
limiting or check for successful

231
00:14:08,160 --> 00:14:15,790
authorizations here you can observe the

232
00:14:12,399 --> 00:14:20,410
group suit and then as well you can see

233
00:14:15,790 --> 00:14:26,230
that the status is different 302 and the

234
00:14:20,410 --> 00:14:28,660
size which can be redirected email link

235
00:14:26,230 --> 00:14:31,629
poisoning is another vulnerability this

236
00:14:28,660 --> 00:14:35,230
vulnerability is quite frequent and in

237
00:14:31,629 --> 00:14:38,410
many a report and hacker one so this

238
00:14:35,230 --> 00:14:42,519
vulnerability means that the attacker

239
00:14:38,410 --> 00:14:48,279
sends a query to the server it can he

240
00:14:42,519 --> 00:14:50,920
can change the host header we can be

241
00:14:48,279 --> 00:14:58,089
used with the attacks with password

242
00:14:50,920 --> 00:15:04,149
change and when the attacker goes to the

243
00:14:58,089 --> 00:15:07,720
password page he will use the controlled

244
00:15:04,149 --> 00:15:13,810
server as a header so the user will get

245
00:15:07,720 --> 00:15:18,610
a link to the hackers server to change

246
00:15:13,810 --> 00:15:22,949
his password and that's the screenshot

247
00:15:18,610 --> 00:15:25,389
so they evoke own sends the query to

248
00:15:22,949 --> 00:15:29,410
change the password and the user will

249
00:15:25,389 --> 00:15:34,750
get the link to with the password to

250
00:15:29,410 --> 00:15:37,120
evil.com with and so if the user clicks

251
00:15:34,750 --> 00:15:40,240
the link he will go to the hacker site

252
00:15:37,120 --> 00:15:43,829
and this hacker gets a the key and can

253
00:15:40,240 --> 00:15:43,829
change the users password

254
00:15:44,279 --> 00:15:55,750
in spite of inspired day so we have

255
00:15:53,460 --> 00:15:57,940
estimated those vulnerabilities as

256
00:15:55,750 --> 00:15:59,890
critical and capable to damage the

257
00:15:57,940 --> 00:16:01,980
society lower society and positive

258
00:15:59,890 --> 00:16:07,740
acknowledges prepare the official

259
00:16:01,980 --> 00:16:07,740
security advisor advice and assent and

260
00:16:09,270 --> 00:16:18,300
started watching and the others created

261
00:16:14,800 --> 00:16:22,199
a page where they described the incident

262
00:16:18,300 --> 00:16:25,839
actually patched as a vulnerability and

263
00:16:22,200 --> 00:16:28,450
and the changed all the to cancer and IP

264
00:16:25,839 --> 00:16:31,480
Eric rebuked all they are

265
00:16:28,450 --> 00:16:36,150
Kisa and the editors they audit page and

266
00:16:31,480 --> 00:16:39,850
it allows you to loken download all the

267
00:16:36,150 --> 00:16:43,779
accounts and change the photo to to to

268
00:16:39,850 --> 00:16:47,080
to catch the attacker but so far as they

269
00:16:43,779 --> 00:16:49,660
the date is covered at no such attacks

270
00:16:47,080 --> 00:16:52,510
and they appeal to all the excutive

271
00:16:49,660 --> 00:16:57,130
experts to make an immediate open audit

272
00:16:52,510 --> 00:17:00,970
and get in touch with them in spite of

273
00:16:57,130 --> 00:17:03,490
what we we we have made the low rock

274
00:17:00,970 --> 00:17:07,390
society safer we keep reusing it we are

275
00:17:03,490 --> 00:17:09,760
not sure that there are no other

276
00:17:07,390 --> 00:17:12,280
vulnerabilities so we decided to be

277
00:17:09,760 --> 00:17:16,660
rather safe than sorry and we recommend

278
00:17:12,280 --> 00:17:19,389
to use it there is a tutorial at lower

279
00:17:16,660 --> 00:17:23,770
rocks that allows you to host those

280
00:17:19,390 --> 00:17:27,730
packages on your own and use your own

281
00:17:23,770 --> 00:17:30,610
law rocks server we use artifactory

282
00:17:27,730 --> 00:17:34,240
Photo Store the packages but by default

283
00:17:30,610 --> 00:17:37,659
it cannot receive log files and all the

284
00:17:34,240 --> 00:17:40,420
whoops wrote utility that allows you to

285
00:17:37,660 --> 00:17:44,290
load download and create indices for

286
00:17:40,420 --> 00:17:47,170
lower rocks to use so we have the

287
00:17:44,290 --> 00:17:49,690
comment here to use so for download and

288
00:17:47,170 --> 00:17:52,390
the assembly of the packages on your own

289
00:17:49,690 --> 00:17:53,780
server and then the link is here so I

290
00:17:52,390 --> 00:17:57,320
guess

291
00:17:53,780 --> 00:18:00,399
we can stop here we thank you and we are

292
00:17:57,320 --> 00:18:00,399
here for your questions

