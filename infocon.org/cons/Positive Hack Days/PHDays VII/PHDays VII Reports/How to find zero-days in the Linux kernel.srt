1
00:00:00,770 --> 00:00:09,349
<font color="#E5E5E5">dr. Jeffrey Gott hello everyone my name</font>

2
00:00:04,410 --> 00:00:12,599
is and a<font color="#E5E5E5"> rule</font><font color="#CCCCCC"> I work at</font><font color="#E5E5E5"> Google</font><font color="#CCCCCC"> and I</font>

3
00:00:09,349 --> 00:00:14,969
ride different<font color="#CCCCCC"> isotopes</font><font color="#E5E5E5"> to look for bugs</font>

4
00:00:12,599 --> 00:00:17,190
and<font color="#CCCCCC"> Eris automatically in the Linux</font>

5
00:00:14,969 --> 00:00:18,480
<font color="#E5E5E5">support today I will tell you about the</font>

6
00:00:17,190 --> 00:00:22,080
tools<font color="#CCCCCC"> that we</font><font color="#E5E5E5"> have for</font><font color="#CCCCCC"> this kind of</font>

7
00:00:18,480 --> 00:00:25,439
things<font color="#E5E5E5"> and how anybody can use our tools</font>

8
00:00:22,080 --> 00:00:29,009
to<font color="#E5E5E5"> find some zero-day vulnerability</font>

9
00:00:25,439 --> 00:00:30,630
unexploited<font color="#E5E5E5"> yeah if you are watching I</font>

10
00:00:29,010 --> 00:00:36,000
use it the<font color="#CCCCCC"> T</font><font color="#E5E5E5"> which is</font><font color="#CCCCCC"> called dynamic</font>

11
00:00:30,630 --> 00:00:38,070
<font color="#E5E5E5">ghost and initially</font><font color="#CCCCCC"> system was just</font>

12
00:00:36,000 --> 00:00:42,149
creating the set of them until support

13
00:00:38,070 --> 00:00:44,219
the support rated at written<font color="#CCCCCC"> c++ and</font><font color="#E5E5E5"> if</font>

14
00:00:42,149 --> 00:00:46,860
there's somebody<font color="#E5E5E5"> who writing at people</font>

15
00:00:44,219 --> 00:00:49,230
<font color="#E5E5E5">it is not about sanitizers please take a</font>

16
00:00:46,860 --> 00:00:50,610
look<font color="#E5E5E5"> at strongly advise to this there</font>

17
00:00:49,230 --> 00:00:52,110
are three main tools addressing that

18
00:00:50,610 --> 00:00:52,440
there's threats at hazard memories and

19
00:00:52,110 --> 00:00:54,930
<font color="#CCCCCC">Iser</font>

20
00:00:52,440 --> 00:00:59,570
they look for different kinds of<font color="#E5E5E5"> errors</font>

21
00:00:54,930 --> 00:00:59,570
and they<font color="#CCCCCC"> discover the errors that mostly</font>

22
00:00:59,660 --> 00:01:07,048
very hard to debug in c++ software such

23
00:01:03,480 --> 00:01:08,548
as data races<font color="#CCCCCC"> in addition my team has</font>

24
00:01:07,049 --> 00:01:13,619
<font color="#CCCCCC">created</font><font color="#E5E5E5"> a tool that's</font><font color="#CCCCCC"> called sleep visor</font>

25
00:01:08,549 --> 00:01:15,869
<font color="#E5E5E5">and</font><font color="#CCCCCC"> again</font><font color="#E5E5E5"> man we allows you to do cover</font>

26
00:01:13,619 --> 00:01:18,630
check<font color="#CCCCCC"> rising</font><font color="#E5E5E5"> other</font><font color="#CCCCCC"> programs written with</font>

27
00:01:15,869 --> 00:01:20,640
c++ and live recently the<font color="#CCCCCC"> real</font><font color="#E5E5E5"> existing</font>

28
00:01:18,630 --> 00:01:23,009
core OS as<font color="#E5E5E5"> fuzz this kind of a service</font>

29
00:01:20,640 --> 00:01:24,570
<font color="#CCCCCC">that is provided by</font><font color="#E5E5E5"> google to the</font>

30
00:01:23,009 --> 00:01:26,909
developers of<font color="#E5E5E5"> the open source software</font>

31
00:01:24,570 --> 00:01:28,770
<font color="#E5E5E5">the idea here is that</font><font color="#CCCCCC"> the developers of</font>

32
00:01:26,909 --> 00:01:32,610
<font color="#E5E5E5">this source prepare the</font><font color="#CCCCCC"> write the Pfizer</font>

33
00:01:28,770 --> 00:01:36,210
and<font color="#E5E5E5"> Google</font><font color="#CCCCCC"> Lodge is</font><font color="#E5E5E5"> it at its own</font>

34
00:01:32,610 --> 00:01:37,920
servers with<font color="#E5E5E5"> its computing resources so</font>

35
00:01:36,210 --> 00:01:41,309
this is the way to find bugs very

36
00:01:37,920 --> 00:01:42,689
quickly and very<font color="#E5E5E5"> efficiently so</font><font color="#CCCCCC"> all</font><font color="#E5E5E5"> I'm</font>

37
00:01:41,310 --> 00:01:43,890
going<font color="#E5E5E5"> to be talking</font><font color="#CCCCCC"> about</font><font color="#E5E5E5"> the</font><font color="#CCCCCC"> links for</font>

38
00:01:42,689 --> 00:01:45,250
today and we're<font color="#E5E5E5"> going to be looking for</font>

39
00:01:43,890 --> 00:01:47,020
the bus

40
00:01:45,250 --> 00:01:49,180
with a dynamic<font color="#E5E5E5"> tool so I'm going to</font><font color="#CCCCCC"> be</font>

41
00:01:47,020 --> 00:01:52,080
<font color="#E5E5E5">using two categories of the</font><font color="#CCCCCC"> tools first</font>

42
00:01:49,180 --> 00:01:55,780
<font color="#E5E5E5">bug detectors and says second as</font><font color="#CCCCCC"> buzzers</font>

43
00:01:52,080 --> 00:01:58,320
<font color="#E5E5E5">so we're going to</font><font color="#CCCCCC"> be allowing fathers</font>

44
00:01:55,780 --> 00:02:01,360
mothers<font color="#CCCCCC"> kind of thing that</font><font color="#E5E5E5"> generally</font>

45
00:01:58,320 --> 00:02:03,160
feed some random<font color="#E5E5E5"> into the program and</font>

46
00:02:01,360 --> 00:02:05,170
<font color="#E5E5E5">just waiting for the software to crash</font>

47
00:02:03,160 --> 00:02:06,970
<font color="#CCCCCC">we're going to be have</font><font color="#E5E5E5"> the puzzles</font>

48
00:02:05,170 --> 00:02:09,729
<font color="#CCCCCC">before</font><font color="#E5E5E5"> this is going</font><font color="#CCCCCC"> to be shooting</font><font color="#E5E5E5"> with</font>

49
00:02:06,970 --> 00:02:11,380
system calls and the second<font color="#E5E5E5"> thought I'll</font>

50
00:02:09,729 --> 00:02:13,060
<font color="#E5E5E5">be using is bug detector</font><font color="#CCCCCC"> any kind</font><font color="#E5E5E5"> of</font>

51
00:02:11,380 --> 00:02:16,060
architecture<font color="#CCCCCC"> that will be detecting</font>

52
00:02:13,060 --> 00:02:18,340
books<font color="#E5E5E5"> when</font><font color="#CCCCCC"> they happen</font><font color="#E5E5E5"> so more often</font>

53
00:02:16,060 --> 00:02:20,950
<font color="#E5E5E5">than not and does that there's a bug</font>

54
00:02:18,340 --> 00:02:23,740
it's<font color="#E5E5E5"> not necessarily evidently</font>

55
00:02:20,950 --> 00:02:26,799
manifested<font color="#E5E5E5"> nut</font><font color="#CCCCCC"> missus</font><font color="#E5E5E5"> shells will cause</font>

56
00:02:23,740 --> 00:02:28,560
the crash of the core for example it

57
00:02:26,800 --> 00:02:31,240
might turn<font color="#E5E5E5"> out that this is just a</font>

58
00:02:28,560 --> 00:02:34,330
semi-auto pre-read which at this

59
00:02:31,240 --> 00:02:36,670
<font color="#E5E5E5">particular</font><font color="#CCCCCC"> members of system core it</font>

60
00:02:34,330 --> 00:02:38,980
doesn't crash the core but it might

61
00:02:36,670 --> 00:02:42,160
<font color="#E5E5E5">change some parameters so this kind of</font>

62
00:02:38,980 --> 00:02:43,869
can help you to find<font color="#CCCCCC"> these kind</font><font color="#E5E5E5"> of</font><font color="#CCCCCC"> I may</font>

63
00:02:42,160 --> 00:02:48,160
<font color="#CCCCCC">be talking</font><font color="#E5E5E5"> about three</font><font color="#CCCCCC"> pictures</font><font color="#E5E5E5"> Kasana</font>

64
00:02:43,870 --> 00:02:50,380
<font color="#E5E5E5">head cam some</font><font color="#CCCCCC"> their cold as similar</font><font color="#E5E5E5"> to</font>

65
00:02:48,160 --> 00:02:53,590
<font color="#E5E5E5">your</font><font color="#CCCCCC"> escape detectors but they just</font><font color="#E5E5E5"> have</font>

66
00:02:50,380 --> 00:02:58,390
the<font color="#CCCCCC"> criminal so there's a colonel and</font>

67
00:02:53,590 --> 00:03:03,730
resident orcas on that allows use find

68
00:02:58,390 --> 00:03:07,359
<font color="#CCCCCC">the is up to</font><font color="#E5E5E5"> fees and out of thousands</font>

69
00:03:03,730 --> 00:03:10,840
uses it's available<font color="#E5E5E5"> at the extreme core</font>

70
00:03:07,360 --> 00:03:12,790
starting from the<font color="#E5E5E5"> version 4.0 and you</font>

71
00:03:10,840 --> 00:03:17,290
just need to<font color="#CCCCCC"> launch the configure</font><font color="#E5E5E5"> sauna</font>

72
00:03:12,790 --> 00:03:20,019
use the<font color="#CCCCCC"> TVC which is quite</font><font color="#E5E5E5"> fresh the</font>

73
00:03:17,290 --> 00:03:21,849
second tool which is a<font color="#CCCCCC"> being prototype</font>

74
00:03:20,019 --> 00:03:26,920
<font color="#CCCCCC">for that it's</font>

75
00:03:21,849 --> 00:03:28,988
okay<font color="#E5E5E5"> colonel threat sanitizer was</font><font color="#CCCCCC"> this</font>

76
00:03:26,920 --> 00:03:31,078
data races in the core there<font color="#CCCCCC"> is a great</font>

77
00:03:28,989 --> 00:03:33,939
amount<font color="#E5E5E5"> of these things in the court and</font>

78
00:03:31,079 --> 00:03:35,230
certain cases are the<font color="#E5E5E5"> dead racism for</font>

79
00:03:33,939 --> 00:03:38,469
<font color="#E5E5E5">the other but for the developers the</font>

80
00:03:35,230 --> 00:03:40,179
<font color="#CCCCCC">more they are not</font><font color="#E5E5E5"> interested in these</font>

81
00:03:38,469 --> 00:03:42,250
kinda traces the classical<font color="#E5E5E5"> examples here</font>

82
00:03:40,180 --> 00:03:44,500
is kind of a<font color="#CCCCCC"> country that it's</font>

83
00:03:42,250 --> 00:03:47,620
<font color="#CCCCCC">achromatic</font><font color="#E5E5E5"> in several</font><font color="#CCCCCC"> streams this</font><font color="#E5E5E5"> is</font>

84
00:03:44,500 --> 00:03:50,230
<font color="#E5E5E5">not interesting</font><font color="#CCCCCC"> to anybody if the</font>

85
00:03:47,620 --> 00:03:53,530
counter will have<font color="#E5E5E5"> their multipliers from</font>

86
00:03:50,230 --> 00:03:56,619
which is one unit<font color="#E5E5E5"> bigger or lower but</font>

87
00:03:53,530 --> 00:03:58,450
data race can be<font color="#E5E5E5"> detected here lots of</font>

88
00:03:56,620 --> 00:04:01,840
reports of this kind it's very hard<font color="#CCCCCC"> to</font>

89
00:03:58,450 --> 00:04:03,548
analyze that's why we just<font color="#E5E5E5"> fix this kind</font>

90
00:04:01,840 --> 00:04:04,719
<font color="#E5E5E5">of thing sooner or later and then we</font>

91
00:04:03,549 --> 00:04:07,329
<font color="#CCCCCC">should be finding</font><font color="#E5E5E5"> some very very</font>

92
00:04:04,719 --> 00:04:10,858
<font color="#CCCCCC">interesting data</font><font color="#E5E5E5"> races</font><font color="#CCCCCC"> Luther to his</font>

93
00:04:07,329 --> 00:04:15,909
memory<font color="#E5E5E5"> sanitizer</font><font color="#CCCCCC"> that allows finding</font>

94
00:04:10,859 --> 00:04:17,228
memory which<font color="#CCCCCC"> has been on initialize has</font>

95
00:04:15,909 --> 00:04:19,269
been just probably<font color="#E5E5E5"> a couple of days ago</font>

96
00:04:17,228 --> 00:04:21,250
<font color="#CCCCCC">so this</font><font color="#E5E5E5"> is</font><font color="#CCCCCC"> the example of the report</font>

97
00:04:19,269 --> 00:04:24,250
that's like<font color="#E5E5E5"> a</font><font color="#CCCCCC"> Sun when it finds about is</font>

98
00:04:21,250 --> 00:04:30,159
<font color="#CCCCCC">gonna</font><font color="#E5E5E5"> be telling you this from the</font><font color="#CCCCCC"> other</font>

99
00:04:24,250 --> 00:04:33,190
<font color="#CCCCCC">three out of read so when the memory</font><font color="#E5E5E5"> is</font>

100
00:04:30,159 --> 00:04:37,449
being freed<font color="#E5E5E5"> so we can see where things</font>

101
00:04:33,190 --> 00:04:39,310
happen and if it's in the other ones<font color="#CCCCCC"> in</font>

102
00:04:37,449 --> 00:04:41,500
<font color="#E5E5E5">heap this tool will tell you where the</font>

103
00:04:39,310 --> 00:04:44,590
<font color="#CCCCCC">keep option was identified</font><font color="#E5E5E5"> and where it</font>

104
00:04:41,500 --> 00:04:45,940
was<font color="#CCCCCC"> freed so this</font><font color="#E5E5E5"> why this report</font><font color="#CCCCCC"> is</font>

105
00:04:44,590 --> 00:04:47,650
very<font color="#E5E5E5"> convenient to</font><font color="#CCCCCC"> analyze the boxes</font>

106
00:04:45,940 --> 00:04:51,039
<font color="#CCCCCC">just with</font><font color="#E5E5E5"> the report we understand where</font>

107
00:04:47,650 --> 00:04:52,900
<font color="#CCCCCC">the apt was</font><font color="#E5E5E5"> created where it was freed</font>

108
00:04:51,039 --> 00:04:55,210
and when it was addressed<font color="#E5E5E5"> again by the</font>

109
00:04:52,900 --> 00:04:58,989
process<font color="#E5E5E5"> that I'm</font><font color="#CCCCCC"> going to be talking</font>

110
00:04:55,210 --> 00:05:01,780
<font color="#CCCCCC">about is sis</font><font color="#E5E5E5"> color this is the</font><font color="#CCCCCC"> five-0</font>

111
00:04:58,990 --> 00:05:03,400
system<font color="#E5E5E5"> calls community</font><font color="#CCCCCC"> line just</font><font color="#E5E5E5"> above</font>

112
00:05:01,780 --> 00:05:05,919
<font color="#CCCCCC">reporter on</font><font color="#E5E5E5"> the Foley video this thing</font>

113
00:05:03,400 --> 00:05:10,210
is phone over<font color="#CCCCCC"> 400 bugs in the core this</font>

114
00:05:05,919 --> 00:05:12,219
<font color="#CCCCCC">is amazing there are 25 CVS but it can</font>

115
00:05:10,210 --> 00:05:13,409
get<font color="#E5E5E5"> us to be for every second bug I</font>

116
00:05:12,219 --> 00:05:15,209
believe

117
00:05:13,409 --> 00:05:17,009
people<font color="#E5E5E5"> who do that because the bugs are</font>

118
00:05:15,209 --> 00:05:18,509
not<font color="#E5E5E5"> that interesting when from the</font>

119
00:05:17,009 --> 00:05:20,519
global standpoint mostly there's that

120
00:05:18,509 --> 00:05:24,209
local you know<font color="#CCCCCC"> the</font><font color="#E5E5E5"> service</font><font color="#CCCCCC"> alleged the</font>

121
00:05:20,519 --> 00:05:26,849
program and the core fails then last

122
00:05:24,209 --> 00:05:27,929
several months we have<font color="#CCCCCC"> three very</font>

123
00:05:26,849 --> 00:05:30,899
interesting<font color="#CCCCCC"> buzz which allowed you to</font>

124
00:05:27,929 --> 00:05:33,808
locally<font color="#CCCCCC"> agree to privileges by the way</font>

125
00:05:30,899 --> 00:05:36,119
<font color="#E5E5E5">so I find the</font><font color="#CCCCCC"> person</font><font color="#E5E5E5"> third</font><font color="#CCCCCC"> and the same</font>

126
00:05:33,809 --> 00:05:37,619
most fun by Alexander football<font color="#E5E5E5"> she works</font>

127
00:05:36,119 --> 00:05:41,699
and<font color="#CCCCCC"> Buzz the technologies right now</font>

128
00:05:37,619 --> 00:05:44,789
<font color="#E5E5E5">maybe he is around</font><font color="#CCCCCC"> probably not though</font>

129
00:05:41,699 --> 00:05:46,679
but the idea<font color="#E5E5E5"> of the thing</font><font color="#CCCCCC"> that I wanted</font>

130
00:05:44,789 --> 00:05:49,498
to say is they have<font color="#E5E5E5"> been doing</font><font color="#CCCCCC"> the</font>

131
00:05:46,679 --> 00:05:51,029
<font color="#CCCCCC">presentation at 0:19 hydro village and I</font>

132
00:05:49,499 --> 00:05:53,879
have mentioned this was color<font color="#CCCCCC"> their</font>

133
00:05:51,029 --> 00:05:58,110
<font color="#E5E5E5">there that he came</font><font color="#CCCCCC"> to</font><font color="#E5E5E5"> me he talked to me</font>

134
00:05:53,879 --> 00:06:00,629
<font color="#E5E5E5">we discuss</font><font color="#CCCCCC"> the thing</font><font color="#E5E5E5"> so their success</font>

135
00:05:58,110 --> 00:06:02,789
story and<font color="#E5E5E5"> the very important point of</font>

136
00:06:00,629 --> 00:06:04,529
this car is that it allows<font color="#E5E5E5"> you to</font>

137
00:06:02,789 --> 00:06:07,679
<font color="#CCCCCC">generate theory producer for the bugs</font>

138
00:06:04,529 --> 00:06:10,800
<font color="#E5E5E5">that you find so</font><font color="#CCCCCC"> if you lurch the Pfizer</font>

139
00:06:07,679 --> 00:06:12,688
<font color="#E5E5E5">and it generates a</font><font color="#CCCCCC"> C software CPC</font>

140
00:06:10,800 --> 00:06:16,169
software<font color="#E5E5E5"> to actually</font><font color="#CCCCCC"> eliminate something</font>

141
00:06:12,689 --> 00:06:18,599
<font color="#E5E5E5">that in the inner core well yours I have</font>

142
00:06:16,169 --> 00:06:21,359
<font color="#CCCCCC">a set already this is the</font><font color="#E5E5E5"> coverage guide</font>

143
00:06:18,599 --> 00:06:24,889
<font color="#CCCCCC">advisor</font><font color="#E5E5E5"> buzzer which means that if you</font>

144
00:06:21,360 --> 00:06:28,169
<font color="#E5E5E5">Jordan reef Buzzard it just should</font>

145
00:06:24,889 --> 00:06:30,360
<font color="#E5E5E5">random inputs to the software at the</font>

146
00:06:28,169 --> 00:06:32,039
<font color="#E5E5E5">software without following any</font>

147
00:06:30,360 --> 00:06:33,990
particular objects while generating

148
00:06:32,039 --> 00:06:35,789
video<font color="#E5E5E5"> inputs</font><font color="#CCCCCC"> mice</font><font color="#E5E5E5"> use different</font>

149
00:06:33,990 --> 00:06:38,909
templates it might do different things

150
00:06:35,789 --> 00:06:42,959
however this<font color="#E5E5E5"> helps</font><font color="#CCCCCC"> lauded fuzzing but</font>

151
00:06:38,909 --> 00:06:46,169
what really helps is coverage if we have

152
00:06:42,959 --> 00:06:48,479
a certain way<font color="#CCCCCC"> to collect</font><font color="#E5E5E5"> coverage from</font>

153
00:06:46,169 --> 00:06:49,919
the executable program like the numbers

154
00:06:48,479 --> 00:06:51,419
of the instructions<font color="#CCCCCC"> that were executed</font>

155
00:06:49,919 --> 00:06:53,068
all<font color="#E5E5E5"> the numbers of the basic blocks that</font>

156
00:06:51,419 --> 00:06:54,719
we can understand what's happening

157
00:06:53,069 --> 00:06:57,689
<font color="#E5E5E5">imagine we have input</font><font color="#CCCCCC"> into suffer a</font>

158
00:06:54,719 --> 00:06:59,879
certain range<font color="#E5E5E5"> of inputs and that gives a</font>

159
00:06:57,689 --> 00:07:01,349
<font color="#E5E5E5">certain government show the software so</font>

160
00:06:59,879 --> 00:07:04,110
we generate the new input we see the

161
00:07:01,349 --> 00:07:05,669
coverage if there's some new coverage it

162
00:07:04,110 --> 00:07:07,349
covers that we have not<font color="#E5E5E5"> seen before then</font>

163
00:07:05,669 --> 00:07:08,909
<font color="#E5E5E5">this might be</font><font color="#CCCCCC"> interesting</font><font color="#E5E5E5"> this might be</font>

164
00:07:07,349 --> 00:07:11,248
an<font color="#E5E5E5"> interesting input and we save it</font><font color="#CCCCCC"> if</font>

165
00:07:08,909 --> 00:07:14,129
we<font color="#E5E5E5"> don't see anything we can just throw</font>

166
00:07:11,249 --> 00:07:16,169
it<font color="#CCCCCC"> out so this way</font><font color="#E5E5E5"> we can</font><font color="#CCCCCC"> actually get</font>

167
00:07:14,129 --> 00:07:20,369
the certain

168
00:07:16,169 --> 00:07:22,619
less at certain silo particularly

169
00:07:20,369 --> 00:07:23,620
interesting inputs so terms<font color="#E5E5E5"> for what</font>

170
00:07:22,619 --> 00:07:25,540
kind of input<font color="#CCCCCC"> we</font>

171
00:07:23,620 --> 00:07:27,400
having of<font color="#CCCCCC"> course</font><font color="#E5E5E5"> this is the system</font>

172
00:07:25,540 --> 00:07:29,320
called<font color="#E5E5E5"> from the</font><font color="#CCCCCC"> Euro space so we have</font>

173
00:07:27,400 --> 00:07:31,840
some software<font color="#CCCCCC"> which is executed in the</font>

174
00:07:29,320 --> 00:07:34,180
user space to communicate with it or it

175
00:07:31,840 --> 00:07:36,369
<font color="#CCCCCC">call</font><font color="#E5E5E5"> it makes assistant</font><font color="#CCCCCC"> role</font><font color="#E5E5E5"> usually</font>

176
00:07:34,180 --> 00:07:38,500
when I speak about local privileges

177
00:07:36,370 --> 00:07:40,449
collection bugs<font color="#CCCCCC"> I usually mean that</font>

178
00:07:38,500 --> 00:07:42,310
<font color="#E5E5E5">there's a shall of the</font><font color="#CCCCCC"> machine and you</font>

179
00:07:40,449 --> 00:07:46,180
<font color="#CCCCCC">can</font><font color="#E5E5E5"> easily get</font><font color="#CCCCCC"> to get</font><font color="#E5E5E5"> some system calls</font>

180
00:07:42,310 --> 00:07:51,300
but you<font color="#CCCCCC"> don't have the</font><font color="#E5E5E5"> route yet and by</font>

181
00:07:46,180 --> 00:07:54,790
giving certain<font color="#CCCCCC"> particular parameters to</font>

182
00:07:51,300 --> 00:07:56,650
the coals<font color="#E5E5E5"> you can actually do memory</font>

183
00:07:54,790 --> 00:07:59,500
corruption the core and use those

184
00:07:56,650 --> 00:08:01,060
exploits<font color="#E5E5E5"> to</font><font color="#CCCCCC"> Jersey privileges also there</font>

185
00:07:59,500 --> 00:08:02,680
<font color="#E5E5E5">are some external inputs for example</font><font color="#CCCCCC"> the</font>

186
00:08:01,060 --> 00:08:04,660
<font color="#CCCCCC">taxes going</font><font color="#E5E5E5"> through</font><font color="#CCCCCC"> Network and the core</font>

187
00:08:02,680 --> 00:08:07,570
has to<font color="#E5E5E5"> parse certain protocol like an</font><font color="#CCCCCC"> IP</font>

188
00:08:04,660 --> 00:08:09,340
<font color="#CCCCCC">or GCB ATP</font><font color="#E5E5E5"> the core parses all of that</font>

189
00:08:07,570 --> 00:08:12,639
and sends the<font color="#E5E5E5"> user space into particular</font>

190
00:08:09,340 --> 00:08:15,340
piece<font color="#E5E5E5"> of</font><font color="#CCCCCC"> software by the way also</font><font color="#E5E5E5"> if you</font>

191
00:08:12,639 --> 00:08:17,380
have<font color="#E5E5E5"> the certain set of hot</font><font color="#CCCCCC"> lights</font>

192
00:08:15,340 --> 00:08:19,479
protocol<font color="#E5E5E5"> you had a physical</font><font color="#CCCCCC"> acts state</font>

193
00:08:17,380 --> 00:08:20,919
when<font color="#E5E5E5"> machining can plug in the USB</font>

194
00:08:19,479 --> 00:08:23,169
<font color="#E5E5E5">device</font><font color="#CCCCCC"> and it will</font><font color="#E5E5E5"> be connected</font><font color="#CCCCCC"> to the</font>

195
00:08:20,919 --> 00:08:25,960
<font color="#E5E5E5">USB driver inside of the course so if</font>

196
00:08:23,169 --> 00:08:28,060
you instead<font color="#E5E5E5"> of the drivers find that</font>

197
00:08:25,960 --> 00:08:32,228
bucks you can send some incorrect<font color="#E5E5E5"> input</font>

198
00:08:28,060 --> 00:08:33,909
and that will be the<font color="#E5E5E5"> error in the course</font>

199
00:08:32,229 --> 00:08:36,310
<font color="#E5E5E5">well they will lead to the second</font><font color="#CCCCCC"> beer</font>

200
00:08:33,909 --> 00:08:39,700
in<font color="#CCCCCC"> the course well to</font><font color="#E5E5E5"> the color it</font>

201
00:08:36,309 --> 00:08:41,799
generates the software that generates<font color="#E5E5E5"> a</font>

202
00:08:39,700 --> 00:08:44,260
range of random<font color="#E5E5E5"> system called based on</font>

203
00:08:41,799 --> 00:08:45,729
the template<font color="#E5E5E5"> so this is the whole</font><font color="#CCCCCC"> Cisco</font>

204
00:08:44,260 --> 00:08:48,189
they were all written manually<font color="#E5E5E5"> and</font>

205
00:08:45,730 --> 00:08:50,110
here's a<font color="#E5E5E5"> simple example so we</font><font color="#CCCCCC"> have this</font>

206
00:08:48,190 --> 00:08:54,130
is<font color="#E5E5E5"> called open which and the first</font>

207
00:08:50,110 --> 00:08:56,980
argument<font color="#E5E5E5"> since the file was a final name</font>

208
00:08:54,130 --> 00:08:59,620
tab so this is built into the<font color="#CCCCCC"> fiscal or</font>

209
00:08:56,980 --> 00:09:00,790
<font color="#CCCCCC">file type of the file name so then the</font>

210
00:08:59,620 --> 00:09:04,600
<font color="#E5E5E5">fiscal sends the flights you could add</font>

211
00:09:00,790 --> 00:09:06,910
them manually and in any kind<font color="#E5E5E5"> of amount</font>

212
00:09:04,600 --> 00:09:10,290
and the third argument<font color="#CCCCCC"> is also flex</font><font color="#E5E5E5"> then</font>

213
00:09:06,910 --> 00:09:15,730
we have<font color="#CCCCCC"> missus color</font><font color="#E5E5E5"> also fiscal open it</font>

214
00:09:10,290 --> 00:09:17,529
brings back<font color="#CCCCCC"> the file descriptor Cisco</font>

215
00:09:15,730 --> 00:09:19,000
<font color="#E5E5E5">would eat I'm putting my</font><font color="#CCCCCC"> ramen</font><font color="#E5E5E5"> bring</font>

216
00:09:17,529 --> 00:09:21,070
<font color="#CCCCCC">seven back to the father's rich sauce is</font>

217
00:09:19,000 --> 00:09:23,470
called<font color="#E5E5E5"> red is the first argument it gets</font>

218
00:09:21,070 --> 00:09:24,700
the file descriptor then the place<font color="#CCCCCC"> of</font>

219
00:09:23,470 --> 00:09:27,459
<font color="#CCCCCC">words read and then the length of the</font>

220
00:09:24,700 --> 00:09:29,830
bridge<font color="#E5E5E5"> so the same same weight works the</font>

221
00:09:27,459 --> 00:09:32,989
<font color="#E5E5E5">Cisco closed and every</font><font color="#CCCCCC"> Cisco has this</font>

222
00:09:29,830 --> 00:09:35,690
kind of description<font color="#E5E5E5"> this color it</font>

223
00:09:32,990 --> 00:09:37,970
<font color="#CCCCCC">suppose the</font><font color="#E5E5E5"> disc</font><font color="#CCCCCC"> remanded Cisco's this</font>

224
00:09:35,690 --> 00:09:40,190
is the<font color="#CCCCCC"> example</font><font color="#E5E5E5"> of the sockets so if we</font>

225
00:09:37,970 --> 00:09:41,900
have one argument<font color="#E5E5E5"> that is sent this is</font>

226
00:09:40,190 --> 00:09:42,890
<font color="#CCCCCC">go socket</font><font color="#E5E5E5"> then we have a TCP socket if</font>

227
00:09:41,900 --> 00:09:45,530
we send<font color="#E5E5E5"> a different kind of argument</font>

228
00:09:42,890 --> 00:09:47,870
<font color="#CCCCCC">it's going to be a</font><font color="#E5E5E5"> UDP socket or</font><font color="#CCCCCC"> a</font>

229
00:09:45,530 --> 00:09:50,300
<font color="#CCCCCC">packaged socket for</font><font color="#E5E5E5"> the ruins another</font>

230
00:09:47,870 --> 00:09:52,790
<font color="#CCCCCC">nice example of this kind of Cisco is</font>

231
00:09:50,300 --> 00:09:57,280
the octal which depending<font color="#E5E5E5"> on the</font><font color="#CCCCCC"> device</font>

232
00:09:52,790 --> 00:10:00,160
can do very different things<font color="#E5E5E5"> this color</font>

233
00:09:57,280 --> 00:10:03,319
so this<font color="#E5E5E5"> is my description</font>

234
00:10:00,160 --> 00:10:06,199
it supports<font color="#E5E5E5"> structured</font><font color="#CCCCCC"> support unions</font>

235
00:10:03,320 --> 00:10:08,270
<font color="#E5E5E5">there's the example the structure for a</font>

236
00:10:06,200 --> 00:10:10,520
<font color="#E5E5E5">particular type of socket it's very very</font>

237
00:10:08,270 --> 00:10:11,960
simple<font color="#CCCCCC"> to see I'm not going</font><font color="#E5E5E5"> to go in</font>

238
00:10:10,520 --> 00:10:14,270
details<font color="#E5E5E5"> of the structure</font><font color="#CCCCCC"> just going to</font>

239
00:10:11,960 --> 00:10:16,430
see that in<font color="#E5E5E5"> the syscall bin for the</font>

240
00:10:14,270 --> 00:10:19,340
package<font color="#E5E5E5"> sucker so this thing is sex than</font>

241
00:10:16,430 --> 00:10:21,290
the<font color="#E5E5E5"> second argument is a negation of the</font>

242
00:10:19,340 --> 00:10:23,510
<font color="#CCCCCC">go frames so</font><font color="#E5E5E5"> there's also</font><font color="#CCCCCC"> this</font>

243
00:10:21,290 --> 00:10:25,520
<font color="#CCCCCC">indication</font><font color="#E5E5E5"> of resources resources other</font>

244
00:10:23,510 --> 00:10:27,740
things that<font color="#CCCCCC"> foul the scripture is a</font>

245
00:10:25,520 --> 00:10:30,470
resource<font color="#CCCCCC"> solitaire is resource once</font><font color="#E5E5E5"> this</font>

246
00:10:27,740 --> 00:10:32,330
color wants to for example make<font color="#CCCCCC"> a call</font>

247
00:10:30,470 --> 00:10:35,150
this called<font color="#E5E5E5"> end it's Emma's have a</font>

248
00:10:32,330 --> 00:10:37,940
certain first argument<font color="#E5E5E5"> of some</font><font color="#CCCCCC"> kind of</font>

249
00:10:35,150 --> 00:10:40,610
socket for that<font color="#E5E5E5"> the Sacramento generated</font>

250
00:10:37,940 --> 00:10:42,920
so the<font color="#CCCCCC"> Cisco knows the</font><font color="#E5E5E5"> socket is</font>

251
00:10:40,610 --> 00:10:45,950
resource at me he knows how<font color="#E5E5E5"> to generate</font>

252
00:10:42,920 --> 00:10:47,900
a socket<font color="#CCCCCC"> so this way</font><font color="#E5E5E5"> the</font><font color="#CCCCCC"> sis collar</font><font color="#E5E5E5"> it</font>

253
00:10:45,950 --> 00:10:50,090
generates some random software in the

254
00:10:47,900 --> 00:10:51,920
following shape and form this is a very

255
00:10:50,090 --> 00:10:55,130
<font color="#E5E5E5">simple example when we're mapping a</font>

256
00:10:51,920 --> 00:10:56,930
piece of memory we make a<font color="#CCCCCC"> Cisco open to</font>

257
00:10:55,130 --> 00:10:58,610
the particular<font color="#E5E5E5"> files and we refine the</font>

258
00:10:56,930 --> 00:11:03,260
<font color="#E5E5E5">poly one we close it so this is called</font>

259
00:10:58,610 --> 00:11:04,760
generates<font color="#E5E5E5"> software in this shape and</font>

260
00:11:03,260 --> 00:11:06,319
this<font color="#CCCCCC"> is the weight first how does work</font>

261
00:11:04,760 --> 00:11:08,900
it everything<font color="#CCCCCC"> starts with</font><font color="#E5E5E5"> an empty range</font>

262
00:11:06,320 --> 00:11:10,880
of software<font color="#E5E5E5"> and this color takes the</font>

263
00:11:08,900 --> 00:11:13,130
random pieces of<font color="#E5E5E5"> dirt from</font><font color="#CCCCCC"> their range</font>

264
00:11:10,880 --> 00:11:15,050
<font color="#E5E5E5">and then we take it making it as a new</font>

265
00:11:13,130 --> 00:11:17,750
<font color="#E5E5E5">program it interprets the bright perish</font>

266
00:11:15,050 --> 00:11:19,040
from the core if the new software gives

267
00:11:17,750 --> 00:11:21,260
<font color="#CCCCCC">them new</font><font color="#E5E5E5"> covers we have nothing before</font>

268
00:11:19,040 --> 00:11:22,819
<font color="#E5E5E5">then we</font><font color="#CCCCCC"> send it</font><font color="#E5E5E5"> and save it</font><font color="#CCCCCC"> to</font><font color="#E5E5E5"> the core</font>

269
00:11:21,260 --> 00:11:25,340
<font color="#E5E5E5">if there's no new coverage we throw it</font>

270
00:11:22,820 --> 00:11:28,490
out so this way we can accumulate the

271
00:11:25,340 --> 00:11:30,260
more and<font color="#E5E5E5"> more the wider range of new</font>

272
00:11:28,490 --> 00:11:31,940
corpses which actually generates the new

273
00:11:30,260 --> 00:11:33,170
pieces of<font color="#E5E5E5"> the core as</font><font color="#CCCCCC"> sooner or later</font>

274
00:11:31,940 --> 00:11:34,800
<font color="#E5E5E5">we're going to trigger some kind of</font>

275
00:11:33,170 --> 00:11:38,370
error

276
00:11:34,800 --> 00:11:41,010
and<font color="#CCCCCC"> discolor</font><font color="#E5E5E5"> also again</font><font color="#CCCCCC"> Chris has some</font>

277
00:11:38,370 --> 00:11:45,360
<font color="#CCCCCC">outside it's a bit like buzzing the core</font>

278
00:11:41,010 --> 00:11:47,550
as though the core you get some<font color="#E5E5E5"> external</font>

279
00:11:45,360 --> 00:11:49,950
inputs<font color="#E5E5E5"> appreciate your</font><font color="#CCCCCC"> tutor student</font>

280
00:11:47,550 --> 00:11:50,969
<font color="#CCCCCC">augment or fees now you can do this</font><font color="#E5E5E5"> with</font>

281
00:11:49,950 --> 00:11:52,560
the<font color="#E5E5E5"> natural</font><font color="#CCCCCC"> answer chewed</font><font color="#E5E5E5"> up in</font><font color="#CCCCCC"> your</font>

282
00:11:50,970 --> 00:11:54,450
face just<font color="#CCCCCC"> send it back just</font><font color="#E5E5E5"> to that</font><font color="#CCCCCC"> is a</font>

283
00:11:52,560 --> 00:11:56,369
<font color="#E5E5E5">thing that allows you for the user space</font>

284
00:11:54,450 --> 00:12:01,260
to<font color="#E5E5E5"> stand the</font><font color="#CCCCCC"> baggage as though it's from</font>

285
00:11:56,370 --> 00:12:03,630
<font color="#E5E5E5">the outside I will not make a</font><font color="#CCCCCC"> dam right</font>

286
00:12:01,260 --> 00:12:05,430
<font color="#CCCCCC">now probably</font><font color="#E5E5E5"> but you</font><font color="#CCCCCC"> can</font><font color="#E5E5E5"> catch me after</font>

287
00:12:03,630 --> 00:12:10,890
<font color="#E5E5E5">the presentation which is somewhere</font>

288
00:12:05,430 --> 00:12:13,109
around<font color="#E5E5E5"> the hardware village and I will</font>

289
00:12:10,890 --> 00:12:15,180
tell you everything<font color="#E5E5E5"> in more detail and</font>

290
00:12:13,110 --> 00:12:18,570
<font color="#E5E5E5">show</font><font color="#CCCCCC"> everything my</font><font color="#E5E5E5"> job so how do you</font>

291
00:12:15,180 --> 00:12:21,029
look<font color="#E5E5E5"> for zero day in the</font><font color="#CCCCCC"> next</font><font color="#E5E5E5"> hack</font>

292
00:12:18,570 --> 00:12:22,589
number one<font color="#E5E5E5"> you need to know how</font><font color="#CCCCCC"> does</font>

293
00:12:21,029 --> 00:12:24,300
this color works<font color="#E5E5E5"> we need to</font><font color="#CCCCCC"> keep</font>

294
00:12:22,589 --> 00:12:27,450
together the core<font color="#E5E5E5"> and there's an obvious</font>

295
00:12:24,300 --> 00:12:28,680
thing<font color="#CCCCCC"> works</font><font color="#E5E5E5"> next we need to select a</font>

296
00:12:27,450 --> 00:12:31,110
certain<font color="#E5E5E5"> kind of interface that has now</font>

297
00:12:28,680 --> 00:12:32,430
<font color="#CCCCCC">been</font><font color="#E5E5E5"> tested before ever</font><font color="#CCCCCC"> that classical</font>

298
00:12:31,110 --> 00:12:33,870
example is a given chord<font color="#CCCCCC"> they're about</font>

299
00:12:32,430 --> 00:12:36,149
two different<font color="#E5E5E5"> types of sockets on</font><font color="#CCCCCC"> the</font>

300
00:12:33,870 --> 00:12:37,410
core take<font color="#CCCCCC"> anyone that doesn't</font><font color="#E5E5E5"> have a</font>

301
00:12:36,149 --> 00:12:41,250
description<font color="#CCCCCC"> and write a very simple</font>

302
00:12:37,410 --> 00:12:44,279
<font color="#CCCCCC">description that would be enough second</font>

303
00:12:41,250 --> 00:12:48,089
thing is a device driver<font color="#CCCCCC"> the third step</font>

304
00:12:44,279 --> 00:12:51,029
is to<font color="#E5E5E5"> launch</font><font color="#CCCCCC"> if specified</font><font color="#E5E5E5"> the</font><font color="#CCCCCC"> Cisco's</font>

305
00:12:48,089 --> 00:12:54,740
that are used at<font color="#CCCCCC"> your in your HF face</font><font color="#E5E5E5"> so</font>

306
00:12:51,029 --> 00:12:54,740
if you start buzzing<font color="#E5E5E5"> all the Cisco's</font>

307
00:12:54,770 --> 00:12:58,860
this<font color="#E5E5E5"> color will just be blurred and this</font>

308
00:12:57,540 --> 00:13:02,279
will not<font color="#E5E5E5"> be very efficient if you want</font>

309
00:12:58,860 --> 00:13:04,200
to plug the socket<font color="#E5E5E5"> you set</font><font color="#CCCCCC"> a</font><font color="#E5E5E5"> Cisco</font>

310
00:13:02,279 --> 00:13:06,270
sockets is called sense<font color="#CCCCCC"> called</font><font color="#E5E5E5"> received</font>

311
00:13:04,200 --> 00:13:08,850
<font color="#CCCCCC">pinned and so</font><font color="#E5E5E5"> on</font><font color="#CCCCCC"> everything related to</font><font color="#E5E5E5"> a</font>

312
00:13:06,270 --> 00:13:10,589
<font color="#CCCCCC">circuit or cutting back step four</font><font color="#E5E5E5"> is</font>

313
00:13:08,850 --> 00:13:13,079
launching<font color="#E5E5E5"> this is color and</font><font color="#CCCCCC"> the practice</font>

314
00:13:10,589 --> 00:13:14,910
shows that within<font color="#E5E5E5"> 24 hours you're going</font>

315
00:13:13,079 --> 00:13:16,290
to have a certain<font color="#CCCCCC"> amount of bugs</font><font color="#E5E5E5"> all of</font>

316
00:13:14,910 --> 00:13:20,250
this of course depends<font color="#E5E5E5"> on how powerful</font>

317
00:13:16,290 --> 00:13:22,740
<font color="#CCCCCC">your machine is but overall</font><font color="#E5E5E5"> for certain</font>

318
00:13:20,250 --> 00:13:26,070
interfaces<font color="#E5E5E5"> took me</font><font color="#CCCCCC"> today bugs in the</font>

319
00:13:22,740 --> 00:13:28,589
first minutes after<font color="#E5E5E5"> fussing well this is</font>

320
00:13:26,070 --> 00:13:32,300
it<font color="#E5E5E5"> if you have some questions please</font><font color="#CCCCCC"> do</font>

321
00:13:28,589 --> 00:13:32,300
not<font color="#E5E5E5"> hesitate to</font><font color="#CCCCCC"> ask I'll be happy to ask</font>

322
00:13:38,650 --> 00:13:43,480
<font color="#CCCCCC">thank you an interesting</font><font color="#E5E5E5"> presentation</font>

323
00:13:40,610 --> 00:13:47,690
<font color="#CCCCCC">and a question how many syscalls</font>

324
00:13:43,480 --> 00:13:51,020
initially are described as templates or

325
00:13:47,690 --> 00:13:52,700
examples above 100<font color="#E5E5E5"> actually I don't know</font>

326
00:13:51,020 --> 00:13:57,530
how many<font color="#CCCCCC"> Cisco ceilings</font><font color="#E5E5E5"> there are</font>

327
00:13:52,700 --> 00:13:59,360
<font color="#CCCCCC">overall as separate IDs</font><font color="#E5E5E5"> but</font><font color="#CCCCCC"> I think it's</font>

328
00:13:57,530 --> 00:14:01,010
all<font color="#E5E5E5"> around red</font><font color="#CCCCCC"> oh I have described</font>

329
00:13:59,360 --> 00:14:02,840
<font color="#E5E5E5">almost all of them but they</font><font color="#CCCCCC"> are</font>

330
00:14:01,010 --> 00:14:05,000
described<font color="#CCCCCC"> almost all of them but they're</font>

331
00:14:02,840 --> 00:14:08,090
a great amount of discriminated<font color="#CCCCCC"> schools</font>

332
00:14:05,000 --> 00:14:09,140
<font color="#E5E5E5">like in the octal coming in have very</font>

333
00:14:08,090 --> 00:14:12,050
different signatures for different

334
00:14:09,140 --> 00:14:13,490
device drivers and<font color="#CCCCCC"> for</font><font color="#E5E5E5"> certain device</font>

335
00:14:12,050 --> 00:14:16,670
drivers there are descriptions<font color="#E5E5E5"> and for</font>

336
00:14:13,490 --> 00:14:20,000
some there none<font color="#E5E5E5"> another question can you</font>

337
00:14:16,670 --> 00:14:23,329
briefly describe the<font color="#E5E5E5"> identification of</font>

338
00:14:20,000 --> 00:14:24,980
<font color="#E5E5E5">the bus how does it happen</font><font color="#CCCCCC"> what this is</font>

339
00:14:23,330 --> 00:14:27,920
color does it interprets the software

340
00:14:24,980 --> 00:14:30,290
that generate this<font color="#CCCCCC"> code</font><font color="#E5E5E5"> and it takes</font>

341
00:14:27,920 --> 00:14:32,569
<font color="#CCCCCC">excuse to software particularly Bach dr.</font>

342
00:14:30,290 --> 00:14:34,069
Baca detector usual detective so if the

343
00:14:32,570 --> 00:14:36,200
<font color="#E5E5E5">inside</font><font color="#CCCCCC"> of</font><font color="#E5E5E5"> the core the software</font>

344
00:14:34,070 --> 00:14:38,720
initiated the bug the detector will find

345
00:14:36,200 --> 00:14:40,820
this bug if it can identify generally

346
00:14:38,720 --> 00:14:48,440
the<font color="#CCCCCC"> baggage this kind and</font><font color="#E5E5E5"> will just</font>

347
00:14:40,820 --> 00:14:50,480
<font color="#E5E5E5">print it into the court thank you</font><font color="#CCCCCC"> very</font>

348
00:14:48,440 --> 00:14:54,520
much for the<font color="#CCCCCC"> presentation</font><font color="#E5E5E5"> so you said</font>

349
00:14:50,480 --> 00:14:56,660
that<font color="#E5E5E5"> when we test the Cisco's Buzzard</font>

350
00:14:54,520 --> 00:15:00,020
justified the parameters that<font color="#CCCCCC"> he needs</font>

351
00:14:56,660 --> 00:15:04,449
to<font color="#E5E5E5"> send him we set the Union so that</font><font color="#CCCCCC"> the</font>

352
00:15:00,020 --> 00:15:07,880
buzzer would generate from some range of

353
00:15:04,450 --> 00:15:09,530
e<font color="#CCCCCC"> IDs for this is called me</font><font color="#E5E5E5"> so since the</font>

354
00:15:07,880 --> 00:15:12,110
<font color="#E5E5E5">first</font><font color="#CCCCCC"> parameter</font><font color="#E5E5E5"> must be either true</font><font color="#CCCCCC"> or</font>

355
00:15:09,530 --> 00:15:14,810
false<font color="#CCCCCC"> I don't want to load the fuzz</font>

356
00:15:12,110 --> 00:15:16,820
<font color="#CCCCCC">we're generating this parameter yeah</font>

357
00:15:14,810 --> 00:15:18,770
there is this<font color="#E5E5E5"> kind of</font><font color="#CCCCCC"> type like the flag</font>

358
00:15:16,820 --> 00:15:21,560
type you<font color="#E5E5E5"> can actually set the</font><font color="#CCCCCC"> do flags</font>

359
00:15:18,770 --> 00:15:25,490
like<font color="#E5E5E5"> 1 and</font><font color="#CCCCCC"> 0</font><font color="#E5E5E5"> and identified that this</font>

360
00:15:21,560 --> 00:15:27,920
<font color="#E5E5E5">cisco has</font><font color="#CCCCCC"> a second argument which is</font><font color="#E5E5E5"> the</font>

361
00:15:25,490 --> 00:15:29,720
set<font color="#E5E5E5"> of flags and then this color will</font>

362
00:15:27,920 --> 00:15:31,910
just can be<font color="#E5E5E5"> using only those identifiers</font>

363
00:15:29,720 --> 00:15:35,020
<font color="#E5E5E5">so then setting the type of the</font>

364
00:15:31,910 --> 00:15:37,730
parameter like<font color="#E5E5E5"> into or stream string</font>

365
00:15:35,020 --> 00:15:40,640
again that we set up as well<font color="#E5E5E5"> yes this</font>

366
00:15:37,730 --> 00:15:43,300
also<font color="#CCCCCC"> is in the description there's a set</font>

367
00:15:40,640 --> 00:15:45,340
<font color="#CCCCCC">of the built-in types</font><font color="#E5E5E5"> like strings and</font>

368
00:15:43,300 --> 00:15:48,219
<font color="#E5E5E5">flags</font>

369
00:15:45,340 --> 00:15:49,720
under structures how does this notation

370
00:15:48,220 --> 00:15:52,120
work<font color="#E5E5E5"> this work with the all parameters</font>

371
00:15:49,720 --> 00:15:53,770
<font color="#CCCCCC">together or dictates a</font><font color="#E5E5E5"> particular set of</font>

372
00:15:52,120 --> 00:15:55,510
parameters<font color="#CCCCCC"> it selects some random</font>

373
00:15:53,770 --> 00:15:57,880
parameter<font color="#CCCCCC"> looks at the type of</font><font color="#E5E5E5"> the</font>

374
00:15:55,510 --> 00:16:00,330
parameter<font color="#E5E5E5"> and generates the new argument</font>

375
00:15:57,880 --> 00:16:04,330
of the same type more<font color="#E5E5E5"> or less like this</font>

376
00:16:00,330 --> 00:16:09,070
how does<font color="#CCCCCC"> the coverage work so for</font>

377
00:16:04,330 --> 00:16:11,500
<font color="#CCCCCC">example we saw that in</font><font color="#E5E5E5"> the fuzzing we</font>

378
00:16:09,070 --> 00:16:13,180
have moved on we have memorized the

379
00:16:11,500 --> 00:16:16,240
<font color="#E5E5E5">state so how does the sponsor identify</font>

380
00:16:13,180 --> 00:16:18,280
that we have been getting<font color="#CCCCCC"> deeper or just</font>

381
00:16:16,240 --> 00:16:20,020
different<font color="#E5E5E5"> state that's different from</font>

382
00:16:18,280 --> 00:16:23,470
the previous quote there<font color="#CCCCCC"> is</font><font color="#E5E5E5"> no way this</font>

383
00:16:20,020 --> 00:16:26,199
<font color="#CCCCCC">no oh what we see for</font><font color="#E5E5E5"> the time being is</font>

384
00:16:23,470 --> 00:16:27,490
the range the massive coverage per

385
00:16:26,200 --> 00:16:30,280
certain software<font color="#E5E5E5"> it's the mess</font><font color="#CCCCCC"> about the</font>

386
00:16:27,490 --> 00:16:33,070
basic<font color="#CCCCCC"> law that we</font><font color="#E5E5E5"> executed this might</font>

387
00:16:30,280 --> 00:16:35,140
lead<font color="#CCCCCC"> to</font><font color="#E5E5E5"> the fact that we have just two</font>

388
00:16:33,070 --> 00:16:37,480
mutated<font color="#CCCCCC"> software a</font><font color="#E5E5E5"> little bit and we</font>

389
00:16:35,140 --> 00:16:39,130
<font color="#CCCCCC">have advanced a lot</font><font color="#E5E5E5"> into the dev but</font>

390
00:16:37,480 --> 00:16:41,620
might<font color="#CCCCCC"> be that we have</font><font color="#E5E5E5"> just</font><font color="#CCCCCC"> followed</font><font color="#E5E5E5"> it</font>

391
00:16:39,130 --> 00:16:45,220
<font color="#CCCCCC">for a different way</font><font color="#E5E5E5"> can it</font><font color="#CCCCCC"> be that we</font>

392
00:16:41,620 --> 00:16:47,590
have one coverage for example<font color="#CCCCCC"> at</font><font color="#E5E5E5"> 30% of</font>

393
00:16:45,220 --> 00:16:50,080
coverage<font color="#CCCCCC"> and</font><font color="#E5E5E5"> the next time we launch the</font>

394
00:16:47,590 --> 00:16:51,670
<font color="#CCCCCC">saying we see</font><font color="#E5E5E5"> the 5% of the code</font>

395
00:16:50,080 --> 00:16:54,100
coverage<font color="#E5E5E5"> the coverage has changed and</font>

396
00:16:51,670 --> 00:16:55,930
this will be<font color="#CCCCCC"> edited to the Corp and the</font>

397
00:16:54,100 --> 00:16:58,030
<font color="#CCCCCC">fuzzer will work with it</font><font color="#E5E5E5"> however we have</font>

398
00:16:55,930 --> 00:16:59,620
covered less for the code well<font color="#CCCCCC"> it</font>

399
00:16:58,030 --> 00:17:01,150
important is that we<font color="#CCCCCC"> have</font><font color="#E5E5E5"> covered some</font>

400
00:16:59,620 --> 00:17:02,560
new basic blocks that's the only thing

401
00:17:01,150 --> 00:17:04,950
that matters<font color="#CCCCCC"> okay</font>

402
00:17:02,560 --> 00:17:04,950
thank<font color="#E5E5E5"> you</font>

403
00:17:09,299 --> 00:17:15,849
<font color="#CCCCCC">what justifies the choice of your own a</font>

404
00:17:14,409 --> 00:17:17,829
<font color="#CCCCCC">Dacian for the sixth goal</font>

405
00:17:15,849 --> 00:17:19,809
why<font color="#E5E5E5"> wouldn't just partial headers in the</font>

406
00:17:17,829 --> 00:17:22,750
system for<font color="#E5E5E5"> the contact of the core and</font>

407
00:17:19,809 --> 00:17:28,539
and here you are<font color="#E5E5E5"> EV the description of</font>

408
00:17:22,750 --> 00:17:31,929
<font color="#E5E5E5">everything is so great and and then the</font>

409
00:17:28,539 --> 00:17:33,549
<font color="#CCCCCC">parse in the core</font><font color="#E5E5E5"> there is</font><font color="#CCCCCC"> no other</font>

410
00:17:31,929 --> 00:17:37,470
particular description<font color="#E5E5E5"> on which</font>

411
00:17:33,549 --> 00:17:40,090
arguments<font color="#CCCCCC"> except which is called the</font>

412
00:17:37,470 --> 00:17:42,820
entirety of<font color="#E5E5E5"> the core is</font><font color="#CCCCCC"> the cisco</font>

413
00:17:40,090 --> 00:17:45,010
parsing process and if you<font color="#E5E5E5"> want to</font>

414
00:17:42,820 --> 00:17:46,720
understand what arguments are sent to<font color="#CCCCCC"> is</font>

415
00:17:45,010 --> 00:17:48,879
<font color="#CCCCCC">disclosed</font><font color="#E5E5E5"> you</font><font color="#CCCCCC"> just need</font><font color="#E5E5E5"> to</font><font color="#CCCCCC"> response the</font>

416
00:17:46,720 --> 00:17:49,990
entire core yes of<font color="#E5E5E5"> course I do</font>

417
00:17:48,880 --> 00:17:52,720
understand there<font color="#E5E5E5"> are this internal</font>

418
00:17:49,990 --> 00:17:54,820
entities like<font color="#E5E5E5"> FD and where you need to</font>

419
00:17:52,720 --> 00:17:59,760
take this<font color="#CCCCCC"> thing hard and</font><font color="#E5E5E5"> just have but</font>

420
00:17:54,820 --> 00:18:01,928
says say yeah<font color="#CCCCCC"> FD and this is it</font><font color="#E5E5E5"> but</font>

421
00:17:59,760 --> 00:18:04,840
there's some<font color="#CCCCCC"> kind of</font><font color="#E5E5E5"> approach I believe</font>

422
00:18:01,929 --> 00:18:07,539
<font color="#CCCCCC">that is more universal here yeah we had</font>

423
00:18:04,840 --> 00:18:09,760
this idea<font color="#E5E5E5"> to parse maybe the structure</font>

424
00:18:07,539 --> 00:18:11,860
from<font color="#CCCCCC"> the header files</font><font color="#E5E5E5"> to not write them</font>

425
00:18:09,760 --> 00:18:15,370
<font color="#CCCCCC">manually and also had</font><font color="#E5E5E5"> the idea</font><font color="#CCCCCC"> to parse</font>

426
00:18:11,860 --> 00:18:17,678
that<font color="#CCCCCC"> worki buck and pope</font><font color="#E5E5E5"> but in practice</font>

427
00:18:15,370 --> 00:18:19,600
turned out that<font color="#E5E5E5"> writing things with your</font>

428
00:18:17,679 --> 00:18:27,130
hands is faster maybe<font color="#E5E5E5"> we'll come back to</font>

429
00:18:19,600 --> 00:18:30,870
<font color="#E5E5E5">your approach yeah please do this is it</font>

430
00:18:27,130 --> 00:18:30,870
I<font color="#CCCCCC"> guess oh there's one more question</font>

431
00:18:32,190 --> 00:18:36,490
thank you<font color="#CCCCCC"> very</font><font color="#E5E5E5"> much for the presentation</font>

432
00:18:34,000 --> 00:18:39,149
<font color="#CCCCCC">how do you cut</font><font color="#E5E5E5"> budget covers</font><font color="#CCCCCC"> they have</font>

433
00:18:36,490 --> 00:18:43,720
dynamic<font color="#E5E5E5"> tools for that or some abstract</font>

434
00:18:39,149 --> 00:18:46,539
we have the compiler<font color="#CCCCCC"> was written for GCC</font>

435
00:18:43,720 --> 00:18:49,059
<font color="#CCCCCC">there was a</font><font color="#E5E5E5"> good to call back into every</font>

436
00:18:46,539 --> 00:18:52,800
basic<font color="#E5E5E5"> look and the runtime collects the</font>

437
00:18:49,059 --> 00:18:56,570
idea that<font color="#CCCCCC"> call backs and</font><font color="#E5E5E5"> gets that info</font>

438
00:18:52,800 --> 00:18:58,450
<font color="#E5E5E5">to the other space through the</font><font color="#CCCCCC"> debug FS</font>

439
00:18:56,570 --> 00:19:02,458
thanks everyone

440
00:18:58,450 --> 00:19:02,459
[Applause]

