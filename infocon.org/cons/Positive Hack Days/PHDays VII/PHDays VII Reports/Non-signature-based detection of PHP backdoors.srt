1
00:00:01,469 --> 00:00:04,909
hi<font color="#E5E5E5"> everybody</font>

2
00:00:05,150 --> 00:00:11,670
show me hands those of<font color="#CCCCCC"> you who have</font>

3
00:00:07,710 --> 00:00:13,950
experience of<font color="#CCCCCC"> looking for malware at</font>

4
00:00:11,670 --> 00:00:18,660
<font color="#E5E5E5">websites okay thank you</font>

5
00:00:13,950 --> 00:00:22,979
and who of<font color="#CCCCCC"> you ever placed malware on</font>

6
00:00:18,660 --> 00:00:26,430
website<font color="#E5E5E5"> thank you I'm going to discuss</font>

7
00:00:22,980 --> 00:00:30,679
signature<font color="#E5E5E5"> loss detection of PHP</font>

8
00:00:26,430 --> 00:00:33,690
<font color="#CCCCCC">Deborah's my name is really small and</font>

9
00:00:30,679 --> 00:00:35,489
<font color="#E5E5E5">director of revision for seven years</font>

10
00:00:33,690 --> 00:00:38,030
oh we have<font color="#E5E5E5"> been creating websites</font>

11
00:00:35,489 --> 00:00:43,070
developing all the various scanners

12
00:00:38,030 --> 00:00:46,410
<font color="#E5E5E5">protecting</font><font color="#CCCCCC"> websites against</font><font color="#E5E5E5"> cracking</font>

13
00:00:43,070 --> 00:00:48,750
<font color="#E5E5E5">costly</font><font color="#CCCCCC"> in year ago when the fair one new</font>

14
00:00:46,410 --> 00:00:51,390
class of<font color="#E5E5E5"> deaf doors appeared we</font>

15
00:00:48,750 --> 00:00:58,109
encountered problem<font color="#CCCCCC"> I have a scanner a</font>

16
00:00:51,390 --> 00:01:03,149
<font color="#E5E5E5">weak skin violated website to</font><font color="#CCCCCC"> identify</font>

17
00:00:58,109 --> 00:01:06,060
security<font color="#CCCCCC"> threats or more where and at a</font>

18
00:01:03,149 --> 00:01:11,850
<font color="#E5E5E5">certain point in time we started</font>

19
00:01:06,060 --> 00:01:15,930
emitting some<font color="#CCCCCC"> death doors who's never</font>

20
00:01:11,850 --> 00:01:19,710
was meaning what only<font color="#E5E5E5"> because there were</font>

21
00:01:15,930 --> 00:01:24,540
no signatures<font color="#E5E5E5"> but also because they</font>

22
00:01:19,710 --> 00:01:31,500
identifiable signatures<font color="#CCCCCC"> or did not fully</font>

23
00:01:24,540 --> 00:01:34,470
cover all the infection opportunities

24
00:01:31,500 --> 00:01:36,990
<font color="#CCCCCC">although regular expressions describing</font>

25
00:01:34,470 --> 00:01:39,869
those back doors were not<font color="#E5E5E5"> covered by our</font>

26
00:01:36,990 --> 00:01:43,460
<font color="#CCCCCC">-</font><font color="#E5E5E5"> therefore at a certain point of time</font>

27
00:01:39,869 --> 00:01:48,930
<font color="#E5E5E5">we decided</font><font color="#CCCCCC"> to develop a dedicated</font>

28
00:01:43,460 --> 00:01:51,419
algorithm to detect this<font color="#CCCCCC"> kind of malware</font>

29
00:01:48,930 --> 00:01:53,430
injections<font color="#E5E5E5"> which is exactly the topic of</font>

30
00:01:51,420 --> 00:01:57,160
my presentation<font color="#CCCCCC"> that prior to discussing</font>

31
00:01:53,430 --> 00:02:02,180
<font color="#CCCCCC">our algorithm few words of a dead girl</font>

32
00:01:57,160 --> 00:02:02,179
[Music]

33
00:02:03,490 --> 00:02:11,630
<font color="#CCCCCC">helm or wear strips</font><font color="#E5E5E5"> can</font><font color="#CCCCCC"> be detected how</font>

34
00:02:08,780 --> 00:02:14,060
it<font color="#E5E5E5"> all started between</font><font color="#CCCCCC"> 10</font><font color="#E5E5E5"> and 15</font><font color="#CCCCCC"> years</font>

35
00:02:11,630 --> 00:02:18,320
ago<font color="#CCCCCC"> when</font><font color="#E5E5E5"> the number of deaf doors was</font>

36
00:02:14,060 --> 00:02:20,450
not dead<font color="#CCCCCC"> and one could use just the</font>

37
00:02:18,320 --> 00:02:25,090
fingers the one here to count them<font color="#E5E5E5"> there</font>

38
00:02:20,450 --> 00:02:27,649
were two utilities<font color="#E5E5E5"> a system</font>

39
00:02:25,090 --> 00:02:32,510
<font color="#CCCCCC">administrators responsible</font><font color="#E5E5E5"> for</font>

40
00:02:27,650 --> 00:02:36,739
protecting websites<font color="#CCCCCC"> could use the</font>

41
00:02:32,510 --> 00:02:46,190
command line<font color="#CCCCCC"> interface to enter</font>

42
00:02:36,739 --> 00:02:50,000
sequences<font color="#E5E5E5"> we were</font><font color="#CCCCCC"> also</font><font color="#E5E5E5"> well known you</font>

43
00:02:46,190 --> 00:02:55,000
know this should<font color="#E5E5E5"> be enough to detect all</font>

44
00:02:50,000 --> 00:03:00,970
<font color="#CCCCCC">the nouns</font><font color="#E5E5E5"> them know kinds of death doors</font>

45
00:02:55,000 --> 00:03:07,519
and other<font color="#E5E5E5"> malware however the number of</font>

46
00:03:00,970 --> 00:03:12,500
mobile scripts<font color="#E5E5E5"> crew everybody would</font>

47
00:03:07,519 --> 00:03:17,209
engage in building their own databases

48
00:03:12,500 --> 00:03:20,739
of such scripts but their diversity

49
00:03:17,209 --> 00:03:20,739
<font color="#E5E5E5">continued to Joe</font>

50
00:03:26,050 --> 00:03:32,830
<font color="#CCCCCC">and at a certain point it became</font>

51
00:03:27,820 --> 00:03:39,870
difficult to<font color="#E5E5E5"> detect them with hashes</font><font color="#CCCCCC"> so</font>

52
00:03:32,830 --> 00:03:43,920
a fixed fractions of rinds

53
00:03:39,870 --> 00:03:47,470
started being used<font color="#E5E5E5"> to identify value</font>

54
00:03:43,920 --> 00:03:54,760
<font color="#E5E5E5">more complex</font><font color="#CCCCCC"> that the doors or scraper</font>

55
00:03:47,470 --> 00:03:58,300
<font color="#E5E5E5">dealt with with flexible patterns there</font>

56
00:03:54,760 --> 00:04:01,929
are also such a rules for each malware

57
00:03:58,300 --> 00:04:03,810
file<font color="#E5E5E5"> allowing to detect individual</font>

58
00:04:01,930 --> 00:04:06,640
scripts

59
00:04:03,810 --> 00:04:09,730
it appears that are no problems at all

60
00:04:06,640 --> 00:04:13,089
should have<font color="#E5E5E5"> filed</font><font color="#CCCCCC"> a big however</font><font color="#E5E5E5"> what can</font>

61
00:04:09,730 --> 00:04:16,988
<font color="#E5E5E5">be done if it's not big we have a</font>

62
00:04:13,090 --> 00:04:24,510
solution<font color="#CCCCCC"> this is sample</font><font color="#E5E5E5"> death door which</font>

63
00:04:16,988 --> 00:04:28,060
cannot be<font color="#E5E5E5"> detected with a scanner why</font>

64
00:04:24,510 --> 00:04:31,200
firstly because<font color="#E5E5E5"> these backdoors are</font>

65
00:04:28,060 --> 00:04:31,200
really simple

66
00:04:35,750 --> 00:04:42,659
and this example<font color="#E5E5E5"> is really simple it can</font>

67
00:04:40,259 --> 00:04:48,689
<font color="#CCCCCC">be made a bit more complex</font><font color="#E5E5E5"> with</font>

68
00:04:42,659 --> 00:04:50,759
additional blocks and variables<font color="#E5E5E5"> in real</font>

69
00:04:48,689 --> 00:04:55,789
life are not sure<font color="#CCCCCC"> if you can read the</font>

70
00:04:50,759 --> 00:05:01,919
small print<font color="#E5E5E5"> but there are hard to detect</font>

71
00:04:55,789 --> 00:05:06,810
<font color="#E5E5E5">portions for such injections</font><font color="#CCCCCC"> it is very</font>

72
00:05:01,919 --> 00:05:12,900
difficult<font color="#E5E5E5"> to put up a regular</font><font color="#CCCCCC"> expression</font>

73
00:05:06,810 --> 00:05:15,779
<font color="#E5E5E5">to cover all of them what are the</font>

74
00:05:12,900 --> 00:05:24,289
properties<font color="#E5E5E5"> of such</font><font color="#CCCCCC"> malware fragments</font>

75
00:05:15,779 --> 00:05:24,289
<font color="#E5E5E5">most likely they are single line curves</font>

76
00:05:24,500 --> 00:05:31,080
which are normally inserted in the very

77
00:05:27,240 --> 00:05:35,759
beginning<font color="#E5E5E5"> variable obfuscation is always</font>

78
00:05:31,080 --> 00:05:39,419
used you'll not see any functions or

79
00:05:35,759 --> 00:05:44,759
calls<font color="#E5E5E5"> to global array variables</font>

80
00:05:39,419 --> 00:05:48,060
everything is<font color="#E5E5E5"> coded to make analysis</font>

81
00:05:44,759 --> 00:05:53,400
difficult there<font color="#E5E5E5"> is no internal payload</font>

82
00:05:48,060 --> 00:05:57,029
it comes<font color="#E5E5E5"> external air with</font><font color="#CCCCCC"> tasks all as</font>

83
00:05:53,400 --> 00:06:02,789
<font color="#E5E5E5">part of PHP code it can be implicit or</font>

84
00:05:57,029 --> 00:06:05,939
explicit<font color="#E5E5E5"> for it can be</font><font color="#CCCCCC"> tooth</font><font color="#E5E5E5"> variable in</font>

85
00:06:02,789 --> 00:06:09,270
this code you can see<font color="#E5E5E5"> that in direct</font>

86
00:06:05,939 --> 00:06:12,229
calling<font color="#E5E5E5"> is used large number of such</font>

87
00:06:09,270 --> 00:06:12,229
indirect calls

88
00:06:13,079 --> 00:06:19,569
<font color="#E5E5E5">Miraval if you look into the</font><font color="#CCCCCC"> stats of</font><font color="#E5E5E5"> an</font>

89
00:06:16,689 --> 00:06:24,629
insect at website you will find between

90
00:06:19,569 --> 00:06:24,629
<font color="#CCCCCC">two and</font><font color="#E5E5E5"> three types of such backdoors</font><font color="#CCCCCC"> Oh</font>

91
00:06:24,749 --> 00:06:32,499
<font color="#E5E5E5">with a number of modifications which are</font>

92
00:06:30,909 --> 00:06:34,748
very<font color="#CCCCCC"> difficult to</font><font color="#E5E5E5"> detect</font>

93
00:06:32,499 --> 00:06:39,219
I'll give you<font color="#CCCCCC"> example</font><font color="#E5E5E5"> hell one and the</font>

94
00:06:34,749 --> 00:06:44,679
same<font color="#CCCCCC"> back</font><font color="#E5E5E5"> door I can look like at the</font>

95
00:06:39,219 --> 00:06:49,599
same<font color="#E5E5E5"> bat website well this is just</font><font color="#CCCCCC"> a</font>

96
00:06:44,679 --> 00:06:53,349
fragment<font color="#E5E5E5"> not a completely but even here</font>

97
00:06:49,599 --> 00:06:57,579
<font color="#E5E5E5">you can see changed variables segmented</font>

98
00:06:53,349 --> 00:06:59,919
lines which makes the picture<font color="#CCCCCC"> catchy</font><font color="#E5E5E5"> it</font>

99
00:06:57,579 --> 00:07:03,129
can be<font color="#CCCCCC"> gap fourth</font><font color="#E5E5E5"> or cookie other</font>

100
00:06:59,919 --> 00:07:13,029
variables<font color="#E5E5E5"> comments can also be</font>

101
00:07:03,129 --> 00:07:15,219
introduced to<font color="#E5E5E5"> different syntaxes cell if</font>

102
00:07:13,029 --> 00:07:18,959
you<font color="#CCCCCC"> want to use an</font><font color="#E5E5E5"> Orthodox approach to</font>

103
00:07:15,219 --> 00:07:18,959
that it will never be efficient

104
00:07:18,989 --> 00:07:24,448
therefore we decided to come<font color="#CCCCCC"> up with</font><font color="#E5E5E5"> a</font>

105
00:07:21,969 --> 00:07:28,449
<font color="#E5E5E5">certain algorithm to cover everything</font>

106
00:07:24,449 --> 00:07:30,519
<font color="#E5E5E5">what are our requirements</font><font color="#CCCCCC"> to such an</font>

107
00:07:28,449 --> 00:07:33,689
algorithm first<font color="#E5E5E5"> of all it should</font><font color="#CCCCCC"> be</font>

108
00:07:30,519 --> 00:07:37,809
capable<font color="#E5E5E5"> of analyzing of doing a</font>

109
00:07:33,689 --> 00:07:39,550
<font color="#CCCCCC">statistical analysis very</font><font color="#E5E5E5"> often files</font>

110
00:07:37,809 --> 00:07:44,349
can be open a browser

111
00:07:39,550 --> 00:07:48,219
<font color="#E5E5E5">moreover some backup may be</font><font color="#CCCCCC"> unnecessary</font>

112
00:07:44,349 --> 00:07:50,829
<font color="#CCCCCC">in</font><font color="#E5E5E5"> order</font><font color="#CCCCCC"> to identify</font><font color="#E5E5E5"> all the infection</font>

113
00:07:48,219 --> 00:07:54,808
<font color="#CCCCCC">exams it's also necessary to</font><font color="#E5E5E5"> be able</font>

114
00:07:50,829 --> 00:07:54,809
obfuscated fragments of the code

115
00:07:55,709 --> 00:08:02,369
<font color="#E5E5E5">fragmentation of lines should be taken</font>

116
00:07:58,089 --> 00:08:07,239
<font color="#E5E5E5">into account in direct call should also</font>

117
00:08:02,369 --> 00:08:12,299
<font color="#CCCCCC">be classes for example</font><font color="#E5E5E5"> doroth um some</font>

118
00:08:07,239 --> 00:08:12,299
<font color="#CCCCCC">array to interact parameters</font>

119
00:08:14,199 --> 00:08:22,620
it's also necessary to<font color="#E5E5E5"> be able</font><font color="#CCCCCC"> to</font>

120
00:08:18,870 --> 00:08:28,870
<font color="#E5E5E5">generate snippets and it should all be</font>

121
00:08:22,620 --> 00:08:32,320
<font color="#E5E5E5">very performant from fast having</font>

122
00:08:28,870 --> 00:08:34,719
examined<font color="#E5E5E5"> the a kind of tousled</font><font color="#CCCCCC"> beggars</font>

123
00:08:32,320 --> 00:08:38,550
we came to the conclusion<font color="#CCCCCC"> that they were</font>

124
00:08:34,719 --> 00:08:43,779
<font color="#E5E5E5">all based on the</font><font color="#CCCCCC"> same principle</font><font color="#E5E5E5"> until</font><font color="#CCCCCC"> Oh</font>

125
00:08:38,549 --> 00:08:46,439
<font color="#CCCCCC">answering a</font><font color="#E5E5E5"> separate global array of</font>

126
00:08:43,779 --> 00:08:51,760
variables is<font color="#CCCCCC"> a</font><font color="#E5E5E5"> chance for</font><font color="#CCCCCC"> it to function</font>

127
00:08:46,440 --> 00:08:57,070
which either<font color="#E5E5E5"> receives our code it can be</font>

128
00:08:51,760 --> 00:09:01,230
<font color="#CCCCCC">ear Coble</font><font color="#E5E5E5"> admin for various shutdown</font>

129
00:08:57,070 --> 00:09:07,390
functions all the things<font color="#E5E5E5"> that are</font>

130
00:09:01,230 --> 00:09:10,920
executed in Cal merrova classic

131
00:09:07,390 --> 00:09:17,380
parameters such<font color="#E5E5E5"> you know assert</font>

132
00:09:10,920 --> 00:09:22,510
parameters can be sent and<font color="#E5E5E5"> final calls</font>

133
00:09:17,380 --> 00:09:28,920
such as<font color="#CCCCCC"> lengths vary</font><font color="#E5E5E5"> of beverages files</font>

134
00:09:22,510 --> 00:09:33,069
to store<font color="#E5E5E5"> the results or to</font><font color="#CCCCCC"> tell</font><font color="#E5E5E5"> shell</font>

135
00:09:28,920 --> 00:09:36,189
more<font color="#E5E5E5"> recent</font><font color="#CCCCCC"> Deb</font><font color="#E5E5E5"> diversions very often</font>

136
00:09:33,070 --> 00:09:39,670
feature<font color="#CCCCCC"> advised operations</font><font color="#E5E5E5"> above the</font>

137
00:09:36,190 --> 00:09:43,600
lines initially<font color="#E5E5E5"> in the crypt of Cal</font>

138
00:09:39,670 --> 00:09:47,620
sequence comes it can be an encryption

139
00:09:43,600 --> 00:09:51,600
and<font color="#E5E5E5"> created a fragment of PHP code</font><font color="#CCCCCC"> it's</font>

140
00:09:47,620 --> 00:09:53,680
<font color="#E5E5E5">transformed dynamically and decrypted</font>

141
00:09:51,600 --> 00:09:57,550
operation above the lines<font color="#E5E5E5"> and then</font>

142
00:09:53,680 --> 00:10:00,010
executed and very often this kind<font color="#E5E5E5"> of</font>

143
00:09:57,550 --> 00:10:07,649
<font color="#E5E5E5">damn</font><font color="#CCCCCC"> do is the feature</font><font color="#E5E5E5"> indirect function</font>

144
00:10:00,010 --> 00:10:07,649
calls<font color="#CCCCCC"> our indirect variable calling</font>

145
00:10:07,950 --> 00:10:14,880
so seems to<font color="#CCCCCC"> be quite a</font><font color="#E5E5E5"> simple way to</font>

146
00:10:11,910 --> 00:10:17,310
find<font color="#E5E5E5"> these kind of clothes but if we</font>

147
00:10:14,880 --> 00:10:24,180
look at<font color="#CCCCCC"> this source</font><font color="#E5E5E5"> of the shell or</font><font color="#CCCCCC"> a</font>

148
00:10:17,310 --> 00:10:28,500
<font color="#CCCCCC">bag doors</font><font color="#E5E5E5"> of this glass rarely can we</font>

149
00:10:24,180 --> 00:10:31,920
see the<font color="#CCCCCC"> function that's been just</font>

150
00:10:28,500 --> 00:10:37,040
getting<font color="#E5E5E5"> the of arrivals usually there's</font>

151
00:10:31,920 --> 00:10:41,430
<font color="#E5E5E5">a chain there and this chain can also</font>

152
00:10:37,040 --> 00:10:43,199
also<font color="#E5E5E5"> need</font><font color="#CCCCCC"> a certain approach</font><font color="#E5E5E5"> so we</font><font color="#CCCCCC"> read</font>

153
00:10:41,430 --> 00:10:45,060
the file reports for the<font color="#E5E5E5"> technology but</font>

154
00:10:43,199 --> 00:10:48,660
the<font color="#E5E5E5"> PHP then we find out the function</font>

155
00:10:45,060 --> 00:10:51,149
that<font color="#E5E5E5"> I've been talking</font><font color="#CCCCCC"> about on the</font>

156
00:10:48,660 --> 00:10:54,000
function<font color="#CCCCCC"> that can be</font><font color="#E5E5E5"> used in the source</font>

157
00:10:51,149 --> 00:10:56,670
code at the back door then we collect

158
00:10:54,000 --> 00:10:59,779
<font color="#E5E5E5">the arguments of those functions and for</font>

159
00:10:56,670 --> 00:11:04,199
every<font color="#CCCCCC"> arguments about</font><font color="#E5E5E5"> a certain chain</font>

160
00:10:59,779 --> 00:11:10,439
<font color="#E5E5E5">backwards upwards and the top level we</font>

161
00:11:04,199 --> 00:11:14,880
see from where the values of the rivals

162
00:11:10,440 --> 00:11:16,370
are coming from<font color="#E5E5E5"> so mostly it might be</font>

163
00:11:14,880 --> 00:11:22,199
<font color="#E5E5E5">malicious code if we see some problems</font>

164
00:11:16,370 --> 00:11:23,760
<font color="#E5E5E5">if we</font><font color="#CCCCCC"> sum</font><font color="#E5E5E5"> maybe we can see some indirect</font>

165
00:11:22,199 --> 00:11:27,569
addresses to the ribose that also

166
00:11:23,760 --> 00:11:30,269
<font color="#E5E5E5">probably</font><font color="#CCCCCC"> is the malicious code</font><font color="#E5E5E5"> if we</font>

167
00:11:27,570 --> 00:11:34,430
<font color="#E5E5E5">only countries and</font><font color="#CCCCCC"> only back doors but</font>

168
00:11:30,269 --> 00:11:37,079
also vulnerabilities so this actually

169
00:11:34,430 --> 00:11:40,529
allows us<font color="#CCCCCC"> to</font><font color="#E5E5E5"> make the static analyzers</font>

170
00:11:37,079 --> 00:11:42,630
<font color="#CCCCCC">of the code</font><font color="#E5E5E5"> for the</font><font color="#CCCCCC"> RCE</font><font color="#E5E5E5"> and with the</font>

171
00:11:40,529 --> 00:11:45,839
filter for<font color="#E5E5E5"> the whitelist emitter</font><font color="#CCCCCC"> makes</font>

172
00:11:42,630 --> 00:11:47,939
all<font color="#CCCCCC"> the known files if we have false</font>

173
00:11:45,839 --> 00:11:48,810
executions down<font color="#CCCCCC"> without the</font><font color="#E5E5E5"> snippet so</font>

174
00:11:47,940 --> 00:11:51,569
<font color="#E5E5E5">this how it works</font>

175
00:11:48,810 --> 00:11:53,518
it<font color="#E5E5E5"> looks like drawing a bit now when you</font>

176
00:11:51,569 --> 00:11:55,649
have this circle<font color="#E5E5E5"> and circle and circle</font>

177
00:11:53,519 --> 00:11:57,050
circle now<font color="#E5E5E5"> we both on the details a</font>

178
00:11:55,649 --> 00:12:00,480
couple<font color="#CCCCCC"> examples here</font>

179
00:11:57,050 --> 00:12:03,269
<font color="#CCCCCC">example</font><font color="#E5E5E5"> number one the system function</font>

180
00:12:00,480 --> 00:12:04,740
called goes<font color="#E5E5E5"> in directly and gets the</font>

181
00:12:03,269 --> 00:12:06,899
argument from the cookie massive this

182
00:12:04,740 --> 00:12:09,209
can be detected<font color="#E5E5E5"> second thing is the</font>

183
00:12:06,899 --> 00:12:10,950
indirect call of the function<font color="#E5E5E5"> and third</font>

184
00:12:09,209 --> 00:12:13,920
this<font color="#E5E5E5"> evident</font>

185
00:12:10,950 --> 00:12:16,350
<font color="#E5E5E5">name of</font><font color="#CCCCCC"> the function</font><font color="#E5E5E5"> is sent to the get</font>

186
00:12:13,920 --> 00:12:18,180
<font color="#CCCCCC">parameter and the arguments into the</font>

187
00:12:16,350 --> 00:12:20,490
host permit here is a fifth example<font color="#CCCCCC"> its</font>

188
00:12:18,180 --> 00:12:23,760
<font color="#CCCCCC">registers done function it's the</font>

189
00:12:20,490 --> 00:12:26,070
callable<font color="#E5E5E5"> argument and this word get the</font>

190
00:12:23,760 --> 00:12:28,529
value of<font color="#CCCCCC"> the positive arrival and then</font>

191
00:12:26,070 --> 00:12:31,820
then the nightly last one is the data<font color="#E5E5E5"> so</font>

192
00:12:28,529 --> 00:12:34,139
we've been testing<font color="#CCCCCC"> it</font><font color="#E5E5E5"> in the real life</font>

193
00:12:31,820 --> 00:12:36,269
<font color="#CCCCCC">into</font><font color="#E5E5E5"> certain samples we put it</font><font color="#CCCCCC"> through</font>

194
00:12:34,139 --> 00:12:38,910
this<font color="#CCCCCC"> algorithm was all</font><font color="#E5E5E5"> Cade</font><font color="#CCCCCC"> was detected</font>

195
00:12:36,269 --> 00:12:40,410
according<font color="#E5E5E5"> to the criteria</font><font color="#CCCCCC"> that</font><font color="#E5E5E5"> I have</font>

196
00:12:38,910 --> 00:12:42,240
mentioned<font color="#E5E5E5"> one that I criteria</font><font color="#CCCCCC"> that</font><font color="#E5E5E5"> I</font>

197
00:12:40,410 --> 00:12:43,920
mentioned so<font color="#E5E5E5"> this is the result of the</font>

198
00:12:42,240 --> 00:12:46,079
check from<font color="#CCCCCC"> some</font><font color="#E5E5E5"> accomplice this snippet</font>

199
00:12:43,920 --> 00:12:47,939
<font color="#E5E5E5">starting from the time point when we</font>

200
00:12:46,079 --> 00:12:51,239
have identified the<font color="#CCCCCC"> caller or</font><font color="#E5E5E5"> the dress</font>

201
00:12:47,940 --> 00:12:53,670
to<font color="#CCCCCC"> the arrival</font><font color="#E5E5E5"> one call to the</font><font color="#CCCCCC"> arrival</font>

202
00:12:51,240 --> 00:12:55,699
it's quite a quick<font color="#E5E5E5"> thing to work seven</font>

203
00:12:53,670 --> 00:12:58,110
thousand<font color="#E5E5E5"> two</font><font color="#CCCCCC"> new files</font>

204
00:12:55,699 --> 00:13:01,529
we're checked in<font color="#E5E5E5"> ten seconds so it's</font>

205
00:12:58,110 --> 00:13:07,680
<font color="#E5E5E5">about 600 700 miles a second so the</font>

206
00:13:01,529 --> 00:13:09,510
standard<font color="#E5E5E5"> CMS we have no</font><font color="#CCCCCC"> pulse calls we</font>

207
00:13:07,680 --> 00:13:14,250
<font color="#E5E5E5">can of course upgrade this thing as much</font>

208
00:13:09,510 --> 00:13:17,100
<font color="#E5E5E5">as we want to one of the closest</font>

209
00:13:14,250 --> 00:13:18,839
objectives is to<font color="#E5E5E5"> analyze</font><font color="#CCCCCC"> big HP files</font>

210
00:13:17,100 --> 00:13:20,519
partially and<font color="#E5E5E5"> then putting stitching the</font>

211
00:13:18,839 --> 00:13:22,680
results together<font color="#E5E5E5"> then analyzing certain</font>

212
00:13:20,519 --> 00:13:28,920
fragmented lines which you<font color="#E5E5E5"> might be more</font>

213
00:13:22,680 --> 00:13:32,760
<font color="#E5E5E5">complicated using</font><font color="#CCCCCC"> cihr calls and of</font>

214
00:13:28,920 --> 00:13:34,500
course young<font color="#E5E5E5"> men</font><font color="#CCCCCC"> fine</font><font color="#E5E5E5"> one calls calls</font>

215
00:13:32,760 --> 00:13:36,180
calls if you have any questions the

216
00:13:34,500 --> 00:13:42,870
algorithm and if you have any questions

217
00:13:36,180 --> 00:13:46,349
please<font color="#E5E5E5"> I'd like to ask you you</font><font color="#CCCCCC"> have been</font>

218
00:13:42,870 --> 00:13:47,940
writing<font color="#CCCCCC"> that give us cookie are the</font>

219
00:13:46,350 --> 00:13:50,850
entry predators<font color="#E5E5E5"> but if we look at the</font>

220
00:13:47,940 --> 00:13:53,480
PHP info as the data transmission<font color="#CCCCCC"> to the</font>

221
00:13:50,850 --> 00:13:57,149
script or<font color="#CCCCCC"> anything else they try that</font>

222
00:13:53,480 --> 00:13:58,620
<font color="#CCCCCC">well the algorithm itself</font><font color="#E5E5E5"> is made for a</font>

223
00:13:57,149 --> 00:14:01,230
certain class<font color="#E5E5E5"> of the</font><font color="#CCCCCC"> backdoors</font>

224
00:13:58,620 --> 00:14:02,670
<font color="#E5E5E5">so those back doors they do not get data</font>

225
00:14:01,230 --> 00:14:05,519
<font color="#E5E5E5">from the outside sources</font>

226
00:14:02,670 --> 00:14:08,430
<font color="#E5E5E5">apart from the</font><font color="#CCCCCC"> superglobal array of</font>

227
00:14:05,519 --> 00:14:11,240
arrivals<font color="#E5E5E5"> so similarly can get the data</font>

228
00:14:08,430 --> 00:14:14,239
from<font color="#E5E5E5"> the database or from some files</font>

229
00:14:11,240 --> 00:14:14,240
<font color="#E5E5E5">anything</font>

230
00:14:16,680 --> 00:14:22,469
your<font color="#CCCCCC"> priest</font><font color="#E5E5E5"> nor let</font><font color="#CCCCCC"> me clarify</font><font color="#E5E5E5"> my</font>

231
00:14:19,649 --> 00:14:25,980
question<font color="#CCCCCC"> this</font><font color="#E5E5E5"> be in parade identifies we</font>

232
00:14:22,470 --> 00:14:29,279
had our values usually the attackers

233
00:14:25,980 --> 00:14:35,100
start<font color="#CCCCCC"> suffering then</font><font color="#E5E5E5"> HP</font><font color="#CCCCCC"> then parson</font>

234
00:14:29,279 --> 00:14:37,709
takes the headers<font color="#E5E5E5"> and then yes I have</font>

235
00:14:35,100 --> 00:14:41,759
several rivals in my list where the<font color="#CCCCCC"> most</font>

236
00:14:37,709 --> 00:14:43,979
<font color="#E5E5E5">headers go but that guy's use another</font>

237
00:14:41,759 --> 00:14:46,559
seven or pasta<font color="#E5E5E5"> requests</font><font color="#CCCCCC"> for</font><font color="#E5E5E5"> cookie</font>

238
00:14:43,980 --> 00:14:48,720
Pacific Beach<font color="#CCCCCC"> be info</font><font color="#E5E5E5"> that sparse</font>

239
00:14:46,559 --> 00:14:51,059
regularly<font color="#E5E5E5"> and then how do you explain</font>

240
00:14:48,720 --> 00:14:56,339
<font color="#CCCCCC">that</font><font color="#E5E5E5"> well maybe we'll see I will check</font>

241
00:14:51,059 --> 00:15:00,029
<font color="#E5E5E5">will we might add that</font><font color="#CCCCCC"> two-time pasta</font>

242
00:14:56,339 --> 00:15:03,929
<font color="#CCCCCC">noises yeah</font><font color="#E5E5E5"> which file parser do you use</font>

243
00:15:00,029 --> 00:15:05,970
for PHP<font color="#E5E5E5"> files</font><font color="#CCCCCC"> and what did you write</font>

244
00:15:03,929 --> 00:15:08,249
<font color="#CCCCCC">your project with yeah it's it's</font>

245
00:15:05,970 --> 00:15:09,990
<font color="#CCCCCC">actually</font><font color="#E5E5E5"> in with PHP and</font><font color="#CCCCCC"> use the</font>

246
00:15:08,249 --> 00:15:12,059
<font color="#E5E5E5">standard page particular this is</font><font color="#CCCCCC"> the</font>

247
00:15:09,990 --> 00:15:14,819
<font color="#E5E5E5">standard tool to get this</font><font color="#CCCCCC"> index is</font><font color="#E5E5E5"> just</font>

248
00:15:12,059 --> 00:15:16,800
one call there and in spring gives<font color="#E5E5E5"> back</font>

249
00:15:14,819 --> 00:15:20,519
to<font color="#CCCCCC"> structure it's just a structure so</font>

250
00:15:16,800 --> 00:15:22,229
<font color="#CCCCCC">Tekken Iser it actually gives you the</font>

251
00:15:20,519 --> 00:15:26,670
<font color="#CCCCCC">stream of tokens so you cannot</font><font color="#E5E5E5"> analyze</font>

252
00:15:22,230 --> 00:15:29,189
<font color="#E5E5E5">the cherry right the tree comes as a</font>

253
00:15:26,670 --> 00:15:31,620
<font color="#CCCCCC">result and then we look</font><font color="#E5E5E5"> at the tree and</font>

254
00:15:29,189 --> 00:15:37,139
<font color="#E5E5E5">go down or</font><font color="#CCCCCC"> up the tree depending on what</font>

255
00:15:31,620 --> 00:15:40,499
we have been able<font color="#E5E5E5"> to see certain parts</font>

256
00:15:37,139 --> 00:15:42,779
we recall would come back<font color="#CCCCCC"> to them but</font>

257
00:15:40,499 --> 00:15:44,670
it's one pass<font color="#CCCCCC"> through we cannot guilt</font>

258
00:15:42,779 --> 00:15:56,639
<font color="#E5E5E5">all the list of the arguments to</font>

259
00:15:44,670 --> 00:16:02,219
function we do it recursively in several

260
00:15:56,639 --> 00:16:03,629
passes<font color="#CCCCCC"> deeper sense</font><font color="#E5E5E5"> in situation when a</font>

261
00:16:02,220 --> 00:16:04,589
<font color="#E5E5E5">developer at the door get into</font><font color="#CCCCCC"> the</font>

262
00:16:03,629 --> 00:16:08,009
different private land uses<font color="#E5E5E5"> that</font>

263
00:16:04,589 --> 00:16:10,350
<font color="#CCCCCC">varietal further on there's simple</font>

264
00:16:08,009 --> 00:16:12,990
renaming<font color="#E5E5E5"> he doesn't want</font><font color="#CCCCCC"> to write the</font>

265
00:16:10,350 --> 00:16:15,269
<font color="#E5E5E5">dollar underscore get he written Doggett</font>

266
00:16:12,990 --> 00:16:17,100
<font color="#CCCCCC">and then he walks</font><font color="#E5E5E5"> the perimeter yes this</font>

267
00:16:15,269 --> 00:16:18,910
is why we used it if we analyze<font color="#E5E5E5"> the</font>

268
00:16:17,100 --> 00:16:23,410
change

269
00:16:18,910 --> 00:16:25,510
and if we see that<font color="#CCCCCC"> rivals gets goes to a</font>

270
00:16:23,410 --> 00:16:26,920
a<font color="#CCCCCC"> to go SBB to goes to</font><font color="#E5E5E5"> C and</font><font color="#CCCCCC"> C's</font><font color="#E5E5E5"> been</font>

271
00:16:25,510 --> 00:16:29,950
<font color="#E5E5E5">used by the function of course we catch</font>

272
00:16:26,920 --> 00:16:31,180
that<font color="#CCCCCC"> too for that</font><font color="#E5E5E5"> we have actually</font>

273
00:16:29,950 --> 00:16:35,020
created all the complexity with

274
00:16:31,180 --> 00:16:39,819
<font color="#CCCCCC">recognizers</font><font color="#E5E5E5"> we could have otherwise just</font>

275
00:16:35,020 --> 00:16:41,560
<font color="#E5E5E5">be</font><font color="#CCCCCC"> using</font><font color="#E5E5E5"> the regular expressions if</font>

276
00:16:39,820 --> 00:16:44,060
there are no questions<font color="#E5E5E5"> thank you very</font>

277
00:16:41,560 --> 00:16:47,380
<font color="#E5E5E5">much for your attention</font>

278
00:16:44,060 --> 00:16:47,380
[Applause]

