1
00:00:10,480 --> 00:00:12,400
hunting for active directory certificate

2
00:00:12,400 --> 00:00:14,880
services abuse we're going to cover this

3
00:00:14,880 --> 00:00:16,720
stuff or rather we were going to cover

4
00:00:16,720 --> 00:00:18,240
the stuff that was in the wild for the

5
00:00:18,240 --> 00:00:21,119
past uh 18 months or so and then we

6
00:00:21,119 --> 00:00:22,720
realized that we couldn't really cover

7
00:00:22,720 --> 00:00:25,199
it all that's why we decided to focus in

8
00:00:25,199 --> 00:00:28,000
close exclusively on this certification

9
00:00:28,000 --> 00:00:29,760
service i'm gonna skip

10
00:00:29,760 --> 00:00:32,238
the biography slides let me remind you

11
00:00:32,238 --> 00:00:35,920
what this certification service is

12
00:00:35,920 --> 00:00:38,239
this is effectively microsoft steak on

13
00:00:38,239 --> 00:00:40,718
pki

14
00:00:41,040 --> 00:00:44,040
probably

15
00:00:44,320 --> 00:00:46,640
effectively you know a combination of

16
00:00:46,640 --> 00:00:48,399
services designed to support the life

17
00:00:48,399 --> 00:00:50,079
cycle of certificates it's actually

18
00:00:50,079 --> 00:00:53,199
called microsoft certification services

19
00:00:53,199 --> 00:00:56,000
to use microsoft name for it

20
00:00:56,000 --> 00:00:57,920
so microsoft ca

21
00:00:57,920 --> 00:01:01,440
is switched off by default and we know

22
00:01:01,440 --> 00:01:03,760
from practice in numerous corporate

23
00:01:03,760 --> 00:01:06,560
infrastructures it can actually be found

24
00:01:06,560 --> 00:01:08,720
you know administrators will be using it

25
00:01:08,720 --> 00:01:11,600
for psi issues of sl certificates for

26
00:01:11,600 --> 00:01:13,600
user authentication

27
00:01:13,600 --> 00:01:16,400
vpns and stuff so although it's not a

28
00:01:16,400 --> 00:01:18,240
default element of a domain

29
00:01:18,240 --> 00:01:20,720
configuration you will be able to see it

30
00:01:20,720 --> 00:01:22,640
a lot

31
00:01:22,640 --> 00:01:23,840
it's actually

32
00:01:23,840 --> 00:01:26,400
a pretty sophisticated component you

33
00:01:26,400 --> 00:01:28,799
know in terms of configuration this is

34
00:01:28,799 --> 00:01:30,640
close to hell

35
00:01:30,640 --> 00:01:32,640
i mean if you're serious about

36
00:01:32,640 --> 00:01:35,840
configuring it properly

37
00:01:36,159 --> 00:01:39,119
so it's a comprehensive system it covers

38
00:01:39,119 --> 00:01:41,280
lots and lots of parameters and if you

39
00:01:41,280 --> 00:01:43,520
fumble the configuration

40
00:01:43,520 --> 00:01:45,600
your domain will be very easy to

41
00:01:45,600 --> 00:01:48,320
compromise take it as an axiom

42
00:01:48,320 --> 00:01:50,960
if you have a microsoft ca in your

43
00:01:50,960 --> 00:01:55,399
domain and it contains misconfigs

44
00:02:04,560 --> 00:02:06,479
so if it's a certification center

45
00:02:06,479 --> 00:02:09,199
obviously certificates should be the

46
00:02:09,199 --> 00:02:11,120
main entity there and what's wrong about

47
00:02:11,120 --> 00:02:12,959
them and how can they lead to domain

48
00:02:12,959 --> 00:02:15,440
being compromised

49
00:02:15,440 --> 00:02:17,440
okay let's discuss how can you actually

50
00:02:17,440 --> 00:02:20,640
use microsoft certification certificates

51
00:02:20,640 --> 00:02:23,280
well obviously it can be presented

52
00:02:23,280 --> 00:02:26,160
instead of a password by a user which

53
00:02:26,160 --> 00:02:27,920
means that you can actually you know

54
00:02:27,920 --> 00:02:30,400
take it and go through certification a

55
00:02:30,400 --> 00:02:32,879
domain and secondly if you have a

56
00:02:32,879 --> 00:02:35,360
particular certificate you can actually

57
00:02:35,360 --> 00:02:39,599
issue certificates for other users

58
00:02:41,120 --> 00:02:44,000
thirdly and last obviously when you have

59
00:02:44,000 --> 00:02:45,920
a certificate

60
00:02:45,920 --> 00:02:48,080
you can actually take an empty hash of a

61
00:02:48,080 --> 00:02:51,120
particular user out

62
00:03:02,720 --> 00:03:05,680
you can also use it to issue say vpn

63
00:03:05,680 --> 00:03:07,599
certificates but this vector we're not

64
00:03:07,599 --> 00:03:09,760
going to cover in our presentation so

65
00:03:09,760 --> 00:03:11,840
how can you get a certificate as an

66
00:03:11,840 --> 00:03:13,120
attacker

67
00:03:13,120 --> 00:03:15,599
well first you can have an issue

68
00:03:15,599 --> 00:03:17,200
legitimately

69
00:03:17,200 --> 00:03:20,239
from a ca for example or alternatively

70
00:03:20,239 --> 00:03:22,400
it can be stolen for example a

71
00:03:22,400 --> 00:03:24,879
certificate issued to another user

72
00:03:24,879 --> 00:03:27,680
may be hijacked or you know it can be

73
00:03:27,680 --> 00:03:28,720
spoofed

74
00:03:28,720 --> 00:03:30,640
so everybody knows about the golden

75
00:03:30,640 --> 00:03:32,879
ticket attack i assume so

76
00:03:32,879 --> 00:03:34,640
effectively you know you can issue

77
00:03:34,640 --> 00:03:36,319
kerberos with tickets for pretty much

78
00:03:36,319 --> 00:03:37,920
any user so

79
00:03:37,920 --> 00:03:40,400
there is a similar golden certificate

80
00:03:40,400 --> 00:03:42,400
type of attack so with this certificate

81
00:03:42,400 --> 00:03:44,400
it should be able to issue certificates

82
00:03:44,400 --> 00:03:46,480
for any user regardless of domain

83
00:03:46,480 --> 00:03:48,879
settings

84
00:03:54,080 --> 00:03:55,360
certificates can be used for

85
00:03:55,360 --> 00:03:56,640
authentication

86
00:03:56,640 --> 00:03:58,879
and this begs the question of what if

87
00:03:58,879 --> 00:04:00,720
i'm not using authentication

88
00:04:00,720 --> 00:04:03,680
certificate-based authentication in my

89
00:04:03,680 --> 00:04:06,000
uh windows environment you should still

90
00:04:06,000 --> 00:04:07,920
be concerned about that like even if you

91
00:04:07,920 --> 00:04:09,280
are not using smart cards for

92
00:04:09,280 --> 00:04:10,799
authentication

93
00:04:10,799 --> 00:04:14,080
if you have ca running

94
00:04:16,238 --> 00:04:17,839
it should be possible to get

95
00:04:17,839 --> 00:04:20,079
authenticated using a certificate even

96
00:04:20,079 --> 00:04:22,880
if you don't have a smart card so if you

97
00:04:22,880 --> 00:04:24,960
have a certificate you can actually send

98
00:04:24,960 --> 00:04:27,280
a query to the domain controller and get

99
00:04:27,280 --> 00:04:29,680
a tgt ticket from kerberos

100
00:04:29,680 --> 00:04:31,759
and then you know with the tgt ticket

101
00:04:31,759 --> 00:04:33,840
you should be able to recap in the

102
00:04:33,840 --> 00:04:36,159
system

103
00:04:39,360 --> 00:04:43,400
for one reason or another

104
00:04:54,960 --> 00:04:57,040
with ldap protocol

105
00:04:57,040 --> 00:04:58,960
you should be able to get authenticated

106
00:04:58,960 --> 00:05:00,720
with the help of a certificate so if

107
00:05:00,720 --> 00:05:03,199
ldap authentication is possible then on

108
00:05:03,199 --> 00:05:05,120
the domain controller

109
00:05:05,120 --> 00:05:08,400
we can do whatever we like about active

110
00:05:08,400 --> 00:05:10,880
directory objects like create users

111
00:05:10,880 --> 00:05:15,240
delay teasers and so on

112
00:05:30,800 --> 00:05:33,919
that was published by spectre ops in

113
00:05:33,919 --> 00:05:36,880
summer 2021

114
00:05:36,880 --> 00:05:39,840
certified

115
00:05:42,960 --> 00:05:44,960
and so there they talked about all the

116
00:05:44,960 --> 00:05:47,039
typical misconfigs in

117
00:05:47,039 --> 00:05:48,800
the microsoft solution and they also

118
00:05:48,800 --> 00:05:52,960
talked about uh vectors of abuse

119
00:06:04,160 --> 00:06:06,240
escalation attacks so when a

120
00:06:06,240 --> 00:06:09,039
non-privileged user can perform certain

121
00:06:09,039 --> 00:06:11,919
actions to become a privileged user

122
00:06:11,919 --> 00:06:13,759
i absolutely recommend that you read

123
00:06:13,759 --> 00:06:16,000
this document it's actually a long read

124
00:06:16,000 --> 00:06:19,199
like 140 pages not exactly it's actually

125
00:06:19,199 --> 00:06:22,319
a page turner it won't be good if like

126
00:06:22,319 --> 00:06:25,280
you have uh problems going to sleep so

127
00:06:25,280 --> 00:06:27,280
if you are serious about uh active

128
00:06:27,280 --> 00:06:30,450
directory security do read it

129
00:06:30,450 --> 00:06:33,500
[Music]

130
00:06:34,400 --> 00:06:37,680
they provided suffixes for names of

131
00:06:37,680 --> 00:06:39,280
various attacks like

132
00:06:39,280 --> 00:06:42,479
persistence and escalation

133
00:06:42,479 --> 00:06:45,440
and for this particular presentation we

134
00:06:45,440 --> 00:06:47,280
are focusing on

135
00:06:47,280 --> 00:06:50,080
esc attacks uh that's escalation attacks

136
00:06:50,080 --> 00:06:52,240
and we're going to cover all the eight

137
00:06:52,240 --> 00:06:55,680
escalation attacks that spectre ops guys

138
00:06:55,680 --> 00:06:58,000
described and we'll also talk about how

139
00:06:58,000 --> 00:07:00,319
you can actually detect him

140
00:07:00,319 --> 00:07:02,319
in your sock for example how you can

141
00:07:02,319 --> 00:07:04,639
spot him with cis mon

142
00:07:04,639 --> 00:07:06,479
so naturally you know when we talk about

143
00:07:06,479 --> 00:07:08,880
uh attack detection

144
00:07:08,880 --> 00:07:11,280
well we need to be serious about audits

145
00:07:11,280 --> 00:07:13,840
and audits of certification centers take

146
00:07:13,840 --> 00:07:16,240
two steps to configure first in the

147
00:07:16,240 --> 00:07:19,599
extended audit policy

148
00:07:23,280 --> 00:07:26,000
to include certification center in the

149
00:07:26,000 --> 00:07:29,680
audits list and secondly you need to put

150
00:07:29,680 --> 00:07:32,639
ticks in front of these specific types

151
00:07:32,639 --> 00:07:34,880
and categories of events that you want

152
00:07:34,880 --> 00:07:36,800
to be informed about

153
00:07:36,800 --> 00:07:39,199
it's actually not a noisy audit so

154
00:07:39,199 --> 00:07:40,960
having all the ticks in all the tick

155
00:07:40,960 --> 00:07:42,880
boxes makes sense

156
00:07:42,880 --> 00:07:45,840
so this configuration of text for the

157
00:07:45,840 --> 00:07:48,479
certification center will be translated

158
00:07:48,479 --> 00:07:50,800
into bitmask that will be stored in the

159
00:07:50,800 --> 00:07:53,039
register in the key shown in the

160
00:07:53,039 --> 00:07:56,440
previous slides

161
00:08:07,199 --> 00:08:09,599
you know playing with the the registry

162
00:08:09,599 --> 00:08:11,840
key for the certification center like if

163
00:08:11,840 --> 00:08:15,280
somebody starts changing audit settings

164
00:08:15,280 --> 00:08:17,840
that should you know raise some eyebrows

165
00:08:17,840 --> 00:08:22,440
because this doesn't happen everyday

166
00:08:30,479 --> 00:08:33,519
for example we see here event id 4845

167
00:08:33,519 --> 00:08:35,839
related to

168
00:08:35,839 --> 00:08:38,799
audit settings change

169
00:08:38,799 --> 00:08:41,120
another

170
00:08:42,240 --> 00:08:44,240
so what is it that we are interested in

171
00:08:44,240 --> 00:08:47,200
spotting in terms of attack detection so

172
00:08:47,200 --> 00:08:48,800
the process of certification is like

173
00:08:48,800 --> 00:08:50,880
this the user will send a request for

174
00:08:50,880 --> 00:08:53,040
issues of this all that certificate

175
00:08:53,040 --> 00:08:56,640
firstly into a particular template

176
00:08:57,519 --> 00:08:59,279
it would be nice to actually see the

177
00:08:59,279 --> 00:09:02,880
event related to this request

178
00:09:02,880 --> 00:09:04,800
and this request will be automatically

179
00:09:04,800 --> 00:09:06,880
approved by the certification center or

180
00:09:06,880 --> 00:09:09,760
manually approved and it will go back i

181
00:09:09,760 --> 00:09:12,320
mean the certificate will go back to the

182
00:09:12,320 --> 00:09:13,680
user

183
00:09:13,680 --> 00:09:16,480
so again this approval event would be

184
00:09:16,480 --> 00:09:18,480
great to monitor

185
00:09:18,480 --> 00:09:20,080
just like

186
00:09:20,080 --> 00:09:21,760
changes in

187
00:09:21,760 --> 00:09:23,600
in the settings related to the security

188
00:09:23,600 --> 00:09:26,160
of the system

189
00:09:26,160 --> 00:09:27,920
i'm talking about the settings for a

190
00:09:27,920 --> 00:09:29,440
template template certification

191
00:09:29,440 --> 00:09:30,880
templates as well as certification

192
00:09:30,880 --> 00:09:33,279
centers

193
00:09:34,560 --> 00:09:37,680
certificate template actually describes

194
00:09:37,680 --> 00:09:40,240
access rights to the certificate and its

195
00:09:40,240 --> 00:09:43,200
constraints so it effectively talks

196
00:09:43,200 --> 00:09:46,000
about who can actually request it who

197
00:09:46,000 --> 00:09:47,360
can grant it

198
00:09:47,360 --> 00:09:51,399
and who can edit it

199
00:09:56,240 --> 00:09:58,640
would like to see all the facts related

200
00:09:58,640 --> 00:10:01,120
to template creation and template

201
00:10:01,120 --> 00:10:03,920
modification unfortunately it is

202
00:10:03,920 --> 00:10:06,480
impossible to do it in the run time in

203
00:10:06,480 --> 00:10:08,720
real time in other words he will not be

204
00:10:08,720 --> 00:10:10,560
able to be notified

205
00:10:10,560 --> 00:10:12,560
of that

206
00:10:12,560 --> 00:10:14,720
however

207
00:10:14,720 --> 00:10:16,800
there is a bypass

208
00:10:16,800 --> 00:10:18,959
but

209
00:10:21,600 --> 00:10:23,680
which will be generated at the moment

210
00:10:23,680 --> 00:10:26,160
when the certification center

211
00:10:26,160 --> 00:10:28,399
is actually reading certificate template

212
00:10:28,399 --> 00:10:30,399
in its memory by default it happens in

213
00:10:30,399 --> 00:10:32,399
two cases

214
00:10:32,399 --> 00:10:35,279
one is when this request i'm sorry this

215
00:10:35,279 --> 00:10:37,600
certificate is the first requested

216
00:10:37,600 --> 00:10:39,360
person into the template which means you

217
00:10:39,360 --> 00:10:41,600
know it will only happen once

218
00:10:41,600 --> 00:10:44,320
and second one is you know when it's

219
00:10:44,320 --> 00:10:46,079
requested for the first time after the

220
00:10:46,079 --> 00:10:49,599
certificate has been changed

221
00:10:49,760 --> 00:10:53,200
so this event will actually contain

222
00:10:53,200 --> 00:10:55,440
a lot of useful information for

223
00:10:55,440 --> 00:10:58,000
discovering misconfigured templates that

224
00:10:58,000 --> 00:11:00,640
could be abused by attackers we can

225
00:11:00,640 --> 00:11:03,200
actually increase the frequency of such

226
00:11:03,200 --> 00:11:04,720
events if we play with the

227
00:11:04,720 --> 00:11:06,160
configurations

228
00:11:06,160 --> 00:11:08,959
there is a flag there

229
00:11:08,959 --> 00:11:11,920
an edit flag in the bitmask

230
00:11:11,920 --> 00:11:15,120
so we can add another

231
00:11:26,959 --> 00:11:29,920
certificates template is

232
00:11:29,920 --> 00:11:32,240
triggered

233
00:11:32,720 --> 00:11:35,519
or at least after every start of the

234
00:11:35,519 --> 00:11:38,160
certification center and will be done

235
00:11:38,160 --> 00:11:40,880
like the counter will be separate for

236
00:11:40,880 --> 00:11:44,079
different certificate templates so uh

237
00:11:44,079 --> 00:11:45,600
this time you will be getting more of

238
00:11:45,600 --> 00:11:48,480
these notifications for example every

239
00:11:48,480 --> 00:11:52,240
time the service is restarted

240
00:11:54,079 --> 00:11:56,480
now there are two events related to

241
00:11:56,480 --> 00:11:58,480
issuing of uh

242
00:11:58,480 --> 00:12:02,639
certificates 4886 and 87.

243
00:12:04,880 --> 00:12:07,040
now the developers who designed this

244
00:12:07,040 --> 00:12:07,920
event

245
00:12:07,920 --> 00:12:10,160
needs spanking really because this

246
00:12:10,160 --> 00:12:12,079
events are really non-informative for

247
00:12:12,079 --> 00:12:14,320
example they do not contain the name of

248
00:12:14,320 --> 00:12:16,800
the certificate template they do not

249
00:12:16,800 --> 00:12:19,040
indicate the user who requested this

250
00:12:19,040 --> 00:12:21,600
certificate like for detection these

251
00:12:21,600 --> 00:12:24,320
events are pretty much useless

252
00:12:24,320 --> 00:12:26,880
the only thing you get to know is that

253
00:12:26,880 --> 00:12:29,600
somebody requested a certificate and we

254
00:12:29,600 --> 00:12:32,079
don't even know which template it is and

255
00:12:32,079 --> 00:12:34,240
yes we also know that this certificate

256
00:12:34,240 --> 00:12:35,600
has been issued

257
00:12:35,600 --> 00:12:37,519
but that's weird isn't it

258
00:12:37,519 --> 00:12:39,680
given that in the database of the

259
00:12:39,680 --> 00:12:41,600
certification center you should be able

260
00:12:41,600 --> 00:12:43,920
to find loads of information including

261
00:12:43,920 --> 00:12:46,079
the process name the name of the process

262
00:12:46,079 --> 00:12:48,959
that actually initiated certifications

263
00:12:48,959 --> 00:12:51,279
and you know if

264
00:12:51,279 --> 00:12:53,279
he was uh for example requested through

265
00:12:53,279 --> 00:12:54,959
the web interface then we'll also be

266
00:12:54,959 --> 00:12:57,519
able to find the user id there

267
00:12:57,519 --> 00:13:00,639
why microsoft didn't you know expose it

268
00:13:00,639 --> 00:13:04,560
as event information is beyond me

269
00:13:04,639 --> 00:13:06,800
and

270
00:13:18,959 --> 00:13:21,279
so when for example there is a change in

271
00:13:21,279 --> 00:13:23,279
access rights to a particular template

272
00:13:23,279 --> 00:13:24,720
you would certainly want to learn about

273
00:13:24,720 --> 00:13:28,240
that unfortunately we have a 4892 event

274
00:13:28,240 --> 00:13:30,240
for that

275
00:13:30,240 --> 00:13:34,680
so first type of attack esc

276
00:13:44,720 --> 00:13:47,199
which effectively enables setting

277
00:13:47,199 --> 00:13:49,360
subject alternative names

278
00:13:49,360 --> 00:13:51,680
this way you can actually use the same

279
00:13:51,680 --> 00:13:53,519
certificate for several domains

280
00:13:53,519 --> 00:13:55,040
simultaneously

281
00:13:55,040 --> 00:13:56,800
simply by showing you know subject

282
00:13:56,800 --> 00:13:59,040
alternative names for them

283
00:13:59,040 --> 00:13:59,839
now

284
00:13:59,839 --> 00:14:00,880
you can

285
00:14:00,880 --> 00:14:03,199
for example also use it

286
00:14:03,199 --> 00:14:05,440
to indicate names of users and the

287
00:14:05,440 --> 00:14:08,639
domain controller

288
00:14:08,639 --> 00:14:11,680
if a subject alternative name is

289
00:14:11,680 --> 00:14:14,720
maintained in it or will set it

290
00:14:14,720 --> 00:14:17,199
i'm sorry will be driven more by the

291
00:14:17,199 --> 00:14:19,279
alternative name than the

292
00:14:19,279 --> 00:14:21,920
regular name

293
00:14:22,959 --> 00:14:24,959
if you allow users to indicate

294
00:14:24,959 --> 00:14:28,239
alternative subject name

295
00:14:28,800 --> 00:14:31,360
oh you should be able then to indicate

296
00:14:31,360 --> 00:14:34,000
any uh username that's maintained in the

297
00:14:34,000 --> 00:14:36,079
domain

298
00:14:36,079 --> 00:14:38,240
you should be able to get authenticated

299
00:14:38,240 --> 00:14:41,040
as that user

300
00:14:41,040 --> 00:14:42,560
you know it's an elegant and pretty

301
00:14:42,560 --> 00:14:44,880
simple

302
00:14:48,399 --> 00:14:50,720
such templates can be found in most

303
00:14:50,720 --> 00:14:52,480
infrastructures and very few people

304
00:14:52,480 --> 00:14:55,839
actually think about um

305
00:14:58,000 --> 00:14:59,440
it entails it effectively means that

306
00:14:59,440 --> 00:15:01,279
pretty much any user can be

307
00:15:01,279 --> 00:15:03,440
authenticated on the system as uh you

308
00:15:03,440 --> 00:15:06,320
know domain admin or whatever

309
00:15:06,320 --> 00:15:08,320
so we won't be able to detect an event

310
00:15:08,320 --> 00:15:12,399
like this but we can be driven by 98

311
00:15:12,399 --> 00:15:16,160
event to detect existence of such

312
00:15:16,160 --> 00:15:17,839
vulnerable templates

313
00:15:17,839 --> 00:15:20,560
so the rule we propose is that you

314
00:15:20,560 --> 00:15:22,959
actually

315
00:15:24,800 --> 00:15:26,560
develop a script that will look for

316
00:15:26,560 --> 00:15:29,518
templates like this

317
00:15:29,759 --> 00:15:31,279
where you can actually indicate

318
00:15:31,279 --> 00:15:33,440
alternatives uh subject alternative name

319
00:15:33,440 --> 00:15:38,639
that will not even require approval

320
00:15:38,800 --> 00:15:41,600
so this is uh an example of an elastic

321
00:15:41,600 --> 00:15:43,120
request

322
00:15:43,120 --> 00:15:44,240
escalation

323
00:15:44,240 --> 00:15:47,199
that will actually identify such

324
00:15:47,199 --> 00:15:49,680
templates

325
00:15:50,560 --> 00:15:55,319
with esc one vector escalation

326
00:16:05,040 --> 00:16:07,199
there is this thing called eku extended

327
00:16:07,199 --> 00:16:09,839
key usage it's an attribute which drives

328
00:16:09,839 --> 00:16:11,440
how you can use certificate for

329
00:16:11,440 --> 00:16:15,680
authentication or for signing code

330
00:16:17,920 --> 00:16:20,160
is effectively that if you have a

331
00:16:20,160 --> 00:16:22,800
certificate template which is available

332
00:16:22,800 --> 00:16:25,040
to users without approval by any

333
00:16:25,040 --> 00:16:27,759
managers and if it actually

334
00:16:27,759 --> 00:16:30,800
carries eku which is either empty or any

335
00:16:30,800 --> 00:16:32,880
purpose well this means that this

336
00:16:32,880 --> 00:16:35,759
certificate can be used for any purposes

337
00:16:35,759 --> 00:16:38,240
whatsoever not just for code signing

338
00:16:38,240 --> 00:16:40,399
signing or authentication the most

339
00:16:40,399 --> 00:16:43,440
interesting vector here

340
00:16:43,680 --> 00:16:45,279
is that you can actually use it to

341
00:16:45,279 --> 00:16:47,920
request certificates in the name of

342
00:16:47,920 --> 00:16:51,920
another another user which is like esc3

343
00:16:51,920 --> 00:16:53,360
so for example

344
00:16:53,360 --> 00:16:55,519
you can do it's uh in the name of say

345
00:16:55,519 --> 00:16:57,519
enrollment agent

346
00:16:57,519 --> 00:16:59,920
so a certificate which has any purpose

347
00:16:59,920 --> 00:17:05,000
in the eku fields can be used like this

348
00:17:13,839 --> 00:17:16,959
detection is very similar here

349
00:17:16,959 --> 00:17:19,679
we will be looking for templates related

350
00:17:19,679 --> 00:17:23,520
to event 4898 which have any purpose or

351
00:17:23,520 --> 00:17:27,119
empty feel i'm sorry empty value in the

352
00:17:27,119 --> 00:17:29,280
eku field

353
00:17:29,280 --> 00:17:30,799
notice

354
00:17:30,799 --> 00:17:33,799
any

355
00:17:45,039 --> 00:17:47,919
in the event it will read like this ms

356
00:17:47,919 --> 00:17:52,799
big ai signature equal to zero

357
00:17:53,039 --> 00:17:54,960
notes

358
00:17:54,960 --> 00:17:56,720
this syntax here

359
00:17:56,720 --> 00:18:00,400
it's not really a typo this actually

360
00:18:00,400 --> 00:18:02,880
helps us see

361
00:18:02,880 --> 00:18:06,559
this misconfiguration is in place

362
00:18:06,720 --> 00:18:09,760
vector escalation

363
00:18:12,000 --> 00:18:14,240
we've covered it's a little bit already

364
00:18:14,240 --> 00:18:16,559
so if we have a certificate template

365
00:18:16,559 --> 00:18:19,440
available for issues to any user and the

366
00:18:19,440 --> 00:18:22,799
scope of the certificate

367
00:18:24,000 --> 00:18:26,880
eku certificate request then a user

368
00:18:26,880 --> 00:18:28,400
should be able to obtain this

369
00:18:28,400 --> 00:18:30,880
certificate and issue certificates in

370
00:18:30,880 --> 00:18:34,080
the names of other users

371
00:18:35,280 --> 00:18:39,360
this is effectively a subset of esc2

372
00:18:39,360 --> 00:18:40,480
configuration

373
00:18:40,480 --> 00:18:43,640
by default

374
00:18:46,880 --> 00:18:48,480
there are no limitations in the

375
00:18:48,480 --> 00:18:50,480
certification center for enrollment

376
00:18:50,480 --> 00:18:52,080
agents

377
00:18:52,080 --> 00:18:54,400
it doesn't you know really state which

378
00:18:54,400 --> 00:18:56,160
groups involvement agents should belong

379
00:18:56,160 --> 00:18:57,760
to and who will be issuing these

380
00:18:57,760 --> 00:18:59,520
certificates

381
00:18:59,520 --> 00:19:01,840
so effectively

382
00:19:01,840 --> 00:19:03,120
you know if you keep the default

383
00:19:03,120 --> 00:19:05,919
settings you're in trouble

384
00:19:05,919 --> 00:19:07,919
you know because this way it's very easy

385
00:19:07,919 --> 00:19:10,799
to impersonate any user in the domain

386
00:19:10,799 --> 00:19:13,440
detection is very similar we will be

387
00:19:13,440 --> 00:19:15,919
looking for vulnerable templates

388
00:19:15,919 --> 00:19:18,960
using 48.98 event

389
00:19:18,960 --> 00:19:21,120
and we'll be looking for something

390
00:19:21,120 --> 00:19:24,400
that's a certificate request agent

391
00:19:24,400 --> 00:19:26,240
i will feature a certificate request

392
00:19:26,240 --> 00:19:29,360
agent in uh pki extended key usage

393
00:19:29,360 --> 00:19:30,880
this is a sample of request to

394
00:19:30,880 --> 00:19:33,039
elasticsearch

395
00:19:33,039 --> 00:19:34,799
or elastic search request and the

396
00:19:34,799 --> 00:19:38,440
response you get

397
00:19:49,830 --> 00:19:52,909
[Music]

398
00:19:54,240 --> 00:19:57,039
87 will feature both the requester and

399
00:19:57,039 --> 00:19:58,400
the subject

400
00:19:58,400 --> 00:20:00,080
like it will be the same person in those

401
00:20:00,080 --> 00:20:02,720
fields but if uh is requested for a

402
00:20:02,720 --> 00:20:04,640
different user if you're using the

403
00:20:04,640 --> 00:20:10,159
enrollment agent function then 48 8087

404
00:20:10,159 --> 00:20:12,480
event will show that the subject is

405
00:20:12,480 --> 00:20:14,640
different from the request room i will

406
00:20:14,640 --> 00:20:17,360
not be able to show the elastic request

407
00:20:17,360 --> 00:20:18,159
here

408
00:20:18,159 --> 00:20:20,799
but you should be able to develop it on

409
00:20:20,799 --> 00:20:22,880
your own

410
00:20:22,880 --> 00:20:25,360
esc

411
00:20:26,320 --> 00:20:29,520
vulnerable access rights

412
00:20:29,520 --> 00:20:31,840
directory objective directory is an

413
00:20:31,840 --> 00:20:35,280
active directory directory

414
00:20:40,880 --> 00:20:42,720
well let me put it differently if an

415
00:20:42,720 --> 00:20:45,280
unprivileged user has a right

416
00:20:45,280 --> 00:20:46,320
right

417
00:20:46,320 --> 00:20:49,120
he can actually turn

418
00:20:49,120 --> 00:20:52,159
an existing certificate template

419
00:20:52,159 --> 00:20:54,080
into a vulnerable to the any of the

420
00:20:54,080 --> 00:20:58,159
previous three uh vectors template

421
00:20:58,159 --> 00:21:00,559
so the privileges we'll care about are

422
00:21:00,559 --> 00:21:04,000
shown here right is uh the obvious case

423
00:21:04,000 --> 00:21:06,000
but uh for example if it's not right you

424
00:21:06,000 --> 00:21:08,559
can for example change the objective of

425
00:21:08,559 --> 00:21:10,240
this certificate

426
00:21:10,240 --> 00:21:13,280
and you know if you do the first stat

427
00:21:13,280 --> 00:21:15,360
then you can get the right privilege and

428
00:21:15,360 --> 00:21:17,679
then you you know continue with the rest

429
00:21:17,679 --> 00:21:18,559
of the

430
00:21:18,559 --> 00:21:20,640
attack

431
00:21:20,640 --> 00:21:24,159
so 48 98 event has a security descriptor

432
00:21:24,159 --> 00:21:26,159
for the certificate and it enables

433
00:21:26,159 --> 00:21:28,159
funding templates with bedrides in the

434
00:21:28,159 --> 00:21:30,960
descriptor so to

435
00:21:37,440 --> 00:21:39,360
how will attackers use a

436
00:21:39,360 --> 00:21:42,880
misconfiguration with esc4 they will use

437
00:21:42,880 --> 00:21:44,799
it to change the parameters of a

438
00:21:44,799 --> 00:21:47,120
certificate templates

439
00:21:47,120 --> 00:21:49,600
a certificate a template is also an

440
00:21:49,600 --> 00:21:51,679
active directory object and if all the

441
00:21:51,679 --> 00:21:53,360
settings are right you should be able to

442
00:21:53,360 --> 00:21:56,240
track changes to these objects

443
00:21:56,240 --> 00:21:58,240
shown here are the consoles where you

444
00:21:58,240 --> 00:22:02,320
need to update the settings

445
00:22:07,919 --> 00:22:11,200
for changes to certificate templates you

446
00:22:11,200 --> 00:22:14,240
will be getting 51.36

447
00:22:14,240 --> 00:22:15,840
notifications

448
00:22:15,840 --> 00:22:17,760
for events

449
00:22:17,760 --> 00:22:20,000
and thus you should be able to track

450
00:22:20,000 --> 00:22:22,080
changes in the critical parameters of

451
00:22:22,080 --> 00:22:25,080
certificates

452
00:22:38,559 --> 00:22:41,559
um

453
00:23:16,960 --> 00:23:18,640
destroying names

454
00:23:18,640 --> 00:23:20,960
and this way it will be easier for us to

455
00:23:20,960 --> 00:23:24,240
change the correlation rules

456
00:23:26,159 --> 00:23:29,039
and besides the 5136 event you know

457
00:23:29,039 --> 00:23:32,879
there will also be event

458
00:23:33,120 --> 00:23:35,918
48.

459
00:23:41,440 --> 00:23:42,799
slightly confused here it must be

460
00:23:42,799 --> 00:23:45,120
mistake let's skip this slide i'm sorry

461
00:23:45,120 --> 00:23:47,439
about that

462
00:23:48,559 --> 00:23:51,360
now detection

463
00:23:51,360 --> 00:23:53,919
so we will be uh monitoring changes to

464
00:23:53,919 --> 00:23:56,000
the critical arrest parameters of the

465
00:23:56,000 --> 00:23:59,440
strategic template the first one

466
00:23:59,679 --> 00:24:02,159
is the flag that allows you to indicate

467
00:24:02,159 --> 00:24:05,679
subject alternative name the second one

468
00:24:05,679 --> 00:24:07,840
shows if there is any need for

469
00:24:07,840 --> 00:24:10,799
managerial approval for certifications

470
00:24:10,799 --> 00:24:12,720
and the third one is related to the

471
00:24:12,720 --> 00:24:15,840
scope of the certificate

472
00:24:16,640 --> 00:24:18,960
so if

473
00:24:26,960 --> 00:24:29,440
which will effectively be processed as

474
00:24:29,440 --> 00:24:32,679
any purpose

475
00:24:34,400 --> 00:24:39,200
you can search for it as uh 4900 or 5136

476
00:24:39,200 --> 00:24:41,520
events

477
00:24:41,760 --> 00:24:43,360
besides changes in the parameters i

478
00:24:43,360 --> 00:24:44,960
mentioned he can also be looking for

479
00:24:44,960 --> 00:24:47,679
changes in the security of the scripture

480
00:24:47,679 --> 00:24:49,360
you know when the security descriptor is

481
00:24:49,360 --> 00:24:52,080
changed event 5136 will also be

482
00:24:52,080 --> 00:24:54,400
triggered and also the certification

483
00:24:54,400 --> 00:24:57,159
center will generate event

484
00:24:57,159 --> 00:24:58,720
4900

485
00:24:58,720 --> 00:25:02,000
the first time these certificates

486
00:25:02,000 --> 00:25:04,159
the new certificate template is

487
00:25:04,159 --> 00:25:05,760
requested

488
00:25:05,760 --> 00:25:08,440
so the logic here is very similar to

489
00:25:08,440 --> 00:25:11,279
48.99 event we are interested in these

490
00:25:11,279 --> 00:25:14,000
events where in security description as

491
00:25:14,000 --> 00:25:16,240
a ddl

492
00:25:16,240 --> 00:25:18,640
string

493
00:25:18,720 --> 00:25:20,799
there will be you know misconfigured

494
00:25:20,799 --> 00:25:23,039
access rights which will make such an

495
00:25:23,039 --> 00:25:25,760
attack possible

496
00:25:26,480 --> 00:25:28,960
escalation

497
00:25:35,919 --> 00:25:38,320
effectively but this time it's related

498
00:25:38,320 --> 00:25:42,240
to containers in active directory

499
00:25:49,760 --> 00:25:51,039
this is something that has not been

500
00:25:51,039 --> 00:25:53,360
properly researched in my opinion and

501
00:25:53,360 --> 00:25:55,440
possibly the most interesting vector

502
00:25:55,440 --> 00:25:57,360
here is like this

503
00:25:57,360 --> 00:25:59,919
so there is an object called anti-oauth

504
00:25:59,919 --> 00:26:01,679
certificates which

505
00:26:01,679 --> 00:26:05,520
contains entry for cas

506
00:26:07,279 --> 00:26:08,799
certificates can be used for

507
00:26:08,799 --> 00:26:12,159
authentication on the domain

508
00:26:12,159 --> 00:26:14,880
if the attacker can change attribute

509
00:26:14,880 --> 00:26:16,400
certificates there

510
00:26:16,400 --> 00:26:19,039
they should be able

511
00:26:19,039 --> 00:26:21,200
to you know bring their own certificates

512
00:26:21,200 --> 00:26:23,840
there and then issue certificates to

513
00:26:23,840 --> 00:26:25,520
users and

514
00:26:25,520 --> 00:26:27,279
use them on the domain

515
00:26:27,279 --> 00:26:29,039
you know it's a pretty

516
00:26:29,039 --> 00:26:32,240
robust way of ensuring persistence and a

517
00:26:32,240 --> 00:26:34,400
few people probably will understand how

518
00:26:34,400 --> 00:26:36,960
to spot it like you know you can reset

519
00:26:36,960 --> 00:26:40,799
passwords for users all the time

520
00:26:41,760 --> 00:26:43,840
you know every quarter or whatever but

521
00:26:43,840 --> 00:26:46,799
the attacker will continue having access

522
00:26:46,799 --> 00:26:50,760
to the to the domain

523
00:26:53,320 --> 00:26:56,240
5136 events should help you in detection

524
00:26:56,240 --> 00:26:58,720
in fact you would want to track all

525
00:26:58,720 --> 00:27:01,520
changes to such an object in any case

526
00:27:01,520 --> 00:27:03,360
they don't happen often that's why there

527
00:27:03,360 --> 00:27:05,120
will be little noise

528
00:27:05,120 --> 00:27:07,919
samples of requests and return

529
00:27:07,919 --> 00:27:09,039
music so

530
00:27:09,039 --> 00:27:12,000
nto certificates there are other objects

531
00:27:12,000 --> 00:27:14,240
here

532
00:27:16,400 --> 00:27:21,039
next one is escalation 6 and let me hand

533
00:27:23,890 --> 00:27:31,150
[Music]

534
00:27:43,520 --> 00:27:46,480
which will make sure that you know

535
00:27:46,480 --> 00:27:48,559
you can actually establish subject

536
00:27:48,559 --> 00:27:51,520
alternative name even if you know

537
00:27:51,520 --> 00:27:54,480
sand flag initially was not maintained

538
00:27:54,480 --> 00:27:57,760
at all and this is indeed very very

539
00:27:57,760 --> 00:28:00,320
dangerous

540
00:28:04,000 --> 00:28:04,960
i mean

541
00:28:04,960 --> 00:28:07,679
you can actually do it even if the

542
00:28:07,679 --> 00:28:10,480
template is not vulnerable to escalation

543
00:28:10,480 --> 00:28:12,000
one

544
00:28:12,000 --> 00:28:15,320
this problem

545
00:28:19,120 --> 00:28:21,840
is that this technique will not generate

546
00:28:21,840 --> 00:28:23,200
any events

547
00:28:23,200 --> 00:28:25,520
like if a flag is established like this

548
00:28:25,520 --> 00:28:27,919
there won't be any mention of it in the

549
00:28:27,919 --> 00:28:30,799
vlog

550
00:28:30,799 --> 00:28:33,440
when an attacker does a discovery you

551
00:28:33,440 --> 00:28:35,440
know starts looking for the state of

552
00:28:35,440 --> 00:28:36,640
this options

553
00:28:36,640 --> 00:28:37,919
and there's something that can be found

554
00:28:37,919 --> 00:28:40,640
in the mask on in the registry this

555
00:28:40,640 --> 00:28:42,720
could be spotted

556
00:28:42,720 --> 00:28:44,240
at

557
00:28:44,240 --> 00:28:46,720
next escalation

558
00:28:46,720 --> 00:28:48,159
is around vulnerable certificate

559
00:28:48,159 --> 00:28:49,840
authority access control so the

560
00:28:49,840 --> 00:28:52,320
certificates uh center or i'm sorry

561
00:28:52,320 --> 00:28:53,440
certification

562
00:28:53,440 --> 00:28:56,440
agency

563
00:28:58,399 --> 00:29:00,240
may have settings that will make it

564
00:29:00,240 --> 00:29:02,320
vulnerable so that an unprivileged

565
00:29:02,320 --> 00:29:06,320
israel will get expanded rights

566
00:29:06,320 --> 00:29:08,399
managed say advanced certificates are

567
00:29:08,399 --> 00:29:11,200
the ones we care about manage ca option

568
00:29:11,200 --> 00:29:14,960
effectively enables the user

569
00:29:15,360 --> 00:29:19,600
to configure the certification agency

570
00:29:20,720 --> 00:29:22,720
you can effectively set all sorts of

571
00:29:22,720 --> 00:29:24,720
options here but the easiest thing to do

572
00:29:24,720 --> 00:29:25,760
is

573
00:29:25,760 --> 00:29:28,320
to set this flag for subject alternative

574
00:29:28,320 --> 00:29:30,320
name to for certification agency and

575
00:29:30,320 --> 00:29:32,880
then you know restart it remotely if you

576
00:29:32,880 --> 00:29:36,320
have the rights for manage ca

577
00:29:36,320 --> 00:29:38,159
after that you should be able to do

578
00:29:38,159 --> 00:29:40,960
escalation six

579
00:29:42,720 --> 00:29:45,679
if the attacker gets access to an

580
00:29:45,679 --> 00:29:48,960
account that has those rights

581
00:29:49,279 --> 00:29:50,240
he will

582
00:29:50,240 --> 00:29:52,640
be able to well effectively exploit the

583
00:29:52,640 --> 00:29:55,440
service

584
00:29:55,440 --> 00:29:56,960
that's regards to manage template you

585
00:29:56,960 --> 00:29:59,039
know a user with those rights will be

586
00:29:59,039 --> 00:30:01,279
able to request new

587
00:30:01,279 --> 00:30:04,399
certificate templates

588
00:30:05,679 --> 00:30:08,399
so manage certificates privileges is

589
00:30:08,399 --> 00:30:10,960
something that effectively allows you to

590
00:30:10,960 --> 00:30:15,520
approve new template issues

591
00:30:16,799 --> 00:30:19,360
and security settings are maintained

592
00:30:19,360 --> 00:30:21,760
following the key registry key shown

593
00:30:21,760 --> 00:30:24,559
here in the screen and again in in a

594
00:30:24,559 --> 00:30:26,559
proper environment changes to this

595
00:30:26,559 --> 00:30:29,600
happen very rarely

596
00:30:30,000 --> 00:30:30,720
is

597
00:30:30,720 --> 00:30:32,159
the start of the year

598
00:30:32,159 --> 00:30:33,919
this vector was

599
00:30:33,919 --> 00:30:36,320
thoroughly studied

600
00:30:36,320 --> 00:30:37,840
uh people actually published two

601
00:30:37,840 --> 00:30:39,520
articles on the subject the links are

602
00:30:39,520 --> 00:30:40,880
here

603
00:30:40,880 --> 00:30:44,000
and they also published a modification

604
00:30:44,000 --> 00:30:47,039
of utilities 35.

605
00:30:47,760 --> 00:30:49,440
which is sort of an update on what jobs

606
00:30:49,440 --> 00:30:50,399
did

607
00:30:50,399 --> 00:30:53,600
and this uh utility

608
00:30:53,600 --> 00:30:54,559
command

609
00:30:54,559 --> 00:30:57,120
has several features which effectively

610
00:30:57,120 --> 00:31:00,240
enabled you to say set a subject

611
00:31:00,240 --> 00:31:02,480
alternative name to and restart the

612
00:31:02,480 --> 00:31:05,919
servers thus effectively making the ca

613
00:31:05,919 --> 00:31:08,720
vulnerable to escalation 6.

614
00:31:08,720 --> 00:31:10,960
so they effectively weaponize it

615
00:31:10,960 --> 00:31:12,960
and there were also some additional

616
00:31:12,960 --> 00:31:14,880
options there like you can indicate

617
00:31:14,880 --> 00:31:20,559
about to cdp or list of uh serials

618
00:31:26,320 --> 00:31:28,000
you know so that the domain controller

619
00:31:28,000 --> 00:31:30,159
and ca would effectively follow this

620
00:31:30,159 --> 00:31:33,840
belt spoofed as it is

621
00:31:34,960 --> 00:31:37,679
so you can set it as certain

622
00:31:37,679 --> 00:31:39,519
but that would actually require

623
00:31:39,519 --> 00:31:42,399
privileged access

624
00:31:42,880 --> 00:31:44,640
so it's not used that often but if you

625
00:31:44,640 --> 00:31:47,600
have managed ca

626
00:31:47,600 --> 00:31:50,080
then he can use um utility certified

627
00:31:50,080 --> 00:31:53,120
from black air usac

628
00:31:55,200 --> 00:31:58,320
for detection purposes

629
00:31:58,880 --> 00:32:02,159
we propose that you track event 48.91

630
00:32:02,159 --> 00:32:06,559
which relates to changes in ca settings

631
00:32:06,559 --> 00:32:07,919
and the value

632
00:32:07,919 --> 00:32:10,320
you should be able to find there will be

633
00:32:10,320 --> 00:32:14,120
well the bit mask again

634
00:32:23,279 --> 00:32:24,640
and then you know you can actually

635
00:32:24,640 --> 00:32:29,720
transform it into human readable text

636
00:32:30,720 --> 00:32:32,320
the first request here is uh you know

637
00:32:32,320 --> 00:32:35,360
requests for adding flags through 88 to

638
00:32:35,360 --> 00:32:37,279
48.91

639
00:32:37,279 --> 00:32:40,240
the second one is through the sysmona

640
00:32:40,240 --> 00:32:41,519
through the registry so it's uh

641
00:32:41,519 --> 00:32:44,559
trackable through assessment

642
00:32:44,880 --> 00:32:47,039
maintaining these options

643
00:32:47,039 --> 00:32:49,600
well they will be seen in the registry

644
00:32:49,600 --> 00:32:51,519
key and they will also be delivered with

645
00:32:51,519 --> 00:32:55,640
the 4882 event

646
00:32:59,279 --> 00:33:01,200
this method can be used by attackers in

647
00:33:01,200 --> 00:33:04,320
order to persist in a compromised system

648
00:33:04,320 --> 00:33:05,760
and going forward you know if all

649
00:33:05,760 --> 00:33:07,679
accounts are taken away from the

650
00:33:07,679 --> 00:33:10,559
attacker and all passwords are reset

651
00:33:10,559 --> 00:33:12,720
you know they will be st they will still

652
00:33:12,720 --> 00:33:14,640
be able to

653
00:33:14,640 --> 00:33:17,279
you know get hold of an account and

654
00:33:17,279 --> 00:33:19,840
misconfigure the ca and again mount all

655
00:33:19,840 --> 00:33:22,399
the attacks we've been talking about

656
00:33:22,399 --> 00:33:24,320
so you can be monitored if you look for

657
00:33:24,320 --> 00:33:26,159
event 48.82

658
00:33:26,159 --> 00:33:28,720
and shown here is an example of a

659
00:33:28,720 --> 00:33:31,279
request for extended

660
00:33:31,279 --> 00:33:34,880
uh rights in public groups

661
00:33:36,399 --> 00:33:38,159
but in fact he may want to track all

662
00:33:38,159 --> 00:33:40,799
changes in 48.82 because they don't

663
00:33:40,799 --> 00:33:43,440
happen often

664
00:33:48,240 --> 00:33:50,399
it shows a particular security

665
00:33:50,399 --> 00:33:52,480
descriptor and with cessimony should be

666
00:33:52,480 --> 00:33:55,360
able to track changes

667
00:33:56,720 --> 00:33:58,559
one of the most interesting vectors is

668
00:33:58,559 --> 00:33:59,919
ese

669
00:33:59,919 --> 00:34:02,559
8 and tlm relate to

670
00:34:02,559 --> 00:34:04,720
the end points

671
00:34:04,720 --> 00:34:07,120
http

672
00:34:07,200 --> 00:34:10,159
so at the certification center several

673
00:34:10,159 --> 00:34:11,679
you know additional options can be

674
00:34:11,679 --> 00:34:14,239
configured so that you know web services

675
00:34:14,239 --> 00:34:17,839
are in fact used by users to request

676
00:34:17,839 --> 00:34:21,839
certificates as opposed to cli

677
00:34:22,399 --> 00:34:25,119
by default you know the hdb protocol

678
00:34:25,119 --> 00:34:27,520
will be used and ntlm is used for

679
00:34:27,520 --> 00:34:29,040
authentication

680
00:34:29,040 --> 00:34:32,639
there have been a lots of attacks lately

681
00:34:32,639 --> 00:34:36,480
against ntlm relay

682
00:34:36,879 --> 00:34:39,199
so it could be domain controller or some

683
00:34:39,199 --> 00:34:41,040
other workstation

684
00:34:41,040 --> 00:34:44,239
so we can actually you know direct it to

685
00:34:44,239 --> 00:34:46,320
the certification center

686
00:34:46,320 --> 00:34:49,599
and then we will request pretty much any

687
00:34:49,599 --> 00:34:52,560
certificate template

688
00:34:56,399 --> 00:34:59,520
so in the web enrollment service

689
00:34:59,520 --> 00:35:03,160
when you do it manually

690
00:35:09,280 --> 00:35:11,359
because we don't really expect them you

691
00:35:11,359 --> 00:35:13,040
know to

692
00:35:13,040 --> 00:35:17,839
use web services and ntlm relay

693
00:35:17,920 --> 00:35:21,200
to request certificates

694
00:35:21,200 --> 00:35:24,400
because they do they use auto enrollment

695
00:35:24,400 --> 00:35:27,599
so you can effectively generate a csr

696
00:35:27,599 --> 00:35:31,000
signing request

697
00:35:39,520 --> 00:35:42,000
and if we check out the access log for

698
00:35:42,000 --> 00:35:45,000
events

699
00:35:48,960 --> 00:35:51,760
you know it will show for example dc

700
00:35:51,760 --> 00:35:53,599
dollar sign

701
00:35:53,599 --> 00:35:56,640
which is obviously a machinery

702
00:35:56,640 --> 00:35:58,890
so this

703
00:35:58,890 --> 00:36:02,009
[Music]

704
00:36:12,560 --> 00:36:14,480
where you can actually monitor for

705
00:36:14,480 --> 00:36:18,800
connections to the certification center

706
00:36:21,280 --> 00:36:24,320
so all the machine accounts

707
00:36:24,320 --> 00:36:29,040
using nclm you know must be trouble

708
00:36:29,280 --> 00:36:31,040
you may get some false positives this

709
00:36:31,040 --> 00:36:33,520
way but these are very rare cases and

710
00:36:33,520 --> 00:36:36,400
it's easy to

711
00:36:36,560 --> 00:36:40,359
design rules for them

712
00:36:41,280 --> 00:36:42,880
so once you've got the certificate he

713
00:36:42,880 --> 00:36:45,839
requests tgts

714
00:36:45,839 --> 00:36:47,839
using those certificates and this will

715
00:36:47,839 --> 00:36:50,800
generate event 4768

716
00:36:50,800 --> 00:36:52,240
and there will be a field called

717
00:36:52,240 --> 00:36:54,400
certificate information that will

718
00:36:54,400 --> 00:36:56,240
contain information on the key and the

719
00:36:56,240 --> 00:36:58,560
issue which is effectively rca

720
00:36:58,560 --> 00:37:00,560
and the fingerprints

721
00:37:00,560 --> 00:37:04,079
if your infrastructure does not

722
00:37:04,079 --> 00:37:06,160
use say smart card certificates or other

723
00:37:06,160 --> 00:37:09,119
pk in it this is actually bad i mean if

724
00:37:09,119 --> 00:37:11,040
you don't have it in your infrastructure

725
00:37:11,040 --> 00:37:14,480
and you're getting those requests

726
00:37:17,359 --> 00:37:20,799
and it's really really dangerous

727
00:37:27,200 --> 00:37:28,800
used by people who don't have smart cars

728
00:37:28,800 --> 00:37:31,200
because smart cars are usually

729
00:37:31,200 --> 00:37:32,320
you know

730
00:37:32,320 --> 00:37:35,680
given issues to very few employees in

731
00:37:35,680 --> 00:37:37,680
the company have very sensitive jobs so

732
00:37:37,680 --> 00:37:39,359
if anybody else is using something

733
00:37:39,359 --> 00:37:41,440
related to the smart car infrastructure

734
00:37:41,440 --> 00:37:44,560
that should be raising eyebrows

735
00:37:44,560 --> 00:37:48,040
raising suspicions

736
00:37:50,800 --> 00:37:53,280
so some uh tactiles were at least like

737
00:37:53,280 --> 00:37:56,079
45 days after the publication one is a

738
00:37:56,079 --> 00:37:59,119
forged cert and it can be used for you

739
00:37:59,119 --> 00:38:01,200
know golden certificates and root

740
00:38:01,200 --> 00:38:03,839
certificates

741
00:38:13,440 --> 00:38:16,160
you know the attackers are often lazy

742
00:38:16,160 --> 00:38:16,880
they

743
00:38:16,880 --> 00:38:21,200
will not rename the original files

744
00:38:21,200 --> 00:38:24,960
they will not you know recompile

745
00:38:24,960 --> 00:38:26,720
the tool

746
00:38:26,720 --> 00:38:28,800
and now that we're talking pk in it we

747
00:38:28,800 --> 00:38:32,000
should certainly mention the relatively

748
00:38:32,000 --> 00:38:34,160
fresh technique called shadow credential

749
00:38:34,160 --> 00:38:36,320
so it is a base on windows hello for

750
00:38:36,320 --> 00:38:38,640
business

751
00:38:39,520 --> 00:38:41,599
which is effectively a replacement for

752
00:38:41,599 --> 00:38:43,280
the traditional password-based

753
00:38:43,280 --> 00:38:45,440
authentication so we have you know a

754
00:38:45,440 --> 00:38:47,440
public key pair

755
00:38:47,440 --> 00:38:49,920
and a credential link goes to the domain

756
00:38:49,920 --> 00:38:51,359
controller

757
00:38:51,359 --> 00:38:53,359
while the private key will be stored in

758
00:38:53,359 --> 00:38:56,079
tpm or other certificates store

759
00:38:56,079 --> 00:38:58,079
so in order to authenticate you know the

760
00:38:58,079 --> 00:39:00,480
user will use a fingerprint or a face

761
00:39:00,480 --> 00:39:03,200
scan or whatever

762
00:39:09,680 --> 00:39:12,960
so you can you know sus those keys for

763
00:39:12,960 --> 00:39:14,880
your account and the computer get it for

764
00:39:14,880 --> 00:39:17,359
its accounts but if you belong to

765
00:39:17,359 --> 00:39:19,440
enterprise key it means or a key it

766
00:39:19,440 --> 00:39:21,839
means group you should be able to set it

767
00:39:21,839 --> 00:39:24,000
for any

768
00:39:24,000 --> 00:39:27,119
account user account

769
00:39:27,520 --> 00:39:30,400
whisker utility is often used for the

770
00:39:30,400 --> 00:39:32,400
shadow credentials attack so it will

771
00:39:32,400 --> 00:39:34,800
generate

772
00:39:34,800 --> 00:39:36,160
key pair

773
00:39:36,160 --> 00:39:38,320
you know where the you know the private

774
00:39:38,320 --> 00:39:40,400
one will be written

775
00:39:40,400 --> 00:39:43,680
to the particular user

776
00:39:43,680 --> 00:39:46,960
and then you can do the rubies command

777
00:39:46,960 --> 00:39:49,200
to request tgt

778
00:39:49,200 --> 00:39:52,078
for this certificate

779
00:39:53,320 --> 00:39:56,240
51.36 and 4662 events mentioned

780
00:39:56,240 --> 00:39:58,400
previously are also useful but you may

781
00:39:58,400 --> 00:40:00,880
also want to run additional audits

782
00:40:00,880 --> 00:40:03,920
and every time you see changes in msdsk

783
00:40:03,920 --> 00:40:05,359
credentialing

784
00:40:05,359 --> 00:40:08,160
and machine accounts

785
00:40:08,160 --> 00:40:11,280
they should certainly be investigated

786
00:40:11,280 --> 00:40:13,839
you know the sheer facts of uh

787
00:40:13,839 --> 00:40:16,319
any binary being installed

788
00:40:16,319 --> 00:40:17,920
should raise suspicion

789
00:40:17,920 --> 00:40:20,720
and shown here are results i'm sorry are

790
00:40:20,720 --> 00:40:25,240
samples of requests and responses

791
00:40:25,680 --> 00:40:28,640
shown here is the start of ruby's using

792
00:40:28,640 --> 00:40:31,359
an initiate certificate so generating a

793
00:40:31,359 --> 00:40:32,720
dgt

794
00:40:32,720 --> 00:40:36,480
ticket that can be turned into

795
00:40:36,480 --> 00:40:39,720
and used

796
00:40:41,119 --> 00:40:43,599
you can note here that certificate

797
00:40:43,599 --> 00:40:47,280
issuer name is uh ws dollar

798
00:40:47,280 --> 00:40:49,040
which means that you know it was signed

799
00:40:49,040 --> 00:40:50,400
and issued for this particular

800
00:40:50,400 --> 00:40:52,240
workstation

801
00:40:52,240 --> 00:40:54,480
and you can also check if the same name

802
00:40:54,480 --> 00:40:56,079
is maintained in the certification

803
00:40:56,079 --> 00:40:57,119
center

804
00:40:57,119 --> 00:40:59,599
ten days ago a new vulnerability was

805
00:40:59,599 --> 00:41:00,800
published

806
00:41:00,800 --> 00:41:02,480
and it leverages all the old

807
00:41:02,480 --> 00:41:04,160
vulnerabilities

808
00:41:04,160 --> 00:41:06,720
in certification centers

809
00:41:06,720 --> 00:41:10,240
the idea of this volume is as follows

810
00:41:10,240 --> 00:41:12,880
when a user requests a certificate

811
00:41:12,880 --> 00:41:14,960
the name to which this certificate is

812
00:41:14,960 --> 00:41:16,240
issued will be

813
00:41:16,240 --> 00:41:17,760
coming from

814
00:41:17,760 --> 00:41:20,000
the beginning

815
00:41:20,000 --> 00:41:22,240
user is requesting it you know dns host

816
00:41:22,240 --> 00:41:24,480
name field will be used instead so the

817
00:41:24,480 --> 00:41:26,480
nature of this technique is that we

818
00:41:26,480 --> 00:41:29,520
either create a new account with the

819
00:41:29,520 --> 00:41:32,319
pre-configured dns hostname of the

820
00:41:32,319 --> 00:41:34,800
domain controller or any other host

821
00:41:34,800 --> 00:41:38,240
or we will change

822
00:41:38,240 --> 00:41:40,400
it for an existing account you know it

823
00:41:40,400 --> 00:41:44,319
could be say a computer or a subsystem

824
00:41:44,319 --> 00:41:49,119
account in order to change dns host name

825
00:41:49,119 --> 00:41:51,040
we'll need to change prince service

826
00:41:51,040 --> 00:41:54,079
principle name and only keep

827
00:41:54,079 --> 00:41:56,319
just several fields in it otherwise uh

828
00:41:56,319 --> 00:41:57,440
there will be mistakes and the

829
00:41:57,440 --> 00:42:00,880
controller will not be able to change it

830
00:42:00,880 --> 00:42:02,720
if you remove the hostname and then you

831
00:42:02,720 --> 00:42:04,400
write dns hostname

832
00:42:04,400 --> 00:42:06,160
you know the workstation will have a new

833
00:42:06,160 --> 00:42:07,839
dns hostname

834
00:42:07,839 --> 00:42:10,640
and after that

835
00:42:12,720 --> 00:42:14,960
you request a certificate you go through

836
00:42:14,960 --> 00:42:17,839
authentication

837
00:42:20,400 --> 00:42:21,680
so 47

838
00:42:21,680 --> 00:42:24,319
71 and 72

839
00:42:24,319 --> 00:42:25,280
should be

840
00:42:25,280 --> 00:42:28,000
41 and 40 down i'm sorry are the events

841
00:42:28,000 --> 00:42:30,640
to look for

842
00:42:33,359 --> 00:42:35,680
if your cm allows you to compare fields

843
00:42:35,680 --> 00:42:37,920
you can actually compare

844
00:42:37,920 --> 00:42:40,960
the requester so to speak

845
00:42:40,960 --> 00:42:42,160
to

846
00:42:42,160 --> 00:42:44,960
the hostname so

847
00:42:47,200 --> 00:42:50,240
and that is obviously a shortcut to all

848
00:42:50,240 --> 00:42:52,400
the attacks we previously described you

849
00:42:52,400 --> 00:42:53,119
know

850
00:42:53,119 --> 00:42:54,640
while we were preparing for this

851
00:42:54,640 --> 00:42:56,640
particular report we also found an

852
00:42:56,640 --> 00:42:58,480
interesting feature of the certification

853
00:42:58,480 --> 00:43:01,119
center this entry uses two types of

854
00:43:01,119 --> 00:43:03,760
modules policy modules and exit modules

855
00:43:03,760 --> 00:43:06,079
the policy module is a dll library a com

856
00:43:06,079 --> 00:43:07,440
object

857
00:43:07,440 --> 00:43:09,440
with variation

858
00:43:09,440 --> 00:43:12,079
which processes incoming requests and

859
00:43:12,079 --> 00:43:13,839
checks them for compliance with policies

860
00:43:13,839 --> 00:43:16,240
can change them and modify them

861
00:43:16,240 --> 00:43:19,119
and can for example suspend issuing

862
00:43:19,119 --> 00:43:20,800
service certificates and ask the request

863
00:43:20,800 --> 00:43:23,280
managers who come in regardless of

864
00:43:23,280 --> 00:43:25,200
whatever the template says and the exit

865
00:43:25,200 --> 00:43:29,759
module is also come object a dll library

866
00:43:30,720 --> 00:43:33,920
that will take the control over when a

867
00:43:33,920 --> 00:43:36,720
certificate has been issued for example

868
00:43:36,720 --> 00:43:39,359
when a serial list has been published so

869
00:43:39,359 --> 00:43:42,640
after a particular trigger

870
00:43:43,599 --> 00:43:45,680
center certificate

871
00:43:45,680 --> 00:43:47,599
and they can in the settings of

872
00:43:47,599 --> 00:43:49,839
certification center

873
00:43:49,839 --> 00:43:50,880
you will find

874
00:43:50,880 --> 00:43:53,119
exit modules and policy modules

875
00:43:53,119 --> 00:43:54,880
there will be

876
00:43:54,880 --> 00:43:56,400
there'll be an interesting button there

877
00:43:56,400 --> 00:43:58,960
called ads so you can actually recompile

878
00:43:58,960 --> 00:44:02,000
or add a new module

879
00:44:02,000 --> 00:44:04,400
and you can actually upload it with the

880
00:44:04,400 --> 00:44:07,200
regas vrt32 and then it will be

881
00:44:07,200 --> 00:44:09,359
available for choosing

882
00:44:09,359 --> 00:44:10,800
well the problem is that he can only

883
00:44:10,800 --> 00:44:12,560
have a single policy module in the

884
00:44:12,560 --> 00:44:14,400
certification center so if you choose

885
00:44:14,400 --> 00:44:17,440
your own and you delete the default

886
00:44:17,440 --> 00:44:19,839
module

887
00:44:20,400 --> 00:44:22,480
it probably will stop working but uh you

888
00:44:22,480 --> 00:44:24,640
can have as many exit modules as you

889
00:44:24,640 --> 00:44:27,119
want and you should not really switch up

890
00:44:27,119 --> 00:44:28,400
the default module because it's

891
00:44:28,400 --> 00:44:30,960
responsible for crl publication as well

892
00:44:30,960 --> 00:44:33,599
as writing public keys or certificates

893
00:44:33,599 --> 00:44:36,760
to id

894
00:44:36,800 --> 00:44:38,400
this slide shows

895
00:44:38,400 --> 00:44:40,800
information on exit modules

896
00:44:40,800 --> 00:44:43,359
that was you know compiled and

897
00:44:43,359 --> 00:44:46,720
written to the memory uh

898
00:44:47,119 --> 00:44:50,119
slideshows

899
00:45:03,359 --> 00:45:06,000
clcs

900
00:45:06,000 --> 00:45:08,000
by its name and then you can find the

901
00:45:08,000 --> 00:45:09,520
related library

902
00:45:09,520 --> 00:45:12,800
the path can be local or unc

903
00:45:12,800 --> 00:45:15,040
so for example the attacker may be

904
00:45:15,040 --> 00:45:19,119
attacking say from a file

905
00:45:22,079 --> 00:45:25,280
so this uh dll library will be uploaded

906
00:45:25,280 --> 00:45:28,400
to crtx and then we'll be running with a

907
00:45:28,400 --> 00:45:30,160
system rights because certification

908
00:45:30,160 --> 00:45:31,839
center has this kind of right side by

909
00:45:31,839 --> 00:45:34,160
default which means that the attractor

910
00:45:34,160 --> 00:45:36,560
can use this vector to gain per

911
00:45:36,560 --> 00:45:37,760
assistance

912
00:45:37,760 --> 00:45:41,280
and it will actually be able to execute

913
00:45:41,280 --> 00:45:42,640
its code

914
00:45:42,640 --> 00:45:43,920
you know whenever the certification

915
00:45:43,920 --> 00:45:46,480
center is doing something

916
00:45:46,480 --> 00:45:48,079
it can be done by trigger for example

917
00:45:48,079 --> 00:45:50,000
publication of crl issuance or

918
00:45:50,000 --> 00:45:52,880
revocation of a certificate

919
00:45:52,880 --> 00:45:55,520
so it's in your persistence vector

920
00:45:55,520 --> 00:45:58,000
and if you haven't heard about it

921
00:45:58,000 --> 00:46:01,440
finding it is extremely difficult

922
00:46:01,440 --> 00:46:03,119
it can be detected

923
00:46:03,119 --> 00:46:04,440
with a

924
00:46:04,440 --> 00:46:07,520
48-91 event which is which corresponds

925
00:46:07,520 --> 00:46:10,400
to change in cs settings

926
00:46:10,400 --> 00:46:14,400
shown here is the actual exit module

927
00:46:14,720 --> 00:46:16,800
so it is actually showing that right now

928
00:46:16,800 --> 00:46:18,720
we are running two modules there you

929
00:46:18,720 --> 00:46:20,800
know the the default one in our evil

930
00:46:20,800 --> 00:46:22,079
module

931
00:46:22,079 --> 00:46:24,160
so we need to be monitoring with a

932
00:46:24,160 --> 00:46:26,480
system on and the right key so it's a

933
00:46:26,480 --> 00:46:28,400
binary won't be able to read it just

934
00:46:28,400 --> 00:46:31,200
like that but you know it should not be

935
00:46:31,200 --> 00:46:33,520
modified at all

936
00:46:33,520 --> 00:46:36,319
here are the hunt results from cismo and

937
00:46:36,319 --> 00:46:38,560
4891

938
00:46:38,560 --> 00:46:42,920
this is it for us thank you very much

939
00:46:43,950 --> 00:46:48,450
[Applause]

940
00:46:49,130 --> 00:46:52,199
[Music]

941
00:46:58,800 --> 00:47:00,000
thank you very much for this

942
00:47:00,000 --> 00:47:01,920
presentation it was so interesting

943
00:47:01,920 --> 00:47:04,240
indeed

944
00:47:04,800 --> 00:47:06,640
am i right to think that all

945
00:47:06,640 --> 00:47:10,920
privileged escalation techniques

946
00:47:12,240 --> 00:47:14,480
should tell us that it's best for us to

947
00:47:14,480 --> 00:47:18,000
harden certification center and find and

948
00:47:18,000 --> 00:47:19,680
remove vulnerable

949
00:47:19,680 --> 00:47:21,280
samples

950
00:47:21,280 --> 00:47:24,880
and then monitor for changes

951
00:47:37,280 --> 00:47:39,440
so for you know from the monitoring

952
00:47:39,440 --> 00:47:41,359
perspective you know we will only be

953
00:47:41,359 --> 00:47:44,319
looking for changes yes changes in acl

954
00:47:44,319 --> 00:47:46,720
changes in settings and monitoring for

955
00:47:46,720 --> 00:47:50,759
emergency new templates

956
00:48:04,559 --> 00:48:06,640
in order to reconfigure

957
00:48:06,640 --> 00:48:08,960
domain controller

958
00:48:08,960 --> 00:48:11,440
what are the real alternatives to active

959
00:48:11,440 --> 00:48:12,720
directory

960
00:48:12,720 --> 00:48:14,800
well we wouldn't really find issues like

961
00:48:14,800 --> 00:48:17,599
this like uh netware for example was

962
00:48:17,599 --> 00:48:19,200
pretty prevalent 20 years ago well

963
00:48:19,200 --> 00:48:21,119
you're absolutely right there is samba

964
00:48:21,119 --> 00:48:23,920
and open ldap

965
00:48:23,920 --> 00:48:25,920
so you can actually bury

966
00:48:25,920 --> 00:48:28,400
and i mean invest lots of resources into

967
00:48:28,400 --> 00:48:31,119
making it to work in a pretty reliable

968
00:48:31,119 --> 00:48:34,720
way manner comparable to

969
00:48:45,359 --> 00:48:47,680
for an infrastructure of uh dozens of

970
00:48:47,680 --> 00:48:49,119
thousands of

971
00:48:49,119 --> 00:48:51,440
systems and workstations because

972
00:48:51,440 --> 00:48:54,160
it will require a huge infusion of

973
00:48:54,160 --> 00:48:56,640
resources

974
00:48:57,599 --> 00:48:59,920
in other words

975
00:48:59,920 --> 00:49:02,960
there is no real contender to active

976
00:49:02,960 --> 00:49:04,480
directory something that would be you

977
00:49:04,480 --> 00:49:08,000
know scalable and reliable

978
00:49:09,920 --> 00:49:12,240
pleasure to see in such a good mood and

979
00:49:12,240 --> 00:49:14,319
apparently good health

980
00:49:14,319 --> 00:49:17,558
great presentation

981
00:49:25,920 --> 00:49:30,000
a different user is requesting this

982
00:49:30,000 --> 00:49:31,760
certificate and

983
00:49:31,760 --> 00:49:34,079
but this is uh not something i'm going

984
00:49:34,079 --> 00:49:36,079
to show you

985
00:49:36,079 --> 00:49:38,319
yeah i'm not going to illustrate with

986
00:49:38,319 --> 00:49:40,480
the elastic samples

987
00:49:40,480 --> 00:49:42,720
why is that

988
00:49:42,720 --> 00:49:45,599
i'm lazy you know hunting there is more

989
00:49:45,599 --> 00:49:48,000
difficult than just a simple

990
00:49:48,000 --> 00:49:49,920
search request

991
00:49:49,920 --> 00:49:51,200
so you need

992
00:49:51,200 --> 00:49:53,920
to phrase your request in a specialized

993
00:49:53,920 --> 00:49:55,520
language and then you will need to

994
00:49:55,520 --> 00:49:57,359
compare it as substrings

995
00:49:57,359 --> 00:49:58,880
so it's a matter of laziness nothing

996
00:49:58,880 --> 00:49:59,680
more

997
00:49:59,680 --> 00:50:00,310
okay

998
00:50:00,310 --> 00:50:03,560
[Music]

999
00:50:04,559 --> 00:50:09,119
is there an ecb provider in adcs

1000
00:50:09,119 --> 00:50:11,599
or hey you haven't looked into that

1001
00:50:11,599 --> 00:50:14,000
you know i spent nearly a week looking

1002
00:50:14,000 --> 00:50:16,079
for such an etv provider and so far i've

1003
00:50:16,079 --> 00:50:17,680
not been able to find anything that was

1004
00:50:17,680 --> 00:50:20,880
my first idea

1005
00:50:20,880 --> 00:50:22,480
because obviously what you cannot find

1006
00:50:22,480 --> 00:50:24,079
in the security lock you should be able

1007
00:50:24,079 --> 00:50:26,480
to find in the etv log but you know this

1008
00:50:26,480 --> 00:50:29,119
hypothesis was

1009
00:50:29,119 --> 00:50:30,960
not proved well i mean you can probably

1010
00:50:30,960 --> 00:50:33,599
write your own policy module which will

1011
00:50:33,599 --> 00:50:35,280
be effectively an improvement of the

1012
00:50:35,280 --> 00:50:37,119
default policy module

1013
00:50:37,119 --> 00:50:38,160
or

1014
00:50:38,160 --> 00:50:39,920
for every event related to

1015
00:50:39,920 --> 00:50:41,920
certifications you can actually

1016
00:50:41,920 --> 00:50:44,480
associate a scheduler task

1017
00:50:44,480 --> 00:50:46,960
so that every time you know

1018
00:50:46,960 --> 00:50:49,440
any certificate is issued you will be

1019
00:50:49,440 --> 00:50:50,720
chucking you know what kind of

1020
00:50:50,720 --> 00:50:52,720
parameters are built into it

1021
00:50:52,720 --> 00:50:55,040
but that's

1022
00:50:59,280 --> 00:51:00,960
what do you have in there because it's

1023
00:51:00,960 --> 00:51:02,559
effectively

1024
00:51:02,559 --> 00:51:04,880
you know it's effectively

1025
00:51:04,880 --> 00:51:08,880
you know living on microsoft ces this is

1026
00:51:16,559 --> 00:51:19,359
how often do you see such attacks in a

1027
00:51:19,359 --> 00:51:21,920
production environment and what would be

1028
00:51:21,920 --> 00:51:24,079
the typical attacker

1029
00:51:24,079 --> 00:51:26,559
is c one and eight

1030
00:51:26,559 --> 00:51:28,960
is uh the stuff that all panchesters uh

1031
00:51:28,960 --> 00:51:31,599
will try whatever the infrastructure and

1032
00:51:31,599 --> 00:51:33,599
it's pretty much guaranteed to work you

1033
00:51:33,599 --> 00:51:37,200
know after a spectrops published

1034
00:51:39,839 --> 00:51:42,319
i've been talking a lot to people who do

1035
00:51:42,319 --> 00:51:44,319
security analysis they love those

1036
00:51:44,319 --> 00:51:45,920
vectors because you know they're pretty

1037
00:51:45,920 --> 00:51:48,079
much guaranteed to work

1038
00:51:48,079 --> 00:51:49,680
and the persistence methods that she

1039
00:51:49,680 --> 00:51:51,680
talked about

1040
00:51:51,680 --> 00:51:52,400
how

1041
00:51:52,400 --> 00:51:53,760
easy are they

1042
00:51:53,760 --> 00:51:54,559
to

1043
00:51:54,559 --> 00:51:55,680
spot

1044
00:51:55,680 --> 00:51:57,599
well the last one that's a relies on

1045
00:51:57,599 --> 00:52:00,400
this exit module well i don't think

1046
00:52:00,400 --> 00:52:02,960
anybody has talked about it before

1047
00:52:02,960 --> 00:52:06,400
so few people may be using it now

1048
00:52:06,400 --> 00:52:08,960
well it's easy to detect that a new exit

1049
00:52:08,960 --> 00:52:10,880
module has been

1050
00:52:10,880 --> 00:52:12,880
you know created you know and this is a

1051
00:52:12,880 --> 00:52:15,599
legit event once every five years

1052
00:52:15,599 --> 00:52:18,000
so if you see that this registry is

1053
00:52:18,000 --> 00:52:19,839
changed well you should be able to react

1054
00:52:19,839 --> 00:52:22,079
to that

1055
00:52:22,079 --> 00:52:24,800
and as regards golden certificates and

1056
00:52:24,800 --> 00:52:28,640
related stuff it will be more difficult

1057
00:52:28,880 --> 00:52:30,480
we will have serious

1058
00:52:30,480 --> 00:52:33,119
issues

1059
00:52:33,119 --> 00:52:35,280
you know the private key for the

1060
00:52:35,280 --> 00:52:39,040
certification center is stolen

1061
00:52:39,520 --> 00:52:41,839
or hijacked you know

1062
00:52:41,839 --> 00:52:45,119
or if we're not using tpm and everything

1063
00:52:45,119 --> 00:52:48,000
is stored in a storage on the house

1064
00:52:48,000 --> 00:52:49,359
and you know the private key was

1065
00:52:49,359 --> 00:52:51,760
extracted and then you know we will get

1066
00:52:51,760 --> 00:52:53,359
all the certificates that we want you

1067
00:52:53,359 --> 00:52:55,040
know detecting this stuff is nearly

1068
00:52:55,040 --> 00:52:57,520
impossible

1069
00:52:57,760 --> 00:52:59,359
you know it will be

1070
00:52:59,359 --> 00:53:01,040
better to

1071
00:53:01,040 --> 00:53:02,400
swart

1072
00:53:02,400 --> 00:53:05,280
the attack at the stage of stealing the

1073
00:53:05,280 --> 00:53:06,240
key

1074
00:53:06,240 --> 00:53:08,960
you know if the key has been stolen

1075
00:53:08,960 --> 00:53:11,119
there are very few ways of defending

1076
00:53:11,119 --> 00:53:12,480
against that

1077
00:53:12,480 --> 00:53:15,480
further

1078
00:53:16,160 --> 00:53:18,559
so for example you know if the attacker

1079
00:53:18,559 --> 00:53:21,119
has uh issued themselves a key with a

1080
00:53:21,119 --> 00:53:22,480
spokeswoman

1081
00:53:22,480 --> 00:53:25,040
it's very difficult to support it like

1082
00:53:25,040 --> 00:53:27,599
unless you actually have the ids of all

1083
00:53:27,599 --> 00:53:29,760
the certificates maintaining your cm

1084
00:53:29,760 --> 00:53:33,760
system and compare it to event 4896

1085
00:53:33,760 --> 00:53:35,440
that's the only thing i can think of at

1086
00:53:35,440 --> 00:53:38,520
the moment

1087
00:53:52,880 --> 00:53:57,640
somewhere in the middle of your speech

1088
00:53:58,160 --> 00:54:01,930
we're looking at the ca database

1089
00:54:01,930 --> 00:54:08,480
[Music]

1090
00:54:08,480 --> 00:54:10,640
and you also mentioned the power shell

1091
00:54:10,640 --> 00:54:13,200
scripts that can be used for

1092
00:54:13,200 --> 00:54:14,480
analysis

1093
00:54:14,480 --> 00:54:16,400
including the

1094
00:54:16,400 --> 00:54:18,480
easily available ones

1095
00:54:18,480 --> 00:54:21,520
no can we actually use the same scripts

1096
00:54:21,520 --> 00:54:25,800
for auditing call

1097
00:54:36,839 --> 00:54:39,359
configurations we actually had this idea

1098
00:54:39,359 --> 00:54:41,359
that you know if we have time

1099
00:54:41,359 --> 00:54:43,440
we should be able to rewrite it so that

1100
00:54:43,440 --> 00:54:46,400
she actually put it in the scheduler

1101
00:54:46,400 --> 00:54:49,599
so that it is going to generate a custom

1102
00:54:49,599 --> 00:54:51,440
event in the windows anti-lock which

1103
00:54:51,440 --> 00:54:54,079
will then be crawled by cm

1104
00:54:54,079 --> 00:54:55,920
it won't be difficult really it will

1105
00:54:55,920 --> 00:54:58,000
take like a couple of hours

1106
00:54:58,000 --> 00:55:00,160
and it will already make your regular

1107
00:55:00,160 --> 00:55:03,720
audits much better

1108
00:55:09,119 --> 00:55:10,400
see any more questions thank you very

1109
00:55:10,400 --> 00:55:13,400
much

