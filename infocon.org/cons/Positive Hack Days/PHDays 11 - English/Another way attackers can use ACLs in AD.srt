1
00:00:12,160 --> 00:00:14,639
my presentation today is

2
00:00:14,639 --> 00:00:17,440
another attacker's view of acl in active

3
00:00:17,440 --> 00:00:20,080
directory

4
00:00:40,719 --> 00:00:44,440
um the chief experts

5
00:00:47,520 --> 00:00:48,879
and i'm also

6
00:00:48,879 --> 00:00:50,480
running a telegram channel called rat

7
00:00:50,480 --> 00:00:53,120
team brothers

8
00:00:54,480 --> 00:00:56,960
and i'm trying to develop tools that you

9
00:00:56,960 --> 00:00:58,559
know would be useful to lots of people

10
00:00:58,559 --> 00:01:01,359
and make it available on github

11
00:01:01,359 --> 00:01:03,680
i held some certificates

12
00:01:03,680 --> 00:01:05,680
i'm also

13
00:01:05,680 --> 00:01:07,040
a

14
00:01:07,040 --> 00:01:08,720
member

15
00:01:08,720 --> 00:01:13,798
of a ctf team called two of us

16
00:01:18,000 --> 00:01:20,320
so first i'm gonna give you the theory

17
00:01:20,320 --> 00:01:23,360
on icls i understand that we have both

18
00:01:23,360 --> 00:01:26,240
blue teams and red teams here

19
00:01:26,240 --> 00:01:28,159
so i believe it should be of interest to

20
00:01:28,159 --> 00:01:29,840
everybody

21
00:01:29,840 --> 00:01:32,000
next i'm going to tell you about the

22
00:01:32,000 --> 00:01:34,159
privileges that exist

23
00:01:34,159 --> 00:01:36,640
about uh you know duck hull circle and

24
00:01:36,640 --> 00:01:38,159
o.c

25
00:01:38,159 --> 00:01:40,640
about privilege abuse and there will

26
00:01:40,640 --> 00:01:43,520
also be a practical part of my speech

27
00:01:43,520 --> 00:01:45,840
where i am going to show something

28
00:01:45,840 --> 00:01:48,159
interesting

29
00:01:48,399 --> 00:01:51,119
do not expect any super rocket science

30
00:01:51,119 --> 00:01:54,840
or zero dice

31
00:02:00,240 --> 00:02:02,799
all the stuff i'm gonna talk about has

32
00:02:02,799 --> 00:02:04,560
been previously publicly available from

33
00:02:04,560 --> 00:02:06,640
me but we only know how is the tool i'm

34
00:02:06,640 --> 00:02:09,440
going to show

35
00:02:09,440 --> 00:02:11,520
you

36
00:02:14,080 --> 00:02:16,239
uh

37
00:02:17,920 --> 00:02:20,239
so we have active directory

38
00:02:20,239 --> 00:02:22,640
there are numerous entities inside

39
00:02:22,640 --> 00:02:24,720
active directory

40
00:02:24,720 --> 00:02:27,280
and they all have security descriptors

41
00:02:27,280 --> 00:02:29,280
so all of them

42
00:02:29,280 --> 00:02:31,760
are protected

43
00:02:31,760 --> 00:02:36,720
such as files in network drives

44
00:02:36,720 --> 00:02:38,400
and finally

45
00:02:38,400 --> 00:02:43,040
assets in active directory as such is

46
00:02:43,040 --> 00:02:46,000
say computers and

47
00:02:46,000 --> 00:02:47,840
the root objects and so on

48
00:02:47,840 --> 00:02:51,040
so when people talk about acl in active

49
00:02:51,040 --> 00:02:53,360
directory

50
00:02:53,360 --> 00:02:55,840
what's uh assumed is that there is dacl

51
00:02:55,840 --> 00:02:58,800
and s-i-c-l

52
00:02:59,280 --> 00:03:02,560
is security entity while dakal is

53
00:03:02,560 --> 00:03:05,840
discretionary access

54
00:03:06,239 --> 00:03:07,599
something that we are actually

55
00:03:07,599 --> 00:03:09,200
interested in

56
00:03:09,200 --> 00:03:12,720
what is the security descriptor

57
00:03:16,640 --> 00:03:19,640
security

58
00:03:20,959 --> 00:03:22,800
so security descriptor

59
00:03:22,800 --> 00:03:24,319
contains the owner

60
00:03:24,319 --> 00:03:26,480
and the owner group

61
00:03:26,480 --> 00:03:28,400
people who actually create it

62
00:03:28,400 --> 00:03:30,560
and there is also cycle which is empty

63
00:03:30,560 --> 00:03:33,440
ssl suggested the usual case

64
00:03:33,440 --> 00:03:35,599
and we also see dako decal has a

65
00:03:35,599 --> 00:03:37,440
structure of its own

66
00:03:37,440 --> 00:03:40,080
and it also has some data which is

67
00:03:40,080 --> 00:03:42,319
effectively the ace

68
00:03:42,319 --> 00:03:45,679
access control entries

69
00:04:09,040 --> 00:04:12,000
there is also security descriptor

70
00:04:12,000 --> 00:04:14,159
which is contained in anti-security

71
00:04:14,159 --> 00:04:16,320
description

72
00:04:16,320 --> 00:04:18,798
for every objects

73
00:04:18,798 --> 00:04:21,120
that's the slice just uh the petrol

74
00:04:21,120 --> 00:04:23,360
hazards as well so he's got his own

75
00:04:23,360 --> 00:04:24,880
security descriptor

76
00:04:24,880 --> 00:04:29,120
and this is binary data which is then

77
00:04:51,199 --> 00:04:53,360
i guess most of you red team and blue

78
00:04:53,360 --> 00:04:55,840
team have seen it

79
00:04:55,840 --> 00:04:58,000
this picture is very good at

80
00:04:58,000 --> 00:05:00,080
demonstrating you know the graphic part

81
00:05:00,080 --> 00:05:02,160
of what we have been discussing

82
00:05:02,160 --> 00:05:05,440
so there is a protected assets

83
00:05:05,440 --> 00:05:06,960
in this particular

84
00:05:06,960 --> 00:05:09,759
example this is user p petrol and he's

85
00:05:09,759 --> 00:05:12,639
got his security descriptor

86
00:05:12,639 --> 00:05:16,240
at the top we show the objects

87
00:05:16,240 --> 00:05:18,400
which contains security scripture so we

88
00:05:18,400 --> 00:05:20,880
see the owner

89
00:05:20,880 --> 00:05:22,880
owner

90
00:05:22,880 --> 00:05:25,680
there is sackle

91
00:05:26,320 --> 00:05:29,600
and the string is here

92
00:05:29,600 --> 00:05:33,520
they actually form the access list

93
00:05:34,960 --> 00:05:38,840
is comprised of ace

94
00:05:50,880 --> 00:05:54,159
so we keep going deeper

95
00:05:56,400 --> 00:05:59,360
so ace is actually the last entity

96
00:05:59,360 --> 00:06:01,919
we wanted to discuss here ace has got

97
00:06:01,919 --> 00:06:04,080
its own structure as well

98
00:06:04,080 --> 00:06:07,199
so a single line here will have its own

99
00:06:07,199 --> 00:06:08,400
structure

100
00:06:08,400 --> 00:06:12,240
it has a 32-bit set of flags

101
00:06:12,240 --> 00:06:14,240
but even more importantly it has a

102
00:06:14,240 --> 00:06:18,000
42-bit access mask

103
00:06:18,720 --> 00:06:21,199
access

104
00:06:31,759 --> 00:06:34,400
obviously that of a 32-bit value

105
00:06:34,400 --> 00:06:35,759
some number

106
00:06:35,759 --> 00:06:37,120
and every bit

107
00:06:37,120 --> 00:06:39,360
is reserved for some function

108
00:06:39,360 --> 00:06:41,120
so we see for example the first four

109
00:06:41,120 --> 00:06:43,039
bits

110
00:06:43,039 --> 00:06:44,880
g g v g

111
00:06:44,880 --> 00:06:49,479
e g r and something else

112
00:06:56,319 --> 00:06:58,240
and they can be managed from the very

113
00:06:58,240 --> 00:06:59,360
beginning

114
00:06:59,360 --> 00:07:03,240
now linux got rvs

115
00:07:16,240 --> 00:07:19,120
so if for example one user has got

116
00:07:19,120 --> 00:07:21,599
generic hole

117
00:07:21,599 --> 00:07:23,680
for you know another user or another

118
00:07:23,680 --> 00:07:28,240
object well obviously he can do anything

119
00:07:43,039 --> 00:07:47,120
you know it can support acs and ldap

120
00:07:47,120 --> 00:07:49,199
and in packets has does uh has i'm sorry

121
00:07:49,199 --> 00:07:53,120
it does a beautiful parsing of uh

122
00:07:53,599 --> 00:07:55,520
immediate so ac

123
00:07:55,520 --> 00:07:58,240
is shown here you will see here who

124
00:07:58,240 --> 00:08:00,319
actually has rights to this object this

125
00:08:00,319 --> 00:08:02,720
is delta sid and there's also a mask

126
00:08:02,720 --> 00:08:06,160
which shows privileges um this is ac

127
00:08:06,160 --> 00:08:08,560
type 1.

128
00:08:08,560 --> 00:08:12,319
and we will discuss ac type 2

129
00:08:21,039 --> 00:08:24,240
and then we have object specific rights

130
00:08:24,240 --> 00:08:27,639
what are these

131
00:08:29,919 --> 00:08:32,958
there is an aggregation table uh

132
00:08:32,958 --> 00:08:35,839
which lists all these acls

133
00:08:35,839 --> 00:08:38,719
such as child

134
00:08:38,719 --> 00:08:40,880
and rights property

135
00:08:40,880 --> 00:08:43,360
and extend it right generic all and

136
00:08:43,360 --> 00:08:46,640
generic execute write and read

137
00:08:46,640 --> 00:08:47,600
now

138
00:08:47,600 --> 00:08:51,040
all of them are there in this table

139
00:08:51,040 --> 00:08:54,760
split the show slides

140
00:08:57,360 --> 00:09:00,720
so we see the mask here 13 13 80 and

141
00:09:00,720 --> 00:09:03,680
it's obviously in hexadecimal

142
00:09:03,680 --> 00:09:06,720
i'm sorry it's in decimal and uh we turn

143
00:09:06,720 --> 00:09:10,560
it into hexadecimal

144
00:09:13,120 --> 00:09:14,000
we can

145
00:09:14,000 --> 00:09:16,959
parse this mask using the table

146
00:09:16,959 --> 00:09:18,800
to check the privileges

147
00:09:18,800 --> 00:09:20,880
that this object has

148
00:09:20,880 --> 00:09:22,640
for user api

149
00:09:22,640 --> 00:09:24,720
so two in front

150
00:09:24,720 --> 00:09:26,560
means raise control

151
00:09:26,560 --> 00:09:30,000
then 100 in hex

152
00:09:30,000 --> 00:09:32,480
is extended right

153
00:09:32,480 --> 00:09:35,680
30 is a right property and reach

154
00:09:35,680 --> 00:09:37,600
property

155
00:09:37,600 --> 00:09:42,399
because 30 is 0x10 and 0x20

156
00:09:42,399 --> 00:09:43,360
and

157
00:09:43,360 --> 00:09:46,920
least challenged

158
00:09:50,000 --> 00:09:53,279
once we've uh you know selected some uh

159
00:09:53,279 --> 00:09:56,800
generics in a duke and other properties

160
00:09:56,800 --> 00:09:59,120
you know it's all represented like this

161
00:09:59,120 --> 00:10:01,680
in a compressed way so there is a mask

162
00:10:01,680 --> 00:10:04,319
there is a set

163
00:10:05,360 --> 00:10:10,240
but it's very easy to set these masks up

164
00:10:10,480 --> 00:10:12,240
and we can check

165
00:10:12,240 --> 00:10:14,800
if such a mask is available for a given

166
00:10:14,800 --> 00:10:16,800
ac

167
00:10:16,800 --> 00:10:19,800
that's

168
00:10:22,160 --> 00:10:24,240
you know configure a mask

169
00:10:24,240 --> 00:10:26,800
or we can delete it using the

170
00:10:26,800 --> 00:10:30,359
logical operations

171
00:10:44,560 --> 00:10:48,399
so we can drill into any ac here to see

172
00:10:48,399 --> 00:10:50,720
what's inside

173
00:10:50,720 --> 00:10:54,399
for every object in active directory

174
00:10:54,399 --> 00:10:56,079
we will see

175
00:10:56,079 --> 00:10:58,959
a different set of privileges and rights

176
00:10:58,959 --> 00:11:02,239
permissions and properties

177
00:11:03,600 --> 00:11:06,079
at the top and the left we see it's for

178
00:11:06,079 --> 00:11:07,360
user

179
00:11:07,360 --> 00:11:09,040
petrol

180
00:11:09,040 --> 00:11:10,560
on the bottom

181
00:11:10,560 --> 00:11:12,320
for the group on the right for the

182
00:11:12,320 --> 00:11:15,120
computer

183
00:11:15,120 --> 00:11:17,920
the number of permissions and privileges

184
00:11:17,920 --> 00:11:20,640
is obviously different it's easy to spot

185
00:11:20,640 --> 00:11:22,720
right away

186
00:11:22,720 --> 00:11:24,880
we'll always be able to see that every

187
00:11:24,880 --> 00:11:28,000
object has got to this generics like

188
00:11:28,000 --> 00:11:31,839
write permissions and read permissions

189
00:11:33,519 --> 00:11:35,839
and there are also some object specific

190
00:11:35,839 --> 00:11:38,320
privileges

191
00:11:38,320 --> 00:11:40,079
this is where you may have the following

192
00:11:40,079 --> 00:11:43,079
questions

193
00:11:54,880 --> 00:11:56,560
in the computer fields what about the

194
00:11:56,560 --> 00:11:58,480
other privileges

195
00:11:58,480 --> 00:12:01,040
well for the other privileges we have a

196
00:12:01,040 --> 00:12:04,079
different type of ace

197
00:12:04,079 --> 00:12:08,720
and they internally contain objects

198
00:12:08,720 --> 00:12:11,360
so every object type has got its own

199
00:12:11,360 --> 00:12:13,200
guide

200
00:12:13,200 --> 00:12:15,040
and let's analyze it

201
00:12:15,040 --> 00:12:18,800
on the uh using the example

202
00:12:20,079 --> 00:12:23,440
and they effectively enable us to give

203
00:12:23,440 --> 00:12:26,800
the user dc sync privileges

204
00:12:26,800 --> 00:12:30,639
you probably know that it enables domain

205
00:12:30,639 --> 00:12:32,880
uh synchronization i think so this is

206
00:12:32,880 --> 00:12:35,920
what attackers use very often

207
00:12:35,920 --> 00:12:37,920
so when users for example synchronize

208
00:12:37,920 --> 00:12:41,680
with azure id can be targeted with azure

209
00:12:41,680 --> 00:12:44,079
id

210
00:12:48,160 --> 00:12:51,440
so you know once they gather privileges

211
00:12:51,440 --> 00:12:54,079
enabling dc sync we can actually

212
00:12:54,079 --> 00:12:57,360
compromise the whole domain

213
00:12:57,360 --> 00:12:59,600
so we can see here that the first two

214
00:12:59,600 --> 00:13:01,120
object types

215
00:13:01,120 --> 00:13:03,839
you know are in fact different

216
00:13:03,839 --> 00:13:06,560
yeah one

217
00:13:09,760 --> 00:13:12,399
shown at the top is the old structure

218
00:13:12,399 --> 00:13:14,240
which has masks in it

219
00:13:14,240 --> 00:13:17,040
shown below is the extended structure

220
00:13:17,040 --> 00:13:20,079
which features object types

221
00:13:20,079 --> 00:13:23,040
and it was added in order to support and

222
00:13:23,040 --> 00:13:26,959
maintain additional objects

223
00:13:27,600 --> 00:13:30,000
and in order to make it expandable in

224
00:13:30,000 --> 00:13:31,680
the future

225
00:13:31,680 --> 00:13:33,760
rather than you know

226
00:13:33,760 --> 00:13:35,440
increase the bed size

227
00:13:35,440 --> 00:13:37,839
they decided to

228
00:13:37,839 --> 00:13:40,560
use this object type based model object

229
00:13:40,560 --> 00:13:42,800
type

230
00:13:43,120 --> 00:13:44,959
so there is the object type field here

231
00:13:44,959 --> 00:13:48,840
and you can also see sit here

232
00:13:48,840 --> 00:13:51,919
[Music]

233
00:13:56,720 --> 00:13:59,199
when we write one of these privileges in

234
00:13:59,199 --> 00:14:02,959
ace we shall see in

235
00:14:09,440 --> 00:14:11,839
this is how we can now craft pretty much

236
00:14:11,839 --> 00:14:14,720
any ac

237
00:14:14,720 --> 00:14:17,040
so if

238
00:14:27,760 --> 00:14:30,760
uh

239
00:14:32,160 --> 00:14:34,079
if we need some extended privilege we

240
00:14:34,079 --> 00:14:36,320
may want to consult the documents see

241
00:14:36,320 --> 00:14:38,480
the object types crafted

242
00:14:38,480 --> 00:14:42,000
create this ac and thus have ourselves

243
00:14:42,000 --> 00:14:43,680
any privilege

244
00:14:43,680 --> 00:14:46,320
so this is like deep level exploration

245
00:14:46,320 --> 00:14:48,399
of security the scriptures suckle tackle

246
00:14:48,399 --> 00:14:49,839
and ac

247
00:14:49,839 --> 00:14:51,360
now we have

248
00:14:51,360 --> 00:14:53,760
everything we need to make the next step

249
00:14:53,760 --> 00:14:56,320
what it's like yeah

250
00:14:56,320 --> 00:14:58,800
this slide

251
00:15:11,279 --> 00:15:13,120
and it's an interesting element really

252
00:15:13,120 --> 00:15:15,839
it should be covered

253
00:15:15,920 --> 00:15:19,519
in fact for windows and active directory

254
00:15:19,519 --> 00:15:22,880
there are lots of weird things really

255
00:15:22,880 --> 00:15:25,440
we're things that administrators

256
00:15:25,440 --> 00:15:29,360
and security people should know about it

257
00:15:30,720 --> 00:15:35,519
on the left i wanted to create a new ac

258
00:15:36,480 --> 00:15:40,079
so i pressed create ac

259
00:15:53,759 --> 00:15:57,440
so i created an ac from scratch and it

260
00:15:57,440 --> 00:15:59,680
already was pre-populated with this

261
00:15:59,680 --> 00:16:01,040
flags

262
00:16:01,040 --> 00:16:03,199
and therefore it's so easy to miss this

263
00:16:03,199 --> 00:16:06,720
flag here called write all properties

264
00:16:06,720 --> 00:16:09,199
so if you created an mcac

265
00:16:09,199 --> 00:16:12,079
and you saved it

266
00:16:12,160 --> 00:16:14,320
to see that you know it's no longer

267
00:16:14,320 --> 00:16:16,560
empty

268
00:16:16,560 --> 00:16:17,920
so you may think

269
00:16:17,920 --> 00:16:20,560
that if you create an empty

270
00:16:20,560 --> 00:16:22,959
ac

271
00:16:33,920 --> 00:16:37,560
we shall also see

272
00:16:46,880 --> 00:16:50,240
this is not because i decided to make

273
00:16:50,240 --> 00:16:51,920
this demo easier

274
00:16:51,920 --> 00:16:53,920
[Music]

275
00:16:53,920 --> 00:16:55,680
this is what you will see in real life

276
00:16:55,680 --> 00:16:57,519
you know privileges like this

277
00:16:57,519 --> 00:16:59,839
will be set by default

278
00:16:59,839 --> 00:17:01,199
now the best thing you can do is

279
00:17:01,199 --> 00:17:04,079
actually scroll it down and select you

280
00:17:04,079 --> 00:17:06,079
know remove all the

281
00:17:06,079 --> 00:17:09,599
all the takes or deselect all um

282
00:17:09,599 --> 00:17:11,599
so permissions are here

283
00:17:11,599 --> 00:17:14,719
computer level permissions

284
00:17:14,799 --> 00:17:16,720
so the stuff you know you can show in

285
00:17:16,720 --> 00:17:18,959
the mask is there but the one that can

286
00:17:18,959 --> 00:17:21,119
be fit in the mask

287
00:17:21,119 --> 00:17:23,919
is shown here it's uh followed by proper

288
00:17:23,919 --> 00:17:26,079
systems

289
00:17:29,039 --> 00:17:30,720
so the objects here

290
00:17:30,720 --> 00:17:32,720
have privileges

291
00:17:32,720 --> 00:17:34,320
and they also have properties and this

292
00:17:34,320 --> 00:17:36,480
is important

293
00:17:36,480 --> 00:17:38,799
um in fact there can be so many

294
00:17:38,799 --> 00:17:41,200
properties

295
00:17:41,200 --> 00:17:42,720
for example

296
00:17:42,720 --> 00:17:46,960
if we have a privilege called write all

297
00:17:53,840 --> 00:17:55,919
for example user account control

298
00:17:55,919 --> 00:18:00,080
property this property contains a number

299
00:18:00,080 --> 00:18:02,240
and this number can translate into a

300
00:18:02,240 --> 00:18:04,240
particular mask

301
00:18:04,240 --> 00:18:07,280
and not any sequence of bits will work

302
00:18:07,280 --> 00:18:08,960
there again it will depend on your

303
00:18:08,960 --> 00:18:10,640
privileges and you can write there

304
00:18:10,640 --> 00:18:12,960
that's right

305
00:18:12,960 --> 00:18:16,000
the pictures so if it is writable

306
00:18:16,000 --> 00:18:18,720
actually i put it differently

307
00:18:18,720 --> 00:18:21,039
all the listed properties are right so

308
00:18:21,039 --> 00:18:24,320
both as attackers and as soccer please

309
00:18:24,320 --> 00:18:28,240
we are particularly interested in

310
00:18:38,880 --> 00:18:40,720
so you must have heard about shadow

311
00:18:40,720 --> 00:18:43,720
credentials

312
00:18:44,080 --> 00:18:47,360
and uh there is a tool uh called the

313
00:18:47,360 --> 00:18:50,640
thing on uh c-sharp and python

314
00:18:50,640 --> 00:18:52,080
which enables you

315
00:18:52,080 --> 00:18:56,520
to write uh some key pairs

316
00:18:59,120 --> 00:19:02,400
and then do authorization using it uh ms

317
00:19:02,400 --> 00:19:05,200
ds allowed to act on

318
00:19:05,200 --> 00:19:08,240
behalf of uh whatever

319
00:19:08,240 --> 00:19:11,360
again most attackers

320
00:19:22,880 --> 00:19:25,120
next

321
00:19:27,360 --> 00:19:30,400
which is another property and by the way

322
00:19:30,400 --> 00:19:32,480
set of properties available for

323
00:19:32,480 --> 00:19:35,760
different objects will differ

324
00:19:35,919 --> 00:19:37,840
naturally this machine quota will only

325
00:19:37,840 --> 00:19:39,840
be found in the domain object not

326
00:19:39,840 --> 00:19:41,120
anywhere else

327
00:19:41,120 --> 00:19:42,720
and it will actually tell you know how

328
00:19:42,720 --> 00:19:45,679
many users he cannot say

329
00:19:45,679 --> 00:19:49,039
script and the next uh property

330
00:19:49,039 --> 00:19:51,120
are two interesting

331
00:19:51,120 --> 00:19:53,919
abuse trajectories if this property is

332
00:19:53,919 --> 00:19:56,559
writable you can actually write a script

333
00:19:56,559 --> 00:19:57,280
there

334
00:19:57,280 --> 00:19:59,760
which will be launched when the user

335
00:19:59,760 --> 00:20:01,120
logs on

336
00:20:01,120 --> 00:20:04,000
even besides property so even up for

337
00:20:04,000 --> 00:20:06,559
example if he can write into petrov's

338
00:20:06,559 --> 00:20:07,760
property

339
00:20:07,760 --> 00:20:10,080
he can actually write a script into

340
00:20:10,080 --> 00:20:11,679
petrov's

341
00:20:11,679 --> 00:20:14,000
writable property there it's an

342
00:20:14,000 --> 00:20:17,360
interesting way of abusing it

343
00:20:19,120 --> 00:20:21,520
however it's an interesting attack

344
00:20:21,520 --> 00:20:24,080
vector if the user is actually live you

345
00:20:24,080 --> 00:20:27,520
know if the user logs into the systems

346
00:20:27,520 --> 00:20:30,400
well the second one is only relevant to

347
00:20:30,400 --> 00:20:31,679
terminals

348
00:20:31,679 --> 00:20:35,400
and terminal servers

349
00:20:46,320 --> 00:20:49,320
um

350
00:20:55,200 --> 00:20:57,360
actually we are going to use it a lot in

351
00:20:57,360 --> 00:21:01,000
the upcoming demonstrations

352
00:21:02,000 --> 00:21:04,400
for shadow credentials some conditions

353
00:21:04,400 --> 00:21:06,159
need to be met

354
00:21:06,159 --> 00:21:08,000
the main functional level must be above

355
00:21:08,000 --> 00:21:11,440
windows server 2016

356
00:21:12,799 --> 00:21:13,760
at least

357
00:21:13,760 --> 00:21:15,600
one domain controller should be running

358
00:21:15,600 --> 00:21:18,159
windows 7 with this request or above

359
00:21:18,159 --> 00:21:20,320
there should also be a certification

360
00:21:20,320 --> 00:21:23,678
center or pki

361
00:21:24,320 --> 00:21:27,480
that says

362
00:21:34,640 --> 00:21:37,280
to the account table in order to write

363
00:21:37,280 --> 00:21:38,640
properties

364
00:21:38,640 --> 00:21:41,520
of users or computers

365
00:21:41,520 --> 00:21:44,400
if all these conditions are met

366
00:21:44,400 --> 00:21:46,960
well you guys uh work for companies that

367
00:21:46,960 --> 00:21:48,960
certainly know how to do that

368
00:21:48,960 --> 00:21:50,720
you will certainly know that say your

369
00:21:50,720 --> 00:21:52,559
domains are great you've got good

370
00:21:52,559 --> 00:21:53,919
policies

371
00:21:53,919 --> 00:21:56,799
and like 99 of companies present here

372
00:21:56,799 --> 00:21:59,039
today we'll have certification center

373
00:21:59,039 --> 00:22:02,720
and pki properly configured

374
00:22:04,799 --> 00:22:07,280
about certification center phones as

375
00:22:07,280 --> 00:22:10,159
well and they can be abused but let's go

376
00:22:10,159 --> 00:22:11,039
into it

377
00:22:11,039 --> 00:22:13,600
let's assume that certification center

378
00:22:13,600 --> 00:22:16,879
is properly configured

379
00:22:18,320 --> 00:22:20,320
so right we can what are we going to

380
00:22:20,320 --> 00:22:21,280
write there

381
00:22:21,280 --> 00:22:23,039
there will be some key pair that we'll

382
00:22:23,039 --> 00:22:27,240
be using later on for authorization

383
00:22:52,880 --> 00:22:55,120
now everybody knows that kerberos has

384
00:22:55,120 --> 00:22:57,520
got three heads so there will be six

385
00:22:57,520 --> 00:22:58,480
arrows

386
00:22:58,480 --> 00:23:00,799
and we will only consider

387
00:23:00,799 --> 00:23:03,039
you know the first uh

388
00:23:03,039 --> 00:23:04,880
the first uh three i think the ones you

389
00:23:04,880 --> 00:23:06,880
see in the slate in the slide and

390
00:23:06,880 --> 00:23:08,159
they're different from your usual

391
00:23:08,159 --> 00:23:10,720
kerberos

392
00:23:11,760 --> 00:23:15,520
will happen in a particular format

393
00:23:20,080 --> 00:23:21,280
and we will be going through

394
00:23:21,280 --> 00:23:24,799
authorization using key bearers

395
00:23:25,679 --> 00:23:28,400
will be getting the usual

396
00:23:28,400 --> 00:23:31,280
tgt tickets

397
00:23:31,280 --> 00:23:34,720
next we are requesting tgs

398
00:23:34,720 --> 00:23:37,120
and why

399
00:23:50,480 --> 00:23:52,880
a token or something that they will use

400
00:23:52,880 --> 00:23:54,480
for authorization

401
00:23:54,480 --> 00:23:57,919
so they press their smart card

402
00:24:00,080 --> 00:24:02,559
all the services that go

403
00:24:02,559 --> 00:24:05,559
microsoft

404
00:24:08,880 --> 00:24:11,279
however we know that microsoft loves to

405
00:24:11,279 --> 00:24:12,720
sacrifice

406
00:24:12,720 --> 00:24:15,360
security for a convenience

407
00:24:15,360 --> 00:24:16,640
and therefore they've developed

408
00:24:16,640 --> 00:24:19,039
something we are going to abuse

409
00:24:19,039 --> 00:24:20,640
at some point in time

410
00:24:20,640 --> 00:24:22,559
microsoft

411
00:24:22,559 --> 00:24:26,080
passes to the client declined ntlm hash

412
00:24:26,080 --> 00:24:27,279
besides

413
00:24:27,279 --> 00:24:32,000
so if one user uh key credentialing

414
00:24:32,000 --> 00:24:34,159
can write the key credential link of

415
00:24:34,159 --> 00:24:36,640
another user and can put some key pair

416
00:24:36,640 --> 00:24:37,679
there

417
00:24:37,679 --> 00:24:40,480
then he should be able to obtain the

418
00:24:40,480 --> 00:24:43,279
ntlm hash of that user

419
00:24:43,279 --> 00:24:47,720
and i'm showing how it can be done here

420
00:24:58,480 --> 00:25:01,640
so tgs

421
00:25:05,919 --> 00:25:10,000
so it's not your regular tjt ticket

422
00:25:10,000 --> 00:25:12,880
and it's not encrypted using users uh

423
00:25:12,880 --> 00:25:15,520
kerberos keys

424
00:25:15,520 --> 00:25:19,039
which would be the case elsewhere

425
00:25:21,760 --> 00:25:23,760
it will use the session key for

426
00:25:23,760 --> 00:25:25,200
encryption

427
00:25:25,200 --> 00:25:28,400
that's why you sent age 18.

428
00:25:28,400 --> 00:25:31,679
and back you know tgs wrap user teaser

429
00:25:31,679 --> 00:25:34,559
is going to return a tgs ticket that can

430
00:25:34,559 --> 00:25:36,559
be encrypted a decrypt i'm sorry we'll

431
00:25:36,559 --> 00:25:39,279
take antelope out of it

432
00:25:39,279 --> 00:25:42,799
shown below it's the wish career tool

433
00:25:52,400 --> 00:25:54,159
for example here we can see that we've

434
00:25:54,159 --> 00:25:57,039
got two devices

435
00:25:57,039 --> 00:25:58,960
and in fact this still is mostly used

436
00:25:58,960 --> 00:26:00,960
for tokens and cars that's why i'm

437
00:26:00,960 --> 00:26:03,760
saying we've got two devices

438
00:26:03,760 --> 00:26:06,480
that we can manage

439
00:26:07,760 --> 00:26:09,600
i hope you're all subscribed to this

440
00:26:09,600 --> 00:26:11,360
telegram channel

441
00:26:11,360 --> 00:26:16,240
so this is recently released and abuse

442
00:26:16,320 --> 00:26:18,799
scenario they say if you have a generic

443
00:26:18,799 --> 00:26:19,840
right

444
00:26:19,840 --> 00:26:20,960
privilege

445
00:26:20,960 --> 00:26:22,720
and you have you know as a group generic

446
00:26:22,720 --> 00:26:24,400
variety computer

447
00:26:24,400 --> 00:26:27,679
computer user generic right

448
00:26:27,679 --> 00:26:30,320
you can get the antelope the ntlm hash

449
00:26:30,320 --> 00:26:32,960
for the computer

450
00:26:35,279 --> 00:26:37,120
well i'm trying to give you the compact

451
00:26:37,120 --> 00:26:39,039
version of it at least this is not

452
00:26:39,039 --> 00:26:41,520
really a know-how

453
00:26:41,520 --> 00:26:44,080
this attack was described in detail

454
00:26:44,080 --> 00:26:47,039
about a year ago

455
00:26:47,039 --> 00:26:51,200
so we can see how it's done on linux

456
00:26:51,760 --> 00:26:54,799
and you can also do it on windows using

457
00:26:54,799 --> 00:26:57,679
and other tools

458
00:26:58,720 --> 00:27:00,320
let me add a bit more to this

459
00:27:00,320 --> 00:27:02,720
exploration so that's uh

460
00:27:02,720 --> 00:27:07,559
another abuse scenario is uh

461
00:27:13,919 --> 00:27:15,600
there is something called user account

462
00:27:15,600 --> 00:27:17,200
control and there is a value there and

463
00:27:17,200 --> 00:27:19,180
this value transfer

464
00:27:19,180 --> 00:27:22,249
[Music]

465
00:27:31,679 --> 00:27:34,480
so you will see that we've got

466
00:27:34,480 --> 00:27:37,520
several ones there

467
00:27:37,919 --> 00:27:40,080
and the table below suggests that this

468
00:27:40,080 --> 00:27:42,399
is an option that enables us

469
00:27:42,399 --> 00:27:45,679
to switch and on and off kerbers during

470
00:27:45,679 --> 00:27:48,480
authentication

471
00:27:54,000 --> 00:27:56,720
so if we can write into properties

472
00:27:56,720 --> 00:27:59,120
naturally we can write into user account

473
00:27:59,120 --> 00:28:00,880
control attribute

474
00:28:00,880 --> 00:28:03,200
and then we can switch carburetors

475
00:28:03,200 --> 00:28:05,840
authentication for users

476
00:28:05,840 --> 00:28:09,600
and get their tgt tickets

477
00:28:09,600 --> 00:28:10,880
it's actually a bit more complicated

478
00:28:10,880 --> 00:28:12,399
than that but in any case we can get the

479
00:28:12,399 --> 00:28:15,120
tgt ticket which we can add brute force

480
00:28:15,120 --> 00:28:17,600
offline

481
00:28:17,600 --> 00:28:20,799
and then much will really depend on how

482
00:28:20,799 --> 00:28:23,600
crack or brute forcing resistance

483
00:28:23,600 --> 00:28:24,799
your

484
00:28:24,799 --> 00:28:26,960
passwords are so we've talked about you

485
00:28:26,960 --> 00:28:28,880
know masks and object types and

486
00:28:28,880 --> 00:28:31,279
properties and privileges now all of

487
00:28:31,279 --> 00:28:32,799
this knowledge

488
00:28:32,799 --> 00:28:35,919
will try to bring together

489
00:28:35,919 --> 00:28:39,200
and see how a pen tester would work

490
00:28:39,200 --> 00:28:42,000
and therefore

491
00:28:49,600 --> 00:28:51,279
so for example

492
00:28:51,279 --> 00:28:55,919
if we have domain administrator rights

493
00:28:56,799 --> 00:29:00,159
we want to get ourselves the dc sync

494
00:29:00,159 --> 00:29:01,520
privilege

495
00:29:01,520 --> 00:29:05,039
and assign it to a user called test

496
00:29:05,039 --> 00:29:07,679
i'm looking here at several tools and

497
00:29:07,679 --> 00:29:09,600
they are slightly different in operation

498
00:29:09,600 --> 00:29:11,840
so we'll check it out let's start with

499
00:29:11,840 --> 00:29:14,720
bloody a.d

500
00:29:15,840 --> 00:29:18,559
we've set all the flags we gave you know

501
00:29:18,559 --> 00:29:21,760
the right account rights and uh

502
00:29:21,760 --> 00:29:22,720
dc

503
00:29:22,720 --> 00:29:25,200
uh dc sync to user why don't we see that

504
00:29:25,200 --> 00:29:27,520
the attack is mountable

505
00:29:27,520 --> 00:29:30,640
however if we check the initial code

506
00:29:30,640 --> 00:29:34,399
we shall see that the bloody ad tool

507
00:29:34,399 --> 00:29:36,480
rather than setting you know the three

508
00:29:36,480 --> 00:29:38,480
ace

509
00:29:38,480 --> 00:29:41,120
you know it simply says generic all

510
00:29:41,120 --> 00:29:42,960
culturally call

511
00:29:42,960 --> 00:29:45,440
represents all the ticks there

512
00:29:45,440 --> 00:29:48,080
so it will give us a dc sync privilege

513
00:29:48,080 --> 00:29:49,039
as well

514
00:29:49,039 --> 00:29:53,559
so this is another option for sure

515
00:29:55,520 --> 00:29:58,080
deleting this object going forward will

516
00:29:58,080 --> 00:29:59,760
be pretty difficult

517
00:29:59,760 --> 00:30:02,080
you know if a user has some privileges

518
00:30:02,080 --> 00:30:04,399
for the root objects of the domain and

519
00:30:04,399 --> 00:30:06,880
we have created ac's for in a generic

520
00:30:06,880 --> 00:30:09,600
all it will be difficult to identify the

521
00:30:09,600 --> 00:30:12,080
legitimate ac versus the illegitimate

522
00:30:12,080 --> 00:30:14,080
one and if you're doing fan tests you

523
00:30:14,080 --> 00:30:16,320
may want to restore the system back to

524
00:30:16,320 --> 00:30:18,720
normal

525
00:30:20,399 --> 00:30:22,720
so the first option

526
00:30:22,720 --> 00:30:25,360
is that we can set privileges you know

527
00:30:25,360 --> 00:30:27,440
three takes for dc sync we can do

528
00:30:27,440 --> 00:30:29,520
generic call and that pretty much does

529
00:30:29,520 --> 00:30:30,880
it

530
00:30:30,880 --> 00:30:32,480
well i decided to do it slightly

531
00:30:32,480 --> 00:30:35,480
differently

532
00:30:38,159 --> 00:30:40,399
there is an option for doing that and

533
00:30:40,399 --> 00:30:44,240
you know you can do dc sync for the user

534
00:30:44,240 --> 00:30:46,559
so i'm crafting object types here and

535
00:30:46,559 --> 00:30:49,120
you can check the source code

536
00:30:49,120 --> 00:30:52,399
to see how it can be done easily and

537
00:30:52,399 --> 00:30:54,000
conveniently

538
00:30:54,000 --> 00:30:58,399
now let's talk about abused vectors

539
00:30:59,440 --> 00:31:03,320
now people are often confused

540
00:31:05,279 --> 00:31:08,640
if a user has a generic all privileges

541
00:31:08,640 --> 00:31:10,720
for a computer

542
00:31:10,720 --> 00:31:13,679
in all probability it doesn't mean that

543
00:31:13,679 --> 00:31:15,679
the same user should be able to access

544
00:31:15,679 --> 00:31:18,640
the same computer with rdp

545
00:31:18,640 --> 00:31:20,559
not necessarily

546
00:31:20,559 --> 00:31:23,279
so physical access

547
00:31:23,279 --> 00:31:25,440
rights and privileges do not really

548
00:31:25,440 --> 00:31:28,320
apply to everything

549
00:31:30,840 --> 00:31:32,640
really

550
00:31:32,640 --> 00:31:35,919
he will still need to sort of um

551
00:31:35,919 --> 00:31:37,840
you know hijack the object to which you

552
00:31:37,840 --> 00:31:40,320
have rights

553
00:31:40,480 --> 00:31:43,039
the most popular type of abuse if you

554
00:31:43,039 --> 00:31:45,120
have generical rights

555
00:31:45,120 --> 00:31:46,960
which is equivalent to having all the

556
00:31:46,960 --> 00:31:48,960
ticks in all the tick boxes

557
00:31:48,960 --> 00:31:52,080
you can for example

558
00:31:52,080 --> 00:31:54,880
change the password

559
00:31:54,880 --> 00:31:56,720
for the account and this will kick the

560
00:31:56,720 --> 00:31:59,360
machine out of the domain unless it's

561
00:31:59,360 --> 00:32:02,000
the domain controller

562
00:32:02,000 --> 00:32:05,519
for that would be easy to notice right

563
00:32:05,519 --> 00:32:08,240
alternatively you can exploit rbcd and

564
00:32:08,240 --> 00:32:11,039
you don't really need generic all here

565
00:32:11,039 --> 00:32:13,760
all you will need is generic write which

566
00:32:13,760 --> 00:32:16,480
is a subset of generically you can also

567
00:32:16,480 --> 00:32:19,840
read labs and gmsa

568
00:32:19,840 --> 00:32:22,559
which should enable you to

569
00:32:22,559 --> 00:32:24,159
get access to

570
00:32:24,159 --> 00:32:26,080
local accounts and you can also do

571
00:32:26,080 --> 00:32:28,720
shadow credentials shadow credentials

572
00:32:28,720 --> 00:32:30,640
attack the one i described previously

573
00:32:30,640 --> 00:32:34,240
which will give you the hashtag

574
00:32:34,559 --> 00:32:37,200
and then you can also for example remove

575
00:32:37,200 --> 00:32:40,000
the smart card

576
00:32:40,240 --> 00:32:43,039
so this is a computer abuse option

577
00:32:43,039 --> 00:32:44,960
at the user level you can do reset

578
00:32:44,960 --> 00:32:47,919
passwords you can easily do that

579
00:32:47,919 --> 00:32:49,760
nothing will

580
00:32:49,760 --> 00:32:51,919
go wrong because of that

581
00:32:51,919 --> 00:32:54,320
next you can do set sp

582
00:32:54,320 --> 00:32:55,760
which is also called

583
00:32:55,760 --> 00:32:58,960
targets kerberos

584
00:32:58,960 --> 00:33:01,200
property so if you have generic rights

585
00:33:01,200 --> 00:33:04,000
and you can write into this property

586
00:33:04,000 --> 00:33:07,519
you can do asp.net and then kerberos

587
00:33:07,519 --> 00:33:09,679
will issue a kerberos ticket for this

588
00:33:09,679 --> 00:33:13,279
espn so this spn is owned by the user

589
00:33:13,279 --> 00:33:15,039
and you know it will get this tickets

590
00:33:15,039 --> 00:33:18,159
encrypted with karbieroski

591
00:33:18,159 --> 00:33:21,480
of um

592
00:33:24,559 --> 00:33:26,320
right so we will set a bit in a

593
00:33:26,320 --> 00:33:28,159
particular spot

594
00:33:28,159 --> 00:33:30,720
and we will switch gabaeros off during

595
00:33:30,720 --> 00:33:32,799
authentication and you know then we

596
00:33:32,799 --> 00:33:35,200
request the ticket tgs ticket and we get

597
00:33:35,200 --> 00:33:36,080
it

598
00:33:36,080 --> 00:33:38,720
shadow credentials and finally script

599
00:33:38,720 --> 00:33:39,600
and

600
00:33:39,600 --> 00:33:43,120
mscs intel program

601
00:33:43,120 --> 00:33:45,360
something i covered previously you know

602
00:33:45,360 --> 00:33:47,679
this interactive logo and terminal

603
00:33:47,679 --> 00:33:50,080
scenarios

604
00:33:50,399 --> 00:33:54,879
so generic all gives you max privileges

605
00:33:55,039 --> 00:33:57,679
now let's talk about uh you know these

606
00:33:57,679 --> 00:33:58,960
privileges

607
00:33:58,960 --> 00:34:01,519
and so you know how they form an overall

608
00:34:01,519 --> 00:34:03,039
picture so to speak

609
00:34:03,039 --> 00:34:05,440
generic all is the max privilege nothing

610
00:34:05,440 --> 00:34:07,039
beats it

611
00:34:07,039 --> 00:34:09,520
it's the limit so to speak

612
00:34:09,520 --> 00:34:12,399
now generic goal also includes such

613
00:34:12,399 --> 00:34:15,839
privileges as right tackle right owner

614
00:34:15,839 --> 00:34:18,800
generic right and all extended rights

615
00:34:18,800 --> 00:34:21,040
right

616
00:34:23,199 --> 00:34:26,239
he enables you to write in permissions

617
00:34:26,239 --> 00:34:28,560
fields

618
00:34:33,440 --> 00:34:35,760
listing aces

619
00:34:35,760 --> 00:34:40,480
so we can start you know all top tier

620
00:34:41,040 --> 00:34:42,159
all right

621
00:34:42,159 --> 00:34:44,560
object so if we have the right ducal

622
00:34:44,560 --> 00:34:48,639
privilege for a particular object

623
00:34:48,639 --> 00:34:51,359
we can effectively do full control

624
00:34:51,359 --> 00:34:53,918
we can actually escalate our privileges

625
00:34:53,918 --> 00:34:55,440
to generic goals

626
00:34:55,440 --> 00:34:58,240
not that simple

627
00:34:58,720 --> 00:35:03,040
if we have right owner we can naturally

628
00:35:13,280 --> 00:35:15,040
and we've just discussed how we can

629
00:35:15,040 --> 00:35:17,359
exploit right tackle

630
00:35:17,359 --> 00:35:19,280
computer now generic right

631
00:35:19,280 --> 00:35:22,480
generic right can be you know

632
00:35:22,480 --> 00:35:25,599
a user per user group for a computer

633
00:35:25,599 --> 00:35:27,680
so all the kinds of

634
00:35:27,680 --> 00:35:30,720
objects that can be protected but

635
00:35:30,720 --> 00:35:32,800
this um you know the usual ones we would

636
00:35:32,800 --> 00:35:34,640
want to exploit

637
00:35:34,640 --> 00:35:37,520
so for a computer we would do write rbcd

638
00:35:37,520 --> 00:35:39,520
for the user it can be target car

639
00:35:39,520 --> 00:35:41,119
browsing

640
00:35:41,119 --> 00:35:43,760
sushi group

641
00:35:45,200 --> 00:35:47,599
it's pretty boring because uh what we

642
00:35:47,599 --> 00:35:51,200
can do at the group level is add a user

643
00:35:51,200 --> 00:35:53,680
it's not bad

644
00:35:54,240 --> 00:35:56,720
so if we have generic right privilege at

645
00:35:56,720 --> 00:35:58,480
the group level well we can add new

646
00:35:58,480 --> 00:36:01,280
users to the group

647
00:36:01,760 --> 00:36:03,839
and this group going forward we'll have

648
00:36:03,839 --> 00:36:06,720
some privileges for example all extended

649
00:36:06,720 --> 00:36:09,040
and you know we can actually add a gbe

650
00:36:09,040 --> 00:36:10,839
all extended

651
00:36:10,839 --> 00:36:14,320
rights often confusing to people

652
00:36:14,320 --> 00:36:16,160
people often don't understand the

653
00:36:16,160 --> 00:36:17,839
difference between generic rights and

654
00:36:17,839 --> 00:36:20,880
all extended rights

655
00:36:22,880 --> 00:36:25,359
they're actually different you know by a

656
00:36:25,359 --> 00:36:26,720
single one

657
00:36:26,720 --> 00:36:28,800
but this one

658
00:36:28,800 --> 00:36:31,040
gives the additional functions

659
00:36:31,040 --> 00:36:33,920
so if you have all extended rise for

660
00:36:33,920 --> 00:36:38,680
a root object in a domain

661
00:36:53,520 --> 00:36:55,200
acl abuse

662
00:36:55,200 --> 00:36:57,920
this is pretty complicated you know it's

663
00:36:57,920 --> 00:37:00,560
best to learn it in practice but time is

664
00:37:00,560 --> 00:37:01,520
limited

665
00:37:01,520 --> 00:37:03,839
so please consult this diagram

666
00:37:03,839 --> 00:37:05,440
he has been around for a long time i

667
00:37:05,440 --> 00:37:09,560
have not authored it

668
00:37:20,640 --> 00:37:23,040
by my

669
00:37:33,040 --> 00:37:36,640
i found the initial idea in n packets

670
00:37:36,640 --> 00:37:40,320
so i didn't really do it from scratch

671
00:37:40,320 --> 00:37:43,680
all the attackers will know mplmx

672
00:37:43,680 --> 00:37:46,720
there is a minus i key there

673
00:37:46,720 --> 00:37:49,280
which i guess nobody uses

674
00:37:49,280 --> 00:37:50,640
so when you are relaying somebody

675
00:37:50,640 --> 00:37:53,040
successfully to ldap it starts an

676
00:37:53,040 --> 00:37:55,200
interactive session

677
00:37:55,200 --> 00:37:57,760
so that was you know the initial ldap

678
00:37:57,760 --> 00:37:59,200
shell tool

679
00:37:59,200 --> 00:38:02,079
uh you know it was just a simple little

680
00:38:02,079 --> 00:38:04,800
module which did provide some very

681
00:38:04,800 --> 00:38:07,359
useful capabilities because if you have

682
00:38:07,359 --> 00:38:11,119
this ldap shell in ldap

683
00:38:11,280 --> 00:38:14,400
naturally you can abuse acls

684
00:38:14,400 --> 00:38:17,040
there are several options for abuse at

685
00:38:17,040 --> 00:38:20,000
first and i decided to turn it into a

686
00:38:20,000 --> 00:38:23,920
separate tool which i then expanded

687
00:38:24,560 --> 00:38:26,880
you know more abuse vectors and it now

688
00:38:26,880 --> 00:38:28,480
covers

689
00:38:28,480 --> 00:38:32,440
easily potential scenarios

690
00:38:34,960 --> 00:38:37,200
it is great for linux systems because uh

691
00:38:37,200 --> 00:38:38,800
doing fan testing

692
00:38:38,800 --> 00:38:41,440
of a windows machine is a very unusual

693
00:38:41,440 --> 00:38:43,680
case you know it requires

694
00:38:43,680 --> 00:38:46,079
an unusual combination of either

695
00:38:46,079 --> 00:38:49,280
conditions or preferences

696
00:38:49,839 --> 00:38:51,520
function wise i'm not going to list

697
00:38:51,520 --> 00:38:52,640
everything

698
00:38:52,640 --> 00:38:56,160
you can see in the screen let me just

699
00:38:56,160 --> 00:38:59,119
point out that get ntlm

700
00:38:59,119 --> 00:39:01,599
get in tlm actually is a good abuse for

701
00:39:01,599 --> 00:39:03,599
the smart card scenario

702
00:39:03,599 --> 00:39:07,119
so it will list the i will write uh the

703
00:39:07,119 --> 00:39:08,480
key pair

704
00:39:08,480 --> 00:39:10,240
i will request

705
00:39:10,240 --> 00:39:14,880
the tgt ticket we'll get the session key

706
00:39:14,880 --> 00:39:17,599
then a user to user it will request the

707
00:39:17,599 --> 00:39:20,079
tgs ticket and i will use the session

708
00:39:20,079 --> 00:39:22,640
key to unpack it and we'll take the ntlm

709
00:39:22,640 --> 00:39:26,279
hash out of it

710
00:39:41,440 --> 00:39:43,680
you don't need to reset passwords you do

711
00:39:43,680 --> 00:39:45,200
not need to

712
00:39:45,200 --> 00:39:48,560
fumble with the other attributes

713
00:39:53,200 --> 00:39:55,440
the last slide i have here

714
00:39:55,440 --> 00:39:56,480
modify

715
00:39:56,480 --> 00:39:57,599
modify

716
00:39:57,599 --> 00:40:00,000
covers

717
00:40:06,000 --> 00:40:07,920
i think i will need to produce a more

718
00:40:07,920 --> 00:40:10,000
extensive help file on it but in any

719
00:40:10,000 --> 00:40:14,000
case we can actually craft any acl acl

720
00:40:14,000 --> 00:40:16,560
for an object iecl for a mask and we can

721
00:40:16,560 --> 00:40:19,040
craft it for any principle

722
00:40:19,040 --> 00:40:20,480
and it can be done

723
00:40:20,480 --> 00:40:22,960
very flexibly so we can delete it we can

724
00:40:22,960 --> 00:40:25,440
edit it we can create new and this will

725
00:40:25,440 --> 00:40:28,240
come in handy in the end when we are

726
00:40:28,240 --> 00:40:30,160
going to say clean up the results of the

727
00:40:30,160 --> 00:40:31,760
pen test

728
00:40:31,760 --> 00:40:34,319
now let's get practically just playing

729
00:40:34,319 --> 00:40:36,560
the club

730
00:40:36,880 --> 00:40:38,400
half of the time allocated for this

731
00:40:38,400 --> 00:40:40,319
presentation is over so it makes a lot

732
00:40:40,319 --> 00:40:41,440
of sense

733
00:40:41,440 --> 00:40:44,240
association we have a user who's part of

734
00:40:44,240 --> 00:40:46,480
the domain users group

735
00:40:46,480 --> 00:40:49,359
and this group may have the ed member

736
00:40:49,359 --> 00:40:51,920
privilege so that they can add a user to

737
00:40:51,920 --> 00:40:53,599
help desk one group and this group will

738
00:40:53,599 --> 00:40:55,839
have generic write privilege for help

739
00:40:55,839 --> 00:40:58,400
desk too which means they can also add

740
00:40:58,400 --> 00:41:02,319
users to help desk 2 group help desk 2

741
00:41:02,319 --> 00:41:04,960
in its churn has the right tackle

742
00:41:04,960 --> 00:41:09,119
privilege for user one

743
00:41:09,680 --> 00:41:12,000
but we also see the generic write error

744
00:41:12,000 --> 00:41:13,520
everywhere

745
00:41:13,520 --> 00:41:16,560
like i said if we create an empty acl it

746
00:41:16,560 --> 00:41:18,400
will have generic right privilege from

747
00:41:18,400 --> 00:41:21,200
the very beginning

748
00:41:21,200 --> 00:41:23,359
like i previously said this is what

749
00:41:23,359 --> 00:41:26,160
happens by default unless you are

750
00:41:26,160 --> 00:41:27,440
cautious

751
00:41:27,440 --> 00:41:29,040
right

752
00:41:29,040 --> 00:41:31,440
the group has right tackle privilege

753
00:41:31,440 --> 00:41:33,119
which means that we can set any

754
00:41:33,119 --> 00:41:34,480
permission we like

755
00:41:34,480 --> 00:41:37,599
and user one has a generic right and

756
00:41:37,599 --> 00:41:40,160
right owner for user two

757
00:41:40,160 --> 00:41:41,599
you may remember i covered this

758
00:41:41,599 --> 00:41:44,160
previously we can actually

759
00:41:44,160 --> 00:41:48,000
use it and then the owner can

760
00:41:48,560 --> 00:41:51,760
so it's a three-step abuse

761
00:41:51,760 --> 00:41:54,160
user two has generic right privilege for

762
00:41:54,160 --> 00:41:56,720
a server one and server one is part of

763
00:41:56,720 --> 00:41:58,880
help desk three group

764
00:41:58,880 --> 00:42:01,040
which has generic all

765
00:42:01,040 --> 00:42:04,160
privileged for user three and user s3

766
00:42:04,160 --> 00:42:07,040
has a force change password for admin

767
00:42:07,040 --> 00:42:09,040
and admin has a

768
00:42:09,040 --> 00:42:11,839
right decal and generic right

769
00:42:11,839 --> 00:42:16,759
for the root object of the domain

770
00:42:18,960 --> 00:42:20,480
is difficult

771
00:42:20,480 --> 00:42:23,280
but individually all these privileges

772
00:42:23,280 --> 00:42:25,119
he will come across

773
00:42:25,119 --> 00:42:28,440
no problem

774
00:42:31,760 --> 00:42:33,920
so this is something we do see a lot in

775
00:42:33,920 --> 00:42:36,160
numerous projects and please note that

776
00:42:36,160 --> 00:42:38,640
bloodhound is now panacea there are a

777
00:42:38,640 --> 00:42:41,119
lot of privileges it will not show but

778
00:42:41,119 --> 00:42:45,839
this is good topic for a different talk

779
00:42:46,400 --> 00:42:50,000
i will go through a demonstration soon

780
00:42:50,000 --> 00:42:51,920
and i was afraid you wouldn't be able to

781
00:42:51,920 --> 00:42:53,760
see it in the screen so i'm not going to

782
00:42:53,760 --> 00:42:57,200
show this picture going forward

783
00:42:57,200 --> 00:42:59,200
but if you can commit it to memory that

784
00:42:59,200 --> 00:43:00,880
should help you understand the

785
00:43:00,880 --> 00:43:03,599
demonstration

786
00:43:05,119 --> 00:43:06,560
we have uh

787
00:43:06,560 --> 00:43:08,400
right

788
00:43:08,400 --> 00:43:10,240
so

789
00:43:10,240 --> 00:43:12,400
how long would it take here you know to

790
00:43:12,400 --> 00:43:14,400
do it in power review like 10 minutes

791
00:43:14,400 --> 00:43:16,720
yeah that's what i thought so i tried

792
00:43:16,720 --> 00:43:19,359
putting it in a single tool

793
00:43:19,359 --> 00:43:21,200
so now it will take you no more than a

794
00:43:21,200 --> 00:43:23,439
minute

795
00:43:24,960 --> 00:43:26,880
now let's discuss how we're going to do

796
00:43:26,880 --> 00:43:28,400
the attack let's

797
00:43:28,400 --> 00:43:30,480
plan the attack now we see the right

798
00:43:30,480 --> 00:43:31,680
owner

799
00:43:31,680 --> 00:43:33,280
which means that okay you know we can

800
00:43:33,280 --> 00:43:35,599
modify data easily

801
00:43:35,599 --> 00:43:38,319
but now let's talk about how we are

802
00:43:38,319 --> 00:43:41,839
going to mount the attack

803
00:43:42,160 --> 00:43:44,000
and let's assume there is no

804
00:43:44,000 --> 00:43:46,800
certification center in this domain and

805
00:43:46,800 --> 00:43:50,480
shadow credentials cannot be used

806
00:43:50,800 --> 00:43:52,240
which means

807
00:43:52,240 --> 00:43:55,440
that's where i go into you know stick to

808
00:43:55,440 --> 00:43:58,560
the old way of doing it

809
00:43:58,560 --> 00:44:01,520
makes me think of my lab

810
00:44:02,640 --> 00:44:04,720
and you don't have certification centers

811
00:44:04,720 --> 00:44:08,800
in labs or in smaller networks

812
00:44:08,800 --> 00:44:10,720
so help desk one can add members just

813
00:44:10,720 --> 00:44:12,560
like help desk too

814
00:44:12,560 --> 00:44:15,520
user id and there is no way to abuse it

815
00:44:15,520 --> 00:44:18,079
user one can do targets uh kerberos

816
00:44:18,079 --> 00:44:18,880
thing

817
00:44:18,880 --> 00:44:20,640
and shadow credentials as we've

818
00:44:20,640 --> 00:44:23,200
discussed we're not going to use it and

819
00:44:23,200 --> 00:44:25,280
we can also get escalation to generic

820
00:44:25,280 --> 00:44:26,880
call and there is also right tackle

821
00:44:26,880 --> 00:44:28,880
there

822
00:44:28,880 --> 00:44:31,440
how going to attack user 2 same thing

823
00:44:31,440 --> 00:44:33,839
really at the end say we can write

824
00:44:33,839 --> 00:44:36,640
ownership

825
00:44:36,640 --> 00:44:39,359
and just like before you know we can do

826
00:44:39,359 --> 00:44:42,799
uh something that is generical

827
00:44:43,520 --> 00:44:46,880
in order to capture srv1 server and we

828
00:44:46,880 --> 00:44:48,640
have decided not to use shadow

829
00:44:48,640 --> 00:44:51,440
credentials well this means that we are

830
00:44:51,440 --> 00:44:55,680
going to use base constraint delegation

831
00:44:57,359 --> 00:44:59,359
so we can reset password and do

832
00:44:59,359 --> 00:45:01,920
everything that was listed before

833
00:45:01,920 --> 00:45:05,280
at the admin level actually we can do

834
00:45:05,280 --> 00:45:09,200
change passwords reset password rather

835
00:45:09,200 --> 00:45:13,599
the last step is that we are going to

836
00:45:13,599 --> 00:45:14,800
create an

837
00:45:14,800 --> 00:45:17,920
ac where the right user will have a dc

838
00:45:17,920 --> 00:45:19,599
sync privilege and thus we're going to

839
00:45:19,599 --> 00:45:22,160
compromise the domain this is the plan

840
00:45:22,160 --> 00:45:24,000
and um i've shown in the right what am i

841
00:45:24,000 --> 00:45:26,480
going to do we're going to use i'm sorry

842
00:45:26,480 --> 00:45:28,160
to add two users

843
00:45:28,160 --> 00:45:30,160
plus this hume data user one actually

844
00:45:30,160 --> 00:45:33,200
has a weak password

845
00:45:33,200 --> 00:45:34,960
so we can do roasting there we can brute

846
00:45:34,960 --> 00:45:37,200
force their password

847
00:45:37,200 --> 00:45:40,160
then we can to set owner we'll escalate

848
00:45:40,160 --> 00:45:42,079
to write decal and then we'll

849
00:45:42,079 --> 00:45:43,680
we'll escalate it generic goal and i

850
00:45:43,680 --> 00:45:45,520
will reset password because with

851
00:45:45,520 --> 00:45:46,640
generical

852
00:45:46,640 --> 00:45:48,480
privileges we can do that

853
00:45:48,480 --> 00:45:50,000
well naturally with right deckle we can

854
00:45:50,000 --> 00:45:52,240
do even more than that but let's let's

855
00:45:52,240 --> 00:45:54,880
stay at that

856
00:45:54,880 --> 00:45:57,440
or you know we can establish an ac that

857
00:45:57,440 --> 00:45:59,760
will enable us to do exactly that this

858
00:45:59,760 --> 00:46:01,599
is a sub option

859
00:46:01,599 --> 00:46:03,440
then we do our bcd then we reset

860
00:46:03,440 --> 00:46:05,280
password we'll reset password again and

861
00:46:05,280 --> 00:46:08,000
then we'll set a dc sync for the

862
00:46:08,000 --> 00:46:12,400
privilege so please launch my demo now

863
00:46:13,040 --> 00:46:15,440
so we are starting l

864
00:46:15,440 --> 00:46:17,520
with the user who's a part of this

865
00:46:17,520 --> 00:46:20,000
domain

866
00:46:20,800 --> 00:46:24,079
so the software is running

867
00:46:26,400 --> 00:46:28,960
the bubble and

868
00:46:45,599 --> 00:46:47,280
we also had a privilege that enabled us

869
00:46:47,280 --> 00:46:49,520
to write in properties and we are

870
00:46:49,520 --> 00:46:51,839
switching off kerberos

871
00:46:51,839 --> 00:46:54,839
pre-authentication

872
00:47:04,560 --> 00:47:07,200
so now we are getting the tgt ticket

873
00:47:07,200 --> 00:47:08,720
with the script

874
00:47:08,720 --> 00:47:11,280
and we're using rocky as the dictionary

875
00:47:11,280 --> 00:47:14,319
we are doing the brute force

876
00:47:21,280 --> 00:47:23,599
this will work if the password is uh

877
00:47:23,599 --> 00:47:27,480
simple like qrc123

878
00:47:33,920 --> 00:47:37,720
we've been lucky with the password

879
00:47:42,000 --> 00:47:43,599
and now we're also adding a machine to

880
00:47:43,599 --> 00:47:45,839
the domain that we're going to need

881
00:47:45,839 --> 00:47:49,540
later in the rbcd

882
00:47:49,540 --> 00:47:52,710
[Music]

883
00:47:58,319 --> 00:48:00,319
authentication back on to keep

884
00:48:00,319 --> 00:48:02,079
everything clean and we

885
00:48:02,079 --> 00:48:04,880
do switch user to user one

886
00:48:04,880 --> 00:48:07,040
the

887
00:48:10,079 --> 00:48:12,960
and we set user one as the owner for

888
00:48:12,960 --> 00:48:15,440
user two and then we do generic all for

889
00:48:15,440 --> 00:48:17,680
user one then we change password for

890
00:48:17,680 --> 00:48:21,040
user two to password

891
00:48:36,000 --> 00:48:37,599
delegation to

892
00:48:37,599 --> 00:48:40,559
server one and then we exploit rbcd

893
00:48:40,559 --> 00:48:44,000
through set st

894
00:48:44,400 --> 00:48:46,880
and we request uh carburetors ticket we

895
00:48:46,880 --> 00:48:49,040
impersonate the domain administrator and

896
00:48:49,040 --> 00:48:50,559
we use this ticket in order to

897
00:48:50,559 --> 00:48:54,079
compromise this physical server

898
00:48:58,880 --> 00:49:00,400
and then together with uh i'm sorry then

899
00:49:00,400 --> 00:49:02,880
with the lcc utility we get the ntlm

900
00:49:02,880 --> 00:49:04,559
hash this is how we

901
00:49:04,559 --> 00:49:08,240
now own the machine this system

902
00:49:08,240 --> 00:49:10,480
now we can get ourselves the privileges

903
00:49:10,480 --> 00:49:12,800
for it

904
00:49:13,839 --> 00:49:15,839
so you may remember it was part of the

905
00:49:15,839 --> 00:49:16,960
group

906
00:49:16,960 --> 00:49:20,400
and the antelope based authentication is

907
00:49:20,400 --> 00:49:22,079
working now and the group that had the

908
00:49:22,079 --> 00:49:24,000
privileges to change password uh

909
00:49:24,000 --> 00:49:27,280
privileges we're doing it so we've reset

910
00:49:27,280 --> 00:49:29,200
the password for user three and we

911
00:49:29,200 --> 00:49:32,400
switched over from user three

912
00:49:32,400 --> 00:49:33,920
no i'm sorry we've reset the password

913
00:49:33,920 --> 00:49:35,839
for the admin and we've switched to the

914
00:49:35,839 --> 00:49:38,000
admin that was a whole

915
00:49:38,000 --> 00:49:40,640
chain of actions and now we see the cc

916
00:49:40,640 --> 00:49:42,880
for the first user

917
00:49:42,880 --> 00:49:45,040
user one which means that we have

918
00:49:45,040 --> 00:49:46,880
completed the chain and we're now doing

919
00:49:46,880 --> 00:49:49,359
the dc sync attack this is how we have

920
00:49:49,359 --> 00:49:51,040
captured the domain and we've got

921
00:49:51,040 --> 00:49:54,000
ourselves the account for the domain

922
00:49:54,000 --> 00:49:58,359
administrator this is how it works

923
00:50:00,630 --> 00:50:03,689
[Music]

924
00:50:11,119 --> 00:50:13,760
how to escalate privileges like this but

925
00:50:13,760 --> 00:50:16,640
now let's discuss

926
00:50:17,920 --> 00:50:19,280
what would you do

927
00:50:19,280 --> 00:50:21,359
if the domain is running pki a

928
00:50:21,359 --> 00:50:24,000
certification center which 95

929
00:50:24,000 --> 00:50:25,440
of them do

930
00:50:25,440 --> 00:50:27,040
which means that you can also do shadow

931
00:50:27,040 --> 00:50:29,599
credentials

932
00:50:31,359 --> 00:50:33,440
but actually we'll want to add the user

933
00:50:33,440 --> 00:50:35,440
twice then we do a shadow credential so

934
00:50:35,440 --> 00:50:37,040
we do shadow credentials pretty much

935
00:50:37,040 --> 00:50:38,960
everywhere and then we do

936
00:50:38,960 --> 00:50:42,480
dc sync attack in the very end

937
00:50:42,480 --> 00:50:44,640
this is the plan

938
00:50:44,640 --> 00:50:47,119
for this particular demo

939
00:50:47,119 --> 00:50:51,200
my spoiler is that it will be boring

940
00:50:52,720 --> 00:50:54,959
it's not

941
00:51:14,240 --> 00:51:16,880
so we're adding a user to help desk once

942
00:51:16,880 --> 00:51:19,040
and help desk one can add users to help

943
00:51:19,040 --> 00:51:21,599
desk two now we are

944
00:51:21,599 --> 00:51:23,839
in help desk too and then as you

945
00:51:23,839 --> 00:51:25,599
probably remember

946
00:51:25,599 --> 00:51:29,200
we had rights to use

947
00:51:32,720 --> 00:51:35,439
shadow credentials

948
00:51:38,800 --> 00:51:40,400
since we're using shadow credentials

949
00:51:40,400 --> 00:51:41,119
here

950
00:51:41,119 --> 00:51:44,079
you know we are requesting tgt here

951
00:51:44,079 --> 00:51:47,040
we're getting tqs we're extracting ntlm

952
00:51:47,040 --> 00:51:50,559
and then we're cleaning this user device

953
00:51:50,559 --> 00:51:52,319
this is where we get nclm hash for

954
00:51:52,319 --> 00:51:56,079
easier one and we switch to user one

955
00:51:57,119 --> 00:51:59,440
we did all this and we got the hash for

956
00:51:59,440 --> 00:52:04,760
user two i told you it would be boring

957
00:52:17,359 --> 00:52:20,000
hash for user three

958
00:52:20,000 --> 00:52:21,920
and we switch to user three

959
00:52:21,920 --> 00:52:24,000
so this is how we're actually

960
00:52:24,000 --> 00:52:27,520
capturing account recounts

961
00:52:30,400 --> 00:52:32,800
next we grab the antelope

962
00:52:32,800 --> 00:52:35,280
for admin and uh he has the right

963
00:52:35,280 --> 00:52:37,200
duckwell rights

964
00:52:37,200 --> 00:52:40,240
and you know after that we can give dc

965
00:52:40,240 --> 00:52:43,440
sync rights to user user

966
00:52:43,440 --> 00:52:46,000
and then we can do the dc sync attack

967
00:52:46,000 --> 00:52:47,520
which means that we did pretty much

968
00:52:47,520 --> 00:52:49,200
everything we did at previous stage but

969
00:52:49,200 --> 00:52:51,599
it's easier and less boring and more

970
00:52:51,599 --> 00:52:55,040
boring now but faster

971
00:52:55,040 --> 00:52:56,079
that's it

972
00:52:56,079 --> 00:53:00,520
now we own the domain

973
00:53:22,240 --> 00:53:24,960
pretty much most of these acls we can

974
00:53:24,960 --> 00:53:28,079
bring back to pre-attack stage

975
00:53:28,079 --> 00:53:30,400
now we can connect using l-deep shell

976
00:53:30,400 --> 00:53:32,800
and uh

977
00:53:35,520 --> 00:53:38,000
i'm sorry for the type of uh naturally

978
00:53:38,000 --> 00:53:40,559
since the user has dc sync

979
00:53:40,559 --> 00:53:42,319
rights this is where we're going to

980
00:53:42,319 --> 00:53:44,160
delete them and after that we're going

981
00:53:44,160 --> 00:53:46,319
to clean up rbcd

982
00:53:46,319 --> 00:53:48,559
for server one and then using modify

983
00:53:48,559 --> 00:53:51,280
we'll remove a generic call for user one

984
00:53:51,280 --> 00:53:53,359
and user two and after that

985
00:53:53,359 --> 00:53:55,520
we will delete try tackle for user one

986
00:53:55,520 --> 00:53:57,839
and user two and after that

987
00:53:57,839 --> 00:54:01,119
we will remove uh generic all

988
00:54:01,119 --> 00:54:03,599
from help desk two for user one

989
00:54:03,599 --> 00:54:07,040
a user uh and after that we will delete

990
00:54:07,040 --> 00:54:10,160
is a group user called user from help

991
00:54:10,160 --> 00:54:12,480
desk 2 and help desk one which means

992
00:54:12,480 --> 00:54:15,280
that we've cleaned it up

993
00:54:15,440 --> 00:54:18,240
and you know after that you know we can

994
00:54:18,240 --> 00:54:20,319
send a report to the client so that they

995
00:54:20,319 --> 00:54:23,759
know which privileges to remove

996
00:54:37,839 --> 00:54:39,839
you know i've combined several useful

997
00:54:39,839 --> 00:54:41,280
functions in

998
00:54:41,280 --> 00:54:43,839
get and tlm scripts do you have

999
00:54:43,839 --> 00:54:44,960
questions

1000
00:54:44,960 --> 00:54:46,799
thank you very much

1001
00:54:46,799 --> 00:54:49,280
can you wave

1002
00:54:50,480 --> 00:54:51,680
a bunch

1003
00:54:51,680 --> 00:54:54,160
short questions at first you said that

1004
00:54:54,160 --> 00:54:55,760
all ceos

1005
00:54:55,760 --> 00:54:58,240
are stored in the security distributed

1006
00:54:58,240 --> 00:55:01,359
descriptor attributes

1007
00:55:02,480 --> 00:55:04,559
could you just you know use python

1008
00:55:04,559 --> 00:55:07,920
libraries or shallowed up to load them

1009
00:55:07,920 --> 00:55:10,240
it's not difficult really you can do it

1010
00:55:10,240 --> 00:55:13,760
if parsing it may be difficult though

1011
00:55:13,760 --> 00:55:17,280
and this function is not repeated in

1012
00:55:17,280 --> 00:55:18,960
other tools because there is you know

1013
00:55:18,960 --> 00:55:22,240
bloodhound already

1014
00:55:22,480 --> 00:55:24,400
i mean i could have expanded ldap shell

1015
00:55:24,400 --> 00:55:26,319
but why should i do that because there

1016
00:55:26,319 --> 00:55:30,160
are so many tools that do so much better

1017
00:55:31,920 --> 00:55:32,839
for

1018
00:55:32,839 --> 00:55:35,359
example if i have downloaded the

1019
00:55:35,359 --> 00:55:38,079
security descriptor can i you know parse

1020
00:55:38,079 --> 00:55:38,880
it

1021
00:55:38,880 --> 00:55:42,319
so that i can avoid all these operations

1022
00:55:42,319 --> 00:55:44,400
so that i can get to see you know right

1023
00:55:44,400 --> 00:55:46,720
darkel and genericall and everything so

1024
00:55:46,720 --> 00:55:48,240
that i can do my audit without the

1025
00:55:48,240 --> 00:55:49,359
bloodhound

1026
00:55:49,359 --> 00:55:51,440
it's a great question i'm sorry i'm not

1027
00:55:51,440 --> 00:55:54,319
prepared for it though

1028
00:55:55,119 --> 00:55:57,040
i guess that's uh power you can't do

1029
00:55:57,040 --> 00:55:57,839
that

1030
00:55:57,839 --> 00:56:01,839
or alternatively we can use powershell

1031
00:56:01,839 --> 00:56:04,240
alternatively you can use in packet and

1032
00:56:04,240 --> 00:56:05,440
python

1033
00:56:05,440 --> 00:56:08,079
no in packet doesn't do it elegantly

1034
00:56:08,079 --> 00:56:10,480
you know they're the source code will

1035
00:56:10,480 --> 00:56:12,240
have some constants

1036
00:56:12,240 --> 00:56:14,240
all right and you will not have things

1037
00:56:14,240 --> 00:56:18,479
like generic wall from the masks

1038
00:56:18,960 --> 00:56:21,920
now i found ms held up a utility on

1039
00:56:21,920 --> 00:56:25,520
python but it's not canonical

1040
00:56:28,480 --> 00:56:30,400
so you will still need to perform some

1041
00:56:30,400 --> 00:56:32,720
bit level operations yes i'm sorry about

1042
00:56:32,720 --> 00:56:34,480
that and

1043
00:56:34,480 --> 00:56:36,480
borrower view uh

1044
00:56:36,480 --> 00:56:39,200
will not really parse all the acls for

1045
00:56:39,200 --> 00:56:42,200
you

1046
00:56:44,720 --> 00:56:45,599
so

1047
00:56:45,599 --> 00:56:47,520
in one property for example you'll not

1048
00:56:47,520 --> 00:56:48,960
be able to see it which means that

1049
00:56:48,960 --> 00:56:50,480
without power review and bloodhounds we

1050
00:56:50,480 --> 00:56:52,079
cannot do much

1051
00:56:52,079 --> 00:56:54,720
well even they will not really show you

1052
00:56:54,720 --> 00:56:56,839
generic all and generic

1053
00:56:56,839 --> 00:56:58,400
rights

1054
00:56:58,400 --> 00:57:00,319
you know i've also been thinking

1055
00:57:00,319 --> 00:57:02,640
about uh talking about things you won't

1056
00:57:02,640 --> 00:57:04,480
be able to see on bloodhound that would

1057
00:57:04,480 --> 00:57:06,319
be also interesting topic

1058
00:57:06,319 --> 00:57:09,119
is it actually safe to

1059
00:57:09,119 --> 00:57:10,079
uh

1060
00:57:10,079 --> 00:57:10,839
you

1061
00:57:10,839 --> 00:57:13,839
know download them from all objects even

1062
00:57:13,839 --> 00:57:16,960
if i have like 1 000 100 000 assets so

1063
00:57:16,960 --> 00:57:18,640
you will be okay for the controller yes

1064
00:57:18,640 --> 00:57:20,960
that's right

1065
00:57:20,960 --> 00:57:23,359
where does it make sense for us to check

1066
00:57:23,359 --> 00:57:26,640
them you know for users for for user

1067
00:57:26,640 --> 00:57:29,440
groups for computers

1068
00:57:29,440 --> 00:57:31,599
well there are some exotic ways of

1069
00:57:31,599 --> 00:57:34,400
abusing acls

1070
00:57:34,400 --> 00:57:36,559
it's pretty interesting to see

1071
00:57:36,559 --> 00:57:38,319
privileges for

1072
00:57:38,319 --> 00:57:41,558
for accounts

1073
00:57:58,319 --> 00:58:01,040
is automatically applied to everybody

1074
00:58:01,040 --> 00:58:03,200
who joins it then effectively you can

1075
00:58:03,200 --> 00:58:05,200
bring any computer

1076
00:58:05,200 --> 00:58:06,240
there

1077
00:58:06,240 --> 00:58:08,559
and get laps from it

1078
00:58:08,559 --> 00:58:10,799
um what about jp link

1079
00:58:10,799 --> 00:58:13,359
yeah jp link is obviously an option

1080
00:58:13,359 --> 00:58:16,400
but once you have the gpa

1081
00:58:17,760 --> 00:58:20,000
what about attribute rights how they

1082
00:58:20,000 --> 00:58:23,000
implemented

1083
00:58:26,240 --> 00:58:28,640
so if you have write all properties you

1084
00:58:28,640 --> 00:58:30,480
can effectively well indeed write all

1085
00:58:30,480 --> 00:58:32,160
properties

1086
00:58:32,160 --> 00:58:36,000
and if you have the same ac

1087
00:58:36,640 --> 00:58:38,079
well you will be able to write only

1088
00:58:38,079 --> 00:58:40,400
specific properties

1089
00:58:40,400 --> 00:58:42,640
can we you know where do you learn more

1090
00:58:42,640 --> 00:58:45,280
about this gui

1091
00:58:45,280 --> 00:58:47,200
i've been you know going through

1092
00:58:47,200 --> 00:58:50,720
microsoft docs for that

1093
00:59:01,760 --> 00:59:05,400
okay thank you i'm done

1094
00:59:12,410 --> 00:59:15,529
[Music]

1095
00:59:16,960 --> 00:59:18,960
question i understand it's probably not

1096
00:59:18,960 --> 00:59:22,160
really a cup of tea but

1097
00:59:23,839 --> 00:59:25,599
have you considered you know how noisy

1098
00:59:25,599 --> 00:59:28,480
these things might be

1099
00:59:28,799 --> 00:59:32,839
you know for monitoring purposes

1100
00:59:59,599 --> 01:00:00,559
attack

1101
01:00:00,559 --> 01:00:02,960
it has a it has a specific pattern so

1102
01:00:02,960 --> 01:00:03,839
you

1103
01:00:03,839 --> 01:00:05,839
should be able to monitor for it and it

1104
01:00:05,839 --> 01:00:07,440
makes sense

1105
01:00:07,440 --> 01:00:09,520
yes and changes in the you know in other

1106
01:00:09,520 --> 01:00:11,839
respects they do happen a lot like you

1107
01:00:11,839 --> 01:00:15,319
add new users

1108
01:00:24,880 --> 01:00:29,040
there will be so many changes in ace

1109
01:00:29,040 --> 01:00:31,520
you will see a giant false positive it

1110
01:00:31,520 --> 01:00:34,160
will look like a serious attack

1111
01:00:34,160 --> 01:00:36,000
i'm not a suck guy but that's what i'm

1112
01:00:36,000 --> 01:00:39,440
thinking oh i'm told that my time is up

1113
01:00:39,440 --> 01:00:41,119
if you need me you can find me on

1114
01:00:41,119 --> 01:00:42,880
telegram

1115
01:00:42,880 --> 01:00:45,280
i actually have two t-shirts

1116
01:00:45,280 --> 01:00:47,280
for those who've been listening

1117
01:00:47,280 --> 01:00:49,330
thank you

1118
01:00:49,330 --> 01:00:52,429
[Music]

