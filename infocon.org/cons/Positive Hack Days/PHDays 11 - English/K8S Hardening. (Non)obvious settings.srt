1
00:00:03,120 --> 00:00:06,080
good morning so everyone here's me okay

2
00:00:06,080 --> 00:00:07,600
i am anton

3
00:00:07,600 --> 00:00:11,040
i'm happy to see you all here it's my

4
00:00:11,040 --> 00:00:13,679
first phd

5
00:00:13,679 --> 00:00:15,200
and

6
00:00:15,200 --> 00:00:18,800
i would like to be quite thankful to you

7
00:00:18,800 --> 00:00:20,720
i am going to

8
00:00:20,720 --> 00:00:23,840
be in on the podium telling about

9
00:00:23,840 --> 00:00:26,880
hardening kubernetes

10
00:00:26,880 --> 00:00:27,680
uh

11
00:00:27,680 --> 00:00:28,560
k

12
00:00:28,560 --> 00:00:32,399
8 is kubernetes so eight

13
00:00:32,399 --> 00:00:35,360
letters between k and s

14
00:00:35,360 --> 00:00:38,960
and about uh cis benchmarks because it's

15
00:00:38,960 --> 00:00:40,480
a good standard

16
00:00:40,480 --> 00:00:43,760
and it has a lot of

17
00:00:43,760 --> 00:00:45,920
non-obvious

18
00:00:45,920 --> 00:00:47,039
things

19
00:00:47,039 --> 00:00:48,000
what

20
00:00:48,000 --> 00:00:51,440
do security people begin with

21
00:00:51,440 --> 00:00:53,760
we start looking

22
00:00:53,760 --> 00:00:54,800
at

23
00:00:54,800 --> 00:00:57,199
understandable analogues for example if

24
00:00:57,199 --> 00:01:00,320
you like cars

25
00:01:00,320 --> 00:01:02,480
so you are talking about cars if you

26
00:01:02,480 --> 00:01:04,000
like skiing

27
00:01:04,000 --> 00:01:07,280
it you will say well it was as difficult

28
00:01:07,280 --> 00:01:08,159
as

29
00:01:08,159 --> 00:01:10,720
that kind of route

30
00:01:10,720 --> 00:01:13,360
and secure same with security

31
00:01:13,360 --> 00:01:15,280
kubernetes

32
00:01:15,280 --> 00:01:20,240
uh brings in a lot of abstractions

33
00:01:20,240 --> 00:01:22,080
and the more abstractions the more

34
00:01:22,080 --> 00:01:24,840
difficult it is to

35
00:01:24,840 --> 00:01:29,040
uh realize first we had servers then

36
00:01:29,040 --> 00:01:31,119
well we don't uh

37
00:01:31,119 --> 00:01:33,200
use resources properly we got

38
00:01:33,200 --> 00:01:34,880
virtualization

39
00:01:34,880 --> 00:01:37,360
then containers

40
00:01:37,360 --> 00:01:40,799
then hardware hypervisor

41
00:01:40,799 --> 00:01:46,240
operating system containers orchestrator

42
00:01:46,240 --> 00:01:47,840
then another

43
00:01:47,840 --> 00:01:49,920
layer of abstractions

44
00:01:49,920 --> 00:01:51,439
the more layers

45
00:01:51,439 --> 00:01:55,839
the the more difficult it is to see

46
00:01:58,719 --> 00:02:01,360
vulnerability and compliance that is

47
00:02:01,360 --> 00:02:04,399
what we really need and uh that is what

48
00:02:04,399 --> 00:02:08,639
we begin with this benchmarks

49
00:02:08,639 --> 00:02:12,400
are numerous at any linux operating

50
00:02:12,400 --> 00:02:14,959
system or other operating system

51
00:02:14,959 --> 00:02:19,040
databases for kubernetes they do exist

52
00:02:19,040 --> 00:02:23,120
how to segment how to manage access

53
00:02:23,120 --> 00:02:26,480
access to what access why and we have a

54
00:02:26,480 --> 00:02:28,800
lot of problems then so let's start with

55
00:02:28,800 --> 00:02:30,480
benchmark

56
00:02:30,480 --> 00:02:32,319
and i'll try to convince you that the

57
00:02:32,319 --> 00:02:35,280
benchmark is very good and how to work

58
00:02:35,280 --> 00:02:37,920
with it first why is it good because the

59
00:02:37,920 --> 00:02:40,400
main authors

60
00:02:40,400 --> 00:02:44,400
these are liz rice and rory mckeon

61
00:02:44,400 --> 00:02:45,840
who are they

62
00:02:45,840 --> 00:02:47,200
if you read

63
00:02:47,200 --> 00:02:51,920
securi kubernetes security articles

64
00:02:51,920 --> 00:02:54,879
they are the awesome authors liz rice

65
00:02:54,879 --> 00:02:57,280
wrote an excellent book kubernetes

66
00:02:57,280 --> 00:03:01,360
security rory mckeon

67
00:03:02,840 --> 00:03:04,400
manages

68
00:03:04,400 --> 00:03:07,360
kubernetes documentation they are not

69
00:03:07,360 --> 00:03:09,680
theoreticians they are practitioners

70
00:03:09,680 --> 00:03:12,560
they have a lot of research about

71
00:03:12,560 --> 00:03:15,360
exploits about vulnerabilities and they

72
00:03:15,360 --> 00:03:16,840
know they

73
00:03:16,840 --> 00:03:21,760
understand uh what kubernetes is

74
00:03:21,760 --> 00:03:24,799
and then uh

75
00:03:25,040 --> 00:03:29,359
we have control playing components

76
00:03:30,239 --> 00:03:32,640
controller manager

77
00:03:32,640 --> 00:03:35,840
this slide doesn't contain everything

78
00:03:35,840 --> 00:03:38,560
then we have etcd

79
00:03:38,560 --> 00:03:40,159
we have

80
00:03:40,159 --> 00:03:43,519
control plane configuration scheduler

81
00:03:43,519 --> 00:03:44,879
logging

82
00:03:44,879 --> 00:03:49,200
authentication and worker nodes tubelet

83
00:03:49,200 --> 00:03:52,000
tuning and policies which i like very

84
00:03:52,000 --> 00:03:53,519
much

85
00:03:53,519 --> 00:03:55,920
i'll tell about it later why is it

86
00:03:55,920 --> 00:03:57,280
important

87
00:03:57,280 --> 00:04:00,799
because that standard covers all the

88
00:04:00,799 --> 00:04:03,360
assets of kubernetes kubernetes is a

89
00:04:03,360 --> 00:04:06,239
piece of software consisting of certain

90
00:04:06,239 --> 00:04:10,159
uh components and architecture and all

91
00:04:10,159 --> 00:04:12,640
this covers all the architecture and

92
00:04:12,640 --> 00:04:15,920
policies is a bonus

93
00:04:15,920 --> 00:04:16,720
one

94
00:04:16,720 --> 00:04:18,959
small spoiler

95
00:04:18,959 --> 00:04:21,759
this is the configuration standard you

96
00:04:21,759 --> 00:04:24,800
have a number of fields parameters and

97
00:04:24,800 --> 00:04:27,199
results

98
00:04:27,199 --> 00:04:31,280
and as a result kubernetes

99
00:04:31,520 --> 00:04:33,680
is good

100
00:04:33,680 --> 00:04:37,840
if you look their shares

101
00:04:37,840 --> 00:04:38,639
so

102
00:04:38,639 --> 00:04:41,600
the lion's share is control plane

103
00:04:41,600 --> 00:04:44,880
components is the brain of kubernetes

104
00:04:44,880 --> 00:04:46,160
21

105
00:04:46,160 --> 00:04:48,000
goes to

106
00:04:48,000 --> 00:04:50,560
policies

107
00:04:50,639 --> 00:04:52,880
i am going to mention them very often

108
00:04:52,880 --> 00:04:55,360
please remember them

109
00:04:55,360 --> 00:04:58,400
and then worker nodes uh

110
00:04:58,400 --> 00:05:00,960
etcd and

111
00:05:00,960 --> 00:05:03,759
just two percent about logging

112
00:05:03,759 --> 00:05:05,280
configuration

113
00:05:05,280 --> 00:05:08,000
control plane

114
00:05:08,840 --> 00:05:12,240
configuration then what did i do i too

115
00:05:12,240 --> 00:05:16,160
took kubernetes cluster

116
00:05:16,160 --> 00:05:18,000
with linux

117
00:05:18,000 --> 00:05:21,039
real distribution

118
00:05:21,039 --> 00:05:23,600
and i tried to check

119
00:05:23,600 --> 00:05:26,320
whether the cluster matches the

120
00:05:26,320 --> 00:05:29,600
requirements just a

121
00:05:29,600 --> 00:05:32,320
empty cube why are you

122
00:05:32,320 --> 00:05:34,639
nothing about ariel

123
00:05:34,639 --> 00:05:37,360
it's about kubernetes

124
00:05:37,360 --> 00:05:40,000
but you can launch it anywhere on

125
00:05:40,000 --> 00:05:40,720
psyllium

126
00:05:40,720 --> 00:05:42,080
[Music]

127
00:05:42,080 --> 00:05:45,919
we didn't have a load test but it works

128
00:05:45,919 --> 00:05:47,530
what did happen

129
00:05:47,530 --> 00:05:49,039
[Music]

130
00:05:49,039 --> 00:05:52,160
so it's about two types of people one

131
00:05:52,160 --> 00:05:54,400
has

132
00:05:55,120 --> 00:05:58,400
glass half full the other half empty

133
00:05:58,400 --> 00:05:59,280
so

134
00:05:59,280 --> 00:06:02,080
more than 50 percent is already

135
00:06:02,080 --> 00:06:04,560
tuned and configured some people said

136
00:06:04,560 --> 00:06:08,319
cubitinus is bad it's there are a lot of

137
00:06:08,319 --> 00:06:12,560
holes there no i don't agree with it

138
00:06:12,639 --> 00:06:16,160
the number of function grows

139
00:06:16,160 --> 00:06:19,120
released from one release to another it

140
00:06:19,120 --> 00:06:21,520
has a lot of opportunities

141
00:06:21,520 --> 00:06:24,560
some of them are not

142
00:06:24,560 --> 00:06:26,880
implemented but they are there then the

143
00:06:26,880 --> 00:06:29,600
orange place warning

144
00:06:29,600 --> 00:06:30,560
uh

145
00:06:30,560 --> 00:06:33,440
if you launched cubase you know what is

146
00:06:33,440 --> 00:06:35,520
it it doesn't anything

147
00:06:35,520 --> 00:06:37,680
mean anything bad it means that we

148
00:06:37,680 --> 00:06:40,000
couldn't check it in cis

149
00:06:40,000 --> 00:06:41,199
you can

150
00:06:41,199 --> 00:06:44,240
confirm configure

151
00:06:44,240 --> 00:06:46,479
if you change the way to configure it

152
00:06:46,479 --> 00:06:49,280
will say i didn't find config that's why

153
00:06:49,280 --> 00:06:51,759
warning orange

154
00:06:51,759 --> 00:06:53,680
there are some requirements that have to

155
00:06:53,680 --> 00:06:56,240
be confirmed manually

156
00:06:56,240 --> 00:06:59,240
35

157
00:06:59,280 --> 00:07:01,360
and 9

158
00:07:01,360 --> 00:07:03,840
failed

159
00:07:04,479 --> 00:07:06,160
just

160
00:07:06,160 --> 00:07:09,120
empty tuber with our checks

161
00:07:09,120 --> 00:07:11,039
how do they divide the checks the

162
00:07:11,039 --> 00:07:12,720
classification

163
00:07:12,720 --> 00:07:16,240
i invented it myself you can argue or

164
00:07:16,240 --> 00:07:17,759
not argue

165
00:07:17,759 --> 00:07:21,199
so first uh usual requirement a security

166
00:07:21,199 --> 00:07:23,280
person who

167
00:07:23,280 --> 00:07:24,240
didn't

168
00:07:24,240 --> 00:07:26,080
hear about cube

169
00:07:26,080 --> 00:07:28,240
kubernetes

170
00:07:28,240 --> 00:07:31,280
understands it because uh he saw those

171
00:07:31,280 --> 00:07:33,199
requirements before then

172
00:07:33,199 --> 00:07:36,400
non obvious requirements the warnings

173
00:07:36,400 --> 00:07:38,000
the requirements

174
00:07:38,000 --> 00:07:39,599
uh that

175
00:07:39,599 --> 00:07:40,720
are

176
00:07:40,720 --> 00:07:43,280
fulfilled or not fulfilled creative

177
00:07:43,280 --> 00:07:44,720
number three

178
00:07:44,720 --> 00:07:47,199
no you have to invent something here you

179
00:07:47,199 --> 00:07:48,479
cannot just

180
00:07:48,479 --> 00:07:52,240
turn it on and say it works an idea is

181
00:07:52,240 --> 00:07:54,960
needed and the final thing is process

182
00:07:54,960 --> 00:07:56,440
requirement

183
00:07:56,440 --> 00:07:59,199
non-typical for cis

184
00:07:59,199 --> 00:08:02,240
recommendations how to make this world

185
00:08:02,240 --> 00:08:03,199
better

186
00:08:03,199 --> 00:08:04,639
what is it

187
00:08:04,639 --> 00:08:06,560
and now i am going to look at these

188
00:08:06,560 --> 00:08:10,240
requirements one by one

189
00:08:10,960 --> 00:08:13,919
when you work with sis and i

190
00:08:13,919 --> 00:08:16,000
warn you to

191
00:08:16,000 --> 00:08:18,240
read everything even

192
00:08:18,240 --> 00:08:21,440
those 56 percent that

193
00:08:21,440 --> 00:08:22,879
are green

194
00:08:22,879 --> 00:08:24,400
read them all

195
00:08:24,400 --> 00:08:29,120
we have about 120 points all in all

196
00:08:29,120 --> 00:08:30,160
to

197
00:08:30,160 --> 00:08:33,839
customize this standard you need to read

198
00:08:33,839 --> 00:08:35,679
the standard first

199
00:08:35,679 --> 00:08:37,120
requirements

200
00:08:37,120 --> 00:08:39,360
why

201
00:08:39,360 --> 00:08:42,080
then the impossible impact and how to

202
00:08:42,080 --> 00:08:44,320
check it google

203
00:08:44,320 --> 00:08:46,480
it's a very useful thing

204
00:08:46,480 --> 00:08:48,080
everywhere

205
00:08:48,080 --> 00:08:50,160
don't be shy

206
00:08:50,160 --> 00:08:51,200
use it

207
00:08:51,200 --> 00:08:53,040
especially the abstractions that were

208
00:08:53,040 --> 00:08:56,720
mentioned so use google it's good and

209
00:08:56,720 --> 00:08:59,040
never prohibit google

210
00:08:59,040 --> 00:09:02,320
and kubernetes documentation it exists

211
00:09:02,320 --> 00:09:06,160
some people say it's bad i

212
00:09:06,160 --> 00:09:08,399
realize that this is the open source

213
00:09:08,399 --> 00:09:11,040
product even with documentation you have

214
00:09:11,040 --> 00:09:13,760
to thank people for that documentation

215
00:09:13,760 --> 00:09:15,360
and i tell you

216
00:09:15,360 --> 00:09:18,399
it's good it's really good also

217
00:09:18,399 --> 00:09:21,200
you will need the source code of

218
00:09:21,200 --> 00:09:22,800
kubernetes

219
00:09:22,800 --> 00:09:25,279
to understand what is

220
00:09:25,279 --> 00:09:26,320
done

221
00:09:26,320 --> 00:09:27,279
there

222
00:09:27,279 --> 00:09:29,600
it's not always obvious so

223
00:09:29,600 --> 00:09:33,680
usual requirements have you seen this

224
00:09:35,120 --> 00:09:37,040
when you configured anything there is a

225
00:09:37,040 --> 00:09:40,240
configuration file and the access should

226
00:09:40,240 --> 00:09:42,320
be limited

227
00:09:42,320 --> 00:09:45,760
uh you did it i think

228
00:09:45,760 --> 00:09:50,680
generics uh any other um

229
00:09:51,600 --> 00:09:53,040
we have

230
00:09:53,040 --> 00:09:55,200
644

231
00:09:55,200 --> 00:09:58,880
restrictive rights permissions

232
00:09:58,880 --> 00:10:01,360
and it's applicable

233
00:10:01,360 --> 00:10:04,399
kubernetes is a piece of software and it

234
00:10:04,399 --> 00:10:07,200
has configuration files and they have to

235
00:10:07,200 --> 00:10:11,200
be controlled and protected

236
00:10:11,200 --> 00:10:14,079
to maintain its integrity

237
00:10:14,079 --> 00:10:17,920
ip server cubelet and dcni and other

238
00:10:17,920 --> 00:10:19,920
requirements just

239
00:10:19,920 --> 00:10:22,000
some of the examples

240
00:10:22,000 --> 00:10:24,399
they are usual requirements quite

241
00:10:24,399 --> 00:10:28,000
understandable now the non

242
00:10:28,000 --> 00:10:30,839
obvious requirements schrodinger

243
00:10:30,839 --> 00:10:33,200
requirements event

244
00:10:33,200 --> 00:10:37,600
qps the number of queries per second and

245
00:10:37,600 --> 00:10:39,519
the requirements said

246
00:10:39,519 --> 00:10:40,880
that

247
00:10:40,880 --> 00:10:42,270
you need a certain

248
00:10:42,270 --> 00:10:43,839
[Music]

249
00:10:43,839 --> 00:10:45,440
value here

250
00:10:45,440 --> 00:10:47,680
and everything will be all right but we

251
00:10:47,680 --> 00:10:52,640
cannot say that 10 50 or 150

252
00:10:52,640 --> 00:10:55,920
is sufficient it depends

253
00:10:55,920 --> 00:10:57,120
because

254
00:10:57,120 --> 00:11:00,880
you have to set such a value that

255
00:11:00,880 --> 00:11:03,040
would be sufficient

256
00:11:03,040 --> 00:11:04,880
because sometimes it can be good

257
00:11:04,880 --> 00:11:07,279
sometimes not in cubelet you have two

258
00:11:07,279 --> 00:11:10,240
configuration and this benchmark will

259
00:11:10,240 --> 00:11:13,839
tell you this is the way you have

260
00:11:13,839 --> 00:11:18,399
there look there and find the value

261
00:11:18,399 --> 00:11:23,360
and by default you don't have this value

262
00:11:23,360 --> 00:11:25,920
oh you have it

263
00:11:25,920 --> 00:11:29,040
we have a runtime configuration

264
00:11:29,040 --> 00:11:31,440
in cubelet

265
00:11:31,440 --> 00:11:33,839
is a piece of software with certain set

266
00:11:33,839 --> 00:11:36,959
of parameters in the documentation

267
00:11:36,959 --> 00:11:39,279
we have default values

268
00:11:39,279 --> 00:11:42,800
and when you launch cubelet those values

269
00:11:42,800 --> 00:11:45,680
are installed even if you don't

270
00:11:45,680 --> 00:11:48,479
insert them

271
00:11:48,560 --> 00:11:50,720
of course you can get

272
00:11:50,720 --> 00:11:54,320
the right cubelet configuration

273
00:11:54,320 --> 00:11:58,560
when it works and see what is there yes

274
00:11:58,560 --> 00:12:00,560
and the configuration values are

275
00:12:00,560 --> 00:12:03,760
sometimes very important

276
00:12:03,760 --> 00:12:07,200
they are the values that work

277
00:12:07,200 --> 00:12:09,839
you have the same configuration for pi

278
00:12:09,839 --> 00:12:14,720
server for controller manager scheduler

279
00:12:16,240 --> 00:12:20,000
i call it german way very often

280
00:12:20,000 --> 00:12:24,240
sorry so it depends on

281
00:12:24,240 --> 00:12:26,639
whether you like this default value or

282
00:12:26,639 --> 00:12:29,200
want to change it then

283
00:12:29,200 --> 00:12:32,560
the area i like admission plug-in which

284
00:12:32,560 --> 00:12:36,000
is called the security context context

285
00:12:36,000 --> 00:12:37,279
deny

286
00:12:37,279 --> 00:12:39,920
oh even security is here

287
00:12:39,920 --> 00:12:41,600
a good word

288
00:12:41,600 --> 00:12:45,120
qps event what about security here it's

289
00:12:45,120 --> 00:12:48,320
written security good

290
00:12:48,320 --> 00:12:50,880
and they say if you don't use pod

291
00:12:50,880 --> 00:12:53,600
security you can install

292
00:12:53,600 --> 00:12:54,399
this

293
00:12:54,399 --> 00:12:55,760
plugin

294
00:12:55,760 --> 00:12:58,639
the documentation is needed

295
00:12:58,639 --> 00:13:00,880
sys benchmarks

296
00:13:00,880 --> 00:13:02,959
have such descriptions

297
00:13:02,959 --> 00:13:04,880
but still

298
00:13:04,880 --> 00:13:06,959
you understand that this is something

299
00:13:06,959 --> 00:13:10,639
about security but what is it exactly

300
00:13:10,639 --> 00:13:14,560
post security policies uh cannot tell

301
00:13:14,560 --> 00:13:17,760
you exactly what it is

302
00:13:17,760 --> 00:13:20,480
security context dni

303
00:13:20,480 --> 00:13:21,680
must be

304
00:13:21,680 --> 00:13:24,880
used so the documentation says security

305
00:13:24,880 --> 00:13:27,120
context deny

306
00:13:27,120 --> 00:13:29,279
will deny any

307
00:13:29,279 --> 00:13:32,959
port that attempts to set certain

308
00:13:32,959 --> 00:13:35,440
fields what kind of fields

309
00:13:35,440 --> 00:13:37,200
certain fields when i did it for the

310
00:13:37,200 --> 00:13:39,920
first time i had an idea that security

311
00:13:39,920 --> 00:13:42,639
context said in the pod

312
00:13:42,639 --> 00:13:43,680
at the

313
00:13:43,680 --> 00:13:46,000
area of containers at the level of

314
00:13:46,000 --> 00:13:47,360
containers

315
00:13:47,360 --> 00:13:50,079
and they are about pods

316
00:13:50,079 --> 00:13:52,399
and the number of possibilities reduced

317
00:13:52,399 --> 00:13:56,320
i didn't find anything better than this

318
00:13:56,320 --> 00:13:59,199
just brute force

319
00:13:59,199 --> 00:14:02,279
at least

320
00:14:02,320 --> 00:14:05,120
that was the correct list but it took a

321
00:14:05,120 --> 00:14:07,360
lot of time

322
00:14:07,360 --> 00:14:10,800
and if we talk about protect kernel

323
00:14:10,800 --> 00:14:13,680
default we have such a flag

324
00:14:13,680 --> 00:14:16,560
it says that some parameters of linux

325
00:14:16,560 --> 00:14:17,680
kernel

326
00:14:17,680 --> 00:14:20,240
must have certain values for cubelet to

327
00:14:20,240 --> 00:14:23,040
be launched correctly

328
00:14:23,040 --> 00:14:24,720
and the

329
00:14:24,720 --> 00:14:27,680
current linux and linux kernel is much

330
00:14:27,680 --> 00:14:30,079
larger and brute force will take much

331
00:14:30,079 --> 00:14:31,519
more time

332
00:14:31,519 --> 00:14:34,800
so please don't do this this is not

333
00:14:34,800 --> 00:14:35,760
the best

334
00:14:35,760 --> 00:14:38,639
thing go to the source code of

335
00:14:38,639 --> 00:14:41,920
kubernetes you can have a look it's open

336
00:14:41,920 --> 00:14:43,199
source

337
00:14:43,199 --> 00:14:45,600
and you can see

338
00:14:45,600 --> 00:14:48,079
what kind of admission plugins you need

339
00:14:48,079 --> 00:14:50,638
and see

340
00:14:50,720 --> 00:14:52,639
this

341
00:14:52,639 --> 00:14:56,320
it just checks the availability

342
00:14:56,320 --> 00:14:57,279
of

343
00:14:57,279 --> 00:15:01,199
values whether they exist or not exist

344
00:15:01,199 --> 00:15:04,399
it just tells you yes or no it exists or

345
00:15:04,399 --> 00:15:05,920
doesn't exist

346
00:15:05,920 --> 00:15:06,959
so

347
00:15:06,959 --> 00:15:10,639
run as user cannot break anything but

348
00:15:10,639 --> 00:15:12,959
when you

349
00:15:13,040 --> 00:15:15,519
this parameter doesn't understand the

350
00:15:15,519 --> 00:15:18,000
context and i wouldn't use it

351
00:15:18,000 --> 00:15:20,160
and you have a lot of such example at

352
00:15:20,160 --> 00:15:24,000
cis benchmarks so please keep

353
00:15:24,000 --> 00:15:25,199
the

354
00:15:25,199 --> 00:15:26,880
source code

355
00:15:26,880 --> 00:15:28,160
close

356
00:15:28,160 --> 00:15:29,120
to you

357
00:15:29,120 --> 00:15:30,720
to have a look

358
00:15:30,720 --> 00:15:33,360
at those values

359
00:15:33,360 --> 00:15:36,560
then creative requirements

360
00:15:36,560 --> 00:15:39,759
the first one is audit policy

361
00:15:39,759 --> 00:15:41,440
it's a

362
00:15:41,440 --> 00:15:42,959
collection of events from the

363
00:15:42,959 --> 00:15:45,839
orchestrator from the orchestrator

364
00:15:45,839 --> 00:15:47,480
that's the main thing

365
00:15:47,480 --> 00:15:49,759
containerization can bring about a lot

366
00:15:49,759 --> 00:15:52,800
of logs operating system logs

367
00:15:52,800 --> 00:15:54,079
orchestrate orchestrator logs

368
00:15:54,079 --> 00:15:57,040
application logs some other logs

369
00:15:57,040 --> 00:15:59,680
a lot of logs here it's about

370
00:15:59,680 --> 00:16:02,079
interaction of cuber

371
00:16:02,079 --> 00:16:04,399
components what kind of codes are raised

372
00:16:04,399 --> 00:16:07,199
who did what and you have to do two or

373
00:16:07,199 --> 00:16:09,839
three things first ensure uh

374
00:16:09,839 --> 00:16:11,839
open logging

375
00:16:11,839 --> 00:16:14,000
what is interesting in cuber it's not

376
00:16:14,000 --> 00:16:16,880
about only info loading debug

377
00:16:16,880 --> 00:16:18,480
error

378
00:16:18,480 --> 00:16:21,199
so you know that

379
00:16:21,199 --> 00:16:24,160
it gives you an opportunity to write an

380
00:16:24,160 --> 00:16:27,040
audit policy and use it

381
00:16:27,040 --> 00:16:31,279
by default it's empty it doesn't exist

382
00:16:31,279 --> 00:16:33,759
empty audit policy but

383
00:16:33,759 --> 00:16:36,800
you can find out what happened at the

384
00:16:36,800 --> 00:16:39,519
cluster with at different layers of

385
00:16:39,519 --> 00:16:41,839
optimization

386
00:16:41,839 --> 00:16:43,839
what happened when happened who

387
00:16:43,839 --> 00:16:46,800
initiated it with what kind of resources

388
00:16:46,800 --> 00:16:49,390
in getlistwatch for instance

389
00:16:49,390 --> 00:16:51,440
[Music]

390
00:16:51,440 --> 00:16:56,320
you get full scale response and

391
00:16:56,320 --> 00:16:57,200
you

392
00:16:57,200 --> 00:16:58,240
[Laughter]

393
00:16:58,240 --> 00:16:59,920
will your

394
00:16:59,920 --> 00:17:02,240
free space will be exhausted

395
00:17:02,240 --> 00:17:05,280
so those logs do not

396
00:17:05,280 --> 00:17:08,160
uh go anywhere

397
00:17:08,160 --> 00:17:11,439
they are stored either locally or in

398
00:17:11,439 --> 00:17:14,559
some back ends

399
00:17:15,439 --> 00:17:20,480
and cm system we like it it can absorb

400
00:17:20,480 --> 00:17:24,480
the logs for forthcoming passing

401
00:17:24,480 --> 00:17:28,480
what can we log just several example

402
00:17:28,480 --> 00:17:29,840
there is a good

403
00:17:29,840 --> 00:17:33,440
article about security policies to check

404
00:17:33,440 --> 00:17:36,960
go to the house security audit and there

405
00:17:36,960 --> 00:17:39,919
you can get a list link

406
00:17:39,919 --> 00:17:42,400
but this is something which is

407
00:17:42,400 --> 00:17:44,080
interesting to you

408
00:17:44,080 --> 00:17:46,080
it may be not interesting to somebody

409
00:17:46,080 --> 00:17:49,280
else for example get for secret exact in

410
00:17:49,280 --> 00:17:50,480
pod

411
00:17:50,480 --> 00:17:51,280
uh

412
00:17:51,280 --> 00:17:54,160
something which should be red

413
00:17:54,160 --> 00:17:58,840
don't create exact containers

414
00:18:00,400 --> 00:18:03,840
please don't work this way cuber is

415
00:18:03,840 --> 00:18:06,640
declarative

416
00:18:06,640 --> 00:18:08,160
don't

417
00:18:08,160 --> 00:18:10,799
go to the node manually and break

418
00:18:10,799 --> 00:18:15,120
everything no declarative way only

419
00:18:15,120 --> 00:18:18,400
changing role models creating uh

420
00:18:18,400 --> 00:18:21,280
cluster-wide roles

421
00:18:21,280 --> 00:18:24,559
for the entire cluster

422
00:18:25,200 --> 00:18:27,200
forbidden uh

423
00:18:27,200 --> 00:18:29,280
s a token

424
00:18:29,280 --> 00:18:32,160
cluster admin binding you can write a

425
00:18:32,160 --> 00:18:34,640
lot of such things kubernetes makes it

426
00:18:34,640 --> 00:18:36,880
possible for you to do it's up to you to

427
00:18:36,880 --> 00:18:40,480
use it looks simple but it isn't that

428
00:18:40,480 --> 00:18:42,400
simple at all

429
00:18:42,400 --> 00:18:45,200
you can write a policy

430
00:18:45,200 --> 00:18:48,320
everything is okay look at the logs well

431
00:18:48,320 --> 00:18:50,960
you have to clean it

432
00:18:50,960 --> 00:18:53,840
so if you want to block something and

433
00:18:53,840 --> 00:18:56,720
guarantee that blocking so have a look

434
00:18:56,720 --> 00:18:57,720
then

435
00:18:57,720 --> 00:18:59,280
etcd

436
00:18:59,280 --> 00:19:03,280
encryption etcd is in your cluster

437
00:19:03,280 --> 00:19:06,960
including config maps

438
00:19:06,960 --> 00:19:09,200
configuration files where

439
00:19:09,200 --> 00:19:12,000
which can contain login and password

440
00:19:12,000 --> 00:19:13,440
don't do it

441
00:19:13,440 --> 00:19:15,919
but you can encrypt

442
00:19:15,919 --> 00:19:18,559
this thing and for that you need an

443
00:19:18,559 --> 00:19:20,400
email file

444
00:19:20,400 --> 00:19:25,280
in cuber you can do it

445
00:19:25,280 --> 00:19:28,000
you you choose what we're going to

446
00:19:28,000 --> 00:19:29,200
encrypt

447
00:19:29,200 --> 00:19:32,960
how we're going to encrypt and what for

448
00:19:32,960 --> 00:19:36,960
that will be encryption at rest

449
00:19:36,960 --> 00:19:39,039
to prevent

450
00:19:39,039 --> 00:19:42,880
unauthorized access it wouldn't work if

451
00:19:42,880 --> 00:19:46,160
the secret is already used and somebody

452
00:19:46,160 --> 00:19:47,760
has read it then

453
00:19:47,760 --> 00:19:51,039
encryption wouldn't help you need an

454
00:19:51,039 --> 00:19:53,120
outside solution

455
00:19:53,120 --> 00:19:54,640
for you to

456
00:19:54,640 --> 00:19:56,480
use secret

457
00:19:56,480 --> 00:19:58,000
in run time

458
00:19:58,000 --> 00:20:00,720
to prevent access

459
00:20:00,720 --> 00:20:03,280
and one more important point is if you

460
00:20:03,280 --> 00:20:04,400
want to

461
00:20:04,400 --> 00:20:07,120
encrypt dcd

462
00:20:07,120 --> 00:20:09,919
please be attentive yes everything is in

463
00:20:09,919 --> 00:20:12,080
the official documentation encryption

464
00:20:12,080 --> 00:20:13,280
will work

465
00:20:13,280 --> 00:20:14,080
uh

466
00:20:14,080 --> 00:20:17,760
by default only for new resources

467
00:20:17,760 --> 00:20:20,640
everything that already exists wouldn't

468
00:20:20,640 --> 00:20:24,240
be encrypted in order to encrypt that

469
00:20:24,240 --> 00:20:25,840
you have to

470
00:20:25,840 --> 00:20:27,760
re-encrypt everything and this is the

471
00:20:27,760 --> 00:20:30,000
command which is behind my back but

472
00:20:30,000 --> 00:20:32,720
please define what to encrypt how to

473
00:20:32,720 --> 00:20:34,640
encrypt

474
00:20:34,640 --> 00:20:35,679
we have

475
00:20:35,679 --> 00:20:37,200
providers

476
00:20:37,200 --> 00:20:40,799
several providers they work one by one

477
00:20:40,799 --> 00:20:43,520
if you want to re-encrypt you have to

478
00:20:43,520 --> 00:20:48,080
change the encryption configuration

479
00:20:48,640 --> 00:20:51,919
i believe this is creative and now

480
00:20:51,919 --> 00:20:53,440
the part

481
00:20:53,440 --> 00:20:56,320
about process requirement

482
00:20:56,320 --> 00:21:00,720
those same policies which are 21

483
00:21:00,720 --> 00:21:04,720
a lot who invented the standard liz rice

484
00:21:04,720 --> 00:21:05,760
and

485
00:21:05,760 --> 00:21:07,600
her partner

486
00:21:07,600 --> 00:21:10,559
they work with the technology something

487
00:21:10,559 --> 00:21:12,640
which is useful and cuber gives you a

488
00:21:12,640 --> 00:21:15,280
lot of opportunities that can be used

489
00:21:15,280 --> 00:21:17,120
today by the way one of the

490
00:21:17,120 --> 00:21:20,480
opportunities was to listen to dmitry of

491
00:21:20,480 --> 00:21:22,480
the kimonos

492
00:21:22,480 --> 00:21:24,480
presentation

493
00:21:24,480 --> 00:21:30,080
which will be about kubernetes firewall

494
00:21:30,080 --> 00:21:33,760
it works at the pod level

495
00:21:34,159 --> 00:21:36,640
it works a bit different

496
00:21:36,640 --> 00:21:39,200
if you want to control

497
00:21:39,200 --> 00:21:41,200
what has to be controlled what do we

498
00:21:41,200 --> 00:21:43,600
have here recommendations

499
00:21:43,600 --> 00:21:47,039
use the secrets in order to use secret

500
00:21:47,039 --> 00:21:48,559
management

501
00:21:48,559 --> 00:21:49,280
so

502
00:21:49,280 --> 00:21:51,600
install the system uh

503
00:21:51,600 --> 00:21:53,440
configure it and everything will be all

504
00:21:53,440 --> 00:21:54,720
right

505
00:21:54,720 --> 00:21:55,840
so

506
00:21:55,840 --> 00:21:58,960
many people say well still there are

507
00:21:58,960 --> 00:22:01,840
some problems of secret zero secret

508
00:22:01,840 --> 00:22:05,520
delivery we need the secret to get

509
00:22:05,520 --> 00:22:08,000
to the secret delivery system and who is

510
00:22:08,000 --> 00:22:10,320
going to deliver the secret that we are

511
00:22:10,320 --> 00:22:11,520
going to

512
00:22:11,520 --> 00:22:14,640
use at that level

513
00:22:14,640 --> 00:22:16,880
so but this is a good recommendation if

514
00:22:16,880 --> 00:22:18,720
you have a centralized solution which

515
00:22:18,720 --> 00:22:21,360
may helps you to manage secrets

516
00:22:21,360 --> 00:22:23,280
you can

517
00:22:23,280 --> 00:22:26,559
create a rotation of secrets

518
00:22:26,559 --> 00:22:29,200
automatic generation of secrets and no

519
00:22:29,200 --> 00:22:32,400
one will know what kind of secret it is

520
00:22:32,400 --> 00:22:37,120
and it's a useful approach

521
00:22:39,360 --> 00:22:41,039
two things

522
00:22:41,039 --> 00:22:43,679
you can use containers

523
00:22:43,679 --> 00:22:46,000
uh if you don't use the secret in the

524
00:22:46,000 --> 00:22:47,440
middle

525
00:22:47,440 --> 00:22:48,880
anyway

526
00:22:48,880 --> 00:22:51,360
management of security requirements to

527
00:22:51,360 --> 00:22:54,080
manifest

528
00:22:54,080 --> 00:22:55,600
we checked

529
00:22:55,600 --> 00:22:58,320
admission web hook

530
00:22:58,320 --> 00:23:00,400
controls that can check only

531
00:23:00,400 --> 00:23:02,640
availability of the parameter but the

532
00:23:02,640 --> 00:23:06,480
value itself and then we can

533
00:23:06,480 --> 00:23:08,960
change the

534
00:23:11,360 --> 00:23:12,080
but

535
00:23:12,080 --> 00:23:15,360
we need policies the policies understand

536
00:23:15,360 --> 00:23:17,520
what kind of values

537
00:23:17,520 --> 00:23:18,559
are

538
00:23:18,559 --> 00:23:20,159
interesting for us

539
00:23:20,159 --> 00:23:22,080
because they can be different in

540
00:23:22,080 --> 00:23:23,760
different companies

541
00:23:23,760 --> 00:23:26,320
uh some people want to get you images

542
00:23:26,320 --> 00:23:29,440
only from trusted source and you can

543
00:23:29,440 --> 00:23:31,679
write such a policy and other images

544
00:23:31,679 --> 00:23:32,720
wouldn't

545
00:23:32,720 --> 00:23:34,559
get in

546
00:23:34,559 --> 00:23:38,960
any manifesto field can be checked here

547
00:23:38,960 --> 00:23:41,919
i think you heard about opa

548
00:23:41,919 --> 00:23:44,559
policy

549
00:23:44,559 --> 00:23:47,520
now network security dmitri will have a

550
00:23:47,520 --> 00:23:49,520
separate presentation about it there are

551
00:23:49,520 --> 00:23:52,080
different approaches here and now

552
00:23:52,080 --> 00:23:53,039
we have

553
00:23:53,039 --> 00:23:54,240
extended

554
00:23:54,240 --> 00:23:57,360
berkeley pack and filter ebpf technology

555
00:23:57,360 --> 00:24:00,799
difficult complex interesting technology

556
00:24:00,799 --> 00:24:02,720
and it works

557
00:24:02,720 --> 00:24:04,640
there are several complete

558
00:24:04,640 --> 00:24:06,400
competitors

559
00:24:06,400 --> 00:24:07,360
but

560
00:24:07,360 --> 00:24:10,720
well you can segment the application

561
00:24:10,720 --> 00:24:12,080
and

562
00:24:12,080 --> 00:24:15,120
we cannot have one unique rule that will

563
00:24:15,120 --> 00:24:18,159
suit everyone it's a process thing which

564
00:24:18,159 --> 00:24:21,360
is customizable

565
00:24:21,520 --> 00:24:24,240
with analysis of every specific

566
00:24:24,240 --> 00:24:25,760
application

567
00:24:25,760 --> 00:24:29,039
and what that application needs

568
00:24:29,039 --> 00:24:32,480
comp and other linux security

569
00:24:32,480 --> 00:24:35,279
tools yes kubernetes allows you to do

570
00:24:35,279 --> 00:24:36,240
that

571
00:24:36,240 --> 00:24:38,880
we're not talking about complexity of

572
00:24:38,880 --> 00:24:40,640
implementation development and

573
00:24:40,640 --> 00:24:43,840
management but it can be done and it it

574
00:24:43,840 --> 00:24:46,799
is present at cis and this standard is

575
00:24:46,799 --> 00:24:49,760
really interesting and i ask you to

576
00:24:49,760 --> 00:24:51,039
read it

577
00:24:51,039 --> 00:24:53,279
and use it what kind of conclusions

578
00:24:53,279 --> 00:24:54,799
first

579
00:24:54,799 --> 00:24:56,799
learn kubernetes

580
00:24:56,799 --> 00:24:59,760
whether you want it or not you have to

581
00:24:59,760 --> 00:25:02,880
get acquainted with kubernetes what it

582
00:25:02,880 --> 00:25:04,640
consists of

583
00:25:04,640 --> 00:25:07,120
what kind of elements it has how those

584
00:25:07,120 --> 00:25:09,760
elements work don't go to

585
00:25:09,760 --> 00:25:12,960
the source code and check absolutely

586
00:25:12,960 --> 00:25:15,200
everything but you have to know the

587
00:25:15,200 --> 00:25:17,760
elements of kubernetes and how they work

588
00:25:17,760 --> 00:25:19,760
and what they are used for

589
00:25:19,760 --> 00:25:22,159
for example to check configuration the

590
00:25:22,159 --> 00:25:24,000
first question is where is the

591
00:25:24,000 --> 00:25:28,240
configuration where it is located

592
00:25:30,000 --> 00:25:33,679
and this is necessary and you will know

593
00:25:33,679 --> 00:25:36,400
the technology very well

594
00:25:36,400 --> 00:25:37,080
now

595
00:25:37,080 --> 00:25:39,919
digitalization of your requirements you

596
00:25:39,919 --> 00:25:42,559
have point recommendations and general

597
00:25:42,559 --> 00:25:46,159
recommendation point ia point b

598
00:25:46,159 --> 00:25:47,760
so there are some narrow point

599
00:25:47,760 --> 00:25:50,400
recommendations and very generous

600
00:25:50,400 --> 00:25:51,919
recommendations

601
00:25:51,919 --> 00:25:53,440
of the general

602
00:25:53,440 --> 00:25:54,660
type

603
00:25:54,660 --> 00:25:57,829
[Music]

604
00:25:59,360 --> 00:26:00,400
well

605
00:26:00,400 --> 00:26:03,440
antivirus protection whether you need to

606
00:26:03,440 --> 00:26:06,480
put it in the node or not

607
00:26:06,480 --> 00:26:07,600
well

608
00:26:07,600 --> 00:26:10,080
i i don't think you need it but that's

609
00:26:10,080 --> 00:26:11,919
my personal opinion

610
00:26:11,919 --> 00:26:14,880
and adaptation take a standard make it a

611
00:26:14,880 --> 00:26:16,799
checklist and

612
00:26:16,799 --> 00:26:18,080
say

613
00:26:18,080 --> 00:26:20,000
i.t person do it

614
00:26:20,000 --> 00:26:22,240
it doesn't work because some

615
00:26:22,240 --> 00:26:25,360
requirements are processed based

616
00:26:25,360 --> 00:26:26,159
and

617
00:26:26,159 --> 00:26:28,960
you don't have need a checklist that

618
00:26:28,960 --> 00:26:31,360
will cover everything now you will have

619
00:26:31,360 --> 00:26:33,840
to sit down with the

620
00:26:33,840 --> 00:26:36,159
i.t person and

621
00:26:36,159 --> 00:26:39,279
realize what he needs and then

622
00:26:39,279 --> 00:26:42,960
the result would be much much better

623
00:26:42,960 --> 00:26:46,799
cuber is a system that can be read again

624
00:26:46,799 --> 00:26:49,520
again and again and every time you will

625
00:26:49,520 --> 00:26:51,919
learn something new for example network

626
00:26:51,919 --> 00:26:55,039
policy in the recent release you have

627
00:26:55,039 --> 00:26:57,360
status which

628
00:26:57,360 --> 00:26:59,840
wasn't available before

629
00:26:59,840 --> 00:27:02,400
cni must implement it but it is not

630
00:27:02,400 --> 00:27:05,440
implemented yet so you have to learn

631
00:27:05,440 --> 00:27:06,720
if you

632
00:27:06,720 --> 00:27:09,520
work with cis benchmark

633
00:27:09,520 --> 00:27:12,159
you get acquainted with technology you

634
00:27:12,159 --> 00:27:16,159
get manifesto of secure configuration

635
00:27:16,159 --> 00:27:17,600
how to ski

636
00:27:17,600 --> 00:27:20,799
tune and configure scheduler

637
00:27:20,799 --> 00:27:24,640
how to change configuration and secondly

638
00:27:24,640 --> 00:27:26,960
you have something for development

639
00:27:26,960 --> 00:27:28,640
yes

640
00:27:28,640 --> 00:27:32,240
we insured configuration security now we

641
00:27:32,240 --> 00:27:35,279
have to secure applications

642
00:27:35,279 --> 00:27:39,600
apartments ctvi documentation secrets

643
00:27:39,600 --> 00:27:42,000
vulnerability management analysis of

644
00:27:42,000 --> 00:27:44,640
manifesto runtime protection

645
00:27:44,640 --> 00:27:48,000
and so on and so forth and gradually you

646
00:27:48,000 --> 00:27:50,799
can have a development roadmap which can

647
00:27:50,799 --> 00:27:53,840
be implemented step by step

648
00:27:53,840 --> 00:27:56,480
and you can have a lot of links to

649
00:27:56,480 --> 00:27:59,520
relevant resources how to do it and to

650
00:27:59,520 --> 00:28:01,520
conclude i would like to thank you this

651
00:28:01,520 --> 00:28:04,480
is the link to our telegram channel

652
00:28:04,480 --> 00:28:06,480
please subscribe

653
00:28:06,480 --> 00:28:09,360
if you have any questions i am ready to

654
00:28:09,360 --> 00:28:12,959
answer them

