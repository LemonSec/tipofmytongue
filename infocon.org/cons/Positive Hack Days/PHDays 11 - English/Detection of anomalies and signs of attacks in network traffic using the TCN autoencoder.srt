1
00:00:03,360 --> 00:00:05,520
hi everyone again so i hope you had

2
00:00:05,520 --> 00:00:06,720
enough time

3
00:00:06,720 --> 00:00:08,480
to take a rest

4
00:00:08,480 --> 00:00:09,920
in parallel

5
00:00:09,920 --> 00:00:13,280
we are running the steph contest you can

6
00:00:13,280 --> 00:00:15,599
find the address

7
00:00:15,599 --> 00:00:18,800
at our website

8
00:00:18,800 --> 00:00:20,640
it's a very interesting track would you

9
00:00:20,640 --> 00:00:22,800
please join in

10
00:00:22,800 --> 00:00:24,720
it has very interesting prices and we'll

11
00:00:24,720 --> 00:00:27,359
continue with nikolai

12
00:00:27,359 --> 00:00:30,080
from infotax he's going to speak about

13
00:00:30,080 --> 00:00:32,159
how the

14
00:00:32,159 --> 00:00:35,040
he be using

15
00:00:35,280 --> 00:00:40,079
his encoder techniques to analyze

16
00:00:40,480 --> 00:00:46,000
anomalies in network traffic using tcn

17
00:00:46,000 --> 00:00:48,160
i'm nikolai from infratex

18
00:00:48,160 --> 00:00:50,079
i'm going to be talking about the

19
00:00:50,079 --> 00:00:53,840
detection of the attacks in network

20
00:00:53,840 --> 00:00:55,630
traffic with the use of the

21
00:00:55,630 --> 00:00:58,829
[Music]

22
00:01:09,520 --> 00:01:10,880
because

23
00:01:10,880 --> 00:01:12,720
they are arranged with an organized

24
00:01:12,720 --> 00:01:16,720
group of individuals to make an attack

25
00:01:16,720 --> 00:01:18,080
from

26
00:01:18,080 --> 00:01:21,520
a targeted organization

27
00:01:22,320 --> 00:01:23,920
con men are using

28
00:01:23,920 --> 00:01:26,720
a wide set of

29
00:01:26,720 --> 00:01:29,680
tools for the attacks and they are

30
00:01:29,680 --> 00:01:30,880
structured

31
00:01:30,880 --> 00:01:33,040
such attacks are clustered into

32
00:01:33,040 --> 00:01:34,240
different

33
00:01:34,240 --> 00:01:37,520
stages and some of the stages should be

34
00:01:37,520 --> 00:01:38,840
performed

35
00:01:38,840 --> 00:01:41,920
consecutively because they cannot

36
00:01:41,920 --> 00:01:44,560
upload data without being granted

37
00:01:44,560 --> 00:01:46,240
privileges

38
00:01:46,240 --> 00:01:48,079
apt attacks

39
00:01:48,079 --> 00:01:50,720
are persistent and

40
00:01:50,720 --> 00:01:52,159
long

41
00:01:52,159 --> 00:01:54,880
so they may attack

42
00:01:54,880 --> 00:01:58,159
for a long time get access to new data

43
00:01:58,159 --> 00:02:01,200
upload the data

44
00:02:01,200 --> 00:02:03,759
for classification

45
00:02:03,759 --> 00:02:04,479
of

46
00:02:04,479 --> 00:02:07,680
the stages of the apt text different

47
00:02:07,680 --> 00:02:10,239
methods i used one of them

48
00:02:10,239 --> 00:02:13,520
based upon my tre

49
00:02:13,520 --> 00:02:15,680
attack matrix

50
00:02:15,680 --> 00:02:18,800
it splits the attack into different

51
00:02:18,800 --> 00:02:19,920
tactics

52
00:02:19,920 --> 00:02:22,400
14 of them

53
00:02:22,400 --> 00:02:23,760
each of them can have different

54
00:02:23,760 --> 00:02:25,120
techniques

55
00:02:25,120 --> 00:02:27,760
in reality

56
00:02:27,760 --> 00:02:30,080
not all of the 14 tactics can be

57
00:02:30,080 --> 00:02:32,239
utilized some of them

58
00:02:32,239 --> 00:02:35,720
can be skipped

59
00:02:36,080 --> 00:02:38,800
initially they may get access to

60
00:02:38,800 --> 00:02:40,480
database

61
00:02:40,480 --> 00:02:42,959
in order to look for

62
00:02:42,959 --> 00:02:46,480
more vulnerable data

63
00:02:46,480 --> 00:02:48,319
another method

64
00:02:48,319 --> 00:02:50,959
which can be used here would be

65
00:02:50,959 --> 00:02:53,360
the life cycle uh

66
00:02:53,360 --> 00:02:55,120
shown here from

67
00:02:55,120 --> 00:02:58,319
mandiant mendient attack

68
00:02:58,319 --> 00:03:00,800
some of the stages

69
00:03:00,800 --> 00:03:03,840
look very similar or look very identical

70
00:03:03,840 --> 00:03:05,680
to them

71
00:03:05,680 --> 00:03:08,480
my theory

72
00:03:08,560 --> 00:03:10,879
because

73
00:03:10,879 --> 00:03:12,879
they would need to get access hackers

74
00:03:12,879 --> 00:03:16,800
need to get access they get privileges

75
00:03:16,800 --> 00:03:21,120
but um hackers will know not always go

76
00:03:21,120 --> 00:03:23,440
through all of these stages

77
00:03:23,440 --> 00:03:24,879
consecutively

78
00:03:24,879 --> 00:03:26,879
sometimes they would just need to go

79
00:03:26,879 --> 00:03:28,080
back

80
00:03:28,080 --> 00:03:30,959
to find the data they needed

81
00:03:30,959 --> 00:03:34,159
we mainly focused on identifying

82
00:03:34,159 --> 00:03:36,480
tactics

83
00:03:36,480 --> 00:03:37,760
for example

84
00:03:37,760 --> 00:03:38,720
server

85
00:03:38,720 --> 00:03:40,799
negotiation etc

86
00:03:40,799 --> 00:03:42,239
and we used

87
00:03:42,239 --> 00:03:44,319
different methods for detecting such

88
00:03:44,319 --> 00:03:45,900
attacks let's talk about them

89
00:03:45,900 --> 00:03:47,120
[Music]

90
00:03:47,120 --> 00:03:51,280
these methods are split into two

91
00:03:52,799 --> 00:03:55,519
violations detections like signatures

92
00:03:55,519 --> 00:03:58,000
and pericrules

93
00:03:58,000 --> 00:04:01,040
expert systems and

94
00:04:01,040 --> 00:04:03,519
anomalies detection statistical methods

95
00:04:03,519 --> 00:04:04,239
and

96
00:04:04,239 --> 00:04:06,319
machine learning methods the key

97
00:04:06,319 --> 00:04:08,640
difference between these two approach

98
00:04:08,640 --> 00:04:10,560
is the information

99
00:04:10,560 --> 00:04:13,599
upon which these methods are based

100
00:04:13,599 --> 00:04:17,279
the violations detections are based upon

101
00:04:17,279 --> 00:04:20,079
the information about

102
00:04:20,079 --> 00:04:24,160
vulnerabilities or exploits

103
00:04:24,560 --> 00:04:27,440
and we get very high precision

104
00:04:27,440 --> 00:04:31,600
because if this signature is targeted at

105
00:04:31,600 --> 00:04:34,240
searching for these violations these

106
00:04:34,240 --> 00:04:36,479
violations will be detected

107
00:04:36,479 --> 00:04:38,639
such methods are very productive because

108
00:04:38,639 --> 00:04:42,320
these systems do not use or utilize any

109
00:04:42,320 --> 00:04:45,280
complicated mathematical models for

110
00:04:45,280 --> 00:04:47,840
cross-validations but they also have

111
00:04:47,840 --> 00:04:50,960
quite a number of

112
00:04:51,680 --> 00:04:54,080
disadvantages

113
00:04:54,080 --> 00:04:56,400
like avoiding

114
00:04:56,400 --> 00:04:59,199
the threats detections for example if

115
00:04:59,199 --> 00:05:01,440
the hacker knows what these systems

116
00:05:01,440 --> 00:05:04,400
react to they can bypass them or use

117
00:05:04,400 --> 00:05:08,000
some legitimate tools like for example

118
00:05:08,000 --> 00:05:11,800
windows mitre instrumentation

119
00:05:12,160 --> 00:05:13,919
and naturally

120
00:05:13,919 --> 00:05:16,639
so far the information does not exist

121
00:05:16,639 --> 00:05:21,199
about these violations or signatures

122
00:05:22,800 --> 00:05:25,520
such threats

123
00:05:25,520 --> 00:05:30,000
can overflow the detection methods

124
00:05:30,000 --> 00:05:32,800
for anomalies they are based upon the

125
00:05:32,800 --> 00:05:34,800
normal behavior of the system and they

126
00:05:34,800 --> 00:05:38,240
do not use the violations information at

127
00:05:38,240 --> 00:05:41,680
all so such methods may become universal

128
00:05:41,680 --> 00:05:42,800
so

129
00:05:42,800 --> 00:05:44,880
these systems will always consider

130
00:05:44,880 --> 00:05:47,919
violation any deviation from the normal

131
00:05:47,919 --> 00:05:49,600
state

132
00:05:49,600 --> 00:05:54,560
and different methods may have different

133
00:05:57,520 --> 00:05:58,800
specifics

134
00:05:58,800 --> 00:06:01,360
and such methods in theory need to

135
00:06:01,360 --> 00:06:02,880
identify

136
00:06:02,880 --> 00:06:05,360
the attacks of the zero day

137
00:06:05,360 --> 00:06:07,440
they do not use the information about

138
00:06:07,440 --> 00:06:09,120
the violations

139
00:06:09,120 --> 00:06:12,400
by using such methods we can

140
00:06:12,400 --> 00:06:15,600
bypass the detection

141
00:06:15,600 --> 00:06:18,800
of violations if we build normal

142
00:06:18,800 --> 00:06:22,560
system behavior the hacker may actually

143
00:06:22,560 --> 00:06:24,720
suspect

144
00:06:24,720 --> 00:06:27,199
the behavior of the system but in the

145
00:06:27,199 --> 00:06:29,680
neural networks even the developers

146
00:06:29,680 --> 00:06:32,000
cannot say with high level of precision

147
00:06:32,000 --> 00:06:33,360
what would be the

148
00:06:33,360 --> 00:06:36,319
dependencies patterns

149
00:06:36,319 --> 00:06:38,560
considered as normal and which one

150
00:06:38,560 --> 00:06:41,680
considered as abnormal

151
00:06:41,680 --> 00:06:44,880
one of the disadvantages of such models

152
00:06:44,880 --> 00:06:48,120
would be

153
00:06:48,880 --> 00:06:50,160
never

154
00:06:50,160 --> 00:06:53,199
urgent need for frequent updates and

155
00:06:53,199 --> 00:06:55,520
sometimes they can be updated on a

156
00:06:55,520 --> 00:06:58,000
weekly basis and they do not use

157
00:06:58,000 --> 00:07:01,440
information about violations and did not

158
00:07:01,440 --> 00:07:02,960
have

159
00:07:02,960 --> 00:07:05,919
to be updated very frequently yet they

160
00:07:05,919 --> 00:07:07,520
have to be trained

161
00:07:07,520 --> 00:07:10,319
because any normal behavior

162
00:07:10,319 --> 00:07:13,680
of the system changes like new hosts are

163
00:07:13,680 --> 00:07:15,120
added

164
00:07:15,120 --> 00:07:18,160
or some time elapses

165
00:07:18,160 --> 00:07:21,520
so these up these changes are required

166
00:07:21,520 --> 00:07:23,120
they can analyze

167
00:07:23,120 --> 00:07:25,039
comprehensive attacks

168
00:07:25,039 --> 00:07:27,599
if we're talking about network traffic

169
00:07:27,599 --> 00:07:29,280
these signatures

170
00:07:29,280 --> 00:07:32,639
can take into account each session each

171
00:07:32,639 --> 00:07:34,240
packet

172
00:07:34,240 --> 00:07:36,800
regardless of one another without using

173
00:07:36,800 --> 00:07:39,199
additional information about the time

174
00:07:39,199 --> 00:07:41,680
distribution of network traffic but

175
00:07:41,680 --> 00:07:44,240
these methods have some disadvantages as

176
00:07:44,240 --> 00:07:45,199
well

177
00:07:45,199 --> 00:07:48,080
first of all they're very demanding

178
00:07:48,080 --> 00:07:51,360
for resources so this model

179
00:07:51,360 --> 00:07:52,160
is

180
00:07:52,160 --> 00:07:54,720
normally very complicated so complicated

181
00:07:54,720 --> 00:07:56,479
neural

182
00:07:56,479 --> 00:07:59,039
networks are required so validation

183
00:07:59,039 --> 00:08:01,599
cross-validation are required

184
00:08:01,599 --> 00:08:04,400
and with the use of such methods the

185
00:08:04,400 --> 00:08:06,879
precision of the qualification of the

186
00:08:06,879 --> 00:08:08,720
attack also

187
00:08:08,720 --> 00:08:10,160
suffers

188
00:08:10,160 --> 00:08:11,440
we cannot

189
00:08:11,440 --> 00:08:13,599
identify exactly which would be the

190
00:08:13,599 --> 00:08:16,000
tactic

191
00:08:16,319 --> 00:08:18,080
and to understand what would be the root

192
00:08:18,080 --> 00:08:20,879
cause of the anomaly sometimes

193
00:08:20,879 --> 00:08:24,840
is difficult and it requires additional

194
00:08:24,840 --> 00:08:26,560
investigation yet

195
00:08:26,560 --> 00:08:28,879
if we

196
00:08:30,879 --> 00:08:32,240
yet if we

197
00:08:32,240 --> 00:08:33,279
study

198
00:08:33,279 --> 00:08:35,919
the apt attack cycle

199
00:08:35,919 --> 00:08:38,839
we decided to use these models of

200
00:08:38,839 --> 00:08:42,159
detecting the attacks

201
00:08:42,159 --> 00:08:45,040
they use legitimate tools

202
00:08:45,040 --> 00:08:47,519
for detection

203
00:08:47,519 --> 00:08:48,320
like

204
00:08:48,320 --> 00:08:50,240
interacting with the server

205
00:08:50,240 --> 00:08:54,800
interacting with some legitimate site

206
00:08:54,800 --> 00:08:58,320
based upon network traffic

207
00:08:58,320 --> 00:09:00,720
we will be detecting

208
00:09:00,720 --> 00:09:04,000
uh such attacks here we have used the

209
00:09:04,000 --> 00:09:05,680
transport level

210
00:09:05,680 --> 00:09:08,640
sessions and the information about them

211
00:09:08,640 --> 00:09:09,760
like the

212
00:09:09,760 --> 00:09:10,680
host

213
00:09:10,680 --> 00:09:14,640
identifiers the numbers of ports numbers

214
00:09:14,640 --> 00:09:16,560
of bytes per packet

215
00:09:16,560 --> 00:09:19,360
aggregations the numbers of bytes per

216
00:09:19,360 --> 00:09:22,000
second

217
00:09:22,000 --> 00:09:26,640
we also used the flag information

218
00:09:26,720 --> 00:09:28,959
in the sessions

219
00:09:28,959 --> 00:09:30,560
which were sent

220
00:09:30,560 --> 00:09:33,040
in the course of one single session by

221
00:09:33,040 --> 00:09:34,399
using

222
00:09:34,399 --> 00:09:38,480
animals detection information we can

223
00:09:41,279 --> 00:09:44,080
take into account the sessions in time

224
00:09:44,080 --> 00:09:44,959
and

225
00:09:44,959 --> 00:09:49,040
it will look approximately like this

226
00:09:49,200 --> 00:09:51,120
we have

227
00:09:51,120 --> 00:09:53,760
the transport

228
00:09:53,760 --> 00:09:55,279
level session

229
00:09:55,279 --> 00:09:59,120
each section is a vector

230
00:10:01,760 --> 00:10:04,320
our model will be taking a look at a

231
00:10:04,320 --> 00:10:05,920
segment

232
00:10:05,920 --> 00:10:08,399
and make a decision whether it's a

233
00:10:08,399 --> 00:10:10,880
normal segment or not then

234
00:10:10,880 --> 00:10:13,519
this window will shift

235
00:10:13,519 --> 00:10:16,880
session by session and the upcoming

236
00:10:16,880 --> 00:10:21,200
segment will be analyzed in terms of

237
00:10:21,440 --> 00:10:23,120
its validity

238
00:10:23,120 --> 00:10:25,279
i should say that normally

239
00:10:25,279 --> 00:10:28,959
this window is quite wide

240
00:10:28,959 --> 00:10:31,680
and the shift over the window is much

241
00:10:31,680 --> 00:10:35,279
smaller than the window itself

242
00:10:35,360 --> 00:10:37,200
so that we can segment it in a better

243
00:10:37,200 --> 00:10:39,440
way

244
00:10:40,399 --> 00:10:43,360
now we can talk about the tools what

245
00:10:43,360 --> 00:10:45,120
would be the tools that could help us

246
00:10:45,120 --> 00:10:47,519
implement this model

247
00:10:47,519 --> 00:10:50,079
we use the convolutional

248
00:10:50,079 --> 00:10:53,760
neural networks

249
00:10:53,839 --> 00:10:55,120
what's

250
00:10:55,120 --> 00:10:58,000
neural net networks

251
00:10:58,000 --> 00:10:59,360
they look like this

252
00:10:59,360 --> 00:11:01,600
we have a few

253
00:11:01,600 --> 00:11:03,360
layers

254
00:11:03,360 --> 00:11:05,760
corresponding layers and each element of

255
00:11:05,760 --> 00:11:08,800
the layer is built upon the elements of

256
00:11:08,800 --> 00:11:10,000
the

257
00:11:10,000 --> 00:11:12,480
preliminary layer

258
00:11:12,480 --> 00:11:14,880
and we may study interaction

259
00:11:14,880 --> 00:11:16,720
between all of them

260
00:11:16,720 --> 00:11:18,079
convolutional

261
00:11:18,079 --> 00:11:21,120
neural networks are using

262
00:11:21,120 --> 00:11:24,000
the mechanism of

263
00:11:24,000 --> 00:11:26,480
the core

264
00:11:27,440 --> 00:11:30,480
which is projected at the entry input

265
00:11:30,480 --> 00:11:31,519
data

266
00:11:31,519 --> 00:11:33,920
and is

267
00:11:34,560 --> 00:11:36,640
helping us research

268
00:11:36,640 --> 00:11:38,399
dependencies

269
00:11:38,399 --> 00:11:40,560
space dependencies

270
00:11:40,560 --> 00:11:42,399
if we run a parallel with the previous

271
00:11:42,399 --> 00:11:43,600
slide

272
00:11:43,600 --> 00:11:44,640
the

273
00:11:44,640 --> 00:11:47,519
input data would be just what we saw at

274
00:11:47,519 --> 00:11:49,680
the previous slide so that's what we

275
00:11:49,680 --> 00:11:51,839
need to bear in mind dealing with these

276
00:11:51,839 --> 00:11:54,160
schemes

277
00:11:54,160 --> 00:11:57,680
when we work with the convolutional

278
00:11:57,680 --> 00:11:59,040
coordinates

279
00:11:59,040 --> 00:12:02,160
what kind of advantages we use

280
00:12:02,160 --> 00:12:04,959
using convolutional neural networks

281
00:12:04,959 --> 00:12:07,040
first of all it's the ability to find

282
00:12:07,040 --> 00:12:09,440
the local and global

283
00:12:09,440 --> 00:12:12,399
spatial dependencies that's exactly what

284
00:12:12,399 --> 00:12:14,480
we need because we would like to find

285
00:12:14,480 --> 00:12:16,480
the dependencies in the

286
00:12:16,480 --> 00:12:21,120
time row and we also saved the resources

287
00:12:22,000 --> 00:12:25,120
with a single win with a single core we

288
00:12:25,120 --> 00:12:28,720
don't need to build multiple

289
00:12:28,720 --> 00:12:32,800
connections because we use the single

290
00:12:32,800 --> 00:12:37,200
core effect so we can work with the

291
00:12:37,200 --> 00:12:40,320
multi-measured data

292
00:12:40,320 --> 00:12:43,440
and we can input

293
00:12:43,760 --> 00:12:47,440
it into the mathematical model

294
00:12:47,440 --> 00:12:49,040
let's talk about the architecture we

295
00:12:49,040 --> 00:12:50,240
used

296
00:12:50,240 --> 00:12:53,680
we use the so-called

297
00:12:53,680 --> 00:12:57,519
tcns temporal convolutional networks

298
00:12:57,519 --> 00:12:59,120
each next

299
00:12:59,120 --> 00:13:02,000
and following layer equals the number of

300
00:13:02,000 --> 00:13:05,200
elements of the previous layer

301
00:13:05,200 --> 00:13:06,720
it uses

302
00:13:06,720 --> 00:13:09,760
the time temporal convolutional method

303
00:13:09,760 --> 00:13:12,240
only those math elements

304
00:13:12,240 --> 00:13:14,399
are included

305
00:13:14,399 --> 00:13:17,440
that exist previously also we have the

306
00:13:17,440 --> 00:13:20,320
dilation here in the convolution not the

307
00:13:20,320 --> 00:13:22,320
neighboring elements

308
00:13:22,320 --> 00:13:25,920
interact but with some spaces

309
00:13:25,920 --> 00:13:27,680
and we use

310
00:13:27,680 --> 00:13:30,560
an x1 convolution to regulate the number

311
00:13:30,560 --> 00:13:33,360
of channels of our data to move from one

312
00:13:33,360 --> 00:13:36,240
layer to another

313
00:13:36,240 --> 00:13:38,000
if we use these models what are the

314
00:13:38,000 --> 00:13:40,480
advantages that we're getting here

315
00:13:40,480 --> 00:13:43,760
well we can work better with the flow of

316
00:13:43,760 --> 00:13:46,160
data

317
00:13:46,320 --> 00:13:49,040
to get the results we don't need to have

318
00:13:49,040 --> 00:13:50,880
the result for the next

319
00:13:50,880 --> 00:13:53,839
point in time and we can also measure

320
00:13:53,839 --> 00:13:55,760
time dependencies

321
00:13:55,760 --> 00:13:58,480
by using these networks which we need

322
00:13:58,480 --> 00:14:01,040
sometimes

323
00:14:01,199 --> 00:14:03,440
the advantages can also be

324
00:14:03,440 --> 00:14:06,079
running the

325
00:14:07,920 --> 00:14:09,199
recurrent

326
00:14:09,199 --> 00:14:11,920
neural networks recurrent neural

327
00:14:11,920 --> 00:14:14,079
networks cannot

328
00:14:14,079 --> 00:14:15,600
give

329
00:14:15,600 --> 00:14:17,839
the result for the current neural

330
00:14:17,839 --> 00:14:18,959
network

331
00:14:18,959 --> 00:14:21,519
before the previous result is obtained

332
00:14:21,519 --> 00:14:23,519
yet this model does not have such a

333
00:14:23,519 --> 00:14:26,000
deficiency and it can

334
00:14:26,000 --> 00:14:28,399
move from one layer to another

335
00:14:28,399 --> 00:14:29,600
and thus

336
00:14:29,600 --> 00:14:31,760
helps us

337
00:14:31,760 --> 00:14:34,240
run these in different tensor and

338
00:14:34,240 --> 00:14:36,000
parallel cores

339
00:14:36,000 --> 00:14:38,880
and improve our efficiency we can use

340
00:14:38,880 --> 00:14:41,680
the wide window here in comparison with

341
00:14:41,680 --> 00:14:45,519
the recurrent neural networks which

342
00:14:45,519 --> 00:14:48,399
can be trained in the worst

343
00:14:48,399 --> 00:14:51,360
fashion they also have some

344
00:14:51,360 --> 00:14:55,199
problems with the attuniation

345
00:14:55,199 --> 00:14:56,000
which

346
00:14:56,000 --> 00:14:57,760
prevails

347
00:14:57,760 --> 00:15:01,600
and here you can see it in comparison

348
00:15:01,600 --> 00:15:04,800
the time and recurrent neural networks

349
00:15:04,800 --> 00:15:08,800
which i have taken from an article

350
00:15:08,800 --> 00:15:10,839
it shows some

351
00:15:10,839 --> 00:15:14,560
errors with different

352
00:15:14,560 --> 00:15:19,120
time points with the entry data

353
00:15:19,120 --> 00:15:22,240
with the use of the

354
00:15:23,199 --> 00:15:25,839
1000

355
00:15:25,839 --> 00:15:28,560
spots recurrent neural networks are in

356
00:15:28,560 --> 00:15:31,759
the higher level than temporal neural

357
00:15:31,759 --> 00:15:33,279
networks

358
00:15:33,279 --> 00:15:35,920
now we'd like to talk about how we

359
00:15:35,920 --> 00:15:39,959
are going to build a model

360
00:15:43,519 --> 00:15:46,399
the auto encoder architecture will help

361
00:15:46,399 --> 00:15:49,040
us with that

362
00:15:49,839 --> 00:15:53,360
this model should give the same object

363
00:15:53,360 --> 00:15:56,639
in the output as the one they had in the

364
00:15:56,639 --> 00:15:59,040
input

365
00:16:01,040 --> 00:16:03,040
the amount of information about these

366
00:16:03,040 --> 00:16:04,399
objects

367
00:16:04,399 --> 00:16:08,000
should reduce thus

368
00:16:08,000 --> 00:16:10,240
if we train this model with the normal

369
00:16:10,240 --> 00:16:14,399
set of data it will be able to identify

370
00:16:14,399 --> 00:16:15,920
the patterns

371
00:16:15,920 --> 00:16:16,959
and

372
00:16:16,959 --> 00:16:18,720
help us

373
00:16:18,720 --> 00:16:19,440
re

374
00:16:19,440 --> 00:16:24,639
build it the mistake here is a metric

375
00:16:25,120 --> 00:16:29,040
which compares the input

376
00:16:29,040 --> 00:16:31,839
and the resulting object

377
00:16:31,839 --> 00:16:34,240
we have

378
00:16:34,560 --> 00:16:37,800
this segment

379
00:16:39,519 --> 00:16:41,279
we will have the mistake of the

380
00:16:41,279 --> 00:16:43,519
reconstruction which will be much

381
00:16:43,519 --> 00:16:45,680
higher because the patterns will be

382
00:16:45,680 --> 00:16:48,680
different

383
00:16:50,320 --> 00:16:52,480
approximately like that

384
00:16:52,480 --> 00:16:55,120
the ultimate architecture of the

385
00:16:55,120 --> 00:16:57,040
network will look like

386
00:16:57,040 --> 00:16:59,120
a simple

387
00:16:59,120 --> 00:17:01,600
network is shown here on the slide in

388
00:17:01,600 --> 00:17:04,079
the decoder and encoder we have just one

389
00:17:04,079 --> 00:17:06,319
layer

390
00:17:06,559 --> 00:17:09,039
this is the

391
00:17:10,240 --> 00:17:12,799
convolution applied

392
00:17:12,799 --> 00:17:17,280
then pulling occurs then

393
00:17:17,280 --> 00:17:20,319
another convolution occurs

394
00:17:20,319 --> 00:17:22,240
and we restore the

395
00:17:22,240 --> 00:17:24,799
size and form of data with the

396
00:17:24,799 --> 00:17:26,559
upsampling

397
00:17:26,559 --> 00:17:29,840
and we use yet another convolutional

398
00:17:29,840 --> 00:17:32,559
layer thus these networks will help us

399
00:17:32,559 --> 00:17:33,600
build

400
00:17:33,600 --> 00:17:35,760
uh the behavior

401
00:17:35,760 --> 00:17:37,200
of

402
00:17:37,200 --> 00:17:42,080
rows to identify the anomalies there

403
00:17:42,080 --> 00:17:44,559
then we conducted a number of tests

404
00:17:44,559 --> 00:17:46,880
tests to

405
00:17:46,880 --> 00:17:49,039
check the networks

406
00:17:49,039 --> 00:17:51,520
identify whether it's capable of

407
00:17:51,520 --> 00:17:53,039
identifying

408
00:17:53,039 --> 00:17:54,960
anomalies

409
00:17:54,960 --> 00:17:57,280
and we carried out and now a number of

410
00:17:57,280 --> 00:17:59,840
synthetic tests

411
00:17:59,840 --> 00:18:03,440
took the data from the emulated network

412
00:18:03,440 --> 00:18:07,520
where we carried out an apt attack

413
00:18:07,520 --> 00:18:09,520
then we moved to the real network

414
00:18:09,520 --> 00:18:10,799
traffic

415
00:18:10,799 --> 00:18:14,480
with the embedded apt attack

416
00:18:14,480 --> 00:18:17,039
in order to move to the tests we just

417
00:18:17,039 --> 00:18:18,880
need to understand

418
00:18:18,880 --> 00:18:22,559
what would be the anomalies there

419
00:18:23,679 --> 00:18:25,200
spatial

420
00:18:25,200 --> 00:18:26,240
time

421
00:18:26,240 --> 00:18:29,440
and combined anomalies

422
00:18:29,440 --> 00:18:33,520
let's come up with with a few examples

423
00:18:34,880 --> 00:18:38,240
so let's just imagine an abstract system

424
00:18:38,240 --> 00:18:42,480
made up of 30 points

425
00:18:42,480 --> 00:18:44,480
which show the position of this system

426
00:18:44,480 --> 00:18:46,559
at a certain point in time as time

427
00:18:46,559 --> 00:18:47,840
elapses

428
00:18:47,840 --> 00:18:49,520
a sign

429
00:18:49,520 --> 00:18:51,918
wave

430
00:18:52,320 --> 00:18:53,840
will protrude

431
00:18:53,840 --> 00:18:56,000
and you will see the behavior of this

432
00:18:56,000 --> 00:18:58,000
system

433
00:18:58,000 --> 00:19:00,240
over a certain span of time

434
00:19:00,240 --> 00:19:03,200
you can see the curve

435
00:19:03,600 --> 00:19:05,840
you can see the waveform you just need

436
00:19:05,840 --> 00:19:07,520
to

437
00:19:07,520 --> 00:19:10,799
describe this at a few points instead of

438
00:19:10,799 --> 00:19:12,240
a sine wave

439
00:19:12,240 --> 00:19:14,880
at certain points so we have random

440
00:19:14,880 --> 00:19:16,320
parameters

441
00:19:16,320 --> 00:19:19,280
that do not form a wave shape and on the

442
00:19:19,280 --> 00:19:20,559
contrary

443
00:19:20,559 --> 00:19:22,320
time anomalies

444
00:19:22,320 --> 00:19:26,320
occur at certain points in time

445
00:19:26,400 --> 00:19:29,200
here you can see that the x15

446
00:19:29,200 --> 00:19:30,400
point

447
00:19:30,400 --> 00:19:33,120
had no anomalies but it had some signed

448
00:19:33,120 --> 00:19:34,960
waves

449
00:19:34,960 --> 00:19:38,960
yet x equals 25 we inserted the anomaly

450
00:19:38,960 --> 00:19:41,200
a time anomaly

451
00:19:41,200 --> 00:19:44,320
in this space of time

452
00:19:45,440 --> 00:19:46,240
and it

453
00:19:46,240 --> 00:19:49,360
does not show us beautiful sign waves

454
00:19:49,360 --> 00:19:53,919
but it shows some ugly detections

455
00:19:53,919 --> 00:19:56,960
described as anomalies

456
00:19:56,960 --> 00:19:59,280
this is a combined

457
00:19:59,280 --> 00:20:02,320
anomaly and very often with the face

458
00:20:02,320 --> 00:20:04,840
with such

459
00:20:04,840 --> 00:20:07,840
ones can our model detect anomalies of

460
00:20:07,840 --> 00:20:10,559
different time let's conduct synthetic

461
00:20:10,559 --> 00:20:12,080
tests

462
00:20:12,080 --> 00:20:14,320
to do that

463
00:20:14,320 --> 00:20:17,840
30 time rows with sine values so we

464
00:20:17,840 --> 00:20:18,720
added

465
00:20:18,720 --> 00:20:21,600
noise there just to understand

466
00:20:21,600 --> 00:20:24,240
the noise

467
00:20:25,120 --> 00:20:27,200
factor

468
00:20:27,200 --> 00:20:31,200
and we took only the one the second

469
00:20:31,200 --> 00:20:34,400
and two

470
00:20:34,400 --> 00:20:36,080
in the third one

471
00:20:36,080 --> 00:20:39,120
to understand how this model would

472
00:20:39,120 --> 00:20:41,520
react

473
00:20:42,559 --> 00:20:44,960
with some time delay

474
00:20:44,960 --> 00:20:46,960
so that they do not overlapping time

475
00:20:46,960 --> 00:20:50,720
then we trained the model

476
00:20:51,039 --> 00:20:54,480
and we carried out a test

477
00:20:54,480 --> 00:20:56,240
and we ended up

478
00:20:56,240 --> 00:20:57,840
with this mistake

479
00:20:57,840 --> 00:21:01,360
the mistake of the reconstruction

480
00:21:01,360 --> 00:21:03,840
where we had such an anomaly it's also

481
00:21:03,840 --> 00:21:06,400
an abnormal one

482
00:21:06,400 --> 00:21:08,159
a conclusion can be made that all of the

483
00:21:08,159 --> 00:21:09,600
anomalies

484
00:21:09,600 --> 00:21:12,639
had been detected

485
00:21:12,880 --> 00:21:15,120
but in this case

486
00:21:15,120 --> 00:21:17,919
the abnormal behavior was

487
00:21:17,919 --> 00:21:20,240
instead of those signs

488
00:21:20,240 --> 00:21:24,720
we had random values but normally

489
00:21:24,720 --> 00:21:27,120
anomalies can be of a more

490
00:21:27,120 --> 00:21:29,360
complicated kind there could be a

491
00:21:29,360 --> 00:21:32,959
dependency between two

492
00:21:34,720 --> 00:21:36,880
to understand whether our model is

493
00:21:36,880 --> 00:21:40,240
capable of detecting them would build

494
00:21:40,240 --> 00:21:43,520
three different patterns

495
00:21:43,520 --> 00:21:46,000
and these patterns could have had a

496
00:21:46,000 --> 00:21:47,520
different uh

497
00:21:47,520 --> 00:21:48,559
scale

498
00:21:48,559 --> 00:21:49,840
ultimately

499
00:21:49,840 --> 00:21:52,400
we used the two time rows and the

500
00:21:52,400 --> 00:21:54,320
normality of the

501
00:21:54,320 --> 00:21:58,120
work of a system

502
00:21:58,559 --> 00:22:00,960
was identified by the dependency of

503
00:22:00,960 --> 00:22:02,400
patterns

504
00:22:02,400 --> 00:22:04,000
the combination

505
00:22:04,000 --> 00:22:06,080
of patterns were normal

506
00:22:06,080 --> 00:22:08,320
all the other ones

507
00:22:08,320 --> 00:22:10,000
considered

508
00:22:10,000 --> 00:22:14,640
abnormal so we came up with the test

509
00:22:14,640 --> 00:22:16,240
set

510
00:22:16,240 --> 00:22:18,640
built upon

511
00:22:18,640 --> 00:22:21,200
such patterns we added noise and the

512
00:22:21,200 --> 00:22:24,159
three anomalies

513
00:22:24,159 --> 00:22:27,120
in a pattern equals zero

514
00:22:27,120 --> 00:22:29,520
and pattern two

515
00:22:29,520 --> 00:22:31,440
in the next case it's an

516
00:22:31,440 --> 00:22:34,000
anomaly

517
00:22:35,679 --> 00:22:39,120
here we can see the errors

518
00:22:39,120 --> 00:22:42,080
everywhere we detected and normally

519
00:22:42,080 --> 00:22:45,120
the reconstruction error was

520
00:22:45,120 --> 00:22:47,440
abnormal and we can see at which point

521
00:22:47,440 --> 00:22:49,360
in time

522
00:22:49,360 --> 00:22:51,200
anomalies would occur

523
00:22:51,200 --> 00:22:53,440
thus we proved the efficiency of our

524
00:22:53,440 --> 00:22:55,120
model

525
00:22:55,120 --> 00:22:58,240
with the synthetic data

526
00:22:58,240 --> 00:23:02,240
then we moved to the network traffic

527
00:23:02,799 --> 00:23:04,960
one such examples was

528
00:23:04,960 --> 00:23:09,120
pico domain data set

529
00:23:09,120 --> 00:23:10,080
it's a

530
00:23:10,080 --> 00:23:13,280
set of network magazines from which we

531
00:23:13,280 --> 00:23:14,480
only took

532
00:23:14,480 --> 00:23:15,440
the

533
00:23:15,440 --> 00:23:18,000
transport level sessions and

534
00:23:18,000 --> 00:23:20,080
here we have the representation of data

535
00:23:20,080 --> 00:23:23,679
for three days and the apt attack was

536
00:23:23,679 --> 00:23:26,320
carried on

537
00:23:26,320 --> 00:23:29,039
for those three days

538
00:23:29,039 --> 00:23:31,760
emulated

539
00:23:32,080 --> 00:23:36,600
you can see also the horizontal

540
00:23:36,960 --> 00:23:39,440
of a hacker

541
00:23:39,440 --> 00:23:42,640
we can see all of the stages of the male

542
00:23:42,640 --> 00:23:44,799
classified

543
00:23:44,799 --> 00:23:47,039
attack for example the hacker gets

544
00:23:47,039 --> 00:23:48,960
access to one of the hosts

545
00:23:48,960 --> 00:23:52,320
using the weir wing rare vulnerability

546
00:23:52,320 --> 00:23:55,120
then they used

547
00:23:55,360 --> 00:23:58,159
power shell the established foothold

548
00:23:58,159 --> 00:24:00,960
they escalated privileges with the use

549
00:24:00,960 --> 00:24:01,840
of the

550
00:24:01,840 --> 00:24:06,000
hot potato exploit then they started

551
00:24:06,000 --> 00:24:07,600
moving

552
00:24:07,600 --> 00:24:08,960
in a lateral

553
00:24:08,960 --> 00:24:10,080
direction

554
00:24:10,080 --> 00:24:12,400
using wmi

555
00:24:12,400 --> 00:24:13,600
etc

556
00:24:13,600 --> 00:24:16,480
this cycle would always

557
00:24:16,480 --> 00:24:17,520
mean

558
00:24:17,520 --> 00:24:20,640
the interaction with the command server

559
00:24:20,640 --> 00:24:22,480
they collected all of the data of the

560
00:24:22,480 --> 00:24:26,080
users and they filtered the user data

561
00:24:26,080 --> 00:24:28,720
successfully

562
00:24:28,720 --> 00:24:30,240
how was this

563
00:24:30,240 --> 00:24:32,960
apt attack

564
00:24:41,840 --> 00:24:45,520
two minutes differences

565
00:24:45,520 --> 00:24:48,320
at the same time

566
00:24:49,600 --> 00:24:52,559
all of the sessions which were about uh

567
00:24:52,559 --> 00:24:54,720
interacting with the command server

568
00:24:54,720 --> 00:24:58,320
were not marked either

569
00:24:59,440 --> 00:25:00,480
so the

570
00:25:00,480 --> 00:25:03,760
creators of that came up

571
00:25:03,760 --> 00:25:07,039
with a chart of the activity bar chart

572
00:25:07,039 --> 00:25:07,840
which

573
00:25:07,840 --> 00:25:10,880
portrays the activity of the users

574
00:25:10,880 --> 00:25:13,679
on day two and day three

575
00:25:13,679 --> 00:25:16,880
activities with the inet entice screen

576
00:25:16,880 --> 00:25:18,240
websites

577
00:25:18,240 --> 00:25:20,799
are detected

578
00:25:20,799 --> 00:25:24,000
those were the sites used and

579
00:25:24,000 --> 00:25:26,640
we understand at which points

580
00:25:26,640 --> 00:25:29,440
the interaction with the server

581
00:25:29,440 --> 00:25:30,720
occurred

582
00:25:30,720 --> 00:25:33,120
and the first intrusion

583
00:25:33,120 --> 00:25:35,360
all of the data for

584
00:25:35,360 --> 00:25:36,480
day one

585
00:25:36,480 --> 00:25:38,480
with the exception of the

586
00:25:38,480 --> 00:25:40,960
time in the evening where there were no

587
00:25:40,960 --> 00:25:43,039
attacks etc

588
00:25:43,039 --> 00:25:44,480
we learned

589
00:25:44,480 --> 00:25:48,159
on this data for day one and we built

590
00:25:48,159 --> 00:25:52,320
the reconstruction error chart

591
00:25:52,559 --> 00:25:54,799
the first thing we detect here

592
00:25:54,799 --> 00:25:56,799
is that the reconstruction error with

593
00:25:56,799 --> 00:25:59,760
the normal behavior for the first day is

594
00:25:59,760 --> 00:26:01,039
higher than

595
00:26:01,039 --> 00:26:04,080
for day two and day three it occurred

596
00:26:04,080 --> 00:26:06,400
because if you pay close attention to

597
00:26:06,400 --> 00:26:09,440
the upper chart

598
00:26:09,760 --> 00:26:11,600
you see that the activity of the users

599
00:26:11,600 --> 00:26:15,678
on day one was much higher was

600
00:26:17,120 --> 00:26:19,279
their read

601
00:26:19,279 --> 00:26:21,360
but on day two and three the user

602
00:26:21,360 --> 00:26:23,679
activities was less varied

603
00:26:23,679 --> 00:26:24,400
and

604
00:26:24,400 --> 00:26:27,039
was much lower so

605
00:26:27,039 --> 00:26:28,960
it's not representative

606
00:26:28,960 --> 00:26:31,200
seems like the normal behavior on day

607
00:26:31,200 --> 00:26:34,000
one and abnormal and they turn day three

608
00:26:34,000 --> 00:26:36,480
and that's the reason for error

609
00:26:36,480 --> 00:26:40,159
so in order to measure the boundaries of

610
00:26:40,159 --> 00:26:41,520
animality

611
00:26:41,520 --> 00:26:43,840
we just measure day two and day three

612
00:26:43,840 --> 00:26:45,520
separately

613
00:26:45,520 --> 00:26:47,120
now we can make

614
00:26:47,120 --> 00:26:49,679
a preliminary conclusion that

615
00:26:49,679 --> 00:26:51,520
interaction with the server

616
00:26:51,520 --> 00:26:53,360
was successfully

617
00:26:53,360 --> 00:26:55,440
detected by the model of the neural

618
00:26:55,440 --> 00:26:58,720
network of ours

619
00:26:59,039 --> 00:27:01,760
let's just take a deep look at the

620
00:27:01,760 --> 00:27:03,919
reconstruction error the

621
00:27:03,919 --> 00:27:09,200
initial access was detected successfully

622
00:27:09,200 --> 00:27:12,080
with some deviation however with these

623
00:27:12,080 --> 00:27:15,678
two false positives

624
00:27:15,760 --> 00:27:17,200
let's just take a look at the

625
00:27:17,200 --> 00:27:19,600
reconstruction errors on day two and day

626
00:27:19,600 --> 00:27:22,880
three we also used the validation here

627
00:27:22,880 --> 00:27:25,600
which was based upon normal traffic on

628
00:27:25,600 --> 00:27:28,559
day two and day three

629
00:27:28,559 --> 00:27:31,600
the picture is more or less

630
00:27:31,600 --> 00:27:34,720
exact all of the detections

631
00:27:34,720 --> 00:27:37,360
are valid all of the intrusion

632
00:27:37,360 --> 00:27:38,480
intrusions

633
00:27:38,480 --> 00:27:41,279
were detected

634
00:27:42,880 --> 00:27:44,720
let's focus

635
00:27:44,720 --> 00:27:47,279
our attention on the fall in fact

636
00:27:47,279 --> 00:27:49,919
if we take a look at the first bar chart

637
00:27:49,919 --> 00:27:51,919
at the first bar chart

638
00:27:51,919 --> 00:27:53,200
we'll see

639
00:27:53,200 --> 00:27:57,440
just by the activity of the users

640
00:27:57,600 --> 00:28:00,000
we can identify where

641
00:28:00,000 --> 00:28:02,480
the interaction with the server occurred

642
00:28:02,480 --> 00:28:03,679
and the real

643
00:28:03,679 --> 00:28:06,640
network such a bar chart

644
00:28:06,640 --> 00:28:07,919
cannot be

645
00:28:07,919 --> 00:28:09,919
created

646
00:28:09,919 --> 00:28:12,399
because the

647
00:28:13,200 --> 00:28:17,279
server interaction will not be that

648
00:28:17,279 --> 00:28:18,480
prominent

649
00:28:18,480 --> 00:28:21,200
so in order to complicate the task

650
00:28:21,200 --> 00:28:23,760
in this data model we did not

651
00:28:23,760 --> 00:28:25,200
use the

652
00:28:25,200 --> 00:28:28,240
ip addresses at all

653
00:28:28,240 --> 00:28:30,320
yet the interaction with the command

654
00:28:30,320 --> 00:28:32,720
server was still detected it's an

655
00:28:32,720 --> 00:28:35,600
interesting result we ended up with then

656
00:28:35,600 --> 00:28:38,880
we moved to the real traffic and we

657
00:28:38,880 --> 00:28:42,399
as a we used a normal set of

658
00:28:42,399 --> 00:28:45,600
data the infotex network

659
00:28:45,600 --> 00:28:48,720
and in the emulated network an apt

660
00:28:48,720 --> 00:28:51,039
attack was carried out and you can see

661
00:28:51,039 --> 00:28:54,320
the schematics of it here which was much

662
00:28:54,320 --> 00:28:58,000
more easy than the previous one

663
00:28:58,000 --> 00:29:01,279
less stages less network traffic inside

664
00:29:01,279 --> 00:29:02,399
it

665
00:29:02,399 --> 00:29:04,399
it was carried out in the emulated

666
00:29:04,399 --> 00:29:07,760
network and the sessions were

667
00:29:07,760 --> 00:29:09,679
embedded into the

668
00:29:09,679 --> 00:29:11,520
infotax traffic

669
00:29:11,520 --> 00:29:14,159
taking into account the topology of the

670
00:29:14,159 --> 00:29:15,600
network

671
00:29:15,600 --> 00:29:18,720
and a very realistic

672
00:29:18,720 --> 00:29:20,720
attack

673
00:29:20,720 --> 00:29:22,000
was

674
00:29:22,000 --> 00:29:24,480
integrated then we trained our model

675
00:29:24,480 --> 00:29:27,520
with the normal data set and here we can

676
00:29:27,520 --> 00:29:28,720
see

677
00:29:28,720 --> 00:29:30,480
that the sessions

678
00:29:30,480 --> 00:29:33,200
belonging to the attack were a few and

679
00:29:33,200 --> 00:29:34,640
they were

680
00:29:34,640 --> 00:29:35,919
focused

681
00:29:35,919 --> 00:29:38,559
with just one

682
00:29:38,559 --> 00:29:41,200
area which took just a few minutes in

683
00:29:41,200 --> 00:29:43,919
time and this attack was successfully

684
00:29:43,919 --> 00:29:45,760
detected by our

685
00:29:45,760 --> 00:29:48,240
model

686
00:29:49,760 --> 00:29:51,520
and this is a

687
00:29:51,520 --> 00:29:53,440
another chart

688
00:29:53,440 --> 00:29:55,360
in closer proximity

689
00:29:55,360 --> 00:29:57,440
showing the success

690
00:29:57,440 --> 00:29:58,640
then we

691
00:29:58,640 --> 00:30:00,880
revealed a few disadvantages of the

692
00:30:00,880 --> 00:30:03,679
model first of all it's very hard to

693
00:30:03,679 --> 00:30:05,679
detect

694
00:30:05,679 --> 00:30:09,120
sparse attacks if there are more sparse

695
00:30:09,120 --> 00:30:11,678
attacks

696
00:30:13,679 --> 00:30:15,039
such

697
00:30:15,039 --> 00:30:17,440
abnormal activities will be diluted with

698
00:30:17,440 --> 00:30:19,440
normal activities if there were 10

699
00:30:19,440 --> 00:30:21,679
sessions 10 network sessions but they

700
00:30:21,679 --> 00:30:24,240
were very very sparse among

701
00:30:24,240 --> 00:30:26,559
scattered around among 10 000 of normal

702
00:30:26,559 --> 00:30:29,440
ones we wouldn't be able to detect it

703
00:30:29,440 --> 00:30:33,440
because it's diluted and is very sparse

704
00:30:33,440 --> 00:30:37,120
another deficiency of this method

705
00:30:37,120 --> 00:30:40,320
it's a insufficient localization of the

706
00:30:40,320 --> 00:30:41,919
attack

707
00:30:41,919 --> 00:30:44,559
we cannot say very precisely at which

708
00:30:44,559 --> 00:30:46,320
point of time it started and when it

709
00:30:46,320 --> 00:30:48,960
ended and the last deficiency here

710
00:30:48,960 --> 00:30:52,320
is very hard to identify the

711
00:30:52,320 --> 00:30:55,760
stages of the attack

712
00:30:55,760 --> 00:30:58,960
which is generally

713
00:30:59,120 --> 00:31:03,039
true for other models as well

714
00:31:03,039 --> 00:31:06,000
how can we improve the model and how did

715
00:31:06,000 --> 00:31:08,080
we actually improve it by using the

716
00:31:08,080 --> 00:31:10,240
following method take a look here we

717
00:31:10,240 --> 00:31:11,680
have a time frame

718
00:31:11,680 --> 00:31:12,799
[Music]

719
00:31:12,799 --> 00:31:17,279
from networking sessions and we select

720
00:31:17,279 --> 00:31:18,480
this window

721
00:31:18,480 --> 00:31:21,039
so we select a segment

722
00:31:21,039 --> 00:31:22,640
we make a

723
00:31:22,640 --> 00:31:25,120
reconstruction error for it

724
00:31:25,120 --> 00:31:27,600
and then we take a step

725
00:31:27,600 --> 00:31:31,200
so that it would be equal to

726
00:31:31,200 --> 00:31:32,880
the

727
00:31:32,880 --> 00:31:35,840
the width of the window and make

728
00:31:35,840 --> 00:31:37,840
a reconstruction error for each

729
00:31:37,840 --> 00:31:40,960
particular point and if we dilute

730
00:31:40,960 --> 00:31:44,000
this attack with lots and lots of normal

731
00:31:44,000 --> 00:31:46,880
traffic but reduce this following scheme

732
00:31:46,880 --> 00:31:50,799
we will have the following

733
00:31:50,799 --> 00:31:52,000
error

734
00:31:52,000 --> 00:31:53,840
we will have a much

735
00:31:53,840 --> 00:31:57,200
more thick layer because we diluted

736
00:31:57,200 --> 00:31:59,039
abnormal sessions

737
00:31:59,039 --> 00:32:01,760
with quite a lot of normal network

738
00:32:01,760 --> 00:32:04,159
traffic and here is the result we can

739
00:32:04,159 --> 00:32:05,279
see that

740
00:32:05,279 --> 00:32:07,919
we are getting very low precision

741
00:32:07,919 --> 00:32:11,039
we have quite a lot of false positives

742
00:32:11,039 --> 00:32:13,519
here yet

743
00:32:13,519 --> 00:32:16,240
where we can see the apt attack

744
00:32:16,240 --> 00:32:18,559
we see

745
00:32:18,559 --> 00:32:21,919
rough edges and these rough edges

746
00:32:21,919 --> 00:32:24,480
indicate the networking attack network

747
00:32:24,480 --> 00:32:25,600
attack

748
00:32:25,600 --> 00:32:29,039
thus we

749
00:32:29,039 --> 00:32:30,799
segmented

750
00:32:30,799 --> 00:32:33,519
and we can identify when the attack

751
00:32:33,519 --> 00:32:38,640
started and when the attack ended

752
00:32:39,600 --> 00:32:41,360
making a summary i should say that we

753
00:32:41,360 --> 00:32:44,960
were able to build a convolutional

754
00:32:44,960 --> 00:32:48,000
neural network successfully

755
00:32:48,000 --> 00:32:49,200
which could

756
00:32:49,200 --> 00:32:52,720
very successfully identify apt attacks

757
00:32:52,720 --> 00:32:56,799
in the synthetic and real data sets of

758
00:32:56,799 --> 00:32:59,440
the network traffic i'm done with the

759
00:32:59,440 --> 00:33:02,159
main part of my presentation and i'm

760
00:33:02,159 --> 00:33:05,919
ready to take your questions

761
00:33:06,159 --> 00:33:08,799
uh please use your questions

762
00:33:08,799 --> 00:33:09,519
for

763
00:33:09,519 --> 00:33:11,200
please use microphones for your

764
00:33:11,200 --> 00:33:12,720
questions

765
00:33:12,720 --> 00:33:14,720
those who would ask interesting

766
00:33:14,720 --> 00:33:18,080
questions will get t-shirts

767
00:33:21,519 --> 00:33:23,440
from yandex i have a few questions to

768
00:33:23,440 --> 00:33:25,840
you

769
00:33:25,840 --> 00:33:27,840
what's the precision and

770
00:33:27,840 --> 00:33:29,919
completeness

771
00:33:29,919 --> 00:33:33,600
i didn't see that question number two

772
00:33:33,600 --> 00:33:36,000
we saw wmi

773
00:33:36,000 --> 00:33:39,360
we saw auto run persistence so it was

774
00:33:39,360 --> 00:33:41,760
windows environment but what if it's not

775
00:33:41,760 --> 00:33:45,440
windows environment what if it's a linux

776
00:33:45,440 --> 00:33:49,200
what if it's the kernel vulnerabilities

777
00:33:49,200 --> 00:33:52,600
what if it's

778
00:33:52,720 --> 00:33:56,640
a mac os or linux environment

779
00:33:56,640 --> 00:33:58,080
did you test

780
00:33:58,080 --> 00:34:01,279
your model on such platforms apart from

781
00:34:01,279 --> 00:34:03,519
windows environment

782
00:34:03,519 --> 00:34:05,440
and question number three

783
00:34:05,440 --> 00:34:09,440
do you have a data set with apt attacks

784
00:34:09,440 --> 00:34:12,720
which is targeted

785
00:34:14,960 --> 00:34:18,719
for linux and mac os

786
00:34:18,719 --> 00:34:21,520
thank you

787
00:34:21,520 --> 00:34:24,159
you mentioned recall and precision

788
00:34:24,159 --> 00:34:26,000
we are looking for the reconstruction

789
00:34:26,000 --> 00:34:27,599
error not for a particular space and

790
00:34:27,599 --> 00:34:29,760
time but for the entire segment and this

791
00:34:29,760 --> 00:34:33,480
model trains

792
00:34:34,000 --> 00:34:36,320
localize and identify this particular

793
00:34:36,320 --> 00:34:38,480
error

794
00:34:38,480 --> 00:34:40,480
so we cannot just just simply take

795
00:34:40,480 --> 00:34:42,079
recall and precision

796
00:34:42,079 --> 00:34:44,800
other methods need to be invented

797
00:34:44,800 --> 00:34:49,119
we can evaluate this work like

798
00:34:49,119 --> 00:34:50,399
this

799
00:34:50,399 --> 00:34:51,599
as for

800
00:34:51,599 --> 00:34:54,079
different systems we tested it with

801
00:34:54,079 --> 00:34:56,159
different sets of data

802
00:34:56,159 --> 00:34:59,800
sac ads

803
00:34:59,800 --> 00:35:03,839
2017-2018 emulated

804
00:35:03,839 --> 00:35:05,760
linux as well i don't remember exactly

805
00:35:05,760 --> 00:35:07,440
which particular methods we used there

806
00:35:07,440 --> 00:35:10,240
but i remember precisely that

807
00:35:10,240 --> 00:35:12,880
linux machines and windows machines were

808
00:35:12,880 --> 00:35:15,200
used there as well but we are not

809
00:35:15,200 --> 00:35:18,960
targeted at um making particular tactics

810
00:35:18,960 --> 00:35:21,680
we are trying to detect

811
00:35:21,680 --> 00:35:26,640
abnormal behavior of uh network

812
00:35:26,640 --> 00:35:29,280
i think i answered all of your questions

813
00:35:29,280 --> 00:35:31,680
next question i'm gregory

814
00:35:31,680 --> 00:35:34,079
you say that you tested it on your own

815
00:35:34,079 --> 00:35:35,119
network

816
00:35:35,119 --> 00:35:38,400
and you emulated this attack

817
00:35:38,400 --> 00:35:41,440
reverse shell

818
00:35:41,920 --> 00:35:44,720
password to the server

819
00:35:44,720 --> 00:35:48,160
data filtration but then you just tested

820
00:35:48,160 --> 00:35:50,079
this small

821
00:35:50,079 --> 00:35:51,839
you had a very small detection did you

822
00:35:51,839 --> 00:35:52,800
detect

823
00:35:52,800 --> 00:35:55,200
a part of the

824
00:35:55,200 --> 00:35:56,400
attack

825
00:35:56,400 --> 00:35:59,040
in a very short space of time or it was

826
00:35:59,040 --> 00:35:59,839
the

827
00:35:59,839 --> 00:36:02,800
complete attack

828
00:36:02,800 --> 00:36:06,560
we just started network traffic so all

829
00:36:06,560 --> 00:36:09,440
those sessions which belonged there

830
00:36:09,440 --> 00:36:11,839
there were a few of them so all of them

831
00:36:11,839 --> 00:36:14,640
belonged to that particular attack

832
00:36:14,640 --> 00:36:17,040
so initially they were integrated

833
00:36:17,040 --> 00:36:19,440
in a very small

834
00:36:19,440 --> 00:36:21,920
space of time so i think it answers your

835
00:36:21,920 --> 00:36:24,240
question

836
00:36:24,320 --> 00:36:27,839
yes thank you

837
00:36:28,160 --> 00:36:30,720
i'm andre from burbank

838
00:36:30,720 --> 00:36:33,598
two questions to you

839
00:36:33,760 --> 00:36:35,520
so i think

840
00:36:35,520 --> 00:36:39,119
it would not be a good idea just to give

841
00:36:39,119 --> 00:36:41,680
this raw data

842
00:36:41,680 --> 00:36:44,640
before feeding it

843
00:36:44,640 --> 00:36:45,760
how did you

844
00:36:45,760 --> 00:36:47,839
pre-process the data before before

845
00:36:47,839 --> 00:36:48,880
feeding

846
00:36:48,880 --> 00:36:50,880
and how can you measure these two models

847
00:36:50,880 --> 00:36:52,640
you use different type of approach it

848
00:36:52,640 --> 00:36:55,440
became better it became worse with the

849
00:36:55,440 --> 00:36:56,960
proxy method

850
00:36:56,960 --> 00:36:59,680
did you use it

851
00:36:59,839 --> 00:37:02,720
as far as the first question goes ip

852
00:37:02,720 --> 00:37:05,520
addresses were just split into bytes and

853
00:37:05,520 --> 00:37:07,200
they were normalized

854
00:37:07,200 --> 00:37:10,560
if the network

855
00:37:10,640 --> 00:37:13,119
if the work of the network

856
00:37:13,119 --> 00:37:16,000
does not have a lot of devices you can

857
00:37:16,000 --> 00:37:19,119
use the identificators of the machines

858
00:37:19,119 --> 00:37:22,000
but you just split the simply simple iep

859
00:37:22,000 --> 00:37:24,800
address into four into four features and

860
00:37:24,800 --> 00:37:26,880
you normalize them

861
00:37:26,880 --> 00:37:29,760
as for the comparison yes of course

862
00:37:29,760 --> 00:37:31,760
there is a problem comparing the models

863
00:37:31,760 --> 00:37:34,079
so you can compare these models

864
00:37:34,079 --> 00:37:36,190
uh using charts and

865
00:37:36,190 --> 00:37:37,280
[Music]

866
00:37:37,280 --> 00:37:38,960
graphs but

867
00:37:38,960 --> 00:37:41,200
we are promising on working more on this

868
00:37:41,200 --> 00:37:44,480
last bar chart where we

869
00:37:44,480 --> 00:37:46,640
measure the reconstruction error and

870
00:37:46,640 --> 00:37:48,560
then we'll be able to understand which

871
00:37:48,560 --> 00:37:50,640
particular metric

872
00:37:50,640 --> 00:37:52,720
should be used here to identify the

873
00:37:52,720 --> 00:37:55,760
quality of the model but such a problem

874
00:37:55,760 --> 00:37:57,839
does indeed exist

875
00:37:57,839 --> 00:38:00,240
as a recommendation it was from our

876
00:38:00,240 --> 00:38:02,320
colleagues in the neural networks you

877
00:38:02,320 --> 00:38:06,720
just add the embedding layer so you get

878
00:38:06,720 --> 00:38:08,000
all of these

879
00:38:08,000 --> 00:38:12,640
essences through embedding and so forth

880
00:38:12,960 --> 00:38:14,960
thank you for your presentation i'm paul

881
00:38:14,960 --> 00:38:17,839
filonov a few comments first and then a

882
00:38:17,839 --> 00:38:18,880
question

883
00:38:18,880 --> 00:38:21,200
people asked about

884
00:38:21,200 --> 00:38:22,560
very important

885
00:38:22,560 --> 00:38:26,480
memento anomaly bench work

886
00:38:26,480 --> 00:38:29,440
it comes up with the proxy metrics which

887
00:38:29,440 --> 00:38:30,960
takes into account

888
00:38:30,960 --> 00:38:32,400
the

889
00:38:32,400 --> 00:38:36,800
delay between the detection

890
00:38:36,800 --> 00:38:41,200
but can you just roll back to slide 29

891
00:38:41,200 --> 00:38:43,920
the threshold identification that's what

892
00:38:43,920 --> 00:38:46,160
i didn't get with the normal behavior

893
00:38:46,160 --> 00:38:50,160
the threshold holders point

894
00:38:50,160 --> 00:38:51,520
45

895
00:38:51,520 --> 00:38:53,200
and then on

896
00:38:53,200 --> 00:38:54,320
slide

897
00:38:54,320 --> 00:38:56,000
38

898
00:38:56,000 --> 00:38:59,000
0.25

899
00:38:59,280 --> 00:39:01,920
how come that change

900
00:39:01,920 --> 00:39:04,960
occurred good question good question but

901
00:39:04,960 --> 00:39:07,280
i partially answered it if you take a

902
00:39:07,280 --> 00:39:09,920
look at this upper chart this is a

903
00:39:09,920 --> 00:39:12,720
normal behavior on day one day two it

904
00:39:12,720 --> 00:39:15,839
may be different

905
00:39:15,839 --> 00:39:18,560
so training on day one and then testing

906
00:39:18,560 --> 00:39:20,320
on day two is not a normal thing because

907
00:39:20,320 --> 00:39:22,800
this normal behavior may be different so

908
00:39:22,800 --> 00:39:24,400
the reconstruction error may be

909
00:39:24,400 --> 00:39:26,160
different so we took

910
00:39:26,160 --> 00:39:27,040
the

911
00:39:27,040 --> 00:39:30,560
first day second and day third

912
00:39:30,560 --> 00:39:31,760
differently

913
00:39:31,760 --> 00:39:34,400
separately

914
00:39:35,760 --> 00:39:37,680
i mean for day two and day three

915
00:39:37,680 --> 00:39:40,000
so in the live system you could have uh

916
00:39:40,000 --> 00:39:42,560
understood that there was an attack just

917
00:39:42,560 --> 00:39:43,520
after

918
00:39:43,520 --> 00:39:45,280
drawing the line in the end of the day

919
00:39:45,280 --> 00:39:47,119
right

920
00:39:47,119 --> 00:39:49,359
no when the system works it has some

921
00:39:49,359 --> 00:39:52,240
normal behavior

922
00:39:54,240 --> 00:39:56,800
based upon that

923
00:39:56,800 --> 00:39:58,400
we can track it

924
00:39:58,400 --> 00:40:00,560
attract this normal behavior

925
00:40:00,560 --> 00:40:03,280
it's basically a more problem of set of

926
00:40:03,280 --> 00:40:05,119
data

927
00:40:05,119 --> 00:40:06,160
thank you

928
00:40:06,160 --> 00:40:08,839
and you compared it with the

929
00:40:08,839 --> 00:40:10,640
recurrence it's an interesting

930
00:40:10,640 --> 00:40:14,079
comparison but i think today

931
00:40:14,079 --> 00:40:16,319
if we really wanted to compare different

932
00:40:16,319 --> 00:40:18,160
types of approach

933
00:40:18,160 --> 00:40:21,359
it would be nice just to see

934
00:40:21,359 --> 00:40:23,119
what recommended well

935
00:40:23,119 --> 00:40:25,920
transformers for example nlp

936
00:40:25,920 --> 00:40:28,160
and transformers really show

937
00:40:28,160 --> 00:40:29,599
really well

938
00:40:29,599 --> 00:40:33,280
in this area interesting insight and or

939
00:40:33,280 --> 00:40:35,520
you may alternatively take a very simple

940
00:40:35,520 --> 00:40:37,280
method

941
00:40:37,280 --> 00:40:40,720
an alternative method in the window mode

942
00:40:40,720 --> 00:40:43,200
and see the detections because it can be

943
00:40:43,200 --> 00:40:45,680
applied here with a time coder and in

944
00:40:45,680 --> 00:40:47,119
its essence

945
00:40:47,119 --> 00:40:49,359
it's much simpler it's just a comment in

946
00:40:49,359 --> 00:40:51,280
the end

947
00:40:51,280 --> 00:40:52,880
so there may be

948
00:40:52,880 --> 00:40:55,599
a simpler

949
00:40:55,839 --> 00:40:57,680
example i think i need to study this

950
00:40:57,680 --> 00:40:58,640
question

951
00:40:58,640 --> 00:41:01,839
much more thank you thank you

952
00:41:01,839 --> 00:41:04,000
hello i'm andre matkevich and thank you

953
00:41:04,000 --> 00:41:04,880
for your

954
00:41:04,880 --> 00:41:07,760
presentation could you please explain

955
00:41:07,760 --> 00:41:09,359
more in detail

956
00:41:09,359 --> 00:41:12,000
the processing tract

957
00:41:12,000 --> 00:41:14,319
from the moment you get the network

958
00:41:14,319 --> 00:41:17,680
packets to the

959
00:41:18,000 --> 00:41:20,079
input

960
00:41:20,079 --> 00:41:22,079
to the neural network

961
00:41:22,079 --> 00:41:23,839
from speaker domain

962
00:41:23,839 --> 00:41:25,359
we had the logs

963
00:41:25,359 --> 00:41:29,440
from where we only took the traffic

964
00:41:29,440 --> 00:41:31,440
the information about the sessions of

965
00:41:31,440 --> 00:41:33,359
the transport layer

966
00:41:33,359 --> 00:41:36,000
and we had some features there

967
00:41:36,000 --> 00:41:37,920
ip addresses the

968
00:41:37,920 --> 00:41:42,480
numbers of ports and we only used

969
00:41:43,680 --> 00:41:46,079
some ports because they were randomly

970
00:41:46,079 --> 00:41:48,160
generated we used the number of bytes

971
00:41:48,160 --> 00:41:50,880
packages and the aggregations

972
00:41:50,880 --> 00:41:52,880
we used the information about flags

973
00:41:52,880 --> 00:41:54,640
which were also coded as far as

974
00:41:54,640 --> 00:41:56,880
normalization goes

975
00:41:56,880 --> 00:41:58,960
we use the non-conventional methods

976
00:41:58,960 --> 00:42:01,040
there because

977
00:42:01,040 --> 00:42:03,599
we take a look at the distribution

978
00:42:03,599 --> 00:42:06,400
of the longevity of sessions you can see

979
00:42:06,400 --> 00:42:08,800
a big threshold

980
00:42:08,800 --> 00:42:12,000
and a big step and then long plateau

981
00:42:12,000 --> 00:42:12,960
because

982
00:42:12,960 --> 00:42:15,760
some parts of the traffic have very low

983
00:42:15,760 --> 00:42:18,400
duration but normal traffic has longer

984
00:42:18,400 --> 00:42:20,720
duration so the question was about

985
00:42:20,720 --> 00:42:23,280
normalization of that we use different

986
00:42:23,280 --> 00:42:27,040
combined methods for that

987
00:42:29,440 --> 00:42:31,760
starting from classification

988
00:42:31,760 --> 00:42:34,640
ending with the

989
00:42:34,960 --> 00:42:39,040
detection of the so-called

990
00:42:42,839 --> 00:42:44,960
threshold because we do not work with

991
00:42:44,960 --> 00:42:46,640
the normal distribution

992
00:42:46,640 --> 00:42:49,040
we work with a similar distribution so

993
00:42:49,040 --> 00:42:53,280
we divided bit by border we digitized

994
00:42:53,280 --> 00:42:54,240
the

995
00:42:54,240 --> 00:42:56,560
the data the package the packets which

996
00:42:56,560 --> 00:42:59,359
were much bigger so the comprehensive

997
00:42:59,359 --> 00:43:01,119
approach was used there so it was a good

998
00:43:01,119 --> 00:43:04,400
question about normalization

999
00:43:04,640 --> 00:43:06,800
an elementary unit

1000
00:43:06,800 --> 00:43:08,000
the value

1001
00:43:08,000 --> 00:43:11,119
of parameters from one session right

1002
00:43:11,119 --> 00:43:14,079
that's what you take it into that

1003
00:43:14,079 --> 00:43:16,720
now the input data is this segment we

1004
00:43:16,720 --> 00:43:18,160
have

1005
00:43:18,160 --> 00:43:20,960
the data from the segment of the time

1006
00:43:20,960 --> 00:43:22,720
frame

1007
00:43:22,720 --> 00:43:24,400
from the segment of the time frame

1008
00:43:24,400 --> 00:43:28,160
that's the input data and we make

1009
00:43:28,160 --> 00:43:31,040
the decision about the normality or

1010
00:43:31,040 --> 00:43:33,839
abnormality of the

1011
00:43:33,839 --> 00:43:35,680
time frame

1012
00:43:35,680 --> 00:43:38,560
in the network traffic you have a huge

1013
00:43:38,560 --> 00:43:42,400
number of subscribers and you have

1014
00:43:42,400 --> 00:43:45,040
one session running after another

1015
00:43:45,040 --> 00:43:47,200
do you combine them

1016
00:43:47,200 --> 00:43:50,120
or you take just

1017
00:43:50,120 --> 00:43:52,720
[Music]

1018
00:43:52,720 --> 00:43:54,560
as a window

1019
00:43:54,560 --> 00:43:56,880
without actually

1020
00:43:56,880 --> 00:43:58,319
dividing

1021
00:43:58,319 --> 00:44:00,400
iop destination port is the rate

1022
00:44:00,400 --> 00:44:04,240
destination we do not divide it

1023
00:44:04,240 --> 00:44:06,720
but after the reconstruction of the

1024
00:44:06,720 --> 00:44:08,960
vector

1025
00:44:08,960 --> 00:44:11,760
how do you select the threshold

1026
00:44:11,760 --> 00:44:13,599
to say that

1027
00:44:13,599 --> 00:44:16,079
there was an anomaly

1028
00:44:16,079 --> 00:44:18,319
this threshold

1029
00:44:18,319 --> 00:44:21,280
set upon the threshold of the error of

1030
00:44:21,280 --> 00:44:24,640
the normal traffic and just 1.5 measured

1031
00:44:24,640 --> 00:44:25,920
by the

1032
00:44:25,920 --> 00:44:27,599
quartile distance

1033
00:44:27,599 --> 00:44:30,079
that's how you select uh the threshold

1034
00:44:30,079 --> 00:44:32,480
thank you

1035
00:44:41,359 --> 00:44:44,000
the question about transformers

1036
00:44:44,000 --> 00:44:45,920
wouldn't that take too long and do we

1037
00:44:45,920 --> 00:44:48,560
spend too much on infrastructure and

1038
00:44:48,560 --> 00:44:51,359
when i was looking at this chart

1039
00:44:51,359 --> 00:44:54,000
seems like what would be the real case

1040
00:44:54,000 --> 00:44:54,960
uh

1041
00:44:54,960 --> 00:44:59,440
weekends i i guess it's weekends

1042
00:45:01,440 --> 00:45:03,119
did you take into account

1043
00:45:03,119 --> 00:45:06,079
weekends when no one goes to the office

1044
00:45:06,079 --> 00:45:08,079
and then all of a sudden

1045
00:45:08,079 --> 00:45:10,640
problems start or maybe it's the night

1046
00:45:10,640 --> 00:45:12,880
time so i think the time

1047
00:45:12,880 --> 00:45:15,920
frame should also be taken into account

1048
00:45:15,920 --> 00:45:17,760
and there may also be a question about

1049
00:45:17,760 --> 00:45:19,440
the size of the batch why did you

1050
00:45:19,440 --> 00:45:21,839
decided to go batching

1051
00:45:21,839 --> 00:45:23,920
and

1052
00:45:23,920 --> 00:45:26,480
maybe you could have

1053
00:45:26,480 --> 00:45:27,920
skipped

1054
00:45:27,920 --> 00:45:31,359
a sparse attack which you mentioned

1055
00:45:31,359 --> 00:45:33,599
they would be sending

1056
00:45:33,599 --> 00:45:34,400
one

1057
00:45:34,400 --> 00:45:36,960
request into a batch

1058
00:45:36,960 --> 00:45:37,920
and

1059
00:45:37,920 --> 00:45:41,119
act sparsely

1060
00:45:41,680 --> 00:45:44,160
speaking in terms of the weekends and

1061
00:45:44,160 --> 00:45:47,160
weekdays

1062
00:45:47,359 --> 00:45:49,359
but normally this

1063
00:45:49,359 --> 00:45:50,640
window time

1064
00:45:50,640 --> 00:45:53,520
it's 5-10 minutes but the sets of data

1065
00:45:53,520 --> 00:45:56,000
like that

1066
00:45:57,440 --> 00:46:01,280
are very rare and we cannot actually

1067
00:46:01,280 --> 00:46:03,920
check this model for such

1068
00:46:03,920 --> 00:46:06,000
days that you mentioned but in the

1069
00:46:06,000 --> 00:46:07,520
production run

1070
00:46:07,520 --> 00:46:10,319
in the production phase rather

1071
00:46:10,319 --> 00:46:12,960
it makes sense to do because

1072
00:46:12,960 --> 00:46:16,319
abnormal behavior may be different on

1073
00:46:16,319 --> 00:46:19,119
certain days

1074
00:46:20,319 --> 00:46:22,000
and what about the sparse attack i was

1075
00:46:22,000 --> 00:46:24,160
asking about this parse attack what what

1076
00:46:24,160 --> 00:46:26,960
was the size of the batch and

1077
00:46:26,960 --> 00:46:28,720
what about

1078
00:46:28,720 --> 00:46:31,359
having the risk of

1079
00:46:31,359 --> 00:46:32,880
using

1080
00:46:32,880 --> 00:46:36,319
this mean average

1081
00:46:36,319 --> 00:46:38,480
in actual fact this batch should be

1082
00:46:38,480 --> 00:46:40,400
selected

1083
00:46:40,400 --> 00:46:43,119
in the time frame for five minutes of

1084
00:46:43,119 --> 00:46:46,800
the network traffic for instance

1085
00:46:46,960 --> 00:46:50,160
so if this is a sparse attack

1086
00:46:50,160 --> 00:46:53,839
there would be a problem finding it

1087
00:46:54,240 --> 00:46:55,599
but i don't actually understand the

1088
00:46:55,599 --> 00:46:57,680
point of your question of course when we

1089
00:46:57,680 --> 00:47:01,520
select the time frame that the window

1090
00:47:01,520 --> 00:47:03,760
the time window if it's a sparse attack

1091
00:47:03,760 --> 00:47:05,599
we may have some problems but if it's a

1092
00:47:05,599 --> 00:47:07,359
dense attack we don't have any problems

1093
00:47:07,359 --> 00:47:10,520
at all

1094
00:47:11,599 --> 00:47:12,880
and another question from the floor

1095
00:47:12,880 --> 00:47:15,599
which we didn't hear

1096
00:47:16,800 --> 00:47:19,599
we can work on this traffic

1097
00:47:19,599 --> 00:47:22,640
you you can detect this attack um

1098
00:47:22,640 --> 00:47:25,440
by

1099
00:47:25,440 --> 00:47:29,040
it exceeded its threshold

1100
00:47:29,040 --> 00:47:31,520
or you may alternatively use some

1101
00:47:31,520 --> 00:47:32,720
network

1102
00:47:32,720 --> 00:47:33,680
traffic

1103
00:47:33,680 --> 00:47:36,720
filtration if you like

1104
00:47:36,720 --> 00:47:39,839
yes please

1105
00:47:41,760 --> 00:47:43,359
i'm not just the kosaki and i would like

1106
00:47:43,359 --> 00:47:46,400
to clarify

1107
00:47:47,839 --> 00:47:51,359
did you take into account the payload

1108
00:47:51,359 --> 00:47:52,400
and

1109
00:47:52,400 --> 00:47:55,280
the amount of payload and package

1110
00:47:55,280 --> 00:47:58,720
or you skip that

1111
00:47:58,800 --> 00:48:01,200
i think

1112
00:48:03,440 --> 00:48:06,400
this particular set there was no such

1113
00:48:06,400 --> 00:48:07,839
thing

1114
00:48:07,839 --> 00:48:08,720
but

1115
00:48:08,720 --> 00:48:10,640
there were sets of data when we had

1116
00:48:10,640 --> 00:48:13,280
quite a lot of parameters like

1117
00:48:13,280 --> 00:48:15,359
up to 85

1118
00:48:15,359 --> 00:48:20,400
and we did have such parameters

1119
00:48:20,400 --> 00:48:21,839
so normally

1120
00:48:21,839 --> 00:48:23,599
the real sets of data that we can

1121
00:48:23,599 --> 00:48:24,960
utilize

1122
00:48:24,960 --> 00:48:27,359
they don't have the complete information

1123
00:48:27,359 --> 00:48:31,119
about network traffic

1124
00:48:32,960 --> 00:48:35,440
we operate with the files which contain

1125
00:48:35,440 --> 00:48:37,599
this information okay understand the

1126
00:48:37,599 --> 00:48:40,720
second question about

1127
00:48:40,800 --> 00:48:42,880
your model developing currently your

1128
00:48:42,880 --> 00:48:45,440
model indicates that there is a problem

1129
00:48:45,440 --> 00:48:47,200
and it indicates

1130
00:48:47,200 --> 00:48:49,200
the time space

1131
00:48:49,200 --> 00:48:52,558
when the problem is detected

1132
00:48:52,880 --> 00:48:56,480
you have one sensor to identify this

1133
00:48:56,480 --> 00:48:58,720
anomaly but in the real infrastructure

1134
00:48:58,720 --> 00:49:00,319
you just need to have a few detection

1135
00:49:00,319 --> 00:49:02,960
points to detect such anomalies

1136
00:49:02,960 --> 00:49:05,760
a few detection points

1137
00:49:05,760 --> 00:49:07,040
well

1138
00:49:07,040 --> 00:49:09,920
we conducted

1139
00:49:09,920 --> 00:49:11,440
we conducted

1140
00:49:11,440 --> 00:49:13,440
it's more about production this question

1141
00:49:13,440 --> 00:49:15,200
is more about production

1142
00:49:15,200 --> 00:49:18,319
we studied

1143
00:49:18,800 --> 00:49:22,160
the use of such models but

1144
00:49:22,160 --> 00:49:24,160
i didn't quite understand this question

1145
00:49:24,160 --> 00:49:25,680
of yours

1146
00:49:25,680 --> 00:49:28,160
your model implies that there is

1147
00:49:28,160 --> 00:49:29,200
an

1148
00:49:29,200 --> 00:49:31,680
normally but where exactly is it in the

1149
00:49:31,680 --> 00:49:33,119
network

1150
00:49:33,119 --> 00:49:33,920
well

1151
00:49:33,920 --> 00:49:34,960
that

1152
00:49:34,960 --> 00:49:38,880
there's a problem with the

1153
00:49:39,280 --> 00:49:41,520
animality and

1154
00:49:41,520 --> 00:49:44,880
it is a very general to all of the

1155
00:49:44,880 --> 00:49:46,400
anomalies but we can make a

1156
00:49:46,400 --> 00:49:47,760
reconstruction for each of the

1157
00:49:47,760 --> 00:49:50,160
parameters and based upon that

1158
00:49:50,160 --> 00:49:52,720
we can make a conclusion of what anomaly

1159
00:49:52,720 --> 00:49:54,559
is all about sometimes it's not quite

1160
00:49:54,559 --> 00:49:56,800
right because we have quite

1161
00:49:56,800 --> 00:50:00,079
a long dependencies

1162
00:50:00,079 --> 00:50:04,079
but if we operate with synthetic data

1163
00:50:04,079 --> 00:50:05,839
for each of the parameters you could

1164
00:50:05,839 --> 00:50:07,119
track down

1165
00:50:07,119 --> 00:50:09,760
where exactly and

1166
00:50:09,760 --> 00:50:13,599
how the reconstruction works i think we

1167
00:50:13,599 --> 00:50:16,400
just need to test

1168
00:50:24,839 --> 00:50:27,040
it thank you

1169
00:50:27,040 --> 00:50:29,520
for your presentation the question is

1170
00:50:29,520 --> 00:50:30,319
uh

1171
00:50:30,319 --> 00:50:33,279
you considered

1172
00:50:33,680 --> 00:50:34,640
this

1173
00:50:34,640 --> 00:50:38,240
animally in the process of work so in

1174
00:50:38,240 --> 00:50:42,880
actual fact we launched this model when

1175
00:50:42,880 --> 00:50:45,920
the hacker is already sitting there

1176
00:50:45,920 --> 00:50:49,040
how can we detect

1177
00:50:50,400 --> 00:50:53,119
the malicious part

1178
00:50:53,119 --> 00:50:54,800
in the training

1179
00:50:54,800 --> 00:50:57,200
phase

1180
00:50:57,839 --> 00:50:59,920
well such problem does exist we don't

1181
00:50:59,920 --> 00:51:02,400
have a normal traffic so we cannot build

1182
00:51:02,400 --> 00:51:03,839
the model of

1183
00:51:03,839 --> 00:51:05,040
normal work

1184
00:51:05,040 --> 00:51:07,440
and normal performance of the network

1185
00:51:07,440 --> 00:51:10,640
but what we can do well we don't know

1186
00:51:10,640 --> 00:51:11,599
that

1187
00:51:11,599 --> 00:51:13,839
we have hackers

1188
00:51:13,839 --> 00:51:16,640
in the network

1189
00:51:16,640 --> 00:51:19,359
but if we build a normal model we will

1190
00:51:19,359 --> 00:51:21,760
not detect it but we'll detect the next

1191
00:51:21,760 --> 00:51:22,480
one

1192
00:51:22,480 --> 00:51:24,960
if it logs out

1193
00:51:24,960 --> 00:51:26,640
we will be able to

1194
00:51:26,640 --> 00:51:28,960
put our finger on that moment when they

1195
00:51:28,960 --> 00:51:30,079
log out

1196
00:51:30,079 --> 00:51:32,240
so

1197
00:51:32,400 --> 00:51:37,160
it's one of the options i'd say yes

1198
00:51:45,839 --> 00:51:48,319
i really wanted to reply

1199
00:51:48,319 --> 00:51:50,319
to the previous uh

1200
00:51:50,319 --> 00:51:53,440
question we are working on this

1201
00:51:53,440 --> 00:51:55,280
detection of the threshold and we can

1202
00:51:55,280 --> 00:51:58,800
see some splashes if the hacker was just

1203
00:51:58,800 --> 00:52:01,359
doing something in the attack while we

1204
00:52:01,359 --> 00:52:03,520
were gathering normal traffic making a

1205
00:52:03,520 --> 00:52:06,240
mobile model we can see some splashes

1206
00:52:06,240 --> 00:52:08,720
and we identify this threshold not by

1207
00:52:08,720 --> 00:52:11,520
splash but with a normal

1208
00:52:11,520 --> 00:52:12,720
traffic

1209
00:52:12,720 --> 00:52:15,280
then this threshold will be lowered and

1210
00:52:15,280 --> 00:52:17,520
we'll be working with this poisoned

1211
00:52:17,520 --> 00:52:19,520
uh traffic and will be able to track

1212
00:52:19,520 --> 00:52:21,599
this anomaly

1213
00:52:21,599 --> 00:52:24,240
yes basically this approach can work it

1214
00:52:24,240 --> 00:52:26,880
can work and such anomalies and network

1215
00:52:26,880 --> 00:52:27,839
traffic

1216
00:52:27,839 --> 00:52:29,920
there'll be fewer

1217
00:52:29,920 --> 00:52:31,599
but we can assume

1218
00:52:31,599 --> 00:52:33,440
that half of the traffic

1219
00:52:33,440 --> 00:52:36,000
may be abnormal so i think that was the

1220
00:52:36,000 --> 00:52:39,040
question but this is a very hypothetical

1221
00:52:39,040 --> 00:52:42,839
scenario i think

1222
00:53:04,880 --> 00:53:06,240
thanks everyone

1223
00:53:06,240 --> 00:53:08,319
for your questions thank you for the

1224
00:53:08,319 --> 00:53:09,300
presentation

1225
00:53:09,300 --> 00:53:12,400
[Music]

1226
00:53:12,400 --> 00:53:15,839
what what was the

1227
00:53:16,480 --> 00:53:18,000
questions that you liked the most i

1228
00:53:18,000 --> 00:53:20,240
think actually the very first question i

1229
00:53:20,240 --> 00:53:22,400
don't remember who it was from it was a

1230
00:53:22,400 --> 00:53:25,440
very very comprehensive one

1231
00:53:25,440 --> 00:53:27,520
which one would you choose let's take

1232
00:53:27,520 --> 00:53:29,680
the white one

1233
00:53:29,680 --> 00:53:32,480
and another complex question from that

1234
00:53:32,480 --> 00:53:35,359
man in grey

1235
00:53:35,359 --> 00:53:38,319
from the third row

1236
00:53:40,240 --> 00:53:41,599
that's where you should have used the

1237
00:53:41,599 --> 00:53:44,079
white one

1238
00:53:44,079 --> 00:53:45,920
and your question was quite interesting

1239
00:53:45,920 --> 00:53:48,240
about

1240
00:53:49,359 --> 00:53:51,599
the specific features and this set of

1241
00:53:51,599 --> 00:53:52,559
data

1242
00:53:52,559 --> 00:53:54,559
yes thank you very much

1243
00:53:54,559 --> 00:53:57,800
thank you

1244
00:54:02,000 --> 00:54:03,200
there will be

1245
00:54:03,200 --> 00:54:04,960
a one hour

1246
00:54:04,960 --> 00:54:06,559
break for

1247
00:54:06,559 --> 00:54:09,599
here back at 3 p.m

1248
00:54:09,599 --> 00:54:11,280
we will have

1249
00:54:11,280 --> 00:54:14,559
reports about the big data safety and

1250
00:54:14,559 --> 00:54:18,480
security guns and biometric

1251
00:54:18,480 --> 00:54:21,970
security so please join us back here

1252
00:54:21,970 --> 00:54:22,440
[Music]

1253
00:54:22,440 --> 00:54:24,940
[Applause]

