1
00:00:09,200 --> 00:00:10,960
and today

2
00:00:10,960 --> 00:00:12,799
we are having the finals

3
00:00:12,799 --> 00:00:15,679
of the open source projects of school

4
00:00:15,679 --> 00:00:19,439
children and students which was held by

5
00:00:19,439 --> 00:00:22,400
a community with the supports of various

6
00:00:22,400 --> 00:00:24,080
companies

7
00:00:24,080 --> 00:00:28,479
this contest lets the young

8
00:00:28,800 --> 00:00:29,599
show

9
00:00:29,599 --> 00:00:30,880
what they have

10
00:00:30,880 --> 00:00:31,920
developed

11
00:00:31,920 --> 00:00:33,440
and

12
00:00:33,440 --> 00:00:36,559
participate in the open source

13
00:00:36,559 --> 00:00:39,199
community

14
00:00:40,719 --> 00:00:43,280
positive technologies

15
00:00:43,280 --> 00:00:45,680
has joined forces with us to arrange the

16
00:00:45,680 --> 00:00:47,440
cyber security track

17
00:00:47,440 --> 00:00:49,200
the idea behind it was that school

18
00:00:49,200 --> 00:00:51,520
children and students can present their

19
00:00:51,520 --> 00:00:52,559
products

20
00:00:52,559 --> 00:00:54,079
and

21
00:00:54,079 --> 00:00:58,160
try to increase the level of security of

22
00:00:58,160 --> 00:01:00,399
open projects by

23
00:01:00,399 --> 00:01:03,039
looking for vulnerabilities fixing them

24
00:01:03,039 --> 00:01:05,040
and improve them overall well this

25
00:01:05,040 --> 00:01:07,280
hasn't happened so that's our first

26
00:01:07,280 --> 00:01:08,799
attempt

27
00:01:08,799 --> 00:01:11,040
on the other hand more than 20

28
00:01:11,040 --> 00:01:14,080
interesting projects have been filed

29
00:01:14,080 --> 00:01:17,040
and the jury has picked

30
00:01:17,040 --> 00:01:19,280
five

31
00:01:19,280 --> 00:01:22,240
most interesting ones

32
00:01:22,960 --> 00:01:25,040
today unfortunately we don't have all

33
00:01:25,040 --> 00:01:27,520
the participants and we didn't quite

34
00:01:27,520 --> 00:01:29,200
manage with the online part of the

35
00:01:29,200 --> 00:01:30,400
presentation

36
00:01:30,400 --> 00:01:33,360
nevertheless uh today

37
00:01:33,360 --> 00:01:34,720
we'll hear

38
00:01:34,720 --> 00:01:37,040
about three projects the headsplit

39
00:01:37,040 --> 00:01:40,799
project this is the modular platform to

40
00:01:40,799 --> 00:01:42,159
the pen test

41
00:01:42,159 --> 00:01:43,759
so you can

42
00:01:43,759 --> 00:01:45,520
code exploits and

43
00:01:45,520 --> 00:01:48,880
use them we also have utility to restore

44
00:01:48,880 --> 00:01:51,840
information from rtti and this is to

45
00:01:51,840 --> 00:01:54,399
help in reverse development of

46
00:01:54,399 --> 00:01:56,159
software

47
00:01:56,159 --> 00:01:59,200
and we also have a utility to simplify

48
00:01:59,200 --> 00:02:01,759
the life of the security

49
00:02:01,759 --> 00:02:03,600
experts and penetration

50
00:02:03,600 --> 00:02:04,640
experts

51
00:02:04,640 --> 00:02:07,840
a telegram bought to identify

52
00:02:07,840 --> 00:02:09,119
deep fakes

53
00:02:09,119 --> 00:02:11,840
and crypt exploiter console piece of

54
00:02:11,840 --> 00:02:12,959
software

55
00:02:12,959 --> 00:02:17,040
based on modular programming

56
00:02:17,120 --> 00:02:20,800
this is for cryptography

57
00:02:20,879 --> 00:02:22,800
okay the format

58
00:02:22,800 --> 00:02:25,360
our participants will have a pitch

59
00:02:25,360 --> 00:02:27,200
session the jury and all the

60
00:02:27,200 --> 00:02:29,760
participants will ask questions

61
00:02:29,760 --> 00:02:31,760
and then the jury

62
00:02:31,760 --> 00:02:32,640
will

63
00:02:32,640 --> 00:02:35,280
kind of provide their

64
00:02:35,280 --> 00:02:38,239
final verdict i will have the

65
00:02:38,239 --> 00:02:39,760
great

66
00:02:39,760 --> 00:02:41,200
prices

67
00:02:41,200 --> 00:02:42,959
as a result

68
00:02:42,959 --> 00:02:45,360
okay let's start with you

69
00:02:45,360 --> 00:02:48,319
so i believe that you have crypt exploit

70
00:02:48,319 --> 00:02:51,640
that's great

71
00:03:02,720 --> 00:03:03,680
hello

72
00:03:03,680 --> 00:03:06,319
my name is andrei rashtev and my

73
00:03:06,319 --> 00:03:09,280
colleague is alexander kanavalov

74
00:03:09,280 --> 00:03:11,040
and today we'll share with you an open

75
00:03:11,040 --> 00:03:13,680
source tool for cryptography tasks

76
00:03:13,680 --> 00:03:17,319
called cryptexploit

77
00:03:21,440 --> 00:03:23,120
some background

78
00:03:23,120 --> 00:03:26,560
we are part of the school city of games

79
00:03:26,560 --> 00:03:28,480
and today we run into cryptography

80
00:03:28,480 --> 00:03:29,599
problems

81
00:03:29,599 --> 00:03:32,319
to solve them we need to use a lot of

82
00:03:32,319 --> 00:03:34,560
error scripts algorithms and

83
00:03:34,560 --> 00:03:36,959
tools

84
00:03:37,760 --> 00:03:40,560
so we have accumulated them and decided

85
00:03:40,560 --> 00:03:41,280
to

86
00:03:41,280 --> 00:03:46,120
arrange them to speed up

87
00:03:51,680 --> 00:03:54,720
and that's why we decided to code some

88
00:03:54,720 --> 00:03:56,879
software which would increase everything

89
00:03:56,879 --> 00:04:00,159
from our own handmade scripts to the

90
00:04:00,159 --> 00:04:03,599
well spread solutions

91
00:04:04,720 --> 00:04:07,280
when we have showcased our project we

92
00:04:07,280 --> 00:04:09,200
have heard many questions so we'll

93
00:04:09,200 --> 00:04:11,200
answer them now what do you need to know

94
00:04:11,200 --> 00:04:13,599
to use crypto exploit you should have

95
00:04:13,599 --> 00:04:16,399
some basic knowledge of cryptography

96
00:04:16,399 --> 00:04:19,440
and some general understanding of the

97
00:04:19,440 --> 00:04:20,880
software use

98
00:04:20,880 --> 00:04:22,479
so who needs it

99
00:04:22,479 --> 00:04:25,919
the project can help

100
00:04:25,919 --> 00:04:29,440
any user and developers in testing the

101
00:04:29,440 --> 00:04:31,840
services and edit five vulnerabilities

102
00:04:31,840 --> 00:04:34,719
how does it work

103
00:04:38,240 --> 00:04:40,160
well capital site is an open source

104
00:04:40,160 --> 00:04:41,360
project

105
00:04:41,360 --> 00:04:42,880
based on module

106
00:04:42,880 --> 00:04:44,320
coding

107
00:04:44,320 --> 00:04:49,520
so any user can expand it easily

108
00:04:49,520 --> 00:04:51,759
we have used python as the

109
00:04:51,759 --> 00:04:52,720
key

110
00:04:52,720 --> 00:04:55,199
coding language it's well spread and

111
00:04:55,199 --> 00:04:57,360
quite easy to

112
00:04:57,360 --> 00:04:58,720
learn

113
00:04:58,720 --> 00:05:01,199
and we have

114
00:05:01,199 --> 00:05:02,880
also supported other programming

115
00:05:02,880 --> 00:05:04,400
languages for the functions of the

116
00:05:04,400 --> 00:05:06,320
modules

117
00:05:06,320 --> 00:05:08,840
to standardize the models we have

118
00:05:08,840 --> 00:05:11,600
developed two

119
00:05:11,600 --> 00:05:14,479
templates for python and for

120
00:05:14,479 --> 00:05:15,440
other

121
00:05:15,440 --> 00:05:18,400
programming languages

122
00:05:19,120 --> 00:05:20,560
now

123
00:05:20,560 --> 00:05:22,880
there are several cryptographic modules

124
00:05:22,880 --> 00:05:25,600
connected to our project like root

125
00:05:25,600 --> 00:05:28,240
encryption restrict tool and

126
00:05:28,240 --> 00:05:29,759
others

127
00:05:29,759 --> 00:05:30,960
we believe that the project can be

128
00:05:30,960 --> 00:05:32,720
further developed

129
00:05:32,720 --> 00:05:35,360
by improving the api and adding new

130
00:05:35,360 --> 00:05:37,520
modules

131
00:05:37,520 --> 00:05:39,199
we are open

132
00:05:39,199 --> 00:05:41,600
to hear your ideas and we'll thank

133
00:05:41,600 --> 00:05:42,639
everyone

134
00:05:42,639 --> 00:05:46,160
to join the project

135
00:05:46,960 --> 00:05:48,080
i'd like to

136
00:05:48,080 --> 00:05:50,320
thank

137
00:05:50,960 --> 00:05:53,360
you for giving us an opportunity to

138
00:05:53,360 --> 00:05:54,639
speak here thank you very much for your

139
00:05:54,639 --> 00:05:56,560
attention and now we are ready to take

140
00:05:56,560 --> 00:05:59,800
your questions

141
00:06:23,440 --> 00:06:25,840
these are the next steps to add this

142
00:06:25,840 --> 00:06:27,440
functionality now you can use these

143
00:06:27,440 --> 00:06:30,080
modules one by one

144
00:06:30,080 --> 00:06:32,639
but now we have all the shell commands

145
00:06:32,639 --> 00:06:35,840
which work in the pipes

146
00:07:00,240 --> 00:07:04,080
is a manager to use various cryptography

147
00:07:04,080 --> 00:07:07,080
tools

148
00:07:16,080 --> 00:07:20,120
the question is of the mike

149
00:07:26,790 --> 00:07:30,080
[Music]

150
00:07:30,080 --> 00:07:32,080
okay we can take hash cap

151
00:07:32,080 --> 00:07:33,599
so when we

152
00:07:33,599 --> 00:07:34,960
want to

153
00:07:34,960 --> 00:07:36,319
pick a hash

154
00:07:36,319 --> 00:07:38,720
we should know the type of hash

155
00:07:38,720 --> 00:07:41,360
and we should remember all the flags of

156
00:07:41,360 --> 00:07:43,759
hashgraph

157
00:07:45,520 --> 00:07:47,919
this problem will be solved instead of

158
00:07:47,919 --> 00:07:48,639
you

159
00:07:48,639 --> 00:07:50,160
so you

160
00:07:50,160 --> 00:07:53,599
use as the input the word list for brood

161
00:07:53,599 --> 00:07:54,879
and the hash

162
00:07:54,879 --> 00:07:57,039
that will determine the type of the hash

163
00:07:57,039 --> 00:08:00,240
and will fix all the flags for you so

164
00:08:00,240 --> 00:08:02,960
this is to simplify

165
00:08:02,960 --> 00:08:06,318
the use of all tools

166
00:08:09,840 --> 00:08:12,639
in this module we use the open source

167
00:08:12,639 --> 00:08:15,120
library on hash it is a very good

168
00:08:15,120 --> 00:08:18,120
library

169
00:08:29,440 --> 00:08:32,440
so

170
00:08:52,800 --> 00:08:55,040
hello everyone my name is yvonne

171
00:08:55,040 --> 00:08:56,560
nikolsky

172
00:08:56,560 --> 00:08:57,600
and now

173
00:08:57,600 --> 00:08:59,040
i'm

174
00:08:59,040 --> 00:09:03,640
sharing my headsploit framework

175
00:09:26,480 --> 00:09:30,440
what's a mess with the presentation

176
00:09:45,839 --> 00:09:50,040
why i started developing it

177
00:09:50,640 --> 00:09:52,880
some background

178
00:09:52,880 --> 00:09:55,760
what makes me think that my product

179
00:09:55,760 --> 00:09:58,480
should be used instead of metasploit

180
00:09:58,480 --> 00:10:01,760
and why i decided developing it to

181
00:10:01,760 --> 00:10:04,959
replace this popular framework

182
00:10:04,959 --> 00:10:06,320
well i believe

183
00:10:06,320 --> 00:10:08,079
metasploit

184
00:10:08,079 --> 00:10:08,880
is

185
00:10:08,880 --> 00:10:10,800
hard to understand

186
00:10:10,800 --> 00:10:11,760
and

187
00:10:11,760 --> 00:10:13,120
it's

188
00:10:13,120 --> 00:10:15,360
missing a lot of documents when i tried

189
00:10:15,360 --> 00:10:18,240
to code a module i went to the rx

190
00:10:18,240 --> 00:10:22,000
repository so the key api and i didn't

191
00:10:22,000 --> 00:10:24,240
find there any documents or some of the

192
00:10:24,240 --> 00:10:27,760
functions i needed

193
00:10:27,920 --> 00:10:30,399
and if

194
00:10:30,399 --> 00:10:33,519
you go to the wiki or the metasploit

195
00:10:33,519 --> 00:10:34,720
website

196
00:10:34,720 --> 00:10:37,279
you can find there a lot of

197
00:10:37,279 --> 00:10:39,279
difficult terminology which will be how

198
00:10:39,279 --> 00:10:40,160
to

199
00:10:40,160 --> 00:10:43,279
crack for a young pen tester

200
00:10:43,279 --> 00:10:44,399
that's why

201
00:10:44,399 --> 00:10:45,360
they

202
00:10:45,360 --> 00:10:47,040
well like students who just start doing

203
00:10:47,040 --> 00:10:48,480
it they cannot

204
00:10:48,480 --> 00:10:50,720
code

205
00:10:50,720 --> 00:10:53,760
models for exploitation the api

206
00:10:53,760 --> 00:10:56,560
is uh quite entangled

207
00:10:56,560 --> 00:10:58,640
and difficult to get through this is an

208
00:10:58,640 --> 00:11:01,200
issue of those metasploits as other

209
00:11:01,200 --> 00:11:02,480
frameworks

210
00:11:02,480 --> 00:11:05,120
well when i have a lot of functions

211
00:11:05,120 --> 00:11:07,200
bolted on each other and you have

212
00:11:07,200 --> 00:11:08,800
different configurations split by the

213
00:11:08,800 --> 00:11:11,200
functions the story isn't that good

214
00:11:11,200 --> 00:11:12,640
because

215
00:11:12,640 --> 00:11:15,360
you should bring the functions for

216
00:11:15,360 --> 00:11:17,279
payloads into the class pillows and not

217
00:11:17,279 --> 00:11:18,720
to any other class

218
00:11:18,720 --> 00:11:21,040
another issue is that the developers of

219
00:11:21,040 --> 00:11:23,360
this framework

220
00:11:23,360 --> 00:11:26,160
have implemented uh some on the same

221
00:11:26,160 --> 00:11:29,839
function several times in

222
00:11:29,839 --> 00:11:31,839
several classes and this is not right

223
00:11:31,839 --> 00:11:34,399
you should use one implementation

224
00:11:34,399 --> 00:11:36,640
several times for clearer api and there

225
00:11:36,640 --> 00:11:39,040
are many sub settings in the modules

226
00:11:39,040 --> 00:11:40,839
which you don't need

227
00:11:40,839 --> 00:11:42,560
they

228
00:11:42,560 --> 00:11:44,800
make the code difficult to understand

229
00:11:44,800 --> 00:11:46,959
and uh

230
00:11:46,959 --> 00:11:48,959
for instance my framework will determine

231
00:11:48,959 --> 00:11:50,480
on its own which option should be

232
00:11:50,480 --> 00:11:53,440
configured based on the target system

233
00:11:53,440 --> 00:11:54,880
it does it

234
00:11:54,880 --> 00:11:57,440
without any serious problems so far

235
00:11:57,440 --> 00:11:58,240
it

236
00:11:58,240 --> 00:12:00,320
considers all the finest details there

237
00:12:00,320 --> 00:12:02,560
are also old ways there and to send the

238
00:12:02,560 --> 00:12:05,040
pedals so when i try to use metasploit

239
00:12:05,040 --> 00:12:08,000
to exploit one vulnerability the payload

240
00:12:08,000 --> 00:12:08,880
sending

241
00:12:08,880 --> 00:12:10,880
module

242
00:12:10,880 --> 00:12:13,279
mixed up the byte which made the payload

243
00:12:13,279 --> 00:12:15,120
impossible to run

244
00:12:15,120 --> 00:12:16,959
frankly i was

245
00:12:16,959 --> 00:12:19,040
pissed off that's why i decided to set

246
00:12:19,040 --> 00:12:21,040
my own method to send their payload

247
00:12:21,040 --> 00:12:22,720
method which is universe of all the

248
00:12:22,720 --> 00:12:26,240
unix-like systems as well as windows

249
00:12:26,240 --> 00:12:28,240
the programming language

250
00:12:28,240 --> 00:12:31,440
well initially meta exploit was uh coded

251
00:12:31,440 --> 00:12:34,240
on pearl and then it was recorded using

252
00:12:34,240 --> 00:12:37,200
rap rabbi and i believe robbie is not as

253
00:12:37,200 --> 00:12:40,480
popular as my language python

254
00:12:40,480 --> 00:12:42,720
well okay raise your hands if you have

255
00:12:42,720 --> 00:12:46,399
coded professionally using uh robin

256
00:12:46,399 --> 00:12:48,959
and python

257
00:12:49,440 --> 00:12:52,240
okay the majority i would say yeah

258
00:12:52,240 --> 00:12:54,560
indeed

259
00:12:56,480 --> 00:12:57,680
and now

260
00:12:57,680 --> 00:12:58,720
let's

261
00:12:58,720 --> 00:13:00,639
compare the popularity

262
00:13:00,639 --> 00:13:03,360
of these languages taken from various

263
00:13:03,360 --> 00:13:06,160
sites okay this is the robbie popularity

264
00:13:06,160 --> 00:13:09,600
and the python popularity

265
00:13:09,760 --> 00:13:13,200
okay in red you can see python

266
00:13:13,200 --> 00:13:13,920
and

267
00:13:13,920 --> 00:13:16,000
ruby is

268
00:13:16,000 --> 00:13:16,800
dark

269
00:13:16,800 --> 00:13:18,839
green so you can see the

270
00:13:18,839 --> 00:13:22,800
difference okay why exploit

271
00:13:22,800 --> 00:13:25,519
okay the code is straightforward

272
00:13:25,519 --> 00:13:27,200
api

273
00:13:27,200 --> 00:13:28,480
metasploit

274
00:13:28,480 --> 00:13:30,320
is

275
00:13:30,320 --> 00:13:34,560
quite entangled so the idea was

276
00:13:34,560 --> 00:13:38,079
to disintegrate so i start with my api

277
00:13:38,079 --> 00:13:40,560
on python from scratch and the idea was

278
00:13:40,560 --> 00:13:43,439
to make it clear

279
00:13:43,760 --> 00:13:46,320
high speed

280
00:13:46,320 --> 00:13:48,240
rational implementation of functions and

281
00:13:48,240 --> 00:13:50,160
algorithms sped up

282
00:13:50,160 --> 00:13:53,199
their framework which sped up the module

283
00:13:53,199 --> 00:13:55,920
launch generation of payloads their

284
00:13:55,920 --> 00:13:57,600
encryption and

285
00:13:57,600 --> 00:13:58,639
sending

286
00:13:58,639 --> 00:13:59,839
automation

287
00:13:59,839 --> 00:14:01,519
all the sub settings are configured in

288
00:14:01,519 --> 00:14:04,240
an automated way inside the headsplit

289
00:14:04,240 --> 00:14:05,279
base

290
00:14:05,279 --> 00:14:08,079
which makes

291
00:14:09,279 --> 00:14:11,920
okay which helps you save the time

292
00:14:11,920 --> 00:14:13,920
in terms of configuration the web

293
00:14:13,920 --> 00:14:15,680
interface okay terminal is cool but when

294
00:14:15,680 --> 00:14:18,240
you can see the picture it's even better

295
00:14:18,240 --> 00:14:20,399
that's why i decided to

296
00:14:20,399 --> 00:14:23,760
code the interface from scratch which

297
00:14:23,760 --> 00:14:28,720
has made has ployed much more beautiful

298
00:14:28,720 --> 00:14:31,600
and easier to understand just a few

299
00:14:31,600 --> 00:14:33,199
clicks and you are there

300
00:14:33,199 --> 00:14:35,680
documentation now i'm documenting all

301
00:14:35,680 --> 00:14:39,440
the function pretty thoroughly i code

302
00:14:39,440 --> 00:14:42,240
templates for modules payloads and

303
00:14:42,240 --> 00:14:44,399
plugins and i comment on all the

304
00:14:44,399 --> 00:14:45,680
steps and

305
00:14:45,680 --> 00:14:48,480
the beginners will have an easy time

306
00:14:48,480 --> 00:14:49,680
trying to

307
00:14:49,680 --> 00:14:52,720
use it to code exploits for

308
00:14:52,720 --> 00:14:53,839
the

309
00:14:53,839 --> 00:14:55,440
contest and so on

310
00:14:55,440 --> 00:14:57,199
various interfaces

311
00:14:57,199 --> 00:14:58,639
so the text

312
00:14:58,639 --> 00:15:01,360
version and the graphical version

313
00:15:01,360 --> 00:15:03,839
the text interface is ready it has all

314
00:15:03,839 --> 00:15:05,440
the functions and the

315
00:15:05,440 --> 00:15:07,279
graphical one is being

316
00:15:07,279 --> 00:15:11,279
developed the goals of the project

317
00:15:11,360 --> 00:15:13,440
here they are number one is training to

318
00:15:13,440 --> 00:15:16,720
help the beginners

319
00:15:17,040 --> 00:15:19,199
coach their own exploits

320
00:15:19,199 --> 00:15:20,720
in a convenient

321
00:15:20,720 --> 00:15:22,000
environment

322
00:15:22,000 --> 00:15:23,760
which is easy to understand high

323
00:15:23,760 --> 00:15:25,519
performance

324
00:15:25,519 --> 00:15:28,240
high speed of modules and a powerful

325
00:15:28,240 --> 00:15:29,759
arsenal

326
00:15:29,759 --> 00:15:31,199
now i'm

327
00:15:31,199 --> 00:15:32,639
coding

328
00:15:32,639 --> 00:15:34,000
models for various platforms

329
00:15:34,000 --> 00:15:37,360
vulnerabilities cves and i'm expanding

330
00:15:37,360 --> 00:15:40,160
the scope of all the modules here you

331
00:15:40,160 --> 00:15:43,680
can see the basic functionality

332
00:15:44,959 --> 00:15:47,119
here

333
00:15:48,639 --> 00:15:51,040
looking for the models exploiting the

334
00:15:51,040 --> 00:15:54,399
vulnerabilities in the nostromo web app

335
00:15:54,399 --> 00:15:55,440
then we

336
00:15:55,440 --> 00:15:56,880
select by

337
00:15:56,880 --> 00:15:58,320
id

338
00:15:58,320 --> 00:16:00,000
look for the options to be changed then

339
00:16:00,000 --> 00:16:02,639
the host and port are set

340
00:16:02,639 --> 00:16:05,440
then we determine the

341
00:16:05,440 --> 00:16:07,360
payloads which are available then we

342
00:16:07,360 --> 00:16:09,199
install the payload then we look at the

343
00:16:09,199 --> 00:16:10,639
encoders

344
00:16:10,639 --> 00:16:13,759
to work around the firewall or filtering

345
00:16:13,759 --> 00:16:15,839
so when we install it

346
00:16:15,839 --> 00:16:18,160
this time it's a score

347
00:16:18,160 --> 00:16:21,279
for the x64 platform and then we send

348
00:16:21,279 --> 00:16:22,880
the payload

349
00:16:22,880 --> 00:16:25,600
to the server through this vulnerability

350
00:16:25,600 --> 00:16:28,000
then the session opens and here you can

351
00:16:28,000 --> 00:16:29,519
see the shell

352
00:16:29,519 --> 00:16:32,720
so if you go out of it this session will

353
00:16:32,720 --> 00:16:34,399
be

354
00:16:34,399 --> 00:16:36,399
saved so you can

355
00:16:36,399 --> 00:16:38,800
reload it and you can download the file

356
00:16:38,800 --> 00:16:39,920
and so on

357
00:16:39,920 --> 00:16:42,560
so i have all the functions thank you

358
00:16:42,560 --> 00:16:43,680
very much

359
00:16:43,680 --> 00:16:46,920
any questions

360
00:16:54,160 --> 00:16:56,160
thank you for your pitch

361
00:16:56,160 --> 00:16:58,959
well you said that meta exploit gives

362
00:16:58,959 --> 00:17:01,120
you a lot of unnecessary

363
00:17:01,120 --> 00:17:02,959
settings what kind of settings are you

364
00:17:02,959 --> 00:17:04,640
talking about here

365
00:17:04,640 --> 00:17:06,319
if it is all

366
00:17:06,319 --> 00:17:10,559
default set now we just set the target

367
00:17:10,559 --> 00:17:12,640
and uh okay you're talking about the

368
00:17:12,640 --> 00:17:14,880
target in the module

369
00:17:14,880 --> 00:17:16,839
well i'm talking

370
00:17:16,839 --> 00:17:20,240
about your comment that there are some

371
00:17:20,240 --> 00:17:22,559
unnecessary settings a metasploit

372
00:17:22,559 --> 00:17:24,880
in the model configurations

373
00:17:24,880 --> 00:17:27,039
okay what kind of creation

374
00:17:27,039 --> 00:17:28,960
configurations are talking about

375
00:17:28,960 --> 00:17:31,679
okay in the meta exploit module you can

376
00:17:31,679 --> 00:17:32,480
set

377
00:17:32,480 --> 00:17:34,720
the platform the modular targeting i can

378
00:17:34,720 --> 00:17:36,960
exploit our platform say linux

379
00:17:36,960 --> 00:17:38,720
and then for some reason

380
00:17:38,720 --> 00:17:40,720
you need to pick the targets i don't

381
00:17:40,720 --> 00:17:42,559
know why you need it

382
00:17:42,559 --> 00:17:45,039
as a matter of fact the framework can

383
00:17:45,039 --> 00:17:47,520
pick the payload it needs or the

384
00:17:47,520 --> 00:17:50,960
exploitation vector so you will not have

385
00:17:50,960 --> 00:17:53,039
to identify

386
00:17:53,039 --> 00:17:54,880
each of them

387
00:17:54,880 --> 00:17:57,039
i don't think it's necessary

388
00:17:57,039 --> 00:17:59,679
okay i coded this model

389
00:17:59,679 --> 00:18:00,400
to

390
00:18:00,400 --> 00:18:02,000
exploit vulnerability

391
00:18:02,000 --> 00:18:05,520
in the apple ios ios 10 when you click

392
00:18:05,520 --> 00:18:08,400
the link and you know in the webcat bug

393
00:18:08,400 --> 00:18:09,840
will reboot

394
00:18:09,840 --> 00:18:10,880
your

395
00:18:10,880 --> 00:18:12,720
device it's already implemented i looked

396
00:18:12,720 --> 00:18:14,640
at the model structure there we have the

397
00:18:14,640 --> 00:18:17,360
platform applies and then

398
00:18:17,360 --> 00:18:18,880
we have the target

399
00:18:18,880 --> 00:18:21,039
apple s i don't know why you need it

400
00:18:21,039 --> 00:18:23,840
because uh it will just

401
00:18:23,840 --> 00:18:27,000
you know

402
00:18:29,360 --> 00:18:31,440
complicate the picture that's why i just

403
00:18:31,440 --> 00:18:33,200
have a couple of lines this is one of

404
00:18:33,200 --> 00:18:35,360
the examples well i've been

405
00:18:35,360 --> 00:18:38,959
unhappy with the number of modules

406
00:18:39,360 --> 00:18:42,520
thank you

407
00:18:51,360 --> 00:18:54,000
you mentioned the bad

408
00:18:54,000 --> 00:18:56,300
documents for metasploit

409
00:18:56,300 --> 00:18:58,320
[Music]

410
00:18:58,320 --> 00:19:00,799
well obviously

411
00:19:00,799 --> 00:19:03,039
we all know that metasploit

412
00:19:03,039 --> 00:19:04,720
stems from

413
00:19:04,720 --> 00:19:06,880
fiverr

414
00:19:06,880 --> 00:19:08,640
and this is a big project

415
00:19:08,640 --> 00:19:11,200
well people would joke that metasploit

416
00:19:11,200 --> 00:19:12,640
is one of the

417
00:19:12,640 --> 00:19:15,840
uh biggest rabbi products

418
00:19:15,840 --> 00:19:18,080
would you say

419
00:19:18,080 --> 00:19:20,080
that this can be

420
00:19:20,080 --> 00:19:20,880
this

421
00:19:20,880 --> 00:19:22,720
kind of source of the project and you'll

422
00:19:22,720 --> 00:19:24,799
face problems and your project will face

423
00:19:24,799 --> 00:19:27,520
the same problems when it grows

424
00:19:27,520 --> 00:19:29,520
the more functions the more resources

425
00:19:29,520 --> 00:19:30,720
you'll need

426
00:19:30,720 --> 00:19:32,320
and to make it readable well the

427
00:19:32,320 --> 00:19:33,679
documents will have to be maintained in

428
00:19:33,679 --> 00:19:36,000
a readable format

429
00:19:36,000 --> 00:19:38,160
and the second important thing is

430
00:19:38,160 --> 00:19:41,520
documents uh as

431
00:19:41,840 --> 00:19:43,520
benefit of the new

432
00:19:43,520 --> 00:19:46,720
framework okay this is an open source so

433
00:19:46,720 --> 00:19:47,840
you can

434
00:19:47,840 --> 00:19:49,840
cause improvement you can improve meta

435
00:19:49,840 --> 00:19:51,360
deploys documents why are you not

436
00:19:51,360 --> 00:19:53,280
improving in the documents why are you

437
00:19:53,280 --> 00:19:56,639
coding your own product here

438
00:20:00,960 --> 00:20:03,360
i'll take the last question first

439
00:20:03,360 --> 00:20:05,520
i believe that the syntaxes is much more

440
00:20:05,520 --> 00:20:07,760
difficult than the python synthesis and

441
00:20:07,760 --> 00:20:10,159
the important thing to me was to record

442
00:20:10,159 --> 00:20:12,320
metasploit to python and then i started

443
00:20:12,320 --> 00:20:13,600
thinking about

444
00:20:13,600 --> 00:20:16,400
the negatives i started

445
00:20:16,400 --> 00:20:17,440
fixing

446
00:20:17,440 --> 00:20:19,039
and as for

447
00:20:19,039 --> 00:20:20,799
the documentation so why i'm not

448
00:20:20,799 --> 00:20:22,960
improving the metasploit documentation

449
00:20:22,960 --> 00:20:26,240
well just as any other open source

450
00:20:26,240 --> 00:20:27,280
project

451
00:20:27,280 --> 00:20:30,000
well apart from the documents

452
00:20:30,000 --> 00:20:31,600
well we're talking about open source

453
00:20:31,600 --> 00:20:34,480
projects in general so this is an issue

454
00:20:34,480 --> 00:20:37,919
of many open source projects so you can

455
00:20:37,919 --> 00:20:39,520
improve open source by code and

456
00:20:39,520 --> 00:20:42,000
documentations and translations

457
00:20:42,000 --> 00:20:44,400
indeed

458
00:20:44,640 --> 00:20:46,000
well

459
00:20:46,000 --> 00:20:47,520
instead of adding documents to

460
00:20:47,520 --> 00:20:49,440
metasploit i decided

461
00:20:49,440 --> 00:20:52,400
to code a tool with a

462
00:20:52,400 --> 00:20:54,720
fixed problems

463
00:20:54,720 --> 00:20:57,039
with its own set of documents

464
00:20:57,039 --> 00:20:59,520
and the important thing as i mentioned

465
00:20:59,520 --> 00:21:00,799
the problems are big open source

466
00:21:00,799 --> 00:21:02,320
projects they're difficult to document

467
00:21:02,320 --> 00:21:03,360
indeed

468
00:21:03,360 --> 00:21:04,159
so

469
00:21:04,159 --> 00:21:05,919
when you start develop an open source

470
00:21:05,919 --> 00:21:09,280
project why not document every function

471
00:21:09,280 --> 00:21:11,280
meaning how it should be developed so

472
00:21:11,280 --> 00:21:12,240
you don't bring

473
00:21:12,240 --> 00:21:13,679
it together

474
00:21:13,679 --> 00:21:16,559
later and documented but rather you do

475
00:21:16,559 --> 00:21:18,559
it from the outset that's why i'm doing

476
00:21:18,559 --> 00:21:21,280
it that's why my documents are more

477
00:21:21,280 --> 00:21:23,200
expanded when i started implementing

478
00:21:23,200 --> 00:21:24,720
model system and the payload i

479
00:21:24,720 --> 00:21:26,720
documented everything i had an article

480
00:21:26,720 --> 00:21:28,720
on how you should code the models and

481
00:21:28,720 --> 00:21:29,520
then

482
00:21:29,520 --> 00:21:31,679
i changed this

483
00:21:31,679 --> 00:21:34,720
with fixing the box

484
00:21:35,200 --> 00:21:37,840
enthusiasm

485
00:21:37,840 --> 00:21:39,919
they think it's based on your enthusiasm

486
00:21:39,919 --> 00:21:42,080
well metasploit has been there for more

487
00:21:42,080 --> 00:21:44,720
than a dozen years has been recorded

488
00:21:44,720 --> 00:21:46,640
from one language to another

489
00:21:46,640 --> 00:21:48,480
now you are enthusiastic

490
00:21:48,480 --> 00:21:50,400
and you have answered this question that

491
00:21:50,400 --> 00:21:53,039
the reason wasn't behind the documents

492
00:21:53,039 --> 00:21:55,760
but rather

493
00:21:57,520 --> 00:21:59,679
wish to make it

494
00:21:59,679 --> 00:22:01,520
good

495
00:22:01,520 --> 00:22:03,600
in a different language so

496
00:22:03,600 --> 00:22:06,960
some time when the project is growing

497
00:22:06,960 --> 00:22:08,720
or maybe it's not growing maybe because

498
00:22:08,720 --> 00:22:10,159
you don't have

499
00:22:10,159 --> 00:22:12,400
enthusiasm or there can be some other

500
00:22:12,400 --> 00:22:14,000
issues so it will be just another

501
00:22:14,000 --> 00:22:16,000
framework well i don't think so

502
00:22:16,000 --> 00:22:18,720
metasploit started

503
00:22:18,720 --> 00:22:22,080
with the enthusiasm of the developers

504
00:22:22,080 --> 00:22:25,520
hdmi the one who started developing it

505
00:22:25,520 --> 00:22:27,280
but you know

506
00:22:27,280 --> 00:22:29,679
any tool like that can grow to become

507
00:22:29,679 --> 00:22:31,360
something bigger

508
00:22:31,360 --> 00:22:33,760
so and now if you believe that despite

509
00:22:33,760 --> 00:22:35,520
uh all

510
00:22:35,520 --> 00:22:39,200
the differences oh maybe they're not big

511
00:22:39,200 --> 00:22:41,360
well i believe that

512
00:22:41,360 --> 00:22:42,960
the framework is going to develop in a

513
00:22:42,960 --> 00:22:47,360
different direction versus metasploit

514
00:22:49,760 --> 00:22:51,760
it will not be just a poor twin of

515
00:22:51,760 --> 00:22:52,960
metasploit

516
00:22:52,960 --> 00:22:54,720
it will be like that in terms of

517
00:22:54,720 --> 00:22:56,320
interface

518
00:22:56,320 --> 00:22:58,799
but it will be completely different

519
00:22:58,799 --> 00:23:01,440
in terms of the structure of the code

520
00:23:01,440 --> 00:23:03,200
and of the exploits

521
00:23:03,200 --> 00:23:05,200
and this will not be just some

522
00:23:05,200 --> 00:23:06,960
artificial difference

523
00:23:06,960 --> 00:23:09,840
to avoid mixing them up i believe this

524
00:23:09,840 --> 00:23:12,240
will improve their functionality

525
00:23:12,240 --> 00:23:13,280
and

526
00:23:13,280 --> 00:23:15,120
will make it more convenient because the

527
00:23:15,120 --> 00:23:18,320
time is changing and metasploit will be

528
00:23:18,320 --> 00:23:19,520
history

529
00:23:19,520 --> 00:23:20,960
okay

530
00:23:20,960 --> 00:23:22,960
it might be advanced today indeed i

531
00:23:22,960 --> 00:23:25,120
believe that it is advanced

532
00:23:25,120 --> 00:23:27,360
but you know times are changing

533
00:23:27,360 --> 00:23:28,640
i will grow up

534
00:23:28,640 --> 00:23:31,039
some guys will stop using metasploit

535
00:23:31,039 --> 00:23:33,520
some people will want something new and

536
00:23:33,520 --> 00:23:35,280
that's what i'm offering do you

537
00:23:35,280 --> 00:23:36,799
understand that penis point has been

538
00:23:36,799 --> 00:23:37,840
there

539
00:23:37,840 --> 00:23:38,799
for

540
00:23:38,799 --> 00:23:40,559
well a lot of time

541
00:23:40,559 --> 00:23:42,799
considering the growth and development

542
00:23:42,799 --> 00:23:44,559
of a generation i would say i believe

543
00:23:44,559 --> 00:23:46,720
it's there for about 15 years yeah

544
00:23:46,720 --> 00:23:49,200
dozens of years indeed so it has it has

545
00:23:49,200 --> 00:23:52,000
been uh time proven you know

546
00:23:52,000 --> 00:23:54,480
i mean all these years we've had the

547
00:23:54,480 --> 00:23:56,400
community which has been developing

548
00:23:56,400 --> 00:23:58,400
around metasploit

549
00:23:58,400 --> 00:24:00,880
and i don't think it's a time to forget

550
00:24:00,880 --> 00:24:02,480
about it well i don't think we should

551
00:24:02,480 --> 00:24:04,559
forget about it

552
00:24:04,559 --> 00:24:09,039
well i've mentioned that with time maybe

553
00:24:09,039 --> 00:24:10,880
it can be replaced by something

554
00:24:10,880 --> 00:24:12,640
different

555
00:24:12,640 --> 00:24:14,640
and i believe i should mention

556
00:24:14,640 --> 00:24:16,240
one more thing

557
00:24:16,240 --> 00:24:19,360
well metasploit is um more for

558
00:24:19,360 --> 00:24:21,360
professionals

559
00:24:21,360 --> 00:24:24,400
i mean well my personal experience when

560
00:24:24,400 --> 00:24:26,640
i started dealing with ctf

561
00:24:26,640 --> 00:24:27,840
i tried

562
00:24:27,840 --> 00:24:30,880
to code a model in metasploit maybe this

563
00:24:30,880 --> 00:24:32,799
wasn't uh the best solution maybe i

564
00:24:32,799 --> 00:24:34,960
should have used some small python based

565
00:24:34,960 --> 00:24:36,799
script and i failed

566
00:24:36,799 --> 00:24:39,760
well okay if i was to blame that would

567
00:24:39,760 --> 00:24:41,440
have been fine ask my colleagues whether

568
00:24:41,440 --> 00:24:43,360
they tried and they did

569
00:24:43,360 --> 00:24:44,880
and

570
00:24:44,880 --> 00:24:48,320
the major issue i found there was the

571
00:24:48,320 --> 00:24:50,080
difficulty in understanding

572
00:24:50,080 --> 00:24:51,440
the code

573
00:24:51,440 --> 00:24:54,400
when they were looking at other models

574
00:24:54,400 --> 00:24:56,320
so they could understand the code

575
00:24:56,320 --> 00:24:58,640
because initially they were taught to

576
00:24:58,640 --> 00:25:02,480
use python for programming but not ruby

577
00:25:02,480 --> 00:25:05,919
and i believe that at

578
00:25:05,919 --> 00:25:09,120
this moment the goal is to provide a

579
00:25:09,120 --> 00:25:11,679
convenient environment for the

580
00:25:11,679 --> 00:25:14,159
beginners pen testers and metasploit can

581
00:25:14,159 --> 00:25:15,760
be

582
00:25:15,760 --> 00:25:17,919
an environment for professionals because

583
00:25:17,919 --> 00:25:20,320
it's more for

584
00:25:20,320 --> 00:25:21,360
advanced

585
00:25:21,360 --> 00:25:23,840
experts that's my impressions list they

586
00:25:23,840 --> 00:25:24,799
agree

587
00:25:24,799 --> 00:25:26,480
well i believe that just a framework

588
00:25:26,480 --> 00:25:27,440
okay

589
00:25:27,440 --> 00:25:28,400
you have

590
00:25:28,400 --> 00:25:30,880
mentioned another important thing

591
00:25:30,880 --> 00:25:34,159
rugby versus python have you considered

592
00:25:34,159 --> 00:25:36,000
multi-canvas

593
00:25:36,000 --> 00:25:36,880
sega

594
00:25:36,880 --> 00:25:38,240
well have you

595
00:25:38,240 --> 00:25:39,520
considered

596
00:25:39,520 --> 00:25:42,080
immunity canvas this is a python based

597
00:25:42,080 --> 00:25:45,199
framework for exploits

598
00:25:45,440 --> 00:25:47,919
i haven't heard of it

599
00:25:47,919 --> 00:25:51,039
can you give me the title again

600
00:25:51,039 --> 00:25:53,039
no i haven't heard about it i know only

601
00:25:53,039 --> 00:25:55,520
one framework but it looks like

602
00:25:55,520 --> 00:25:57,279
yeah let us play it on python this

603
00:25:57,279 --> 00:25:59,760
router's played i haven't heard about it

604
00:25:59,760 --> 00:26:03,279
okay it has quite a lot of uh stars at

605
00:26:03,279 --> 00:26:05,520
github but when i tried to launch it it

606
00:26:05,520 --> 00:26:08,000
was positioned as a metasploit for

607
00:26:08,000 --> 00:26:09,279
routers

608
00:26:09,279 --> 00:26:12,320
and routers and the internet are things

609
00:26:12,320 --> 00:26:14,480
but when i launched it

610
00:26:14,480 --> 00:26:17,679
well a lot of mistakes were

611
00:26:17,679 --> 00:26:19,919
shown but when i fixed it it didn't send

612
00:26:19,919 --> 00:26:22,000
payloads because it was used the method

613
00:26:22,000 --> 00:26:24,480
using the eco command

614
00:26:24,480 --> 00:26:27,360
which wasn't used in the systems so i

615
00:26:27,360 --> 00:26:29,120
believe they should have used this

616
00:26:29,120 --> 00:26:31,520
sending of payloads through printf or

617
00:26:31,520 --> 00:26:32,799
something else

618
00:26:32,799 --> 00:26:33,520
and

619
00:26:33,520 --> 00:26:36,159
well this is my experience

620
00:26:36,159 --> 00:26:38,799
so maybe somebody else uh

621
00:26:38,799 --> 00:26:40,240
managed

622
00:26:40,240 --> 00:26:41,919
well

623
00:26:41,919 --> 00:26:44,720
i started to

624
00:26:44,720 --> 00:26:47,440
code it considering the problems i found

625
00:26:47,440 --> 00:26:49,840
and metasploit and

626
00:26:49,840 --> 00:26:51,360
analytics

627
00:26:51,360 --> 00:26:55,199
any other issues any other questions

628
00:26:58,799 --> 00:27:02,240
hello thank you all of respect to you a

629
00:27:02,240 --> 00:27:03,120
good

630
00:27:03,120 --> 00:27:04,080
speech

631
00:27:04,080 --> 00:27:05,600
i have a question

632
00:27:05,600 --> 00:27:07,760
what about performance so i believe you

633
00:27:07,760 --> 00:27:09,360
mentioned

634
00:27:09,360 --> 00:27:12,400
that metasploit is slow i didn't say it

635
00:27:12,400 --> 00:27:15,279
was slow i said that headspot is quicker

636
00:27:15,279 --> 00:27:17,760
because

637
00:27:18,080 --> 00:27:19,039
it's not

638
00:27:19,039 --> 00:27:21,039
that bulky yet

639
00:27:21,039 --> 00:27:22,559
versus metasploit

640
00:27:22,559 --> 00:27:23,840
and also

641
00:27:23,840 --> 00:27:26,559
well i looked at the code of metasploit

642
00:27:26,559 --> 00:27:27,679
well

643
00:27:27,679 --> 00:27:29,120
i didn't

644
00:27:29,120 --> 00:27:31,840
kind of rewrite it i coded similar

645
00:27:31,840 --> 00:27:33,360
functions

646
00:27:33,360 --> 00:27:36,000
but i was doing it in a more rational

647
00:27:36,000 --> 00:27:39,279
fashion like the algorithms i coded them

648
00:27:39,279 --> 00:27:40,720
in such a way that they should work

649
00:27:40,720 --> 00:27:43,120
quicker i looked at the time

650
00:27:43,120 --> 00:27:46,480
and if you consider the speed of bottles

651
00:27:46,480 --> 00:27:48,960
or models ascend pillows you know that

652
00:27:48,960 --> 00:27:50,240
metasploit

653
00:27:50,240 --> 00:27:52,080
stores models in the database it is

654
00:27:52,080 --> 00:27:54,640
connected then you pick the module

655
00:27:54,640 --> 00:27:56,960
right so they have a database we also

656
00:27:56,960 --> 00:27:59,360
have it but it's quite straight forward

657
00:27:59,360 --> 00:28:02,799
that's a file

658
00:28:02,799 --> 00:28:05,120
and this

659
00:28:05,120 --> 00:28:07,120
makes the selection of payload or the

660
00:28:07,120 --> 00:28:08,960
module

661
00:28:08,960 --> 00:28:11,919
a quick thing you just say use the index

662
00:28:11,919 --> 00:28:14,000
or the title of the module to be picked

663
00:28:14,000 --> 00:28:16,640
in a second in metasploit here the

664
00:28:16,640 --> 00:28:19,520
module is complicated

665
00:28:19,520 --> 00:28:20,559
like

666
00:28:20,559 --> 00:28:23,600
nostrom the one i recorded which uses

667
00:28:23,600 --> 00:28:25,600
the nastroma

668
00:28:25,600 --> 00:28:27,919
vulnerability you pick it it configures

669
00:28:27,919 --> 00:28:29,679
the payload

670
00:28:29,679 --> 00:28:32,320
and something else i don't know what

671
00:28:32,320 --> 00:28:36,000
and it spends more time doing this

672
00:28:36,000 --> 00:28:38,159
well it has the module

673
00:28:38,159 --> 00:28:40,480
will be loaded within a split of a

674
00:28:40,480 --> 00:28:42,960
second and for metasploit two seconds or

675
00:28:42,960 --> 00:28:45,440
one and a half seconds will be needed

676
00:28:45,440 --> 00:28:46,640
okay

677
00:28:46,640 --> 00:28:48,480
thank you but it becomes something

678
00:28:48,480 --> 00:28:51,679
bigger it will be really cool

679
00:28:52,240 --> 00:28:55,679
thank you one more question

680
00:28:55,679 --> 00:28:58,000
we have the ksm venom so they can

681
00:28:58,000 --> 00:29:01,600
generate the dll or exa file or you can

682
00:29:01,600 --> 00:29:02,960
bring it to the shortcut do they have

683
00:29:02,960 --> 00:29:04,640
anything in your framework

684
00:29:04,640 --> 00:29:06,559
yes indeed and this has been implemented

685
00:29:06,559 --> 00:29:08,320
and this has been implemented

686
00:29:08,320 --> 00:29:11,520
but not as the

687
00:29:11,600 --> 00:29:14,080
we don't know it's not venom

688
00:29:14,080 --> 00:29:16,720
it's um

689
00:29:16,880 --> 00:29:19,360
well in the api called

690
00:29:19,360 --> 00:29:21,678
pex

691
00:29:21,919 --> 00:29:23,440
we have a module

692
00:29:23,440 --> 00:29:28,240
which generates binaries for the p e

693
00:29:28,240 --> 00:29:31,120
portable executable for windows and for

694
00:29:31,120 --> 00:29:34,158
mac mac os

695
00:29:36,159 --> 00:29:38,940
dll

696
00:29:38,940 --> 00:29:40,320
[Music]

697
00:29:40,320 --> 00:29:41,600
the libraries

698
00:29:41,600 --> 00:29:44,320
and libs the dynamic libraries for mac

699
00:29:44,320 --> 00:29:45,279
os

700
00:29:45,279 --> 00:29:48,720
and this module works with all of these

701
00:29:48,720 --> 00:29:53,279
popular formats of exa files

702
00:29:53,279 --> 00:29:55,120
and it can

703
00:29:55,120 --> 00:29:56,159
wrap

704
00:29:56,159 --> 00:29:58,559
initial code by this uh executive file

705
00:29:58,559 --> 00:30:01,120
and can also introduce in into a

706
00:30:01,120 --> 00:30:03,918
ready binary

707
00:30:04,320 --> 00:30:06,559
and so the clay for this model i'm now

708
00:30:06,559 --> 00:30:09,039
coding it's under development but if you

709
00:30:09,039 --> 00:30:11,039
want to generate a binary

710
00:30:11,039 --> 00:30:13,600
well it's there in the module and we

711
00:30:13,600 --> 00:30:15,520
have documents for this

712
00:30:15,520 --> 00:30:17,279
and one more

713
00:30:17,279 --> 00:30:19,520
thing if you want to

714
00:30:19,520 --> 00:30:23,279
generate the binary quicker we have

715
00:30:23,279 --> 00:30:26,399
modules we have a headspot module which

716
00:30:26,399 --> 00:30:29,760
is called xlr generator you just

717
00:30:29,760 --> 00:30:31,120
bring the payload

718
00:30:31,120 --> 00:30:32,880
there

719
00:30:32,880 --> 00:30:35,600
and the encoder if you needed

720
00:30:35,600 --> 00:30:37,120
and there

721
00:30:37,120 --> 00:30:38,720
and the format of the existing file is

722
00:30:38,720 --> 00:30:40,240
not needed the platform will determine

723
00:30:40,240 --> 00:30:40,960
it

724
00:30:40,960 --> 00:30:41,919
and

725
00:30:41,919 --> 00:30:44,640
it will generate the binary

726
00:30:44,640 --> 00:30:47,520
so all of that is done

727
00:30:49,039 --> 00:30:50,399
good and

728
00:30:50,399 --> 00:30:53,200
if the method for

729
00:30:53,200 --> 00:30:58,559
avoiding if is there a method for a av

730
00:30:58,559 --> 00:31:02,320
avoidance we know that

731
00:31:02,320 --> 00:31:04,640
you know metasploit

732
00:31:04,640 --> 00:31:05,840
exe

733
00:31:05,840 --> 00:31:08,080
are detected

734
00:31:08,080 --> 00:31:10,559
well actually uh encoders currently

735
00:31:10,559 --> 00:31:12,799
don't work this way they are used to

736
00:31:12,799 --> 00:31:15,760
avoid filters

737
00:31:15,919 --> 00:31:18,799
there are no solutions currently

738
00:31:18,799 --> 00:31:21,679
like that but i'm working on an encoder

739
00:31:21,679 --> 00:31:24,240
that will

740
00:31:25,760 --> 00:31:27,600
well how do i put it

741
00:31:27,600 --> 00:31:31,120
first of all it will need to change

742
00:31:31,120 --> 00:31:32,000
you know

743
00:31:32,000 --> 00:31:34,399
the places of the bites

744
00:31:34,399 --> 00:31:37,279
but at some point in time that might

745
00:31:37,279 --> 00:31:40,720
lead to an innovation

746
00:31:41,360 --> 00:31:44,799
method for heavies

747
00:31:45,039 --> 00:31:48,480
and if their if any arise they would of

748
00:31:48,480 --> 00:31:50,080
course

749
00:31:50,080 --> 00:31:51,840
be added to

750
00:31:51,840 --> 00:31:56,720
the least for the antivirus so

751
00:31:56,720 --> 00:31:59,360
every new method is usually included in

752
00:31:59,360 --> 00:32:02,000
the av database so

753
00:32:02,000 --> 00:32:03,760
avoiding abs

754
00:32:03,760 --> 00:32:05,679
would probably be something that you

755
00:32:05,679 --> 00:32:10,200
need to keep secret thank you

756
00:32:15,519 --> 00:32:18,320
with that that's all thank you thanks

757
00:32:18,320 --> 00:32:21,039
indeed here's the qr code leading to the

758
00:32:21,039 --> 00:32:22,799
site and some links

759
00:32:22,799 --> 00:32:24,640
to the project

760
00:32:24,640 --> 00:32:27,799
thank you

761
00:32:54,640 --> 00:32:56,880
do you hear me okay

762
00:32:56,880 --> 00:33:00,080
my name is ilyash aposhnekov and i have

763
00:33:00,080 --> 00:33:02,720
five minutes to sell my

764
00:33:02,720 --> 00:33:05,200
utility idea pen test collaboration

765
00:33:05,200 --> 00:33:07,519
framework is a utility to exchange

766
00:33:07,519 --> 00:33:10,720
process and store information uh

767
00:33:10,720 --> 00:33:12,720
the data about the

768
00:33:12,720 --> 00:33:15,600
pen testing projects

769
00:33:15,600 --> 00:33:16,799
so

770
00:33:16,799 --> 00:33:20,080
pen testing has we during pen testing we

771
00:33:20,080 --> 00:33:22,320
gather a lot of project

772
00:33:22,320 --> 00:33:24,640
information on the servers domain names

773
00:33:24,640 --> 00:33:27,440
open ports comments

774
00:33:27,440 --> 00:33:29,760
left by the testers the services

775
00:33:29,760 --> 00:33:32,720
themselves credentials files

776
00:33:32,720 --> 00:33:35,200
vulnerabilities and so on and so forth

777
00:33:35,200 --> 00:33:38,399
so there's a lot of info and you

778
00:33:38,399 --> 00:33:40,720
probably cannot mention it all on one

779
00:33:40,720 --> 00:33:42,159
slide

780
00:33:42,159 --> 00:33:45,039
i had this task

781
00:33:45,039 --> 00:33:46,240
at work

782
00:33:46,240 --> 00:33:48,000
and i knew that

783
00:33:48,000 --> 00:33:49,200
in

784
00:33:49,200 --> 00:33:51,120
a couple of months i will have a lot of

785
00:33:51,120 --> 00:33:54,640
such projects so the only solution

786
00:33:54,640 --> 00:33:55,440
uh

787
00:33:55,440 --> 00:33:58,000
i found was to create myself because the

788
00:33:58,000 --> 00:33:59,840
ones i found on the internet did not

789
00:33:59,840 --> 00:34:00,640
work

790
00:34:00,640 --> 00:34:03,039
so i created the pen test collaboration

791
00:34:03,039 --> 00:34:05,600
framework as a utility enabling to you

792
00:34:05,600 --> 00:34:06,799
to

793
00:34:06,799 --> 00:34:09,760
collaborate with other utilities like

794
00:34:09,760 --> 00:34:13,599
nmap to send xml to nmap to work with

795
00:34:13,599 --> 00:34:16,560
networks and subnet

796
00:34:16,560 --> 00:34:18,079
the servers

797
00:34:18,079 --> 00:34:22,320
and a key thing was that you can have a

798
00:34:22,320 --> 00:34:24,480
number of teams like blue team and red

799
00:34:24,480 --> 00:34:25,359
team

800
00:34:25,359 --> 00:34:28,560
and they should not have any access to

801
00:34:28,560 --> 00:34:30,480
the red team project so

802
00:34:30,480 --> 00:34:34,480
using these collaboration frameworks

803
00:34:34,480 --> 00:34:36,320
you can place it on the internet and

804
00:34:36,320 --> 00:34:37,599
work

805
00:34:37,599 --> 00:34:38,960
together but

806
00:34:38,960 --> 00:34:42,239
you know managing the rights

807
00:34:42,239 --> 00:34:44,320
the vulnerabilities that we found need

808
00:34:44,320 --> 00:34:47,119
to be edited we need to be monitored and

809
00:34:47,119 --> 00:34:50,079
of course the nodes by the testers the

810
00:34:50,079 --> 00:34:51,918
files that they found everything should

811
00:34:51,918 --> 00:34:55,679
be attached to the projects

812
00:34:55,679 --> 00:34:57,359
general information it's

813
00:34:57,359 --> 00:35:00,720
a program on python v3 3.9 it's

814
00:35:00,720 --> 00:35:03,280
cross-platform

815
00:35:03,280 --> 00:35:05,520
it can be run anywhere where you have

816
00:35:05,520 --> 00:35:07,200
python interpreter

817
00:35:07,200 --> 00:35:09,440
it's a cross-platform it uses

818
00:35:09,440 --> 00:35:11,200
cross-platform libraries

819
00:35:11,200 --> 00:35:12,480
it's portable

820
00:35:12,480 --> 00:35:15,040
so you can

821
00:35:15,440 --> 00:35:18,960
put it on a flash drive and

822
00:35:18,960 --> 00:35:21,520
open by double click it has open source

823
00:35:21,520 --> 00:35:24,320
on gitlab

824
00:35:24,960 --> 00:35:27,280
and some statistics on

825
00:35:27,280 --> 00:35:30,480
the amount of time it took database it

826
00:35:30,480 --> 00:35:34,000
uses sqlite3 i know it's slow but it

827
00:35:34,000 --> 00:35:36,480
supports postgres if you want and you

828
00:35:36,480 --> 00:35:37,760
can just

829
00:35:37,760 --> 00:35:39,680
change everything in a config

830
00:35:39,680 --> 00:35:43,440
23 utilities map pursuit

831
00:35:43,440 --> 00:35:45,680
and so on

832
00:35:45,680 --> 00:35:48,720
so that how does this system the

833
00:35:48,720 --> 00:35:51,200
user space system look

834
00:35:51,200 --> 00:35:54,240
we have our config our logs our

835
00:35:54,240 --> 00:35:56,320
templates

836
00:35:56,320 --> 00:35:59,839
of vulnerabilities of

837
00:36:01,280 --> 00:36:03,920
vulnerability substitution tokens api

838
00:36:03,920 --> 00:36:05,200
tokens

839
00:36:05,200 --> 00:36:06,960
if you have a person

840
00:36:06,960 --> 00:36:08,480
whom you

841
00:36:08,480 --> 00:36:10,400
don't want to trust with the shortened

842
00:36:10,400 --> 00:36:13,119
api token and you don't want him to use

843
00:36:13,119 --> 00:36:15,040
it he just add it

844
00:36:15,040 --> 00:36:17,760
and you know without knowing the token

845
00:36:17,760 --> 00:36:18,880
itself

846
00:36:18,880 --> 00:36:20,560
he can use it

847
00:36:20,560 --> 00:36:22,160
and user information and of course the

848
00:36:22,160 --> 00:36:24,400
teams the admins and the projects

849
00:36:24,400 --> 00:36:27,040
that can be attached to both

850
00:36:27,040 --> 00:36:30,400
users and the teams themselves so that

851
00:36:30,400 --> 00:36:33,760
everyone in the team has access

852
00:36:33,760 --> 00:36:37,119
here's one of the screenshots

853
00:36:37,520 --> 00:36:40,720
here's how i build the craft

854
00:36:40,720 --> 00:36:43,680
we are improving the of course the look

855
00:36:43,680 --> 00:36:44,880
and feel

856
00:36:44,880 --> 00:36:47,760
that's how we attack that how how we add

857
00:36:47,760 --> 00:36:50,480
the rules we have a connection from an

858
00:36:50,480 --> 00:36:53,839
apple computer to linux computers and

859
00:36:53,839 --> 00:36:55,440
you can attack

860
00:36:55,440 --> 00:36:56,940
some pc on

861
00:36:56,940 --> 00:36:59,040
[Music]

862
00:36:59,040 --> 00:37:00,720
to ap

863
00:37:00,720 --> 00:37:02,960
so now we play standoff and we have huge

864
00:37:02,960 --> 00:37:04,880
networks there and

865
00:37:04,880 --> 00:37:06,560
of course it was useful

866
00:37:06,560 --> 00:37:08,960
for us

867
00:37:12,320 --> 00:37:14,640
and it's very convenient so why did i

868
00:37:14,640 --> 00:37:17,599
decide to create one why did i not find

869
00:37:17,599 --> 00:37:20,000
any alternative solution so here is the

870
00:37:20,000 --> 00:37:23,280
table of

871
00:37:23,280 --> 00:37:25,760
the closest one was the layer framework

872
00:37:25,760 --> 00:37:28,320
and its main issue was it's written on

873
00:37:28,320 --> 00:37:30,960
java it needs to be

874
00:37:30,960 --> 00:37:34,000
rebuilt every time after passing and the

875
00:37:34,000 --> 00:37:38,000
second issue was that their build was

876
00:37:38,000 --> 00:37:39,040
not

877
00:37:39,040 --> 00:37:40,240
really

878
00:37:40,240 --> 00:37:41,359
buildable

879
00:37:41,359 --> 00:37:42,160
for

880
00:37:42,160 --> 00:37:44,640
on other machines so

881
00:37:44,640 --> 00:37:47,520
you would not be able to build a new

882
00:37:47,520 --> 00:37:50,160
version with all the needed utilities

883
00:37:50,160 --> 00:37:53,759
support for half a year so

884
00:37:55,200 --> 00:37:57,520
python is portable

885
00:37:57,520 --> 00:38:00,880
and sws is also portable cross-platform

886
00:38:00,880 --> 00:38:03,680
free and it's not outdated

887
00:38:03,680 --> 00:38:05,839
i understand you know

888
00:38:05,839 --> 00:38:07,920
at some point in time i will stop

889
00:38:07,920 --> 00:38:10,800
developing it but

890
00:38:10,960 --> 00:38:13,680
the positive thing in this is that as

891
00:38:13,680 --> 00:38:16,160
python code is quite convenient

892
00:38:16,160 --> 00:38:19,760
it allows the developers to add their

893
00:38:19,760 --> 00:38:22,800
own functions it's very template based

894
00:38:22,800 --> 00:38:24,320
and you can integrate with other

895
00:38:24,320 --> 00:38:25,760
utilities

896
00:38:25,760 --> 00:38:29,440
there's also a data export capability

897
00:38:29,440 --> 00:38:30,880
and it's

898
00:38:30,880 --> 00:38:33,839
used quite often

899
00:38:33,839 --> 00:38:37,760
so if you root the hashes and add them

900
00:38:37,760 --> 00:38:40,240
and put them to the ip

901
00:38:40,240 --> 00:38:42,000
addresses

902
00:38:42,000 --> 00:38:43,839
then

903
00:38:43,839 --> 00:38:46,640
it has a chat

904
00:38:46,640 --> 00:38:49,599
it's more of a feature

905
00:38:49,599 --> 00:38:51,920
and an important criteria was that the

906
00:38:51,920 --> 00:38:54,240
utilities were aimed at managers not at

907
00:38:54,240 --> 00:38:55,760
tech specialists

908
00:38:55,760 --> 00:38:57,599
and it was

909
00:38:57,599 --> 00:38:59,760
a big issue for attack forge why we

910
00:38:59,760 --> 00:39:01,760
didn't choose it

911
00:39:01,760 --> 00:39:04,000
the api being

912
00:39:04,000 --> 00:39:06,560
used as swapper api and also the

913
00:39:06,560 --> 00:39:08,800
vulnerability templates

914
00:39:08,800 --> 00:39:10,800
and there's some experience using it it

915
00:39:10,800 --> 00:39:14,880
exists for like half a year

916
00:39:14,880 --> 00:39:17,440
it has 60 stars on gitlab

917
00:39:17,440 --> 00:39:20,560
130 people in the utility chart used in

918
00:39:20,560 --> 00:39:21,839
the current

919
00:39:21,839 --> 00:39:23,200
work process

920
00:39:23,200 --> 00:39:24,800
and i presented it on different

921
00:39:24,800 --> 00:39:26,400
conferences

922
00:39:26,400 --> 00:39:29,040
your questions

923
00:39:39,440 --> 00:39:40,640
it's

924
00:39:40,640 --> 00:39:43,520
less of a question more of a thank you i

925
00:39:43,520 --> 00:39:46,400
started using this utility

926
00:39:46,400 --> 00:39:48,560
on the last standoff and i use it on

927
00:39:48,560 --> 00:39:52,480
this standoff and it's very convenient

928
00:39:52,640 --> 00:39:54,480
i did not have any questions using it

929
00:39:54,480 --> 00:39:55,760
it's really

930
00:39:55,760 --> 00:40:00,280
truly useful thing

931
00:40:15,040 --> 00:40:17,119
thank you for your presentation it's

932
00:40:17,119 --> 00:40:19,920
really interesting in terms of how you

933
00:40:19,920 --> 00:40:22,640
use it practically in this framework

934
00:40:22,640 --> 00:40:26,480
did you look at uh

935
00:40:26,640 --> 00:40:29,119
third-party services integration

936
00:40:29,119 --> 00:40:31,520
dedupes vulnerability analysis open

937
00:40:31,520 --> 00:40:34,720
source solutions defect ocean

938
00:40:34,720 --> 00:40:38,079
to take some part of work from them and

939
00:40:38,079 --> 00:40:40,800
maybe load

940
00:40:40,800 --> 00:40:42,880
some something into them

941
00:40:42,880 --> 00:40:44,000
yeah i did

942
00:40:44,000 --> 00:40:46,079
but my concept is that i can run the

943
00:40:46,079 --> 00:40:48,319
service on the internet and other users

944
00:40:48,319 --> 00:40:50,240
not only me will be able to use it and

945
00:40:50,240 --> 00:40:52,480
it will be safe

946
00:40:52,480 --> 00:40:55,119
if we connect to other services using

947
00:40:55,119 --> 00:40:57,119
rest api

948
00:40:57,119 --> 00:40:58,319
we allow

949
00:40:58,319 --> 00:41:01,359
arbitrary users to connect to some api

950
00:41:01,359 --> 00:41:02,960
addresses so

951
00:41:02,960 --> 00:41:07,359
that would create issues with uh

952
00:41:09,040 --> 00:41:13,280
because we have network requests for

953
00:41:13,280 --> 00:41:14,720
arbitrary

954
00:41:14,720 --> 00:41:17,119
network addresses

955
00:41:17,119 --> 00:41:19,800
this might work for administrators

956
00:41:19,800 --> 00:41:21,119
[Music]

957
00:41:21,119 --> 00:41:24,319
and i looked at the dodger

958
00:41:24,319 --> 00:41:26,720
but the question i i asked

959
00:41:26,720 --> 00:41:28,720
was about the

960
00:41:28,720 --> 00:41:31,440
big part of results aggregation from

961
00:41:31,440 --> 00:41:33,680
different tools understanding them

962
00:41:33,680 --> 00:41:37,119
pushing them into one single concept

963
00:41:37,119 --> 00:41:39,280
and

964
00:41:39,520 --> 00:41:43,520
you probably create a number of plugins

965
00:41:45,680 --> 00:41:48,000
and the other part would have to do with

966
00:41:48,000 --> 00:41:50,000
you know merging this all

967
00:41:50,000 --> 00:41:53,200
all you need to do is spend testing

968
00:41:53,200 --> 00:41:55,599
so the part that has to do with

969
00:41:55,599 --> 00:41:59,119
aggregating the reports and

970
00:42:01,200 --> 00:42:02,400
there are scanners

971
00:42:02,400 --> 00:42:04,640
open source solutions that

972
00:42:04,640 --> 00:42:06,560
enable gathering the

973
00:42:06,560 --> 00:42:07,920
deduping

974
00:42:07,920 --> 00:42:09,839
of this all so maybe you can add some

975
00:42:09,839 --> 00:42:12,079
feeds

976
00:42:12,079 --> 00:42:14,480
and reach them

977
00:42:14,480 --> 00:42:17,520
maybe have two services

978
00:42:17,520 --> 00:42:20,240
where you concentrate on

979
00:42:20,240 --> 00:42:23,118
what is lacking

980
00:42:24,720 --> 00:42:26,400
and by the way thanks for this great

981
00:42:26,400 --> 00:42:30,839
table that explains a lot

982
00:42:35,040 --> 00:42:38,079
the goal of this development was to help

983
00:42:38,079 --> 00:42:38,800
the

984
00:42:38,800 --> 00:42:41,440
testing the pen testing team

985
00:42:41,440 --> 00:42:44,079
and if we aggregate and monitor that's

986
00:42:44,079 --> 00:42:47,040
more for a blue team when you

987
00:42:47,040 --> 00:42:48,880
monitor whether the vulnerability was

988
00:42:48,880 --> 00:42:51,280
fixed or not so yeah you can go back to

989
00:42:51,280 --> 00:42:52,640
this project

990
00:42:52,640 --> 00:42:54,960
and people usually come back to to work

991
00:42:54,960 --> 00:42:56,319
with us but

992
00:42:56,319 --> 00:42:58,960
our aim was more on a technical

993
00:42:58,960 --> 00:43:02,640
specialist working during the pen test

994
00:43:02,640 --> 00:43:03,920
so

995
00:43:03,920 --> 00:43:06,000
things like aggregating vulnerabilities

996
00:43:06,000 --> 00:43:09,280
are quite rare

997
00:43:09,760 --> 00:43:10,800
with them

998
00:43:10,800 --> 00:43:12,000
one more question do you have some

999
00:43:12,000 --> 00:43:13,440
offline cache

1000
00:43:13,440 --> 00:43:16,319
it's a web app right

1001
00:43:18,160 --> 00:43:22,400
sometimes especially you know in

1002
00:43:22,400 --> 00:43:23,760
pen tests

1003
00:43:23,760 --> 00:43:26,319
you know internet availability is a hard

1004
00:43:26,319 --> 00:43:28,640
question local caching

1005
00:43:28,640 --> 00:43:32,880
might be needed with the synchronization

1006
00:43:32,880 --> 00:43:34,480
well um

1007
00:43:34,480 --> 00:43:37,040
local hash local cache

1008
00:43:37,040 --> 00:43:39,119
is not available because it allows the

1009
00:43:39,119 --> 00:43:41,280
users

1010
00:43:41,280 --> 00:43:44,240
to add any amount of file of data into

1011
00:43:44,240 --> 00:43:46,319
the database imagine you had one

1012
00:43:46,319 --> 00:43:48,319
gigabyte of data

1013
00:43:48,319 --> 00:43:50,160
and

1014
00:43:50,160 --> 00:43:51,599
the database

1015
00:43:51,599 --> 00:43:52,640
would

1016
00:43:52,640 --> 00:43:54,480
you know

1017
00:43:54,480 --> 00:43:57,920
this will enable us to ddos the uh the

1018
00:43:57,920 --> 00:44:00,240
system

1019
00:44:00,560 --> 00:44:02,880
how does it connect with being offline

1020
00:44:02,880 --> 00:44:04,720
you talk about the integration with some

1021
00:44:04,720 --> 00:44:06,960
offline service so your solution should

1022
00:44:06,960 --> 00:44:08,640
help the team

1023
00:44:08,640 --> 00:44:11,440
that works on an object

1024
00:44:11,440 --> 00:44:14,400
internal for internal logic for example

1025
00:44:14,400 --> 00:44:16,319
to connect the knowledge

1026
00:44:16,319 --> 00:44:17,040
of

1027
00:44:17,040 --> 00:44:19,359
all of them to move

1028
00:44:19,359 --> 00:44:23,000
further to the goal

1029
00:44:30,960 --> 00:44:31,920
to

1030
00:44:31,920 --> 00:44:36,560
give the data back in real time

1031
00:44:36,560 --> 00:44:38,400
upload it to the system so the question

1032
00:44:38,400 --> 00:44:40,640
was

1033
00:44:41,839 --> 00:44:45,440
if you have a gigabyte of data

1034
00:44:46,079 --> 00:44:48,960
how do you upload the data

1035
00:44:48,960 --> 00:44:50,640
well i cannot answer

1036
00:44:50,640 --> 00:44:53,200
in general

1037
00:44:56,800 --> 00:44:59,359
the user can go from an ap

1038
00:44:59,359 --> 00:45:01,760
address to an ip address

1039
00:45:01,760 --> 00:45:03,680
there's also a function for multiple

1040
00:45:03,680 --> 00:45:06,880
addition of different types of data

1041
00:45:06,880 --> 00:45:08,960
in different formats because many

1042
00:45:08,960 --> 00:45:12,000
testers like to just you know

1043
00:45:12,000 --> 00:45:14,880
make notes in a notebook and you can add

1044
00:45:14,880 --> 00:45:16,839
a lot of data like

1045
00:45:16,839 --> 00:45:18,720
credentials

1046
00:45:18,720 --> 00:45:22,240
with the passwords or the hash

1047
00:45:22,240 --> 00:45:25,118
adding ports

1048
00:45:25,359 --> 00:45:28,200
hosts so if

1049
00:45:28,200 --> 00:45:32,200
they say

1050
00:45:42,319 --> 00:45:44,240
i understand that solution the pr

1051
00:45:44,240 --> 00:45:47,119
solution

1052
00:45:47,119 --> 00:45:48,480
implies

1053
00:45:48,480 --> 00:45:52,359
the internet availability

1054
00:46:00,240 --> 00:46:03,280
i do my local version and i have uh the

1055
00:46:03,280 --> 00:46:05,680
search functionality to search by

1056
00:46:05,680 --> 00:46:08,000
ip addresses and it's a flexible setting

1057
00:46:08,000 --> 00:46:11,280
so that i export those lists from one

1058
00:46:11,280 --> 00:46:13,839
pcf instance to another utility instance

1059
00:46:13,839 --> 00:46:15,920
and work with it

1060
00:46:15,920 --> 00:46:18,880
so it's present there

1061
00:46:24,160 --> 00:46:25,760
not all the data can be transferred this

1062
00:46:25,760 --> 00:46:28,720
way though

1063
00:46:28,720 --> 00:46:30,079
all the data can be transferred because

1064
00:46:30,079 --> 00:46:30,800
the

1065
00:46:30,800 --> 00:46:33,280
the format is flexible

1066
00:46:33,280 --> 00:46:34,800
a bit of feedback

1067
00:46:34,800 --> 00:46:38,000
uh we've used this utility as part of

1068
00:46:38,000 --> 00:46:40,079
our practical

1069
00:46:40,079 --> 00:46:43,920
activity compared to dratis it's a

1070
00:46:43,920 --> 00:46:46,240
very interesting solution

1071
00:46:46,240 --> 00:46:49,520
we use network monitoring

1072
00:46:49,760 --> 00:46:51,599
especially for

1073
00:46:51,599 --> 00:46:54,720
big network sizes

1074
00:46:55,119 --> 00:46:56,560
the

1075
00:46:56,560 --> 00:46:59,200
issue here is when the network is big

1076
00:46:59,200 --> 00:47:02,640
and if you integrate

1077
00:47:02,720 --> 00:47:04,880
you cannot import all the data into the

1078
00:47:04,880 --> 00:47:07,359
utilities

1079
00:47:07,920 --> 00:47:08,839
and map

1080
00:47:08,839 --> 00:47:13,560
scans max patrol scans

1081
00:47:18,950 --> 00:47:22,060
[Music]

1082
00:47:34,720 --> 00:47:39,160
so it's not the student projects at all

1083
00:47:42,240 --> 00:47:43,359
and

1084
00:47:43,359 --> 00:47:45,200
the suggestion would be maybe to add

1085
00:47:45,200 --> 00:47:47,680
some dislike

1086
00:47:47,680 --> 00:47:50,640
capabilities to upload and download the

1087
00:47:50,640 --> 00:47:52,720
whole project and

1088
00:47:52,720 --> 00:47:54,800
putting it on another instance so this

1089
00:47:54,800 --> 00:47:57,200
is a very useful thing and if you

1090
00:47:57,200 --> 00:48:01,118
can implement it that would be great

1091
00:48:04,559 --> 00:48:06,960
because with the pen test when the group

1092
00:48:06,960 --> 00:48:07,920
arrives

1093
00:48:07,920 --> 00:48:10,160
on the spot on site

1094
00:48:10,160 --> 00:48:12,960
you need to publish some data later on a

1095
00:48:12,960 --> 00:48:16,480
local machine and work with the data to

1096
00:48:16,480 --> 00:48:18,079
you know

1097
00:48:18,079 --> 00:48:20,559
ensure

1098
00:48:29,839 --> 00:48:34,599
and i'm glad that we have such such guys

1099
00:48:35,280 --> 00:48:37,920
regarding exports and export and import

1100
00:48:37,920 --> 00:48:40,960
it's planned for quite a while

1101
00:48:40,960 --> 00:48:43,040
i added this

1102
00:48:43,040 --> 00:48:45,119
on git club

1103
00:48:45,119 --> 00:48:48,400
and i'm thinking on how

1104
00:48:48,400 --> 00:48:51,200
we can avoid the deletion of the host

1105
00:48:51,200 --> 00:48:52,640
and

1106
00:48:52,640 --> 00:48:55,280
avoiding with with big with a huge

1107
00:48:55,280 --> 00:48:58,000
amount of data

1108
00:49:00,319 --> 00:49:03,558
with gitlab

1109
00:49:04,000 --> 00:49:06,400
the solution will be that i will change

1110
00:49:06,400 --> 00:49:08,880
the library the

1111
00:49:08,880 --> 00:49:10,960
uh database

1112
00:49:10,960 --> 00:49:12,720
for working with databases and they will

1113
00:49:12,720 --> 00:49:15,040
be object oriented and i think this will

1114
00:49:15,040 --> 00:49:16,640
improve the speed

1115
00:49:16,640 --> 00:49:17,680
thanks

1116
00:49:17,680 --> 00:49:19,359
and one more comment

1117
00:49:19,359 --> 00:49:21,920
there is

1118
00:49:22,880 --> 00:49:25,440
an important point for the red teams and

1119
00:49:25,440 --> 00:49:29,720
as you participate in the standoff

1120
00:49:38,070 --> 00:49:41,179
[Music]

1121
00:49:44,210 --> 00:49:46,640
[Music]

1122
00:49:46,640 --> 00:49:49,280
visualize the hosts that we work with

1123
00:49:49,280 --> 00:49:52,000
because some hosts some services

1124
00:49:52,000 --> 00:49:54,079
are not

1125
00:49:54,079 --> 00:49:55,680
visible because at some point to them

1126
00:49:55,680 --> 00:49:58,079
they are not available

1127
00:49:58,079 --> 00:50:00,319
and we know nothing about them

1128
00:50:00,319 --> 00:50:02,640
that's when the person works with them

1129
00:50:02,640 --> 00:50:04,720
he says yeah i've implemented this

1130
00:50:04,720 --> 00:50:06,160
function

1131
00:50:06,160 --> 00:50:10,640
and new hosts new ports arise so

1132
00:50:10,640 --> 00:50:12,640
some function that will

1133
00:50:12,640 --> 00:50:14,000
run

1134
00:50:14,000 --> 00:50:16,960
continuous monitoring is important

1135
00:50:16,960 --> 00:50:19,680
it's not implemented in some places but

1136
00:50:19,680 --> 00:50:20,960
that would be a good thing for the

1137
00:50:20,960 --> 00:50:22,160
future

1138
00:50:22,160 --> 00:50:26,040
that would be a killer feature

1139
00:50:36,960 --> 00:50:37,839
should be

1140
00:50:37,839 --> 00:50:40,640
published on the internet and of course

1141
00:50:40,640 --> 00:50:43,280
such monitoring system will

1142
00:50:43,280 --> 00:50:46,079
not allow not be allowed if it's

1143
00:50:46,079 --> 00:50:48,160
put on the internet

1144
00:50:48,160 --> 00:50:50,720
so probably that will be another more

1145
00:50:50,720 --> 00:50:53,599
separate module that will

1146
00:50:53,599 --> 00:50:54,400
be

1147
00:50:54,400 --> 00:50:56,480
talking to the utility through the

1148
00:50:56,480 --> 00:50:58,800
api

1149
00:50:58,800 --> 00:51:02,319
sending the data it has captured but not

1150
00:51:02,319 --> 00:51:06,920
in the utility itself thank you

1151
00:51:14,240 --> 00:51:16,800
unfortunately we're running out of time

1152
00:51:16,800 --> 00:51:19,359
and some feedback to the people giving

1153
00:51:19,359 --> 00:51:21,680
feedback guys this is open source you

1154
00:51:21,680 --> 00:51:22,800
know

1155
00:51:22,800 --> 00:51:25,440
do your requests write some code improve

1156
00:51:25,440 --> 00:51:27,520
it

1157
00:51:33,520 --> 00:51:35,520
i'm glad that those are not

1158
00:51:35,520 --> 00:51:38,160
just you know abstract things with the

1159
00:51:38,160 --> 00:51:39,440
lab work

1160
00:51:39,440 --> 00:51:40,880
by the guys

1161
00:51:40,880 --> 00:51:42,160
uh

1162
00:51:42,160 --> 00:51:44,240
looked at by a couple of people this is

1163
00:51:44,240 --> 00:51:47,760
a great thing that is used by you know

1164
00:51:47,760 --> 00:51:49,839
people in the audience and if we have

1165
00:51:49,839 --> 00:51:52,720
feature requests then it's alive and it

1166
00:51:52,720 --> 00:51:56,000
will keep developing we are a bit over

1167
00:51:56,000 --> 00:51:57,359
time

1168
00:51:57,359 --> 00:52:01,440
and thus we decided together with the

1169
00:52:01,440 --> 00:52:03,839
jury

1170
00:52:07,760 --> 00:52:09,920
and i wanted to

1171
00:52:09,920 --> 00:52:12,720
tell everyone in this room this was the

1172
00:52:12,720 --> 00:52:13,839
first con

1173
00:52:13,839 --> 00:52:16,319
contest of this type

1174
00:52:16,319 --> 00:52:18,400
but we will continue doing this together

1175
00:52:18,400 --> 00:52:21,599
with the um

1176
00:52:24,800 --> 00:52:26,000
team and

1177
00:52:26,000 --> 00:52:28,319
if you have some young guys

1178
00:52:28,319 --> 00:52:31,119
students school guys

1179
00:52:31,119 --> 00:52:33,200
i'd like to create some security

1180
00:52:33,200 --> 00:52:35,440
projects or open source projects

1181
00:52:35,440 --> 00:52:38,480
let them participate this will clearly

1182
00:52:38,480 --> 00:52:40,160
be noticed

1183
00:52:40,160 --> 00:52:42,240
and a small announcement

1184
00:52:42,240 --> 00:52:44,559
there are some t-shirts there please

1185
00:52:44,559 --> 00:52:46,880
feel free to take them thank you thank

1186
00:52:46,880 --> 00:52:48,650
you indeed

1187
00:52:48,650 --> 00:52:52,079
[Applause]

