1
00:00:05,040 --> 00:00:08,000
thank you so much for

2
00:00:15,120 --> 00:00:16,960
got you watching so we'll be talking

3
00:00:16,960 --> 00:00:19,279
about the actions of chinese ibts in the

4
00:00:19,279 --> 00:00:21,840
territory of the russian federation

5
00:00:21,840 --> 00:00:24,320
so i decided to spice my serious

6
00:00:24,320 --> 00:00:26,640
technical slides up with funny pictures

7
00:00:26,640 --> 00:00:28,400
to make it easier for you to go through

8
00:00:28,400 --> 00:00:32,399
my content at a pretty late time

9
00:00:32,399 --> 00:00:35,040
so let's start with the who am i slide

10
00:00:35,040 --> 00:00:36,880
you know this is the 10th year i've been

11
00:00:36,880 --> 00:00:39,200
doing cyber security

12
00:00:39,200 --> 00:00:41,440
and my work is all about incident

13
00:00:41,440 --> 00:00:43,440
research and investigation you know i

14
00:00:43,440 --> 00:00:45,360
started as an engineer in the first line

15
00:00:45,360 --> 00:00:47,520
of defense first line operations of

16
00:00:47,520 --> 00:00:49,360
soccer now

17
00:00:49,360 --> 00:00:51,520
i'm actually heading

18
00:00:51,520 --> 00:00:52,399
uh

19
00:00:52,399 --> 00:00:55,199
the division of ros telecom solar

20
00:00:55,199 --> 00:00:56,960
so we are doing digital forensics

21
00:00:56,960 --> 00:01:00,239
reverse engineering threat hunting and

22
00:01:00,239 --> 00:01:02,480
various studies and research primarily

23
00:01:02,480 --> 00:01:05,438
related to security incidents

24
00:01:05,438 --> 00:01:08,320
my plan for today is like this

25
00:01:08,320 --> 00:01:09,200
first

26
00:01:09,200 --> 00:01:13,560
we'll talk about the

27
00:01:16,080 --> 00:01:19,439
in 2021 we'll also talk about technique

28
00:01:19,439 --> 00:01:21,920
tactics and techniques it will probably

29
00:01:21,920 --> 00:01:23,840
be the shortest

30
00:01:23,840 --> 00:01:25,600
talk of this kind in your life we'll

31
00:01:25,600 --> 00:01:27,759
also talk about the malware code

32
00:01:27,759 --> 00:01:29,920
and the core of my speech

33
00:01:29,920 --> 00:01:30,880
and

34
00:01:30,880 --> 00:01:34,079
well the main intent so to speak of my

35
00:01:34,079 --> 00:01:35,439
speech

36
00:01:35,439 --> 00:01:38,720
we'll focus on how this uh you know

37
00:01:38,720 --> 00:01:41,200
chinese

38
00:01:54,000 --> 00:01:56,640
to classify you know all this stuff and

39
00:01:56,640 --> 00:01:58,640
tell you that this particular ipt did

40
00:01:58,640 --> 00:02:00,560
this or did that you know if you've been

41
00:02:00,560 --> 00:02:02,479
reading security reports you probably

42
00:02:02,479 --> 00:02:04,640
know that there are lots and lots of

43
00:02:04,640 --> 00:02:07,040
chinese groups like over a hundred

44
00:02:07,040 --> 00:02:08,639
groups

45
00:02:08,639 --> 00:02:11,038
which is obviously a technical

46
00:02:11,038 --> 00:02:14,000
impossibility

47
00:02:18,400 --> 00:02:21,360
i think you know as an industry we have

48
00:02:21,360 --> 00:02:23,440
not really learned how to properly

49
00:02:23,440 --> 00:02:26,160
identify groups

50
00:02:26,160 --> 00:02:27,840
so we'll be saying these are chinese

51
00:02:27,840 --> 00:02:30,160
apts and i won't

52
00:02:30,160 --> 00:02:34,319
go into the jungle of distinguishing

53
00:02:34,840 --> 00:02:37,760
them so there was this uh announcement

54
00:02:37,760 --> 00:02:40,160
earlier today they found you know yet

55
00:02:40,160 --> 00:02:42,160
another apt with asian roots you know

56
00:02:42,160 --> 00:02:43,840
we're treated to this kind of

57
00:02:43,840 --> 00:02:45,920
announcements every day yeah i think it

58
00:02:45,920 --> 00:02:47,760
makes very little sense for us to try to

59
00:02:47,760 --> 00:02:51,480
distinguish between them

60
00:03:01,680 --> 00:03:04,879
investigations we ran

61
00:03:09,760 --> 00:03:11,920
which was later on called proxy logo and

62
00:03:11,920 --> 00:03:14,080
it was abused by chinese hackers all

63
00:03:14,080 --> 00:03:16,640
over the world

64
00:03:17,360 --> 00:03:18,480
you know

65
00:03:18,480 --> 00:03:20,560
we were able to see

66
00:03:20,560 --> 00:03:23,360
four organizations attacked using

67
00:03:23,360 --> 00:03:25,040
proxy logon

68
00:03:25,040 --> 00:03:27,519
in a matter of like 36 hours and in the

69
00:03:27,519 --> 00:03:29,680
following nine months

70
00:03:29,680 --> 00:03:34,319
we only saw like six different incidents

71
00:03:34,799 --> 00:03:36,239
and you may

72
00:03:36,239 --> 00:03:38,319
you may have thoughts that you know the

73
00:03:38,319 --> 00:03:40,239
chinese would only attack

74
00:03:40,239 --> 00:03:42,239
governmental institutions but no that's

75
00:03:42,239 --> 00:03:43,599
not the case

76
00:03:43,599 --> 00:03:45,760
like in many of these cases they were

77
00:03:45,760 --> 00:03:48,159
i.t contractors actually some of them

78
00:03:48,159 --> 00:03:51,440
were cyber security contractors and not

79
00:03:51,440 --> 00:03:55,120
just contractors to the public sector

80
00:03:55,120 --> 00:03:56,640
many of them were

81
00:03:56,640 --> 00:03:59,760
supporting or serving private

82
00:03:59,760 --> 00:04:01,120
corporations

83
00:04:01,120 --> 00:04:03,920
so this is my promise slide about

84
00:04:03,920 --> 00:04:05,519
tactics and techniques and i'm not going

85
00:04:05,519 --> 00:04:07,519
to talk about that and the reason is

86
00:04:07,519 --> 00:04:08,799
very simple

87
00:04:08,799 --> 00:04:11,519
last year these chinese gentlemen and

88
00:04:11,519 --> 00:04:14,480
ladies did nothing that would

89
00:04:14,480 --> 00:04:17,040
really merit your attention i guess you

90
00:04:17,040 --> 00:04:19,040
know all this stuff about powershell and

91
00:04:19,040 --> 00:04:20,959
cmd and what have you

92
00:04:20,959 --> 00:04:23,919
and i think there was a given a report

93
00:04:23,919 --> 00:04:26,639
earlier today by german from group ib so

94
00:04:26,639 --> 00:04:27,919
i'm thinking they covered all these

95
00:04:27,919 --> 00:04:29,840
tactics and techniques

96
00:04:29,840 --> 00:04:33,599
so rather than repeat at all

97
00:04:35,360 --> 00:04:37,919
i will just say very briefly several

98
00:04:37,919 --> 00:04:39,440
things about the

99
00:04:39,440 --> 00:04:43,800
area shown in yellow here

100
00:04:45,759 --> 00:04:47,600
first one is exploitation of public

101
00:04:47,600 --> 00:04:49,919
facing applications and this uh includes

102
00:04:49,919 --> 00:04:51,600
proxy logon

103
00:04:51,600 --> 00:04:53,919
but there is also like a lots of web

104
00:04:53,919 --> 00:04:55,759
related stuff particular legacy

105
00:04:55,759 --> 00:04:58,320
applications

106
00:04:59,840 --> 00:05:03,039
the only case i want to cover

107
00:05:03,039 --> 00:05:06,560
is a cv 2019 3890

108
00:05:06,560 --> 00:05:08,800
and i'm covering it because i've not

109
00:05:08,800 --> 00:05:12,880
been able to find a single report

110
00:05:12,960 --> 00:05:15,280
stating that this one has been used in

111
00:05:15,280 --> 00:05:18,400
the world particularly

112
00:05:22,560 --> 00:05:24,960
i want to

113
00:05:35,840 --> 00:05:36,840
you know

114
00:05:36,840 --> 00:05:40,800
many many members of the cyber security

115
00:05:40,800 --> 00:05:43,840
industry got this you know spear

116
00:05:43,840 --> 00:05:46,080
phishing letter

117
00:05:46,080 --> 00:05:50,400
so this psa was released you know in

118
00:05:50,400 --> 00:05:54,560
november 11th of november 2021 and

119
00:05:54,560 --> 00:05:56,639
you know they tried actually

120
00:05:56,639 --> 00:05:59,520
spear fishing only spices like two days

121
00:05:59,520 --> 00:06:01,840
later tomorrow on fast track some

122
00:06:01,840 --> 00:06:04,000
experts will be talking like 20 minutes

123
00:06:04,000 --> 00:06:06,479
about this particular cv and i think it

124
00:06:06,479 --> 00:06:08,479
will be better for you to visit this

125
00:06:08,479 --> 00:06:10,400
particular or that particular report

126
00:06:10,400 --> 00:06:13,680
rather than listen to me here

127
00:06:13,680 --> 00:06:16,240
and again we'll go back to vipnet

128
00:06:16,240 --> 00:06:19,639
because uh

129
00:06:31,759 --> 00:06:33,600
so let's discuss the vulnerability that

130
00:06:33,600 --> 00:06:35,520
was exploited back then you know when

131
00:06:35,520 --> 00:06:37,280
people read solar winds i understand

132
00:06:37,280 --> 00:06:38,560
that may give you jitters but it's

133
00:06:38,560 --> 00:06:41,759
actually a different case

134
00:06:45,520 --> 00:06:47,600
i guess many of you here

135
00:06:47,600 --> 00:06:49,520
have been using dameware mini remote

136
00:06:49,520 --> 00:06:51,680
control which is actually good uh remote

137
00:06:51,680 --> 00:06:54,080
admin tool id administrators often use

138
00:06:54,080 --> 00:06:55,840
it

139
00:06:55,840 --> 00:06:57,120
organization

140
00:06:57,120 --> 00:07:00,919
so one of these organizations

141
00:07:05,680 --> 00:07:06,880
and it turned out that you know the

142
00:07:06,880 --> 00:07:09,280
managing port of uh this software was

143
00:07:09,280 --> 00:07:10,560
exposed

144
00:07:10,560 --> 00:07:12,560
so they sent their disk sales we started

145
00:07:12,560 --> 00:07:16,199
analyzing this case

146
00:07:29,759 --> 00:07:32,240
which suggested that an executable could

147
00:07:32,240 --> 00:07:35,599
have been launched from c windows 10

148
00:07:35,599 --> 00:07:38,400
now in real life a binary launch from c

149
00:07:38,400 --> 00:07:42,000
windows stamp tells you nothing right

150
00:07:42,479 --> 00:07:44,720
next we started the usl log which is yet

151
00:07:44,720 --> 00:07:47,360
another artifact which effectively locks

152
00:07:47,360 --> 00:07:49,759
all file related operations

153
00:07:49,759 --> 00:07:51,360
and we found that pretty much at the

154
00:07:51,360 --> 00:07:53,120
same time

155
00:07:53,120 --> 00:07:55,360
a log was created

156
00:07:55,360 --> 00:07:57,680
which could be easily easily found

157
00:07:57,680 --> 00:07:59,759
online when searched were together with

158
00:07:59,759 --> 00:08:01,919
the name of the executable

159
00:08:01,919 --> 00:08:04,960
and google told us that this was uh

160
00:08:04,960 --> 00:08:08,638
this particular software dame

161
00:08:10,400 --> 00:08:12,960
and so as we analyze am cache which is

162
00:08:12,960 --> 00:08:14,560
another

163
00:08:14,560 --> 00:08:17,280
branch of the register which is uh

164
00:08:17,280 --> 00:08:18,400
logging

165
00:08:18,400 --> 00:08:20,319
process has been launched in the system

166
00:08:20,319 --> 00:08:22,360
we made the conclusion that the

167
00:08:22,360 --> 00:08:24,879
executable file was running the

168
00:08:24,879 --> 00:08:26,479
operating system

169
00:08:26,479 --> 00:08:28,800
and he can actually see

170
00:08:28,800 --> 00:08:31,199
this overlap of timestamps and this is

171
00:08:31,199 --> 00:08:32,320
how

172
00:08:32,320 --> 00:08:34,159
forensics experts often make their

173
00:08:34,159 --> 00:08:36,718
conclusions

174
00:08:38,240 --> 00:08:40,240
so the service themselves you know

175
00:08:40,240 --> 00:08:42,000
itself has logs

176
00:08:42,000 --> 00:08:44,240
and you know sometimes you know these

177
00:08:44,240 --> 00:08:45,440
locks will

178
00:08:45,440 --> 00:08:49,680
talk about errors same case here

179
00:08:50,959 --> 00:08:52,800
has got two service locks

180
00:08:52,800 --> 00:08:54,959
where

181
00:09:09,839 --> 00:09:11,680
for this particular vulnerability is

182
00:09:11,680 --> 00:09:13,920
available on github

183
00:09:13,920 --> 00:09:16,560
and it contains the same executable file

184
00:09:16,560 --> 00:09:18,720
it's actually exploiting

185
00:09:18,720 --> 00:09:19,920
the same

186
00:09:19,920 --> 00:09:22,000
service which is authenticated through

187
00:09:22,000 --> 00:09:24,720
smart cards so you know it does

188
00:09:24,720 --> 00:09:25,839
create

189
00:09:25,839 --> 00:09:27,680
you know you know all it serves as a

190
00:09:27,680 --> 00:09:30,800
puzzle it clicks together

191
00:09:34,080 --> 00:09:36,000
we are going to talk about malware code

192
00:09:36,000 --> 00:09:38,320
today

193
00:09:38,399 --> 00:09:40,480
and here in this slide i've tried

194
00:09:40,480 --> 00:09:43,760
listing all the families of malware that

195
00:09:43,760 --> 00:09:46,080
we saw in 2021 in the territory of the

196
00:09:46,080 --> 00:09:47,680
russian federation

197
00:09:47,680 --> 00:09:49,600
the right-hand part lists all the things

198
00:09:49,600 --> 00:09:51,519
we are not going to discuss

199
00:09:51,519 --> 00:09:54,160
because it makes no sense as is the case

200
00:09:54,160 --> 00:09:57,120
with cobble strikes

201
00:09:57,920 --> 00:09:59,519
or because you know we have already

202
00:09:59,519 --> 00:10:01,519
covered so this uh topics at other

203
00:10:01,519 --> 00:10:05,399
conferences such as

204
00:10:17,680 --> 00:10:20,640
they actually have some tweaks and

205
00:10:20,640 --> 00:10:23,279
changes that could be of interest

206
00:10:23,279 --> 00:10:26,880
to malware researchers

207
00:10:26,959 --> 00:10:30,160
let's start with shadow pads

208
00:10:30,160 --> 00:10:33,600
now it's uh one of the most popular tool

209
00:10:33,600 --> 00:10:36,720
sets of chinese apts

210
00:10:36,720 --> 00:10:39,760
you know when others of support and uh

211
00:10:39,760 --> 00:10:42,240
cleaner were broken it was another

212
00:10:42,240 --> 00:10:44,560
supply chain attack it was the time when

213
00:10:44,560 --> 00:10:46,880
shadow that was first noticed so to

214
00:10:46,880 --> 00:10:49,120
speak

215
00:10:50,079 --> 00:10:52,480
the modules for the shadow that's they

216
00:10:52,480 --> 00:10:54,640
physically sit in the register

217
00:10:54,640 --> 00:10:57,279
they've got their own ideas

218
00:10:57,279 --> 00:11:00,920
and until this year

219
00:11:02,160 --> 00:11:04,320
and they could be google so you could

220
00:11:04,320 --> 00:11:08,240
actually google for shadow pad 104 and

221
00:11:08,240 --> 00:11:10,000
any vendor report

222
00:11:10,000 --> 00:11:11,839
what explainer this is module such and

223
00:11:11,839 --> 00:11:14,839
such

224
00:11:37,360 --> 00:11:39,279
which effectively should enable you to

225
00:11:39,279 --> 00:11:43,040
run any function in the operating

226
00:11:50,640 --> 00:11:53,710
[Music]

227
00:11:54,959 --> 00:11:57,600
module in the register and we'll write

228
00:11:57,600 --> 00:12:00,560
it into the memory it's a position

229
00:12:00,560 --> 00:12:02,720
independent shell code which has its own

230
00:12:02,720 --> 00:12:04,639
header

231
00:12:04,639 --> 00:12:06,160
but it's not the

232
00:12:06,160 --> 00:12:08,639
explorer

233
00:12:08,639 --> 00:12:10,959
here

234
00:12:23,279 --> 00:12:25,920
the first thing you are going to notice

235
00:12:25,920 --> 00:12:26,959
is that

236
00:12:26,959 --> 00:12:29,120
hey

237
00:12:29,120 --> 00:12:31,360
during the

238
00:12:31,360 --> 00:12:33,920
lowering process of the main module

239
00:12:33,920 --> 00:12:37,680
there is some obfuscation happening

240
00:12:51,120 --> 00:12:53,120
technique

241
00:12:53,120 --> 00:12:56,079
and the disassembler

242
00:12:57,920 --> 00:13:00,320
you know bones really like it say if you

243
00:13:00,320 --> 00:13:01,920
don't separate this bite from the

244
00:13:01,920 --> 00:13:03,760
instruction you may show something

245
00:13:03,760 --> 00:13:05,360
different so what we're showing here on

246
00:13:05,360 --> 00:13:07,040
the right

247
00:13:07,040 --> 00:13:09,200
is an obfuscation of an api call so

248
00:13:09,200 --> 00:13:10,079
after

249
00:13:10,079 --> 00:13:13,599
dynamic resolving happens

250
00:13:17,519 --> 00:13:21,040
which makes this api calls

251
00:13:31,920 --> 00:13:35,120
so in 2021 cases the shadow belt that we

252
00:13:35,120 --> 00:13:37,200
saw

253
00:13:37,839 --> 00:13:40,000
didn't use any of this obfuscation

254
00:13:40,000 --> 00:13:41,680
techniques i don't know why maybe they

255
00:13:41,680 --> 00:13:43,519
just got tired

256
00:13:43,519 --> 00:13:47,519
or maybe lots of uh detection tools

257
00:13:47,519 --> 00:13:49,839
were trained on this particular element

258
00:13:49,839 --> 00:13:53,440
of the codes but they dispensed with it

259
00:13:53,440 --> 00:13:56,880
also they changed the module header

260
00:13:56,880 --> 00:13:59,760
and interestingly

261
00:14:00,079 --> 00:14:03,279
if you read it from bottom to top to top

262
00:14:03,279 --> 00:14:06,320
you know you would see the timestamp

263
00:14:06,320 --> 00:14:10,480
string and the compilation time

264
00:14:10,480 --> 00:14:12,240
could be read you know throughout the

265
00:14:12,240 --> 00:14:13,120
years

266
00:14:13,120 --> 00:14:14,720
it was easy therefore to see when a

267
00:14:14,720 --> 00:14:17,839
particular plugin was created

268
00:14:18,000 --> 00:14:21,040
so unfortunately in 2021 cases were not

269
00:14:21,040 --> 00:14:23,839
able to obtain the timestamps i think

270
00:14:23,839 --> 00:14:26,079
they just you know sort of corrupted it

271
00:14:26,079 --> 00:14:27,120
maybe

272
00:14:27,120 --> 00:14:29,710
they were tired of this you know

273
00:14:29,710 --> 00:14:32,759
[Music]

274
00:14:37,600 --> 00:14:39,760
there is nothing particularly special

275
00:14:39,760 --> 00:14:41,680
about it

276
00:14:41,680 --> 00:14:45,160
but it is important

277
00:14:45,600 --> 00:14:47,600
because it has numerous features and

278
00:14:47,600 --> 00:14:49,519
functions however

279
00:14:49,519 --> 00:14:51,839
we were not able to

280
00:14:51,839 --> 00:14:54,079
you know build

281
00:14:54,079 --> 00:14:58,680
compile proper understanding of it

282
00:15:08,880 --> 00:15:11,360
and the final dll here has the single

283
00:15:11,360 --> 00:15:13,120
function of loading modules from a

284
00:15:13,120 --> 00:15:15,920
remote server

285
00:15:16,000 --> 00:15:18,240
and then loads this

286
00:15:18,240 --> 00:15:21,600
dlls into the operational memory

287
00:15:21,600 --> 00:15:24,600
um

288
00:15:28,160 --> 00:15:30,399
into an encrypted file with its own

289
00:15:30,399 --> 00:15:32,320
extension which you know will persist in

290
00:15:32,320 --> 00:15:34,000
the operating system

291
00:15:34,000 --> 00:15:37,279
now the code shows that the creators

292
00:15:37,279 --> 00:15:40,720
have provided for up to 16 modules

293
00:15:40,720 --> 00:15:43,440
for this malware

294
00:15:43,440 --> 00:15:46,399
and after everything has been loaded by

295
00:15:46,399 --> 00:15:48,399
the main module it will collect all the

296
00:15:48,399 --> 00:15:50,240
encrypted files

297
00:15:50,240 --> 00:15:54,600
and we'll send them to their cnc

298
00:16:06,800 --> 00:16:09,120
they don't really merit any description

299
00:16:09,120 --> 00:16:10,000
they

300
00:16:10,000 --> 00:16:11,839
contain the usual api calls it's the

301
00:16:11,839 --> 00:16:14,480
third module which we found interesting

302
00:16:14,480 --> 00:16:18,079
so this one creates a window

303
00:16:18,240 --> 00:16:19,920
it tracks

304
00:16:19,920 --> 00:16:22,920
events

305
00:16:23,120 --> 00:16:25,600
device retrieval type so

306
00:16:25,600 --> 00:16:27,519
device connection or device retrieval

307
00:16:27,519 --> 00:16:29,520
type

308
00:16:29,520 --> 00:16:31,360
[Music]

309
00:16:31,360 --> 00:16:34,360
of

310
00:16:45,270 --> 00:16:48,380
[Music]

311
00:16:57,839 --> 00:17:00,800
a particular rng algorithm

312
00:17:00,800 --> 00:17:03,440
from what i know north korean dudes and

313
00:17:03,440 --> 00:17:06,240
iranian hackers previously used the mrsa

314
00:17:06,240 --> 00:17:07,439
and tempest

315
00:17:07,439 --> 00:17:09,039
method

316
00:17:09,039 --> 00:17:11,520
next one i want to talk about is

317
00:17:11,520 --> 00:17:13,280
powermate

318
00:17:13,280 --> 00:17:16,400
now i took this name from kaspersky

319
00:17:16,400 --> 00:17:19,199
i think we actually

320
00:17:28,880 --> 00:17:30,720
and again this is a public information

321
00:17:30,720 --> 00:17:32,160
right so these are reports you have to

322
00:17:32,160 --> 00:17:33,360
pay for

323
00:17:33,360 --> 00:17:36,240
so commercial ti reports

324
00:17:36,240 --> 00:17:38,720
sad that you know this still

325
00:17:38,720 --> 00:17:42,000
uh we're seen in vietnam

326
00:17:42,000 --> 00:17:44,720
and we were seeing this still used

327
00:17:44,720 --> 00:17:46,720
against i guess public sector

328
00:17:46,720 --> 00:17:48,720
organizations in russia

329
00:17:48,720 --> 00:17:52,080
and in 2020 and late 2021 we found it in

330
00:17:52,080 --> 00:17:52,880
a

331
00:17:52,880 --> 00:17:55,440
private corporation in russia again it's

332
00:17:55,440 --> 00:17:58,240
a semi-public

333
00:17:59,440 --> 00:18:01,200
we company it was okay to actually talk

334
00:18:01,200 --> 00:18:03,280
about it

335
00:18:03,280 --> 00:18:05,039
it's a pretty simple case you know due

336
00:18:05,039 --> 00:18:08,640
to dll hijacking of this service

337
00:18:08,640 --> 00:18:12,320
that does uh distribution of ipsec keys

338
00:18:12,320 --> 00:18:15,840
dll is loaded

339
00:18:16,559 --> 00:18:19,520
it is to identify the next stager

340
00:18:19,520 --> 00:18:21,600
written on.net

341
00:18:21,600 --> 00:18:25,200
and summon methods inside it

342
00:18:25,200 --> 00:18:26,880
so what you see here is an excerpt of

343
00:18:26,880 --> 00:18:29,520
the dot-net codes which is looking for a

344
00:18:29,520 --> 00:18:30,960
png picture

345
00:18:30,960 --> 00:18:33,039
in a particular folder

346
00:18:33,039 --> 00:18:36,160
which you know has width over 32 pixels

347
00:18:36,160 --> 00:18:38,559
and height over 120 pixels and tries to

348
00:18:38,559 --> 00:18:40,320
decode it

349
00:18:40,320 --> 00:18:42,960
so this is the

350
00:18:54,320 --> 00:18:58,160
so it is this algorithm that enables

351
00:18:58,160 --> 00:19:00,160
creation of pictures

352
00:19:00,160 --> 00:19:03,919
steganographic pictures i should say

353
00:19:03,919 --> 00:19:06,080
which will not attract anybody's

354
00:19:06,080 --> 00:19:08,559
scrutiny usually

355
00:19:08,559 --> 00:19:10,880
so power shell codes can be

356
00:19:10,880 --> 00:19:13,039
extracted from it

357
00:19:13,039 --> 00:19:15,600
so it's compressed and encrypted then it

358
00:19:15,600 --> 00:19:18,720
sort of processes itself

359
00:19:18,720 --> 00:19:21,919
and then you know a fully functional rat

360
00:19:21,919 --> 00:19:23,760
will be launched so

361
00:19:23,760 --> 00:19:25,840
lengthy one fifteen hundred strings and

362
00:19:25,840 --> 00:19:27,840
in terms of functionality

363
00:19:27,840 --> 00:19:30,480
you know he has all the key features and

364
00:19:30,480 --> 00:19:34,160
functions you would expect in a wrap

365
00:19:35,440 --> 00:19:39,480
the next still set we found

366
00:19:49,360 --> 00:19:51,360
and people in positive technologies

367
00:19:51,360 --> 00:19:53,760
called it a ram shell

368
00:19:53,760 --> 00:19:56,320
so back in 2017

369
00:19:56,320 --> 00:19:59,760
it was first discovered in the wild

370
00:19:59,760 --> 00:20:02,000
and back then it was written on c and c

371
00:20:02,000 --> 00:20:05,000
plus

372
00:20:10,960 --> 00:20:14,240
migrated to cloud services and they used

373
00:20:14,240 --> 00:20:19,120
mail or yandex or dropbox for the cnc

374
00:20:28,640 --> 00:20:30,640
people who previously wrote a lot on c

375
00:20:30,640 --> 00:20:32,400
and c plus plus

376
00:20:32,400 --> 00:20:34,880
fortunately

377
00:20:39,300 --> 00:20:42,399
[Music]

378
00:20:43,600 --> 00:20:46,600
is

379
00:20:58,640 --> 00:21:03,840
suspicious activity in may 2021

380
00:21:11,679 --> 00:21:13,840
which means that you know we do not see

381
00:21:13,840 --> 00:21:16,080
the head so to speak of vip nuts

382
00:21:16,080 --> 00:21:20,320
so we saw these processes being launched

383
00:21:25,440 --> 00:21:27,200
you know they need to collect

384
00:21:27,200 --> 00:21:29,120
information to attach a ticket and an

385
00:21:29,120 --> 00:21:31,200
escalate or not

386
00:21:31,200 --> 00:21:34,480
the apparent process for this process

387
00:21:34,480 --> 00:21:37,600
is drive api

388
00:21:37,600 --> 00:21:40,600
foreign

389
00:21:54,000 --> 00:21:56,480
we discovered that the parents process

390
00:21:56,480 --> 00:22:01,280
for drift api is a legitimate process

391
00:22:01,280 --> 00:22:05,360
for the updates of the vip system

392
00:22:05,360 --> 00:22:07,600
now this actually got people in the

393
00:22:07,600 --> 00:22:10,400
first line interested

394
00:22:10,400 --> 00:22:12,640
because on the host there is no log on

395
00:22:12,640 --> 00:22:15,520
type 3 or log on type 10.

396
00:22:15,520 --> 00:22:19,760
which means that rpc smb rdp supports

397
00:22:19,760 --> 00:22:22,080
nothing

398
00:22:22,240 --> 00:22:24,840
so this chain of malicious

399
00:22:24,840 --> 00:22:27,039
processes seems to have appeared from

400
00:22:27,039 --> 00:22:28,080
nowhere

401
00:22:28,080 --> 00:22:31,360
so they escalated to us

402
00:22:32,320 --> 00:22:33,520
what would be the first thing you would

403
00:22:33,520 --> 00:22:35,679
do

404
00:22:38,240 --> 00:22:41,559
okay google

405
00:22:51,919 --> 00:22:55,360
so create a fake file

406
00:22:55,360 --> 00:22:58,080
with malicious code masquerading as an

407
00:22:58,080 --> 00:22:59,280
update

408
00:22:59,280 --> 00:23:01,360
however the version of the client

409
00:23:01,360 --> 00:23:04,080
was higher than the one mentioned in the

410
00:23:04,080 --> 00:23:05,280
release

411
00:23:05,280 --> 00:23:07,360
actually if you read it in detail you

412
00:23:07,360 --> 00:23:10,479
will see this phrase

413
00:23:14,960 --> 00:23:16,799
we don't we didn't really have any

414
00:23:16,799 --> 00:23:19,520
sessions nobody really accessed the

415
00:23:19,520 --> 00:23:22,240
whole system

416
00:23:50,720 --> 00:23:53,840
so we asked our admins to install vipnet

417
00:23:53,840 --> 00:23:55,200
and we played with it

418
00:23:55,200 --> 00:23:57,520
so there is this vipnet administrator

419
00:23:57,520 --> 00:23:59,360
which has this function for

420
00:23:59,360 --> 00:24:01,600
software updates and there you should

421
00:24:01,600 --> 00:24:04,080
actually upload the archive and it will

422
00:24:04,080 --> 00:24:06,480
check if it's a legit

423
00:24:06,480 --> 00:24:09,440
update or not

424
00:24:10,880 --> 00:24:12,320
now let's uh

425
00:24:12,320 --> 00:24:15,440
check out how it works

426
00:24:15,440 --> 00:24:16,960
because you know had we not done that

427
00:24:16,960 --> 00:24:18,640
but wouldn't have been able to address

428
00:24:18,640 --> 00:24:21,120
it properly

429
00:24:25,600 --> 00:24:28,240
we took the archive with a legitimate

430
00:24:28,240 --> 00:24:30,640
update because we do have admins of

431
00:24:30,640 --> 00:24:33,039
vipnet

432
00:24:36,080 --> 00:24:38,480
and we had to do some reverse analysis

433
00:24:38,480 --> 00:24:40,880
of executables inside it

434
00:24:40,880 --> 00:24:42,640
and it turned out that there is a file

435
00:24:42,640 --> 00:24:45,279
called action in as part of the archive

436
00:24:45,279 --> 00:24:47,200
i will give you details on each phone

437
00:24:47,200 --> 00:24:50,159
actually so this one describes the

438
00:24:50,159 --> 00:24:52,400
actions that the system is going to go

439
00:24:52,400 --> 00:24:54,159
through during the update process there

440
00:24:54,159 --> 00:24:56,960
is also the executable update file

441
00:24:56,960 --> 00:24:57,760
or

442
00:24:57,760 --> 00:25:01,559
the archive file

443
00:25:03,520 --> 00:25:05,919
as many archives inside each other

444
00:25:05,919 --> 00:25:07,200
as you want

445
00:25:07,200 --> 00:25:08,880
so you can indicate there is more inside

446
00:25:08,880 --> 00:25:11,279
there is more inside and so on

447
00:25:11,279 --> 00:25:14,279
uh

448
00:25:23,440 --> 00:25:25,200
description and version files don't

449
00:25:25,200 --> 00:25:26,960
matter at all this is a text file so you

450
00:25:26,960 --> 00:25:29,840
can put any information

451
00:25:33,919 --> 00:25:36,240
action

452
00:25:36,960 --> 00:25:39,760
comes in two versions

453
00:25:39,760 --> 00:25:42,240
it's either archive archive this is what

454
00:25:42,240 --> 00:25:45,440
i mentioned previously a nested archive

455
00:25:45,440 --> 00:25:47,440
this way the updating system will

456
00:25:47,440 --> 00:25:50,240
understand that there is another archive

457
00:25:50,240 --> 00:25:52,960
internally

458
00:25:55,200 --> 00:25:57,679
which means that the update is inside

459
00:25:57,679 --> 00:25:59,360
this current archive so you need to

460
00:25:59,360 --> 00:26:02,320
launch the exit file

461
00:26:02,720 --> 00:26:06,000
it's not that bad see they are actually

462
00:26:06,000 --> 00:26:08,240
checking their signature through verify

463
00:26:08,240 --> 00:26:10,960
trust zigza which is an api call

464
00:26:10,960 --> 00:26:13,600
and they will even check for the digital

465
00:26:13,600 --> 00:26:15,600
signature

466
00:26:15,600 --> 00:26:18,799
to be valid to be in fact signed by the

467
00:26:18,799 --> 00:26:20,480
vendor

468
00:26:20,480 --> 00:26:24,919
so this is the list data file

469
00:26:37,600 --> 00:26:39,600
so i guess you can find a way to use

470
00:26:39,600 --> 00:26:42,158
this date as well

471
00:26:43,760 --> 00:26:44,559
so

472
00:26:44,559 --> 00:26:46,720
this is how updating works you know the

473
00:26:46,720 --> 00:26:49,840
archive arrives action info is checked

474
00:26:49,840 --> 00:26:52,240
but then the vendor's signature is

475
00:26:52,240 --> 00:26:54,000
checked

476
00:26:54,000 --> 00:26:55,919
against the hashtag

477
00:26:55,919 --> 00:26:57,840
if everything is okay you know it will

478
00:26:57,840 --> 00:27:00,000
launch

479
00:27:03,120 --> 00:27:06,120
yesterday

480
00:27:11,440 --> 00:27:13,679
but we were able to find traces of

481
00:27:13,679 --> 00:27:15,919
deleted files

482
00:27:15,919 --> 00:27:17,840
and you see the same names here these

483
00:27:17,840 --> 00:27:20,840
data

484
00:27:23,679 --> 00:27:28,159
and we also see a dll on lj 32 dll

485
00:27:28,159 --> 00:27:30,960
and it looks weird doesn't it and it did

486
00:27:30,960 --> 00:27:33,279
stimulate us to further research so we

487
00:27:33,279 --> 00:27:35,279
found an executable which is part of

488
00:27:35,279 --> 00:27:39,200
bibnet and it's signed by vipnets

489
00:27:43,039 --> 00:27:45,360
so what they did was to take an open

490
00:27:45,360 --> 00:27:47,520
source binary and science and their

491
00:27:47,520 --> 00:27:50,399
digital signature is indeed valid

492
00:27:50,399 --> 00:27:53,600
the problem is you know it is vulnerable

493
00:27:53,600 --> 00:27:55,520
to dll hijacking

494
00:27:55,520 --> 00:27:57,440
which means that you can put a library

495
00:27:57,440 --> 00:28:00,440
next

496
00:28:04,080 --> 00:28:06,480
you know it like only the digital

497
00:28:06,480 --> 00:28:09,120
signature for the exam will be checked

498
00:28:09,120 --> 00:28:11,279
but not for the dll and then you will be

499
00:28:11,279 --> 00:28:14,159
able to execute any arbitrary code

500
00:28:14,159 --> 00:28:19,120
in the dll so we created an archive

501
00:28:19,120 --> 00:28:22,719
and we put it next to the binary

502
00:28:22,960 --> 00:28:24,240
command

503
00:28:24,240 --> 00:28:26,960
action info it's like this lha exact

504
00:28:26,960 --> 00:28:28,159
extra command

505
00:28:28,159 --> 00:28:30,240
then we calculate hashes for the whole

506
00:28:30,240 --> 00:28:31,919
archive

507
00:28:31,919 --> 00:28:34,640
in the list data file

508
00:28:34,640 --> 00:28:37,120
and that was it

509
00:28:39,440 --> 00:28:42,000
didn't even change anything in it we

510
00:28:42,000 --> 00:28:44,080
just added the shell code to it that

511
00:28:44,080 --> 00:28:46,480
would launch cmd example

512
00:28:46,480 --> 00:28:48,960
and this is the result

513
00:28:48,960 --> 00:28:51,200
we're able to send

514
00:28:51,200 --> 00:28:53,760
an update

515
00:28:54,240 --> 00:28:59,120
and then we initiated arbitrary

516
00:29:25,360 --> 00:29:27,279
talk horizontally but all components of

517
00:29:27,279 --> 00:29:30,559
vibrato beat me

518
00:29:30,720 --> 00:29:31,679
or

519
00:29:31,679 --> 00:29:33,840
secure transport

520
00:29:33,840 --> 00:29:35,600
or file exchange

521
00:29:35,600 --> 00:29:38,480
all this stuff works through

522
00:29:38,480 --> 00:29:41,480
converter

523
00:29:57,919 --> 00:30:00,960
and he uses a random key to encrypt the

524
00:30:00,960 --> 00:30:03,919
data and the random key is

525
00:30:03,919 --> 00:30:06,640
encrypted with the exchange key so if

526
00:30:06,640 --> 00:30:08,960
you want to

527
00:30:10,000 --> 00:30:11,919
which obviously makes sense you know if

528
00:30:11,919 --> 00:30:14,159
you're using that

529
00:30:14,159 --> 00:30:16,080
so you're sending a letter like uh hello

530
00:30:16,080 --> 00:30:19,360
john and you know it's converted and

531
00:30:19,360 --> 00:30:21,120
that is

532
00:30:21,120 --> 00:30:24,000
a special service which attracts every

533
00:30:24,000 --> 00:30:26,799
three seconds

534
00:30:26,880 --> 00:30:28,960
new files are delivered to the out

535
00:30:28,960 --> 00:30:29,840
folder

536
00:30:29,840 --> 00:30:32,000
so once the file shows there you know it

537
00:30:32,000 --> 00:30:34,480
will send it to the coordinator and it

538
00:30:34,480 --> 00:30:36,960
doesn't check

539
00:31:02,720 --> 00:31:05,360
we are saying what is still a black box

540
00:31:05,360 --> 00:31:07,600
to us these were you know i.t

541
00:31:07,600 --> 00:31:10,159
contractors to our client

542
00:31:10,159 --> 00:31:12,720
and due to numerous reasons political

543
00:31:12,720 --> 00:31:13,919
among others

544
00:31:13,919 --> 00:31:16,240
we have not really done any incident

545
00:31:16,240 --> 00:31:18,720
response on their side you know we are

546
00:31:18,720 --> 00:31:22,399
still hypothesizing about it

547
00:31:23,279 --> 00:31:24,960
in the clients infrastructure that we

548
00:31:24,960 --> 00:31:26,480
are monitoring you know we are seeing

549
00:31:26,480 --> 00:31:28,080
this hospital

550
00:31:28,080 --> 00:31:30,159
and you know they would get you know

551
00:31:30,159 --> 00:31:33,840
these envelopes with updates

552
00:31:34,399 --> 00:31:36,959
as a result

553
00:31:37,039 --> 00:31:38,640
you know this vulnerability was

554
00:31:38,640 --> 00:31:41,039
exploited

555
00:31:41,039 --> 00:31:43,679
to launch malicious code yes to execute

556
00:31:43,679 --> 00:31:46,679
malicious

557
00:31:58,960 --> 00:32:01,279
a reverse shell if it was connected to

558
00:32:01,279 --> 00:32:03,279
the internet

559
00:32:03,279 --> 00:32:04,960
you know it would get a sample of the

560
00:32:04,960 --> 00:32:06,559
malicious uh

561
00:32:06,559 --> 00:32:08,399
software from the slide i showed

562
00:32:08,399 --> 00:32:11,440
previously with special functions

563
00:32:11,440 --> 00:32:14,480
for bypassing vipnet firewall i'll tell

564
00:32:14,480 --> 00:32:16,480
you more about it later so you just you

565
00:32:16,480 --> 00:32:19,440
know contained an element of code that

566
00:32:19,440 --> 00:32:23,720
was you know responsible for engineering

567
00:32:38,559 --> 00:32:40,480
required for reconnaissance and

568
00:32:40,480 --> 00:32:42,640
collection of information on the host

569
00:32:42,640 --> 00:32:45,039
after that it would delete

570
00:32:45,039 --> 00:32:48,000
all the logs related to mftp which is

571
00:32:48,000 --> 00:32:51,039
effectively responsible for

572
00:32:51,039 --> 00:32:54,080
exchange of envelopes which makes

573
00:32:54,080 --> 00:32:56,240
forensics much more difficult done

574
00:32:56,240 --> 00:32:58,559
now they would collect all the main

575
00:32:58,559 --> 00:33:00,720
information on configuration files uh

576
00:33:00,720 --> 00:33:02,159
keys

577
00:33:02,159 --> 00:33:05,039
business emails

578
00:33:06,640 --> 00:33:10,960
client firewall settings and various

579
00:33:22,960 --> 00:33:25,279
first stage is collection of information

580
00:33:25,279 --> 00:33:26,960
on the host

581
00:33:26,960 --> 00:33:28,720
and this is the kind of activity that

582
00:33:28,720 --> 00:33:31,120
our first line of defenses was able to

583
00:33:31,120 --> 00:33:32,559
spot

584
00:33:32,559 --> 00:33:37,320
so this is the information that you know

585
00:34:04,650 --> 00:34:06,880
[Music]

586
00:34:06,880 --> 00:34:09,679
in order to hide information on any

587
00:34:09,679 --> 00:34:12,159
updates being received

588
00:34:12,159 --> 00:34:13,760
it was easy to do that so you know they

589
00:34:13,760 --> 00:34:16,879
created an empty file and then they

590
00:34:16,879 --> 00:34:20,000
did a group copy

591
00:34:20,000 --> 00:34:22,480
sorry with the y flag which means that

592
00:34:22,480 --> 00:34:24,480
you know this request

593
00:34:24,480 --> 00:34:25,359
for

594
00:34:25,359 --> 00:34:27,839
overwriting would be suppressed be

595
00:34:27,839 --> 00:34:30,399
executed

596
00:34:31,679 --> 00:34:34,239
so this is the first file and you can

597
00:34:34,239 --> 00:34:37,440
see that a certain time

598
00:34:37,440 --> 00:34:39,839
packets of a particular size arrive to

599
00:34:39,839 --> 00:34:42,239
the host

600
00:34:42,800 --> 00:34:45,359
rslock you can actually update service

601
00:34:45,359 --> 00:34:48,560
lock you can actually see

602
00:34:48,560 --> 00:34:50,320
that it was extracting all sorts of

603
00:34:50,320 --> 00:34:52,560
things

604
00:34:53,839 --> 00:34:56,079
and you can see the gr code there which

605
00:34:56,079 --> 00:34:57,440
means that uh

606
00:34:57,440 --> 00:34:59,599
caches were checked

607
00:34:59,599 --> 00:35:00,839
check

608
00:35:00,839 --> 00:35:02,960
success which is that you know all

609
00:35:02,960 --> 00:35:05,040
digital signatures were checked and

610
00:35:05,040 --> 00:35:06,800
actually all this stuff was wiped as

611
00:35:06,800 --> 00:35:08,720
well

612
00:35:08,720 --> 00:35:11,680
mftp debug

613
00:35:11,920 --> 00:35:16,680
it contains a client

614
00:35:36,560 --> 00:35:38,560
administrator you can actually check it

615
00:35:38,560 --> 00:35:40,480
out so it shows that envelope was

616
00:35:40,480 --> 00:35:42,880
dispatched it was received and it shows

617
00:35:42,880 --> 00:35:44,720
the sizes and so you know if you're

618
00:35:44,720 --> 00:35:46,480
sending binaries

619
00:35:46,480 --> 00:35:48,480
naturally you know the size of the

620
00:35:48,480 --> 00:35:51,200
package will be different

621
00:35:51,200 --> 00:35:54,240
from you know a regular envelope

622
00:35:54,240 --> 00:35:56,400
so here you know rather than do

623
00:35:56,400 --> 00:35:57,760
something sophisticated they would

624
00:35:57,760 --> 00:36:00,240
simply wipe it

625
00:36:00,240 --> 00:36:02,160
and operations

626
00:36:02,160 --> 00:36:05,520
there are three folders

627
00:36:06,160 --> 00:36:08,160
where the malicious code

628
00:36:08,160 --> 00:36:09,520
would uh

629
00:36:09,520 --> 00:36:11,599
put the information in and put the files

630
00:36:11,599 --> 00:36:14,240
that have a specific elements in their

631
00:36:14,240 --> 00:36:16,320
names

632
00:36:16,320 --> 00:36:19,920
so debi obviously refers to databases

633
00:36:19,920 --> 00:36:22,079
and you know they will also be looking

634
00:36:22,079 --> 00:36:24,320
for xml files you know conflicts for

635
00:36:24,320 --> 00:36:26,800
whip now and you it contains some

636
00:36:26,800 --> 00:36:29,359
critical information it has some txt

637
00:36:29,359 --> 00:36:31,119
files containing information on the

638
00:36:31,119 --> 00:36:33,520
clients

639
00:36:33,599 --> 00:36:35,839
so you know they would

640
00:36:35,839 --> 00:36:40,759
file an archive from all these documents

641
00:36:46,400 --> 00:36:47,920
and you see that you know most

642
00:36:47,920 --> 00:36:49,520
importantly it's collected all the

643
00:36:49,520 --> 00:36:51,440
business emails and it would be easy to

644
00:36:51,440 --> 00:36:54,160
deduct really

645
00:37:07,359 --> 00:37:09,760
so you see the header the name of the

646
00:37:09,760 --> 00:37:11,200
envelope

647
00:37:11,200 --> 00:37:14,320
and the size of it which corresponds to

648
00:37:14,320 --> 00:37:17,599
host information then it's encrypted

649
00:37:17,599 --> 00:37:20,800
and it becomes something like this

650
00:37:21,760 --> 00:37:23,839
the

651
00:37:35,040 --> 00:37:37,200
service header ends with the address of

652
00:37:37,200 --> 00:37:38,880
the recipient which means that all the

653
00:37:38,880 --> 00:37:42,560
information that mftp2 needs

654
00:37:42,560 --> 00:37:45,119
to resend the envelope to the card in a

655
00:37:45,119 --> 00:37:47,040
trend for the coordinator to send it to

656
00:37:47,040 --> 00:37:50,200
the recipient

657
00:38:02,839 --> 00:38:05,839
information you know they would write uh

658
00:38:05,839 --> 00:38:07,119
some

659
00:38:07,119 --> 00:38:09,040
bites there and they would also do some

660
00:38:09,040 --> 00:38:11,200
betting and search random bites and they

661
00:38:11,200 --> 00:38:12,720
also

662
00:38:12,720 --> 00:38:14,590
wrote the same information there

663
00:38:14,590 --> 00:38:17,359
[Music]

664
00:38:17,359 --> 00:38:19,119
and then encrypted data on the host

665
00:38:19,119 --> 00:38:20,240
follows

666
00:38:20,240 --> 00:38:22,000
together with the archive with the

667
00:38:22,000 --> 00:38:25,520
information being exfiltrated

668
00:38:28,160 --> 00:38:31,920
note that they manually provide names to

669
00:38:31,920 --> 00:38:33,040
envelopes

670
00:38:33,040 --> 00:38:35,359
if it's sort of built in we can use it

671
00:38:35,359 --> 00:38:36,880
as an ioc

672
00:38:36,880 --> 00:38:40,079
indicator of compromise

673
00:38:40,320 --> 00:38:43,280
and coordinators also have their logs

674
00:38:43,280 --> 00:38:46,480
and they also have their mfcb service so

675
00:38:46,480 --> 00:38:50,960
we can actually look for this ioc

676
00:38:51,440 --> 00:38:54,079
we can actually look

677
00:38:54,079 --> 00:38:57,040
for well the recipient of this envelope

678
00:38:57,040 --> 00:39:00,480
we would do it in ideal world

679
00:39:11,040 --> 00:39:13,119
nobody checks for consistency between

680
00:39:13,119 --> 00:39:15,040
the address there and the address in the

681
00:39:15,040 --> 00:39:16,400
header

682
00:39:16,400 --> 00:39:19,200
which tells me it's spoofing right if we

683
00:39:19,200 --> 00:39:20,960
know the real address of our vipnet

684
00:39:20,960 --> 00:39:22,320
administrator

685
00:39:22,320 --> 00:39:24,400
we can put it in the envelope

686
00:39:24,400 --> 00:39:26,960
and we can camouflage all the envelopes

687
00:39:26,960 --> 00:39:28,560
as if they're coming from the car the

688
00:39:28,560 --> 00:39:30,320
nature and we'll never know the real

689
00:39:30,320 --> 00:39:32,720
address this way

690
00:39:32,720 --> 00:39:35,599
we chose that you know oh actually the

691
00:39:35,599 --> 00:39:37,040
screenshot shows that this address

692
00:39:37,040 --> 00:39:40,800
simply doesn't exist on the network

693
00:39:48,400 --> 00:39:49,839
you know one of the tool sets i

694
00:39:49,839 --> 00:39:51,200
previously

695
00:39:51,200 --> 00:39:52,800
mentioned

696
00:39:52,800 --> 00:39:55,359
would be uploaded with a specific

697
00:39:55,359 --> 00:39:59,759
function for bypassing that firewall

698
00:40:02,000 --> 00:40:04,079
there is an application control function

699
00:40:04,079 --> 00:40:05,760
there which is actually good

700
00:40:05,760 --> 00:40:08,319
because it enables you to allow a

701
00:40:08,319 --> 00:40:10,720
particular process to do say

702
00:40:10,720 --> 00:40:12,960
network activity for example we can only

703
00:40:12,960 --> 00:40:15,680
allow operating chrome to access

704
00:40:15,680 --> 00:40:16,880
the internet

705
00:40:16,880 --> 00:40:18,640
and then you know effectively malicious

706
00:40:18,640 --> 00:40:20,720
code that will try to access it will be

707
00:40:20,720 --> 00:40:21,599
blocked

708
00:40:21,599 --> 00:40:25,040
instrumentary so it does

709
00:40:35,200 --> 00:40:36,640
so they are sending data directly

710
00:40:36,640 --> 00:40:38,800
through device controller

711
00:40:38,800 --> 00:40:41,920
to vipnet driver responsible for

712
00:40:41,920 --> 00:40:44,880
application control

713
00:40:44,960 --> 00:40:50,280
so the sound pit process as data

714
00:40:54,000 --> 00:40:55,200
you know this information in the

715
00:40:55,200 --> 00:40:57,440
internal list and when the application

716
00:40:57,440 --> 00:40:59,040
tries to

717
00:40:59,040 --> 00:41:01,359
you know go outside

718
00:41:01,359 --> 00:41:03,839
it will be allowed now the problem

719
00:41:03,839 --> 00:41:07,119
is that they do not send it directly

720
00:41:07,119 --> 00:41:09,680
using the vipnet tools which means that

721
00:41:09,680 --> 00:41:12,960
it will not be shown in the logs

722
00:41:12,960 --> 00:41:14,880
nobody about the driver will know about

723
00:41:14,880 --> 00:41:16,240
it

724
00:41:16,240 --> 00:41:18,400
so we're thinking come on

725
00:41:18,400 --> 00:41:20,800
you know they've been very serious about

726
00:41:20,800 --> 00:41:22,079
it

727
00:41:22,079 --> 00:41:22,880
so

728
00:41:22,880 --> 00:41:24,240
you know they've done their reverse

729
00:41:24,240 --> 00:41:26,480
engineering and we've done their reverse

730
00:41:26,480 --> 00:41:29,119
engineering as well later on we realized

731
00:41:29,119 --> 00:41:30,079
yes

732
00:41:30,079 --> 00:41:34,280
it doesn't have to be that difficult

733
00:41:36,880 --> 00:41:39,200
api dll you know you can check the

734
00:41:39,200 --> 00:41:41,920
classes and the methods and

735
00:41:41,920 --> 00:41:43,760
there is a method there called add room

736
00:41:43,760 --> 00:41:45,440
which actually tells you what you need

737
00:41:45,440 --> 00:41:47,520
to send and you don't really need to do

738
00:41:47,520 --> 00:41:51,520
any reverse analysis or debugging

739
00:41:59,040 --> 00:42:01,280
i want to say that well you can actually

740
00:42:01,280 --> 00:42:03,280
think all you want to think about this

741
00:42:03,280 --> 00:42:05,280
vulnerability and you probably know that

742
00:42:05,280 --> 00:42:07,040
the vendor has not agreed it's a

743
00:42:07,040 --> 00:42:08,560
vulnerability

744
00:42:08,560 --> 00:42:10,400
and dll hijacking doesn't really

745
00:42:10,400 --> 00:42:12,800
surprise anybody in 2022 particularly

746
00:42:12,800 --> 00:42:15,040
when it's used by chinese hackers there

747
00:42:15,040 --> 00:42:17,200
is a minor problem however

748
00:42:17,200 --> 00:42:19,839
there are loads and loads of vip net

749
00:42:19,839 --> 00:42:21,839
networks in this country and many of

750
00:42:21,839 --> 00:42:22,960
them

751
00:42:22,960 --> 00:42:23,760
you know

752
00:42:23,760 --> 00:42:24,800
are

753
00:42:24,800 --> 00:42:27,040
apparently closed but at the same time

754
00:42:27,040 --> 00:42:29,040
you know they're linking governmental

755
00:42:29,040 --> 00:42:31,359
institutions or banks or private

756
00:42:31,359 --> 00:42:34,160
corporations and you often fail to know

757
00:42:34,160 --> 00:42:35,839
who is administering the network and

758
00:42:35,839 --> 00:42:39,078
this is

759
00:42:57,040 --> 00:43:00,079
so it's more serious than it may seem

760
00:43:00,079 --> 00:43:01,920
and my recommendation is how you pay

761
00:43:01,920 --> 00:43:04,560
attention to it

762
00:43:05,280 --> 00:43:06,960
naturally

763
00:43:06,960 --> 00:43:08,480
we told the vendor

764
00:43:08,480 --> 00:43:10,640
all about it right away how do you

765
00:43:10,640 --> 00:43:13,118
understand

766
00:43:20,960 --> 00:43:22,319
and they said that you know we were

767
00:43:22,319 --> 00:43:25,720
doing uh

768
00:43:37,359 --> 00:43:39,680
the regulator is saying that you know

769
00:43:39,680 --> 00:43:42,160
you should better check how your av

770
00:43:42,160 --> 00:43:44,160
systems get triggered and if you have

771
00:43:44,160 --> 00:43:46,960
vipnet clients

772
00:43:46,960 --> 00:43:49,200
and you're not entirely sure who is the

773
00:43:49,200 --> 00:43:51,200
who the administrator is or if you're

774
00:43:51,200 --> 00:43:52,960
not entirely sure which system you

775
00:43:52,960 --> 00:43:55,200
belong to i suggest you pay more

776
00:43:55,200 --> 00:43:57,280
attention to it this really puts a lid

777
00:43:57,280 --> 00:43:58,960
on my presentation thank you very much

778
00:43:58,960 --> 00:44:03,160
and ask your questions if you haven't

779
00:44:03,410 --> 00:44:06,480
[Applause]

780
00:44:09,440 --> 00:44:12,599
over there

781
00:44:30,720 --> 00:44:33,040
can please tell us more about how you

782
00:44:33,040 --> 00:44:34,800
dealt with the vendor

783
00:44:34,800 --> 00:44:38,720
so you told them there is dll hijacking

784
00:44:38,720 --> 00:44:40,960
i'm seriously interested in uh what was

785
00:44:40,960 --> 00:44:44,480
this with your discussion like

786
00:44:45,119 --> 00:44:49,920
did you give him the signed exam file

787
00:44:53,920 --> 00:44:56,480
and about bypassing the application

788
00:44:56,480 --> 00:44:58,319
control

789
00:44:58,319 --> 00:45:01,839
and the envelope right

790
00:45:02,160 --> 00:45:04,079
and i understand that you know you can

791
00:45:04,079 --> 00:45:06,400
actually sign the envelope whoever you

792
00:45:06,400 --> 00:45:07,920
are

793
00:45:07,920 --> 00:45:11,040
so you ask them two questions

794
00:45:11,040 --> 00:45:14,160
now we first notify them about a way to

795
00:45:14,160 --> 00:45:16,640
bypass application control

796
00:45:16,640 --> 00:45:19,920
and a little hijacking

797
00:45:20,480 --> 00:45:22,319
you know the way they do

798
00:45:22,319 --> 00:45:26,560
security check is not exactly a bug

799
00:45:27,599 --> 00:45:29,680
i'm wondering if it's

800
00:45:29,680 --> 00:45:31,839
if it's still available i mean as an

801
00:45:31,839 --> 00:45:35,280
offense guy i'm interested

802
00:45:35,280 --> 00:45:36,560
well would you like to take this

803
00:45:36,560 --> 00:45:39,520
discussion offline

804
00:45:40,160 --> 00:45:42,079
no i'm just wondering you know until

805
00:45:42,079 --> 00:45:43,920
which uh version says

806
00:45:43,920 --> 00:45:47,440
it's still applicable well you can check

807
00:45:47,440 --> 00:45:50,480
their updates

808
00:45:51,040 --> 00:45:53,119
so they said they patched it

809
00:45:53,119 --> 00:45:55,119
on the 7th of april

810
00:45:55,119 --> 00:45:57,119
not a question really

811
00:45:57,119 --> 00:46:00,119
chinese

812
00:46:04,960 --> 00:46:06,880
customized software

813
00:46:06,880 --> 00:46:08,240
and at the same time they're using

814
00:46:08,240 --> 00:46:09,440
common shell

815
00:46:09,440 --> 00:46:11,280
that's that's weird

816
00:46:11,280 --> 00:46:13,200
i'm sorry it's such a philosophical

817
00:46:13,200 --> 00:46:14,720
question i'm surprised they were using

818
00:46:14,720 --> 00:46:16,560
common shell rather than going at at

819
00:46:16,560 --> 00:46:18,319
least a level below

820
00:46:18,319 --> 00:46:19,920
i really don't think they did any

821
00:46:19,920 --> 00:46:22,240
reverse engineering this was our initial

822
00:46:22,240 --> 00:46:25,279
hypothesis though

823
00:46:25,760 --> 00:46:29,079
i do believe

824
00:46:39,920 --> 00:46:41,839
i think they've got a conveyor system of

825
00:46:41,839 --> 00:46:44,240
some sort

826
00:46:44,240 --> 00:46:45,520
i think

827
00:46:45,520 --> 00:46:47,440
you know they have a particular routine

828
00:46:47,440 --> 00:46:48,800
for checking binaries for

829
00:46:48,800 --> 00:46:51,200
vulnerabilities

830
00:46:51,200 --> 00:46:52,880
i can tell you that you know we spent

831
00:46:52,880 --> 00:46:55,760
quite some time trying

832
00:46:55,760 --> 00:46:58,079
learn about it because you know menials

833
00:46:58,079 --> 00:46:59,599
and admins they

834
00:46:59,599 --> 00:47:02,079
live in different worlds

835
00:47:02,079 --> 00:47:04,079
this is my hypothesis i don't know what

836
00:47:04,079 --> 00:47:06,319
the reality is you know sometimes they

837
00:47:06,319 --> 00:47:08,720
modify you if i so you never know with

838
00:47:08,720 --> 00:47:11,920
chinese apts

839
00:47:11,920 --> 00:47:13,359
i think you can ask them this question

840
00:47:13,359 --> 00:47:14,800
i'm not sure they will answer though

841
00:47:14,800 --> 00:47:17,200
thank you

842
00:47:18,280 --> 00:47:22,359
for it

843
00:47:36,400 --> 00:47:39,200
it's a practical

844
00:47:48,880 --> 00:47:49,839
you know

845
00:47:49,839 --> 00:47:53,839
looking for vulnerabilities easier

846
00:47:54,319 --> 00:47:57,359
isn't it a good practice you know to

847
00:47:57,359 --> 00:47:58,960
collect as many locks as possible and

848
00:47:58,960 --> 00:48:01,440
keep them as far as possible

849
00:48:01,440 --> 00:48:04,480
yes that's the classical answer

850
00:48:04,480 --> 00:48:07,839
in our recommendations

851
00:48:18,319 --> 00:48:19,760
so you may want to talk to your

852
00:48:19,760 --> 00:48:22,400
employees so for example when the update

853
00:48:22,400 --> 00:48:24,640
package comes in

854
00:48:24,640 --> 00:48:27,440
you know you know the update will be

855
00:48:27,440 --> 00:48:28,400
launched

856
00:48:28,400 --> 00:48:29,440
and

857
00:48:29,440 --> 00:48:33,200
the user will not know any better

858
00:48:33,200 --> 00:48:34,800
otherwise you know there will be a

859
00:48:34,800 --> 00:48:36,480
notification like a new package is

860
00:48:36,480 --> 00:48:40,240
available would you like to update it

861
00:48:43,040 --> 00:48:45,440
and yes what you say about collecting

862
00:48:45,440 --> 00:48:48,000
logs and monitoring for anomalous

863
00:48:48,000 --> 00:48:50,079
activity they still apply for sure thank

864
00:48:50,079 --> 00:48:52,240
you

865
00:48:56,480 --> 00:48:59,559
for watching

866
00:49:10,960 --> 00:49:13,440
there was an article by this uh american

867
00:49:13,440 --> 00:49:16,440
corporation

868
00:49:30,960 --> 00:49:32,960
you know they're associated with the

869
00:49:32,960 --> 00:49:34,720
commercial organizations so you know

870
00:49:34,720 --> 00:49:36,880
these commercial organizations bought a

871
00:49:36,880 --> 00:49:40,079
system from different vendors

872
00:49:40,319 --> 00:49:42,400
so they effectively bought it

873
00:49:42,400 --> 00:49:45,400
is

874
00:49:52,720 --> 00:49:54,160
what will stop you from buying

875
00:49:54,160 --> 00:49:58,200
commercially available software

876
00:49:58,970 --> 00:50:05,759
[Music]

877
00:50:11,040 --> 00:50:13,839
files yes this is another option

878
00:50:13,839 --> 00:50:17,200
i heard of this case last year

879
00:50:19,680 --> 00:50:22,480
they actually took all the documentation

880
00:50:22,480 --> 00:50:25,359
for kaspersky labs

881
00:50:25,359 --> 00:50:28,000
maybe it's more difficult for them to

882
00:50:28,000 --> 00:50:30,240
you know do the reverse engineering side

883
00:50:30,240 --> 00:50:33,119
i i believe you know they just collected

884
00:50:33,119 --> 00:50:35,280
it all and studied in detail i don't

885
00:50:35,280 --> 00:50:39,079
really know for sure

886
00:50:50,720 --> 00:50:53,200
that converters do this packaging can we

887
00:50:53,200 --> 00:50:55,839
actually track the traffic to

888
00:50:55,839 --> 00:50:59,920
detect an anomaly size-wise

889
00:51:00,000 --> 00:51:00,960
will your

890
00:51:00,960 --> 00:51:03,200
administrator tell you

891
00:51:03,200 --> 00:51:07,359
how many packets yeah

892
00:51:35,280 --> 00:51:37,839
are between 200 kilobytes and 10

893
00:51:37,839 --> 00:51:39,119
megabytes

894
00:51:39,119 --> 00:51:41,599
will your system react to that

895
00:51:41,599 --> 00:51:43,680
so no commands or anything everything is

896
00:51:43,680 --> 00:51:46,160
encrypted

897
00:51:46,160 --> 00:51:48,079
you know the standard header for an

898
00:51:48,079 --> 00:51:49,839
envelope like this and everything else

899
00:51:49,839 --> 00:51:54,839
is encrypted gotcha thank you very much

900
00:52:07,040 --> 00:52:08,880
how detailed was your report for the

901
00:52:08,880 --> 00:52:11,119
client and how fast did the client

902
00:52:11,119 --> 00:52:13,680
respond in terms of you know incident

903
00:52:13,680 --> 00:52:16,240
responses

904
00:52:16,400 --> 00:52:17,440
well

905
00:52:17,440 --> 00:52:21,119
we were doing the incident response

906
00:52:22,400 --> 00:52:24,559
okay but you said the first line

907
00:52:24,559 --> 00:52:26,960
reacted

908
00:52:27,040 --> 00:52:28,800
but i'm really interested in like how

909
00:52:28,800 --> 00:52:32,839
detailed your report was

910
00:52:39,800 --> 00:52:43,030
[Music]

911
00:52:45,119 --> 00:52:48,079
we identify this process

912
00:52:48,079 --> 00:52:50,079
yeah sure we have edr and cis man on the

913
00:52:50,079 --> 00:52:52,240
host

914
00:52:52,240 --> 00:52:54,160
and then as part of our monitoring

915
00:52:54,160 --> 00:52:56,240
scenarios we identified anomalous

916
00:52:56,240 --> 00:52:58,000
activity as a sock shoot and then we

917
00:52:58,000 --> 00:53:00,160
started our investigation

918
00:53:00,160 --> 00:53:02,000
so the initial information available to

919
00:53:02,000 --> 00:53:04,640
the client was uh

920
00:53:04,640 --> 00:53:07,200
we see some suspicious process on your

921
00:53:07,200 --> 00:53:09,839
host that was the beginning

922
00:53:09,839 --> 00:53:12,000
actually we realized that bipnut was the

923
00:53:12,000 --> 00:53:14,240
culprit a bit later

924
00:53:14,240 --> 00:53:16,480
you know remember it all started at 4

925
00:53:16,480 --> 00:53:19,680
38. you know forensics people

926
00:53:19,680 --> 00:53:21,520
often have the right to sleep during the

927
00:53:21,520 --> 00:53:24,520
night

928
00:53:53,040 --> 00:53:54,880
you know could have raised quite a lot

929
00:53:54,880 --> 00:53:56,559
of eyebrows

930
00:53:56,559 --> 00:53:57,920
i'm guessing that you know they would

931
00:53:57,920 --> 00:53:59,920
even put some pressure on the venture

932
00:53:59,920 --> 00:54:01,359
no the vendor

933
00:54:01,359 --> 00:54:02,960
did the update

934
00:54:02,960 --> 00:54:07,960
they informed authorities this is

935
00:54:11,100 --> 00:54:14,350
[Music]

936
00:54:27,680 --> 00:54:29,839
not in terms of addressing the bug but

937
00:54:29,839 --> 00:54:31,200
in terms of getting everybody's

938
00:54:31,200 --> 00:54:34,919
attention to this problem

939
00:54:51,040 --> 00:54:53,119
and going forward it doesn't really

940
00:54:53,119 --> 00:54:56,559
matter what uh kind of privileges

941
00:54:56,559 --> 00:54:59,359
what kind of rights uh the person has

942
00:54:59,359 --> 00:55:02,000
because he should be able to craft this

943
00:55:02,000 --> 00:55:06,799
malware back his package or envelope

944
00:55:18,720 --> 00:55:22,160
there's it's still a black box

945
00:55:22,400 --> 00:55:25,119
i've been sharing our hypothesis

946
00:55:25,119 --> 00:55:28,559
it still is a hypothesis

947
00:55:28,559 --> 00:55:29,760
it may be

948
00:55:29,760 --> 00:55:31,760
the tip of the iceberg maybe there are

949
00:55:31,760 --> 00:55:33,839
other issues there as well and they hid

950
00:55:33,839 --> 00:55:36,400
in the black box

951
00:55:36,400 --> 00:55:38,480
we were doing our investigation

952
00:55:38,480 --> 00:55:40,319
you're absolutely right in order to

953
00:55:40,319 --> 00:55:42,720
start it all you need access to some

954
00:55:42,720 --> 00:55:43,599
host

955
00:55:43,599 --> 00:55:46,319
on vipnet

956
00:55:57,839 --> 00:55:59,040
it's called

957
00:55:59,040 --> 00:56:02,880
network management central but

958
00:56:02,880 --> 00:56:05,200
we don't have proof for that you know we

959
00:56:05,200 --> 00:56:07,440
believe that these updates came from uh

960
00:56:07,440 --> 00:56:09,200
contractors and we have not been able to

961
00:56:09,200 --> 00:56:11,919
inspect them yet

962
00:56:12,400 --> 00:56:14,240
you know what lots of people besides us

963
00:56:14,240 --> 00:56:16,960
are responsible for security i hope that

964
00:56:16,960 --> 00:56:20,559
they will be able to help us

965
00:56:23,680 --> 00:56:25,280
some advantage

966
00:56:25,280 --> 00:56:28,599
next question

967
00:56:42,559 --> 00:56:44,720
in

968
00:56:55,440 --> 00:56:57,280
you know the vendors wrote in their chat

969
00:56:57,280 --> 00:56:59,839
today

970
00:57:00,480 --> 00:57:02,079
453

971
00:57:02,079 --> 00:57:02,799
is

972
00:57:02,799 --> 00:57:05,040
completely secure as long as you apply

973
00:57:05,040 --> 00:57:06,160
all the rules

974
00:57:06,160 --> 00:57:09,040
if that's okay i'll come over to you and

975
00:57:09,040 --> 00:57:10,480
show this stuff because i'm afraid that

976
00:57:10,480 --> 00:57:13,839
my time is over

977
00:57:20,799 --> 00:57:22,480
it's difficult for me i haven't really

978
00:57:22,480 --> 00:57:26,400
identified the people who ask questions

979
00:57:30,559 --> 00:57:33,119
and the other probably should go to the

980
00:57:33,119 --> 00:57:34,480
person who asked me this is a very

981
00:57:34,480 --> 00:57:36,319
provocative question about the version

982
00:57:36,319 --> 00:57:38,880
thank you

