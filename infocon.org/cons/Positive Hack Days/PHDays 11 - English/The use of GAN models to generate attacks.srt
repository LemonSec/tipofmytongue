1
00:00:00,080 --> 00:00:02,720
forward to you hi everyone

2
00:00:02,720 --> 00:00:04,480
i'm kola

3
00:00:04,480 --> 00:00:06,879
stands for nikolai i work for positive

4
00:00:06,879 --> 00:00:08,480
and

5
00:00:08,480 --> 00:00:10,719
prepare ml there

6
00:00:10,719 --> 00:00:13,200
vanya yvonne hudyshov is going to join

7
00:00:13,200 --> 00:00:16,720
me shortly is more about security and

8
00:00:16,720 --> 00:00:19,840
some theory is going to talk about it

9
00:00:19,840 --> 00:00:22,880
together with me and together

10
00:00:22,880 --> 00:00:25,680
we'll be talking about attack generation

11
00:00:25,680 --> 00:00:29,480
and the use of gann

12
00:00:31,519 --> 00:00:34,399
first of all introduction done short

13
00:00:34,399 --> 00:00:36,320
story about

14
00:00:36,320 --> 00:00:39,760
some theory formal grammar this hardcore

15
00:00:39,760 --> 00:00:40,879
thing

16
00:00:40,879 --> 00:00:43,040
pass an injection

17
00:00:43,040 --> 00:00:45,839
point

18
00:00:46,879 --> 00:00:49,280
and the trees and then

19
00:00:49,280 --> 00:00:51,520
wf wave

20
00:00:51,520 --> 00:00:54,719
bypass in and now it prevents

21
00:00:54,719 --> 00:00:56,640
helps us prevent these attacks to be

22
00:00:56,640 --> 00:00:59,440
precise and the actual

23
00:00:59,440 --> 00:01:00,800
ml

24
00:01:00,800 --> 00:01:03,520
fuzzing experiment and some conclusions

25
00:01:03,520 --> 00:01:06,640
hopefully will follow

26
00:01:09,439 --> 00:01:11,600
why do we need this

27
00:01:11,600 --> 00:01:13,840
we would like to

28
00:01:13,840 --> 00:01:15,200
be a

29
00:01:15,200 --> 00:01:18,320
ahead of the attackers

30
00:01:18,320 --> 00:01:20,479
it seems to me that when we work in

31
00:01:20,479 --> 00:01:24,320
security we always lag behind and we are

32
00:01:24,320 --> 00:01:26,799
lagging behind at all times would be

33
00:01:26,799 --> 00:01:29,920
very nice to be just one step ahead

34
00:01:29,920 --> 00:01:32,079
be able to prevent these attacks

35
00:01:32,079 --> 00:01:34,240
whatever the attack may be and it's very

36
00:01:34,240 --> 00:01:36,400
nice to have some kind of a tool that

37
00:01:36,400 --> 00:01:39,520
helps us generate these attacks when

38
00:01:39,520 --> 00:01:40,720
needed

39
00:01:40,720 --> 00:01:43,280
so it's very nice to have an ability to

40
00:01:43,280 --> 00:01:45,200
deeper understand

41
00:01:45,200 --> 00:01:46,479
these attacks

42
00:01:46,479 --> 00:01:47,520
look for

43
00:01:47,520 --> 00:01:49,200
bypasses of

44
00:01:49,200 --> 00:01:50,320
various

45
00:01:50,320 --> 00:01:54,159
defense tools and complete and enhance

46
00:01:54,159 --> 00:01:55,600
detectors

47
00:01:55,600 --> 00:01:57,520
capabilities

48
00:01:57,520 --> 00:01:59,119
this particular presentation and the

49
00:01:59,119 --> 00:02:01,920
approach will pursue is all about

50
00:02:01,920 --> 00:02:03,520
all these

51
00:02:03,520 --> 00:02:05,040
now i would like to

52
00:02:05,040 --> 00:02:08,399
disclose it a little bit make it spoiler

53
00:02:08,399 --> 00:02:11,120
i think a male may actually help us

54
00:02:11,120 --> 00:02:13,520
prevent different attacks

55
00:02:13,520 --> 00:02:15,200
with the

56
00:02:15,200 --> 00:02:16,560
scotch

57
00:02:16,560 --> 00:02:18,480
i mean

58
00:02:18,480 --> 00:02:20,480
adhesive tape

59
00:02:20,480 --> 00:02:22,480
attachments

60
00:02:22,480 --> 00:02:24,879
that we can very very quickly analyze as

61
00:02:24,879 --> 00:02:27,200
experts and make conclusions and what

62
00:02:27,200 --> 00:02:28,480
kind of

63
00:02:28,480 --> 00:02:30,239
injection attacks types are we talking

64
00:02:30,239 --> 00:02:32,480
about we're talking about web attacks

65
00:02:32,480 --> 00:02:34,480
all these injection

66
00:02:34,480 --> 00:02:36,560
attacks types

67
00:02:36,560 --> 00:02:38,480
i'm showing you some of them on the

68
00:02:38,480 --> 00:02:39,599
screen

69
00:02:39,599 --> 00:02:43,120
we're going to speak about sqls

70
00:02:43,120 --> 00:02:46,239
sql ex injections but it would be very

71
00:02:46,239 --> 00:02:48,840
nice to repeat it for

72
00:02:48,840 --> 00:02:52,160
xxs on both client

73
00:02:52,160 --> 00:02:56,319
and server side and what's uh sql

74
00:02:56,319 --> 00:02:59,200
sql is

75
00:03:00,360 --> 00:03:04,080
insertion of an injection

76
00:03:04,080 --> 00:03:06,480
of an sql query and

77
00:03:06,480 --> 00:03:08,080
hack

78
00:03:08,080 --> 00:03:09,360
some

79
00:03:09,360 --> 00:03:11,040
sensitive data

80
00:03:11,040 --> 00:03:13,519
from the database modify database make

81
00:03:13,519 --> 00:03:17,040
everything feel bad in other words

82
00:03:17,040 --> 00:03:19,120
vania is going to

83
00:03:19,120 --> 00:03:23,200
carry on with some practice

84
00:03:24,319 --> 00:03:26,799
showing you some case studies

85
00:03:26,799 --> 00:03:29,440
and now a bit of theory from me we have

86
00:03:29,440 --> 00:03:31,599
a web application

87
00:03:31,599 --> 00:03:33,200
in the depth

88
00:03:33,200 --> 00:03:36,640
of the web application we have the sql

89
00:03:36,640 --> 00:03:38,159
request

90
00:03:38,159 --> 00:03:40,080
that runs and

91
00:03:40,080 --> 00:03:43,680
with the web client or stp

92
00:03:43,680 --> 00:03:45,360
request

93
00:03:45,360 --> 00:03:47,360
it pulls and

94
00:03:47,360 --> 00:03:49,360
pulls the information from the database

95
00:03:49,360 --> 00:03:51,519
and makes everyone happy

96
00:03:51,519 --> 00:03:54,879
but some kind of a bad person makes

97
00:03:54,879 --> 00:03:57,680
an injection to that query

98
00:03:57,680 --> 00:04:00,560
which may obviously make us feel very

99
00:04:00,560 --> 00:04:02,400
sad

100
00:04:02,400 --> 00:04:05,439
so what helps us here is the web

101
00:04:05,439 --> 00:04:08,720
application firewall wf

102
00:04:08,720 --> 00:04:10,319
between

103
00:04:10,319 --> 00:04:12,799
client and web

104
00:04:12,799 --> 00:04:15,920
and helps us this

105
00:04:16,320 --> 00:04:17,358
helps us

106
00:04:17,358 --> 00:04:19,759
nip in the butt with all these payloads

107
00:04:19,759 --> 00:04:22,800
and injections and say

108
00:04:22,800 --> 00:04:25,680
don't go there

109
00:04:25,759 --> 00:04:26,840
stop

110
00:04:26,840 --> 00:04:28,560
here

111
00:04:28,560 --> 00:04:32,400
make it legitimate and make the user

112
00:04:32,400 --> 00:04:33,759
happy and

113
00:04:33,759 --> 00:04:36,880
make sure the user's query passes

114
00:04:36,880 --> 00:04:38,479
through and

115
00:04:38,479 --> 00:04:44,000
a non-legitimate query query rejects

116
00:04:44,639 --> 00:04:46,960
everybody knows that there are plenty of

117
00:04:46,960 --> 00:04:49,919
vulnerability scanners available and

118
00:04:49,919 --> 00:04:52,320
plenty of

119
00:04:52,320 --> 00:04:55,199
sql code modification tools are

120
00:04:55,199 --> 00:04:57,520
available even if you check it out in

121
00:04:57,520 --> 00:05:00,120
github and check out the

122
00:05:00,120 --> 00:05:02,479
repositories there are plenty of them by

123
00:05:02,479 --> 00:05:03,360
the way

124
00:05:03,360 --> 00:05:05,280
even an sql

125
00:05:05,280 --> 00:05:06,160
map

126
00:05:06,160 --> 00:05:08,840
comes up there and different

127
00:05:08,840 --> 00:05:12,400
custom modifications people try to come

128
00:05:12,400 --> 00:05:15,680
up with their own homegrown

129
00:05:15,680 --> 00:05:18,960
apps home owned solutions home-grown

130
00:05:18,960 --> 00:05:21,280
solutions

131
00:05:21,280 --> 00:05:23,199
scanners and

132
00:05:23,199 --> 00:05:26,560
another one wf a mole

133
00:05:26,560 --> 00:05:29,120
is the thing that is familiar to some of

134
00:05:29,120 --> 00:05:31,520
you but for me it was a new thing

135
00:05:31,520 --> 00:05:34,639
for me as an ml person

136
00:05:34,639 --> 00:05:36,840
this mole modifies

137
00:05:36,840 --> 00:05:39,360
payloads briefly and

138
00:05:39,360 --> 00:05:40,560
adds

139
00:05:40,560 --> 00:05:43,039
slashes tabs

140
00:05:43,039 --> 00:05:46,000
spaces and if there is a

141
00:05:46,000 --> 00:05:49,680
some kind of a regular inserted in depth

142
00:05:49,680 --> 00:05:51,199
it seems like that it may help you

143
00:05:51,199 --> 00:05:54,400
bypass bypass

144
00:05:54,400 --> 00:05:57,440
security in simple cases they're not

145
00:05:57,440 --> 00:06:00,319
very interesting to us but they do exist

146
00:06:00,319 --> 00:06:04,000
and sql map story goes like this the

147
00:06:04,000 --> 00:06:07,919
attack classes and sql injections

148
00:06:07,919 --> 00:06:11,120
can be split in two classes and some of

149
00:06:11,120 --> 00:06:14,000
these decks

150
00:06:14,000 --> 00:06:18,000
are included in the sql map

151
00:06:18,800 --> 00:06:21,520
for grandma for parsing

152
00:06:21,520 --> 00:06:25,520
ivan is going to talk about yvonne

153
00:06:28,000 --> 00:06:30,479
hi there

154
00:06:30,479 --> 00:06:32,960
i just want to say hi there again but

155
00:06:32,960 --> 00:06:35,759
it's the first time that i say hi to all

156
00:06:35,759 --> 00:06:37,120
of you

157
00:06:37,120 --> 00:06:39,919
so it's not again

158
00:06:39,919 --> 00:06:43,520
just bear with me for a moment

159
00:06:43,759 --> 00:06:45,360
you have to bear with me a little bit

160
00:06:45,360 --> 00:06:48,360
more

161
00:06:48,479 --> 00:06:50,800
before i know how to press the buttons

162
00:06:50,800 --> 00:06:53,440
here on the remote control

163
00:06:53,440 --> 00:06:56,800
anyway uh a few words about this goal

164
00:06:56,800 --> 00:06:59,039
that we'd like to achieve the goal we

165
00:06:59,039 --> 00:07:01,039
would like to achieve is make sure that

166
00:07:01,039 --> 00:07:03,520
we teach waff

167
00:07:03,520 --> 00:07:05,360
protect from injections it's an

168
00:07:05,360 --> 00:07:06,720
ambitious goal

169
00:07:06,720 --> 00:07:09,120
but any ambitious goal starts

170
00:07:09,120 --> 00:07:11,599
from the first step and

171
00:07:11,599 --> 00:07:14,880
we wanted to try machine learning to

172
00:07:14,880 --> 00:07:18,080
generate vectors

173
00:07:18,240 --> 00:07:19,680
as soon

174
00:07:19,680 --> 00:07:22,960
as there is a question about

175
00:07:23,599 --> 00:07:26,720
teaching something do something we just

176
00:07:26,720 --> 00:07:29,440
need to learn the subject

177
00:07:29,440 --> 00:07:30,800
ourselves

178
00:07:30,800 --> 00:07:32,880
if we take a look at

179
00:07:32,880 --> 00:07:35,520
the injection vector with the eyes of an

180
00:07:35,520 --> 00:07:38,000
expert

181
00:07:39,680 --> 00:07:43,039
for example in the payload

182
00:07:43,039 --> 00:07:45,440
it's the injection vector and uh how

183
00:07:45,440 --> 00:07:49,120
does an analyst perceive it an analyst

184
00:07:49,120 --> 00:07:52,960
perceives it as a word

185
00:07:52,960 --> 00:07:54,800
in a sentence

186
00:07:54,800 --> 00:07:57,360
it's not just a combination of symbols

187
00:07:57,360 --> 00:07:59,199
but something having

188
00:07:59,199 --> 00:08:00,240
sense

189
00:08:00,240 --> 00:08:01,840
in this case

190
00:08:01,840 --> 00:08:05,039
the vector is a synthesis

191
00:08:05,039 --> 00:08:08,240
it's not just the synthetics

192
00:08:08,240 --> 00:08:11,360
it's the synthetics that

193
00:08:11,360 --> 00:08:12,720
helps us

194
00:08:12,720 --> 00:08:14,319
get it inside

195
00:08:14,319 --> 00:08:16,000
another synthetics

196
00:08:16,000 --> 00:08:17,360
in order not to

197
00:08:17,360 --> 00:08:19,840
repeat

198
00:08:20,879 --> 00:08:22,560
we just need to identify whether we've

199
00:08:22,560 --> 00:08:25,280
achieved the goal or not whether we made

200
00:08:25,280 --> 00:08:27,120
sure that we have

201
00:08:27,120 --> 00:08:30,560
generates something new or not

202
00:08:30,879 --> 00:08:33,839
just go back to some theory

203
00:08:33,839 --> 00:08:36,640
uh using it i would like to find out

204
00:08:36,640 --> 00:08:38,159
whether we've been able to achieve

205
00:08:38,159 --> 00:08:39,360
something or not

206
00:08:39,360 --> 00:08:42,159
but before we

207
00:08:44,640 --> 00:08:46,800
do some studying

208
00:08:46,800 --> 00:08:48,560
we need to understand what we have at

209
00:08:48,560 --> 00:08:51,040
the moment nikolai

210
00:08:51,040 --> 00:08:52,640
enumerated

211
00:08:52,640 --> 00:08:54,959
scanners and what they're capable of

212
00:08:54,959 --> 00:08:59,120
doing and how exactly they do that

213
00:08:59,120 --> 00:09:01,920
all of the activities all of the actions

214
00:09:01,920 --> 00:09:03,920
of all of the scanners can be actually

215
00:09:03,920 --> 00:09:06,720
combined with the word fuzzing that's

216
00:09:06,720 --> 00:09:10,080
what they do they do fuzzing and what we

217
00:09:10,080 --> 00:09:12,160
would like them to do we would like to

218
00:09:12,160 --> 00:09:14,640
have a kind of a black box which would

219
00:09:14,640 --> 00:09:17,760
help us generate all possible injection

220
00:09:17,760 --> 00:09:19,680
vectors

221
00:09:19,680 --> 00:09:23,440
if we do achieve that if we can generate

222
00:09:23,440 --> 00:09:25,920
all of the injection vectors we can

223
00:09:25,920 --> 00:09:28,800
guarantee that we can be injection

224
00:09:28,800 --> 00:09:30,560
protected

225
00:09:30,560 --> 00:09:33,600
theory in theory we can generate

226
00:09:33,600 --> 00:09:36,959
any and all possible injection vectors

227
00:09:36,959 --> 00:09:39,680
because we have grammar

228
00:09:39,680 --> 00:09:40,640
injection

229
00:09:40,640 --> 00:09:43,519
vectors have the language

230
00:09:43,519 --> 00:09:46,320
for them we have some grammar and

231
00:09:46,320 --> 00:09:50,000
for them we have created it and we can

232
00:09:50,000 --> 00:09:51,120
generate

233
00:09:51,120 --> 00:09:53,200
random vectors but it's a very

234
00:09:53,200 --> 00:09:55,760
pretentious goal i would say and the

235
00:09:55,760 --> 00:09:57,040
first

236
00:09:57,040 --> 00:09:58,959
step here in this direction is just

237
00:09:58,959 --> 00:10:00,080
moving

238
00:10:00,080 --> 00:10:02,720
from fuzzing to this global

239
00:10:02,720 --> 00:10:03,680
goal

240
00:10:03,680 --> 00:10:07,040
we just need to attempt

241
00:10:07,040 --> 00:10:09,920
and to try and create

242
00:10:09,920 --> 00:10:14,640
and teach and get a model from somewhere

243
00:10:14,640 --> 00:10:16,320
the model which will

244
00:10:16,320 --> 00:10:19,200
do everything which phasers but tries to

245
00:10:19,200 --> 00:10:22,079
do it a little bit better and can we

246
00:10:22,079 --> 00:10:25,519
actually get any closer to the desired

247
00:10:25,519 --> 00:10:28,959
goal that i have described

248
00:10:30,320 --> 00:10:32,640
i would like to say a couple of words

249
00:10:32,640 --> 00:10:35,279
about the terms that we would like to

250
00:10:35,279 --> 00:10:36,720
use here

251
00:10:36,720 --> 00:10:39,200
when we speak about parsing and about

252
00:10:39,200 --> 00:10:41,279
the syntax

253
00:10:41,279 --> 00:10:44,320
here when we do the analysis

254
00:10:44,320 --> 00:10:47,120
two stages do spring up

255
00:10:47,120 --> 00:10:49,680
and that's what i would like to do

256
00:10:49,680 --> 00:10:51,600
the first thing is just in the know in

257
00:10:51,600 --> 00:10:53,680
the normal language

258
00:10:53,680 --> 00:10:56,000
we single out the words we do not

259
00:10:56,000 --> 00:10:58,079
perceive this idea

260
00:10:58,079 --> 00:11:00,880
symbol by symbol we single out the words

261
00:11:00,880 --> 00:11:02,399
and we combine

262
00:11:02,399 --> 00:11:04,000
the words and

263
00:11:04,000 --> 00:11:05,839
the words make sense

264
00:11:05,839 --> 00:11:09,040
and uh the component uh creates um

265
00:11:09,040 --> 00:11:10,240
tokens

266
00:11:10,240 --> 00:11:12,720
splits uh the inflow into

267
00:11:12,720 --> 00:11:14,079
the so-called

268
00:11:14,079 --> 00:11:18,399
tokens and then parser makes

269
00:11:19,760 --> 00:11:23,519
table links out of them out of that

270
00:11:23,519 --> 00:11:25,040
we're going through these branches of

271
00:11:25,040 --> 00:11:27,519
the tree we will see it

272
00:11:27,519 --> 00:11:28,480
and

273
00:11:28,480 --> 00:11:32,000
here what does this injection stand for

274
00:11:32,000 --> 00:11:34,560
how do we describe an injection

275
00:11:34,560 --> 00:11:36,720
as an attack

276
00:11:36,720 --> 00:11:38,800
what we need to do here

277
00:11:38,800 --> 00:11:44,240
is just to set a template a synthetics

278
00:11:44,240 --> 00:11:45,760
in a sentence

279
00:11:45,760 --> 00:11:47,200
in a sentence

280
00:11:47,200 --> 00:11:49,600
where we put

281
00:11:49,600 --> 00:11:52,880
users input

282
00:11:52,880 --> 00:11:54,079
token

283
00:11:54,079 --> 00:11:56,720
and parsing will help us

284
00:11:56,720 --> 00:11:58,959
make this tree and one of the nodes of

285
00:11:58,959 --> 00:12:01,200
the tree would be the node where the

286
00:12:01,200 --> 00:12:03,600
syntax would fit in

287
00:12:03,600 --> 00:12:06,560
if the user input is legal we get one

288
00:12:06,560 --> 00:12:09,279
token if it's illegal we'll get multiple

289
00:12:09,279 --> 00:12:11,040
tokens

290
00:12:11,040 --> 00:12:11,760
but

291
00:12:11,760 --> 00:12:14,560
we cannot judge by the total number

292
00:12:14,560 --> 00:12:17,360
because the vectors of the injection may

293
00:12:17,360 --> 00:12:19,440
show that

294
00:12:19,440 --> 00:12:22,720
part of the tokens may disappear and

295
00:12:22,720 --> 00:12:25,839
they will turn into one

296
00:12:28,240 --> 00:12:31,760
so what can application firewall do here

297
00:12:31,760 --> 00:12:34,560
they need to interpret the input

298
00:12:34,560 --> 00:12:37,120
vector as the syntax

299
00:12:37,120 --> 00:12:40,320
of a tree i can put it in

300
00:12:40,320 --> 00:12:42,959
different injections

301
00:12:42,959 --> 00:12:44,800
different injections

302
00:12:44,800 --> 00:12:47,120
here just need to understand the entire

303
00:12:47,120 --> 00:12:50,120
scale

304
00:12:54,880 --> 00:12:57,600
it's a very very serious

305
00:12:57,600 --> 00:13:00,079
computational task so we would like to

306
00:13:00,079 --> 00:13:02,480
make it simpler

307
00:13:02,480 --> 00:13:04,720
can we really

308
00:13:04,720 --> 00:13:08,399
achieve anything by applying this method

309
00:13:08,399 --> 00:13:09,279
by

310
00:13:09,279 --> 00:13:11,440
generating the attacks can we actually

311
00:13:11,440 --> 00:13:14,720
provide protection from the injections

312
00:13:14,720 --> 00:13:16,160
not

313
00:13:16,160 --> 00:13:17,680
exactly

314
00:13:17,680 --> 00:13:20,480
because like in any theory

315
00:13:20,480 --> 00:13:22,240
we have some

316
00:13:22,240 --> 00:13:23,760
unpredictability

317
00:13:23,760 --> 00:13:25,760
and uncertainties

318
00:13:25,760 --> 00:13:28,079
so we just need to make sure that we

319
00:13:28,079 --> 00:13:30,399
simplify this and

320
00:13:30,399 --> 00:13:32,639
what can be done and what is being done

321
00:13:32,639 --> 00:13:36,160
just to bypass the application firewall

322
00:13:36,160 --> 00:13:38,079
in formal grammar

323
00:13:38,079 --> 00:13:39,279
we can

324
00:13:39,279 --> 00:13:42,079
come up with fake words and

325
00:13:42,079 --> 00:13:43,760
cheat on waff

326
00:13:43,760 --> 00:13:46,399
that will not perceive them as words and

327
00:13:46,399 --> 00:13:47,440
will not

328
00:13:47,440 --> 00:13:50,320
identify this synthetics as

329
00:13:50,320 --> 00:13:52,240
an injection vector

330
00:13:52,240 --> 00:13:54,639
and the more syntax

331
00:13:54,639 --> 00:13:55,519
i

332
00:13:55,519 --> 00:13:56,800
used here

333
00:13:56,800 --> 00:13:58,880
semantically

334
00:13:58,880 --> 00:14:02,000
it's a little bit more than that and

335
00:14:02,000 --> 00:14:03,680
number four i'm showing here is

336
00:14:03,680 --> 00:14:05,279
everything

337
00:14:05,279 --> 00:14:07,839
else all these things that

338
00:14:07,839 --> 00:14:10,639
do spring up inevitably

339
00:14:10,639 --> 00:14:13,600
in a very complicated and complex

340
00:14:13,600 --> 00:14:14,720
technical

341
00:14:14,720 --> 00:14:18,639
solution like web application firewall

342
00:14:18,639 --> 00:14:20,160
i would like to come up with a few

343
00:14:20,160 --> 00:14:22,800
examples

344
00:14:23,040 --> 00:14:24,320
of

345
00:14:24,320 --> 00:14:25,920
some of the

346
00:14:25,920 --> 00:14:31,120
recent ones that i had seen previously

347
00:14:31,120 --> 00:14:34,560
if you take this sql language and um

348
00:14:34,560 --> 00:14:36,399
if you're familiar a little bit familiar

349
00:14:36,399 --> 00:14:37,360
with it

350
00:14:37,360 --> 00:14:39,680
and i understand that it's not

351
00:14:39,680 --> 00:14:43,040
the language it's a bunch of dialects

352
00:14:43,040 --> 00:14:45,519
you'll be able to find quite a lot in

353
00:14:45,519 --> 00:14:47,440
there

354
00:14:47,440 --> 00:14:50,959
for instance in ms sql

355
00:14:50,959 --> 00:14:52,639
this number

356
00:14:52,639 --> 00:14:54,880
can be shown as the

357
00:14:54,880 --> 00:14:57,600
backslash

358
00:15:02,240 --> 00:15:04,720
a currency sign a dollar sign this

359
00:15:04,720 --> 00:15:07,279
dollar sign will be also interpreted as

360
00:15:07,279 --> 00:15:08,720
a single number

361
00:15:08,720 --> 00:15:11,360
if shown separately if application

362
00:15:11,360 --> 00:15:13,360
firewall does not expect

363
00:15:13,360 --> 00:15:15,440
that it will not define

364
00:15:15,440 --> 00:15:17,600
injection vectors and

365
00:15:17,600 --> 00:15:20,160
root imposed grass

366
00:15:20,160 --> 00:15:22,720
seems like they have become obsolete so

367
00:15:22,720 --> 00:15:23,920
far

368
00:15:23,920 --> 00:15:26,800
but the previous ones

369
00:15:26,800 --> 00:15:30,560
proved that it did work and

370
00:15:30,560 --> 00:15:33,279
factorials and some of them suit one

371
00:15:33,279 --> 00:15:35,680
dialect and it's not

372
00:15:35,680 --> 00:15:38,320
certain that they will suit another one

373
00:15:38,320 --> 00:15:40,480
and in oracle it

374
00:15:40,480 --> 00:15:42,720
make

375
00:15:42,959 --> 00:15:46,240
it's separated with spaces

376
00:15:46,240 --> 00:15:47,839
so it does not look like a very

377
00:15:47,839 --> 00:15:49,839
primitive

378
00:15:49,839 --> 00:15:52,000
rag and

379
00:15:52,000 --> 00:15:54,639
comes up with warnings if there is some

380
00:15:54,639 --> 00:15:57,600
smart analysis going on which helps you

381
00:15:57,600 --> 00:15:58,959
avoid

382
00:15:58,959 --> 00:16:01,759
false positives

383
00:16:01,759 --> 00:16:05,440
without proper tokenization

384
00:16:05,440 --> 00:16:07,519
not making sure that one token can be

385
00:16:07,519 --> 00:16:08,480
split

386
00:16:08,480 --> 00:16:10,480
in parts with symbols

387
00:16:10,480 --> 00:16:13,839
we will have these bypasses obviously

388
00:16:13,839 --> 00:16:16,959
as for syntax

389
00:16:16,959 --> 00:16:19,920
we can experiment here and how can we

390
00:16:19,920 --> 00:16:22,240
bypass was wires

391
00:16:22,240 --> 00:16:24,399
in terms of

392
00:16:24,399 --> 00:16:26,880
the trees it will look like

393
00:16:26,880 --> 00:16:31,120
exceeding the depth of the tree we can

394
00:16:31,120 --> 00:16:32,560
insert

395
00:16:32,560 --> 00:16:35,759
more and more branches there

396
00:16:35,759 --> 00:16:37,360
showing that uh

397
00:16:37,360 --> 00:16:40,000
whatever mechanism is used here we can

398
00:16:40,000 --> 00:16:43,120
use special keywords

399
00:16:43,120 --> 00:16:47,199
and msql there is odbc

400
00:16:47,199 --> 00:16:48,639
expressions

401
00:16:48,639 --> 00:16:52,240
that can be inserted

402
00:16:52,240 --> 00:16:54,560
and without the fully fledged parsing

403
00:16:54,560 --> 00:16:58,000
solutions some expressions like that

404
00:16:58,000 --> 00:16:59,680
are not very

405
00:16:59,680 --> 00:17:01,920
easy to recognize are impossible to

406
00:17:01,920 --> 00:17:03,759
recognize

407
00:17:03,759 --> 00:17:06,559
with obfuscation

408
00:17:06,559 --> 00:17:09,940
used which is a very well known method

409
00:17:09,940 --> 00:17:11,119
[Music]

410
00:17:11,119 --> 00:17:15,760
we know that if we work with syntax

411
00:17:16,640 --> 00:17:19,280
there was an attempt

412
00:17:19,280 --> 00:17:21,520
to

413
00:17:22,160 --> 00:17:24,880
cheat on waff

414
00:17:24,880 --> 00:17:27,599
in terms of making sure which

415
00:17:27,599 --> 00:17:28,559
string

416
00:17:28,559 --> 00:17:33,039
we need to get it get it analyzed

417
00:17:33,039 --> 00:17:36,320
if we obfuscate a string

418
00:17:36,320 --> 00:17:38,720
if we

419
00:17:39,120 --> 00:17:40,799
put it together with the use of the

420
00:17:40,799 --> 00:17:43,840
symbols we can do so all these

421
00:17:43,840 --> 00:17:46,640
methods are very well known um just

422
00:17:46,640 --> 00:17:48,880
making sure that all these

423
00:17:48,880 --> 00:17:51,679
methods will not work if in the

424
00:17:51,679 --> 00:17:54,000
application firewall

425
00:17:54,000 --> 00:17:56,720
there is an honest and transparent

426
00:17:56,720 --> 00:17:58,000
parsing

427
00:17:58,000 --> 00:18:00,799
happening with all of the injections are

428
00:18:00,799 --> 00:18:02,720
checked and verified whether the

429
00:18:02,720 --> 00:18:04,559
statement is correct in

430
00:18:04,559 --> 00:18:07,760
the language used or not

431
00:18:07,760 --> 00:18:10,320
so what is not mentioned here in the

432
00:18:10,320 --> 00:18:12,640
presentation is that

433
00:18:12,640 --> 00:18:15,440
there are some general things

434
00:18:15,440 --> 00:18:18,720
that waff is responsible for

435
00:18:18,720 --> 00:18:20,960
there are some limits set for example a

436
00:18:20,960 --> 00:18:23,039
limit for http

437
00:18:23,039 --> 00:18:25,840
uh request or there may be

438
00:18:25,840 --> 00:18:29,440
some http requests

439
00:18:29,440 --> 00:18:30,720
coded

440
00:18:30,720 --> 00:18:33,360
and some of the vectors can be hidden

441
00:18:33,360 --> 00:18:35,120
inside

442
00:18:35,120 --> 00:18:37,840
the codes

443
00:18:39,600 --> 00:18:41,520
so such things

444
00:18:41,520 --> 00:18:43,919
are not detected

445
00:18:43,919 --> 00:18:46,160
but

446
00:18:46,880 --> 00:18:51,120
if we have vectors in the weft input

447
00:18:51,120 --> 00:18:53,840
those that will be put in the injection

448
00:18:53,840 --> 00:18:58,559
put and wealth will perform the parsing

449
00:18:58,559 --> 00:19:00,240
then it works

450
00:19:00,240 --> 00:19:02,799
what was it all about with the

451
00:19:02,799 --> 00:19:04,960
experiment of ours what did we actually

452
00:19:04,960 --> 00:19:06,559
want to achieve

453
00:19:06,559 --> 00:19:09,440
with the use of some

454
00:19:09,440 --> 00:19:10,960
basic

455
00:19:10,960 --> 00:19:12,960
injection vectors

456
00:19:12,960 --> 00:19:15,760
of the db

457
00:19:17,280 --> 00:19:19,120
that i'm showing here

458
00:19:19,120 --> 00:19:22,559
on this slide and they are shown in red

459
00:19:22,559 --> 00:19:24,640
in each tree

460
00:19:24,640 --> 00:19:27,120
each tree

461
00:19:27,120 --> 00:19:29,760
symbolizing the context

462
00:19:29,760 --> 00:19:33,039
and these are the injections and we get

463
00:19:33,039 --> 00:19:35,840
a tree out of it it would generate

464
00:19:35,840 --> 00:19:38,400
the vectors that are not trivial

465
00:19:38,400 --> 00:19:43,120
and they're not trivial non-trivial and

466
00:19:43,120 --> 00:19:45,679
not equivalent having a different type

467
00:19:45,679 --> 00:19:48,320
of a token

468
00:19:48,799 --> 00:19:52,640
in any of a node or a different

469
00:19:52,640 --> 00:19:54,160
non-equivalent

470
00:19:54,160 --> 00:19:57,360
type of a tree

471
00:19:57,840 --> 00:19:59,280
that's

472
00:19:59,280 --> 00:20:02,080
what we would like to achieve

473
00:20:02,080 --> 00:20:04,559
and then nikolai will continue and he

474
00:20:04,559 --> 00:20:06,880
will explain how it actually

475
00:20:06,880 --> 00:20:08,480
works

476
00:20:08,480 --> 00:20:10,159
exactly and

477
00:20:10,159 --> 00:20:11,760
what we would like to

478
00:20:11,760 --> 00:20:12,640
get

479
00:20:12,640 --> 00:20:14,720
we would like to get the vectors to make

480
00:20:14,720 --> 00:20:17,039
sure that

481
00:20:17,039 --> 00:20:18,640
these conditions

482
00:20:18,640 --> 00:20:21,039
are fulfilled the iran was explaining

483
00:20:21,039 --> 00:20:23,360
and in 2014

484
00:20:23,360 --> 00:20:27,600
good fellow came up with again uh

485
00:20:28,720 --> 00:20:31,280
solution seems like that this

486
00:20:31,280 --> 00:20:32,480
suits us

487
00:20:32,480 --> 00:20:34,720
what does it actually suit us initially

488
00:20:34,720 --> 00:20:37,760
it was all about

489
00:20:38,400 --> 00:20:40,960
the pictures the images then it was

490
00:20:40,960 --> 00:20:42,559
adapted

491
00:20:42,559 --> 00:20:43,520
to

492
00:20:43,520 --> 00:20:44,960
sound and it

493
00:20:44,960 --> 00:20:47,360
definitely works with the text and our

494
00:20:47,360 --> 00:20:51,280
vectors are also text so let us just

495
00:20:51,280 --> 00:20:52,640
use again

496
00:20:52,640 --> 00:20:55,520
to generate

497
00:20:56,159 --> 00:20:57,600
the text and

498
00:20:57,600 --> 00:20:59,760
gains are

499
00:20:59,760 --> 00:21:03,679
generative adversarial networks

500
00:21:03,679 --> 00:21:05,120
discriminator

501
00:21:05,120 --> 00:21:06,880
helps us

502
00:21:06,880 --> 00:21:08,960
discriminate distinguish real data

503
00:21:08,960 --> 00:21:10,960
samples from synthesized samples and

504
00:21:10,960 --> 00:21:13,280
generate restraint to map

505
00:21:13,280 --> 00:21:16,320
noise sample to a synthetic data sample

506
00:21:16,320 --> 00:21:18,480
that can fool the discriminator and they

507
00:21:18,480 --> 00:21:19,679
both

508
00:21:19,679 --> 00:21:22,000
always rival

509
00:21:22,000 --> 00:21:25,679
each other so to speak

510
00:21:27,120 --> 00:21:29,679
so what did we take we took

511
00:21:29,679 --> 00:21:32,240
the vectors of web attack from web

512
00:21:32,240 --> 00:21:34,799
injection we added some custom cases we

513
00:21:34,799 --> 00:21:36,240
found

514
00:21:36,240 --> 00:21:39,039
uh so we used our own

515
00:21:39,039 --> 00:21:41,120
expertise

516
00:21:41,120 --> 00:21:44,159
and this is what it looks like

517
00:21:44,159 --> 00:21:46,640
we just mentioned that and

518
00:21:46,640 --> 00:21:48,159
this is the data

519
00:21:48,159 --> 00:21:49,360
so it seems like there were

520
00:21:49,360 --> 00:21:53,120
approximately 64 000 unique

521
00:21:53,120 --> 00:21:56,400
attack vectors

522
00:21:56,400 --> 00:21:58,559
and we just put them

523
00:21:58,559 --> 00:21:59,679
inside

524
00:21:59,679 --> 00:22:01,440
again

525
00:22:01,440 --> 00:22:04,880
not an ordinary one of course

526
00:22:04,880 --> 00:22:08,480
so we had to think that these data has

527
00:22:08,480 --> 00:22:10,640
taxed nature so we need to have gans

528
00:22:10,640 --> 00:22:11,440
that

529
00:22:11,440 --> 00:22:14,480
support the text and on the internet

530
00:22:14,480 --> 00:22:16,559
there are plenty of

531
00:22:16,559 --> 00:22:18,000
solutions

532
00:22:18,000 --> 00:22:20,000
available

533
00:22:20,000 --> 00:22:23,760
that they're all about tensorflow

534
00:22:23,760 --> 00:22:25,919
but it didn't work out with tensorflow

535
00:22:25,919 --> 00:22:28,000
somehow with us so

536
00:22:28,000 --> 00:22:31,440
text gun buy a pie torch however worked

537
00:22:31,440 --> 00:22:33,120
that's the framework

538
00:22:33,120 --> 00:22:35,840
those guys

539
00:22:35,840 --> 00:22:37,919
by torch

540
00:22:37,919 --> 00:22:41,440
had quite a lot of original papers on

541
00:22:41,440 --> 00:22:44,000
archive and it's a powerful

542
00:22:44,000 --> 00:22:46,080
framework

543
00:22:46,080 --> 00:22:48,159
there is a bit of

544
00:22:48,159 --> 00:22:50,080
mishmash there but

545
00:22:50,080 --> 00:22:53,280
we can use it we can actually use it and

546
00:22:53,280 --> 00:22:54,400
we

547
00:22:54,400 --> 00:22:56,880
took a few samples and we

548
00:22:56,880 --> 00:22:59,679
used our data and this is what it turned

549
00:22:59,679 --> 00:23:02,240
out to be

550
00:23:03,280 --> 00:23:05,520
this is the architecture

551
00:23:05,520 --> 00:23:09,039
of a sequential gunner or the sequential

552
00:23:09,039 --> 00:23:11,200
gan

553
00:23:11,200 --> 00:23:13,360
we can get a

554
00:23:13,360 --> 00:23:15,679
generator we can get discriminator and

555
00:23:15,679 --> 00:23:18,720
this enforcement learning when we want

556
00:23:18,720 --> 00:23:21,600
to be appraised by the discriminator who

557
00:23:21,600 --> 00:23:23,919
would like to teach and train generator

558
00:23:23,919 --> 00:23:28,960
by these samples really works as magic

559
00:23:29,120 --> 00:23:33,039
so what did we actually want to achieve

560
00:23:33,039 --> 00:23:34,640
we wanted to

561
00:23:34,640 --> 00:23:38,240
try and use end grains

562
00:23:38,240 --> 00:23:39,679
why use

563
00:23:39,679 --> 00:23:40,799
words

564
00:23:40,799 --> 00:23:43,200
we just need to generate these and it

565
00:23:43,200 --> 00:23:45,600
seems like it's going to

566
00:23:45,600 --> 00:23:48,320
skyrocket

567
00:23:48,320 --> 00:23:52,720
get tokenized instead of get token

568
00:23:52,720 --> 00:23:54,880
eyes

569
00:23:54,880 --> 00:23:56,720
we generate it

570
00:23:56,720 --> 00:23:58,000
put it into a

571
00:23:58,000 --> 00:23:59,520
model

572
00:23:59,520 --> 00:24:02,720
we froze the discriminator we defrosted

573
00:24:02,720 --> 00:24:07,120
the generator somehow it worked

574
00:24:08,159 --> 00:24:10,480
but you can still see something there

575
00:24:10,480 --> 00:24:13,440
you see unions you see selects

576
00:24:13,440 --> 00:24:17,480
so you see some keywords

577
00:24:18,400 --> 00:24:20,960
some keywords from sql so

578
00:24:20,960 --> 00:24:22,799
looks like it works and you can dig

579
00:24:22,799 --> 00:24:24,720
deeper

580
00:24:24,720 --> 00:24:26,159
so what do we see

581
00:24:26,159 --> 00:24:29,600
we can clean the data we can remove the

582
00:24:29,600 --> 00:24:32,960
outliers using clustering and

583
00:24:32,960 --> 00:24:36,559
come back to words

584
00:24:36,720 --> 00:24:40,000
remove stop words long hashes

585
00:24:40,000 --> 00:24:41,520
and that was

586
00:24:41,520 --> 00:24:43,679
creating you know some some strange

587
00:24:43,679 --> 00:24:45,840
things with

588
00:24:45,840 --> 00:24:48,080
so

589
00:24:48,880 --> 00:24:51,120
the guys have improved the process so

590
00:24:51,120 --> 00:24:53,679
much that training the model is very

591
00:24:53,679 --> 00:24:56,080
simple you just you you know push couple

592
00:24:56,080 --> 00:24:58,880
of buttons tune the parameters choose

593
00:24:58,880 --> 00:25:01,679
the metrics you'd like to

594
00:25:01,679 --> 00:25:04,720
optimize and it's quite primitive

595
00:25:04,720 --> 00:25:07,039
and

596
00:25:07,279 --> 00:25:09,679
with machine translation if you want to

597
00:25:09,679 --> 00:25:12,679
compare

598
00:25:14,480 --> 00:25:16,640
string with another string then

599
00:25:16,640 --> 00:25:19,600
there's some window for you to see that

600
00:25:19,600 --> 00:25:21,360
some metrics work and something is

601
00:25:21,360 --> 00:25:23,440
happening but you know launching the

602
00:25:23,440 --> 00:25:26,559
epochs and tuning the model

603
00:25:26,559 --> 00:25:28,480
you know seeing the loss

604
00:25:28,480 --> 00:25:31,600
drop and accuracy grow blue getting

605
00:25:31,600 --> 00:25:33,840
better

606
00:25:39,760 --> 00:25:43,679
it should have been good and and it even

607
00:25:43,679 --> 00:25:44,880
uh

608
00:25:44,880 --> 00:25:48,400
it even happened to be good

609
00:25:48,400 --> 00:25:51,120
the wrong slide

610
00:25:51,120 --> 00:25:53,840
so let's go to vectors the

611
00:25:53,840 --> 00:25:56,080
the idea that i wanted to conduct here

612
00:25:56,080 --> 00:25:58,080
is that

613
00:25:58,080 --> 00:26:00,480
we were successful at generating some

614
00:26:00,480 --> 00:26:04,720
interesting vectors that were not in the

615
00:26:04,720 --> 00:26:07,200
training

616
00:26:07,520 --> 00:26:09,039
training set

617
00:26:09,039 --> 00:26:10,960
it did something

618
00:26:10,960 --> 00:26:12,880
but of course there was quite a lot of

619
00:26:12,880 --> 00:26:13,919
vectors

620
00:26:13,919 --> 00:26:15,120
and

621
00:26:15,120 --> 00:26:17,279
to decide which one is

622
00:26:17,279 --> 00:26:20,240
right what is interesting what is not

623
00:26:20,240 --> 00:26:25,240
a slot of pain and the expert

624
00:26:26,240 --> 00:26:27,440
decision

625
00:26:27,440 --> 00:26:29,760
some you know intense look

626
00:26:29,760 --> 00:26:32,240
helps you understand what went wrong and

627
00:26:32,240 --> 00:26:33,279
what went

628
00:26:33,279 --> 00:26:34,480
right

629
00:26:34,480 --> 00:26:36,480
and ivan will talk to you more about

630
00:26:36,480 --> 00:26:39,240
this thank you thank you nikolay

631
00:26:39,240 --> 00:26:42,349
[Music]

632
00:26:42,400 --> 00:26:45,360
so the results

633
00:26:46,960 --> 00:26:48,960
are quite good there's a lot of vectors

634
00:26:48,960 --> 00:26:52,600
but most of them

635
00:26:53,679 --> 00:26:55,600
full scale injections

636
00:26:55,600 --> 00:26:59,039
some of them are but some fragments look

637
00:26:59,039 --> 00:27:03,400
like something we could use

638
00:27:06,240 --> 00:27:08,320
it's hard to say that we have found

639
00:27:08,320 --> 00:27:10,720
something that we never detected

640
00:27:10,720 --> 00:27:12,480
unfortunately

641
00:27:12,480 --> 00:27:14,880
each and every

642
00:27:14,880 --> 00:27:17,279
vector was an old one

643
00:27:17,279 --> 00:27:19,520
and we could not move further you know

644
00:27:19,520 --> 00:27:23,039
as researchers but the idea that was

645
00:27:23,039 --> 00:27:24,799
described

646
00:27:24,799 --> 00:27:27,279
getting new vectors that were not there

647
00:27:27,279 --> 00:27:30,559
in the training set

648
00:27:30,880 --> 00:27:32,320
look i learned

649
00:27:32,320 --> 00:27:34,640
i'm saying the right words i think this

650
00:27:34,640 --> 00:27:36,159
was a success

651
00:27:36,159 --> 00:27:40,000
so you can classify this

652
00:27:43,279 --> 00:27:44,399
the

653
00:27:44,399 --> 00:27:46,799
nested expressions are

654
00:27:46,799 --> 00:27:50,640
easy to generate to be generated by

655
00:27:50,640 --> 00:27:52,799
ordinary fossils but

656
00:27:52,799 --> 00:27:54,399
the second case for example isn't

657
00:27:54,399 --> 00:27:57,918
interesting because you can

658
00:27:58,880 --> 00:28:00,640
get

659
00:28:00,640 --> 00:28:02,880
here

660
00:28:07,039 --> 00:28:10,080
this is the injection vector if you add

661
00:28:10,080 --> 00:28:11,600
a closing

662
00:28:11,600 --> 00:28:13,760
closing bracket some common

663
00:28:13,760 --> 00:28:15,120
symbol

664
00:28:15,120 --> 00:28:17,440
either the

665
00:28:17,440 --> 00:28:20,640
sharp sign for for mysql or

666
00:28:20,640 --> 00:28:22,640
minus minus

667
00:28:22,640 --> 00:28:25,200
then this is an injection vector

668
00:28:25,200 --> 00:28:26,720
so

669
00:28:26,720 --> 00:28:31,140
something that is quite close

670
00:28:31,140 --> 00:28:34,179
[Music]

671
00:28:40,559 --> 00:28:41,790
like this

672
00:28:41,790 --> 00:28:43,120
[Music]

673
00:28:43,120 --> 00:28:47,200
this is a standard sql request that is

674
00:28:47,200 --> 00:28:50,320
present in all the web applications and

675
00:28:50,320 --> 00:28:53,440
by looking uh for places where you can

676
00:28:53,440 --> 00:28:55,760
you know get that vector

677
00:28:55,760 --> 00:28:59,000
we found

678
00:29:04,880 --> 00:29:07,679
this structure

679
00:29:08,880 --> 00:29:10,080
in the middle

680
00:29:10,080 --> 00:29:12,240
you have an injection vector that was in

681
00:29:12,240 --> 00:29:14,559
the database

682
00:29:14,559 --> 00:29:15,840
and its

683
00:29:15,840 --> 00:29:18,559
structure

684
00:29:19,039 --> 00:29:21,200
its three-stroke like structure is

685
00:29:21,200 --> 00:29:23,360
different from what from what we got in

686
00:29:23,360 --> 00:29:24,799
the end

687
00:29:24,799 --> 00:29:27,039
and here is a full-blown injection

688
00:29:27,039 --> 00:29:29,440
vector

689
00:29:31,679 --> 00:29:34,240
if the web application is not protected

690
00:29:34,240 --> 00:29:36,559
by some specific tools

691
00:29:36,559 --> 00:29:41,760
or not created in the specific way

692
00:29:41,760 --> 00:29:44,399
here's how

693
00:29:45,200 --> 00:29:47,279
the template looks

694
00:29:47,279 --> 00:29:50,559
for with the injection point

695
00:29:50,559 --> 00:29:53,039
you don't need to dive too deep into

696
00:29:53,039 --> 00:29:56,399
this of course you can you know

697
00:29:56,399 --> 00:29:57,679
define the

698
00:29:57,679 --> 00:30:00,640
selection tree but

699
00:30:01,200 --> 00:30:03,279
for the template that template that we

700
00:30:03,279 --> 00:30:05,039
use

701
00:30:05,039 --> 00:30:08,520
that is simple

702
00:30:08,640 --> 00:30:12,000
what i wanted to highlight

703
00:30:12,000 --> 00:30:14,240
is that if we

704
00:30:14,240 --> 00:30:16,960
substitute the

705
00:30:21,679 --> 00:30:23,200
it token okay but if we add the

706
00:30:23,200 --> 00:30:24,720
injection vector

707
00:30:24,720 --> 00:30:27,520
from there this is uh

708
00:30:27,520 --> 00:30:30,879
tree the trees are

709
00:30:32,480 --> 00:30:33,279
quite

710
00:30:33,279 --> 00:30:35,760
simple to to digest

711
00:30:35,760 --> 00:30:36,880
if we

712
00:30:36,880 --> 00:30:38,720
draw them in a

713
00:30:38,720 --> 00:30:39,550
similar way

714
00:30:39,550 --> 00:30:41,360
[Music]

715
00:30:41,360 --> 00:30:43,200
with nodes

716
00:30:43,200 --> 00:30:45,039
being like this you can see that this

717
00:30:45,039 --> 00:30:47,679
tree is the injection

718
00:30:47,679 --> 00:30:50,960
injection vector that we

719
00:30:59,440 --> 00:31:01,360
the original one

720
00:31:01,360 --> 00:31:03,679
so we had some

721
00:31:03,679 --> 00:31:06,000
interesting findings with the new

722
00:31:06,000 --> 00:31:07,919
vectors

723
00:31:07,919 --> 00:31:11,519
so to conclude what i can say

724
00:31:12,240 --> 00:31:14,720
i can say that

725
00:31:14,720 --> 00:31:17,440
decent injection protection can be

726
00:31:17,440 --> 00:31:18,640
guaranteed

727
00:31:18,640 --> 00:31:20,880
if

728
00:31:22,480 --> 00:31:24,960
you use

729
00:31:25,440 --> 00:31:27,760
either a protected

730
00:31:27,760 --> 00:31:30,480
applications

731
00:31:30,799 --> 00:31:31,760
or

732
00:31:31,760 --> 00:31:35,440
if your application is vulnerable

733
00:31:35,440 --> 00:31:38,240
then you need to use

734
00:31:38,240 --> 00:31:41,200
web web firewalls that are based on the

735
00:31:41,200 --> 00:31:42,559
formal grammars

736
00:31:42,559 --> 00:31:46,480
use the all the processes to find

737
00:31:46,480 --> 00:31:49,760
real injection vectors

738
00:31:50,559 --> 00:31:52,640
as an example to what happens in the

739
00:31:52,640 --> 00:31:53,840
real life

740
00:31:53,840 --> 00:31:57,519
i i mentioned the third one

741
00:31:57,679 --> 00:31:58,480
for

742
00:31:58,480 --> 00:32:01,519
as a production

743
00:32:01,519 --> 00:32:04,960
mechanism for another case

744
00:32:06,000 --> 00:32:07,200
it uses

745
00:32:07,200 --> 00:32:08,320
tokens

746
00:32:08,320 --> 00:32:11,120
it's the simplest step you can take

747
00:32:11,120 --> 00:32:12,720
and it's used only when you have

748
00:32:12,720 --> 00:32:14,640
additional information if you don't have

749
00:32:14,640 --> 00:32:16,960
any additional information then

750
00:32:16,960 --> 00:32:19,600
we have to use both tokenizing and

751
00:32:19,600 --> 00:32:22,480
parsing and use it together

752
00:32:22,480 --> 00:32:24,720
or

753
00:32:24,960 --> 00:32:29,120
you can aim for more global

754
00:32:29,120 --> 00:32:31,439
tool

755
00:32:33,039 --> 00:32:35,760
and try to find the injection grammar

756
00:32:35,760 --> 00:32:38,159
build the injection grammar

757
00:32:38,159 --> 00:32:42,000
same as an lead detection example

758
00:32:42,000 --> 00:32:44,720
and the

759
00:32:45,039 --> 00:32:48,960
drawback here is that it has to do a lot

760
00:32:48,960 --> 00:32:52,159
with parsing and it takes a lot of time

761
00:32:52,159 --> 00:32:53,840
that's the issue with

762
00:32:53,840 --> 00:32:54,960
its

763
00:32:54,960 --> 00:32:58,720
with their usage is to how we can try to

764
00:32:58,720 --> 00:33:01,760
make it work fast

765
00:33:05,200 --> 00:33:07,760
the portability is also an issue

766
00:33:07,760 --> 00:33:09,279
but yeah

767
00:33:09,279 --> 00:33:11,039
there is an issue

768
00:33:11,039 --> 00:33:12,880
with the portability

769
00:33:12,880 --> 00:33:15,919
writing your own code for your own

770
00:33:15,919 --> 00:33:19,360
parsers and tokenizers

771
00:33:19,360 --> 00:33:22,240
is not easy and if you use generators

772
00:33:22,240 --> 00:33:24,240
for tokenizers and process they can be

773
00:33:24,240 --> 00:33:27,039
incompatible

774
00:33:29,279 --> 00:33:31,919
but what can we offer

775
00:33:31,919 --> 00:33:34,559
what is the way to go

776
00:33:34,559 --> 00:33:36,000
to move

777
00:33:36,000 --> 00:33:39,039
to ensure that wafts protect us from

778
00:33:39,039 --> 00:33:41,600
injections

779
00:33:42,080 --> 00:33:45,200
you need to use the layered approach

780
00:33:45,200 --> 00:33:46,880
and i think it's it's the right way

781
00:33:46,880 --> 00:33:49,279
really

782
00:33:51,120 --> 00:33:54,399
i don't know about the current wafs

783
00:33:54,399 --> 00:33:57,279
their structure and way of

784
00:33:57,279 --> 00:33:58,559
working is

785
00:33:58,559 --> 00:34:01,200
usually hidden

786
00:34:01,200 --> 00:34:03,919
but if you use lay the porch

787
00:34:03,919 --> 00:34:07,840
then you can get both advantages

788
00:34:08,560 --> 00:34:09,839
processing

789
00:34:09,839 --> 00:34:12,480
the legal traffic fast and if you see

790
00:34:12,480 --> 00:34:14,239
the injection then

791
00:34:14,239 --> 00:34:15,679
by

792
00:34:15,679 --> 00:34:17,199
using the

793
00:34:17,199 --> 00:34:21,119
analysis the vector analysis

794
00:34:21,119 --> 00:34:22,719
we can

795
00:34:22,719 --> 00:34:23,839
use the

796
00:34:23,839 --> 00:34:26,879
the most appropriate tools to

797
00:34:26,879 --> 00:34:29,359
analyze it using ml

798
00:34:29,359 --> 00:34:32,159
is very interesting

799
00:34:32,159 --> 00:34:34,560
especially with different languages and

800
00:34:34,560 --> 00:34:37,359
injection types

801
00:34:37,359 --> 00:34:40,960
and i think this approach has shown that

802
00:34:40,960 --> 00:34:43,280
the vectors can be

803
00:34:43,280 --> 00:34:45,239
really

804
00:34:45,239 --> 00:34:47,199
[Music]

805
00:34:47,199 --> 00:34:48,480
done well

806
00:34:48,480 --> 00:34:50,480
and analytics should be taken into

807
00:34:50,480 --> 00:34:53,199
consideration

808
00:34:53,280 --> 00:34:55,679
so here are the perspectives

809
00:34:55,679 --> 00:34:58,160
[Music]

810
00:34:58,160 --> 00:35:02,240
maybe nikolai will add some words

811
00:35:02,240 --> 00:35:03,520
but with that

812
00:35:03,520 --> 00:35:05,920
i'd like to conclude thank you for your

813
00:35:05,920 --> 00:35:08,400
attention

814
00:35:11,839 --> 00:35:15,000
any questions

815
00:35:23,359 --> 00:35:25,520
some questions first

816
00:35:25,520 --> 00:35:27,280
uh why didn't you succeed with

817
00:35:27,280 --> 00:35:28,880
tensorflow

818
00:35:28,880 --> 00:35:30,960
and the second question

819
00:35:30,960 --> 00:35:34,960
did you look at playing with gann

820
00:35:34,960 --> 00:35:37,920
uh changing the strings the op codes the

821
00:35:37,920 --> 00:35:39,520
bytes

822
00:35:39,520 --> 00:35:43,920
in the malware just to look at how

823
00:35:44,320 --> 00:35:47,680
you can bypass the av solutions

824
00:35:47,680 --> 00:35:48,960
maybe you know

825
00:35:48,960 --> 00:35:51,440
try to

826
00:35:51,839 --> 00:35:55,839
change the generation rules in cm

827
00:35:55,920 --> 00:35:58,560
and with sandbox working on drag wolf

828
00:35:58,560 --> 00:36:00,960
why wouldn't you use dynamic analysis

829
00:36:00,960 --> 00:36:03,680
and generate some extra vectors on how

830
00:36:03,680 --> 00:36:04,400
to

831
00:36:04,400 --> 00:36:07,119
execute malware and maybe try to you

832
00:36:07,119 --> 00:36:09,200
know push that idea

833
00:36:09,200 --> 00:36:10,560
thanks

834
00:36:10,560 --> 00:36:12,640
well you said a lot of you've said a lot

835
00:36:12,640 --> 00:36:13,920
of things so

836
00:36:13,920 --> 00:36:17,920
first question is tensorflow or pytorch

837
00:36:18,560 --> 00:36:21,520
python because tensorflow is no longer

838
00:36:21,520 --> 00:36:24,520
tensorflow

839
00:36:26,079 --> 00:36:27,839
it's

840
00:36:27,839 --> 00:36:29,680
easier for us to work with fighters this

841
00:36:29,680 --> 00:36:31,599
is subjective opinion

842
00:36:31,599 --> 00:36:33,040
so you

843
00:36:33,040 --> 00:36:34,720
talk about malware we live in a

844
00:36:34,720 --> 00:36:36,320
different world

845
00:36:36,320 --> 00:36:37,359
let's

846
00:36:37,359 --> 00:36:39,839
agree on what malware is we don't have

847
00:36:39,839 --> 00:36:42,799
any sandboxes

848
00:36:43,200 --> 00:36:45,280
we have just web traffic we don't have

849
00:36:45,280 --> 00:36:47,839
any malware we have http requests that

850
00:36:47,839 --> 00:36:50,320
we can use to put some

851
00:36:50,320 --> 00:36:52,720
bad words there and get some you know

852
00:36:52,720 --> 00:36:54,800
bad results so

853
00:36:54,800 --> 00:36:59,280
you can put an http request and

854
00:36:59,280 --> 00:37:02,400
by putting the file there so you look at

855
00:37:02,400 --> 00:37:04,800
it tcp and you

856
00:37:04,800 --> 00:37:06,640
get all the bytes

857
00:37:06,640 --> 00:37:08,800
malware and cep

858
00:37:08,800 --> 00:37:11,359
that's it we talk about different goals

859
00:37:11,359 --> 00:37:14,560
you talk more about shells and binaries

860
00:37:14,560 --> 00:37:17,680
but we only talk about sql injections

861
00:37:17,680 --> 00:37:18,480
and

862
00:37:18,480 --> 00:37:19,200
the

863
00:37:19,200 --> 00:37:22,000
data is attack vectors in the context of

864
00:37:22,000 --> 00:37:24,320
applications yes

865
00:37:24,320 --> 00:37:26,800
you can

866
00:37:27,200 --> 00:37:28,640
load shells

867
00:37:28,640 --> 00:37:30,880
we know how to do it so this is not on

868
00:37:30,880 --> 00:37:33,119
the topic of the presentation yeah just

869
00:37:33,119 --> 00:37:34,240
just

870
00:37:34,240 --> 00:37:37,839
want to know thank you

871
00:37:38,640 --> 00:37:40,960
thank you for presentation dmitry uh

872
00:37:40,960 --> 00:37:43,520
jessica from swear one

873
00:37:43,520 --> 00:37:45,920
uh on the floor

874
00:37:45,920 --> 00:37:47,920
did you try to

875
00:37:47,920 --> 00:37:50,160
analyze the performance and maybe

876
00:37:50,160 --> 00:37:52,799
brute-force it

877
00:37:52,880 --> 00:37:54,800
maybe create a simple parser and

878
00:37:54,800 --> 00:37:56,560
generate

879
00:37:56,560 --> 00:37:58,720
using the parser

880
00:37:58,720 --> 00:38:01,520
well yeah it's uh in the beginning of

881
00:38:01,520 --> 00:38:03,119
the presentation so

882
00:38:03,119 --> 00:38:06,000
uh classic fun thing the task we had is

883
00:38:06,000 --> 00:38:09,599
to was to find the vectors we never saw

884
00:38:09,599 --> 00:38:12,160
if we have a leap detection base

885
00:38:12,160 --> 00:38:14,720
that knows everything about everyone

886
00:38:14,720 --> 00:38:17,280
and if we launch a scanner

887
00:38:17,280 --> 00:38:19,359
then our protection tools know

888
00:38:19,359 --> 00:38:21,760
everything about it and we will not

889
00:38:21,760 --> 00:38:23,760
see anything here

890
00:38:23,760 --> 00:38:25,599
so the question is about the performance

891
00:38:25,599 --> 00:38:27,839
right

892
00:38:28,800 --> 00:38:30,000
so you

893
00:38:30,000 --> 00:38:32,320
you found a huge dictionary right and

894
00:38:32,320 --> 00:38:36,240
you could you know brute force your way

895
00:38:36,720 --> 00:38:39,839
well yeah if you have many

896
00:38:39,839 --> 00:38:41,520
trees many

897
00:38:41,520 --> 00:38:43,920
injection points and put everything into

898
00:38:43,920 --> 00:38:46,400
every place then might be painful

899
00:38:46,400 --> 00:38:47,520
yeah

900
00:38:47,520 --> 00:38:49,200
but

901
00:38:49,200 --> 00:38:51,200
whether these

902
00:38:51,200 --> 00:38:52,160
can be

903
00:38:52,160 --> 00:38:55,760
you know run through sql synthesis and

904
00:38:55,760 --> 00:39:00,000
uh checked in practice i don't know

905
00:39:00,000 --> 00:39:02,160
well we have our own eye we have our own

906
00:39:02,160 --> 00:39:03,440
expert opinion

907
00:39:03,440 --> 00:39:06,160
we can validate the results using our

908
00:39:06,160 --> 00:39:07,200
eyes

909
00:39:07,200 --> 00:39:10,720
second we don't want to

910
00:39:11,680 --> 00:39:12,800
just use

911
00:39:12,800 --> 00:39:16,079
some simple attack characters we want to

912
00:39:16,079 --> 00:39:18,400
get the new vectors this is the

913
00:39:18,400 --> 00:39:20,880
difference

914
00:39:21,119 --> 00:39:24,240
well i i see i think that by by just

915
00:39:24,240 --> 00:39:27,119
brute forcing this we might get

916
00:39:27,119 --> 00:39:30,960
more options it's not the question of

917
00:39:30,960 --> 00:39:33,520
quality

918
00:39:34,960 --> 00:39:37,280
the new injection point for fuzzing will

919
00:39:37,280 --> 00:39:38,560
be the same

920
00:39:38,560 --> 00:39:41,599
that we saw previously

921
00:39:41,599 --> 00:39:45,520
and here we have a new tree

922
00:39:45,520 --> 00:39:47,520
but we won't know

923
00:39:47,520 --> 00:39:50,880
until we until we try right if you push

924
00:39:50,880 --> 00:39:52,880
if you touch the black box from the

925
00:39:52,880 --> 00:39:55,680
outside we have feedback we can validate

926
00:39:55,680 --> 00:39:58,400
the results and understand what's going

927
00:39:58,400 --> 00:40:00,640
on maybe i did not

928
00:40:00,640 --> 00:40:03,119
succeed in explaining this but then the

929
00:40:03,119 --> 00:40:06,830
task is is easier right

930
00:40:06,830 --> 00:40:08,160
[Music]

931
00:40:08,160 --> 00:40:09,119
now

932
00:40:09,119 --> 00:40:13,520
just using brute force is more effective

933
00:40:13,680 --> 00:40:16,079
why would it be more effective we are

934
00:40:16,079 --> 00:40:18,160
talking about generating the samples

935
00:40:18,160 --> 00:40:19,839
that are valid

936
00:40:19,839 --> 00:40:21,839
in terms of the syntaxes and the brute

937
00:40:21,839 --> 00:40:25,280
force would not give you this result

938
00:40:25,280 --> 00:40:28,160
so we brute force we run through sql

939
00:40:28,160 --> 00:40:31,440
synthesis if the synthesis works then we

940
00:40:31,440 --> 00:40:33,040
go to

941
00:40:33,040 --> 00:40:35,119
do the checks

942
00:40:35,119 --> 00:40:37,680
did you try to to maybe compare the

943
00:40:37,680 --> 00:40:39,839
performance especially on volume on huge

944
00:40:39,839 --> 00:40:42,240
volumes

945
00:40:42,240 --> 00:40:44,400
okay so let me try to

946
00:40:44,400 --> 00:40:47,210
understand the question and reply to it

947
00:40:47,210 --> 00:40:50,260
[Music]

948
00:40:50,720 --> 00:40:53,520
performance wise

949
00:40:53,520 --> 00:40:56,720
the amount of uh vectors generated we

950
00:40:56,720 --> 00:40:58,319
will um

951
00:40:58,319 --> 00:41:00,960
we can

952
00:41:01,599 --> 00:41:03,760
go

953
00:41:04,000 --> 00:41:05,599
the grammar way

954
00:41:05,599 --> 00:41:07,440
create some

955
00:41:07,440 --> 00:41:09,920
injection vector grammar and

956
00:41:09,920 --> 00:41:10,800
uh

957
00:41:10,800 --> 00:41:13,119
try to create a generator

958
00:41:13,119 --> 00:41:14,880
that

959
00:41:14,880 --> 00:41:17,200
covers all the grammar

960
00:41:17,200 --> 00:41:20,480
so we take the grammar and by using some

961
00:41:20,480 --> 00:41:22,480
expert opinion we will understand what

962
00:41:22,480 --> 00:41:24,640
are the

963
00:41:24,640 --> 00:41:26,800
the

964
00:41:26,800 --> 00:41:29,200
nodes

965
00:41:29,520 --> 00:41:31,520
and create an application that will

966
00:41:31,520 --> 00:41:33,200
generate something for us

967
00:41:33,200 --> 00:41:36,960
yes this will be complete

968
00:41:39,920 --> 00:41:41,359
exhaustive search

969
00:41:41,359 --> 00:41:46,279
but we can put all the options there

970
00:41:48,240 --> 00:41:49,760
and

971
00:41:49,760 --> 00:41:51,839
i think what you

972
00:41:51,839 --> 00:41:54,480
meant here is that you want to get a

973
00:41:54,480 --> 00:41:55,920
tool

974
00:41:55,920 --> 00:41:57,920
that will generate

975
00:41:57,920 --> 00:42:00,240
more

976
00:42:00,839 --> 00:42:03,680
knowledge so the

977
00:42:03,680 --> 00:42:06,319
idea that you gave has all the

978
00:42:06,319 --> 00:42:08,240
all the knowledge

979
00:42:08,240 --> 00:42:10,240
and we can get everything from there but

980
00:42:10,240 --> 00:42:11,920
if we have some

981
00:42:11,920 --> 00:42:13,440
training

982
00:42:13,440 --> 00:42:15,630
sample

983
00:42:15,630 --> 00:42:17,359
[Music]

984
00:42:17,359 --> 00:42:19,280
as i see the task

985
00:42:19,280 --> 00:42:22,079
is whether we can get more knowledge

986
00:42:22,079 --> 00:42:23,839
from

987
00:42:23,839 --> 00:42:24,640
the

988
00:42:24,640 --> 00:42:26,079
the current approach

989
00:42:26,079 --> 00:42:28,319
can we create a brute force tool sure

990
00:42:28,319 --> 00:42:31,760
can we create a tool that will generate

991
00:42:31,760 --> 00:42:33,680
all the possible options for us yes

992
00:42:33,680 --> 00:42:35,119
absolutely

993
00:42:35,119 --> 00:42:37,920
but practical compatibility is a

994
00:42:37,920 --> 00:42:40,880
question can we use those tools in the

995
00:42:40,880 --> 00:42:42,400
future

996
00:42:42,400 --> 00:42:43,520
to

997
00:42:43,520 --> 00:42:47,440
you know put them into the defense tools

998
00:42:47,440 --> 00:42:48,960
or attack tools

999
00:42:48,960 --> 00:42:52,000
well for us it's more of a

1000
00:42:52,000 --> 00:42:54,880
defense question if we don't know

1001
00:42:54,880 --> 00:42:56,160
how to attack

1002
00:42:56,160 --> 00:42:58,480
probably it will be hard to

1003
00:42:58,480 --> 00:43:01,440
and to defend

1004
00:43:02,560 --> 00:43:04,880
so in terms of

1005
00:43:04,880 --> 00:43:07,359
the defense we need to get

1006
00:43:07,359 --> 00:43:08,240
the

1007
00:43:08,240 --> 00:43:11,620
understanding of the vector

1008
00:43:11,620 --> 00:43:13,040
[Music]

1009
00:43:13,040 --> 00:43:15,520
so if we can generate all the possible

1010
00:43:15,520 --> 00:43:19,599
vectors and get more knowledge get more

1011
00:43:19,599 --> 00:43:21,359
information

1012
00:43:21,359 --> 00:43:25,480
then we have some

1013
00:43:26,319 --> 00:43:27,440
chance

1014
00:43:27,440 --> 00:43:29,760
that

1015
00:43:30,480 --> 00:43:33,440
we'll be able to

1016
00:43:34,560 --> 00:43:37,720
to react

1017
00:43:50,079 --> 00:43:53,079
um

1018
00:43:55,280 --> 00:43:59,200
so we're limited by the grammar if you

1019
00:43:59,200 --> 00:44:02,160
do exhaustive search based on predefined

1020
00:44:02,160 --> 00:44:06,000
rules then where do you get them

1021
00:44:06,000 --> 00:44:08,160
and where do you get the original big

1022
00:44:08,160 --> 00:44:10,720
dictionary

1023
00:44:12,560 --> 00:44:15,359
and you either don't have an exhaustive

1024
00:44:15,359 --> 00:44:17,359
search

1025
00:44:17,359 --> 00:44:18,960
because github can

1026
00:44:18,960 --> 00:44:20,640
github can

1027
00:44:20,640 --> 00:44:21,599
not

1028
00:44:21,599 --> 00:44:22,800
have

1029
00:44:22,800 --> 00:44:24,720
some exotic

1030
00:44:24,720 --> 00:44:26,079
cases

1031
00:44:26,079 --> 00:44:30,000
can we can we put all the ex

1032
00:44:33,599 --> 00:44:35,599
all the possible tokens that can be in

1033
00:44:35,599 --> 00:44:38,240
all the possible dialects

1034
00:44:38,240 --> 00:44:39,440
i don't know

1035
00:44:39,440 --> 00:44:41,119
theoretically yes

1036
00:44:41,119 --> 00:44:42,800
but in practice

1037
00:44:42,800 --> 00:44:44,000
no

1038
00:44:44,000 --> 00:44:45,599
um

1039
00:44:45,599 --> 00:44:49,359
sorry can we maybe move this to yeah to

1040
00:44:49,359 --> 00:44:52,160
to to an offline discussion sure

1041
00:44:52,160 --> 00:44:54,800
andrews burbank

1042
00:44:54,800 --> 00:44:57,070
two questions

1043
00:44:57,070 --> 00:44:58,319
[Music]

1044
00:44:58,319 --> 00:45:02,079
used against so basic metrics of

1045
00:45:02,079 --> 00:45:05,760
language models no custom metrics for

1046
00:45:05,760 --> 00:45:08,240
the discriminator right

1047
00:45:08,240 --> 00:45:12,240
yeah we used what we had

1048
00:45:12,400 --> 00:45:16,200
it's gone lead gun

1049
00:45:23,680 --> 00:45:25,680
it's very hard to understand

1050
00:45:25,680 --> 00:45:27,440
where to stop

1051
00:45:27,440 --> 00:45:29,680
the pain you are talking about

1052
00:45:29,680 --> 00:45:32,960
i definitely felt that pain and it was

1053
00:45:32,960 --> 00:45:34,240
hard to

1054
00:45:34,240 --> 00:45:35,440
understand

1055
00:45:35,440 --> 00:45:39,440
100 epochs 150 epochs you know you get

1056
00:45:39,440 --> 00:45:41,280
this buck or that back

1057
00:45:41,280 --> 00:45:43,440
and it's very very hard to

1058
00:45:43,440 --> 00:45:45,760
find the edge find the end at some point

1059
00:45:45,760 --> 00:45:48,800
in time i just push it to i1 and he says

1060
00:45:48,800 --> 00:45:51,440
it's okay it's not okay then i do some

1061
00:45:51,440 --> 00:45:54,800
other you know motions and he says well

1062
00:45:54,800 --> 00:45:57,839
it's better this way and so here's how

1063
00:45:57,839 --> 00:45:59,760
here's how it looks

1064
00:45:59,760 --> 00:46:01,680
second question you

1065
00:46:01,680 --> 00:46:03,280
showed how

1066
00:46:03,280 --> 00:46:06,319
the trees brought the rodent during the

1067
00:46:06,319 --> 00:46:07,680
injection

1068
00:46:07,680 --> 00:46:10,160
and how does this compare with you know

1069
00:46:10,160 --> 00:46:11,920
normal requests

1070
00:46:11,920 --> 00:46:15,440
between normal requests

1071
00:46:22,240 --> 00:46:24,800
yeah if we pass to graphs that might be

1072
00:46:24,800 --> 00:46:27,359
an interesting thoughts yeah

1073
00:46:27,359 --> 00:46:29,620
wasn't really safe in fortex

1074
00:46:29,620 --> 00:46:31,280
[Music]

1075
00:46:31,280 --> 00:46:33,440
my question is

1076
00:46:33,440 --> 00:46:36,319
about the tree shown there

1077
00:46:36,319 --> 00:46:38,079
can we

1078
00:46:38,079 --> 00:46:40,640
show the slide with the tree so when we

1079
00:46:40,640 --> 00:46:44,078
start with uh

1080
00:46:44,290 --> 00:46:47,420
[Music]

1081
00:46:50,560 --> 00:46:51,440
so

1082
00:46:51,440 --> 00:46:53,040
select statement

1083
00:46:53,040 --> 00:46:56,480
this route is in the application itself

1084
00:46:56,480 --> 00:46:58,640
right

1085
00:46:58,880 --> 00:47:02,000
and the right thing

1086
00:47:02,480 --> 00:47:03,760
is

1087
00:47:03,760 --> 00:47:07,760
the result of the injection right yes

1088
00:47:07,760 --> 00:47:11,359
so does the

1089
00:47:11,359 --> 00:47:14,319
wow has the access to the web

1090
00:47:14,319 --> 00:47:16,720
application no it doesn't so how do you

1091
00:47:16,720 --> 00:47:19,200
parse the syntaxes then if you start

1092
00:47:19,200 --> 00:47:22,640
from the arbitrary point in this sequel

1093
00:47:22,640 --> 00:47:24,079
if you don't have the root if you have

1094
00:47:24,079 --> 00:47:25,839
the root you build all the glamour and

1095
00:47:25,839 --> 00:47:27,200
this works

1096
00:47:27,200 --> 00:47:28,640
perfectly well but you don't have the

1097
00:47:28,640 --> 00:47:30,000
root

1098
00:47:30,000 --> 00:47:33,119
correct a great question

1099
00:47:33,119 --> 00:47:37,079
and an interesting problem

1100
00:47:41,760 --> 00:47:44,559
if we talk in terms of the scientific

1101
00:47:44,559 --> 00:47:46,079
terms

1102
00:47:46,079 --> 00:47:47,839
then if we

1103
00:47:47,839 --> 00:47:50,319
build a language for

1104
00:47:50,319 --> 00:47:52,079
injection vectors it will be context

1105
00:47:52,079 --> 00:47:54,640
dependent congratulations

1106
00:47:54,640 --> 00:47:56,879
thanks

1107
00:47:56,960 --> 00:48:01,280
so here you have some difficulties

1108
00:48:04,000 --> 00:48:06,319
the question was about the mailbox why

1109
00:48:06,319 --> 00:48:10,640
do we try to use ml here to build such

1110
00:48:10,640 --> 00:48:12,240
a language

1111
00:48:12,240 --> 00:48:15,598
is is a difficult thing

1112
00:48:17,040 --> 00:48:18,960
and to have

1113
00:48:18,960 --> 00:48:21,040
the capability to

1114
00:48:21,040 --> 00:48:24,319
have a parser from this language

1115
00:48:24,319 --> 00:48:26,160
you can you can have the language the

1116
00:48:26,160 --> 00:48:28,079
contents independent language but to

1117
00:48:28,079 --> 00:48:29,599
build a parser is

1118
00:48:29,599 --> 00:48:31,200
as an issue yes

1119
00:48:31,200 --> 00:48:35,839
and also you have an issue in practice

1120
00:48:36,319 --> 00:48:39,839
with the case you've described

1121
00:48:44,319 --> 00:48:47,040
the balance between false positives and

1122
00:48:47,040 --> 00:48:50,319
false negatives

1123
00:48:50,319 --> 00:48:54,319
can look like an injection

1124
00:48:57,599 --> 00:48:59,680
and currently there's no scientific

1125
00:48:59,680 --> 00:49:02,640
solution for for this so it would be

1126
00:49:02,640 --> 00:49:05,760
interesting to to think about this right

1127
00:49:05,760 --> 00:49:08,079
yeah the question i wanted to ask you is

1128
00:49:08,079 --> 00:49:10,880
why do you limit yourself to just this

1129
00:49:10,880 --> 00:49:13,520
sequel because you can use shell and

1130
00:49:13,520 --> 00:49:15,760
other things the syntaxes is very

1131
00:49:15,760 --> 00:49:17,280
different and

1132
00:49:17,280 --> 00:49:19,680
you get into even a tougher situation

1133
00:49:19,680 --> 00:49:22,960
not only with the free context but also

1134
00:49:22,960 --> 00:49:25,119
in

1135
00:49:26,000 --> 00:49:28,079
in free tokens i understood the issue

1136
00:49:28,079 --> 00:49:29,599
thank you thank you indeed and this is

1137
00:49:29,599 --> 00:49:31,520
an interesting

1138
00:49:31,520 --> 00:49:34,079
direction

1139
00:49:38,000 --> 00:49:41,119
hi the question i have

1140
00:49:41,119 --> 00:49:42,240
is

1141
00:49:42,240 --> 00:49:44,240
is it a research

1142
00:49:44,240 --> 00:49:46,800
issue research question because you said

1143
00:49:46,800 --> 00:49:48,400
there's you need

1144
00:49:48,400 --> 00:49:51,280
an expert opinion on pretty much every

1145
00:49:51,280 --> 00:49:53,280
outcome of this scan

1146
00:49:53,280 --> 00:49:54,240
and

1147
00:49:54,240 --> 00:49:57,200
this can help you build the base but you

1148
00:49:57,200 --> 00:49:58,720
cannot

1149
00:49:58,720 --> 00:50:02,078
push this into some

1150
00:50:04,640 --> 00:50:06,720
some automation

1151
00:50:06,720 --> 00:50:10,079
the issue is quite simple ivan now knows

1152
00:50:10,079 --> 00:50:12,800
everything that happened and he will be

1153
00:50:12,800 --> 00:50:15,520
able to create decent rules so that our

1154
00:50:15,520 --> 00:50:17,599
protection tools are better

1155
00:50:17,599 --> 00:50:20,160
okay so it helps the expert but it does

1156
00:50:20,160 --> 00:50:22,160
not automate right yes this is a

1157
00:50:22,160 --> 00:50:24,640
research

1158
00:50:25,599 --> 00:50:27,280
you said that

1159
00:50:27,280 --> 00:50:28,880
this is a research work and this is

1160
00:50:28,880 --> 00:50:30,240
really

1161
00:50:30,240 --> 00:50:33,280
something we don't aim to be generating

1162
00:50:33,280 --> 00:50:36,480
final results thanks hello

1163
00:50:36,480 --> 00:50:39,359
andrew mironenka and i wanted to ask a

1164
00:50:39,359 --> 00:50:41,119
simple question

1165
00:50:41,119 --> 00:50:42,720
you got the vectors

1166
00:50:42,720 --> 00:50:45,359
the new vectors

1167
00:50:45,359 --> 00:50:48,240
used uh reinforced learning

1168
00:50:48,240 --> 00:50:51,599
did you give them to pentesters does

1169
00:50:51,599 --> 00:50:53,119
this injection work

1170
00:50:53,119 --> 00:50:55,839
no this is not

1171
00:50:56,000 --> 00:50:59,359
so for the vectors we got

1172
00:50:59,610 --> 00:51:02,889
[Music]

1173
00:51:02,960 --> 00:51:04,160
we tried

1174
00:51:04,160 --> 00:51:06,319
uh i did you know

1175
00:51:06,319 --> 00:51:08,720
check this on docker but my experience

1176
00:51:08,720 --> 00:51:10,640
is enough to say that this will work and

1177
00:51:10,640 --> 00:51:12,400
this will not

1178
00:51:12,400 --> 00:51:15,119
so things that were found by the machine

1179
00:51:15,119 --> 00:51:19,800
learning not all of them will work

1180
00:51:23,040 --> 00:51:24,720
you said there are some good ones not

1181
00:51:24,720 --> 00:51:27,040
all of them will work perfectly well but

1182
00:51:27,040 --> 00:51:28,720
if you you know

1183
00:51:28,720 --> 00:51:30,720
tweak them a little bit they will they

1184
00:51:30,720 --> 00:51:31,520
will

1185
00:51:31,520 --> 00:51:34,400
thank you thanks much great presentation

1186
00:51:34,400 --> 00:51:37,200
and uh comments from my side

1187
00:51:37,200 --> 00:51:39,040
if you continue the brute force

1188
00:51:39,040 --> 00:51:40,800
discussion i can help the colleagues

1189
00:51:40,800 --> 00:51:44,559
with a couple of microsoft

1190
00:51:44,559 --> 00:51:46,880
reports that show that if you use the

1191
00:51:46,880 --> 00:51:51,079
same hardware the same

1192
00:51:51,119 --> 00:51:52,720
computational power

1193
00:51:52,720 --> 00:51:55,119
then you will be able to get

1194
00:51:55,119 --> 00:51:58,400
same type of results so first

1195
00:51:58,400 --> 00:52:01,200
question is why did you have that

1196
00:52:01,200 --> 00:52:04,240
you know little size of the training set

1197
00:52:04,240 --> 00:52:07,040
and i think that this volume is not

1198
00:52:07,040 --> 00:52:10,160
enough to to work with gans even you

1199
00:52:10,160 --> 00:52:10,880
know

1200
00:52:10,880 --> 00:52:14,240
2014 publications have much bigger

1201
00:52:14,240 --> 00:52:17,440
volume maybe this is the the reason

1202
00:52:17,440 --> 00:52:21,359
uh for not that many results and uh the

1203
00:52:21,359 --> 00:52:24,400
idea here is also that it's not a text

1204
00:52:24,400 --> 00:52:26,240
it's a graph and

1205
00:52:26,240 --> 00:52:27,599
then

1206
00:52:27,599 --> 00:52:30,559
this might reduce the

1207
00:52:30,559 --> 00:52:32,960
training the internet trainings that

1208
00:52:32,960 --> 00:52:34,160
size

1209
00:52:34,160 --> 00:52:35,440
so

1210
00:52:35,440 --> 00:52:39,599
could you maybe you know try to

1211
00:52:39,599 --> 00:52:42,720
use a bigger training set

1212
00:52:42,720 --> 00:52:45,680
no we did not we know how to do it

1213
00:52:45,680 --> 00:52:46,800
there's

1214
00:52:46,800 --> 00:52:49,680
an idea on how we can represent text as

1215
00:52:49,680 --> 00:52:53,760
a graph and the guys from us burbank

1216
00:52:53,760 --> 00:52:54,640
also

1217
00:52:54,640 --> 00:52:56,880
told us about this and this is cool

1218
00:52:56,880 --> 00:52:58,839
why did

1219
00:52:58,839 --> 00:53:01,200
the as i haven't said

1220
00:53:01,200 --> 00:53:03,359
some you know

1221
00:53:03,359 --> 00:53:06,640
common signs and

1222
00:53:06,880 --> 00:53:09,920
this works why why did we decide to try

1223
00:53:09,920 --> 00:53:11,920
it with this amount of

1224
00:53:11,920 --> 00:53:13,280
training data

1225
00:53:13,280 --> 00:53:14,960
we just wanted to

1226
00:53:14,960 --> 00:53:18,000
and another question is or maybe an idea

1227
00:53:18,000 --> 00:53:20,079
besides the abstract discriminator you

1228
00:53:20,079 --> 00:53:22,160
have a discriminator

1229
00:53:22,160 --> 00:53:23,760
which is the product

1230
00:53:23,760 --> 00:53:24,640
which

1231
00:53:24,640 --> 00:53:27,119
you can use to

1232
00:53:27,119 --> 00:53:28,640
push all that

1233
00:53:28,640 --> 00:53:30,880
output there and

1234
00:53:30,880 --> 00:53:33,680
as it is the

1235
00:53:33,680 --> 00:53:36,880
uh the useful data and maybe it's an

1236
00:53:36,880 --> 00:53:38,319
interesting feedback when especially

1237
00:53:38,319 --> 00:53:40,480
when the product does not consider this

1238
00:53:40,480 --> 00:53:43,359
an injection because for the generator

1239
00:53:43,359 --> 00:53:46,880
this might help train it and

1240
00:53:46,880 --> 00:53:48,960
yes we had some ideas and a different

1241
00:53:48,960 --> 00:53:52,079
type of research we did a similar

1242
00:53:52,079 --> 00:53:54,720
case it was all about injections but a

1243
00:53:54,720 --> 00:53:59,280
wider uh wider example where the product

1244
00:53:59,280 --> 00:54:02,079
was used there for teaching purposes if

1245
00:54:02,079 --> 00:54:05,760
we insert it here if we applied it here

1246
00:54:05,760 --> 00:54:08,000
there'd also be a boost

1247
00:54:08,000 --> 00:54:11,280
and we'd want to go for reinforcement

1248
00:54:11,280 --> 00:54:12,559
learning

1249
00:54:12,559 --> 00:54:14,880
which we're going to treat very nicely

1250
00:54:14,880 --> 00:54:19,119
and treat it with carrot not the stick

1251
00:54:19,119 --> 00:54:21,119
two final questions please and we need

1252
00:54:21,119 --> 00:54:24,680
to wrap it up

1253
00:54:26,880 --> 00:54:29,280
hello colleagues

1254
00:54:29,280 --> 00:54:30,400
from

1255
00:54:30,400 --> 00:54:33,200
academy there was a question

1256
00:54:33,200 --> 00:54:35,200
when this colleague from

1257
00:54:35,200 --> 00:54:37,280
zberbank was talking

1258
00:54:37,280 --> 00:54:39,520
you took this whole pipeline started

1259
00:54:39,520 --> 00:54:42,079
from data processing and in with the

1260
00:54:42,079 --> 00:54:44,400
creation of the model

1261
00:54:44,400 --> 00:54:45,200
so

1262
00:54:45,200 --> 00:54:47,760
there would be an idea just to take

1263
00:54:47,760 --> 00:54:49,599
a model

1264
00:54:49,599 --> 00:54:50,880
which would be

1265
00:54:50,880 --> 00:54:53,440
ready gtp root gdp

1266
00:54:53,440 --> 00:54:55,119
and train it

1267
00:54:55,119 --> 00:54:57,440
with the use of your own data

1268
00:54:57,440 --> 00:54:59,119
of course you

1269
00:54:59,119 --> 00:54:59,920
take the

1270
00:54:59,920 --> 00:55:01,520
[Music]

1271
00:55:01,520 --> 00:55:04,960
take the regular text

1272
00:55:04,960 --> 00:55:09,280
your solution here is formal uh maybe we

1273
00:55:09,280 --> 00:55:12,799
should try the one that i'm asking about

1274
00:55:12,799 --> 00:55:14,640
sometimes the model that you described

1275
00:55:14,640 --> 00:55:15,839
we

1276
00:55:15,839 --> 00:55:18,079
give it a try and give it a touch

1277
00:55:18,079 --> 00:55:20,799
okay i understand

1278
00:55:20,799 --> 00:55:23,200
and sometimes all of the data

1279
00:55:23,200 --> 00:55:24,720
sets are

1280
00:55:24,720 --> 00:55:26,160
foreign made

1281
00:55:26,160 --> 00:55:28,720
so did you have any notion

1282
00:55:28,720 --> 00:55:32,559
of sharing these data with the community

1283
00:55:32,559 --> 00:55:34,480
actually the actual data set i was

1284
00:55:34,480 --> 00:55:38,240
talking about was open the lip injection

1285
00:55:38,240 --> 00:55:41,920
was open so cat asterisk

1286
00:55:41,920 --> 00:55:46,400
sql just one set and get similar results

1287
00:55:46,400 --> 00:55:47,280
and

1288
00:55:47,280 --> 00:55:50,160
that part which was ours unfortunately

1289
00:55:50,160 --> 00:55:52,160
we cannot share it it's our own

1290
00:55:52,160 --> 00:55:53,200
knowledge

1291
00:55:53,200 --> 00:55:56,240
we realized the that in products and

1292
00:55:56,240 --> 00:55:59,599
that's we've got our expertise

1293
00:55:59,599 --> 00:56:01,200
yes i would like to add a few words

1294
00:56:01,200 --> 00:56:03,920
about publishing the injections

1295
00:56:03,920 --> 00:56:06,799
it's a sensitive question would

1296
00:56:06,799 --> 00:56:08,079
be

1297
00:56:08,079 --> 00:56:10,400
publishing it and

1298
00:56:10,400 --> 00:56:13,040
but what about if these uh

1299
00:56:13,040 --> 00:56:14,319
battled

1300
00:56:14,319 --> 00:56:16,400
ejections

1301
00:56:16,400 --> 00:56:18,799
it's good that this idea is correct and

1302
00:56:18,799 --> 00:56:20,960
we just need to

1303
00:56:20,960 --> 00:56:23,119
do it but by request there was a

1304
00:56:23,119 --> 00:56:24,640
research

1305
00:56:24,640 --> 00:56:27,598
an organization

1306
00:56:28,160 --> 00:56:31,839
which would request data sets

1307
00:56:31,839 --> 00:56:35,760
and we get a response we get a response

1308
00:56:35,760 --> 00:56:38,319
from there

1309
00:56:38,480 --> 00:56:40,240
i think it's an interesting idea the

1310
00:56:40,240 --> 00:56:42,319
actual idea of

1311
00:56:42,319 --> 00:56:46,079
sharing it uh sounds sensible but uh i'm

1312
00:56:46,079 --> 00:56:48,000
not competent enough to

1313
00:56:48,000 --> 00:56:49,920
answer this question that we are

1314
00:56:49,920 --> 00:56:52,000
capable of doing so i think it should be

1315
00:56:52,000 --> 00:56:54,720
someone in a higher position

1316
00:56:54,720 --> 00:56:58,480
we'll think about data sets and

1317
00:56:58,480 --> 00:56:59,680
think about

1318
00:56:59,680 --> 00:57:02,000
it and share it with you next time i

1319
00:57:02,000 --> 00:57:02,799
think

1320
00:57:02,799 --> 00:57:04,240
the time is

1321
00:57:04,240 --> 00:57:05,280
up

1322
00:57:05,280 --> 00:57:07,280
just a couple of minutes to select two

1323
00:57:07,280 --> 00:57:09,330
best questions and that's it

1324
00:57:09,330 --> 00:57:11,440
[Music]

1325
00:57:11,440 --> 00:57:14,640
i like this question and the actual idea

1326
00:57:14,640 --> 00:57:17,520
from this person from bear from the

1327
00:57:17,520 --> 00:57:19,839
burbank

1328
00:57:19,839 --> 00:57:21,920
about the trees and

1329
00:57:21,920 --> 00:57:25,200
the price goes to you thank you

1330
00:57:25,200 --> 00:57:28,400
and i really liked two questions

1331
00:57:28,400 --> 00:57:30,880
this guy here who left

1332
00:57:30,880 --> 00:57:32,400
from there

1333
00:57:32,400 --> 00:57:35,520
but he already has a t-shirt so

1334
00:57:35,520 --> 00:57:37,200
and then i would like to give it to you

1335
00:57:37,200 --> 00:57:40,400
thank you for your question thank you

1336
00:57:40,400 --> 00:57:41,920
all right i would like to thank everyone

1337
00:57:41,920 --> 00:57:44,799
and in just one minute we

1338
00:57:44,799 --> 00:57:46,799
carry on with one final

1339
00:57:46,799 --> 00:57:49,280
presentation for today in our

1340
00:57:49,280 --> 00:57:53,400
breakout session thank you

