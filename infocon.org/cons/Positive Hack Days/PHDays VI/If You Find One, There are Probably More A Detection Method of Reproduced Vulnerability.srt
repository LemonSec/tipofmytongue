1
00:00:00,000 --> 00:00:03,899
ok so first way thank you for coming
this morning for a session

2
00:00:04,799 --> 00:00:10,769
ok so today i want to introduce my
research mainly about how to detect the

3
00:00:10,769 --> 00:00:16,109
method of that how did that attack the
reproduce board body which is mainly uh

4
00:00:16,109 --> 00:00:19,109
made by the source code you reuse

5
00:00:27,210 --> 00:00:29,020
yeah

6
00:00:29,020 --> 00:00:32,019
doesn't work

7
00:00:32,570 --> 00:00:33,340
yeah

8
00:00:33,340 --> 00:00:36,470
I think this isn't you

9
00:00:36,470 --> 00:00:39,890
federal way

10
00:00:46,640 --> 00:00:55,250
oh I can do it okay so okay so before i
start my presentation I want to talk

11
00:00:55,250 --> 00:00:56,239
about

12
00:00:56,239 --> 00:00:59,480
I want to talk to introduce myself a
little bit

13
00:00:59,480 --> 00:01:05,360
so okay my name is Zuko nakajima and I'm
researcher at ntt secure platform

14
00:01:05,360 --> 00:01:13,100
laboratory and Andy is a company which
is the largest is be in Japan and my

15
00:01:13,100 --> 00:01:18,169
main interest is going wonderfully
discovery and reverse engineering and

16
00:01:18,170 --> 00:01:25,009
also i am an organizer of second CD F
which is larger CTF in japan and i know

17
00:01:25,009 --> 00:01:29,930
that are some of the Russian team
participate in second CTF so I really

18
00:01:29,930 --> 00:01:35,929
want to say thank you about the park
playing CPAC when CDF and also on i'm a

19
00:01:35,929 --> 00:01:39,979
founder of the teacher for girls which
is a first security engineering

20
00:01:39,979 --> 00:01:48,740
community for japan so that was my brief
profile and so firstly I want to start

21
00:01:48,740 --> 00:01:51,740
from what is we produce for buddy

22
00:01:52,520 --> 00:01:57,770
the answer is that we produce boner
ability is a vulnerability which is copy

23
00:01:57,770 --> 00:02:02,090
to others to the source code or software
from some reasons

24
00:02:02,840 --> 00:02:09,049
Reapers borvo t is also called as a code
clone vulnerability but in this

25
00:02:09,049 --> 00:02:11,390
presentation I will use a word

26
00:02:11,390 --> 00:02:15,950
we produce vulnerability so next

27
00:02:15,950 --> 00:02:21,619
why discount anything happens the
there's three reason why this kind of

28
00:02:21,620 --> 00:02:22,670
thing happens

29
00:02:22,670 --> 00:02:27,649
the first is copy and paste the second
is four stories sharing

30
00:02:27,650 --> 00:02:33,590
it's like a simple software like a
firefox and thunderbird and third reason

31
00:02:33,590 --> 00:02:38,989
is for projects which is mainly happens
Lin open source project

32
00:02:40,319 --> 00:02:43,499
so this is 3 reason why happens

33
00:02:43,499 --> 00:02:47,730
so next I want to talk about a risk of
Hebrews 4 ability

34
00:02:48,299 --> 00:02:56,549
sometimes the past description date for
reproduce born buoy will be different in

35
00:02:56,549 --> 00:03:00,750
past research it stays that patch
release date

36
00:03:00,750 --> 00:03:06,389
different like a maximum hundred and
eighty days if this kind of thing

37
00:03:06,389 --> 00:03:12,780
happens it will be easy to attacker to
analyze a patch and developed exploit

38
00:03:12,780 --> 00:03:14,430
code for it in patch 1

39
00:03:14,430 --> 00:03:23,280
so next I want to talk about my research
a little bit and in the past research

40
00:03:23,280 --> 00:03:29,609
there's a call research called a really
bug which is a method which use based

41
00:03:29,609 --> 00:03:36,150
upon the source code but and however
like due to a message would use a piece

42
00:03:36,150 --> 00:03:38,609
on the source good method

43
00:03:38,609 --> 00:03:44,040
it cannot be applied for the Priory
software products such as like Internet

44
00:03:44,040 --> 00:03:45,840
Explorer and adobe reader

45
00:03:45,840 --> 00:03:53,400
therefore in my research I will focus on
the message which index of weirdos fully

46
00:03:53,400 --> 00:03:55,349
in the binary executable rules

47
00:03:55,349 --> 00:04:02,790
so next I want to talk about a previous
research about a method that targets

48
00:04:02,790 --> 00:04:04,500
binary executable

49
00:04:04,500 --> 00:04:10,049
there's a two main research and the
first one is that our research called

50
00:04:10,049 --> 00:04:17,190
tendon and this research represent the
assembly code for basic box as at as

51
00:04:17,190 --> 00:04:23,550
expression which means like tree
structure and this message uses a tree

52
00:04:23,550 --> 00:04:29,310
edit distance the specified every bruise
vulnerability and the next one

53
00:04:29,310 --> 00:04:35,699
research is called cross architecture
bug search in binary executable and this

54
00:04:35,699 --> 00:04:40,050
research targets reproduce or ability
which resides in the different

55
00:04:40,050 --> 00:04:46,169
architecture and this research use of
messes that a calculator

56
00:04:46,169 --> 00:04:50,279
calculates the basic block io based on
similarity calculation

57
00:04:50,279 --> 00:04:56,759
however this previously users cannot
detect we produce for moody when some

58
00:04:56,759 --> 00:05:01,949
type of good source got more for
modifications such as like adding

59
00:05:01,949 --> 00:05:08,069
multiple lines of source code or change
of the source code change which changes

60
00:05:08,069 --> 00:05:17,639
I basic book block I'll so for therefore
for my research I target minor excuse it

61
00:05:17,639 --> 00:05:25,259
was even that and some time are a large
part source code code modification

62
00:05:25,259 --> 00:05:26,129
happens

63
00:05:26,129 --> 00:05:37,199
so a next I'll talk about my approach of
my my our research approach is simple

64
00:05:37,800 --> 00:05:42,689
I just calculate this Marie between the
assembly code by using a similar string

65
00:05:42,689 --> 00:05:45,449
search algorithm

66
00:05:45,449 --> 00:05:53,099
first I just collected the unpatched
part of the border body and calculated

67
00:05:53,099 --> 00:06:01,378
murder be between the target burner
assembly and workflow for this approach

68
00:06:01,379 --> 00:06:02,669
have three steps

69
00:06:02,669 --> 00:06:07,740
the first is the disassembled and
normalization of assembly and the second

70
00:06:07,740 --> 00:06:12,180
step is the similarity colgate
calculation between assembly and the

71
00:06:12,180 --> 00:06:20,460
third is a the discrimination of the
high the the similar part is whether a

72
00:06:20,460 --> 00:06:22,859
patch or impact for our part

73
00:06:22,860 --> 00:06:31,649
so next I want to talk about details of
my approach the first step is the

74
00:06:31,649 --> 00:06:36,389
disassembled and normalization step and
the in the dissemble step

75
00:06:36,389 --> 00:06:42,240
it takes like a to binary file the first
is the bottom file files which can

76
00:06:42,240 --> 00:06:45,710
contains the unpatched water body

77
00:06:45,710 --> 00:06:52,219
and the second one is the target wonder
files and just disassemble just two

78
00:06:52,220 --> 00:06:55,490
files and next step

79
00:06:55,490 --> 00:07:03,290
I want to talk about the normalizations
up and some some case like a different

80
00:07:03,290 --> 00:07:04,190
assembly

81
00:07:04,190 --> 00:07:11,030
I mean auburn will be generated in even
the source school is see the right hand

82
00:07:11,030 --> 00:07:14,750
side is an example of that

83
00:07:15,380 --> 00:07:24,920
notes art and disassemble has a same
source code but when a the compiler a

84
00:07:24,920 --> 00:07:29,000
little like tees and some sometimes it

85
00:07:29,000 --> 00:07:35,720
the Opera will be changed for example
the memory adders of call instruction

86
00:07:35,720 --> 00:07:43,220
change and also the resistor the changed
in the original from copy one

87
00:07:43,220 --> 00:07:48,770
so therefore in the normalization step

88
00:07:48,770 --> 00:07:55,159
I normalize it the operon immediate
value in memory and register to a string

89
00:07:55,160 --> 00:07:58,940
of bought Val not and red

90
00:07:58,940 --> 00:08:08,090
yes so next I want to talk about this
similarity calculation step at this mall

91
00:08:08,090 --> 00:08:10,099
area calculation step

92
00:08:10,100 --> 00:08:18,110
I used alders and called a needle - shoo
eva Lucia algorithm is a like similar

93
00:08:18,110 --> 00:08:23,690
strength search algorithm which is used
in bioinformatics like a find a similar

94
00:08:23,690 --> 00:08:25,310
part in DNA

95
00:08:25,310 --> 00:08:32,990
so using this algorithm I applied having
gap penalty which is also used as in the

96
00:08:32,990 --> 00:08:39,289
bioinformatics field and this is a kind
of one of like score calculation

97
00:08:39,289 --> 00:08:42,110
mechanism in the needle and blue shoe

98
00:08:42,110 --> 00:08:48,170
so next I want to talk about why i
choose needle busia algorithm

99
00:08:48,980 --> 00:08:53,779
so in a buyer in fact feels there's a
lot of kind of similar sting search

100
00:08:53,779 --> 00:08:58,160
algorithm and kind of like LCS is Miss
Waterman

101
00:08:58,699 --> 00:09:06,589
but I'm LCS is algorithm is elders and
that search all similar part between two

102
00:09:06,589 --> 00:09:13,130
given string which is also called like a
global alignment are wearing and

103
00:09:13,130 --> 00:09:19,130
smith-waterman is also called as local
alignment algorithm which account search

104
00:09:19,130 --> 00:09:25,760
similar region between the two given
string and and lastly needle moo shu is

105
00:09:25,760 --> 00:09:31,310
algorithm that can search the region in
a string to and Destiny's you string

106
00:09:31,310 --> 00:09:38,420
that best matches the the source string
is also called a semi global alignment

107
00:09:38,420 --> 00:09:47,329
type of others and therefore my research
goal is to like find a boner boner booty

108
00:09:47,329 --> 00:09:53,660
we are reproduced booty part in the
target minor e-file there for uh for

109
00:09:53,660 --> 00:10:00,170
that reason the booze you was most
suitable suitable for my research

110
00:10:00,170 --> 00:10:07,370
so next I want to talk about is
similarly calculation in the this

111
00:10:07,370 --> 00:10:15,350
approach you don't lose you calculate
the score and given two strings and this

112
00:10:15,350 --> 00:10:22,730
similarity calculation use that score
and just use the score of most similar

113
00:10:22,730 --> 00:10:31,279
part over the maximum score of meat
means that all match case so cat this is

114
00:10:31,279 --> 00:10:36,589
similar calculation and next I want to
talk about the score calculation method

115
00:10:36,589 --> 00:10:44,720
I said a as before I use that a gap
penalty for the ego and lose you but

116
00:10:44,720 --> 00:10:47,959
before I explain about having a penalty

117
00:10:47,959 --> 00:10:50,018
I'll talk about

118
00:10:50,019 --> 00:10:55,809
normal gap 144 normal gap penalty

119
00:10:56,589 --> 00:11:04,179
it calculates the score like Matt and
mismatch and gap case I don't explain

120
00:11:04,179 --> 00:11:04,959
about

121
00:11:04,959 --> 00:11:10,449
I won't explain a match and mismatch
case but for the gap case means that the

122
00:11:10,449 --> 00:11:22,929
the compared string was not a similar
but Jason like next string was matched

123
00:11:22,929 --> 00:11:30,339
this is mean gap so the needle - just
normal gap penalty

124
00:11:30,339 --> 00:11:37,149
ake the calculation the match as a plus
too . for the mat mismatch it all

125
00:11:37,149 --> 00:11:44,799
- - . and the gap it will like - one .
so next for Apple gap

126
00:11:44,799 --> 00:11:50,170
it calculates at match case mismatch
case in open gap case and extended gap

127
00:11:50,170 --> 00:11:57,878
case the open gap means gap that the
first gap of the multiple gaps and

128
00:11:57,879 --> 00:12:02,619
extend gap is a gap that all gap

129
00:12:02,619 --> 00:12:08,139
except the open app and it the score
calculation would be four match it will

130
00:12:08,139 --> 00:12:14,170
plus 2 . and for this match it will be a
minus 2 . and for open gap it will be

131
00:12:14,170 --> 00:12:23,110
minus 3 . and extended gap will be like
- there . 5 . so this point can be that

132
00:12:23,110 --> 00:12:27,129
can manually but most of the case it use
this score

133
00:12:27,129 --> 00:12:36,850
ok so next I want to explain about the
formula of a disorder where algorithm

134
00:12:36,850 --> 00:12:46,569
and in this firm LA I represent a
capital A as in patch part assembly and

135
00:12:46,569 --> 00:12:56,110
capital B as a target by our assembly
and after a disc do formula calculates

136
00:12:56,110 --> 00:12:59,199
the score mattrick's x wines ette

137
00:12:59,720 --> 00:13:08,720
and by after calculating ding SCORM a
matrix ax1 yet it

138
00:13:09,439 --> 00:13:17,120
the maximum point from score matrix X
was used is used for to a similarity

139
00:13:17,120 --> 00:13:18,680
calculation

140
00:13:18,680 --> 00:13:28,370
so this is a simple example for it is a
score a formula so you can see that the

141
00:13:28,370 --> 00:13:37,759
matrix x and y in debt is calculate it
for example and in the similarity

142
00:13:37,759 --> 00:13:42,740
calculation will use the maximum score
in a magnetic X in this case it will be

143
00:13:42,740 --> 00:13:51,379
like four point by point . and the
similarity will calculate like 4.5 / 10

144
00:13:51,379 --> 00:13:57,949
to 10 is calculated from the all-match
case means and the result will be like

145
00:13:57,949 --> 00:14:00,349
forty-five percent

146
00:14:00,350 --> 00:14:07,250
ok so next I want to talk about the
advantage of the Afghan gap penalty the

147
00:14:07,250 --> 00:14:12,290
having back pant gap penalty can
mitigate this significant scored job to

148
00:14:12,290 --> 00:14:12,740
do

149
00:14:12,740 --> 00:14:19,970
due to the source code modification for
this example like adding the one new

150
00:14:19,970 --> 00:14:24,860
line in the source code it means that
adding eight new line to the assembly

151
00:14:24,860 --> 00:14:29,240
code so by using a normal gap

152
00:14:29,240 --> 00:14:35,360
it will be like a total 36 . but by
using the app and gap penalty

153
00:14:35,360 --> 00:14:44,660
it will be like total 37.5 . so we can I
mitigate ask or drop for due to the of

154
00:14:44,660 --> 00:14:47,029
source code more modification

155
00:14:47,029 --> 00:14:55,220
so next I want to talk about how to
discriminate the past or one patch

156
00:14:55,220 --> 00:14:58,339
so this is very easy

157
00:14:58,339 --> 00:15:05,509
I just first calculated and patch part
assembly the similarity of a patch part

158
00:15:05,509 --> 00:15:06,290
of tumbly

159
00:15:06,290 --> 00:15:10,459
and next a calculated a patch part
assembly and

160
00:15:10,460 --> 00:15:18,080
the case when and patch as Marie of and
patch one was larger than patch bar

161
00:15:18,590 --> 00:15:27,170
I'll just extracted of the for the
candidate of the reproduce horribly so

162
00:15:27,170 --> 00:15:31,939
next I want to talk about the experiment
i held

163
00:15:32,480 --> 00:15:41,390
I how to X to experiment and the first
one is a goal for the evaluate the

164
00:15:41,390 --> 00:15:50,210
ability of my approach and for this
experiment i use reproduce foreign body

165
00:15:50,210 --> 00:15:58,130
which is which was fine and passed the
vulnerability you is like cve 2008 4314

166
00:15:58,130 --> 00:16:05,810
and TV 2000 85023 and i use this boar
ability and calculate this mortar

167
00:16:05,810 --> 00:16:12,290
between original one and copy one and
after that I calculated the smaller be

168
00:16:12,290 --> 00:16:18,020
between the original one in data set
binary which means I the binder

169
00:16:18,020 --> 00:16:24,860
collected from linux like which mean
like the binder we which doesnt contains

170
00:16:24,860 --> 00:16:27,200
the Hebrews vulnerability

171
00:16:27,200 --> 00:16:36,560
yes so next I want to talk about the
vulnerability i used the first one was a

172
00:16:36,560 --> 00:16:47,089
CB 2008 for 316 and the disponible he
originally it was in doug g live library

173
00:16:47,090 --> 00:16:55,190
and it was copied in the software called
sea horse and you can see that and copy

174
00:16:55,190 --> 00:16:56,000
one

175
00:16:56,000 --> 00:17:03,800
it deleted two lines from the original
one and the next case is like I used

176
00:17:03,800 --> 00:17:10,909
dv2000 85023 and this vulnerability was
original into firefox and copied in the

177
00:17:10,910 --> 00:17:14,959
software called sea monkey and a sea
monkey

178
00:17:15,560 --> 00:17:18,500
uh the four lines are deleted and

179
00:17:18,500 --> 00:17:21,890
and one lines are modified from the
original one

180
00:17:21,890 --> 00:17:27,949
ok this is a result for their experiment
and for the result

181
00:17:28,730 --> 00:17:31,760
my approach did can be detected

182
00:17:32,510 --> 00:17:39,620
reproducibility in bonner excusable and
also this morning between a data set was

183
00:17:39,620 --> 00:17:46,909
maximum nine point seven percent so
maybe like a over twenty percent from

184
00:17:46,910 --> 00:17:52,820
this marty was over twenty percent it
might be like a river is for body

185
00:17:53,480 --> 00:17:58,010
so next I want to talk about a second
experiment

186
00:17:58,550 --> 00:18:04,909
I held the experiment I hell is a
current which goal is to detect

187
00:18:04,910 --> 00:18:12,110
reproduce born body in from real-world
software product i collected 21

188
00:18:12,110 --> 00:18:20,360
vulnerabilities 14 from windows OS and
seven from openssl and calculate its

189
00:18:20,360 --> 00:18:31,729
similarity to if the 44 d thousand
binary files and okay this is a detail

190
00:18:31,730 --> 00:18:38,240
of the 14 bone would you from windows
and this is do 47 vulnerability from

191
00:18:38,240 --> 00:18:46,190
openssl and I mainly collected a
vulnerability which is which size in the

192
00:18:46,190 --> 00:18:52,040
single function so it's mainly like
integer overflow and but for overflow

193
00:18:52,850 --> 00:19:01,820
ok and also this is detail of the Bonner
files are collected

194
00:19:02,420 --> 00:19:10,940
I collected me from ladies windows XP
Windows Vista 78.1 favorite 2003 and

195
00:19:10,940 --> 00:19:17,710
server 2008 and also i collected from
virustotal which was not detected as a

196
00:19:17,710 --> 00:19:25,090
malicious file ok this is a result for
this experiment and for the result

197
00:19:25,090 --> 00:19:34,899
I found for reduce vulnerability
candidate and I after I manual now is I

198
00:19:34,899 --> 00:19:41,620
found that the two was the real case we
lose horribly but you was a not that

199
00:19:41,620 --> 00:19:53,500
Cotto and a new attack vector 1 so this
is detail of the TV 2008 4520 case and

200
00:19:53,500 --> 00:19:55,179
this was a real ok

201
00:19:55,179 --> 00:20:01,059
we produce buffer overflow board body
and it was originally in the net API 32

202
00:20:01,059 --> 00:20:07,928
. he ll and it was copied to net logon
ki ll and so interesting thing is that

203
00:20:07,929 --> 00:20:15,220
this border booty was honorably which
used by the configure worm and more than

204
00:20:15,220 --> 00:20:21,399
interesting thing is that this form of
oldies a patch distribution date

205
00:20:21,399 --> 00:20:28,449
difference like maximum three months as
i said before this vulnerability is used

206
00:20:28,450 --> 00:20:29,890
by the computer worms

207
00:20:29,890 --> 00:20:38,140
so if the attacker I realized this
Reapers poor bully the victim of the

208
00:20:38,140 --> 00:20:47,590
computer worm will be increase so next I
want to talk about a cv 2011 065 a case

209
00:20:47,590 --> 00:20:55,120
this morning body was originally in the
OE e t thought he ll and copy Tuohy pro

210
00:20:55,120 --> 00:20:56,860
series q dot DL

211
00:20:56,860 --> 00:21:08,649
but this boner bully was not a with that
code so the only pro 32 use a technique

212
00:21:08,649 --> 00:21:10,449
called function forwarding

213
00:21:10,450 --> 00:21:18,070
so if you call the vulnerable function
and it all led pros 32 . yellow it for

214
00:21:18,070 --> 00:21:25,418
is the execution to the only a UT 32 .
dll so it was dead code

215
00:21:25,419 --> 00:21:30,669
so next I want to talk about the TV 2000

216
00:21:30,669 --> 00:21:37,720
15 1789 case this morning body was
originally in the live

217
00:21:37,720 --> 00:21:45,730
vay 30 . get . yellow and is copy to the
genus post VPN BG . LOL

218
00:21:46,299 --> 00:21:53,408
and this dll is used by the windows in
box junus polls client which is a VPN

219
00:21:53,409 --> 00:21:57,879
client and you're probably originally
used by the post client software

220
00:21:58,539 --> 00:22:10,239
yeah and a for this morning body of the
pulse figure which is company which will

221
00:22:10,239 --> 00:22:18,070
assist this post client software was
recognized knew that date have a

222
00:22:18,070 --> 00:22:25,989
reproduce for ability and they have
security advisory for this honorably and

223
00:22:25,989 --> 00:22:28,659
and it says that it was beautiful

224
00:22:28,659 --> 00:22:33,009
full yeah one for this

225
00:22:33,009 --> 00:22:38,710
this is the vulnerability fixed a
timeline for this morning body and this

226
00:22:38,710 --> 00:22:47,350
vulnerability was originally fixed in
the 2015 june and it can reproduce won

227
00:22:47,350 --> 00:22:55,269
the pole secure one was a fixed at this
has a 15 Argost so the fixed date was

228
00:22:55,269 --> 00:23:02,019
different like two months apart but also
I founded this all reproduce board body

229
00:23:02,019 --> 00:23:11,590
and 2015 july so i can like easily write
exploit code for the pole secure one

230
00:23:11,590 --> 00:23:17,859
so next for last one I want to talk

231
00:23:17,859 --> 00:23:27,039
the details of TV 2015 17 93 or employee
and this boner body resize in the

232
00:23:27,039 --> 00:23:29,049
originally precise and live

233
00:23:29,049 --> 00:23:32,020
vay third you . he ll

234
00:23:32,020 --> 00:23:43,660
and a copy to junos polls BPM BG . dll
sure but it also the pole secure rights

235
00:23:43,660 --> 00:23:50,350
the security advisory and it stays that
this is not vulnerable because we don't

236
00:23:50,350 --> 00:23:55,480
use this code so it means that it is
like no attack factor to this

237
00:23:55,480 --> 00:23:56,620
vulnerability

238
00:23:56,620 --> 00:24:04,629
so finally I'll talk to the conclusion
and future work of this research for

239
00:24:04,630 --> 00:24:11,320
conclusion i can't say that i might
proposed method can detect reproduce

240
00:24:11,320 --> 00:24:16,389
vulnerability in the binary files even
there was a large source code

241
00:24:16,390 --> 00:24:23,050
modification and by using my message I
can I down a real world we produce bully

242
00:24:23,050 --> 00:24:25,780
and for future work

243
00:24:25,780 --> 00:24:31,720
I'm now considering the method which can
detect a the help which can find whether

244
00:24:31,720 --> 00:24:38,590
that factor exists or not for the Reaper
is vulnerability candidate and i'm now

245
00:24:38,590 --> 00:24:43,120
considering the method which can detect
reproduce fully which precise in

246
00:24:43,120 --> 00:24:44,919
multiple fun function

247
00:24:44,920 --> 00:24:49,300
yes so my presentation ends here

248
00:24:49,300 --> 00:24:56,169
thank you for listening spasiba and do
you have any questions or comments to my

249
00:24:56,170 --> 00:24:57,220
presentation

250
00:24:57,220 --> 00:25:00,460
so the one question on that ok

251
00:25:05,539 --> 00:25:08,539
no question

252
00:25:11,480 --> 00:25:16,850
yeah

253
00:25:17,580 --> 00:25:21,750
and did you try to use intermediate
representation of course

254
00:25:22,770 --> 00:25:26,310
sorry pardon did you use

255
00:25:26,310 --> 00:25:31,080
I i er languages to form

256
00:25:31,080 --> 00:25:35,250
what what what language programming
language i use

257
00:25:36,000 --> 00:25:48,210
no no for example open rail or oh I just
implemented by by supports + m

258
00:25:48,210 --> 00:25:51,660
you mean ok there

259
00:25:55,990 --> 00:25:59,050
ok thank you thank you

