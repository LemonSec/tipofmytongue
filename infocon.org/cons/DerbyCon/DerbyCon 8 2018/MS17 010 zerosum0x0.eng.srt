1
00:00:00,329 --> 00:00:07,560
so do in<font color="#E5E5E5"> the</font><font color="#CCCCCC"> still</font><font color="#E5E5E5"> eight six</font><font color="#CCCCCC"> seven nine</font>

2
00:00:03,360 --> 00:00:11,219
<font color="#E5E5E5">fifty 1061 so we've seen the</font>

3
00:00:07,560 --> 00:00:16,169
sophistication of lives from<font color="#CCCCCC"> Conficker</font>

4
00:00:11,219 --> 00:00:19,020
and starts that<font color="#E5E5E5"> to last</font><font color="#CCCCCC"> year we saw one</font>

5
00:00:16,170 --> 00:00:20,689
<font color="#CCCCCC">a common in the headlines but not</font><font color="#E5E5E5"> touch</font>

6
00:00:19,020 --> 00:00:23,519
<font color="#E5E5E5">it was probably the most damaging one</font>

7
00:00:20,689 --> 00:00:27,119
got<font color="#E5E5E5"> ten billion dollars in</font>

8
00:00:23,519 --> 00:00:28,709
infrastructure images just last<font color="#CCCCCC"> month</font><font color="#E5E5E5"> o</font>

9
00:00:27,119 --> 00:00:30,869
exile making<font color="#E5E5E5"> on with the reported that</font>

10
00:00:28,710 --> 00:00:33,149
said you know<font color="#E5E5E5"> nine hundred ninety</font>

11
00:00:30,869 --> 00:00:35,940
thousand posts are still vulnerable<font color="#E5E5E5"> on</font>

12
00:00:33,149 --> 00:00:38,760
the<font color="#E5E5E5"> internet</font><font color="#CCCCCC"> and that's because there's</font>

13
00:00:35,940 --> 00:00:41,218
a lot<font color="#CCCCCC"> of</font><font color="#E5E5E5"> countries</font><font color="#CCCCCC"> where software piracy</font>

14
00:00:38,760 --> 00:00:43,968
was you know<font color="#E5E5E5"> just the norm and</font><font color="#CCCCCC"> then you</font>

15
00:00:41,219 --> 00:00:45,780
<font color="#CCCCCC">don't</font><font color="#E5E5E5"> get insane twenties updates and so</font>

16
00:00:43,969 --> 00:00:47,700
we're<font color="#E5E5E5"> still dealing with this issue</font>

17
00:00:45,780 --> 00:00:49,730
<font color="#CCCCCC">we're going to</font><font color="#E5E5E5"> dealing with it for</font><font color="#CCCCCC"> many</font>

18
00:00:47,700 --> 00:00:51,840
years

19
00:00:49,730 --> 00:00:53,640
another thing is<font color="#CCCCCC"> that it's great</font><font color="#E5E5E5"> case</font>

20
00:00:51,840 --> 00:00:57,750
studies about<font color="#CCCCCC"> that Windows kernel</font>

21
00:00:53,640 --> 00:01:00,359
sanitation<font color="#E5E5E5"> specifically bypassing the</font>

22
00:00:57,750 --> 00:01:03,030
mitigations that<font color="#E5E5E5"> the dots were really</font>

23
00:01:00,359 --> 00:01:08,549
<font color="#CCCCCC">doing</font><font color="#E5E5E5"> like an SLR death statute is patch</font>

24
00:01:03,030 --> 00:01:13,710
burn as<font color="#E5E5E5"> well as as things like patch</font>

25
00:01:08,549 --> 00:01:16,650
guard have<font color="#CCCCCC"> devolved</font><font color="#E5E5E5"> and generic those</font>

26
00:01:13,710 --> 00:01:18,240
expectations<font color="#E5E5E5"> can't go away these show us</font>

27
00:01:16,650 --> 00:01:20,939
really<font color="#CCCCCC"> great examples of exploiting the</font>

28
00:01:18,240 --> 00:01:25,560
driver using the drivers internal

29
00:01:20,939 --> 00:01:28,258
structures<font color="#CCCCCC"> or exploitation</font><font color="#E5E5E5"> so this is</font>

30
00:01:25,560 --> 00:01:30,920
<font color="#E5E5E5">where</font><font color="#CCCCCC"> we</font><font color="#E5E5E5"> can move because I</font><font color="#CCCCCC"> think and</font>

31
00:01:28,259 --> 00:01:34,950
<font color="#CCCCCC">straining from</font><font color="#E5E5E5"> the</font><font color="#CCCCCC"> abstract a little bit</font>

32
00:01:30,920 --> 00:01:37,700
and it's because<font color="#CCCCCC"> enough</font><font color="#E5E5E5"> time mostly how</font>

33
00:01:34,950 --> 00:01:39,689
mostly<font color="#E5E5E5"> just we</font><font color="#CCCCCC"> talk about the</font><font color="#E5E5E5"> blue today</font>

34
00:01:37,700 --> 00:01:42,299
<font color="#E5E5E5">but there will be something in the field</font>

35
00:01:39,689 --> 00:01:45,179
<font color="#CCCCCC">because I</font><font color="#E5E5E5"> haven't seen any published</font>

36
00:01:42,299 --> 00:01:48,090
the eternal blue windows<font color="#CCCCCC"> XP exploited</font>

37
00:01:45,180 --> 00:01:52,200
which is a different explanation from

38
00:01:48,090 --> 00:01:53,490
the<font color="#CCCCCC"> second one the chessmen develop the</font>

39
00:01:52,200 --> 00:01:55,140
<font color="#CCCCCC">tree I just said learning</font><font color="#E5E5E5"> about the</font>

40
00:01:53,490 --> 00:01:57,179
whole<font color="#E5E5E5"> equation groups</font><font color="#CCCCCC"> yet</font><font color="#E5E5E5"> about your</font>

41
00:01:55,140 --> 00:02:00,450
saga and<font color="#E5E5E5"> you might want to look at</font>

42
00:01:57,180 --> 00:02:03,920
<font color="#E5E5E5">Matt's wishes</font><font color="#CCCCCC"> talk earlier this week he</font>

43
00:02:00,450 --> 00:02:03,920
goes through<font color="#CCCCCC"> the whole timeline that</font>

44
00:02:05,659 --> 00:02:14,850
<font color="#CCCCCC">Phelps did started so prehistory</font><font color="#E5E5E5"> of us</font>

45
00:02:12,500 --> 00:02:17,069
so it<font color="#E5E5E5"> was invented in</font><font color="#CCCCCC"> nineteen</font>

46
00:02:14,850 --> 00:02:19,730
<font color="#CCCCCC">eighty-three my opinion to make</font>

47
00:02:17,069 --> 00:02:23,280
democracy<font color="#E5E5E5"> again he wanted to bring</font>

48
00:02:19,730 --> 00:02:25,109
<font color="#CCCCCC">Network final chairs</font><font color="#E5E5E5"> to dolls so the</font>

49
00:02:23,280 --> 00:02:29,130
first version<font color="#E5E5E5"> of it was half his</font>

50
00:02:25,110 --> 00:02:33,410
initials<font color="#CCCCCC"> the 1988 Microsoft</font><font color="#E5E5E5"> released the</font>

51
00:02:29,130 --> 00:02:35,579
land management program for os/2 and

52
00:02:33,410 --> 00:02:38,870
<font color="#CCCCCC">that's</font><font color="#E5E5E5"> also</font><font color="#CCCCCC"> the same year that they have</font>

53
00:02:35,580 --> 00:02:42,060
been covered in<font color="#CCCCCC"> work community</font><font color="#E5E5E5"> kernel</font>

54
00:02:38,870 --> 00:02:46,470
from 1989 to 1991 that's when the<font color="#E5E5E5"> serve</font>

55
00:02:42,060 --> 00:02:49,590
<font color="#E5E5E5">not sis driver was implemented that's</font>

56
00:02:46,470 --> 00:02:52,400
when most of the eternal exploits<font color="#E5E5E5"> the</font>

57
00:02:49,590 --> 00:02:54,870
mechanics<font color="#CCCCCC"> been that were introduced and</font>

58
00:02:52,400 --> 00:03:01,350
this was<font color="#E5E5E5"> basically just land manager</font>

59
00:02:54,870 --> 00:03:03,810
built into Windows NT 1997<font color="#E5E5E5"> 1999 is when</font>

60
00:03:01,350 --> 00:03:06,570
you turn ability was introduced as far

61
00:03:03,810 --> 00:03:09,630
as I can tell<font color="#CCCCCC"> I could not</font><font color="#E5E5E5"> find it in any</font>

62
00:03:06,570 --> 00:03:12,660
version of NC 4<font color="#E5E5E5"> but they did find it</font><font color="#CCCCCC"> in</font>

63
00:03:09,630 --> 00:03:19,290
pre-release candidates<font color="#E5E5E5"> Windows 2000</font><font color="#CCCCCC"> and</font>

64
00:03:12,660 --> 00:03:21,600
<font color="#E5E5E5">then of course in 2017 was when so what</font>

65
00:03:19,290 --> 00:03:23,100
is the server message block<font color="#E5E5E5"> basically</font>

66
00:03:21,600 --> 00:03:25,858
it's either going to be<font color="#CCCCCC"> a request</font><font color="#E5E5E5"> or a</font>

67
00:03:23,100 --> 00:03:29,489
response<font color="#CCCCCC"> from the server has</font><font color="#E5E5E5"> a very</font>

68
00:03:25,859 --> 00:03:31,620
<font color="#E5E5E5">defined structure that begins with the</font>

69
00:03:29,489 --> 00:03:34,730
header<font color="#CCCCCC"> most important part of the header</font>

70
00:03:31,620 --> 00:03:36,480
is just what command<font color="#CCCCCC"> you want</font>

71
00:03:34,730 --> 00:03:38,280
associated<font color="#E5E5E5"> with the command is the</font>

72
00:03:36,480 --> 00:03:40,768
<font color="#E5E5E5">parameter block and this is a fixed</font><font color="#CCCCCC"> size</font>

73
00:03:38,280 --> 00:03:43,459
structure<font color="#CCCCCC"> so if you want</font><font color="#E5E5E5"> to think about</font>

74
00:03:40,769 --> 00:03:45,629
<font color="#CCCCCC">if the command is to set up a session</font>

75
00:03:43,459 --> 00:03:47,280
<font color="#E5E5E5">this fixed size structure</font><font color="#CCCCCC"> might have</font>

76
00:03:45,629 --> 00:03:49,679
things like the length of<font color="#E5E5E5"> your</font><font color="#CCCCCC"> username</font>

77
00:03:47,280 --> 00:03:52,019
the length of your password<font color="#E5E5E5"> that</font><font color="#CCCCCC"> kind</font><font color="#E5E5E5"> of</font>

78
00:03:49,680 --> 00:03:56,250
thing<font color="#E5E5E5"> and the data block is a variable</font>

79
00:03:52,019 --> 00:03:59,370
length<font color="#E5E5E5"> part of the message block and</font>

80
00:03:56,250 --> 00:04:05,700
that's where you do<font color="#E5E5E5"> things like the</font>

81
00:03:59,370 --> 00:04:07,739
actual<font color="#E5E5E5"> password</font><font color="#CCCCCC"> so there's a special</font>

82
00:04:05,700 --> 00:04:09,988
tech mess<font color="#CCCCCC"> and the special tightness of</font>

83
00:04:07,739 --> 00:04:12,989
<font color="#E5E5E5">these called transactions and these are</font>

84
00:04:09,989 --> 00:04:14,430
where the<font color="#E5E5E5"> data we want</font><font color="#CCCCCC"> to send</font><font color="#E5E5E5"> to the</font>

85
00:04:12,989 --> 00:04:17,489
server is so big that<font color="#CCCCCC"> it won't really</font>

86
00:04:14,430 --> 00:04:19,340
fit in one single lesson<font color="#E5E5E5"> B so we'll do</font>

87
00:04:17,488 --> 00:04:21,929
this<font color="#CCCCCC"> we'll start a primary transaction</font>

88
00:04:19,339 --> 00:04:24,030
<font color="#E5E5E5">say because this you know the chunk</font><font color="#CCCCCC"> of</font>

89
00:04:21,930 --> 00:04:25,560
data we want<font color="#E5E5E5"> the</font><font color="#CCCCCC"> son of</font><font color="#E5E5E5"> the server the</font>

90
00:04:24,030 --> 00:04:27,960
server<font color="#E5E5E5"> will send us an interim response</font>

91
00:04:25,560 --> 00:04:31,470
saying<font color="#E5E5E5"> okay I accept</font><font color="#CCCCCC"> your</font><font color="#E5E5E5"> transaction I</font>

92
00:04:27,960 --> 00:04:34,530
<font color="#E5E5E5">send more data</font><font color="#CCCCCC"> then we'll send a bunch</font>

93
00:04:31,470 --> 00:04:38,190
of secondary transactions and I complete

94
00:04:34,530 --> 00:04:40,409
that<font color="#CCCCCC"> on the blanks a chunk by chunk</font><font color="#E5E5E5"> and</font>

95
00:04:38,190 --> 00:04:44,250
<font color="#E5E5E5">then</font><font color="#CCCCCC"> finally when all</font><font color="#E5E5E5"> the pieces arrived</font>

96
00:04:40,409 --> 00:04:48,150
<font color="#CCCCCC">on atomically the transaction</font><font color="#E5E5E5"> is</font>

97
00:04:44,250 --> 00:04:50,370
executed whatever<font color="#CCCCCC"> my Tok Tok</font><font color="#E5E5E5"> Amanda is</font>

98
00:04:48,150 --> 00:04:53,039
associated with a transaction and a

99
00:04:50,370 --> 00:04:54,320
final<font color="#E5E5E5"> response is sent back to the</font>

100
00:04:53,039 --> 00:04:56,250
<font color="#E5E5E5">client</font>

101
00:04:54,320 --> 00:04:58,469
<font color="#E5E5E5">so there's many different types of</font>

102
00:04:56,250 --> 00:05:00,300
transactions there's<font color="#E5E5E5"> a transform which</font>

103
00:04:58,470 --> 00:05:03,599
<font color="#E5E5E5">is really old stuff like fill slots and</font>

104
00:05:00,300 --> 00:05:05,039
<font color="#CCCCCC">they're</font><font color="#E5E5E5"> going to access protocol</font><font color="#CCCCCC"> trans</font>

105
00:05:03,599 --> 00:05:08,099
<font color="#CCCCCC">to was introduced and</font><font color="#E5E5E5"> that gave us</font>

106
00:05:05,039 --> 00:05:09,690
<font color="#CCCCCC">access stealing things on files greater</font>

107
00:05:08,099 --> 00:05:10,219
<font color="#E5E5E5">than they</font><font color="#CCCCCC"> dot through</font><font color="#E5E5E5"> the</font><font color="#CCCCCC"> top short</font>

108
00:05:09,690 --> 00:05:12,719
<font color="#CCCCCC">notes</font>

109
00:05:10,220 --> 00:05:16,229
<font color="#CCCCCC">there's also</font><font color="#E5E5E5"> part of the</font><font color="#CCCCCC"> OS tool and</font>

110
00:05:12,720 --> 00:05:19,469
<font color="#CCCCCC">medicator yes you trans was introduced</font>

111
00:05:16,229 --> 00:05:23,580
<font color="#CCCCCC">plenty and the big difference fifty</font>

112
00:05:19,469 --> 00:05:25,650
difference here was<font color="#E5E5E5"> that with NC trans</font>

113
00:05:23,580 --> 00:05:27,900
size of the parameter<font color="#CCCCCC"> and data blocks of</font>

114
00:05:25,650 --> 00:05:30,630
the transaction were changed from the

115
00:05:27,900 --> 00:05:35,849
new short week long<font color="#E5E5E5"> so we're</font><font color="#CCCCCC"> dignity</font>

116
00:05:30,630 --> 00:05:37,680
center of the water per transaction so

117
00:05:35,849 --> 00:05:40,420
the<font color="#CCCCCC"> services driver heads that</font><font color="#E5E5E5"> one</font>

118
00:05:37,680 --> 00:05:44,200
should dispatch tables<font color="#E5E5E5"> that he</font><font color="#CCCCCC"> uses</font>

119
00:05:40,420 --> 00:05:47,320
<font color="#E5E5E5">ss different recipes</font><font color="#CCCCCC"> and transactions so</font>

120
00:05:44,200 --> 00:05:49,780
the main dispatch<font color="#E5E5E5"> table would be</font><font color="#CCCCCC"> serve</font>

121
00:05:47,320 --> 00:05:52,659
<font color="#CCCCCC">as indeed dispatch table and so when</font>

122
00:05:49,780 --> 00:05:54,340
server code<font color="#CCCCCC"> was</font><font color="#E5E5E5"> to process and</font><font color="#CCCCCC"> S&V</font><font color="#E5E5E5"> it</font>

123
00:05:52,660 --> 00:05:55,660
<font color="#E5E5E5">will look up the command and then it</font>

124
00:05:54,340 --> 00:05:58,560
will<font color="#E5E5E5"> look up that index under the</font>

125
00:05:55,660 --> 00:06:00,700
dispatch table<font color="#CCCCCC"> call a</font><font color="#E5E5E5"> callback function</font>

126
00:05:58,560 --> 00:06:01,600
<font color="#CCCCCC">same thing does with transactions</font>

127
00:06:00,700 --> 00:06:04,330
<font color="#CCCCCC">they'll look at the transaction</font>

128
00:06:01,600 --> 00:06:08,020
<font color="#CCCCCC">subcommands flip them up</font><font color="#E5E5E5"> and</font><font color="#CCCCCC"> that</font>

129
00:06:04,330 --> 00:06:11,560
dispatch table<font color="#E5E5E5"> find them and dispatch to</font>

130
00:06:08,020 --> 00:06:14,440
the<font color="#E5E5E5"> callback function molester double</font>

131
00:06:11,560 --> 00:06:17,550
pulsar comes into<font color="#E5E5E5"> the</font><font color="#CCCCCC"> local sorry</font><font color="#E5E5E5"> is the</font>

132
00:06:14,440 --> 00:06:21,100
main payload use an<font color="#CCCCCC"> eternal exploits and</font>

133
00:06:17,550 --> 00:06:24,520
all it does<font color="#E5E5E5"> is it goes and flanks</font><font color="#CCCCCC"> the</font>

134
00:06:21,100 --> 00:06:26,980
<font color="#CCCCCC">services</font><font color="#E5E5E5"> gravity memory and then it</font>

135
00:06:24,520 --> 00:06:29,590
<font color="#E5E5E5">finds the transaction to dispatch table</font>

136
00:06:26,980 --> 00:06:32,260
<font color="#E5E5E5">and there's a function pointer in there</font>

137
00:06:29,590 --> 00:06:33,729
that's<font color="#CCCCCC"> just on</font><font color="#E5E5E5"> implemented so it</font>

138
00:06:32,260 --> 00:06:36,159
<font color="#E5E5E5">overrides that function pointer</font><font color="#CCCCCC"> X or</font><font color="#E5E5E5"> the</font>

139
00:06:33,730 --> 00:06:38,770
<font color="#E5E5E5">callback</font><font color="#CCCCCC"> function that</font><font color="#E5E5E5"> I created that</font>

140
00:06:36,160 --> 00:06:40,440
lets you ping so you can create a

141
00:06:38,770 --> 00:06:43,590
transaction<font color="#E5E5E5"> of this special sub-command</font>

142
00:06:40,440 --> 00:06:46,000
<font color="#E5E5E5">and if the back door is installed</font>

143
00:06:43,590 --> 00:06:49,390
<font color="#CCCCCC">there's a way</font><font color="#E5E5E5"> that you can knock and see</font>

144
00:06:46,000 --> 00:06:52,510
that it is installed<font color="#E5E5E5"> you can also issue</font>

145
00:06:49,390 --> 00:06:54,969
a command to exec which will allocate a

146
00:06:52,510 --> 00:06:57,310
buffer and run some shell<font color="#CCCCCC"> Kalyan</font><font color="#E5E5E5"> eternal</font>

147
00:06:54,970 --> 00:07:01,930
<font color="#E5E5E5">show who you want and then you</font><font color="#CCCCCC"> can also</font>

148
00:06:57,310 --> 00:07:04,390
burn the implant so the version<font color="#CCCCCC"> of</font>

149
00:07:01,930 --> 00:07:09,910
eternal blue that hit with husband was

150
00:07:04,390 --> 00:07:11,380
<font color="#E5E5E5">labeled as two dot two dots and</font><font color="#CCCCCC"> the the</font>

151
00:07:09,910 --> 00:07:14,140
<font color="#CCCCCC">wholehearted eternal blue is this</font>

152
00:07:11,380 --> 00:07:16,870
concept<font color="#E5E5E5"> file system extended attributes</font>

153
00:07:14,140 --> 00:07:19,360
so this is just<font color="#CCCCCC"> a hidden name night key</font>

154
00:07:16,870 --> 00:07:23,050
pair<font color="#CCCCCC"> it's metadata that's associated and</font>

155
00:07:19,360 --> 00:07:25,120
<font color="#E5E5E5">files</font><font color="#CCCCCC"> it was introduced with no ace -</font>

156
00:07:23,050 --> 00:07:29,290
version<font color="#E5E5E5"> 1.2 and</font><font color="#CCCCCC"> high-performance</font><font color="#E5E5E5"> file</font>

157
00:07:25,120 --> 00:07:33,610
<font color="#E5E5E5">system</font><font color="#CCCCCC"> Windows</font><font color="#E5E5E5"> NT also has the MT file</font>

158
00:07:29,290 --> 00:07:34,690
system also has extended attributes but

159
00:07:33,610 --> 00:07:38,210
we<font color="#E5E5E5"> don't really</font><font color="#CCCCCC"> see them a lot today</font>

160
00:07:34,690 --> 00:07:41,660
<font color="#E5E5E5">because the API is</font><font color="#CCCCCC"> not very useful</font>

161
00:07:38,210 --> 00:07:43,159
kind of<font color="#E5E5E5"> hidden lisatime if you want to</font>

162
00:07:41,660 --> 00:07:46,010
do<font color="#E5E5E5"> something like this and attributes to</font>

163
00:07:43,160 --> 00:07:49,810
use alternate data streams which both

164
00:07:46,010 --> 00:07:52,969
our analysts<font color="#E5E5E5"> are probably familiar with</font>

165
00:07:49,810 --> 00:07:55,480
<font color="#CCCCCC">one place that you see attention</font><font color="#E5E5E5"> it's</font><font color="#CCCCCC"> T</font>

166
00:07:52,970 --> 00:07:59,120
is with the windows subsystem<font color="#E5E5E5"> for Linux</font>

167
00:07:55,480 --> 00:08:01,910
<font color="#CCCCCC">so this is where you</font><font color="#E5E5E5"> can run</font><font color="#CCCCCC"> in a bunch</font>

168
00:07:59,120 --> 00:08:03,890
of kernel windows and it<font color="#E5E5E5"> uses</font><font color="#CCCCCC"> this</font>

169
00:08:01,910 --> 00:08:07,240
extended attributes for things like case

170
00:08:03,890 --> 00:08:10,849
sensitivity and<font color="#E5E5E5"> Linux file conditions</font>

171
00:08:07,240 --> 00:08:13,340
and then in SMB there's a concept of<font color="#E5E5E5"> fee</font>

172
00:08:10,850 --> 00:08:15,190
<font color="#E5E5E5">and key</font><font color="#CCCCCC"> sophie</font><font color="#E5E5E5"> is a full extent</font>

173
00:08:13,340 --> 00:08:19,099
attribute<font color="#E5E5E5"> that's the name plus the value</font>

174
00:08:15,190 --> 00:08:21,380
and then he is a kid extend entry that's

175
00:08:19,100 --> 00:08:23,270
just the names<font color="#CCCCCC"> rank this you to the</font>

176
00:08:21,380 --> 00:08:24,920
server here's<font color="#CCCCCC"> the key I'm training that</font>

177
00:08:23,270 --> 00:08:32,150
these are<font color="#E5E5E5"> ten</font><font color="#CCCCCC"> attributes and you know</font>

178
00:08:24,920 --> 00:08:37,220
<font color="#E5E5E5">reclining was another fee</font><font color="#CCCCCC"> so most theory</font>

179
00:08:32,150 --> 00:08:38,600
suggests that eternal<font color="#E5E5E5"> was because it has</font>

180
00:08:37,220 --> 00:08:39,070
a high chance<font color="#E5E5E5"> of cosmic blue screen of</font>

181
00:08:38,600 --> 00:08:41,840
death

182
00:08:39,070 --> 00:08:45,350
what if it's actually<font color="#CCCCCC"> a reference to</font>

183
00:08:41,840 --> 00:08:48,050
idea<font color="#CCCCCC"> the glue and the whole</font><font color="#E5E5E5"> point of</font>

184
00:08:45,350 --> 00:08:51,470
eternal blue does that<font color="#CCCCCC"> into</font><font color="#E5E5E5"> does not</font>

185
00:08:48,050 --> 00:08:55,520
properly convert<font color="#CCCCCC"> OS to fullest</font>

186
00:08:51,470 --> 00:08:59,120
<font color="#E5E5E5">advantages to the nearest on</font><font color="#CCCCCC"> Mt full</font>

187
00:08:55,520 --> 00:09:00,890
<font color="#E5E5E5">extend attributes so here's what the</font>

188
00:08:59,120 --> 00:09:04,130
locals found<font color="#E5E5E5"> out of the</font><font color="#CCCCCC"> West oofy looks</font>

189
00:09:00,890 --> 00:09:07,910
like it starts with the<font color="#E5E5E5"> bite</font><font color="#CCCCCC"> that's a</font>

190
00:09:04,130 --> 00:09:09,710
black field that can<font color="#E5E5E5"> be 0 over 80 80</font>

191
00:09:07,910 --> 00:09:11,990
just<font color="#E5E5E5"> means that this extent</font><font color="#CCCCCC"> area is so</font>

192
00:09:09,710 --> 00:09:13,400
important<font color="#E5E5E5"> that if you're</font><font color="#CCCCCC"> going</font><font color="#E5E5E5"> to try</font>

193
00:09:11,990 --> 00:09:15,680
<font color="#E5E5E5">and copy this file to another file</font>

194
00:09:13,400 --> 00:09:17,449
system<font color="#CCCCCC"> that doesn't know attributes</font>

195
00:09:15,680 --> 00:09:19,489
generally you're gonna block in it or

196
00:09:17,450 --> 00:09:21,800
think twice about that

197
00:09:19,490 --> 00:09:25,670
next is the attribute name length and

198
00:09:21,800 --> 00:09:27,939
then<font color="#E5E5E5"> the hash value length and so after</font>

199
00:09:25,670 --> 00:09:32,689
that header you put the<font color="#E5E5E5"> actual string 0</font>

200
00:09:27,940 --> 00:09:35,390
<font color="#CCCCCC">see straight for the name and then the</font>

201
00:09:32,690 --> 00:09:39,560
value<font color="#E5E5E5"> is</font><font color="#CCCCCC"> not the scripts easter and</font><font color="#E5E5E5"> it's</font>

202
00:09:35,390 --> 00:09:42,020
just<font color="#E5E5E5"> binary data but a fee by itself is</font>

203
00:09:39,560 --> 00:09:46,739
<font color="#CCCCCC">very</font><font color="#E5E5E5"> useful you'll find them</font><font color="#CCCCCC"> in a feet</font>

204
00:09:42,020 --> 00:09:50,189
list so these start with you

205
00:09:46,740 --> 00:09:52,670
that is the size of<font color="#E5E5E5"> the</font><font color="#CCCCCC"> antagonist</font><font color="#E5E5E5"> and</font>

206
00:09:50,190 --> 00:09:55,230
then it's just each individual fee

207
00:09:52,670 --> 00:09:58,589
<font color="#CCCCCC">back-to-back</font><font color="#E5E5E5"> so then you can parse this</font>

208
00:09:55,230 --> 00:10:00,800
list<font color="#CCCCCC"> I said</font><font color="#E5E5E5"> cutting the</font><font color="#CCCCCC"> sizing</font><font color="#E5E5E5"> listings</font>

209
00:09:58,590 --> 00:10:02,940
and<font color="#E5E5E5"> then go into each individual fee</font>

210
00:10:00,800 --> 00:10:05,520
<font color="#E5E5E5">sitting</font><font color="#CCCCCC"> its size and its name this</font>

211
00:10:02,940 --> 00:10:10,170
length in the header<font color="#E5E5E5"> and then finding</font>

212
00:10:05,520 --> 00:10:12,329
offset to the<font color="#E5E5E5"> next one the NZ style fee</font>

213
00:10:10,170 --> 00:10:14,069
is very<font color="#E5E5E5"> similar structure</font><font color="#CCCCCC"> I will see if</font>

214
00:10:12,330 --> 00:10:18,270
<font color="#E5E5E5">you still have the flags field you have</font>

215
00:10:14,070 --> 00:10:21,080
the name<font color="#E5E5E5"> and the</font><font color="#CCCCCC"> backlinks only this</font>

216
00:10:18,270 --> 00:10:24,120
<font color="#E5E5E5">time when</font><font color="#CCCCCC"> we add the name and the value</font>

217
00:10:21,080 --> 00:10:26,610
<font color="#CCCCCC">after the header we also aligned to the</font>

218
00:10:24,120 --> 00:10:28,680
nearest<font color="#E5E5E5"> d-word corner</font><font color="#CCCCCC"> this</font><font color="#E5E5E5"> might just be</font>

219
00:10:26,610 --> 00:10:30,630
<font color="#E5E5E5">because in to use try and support</font>

220
00:10:28,680 --> 00:10:34,530
<font color="#E5E5E5">certain CPU architectures we're not</font>

221
00:10:30,630 --> 00:10:38,330
addressing<font color="#E5E5E5"> offsets of pointers was</font>

222
00:10:34,530 --> 00:10:40,470
difficult<font color="#CCCCCC"> so there's an extra padding</font>

223
00:10:38,330 --> 00:10:42,030
<font color="#E5E5E5">and then there's no separate list</font>

224
00:10:40,470 --> 00:10:44,160
structure<font color="#CCCCCC"> instead we have this next</font>

225
00:10:42,030 --> 00:10:47,520
entry offset<font color="#E5E5E5"> at the beginning of the</font>

226
00:10:44,160 --> 00:10:50,910
structure and that just<font color="#E5E5E5"> tells you the</font>

227
00:10:47,520 --> 00:10:52,860
<font color="#E5E5E5">offset to the next</font><font color="#CCCCCC"> be in</font><font color="#E5E5E5"> the list so you</font>

228
00:10:50,910 --> 00:10:55,140
just<font color="#CCCCCC"> of course this using the next entry</font>

229
00:10:52,860 --> 00:10:56,190
<font color="#CCCCCC">offset until</font><font color="#E5E5E5"> that next entry offset is</font>

230
00:10:55,140 --> 00:11:01,020
<font color="#CCCCCC">zero and</font><font color="#E5E5E5"> you're going to increase</font><font color="#CCCCCC"> the</font>

231
00:10:56,190 --> 00:11:04,800
<font color="#CCCCCC">end of the list say here's an example of</font>

232
00:11:01,020 --> 00:11:07,290
<font color="#E5E5E5">converting a fee from OS to</font><font color="#CCCCCC"> stylist</font><font color="#E5E5E5"> the</font>

233
00:11:04,800 --> 00:11:09,870
<font color="#CCCCCC">needle temte style and this is a special</font>

234
00:11:07,290 --> 00:11:12,510
<font color="#CCCCCC">kind of</font><font color="#E5E5E5"> fee called null see this just</font>

235
00:11:09,870 --> 00:11:15,720
means<font color="#E5E5E5"> that every value in the feed is 0</font>

236
00:11:12,510 --> 00:11:18,330
so the flags are<font color="#CCCCCC"> 0 the name length is 0</font>

237
00:11:15,720 --> 00:11:21,210
the volume length is 0 and when we need

238
00:11:18,330 --> 00:11:21,960
a null<font color="#E5E5E5"> terminator for the cistrome in</font>

239
00:11:21,210 --> 00:11:25,140
for the name

240
00:11:21,960 --> 00:11:28,140
and so<font color="#CCCCCC"> the it's 5000 moment</font><font color="#E5E5E5"> when we</font>

241
00:11:25,140 --> 00:11:31,920
convert<font color="#CCCCCC"> to the</font><font color="#E5E5E5"> NT fee we have that next</font>

242
00:11:28,140 --> 00:11:33,240
<font color="#E5E5E5">entry offsets we take that</font><font color="#CCCCCC"> 5</font><font color="#E5E5E5"> that we had</font>

243
00:11:31,920 --> 00:11:34,920
<font color="#CCCCCC">before when we have this new the next</font>

244
00:11:33,240 --> 00:11:36,390
<font color="#E5E5E5">century offset field</font><font color="#CCCCCC"> so you</font>

245
00:11:34,920 --> 00:11:38,189
automatically got<font color="#CCCCCC"> four months you get</font>

246
00:11:36,390 --> 00:11:40,620
<font color="#CCCCCC">nine and then you have to patch the</font>

247
00:11:38,190 --> 00:11:44,690
nearest dealer<font color="#E5E5E5"> as you end up with 12</font>

248
00:11:40,620 --> 00:11:47,610
<font color="#E5E5E5">bytes total in this conversion</font>

249
00:11:44,690 --> 00:11:51,020
here's<font color="#E5E5E5"> my friend Trevor pointing out the</font>

250
00:11:47,610 --> 00:11:51,020
actual bug for us

251
00:11:51,220 --> 00:11:58,120
I'm going to show<font color="#E5E5E5"> you a little text so</font>

252
00:11:54,940 --> 00:12:01,120
as this<font color="#E5E5E5"> function servo is to</font><font color="#CCCCCC"> ELISA AMT</font>

253
00:11:58,120 --> 00:12:03,760
<font color="#CCCCCC">iterates over</font><font color="#E5E5E5"> HSN B fee and accumulates</font>

254
00:12:01,120 --> 00:12:05,830
<font color="#E5E5E5">the size that it needs</font><font color="#CCCCCC"> to that NC buffer</font>

255
00:12:03,760 --> 00:12:09,100
<font color="#E5E5E5">when it does the</font><font color="#CCCCCC"> conversion is the</font><font color="#E5E5E5"> NC</font>

256
00:12:05,830 --> 00:12:12,040
buffers bigger but the vulnerable

257
00:12:09,100 --> 00:12:14,560
<font color="#E5E5E5">language code basically is if the start</font>

258
00:12:12,040 --> 00:12:16,599
of one<font color="#E5E5E5"> of those</font><font color="#CCCCCC"> SNP fees plus the size</font>

259
00:12:14,560 --> 00:12:18,459
of<font color="#E5E5E5"> that fee is greater than that this</font>

260
00:12:16,600 --> 00:12:20,080
that count<font color="#E5E5E5"> of the bytes of the list</font>

261
00:12:18,460 --> 00:12:22,240
field that's<font color="#E5E5E5"> going to correct that</font>

262
00:12:20,080 --> 00:12:23,950
<font color="#E5E5E5">trying to fight</font><font color="#CCCCCC"> to the list field to</font>

263
00:12:22,240 --> 00:12:26,620
just contain the fees<font color="#E5E5E5"> that were valid</font>

264
00:12:23,950 --> 00:12:28,390
<font color="#CCCCCC">and the whole point of why did</font><font color="#E5E5E5"> why did</font>

265
00:12:26,620 --> 00:12:30,730
you do this<font color="#E5E5E5"> why don't</font><font color="#CCCCCC"> you</font><font color="#E5E5E5"> just protect</font>

266
00:12:28,390 --> 00:12:34,090
the SMB<font color="#E5E5E5"> because the client was giving us</font>

267
00:12:30,730 --> 00:12:36,610
a bad feel is the in terms of my<font color="#CCCCCC"> next</font><font color="#E5E5E5"> up</font>

268
00:12:34,090 --> 00:12:39,130
but it's just important<font color="#E5E5E5"> to note that</font>

269
00:12:36,610 --> 00:12:41,110
<font color="#E5E5E5">this</font><font color="#CCCCCC"> function has</font><font color="#E5E5E5"> two outputs</font><font color="#CCCCCC"> two</font>

270
00:12:39,130 --> 00:12:43,960
potential outputs it can<font color="#E5E5E5"> correct that</font><font color="#CCCCCC"> V</font>

271
00:12:41,110 --> 00:12:49,750
<font color="#CCCCCC">list size and then it</font><font color="#E5E5E5"> also returns the</font>

272
00:12:43,960 --> 00:12:51,730
<font color="#CCCCCC">signs</font><font color="#E5E5E5"> needed for the</font><font color="#CCCCCC"> NT buffer so the</font>

273
00:12:49,750 --> 00:12:54,970
main problem<font color="#CCCCCC"> here is that that counter</font>

274
00:12:51,730 --> 00:12:57,610
bicyclist was<font color="#CCCCCC"> au long field</font><font color="#E5E5E5"> and when it</font>

275
00:12:54,970 --> 00:13:02,650
thought dates that list<font color="#E5E5E5"> cranks it for us</font>

276
00:12:57,610 --> 00:13:06,760
<font color="#CCCCCC">since</font><font color="#E5E5E5"> casting</font><font color="#CCCCCC"> had to it you short so</font>

277
00:13:02,650 --> 00:13:09,819
here's what looks like on Windows<font color="#E5E5E5"> XP</font><font color="#CCCCCC"> so</font>

278
00:13:06,760 --> 00:13:12,610
it as an attacker<font color="#E5E5E5"> I say my</font><font color="#CCCCCC"> view list</font>

279
00:13:09,820 --> 00:13:15,670
years<font color="#E5E5E5"> o X</font><font color="#CCCCCC"> 10 thousand bytes my height D</font>

280
00:13:12,610 --> 00:13:17,050
word is<font color="#E5E5E5"> going to be set to</font><font color="#CCCCCC"> 1</font><font color="#E5E5E5"> when it</font>

281
00:13:15,670 --> 00:13:19,540
goes through<font color="#E5E5E5"> and of</font><font color="#CCCCCC"> course is</font><font color="#E5E5E5"> the list</font>

282
00:13:17,050 --> 00:13:22,870
<font color="#E5E5E5">it's going</font><font color="#CCCCCC"> to say you only have these</font>

283
00:13:19,540 --> 00:13:25,300
six to seven<font color="#E5E5E5"> develop list but when it</font>

284
00:13:22,870 --> 00:13:27,340
goes<font color="#CCCCCC"> to correct my miss size my Heidi</font>

285
00:13:25,300 --> 00:13:31,359
<font color="#E5E5E5">word is not going to be changed because</font>

286
00:13:27,340 --> 00:13:32,950
<font color="#E5E5E5">it's casting the size of the</font><font color="#CCCCCC"> integer</font><font color="#E5E5E5"> and</font>

287
00:13:31,360 --> 00:13:35,320
<font color="#E5E5E5">then the size of the NC buffer is going</font>

288
00:13:32,950 --> 00:13:38,110
<font color="#CCCCCC">to rely on when</font><font color="#E5E5E5"> it thought that</font><font color="#CCCCCC"> it's</font>

289
00:13:35,320 --> 00:13:41,830
correcting the size<font color="#CCCCCC"> too but it's not</font>

290
00:13:38,110 --> 00:13:46,300
<font color="#CCCCCC">it's way bigger so here's what it</font><font color="#E5E5E5"> looks</font>

291
00:13:41,830 --> 00:13:48,670
<font color="#CCCCCC">like to practice this is</font><font color="#E5E5E5"> the XPS exploit</font>

292
00:13:46,300 --> 00:13:51,790
<font color="#CCCCCC">felis so you</font><font color="#E5E5E5"> see we start</font><font color="#CCCCCC"> with the cv</font>

293
00:13:48,670 --> 00:13:52,550
list<font color="#CCCCCC"> we said it so X 10,000 we had a</font>

294
00:13:51,790 --> 00:13:54,319
<font color="#E5E5E5">bunch</font><font color="#CCCCCC"> of us know</font>

295
00:13:52,550 --> 00:13:56,660
these because they<font color="#CCCCCC"> are the most</font>

296
00:13:54,320 --> 00:13:59,000
efficient way<font color="#CCCCCC"> to send a field of network</font>

297
00:13:56,660 --> 00:14:00,980
and haven't calculated to a big size on

298
00:13:59,000 --> 00:14:02,600
the other<font color="#CCCCCC"> hand then there's a</font><font color="#E5E5E5"> filler to</font>

299
00:14:00,980 --> 00:14:05,690
<font color="#E5E5E5">the offsets and then finally the</font>

300
00:14:02,600 --> 00:14:07,580
<font color="#CCCCCC">Buffaloes</font><font color="#E5E5E5"> located and the Buffalo</font>

301
00:14:05,690 --> 00:14:09,920
overflow fee<font color="#CCCCCC"> the start</font><font color="#E5E5E5"> of that feat you</font>

302
00:14:07,580 --> 00:14:15,050
plus<font color="#CCCCCC"> the length of that</font><font color="#E5E5E5"> beam is what</font>

303
00:14:09,920 --> 00:14:16,699
exceeds<font color="#CCCCCC"> RLX 10,000 so then you know</font>

304
00:14:15,050 --> 00:14:21,680
<font color="#E5E5E5">cliff he comes along and he fixes the</font>

305
00:14:16,700 --> 00:14:25,100
size of the<font color="#E5E5E5"> list and the NTP buffer</font>

306
00:14:21,680 --> 00:14:28,689
capacity<font color="#E5E5E5"> hold up to that many feed but</font>

307
00:14:25,100 --> 00:14:31,430
we've corrected the size of the<font color="#E5E5E5"> list and</font>

308
00:14:28,690 --> 00:14:33,920
this<font color="#E5E5E5"> is</font><font color="#CCCCCC"> going</font><font color="#E5E5E5"> to keep copying one by one</font>

309
00:14:31,430 --> 00:14:35,329
these be over<font color="#E5E5E5"> and eventually</font><font color="#CCCCCC"> it would</font>

310
00:14:33,920 --> 00:14:37,699
<font color="#E5E5E5">hit my man allocated space and</font>

311
00:14:35,329 --> 00:14:40,219
<font color="#CCCCCC">blue-screen the system</font><font color="#E5E5E5"> but then after</font>

312
00:14:37,700 --> 00:14:42,560
the<font color="#E5E5E5"> buffalo over</font><font color="#CCCCCC"> feed</font><font color="#E5E5E5"> you just send a</font>

313
00:14:40,220 --> 00:14:45,560
<font color="#E5E5E5">valid fee and that's any fee where the</font>

314
00:14:42,560 --> 00:14:50,839
flag<font color="#CCCCCC"> is not</font><font color="#E5E5E5"> a zero or an</font><font color="#CCCCCC"> 80</font><font color="#E5E5E5"> and it'll</font>

315
00:14:45,560 --> 00:14:52,189
stop doing the<font color="#E5E5E5"> copy there but here's</font>

316
00:14:50,839 --> 00:14:55,220
some assembly analysis<font color="#CCCCCC"> whether</font><font color="#E5E5E5"> this</font>

317
00:14:52,190 --> 00:14:58,760
<font color="#CCCCCC">looks</font><font color="#E5E5E5"> like an assembly code there's much</font>

318
00:14:55,220 --> 00:15:01,310
more architectural<font color="#CCCCCC"> to eternal bliss or</font>

319
00:14:58,760 --> 00:15:03,770
all the point of the code of<font color="#E5E5E5"> eternal</font>

320
00:15:01,310 --> 00:15:07,189
blue<font color="#CCCCCC"> that</font><font color="#E5E5E5"> most people be familiar with</font>

321
00:15:03,770 --> 00:15:10,100
<font color="#CCCCCC">next six basics</font><font color="#E5E5E5"> so you can see we're</font>

322
00:15:07,190 --> 00:15:12,170
subtracting the d-word pointers and<font color="#E5E5E5"> then</font>

323
00:15:10,100 --> 00:15:17,360
when we do that<font color="#E5E5E5"> store we're passing it</font>

324
00:15:12,170 --> 00:15:18,979
to<font color="#E5E5E5"> a word pointer and here's just an</font><font color="#CCCCCC"> odd</font>

325
00:15:17,360 --> 00:15:23,360
observation<font color="#E5E5E5"> so I mentioned</font><font color="#CCCCCC"> earlier that</font>

326
00:15:18,980 --> 00:15:26,899
<font color="#CCCCCC">I had looked at</font><font color="#E5E5E5"> NC 4 and when</font><font color="#CCCCCC"> 2000 the</font>

327
00:15:23,360 --> 00:15:30,459
<font color="#CCCCCC">NC</font><font color="#E5E5E5"> for service pack 6 they started to be</font>

328
00:15:26,899 --> 00:15:34,130
basically in<font color="#E5E5E5"> every patch I</font><font color="#CCCCCC"> declined for</font>

329
00:15:30,459 --> 00:15:36,649
NZ<font color="#CCCCCC"> 4 I'm blinded and the the</font><font color="#E5E5E5"> latest</font>

330
00:15:34,130 --> 00:15:39,649
<font color="#CCCCCC">served on sis driver I could find was</font>

331
00:15:36,649 --> 00:15:43,070
dated December 13 2000<font color="#E5E5E5"> which is about a</font>

332
00:15:39,649 --> 00:15:46,100
year newer than the Windows 2000 Service

333
00:15:43,070 --> 00:15:47,540
Pack<font color="#CCCCCC"> to 0</font><font color="#E5E5E5"> driving that shift but</font>

334
00:15:46,100 --> 00:15:50,779
technically<font color="#E5E5E5"> it's newer but it doesn't</font>

335
00:15:47,540 --> 00:15:52,040
have eternal blue so basically<font color="#CCCCCC"> terribly</font>

336
00:15:50,779 --> 00:15:56,680
<font color="#E5E5E5">was introduced starting with Windows</font>

337
00:15:52,040 --> 00:15:58,579
2000 whatever<font color="#E5E5E5"> branch that was for them</font>

338
00:15:56,680 --> 00:16:00,819
so I'm<font color="#E5E5E5"> looking for the path of least</font>

339
00:15:58,579 --> 00:16:03,250
<font color="#CCCCCC">resistance to have</font>

340
00:16:00,820 --> 00:16:05,160
horrible function call<font color="#E5E5E5"> that's going</font><font color="#CCCCCC"> to</font>

341
00:16:03,250 --> 00:16:08,920
come in the form<font color="#E5E5E5"> of the trans to open</font><font color="#CCCCCC"> -</font>

342
00:16:05,160 --> 00:16:12,969
you can see in the trans<font color="#CCCCCC"> - data</font><font color="#E5E5E5"> it does</font>

343
00:16:08,920 --> 00:16:15,040
take<font color="#CCCCCC"> AP</font><font color="#E5E5E5"> list so you know file system API</font>

344
00:16:12,970 --> 00:16:17,800
<font color="#CCCCCC">you're</font><font color="#E5E5E5"> opening a file</font><font color="#CCCCCC"> it</font><font color="#E5E5E5"> also kind of</font>

345
00:16:15,040 --> 00:16:19,180
doubles as creating a file<font color="#CCCCCC"> so we're</font>

346
00:16:17,800 --> 00:16:21,099
going to<font color="#E5E5E5"> be telling the server</font><font color="#CCCCCC"> I when I</font>

347
00:16:19,180 --> 00:16:23,859
create a file<font color="#E5E5E5"> here's the extended</font>

348
00:16:21,100 --> 00:16:25,810
attributes for that<font color="#E5E5E5"> file</font><font color="#CCCCCC"> we're going to</font>

349
00:16:23,860 --> 00:16:27,610
be logging in anonymously so we<font color="#E5E5E5"> can't</font>

350
00:16:25,810 --> 00:16:31,420
actually write files<font color="#E5E5E5"> but it's going to</font>

351
00:16:27,610 --> 00:16:33,070
do that conversion<font color="#CCCCCC"> before demon tries to</font>

352
00:16:31,420 --> 00:16:37,510
produce a file so the permissions don't

353
00:16:33,070 --> 00:16:40,870
matter<font color="#E5E5E5"> and</font><font color="#CCCCCC"> just aside now trans to open</font>

354
00:16:37,510 --> 00:16:44,560
- this<font color="#E5E5E5"> is a bug we saw and</font><font color="#CCCCCC"> ii will</font><font color="#E5E5E5"> focus</font>

355
00:16:40,870 --> 00:16:47,410
on<font color="#E5E5E5"> samba which is a linux implementation</font>

356
00:16:44,560 --> 00:16:49,569
of SMB<font color="#E5E5E5"> and then the fuzz</font><font color="#CCCCCC"> bunch</font><font color="#E5E5E5"> the</font>

357
00:16:47,410 --> 00:16:58,150
framework<font color="#E5E5E5"> possum has explained for this</font>

358
00:16:49,570 --> 00:17:02,020
called<font color="#CCCCCC"> echo record so here's the basic</font>

359
00:16:58,150 --> 00:17:04,000
<font color="#CCCCCC">on an exploit process</font><font color="#E5E5E5"> once we send all</font>

360
00:17:02,020 --> 00:17:05,619
of<font color="#E5E5E5"> our transaction our primary and</font>

361
00:17:04,000 --> 00:17:08,829
<font color="#E5E5E5">secondary transactions that contain that</font>

362
00:17:05,619 --> 00:17:10,300
vulnerable<font color="#E5E5E5"> felis the transaction to</font>

363
00:17:08,829 --> 00:17:11,230
dispatch table<font color="#E5E5E5"> is</font><font color="#CCCCCC"> going to call that's</font>

364
00:17:10,300 --> 00:17:13,450
<font color="#CCCCCC">going</font><font color="#E5E5E5"> to see we're</font><font color="#CCCCCC"> trying</font><font color="#E5E5E5"> to do a</font>

365
00:17:11,230 --> 00:17:16,360
<font color="#CCCCCC">transfer over to and so it's going</font><font color="#E5E5E5"> to</font>

366
00:17:13,450 --> 00:17:17,440
call cerveza kill them<font color="#E5E5E5"> - that's going to</font>

367
00:17:16,359 --> 00:17:19,929
call the function

368
00:17:17,440 --> 00:17:23,500
<font color="#CCCCCC">servo s</font><font color="#E5E5E5"> 2 feet list and T to convert</font>

369
00:17:19,930 --> 00:17:25,210
that LS to stylist<font color="#E5E5E5"> empty list that in</font>

370
00:17:23,500 --> 00:17:27,010
<font color="#E5E5E5">turn is going</font><font color="#CCCCCC"> to call servo is 2 feet</font>

371
00:17:25,210 --> 00:17:28,540
list size<font color="#CCCCCC"> 2 and T</font><font color="#E5E5E5"> which is</font><font color="#CCCCCC"> going</font><font color="#E5E5E5"> to</font>

372
00:17:27,010 --> 00:17:30,790
calculate the size<font color="#E5E5E5"> needed from the NT</font>

373
00:17:28,540 --> 00:17:34,840
buffer and at the same<font color="#E5E5E5"> time this correct</font>

374
00:17:30,790 --> 00:17:37,930
<font color="#CCCCCC">our seeding this field next</font><font color="#E5E5E5"> it's going</font>

375
00:17:34,840 --> 00:17:40,870
<font color="#E5E5E5">to allocate the buffer for</font><font color="#CCCCCC"> the mtv on</font>

376
00:17:37,930 --> 00:17:43,000
the<font color="#CCCCCC"> non page school</font><font color="#E5E5E5"> but that</font><font color="#CCCCCC"> fee buffer</font>

377
00:17:40,870 --> 00:17:44,709
is<font color="#CCCCCC"> going to be too</font><font color="#E5E5E5"> small</font>

378
00:17:43,000 --> 00:17:48,670
next it's going<font color="#E5E5E5"> to iterate</font><font color="#CCCCCC"> over each of</font>

379
00:17:44,710 --> 00:17:50,680
those<font color="#CCCCCC"> peas and eventually a RTL memory</font>

380
00:17:48,670 --> 00:17:55,000
operation is going<font color="#E5E5E5"> to cause the actual</font>

381
00:17:50,680 --> 00:17:58,270
<font color="#E5E5E5">buffer overflow so this is that last</font>

382
00:17:55,000 --> 00:17:59,650
step<font color="#CCCCCC"> we're just going over each V and</font>

383
00:17:58,270 --> 00:18:01,990
just copying them over and everything

384
00:17:59,650 --> 00:18:04,710
goes fine<font color="#E5E5E5"> until</font><font color="#CCCCCC"> you get</font><font color="#E5E5E5"> to that</font><font color="#CCCCCC"> buffalo</font>

385
00:18:01,990 --> 00:18:04,710
<font color="#CCCCCC">overland flow</font>

386
00:18:05,200 --> 00:18:10,090
we're<font color="#CCCCCC"> gonna be trimming the pool to</font>

387
00:18:07,570 --> 00:18:13,780
overwrite a decent structure and<font color="#E5E5E5"> not</font>

388
00:18:10,090 --> 00:18:17,100
<font color="#E5E5E5">this granite memory</font><font color="#CCCCCC"> and then we stop the</font>

389
00:18:13,780 --> 00:18:21,000
copy by sending that<font color="#E5E5E5"> knowledge</font><font color="#CCCCCC"> beating</font>

390
00:18:17,100 --> 00:18:24,459
crash there's terribly

391
00:18:21,000 --> 00:18:26,410
session<font color="#CCCCCC"> setup tank confusion</font><font color="#E5E5E5"> so there's</font>

392
00:18:24,460 --> 00:18:28,300
many<font color="#E5E5E5"> ways to</font><font color="#CCCCCC"> login</font><font color="#E5E5E5"> this and be at least</font>

393
00:18:26,410 --> 00:18:30,670
two of them are<font color="#E5E5E5"> the NC security and</font>

394
00:18:28,300 --> 00:18:33,430
extended security because he up until

395
00:18:30,670 --> 00:18:37,440
the<font color="#CCCCCC"> dashed line</font><font color="#E5E5E5"> these structures and the</font>

396
00:18:33,430 --> 00:18:39,790
SMB parameter blocker<font color="#E5E5E5"> firstly identical</font>

397
00:18:37,440 --> 00:18:42,730
<font color="#E5E5E5">the main difference is that the NC</font>

398
00:18:39,790 --> 00:18:45,220
security parameter is<font color="#E5E5E5"> 13 words long or</font>

399
00:18:42,730 --> 00:18:48,130
26 bytes and the trans security

400
00:18:45,220 --> 00:18:52,030
parameter is 12<font color="#E5E5E5"> words long and</font><font color="#CCCCCC"> then</font>

401
00:18:48,130 --> 00:18:54,130
after that it's<font color="#CCCCCC"> a</font><font color="#E5E5E5"> block which contains</font>

402
00:18:52,030 --> 00:18:57,730
<font color="#E5E5E5">the byte count field which is the size</font>

403
00:18:54,130 --> 00:19:01,150
of data block<font color="#E5E5E5"> that follows the parameter</font>

404
00:18:57,730 --> 00:19:04,600
block<font color="#E5E5E5"> so blocking sessions</font><font color="#CCCCCC"> setup the</font><font color="#E5E5E5"> Dex</font>

405
00:19:01,150 --> 00:19:06,700
<font color="#CCCCCC">you</font><font color="#E5E5E5"> can confuse this function by setting</font>

406
00:19:04,600 --> 00:19:08,800
certain flags on your<font color="#E5E5E5"> SMB during the</font>

407
00:19:06,700 --> 00:19:12,880
<font color="#CCCCCC">login on so in this case we're going to</font>

408
00:19:08,800 --> 00:19:15,669
<font color="#E5E5E5">be setting flags to extended security to</font>

409
00:19:12,880 --> 00:19:16,900
<font color="#CCCCCC">zero</font><font color="#E5E5E5"> our word count to 12 but then we're</font>

410
00:19:15,670 --> 00:19:19,960
going<font color="#E5E5E5"> to</font><font color="#CCCCCC"> say our capabilities of a</font>

411
00:19:16,900 --> 00:19:23,470
sentence security<font color="#CCCCCC"> r1 this</font><font color="#E5E5E5"> is</font><font color="#CCCCCC"> going to</font>

412
00:19:19,960 --> 00:19:26,280
confuse<font color="#E5E5E5"> the server</font><font color="#CCCCCC"> it's</font><font color="#E5E5E5"> going to look at</font>

413
00:19:23,470 --> 00:19:30,070
that byte count field<font color="#E5E5E5"> in the wrong place</font>

414
00:19:26,280 --> 00:19:32,680
<font color="#CCCCCC">it's going to</font><font color="#E5E5E5"> look at it at word 13</font>

415
00:19:30,070 --> 00:19:38,919
instead of word<font color="#E5E5E5"> and 12 size of the</font>

416
00:19:32,680 --> 00:19:42,250
kennel<font color="#CCCCCC"> and this this byte count field</font><font color="#E5E5E5"> is</font>

417
00:19:38,920 --> 00:19:44,680
used<font color="#E5E5E5"> to calculate during the login we're</font>

418
00:19:42,250 --> 00:19:46,990
sending<font color="#E5E5E5"> our strengthening</font><font color="#CCCCCC"> or operating</font>

419
00:19:44,680 --> 00:19:50,980
<font color="#CCCCCC">system type</font><font color="#E5E5E5"> and also our land man</font>

420
00:19:46,990 --> 00:19:52,480
and so it's going<font color="#E5E5E5"> to use</font><font color="#CCCCCC"> that byte count</font>

421
00:19:50,980 --> 00:19:56,470
<font color="#CCCCCC">field to calculate the slides</font><font color="#E5E5E5"> that it</font>

422
00:19:52,480 --> 00:19:58,780
needs to<font color="#CCCCCC"> reserved Unicode strings buck</font>

423
00:19:56,470 --> 00:20:00,910
<font color="#CCCCCC">two in a</font><font color="#E5E5E5"> nutshell all really allows</font><font color="#CCCCCC"> us</font>

424
00:19:58,780 --> 00:20:02,889
<font color="#CCCCCC">to do is allocate large numbers of</font>

425
00:20:00,910 --> 00:20:04,680
memory blocks<font color="#E5E5E5"> and that's</font><font color="#CCCCCC"> gonna be useful</font>

426
00:20:02,890 --> 00:20:07,030
<font color="#E5E5E5">for us for the pool from</font><font color="#CCCCCC"> each way and</font>

427
00:20:04,680 --> 00:20:08,380
<font color="#CCCCCC">then the nice part about it</font><font color="#E5E5E5"> is that we</font>

428
00:20:07,030 --> 00:20:10,928
can free those memory

429
00:20:08,380 --> 00:20:13,090
the man just by<font color="#E5E5E5"> closing the socket so we</font>

430
00:20:10,929 --> 00:20:14,950
walk in such a<font color="#E5E5E5"> setup with the bug</font><font color="#CCCCCC"> and</font>

431
00:20:13,090 --> 00:20:19,449
<font color="#CCCCCC">never want to free it</font><font color="#E5E5E5"> be just close the</font>

432
00:20:14,950 --> 00:20:23,320
socket<font color="#CCCCCC"> there's another bug</font><font color="#E5E5E5"> and this is</font>

433
00:20:19,450 --> 00:20:25,960
an oversized<font color="#CCCCCC"> trance to dispatch so we</font>

434
00:20:23,320 --> 00:20:27,639
have a<font color="#CCCCCC"> problem on bug number 1 RP list</font>

435
00:20:25,960 --> 00:20:31,090
is<font color="#CCCCCC"> greater than all these 10 thousand</font>

436
00:20:27,640 --> 00:20:34,780
bytes in order to trigger the bug the

437
00:20:31,090 --> 00:20:39,010
trans<font color="#E5E5E5"> to only allows word trans care in</font>

438
00:20:34,780 --> 00:20:40,990
the data sizes<font color="#E5E5E5"> so it's not if we just</font>

439
00:20:39,010 --> 00:20:42,370
try sending<font color="#E5E5E5"> trans to or not to be able</font>

440
00:20:40,990 --> 00:20:46,750
<font color="#E5E5E5">to send enough data</font><font color="#CCCCCC"> and actually trigger</font>

441
00:20:42,370 --> 00:20:49,449
<font color="#E5E5E5">the bucket bug number</font><font color="#CCCCCC"> 1 so we expected</font>

442
00:20:46,750 --> 00:20:51,220
as to be plant<font color="#CCCCCC"> behaviour and trance met</font>

443
00:20:49,450 --> 00:20:52,630
with the trans secondary and trans<font color="#CCCCCC"> 2 is</font>

444
00:20:51,220 --> 00:20:55,350
one of the trans to<font color="#E5E5E5"> something area</font><font color="#CCCCCC"> the</font>

445
00:20:52,630 --> 00:20:58,960
<font color="#CCCCCC">Mende transmits an MP trans secondary</font>

446
00:20:55,350 --> 00:21:00,668
but what if we use an NT trans primary

447
00:20:58,960 --> 00:21:04,539
and then<font color="#E5E5E5"> we follow another trans to</font>

448
00:21:00,669 --> 00:21:07,030
<font color="#E5E5E5">secondaries on the</font><font color="#CCCCCC"> backend the server</font>

449
00:21:04,539 --> 00:21:09,190
when<font color="#CCCCCC"> we do</font><font color="#E5E5E5"> that first into transaction</font>

450
00:21:07,030 --> 00:21:12,158
it's going to allocate a transaction and

451
00:21:09,190 --> 00:21:14,650
<font color="#CCCCCC">that transaction is expecting of data</font>

452
00:21:12,159 --> 00:21:18,760
size that's greater than a word because

453
00:21:14,650 --> 00:21:20,770
<font color="#CCCCCC">the MT trans allows D word</font><font color="#E5E5E5"> next when we</font>

454
00:21:18,760 --> 00:21:22,600
sell these trans to secondaries<font color="#E5E5E5"> instead</font>

455
00:21:20,770 --> 00:21:26,500
of allocating<font color="#E5E5E5"> two</font><font color="#CCCCCC"> transactions it's the</font>

456
00:21:22,600 --> 00:21:28,510
trans secondary<font color="#E5E5E5"> that's going to look up</font>

457
00:21:26,500 --> 00:21:29,490
<font color="#E5E5E5">and see if that transaction exists it's</font>

458
00:21:28,510 --> 00:21:31,539
going to find it

459
00:21:29,490 --> 00:21:33,220
and<font color="#E5E5E5"> then partner</font><font color="#CCCCCC"> when we send the last</font>

460
00:21:31,539 --> 00:21:35,860
<font color="#E5E5E5">trans to secondary to complete the</font>

461
00:21:33,220 --> 00:21:37,419
transaction<font color="#CCCCCC"> it's going to execute the</font>

462
00:21:35,860 --> 00:21:38,830
transaction and<font color="#E5E5E5"> it's going to see that</font>

463
00:21:37,419 --> 00:21:40,470
the last<font color="#E5E5E5"> command was the trains to</font>

464
00:21:38,830 --> 00:21:44,080
<font color="#E5E5E5">secondary so it's going to go to the</font>

465
00:21:40,470 --> 00:21:45,640
transaction to dispatch table so we can

466
00:21:44,080 --> 00:21:49,120
<font color="#E5E5E5">see this executive eternal</font><font color="#CCCCCC"> who does</font>

467
00:21:45,640 --> 00:21:51,510
starts with an MT trans that has a<font color="#CCCCCC"> David</font>

468
00:21:49,120 --> 00:21:55,629
a total data count that's greater than

469
00:21:51,510 --> 00:21:58,919
<font color="#CCCCCC">exactly and then the finishes off with</font>

470
00:21:55,630 --> 00:21:58,919
trans to secondaries

471
00:21:59,510 --> 00:22:06,510
so we'll talk<font color="#E5E5E5"> about</font><font color="#CCCCCC"> Windows XP Windows</font>

472
00:22:03,180 --> 00:22:08,640
XP<font color="#CCCCCC"> hard to</font><font color="#E5E5E5"> believe that</font><font color="#CCCCCC"> the minimum</font>

473
00:22:06,510 --> 00:22:10,770
requirements<font color="#CCCCCC"> for Windows</font><font color="#E5E5E5"> XP is 64</font>

474
00:22:08,640 --> 00:22:13,950
<font color="#CCCCCC">gigabytes of</font><font color="#E5E5E5"> RAM</font><font color="#CCCCCC"> I think you can run</font>

475
00:22:10,770 --> 00:22:15,629
<font color="#E5E5E5">Linux with one megabyte or even less</font>

476
00:22:13,950 --> 00:22:18,690
with certain compiler flags<font color="#CCCCCC"> but it's</font>

477
00:22:15,630 --> 00:22:22,800
<font color="#E5E5E5">just funny because nowadays you know but</font>

478
00:22:18,690 --> 00:22:25,860
you<font color="#E5E5E5"> said gigs and gigs of</font><font color="#CCCCCC"> ram so the</font>

479
00:22:22,800 --> 00:22:27,930
exploit one of those<font color="#E5E5E5"> xpx yes</font><font color="#CCCCCC"> we want pre</font>

480
00:22:25,860 --> 00:22:29,429
<font color="#E5E5E5">excellent check on to see if there's</font>

481
00:22:27,930 --> 00:22:32,760
even enough<font color="#CCCCCC"> net rate and perform the</font>

482
00:22:29,430 --> 00:22:34,760
<font color="#CCCCCC">foolish</font><font color="#E5E5E5"> way so it's</font><font color="#CCCCCC"> gonna just connect</font>

483
00:22:32,760 --> 00:22:37,830
to<font color="#E5E5E5"> the server try a bunch of allocations</font>

484
00:22:34,760 --> 00:22:40,140
and<font color="#E5E5E5"> then if those allocations fail they</font>

485
00:22:37,830 --> 00:22:42,360
won't run the<font color="#E5E5E5"> exploit</font><font color="#CCCCCC"> it's hard to know</font>

486
00:22:40,140 --> 00:22:48,150
that that field exploits will even that

487
00:22:42,360 --> 00:22:52,020
<font color="#E5E5E5">long so we have all the ingredients we</font>

488
00:22:48,150 --> 00:22:54,810
need for the XP<font color="#E5E5E5"> dobkins cool grooming</font><font color="#CCCCCC"> we</font>

489
00:22:52,020 --> 00:22:57,510
have or exploit<font color="#E5E5E5"> we reopen in many</font>

490
00:22:54,810 --> 00:23:00,210
connections<font color="#CCCCCC"> the exploit connection is</font>

491
00:22:57,510 --> 00:23:03,450
revered<font color="#CCCCCC"> in that entity</font><font color="#E5E5E5"> transaction and</font>

492
00:23:00,210 --> 00:23:06,080
then the<font color="#CCCCCC"> secondary's with this is just</font>

493
00:23:03,450 --> 00:23:09,660
<font color="#CCCCCC">contain that feed list</font><font color="#E5E5E5"> that's</font>

494
00:23:06,080 --> 00:23:11,189
<font color="#CCCCCC">specifically set up next is the</font><font color="#E5E5E5"> session</font>

495
00:23:09,660 --> 00:23:13,830
set up these are<font color="#E5E5E5"> going to be the grooves</font>

496
00:23:11,190 --> 00:23:16,050
and<font color="#E5E5E5"> the frags so the groom is a</font>

497
00:23:13,830 --> 00:23:17,340
<font color="#CCCCCC">overflowed target it's the</font><font color="#E5E5E5"> structure</font>

498
00:23:16,050 --> 00:23:19,590
that<font color="#E5E5E5"> I'm going to be trying to overflow</font>

499
00:23:17,340 --> 00:23:21,480
<font color="#E5E5E5">and then frags are very similar it's the</font>

500
00:23:19,590 --> 00:23:25,740
same stuff<font color="#E5E5E5"> but they're just smaller and</font>

501
00:23:21,480 --> 00:23:28,170
<font color="#E5E5E5">that's just to fill in memory</font><font color="#CCCCCC"> dips so</font>

502
00:23:25,740 --> 00:23:30,930
one thing<font color="#E5E5E5"> that's different</font><font color="#CCCCCC"> about Windows</font>

503
00:23:28,170 --> 00:23:33,240
XP is that the non page pool<font color="#E5E5E5"> the</font>

504
00:23:30,930 --> 00:23:35,790
alligator here is<font color="#E5E5E5"> going from higher</font>

505
00:23:33,240 --> 00:23:37,800
addresses to lower addresses<font color="#E5E5E5"> so we're</font>

506
00:23:35,790 --> 00:23:41,370
gonna be going<font color="#E5E5E5"> right to</font><font color="#CCCCCC"> the left</font><font color="#E5E5E5"> in this</font>

507
00:23:37,800 --> 00:23:42,840
<font color="#CCCCCC">demonstration but</font><font color="#E5E5E5"> we start</font><font color="#CCCCCC"> with</font><font color="#E5E5E5"> the pre</font>

508
00:23:41,370 --> 00:23:44,729
exploitation of memory<font color="#E5E5E5"> layouts</font>

509
00:23:42,840 --> 00:23:45,459
<font color="#CCCCCC">there's just</font><font color="#E5E5E5"> read and</font><font color="#CCCCCC"> write and stuff</font>

510
00:23:44,730 --> 00:23:50,860
<font color="#E5E5E5">and a fragment</font>

511
00:23:45,460 --> 00:23:53,530
<font color="#E5E5E5">both</font><font color="#CCCCCC"> necks</font><font color="#E5E5E5"> permanent send of</font><font color="#CCCCCC"> anti-trans</font>

512
00:23:50,860 --> 00:23:56,169
primary and every chance<font color="#E5E5E5"> to open to</font>

513
00:23:53,530 --> 00:23:58,270
secondary except<font color="#CCCCCC"> the last</font><font color="#E5E5E5"> one so we're</font>

514
00:23:56,170 --> 00:24:00,400
not triggering<font color="#E5E5E5"> the book yet</font><font color="#CCCCCC"> but I</font><font color="#E5E5E5"> wanted</font>

515
00:23:58,270 --> 00:24:02,740
<font color="#CCCCCC">to do is to</font><font color="#E5E5E5"> send one more sob that</font><font color="#CCCCCC"> last</font>

516
00:24:00,400 --> 00:24:05,170
trans to secondary and<font color="#CCCCCC"> the</font><font color="#E5E5E5"> bubble trip</font>

517
00:24:02,740 --> 00:24:09,100
immediately who said all<font color="#CCCCCC"> of</font><font color="#E5E5E5"> our feet</font>

518
00:24:05,170 --> 00:24:10,720
<font color="#CCCCCC">lista tickle</font><font color="#E5E5E5"> X little bit of it next</font><font color="#CCCCCC"> we</font>

519
00:24:09,100 --> 00:24:13,750
start<font color="#E5E5E5"> sending these fragments using the</font>

520
00:24:10,720 --> 00:24:16,240
session setup book and these are<font color="#E5E5E5"> just</font>

521
00:24:13,750 --> 00:24:18,700
<font color="#CCCCCC">small in my loops and gaps to memory but</font>

522
00:24:16,240 --> 00:24:21,700
it doesn't matter<font color="#E5E5E5"> and</font><font color="#CCCCCC"> then we're sending</font>

523
00:24:18,700 --> 00:24:23,080
the actual group buffers<font color="#CCCCCC"> so this is the</font>

524
00:24:21,700 --> 00:24:26,740
stuff that<font color="#E5E5E5"> we actually want to overflow</font>

525
00:24:23,080 --> 00:24:29,050
<font color="#E5E5E5">using the same session setup</font><font color="#CCCCCC"> bug and we</font>

526
00:24:26,740 --> 00:24:31,450
<font color="#E5E5E5">just send a</font><font color="#CCCCCC"> bunch of</font><font color="#E5E5E5"> these to fill up</font>

527
00:24:29,050 --> 00:24:36,040
memory<font color="#E5E5E5"> and</font><font color="#CCCCCC"> then finally we send</font><font color="#E5E5E5"> that</font>

528
00:24:31,450 --> 00:24:38,590
last<font color="#E5E5E5"> trans to open to that causes the OS</font>

529
00:24:36,040 --> 00:24:43,290
tunity conversion to happen<font color="#E5E5E5"> and then</font><font color="#CCCCCC"> we</font>

530
00:24:38,590 --> 00:24:47,500
<font color="#CCCCCC">go over for them into the adjacent</font><font color="#E5E5E5"> room</font>

531
00:24:43,290 --> 00:24:50,950
so here's a graph on<font color="#CCCCCC"> the x-axis is</font><font color="#E5E5E5"> the</font>

532
00:24:47,500 --> 00:24:53,980
<font color="#E5E5E5">event</font><font color="#CCCCCC"> an</font><font color="#E5E5E5"> event is either allocation or a</font>

533
00:24:50,950 --> 00:24:58,510
free then on the<font color="#CCCCCC"> y-axis we have the</font>

534
00:24:53,980 --> 00:25:03,970
addresses<font color="#CCCCCC"> going from high to low and</font>

535
00:24:58,510 --> 00:25:06,040
then that - mine is<font color="#CCCCCC"> just separating the</font>

536
00:25:03,970 --> 00:25:08,890
pre exploit memory check from<font color="#E5E5E5"> the actual</font>

537
00:25:06,040 --> 00:25:12,970
exploitation we<font color="#E5E5E5"> could further subdivide</font>

538
00:25:08,890 --> 00:25:14,740
this to see where the frag<font color="#E5E5E5"> those frag</font>

539
00:25:12,970 --> 00:25:16,300
allocations just to fill in mind the

540
00:25:14,740 --> 00:25:19,270
memory slots are and then where the

541
00:25:16,300 --> 00:25:20,680
<font color="#CCCCCC">grooves are so it's really</font><font color="#E5E5E5"> really nice</font>

542
00:25:19,270 --> 00:25:24,490
<font color="#E5E5E5">about this is</font><font color="#CCCCCC"> that we are</font><font color="#E5E5E5"> seeing</font>

543
00:25:20,680 --> 00:25:27,820
patterns with the memory grooming so the

544
00:25:24,490 --> 00:25:34,180
NCE<font color="#E5E5E5"> out there</font><font color="#CCCCCC"> NOS design you</font><font color="#E5E5E5"> want really</font>

545
00:25:27,820 --> 00:25:35,710
tight allocations and that's exactly so

546
00:25:34,180 --> 00:25:39,700
here's the<font color="#E5E5E5"> actual target of our buffalo</font>

547
00:25:35,710 --> 00:25:41,620
overflow so we talked<font color="#E5E5E5"> about that client</font>

548
00:25:39,700 --> 00:25:44,110
OS<font color="#CCCCCC"> tightened in client and then type</font>

549
00:25:41,620 --> 00:25:46,419
<font color="#CCCCCC">strings they get allocated</font><font color="#E5E5E5"> we do the</font>

550
00:25:44,110 --> 00:25:48,550
session<font color="#CCCCCC"> set</font><font color="#E5E5E5"> up</font><font color="#CCCCCC"> month at the</font><font color="#E5E5E5"> beginning of</font>

551
00:25:46,420 --> 00:25:51,360
<font color="#E5E5E5">that</font><font color="#CCCCCC"> allocation</font><font color="#E5E5E5"> the served us this</font>

552
00:25:48,550 --> 00:25:54,520
driver is<font color="#E5E5E5"> going to have this serve cool</font>

553
00:25:51,360 --> 00:25:56,740
and so this<font color="#E5E5E5"> only has two fields</font><font color="#CCCCCC"> just the</font>

554
00:25:54,520 --> 00:26:00,490
allocation size and then a pointer to<font color="#CCCCCC"> a</font>

555
00:25:56,740 --> 00:26:02,380
pointer<font color="#E5E5E5"> of a glucoside list so this</font><font color="#CCCCCC"> is</font>

556
00:26:00,490 --> 00:26:05,920
what the side list is a very common

557
00:26:02,380 --> 00:26:10,660
pattern seen in Windows for<font color="#E5E5E5"> interlocked</font>

558
00:26:05,920 --> 00:26:13,860
change<font color="#CCCCCC"> basically</font><font color="#E5E5E5"> when we overflow this</font>

559
00:26:10,660 --> 00:26:15,940
this pointer we can swap whatever

560
00:26:13,860 --> 00:26:17,949
pointer we look there because<font color="#E5E5E5"> walk we</font>

561
00:26:15,940 --> 00:26:21,610
represent that pointer with the address

562
00:26:17,950 --> 00:26:24,970
<font color="#CCCCCC">of our circle header which</font><font color="#E5E5E5"> is where we</font>

563
00:26:21,610 --> 00:26:27,479
<font color="#E5E5E5">started our over there so we're looking</font>

564
00:26:24,970 --> 00:26:30,970
for a function<font color="#E5E5E5"> in the kernel that</font><font color="#CCCCCC"> we</font><font color="#E5E5E5"> can</font>

565
00:26:27,480 --> 00:26:34,270
has a fixed address that we can put into

566
00:26:30,970 --> 00:26:37,060
<font color="#E5E5E5">that field when we overflow luckily our</font>

567
00:26:34,270 --> 00:26:39,639
<font color="#E5E5E5">Windows XP</font><font color="#CCCCCC"> for</font><font color="#E5E5E5"> unluckily the mood</font>

568
00:26:37,060 --> 00:26:43,720
processor<font color="#E5E5E5"> control region starts at a</font>

569
00:26:39,640 --> 00:26:46,450
fixed address and then on all 32-bit

570
00:26:43,720 --> 00:26:48,220
versions of<font color="#CCCCCC"> NT</font><font color="#E5E5E5"> the processor control</font>

571
00:26:46,450 --> 00:26:51,430
block is<font color="#CCCCCC"> at a fixed offset</font><font color="#E5E5E5"> from the</font>

572
00:26:48,220 --> 00:26:53,680
processor control region and then inside

573
00:26:51,430 --> 00:26:56,290
of<font color="#E5E5E5"> the processor control block at a</font>

574
00:26:53,680 --> 00:26:58,780
fixed offset for Windows XP<font color="#CCCCCC"> is the</font>

575
00:26:56,290 --> 00:27:01,090
<font color="#E5E5E5">processor power state so we can pre</font>

576
00:26:58,780 --> 00:27:02,530
calculate those offsets<font color="#E5E5E5"> and that fixed</font>

577
00:27:01,090 --> 00:27:03,520
address you know that this memory

578
00:27:02,530 --> 00:27:06,610
address we're going to find the

579
00:27:03,520 --> 00:27:07,960
processor<font color="#E5E5E5"> power</font><font color="#CCCCCC"> state the processor</font>

580
00:27:06,610 --> 00:27:09,729
<font color="#E5E5E5">power state has this really nice</font>

581
00:27:07,960 --> 00:27:12,310
function it's the idle function that's

582
00:27:09,730 --> 00:27:15,640
<font color="#E5E5E5">called a bajillion times a second</font><font color="#CCCCCC"> this</font>

583
00:27:12,310 --> 00:27:18,429
<font color="#CCCCCC">fellows function normally does start</font>

584
00:27:15,640 --> 00:27:20,800
interrupts and called the<font color="#E5E5E5"> processor but</font>

585
00:27:18,430 --> 00:27:27,250
in our case we're going to be<font color="#CCCCCC"> swapping</font>

586
00:27:20,800 --> 00:27:28,930
that function with our overflow so when

587
00:27:27,250 --> 00:27:33,190
we overflow we set the allocation size

588
00:27:28,930 --> 00:27:36,310
to<font color="#CCCCCC"> EEO</font><font color="#E5E5E5"> six that's a jump of x8 let me</font>

589
00:27:33,190 --> 00:27:39,070
set the leucocyte list feel to that

590
00:27:36,310 --> 00:27:41,590
address<font color="#CCCCCC"> that we pre calculated</font><font color="#E5E5E5"> so now</font>

591
00:27:39,070 --> 00:27:44,200
what the address<font color="#CCCCCC"> of the idle function</font>

592
00:27:41,590 --> 00:27:46,419
<font color="#E5E5E5">gets swapped with our our header right</font>

593
00:27:44,200 --> 00:27:48,160
here it will jump over<font color="#CCCCCC"> we look aside</font>

594
00:27:46,420 --> 00:27:57,070
this into the main shell killing stage

595
00:27:48,160 --> 00:27:58,780
into saint-lo<font color="#E5E5E5"> and so in Windows</font><font color="#CCCCCC"> 7</font><font color="#E5E5E5"> is a</font>

596
00:27:57,070 --> 00:28:00,850
completely<font color="#E5E5E5"> different exploit</font><font color="#CCCCCC"> a lot of</font>

597
00:27:58,780 --> 00:28:03,310
things that<font color="#E5E5E5"> change from XP</font>

598
00:28:00,850 --> 00:28:05,740
<font color="#E5E5E5">one thing that Windows 7 was</font><font color="#CCCCCC"> munch</font>

599
00:28:03,310 --> 00:28:07,679
exploit does<font color="#E5E5E5"> is</font><font color="#CCCCCC"> an ax simultaneously</font>

600
00:28:05,740 --> 00:28:09,850
explains x86 and x64

601
00:28:07,680 --> 00:28:14,050
<font color="#CCCCCC">so the structures that we overflow</font>

602
00:28:09,850 --> 00:28:17,560
actually the offsets of things are such

603
00:28:14,050 --> 00:28:20,290
that they can overflow<font color="#E5E5E5"> and for the x86</font>

604
00:28:17,560 --> 00:28:21,970
<font color="#E5E5E5">and</font><font color="#CCCCCC"> x4 at the</font><font color="#E5E5E5"> same time which is pretty</font>

605
00:28:20,290 --> 00:28:23,620
cool

606
00:28:21,970 --> 00:28:25,930
another thing<font color="#CCCCCC"> I changed</font><font color="#E5E5E5"> was the non</font>

607
00:28:23,620 --> 00:28:27,820
<font color="#E5E5E5">digital allocation direction so now</font>

608
00:28:25,930 --> 00:28:32,170
sequential allocations we're going to

609
00:28:27,820 --> 00:28:35,050
<font color="#CCCCCC">flow to</font><font color="#E5E5E5"> high addresses</font><font color="#CCCCCC"> Windows Firewall</font>

610
00:28:32,170 --> 00:28:37,000
<font color="#E5E5E5">is technically introduced in XP</font>

611
00:28:35,050 --> 00:28:39,610
maybe even earlier at least<font color="#E5E5E5"> the GUI came</font>

612
00:28:37,000 --> 00:28:41,710
and<font color="#CCCCCC"> XP service pack 2 doesn't only</font>

613
00:28:39,610 --> 00:28:43,449
matter those configs<font color="#E5E5E5"> such as joining a</font>

614
00:28:41,710 --> 00:28:45,870
domain<font color="#CCCCCC"> and a date report for court wide</font>

615
00:28:43,450 --> 00:28:49,960
open up

616
00:28:45,870 --> 00:28:53,139
<font color="#CCCCCC">MZ 6.0 the how he is still standing but</font>

617
00:28:49,960 --> 00:28:57,100
that processors<font color="#E5E5E5"> control region is not</font>

618
00:28:53,140 --> 00:28:59,020
has<font color="#CCCCCC"> been a</font><font color="#E5E5E5"> SLR so the idle function we</font>

619
00:28:57,100 --> 00:29:01,510
don't know we can't be a<font color="#E5E5E5"> pre calculated</font>

620
00:28:59,020 --> 00:29:03,629
<font color="#E5E5E5">item function news so we can't</font><font color="#CCCCCC"> really</font>

621
00:29:01,510 --> 00:29:07,210
<font color="#CCCCCC">use that methodology anymore</font>

622
00:29:03,630 --> 00:29:10,300
and then also with Windows 7<font color="#CCCCCC"> now we have</font>

623
00:29:07,210 --> 00:29:12,610
SME 2<font color="#E5E5E5"> so it used to be</font><font color="#CCCCCC"> that the</font>

624
00:29:10,300 --> 00:29:13,600
<font color="#E5E5E5">networking all the network was part of</font>

625
00:29:12,610 --> 00:29:18,100
the<font color="#E5E5E5"> services</font>

626
00:29:13,600 --> 00:29:20,800
<font color="#CCCCCC">SMTP 1 driver with SB 2 they introduced</font>

627
00:29:18,100 --> 00:29:23,169
some new<font color="#E5E5E5"> drivers sort of to dunces</font><font color="#CCCCCC"> and</font>

628
00:29:20,800 --> 00:29:26,139
they kind of moved all the networking

629
00:29:23,170 --> 00:29:31,290
out to a library driver called certain

630
00:29:26,140 --> 00:29:33,760
<font color="#CCCCCC">taxes so that's</font><font color="#E5E5E5"> just important to know</font>

631
00:29:31,290 --> 00:29:38,250
<font color="#CCCCCC">so we again are</font><font color="#E5E5E5"> we're gonna be opening</font>

632
00:29:33,760 --> 00:29:38,250
many connections<font color="#E5E5E5"> on the groups</font><font color="#CCCCCC"> of wool</font>

633
00:29:39,030 --> 00:29:43,330
we're gonna have our exploit connection

634
00:29:41,290 --> 00:29:45,610
that's<font color="#CCCCCC"> going to contain the</font><font color="#E5E5E5"> feed list</font>

635
00:29:43,330 --> 00:29:48,129
<font color="#E5E5E5">that's going to overflow then we're</font>

636
00:29:45,610 --> 00:29:51,870
<font color="#CCCCCC">gonna</font><font color="#E5E5E5"> have use the session</font>

637
00:29:48,130 --> 00:29:54,690
<font color="#CCCCCC">setup up again this time to</font><font color="#E5E5E5"> create</font>

638
00:29:51,870 --> 00:29:56,280
<font color="#E5E5E5">allocation and</font><font color="#CCCCCC"> hole connections and then</font>

639
00:29:54,690 --> 00:29:59,400
this time our<font color="#E5E5E5"> groom is instead of</font><font color="#CCCCCC"> in</font>

640
00:29:56,280 --> 00:30:01,700
<font color="#CCCCCC">obsession</font><font color="#E5E5E5"> setups we're going to be</font>

641
00:29:59,400 --> 00:30:04,200
trying<font color="#E5E5E5"> to overflow a certain emphasis</font>

642
00:30:01,700 --> 00:30:07,230
<font color="#CCCCCC">network buffer so that</font><font color="#E5E5E5"> when certain</font>

643
00:30:04,200 --> 00:30:09,840
<font color="#CCCCCC">ethicists sees</font><font color="#E5E5E5"> that it has a packet</font>

644
00:30:07,230 --> 00:30:11,790
coming<font color="#E5E5E5"> in it will allocate a buffer with</font>

645
00:30:09,840 --> 00:30:17,040
some headers<font color="#E5E5E5"> and we're going to try it</font>

646
00:30:11,790 --> 00:30:19,740
<font color="#E5E5E5">out with</font><font color="#CCCCCC"> Lola's headers and the plus</font>

647
00:30:17,040 --> 00:30:22,050
<font color="#E5E5E5">punch connects point makes these look</font>

648
00:30:19,740 --> 00:30:24,360
like they're<font color="#CCCCCC"> SME two packets but it's</font>

649
00:30:22,050 --> 00:30:26,639
actually at a<font color="#CCCCCC"> point where</font><font color="#E5E5E5"> sermons that</font>

650
00:30:24,360 --> 00:30:29,309
<font color="#E5E5E5">sis is not delegated responsibility to</font>

651
00:30:26,640 --> 00:30:32,790
serve serve<font color="#E5E5E5"> us</font><font color="#CCCCCC"> this unit</font><font color="#E5E5E5"> so it's a fake</font>

652
00:30:29,309 --> 00:30:34,410
SME<font color="#CCCCCC"> to and this the</font><font color="#E5E5E5"> only thing that I've</font>

653
00:30:32,790 --> 00:30:38,490
seen<font color="#E5E5E5"> that</font><font color="#CCCCCC"> might get good reason for</font><font color="#E5E5E5"> this</font>

654
00:30:34,410 --> 00:30:39,960
is might be<font color="#CCCCCC"> an hi des</font><font color="#E5E5E5"> bypass because you</font>

655
00:30:38,490 --> 00:30:42,090
don't<font color="#E5E5E5"> make more in</font><font color="#CCCCCC"> modern it</font><font color="#E5E5E5"> has to be</font>

656
00:30:39,960 --> 00:30:44,130
<font color="#E5E5E5">to as much and we're eventually after</font><font color="#CCCCCC"> we</font>

657
00:30:42,090 --> 00:30:45,959
overflow these buffers<font color="#E5E5E5"> we're going to</font>

658
00:30:44,130 --> 00:30:50,250
send Michelle<font color="#E5E5E5"> killed over these same</font>

659
00:30:45,960 --> 00:30:52,890
connections<font color="#CCCCCC"> so again we start with the</font>

660
00:30:50,250 --> 00:30:54,360
pre<font color="#CCCCCC"> exploitation memory layout</font><font color="#E5E5E5"> we have</font>

661
00:30:52,890 --> 00:30:56,460
random stuff in<font color="#CCCCCC"> the</font><font color="#E5E5E5"> community this time</font>

662
00:30:54,360 --> 00:30:57,959
we have certain that that<font color="#CCCCCC"> cysts</font><font color="#E5E5E5"> off of</font>

663
00:30:56,460 --> 00:31:01,590
those<font color="#CCCCCC"> Network buffers it has with the</font>

664
00:30:57,960 --> 00:31:03,420
<font color="#E5E5E5">site memory</font><font color="#CCCCCC"> we're gonna send all</font><font color="#E5E5E5"> of our</font>

665
00:31:01,590 --> 00:31:06,899
field<font color="#E5E5E5"> list except for the last trans to</font>

666
00:31:03,420 --> 00:31:08,420
secondary again and then now we're going

667
00:31:06,900 --> 00:31:11,850
to<font color="#E5E5E5"> start</font><font color="#CCCCCC"> sending rooms so</font><font color="#E5E5E5"> easily just</font>

668
00:31:08,420 --> 00:31:17,400
<font color="#E5E5E5">serve net not sis buffers let me say a</font>

669
00:31:11,850 --> 00:31:19,469
real big<font color="#E5E5E5"> we got an</font><font color="#CCCCCC"> s and B</font><font color="#E5E5E5"> coming next</font>

670
00:31:17,400 --> 00:31:20,760
<font color="#E5E5E5">we said it was called the allocation</font>

671
00:31:19,470 --> 00:31:21,780
connections so we're sending<font color="#E5E5E5"> that</font>

672
00:31:20,760 --> 00:31:23,190
session<font color="#E5E5E5"> Senate bug</font>

673
00:31:21,780 --> 00:31:27,330
we're<font color="#E5E5E5"> either</font><font color="#CCCCCC"> suspending this</font><font color="#E5E5E5"> a little</font>

674
00:31:23,190 --> 00:31:31,440
bit smaller than<font color="#CCCCCC"> there's</font><font color="#E5E5E5"> been one</font><font color="#CCCCCC"> hour</font>

675
00:31:27,330 --> 00:31:32,250
our goal in te buffer sizes next we're

676
00:31:31,440 --> 00:31:34,590
<font color="#E5E5E5">going</font><font color="#CCCCCC"> to</font><font color="#E5E5E5"> send the whole buffer</font>

677
00:31:32,250 --> 00:31:38,940
connection which<font color="#CCCCCC"> is the same size as the</font>

678
00:31:34,590 --> 00:31:41,309
buffer size<font color="#E5E5E5"> we free the allocation</font>

679
00:31:38,940 --> 00:31:43,410
connection by closing the socket now

680
00:31:41,309 --> 00:31:44,879
it's able to just allocate whatever

681
00:31:43,410 --> 00:31:47,600
<font color="#E5E5E5">random memory it needs in</font><font color="#CCCCCC"> that slot</font>

682
00:31:44,880 --> 00:31:49,950
instead<font color="#E5E5E5"> of interfering with our grooming</font>

683
00:31:47,600 --> 00:31:51,959
and then we send the<font color="#E5E5E5"> final</font><font color="#CCCCCC"> group packets</font>

684
00:31:49,950 --> 00:31:54,870
<font color="#E5E5E5">and we're hoping that one</font><font color="#CCCCCC"> of</font><font color="#E5E5E5"> those will</font>

685
00:31:51,960 --> 00:31:58,020
<font color="#E5E5E5">come after</font><font color="#CCCCCC"> that session</font><font color="#E5E5E5"> set up</font><font color="#CCCCCC"> hole</font>

686
00:31:54,870 --> 00:32:00,659
vacation we<font color="#E5E5E5"> freeze the whole allocation</font>

687
00:31:58,020 --> 00:32:03,170
close the socket and now a buffer<font color="#E5E5E5"> that's</font>

688
00:32:00,660 --> 00:32:08,580
the same size as that<font color="#E5E5E5"> in</font><font color="#CCCCCC"> T V buffer</font>

689
00:32:03,170 --> 00:32:10,230
<font color="#CCCCCC">that's</font><font color="#E5E5E5"> calculated is now available</font><font color="#CCCCCC"> but</font>

690
00:32:08,580 --> 00:32:13,919
then during the<font color="#CCCCCC"> conversion process from</font>

691
00:32:10,230 --> 00:32:20,400
<font color="#E5E5E5">ls2 to NTP that NTP buffer was not the</font>

692
00:32:13,920 --> 00:32:23,580
right size<font color="#CCCCCC"> so here's the target of our</font>

693
00:32:20,400 --> 00:32:25,380
<font color="#CCCCCC">buffalo overflow this time like I said</font>

694
00:32:23,580 --> 00:32:28,610
<font color="#CCCCCC">what you tell the</font><font color="#E5E5E5"> server</font><font color="#CCCCCC"> at</font><font color="#E5E5E5"> night sis</font>

695
00:32:25,380 --> 00:32:32,490
driver when you<font color="#E5E5E5"> open TCP connection same</font>

696
00:32:28,610 --> 00:32:34,889
<font color="#CCCCCC">Dinos headers</font><font color="#E5E5E5"> you saying I</font><font color="#CCCCCC"> have an SME</font>

697
00:32:32,490 --> 00:32:39,360
coming<font color="#CCCCCC"> it's</font><font color="#E5E5E5"> this big</font><font color="#CCCCCC"> it</font><font color="#E5E5E5"> was that much</font>

698
00:32:34,890 --> 00:32:41,100
<font color="#CCCCCC">memory to hold</font><font color="#E5E5E5"> that SME</font><font color="#CCCCCC"> and so there's a</font>

699
00:32:39,360 --> 00:32:44,909
bunch<font color="#E5E5E5"> of</font><font color="#CCCCCC"> fuels in this with the ones</font>

700
00:32:41,100 --> 00:32:49,139
that<font color="#CCCCCC"> we're really interested in this in</font>

701
00:32:44,910 --> 00:32:51,690
detail<font color="#E5E5E5"> so an MDL</font><font color="#CCCCCC"> is a</font><font color="#E5E5E5"> built in structure</font>

702
00:32:49,140 --> 00:32:55,429
<font color="#E5E5E5">and Windows NT memory script or lists</font>

703
00:32:51,690 --> 00:32:58,980
<font color="#E5E5E5">all they do is map virtual to physical</font>

704
00:32:55,429 --> 00:33:01,590
<font color="#E5E5E5">non-contiguous</font><font color="#CCCCCC"> just basically whatever</font>

705
00:32:58,980 --> 00:33:03,540
<font color="#CCCCCC">we overwrite here we can build a</font><font color="#E5E5E5"> right</font>

706
00:33:01,590 --> 00:33:05,790
<font color="#CCCCCC">one layer primitive because we can set</font>

707
00:33:03,540 --> 00:33:07,800
the map system virtual address wherever

708
00:33:05,790 --> 00:33:10,170
we want so<font color="#E5E5E5"> when we overflow we're going</font>

709
00:33:07,800 --> 00:33:11,850
to set it<font color="#CCCCCC"> to</font><font color="#E5E5E5"> the Hal heat which is just</font>

710
00:33:10,170 --> 00:33:15,330
not a Sal are<font color="#CCCCCC"> you ready to execute</font>

711
00:33:11,850 --> 00:33:17,399
memory<font color="#CCCCCC"> so at this point anything</font><font color="#E5E5E5"> that we</font>

712
00:33:15,330 --> 00:33:18,750
write on<font color="#CCCCCC"> that socket is going to look at</font>

713
00:33:17,400 --> 00:33:21,179
that<font color="#E5E5E5"> in deal where it's supposed to be</font>

714
00:33:18,750 --> 00:33:22,800
<font color="#E5E5E5">writing that</font><font color="#CCCCCC"> - you can see I used</font><font color="#E5E5E5"> to</font>

715
00:33:21,179 --> 00:33:25,920
point<font color="#E5E5E5"> to the actual buffer but now</font>

716
00:33:22,800 --> 00:33:26,909
<font color="#E5E5E5">that's</font><font color="#CCCCCC"> pointing to the healthy so now</font>

717
00:33:25,920 --> 00:33:30,330
we're going to send the<font color="#E5E5E5"> shellcode</font>

718
00:33:26,910 --> 00:33:32,400
over each<font color="#E5E5E5"> room you</font><font color="#CCCCCC"> make sure</font><font color="#E5E5E5"> that the</font>

719
00:33:30,330 --> 00:33:36,178
open<font color="#CCCCCC"> we're not sure which room</font><font color="#E5E5E5"> actually</font>

720
00:33:32,400 --> 00:33:38,160
got<font color="#CCCCCC"> overflow but so we have to send</font><font color="#E5E5E5"> the</font>

721
00:33:36,179 --> 00:33:41,220
shelter on all of them

722
00:33:38,160 --> 00:33:43,059
we also overwrite that<font color="#E5E5E5"> serve net when</font>

723
00:33:41,220 --> 00:33:48,610
<font color="#E5E5E5">socks truck</font>

724
00:33:43,059 --> 00:33:50,559
context and that's<font color="#E5E5E5"> will that serve net</font>

725
00:33:48,610 --> 00:33:54,279
when stocks Trump has<font color="#E5E5E5"> a function table</font>

726
00:33:50,559 --> 00:33:56,700
<font color="#E5E5E5">in it</font><font color="#CCCCCC"> so now when we free all the group</font>

727
00:33:54,279 --> 00:33:59,830
connections after<font color="#E5E5E5"> we sent the shell</font><font color="#CCCCCC"> code</font>

728
00:33:56,700 --> 00:34:02,200
<font color="#E5E5E5">that function</font><font color="#CCCCCC"> table has a</font><font color="#E5E5E5"> clean up</font>

729
00:33:59,830 --> 00:34:07,720
<font color="#E5E5E5">function in it and we just point that to</font>

730
00:34:02,200 --> 00:34:10,020
the double<font color="#E5E5E5"> pulse</font><font color="#CCCCCC"> ourself in when we get</font>

731
00:34:07,720 --> 00:34:12,699
execution<font color="#E5E5E5"> this time we are running at</font>

732
00:34:10,020 --> 00:34:15,190
dispatch level so things like<font color="#E5E5E5"> page</font>

733
00:34:12,699 --> 00:34:17,379
<font color="#CCCCCC">numbering are</font><font color="#E5E5E5"> off limits</font><font color="#CCCCCC"> and that's</font>

734
00:34:15,190 --> 00:34:21,190
gonna be<font color="#CCCCCC"> necessary for full start to use</font>

735
00:34:17,379 --> 00:34:24,098
in<font color="#E5E5E5"> order to backdoor</font><font color="#CCCCCC"> the transaction to</font>

736
00:34:21,190 --> 00:34:25,780
dispatch table so a quick and<font color="#E5E5E5"> dirty way</font>

737
00:34:24,099 --> 00:34:28,659
<font color="#E5E5E5">to get the dispatch level</font><font color="#CCCCCC"> its passive</font>

738
00:34:25,780 --> 00:34:32,260
level is to hook the syscall<font color="#E5E5E5"> MSR</font>

739
00:34:28,659 --> 00:34:36,280
register at this point we<font color="#E5E5E5"> are violating</font>

740
00:34:32,260 --> 00:34:38,290
<font color="#CCCCCC">- guard - guard entire group comes along</font>

741
00:34:36,280 --> 00:34:40,649
and sees that you've put the<font color="#E5E5E5"> sysvol</font>

742
00:34:38,290 --> 00:34:42,579
table<font color="#E5E5E5"> it could blue screen the system</font>

743
00:34:40,649 --> 00:34:46,029
<font color="#E5E5E5">but whirling and have the hooks for</font>

744
00:34:42,579 --> 00:34:50,020
<font color="#E5E5E5">until the next</font><font color="#CCCCCC"> system</font><font color="#E5E5E5"> fault so the next</font>

745
00:34:46,030 --> 00:34:52,980
<font color="#CCCCCC">system call happens</font><font color="#E5E5E5"> we run</font><font color="#CCCCCC"> our stage one</font>

746
00:34:50,020 --> 00:34:56,290
<font color="#CCCCCC">shell code they just calls double</font><font color="#E5E5E5"> pulsar</font>

747
00:34:52,980 --> 00:34:57,910
returns and then restores that<font color="#E5E5E5"> this is</font>

748
00:34:56,290 --> 00:35:04,300
<font color="#CCCCCC">called NSR</font><font color="#E5E5E5"> back</font><font color="#CCCCCC"> to</font><font color="#E5E5E5"> what it was before</font>

749
00:34:57,910 --> 00:35:05,460
<font color="#E5E5E5">and hopefully</font><font color="#CCCCCC"> hash guard hadn't run go</font>

750
00:35:04,300 --> 00:35:10,089
on

751
00:35:05,460 --> 00:35:13,089
<font color="#CCCCCC">so turtle blue on</font><font color="#E5E5E5"> the</font><font color="#CCCCCC"> eight</font><font color="#E5E5E5"> plus has</font>

752
00:35:10,089 --> 00:35:15,339
changed a little bit more<font color="#CCCCCC"> so by</font><font color="#E5E5E5"> default</font>

753
00:35:13,089 --> 00:35:19,119
anonymous logins to the inter process

754
00:35:15,339 --> 00:35:20,980
communication street is blocked<font color="#E5E5E5"> but many</font>

755
00:35:19,119 --> 00:35:23,290
misconfigurations still now anonymous

756
00:35:20,980 --> 00:35:25,900
logins<font color="#CCCCCC"> through</font><font color="#E5E5E5"> that anonymous login in</font>

757
00:35:23,290 --> 00:35:28,140
<font color="#E5E5E5">order to say we're creating a final in</font>

758
00:35:25,900 --> 00:35:30,819
order to the<font color="#CCCCCC"> son</font><font color="#E5E5E5"> that exploit</font><font color="#CCCCCC"> free list</font>

759
00:35:28,140 --> 00:35:35,098
<font color="#CCCCCC">the other</font><font color="#E5E5E5"> thing that</font><font color="#CCCCCC"> we'll notice that's</font>

760
00:35:30,819 --> 00:35:37,960
a very<font color="#E5E5E5"> big difference is that</font><font color="#CCCCCC"> now the</font>

761
00:35:35,099 --> 00:35:40,510
when we told certain<font color="#CCCCCC"> that nazis</font><font color="#E5E5E5"> to</font>

762
00:35:37,960 --> 00:35:42,330
reserve as a buffer<font color="#E5E5E5"> it's going to put</font>

763
00:35:40,510 --> 00:35:44,670
<font color="#E5E5E5">the headers of that buffer</font>

764
00:35:42,330 --> 00:35:46,560
after the buffer<font color="#E5E5E5"> so I'm Windows</font><font color="#CCCCCC"> 7 the</font>

765
00:35:44,670 --> 00:35:49,590
headers<font color="#CCCCCC"> and</font><font color="#E5E5E5"> before the buffer on this 10</font>

766
00:35:46,560 --> 00:35:51,480
<font color="#E5E5E5">there after the buffer and</font><font color="#CCCCCC"> this means</font><font color="#E5E5E5"> we</font>

767
00:35:49,590 --> 00:35:54,810
<font color="#CCCCCC">have to overflow a lot more memory</font><font color="#E5E5E5"> in</font>

768
00:35:51,480 --> 00:35:57,180
<font color="#E5E5E5">order to overwrite</font><font color="#CCCCCC"> the NDL than things</font>

769
00:35:54,810 --> 00:36:01,650
<font color="#E5E5E5">that you don't were right so there is a</font>

770
00:35:57,180 --> 00:36:03,870
<font color="#E5E5E5">high risk of crashing this is 10 and</font>

771
00:36:01,650 --> 00:36:05,940
<font color="#CCCCCC">Windows 8</font><font color="#E5E5E5"> enough home another thing is</font>

772
00:36:03,870 --> 00:36:08,430
that<font color="#E5E5E5"> the healthy</font><font color="#CCCCCC"> where we stored our</font>

773
00:36:05,940 --> 00:36:13,710
<font color="#E5E5E5">cell killed last time is now been marked</font>

774
00:36:08,430 --> 00:36:16,319
as<font color="#E5E5E5"> non executables</font><font color="#CCCCCC"> ahead of death so</font>

775
00:36:13,710 --> 00:36:18,780
we're going to<font color="#E5E5E5"> need a death bypass for</font>

776
00:36:16,320 --> 00:36:23,120
where we<font color="#CCCCCC"> want</font><font color="#E5E5E5"> to store that shellcode</font>

777
00:36:18,780 --> 00:36:25,350
so<font color="#CCCCCC"> Stefan libéré published a</font>

778
00:36:23,120 --> 00:36:29,430
presentation called bypassing Windows 10

779
00:36:25,350 --> 00:36:32,940
kernel ASLR<font color="#E5E5E5"> were hoping so we know that</font>

780
00:36:29,430 --> 00:36:37,980
<font color="#E5E5E5">how he still has no SLR but it's marked</font>

781
00:36:32,940 --> 00:36:40,470
his death but the<font color="#E5E5E5"> x64</font><font color="#CCCCCC"> the amd64</font><font color="#E5E5E5"> page</font>

782
00:36:37,980 --> 00:36:43,050
table<font color="#E5E5E5"> entry</font><font color="#CCCCCC"> for that</font><font color="#E5E5E5"> page is also not a</font>

783
00:36:40,470 --> 00:36:46,350
SLR so we know where the page table

784
00:36:43,050 --> 00:36:48,690
exists page table entry<font color="#CCCCCC"> for that</font><font color="#E5E5E5"> and at</font>

785
00:36:46,350 --> 00:36:52,529
<font color="#E5E5E5">bits 63 is where the actual index page</font>

786
00:36:48,690 --> 00:36:54,720
is set<font color="#E5E5E5"> so in order to bypass this we're</font>

787
00:36:52,530 --> 00:36:57,240
gonna<font color="#E5E5E5"> have to run the exploit basically</font>

788
00:36:54,720 --> 00:36:59,819
twice the first<font color="#E5E5E5"> time you overwrite that</font>

789
00:36:57,240 --> 00:37:02,430
in<font color="#CCCCCC"> deal</font><font color="#E5E5E5"> to point at</font><font color="#CCCCCC"> the page table entry</font>

790
00:36:59,820 --> 00:37:05,070
and then<font color="#E5E5E5"> we just send one byte over the</font>

791
00:37:02,430 --> 00:37:07,799
<font color="#E5E5E5">socket with a zero so that it over</font>

792
00:37:05,070 --> 00:37:10,860
writes that<font color="#CCCCCC"> M X and then we're pretty</font>

793
00:37:07,800 --> 00:37:15,960
<font color="#E5E5E5">much just do the same methodology</font><font color="#CCCCCC"> as the</font>

794
00:37:10,860 --> 00:37:19,500
<font color="#CCCCCC">Windows</font><font color="#E5E5E5"> 7</font><font color="#CCCCCC"> X plate after</font><font color="#E5E5E5"> that so is the</font>

795
00:37:15,960 --> 00:37:22,200
<font color="#E5E5E5">outcome</font><font color="#CCCCCC"> so here's the major differences</font>

796
00:37:19,500 --> 00:37:24,210
between XP and Vista<font color="#E5E5E5"> plus you'll see the</font>

797
00:37:22,200 --> 00:37:27,629
vulnerability was during<font color="#CCCCCC"> that this size</font>

798
00:37:24,210 --> 00:37:30,240
calculation<font color="#E5E5E5"> where it was corrected the</font>

799
00:37:27,630 --> 00:37:32,370
pointer size<font color="#CCCCCC"> the energy science when it</font>

800
00:37:30,240 --> 00:37:34,890
<font color="#E5E5E5">cast the plain wrong</font>

801
00:37:32,370 --> 00:37:39,460
next the<font color="#E5E5E5"> other overflow happened</font>

802
00:37:34,890 --> 00:37:43,270
during the OS<font color="#E5E5E5"> 2v2 NT</font><font color="#CCCCCC"> so as iterating</font>

803
00:37:39,460 --> 00:37:45,700
over each p1 XP the target was that

804
00:37:43,270 --> 00:37:48,970
<font color="#CCCCCC">served pool header which we hijacked</font>

805
00:37:45,700 --> 00:37:52,779
<font color="#E5E5E5">with interlock free our shell careless</font>

806
00:37:48,970 --> 00:37:55,810
<font color="#E5E5E5">sense to the overworld that pool header</font>

807
00:37:52,780 --> 00:37:58,630
and then the<font color="#E5E5E5"> function we looked in order</font>

808
00:37:55,810 --> 00:38:02,349
to get code execution was<font color="#CCCCCC"> top processor</font>

809
00:37:58,630 --> 00:38:05,140
<font color="#CCCCCC">title</font><font color="#E5E5E5"> and then in</font><font color="#CCCCCC"> vista</font><font color="#E5E5E5"> plus we're</font>

810
00:38:02,349 --> 00:38:08,109
overflowing<font color="#E5E5E5"> our target is that certain</font>

811
00:38:05,140 --> 00:38:10,779
embassy buffer header and then we

812
00:38:08,109 --> 00:38:12,730
<font color="#CCCCCC">hijacks</font><font color="#E5E5E5"> execution during that</font><font color="#CCCCCC"> comma</font>

813
00:38:10,780 --> 00:38:14,320
<font color="#E5E5E5">receive handler that</font><font color="#CCCCCC"> looked into the</font>

814
00:38:12,730 --> 00:38:18,340
function table<font color="#E5E5E5"> for the clinton function</font>

815
00:38:14,320 --> 00:38:19,630
and called back<font color="#E5E5E5"> we stored our cell code</font>

816
00:38:18,340 --> 00:38:22,540
on the heat the Howey

817
00:38:19,630 --> 00:38:24,940
<font color="#CCCCCC">using a red blood we're riveted as I</font>

818
00:38:22,540 --> 00:38:27,160
probably should<font color="#CCCCCC"> get</font><font color="#E5E5E5"> coda institution</font><font color="#CCCCCC"> the</font>

819
00:38:24,940 --> 00:38:31,270
double<font color="#CCCCCC"> pulsar</font><font color="#E5E5E5"> we</font><font color="#CCCCCC"> clip</font><font color="#E5E5E5"> the system call</font>

820
00:38:27,160 --> 00:38:34,240
table so here's what the<font color="#E5E5E5"> passion looks</font>

821
00:38:31,270 --> 00:38:40,180
like<font color="#E5E5E5"> three eternal blue and server OS</font>

822
00:38:34,240 --> 00:38:43,540
<font color="#CCCCCC">two</font><font color="#E5E5E5"> felis</font><font color="#CCCCCC"> ante before we were casting to</font>

823
00:38:40,180 --> 00:38:46,359
a short on that<font color="#E5E5E5"> long field so the base</font>

824
00:38:43,540 --> 00:38:50,529
is you<font color="#E5E5E5"> just cast it to a long when you</font>

825
00:38:46,359 --> 00:38:53,770
fix it<font color="#E5E5E5"> up but</font><font color="#CCCCCC"> again why did why are you</font>

826
00:38:50,530 --> 00:38:55,900
<font color="#CCCCCC">fixing the</font><font color="#E5E5E5"> clients broken fee list if</font>

827
00:38:53,770 --> 00:38:57,490
the fee list is bad just projectable<font color="#CCCCCC"> snd</font>

828
00:38:55,900 --> 00:38:59,820
<font color="#E5E5E5">and we wouldn't</font><font color="#CCCCCC"> have been here</font><font color="#E5E5E5"> in the</font>

829
00:38:57,490 --> 00:38:59,819
<font color="#CCCCCC">first place</font>

830
00:39:00,220 --> 00:39:04,330
next is<font color="#CCCCCC"> the</font><font color="#E5E5E5"> session setup type confusion</font>

831
00:39:02,619 --> 00:39:08,320
<font color="#CCCCCC">so this allowed us to allocate memory</font>

832
00:39:04,330 --> 00:39:10,210
and free it on demand<font color="#CCCCCC"> this</font><font color="#E5E5E5"> lines</font>

833
00:39:08,320 --> 00:39:14,589
<font color="#E5E5E5">potentially be left blank</font><font color="#CCCCCC"> because as</font><font color="#E5E5E5"> far</font>

834
00:39:10,210 --> 00:39:16,210
<font color="#CCCCCC">as I can tell it still is this</font><font color="#E5E5E5"> but it's</font>

835
00:39:14,589 --> 00:39:18,940
<font color="#E5E5E5">not really that big of a</font><font color="#CCCCCC"> problem if you</font>

836
00:39:16,210 --> 00:39:23,170
<font color="#E5E5E5">want you want to reserve a lot of memory</font>

837
00:39:18,940 --> 00:39:26,380
on<font color="#CCCCCC"> snd you don't need this bug</font>

838
00:39:23,170 --> 00:39:27,820
<font color="#E5E5E5">SMB is just there and secured at</font><font color="#CCCCCC"> the way</font>

839
00:39:26,380 --> 00:39:29,800
that it allocates memory so you<font color="#E5E5E5"> can</font>

840
00:39:27,820 --> 00:39:34,960
<font color="#E5E5E5">pretty much</font><font color="#CCCCCC"> the amount</font><font color="#E5E5E5"> of service any</font>

841
00:39:29,800 --> 00:39:36,460
system<font color="#CCCCCC"> that you</font><font color="#E5E5E5"> can see this is the</font>

842
00:39:34,960 --> 00:39:38,440
patch for<font color="#CCCCCC"> the oversight plans to</font>

843
00:39:36,460 --> 00:39:41,220
dispatch this<font color="#CCCCCC"> is where we sent the</font><font color="#E5E5E5"> MT</font>

844
00:39:38,440 --> 00:39:45,240
<font color="#CCCCCC">trans primary the following up the</font><font color="#E5E5E5"> Train</font>

845
00:39:41,220 --> 00:39:47,490
- so now when a transaction is allocated

846
00:39:45,240 --> 00:39:49,979
there's a new field called secondary

847
00:39:47,490 --> 00:39:52,740
demand or at least<font color="#E5E5E5"> that's what I'm</font>

848
00:39:49,980 --> 00:39:56,310
aiming it<font color="#E5E5E5"> a lot</font><font color="#CCCCCC"> of the stuff you can get</font>

849
00:39:52,740 --> 00:39:57,540
from the debug files like things<font color="#E5E5E5"> like</font>

850
00:39:56,310 --> 00:40:00,000
the<font color="#E5E5E5"> structures you can't just the</font>

851
00:39:57,540 --> 00:40:02,609
function names<font color="#E5E5E5"> so they've had a mystery</font>

852
00:40:00,000 --> 00:40:04,859
field on a transaction structure

853
00:40:02,609 --> 00:40:09,060
allocation where<font color="#E5E5E5"> they store what they're</font>

854
00:40:04,859 --> 00:40:11,549
expecting the next follow-up<font color="#E5E5E5"> secondary</font>

855
00:40:09,060 --> 00:40:13,590
transactions to<font color="#CCCCCC"> be</font><font color="#E5E5E5"> then when it goes</font><font color="#CCCCCC"> to</font>

856
00:40:11,550 --> 00:40:15,630
<font color="#E5E5E5">look up the transaction</font><font color="#CCCCCC"> and</font><font color="#E5E5E5"> sees if the</font>

857
00:40:13,590 --> 00:40:17,820
<font color="#E5E5E5">incoming</font><font color="#CCCCCC"> guess of these command matches</font>

858
00:40:15,630 --> 00:40:21,660
that<font color="#E5E5E5"> secondary demand if not it returns</font>

859
00:40:17,820 --> 00:40:23,780
null so there's some<font color="#E5E5E5"> next gen</font>

860
00:40:21,660 --> 00:40:27,210
mitigations<font color="#CCCCCC"> they're</font><font color="#E5E5E5"> available today</font>

861
00:40:23,780 --> 00:40:29,640
<font color="#CCCCCC">we've</font><font color="#E5E5E5"> seen the server service</font><font color="#CCCCCC"> land</font><font color="#E5E5E5"> and</font>

862
00:40:27,210 --> 00:40:34,109
<font color="#E5E5E5">sewer his permissions have been revamped</font>

863
00:40:29,640 --> 00:40:38,040
a number of times so nowadays<font color="#E5E5E5"> anonymous</font>

864
00:40:34,109 --> 00:40:40,259
logins<font color="#E5E5E5"> are blocked by default</font><font color="#CCCCCC"> we've also</font>

865
00:40:38,040 --> 00:40:43,440
witnessed in the past<font color="#E5E5E5"> year the death of</font>

866
00:40:40,260 --> 00:40:47,880
<font color="#CCCCCC">Essen ev1 net pile finally got it</font>

867
00:40:43,440 --> 00:40:50,160
through all new versions of Windows 10

868
00:40:47,880 --> 00:40:52,170
<font color="#CCCCCC">that did not have this and maybe</font>

869
00:40:50,160 --> 00:40:56,009
<font color="#E5E5E5">one disabled</font><font color="#CCCCCC"> you have her enable if you</font>

870
00:40:52,170 --> 00:40:58,500
have to<font color="#CCCCCC"> fill</font><font color="#E5E5E5"> in it</font><font color="#CCCCCC"> screw around</font><font color="#E5E5E5"> and get</font>

871
00:40:56,010 --> 00:41:00,330
it enabled<font color="#E5E5E5"> which is a little unfortunate</font>

872
00:40:58,500 --> 00:41:03,210
because you know we have the results<font color="#E5E5E5"> of</font>

873
00:41:00,330 --> 00:41:05,490
a<font color="#CCCCCC"> 30 year NSA pen test I think we've got</font>

874
00:41:03,210 --> 00:41:07,730
all the bugs<font color="#CCCCCC"> now now as he wants good</font>

875
00:41:05,490 --> 00:41:07,729
<font color="#CCCCCC">good</font>

876
00:41:08,680 --> 00:41:13,060
another thing is that<font color="#E5E5E5"> the Serb that's</font>

877
00:41:10,450 --> 00:41:17,080
his driver and the NT kernel have been

878
00:41:13,060 --> 00:41:21,640
<font color="#CCCCCC">audited</font><font color="#E5E5E5"> over time to be adding more debt</font>

879
00:41:17,080 --> 00:41:26,529
and<font color="#CCCCCC"> not</font><font color="#E5E5E5"> executable bits we also finally</font>

880
00:41:21,640 --> 00:41:29,799
got<font color="#E5E5E5"> fuller</font><font color="#CCCCCC"> not</font><font color="#E5E5E5"> fold</font><font color="#CCCCCC"> into camulus a SLR</font>

881
00:41:26,530 --> 00:41:31,750
<font color="#CCCCCC">but with</font><font color="#E5E5E5"> Windows 10 redstone one we've</font>

882
00:41:29,800 --> 00:41:33,900
got<font color="#CCCCCC"> those page table entries for the</font>

883
00:41:31,750 --> 00:41:36,550
<font color="#CCCCCC">death bypass those</font><font color="#E5E5E5"> are now randomized</font>

884
00:41:33,900 --> 00:41:41,140
<font color="#E5E5E5">and then</font><font color="#CCCCCC"> in</font><font color="#E5E5E5"> redstone to the how he is</font>

885
00:41:36,550 --> 00:41:43,510
also randomized<font color="#CCCCCC"> and then it also has</font>

886
00:41:41,140 --> 00:41:45,120
<font color="#E5E5E5">some newer mitigations that</font><font color="#CCCCCC"> are a little</font>

887
00:41:43,510 --> 00:41:48,010
bit harder to turn on but<font color="#CCCCCC"> really cool</font>

888
00:41:45,120 --> 00:41:52,750
<font color="#CCCCCC">they're mostly designed I believe for</font>

889
00:41:48,010 --> 00:41:55,030
the Xbox<font color="#CCCCCC"> DRM but one of them is</font><font color="#E5E5E5"> type</font>

890
00:41:52,750 --> 00:41:58,690
<font color="#E5E5E5">regard so this prevents us from touching</font>

891
00:41:55,030 --> 00:42:00,370
the<font color="#E5E5E5"> syscall MSR so</font><font color="#CCCCCC"> getting from dispatch</font>

892
00:41:58,690 --> 00:42:02,350
level to pass it level you can't just

893
00:42:00,370 --> 00:42:05,500
put the<font color="#CCCCCC"> Syst ball table anymore there's</font>

894
00:42:02,350 --> 00:42:07,180
a hardware enforcement<font color="#CCCCCC"> that stops you</font>

895
00:42:05,500 --> 00:42:10,360
from<font color="#E5E5E5"> touching those is calling the</font><font color="#CCCCCC"> stars</font>

896
00:42:07,180 --> 00:42:12,540
<font color="#CCCCCC">that's because the whole NT kernel is</font>

897
00:42:10,360 --> 00:42:14,740
<font color="#CCCCCC">calibrating and</font><font color="#E5E5E5"> a hypervisor</font>

898
00:42:12,540 --> 00:42:17,440
another thing is kernel control flow

899
00:42:14,740 --> 00:42:21,879
guard<font color="#E5E5E5"> all those function pointers on the</font>

900
00:42:17,440 --> 00:42:23,740
<font color="#CCCCCC">overrode</font><font color="#E5E5E5"> to get</font><font color="#CCCCCC"> code execution</font><font color="#E5E5E5"> if this</font>

901
00:42:21,880 --> 00:42:25,920
is enabled<font color="#CCCCCC"> those will be double-checked</font>

902
00:42:23,740 --> 00:42:29,049
before those function callbacks<font color="#E5E5E5"> are</font>

903
00:42:25,920 --> 00:42:31,330
executed<font color="#E5E5E5"> and</font><font color="#CCCCCC"> book check will happen if</font>

904
00:42:29,050 --> 00:42:35,440
you overflow and change<font color="#E5E5E5"> where</font><font color="#CCCCCC"> rays</font>

905
00:42:31,330 --> 00:42:38,290
<font color="#E5E5E5">hijacks so we have some next kid next in</font>

906
00:42:35,440 --> 00:42:41,050
mitigations<font color="#E5E5E5"> that</font><font color="#CCCCCC"> are coming tomorrow one</font>

907
00:42:38,290 --> 00:42:42,790
of them is Margaret<font color="#CCCCCC"> shadow stacks so</font>

908
00:42:41,050 --> 00:42:46,570
<font color="#E5E5E5">stack overflows this will finally</font>

909
00:42:42,790 --> 00:42:48,990
hopefully<font color="#CCCCCC"> be the killer every time you</font>

910
00:42:46,570 --> 00:42:52,210
call<font color="#E5E5E5"> a function or put something on the</font>

911
00:42:48,990 --> 00:42:55,839
function<font color="#CCCCCC"> return stack</font><font color="#E5E5E5"> the shadow stack</font>

912
00:42:52,210 --> 00:42:57,370
<font color="#E5E5E5">that contains that return it'll double</font>

913
00:42:55,840 --> 00:42:59,980
check to make<font color="#CCCCCC"> sure that return</font><font color="#E5E5E5"> address</font>

914
00:42:57,370 --> 00:43:04,299
<font color="#CCCCCC">is</font><font color="#E5E5E5"> right so this kills things like</font><font color="#CCCCCC"> drop</font>

915
00:42:59,980 --> 00:43:06,190
cop those kinds of things<font color="#E5E5E5"> so</font><font color="#CCCCCC"> we didn't</font>

916
00:43:04,300 --> 00:43:07,630
see a stack overflow in here but some of

917
00:43:06,190 --> 00:43:09,970
<font color="#CCCCCC">you</font><font color="#E5E5E5"> have other eternal exploits like</font>

918
00:43:07,630 --> 00:43:13,270
eternal champion<font color="#E5E5E5"> that</font><font color="#CCCCCC"> is a stack</font>

919
00:43:09,970 --> 00:43:14,240
overflow<font color="#CCCCCC"> this</font><font color="#E5E5E5"> also means that we'll have</font>

920
00:43:13,270 --> 00:43:16,640
to redesign

921
00:43:14,240 --> 00:43:19,189
some<font color="#CCCCCC"> shellcode</font><font color="#E5E5E5"> it's not gonna stop</font>

922
00:43:16,640 --> 00:43:22,970
<font color="#E5E5E5">she'll</font><font color="#CCCCCC"> kill</font><font color="#E5E5E5"> like that you just</font><font color="#CCCCCC"> have to</font>

923
00:43:19,190 --> 00:43:25,460
<font color="#E5E5E5">think about things like ramen</font><font color="#CCCCCC"> another</font>

924
00:43:22,970 --> 00:43:28,509
thing<font color="#CCCCCC"> that has no real</font><font color="#E5E5E5"> public info</font>

925
00:43:25,460 --> 00:43:33,200
besides this one tweet that<font color="#E5E5E5"> matt miller</font>

926
00:43:28,509 --> 00:43:36,589
microsoft security resource<font color="#CCCCCC"> whatever it</font>

927
00:43:33,200 --> 00:43:37,970
is<font color="#CCCCCC"> he's treated at</font><font color="#E5E5E5"> my desk on</font><font color="#CCCCCC"> talked and</font>

928
00:43:36,589 --> 00:43:39,859
he<font color="#E5E5E5"> said that they were adding a pool</font>

929
00:43:37,970 --> 00:43:42,919
allocation order randomization so

930
00:43:39,859 --> 00:43:45,109
<font color="#CCCCCC">there's nice patterns that we saw for</font>

931
00:43:42,920 --> 00:43:48,650
the dreaming of<font color="#E5E5E5"> the pool those are going</font>

932
00:43:45,109 --> 00:43:51,319
to<font color="#E5E5E5"> be theoretically randomized so that's</font>

933
00:43:48,650 --> 00:43:53,329
a good area of research for anyone

934
00:43:51,319 --> 00:43:56,150
interested in<font color="#E5E5E5"> something cool it's coming</font>

935
00:43:53,329 --> 00:43:59,480
<font color="#E5E5E5">win is because</font><font color="#CCCCCC"> like i said</font><font color="#E5E5E5"> earlier</font><font color="#CCCCCC"> you</font>

936
00:43:56,150 --> 00:44:00,769
<font color="#E5E5E5">know s</font><font color="#CCCCCC"> design likes</font><font color="#E5E5E5"> tight allocations it</font>

937
00:43:59,480 --> 00:44:02,690
doesn't want<font color="#E5E5E5"> to deal with fragmentation</font>

938
00:44:00,769 --> 00:44:05,149
<font color="#E5E5E5">during critical applications and things</font>

939
00:44:02,690 --> 00:44:10,430
<font color="#E5E5E5">like that and so it's gonna do to see</font>

940
00:44:05,150 --> 00:44:13,519
what they've done<font color="#CCCCCC"> finally I just</font><font color="#E5E5E5"> have</font>

941
00:44:10,430 --> 00:44:16,700
some extra<font color="#CCCCCC"> resources here I think the</font>

942
00:44:13,519 --> 00:44:19,640
best resource on here is the second<font color="#CCCCCC"> one</font>

943
00:44:16,700 --> 00:44:21,288
<font color="#CCCCCC">it's whirl</font><font color="#E5E5E5"> and landings github so he's</font>

944
00:44:19,640 --> 00:44:23,868
written in Python<font color="#CCCCCC"> he much all over the</font>

945
00:44:21,289 --> 00:44:25,460
<font color="#CCCCCC">internal</font><font color="#E5E5E5"> exploits and so if you want</font>

946
00:44:23,869 --> 00:44:29,509
look<font color="#E5E5E5"> at them at a care level that's the</font>

947
00:44:25,460 --> 00:44:31,999
way to go<font color="#CCCCCC"> number</font><font color="#E5E5E5"> five there is my</font><font color="#CCCCCC"> Def</font>

948
00:44:29,509 --> 00:44:35,599
<font color="#CCCCCC">Con talk where I talked about not just a</font>

949
00:44:31,999 --> 00:44:37,368
<font color="#CCCCCC">little bit more</font><font color="#E5E5E5"> of all the internal</font>

950
00:44:35,599 --> 00:44:40,369
explains corporate breadth versus depth

951
00:44:37,369 --> 00:44:43,039
<font color="#E5E5E5">of talk and then finally I just wanna</font>

952
00:44:40,369 --> 00:44:45,200
say thank you to<font color="#CCCCCC"> Niklas billy-boy where</font>

953
00:44:43,039 --> 00:44:50,559
with<font color="#CCCCCC"> Wayne</font><font color="#E5E5E5"> I like see</font><font color="#CCCCCC"> an excuse that</font>

954
00:44:45,200 --> 00:44:50,558
<font color="#CCCCCC">biller and that's fish and that's</font>

955
00:44:59,040 --> 00:45:05,150
I<font color="#E5E5E5"> guess I do have time for questions</font>

956
00:45:08,100 --> 00:45:11,279
[Music]

957
00:45:16,150 --> 00:45:21,340
[Applause]

