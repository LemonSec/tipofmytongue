1
00:00:00,000 --> 00:00:07,950
everyone can everyone hear<font color="#E5E5E5"> me yes</font><font color="#CCCCCC"> no</font>

2
00:00:02,820 --> 00:00:10,519
<font color="#CCCCCC">okay</font><font color="#E5E5E5"> I'm Bryce</font><font color="#CCCCCC"> Burchell</font><font color="#E5E5E5"> and this talk is</font>

3
00:00:07,950 --> 00:00:12,990
<font color="#CCCCCC">called</font><font color="#E5E5E5"> the making of iOS 11 jailbreak</font>

4
00:00:10,519 --> 00:00:15,660
<font color="#CCCCCC">kitty the kernel hacker in 14 sleepless</font>

5
00:00:12,990 --> 00:00:19,289
nights<font color="#E5E5E5"> this</font><font color="#CCCCCC"> is</font><font color="#E5E5E5"> kind of my journey</font><font color="#CCCCCC"> when I</font>

6
00:00:15,660 --> 00:00:20,460
learned about iOS and the kernel<font color="#CCCCCC"> so let</font>

7
00:00:19,289 --> 00:00:21,689
<font color="#E5E5E5">me tell you a little about mama has felt</font>

8
00:00:20,460 --> 00:00:23,570
<font color="#E5E5E5">and then we'll jump right into it</font>

9
00:00:21,689 --> 00:00:26,400
because<font color="#E5E5E5"> we have a lot of stuff to cover</font>

10
00:00:23,570 --> 00:00:28,590
the name of<font color="#E5E5E5"> this talk comes from atlases</font>

11
00:00:26,400 --> 00:00:31,109
the making of<font color="#CCCCCC"> atlas from kitty to hacker</font>

12
00:00:28,590 --> 00:00:33,719
and five sleepless nights<font color="#CCCCCC"> and he kind of</font>

13
00:00:31,109 --> 00:00:35,640
inspired<font color="#CCCCCC"> me when</font><font color="#E5E5E5"> I was just</font><font color="#CCCCCC"> a skiddy</font><font color="#E5E5E5"> and</font>

14
00:00:33,719 --> 00:00:37,170
I've been playing CTF ever since you

15
00:00:35,640 --> 00:00:39,450
<font color="#E5E5E5">know that</font><font color="#CCCCCC"> was 13 years</font><font color="#E5E5E5"> ago I've been</font>

16
00:00:37,170 --> 00:00:41,879
playing<font color="#CCCCCC"> CG up for 13 years I've been</font><font color="#E5E5E5"> a</font>

17
00:00:39,450 --> 00:00:45,149
<font color="#E5E5E5">Def Con open CTF organizer for the past</font>

18
00:00:41,879 --> 00:00:48,329
<font color="#E5E5E5">four and</font><font color="#CCCCCC"> I've been with coalfire</font><font color="#E5E5E5"> the</font>

19
00:00:45,149 --> 00:00:50,430
company for<font color="#E5E5E5"> the past two and as of a</font>

20
00:00:48,329 --> 00:00:52,710
year ago<font color="#CCCCCC"> I</font><font color="#E5E5E5"> used to be afraid of kernels</font>

21
00:00:50,430 --> 00:00:55,530
<font color="#CCCCCC">I came to Derby con last year and to</font><font color="#E5E5E5"> the</font>

22
00:00:52,710 --> 00:00:57,030
class called<font color="#E5E5E5"> Windows kernel primer by</font>

23
00:00:55,530 --> 00:00:59,370
the hungry hackers I'm sure people

24
00:00:57,030 --> 00:01:01,710
<font color="#E5E5E5">thought last year and it was amazing</font><font color="#CCCCCC"> was</font>

25
00:00:59,370 --> 00:01:05,009
a real<font color="#E5E5E5"> eye-opener to go like hey this</font>

26
00:01:01,710 --> 00:01:06,450
<font color="#E5E5E5">isn't magic</font><font color="#CCCCCC"> this isn't rocket time</font><font color="#E5E5E5"> this</font>

27
00:01:05,010 --> 00:01:08,700
<font color="#E5E5E5">is just</font><font color="#CCCCCC"> normal</font><font color="#E5E5E5"> stuff and you can get</font>

28
00:01:06,450 --> 00:01:11,549
through so when we're gonna be<font color="#CCCCCC"> talking</font>

29
00:01:08,700 --> 00:01:13,560
<font color="#CCCCCC">about</font><font color="#E5E5E5"> they is</font><font color="#CCCCCC"> xnu</font><font color="#E5E5E5"> and this is the kernel</font>

30
00:01:11,549 --> 00:01:17,130
<font color="#CCCCCC">that Apple uses</font><font color="#E5E5E5"> for all</font><font color="#CCCCCC"> their devices so</font>

31
00:01:13,560 --> 00:01:19,590
<font color="#E5E5E5">the max the iPhone guy watches even</font><font color="#CCCCCC"> the</font>

32
00:01:17,130 --> 00:01:22,470
touch bar is<font color="#E5E5E5"> running its own kernel as</font>

33
00:01:19,590 --> 00:01:25,650
<font color="#E5E5E5">on</font><font color="#CCCCCC"> RAM it doesn't</font><font color="#E5E5E5"> own thing so Apple</font>

34
00:01:22,470 --> 00:01:29,429
uses<font color="#E5E5E5"> this everywhere and it's kind of</font>

35
00:01:25,650 --> 00:01:33,180
this duct tape together bastardization

36
00:01:29,430 --> 00:01:36,900
of open<font color="#CCCCCC"> software foundation</font><font color="#E5E5E5"> mach kernel</font>

37
00:01:33,180 --> 00:01:38,220
and the previous d43 kernel<font color="#E5E5E5"> and so it's</font>

38
00:01:36,900 --> 00:01:40,320
kind of like<font color="#CCCCCC"> the combination</font><font color="#E5E5E5"> they took</font>

39
00:01:38,220 --> 00:01:42,509
this micro kernel<font color="#CCCCCC"> mock is a micro kernel</font>

40
00:01:40,320 --> 00:01:44,460
<font color="#E5E5E5">it's super small barely does</font><font color="#CCCCCC"> anything</font>

41
00:01:42,509 --> 00:01:46,350
but does it very efficiently<font color="#CCCCCC"> and then</font>

42
00:01:44,460 --> 00:01:47,699
they duct-tape previously<font color="#E5E5E5"> onto it to get</font>

43
00:01:46,350 --> 00:01:51,869
all the functionality of three deities

44
00:01:47,700 --> 00:01:54,000
<font color="#E5E5E5">and</font><font color="#CCCCCC"> its supports all those architectures</font>

45
00:01:51,869 --> 00:01:55,649
listed up there<font color="#CCCCCC"> they drop PowerPC</font>

46
00:01:54,000 --> 00:01:58,500
because they don't make part<font color="#CCCCCC"> PC machines</font>

47
00:01:55,649 --> 00:02:00,299
anymore<font color="#E5E5E5"> which is fine</font><font color="#CCCCCC"> but</font><font color="#E5E5E5"> the real</font>

48
00:01:58,500 --> 00:02:04,200
kicker<font color="#E5E5E5"> and why kind of all this stuff</font>

49
00:02:00,299 --> 00:02:07,229
<font color="#E5E5E5">came about is that Apple</font><font color="#CCCCCC"> open source</font><font color="#E5E5E5"> the</font>

50
00:02:04,200 --> 00:02:09,420
kernel<font color="#E5E5E5"> the attended kernel back in 2017</font>

51
00:02:07,229 --> 00:02:11,790
<font color="#E5E5E5">and this has always been close for us</font>

52
00:02:09,419 --> 00:02:13,739
<font color="#CCCCCC">everyone</font><font color="#E5E5E5"> has been like you know only the</font>

53
00:02:11,790 --> 00:02:15,720
<font color="#E5E5E5">leadest elite can get access to</font>

54
00:02:13,740 --> 00:02:18,780
like the code or they have to struggle

55
00:02:15,720 --> 00:02:21,359
<font color="#CCCCCC">through reverse engineering and so a lot</font>

56
00:02:18,780 --> 00:02:23,130
of<font color="#CCCCCC"> open-source</font><font color="#E5E5E5"> security research has</font>

57
00:02:21,360 --> 00:02:24,300
been performed<font color="#E5E5E5"> especially by Google</font>

58
00:02:23,130 --> 00:02:27,390
<font color="#E5E5E5">project zero and we'll talk about that</font>

59
00:02:24,300 --> 00:02:30,810
<font color="#CCCCCC">in a minute</font><font color="#E5E5E5"> but that's kind of the</font>

60
00:02:27,390 --> 00:02:32,130
impetus to<font color="#CCCCCC"> this whole</font><font color="#E5E5E5"> thing so I do have</font>

61
00:02:30,810 --> 00:02:35,490
<font color="#E5E5E5">a little bit of a warning there is gonna</font>

62
00:02:32,130 --> 00:02:36,810
<font color="#CCCCCC">be a lot of C in here</font><font color="#E5E5E5"> and but don't be</font>

63
00:02:35,490 --> 00:02:38,490
afraid<font color="#CCCCCC"> of the complexity that we're</font>

64
00:02:36,810 --> 00:02:41,430
doing we're just<font color="#E5E5E5"> putting we're taking</font>

65
00:02:38,490 --> 00:02:42,990
<font color="#E5E5E5">simple abstraction we'll call them level</font>

66
00:02:41,430 --> 00:02:45,780
<font color="#E5E5E5">blocks and we'll build like a building</font>

67
00:02:42,990 --> 00:02:48,060
<font color="#CCCCCC">alright and complexity is our friend</font>

68
00:02:45,780 --> 00:02:50,970
<font color="#E5E5E5">because there are the bugs that were</font>

69
00:02:48,060 --> 00:02:53,400
using to exploit iOS<font color="#E5E5E5"> are a result of</font>

70
00:02:50,970 --> 00:02:56,130
<font color="#E5E5E5">this building complexity in the</font>

71
00:02:53,400 --> 00:02:59,190
<font color="#E5E5E5">operating system so just</font><font color="#CCCCCC"> to say the</font>

72
00:02:56,130 --> 00:03:01,500
kernel is not it's<font color="#E5E5E5"> not black magic it's</font>

73
00:02:59,190 --> 00:03:03,240
not that complicated<font color="#CCCCCC"> and</font><font color="#E5E5E5"> that's a little</font>

74
00:03:01,500 --> 00:03:06,600
<font color="#E5E5E5">bit of a lie it is complicated but each</font>

75
00:03:03,240 --> 00:03:09,000
individual<font color="#E5E5E5"> piece is understandable and</font>

76
00:03:06,600 --> 00:03:10,710
digestible<font color="#E5E5E5"> you know going from arrays of</font>

77
00:03:09,000 --> 00:03:13,230
just like a sequence<font color="#E5E5E5"> of things and</font>

78
00:03:10,710 --> 00:03:15,060
memory<font color="#CCCCCC"> destruct sequence of</font><font color="#E5E5E5"> things in</font>

79
00:03:13,230 --> 00:03:17,160
<font color="#CCCCCC">memory with types</font><font color="#E5E5E5"> associated with them</font>

80
00:03:15,060 --> 00:03:18,660
so you<font color="#CCCCCC"> link lists which</font><font color="#E5E5E5"> are just</font><font color="#CCCCCC"> strux</font>

81
00:03:17,160 --> 00:03:22,700
that have a pointer to<font color="#CCCCCC"> another struct</font>

82
00:03:18,660 --> 00:03:25,890
and then<font color="#E5E5E5"> upon those kind of basic dumb</font>

83
00:03:22,700 --> 00:03:27,540
<font color="#E5E5E5">computer science models we can</font><font color="#CCCCCC"> build all</font>

84
00:03:25,890 --> 00:03:29,940
of the abstractions that<font color="#E5E5E5"> the kernel</font>

85
00:03:27,540 --> 00:03:32,489
users<font color="#E5E5E5"> I'm sure everyone here</font><font color="#CCCCCC"> is</font><font color="#E5E5E5"> familiar</font>

86
00:03:29,940 --> 00:03:34,740
with<font color="#E5E5E5"> like how heaps work you kind</font><font color="#CCCCCC"> of</font><font color="#E5E5E5"> ask</font>

87
00:03:32,490 --> 00:03:37,200
for memory it gives it to you you hand

88
00:03:34,740 --> 00:03:39,330
it back it<font color="#E5E5E5"> takes care of it if all</font>

89
00:03:37,200 --> 00:03:41,970
garbage collection is<font color="#E5E5E5"> not under kind of</font>

90
00:03:39,330 --> 00:03:44,040
your<font color="#CCCCCC"> jurisdiction</font><font color="#E5E5E5"> and so that's what the</font>

91
00:03:41,970 --> 00:03:45,780
power of like using<font color="#E5E5E5"> these building</font>

92
00:03:44,040 --> 00:03:48,660
<font color="#CCCCCC">blocks gives you now there's a couple</font><font color="#E5E5E5"> of</font>

93
00:03:45,780 --> 00:03:51,930
abstractions that our<font color="#CCCCCC"> xnu is specific so</font>

94
00:03:48,660 --> 00:03:53,370
<font color="#CCCCCC">Cass and mock</font><font color="#E5E5E5"> ports are the two that</font><font color="#CCCCCC"> are</font>

95
00:03:51,930 --> 00:03:57,360
just slightly different<font color="#E5E5E5"> than other</font>

96
00:03:53,370 --> 00:04:00,060
operating systems so a task<font color="#E5E5E5"> in</font><font color="#CCCCCC"> xmu is</font>

97
00:03:57,360 --> 00:04:02,940
very analogous to the<font color="#E5E5E5"> e process</font>

98
00:04:00,060 --> 00:04:05,400
structure<font color="#E5E5E5"> inside</font><font color="#CCCCCC"> of Windows</font><font color="#E5E5E5"> it's a</font>

99
00:04:02,940 --> 00:04:06,840
collection<font color="#E5E5E5"> of everything that the kernel</font>

100
00:04:05,400 --> 00:04:09,180
needs to know about<font color="#E5E5E5"> a program to run it</font>

101
00:04:06,840 --> 00:04:11,070
<font color="#E5E5E5">like</font><font color="#CCCCCC"> the state where</font><font color="#E5E5E5"> it lies what</font>

102
00:04:09,180 --> 00:04:14,070
permissions would have where if<font color="#E5E5E5"> memory</font>

103
00:04:11,070 --> 00:04:16,349
is nap is a memory map<font color="#E5E5E5"> or is it page</font>

104
00:04:14,070 --> 00:04:19,469
down<font color="#CCCCCC"> so it's just a collection of data</font>

105
00:04:16,350 --> 00:04:21,270
<font color="#E5E5E5">surrounding</font><font color="#CCCCCC"> a process and</font><font color="#E5E5E5"> it it's all</font>

106
00:04:19,470 --> 00:04:24,780
built out<font color="#E5E5E5"> in</font><font color="#CCCCCC"> a nice little struct that</font>

107
00:04:21,269 --> 00:04:26,490
we'll see later and then the next thing

108
00:04:24,780 --> 00:04:27,659
which<font color="#CCCCCC"> is different from a lot of other</font>

109
00:04:26,490 --> 00:04:32,790
operating systems

110
00:04:27,660 --> 00:04:36,210
<font color="#CCCCCC">is</font><font color="#E5E5E5"> quartz</font><font color="#CCCCCC"> Mach ports</font><font color="#E5E5E5"> are derivative of</font>

111
00:04:32,790 --> 00:04:38,910
<font color="#E5E5E5">real-time operating systems kind of IPC</font>

112
00:04:36,210 --> 00:04:41,969
<font color="#E5E5E5">and this is what Apple heavily relies on</font>

113
00:04:38,910 --> 00:04:43,800
when they<font color="#CCCCCC"> duct-tape bsd and texting you</font>

114
00:04:41,970 --> 00:04:45,540
together<font color="#E5E5E5"> so</font><font color="#CCCCCC"> mock ports are just like</font>

115
00:04:43,800 --> 00:04:47,610
<font color="#CCCCCC">mailbox did you say hey I</font><font color="#E5E5E5"> have a</font><font color="#CCCCCC"> mailbox</font>

116
00:04:45,540 --> 00:04:49,200
<font color="#E5E5E5">then that makes you responsible for</font>

117
00:04:47,610 --> 00:04:51,480
<font color="#E5E5E5">receiving messages coming out of it and</font>

118
00:04:49,200 --> 00:04:52,710
then you can give<font color="#E5E5E5"> the you can give your</font>

119
00:04:51,480 --> 00:04:54,420
<font color="#CCCCCC">address to</font><font color="#E5E5E5"> someone else and they</font><font color="#CCCCCC"> can</font>

120
00:04:52,710 --> 00:04:56,159
save<font color="#CCCCCC"> you messages and you can give</font><font color="#E5E5E5"> your</font>

121
00:04:54,420 --> 00:05:00,810
address<font color="#E5E5E5"> just once or you can give it</font>

122
00:04:56,160 --> 00:05:03,690
permanently<font color="#CCCCCC"> so just think</font><font color="#E5E5E5"> of a port as a</font>

123
00:05:00,810 --> 00:05:05,010
mailbox<font color="#CCCCCC"> and so as we</font><font color="#E5E5E5"> move further and we</font>

124
00:05:03,690 --> 00:05:06,450
build up complexity it's just the

125
00:05:05,010 --> 00:05:11,430
mailboxes just<font color="#E5E5E5"> a way of</font><font color="#CCCCCC"> talking to the</font>

126
00:05:06,450 --> 00:05:13,740
kernel<font color="#CCCCCC"> and</font><font color="#E5E5E5"> so when we look at the entire</font>

127
00:05:11,430 --> 00:05:16,830
kernel<font color="#E5E5E5"> there's a lot to it</font><font color="#CCCCCC"> but we only</font>

128
00:05:13,740 --> 00:05:18,090
<font color="#E5E5E5">care about the user space because we're</font>

129
00:05:16,830 --> 00:05:20,669
living<font color="#E5E5E5"> in the user</font><font color="#CCCCCC"> space they're trying</font>

130
00:05:18,090 --> 00:05:23,010
to<font color="#E5E5E5"> jump into the kernel how we get and</font>

131
00:05:20,670 --> 00:05:25,350
how<font color="#CCCCCC"> we talk to the kernel with the IPC</font>

132
00:05:23,010 --> 00:05:27,690
mechanism such as<font color="#E5E5E5"> mock</font><font color="#CCCCCC"> quartz which</font>

133
00:05:25,350 --> 00:05:30,060
we're gonna dive deeply into and then

134
00:05:27,690 --> 00:05:32,130
the kernel<font color="#CCCCCC"> tasks everything else</font><font color="#E5E5E5"> doesn't</font>

135
00:05:30,060 --> 00:05:34,410
<font color="#E5E5E5">really matter for what we're looking at</font>

136
00:05:32,130 --> 00:05:38,940
we don't<font color="#E5E5E5"> need the extra complexity we're</font>

137
00:05:34,410 --> 00:05:41,640
not doing<font color="#CCCCCC"> base band exploitation</font><font color="#E5E5E5"> so what</font>

138
00:05:38,940 --> 00:05:44,160
we're really excited about is how we can

139
00:05:41,640 --> 00:05:46,169
<font color="#CCCCCC">talk from</font><font color="#E5E5E5"> a user's</font><font color="#CCCCCC"> bay path down to</font><font color="#E5E5E5"> the</font>

140
00:05:44,160 --> 00:05:49,919
kernel<font color="#CCCCCC"> of</font><font color="#E5E5E5"> the kernel</font><font color="#CCCCCC"> pal</font><font color="#E5E5E5"> all right</font>

141
00:05:46,169 --> 00:05:51,960
<font color="#E5E5E5">and so</font><font color="#CCCCCC"> Wyatt why do we even want</font><font color="#E5E5E5"> to</font>

142
00:05:49,919 --> 00:05:53,430
<font color="#CCCCCC">Jailbreak iOS well there's a</font><font color="#E5E5E5"> couple</font>

143
00:05:51,960 --> 00:05:56,310
<font color="#E5E5E5">reasons like I like having full control</font>

144
00:05:53,430 --> 00:06:00,810
<font color="#CCCCCC">over</font><font color="#E5E5E5"> my device</font><font color="#CCCCCC"> I like the ability</font><font color="#E5E5E5"> to</font>

145
00:05:56,310 --> 00:06:03,390
have<font color="#E5E5E5"> root on all my boxes</font><font color="#CCCCCC"> I do as</font><font color="#E5E5E5"> part</font>

146
00:06:00,810 --> 00:06:04,830
of my job I do mobile<font color="#CCCCCC"> app testing I need</font>

147
00:06:03,390 --> 00:06:07,080
Jill broke<font color="#E5E5E5"> and I opposed to do this</font>

148
00:06:04,830 --> 00:06:08,250
because as<font color="#E5E5E5"> you know if you try and</font>

149
00:06:07,080 --> 00:06:11,880
download<font color="#CCCCCC"> an app from the</font><font color="#E5E5E5"> App Store</font><font color="#CCCCCC"> it's</font>

150
00:06:08,250 --> 00:06:15,270
<font color="#CCCCCC">encrypted per device and so there's a</font>

151
00:06:11,880 --> 00:06:16,790
plethora of reasons but if we if we move

152
00:06:15,270 --> 00:06:19,590
forward<font color="#E5E5E5"> and you say all</font><font color="#CCCCCC"> right what are</font>

153
00:06:16,790 --> 00:06:20,700
prerequisite we need to have some<font color="#E5E5E5"> way of</font>

154
00:06:19,590 --> 00:06:23,820
interacting<font color="#E5E5E5"> with the system</font>

155
00:06:20,700 --> 00:06:26,460
so either SSH<font color="#E5E5E5"> or web what have you</font>

156
00:06:23,820 --> 00:06:28,500
we need<font color="#CCCCCC"> root and there are</font><font color="#E5E5E5"> multiple</font>

157
00:06:26,460 --> 00:06:30,630
<font color="#E5E5E5">definitions of root</font><font color="#CCCCCC"> we'll see coming</font><font color="#E5E5E5"> up</font>

158
00:06:28,500 --> 00:06:33,870
here soon<font color="#E5E5E5"> and</font><font color="#CCCCCC"> then we need</font><font color="#E5E5E5"> to be able to</font>

159
00:06:30,630 --> 00:06:35,010
<font color="#E5E5E5">run around code</font><font color="#CCCCCC"> because we want Ron we</font>

160
00:06:33,870 --> 00:06:36,720
want to<font color="#E5E5E5"> build our own tool if you want</font>

161
00:06:35,010 --> 00:06:39,639
to do security research we<font color="#E5E5E5"> want to break</font>

162
00:06:36,720 --> 00:06:42,189
<font color="#E5E5E5">that right and so</font>

163
00:06:39,639 --> 00:06:48,310
what we need is an exploit exploits cost

164
00:06:42,189 --> 00:06:51,460
money<font color="#CCCCCC"> but that's</font><font color="#E5E5E5"> why there hasn't been a</font>

165
00:06:48,310 --> 00:06:52,840
<font color="#E5E5E5">lot of jailbreaking since</font><font color="#CCCCCC"> ten or before</font>

166
00:06:51,460 --> 00:06:56,258
time there was a big<font color="#E5E5E5"> kind of lapse</font>

167
00:06:52,840 --> 00:06:58,060
between<font color="#E5E5E5"> eight four and</font><font color="#CCCCCC"> ten and he's the</font>

168
00:06:56,259 --> 00:06:59,919
exploits are<font color="#CCCCCC"> worth a lot of</font><font color="#E5E5E5"> money</font><font color="#CCCCCC"> so a</font>

169
00:06:58,060 --> 00:07:00,280
lot of<font color="#E5E5E5"> people</font><font color="#CCCCCC"> haven't been doing work on</font>

170
00:06:59,919 --> 00:07:03,729
them

171
00:07:00,280 --> 00:07:06,489
however when Apple decided<font color="#E5E5E5"> to decrypt</font>

172
00:07:03,729 --> 00:07:08,110
its kernel caches all of a sudden this

173
00:07:06,490 --> 00:07:09,520
<font color="#CCCCCC">is like their prerequisite to open</font>

174
00:07:08,110 --> 00:07:11,680
sourcing<font color="#E5E5E5"> the kernel all of a sudden</font>

175
00:07:09,520 --> 00:07:13,628
everyone can see the kernel cash<font color="#E5E5E5"> and do</font>

176
00:07:11,680 --> 00:07:17,050
reverse<font color="#CCCCCC"> engineering on it Google</font><font color="#E5E5E5"> went</font>

177
00:07:13,629 --> 00:07:20,580
okay let's put project zero on this and

178
00:07:17,050 --> 00:07:23,319
they they set up a bunch of research

179
00:07:20,580 --> 00:07:24,580
people<font color="#E5E5E5"> and started</font><font color="#CCCCCC"> looking for</font><font color="#E5E5E5"> bugs in</font>

180
00:07:23,319 --> 00:07:26,169
<font color="#E5E5E5">this and then they</font><font color="#CCCCCC"> decided to</font><font color="#E5E5E5"> release</font>

181
00:07:24,580 --> 00:07:31,919
them openly<font color="#E5E5E5"> and so that's why we have</font>

182
00:07:26,169 --> 00:07:35,198
kind of the bugs<font color="#E5E5E5"> used to break</font><font color="#CCCCCC"> iOS so</font>

183
00:07:31,919 --> 00:07:38,889
this guy Ian beer<font color="#E5E5E5"> from Google project</font>

184
00:07:35,199 --> 00:07:41,409
zero<font color="#CCCCCC"> tweeted in early December hey guys</font>

185
00:07:38,889 --> 00:07:45,009
keep your<font color="#E5E5E5"> device's locked on eleven one</font>

186
00:07:41,409 --> 00:07:47,560
two<font color="#E5E5E5"> now</font><font color="#CCCCCC"> as kind of contact nobody had</font>

187
00:07:45,009 --> 00:07:49,240
released that exploit<font color="#E5E5E5"> for</font><font color="#CCCCCC"> eleven like</font>

188
00:07:47,560 --> 00:07:51,219
this is this<font color="#E5E5E5"> is</font><font color="#CCCCCC"> new territory</font><font color="#E5E5E5"> there's a</font>

189
00:07:49,240 --> 00:07:53,020
lot of changes<font color="#CCCCCC"> from ten and it was kind</font>

190
00:07:51,219 --> 00:07:54,969
of a big deal at<font color="#CCCCCC"> the time</font>

191
00:07:53,020 --> 00:07:56,710
and then he<font color="#E5E5E5"> followed through on his</font>

192
00:07:54,969 --> 00:07:59,860
<font color="#E5E5E5">promise</font><font color="#CCCCCC"> a couple days</font><font color="#E5E5E5"> later and</font><font color="#CCCCCC"> he</font>

193
00:07:56,710 --> 00:08:05,409
<font color="#E5E5E5">released an exploit getting</font><font color="#CCCCCC"> tasks for</font>

194
00:07:59,860 --> 00:08:08,589
<font color="#CCCCCC">Pitt zero so what has tested at zero in</font>

195
00:08:05,409 --> 00:08:10,360
X<font color="#E5E5E5"> and</font><font color="#CCCCCC"> U</font><font color="#E5E5E5"> roof is not equal root so it's a</font>

196
00:08:08,589 --> 00:08:12,729
analytics<font color="#E5E5E5"> girl or in</font><font color="#CCCCCC"> Windows of your</font>

197
00:08:10,360 --> 00:08:16,210
system<font color="#CCCCCC"> you can talk to</font><font color="#E5E5E5"> Karl processes</font>

198
00:08:12,729 --> 00:08:19,330
you can't in X mu because there is

199
00:08:16,210 --> 00:08:22,870
layers<font color="#E5E5E5"> of protection against it Apple</font>

200
00:08:19,330 --> 00:08:24,940
kind of designed a lot of things away

201
00:08:22,870 --> 00:08:26,199
from<font color="#CCCCCC"> the user and to</font><font color="#E5E5E5"> try</font><font color="#CCCCCC"> and create</font><font color="#E5E5E5"> the</font>

202
00:08:24,940 --> 00:08:29,580
sandbox environment for their

203
00:08:26,199 --> 00:08:32,199
applications<font color="#E5E5E5"> so</font><font color="#CCCCCC"> what tasks for</font><font color="#E5E5E5"> pit does</font>

204
00:08:29,580 --> 00:08:34,360
<font color="#CCCCCC">if you all are familiar with like</font><font color="#E5E5E5"> key</font>

205
00:08:32,198 --> 00:08:36,039
<font color="#CCCCCC">trace</font><font color="#E5E5E5"> on Linux tasks for kids of</font>

206
00:08:34,360 --> 00:08:39,699
teaching introspection into<font color="#E5E5E5"> another</font>

207
00:08:36,039 --> 00:08:42,010
process<font color="#E5E5E5"> and so when we say</font><font color="#CCCCCC"> task for</font><font color="#E5E5E5"> pit</font>

208
00:08:39,698 --> 00:08:44,890
<font color="#CCCCCC">zero</font><font color="#E5E5E5"> we want</font><font color="#CCCCCC"> to talk about that kernel</font>

209
00:08:42,010 --> 00:08:46,510
task shown previously in that graph so

210
00:08:44,890 --> 00:08:48,339
that<font color="#E5E5E5"> lets us look into the kernel</font>

211
00:08:46,510 --> 00:08:50,980
structures and see what's going on<font color="#E5E5E5"> and</font>

212
00:08:48,339 --> 00:08:53,440
play<font color="#CCCCCC"> with those structures</font><font color="#E5E5E5"> and you can</font>

213
00:08:50,980 --> 00:08:57,940
do<font color="#E5E5E5"> anything but you</font><font color="#CCCCCC"> can</font><font color="#E5E5E5"> do crazy things</font>

214
00:08:53,440 --> 00:09:00,310
these mock p.m. star called<font color="#CCCCCC"> you can</font>

215
00:08:57,940 --> 00:09:03,760
write you<font color="#CCCCCC"> can create threads you can</font>

216
00:09:00,310 --> 00:09:06,369
<font color="#E5E5E5">create create memory spaces you can</font>

217
00:09:03,760 --> 00:09:08,439
remap<font color="#E5E5E5"> you can change all this stuff but</font>

218
00:09:06,370 --> 00:09:09,550
<font color="#E5E5E5">Apple knowing that yeah of course</font>

219
00:09:08,440 --> 00:09:12,100
jailbreakers are going to use this

220
00:09:09,550 --> 00:09:14,439
decided to say alright<font color="#CCCCCC"> you try</font><font color="#E5E5E5"> and get</font>

221
00:09:12,100 --> 00:09:15,910
at<font color="#CCCCCC"> at port</font><font color="#E5E5E5"> for the kernel no I'm not</font>

222
00:09:14,440 --> 00:09:19,660
going<font color="#E5E5E5"> to give it through which kind of</font>

223
00:09:15,910 --> 00:09:22,420
stuff<font color="#CCCCCC"> but the reason that</font><font color="#E5E5E5"> task for kid</font>

224
00:09:19,660 --> 00:09:25,089
<font color="#E5E5E5">in the context of jailbreaking is better</font>

225
00:09:22,420 --> 00:09:27,880
than kernel code execution is because of

226
00:09:25,090 --> 00:09:31,360
the hardware<font color="#E5E5E5"> built-in protections on the</font>

227
00:09:27,880 --> 00:09:32,740
device<font color="#CCCCCC"> okay</font><font color="#E5E5E5"> so an arm which all your</font>

228
00:09:31,360 --> 00:09:36,070
<font color="#E5E5E5">iPhones are running or either running</font>

229
00:09:32,740 --> 00:09:37,540
32-bit or 64-bit<font color="#CCCCCC"> you have four execution</font>

230
00:09:36,070 --> 00:09:41,500
<font color="#E5E5E5">mode which are which are analogous</font><font color="#CCCCCC"> to</font>

231
00:09:37,540 --> 00:09:44,560
like x86 rings<font color="#CCCCCC"> privilege</font><font color="#E5E5E5"> right so</font>

232
00:09:41,500 --> 00:09:48,100
everything<font color="#E5E5E5"> in user land runs in ring</font>

233
00:09:44,560 --> 00:09:51,099
<font color="#CCCCCC">zero the kernel code runs in exception</font>

234
00:09:48,100 --> 00:09:53,140
level one<font color="#CCCCCC"> they don't real use exception</font>

235
00:09:51,100 --> 00:09:56,530
level two<font color="#E5E5E5"> or that that's dope or</font>

236
00:09:53,140 --> 00:09:57,580
hypervisors<font color="#E5E5E5"> I've I haven't really seen</font>

237
00:09:56,530 --> 00:09:59,770
people use<font color="#CCCCCC"> el2</font>

238
00:09:57,580 --> 00:10:03,190
<font color="#E5E5E5">but it'd</font><font color="#CCCCCC"> be interesting to</font><font color="#E5E5E5"> see and then</font>

239
00:09:59,770 --> 00:10:05,439
they have this this<font color="#E5E5E5"> process in l3 called</font>

240
00:10:03,190 --> 00:10:07,240
<font color="#CCCCCC">Watchtower</font><font color="#E5E5E5"> right and this is your kernel</font>

241
00:10:05,440 --> 00:10:09,370
patch protection it goes through memory

242
00:10:07,240 --> 00:10:12,730
and it hashes every single page of

243
00:10:09,370 --> 00:10:14,410
<font color="#E5E5E5">memory in side of</font><font color="#CCCCCC"> l1 the kernel state</font>

244
00:10:12,730 --> 00:10:16,810
and then compares it to see if it's<font color="#E5E5E5"> been</font>

245
00:10:14,410 --> 00:10:21,579
modified<font color="#E5E5E5"> if it is it boards the kernel</font>

246
00:10:16,810 --> 00:10:22,959
everything goes down so that's why we

247
00:10:21,580 --> 00:10:25,140
want<font color="#CCCCCC"> tasked with heads here we</font><font color="#E5E5E5"> don't</font>

248
00:10:22,960 --> 00:10:28,660
necessarily<font color="#CCCCCC"> want kernel code execution</font>

249
00:10:25,140 --> 00:10:29,170
<font color="#E5E5E5">so when Ian dear released the set of</font>

250
00:10:28,660 --> 00:10:32,650
bugs

251
00:10:29,170 --> 00:10:35,319
<font color="#CCCCCC">he</font><font color="#E5E5E5"> even labeled them async</font><font color="#CCCCCC"> wake because</font>

252
00:10:32,650 --> 00:10:37,569
they were part of the<font color="#E5E5E5"> i/o</font><font color="#CCCCCC"> kid derivative</font>

253
00:10:35,320 --> 00:10:39,220
library and there were two bugs they

254
00:10:37,570 --> 00:10:40,780
<font color="#CCCCCC">release and</font><font color="#E5E5E5"> informational</font><font color="#CCCCCC"> e in the</font>

255
00:10:39,220 --> 00:10:43,210
kernel<font color="#E5E5E5"> and then I use that</font><font color="#CCCCCC"> for free and</font>

256
00:10:40,780 --> 00:10:45,730
<font color="#CCCCCC">then he</font><font color="#E5E5E5"> kind of nicely wrapped them up</font>

257
00:10:43,210 --> 00:10:49,930
into<font color="#E5E5E5"> the next point sharing for us the</font>

258
00:10:45,730 --> 00:10:53,770
information<font color="#CCCCCC"> leak is needed because the</font>

259
00:10:49,930 --> 00:10:55,150
kernel upon boot has nine bits of random

260
00:10:53,770 --> 00:10:57,069
entropy and<font color="#E5E5E5"> where it's loaded into</font>

261
00:10:55,150 --> 00:11:00,130
memory<font color="#CCCCCC"> on Linux I think this is twelve</font>

262
00:10:57,070 --> 00:11:03,010
<font color="#CCCCCC">on Windows horse I'm I I'm guessing at</font>

263
00:11:00,130 --> 00:11:06,310
<font color="#CCCCCC">fourteen</font><font color="#E5E5E5"> but so it's kernel address</font>

264
00:11:03,010 --> 00:11:07,269
<font color="#E5E5E5">space randomization you can't rely on</font>

265
00:11:06,310 --> 00:11:09,579
rock gadgets

266
00:11:07,269 --> 00:11:10,929
can't rely on other data structures

267
00:11:09,579 --> 00:11:15,219
<font color="#E5E5E5">being present if you don't have an</font>

268
00:11:10,929 --> 00:11:16,119
information<font color="#CCCCCC"> wait</font><font color="#E5E5E5"> and so hopefully now I</font>

269
00:11:15,220 --> 00:11:19,089
can't read that

270
00:11:16,119 --> 00:11:23,439
<font color="#E5E5E5">okay I will</font><font color="#CCCCCC"> talk</font><font color="#E5E5E5"> through the information</font>

271
00:11:19,089 --> 00:11:26,889
<font color="#E5E5E5">like he discovered is part of a function</font>

272
00:11:23,439 --> 00:11:29,259
called called<font color="#CCCCCC"> rocking po</font><font color="#E5E5E5"> now prop info</font>

273
00:11:26,889 --> 00:11:30,910
just gives you your<font color="#CCCCCC"> prophets info or if</font>

274
00:11:29,259 --> 00:11:33,459
your<font color="#E5E5E5"> route it gives you other processes</font>

275
00:11:30,910 --> 00:11:34,899
info he found a bug and where you can

276
00:11:33,459 --> 00:11:36,569
<font color="#E5E5E5">supply the list of pointers and will</font>

277
00:11:34,899 --> 00:11:41,709
tell you<font color="#E5E5E5"> if those corners are inside of</font>

278
00:11:36,569 --> 00:11:45,339
the space<font color="#E5E5E5"> okay so inside</font><font color="#CCCCCC"> of this</font>

279
00:11:41,709 --> 00:11:47,018
function<font color="#CCCCCC"> they do</font><font color="#E5E5E5"> this division down with</font>

280
00:11:45,339 --> 00:11:49,749
integer division and then they

281
00:11:47,019 --> 00:11:52,240
repopulated and then all of a sudden<font color="#E5E5E5"> if</font>

282
00:11:49,749 --> 00:11:55,329
you can bypass<font color="#CCCCCC"> apple's protections</font><font color="#E5E5E5"> down</font>

283
00:11:52,240 --> 00:11:58,480
by the bottom<font color="#E5E5E5"> it'll copy out your buffer</font>

284
00:11:55,329 --> 00:12:00,519
to user mode<font color="#CCCCCC"> and i guess the</font><font color="#E5E5E5"> the exploit</font>

285
00:11:58,480 --> 00:12:02,529
<font color="#CCCCCC">at the easiest way i've seen</font><font color="#E5E5E5"> this</font><font color="#CCCCCC"> here</font>

286
00:12:00,519 --> 00:12:06,399
<font color="#CCCCCC">is</font><font color="#E5E5E5"> the information getting leaked out</font>

287
00:12:02,529 --> 00:12:08,709
right here<font color="#E5E5E5"> that</font><font color="#CCCCCC"> +7 so when you request</font>

288
00:12:06,399 --> 00:12:12,699
this information<font color="#E5E5E5"> and you</font><font color="#CCCCCC"> don't give it a</font>

289
00:12:08,709 --> 00:12:16,599
full pointer size which in 64-bit<font color="#E5E5E5"> is a</font>

290
00:12:12,699 --> 00:12:18,790
<font color="#CCCCCC">keyword</font><font color="#E5E5E5"> so</font><font color="#CCCCCC"> 8 bytes</font><font color="#E5E5E5"> you</font><font color="#CCCCCC"> give it a 5 plus</font>

291
00:12:16,600 --> 00:12:20,649
<font color="#CCCCCC">7</font><font color="#E5E5E5"> all of a sudden it'll give you the</font>

292
00:12:18,790 --> 00:12:22,990
<font color="#E5E5E5">extra 7 fight and then you have a 7 byte</font>

293
00:12:20,649 --> 00:12:25,959
information<font color="#E5E5E5"> leak now he wrapped it up in</font>

294
00:12:22,990 --> 00:12:27,790
a function and then<font color="#E5E5E5"> rented over the top</font>

295
00:12:25,959 --> 00:12:29,949
100<font color="#CCCCCC"> process fee I think like a thousand</font>

296
00:12:27,790 --> 00:12:32,139
times<font color="#CCCCCC"> and did some statistical analysis</font>

297
00:12:29,949 --> 00:12:34,059
determined<font color="#CCCCCC"> ok what's the most popular</font>

298
00:12:32,139 --> 00:12:36,100
kernel pointer<font color="#E5E5E5"> that's coming back</font>

299
00:12:34,059 --> 00:12:38,469
<font color="#E5E5E5">because you can see all kernel pointers</font>

300
00:12:36,100 --> 00:12:40,889
begin with that<font color="#CCCCCC"> zero zero I thought that</font>

301
00:12:38,470 --> 00:12:43,569
<font color="#E5E5E5">Pepa and then</font><font color="#CCCCCC"> eight</font><font color="#E5E5E5"> and then after that</font>

302
00:12:40,889 --> 00:12:46,540
you<font color="#CCCCCC"> can derive the kernel slide where</font>

303
00:12:43,569 --> 00:12:49,509
<font color="#CCCCCC">the</font><font color="#E5E5E5"> kernel lies in memory</font><font color="#CCCCCC"> okay bug</font>

304
00:12:46,540 --> 00:12:52,360
<font color="#E5E5E5">number one bug number two is kind</font><font color="#CCCCCC"> of a</font>

305
00:12:49,509 --> 00:12:55,420
systemic bug<font color="#E5E5E5"> due to the mock interface</font>

306
00:12:52,360 --> 00:12:59,259
generator<font color="#E5E5E5"> now there's kind of a history</font>

307
00:12:55,420 --> 00:13:01,149
<font color="#CCCCCC">behind this</font><font color="#E5E5E5"> Apple goes and creates all</font>

308
00:12:59,259 --> 00:13:05,439
these extra layers upon layers and

309
00:13:01,149 --> 00:13:08,619
layers they don't<font color="#E5E5E5"> really have the single</font>

310
00:13:05,439 --> 00:13:10,230
point<font color="#E5E5E5"> of history that say like the Linux</font>

311
00:13:08,619 --> 00:13:13,809
<font color="#E5E5E5">kernel has where like one or two people</font>

312
00:13:10,230 --> 00:13:15,639
<font color="#E5E5E5">know from the very beginning what every</font>

313
00:13:13,809 --> 00:13:16,809
<font color="#E5E5E5">single thing does so they're kidding</font>

314
00:13:15,639 --> 00:13:20,019
<font color="#E5E5E5">it's kind of like institutional</font>

315
00:13:16,809 --> 00:13:21,130
knowledge<font color="#CCCCCC"> so they have these big</font>

316
00:13:20,019 --> 00:13:23,080
generators

317
00:13:21,130 --> 00:13:26,050
that it's a bunch of<font color="#E5E5E5"> C code that's right</font>

318
00:13:23,080 --> 00:13:28,630
more<font color="#E5E5E5"> C</font><font color="#CCCCCC"> codes</font><font color="#E5E5E5"> so yes there</font><font color="#CCCCCC"> are bugs here</font>

319
00:13:26,050 --> 00:13:30,550
there are a ton of bugs<font color="#E5E5E5"> here and this</font>

320
00:13:28,630 --> 00:13:33,670
<font color="#CCCCCC">specific bug lies in the Iowa surface</font>

321
00:13:30,550 --> 00:13:36,449
user client<font color="#E5E5E5"> and</font><font color="#CCCCCC"> Ian's beer</font><font color="#E5E5E5"> talked about</font>

322
00:13:33,670 --> 00:13:41,110
this in his brief history of<font color="#E5E5E5"> mitigation</font>

323
00:13:36,450 --> 00:13:44,850
<font color="#CCCCCC">the path</font><font color="#E5E5E5"> to</font><font color="#CCCCCC"> l1 in</font><font color="#E5E5E5"> iOS 11 and it's it's a</font>

324
00:13:41,110 --> 00:13:47,260
<font color="#CCCCCC">combination of there are predefined</font>

325
00:13:44,850 --> 00:13:49,840
requirements for this<font color="#CCCCCC"> nig interface if</font>

326
00:13:47,260 --> 00:13:51,550
you say hey I am<font color="#E5E5E5"> going to run</font><font color="#CCCCCC"> a function</font>

327
00:13:49,840 --> 00:13:53,260
<font color="#E5E5E5">and it returns an error you're</font>

328
00:13:51,550 --> 00:13:55,060
<font color="#CCCCCC">responsible for</font><font color="#E5E5E5"> cleaning up</font><font color="#CCCCCC"> the memory</font>

329
00:13:53,260 --> 00:13:57,580
<font color="#E5E5E5">if it doesn't return an error</font><font color="#CCCCCC"> that</font>

330
00:13:55,060 --> 00:13:59,739
<font color="#CCCCCC">kernel takes care of</font><font color="#E5E5E5"> it and so the bug</font>

331
00:13:57,580 --> 00:14:01,630
here is that<font color="#CCCCCC"> IO</font><font color="#E5E5E5"> surface user client</font>

332
00:13:59,740 --> 00:14:05,350
<font color="#CCCCCC">doesn't properly</font><font color="#E5E5E5"> clean up its memory</font>

333
00:14:01,630 --> 00:14:07,300
after<font color="#CCCCCC"> e hey it receives an error so the</font>

334
00:14:05,350 --> 00:14:07,960
exploit code for this<font color="#E5E5E5"> is</font><font color="#CCCCCC"> just to run it</font>

335
00:14:07,300 --> 00:14:09,849
three times

336
00:14:07,960 --> 00:14:13,620
little<font color="#CCCCCC"> bork</font><font color="#E5E5E5"> and then you have a floating</font>

337
00:14:09,850 --> 00:14:16,060
<font color="#E5E5E5">task port in memory</font><font color="#CCCCCC"> in</font><font color="#E5E5E5"> kernel memory so</font>

338
00:14:13,620 --> 00:14:24,160
pretty cool the pretty pretty

339
00:14:16,060 --> 00:14:26,020
interesting<font color="#E5E5E5"> bug okay so this is kind</font><font color="#CCCCCC"> of</font>

340
00:14:24,160 --> 00:14:28,209
the exploit food that he's come out<font color="#E5E5E5"> of</font>

341
00:14:26,020 --> 00:14:30,760
this<font color="#E5E5E5"> I don't necessarily think when you</font>

342
00:14:28,210 --> 00:14:33,160
put the deep dive into this because as

343
00:14:30,760 --> 00:14:35,350
has<font color="#CCCCCC"> jailbreakers we're looking at this</font><font color="#E5E5E5"> I</font>

344
00:14:33,160 --> 00:14:37,990
<font color="#E5E5E5">was like oh this is</font><font color="#CCCCCC"> a Lego block I</font><font color="#E5E5E5"> can</font>

345
00:14:35,350 --> 00:14:40,750
build on<font color="#CCCCCC"> I can build on</font><font color="#E5E5E5"> this primitive</font>

346
00:14:37,990 --> 00:14:42,760
<font color="#E5E5E5">that gives me this task for pit</font><font color="#CCCCCC"> 0</font><font color="#E5E5E5"> but as</font>

347
00:14:40,750 --> 00:14:47,670
you<font color="#E5E5E5"> can</font><font color="#CCCCCC"> see he does a lot</font><font color="#E5E5E5"> of heat from</font>

348
00:14:42,760 --> 00:14:47,670
<font color="#E5E5E5">shui he builds out a fake</font>

349
00:14:47,820 --> 00:14:53,560
he built out a pig kernel passport and

350
00:14:50,560 --> 00:14:54,849
sprays that across memory<font color="#E5E5E5"> using his use</font>

351
00:14:53,560 --> 00:14:57,969
after free and then all of a sudden<font color="#CCCCCC"> we</font>

352
00:14:54,850 --> 00:15:00,480
have a task for kids ero which is now

353
00:14:57,970 --> 00:15:04,990
<font color="#CCCCCC">all</font><font color="#E5E5E5"> right we can access the kernel yay</font>

354
00:15:00,480 --> 00:15:08,920
so I ran the<font color="#E5E5E5"> exploit and it was super</font>

355
00:15:04,990 --> 00:15:10,720
<font color="#CCCCCC">exciting absolutely blank screen</font><font color="#E5E5E5"> but if</font>

356
00:15:08,920 --> 00:15:13,689
you look at the Xcode and<font color="#E5E5E5"> the console</font>

357
00:15:10,720 --> 00:15:15,100
debug output<font color="#E5E5E5"> you'll see it starts to you</font>

358
00:15:13,690 --> 00:15:16,480
<font color="#CCCCCC">know has some information</font><font color="#E5E5E5"> and then all</font>

359
00:15:15,100 --> 00:15:18,970
these numbers start to increment down

360
00:15:16,480 --> 00:15:20,110
then you hit 199<font color="#E5E5E5"> and then some more</font>

361
00:15:18,970 --> 00:15:23,020
<font color="#E5E5E5">information and then all of a sudden</font>

362
00:15:20,110 --> 00:15:26,410
<font color="#E5E5E5">boom we have this ability to talk to the</font>

363
00:15:23,020 --> 00:15:28,870
<font color="#CCCCCC">final pointer or to start to the we were</font>

364
00:15:26,410 --> 00:15:30,730
able<font color="#CCCCCC"> to have a task port to talk to the</font>

365
00:15:28,870 --> 00:15:32,800
colonel yay

366
00:15:30,730 --> 00:15:35,140
all right so now with this<font color="#E5E5E5"> in mind let's</font>

367
00:15:32,800 --> 00:15:42,609
<font color="#CCCCCC">go ahead and jailbreak</font>

368
00:15:35,140 --> 00:15:46,449
the system<font color="#E5E5E5"> okay so</font><font color="#CCCCCC"> this</font><font color="#E5E5E5"> this terrible</font>

369
00:15:42,610 --> 00:15:48,910
graph was maybe<font color="#CCCCCC"> 12 days in or 11 days in</font>

370
00:15:46,450 --> 00:15:50,620
when I got really<font color="#E5E5E5"> really desperate</font><font color="#CCCCCC"> and I</font>

371
00:15:48,910 --> 00:15:52,029
couldn't<font color="#E5E5E5"> figure out how to do one</font><font color="#CCCCCC"> of</font><font color="#E5E5E5"> the</font>

372
00:15:50,620 --> 00:15:56,230
<font color="#E5E5E5">things and so I'll go into</font><font color="#CCCCCC"> that later</font>

373
00:15:52,029 --> 00:15:57,939
<font color="#E5E5E5">but we have a couple</font><font color="#CCCCCC"> things that</font><font color="#E5E5E5"> we have</font>

374
00:15:56,230 --> 00:16:00,370
to do to hit our original prerequisites

375
00:15:57,940 --> 00:16:02,709
<font color="#E5E5E5">right we want to get</font><font color="#CCCCCC"> route we have to</font>

376
00:16:00,370 --> 00:16:06,100
bypass<font color="#E5E5E5"> as many sandbox limitations as</font>

377
00:16:02,709 --> 00:16:08,589
feasible<font color="#CCCCCC"> we have to turn the hard drive</font>

378
00:16:06,100 --> 00:16:10,300
<font color="#CCCCCC">on as</font><font color="#E5E5E5"> read</font><font color="#CCCCCC"> write so we have full</font><font color="#E5E5E5"> control</font>

379
00:16:08,589 --> 00:16:12,130
<font color="#E5E5E5">over that because</font><font color="#CCCCCC"> normally it comes just</font>

380
00:16:10,300 --> 00:16:15,579
read only and<font color="#E5E5E5"> that's</font><font color="#CCCCCC"> apples way of</font>

381
00:16:12,130 --> 00:16:18,820
protecting it against just rogue apps

382
00:16:15,579 --> 00:16:20,979
that somehow<font color="#E5E5E5"> break out</font><font color="#CCCCCC"> then there is</font>

383
00:16:18,820 --> 00:16:24,760
this this<font color="#E5E5E5"> idea called</font><font color="#CCCCCC"> platformer ization</font>

384
00:16:20,980 --> 00:16:26,740
<font color="#E5E5E5">right platform ization is</font><font color="#CCCCCC"> a flag in</font>

385
00:16:24,760 --> 00:16:29,829
memory saying hey<font color="#CCCCCC"> i'm an apple binary I</font>

386
00:16:26,740 --> 00:16:33,370
can do what I want<font color="#CCCCCC"> and</font><font color="#E5E5E5"> that really helps</font>

387
00:16:29,829 --> 00:16:36,579
us accomplish our goals<font color="#CCCCCC"> in getting full</font>

388
00:16:33,370 --> 00:16:39,459
control over<font color="#CCCCCC"> the system and then adding</font>

389
00:16:36,579 --> 00:16:42,520
<font color="#CCCCCC">entitlements entitlements are a series</font>

390
00:16:39,459 --> 00:16:45,069
of<font color="#E5E5E5"> permissions that</font><font color="#CCCCCC"> are</font><font color="#E5E5E5"> defined and</font>

391
00:16:42,520 --> 00:16:46,899
signed by Apple and<font color="#E5E5E5"> as we go through</font>

392
00:16:45,070 --> 00:16:50,260
<font color="#CCCCCC">later and we see all the signing</font><font color="#E5E5E5"> stuff</font>

393
00:16:46,899 --> 00:16:52,480
everything Apple gives out has a

394
00:16:50,260 --> 00:16:54,490
<font color="#E5E5E5">privilege so</font><font color="#CCCCCC"> if</font><font color="#E5E5E5"> you as a developer you</font>

395
00:16:52,480 --> 00:16:56,050
get certain privileges<font color="#E5E5E5"> Apple get certain</font>

396
00:16:54,490 --> 00:16:58,140
privileges<font color="#E5E5E5"> enterprises get certain</font>

397
00:16:56,050 --> 00:17:01,390
privileges<font color="#CCCCCC"> and you can't go above that</font><font color="#E5E5E5"> I</font>

398
00:16:58,140 --> 00:17:03,520
want to give myself<font color="#E5E5E5"> the ability to get</font>

399
00:17:01,390 --> 00:17:05,439
crazy entitlement but<font color="#E5E5E5"> I can't because my</font>

400
00:17:03,520 --> 00:17:07,209
certificate chain shows<font color="#E5E5E5"> that I</font><font color="#CCCCCC"> am not</font>

401
00:17:05,439 --> 00:17:09,819
entitled<font color="#CCCCCC"> to do this so we</font><font color="#E5E5E5"> need to bypass</font>

402
00:17:07,209 --> 00:17:11,679
<font color="#E5E5E5">that so let's let's</font><font color="#CCCCCC"> start the beginning</font>

403
00:17:09,819 --> 00:17:14,438
<font color="#E5E5E5">and break it down</font><font color="#CCCCCC"> since</font><font color="#E5E5E5"> but it looks</font>

404
00:17:11,679 --> 00:17:18,970
<font color="#E5E5E5">really complicated we'll break it down</font>

405
00:17:14,439 --> 00:17:20,770
so getting<font color="#E5E5E5"> rube is super analogous to</font>

406
00:17:18,970 --> 00:17:23,079
<font color="#E5E5E5">token stealing on Windows Windows</font>

407
00:17:20,770 --> 00:17:25,809
iterate through the processes and grab

408
00:17:23,079 --> 00:17:27,790
the credentials out of the e process

409
00:17:25,809 --> 00:17:30,250
<font color="#E5E5E5">struck in process for</font><font color="#CCCCCC"> which</font><font color="#E5E5E5"> the system</font>

410
00:17:27,790 --> 00:17:32,590
you do the same thing<font color="#E5E5E5"> we just look for</font>

411
00:17:30,250 --> 00:17:36,640
the kernel<font color="#CCCCCC"> task</font><font color="#E5E5E5"> and then we copy</font><font color="#CCCCCC"> their</font>

412
00:17:32,590 --> 00:17:39,790
credential cleaner<font color="#CCCCCC"> or root so</font><font color="#E5E5E5"> you think</font>

413
00:17:36,640 --> 00:17:41,740
<font color="#E5E5E5">okay</font><font color="#CCCCCC"> this</font><font color="#E5E5E5"> is Kyle</font><font color="#CCCCCC"> Bob Lee goop let's</font>

414
00:17:39,790 --> 00:17:45,250
look at<font color="#CCCCCC"> Apple sources Apple released</font>

415
00:17:41,740 --> 00:17:49,120
their sources<font color="#E5E5E5"> and inside</font><font color="#CCCCCC"> of the the</font>

416
00:17:45,250 --> 00:17:50,920
process<font color="#E5E5E5"> headers for how they</font>

417
00:17:49,120 --> 00:17:53,919
<font color="#CCCCCC">we're processes in the kernel</font><font color="#E5E5E5"> you can</font>

418
00:17:50,920 --> 00:17:56,230
see all right<font color="#E5E5E5"> we have a struck proc</font><font color="#CCCCCC"> R we</font>

419
00:17:53,920 --> 00:17:59,470
have<font color="#CCCCCC"> a linked</font><font color="#E5E5E5"> list at the</font><font color="#CCCCCC"> top and then</font>

420
00:17:56,230 --> 00:18:01,900
we have our<font color="#CCCCCC"> process ID</font><font color="#E5E5E5"> okay</font><font color="#CCCCCC"> okay this is</font>

421
00:17:59,470 --> 00:18:05,170
<font color="#E5E5E5">pretty easy</font><font color="#CCCCCC"> to follow we have our user</font>

422
00:18:01,900 --> 00:18:07,030
permissions or UID<font color="#CCCCCC"> or GE and our UID</font><font color="#E5E5E5"> and</font>

423
00:18:05,170 --> 00:18:10,540
then down at<font color="#E5E5E5"> the</font><font color="#CCCCCC"> bottom we've got</font><font color="#E5E5E5"> our</font>

424
00:18:07,030 --> 00:18:13,899
our credential structure so it's as

425
00:18:10,540 --> 00:18:16,690
simple<font color="#E5E5E5"> as setting our art permissions to</font>

426
00:18:13,900 --> 00:18:20,850
<font color="#E5E5E5">zero the root user and then we just copy</font>

427
00:18:16,690 --> 00:18:23,380
the credential pointer<font color="#CCCCCC"> out of the</font>

428
00:18:20,850 --> 00:18:25,480
process the kernel task process<font color="#E5E5E5"> and we</font>

429
00:18:23,380 --> 00:18:27,490
copied into ours and this is kind of

430
00:18:25,480 --> 00:18:28,990
analogous with these<font color="#E5E5E5"> these</font><font color="#CCCCCC"> two lines</font>

431
00:18:27,490 --> 00:18:32,620
right<font color="#CCCCCC"> here and these aren't kind</font><font color="#E5E5E5"> of just</font>

432
00:18:28,990 --> 00:18:34,600
for posterity<font color="#E5E5E5"> and later for further</font>

433
00:18:32,620 --> 00:18:36,570
<font color="#CCCCCC">inspection</font><font color="#E5E5E5"> so that's all we need</font><font color="#CCCCCC"> to do</font>

434
00:18:34,600 --> 00:18:39,669
to get<font color="#CCCCCC"> root but like I</font><font color="#E5E5E5"> said previously</font>

435
00:18:36,570 --> 00:18:40,809
<font color="#CCCCCC">root on X and me with not root so</font>

436
00:18:39,670 --> 00:18:41,980
there's there's other sandbox

437
00:18:40,809 --> 00:18:48,760
limitations that we have<font color="#E5E5E5"> to start by</font>

438
00:18:41,980 --> 00:18:49,780
passing so we in creation of pages of

439
00:18:48,760 --> 00:18:52,809
memories there<font color="#E5E5E5"> are certain restrictions</font>

440
00:18:49,780 --> 00:18:55,780
<font color="#E5E5E5">applied that Apple</font><font color="#CCCCCC"> uses as a competitive</font>

441
00:18:52,809 --> 00:18:58,030
advantage<font color="#E5E5E5"> okay so the</font><font color="#CCCCCC"> ability to create</font>

442
00:18:55,780 --> 00:19:02,399
a read write and execute<font color="#CCCCCC"> cheat the very</font>

443
00:18:58,030 --> 00:19:05,050
or page is very important to

444
00:19:02,400 --> 00:19:06,250
<font color="#E5E5E5">high-performance thinks so think</font><font color="#CCCCCC"> chrome</font>

445
00:19:05,050 --> 00:19:08,530
<font color="#CCCCCC">drink Firefox</font>

446
00:19:06,250 --> 00:19:11,050
thanks Safari they have jet engine that

447
00:19:08,530 --> 00:19:13,510
<font color="#E5E5E5">turns JavaScript into native assembly</font>

448
00:19:11,050 --> 00:19:15,490
and run that this is how Apple<font color="#CCCCCC"> keeps</font><font color="#E5E5E5"> our</font>

449
00:19:13,510 --> 00:19:18,340
competitive advantage in their browsers

450
00:19:15,490 --> 00:19:21,280
they don't allow anyone else except for

451
00:19:18,340 --> 00:19:23,399
<font color="#E5E5E5">Safari have rewrite X key pages so that</font>

452
00:19:21,280 --> 00:19:25,120
<font color="#E5E5E5">everyone's else's browser runs Chloe</font>

453
00:19:23,400 --> 00:19:29,559
don't<font color="#E5E5E5"> ask me why</font>

454
00:19:25,120 --> 00:19:31,080
so as I mentioned previously<font color="#E5E5E5"> the root</font>

455
00:19:29,559 --> 00:19:33,820
directory<font color="#CCCCCC"> of method is read-only</font>

456
00:19:31,080 --> 00:19:35,530
<font color="#E5E5E5">binaries can only be run in certain</font>

457
00:19:33,820 --> 00:19:36,610
directories<font color="#CCCCCC"> you are not allowed to</font><font color="#E5E5E5"> run</font>

458
00:19:35,530 --> 00:19:38,740
in<font color="#CCCCCC"> temp</font>

459
00:19:36,610 --> 00:19:41,559
there's several policies in place on the

460
00:19:38,740 --> 00:19:44,200
system that<font color="#CCCCCC"> look as you perform</font><font color="#E5E5E5"> an exe</font>

461
00:19:41,559 --> 00:19:46,170
CV<font color="#E5E5E5"> and they say no you're coming</font><font color="#CCCCCC"> from a</font>

462
00:19:44,200 --> 00:19:49,929
bad place<font color="#CCCCCC"> I'm not gonna let you</font><font color="#E5E5E5"> run</font>

463
00:19:46,170 --> 00:19:52,420
<font color="#CCCCCC">catch our entitlements are bad we're</font><font color="#E5E5E5"> not</font>

464
00:19:49,929 --> 00:19:54,520
a platform<font color="#CCCCCC"> binary</font><font color="#E5E5E5"> and as of right now</font>

465
00:19:52,420 --> 00:19:55,900
<font color="#E5E5E5">you need to develop your certificate to</font>

466
00:19:54,520 --> 00:19:57,639
properly<font color="#E5E5E5"> sign code to run</font><font color="#CCCCCC"> on the device</font>

467
00:19:55,900 --> 00:20:00,670
<font color="#CCCCCC">but we don't want</font><font color="#E5E5E5"> that we want to run</font>

468
00:19:57,640 --> 00:20:02,980
<font color="#E5E5E5">anything so let's go ahead and remount</font>

469
00:20:00,670 --> 00:20:05,080
<font color="#E5E5E5">the Thrive and it's as simple as</font>

470
00:20:02,980 --> 00:20:06,970
this but it's almost as simple<font color="#E5E5E5"> as</font><font color="#CCCCCC"> that</font>

471
00:20:05,080 --> 00:20:09,909
<font color="#E5E5E5">what we're doing is we're</font><font color="#CCCCCC"> just doing a</font>

472
00:20:06,970 --> 00:20:13,240
<font color="#CCCCCC">mount update type Apple file system to</font>

473
00:20:09,910 --> 00:20:15,250
the roof drive<font color="#E5E5E5"> and we're going now the</font>

474
00:20:13,240 --> 00:20:16,840
reason<font color="#CCCCCC"> that</font><font color="#E5E5E5"> this didn't work initially</font>

475
00:20:15,250 --> 00:20:19,960
and I was ripping my hair out going<font color="#E5E5E5"> like</font>

476
00:20:16,840 --> 00:20:23,470
what if this<font color="#E5E5E5"> should work was because of</font>

477
00:20:19,960 --> 00:20:25,270
these<font color="#E5E5E5"> flat so when the root plot the</font>

478
00:20:23,470 --> 00:20:27,760
root<font color="#E5E5E5"> file system identified upon boot</font>

479
00:20:25,270 --> 00:20:29,830
these flags are applied<font color="#CCCCCC"> to it and it's</font>

480
00:20:27,760 --> 00:20:31,600
<font color="#CCCCCC">it's V node structure</font><font color="#E5E5E5"> and we'll get into</font>

481
00:20:29,830 --> 00:20:35,918
that<font color="#E5E5E5"> in a minute but it's defined as</font>

482
00:20:31,600 --> 00:20:38,860
<font color="#E5E5E5">read-only and then it's a root</font>

483
00:20:35,919 --> 00:20:41,080
filesystem<font color="#E5E5E5"> so those flags put together</font>

484
00:20:38,860 --> 00:20:44,889
when<font color="#CCCCCC"> it first mounted say nope this</font><font color="#E5E5E5"> can</font>

485
00:20:41,080 --> 00:20:48,460
never be read right this is<font color="#CCCCCC"> read-only so</font>

486
00:20:44,890 --> 00:20:51,610
I ran around online<font color="#CCCCCC"> and I found somebody</font>

487
00:20:48,460 --> 00:20:54,910
who had an<font color="#E5E5E5"> idea let's swap those flags</font>

488
00:20:51,610 --> 00:20:56,229
out<font color="#E5E5E5"> let's remount it and then we go so</font>

489
00:20:54,910 --> 00:20:58,450
it's<font color="#E5E5E5"> actually pretty</font><font color="#CCCCCC"> easy</font><font color="#E5E5E5"> it's</font><font color="#CCCCCC"> pretty</font>

490
00:20:56,230 --> 00:21:00,850
easy<font color="#CCCCCC"> we we looked at the kernel</font>

491
00:20:58,450 --> 00:21:03,280
structures<font color="#E5E5E5"> and there is a master be note</font>

492
00:21:00,850 --> 00:21:05,530
and the<font color="#E5E5E5"> V node is just</font><font color="#CCCCCC"> a type</font><font color="#E5E5E5"> it's a</font>

493
00:21:03,280 --> 00:21:07,389
data type<font color="#CCCCCC"> I just</font><font color="#E5E5E5"> think of it that</font><font color="#CCCCCC"> way</font>

494
00:21:05,530 --> 00:21:11,860
it's the easy way<font color="#E5E5E5"> of</font><font color="#CCCCCC"> saying here I have</font>

495
00:21:07,390 --> 00:21:13,570
a file I have<font color="#E5E5E5"> thrive</font><font color="#CCCCCC"> what happened so we</font>

496
00:21:11,860 --> 00:21:14,979
looked at<font color="#E5E5E5"> the master</font><font color="#CCCCCC"> be</font><font color="#E5E5E5"> note inside of</font>

497
00:21:13,570 --> 00:21:17,470
the kernel and<font color="#E5E5E5"> then we look in the</font>

498
00:21:14,980 --> 00:21:19,990
structure and<font color="#E5E5E5"> I do apologize for the</font>

499
00:21:17,470 --> 00:21:22,299
<font color="#CCCCCC">tiny text but there is melt</font><font color="#E5E5E5"> at the very</font>

500
00:21:19,990 --> 00:21:25,360
bottom<font color="#CCCCCC"> and where that mount points feel</font>

501
00:21:22,299 --> 00:21:28,179
<font color="#E5E5E5">you have a</font><font color="#CCCCCC"> flat</font><font color="#E5E5E5"> so great now we know all</font>

502
00:21:25,360 --> 00:21:29,860
<font color="#CCCCCC">right if we change the structure all</font><font color="#E5E5E5"> of</font>

503
00:21:28,179 --> 00:21:33,309
a sudden and then<font color="#E5E5E5"> we remount</font><font color="#CCCCCC"> it will get</font>

504
00:21:29,860 --> 00:21:35,918
root or will get a rewrite officer<font color="#E5E5E5"> and</font>

505
00:21:33,309 --> 00:21:37,809
that's<font color="#E5E5E5"> essentially what we do the the</font>

506
00:21:35,919 --> 00:21:42,370
code above does parsing into the kernel

507
00:21:37,809 --> 00:21:45,250
<font color="#CCCCCC">and if you look at the</font><font color="#E5E5E5"> shell break I've</font>

508
00:21:42,370 --> 00:21:47,290
put on github this is why it only<font color="#E5E5E5"> works</font>

509
00:21:45,250 --> 00:21:49,870
for a certain<font color="#E5E5E5"> type of</font><font color="#CCCCCC"> pound because I've</font>

510
00:21:47,290 --> 00:21:53,049
<font color="#CCCCCC">hard coded</font><font color="#E5E5E5"> the Ruby note address but</font>

511
00:21:49,870 --> 00:21:54,820
that aside<font color="#CCCCCC"> all we are</font><font color="#E5E5E5"> doing is we're</font>

512
00:21:53,049 --> 00:21:57,790
parsing into that structure we're

513
00:21:54,820 --> 00:21:59,980
flipping those<font color="#E5E5E5"> dips</font><font color="#CCCCCC"> I'm not sure the</font>

514
00:21:57,790 --> 00:22:04,330
right<font color="#CCCCCC"> term for this but the inverse of</font>

515
00:21:59,980 --> 00:22:06,220
one<font color="#E5E5E5"> here key and the inverse of</font><font color="#CCCCCC"> 4b</font><font color="#E5E5E5"> so</font>

516
00:22:04,330 --> 00:22:09,010
just think<font color="#E5E5E5"> of those bits being set so we</font>

517
00:22:06,220 --> 00:22:11,260
just<font color="#CCCCCC"> add that so we turn them off Yury</font>

518
00:22:09,010 --> 00:22:13,510
mount the drive and then<font color="#E5E5E5"> we quickly put</font>

519
00:22:11,260 --> 00:22:15,820
<font color="#CCCCCC">it back so</font><font color="#E5E5E5"> these</font>

520
00:22:13,510 --> 00:22:17,980
you know all<font color="#CCCCCC"> of a sudden labrie drive is</font>

521
00:22:15,820 --> 00:22:19,600
now rewrite and we can do whatever we

522
00:22:17,980 --> 00:22:20,890
<font color="#CCCCCC">want with</font><font color="#E5E5E5"> the file</font><font color="#CCCCCC"> safely which is</font>

523
00:22:19,600 --> 00:22:22,600
dangerous which is<font color="#CCCCCC"> why you should</font><font color="#E5E5E5"> be</font>

524
00:22:20,890 --> 00:22:25,510
careful<font color="#E5E5E5"> about packaging</font><font color="#CCCCCC"> cause</font><font color="#E5E5E5"> they might</font>

525
00:22:22,600 --> 00:22:28,929
actually fork your device<font color="#E5E5E5"> that's another</font>

526
00:22:25,510 --> 00:22:31,629
<font color="#E5E5E5">story so a platform ization what do we</font>

527
00:22:28,930 --> 00:22:33,100
<font color="#CCCCCC">mean platform ization forth well it</font>

528
00:22:31,630 --> 00:22:35,530
<font color="#CCCCCC">gives us the ability to talk</font><font color="#E5E5E5"> to other</font>

529
00:22:33,100 --> 00:22:35,770
processes<font color="#CCCCCC"> is</font><font color="#E5E5E5"> the main thing</font><font color="#CCCCCC"> that</font><font color="#E5E5E5"> we care</font>

530
00:22:35,530 --> 00:22:37,480
about

531
00:22:35,770 --> 00:22:40,780
there's a couple other attributes to it

532
00:22:37,480 --> 00:22:44,590
but we need to say<font color="#E5E5E5"> hey I need to</font><font color="#CCCCCC"> talk to</font>

533
00:22:40,780 --> 00:22:47,350
<font color="#E5E5E5">task</font><font color="#CCCCCC"> 4 pin or whatever pin I want ok and</font>

534
00:22:44,590 --> 00:22:48,939
again it's<font color="#CCCCCC"> are as simple as our friendly</font>

535
00:22:47,350 --> 00:22:51,010
<font color="#CCCCCC">proc structure that we've</font><font color="#E5E5E5"> already seen</font>

536
00:22:48,940 --> 00:22:53,080
<font color="#E5E5E5">and it has a pass pointer we look in the</font>

537
00:22:51,010 --> 00:22:56,590
past corner<font color="#CCCCCC"> you look down and there</font><font color="#E5E5E5"> are</font>

538
00:22:53,080 --> 00:22:58,629
flags<font color="#CCCCCC"> and there you go that's</font><font color="#E5E5E5"> all you</font>

539
00:22:56,590 --> 00:23:01,000
have to do<font color="#E5E5E5"> there's the C student code a</font>

540
00:22:58,630 --> 00:23:03,760
pop and<font color="#E5E5E5"> the actual C code below all we</font>

541
00:23:01,000 --> 00:23:05,530
have<font color="#E5E5E5"> to do is or our flags the</font><font color="#CCCCCC"> 400</font><font color="#E5E5E5"> and</font>

542
00:23:03,760 --> 00:23:07,060
<font color="#E5E5E5">then we're good to go and this is</font><font color="#CCCCCC"> all</font>

543
00:23:05,530 --> 00:23:08,170
life<font color="#E5E5E5"> this is all</font><font color="#CCCCCC"> life we don't have the</font>

544
00:23:07,060 --> 00:23:09,940
refreshing<font color="#E5E5E5"> thing you don't</font><font color="#CCCCCC"> have</font><font color="#E5E5E5"> to do</font>

545
00:23:08,170 --> 00:23:12,190
anything you<font color="#CCCCCC"> just stay make</font><font color="#E5E5E5"> it so and</font>

546
00:23:09,940 --> 00:23:13,630
then any for the call in<font color="#E5E5E5"> the colonel</font><font color="#CCCCCC"> it</font>

547
00:23:12,190 --> 00:23:19,000
<font color="#E5E5E5">checks that value and we're good to go</font>

548
00:23:13,630 --> 00:23:21,910
<font color="#CCCCCC">so at this point I think I</font><font color="#E5E5E5"> was yeah I</font>

549
00:23:19,000 --> 00:23:23,620
<font color="#E5E5E5">was like 11 days deep and going like oh</font>

550
00:23:21,910 --> 00:23:25,930
my gosh<font color="#E5E5E5"> I don't</font><font color="#CCCCCC"> know</font><font color="#E5E5E5"> how to sue</font>

551
00:23:23,620 --> 00:23:28,000
entitlement<font color="#E5E5E5"> entitlements are a little</font>

552
00:23:25,930 --> 00:23:30,460
little<font color="#E5E5E5"> more complicated</font><font color="#CCCCCC"> and so I ended</font>

553
00:23:28,000 --> 00:23:33,670
up reversing<font color="#CCCCCC"> chi'lan which is the</font>

554
00:23:30,460 --> 00:23:36,760
<font color="#CCCCCC">jailbreak by jonathan levin</font><font color="#E5E5E5"> and he he</font>

555
00:23:33,670 --> 00:23:40,000
<font color="#E5E5E5">clopin sourced it he gave out the object</font>

556
00:23:36,760 --> 00:23:42,100
file<font color="#E5E5E5"> and a header and was nice enough</font>

557
00:23:40,000 --> 00:23:44,950
not to strip the object file so reverse

558
00:23:42,100 --> 00:23:47,260
engineering is fairly easy<font color="#E5E5E5"> but there is</font>

559
00:23:44,950 --> 00:23:49,270
the<font color="#CCCCCC"> Hubie dragons part on the bottom</font>

560
00:23:47,260 --> 00:23:50,560
<font color="#CCCCCC">right hand</font><font color="#E5E5E5"> side</font><font color="#CCCCCC"> Oh</font><font color="#E5E5E5"> her I was like I</font>

561
00:23:49,270 --> 00:23:53,139
don't really<font color="#E5E5E5"> know what to do here</font>

562
00:23:50,560 --> 00:24:00,280
but using<font color="#CCCCCC"> his code as kind of</font><font color="#E5E5E5"> a</font>

563
00:23:53,140 --> 00:24:03,400
reference<font color="#CCCCCC"> I went through I</font><font color="#E5E5E5"> said okay why</font>

564
00:24:00,280 --> 00:24:05,440
<font color="#CCCCCC">or like how in the process</font><font color="#E5E5E5"> of building</font>

565
00:24:03,400 --> 00:24:07,710
out how we get our entitlement here are

566
00:24:05,440 --> 00:24:10,030
the reasons<font color="#CCCCCC"> why we need them okay so</font>

567
00:24:07,710 --> 00:24:12,190
<font color="#CCCCCC">going</font><font color="#E5E5E5"> back</font><font color="#CCCCCC"> to behold</font>

568
00:24:10,030 --> 00:24:13,600
<font color="#E5E5E5">you know</font><font color="#CCCCCC"> rude on xnu</font><font color="#E5E5E5"> is not really rude</font>

569
00:24:12,190 --> 00:24:15,370
there are several things that<font color="#E5E5E5"> make you</font>

570
00:24:13,600 --> 00:24:18,100
<font color="#CCCCCC">not</font><font color="#E5E5E5"> rip when your</font><font color="#CCCCCC"> route</font><font color="#E5E5E5"> and one of the</font>

571
00:24:15,370 --> 00:24:20,350
things is MP MP is the<font color="#E5E5E5"> Apple mobile file</font>

572
00:24:18,100 --> 00:24:22,179
integrity<font color="#E5E5E5"> daemon and it's always running</font>

573
00:24:20,350 --> 00:24:25,510
on the system<font color="#E5E5E5"> but we'll get into that</font>

574
00:24:22,180 --> 00:24:26,890
later<font color="#CCCCCC"> without an entitlement for Casper</font>

575
00:24:25,510 --> 00:24:27,350
<font color="#CCCCCC">kids</font><font color="#E5E5E5"> even though we're platform eyes</font>

576
00:24:26,890 --> 00:24:29,330
<font color="#E5E5E5">it's</font>

577
00:24:27,350 --> 00:24:31,520
doesn't work because<font color="#CCCCCC"> the system</font><font color="#E5E5E5"> check</font>

578
00:24:29,330 --> 00:24:35,830
our entitlement<font color="#E5E5E5"> and our flag of</font><font color="#CCCCCC"> the</font>

579
00:24:31,520 --> 00:24:39,379
previously<font color="#E5E5E5"> set so Apple and their wisdom</font>

580
00:24:35,830 --> 00:24:42,379
<font color="#E5E5E5">uses XML for everything you want some</font>

581
00:24:39,380 --> 00:24:45,710
bugs<font color="#CCCCCC"> they do</font><font color="#E5E5E5"> XML interpretation in the</font>

582
00:24:42,380 --> 00:24:48,980
kernel<font color="#CCCCCC"> so look</font><font color="#E5E5E5"> at that</font>

583
00:24:45,710 --> 00:24:51,799
so the entitlements that<font color="#E5E5E5"> we need are</font>

584
00:24:48,980 --> 00:24:54,380
specifically<font color="#E5E5E5"> I shouldn't put them in</font>

585
00:24:51,799 --> 00:24:57,080
order<font color="#E5E5E5"> but we have to pit allow we want</font>

586
00:24:54,380 --> 00:24:59,000
kernel<font color="#E5E5E5"> system override and want unsigned</font>

587
00:24:57,080 --> 00:25:01,010
code<font color="#E5E5E5"> you want</font><font color="#CCCCCC"> to</font><font color="#E5E5E5"> do all the things on</font>

588
00:24:59,000 --> 00:25:03,049
the system but<font color="#CCCCCC"> we</font><font color="#E5E5E5"> don't have that and</font><font color="#CCCCCC"> we</font>

589
00:25:01,010 --> 00:25:04,220
can't have that<font color="#CCCCCC"> because we</font><font color="#E5E5E5"> don't have an</font>

590
00:25:03,049 --> 00:25:07,690
<font color="#CCCCCC">apple certificate we only have a</font>

591
00:25:04,220 --> 00:25:11,090
developer certificate at this point so

592
00:25:07,690 --> 00:25:13,250
it's just<font color="#E5E5E5"> like before we have a couple</font>

593
00:25:11,090 --> 00:25:14,720
structures the process through and

594
00:25:13,250 --> 00:25:16,789
<font color="#E5E5E5">starting with the prospector which we've</font>

595
00:25:14,720 --> 00:25:19,000
done previously<font color="#CCCCCC"> you jump into our we</font>

596
00:25:16,789 --> 00:25:24,429
<font color="#CCCCCC">know you can processes</font><font color="#E5E5E5"> our be node</font>

597
00:25:19,000 --> 00:25:27,440
object<font color="#E5E5E5"> and then inside</font><font color="#CCCCCC"> of the be node</font>

598
00:25:24,429 --> 00:25:29,510
<font color="#E5E5E5">there</font><font color="#CCCCCC"> is an</font><font color="#E5E5E5"> internal code signing</font>

599
00:25:27,440 --> 00:25:33,230
section on this code signing section

600
00:25:29,510 --> 00:25:35,450
<font color="#E5E5E5">Apple uses as part of their</font><font color="#CCCCCC"> x.509 little</font>

601
00:25:33,230 --> 00:25:35,809
chain of certificates<font color="#CCCCCC"> to build out who</font>

602
00:25:35,450 --> 00:25:37,640
are you

603
00:25:35,809 --> 00:25:40,520
what sort of entitlements you have with

604
00:25:37,640 --> 00:25:41,630
<font color="#E5E5E5">those code can run but it's actually</font>

605
00:25:40,520 --> 00:25:43,700
pretty<font color="#E5E5E5"> easy to modify</font>

606
00:25:41,630 --> 00:25:45,080
all you have<font color="#E5E5E5"> to do is look at the size</font>

607
00:25:43,700 --> 00:25:46,940
<font color="#CCCCCC">because you need to keep that</font><font color="#E5E5E5"> in mind</font>

608
00:25:45,080 --> 00:25:49,699
when<font color="#CCCCCC"> we rewrite the blob in memory and</font>

609
00:25:46,940 --> 00:25:51,740
then we just<font color="#CCCCCC"> need a pointer to</font><font color="#E5E5E5"> our</font>

610
00:25:49,700 --> 00:25:53,450
entitlement<font color="#E5E5E5"> blob and</font><font color="#CCCCCC"> then we need</font><font color="#E5E5E5"> the</font>

611
00:25:51,740 --> 00:25:55,880
pointer to where<font color="#E5E5E5"> it stores the hash so</font>

612
00:25:53,450 --> 00:25:58,280
what<font color="#E5E5E5"> our plan of attack is we're going</font>

613
00:25:55,880 --> 00:26:00,679
<font color="#CCCCCC">to put our new entitlements in we're</font>

614
00:25:58,280 --> 00:26:03,590
gonna we're gonna<font color="#CCCCCC"> shot 256 a month and</font>

615
00:26:00,679 --> 00:26:05,179
then we're gonna write our hash to where

616
00:26:03,590 --> 00:26:06,949
it expects it<font color="#E5E5E5"> and then we need to</font>

617
00:26:05,179 --> 00:26:08,659
overwrite the<font color="#CCCCCC"> old entitlement blob with</font>

618
00:26:06,950 --> 00:26:11,320
our new one but<font color="#E5E5E5"> we're</font><font color="#CCCCCC"> just replacing</font>

619
00:26:08,659 --> 00:26:11,320
<font color="#CCCCCC">them</font><font color="#E5E5E5"> right</font>

620
00:26:15,610 --> 00:26:18,428
the code<font color="#E5E5E5"> for that is more involved and I</font>

621
00:26:16,809 --> 00:26:20,440
won't<font color="#E5E5E5"> get in that but the idea is</font>

622
00:26:18,429 --> 00:26:21,760
conceptually there<font color="#CCCCCC"> all we have</font><font color="#E5E5E5"> to do is</font>

623
00:26:20,440 --> 00:26:24,910
just<font color="#E5E5E5"> replace</font><font color="#CCCCCC"> we're entitlement</font><font color="#E5E5E5"> and move</font>

624
00:26:21,760 --> 00:26:26,470
on<font color="#E5E5E5"> so they're looking at the full</font>

625
00:26:24,910 --> 00:26:29,160
sandbox<font color="#CCCCCC"> connotation so there are some</font>

626
00:26:26,470 --> 00:26:32,679
<font color="#E5E5E5">things</font><font color="#CCCCCC"> that we can't touch you can't</font>

627
00:26:29,160 --> 00:26:35,429
<font color="#E5E5E5">create</font><font color="#CCCCCC"> read write execute pages we have</font>

628
00:26:32,679 --> 00:26:38,200
turn the redirector<font color="#CCCCCC"> II and</font><font color="#E5E5E5"> read</font><font color="#CCCCCC"> write</font>

629
00:26:35,429 --> 00:26:40,390
<font color="#CCCCCC">but there are some policies still</font><font color="#E5E5E5"> in</font>

630
00:26:38,200 --> 00:26:42,190
place where we<font color="#E5E5E5"> can't run binary</font><font color="#CCCCCC"> there's</font>

631
00:26:40,390 --> 00:26:45,160
not much we can do about<font color="#CCCCCC"> that except for</font>

632
00:26:42,190 --> 00:26:47,290
create binaries on the<font color="#E5E5E5"> root of the file</font>

633
00:26:45,160 --> 00:26:50,440
system we've<font color="#E5E5E5"> platform eyes herself</font><font color="#CCCCCC"> we</font>

634
00:26:47,290 --> 00:26:55,168
fix<font color="#E5E5E5"> our entitlements and now our last</font>

635
00:26:50,440 --> 00:26:59,160
<font color="#E5E5E5">hope get over is running on side code so</font>

636
00:26:55,169 --> 00:27:04,090
running<font color="#CCCCCC"> unsigned code</font><font color="#E5E5E5"> is is not possible</font>

637
00:26:59,160 --> 00:27:07,450
<font color="#E5E5E5">kind of so this this</font><font color="#CCCCCC"> amphi demon will</font>

638
00:27:04,090 --> 00:27:09,820
check every single executable<font color="#CCCCCC"> and if it</font>

639
00:27:07,450 --> 00:27:11,799
doesn't properly<font color="#E5E5E5"> have signatures in</font>

640
00:27:09,820 --> 00:27:13,629
place<font color="#E5E5E5"> and then the certificate chain</font><font color="#CCCCCC"> and</font>

641
00:27:11,799 --> 00:27:15,700
<font color="#CCCCCC">another section</font><font color="#E5E5E5"> of the binary it just</font>

642
00:27:13,630 --> 00:27:20,080
killed it<font color="#E5E5E5"> like nope nope you know on the</font>

643
00:27:15,700 --> 00:27:22,419
system<font color="#E5E5E5"> but I mean we are route ish</font>

644
00:27:20,080 --> 00:27:24,220
lugash<font color="#E5E5E5"> we are a platform binary you know</font>

645
00:27:22,419 --> 00:27:26,049
have<font color="#CCCCCC"> apple privileges</font><font color="#E5E5E5"> we have these</font>

646
00:27:24,220 --> 00:27:27,460
super awesome entitlements<font color="#E5E5E5"> we are</font>

647
00:27:26,049 --> 00:27:32,860
entitled to<font color="#E5E5E5"> do pretty much anything on</font>

648
00:27:27,460 --> 00:27:34,510
<font color="#E5E5E5">the</font><font color="#CCCCCC"> fiscal</font><font color="#E5E5E5"> so I looked at kind of the</font>

649
00:27:32,860 --> 00:27:37,270
<font color="#E5E5E5">code flow when you create a process</font>

650
00:27:34,510 --> 00:27:39,190
<font color="#E5E5E5">right</font><font color="#CCCCCC"> so when you create a process</font><font color="#E5E5E5"> using</font>

651
00:27:37,270 --> 00:27:40,929
say like POSIX<font color="#CCCCCC"> spawn</font><font color="#E5E5E5"> because it's just</font>

652
00:27:39,190 --> 00:27:44,740
touching<font color="#E5E5E5"> the freebsd part of the panel</font>

653
00:27:40,929 --> 00:27:46,809
you you call exe<font color="#E5E5E5"> CD or whatever in</font><font color="#CCCCCC"> there</font>

654
00:27:44,740 --> 00:27:49,360
<font color="#CCCCCC">see</font><font color="#E5E5E5"> and then it pops up the kernel feels</font>

655
00:27:46,809 --> 00:27:51,970
like hey<font color="#E5E5E5"> I have</font><font color="#CCCCCC"> a flat for test</font><font color="#E5E5E5"> all</font>

656
00:27:49,360 --> 00:27:53,830
right bring it over the<font color="#E5E5E5"> MP MP</font><font color="#CCCCCC"> except you</font>

657
00:27:51,970 --> 00:27:56,440
should check it and<font color="#CCCCCC"> then it brings it</font>

658
00:27:53,830 --> 00:27:58,240
<font color="#CCCCCC">back down to</font><font color="#E5E5E5"> user lab amphi daemon is</font>

659
00:27:56,440 --> 00:27:59,980
running<font color="#CCCCCC"> in user 1 it does the checking a</font>

660
00:27:58,240 --> 00:28:02,429
<font color="#E5E5E5">Musil and this does not make</font><font color="#CCCCCC"> any sense</font>

661
00:27:59,980 --> 00:28:05,860
<font color="#CCCCCC">but hey it works</font>

662
00:28:02,429 --> 00:28:07,330
so let's attack the user space<font color="#CCCCCC"> process I</font>

663
00:28:05,860 --> 00:28:10,199
don't<font color="#CCCCCC"> know why they</font><font color="#E5E5E5"> don't do code</font>

664
00:28:07,330 --> 00:28:12,879
signing in<font color="#E5E5E5"> the kernel but all right so</font>

665
00:28:10,200 --> 00:28:15,700
there's two<font color="#CCCCCC"> ways of doing this</font><font color="#E5E5E5"> one amp</font>

666
00:28:12,880 --> 00:28:17,470
you have a cache of known hashes of

667
00:28:15,700 --> 00:28:19,030
files<font color="#E5E5E5"> that</font><font color="#CCCCCC"> it's</font><font color="#E5E5E5"> already verified so it</font>

668
00:28:17,470 --> 00:28:22,059
doesn't have to do the work<font color="#CCCCCC"> Co</font><font color="#E5E5E5"> commonly</font>

669
00:28:19,030 --> 00:28:25,120
<font color="#E5E5E5">run process Aston's already there or you</font>

670
00:28:22,059 --> 00:28:28,629
can patch it and create a custom error

671
00:28:25,120 --> 00:28:29,530
handler to catch any errors<font color="#E5E5E5"> when it dies</font>

672
00:28:28,630 --> 00:28:32,140
<font color="#E5E5E5">and then</font>

673
00:28:29,530 --> 00:28:34,180
put in above so it crashes every single

674
00:28:32,140 --> 00:28:36,790
time<font color="#CCCCCC"> let's try</font><font color="#E5E5E5"> to run a binary and so</font>

675
00:28:34,180 --> 00:28:41,440
this this<font color="#CCCCCC"> is what I went with</font>

676
00:28:36,790 --> 00:28:43,960
so EMP is<font color="#E5E5E5"> like a tiny binary all it has</font>

677
00:28:41,440 --> 00:28:46,030
is<font color="#CCCCCC"> just some some function pointers and</font>

678
00:28:43,960 --> 00:28:48,400
call out like that is that<font color="#E5E5E5"> is like</font>

679
00:28:46,030 --> 00:28:50,290
accurate representation of<font color="#E5E5E5"> how</font><font color="#CCCCCC"> big that</font>

680
00:28:48,400 --> 00:28:52,060
file is it is it<font color="#E5E5E5"> is pretty tiny</font><font color="#CCCCCC"> so you</font>

681
00:28:50,290 --> 00:28:54,820
<font color="#E5E5E5">can pop it up and like</font><font color="#CCCCCC"> are you</font><font color="#E5E5E5"> firing</font>

682
00:28:52,060 --> 00:28:58,570
<font color="#CCCCCC">into pop that open them there and then</font><font color="#E5E5E5"> I</font>

683
00:28:54,820 --> 00:29:01,179
looked at the<font color="#CCCCCC"> address</font><font color="#E5E5E5"> the offset to this</font>

684
00:28:58,570 --> 00:29:03,970
<font color="#CCCCCC">M is validates signature function that</font>

685
00:29:01,180 --> 00:29:06,850
gets called when<font color="#E5E5E5"> you know the kernel</font>

686
00:29:03,970 --> 00:29:08,380
want hey check this binary piece of

687
00:29:06,850 --> 00:29:11,500
salad<font color="#E5E5E5"> so what we're</font><font color="#CCCCCC"> gonna</font><font color="#E5E5E5"> do is gonna</font>

688
00:29:08,380 --> 00:29:13,060
<font color="#E5E5E5">put in a non canonical 64-bit address I</font>

689
00:29:11,500 --> 00:29:16,750
<font color="#E5E5E5">think it's going to crash every single</font>

690
00:29:13,060 --> 00:29:18,429
time so then we set up an exception

691
00:29:16,750 --> 00:29:20,920
<font color="#CCCCCC">Handler</font><font color="#E5E5E5"> and</font><font color="#CCCCCC"> like I said</font><font color="#E5E5E5"> previously with</font>

692
00:29:18,430 --> 00:29:23,710
<font color="#E5E5E5">mock</font><font color="#CCCCCC"> port so just mailbox</font><font color="#E5E5E5"> right we tell</font>

693
00:29:20,920 --> 00:29:26,230
the curl hey<font color="#E5E5E5"> any time this process</font><font color="#CCCCCC"> dies</font>

694
00:29:23,710 --> 00:29:29,650
send me a<font color="#E5E5E5"> message tell me</font><font color="#CCCCCC"> it's register</font>

695
00:29:26,230 --> 00:29:31,780
state sent me if memory<font color="#E5E5E5"> send me its</font>

696
00:29:29,650 --> 00:29:34,690
stack anything else that's<font color="#E5E5E5"> going on with</font>

697
00:29:31,780 --> 00:29:36,340
system<font color="#CCCCCC"> ID</font><font color="#E5E5E5"> so that</font><font color="#CCCCCC"> that's what that is</font><font color="#E5E5E5"> we</font>

698
00:29:34,690 --> 00:29:40,240
can create<font color="#CCCCCC"> a separate process to build</font>

699
00:29:36,340 --> 00:29:45,129
<font color="#E5E5E5">it and it'll handle all of</font><font color="#CCCCCC"> Anthes</font><font color="#E5E5E5"> guests</font>

700
00:29:40,240 --> 00:29:47,440
as we kill it repeatedly<font color="#E5E5E5"> so once we're</font>

701
00:29:45,130 --> 00:29:49,810
inside of<font color="#CCCCCC"> the once we've triggered a</font>

702
00:29:47,440 --> 00:29:51,700
fault<font color="#E5E5E5"> inside a fancy by running</font><font color="#CCCCCC"> a</font>

703
00:29:49,810 --> 00:29:55,060
program<font color="#CCCCCC"> now</font><font color="#E5E5E5"> we need to actually handle</font>

704
00:29:51,700 --> 00:29:58,390
it<font color="#E5E5E5"> and returns the value true</font><font color="#CCCCCC"> is all the</font>

705
00:29:55,060 --> 00:30:00,850
kernel text please<font color="#E5E5E5"> looking for</font><font color="#CCCCCC"> is hey</font>

706
00:29:58,390 --> 00:30:04,630
user<font color="#CCCCCC"> lands am P</font><font color="#E5E5E5"> is this process time oh</font>

707
00:30:00,850 --> 00:30:06,790
great<font color="#E5E5E5"> it let's run it so all we have to</font>

708
00:30:04,630 --> 00:30:13,990
do is set up some registers with the new

709
00:30:06,790 --> 00:30:16,570
hash<font color="#E5E5E5"> and then we take we write a1</font><font color="#CCCCCC"> as</font><font color="#E5E5E5"> I'm</font>

710
00:30:13,990 --> 00:30:20,980
like true<font color="#E5E5E5"> into X 20 and then we set up</font>

711
00:30:16,570 --> 00:30:22,540
the<font color="#E5E5E5"> old the old state which is if you're</font>

712
00:30:20,980 --> 00:30:24,400
familiar<font color="#CCCCCC"> that consists the</font><font color="#E5E5E5"> link register</font>

713
00:30:22,540 --> 00:30:27,600
is essentially<font color="#E5E5E5"> your first thing on their</font>

714
00:30:24,400 --> 00:30:29,590
staff<font color="#CCCCCC"> that's a bad</font><font color="#E5E5E5"> analogy but it work</font>

715
00:30:27,600 --> 00:30:30,429
and<font color="#E5E5E5"> then we just say</font><font color="#CCCCCC"> hey alright</font>

716
00:30:29,590 --> 00:30:37,199
<font color="#E5E5E5">everything's good</font>

717
00:30:30,430 --> 00:30:37,200
keep running so so I've lived that long

718
00:30:43,679 --> 00:30:49,450
one<font color="#E5E5E5"> point things I'm using Quicktime to</font>

719
00:30:46,419 --> 00:30:51,630
this trick kind of handle<font color="#CCCCCC"> the plugs into</font>

720
00:30:49,450 --> 00:30:51,630
your phone

721
00:30:56,549 --> 00:31:01,059
I'll put<font color="#CCCCCC"> execute where</font><font color="#E5E5E5"> the project is</font>

722
00:30:59,320 --> 00:31:02,350
and<font color="#E5E5E5"> you'll be able to see the output and</font>

723
00:31:01,059 --> 00:31:17,139
<font color="#CCCCCC">we'll</font><font color="#E5E5E5"> follow along at the</font><font color="#CCCCCC"> deal-breaker</font>

724
00:31:02,350 --> 00:31:18,699
<font color="#E5E5E5">is not the right phone alright</font><font color="#CCCCCC"> take a</font>

725
00:31:17,140 --> 00:31:19,600
<font color="#E5E5E5">couple seconds</font><font color="#CCCCCC"> because it has to do</font><font color="#E5E5E5"> code</font>

726
00:31:18,700 --> 00:31:28,809
<font color="#E5E5E5">signing on my machine</font>

727
00:31:19,600 --> 00:31:30,939
get the app on the<font color="#CCCCCC"> phone alright</font><font color="#E5E5E5"> and so</font>

728
00:31:28,809 --> 00:31:34,480
<font color="#CCCCCC">what's happening</font><font color="#E5E5E5"> right now is it's using</font>

729
00:31:30,940 --> 00:31:37,030
<font color="#CCCCCC">and beers tasks for ped</font><font color="#E5E5E5"> async/await</font><font color="#CCCCCC"> or</font>

730
00:31:34,480 --> 00:31:38,110
<font color="#E5E5E5">his async</font><font color="#CCCCCC"> wait to get</font><font color="#E5E5E5"> us a task for hit</font>

731
00:31:37,030 --> 00:31:39,549
and here we go

732
00:31:38,110 --> 00:31:43,270
you have the tap that<font color="#CCCCCC"> head for the club</font>

733
00:31:39,549 --> 00:31:45,010
<font color="#E5E5E5">okay then we go through and we attempt</font>

734
00:31:43,270 --> 00:31:47,200
<font color="#CCCCCC">the obtained obtained</font><font color="#E5E5E5"> route you see our</font>

735
00:31:45,010 --> 00:31:49,390
current privileges are 501<font color="#CCCCCC"> which is</font>

736
00:31:47,200 --> 00:31:55,059
mobile<font color="#E5E5E5"> user okay so we're in user mode</font>

737
00:31:49,390 --> 00:31:58,210
<font color="#E5E5E5">and then we go ahead and we render we go</font>

738
00:31:55,059 --> 00:32:03,070
ahead<font color="#CCCCCC"> and rewrite</font><font color="#E5E5E5"> our our cred structure</font>

739
00:31:58,210 --> 00:32:04,480
and then our<font color="#E5E5E5"> our</font><font color="#CCCCCC"> UID UID and rui-zhi</font>

740
00:32:03,070 --> 00:32:07,689
<font color="#E5E5E5">and then all the time damn we're</font><font color="#CCCCCC"> route</font>

741
00:32:04,480 --> 00:32:10,179
okay<font color="#E5E5E5"> great then we set ourselves</font><font color="#CCCCCC"> or our</font>

742
00:32:07,690 --> 00:32:14,470
platform attributes you go ahead<font color="#E5E5E5"> and</font>

743
00:32:10,179 --> 00:32:16,600
<font color="#E5E5E5">remount the</font><font color="#CCCCCC"> drive</font><font color="#E5E5E5"> and then here's the</font>

744
00:32:14,470 --> 00:32:18,070
<font color="#CCCCCC">entitlement section I throw a bunch of</font>

745
00:32:16,600 --> 00:32:21,939
crap<font color="#E5E5E5"> entitlement here for things I</font>

746
00:32:18,070 --> 00:32:23,530
really don't need like accessory

747
00:32:21,940 --> 00:32:24,730
wireless<font color="#CCCCCC"> configurations reader</font><font color="#E5E5E5"> session</font>

748
00:32:23,530 --> 00:32:26,860
format because<font color="#E5E5E5"> it needs to be big</font><font color="#CCCCCC"> enough</font>

749
00:32:24,730 --> 00:32:29,049
to<font color="#E5E5E5"> hold the new entitlement but I take</font>

750
00:32:26,860 --> 00:32:30,820
those entitlements that's the<font color="#E5E5E5"> role - and</font>

751
00:32:29,049 --> 00:32:33,100
then I replaced them with the new

752
00:32:30,820 --> 00:32:35,470
awesome<font color="#E5E5E5"> amazing entitlement and then I</font>

753
00:32:33,100 --> 00:32:37,480
rewrite the hash<font color="#E5E5E5"> call it a day</font><font color="#CCCCCC"> we're now</font>

754
00:32:35,470 --> 00:32:41,830
<font color="#E5E5E5">entitled and then the rest of is just</font>

755
00:32:37,480 --> 00:32:44,799
<font color="#E5E5E5">writing</font><font color="#CCCCCC"> file</font><font color="#E5E5E5"> system and setting up the</font>

756
00:32:41,830 --> 00:33:35,559
ante<font color="#E5E5E5"> process to deal with</font><font color="#CCCCCC"> aunt fees</font>

757
00:32:44,799 --> 00:33:41,080
errors<font color="#E5E5E5"> so now all right so next</font><font color="#CCCCCC"> alright</font>

758
00:33:35,559 --> 00:33:43,990
<font color="#CCCCCC">I'm in the</font><font color="#E5E5E5"> system I'm route and there's</font>

759
00:33:41,080 --> 00:33:55,480
all<font color="#CCCCCC"> of yeah</font><font color="#E5E5E5"> we're we're rude on the box</font>

760
00:33:43,990 --> 00:33:58,419
so from there<font color="#E5E5E5"> I built in a web server</font><font color="#CCCCCC"> to</font>

761
00:33:55,480 --> 00:33:59,830
do like first of all I wanted to pull

762
00:33:58,419 --> 00:34:04,450
files off the<font color="#E5E5E5"> drives of worried about</font>

763
00:33:59,830 --> 00:34:07,689
<font color="#CCCCCC">losing my phone but then I built a kind</font>

764
00:34:04,450 --> 00:34:09,909
<font color="#CCCCCC">of live kernel introspection set up so</font>

765
00:34:07,690 --> 00:34:11,379
here here's our primal<font color="#E5E5E5"> task with pit</font><font color="#CCCCCC"> 0</font>

766
00:34:09,909 --> 00:34:13,810
<font color="#E5E5E5">here's where we're at</font>

767
00:34:11,379 --> 00:34:16,089
down here we're running<font color="#E5E5E5"> a drop bear web</font>

768
00:34:13,810 --> 00:34:18,639
server and we can<font color="#E5E5E5"> look and we</font><font color="#CCCCCC"> can match</font>

769
00:34:16,089 --> 00:34:21,100
up<font color="#CCCCCC"> one-to-one with the source code</font><font color="#E5E5E5"> going</font>

770
00:34:18,639 --> 00:34:23,830
<font color="#E5E5E5">on here and hopefully they're too small</font>

771
00:34:21,100 --> 00:34:26,230
<font color="#E5E5E5">I apologize for this but</font><font color="#CCCCCC"> you can see</font>

772
00:34:23,830 --> 00:34:27,790
like oh here's a link pointer backwards

773
00:34:26,230 --> 00:34:30,010
here's a link<font color="#E5E5E5"> coroner forwards here's</font>

774
00:34:27,790 --> 00:34:31,629
our pin<font color="#CCCCCC"> and here's all</font><font color="#E5E5E5"> the relevant</font>

775
00:34:30,010 --> 00:34:33,429
<font color="#E5E5E5">information</font><font color="#CCCCCC"> right so it matches</font><font color="#E5E5E5"> up</font>

776
00:34:31,629 --> 00:34:34,629
<font color="#CCCCCC">one-to-one</font><font color="#E5E5E5"> will</font><font color="#CCCCCC"> almost one-to-one with</font>

777
00:34:33,429 --> 00:34:37,089
their source<font color="#CCCCCC"> code so it's actually not</font>

778
00:34:34,629 --> 00:34:38,609
too<font color="#CCCCCC"> hard</font><font color="#E5E5E5"> to follow and I'm just really</font>

779
00:34:37,089 --> 00:34:40,779
surprised by this because<font color="#CCCCCC"> I thought</font>

780
00:34:38,609 --> 00:34:42,399
<font color="#E5E5E5">previously like this is black magic this</font>

781
00:34:40,780 --> 00:34:46,000
used<font color="#E5E5E5"> to be relegated to the gods of</font>

782
00:34:42,399 --> 00:34:49,710
hackery<font color="#CCCCCC"> quite</font><font color="#E5E5E5"> no anybody</font><font color="#CCCCCC"> can do</font><font color="#E5E5E5"> this</font><font color="#CCCCCC"> and</font>

783
00:34:46,000 --> 00:34:53,429
I can match up structure anything so

784
00:34:49,710 --> 00:34:53,429
<font color="#CCCCCC">alright</font><font color="#E5E5E5"> let me pop back</font>

785
00:34:56,550 --> 00:34:59,950
the found lessons learn<font color="#E5E5E5"> looking back</font>

786
00:34:59,170 --> 00:35:03,640
what was done

787
00:34:59,950 --> 00:35:07,210
<font color="#CCCCCC">ah don't</font><font color="#E5E5E5"> do this I mean</font><font color="#CCCCCC"> no that's</font><font color="#E5E5E5"> kind</font>

788
00:35:03,640 --> 00:35:09,040
of rough but<font color="#E5E5E5"> the chilling</font><font color="#CCCCCC"> which is a</font>

789
00:35:07,210 --> 00:35:11,020
<font color="#E5E5E5">product</font><font color="#CCCCCC"> by Jonathan Levin</font><font color="#E5E5E5"> and then</font>

790
00:35:09,040 --> 00:35:13,150
<font color="#CCCCCC">Electra project by cool star both</font>

791
00:35:11,020 --> 00:35:16,000
provide great solutions with a lot more

792
00:35:13,150 --> 00:35:17,530
support than my jailbreak has and they

793
00:35:16,000 --> 00:35:19,510
also have larger support communities

794
00:35:17,530 --> 00:35:23,740
around<font color="#E5E5E5"> it whereas I'm</font><font color="#CCCCCC"> just one</font><font color="#E5E5E5"> guy and I</font>

795
00:35:19,510 --> 00:35:25,450
did it<font color="#E5E5E5"> for fun</font><font color="#CCCCCC"> and there's a lot be said</font>

796
00:35:23,740 --> 00:35:26,919
for having<font color="#E5E5E5"> a community</font><font color="#CCCCCC"> of people</font><font color="#E5E5E5"> like</font>

797
00:35:25,450 --> 00:35:28,660
helping you out and<font color="#E5E5E5"> assisting and</font>

798
00:35:26,920 --> 00:35:30,280
encouraging<font color="#E5E5E5"> because if you attack a hard</font>

799
00:35:28,660 --> 00:35:32,170
problem by<font color="#CCCCCC"> yourself you get overwhelmed</font>

800
00:35:30,280 --> 00:35:35,490
and<font color="#E5E5E5"> then you have to do what I</font><font color="#CCCCCC"> did and</font>

801
00:35:32,170 --> 00:35:39,580
<font color="#CCCCCC">just break it down</font><font color="#E5E5E5"> into small shops and</font>

802
00:35:35,490 --> 00:35:43,149
there's there's<font color="#E5E5E5"> always this disparity</font>

803
00:35:39,580 --> 00:35:44,950
<font color="#E5E5E5">between the xnu kernel sources because</font>

804
00:35:43,150 --> 00:35:46,930
they only give you<font color="#E5E5E5"> the x86 horses they</font>

805
00:35:44,950 --> 00:35:49,060
don't give you the<font color="#CCCCCC"> arm</font><font color="#E5E5E5"> sources and so</font>

806
00:35:46,930 --> 00:35:50,620
there is a little<font color="#E5E5E5"> bit of like not one to</font>

807
00:35:49,060 --> 00:35:52,150
oneness<font color="#CCCCCC"> as you're looking at</font><font color="#E5E5E5"> the code</font>

808
00:35:50,620 --> 00:35:53,890
you might<font color="#E5E5E5"> feel like this truck doesn't</font>

809
00:35:52,150 --> 00:35:56,440
really line up<font color="#E5E5E5"> but I I see this</font><font color="#CCCCCC"> here</font><font color="#E5E5E5"> in</font>

810
00:35:53,890 --> 00:35:59,920
memory<font color="#E5E5E5"> there is that kind of problem and</font>

811
00:35:56,440 --> 00:36:01,770
but having that<font color="#E5E5E5"> community who's</font><font color="#CCCCCC"> already</font>

812
00:35:59,920 --> 00:36:05,290
solved those problems will really help

813
00:36:01,770 --> 00:36:07,090
so please<font color="#E5E5E5"> get involved like I'm I'm a</font>

814
00:36:05,290 --> 00:36:09,340
newcomer<font color="#E5E5E5"> to the jailbreaking scene like</font>

815
00:36:07,090 --> 00:36:10,540
the first time<font color="#E5E5E5"> I've done</font><font color="#CCCCCC"> it</font><font color="#E5E5E5"> and there's</font>

816
00:36:09,340 --> 00:36:14,980
been a<font color="#E5E5E5"> lot of cool and really awesome</font>

817
00:36:10,540 --> 00:36:16,690
<font color="#CCCCCC">people expression on I receive but one</font>

818
00:36:14,980 --> 00:36:18,550
thing I<font color="#CCCCCC"> have</font><font color="#E5E5E5"> noticed is don't ask for</font>

819
00:36:16,690 --> 00:36:20,370
when the next<font color="#E5E5E5"> jailbreak coming out</font><font color="#CCCCCC"> cuz</font>

820
00:36:18,550 --> 00:36:22,240
you'll<font color="#E5E5E5"> just get</font><font color="#CCCCCC"> auto</font><font color="#E5E5E5"> ban from everything</font>

821
00:36:20,370 --> 00:36:25,870
because people hate<font color="#CCCCCC"> that because</font>

822
00:36:22,240 --> 00:36:28,770
<font color="#E5E5E5">exploits cost a ton of money and you</font>

823
00:36:25,870 --> 00:36:30,670
<font color="#E5E5E5">know no one gives them</font><font color="#CCCCCC"> away for free so</font>

824
00:36:28,770 --> 00:36:34,420
<font color="#CCCCCC">alright</font><font color="#E5E5E5"> we're gonna go</font><font color="#CCCCCC"> from here</font>

825
00:36:30,670 --> 00:36:36,460
iOS<font color="#E5E5E5"> 12 is currently out</font><font color="#CCCCCC"> Alibaba produced</font>

826
00:36:34,420 --> 00:36:41,040
the video<font color="#E5E5E5"> saying that</font><font color="#CCCCCC"> they are showing</font>

827
00:36:36,460 --> 00:36:44,320
that they had a jailbroken device also

828
00:36:41,040 --> 00:36:46,210
<font color="#CCCCCC">looka a deskah</font><font color="#E5E5E5"> pretty pretty up</font>

829
00:36:44,320 --> 00:36:48,730
I got forget his Twitter handle<font color="#E5E5E5"> but Luca</font>

830
00:36:46,210 --> 00:36:52,720
has produced a jailbreak as well<font color="#E5E5E5"> these</font>

831
00:36:48,730 --> 00:36:54,250
<font color="#CCCCCC">are all private he's a not public so at</font>

832
00:36:52,720 --> 00:36:56,200
this point we're either hoping that

833
00:36:54,250 --> 00:36:58,030
someone releases their jailbreak or

834
00:36:56,200 --> 00:37:00,609
releases the exploits<font color="#E5E5E5"> and then we can</font>

835
00:36:58,030 --> 00:37:03,010
plug<font color="#E5E5E5"> him into mine</font><font color="#CCCCCC"> chillin or electro</font>

836
00:37:00,610 --> 00:37:05,440
<font color="#E5E5E5">you know with that</font><font color="#CCCCCC"> welcome playability</font>

837
00:37:03,010 --> 00:37:08,059
of<font color="#E5E5E5"> Casper pin you</font><font color="#CCCCCC"> can just get a new</font>

838
00:37:05,440 --> 00:37:09,859
<font color="#E5E5E5">exploit plug it in like out</font><font color="#CCCCCC"> I'll</font>

839
00:37:08,059 --> 00:37:11,359
some new hardware security<font color="#E5E5E5"> mechanisms</font>

840
00:37:09,859 --> 00:37:13,969
that are intrinsic<font color="#CCCCCC"> to Iowa's wealth</font>

841
00:37:11,359 --> 00:37:15,170
especially<font color="#E5E5E5"> that are all only enabled on</font>

842
00:37:13,969 --> 00:37:16,880
the<font color="#E5E5E5"> newer phones</font><font color="#CCCCCC"> the newer</font><font color="#E5E5E5"> phones have a</font>

843
00:37:15,170 --> 00:37:18,709
different type of chip that<font color="#E5E5E5"> does</font><font color="#CCCCCC"> like</font>

844
00:37:16,880 --> 00:37:23,900
pointer tagging and a couple other

845
00:37:18,709 --> 00:37:24,799
hardware very specific things<font color="#E5E5E5"> so yeah I</font>

846
00:37:23,900 --> 00:37:27,579
need<font color="#CCCCCC"> to</font><font color="#E5E5E5"> get my hands on one</font><font color="#CCCCCC"> of those</font>

847
00:37:24,799 --> 00:37:31,579
<font color="#CCCCCC">devices and</font><font color="#E5E5E5"> we keep</font><font color="#CCCCCC"> looking at that so</font>

848
00:37:27,579 --> 00:37:33,410
go find some bugs does anybody<font color="#E5E5E5"> have any</font>

849
00:37:31,579 --> 00:38:09,680
questions<font color="#E5E5E5"> I</font><font color="#CCCCCC"> think I'm like</font><font color="#E5E5E5"> three or</font><font color="#CCCCCC"> four</font>

850
00:37:33,410 --> 00:38:12,979
<font color="#E5E5E5">minutes early</font><font color="#CCCCCC"> so yeah</font><font color="#E5E5E5"> nothing yeah so</font>

851
00:38:09,680 --> 00:38:16,729
when you decided that you<font color="#CCCCCC"> wanted to just</font>

852
00:38:12,979 --> 00:38:19,759
<font color="#E5E5E5">overwrite those pointers and go back a</font>

853
00:38:16,729 --> 00:38:22,879
<font color="#CCCCCC">couple slides</font><font color="#E5E5E5"> why didn't you just just</font>

854
00:38:19,759 --> 00:38:25,189
tell the check - just ignore like

855
00:38:22,880 --> 00:38:26,630
everything intent like just change it to

856
00:38:25,189 --> 00:38:28,489
<font color="#E5E5E5">something else</font><font color="#CCCCCC"> some of the directories</font>

857
00:38:26,630 --> 00:38:30,679
then you could<font color="#E5E5E5"> just copy data into temp</font>

858
00:38:28,489 --> 00:38:33,439
and then run it<font color="#E5E5E5"> from there</font><font color="#CCCCCC"> so that is a</font>

859
00:38:30,679 --> 00:38:36,619
viable solution<font color="#CCCCCC"> and I have to validate</font>

860
00:38:33,439 --> 00:38:39,558
<font color="#E5E5E5">what I'm about to say but I believe</font><font color="#CCCCCC"> here</font>

861
00:38:36,619 --> 00:38:41,749
are the the kernel

862
00:38:39,559 --> 00:38:43,699
so there's<font color="#CCCCCC"> KP p which is kernel pad</font>

863
00:38:41,749 --> 00:38:46,038
protects<font color="#E5E5E5"> on oliver executable segments</font>

864
00:38:43,699 --> 00:38:48,559
he<font color="#CCCCCC"> TR r looks at the read only segment</font>

865
00:38:46,039 --> 00:38:50,569
<font color="#E5E5E5">and I believe those permissions with her</font>

866
00:38:48,559 --> 00:38:52,670
part of<font color="#CCCCCC"> seatbelt are inside of the read</font>

867
00:38:50,569 --> 00:38:55,400
only section<font color="#E5E5E5"> so if you change those</font>

868
00:38:52,670 --> 00:38:57,199
watch<font color="#E5E5E5"> watchtowers kind of catch it so I</font>

869
00:38:55,400 --> 00:38:59,509
think that's why<font color="#CCCCCC"> all the jumping around</font>

870
00:38:57,199 --> 00:39:02,079
had to be done<font color="#CCCCCC"> but</font><font color="#E5E5E5"> I I will double check</font>

871
00:38:59,509 --> 00:39:02,079
on that yeah

872
00:39:04,570 --> 00:39:22,280
anybody anybody I'm up here yeah<font color="#CCCCCC"> all</font>

873
00:39:20,060 --> 00:39:23,840
<font color="#CCCCCC">right and I</font><font color="#E5E5E5"> think unless anybody</font><font color="#CCCCCC"> else</font>

874
00:39:22,280 --> 00:39:26,480
doesn't<font color="#E5E5E5"> have the questions we'll finish</font>

875
00:39:23,840 --> 00:39:27,420
a little<font color="#E5E5E5"> early all right thanks</font>

876
00:39:26,480 --> 00:39:34,909
everybody for<font color="#CCCCCC"> coming out</font>

877
00:39:27,420 --> 00:39:34,909
[Applause]

