1
00:00:01,020 --> 00:00:06,119
I'm Harold Ogden<font color="#E5E5E5"> and I'm here this</font>

2
00:00:02,939 --> 00:00:08,460
<font color="#E5E5E5">morning</font><font color="#CCCCCC"> with Carrie Roberts and Kirk</font>

3
00:00:06,120 --> 00:00:12,210
Sayer we're<font color="#E5E5E5"> gonna present on</font><font color="#CCCCCC"> PBS topic</font>

4
00:00:08,460 --> 00:00:14,730
advanced malware document techniques<font color="#CCCCCC"> I a</font>

5
00:00:12,210 --> 00:00:17,190
systems engineer turned<font color="#E5E5E5"> blue team a</font>

6
00:00:14,730 --> 00:00:19,170
<font color="#E5E5E5">couple of years ago</font><font color="#CCCCCC"> I work and at</font>

7
00:00:17,190 --> 00:00:22,260
Walmart doing security operations<font color="#CCCCCC"> and</font>

8
00:00:19,170 --> 00:00:24,210
continuous monitoring and<font color="#CCCCCC"> I'm on the</font>

9
00:00:22,260 --> 00:00:26,599
dynamic defense engineering<font color="#CCCCCC"> Team Blue</font>

10
00:00:24,210 --> 00:00:29,490
<font color="#CCCCCC">team at Walmart Carrie Roberts is a</font>

11
00:00:26,599 --> 00:00:30,570
developer turned red team and she's a

12
00:00:29,490 --> 00:00:32,910
senior

13
00:00:30,570 --> 00:00:34,320
Red Team engineer at Walmart<font color="#E5E5E5"> she's got</font>

14
00:00:32,910 --> 00:00:37,050
her master's information security<font color="#E5E5E5"> from</font>

15
00:00:34,320 --> 00:00:41,610
<font color="#CCCCCC">Sans Technology Institute and then Kurt</font>

16
00:00:37,050 --> 00:00:43,349
Sayer is<font color="#CCCCCC"> academic</font><font color="#E5E5E5"> turn our security tool</font>

17
00:00:41,610 --> 00:00:44,940
researcher<font color="#E5E5E5"> turned blue team he's also</font><font color="#CCCCCC"> in</font>

18
00:00:43,350 --> 00:00:46,860
<font color="#E5E5E5">the dynamic defense engineering team the</font>

19
00:00:44,940 --> 00:00:48,239
blue team with me here at Walmart<font color="#CCCCCC"> he's</font>

20
00:00:46,860 --> 00:00:51,809
got his PhD if<font color="#CCCCCC"> you're science at</font>

21
00:00:48,239 --> 00:00:54,089
University of Tennessee and before we

22
00:00:51,809 --> 00:00:55,949
jump into<font color="#E5E5E5"> the more complicated process</font>

23
00:00:54,090 --> 00:00:59,250
<font color="#E5E5E5">of</font><font color="#CCCCCC"> EPA stopping we're gonna start off</font>

24
00:00:55,949 --> 00:01:00,839
<font color="#CCCCCC">with just</font><font color="#E5E5E5"> some like real</font><font color="#CCCCCC"> VBA crafting</font>

25
00:00:59,250 --> 00:01:02,550
fundamentals for crafting malicious

26
00:01:00,840 --> 00:01:05,040
documents that you may be<font color="#E5E5E5"> using as a</font>

27
00:01:02,550 --> 00:01:06,509
part of an engagement and just to

28
00:01:05,040 --> 00:01:07,650
educate maybe if you're on<font color="#E5E5E5"> the defense</font>

29
00:01:06,510 --> 00:01:09,960
side on some of the things<font color="#CCCCCC"> that we're</font>

30
00:01:07,650 --> 00:01:14,369
<font color="#CCCCCC">seeing real malicious documents do today</font>

31
00:01:09,960 --> 00:01:16,080
that<font color="#E5E5E5"> we've seen be very effective so I</font>

32
00:01:14,369 --> 00:01:17,310
know this<font color="#E5E5E5"> is something everyone's</font>

33
00:01:16,080 --> 00:01:19,798
<font color="#E5E5E5">probably very</font><font color="#CCCCCC"> familiar with at</font><font color="#E5E5E5"> this</font>

34
00:01:17,310 --> 00:01:23,580
<font color="#CCCCCC">point but the old office 97</font><font color="#E5E5E5"> format is a</font>

35
00:01:19,799 --> 00:01:25,080
proprietary<font color="#E5E5E5"> like compound</font><font color="#CCCCCC"> oleh file it's</font>

36
00:01:23,580 --> 00:01:28,229
not compressed<font color="#CCCCCC"> but some of the parts</font><font color="#E5E5E5"> of</font>

37
00:01:25,080 --> 00:01:30,179
it are<font color="#E5E5E5"> and it's usually as we'll look at</font>

38
00:01:28,229 --> 00:01:32,670
in a minute here<font color="#CCCCCC"> name</font><font color="#E5E5E5"> like</font><font color="#CCCCCC"> docx or dot</font>

39
00:01:30,180 --> 00:01:35,159
XLS we've all seen that million times by

40
00:01:32,670 --> 00:01:37,560
now<font color="#E5E5E5"> and then the in 2007 the new open</font>

41
00:01:35,159 --> 00:01:38,939
XML format came out the whole file is

42
00:01:37,560 --> 00:01:41,460
compressed it's all zipped and<font color="#E5E5E5"> you can</font>

43
00:01:38,939 --> 00:01:43,048
like unzip it was 7-zip it's an openness

44
00:01:41,460 --> 00:01:45,360
standard it's really easy to unzip<font color="#CCCCCC"> and</font>

45
00:01:43,049 --> 00:01:49,079
look at the MIT individual parts inside

46
00:01:45,360 --> 00:01:50,729
<font color="#E5E5E5">of it so the one of the things that we</font>

47
00:01:49,079 --> 00:01:51,720
see taken advantage of and<font color="#E5E5E5"> it also will</font>

48
00:01:50,729 --> 00:01:53,490
<font color="#E5E5E5">work to your advantage is that</font>

49
00:01:51,720 --> 00:01:55,770
extensions can lie so like<font color="#E5E5E5"> just because</font>

50
00:01:53,490 --> 00:01:59,339
<font color="#E5E5E5">something's named dot XLS doesn't mean</font>

51
00:01:55,770 --> 00:02:00,780
it's<font color="#CCCCCC"> the old 97</font><font color="#E5E5E5"> format so that's one of</font>

52
00:01:59,340 --> 00:02:01,280
<font color="#CCCCCC">the</font><font color="#E5E5E5"> things that you can take</font><font color="#CCCCCC"> advantage</font>

53
00:02:00,780 --> 00:02:05,130
of

54
00:02:01,280 --> 00:02:07,770
so the XLS will open both the XLS and

55
00:02:05,130 --> 00:02:09,179
xlsm format so<font color="#E5E5E5"> you can have an XLS file</font>

56
00:02:07,770 --> 00:02:13,019
that will run macros on the new

57
00:02:09,179 --> 00:02:13,900
OpenOffice format but if you have an XLS

58
00:02:13,020 --> 00:02:15,909
file this is a

59
00:02:13,900 --> 00:02:18,689
important point<font color="#E5E5E5"> you cannot have a macro</font>

60
00:02:15,909 --> 00:02:21,578
enabled document that's XLS extension

61
00:02:18,689 --> 00:02:22,900
<font color="#CCCCCC">excel and then word for docx they just</font>

62
00:02:21,579 --> 00:02:25,180
refuse<font color="#CCCCCC"> to run macros out of those</font>

63
00:02:22,900 --> 00:02:28,750
extensions<font color="#E5E5E5"> so you don't ever want to</font>

64
00:02:25,180 --> 00:02:31,780
<font color="#E5E5E5">name</font><font color="#CCCCCC"> your files that</font><font color="#E5E5E5"> way so if you're</font>

65
00:02:28,750 --> 00:02:33,129
gonna have to pick a extension<font color="#E5E5E5"> XLS is a</font>

66
00:02:31,780 --> 00:02:36,670
great extension<font color="#E5E5E5"> to pick and you can</font>

67
00:02:33,129 --> 00:02:38,078
<font color="#E5E5E5">rename</font><font color="#CCCCCC"> your xlsm file after you've done</font>

68
00:02:36,670 --> 00:02:40,510
<font color="#E5E5E5">whatever you want to the document and it</font>

69
00:02:38,079 --> 00:02:42,849
<font color="#CCCCCC">will run that can confuse defenders and</font>

70
00:02:40,510 --> 00:02:44,950
<font color="#E5E5E5">confuse signatures because if they are</font>

71
00:02:42,849 --> 00:02:46,238
looking<font color="#CCCCCC"> at an XLS they expect it not to</font>

72
00:02:44,950 --> 00:02:48,760
<font color="#E5E5E5">be compressed and they may be running</font>

73
00:02:46,239 --> 00:02:50,440
signatures against the file in its raw

74
00:02:48,760 --> 00:02:52,120
form<font color="#CCCCCC"> when</font><font color="#E5E5E5"> really they need to be</font>

75
00:02:50,440 --> 00:02:56,200
decompressing at first unzipping and

76
00:02:52,120 --> 00:02:58,599
looking at the<font color="#E5E5E5"> sub parts of the file the</font>

77
00:02:56,200 --> 00:03:01,209
XLS<font color="#E5E5E5"> M format while it can contain macros</font>

78
00:02:58,599 --> 00:03:02,560
I would avoid because it<font color="#CCCCCC"> no one ever</font>

79
00:03:01,209 --> 00:03:04,299
names that file<font color="#CCCCCC"> that unless it's going</font>

80
00:03:02,560 --> 00:03:05,739
<font color="#E5E5E5">to contain macros so it's like a huge</font>

81
00:03:04,299 --> 00:03:10,209
red flag<font color="#E5E5E5"> immediately for defenders and</font>

82
00:03:05,739 --> 00:03:11,590
for signatures so object linking<font color="#E5E5E5"> and</font>

83
00:03:10,209 --> 00:03:13,329
embedding<font color="#CCCCCC"> if you're not familiar with</font><font color="#E5E5E5"> it</font>

84
00:03:11,590 --> 00:03:16,720
<font color="#E5E5E5">it's a</font><font color="#CCCCCC"> proprietary format Microsoft</font>

85
00:03:13,329 --> 00:03:19,269
developed like I<font color="#E5E5E5"> said earlier 97 format</font>

86
00:03:16,720 --> 00:03:21,790
the whole thing is in one big<font color="#CCCCCC"> ole a file</font>

87
00:03:19,269 --> 00:03:23,290
but in the office<font color="#CCCCCC"> 97 there's a I'm</font><font color="#E5E5E5"> sorry</font>

88
00:03:21,790 --> 00:03:26,918
in office 2007 and plus in the

89
00:03:23,290 --> 00:03:28,810
<font color="#E5E5E5">OpenOffice format VBA that you write is</font>

90
00:03:26,919 --> 00:03:30,250
<font color="#E5E5E5">going to be stored in a</font><font color="#CCCCCC"> ole a compound</font>

91
00:03:28,810 --> 00:03:31,599
file that's clearly separate from the

92
00:03:30,250 --> 00:03:33,760
other parts<font color="#CCCCCC"> of the document and it's</font>

93
00:03:31,599 --> 00:03:41,018
gonna be saved as<font color="#E5E5E5"> VBA project dot been</font>

94
00:03:33,760 --> 00:03:42,220
inside that<font color="#E5E5E5"> zip file</font><font color="#CCCCCC"> ok so one of</font><font color="#E5E5E5"> the</font>

95
00:03:41,019 --> 00:03:43,209
first<font color="#CCCCCC"> things you can do to make sure</font>

96
00:03:42,220 --> 00:03:45,549
<font color="#E5E5E5">that you're not getting caught by</font>

97
00:03:43,209 --> 00:03:46,840
<font color="#E5E5E5">detective mechanisms is just like spend</font>

98
00:03:45,549 --> 00:03:51,370
a little<font color="#E5E5E5"> bit</font><font color="#CCCCCC"> of time</font><font color="#E5E5E5"> building</font><font color="#CCCCCC"> your own</font>

99
00:03:46,840 --> 00:03:53,290
VBA payload<font color="#E5E5E5"> and if you go use any of the</font>

100
00:03:51,370 --> 00:03:55,000
<font color="#E5E5E5">off-the-shelf frameworks it's gonna be</font>

101
00:03:53,290 --> 00:03:57,510
kind of a hit or miss for you usually

102
00:03:55,000 --> 00:04:00,609
<font color="#CCCCCC">about 15 20 plus detections across the</font>

103
00:03:57,510 --> 00:04:04,448
<font color="#CCCCCC">sixty</font><font color="#E5E5E5"> antivirus</font><font color="#CCCCCC"> that are like in</font><font color="#E5E5E5"> virus</font>

104
00:04:00,609 --> 00:04:05,500
<font color="#CCCCCC">level today and so what one of the</font>

105
00:04:04,449 --> 00:04:07,780
<font color="#E5E5E5">things that you can do is to start</font>

106
00:04:05,500 --> 00:04:08,829
<font color="#CCCCCC">building these yourselves and one of the</font>

107
00:04:07,780 --> 00:04:10,120
things you're going<font color="#E5E5E5"> to want to do you</font>

108
00:04:08,829 --> 00:04:11,739
can<font color="#CCCCCC"> do other things here these are not</font>

109
00:04:10,120 --> 00:04:14,049
this<font color="#E5E5E5"> is</font><font color="#CCCCCC"> not comprehensive</font><font color="#E5E5E5"> list of things</font>

110
00:04:11,739 --> 00:04:14,889
<font color="#E5E5E5">you can do in a malicious document but</font>

111
00:04:14,049 --> 00:04:17,829
you're gonna want<font color="#CCCCCC"> to create</font><font color="#E5E5E5"> a process</font>

112
00:04:14,889 --> 00:04:19,239
<font color="#E5E5E5">whether it's create like a MSHDA to go</font>

113
00:04:17,829 --> 00:04:21,430
download<font color="#E5E5E5"> your payload if you want to run</font>

114
00:04:19,238 --> 00:04:22,599
PowerShell<font color="#CCCCCC"> you want to run some</font><font color="#E5E5E5"> sort</font><font color="#CCCCCC"> of</font>

115
00:04:21,430 --> 00:04:24,820
an additional<font color="#E5E5E5"> process</font><font color="#CCCCCC"> out of</font><font color="#E5E5E5"> your</font>

116
00:04:22,599 --> 00:04:26,860
document<font color="#CCCCCC"> you can do</font><font color="#E5E5E5"> it with shell you</font>

117
00:04:24,820 --> 00:04:27,760
<font color="#E5E5E5">can create</font><font color="#CCCCCC"> a</font><font color="#E5E5E5"> W script shell object and</font>

118
00:04:26,860 --> 00:04:32,230
run it you<font color="#CCCCCC"> can use</font>

119
00:04:27,760 --> 00:04:34,030
<font color="#E5E5E5">um I to do a process create so to start</font>

120
00:04:32,230 --> 00:04:35,380
with<font color="#E5E5E5"> like here's about the simplest</font>

121
00:04:34,030 --> 00:04:37,630
payload that<font color="#E5E5E5"> you can put into a</font>

122
00:04:35,380 --> 00:04:39,490
malicious<font color="#E5E5E5"> document this</font><font color="#CCCCCC"> will go get</font>

123
00:04:37,630 --> 00:04:41,680
<font color="#E5E5E5">PowerShell from that remote location and</font>

124
00:04:39,490 --> 00:04:42,970
<font color="#E5E5E5">then it'll eval it it'll run it and so</font>

125
00:04:41,680 --> 00:04:45,850
you can<font color="#E5E5E5"> stage your payload somewhere</font>

126
00:04:42,970 --> 00:04:48,280
else but the problem with this is that

127
00:04:45,850 --> 00:04:49,840
<font color="#CCCCCC">your signature father</font><font color="#E5E5E5"> right like you</font>

128
00:04:48,280 --> 00:04:51,460
have things<font color="#E5E5E5"> in</font><font color="#CCCCCC"> here that</font><font color="#E5E5E5"> are really</font><font color="#CCCCCC"> easy</font>

129
00:04:49,840 --> 00:04:53,080
to signature on<font color="#CCCCCC"> in</font><font color="#E5E5E5"> a lot of in of</font><font color="#CCCCCC"> iris</font>

130
00:04:51,460 --> 00:04:55,570
companies have done this because<font color="#E5E5E5"> this</font><font color="#CCCCCC"> is</font>

131
00:04:53,080 --> 00:04:57,849
commonly<font color="#E5E5E5"> used by</font><font color="#CCCCCC"> Mauer today I</font><font color="#E5E5E5"> took this</font>

132
00:04:55,570 --> 00:05:00,430
payload from a malicious<font color="#E5E5E5"> document that</font>

133
00:04:57,850 --> 00:05:03,100
was being<font color="#CCCCCC"> used to to deliver mount</font>

134
00:05:00,430 --> 00:05:05,050
legitimate malware so it's being<font color="#E5E5E5"> looked</font>

135
00:05:03,100 --> 00:05:07,570
for so we're gonna go<font color="#E5E5E5"> through a couple</font>

136
00:05:05,050 --> 00:05:10,330
<font color="#E5E5E5">of steps here</font><font color="#CCCCCC"> to make this get</font><font color="#E5E5E5"> targeted</font>

137
00:05:07,570 --> 00:05:12,159
a little bit less and be more<font color="#E5E5E5"> evasive so</font>

138
00:05:10,330 --> 00:05:13,570
we're gonna off you skate first<font color="#E5E5E5"> now</font>

139
00:05:12,160 --> 00:05:15,040
we're gonna do some generalization<font color="#E5E5E5"> of</font>

140
00:05:13,570 --> 00:05:16,630
like variable names<font color="#E5E5E5"> and make sure that</font>

141
00:05:15,040 --> 00:05:18,460
those things aren't being looked at it's

142
00:05:16,630 --> 00:05:19,930
carefully<font color="#CCCCCC"> then we'll do some anti</font>

143
00:05:18,460 --> 00:05:21,370
analysis at the end to<font color="#E5E5E5"> make sure</font><font color="#CCCCCC"> that</font>

144
00:05:19,930 --> 00:05:25,630
<font color="#E5E5E5">like things like</font><font color="#CCCCCC"> sandboxes are a</font><font color="#E5E5E5"> little</font>

145
00:05:21,370 --> 00:05:27,840
bit less effective against us so the

146
00:05:25,630 --> 00:05:29,830
first thing we<font color="#E5E5E5"> can do is ditch shell and</font>

147
00:05:27,840 --> 00:05:32,770
one of the things you go straight<font color="#CCCCCC"> to is</font>

148
00:05:29,830 --> 00:05:35,830
<font color="#CCCCCC">WMI WMI when you see it and just in the</font>

149
00:05:32,770 --> 00:05:37,690
clear<font color="#E5E5E5"> is a great indication of a</font>

150
00:05:35,830 --> 00:05:39,010
malicious document so it's you go from

151
00:05:37,690 --> 00:05:40,810
shell which<font color="#CCCCCC"> is ambiguous</font><font color="#E5E5E5"> it could be a</font>

152
00:05:39,010 --> 00:05:43,360
<font color="#CCCCCC">business process to WMI which is</font>

153
00:05:40,810 --> 00:05:45,910
probably like<font color="#E5E5E5"> empire because</font><font color="#CCCCCC"> empire uses</font>

154
00:05:43,360 --> 00:05:49,030
<font color="#E5E5E5">that by default so at first it seems</font>

155
00:05:45,910 --> 00:05:51,010
like<font color="#CCCCCC"> going</font><font color="#E5E5E5"> to switching</font><font color="#CCCCCC"> GW mind could be</font>

156
00:05:49,030 --> 00:05:55,450
<font color="#CCCCCC">a bad idea because our initial payload</font>

157
00:05:51,010 --> 00:05:57,130
is being hit by 21<font color="#CCCCCC"> antivirus vendors we</font>

158
00:05:55,450 --> 00:06:00,219
switched to<font color="#E5E5E5"> WM i using the default</font>

159
00:05:57,130 --> 00:06:01,840
<font color="#E5E5E5">empire</font><font color="#CCCCCC"> WMI process create and we go</font><font color="#E5E5E5"> up</font>

160
00:06:00,220 --> 00:06:03,880
to 27 detection<font color="#CCCCCC"> x' so we took a step</font>

161
00:06:01,840 --> 00:06:06,130
<font color="#CCCCCC">back right now almost half of the end of</font>

162
00:06:03,880 --> 00:06:08,790
<font color="#CCCCCC">RS vendors are going to catch us</font><font color="#E5E5E5"> but</font>

163
00:06:06,130 --> 00:06:11,680
then if we<font color="#E5E5E5"> take the empire payload and</font>

164
00:06:08,790 --> 00:06:14,170
we minimize it<font color="#E5E5E5"> we get rid of some of the</font>

165
00:06:11,680 --> 00:06:17,590
optional things there like<font color="#CCCCCC"> the that</font><font color="#E5E5E5"> set</font>

166
00:06:14,170 --> 00:06:19,360
the window<font color="#CCCCCC"> the show window</font><font color="#E5E5E5"> to</font><font color="#CCCCCC"> 0 which</font>

167
00:06:17,590 --> 00:06:21,039
<font color="#E5E5E5">makes the powershell won't blip at the</font>

168
00:06:19,360 --> 00:06:23,260
bottom of the<font color="#CCCCCC"> taskbar for like a half a</font>

169
00:06:21,040 --> 00:06:25,570
second<font color="#E5E5E5"> we lose a little</font><font color="#CCCCCC"> bit there but</font>

170
00:06:23,260 --> 00:06:27,250
<font color="#CCCCCC">now we're</font><font color="#E5E5E5"> back down to</font><font color="#CCCCCC"> the taunted 23</font>

171
00:06:25,570 --> 00:06:32,140
detection<font color="#E5E5E5"> x' which is still again step</font>

172
00:06:27,250 --> 00:06:33,210
back from where<font color="#E5E5E5"> we were however these</font>

173
00:06:32,140 --> 00:06:35,409
are<font color="#E5E5E5"> the things</font><font color="#CCCCCC"> that are being</font><font color="#E5E5E5"> targeted</font>

174
00:06:33,210 --> 00:06:38,229
by signatures<font color="#E5E5E5"> that</font><font color="#CCCCCC"> are out there</font><font color="#E5E5E5"> today</font>

175
00:06:35,410 --> 00:06:40,000
<font color="#CCCCCC">like the antivirus companies are looking</font>

176
00:06:38,230 --> 00:06:41,800
<font color="#CCCCCC">for these to say these</font><font color="#E5E5E5"> are bad documents</font>

177
00:06:40,000 --> 00:06:44,080
this<font color="#E5E5E5"> is bad DBA these are things</font>

178
00:06:41,800 --> 00:06:48,729
we want to block coming into an

179
00:06:44,080 --> 00:06:50,650
<font color="#E5E5E5">environment so</font><font color="#CCCCCC"> WMI is bad but</font><font color="#E5E5E5"> the</font><font color="#CCCCCC"> get</font>

180
00:06:48,729 --> 00:06:52,389
object we're using<font color="#E5E5E5"> to create that</font><font color="#CCCCCC"> WMI is</font>

181
00:06:50,650 --> 00:06:55,359
ambiguous it's not necessarily bad by

182
00:06:52,389 --> 00:06:58,419
itself<font color="#CCCCCC"> it's</font><font color="#E5E5E5"> just those like when MGMT s</font>

183
00:06:55,360 --> 00:07:01,000
and other common strings<font color="#E5E5E5"> so if all we do</font>

184
00:06:58,419 --> 00:07:02,680
<font color="#CCCCCC">is reverse those strings we don't spend</font>

185
00:07:01,000 --> 00:07:05,020
a whole<font color="#E5E5E5"> lot of time here and we</font><font color="#CCCCCC"> never</font>

186
00:07:02,680 --> 00:07:07,659
<font color="#E5E5E5">down down to seven detentions</font><font color="#CCCCCC"> so that's</font>

187
00:07:05,020 --> 00:07:09,370
like<font color="#E5E5E5"> the most simple of obfuscation we</font>

188
00:07:07,659 --> 00:07:13,030
see malicious documents and malicious

189
00:07:09,370 --> 00:07:14,650
<font color="#E5E5E5">vba do this but people have written</font>

190
00:07:13,030 --> 00:07:17,469
signatures for reverse strings people

191
00:07:14,650 --> 00:07:18,818
look for backwards HTTP and in the

192
00:07:17,470 --> 00:07:20,380
slashes and things like<font color="#CCCCCC"> that</font><font color="#E5E5E5"> because</font>

193
00:07:18,819 --> 00:07:22,599
<font color="#E5E5E5">they know</font><font color="#CCCCCC"> we're you know reversing</font><font color="#E5E5E5"> these</font>

194
00:07:20,380 --> 00:07:24,610
things happens so it's not<font color="#E5E5E5"> going to be a</font>

195
00:07:22,599 --> 00:07:27,580
very<font color="#E5E5E5"> future proofed obfuscation method</font>

196
00:07:24,610 --> 00:07:28,750
for you but that's<font color="#E5E5E5"> all it took</font><font color="#CCCCCC"> to go</font>

197
00:07:27,580 --> 00:07:30,099
<font color="#E5E5E5">down to seven</font><font color="#CCCCCC"> was we just</font><font color="#E5E5E5"> flipped</font>

198
00:07:28,750 --> 00:07:31,960
everything<font color="#CCCCCC"> backwards so no you can't see</font>

199
00:07:30,099 --> 00:07:33,669
those in<font color="#CCCCCC"> the in</font><font color="#E5E5E5"> their plain form if</font>

200
00:07:31,960 --> 00:07:35,020
you're gonna build a larger payload<font color="#E5E5E5"> you</font>

201
00:07:33,669 --> 00:07:37,930
<font color="#E5E5E5">don't want to keep calling string</font>

202
00:07:35,020 --> 00:07:41,440
reverse over and over so we will often

203
00:07:37,930 --> 00:07:43,120
stub that<font color="#E5E5E5"> out to a function and then</font>

204
00:07:41,440 --> 00:07:44,949
you'll<font color="#E5E5E5"> just call whatever function you</font>

205
00:07:43,120 --> 00:07:47,080
you move<font color="#E5E5E5"> that to over and over so the</font>

206
00:07:44,949 --> 00:07:52,930
string reverse won't show<font color="#CCCCCC"> up like 50</font>

207
00:07:47,080 --> 00:07:54,370
times<font color="#E5E5E5"> in your document so you can't</font>

208
00:07:52,930 --> 00:07:56,199
<font color="#E5E5E5">always avoid using a method but if you</font>

209
00:07:54,370 --> 00:07:58,050
have to use<font color="#CCCCCC"> a</font><font color="#E5E5E5"> method only use it once</font><font color="#CCCCCC"> to</font>

210
00:07:56,199 --> 00:08:00,370
<font color="#E5E5E5">stuff it out like we looked at before</font>

211
00:07:58,050 --> 00:08:02,139
<font color="#E5E5E5">off you skate all the strings in the</font>

212
00:08:00,370 --> 00:08:03,909
<font color="#E5E5E5">data that you can so</font><font color="#CCCCCC"> that it'll make</font>

213
00:08:02,139 --> 00:08:05,110
<font color="#E5E5E5">your payload hard to signature and use</font>

214
00:08:03,909 --> 00:08:07,150
variable and function names that are

215
00:08:05,110 --> 00:08:08,830
hard to signature as well so we've been

216
00:08:07,150 --> 00:08:12,400
<font color="#E5E5E5">talking</font><font color="#CCCCCC"> about using excel in this</font><font color="#E5E5E5"> so far</font>

217
00:08:08,830 --> 00:08:14,529
and there's things<font color="#E5E5E5"> that are really</font>

218
00:08:12,400 --> 00:08:16,719
<font color="#CCCCCC">common in excel</font><font color="#E5E5E5"> and that's numbers and</font>

219
00:08:14,529 --> 00:08:18,759
like calendar calendar<font color="#E5E5E5"> apps people have</font>

220
00:08:16,719 --> 00:08:20,199
written in Excel macros<font color="#CCCCCC"> so the first</font>

221
00:08:18,759 --> 00:08:22,120
thing we're gonna<font color="#E5E5E5"> do is take our payload</font>

222
00:08:20,199 --> 00:08:23,979
and we're gonna rock like in this case

223
00:08:22,120 --> 00:08:27,819
<font color="#CCCCCC">rock 19 all of it and just</font><font color="#E5E5E5"> store it as</font>

224
00:08:23,979 --> 00:08:30,430
one big array of numbers<font color="#E5E5E5"> we're not going</font>

225
00:08:27,819 --> 00:08:31,750
<font color="#E5E5E5">to store it in like in an array with any</font>

226
00:08:30,430 --> 00:08:32,919
kind of delimiter because those get

227
00:08:31,750 --> 00:08:34,450
looked for those<font color="#E5E5E5"> are really suspicious</font>

228
00:08:32,919 --> 00:08:36,640
<font color="#E5E5E5">in</font><font color="#CCCCCC"> macro</font><font color="#E5E5E5"> so it's gonna be one</font><font color="#CCCCCC"> two big</font>

229
00:08:34,450 --> 00:08:42,310
block of<font color="#E5E5E5"> numbers and now our payload</font>

230
00:08:36,640 --> 00:08:44,380
looks like this so then we're<font color="#E5E5E5"> going to</font>

231
00:08:42,309 --> 00:08:46,180
name all of<font color="#E5E5E5"> our</font><font color="#CCCCCC"> functions that</font><font color="#E5E5E5"> we use to</font>

232
00:08:44,380 --> 00:08:49,029
decode<font color="#E5E5E5"> this after months of the year and</font>

233
00:08:46,180 --> 00:08:50,649
days of<font color="#E5E5E5"> the</font><font color="#CCCCCC"> week and if you</font><font color="#E5E5E5"> try to write</font>

234
00:08:49,029 --> 00:08:51,880
<font color="#E5E5E5">a signature looking for days of the week</font>

235
00:08:50,649 --> 00:08:52,720
<font color="#E5E5E5">and months of the year in Excel then</font>

236
00:08:51,880 --> 00:08:54,459
you're gonna get a lot<font color="#CCCCCC"> of false</font>

237
00:08:52,720 --> 00:08:55,240
<font color="#CCCCCC">positives this is something that</font><font color="#E5E5E5"> we can</font>

238
00:08:54,459 --> 00:08:59,469
do do

239
00:08:55,240 --> 00:09:01,540
hopefully not<font color="#E5E5E5"> get it detected and then</font>

240
00:08:59,470 --> 00:09:03,220
<font color="#E5E5E5">our main function there goes and does to</font>

241
00:09:01,540 --> 00:09:05,890
do all the decoding so we'll call<font color="#CCCCCC"> June</font>

242
00:09:03,220 --> 00:09:07,990
<font color="#CCCCCC">any time we want</font><font color="#E5E5E5"> to decode a string and</font>

243
00:09:05,890 --> 00:09:11,920
that<font color="#E5E5E5"> is our main function</font><font color="#CCCCCC"> there and now</font>

244
00:09:07,990 --> 00:09:13,540
you'll notice<font color="#E5E5E5"> that when you do a</font><font color="#CCCCCC"> BMI</font>

245
00:09:11,920 --> 00:09:16,750
<font color="#E5E5E5">process create normally the arguments</font>

246
00:09:13,540 --> 00:09:18,279
are<font color="#CCCCCC"> gonna be like 0 0 null but</font><font color="#E5E5E5"> VBA is</font>

247
00:09:16,750 --> 00:09:20,020
really nice<font color="#E5E5E5"> and they will take</font>

248
00:09:18,279 --> 00:09:21,700
uninitialized variables and return them

249
00:09:20,020 --> 00:09:23,199
as nulls or<font color="#E5E5E5"> zeros for you so you don't</font>

250
00:09:21,700 --> 00:09:24,850
<font color="#E5E5E5">have</font><font color="#CCCCCC"> to</font><font color="#E5E5E5"> leave that pattern intact for</font>

251
00:09:23,200 --> 00:09:26,170
signatures<font color="#CCCCCC"> so you can just</font><font color="#E5E5E5"> say you</font><font color="#CCCCCC"> know</font>

252
00:09:24,850 --> 00:09:27,520
<font color="#E5E5E5">I've never used these variables I'm</font>

253
00:09:26,170 --> 00:09:29,229
<font color="#E5E5E5">gonna put in these random words here and</font>

254
00:09:27,520 --> 00:09:32,380
these<font color="#E5E5E5"> are gonna return</font><font color="#CCCCCC"> Knolls and</font><font color="#E5E5E5"> zeros</font>

255
00:09:29,230 --> 00:09:34,330
<font color="#E5E5E5">for me and these here</font><font color="#CCCCCC"> are our win</font><font color="#E5E5E5"> MGMT s</font>

256
00:09:32,380 --> 00:09:36,850
and our win32 process<font color="#E5E5E5"> so these are no</font>

257
00:09:34,330 --> 00:09:40,810
<font color="#E5E5E5">longer playing strings that</font><font color="#CCCCCC"> signatures</font>

258
00:09:36,850 --> 00:09:42,360
can key off<font color="#CCCCCC"> of so now we're back</font><font color="#E5E5E5"> down to</font>

259
00:09:40,810 --> 00:09:45,670
<font color="#CCCCCC">7 where we were with</font><font color="#E5E5E5"> the string reverse</font>

260
00:09:42,360 --> 00:09:47,470
<font color="#E5E5E5">however now we have the support for an</font>

261
00:09:45,670 --> 00:09:49,000
arbitrarily large payload we can bring

262
00:09:47,470 --> 00:09:50,170
<font color="#E5E5E5">anything we want with</font><font color="#CCCCCC"> us</font><font color="#E5E5E5"> and make it as</font>

263
00:09:49,000 --> 00:09:52,000
large<font color="#E5E5E5"> as we want it's gonna look the</font>

264
00:09:50,170 --> 00:09:56,949
<font color="#CCCCCC">same as this</font><font color="#E5E5E5"> because it's all encoded in</font>

265
00:09:52,000 --> 00:09:57,940
<font color="#E5E5E5">this in this big encoded payload but we</font>

266
00:09:56,950 --> 00:09:59,140
<font color="#E5E5E5">could take it a little</font><font color="#CCCCCC"> further by</font>

267
00:09:57,940 --> 00:10:02,470
implementing<font color="#E5E5E5"> some anti sandbox</font>

268
00:09:59,140 --> 00:10:05,170
<font color="#E5E5E5">techniques</font><font color="#CCCCCC"> so the first one we're gonna</font>

269
00:10:02,470 --> 00:10:06,970
<font color="#CCCCCC">use has been documented many times</font><font color="#E5E5E5"> and</font>

270
00:10:05,170 --> 00:10:09,430
we took a lot<font color="#CCCCCC"> of inspiration from like</font>

271
00:10:06,970 --> 00:10:10,620
<font color="#CCCCCC">piei fish macro and there's a</font><font color="#E5E5E5"> bola</font>

272
00:10:09,430 --> 00:10:14,170
<font color="#E5E5E5">there's been some good talks about</font>

273
00:10:10,620 --> 00:10:17,079
keying<font color="#E5E5E5"> so far here at Derby</font><font color="#CCCCCC"> calm</font><font color="#E5E5E5"> and</font>

274
00:10:14,170 --> 00:10:18,729
this is really effective against the<font color="#E5E5E5"> VMS</font>

275
00:10:17,079 --> 00:10:19,930
they're not domain joined<font color="#E5E5E5"> right so we</font>

276
00:10:18,730 --> 00:10:21,550
just<font color="#CCCCCC"> see if the computer names</font><font color="#E5E5E5"> the same</font>

277
00:10:19,930 --> 00:10:23,410
<font color="#E5E5E5">as the user domain and if it is then</font>

278
00:10:21,550 --> 00:10:25,750
just<font color="#E5E5E5"> don't run and we just use an</font>

279
00:10:23,410 --> 00:10:27,219
English dictionary to populate the

280
00:10:25,750 --> 00:10:31,300
variable<font color="#CCCCCC"> names so that it's not</font><font color="#E5E5E5"> ever</font>

281
00:10:27,220 --> 00:10:33,160
<font color="#E5E5E5">gonna be the</font><font color="#CCCCCC"> same and then we do an anti</font>

282
00:10:31,300 --> 00:10:35,500
<font color="#CCCCCC">Fignon</font><font color="#E5E5E5"> technique and we saw this used by</font>

283
00:10:33,160 --> 00:10:37,300
like the wanna cry<font color="#E5E5E5"> malware where you</font>

284
00:10:35,500 --> 00:10:39,130
just go try<font color="#E5E5E5"> to</font><font color="#CCCCCC"> access something</font><font color="#E5E5E5"> that</font>

285
00:10:37,300 --> 00:10:41,260
doesn't<font color="#CCCCCC"> exist</font><font color="#E5E5E5"> so in this case</font><font color="#CCCCCC"> location</font>

286
00:10:39,130 --> 00:10:43,420
not Microsoft<font color="#CCCCCC"> com is a non-existent</font>

287
00:10:41,260 --> 00:10:45,250
domain<font color="#E5E5E5"> so if we're inside</font><font color="#CCCCCC"> of a VM and</font>

288
00:10:43,420 --> 00:10:47,949
they're fake netting us it will respond

289
00:10:45,250 --> 00:10:51,070
<font color="#E5E5E5">and we know we're in a VM with fake net</font>

290
00:10:47,950 --> 00:10:52,959
and we don't do anything<font color="#CCCCCC"> now the</font>

291
00:10:51,070 --> 00:10:59,230
interesting<font color="#E5E5E5"> thing</font><font color="#CCCCCC"> here that</font><font color="#E5E5E5"> we didn't</font>

292
00:10:52,959 --> 00:11:00,670
initially expect is<font color="#E5E5E5"> that our detection</font>

293
00:10:59,230 --> 00:11:02,380
<font color="#E5E5E5">rate went down when we implemented</font><font color="#CCCCCC"> these</font>

294
00:11:00,670 --> 00:11:05,800
things so we went<font color="#CCCCCC"> down to</font><font color="#E5E5E5"> 6 upon initial</font>

295
00:11:02,380 --> 00:11:07,360
implementation then whenever<font color="#E5E5E5"> we obvious</font>

296
00:11:05,800 --> 00:11:09,120
gated we didn't we don't down to the<font color="#CCCCCC"> 3</font>

297
00:11:07,360 --> 00:11:11,790
which indicates that there

298
00:11:09,120 --> 00:11:14,399
some emulation<font color="#CCCCCC"> going on</font><font color="#E5E5E5"> inside these</font><font color="#CCCCCC"> a V</font>

299
00:11:11,790 --> 00:11:17,519
engines so by implementing anti<font color="#CCCCCC"> fake</font><font color="#E5E5E5"> net</font>

300
00:11:14,399 --> 00:11:19,350
<font color="#CCCCCC">and anti virtual machine analysis the</font>

301
00:11:17,519 --> 00:11:21,480
analysis of some of our VBA macros was

302
00:11:19,350 --> 00:11:23,249
failing<font color="#CCCCCC"> or it was not detecting it as</font>

303
00:11:21,480 --> 00:11:24,600
malicious<font color="#E5E5E5"> so now we're down to</font><font color="#CCCCCC"> three</font>

304
00:11:23,249 --> 00:11:26,730
<font color="#E5E5E5">detection</font><font color="#CCCCCC"> x' where we started at like</font>

305
00:11:24,600 --> 00:11:28,259
<font color="#CCCCCC">twenty one to twenty six and now we're</font>

306
00:11:26,730 --> 00:11:29,699
at a<font color="#E5E5E5"> pretty good spot where we're</font>

307
00:11:28,259 --> 00:11:32,670
evading the majority<font color="#CCCCCC"> of antivirus but we</font>

308
00:11:29,699 --> 00:11:35,459
can take<font color="#E5E5E5"> it further and so we're going</font>

309
00:11:32,670 --> 00:11:39,149
to look at how they're<font color="#E5E5E5"> analyzing these</font>

310
00:11:35,459 --> 00:11:40,290
VBA macros so<font color="#CCCCCC"> they're the security</font>

311
00:11:39,149 --> 00:11:42,389
products are looking at the compressed

312
00:11:40,290 --> 00:11:44,370
VBA source code to analyze all these

313
00:11:42,389 --> 00:11:45,629
things we've written so far<font color="#CCCCCC"> but what if</font>

314
00:11:44,370 --> 00:11:47,430
we didn't need the source what if we

315
00:11:45,629 --> 00:11:49,620
didn't need<font color="#E5E5E5"> though that information that</font>

316
00:11:47,430 --> 00:11:52,079
<font color="#E5E5E5">all of the analysis tools are looking at</font>

317
00:11:49,620 --> 00:11:53,999
so the next thing we're<font color="#CCCCCC"> going to do</font><font color="#E5E5E5"> is</font>

318
00:11:52,079 --> 00:12:02,819
looking at stomping the VBA<font color="#E5E5E5"> but the</font>

319
00:11:53,999 --> 00:12:04,680
macros will still run hello<font color="#CCCCCC"> Kerry</font>

320
00:12:02,819 --> 00:12:09,329
Roberts here and I'm<font color="#E5E5E5"> going to talk</font><font color="#CCCCCC"> about</font>

321
00:12:04,680 --> 00:12:11,189
<font color="#E5E5E5">VBA stomping so before we get into VB so</font>

322
00:12:09,329 --> 00:12:13,559
I mean let's<font color="#E5E5E5"> talk a little bit about how</font>

323
00:12:11,189 --> 00:12:15,449
the macros are stored and Harold

324
00:12:13,559 --> 00:12:17,790
mentioned they're stored in a file

325
00:12:15,449 --> 00:12:20,609
called VBA project bin<font color="#E5E5E5"> at least by</font>

326
00:12:17,790 --> 00:12:23,248
default that<font color="#E5E5E5"> can be changed</font><font color="#CCCCCC"> but</font><font color="#E5E5E5"> they're</font>

327
00:12:20,610 --> 00:12:25,110
stored in<font color="#E5E5E5"> or can be stored in three</font>

328
00:12:23,249 --> 00:12:27,089
<font color="#E5E5E5">different</font><font color="#CCCCCC"> ways first is</font><font color="#E5E5E5"> the source code</font>

329
00:12:25,110 --> 00:12:29,220
<font color="#E5E5E5">like what the developer actually types</font>

330
00:12:27,089 --> 00:12:31,199
in so a lot of<font color="#E5E5E5"> what you just saw that</font>

331
00:12:29,220 --> 00:12:33,209
it's stored<font color="#CCCCCC"> in</font><font color="#E5E5E5"> that format but it's</font>

332
00:12:31,199 --> 00:12:35,160
compressed so it looks a little<font color="#E5E5E5"> bit</font>

333
00:12:33,209 --> 00:12:38,518
jumbled but<font color="#E5E5E5"> a compressed source code</font>

334
00:12:35,160 --> 00:12:40,319
<font color="#E5E5E5">next is as a compiled pseudocode kind of</font>

335
00:12:38,519 --> 00:12:42,870
like assembly language that we call it

336
00:12:40,319 --> 00:12:46,469
it's called<font color="#CCCCCC"> P code and that's</font><font color="#E5E5E5"> actually</font>

337
00:12:42,870 --> 00:12:49,350
<font color="#E5E5E5">what executes most of the time</font><font color="#CCCCCC"> in a</font>

338
00:12:46,470 --> 00:12:51,389
<font color="#E5E5E5">document and the third is</font><font color="#CCCCCC"> XE codes but</font>

339
00:12:49,350 --> 00:12:52,920
<font color="#E5E5E5">I'm not talking about that here but dr.</font>

340
00:12:51,389 --> 00:12:55,319
<font color="#CCCCCC">bond</font><font color="#E5E5E5"> Sheva has a write-up on it on his</font>

341
00:12:52,920 --> 00:12:59,719
<font color="#E5E5E5">get up there if you</font><font color="#CCCCCC"> want</font><font color="#E5E5E5"> to read more</font>

342
00:12:55,319 --> 00:13:02,939
<font color="#CCCCCC">about this so on your left you see</font><font color="#E5E5E5"> the</font>

343
00:12:59,720 --> 00:13:05,249
<font color="#CCCCCC">visual basic</font><font color="#E5E5E5"> editor which you use</font><font color="#CCCCCC"> to</font>

344
00:13:02,939 --> 00:13:07,910
develop your macros from from word so

345
00:13:05,249 --> 00:13:11,040
you<font color="#E5E5E5"> see a subroutine there</font><font color="#CCCCCC"> auto</font><font color="#E5E5E5"> open</font>

346
00:13:07,910 --> 00:13:14,819
with a message box<font color="#E5E5E5"> ABC the way</font><font color="#CCCCCC"> that's</font>

347
00:13:11,040 --> 00:13:17,250
stored in the word<font color="#E5E5E5"> document in the VBA</font>

348
00:13:14,819 --> 00:13:18,990
project<font color="#CCCCCC"> bin file is shown in blue down</font>

349
00:13:17,250 --> 00:13:20,759
there you see the hex on the left and on

350
00:13:18,990 --> 00:13:22,830
the<font color="#E5E5E5"> right</font><font color="#CCCCCC"> you see</font><font color="#E5E5E5"> any readable string so</font>

351
00:13:20,759 --> 00:13:25,620
you<font color="#CCCCCC"> see sub auto</font><font color="#E5E5E5"> open</font>

352
00:13:22,830 --> 00:13:28,110
<font color="#E5E5E5">messagebox ABC and it's a little jumbled</font>

353
00:13:25,620 --> 00:13:29,700
because it's actually<font color="#E5E5E5"> compressed and you</font>

354
00:13:28,110 --> 00:13:31,980
know this<font color="#E5E5E5"> kind of seems like it's not</font>

355
00:13:29,700 --> 00:13:36,740
compressed<font color="#CCCCCC"> that well because it's like</font>

356
00:13:31,980 --> 00:13:40,890
bigger but they call that compressed<font color="#CCCCCC"> vba</font>

357
00:13:36,740 --> 00:13:43,290
<font color="#E5E5E5">so on the right is the</font><font color="#CCCCCC"> P code so up in</font>

358
00:13:40,890 --> 00:13:46,920
the black<font color="#E5E5E5"> it looks</font><font color="#CCCCCC"> a little readable</font>

359
00:13:43,290 --> 00:13:48,930
there but that's just as<font color="#E5E5E5"> it favored us</font>

360
00:13:46,920 --> 00:13:51,360
we can kind of see the function

361
00:13:48,930 --> 00:13:53,250
definitions we can see a string of ABC

362
00:13:51,360 --> 00:13:54,900
declared and an argument<font color="#CCCCCC"> call but</font><font color="#E5E5E5"> when</font>

363
00:13:53,250 --> 00:13:56,850
you look<font color="#E5E5E5"> at that actually in the binary</font>

364
00:13:54,900 --> 00:13:59,160
<font color="#E5E5E5">file</font><font color="#CCCCCC"> it looks like that down below a</font>

365
00:13:56,850 --> 00:14:00,540
bunch of hex<font color="#E5E5E5"> which if you look</font><font color="#CCCCCC"> at the</font>

366
00:13:59,160 --> 00:14:03,270
readable strings the only thing you can

367
00:14:00,540 --> 00:14:07,230
really decipher easily from that<font color="#E5E5E5"> P code</font>

368
00:14:03,270 --> 00:14:10,020
is the string ABC<font color="#E5E5E5"> so those are two ways</font>

369
00:14:07,230 --> 00:14:16,410
<font color="#E5E5E5">that's stored in the</font><font color="#CCCCCC"> vba project up</font><font color="#E5E5E5"> in</font>

370
00:14:10,020 --> 00:14:18,300
file<font color="#CCCCCC"> i pushed</font><font color="#E5E5E5"> the</font><font color="#CCCCCC"> wrong hero okay so</font>

371
00:14:16,410 --> 00:14:20,459
we're gonna play a<font color="#CCCCCC"> little</font><font color="#E5E5E5"> bit with the</font>

372
00:14:18,300 --> 00:14:23,819
compressed<font color="#E5E5E5"> vba source</font><font color="#CCCCCC"> so we're going to</font>

373
00:14:20,460 --> 00:14:26,490
go<font color="#E5E5E5"> into the</font><font color="#CCCCCC"> vba project up in file and</font>

374
00:14:23,820 --> 00:14:29,370
we're<font color="#CCCCCC"> going to change</font><font color="#E5E5E5"> the string ABC</font><font color="#CCCCCC"> in</font>

375
00:14:26,490 --> 00:14:42,210
<font color="#E5E5E5">the</font><font color="#CCCCCC"> compressed source code to XYZ</font><font color="#E5E5E5"> and</font>

376
00:14:29,370 --> 00:14:45,240
<font color="#E5E5E5">save it and see what happens okay</font><font color="#CCCCCC"> so</font>

377
00:14:42,210 --> 00:14:49,650
here we<font color="#CCCCCC"> have our ABC document</font><font color="#E5E5E5"> it's got</font>

378
00:14:45,240 --> 00:14:52,350
that simple<font color="#E5E5E5"> message box pop-up and we're</font>

379
00:14:49,650 --> 00:14:54,420
gonna open<font color="#CCCCCC"> this with 7-zip so we get a</font>

380
00:14:52,350 --> 00:14:58,020
7-zip<font color="#E5E5E5"> open archive the nice thing about</font>

381
00:14:54,420 --> 00:15:00,000
7-zip<font color="#E5E5E5"> is it can open up a zip file and</font>

382
00:14:58,020 --> 00:15:02,340
let you look inside and even<font color="#E5E5E5"> edit</font>

383
00:15:00,000 --> 00:15:03,720
<font color="#CCCCCC">something and when</font><font color="#E5E5E5"> you exit it'll zip it</font>

384
00:15:02,340 --> 00:15:05,760
all back up<font color="#E5E5E5"> for you so you</font><font color="#CCCCCC"> don't</font><font color="#E5E5E5"> have to</font>

385
00:15:03,720 --> 00:15:08,640
like unzip it all and then<font color="#E5E5E5"> reads if it</font>

386
00:15:05,760 --> 00:15:10,620
all manually<font color="#E5E5E5"> so here we have the</font><font color="#CCCCCC"> doc my</font>

387
00:15:08,640 --> 00:15:12,150
<font color="#E5E5E5">opened and we see it's just a</font>

388
00:15:10,620 --> 00:15:13,830
compilation of a bunch of other files

389
00:15:12,150 --> 00:15:16,050
<font color="#E5E5E5">and directories so we have a doc</font>

390
00:15:13,830 --> 00:15:18,840
properties directory<font color="#E5E5E5"> a word directory</font>

391
00:15:16,050 --> 00:15:21,660
inside the word directory you'll find

392
00:15:18,840 --> 00:15:23,820
the<font color="#E5E5E5"> vba project dot bin and that's the</font>

393
00:15:21,660 --> 00:15:26,069
thing we want<font color="#E5E5E5"> to edit so we</font><font color="#CCCCCC"> right click</font>

394
00:15:23,820 --> 00:15:29,720
<font color="#E5E5E5">on this</font><font color="#CCCCCC"> and we're gonna</font><font color="#E5E5E5"> say open</font><font color="#CCCCCC"> outside</font>

395
00:15:26,070 --> 00:15:33,600
which<font color="#CCCCCC"> means open it with our</font><font color="#E5E5E5"> third-party</font>

396
00:15:29,720 --> 00:15:35,880
program for opening bin files and<font color="#CCCCCC"> i have</font>

397
00:15:33,600 --> 00:15:36,570
my system set to open<font color="#CCCCCC"> a bin file with</font>

398
00:15:35,880 --> 00:15:39,960
the

399
00:15:36,570 --> 00:15:41,520
<font color="#E5E5E5">hxd hex editor that</font><font color="#CCCCCC"> I have</font><font color="#E5E5E5"> installed so</font>

400
00:15:39,960 --> 00:15:43,650
when I click open outside<font color="#E5E5E5"> it's</font><font color="#CCCCCC"> going to</font>

401
00:15:41,520 --> 00:15:47,240
open<font color="#E5E5E5"> up right up in the hex editor and</font>

402
00:15:43,650 --> 00:15:49,350
we're going<font color="#E5E5E5"> to search</font><font color="#CCCCCC"> for</font><font color="#E5E5E5"> the string ABC</font>

403
00:15:47,240 --> 00:15:51,870
<font color="#E5E5E5">because</font><font color="#CCCCCC"> that's what we</font><font color="#E5E5E5"> want to play with</font>

404
00:15:49,350 --> 00:15:54,390
<font color="#CCCCCC">so we search for</font><font color="#E5E5E5"> that</font><font color="#CCCCCC"> and the first</font>

405
00:15:51,870 --> 00:15:56,850
place we<font color="#CCCCCC"> find</font><font color="#E5E5E5"> it we can recognize the</font>

406
00:15:54,390 --> 00:15:59,400
<font color="#CCCCCC">peacoat here we see the string ABC</font><font color="#E5E5E5"> but</font>

407
00:15:56,850 --> 00:16:01,080
we don't understand much else<font color="#E5E5E5"> there and</font>

408
00:15:59,400 --> 00:16:03,750
down below<font color="#CCCCCC"> we see</font><font color="#E5E5E5"> it in the second spot</font>

409
00:16:01,080 --> 00:16:06,450
<font color="#CCCCCC">and we see that that's the compressed</font>

410
00:16:03,750 --> 00:16:09,060
<font color="#CCCCCC">BBA source so</font><font color="#E5E5E5"> we kind of can read</font><font color="#CCCCCC"> sub</font>

411
00:16:06,450 --> 00:16:10,560
<font color="#CCCCCC">auto open message</font><font color="#E5E5E5"> box ABC so that's</font>

412
00:16:09,060 --> 00:16:13,680
where we want<font color="#CCCCCC"> to play</font><font color="#E5E5E5"> with so we're</font>

413
00:16:10,560 --> 00:16:20,000
going to change that<font color="#E5E5E5"> ABC string to XYZ</font>

414
00:16:13,680 --> 00:16:25,530
<font color="#E5E5E5">and see how words behave so we save</font><font color="#CCCCCC"> that</font>

415
00:16:20,000 --> 00:16:27,030
we exit out<font color="#E5E5E5"> of here and again 7-zip is</font>

416
00:16:25,530 --> 00:16:29,430
nice because<font color="#E5E5E5"> it says you change this</font>

417
00:16:27,030 --> 00:16:32,089
file<font color="#E5E5E5"> if you want to zip that back up and</font>

418
00:16:29,430 --> 00:16:35,819
<font color="#E5E5E5">make it part of the original</font><font color="#CCCCCC"> doc</font><font color="#E5E5E5"> M file</font>

419
00:16:32,090 --> 00:16:37,350
and you<font color="#E5E5E5"> you say</font><font color="#CCCCCC"> ok</font><font color="#E5E5E5"> and then it just does</font>

420
00:16:35,820 --> 00:16:40,710
that<font color="#CCCCCC"> for you you could do</font><font color="#E5E5E5"> this with a</font>

421
00:16:37,350 --> 00:16:44,430
regular zip tool but it's more steps so

422
00:16:40,710 --> 00:16:47,850
<font color="#CCCCCC">that some 7-zip is</font><font color="#E5E5E5"> nice in that way ok</font>

423
00:16:44,430 --> 00:16:50,339
so now we<font color="#E5E5E5"> have the ABC doc and file</font>

424
00:16:47,850 --> 00:16:52,350
where we've tinkered with<font color="#CCCCCC"> the</font><font color="#E5E5E5"> VBA source</font>

425
00:16:50,340 --> 00:16:54,150
but we<font color="#CCCCCC"> haven't touched the P code</font><font color="#E5E5E5"> so</font>

426
00:16:52,350 --> 00:16:56,520
before we enable content<font color="#CCCCCC"> we're going to</font>

427
00:16:54,150 --> 00:17:01,949
go over<font color="#CCCCCC"> to the Developer tab</font><font color="#E5E5E5"> and bring</font>

428
00:16:56,520 --> 00:17:03,569
up the visual<font color="#CCCCCC"> basic editor and so in the</font>

429
00:17:01,950 --> 00:17:06,150
visual<font color="#CCCCCC"> basic</font><font color="#E5E5E5"> editor it looks like we</font>

430
00:17:03,570 --> 00:17:07,980
have a macro<font color="#CCCCCC"> that when we enable it it's</font>

431
00:17:06,150 --> 00:17:12,270
going<font color="#E5E5E5"> to pop up a message box that says</font>

432
00:17:07,980 --> 00:17:16,530
X<font color="#E5E5E5"> Y Z and so we're okay with</font><font color="#CCCCCC"> that so we</font>

433
00:17:12,270 --> 00:17:18,689
go ahead and we enable content but to

434
00:17:16,530 --> 00:17:21,329
<font color="#CCCCCC">our surprise</font><font color="#E5E5E5"> it doesn't say X Y Z like</font>

435
00:17:18,689 --> 00:17:25,320
it said<font color="#E5E5E5"> it was going to say it says ABC</font>

436
00:17:21,329 --> 00:17:32,399
so clearly<font color="#E5E5E5"> it was the P code that got</font>

437
00:17:25,319 --> 00:17:36,320
executed<font color="#CCCCCC"> there and not the this things</font>

438
00:17:32,400 --> 00:17:36,320
talking<font color="#CCCCCC"> in the background is it's muted</font>

439
00:17:37,910 --> 00:17:42,480
it's just right I think<font color="#E5E5E5"> I got</font><font color="#CCCCCC"> it I got</font>

440
00:17:40,260 --> 00:17:46,230
it muted I can quietly hear myself

441
00:17:42,480 --> 00:17:50,550
talking in the<font color="#CCCCCC"> video behind so</font><font color="#E5E5E5"> now we go</font>

442
00:17:46,230 --> 00:17:52,440
<font color="#CCCCCC">back into the</font><font color="#E5E5E5"> VBA editor and we see that</font>

443
00:17:50,550 --> 00:17:55,200
last time<font color="#E5E5E5"> we looked before we enabled</font>

444
00:17:52,440 --> 00:18:00,420
macros<font color="#E5E5E5"> it used to say</font><font color="#CCCCCC"> XYZ and we enable</font>

445
00:17:55,200 --> 00:18:01,830
macros<font color="#CCCCCC"> it</font><font color="#E5E5E5"> actually prints out a ABC and</font>

446
00:18:00,420 --> 00:18:04,020
<font color="#E5E5E5">then we go back</font><font color="#CCCCCC"> into the</font><font color="#E5E5E5"> visual</font><font color="#CCCCCC"> basic</font>

447
00:18:01,830 --> 00:18:06,840
<font color="#E5E5E5">editor and it's been</font><font color="#CCCCCC"> updated and now it</font>

448
00:18:04,020 --> 00:18:11,160
says it says<font color="#CCCCCC"> ABC</font><font color="#E5E5E5"> so we start to think</font>

449
00:18:06,840 --> 00:18:14,550
<font color="#CCCCCC">that we're losing</font><font color="#E5E5E5"> our mind</font><font color="#CCCCCC"> so what you</font>

450
00:18:11,160 --> 00:18:17,340
see<font color="#CCCCCC"> isn't necessarily what you get so we</font>

451
00:18:14,550 --> 00:18:19,350
saw<font color="#CCCCCC"> that before</font><font color="#E5E5E5"> we enabled the macros if</font>

452
00:18:17,340 --> 00:18:21,270
we<font color="#E5E5E5"> went to the visual basic</font><font color="#CCCCCC"> editor</font><font color="#E5E5E5"> what</font>

453
00:18:19,350 --> 00:18:23,459
was<font color="#E5E5E5"> displayed there was the decompressed</font>

454
00:18:21,270 --> 00:18:26,100
<font color="#E5E5E5">source code that thing that we had</font>

455
00:18:23,460 --> 00:18:28,920
tinkered with<font color="#E5E5E5"> but when you enable macros</font>

456
00:18:26,100 --> 00:18:31,110
were actually executed<font color="#CCCCCC"> was the P code</font>

457
00:18:28,920 --> 00:18:33,990
that we hadn't played with and then when

458
00:18:31,110 --> 00:18:35,850
you visit the VBA<font color="#E5E5E5"> editor you no longer</font>

459
00:18:33,990 --> 00:18:38,070
<font color="#E5E5E5">see</font><font color="#CCCCCC"> the</font><font color="#E5E5E5"> decompressed source code that</font>

460
00:18:35,850 --> 00:18:42,629
<font color="#E5E5E5">was tinkered with you see the decompiled</font>

461
00:18:38,070 --> 00:18:44,909
<font color="#CCCCCC">picot so what actually gets</font><font color="#E5E5E5"> executed if</font>

462
00:18:42,630 --> 00:18:47,880
the P code is compatible<font color="#E5E5E5"> it's the P code</font>

463
00:18:44,910 --> 00:18:49,620
that will run and so in this<font color="#E5E5E5"> example we</font>

464
00:18:47,880 --> 00:18:52,770
had compatible<font color="#CCCCCC"> peacoats so the P code</font>

465
00:18:49,620 --> 00:18:54,810
ran not our tinkered vba source and but

466
00:18:52,770 --> 00:18:57,060
if the peacoats<font color="#E5E5E5"> incompatible word will</font>

467
00:18:54,810 --> 00:18:58,710
take that source<font color="#CCCCCC"> code we compile it and</font>

468
00:18:57,060 --> 00:19:03,300
run that<font color="#E5E5E5"> P code and those two</font><font color="#CCCCCC"> things</font>

469
00:18:58,710 --> 00:19:05,220
will match so<font color="#E5E5E5"> that brings us to</font><font color="#CCCCCC"> BB a</font>

470
00:19:03,300 --> 00:19:07,980
<font color="#E5E5E5">stomping which is instead of just</font>

471
00:19:05,220 --> 00:19:10,320
<font color="#E5E5E5">tinkering with the VBA source let's just</font>

472
00:19:07,980 --> 00:19:13,470
<font color="#E5E5E5">completely wipe it out it's not needed</font>

473
00:19:10,320 --> 00:19:15,179
if the P codes compatible so on the left

474
00:19:13,470 --> 00:19:17,160
<font color="#CCCCCC">you see that we're</font><font color="#E5E5E5"> just taking our hex</font>

475
00:19:15,180 --> 00:19:19,530
editor we're highlighting the VBA source

476
00:19:17,160 --> 00:19:21,360
and we're telling<font color="#E5E5E5"> it overwrite it with</font>

477
00:19:19,530 --> 00:19:23,460
<font color="#E5E5E5">zeros so down at the very bottom you</font><font color="#CCCCCC"> see</font>

478
00:19:21,360 --> 00:19:26,639
what used to be<font color="#CCCCCC"> the VB</font><font color="#E5E5E5"> source is now all</font>

479
00:19:23,460 --> 00:19:29,280
zeroed out and we save<font color="#CCCCCC"> that</font><font color="#E5E5E5"> so if we</font><font color="#CCCCCC"> go</font>

480
00:19:26,640 --> 00:19:34,380
<font color="#E5E5E5">open that</font><font color="#CCCCCC"> document up in word</font><font color="#E5E5E5"> and we go</font>

481
00:19:29,280 --> 00:19:38,300
to the visual<font color="#CCCCCC"> basic</font><font color="#E5E5E5"> editor and then we</font>

482
00:19:34,380 --> 00:19:42,210
see<font color="#E5E5E5"> nothing</font><font color="#CCCCCC"> so</font><font color="#E5E5E5"> as far</font><font color="#CCCCCC"> as we can tell</font>

483
00:19:38,300 --> 00:19:43,919
there are no macros in this document so

484
00:19:42,210 --> 00:19:46,110
we<font color="#CCCCCC"> might feel</font><font color="#E5E5E5"> comfortable to enable them</font>

485
00:19:43,920 --> 00:19:49,200
but as soon as<font color="#E5E5E5"> we enable them we get a</font>

486
00:19:46,110 --> 00:19:51,209
message<font color="#E5E5E5"> box pop up and and stuff</font>

487
00:19:49,200 --> 00:19:56,640
suddenly appears<font color="#CCCCCC"> in</font><font color="#E5E5E5"> the visual</font><font color="#CCCCCC"> basic</font>

488
00:19:51,210 --> 00:19:58,620
editor so this this can be<font color="#E5E5E5"> pretty tricky</font>

489
00:19:56,640 --> 00:20:00,360
<font color="#E5E5E5">I know personally when I get a macro</font>

490
00:19:58,620 --> 00:20:01,679
enabled document<font color="#E5E5E5"> that for some reason</font><font color="#CCCCCC"> I</font>

491
00:20:00,360 --> 00:20:03,620
<font color="#E5E5E5">need to enable the</font><font color="#CCCCCC"> macros</font>

492
00:20:01,680 --> 00:20:05,690
I always switch over and<font color="#E5E5E5"> look</font>

493
00:20:03,620 --> 00:20:07,669
<font color="#E5E5E5">this seemed reasonable for me to enable</font>

494
00:20:05,690 --> 00:20:10,490
<font color="#E5E5E5">these macros</font><font color="#CCCCCC"> but</font><font color="#E5E5E5"> what kind of bad tricks</font>

495
00:20:07,670 --> 00:20:12,320
are my teammates playing on me and so

496
00:20:10,490 --> 00:20:14,270
you switch<font color="#E5E5E5"> over there and you're like oh</font>

497
00:20:12,320 --> 00:20:17,389
it's<font color="#CCCCCC"> just gonna do this one thing or</font>

498
00:20:14,270 --> 00:20:19,040
there's<font color="#E5E5E5"> nothing here that's</font><font color="#CCCCCC"> odd and you</font>

499
00:20:17,390 --> 00:20:21,140
go ahead<font color="#E5E5E5"> and enable macros and then it</font>

500
00:20:19,040 --> 00:20:22,760
can do anything<font color="#E5E5E5"> it wants</font><font color="#CCCCCC"> different from</font>

501
00:20:21,140 --> 00:20:25,580
your impression of<font color="#CCCCCC"> what it was</font><font color="#E5E5E5"> going to</font>

502
00:20:22,760 --> 00:20:27,920
do and<font color="#E5E5E5"> that's Harold mentioned most a be</font>

503
00:20:25,580 --> 00:20:29,750
scanners are looking at the<font color="#E5E5E5"> compressed</font>

504
00:20:27,920 --> 00:20:31,430
<font color="#CCCCCC">VBA source</font><font color="#E5E5E5"> because I mean you can see</font>

505
00:20:29,750 --> 00:20:33,710
from an ass slide that it's much easier

506
00:20:31,430 --> 00:20:36,470
to<font color="#E5E5E5"> understand the VBA source then</font><font color="#CCCCCC"> than</font>

507
00:20:33,710 --> 00:20:39,200
the P code so that's<font color="#E5E5E5"> the the easy way</font><font color="#CCCCCC"> to</font>

508
00:20:36,470 --> 00:20:42,020
write signatures<font color="#CCCCCC"> so this can bypass a</font>

509
00:20:39,200 --> 00:20:47,120
lot<font color="#CCCCCC"> of AV</font><font color="#E5E5E5"> this idea is not new dr. bunch</font>

510
00:20:42,020 --> 00:20:49,280
of gave code and<font color="#E5E5E5"> also proof of concepts</font>

511
00:20:47,120 --> 00:20:51,290
for the earlier versions of<font color="#CCCCCC"> office for</font>

512
00:20:49,280 --> 00:20:53,149
VBA<font color="#CCCCCC"> stoping although he didn't refer to</font>

513
00:20:51,290 --> 00:20:57,470
it as VBA<font color="#E5E5E5"> stomping so you can</font><font color="#CCCCCC"> review</font>

514
00:20:53,150 --> 00:20:59,140
that<font color="#E5E5E5"> work there</font><font color="#CCCCCC"> we mentioned that</font><font color="#E5E5E5"> the P</font>

515
00:20:57,470 --> 00:21:04,070
code<font color="#E5E5E5"> would all</font><font color="#CCCCCC"> only run if it's</font>

516
00:20:59,140 --> 00:21:05,809
<font color="#E5E5E5">compatible so the VBA version that the</font>

517
00:21:04,070 --> 00:21:07,760
<font color="#E5E5E5">Creator uses to create the document</font>

518
00:21:05,809 --> 00:21:09,080
needs to<font color="#E5E5E5"> match the VBA version on the</font>

519
00:21:07,760 --> 00:21:11,990
victim<font color="#E5E5E5"> and that's pretty tightly coupled</font>

520
00:21:09,080 --> 00:21:13,970
to<font color="#E5E5E5"> the office version so if the attacker</font>

521
00:21:11,990 --> 00:21:15,710
can determine the office version of<font color="#E5E5E5"> the</font>

522
00:21:13,970 --> 00:21:18,710
victim they can build this payload just

523
00:21:15,710 --> 00:21:21,380
to run on their system<font color="#E5E5E5"> or that version</font>

524
00:21:18,710 --> 00:21:23,720
<font color="#E5E5E5">of</font><font color="#CCCCCC"> Office</font><font color="#E5E5E5"> so how we can do deal</font><font color="#CCCCCC"> with</font>

525
00:21:21,380 --> 00:21:27,110
this as an attackers is we can analyze

526
00:21:23,720 --> 00:21:28,730
the user<font color="#E5E5E5"> agent string that we get the</font>

527
00:21:27,110 --> 00:21:31,250
user<font color="#E5E5E5"> agent string it's a bit of text</font>

528
00:21:28,730 --> 00:21:33,820
<font color="#E5E5E5">that's sent automatically by email</font>

529
00:21:31,250 --> 00:21:37,120
clients and web browsers when

530
00:21:33,820 --> 00:21:40,639
<font color="#E5E5E5">information is fetched</font><font color="#CCCCCC"> from the web so</font>

531
00:21:37,120 --> 00:21:42,139
if we look up information<font color="#CCCCCC"> if we look up</font>

532
00:21:40,640 --> 00:21:44,720
user agent<font color="#E5E5E5"> streams we can determine</font>

533
00:21:42,140 --> 00:21:47,390
things like<font color="#CCCCCC"> office</font><font color="#E5E5E5"> version and Windows</font>

534
00:21:44,720 --> 00:21:50,420
version which helps<font color="#E5E5E5"> us target that</font>

535
00:21:47,390 --> 00:21:53,059
victim specifically with the P code so

536
00:21:50,420 --> 00:21:56,510
<font color="#E5E5E5">for example I can send an email</font><font color="#CCCCCC"> to my</font>

537
00:21:53,059 --> 00:21:59,090
victim<font color="#CCCCCC"> with a link to</font><font color="#E5E5E5"> an image and when</font>

538
00:21:56,510 --> 00:22:00,800
their email client goes to<font color="#E5E5E5"> fetch that</font>

539
00:21:59,090 --> 00:22:04,730
image<font color="#CCCCCC"> so they can display</font><font color="#E5E5E5"> it to the user</font>

540
00:22:00,800 --> 00:22:06,470
<font color="#CCCCCC">the</font><font color="#E5E5E5"> image is on my server and when it</font>

541
00:22:04,730 --> 00:22:09,920
fetches<font color="#CCCCCC"> it it'll include the user agent</font>

542
00:22:06,470 --> 00:22:11,870
<font color="#CCCCCC">so now without the victim really</font><font color="#E5E5E5"> doing</font>

543
00:22:09,920 --> 00:22:14,270
<font color="#E5E5E5">anything except receiving an email</font><font color="#CCCCCC"> I</font>

544
00:22:11,870 --> 00:22:17,300
have their user agent string<font color="#E5E5E5"> which I can</font>

545
00:22:14,270 --> 00:22:18,980
<font color="#E5E5E5">analyze figure out what the VBA or</font>

546
00:22:17,300 --> 00:22:20,810
<font color="#CCCCCC">office:version</font><font color="#E5E5E5"> they're using and then</font>

547
00:22:18,980 --> 00:22:27,440
build my payload specifically for that

548
00:22:20,810 --> 00:22:31,310
<font color="#E5E5E5">victim</font><font color="#CCCCCC"> one thing that can be done</font><font color="#E5E5E5"> for</font>

549
00:22:27,440 --> 00:22:33,679
anti analysis is<font color="#E5E5E5"> to include an</font>

550
00:22:31,310 --> 00:22:37,460
application got quit<font color="#CCCCCC"> at the end of the</font>

551
00:22:33,679 --> 00:22:39,440
macro so down here we<font color="#CCCCCC"> see that we have a</font>

552
00:22:37,460 --> 00:22:41,480
VBA<font color="#CCCCCC"> stamp document</font><font color="#E5E5E5"> that looks like</font>

553
00:22:39,440 --> 00:22:44,960
there's no macros but there is in the P

554
00:22:41,480 --> 00:22:47,150
code<font color="#CCCCCC"> at the end of</font><font color="#E5E5E5"> this macro is</font><font color="#CCCCCC"> a call</font>

555
00:22:44,960 --> 00:22:49,429
to<font color="#E5E5E5"> application</font><font color="#CCCCCC"> dot quit like shown on</font>

556
00:22:47,150 --> 00:22:51,020
the left so<font color="#E5E5E5"> you can imagine the attack</font>

557
00:22:49,429 --> 00:22:53,929
are doing<font color="#E5E5E5"> something nefarious and then</font>

558
00:22:51,020 --> 00:22:58,520
calling application got quit so that as

559
00:22:53,929 --> 00:23:01,340
soon<font color="#E5E5E5"> as this runs</font><font color="#CCCCCC"> we know</font><font color="#E5E5E5"> that the true</font>

560
00:22:58,520 --> 00:23:04,190
source is going<font color="#E5E5E5"> to pop up in this</font><font color="#CCCCCC"> VBA</font>

561
00:23:01,340 --> 00:23:06,230
<font color="#E5E5E5">editor</font><font color="#CCCCCC"> but if the analyst</font><font color="#E5E5E5"> doesn't have a</font>

562
00:23:04,190 --> 00:23:07,700
chance to look at<font color="#E5E5E5"> it</font><font color="#CCCCCC"> before the</font>

563
00:23:06,230 --> 00:23:10,730
application quits<font color="#CCCCCC"> it's going to be</font>

564
00:23:07,700 --> 00:23:15,710
<font color="#E5E5E5">difficult to figure out what this</font>

565
00:23:10,730 --> 00:23:17,630
malicious document does so here we're

566
00:23:15,710 --> 00:23:20,300
<font color="#CCCCCC">going</font><font color="#E5E5E5"> to enable content and then before</font>

567
00:23:17,630 --> 00:23:22,640
<font color="#E5E5E5">we can see anything in the VBA editor or</font>

568
00:23:20,300 --> 00:23:24,710
analyze it<font color="#CCCCCC"> it's quiz so that's a bummer</font>

569
00:23:22,640 --> 00:23:26,120
because<font color="#E5E5E5"> we really don't want to look at</font>

570
00:23:24,710 --> 00:23:27,890
the P code because<font color="#E5E5E5"> that's difficult</font>

571
00:23:26,120 --> 00:23:30,439
we know<font color="#E5E5E5"> that word knows how</font><font color="#CCCCCC"> to decompile</font>

572
00:23:27,890 --> 00:23:33,470
<font color="#CCCCCC">that</font><font color="#E5E5E5"> P code and we want it to but as</font>

573
00:23:30,440 --> 00:23:36,410
soon<font color="#E5E5E5"> as it does it it exits word and we</font>

574
00:23:33,470 --> 00:23:39,050
don't get<font color="#E5E5E5"> to see it so we do we did come</font>

575
00:23:36,410 --> 00:23:41,240
<font color="#E5E5E5">up</font><font color="#CCCCCC"> with a way to deal with</font><font color="#E5E5E5"> this problem</font>

576
00:23:39,050 --> 00:23:44,928
<font color="#E5E5E5">so</font><font color="#CCCCCC"> that</font><font color="#E5E5E5"> we could analyze</font><font color="#CCCCCC"> documents at</font>

577
00:23:41,240 --> 00:23:46,790
least for Microsoft Word and so we've

578
00:23:44,929 --> 00:23:50,330
got<font color="#E5E5E5"> this same document over here on the</font>

579
00:23:46,790 --> 00:23:53,570
right we found<font color="#E5E5E5"> that if you delete the</font>

580
00:23:50,330 --> 00:23:56,449
VBA<font color="#CCCCCC"> de</font><font color="#E5E5E5"> data XML file it'll stop any</font>

581
00:23:53,570 --> 00:23:58,100
macros from automatically executing so

582
00:23:56,450 --> 00:24:00,260
this is<font color="#E5E5E5"> exactly what we want so we're</font>

583
00:23:58,100 --> 00:24:02,719
going<font color="#E5E5E5"> to open this document with 7-zip</font>

584
00:24:00,260 --> 00:24:06,260
again<font color="#E5E5E5"> and go</font><font color="#CCCCCC"> into the word directory and</font>

585
00:24:02,720 --> 00:24:08,410
just delete<font color="#E5E5E5"> VBA data XML it's not the</font>

586
00:24:06,260 --> 00:24:10,700
VBA project up in file that contains

587
00:24:08,410 --> 00:24:13,190
what we've talked<font color="#CCCCCC"> about previously but</font>

588
00:24:10,700 --> 00:24:16,370
<font color="#E5E5E5">it's an XML file describing the macros</font>

589
00:24:13,190 --> 00:24:20,090
we're going to delete that<font color="#E5E5E5"> and go ahead</font>

590
00:24:16,370 --> 00:24:22,550
and save that<font color="#CCCCCC"> okay so now we're going to</font>

591
00:24:20,090 --> 00:24:25,010
<font color="#E5E5E5">open that document that's the same</font>

592
00:24:22,550 --> 00:24:28,340
document as before but we've deleted<font color="#E5E5E5"> the</font>

593
00:24:25,010 --> 00:24:30,140
VBA<font color="#E5E5E5"> data XML file so</font>

594
00:24:28,340 --> 00:24:32,270
we see no macros because<font color="#E5E5E5"> it's been</font><font color="#CCCCCC"> VBA</font>

595
00:24:30,140 --> 00:24:34,580
stomp<font color="#E5E5E5"> last time we enabled content</font>

596
00:24:32,270 --> 00:24:37,760
<font color="#E5E5E5">everything went away</font><font color="#CCCCCC"> we didn't get to</font>

597
00:24:34,580 --> 00:24:43,908
see the code but<font color="#E5E5E5"> this time when we</font>

598
00:24:37,760 --> 00:24:46,129
<font color="#E5E5E5">enable content it pops up and</font><font color="#CCCCCC"> we see</font>

599
00:24:43,909 --> 00:24:48,250
what would<font color="#E5E5E5"> happen</font><font color="#CCCCCC"> should have happened</font>

600
00:24:46,130 --> 00:24:50,360
could have happened but didn't so now

601
00:24:48,250 --> 00:24:53,450
<font color="#E5E5E5">presumably there's a bunch of nefarious</font>

602
00:24:50,360 --> 00:24:56,479
code there<font color="#CCCCCC"> that we can analyze and and</font>

603
00:24:53,450 --> 00:24:58,940
the application doesn't<font color="#CCCCCC"> quit so we this</font>

604
00:24:56,480 --> 00:25:01,779
is a trick to<font color="#E5E5E5"> get word to decompile that</font>

605
00:24:58,940 --> 00:25:04,580
<font color="#CCCCCC">P code for</font><font color="#E5E5E5"> us let</font><font color="#CCCCCC"> us look at</font><font color="#E5E5E5"> it without</font>

606
00:25:01,779 --> 00:25:07,159
<font color="#E5E5E5">executing it</font><font color="#CCCCCC"> and then exiting before we</font>

607
00:25:04,580 --> 00:25:11,649
can look at it<font color="#E5E5E5"> and this works to disable</font>

608
00:25:07,159 --> 00:25:13,940
all<font color="#E5E5E5"> auto execution type routines so it's</font>

609
00:25:11,649 --> 00:25:16,129
typical<font color="#CCCCCC"> to use</font><font color="#E5E5E5"> auto open because that's</font>

610
00:25:13,940 --> 00:25:17,750
designed to<font color="#CCCCCC"> run as soon as the documents</font>

611
00:25:16,130 --> 00:25:20,179
open<font color="#E5E5E5"> and macros are enabled but there's</font>

612
00:25:17,750 --> 00:25:23,659
other tricky ways to get macros to<font color="#E5E5E5"> run</font>

613
00:25:20,179 --> 00:25:25,520
such as when an image loads<font color="#E5E5E5"> run this</font>

614
00:25:23,659 --> 00:25:29,929
macro which<font color="#CCCCCC"> an image always</font><font color="#E5E5E5"> loads when</font>

615
00:25:25,520 --> 00:25:32,710
<font color="#E5E5E5">you open the document or like when a a</font>

616
00:25:29,929 --> 00:25:36,740
toolbar menu is added to<font color="#E5E5E5"> the toolbar I</font>

617
00:25:32,710 --> 00:25:37,789
added a<font color="#CCCCCC"> weak black hills</font><font color="#E5E5E5"> post there how</font>

618
00:25:36,740 --> 00:25:39,620
to fish with PowerPoint because

619
00:25:37,789 --> 00:25:42,110
<font color="#E5E5E5">PowerPoint doesn't have any sort of auto</font>

620
00:25:39,620 --> 00:25:43,399
<font color="#E5E5E5">open kind of method so if you want to</font>

621
00:25:42,110 --> 00:25:46,428
<font color="#E5E5E5">fish with PowerPoint you need another</font>

622
00:25:43,399 --> 00:25:49,039
way to get it to<font color="#E5E5E5"> auto execute so there's</font>

623
00:25:46,429 --> 00:25:51,140
a technique there that will do that

624
00:25:49,039 --> 00:25:55,429
this will also<font color="#E5E5E5"> disable those type of</font>

625
00:25:51,140 --> 00:25:57,020
<font color="#E5E5E5">techniques so I'll turn the time over to</font>

626
00:25:55,429 --> 00:26:07,250
<font color="#E5E5E5">Kirk and he's gonna give us some</font>

627
00:25:57,020 --> 00:26:09,379
<font color="#CCCCCC">real-world BBA stomping examples all</font>

628
00:26:07,250 --> 00:26:12,140
<font color="#CCCCCC">right so</font><font color="#E5E5E5"> so we've been looking a lot at</font>

629
00:26:09,380 --> 00:26:16,130
like the general ideas on how this works

630
00:26:12,140 --> 00:26:18,520
<font color="#E5E5E5">what</font><font color="#CCCCCC"> you</font><font color="#E5E5E5"> need to do to confuse</font><font color="#CCCCCC"> AV</font>

631
00:26:16,130 --> 00:26:21,200
confuse analysts and things like<font color="#CCCCCC"> that</font>

632
00:26:18,520 --> 00:26:22,668
and so for<font color="#E5E5E5"> those like teaching purposes</font>

633
00:26:21,200 --> 00:26:24,590
<font color="#E5E5E5">we've gone</font><font color="#CCCCCC"> through like some</font><font color="#E5E5E5"> small</font>

634
00:26:22,669 --> 00:26:25,279
examples with message boxes<font color="#E5E5E5"> and things</font>

635
00:26:24,590 --> 00:26:27,168
like<font color="#E5E5E5"> that</font>

636
00:26:25,279 --> 00:26:29,570
but now we're going<font color="#E5E5E5"> to take a look at</font>

637
00:26:27,169 --> 00:26:32,870
how does<font color="#CCCCCC"> this work if you use it with</font>

638
00:26:29,570 --> 00:26:33,559
like a real world<font color="#E5E5E5"> like legitimate</font><font color="#CCCCCC"> mal</font>

639
00:26:32,870 --> 00:26:37,039
<font color="#CCCCCC">doc</font>

640
00:26:33,559 --> 00:26:40,430
so the mailboxes that<font color="#E5E5E5"> we picked for this</font>

641
00:26:37,039 --> 00:26:43,280
example is an<font color="#CCCCCC"> Imhotep mal doc</font>

642
00:26:40,430 --> 00:26:45,980
from the wild from the like the actual

643
00:26:43,280 --> 00:26:49,160
<font color="#E5E5E5">you</font><font color="#CCCCCC"> motek campaign we specifically</font>

644
00:26:45,980 --> 00:26:51,770
picked one<font color="#E5E5E5"> that is fairly old</font><font color="#CCCCCC"> so this is</font>

645
00:26:49,160 --> 00:26:54,740
<font color="#E5E5E5">something from back in June</font><font color="#CCCCCC"> and so this</font>

646
00:26:51,770 --> 00:26:58,460
is old enough<font color="#CCCCCC"> that</font><font color="#E5E5E5"> a lot of kind of like</font>

647
00:26:54,740 --> 00:27:01,130
the trailing edge AV<font color="#E5E5E5"> companies have put</font>

648
00:26:58,460 --> 00:27:03,560
some<font color="#CCCCCC"> sort of</font><font color="#E5E5E5"> detection in for it</font>

649
00:27:01,130 --> 00:27:06,110
so for this<font color="#E5E5E5"> particular dock it has a</font>

650
00:27:03,560 --> 00:27:10,220
pretty high detection rate<font color="#E5E5E5"> it's up at 39</font>

651
00:27:06,110 --> 00:27:12,620
out<font color="#E5E5E5"> of 60 detection so so to test out</font>

652
00:27:10,220 --> 00:27:14,870
what's what sort<font color="#E5E5E5"> of effect doing</font><font color="#CCCCCC"> VBA</font>

653
00:27:12,620 --> 00:27:16,610
stomping on<font color="#E5E5E5"> like something like this</font>

654
00:27:14,870 --> 00:27:20,899
<font color="#CCCCCC">that</font><font color="#E5E5E5"> has</font><font color="#CCCCCC"> a very</font><font color="#E5E5E5"> high detection rate is</font>

655
00:27:16,610 --> 00:27:23,419
we wrote a<font color="#CCCCCC"> small script that would</font>

656
00:27:20,900 --> 00:27:25,400
automatically do the VBA stomping on

657
00:27:23,420 --> 00:27:30,020
like any<font color="#CCCCCC"> sort of document</font><font color="#E5E5E5"> that we give</font>

658
00:27:25,400 --> 00:27:32,780
it<font color="#E5E5E5"> so for our script</font><font color="#CCCCCC"> it goes and</font><font color="#E5E5E5"> just</font>

659
00:27:30,020 --> 00:27:35,950
wipes out the compressed<font color="#E5E5E5"> VBA source code</font>

660
00:27:32,780 --> 00:27:40,850
with a series<font color="#CCCCCC"> of randomly chosen bytes</font>

661
00:27:35,950 --> 00:27:43,000
<font color="#E5E5E5">so we just bring this to</font><font color="#CCCCCC"> a document</font>

662
00:27:40,850 --> 00:27:47,060
through our tool<font color="#CCCCCC"> sort of like a little</font>

663
00:27:43,000 --> 00:27:50,420
<font color="#CCCCCC">running a</font><font color="#E5E5E5"> single script and what</font>

664
00:27:47,060 --> 00:27:53,960
happened was we went from 39 out of<font color="#CCCCCC"> 60</font>

665
00:27:50,420 --> 00:27:58,430
detections<font color="#CCCCCC"> down to 9 out of 59 detection</font>

666
00:27:53,960 --> 00:28:02,060
<font color="#E5E5E5">so so this is a document</font><font color="#CCCCCC"> that what had a</font>

667
00:27:58,430 --> 00:28:04,460
very very<font color="#CCCCCC"> high detection rate</font><font color="#E5E5E5"> with very</font>

668
00:28:02,060 --> 00:28:07,850
little effort on<font color="#CCCCCC"> our part we were able</font>

669
00:28:04,460 --> 00:28:10,190
to take<font color="#E5E5E5"> that</font><font color="#CCCCCC"> document</font><font color="#E5E5E5"> and drop off 30 of</font>

670
00:28:07,850 --> 00:28:14,980
the AV companies<font color="#E5E5E5"> from detecting that</font>

671
00:28:10,190 --> 00:28:17,720
document<font color="#CCCCCC"> so that they indicated</font><font color="#E5E5E5"> to us</font>

672
00:28:14,980 --> 00:28:20,860
<font color="#E5E5E5">since I'm on the blue team that this is</font>

673
00:28:17,720 --> 00:28:23,900
something<font color="#CCCCCC"> that we need to take a look at</font>

674
00:28:20,860 --> 00:28:27,500
how do we like if this starts getting

675
00:28:23,900 --> 00:28:32,330
used on campaigns out there<font color="#CCCCCC"> what are we</font>

676
00:28:27,500 --> 00:28:33,920
going<font color="#E5E5E5"> to do about this so to show you</font><font color="#CCCCCC"> an</font>

677
00:28:32,330 --> 00:28:37,550
<font color="#CCCCCC">example</font><font color="#E5E5E5"> of like what sort of problems</font>

678
00:28:33,920 --> 00:28:40,070
this causes<font color="#E5E5E5"> for a defender we went and</font>

679
00:28:37,550 --> 00:28:42,409
took our stomped<font color="#CCCCCC"> a motet document</font><font color="#E5E5E5"> and</font>

680
00:28:40,070 --> 00:28:45,110
ran it through like a lot of<font color="#E5E5E5"> the tools</font>

681
00:28:42,410 --> 00:28:48,570
that we use<font color="#E5E5E5"> as analysts to try to work</font>

682
00:28:45,110 --> 00:28:52,229
with malicious documents

683
00:28:48,570 --> 00:28:54,210
so one of the main<font color="#E5E5E5"> tools big tools that</font>

684
00:28:52,230 --> 00:28:56,750
we use when<font color="#E5E5E5"> we analyze these documents</font>

685
00:28:54,210 --> 00:28:59,460
is an<font color="#CCCCCC"> open-source tool called la</font><font color="#E5E5E5"> VBA</font>

686
00:28:56,750 --> 00:29:02,910
<font color="#E5E5E5">this is a tool developed</font><font color="#CCCCCC"> by</font><font color="#E5E5E5"> Philippe</font>

687
00:28:59,460 --> 00:29:05,220
like<font color="#CCCCCC"> Hodge and</font><font color="#E5E5E5"> basically what it does is</font>

688
00:29:02,910 --> 00:29:08,580
it decompresses<font color="#E5E5E5"> the VBA source code for</font>

689
00:29:05,220 --> 00:29:11,040
you<font color="#CCCCCC"> shows</font><font color="#E5E5E5"> us on the screen</font><font color="#CCCCCC"> to you so you</font>

690
00:29:08,580 --> 00:29:12,750
can<font color="#E5E5E5"> work with it and uses some</font>

691
00:29:11,040 --> 00:29:14,520
heuristics to<font color="#E5E5E5"> tell you if there's like</font>

692
00:29:12,750 --> 00:29:17,850
suspicious things that you should look

693
00:29:14,520 --> 00:29:20,790
at inside<font color="#E5E5E5"> this code</font><font color="#CCCCCC"> we can</font><font color="#E5E5E5"> see that</font>

694
00:29:17,850 --> 00:29:26,000
whenever<font color="#E5E5E5"> we run all a VBA on our stumped</font>

695
00:29:20,790 --> 00:29:30,060
<font color="#CCCCCC">Imhotep</font><font color="#E5E5E5"> document first it crashes with a</font>

696
00:29:26,000 --> 00:29:34,440
exception and then just gives us like no

697
00:29:30,060 --> 00:29:37,889
<font color="#E5E5E5">useful output at all</font><font color="#CCCCCC"> same thing with</font>

698
00:29:34,440 --> 00:29:41,640
like<font color="#CCCCCC"> a tool called all a dump that's</font>

699
00:29:37,890 --> 00:29:43,560
written by DDA<font color="#E5E5E5"> Stevens</font><font color="#CCCCCC"> all a dump</font><font color="#E5E5E5"> allows</font>

700
00:29:41,640 --> 00:29:46,920
you to work<font color="#CCCCCC"> with all a files it's more</font>

701
00:29:43,560 --> 00:29:49,020
for<font color="#CCCCCC"> kind</font><font color="#E5E5E5"> of like getting in with a lot</font>

702
00:29:46,920 --> 00:29:50,550
more<font color="#E5E5E5"> detail</font><font color="#CCCCCC"> on what's going on in the</font>

703
00:29:49,020 --> 00:29:54,000
different<font color="#CCCCCC"> all a streams and things</font><font color="#E5E5E5"> like</font>

704
00:29:50,550 --> 00:29:56,250
that<font color="#CCCCCC"> so all a dump doesn't crash it but</font>

705
00:29:54,000 --> 00:29:57,990
whenever<font color="#E5E5E5"> we dump the compressed</font><font color="#CCCCCC"> what</font>

706
00:29:56,250 --> 00:30:00,990
should<font color="#E5E5E5"> be the compressed VBA out of that</font>

707
00:29:57,990 --> 00:30:02,790
stream all we get<font color="#CCCCCC"> are a bunch of garbage</font>

708
00:30:00,990 --> 00:30:04,800
characters because we just over wrote

709
00:30:02,790 --> 00:30:11,159
them with random bytes there's nothing

710
00:30:04,800 --> 00:30:13,889
there<font color="#CCCCCC"> that we can work with</font><font color="#E5E5E5"> um a tool</font>

711
00:30:11,160 --> 00:30:16,920
that another tool that<font color="#CCCCCC"> we</font><font color="#E5E5E5"> use heavily</font>

712
00:30:13,890 --> 00:30:19,920
every<font color="#E5E5E5"> single day at Walmart is a tool</font>

713
00:30:16,920 --> 00:30:25,770
<font color="#CCCCCC">called Viper monkey</font><font color="#E5E5E5"> and Viper monkey is</font>

714
00:30:19,920 --> 00:30:28,170
a VBA macro<font color="#E5E5E5"> emulator</font><font color="#CCCCCC"> that actually</font><font color="#E5E5E5"> uses</font>

715
00:30:25,770 --> 00:30:31,470
emulation to tell you what a V<font color="#E5E5E5"> be a</font>

716
00:30:28,170 --> 00:30:33,480
macro would do<font color="#E5E5E5"> so this is again a tool</font>

717
00:30:31,470 --> 00:30:36,480
that<font color="#E5E5E5"> was originally written by Philippe</font>

718
00:30:33,480 --> 00:30:38,460
Lacan<font color="#CCCCCC"> since he wrote the original</font>

719
00:30:36,480 --> 00:30:39,990
version we've kind of<font color="#CCCCCC"> taken over</font><font color="#E5E5E5"> the</font>

720
00:30:38,460 --> 00:30:43,560
maintenance<font color="#E5E5E5"> and extension of that at</font>

721
00:30:39,990 --> 00:30:45,660
Walmart<font color="#E5E5E5"> we</font><font color="#CCCCCC"> put this through a</font><font color="#E5E5E5"> Viper</font>

722
00:30:43,560 --> 00:30:48,060
monkey and again we just<font color="#CCCCCC"> eat garbage</font>

723
00:30:45,660 --> 00:30:51,270
<font color="#CCCCCC">we're getting no useful</font><font color="#E5E5E5"> information</font><font color="#CCCCCC"> out</font>

724
00:30:48,060 --> 00:30:53,490
<font color="#E5E5E5">of this at all so so far none of the</font>

725
00:30:51,270 --> 00:30:55,320
tools that we use<font color="#CCCCCC"> for trying</font><font color="#E5E5E5"> to work</font>

726
00:30:53,490 --> 00:30:59,030
with malicious documents none of them

727
00:30:55,320 --> 00:30:59,030
are giving us anything useful at all

728
00:31:01,230 --> 00:31:09,750
it's<font color="#E5E5E5"> okay and then</font><font color="#CCCCCC"> a final</font><font color="#E5E5E5"> tool that you</font>

729
00:31:07,260 --> 00:31:14,250
can<font color="#E5E5E5"> use for looking at the OL a V be</font>

730
00:31:09,750 --> 00:31:17,929
looking at the V be a source code is the

731
00:31:14,250 --> 00:31:20,340
<font color="#E5E5E5">cig tool utility that comes with clam</font><font color="#CCCCCC"> AV</font>

732
00:31:17,929 --> 00:31:24,299
it has an<font color="#E5E5E5"> option for dumping out</font>

733
00:31:20,340 --> 00:31:26,879
<font color="#E5E5E5">compressed</font><font color="#CCCCCC"> VBA source code</font><font color="#E5E5E5"> and</font><font color="#CCCCCC"> sig tool</font>

734
00:31:24,299 --> 00:31:29,480
handles<font color="#E5E5E5"> this the most gracefully of all</font>

735
00:31:26,880 --> 00:31:32,250
the tools which is there is no

736
00:31:29,480 --> 00:31:35,480
compressed<font color="#E5E5E5"> VBA source code there</font><font color="#CCCCCC"> that I</font>

737
00:31:32,250 --> 00:31:40,950
can work with<font color="#E5E5E5"> so it does nothing</font><font color="#CCCCCC"> at all</font>

738
00:31:35,480 --> 00:31:43,260
so so what can<font color="#CCCCCC"> we do about this so all</font>

739
00:31:40,950 --> 00:31:45,630
<font color="#E5E5E5">of these tools that</font><font color="#CCCCCC"> we've bent that</font><font color="#E5E5E5"> I've</font>

740
00:31:43,260 --> 00:31:48,000
shown there before are<font color="#E5E5E5"> all concentrating</font>

741
00:31:45,630 --> 00:31:50,970
<font color="#E5E5E5">and working with the VBA source code</font>

742
00:31:48,000 --> 00:31:52,620
inside<font color="#E5E5E5"> the</font><font color="#CCCCCC"> document that's nice to work</font>

743
00:31:50,970 --> 00:31:55,860
<font color="#CCCCCC">with</font><font color="#E5E5E5"> because it's readable it's</font>

744
00:31:52,620 --> 00:31:58,080
understandable<font color="#CCCCCC"> it has lots of strings</font>

745
00:31:55,860 --> 00:32:00,149
and recognizable functions in it<font color="#E5E5E5"> that</font>

746
00:31:58,080 --> 00:32:05,220
make<font color="#CCCCCC"> it really easy to</font><font color="#E5E5E5"> key</font><font color="#CCCCCC"> off of</font><font color="#E5E5E5"> as a</font>

747
00:32:00,149 --> 00:32:09,178
defender what is not changed whenever

748
00:32:05,220 --> 00:32:13,769
<font color="#E5E5E5">you do the VBA stomping is the compiled</font>

749
00:32:09,179 --> 00:32:16,980
<font color="#E5E5E5">P code that's in the document</font><font color="#CCCCCC"> so doctor</font>

750
00:32:13,769 --> 00:32:19,889
bond<font color="#CCCCCC"> Chev on his github there has a tool</font>

751
00:32:16,980 --> 00:32:23,159
called<font color="#E5E5E5"> P code dump</font><font color="#CCCCCC"> which is</font><font color="#E5E5E5"> a P code</font>

752
00:32:19,889 --> 00:32:25,620
disassembler<font color="#E5E5E5"> and so we're able to take a</font>

753
00:32:23,159 --> 00:32:29,279
look<font color="#E5E5E5"> at here this is the snippet of P</font>

754
00:32:25,620 --> 00:32:31,439
code from the stomped a motet<font color="#CCCCCC"> dog and we</font>

755
00:32:29,279 --> 00:32:33,840
can see<font color="#E5E5E5"> that the P code from the</font>

756
00:32:31,440 --> 00:32:35,700
original document<font color="#E5E5E5"> is</font><font color="#CCCCCC"> on the one side the</font>

757
00:32:33,840 --> 00:32:38,519
P code from the<font color="#E5E5E5"> stop document is on the</font>

758
00:32:35,700 --> 00:32:42,600
other side and they are<font color="#E5E5E5"> byte for byte</font>

759
00:32:38,519 --> 00:32:44,700
exactly the same and<font color="#E5E5E5"> so the the stomping</font>

760
00:32:42,600 --> 00:32:49,590
does not by design<font color="#E5E5E5"> does</font><font color="#CCCCCC"> not</font><font color="#E5E5E5"> affect the P</font>

761
00:32:44,700 --> 00:32:52,710
code at all so<font color="#E5E5E5"> that kind of tells us</font>

762
00:32:49,590 --> 00:32:55,709
where we need to go as defenders for how

763
00:32:52,710 --> 00:33:00,840
to deal<font color="#CCCCCC"> with this if it's this is used</font>

764
00:32:55,710 --> 00:33:03,330
against<font color="#E5E5E5"> us defensively so like</font><font color="#CCCCCC"> Kari and</font>

765
00:33:00,840 --> 00:33:04,949
<font color="#E5E5E5">Harold pointed out a lot of like the</font>

766
00:33:03,330 --> 00:33:08,100
signature<font color="#E5E5E5"> based detection is out there</font>

767
00:33:04,950 --> 00:33:11,309
are specifically targeting<font color="#CCCCCC"> the VBA</font>

768
00:33:08,100 --> 00:33:13,889
source code that's in there<font color="#E5E5E5"> if you also</font>

769
00:33:11,309 --> 00:33:14,168
include signatures that<font color="#E5E5E5"> are based on the</font>

770
00:33:13,889 --> 00:33:18,570
<font color="#E5E5E5">P</font>

771
00:33:14,169 --> 00:33:20,919
code<font color="#E5E5E5"> rather than on the</font><font color="#CCCCCC"> vba source code</font>

772
00:33:18,570 --> 00:33:23,918
<font color="#CCCCCC">you're then</font><font color="#E5E5E5"> going to be able</font><font color="#CCCCCC"> to</font><font color="#E5E5E5"> detect</font>

773
00:33:20,919 --> 00:33:26,320
<font color="#E5E5E5">these and not get fooled whether or not</font>

774
00:33:23,919 --> 00:33:31,379
there's a<font color="#E5E5E5"> VBA stomping going on or at</font>

775
00:33:26,320 --> 00:33:35,769
all then<font color="#CCCCCC"> here's like the obvious one for</font>

776
00:33:31,379 --> 00:33:39,219
<font color="#E5E5E5">dealing</font><font color="#CCCCCC"> with</font><font color="#E5E5E5"> VBA stomping is if it's a</font>

777
00:33:35,769 --> 00:33:41,980
it has not been stomped the VBA source

778
00:33:39,220 --> 00:33:45,340
code in there<font color="#CCCCCC"> should match up with the P</font>

779
00:33:41,980 --> 00:33:51,669
code and if they don't that float<font color="#CCCCCC"> throws</font>

780
00:33:45,340 --> 00:33:55,209
<font color="#E5E5E5">up a big</font><font color="#CCCCCC"> red flag</font><font color="#E5E5E5"> and then finally the</font>

781
00:33:51,669 --> 00:33:57,220
end goal of<font color="#E5E5E5"> the attacker is is to</font>

782
00:33:55,210 --> 00:34:00,279
<font color="#CCCCCC">actually have something happen and to</font>

783
00:33:57,220 --> 00:34:01,840
accomplish<font color="#CCCCCC"> their purposes so it the</font>

784
00:34:00,279 --> 00:34:06,609
<font color="#E5E5E5">document is going to need</font><font color="#CCCCCC"> to actually</font><font color="#E5E5E5"> be</font>

785
00:34:01,840 --> 00:34:10,509
able to<font color="#CCCCCC"> execute and run so you can just</font>

786
00:34:06,609 --> 00:34:12,909
run<font color="#E5E5E5"> this in a sandbox</font><font color="#CCCCCC"> and</font><font color="#E5E5E5"> check for the</font>

787
00:34:10,510 --> 00:34:14,440
same sort of<font color="#CCCCCC"> malicious behavior</font><font color="#E5E5E5"> that</font>

788
00:34:12,909 --> 00:34:17,470
<font color="#E5E5E5">you'd be</font><font color="#CCCCCC"> looking for whether it was</font>

789
00:34:14,440 --> 00:34:19,720
stomped<font color="#E5E5E5"> or not stomped now one caveat</font>

790
00:34:17,469 --> 00:34:23,138
with the<font color="#CCCCCC"> sandboxing is that if it was</font>

791
00:34:19,719 --> 00:34:25,808
<font color="#CCCCCC">vba stomped the document is only</font><font color="#E5E5E5"> going</font>

792
00:34:23,139 --> 00:34:29,799
<font color="#E5E5E5">to execute and work in the environment</font>

793
00:34:25,809 --> 00:34:32,079
<font color="#CCCCCC">that has the correct</font><font color="#E5E5E5"> VBA version so if</font>

794
00:34:29,799 --> 00:34:34,299
your sandbox<font color="#E5E5E5"> a solution does</font><font color="#CCCCCC"> not open</font>

795
00:34:32,079 --> 00:34:36,520
these<font color="#CCCCCC"> up in sandbox them using multiple</font>

796
00:34:34,299 --> 00:34:40,059
office and<font color="#E5E5E5"> Windows versions there's a</font>

797
00:34:36,520 --> 00:34:42,609
potential<font color="#E5E5E5"> that you will miss the</font>

798
00:34:40,059 --> 00:34:46,569
malicious behavior<font color="#CCCCCC"> from a VBA stop</font>

799
00:34:42,609 --> 00:34:50,319
document so what do these these defenses

800
00:34:46,569 --> 00:34:53,190
look like if you<font color="#CCCCCC"> implement them and so</font>

801
00:34:50,319 --> 00:34:57,069
what we have up<font color="#CCCCCC"> here is</font><font color="#E5E5E5"> an example of a</font>

802
00:34:53,190 --> 00:35:00,849
signature<font color="#E5E5E5"> that's written based on the P</font>

803
00:34:57,069 --> 00:35:03,279
code rather<font color="#E5E5E5"> than the VBA source code</font><font color="#CCCCCC"> so</font>

804
00:35:00,849 --> 00:35:05,980
this is a<font color="#CCCCCC"> yarra signature there are like</font>

805
00:35:03,280 --> 00:35:10,140
a few AV tools out there<font color="#E5E5E5"> that</font><font color="#CCCCCC"> allow you</font>

806
00:35:05,980 --> 00:35:13,200
to<font color="#CCCCCC"> include custom yarra signatures</font><font color="#E5E5E5"> and</font>

807
00:35:10,140 --> 00:35:17,618
so what we have up here<font color="#CCCCCC"> is a signature</font>

808
00:35:13,200 --> 00:35:23,140
<font color="#E5E5E5">that</font><font color="#CCCCCC"> is looking</font><font color="#E5E5E5"> for lots</font><font color="#CCCCCC"> and</font><font color="#E5E5E5"> lots of</font>

809
00:35:17,619 --> 00:35:26,950
calls to<font color="#E5E5E5"> the VBA mid function so pulling</font>

810
00:35:23,140 --> 00:35:27,440
out like a chunk<font color="#E5E5E5"> out of a string so mid</font>

811
00:35:26,950 --> 00:35:29,569
mid

812
00:35:27,440 --> 00:35:33,609
is used by a lot<font color="#CCCCCC"> of in the wild Maldek</font>

813
00:35:29,569 --> 00:35:37,069
campaigns for<font color="#E5E5E5"> decoding their payload</font>

814
00:35:33,609 --> 00:35:40,670
<font color="#CCCCCC">typically you</font><font color="#E5E5E5"> don't expect to</font><font color="#CCCCCC"> see</font><font color="#E5E5E5"> like</font>

815
00:35:37,069 --> 00:35:44,329
75 100 200 calls to mid in like a

816
00:35:40,670 --> 00:35:46,550
<font color="#CCCCCC">regular business process document</font><font color="#E5E5E5"> so</font>

817
00:35:44,329 --> 00:35:49,880
seen lots of<font color="#E5E5E5"> calls to mid is kind of</font>

818
00:35:46,550 --> 00:35:54,619
like throws up a flag<font color="#E5E5E5"> as a defender when</font>

819
00:35:49,880 --> 00:35:56,210
you see that in your<font color="#CCCCCC"> environment</font><font color="#E5E5E5"> so</font><font color="#CCCCCC"> if</font>

820
00:35:54,619 --> 00:35:58,190
you feel<font color="#E5E5E5"> like ever if</font><font color="#CCCCCC"> you ever</font><font color="#E5E5E5"> done any</font>

821
00:35:56,210 --> 00:36:00,920
work<font color="#CCCCCC"> with like developing signatures for</font>

822
00:35:58,190 --> 00:36:04,099
like PE executables or like executable

823
00:36:00,920 --> 00:36:05,839
files in general<font color="#CCCCCC"> like the sort of</font>

824
00:36:04,099 --> 00:36:08,450
thought process<font color="#CCCCCC"> that</font><font color="#E5E5E5"> you use for</font><font color="#CCCCCC"> writing</font>

825
00:36:05,839 --> 00:36:10,069
those<font color="#CCCCCC"> service signatures it's very</font>

826
00:36:08,450 --> 00:36:13,990
similar to<font color="#CCCCCC"> the thought process you use</font>

827
00:36:10,069 --> 00:36:17,589
for these P code signatures<font color="#CCCCCC"> P code is</font>

828
00:36:13,990 --> 00:36:20,029
basically like a virtual<font color="#E5E5E5"> machine</font>

829
00:36:17,589 --> 00:36:24,910
<font color="#E5E5E5">instruction set and so you're going</font><font color="#CCCCCC"> to</font>

830
00:36:20,030 --> 00:36:27,980
be writing signatures that<font color="#E5E5E5"> recognize the</font>

831
00:36:24,910 --> 00:36:31,490
binary bytes and things like<font color="#E5E5E5"> that</font><font color="#CCCCCC"> in the</font>

832
00:36:27,980 --> 00:36:33,680
compiled<font color="#E5E5E5"> P code so we see down</font><font color="#CCCCCC"> here</font>

833
00:36:31,490 --> 00:36:35,479
inside the comment whatever writing

834
00:36:33,680 --> 00:36:39,109
<font color="#E5E5E5">these signatures we rely heavily on</font>

835
00:36:35,480 --> 00:36:42,349
<font color="#CCCCCC">doctor bond shoves</font><font color="#E5E5E5"> picot dump tool for</font>

836
00:36:39,109 --> 00:36:44,630
disassembling the P code<font color="#CCCCCC"> so in his</font>

837
00:36:42,349 --> 00:36:47,869
disassembler provides both both<font color="#CCCCCC"> the</font>

838
00:36:44,630 --> 00:36:51,410
readable disassembly output<font color="#E5E5E5"> plus the raw</font>

839
00:36:47,869 --> 00:36:54,589
bytes that<font color="#E5E5E5"> correspond to the assembly</font>

840
00:36:51,410 --> 00:36:56,180
disassembly lines<font color="#E5E5E5"> and so we use that</font><font color="#CCCCCC"> to</font>

841
00:36:54,589 --> 00:36:58,578
<font color="#CCCCCC">look through</font><font color="#E5E5E5"> there look for</font><font color="#CCCCCC"> what</font><font color="#E5E5E5"> are the</font>

842
00:36:56,180 --> 00:37:00,710
different ways<font color="#CCCCCC"> that</font><font color="#E5E5E5"> you can call mid how</font>

843
00:36:58,579 --> 00:37:04,640
are those represented in the<font color="#E5E5E5"> P code</font>

844
00:37:00,710 --> 00:37:07,819
instructions<font color="#E5E5E5"> and then we write our nice</font>

845
00:37:04,640 --> 00:37:08,930
and so easy<font color="#E5E5E5"> to read</font><font color="#CCCCCC"> a regular expression</font>

846
00:37:07,819 --> 00:37:11,569
<font color="#CCCCCC">down there</font>

847
00:37:08,930 --> 00:37:15,049
for<font color="#E5E5E5"> picking out the bytes and then in</font>

848
00:37:11,569 --> 00:37:17,050
<font color="#CCCCCC">Yoram we say that if we see more than</font><font color="#E5E5E5"> 75</font>

849
00:37:15,050 --> 00:37:20,599
of those instructions<font color="#E5E5E5"> in the P code</font>

850
00:37:17,050 --> 00:37:22,040
<font color="#CCCCCC">we're</font><font color="#E5E5E5"> gonna throw up a red</font><font color="#CCCCCC"> flag</font><font color="#E5E5E5"> and take</font>

851
00:37:20,599 --> 00:37:29,060
a closer look do something with this

852
00:37:22,040 --> 00:37:33,560
document<font color="#CCCCCC"> and</font><font color="#E5E5E5"> now who we've also done</font>

853
00:37:29,060 --> 00:37:36,380
some<font color="#CCCCCC"> work</font><font color="#E5E5E5"> in the area of looking for VBA</font>

854
00:37:33,560 --> 00:37:38,029
source code P code mismatches because

855
00:37:36,380 --> 00:37:40,159
<font color="#E5E5E5">this is where the</font>

856
00:37:38,029 --> 00:37:43,849
kind of like more more obvious<font color="#E5E5E5"> Avenue to</font>

857
00:37:40,159 --> 00:37:47,109
take with this is<font color="#E5E5E5"> so we've written an</font>

858
00:37:43,849 --> 00:37:50,119
open<font color="#CCCCCC"> source tool</font><font color="#E5E5E5"> called VBA seismograph</font>

859
00:37:47,109 --> 00:37:54,709
<font color="#CCCCCC">which is written</font><font color="#E5E5E5"> in Python it's up on</font>

860
00:37:50,119 --> 00:37:56,899
github<font color="#CCCCCC"> it has a MIT license</font><font color="#E5E5E5"> so basically</font>

861
00:37:54,709 --> 00:37:59,629
if you<font color="#CCCCCC"> all are</font><font color="#E5E5E5"> interested in this and</font>

862
00:37:56,899 --> 00:38:05,269
<font color="#CCCCCC">especially if you</font><font color="#E5E5E5"> have</font><font color="#CCCCCC"> security</font><font color="#E5E5E5"> products</font>

863
00:37:59,629 --> 00:38:09,229
please steal it and try<font color="#CCCCCC"> to use it so</font>

864
00:38:05,269 --> 00:38:11,419
what<font color="#E5E5E5"> the VBA seismographic does is just</font>

865
00:38:09,229 --> 00:38:13,729
looks through<font color="#CCCCCC"> the P code pulls out all</font>

866
00:38:11,419 --> 00:38:16,848
of the defined functions the function

867
00:38:13,729 --> 00:38:19,609
names<font color="#E5E5E5"> variable</font><font color="#CCCCCC"> names out of</font><font color="#E5E5E5"> the P code</font>

868
00:38:16,849 --> 00:38:21,979
and checks do these show up<font color="#E5E5E5"> in the VBA</font>

869
00:38:19,609 --> 00:38:24,169
source code<font color="#E5E5E5"> it looks for all of the</font>

870
00:38:21,979 --> 00:38:26,448
string literals<font color="#E5E5E5"> that</font><font color="#CCCCCC"> are defined in the</font>

871
00:38:24,169 --> 00:38:29,929
<font color="#CCCCCC">P code to those show up</font><font color="#E5E5E5"> in the VBA</font>

872
00:38:26,449 --> 00:38:32,889
source code<font color="#CCCCCC"> looks a interestingly enough</font>

873
00:38:29,929 --> 00:38:36,259
in the<font color="#E5E5E5"> P code it actually includes the</font>

874
00:38:32,889 --> 00:38:39,199
<font color="#E5E5E5">comment lines that should show up in the</font>

875
00:38:36,259 --> 00:38:41,149
VBA so we check for<font color="#CCCCCC"> those also and</font><font color="#E5E5E5"> if we</font>

876
00:38:39,199 --> 00:38:43,969
see any things that<font color="#CCCCCC"> are</font><font color="#E5E5E5"> showing up</font>

877
00:38:41,149 --> 00:38:47,029
<font color="#CCCCCC">inside the</font><font color="#E5E5E5"> P code that do not show up</font>

878
00:38:43,969 --> 00:38:49,239
<font color="#E5E5E5">inside the VBA source code VBA a</font>

879
00:38:47,029 --> 00:38:51,379
seismograph will throw up a flag and<font color="#E5E5E5"> say</font>

880
00:38:49,239 --> 00:38:57,559
<font color="#CCCCCC">this is something you need</font><font color="#E5E5E5"> to take a</font>

881
00:38:51,379 --> 00:39:01,848
closer<font color="#CCCCCC"> look at so that</font><font color="#E5E5E5"> concludes the</font>

882
00:38:57,559 --> 00:39:06,909
content of the talk<font color="#E5E5E5"> we have a website up</font>

883
00:39:01,849 --> 00:39:09,769
that<font color="#E5E5E5"> HTTP VBA a stomp comm that has</font>

884
00:39:06,909 --> 00:39:13,159
links<font color="#CCCCCC"> to</font><font color="#E5E5E5"> some blog</font><font color="#CCCCCC"> post</font><font color="#E5E5E5"> that</font><font color="#CCCCCC"> we</font><font color="#E5E5E5"> wrote</font>

885
00:39:09,769 --> 00:39:15,408
<font color="#CCCCCC">that go into</font><font color="#E5E5E5"> more detail about what</font><font color="#CCCCCC"> we</font>

886
00:39:13,159 --> 00:39:17,719
covered<font color="#E5E5E5"> in the talk also</font><font color="#CCCCCC"> like links to</font>

887
00:39:15,409 --> 00:39:20,449
<font color="#CCCCCC">our the VBA seismograph github links</font>

888
00:39:17,719 --> 00:39:24,709
<font color="#CCCCCC">doctor bond chefs work and other things</font>

889
00:39:20,449 --> 00:39:28,029
<font color="#CCCCCC">like that so at</font><font color="#E5E5E5"> this point we can open</font>

890
00:39:24,709 --> 00:39:28,029
<font color="#E5E5E5">it</font><font color="#CCCCCC"> up</font><font color="#E5E5E5"> for questions</font>

891
00:39:29,110 --> 00:39:38,340
[Applause]

892
00:39:51,600 --> 00:39:59,310
yeah so we started<font color="#CCCCCC"> to do</font><font color="#E5E5E5"> like a okay so</font>

893
00:39:57,100 --> 00:40:02,380
<font color="#E5E5E5">the the</font><font color="#CCCCCC"> question</font><font color="#E5E5E5"> was okay so we've been</font>

894
00:39:59,310 --> 00:40:04,930
<font color="#E5E5E5">looking at different</font><font color="#CCCCCC"> like</font><font color="#E5E5E5"> about office</font>

895
00:40:02,380 --> 00:40:08,200
<font color="#E5E5E5">cash ins and modifications</font><font color="#CCCCCC"> to the that</font>

896
00:40:04,930 --> 00:40:09,759
compressed<font color="#CCCCCC"> VBA source code</font><font color="#E5E5E5"> and the</font>

897
00:40:08,200 --> 00:40:14,049
question was<font color="#CCCCCC"> how</font><font color="#E5E5E5"> about going from the</font>

898
00:40:09,760 --> 00:40:18,190
other end<font color="#CCCCCC"> so you work with and mess up</font>

899
00:40:14,050 --> 00:40:20,680
<font color="#E5E5E5">the P code rather than doing things with</font>

900
00:40:18,190 --> 00:40:22,210
the the<font color="#E5E5E5"> VBA source code so kind of going</font>

901
00:40:20,680 --> 00:40:24,069
<font color="#CCCCCC">the opposite direction from like</font><font color="#E5E5E5"> carries</font>

902
00:40:22,210 --> 00:40:26,440
example where she<font color="#E5E5E5"> modified the VBA</font>

903
00:40:24,070 --> 00:40:27,910
source code in there you ran it did

904
00:40:26,440 --> 00:40:29,590
something<font color="#CCCCCC"> different how about</font><font color="#E5E5E5"> doing that</font>

905
00:40:27,910 --> 00:40:32,680
from<font color="#E5E5E5"> the other end where you modify the</font>

906
00:40:29,590 --> 00:40:35,950
<font color="#E5E5E5">P code and now it doesn't match the VBA</font>

907
00:40:32,680 --> 00:40:40,450
source code so we we did like a<font color="#E5E5E5"> little</font>

908
00:40:35,950 --> 00:40:42,819
<font color="#E5E5E5">bit of work with</font><font color="#CCCCCC"> that</font><font color="#E5E5E5"> yeah</font>

909
00:40:40,450 --> 00:40:44,410
since the<font color="#E5E5E5"> P codes like a compiled</font>

910
00:40:42,820 --> 00:40:46,780
<font color="#E5E5E5">instructions and stuff like it's a</font>

911
00:40:44,410 --> 00:40:48,370
little<font color="#CCCCCC"> bit</font><font color="#E5E5E5"> less forgiving of like</font>

912
00:40:46,780 --> 00:40:52,090
fiddling around with the values in there

913
00:40:48,370 --> 00:40:53,980
so it's definitely<font color="#E5E5E5"> possible to do it</font><font color="#CCCCCC"> it</font>

914
00:40:52,090 --> 00:40:56,260
would take<font color="#CCCCCC"> a little</font><font color="#E5E5E5"> more</font><font color="#CCCCCC"> effort</font><font color="#E5E5E5"> than we</font>

915
00:40:53,980 --> 00:41:06,970
had like time allocated to do it so yeah

916
00:40:56,260 --> 00:41:08,890
oh yeah that was<font color="#E5E5E5"> really interesting so</font>

917
00:41:06,970 --> 00:41:10,720
<font color="#CCCCCC">the</font><font color="#E5E5E5"> question is what sort of prevalence</font>

918
00:41:08,890 --> 00:41:12,400
<font color="#E5E5E5">in the wild</font><font color="#CCCCCC"> are we seeing where the P</font>

919
00:41:10,720 --> 00:41:15,609
code doesn't<font color="#E5E5E5"> match the disassembled</font><font color="#CCCCCC"> to</font>

920
00:41:12,400 --> 00:41:16,960
<font color="#CCCCCC">VBA source code so we pull down</font><font color="#E5E5E5"> like a</font>

921
00:41:15,610 --> 00:41:19,000
bunch of<font color="#E5E5E5"> mal</font><font color="#CCCCCC"> Docs every day from</font>

922
00:41:16,960 --> 00:41:20,620
virustotal and and run them through

923
00:41:19,000 --> 00:41:22,120
<font color="#E5E5E5">different analyzers</font><font color="#CCCCCC"> to see what's going</font>

924
00:41:20,620 --> 00:41:24,040
<font color="#CCCCCC">on with different</font><font color="#E5E5E5"> campaigns and stuff</font>

925
00:41:22,120 --> 00:41:26,410
like that<font color="#E5E5E5"> so we added the VBA</font>

926
00:41:24,040 --> 00:41:28,450
seismograph into that<font color="#E5E5E5"> process and we</font>

927
00:41:26,410 --> 00:41:34,200
were expecting to<font color="#E5E5E5"> see like really</font>

928
00:41:28,450 --> 00:41:37,330
<font color="#CCCCCC">basically none</font><font color="#E5E5E5"> but we're not seeing none</font>

929
00:41:34,200 --> 00:41:41,710
we're<font color="#E5E5E5"> probably seen about four to five</font>

930
00:41:37,330 --> 00:41:43,569
<font color="#CCCCCC">Docs a day</font><font color="#E5E5E5"> where there are obviously</font>

931
00:41:41,710 --> 00:41:46,940
functions that are in the P code that

932
00:41:43,570 --> 00:41:49,130
are not<font color="#E5E5E5"> appearing in the VBA source code</font>

933
00:41:46,940 --> 00:41:50,600
from doing<font color="#E5E5E5"> manual</font><font color="#CCCCCC"> analysis on</font><font color="#E5E5E5"> there</font>

934
00:41:49,130 --> 00:41:54,470
doesn't look<font color="#CCCCCC"> like the functions are like</font>

935
00:41:50,600 --> 00:41:56,000
called<font color="#E5E5E5"> or like really doing anything</font><font color="#CCCCCC"> but</font>

936
00:41:54,470 --> 00:41:57,410
<font color="#CCCCCC">the fact that there's a difference there</font>

937
00:41:56,000 --> 00:41:59,630
like we think<font color="#E5E5E5"> that</font><font color="#CCCCCC"> might be like an</font>

938
00:41:57,410 --> 00:42:02,960
artifact of the malware<font color="#E5E5E5"> the</font><font color="#CCCCCC"> Maldek</font>

939
00:41:59,630 --> 00:42:05,180
builder<font color="#E5E5E5"> that the people are using but</font><font color="#CCCCCC"> we</font>

940
00:42:02,960 --> 00:42:07,490
<font color="#CCCCCC">this</font><font color="#E5E5E5"> point like we haven't dug into</font>

941
00:42:05,180 --> 00:42:08,660
enough to figure<font color="#E5E5E5"> out like how they're</font>

942
00:42:07,490 --> 00:42:11,240
getting<font color="#E5E5E5"> that to happen</font><font color="#CCCCCC"> because they're</font>

943
00:42:08,660 --> 00:42:13,040
not<font color="#E5E5E5"> just stomping over like all of the</font>

944
00:42:11,240 --> 00:42:15,950
<font color="#CCCCCC">vba source code like the way we've been</font>

945
00:42:13,040 --> 00:42:18,380
showing in this talk they have<font color="#E5E5E5"> valid</font><font color="#CCCCCC"> vba</font>

946
00:42:15,950 --> 00:42:21,730
source code of<font color="#CCCCCC"> their they have valid</font><font color="#E5E5E5"> p</font>

947
00:42:18,380 --> 00:42:21,730
code but the two of<font color="#CCCCCC"> them</font><font color="#E5E5E5"> don't match</font>

948
00:42:36,220 --> 00:42:46,430
it's<font color="#CCCCCC"> ok so you know like there's</font><font color="#E5E5E5"> a like</font>

949
00:42:42,470 --> 00:42:49,850
like a kind of<font color="#E5E5E5"> low-level Retief a mal</font>

950
00:42:46,430 --> 00:42:51,890
<font color="#E5E5E5">dot campaign that's</font><font color="#CCCCCC"> going on and like</font>

951
00:42:49,850 --> 00:42:54,890
periodically<font color="#E5E5E5"> like whenever the they'll</font>

952
00:42:51,890 --> 00:42:59,060
have a mal doc template that will have

953
00:42:54,890 --> 00:43:03,080
this mismatch between the<font color="#CCCCCC"> vba source and</font>

954
00:42:59,060 --> 00:43:06,049
the<font color="#E5E5E5"> p code we've seen some like other</font>

955
00:43:03,080 --> 00:43:08,000
small campaigns that we have not<font color="#E5E5E5"> been</font>

956
00:43:06,050 --> 00:43:11,150
<font color="#E5E5E5">able to track down like what exactly</font><font color="#CCCCCC"> the</font>

957
00:43:08,000 --> 00:43:13,520
campaign it is<font color="#E5E5E5"> so they</font><font color="#CCCCCC"> they tend to be</font>

958
00:43:11,150 --> 00:43:15,830
good like<font color="#E5E5E5"> like much smaller campaigns</font>

959
00:43:13,520 --> 00:43:17,600
they're doing this like the big ones

960
00:43:15,830 --> 00:43:19,880
like<font color="#CCCCCC"> earth sniff</font><font color="#E5E5E5"> and</font><font color="#CCCCCC"> ii</font><font color="#E5E5E5"> motet and stuff</font>

961
00:43:17,600 --> 00:43:36,890
like<font color="#E5E5E5"> that those all the P code matches</font>

962
00:43:19,880 --> 00:43:39,350
<font color="#CCCCCC">up exactly with the VBA so the question</font>

963
00:43:36,890 --> 00:43:42,440
is like<font color="#CCCCCC"> do you do we think that these</font>

964
00:43:39,350 --> 00:43:44,330
<font color="#E5E5E5">maybe the</font><font color="#CCCCCC"> K the cases where</font><font color="#E5E5E5"> things look</font>

965
00:43:42,440 --> 00:43:48,340
<font color="#CCCCCC">like there's a mismatch whether it looks</font>

966
00:43:44,330 --> 00:43:52,029
<font color="#E5E5E5">like it may be a targeted attack</font><font color="#CCCCCC"> or</font><font color="#E5E5E5"> not</font>

967
00:43:48,340 --> 00:43:54,830
for<font color="#E5E5E5"> the majority of them</font><font color="#CCCCCC"> that I'm</font><font color="#E5E5E5"> seeing</font>

968
00:43:52,030 --> 00:43:56,059
<font color="#E5E5E5">like</font><font color="#CCCCCC"> I don't think</font><font color="#E5E5E5"> it's</font><font color="#CCCCCC"> a targeted</font>

969
00:43:54,830 --> 00:43:59,480
attack

970
00:43:56,059 --> 00:44:03,890
because we're<font color="#CCCCCC"> will see like</font><font color="#E5E5E5"> maybe like</font>

971
00:43:59,480 --> 00:44:05,750
<font color="#E5E5E5">five six</font><font color="#CCCCCC"> ten</font><font color="#E5E5E5"> docks where they've like</font>

972
00:44:03,890 --> 00:44:07,220
changed up like the<font color="#E5E5E5"> document content</font><font color="#CCCCCC"> you</font>

973
00:44:05,750 --> 00:44:10,160
<font color="#E5E5E5">know like like what you would</font><font color="#CCCCCC"> see when</font>

974
00:44:07,220 --> 00:44:13,098
<font color="#E5E5E5">you bring it up in</font><font color="#CCCCCC"> word but</font><font color="#E5E5E5"> the P code</font>

975
00:44:10,160 --> 00:44:15,020
and the VBA is exactly the same in it so

976
00:44:13,099 --> 00:44:18,200
it looks like it's<font color="#CCCCCC"> probably an artifact</font>

977
00:44:15,020 --> 00:44:20,809
of<font color="#E5E5E5"> whatever</font><font color="#CCCCCC"> Maldek</font><font color="#E5E5E5"> builder they're using</font>

978
00:44:18,200 --> 00:44:24,589
<font color="#E5E5E5">but</font><font color="#CCCCCC"> we</font><font color="#E5E5E5"> are seeing somewhere we have like</font>

979
00:44:20,809 --> 00:44:26,150
one<font color="#CCCCCC"> dock that</font><font color="#E5E5E5"> were not seeing anything</font>

980
00:44:24,589 --> 00:44:27,799
like<font color="#CCCCCC"> that showing</font><font color="#E5E5E5"> up at all so that</font>

981
00:44:26,150 --> 00:44:47,329
potentially could be<font color="#E5E5E5"> like a targeted</font>

982
00:44:27,799 --> 00:44:53,869
attack<font color="#CCCCCC"> okay so the question</font><font color="#E5E5E5"> is whether</font>

983
00:44:47,329 --> 00:44:56,030
it is possible<font color="#CCCCCC"> to get like multiple</font>

984
00:44:53,869 --> 00:44:58,670
versions of<font color="#E5E5E5"> the P code in there that are</font>

985
00:44:56,030 --> 00:45:06,770
targeted towards<font color="#E5E5E5"> different versions of</font>

986
00:44:58,670 --> 00:45:08,059
<font color="#E5E5E5">VBA from from what I've seen</font><font color="#CCCCCC"> in</font><font color="#E5E5E5"> the P</font>

987
00:45:06,770 --> 00:45:11,690
code no like I<font color="#CCCCCC"> think the fingers like</font>

988
00:45:08,059 --> 00:45:13,160
information<font color="#E5E5E5"> like up at the top that</font>

989
00:45:11,690 --> 00:45:15,380
we've seen that<font color="#CCCCCC"> kind of says something</font>

990
00:45:13,160 --> 00:45:19,879
about like the VBA DLL<font color="#E5E5E5"> and stuff like</font>

991
00:45:15,380 --> 00:45:21,410
<font color="#E5E5E5">that that is expecting</font><font color="#CCCCCC"> to get so there</font>

992
00:45:19,880 --> 00:45:23,930
are some hard-coded paths like in the

993
00:45:21,410 --> 00:45:26,540
<font color="#E5E5E5">actual object that point to like the DLL</font>

994
00:45:23,930 --> 00:45:28,819
path that<font color="#CCCCCC"> it expects</font><font color="#E5E5E5"> for the VBA</font><font color="#CCCCCC"> and we</font>

995
00:45:26,540 --> 00:45:30,920
think<font color="#CCCCCC"> that we're</font><font color="#E5E5E5"> still trying to pin</font>

996
00:45:28,819 --> 00:45:33,140
down like the exact combination<font color="#CCCCCC"> of</font>

997
00:45:30,920 --> 00:45:36,680
<font color="#E5E5E5">information that like of OS and</font>

998
00:45:33,140 --> 00:45:37,730
<font color="#CCCCCC">office:version and the the VBA version</font>

999
00:45:36,680 --> 00:45:39,859
<font color="#E5E5E5">that's installed on the</font><font color="#CCCCCC"> system that</font>

1000
00:45:37,730 --> 00:45:41,720
<font color="#CCCCCC">controls whether or not the P code will</font>

1001
00:45:39,859 --> 00:45:45,680
execute or<font color="#E5E5E5"> elf or it falls back to the</font>

1002
00:45:41,720 --> 00:45:47,660
<font color="#CCCCCC">VBA source but we are at</font><font color="#E5E5E5"> this point are</font>

1003
00:45:45,680 --> 00:45:49,578
running theory is that<font color="#E5E5E5"> if those paths</font>

1004
00:45:47,660 --> 00:45:50,839
<font color="#E5E5E5">don't exist in the VBA version and the</font>

1005
00:45:49,579 --> 00:45:52,760
deals aren't there that's not<font color="#CCCCCC"> going</font><font color="#E5E5E5"> to</font>

1006
00:45:50,839 --> 00:45:54,859
<font color="#E5E5E5">run so trying to create multiple P code</font>

1007
00:45:52,760 --> 00:45:58,790
that would<font color="#E5E5E5"> run on</font><font color="#CCCCCC"> multiple versions we</font>

1008
00:45:54,859 --> 00:46:00,140
haven't debugged<font color="#E5E5E5"> word to see like where</font>

1009
00:45:58,790 --> 00:46:01,660
it's looking<font color="#E5E5E5"> at what</font><font color="#CCCCCC"> it's doing to</font><font color="#E5E5E5"> see</font>

1010
00:46:00,140 --> 00:46:04,759
<font color="#E5E5E5">if we could trick it into doing multiple</font>

1011
00:46:01,660 --> 00:46:06,259
so we're not<font color="#CCCCCC"> 100%</font><font color="#E5E5E5"> but at this point</font>

1012
00:46:04,760 --> 00:46:10,359
those pads lead us to believe<font color="#CCCCCC"> that you'd</font>

1013
00:46:06,260 --> 00:46:10,359
have<font color="#E5E5E5"> to have a specific</font><font color="#CCCCCC"> p code</font>

1014
00:46:12,420 --> 00:46:16,200
time for probably<font color="#E5E5E5"> one</font><font color="#CCCCCC"> more</font><font color="#E5E5E5"> question</font>

1015
00:46:17,520 --> 00:46:29,030
buddy good cool thank you<font color="#CCCCCC"> very much</font>

1016
00:46:20,820 --> 00:46:29,030
[Applause]

