1
00:00:00,030 --> 00:00:03,719
sorry folks we had a<font color="#E5E5E5"> little problem -</font>

2
00:00:01,740 --> 00:00:07,379
audio<font color="#E5E5E5"> when the cables was ever so</font>

3
00:00:03,720 --> 00:00:09,269
slightly out<font color="#E5E5E5"> of the</font><font color="#CCCCCC"> Jack</font><font color="#E5E5E5"> so audio is not</font>

4
00:00:07,379 --> 00:00:12,960
existent all<font color="#CCCCCC"> these just noise in this</font>

5
00:00:09,269 --> 00:00:16,940
video until about the<font color="#CCCCCC"> 17 minute 26</font>

6
00:00:12,960 --> 00:00:16,940
second mark<font color="#CCCCCC"> sorry</font><font color="#E5E5E5"> for the</font><font color="#CCCCCC"> inconvenience</font>

7
00:17:33,270 --> 00:17:38,500
we have a console that<font color="#E5E5E5"> doesn't have the</font>

8
00:17:36,910 --> 00:17:43,710
standard library on disk<font color="#E5E5E5"> so</font><font color="#CCCCCC"> it's not</font><font color="#E5E5E5"> a</font>

9
00:17:38,500 --> 00:17:46,869
<font color="#E5E5E5">bit not available and what happens is</font>

10
00:17:43,710 --> 00:17:46,869
[Music]

11
00:17:59,100 --> 00:18:05,260
anyways it loads and it crashes<font color="#CCCCCC"> because</font>

12
00:18:01,810 --> 00:18:10,720
<font color="#CCCCCC">I can't find the module okay next up we</font>

13
00:18:05,260 --> 00:18:15,490
<font color="#E5E5E5">import our Lib</font><font color="#CCCCCC"> - or sorry we import our</font>

14
00:18:10,720 --> 00:18:17,230
custom module of HTTP import and it's

15
00:18:15,490 --> 00:18:22,720
pointed<font color="#CCCCCC"> at the web server that</font><font color="#E5E5E5"> we see</font>

16
00:18:17,230 --> 00:18:26,830
that's<font color="#E5E5E5"> running on the right okay we load</font>

17
00:18:22,720 --> 00:18:30,460
that<font color="#E5E5E5"> into memory and then</font><font color="#CCCCCC"> we load HTV or</font>

18
00:18:26,830 --> 00:18:32,139
lib<font color="#CCCCCC"> to again and we see a flutter</font>

19
00:18:30,460 --> 00:18:36,010
<font color="#CCCCCC">hammock of activity from the web server</font>

20
00:18:32,140 --> 00:18:37,750
<font color="#CCCCCC">as HTTP import</font><font color="#E5E5E5"> is downloading not only</font>

21
00:18:36,010 --> 00:18:39,820
<font color="#E5E5E5">that grillak - but all the dependencies</font>

22
00:18:37,750 --> 00:18:41,230
<font color="#E5E5E5">because there's Earlham - has a huge</font>

23
00:18:39,820 --> 00:18:42,340
number<font color="#E5E5E5"> of dependencies</font><font color="#CCCCCC"> that all need to</font>

24
00:18:41,230 --> 00:18:47,020
be downloaded<font color="#E5E5E5"> as well because you won't</font>

25
00:18:42,340 --> 00:18:58,080
happen<font color="#CCCCCC"> ok</font><font color="#E5E5E5"> so that is the standard</font>

26
00:18:47,020 --> 00:19:01,030
<font color="#E5E5E5">library don't with one more time</font><font color="#CCCCCC"> ok</font>

27
00:18:58,080 --> 00:19:03,100
<font color="#CCCCCC">alright so standard library is great</font><font color="#E5E5E5"> ok</font>

28
00:19:01,030 --> 00:19:06,040
so next up let's let's<font color="#E5E5E5"> take a look at</font>

29
00:19:03,100 --> 00:19:11,919
the exe<font color="#CCCCCC"> ok so right</font><font color="#E5E5E5"> now I PI dot exe is</font>

30
00:19:06,040 --> 00:19:12,940
a horribly inflexible executable<font color="#CCCCCC"> ok</font><font color="#E5E5E5"> so</font>

31
00:19:11,920 --> 00:19:15,340
we want<font color="#CCCCCC"> to make</font><font color="#E5E5E5"> something a little bit</font>

32
00:19:12,940 --> 00:19:16,120
more malleable<font color="#CCCCCC"> we pop over</font><font color="#E5E5E5"> and</font>

33
00:19:15,340 --> 00:19:19,870
sharpdevelop

34
00:19:16,120 --> 00:19:23,169
or you can use<font color="#E5E5E5"> visual studio if you want</font>

35
00:19:19,870 --> 00:19:24,969
to but sharpdevelop<font color="#E5E5E5"> actually it has some</font>

36
00:19:23,170 --> 00:19:27,910
really good<font color="#E5E5E5"> features for ironpython that</font>

37
00:19:24,970 --> 00:19:32,440
<font color="#E5E5E5">i and it doesn't make you sign in with</font><font color="#CCCCCC"> a</font>

38
00:19:27,910 --> 00:19:34,780
<font color="#E5E5E5">Microsoft account</font><font color="#CCCCCC"> so so this is</font>

39
00:19:32,440 --> 00:19:35,590
basically<font color="#E5E5E5"> so if you if you're familiar</font>

40
00:19:34,780 --> 00:19:37,510
with c-sharp

41
00:19:35,590 --> 00:19:39,530
you have your ironpython assemblies on

42
00:19:37,510 --> 00:19:41,840
the left<font color="#CCCCCC"> and</font>

43
00:19:39,530 --> 00:19:43,940
<font color="#E5E5E5">the blue code in the center that's</font>

44
00:19:41,840 --> 00:19:46,720
that's your actual<font color="#CCCCCC"> Python code and the</font>

45
00:19:43,940 --> 00:19:53,870
rest is just<font color="#E5E5E5"> rapper code that invokes</font>

46
00:19:46,720 --> 00:19:56,810
<font color="#E5E5E5">that Python code</font><font color="#CCCCCC"> okay and when you</font>

47
00:19:53,870 --> 00:19:57,500
execute<font color="#CCCCCC"> it it executes your Python code</font>

48
00:19:56,810 --> 00:20:00,649
and you're good to<font color="#CCCCCC"> go</font>

49
00:19:57,500 --> 00:20:04,010
okay<font color="#E5E5E5"> so we'll have a demo of</font><font color="#CCCCCC"> this later</font>

50
00:20:00,650 --> 00:20:06,380
in<font color="#E5E5E5"> the talk but for now when you exit</font>

51
00:20:04,010 --> 00:20:08,810
waiting you when you compile this you've

52
00:20:06,380 --> 00:20:11,510
got an exe called<font color="#E5E5E5"> whatever you wanted to</font>

53
00:20:08,810 --> 00:20:14,450
call<font color="#CCCCCC"> it and it's much more malleable you</font>

54
00:20:11,510 --> 00:20:16,370
can put a GUI on<font color="#E5E5E5"> it you can have it</font><font color="#CCCCCC"> run</font>

55
00:20:14,450 --> 00:20:17,990
of the things you can do whatever you

56
00:20:16,370 --> 00:20:23,090
want whatever<font color="#E5E5E5"> you can do with a regular</font>

57
00:20:17,990 --> 00:20:25,280
C sharp program<font color="#CCCCCC"> okay</font><font color="#E5E5E5"> next up we're</font><font color="#CCCCCC"> gonna</font>

58
00:20:23,090 --> 00:20:29,649
<font color="#CCCCCC">look at these</font><font color="#E5E5E5"> four</font><font color="#CCCCCC"> DLLs</font><font color="#E5E5E5"> ironpython</font>

59
00:20:25,280 --> 00:20:31,879
modules ironpython<font color="#CCCCCC"> dll</font><font color="#E5E5E5"> and the the two</font>

60
00:20:29,650 --> 00:20:34,400
dll's that make up the dynamic language

61
00:20:31,880 --> 00:20:36,550
runtime<font color="#CCCCCC"> okay</font><font color="#E5E5E5"> and we kind of are</font><font color="#CCCCCC"> gonna</font>

62
00:20:34,400 --> 00:20:40,100
<font color="#E5E5E5">deal with them all in the same way okay</font>

63
00:20:36,550 --> 00:20:43,129
so the first way that<font color="#E5E5E5"> I looked at</font><font color="#CCCCCC"> was</font>

64
00:20:40,100 --> 00:20:46,699
doing this<font color="#E5E5E5"> with with il merge okay</font><font color="#CCCCCC"> and</font>

65
00:20:43,130 --> 00:20:50,000
this<font color="#E5E5E5"> has been used by c-sharp developers</font>

66
00:20:46,700 --> 00:20:51,740
for years<font color="#E5E5E5"> it was made by Microsoft</font><font color="#CCCCCC"> and I</font>

67
00:20:50,000 --> 00:20:58,460
don't<font color="#CCCCCC"> think they</font><font color="#E5E5E5"> like that they made it</font>

68
00:20:51,740 --> 00:21:00,140
but<font color="#CCCCCC"> they did</font><font color="#E5E5E5"> open-source it</font><font color="#CCCCCC"> and but</font><font color="#E5E5E5"> it</font>

69
00:20:58,460 --> 00:21:02,240
<font color="#E5E5E5">is horribly and flexible and it's a</font>

70
00:21:00,140 --> 00:21:04,550
<font color="#E5E5E5">horrible project</font><font color="#CCCCCC"> I mean it's really is</font>

71
00:21:02,240 --> 00:21:07,070
so Microsoft<font color="#E5E5E5"> is the reason we</font><font color="#CCCCCC"> are not</font>

72
00:21:04,550 --> 00:21:10,790
<font color="#E5E5E5">using that</font><font color="#CCCCCC"> there is a great tool called</font>

73
00:21:07,070 --> 00:21:14,389
<font color="#CCCCCC">costera okay it's part of a</font><font color="#E5E5E5"> larger</font>

74
00:21:10,790 --> 00:21:17,360
project<font color="#E5E5E5"> called</font><font color="#CCCCCC"> fodi Custer</font><font color="#E5E5E5"> is Spanish</font>

75
00:21:14,390 --> 00:21:19,910
for weaving<font color="#E5E5E5"> and so the idea is you weave</font>

76
00:21:17,360 --> 00:21:22,879
<font color="#CCCCCC">your assemblies into</font><font color="#E5E5E5"> the exe using a</font>

77
00:21:19,910 --> 00:21:24,470
sort of resource<font color="#CCCCCC"> packing</font><font color="#E5E5E5"> okay so X YZ</font>

78
00:21:22,880 --> 00:21:27,830
can have<font color="#CCCCCC"> resources which are typically</font>

79
00:21:24,470 --> 00:21:30,320
things<font color="#E5E5E5"> like text files and images that</font>

80
00:21:27,830 --> 00:21:32,840
type of<font color="#E5E5E5"> thing and so what</font><font color="#CCCCCC"> that</font><font color="#E5E5E5"> means is</font>

81
00:21:30,320 --> 00:21:37,580
that<font color="#E5E5E5"> a at compile time you go from a dll</font>

82
00:21:32,840 --> 00:21:39,709
to a compressed resource<font color="#E5E5E5"> that is loaded</font>

83
00:21:37,580 --> 00:21:43,360
<font color="#E5E5E5">into the exe and you can do that with</font>

84
00:21:39,710 --> 00:21:47,260
<font color="#CCCCCC">multiple DLLs okay and then at runtime</font>

85
00:21:43,360 --> 00:21:49,639
those dll's are<font color="#E5E5E5"> uncompressed</font><font color="#CCCCCC"> and</font>

86
00:21:47,260 --> 00:21:51,260
unloaded<font color="#CCCCCC"> as</font><font color="#E5E5E5"> resources and</font><font color="#CCCCCC"> then load it</font>

87
00:21:49,640 --> 00:21:55,100
<font color="#E5E5E5">directly into memory</font>

88
00:21:51,260 --> 00:21:58,330
<font color="#CCCCCC">assembly's</font><font color="#E5E5E5"> okay very nifty trick are our</font>

89
00:21:55,100 --> 00:22:01,129
<font color="#E5E5E5">stripped down in Python</font><font color="#CCCCCC"> environment is</font>

90
00:21:58,330 --> 00:22:05,149
2.4 Meg's of this at this<font color="#E5E5E5"> point right</font><font color="#CCCCCC"> so</font>

91
00:22:01,130 --> 00:22:09,260
like without the standard library<font color="#CCCCCC"> a 2.4</font>

92
00:22:05,150 --> 00:22:11,840
megabyte payload size is<font color="#E5E5E5"> pretty</font>

93
00:22:09,260 --> 00:22:13,280
incredible as far as I'm concerned<font color="#CCCCCC"> I was</font>

94
00:22:11,840 --> 00:22:16,459
still unhappy<font color="#E5E5E5"> with this number and</font>

95
00:22:13,280 --> 00:22:19,100
<font color="#CCCCCC">actually</font><font color="#E5E5E5"> the good thing about coaster is</font>

96
00:22:16,460 --> 00:22:21,920
that many legitimate applications do

97
00:22:19,100 --> 00:22:24,770
this so it's not<font color="#E5E5E5"> even a good IOC for</font>

98
00:22:21,920 --> 00:22:27,770
people to flag on because there are so

99
00:22:24,770 --> 00:22:29,930
<font color="#E5E5E5">many legit allocations that use this</font>

100
00:22:27,770 --> 00:22:31,580
we've ever<font color="#CCCCCC"> used char pound</font><font color="#E5E5E5"> char pound</font>

101
00:22:29,930 --> 00:22:35,320
<font color="#E5E5E5">uses cost sure to bundle all the</font>

102
00:22:31,580 --> 00:22:38,199
dependencies<font color="#CCCCCC"> of it has into</font><font color="#E5E5E5"> one exe</font><font color="#CCCCCC"> okay</font>

103
00:22:35,320 --> 00:22:43,370
so but<font color="#E5E5E5"> that leaves us with a 2.4</font>

104
00:22:38,200 --> 00:22:44,510
megabyte payload size<font color="#E5E5E5"> which I was kind</font>

105
00:22:43,370 --> 00:22:45,590
of unhappy with because it was still

106
00:22:44,510 --> 00:22:47,860
bigger<font color="#CCCCCC"> than I wanted</font>

107
00:22:45,590 --> 00:22:51,439
<font color="#E5E5E5">and so what I'd</font><font color="#CCCCCC"> considered doing</font><font color="#E5E5E5"> was</font>

108
00:22:47,860 --> 00:22:54,979
encrypting the resources as they were

109
00:22:51,440 --> 00:22:58,520
loaded into the<font color="#E5E5E5"> exe which might be an</font>

110
00:22:54,980 --> 00:23:00,500
interesting<font color="#CCCCCC"> project and</font><font color="#E5E5E5"> so I started dug</font>

111
00:22:58,520 --> 00:23:02,710
into<font color="#E5E5E5"> it and I read how the project works</font>

112
00:23:00,500 --> 00:23:06,350
and and if you're at the talk yesterday

113
00:23:02,710 --> 00:23:09,800
<font color="#E5E5E5">you</font><font color="#CCCCCC"> know it's the</font><font color="#E5E5E5"> the same information</font>

114
00:23:06,350 --> 00:23:12,790
is here so<font color="#E5E5E5"> Jeffrey Richter</font><font color="#CCCCCC"> talks</font><font color="#E5E5E5"> about</font>

115
00:23:09,800 --> 00:23:15,649
this concept<font color="#E5E5E5"> of embedding resources as</font>

116
00:23:12,790 --> 00:23:19,280
emerging as a method of merging

117
00:23:15,650 --> 00:23:22,940
assemblies<font color="#CCCCCC"> ok and so this is the code</font>

118
00:23:19,280 --> 00:23:23,570
<font color="#CCCCCC">that he has from</font><font color="#E5E5E5"> his book called CL</font><font color="#CCCCCC"> RVs</font>

119
00:23:22,940 --> 00:23:26,180
<font color="#E5E5E5">c-sharp</font>

120
00:23:23,570 --> 00:23:28,370
<font color="#CCCCCC">Jeffrey Richter</font><font color="#E5E5E5"> is a guy who worked at</font>

121
00:23:26,180 --> 00:23:32,570
Microsoft<font color="#E5E5E5"> or works there I</font><font color="#CCCCCC"> don't</font><font color="#E5E5E5"> know he</font>

122
00:23:28,370 --> 00:23:36,050
still does and what he<font color="#CCCCCC"> figured</font><font color="#E5E5E5"> out is</font>

123
00:23:32,570 --> 00:23:37,399
<font color="#E5E5E5">really clever</font><font color="#CCCCCC"> okay I saw this code and</font>

124
00:23:36,050 --> 00:23:39,020
like the first time I really understood

125
00:23:37,400 --> 00:23:40,310
it<font color="#E5E5E5"> I was like wow he's</font><font color="#CCCCCC"> got I was</font>

126
00:23:39,020 --> 00:23:42,020
thinking outside the box this guy<font color="#E5E5E5"> would</font>

127
00:23:40,310 --> 00:23:44,919
<font color="#CCCCCC">have</font><font color="#E5E5E5"> been an incredible</font><font color="#CCCCCC"> hacker but he</font>

128
00:23:42,020 --> 00:23:47,150
<font color="#CCCCCC">probably chose another path but</font>

129
00:23:44,920 --> 00:23:50,390
basically what he<font color="#CCCCCC"> figured</font><font color="#E5E5E5"> out is</font><font color="#CCCCCC"> that</font>

130
00:23:47,150 --> 00:23:54,470
remember<font color="#E5E5E5"> how I said the when an exe</font>

131
00:23:50,390 --> 00:23:55,670
executes that<font color="#CCCCCC"> is a dotnet executable it</font>

132
00:23:54,470 --> 00:23:57,200
checks the<font color="#CCCCCC"> filesystem for all those</font>

133
00:23:55,670 --> 00:23:59,480
<font color="#E5E5E5">places right so it looks in its own</font>

134
00:23:57,200 --> 00:24:01,180
folder<font color="#CCCCCC"> it might look in</font><font color="#E5E5E5"> a subfolder or a</font>

135
00:23:59,480 --> 00:24:03,430
statically set folder and look

136
00:24:01,180 --> 00:24:05,950
in the global<font color="#E5E5E5"> assembly cache for those</font>

137
00:24:03,430 --> 00:24:09,670
<font color="#E5E5E5">dll's right and if it doesn't find those</font>

138
00:24:05,950 --> 00:24:13,290
dll's on disk<font color="#CCCCCC"> it crashes okay right</font>

139
00:24:09,670 --> 00:24:16,990
<font color="#E5E5E5">before it crashes</font><font color="#CCCCCC"> it does</font><font color="#E5E5E5"> what's called</font>

140
00:24:13,290 --> 00:24:18,790
an assembly<font color="#CCCCCC"> resolve event okay that</font><font color="#E5E5E5"> is</font>

141
00:24:16,990 --> 00:24:20,800
essentially an exception<font color="#CCCCCC"> raises an</font>

142
00:24:18,790 --> 00:24:23,470
exception<font color="#E5E5E5"> which</font><font color="#CCCCCC"> Jeffrey figured out is</font>

143
00:24:20,800 --> 00:24:26,050
he could catch<font color="#CCCCCC"> that exception</font><font color="#E5E5E5"> with an</font>

144
00:24:23,470 --> 00:24:28,540
assembly<font color="#CCCCCC"> resolved event handler</font><font color="#E5E5E5"> so</font><font color="#CCCCCC"> he</font>

145
00:24:26,050 --> 00:24:30,940
could<font color="#E5E5E5"> he could write a custom handler in</font>

146
00:24:28,540 --> 00:24:33,430
order<font color="#E5E5E5"> to deal with</font><font color="#CCCCCC"> the exception so</font>

147
00:24:30,940 --> 00:24:36,190
right before<font color="#E5E5E5"> crashes he says wait</font><font color="#CCCCCC"> wait I</font>

148
00:24:33,430 --> 00:24:38,080
have a way<font color="#CCCCCC"> for</font><font color="#E5E5E5"> you to deal with</font><font color="#CCCCCC"> the fact</font>

149
00:24:36,190 --> 00:24:40,870
<font color="#CCCCCC">that you can't</font><font color="#E5E5E5"> find these dll's</font><font color="#CCCCCC"> before</font>

150
00:24:38,080 --> 00:24:43,540
you crash<font color="#E5E5E5"> okay</font><font color="#CCCCCC"> and there's two basic</font>

151
00:24:40,870 --> 00:24:45,550
arrows here so the first<font color="#E5E5E5"> arrow it says</font>

152
00:24:43,540 --> 00:24:48,610
hey I've got this<font color="#CCCCCC"> dll that you're</font>

153
00:24:45,550 --> 00:24:50,860
looking for in<font color="#E5E5E5"> this resource and in the</font>

154
00:24:48,610 --> 00:24:52,870
second arrow it says that resource that

155
00:24:50,860 --> 00:24:55,689
<font color="#CCCCCC">have now unpacked</font><font color="#E5E5E5"> just execute it and</font>

156
00:24:52,870 --> 00:24:58,540
load it<font color="#E5E5E5"> into</font><font color="#CCCCCC"> memory and then continue to</font>

157
00:24:55,690 --> 00:25:00,700
keep<font color="#E5E5E5"> running your program as normal</font><font color="#CCCCCC"> okay</font>

158
00:24:58,540 --> 00:25:03,100
<font color="#CCCCCC">and so you can do this for each of the</font>

159
00:25:00,700 --> 00:25:05,110
<font color="#CCCCCC">DLL so you're</font><font color="#E5E5E5"> missing and so his idea</font>

160
00:25:03,100 --> 00:25:07,840
was<font color="#CCCCCC"> to embed them within the exe I</font>

161
00:25:05,110 --> 00:25:10,330
looked at this code and<font color="#CCCCCC"> I said huh</font><font color="#E5E5E5"> so</font>

162
00:25:07,840 --> 00:25:12,850
he's taking data<font color="#E5E5E5"> from what seems to be</font><font color="#CCCCCC"> a</font>

163
00:25:10,330 --> 00:25:14,889
very<font color="#CCCCCC"> arbitrary</font><font color="#E5E5E5"> location and then he's</font>

164
00:25:12,850 --> 00:25:16,179
executing him it's probably<font color="#CCCCCC"> some</font>

165
00:25:14,890 --> 00:25:20,740
interesting stuff what I could do with

166
00:25:16,180 --> 00:25:25,300
<font color="#E5E5E5">this right and so I said let's try to</font>

167
00:25:20,740 --> 00:25:26,710
load it over HTTP or HTTPS and so

168
00:25:25,300 --> 00:25:29,080
instead<font color="#E5E5E5"> of loading it from a resource</font>

169
00:25:26,710 --> 00:25:32,890
<font color="#E5E5E5">you load it over HTTP</font><font color="#CCCCCC"> you use the web</font>

170
00:25:29,080 --> 00:25:35,350
client to download<font color="#CCCCCC"> it over the web okay</font>

171
00:25:32,890 --> 00:25:37,570
and this example<font color="#CCCCCC"> is loading it over a</font>

172
00:25:35,350 --> 00:25:41,490
<font color="#CCCCCC">localhost</font><font color="#E5E5E5"> but it works across</font><font color="#CCCCCC"> the</font>

173
00:25:37,570 --> 00:25:44,620
<font color="#E5E5E5">internet it doesn't</font><font color="#CCCCCC"> care</font><font color="#E5E5E5"> what you know</font>

174
00:25:41,490 --> 00:25:46,210
what your browser policy is doesn't<font color="#E5E5E5"> care</font>

175
00:25:44,620 --> 00:25:47,409
okay Mike it<font color="#E5E5E5"> probably cares about</font>

176
00:25:46,210 --> 00:25:49,510
proxies<font color="#CCCCCC"> but other than that</font><font color="#E5E5E5"> it doesn't</font>

177
00:25:47,410 --> 00:25:52,300
doesn't<font color="#E5E5E5"> care if it's a a trust and</font>

178
00:25:49,510 --> 00:25:54,370
saying or anything like<font color="#E5E5E5"> that</font><font color="#CCCCCC"> okay so</font>

179
00:25:52,300 --> 00:25:56,830
this<font color="#E5E5E5"> gets our initial payload our</font>

180
00:25:54,370 --> 00:25:58,810
initial<font color="#E5E5E5"> exe down to about</font><font color="#CCCCCC"> five to ten</font>

181
00:25:56,830 --> 00:26:00,970
kilobytes basically depending on how

182
00:25:58,810 --> 00:26:04,570
<font color="#CCCCCC">much text</font><font color="#E5E5E5"> you need to stuff into there</font>

183
00:26:00,970 --> 00:26:06,820
into<font color="#E5E5E5"> the exe okay and I like to call</font>

184
00:26:04,570 --> 00:26:09,040
<font color="#E5E5E5">this dot over enough dotnet because I</font>

185
00:26:06,820 --> 00:26:11,379
think<font color="#CCCCCC"> dotnet overdone it communicates</font>

186
00:26:09,040 --> 00:26:13,000
what you're doing here you can also do a

187
00:26:11,380 --> 00:26:15,220
<font color="#E5E5E5">PowerShell</font><font color="#CCCCCC"> kind</font><font color="#E5E5E5"> of defeats the purpose</font>

188
00:26:13,000 --> 00:26:16,630
<font color="#CCCCCC">but it's a nifty</font><font color="#E5E5E5"> it's</font>

189
00:26:15,220 --> 00:26:18,400
you just shows you<font color="#CCCCCC"> that</font><font color="#E5E5E5"> you can</font><font color="#CCCCCC"> do this</font>

190
00:26:16,630 --> 00:26:21,370
<font color="#E5E5E5">with other done</font><font color="#CCCCCC"> at</font><font color="#E5E5E5"> languages so if</font>

191
00:26:18,400 --> 00:26:24,309
you're you<font color="#CCCCCC"> know the one f-sharp</font>

192
00:26:21,370 --> 00:26:28,539
<font color="#E5E5E5">developer at Derby con you can do it</font>

193
00:26:24,309 --> 00:26:30,270
with f-sharp<font color="#CCCCCC"> - and our payload size</font><font color="#E5E5E5"> is</font>

194
00:26:28,539 --> 00:26:33,730
<font color="#E5E5E5">even smaller in</font><font color="#CCCCCC"> PowerShell okay</font>

195
00:26:30,270 --> 00:26:37,150
<font color="#E5E5E5">so if you want</font><font color="#CCCCCC"> code examples</font><font color="#E5E5E5"> my github</font>

196
00:26:33,730 --> 00:26:42,039
<font color="#CCCCCC">has a repo</font><font color="#E5E5E5"> that has these</font><font color="#CCCCCC"> code examples</font>

197
00:26:37,150 --> 00:26:44,140
in so<font color="#CCCCCC"> I've I'm loading a whole bunch of</font>

198
00:26:42,039 --> 00:26:46,480
stuff over HTTP or HTTPS where am i

199
00:26:44,140 --> 00:26:49,659
where<font color="#E5E5E5"> am i serving this stuff from well</font>

200
00:26:46,480 --> 00:26:53,230
it turns<font color="#CCCCCC"> out that the Empire listener</font>

201
00:26:49,659 --> 00:26:56,530
<font color="#CCCCCC">the Empire server is is a flask</font><font color="#E5E5E5"> web</font>

202
00:26:53,230 --> 00:26:57,730
<font color="#E5E5E5">server</font><font color="#CCCCCC"> okay so you</font><font color="#E5E5E5"> can say hey I've got</font>

203
00:26:56,530 --> 00:27:00,908
<font color="#CCCCCC">this folder of stuff</font>

204
00:26:57,730 --> 00:27:02,530
serve it<font color="#E5E5E5"> serve it at this location</font><font color="#CCCCCC"> or</font>

205
00:27:00,909 --> 00:27:04,570
I've<font color="#CCCCCC"> got these dll's when somebody comes</font>

206
00:27:02,530 --> 00:27:07,450
<font color="#CCCCCC">looking for them sir</font>

207
00:27:04,570 --> 00:27:10,418
okay so we just host<font color="#E5E5E5"> all of</font><font color="#CCCCCC"> the things</font>

208
00:27:07,450 --> 00:27:12,549
<font color="#E5E5E5">that we need to load over HTTP in the</font>

209
00:27:10,419 --> 00:27:14,679
Empire server and and so what I've done

210
00:27:12,549 --> 00:27:17,320
is<font color="#E5E5E5"> I've modified the setup file for</font>

211
00:27:14,679 --> 00:27:20,760
Empire to download and insert these

212
00:27:17,320 --> 00:27:26,678
these<font color="#E5E5E5"> files into the correct locations</font>

213
00:27:20,760 --> 00:27:30,460
<font color="#CCCCCC">when you</font><font color="#E5E5E5"> set up Empire</font><font color="#CCCCCC"> okay alright</font><font color="#E5E5E5"> so</font>

214
00:27:26,679 --> 00:27:32,320
that<font color="#E5E5E5"> takes all of our that take that so</font>

215
00:27:30,460 --> 00:27:38,559
we've got the standard<font color="#E5E5E5"> library fix our</font>

216
00:27:32,320 --> 00:27:40,720
Python by our python interpreters in

217
00:27:38,559 --> 00:27:42,820
good shape and the<font color="#E5E5E5"> DLR is in good</font><font color="#CCCCCC"> shape</font>

218
00:27:40,720 --> 00:27:47,770
<font color="#E5E5E5">okay so we only have</font><font color="#CCCCCC"> one file that hits</font>

219
00:27:42,820 --> 00:27:48,820
the disk<font color="#CCCCCC"> and that is the Exe all right</font>

220
00:27:47,770 --> 00:27:51,059
let's<font color="#E5E5E5"> take a</font><font color="#CCCCCC"> look at what this looks</font>

221
00:27:48,820 --> 00:27:51,059
<font color="#CCCCCC">like</font>

222
00:27:57,230 --> 00:28:06,090
so we've got the Empire<font color="#E5E5E5"> listener</font>

223
00:28:01,170 --> 00:28:13,530
starting up<font color="#CCCCCC"> they've</font><font color="#E5E5E5"> got a folder with an</font>

224
00:28:06,090 --> 00:28:15,929
8 kilobyte<font color="#CCCCCC"> exe we</font><font color="#E5E5E5"> launched it it pulls</font>

225
00:28:13,530 --> 00:28:17,520
down<font color="#CCCCCC"> the</font><font color="#E5E5E5"> standard library already pull</font>

226
00:28:15,930 --> 00:28:22,440
it down the<font color="#CCCCCC"> dll to pull it down to the</font>

227
00:28:17,520 --> 00:28:25,020
standard library and then I can't see it

228
00:28:22,440 --> 00:28:25,890
at an angle<font color="#E5E5E5"> but the</font><font color="#CCCCCC"> green text</font><font color="#E5E5E5"> shows</font>

229
00:28:25,020 --> 00:28:30,270
that we have a show

230
00:28:25,890 --> 00:28:35,490
<font color="#CCCCCC">okay so execution of a Python Empire</font>

231
00:28:30,270 --> 00:28:41,210
stager<font color="#E5E5E5"> on a Windows host</font><font color="#CCCCCC"> okay</font><font color="#E5E5E5"> we also</font>

232
00:28:35,490 --> 00:28:45,960
have modules<font color="#CCCCCC"> okay</font><font color="#E5E5E5"> so I wrote a mini dump</font>

233
00:28:41,210 --> 00:28:48,930
<font color="#E5E5E5">module</font><font color="#CCCCCC"> that</font><font color="#E5E5E5"> basically takes arbitrary</font>

234
00:28:45,960 --> 00:28:51,180
processes and dumps memory for them when

235
00:28:48,930 --> 00:28:53,760
you have<font color="#E5E5E5"> the permissions to do so okay</font>

236
00:28:51,180 --> 00:28:57,660
and<font color="#CCCCCC"> I borrowed this code</font><font color="#E5E5E5"> from a guy</font>

237
00:28:53,760 --> 00:28:59,640
named<font color="#CCCCCC"> I think it's a guy scale sec who</font>

238
00:28:57,660 --> 00:29:02,460
is<font color="#E5E5E5"> rainy writing a pure Python</font>

239
00:28:59,640 --> 00:29:06,300
implementation of mini cats<font color="#E5E5E5"> which has me</font>

240
00:29:02,460 --> 00:29:08,400
very interested but they wrote<font color="#E5E5E5"> a mini</font>

241
00:29:06,300 --> 00:29:10,770
dump library that was perfect for

242
00:29:08,400 --> 00:29:12,960
<font color="#E5E5E5">aligning for what I</font><font color="#CCCCCC"> needed I had to</font><font color="#E5E5E5"> back</font>

243
00:29:10,770 --> 00:29:16,260
<font color="#E5E5E5">ported to Python</font><font color="#CCCCCC"> to</font><font color="#E5E5E5"> seven because our</font>

244
00:29:12,960 --> 00:29:20,570
pythons Python<font color="#CCCCCC"> 3 support is not great</font>

245
00:29:16,260 --> 00:29:24,650
yes but the other thing I had to<font color="#E5E5E5"> fix was</font>

246
00:29:20,570 --> 00:29:30,210
so this<font color="#CCCCCC"> library does a very traditional</font>

247
00:29:24,650 --> 00:29:32,070
<font color="#CCCCCC">C low-level</font><font color="#E5E5E5"> Windows API implementation</font>

248
00:29:30,210 --> 00:29:34,500
of getting debug privileges so it's it

249
00:29:32,070 --> 00:29:36,600
<font color="#E5E5E5">involves modifying or getting your</font>

250
00:29:34,500 --> 00:29:40,350
process token and modifying it<font color="#CCCCCC"> to be</font>

251
00:29:36,600 --> 00:29:41,639
<font color="#E5E5E5">this and blah blah</font><font color="#CCCCCC"> blah right and in</font>

252
00:29:40,350 --> 00:29:44,760
doing this I found something<font color="#CCCCCC"> actually</font>

253
00:29:41,640 --> 00:29:46,500
very interesting so this<font color="#E5E5E5"> is sort of like</font>

254
00:29:44,760 --> 00:29:49,710
it's<font color="#CCCCCC"> 200 lines</font><font color="#E5E5E5"> of code to get debug</font>

255
00:29:46,500 --> 00:29:52,200
privilege within<font color="#CCCCCC"> this</font><font color="#E5E5E5"> mini double mini</font>

256
00:29:49,710 --> 00:29:55,020
dump<font color="#E5E5E5"> library</font><font color="#CCCCCC"> ok and I ran into a</font><font color="#E5E5E5"> problem</font>

257
00:29:52,200 --> 00:29:57,060
<font color="#E5E5E5">where for whatever reason ironpython was</font>

258
00:29:55,020 --> 00:29:58,520
not representing the the<font color="#E5E5E5"> pointers in the</font>

259
00:29:57,060 --> 00:30:01,190
same way the regular<font color="#E5E5E5"> Python was</font>

260
00:29:58,520 --> 00:30:07,210
and it just for what a reason<font color="#CCCCCC"> wasn't</font>

261
00:30:01,190 --> 00:30:12,470
working<font color="#CCCCCC"> so</font><font color="#E5E5E5"> I was messing around in the</font>

262
00:30:07,210 --> 00:30:14,030
process parts of dotnet<font color="#E5E5E5"> and</font><font color="#CCCCCC"> one of the</font>

263
00:30:12,470 --> 00:30:17,480
<font color="#E5E5E5">things you can do in in Python that is</font>

264
00:30:14,030 --> 00:30:19,760
really good if you can run<font color="#E5E5E5"> dir bracket</font>

265
00:30:17,480 --> 00:30:21,890
<font color="#CCCCCC">an object bracket</font><font color="#E5E5E5"> or you can just do a</font>

266
00:30:19,760 --> 00:30:23,629
dir bracket bracket<font color="#E5E5E5"> for where you</font>

267
00:30:21,890 --> 00:30:24,980
currently are<font color="#E5E5E5"> and it will show you all</font>

268
00:30:23,630 --> 00:30:30,410
of the<font color="#CCCCCC"> things that</font><font color="#E5E5E5"> you can do right now</font>

269
00:30:24,980 --> 00:30:32,570
<font color="#CCCCCC">okay and I look for here</font><font color="#E5E5E5"> and there is</font>

270
00:30:30,410 --> 00:30:36,950
this one<font color="#CCCCCC"> thing</font><font color="#E5E5E5"> in here called</font><font color="#CCCCCC"> entered</font>

271
00:30:32,570 --> 00:30:38,030
debug mode enter debug mode<font color="#E5E5E5"> and that</font>

272
00:30:36,950 --> 00:30:41,240
sounds cool

273
00:30:38,030 --> 00:30:45,139
<font color="#CCCCCC">I want to do that</font><font color="#E5E5E5"> and I was like thank</font>

274
00:30:41,240 --> 00:30:47,450
<font color="#E5E5E5">you Microsoft and so I looked it up on</font>

275
00:30:45,140 --> 00:30:49,520
<font color="#CCCCCC">MSDN</font><font color="#E5E5E5"> and processed on enter debug mode</font>

276
00:30:47,450 --> 00:30:51,590
<font color="#CCCCCC">ok puts a process component</font><font color="#E5E5E5"> in a state</font>

277
00:30:49,520 --> 00:30:54,200
to interact with operating<font color="#E5E5E5"> system</font>

278
00:30:51,590 --> 00:30:57,230
processes that run in a special mode by

279
00:30:54,200 --> 00:31:01,640
enabling<font color="#CCCCCC"> the native property SC debug</font>

280
00:30:57,230 --> 00:31:02,929
privilege<font color="#CCCCCC"> ok like</font><font color="#E5E5E5"> what I want to do</font>

281
00:31:01,640 --> 00:31:08,059
exactly<font color="#CCCCCC"> ok</font>

282
00:31:02,929 --> 00:31:09,980
and so I spun up process<font color="#E5E5E5"> Explorer and</font>

283
00:31:08,059 --> 00:31:12,530
looked at the privileges that the

284
00:31:09,980 --> 00:31:15,080
current<font color="#E5E5E5"> process that I have this</font>

285
00:31:12,530 --> 00:31:19,100
ironpython console has only CSE debug

286
00:31:15,080 --> 00:31:22,580
privilege disabled<font color="#CCCCCC"> ok and then we say</font><font color="#E5E5E5"> ok</font>

287
00:31:19,100 --> 00:31:24,500
<font color="#E5E5E5">open</font><font color="#CCCCCC"> up the process</font><font color="#E5E5E5"> library</font><font color="#CCCCCC"> get the</font>

288
00:31:22,580 --> 00:31:27,800
current<font color="#CCCCCC"> process and shove it into</font><font color="#E5E5E5"> a you</font>

289
00:31:24,500 --> 00:31:29,840
know<font color="#E5E5E5"> variable a and then run enter debug</font>

290
00:31:27,800 --> 00:31:32,540
mode on<font color="#E5E5E5"> it and sure enough I see debug</font>

291
00:31:29,840 --> 00:31:34,399
privilege<font color="#CCCCCC"> okay so you can in three</font><font color="#E5E5E5"> lines</font>

292
00:31:32,540 --> 00:31:36,290
of code whether<font color="#E5E5E5"> you're in PowerShell or</font>

293
00:31:34,400 --> 00:31:38,210
C<font color="#CCCCCC"> sharp or whatever you get debug</font>

294
00:31:36,290 --> 00:31:42,129
privilege in a way that is not so

295
00:31:38,210 --> 00:31:47,990
masochistic<font color="#E5E5E5"> so just a little tip</font><font color="#CCCCCC"> for you</font>

296
00:31:42,130 --> 00:31:50,510
<font color="#CCCCCC">alright so</font><font color="#E5E5E5"> what's next</font><font color="#CCCCCC"> we've got the the</font>

297
00:31:47,990 --> 00:31:52,220
<font color="#E5E5E5">the Python</font><font color="#CCCCCC"> environment we got the stage</font>

298
00:31:50,510 --> 00:31:55,640
or an agent<font color="#CCCCCC"> working we have modules</font>

299
00:31:52,220 --> 00:31:57,290
working<font color="#CCCCCC"> ok</font><font color="#E5E5E5"> so pull request is next you</font>

300
00:31:55,640 --> 00:32:00,710
want to fix some bugs and do some error

301
00:31:57,290 --> 00:32:02,510
checking<font color="#E5E5E5"> and obviously more modules so</font>

302
00:32:00,710 --> 00:32:08,179
the cool<font color="#CCCCCC"> thing about how this works is</font>

303
00:32:02,510 --> 00:32:10,460
that<font color="#CCCCCC"> a lot of PowerShell</font><font color="#E5E5E5"> modules that</font>

304
00:32:08,179 --> 00:32:11,779
just within power within<font color="#CCCCCC"> Empire can just</font>

305
00:32:10,460 --> 00:32:16,509
be ported<font color="#CCCCCC"> over by just</font>

306
00:32:11,779 --> 00:32:19,279
simply rewriting them from dotnet and

307
00:32:16,509 --> 00:32:20,899
<font color="#E5E5E5">potentially differentiating the agent so</font>

308
00:32:19,279 --> 00:32:23,809
having<font color="#E5E5E5"> you know different code that runs</font>

309
00:32:20,899 --> 00:32:26,029
on<font color="#E5E5E5"> the dotnet side of</font><font color="#CCCCCC"> a</font><font color="#E5E5E5"> Python</font>

310
00:32:23,809 --> 00:32:29,090
versus the regular<font color="#E5E5E5"> Linux and Mac side of</font>

311
00:32:26,029 --> 00:32:31,879
a Python<font color="#E5E5E5"> that might be detrimental</font>

312
00:32:29,090 --> 00:32:36,639
because<font color="#E5E5E5"> you would split</font><font color="#CCCCCC"> the</font><font color="#E5E5E5"> code and but</font>

313
00:32:31,879 --> 00:32:38,809
it also would make it harder to<font color="#E5E5E5"> test and</font>

314
00:32:36,639 --> 00:32:40,668
potentially you can load PowerShell<font color="#E5E5E5"> with</font>

315
00:32:38,809 --> 00:32:46,879
<font color="#E5E5E5">in with an iron</font><font color="#CCCCCC"> Python which has some</font>

316
00:32:40,669 --> 00:32:48,109
interesting<font color="#E5E5E5"> potentials but it does seem</font>

317
00:32:46,879 --> 00:32:50,089
like<font color="#CCCCCC"> there's there are</font><font color="#E5E5E5"> some restrictions</font>

318
00:32:48,109 --> 00:32:52,428
<font color="#CCCCCC">on how</font><font color="#E5E5E5"> crazy you can give a</font><font color="#CCCCCC"> powershell</font>

319
00:32:50,089 --> 00:32:58,009
based on my testing and potentially

320
00:32:52,429 --> 00:33:00,859
other assemblies<font color="#CCCCCC"> so the last thing that</font>

321
00:32:58,009 --> 00:33:02,389
<font color="#CCCCCC">i wanted to talk about is</font><font color="#E5E5E5"> something that</font>

322
00:33:00,859 --> 00:33:06,129
<font color="#CCCCCC">i really wanted to get</font><font color="#E5E5E5"> working for this</font>

323
00:33:02,389 --> 00:33:13,129
talk but<font color="#CCCCCC"> i</font><font color="#E5E5E5"> wasn't able to get and that</font>

324
00:33:06,129 --> 00:33:15,589
<font color="#CCCCCC">is mono</font><font color="#E5E5E5"> so mono is essentially an</font><font color="#CCCCCC"> open</font>

325
00:33:13,129 --> 00:33:17,449
source<font color="#CCCCCC"> implementation of dotnet</font><font color="#E5E5E5"> okay and</font>

326
00:33:15,589 --> 00:33:20,599
you might<font color="#CCCCCC"> think why do</font><font color="#E5E5E5"> i care</font><font color="#CCCCCC"> about</font><font color="#E5E5E5"> that</font>

327
00:33:17,450 --> 00:33:23,359
and then<font color="#CCCCCC"> i'll tell you</font><font color="#E5E5E5"> it's the way that</font>

328
00:33:20,599 --> 00:33:26,359
<font color="#E5E5E5">you run dotnet applications on</font><font color="#CCCCCC"> linux</font><font color="#E5E5E5"> and</font>

329
00:33:23,359 --> 00:33:28,609
<font color="#CCCCCC">mac</font><font color="#E5E5E5"> and you say you've</font><font color="#CCCCCC"> just done all</font>

330
00:33:26,359 --> 00:33:30,799
this work porting<font color="#CCCCCC"> it from Linux Mac to</font>

331
00:33:28,609 --> 00:33:31,749
Windows why would you go back<font color="#CCCCCC"> and that's</font>

332
00:33:30,799 --> 00:33:34,070
not what I'm<font color="#E5E5E5"> saying</font>

333
00:33:31,749 --> 00:33:36,349
cool theme<font color="#CCCCCC"> Aman oh is it</font><font color="#E5E5E5"> lives by</font><font color="#CCCCCC"> a</font>

334
00:33:34,070 --> 00:33:38,689
different set of<font color="#E5E5E5"> roles than Microsoft's</font>

335
00:33:36,349 --> 00:33:41,330
<font color="#CCCCCC">dawn</font><font color="#E5E5E5"> net framework</font><font color="#CCCCCC"> okay so they're</font>

336
00:33:38,690 --> 00:33:44,749
community cares not what you do with the

337
00:33:41,330 --> 00:33:46,249
mono code whereas Microsoft some of its

338
00:33:44,749 --> 00:33:46,879
open source<font color="#E5E5E5"> but they may they may care</font>

339
00:33:46,249 --> 00:33:50,419
about<font color="#E5E5E5"> it right</font>

340
00:33:46,879 --> 00:33:53,570
so<font color="#E5E5E5"> within mono there is a little script</font>

341
00:33:50,419 --> 00:33:55,580
called make bundle<font color="#E5E5E5"> okay and here's what</font>

342
00:33:53,570 --> 00:33:57,168
make bundle does mono can turn dotnet

343
00:33:55,580 --> 00:33:59,299
applications into self-contained

344
00:33:57,169 --> 00:34:02,509
executables that<font color="#E5E5E5"> do not rely on mono</font>

345
00:33:59,299 --> 00:34:05,479
<font color="#E5E5E5">being installed or any other dotnet</font>

346
00:34:02,509 --> 00:34:12,619
framework<font color="#E5E5E5"> okay so what that means is</font>

347
00:34:05,479 --> 00:34:14,539
let's say you normally a dotnet

348
00:34:12,619 --> 00:34:16,279
framework is installed on<font color="#E5E5E5"> the host</font><font color="#CCCCCC"> okay</font>

349
00:34:14,539 --> 00:34:17,990
what if it isn't<font color="#E5E5E5"> there or what if you</font>

350
00:34:16,279 --> 00:34:20,149
have a version<font color="#CCCCCC"> mismatch</font>

351
00:34:17,989 --> 00:34:21,979
okay then none<font color="#CCCCCC"> of the stuff that happens</font>

352
00:34:20,149 --> 00:34:25,638
above it<font color="#E5E5E5"> whether it's a iron</font>

353
00:34:21,980 --> 00:34:27,500
<font color="#E5E5E5">Python executable</font><font color="#CCCCCC"> or a c-sharp</font>

354
00:34:25,639 --> 00:34:31,270
executable<font color="#E5E5E5"> or a patent you know whatever</font>

355
00:34:27,500 --> 00:34:34,909
<font color="#E5E5E5">it is</font><font color="#CCCCCC"> it doesn't run okay but if you</font>

356
00:34:31,270 --> 00:34:36,409
bundled<font color="#E5E5E5"> mono with your payload you</font><font color="#CCCCCC"> do</font>

357
00:34:34,909 --> 00:34:39,649
not<font color="#E5E5E5"> care what version</font><font color="#CCCCCC"> of</font><font color="#E5E5E5"> done that</font><font color="#CCCCCC"> is</font>

358
00:34:36,409 --> 00:34:42,230
installed<font color="#E5E5E5"> okay and so I think make</font>

359
00:34:39,649 --> 00:34:45,199
bundle has some interesting if we could

360
00:34:42,230 --> 00:34:46,639
like<font color="#E5E5E5"> fork it or the tool chain for</font>

361
00:34:45,199 --> 00:34:48,230
setting up mono on<font color="#CCCCCC"> Windows is kind</font><font color="#E5E5E5"> of</font>

362
00:34:46,639 --> 00:34:51,109
gnarly because you have to like install

363
00:34:48,230 --> 00:34:54,040
cygwin and it's kind of gross<font color="#CCCCCC"> but I</font>

364
00:34:51,109 --> 00:34:57,640
think it has interesting implications

365
00:34:54,040 --> 00:35:02,390
for running<font color="#E5E5E5"> dinette stuff on</font><font color="#CCCCCC"> windows so</font>

366
00:34:57,640 --> 00:35:05,569
<font color="#E5E5E5">and with that I thank you and you can</font>

367
00:35:02,390 --> 00:35:08,868
hit<font color="#E5E5E5"> me up on Twitter or github I'm also</font>

368
00:35:05,570 --> 00:35:11,270
in the<font color="#CCCCCC"> the bloodhound slack there's a</font>

369
00:35:08,869 --> 00:35:13,820
PowerShell<font color="#CCCCCC"> Empire</font><font color="#E5E5E5"> channel if you want to</font>

370
00:35:11,270 --> 00:35:15,530
<font color="#E5E5E5">get me up there</font><font color="#CCCCCC"> see the Twitter for</font>

371
00:35:13,820 --> 00:35:16,940
slides<font color="#E5E5E5"> and without I'll take your</font>

372
00:35:15,530 --> 00:35:18,230
question I want<font color="#E5E5E5"> to thank everybody at</font>

373
00:35:16,940 --> 00:35:20,330
Derby con for all the volunteers<font color="#CCCCCC"> and</font>

374
00:35:18,230 --> 00:35:21,900
stuff<font color="#E5E5E5"> that make this possible</font><font color="#CCCCCC"> they're</font>

375
00:35:20,330 --> 00:35:30,360
really appreciate

376
00:35:21,900 --> 00:35:37,590
[Applause]

377
00:35:30,360 --> 00:35:37,590
yeah question thank you

378
00:35:42,660 --> 00:35:47,259
so the<font color="#CCCCCC"> question is why doesn't make</font>

379
00:35:45,130 --> 00:35:51,130
<font color="#E5E5E5">bundle work right now</font><font color="#CCCCCC"> so the</font><font color="#E5E5E5"> reason is</font>

380
00:35:47,260 --> 00:35:52,570
is that<font color="#E5E5E5"> I tried</font><font color="#CCCCCC"> to get</font><font color="#E5E5E5"> it working on</font>

381
00:35:51,130 --> 00:35:55,930
Linux<font color="#E5E5E5"> and</font><font color="#CCCCCC"> I tried to</font><font color="#E5E5E5"> get it working on</font>

382
00:35:52,570 --> 00:35:58,510
Windows<font color="#CCCCCC"> and there were two showstopper</font>

383
00:35:55,930 --> 00:36:02,620
bugs that prevented it from<font color="#E5E5E5"> working on</font>

384
00:35:58,510 --> 00:36:04,060
each platform<font color="#CCCCCC"> so it just it would it</font>

385
00:36:02,620 --> 00:36:06,520
would needed some work<font color="#E5E5E5"> to get it working</font>

386
00:36:04,060 --> 00:36:11,080
again<font color="#E5E5E5"> and I didn't have the</font><font color="#CCCCCC"> resources to</font>

387
00:36:06,520 --> 00:36:14,350
do yeah<font color="#E5E5E5"> so it would definitely put you</font>

388
00:36:11,080 --> 00:36:17,250
in like the megabytes<font color="#E5E5E5"> of size like</font><font color="#CCCCCC"> lo</font>

389
00:36:14,350 --> 00:36:17,250
megabyte<font color="#CCCCCC"> Center</font>

390
00:36:24,470 --> 00:36:45,390
yeah yeah yeah so<font color="#E5E5E5"> one is why when I just</font>

391
00:36:43,710 --> 00:36:47,010
<font color="#E5E5E5">do this in c-sharp</font><font color="#CCCCCC"> why do anion</font><font color="#E5E5E5"> Python</font>

392
00:36:45,390 --> 00:36:48,930
because<font color="#E5E5E5"> of the dynamic nature and you</font>

393
00:36:47,010 --> 00:36:51,930
can load<font color="#CCCCCC"> or code after it's already</font>

394
00:36:48,930 --> 00:36:54,629
<font color="#E5E5E5">started executing and the other thing is</font>

395
00:36:51,930 --> 00:36:56,910
that<font color="#CCCCCC"> it just looks weird</font><font color="#E5E5E5"> like you know</font>

396
00:36:54,630 --> 00:36:59,880
tools understand c-sharp<font color="#CCCCCC"> I'm not it's</font>

397
00:36:56,910 --> 00:37:01,740
<font color="#E5E5E5">not clear that tools that are detective</font>

398
00:36:59,880 --> 00:37:09,450
controls understand ironpython at this

399
00:37:01,740 --> 00:37:11,279
point<font color="#E5E5E5"> so yeah yeah</font><font color="#CCCCCC"> exactly it's like you</font>

400
00:37:09,450 --> 00:37:13,078
know<font color="#E5E5E5"> people understand PowerShell</font>

401
00:37:11,280 --> 00:37:16,140
they're getting to understand c-sharp

402
00:37:13,079 --> 00:37:18,660
<font color="#E5E5E5">this is another language</font><font color="#CCCCCC"> that they</font>

403
00:37:16,140 --> 00:37:22,828
probably<font color="#E5E5E5"> don't understand any other</font>

404
00:37:18,660 --> 00:37:25,819
questions thank you all see me<font color="#E5E5E5"> after if</font>

405
00:37:22,829 --> 00:37:25,819
you have any other questions yeah

406
00:37:41,849 --> 00:37:47,890
yeah so<font color="#CCCCCC"> you can you</font><font color="#E5E5E5"> can run ironpython</font>

407
00:37:44,260 --> 00:37:49,810
<font color="#CCCCCC">really easily on</font><font color="#E5E5E5"> Linux it's just I don't</font>

408
00:37:47,890 --> 00:37:52,480
<font color="#E5E5E5">know why you would in this case but it</font>

409
00:37:49,810 --> 00:37:56,049
is<font color="#CCCCCC"> possible</font><font color="#E5E5E5"> it actually very well</font>

410
00:37:52,480 --> 00:37:57,849
supports<font color="#E5E5E5"> mono</font><font color="#CCCCCC"> and</font><font color="#E5E5E5"> it could support</font><font color="#CCCCCC"> their</font>

411
00:37:56,050 --> 00:38:05,380
working on dotnet core support<font color="#E5E5E5"> right now</font>

412
00:37:57,849 --> 00:38:07,930
<font color="#E5E5E5">is why yeah the problem is is that on</font>

413
00:38:05,380 --> 00:38:11,220
<font color="#E5E5E5">Linux done net would not be reliably</font>

414
00:38:07,930 --> 00:38:14,220
installed so that's the problem

415
00:38:11,220 --> 00:38:14,220
<font color="#CCCCCC">Thanks</font>

