1
00:00:07,069 --> 00:00:12,750
everyone my name is<font color="#E5E5E5"> Thomas</font><font color="#CCCCCC"> tousle I'm</font>

2
00:00:09,719 --> 00:00:15,149
with a short information security<font color="#E5E5E5"> aka is</font>

3
00:00:12,750 --> 00:00:17,369
<font color="#CCCCCC">we're a company out of New York but</font><font color="#E5E5E5"> I'm</font>

4
00:00:15,150 --> 00:00:19,590
from an office in Colorado<font color="#CCCCCC"> which is a</font>

5
00:00:17,369 --> 00:00:21,630
just<font color="#CCCCCC"> a small</font><font color="#E5E5E5"> satellite offices</font><font color="#CCCCCC"> it's out</font>

6
00:00:19,590 --> 00:00:24,480
<font color="#E5E5E5">there the company is interested in a lot</font>

7
00:00:21,630 --> 00:00:26,310
<font color="#CCCCCC">of</font><font color="#E5E5E5"> things particularly hypervisors our</font>

8
00:00:24,480 --> 00:00:28,199
office in Colorado<font color="#E5E5E5"> particular likes men</font>

9
00:00:26,310 --> 00:00:29,549
<font color="#CCCCCC">Intel releases new features so we</font><font color="#E5E5E5"> kind</font>

10
00:00:28,199 --> 00:00:32,329
of<font color="#E5E5E5"> get</font><font color="#CCCCCC"> excited on able to see that</font><font color="#E5E5E5"> sort</font>

11
00:00:29,550 --> 00:00:34,620
<font color="#E5E5E5">of thing</font><font color="#CCCCCC"> and I'm talking about</font>

12
00:00:32,329 --> 00:00:36,210
<font color="#E5E5E5">hypervisor inspection from position of</font>

13
00:00:34,620 --> 00:00:40,230
an unprivileged guest so basically think

14
00:00:36,210 --> 00:00:41,730
about<font color="#E5E5E5"> a Google</font><font color="#CCCCCC"> Cloud or AWS</font><font color="#E5E5E5"> instance or</font>

15
00:00:40,230 --> 00:00:44,129
<font color="#E5E5E5">something like that</font><font color="#CCCCCC"> we were interested</font>

16
00:00:41,730 --> 00:00:45,839
in<font color="#E5E5E5"> can we detect what I'm not a provider</font>

17
00:00:44,129 --> 00:00:48,030
<font color="#E5E5E5">like that is introspecting on you and</font>

18
00:00:45,840 --> 00:00:50,280
detecting hard introspecting and getting

19
00:00:48,030 --> 00:00:53,070
information from beyond appropriately so

20
00:00:50,280 --> 00:00:56,100
a lot<font color="#CCCCCC"> of</font><font color="#E5E5E5"> organizations are</font><font color="#CCCCCC"> moving to the</font>

21
00:00:53,070 --> 00:00:57,390
cloud<font color="#CCCCCC"> right</font><font color="#E5E5E5"> it's it's easier for a</font><font color="#CCCCCC"> lot</font>

22
00:00:56,100 --> 00:00:59,609
<font color="#CCCCCC">of</font><font color="#E5E5E5"> different reasons scalability</font>

23
00:00:57,390 --> 00:01:01,829
manageability<font color="#CCCCCC"> Eva</font><font color="#E5E5E5"> need to have this many</font>

24
00:00:59,609 --> 00:01:03,270
<font color="#E5E5E5">IP stuff on hand anymore</font><font color="#CCCCCC"> so it'll save</font>

25
00:01:01,829 --> 00:01:05,010
you some amount<font color="#E5E5E5"> of money but the</font>

26
00:01:03,270 --> 00:01:06,840
consequences that<font color="#CCCCCC"> it's not your hardware</font>

27
00:01:05,010 --> 00:01:09,510
it's not your system anymore<font color="#E5E5E5"> right you</font>

28
00:01:06,840 --> 00:01:11,549
can launch<font color="#E5E5E5"> a</font><font color="#CCCCCC"> guest but that's usually</font>

29
00:01:09,510 --> 00:01:14,970
<font color="#CCCCCC">the limits of what you can see and what</font>

30
00:01:11,549 --> 00:01:16,710
<font color="#CCCCCC">you can do so a hypervisor is sort of</font>

31
00:01:14,970 --> 00:01:17,970
the<font color="#E5E5E5"> big cheese in</font><font color="#CCCCCC"> this situation right</font>

32
00:01:16,710 --> 00:01:19,589
<font color="#E5E5E5">it can do a lot of different</font><font color="#CCCCCC"> things</font>

33
00:01:17,970 --> 00:01:21,060
<font color="#E5E5E5">whatever it wants right without really</font>

34
00:01:19,590 --> 00:01:22,770
leaving behind much evidence<font color="#CCCCCC"> that it did</font>

35
00:01:21,060 --> 00:01:24,780
<font color="#E5E5E5">something so think</font><font color="#CCCCCC"> about you know</font><font color="#E5E5E5"> if</font>

36
00:01:22,770 --> 00:01:27,600
your operating<font color="#E5E5E5"> system on</font><font color="#CCCCCC"> your laptop had</font>

37
00:01:24,780 --> 00:01:28,890
had a<font color="#CCCCCC"> evil kernel on it right there's</font>

38
00:01:27,600 --> 00:01:30,658
<font color="#E5E5E5">not a whole lot you</font><font color="#CCCCCC"> could do</font><font color="#E5E5E5"> if it was</font>

39
00:01:28,890 --> 00:01:34,439
properly designed to be evil it's<font color="#E5E5E5"> the</font>

40
00:01:30,659 --> 00:01:35,460
same<font color="#CCCCCC"> situation here so you know you have</font>

41
00:01:34,439 --> 00:01:36,899
an<font color="#CCCCCC"> interesting paradox here</font>

42
00:01:35,460 --> 00:01:38,369
organizations want to save money they

43
00:01:36,900 --> 00:01:39,720
want<font color="#E5E5E5"> to make things easier</font><font color="#CCCCCC"> for them but</font>

44
00:01:38,369 --> 00:01:42,060
they have data they<font color="#E5E5E5"> don't want</font>

45
00:01:39,720 --> 00:01:43,170
compromised<font color="#CCCCCC"> right they don't want to go</font>

46
00:01:42,060 --> 00:01:45,119
<font color="#E5E5E5">through that whole process which is</font>

47
00:01:43,170 --> 00:01:47,939
<font color="#E5E5E5">going to cost them</font><font color="#CCCCCC"> national a lot of</font>

48
00:01:45,119 --> 00:01:49,890
money<font color="#E5E5E5"> so this is not anything that's</font>

49
00:01:47,939 --> 00:01:51,229
really<font color="#E5E5E5"> been that's new right this has</font>

50
00:01:49,890 --> 00:01:53,520
been something<font color="#E5E5E5"> been going</font><font color="#CCCCCC"> on for a</font><font color="#E5E5E5"> while</font>

51
00:01:51,229 --> 00:01:55,350
<font color="#CCCCCC">but</font><font color="#E5E5E5"> most of</font><font color="#CCCCCC"> the</font><font color="#E5E5E5"> work that's been done</font>

52
00:01:53,520 --> 00:01:56,610
<font color="#E5E5E5">for this</font><font color="#CCCCCC"> focuses</font><font color="#E5E5E5"> on whether or not</font>

53
00:01:55,350 --> 00:01:58,619
something's really<font color="#CCCCCC"> happened</font><font color="#E5E5E5"> right they</font>

54
00:01:56,610 --> 00:02:01,590
usually look for<font color="#E5E5E5"> artifacting right so</font>

55
00:01:58,619 --> 00:02:02,969
say hardware<font color="#CCCCCC"> soft</font><font color="#E5E5E5"> artifacts something</font>

56
00:02:01,590 --> 00:02:05,280
left<font color="#E5E5E5"> behind</font><font color="#CCCCCC"> and</font><font color="#E5E5E5"> that can</font><font color="#CCCCCC"> vary from</font>

57
00:02:02,969 --> 00:02:06,780
hypervisor to hypervisor even version

58
00:02:05,280 --> 00:02:10,440
the version of the<font color="#E5E5E5"> physical hypervisor</font>

59
00:02:06,780 --> 00:02:13,330
<font color="#CCCCCC">so we wanted</font><font color="#E5E5E5"> to see if we can detect</font>

60
00:02:10,440 --> 00:02:15,640
<font color="#E5E5E5">this happening as</font><font color="#CCCCCC"> it happens right so</font>

61
00:02:13,330 --> 00:02:17,860
with that being<font color="#CCCCCC"> said the hypervisors</font>

62
00:02:15,640 --> 00:02:19,390
behavior is not exactly invisible<font color="#E5E5E5"> right</font>

63
00:02:17,860 --> 00:02:22,360
<font color="#E5E5E5">it's trying to provide a real</font>

64
00:02:19,390 --> 00:02:23,380
environment<font color="#E5E5E5"> to to the</font><font color="#CCCCCC"> Cure guests but</font>

65
00:02:22,360 --> 00:02:25,030
you're not really<font color="#CCCCCC"> running on the</font>

66
00:02:23,380 --> 00:02:27,250
hardware so<font color="#CCCCCC"> it does is best to do it but</font>

67
00:02:25,030 --> 00:02:28,990
there's evidence<font color="#CCCCCC"> that</font><font color="#E5E5E5"> it did that it's</font>

68
00:02:27,250 --> 00:02:31,540
<font color="#E5E5E5">that it's there right like it'll modify</font>

69
00:02:28,990 --> 00:02:33,490
execution times<font color="#E5E5E5"> because it's trying to</font>

70
00:02:31,540 --> 00:02:35,109
do things<font color="#E5E5E5"> in the</font><font color="#CCCCCC"> backend</font><font color="#E5E5E5"> it'll modify</font>

71
00:02:33,490 --> 00:02:36,070
the<font color="#E5E5E5"> cache isn't that sort</font><font color="#CCCCCC"> of thing so we</font>

72
00:02:35,110 --> 00:02:39,430
<font color="#E5E5E5">can use that to our advantage</font>

73
00:02:36,070 --> 00:02:42,250
right so we set out<font color="#CCCCCC"> to implement two</font>

74
00:02:39,430 --> 00:02:43,270
different things<font color="#E5E5E5"> to</font><font color="#CCCCCC"> to</font><font color="#E5E5E5"> prove out whether</font>

75
00:02:42,250 --> 00:02:45,310
or<font color="#E5E5E5"> not we can detect</font><font color="#CCCCCC"> that</font><font color="#E5E5E5"> something's</font>

76
00:02:43,270 --> 00:02:46,900
<font color="#E5E5E5">going on so the first thing we did was</font>

77
00:02:45,310 --> 00:02:48,240
we<font color="#E5E5E5"> built the test framework which</font><font color="#CCCCCC"> is</font>

78
00:02:46,900 --> 00:02:51,160
basically just<font color="#E5E5E5"> an evil hypervisor</font>

79
00:02:48,240 --> 00:02:54,130
<font color="#CCCCCC">and then that would do introspection on</font>

80
00:02:51,160 --> 00:02:55,420
are benign<font color="#CCCCCC"> guests</font><font color="#E5E5E5"> and we wrote a module</font>

81
00:02:54,130 --> 00:02:57,310
with which has<font color="#CCCCCC"> affrighted current</font>

82
00:02:55,420 --> 00:02:59,320
sensors now<font color="#E5E5E5"> this module was</font><font color="#CCCCCC"> designed to</font>

83
00:02:57,310 --> 00:03:01,240
<font color="#E5E5E5">have very few dependencies just be able</font>

84
00:02:59,320 --> 00:03:05,140
<font color="#CCCCCC">to</font><font color="#E5E5E5"> run pretty simply on it on a standard</font>

85
00:03:01,240 --> 00:03:07,750
<font color="#E5E5E5">Linux clock so for the test framework we</font>

86
00:03:05,140 --> 00:03:09,250
use the Zen project so<font color="#E5E5E5"> usually just</font>

87
00:03:07,750 --> 00:03:10,900
called Zen<font color="#E5E5E5"> as an open source hypervisor</font>

88
00:03:09,250 --> 00:03:12,720
is pretty popular<font color="#E5E5E5"> I'm sure most people</font>

89
00:03:10,900 --> 00:03:15,550
<font color="#E5E5E5">have heard</font><font color="#CCCCCC"> about</font><font color="#E5E5E5"> it and we added some</font>

90
00:03:12,720 --> 00:03:16,840
capabilities to support<font color="#CCCCCC"> a hyper call so</font>

91
00:03:15,550 --> 00:03:18,640
we could turn on and off introspection

92
00:03:16,840 --> 00:03:20,560
capabilities so I have recalls basically

93
00:03:18,640 --> 00:03:23,708
what assistant calls to the kernel<font color="#CCCCCC"> the</font>

94
00:03:20,560 --> 00:03:24,910
<font color="#CCCCCC">hyper call is</font><font color="#E5E5E5"> to hypervisor so we just</font>

95
00:03:23,709 --> 00:03:26,170
<font color="#E5E5E5">want to be able to</font><font color="#CCCCCC"> top call down to the</font>

96
00:03:24,910 --> 00:03:28,510
<font color="#E5E5E5">hypervisor and help to do different</font>

97
00:03:26,170 --> 00:03:30,160
things<font color="#CCCCCC"> we also added in some</font>

98
00:03:28,510 --> 00:03:31,600
instructions<font color="#CCCCCC"> for supporting what's</font>

99
00:03:30,160 --> 00:03:35,079
called<font color="#E5E5E5"> VM exiting which I'll talk about</font>

100
00:03:31,600 --> 00:03:36,880
in<font color="#E5E5E5"> a little bit so we also wrote a</font>

101
00:03:35,080 --> 00:03:38,170
module with sensors as I mentioned

102
00:03:36,880 --> 00:03:40,720
before<font color="#E5E5E5"> which had several different</font>

103
00:03:38,170 --> 00:03:42,579
sensors in<font color="#E5E5E5"> it so the first one</font><font color="#CCCCCC"> is an</font>

104
00:03:40,720 --> 00:03:44,260
instruction intercession<font color="#CCCCCC"> Center so it</font>

105
00:03:42,580 --> 00:03:46,840
would basically<font color="#E5E5E5"> detect whether or not</font>

106
00:03:44,260 --> 00:03:49,780
the instructions<font color="#CCCCCC"> are being dork with by</font>

107
00:03:46,840 --> 00:03:51,190
using<font color="#E5E5E5"> a timing</font><font color="#CCCCCC"> mechanism we also have an</font>

108
00:03:49,780 --> 00:03:52,989
active memory intercession<font color="#CCCCCC"> sensor so</font>

109
00:03:51,190 --> 00:03:54,700
basically<font color="#E5E5E5"> wanted</font><font color="#CCCCCC"> to see if we</font><font color="#E5E5E5"> can detect</font>

110
00:03:52,989 --> 00:03:56,950
<font color="#E5E5E5">whether</font><font color="#CCCCCC"> or not a hypervisor is</font><font color="#E5E5E5"> sitting</font>

111
00:03:54,700 --> 00:03:58,089
<font color="#E5E5E5">and monitoring a memory</font><font color="#CCCCCC"> access and can</font>

112
00:03:56,950 --> 00:04:00,549
<font color="#E5E5E5">we detect</font><font color="#CCCCCC"> whether nothing is happening</font>

113
00:03:58,090 --> 00:04:01,989
<font color="#E5E5E5">live so that means that a hypervisor</font>

114
00:04:00,550 --> 00:04:04,690
sitting<font color="#CCCCCC"> waiting</font><font color="#E5E5E5"> for you access</font><font color="#CCCCCC"> portion</font>

115
00:04:01,989 --> 00:04:05,709
of memory<font color="#CCCCCC"> and then it jumps in and when</font>

116
00:04:04,690 --> 00:04:07,840
you access the<font color="#CCCCCC"> course of memory and</font>

117
00:04:05,709 --> 00:04:09,340
<font color="#E5E5E5">other thing and</font><font color="#CCCCCC"> return back</font><font color="#E5E5E5"> we also</font>

118
00:04:07,840 --> 00:04:10,750
wanted to<font color="#E5E5E5"> see if we can determine</font>

119
00:04:09,340 --> 00:04:12,100
<font color="#E5E5E5">whether or not passive memory</font>

120
00:04:10,750 --> 00:04:13,989
introspection is happening so we wrote a

121
00:04:12,100 --> 00:04:15,670
monitor<font color="#E5E5E5"> for that that basically means</font>

122
00:04:13,989 --> 00:04:17,590
that<font color="#E5E5E5"> we're mapping in memory from</font>

123
00:04:15,670 --> 00:04:18,700
outside of<font color="#CCCCCC"> the outside of the guest</font>

124
00:04:17,589 --> 00:04:20,649
itself right<font color="#E5E5E5"> so we don't want to</font>

125
00:04:18,700 --> 00:04:23,110
directly interfere<font color="#E5E5E5"> with the</font><font color="#CCCCCC"> guest</font>

126
00:04:20,649 --> 00:04:24,700
<font color="#E5E5E5">operation when it's accessing memory</font><font color="#CCCCCC"> we</font>

127
00:04:23,110 --> 00:04:27,110
want to be able to access<font color="#E5E5E5"> that memory</font>

128
00:04:24,700 --> 00:04:29,030
externally<font color="#E5E5E5"> through some other mechanisms</font>

129
00:04:27,110 --> 00:04:30,830
and finally we looked into non-temporal

130
00:04:29,030 --> 00:04:32,539
access<font color="#CCCCCC"> centers which is a mouthful but</font>

131
00:04:30,830 --> 00:04:34,128
<font color="#CCCCCC">basically non-temporal means it doesn't</font>

132
00:04:32,539 --> 00:04:36,770
<font color="#CCCCCC">catch where</font><font color="#E5E5E5"> I didn't</font><font color="#CCCCCC"> push the cash so</font>

133
00:04:34,129 --> 00:04:38,270
<font color="#E5E5E5">that</font><font color="#CCCCCC"> will become</font><font color="#E5E5E5"> important later when I</font>

134
00:04:36,770 --> 00:04:40,430
talk<font color="#CCCCCC"> a little</font><font color="#E5E5E5"> bit about some</font><font color="#CCCCCC"> of the cash</font>

135
00:04:38,270 --> 00:04:42,560
tax that<font color="#E5E5E5"> were using but</font><font color="#CCCCCC"> it just slides a</font>

136
00:04:40,430 --> 00:04:45,979
layer of difficulty to<font color="#E5E5E5"> somebody's</font>

137
00:04:42,560 --> 00:04:48,289
detection<font color="#CCCCCC"> technique so I want</font><font color="#E5E5E5"> to jump in</font>

138
00:04:45,979 --> 00:04:50,060
a<font color="#E5E5E5"> little bit of background</font><font color="#CCCCCC"> a hypervisor</font>

139
00:04:48,289 --> 00:04:51,530
is typically<font color="#CCCCCC"> broken down to two</font>

140
00:04:50,060 --> 00:04:53,599
different<font color="#E5E5E5"> types</font><font color="#CCCCCC"> you have a type 1 and</font>

141
00:04:51,530 --> 00:04:55,400
type 2 hypervisor<font color="#CCCCCC"> the type 1 hypervisor</font>

142
00:04:53,599 --> 00:04:56,960
sits directly on the hardware<font color="#E5E5E5"> right you</font>

143
00:04:55,400 --> 00:04:59,479
boot your<font color="#CCCCCC"> system up and you're in the</font>

144
00:04:56,960 --> 00:05:00,799
hypervisor<font color="#CCCCCC"> well it more accurately</font><font color="#E5E5E5"> or in</font>

145
00:04:59,479 --> 00:05:02,719
the privilege domain<font color="#E5E5E5"> of the hypervisor</font>

146
00:05:00,800 --> 00:05:04,729
<font color="#CCCCCC">where you can control the hypervisor if</font>

147
00:05:02,719 --> 00:05:06,800
you could the second type of hypervisor

148
00:05:04,729 --> 00:05:08,810
<font color="#E5E5E5">is a type 2 hypervisor which sits on a</font>

149
00:05:06,800 --> 00:05:10,430
host<font color="#CCCCCC"> OS so if you think about you</font><font color="#E5E5E5"> have a</font>

150
00:05:08,810 --> 00:05:12,620
Windows box and you install<font color="#E5E5E5"> VirtualBox</font>

151
00:05:10,430 --> 00:05:14,810
on there and then you launch<font color="#E5E5E5"> a guest</font>

152
00:05:12,620 --> 00:05:16,610
from<font color="#E5E5E5"> VirtualBox that would be</font><font color="#CCCCCC"> its hep</font>

153
00:05:14,810 --> 00:05:17,810
<font color="#E5E5E5">you</font><font color="#CCCCCC"> have so we're going</font><font color="#E5E5E5"> to be using a</font>

154
00:05:16,610 --> 00:05:21,710
type 1 hypervisor<font color="#E5E5E5"> and that's what the</font>

155
00:05:17,810 --> 00:05:23,860
Zen is so a virtual<font color="#CCCCCC"> machine exit</font><font color="#E5E5E5"> which I</font>

156
00:05:21,710 --> 00:05:26,388
promised I'd talk about<font color="#CCCCCC"> later was</font><font color="#E5E5E5"> is</font><font color="#CCCCCC"> a</font>

157
00:05:23,860 --> 00:05:30,020
<font color="#E5E5E5">operation that</font><font color="#CCCCCC"> happens quite frequently</font>

158
00:05:26,389 --> 00:05:32,360
<font color="#E5E5E5">on a on a VM M ake a hypervisor so a</font>

159
00:05:30,020 --> 00:05:34,128
hypervisor needs to monitor<font color="#E5E5E5"> and you know</font>

160
00:05:32,360 --> 00:05:36,080
modify things<font color="#E5E5E5"> as it as</font><font color="#CCCCCC"> it as needed so</font>

161
00:05:34,129 --> 00:05:37,550
<font color="#E5E5E5">whenever it</font><font color="#CCCCCC"> needs to retain control</font><font color="#E5E5E5"> and</font>

162
00:05:36,080 --> 00:05:39,830
do something for itself<font color="#E5E5E5"> or distribute</font>

163
00:05:37,550 --> 00:05:42,770
the<font color="#E5E5E5"> load to somewhere else and needs to</font>

164
00:05:39,830 --> 00:05:44,060
pause the existing guest<font color="#E5E5E5"> so when it does</font>

165
00:05:42,770 --> 00:05:45,710
that<font color="#E5E5E5"> it'll store everything in what's</font>

166
00:05:44,060 --> 00:05:47,870
called<font color="#E5E5E5"> a VM CS</font><font color="#CCCCCC"> or virtual machine</font>

167
00:05:45,710 --> 00:05:49,279
control structure which resides in

168
00:05:47,870 --> 00:05:51,469
memory and<font color="#E5E5E5"> exists for</font><font color="#CCCCCC"> each different</font>

169
00:05:49,279 --> 00:05:54,319
<font color="#E5E5E5">virtual CPU that exists on the on the</font>

170
00:05:51,469 --> 00:05:56,690
guest instance<font color="#E5E5E5"> so it'll save everything</font>

171
00:05:54,319 --> 00:05:59,060
<font color="#CCCCCC">off and then return control to itself</font>

172
00:05:56,690 --> 00:06:01,250
<font color="#CCCCCC">via vm exit do whatever needs to</font><font color="#E5E5E5"> do and</font>

173
00:05:59,060 --> 00:06:03,710
then<font color="#E5E5E5"> return</font><font color="#CCCCCC"> back via vm entry to the</font>

174
00:06:01,250 --> 00:06:05,419
guest begun<font color="#CCCCCC"> this</font><font color="#E5E5E5"> kind of thing incurs a</font>

175
00:06:03,710 --> 00:06:07,219
pretty substantial overhead<font color="#CCCCCC"> it's a very</font>

176
00:06:05,419 --> 00:06:08,930
large enrolled switch or I should say

177
00:06:07,219 --> 00:06:10,360
very<font color="#E5E5E5"> expensive world switch so we</font><font color="#CCCCCC"> can</font>

178
00:06:08,930 --> 00:06:12,409
use<font color="#E5E5E5"> that to our advantage</font>

179
00:06:10,360 --> 00:06:14,539
we're going to be using a<font color="#E5E5E5"> few</font><font color="#CCCCCC"> different</font>

180
00:06:12,409 --> 00:06:16,460
types<font color="#E5E5E5"> of timing mechanisms</font><font color="#CCCCCC"> the first one</font>

181
00:06:14,539 --> 00:06:19,009
is called the<font color="#E5E5E5"> timestamp counter usually</font>

182
00:06:16,460 --> 00:06:20,870
<font color="#E5E5E5">just called the PSC that is a cycle time</font>

183
00:06:19,009 --> 00:06:22,250
resolution counter that starts up

184
00:06:20,870 --> 00:06:24,440
whenever<font color="#E5E5E5"> the system starts up and just</font>

185
00:06:22,250 --> 00:06:27,560
counts the number<font color="#E5E5E5"> of</font><font color="#CCCCCC"> cycles since the</font>

186
00:06:24,440 --> 00:06:30,379
<font color="#E5E5E5">since the system</font><font color="#CCCCCC"> has started the hyper</font>

187
00:06:27,560 --> 00:06:32,000
the<font color="#E5E5E5"> high</font><font color="#CCCCCC"> precision event timer is what</font>

188
00:06:30,379 --> 00:06:33,409
used<font color="#CCCCCC"> to be called</font><font color="#E5E5E5"> a multimedia timer but</font>

189
00:06:32,000 --> 00:06:35,569
basically it's used<font color="#CCCCCC"> for any kind of</font>

190
00:06:33,409 --> 00:06:37,819
audio<font color="#CCCCCC"> video graphics or</font><font color="#E5E5E5"> Darrell if you</font>

191
00:06:35,569 --> 00:06:39,649
have on your operating system<font color="#E5E5E5"> it runs at</font>

192
00:06:37,819 --> 00:06:40,430
a much lower resolution<font color="#CCCCCC"> it can be</font><font color="#E5E5E5"> around</font>

193
00:06:39,649 --> 00:06:42,800
you know<font color="#CCCCCC"> 10</font>

194
00:06:40,430 --> 00:06:43,940
<font color="#CCCCCC">Hertz or something like that but you</font>

195
00:06:42,800 --> 00:06:45,950
know<font color="#CCCCCC"> I'll</font><font color="#E5E5E5"> talk about why we're gonna use</font>

196
00:06:43,940 --> 00:06:47,210
that<font color="#E5E5E5"> a bit more</font><font color="#CCCCCC"> later finally we're</font>

197
00:06:45,950 --> 00:06:48,950
going to supplement all this with red

198
00:06:47,210 --> 00:06:50,450
racing<font color="#CCCCCC"> producing techniques so we</font><font color="#E5E5E5"> can</font>

199
00:06:48,950 --> 00:06:52,640
basically use two<font color="#CCCCCC"> different threads</font><font color="#E5E5E5"> and</font>

200
00:06:50,450 --> 00:06:54,979
correlate them to determine<font color="#E5E5E5"> whether or</font>

201
00:06:52,640 --> 00:06:57,020
<font color="#E5E5E5">not how long something takes to run</font>

202
00:06:54,980 --> 00:07:00,590
based<font color="#E5E5E5"> on the amount of operations</font><font color="#CCCCCC"> that</font>

203
00:06:57,020 --> 00:07:03,650
certain<font color="#E5E5E5"> further</font><font color="#CCCCCC"> it's done so I want to</font>

204
00:07:00,590 --> 00:07:05,810
<font color="#E5E5E5">emphasize this early on when we do</font><font color="#CCCCCC"> when</font>

205
00:07:03,650 --> 00:07:07,580
we<font color="#E5E5E5"> were in contract</font><font color="#CCCCCC"> have memory</font>

206
00:07:05,810 --> 00:07:08,840
operations<font color="#E5E5E5"> your typical operating</font>

207
00:07:07,580 --> 00:07:11,300
systems are<font color="#E5E5E5"> going to use</font><font color="#CCCCCC"> Hardware colors</font>

208
00:07:08,840 --> 00:07:12,950
<font color="#E5E5E5">paging right</font><font color="#CCCCCC"> pretty</font><font color="#E5E5E5"> fast but when a</font>

209
00:07:11,300 --> 00:07:14,980
virtual<font color="#CCCCCC"> machine introspection is</font>

210
00:07:12,950 --> 00:07:17,180
happening<font color="#E5E5E5"> the hypervisor has to rely on</font>

211
00:07:14,980 --> 00:07:19,580
<font color="#E5E5E5">usually software acceleration right it</font>

212
00:07:17,180 --> 00:07:21,230
can't use<font color="#E5E5E5"> hardware for some of the some</font>

213
00:07:19,580 --> 00:07:24,349
of the<font color="#E5E5E5"> things that's doing plus it's</font>

214
00:07:21,230 --> 00:07:25,820
going to be a bit slow another thing

215
00:07:24,350 --> 00:07:27,200
we're going<font color="#E5E5E5"> to</font><font color="#CCCCCC"> be</font><font color="#E5E5E5"> leveraging is I was</font>

216
00:07:25,820 --> 00:07:28,790
<font color="#E5E5E5">called live via my it's a virtual</font>

217
00:07:27,200 --> 00:07:30,260
machine introspection library that<font color="#E5E5E5"> was</font>

218
00:07:28,790 --> 00:07:32,240
<font color="#E5E5E5">written by someone who now works for us</font>

219
00:07:30,260 --> 00:07:34,340
<font color="#E5E5E5">although he did the work outside of</font><font color="#CCCCCC"> the</font>

220
00:07:32,240 --> 00:07:36,290
company<font color="#E5E5E5"> it's available on github</font><font color="#CCCCCC"> it's</font>

221
00:07:34,340 --> 00:07:38,659
open source<font color="#CCCCCC"> you can</font><font color="#E5E5E5"> either go to live</font>

222
00:07:36,290 --> 00:07:40,730
via<font color="#E5E5E5"> my comm or just you know google it</font>

223
00:07:38,660 --> 00:07:43,160
I'm<font color="#E5E5E5"> here</font><font color="#CCCCCC"> with Chris head but basically</font>

224
00:07:40,730 --> 00:07:46,520
it makes virtual<font color="#E5E5E5"> change respectin pretty</font>

225
00:07:43,160 --> 00:07:47,900
easy<font color="#E5E5E5"> you can do you know modifying a</font>

226
00:07:46,520 --> 00:07:50,419
page<font color="#CCCCCC"> permissions you can read and read</font>

227
00:07:47,900 --> 00:07:51,770
<font color="#CCCCCC">memory you can map in memory</font><font color="#E5E5E5"> a lot of</font>

228
00:07:50,420 --> 00:07:53,870
different things<font color="#E5E5E5"> you</font><font color="#CCCCCC"> can even have it</font>

229
00:07:51,770 --> 00:07:56,180
open<font color="#E5E5E5"> up tabs for you on someone's</font>

230
00:07:53,870 --> 00:07:57,560
browser you know it<font color="#CCCCCC"> just</font><font color="#E5E5E5"> makes life easy</font>

231
00:07:56,180 --> 00:08:00,590
and<font color="#E5E5E5"> we're going to be using it for some</font>

232
00:07:57,560 --> 00:08:02,480
<font color="#E5E5E5">of ovarcome change introspection work so</font>

233
00:08:00,590 --> 00:08:05,119
I<font color="#E5E5E5"> love it a background on a cat on</font>

234
00:08:02,480 --> 00:08:06,650
<font color="#E5E5E5">caches in the CPU I'm not really going</font>

235
00:08:05,120 --> 00:08:10,220
<font color="#E5E5E5">to dive into this too</font><font color="#CCCCCC"> much I just wanted</font>

236
00:08:06,650 --> 00:08:11,630
<font color="#CCCCCC">to give a quick background on on what</font>

237
00:08:10,220 --> 00:08:13,280
your basic cache looks like so the

238
00:08:11,630 --> 00:08:15,350
important<font color="#CCCCCC"> thing</font><font color="#E5E5E5"> is that you usually have</font>

239
00:08:13,280 --> 00:08:18,289
<font color="#CCCCCC">three</font><font color="#E5E5E5"> levels of cache on your CPU and</font>

240
00:08:15,350 --> 00:08:20,690
<font color="#E5E5E5">now in this case I have a four core core</font>

241
00:08:18,290 --> 00:08:25,010
core CPU and you know l1 and l2 caches

242
00:08:20,690 --> 00:08:26,420
will sit on on each core the l3 cache is

243
00:08:25,010 --> 00:08:27,500
shared<font color="#E5E5E5"> in most all the cores and that's</font>

244
00:08:26,420 --> 00:08:29,540
what's<font color="#E5E5E5"> really important</font><font color="#CCCCCC"> for</font><font color="#E5E5E5"> some of</font><font color="#CCCCCC"> the</font>

245
00:08:27,500 --> 00:08:30,860
work we're doing<font color="#CCCCCC"> we don't need to worry</font>

246
00:08:29,540 --> 00:08:32,390
<font color="#CCCCCC">about an operation happening on any</font>

247
00:08:30,860 --> 00:08:35,539
specific core we just needed<font color="#CCCCCC"> to happen</font>

248
00:08:32,390 --> 00:08:38,000
<font color="#E5E5E5">down on the CPU in and of itself</font><font color="#CCCCCC"> so this</font>

249
00:08:35,539 --> 00:08:40,010
<font color="#E5E5E5">is your basic cache right most caches</font>

250
00:08:38,000 --> 00:08:42,470
are going to be set associative<font color="#CCCCCC"> this is</font>

251
00:08:40,010 --> 00:08:44,030
a very very compressed version of what a

252
00:08:42,470 --> 00:08:46,490
cache might look like<font color="#E5E5E5"> but you</font><font color="#CCCCCC"> know let's</font>

253
00:08:44,030 --> 00:08:48,800
say<font color="#CCCCCC"> you have four sets</font><font color="#E5E5E5"> and poor ways so</font>

254
00:08:46,490 --> 00:08:50,960
each set<font color="#CCCCCC"> has four ways plus you</font><font color="#E5E5E5"> have</font>

255
00:08:48,800 --> 00:08:52,550
<font color="#E5E5E5">plus you have four cache lines each set</font>

256
00:08:50,960 --> 00:08:54,230
so later on<font color="#CCCCCC"> I</font><font color="#E5E5E5"> start talking about</font>

257
00:08:52,550 --> 00:08:55,160
flushing<font color="#E5E5E5"> a cache line or</font><font color="#CCCCCC"> something</font>

258
00:08:54,230 --> 00:08:59,480
<font color="#E5E5E5">this is kind of the structure I'm</font>

259
00:08:55,160 --> 00:09:01,040
looking at re talking about<font color="#E5E5E5"> now there's</font>

260
00:08:59,480 --> 00:09:03,590
a lot of different cache side-channel

261
00:09:01,040 --> 00:09:06,110
attacks that take<font color="#CCCCCC"> advantage of</font><font color="#E5E5E5"> the cache</font>

262
00:09:03,590 --> 00:09:07,610
hierarchy<font color="#E5E5E5"> this is this is a sampling of</font>

263
00:09:06,110 --> 00:09:08,990
all the different<font color="#E5E5E5"> types of caches</font><font color="#CCCCCC"> that</font>

264
00:09:07,610 --> 00:09:10,730
are hash attacks that<font color="#CCCCCC"> are pretty common</font>

265
00:09:08,990 --> 00:09:11,930
<font color="#CCCCCC">you don't</font><font color="#E5E5E5"> need to remember all these and</font>

266
00:09:10,730 --> 00:09:13,640
I'm not going to go over<font color="#CCCCCC"> all</font><font color="#E5E5E5"> them</font>

267
00:09:11,930 --> 00:09:15,410
there's two<font color="#E5E5E5"> here in particular that</font><font color="#CCCCCC"> are</font>

268
00:09:13,640 --> 00:09:17,240
of interest<font color="#E5E5E5"> to us which I'll get into in</font>

269
00:09:15,410 --> 00:09:19,459
depth later<font color="#E5E5E5"> but you know these</font><font color="#CCCCCC"> comes on</font>

270
00:09:17,240 --> 00:09:20,930
these all<font color="#CCCCCC"> worked in many different</font><font color="#E5E5E5"> ways</font>

271
00:09:19,460 --> 00:09:24,200
including<font color="#E5E5E5"> just targeting a shared</font>

272
00:09:20,930 --> 00:09:25,819
virtual<font color="#E5E5E5"> address or going after using</font>

273
00:09:24,200 --> 00:09:27,980
conviction<font color="#E5E5E5"> sets so an eviction set is</font>

274
00:09:25,820 --> 00:09:30,500
<font color="#E5E5E5">basically a set of virtual addresses</font>

275
00:09:27,980 --> 00:09:32,360
that will correspond to cache lines in

276
00:09:30,500 --> 00:09:34,610
the in the cache itself<font color="#E5E5E5"> that you can use</font>

277
00:09:32,360 --> 00:09:35,900
<font color="#CCCCCC">to they can use the determine the</font>

278
00:09:34,610 --> 00:09:37,580
<font color="#E5E5E5">whether or</font><font color="#CCCCCC"> not some operations happen</font>

279
00:09:35,900 --> 00:09:40,520
<font color="#CCCCCC">here or not right</font><font color="#E5E5E5"> all this usually</font>

280
00:09:37,580 --> 00:09:42,890
relies on<font color="#E5E5E5"> a timing</font><font color="#CCCCCC"> mechanism so you know</font>

281
00:09:40,520 --> 00:09:44,600
loading up something the cache line<font color="#CCCCCC"> rmv</font>

282
00:09:42,890 --> 00:09:45,980
<font color="#E5E5E5">on the cache line</font><font color="#CCCCCC"> and then seeing how</font>

283
00:09:44,600 --> 00:09:48,680
seeing<font color="#E5E5E5"> it was still there by trying to</font>

284
00:09:45,980 --> 00:09:50,690
reload it or by trying to you know<font color="#E5E5E5"> prime</font>

285
00:09:48,680 --> 00:09:51,949
it again or<font color="#E5E5E5"> something like</font><font color="#CCCCCC"> that again I</font>

286
00:09:50,690 --> 00:09:53,600
don't<font color="#E5E5E5"> want to</font><font color="#CCCCCC"> go over all this right now</font>

287
00:09:51,950 --> 00:09:59,390
<font color="#E5E5E5">and I'm not going to get super huge</font>

288
00:09:53,600 --> 00:10:00,290
depth I need to later on right so now

289
00:09:59,390 --> 00:10:03,410
let's<font color="#CCCCCC"> talk about</font><font color="#E5E5E5"> each</font><font color="#CCCCCC"> one of</font><font color="#E5E5E5"> the</font>

290
00:10:00,290 --> 00:10:06,170
<font color="#E5E5E5">different centers so again a hypervisor</font>

291
00:10:03,410 --> 00:10:08,000
will will will interest will modify

292
00:10:06,170 --> 00:10:09,260
<font color="#E5E5E5">guest behavior based on a number</font><font color="#CCCCCC"> of</font>

293
00:10:08,000 --> 00:10:11,150
<font color="#E5E5E5">different</font><font color="#CCCCCC"> reasons right it</font><font color="#E5E5E5"> might need to</font>

294
00:10:09,260 --> 00:10:13,100
<font color="#CCCCCC">just determine</font><font color="#E5E5E5"> what kind of information</font>

295
00:10:11,150 --> 00:10:14,510
<font color="#E5E5E5">is</font><font color="#CCCCCC"> on the guest</font><font color="#E5E5E5"> for some reason it may</font>

296
00:10:13,100 --> 00:10:16,400
just<font color="#E5E5E5"> you can modify the guest behavior</font>

297
00:10:14,510 --> 00:10:17,510
for<font color="#CCCCCC"> load-balancing</font><font color="#E5E5E5"> maybe just need some</font>

298
00:10:16,400 --> 00:10:19,880
know when it's going to do<font color="#E5E5E5"> something</font>

299
00:10:17,510 --> 00:10:21,740
<font color="#CCCCCC">just so they</font><font color="#E5E5E5"> can do you</font><font color="#CCCCCC"> know general</font>

300
00:10:19,880 --> 00:10:23,689
general a<font color="#E5E5E5"> low bounce here and out or any</font>

301
00:10:21,740 --> 00:10:25,190
kind of any other number<font color="#CCCCCC"> of things that</font>

302
00:10:23,690 --> 00:10:26,990
<font color="#CCCCCC">they</font><font color="#E5E5E5"> want to do but we can use</font><font color="#CCCCCC"> the</font>

303
00:10:25,190 --> 00:10:28,550
<font color="#E5E5E5">timing to determine you know whether or</font>

304
00:10:26,990 --> 00:10:31,600
<font color="#E5E5E5">not the hypervisor is trapping how much</font>

305
00:10:28,550 --> 00:10:33,589
work is doing<font color="#E5E5E5"> that sort of</font><font color="#CCCCCC"> thing so</font>

306
00:10:31,600 --> 00:10:35,360
<font color="#CCCCCC">we're going to</font><font color="#E5E5E5"> be have it dry some</font>

307
00:10:33,590 --> 00:10:37,220
<font color="#E5E5E5">baselines from some other instructions</font>

308
00:10:35,360 --> 00:10:39,500
to<font color="#CCCCCC"> determine you know what timing</font><font color="#E5E5E5"> is</font>

309
00:10:37,220 --> 00:10:41,210
suspicion is what timing<font color="#E5E5E5"> is not so some</font>

310
00:10:39,500 --> 00:10:42,380
instructions will<font color="#E5E5E5"> crab unconditionally</font>

311
00:10:41,210 --> 00:10:44,600
right they'll trap every<font color="#CCCCCC"> single time you</font>

312
00:10:42,380 --> 00:10:46,520
<font color="#E5E5E5">run them in hardware so an instruction</font>

313
00:10:44,600 --> 00:10:48,350
<font color="#CCCCCC">like</font><font color="#E5E5E5"> CPU ID which you can probably guess</font>

314
00:10:46,520 --> 00:10:51,170
is returning identification information

315
00:10:48,350 --> 00:10:52,400
<font color="#CCCCCC">for</font><font color="#E5E5E5"> your CPU so think about your your</font>

316
00:10:51,170 --> 00:10:54,439
<font color="#CCCCCC">guest</font><font color="#E5E5E5"> that you</font><font color="#CCCCCC"> launch in a hypervisor</font>

317
00:10:52,400 --> 00:10:56,600
it's not literally<font color="#E5E5E5"> going to have access</font>

318
00:10:54,440 --> 00:10:58,730
<font color="#CCCCCC">to your specific CPU that's running in</font>

319
00:10:56,600 --> 00:10:59,990
the<font color="#E5E5E5"> hardware it's going to be it's going</font>

320
00:10:58,730 --> 00:11:01,910
to<font color="#E5E5E5"> be seeing what it thinks is the</font>

321
00:10:59,990 --> 00:11:03,350
hardware<font color="#CCCCCC"> that it has so each time a</font>

322
00:11:01,910 --> 00:11:05,150
request<font color="#E5E5E5"> a run</font><font color="#CCCCCC"> cpuid</font>

323
00:11:03,350 --> 00:11:06,830
<font color="#CCCCCC">a hypervisor needs to jump in and say</font>

324
00:11:05,150 --> 00:11:07,740
this<font color="#E5E5E5"> is what you actually have</font><font color="#CCCCCC"> available</font>

325
00:11:06,830 --> 00:11:10,140
to you

326
00:11:07,740 --> 00:11:11,250
<font color="#E5E5E5">as far as your resources go so it's</font>

327
00:11:10,140 --> 00:11:13,860
gonna<font color="#E5E5E5"> have to travel every single time</font>

328
00:11:11,250 --> 00:11:16,470
now an operation<font color="#CCCCCC"> like</font><font color="#E5E5E5"> move to</font><font color="#CCCCCC"> CR</font><font color="#E5E5E5"> 3 which</font>

329
00:11:13,860 --> 00:11:18,750
is<font color="#E5E5E5"> no manipulating the base of the page</font>

330
00:11:16,470 --> 00:11:20,340
<font color="#E5E5E5">paging hierarchy doesn't always need to</font>

331
00:11:18,750 --> 00:11:24,240
trap<font color="#E5E5E5"> right so that was one we can't</font>

332
00:11:20,340 --> 00:11:25,620
really<font color="#E5E5E5"> rely</font><font color="#CCCCCC"> on that much so when we do</font>

333
00:11:24,240 --> 00:11:27,900
timing<font color="#E5E5E5"> for this we're gonna use wall</font>

334
00:11:25,620 --> 00:11:29,550
timing with<font color="#CCCCCC"> the HP so I talked about the</font>

335
00:11:27,900 --> 00:11:31,949
<font color="#E5E5E5">HP pad before as the multimedia timer</font>

336
00:11:29,550 --> 00:11:35,250
the reason this is reliable because<font color="#E5E5E5"> the</font>

337
00:11:31,950 --> 00:11:36,450
HP pet is used for<font color="#E5E5E5"> multimedia so if it</font>

338
00:11:35,250 --> 00:11:38,910
was being<font color="#E5E5E5"> manipulated</font><font color="#CCCCCC"> by the hypervisor</font>

339
00:11:36,450 --> 00:11:40,260
<font color="#E5E5E5">then things like your audio or video</font><font color="#CCCCCC"> or</font>

340
00:11:38,910 --> 00:11:42,870
your OS graphics or something like<font color="#E5E5E5"> that</font>

341
00:11:40,260 --> 00:11:44,939
<font color="#E5E5E5">would be skipping</font><font color="#CCCCCC"> around</font><font color="#E5E5E5"> looks pretty</font>

342
00:11:42,870 --> 00:11:46,530
obvious something's going wrong<font color="#E5E5E5"> so we</font>

343
00:11:44,940 --> 00:11:49,650
can use that<font color="#CCCCCC"> as our base timing source</font>

344
00:11:46,530 --> 00:11:50,880
or wall timing<font color="#E5E5E5"> so we can also use thread</font>

345
00:11:49,650 --> 00:11:52,199
<font color="#CCCCCC">Racing's so basically</font><font color="#E5E5E5"> running two</font>

346
00:11:50,880 --> 00:11:54,720
threads and<font color="#E5E5E5"> we can pin them to a</font>

347
00:11:52,200 --> 00:11:56,130
different<font color="#CCCCCC"> core if we'd</font><font color="#E5E5E5"> like and have one</font>

348
00:11:54,720 --> 00:11:58,380
of them run<font color="#CCCCCC"> knobs because not to really</font>

349
00:11:56,130 --> 00:12:00,240
class and then basically<font color="#E5E5E5"> have the amount</font>

350
00:11:58,380 --> 00:12:01,920
of knobs that run while our main thread

351
00:12:00,240 --> 00:12:03,090
of interest is running and<font color="#E5E5E5"> we can use</font>

352
00:12:01,920 --> 00:12:04,620
these<font color="#E5E5E5"> two</font><font color="#CCCCCC"> things to supplement each</font>

353
00:12:03,090 --> 00:12:06,120
other right<font color="#E5E5E5"> so</font><font color="#CCCCCC"> if one of them shows</font>

354
00:12:04,620 --> 00:12:07,740
weird timing the other one doesn't then

355
00:12:06,120 --> 00:12:09,000
we may know that<font color="#E5E5E5"> you know something</font><font color="#CCCCCC"> may</font>

356
00:12:07,740 --> 00:12:10,230
not<font color="#E5E5E5"> be quite right but we can use them</font>

357
00:12:09,000 --> 00:12:12,810
to supplement each other to be really

358
00:12:10,230 --> 00:12:15,810
sure that something's going wrong so

359
00:12:12,810 --> 00:12:18,660
active memory<font color="#E5E5E5"> session again is the is</font>

360
00:12:15,810 --> 00:12:21,270
the hypervisor<font color="#CCCCCC"> intersecting directly on</font>

361
00:12:18,660 --> 00:12:22,920
a memory operation again so remember the

362
00:12:21,270 --> 00:12:25,439
hyper right<font color="#E5E5E5"> the</font><font color="#CCCCCC"> guest is</font><font color="#E5E5E5"> accessing</font>

363
00:12:22,920 --> 00:12:26,490
memory<font color="#E5E5E5"> the hypervisor interferes</font><font color="#CCCCCC"> and</font>

364
00:12:25,440 --> 00:12:28,560
does its thing and<font color="#E5E5E5"> then</font><font color="#CCCCCC"> returned</font><font color="#E5E5E5"> that</font>

365
00:12:26,490 --> 00:12:30,540
controlled early guess so this<font color="#CCCCCC"> can</font>

366
00:12:28,560 --> 00:12:32,699
<font color="#CCCCCC">happen with</font><font color="#E5E5E5"> an EPT violation so the</font>

367
00:12:30,540 --> 00:12:35,280
extended page tables<font color="#E5E5E5"> basically allows</font>

368
00:12:32,700 --> 00:12:39,630
virtual to physical mappings for a guest

369
00:12:35,280 --> 00:12:40,860
<font color="#E5E5E5">so we can mark the page as a</font><font color="#CCCCCC"> tab some</font>

370
00:12:39,630 --> 00:12:42,630
different photo permissions that<font color="#E5E5E5"> cause a</font>

371
00:12:40,860 --> 00:12:44,910
violation<font color="#CCCCCC"> and return</font><font color="#E5E5E5"> back exit to a</font>

372
00:12:42,630 --> 00:12:47,400
hypervisor<font color="#CCCCCC"> right so that the guess is is</font>

373
00:12:44,910 --> 00:12:48,990
<font color="#E5E5E5">doing its thing</font><font color="#CCCCCC"> accesses and page the</font>

374
00:12:47,400 --> 00:12:50,520
page throws a violation<font color="#E5E5E5"> and returns</font><font color="#CCCCCC"> back</font>

375
00:12:48,990 --> 00:12:52,230
control<font color="#E5E5E5"> to the hypervisor the hypervisor</font>

376
00:12:50,520 --> 00:12:55,860
has<font color="#E5E5E5"> to do something otherwise the system</font>

377
00:12:52,230 --> 00:12:57,900
<font color="#CCCCCC">would hang so we can use</font><font color="#E5E5E5"> live via my to</font>

378
00:12:55,860 --> 00:12:59,520
do this<font color="#E5E5E5"> and just</font><font color="#CCCCCC"> it'll it'll just mark</font>

379
00:12:57,900 --> 00:13:01,560
the pages<font color="#E5E5E5"> we</font><font color="#CCCCCC"> need to and</font><font color="#E5E5E5"> then cause an</font>

380
00:12:59,520 --> 00:13:03,090
exit now we can do this<font color="#CCCCCC"> tours like</font><font color="#E5E5E5"> read</font>

381
00:13:01,560 --> 00:13:05,219
or write<font color="#CCCCCC"> or whatever else</font><font color="#E5E5E5"> it</font><font color="#CCCCCC"> was one</font><font color="#E5E5E5"> of</font>

382
00:13:03,090 --> 00:13:08,880
you<font color="#E5E5E5"> this incur a pretty large overhead</font>

383
00:13:05,220 --> 00:13:10,650
overall<font color="#E5E5E5"> so this is basically what this</font>

384
00:13:08,880 --> 00:13:11,910
looks like from<font color="#E5E5E5"> Libya</font><font color="#CCCCCC"> mines perspective</font>

385
00:13:10,650 --> 00:13:13,439
so if you're sitting<font color="#CCCCCC"> on a privilege</font>

386
00:13:11,910 --> 00:13:15,569
domain<font color="#E5E5E5"> which is basically the domain</font>

387
00:13:13,440 --> 00:13:16,800
you're<font color="#E5E5E5"> controlling from so again</font>

388
00:13:15,570 --> 00:13:17,970
remember when I<font color="#E5E5E5"> mentioned that you</font><font color="#CCCCCC"> boot</font>

389
00:13:16,800 --> 00:13:19,560
the<font color="#CCCCCC"> system up and</font><font color="#E5E5E5"> it kicks you into a</font>

390
00:13:17,970 --> 00:13:21,120
privilege domain<font color="#E5E5E5"> that would be what's</font>

391
00:13:19,560 --> 00:13:22,709
usually called<font color="#CCCCCC"> Don</font><font color="#E5E5E5"> zero</font>

392
00:13:21,120 --> 00:13:25,350
especially the case of<font color="#CCCCCC"> Zen they call</font>

393
00:13:22,710 --> 00:13:27,330
them domains that<font color="#CCCCCC"> have guests Dom you is</font>

394
00:13:25,350 --> 00:13:28,860
just<font color="#CCCCCC"> your unprivileged</font><font color="#E5E5E5"> domain that your</font>

395
00:13:27,330 --> 00:13:30,030
your guests<font color="#E5E5E5"> that we're we're trying</font><font color="#CCCCCC"> to</font>

396
00:13:28,860 --> 00:13:32,370
<font color="#CCCCCC">determine whether</font><font color="#E5E5E5"> or not intersections</font>

397
00:13:30,030 --> 00:13:34,380
happening so basically from<font color="#E5E5E5"> this from</font>

398
00:13:32,370 --> 00:13:36,600
this point<font color="#E5E5E5"> Dom zero will grab the</font>

399
00:13:34,380 --> 00:13:38,640
directory table base or<font color="#CCCCCC"> the process ID</font>

400
00:13:36,600 --> 00:13:40,440
from<font color="#CCCCCC"> dumb</font><font color="#E5E5E5"> you and then it'll either walk</font>

401
00:13:38,640 --> 00:13:42,569
<font color="#E5E5E5">that was process list or it'll get the</font>

402
00:13:40,440 --> 00:13:44,040
<font color="#E5E5E5">fizz ladders by walking</font><font color="#CCCCCC"> the</font><font color="#E5E5E5"> guest page</font>

403
00:13:42,570 --> 00:13:45,000
tables so<font color="#E5E5E5"> it does this from a whole</font>

404
00:13:44,040 --> 00:13:47,010
bunch<font color="#CCCCCC"> of different</font><font color="#E5E5E5"> caches</font>

405
00:13:45,000 --> 00:13:48,900
<font color="#CCCCCC">lívia - tons of caches</font><font color="#E5E5E5"> in an automatic</font>

406
00:13:47,010 --> 00:13:51,060
that maintains them all and then it'll

407
00:13:48,900 --> 00:13:53,010
call down to the<font color="#E5E5E5"> hypervisor and say you</font>

408
00:13:51,060 --> 00:13:53,939
know update this page permission<font color="#CCCCCC"> how</font><font color="#E5E5E5"> the</font>

409
00:13:53,010 --> 00:13:55,230
<font color="#E5E5E5">key violation</font>

410
00:13:53,940 --> 00:13:56,640
so again when something's right or

411
00:13:55,230 --> 00:13:58,500
written<font color="#E5E5E5"> to</font><font color="#CCCCCC"> that page it'll cause a</font>

412
00:13:56,640 --> 00:14:00,180
violation it'll return control<font color="#CCCCCC"> to the</font>

413
00:13:58,500 --> 00:14:00,860
<font color="#E5E5E5">hypervisor and the hypervisor will do</font>

414
00:14:00,180 --> 00:14:03,870
its thing

415
00:14:00,860 --> 00:14:05,910
<font color="#CCCCCC">so it'll</font><font color="#E5E5E5"> send that down</font><font color="#CCCCCC"> and the</font>

416
00:14:03,870 --> 00:14:07,820
hypervisor will return will obtain the

417
00:14:05,910 --> 00:14:09,780
guest page<font color="#CCCCCC"> Korean number and then</font>

418
00:14:07,820 --> 00:14:12,660
translate it to the<font color="#CCCCCC"> machine prime number</font>

419
00:14:09,780 --> 00:14:14,939
and<font color="#E5E5E5"> map that</font><font color="#CCCCCC"> memory</font><font color="#E5E5E5"> back into into Don</font>

420
00:14:12,660 --> 00:14:17,010
zero<font color="#E5E5E5"> so again this is all updated</font>

421
00:14:14,940 --> 00:14:20,460
automatically by<font color="#CCCCCC"> lib BMI it does all</font><font color="#E5E5E5"> the</font>

422
00:14:17,010 --> 00:14:22,950
<font color="#E5E5E5">stuff for you in the back end so passive</font>

423
00:14:20,460 --> 00:14:24,240
memory monitoring so again let's say the

424
00:14:22,950 --> 00:14:25,830
hypervisor wants to be more stealthy

425
00:14:24,240 --> 00:14:28,050
than just actively interceding every

426
00:14:25,830 --> 00:14:30,780
single time<font color="#CCCCCC"> you access</font><font color="#E5E5E5"> a portion of</font>

427
00:14:28,050 --> 00:14:32,459
memory<font color="#E5E5E5"> so you can map in the guest</font>

428
00:14:30,780 --> 00:14:34,050
physical pages<font color="#CCCCCC"> without actually directly</font>

429
00:14:32,460 --> 00:14:37,500
interfering with the<font color="#E5E5E5"> guest memory</font>

430
00:14:34,050 --> 00:14:38,849
operations so<font color="#E5E5E5"> you know may be asking</font>

431
00:14:37,500 --> 00:14:40,020
well yeah aren't there a whole lot<font color="#E5E5E5"> of</font>

432
00:14:38,850 --> 00:14:41,730
other memory translations that<font color="#E5E5E5"> are</font>

433
00:14:40,020 --> 00:14:42,990
<font color="#E5E5E5">happening yeah there are but Intel's</font>

434
00:14:41,730 --> 00:14:44,790
doing all stuff we're<font color="#E5E5E5"> doing the hardware</font>

435
00:14:42,990 --> 00:14:46,980
so there's<font color="#CCCCCC"> nothing</font><font color="#E5E5E5"> to worry your pretty</font>

436
00:14:44,790 --> 00:14:49,579
little<font color="#CCCCCC"> head about</font><font color="#E5E5E5"> but this is you know</font>

437
00:14:46,980 --> 00:14:52,230
<font color="#E5E5E5">this is basically how it's going to work</font>

438
00:14:49,580 --> 00:14:53,760
<font color="#E5E5E5">but you know we can use a timing</font>

439
00:14:52,230 --> 00:14:55,740
<font color="#E5E5E5">operation to determine whether or not</font>

440
00:14:53,760 --> 00:14:59,100
memory lines are being<font color="#CCCCCC"> accessed</font><font color="#E5E5E5"> in the</font>

441
00:14:55,740 --> 00:15:00,900
<font color="#E5E5E5">in the hardware right so whenever you're</font>

442
00:14:59,100 --> 00:15:02,160
accessing something<font color="#E5E5E5"> in memory</font><font color="#CCCCCC"> it's</font>

443
00:15:00,900 --> 00:15:03,300
usually<font color="#E5E5E5"> going to end</font><font color="#CCCCCC"> up in the cache not</font>

444
00:15:02,160 --> 00:15:05,520
always and I'll talk about<font color="#E5E5E5"> that</font><font color="#CCCCCC"> a bit</font>

445
00:15:03,300 --> 00:15:07,859
more<font color="#CCCCCC"> later</font><font color="#E5E5E5"> but</font><font color="#CCCCCC"> usually we'll so we can</font>

446
00:15:05,520 --> 00:15:08,970
use a cache attack so remember I listed

447
00:15:07,860 --> 00:15:10,380
a<font color="#CCCCCC"> whole bunch of different cache attacks</font>

448
00:15:08,970 --> 00:15:12,690
<font color="#E5E5E5">well this is this is one of them and</font>

449
00:15:10,380 --> 00:15:14,610
this is<font color="#E5E5E5"> the</font><font color="#CCCCCC"> one we use and basically</font>

450
00:15:12,690 --> 00:15:16,560
<font color="#CCCCCC">what happens is in a pleasure reload</font>

451
00:15:14,610 --> 00:15:17,850
cache attack<font color="#E5E5E5"> you can flush a memory line</font>

452
00:15:16,560 --> 00:15:20,010
of interest<font color="#E5E5E5"> and it'll flush it</font>

453
00:15:17,850 --> 00:15:21,420
completely<font color="#E5E5E5"> out</font><font color="#CCCCCC"> of the cache and</font><font color="#E5E5E5"> then</font>

454
00:15:20,010 --> 00:15:24,150
<font color="#CCCCCC">will</font><font color="#E5E5E5"> wait for some</font><font color="#CCCCCC"> period</font><font color="#E5E5E5"> of time</font><font color="#CCCCCC"> and</font>

455
00:15:21,420 --> 00:15:25,530
<font color="#E5E5E5">try to reload it now if we try to reload</font>

456
00:15:24,150 --> 00:15:27,000
it and<font color="#CCCCCC"> it comes returns back</font><font color="#E5E5E5"> really</font>

457
00:15:25,530 --> 00:15:28,050
<font color="#E5E5E5">quickly that</font><font color="#CCCCCC"> means that</font><font color="#E5E5E5"> something else</font>

458
00:15:27,000 --> 00:15:29,370
<font color="#CCCCCC">is accessed in</font><font color="#E5E5E5"> that portion of memory</font>

459
00:15:28,050 --> 00:15:30,990
<font color="#E5E5E5">because</font><font color="#CCCCCC"> it's already there right it</font>

460
00:15:29,370 --> 00:15:32,640
doesn't<font color="#E5E5E5"> need to reload it twice</font>

461
00:15:30,990 --> 00:15:34,140
whereas if<font color="#CCCCCC"> we need</font><font color="#E5E5E5"> to take more</font><font color="#CCCCCC"> time to</font>

462
00:15:32,640 --> 00:15:35,069
<font color="#E5E5E5">reload it I mean it's not there anymore</font>

463
00:15:34,140 --> 00:15:36,480
<font color="#E5E5E5">so a decrease</font>

464
00:15:35,070 --> 00:15:39,960
timing will<font color="#E5E5E5"> be pretty addictive that</font>

465
00:15:36,480 --> 00:15:41,220
something else<font color="#E5E5E5"> is going on here so this</font>

466
00:15:39,960 --> 00:15:43,050
<font color="#E5E5E5">is basically what</font><font color="#CCCCCC"> it looks like from</font>

467
00:15:41,220 --> 00:15:45,120
<font color="#E5E5E5">Libya</font><font color="#CCCCCC"> my's perspective from the</font>

468
00:15:43,050 --> 00:15:46,859
privilege domain<font color="#E5E5E5"> it's going to do a lot</font>

469
00:15:45,120 --> 00:15:48,870
<font color="#CCCCCC">of the same thing that I just mentioned</font>

470
00:15:46,860 --> 00:15:51,060
before<font color="#E5E5E5"> right it's going to either grab</font>

471
00:15:48,870 --> 00:15:52,500
<font color="#CCCCCC">the DTV</font><font color="#E5E5E5"> or it's going to grab the sorry</font>

472
00:15:51,060 --> 00:15:54,900
it's gonna<font color="#E5E5E5"> grab the DT beer it's</font><font color="#CCCCCC"> gonna</font>

473
00:15:52,500 --> 00:15:56,790
<font color="#CCCCCC">grab the</font><font color="#E5E5E5"> pig</font><font color="#CCCCCC"> and</font><font color="#E5E5E5"> then it's going to walk</font>

474
00:15:54,900 --> 00:15:58,709
through<font color="#E5E5E5"> those process lists or get the</font>

475
00:15:56,790 --> 00:16:01,280
<font color="#E5E5E5">physical address</font><font color="#CCCCCC"> and then it's going to</font>

476
00:15:58,710 --> 00:16:04,140
<font color="#CCCCCC">ask the hypervisor instead to M map in</font>

477
00:16:01,280 --> 00:16:06,180
<font color="#E5E5E5">that's that information for it through</font>

478
00:16:04,140 --> 00:16:08,370
<font color="#E5E5E5">the guest page for a number and then the</font>

479
00:16:06,180 --> 00:16:09,300
hypervisor<font color="#CCCCCC"> is going to do that</font><font color="#E5E5E5"> with it's</font>

480
00:16:08,370 --> 00:16:10,590
<font color="#E5E5E5">going to look at the Machine frame</font>

481
00:16:09,300 --> 00:16:12,420
number and then return<font color="#CCCCCC"> back that mapping</font>

482
00:16:10,590 --> 00:16:17,370
<font color="#E5E5E5">to the privilege domain and the prim</font>

483
00:16:12,420 --> 00:16:20,339
<font color="#E5E5E5">domain and respect on the guest so non</font>

484
00:16:17,370 --> 00:16:23,400
<font color="#CCCCCC">temporal axis</font><font color="#E5E5E5"> stuff basically this is</font>

485
00:16:20,340 --> 00:16:25,950
again the non<font color="#CCCCCC"> fashioned thing</font><font color="#E5E5E5"> so in some</font>

486
00:16:23,400 --> 00:16:28,170
situations<font color="#CCCCCC"> there's a use for</font><font color="#E5E5E5"> a non</font>

487
00:16:25,950 --> 00:16:28,980
<font color="#CCCCCC">cashing instruction a</font><font color="#E5E5E5"> lot of times it's</font>

488
00:16:28,170 --> 00:16:32,280
used<font color="#CCCCCC"> for things</font><font color="#E5E5E5"> like graphics</font>

489
00:16:28,980 --> 00:16:34,290
<font color="#CCCCCC">what-have-you but</font><font color="#E5E5E5"> not</font><font color="#CCCCCC"> immoral structions</font>

490
00:16:32,280 --> 00:16:35,699
are kind<font color="#E5E5E5"> of interesting right</font><font color="#CCCCCC"> in that we</font>

491
00:16:34,290 --> 00:16:37,469
can't<font color="#CCCCCC"> use the previous cache tech I</font>

492
00:16:35,700 --> 00:16:40,860
talked<font color="#E5E5E5"> about right it's not going to be</font>

493
00:16:37,470 --> 00:16:42,810
in the cache so<font color="#E5E5E5"> there is there</font><font color="#CCCCCC"> is a side</font>

494
00:16:40,860 --> 00:16:45,420
effect<font color="#CCCCCC"> that non-temporal instruction and</font>

495
00:16:42,810 --> 00:16:47,760
<font color="#E5E5E5">that when you when you use a temporal</font>

496
00:16:45,420 --> 00:16:49,140
instruction for<font color="#CCCCCC"> example it's</font><font color="#E5E5E5"> going to</font>

497
00:16:47,760 --> 00:16:50,939
write it into<font color="#CCCCCC"> the cache right</font><font color="#E5E5E5"> but when a</font>

498
00:16:49,140 --> 00:16:52,050
non temporal instruction is used it's

499
00:16:50,940 --> 00:16:53,550
going to check to<font color="#CCCCCC"> make sure it's</font><font color="#E5E5E5"> not in</font>

500
00:16:52,050 --> 00:16:55,319
the cache and if it isn't<font color="#CCCCCC"> the cache then</font>

501
00:16:53,550 --> 00:16:56,849
flush<font color="#CCCCCC"> it out</font><font color="#E5E5E5"> so we can probably use</font><font color="#CCCCCC"> that</font>

502
00:16:55,320 --> 00:16:59,100
to our<font color="#E5E5E5"> advantage we wanted to</font><font color="#CCCCCC"> determine</font>

503
00:16:56,850 --> 00:17:00,990
that that anantam instruction is trying

504
00:16:59,100 --> 00:17:02,340
to be used to be sort<font color="#CCCCCC"> of stealthy now</font>

505
00:17:00,990 --> 00:17:04,290
that would require some<font color="#E5E5E5"> other you know</font>

506
00:17:02,340 --> 00:17:07,050
error<font color="#E5E5E5"> control will that kind</font><font color="#CCCCCC"> of thing</font>

507
00:17:04,290 --> 00:17:09,750
right<font color="#CCCCCC"> the other thing is that impel has</font>

508
00:17:07,050 --> 00:17:11,970
a feature on<font color="#CCCCCC"> their</font><font color="#E5E5E5"> cpus called</font><font color="#CCCCCC"> pat page</font>

509
00:17:09,750 --> 00:17:14,310
attribute tables which can specify per

510
00:17:11,970 --> 00:17:15,540
page caching behavior to be non-cash

511
00:17:14,310 --> 00:17:18,389
interacting<font color="#CCCCCC"> right so you can</font><font color="#E5E5E5"> just say</font>

512
00:17:15,540 --> 00:17:20,188
like don't<font color="#E5E5E5"> catch this page and then you</font>

513
00:17:18,390 --> 00:17:21,030
know<font color="#E5E5E5"> now it won't be cached anymore so</font>

514
00:17:20,189 --> 00:17:25,770
that<font color="#CCCCCC"> would add another</font><font color="#E5E5E5"> layer</font><font color="#CCCCCC"> of</font>

515
00:17:21,030 --> 00:17:26,639
complexity<font color="#E5E5E5"> so when we do this testing we</font>

516
00:17:25,770 --> 00:17:28,369
tested a whole bunch of different

517
00:17:26,640 --> 00:17:30,570
<font color="#CCCCCC">machines including some cloud providers</font>

518
00:17:28,369 --> 00:17:32,219
<font color="#CCCCCC">and we drive some</font><font color="#E5E5E5"> baselines for</font>

519
00:17:30,570 --> 00:17:34,110
<font color="#E5E5E5">instruction</font><font color="#CCCCCC"> err session so remember I</font>

520
00:17:32,220 --> 00:17:36,390
was<font color="#E5E5E5"> talking about cbid</font><font color="#CCCCCC"> for</font><font color="#E5E5E5"> example</font>

521
00:17:34,110 --> 00:17:37,889
always<font color="#E5E5E5"> trapping</font><font color="#CCCCCC"> so we basically use</font>

522
00:17:36,390 --> 00:17:39,420
exiting and<font color="#CCCCCC"> on</font><font color="#E5E5E5"> exiting instructions to</font>

523
00:17:37,890 --> 00:17:40,920
determine<font color="#E5E5E5"> whether how much out</font><font color="#CCCCCC"> of wack</font>

524
00:17:39,420 --> 00:17:43,020
thing that certain things<font color="#E5E5E5"> are and we</font>

525
00:17:40,920 --> 00:17:44,610
could flag things as being you know

526
00:17:43,020 --> 00:17:45,420
either<font color="#E5E5E5"> potentially exiting or of</font>

527
00:17:44,610 --> 00:17:47,459
<font color="#CCCCCC">interest or something like that</font>

528
00:17:45,420 --> 00:17:48,870
<font color="#E5E5E5">depending</font><font color="#CCCCCC"> on depending on the number</font>

529
00:17:47,460 --> 00:17:52,170
that we<font color="#E5E5E5"> get from</font>

530
00:17:48,870 --> 00:17:54,360
<font color="#E5E5E5">intercession centers we looked at</font><font color="#CCCCCC"> memory</font>

531
00:17:52,170 --> 00:17:56,550
<font color="#CCCCCC">that was nearby</font><font color="#E5E5E5"> right so something here</font>

532
00:17:54,360 --> 00:18:00,899
and something there and you know is this

533
00:17:56,550 --> 00:18:02,730
<font color="#CCCCCC">different than what's here so when we</font>

534
00:18:00,900 --> 00:18:04,050
<font color="#CCCCCC">did the instruction in our session when</font>

535
00:18:02,730 --> 00:18:05,430
we designed the evil hypervisor we

536
00:18:04,050 --> 00:18:07,680
basically just had it trap and then

537
00:18:05,430 --> 00:18:08,760
return back<font color="#E5E5E5"> right away to just prove out</font>

538
00:18:07,680 --> 00:18:12,120
that the only thing you really<font color="#CCCCCC"> need to</font>

539
00:18:08,760 --> 00:18:13,710
do is a world switch to show<font color="#E5E5E5"> that just</font>

540
00:18:12,120 --> 00:18:15,059
<font color="#E5E5E5">just the world switch all by itself is</font>

541
00:18:13,710 --> 00:18:16,740
going<font color="#CCCCCC"> to</font><font color="#E5E5E5"> show that</font><font color="#CCCCCC"> something's going on</font>

542
00:18:15,059 --> 00:18:18,389
so this is kind of what it<font color="#CCCCCC"> looks like</font>

543
00:18:16,740 --> 00:18:21,750
this is the wall timing results right so

544
00:18:18,390 --> 00:18:23,640
using<font color="#E5E5E5"> HP so this is these are</font><font color="#CCCCCC"> all</font><font color="#E5E5E5"> the</font>

545
00:18:21,750 --> 00:18:24,960
different instructions<font color="#CCCCCC"> that you</font>

546
00:18:23,640 --> 00:18:27,570
<font color="#E5E5E5">generally supported my hardware for</font>

547
00:18:24,960 --> 00:18:29,040
trapping now some of<font color="#E5E5E5"> them can't exit</font>

548
00:18:27,570 --> 00:18:31,590
right so you're going<font color="#E5E5E5"> to see a nun</font>

549
00:18:29,040 --> 00:18:32,909
exciting only case versus some of<font color="#E5E5E5"> them</font>

550
00:18:31,590 --> 00:18:33,780
have to exit every time right<font color="#CCCCCC"> so</font>

551
00:18:32,910 --> 00:18:37,110
remember<font color="#E5E5E5"> cbid</font>

552
00:18:33,780 --> 00:18:38,670
right there<font color="#CCCCCC"> always</font><font color="#E5E5E5"> has to exit</font><font color="#CCCCCC"> now some</font>

553
00:18:37,110 --> 00:18:40,439
of<font color="#E5E5E5"> them you can see a massive disparity</font>

554
00:18:38,670 --> 00:18:42,630
between<font color="#E5E5E5"> the two like rdds</font><font color="#CCCCCC"> you can</font>

555
00:18:40,440 --> 00:18:43,770
<font color="#CCCCCC">already</font><font color="#E5E5E5"> tsdp</font><font color="#CCCCCC"> those instructions</font><font color="#E5E5E5"> are used</font>

556
00:18:42,630 --> 00:18:45,330
<font color="#E5E5E5">for</font><font color="#CCCCCC"> reading the time</font><font color="#E5E5E5"> stamp counter</font>

557
00:18:43,770 --> 00:18:47,129
<font color="#E5E5E5">remember that really</font><font color="#CCCCCC"> high-resolution</font>

558
00:18:45,330 --> 00:18:50,730
<font color="#CCCCCC">cycle time counter that</font><font color="#E5E5E5"> I'm</font><font color="#CCCCCC"> talking</font>

559
00:18:47,130 --> 00:18:52,740
about<font color="#E5E5E5"> some of them like dr the dr</font>

560
00:18:50,730 --> 00:18:55,559
instruction<font color="#E5E5E5"> the r03 dr7</font>

561
00:18:52,740 --> 00:18:57,210
<font color="#E5E5E5">are for debug registers</font><font color="#CCCCCC"> so those ones</font>

562
00:18:55,559 --> 00:18:59,370
you're<font color="#CCCCCC"> seeing a</font><font color="#E5E5E5"> pretty close correlation</font>

563
00:18:57,210 --> 00:19:02,070
the reason<font color="#E5E5E5"> for</font><font color="#CCCCCC"> that is that Zen will</font>

564
00:18:59,370 --> 00:19:03,239
only trap on<font color="#E5E5E5"> the first the first time it</font>

565
00:19:02,070 --> 00:19:05,010
sees it and<font color="#E5E5E5"> then leave it alone after</font>

566
00:19:03,240 --> 00:19:07,980
<font color="#CCCCCC">that so there's still spike but not as</font>

567
00:19:05,010 --> 00:19:09,390
<font color="#E5E5E5">much</font><font color="#CCCCCC"> of one</font><font color="#E5E5E5"> now in a real intercession</font>

568
00:19:07,980 --> 00:19:11,070
scenario<font color="#E5E5E5"> I wouldn't be</font><font color="#CCCCCC"> able</font><font color="#E5E5E5"> to trap once</font>

569
00:19:09,390 --> 00:19:13,650
and really<font color="#CCCCCC"> BL but evil right</font><font color="#E5E5E5"> I'll be</font>

570
00:19:11,070 --> 00:19:14,790
<font color="#E5E5E5">pretty miserable</font><font color="#CCCCCC"> then</font><font color="#E5E5E5"> but you can get</font>

571
00:19:13,650 --> 00:19:16,920
the<font color="#CCCCCC"> idea right it's a</font><font color="#E5E5E5"> pretty large</font>

572
00:19:14,790 --> 00:19:20,040
disparity between an exiting and an

573
00:19:16,920 --> 00:19:21,720
amazing case now some<font color="#CCCCCC"> of</font><font color="#E5E5E5"> them we we just</font>

574
00:19:20,040 --> 00:19:22,860
didn't add in an exiting case because it

575
00:19:21,720 --> 00:19:24,540
<font color="#E5E5E5">would be you know extraordinarily</font>

576
00:19:22,860 --> 00:19:25,949
difficult for us<font color="#CCCCCC"> added in and the goal</font>

577
00:19:24,540 --> 00:19:28,950
<font color="#CCCCCC">here wasn't</font><font color="#E5E5E5"> really to write an evil</font>

578
00:19:25,950 --> 00:19:30,600
<font color="#CCCCCC">hypervisors</font><font color="#E5E5E5"> so much as just show that</font><font color="#CCCCCC"> a</font>

579
00:19:28,950 --> 00:19:33,390
just show<font color="#CCCCCC"> that we</font><font color="#E5E5E5"> can do this kind of</font>

580
00:19:30,600 --> 00:19:35,580
thing<font color="#E5E5E5"> here's the</font><font color="#CCCCCC"> instruction timing so</font>

581
00:19:33,390 --> 00:19:37,410
remember the thread racing<font color="#CCCCCC"> this is the</font>

582
00:19:35,580 --> 00:19:38,790
<font color="#E5E5E5">this</font><font color="#CCCCCC"> is</font><font color="#E5E5E5"> these</font><font color="#CCCCCC"> are</font><font color="#E5E5E5"> just the results for</font>

583
00:19:37,410 --> 00:19:40,550
the amount of<font color="#E5E5E5"> black knobs we gotta run</font>

584
00:19:38,790 --> 00:19:42,300
<font color="#E5E5E5">so you can see there's a pretty similar</font>

585
00:19:40,550 --> 00:19:43,649
<font color="#E5E5E5">spread for both of them</font>

586
00:19:42,300 --> 00:19:50,070
as<font color="#E5E5E5"> I'm switching back</font><font color="#CCCCCC"> and forth</font><font color="#E5E5E5"> between</font>

587
00:19:43,650 --> 00:19:53,040
two so here's some

588
00:19:50,070 --> 00:19:55,200
instructions for sorry for<font color="#CCCCCC"> wall timing</font>

589
00:19:53,040 --> 00:19:56,730
again<font color="#E5E5E5"> this is what the</font><font color="#CCCCCC"> HPD</font><font color="#E5E5E5"> I put this on</font>

590
00:19:55,200 --> 00:19:59,100
a<font color="#E5E5E5"> separate slide</font><font color="#CCCCCC"> because these</font><font color="#E5E5E5"> ones</font>

591
00:19:56,730 --> 00:20:01,200
aren't a lot of scale<font color="#CCCCCC"> so they would just</font>

592
00:19:59,100 --> 00:20:02,939
<font color="#E5E5E5">draw all the resting all the rest of the</font>

593
00:20:01,200 --> 00:20:05,790
chart<font color="#CCCCCC"> another</font><font color="#E5E5E5"> one if I</font><font color="#CCCCCC"> sit and separate</font>

594
00:20:02,940 --> 00:20:09,900
them<font color="#E5E5E5"> out one thing to mention here</font><font color="#CCCCCC"> is</font>

595
00:20:05,790 --> 00:20:11,850
<font color="#CCCCCC">that the move</font><font color="#E5E5E5"> NTD QA and the not</font><font color="#CCCCCC"> a1 are</font>

596
00:20:09,900 --> 00:20:13,500
basically<font color="#E5E5E5"> they're</font><font color="#CCCCCC"> not they're not</font>

597
00:20:11,850 --> 00:20:15,179
actually being<font color="#E5E5E5"> trapped exactly as</font>

598
00:20:13,500 --> 00:20:16,680
instruction<font color="#E5E5E5"> itself they're being trapped</font>

599
00:20:15,180 --> 00:20:18,420
<font color="#E5E5E5">when they were they access memory these</font>

600
00:20:16,680 --> 00:20:19,860
are<font color="#CCCCCC"> non temporal instruction</font><font color="#E5E5E5"> I just put</font>

601
00:20:18,420 --> 00:20:22,140
them<font color="#E5E5E5"> here to kind of keep</font><font color="#CCCCCC"> everything</font>

602
00:20:19,860 --> 00:20:23,760
together<font color="#E5E5E5"> again you can see that this is</font>

603
00:20:22,140 --> 00:20:27,090
the instruction timing case<font color="#E5E5E5"> the results</font>

604
00:20:23,760 --> 00:20:28,710
are pretty<font color="#CCCCCC"> similar between the two</font><font color="#E5E5E5"> so</font>

605
00:20:27,090 --> 00:20:30,209
right<font color="#E5E5E5"> I mean it should be</font><font color="#CCCCCC"> pretty</font>

606
00:20:28,710 --> 00:20:31,350
apparent that<font color="#E5E5E5"> a hypervisor that was</font>

607
00:20:30,210 --> 00:20:33,990
benign wouldn't do this for<font color="#CCCCCC"> y'all</font>

608
00:20:31,350 --> 00:20:35,550
<font color="#E5E5E5">because this would take a pretty a</font>

609
00:20:33,990 --> 00:20:37,590
pretty substantial<font color="#CCCCCC"> workload away and it</font>

610
00:20:35,550 --> 00:20:40,470
only<font color="#E5E5E5"> only only a really dedicated</font>

611
00:20:37,590 --> 00:20:41,820
hypervisor<font color="#CCCCCC"> wanna do that so this is the</font>

612
00:20:40,470 --> 00:20:43,620
echo memory intercession

613
00:20:41,820 --> 00:20:46,560
we're just<font color="#E5E5E5"> trapping we're just</font><font color="#CCCCCC"> showing</font>

614
00:20:43,620 --> 00:20:48,090
different pages<font color="#E5E5E5"> and and and and you can</font>

615
00:20:46,560 --> 00:20:50,070
probably<font color="#E5E5E5"> tell which one is the one that</font>

616
00:20:48,090 --> 00:20:53,040
<font color="#CCCCCC">in</font><font color="#E5E5E5"> trapped in this case again this is</font>

617
00:20:50,070 --> 00:20:55,230
log scale so obviously<font color="#E5E5E5"> the port offset</font>

618
00:20:53,040 --> 00:20:56,490
is getting<font color="#E5E5E5"> trapped and it's getting</font>

619
00:20:55,230 --> 00:20:59,910
<font color="#CCCCCC">occurring a pretty substantial overhead</font>

620
00:20:56,490 --> 00:21:00,930
over all right<font color="#E5E5E5"> so</font><font color="#CCCCCC"> again</font><font color="#E5E5E5"> a hypervisor</font>

621
00:20:59,910 --> 00:21:02,750
probably won't want<font color="#CCCCCC"> to do this very</font>

622
00:21:00,930 --> 00:21:05,760
often

623
00:21:02,750 --> 00:21:07,590
now<font color="#CCCCCC"> passive mappings are again mapping</font>

624
00:21:05,760 --> 00:21:09,840
in from<font color="#E5E5E5"> outside to guest right so this</font>

625
00:21:07,590 --> 00:21:12,300
<font color="#CCCCCC">is a more stealthy way to do things and</font>

626
00:21:09,840 --> 00:21:15,810
these<font color="#E5E5E5"> are</font><font color="#CCCCCC"> this is measuring for specific</font>

627
00:21:12,300 --> 00:21:17,730
cache lines so we can<font color="#CCCCCC"> measure down</font><font color="#E5E5E5"> to a</font>

628
00:21:15,810 --> 00:21:19,649
<font color="#E5E5E5">resolution of 64 bytes which is the</font>

629
00:21:17,730 --> 00:21:22,200
<font color="#E5E5E5">length of the cache line itself so in</font>

630
00:21:19,650 --> 00:21:25,500
this case we're intersecting on memory

631
00:21:22,200 --> 00:21:27,570
at offset<font color="#CCCCCC"> 80</font><font color="#E5E5E5"> so that one is you know</font>

632
00:21:25,500 --> 00:21:29,820
showing<font color="#E5E5E5"> the lowest timing now there's</font>

633
00:21:27,570 --> 00:21:31,889
the two memory areas adjacent to it are

634
00:21:29,820 --> 00:21:34,110
a bit lower<font color="#E5E5E5"> and the reason for that is</font>

635
00:21:31,890 --> 00:21:34,950
<font color="#CCCCCC">that the prefetcher is pretty can that</font>

636
00:21:34,110 --> 00:21:37,260
we're going<font color="#E5E5E5"> to be accessed in that</font>

637
00:21:34,950 --> 00:21:38,490
memory in this case it was wrong but<font color="#CCCCCC"> you</font>

638
00:21:37,260 --> 00:21:40,590
<font color="#CCCCCC">know</font><font color="#E5E5E5"> until it's trying to help us out</font>

639
00:21:38,490 --> 00:21:44,100
<font color="#CCCCCC">you can kind of see the sinkhole</font><font color="#E5E5E5"> design</font>

640
00:21:40,590 --> 00:21:46,709
that's that's supposed<font color="#E5E5E5"> to happen right</font>

641
00:21:44,100 --> 00:21:48,240
<font color="#CCCCCC">so you know again you can see</font><font color="#E5E5E5"> that this</font>

642
00:21:46,710 --> 00:21:49,440
<font color="#E5E5E5">these kind of operations will definitely</font>

643
00:21:48,240 --> 00:21:52,320
<font color="#E5E5E5">affect the cash</font><font color="#CCCCCC"> we use that to our</font>

644
00:21:49,440 --> 00:21:53,880
advantage<font color="#E5E5E5"> so there's much of</font><font color="#CCCCCC"> other work</font>

645
00:21:52,320 --> 00:21:55,679
<font color="#CCCCCC">that could</font><font color="#E5E5E5"> be</font><font color="#CCCCCC"> done for this this was</font>

646
00:21:53,880 --> 00:21:57,770
sort of our initial look<font color="#E5E5E5"> to see how much</font>

647
00:21:55,680 --> 00:21:59,670
we<font color="#E5E5E5"> can get away with when we do this we</font>

648
00:21:57,770 --> 00:22:02,639
would look to do like a continuous

649
00:21:59,670 --> 00:22:04,080
detection environment to actually<font color="#E5E5E5"> you</font>

650
00:22:02,640 --> 00:22:06,809
<font color="#E5E5E5">know tech memory areas that</font><font color="#CCCCCC"> ensure</font>

651
00:22:04,080 --> 00:22:09,029
that are of high<font color="#CCCCCC"> value more robust</font>

652
00:22:06,809 --> 00:22:10,860
classification could be used that sort

653
00:22:09,029 --> 00:22:12,929
<font color="#CCCCCC">of thing as well as a response strategy</font>

654
00:22:10,860 --> 00:22:16,830
to say like well you know when<font color="#E5E5E5"> you're</font>

655
00:22:12,929 --> 00:22:18,630
being introspective on do you do you you

656
00:22:16,830 --> 00:22:20,070
smash everything<font color="#E5E5E5"> and run</font><font color="#CCCCCC"> away</font><font color="#E5E5E5"> or do you</font>

657
00:22:18,630 --> 00:22:22,470
play along and not give away<font color="#E5E5E5"> that you</font>

658
00:22:20,070 --> 00:22:24,899
know<font color="#CCCCCC"> that something's</font><font color="#E5E5E5"> going on</font><font color="#CCCCCC"> now I</font>

659
00:22:22,470 --> 00:22:26,130
want to<font color="#E5E5E5"> jump</font><font color="#CCCCCC"> into a bit of a bit</font><font color="#E5E5E5"> of</font>

660
00:22:24,899 --> 00:22:30,539
background on things I can<font color="#E5E5E5"> make this</font>

661
00:22:26,130 --> 00:22:33,179
easier<font color="#CCCCCC"> and</font><font color="#E5E5E5"> end or harder for for</font><font color="#CCCCCC"> for</font>

662
00:22:30,539 --> 00:22:34,769
<font color="#E5E5E5">detection mechanisms so these are the</font>

663
00:22:33,179 --> 00:22:36,990
different guest modes that you can they

664
00:22:34,769 --> 00:22:38,940
<font color="#E5E5E5">can use when you are when</font><font color="#CCCCCC"> you're</font>

665
00:22:36,990 --> 00:22:42,870
<font color="#CCCCCC">launching guests right so we were using</font>

666
00:22:38,940 --> 00:22:44,880
hardware the hardware<font color="#E5E5E5"> hardware</font><font color="#CCCCCC"> HBM guest</font>

667
00:22:42,870 --> 00:22:46,168
when we were when<font color="#E5E5E5"> you're</font><font color="#CCCCCC"> running is so</font>

668
00:22:44,880 --> 00:22:47,730
there's a whole<font color="#CCCCCC"> bunch of different ways</font>

669
00:22:46,169 --> 00:22:50,490
<font color="#CCCCCC">to do this though right so you can run a</font>

670
00:22:47,730 --> 00:22:51,779
pair of virtualized guest<font color="#CCCCCC"> aka PV guest</font>

671
00:22:50,490 --> 00:22:53,940
<font color="#E5E5E5">which doesn't have any kind</font><font color="#CCCCCC"> of</font><font color="#E5E5E5"> hardware</font>

672
00:22:51,779 --> 00:22:56,519
support so when we do this we use<font color="#CCCCCC"> BT X</font>

673
00:22:53,940 --> 00:22:57,600
<font color="#E5E5E5">right the virtualization extension</font><font color="#CCCCCC"> but</font>

674
00:22:56,519 --> 00:22:59,100
you can run<font color="#E5E5E5"> this straight in the</font>

675
00:22:57,600 --> 00:23:00,178
<font color="#E5E5E5">software now the benefit</font><font color="#CCCCCC"> of doing</font><font color="#E5E5E5"> that</font>

676
00:22:59,100 --> 00:23:02,100
<font color="#E5E5E5">and the software is that</font><font color="#CCCCCC"> it's usually</font>

677
00:23:00,179 --> 00:23:04,919
cheaper<font color="#CCCCCC"> like</font><font color="#E5E5E5"> fewer dollars to do this</font>

678
00:23:02,100 --> 00:23:06,928
but<font color="#E5E5E5"> normal don't be as good and also the</font>

679
00:23:04,919 --> 00:23:09,179
<font color="#E5E5E5">address space is shared across the</font>

680
00:23:06,929 --> 00:23:11,340
hypervisor<font color="#E5E5E5"> and the guest which is not</font>

681
00:23:09,179 --> 00:23:15,000
really<font color="#CCCCCC"> the</font><font color="#E5E5E5"> greatest security personally</font>

682
00:23:11,340 --> 00:23:17,039
if you ask me<font color="#E5E5E5"> so we use h vm h vm</font><font color="#CCCCCC"> has</font>

683
00:23:15,000 --> 00:23:18,570
support virtualization extensions<font color="#E5E5E5"> so we</font>

684
00:23:17,039 --> 00:23:21,629
can do a lot of the<font color="#E5E5E5"> operations that we</font>

685
00:23:18,570 --> 00:23:23,789
<font color="#E5E5E5">were talking</font><font color="#CCCCCC"> about however h vm uses q</font>

686
00:23:21,630 --> 00:23:26,340
<font color="#CCCCCC">mu</font><font color="#E5E5E5"> emulation for device interfacing</font>

687
00:23:23,789 --> 00:23:28,529
right so<font color="#CCCCCC"> think about accessing your NIC</font>

688
00:23:26,340 --> 00:23:30,299
for example<font color="#E5E5E5"> it's going</font><font color="#CCCCCC"> to be using Q</font><font color="#E5E5E5"> mu</font>

689
00:23:28,529 --> 00:23:32,039
the consequence<font color="#E5E5E5"> of using that is</font>

690
00:23:30,299 --> 00:23:33,210
probably performance but<font color="#CCCCCC"> also that you</font>

691
00:23:32,039 --> 00:23:35,220
know<font color="#E5E5E5"> any kind of</font><font color="#CCCCCC"> vulnerabilities at</font>

692
00:23:33,210 --> 00:23:37,230
<font color="#CCCCCC">Combe you</font><font color="#E5E5E5"> may suffer</font><font color="#CCCCCC"> from you'll</font>

693
00:23:35,220 --> 00:23:40,139
probably<font color="#CCCCCC"> suffering from too</font><font color="#E5E5E5"> I don't</font>

694
00:23:37,230 --> 00:23:41,730
<font color="#CCCCCC">really know how secure</font><font color="#E5E5E5"> how good a cue</font>

695
00:23:40,139 --> 00:23:43,979
music<font color="#E5E5E5"> code bases and I never looked</font><font color="#CCCCCC"> it</font>

696
00:23:41,730 --> 00:23:46,409
up on exploit<font color="#CCCCCC"> DB but you know it's just</font>

697
00:23:43,980 --> 00:23:49,769
something<font color="#E5E5E5"> to consider</font><font color="#CCCCCC"> PVH is kind of a</font>

698
00:23:46,409 --> 00:23:51,419
shiny new guest mode that's a sort of a

699
00:23:49,769 --> 00:23:54,269
combination<font color="#E5E5E5"> of different</font><font color="#CCCCCC"> of different</font>

700
00:23:51,419 --> 00:23:55,500
<font color="#E5E5E5">guest modes but basically it's using</font><font color="#CCCCCC"> bt</font>

701
00:23:54,269 --> 00:23:58,830
<font color="#CCCCCC">d which i'll talk about</font><font color="#E5E5E5"> in the</font><font color="#CCCCCC"> next</font>

702
00:23:55,500 --> 00:24:01,500
slide<font color="#CCCCCC"> and</font><font color="#E5E5E5"> it it avoids and thus avoiding</font>

703
00:23:58,830 --> 00:24:02,760
the<font color="#CCCCCC"> use of</font><font color="#E5E5E5"> um you so it should offer</font>

704
00:24:01,500 --> 00:24:05,750
some performance improvement security

705
00:24:02,760 --> 00:24:08,429
improvement of thing now<font color="#CCCCCC"> vtd</font><font color="#E5E5E5"> is</font>

706
00:24:05,750 --> 00:24:09,870
basically allowing the devices to

707
00:24:08,429 --> 00:24:13,139
interface directly<font color="#E5E5E5"> with your main memory</font>

708
00:24:09,870 --> 00:24:14,760
so your typical<font color="#CCCCCC"> CPU has an MMU right a</font>

709
00:24:13,139 --> 00:24:16,949
memory<font color="#E5E5E5"> management unit that does the</font>

710
00:24:14,760 --> 00:24:17,790
virtual<font color="#CCCCCC"> translations for you</font>

711
00:24:16,950 --> 00:24:19,380
for

712
00:24:17,790 --> 00:24:21,750
you know operations<font color="#E5E5E5"> that run through the</font>

713
00:24:19,380 --> 00:24:23,280
<font color="#CCCCCC">cpu devices have kind of</font><font color="#E5E5E5"> the same</font><font color="#CCCCCC"> thing</font>

714
00:24:21,750 --> 00:24:24,420
right<font color="#E5E5E5"> they have device addresses and</font>

715
00:24:23,280 --> 00:24:27,480
they need to be able<font color="#E5E5E5"> to store things in</font>

716
00:24:24,420 --> 00:24:30,210
<font color="#CCCCCC">memory sometimes</font><font color="#E5E5E5"> so they use iommu do</font>

717
00:24:27,480 --> 00:24:33,180
that<font color="#E5E5E5"> it's best they</font><font color="#CCCCCC"> can store things</font><font color="#E5E5E5"> in</font>

718
00:24:30,210 --> 00:24:34,590
main memory<font color="#E5E5E5"> no this kind</font><font color="#CCCCCC"> of opens up an</font>

719
00:24:33,180 --> 00:24:36,780
interesting door<font color="#E5E5E5"> if you have a rogue</font>

720
00:24:34,590 --> 00:24:39,510
device that interfaces with your main

721
00:24:36,780 --> 00:24:41,070
<font color="#E5E5E5">memory whether</font><font color="#CCCCCC"> it's</font><font color="#E5E5E5"> rogue</font><font color="#CCCCCC"> because it's</font>

722
00:24:39,510 --> 00:24:43,650
just fully designed<font color="#E5E5E5"> is maliciously</font>

723
00:24:41,070 --> 00:24:45,270
designed or because it just has bad

724
00:24:43,650 --> 00:24:47,670
drivers or whatever also the reason is

725
00:24:45,270 --> 00:24:49,800
could<font color="#E5E5E5"> it could it manipulate your memory</font>

726
00:24:47,670 --> 00:24:51,810
and cause<font color="#E5E5E5"> explication or system I'm not</font>

727
00:24:49,800 --> 00:24:53,129
saying this has been happening<font color="#CCCCCC"> but it</font>

728
00:24:51,810 --> 00:24:54,030
would<font color="#E5E5E5"> make a</font><font color="#CCCCCC"> fantastic conference talk</font>

729
00:24:53,130 --> 00:24:56,490
if someone's point something out about

730
00:24:54,030 --> 00:24:59,639
that but you<font color="#E5E5E5"> know it's just something</font><font color="#CCCCCC"> to</font>

731
00:24:56,490 --> 00:25:01,920
<font color="#E5E5E5">keep on the radar some other some</font><font color="#CCCCCC"> other</font>

732
00:24:59,640 --> 00:25:03,870
technologies<font color="#CCCCCC"> that are</font><font color="#E5E5E5"> out now including</font>

733
00:25:01,920 --> 00:25:06,480
virtualization exceptions so when we

734
00:25:03,870 --> 00:25:07,949
access when we<font color="#CCCCCC"> methylate memory we're</font>

735
00:25:06,480 --> 00:25:11,160
using<font color="#E5E5E5"> the</font><font color="#CCCCCC"> vm exit</font><font color="#E5E5E5"> right it's a full</font>

736
00:25:07,950 --> 00:25:12,840
world switch but there's another another

737
00:25:11,160 --> 00:25:15,330
way to do this<font color="#CCCCCC"> including</font><font color="#E5E5E5"> using</font>

738
00:25:12,840 --> 00:25:17,310
virtualization exceptions<font color="#CCCCCC"> which if you</font>

739
00:25:15,330 --> 00:25:20,490
think<font color="#E5E5E5"> about like let's say you look</font><font color="#CCCCCC"> on</font>

740
00:25:17,310 --> 00:25:21,990
the<font color="#CCCCCC"> Python try/except</font><font color="#E5E5E5"> block</font><font color="#CCCCCC"> you</font>

741
00:25:20,490 --> 00:25:23,520
<font color="#E5E5E5">basically have your code running and</font>

742
00:25:21,990 --> 00:25:25,170
then if something something goes wrong

743
00:25:23,520 --> 00:25:26,430
there's an exception<font color="#CCCCCC"> if there was a</font>

744
00:25:25,170 --> 00:25:28,200
exception you jump to and you handle

745
00:25:26,430 --> 00:25:30,330
<font color="#CCCCCC">whatever is</font><font color="#E5E5E5"> in the exception so it's the</font>

746
00:25:28,200 --> 00:25:32,640
same<font color="#E5E5E5"> kind of thing here which</font><font color="#CCCCCC"> basically</font>

747
00:25:30,330 --> 00:25:34,860
means<font color="#CCCCCC"> that it's a</font><font color="#E5E5E5"> little</font><font color="#CCCCCC"> bit</font><font color="#E5E5E5"> it's</font><font color="#CCCCCC"> not as</font>

748
00:25:32,640 --> 00:25:36,450
it's<font color="#E5E5E5"> not as quiet</font><font color="#CCCCCC"> because the hypervisor</font>

749
00:25:34,860 --> 00:25:38,129
needs to actually<font color="#CCCCCC"> embed the</font>

750
00:25:36,450 --> 00:25:39,630
virtualization exceptions<font color="#E5E5E5"> into the guest</font>

751
00:25:38,130 --> 00:25:40,950
<font color="#E5E5E5">right so the guest needs to be able to</font>

752
00:25:39,630 --> 00:25:42,720
<font color="#E5E5E5">see it so if you're going to do</font>

753
00:25:40,950 --> 00:25:45,750
something<font color="#E5E5E5"> this you have about 10x less</font>

754
00:25:42,720 --> 00:25:47,400
overhead<font color="#E5E5E5"> but the guest will will have to</font>

755
00:25:45,750 --> 00:25:48,360
be<font color="#E5E5E5"> aware of it whether how the guest is</font>

756
00:25:47,400 --> 00:25:51,570
actually<font color="#E5E5E5"> checking for</font><font color="#CCCCCC"> the different</font>

757
00:25:48,360 --> 00:25:53,939
stories<font color="#E5E5E5"> so it just depends on how how</font>

758
00:25:51,570 --> 00:25:58,830
good<font color="#E5E5E5"> you are engaging your your your</font>

759
00:25:53,940 --> 00:26:01,920
<font color="#CCCCCC">guest</font><font color="#E5E5E5"> so one of the other cache attacks</font>

760
00:25:58,830 --> 00:26:04,860
that<font color="#E5E5E5"> I set out to talk</font><font color="#CCCCCC"> about is the is</font>

761
00:26:01,920 --> 00:26:09,360
the<font color="#CCCCCC"> primer board and there's also a more</font>

762
00:26:04,860 --> 00:26:11,760
naive<font color="#E5E5E5"> PSX based technique so this uses a</font>

763
00:26:09,360 --> 00:26:14,040
hardware<font color="#E5E5E5"> callback instead of instead of</font>

764
00:26:11,760 --> 00:26:16,950
<font color="#E5E5E5">using the timer so when I talked about</font><font color="#CCCCCC"> +</font>

765
00:26:14,040 --> 00:26:18,420
reload before + reload relies on timers

766
00:26:16,950 --> 00:26:21,090
right so there's a lot of possibility

767
00:26:18,420 --> 00:26:24,030
for<font color="#E5E5E5"> noise to</font><font color="#CCCCCC"> hinder the system from</font>

768
00:26:21,090 --> 00:26:26,370
<font color="#E5E5E5">other guests or whatever else</font><font color="#CCCCCC"> tsx</font><font color="#E5E5E5"> is a</font>

769
00:26:24,030 --> 00:26:28,710
technique is a<font color="#CCCCCC"> technique for</font>

770
00:26:26,370 --> 00:26:29,250
<font color="#E5E5E5">transactional memory so</font><font color="#CCCCCC"> t6 enables the</font>

771
00:26:28,710 --> 00:26:31,110
the

772
00:26:29,250 --> 00:26:33,080
<font color="#E5E5E5">the capabilities</font><font color="#CCCCCC"> has actual</font><font color="#E5E5E5"> memory on</font>

773
00:26:31,110 --> 00:26:35,969
the processor<font color="#CCCCCC"> it basically allows</font>

774
00:26:33,080 --> 00:26:37,649
multiple threats to be<font color="#E5E5E5"> running without</font>

775
00:26:35,970 --> 00:26:39,180
<font color="#E5E5E5">actually</font><font color="#CCCCCC"> needing to be serialized so</font>

776
00:26:37,650 --> 00:26:40,080
usually he had the whole<font color="#CCCCCC"> thing with</font>

777
00:26:39,180 --> 00:26:41,910
critical regions

778
00:26:40,080 --> 00:26:43,320
<font color="#E5E5E5">I would only run one per that time until</font>

779
00:26:41,910 --> 00:26:46,590
got out of the critical region<font color="#E5E5E5"> but this</font>

780
00:26:43,320 --> 00:26:47,760
basically<font color="#E5E5E5"> allows you to run run your</font>

781
00:26:46,590 --> 00:26:50,790
multiple threads<font color="#CCCCCC"> and the only cousin</font>

782
00:26:47,760 --> 00:26:53,610
<font color="#E5E5E5">abort or prevent a</font><font color="#CCCCCC"> write-back whenever</font>

783
00:26:50,790 --> 00:26:55,770
it detects the conflict<font color="#E5E5E5"> so prime abort</font>

784
00:26:53,610 --> 00:26:58,350
was an attack that<font color="#E5E5E5"> was found last</font><font color="#CCCCCC"> year</font>

785
00:26:55,770 --> 00:26:59,639
and presented a<font color="#CCCCCC"> USENIX</font><font color="#E5E5E5"> and basically</font>

786
00:26:58,350 --> 00:27:01,709
just<font color="#E5E5E5"> allows that Hardware</font><font color="#CCCCCC"> callback</font>

787
00:26:59,640 --> 00:27:04,380
instead right so you can you can<font color="#E5E5E5"> mark</font>

788
00:27:01,710 --> 00:27:05,670
memory<font color="#E5E5E5"> and</font><font color="#CCCCCC"> just wait for</font><font color="#E5E5E5"> like the memory</font>

789
00:27:04,380 --> 00:27:07,920
to be accessed<font color="#E5E5E5"> and then it'll</font><font color="#CCCCCC"> just cause</font>

790
00:27:05,670 --> 00:27:10,170
a hardware<font color="#E5E5E5"> callback so it</font><font color="#CCCCCC"> causes it</font>

791
00:27:07,920 --> 00:27:12,750
opens up a lot<font color="#CCCCCC"> of doors</font><font color="#E5E5E5"> in terms of</font>

792
00:27:10,170 --> 00:27:14,580
<font color="#E5E5E5">robustness it reduces noise issues and</font>

793
00:27:12,750 --> 00:27:16,950
<font color="#E5E5E5">that kind of thing prior</font><font color="#CCCCCC"> bort</font><font color="#E5E5E5"> relies on</font>

794
00:27:14,580 --> 00:27:18,780
addiction<font color="#CCCCCC"> sets whereas a more naive</font>

795
00:27:16,950 --> 00:27:20,510
technique can use just<font color="#E5E5E5"> shared memory so</font>

796
00:27:18,780 --> 00:27:23,250
you<font color="#E5E5E5"> can</font><font color="#CCCCCC"> basically just</font><font color="#E5E5E5"> say you know</font>

797
00:27:20,510 --> 00:27:27,570
<font color="#E5E5E5">housing abort whenever the shared</font>

798
00:27:23,250 --> 00:27:29,850
<font color="#CCCCCC">memories access another thing that's on</font>

799
00:27:27,570 --> 00:27:31,950
the<font color="#CCCCCC"> horizon from</font><font color="#E5E5E5"> Intel is a</font><font color="#CCCCCC"> subpage</font>

800
00:27:29,850 --> 00:27:33,600
<font color="#CCCCCC">permissions so that basically allows you</font>

801
00:27:31,950 --> 00:27:36,810
to do memory<font color="#E5E5E5"> protection of much lower</font>

802
00:27:33,600 --> 00:27:38,939
granularity<font color="#E5E5E5"> so when we were</font><font color="#CCCCCC"> marking</font>

803
00:27:36,810 --> 00:27:40,470
pages to exit before<font color="#E5E5E5"> right remember</font><font color="#CCCCCC"> I</font>

804
00:27:38,940 --> 00:27:42,600
was mentioning<font color="#CCCCCC"> that a page can be marked</font>

805
00:27:40,470 --> 00:27:45,900
have different<font color="#CCCCCC"> permissions</font><font color="#E5E5E5"> caused access</font>

806
00:27:42,600 --> 00:27:49,530
<font color="#CCCCCC">violation and then track back to</font><font color="#E5E5E5"> the</font><font color="#CCCCCC"> fed</font>

807
00:27:45,900 --> 00:27:51,720
back to<font color="#CCCCCC"> the</font><font color="#E5E5E5"> guest so intelligent working</font>

808
00:27:49,530 --> 00:27:53,160
on a way<font color="#CCCCCC"> to do this at at lower</font>

809
00:27:51,720 --> 00:27:55,830
granularity right so instead<font color="#CCCCCC"> of having</font>

810
00:27:53,160 --> 00:27:57,840
to trap a manipulative entire page it'll

811
00:27:55,830 --> 00:27:59,850
just trap<font color="#CCCCCC"> sub</font><font color="#E5E5E5"> pages right so your</font>

812
00:27:57,840 --> 00:28:03,360
typical page is<font color="#CCCCCC"> going to</font><font color="#E5E5E5"> be 4096 bytes</font>

813
00:27:59,850 --> 00:28:04,830
typically but let's say you can do do

814
00:28:03,360 --> 00:28:07,080
<font color="#E5E5E5">this out</font><font color="#CCCCCC"> of hard 28 by granularity so</font>

815
00:28:04,830 --> 00:28:09,300
<font color="#E5E5E5">instead of</font><font color="#CCCCCC"> checking every single</font><font color="#E5E5E5"> 4,000</font>

816
00:28:07,080 --> 00:28:11,909
honestly quite page<font color="#E5E5E5"> we can check we have</font>

817
00:28:09,300 --> 00:28:13,350
to check every 128 bytes<font color="#CCCCCC"> of</font><font color="#E5E5E5"> sub pages</font>

818
00:28:11,910 --> 00:28:15,540
right<font color="#E5E5E5"> so there's a lot more area for us</font>

819
00:28:13,350 --> 00:28:17,909
<font color="#E5E5E5">to cover physically 32 times in this</font>

820
00:28:15,540 --> 00:28:19,530
case now this is<font color="#E5E5E5"> still being worked on</font>

821
00:28:17,910 --> 00:28:23,070
<font color="#E5E5E5">it's not being it's not police recorded</font>

822
00:28:19,530 --> 00:28:26,129
right now<font color="#CCCCCC"> last</font><font color="#E5E5E5"> time I checked</font><font color="#CCCCCC"> I know</font><font color="#E5E5E5"> the</font>

823
00:28:23,070 --> 00:28:29,760
technology<font color="#E5E5E5"> is the Intel cache allocation</font>

824
00:28:26,130 --> 00:28:32,550
technology so<font color="#CCCCCC"> intel has released</font><font color="#E5E5E5"> this</font>

825
00:28:29,760 --> 00:28:33,570
poor generally very high-end CPUs<font color="#E5E5E5"> but</font>

826
00:28:32,550 --> 00:28:35,460
like your<font color="#E5E5E5"> laptop's not going to have</font>

827
00:28:33,570 --> 00:28:39,419
this<font color="#E5E5E5"> this exists on some of the really</font>

828
00:28:35,460 --> 00:28:41,190
ritzy<font color="#E5E5E5"> to young but this allows process</font>

829
00:28:39,420 --> 00:28:43,590
isolation<font color="#CCCCCC"> on the last</font><font color="#E5E5E5"> level cache the</font>

830
00:28:41,190 --> 00:28:45,870
less loCash<font color="#CCCCCC"> meaning Dale</font>

831
00:28:43,590 --> 00:28:47,399
so you can basically say this process is

832
00:28:45,870 --> 00:28:49,110
<font color="#E5E5E5">going</font><font color="#CCCCCC"> to</font><font color="#E5E5E5"> be in protected</font><font color="#CCCCCC"> hash phase</font><font color="#E5E5E5"> and</font>

833
00:28:47,400 --> 00:28:51,090
this process<font color="#E5E5E5"> is going to be in another</font>

834
00:28:49,110 --> 00:28:54,179
<font color="#E5E5E5">cache space</font><font color="#CCCCCC"> this would allow a lot</font><font color="#E5E5E5"> of</font>

835
00:28:51,090 --> 00:28:56,490
you know<font color="#E5E5E5"> cash conflicts inside channel</font>

836
00:28:54,180 --> 00:28:58,230
vulnerabilities<font color="#E5E5E5"> by preventing access of</font>

837
00:28:56,490 --> 00:29:00,510
different things to<font color="#E5E5E5"> different parts of</font>

838
00:28:58,230 --> 00:29:03,000
<font color="#E5E5E5">this hash again</font><font color="#CCCCCC"> your</font><font color="#E5E5E5"> laptop's not going</font>

839
00:29:00,510 --> 00:29:04,890
to have this on board<font color="#E5E5E5"> so you know in the</font>

840
00:29:03,000 --> 00:29:08,100
<font color="#CCCCCC">other issue with this is that</font><font color="#E5E5E5"> there's no</font>

841
00:29:04,890 --> 00:29:09,840
proof to<font color="#CCCCCC"> the guest that</font><font color="#E5E5E5"> this is actually</font>

842
00:29:08,100 --> 00:29:11,429
being enforced the only real<font color="#E5E5E5"> way that I</font>

843
00:29:09,840 --> 00:29:13,560
guess could prove<font color="#CCCCCC"> that this</font><font color="#E5E5E5"> is</font><font color="#CCCCCC"> being of</font>

844
00:29:11,430 --> 00:29:15,630
<font color="#CCCCCC">course is to attack itself</font><font color="#E5E5E5"> but then you</font>

845
00:29:13,560 --> 00:29:16,950
have an interesting<font color="#E5E5E5"> you know issue of</font>

846
00:29:15,630 --> 00:29:19,350
well you you<font color="#E5E5E5"> attack yourself in the</font>

847
00:29:16,950 --> 00:29:21,330
hypervisor was running<font color="#E5E5E5"> this at the time</font>

848
00:29:19,350 --> 00:29:22,709
<font color="#E5E5E5">you did that but maybe now it turned it</font>

849
00:29:21,330 --> 00:29:24,389
out<font color="#E5E5E5"> and you have no real way to</font><font color="#CCCCCC"> prove</font>

850
00:29:22,710 --> 00:29:25,710
<font color="#CCCCCC">isms to keep doing it and even then it's</font>

851
00:29:24,390 --> 00:29:27,390
kind of not<font color="#CCCCCC"> really clear that's</font><font color="#E5E5E5"> going to</font>

852
00:29:25,710 --> 00:29:29,310
<font color="#E5E5E5">work out so this is an interesting</font>

853
00:29:27,390 --> 00:29:30,420
technology<font color="#E5E5E5"> maybe they'll modify this in</font>

854
00:29:29,310 --> 00:29:34,730
a bit in the<font color="#CCCCCC"> future and then it will be</font>

855
00:29:30,420 --> 00:29:34,730
useful for for<font color="#E5E5E5"> this kind of stuff</font><font color="#CCCCCC"> so</font>

856
00:29:37,790 --> 00:29:45,240
<font color="#CCCCCC">five a little</font><font color="#E5E5E5"> paging is also an</font>

857
00:29:41,790 --> 00:29:47,550
<font color="#CCCCCC">up-and-coming thing so you know</font><font color="#E5E5E5"> as time</font>

858
00:29:45,240 --> 00:29:49,290
<font color="#E5E5E5">marches on people need more space</font><font color="#CCCCCC"> it</font>

859
00:29:47,550 --> 00:29:52,110
turns out that some that some people

860
00:29:49,290 --> 00:29:54,389
some some some you know systems<font color="#E5E5E5"> already</font>

861
00:29:52,110 --> 00:29:57,540
have are still already running<font color="#E5E5E5"> out</font><font color="#CCCCCC"> of</font>

862
00:29:54,390 --> 00:30:01,890
memory right so this<font color="#CCCCCC"> is a</font><font color="#E5E5E5"> diagram of a</font>

863
00:29:57,540 --> 00:30:04,830
four level paging<font color="#CCCCCC"> setup</font><font color="#E5E5E5"> and basically</font>

864
00:30:01,890 --> 00:30:07,920
the issue is that you know we have 256

865
00:30:04,830 --> 00:30:10,470
<font color="#CCCCCC">pity bytes of virtual address space but</font>

866
00:30:07,920 --> 00:30:11,850
that's not that's<font color="#E5E5E5"> not enough</font><font color="#CCCCCC"> for those</font>

867
00:30:10,470 --> 00:30:14,520
of us who<font color="#E5E5E5"> need more memory</font><font color="#CCCCCC"> in that</font>

868
00:30:11,850 --> 00:30:16,350
<font color="#CCCCCC">language</font><font color="#E5E5E5"> and I was totally me but you</font>

869
00:30:14,520 --> 00:30:19,620
know this so the 500 paging increases

870
00:30:16,350 --> 00:30:22,860
<font color="#E5E5E5">that to 128 provides a virtual address</font>

871
00:30:19,620 --> 00:30:24,810
<font color="#CCCCCC">space</font><font color="#E5E5E5"> and it increases the physical</font>

872
00:30:22,860 --> 00:30:27,090
<font color="#E5E5E5">address space from 64 kilobytes</font><font color="#CCCCCC"> to</font><font color="#E5E5E5"> 4</font>

873
00:30:24,810 --> 00:30:30,060
provides<font color="#E5E5E5"> they do this by inserting the</font>

874
00:30:27,090 --> 00:30:31,649
<font color="#E5E5E5">new level called</font><font color="#CCCCCC"> p4 D in between in</font>

875
00:30:30,060 --> 00:30:34,320
between the<font color="#CCCCCC"> PGD and the page upper</font>

876
00:30:31,650 --> 00:30:35,910
directory<font color="#CCCCCC"> now the consequence of doing</font>

877
00:30:34,320 --> 00:30:38,129
something<font color="#E5E5E5"> like</font><font color="#CCCCCC"> this is that</font><font color="#E5E5E5"> you</font><font color="#CCCCCC"> have</font>

878
00:30:35,910 --> 00:30:39,780
more address space now so when<font color="#E5E5E5"> you do an</font>

879
00:30:38,130 --> 00:30:42,300
eviction set and eviction set it relies

880
00:30:39,780 --> 00:30:44,310
on<font color="#E5E5E5"> you know finding an address</font><font color="#CCCCCC"> that</font>

881
00:30:42,300 --> 00:30:46,260
corresponds<font color="#E5E5E5"> to an area in the</font><font color="#CCCCCC"> cache</font>

882
00:30:44,310 --> 00:30:47,669
<font color="#E5E5E5">right so when you're</font><font color="#CCCCCC"> building the victim</font>

883
00:30:46,260 --> 00:30:49,350
<font color="#CCCCCC">set</font><font color="#E5E5E5"> you need to build up a set</font><font color="#CCCCCC"> of</font>

884
00:30:47,670 --> 00:30:50,940
<font color="#CCCCCC">addresses that</font><font color="#E5E5E5"> target the specific cache</font>

885
00:30:49,350 --> 00:30:52,770
lines are<font color="#E5E5E5"> you interested in and the</font>

886
00:30:50,940 --> 00:30:54,090
cache<font color="#CCCCCC"> that now</font><font color="#E5E5E5"> if you have more address</font>

887
00:30:52,770 --> 00:30:56,429
space<font color="#CCCCCC"> you have more addresses</font><font color="#E5E5E5"> to work</font>

888
00:30:54,090 --> 00:30:57,720
with so<font color="#CCCCCC"> that increases</font><font color="#E5E5E5"> the</font><font color="#CCCCCC"> the</font>

889
00:30:56,429 --> 00:30:59,159
<font color="#E5E5E5">lady for you to build an</font><font color="#CCCCCC"> addiction set</font>

890
00:30:57,720 --> 00:31:01,529
which is important for<font color="#E5E5E5"> a variety of</font>

891
00:30:59,159 --> 00:31:03,509
different cash attacks including<font color="#CCCCCC"> you</font>

892
00:31:01,529 --> 00:31:07,950
know prime prime and probe and the case

893
00:31:03,509 --> 00:31:09,299
of<font color="#CCCCCC"> Prime</font><font color="#E5E5E5"> aboard</font><font color="#CCCCCC"> is also important</font><font color="#E5E5E5"> so</font><font color="#CCCCCC"> the</font>

894
00:31:07,950 --> 00:31:12,809
one technology<font color="#CCCCCC"> that will help with</font><font color="#E5E5E5"> the</font>

895
00:31:09,299 --> 00:31:16,639
introspection<font color="#CCCCCC"> is</font><font color="#E5E5E5"> Intel SGX so Intel SGX</font>

896
00:31:12,809 --> 00:31:19,320
<font color="#E5E5E5">is a technology that will</font><font color="#CCCCCC"> allow you to</font>

897
00:31:16,639 --> 00:31:21,869
encapsulate your your your interesting

898
00:31:19,320 --> 00:31:23,039
data and<font color="#CCCCCC"> an enclave</font><font color="#E5E5E5"> right so you can</font>

899
00:31:21,869 --> 00:31:24,749
have<font color="#E5E5E5"> your</font><font color="#CCCCCC"> trusting the</font><font color="#E5E5E5"> pollinating</font>

900
00:31:23,039 --> 00:31:26,929
<font color="#E5E5E5">untrust</font><font color="#CCCCCC"> components sitting in</font><font color="#E5E5E5"> SGX</font><font color="#CCCCCC"> and</font>

901
00:31:24,749 --> 00:31:29,490
<font color="#CCCCCC">you have an a testable way to tell that</font>

902
00:31:26,929 --> 00:31:33,210
<font color="#E5E5E5">something is that your data is being</font>

903
00:31:29,490 --> 00:31:34,889
securely encapsulated in there<font color="#E5E5E5"> now this</font>

904
00:31:33,210 --> 00:31:36,330
usually<font color="#E5E5E5"> works except when</font><font color="#CCCCCC"> someone finds</font>

905
00:31:34,889 --> 00:31:39,629
a security vulnerability like poor

906
00:31:36,330 --> 00:31:40,769
shadow<font color="#CCCCCC"> poor shadow was using you know it</font>

907
00:31:39,629 --> 00:31:44,189
was it<font color="#CCCCCC"> was real to tell based on</font>

908
00:31:40,769 --> 00:31:46,230
prefetching behavior<font color="#E5E5E5"> that to drive you</font>

909
00:31:44,190 --> 00:31:49,440
know<font color="#CCCCCC"> private what should be private</font>

910
00:31:46,230 --> 00:31:50,999
information<font color="#E5E5E5"> so you know usually this</font>

911
00:31:49,440 --> 00:31:52,169
this this works until someone finds<font color="#E5E5E5"> of</font>

912
00:31:50,999 --> 00:31:54,480
vulnerability<font color="#E5E5E5"> but this is the one thing</font>

913
00:31:52,169 --> 00:31:56,129
<font color="#E5E5E5">that</font><font color="#CCCCCC"> is a testable right now that would</font>

914
00:31:54,480 --> 00:31:58,889
<font color="#E5E5E5">that helps with hypervisor introspection</font>

915
00:31:56,129 --> 00:32:00,570
<font color="#E5E5E5">security now one drawback for this for a</font>

916
00:31:58,889 --> 00:32:02,519
lot of organizations was that there was

917
00:32:00,570 --> 00:32:04,350
no offline support<font color="#E5E5E5"> for this right you</font>

918
00:32:02,519 --> 00:32:06,899
needed to have access to<font color="#CCCCCC"> Intel servers</font>

919
00:32:04,350 --> 00:32:08,969
to connect to connect<font color="#E5E5E5"> back to them now</font>

920
00:32:06,899 --> 00:32:09,928
<font color="#CCCCCC">as of August of</font><font color="#E5E5E5"> this year I think they</font>

921
00:32:08,970 --> 00:32:13,200
just<font color="#E5E5E5"> published this in the middle</font><font color="#CCCCCC"> of</font>

922
00:32:09,929 --> 00:32:15,330
<font color="#CCCCCC">August</font><font color="#E5E5E5"> they released the ECD SAS</font>

923
00:32:13,200 --> 00:32:16,499
attestation key<font color="#E5E5E5"> for offline support for</font>

924
00:32:15,330 --> 00:32:17,730
this so there's a lot<font color="#E5E5E5"> of customers out</font>

925
00:32:16,499 --> 00:32:18,740
<font color="#E5E5E5">there</font><font color="#CCCCCC"> just</font><font color="#E5E5E5"> don't connect their stuff to</font>

926
00:32:17,730 --> 00:32:21,179
the<font color="#E5E5E5"> cloud</font>

927
00:32:18,740 --> 00:32:24,240
touch they connect to<font color="#E5E5E5"> the internet so</font>

928
00:32:21,179 --> 00:32:26,070
this solves<font color="#E5E5E5"> that issue so I want</font><font color="#CCCCCC"> to want</font>

929
00:32:24,240 --> 00:32:29,909
<font color="#CCCCCC">to</font><font color="#E5E5E5"> run a demo really quick of how this</font>

930
00:32:26,070 --> 00:32:41,428
works<font color="#E5E5E5"> and it's a video</font><font color="#CCCCCC"> because I'm not</font>

931
00:32:29,909 --> 00:32:42,220
going<font color="#E5E5E5"> to do a live</font><font color="#CCCCCC"> demo because</font><font color="#E5E5E5"> okay so</font>

932
00:32:41,429 --> 00:32:44,620
on

933
00:32:42,220 --> 00:32:45,909
is gonna be your dumb<font color="#E5E5E5"> zero</font><font color="#CCCCCC"> oh that's</font>

934
00:32:44,620 --> 00:32:46,629
going<font color="#E5E5E5"> to be the privilege domain</font><font color="#CCCCCC"> and on</font>

935
00:32:45,909 --> 00:32:54,700
the right we're gonna have<font color="#CCCCCC"> our</font>

936
00:32:46,630 --> 00:32:55,929
<font color="#E5E5E5">uncluttered unprivileged domain so we're</font>

937
00:32:54,700 --> 00:32:59,650
going<font color="#CCCCCC"> to create our guests really</font><font color="#E5E5E5"> quick</font>

938
00:32:55,929 --> 00:33:00,730
<font color="#E5E5E5">and then access it so the first thing</font>

939
00:32:59,650 --> 00:33:02,679
we're doing<font color="#E5E5E5"> is creating it from the</font>

940
00:33:00,730 --> 00:33:09,010
<font color="#CCCCCC">configuration file that we have and then</font>

941
00:33:02,679 --> 00:33:10,210
kicking directly<font color="#E5E5E5"> out of the console so</font>

942
00:33:09,010 --> 00:33:12,809
<font color="#E5E5E5">you get to see a bunch of boot up which</font>

943
00:33:10,210 --> 00:33:12,809
is very<font color="#E5E5E5"> exciting</font>

944
00:33:18,390 --> 00:33:21,250
<font color="#CCCCCC">don't worry about it</font>

945
00:33:20,049 --> 00:33:30,610
I can tell you that<font color="#CCCCCC"> Network manager</font>

946
00:33:21,250 --> 00:33:32,650
started also<font color="#E5E5E5"> mine</font><font color="#CCCCCC"> I mean I guess I was</font>

947
00:33:30,610 --> 00:33:33,520
hoping<font color="#E5E5E5"> you</font><font color="#CCCCCC"> could read it but it'll be</font>

948
00:33:32,650 --> 00:33:37,539
<font color="#CCCCCC">cool</font>

949
00:33:33,520 --> 00:33:38,559
oh I thought you meant like<font color="#CCCCCC"> the actual</font>

950
00:33:37,539 --> 00:33:41,350
<font color="#CCCCCC">size of</font><font color="#E5E5E5"> the pack</font>

951
00:33:38,559 --> 00:33:45,129
oh no no I can confirm that<font color="#E5E5E5"> you bunch of</font>

952
00:33:41,350 --> 00:33:46,240
<font color="#CCCCCC">DEP included</font><font color="#E5E5E5"> yeah trust me actually</font><font color="#CCCCCC"> had</font>

953
00:33:45,130 --> 00:33:47,620
to<font color="#E5E5E5"> build this image myself because I</font>

954
00:33:46,240 --> 00:33:50,080
<font color="#E5E5E5">couldn't find Ubuntu image that directly</font>

955
00:33:47,620 --> 00:33:55,408
boots in to enter the terminal<font color="#CCCCCC"> as a live</font>

956
00:33:50,080 --> 00:33:58,120
image<font color="#E5E5E5"> I'm still kind of proud of myself</font>

957
00:33:55,409 --> 00:33:59,580
not really<font color="#CCCCCC"> okay so we're going to clone</font>

958
00:33:58,120 --> 00:34:01,840
the project into<font color="#E5E5E5"> our own</font><font color="#CCCCCC"> privilege guest</font>

959
00:33:59,580 --> 00:34:03,990
which we<font color="#CCCCCC"> just Association into by the</font>

960
00:34:01,840 --> 00:34:03,990
way

961
00:34:28,940 --> 00:34:32,090
<font color="#E5E5E5">okay so we're going to run the</font>

962
00:34:30,679 --> 00:34:33,500
<font color="#CCCCCC">construction timing</font><font color="#E5E5E5"> so again remember</font>

963
00:34:32,090 --> 00:34:35,630
all the instructions are showing you

964
00:34:33,500 --> 00:34:43,580
that we're testing<font color="#CCCCCC"> to see how long</font><font color="#E5E5E5"> it</font>

965
00:34:35,630 --> 00:34:46,700
<font color="#E5E5E5">takes</font><font color="#CCCCCC"> to run</font><font color="#E5E5E5"> okay</font><font color="#CCCCCC"> so there you</font><font color="#E5E5E5"> go</font>

966
00:34:43,580 --> 00:34:48,650
hopefully you can<font color="#E5E5E5"> read that but you can</font>

967
00:34:46,699 --> 00:34:51,080
<font color="#E5E5E5">basically see</font><font color="#CCCCCC"> the</font><font color="#E5E5E5"> while timing on the on</font>

968
00:34:48,650 --> 00:34:54,560
the<font color="#E5E5E5"> because it's kind of the</font><font color="#CCCCCC"> left-center</font>

969
00:34:51,080 --> 00:34:56,469
<font color="#E5E5E5">column that one shows the HP timer and</font>

970
00:34:54,560 --> 00:34:59,690
the other one is showing<font color="#E5E5E5"> the NOC timer</font>

971
00:34:56,469 --> 00:35:01,490
<font color="#E5E5E5">and so you can see also the flag whether</font>

972
00:34:59,690 --> 00:35:03,110
or not the missiles<font color="#CCCCCC"> pictures or not I</font>

973
00:35:01,490 --> 00:35:06,319
<font color="#E5E5E5">already see it right</font><font color="#CCCCCC"> there at the zero</font>

974
00:35:03,110 --> 00:35:08,270
<font color="#CCCCCC">that's</font><font color="#E5E5E5"> usually used for crypto and it's</font>

975
00:35:06,320 --> 00:35:09,830
showing<font color="#CCCCCC"> zero because the CPU that we're</font>

976
00:35:08,270 --> 00:35:19,700
testing<font color="#CCCCCC"> on in</font><font color="#E5E5E5"> this case is not supported</font>

977
00:35:09,830 --> 00:35:20,180
<font color="#E5E5E5">not does</font><font color="#CCCCCC"> not support our DC so now we</font>

978
00:35:19,700 --> 00:35:21,828
can

979
00:35:20,180 --> 00:35:25,098
whether or not<font color="#CCCCCC"> an</font><font color="#E5E5E5"> instruction</font><font color="#CCCCCC"> is going</font>

980
00:35:21,829 --> 00:35:29,510
<font color="#CCCCCC">to exit or not</font><font color="#E5E5E5"> using</font><font color="#CCCCCC"> our hyper call cool</font>

981
00:35:25,099 --> 00:35:30,890
on<font color="#CCCCCC"> but on the privilege domain so we're</font>

982
00:35:29,510 --> 00:35:32,569
<font color="#E5E5E5">going to modify the domain number really</font>

983
00:35:30,890 --> 00:35:35,058
quick we<font color="#CCCCCC"> need to get the domain</font><font color="#E5E5E5"> number</font>

984
00:35:32,569 --> 00:35:41,079
that is in assigns so that we<font color="#E5E5E5"> target the</font>

985
00:35:35,059 --> 00:35:41,079
correct domain so in that case is<font color="#E5E5E5"> five</font>

986
00:35:51,910 --> 00:36:02,839
all<font color="#E5E5E5"> right so let's change that and then</font>

987
00:36:01,760 --> 00:36:07,960
we're<font color="#E5E5E5"> going</font><font color="#CCCCCC"> to run it really quick to</font>

988
00:36:02,839 --> 00:36:11,029
have<font color="#E5E5E5"> the hyper call ten run it again and</font>

989
00:36:07,960 --> 00:36:13,069
<font color="#CCCCCC">so now you</font><font color="#E5E5E5"> can see that our DT is C and</font>

990
00:36:11,029 --> 00:36:15,200
our DP is CP substantially hard<font color="#CCCCCC"> timings</font>

991
00:36:13,069 --> 00:36:18,020
<font color="#CCCCCC">before if you can't read that we're</font>

992
00:36:15,200 --> 00:36:20,990
around 900 to 1100<font color="#E5E5E5"> for the two on the</font>

993
00:36:18,020 --> 00:36:23,750
<font color="#E5E5E5">wall timing and about</font><font color="#CCCCCC"> hunter dissipate</font>

994
00:36:20,990 --> 00:36:25,700
in 688<font color="#CCCCCC"> or the knob timing so now you're</font>

995
00:36:23,750 --> 00:36:26,930
at what<font color="#CCCCCC"> forty six thousand forty seven</font>

996
00:36:25,700 --> 00:36:28,578
thousand and then<font color="#E5E5E5"> eighteen thousand</font>

997
00:36:26,930 --> 00:36:35,538
eighteen<font color="#E5E5E5"> thousand so pretty substantial</font>

998
00:36:28,579 --> 00:36:37,420
increase so now we're<font color="#E5E5E5"> going</font><font color="#CCCCCC"> to turn on</font>

999
00:36:35,539 --> 00:36:41,299
<font color="#CCCCCC">our deer</font><font color="#E5E5E5"> and instead which is another</font>

1000
00:36:37,420 --> 00:36:42,380
<font color="#E5E5E5">crypto instruction now be interesting to</font>

1001
00:36:41,299 --> 00:36:44,240
manipulate crypto but<font color="#CCCCCC"> you can just</font>

1002
00:36:42,380 --> 00:36:45,770
nullify<font color="#CCCCCC"> it if you trap this instruction</font>

1003
00:36:44,240 --> 00:36:48,890
now that being said<font color="#E5E5E5"> you</font><font color="#CCCCCC"> could just</font>

1004
00:36:45,770 --> 00:36:51,230
access memory and<font color="#CCCCCC"> dork with your crypto</font>

1005
00:36:48,890 --> 00:36:56,480
that way but you know it's an

1006
00:36:51,230 --> 00:36:58,520
interesting<font color="#CCCCCC"> crowd so now you can see our</font>

1007
00:36:56,480 --> 00:36:59,660
<font color="#CCCCCC">tier and jump</font><font color="#E5E5E5"> before was</font><font color="#CCCCCC"> about eleven</font>

1008
00:36:58,520 --> 00:37:01,579
thousand and<font color="#E5E5E5"> forty five</font><font color="#CCCCCC"> hundred</font>

1009
00:36:59,660 --> 00:37:03,020
respectively<font color="#CCCCCC"> now it's forty five</font>

1010
00:37:01,579 --> 00:37:06,279
thousand something<font color="#E5E5E5"> a thousand</font>

1011
00:37:03,020 --> 00:37:11,130
<font color="#CCCCCC">respectively</font><font color="#E5E5E5"> and the tool flag it is</font>

1012
00:37:06,279 --> 00:37:12,300
suspicious so the non-temporal

1013
00:37:11,130 --> 00:37:15,000
those are the ones<font color="#CCCCCC"> that are at the very</font>

1014
00:37:12,300 --> 00:37:18,330
bottom and<font color="#CCCCCC"> move in</font><font color="#E5E5E5"> a</font><font color="#CCCCCC"> DQ a</font><font color="#E5E5E5"> and move in TD</font>

1015
00:37:15,000 --> 00:37:20,040
cubes so<font color="#E5E5E5"> we ran those and you can</font><font color="#CCCCCC"> see</font>

1016
00:37:18,330 --> 00:37:27,000
that they have<font color="#CCCCCC"> a</font><font color="#E5E5E5"> pretty low overhead</font>

1017
00:37:20,040 --> 00:37:29,040
<font color="#CCCCCC">when access memory so now we're going to</font>

1018
00:37:27,000 --> 00:37:43,200
<font color="#E5E5E5">use living in mind to trap on a page</font>

1019
00:37:29,040 --> 00:37:48,810
<font color="#CCCCCC">access so that's our our tool just</font>

1020
00:37:43,200 --> 00:37:51,109
allocated some virtual memory<font color="#E5E5E5"> pores and</font>

1021
00:37:48,810 --> 00:37:56,160
we're going to<font color="#E5E5E5"> use that</font><font color="#CCCCCC"> address on our</font>

1022
00:37:51,110 --> 00:37:58,470
<font color="#E5E5E5">on our daughters domain right so now</font>

1023
00:37:56,160 --> 00:38:00,660
we're traveling<font color="#E5E5E5"> on the page</font><font color="#CCCCCC"> access and</font>

1024
00:37:58,470 --> 00:38:03,390
you<font color="#E5E5E5"> can see the massive spike and timing</font>

1025
00:38:00,660 --> 00:38:06,600
right<font color="#E5E5E5"> so I went</font><font color="#CCCCCC"> through what is that yes</font>

1026
00:38:03,390 --> 00:38:08,970
<font color="#E5E5E5">six million</font><font color="#CCCCCC"> and then two million 1.5</font>

1027
00:38:06,600 --> 00:38:10,830
million<font color="#E5E5E5"> I'm an obstinate got flagged as</font>

1028
00:38:08,970 --> 00:38:23,160
difference anything like<font color="#CCCCCC"> 200-300</font>

1029
00:38:10,830 --> 00:38:25,620
<font color="#E5E5E5">something so we're going to</font><font color="#CCCCCC"> run the</font>

1030
00:38:23,160 --> 00:38:29,879
memory time<font color="#CCCCCC"> a</font><font color="#E5E5E5"> really quick so this is</font>

1031
00:38:25,620 --> 00:38:32,940
the active intercession right so we're

1032
00:38:29,880 --> 00:38:34,890
using<font color="#CCCCCC"> our</font><font color="#E5E5E5"> DT is</font><font color="#CCCCCC"> the TSC here to do</font>

1033
00:38:32,940 --> 00:38:36,330
<font color="#CCCCCC">Arctic timing so we can use the timings</font>

1034
00:38:34,890 --> 00:38:42,900
the instruction timing tool we used

1035
00:38:36,330 --> 00:38:45,290
before to to<font color="#CCCCCC"> do to verify that</font><font color="#E5E5E5"> the PSC</font>

1036
00:38:42,900 --> 00:38:47,130
is<font color="#CCCCCC"> okay he's a</font><font color="#E5E5E5"> TC hand will be</font>

1037
00:38:45,290 --> 00:38:49,110
manipulated pretty quickly by the

1038
00:38:47,130 --> 00:38:50,940
<font color="#E5E5E5">hypervisor so we need</font><font color="#CCCCCC"> a check to verify</font>

1039
00:38:49,110 --> 00:38:52,530
that<font color="#E5E5E5"> he had the</font><font color="#CCCCCC"> our</font><font color="#E5E5E5"> DTC instruction is</font>

1040
00:38:50,940 --> 00:38:53,730
fine and<font color="#E5E5E5"> we use it</font><font color="#CCCCCC"> to con memory</font>

1041
00:38:52,530 --> 00:38:56,430
<font color="#E5E5E5">accesses</font><font color="#CCCCCC"> so that's what's</font><font color="#E5E5E5"> happening here</font>

1042
00:38:53,730 --> 00:39:06,360
<font color="#E5E5E5">so we are allocating virtual memory</font>

1043
00:38:56,430 --> 00:39:08,160
again right and then<font color="#E5E5E5"> you can</font><font color="#CCCCCC"> see a</font>

1044
00:39:06,360 --> 00:39:10,680
pretty genuine expire on the first page

1045
00:39:08,160 --> 00:39:13,520
off at 85,000 instead of all the other

1046
00:39:10,680 --> 00:39:13,520
one finger on<font color="#E5E5E5"> 40</font>

1047
00:39:34,100 --> 00:39:37,230
<font color="#E5E5E5">all right so this is like</font><font color="#CCCCCC"> this is</font><font color="#E5E5E5"> the</font>

1048
00:39:36,180 --> 00:39:39,029
passive mapping timing

1049
00:39:37,230 --> 00:39:41,880
so we're basically<font color="#E5E5E5"> doing the</font><font color="#CCCCCC"> same you</font>

1050
00:39:39,030 --> 00:39:44,000
<font color="#CCCCCC">know</font><font color="#E5E5E5"> allocating memory again and these</font>

1051
00:39:41,880 --> 00:39:53,340
are the time results of again

1052
00:39:44,000 --> 00:39:54,360
<font color="#CCCCCC">alright so around 300 ish</font><font color="#E5E5E5"> alright so</font>

1053
00:39:53,340 --> 00:39:58,200
again let's just allocate some memory

1054
00:39:54,360 --> 00:40:01,460
and then this time<font color="#CCCCCC"> we'll run</font><font color="#E5E5E5"> it with the</font>

1055
00:39:58,200 --> 00:40:01,460
<font color="#E5E5E5">mapping happening on the</font><font color="#CCCCCC"> purpose tonight</font>

1056
00:40:10,610 --> 00:40:14,820
<font color="#CCCCCC">alright so you</font><font color="#E5E5E5"> can see the first offset</font>

1057
00:40:12,990 --> 00:40:17,640
is around 83 which is a lot<font color="#E5E5E5"> lower than</font>

1058
00:40:14,820 --> 00:40:19,560
<font color="#E5E5E5">the other one this is</font><font color="#CCCCCC"> a</font><font color="#E5E5E5"> little</font>

1059
00:40:17,640 --> 00:40:21,000
suspicious<font color="#E5E5E5"> again you can see</font><font color="#CCCCCC"> that you</font>

1060
00:40:19,560 --> 00:40:23,190
know the one nearby is a little bit

1061
00:40:21,000 --> 00:40:30,930
lower<font color="#E5E5E5"> - let's just do the prefetch for</font>

1062
00:40:23,190 --> 00:40:35,780
behavior so now we'll go after<font color="#E5E5E5"> a</font>

1063
00:40:30,930 --> 00:40:35,779
<font color="#E5E5E5">different offset</font><font color="#CCCCCC"> for posterity</font>

1064
00:40:54,060 --> 00:40:58,020
<font color="#CCCCCC">around offset 80</font><font color="#E5E5E5"> the values a bit lower</font>

1065
00:40:56,460 --> 00:41:01,020
<font color="#E5E5E5">another one next to</font><font color="#CCCCCC"> it</font><font color="#E5E5E5"> is also similarly</font>

1066
00:40:58,020 --> 00:41:02,400
low<font color="#E5E5E5"> but literally one tick lower so</font><font color="#CCCCCC"> that</font>

1067
00:41:01,020 --> 00:41:04,890
happens<font color="#CCCCCC"> sometimes it's just</font><font color="#E5E5E5"> the bigger</font>

1068
00:41:02,400 --> 00:41:06,810
the free<font color="#CCCCCC"> pressure it's just how</font><font color="#E5E5E5"> they can</font>

1069
00:41:04,890 --> 00:41:08,490
go so you know if you really want to be

1070
00:41:06,810 --> 00:41:10,140
<font color="#CCCCCC">sure you to run</font><font color="#E5E5E5"> this multiple</font><font color="#CCCCCC"> times and</font>

1071
00:41:08,490 --> 00:41:12,229
do some process isolation of that sort

1072
00:41:10,140 --> 00:41:12,230
of thing

1073
00:41:12,950 --> 00:41:16,460
all right one<font color="#E5E5E5"> more time</font>

1074
00:41:27,050 --> 00:41:48,180
<font color="#E5E5E5">all right so</font><font color="#CCCCCC"> 100 you can</font><font color="#E5E5E5"> see is a little</font>

1075
00:41:30,090 --> 00:41:50,490
<font color="#CCCCCC">tighter than I hate alright so the rest</font>

1076
00:41:48,180 --> 00:41:51,750
of<font color="#E5E5E5"> it is not really</font><font color="#CCCCCC"> terribly important</font>

1077
00:41:50,490 --> 00:41:53,549
<font color="#E5E5E5">we're just we have a way to output this</font>

1078
00:41:51,750 --> 00:41:56,060
hot<font color="#E5E5E5"> step to a CSV if you have some</font>

1079
00:41:53,550 --> 00:42:05,070
<font color="#E5E5E5">reason you want to use a CSV</font>

1080
00:41:56,060 --> 00:42:07,110
you know whatever<font color="#E5E5E5"> closer</font><font color="#CCCCCC"> about yeah very</font>

1081
00:42:05,070 --> 00:42:09,360
cutting let's see the speed right<font color="#E5E5E5"> okay</font>

1082
00:42:07,110 --> 00:42:16,470
um and<font color="#E5E5E5"> there's also a simple help menu</font>

1083
00:42:09,360 --> 00:42:25,260
in here<font color="#E5E5E5"> okay</font>

1084
00:42:16,470 --> 00:42:26,680
so what happened my<font color="#CCCCCC"> button hey back cool</font>

1085
00:42:25,260 --> 00:42:27,849
<font color="#CCCCCC">okay</font><font color="#E5E5E5"> so</font>

1086
00:42:26,680 --> 00:42:29,440
again we<font color="#E5E5E5"> just want to show that</font><font color="#CCCCCC"> this</font>

1087
00:42:27,849 --> 00:42:31,059
kind of thing is possible<font color="#CCCCCC"> we can detect</font>

1088
00:42:29,440 --> 00:42:32,589
instructions<font color="#E5E5E5"> being trapped and</font>

1089
00:42:31,059 --> 00:42:34,990
manipulated as well as active<font color="#E5E5E5"> and</font>

1090
00:42:32,589 --> 00:42:36,279
passive memory<font color="#CCCCCC"> there's some other work</font>

1091
00:42:34,990 --> 00:42:38,859
from memory operations<font color="#E5E5E5"> that would be</font>

1092
00:42:36,279 --> 00:42:41,079
helpful<font color="#E5E5E5"> in this case like isolating</font>

1093
00:42:38,859 --> 00:42:42,700
specific<font color="#E5E5E5"> processes and you know</font>

1094
00:42:41,079 --> 00:42:45,490
controlling<font color="#E5E5E5"> for the fact that you know</font>

1095
00:42:42,700 --> 00:42:46,960
after<font color="#CCCCCC"> the memory</font><font color="#E5E5E5"> active memory nurse</font>

1096
00:42:45,490 --> 00:42:48,430
<font color="#E5E5E5">session would</font><font color="#CCCCCC"> Rais timings</font><font color="#E5E5E5"> with</font><font color="#CCCCCC"> had some</font>

1097
00:42:46,960 --> 00:42:49,930
<font color="#E5E5E5">memory with lower timing so there's a</font>

1098
00:42:48,430 --> 00:42:51,519
bit of<font color="#E5E5E5"> equal cushioning to happen here</font>

1099
00:42:49,930 --> 00:42:54,788
<font color="#E5E5E5">some of the techniques I was talking</font>

1100
00:42:51,519 --> 00:42:57,129
about<font color="#CCCCCC"> would make this a bit easier</font><font color="#E5E5E5"> and</font>

1101
00:42:54,789 --> 00:42:59,740
in the future<font color="#CCCCCC"> they're apart a bit more</font>

1102
00:42:57,130 --> 00:43:00,640
work<font color="#E5E5E5"> but you know that's just these are</font>

1103
00:42:59,740 --> 00:43:02,589
these<font color="#CCCCCC"> are there's</font><font color="#E5E5E5"> always new</font><font color="#CCCCCC"> things</font>

1104
00:43:00,640 --> 00:43:04,450
<font color="#E5E5E5">coming out in this field so we're pretty</font>

1105
00:43:02,589 --> 00:43:05,769
<font color="#CCCCCC">excited about this</font><font color="#E5E5E5"> kind</font><font color="#CCCCCC"> of</font><font color="#E5E5E5"> stuff but</font><font color="#CCCCCC"> you</font>

1106
00:43:04,450 --> 00:43:07,210
<font color="#CCCCCC">know that would make some of</font><font color="#E5E5E5"> these some</font>

1107
00:43:05,769 --> 00:43:08,950
of<font color="#E5E5E5"> these things</font><font color="#CCCCCC"> are putting noise in</font>

1108
00:43:07,210 --> 00:43:11,079
like a passing memory situation<font color="#E5E5E5"> but</font>

1109
00:43:08,950 --> 00:43:12,399
easier to deal with<font color="#E5E5E5"> but again</font><font color="#CCCCCC"> we just</font>

1110
00:43:11,079 --> 00:43:15,490
<font color="#CCCCCC">want to show what the limitations are</font>

1111
00:43:12,400 --> 00:43:17,349
doing something<font color="#CCCCCC"> like this are so we've</font>

1112
00:43:15,490 --> 00:43:19,689
<font color="#CCCCCC">open-sourced all this work this is</font>

1113
00:43:17,349 --> 00:43:22,569
available<font color="#E5E5E5"> on github</font><font color="#CCCCCC"> these are the links</font>

1114
00:43:19,690 --> 00:43:25,269
<font color="#CCCCCC">so the toolkit</font><font color="#E5E5E5"> is here</font><font color="#CCCCCC"> and easy</font><font color="#E5E5E5"> our</font>

1115
00:43:22,569 --> 00:43:26,890
toolkit URL and the evil hypervisor<font color="#E5E5E5"> for</font>

1116
00:43:25,269 --> 00:43:29,258
those that<font color="#E5E5E5"> are so inclined is under the</font>

1117
00:43:26,890 --> 00:43:30,999
<font color="#E5E5E5">piece here I have a riser URL we also</font>

1118
00:43:29,259 --> 00:43:33,730
have a published white paper that's

1119
00:43:30,999 --> 00:43:37,930
<font color="#CCCCCC">linked on the on each of these github</font>

1120
00:43:33,730 --> 00:43:39,069
repos so feel free to feel free to go

1121
00:43:37,930 --> 00:43:41,230
ahead<font color="#E5E5E5"> and read that if I was to encode</font>

1122
00:43:39,069 --> 00:43:43,119
here and there's<font color="#E5E5E5"> nothing like</font><font color="#CCCCCC"> that but</font>

1123
00:43:41,230 --> 00:44:15,460
other<font color="#E5E5E5"> than that I want to open</font><font color="#CCCCCC"> up the</font>

1124
00:43:43,119 --> 00:44:18,339
<font color="#E5E5E5">floor for</font><font color="#CCCCCC"> questions thank you so you</font><font color="#E5E5E5"> are</font>

1125
00:44:15,460 --> 00:44:35,400
asking how to<font color="#CCCCCC"> tickle isn't</font><font color="#E5E5E5"> that a client</font>

1126
00:44:18,339 --> 00:44:37,569
is<font color="#E5E5E5"> trying to infiltrate it yep so not</font>

1127
00:44:35,400 --> 00:44:39,369
not<font color="#E5E5E5"> really because</font><font color="#CCCCCC"> a lot of</font><font color="#E5E5E5"> the</font>

1128
00:44:37,569 --> 00:44:40,480
techniques<font color="#CCCCCC"> I mean it's it's difficult</font>

1129
00:44:39,369 --> 00:44:43,570
right<font color="#E5E5E5"> like if you're running a</font>

1130
00:44:40,480 --> 00:44:44,980
if you're running<font color="#E5E5E5"> say a instruction</font>

1131
00:44:43,570 --> 00:44:46,180
timing thing when you're running two

1132
00:44:44,980 --> 00:44:48,010
different<font color="#E5E5E5"> threads and</font><font color="#CCCCCC"> one of them's just</font>

1133
00:44:46,180 --> 00:44:49,480
<font color="#E5E5E5">running knobs you</font><font color="#CCCCCC"> can run whatever</font><font color="#E5E5E5"> you</font>

1134
00:44:48,010 --> 00:44:50,680
want right<font color="#CCCCCC"> but you're just running</font>

1135
00:44:49,480 --> 00:44:52,000
instructions how are they going<font color="#E5E5E5"> to know</font>

1136
00:44:50,680 --> 00:44:53,529
<font color="#E5E5E5">that that's what you're doing</font><font color="#CCCCCC"> right</font>

1137
00:44:52,000 --> 00:44:54,940
<font color="#CCCCCC">especially since some of those</font>

1138
00:44:53,530 --> 00:44:56,710
<font color="#E5E5E5">instructions don't have hardware support</font>

1139
00:44:54,940 --> 00:44:58,210
to trap in the first<font color="#E5E5E5"> place so it's not</font>

1140
00:44:56,710 --> 00:44:59,680
really<font color="#E5E5E5"> way per than jump in and say like</font>

1141
00:44:58,210 --> 00:45:01,060
oh this<font color="#CCCCCC"> person's like</font><font color="#E5E5E5"> running with the</font>

1142
00:44:59,680 --> 00:45:01,960
<font color="#CCCCCC">Julian opps like they must</font><font color="#E5E5E5"> be going</font>

1143
00:45:01,060 --> 00:45:05,290
after<font color="#CCCCCC"> us and</font><font color="#E5E5E5"> you don't think worth</font>

1144
00:45:01,960 --> 00:45:06,369
changing<font color="#E5E5E5"> to</font><font color="#CCCCCC"> cannot be</font><font color="#E5E5E5"> now right so it's</font>

1145
00:45:05,290 --> 00:45:09,339
hard it's hard<font color="#E5E5E5"> for them to do something</font>

1146
00:45:06,369 --> 00:45:10,510
<font color="#CCCCCC">like that</font><font color="#E5E5E5"> for something like a cache</font>

1147
00:45:09,339 --> 00:45:14,380
attack right you're like<font color="#E5E5E5"> you're flushing</font>

1148
00:45:10,510 --> 00:45:16,000
<font color="#E5E5E5">your cache</font><font color="#CCCCCC"> well there's not</font><font color="#E5E5E5"> really</font><font color="#CCCCCC"> good</font>

1149
00:45:14,380 --> 00:45:17,800
way from the detective either<font color="#E5E5E5"> one of</font><font color="#CCCCCC"> the</font>

1150
00:45:16,000 --> 00:45:21,220
<font color="#E5E5E5">advantages of a cache attack called the</font>

1151
00:45:17,800 --> 00:45:22,869
<font color="#CCCCCC">caleche brush which</font><font color="#E5E5E5"> I had on I'm one of</font>

1152
00:45:21,220 --> 00:45:23,890
the other<font color="#CCCCCC"> slides is that it's stealth in</font>

1153
00:45:22,869 --> 00:45:24,880
the first place<font color="#E5E5E5"> being all you're doing</font>

1154
00:45:23,890 --> 00:45:27,368
is pushing the cache you're not even

1155
00:45:24,880 --> 00:45:29,880
loading<font color="#CCCCCC"> anything</font><font color="#E5E5E5"> the cache so that makes</font>

1156
00:45:27,369 --> 00:45:31,780
it extraordinary difficult to detect so

1157
00:45:29,880 --> 00:45:33,970
you know the<font color="#E5E5E5"> other thing is you know</font>

1158
00:45:31,780 --> 00:45:35,470
<font color="#E5E5E5">running a running an instruction</font><font color="#CCCCCC"> timer</font>

1159
00:45:33,970 --> 00:45:37,990
<font color="#E5E5E5">like our DTAC or something</font>

1160
00:45:35,470 --> 00:45:39,220
it just happens all the time<font color="#E5E5E5"> so it's not</font>

1161
00:45:37,990 --> 00:45:40,779
really a whole lot<font color="#E5E5E5"> of events left behind</font>

1162
00:45:39,220 --> 00:45:42,009
if you're<font color="#E5E5E5"> doing anything</font><font color="#CCCCCC"> I mean I guess</font>

1163
00:45:40,780 --> 00:45:43,150
they could read the<font color="#CCCCCC"> memory</font><font color="#E5E5E5"> to see that</font>

1164
00:45:42,010 --> 00:45:44,920
you're running<font color="#E5E5E5"> the toolkit but then</font>

1165
00:45:43,150 --> 00:45:46,450
change the toolkit so<font color="#E5E5E5"> it looks like</font>

1166
00:45:44,920 --> 00:45:50,170
<font color="#E5E5E5">something else you know that kind of</font>

1167
00:45:46,450 --> 00:46:30,279
thing it's a cat-and-mouse game any

1168
00:45:50,170 --> 00:46:32,230
other questions so<font color="#E5E5E5"> can</font><font color="#CCCCCC"> you be more</font>

1169
00:46:30,280 --> 00:46:35,160
specific<font color="#E5E5E5"> when you say fuzzing it or Core</font>

1170
00:46:32,230 --> 00:46:35,160
dating events which<font color="#CCCCCC"> events</font>

1171
00:46:50,619 --> 00:46:56,410
<font color="#E5E5E5">okay yeah no</font><font color="#CCCCCC"> problem</font><font color="#E5E5E5"> all right any other</font>

1172
00:46:53,960 --> 00:47:00,069
<font color="#E5E5E5">question any other questions</font>

1173
00:46:56,410 --> 00:47:00,069
cool okay thank<font color="#E5E5E5"> you</font>

