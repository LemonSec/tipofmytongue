1
00:00:28,250 --> 00:00:34,739
all right can you<font color="#E5E5E5"> guys hear</font><font color="#CCCCCC"> me sure</font>

2
00:00:31,560 --> 00:00:36,570
looks like<font color="#E5E5E5"> alright we are already</font><font color="#CCCCCC"> nine</font>

3
00:00:34,739 --> 00:00:40,379
minutes late<font color="#CCCCCC"> so I'll try to make sure</font>

4
00:00:36,570 --> 00:00:42,030
<font color="#CCCCCC">that we are</font><font color="#E5E5E5"> maybe</font><font color="#CCCCCC"> able</font><font color="#E5E5E5"> to get on time so</font>

5
00:00:40,379 --> 00:00:44,670
I'm Vishal<font color="#CCCCCC"> I work for</font><font color="#E5E5E5"> M sorry</font>

6
00:00:42,030 --> 00:00:46,559
<font color="#E5E5E5">engineering and Microsoft and</font><font color="#CCCCCC"> I just</font>

7
00:00:44,670 --> 00:00:49,410
want a<font color="#CCCCCC"> picture where do I belong to in</font>

8
00:00:46,559 --> 00:00:51,239
this whole<font color="#CCCCCC"> ecosystem of security and</font><font color="#E5E5E5"> if</font>

9
00:00:49,410 --> 00:00:52,468
you ever<font color="#E5E5E5"> find a bug in Microsoft and you</font>

10
00:00:51,239 --> 00:00:54,360
<font color="#E5E5E5">figure out hey</font><font color="#CCCCCC"> I want</font><font color="#E5E5E5"> to send it</font><font color="#CCCCCC"> to</font>

11
00:00:52,469 --> 00:00:56,399
<font color="#CCCCCC">Microsoft</font><font color="#E5E5E5"> we are the guys who are at the</font>

12
00:00:54,360 --> 00:00:58,410
receiving<font color="#CCCCCC"> end so we are the</font><font color="#E5E5E5"> first guys</font>

13
00:00:56,399 --> 00:01:00,420
who handled your bugs and then transfer

14
00:00:58,410 --> 00:01:01,828
it to the product<font color="#CCCCCC"> use so yeah so if</font><font color="#E5E5E5"> you</font>

15
00:01:00,420 --> 00:01:04,439
have any grievances around these

16
00:01:01,829 --> 00:01:06,600
communications<font color="#CCCCCC"> feel</font><font color="#E5E5E5"> free to reach out to</font>

17
00:01:04,438 --> 00:01:08,009
<font color="#E5E5E5">me during this conference or I have a</font>

18
00:01:06,600 --> 00:01:08,759
tutor handle if you wanna reach out to

19
00:01:08,010 --> 00:01:12,090
me there as well

20
00:01:08,760 --> 00:01:13,619
I started leading the<font color="#CCCCCC"> response team</font>

21
00:01:12,090 --> 00:01:15,360
there<font color="#E5E5E5"> so I probably will</font><font color="#CCCCCC"> be</font><font color="#E5E5E5"> able to</font>

22
00:01:13,619 --> 00:01:18,509
speak more<font color="#CCCCCC"> from that strength don't</font>

23
00:01:15,360 --> 00:01:21,270
<font color="#E5E5E5">worry about anything now</font><font color="#CCCCCC"> coming back to</font>

24
00:01:18,509 --> 00:01:23,430
<font color="#E5E5E5">this talk</font><font color="#CCCCCC"> if you</font><font color="#E5E5E5"> have never heard about</font>

25
00:01:21,270 --> 00:01:25,770
<font color="#CCCCCC">wins educate</font><font color="#E5E5E5"> don't worry about it you</font>

26
00:01:23,430 --> 00:01:28,009
I'll touch up a<font color="#CCCCCC"> little bit</font><font color="#E5E5E5"> of about</font><font color="#CCCCCC"> it</font>

27
00:01:25,770 --> 00:01:29,880
<font color="#CCCCCC">so that</font><font color="#E5E5E5"> everybody is on the same page</font>

28
00:01:28,009 --> 00:01:32,430
<font color="#CCCCCC">but</font><font color="#E5E5E5"> just in case I want</font><font color="#CCCCCC"> to</font><font color="#E5E5E5"> make sure</font>

29
00:01:29,880 --> 00:01:34,770
<font color="#E5E5E5">that this is absolutely</font><font color="#CCCCCC"> clear because</font><font color="#E5E5E5"> if</font>

30
00:01:32,430 --> 00:01:36,360
you are<font color="#E5E5E5"> not sure what win</font><font color="#CCCCCC"> 30k is this is</font>

31
00:01:34,770 --> 00:01:42,539
this presentation is<font color="#CCCCCC"> gonna</font><font color="#E5E5E5"> sound totally</font>

32
00:01:36,360 --> 00:01:46,229
<font color="#E5E5E5">absurd</font><font color="#CCCCCC"> in 30 days the most</font><font color="#E5E5E5"> famous kernel</font>

33
00:01:42,540 --> 00:01:49,200
driver in Windows<font color="#CCCCCC"> world</font><font color="#E5E5E5"> I and for the</font>

34
00:01:46,229 --> 00:01:51,360
right reasons<font color="#CCCCCC"> and you will know about it</font>

35
00:01:49,200 --> 00:01:53,340
as I go<font color="#CCCCCC"> through</font><font color="#E5E5E5"> the presentations this</font>

36
00:01:51,360 --> 00:01:55,290
<font color="#E5E5E5">talk is about going into details about</font>

37
00:01:53,340 --> 00:01:57,899
hey why is that the case<font color="#CCCCCC"> why is</font><font color="#E5E5E5"> it</font>

38
00:01:55,290 --> 00:02:01,020
certain in<font color="#E5E5E5"> famous driver and what have</font>

39
00:01:57,899 --> 00:02:03,060
we<font color="#E5E5E5"> done</font><font color="#CCCCCC"> to take this beast head-on so</font>

40
00:02:01,020 --> 00:02:03,990
there<font color="#E5E5E5"> are some learning some challenges</font>

41
00:02:03,060 --> 00:02:05,840
<font color="#CCCCCC">that we face which is kind of</font>

42
00:02:03,990 --> 00:02:08,519
<font color="#CCCCCC">interesting for</font><font color="#E5E5E5"> you</font><font color="#CCCCCC"> guys</font><font color="#E5E5E5"> a couple</font><font color="#CCCCCC"> of the</font>

43
00:02:05,840 --> 00:02:10,020
key<font color="#CCCCCC"> takeaways if you want to really go</font>

44
00:02:08,520 --> 00:02:14,370
back<font color="#E5E5E5"> after looking at this all</font>

45
00:02:10,020 --> 00:02:16,380
presentations one thing

46
00:02:14,370 --> 00:02:18,810
security is very<font color="#E5E5E5"> hard problem to solve</font>

47
00:02:16,380 --> 00:02:20,790
technical the regular technical problem

48
00:02:18,810 --> 00:02:23,730
is<font color="#E5E5E5"> also pretty hard it's also security</font>

49
00:02:20,790 --> 00:02:25,290
<font color="#E5E5E5">obviously</font><font color="#CCCCCC"> is on top of all that</font><font color="#E5E5E5"> stuff</font><font color="#CCCCCC"> so</font>

50
00:02:23,730 --> 00:02:27,630
when you look at<font color="#CCCCCC"> Security's from that</font>

51
00:02:25,290 --> 00:02:30,359
perspective<font color="#E5E5E5"> then</font><font color="#CCCCCC"> obviously you start</font>

52
00:02:27,630 --> 00:02:31,799
blabbering<font color="#CCCCCC"> about hey ok security is hard</font>

53
00:02:30,360 --> 00:02:34,440
it should<font color="#CCCCCC"> which should I even try</font><font color="#E5E5E5"> to</font>

54
00:02:31,800 --> 00:02:36,390
solve this this<font color="#E5E5E5"> presentation you might</font>

55
00:02:34,440 --> 00:02:38,489
actually<font color="#CCCCCC"> help you in identifying yes it</font>

56
00:02:36,390 --> 00:02:40,559
is hard but it's<font color="#E5E5E5"> not unsolvable there</font>

57
00:02:38,489 --> 00:02:41,790
are complex problems which can<font color="#CCCCCC"> be solved</font>

58
00:02:40,560 --> 00:02:44,640
and this<font color="#E5E5E5"> is one</font><font color="#CCCCCC"> of the experience that</font>

59
00:02:41,790 --> 00:02:46,859
<font color="#E5E5E5">probably</font><font color="#CCCCCC"> gonna</font><font color="#E5E5E5"> show you another</font>

60
00:02:44,640 --> 00:02:48,929
<font color="#CCCCCC">interesting we have added some very</font><font color="#E5E5E5"> cool</font>

61
00:02:46,860 --> 00:02:50,790
<font color="#CCCCCC">mitigations in the system might some of</font>

62
00:02:48,930 --> 00:02:52,769
<font color="#E5E5E5">that might apply to your</font><font color="#CCCCCC"> environment</font><font color="#E5E5E5"> not</font>

63
00:02:50,790 --> 00:02:54,120
<font color="#E5E5E5">in the exact same way but</font><font color="#CCCCCC"> that would be</font>

64
00:02:52,769 --> 00:02:55,680
some<font color="#CCCCCC"> learning you can take</font><font color="#E5E5E5"> back</font><font color="#CCCCCC"> and see</font>

65
00:02:54,120 --> 00:02:58,590
if that applies to<font color="#E5E5E5"> your</font><font color="#CCCCCC"> environment and</font>

66
00:02:55,680 --> 00:03:01,019
apply<font color="#CCCCCC"> some of those with that that's all</font>

67
00:02:58,590 --> 00:03:02,459
very<font color="#CCCCCC"> simple agenda straightforward</font><font color="#E5E5E5"> the</font>

68
00:03:01,019 --> 00:03:03,840
meat<font color="#E5E5E5"> of the presentation is the middle</font>

69
00:03:02,459 --> 00:03:06,060
<font color="#CCCCCC">one where</font><font color="#E5E5E5"> we're</font><font color="#CCCCCC"> gonna revisit</font><font color="#E5E5E5"> some of</font>

70
00:03:03,840 --> 00:03:07,799
<font color="#CCCCCC">the designs that</font><font color="#E5E5E5"> we have done for</font>

71
00:03:06,060 --> 00:03:10,620
redesigns we have done in<font color="#E5E5E5"> this in the</font>

72
00:03:07,799 --> 00:03:12,870
synthetic<font color="#E5E5E5"> ecosystem but to</font><font color="#CCCCCC"> actually get</font>

73
00:03:10,620 --> 00:03:14,370
there<font color="#E5E5E5"> you need to have some basics</font><font color="#CCCCCC"> so</font>

74
00:03:12,870 --> 00:03:16,860
the<font color="#E5E5E5"> initial stage is to set the</font><font color="#CCCCCC"> stage</font>

75
00:03:14,370 --> 00:03:19,170
<font color="#CCCCCC">about</font><font color="#E5E5E5"> hey why are we talking about this</font>

76
00:03:16,860 --> 00:03:21,390
right<font color="#CCCCCC"> now so the idea is to give you an</font>

77
00:03:19,170 --> 00:03:24,000
idea<font color="#CCCCCC"> of where does this whole win32 gate</font>

78
00:03:21,390 --> 00:03:25,589
driver sits<font color="#CCCCCC"> into the ecosystem why are</font>

79
00:03:24,000 --> 00:03:27,359
we<font color="#E5E5E5"> talking about</font><font color="#CCCCCC"> being 3-game</font><font color="#E5E5E5"> are not</font>

80
00:03:25,590 --> 00:03:29,820
<font color="#E5E5E5">400 other drivers that we have in</font>

81
00:03:27,359 --> 00:03:31,769
<font color="#E5E5E5">Windows so they'll get get you started</font>

82
00:03:29,820 --> 00:03:34,530
off why this this particular<font color="#E5E5E5"> driver</font>

83
00:03:31,769 --> 00:03:36,720
makes significance<font color="#E5E5E5"> and then we'll</font>

84
00:03:34,530 --> 00:03:38,880
<font color="#E5E5E5">conclude with hey what is the next step</font>

85
00:03:36,720 --> 00:03:41,010
<font color="#E5E5E5">we are doing what did we learn</font><font color="#CCCCCC"> from this</font>

86
00:03:38,880 --> 00:03:43,079
experience<font color="#E5E5E5"> where are we right now</font><font color="#CCCCCC"> and</font>

87
00:03:41,010 --> 00:03:45,390
what do we think<font color="#E5E5E5"> from security community</font>

88
00:03:43,079 --> 00:03:46,950
perspective<font color="#E5E5E5"> is the next target</font><font color="#CCCCCC"> we want</font>

89
00:03:45,390 --> 00:03:51,018
<font color="#CCCCCC">to go after because realistically this</font>

90
00:03:46,950 --> 00:03:51,018
<font color="#CCCCCC">is just the beginning</font><font color="#E5E5E5"> of another story</font>

91
00:03:51,290 --> 00:03:56,010
<font color="#CCCCCC">all right so with that let's take a look</font>

92
00:03:54,299 --> 00:03:58,230
at typical vulnerability<font color="#CCCCCC"> or an exploit</font>

93
00:03:56,010 --> 00:04:00,480
that<font color="#E5E5E5"> is being written in Windows</font><font color="#CCCCCC"> Word</font>

94
00:03:58,230 --> 00:04:02,399
<font color="#E5E5E5">and this is from the</font><font color="#CCCCCC"> perspective of say</font>

95
00:04:00,480 --> 00:04:03,750
edge and why I'm taking edge is an

96
00:04:02,400 --> 00:04:06,239
<font color="#E5E5E5">example because that's the most</font><font color="#CCCCCC"> common</font>

97
00:04:03,750 --> 00:04:09,299
attack factor<font color="#E5E5E5"> that's how you get an on</font>

98
00:04:06,239 --> 00:04:11,700
Windows boxes<font color="#E5E5E5"> now to take in perspective</font>

99
00:04:09,299 --> 00:04:15,120
things have<font color="#E5E5E5"> changed over the years it's</font>

100
00:04:11,700 --> 00:04:17,430
not<font color="#E5E5E5"> the same XP word where the</font><font color="#CCCCCC"> a okay I</font>

101
00:04:15,120 --> 00:04:19,410
find<font color="#CCCCCC"> a stack overrun let me just because</font>

102
00:04:17,430 --> 00:04:21,180
I<font color="#E5E5E5"> now have everything</font><font color="#CCCCCC"> let me just run it</font>

103
00:04:19,410 --> 00:04:23,820
and we<font color="#CCCCCC"> are done nope doesn't</font><font color="#E5E5E5"> work</font>

104
00:04:21,180 --> 00:04:25,470
<font color="#E5E5E5">anymore</font><font color="#CCCCCC"> we have to do a lot more your</font>

105
00:04:23,820 --> 00:04:27,639
exploit may<font color="#CCCCCC"> actually spend multiple</font>

106
00:04:25,470 --> 00:04:30,639
<font color="#CCCCCC">components</font><font color="#E5E5E5"> may requirement but wonder</font>

107
00:04:27,639 --> 00:04:33,249
<font color="#E5E5E5">and when I say</font><font color="#CCCCCC"> that</font><font color="#E5E5E5"> this will give you a</font>

108
00:04:30,639 --> 00:04:35,289
<font color="#E5E5E5">good idea of the first goal</font><font color="#CCCCCC"> for you as</font>

109
00:04:33,249 --> 00:04:37,090
an attacker who whenever whenever<font color="#CCCCCC"> you're</font>

110
00:04:35,289 --> 00:04:38,770
picking a target is to actually<font color="#E5E5E5"> get</font>

111
00:04:37,090 --> 00:04:41,619
something<font color="#E5E5E5"> running on your</font><font color="#CCCCCC"> attacker on</font>

112
00:04:38,770 --> 00:04:44,650
<font color="#CCCCCC">your victims boxes right so what would</font>

113
00:04:41,620 --> 00:04:46,870
you do first<font color="#E5E5E5"> probably one of the prime</font>

114
00:04:44,650 --> 00:04:48,568
example is pass on a HTML<font color="#E5E5E5"> link to</font>

115
00:04:46,870 --> 00:04:51,969
<font color="#E5E5E5">somebody like a link to our</font><font color="#CCCCCC"> webpage</font>

116
00:04:48,569 --> 00:04:54,879
<font color="#E5E5E5">somebody open stat and voila</font><font color="#CCCCCC"> he's</font>

117
00:04:51,969 --> 00:04:58,748
running his his code on<font color="#CCCCCC"> your</font><font color="#E5E5E5"> boxes now</font>

118
00:04:54,879 --> 00:05:00,969
<font color="#CCCCCC">and the interesting aspect to it is what</font>

119
00:04:58,749 --> 00:05:02,409
you would<font color="#CCCCCC"> have probably</font><font color="#E5E5E5"> find is a memory</font>

120
00:05:00,969 --> 00:05:04,719
corruption which is<font color="#E5E5E5"> one of the cogs in</font>

121
00:05:02,409 --> 00:05:06,699
<font color="#E5E5E5">the whole machinery but that's just one</font>

122
00:05:04,719 --> 00:05:08,529
piece<font color="#CCCCCC"> of action</font><font color="#E5E5E5"> that you're looking for</font>

123
00:05:06,699 --> 00:05:10,569
there are four more or maybe multiple

124
00:05:08,529 --> 00:05:12,969
more actions or multiple<font color="#CCCCCC"> costs that</font>

125
00:05:10,569 --> 00:05:15,520
unity generate to actually end up doing

126
00:05:12,969 --> 00:05:17,020
<font color="#CCCCCC">a code execution on the</font><font color="#E5E5E5"> browser</font><font color="#CCCCCC"> and all</font>

127
00:05:15,520 --> 00:05:18,698
these<font color="#CCCCCC"> codes we are talking about</font><font color="#E5E5E5"> are the</font>

128
00:05:17,020 --> 00:05:20,650
various mitigations<font color="#CCCCCC"> that we</font><font color="#E5E5E5"> added into</font>

129
00:05:18,699 --> 00:05:23,080
<font color="#E5E5E5">the system</font><font color="#CCCCCC"> which</font><font color="#E5E5E5"> makes your exploitation</font>

130
00:05:20,650 --> 00:05:24,638
little more difficult now you what<font color="#E5E5E5"> you</font>

131
00:05:23,080 --> 00:05:26,318
<font color="#CCCCCC">might</font><font color="#E5E5E5"> actually end</font><font color="#CCCCCC"> up with a very</font>

132
00:05:24,639 --> 00:05:29,289
powerful primitive which may actually

133
00:05:26,319 --> 00:05:31,330
<font color="#CCCCCC">acts like give you a strong inner</font>

134
00:05:29,289 --> 00:05:33,068
<font color="#E5E5E5">perimeter which will make you do all the</font>

135
00:05:31,330 --> 00:05:35,318
thoughts run in the one<font color="#E5E5E5"> shot with that</font>

136
00:05:33,069 --> 00:05:36,879
same primitive itself<font color="#E5E5E5"> but that doesn't</font>

137
00:05:35,319 --> 00:05:38,740
mean your<font color="#CCCCCC"> exploit should not</font><font color="#E5E5E5"> already be</font>

138
00:05:36,879 --> 00:05:40,539
<font color="#E5E5E5">aware of it</font><font color="#CCCCCC"> so when you write an exploit</font>

139
00:05:38,740 --> 00:05:42,339
<font color="#E5E5E5">you still have to think</font><font color="#CCCCCC"> about</font><font color="#E5E5E5"> all these</font>

140
00:05:40,539 --> 00:05:44,409
<font color="#CCCCCC">different medications or you have to</font>

141
00:05:42,339 --> 00:05:49,180
still come<font color="#E5E5E5"> up with these</font><font color="#CCCCCC"> cox-2 to work</font>

142
00:05:44,409 --> 00:05:51,699
around<font color="#E5E5E5"> your stuff having said that once</font>

143
00:05:49,180 --> 00:05:55,360
<font color="#E5E5E5">you get this get the code running on the</font>

144
00:05:51,699 --> 00:05:57,069
box there is something called<font color="#E5E5E5"> which in</font>

145
00:05:55,360 --> 00:06:00,310
<font color="#E5E5E5">recent years browser have introduced a</font>

146
00:05:57,069 --> 00:06:02,339
concept of sandbox<font color="#E5E5E5"> Lane which means that</font>

147
00:06:00,310 --> 00:06:04,689
even<font color="#E5E5E5"> if somebody end up clicking you're</font>

148
00:06:02,339 --> 00:06:06,399
vulnerable link and end up running some

149
00:06:04,689 --> 00:06:08,770
code because of<font color="#E5E5E5"> all the stuff</font><font color="#CCCCCC"> that you</font>

150
00:06:06,399 --> 00:06:10,389
<font color="#E5E5E5">have done at the end of the day you</font>

151
00:06:08,770 --> 00:06:12,250
<font color="#E5E5E5">still</font><font color="#CCCCCC"> aren't</font><font color="#E5E5E5"> not getting enough the</font>

152
00:06:10,389 --> 00:06:15,039
<font color="#E5E5E5">reason is because your code is still</font>

153
00:06:12,250 --> 00:06:16,449
running inside<font color="#E5E5E5"> a very constructive</font>

154
00:06:15,039 --> 00:06:17,979
environment<font color="#CCCCCC"> which is widget doesn't</font>

155
00:06:16,449 --> 00:06:20,080
allow you<font color="#E5E5E5"> to do anything like it doesn't</font>

156
00:06:17,979 --> 00:06:22,000
<font color="#E5E5E5">allow you to open sockets it's so you</font>

157
00:06:20,080 --> 00:06:24,789
won't<font color="#E5E5E5"> have a c2c connection of open to</font>

158
00:06:22,000 --> 00:06:26,529
<font color="#E5E5E5">your servers so which means you can't do</font>

159
00:06:24,789 --> 00:06:29,289
actually pretty<font color="#CCCCCC"> much you are pretty much</font>

160
00:06:26,529 --> 00:06:31,210
at<font color="#E5E5E5"> this</font><font color="#CCCCCC"> point</font><font color="#E5E5E5"> just running a code inside</font>

161
00:06:29,289 --> 00:06:34,180
a binary<font color="#CCCCCC"> space and you're not allowed to</font>

162
00:06:31,210 --> 00:06:36,940
<font color="#CCCCCC">go outside</font><font color="#E5E5E5"> that space so obviously</font>

163
00:06:34,180 --> 00:06:38,740
that's<font color="#CCCCCC"> not enough so that's that's why</font>

164
00:06:36,940 --> 00:06:41,060
you need to<font color="#E5E5E5"> get out of</font><font color="#CCCCCC"> that sandbox</font>

165
00:06:38,740 --> 00:06:43,160
<font color="#E5E5E5">one of the debate people do it is</font>

166
00:06:41,060 --> 00:06:44,690
actually get into the<font color="#E5E5E5"> kernel and when</font>

167
00:06:43,160 --> 00:06:46,639
you get<font color="#E5E5E5"> to the kernel then you</font>

168
00:06:44,690 --> 00:06:48,380
completely own the<font color="#E5E5E5"> system and which is</font>

169
00:06:46,639 --> 00:06:50,930
where<font color="#CCCCCC"> our second payload comes into</font>

170
00:06:48,380 --> 00:06:54,139
picture<font color="#E5E5E5"> this is the second stage of your</font>

171
00:06:50,930 --> 00:06:56,210
exploit which talks about<font color="#E5E5E5"> hey okay how</font>

172
00:06:54,139 --> 00:06:57,860
do I do the sandbox<font color="#E5E5E5"> escape</font><font color="#CCCCCC"> so because I</font>

173
00:06:56,210 --> 00:06:59,979
<font color="#CCCCCC">was in sandbox</font><font color="#E5E5E5"> but I want to get out and</font>

174
00:06:57,860 --> 00:07:03,830
I use<font color="#CCCCCC"> gonna</font><font color="#E5E5E5"> do that</font>

175
00:06:59,980 --> 00:07:06,410
now<font color="#E5E5E5"> interestingly</font><font color="#CCCCCC"> the same thing logics</font>

176
00:07:03,830 --> 00:07:09,200
apply in like the way<font color="#E5E5E5"> applied in the in</font>

177
00:07:06,410 --> 00:07:11,630
the browser world even if you have a

178
00:07:09,200 --> 00:07:13,340
memory corruption but that doesn't<font color="#E5E5E5"> mean</font>

179
00:07:11,630 --> 00:07:14,540
you have<font color="#CCCCCC"> the exploitation running you</font>

180
00:07:13,340 --> 00:07:16,429
still have to bypass<font color="#E5E5E5"> the other</font>

181
00:07:14,540 --> 00:07:18,770
mitigations in place<font color="#E5E5E5"> so there are more</font>

182
00:07:16,430 --> 00:07:20,330
<font color="#CCCCCC">cards</font><font color="#E5E5E5"> you need</font><font color="#CCCCCC"> to work around so in and</font>

183
00:07:18,770 --> 00:07:23,210
all what I'm trying<font color="#CCCCCC"> to get to</font><font color="#E5E5E5"> is here is</font>

184
00:07:20,330 --> 00:07:25,430
you<font color="#CCCCCC"> have a complex machinery now</font><font color="#E5E5E5"> which</font>

185
00:07:23,210 --> 00:07:28,099
<font color="#E5E5E5">you have to connect all in sync to</font>

186
00:07:25,430 --> 00:07:30,889
<font color="#E5E5E5">somehow make the connection from getting</font>

187
00:07:28,100 --> 00:07:35,060
<font color="#E5E5E5">a</font><font color="#CCCCCC"> HTML</font><font color="#E5E5E5"> link to end up owning the system</font>

188
00:07:30,889 --> 00:07:38,840
and this is<font color="#E5E5E5"> where when</font><font color="#CCCCCC"> tilde K comes in</font>

189
00:07:35,060 --> 00:07:41,690
so when<font color="#CCCCCC"> 30k is a one of the kernel</font>

190
00:07:38,840 --> 00:07:44,500
driver<font color="#E5E5E5"> which would help you in actually</font>

191
00:07:41,690 --> 00:07:46,580
<font color="#E5E5E5">getting to</font><font color="#CCCCCC"> the</font><font color="#E5E5E5"> outside the sandbox and</font>

192
00:07:44,500 --> 00:07:49,010
the two<font color="#E5E5E5"> cards that we were mentioning</font>

193
00:07:46,580 --> 00:07:50,960
<font color="#E5E5E5">where you require to get a code running</font>

194
00:07:49,010 --> 00:07:52,490
in the kernel<font color="#E5E5E5"> can be provided by a</font>

195
00:07:50,960 --> 00:07:54,049
<font color="#CCCCCC">vanilla cake code</font><font color="#E5E5E5"> like the memory</font>

196
00:07:52,490 --> 00:07:56,660
corruption bug and the case<font color="#E5E5E5"> of our</font>

197
00:07:54,050 --> 00:07:58,700
bypass will check based<font color="#E5E5E5"> on both these</font>

198
00:07:56,660 --> 00:08:00,650
<font color="#E5E5E5">things</font><font color="#CCCCCC"> a bit as we go around</font><font color="#E5E5E5"> so don't</font>

199
00:07:58,700 --> 00:08:02,840
stress<font color="#E5E5E5"> about if you don't understand any</font>

200
00:08:00,650 --> 00:08:06,169
of<font color="#CCCCCC"> these cogs what</font><font color="#E5E5E5"> they are talking</font>

201
00:08:02,840 --> 00:08:08,659
<font color="#E5E5E5">about at this point now like I said</font>

202
00:08:06,169 --> 00:08:10,190
<font color="#E5E5E5">there</font><font color="#CCCCCC"> are 400 philosophy drivers in</font>

203
00:08:08,660 --> 00:08:12,110
Windows in<font color="#E5E5E5"> consu so why are we talking</font>

204
00:08:10,190 --> 00:08:13,760
about the infinite decay persuade<font color="#E5E5E5"> like</font>

205
00:08:12,110 --> 00:08:16,510
right so<font color="#CCCCCC"> there would be a</font><font color="#E5E5E5"> very valid</font>

206
00:08:13,760 --> 00:08:18,950
<font color="#CCCCCC">cushion so I did a</font><font color="#E5E5E5"> Stratis tickle</font>

207
00:08:16,510 --> 00:08:21,020
analysis on this and said hey<font color="#E5E5E5"> let's take</font>

208
00:08:18,950 --> 00:08:22,820
a look at how many<font color="#E5E5E5"> bugs</font><font color="#CCCCCC"> do we get from</font>

209
00:08:21,020 --> 00:08:25,729
external word or internally we find

210
00:08:22,820 --> 00:08:27,560
those bugs in the windows ecosystem<font color="#E5E5E5"> and</font>

211
00:08:25,729 --> 00:08:28,070
just<font color="#E5E5E5"> concerning the kernel drivers at</font>

212
00:08:27,560 --> 00:08:30,110
this point

213
00:08:28,070 --> 00:08:33,020
<font color="#E5E5E5">apparently when 30k actually constitute</font>

214
00:08:30,110 --> 00:08:36,110
more than 50%<font color="#E5E5E5"> of those</font><font color="#CCCCCC"> quarks which</font>

215
00:08:33,020 --> 00:08:39,020
means that this<font color="#E5E5E5"> is this</font><font color="#CCCCCC"> is one driver</font>

216
00:08:36,110 --> 00:08:40,820
versus<font color="#E5E5E5"> 400</font><font color="#CCCCCC"> other drivers</font><font color="#E5E5E5"> and this is</font>

217
00:08:39,020 --> 00:08:42,409
still being heavy on them<font color="#CCCCCC"> that</font><font color="#E5E5E5"> means</font>

218
00:08:40,820 --> 00:08:45,170
<font color="#CCCCCC">there is</font><font color="#E5E5E5"> something definitely funny</font>

219
00:08:42,409 --> 00:08:46,850
going around with this driver<font color="#CCCCCC"> and now</font>

220
00:08:45,170 --> 00:08:49,099
you<font color="#CCCCCC"> need to understand what this</font><font color="#E5E5E5"> driver</font>

221
00:08:46,850 --> 00:08:51,230
is to make make the complex<font color="#E5E5E5"> any more</font>

222
00:08:49,100 --> 00:08:53,089
clear<font color="#E5E5E5"> why do we have so many bugs in</font>

223
00:08:51,230 --> 00:08:54,970
this<font color="#E5E5E5"> in this in</font><font color="#CCCCCC"> this particular driver</font>

224
00:08:53,089 --> 00:08:57,490
<font color="#E5E5E5">so what</font>

225
00:08:54,970 --> 00:08:59,650
well<font color="#E5E5E5"> simply speaking it's a canal more</font>

226
00:08:57,490 --> 00:09:00,880
driver<font color="#E5E5E5"> it has two major components</font>

227
00:08:59,650 --> 00:09:03,880
<font color="#E5E5E5">inside it</font>

228
00:09:00,880 --> 00:09:06,730
one is to handle<font color="#CCCCCC"> the rendering</font><font color="#E5E5E5"> of</font>

229
00:09:03,880 --> 00:09:09,100
anything on the screen<font color="#CCCCCC"> which</font><font color="#E5E5E5"> is called</font>

230
00:09:06,730 --> 00:09:11,520
<font color="#E5E5E5">the GD is actually part of it and the</font>

231
00:09:09,100 --> 00:09:14,320
other part<font color="#CCCCCC"> is a usual which handles</font>

232
00:09:11,520 --> 00:09:16,600
inputs like<font color="#E5E5E5"> if you click on click on</font>

233
00:09:14,320 --> 00:09:18,040
something<font color="#CCCCCC"> who what am I supposed to do</font>

234
00:09:16,600 --> 00:09:20,320
who which window is supposed to<font color="#E5E5E5"> do</font>

235
00:09:18,040 --> 00:09:22,689
anything<font color="#CCCCCC"> to give a</font><font color="#E5E5E5"> good</font><font color="#CCCCCC"> idea of what</font>

236
00:09:20,320 --> 00:09:24,670
these<font color="#CCCCCC"> two to comprehend</font><font color="#E5E5E5"> does I'm gonna</font>

237
00:09:22,690 --> 00:09:26,230
give you a demo and this<font color="#E5E5E5"> is the most</font>

238
00:09:24,670 --> 00:09:29,050
<font color="#E5E5E5">fail-proof</font><font color="#CCCCCC"> demo you</font><font color="#E5E5E5"> can come</font><font color="#CCCCCC"> across</font>

239
00:09:26,230 --> 00:09:30,370
because<font color="#E5E5E5"> if that fail which almost</font><font color="#CCCCCC"> did</font>

240
00:09:29,050 --> 00:09:32,740
for the first<font color="#E5E5E5"> 10 minutes</font><font color="#CCCCCC"> then my</font>

241
00:09:30,370 --> 00:09:35,140
presentation will not<font color="#E5E5E5"> work</font><font color="#CCCCCC"> but</font><font color="#E5E5E5"> you're</font>

242
00:09:32,740 --> 00:09:39,580
looking<font color="#E5E5E5"> at the screen</font><font color="#CCCCCC"> right now</font><font color="#E5E5E5"> is a</font>

243
00:09:35,140 --> 00:09:41,560
demo of<font color="#CCCCCC"> that application and the reason</font>

244
00:09:39,580 --> 00:09:43,540
why<font color="#E5E5E5"> I say it because everything you are</font>

245
00:09:41,560 --> 00:09:46,180
seeing from<font color="#E5E5E5"> font perspective which</font><font color="#CCCCCC"> is it</font>

246
00:09:43,540 --> 00:09:48,459
is played<font color="#CCCCCC"> on</font><font color="#E5E5E5"> the screen is done by that</font>

247
00:09:46,180 --> 00:09:50,650
driver<font color="#E5E5E5"> so GDI portion of the driver is</font>

248
00:09:48,460 --> 00:09:54,220
responsible<font color="#E5E5E5"> for rendering all these</font>

249
00:09:50,650 --> 00:09:56,319
<font color="#CCCCCC">fonts on</font><font color="#E5E5E5"> the screen and apparently</font>

250
00:09:54,220 --> 00:09:59,140
whether it's a full screen<font color="#E5E5E5"> or it's not a</font>

251
00:09:56,320 --> 00:10:01,300
full screen<font color="#E5E5E5"> it's a</font><font color="#CCCCCC"> Windows property that</font>

252
00:09:59,140 --> 00:10:03,670
property<font color="#E5E5E5"> is managed by user which is</font>

253
00:10:01,300 --> 00:10:06,029
dictating what is that supposed<font color="#CCCCCC"> to do</font>

254
00:10:03,670 --> 00:10:08,620
like from<font color="#E5E5E5"> a prop windows perspective and</font>

255
00:10:06,029 --> 00:10:11,800
if I do a click if I do an X<font color="#E5E5E5"> on my</font>

256
00:10:08,620 --> 00:10:14,440
<font color="#CCCCCC">keyboard or</font><font color="#E5E5E5"> to a clicker when you hit</font>

257
00:10:11,800 --> 00:10:17,050
<font color="#E5E5E5">the</font><font color="#CCCCCC"> next that</font><font color="#E5E5E5"> is a message being sent to</font>

258
00:10:14,440 --> 00:10:19,570
the window by<font color="#E5E5E5"> the win32 kernel driver</font>

259
00:10:17,050 --> 00:10:21,609
saying hey you have<font color="#CCCCCC"> a message you have</font>

260
00:10:19,570 --> 00:10:23,290
<font color="#E5E5E5">to do some action and step on the</font>

261
00:10:21,610 --> 00:10:24,850
<font color="#E5E5E5">application to take the action at this</font>

262
00:10:23,290 --> 00:10:27,370
point<font color="#E5E5E5"> but the message is delivered</font>

263
00:10:24,850 --> 00:10:29,020
through infinity<font color="#CCCCCC"> catered cells</font><font color="#E5E5E5"> so now</font>

264
00:10:27,370 --> 00:10:31,470
you understand<font color="#CCCCCC"> if if you remove when</font>

265
00:10:29,020 --> 00:10:34,029
<font color="#E5E5E5">theta K dot says from windows ecosystem</font>

266
00:10:31,470 --> 00:10:35,529
<font color="#E5E5E5">you will end up with just a command</font>

267
00:10:34,029 --> 00:10:38,290
prompt<font color="#E5E5E5"> you want to actually see</font><font color="#CCCCCC"> anything</font>

268
00:10:35,529 --> 00:10:40,390
<font color="#E5E5E5">else</font><font color="#CCCCCC"> in</font><font color="#E5E5E5"> windows world so it is a pretty</font>

269
00:10:38,290 --> 00:10:41,949
<font color="#E5E5E5">significant component and</font><font color="#CCCCCC"> you can that</font>

270
00:10:40,390 --> 00:10:44,110
you can<font color="#CCCCCC"> imagine right ok if it is that</font>

271
00:10:41,950 --> 00:10:47,470
significant<font color="#CCCCCC"> chances of having</font><font color="#E5E5E5"> it having</font>

272
00:10:44,110 --> 00:10:49,540
<font color="#E5E5E5">bugs a higher plus it's a complex very</font>

273
00:10:47,470 --> 00:10:51,010
bulky component as well<font color="#E5E5E5"> because it</font>

274
00:10:49,540 --> 00:10:53,980
<font color="#CCCCCC">handles everything from user</font>

275
00:10:51,010 --> 00:10:55,839
interactions to displaying on the<font color="#E5E5E5"> fonts</font>

276
00:10:53,980 --> 00:10:57,670
and<font color="#E5E5E5"> all every reliability damn lie but</font>

277
00:10:55,839 --> 00:11:00,690
you<font color="#E5E5E5"> can think of which can go wrong is</font>

278
00:10:57,670 --> 00:11:00,689
sitting inside<font color="#E5E5E5"> it right now</font>

279
00:11:02,280 --> 00:11:10,500
now<font color="#CCCCCC"> this driver I actually pulled out</font>

280
00:11:07,860 --> 00:11:11,760
something<font color="#E5E5E5"> from from one of the file in</font>

281
00:11:10,500 --> 00:11:14,940
<font color="#CCCCCC">went to</font><font color="#E5E5E5"> decay</font><font color="#CCCCCC"> and you can see this</font>

282
00:11:11,760 --> 00:11:18,930
<font color="#E5E5E5">driver was has an entry which says hey</font>

283
00:11:14,940 --> 00:11:23,550
I'm<font color="#CCCCCC"> putting this function from some 3.0</font>

284
00:11:18,930 --> 00:11:25,650
in 1990s<font color="#E5E5E5"> so that makes it older than</font>

285
00:11:23,550 --> 00:11:27,599
<font color="#E5E5E5">some of the guys</font><font color="#CCCCCC"> in</font><font color="#E5E5E5"> the audience</font><font color="#CCCCCC"> and</font>

286
00:11:25,650 --> 00:11:29,400
like everything has gone through changes

287
00:11:27,600 --> 00:11:31,110
like we go through changes<font color="#E5E5E5"> in our life</font>

288
00:11:29,400 --> 00:11:32,689
this guy has also gone<font color="#CCCCCC"> through a lot of</font>

289
00:11:31,110 --> 00:11:36,210
changes in<font color="#CCCCCC"> its lifetime</font>

290
00:11:32,690 --> 00:11:38,010
one of the most or the<font color="#E5E5E5"> last record</font>

291
00:11:36,210 --> 00:11:40,800
<font color="#CCCCCC">changes</font><font color="#E5E5E5"> that I could actually come up</font>

292
00:11:38,010 --> 00:11:44,210
<font color="#E5E5E5">from like in in my conversation with all</font>

293
00:11:40,800 --> 00:11:46,410
the<font color="#CCCCCC"> vin 30k guys was this last change</font>

294
00:11:44,210 --> 00:11:48,600
<font color="#E5E5E5">and why the last</font><font color="#CCCCCC"> changes is the change</font>

295
00:11:46,410 --> 00:11:53,130
that<font color="#CCCCCC"> I can actually find documented</font>

296
00:11:48,600 --> 00:11:54,990
somewhere<font color="#E5E5E5"> this was this is before and</font><font color="#CCCCCC"> p4</font>

297
00:11:53,130 --> 00:11:58,620
<font color="#E5E5E5">which I am talking about 1996 this is</font>

298
00:11:54,990 --> 00:12:00,300
before 1996<font color="#E5E5E5"> how when 30k looked like</font><font color="#CCCCCC"> so</font>

299
00:11:58,620 --> 00:12:04,050
there was no when 30<font color="#CCCCCC"> garages</font><font color="#E5E5E5"> driver on</font>

300
00:12:00,300 --> 00:12:06,000
the system at that<font color="#E5E5E5"> time everything was</font>

301
00:12:04,050 --> 00:12:08,250
inside a<font color="#E5E5E5"> process called C analysis that</font>

302
00:12:06,000 --> 00:12:09,720
<font color="#CCCCCC">was still exist today</font><font color="#E5E5E5"> but just the</font>

303
00:12:08,250 --> 00:12:12,020
component<font color="#CCCCCC"> we were talking about</font><font color="#E5E5E5"> the user</font>

304
00:12:09,720 --> 00:12:15,630
in<font color="#E5E5E5"> G</font><font color="#CCCCCC"> DICOM brain are</font><font color="#E5E5E5"> not part of that</font>

305
00:12:12,020 --> 00:12:19,880
<font color="#E5E5E5">were part of that</font><font color="#CCCCCC"> basically the CSRs is</font>

306
00:12:15,630 --> 00:12:22,920
process at the time<font color="#E5E5E5"> what we did in NT 4</font>

307
00:12:19,880 --> 00:12:26,040
was actually stripped down<font color="#CCCCCC"> C</font><font color="#E5E5E5"> services</font>

308
00:12:22,920 --> 00:12:28,920
take these two components<font color="#E5E5E5"> out from the</font>

309
00:12:26,040 --> 00:12:33,390
user mode moved into<font color="#E5E5E5"> kernel and made it</font>

310
00:12:28,920 --> 00:12:35,160
a driver<font color="#CCCCCC"> for me so so</font><font color="#E5E5E5"> this was a pretty</font>

311
00:12:33,390 --> 00:12:36,480
significant move and you<font color="#E5E5E5"> can imagine why</font>

312
00:12:35,160 --> 00:12:39,329
because we<font color="#E5E5E5"> are making so many changes</font>

313
00:12:36,480 --> 00:12:40,800
here I mean<font color="#E5E5E5"> making such</font><font color="#CCCCCC"> an already Sabol</font>

314
00:12:39,330 --> 00:12:42,510
<font color="#E5E5E5">key code we are trying to move that code</font>

315
00:12:40,800 --> 00:12:43,709
into kernel<font color="#E5E5E5"> that means we are</font>

316
00:12:42,510 --> 00:12:46,980
introducing some<font color="#E5E5E5"> very interesting</font>

317
00:12:43,710 --> 00:12:51,710
aspects<font color="#E5E5E5"> of it well let</font><font color="#CCCCCC"> me</font><font color="#E5E5E5"> just go back</font>

318
00:12:46,980 --> 00:12:54,570
<font color="#E5E5E5">and talk</font><font color="#CCCCCC"> about hey this is 1996 we had</font>

319
00:12:51,710 --> 00:12:56,700
very constrained resources CPU were very

320
00:12:54,570 --> 00:12:59,130
very constrained and memory was

321
00:12:56,700 --> 00:13:02,250
constrained so the reason why this this

322
00:12:59,130 --> 00:13:04,320
thing was driven was not because<font color="#CCCCCC"> of</font>

323
00:13:02,250 --> 00:13:06,270
security<font color="#CCCCCC"> but more from performance</font>

324
00:13:04,320 --> 00:13:08,490
perspective<font color="#CCCCCC"> at that time security was</font>

325
00:13:06,270 --> 00:13:12,480
<font color="#E5E5E5">okay</font><font color="#CCCCCC"> it was a</font><font color="#E5E5E5"> deal but not as a big of a</font>

326
00:13:08,490 --> 00:13:14,040
focus on focal<font color="#E5E5E5"> points so most of the</font>

327
00:13:12,480 --> 00:13:15,630
decision<font color="#E5E5E5"> were taken from hey we have to</font>

328
00:13:14,040 --> 00:13:17,760
<font color="#CCCCCC">gain a market</font><font color="#E5E5E5"> share</font>

329
00:13:15,630 --> 00:13:20,130
that is the business decision at that<font color="#E5E5E5"> at</font>

330
00:13:17,760 --> 00:13:21,960
that<font color="#CCCCCC"> point and we started</font><font color="#E5E5E5"> looking at hey</font>

331
00:13:20,130 --> 00:13:26,370
how can<font color="#CCCCCC"> we actually</font><font color="#E5E5E5"> increase the market</font>

332
00:13:21,960 --> 00:13:30,210
<font color="#E5E5E5">share by making this system faster</font><font color="#CCCCCC"> on a</font>

333
00:13:26,370 --> 00:13:31,800
slower machines<font color="#E5E5E5"> basically how do we make</font>

334
00:13:30,210 --> 00:13:34,970
the<font color="#CCCCCC"> system faster from moving</font><font color="#E5E5E5"> from user</font>

335
00:13:31,800 --> 00:13:38,310
<font color="#E5E5E5">to panel if you think about it</font><font color="#CCCCCC"> whenever</font>

336
00:13:34,970 --> 00:13:41,580
<font color="#CCCCCC">s is a different process</font><font color="#E5E5E5"> on its own so</font>

337
00:13:38,310 --> 00:13:44,280
if<font color="#E5E5E5"> X process wants to send a message to</font>

338
00:13:41,580 --> 00:13:46,500
Y I process window<font color="#E5E5E5"> it has to actually</font><font color="#CCCCCC"> do</font>

339
00:13:44,280 --> 00:13:49,199
context switches now so as to go<font color="#E5E5E5"> to from</font>

340
00:13:46,500 --> 00:13:50,940
<font color="#E5E5E5">this process to CSRs s process and that</font>

341
00:13:49,200 --> 00:13:53,160
process<font color="#CCCCCC"> then got do a context h2y</font>

342
00:13:50,940 --> 00:13:56,040
process<font color="#E5E5E5"> so a lot of context which</font><font color="#CCCCCC"> is</font>

343
00:13:53,160 --> 00:13:58,709
happening<font color="#CCCCCC"> and another</font><font color="#E5E5E5"> thing was that</font>

344
00:13:56,040 --> 00:14:00,150
<font color="#E5E5E5">CSRs s since it's a different process</font><font color="#CCCCCC"> it</font>

345
00:13:58,710 --> 00:14:01,920
<font color="#CCCCCC">actually is too spun up new threats</font>

346
00:14:00,150 --> 00:14:04,860
<font color="#CCCCCC">every time there is a</font><font color="#E5E5E5"> request that comes</font>

347
00:14:01,920 --> 00:14:07,349
in from somebody<font color="#E5E5E5"> to send a message</font><font color="#CCCCCC"> a</font>

348
00:14:04,860 --> 00:14:08,850
request comes up in<font color="#CCCCCC"> any</font><font color="#E5E5E5"> sponsor for that</font>

349
00:14:07,350 --> 00:14:11,010
<font color="#CCCCCC">what's--what</font><font color="#E5E5E5"> pair training is all</font><font color="#CCCCCC"> about</font>

350
00:14:08,850 --> 00:14:12,510
<font color="#E5E5E5">so essentially</font><font color="#CCCCCC"> all of this were</font>

351
00:14:11,010 --> 00:14:15,450
constraining the<font color="#CCCCCC"> Machine at</font><font color="#E5E5E5"> that point</font>

352
00:14:12,510 --> 00:14:17,939
of time<font color="#E5E5E5"> and when we introduced this</font>

353
00:14:15,450 --> 00:14:19,950
change<font color="#E5E5E5"> things changed a bit because</font><font color="#CCCCCC"> now</font>

354
00:14:17,940 --> 00:14:21,600
there are no<font color="#E5E5E5"> you know process context</font>

355
00:14:19,950 --> 00:14:23,940
switches<font color="#CCCCCC"> you still</font><font color="#E5E5E5"> are doing context</font>

356
00:14:21,600 --> 00:14:25,590
switch from user<font color="#E5E5E5"> to kernel but not from</font>

357
00:14:23,940 --> 00:14:28,890
user to user which were more expansive

358
00:14:25,590 --> 00:14:31,350
by the way so it end up giving<font color="#E5E5E5"> great</font>

359
00:14:28,890 --> 00:14:33,900
performance<font color="#CCCCCC"> incentive from graphics</font>

360
00:14:31,350 --> 00:14:38,040
perspective<font color="#CCCCCC"> which was probably the</font>

361
00:14:33,900 --> 00:14:40,230
driver at that point but moving quote

362
00:14:38,040 --> 00:14:42,810
from user<font color="#E5E5E5"> to kernel has some very</font><font color="#CCCCCC"> unique</font>

363
00:14:40,230 --> 00:14:45,330
features<font color="#E5E5E5"> what you need to do now you</font>

364
00:14:42,810 --> 00:14:46,829
<font color="#CCCCCC">have to expose new</font><font color="#E5E5E5"> system calls because</font>

365
00:14:45,330 --> 00:14:48,690
<font color="#E5E5E5">obviously you need an interface</font><font color="#CCCCCC"> between</font>

366
00:14:46,830 --> 00:14:52,200
user and kernel to have those

367
00:14:48,690 --> 00:14:54,300
<font color="#CCCCCC">interaction going</font><font color="#E5E5E5"> again</font><font color="#CCCCCC"> we expose</font>

368
00:14:52,200 --> 00:14:55,620
<font color="#E5E5E5">something while user would call back we</font>

369
00:14:54,300 --> 00:14:57,300
<font color="#E5E5E5">will talk about this again but this is</font><font color="#CCCCCC"> a</font>

370
00:14:55,620 --> 00:14:59,460
very<font color="#E5E5E5"> unique feature which was introduced</font>

371
00:14:57,300 --> 00:15:01,050
<font color="#E5E5E5">just so that</font><font color="#CCCCCC"> we this feature which we</font>

372
00:14:59,460 --> 00:15:03,600
<font color="#CCCCCC">which can be migrated from user to</font>

373
00:15:01,050 --> 00:15:06,329
kernel can actually work as it is<font color="#E5E5E5"> and</font>

374
00:15:03,600 --> 00:15:08,520
then obviously when you<font color="#CCCCCC"> are moving</font><font color="#E5E5E5"> I</font>

375
00:15:06,330 --> 00:15:10,950
mean you're making<font color="#CCCCCC"> a driver there are</font>

376
00:15:08,520 --> 00:15:13,020
<font color="#CCCCCC">put potentials of making shared memories</font>

377
00:15:10,950 --> 00:15:15,060
<font color="#CCCCCC">shared sections</font><font color="#E5E5E5"> between user and kernel</font>

378
00:15:13,020 --> 00:15:16,500
so that they can<font color="#E5E5E5"> share the data in case</font>

379
00:15:15,060 --> 00:15:18,449
<font color="#E5E5E5">you don't</font><font color="#CCCCCC"> want to transfer it</font><font color="#E5E5E5"> through</font>

380
00:15:16,500 --> 00:15:21,450
just or<font color="#E5E5E5"> you couldn't transfer it just</font>

381
00:15:18,450 --> 00:15:22,560
from the system calls and there are

382
00:15:21,450 --> 00:15:23,820
bunch more changes but these are the

383
00:15:22,560 --> 00:15:26,890
three<font color="#E5E5E5"> changes we're going to talk it as</font>

384
00:15:23,820 --> 00:15:29,180
as we go in<font color="#E5E5E5"> the presentation</font>

385
00:15:26,890 --> 00:15:31,189
and obviously<font color="#E5E5E5"> you can think of like all</font>

386
00:15:29,180 --> 00:15:33,290
these bigger changes that we<font color="#E5E5E5"> are looking</font>

387
00:15:31,190 --> 00:15:34,580
<font color="#E5E5E5">at housing</font><font color="#CCCCCC"> security implications as we</font>

388
00:15:33,290 --> 00:15:37,880
go along<font color="#E5E5E5"> the presentation I'm going to</font>

389
00:15:34,580 --> 00:15:39,590
discuss<font color="#E5E5E5"> about</font><font color="#CCCCCC"> it but I can like I'm just</font>

390
00:15:37,880 --> 00:15:42,730
<font color="#E5E5E5">want to stress at that point security</font>

391
00:15:39,590 --> 00:15:47,750
took a hit<font color="#CCCCCC"> in</font><font color="#E5E5E5"> favor of performance</font><font color="#CCCCCC"> and</font>

392
00:15:42,730 --> 00:15:49,160
why does that happen<font color="#CCCCCC"> so as we look at</font>

393
00:15:47,750 --> 00:15:53,420
all these three changes<font color="#E5E5E5"> which we have</font>

394
00:15:49,160 --> 00:15:55,699
seen<font color="#E5E5E5"> going</font><font color="#CCCCCC"> through while making</font><font color="#E5E5E5"> these</font>

395
00:15:53,420 --> 00:15:57,380
migration from<font color="#CCCCCC"> user the kernel</font><font color="#E5E5E5"> we'll</font>

396
00:15:55,700 --> 00:15:59,660
touch base<font color="#E5E5E5"> on all these three and see</font>

397
00:15:57,380 --> 00:16:02,240
how we have tackle this<font color="#E5E5E5"> from security</font>

398
00:15:59,660 --> 00:16:05,569
standpoint<font color="#E5E5E5"> so now</font><font color="#CCCCCC"> if before</font><font color="#E5E5E5"> I go and</font>

399
00:16:02,240 --> 00:16:08,690
jump into<font color="#E5E5E5"> this the idea at this</font><font color="#CCCCCC"> point is</font>

400
00:16:05,570 --> 00:16:10,610
<font color="#CCCCCC">okay you know the things have gone south</font>

401
00:16:08,690 --> 00:16:12,740
from security standpoint when we

402
00:16:10,610 --> 00:16:16,370
migrated from user to kernel<font color="#E5E5E5"> and there</font>

403
00:16:12,740 --> 00:16:19,730
were some glaring problems from security

404
00:16:16,370 --> 00:16:23,600
standpoint<font color="#E5E5E5"> and couple of years back</font><font color="#CCCCCC"> like</font>

405
00:16:19,730 --> 00:16:25,700
<font color="#E5E5E5">in 2016 we hit a very low period for win</font>

406
00:16:23,600 --> 00:16:27,470
<font color="#E5E5E5">30</font><font color="#CCCCCC"> Kairat sense</font><font color="#E5E5E5"> when there were like 14</font>

407
00:16:25,700 --> 00:16:29,839
<font color="#CCCCCC">bucks reported in</font><font color="#E5E5E5"> phone</font><font color="#CCCCCC"> to on</font>

408
00:16:27,470 --> 00:16:32,180
<font color="#E5E5E5">competition I was the worst case</font>

409
00:16:29,839 --> 00:16:34,880
<font color="#E5E5E5">scenario</font><font color="#CCCCCC"> for Windows when we looked at</font>

410
00:16:32,180 --> 00:16:37,099
every bug<font color="#E5E5E5"> every exploit that</font><font color="#CCCCCC"> was written</font>

411
00:16:34,880 --> 00:16:39,730
<font color="#E5E5E5">in on Windows had something to do with</font>

412
00:16:37,100 --> 00:16:42,260
<font color="#CCCCCC">win</font><font color="#E5E5E5"> 30k</font><font color="#CCCCCC"> dot says and that point was a</font>

413
00:16:39,730 --> 00:16:44,870
which was I<font color="#E5E5E5"> I open up</font><font color="#CCCCCC"> we</font><font color="#E5E5E5"> already were</font>

414
00:16:42,260 --> 00:16:46,819
aware<font color="#E5E5E5"> of how bad this component is and</font>

415
00:16:44,870 --> 00:16:49,610
how things have<font color="#CCCCCC"> gone but that</font><font color="#E5E5E5"> was like</font>

416
00:16:46,820 --> 00:16:52,370
<font color="#CCCCCC">okay now this is</font><font color="#E5E5E5"> the worst case what do</font>

417
00:16:49,610 --> 00:16:55,100
<font color="#CCCCCC">I we do we can sit on this</font><font color="#E5E5E5"> and see what</font>

418
00:16:52,370 --> 00:16:57,350
<font color="#E5E5E5">happens next year or we can take some</font>

419
00:16:55,100 --> 00:16:59,420
drastic decisions and at that point we

420
00:16:57,350 --> 00:17:00,830
sit down looked at all the design<font color="#E5E5E5"> this</font>

421
00:16:59,420 --> 00:17:02,089
<font color="#E5E5E5">is where the previous whatever the</font>

422
00:17:00,830 --> 00:17:04,429
design changes you have seen came into

423
00:17:02,089 --> 00:17:07,579
picture<font color="#CCCCCC"> we</font><font color="#E5E5E5"> thought okay</font><font color="#CCCCCC"> we know these</font>

424
00:17:04,429 --> 00:17:10,130
these few areas<font color="#CCCCCC"> which were design</font>

425
00:17:07,579 --> 00:17:12,530
decision at<font color="#CCCCCC"> that point of time how do we</font>

426
00:17:10,130 --> 00:17:16,370
do now<font color="#E5E5E5"> what should we do to</font><font color="#CCCCCC"> make sure</font>

427
00:17:12,530 --> 00:17:18,050
<font color="#CCCCCC">that this</font><font color="#E5E5E5"> doesn't stick out to us and at</font>

428
00:17:16,369 --> 00:17:20,719
that<font color="#E5E5E5"> point there</font><font color="#CCCCCC"> are you still have to</font>

429
00:17:18,050 --> 00:17:22,730
understand this like Windows has few

430
00:17:20,720 --> 00:17:25,459
basic pillars and<font color="#E5E5E5"> it sits on those basic</font>

431
00:17:22,730 --> 00:17:27,230
pillars one is you cannot actually<font color="#E5E5E5"> take</font>

432
00:17:25,459 --> 00:17:28,910
performance out of<font color="#E5E5E5"> it</font><font color="#CCCCCC"> whatever</font><font color="#E5E5E5"> is</font>

433
00:17:27,230 --> 00:17:31,280
performing today<font color="#E5E5E5"> that's the performance</font>

434
00:17:28,910 --> 00:17:33,410
<font color="#CCCCCC">you</font><font color="#E5E5E5"> have to keep sustaining on I mean</font>

435
00:17:31,280 --> 00:17:35,540
<font color="#E5E5E5">it's very</font><font color="#CCCCCC"> difficult to select sell a</font>

436
00:17:33,410 --> 00:17:37,429
product<font color="#E5E5E5"> if your next version of the</font>

437
00:17:35,540 --> 00:17:38,870
product is<font color="#E5E5E5"> not</font><font color="#CCCCCC"> going to be same or at</font>

438
00:17:37,429 --> 00:17:40,610
<font color="#CCCCCC">least closer to the performance whereas</font>

439
00:17:38,870 --> 00:17:43,010
the previous<font color="#CCCCCC"> one</font>

440
00:17:40,610 --> 00:17:44,229
another is<font color="#CCCCCC"> app compat</font><font color="#E5E5E5"> which is a huge</font>

441
00:17:43,010 --> 00:17:46,910
deal at Microsoft

442
00:17:44,230 --> 00:17:48,770
especially<font color="#E5E5E5"> for Windows you cannot take</font><font color="#CCCCCC"> F</font>

443
00:17:46,910 --> 00:17:50,540
competitor risks like if if some

444
00:17:48,770 --> 00:17:52,820
applications<font color="#E5E5E5"> like starts</font><font color="#CCCCCC"> breaking</font>

445
00:17:50,540 --> 00:17:54,860
because<font color="#E5E5E5"> of some dependencies on older</font>

446
00:17:52,820 --> 00:17:56,870
operating<font color="#E5E5E5"> system you have to just</font>

447
00:17:54,860 --> 00:17:58,729
sustain it unfortunately<font color="#E5E5E5"> and those are</font>

448
00:17:56,870 --> 00:18:02,750
the parallels and those were those were

449
00:17:58,730 --> 00:18:04,940
<font color="#E5E5E5">the major pillars we still have to</font>

450
00:18:02,750 --> 00:18:08,120
comply no matter what redesigning we do

451
00:18:04,940 --> 00:18:10,490
in our windows<font color="#CCCCCC"> o</font><font color="#E5E5E5"> going forward so with</font>

452
00:18:08,120 --> 00:18:12,080
that in<font color="#CCCCCC"> mind we thought about</font><font color="#E5E5E5"> ok let's</font>

453
00:18:10,490 --> 00:18:13,910
take<font color="#E5E5E5"> this is call in a in in</font>

454
00:18:12,080 --> 00:18:17,179
<font color="#E5E5E5">consideration</font><font color="#CCCCCC"> for</font><font color="#E5E5E5"> the for the big name</font>

455
00:18:13,910 --> 00:18:20,090
so when theta<font color="#E5E5E5"> K has over 1100 Cisco's</font>

456
00:18:17,180 --> 00:18:23,030
<font color="#E5E5E5">this is twice the</font><font color="#CCCCCC"> size of anthos the</font>

457
00:18:20,090 --> 00:18:24,919
actual kernel swiss cows<font color="#CCCCCC"> which makes it</font>

458
00:18:23,030 --> 00:18:28,820
such a<font color="#E5E5E5"> huge attacks our attic surface</font>

459
00:18:24,920 --> 00:18:30,470
and interestingly some<font color="#E5E5E5"> of</font><font color="#CCCCCC"> the</font><font color="#E5E5E5"> sis calls</font>

460
00:18:28,820 --> 00:18:32,290
are more deeper<font color="#CCCCCC"> and when I say deeper</font>

461
00:18:30,470 --> 00:18:35,060
<font color="#CCCCCC">it's like hey your system call is just</font>

462
00:18:32,290 --> 00:18:36,950
<font color="#CCCCCC">ok auntie</font><font color="#E5E5E5"> call one param which is like</font>

463
00:18:35,060 --> 00:18:39,610
<font color="#CCCCCC">it's just</font><font color="#E5E5E5"> a name for it and then you</font>

464
00:18:36,950 --> 00:18:42,530
pass a parameter that<font color="#CCCCCC"> parameter dictates</font>

465
00:18:39,610 --> 00:18:44,990
<font color="#CCCCCC">okay what actual system am I supposed to</font>

466
00:18:42,530 --> 00:18:46,340
call now so because that<font color="#E5E5E5"> means your</font>

467
00:18:44,990 --> 00:18:47,810
<font color="#CCCCCC">sister Paul</font><font color="#E5E5E5"> is just an entry at this</font>

468
00:18:46,340 --> 00:18:49,520
point you are<font color="#E5E5E5"> actually going to make</font>

469
00:18:47,810 --> 00:18:51,379
more deeper system calls while you

470
00:18:49,520 --> 00:18:53,510
actually<font color="#E5E5E5"> go</font><font color="#CCCCCC"> to do the transition further</font>

471
00:18:51,380 --> 00:18:55,340
so<font color="#CCCCCC"> a LAN</font><font color="#E5E5E5"> under it is just a number it's</font>

472
00:18:53,510 --> 00:19:00,050
probably much bigger than actual the

473
00:18:55,340 --> 00:19:02,270
actual<font color="#E5E5E5"> surface so writing code in itself</font>

474
00:19:00,050 --> 00:19:05,120
is a hard problem and<font color="#CCCCCC"> now</font><font color="#E5E5E5"> you are</font><font color="#CCCCCC"> asking</font>

475
00:19:02,270 --> 00:19:06,800
developers<font color="#E5E5E5"> to write secure</font><font color="#CCCCCC"> syscalls</font>

476
00:19:05,120 --> 00:19:08,270
which comes up with its own set of

477
00:19:06,800 --> 00:19:10,730
<font color="#E5E5E5">problems so if you have to take care</font><font color="#CCCCCC"> of</font>

478
00:19:08,270 --> 00:19:14,060
all these stuffs<font color="#E5E5E5"> that comes with sis</font>

479
00:19:10,730 --> 00:19:18,020
calls if you are if you<font color="#CCCCCC"> are not then</font>

480
00:19:14,060 --> 00:19:20,000
think<font color="#E5E5E5"> of</font><font color="#CCCCCC"> this user</font><font color="#E5E5E5"> to kernel is about</font>

481
00:19:18,020 --> 00:19:22,430
security<font color="#E5E5E5"> boundary which means that if</font>

482
00:19:20,000 --> 00:19:24,860
you<font color="#CCCCCC"> find even a single bug in any</font><font color="#E5E5E5"> of the</font>

483
00:19:22,430 --> 00:19:26,870
<font color="#E5E5E5">SIS call that means you</font><font color="#CCCCCC"> find a hole</font>

484
00:19:24,860 --> 00:19:29,149
<font color="#E5E5E5">which can which from where you can go</font>

485
00:19:26,870 --> 00:19:31,610
<font color="#E5E5E5">from user to</font><font color="#CCCCCC"> comma so you have to make</font>

486
00:19:29,150 --> 00:19:34,670
<font color="#E5E5E5">sure</font><font color="#CCCCCC"> that every syscall is absolutely</font>

487
00:19:31,610 --> 00:19:36,399
100% secure and has to comply with all

488
00:19:34,670 --> 00:19:38,840
<font color="#CCCCCC">the conditions that you are</font><font color="#E5E5E5"> getting in</font>

489
00:19:36,400 --> 00:19:40,190
so<font color="#E5E5E5"> like I said writing code itself is</font>

490
00:19:38,840 --> 00:19:41,629
<font color="#E5E5E5">hard now you're putting more constraint</font>

491
00:19:40,190 --> 00:19:43,670
on it<font color="#CCCCCC"> so obviously it's going to</font><font color="#E5E5E5"> be much</font>

492
00:19:41,630 --> 00:19:45,320
more harder so chances<font color="#E5E5E5"> of inducing bugs</font>

493
00:19:43,670 --> 00:19:47,150
become just more increasing so that's

494
00:19:45,320 --> 00:19:50,659
why the<font color="#CCCCCC"> attacks of phase just</font><font color="#E5E5E5"> increases</font>

495
00:19:47,150 --> 00:19:53,210
drastically<font color="#E5E5E5"> so what do we do</font>

496
00:19:50,660 --> 00:19:54,080
I've<font color="#CCCCCC"> given</font><font color="#E5E5E5"> some reference in the title</font>

497
00:19:53,210 --> 00:19:56,570
so so we<font color="#E5E5E5"> lose</font>

498
00:19:54,080 --> 00:19:59,539
<font color="#E5E5E5">all filtering</font><font color="#CCCCCC"> now let's hold on for a</font>

499
00:19:56,570 --> 00:20:03,260
minute<font color="#E5E5E5"> there is something called</font><font color="#CCCCCC"> knowing</font>

500
00:19:59,539 --> 00:20:06,620
<font color="#E5E5E5">30k security policy which means if as a</font>

501
00:20:03,260 --> 00:20:08,779
process<font color="#E5E5E5"> if you</font><font color="#CCCCCC"> enable this policy</font><font color="#E5E5E5"> then</font>

502
00:20:06,620 --> 00:20:11,209
you can say to the system that no matter

503
00:20:08,779 --> 00:20:13,909
what I do<font color="#E5E5E5"> if I make a call to win 30k</font>

504
00:20:11,210 --> 00:20:16,250
<font color="#E5E5E5">don't allow it basically it's a hard</font>

505
00:20:13,909 --> 00:20:18,200
block<font color="#E5E5E5"> to not allow any</font><font color="#CCCCCC"> window degree</font>

506
00:20:16,250 --> 00:20:20,360
<font color="#E5E5E5">system calls why does it matter</font>

507
00:20:18,200 --> 00:20:23,120
<font color="#E5E5E5">Chrome for instance actually use this</font>

508
00:20:20,360 --> 00:20:25,850
feature<font color="#E5E5E5"> and that means if chrome has a</font>

509
00:20:23,120 --> 00:20:27,370
sandbox<font color="#CCCCCC"> like if it sits you end up</font>

510
00:20:25,850 --> 00:20:29,928
running some<font color="#E5E5E5"> code in the chrome sandbox</font>

511
00:20:27,370 --> 00:20:31,428
<font color="#CCCCCC">you cannot use benefiting</font><font color="#E5E5E5"> a system</font><font color="#CCCCCC"> call</font>

512
00:20:29,929 --> 00:20:33,889
to come out of<font color="#E5E5E5"> it</font><font color="#CCCCCC"> because it</font><font color="#E5E5E5"> doesn't</font>

513
00:20:31,429 --> 00:20:36,080
<font color="#E5E5E5">have any opportunity this that that</font>

514
00:20:33,889 --> 00:20:38,059
layer<font color="#E5E5E5"> doesn't exist for it which is</font>

515
00:20:36,080 --> 00:20:40,699
<font color="#E5E5E5">awesome</font><font color="#CCCCCC"> features unfortunately we</font>

516
00:20:38,059 --> 00:20:43,490
couldn't use it<font color="#E5E5E5"> in</font><font color="#CCCCCC"> Ashe so we had to do</font>

517
00:20:40,700 --> 00:20:46,100
<font color="#E5E5E5">something more robust or more different</font>

518
00:20:43,490 --> 00:20:49,519
from<font color="#E5E5E5"> that respective so what we did was</font>

519
00:20:46,100 --> 00:20:51,199
we<font color="#E5E5E5"> realized</font><font color="#CCCCCC"> okay</font><font color="#E5E5E5"> even though</font><font color="#CCCCCC"> we can</font>

520
00:20:49,519 --> 00:20:53,149
<font color="#CCCCCC">actually disconnect when sitting a</font>

521
00:20:51,200 --> 00:20:55,970
completely from<font color="#CCCCCC"> edge because of lot more</font>

522
00:20:53,149 --> 00:20:57,620
<font color="#E5E5E5">dependency on it we can still make it</font>

523
00:20:55,970 --> 00:20:59,659
filtered out<font color="#E5E5E5"> some of the content which</font>

524
00:20:57,620 --> 00:21:01,668
is<font color="#E5E5E5"> not needed</font><font color="#CCCCCC"> so</font><font color="#E5E5E5"> we end up doing</font><font color="#CCCCCC"> okay</font>

525
00:20:59,659 --> 00:21:03,860
applications<font color="#E5E5E5"> don't need also skulls so</font>

526
00:21:01,669 --> 00:21:06,230
how about<font color="#E5E5E5"> we create a subsystems which</font>

527
00:21:03,860 --> 00:21:08,870
says hey define<font color="#CCCCCC"> what sis calls do</font><font color="#E5E5E5"> you</font>

528
00:21:06,230 --> 00:21:10,070
want to allow<font color="#E5E5E5"> and everything else</font><font color="#CCCCCC"> we</font><font color="#E5E5E5"> are</font>

529
00:21:08,870 --> 00:21:11,989
<font color="#CCCCCC">not gonna allow you</font><font color="#E5E5E5"> to do that</font>

530
00:21:10,070 --> 00:21:13,700
interestingly<font color="#CCCCCC"> linnaeus</font><font color="#E5E5E5"> hack something</font>

531
00:21:11,990 --> 00:21:15,830
much more robust<font color="#E5E5E5"> around the same lines</font>

532
00:21:13,700 --> 00:21:18,139
<font color="#E5E5E5">if you</font><font color="#CCCCCC"> have not</font><font color="#E5E5E5"> heard about sicom but it</font>

533
00:21:15,830 --> 00:21:19,549
does the<font color="#CCCCCC"> same thing for</font><font color="#E5E5E5"> applications you</font>

534
00:21:18,139 --> 00:21:23,199
can allow what system calls you want

535
00:21:19,549 --> 00:21:27,139
<font color="#CCCCCC">it's very very strong mitigation so edge</font>

536
00:21:23,200 --> 00:21:31,490
<font color="#E5E5E5">end up using this we filter out almost</font>

537
00:21:27,139 --> 00:21:33,289
<font color="#E5E5E5">75% of in</font><font color="#CCCCCC"> 30</font><font color="#E5E5E5"> cases call now there are</font>

538
00:21:31,490 --> 00:21:34,940
other components<font color="#E5E5E5"> which can</font><font color="#CCCCCC"> also use this</font>

539
00:21:33,289 --> 00:21:36,379
feature which is still Microsoft

540
00:21:34,940 --> 00:21:39,980
proprietary at this point we have an

541
00:21:36,380 --> 00:21:43,149
exposed it to<font color="#CCCCCC"> third</font><font color="#E5E5E5"> party yet what is</font>

542
00:21:39,980 --> 00:21:45,590
the impact once we have this<font color="#CCCCCC"> enable well</font>

543
00:21:43,149 --> 00:21:48,469
this<font color="#E5E5E5"> obviously reduces the</font><font color="#CCCCCC"> attack</font>

544
00:21:45,590 --> 00:21:50,449
surface<font color="#CCCCCC"> previously it was</font><font color="#E5E5E5"> 1106 calls</font>

545
00:21:48,470 --> 00:21:52,580
which you can target any one<font color="#CCCCCC"> of those if</font>

546
00:21:50,450 --> 00:21:54,799
you find<font color="#CCCCCC"> bug on any of the SIS</font><font color="#E5E5E5"> call you</font>

547
00:21:52,580 --> 00:21:56,960
can go ahead<font color="#E5E5E5"> and exploit</font><font color="#CCCCCC"> it</font><font color="#E5E5E5"> for</font><font color="#CCCCCC"> now we</font>

548
00:21:54,799 --> 00:21:58,789
have constrained it to like<font color="#E5E5E5"> okay</font><font color="#CCCCCC"> there</font>

549
00:21:56,960 --> 00:22:01,610
<font color="#CCCCCC">only 256 calls that you can pass through</font>

550
00:21:58,789 --> 00:22:04,039
<font color="#CCCCCC">it has</font><font color="#E5E5E5"> two implication</font><font color="#CCCCCC"> one obviously</font><font color="#E5E5E5"> you</font>

551
00:22:01,610 --> 00:22:06,168
still have to find bug in only<font color="#E5E5E5"> those 256</font>

552
00:22:04,039 --> 00:22:07,970
calls another when you are actually

553
00:22:06,169 --> 00:22:10,730
<font color="#E5E5E5">writing exploits you</font>

554
00:22:07,970 --> 00:22:12,710
have to rely on other functionality of

555
00:22:10,730 --> 00:22:15,200
the OS as well<font color="#E5E5E5"> like you might</font><font color="#CCCCCC"> be relying</font>

556
00:22:12,710 --> 00:22:18,080
on some<font color="#CCCCCC"> syscall which does pool spraying</font>

557
00:22:15,200 --> 00:22:21,650
right so there is a cascade<font color="#CCCCCC"> of fat to it</font>

558
00:22:18,080 --> 00:22:23,600
so if if that<font color="#E5E5E5"> pool spray</font><font color="#CCCCCC"> API is now</font>

559
00:22:21,650 --> 00:22:25,280
being filtered out<font color="#CCCCCC"> so you may be</font><font color="#E5E5E5"> a</font>

560
00:22:23,600 --> 00:22:28,129
little<font color="#E5E5E5"> more handicapped while writing</font>

561
00:22:25,280 --> 00:22:30,860
the<font color="#CCCCCC"> X quite itself and that helps and if</font>

562
00:22:28,130 --> 00:22:32,930
you<font color="#CCCCCC"> have seen</font><font color="#E5E5E5"> that helping but does it</font>

563
00:22:30,860 --> 00:22:34,010
kill all exploits<font color="#E5E5E5"> or how no it doesn't</font>

564
00:22:32,930 --> 00:22:36,470
we have seen exploits

565
00:22:34,010 --> 00:22:38,480
I mean people<font color="#E5E5E5"> writing exploits even with</font>

566
00:22:36,470 --> 00:22:39,170
that filtration<font color="#E5E5E5"> in place which is</font>

567
00:22:38,480 --> 00:22:41,470
<font color="#CCCCCC">awesome</font><font color="#E5E5E5"> to see</font>

568
00:22:39,170 --> 00:22:44,330
but that doesn't means that this this

569
00:22:41,470 --> 00:22:46,670
this filtering is not significant it is

570
00:22:44,330 --> 00:22:49,280
<font color="#E5E5E5">significant</font><font color="#CCCCCC"> it increases</font><font color="#E5E5E5"> the</font>

571
00:22:46,670 --> 00:22:51,470
exploitation cost<font color="#E5E5E5"> substantial because</font>

572
00:22:49,280 --> 00:22:54,560
now people<font color="#CCCCCC"> have to find bugs</font><font color="#E5E5E5"> only</font><font color="#CCCCCC"> in</font>

573
00:22:51,470 --> 00:23:00,350
those filtered out<font color="#CCCCCC"> sis calls and it</font>

574
00:22:54,560 --> 00:23:03,679
increases the cost<font color="#E5E5E5"> as such alright so</font>

575
00:23:00,350 --> 00:23:04,969
another major<font color="#E5E5E5"> piece was using what call</font>

576
00:23:03,680 --> 00:23:06,770
right now<font color="#CCCCCC"> this is something that I</font><font color="#E5E5E5"> want</font>

577
00:23:04,970 --> 00:23:08,630
<font color="#E5E5E5">to really touch base on because this</font><font color="#CCCCCC"> is</font>

578
00:23:06,770 --> 00:23:11,870
<font color="#E5E5E5">very unique</font><font color="#CCCCCC"> you wouldn't probably see in</font>

579
00:23:08,630 --> 00:23:15,800
any other<font color="#E5E5E5"> system</font><font color="#CCCCCC"> I would</font><font color="#E5E5E5"> be interesting</font>

580
00:23:11,870 --> 00:23:17,570
<font color="#E5E5E5">to know</font><font color="#CCCCCC"> how and why does it</font><font color="#E5E5E5"> here it is a</font>

581
00:23:15,800 --> 00:23:18,649
side effect<font color="#CCCCCC"> of the all redesign and</font>

582
00:23:17,570 --> 00:23:20,270
designing<font color="#E5E5E5"> that I've gone through</font><font color="#CCCCCC"> in</font>

583
00:23:18,650 --> 00:23:23,120
<font color="#CCCCCC">winter</font><font color="#E5E5E5"> decay history so it'll be</font>

584
00:23:20,270 --> 00:23:24,560
interesting<font color="#E5E5E5"> to see</font><font color="#CCCCCC"> why why</font><font color="#E5E5E5"> we had it</font><font color="#CCCCCC"> in</font>

585
00:23:23,120 --> 00:23:26,419
<font color="#E5E5E5">the first place and why it is really</font>

586
00:23:24,560 --> 00:23:30,470
<font color="#CCCCCC">needed by us and why we can actually get</font>

587
00:23:26,420 --> 00:23:32,330
away<font color="#E5E5E5"> from it so what is it so let's take</font>

588
00:23:30,470 --> 00:23:33,830
<font color="#CCCCCC">a look at</font><font color="#E5E5E5"> this diagram which</font><font color="#CCCCCC"> talks</font><font color="#E5E5E5"> about</font>

589
00:23:32,330 --> 00:23:35,530
<font color="#CCCCCC">here you have a user mode and</font><font color="#E5E5E5"> kernel</font>

590
00:23:33,830 --> 00:23:40,040
mode and there is a boundary in between

591
00:23:35,530 --> 00:23:42,139
here is a<font color="#E5E5E5"> process which wants to destroy</font>

592
00:23:40,040 --> 00:23:45,260
a window for instance<font color="#E5E5E5"> so it makes a it</font>

593
00:23:42,140 --> 00:23:47,120
makes<font color="#E5E5E5"> win32 API call which</font><font color="#CCCCCC"> is a user</font>

594
00:23:45,260 --> 00:23:49,910
mode to strive into a car<font color="#E5E5E5"> on the right</font>

595
00:23:47,120 --> 00:23:52,850
side I'm showing a star call stack<font color="#E5E5E5"> which</font>

596
00:23:49,910 --> 00:23:53,480
which<font color="#E5E5E5"> gonna signify hey how my calls are</font>

597
00:23:52,850 --> 00:23:56,240
going<font color="#E5E5E5"> on</font>

598
00:23:53,480 --> 00:23:59,180
so when you make this call<font color="#E5E5E5"> you make a</font>

599
00:23:56,240 --> 00:24:01,640
<font color="#E5E5E5">transition</font><font color="#CCCCCC"> to</font><font color="#E5E5E5"> kernel now I'm for</font>

600
00:23:59,180 --> 00:24:03,230
simplicity<font color="#CCCCCC"> there there</font><font color="#E5E5E5"> are transition</font>

601
00:24:01,640 --> 00:24:04,940
functions<font color="#E5E5E5"> when you actually make from</font>

602
00:24:03,230 --> 00:24:06,830
user<font color="#E5E5E5"> mode to kernel I'm actually just</font>

603
00:24:04,940 --> 00:24:09,770
omitting at this<font color="#CCCCCC"> 4/9</font><font color="#E5E5E5"> because it's not</font>

604
00:24:06,830 --> 00:24:12,470
needed<font color="#CCCCCC"> what is important is you made us</font>

605
00:24:09,770 --> 00:24:14,060
user mode<font color="#E5E5E5"> some functionality call and</font>

606
00:24:12,470 --> 00:24:15,980
then bad which end up<font color="#CCCCCC"> calling a system</font>

607
00:24:14,060 --> 00:24:19,340
call<font color="#CCCCCC"> and on the call stack you can</font><font color="#E5E5E5"> see</font>

608
00:24:15,980 --> 00:24:21,799
both clean<font color="#E5E5E5"> transition now at this point</font>

609
00:24:19,340 --> 00:24:23,509
<font color="#E5E5E5">this function call is supposed this</font>

610
00:24:21,799 --> 00:24:26,690
try the<font color="#E5E5E5"> window which is</font><font color="#CCCCCC"> just an object</font>

611
00:24:23,509 --> 00:24:28,669
<font color="#E5E5E5">in the memory but apparently there</font><font color="#CCCCCC"> is</font>

612
00:24:26,690 --> 00:24:31,639
something<font color="#CCCCCC"> interesting here</font><font color="#E5E5E5"> now what</font>

613
00:24:28,669 --> 00:24:34,070
<font color="#E5E5E5">Windows does is it gives application an</font>

614
00:24:31,639 --> 00:24:35,959
opportunity to do<font color="#E5E5E5"> something extra it's</font>

615
00:24:34,070 --> 00:24:37,999
saying hey why<font color="#CCCCCC"> I'm destroying this</font>

616
00:24:35,960 --> 00:24:41,450
window<font color="#E5E5E5"> let me go back</font><font color="#CCCCCC"> to the application</font>

617
00:24:37,999 --> 00:24:43,639
<font color="#CCCCCC">and</font><font color="#E5E5E5"> the application decide well there it</font>

618
00:24:41,450 --> 00:24:45,230
want<font color="#E5E5E5"> to do anything at this point for</font>

619
00:24:43,639 --> 00:24:47,269
<font color="#E5E5E5">instance maybe you want to save</font>

620
00:24:45,230 --> 00:24:49,700
something<font color="#E5E5E5"> which is there on the window</font>

621
00:24:47,269 --> 00:24:52,090
<font color="#E5E5E5">like create a</font><font color="#CCCCCC"> log or upgrade</font><font color="#E5E5E5"> or</font>

622
00:24:49,700 --> 00:24:54,799
something<font color="#E5E5E5"> so basically it is making you</font>

623
00:24:52,090 --> 00:24:56,090
the application<font color="#CCCCCC"> aware</font><font color="#E5E5E5"> the K I'm going to</font>

624
00:24:54,799 --> 00:24:59,418
<font color="#E5E5E5">destroy this window is there anything</font>

625
00:24:56,090 --> 00:25:01,029
you want<font color="#E5E5E5"> to do and this</font><font color="#CCCCCC"> is where</font><font color="#E5E5E5"> the</font>

626
00:24:59,419 --> 00:25:03,440
<font color="#E5E5E5">user mode callbacks comes into picture</font>

627
00:25:01,029 --> 00:25:04,879
<font color="#E5E5E5">this is very</font><font color="#CCCCCC"> interesting because what</font><font color="#E5E5E5"> we</font>

628
00:25:03,440 --> 00:25:07,669
are<font color="#CCCCCC"> doing</font><font color="#E5E5E5"> right now is we</font><font color="#CCCCCC"> are doing</font>

629
00:25:04,879 --> 00:25:10,488
something<font color="#E5E5E5"> called</font><font color="#CCCCCC"> reverse this</font><font color="#E5E5E5"> calls we</font>

630
00:25:07,669 --> 00:25:13,549
are making a call back<font color="#E5E5E5"> from the kernel</font>

631
00:25:10,489 --> 00:25:15,529
back to the user<font color="#CCCCCC"> and giving the user of</font>

632
00:25:13,549 --> 00:25:17,330
control at this<font color="#CCCCCC"> point</font><font color="#E5E5E5"> saying hey if you</font>

633
00:25:15,529 --> 00:25:19,220
want<font color="#E5E5E5"> to do any action do it once</font><font color="#CCCCCC"> we are</font>

634
00:25:17,330 --> 00:25:23,418
<font color="#CCCCCC">done okay I'm gonna go</font><font color="#E5E5E5"> and destroy this</font>

635
00:25:19,220 --> 00:25:26,629
window so everything<font color="#CCCCCC"> looks fine till</font>

636
00:25:23,419 --> 00:25:30,649
<font color="#E5E5E5">every</font><font color="#CCCCCC"> B</font><font color="#E5E5E5"> processes behaving properly</font><font color="#CCCCCC"> but</font>

637
00:25:26,629 --> 00:25:32,119
what if there is a<font color="#CCCCCC"> malicious user who's</font>

638
00:25:30,649 --> 00:25:34,428
trying to<font color="#E5E5E5"> do something in this callback</font>

639
00:25:32,119 --> 00:25:36,049
now he is not gonna play<font color="#E5E5E5"> easy it's kind</font>

640
00:25:34,429 --> 00:25:38,929
of<font color="#E5E5E5"> played out yet this one</font><font color="#CCCCCC"> what he does</font>

641
00:25:36,049 --> 00:25:39,739
<font color="#E5E5E5">is instead of actually</font><font color="#CCCCCC"> doing</font><font color="#E5E5E5"> something</font>

642
00:25:38,929 --> 00:25:42,169
<font color="#CCCCCC">normal</font>

643
00:25:39,739 --> 00:25:43,639
<font color="#E5E5E5">he goes a hand make a call to destroy</font>

644
00:25:42,169 --> 00:25:47,419
window again<font color="#E5E5E5"> dracky</font>

645
00:25:43,639 --> 00:25:48,769
<font color="#E5E5E5">and at this point with this described</font>

646
00:25:47,419 --> 00:25:50,389
<font color="#CCCCCC">window function in the kernel thinks</font>

647
00:25:48,769 --> 00:25:51,649
<font color="#E5E5E5">okay I have already made us user mode</font>

648
00:25:50,389 --> 00:25:53,689
<font color="#E5E5E5">call back I don't have to make a call</font>

649
00:25:51,649 --> 00:25:56,209
<font color="#CCCCCC">back again</font><font color="#E5E5E5"> let me</font><font color="#CCCCCC"> go ahead</font><font color="#E5E5E5"> and destroy</font>

650
00:25:53,690 --> 00:25:58,309
the windows so so what it does is it

651
00:25:56,210 --> 00:26:00,710
<font color="#E5E5E5">just removes the objects from the memory</font>

652
00:25:58,309 --> 00:26:03,799
and<font color="#CCCCCC"> this</font><font color="#E5E5E5"> is an</font><font color="#CCCCCC"> awesome opportunity now</font>

653
00:26:00,710 --> 00:26:05,690
<font color="#E5E5E5">because you see in the call stack there</font>

654
00:26:03,799 --> 00:26:09,230
is still a reference to that memory

655
00:26:05,690 --> 00:26:10,879
<font color="#E5E5E5">location we haven't reached there yet</font><font color="#CCCCCC"> so</font>

656
00:26:09,230 --> 00:26:13,489
what this guy is<font color="#E5E5E5"> going to do during this</font>

657
00:26:10,879 --> 00:26:16,219
<font color="#E5E5E5">call back he's gonna call a different</font>

658
00:26:13,489 --> 00:26:17,749
function which say creates manual<font color="#E5E5E5"> this</font>

659
00:26:16,220 --> 00:26:19,460
<font color="#E5E5E5">is another object which is going to be</font>

660
00:26:17,749 --> 00:26:22,039
created and<font color="#CCCCCC"> somehow he used this</font>

661
00:26:19,460 --> 00:26:23,960
<font color="#E5E5E5">feng-shui or whatever mechanism to get</font>

662
00:26:22,039 --> 00:26:26,119
his manual object allocated to the exact

663
00:26:23,960 --> 00:26:28,669
same place where<font color="#E5E5E5"> Windows</font><font color="#CCCCCC"> our object was</font>

664
00:26:26,119 --> 00:26:31,178
allocated<font color="#CCCCCC"> before so typical use after</font>

665
00:26:28,669 --> 00:26:33,679
free scenario and when you end<font color="#E5E5E5"> up</font>

666
00:26:31,179 --> 00:26:35,360
getting<font color="#CCCCCC"> back</font><font color="#E5E5E5"> into this function call</font>

667
00:26:33,679 --> 00:26:37,759
which is the kernel<font color="#CCCCCC"> mode</font>

668
00:26:35,360 --> 00:26:40,459
<font color="#CCCCCC">destroy window which was having a</font>

669
00:26:37,759 --> 00:26:42,980
reference<font color="#E5E5E5"> on that stack to a</font><font color="#CCCCCC"> windows</font>

670
00:26:40,460 --> 00:26:45,169
object is now referencing to<font color="#CCCCCC"> manual day</font>

671
00:26:42,980 --> 00:26:48,889
and<font color="#E5E5E5"> obviously if with reference now it's</font>

672
00:26:45,169 --> 00:26:50,779
<font color="#E5E5E5">gonna cause all sort of problems so how</font>

673
00:26:48,889 --> 00:26:52,610
do we<font color="#E5E5E5"> actually fix this</font><font color="#CCCCCC"> I</font><font color="#E5E5E5"> mean in in the</font>

674
00:26:50,779 --> 00:26:54,049
windows<font color="#CCCCCC"> were like if this</font><font color="#E5E5E5"> is</font><font color="#CCCCCC"> a we know</font>

675
00:26:52,610 --> 00:26:54,889
about<font color="#E5E5E5"> this problem this</font><font color="#CCCCCC"> is not something</font>

676
00:26:54,049 --> 00:26:57,470
unknown to us

677
00:26:54,889 --> 00:27:00,229
so from coding perspective<font color="#CCCCCC"> we know that</font>

678
00:26:57,470 --> 00:27:05,110
when we whenever we make a<font color="#E5E5E5"> call back we</font>

679
00:27:00,230 --> 00:27:05,110
do something extra what we do is we put

680
00:27:05,200 --> 00:27:11,809
we put<font color="#E5E5E5"> a lock on the object which means</font>

681
00:27:07,779 --> 00:27:14,389
<font color="#E5E5E5">hey before</font><font color="#CCCCCC"> I actually go and make a call</font>

682
00:27:11,809 --> 00:27:16,999
back<font color="#E5E5E5"> let me</font><font color="#CCCCCC"> put a lock so that this</font>

683
00:27:14,389 --> 00:27:20,269
<font color="#E5E5E5">object will never go away until</font><font color="#CCCCCC"> I unlock</font>

684
00:27:16,999 --> 00:27:22,340
<font color="#CCCCCC">it again</font><font color="#E5E5E5"> so</font><font color="#CCCCCC"> that way my</font><font color="#E5E5E5"> function can</font>

685
00:27:20,269 --> 00:27:23,869
guarantee that<font color="#CCCCCC"> hey no matter how many</font>

686
00:27:22,340 --> 00:27:25,639
callbacks I made<font color="#E5E5E5"> because I have logged</font>

687
00:27:23,869 --> 00:27:27,109
it it's never<font color="#E5E5E5"> going to go away</font><font color="#CCCCCC"> because</font>

688
00:27:25,639 --> 00:27:28,850
system is not going to delete<font color="#E5E5E5"> it</font>

689
00:27:27,109 --> 00:27:31,309
that's way how how you can<font color="#E5E5E5"> solve this</font>

690
00:27:28,850 --> 00:27:34,100
problem<font color="#CCCCCC"> I mean that's the ideal scenario</font>

691
00:27:31,309 --> 00:27:35,749
but obviously it's it's a code that<font color="#E5E5E5"> you</font>

692
00:27:34,100 --> 00:27:36,980
have<font color="#CCCCCC"> to check</font><font color="#E5E5E5"> by yourself</font><font color="#CCCCCC"> like</font><font color="#E5E5E5"> it you</font>

693
00:27:35,749 --> 00:27:38,989
<font color="#CCCCCC">should be</font><font color="#E5E5E5"> aware of when</font><font color="#CCCCCC"> you're writing</font>

694
00:27:36,980 --> 00:27:40,999
<font color="#E5E5E5">this code</font><font color="#CCCCCC"> that hey I</font><font color="#E5E5E5"> need to put a lock</font>

695
00:27:38,989 --> 00:27:44,029
and I need to unlock once I'm done<font color="#CCCCCC"> with</font>

696
00:27:40,999 --> 00:27:45,889
it<font color="#CCCCCC"> and obviously</font><font color="#E5E5E5"> it doesn't always</font>

697
00:27:44,029 --> 00:27:49,330
happen<font color="#E5E5E5"> so</font><font color="#CCCCCC"> that means they're always</font>

698
00:27:45,889 --> 00:27:49,330
going<font color="#E5E5E5"> to</font><font color="#CCCCCC"> be bugs</font><font color="#E5E5E5"> like</font><font color="#CCCCCC"> this in the system</font>

699
00:27:50,379 --> 00:27:56,480
so just to understand this<font color="#E5E5E5"> but VIN 32k</font>

700
00:27:54,350 --> 00:27:58,820
is a very stateless system and<font color="#E5E5E5"> when I am</font>

701
00:27:56,480 --> 00:28:00,710
<font color="#E5E5E5">being by that is when 30k doesn't know</font>

702
00:27:58,820 --> 00:28:03,019
what kind<font color="#CCCCCC"> of state</font><font color="#E5E5E5"> is it has at a given</font>

703
00:28:00,710 --> 00:28:05,629
point<font color="#E5E5E5"> it has to do validation at every</font>

704
00:28:03,019 --> 00:28:08,600
given every<font color="#CCCCCC"> give</font><font color="#E5E5E5"> instance so when it</font>

705
00:28:05,629 --> 00:28:11,059
makes a<font color="#CCCCCC"> callback</font><font color="#E5E5E5"> either it has to make</font>

706
00:28:08,600 --> 00:28:13,070
sure<font color="#CCCCCC"> that</font><font color="#E5E5E5"> a I'm making sure that</font>

707
00:28:11,059 --> 00:28:15,559
whatever<font color="#CCCCCC"> I am working</font><font color="#E5E5E5"> on is going to</font>

708
00:28:13,070 --> 00:28:16,789
<font color="#E5E5E5">stay like this when I am back from</font><font color="#CCCCCC"> this</font>

709
00:28:15,559 --> 00:28:19,759
<font color="#CCCCCC">callback because</font><font color="#E5E5E5"> call</font><font color="#CCCCCC"> back can</font><font color="#E5E5E5"> do</font>

710
00:28:16,789 --> 00:28:22,820
anything<font color="#CCCCCC"> it can do any</font><font color="#E5E5E5"> kind of damage or</font>

711
00:28:19,759 --> 00:28:24,710
it<font color="#E5E5E5"> has to revalidate everything after</font>

712
00:28:22,820 --> 00:28:26,330
the callback is returned so those are

713
00:28:24,710 --> 00:28:28,460
the<font color="#CCCCCC"> stances that you need to take as a</font>

714
00:28:26,330 --> 00:28:30,949
part of<font color="#E5E5E5"> the code itself because there is</font>

715
00:28:28,460 --> 00:28:32,899
no state<font color="#CCCCCC"> that is being maintained</font><font color="#E5E5E5"> and</font>

716
00:28:30,950 --> 00:28:35,119
<font color="#CCCCCC">obviously this</font><font color="#E5E5E5"> is a complex problem</font>

717
00:28:32,899 --> 00:28:35,709
<font color="#E5E5E5">because anything can happen during that</font>

718
00:28:35,119 --> 00:28:37,730
<font color="#CCCCCC">callback</font>

719
00:28:35,710 --> 00:28:40,369
literally like once you<font color="#E5E5E5"> are out of the</font>

720
00:28:37,730 --> 00:28:42,409
panel context and in<font color="#CCCCCC"> the user mode you</font>

721
00:28:40,369 --> 00:28:44,299
can do anything<font color="#CCCCCC"> you can</font><font color="#E5E5E5"> pretty much call</font>

722
00:28:42,409 --> 00:28:47,029
any system calls<font color="#CCCCCC"> and make the system</font>

723
00:28:44,299 --> 00:28:48,059
<font color="#E5E5E5">unstable</font><font color="#CCCCCC"> dlink some</font><font color="#E5E5E5"> of the windows and</font>

724
00:28:47,029 --> 00:28:50,759
<font color="#E5E5E5">all that stuff</font><font color="#CCCCCC"> so you</font>

725
00:28:48,059 --> 00:28:52,109
complete control<font color="#CCCCCC"> at that</font><font color="#E5E5E5"> point it</font>

726
00:28:50,759 --> 00:28:54,840
becomes a lot<font color="#CCCCCC"> more difficult for</font><font color="#E5E5E5"> user</font>

727
00:28:52,109 --> 00:28:58,649
<font color="#CCCCCC">win</font><font color="#E5E5E5"> 30k code to keep track of everything</font>

728
00:28:54,840 --> 00:29:00,658
<font color="#E5E5E5">going around and obviously as we see use</font>

729
00:28:58,649 --> 00:29:02,728
after<font color="#E5E5E5"> pre bugs pops up because</font><font color="#CCCCCC"> of these</font>

730
00:29:00,659 --> 00:29:04,320
kind of these kind of design things<font color="#E5E5E5"> that</font>

731
00:29:02,729 --> 00:29:06,929
have gone in the picture

732
00:29:04,320 --> 00:29:09,570
and<font color="#CCCCCC"> when use up</font><font color="#E5E5E5"> the pre happens that</font>

733
00:29:06,929 --> 00:29:11,009
gives you one of the<font color="#CCCCCC"> THOG</font><font color="#E5E5E5"> on the exploit</font>

734
00:29:09,570 --> 00:29:14,549
machine that we were<font color="#CCCCCC"> looking</font><font color="#E5E5E5"> at which</font><font color="#CCCCCC"> is</font>

735
00:29:11,009 --> 00:29:17,369
<font color="#CCCCCC">the memory</font><font color="#E5E5E5"> corruption model so what is</font>

736
00:29:14,549 --> 00:29:18,840
the solution to<font color="#CCCCCC"> this we said like</font><font color="#E5E5E5"> I</font><font color="#CCCCCC"> said</font>

737
00:29:17,369 --> 00:29:20,488
<font color="#CCCCCC">couple of</font><font color="#E5E5E5"> years back thinking about</font><font color="#CCCCCC"> okay</font>

738
00:29:18,840 --> 00:29:23,488
this<font color="#E5E5E5"> is</font><font color="#CCCCCC"> a this is a pretty prominent</font>

739
00:29:20,489 --> 00:29:25,169
<font color="#E5E5E5">problem what do we do for it and</font>

740
00:29:23,489 --> 00:29:26,549
<font color="#E5E5E5">obviously we have to still work on the</font>

741
00:29:25,169 --> 00:29:28,259
two pillars that<font color="#E5E5E5"> I mentioned the poor</font>

742
00:29:26,549 --> 00:29:31,259
<font color="#CCCCCC">from the</font><font color="#E5E5E5"> app compat so we cannot</font>

743
00:29:28,259 --> 00:29:33,899
<font color="#CCCCCC">absolutely break this feature</font><font color="#E5E5E5"> so what we</font>

744
00:29:31,259 --> 00:29:36,989
said okay<font color="#E5E5E5"> let's think about mam TC is</font>

745
00:29:33,899 --> 00:29:39,418
actually pretty<font color="#CCCCCC"> easy</font><font color="#E5E5E5"> a pretty fun way to</font>

746
00:29:36,989 --> 00:29:40,799
do the exact same<font color="#E5E5E5"> thing it's gonna make</font>

747
00:29:39,419 --> 00:29:43,440
sure<font color="#E5E5E5"> that the stack references are</font>

748
00:29:40,799 --> 00:29:45,029
saying if you try to<font color="#E5E5E5"> destroy some object</font>

749
00:29:43,440 --> 00:29:46,830
<font color="#E5E5E5">in is there is a reference on the stack</font>

750
00:29:45,029 --> 00:29:49,200
<font color="#E5E5E5">then I'm not going to destroy it let you</font>

751
00:29:46,830 --> 00:29:50,218
destroy<font color="#CCCCCC"> it I'm going to wait on it so we</font>

752
00:29:49,200 --> 00:29:52,769
<font color="#CCCCCC">thought about</font><font color="#E5E5E5"> it</font><font color="#CCCCCC"> hell we're</font><font color="#E5E5E5"> gonna</font>

753
00:29:50,219 --> 00:29:54,570
introduce mam<font color="#E5E5E5"> GC in in the picture it</font>

754
00:29:52,769 --> 00:29:56,639
was<font color="#E5E5E5"> very complicated story we end up</font>

755
00:29:54,570 --> 00:29:58,678
<font color="#E5E5E5">really figuring out that mam GC is gonna</font>

756
00:29:56,639 --> 00:30:02,248
be very complex to<font color="#E5E5E5"> do in kernel there is</font>

757
00:29:58,679 --> 00:30:03,809
no precedence to that today<font color="#E5E5E5"> so we</font><font color="#CCCCCC"> we've</font>

758
00:30:02,249 --> 00:30:04,979
and on the board and<font color="#CCCCCC"> fred-bag went back</font>

759
00:30:03,809 --> 00:30:07,349
on the board and thought okay<font color="#CCCCCC"> that is</font>

760
00:30:04,979 --> 00:30:09,719
that there are more ways<font color="#CCCCCC"> to do it</font><font color="#E5E5E5"> let's</font>

761
00:30:07,349 --> 00:30:13,168
do it<font color="#E5E5E5"> something called stack reference</font>

762
00:30:09,719 --> 00:30:15,960
<font color="#CCCCCC">back</font><font color="#E5E5E5"> up and let's think of</font><font color="#CCCCCC"> it this way</font>

763
00:30:13,169 --> 00:30:17,940
<font color="#E5E5E5">so we have an object which</font><font color="#CCCCCC"> is already</font>

764
00:30:15,960 --> 00:30:20,279
<font color="#E5E5E5">created for you and</font><font color="#CCCCCC"> there is a kernel</font>

765
00:30:17,940 --> 00:30:25,799
stack<font color="#E5E5E5"> every time you create a reference</font>

766
00:30:20,279 --> 00:30:27,989
to that object<font color="#E5E5E5"> like this we we make sure</font>

767
00:30:25,799 --> 00:30:30,059
that<font color="#CCCCCC"> we know what references are being</font>

768
00:30:27,989 --> 00:30:32,999
capped<font color="#E5E5E5"> on the on the kernel stack</font>

769
00:30:30,059 --> 00:30:35,190
through the object itself<font color="#E5E5E5"> so object is</font>

770
00:30:32,999 --> 00:30:37,799
now extended to<font color="#E5E5E5"> carry another</font><font color="#CCCCCC"> linked</font>

771
00:30:35,190 --> 00:30:40,169
list and the<font color="#E5E5E5"> linked list is going to</font>

772
00:30:37,799 --> 00:30:43,139
<font color="#E5E5E5">keep</font><font color="#CCCCCC"> increasing every time you create an</font>

773
00:30:40,169 --> 00:30:45,929
object<font color="#E5E5E5"> on the kernel stack so at any</font>

774
00:30:43,139 --> 00:30:48,359
<font color="#CCCCCC">given moment the object knows what</font>

775
00:30:45,929 --> 00:30:49,919
references are there in on the kernel

776
00:30:48,359 --> 00:30:51,509
stacks<font color="#E5E5E5"> and this is not</font><font color="#CCCCCC"> just the one</font>

777
00:30:49,919 --> 00:30:52,919
stack<font color="#E5E5E5"> this</font><font color="#CCCCCC"> is just a</font><font color="#E5E5E5"> view of it there</font>

778
00:30:51,509 --> 00:30:55,169
<font color="#E5E5E5">are multiple stacks that can also be</font>

779
00:30:52,919 --> 00:30:56,970
there<font color="#E5E5E5"> and every stack has I gonna it's</font>

780
00:30:55,169 --> 00:30:58,950
gonna<font color="#E5E5E5"> keep a</font><font color="#CCCCCC"> reference the way it has</font>

781
00:30:56,970 --> 00:31:01,640
been<font color="#CCCCCC"> kept right now and what's gonna</font>

782
00:30:58,950 --> 00:31:04,700
<font color="#E5E5E5">happen if I destroy the</font><font color="#CCCCCC"> object</font>

783
00:31:01,640 --> 00:31:06,800
so before<font color="#E5E5E5"> destroying the object</font><font color="#CCCCCC"> I do one</font>

784
00:31:04,700 --> 00:31:09,320
action<font color="#CCCCCC"> which is I walk</font><font color="#E5E5E5"> through the</font><font color="#CCCCCC"> hole</font>

785
00:31:06,800 --> 00:31:12,320
<font color="#CCCCCC">Colonel whatever the list that</font><font color="#E5E5E5"> I've</font>

786
00:31:09,320 --> 00:31:14,360
created<font color="#E5E5E5"> and</font><font color="#CCCCCC"> start nullifying them what</font>

787
00:31:12,320 --> 00:31:17,450
does it give me like it's an opportunity

788
00:31:14,360 --> 00:31:18,679
what does means is now while I am

789
00:31:17,450 --> 00:31:21,350
<font color="#E5E5E5">destroying this</font><font color="#CCCCCC"> object</font>

790
00:31:18,680 --> 00:31:24,650
I'm also wiping out all<font color="#CCCCCC"> the references</font>

791
00:31:21,350 --> 00:31:26,840
on<font color="#E5E5E5"> the stacks which which means the next</font>

792
00:31:24,650 --> 00:31:29,270
<font color="#E5E5E5">time if there is use up to three or so</font>

793
00:31:26,840 --> 00:31:31,159
if you start to use that<font color="#CCCCCC"> reference</font><font color="#E5E5E5"> it is</font>

794
00:31:29,270 --> 00:31:33,440
all already<font color="#E5E5E5"> nullified it is a nexus and</font>

795
00:31:31,160 --> 00:31:35,300
you might<font color="#E5E5E5"> end up doing null dereference</font>

796
00:31:33,440 --> 00:31:38,030
<font color="#E5E5E5">which will still result into a denial of</font>

797
00:31:35,300 --> 00:31:41,000
service<font color="#CCCCCC"> or a</font><font color="#E5E5E5"> das basically or a blue</font>

798
00:31:38,030 --> 00:31:43,340
screen<font color="#CCCCCC"> of death but it's</font><font color="#E5E5E5"> not gonna make</font>

799
00:31:41,000 --> 00:31:45,140
<font color="#E5E5E5">your exploit to work anymore because we</font>

800
00:31:43,340 --> 00:31:50,000
are we have stopped you from referencing

801
00:31:45,140 --> 00:31:51,050
it<font color="#E5E5E5"> to actual memory location and here</font>

802
00:31:50,000 --> 00:31:53,120
are<font color="#E5E5E5"> some of the objects that we</font>

803
00:31:51,050 --> 00:31:54,740
enlighten<font color="#CCCCCC"> in with</font><font color="#E5E5E5"> like menu object</font><font color="#CCCCCC"> and</font>

804
00:31:53,120 --> 00:31:57,379
pop up these we<font color="#E5E5E5"> actually took a dig at</font>

805
00:31:54,740 --> 00:32:00,110
<font color="#E5E5E5">how how what are the most common objects</font>

806
00:31:57,380 --> 00:32:01,550
which have<font color="#E5E5E5"> been</font><font color="#CCCCCC"> used in the six and uses</font>

807
00:32:00,110 --> 00:32:04,520
you through<font color="#E5E5E5"> for this kind of</font>

808
00:32:01,550 --> 00:32:08,060
exploitation<font color="#E5E5E5"> and we add up those</font><font color="#CCCCCC"> or</font><font color="#E5E5E5"> is</font>

809
00:32:04,520 --> 00:32:09,620
this<font color="#E5E5E5"> medication for</font><font color="#CCCCCC"> those objects more</font>

810
00:32:08,060 --> 00:32:12,350
objects are getting at it as based on

811
00:32:09,620 --> 00:32:15,709
opportunity<font color="#CCCCCC"> as it arise and</font><font color="#E5E5E5"> obviously</font>

812
00:32:12,350 --> 00:32:18,199
the impact<font color="#E5E5E5"> is we were looking</font><font color="#CCCCCC"> at</font><font color="#E5E5E5"> code</font>

813
00:32:15,710 --> 00:32:20,330
execution at some point<font color="#CCCCCC"> now this</font>

814
00:32:18,200 --> 00:32:23,750
mitigation converts<font color="#E5E5E5"> that</font><font color="#CCCCCC"> cause execution</font>

815
00:32:20,330 --> 00:32:25,010
into<font color="#CCCCCC"> denial of services</font><font color="#E5E5E5"> so it's a</font>

816
00:32:23,750 --> 00:32:28,370
complete transformation<font color="#CCCCCC"> from that</font>

817
00:32:25,010 --> 00:32:30,230
perspective<font color="#E5E5E5"> and this makes the bugs icon</font>

818
00:32:28,370 --> 00:32:33,340
exploitable from that standpoint<font color="#E5E5E5"> because</font>

819
00:32:30,230 --> 00:32:33,340
you can't exploit<font color="#CCCCCC"> this</font><font color="#E5E5E5"> anymore</font>

820
00:32:34,540 --> 00:32:39,770
so the third piece we were looking<font color="#E5E5E5"> at is</font>

821
00:32:36,890 --> 00:32:43,070
<font color="#E5E5E5">a shared data so shared data is actually</font>

822
00:32:39,770 --> 00:32:46,100
<font color="#E5E5E5">very common between user and kernel mode</font>

823
00:32:43,070 --> 00:32:49,580
space<font color="#E5E5E5"> a lot of drivers uses it to</font>

824
00:32:46,100 --> 00:32:50,840
transfer<font color="#E5E5E5"> data in in back and forth but</font>

825
00:32:49,580 --> 00:32:53,840
when theta<font color="#CCCCCC"> K has some very</font><font color="#E5E5E5"> unique</font>

826
00:32:50,840 --> 00:32:56,179
requirements so two<font color="#E5E5E5"> requirements that</font>

827
00:32:53,840 --> 00:32:59,209
I've<font color="#E5E5E5"> listed</font><font color="#CCCCCC"> here are handle tables</font><font color="#E5E5E5"> and</font>

828
00:32:56,180 --> 00:33:01,070
<font color="#CCCCCC">desktop</font><font color="#E5E5E5"> now handle table if you if you</font>

829
00:32:59,210 --> 00:33:03,740
have if you<font color="#CCCCCC"> have ever worked</font><font color="#E5E5E5"> on win32</font>

830
00:33:01,070 --> 00:33:06,530
<font color="#E5E5E5">api space you know you</font><font color="#CCCCCC"> actually don't</font>

831
00:33:03,740 --> 00:33:08,600
deal with pointers<font color="#E5E5E5"> and more all you get</font>

832
00:33:06,530 --> 00:33:10,879
<font color="#E5E5E5">is handles handle to a window handle to</font>

833
00:33:08,600 --> 00:33:14,060
a man who whatever you get back<font color="#CCCCCC"> from an</font>

834
00:33:10,880 --> 00:33:15,170
<font color="#CCCCCC">api is</font><font color="#E5E5E5"> in handle and what does handle</font>

835
00:33:14,060 --> 00:33:17,840
means<font color="#E5E5E5"> it's actually</font>

836
00:33:15,170 --> 00:33:19,220
<font color="#E5E5E5">handle is just</font><font color="#CCCCCC"> an index into</font><font color="#E5E5E5"> some table</font>

837
00:33:17,840 --> 00:33:22,580
that we carry which actually has the

838
00:33:19,220 --> 00:33:24,560
<font color="#CCCCCC">actual pointers to the objects</font><font color="#E5E5E5"> and that</font>

839
00:33:22,580 --> 00:33:29,000
is the handle table we are talking about

840
00:33:24,560 --> 00:33:32,149
<font color="#CCCCCC">with</font><font color="#E5E5E5"> and extra heap is something that we</font>

841
00:33:29,000 --> 00:33:34,070
are sharing just for<font color="#E5E5E5"> sheer optimizations</font>

842
00:33:32,150 --> 00:33:36,380
<font color="#E5E5E5">where we say hey</font><font color="#CCCCCC"> if we are going to</font>

843
00:33:34,070 --> 00:33:39,230
share<font color="#E5E5E5"> some of the objects from</font><font color="#CCCCCC"> in</font>

844
00:33:36,380 --> 00:33:41,390
dedicated says to the user so<font color="#CCCCCC"> that user</font>

845
00:33:39,230 --> 00:33:43,400
<font color="#E5E5E5">can run some optimization and make</font>

846
00:33:41,390 --> 00:33:46,340
things faster<font color="#E5E5E5"> so we'll talk</font><font color="#CCCCCC"> about this</font><font color="#E5E5E5"> a</font>

847
00:33:43,400 --> 00:33:47,900
little more in the<font color="#CCCCCC"> next slide</font><font color="#E5E5E5"> so for</font>

848
00:33:46,340 --> 00:33:49,820
<font color="#E5E5E5">example this is what the</font><font color="#CCCCCC"> system looked</font>

849
00:33:47,900 --> 00:33:52,190
like so you have<font color="#CCCCCC"> a handle table which is</font>

850
00:33:49,820 --> 00:33:54,530
<font color="#CCCCCC">in the kernel</font><font color="#E5E5E5"> or</font><font color="#CCCCCC"> it is holding the</font>

851
00:33:52,190 --> 00:33:57,050
kernel pointers to actual objects for a

852
00:33:54,530 --> 00:33:59,090
given handle apparently we also share it

853
00:33:57,050 --> 00:34:03,230
with user mode and<font color="#E5E5E5"> the reason why we do</font>

854
00:33:59,090 --> 00:34:07,040
<font color="#CCCCCC">it is to give an opportunity for</font><font color="#E5E5E5"> user to</font>

855
00:34:03,230 --> 00:34:09,260
make<font color="#E5E5E5"> basically understanding of whether</font>

856
00:34:07,040 --> 00:34:10,790
a handle is valid or<font color="#CCCCCC"> not</font><font color="#E5E5E5"> it doesn't have</font>

857
00:34:09,260 --> 00:34:12,650
to actually<font color="#E5E5E5"> go into the</font><font color="#CCCCCC"> kernel mode too</font>

858
00:34:10,790 --> 00:34:14,239
to make<font color="#E5E5E5"> that assumption</font><font color="#CCCCCC"> so it can</font>

859
00:34:12,650 --> 00:34:16,340
because the the view is shared

860
00:34:14,239 --> 00:34:18,319
<font color="#CCCCCC">it's a read-only view but still</font><font color="#E5E5E5"> shared</font>

861
00:34:16,340 --> 00:34:20,510
so user can actually<font color="#CCCCCC"> take a look at</font><font color="#E5E5E5"> it</font>

862
00:34:18,320 --> 00:34:22,580
and say oh I know this handle is invalid

863
00:34:20,510 --> 00:34:23,990
<font color="#CCCCCC">so let me not make up an context</font><font color="#E5E5E5"> switch</font>

864
00:34:22,580 --> 00:34:25,610
and just<font color="#CCCCCC"> go back to the application</font>

865
00:34:23,989 --> 00:34:28,100
saying hey dude give me another handle

866
00:34:25,610 --> 00:34:31,280
<font color="#E5E5E5">this is not so this is for</font><font color="#CCCCCC"> optimization</font>

867
00:34:28,100 --> 00:34:33,110
<font color="#E5E5E5">again and then there are obviously</font>

868
00:34:31,280 --> 00:34:34,820
objects in<font color="#E5E5E5"> which are all over the pool</font>

869
00:34:33,110 --> 00:34:38,660
memory which which are<font color="#E5E5E5"> being referenced</font>

870
00:34:34,820 --> 00:34:40,730
in the handle table<font color="#E5E5E5"> and there is a</font><font color="#CCCCCC"> sir</font>

871
00:34:38,659 --> 00:34:42,830
<font color="#CCCCCC">some set of objects are being shared</font>

872
00:34:40,730 --> 00:34:44,840
back to the user<font color="#E5E5E5"> mode through something</font>

873
00:34:42,830 --> 00:34:46,759
called extra<font color="#CCCCCC"> people</font><font color="#E5E5E5"> and why do we do</font>

874
00:34:44,840 --> 00:34:49,550
<font color="#E5E5E5">that again again for optimizations in</font>

875
00:34:46,760 --> 00:34:52,370
<font color="#CCCCCC">case you want to</font><font color="#E5E5E5"> know hey I'm trying to</font>

876
00:34:49,550 --> 00:34:53,990
send<font color="#E5E5E5"> a message</font><font color="#CCCCCC"> to a window process might</font>

877
00:34:52,370 --> 00:34:56,659
want<font color="#CCCCCC"> to know aid is this window of my</font>

878
00:34:53,989 --> 00:34:57,950
parent<font color="#E5E5E5"> window or not</font><font color="#CCCCCC"> so for that</font><font color="#E5E5E5"> it</font>

879
00:34:56,659 --> 00:34:59,930
doesn't have to<font color="#E5E5E5"> actually</font><font color="#CCCCCC"> make a context</font>

880
00:34:57,950 --> 00:35:02,419
to<font color="#E5E5E5"> do the kernel instead it can look at</font>

881
00:34:59,930 --> 00:35:04,819
the text<font color="#CCCCCC"> of heap and use</font><font color="#E5E5E5"> that as a</font>

882
00:35:02,420 --> 00:35:06,440
primer and make<font color="#E5E5E5"> that decision whether it</font>

883
00:35:04,820 --> 00:35:08,630
should I actually<font color="#E5E5E5"> send it to which</font>

884
00:35:06,440 --> 00:35:11,060
windows or should I even send it<font color="#E5E5E5"> or not</font>

885
00:35:08,630 --> 00:35:14,420
in the first<font color="#E5E5E5"> place so that that's why we</font>

886
00:35:11,060 --> 00:35:18,500
have this<font color="#E5E5E5"> by design these are for</font>

887
00:35:14,420 --> 00:35:20,300
optimizations but apparently they also

888
00:35:18,500 --> 00:35:23,000
do something<font color="#E5E5E5"> interesting</font>

889
00:35:20,300 --> 00:35:25,610
they also leak pointers kernel pointers

890
00:35:23,000 --> 00:35:27,200
which was<font color="#CCCCCC"> really</font><font color="#E5E5E5"> sacred at some point</font>

891
00:35:25,610 --> 00:35:29,130
<font color="#E5E5E5">like right now we want to make sure</font>

892
00:35:27,200 --> 00:35:31,169
nothing is<font color="#E5E5E5"> leaked back to the user but</font>

893
00:35:29,130 --> 00:35:36,570
by design<font color="#CCCCCC"> it's actually</font><font color="#E5E5E5"> leaking these</font>

894
00:35:31,170 --> 00:35:38,310
what does it mean okay so why oh I

895
00:35:36,570 --> 00:35:41,160
already talked why if someone<font color="#CCCCCC"> I just run</font>

896
00:35:38,310 --> 00:35:43,290
through this what does<font color="#E5E5E5"> it mean</font><font color="#CCCCCC"> why are</font>

897
00:35:41,160 --> 00:35:45,540
we<font color="#CCCCCC"> leaking these pointers</font><font color="#E5E5E5"> and what does</font>

898
00:35:43,290 --> 00:35:46,680
<font color="#CCCCCC">it</font><font color="#E5E5E5"> mean from security standpoint well</font>

899
00:35:45,540 --> 00:35:49,470
there is a<font color="#E5E5E5"> cause that we talked about</font>

900
00:35:46,680 --> 00:35:52,950
<font color="#E5E5E5">the</font><font color="#CCCCCC"> ksl are bypasses cancel</font><font color="#E5E5E5"> it is about</font>

901
00:35:49,470 --> 00:35:55,379
hey do I know how the layout<font color="#CCCCCC"> of Colonel</font>

902
00:35:52,950 --> 00:35:57,600
looks like and if I end up sending<font color="#E5E5E5"> all</font>

903
00:35:55,380 --> 00:36:01,650
these content back to the user by

904
00:35:57,600 --> 00:36:03,779
default<font color="#E5E5E5"> then that</font><font color="#CCCCCC"> cog is non-existent</font>

905
00:36:01,650 --> 00:36:06,150
<font color="#CCCCCC">that means you are</font><font color="#E5E5E5"> already</font><font color="#CCCCCC"> getting that</font>

906
00:36:03,780 --> 00:36:08,340
<font color="#E5E5E5">dog even without finding any bug in</font>

907
00:36:06,150 --> 00:36:12,660
<font color="#E5E5E5">Windows system so there is a</font><font color="#CCCCCC"> PI design</font>

908
00:36:08,340 --> 00:36:14,400
leaks of pointers<font color="#E5E5E5"> because of the the</font>

909
00:36:12,660 --> 00:36:20,399
<font color="#E5E5E5">features that we have added in in this</font>

910
00:36:14,400 --> 00:36:21,480
case of systems so how<font color="#CCCCCC"> do</font><font color="#E5E5E5"> we fix it like</font>

911
00:36:20,400 --> 00:36:23,490
I mean<font color="#CCCCCC"> you would have thought about hey</font>

912
00:36:21,480 --> 00:36:25,470
<font color="#E5E5E5">okay</font><font color="#CCCCCC"> you could have easily remove this</font>

913
00:36:23,490 --> 00:36:27,680
it is not<font color="#E5E5E5"> necessary what's the point of</font>

914
00:36:25,470 --> 00:36:30,180
having giving<font color="#E5E5E5"> this control</font><font color="#CCCCCC"> to the user</font>

915
00:36:27,680 --> 00:36:31,620
we thought about this and then we<font color="#E5E5E5"> said</font>

916
00:36:30,180 --> 00:36:33,299
hey it's not<font color="#E5E5E5"> that</font><font color="#CCCCCC"> easy</font>

917
00:36:31,620 --> 00:36:35,720
we have<font color="#E5E5E5"> pillars that we need to worry</font>

918
00:36:33,300 --> 00:36:38,580
<font color="#CCCCCC">about like the perf</font><font color="#E5E5E5"> and the regression</font>

919
00:36:35,720 --> 00:36:40,680
<font color="#E5E5E5">pillars and obviously we can't just</font>

920
00:36:38,580 --> 00:36:43,140
remove<font color="#E5E5E5"> it so we have to work around it</font>

921
00:36:40,680 --> 00:36:46,500
<font color="#E5E5E5">and this is what the work we did so we</font>

922
00:36:43,140 --> 00:36:48,900
thought<font color="#CCCCCC"> okay veno point this this thing</font>

923
00:36:46,500 --> 00:36:51,390
is<font color="#E5E5E5"> needed what we can do is instead</font><font color="#CCCCCC"> is</font>

924
00:36:48,900 --> 00:36:54,390
instead<font color="#E5E5E5"> of say is sharing pointers we</font>

925
00:36:51,390 --> 00:36:56,819
can share<font color="#E5E5E5"> offsets which will give them</font>

926
00:36:54,390 --> 00:36:59,640
what they want or won't actually give

927
00:36:56,820 --> 00:37:03,150
them the<font color="#E5E5E5"> pointers or the the idea of how</font>

928
00:36:59,640 --> 00:37:05,790
the kernel memory is laid<font color="#CCCCCC"> out</font><font color="#E5E5E5"> so</font>

929
00:37:03,150 --> 00:37:07,350
<font color="#E5E5E5">obviously we</font><font color="#CCCCCC"> have</font><font color="#E5E5E5"> to spread few things</font>

930
00:37:05,790 --> 00:37:09,509
like<font color="#E5E5E5"> the kernel table is actually</font><font color="#CCCCCC"> split</font>

931
00:37:07,350 --> 00:37:11,700
<font color="#CCCCCC">into two halves</font><font color="#E5E5E5"> to do that where one</font>

932
00:37:09,510 --> 00:37:13,350
portion carries the portion which<font color="#CCCCCC"> is</font>

933
00:37:11,700 --> 00:37:15,779
shared which can go fine which has

934
00:37:13,350 --> 00:37:17,549
offsets<font color="#E5E5E5"> but</font><font color="#CCCCCC"> the second portion contains</font>

935
00:37:15,780 --> 00:37:19,770
the actual kernel pointers<font color="#E5E5E5"> because that</font>

936
00:37:17,550 --> 00:37:20,640
is also<font color="#E5E5E5"> needed by the kernel because we</font>

937
00:37:19,770 --> 00:37:22,140
don't want<font color="#E5E5E5"> to touch too much</font>

938
00:37:20,640 --> 00:37:25,490
<font color="#E5E5E5">functionality at the end of the day</font>

939
00:37:22,140 --> 00:37:25,490
because<font color="#E5E5E5"> everything is still needed</font>

940
00:37:25,640 --> 00:37:31,500
<font color="#CCCCCC">similarly if you think about</font><font color="#E5E5E5"> it now the</font>

941
00:37:28,740 --> 00:37:33,660
offset is still<font color="#E5E5E5"> trying to get to the</font>

942
00:37:31,500 --> 00:37:35,880
desktop<font color="#E5E5E5"> because next</font><font color="#CCCCCC"> top heap is still</font>

943
00:37:33,660 --> 00:37:37,589
necessary for optimization<font color="#CCCCCC"> like I said</font>

944
00:37:35,880 --> 00:37:40,710
we still have to keep the perf<font color="#E5E5E5"> running</font>

945
00:37:37,590 --> 00:37:42,930
the way<font color="#E5E5E5"> it was so the way we managed was</font>

946
00:37:40,710 --> 00:37:45,180
like we know<font color="#E5E5E5"> the offset is now the off</font>

947
00:37:42,930 --> 00:37:47,549
set into the text of people<font color="#E5E5E5"> so earlier</font>

948
00:37:45,180 --> 00:37:49,770
it was pointer now it is an offset<font color="#E5E5E5"> which</font>

949
00:37:47,550 --> 00:37:52,410
gives us<font color="#E5E5E5"> fan</font><font color="#CCCCCC"> effect like unless you know</font>

950
00:37:49,770 --> 00:37:54,059
the<font color="#E5E5E5"> actual base address</font><font color="#CCCCCC"> of this text</font><font color="#E5E5E5"> up</font>

951
00:37:52,410 --> 00:37:56,578
<font color="#CCCCCC">heap you wouldn't actually know where</font>

952
00:37:54,059 --> 00:38:00,420
the<font color="#CCCCCC"> actual allocation of this object has</font>

953
00:37:56,579 --> 00:38:02,760
gone through similarly for the the

954
00:38:00,420 --> 00:38:04,980
<font color="#CCCCCC">dexter peeve</font><font color="#E5E5E5"> there were there pointers</font>

955
00:38:02,760 --> 00:38:06,990
around because<font color="#E5E5E5"> object can actually carry</font>

956
00:38:04,980 --> 00:38:09,000
pointers to different objects<font color="#CCCCCC"> or it can</font>

957
00:38:06,990 --> 00:38:10,979
actually<font color="#CCCCCC"> have function pointers so we</font>

958
00:38:09,000 --> 00:38:12,960
don't want<font color="#E5E5E5"> those</font><font color="#CCCCCC"> things to be going back</font>

959
00:38:10,980 --> 00:38:14,400
to<font color="#CCCCCC"> the user mode so we do the exact</font><font color="#E5E5E5"> same</font>

960
00:38:12,960 --> 00:38:16,619
thing which we did with the kernel

961
00:38:14,400 --> 00:38:18,510
handle table<font color="#E5E5E5"> strip out</font><font color="#CCCCCC"> the content which</font>

962
00:38:16,619 --> 00:38:20,819
is<font color="#E5E5E5"> not</font><font color="#CCCCCC"> necessarily split into two halves</font>

963
00:38:18,510 --> 00:38:22,859
<font color="#E5E5E5">one which is fine</font><font color="#CCCCCC"> to</font><font color="#E5E5E5"> share with the user</font>

964
00:38:20,819 --> 00:38:24,990
<font color="#E5E5E5">one is not and we're going to keep that</font>

965
00:38:22,859 --> 00:38:27,058
in the kernel<font color="#E5E5E5"> that's all so it was it</font>

966
00:38:24,990 --> 00:38:29,970
looks fine on<font color="#E5E5E5"> paper</font><font color="#CCCCCC"> but is a</font><font color="#E5E5E5"> very</font>

967
00:38:27,059 --> 00:38:31,980
complex thing<font color="#CCCCCC"> to actually</font><font color="#E5E5E5"> make it work</font>

968
00:38:29,970 --> 00:38:33,390
because<font color="#CCCCCC"> we</font><font color="#E5E5E5"> don't want to change</font><font color="#CCCCCC"> again</font>

969
00:38:31,980 --> 00:38:35,280
<font color="#E5E5E5">you know I change too much code and the</font>

970
00:38:33,390 --> 00:38:38,220
<font color="#CCCCCC">underline so we had to use</font><font color="#E5E5E5"> C++</font>

971
00:38:35,280 --> 00:38:40,349
primitives like smart pointers<font color="#E5E5E5"> which can</font>

972
00:38:38,220 --> 00:38:43,410
make<font color="#E5E5E5"> a decision</font><font color="#CCCCCC"> okay</font><font color="#E5E5E5"> should am I gonna</font>

973
00:38:40,349 --> 00:38:45,809
go<font color="#E5E5E5"> in this exclusive portion and I'm</font>

974
00:38:43,410 --> 00:38:48,868
gonna go into the like a shared portion

975
00:38:45,809 --> 00:38:50,730
and<font color="#E5E5E5"> apparently when 30k was not written</font>

976
00:38:48,869 --> 00:38:52,589
<font color="#E5E5E5">in C++</font><font color="#CCCCCC"> that's math it was very much</font>

977
00:38:50,730 --> 00:38:55,170
<font color="#E5E5E5">written in C there</font><font color="#CCCCCC"> was some portion in</font>

978
00:38:52,589 --> 00:38:57,660
C++<font color="#E5E5E5"> so we have to lift the code</font><font color="#CCCCCC"> of bed</font>

979
00:38:55,170 --> 00:39:00,510
to make sure it works in<font color="#E5E5E5"> C++ environment</font>

980
00:38:57,660 --> 00:39:02,160
<font color="#E5E5E5">which was a huge pain I mean like I said</font>

981
00:39:00,510 --> 00:39:03,900
it<font color="#E5E5E5"> took us a couple</font><font color="#CCCCCC"> of</font><font color="#E5E5E5"> years to get here</font>

982
00:39:02,160 --> 00:39:09,750
so<font color="#E5E5E5"> it definitely has gone through a huge</font>

983
00:39:03,900 --> 00:39:12,480
<font color="#CCCCCC">codes</font><font color="#E5E5E5"> code changes cycle</font><font color="#CCCCCC"> alright</font>

984
00:39:09,750 --> 00:39:15,329
functionally we we managed<font color="#CCCCCC"> to</font><font color="#E5E5E5"> get many</font>

985
00:39:12,480 --> 00:39:17,069
very minimal per head we had<font color="#CCCCCC"> 0 app</font>

986
00:39:15,329 --> 00:39:18,420
<font color="#CCCCCC">compat if there was any app compat we</font>

987
00:39:17,069 --> 00:39:21,960
actually went ahead and fixed and

988
00:39:18,420 --> 00:39:24,119
optimize the code<font color="#CCCCCC"> path</font><font color="#E5E5E5"> again from</font>

989
00:39:21,960 --> 00:39:25,770
security standpoint<font color="#E5E5E5"> we end up making a</font>

990
00:39:24,119 --> 00:39:27,780
situation where<font color="#E5E5E5"> there's no kernel</font>

991
00:39:25,770 --> 00:39:31,740
pointer<font color="#E5E5E5"> bingley so there is no by design</font>

992
00:39:27,780 --> 00:39:33,750
<font color="#CCCCCC">chaos</font><font color="#E5E5E5"> all our bypass anymore</font><font color="#CCCCCC"> and we end</font>

993
00:39:31,740 --> 00:39:36,029
up making fewer<font color="#CCCCCC"> changes from kernel</font>

994
00:39:33,750 --> 00:39:40,680
standpoint and that<font color="#E5E5E5"> helped because of</font>

995
00:39:36,030 --> 00:39:43,559
the<font color="#CCCCCC"> C++ stuffy array you may ask</font><font color="#E5E5E5"> about</font>

996
00:39:40,680 --> 00:39:44,640
metadata which goes in the<font color="#E5E5E5"> heap because</font>

997
00:39:43,559 --> 00:39:46,980
we also thought<font color="#CCCCCC"> about it because</font>

998
00:39:44,640 --> 00:39:49,259
<font color="#E5E5E5">metadata contains a link and feelings</font>

999
00:39:46,980 --> 00:39:50,880
which are again<font color="#E5E5E5"> color pointers so what</font>

1000
00:39:49,260 --> 00:39:52,319
do we<font color="#E5E5E5"> do about it well there's something</font>

1001
00:39:50,880 --> 00:39:54,420
<font color="#E5E5E5">called that came out during the same</font>

1002
00:39:52,319 --> 00:39:56,759
time period we were working on<font color="#E5E5E5"> this</font>

1003
00:39:54,420 --> 00:39:58,770
something called<font color="#E5E5E5"> segmented heaps</font>

1004
00:39:56,760 --> 00:40:00,960
which<font color="#E5E5E5"> actually carry all the metadata</font>

1005
00:39:58,770 --> 00:40:02,880
<font color="#E5E5E5">into the first page itself and doesn't</font>

1006
00:40:00,960 --> 00:40:04,230
<font color="#E5E5E5">share anything afterwards and we</font>

1007
00:40:02,880 --> 00:40:08,730
actually<font color="#CCCCCC"> end up using</font><font color="#E5E5E5"> that to</font><font color="#CCCCCC"> make sure</font>

1008
00:40:04,230 --> 00:40:09,210
<font color="#E5E5E5">none of this is maintained so</font><font color="#CCCCCC"> what's</font>

1009
00:40:08,730 --> 00:40:10,770
next

1010
00:40:09,210 --> 00:40:13,110
I'm just<font color="#E5E5E5"> gonna conclude this we are</font>

1011
00:40:10,770 --> 00:40:16,680
already<font color="#E5E5E5"> running out of time on this so</font>

1012
00:40:13,110 --> 00:40:18,600
we did a huge redesign from<font color="#E5E5E5"> security</font>

1013
00:40:16,680 --> 00:40:20,970
standpoint<font color="#CCCCCC"> we took a decision</font><font color="#E5E5E5"> like hey</font>

1014
00:40:18,600 --> 00:40:24,810
<font color="#CCCCCC">okay security is important</font><font color="#E5E5E5"> we want to</font>

1015
00:40:20,970 --> 00:40:27,390
<font color="#E5E5E5">make that work for</font><font color="#CCCCCC"> us</font><font color="#E5E5E5"> it was not easy</font>

1016
00:40:24,810 --> 00:40:29,100
<font color="#E5E5E5">but it was a</font><font color="#CCCCCC"> decision we took it took us</font>

1017
00:40:27,390 --> 00:40:31,440
a while to get<font color="#CCCCCC"> here but we</font><font color="#E5E5E5"> stick</font><font color="#CCCCCC"> around</font>

1018
00:40:29,100 --> 00:40:34,290
and at the end of the day what we end<font color="#E5E5E5"> up</font>

1019
00:40:31,440 --> 00:40:36,840
gaining is this year pawn to one there

1020
00:40:34,290 --> 00:40:39,960
was zero of<font color="#E5E5E5"> when 30k bugs there which</font>

1021
00:40:36,840 --> 00:40:41,520
was a huge win<font color="#CCCCCC"> that doesn't means that</font>

1022
00:40:39,960 --> 00:40:43,080
you can't still write winter ticket

1023
00:40:41,520 --> 00:40:45,060
<font color="#E5E5E5">bucks</font><font color="#CCCCCC"> you can still</font><font color="#E5E5E5"> probably do it it's</font>

1024
00:40:43,080 --> 00:40:46,500
<font color="#E5E5E5">just the cost is much more higher so</font>

1025
00:40:45,060 --> 00:40:48,960
people are gonna<font color="#E5E5E5"> probably going to the</font>

1026
00:40:46,500 --> 00:40:50,310
<font color="#E5E5E5">next thing and</font><font color="#CCCCCC"> the next thing is really</font>

1027
00:40:48,960 --> 00:40:53,130
<font color="#E5E5E5">what we</font><font color="#CCCCCC"> have listed here</font><font color="#E5E5E5"> which is</font>

1028
00:40:50,310 --> 00:40:55,680
DirectX is getting a<font color="#E5E5E5"> lot of love this</font>

1029
00:40:53,130 --> 00:40:57,810
year which<font color="#E5E5E5"> was</font><font color="#CCCCCC"> one of</font><font color="#E5E5E5"> the driver which</font>

1030
00:40:55,680 --> 00:41:01,410
was totally on during the pond

1031
00:40:57,810 --> 00:41:03,630
<font color="#CCCCCC">one-to-one competition and this is the</font>

1032
00:41:01,410 --> 00:41:05,009
<font color="#E5E5E5">next beast we're planning to tackle and</font>

1033
00:41:03,630 --> 00:41:07,070
hopefully<font color="#E5E5E5"> we</font><font color="#CCCCCC"> will have another story to</font>

1034
00:41:05,010 --> 00:41:10,170
<font color="#CCCCCC">tell next time I come here</font>

1035
00:41:07,070 --> 00:41:11,760
<font color="#CCCCCC">here are</font><font color="#E5E5E5"> some references for all the</font>

1036
00:41:10,170 --> 00:41:13,440
awesome work<font color="#CCCCCC"> people</font><font color="#E5E5E5"> have done which will</font>

1037
00:41:11,760 --> 00:41:14,790
give you an<font color="#E5E5E5"> idea of hey what I've gone</font>

1038
00:41:13,440 --> 00:41:16,260
through this is not just me this<font color="#E5E5E5"> is a</font>

1039
00:41:14,790 --> 00:41:17,759
lot<font color="#CCCCCC"> of</font><font color="#E5E5E5"> researchers that I've gone</font>

1040
00:41:16,260 --> 00:41:21,500
<font color="#CCCCCC">through and done a lot of work around</font>

1041
00:41:17,760 --> 00:41:23,850
<font color="#CCCCCC">city K so take a look</font><font color="#E5E5E5"> at if you can and</font>

1042
00:41:21,500 --> 00:41:25,200
<font color="#E5E5E5">that said that I'm gonna conclude my</font>

1043
00:41:23,850 --> 00:41:29,540
presentation<font color="#E5E5E5"> and if you</font><font color="#CCCCCC"> have any</font>

1044
00:41:25,200 --> 00:41:29,540
questions<font color="#CCCCCC"> will pray to us we have like</font>

