1
00:00:00,000 --> 00:00:18,460
I can I can check it I'm not saying
thanks for joining me talking about what

2
00:00:18,460 --> 00:00:22,279
I'm sure everybody's been thinking about
for weeks and months which is how to

3
00:00:22,279 --> 00:00:27,550
learn how to hack mainframes given the
twenty-year anniversary of the hackers

4
00:00:27,550 --> 00:00:32,480
movie I thought appropriate somebody
should be talking about this so i title

5
00:00:32,480 --> 00:00:36,969
this talk learning me from hacking but
really it should be titled where the

6
00:00:36,969 --> 00:00:45,110
hell did all my free time go because
you'll see so what I set out to do six

7
00:00:45,110 --> 00:00:50,989
or nine months ago after I decided that
I wanted to dig more into me bring

8
00:00:50,989 --> 00:00:56,629
security from a research and development
perspective what I set out to do was

9
00:00:56,629 --> 00:01:00,109
really learn it for myself but also to
start raising awareness people who have

10
00:01:00,109 --> 00:01:03,289
these platforms you don't have these
platforms the media have opportunity to

11
00:01:03,289 --> 00:01:06,790
work on them so like if you're part of
the pen testing company or you're on a

12
00:01:06,790 --> 00:01:12,369
red team somewhere or frankly if you
just you know use things like credit

13
00:01:12,369 --> 00:01:16,990
cards or ATM cash airplanes or
government services that you might be

14
00:01:16,990 --> 00:01:24,310
interested in this so I started out this
is basically like learning something new

15
00:01:24,310 --> 00:01:27,520
from from the ground out so it's like
you take the skills you have taken you

16
00:01:27,520 --> 00:01:31,829
know and you really roll it up to a high
level because most of the technical

17
00:01:31,829 --> 00:01:37,079
stuff doesn't doesn't apply and then I
set out to go along with getting the

18
00:01:37,079 --> 00:01:41,450
information out there is really to take
there's there's a there's a lot of tools

19
00:01:41,450 --> 00:01:45,700
there some tools out there now there's a
lot of tools they need to be built and

20
00:01:45,700 --> 00:01:48,740
so my goal was like look at what's out
there and try to put it into something

21
00:01:48,740 --> 00:01:52,570
that that people can use without having
to go through what I had to go through

22
00:01:52,570 --> 00:01:54,899
what you're going to show you a little
bit and also the needs to be written

23
00:01:54,899 --> 00:01:58,530
it's kind of one of those things like if
it needs to be done in nobody's doing it

24
00:01:58,530 --> 00:02:02,340
then guess who's job it is your job

25
00:02:02,340 --> 00:02:07,259
me i'm not gonna get a read that but
basically you know my technical

26
00:02:07,259 --> 00:02:08,060
background is in

27
00:02:08,060 --> 00:02:12,630
working forensics that kind of stuff I
like reverse engineering in living in

28
00:02:12,630 --> 00:02:18,890
assembly in that world and one of those
guys I was very excited to start digging

29
00:02:18,890 --> 00:02:23,930
into this and the opportunity dig into
this this research is mine not my

30
00:02:23,930 --> 00:02:30,940
employer's standard disclaimer applies
but really the benefit from this can can

31
00:02:30,940 --> 00:02:37,730
i think be will extend to a lot of
people a lot of people's employers so I

32
00:02:37,730 --> 00:02:42,700
decided I was gonna lay this out as a
five stages of learning mainframe with

33
00:02:42,700 --> 00:02:49,160
within onto the five stages of grief
that people go through generally when

34
00:02:49,160 --> 00:02:53,910
they lose something important to them in
my case it was the last nine months of

35
00:02:53,910 --> 00:03:01,239
my life so we start out with denial so
what will have what we do here we first

36
00:03:01,239 --> 00:03:06,910
start working on this stuff is that this
is the most secure platform out there or

37
00:03:06,910 --> 00:03:10,840
it's antiquated people moving off this
thing and in saying this now for twenty

38
00:03:10,840 --> 00:03:16,260
years it's the platforms done we're
converting Linux clusters in some cases

39
00:03:16,260 --> 00:03:20,180
that's true or not he's like you know
there's no sense in going down this road

40
00:03:20,180 --> 00:03:23,500
because you can exploit this thing by
traditional means right you can to

41
00:03:23,500 --> 00:03:29,600
foster overflows shellcode you you know
that sort of stuff doesn't work on this

42
00:03:29,600 --> 00:03:32,989
platform it's a different architectures
a different CPU different set of

43
00:03:32,989 --> 00:03:37,870
instructions there are protections that
live on this platform that don't live on

44
00:03:37,870 --> 00:03:40,930
other platforms you want more
information about that I gave a talk at

45
00:03:40,930 --> 00:03:46,739
DEFCON about a month ago where I go into
some detail so I'm just gonna take these

46
00:03:46,739 --> 00:03:49,970
point-by-point is this is what this is
what I heard in this is legal here if

47
00:03:49,970 --> 00:03:54,880
you go down this road we just i mean
just honest any time talking about this

48
00:03:54,880 --> 00:03:59,549
is not an obsolete platform it's it's
used a lot of different companies they

49
00:03:59,549 --> 00:04:04,930
they generally are really really big
companies that provide really important

50
00:04:04,930 --> 00:04:10,170
services to you you can google it if you
don't believe me so that is not the case

51
00:04:10,170 --> 00:04:13,420
antiquated technology this is not the
case either this is a very very

52
00:04:13,420 --> 00:04:15,990
sophisticated platform very modern
platform

53
00:04:15,990 --> 00:04:20,170
it can be configured to one of the more
that asking you ever seen frankly

54
00:04:20,170 --> 00:04:26,710
hundreds of hundreds of course terabytes
of RAM petabytes of data hundred percent

55
00:04:26,710 --> 00:04:33,490
uptime it's absolutely if you're in it
for the you know like really impressed

56
00:04:33,490 --> 00:04:36,940
by performance that kind of stuff this
thing is these things are out of this

57
00:04:36,940 --> 00:04:44,770
world so that's not the case either
traditional hack so that the talk that I

58
00:04:44,770 --> 00:04:48,770
did get it does come was basically a
proof of concept about this so I kept

59
00:04:48,770 --> 00:04:51,410
hearing look you can't do this stuff
like you might know how to write a

60
00:04:51,410 --> 00:04:53,830
buffer overflow you might know how to
write shellcode

61
00:04:53,830 --> 00:04:57,510
to work on this platform not gonna go
back through that in great detail except

62
00:04:57,510 --> 00:05:01,350
to just show you the basically the
punchline from That Talk I wrote a

63
00:05:01,350 --> 00:05:05,520
vulnerable program was just an echo
program hopefully can read that well

64
00:05:05,520 --> 00:05:08,580
enough back there but basically it's an
echo program that's got an exploitable

65
00:05:08,580 --> 00:05:13,330
vulnerabilities in it like a traditional
buffer overflow so that's just a demo of

66
00:05:13,330 --> 00:05:18,710
the program in working mode missus right
out of the slides from a month ago but I

67
00:05:18,710 --> 00:05:22,970
was able to write shellcode it exacts a
local shell I made my echo program is

68
00:05:22,970 --> 00:05:27,790
suited program under the root user which
is a pretty standard configuration this

69
00:05:27,790 --> 00:05:30,920
what you're seeing right here this is
the main frame right this is the UNIX

70
00:05:30,920 --> 00:05:35,460
implementation or the UNIX interfaces
mainframe not the more traditional one

71
00:05:35,460 --> 00:05:38,370
you've probably seen before but it's
absolutely still running in the very

72
00:05:38,370 --> 00:05:43,080
same architecture seem CPUs every main
train out there has this interface of

73
00:05:43,080 --> 00:05:47,340
this is where I started because most
people can relate to this but in a

74
00:05:47,340 --> 00:05:50,790
nutshell what happened right there was a
pretty standard exploit like I wrote

75
00:05:50,790 --> 00:05:55,630
this exploit I put in a Python shell
type 2 to the Honorable program was able

76
00:05:55,630 --> 00:05:58,910
to inherit the permissions of the room
using a tone that program and now I'm

77
00:05:58,910 --> 00:06:04,450
UID 0 and I have all the bells and
whistles the comfort that so the point

78
00:06:04,450 --> 00:06:07,660
of all that was like look this isn't
true either right so traditional

79
00:06:07,660 --> 00:06:12,160
exploits of types of exploits do work on
this program to work on this platform if

80
00:06:12,160 --> 00:06:15,370
you're willing to learn the architecture
you willing to learn the assembly

81
00:06:15,370 --> 00:06:18,910
language if you're willing to go through
the trouble with figuring out how it

82
00:06:18,910 --> 00:06:24,810
manages its memory this is doable

83
00:06:24,810 --> 00:06:30,400
so this is this is where a lot of people
that I've seen start this down this road

84
00:06:30,400 --> 00:06:34,410
end up here in number two and that's
pretty much they don't go any person

85
00:06:34,410 --> 00:06:37,669
this does not say what there's a hell of
a lot of frustration that comes along

86
00:06:37,669 --> 00:06:43,970
this two main channels that the
frustration comes from one is there a

87
00:06:43,970 --> 00:06:47,450
lot of people who know this platform
very well they've grown up with it and

88
00:06:47,450 --> 00:06:52,460
they built some amazing software on it
they are unbelievably intelligent

89
00:06:52,460 --> 00:06:58,370
individuals but your ability to go out
and hit these people and ask questions

90
00:06:58,370 --> 00:07:02,700
get answers is going to be a very
different experience from what you had

91
00:07:02,700 --> 00:07:07,250
you go out and you want to figure
something out what do you google it I

92
00:07:07,250 --> 00:07:10,360
don't have a right to contract and see
first-hand is probably Stack Overflow

93
00:07:10,360 --> 00:07:15,020
where you know by now that's a
completely curated response somebody's

94
00:07:15,020 --> 00:07:19,770
head somebody posted it the next answers
the right one against you as stuccoed

95
00:07:19,770 --> 00:07:23,590
you like perfect that's what I needed
occasionally get that rolls out there

96
00:07:23,590 --> 00:07:28,810
like RTFM right and or why do you wanna
do this you know that's my state your

97
00:07:28,810 --> 00:07:31,890
response right why would you want to do
that why don't you do this other thing

98
00:07:31,890 --> 00:07:37,200
and ask you about that I asked you about
the thing I wanted to do but in the main

99
00:07:37,200 --> 00:07:41,240
frame where there are forums out there
about this and it's worse its way worse

100
00:07:41,240 --> 00:07:45,020
because you basically get the ladder
without the former so I went on Google

101
00:07:45,020 --> 00:07:48,690
about this particular de jure actually
examples I'm just gonna be sOooo quick

102
00:07:48,690 --> 00:07:52,470
these are examples of things that I was
looking for specifically caused the

103
00:07:52,470 --> 00:07:56,900
manuals didn't I couldn't i couldn't
infer what I need to know from the

104
00:07:56,900 --> 00:08:00,830
manual so get into man is just a minute
so I'm going to read as a basis guys

105
00:08:00,830 --> 00:08:03,660
asking that instantly instruction what
does it do

106
00:08:03,660 --> 00:08:07,330
first guy replies with this beautiful
response which i thought well actually

107
00:08:07,330 --> 00:08:09,550
from there because it's chapter and
verse on it man

108
00:08:09,550 --> 00:08:15,590
will and so that's wasn't super helpful
any second example to see original

109
00:08:15,590 --> 00:08:16,510
poster

110
00:08:16,510 --> 00:08:21,600
next guy which is what I this is the
moderator of the forum basically mocking

111
00:08:21,600 --> 00:08:27,040
him in brutally telecommuting and
constable easy shit and could you just

112
00:08:27,040 --> 00:08:30,360
soon feed me this stuff and I'm not
gonna take any responsibility for my

113
00:08:30,360 --> 00:08:32,380
life and have a good weekend

114
00:08:32,380 --> 00:08:37,120
this is not an exception this is what
this is how they all go right and then

115
00:08:37,120 --> 00:08:41,330
you're just unbelievably angry and the
last guy just said well I use this

116
00:08:41,330 --> 00:08:45,240
instruction sometimes to do this thing
and it works really well so that was

117
00:08:45,240 --> 00:08:49,110
that in one more example that I give you
that I search was a very common error

118
00:08:49,110 --> 00:08:52,630
message again I couldn't figure out
exactly what I needed to do I googled it

119
00:08:52,630 --> 00:08:56,670
and got the bottom just said you need to
contact your site support group you

120
00:08:56,670 --> 00:09:01,350
shouldn't be doing this right that's it
it's hilarious but that's exactly how it

121
00:09:01,350 --> 00:09:04,440
goes right you should be contacting your
operations that you should be contacting

122
00:09:04,440 --> 00:09:08,570
your system programmer like you know
it's not it's not why would you want to

123
00:09:08,570 --> 00:09:12,120
do this it's like wow this is not your
job you should not be you know the

124
00:09:12,120 --> 00:09:15,920
people who know how to do this know how
to do this so talk to them I thought

125
00:09:15,920 --> 00:09:18,230
that's what I was doing apparently not

126
00:09:18,230 --> 00:09:23,290
documentation so when I set up a test
mainframe one of the first things I want

127
00:09:23,290 --> 00:09:27,240
to do is connected to the network and
set up a basic tcp/ip stack so went out

128
00:09:27,240 --> 00:09:31,480
to IBM's website and I pulled up for
this particular version is USD manuals

129
00:09:31,480 --> 00:09:36,580
about setting up tcp/ip there's sixteen
of them about 60 megs PDAs and 13,000

130
00:09:36,580 --> 00:09:41,170
pages so it's not a lack of
documentation so problems problem is

131
00:09:41,170 --> 00:09:47,180
everything is documented to the nth
degree and there are no facts or ethnic

132
00:09:47,180 --> 00:09:51,590
use or how to use a very simple such as
something I set out to do I started

133
00:09:51,590 --> 00:09:54,960
blogging said look if you wanna do this
like how you do it right there's like

134
00:09:54,960 --> 00:09:58,780
six steps and it's not that hard just to
give you an example though these are the

135
00:09:58,780 --> 00:10:03,030
IP configuration manual 40 s 113 so
which one do you think has like the

136
00:10:03,030 --> 00:10:06,760
basic tcp/ip set up the IP configuration
guide the configuration reference I mean

137
00:10:06,760 --> 00:10:09,920
the user's guide in the System
Administrator's Guide were the network

138
00:10:09,920 --> 00:10:13,070
and application and design guide and
then if you don't do it right you can

139
00:10:13,070 --> 00:10:16,089
look through one of the four volumes of
messages

140
00:10:16,089 --> 00:10:22,649
on the bottom that to to figure out what
you did wrong and a joke that fill some

141
00:10:22,649 --> 00:10:25,670
of you might know Phil young soldier
fortunes of a friend of mine in a joking

142
00:10:25,670 --> 00:10:30,930
that he and I have about this is because
installing the tool is the easy part of

143
00:10:30,930 --> 00:10:33,620
what you're trying to do you're not
doing it right

144
00:10:33,620 --> 00:10:39,970
bargaining so this is this is usually
visit this after this is where people

145
00:10:39,970 --> 00:10:43,370
quit right now everybody's gotten to the
point where they download something try

146
00:10:43,370 --> 00:10:47,480
to run configure the Makefile whatever
they like themselves package are you

147
00:10:47,480 --> 00:10:50,350
something else right that little bit of
frustration that you get when you're

148
00:10:50,350 --> 00:10:55,490
trying to set up that one tool basically
they that is the non stop teaching

149
00:10:55,490 --> 00:11:01,920
yourself how to do this and so
depression sets in right that I got to

150
00:11:01,920 --> 00:11:06,209
this point right before DEFCON was
trying to prove something out I knew it

151
00:11:06,209 --> 00:11:11,069
could be done just couldn't get over
that next hurdle all kinds of things in

152
00:11:11,069 --> 00:11:14,430
your way right to people that are going
to tell you you need to talk to talk to

153
00:11:14,430 --> 00:11:18,149
the people who know how to do it that
there aren't too how to use way too much

154
00:11:18,149 --> 00:11:21,899
documentation the vernacular is
different they talk about things like

155
00:11:21,899 --> 00:11:26,350
Daddy and on distant talk about sectors
and tracks and cylinders last time you

156
00:11:26,350 --> 00:11:29,660
had to worry about how many soldiers
sectors and heads you know we're on your

157
00:11:29,660 --> 00:11:30,329
hard drive

158
00:11:30,329 --> 00:11:35,809
probably not very recently no public
disclosure of anything so there's a very

159
00:11:35,809 --> 00:11:41,110
there's very much a culture of of kind
of keeping it all between the people who

160
00:11:41,110 --> 00:11:46,529
need to know just as an example this
this is so some of the tools that are

161
00:11:46,529 --> 00:11:50,259
out there are designed really for
building these complex products that are

162
00:11:50,259 --> 00:11:54,079
not really designed for what we're doing
with like security research try to

163
00:11:54,079 --> 00:11:58,120
figure out how to patch vulnerabilities
I can stop this is a test this is a this

164
00:11:58,120 --> 00:12:03,720
is a debugger in the one of the primary
ones that people used to debug their

165
00:12:03,720 --> 00:12:09,709
assembly code in the mainframe that's it
that's that's the screen real estate you

166
00:12:09,709 --> 00:12:12,540
get a lot of

167
00:12:12,540 --> 00:12:16,710
very bizarre keyboard commands to get
through that you can do it and I

168
00:12:16,710 --> 00:12:21,300
developed using it but you know for
those of you who use either pro or

169
00:12:21,300 --> 00:12:27,300
immunity urology yeah he sorely
disappointed if there's been any amount

170
00:12:27,300 --> 00:12:32,900
of time with that and that took me about
20 hours to get working in like 10

171
00:12:32,900 --> 00:12:40,130
manuals so having made it through all
that which is really the crux of you

172
00:12:40,130 --> 00:12:45,410
know kind of what I want to talk about
today calling acceptance so this is

173
00:12:45,410 --> 00:12:50,140
where you get to some layer of
proficiency rate you can write a

174
00:12:50,140 --> 00:12:55,260
assembly program from scratch to do
basic stuff you may not know how all the

175
00:12:55,260 --> 00:13:00,640
API's work but you exactly what manual
to pull up when there's words out there

176
00:13:00,640 --> 00:13:03,520
that you didn't know what they meant
before you now know what they mean when

177
00:13:03,520 --> 00:13:08,480
they talk about how to restaurants
something but I had a reference in

178
00:13:08,480 --> 00:13:12,110
memory location for instance by its base
displacement index

179
00:13:12,110 --> 00:13:16,300
you know what that means right you know
how to get to that information if you

180
00:13:16,300 --> 00:13:23,760
don't know what it means and so this is
where I this is where I landed sometime

181
00:13:23,760 --> 00:13:29,290
around the day before I gave a
presentation at that time so I started I

182
00:13:29,290 --> 00:13:32,220
started doing this and I said look I'm
gonna take some of the tools that those

183
00:13:32,220 --> 00:13:35,040
written now take some of the other tools
are out there and I want to start

184
00:13:35,040 --> 00:13:40,250
bringing them together in a way that is
useful to people who maybe you're new to

185
00:13:40,250 --> 00:13:43,380
the platform maybe they're never gonna
learn the platform that may be there on

186
00:13:43,380 --> 00:13:47,590
a red team or maybe they're part of the
pen testing group or maybe they own one

187
00:13:47,590 --> 00:13:51,560
of these things are they work in the
ITER the security department at a

188
00:13:51,560 --> 00:13:55,360
company that has ladies I know what the
hell the first thing to do how how do we

189
00:13:55,360 --> 00:13:58,070
even start testing think so

190
00:13:58,070 --> 00:14:01,490
pulling them all together and to me i i
get a lot of thought in a logical place

191
00:14:01,490 --> 00:14:10,870
to put all this stuff so so I took a
break from learning mainframe and and

192
00:14:10,870 --> 00:14:17,210
spend some time learning internals of
how it works and it isn't exactly the

193
00:14:17,210 --> 00:14:21,170
same process that I went through but
there's some similarities funnily enough

194
00:14:21,170 --> 00:14:27,149
around how the internals in a few built
deep code you know what i mean but

195
00:14:27,149 --> 00:14:30,360
there's a tremendous community other the
difference is a tremendous community

196
00:14:30,360 --> 00:14:34,850
other absolutely willing to help and
guide you in their very excited about

197
00:14:34,850 --> 00:14:39,820
what I was trying to do so I don't fully
functional version that has plagued with

198
00:14:39,820 --> 00:14:42,940
a number of things that I've written a
number of things on a corded and I've

199
00:14:42,940 --> 00:14:45,630
got a few more in the hopper that like
you know I was trying to finish up

200
00:14:45,630 --> 00:14:48,449
before this presentation about an hour
ago didn't quite get there but I had

201
00:14:48,449 --> 00:14:52,870
some dental show you what it's going to
look like so here's what I got in there

202
00:14:52,870 --> 00:14:53,570
so far

203
00:14:53,570 --> 00:14:58,430
basic payloads that run on on the
mainstream so your command execution

204
00:14:58,430 --> 00:15:05,100
buying shells River shells I've got a
built-in commands show the decoder I'll

205
00:15:05,100 --> 00:15:08,529
talk about that in a minute and then all
the court stuff all the stuff under the

206
00:15:08,529 --> 00:15:13,089
scenes that you as a user of medical
never have to use or see like defining

207
00:15:13,089 --> 00:15:17,610
the architecture designing the platform
designing the instructions and CPU and

208
00:15:17,610 --> 00:15:20,769
all those are the kind of stuff so that
things like exploits and payloads and

209
00:15:20,769 --> 00:15:28,050
auxiliary modules and all that stuff and
work this is just an example of a code

210
00:15:28,050 --> 00:15:32,110
I've been posting this code once it's
ready for prime time I've been posting

211
00:15:32,110 --> 00:15:37,899
it on my blog and I get home which i'd
give you the addresses to the end of

212
00:15:37,899 --> 00:15:40,890
this I'm gonna start putting pull
request out there haven't talked to the

213
00:15:40,890 --> 00:15:45,720
guys are putting up there for some of
the basics in here so it will be in the

214
00:15:45,720 --> 00:15:51,670
framework that you can download again
soon

215
00:15:51,670 --> 00:15:58,079
just as an example so wrote in assembly
program as a bombshell converted it to

216
00:15:58,079 --> 00:16:02,050
shell code and then started in
minimizing it right try to make it as

217
00:16:02,050 --> 00:16:05,779
small as is humanly possible which for
those of you who do this know that that

218
00:16:05,779 --> 00:16:12,649
is an absolute lake just can't feature
OCD anymore than trying to make a

219
00:16:12,649 --> 00:16:15,170
payload as small as you possibly can

220
00:16:15,170 --> 00:16:21,529
right just like shading individual bites
out of there but this one I wrote two

221
00:16:21,529 --> 00:16:25,220
flavors in this two flavors the next 1
I'll explain it one of the things about

222
00:16:25,220 --> 00:16:28,050
the meantime is that everything in the
mainframe is in

223
00:16:28,050 --> 00:16:32,130
different character sets all in exiting
right everything most of you work on is

224
00:16:32,130 --> 00:16:36,540
an ASCII and they are not they do not
translate there's no algorithm right

225
00:16:36,540 --> 00:16:41,330
it's a lookup table its absolute it's
not a and it does not reverse either so

226
00:16:41,330 --> 00:16:45,040
if you translate from ask you to pick
you know you have to look at a different

227
00:16:45,040 --> 00:16:51,140
table to translate it back and so I was
faced with the quandary of like book if

228
00:16:51,140 --> 00:16:54,579
I'm gonna create a bunch and i connect
it with netcat or the command shell

229
00:16:54,579 --> 00:17:01,110
that's in it doesn't work right I'm
gonna send a less money spell to a shell

230
00:17:01,110 --> 00:17:04,040
on the other end and it's just gonna
crash caused it the bites coming through

231
00:17:04,040 --> 00:17:08,660
our in asking that's not going to
understand it so I went down the road in

232
00:17:08,660 --> 00:17:10,610
doing this the hard way first

233
00:17:10,610 --> 00:17:14,939
both for the knowledge but just also to
see if it could be done and I created

234
00:17:14,939 --> 00:17:19,770
the show with the with the encoder and
decoder built in so the whole payload

235
00:17:19,770 --> 00:17:25,809
has the accident as he and ask you to
add stick built into it so big right

236
00:17:25,809 --> 00:17:32,809
thirteen-hour but 1300 bytes is a pretty
big payload but it absolutely works and

237
00:17:32,809 --> 00:17:35,640
the neat thing about it is new launch it
and there's a reversal version of this

238
00:17:35,640 --> 00:17:39,910
to you launch it you can connect with
anything that can connect to it from

239
00:17:39,910 --> 00:17:44,490
Python connected from from Metasploit
with the built-in transl that's already

240
00:17:44,490 --> 00:17:52,559
there so it works really well but it's
like I said it's pretty big is a demo of

241
00:17:52,559 --> 00:17:58,419
it I'll show you end anything I was
shown as somebody said yeah well that

242
00:17:58,419 --> 00:18:03,320
just looks like I just looks like the
best way to fund exploiting Linux or

243
00:18:03,320 --> 00:18:21,270
Windows or anything else like thank you
that's that's that's exactly right

244
00:18:21,270 --> 00:18:28,000
so that when the top is my display
console the window on the bottom is is

245
00:18:28,000 --> 00:18:34,240
my main frame and basically just to show
you that it it it worked exactly how you

246
00:18:34,240 --> 00:18:38,720
would expect unabomber blogger program
you the next play he said a payload

247
00:18:38,720 --> 00:18:48,210
report set up your IP addresses and boom
easy I built the reverse shell after the

248
00:18:48,210 --> 00:18:50,560
bunch over she'll be done this is much
easier

249
00:18:50,560 --> 00:18:55,800
much less complex as only a few
instructions in barbara Bush oh and I

250
00:18:55,800 --> 00:18:59,419
also built this one first then I don't
do without the encoder it so this is a

251
00:18:59,420 --> 00:19:04,530
really standard layout for a ver show
you know you create a socket connection

252
00:19:04,530 --> 00:19:10,410
point all your file handlers at a new
process that you exactly and then you

253
00:19:10,410 --> 00:19:16,770
passed it often create the connection so
I built at the encoder decoder it so

254
00:19:16,770 --> 00:19:21,260
this one when it launches if you connect
to it you are responsible for doing the

255
00:19:21,260 --> 00:19:24,550
encoding and decoding what they mean by
that is that the character set

256
00:19:24,550 --> 00:19:28,590
translation between asking them to take
on the client side what that allows

257
00:19:28,590 --> 00:19:32,510
wears a much much smaller much much
smaller shall consist of three invites

258
00:19:32,510 --> 00:19:37,140
that's fairly respectable size and you
find unabomber abilities and programs

259
00:19:37,140 --> 00:19:43,270
funny thing about it is not very hard by
by contrast I think the reverse shell in

260
00:19:43,270 --> 00:19:50,940
Metasploit for Linux without any coding
is like 86 bytes the assistant see

261
00:19:50,940 --> 00:19:55,300
similar is always going to be more
verbose because arguments get passed by

262
00:19:55,300 --> 00:19:59,940
memory location so you have to pass if
you have to pass five arguments to an

263
00:19:59,940 --> 00:20:04,570
API you have to pass a memory location
that has the value of the argument in it

264
00:20:04,570 --> 00:20:09,160
so bye bye by its nature it's going to
be larger there's not gonna be able to

265
00:20:09,160 --> 00:20:15,970
get a small is something we can pass by
reference or passive a register so I'm

266
00:20:15,970 --> 00:20:20,130
gonna just skip to the end of this
basically the same exact thing see on

267
00:20:20,130 --> 00:20:28,070
the bottom there you've got a reverse
show works exactly the same way once

268
00:20:28,070 --> 00:20:31,430
you've got your shelves then you can
start doing some neat stuff with post

269
00:20:31,430 --> 00:20:34,520
exploitation and I just only really
scratch the surface

270
00:20:34,520 --> 00:20:38,190
but I have a tremendous lot of ideas on
where to go with this and if anybody

271
00:20:38,190 --> 00:20:42,000
else has any ideas I'd be really
interested in hearing it but once you've

272
00:20:42,000 --> 00:20:47,950
got a show then you can then you can
script all kinds of stuff right you can

273
00:20:47,950 --> 00:20:52,250
enter TSO command you can ensure Unix
commands if you've got a set of

274
00:20:52,250 --> 00:20:56,020
credentials you can do some even more
cool stuff so here's a post model that I

275
00:20:56,020 --> 00:21:00,450
wrote the dumps the RAK F database pulls
back to the host and crack the passwords

276
00:21:00,450 --> 00:21:06,020
in so this is a combination of
Metasploit module that I wrote that uses

277
00:21:06,020 --> 00:21:09,890
the stuff that I wrote some built-in

278
00:21:09,890 --> 00:21:15,280
which was already there and the John the
Ripper which already has support for

279
00:21:15,280 --> 00:21:20,620
cracking rackets database which is
ranked as the mainframes authorization

280
00:21:20,620 --> 00:21:25,780
vindication IBM's version of it so yes
this works again just like you would

281
00:21:25,780 --> 00:21:29,990
expect you run the post module cuz you
already got a session you see that the

282
00:21:29,990 --> 00:21:32,810
communication their back to the
mainframe says yep you have access to

283
00:21:32,810 --> 00:21:37,150
the database transferred to your machine
run John the Ripper on it and then you

284
00:21:37,150 --> 00:21:43,560
can see all the awesome passwords that
was able to crack is fantastic so one of

285
00:21:43,560 --> 00:21:46,560
the things I'll show you here before I
wrap up this is a work in progress of

286
00:21:46,560 --> 00:21:51,100
this is not putting me to sleep yet but
I do have it in Ruby so I'm kind of most

287
00:21:51,100 --> 00:21:56,570
of the way there another ruby Gators are
in the process of learning said Andrew B

288
00:21:56,570 --> 00:22:03,150
this was written by filling in a Python
library and I ported it to Ruby's to to

289
00:22:03,150 --> 00:22:09,730
get the start putting it into medicine
3270 is that 10:37 is a protocol tcp/ip

290
00:22:09,730 --> 00:22:15,110
it's what the emulators used to talkback
Virginia green screens people use to

291
00:22:15,110 --> 00:22:18,350
talk to me friends like that's the
protocol it's basically telnet on

292
00:22:18,350 --> 00:22:23,620
steroids in so what you can do with this
module in in this way is if you have a

293
00:22:23,620 --> 00:22:26,440
set of credentials you've got from some
other means social engineering are you

294
00:22:26,440 --> 00:22:31,490
capture on the wires that your punch men
and now you can actually enter 1037 e

295
00:22:31,490 --> 00:22:34,830
commands file transfer that kind of
stuff and it will skip the screen it put

296
00:22:34,830 --> 00:22:37,580
it back to you so you don't actually
have to have a client you can operate

297
00:22:37,580 --> 00:22:41,230
rate within minutes please do do what
you need to do so look something like

298
00:22:41,230 --> 00:22:46,820
this and this again like I'm running in
the framework as I don't have it

299
00:22:46,820 --> 00:22:51,880
built in the frame get so that's the
that is the logon screen to make

300
00:22:51,880 --> 00:22:56,570
mainframe right there that's the next
screen after I enter the command I put

301
00:22:56,570 --> 00:23:00,029
my name and password and then that's the
screen that you get once you login right

302
00:23:00,029 --> 00:23:04,960
so all that was done with very simple
script that just uses a set of user name

303
00:23:04,960 --> 00:23:09,049
and password I cracked in the previous
flight to now be able to get that

304
00:23:09,049 --> 00:23:17,130
scrimmages exact same thing if you went
and logged on to maintain yourself rate

305
00:23:17,130 --> 00:23:19,799
if you went if you went and did these
commands and I'm not going to lie but I

306
00:23:19,799 --> 00:23:20,559
just take the win

307
00:23:20,559 --> 00:23:36,500
basically same thing so you can see the
possibilities there so I think yeah so

308
00:23:36,500 --> 00:23:41,120
what's next and we're going to some
people who are much more than I N on

309
00:23:41,120 --> 00:23:43,799
compiling some of the basics that are
out there right now

310
00:23:43,799 --> 00:23:50,750
GCC and the new utilities right now it's
it's basically like AIX and a lot it's

311
00:23:50,750 --> 00:23:54,509
like straight UNIX so it's not stuff
that you used to run Linux doesn't have

312
00:23:54,509 --> 00:23:59,919
a lot of that stuff a debug framework
with a proper debug framework is

313
00:23:59,919 --> 00:24:05,559
something that I absolutely will be the
next thing that I build it allows you to

314
00:24:05,559 --> 00:24:11,519
do proper debugging on this platform
disassembly debugging further additions

315
00:24:11,519 --> 00:24:15,009
customized interpreter right that may be
something that you can load into memory

316
00:24:15,009 --> 00:24:18,429
that's got a whole bunch of really
unique functions to this platform kind

317
00:24:18,429 --> 00:24:22,629
of like mature better used to something
that writes GCL which is a scripting

318
00:24:22,629 --> 00:24:26,820
language informing you can transfer that
back and forth view of the city

319
00:24:26,820 --> 00:24:29,740
credentials are vulnerabilities that
using

320
00:24:29,740 --> 00:24:36,269
training and teaching so that's it I
think like one minute maybe maybe two if

321
00:24:36,269 --> 00:24:39,980
anybody's got a question otherwise I'm
probably gonna go get a beer after this

322
00:24:39,980 --> 00:24:44,600
issue got a question you can come see
you never want to say thanks to still

323
00:24:44,600 --> 00:24:47,980
for helping out he built the

324
00:24:47,980 --> 00:24:51,669
awesome slide background in the title
slide on this

325
00:24:51,669 --> 00:25:08,750
yes yes the question asked was still
wrote basically has extended an app to

326
00:25:08,750 --> 00:25:13,660
be able to better identify mainframes
and some stuff like that so that the

327
00:25:13,660 --> 00:25:18,160
library that that was written on is that
10:37 library so be able use all that

328
00:25:18,160 --> 00:25:19,690
functionality

329
00:25:19,690 --> 00:25:24,640
inside inside Metasploit so you can scan
it and get you know valuable scan

330
00:25:24,640 --> 00:25:28,590
results that email questions yet

331
00:25:28,590 --> 00:25:36,130
yes good question is where to get the
test mainframe from so many players in a

332
00:25:36,130 --> 00:25:41,340
frame so that helps I am has a virtual
mainframe and that they will they will

333
00:25:41,340 --> 00:25:45,140
sell you and if you were in a
relationship that mean probably get a

334
00:25:45,140 --> 00:25:50,780
reasonable price on it but they have one
that runs this is a hypervisor that is

335
00:25:50,780 --> 00:25:55,020
their product that runs the actual vs
USC can run on Linux box or Unix boxer

336
00:25:55,020 --> 00:25:59,330
Mac or whatever so you can take it with
you they sell it to people who do

337
00:25:59,330 --> 00:26:10,400
development on the main train

338
00:26:10,400 --> 00:26:17,550
for a long time it was something I did a
long time ago so I I don't know the

339
00:26:17,550 --> 00:26:22,360
answer to that question as far as like
how much of it directly translates I

340
00:26:22,360 --> 00:26:26,150
suspect a lot of the concepts translate
but it's not you know it's gonna be a

341
00:26:26,150 --> 00:26:32,870
choice of architecture to talk to me
afterwards I got a name for it not off

342
00:26:32,870 --> 00:26:39,120
the top of my head but I can look it up
and be able to wrap up thank you very

343
00:26:39,120 --> 00:26:39,900
much appreciate it

