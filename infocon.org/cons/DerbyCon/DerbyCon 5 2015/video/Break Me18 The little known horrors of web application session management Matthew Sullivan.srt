1
00:00:00,000 --> 00:00:21,650
alright kinda know how hard it is to
pull yourself out of bed this early in

2
00:00:21,650 --> 00:00:26,019
the morning so I do appreciate you doing
so today we're going to talk about what

3
00:00:26,019 --> 00:00:31,340
application sessions just to second on
my background I work for a company that

4
00:00:31,340 --> 00:00:39,170
is a multi-tenant South company and I do
a lot of application assessment and some

5
00:00:39,170 --> 00:00:43,160
consulting for them and today we're
going to go over some of the more

6
00:00:43,160 --> 00:00:46,910
interesting things that happened and
modern session management think a lot of

7
00:00:46,910 --> 00:00:50,850
us are probably familiar with the old
boring ways of doing session management

8
00:00:50,850 --> 00:00:55,090
the most absurd dunifer 28 something
years but today we take a look at a

9
00:00:55,090 --> 00:00:58,219
little bit different format see what
some of the newer languages and

10
00:00:58,219 --> 00:01:01,600
frameworks are doing interesting things
we can do that help protect our USERs

11
00:01:01,600 --> 00:01:08,400
little better so my question for you
guys is how many of you by show of hands

12
00:01:08,400 --> 00:01:12,360
are web app people you would say that
you do web stuff by train

13
00:01:12,360 --> 00:01:16,640
cool awesome thank you how many of you
guys would consider yourself programmers

14
00:01:16,640 --> 00:01:22,210
coders full-time awesome cool and
intestines finally awesome so we've got

15
00:01:22,210 --> 00:01:25,320
a really good mix I'm really excited
about this I intentionally in his

16
00:01:25,320 --> 00:01:28,380
presentation as a kind of half-and-half
and I was really afraid it would just be

17
00:01:28,380 --> 00:01:31,850
all one-sided each other and that would
work out well for anyone

18
00:01:31,850 --> 00:01:39,100
excellent alright so let's do a quick
recap on session management kind of a

19
00:01:39,100 --> 00:01:45,210
22nd overview and we're gonna try to do
this is actually twenty seconds cuz we

20
00:01:45,210 --> 00:01:46,439
got plenty to cover today

21
00:01:46,439 --> 00:01:51,140
alright so whether session management
looks a little bit like this this is bad

22
00:01:51,140 --> 00:01:56,110
weather clone Holland in the audience
thank you for making this this app is

23
00:01:56,110 --> 00:02:00,469
great at doing things horribly we're
gonna go hundred long as our admin here

24
00:02:00,469 --> 00:02:05,210
I've logged in now to take a look

25
00:02:05,210 --> 00:02:09,280
up in my cookies are going to see that I
have a bad winter clothes SessionID

26
00:02:09,280 --> 00:02:13,319
right there and that cookie identifies
me is me to the server it knows that

27
00:02:13,319 --> 00:02:18,959
someone with a cookie is clear that
cookie value and refresh sure enough I

28
00:02:18,959 --> 00:02:24,810
will be alright if that was new
information anyone welcome the web out

29
00:02:24,810 --> 00:02:29,450
alright so you're in for a wild ride for
the rest of the day

30
00:02:29,450 --> 00:02:35,870
ok so what they want to start this
entire presentation out with is the idea

31
00:02:35,870 --> 00:02:39,970
that sessions are better than
credentials from attackers perspective I

32
00:02:39,970 --> 00:02:45,660
cannot stress this enough passwords are
are so boring compared two sessions

33
00:02:45,660 --> 00:02:49,330
because if you got to factor author
multi-factor but you still in the

34
00:02:49,330 --> 00:02:55,760
SessionID boo me read if you have IP
address restrictions typically those are

35
00:02:55,760 --> 00:02:59,220
only checks out long and when the
session is created usually don't do it

36
00:02:59,220 --> 00:03:04,560
per request so again defeated finally
browser validation you know like hey you

37
00:03:04,560 --> 00:03:09,030
never come from this brother before
guess what defeated sessions are the

38
00:03:09,030 --> 00:03:12,610
keys to the kingdom there the Alpha and
the Omega the beginning and the end if

39
00:03:12,610 --> 00:03:17,450
you have the SessionID you can wreck
someone so with that in mind let's talk

40
00:03:17,450 --> 00:03:22,370
a little bit about situations with
iconic her so everyone remembers Hartley

41
00:03:22,370 --> 00:03:27,209
that was a good ol time to focus on the
very bottom here where Mandy it actually

42
00:03:27,209 --> 00:03:31,940
had a very large I believe they said
later as a defense contractor that had

43
00:03:31,940 --> 00:03:38,170
their SSL VPN concentrator actually
broken into by an adversary because two

44
00:03:38,170 --> 00:03:42,660
day period before they can get it
patched someone ran heart bleed and the

45
00:03:42,660 --> 00:03:47,420
perfect concepts scripture the first
thing they do is just dumped out from

46
00:03:47,420 --> 00:03:50,579
memory like the last get requests that
come through and of course those

47
00:03:50,579 --> 00:03:54,160
contained cookies right as they take the
cookies out of those get requests in

48
00:03:54,160 --> 00:03:58,320
their browser and hit that ass AVI and
concentrator and venturing out here in

49
00:03:58,320 --> 00:04:01,630
this was actually one of them in my
opinion whether bigger problems with

50
00:04:01,630 --> 00:04:05,510
heart bleed there are a lot of people
really focused on key loss and frankly I

51
00:04:05,510 --> 00:04:09,310
don't give a damn about keys because you
can just rotate those in the problem

52
00:04:09,310 --> 00:04:11,460
solved special music performed secrecy

53
00:04:11,460 --> 00:04:16,530
but the sessions that stuff was really
serious yet how's that for her bleed

54
00:04:16,530 --> 00:04:20,270
actually reset all sessions because get
have sessions are of course very long

55
00:04:20,270 --> 00:04:25,180
lived there for things like Facebook and
stuff so definitely definitely a big

56
00:04:25,180 --> 00:04:29,960
concern when it comes to sessions
there's only really two things you need

57
00:04:29,960 --> 00:04:43,350
to remember how do we do that in
practice we never log it and we never

58
00:04:43,350 --> 00:04:48,020
lose it so when we say logging in and
losing at long it is really easy for

59
00:04:48,020 --> 00:04:51,860
developers types does your like 10
testers work for a company to develop

60
00:04:51,860 --> 00:04:58,060
prototypes often don't understand the
value of a session led to an attacker

61
00:04:58,060 --> 00:05:01,870
this is very common I think most
developers who are really security

62
00:05:01,870 --> 00:05:06,520
oriented ever talk to have never really
thought about it in this paradigm so

63
00:05:06,520 --> 00:05:10,130
something to really mention they like to
put on the logs those types of things

64
00:05:10,130 --> 00:05:13,630
you know right at 2:23 date or whatever

65
00:05:13,630 --> 00:05:17,780
make sure that never happens we should
absolutely never lost keys in addition

66
00:05:17,780 --> 00:05:23,970
never lose it so let's talk about losing
it real quick just move my mouse over

67
00:05:23,970 --> 00:05:30,270
here in the move something out of my
view so how safe is your session cache

68
00:05:30,270 --> 00:05:36,180
for instance to use Redis to do session
caching at some larger absurd

69
00:05:36,180 --> 00:05:39,520
enterprises you want hit the database
every single time because I'm very

70
00:05:39,520 --> 00:05:42,600
perform at one of the things we see more
commonly these days using something like

71
00:05:42,600 --> 00:05:46,890
credit to store the session values were
not looking up in a database every time

72
00:05:46,890 --> 00:05:51,300
operation thing is Redis doesn't have
any crypto on its connection by before

73
00:05:51,300 --> 00:05:55,140
you have to wrap it was something like s
tunnel in addition ready by the fall has

74
00:05:55,140 --> 00:05:59,670
no authentication you can put a password
on it but it's pretty easily brute force

75
00:05:59,670 --> 00:06:05,380
of the protocol right fast so yeah like
it's one of those deals where you might

76
00:06:05,380 --> 00:06:08,020
be shipping your session is a few users
out too

77
00:06:08,020 --> 00:06:11,289
who knows where and those could be up
for the taking

78
00:06:11,289 --> 00:06:14,250
you have to really understand your
infrastructure and how is created and

79
00:06:14,250 --> 00:06:20,770
developed and supported to know whether
or not that's happening so let's talk a

80
00:06:20,770 --> 00:06:25,330
little about session cookie insecurity
well all session cookies cookies cookies

81
00:06:25,330 --> 00:06:31,729
cookies have flax HTTP only which is a
flight that says only send this cookie

82
00:06:31,729 --> 00:06:36,240
on HTTP connections and request no
javascript use things like that and then

83
00:06:36,240 --> 00:06:40,310
we also have the secure flag which says
only allowed to be sent over HTTPS

84
00:06:40,310 --> 00:06:44,789
secure connections right so if you're
gonna be setting a session cookie you're

85
00:06:44,789 --> 00:06:48,169
gonna want both of these flags you don't
want JavaScript reading it and you

86
00:06:48,169 --> 00:06:51,539
certainly don't want to send it over non
secure connections I'm gonna have this

87
00:06:51,539 --> 00:06:55,830
light at the end but I'm just gonna get
a free preview if you have a web app

88
00:06:55,830 --> 00:07:02,120
that you give any care about whatsoever
you must SSL encrypt every single page

89
00:07:02,120 --> 00:07:06,310
not just the login page on some pages
every single page is if you don't you

90
00:07:06,310 --> 00:07:09,719
might be leaking that's shady over an
insecure channel right and then it's

91
00:07:09,719 --> 00:07:17,560
worth less is a man here work for
Facebook or Instagram ok well here's

92
00:07:17,560 --> 00:07:21,569
what you do this and Instagram still
does so go fix your stuff Instagram

93
00:07:21,569 --> 00:07:26,400
alright so yeah you are on public wifi
anyone take over some of this program by

94
00:07:26,400 --> 00:07:34,380
all means OK sir gonna do a quick
demonstration here why this is a concern

95
00:07:34,380 --> 00:07:39,840
to me just copy some code and bring up
our browser alright so we're gonna go

96
00:07:39,840 --> 00:07:45,190
back to our good old crappy that winter
clothing site here and I'm gonna log in

97
00:07:45,190 --> 00:07:50,020
as a user called XSS I think you
probably know it's about to happen so

98
00:07:50,020 --> 00:07:54,919
bad Twitter clone suffers from a
horrible problem where it doesn't

99
00:07:54,919 --> 00:07:59,050
sanitized anything at all but you know
it's really not any different than

100
00:07:59,050 --> 00:08:04,000
website seen that our college like
projects or something so we're gonna see

101
00:08:04,000 --> 00:08:08,599
here is a very simple script and we're
gonna post to one of my favorite

102
00:08:08,599 --> 00:08:10,950
services they bring this to the top

103
00:08:10,950 --> 00:08:16,910
I'm pretty crappy pastebin.com it's a
really crappy plantation of pace then no

104
00:08:16,910 --> 00:08:22,090
copyright infringement so heavy pace
than accept arbitrary data at arbitrary

105
00:08:22,090 --> 00:08:26,390
urals and that's all it does and so it's
a great way to like store little one big

106
00:08:26,390 --> 00:08:29,660
blobs I use it for demonstration of
process scripting on a regular basis at

107
00:08:29,660 --> 00:08:33,360
my place of employment so we're gonna do
is put in this little thing that says

108
00:08:33,360 --> 00:08:39,169
okay we're gonna paste used to send some
data 24 / Derby Conn in the value is

109
00:08:39,169 --> 00:08:42,930
going to be document doc cookie rights
are gonna go ahead and post them message

110
00:08:42,930 --> 00:08:53,400
who message posted we're going to logout
and login as my favorite user admin

111
00:08:53,400 --> 00:08:59,340
to forgive my inability to see the
screen well don't have a clue never hear

112
00:08:59,340 --> 00:09:00,430
some music was interview

113
00:09:00,430 --> 00:09:07,440
all right we're going to read the tweets
of that User here

114
00:09:07,440 --> 00:09:12,690
ok so let's take a no-decision Cody this
is a very very basic very simple cross

115
00:09:12,690 --> 00:09:18,490
site scripting example SessionID that so
we can see here that are session cookies

116
00:09:18,490 --> 00:09:25,390
and for Mr looks like five and sure
enough if we go over to crappy Facebook

117
00:09:25,390 --> 00:09:31,780
Derby Conn yeah the demo work so what
we've done of course as external trade

118
00:09:31,780 --> 00:09:35,540
this SessionID to some other place and
we could put that into everyone and we

119
00:09:35,540 --> 00:09:36,570
could read it

120
00:09:36,570 --> 00:09:40,750
one of my favorite things to do to
demonstrate this we actually have a lab

121
00:09:40,750 --> 00:09:44,590
at my place of employment I come to set
up and they have to login and fire up

122
00:09:44,590 --> 00:09:49,180
the login for a missile turret and so
they have a USB webcam they can remote

123
00:09:49,180 --> 00:09:53,360
into it and fire have you ever thought
that but in in real life you know as you

124
00:09:53,360 --> 00:09:56,830
can imagine it would be very devastating
to read out the session cookies and then

125
00:09:56,830 --> 00:10:01,220
replace them so I want to stress again
the HTTP only flag would prevent this

126
00:10:01,220 --> 00:10:05,100
attack because our JavaScript would not
be able to read the cookies contents so

127
00:10:05,100 --> 00:10:08,990
very important that you keep those flags
in mind that have a lot of

128
00:10:08,990 --> 00:10:17,100
benefits all right let's talk a little
bit more about user-generated content so

129
00:10:17,100 --> 00:10:20,240
get her dot com user generated content

130
00:10:20,240 --> 00:10:25,750
well at least pages that serve HTML as I
really raises get up to I O

131
00:10:25,750 --> 00:10:29,980
google.com uses Google user content dot
com Facebook uses Facebook CDN and

132
00:10:29,980 --> 00:10:33,660
Heroku dot com
infrastructure-as-a-service provider

133
00:10:33,660 --> 00:10:42,520
uses Heroku out dot com why there were
no go

134
00:10:42,520 --> 00:10:46,980
yes so one of the things that heroic
election ended up finding out the hard

135
00:10:46,980 --> 00:10:52,140
way as they used to put all their users
so for free just get a subdomain on

136
00:10:52,140 --> 00:10:55,180
Heroku so if I create a new project
called hello world used to be called

137
00:10:55,180 --> 00:11:00,870
hello world I'm Heroku dot com that's a
really bad idea and Roku has forced all

138
00:11:00,870 --> 00:11:03,980
of their users over to a new domain when
they realized how bad of an idea that

139
00:11:03,980 --> 00:11:08,779
was because cookies have scopes
subdomains have the ability to set

140
00:11:08,779 --> 00:11:12,500
cookies for their top level domain
that's really important because if you

141
00:11:12,500 --> 00:11:16,180
have something like that your company
dot com and that's all locked down you

142
00:11:16,180 --> 00:11:20,410
have change control encrypt all that
data you might do a lot of due diligence

143
00:11:20,410 --> 00:11:23,890
to make sure that application safe
meanwhile if you're just sitting over

144
00:11:23,890 --> 00:11:28,490
here and death . after my company dot
com allows anyone to modify it change it

145
00:11:28,490 --> 00:11:35,060
pushing to go to it it's going to be a
wild party of the worst tape for you so

146
00:11:35,060 --> 00:11:38,470
what we want to really stress is that if
you can set those cookies bad things can

147
00:11:38,470 --> 00:11:39,010
happen

148
00:11:39,010 --> 00:11:45,120
make sure that you do entirely separate
domains only prob systems should ever

149
00:11:45,120 --> 00:11:49,390
have access to top level domains period
end of story if you see it being any

150
00:11:49,390 --> 00:11:50,540
other way

151
00:11:50,540 --> 00:11:57,370
raised the alarm you've got a serious
problem alright so I kind of like to do

152
00:11:57,370 --> 00:12:00,720
questions in line as opposed to the end
because it's a little bit easier to

153
00:12:00,720 --> 00:12:03,899
throw them out as you think about them
versus waiting until the end remember

154
00:12:03,899 --> 00:12:12,480
them have any questions so far recovered
or I will keep runnin let's talk about

155
00:12:12,480 --> 00:12:15,910
session fixation system fixation is
another one of these vulnerabilities

156
00:12:15,910 --> 00:12:22,800
that is as pretty as kind of hard to
describe and be it is pretty bad so

157
00:12:22,800 --> 00:12:26,540
let's talk a little bit more will use
our plain old demo again we're gonna use

158
00:12:26,540 --> 00:12:32,050
about Twitter clone the best thing about
PHP is that it allows arbitrary session

159
00:12:32,050 --> 00:12:37,720
by the best part I mean the worst part
of how we can actually set our trade

160
00:12:37,720 --> 00:12:41,510
values and our cookies and send them to
the server in the server will keep like

161
00:12:41,510 --> 00:12:46,760
yep that's a that's a new cookie value i
dont care thats really really scary with

162
00:12:46,760 --> 00:12:54,180
an application that is not necessarily
secure that can be a serious concern

163
00:12:54,180 --> 00:12:59,500
let's take a look here is condemning
straight that by just changing the last

164
00:12:59,500 --> 00:13:03,930
part of this cookie to have the values
see see at the end of it in an intern at

165
00:13:03,930 --> 00:13:10,209
the gate off my silence will change that
could be so I have sent that request to

166
00:13:10,209 --> 00:13:13,920
the server in the server did not do a
set cookie back to me that had a

167
00:13:13,920 --> 00:13:18,220
different value so it accepted that and
now that values in the session store and

168
00:13:18,220 --> 00:13:23,500
ready for potential shenanigans alright
so

169
00:13:23,500 --> 00:13:28,230
this allows for much easier session
fixation system fixations the concept of

170
00:13:28,230 --> 00:13:35,760
giving a user session fixation the
concept of getting user to start using a

171
00:13:35,760 --> 00:13:40,190
SessionID that you set now this could be
kind of interesting right let's say you

172
00:13:40,190 --> 00:13:43,710
get a session all ready to go but it's
not logged in but you know the SessionID

173
00:13:43,710 --> 00:13:48,980
and then you fish someone and have them
maybe fall for that fish to go to the

174
00:13:48,980 --> 00:13:54,120
site and if you can somehow set their
session before them and they login than

175
00:13:54,120 --> 00:13:57,610
a session and he becomes valid while
you're in control of it kind of cool

176
00:13:57,610 --> 00:14:01,630
right we're gonna go ahead and see that
again the best part about this demo is

177
00:14:01,630 --> 00:14:06,760
stock PHP this is the standard out of
the box PHP behavior which is horrifying

178
00:14:06,760 --> 00:14:10,960
alright so we're gonna do have actually
reduced this demo up just because it's a

179
00:14:10,960 --> 00:14:16,360
little bit more prickly gonna do is kind
of a two-pronged approach first thing

180
00:14:16,360 --> 00:14:20,340
we're going to do is to set a document
our cookie value but the interesting

181
00:14:20,340 --> 00:14:24,770
thing is people often like to tout well
I'm safe because I don't use I just no

182
00:14:24,770 --> 00:14:28,650
script or I have JavaScript turned off
or I used content security policy on my

183
00:14:28,650 --> 00:14:31,730
site and we don't allow inline
javascript that's fine

184
00:14:31,730 --> 00:14:36,130
a little-known directive of HTML
actually allows you to set cookies via

185
00:14:36,130 --> 00:14:41,330
meta tags and you cannot turn this off
you cannot disable this paper unless you

186
00:14:41,330 --> 00:14:45,589
like compile your in Firefox or
something and if you want to do that but

187
00:14:45,589 --> 00:14:49,520
we're not gonna take a quick look at
what this might look like

188
00:14:49,520 --> 00:14:54,050
so the funny thing is I've Marcus up in
photoshop but I accidentally sent this

189
00:14:54,050 --> 00:14:58,720
email to my friend Matt in the front
raise your hand here so I accidentally

190
00:14:58,720 --> 00:15:02,820
sent that email to him when I meet meant
to send it to myself and he was really

191
00:15:02,820 --> 00:15:07,890
confused is one of the things that we
might have is officially Mogo outlooks

192
00:15:07,890 --> 00:15:11,930
maybe a little bit more convincing than
this and someone clicked that link right

193
00:15:11,930 --> 00:15:19,650
let's take a look with once again we're
going to read some tweets are trying to

194
00:15:19,650 --> 00:15:26,560
go back in

195
00:15:26,560 --> 00:15:33,880
logged in as admin again by the way this
is what happens if your admin allows you

196
00:15:33,880 --> 00:15:43,990
to see this super awesome screen alright
so I'm awesome in all things and while

197
00:15:43,990 --> 00:16:00,510
I'm being fished so and sure enough of
course we don't have proper output

198
00:16:00,510 --> 00:16:05,080
escaping the number one cent of all web
apps and in the meantime I session

199
00:16:05,080 --> 00:16:10,339
cookie has now been changed to this
value bluefish by the way any of you who

200
00:16:10,339 --> 00:16:13,760
are just getting into Penn testing I
cannot stress enough how important it is

201
00:16:13,760 --> 00:16:18,420
that you find a string that you probably
won't find in a production web app and

202
00:16:18,420 --> 00:16:22,250
use that as your one token they always
find things so I have my birth

203
00:16:22,250 --> 00:16:25,390
configuration pretty much just set up
that if it ever sees bluefish in all

204
00:16:25,390 --> 00:16:29,779
caps on anything it just starts going
hey you did something over there so I

205
00:16:29,779 --> 00:16:34,040
would strongly encourage that kind of a
new design testing room so choose a

206
00:16:34,040 --> 00:16:38,350
streaming stick with it says you can see
now I'm bluefish now I go back to the

207
00:16:38,350 --> 00:16:41,500
home page here we're gonna notice
they've been logged out which we expect

208
00:16:41,500 --> 00:16:45,330
right because my session cookies not
change and is this bluefish value but as

209
00:16:45,330 --> 00:16:52,210
you can imagine if I log in here I'm
admin admin admin and unfortunately for

210
00:16:52,210 --> 00:16:56,300
us my SessionID is still bluefish
meaning that anyone who now knows the

211
00:16:56,300 --> 00:17:03,370
Europe the site can log in as the admin
very bad so first first thing we need to

212
00:17:03,370 --> 00:17:06,579
talk about them in this case is how to
fix that problem and actually is pretty

213
00:17:06,579 --> 00:17:11,089
easy to fix session fixation on we have
to do is make sure that we hand out a

214
00:17:11,089 --> 00:17:15,030
new society every time the user
authenticates know one thing that is a

215
00:17:15,030 --> 00:17:18,910
cardinal sin and web applications we see
this a lot is that someone will send you

216
00:17:18,910 --> 00:17:22,510
a new cookie they'll give you a new
secretary directive and not invalidate

217
00:17:22,510 --> 00:17:26,429
the old cookie you were using
server-side go into your database killed

218
00:17:26,429 --> 00:17:30,980
those cookies you have to do that there
is a very very large very well known in

219
00:17:30,980 --> 00:17:35,800
the valley sign on provider so you've
got these big single sign-on solutions

220
00:17:35,800 --> 00:17:39,399
that may be used to sampling some of her
ass something like that there's a really

221
00:17:39,400 --> 00:17:43,560
big valley company very well known that
is a sample provider for a number of

222
00:17:43,560 --> 00:17:49,240
enterprises including my old we used to
use them and then one of the issues that

223
00:17:49,240 --> 00:17:53,910
we had was that we found that you could
just like to lead the session cookie are

224
00:17:53,910 --> 00:17:54,220
you

225
00:17:54,220 --> 00:17:56,950
you could log out and they would just
send us a cookie that the leaders

226
00:17:56,950 --> 00:18:01,130
session cookie and if you still have
that valujet back in your back it would

227
00:18:01,130 --> 00:18:06,020
never actually kill those sessions that
would last for days if you log out again

228
00:18:06,020 --> 00:18:08,990
it just delete your cookies when
actually kill US server side and the

229
00:18:08,990 --> 00:18:11,740
problem is that when you reach out to
the vendor and says hey this is a huge

230
00:18:11,740 --> 00:18:16,540
concern they really didn't seem to act
on it or care that much

231
00:18:16,540 --> 00:18:20,620
the funny thing I'll give you a quick
story I love doing security stuff

232
00:18:20,620 --> 00:18:25,100
because I know how it works in our
company and watching it like just fall

233
00:18:25,100 --> 00:18:29,770
apart and other companies one of my
favorite hobbies so I sent this email to

234
00:18:29,770 --> 00:18:33,560
their support right saying hey your
session and these are all screwed up now

235
00:18:33,560 --> 00:18:37,790
they actually moved back into their
ticketing system and every time someone

236
00:18:37,790 --> 00:18:41,770
internally commented on it I got an
email notification with their comments

237
00:18:41,770 --> 00:18:46,640
which was awesome because it SAT dormant
in like six months later just some

238
00:18:46,640 --> 00:18:50,360
random developer guy was like hey this
is a big problem we need to fix this and

239
00:18:50,360 --> 00:18:56,909
it smells like that big of a deal
they're over-reacting this guy doesn't

240
00:18:56,909 --> 00:19:02,450
just check your ticketing system to see
if you're leaking data across those

241
00:19:02,450 --> 00:19:07,099
that's more of a user error thing so
yeah he's not gonna talk bad about her

242
00:19:07,099 --> 00:19:13,119
customers do it behind their backs not
in front of their email so of course I'm

243
00:19:13,119 --> 00:19:16,909
gonna say give your issue to be only
flag on your cookies impressed by your

244
00:19:16,909 --> 00:19:21,109
pen tester friends this is like in basic
kind of one-on-one sessions stuff we be

245
00:19:21,109 --> 00:19:24,899
surprised how often we see these things
not happen if you work for a company

246
00:19:24,899 --> 00:19:29,029
that moves out higher velocity were
developers have a lot of freedom to do

247
00:19:29,029 --> 00:19:32,259
what they want you see this time and
time again into applications the missing

248
00:19:32,259 --> 00:19:35,279
the Secure Flight needs to be only fly
and that's ok just reach out to

249
00:19:35,279 --> 00:19:38,599
developers and let him know here's what
you need and use why you need it as only

250
00:19:38,599 --> 00:19:41,419
you can make an educational opportunity
that's something that you're gonna do

251
00:19:41,419 --> 00:19:45,009
not have to fight for very long I know
that our company we've seen this happen

252
00:19:45,009 --> 00:19:50,450
less unless that's alright finally you
need to do your best to ensure their app

253
00:19:50,450 --> 00:19:51,599
can be tampered with

254
00:19:51,599 --> 00:19:55,090
now obviously we all know the normal you
know process script in prevention

255
00:19:55,090 --> 00:20:00,279
mechanisms on stuff I'm here today to
say do content security policy and do it

256
00:20:00,279 --> 00:20:05,090
by also enabling the or disabling the
unsafe in line directive because you

257
00:20:05,090 --> 00:20:11,549
don't know or understand directive is
the short version is this if you have

258
00:20:11,549 --> 00:20:15,369
constant security policy and you disable
unsafe in line you cannot have

259
00:20:15,369 --> 00:20:19,379
JavaScript in your paper your HTML
template files that pretty much renders

260
00:20:19,379 --> 00:20:24,960
crosses scripting impossible it's it's
very very very difficult and it's it's a

261
00:20:24,960 --> 00:20:29,059
large development effort is kind of a
thing people moan and complain but

262
00:20:29,059 --> 00:20:33,049
you're you're auditors are contestants
that uses their party's gonna be much

263
00:20:33,049 --> 00:20:38,210
happier for it and your application the
sixth angeli safer so something to keep

264
00:20:38,210 --> 00:20:39,340
in mind

265
00:20:39,340 --> 00:20:59,070
yes a lot of talk about to be an option
or you could do the crisis gripping

266
00:20:59,070 --> 00:21:02,110
stuff if you happen to be able to inject
something like a meta tag you know you

267
00:21:02,110 --> 00:21:05,320
might be able to do that but yeah
there's not gonna be a ton of options

268
00:21:05,320 --> 00:21:09,490
the second thing about my head if anyone
has an idea for her to throw out but I

269
00:21:09,490 --> 00:21:15,750
think that's pretty much the main ones
such as yourselves if you're looking at

270
00:21:15,750 --> 00:21:18,840
an application and you see what looks
like could be a unique identifier any

271
00:21:18,840 --> 00:21:24,460
panic I remember back in the old days of
PHP BB the old bulletin board software

272
00:21:24,460 --> 00:21:31,130
they would move the SessionID in the
Euro would you do that you're emailing

273
00:21:31,130 --> 00:21:35,090
me session IDs out to people like a you
know come look at my post I just made on

274
00:21:35,090 --> 00:21:36,020
this forum

275
00:21:36,020 --> 00:21:40,910
cause we love all that link and now I'm
you that's not necessarily a great idea

276
00:21:40,910 --> 00:21:45,040
so yes you see any unique identifiers
like that a Euro something as horrific

277
00:21:45,040 --> 00:21:51,840
li Rong alright let's talk a little bit
about new direction so I did promise in

278
00:21:51,840 --> 00:21:54,970
the stalker gonna talk about some of the
newer things that we do new framework

279
00:21:54,970 --> 00:21:58,180
those types of things and one of the big
trends I think we're seeing industries

280
00:21:58,180 --> 00:22:03,930
who needs a stinking d be used to be all
the rage that you know you back to your

281
00:22:03,930 --> 00:22:08,440
background with the relational database
and everything was simple and when those

282
00:22:08,440 --> 00:22:12,190
days are gone as we've got into the
cloud over doing these much larger apps

283
00:22:12,190 --> 00:22:17,580
that are they be easily more easily
scaled

284
00:22:17,580 --> 00:22:21,960
kind of seeing the the disappearance of
DVDs when it comes to session management

285
00:22:21,960 --> 00:22:28,210
now they're there is reasons for this
number one is so I'll be back on number

286
00:22:28,210 --> 00:22:32,640
one reason for this is just performance
database calls of course take time if

287
00:22:32,640 --> 00:22:36,850
you're in some environments that take a
lot of time I kind of depends on

288
00:22:36,850 --> 00:22:39,840
where you're outside and what is doing
whatever structure service you've chosen

289
00:22:39,840 --> 00:22:44,450
but sometimes these calls have a very
highly in situ so we want to do is we

290
00:22:44,450 --> 00:22:48,570
say well let's give the data to the
client to hold onto so this is a pretty

291
00:22:48,570 --> 00:22:52,470
popular paradigm in a number of
frameworks what we'll do is we'll just H

292
00:22:52,470 --> 00:22:57,130
max the data and we'll send it as a
cookie value and the usual just hold on

293
00:22:57,130 --> 00:23:00,430
to it for us and then every time it
comes back we're just gonna take our

294
00:23:00,430 --> 00:23:05,290
take her age matter we may be having our
say keep air raids going to verify that

295
00:23:05,290 --> 00:23:09,350
that's the signature is valid and we'll
move on from there now in and of itself

296
00:23:09,350 --> 00:23:13,540
this is fine if we're gonna go to the
county office but you can understand why

297
00:23:13,540 --> 00:23:16,510
people would be motivated to do this you
can shave a hundred milliseconds off of

298
00:23:16,510 --> 00:23:21,560
every web app call your gonna have some
motivation to do this potentially talk

299
00:23:21,560 --> 00:23:29,300
about maybe why that's kind of a scary
ordeal so didn't want told the security

300
00:23:29,300 --> 00:23:31,980
people you developer people in here I'm
sorry for this I got thousands times

301
00:23:31,980 --> 00:23:35,990
this conference consecutive laps doing
it at you but if you're gonna be doing

302
00:23:35,990 --> 00:23:40,280
something new and cool security no
because there's probably implications of

303
00:23:40,280 --> 00:23:43,350
that and this is a great example of that
sure you can get rid of your session

304
00:23:43,350 --> 00:23:47,010
management in your front and heading
back to database and put on the front

305
00:23:47,010 --> 00:23:50,920
end of things but there are secure
applications so here's a major city

306
00:23:50,920 --> 00:23:54,740
recreation of this very minor change
this is roughly what that is back

307
00:23:54,740 --> 00:23:57,940
process will look like for generating
your cookie typically pay 60 for the

308
00:23:57,940 --> 00:24:01,340
data have some sort of delimiter in
there and then just doing a smack on

309
00:24:01,340 --> 00:24:06,480
that data on outcomes this beautiful
weird-looking string right so keep a 64

310
00:24:06,480 --> 00:24:10,560
Dakota that data usually would be
something like this you would just see a

311
00:24:10,560 --> 00:24:14,860
JSON blob and typically you just have
something like here's the user's I D

312
00:24:14,860 --> 00:24:19,270
maybe here's what you know company there
with or whatever you have the address in

313
00:24:19,270 --> 00:24:23,030
there and you just reference that
information and hopefully you validate

314
00:24:23,030 --> 00:24:26,490
it if you ever encounter something like
this change the signature portion make

315
00:24:26,490 --> 00:24:29,790
sure failed doesn't fail you got some
serious problems as you probably pull

316
00:24:29,790 --> 00:24:34,500
the plug on you about so let's imagine
though that we could change this you

317
00:24:34,500 --> 00:24:39,080
idea of our User from one to three for
20 right well this would happen you'd be

318
00:24:39,080 --> 00:24:40,460
king of the world right

319
00:24:40,460 --> 00:24:46,570
most web applications you can probably
log n as some sort of user with elevated

320
00:24:46,570 --> 00:24:51,390
access even if you can't like I said I
work for a multi-tenant kind of sassa so

321
00:24:51,390 --> 00:24:55,210
if you can change you ideas to someone
else that's a big deal and are in our

322
00:24:55,210 --> 00:24:59,300
environment we don't like the hat so
this is something that is actually

323
00:24:59,300 --> 00:25:04,980
pretty easily done in this whole thing
is affecting environments because if you

324
00:25:04,980 --> 00:25:08,400
remember age Mac something you have to
have is your secret right you passin a

325
00:25:08,400 --> 00:25:14,990
secret into these hashing functions and
outcomes data but if you don't choose a

326
00:25:14,990 --> 00:25:21,650
good secret because you've got this one
Password rule everything now because if

327
00:25:21,650 --> 00:25:26,060
you lose this password some good fortune
cookies and that's not going to be a fun

328
00:25:26,060 --> 00:25:31,130
time we just have to hope we have to
hope like hell you know these passwords

329
00:25:31,130 --> 00:25:43,160
people using isn't something like change
mere secret the entire security of the

330
00:25:43,160 --> 00:25:48,450
entire application rests on this one
single string and thats triggers

331
00:25:48,450 --> 00:25:52,760
probably checked into your source
control if again if you even suspect

332
00:25:52,760 --> 00:25:57,580
this could be happening in your
applications be awfully careful one of

333
00:25:57,580 --> 00:26:00,790
those I want to mention is so I
graduated from Iowa State University and

334
00:26:00,790 --> 00:26:06,540
so did several my classmates and we have
the cyber defense competition which are

335
00:26:06,540 --> 00:26:11,630
different from the sea in CCD sees that
are available are little more localized

336
00:26:11,630 --> 00:26:14,770
to one of the things that we have is
regularly will see applications that are

337
00:26:14,770 --> 00:26:18,210
these new style applications and all
handing out to all teams all these teams

338
00:26:18,210 --> 00:26:22,700
be running them and they never change
the secret and so you can like Jennifer

339
00:26:22,700 --> 00:26:26,860
hold on one hand you've got this I'm
cookie and you can just march 12 any

340
00:26:26,860 --> 00:26:31,360
other AB briefly that cookie as long as
you see this match you're in it's a

341
00:26:31,360 --> 00:26:35,930
devastating an awesome and hilarious
attack because these teams will lock it

342
00:26:35,930 --> 00:26:38,500
down to the nines will think
everything's great on the box they've

343
00:26:38,500 --> 00:26:41,900
got everything patch they found all the
vulnerabilities that didn't change the

344
00:26:41,900 --> 00:26:45,010
key and it's like how I never tell

345
00:26:45,010 --> 00:26:49,090
never ever alright so one of the things
that really interesting about this

346
00:26:49,090 --> 00:26:54,030
scheme is that is actually going to Laos
and some situations to do remote code

347
00:26:54,030 --> 00:26:58,580
execution and you might be asking
yourself how the hell do we get from

348
00:26:58,580 --> 00:27:03,570
Mike just changing cookie values to a
remote code execution is really good

349
00:27:03,570 --> 00:27:06,980
example of again developers not
necessarily I'm I'm not trying to write

350
00:27:06,980 --> 00:27:11,320
on developers developers wouldn't
necessarily understand some of the risks

351
00:27:11,320 --> 00:27:15,450
involved with making some architectural
decisions that put a lot of power in the

352
00:27:15,450 --> 00:27:18,020
hands of the client we're going to look
at an example of that in a couple

353
00:27:18,020 --> 00:27:19,340
frameworks

354
00:27:19,340 --> 00:27:24,080
the first let's define serialization
serialization is the science term in the

355
00:27:24,080 --> 00:27:28,680
context of data storage media by the way
that we say we take data in a given

356
00:27:28,680 --> 00:27:32,110
structure an object state and then we
put that in a format that can be store

357
00:27:32,110 --> 00:27:36,470
right so if you're familiar with the
python is kind of my jam if you're

358
00:27:36,470 --> 00:27:40,420
familiar with Python you're familiar
with the operation called pickle using C

359
00:27:40,420 --> 00:27:45,480
sharp i think is called serialization if
you are using go rubios called marshall

360
00:27:45,480 --> 00:27:51,330
a nun Marshall all of these terms mean
the same thing as serialization but if

361
00:27:51,330 --> 00:27:55,690
you're in Ruby and Python being
serialized means that you have to be

362
00:27:55,690 --> 00:28:00,010
extra super super careful and here's why
because in most languages that are

363
00:28:00,010 --> 00:28:04,600
static and strong here statically typed
in pretty basic you just going to

364
00:28:04,600 --> 00:28:08,860
marshal marshal these objects in their
state but think back to your knowledge

365
00:28:08,860 --> 00:28:11,870
of Python or Ruby especially python
Python

366
00:28:11,870 --> 00:28:14,780
one of my favorite and one of my least
favorite things about that language is

367
00:28:14,780 --> 00:28:18,770
that you can run anything from anywhere
really appropriate statement anywhere

368
00:28:18,770 --> 00:28:22,460
you like as long as is indented the
right amount of spaces by ponder on it

369
00:28:22,460 --> 00:28:27,320
doesn't matter where class definition I
don't know print something in it

370
00:28:27,320 --> 00:28:30,640
print something there why not its
principal atop the files to make sure it

371
00:28:30,640 --> 00:28:37,540
works and so all of these things can
happen anywhere which means soap iPhone

372
00:28:37,540 --> 00:28:43,100
serialization format pickle you can
define an object and it's just gonna run

373
00:28:43,100 --> 00:28:46,670
whatever you put in that object
definition automatically when you load

374
00:28:46,670 --> 00:28:50,710
the objects to the Pythons nature's to
bring these objects in and immediately

375
00:28:50,710 --> 00:28:56,290
start working on them if you create
novel object that just says hey go is

376
00:28:56,290 --> 00:29:01,970
just going to go is gonna run your
statement so demo time is gonna be

377
00:29:01,970 --> 00:29:07,530
alright so let me get a string that i'm
gonna need over here so today have

378
00:29:07,530 --> 00:29:13,100
prepared a simple string gonna pull up
every Pinterest has major utility in the

379
00:29:13,100 --> 00:29:19,740
world I prepared a string already and
how it generated it is going to be a

380
00:29:19,740 --> 00:29:24,840
long complicated process against don't
care about but we need to know so we see

381
00:29:24,840 --> 00:29:30,570
here as a base 64 encoded pickle value
from Python and over here we see some

382
00:29:30,570 --> 00:29:35,050
interesting things we see a system call
to say cat as the password casts a

383
00:29:35,050 --> 00:29:40,470
shadow now I've made this python out
there about to demonstrate and i

384
00:29:40,470 --> 00:29:45,980
actually didn't even need to do this but
just in this package p.m. but I've got

385
00:29:45,980 --> 00:29:49,530
you know it's been a security people a
lot of the stuff you do in your sandbox

386
00:29:49,530 --> 00:29:55,000
as you do is really like like just you
and your sandbox your colleagues to be

387
00:29:55,000 --> 00:29:59,020
running as rude and so did demonstrate
this I wanted to you know get it to a

388
00:29:59,020 --> 00:30:02,050
privilege point where it could be able
to actually read the shadow files I need

389
00:30:02,050 --> 00:30:05,520
to be running my weapons route but then
I realized that I was just running

390
00:30:05,520 --> 00:30:10,640
industry Justin already has a good
reminder these privileged be careful for

391
00:30:10,640 --> 00:30:15,690
that alright so of course execution is
only as dangerous as the permissions

392
00:30:15,690 --> 00:30:20,160
that you have in the context of the
system so keep that in mind

393
00:30:20,160 --> 00:30:27,130
alright so we've got to sit here and
it's real basic also gonna do for us

394
00:30:27,130 --> 00:30:34,860
today

395
00:30:34,860 --> 00:30:46,020
ok I'm not sure what this is a real
basic out on going to say is hello world

396
00:30:46,020 --> 00:30:50,240
we're gonna notice is that we're using
so this is Jane go which is very popular

397
00:30:50,240 --> 00:30:56,030
Python templating engine and framework
what we see here is that we've got this

398
00:30:56,030 --> 00:30:59,170
new SessionID cookie just showed up and
just for clarity we're gonna kill the

399
00:30:59,170 --> 00:31:03,890
whole game here we have the SessionID
cookie and it's got this down you now

400
00:31:03,890 --> 00:31:08,110
what we're gonna do is talk a little
about what's going on the back end so

401
00:31:08,110 --> 00:31:12,030
imagine that this application I'm
already logged into also doing is making

402
00:31:12,030 --> 00:31:16,059
a new session object and storing some
value and in this case and doing UID you

403
00:31:16,059 --> 00:31:21,120
take a look at this could you just email
you ideas on 2344 gonna do is copy and

404
00:31:21,120 --> 00:31:26,120
paste in that tickled value that we have
regenerated now now the important thing

405
00:31:26,120 --> 00:31:29,910
to know once again is that I know the
secret that were using I know this apec

406
00:31:29,910 --> 00:31:33,559
secret because I pulled it out of source
code and again it's actually pretty easy

407
00:31:33,559 --> 00:31:38,640
to find one of these things to repo but
in the situation here already knew it

408
00:31:38,640 --> 00:31:42,950
and so sure enough I'm going to refresh
your page and the funny thing is just

409
00:31:42,950 --> 00:31:48,580
explodes but the real interesting point
here the real treat to watch is what

410
00:31:48,580 --> 00:31:54,110
happened in my session window because
there's a shadow file and all of its

411
00:31:54,110 --> 00:31:57,600
goodness of course if your attacker
trying to do something particularly evil

412
00:31:57,600 --> 00:32:01,840
you are just going to pop the shell on
this box and have at it right so that's

413
00:32:01,840 --> 00:32:08,710
great example of why the serialization
methods are highly highly dangerous so

414
00:32:08,710 --> 00:32:16,630
the real the real lesson here is never
ever ever use a serialization format to

415
00:32:16,630 --> 00:32:20,169
store these cookie values you don't need
to store an object contains a recession

416
00:32:20,169 --> 00:32:25,120
she's like a song which is actually
exactly what people started doing so in

417
00:32:25,120 --> 00:32:30,549
Ruby versions 4.1 enough they change
from using the sterilization methods to

418
00:32:30,549 --> 00:32:31,350
JSON

419
00:32:31,350 --> 00:32:37,789
the same is true for Python Django one
point five or six and below the natural

420
00:32:37,789 --> 00:32:42,000
one point six a change to JSON same for
the last framework last framework as

421
00:32:42,000 --> 00:32:46,549
well but I don't want this to
necessarily sound like we don't have

422
00:32:46,549 --> 00:32:50,809
this problem anymore these changes for
all of these came through in 2013

423
00:32:50,809 --> 00:32:55,850
there's a lot of applications out there
we all know we've got that are old you

424
00:32:55,850 --> 00:33:01,110
know we haven't updated in a long time
we haven't changed change remarks like

425
00:33:01,110 --> 00:33:04,960
that even if you upgraded your framework
again this is the default behavior but

426
00:33:04,960 --> 00:33:08,789
you might have something in the settings
file that still using this mode it is

427
00:33:08,789 --> 00:33:12,570
available in the code bases you have to
explicitly say you want to use it how

428
00:33:12,570 --> 00:33:16,480
certain are you that when someone
upgraded your framework sessions didn't

429
00:33:16,480 --> 00:33:20,370
just break and they want to go change
just activist write something to keep in

430
00:33:20,370 --> 00:33:24,299
mind for doing tests or anything like
that you got access to your source code

431
00:33:24,299 --> 00:33:27,280
take a look see what we're doing if
you're seeing any sort of civilization

432
00:33:27,280 --> 00:33:32,350
on sterilization going on that's the big
problem another one that gets honorable

433
00:33:32,350 --> 00:33:36,140
mention is the bottle framework for
Python calling it a frameworks even a

434
00:33:36,140 --> 00:33:40,440
little bit maybe too much it is a very
very basic system for doing some

435
00:33:40,440 --> 00:33:43,620
templating but still to this day

436
00:33:43,620 --> 00:33:47,320
model uses the Python pickle method in
the worst thing is is that there's even

437
00:33:47,320 --> 00:33:51,220
open issues on their ghetto people like
for the love of all things please stop

438
00:33:51,220 --> 00:33:56,240
doing this but they continue so let's
just take a quick look at what that

439
00:33:56,240 --> 00:34:15,830
looks like here

440
00:34:15,830 --> 00:34:36,330
password you got like six homes are you
doing away boxes anything like that you

441
00:34:36,330 --> 00:34:39,420
know first thing get into the session
code and take a look and see what you've

442
00:34:39,420 --> 00:34:40,160
got

443
00:34:40,160 --> 00:34:44,720
so in this year ago

444
00:34:44,720 --> 00:34:52,030
example right here we see this pic old
dump pass and low dose which is a

445
00:34:52,030 --> 00:34:59,130
example of that happening are right
about here let's talk about active

446
00:34:59,130 --> 00:35:06,440
session theft aka sucka to factor in how
many have you noticed you might not have

447
00:35:06,440 --> 00:35:10,250
been able to see it here this is how
many of you notice that I am located at

448
00:35:10,250 --> 00:35:12,950
get hold dot com right now

449
00:35:12,950 --> 00:35:17,830
a couple alright so I'm the proud new
owner of a new domain that's about three

450
00:35:17,830 --> 00:35:18,630
days old

451
00:35:18,630 --> 00:35:22,590
called get hold dot com no one of the
things that love to do and phishing

452
00:35:22,590 --> 00:35:29,070
attacks is active session had so much
fun it is so trivially easy to set one

453
00:35:29,070 --> 00:35:32,730
of these up what I've done is create a
very simple reverse proxy setup right

454
00:35:32,730 --> 00:35:36,910
and I'm sending all of my traffic to get
a.com the real one and then just doing a

455
00:35:36,910 --> 00:35:40,340
very simple substitute that just says
anytime you see get a.com come through

456
00:35:40,340 --> 00:35:44,760
in the page content changes to get hope
dot com right so really that's all it

457
00:35:44,760 --> 00:35:48,280
takes to set up something worse proxy
and the best part about the Internet

458
00:35:48,280 --> 00:35:52,690
today we all know how horrifically
broken like the certificate stuff is

459
00:35:52,690 --> 00:35:58,730
Reza cell like a $9 sir from Comodo
whatever here to give us our money will

460
00:35:58,730 --> 00:36:03,460
do whatever you want to get my $9
survived got everything that's going

461
00:36:03,460 --> 00:36:04,170
well

462
00:36:04,170 --> 00:36:08,620
oh by the way all of these slides are
actually just put a big linked to the

463
00:36:08,620 --> 00:36:12,840
slides the euro is a senior at the end
of this and you guys can grab the stick

464
00:36:12,840 --> 00:36:18,350
around after but I'll give you two
seconds to get the photos here so one of

465
00:36:18,350 --> 00:36:23,410
the things that is particularly fun
about these is that in Apache Apache has

466
00:36:23,410 --> 00:36:27,400
this awesome ability that you can
actually log cookie contents so I've got

467
00:36:27,400 --> 00:36:28,620
a custom log statement

468
00:36:28,620 --> 00:36:32,540
written in another file just from access
combined all you have to do is just say

469
00:36:32,540 --> 00:36:37,330
you know I want you to log this cookie
value and you can just get the session

470
00:36:37,330 --> 00:36:41,680
cookie that get us using and put out in
that long statement so actually got this

471
00:36:41,680 --> 00:36:48,840
this pulled up here this is the one
window I forgot to have logged in

472
00:36:48,840 --> 00:37:00,060
already ready for this presentations and
I apologize I get logged into the system

473
00:37:00,060 --> 00:37:05,650
think they love doing with our users who
do phishing attacks these kind of like

474
00:37:05,650 --> 00:37:11,430
active ones because we are shocked that
requires two factor

475
00:37:11,430 --> 00:37:22,340
go nice so I wrote this really simple
python script it's not the most fail

476
00:37:22,340 --> 00:37:27,750
that's not good for them a check that I
miss people do it

477
00:37:27,750 --> 00:37:32,130
python script and all it does is tales
the apache log file looking for the

478
00:37:32,130 --> 00:37:37,450
session cookie values when it finds one
it launches a a headless chromium

479
00:37:37,450 --> 00:37:40,800
instance on the server and replays that
session cookie into the head this

480
00:37:40,800 --> 00:37:44,660
instance then takes a screenshot you
have never pfister users more

481
00:37:44,660 --> 00:37:48,850
effectively you can show them the
screenshot of their profile Longden

482
00:37:48,850 --> 00:37:53,950
because that is a truly horrifying
prospect of bonus points for doing it

483
00:37:53,950 --> 00:37:57,770
for single sign-on provider because then
you have access to everything right and

484
00:37:57,770 --> 00:38:10,640
that can be really scary script is
running and everything but no matter try

485
00:38:10,640 --> 00:38:19,240
one more time for design work with

486
00:38:19,240 --> 00:38:37,240
all right let's ditch effort to work yes
this is a screenshot of the settings

487
00:38:37,240 --> 00:38:40,560
page and of course you can choose the
individual on it one of the ones I use

488
00:38:40,560 --> 00:38:46,190
for it's also very effective one is a
slow their Gmail inbox

489
00:38:46,190 --> 00:38:48,530
there's nothing really quite as
effective at showing some of their own

490
00:38:48,530 --> 00:38:53,150
email account we can talk about ways
that we can detect that as well because

491
00:38:53,150 --> 00:38:57,100
one poorly than just owning people you
want to take a very critical look at

492
00:38:57,100 --> 00:39:00,170
your system's try to figure out why was
able to do this right

493
00:39:00,170 --> 00:39:02,790
talk about them or a little bit I don't
want to say that this is all about

494
00:39:02,790 --> 00:39:08,030
owning things so active session that is
a little bit like a Michael Bay movie is

495
00:39:08,030 --> 00:39:11,820
not very subtle though it is very good
causing destruction the problem with

496
00:39:11,820 --> 00:39:17,380
these is that it's all of a sudden all
this traffic might be coming from some

497
00:39:17,380 --> 00:39:22,510
different IP address right like you know
you were hanging out in the room come

498
00:39:22,510 --> 00:39:26,000
from different IP address in on the
front end user probably got fish to go

499
00:39:26,000 --> 00:39:31,060
to get this and if they notice that URL
you might get taken down real quick that

500
00:39:31,060 --> 00:39:35,030
the main advantage from underneath your
real fast so I do want to mention that

501
00:39:35,030 --> 00:39:39,930
you know session theft is great problem
is really good for like targeted attacks

502
00:39:39,930 --> 00:39:46,550
that things up but so let's talk about
the power base session that actually

503
00:39:46,550 --> 00:39:50,280
let's not let's hold up to have any
questions so far this one of those paws

504
00:39:50,280 --> 00:39:57,140
opportunities are they let me know so I
can come out of a session that gramm

505
00:39:57,140 --> 00:40:01,720
cookies off the system and replace them
so it's much easier much quieter way

506
00:40:01,720 --> 00:40:05,580
than doing the whole phishing attack
just user download some malware so

507
00:40:05,580 --> 00:40:09,000
here's in c-sharp of very very simple
example of what used to take to the

508
00:40:09,000 --> 00:40:12,859
street cookies out of the cookie store
or chrome is a simple as just loading up

509
00:40:12,859 --> 00:40:18,000
the sequel I database doing your SELECT
statement and then you get the actual

510
00:40:18,000 --> 00:40:23,100
trade that wherever you want now to the
Google teams credit they thought this

511
00:40:23,100 --> 00:40:24,480
was way too simple

512
00:40:24,480 --> 00:40:29,490
and so they added encryption on their 50
values so I added four new lines of code

513
00:40:29,490 --> 00:40:36,130
for Windows for example they just use
the Windows key store and Mac cheese in

514
00:40:36,130 --> 00:40:40,850
that case as well but you can just like
ask the if you're already logged in as

515
00:40:40,850 --> 00:40:44,970
these users you can then ask for the
user's contacts to get the decryption

516
00:40:44,970 --> 00:40:50,650
key in the decrypted so it's really not
that much much better so all that to say

517
00:40:50,650 --> 00:40:55,820
of course the old paradigm about make
sure that you are really really safe on

518
00:40:55,820 --> 00:40:59,520
your employees is so important to
mention too is that I think in our

519
00:40:59,520 --> 00:41:03,710
industry you know we we get to this
point I like you know my users don't

520
00:41:03,710 --> 00:41:09,010
have local admin so come at me bro no
chrome or any other browser on the

521
00:41:09,010 --> 00:41:13,050
internet its sources cookie store in the
local session contacts on the person is

522
00:41:13,050 --> 00:41:16,740
logged in if you login you can get to it
right so i download malware that can

523
00:41:16,740 --> 00:41:21,520
pillage the cookies I can probably hurt
you in some ways even worse than if I

524
00:41:21,520 --> 00:41:23,240
have local admin on your box

525
00:41:23,240 --> 00:41:26,310
obviously there's some caveats may or
may not be the case but a lot of

526
00:41:26,310 --> 00:41:31,040
environment that is the case let's talk
about what this looks like in the real

527
00:41:31,040 --> 00:41:31,960
world

528
00:41:31,960 --> 00:41:36,570
pillaging caught out and sells forces
the first an update and for the record

529
00:41:36,570 --> 00:41:41,740
is not necessarily their fault though
they're probably a capable of doing more

530
00:41:41,740 --> 00:41:47,890
to protect themselves so sales force had
a variant of the Zeus Trojan created for

531
00:41:47,890 --> 00:41:51,290
a targeted attack against the Salesforce
user night I didn't say sales force

532
00:41:51,290 --> 00:41:57,140
employee a user who pays for Salesforce
now this thing about this one is that is

533
00:41:57,140 --> 00:42:01,570
simply waits for us elsewhere session to
establish and once there is one it

534
00:42:01,570 --> 00:42:05,910
downloads index fills the data in bulk
as much as a confined to just pulls the

535
00:42:05,910 --> 00:42:11,050
whole thing and then send it now this is
from a little article right there that

536
00:42:11,050 --> 00:42:16,930
I've mentioned again there's gonna be
slides available to the question I have

537
00:42:16,930 --> 00:42:21,140
for you guys it was a real attack cause
real damage how badly damaged your

538
00:42:21,140 --> 00:42:25,650
company's image when it's not your
company's fault how much are you doing

539
00:42:25,650 --> 00:42:28,800
to protect your users to make sure that
this does happen to them to damages

540
00:42:28,800 --> 00:42:33,050
localized and minimize so I challenge
you guys today

541
00:42:33,050 --> 00:42:41,050
fight for your users alright so step 12
fighting for your users use TLS

542
00:42:41,050 --> 00:42:43,180
everywhere all the time

543
00:42:43,180 --> 00:42:47,020
uncompromising high-security conference
that's news to you good luck

544
00:42:47,020 --> 00:42:52,520
all right let's talk about geographic
fencing this is one that I believe in

545
00:42:52,520 --> 00:42:58,300
very strongly your user session moves
from Milwaukee to Glasgow should you be

546
00:42:58,300 --> 00:43:06,390
alarmed yes you should be alarmed now
what we know is what I would recommend

547
00:43:06,390 --> 00:43:11,210
is actually implementing so getting
geographic data so easy now you know the

548
00:43:11,210 --> 00:43:15,420
max mind these are free to do I P the
city and stuff you get engine X models

549
00:43:15,420 --> 00:43:19,220
Apache modules that provide that to you
as a request header file your petition

550
00:43:19,220 --> 00:43:23,510
needs to do is check the last two months
jude's there's a very basic form that

551
00:43:23,510 --> 00:43:27,020
they're called have a sign saying just
plug-in allows long on two different

552
00:43:27,020 --> 00:43:30,070
points and it will tell you the great
circle distance between those two points

553
00:43:30,070 --> 00:43:34,880
that you can set up a boundary at your
liking you could say you know if session

554
00:43:34,880 --> 00:43:39,160
moves fifty physical miles till it you
know and that's a really really simple

555
00:43:39,160 --> 00:43:42,200
and easy way to prevent these types of
attacks from happening because if you

556
00:43:42,200 --> 00:43:44,910
see someone move from one to the other

557
00:43:44,910 --> 00:43:48,960
it's probably not a good thing and even
if it is a legitimate session there

558
00:43:48,960 --> 00:43:52,820
probably won't mind that would be one of
those things are like yeah I would

559
00:43:52,820 --> 00:43:57,890
expect to be logged out when I move from
one place to the other second one this

560
00:43:57,890 --> 00:44:02,770
is kind of a nice to have but easily
defeated user-agent pinning you know if

561
00:44:02,770 --> 00:44:07,750
your users using XP I 6 also shows up
from coral probably got a problem and

562
00:44:07,750 --> 00:44:11,760
again it's not like we can spoof user
agents right but this just another thing

563
00:44:11,760 --> 00:44:15,410
you can do because if it's happening in
the background and attackers unaware of

564
00:44:15,410 --> 00:44:17,880
it they might not understand what's
going on but they still could be causing

565
00:44:17,880 --> 00:44:21,280
enough alarming and noise that you can
look into a dread understanding about

566
00:44:21,280 --> 00:44:26,480
what's happening on the back and I'm one
thing that comes up kind of often is IP

567
00:44:26,480 --> 00:44:31,210
address sending you know session moves
from one to another

568
00:44:31,210 --> 00:44:35,070
should be alarmed another thing is I
would actually argue no no you should

569
00:44:35,070 --> 00:44:39,109
not be a lot of enterprise customers
want a very large companies they have

570
00:44:39,109 --> 00:44:42,630
several routes to the Internet several
different ranges are all different ISPs

571
00:44:42,630 --> 00:44:48,990
I've seen cases where someone is in San
Francisco and all of a sudden they start

572
00:44:48,990 --> 00:44:53,240
showing up in LA you know so it's not
necessarily that they've moved it's

573
00:44:53,240 --> 00:44:57,099
purely that their ISP they'd start
taking a different route to the Internet

574
00:44:57,099 --> 00:45:01,750
happens all the time so I wouldn't
recommend doing a federal spending and

575
00:45:01,750 --> 00:45:02,320
this year

576
00:45:02,320 --> 00:45:05,619
ok with walking out your users pretty
forcefully and pretty regularly

577
00:45:05,619 --> 00:45:11,619
that's coming up for you to decide how
crazy one of the things I really want to

578
00:45:11,619 --> 00:45:15,410
stress those that you need to beef up
your learning you know and I P

579
00:45:15,410 --> 00:45:20,960
previously had 0 sessions per day coming
from it has five that's probably an

580
00:45:20,960 --> 00:45:25,530
electable electable event right you
should probably be alerting their song

581
00:45:25,530 --> 00:45:27,380
if you see an anomalous behavior like
that

582
00:45:27,380 --> 00:45:31,200
keep it movin out are over rolling
average I would recommend Splunk for

583
00:45:31,200 --> 00:45:36,180
doing this really great talk of this you
can just keep moving average of ICAO

584
00:45:36,180 --> 00:45:39,140
last five days how many sessions of a
scene from this IP and when it spikes

585
00:45:39,140 --> 00:45:43,520
investigated as a really simple thing to
do and it should like the attack I'm

586
00:45:43,520 --> 00:45:47,339
describing here we do active session
theft that's gonna catch that right so

587
00:45:47,339 --> 00:45:52,710
something to keep in mind here they
wanted to talk to your vendors it's

588
00:45:52,710 --> 00:45:59,580
boring to me how many people very large
without don't do anything at all boring

589
00:45:59,580 --> 00:46:04,190
to me ask your vendors do you do
anything is this an attack that you've

590
00:46:04,190 --> 00:46:09,260
conceded thought about you have a
defense for and and test you know start

591
00:46:09,260 --> 00:46:14,369
a session in one place and let's be
honest wrong words right go get AWS

592
00:46:14,369 --> 00:46:16,330
account in like China

593
00:46:16,330 --> 00:46:23,240
you that our region has been trying to
go get something in Ireland and pop that

594
00:46:23,240 --> 00:46:27,190
session in your browser and see what
happens and it still works you should

595
00:46:27,190 --> 00:46:30,849
probably be on your vendors because that
is not something that I would consider

596
00:46:30,849 --> 00:46:37,320
to be normal behavior in with that that
is I hope you learned something today

597
00:46:37,320 --> 00:46:39,800
now open up for any last question

598
00:46:39,800 --> 00:46:43,550
anyone has any thoughts or comments now
is the time doing tomatoes all the stuff

599
00:46:43,550 --> 00:47:01,570
yes wi-fi 3G that would happen a lot
could really so using so the user's

600
00:47:01,570 --> 00:47:04,980
experience I can't agree more you have
to look your applications I think for

601
00:47:04,980 --> 00:47:08,110
this stock has been focused on business
applications right that wouldn't

602
00:47:08,110 --> 00:47:11,870
necessarily be mobile if you have family
ties into the patient's that a mobile

603
00:47:11,870 --> 00:47:14,740
app uses you might need to make special
considerations for those who can do that

604
00:47:14,740 --> 00:47:35,720
I case-by-case doing any other questions
yes yeah so we've got a situation where

605
00:47:35,720 --> 00:47:40,600
someone's got a job but has to have
access lesson cookie

606
00:47:40,600 --> 00:47:45,750
here's the thing is I would still write
that up right like I can defend all they

607
00:47:45,750 --> 00:47:49,790
want it is still a business risk and so
that's one of those deals where ya you

608
00:47:49,790 --> 00:47:54,770
know I'm not sure you can do other than
to say maybe maybe have some logic in

609
00:47:54,770 --> 00:48:16,460
there the distress be extra careful the
house being use some of that right

610
00:48:16,460 --> 00:48:20,400
absolutely yeah I would never suggest
that all these need to be those two

611
00:48:20,400 --> 00:48:23,869
flags I mean there's definitely cases
where you can't there's JavaScript logic

612
00:48:23,869 --> 00:48:27,900
in our company that absolutely need to
build a satin right cookies as part of

613
00:48:27,900 --> 00:48:35,140
the user experience and I completely
understand alright anything else you got

614
00:48:35,140 --> 00:48:40,570
one minute alright sounds good I
appreciate one coming thank you so very

615
00:48:40,570 --> 00:48:47,420
much

616
00:48:47,420 --> 00:48:48,410
around outside

