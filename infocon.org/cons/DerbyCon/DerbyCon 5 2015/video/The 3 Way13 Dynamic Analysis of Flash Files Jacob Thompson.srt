1
00:00:00,000 --> 00:00:06,850
ok so this is the presentation on the
focus on a dynamic analysis of Adobe

2
00:00:06,850 --> 00:00:10,500
Flash files and some of the things that
you have to do in order to be able to do

3
00:00:10,500 --> 00:00:17,510
so the benefits it will give you and so
on so first I am Jacob Thompson iraq has

4
00:00:17,510 --> 00:00:21,550
a senior security analyst independent
security evaluators some of the things I

5
00:00:21,550 --> 00:00:26,599
personally focus on a reverse
engineering cryptography system and

6
00:00:26,599 --> 00:00:31,039
application security and designing new
systems to be secure and also I gave a

7
00:00:31,039 --> 00:00:35,540
presentation here last year was a stable
hot aunty last client certificates may

8
00:00:35,540 --> 00:00:44,079
have been there a quick word on IRC
where small security company we focus on

9
00:00:44,079 --> 00:00:47,980
performing security assessments for our
customers have either their own products

10
00:00:47,980 --> 00:00:53,699
and the products that they use for their
vendors we focus on defense with focus

11
00:00:53,699 --> 00:00:57,590
on white box but in general are working
on security assessments and trying to do

12
00:00:57,590 --> 00:00:58,500
a good job at that

13
00:00:58,500 --> 00:01:02,660
including looking at things like this so
what happens when run into flash is a

14
00:01:02,660 --> 00:01:07,040
natural outgrowth of one of our security
assessments so what are our ultimate

15
00:01:07,040 --> 00:01:15,390
goals of flash and working with it so
often times we will run into a security

16
00:01:15,390 --> 00:01:20,750
assessment that involves / and
oftentimes we're looking at things like

17
00:01:20,750 --> 00:01:25,950
does this flash application itself had
security problems is storing things

18
00:01:25,950 --> 00:01:31,009
incorrectly or does looking at the code
for this client help us to find

19
00:01:31,009 --> 00:01:35,189
vulnerabilities in the server so maybe
the encryption is all on the client side

20
00:01:35,189 --> 00:01:39,020
right looking at the flash code to help
you to do that maybe there's some hidden

21
00:01:39,020 --> 00:01:44,020
API call button the stop for some
restful webservice that could help us

22
00:01:44,020 --> 00:01:45,570
with that as well

23
00:01:45,570 --> 00:01:50,220
two types of analysis has always static
and dynamic are we looking at code

24
00:01:50,220 --> 00:01:55,040
overusing d compilers or we actually
trying to debug and trace the code as it

25
00:01:55,040 --> 00:02:00,460
runs live the biggest focus and where
the challenge comes in here is flash

26
00:02:00,460 --> 00:02:04,079
files can be compiled into different
modes just like other types of

27
00:02:04,079 --> 00:02:06,550
applications of Release and Debug

28
00:02:06,550 --> 00:02:10,430
there be some challenges that come up
later on trying to do this dynamic

29
00:02:10,430 --> 00:02:16,940
analysis on a release version and our
ultimate goal the perfect would be to

30
00:02:16,940 --> 00:02:20,330
take a release file and turn it back
into debug obviously there's information

31
00:02:20,330 --> 00:02:24,890
lost like comments but thats will be our
ultimate goal is to be able to do all

32
00:02:24,890 --> 00:02:28,650
the types of steps we could do on a
debug version but on a release version

33
00:02:28,650 --> 00:02:32,100
and some ways it flashes implemented
make that harder than you would expect

34
00:02:32,100 --> 00:02:39,329
so first while / right now it's supposed
to be dead and dying but flashes hanging

35
00:02:39,330 --> 00:02:44,480
around in some areas stronger than
others in particular I saw survey

36
00:02:44,480 --> 00:02:48,940
recently that said it's down to about
10% of websites actually the more

37
00:02:48,940 --> 00:02:53,930
popular the website the more likely / is
still there but it's still there and its

38
00:02:53,930 --> 00:02:58,180
traditional strengths which were
streaming video graphics so this

39
00:02:58,180 --> 00:03:05,330
JavaScript web 3d API's are still kind
of coming along but also cross browser

40
00:03:05,330 --> 00:03:10,370
compatibility so html5 as Google says
this will be a wonderful thing to have

41
00:03:10,370 --> 00:03:15,050
an HTML puts it in crime maybe three
years later it's got down to I so flashy

42
00:03:15,050 --> 00:03:18,270
don't have that problem is they're very
aggressive plus all the security

43
00:03:18,270 --> 00:03:22,080
vulnerabilities new feature gets added
to flash it's out there are some very

44
00:03:22,080 --> 00:03:25,840
high percentage of flash users within a
short period of time

45
00:03:25,840 --> 00:03:31,170
also one of the other things that will
help / to hang out and the future is as

46
00:03:31,170 --> 00:03:36,630
Adobe AIR which is their way of using
flash at its core to produce cross

47
00:03:36,630 --> 00:03:42,260
browser cross-platform desktop and
mobile applications all from one code

48
00:03:42,260 --> 00:03:47,080
base so to some we've seen I'd say maybe
about ten to twenty percent of the

49
00:03:47,080 --> 00:03:51,590
mobile applications that we've looked at
involved over here so I think that's

50
00:03:51,590 --> 00:03:55,700
where you'll see a flash in the long
term it will probably vanish off of

51
00:03:55,700 --> 00:04:00,340
websites slowly longer term you'll see
it up here and some of these techniques

52
00:04:00,340 --> 00:04:04,920
are applicable to it especially once we
get into the actual changing of SWF

53
00:04:04,920 --> 00:04:09,420
files so what what does looking at /
help us to do or what types of attacks

54
00:04:09,420 --> 00:04:15,410
surfaces while sanitation is there some
type of API on the server and we want to

55
00:04:15,410 --> 00:04:19,540
know how does the server distinguish
between legitimate user and a fake one

56
00:04:19,540 --> 00:04:24,190
well what does the normal client have to
do in order to authenticate itself to

57
00:04:24,190 --> 00:04:29,410
the summer maybe there's some type of
client-side blunders here maybe the

58
00:04:29,410 --> 00:04:33,030
authentication and session management is
not what you would expect it's very

59
00:04:33,030 --> 00:04:37,830
simple to say we log into the server
again as a SessionID you'll be surprised

60
00:04:37,830 --> 00:04:40,720
how much of a problem that is for web
developers they think they have a better

61
00:04:40,720 --> 00:04:45,490
idea maybe we store the story the
session at the client may be that quiet

62
00:04:45,490 --> 00:04:50,170
just does his own authentication and
uses some random number and hashing

63
00:04:50,170 --> 00:04:54,900
algorithms encryption to prove that were
that user and having the code to the

64
00:04:54,900 --> 00:04:59,360
fire being able to trace through it to
be very helpful for that as I mentioned

65
00:04:59,360 --> 00:05:01,950
earlier maybe there is an API on the
server

66
00:05:01,950 --> 00:05:08,840
maybe it's JSON based restful maybe it
involves XML at so unfortunately and

67
00:05:08,840 --> 00:05:13,970
having that oftentimes the client for
calling those API's is autogenerated so

68
00:05:13,970 --> 00:05:19,110
if you've created some kind of backdoor
undocumented API on the server the

69
00:05:19,110 --> 00:05:23,870
client stop probably has it in it and
you might be able to find that by

70
00:05:23,870 --> 00:05:28,210
looking at the application but looking
at traffic alone may not be so helpful

71
00:05:28,210 --> 00:05:36,260
also cryptography so that's just heading

72
00:05:36,260 --> 00:05:44,990
hi folks here check for aka the freeway
is given a lot of problems this year and

73
00:05:44,990 --> 00:05:50,040
once again we have video crash and this
time where we don't have any audio in

74
00:05:50,040 --> 00:05:56,070
this one about the 24th minute 27
seconds so sorry about the inconvenience

75
00:05:56,070 --> 00:06:01,740
and hope they will figure out how to
make the equipment will be reliable

76
00:06:01,740 --> 00:21:27,810
thanks for your time

77
00:21:27,810 --> 00:21:31,950
you can use Java based tools to reverse
engineer and if this sounds intriguing I

78
00:21:31,950 --> 00:21:35,230
actually have a team member who's doing
a presentation on Java native interface

79
00:21:35,230 --> 00:21:39,280
tomorrow and some of those same
techniques in theory you can use to

80
00:21:39,280 --> 00:21:45,860
attack their native extensions so if you
actually go to this file her go to this

81
00:21:45,860 --> 00:21:49,580
link you can take a look at the tool as
it is maybe some of you have encountered

82
00:21:49,580 --> 00:21:54,050
Adobe Flash already in your security
evaluations maybe you can use it maybe

83
00:21:54,050 --> 00:21:58,870
not but if you go to this location you
can take a look at it so many questions

84
00:21:58,870 --> 00:22:09,560
in the meantime do you run into flash
much in your security evaluations as if

85
00:22:09,560 --> 00:22:15,170
you were doing security here so maybe
this will be useful so good news is I

86
00:22:15,170 --> 00:22:19,280
put it under BSD license and what I'm
working on right now is trying to get

87
00:22:19,280 --> 00:22:24,000
incorporated into that JP excess
Decompiler so we'll see if the author

88
00:22:24,000 --> 00:22:26,240
that's amenable to the author

89
00:22:26,240 --> 00:22:30,590
you might see a new menu option in there
to do this and that would be I think it

90
00:22:30,590 --> 00:22:34,870
would be a big help to all of us here
all rights and any final questions

