1
00:00:12,259 --> 00:00:16,960
good

2
00:00:16,960 --> 00:00:23,960
in

3
00:00:31,340 --> 00:00:38,340
in

4
00:00:43,850 --> 00:00:49,360
at and everybody hearing so everybody
there will be a drinking game associated

5
00:00:49,360 --> 00:00:50,200
with this

6
00:00:50,200 --> 00:00:53,579
talk I'll explain in a minute fight at

7
00:00:53,579 --> 00:00:56,649
Joe if you need a drink go ahead and get
one

8
00:00:56,649 --> 00:01:01,309
thing

9
00:01:01,309 --> 00:01:08,309
go

10
00:01:10,900 --> 00:01:14,640
I'm mortar tell her Richard Bartel um

11
00:01:14,640 --> 00:01:18,900
stalkers shoko time among grab your
friends I'm basically

12
00:01:18,900 --> 00:01:22,250
I was doing some work for mandiant fire
I flair

13
00:01:22,250 --> 00:01:25,479
putting together a reverse engineering
CDF

14
00:01:25,479 --> 00:01:29,090
and this is kinda off some work to send
out a bit because

15
00:01:29,090 --> 00:01:32,820
I needed something to you right
shellcode for me and I realize that

16
00:01:32,820 --> 00:01:33,570
there wasn't

17
00:01:33,570 --> 00:01:36,860
really that much out there that would do
this work for myself um

18
00:01:36,860 --> 00:01:41,189
I decided to put this together and kinda
try to make something

19
00:01:41,189 --> 00:01:44,590
that makes writing shellcode easier for
you up

20
00:01:44,590 --> 00:01:47,840
so for survive have to say I'm there is

21
00:01:47,840 --> 00:01:51,630
a drinking game that friends of mine
play actually at dual-core

22
00:01:51,630 --> 00:01:56,110
and his girlfriend invented this
drinking game as anybody know Adventure

23
00:01:56,110 --> 00:01:56,579
Time

24
00:01:56,579 --> 00:02:01,399
hands out yet great for those of you
that don't know Adventure Time not have

25
00:02:01,399 --> 00:02:02,649
this is going to make sense

26
00:02:02,649 --> 00:02:06,700
so just can't deal with that so

27
00:02:06,700 --> 00:02:09,569
we're going to play adventure time
drinking game I'm are only going to use

28
00:02:09,569 --> 00:02:12,250
a few other rules for some all there
will be snails hidden

29
00:02:12,250 --> 00:02:16,150
if you find the snail everybody drinks I
also

30
00:02:16,150 --> 00:02:19,170
there I will be DOA eyes

31
00:02:19,170 --> 00:02:22,590
I'm in this and if you've never seen no
eyes and look something like this:

32
00:02:22,590 --> 00:02:25,800
so that's no I S help by the way drink

33
00:02:25,800 --> 00:02:31,110
in also

34
00:02:31,110 --> 00:02:34,459
um in honor of this being dual cores

35
00:02:34,459 --> 00:02:38,209
drinking game I decided that I'm going
to play different drinking game which is

36
00:02:38,209 --> 00:02:41,470
every time I hear dual-core last I'm
going to drink

37
00:02:41,470 --> 00:02:44,750
damnit K

38
00:02:44,750 --> 00:02:48,930
this is really gonna bite

39
00:02:48,930 --> 00:02:52,540
said a call at another

40
00:02:52,540 --> 00:02:55,610
alright anyway moving on

41
00:02:55,610 --> 00:02:59,700
so first little bit of history I'm we're
going to

42
00:02:59,700 --> 00:03:03,420
cover a little bit just how shellcode
works and what you have to do to deal

43
00:03:03,420 --> 00:03:05,019
with shellcode in right shoko

44
00:03:05,019 --> 00:03:09,319
so first of all shellcode is your
payload it's not your exploit so

45
00:03:09,319 --> 00:03:09,890
shellcode

46
00:03:09,890 --> 00:03:15,040
is um what you're actually you putting
into your explore your it's not be

47
00:03:15,040 --> 00:03:18,659
the exploit that you're using Sastry
plank is

48
00:03:18,659 --> 00:03:23,300
exploitable but it is not I'm shellcode
social code is what you are providing to

49
00:03:23,300 --> 00:03:23,690
use

50
00:03:23,690 --> 00:03:27,459
add what you're pushing the string like
to explain it are

51
00:03:27,459 --> 00:03:31,980
what you're pushing as your payload I'm
I only bring this up because

52
00:03:31,980 --> 00:03:36,780
I'll that I hear this said wrong all the
time and I just wanna make that really

53
00:03:36,780 --> 00:03:37,319
clear

54
00:03:37,319 --> 00:03:42,330
Saginaw shellcode it has to be position
independent so you have to

55
00:03:42,330 --> 00:03:47,049
I am have no requirements are about
where you are in memory in order to

56
00:03:47,049 --> 00:03:49,379
operate shellcode so for example

57
00:03:49,379 --> 00:03:53,890
when you do like a normal print after
call you are pushing a string on a stack

58
00:03:53,890 --> 00:03:58,769
and you're calling pro-nafta however if
everything's moving at your pushin at

59
00:03:58,769 --> 00:03:59,909
Poyner onto the sack

60
00:03:59,909 --> 00:04:03,890
and it's a very specific address so it
things move around in your at a

61
00:04:03,890 --> 00:04:04,840
different address

62
00:04:04,840 --> 00:04:07,720
that's not going to work so you have to
be decision independently after figure

63
00:04:07,720 --> 00:04:09,530
out ways to suck hot to handle this

64
00:04:09,530 --> 00:04:15,379
finally I am shoko dis very commonly
encoded were filtered so

65
00:04:15,379 --> 00:04:19,259
I'm a lot of times you are going to you
I'm need to you

66
00:04:19,259 --> 00:04:22,620
in code your shellcode in a specific way
in order to use it in

67
00:04:22,620 --> 00:04:25,680
a certain exploit so this for example

68
00:04:25,680 --> 00:04:29,570
if you tried to provide this buffer to
string like in order to exploit it

69
00:04:29,570 --> 00:04:32,990
I'm you're going to fail and the
simplest reason is because string length

70
00:04:32,990 --> 00:04:33,820
expects

71
00:04:33,820 --> 00:04:38,500
up will read up and chill a no bite so
if you have these no bites in here

72
00:04:38,500 --> 00:04:41,790
it's going to read up until then and
your payloads gonna fail because

73
00:04:41,790 --> 00:04:45,169
on in the middle there's no bite so it's
not going to get your actual

74
00:04:45,169 --> 00:04:50,400
for Palin US cell

75
00:04:50,400 --> 00:04:54,500
doe eyes by the way it up

76
00:04:54,500 --> 00:04:58,919
out damaging

77
00:04:58,919 --> 00:05:01,990
so how do you write shoko the biggest
thing

78
00:05:01,990 --> 00:05:05,220
I mean obviously you can write assembly
and it's a pain

79
00:05:05,220 --> 00:05:09,560
so the first thing that I want to say is
you're gonna suck at it if you never in

80
00:05:09,560 --> 00:05:10,500
Shockoe before

81
00:05:10,500 --> 00:05:14,630
like you start going a an trying to
write assembly you're going to make

82
00:05:14,630 --> 00:05:18,120
mistakes you're dealing with registers
you dealing with x86 you

83
00:05:18,120 --> 00:05:21,470
you're actually rating the code that
your processor

84
00:05:21,470 --> 00:05:25,699
I'm is used to reading its difficult
unless you are a computer

85
00:05:25,699 --> 00:05:29,389
you're not going to be good at this or
very artistic basically

86
00:05:29,389 --> 00:05:32,509
up so star

87
00:05:32,509 --> 00:05:35,960
you're going to start out and you're not
going to be good at this but like

88
00:05:35,960 --> 00:05:40,910
if you suck at it it's okay the more you
suck at it and continue to like try

89
00:05:40,910 --> 00:05:44,080
you're going to get better there's a lot
of people that are like yeah I tried to

90
00:05:44,080 --> 00:05:46,770
Rachel code and I gave up because it was
tough

91
00:05:46,770 --> 00:05:50,850
yet stuff like all the hard things in
life for tough but it's worth doing and

92
00:05:50,850 --> 00:05:52,979
I would highly recommend it

93
00:05:52,979 --> 00:05:56,240
so for small assembly is really hard

94
00:05:56,240 --> 00:05:59,970
there are some tools out there that make
it easier to write so if you're actually

95
00:05:59,970 --> 00:06:02,979
just writing assembly go out there to
look for

96
00:06:02,979 --> 00:06:06,569
I'm things to make it easier up this
website is actually one of my favorite

97
00:06:06,569 --> 00:06:07,530
things to use in

98
00:06:07,530 --> 00:06:11,819
I'm writing shoko its I an online /a
somewhere in all it is

99
00:06:11,819 --> 00:06:16,370
is a job web app that will sit there and
take your

100
00:06:16,370 --> 00:06:21,000
I am instructions and spit out easy its
shell code or

101
00:06:21,000 --> 00:06:24,090
I am different representations have it
interns omits

102
00:06:24,090 --> 00:06:29,039
opto so it'll translate a top codes and
and make it really easy to drop into a

103
00:06:29,039 --> 00:06:30,259
sea by a rare

104
00:06:30,259 --> 00:06:33,600
are sorry a C++ program or whatever you
need for it so

105
00:06:33,600 --> 00:06:37,080
I'm really really useful in turns
writing code however it is

106
00:06:37,080 --> 00:06:41,520
definitely tough Lake I'm putting the
dealing with registers and

107
00:06:41,520 --> 00:06:44,800
understanding how to manipulate the
stack and stuff like that

108
00:06:44,800 --> 00:06:48,490
is very tough so writing assembly is
definitely the harder option but you

109
00:06:48,490 --> 00:06:50,630
have full control so it's really

110
00:06:50,630 --> 00:06:55,580
up it's really the best option if you
have a very specific needs

111
00:06:55,580 --> 00:06:59,160
however other ways to do this so I'll

112
00:06:59,160 --> 00:07:02,240
me good the call

113
00:07:02,240 --> 00:07:06,319
break d I so you can take

114
00:07:06,319 --> 00:07:10,169
shellcode for small mess what's out
there and olive its

115
00:07:10,169 --> 00:07:14,150
payloads are freely available so you can
go in just rip those that use them for

116
00:07:14,150 --> 00:07:15,000
your needs

117
00:07:15,000 --> 00:07:18,250
it's a great way to take at taka I'm
shell storm

118
00:07:18,250 --> 00:07:21,830
.org is another great I am place that
has just

119
00:07:21,830 --> 00:07:26,259
a database people that have submitted
outfits show code for

120
00:07:26,259 --> 00:07:29,699
I'm different architectures different
operating systems

121
00:07:29,699 --> 00:07:33,440
and makes a really easy so you can just
I shove shellcode

122
00:07:33,440 --> 00:07:37,039
from that into whatever you need it for
I'll

123
00:07:37,039 --> 00:07:40,860
funny a story that happened to me the up

124
00:07:40,860 --> 00:07:43,900
CTF that I just recently wrote I

125
00:07:43,900 --> 00:07:48,020
stole a piece of shell code from Shell
storm and used it in the third challenge

126
00:07:48,020 --> 00:07:48,669
in

127
00:07:48,669 --> 00:07:54,220
the CTF and I am I get was getting
people were complaining and when

128
00:07:54,220 --> 00:07:58,460
what one guy says a tree legal
challenges thanks for using my shellcode

129
00:07:58,460 --> 00:07:59,580
because it

130
00:07:59,580 --> 00:08:03,389
spots up a specific message box with a
string that I didn't change

131
00:08:03,389 --> 00:08:08,039
and is like yeah I wrote that deal with
it

132
00:08:08,039 --> 00:08:11,539
yet

133
00:08:11,539 --> 00:08:14,810
alright another option

134
00:08:14,810 --> 00:08:18,870
you can steal it up virustotal is out
there and you can go in just

135
00:08:18,870 --> 00:08:22,000
hole binaries down from virustotal and

136
00:08:22,000 --> 00:08:25,000
if you know you're doing in terms of
doing a little reversing

137
00:08:25,000 --> 00:08:28,750
a lot of things actually you shellcode
payloads on virustotal so

138
00:08:28,750 --> 00:08:32,810
go up there find the point at which it's
using show code and just rip that out

139
00:08:32,810 --> 00:08:33,430
and

140
00:08:33,430 --> 00:08:37,229
I'm manipulated to your means guests if
you can figure out where it's providing

141
00:08:37,229 --> 00:08:38,649
its IP importer

142
00:08:38,649 --> 00:08:41,779
whatever your whatever you're looking
for %uh

143
00:08:41,779 --> 00:08:45,339
you can rip that out change it and use
it for what you need so they're subject

144
00:08:45,339 --> 00:08:48,089
only ways to steal shellcode from

145
00:08:48,089 --> 00:08:51,420
up different sources 0 just now where

146
00:08:51,420 --> 00:08:55,420
you know I'm the pointed it is like
somebody else's redness

147
00:08:55,420 --> 00:08:58,630
and they've done the work for you
probably somebody out

148
00:08:58,630 --> 00:09:04,000
already has created a capability that
you need so you can go do it that way

149
00:09:04,000 --> 00:09:07,360
and then finally one of the best ways to
write this is

150
00:09:07,360 --> 00:09:10,510
actually using a compiler to do it for
you

151
00:09:10,510 --> 00:09:13,740
and the incredibly smart man sitting in
the front is

152
00:09:13,740 --> 00:09:18,430
manifestation who actually put together
a nice blog post on how to use

153
00:09:18,430 --> 00:09:21,740
a compiler to write show good for you so
you can tell

154
00:09:21,740 --> 00:09:25,089
Visual Studio hey I need you to write

155
00:09:25,089 --> 00:09:28,950
very stressed even given options and a
bunch of different things and tell it

156
00:09:28,950 --> 00:09:31,980
you can tell it make position
independent code but you can tell it

157
00:09:31,980 --> 00:09:33,510
makes small code

158
00:09:33,510 --> 00:09:37,160
and then you can coordinate a specific
way that'll allow you to do this all go

159
00:09:37,160 --> 00:09:38,570
over that quickly

160
00:09:38,570 --> 00:09:42,950
for small your strings are going to be
broken so it I'm

161
00:09:42,950 --> 00:09:47,300
when you right ATI and or obese coding
you say hey

162
00:09:47,300 --> 00:09:50,940
make this local variable that's a string
um it's going to you

163
00:09:50,940 --> 00:09:55,269
but thats ring in at the data section
and then it's going to reference that

164
00:09:55,269 --> 00:09:59,260
location in memory that won't work in
Joker like we talking about has to be

165
00:09:59,260 --> 00:10:01,010
position independent

166
00:10:01,010 --> 00:10:04,620
so all you have to do is is really basic
change we owe it

167
00:10:04,620 --> 00:10:07,670
we refer to these a stack strings wary
incentive

168
00:10:07,670 --> 00:10:10,670
I'm making a string where you're
referencing a

169
00:10:10,670 --> 00:10:14,320
I am a character pointer you make a
character array and then you

170
00:10:14,320 --> 00:10:18,790
I'm allocate every character separately
and what you get is this

171
00:10:18,790 --> 00:10:22,670
instead of it making Easter the compiler
making a string

172
00:10:22,670 --> 00:10:26,450
that is I'm reference it actually makes
a series

173
00:10:26,450 --> 00:10:31,149
I love Bob pushes onto this are sorry
it's manipulating the string onto the

174
00:10:31,149 --> 00:10:32,019
stack

175
00:10:32,019 --> 00:10:35,730
and then its position independent
because it's using the stack rather than

176
00:10:35,730 --> 00:10:37,470
a very specific address

177
00:10:37,470 --> 00:10:40,700
so that's how you get strings to work
now

178
00:10:40,700 --> 00:10:44,480
next all your imports are gonna be
broken that biggest problem here is

179
00:10:44,480 --> 00:10:47,950
so you see on this call the Reg open key
I'm

180
00:10:47,950 --> 00:10:51,060
its referencing the address forty 40 10

181
00:10:51,060 --> 00:10:54,130
I however is bad address

182
00:10:54,130 --> 00:10:58,220
if bob if you're in position independent
code

183
00:10:58,220 --> 00:11:01,480
the are sorry if you've moved around a
memory

184
00:11:01,480 --> 00:11:04,709
it's not going to be there anymore it's
going to be somewhere else so that's not

185
00:11:04,709 --> 00:11:06,399
going to work

186
00:11:06,399 --> 00:11:10,740
however all you have to do is I'm figure
out where you are in memory and figure

187
00:11:10,740 --> 00:11:14,100
out where those functions are and fix
everything for you

188
00:11:14,100 --> 00:11:21,100
up me model

189
00:11:21,320 --> 00:11:26,019
so you can find where kernel32 is
there's series I think for instructions

190
00:11:26,019 --> 00:11:29,060
that will get you where the base address
in kernel32 is

191
00:11:29,060 --> 00:11:33,390
you can find the export address table of
kernel32.dll

192
00:11:33,390 --> 00:11:37,130
and then you can rebuild all of your
important able by Ash I'm sorry

193
00:11:37,130 --> 00:11:41,029
you can do indeed uglier ways by like
string comparing the import a dress able

194
00:11:41,029 --> 00:11:41,790
names

195
00:11:41,790 --> 00:11:45,290
is it on a different ways to do it but
you can rebuild your whole import

196
00:11:45,290 --> 00:11:46,019
address table

197
00:11:46,019 --> 00:11:50,260
on the fly anywhere in memory so that's
how you handle imports

198
00:11:50,260 --> 00:11:53,899
and finally there's a bunch of different
compiler option so um

199
00:11:53,899 --> 00:11:57,010
I'm not gonna go through every single
one of these I'm however

200
00:11:57,010 --> 00:11:59,690
there's one that I want to point out cuz
I actually had some trouble with this

201
00:11:59,690 --> 00:12:00,079
this

202
00:12:00,079 --> 00:12:03,120
01 option which actually makes I

203
00:12:03,120 --> 00:12:06,790
tells the compiler to make shellcode
smaller and

204
00:12:06,790 --> 00:12:10,550
by the way I'm talking about Visual
Studio here I am as your compiler not

205
00:12:10,550 --> 00:12:14,089
GCC year whatever other ones so

206
00:12:14,089 --> 00:12:19,120
on this 01 option actually tells Visual
Studio to make your code smart

207
00:12:19,120 --> 00:12:22,870
if you're using big strings Visual
Studio will start saying I'm gonna use

208
00:12:22,870 --> 00:12:24,790
media registers for this

209
00:12:24,790 --> 00:12:28,420
and actually starts make mistakes so I
would say I'm be careful with that one

210
00:12:28,420 --> 00:12:29,820
depending on what you're doing

211
00:12:29,820 --> 00:12:33,959
however all these definitely help to
create a small tightly packed peace

212
00:12:33,959 --> 00:12:35,360
shellcode

213
00:12:35,360 --> 00:12:38,709
and these are a few more them that are
just important

214
00:12:38,709 --> 00:12:42,230
and then you have to do things like
making and describing where the entry

215
00:12:42,230 --> 00:12:44,769
point to yourself it's going to be

216
00:12:44,769 --> 00:12:48,339
so finally how do we do this up I A

217
00:12:48,339 --> 00:12:52,389
comically name this mortar shell because
I couldn't resist it was just to get

218
00:12:52,389 --> 00:12:56,139
not to also this is kind of a dick move
try and find us now on that one

219
00:12:56,139 --> 00:12:59,160
am did so

220
00:12:59,160 --> 00:13:04,589
up so up

221
00:13:04,589 --> 00:13:08,630
that so up basically I wanted to put
together a way

222
00:13:08,630 --> 00:13:12,130
issue create shoko didn't make it really
really easy to write

223
00:13:12,130 --> 00:13:15,670
up so the the goal here is to you

224
00:13:15,670 --> 00:13:20,000
have a I am have a simple project that
you can't

225
00:13:20,000 --> 00:13:23,360
up wrap up and say all right I need to
write the shellcode module

226
00:13:23,360 --> 00:13:27,120
I need these pieces to go all in
sequence and I need everything to go

227
00:13:27,120 --> 00:13:30,149
really quickly and not take me hours and
hours and hours

228
00:13:30,149 --> 00:13:33,700
writing shellcode

229
00:13:33,700 --> 00:13:36,820
about yeah

230
00:13:36,820 --> 00:13:42,670
from

231
00:13:42,670 --> 00:13:45,880
I love you to aid in right

232
00:13:45,880 --> 00:13:50,019
so I wanted to put together something
that major R rating show code really

233
00:13:50,019 --> 00:13:50,810
easy and

234
00:13:50,810 --> 00:13:54,529
also I'm allowed you to do things like
hacking in sequence

235
00:13:54,529 --> 00:13:59,550
and doing lotto up at making shellcode
harder to reverse because

236
00:13:59,550 --> 00:14:04,079
up well we see out there a lot as things
that look like this so you have

237
00:14:04,079 --> 00:14:07,470
the shellcode payload and then you have
something that

238
00:14:07,470 --> 00:14:11,940
decode said in aid like a single by tax
or something like that

239
00:14:11,940 --> 00:14:16,570
very very simple so up what's happening
here is you have

240
00:14:16,570 --> 00:14:21,750
a decoder an encoded payload and thats
all that you have

241
00:14:21,750 --> 00:14:25,389
up and

242
00:14:25,389 --> 00:14:28,760
there there's not that much going on
there so the second you get past that

243
00:14:28,760 --> 00:14:29,610
decoder

244
00:14:29,610 --> 00:14:33,779
everything becomes a lot simpler it
becomes incredibly easy to reverse

245
00:14:33,779 --> 00:14:36,829
and I'm you don't have to do that much
work

246
00:14:36,829 --> 00:14:41,100
so I'm not gonna do a quick little demo

247
00:14:41,100 --> 00:14:44,910
doe eyes by the way

248
00:14:44,910 --> 00:14:51,910
well

249
00:15:06,550 --> 00:15:11,540
so up if we open up just a simple
shellcode payload in

250
00:15:11,540 --> 00:15:14,949
and I to in C

251
00:15:14,949 --> 00:15:18,240
I this is pretty basic there's not much
going on here

252
00:15:18,240 --> 00:15:21,519
it's just I am

253
00:15:21,519 --> 00:15:25,000
you can see there's a pilot no ops here
and then there's definitely some code

254
00:15:25,000 --> 00:15:30,139
going on so the second we turn this in
the code

255
00:15:30,139 --> 00:15:33,320
we have this big long know of sled

256
00:15:33,320 --> 00:15:36,430
oval law and then down here um

257
00:15:36,430 --> 00:15:39,750
some interesting stuff so we see pop
push

258
00:15:39,750 --> 00:15:43,639
and then this move and then we see air a
basically an ex or loop so

259
00:15:43,639 --> 00:15:47,850
this X or and a loop we can put together
exactly what's happening here

260
00:15:47,850 --> 00:15:51,009
and so I wrote 8 disgustingly tiny
pieces

261
00:15:51,009 --> 00:15:54,070
tiny script

262
00:15:54,070 --> 00:15:57,440
that saw love yep two lines of code this

263
00:15:57,440 --> 00:16:01,230
head this is all you need up

264
00:16:01,230 --> 00:16:05,100
she can see this you're going through
you figure out exactly how long this is

265
00:16:05,100 --> 00:16:07,259
and then you go through and say okay

266
00:16:07,259 --> 00:16:10,740
I'm going to you decode this

267
00:16:10,740 --> 00:16:17,740
so wheat germ

268
00:16:18,430 --> 00:16:20,330
that's the wrong one

269
00:16:20,330 --> 00:16:24,470
I my bad guys

270
00:16:24,470 --> 00:16:28,790
it be ish good

271
00:16:28,790 --> 00:16:35,620
I hear dual-core so

272
00:16:35,620 --> 00:16:42,620
we go through down here we can see

273
00:16:43,910 --> 00:16:47,880
what's happened is now we actually have
code so after this

274
00:16:47,880 --> 00:16:51,050
we can I just put together functions for
us

275
00:16:51,050 --> 00:16:54,540
and we can actually start going add
going through and figuring out what's

276
00:16:54,540 --> 00:16:56,130
going on you can look in here and see

277
00:16:56,130 --> 00:16:59,700
if anybody's ever River shellcode before
this is where shoppers figuring out

278
00:16:59,700 --> 00:17:01,290
where kernel32 is

279
00:17:01,290 --> 00:17:05,750
I am and all this becomes a lot easier
we can start going through and figuring

280
00:17:05,750 --> 00:17:06,189
out

281
00:17:06,189 --> 00:17:09,520
everything so at this point reversing
this is really simple

282
00:17:09,520 --> 00:17:13,179
and its even easier when you're inside a
debugger because all you have to do is

283
00:17:13,179 --> 00:17:14,740
get past the decoder

284
00:17:14,740 --> 00:17:18,679
and then you can watch in see it I'm
resolve imports and figure everything

285
00:17:18,679 --> 00:17:19,520
out so

286
00:17:19,520 --> 00:17:23,720
very very simple just wanna make it
clear that its all it takes is like two

287
00:17:23,720 --> 00:17:26,199
lines of code for when there's a decoded
the simple

288
00:17:26,199 --> 00:17:29,660
and I don't like that I wanted reversing
shoko to be

289
00:17:29,660 --> 00:17:36,660
a little more difficult so what I wanted
to do was put together a way where

290
00:17:37,540 --> 00:17:40,990
um instead of you just having a payload

291
00:17:40,990 --> 00:17:44,940
um let's have a modular payload let's
have a sequence of things that you know

292
00:17:44,940 --> 00:17:45,880
need to happen

293
00:17:45,880 --> 00:17:49,380
let's do them in such a way that things
are actually packed

294
00:17:49,380 --> 00:17:52,380
and each one of those pieces is packed
in

295
00:17:52,380 --> 00:17:55,870
multiple ways so that you can just run a
single by text or

296
00:17:55,870 --> 00:17:58,870
Ryan rc4 something get past the

297
00:17:58,870 --> 00:18:02,830
on the decoded parts so let's make it
this way so

298
00:18:02,830 --> 00:18:05,850
the first thing the one here here we're
doing kernel32

299
00:18:05,850 --> 00:18:09,780
pokémon library getting from all the

300
00:18:09,780 --> 00:18:14,440
where WS to underscore 32 is and
basically setting up everything you need

301
00:18:14,440 --> 00:18:15,290
for Shell

302
00:18:15,290 --> 00:18:18,460
was your teacher these pieces in
sequence and have the following pieces

303
00:18:18,460 --> 00:18:19,990
still be encoded while you're

304
00:18:19,990 --> 00:18:25,380
actually running these things so on how
this works is the first wanna be encoded

305
00:18:25,380 --> 00:18:30,309
and then as things are I'm decoding
they'll go in sequence and you can see

306
00:18:30,309 --> 00:18:30,990
on the right

307
00:18:30,990 --> 00:18:34,660
the number of times things are encoded
so their encoded multiple times

308
00:18:34,660 --> 00:18:40,090
different keys different ways encoding
I'm so that it's not really easy to you

309
00:18:40,090 --> 00:18:43,880
reverse engineer this so you actually
have to do some work if you wanted to go

310
00:18:43,880 --> 00:18:45,580
through and figure this stuff out

311
00:18:45,580 --> 00:18:50,140
so that's one thing if you haven't in
sequence that's not that hard to a

312
00:18:50,140 --> 00:18:50,770
problem

313
00:18:50,770 --> 00:18:55,230
however you can get much more difficult
so I'm say that I'm writing something

314
00:18:55,230 --> 00:18:55,720
that I

315
00:18:55,720 --> 00:18:59,250
don't want somebody to reverse their
simple tricks that you might want to do

316
00:18:59,250 --> 00:19:03,300
Lake I'm check if you are inside the
debugger check if you're inside a

317
00:19:03,300 --> 00:19:04,270
virtual machine

318
00:19:04,270 --> 00:19:09,070
I and then do some benign stuff
otherwise and if you're not in either of

319
00:19:09,070 --> 00:19:09,530
those

320
00:19:09,530 --> 00:19:13,230
then let's actually do our people think
up so

321
00:19:13,230 --> 00:19:17,370
a how do we do this how do we handle
conditionals becomes much more difficult

322
00:19:17,370 --> 00:19:20,669
if we want to pack in sequence and have
multiple layers

323
00:19:20,669 --> 00:19:24,270
coding however if we a if we look at
this graph

324
00:19:24,270 --> 00:19:27,740
we can figure out exactly how much we
can pack

325
00:19:27,740 --> 00:19:31,240
and what levels can Aki each other so

326
00:19:31,240 --> 00:19:34,570
I'm this is the same graph as the 1i was
just showing you

327
00:19:34,570 --> 00:19:38,750
with one being I'm be is it being
debugged

328
00:19:38,750 --> 00:19:42,030
I and to being is it in nvm and then

329
00:19:42,030 --> 00:19:46,059
78 are your benign path and then on the
other path is your evil

330
00:19:46,059 --> 00:19:50,429
so we have multiple passed through this
you can either

331
00:19:50,429 --> 00:19:54,250
if you're in a VM you're going to take
this path if you are

332
00:19:54,250 --> 00:19:58,020
in a debugger you're going to take this
path otherwise you're actually going to

333
00:19:58,020 --> 00:19:58,860
do your paler

334
00:19:58,860 --> 00:20:03,300
so what you get from that is if every
node has

335
00:20:03,300 --> 00:20:06,780
an encoder call it like a prime up

336
00:20:06,780 --> 00:20:10,169
that I'm that node can I am

337
00:20:10,169 --> 00:20:13,530
tuning code anything that it is in the
path of

338
00:20:13,530 --> 00:20:17,590
always so you see like I am Number 3 no

339
00:20:17,590 --> 00:20:21,590
is always in every path through this
crash that

340
00:20:21,590 --> 00:20:24,940
goes to four so three ginning code four
and five and six

341
00:20:24,940 --> 00:20:29,530
and so on and so forth so um just to
demonstrate this a one can encode

342
00:20:29,530 --> 00:20:30,390
everything

343
00:20:30,390 --> 00:20:34,530
to canning toad up three four five and
six and so on and so forth

344
00:20:34,530 --> 00:20:37,800
so we can figure out what can in code
everything else

345
00:20:37,800 --> 00:20:41,460
and go from there by the way to ice up

346
00:20:41,460 --> 00:20:46,610
so this is the levels and encoding and
how we can put all this together

347
00:20:46,610 --> 00:20:50,210
I am and I it allows us to add these

348
00:20:50,210 --> 00:20:53,820
this different level love it love
encoding so

349
00:20:53,820 --> 00:20:57,110
I have all this working now I'm going to
get into use some of the other things

350
00:20:57,110 --> 00:20:58,030
that

351
00:20:58,030 --> 00:21:02,340
up are important in terms of being able
to write

352
00:21:02,340 --> 00:21:05,669
pillows are you would actually care
about I have not

353
00:21:05,669 --> 00:21:08,810
done this yet I know how to do it though
so we're going to up

354
00:21:08,810 --> 00:21:12,390
we need to figure out how can you how
deep can put a switch statement together

355
00:21:12,390 --> 00:21:13,810
because you want something like

356
00:21:13,810 --> 00:21:17,230
I'm if you're writing a backdoor you
need to be able to you

357
00:21:17,230 --> 00:21:21,230
I put together a switch statement for
handling commands

358
00:21:21,230 --> 00:21:24,630
so how this would usually work as you
would have I am

359
00:21:24,630 --> 00:21:28,780
a call I'm to you figure out which
command that you have

360
00:21:28,780 --> 00:21:31,750
and then you'll do a jump table that'll
go to one of the different functions

361
00:21:31,750 --> 00:21:33,040
that handles like a man

362
00:21:33,040 --> 00:21:36,100
so ill C you have downloaded file upload
file rachelle

363
00:21:36,100 --> 00:21:39,150
so this is what we had this is the code
it turns into

364
00:21:39,150 --> 00:21:43,000
up from this however

365
00:21:43,000 --> 00:21:46,169
if war and if the memory addresses
change

366
00:21:46,169 --> 00:21:49,240
that's not going to work

367
00:21:49,240 --> 00:21:53,950
that is up did

368
00:21:53,950 --> 00:21:58,820
let me get grab got really evil for a
second there area

369
00:21:58,820 --> 00:22:03,530
yeah so anyways I'm when you're in
position independent code

370
00:22:03,530 --> 00:22:06,630
on that I can work that's unacceptable
stowe

371
00:22:06,630 --> 00:22:11,400
I

372
00:22:11,400 --> 00:22:14,460
up so a that jumped ably

373
00:22:14,460 --> 00:22:17,580
won't know where to go because as
functions are in different places so

374
00:22:17,580 --> 00:22:20,510
we have to figure out a way to make that
work so the way to do it is actually

375
00:22:20,510 --> 00:22:21,320
this is

376
00:22:21,320 --> 00:22:25,800
sleigh almost correct code I'm that I've
just put up here as an example of how to

377
00:22:25,800 --> 00:22:26,630
do this

378
00:22:26,630 --> 00:22:30,550
so you can basically put an offset table
since you are

379
00:22:30,550 --> 00:22:34,290
essentially this obviously Asian and or
whatever I'm

380
00:22:34,290 --> 00:22:37,940
the Packer that I'm putting together is
functioning as the compiler

381
00:22:37,940 --> 00:22:41,220
I know where the offset have each of
these is going to be

382
00:22:41,220 --> 00:22:44,470
compared to the code that I'm rightish
so I can say all right

383
00:22:44,470 --> 00:22:47,480
from here here the offsets to all these
on

384
00:22:47,480 --> 00:22:51,929
to all these functions so we'll use
those in order to figure out where to go

385
00:22:51,929 --> 00:22:57,330
will basically bill that a an offset
table rather than a direct virtual after

386
00:22:57,330 --> 00:23:00,520
address table and that'll solve this
problem for so we'll have

387
00:23:00,520 --> 00:23:05,159
a switch statement they can't go to any
number I S which cases

388
00:23:05,159 --> 00:23:09,750
so the next thing that we need his lips
salutes become really difficult because

389
00:23:09,750 --> 00:23:14,310
say that you have a %uh sequence of
things that you need to encode

390
00:23:14,310 --> 00:23:17,610
are sorry that you need to have happen
over and over again

391
00:23:17,610 --> 00:23:21,700
you're going to be you gonna hit the
decoder before every single one of them

392
00:23:21,700 --> 00:23:24,850
again and again I'm so say the you have
something like

393
00:23:24,850 --> 00:23:30,090
i nie I have a and I want to do some
anti p.m. check so I'm going to you

394
00:23:30,090 --> 00:23:33,970
go to sleep I'm to calculate primis I'm
gonna calculated

395
00:23:33,970 --> 00:23:37,960
hi I'm gonna go around and do this a
bunch of time so that it takes like

396
00:23:37,960 --> 00:23:41,659
our because just going to sleep isn't
enough a lot of

397
00:23:41,659 --> 00:23:45,650
sandboxes say alright if you use the
sleep function

398
00:23:45,650 --> 00:23:49,150
whatever parameter you pass to it it's
now one so that you don't actually go to

399
00:23:49,150 --> 00:23:50,270
sleep

400
00:23:50,270 --> 00:23:54,900
up so by doing this this is actually
something the fuzzy and I

401
00:23:54,900 --> 00:24:00,000
fuzzing up and I'll I opted for a Siolim
our talk that we put together

402
00:24:00,000 --> 00:24:03,750
this will create a really ugly loop
that's going to do so

403
00:24:03,750 --> 00:24:07,510
that's just going to sit there and do
some processing go to sleep do some

404
00:24:07,510 --> 00:24:09,590
processing for somewhere between

405
00:24:09,590 --> 00:24:14,559
to 24 hours as well data for and that'll
abate San a sandbox is pretty easily

406
00:24:14,559 --> 00:24:19,330
and then after its done that for a while
up it will go into its actual evil

407
00:24:19,330 --> 00:24:20,559
payload

408
00:24:20,559 --> 00:24:23,880
I'm so if you want to do this however
with the

409
00:24:23,880 --> 00:24:27,400
like system I'm proposing yes

410
00:24:27,400 --> 00:24:31,830
up the this won't work because each
other's is going to have that

411
00:24:31,830 --> 00:24:35,640
decoder in front of it and if you go
through it multiple times is going to

412
00:24:35,640 --> 00:24:38,059
have tried every decode everything so

413
00:24:38,059 --> 00:24:42,520
thats about that will break it after the
first iteration of the loop

414
00:24:42,520 --> 00:24:45,559
so the way to solve this I'm is actually

415
00:24:45,559 --> 00:24:49,650
you have an encoder you all so you have
a decoder in front but you also have a

416
00:24:49,650 --> 00:24:50,419
encoder

417
00:24:50,419 --> 00:24:54,360
afterwards so every time the you execute
one of these modules

418
00:24:54,360 --> 00:24:57,780
I am it's going to decode it first and
then

419
00:24:57,780 --> 00:25:00,909
it's going to execute it and then it's
going to rain coat it so that

420
00:25:00,909 --> 00:25:04,840
you can't read all of them as these
kinda atomic units in execution

421
00:25:04,840 --> 00:25:08,179
and it I'm anytime that you need to go
in re execute one

422
00:25:08,179 --> 00:25:10,860
you just have to go back to the
beginning a decoder and it'll do it all

423
00:25:10,860 --> 00:25:12,510
again

424
00:25:12,510 --> 00:25:16,000
so how this would work is it it'll
decode

425
00:25:16,000 --> 00:25:20,110
and it'll go through and green coding go
through over and over and over again and

426
00:25:20,110 --> 00:25:20,929
it will

427
00:25:20,929 --> 00:25:24,070
I am basically in this scenario

428
00:25:24,070 --> 00:25:27,290
it would be sleeping calculating just hi
whatever

429
00:25:27,290 --> 00:25:30,850
in order to you evade a sandbox really
easily I am

430
00:25:30,850 --> 00:25:33,929
and so this is a great way in or at

431
00:25:33,929 --> 00:25:37,580
this will solve the problem shearing out

432
00:25:37,580 --> 00:25:41,870
I am how to handle four lives and stuff
like that

433
00:25:41,870 --> 00:25:45,240
so that's how we can do you all love

434
00:25:45,240 --> 00:25:50,470
up

435
00:25:50,470 --> 00:25:55,070
that's how we can handle all the kind of
I'm toting constructs that we need for

436
00:25:55,070 --> 00:25:55,750
this

437
00:25:55,750 --> 00:25:58,760
up like I said I have on some this
working

438
00:25:58,760 --> 00:26:02,560
I actually I wanted to have this code
release up by the time I was giving a

439
00:26:02,560 --> 00:26:03,750
stock however

440
00:26:03,750 --> 00:26:08,000
life got it kinda been away so I plan on
having this release in the next week or

441
00:26:08,000 --> 00:26:09,389
two hopefully

442
00:26:09,389 --> 00:26:12,720
up but I have most service working
except for

443
00:26:12,720 --> 00:26:15,929
I need to you basically right encoders
because I don't have four

444
00:26:15,929 --> 00:26:19,510
the looping working yet our we're going
to go

445
00:26:19,510 --> 00:26:21,980
the question is how to how do we make
this and how do you make this really

446
00:26:21,980 --> 00:26:25,050
easy for everybody used as my goal here
was

447
00:26:25,050 --> 00:26:30,200
a year a red team a year are Redding CT
asking its members and challenges

448
00:26:30,200 --> 00:26:33,440
how can you make something really easily
wary I am

449
00:26:33,440 --> 00:26:37,350
you're going to put together this you
know payload that you need

450
00:26:37,350 --> 00:26:40,690
and it's not going to take you that much
time up

451
00:26:40,690 --> 00:26:43,990
so when I was writing this ETF
challenges it took me a while

452
00:26:43,990 --> 00:26:48,139
I was reading shoko does put putting all
this together and takes a lot of time so

453
00:26:48,139 --> 00:26:49,080
I wanted to make

454
00:26:49,080 --> 00:26:52,889
everybody else's life easier so they
could just recreate I'm what I was doing

455
00:26:52,889 --> 00:26:54,450
it needed

456
00:26:54,450 --> 00:26:57,820
cell once again I had to you

457
00:26:57,820 --> 00:27:01,540
this was pretty terrible to begin with I
A

458
00:27:01,540 --> 00:27:05,360
went through multiple iterations
upgrading really ugly framework that did

459
00:27:05,360 --> 00:27:06,060
not

460
00:27:06,060 --> 00:27:10,460
%uh home handle and half for the things
that I needed to handle so

461
00:27:10,460 --> 00:27:14,250
I'm were not its out the point where I
know exactly how to do it in such a way

462
00:27:14,250 --> 00:27:14,850
that it's

463
00:27:14,850 --> 00:27:17,970
easy for people to use and its clean and

464
00:27:17,970 --> 00:27:21,850
very straightforward to the you actually
don't technically need to know how to

465
00:27:21,850 --> 00:27:26,210
right code even I want it wanted to make
this dumb enough that

466
00:27:26,210 --> 00:27:29,860
if you need a CTF challenge and you
don't right c plus plus

467
00:27:29,860 --> 00:27:32,899
you can still make a reversing challenge
really easily

468
00:27:32,899 --> 00:27:37,659
like I wanted it to be that simple so
the architecture is actually

469
00:27:37,659 --> 00:27:41,080
I'm pretty simple you have to kind of
Maine I

470
00:27:41,080 --> 00:27:44,470
mod two main ideas here you need to have
your Packers so

471
00:27:44,470 --> 00:27:47,860
you need to have a description up how
things are going to be encoded so the

472
00:27:47,860 --> 00:27:50,389
thing that encodes each module on the
thing that the

473
00:27:50,389 --> 00:27:53,830
each model %uh and then you need modulus
so

474
00:27:53,830 --> 00:27:58,330
models can be something like a custom
shellcode module

475
00:27:58,330 --> 00:28:01,600
it can be a very specific thing like

476
00:28:01,600 --> 00:28:06,690
I'm downloads from Shell storm a I am
river Scheldt back in the a module

477
00:28:06,690 --> 00:28:11,230
picking me up things as simple as I
wanna hide a string in memory

478
00:28:11,230 --> 00:28:14,690
that gets decoded at runtime so that
they have to take all the way through

479
00:28:14,690 --> 00:28:14,970
this

480
00:28:14,970 --> 00:28:18,200
ugly binary in order to get to it back
in the a model

481
00:28:18,200 --> 00:28:23,130
that'll never execute it'll just
actually jump over stuff like that

482
00:28:23,130 --> 00:28:27,909
so the Packers are basically I'm ways to
pack the code so you need

483
00:28:27,909 --> 00:28:32,070
um you have basically two functions this
is actually

484
00:28:32,070 --> 00:28:35,950
you technically need I to have a third
function in order to you

485
00:28:35,950 --> 00:28:40,440
support group but you need something to
describe how to encode the date

486
00:28:40,440 --> 00:28:44,169
up eat something that says okay given

487
00:28:44,169 --> 00:28:47,179
whatever moduli need pass it to you

488
00:28:47,179 --> 00:28:50,380
I am this function and I will have

489
00:28:50,380 --> 00:28:53,570
job II will have that module included
with this

490
00:28:53,570 --> 00:28:56,720
actor I'm you need that and then you
need something that will say how to

491
00:28:56,720 --> 00:28:58,919
decode it at runtime on the fly

492
00:28:58,919 --> 00:29:02,820
so the difficult this is actually where
the main balkan the were curious

493
00:29:02,820 --> 00:29:05,909
because it's really hard to rate this in
I'm

494
00:29:05,909 --> 00:29:09,500
anything but assembly so writing
something that says

495
00:29:09,500 --> 00:29:12,860
given a variable-length I am packet air

496
00:29:12,860 --> 00:29:17,220
module how do I packet on the fly and
then

497
00:29:17,220 --> 00:29:20,520
Ansari decoded on the fly and then
reinjured it on the fly

498
00:29:20,520 --> 00:29:25,480
that decoding in reading coding part is
difficult and take some time

499
00:29:25,480 --> 00:29:28,780
up so put you actually have to write
that

500
00:29:28,780 --> 00:29:32,270
in assembly and it's not I haven't
figured out or a way to

501
00:29:32,270 --> 00:29:36,149
rated in actual in c-bus possum a
compiler put it together for me

502
00:29:36,149 --> 00:29:40,120
because there's things like you need it
to you usually need to you

503
00:29:40,120 --> 00:29:44,620
decode the whole thing on the fly and
you have to be modifying the lengthy

504
00:29:44,620 --> 00:29:48,780
that your decoding so you have to go
through and and know where the exact

505
00:29:48,780 --> 00:29:52,030
I'm bites are that you have to modify on
the fly so that

506
00:29:52,030 --> 00:29:54,800
I'm writing this is a little more
difficult and tends to be where the work

507
00:29:54,800 --> 00:29:55,770
is

508
00:29:55,770 --> 00:29:58,810
and then I your modules are the are
simpler

509
00:29:58,810 --> 00:30:02,490
I there things like finding hurdle
thirties base address

510
00:30:02,490 --> 00:30:07,629
or I am you know calling WS a start up
for doing so my ATM

511
00:30:07,629 --> 00:30:11,230
creating an IT doing all that kind of
stuff in the air marshals

512
00:30:11,230 --> 00:30:14,760
and these can be whatever you want I am
this is where like actually writing

513
00:30:14,760 --> 00:30:16,649
shall coach comes in where you need to

514
00:30:16,649 --> 00:30:20,790
go and say re: make Visual Studio rate
this module for me

515
00:30:20,790 --> 00:30:23,850
and then I'm just gonna shove it in and
and

516
00:30:23,850 --> 00:30:27,100
packet you know 100 different ways I'll
so that when it at

517
00:30:27,100 --> 00:30:30,500
it will run but somebody tries to
reverse it they're gonna have to run

518
00:30:30,500 --> 00:30:34,240
through all the stuff if they want to
get

519
00:30:34,240 --> 00:30:37,879
and then finally um the other part in
this so how I describe this

520
00:30:37,879 --> 00:30:41,919
is just for the chase on object so I
wanted to make this simple enough that

521
00:30:41,919 --> 00:30:46,100
um if you trading much telling nothing
it's still going to create

522
00:30:46,100 --> 00:30:49,830
ATI shellcode model for you so up

523
00:30:49,830 --> 00:30:54,240
and basically hash I Jason object that
will define all the data a

524
00:30:54,240 --> 00:30:57,520
about the shocker bob you want to
generate I am

525
00:30:57,520 --> 00:31:02,030
the models you want to use I the way
that you want them in coded

526
00:31:02,030 --> 00:31:05,850
the code flow up the models and so on
and so forth

527
00:31:05,850 --> 00:31:10,110
and it will go in create this whole
thing for you just from that

528
00:31:10,110 --> 00:31:14,350
so I'm just a demonstration

529
00:31:14,350 --> 00:31:17,720
so me now that's

530
00:31:17,720 --> 00:31:21,240
not gonna show up at all great um

531
00:31:21,240 --> 00:31:24,840
I this is the for sample and for example
I have here

532
00:31:24,840 --> 00:31:29,070
and this is how how ridiculous least I'm
simple I wanted to make this

533
00:31:29,070 --> 00:31:32,310
I'm it's pretty hard to see but
basically what I'm describing here's a

534
00:31:32,310 --> 00:31:33,710
chase on that has

535
00:31:33,710 --> 00:31:37,010
a sequence I love modules and every
single one of them

536
00:31:37,010 --> 00:31:40,310
is not actually specified all you have
in there is

537
00:31:40,310 --> 00:31:43,740
a label for the module and what module
comes that's

538
00:31:43,740 --> 00:31:47,110
so this um what I am

539
00:31:47,110 --> 00:31:50,210
what will be created from this is a
sequence modules and it's just going to

540
00:31:50,210 --> 00:31:50,720
create

541
00:31:50,720 --> 00:31:54,840
variable link module I'm bullet no outs
and that's all it's going to do if you

542
00:31:54,840 --> 00:31:56,330
don't tell it what to put inside

543
00:31:56,330 --> 00:31:59,440
days I am now rather than

544
00:31:59,440 --> 00:32:03,090
making all your eyes bleed and trying to
demo all the debug I put together

545
00:32:03,090 --> 00:32:05,610
something to make this a lot easier to
show

546
00:32:05,610 --> 00:32:09,230
I'll so

547
00:32:09,230 --> 00:32:13,240
so this is I am this is the

548
00:32:13,240 --> 00:32:17,149
to a lot together um basically you have
to provide

549
00:32:17,149 --> 00:32:22,870
a I am at the Jason file that you need
for creating your module

550
00:32:22,870 --> 00:32:26,860
act sorry for creating your I am your
shellcode

551
00:32:26,860 --> 00:32:30,679
package total I the output file

552
00:32:30,679 --> 00:32:35,290
also I'll you there are different ways
you can help with this so this can spit

553
00:32:35,290 --> 00:32:35,600
out

554
00:32:35,600 --> 00:32:40,129
a c-string for you I'm can spit out just
the binary up the shellcode so it'll

555
00:32:40,129 --> 00:32:40,889
just get out

556
00:32:40,889 --> 00:32:44,060
bites or can also spit out inexcusable
so

557
00:32:44,060 --> 00:32:49,540
I you have been using this really crappy
tiny compiler call TCC

558
00:32:49,540 --> 00:32:52,600
%uh that basically I like because

559
00:32:52,600 --> 00:32:56,820
it does things really simply and in
comical way is

560
00:32:56,820 --> 00:33:00,790
up it was at the this will actually go
in

561
00:33:00,790 --> 00:33:05,000
use the compiler to you compile and put
together you put yourself in my jewel

562
00:33:05,000 --> 00:33:08,850
into a binary you can run so different
ways output it

563
00:33:08,850 --> 00:33:12,030
um and the last thing that's list there
is

564
00:33:12,030 --> 00:33:15,730
a graph I'll so this is entirely for
demo purposes

565
00:33:15,730 --> 00:33:20,730
I am so if we run this um you don't
really see any output however

566
00:33:20,730 --> 00:33:23,860
its spit out a bunch of things and you
can see me

567
00:33:23,860 --> 00:33:28,320
on experts autograph up the actual coach
love this so you that you see what

568
00:33:28,320 --> 00:33:32,000
you're doing if you creating a
complicated sequencer shelter

569
00:33:32,000 --> 00:33:35,260
this is going to be really necessary so
they make sure that you know where

570
00:33:35,260 --> 00:33:36,460
things are going and how

571
00:33:36,460 --> 00:33:39,470
howStuffWorks so if you don't provide
anything

572
00:33:39,470 --> 00:33:42,609
it's going to go through and create just
a sequence know of like that's all

573
00:33:42,609 --> 00:33:44,139
that's happening here is

574
00:33:44,139 --> 00:33:49,159
module have no option packs model a
model no option pack so on and so forth

575
00:33:49,159 --> 00:33:52,369
however um you can do things like

576
00:33:52,369 --> 00:33:56,210
here you specify the code flow this so
you specify which

577
00:33:56,210 --> 00:34:00,450
arm which node Air Marshal is the child
of another module

578
00:34:00,450 --> 00:34:04,540
I if you do things if you go and change
wannabes it's really

579
00:34:04,540 --> 00:34:09,310
really simple to do

580
00:34:09,310 --> 00:34:13,690
and I'm your it'll update you can see

581
00:34:13,690 --> 00:34:18,000
here all have changed is the second the
second model now goes to the seventh

582
00:34:18,000 --> 00:34:19,190
which then goes on

583
00:34:19,190 --> 00:34:22,369
third and so we just move that one

584
00:34:22,369 --> 00:34:26,480
up for it I am earlier and a coat really
really easy to do so that's

585
00:34:26,480 --> 00:34:30,790
up really simple examples of how this
works however you can do more

586
00:34:30,790 --> 00:34:35,050
complicated things like here we're I'm
this is a chase on describing something

587
00:34:35,050 --> 00:34:35,780
like

588
00:34:35,780 --> 00:34:40,480
up put together in my a model that does
check for debugging

589
00:34:40,480 --> 00:34:43,669
and does conditionals I haven't actually
put the code

590
00:34:43,669 --> 00:34:47,320
here just because to make it a little
shorter for you guys to read

591
00:34:47,320 --> 00:34:54,320
um however if you go and run this

592
00:35:01,650 --> 00:35:05,680
you'd see really simple um so now your
coat clothes gonna be something like

593
00:35:05,680 --> 00:35:07,400
it's going to check for debugging

594
00:35:07,400 --> 00:35:10,880
its gonna branch on EA axe and then it's
going to either go to the river Scheller

595
00:35:10,880 --> 00:35:12,550
it's going to go to something when I'm

596
00:35:12,550 --> 00:35:16,109
seeing you really simple things like
this if you wanna put together

597
00:35:16,109 --> 00:35:19,410
you know something for your red team
exercise some

598
00:35:19,410 --> 00:35:22,750
evil halo that you're going to use to
you on some company

599
00:35:22,750 --> 00:35:28,099
I am if you

600
00:35:28,099 --> 00:35:31,520
I'm say that you're writing a back door
you can do something like this

601
00:35:31,520 --> 00:35:34,580
I like I said this is not actually
working at but this is

602
00:35:34,580 --> 00:35:37,830
this is what I would spit out terms at
the code below to show you

603
00:35:37,830 --> 00:35:41,910
you can do you get your command you can
switch on EA axe and then do things like

604
00:35:41,910 --> 00:35:42,730
cover shell

605
00:35:42,730 --> 00:35:46,220
download file upload file all that's
possible I am

606
00:35:46,220 --> 00:35:50,880
so put together all these things for you
and then finally the last example I

607
00:35:50,880 --> 00:35:51,800
wanted to show

608
00:35:51,800 --> 00:35:55,640
is if you wanted to put something like
CTF together

609
00:35:55,640 --> 00:35:59,950
I'll really really easy to do

610
00:35:59,950 --> 00:36:04,190
so say the you wanna CTF that I'm you're
forcing somebody to go through

611
00:36:04,190 --> 00:36:07,550
if anybody did the flare on challenged
recently the third challenge was written

612
00:36:07,550 --> 00:36:08,420
with this

613
00:36:08,420 --> 00:36:12,400
and it's basically just making you go
through and watch showed

614
00:36:12,400 --> 00:36:16,000
and unpack things in sequence so it's
decoding

615
00:36:16,000 --> 00:36:19,940
secrets modules and then finally in
memory will be a string at some point

616
00:36:19,940 --> 00:36:23,510
like that that's all that the third
third challenge was and I would take

617
00:36:23,510 --> 00:36:27,800
on this is all it would take to rate
this so you i three you have a pilot no

618
00:36:27,800 --> 00:36:28,990
ops and then

619
00:36:28,990 --> 00:36:32,359
at the very end is going to have a
hidden key thats all

620
00:36:32,359 --> 00:36:35,530
up from that you can hash I am

621
00:36:35,530 --> 00:36:39,300
site up with justice tiny Jason

622
00:36:39,300 --> 00:36:44,900
which I'm you be able to put together
this ETF challenge that says

623
00:36:44,900 --> 00:36:47,910
okay how much how much pain to I want
them to put

624
00:36:47,910 --> 00:36:50,990
to go through in order to get to the ski
alright

625
00:36:50,990 --> 00:36:54,210
that's how many modules I want or acts
are doing branching

626
00:36:54,210 --> 00:36:58,300
doing checking for debugging stuff like
that you can you make a CTF John

627
00:36:58,300 --> 00:37:02,440
really easily with this I'm so that was
another one of Michael's us

628
00:37:02,440 --> 00:37:08,040
so anyways

629
00:37:08,040 --> 00:37:12,790
up this is where'd the this is the Get
Help page for

630
00:37:12,790 --> 00:37:17,380
mortar shell job like I said a I haven't
put it up there yet because I i want to

631
00:37:17,380 --> 00:37:19,930
be in a complete state for people used
by the time so

632
00:37:19,930 --> 00:37:22,970
check this in the next week or two if
you're interested in this

633
00:37:22,970 --> 00:37:25,650
I'm one the other reasons I wanted to
get this talk is just to get some

634
00:37:25,650 --> 00:37:28,369
feedback on terms of things people want
to see in this

635
00:37:28,369 --> 00:37:32,030
I am I definitely want to open this up
so that people are putting up modules

636
00:37:32,030 --> 00:37:34,530
for other people to use in making this
kind of a shell

637
00:37:34,530 --> 00:37:40,010
much shocker database that people can
use and put things together easily n

638
00:37:40,010 --> 00:37:43,060
I am so what else can we do with this

639
00:37:43,060 --> 00:37:46,990
I'm there's definitely some other
options that we have here

640
00:37:46,990 --> 00:37:51,580
up yes said we can II if we can make us
more about a

641
00:37:51,580 --> 00:37:55,220
I'm just I'll well-rounded database
shellcode its gonna make everybody's

642
00:37:55,220 --> 00:37:56,099
life easier

643
00:37:56,099 --> 00:38:00,330
I'm I've definitely had some times were
had a ratio code I i assume that

644
00:38:00,330 --> 00:38:04,460
a lot of people that I do some red team
software right CTS

645
00:38:04,460 --> 00:38:08,580
have had to do that as well I don't know
if anybody evil is in the room but I'm

646
00:38:08,580 --> 00:38:10,580
sure you friends show goes well

647
00:38:10,580 --> 00:38:14,960
like this would make it a lot and a lot
easier to put together these models

648
00:38:14,960 --> 00:38:18,720
and put everything together so

649
00:38:18,720 --> 00:38:22,660
and thats was kinda Michael one of my
main goals that I

650
00:38:22,660 --> 00:38:25,770
I'm hoping his one other is also this

651
00:38:25,770 --> 00:38:29,460
the other thing is you know I'd like to
see more reversing challenges come out

652
00:38:29,460 --> 00:38:30,530
in this

653
00:38:30,530 --> 00:38:34,550
there you know there's writing a
reversing challenges haha however

654
00:38:34,550 --> 00:38:38,060
this gives you the opportunity to put
together one really easily

655
00:38:38,060 --> 00:38:41,080
and in a small and tight package that's

656
00:38:41,080 --> 00:38:44,440
easy to pass around so I want its I

657
00:38:44,440 --> 00:38:47,630
I'm hoping that people start using this
to rights in CT ass and

658
00:38:47,630 --> 00:38:51,310
and do stuff like that up in terms of

659
00:38:51,310 --> 00:38:54,680
other things that we can do I that I
happens done

660
00:38:54,680 --> 00:38:59,619
yet so I'm like I said the I don't have
looping working at so I need to you at

661
00:38:59,619 --> 00:39:00,330
the

662
00:39:00,330 --> 00:39:05,240
on the stage a free including after up
that's basically next on my list

663
00:39:05,240 --> 00:39:10,290
you can also see things like say that I
want a specific module

664
00:39:10,290 --> 00:39:14,280
to execute and after its done executing
I wanted to zero itself out

665
00:39:14,280 --> 00:39:19,349
so that you have like a sandbox regular
take regularly takes memory sash shots

666
00:39:19,349 --> 00:39:20,440
or something

667
00:39:20,440 --> 00:39:23,960
I wanna make sure that if that code is
an executing its not going to show up in

668
00:39:23,960 --> 00:39:25,420
a memory stature

669
00:39:25,420 --> 00:39:29,580
that something else you could do you
avoid that um is also things we do in

670
00:39:29,580 --> 00:39:31,869
terms of changing the format of how this
works

671
00:39:31,869 --> 00:39:35,520
go currently I'm decoding in place

672
00:39:35,520 --> 00:39:39,770
all these sheltered modules are just
being decoded in sequence

673
00:39:39,770 --> 00:39:43,800
and its up it that we can change that

674
00:39:43,800 --> 00:39:47,010
to you actually have the show could
marshal copy its

675
00:39:47,010 --> 00:39:51,920
copy stuff out to you a buffer so that
nothing's actually decoded in that

676
00:39:51,920 --> 00:39:56,420
I that one a in place you could actually
have a single buffer this is

677
00:39:56,420 --> 00:40:00,869
over and over and over and over again
and copy everything over to that

678
00:40:00,869 --> 00:40:04,619
that's one different way that would
probably make it a lot harder to

679
00:40:04,619 --> 00:40:08,640
handle because there would be a lot of
switching between the two

680
00:40:08,640 --> 00:40:12,250
up also I don't have any support for
filtering in this yet

681
00:40:12,250 --> 00:40:15,380
that's not I a crazy difficult problem
also

682
00:40:15,380 --> 00:40:19,640
Metasploit is there sir I'm pretty sure
that I I will be able to read

683
00:40:19,640 --> 00:40:23,369
how the handle filtering up are a lot of
the filtering support

684
00:40:23,369 --> 00:40:26,480
and put it into this so I'm thats

685
00:40:26,480 --> 00:40:29,920
something for the future though it
definitely is necessary

686
00:40:29,920 --> 00:40:33,690
up however doesn't exist yet

687
00:40:33,690 --> 00:40:39,510
and then that's all I have self take any
questions

688
00:40:39,510 --> 00:40:44,430
that

689
00:40:44,430 --> 00:40:51,430
yet ho

690
00:40:56,619 --> 00:41:00,220
so um the modules will be pre-made
modulus

691
00:41:00,220 --> 00:41:04,849
I that are basically just I Rd made
modules that have

692
00:41:04,849 --> 00:41:08,890
you know it works on this operating
system this architecture

693
00:41:08,890 --> 00:41:13,849
I am however you can do things like I
have a custom module that i won i won

694
00:41:13,849 --> 00:41:17,010
I'm this sequence of bytes you can just
specify alright

695
00:41:17,010 --> 00:41:20,160
I know what I need I I stole it from
here I'll

696
00:41:20,160 --> 00:41:23,190
echoes and as the sequence of bytes
inside Jason

697
00:41:23,190 --> 00:41:28,500
yet

698
00:41:28,500 --> 00:41:35,500
church yet yet known to be a great way
to accomplishing something I resist

699
00:41:45,410 --> 00:41:52,410
yet you did

700
00:41:52,450 --> 00:41:59,450
sorry so I'm what he meant you were
asking if I having coaters sewer

701
00:42:00,089 --> 00:42:04,440
church so I I've written a couple
already so I i

702
00:42:04,440 --> 00:42:07,960
took the easy route Road single by text
or multi by text or

703
00:42:07,960 --> 00:42:11,470
II and just add those to begin with and
i also

704
00:42:11,470 --> 00:42:14,630
wrote them in multiple different ways
using different registers and things

705
00:42:14,630 --> 00:42:15,560
like that so that

706
00:42:15,560 --> 00:42:18,680
it's not you in seeing on it so how it
does

707
00:42:18,680 --> 00:42:22,330
I am you can specify which encoder you
want you so

708
00:42:22,330 --> 00:42:26,320
I wanna multibyte X or for this model
you can specify that and then it will

709
00:42:26,320 --> 00:42:30,030
if you have multiple encoders sofort
those two encoders I have

710
00:42:30,030 --> 00:42:33,420
I've written multiple it will randomly
select 10 them each time

711
00:42:33,420 --> 00:42:36,420
some yep

712
00:42:36,420 --> 00:42:40,040
UK you can specify everything I wanted
to be as simple as possible for

713
00:42:40,040 --> 00:42:41,910
specifying keys Best Buy

714
00:42:41,910 --> 00:42:46,000
I'm at you can control everything in
terms of how things are good

715
00:42:46,000 --> 00:42:50,490
so yeah that's how I wrote the CDF John
list I want this multi by text or key

716
00:42:50,490 --> 00:42:51,420
for

717
00:42:51,420 --> 00:42:54,530
on this module in this party by text or
you for this module

718
00:42:54,530 --> 00:42:57,530
and then my boss told me that I could
have ask you dont so

719
00:42:57,530 --> 00:43:00,839
up so that I had to remove all others
and change everything

720
00:43:00,839 --> 00:43:07,670
but yeah noted

721
00:43:07,670 --> 00:43:14,310
start

722
00:43:14,310 --> 00:43:17,369
I mean yes and no I'm so

723
00:43:17,369 --> 00:43:20,480
who winning they are bigger than your
normal shocker

724
00:43:20,480 --> 00:43:23,570
a lot I was a I'm so for example

725
00:43:23,570 --> 00:43:27,250
one of the smallest windows download and
execute show code payloads

726
00:43:27,250 --> 00:43:30,770
of is 200 bytes that i've seen

727
00:43:30,770 --> 00:43:33,869
up then all I'm adding to it is

728
00:43:33,869 --> 00:43:38,130
an encoding loop in a decoding will see
you're adding maybe 10 bytes to both

729
00:43:38,130 --> 00:43:38,849
sides

730
00:43:38,849 --> 00:43:41,880
so I I would argue they're not that much
bigger

731
00:43:41,880 --> 00:43:45,540
um obviously there are going to be times
where if you need the smallest piece

732
00:43:45,540 --> 00:43:46,790
shall be possible

733
00:43:46,790 --> 00:43:50,599
you needed to execute no matter what you
don't care somebody's going to reverse

734
00:43:50,599 --> 00:43:51,099
it

735
00:43:51,099 --> 00:43:54,460
then yet don't use this like it would be
absolutely useless for that

736
00:43:54,460 --> 00:43:57,900
but interns have actually likes you know
it's not like it's doubling code size or

737
00:43:57,900 --> 00:43:59,339
anything like that

738
00:43:59,339 --> 00:44:03,150
it's doing just tire tiny tiny bit at
the beginning

739
00:44:03,150 --> 00:44:07,910
tiny bit at the end because all you're
adding is just the encoding and decoding

740
00:44:07,910 --> 00:44:13,089
in the questions

741
00:44:13,089 --> 00:44:13,859
cool thanks I guess

