1
00:00:01,579 --> 00:00:08,579
in I will thank you all very much for
coming

2
00:00:25,840 --> 00:00:29,070
my name is set our today we're going to
talk about exploiting cross to mean that

3
00:00:29,070 --> 00:00:30,070
XML files

4
00:00:30,070 --> 00:00:33,180
so that's me

5
00:00:33,180 --> 00:00:36,450
I've been playing with computers for as
long as I remember I'm sure like most

6
00:00:36,450 --> 00:00:36,870
have you

7
00:00:36,870 --> 00:00:40,379
currently I'm an associate at the canopy

8
00:00:40,379 --> 00:00:43,559
I'm also a member of Nova hackers and
lost DC

9
00:00:43,559 --> 00:00:48,440
so the burbs at this talk is to
introduce you to the cross to mean that

10
00:00:48,440 --> 00:00:49,430
excel file

11
00:00:49,430 --> 00:00:53,629
hopefully to convince you to start
looking for on are every web application

12
00:00:53,629 --> 00:00:54,550
assessment you do

13
00:00:54,550 --> 00:00:58,120
and lastly to show you how to create
working exploits

14
00:00:58,120 --> 00:01:03,649
if you find a vulnerable convict file
I'm sure most of you are familiar with

15
00:01:03,649 --> 00:01:06,390
same origin policy but I'm gonna cover
it really quickly

16
00:01:06,390 --> 00:01:09,570
for the beginning so same origin policy

17
00:01:09,570 --> 00:01:15,600
is same origin policy restricts how to
document a script loaded from one origin

18
00:01:15,600 --> 00:01:19,439
can interact with the resource from
another origin so basically it's saying

19
00:01:19,439 --> 00:01:21,930
that if you have you know one browser
open

20
00:01:21,930 --> 00:01:25,490
with two tabs wine and mailed out Google
Doc com

21
00:01:25,490 --> 00:01:29,770
the other tabs is you know Derby Conn
dot com there's no code at Derby contact

22
00:01:29,770 --> 00:01:30,310
com

23
00:01:30,310 --> 00:01:34,090
that can piggyback your session with
male doc Google Doc on

24
00:01:34,090 --> 00:01:38,680
and interact with that data and still
that is controlled it is enforced by the

25
00:01:38,680 --> 00:01:39,509
browser

26
00:01:39,509 --> 00:01:45,460
and that is called same origin policy so
what is the cost him an XML file

27
00:01:45,460 --> 00:01:48,810
well let me explain it this way so in it

28
00:01:48,810 --> 00:01:54,229
if us with his embed its site /a and it
tries to load data from saint be

29
00:01:54,229 --> 00:01:57,930
the Flash Player will disallow this
request by Paul

30
00:01:57,930 --> 00:02:01,219
an Ashes sound like same origin policy
cause flash implements

31
00:02:01,219 --> 00:02:04,360
its own same origin policy however

32
00:02:04,360 --> 00:02:07,520
with flash site be can grant site a

33
00:02:07,520 --> 00:02:11,260
access to its data through across two
main policy file

34
00:02:11,260 --> 00:02:17,860
and that house file is the costume and
XML so here's an example

35
00:02:17,860 --> 00:02:21,190
a the cross to excel file at WWW dot

36
00:02:21,190 --> 00:02:25,890
Adobe dot com and what we're looking for
here is the allow access from directive

37
00:02:25,890 --> 00:02:29,069
in particular were looking for

38
00:02:29,069 --> 00:02:32,459
the domain that is being allowed

39
00:02:32,459 --> 00:02:35,930
and for being trusted so if you put all
this together

40
00:02:35,930 --> 00:02:40,060
WWW dot Adobe dot com will allow

41
00:02:40,060 --> 00:02:45,440
us with loaded from Macromedia dot com
Adobe dot com Photoshop dot com

42
00:02:45,440 --> 00:02:48,580
Acrobat dot com to interact with

43
00:02:48,580 --> 00:02:51,830
WWW dot Adobe dot com on behalf out the

44
00:02:51,830 --> 00:02:56,470
the user here is an example of what
could be

45
00:02:56,470 --> 00:03:01,010
and overly permissive cross-domain excel
file so again we're looking at the allow

46
00:03:01,010 --> 00:03:02,379
access from directive

47
00:03:02,379 --> 00:03:05,540
but in this case work the domain Eagle
star

48
00:03:05,540 --> 00:03:09,019
so we're not just trusting switched
loaded from any

49
00:03:09,019 --> 00:03:12,500
are from the Ford whitelist domains
we're loading us were floated for

50
00:03:12,500 --> 00:03:13,489
anywhere on the internet

51
00:03:13,489 --> 00:03:19,019
for anywhere so for those of you that
are already familiar with application

52
00:03:19,019 --> 00:03:19,780
security

53
00:03:19,780 --> 00:03:23,459
think exploitation obvious flaw as

54
00:03:23,459 --> 00:03:27,739
a mix between cross-site request forgery
and cross-site scripting

55
00:03:27,739 --> 00:03:31,709
cross a request forgery because in every
example that i'm gonna show you

56
00:03:31,709 --> 00:03:35,459
the swift or flash object is making a
request

57
00:03:35,459 --> 00:03:39,519
on a is getting the victim to execute a
forced request

58
00:03:39,519 --> 00:03:44,290
cross-site scripting because unlike with
traditional cross our quest for jury

59
00:03:44,290 --> 00:03:47,989
you can you know where you can make your
quest but you can see the data comes

60
00:03:47,989 --> 00:03:48,549
back

61
00:03:48,549 --> 00:03:52,590
well with this boner ability you can
actually see the data comes back and

62
00:03:52,590 --> 00:03:55,299
send it back to the attacker just like
you could cross site scripting

63
00:03:55,299 --> 00:03:58,610
and the last thing I want to point out
on the slides that

64
00:03:58,610 --> 00:04:02,569
although this is a server-side
vulnerability meaning are specifically a

65
00:04:02,569 --> 00:04:03,720
misconfiguration

66
00:04:03,720 --> 00:04:08,180
love one particular file on the server
its a client-side exploitation

67
00:04:08,180 --> 00:04:12,540
meaning victim or the the user out-voted
applications being exploited

68
00:04:12,540 --> 00:04:16,769
show to illustrate that last point I
tried to

69
00:04:16,769 --> 00:04:19,859
use these graphics here so you have
three parties that need to be involved

70
00:04:19,859 --> 00:04:21,169
in this exportation

71
00:04:21,169 --> 00:04:24,320
the vulnerable server the malicious
server

72
00:04:24,320 --> 00:04:28,270
hosting the evil sweet file and the
victim

73
00:04:28,270 --> 00:04:32,479
I want to call attention to the fact
that at no point in this attack

74
00:04:32,479 --> 00:04:35,740
does the malicious server communicate
with the vulnerable sir

75
00:04:35,740 --> 00:04:38,389
I got stuck on this nice try to
understand this phone ability in the

76
00:04:38,389 --> 00:04:39,290
beginning so English

77
00:04:39,290 --> 00:04:43,590
share that what is required is that the
victim

78
00:04:43,590 --> 00:04:46,600
needs to you the authenticated with the
vulnerable server

79
00:04:46,600 --> 00:04:49,840
or a perfect addition to require you
know maybe have proposed access to that

80
00:04:49,840 --> 00:04:51,990
horrible server

81
00:04:51,990 --> 00:04:55,070
the second requirement is that the
victim

82
00:04:55,070 --> 00:04:59,180
has to somehow arrived at the militia
server so fishing

83
00:04:59,180 --> 00:05:02,979
I watering hole attack something like
that

84
00:05:02,979 --> 00:05:06,300
now this arrow is showing that was the
victim goes the malicious

85
00:05:06,300 --> 00:05:09,660
server they download the Swiffer now
that's what this executing

86
00:05:09,660 --> 00:05:13,729
in the browser victim and I think this
is probably the most

87
00:05:13,729 --> 00:05:17,110
interesting request so this is what's
different than traditional crosser

88
00:05:17,110 --> 00:05:18,509
course forgery

89
00:05:18,509 --> 00:05:22,419
the evil swift the author the evil swift
can code I switched to make any

90
00:05:22,419 --> 00:05:24,090
cross-domain request

91
00:05:24,090 --> 00:05:28,039
at the author chooses its flash player
that will not allow that

92
00:05:28,039 --> 00:05:32,680
unless ask permission first and what it
does is ask permission by requesting

93
00:05:32,680 --> 00:05:35,710
cross to mean that XML

94
00:05:35,710 --> 00:05:40,139
and because as you can see in yellow
cross-domain tax and now in this case

95
00:05:40,139 --> 00:05:43,639
is allow access from all domains it's
basically saying

96
00:05:43,639 --> 00:05:48,430
I don't care where district came from it
can interact your

97
00:05:48,430 --> 00:05:51,710
this next arrow is pretty much now that

98
00:05:51,710 --> 00:05:56,009
that cross-domain request that the offer
a author upheaval surface coated

99
00:05:56,009 --> 00:06:00,080
that request is being made and is called
arrows was to be the bounty you know the

100
00:06:00,080 --> 00:06:02,800
sensitive data that is being taken

101
00:06:02,800 --> 00:06:07,440
from the vulnerable domain the forced
you know the force data has been given

102
00:06:07,440 --> 00:06:08,979
back to the US west

103
00:06:08,979 --> 00:06:12,690
and now that use with consent that
either anywhere chooses and the attacker

104
00:06:12,690 --> 00:06:15,770
unit happy dance

105
00:06:15,770 --> 00:06:18,889
so before we move on from

106
00:06:18,889 --> 00:06:22,150
I devote talking about the vulnerable
server and particularly you know

107
00:06:22,150 --> 00:06:26,910
the allow access from Donegal star I
want to call attention to the fact that

108
00:06:26,910 --> 00:06:27,340
the

109
00:06:27,340 --> 00:06:31,910
vulnerable server is still vulnerable
even if it is not using flash in any way

110
00:06:31,910 --> 00:06:32,910
whatsoever

111
00:06:32,910 --> 00:06:37,630
put another way if you drop a overly
permissive crossed into XML at the root

112
00:06:37,630 --> 00:06:41,759
ok any server that you can think of that
server is now potentially vulnerable if

113
00:06:41,759 --> 00:06:44,210
it has since information

114
00:06:44,210 --> 00:06:47,639
the other thing I wanna call out is the
cross-domain XML

115
00:06:47,639 --> 00:06:51,639
applies to the fully qualified domain
name

116
00:06:51,639 --> 00:06:55,009
so if you have to applications on
vulnerable dot com two completely

117
00:06:55,009 --> 00:06:56,960
separate teams but you know they share
the same

118
00:06:56,960 --> 00:07:00,069
judy n one is ap bottle dot com slash

119
00:07:00,069 --> 00:07:03,970
application 1 the other is vulnerable
dot com slash application to

120
00:07:03,970 --> 00:07:08,620
if one of those two application teams
drops a border will cost him an XML file

121
00:07:08,620 --> 00:07:11,910
it affects both applications

122
00:07:11,910 --> 00:07:15,759
lastly I want to highlight the fact that
you could potentially have

123
00:07:15,759 --> 00:07:20,150
and actually this is comin you can have
a wide-open cross-domain

124
00:07:20,150 --> 00:07:24,650
policy file but if there's nothing worth
stealing and there's nothing worth

125
00:07:24,650 --> 00:07:28,259
up forging there's there's no risk to
think about a public site that has

126
00:07:28,259 --> 00:07:29,840
nothing but public information

127
00:07:29,840 --> 00:07:32,819
it's okay that a Swiffer anywhere in the
world can interact with it because

128
00:07:32,819 --> 00:07:35,740
there's nothing we're still in

129
00:07:35,740 --> 00:07:38,919
and a good example love kind of those
last two points is

130
00:07:38,919 --> 00:07:45,840
capital is WWW dot Capital One 360 Dhaka

131
00:07:45,840 --> 00:07:50,030
sorry you see here we have an overly
permissive or a wide open

132
00:07:50,030 --> 00:07:54,120
a fully trusting cross to me that excel
file

133
00:07:54,120 --> 00:07:57,729
but all the sensitive information
happens it secured a Capital One 360

134
00:07:57,729 --> 00:08:04,289
there's nothing sensitive that happens
www so there's no dress we can move on

135
00:08:04,289 --> 00:08:07,849
I want to cover a few ways to discover
this portability

136
00:08:07,849 --> 00:08:11,860
I'm hopefully I you know you leave this
talk with a little bit interest and you

137
00:08:11,860 --> 00:08:16,050
will start this is the first we can do
it just type cross to mean that XML

138
00:08:16,050 --> 00:08:19,530
at the end any FQDN that you're browsing
or that you're testing

139
00:08:19,530 --> 00:08:22,990
and we're looking for is if that domain
has since the Reformation

140
00:08:22,990 --> 00:08:26,139
does the allow access from directive
specify

141
00:08:26,139 --> 00:08:31,310
domain Eagle star if you use a tool like
Burke suite pro

142
00:08:31,310 --> 00:08:34,419
I bet a lot of the automated scanners or
scanner tools

143
00:08:34,419 --> 00:08:39,349
up support this but persuades pro in
active scanner motor if your stiff your

144
00:08:39,349 --> 00:08:40,719
domain is in scope

145
00:08:40,719 --> 00:08:46,810
it will requests crossed into XML and
I'll tell you that as a starter

146
00:08:46,810 --> 00:08:50,430
the last one then I'll touch on his neck
to has a specific plugin called Client

147
00:08:50,430 --> 00:08:51,459
Access Policy

148
00:08:51,459 --> 00:08:54,830
to do the same thing you look for the
cross-domain XML and tell you if it

149
00:08:54,830 --> 00:08:57,420
contains a wild-card

150
00:08:57,420 --> 00:09:00,370
so I wanted to slow down for one second
to talk about the history of this

151
00:09:00,370 --> 00:09:02,019
vulnerability

152
00:09:02,019 --> 00:09:06,589
this is an old vulnerability the cross
to me that excel file was introduced and

153
00:09:06,589 --> 00:09:08,529
concept across two main requests

154
00:09:08,529 --> 00:09:12,080
was introduced in 2003 by Flash Player 7

155
00:09:12,080 --> 00:09:15,850
in 2006 Chris Shiflett you incorporate
injure my Grossman

156
00:09:15,850 --> 00:09:19,240
were blocking about this and were
identifying the risk here in the

157
00:09:19,240 --> 00:09:20,950
viability

158
00:09:20,950 --> 00:09:25,620
enjoying Korean released approve concept
code that you can use

159
00:09:25,620 --> 00:09:30,070
to show the gonna Billy in 2010 earlier
of adult also

160
00:09:30,070 --> 00:09:34,019
up block were some great blocks about
this and release Mallory proxy

161
00:09:34,019 --> 00:09:37,930
another open source group concept or so
this point you might be asking yourself

162
00:09:37,930 --> 00:09:44,290
why am i listening to this talk a
security conference in 2014

163
00:09:44,290 --> 00:09:48,120
well there hasn't really been much
traction in fact there is no

164
00:09:48,120 --> 00:09:51,320
up public examples or you know when I
first are doing this research there were

165
00:09:51,320 --> 00:09:52,959
no public examples at this

166
00:09:52,959 --> 00:09:56,940
vulnerability ever being exploited all
the vulnerability scanners will tell you

167
00:09:56,940 --> 00:09:57,540
about it

168
00:09:57,540 --> 00:10:02,010
but hurry you know how I want it so how
can I create a perc to show my clients

169
00:10:02,010 --> 00:10:05,120
the true risk this vulnerability

170
00:10:05,120 --> 00:10:09,220
so obviously I am here giving this talk
and so what changed for me I am gonna

171
00:10:09,220 --> 00:10:10,140
show you

172
00:10:10,140 --> 00:10:14,360
a how this morning but it can be
exploited in in the wild

173
00:10:14,360 --> 00:10:17,360
for me it was a blog post by coercive
power

174
00:10:17,360 --> 00:10:20,380
written about a year ago in it

175
00:10:20,380 --> 00:10:24,649
in a blog post he also released this
single file ActionScript code

176
00:10:24,649 --> 00:10:29,279
that once compiled will create a sweat
that was the missing gap for me

177
00:10:29,279 --> 00:10:32,399
you know the simplicity of a single file
PRC

178
00:10:32,399 --> 00:10:35,610
that you only had to modify a few things

179
00:10:35,610 --> 00:10:39,260
that with allowed here finally wrap my
head around this morning bility

180
00:10:39,260 --> 00:10:43,130
and how to exploit the problem for me
was I finally

181
00:10:43,130 --> 00:10:45,579
I thought I knew how to exploit the
vulnerability but I didn't have an

182
00:10:45,579 --> 00:10:47,110
application as testing

183
00:10:47,110 --> 00:10:50,500
at work that how to form a cross-domain
XML

184
00:10:50,500 --> 00:10:54,180
and I was too anxious to wait for the
next one to come along

185
00:10:54,180 --> 00:10:58,370
so I decided to look around the internet
and I wasn't disappointed

186
00:10:58,370 --> 00:11:02,560
so these are are just a few of the sites
that I have responsibly disclosed this

187
00:11:02,560 --> 00:11:03,920
vulnerability to

188
00:11:03,920 --> 00:11:06,529
and they have since been fixed which is
why I'm going to talk about them in this

189
00:11:06,529 --> 00:11:07,730
presentation

190
00:11:07,730 --> 00:11:10,740
on but there are times out there so I
would encourage you all

191
00:11:10,740 --> 00:11:14,269
to you know help me identify the risk
notified ease

192
00:11:14,269 --> 00:11:17,760
I you know any site that you find and
you know

193
00:11:17,760 --> 00:11:22,730
it yep so the for small talk about is
being

194
00:11:22,730 --> 00:11:27,910
here is as of the last march for this
March WWW dot being dot com slash across

195
00:11:27,910 --> 00:11:29,149
to me that XML

196
00:11:29,149 --> 00:11:32,209
so you can see it's wide open

197
00:11:32,209 --> 00:11:36,459
and this page you'll notice you can view
everything you've ever searched for on

198
00:11:36,459 --> 00:11:37,360
bing

199
00:11:37,360 --> 00:11:42,540
by going to SSL dubbing dot com slash
profile slash history

200
00:11:42,540 --> 00:11:47,470
the thing is there is no cross domain
that excel file at SSL topping dot com

201
00:11:47,470 --> 00:11:51,950
and like we talked about before so I can
exploit I can't touch this area with my

202
00:11:51,950 --> 00:11:54,209
evil so if I'll

203
00:11:54,209 --> 00:11:58,420
before I was just about to move on
before I moved on I decided to check

204
00:11:58,420 --> 00:12:03,600
if that same sensitive information to me
sir from WWW dot pink dot com

205
00:12:03,600 --> 00:12:07,860
and it could so combine that with the
fact that www

206
00:12:07,860 --> 00:12:11,180
was sitting on an overly permissive
cross to mean that XML file

207
00:12:11,180 --> 00:12:15,160
and now this is fair game for my evil
swift because my evil sluts gonna make

208
00:12:15,160 --> 00:12:16,810
requests www

209
00:12:16,810 --> 00:12:20,839
ask permission and get permission by the
over the press across the main

210
00:12:20,839 --> 00:12:24,470
excel file so this is up

211
00:12:24,470 --> 00:12:28,450
my exploit the source code from exploit
for being dot com

212
00:12:28,450 --> 00:12:32,380
this is exactly curses Piercy code I
just modified the two sections are

213
00:12:32,380 --> 00:12:33,920
highlighted in yellow

214
00:12:33,920 --> 00:12:36,940
I'm sure if you can all see after the
top function

215
00:12:36,940 --> 00:12:40,089
is what makes the initial request to the
vulnerable server

216
00:12:40,089 --> 00:12:43,089
and in the bottom section is what sends
that data back to you

217
00:12:43,089 --> 00:12:46,510
me the attacker particularly to a page
on my server called

218
00:12:46,510 --> 00:12:50,149
but I created being dash history duh PHP

219
00:12:50,149 --> 00:12:53,370
much want to show you all this is the
Adobe Flex

220
00:12:53,370 --> 00:12:56,740
command and X and LC that you can use to

221
00:12:56,740 --> 00:13:00,110
compiled ActionScript into base with
file

222
00:13:00,110 --> 00:13:04,040
and the bottom line you're seeing that
muscle files has been dropped right into

223
00:13:04,040 --> 00:13:07,430
up my Weber and also to show you

224
00:13:07,430 --> 00:13:11,070
that you know the contents what is being
dash history I PHP

225
00:13:11,070 --> 00:13:15,790
it could be anything I can be written in
any language I just chose PHP and what

226
00:13:15,790 --> 00:13:16,310
this does

227
00:13:16,310 --> 00:13:19,620
is it writes everything that comes into
that page chewed

228
00:13:19,620 --> 00:13:24,040
a file on my filesystem slashed n slash
being da txt

229
00:13:24,040 --> 00:13:27,290
and at that point I can now grab out

230
00:13:27,290 --> 00:13:33,730
that file and identify everything that
the victim has ever searched for on bing

231
00:13:33,730 --> 00:13:37,529
so for my next exam ple before actually
can the technical details I want to tell

232
00:13:37,529 --> 00:13:38,720
you a little story

233
00:13:38,720 --> 00:13:42,670
so you know if any have you ever a.m.
tried you know responsible disclosure

234
00:13:42,670 --> 00:13:43,810
before

235
00:13:43,810 --> 00:13:46,690
on the first thing that you're
encouraged to do is sending email to the

236
00:13:46,690 --> 00:13:48,220
security at and support

237
00:13:48,220 --> 00:13:52,899
email address at that organization those
book bounce back unfortunately

238
00:13:52,899 --> 00:13:57,350
the next thing I tried to do ways on
contact the customer service you know

239
00:13:57,350 --> 00:13:58,920
help contact form

240
00:13:58,920 --> 00:14:02,550
I didn't hear back from that either so
but I didn't want to disclose this

241
00:14:02,550 --> 00:14:08,070
explain here fish rpoS dot com is a
pretty the is a very popular site

242
00:14:08,070 --> 00:14:12,560
so before I moved on I went to the
Careers page found it open job posting

243
00:14:12,560 --> 00:14:15,860
actually said unfortunately this isn't a
job application

244
00:14:15,860 --> 00:14:19,170
I'm security research trying to get in
touch with somebody you know if you have

245
00:14:19,170 --> 00:14:21,370
access to anybody who unscrew the team

246
00:14:21,370 --> 00:14:26,250
you let me know now is on a Friday on
Monday the CEO of Plenty of Fish Market

247
00:14:26,250 --> 00:14:28,880
prime email me thanking for disclosure

248
00:14:28,880 --> 00:14:32,829
and told me that he actually remove
costume an external file they don't be

249
00:14:32,829 --> 00:14:33,959
they don't need anymore

250
00:14:33,959 --> 00:14:37,870
it was for an outpatient they no longer
use so I thought that was pretty cool

251
00:14:37,870 --> 00:14:42,050
and they actually do have a security at
email address now secure find anything

252
00:14:42,050 --> 00:14:42,860
there

253
00:14:42,860 --> 00:14:46,910
they have been created so the reason I'm
another reason I want to use this

254
00:14:46,910 --> 00:14:49,790
example is that it allows me to talk
about

255
00:14:49,790 --> 00:14:52,790
limitation in

256
00:14:52,790 --> 00:14:56,860
that your your swift file half on like
cross-site scripting

257
00:14:56,860 --> 00:15:00,510
your swift file you know Flash Player
executing a servile

258
00:15:00,510 --> 00:15:03,970
does not have access to the DOM and it
does not have access

259
00:15:03,970 --> 00:15:09,089
to any love the HTTP response header
that comes back from your forged request

260
00:15:09,089 --> 00:15:12,970
only has access to the HD nobody the
thing is

261
00:15:12,970 --> 00:15:17,519
if the application at any point ohs are
so what i mean to say is that

262
00:15:17,519 --> 00:15:20,990
on the cross a script and you can't just
pull document doc cookin send it back to

263
00:15:20,990 --> 00:15:21,730
the attacker

264
00:15:21,730 --> 00:15:24,829
and still a session you have to work a
little harder and this

265
00:15:24,829 --> 00:15:28,329
isn't very common but if the application
writes the

266
00:15:28,329 --> 00:15:31,490
that HTML cookie on

267
00:15:31,490 --> 00:15:35,959
that HDPE sure that you know the the
session cookie into the h2o body

268
00:15:35,959 --> 00:15:39,139
it's fair game again that is an area
that we can poll and sent back to the

269
00:15:39,139 --> 00:15:40,240
attacker

270
00:15:40,240 --> 00:15:43,709
so IPOs just an authenticated user and
you could see

271
00:15:43,709 --> 00:15:48,490
you know the value of their current
session token is highlighted in yellow

272
00:15:48,490 --> 00:15:52,980
now my swift if ik Inc maker quest

273
00:15:52,980 --> 00:15:56,810
it again forced the victim to make a
request to inbox to

274
00:15:56,810 --> 00:16:01,990
aspx which you can this week now can
read the data comes back and I data

275
00:16:01,990 --> 00:16:03,899
contains the value of the cookie

276
00:16:03,899 --> 00:16:07,310
at that point the swift now sends that
data back to the attacker

277
00:16:07,310 --> 00:16:10,680
and it said grabbing for search history
like in the big example the attacker

278
00:16:10,680 --> 00:16:12,509
just takes that cookie value

279
00:16:12,509 --> 00:16:16,050
puts that into his browser her browser
and now the attacker

280
00:16:16,050 --> 00:16:19,490
is the victim on plenty of fish taco

281
00:16:19,490 --> 00:16:22,870
RP of taco so it

282
00:16:22,870 --> 00:16:27,680
want one more quick story about imager a
before I get into this one so I

283
00:16:27,680 --> 00:16:31,139
disclose this to imager outlook April

284
00:16:31,139 --> 00:16:34,660
at 11:29 p.m. two minutes later

285
00:16:34,660 --> 00:16:38,880
Alan shaft this founder and CEO imager
wrote back saying

286
00:16:38,880 --> 00:16:42,029
thanks for the information you know
please send more information

287
00:16:42,029 --> 00:16:45,310
and by 12:15 a.m. so forty-five minutes
later

288
00:16:45,310 --> 00:16:48,870
he had the vulnerability fixed and
there's no more risk that's the 48 most

289
00:16:48,870 --> 00:16:50,579
popular site in the world

290
00:16:50,579 --> 00:16:54,259
I thought forty-five minutes pretty good
response half

291
00:16:54,259 --> 00:16:58,570
also also two images credit they were
protecting

292
00:16:58,570 --> 00:17:03,380
against cross-site request forgery using
non sis

293
00:17:03,380 --> 00:17:06,819
so but as any of you who are familiar
with up haitian security no

294
00:17:06,819 --> 00:17:11,480
the knots comes back not is a unique
token that is sent from the server

295
00:17:11,480 --> 00:17:14,490
to the client in HD nobody

296
00:17:14,490 --> 00:17:17,900
that is also fair game as long as you
have over the press across to me not

297
00:17:17,900 --> 00:17:20,480
excel file

298
00:17:20,480 --> 00:17:24,140
for this example we're going to do is
that victim currently there alum

299
00:17:24,140 --> 00:17:28,020
settings you have public pictures on
imager and private private pictures

300
00:17:28,020 --> 00:17:31,809
got the victims here there our privacy
settings are private hidden

301
00:17:31,809 --> 00:17:36,410
we are going to you now this is how it
works in every scenario

302
00:17:36,410 --> 00:17:40,620
if the dictum is authenticated imager
and the victim

303
00:17:40,620 --> 00:17:44,820
gets tricked into browsing the malicious
site they will Lucas were filed though

304
00:17:44,820 --> 00:17:49,850
execute a cross-site request forgery you
know bypassing the nonce

305
00:17:49,850 --> 00:17:53,940
so here is the nonce a chart to show you
it looks like its unique token the

306
00:17:53,940 --> 00:17:57,090
normally the attacker have no way of
knowing

307
00:17:57,090 --> 00:18:00,440
and what we're gonna do is we are going
to our scarce with file is going to

308
00:18:00,440 --> 00:18:01,620
recreate that entire

309
00:18:01,620 --> 00:18:05,770
string at the bottom there so are swift
needs to do four things

310
00:18:05,770 --> 00:18:09,289
so this is still based on curses on PRC

311
00:18:09,289 --> 00:18:13,190
but as you can see is heavily modified
what it's doing is its first making a

312
00:18:13,190 --> 00:18:13,919
request

313
00:18:13,919 --> 00:18:17,880
to the page that would give the victim
the knots

314
00:18:17,880 --> 00:18:21,350
all this code for here is is you know

315
00:18:21,350 --> 00:18:24,720
gripping out the important pieces been
not in any other pieces that are

316
00:18:24,720 --> 00:18:25,510
required

317
00:18:25,510 --> 00:18:29,929
any other dynamic then that dynamic
content that will be known ahead of time

318
00:18:29,929 --> 00:18:33,070
what it's doing is it's concatenating
that static content and dynamic content

319
00:18:33,070 --> 00:18:34,000
together

320
00:18:34,000 --> 00:18:37,350
and creating the post URL that at this
point

321
00:18:37,350 --> 00:18:40,940
it sends that post data backed imager
and the

322
00:18:40,940 --> 00:18:44,580
album settings are set to public and now
the attacker could it happen it's cuz

323
00:18:44,580 --> 00:18:45,299
you can see

324
00:18:45,299 --> 00:18:49,070
or she can see all of the sensitive
information

325
00:18:49,070 --> 00:18:53,230
the private pictures in this case this
is the last example they'll use

326
00:18:53,230 --> 00:18:57,230
I'm gonna use ThinkGeek but this is
actually all over the place that

327
00:18:57,230 --> 00:19:00,429
their are quite a few that fit this
scenario

328
00:19:00,429 --> 00:19:04,280
I'm so you lookout for this if you ever
seen over the purse across them into

329
00:19:04,280 --> 00:19:05,940
Excel file

330
00:19:05,940 --> 00:19:09,630
so as we all know even if your
authenticator site if you want to change

331
00:19:09,630 --> 00:19:13,330
your password most sites these days will
require you to enter your current pastor

332
00:19:13,330 --> 00:19:18,030
for you can change a password seldomly
do I see a site

333
00:19:18,030 --> 00:19:21,970
that will require you to enter your
current password before changing your

334
00:19:21,970 --> 00:19:23,360
email address

335
00:19:23,360 --> 00:19:27,429
I actually did see if you do that but
most 0

336
00:19:27,429 --> 00:19:32,799
so the name of this oh my evals within
this point should be self-explanatory

337
00:19:32,799 --> 00:19:36,140
bypass ceaser change email address

338
00:19:36,140 --> 00:19:40,760
think each dot SWS so if the victim is
authenticated with stinky

339
00:19:40,760 --> 00:19:44,419
and they go to my malicious server and
download my evil so file

340
00:19:44,419 --> 00:19:47,780
they will change the email address on
that account will change

341
00:19:47,780 --> 00:19:51,740
to my email address at that point I
enter my email address and

342
00:19:51,740 --> 00:19:57,230
Forgot Password page the the reset link
comes to me

343
00:19:57,230 --> 00:20:01,490
and now I can set the victim's account
password anything I control

344
00:20:01,490 --> 00:20:05,539
completely hijacking the cow until the
user realize that the pastors changed

345
00:20:05,539 --> 00:20:06,760
but

346
00:20:06,760 --> 00:20:11,190
so that's it for my examples I didn't
want to share with you

347
00:20:11,190 --> 00:20:14,210
I'm kinda picking a half with this
research

348
00:20:14,210 --> 00:20:17,600
so this looks just like the Adobe you
know

349
00:20:17,600 --> 00:20:20,640
cross to me that excel file right is
right that is a good looking across to

350
00:20:20,640 --> 00:20:21,520
me next not file

351
00:20:21,520 --> 00:20:26,220
there is no to me Eagle star anywhere in
this file

352
00:20:26,220 --> 00:20:29,559
the thing is this is just a snippet
above what secured a history dock on

353
00:20:29,559 --> 00:20:30,360
trust

354
00:20:30,360 --> 00:20:34,260
they trust 89 unique domains and that
got me thinking

355
00:20:34,260 --> 00:20:38,480
what if one of those has expired
recently and is up for sale

356
00:20:38,480 --> 00:20:42,280
what if I can purchase one of those what
if there is a typo in there trusting a

357
00:20:42,280 --> 00:20:43,179
domain

358
00:20:43,179 --> 00:20:47,380
that they don't think they're trusting
that is as always been for sale

359
00:20:47,380 --> 00:20:51,780
and to prove that point guess who own
seen on style dot com

360
00:20:51,780 --> 00:20:55,490
I did so for me I can launch my swift

361
00:20:55,490 --> 00:20:59,360
from CR style dot com and it's just like
there was a star there

362
00:20:59,360 --> 00:21:03,440
right if I can be the first one to grab
see the phone at the open domain

363
00:21:03,440 --> 00:21:07,490
so this is gonna pitch a no longer can
we only look for

364
00:21:07,490 --> 00:21:12,130
domain Eagle star every time you see
this on a site that you're testing for

365
00:21:12,130 --> 00:21:13,720
your client

366
00:21:13,720 --> 00:21:17,000
you have to look at every single one of
the domains that the trust and determine

367
00:21:17,000 --> 00:21:17,909
if it's available

368
00:21:17,909 --> 00:21:22,590
because if it's available there's risk
here's another example Sears dot com

369
00:21:22,590 --> 00:21:27,210
another one that the trust a lot of
different domains

370
00:21:27,210 --> 00:21:31,000
and it gave me an opportunity to rate
and that script called HTP dash

371
00:21:31,000 --> 00:21:31,960
cross-domain

372
00:21:31,960 --> 00:21:35,250
now this isn't in you know it doesn't
come with and not yet I'm gonna you know

373
00:21:35,250 --> 00:21:36,049
publish it

374
00:21:36,049 --> 00:21:39,210
up to the mailing list shortly after
this talk

375
00:21:39,210 --> 00:21:43,590
but with this will help you do is it
will if you put in the domain

376
00:21:43,590 --> 00:21:47,880
it will check for the existence across
to me an XML file if one exists

377
00:21:47,880 --> 00:21:52,340
and it trust up a couple of domains you
know specifically

378
00:21:52,340 --> 00:21:55,630
it will give you the link to Dynadot and
to the

379
00:21:55,630 --> 00:21:59,740
bulk domain search lookup tool it'll
parts that list out for you

380
00:21:59,740 --> 00:22:03,980
and give you a comma delimited list at
this point you can now just enter

381
00:22:03,980 --> 00:22:07,230
the comma delimited list into the bulk
domain

382
00:22:07,230 --> 00:22:11,260
search tool and if you're lucky you're
gonna hit that's available

383
00:22:11,260 --> 00:22:14,990
%uh and you cannot purchase does domain
to prove your point

384
00:22:14,990 --> 00:22:18,539
and I see so you smiling not that I
don't trust you all but I did purchase

385
00:22:18,539 --> 00:22:19,940
that domain

386
00:22:19,940 --> 00:22:26,750
and the other one so don't ration

387
00:22:26,750 --> 00:22:29,960
so I also did promise you that I would

388
00:22:29,960 --> 00:22:33,620
show you how to make your or give you
the tools to make your own

389
00:22:33,620 --> 00:22:37,070
exploits so this is are currently

390
00:22:37,070 --> 00:22:41,330
you live this on get her pasta across to
mean expedition framework

391
00:22:41,330 --> 00:22:44,940
it's not much of a framework at this
point it's a simple in stock but I want

392
00:22:44,940 --> 00:22:46,240
to give myself a room

393
00:22:46,240 --> 00:22:49,520
on but it's a simple in a bash script

394
00:22:49,520 --> 00:22:52,650
that is at this point is only been
tested on Kelly Lenox

395
00:22:52,650 --> 00:22:58,679
but it will download L and extract the
Adobe Flex compiler to 235 a

396
00:22:58,679 --> 00:23:03,539
megabyte file unfortunately on and it
was about to extract certain portions of

397
00:23:03,539 --> 00:23:04,080
that

398
00:23:04,080 --> 00:23:06,710
but you can't beat it has to be
downloaded from them I can redistribute

399
00:23:06,710 --> 00:23:07,510
that

400
00:23:07,510 --> 00:23:10,600
on you configure Apache with PHP

401
00:23:10,600 --> 00:23:14,159
with SSL it'll provide you with all my
templates

402
00:23:14,159 --> 00:23:18,760
and cursive original template it will
provide you with the catcher script

403
00:23:18,760 --> 00:23:22,880
I that I was you that I showed you
earlier it will give it commands that

404
00:23:22,880 --> 00:23:27,150
MX NLC command it was just output that
was a script finishes running

405
00:23:27,150 --> 00:23:32,110
and show you how to a compile your
ActionScript what you modify it

406
00:23:32,110 --> 00:23:35,730
2s SWF file a flash object and lastly

407
00:23:35,730 --> 00:23:39,460
until my script gets acceptance the and
map project it will

408
00:23:39,460 --> 00:23:42,779
install the script into the scripts
folder

409
00:23:42,779 --> 00:23:46,240
a nap

410
00:23:46,240 --> 00:23:49,830
so like I mentioned for me exportation
became possible

411
00:23:49,830 --> 00:23:53,049
with persons blog but it was really in

412
00:23:53,049 --> 00:23:57,299
all these people this is great research
has been done over the years

413
00:23:57,299 --> 00:24:00,350
on sewing Kercher look at all these you
know if you're if you're interested in

414
00:24:00,350 --> 00:24:03,049
supply ability:

415
00:24:03,049 --> 00:24:06,260
and I'll be posting the slides to get
hard as well

416
00:24:06,260 --> 00:24:13,260
on shortly after this talk and thank you
all very much for coming

417
00:24:17,159 --> 00:24:20,289
if you have any questions you makin
uptick in the back at the room or

418
00:24:20,289 --> 00:24:21,960
outside

419
00:24:21,960 --> 00:24:22,210
thanks

