1
00:00:00,000 --> 00:00:06,600
gonna here million

2
00:00:06,600 --> 00:00:11,700
up

3
00:00:11,700 --> 00:00:15,370
I want to get started so my partner days
ago johnnie 51 you guys

4
00:00:15,370 --> 00:00:20,760
cuz because he will got a lot to talk
about so I'll

5
00:00:20,760 --> 00:00:26,650
everybody welcome to our shell shocking
for fun and profit

6
00:00:26,650 --> 00:00:29,620
at too early too soon parent just
getting

7
00:00:29,620 --> 00:00:34,960
arm how many did you guys have ever had
your credentials show up in a part of

8
00:00:34,960 --> 00:00:36,040
public bridge

9
00:00:36,040 --> 00:00:40,020
and you're all mine Alessi like two
hands

10
00:00:40,020 --> 00:00:43,150
it's okay i mean you're you're not
you're not bad what to do because

11
00:00:43,150 --> 00:00:44,350
somebody else messed up

12
00:00:44,350 --> 00:00:49,420
and at so wanna be awesome if like that
never happened again

13
00:00:49,420 --> 00:00:53,940
every brick or can I get like some when
if they all have never happen again

14
00:00:53,940 --> 00:00:54,880
alright Goodale

15
00:00:54,880 --> 00:00:57,930
are so bad and I are here to discuss

16
00:00:57,930 --> 00:01:01,540
something today that he's been working
on that we feel like I is going to make

17
00:01:01,540 --> 00:01:03,590
this reality or real possibility

18
00:01:03,590 --> 00:01:07,550
moving forward Korea

19
00:01:07,550 --> 00:01:11,509
so real quick its way to give akaka
shout out something cutest everybody's

20
00:01:11,509 --> 00:01:13,740
helped me out along the way in
developing this idea

21
00:01:13,740 --> 00:01:18,100
you working through this in in testing
everything and just a dollar on moral

22
00:01:18,100 --> 00:01:18,910
support as well

23
00:01:18,910 --> 00:01:24,030
so yeah thanks you guys I'm Benjamin
Donnelly

24
00:01:24,030 --> 00:01:28,479
you find me on twitter around the
internet as this very weird names AX

25
00:01:28,479 --> 00:01:32,110
miss security researcher such pen tester
a please note: beer

26
00:01:32,110 --> 00:01:35,929
I'm not cold enough yet I'm I do accept
protein shakes

27
00:01:35,929 --> 00:01:40,410
so yeah on you can find me if I'm a bit
bucket you can find me on Twitter you

28
00:01:40,410 --> 00:01:42,500
can find me your deepest darkest dreams

29
00:01:42,500 --> 00:01:46,990
right

30
00:01:46,990 --> 00:01:50,110
and out out for Sheila mountain towns
also known as

31
00:01:50,110 --> 00:01:54,340
my message 33 in some circles I'm pretty
much going to know about me as I do all

32
00:01:54,340 --> 00:01:56,920
the stuff in the middle trying to
achieve this bottom bullet

33
00:01:56,920 --> 00:02:00,500
and all while doing that you're fine the
guy up in the top left hand corner there

34
00:02:00,500 --> 00:02:04,000
a quick shout out to my brothers
attacked former san proper attackers

35
00:02:04,000 --> 00:02:08,269
so quick rundown we're gonna do today I
want to talk a little bit about the

36
00:02:08,269 --> 00:02:08,899
problem

37
00:02:08,899 --> 00:02:12,620
the problem in our our car our current
status of store

38
00:02:12,620 --> 00:02:16,239
credential security them a pass on over
to ban he's going to chat about his

39
00:02:16,239 --> 00:02:18,010
philosophy a moving forward

40
00:02:18,010 --> 00:02:21,440
talk about his solution in volunteering
animal wrap it all up

41
00:02:21,440 --> 00:02:24,980
at the and I what I call the future

42
00:02:24,980 --> 00:02:28,360
RK the first so what's the problem all
the promises that

43
00:02:28,360 --> 00:02:32,489
all of our current implementations first
or password security horribly broken

44
00:02:32,489 --> 00:02:36,849
okay to %uh some back story and not I
did a talk at b-sides Augusta couple

45
00:02:36,849 --> 00:02:37,970
weeks ago called

46
00:02:37,970 --> 00:02:41,099
store password security where I go into
great depth on all our current

47
00:02:41,099 --> 00:02:41,989
implementations

48
00:02:41,989 --> 00:02:46,269
but to make a long story short a first
or passwords in plain text former

49
00:02:46,269 --> 00:02:47,230
encoding for

50
00:02:47,230 --> 00:02:51,150
right were once equal injection away
from having all are used rental stock to

51
00:02:51,150 --> 00:02:51,750
the public

52
00:02:51,750 --> 00:02:56,100
with aggression we're not doing a whole
lot better I trips requires a key

53
00:02:56,100 --> 00:02:59,950
try some sorta key in order to in or
just create the site for tax

54
00:02:59,950 --> 00:03:04,010
and that he has trees or somewhere were
successful to the actual system that's

55
00:03:04,010 --> 00:03:06,329
doing the depression is doing the
authentication

56
00:03:06,329 --> 00:03:10,100
and so really if we get one step beyond
that read only sequel injection

57
00:03:10,100 --> 00:03:13,310
there's a distinct possibility we can
gain access to that key

58
00:03:13,310 --> 00:03:18,200
and everything becomes plain text again
I'm fast hashing is exactly that

59
00:03:18,200 --> 00:03:22,700
its past it's designed to be fast
anything that's designed to be faster is

60
00:03:22,700 --> 00:03:25,380
actually going to help someone trying to
calculate your computer

61
00:03:25,380 --> 00:03:29,819
so the crackers actually benefit from us
using fast hashing algorithms

62
00:03:29,819 --> 00:03:33,790
to try to protect our passwords K and on
top of that users create pretty weak

63
00:03:33,790 --> 00:03:34,959
passwords as it is

64
00:03:34,959 --> 00:03:38,109
that just makes the situation even worse
okay

65
00:03:38,109 --> 00:03:42,019
and we have adapted passing are slow
hashing and this is harder and harder

66
00:03:42,019 --> 00:03:43,060
than pass-catching

67
00:03:43,060 --> 00:03:46,480
but the overarching problem with all the
czars every single one of them is

68
00:03:46,480 --> 00:03:48,329
bootable to an offline attack

69
00:03:48,329 --> 00:03:51,430
and is put just puts us into a
computational war

70
00:03:51,430 --> 00:03:56,540
with our adversaries here's our current
process or proper security is a lot like

71
00:03:56,540 --> 00:03:59,400
a cease all right now once are the cease
all we have

72
00:03:59,400 --> 00:04:03,120
the strength of our algorithm and then
the other side the see-saw we have the

73
00:04:03,120 --> 00:04:04,290
strength of our password

74
00:04:04,290 --> 00:04:08,130
now and any instance at Bass hashing
algorithms they're pretty weak right

75
00:04:08,130 --> 00:04:09,359
they're designed to be fast

76
00:04:09,359 --> 00:04:12,889
so our passwords are users pastors have
to be pretty strong over to make that a

77
00:04:12,889 --> 00:04:14,350
relatively secure system

78
00:04:14,350 --> 00:04:17,859
where users don't want to create strong
passwords they want weaker password or

79
00:04:17,859 --> 00:04:21,019
they're going to make them anyway if you
give them the ability to do so

80
00:04:21,019 --> 00:04:25,949
so we try to use stronger slower
calculating hashes in order to allow our

81
00:04:25,949 --> 00:04:26,680
users to

82
00:04:26,680 --> 00:04:30,509
to use weaker passwords and we begin to
make this really really bad assumption

83
00:04:30,509 --> 00:04:34,490
that because this is harder our users
can create sweet your passwords

84
00:04:34,490 --> 00:04:39,250
and we went in but the problem with this
is that are adapted hashing functions

85
00:04:39,250 --> 00:04:43,330
they get there strength by how long it
take to computer help difficult

86
00:04:43,330 --> 00:04:47,020
they are to compute night and computer
is the first complete computational

87
00:04:47,020 --> 00:04:48,150
difficult to goes

88
00:04:48,150 --> 00:04:51,620
our adversary or the attackers always
going to have the advantage

89
00:04:51,620 --> 00:04:56,509
so I Z sacher gonna have the advantage
most because their focus is different

90
00:04:56,509 --> 00:04:57,280
than ours

91
00:04:57,280 --> 00:05:01,020
okay we implement the systems because
we're trying to authenticate we have a

92
00:05:01,020 --> 00:05:03,840
system or service that we need to
support with authentication

93
00:05:03,840 --> 00:05:07,430
but with that authentication comes a
whole lot of other things right

94
00:05:07,430 --> 00:05:10,870
we have a service a company business
process that we're trying to support

95
00:05:10,870 --> 00:05:11,479
with this

96
00:05:11,479 --> 00:05:15,680
so we're worried in a heckuva lot more
then just encrypting are hashes or

97
00:05:15,680 --> 00:05:17,380
tripling our user's credentials

98
00:05:17,380 --> 00:05:22,840
K harder computations for us well they
result in a greater cost whether that be

99
00:05:22,840 --> 00:05:27,210
up time resources funds whatever it is
higher computation results in a higher

100
00:05:27,210 --> 00:05:27,820
cost

101
00:05:27,820 --> 00:05:31,180
let's look at the attacker the attacker
probably has one objective

102
00:05:31,180 --> 00:05:34,300
and their objective is to what to crack
are hashes right

103
00:05:34,300 --> 00:05:38,190
well and then have to crack them all and
some cases they only have to crack one

104
00:05:38,190 --> 00:05:41,810
get the information that there after a
good to get to access that thereafter

105
00:05:41,810 --> 00:05:45,240
and when it comes down to cracking that
one hasher that group ashes

106
00:05:45,240 --> 00:05:48,360
what they can distribute it they can
distribute amongst a botnet or they can

107
00:05:48,360 --> 00:05:50,509
distributed amongst a group of people
that are willing

108
00:05:50,509 --> 00:05:54,979
to help them achieve this goal and they
can also build powerful machines

109
00:05:54,979 --> 00:05:58,350
that are intended to do only that crack
our specific

110
00:05:58,350 --> 00:06:01,380
hash okay so that being said

111
00:06:01,380 --> 00:06:05,100
they have the computational van is no
matter what we do because their focus

112
00:06:05,100 --> 00:06:08,380
is completely different so what do we
need to do well we need to make better

113
00:06:08,380 --> 00:06:11,750
and more secure assumptions about the
systems that we create

114
00:06:11,750 --> 00:06:14,889
and we'll start by by looking at the
worst case scenario

115
00:06:14,889 --> 00:06:17,920
making assumptions that are attackers a
dedicated nation-state

116
00:06:17,920 --> 00:06:21,950
ready to attack only our hashes K that
mean that may not be true that true

117
00:06:21,950 --> 00:06:23,020
threat for everyone

118
00:06:23,020 --> 00:06:26,380
but we need to start with that as our
baseline and move forward

119
00:06:26,380 --> 00:06:29,630
me to assume that we've got limited
resources that may result in both our

120
00:06:29,630 --> 00:06:31,420
hashes and our users passwords

121
00:06:31,420 --> 00:06:34,650
being weak which essentially breaks that
see-saw model

122
00:06:34,650 --> 00:06:39,200
right and a horrible way K so these are
tear this paints a terrifying picture

123
00:06:39,200 --> 00:06:42,350
in terms of how we move forward and how
we build these and bill up from the

124
00:06:42,350 --> 00:06:45,120
surfing picture tree secure systems

125
00:06:45,120 --> 00:06:48,540
but in addition to these assumptions we
had a grim reality okay and then if

126
00:06:48,540 --> 00:06:49,910
somebody's realities are

127
00:06:49,910 --> 00:06:53,620
the business our business they don't
want us to spend more money so that we

128
00:06:53,620 --> 00:06:54,370
can do things

129
00:06:54,370 --> 00:06:57,639
slower right I mean if you go to your
boss you say hey

130
00:06:57,639 --> 00:07:00,700
I want to buy this equipment are want to
implement this algorithm which is

131
00:07:00,700 --> 00:07:03,840
also makes everything slower and makes
our stock work harder

132
00:07:03,840 --> 00:07:08,110
whatcha gonna say eyes checked must be
in this do a really good job conveying

133
00:07:08,110 --> 00:07:09,160
arrested him

134
00:07:09,160 --> 00:07:12,570
and wanna cases they're just not going
to want to move in that direction

135
00:07:12,570 --> 00:07:15,270
the other thing is our users have been
loud and clear in the fact that they

136
00:07:15,270 --> 00:07:17,190
don't want to create strong passwords

137
00:07:17,190 --> 00:07:20,139
they don't want twenty-five character
alphanumeric special pass first I

138
00:07:20,139 --> 00:07:21,080
passwords

139
00:07:21,080 --> 00:07:23,919
their God they want something that's
easy for them to remember an easy for

140
00:07:23,919 --> 00:07:24,950
them to type and

141
00:07:24,950 --> 00:07:28,270
right quickly something get what they
want to do thank

142
00:07:28,270 --> 00:07:32,550
and us we don't want to enter into a
computational warfare with the adversary

143
00:07:32,550 --> 00:07:35,980
right so in order to to make some
advancements in this battlefield right

144
00:07:35,980 --> 00:07:37,120
to win this war

145
00:07:37,120 --> 00:07:40,970
we've got to do a couple things first
thing we need to do is identify

146
00:07:40,970 --> 00:07:44,930
and exploit advantages up the defensive
position where the defense a perspective

147
00:07:44,930 --> 00:07:46,280
that step number one

148
00:07:46,280 --> 00:07:49,900
and instead number two keep in mind
their struction such as

149
00:07:49,900 --> 00:07:53,270
making passwords easier to remember for
our users

150
00:07:53,270 --> 00:07:56,190
and I think there's a third thing
involved here and that's getting people

151
00:07:56,190 --> 00:07:57,510
that are smart enough

152
00:07:57,510 --> 00:08:00,610
to figure out number one well
considering number two to help us

153
00:08:00,610 --> 00:08:04,360
implement the system's and so with that
hammering on band come up here and talk

154
00:08:04,360 --> 00:08:08,680
about but one chain

155
00:08:08,680 --> 00:08:11,730
Arabia as so

156
00:08:11,730 --> 00:08:15,360
real quick a really quick one pot 1 per
2 sliding on

157
00:08:15,360 --> 00:08:20,430
are the philosophy of why I did this
some twenty-years-old aware that I spent

158
00:08:20,430 --> 00:08:23,280
a good year of my life trying to
research how to fix broken password

159
00:08:23,280 --> 00:08:24,130
security

160
00:08:24,130 --> 00:08:26,600
I think supporters talk about it just
simply because I really wanna see

161
00:08:26,600 --> 00:08:28,480
everybody in this room doing it

162
00:08:28,480 --> 00:08:32,880
really worthy really like to see that
right the Internet is kinda broken

163
00:08:32,880 --> 00:08:36,669
not entirely there many portions of it
that are completely

164
00:08:36,669 --> 00:08:39,820
decently secure right but the unit

165
00:08:39,820 --> 00:08:43,789
the it runs through all of our lives and
it's only gonna become worse and worse

166
00:08:43,789 --> 00:08:46,060
and worse as time goes on we need to

167
00:08:46,060 --> 00:08:51,120
check our cells at this point we need to
be trying to build things to be as

168
00:08:51,120 --> 00:08:52,699
secure as possible

169
00:08:52,699 --> 00:08:58,130
right for fighting a war here when we
really can't afford to lose

170
00:08:58,130 --> 00:09:01,459
had a really really really great quote
once on

171
00:09:01,459 --> 00:09:06,839
that basically said without empathy
we're just solving puzzles

172
00:09:06,839 --> 00:09:09,860
if you guys go if nothing else if you
guys don't like my over there anything

173
00:09:09,860 --> 00:09:10,389
like that

174
00:09:10,389 --> 00:09:13,769
I would like to see you guys go away
thinking about that

175
00:09:13,769 --> 00:09:17,910
um don't just solve puzzles solve
problems

176
00:09:17,910 --> 00:09:22,250
find things that are actually a problem
and spend your time trying to solve

177
00:09:22,250 --> 00:09:24,480
those who don't have to try and be
clever

178
00:09:24,480 --> 00:09:27,449
son was about trying to be clever
sometimes it's about being willing to

179
00:09:27,449 --> 00:09:28,410
fail

180
00:09:28,410 --> 00:09:31,500
for the opportunity to potentially

181
00:09:31,500 --> 00:09:36,500
do a great thing they could really help
some people so

182
00:09:36,500 --> 00:09:40,009
secure by default that's the philosophy
that I undertook

183
00:09:40,009 --> 00:09:44,930
when I went out to try and design this
system

184
00:09:44,930 --> 00:09:47,829
we know that users don't like to use
strong passwords right but it's also

185
00:09:47,829 --> 00:09:51,240
very very hard for us in terms of his
ability to see into a network to see as

186
00:09:51,240 --> 00:09:52,709
a computer sees

187
00:09:52,709 --> 00:09:56,149
right to really respond in real time we
need sophisticated advance

188
00:09:56,149 --> 00:09:59,440
interesting tools I wanna see you guys
building systems that are secured by

189
00:09:59,440 --> 00:10:00,790
default

190
00:10:00,790 --> 00:10:04,279
things that are just inherently secure

191
00:10:04,279 --> 00:10:07,529
we wanna make our users lives easier not
harder

192
00:10:07,529 --> 00:10:10,790
we need to stop relying on our users for
security

193
00:10:10,790 --> 00:10:14,380
so my hope here is to make passwords fun
again

194
00:10:14,380 --> 00:10:17,430
we can make it even a passwords that her
shorts

195
00:10:17,430 --> 00:10:21,680
concise easy to use a if we can stop
offline and online attacks

196
00:10:21,680 --> 00:10:24,839
and maybe just maybe passwords can stop
being this evil

197
00:10:24,839 --> 00:10:28,529
saying enforced by the by the higher
echelons right his particular

198
00:10:28,529 --> 00:10:33,070
password policies the sock about it on
yes

199
00:10:33,070 --> 00:10:36,589
for example secure by default just up
bugs from flying through your window

200
00:10:36,589 --> 00:10:39,380
what we do now a days in securities we
generally try to sit there and try to

201
00:10:39,380 --> 00:10:40,839
catch the Bucks right

202
00:10:40,839 --> 00:10:44,050
literally try to catch them let's just

203
00:10:44,050 --> 00:10:47,960
put a screen in our window that's common
sense to anybody right

204
00:10:47,960 --> 00:10:52,270
so here's the solution I came up with a
potential solution and I'm really hoping

205
00:10:52,270 --> 00:10:54,600
that if there are holes in it if there's
something wrong with it

206
00:10:54,600 --> 00:10:57,720
I want you guys to be the ones to come
to me tell me how I screwed up

207
00:10:57,720 --> 00:11:00,990
let's try make it better let's try and
make this work right

208
00:11:00,990 --> 00:11:05,089
panchen so defensive advantage does in
fact exist

209
00:11:05,089 --> 00:11:09,240
either one you know we on the data at
rest

210
00:11:09,240 --> 00:11:13,080
we also own the surrounding
infrastructure and assuming you are

211
00:11:13,080 --> 00:11:17,330
the defender you on these things right

212
00:11:17,330 --> 00:11:20,700
the attacker as a client our network and
he has to steal

213
00:11:20,700 --> 00:11:24,990
our data right through our
infrastructure

214
00:11:24,990 --> 00:11:28,140
now that's pretty easy

215
00:11:28,140 --> 00:11:31,220
right down in little bit today to that's
not really a problem for any sort of

216
00:11:31,220 --> 00:11:33,560
dedicated intelligent attacker in fact

217
00:11:33,560 --> 00:11:37,279
it's going to be very very hard for us
to stop him from doing that

218
00:11:37,279 --> 00:11:40,870
right expert rations is pretty simple
it's not the easiest thing in the world

219
00:11:40,870 --> 00:11:43,580
special for trying real hard but it's
pretty simple

220
00:11:43,580 --> 00:11:46,950
but downloading it hun updated like

221
00:11:46,950 --> 00:11:50,140
terabytes and terabytes of data

222
00:11:50,140 --> 00:11:53,430
out if your network I might be a little
bit harder for

223
00:11:53,430 --> 00:11:57,470
right I mean if we assume we've got a
limited sized

224
00:11:57,470 --> 00:12:01,300
type on the way out that's can be pretty
difficult

225
00:12:01,300 --> 00:12:04,910
especially whatever like monitoring for
large downloads monitoring for any

226
00:12:04,910 --> 00:12:07,920
gigantic things going clunk on the
network right

227
00:12:07,920 --> 00:12:12,000
and to know you don't have to do that
but it could help

228
00:12:12,000 --> 00:12:15,520
so here's an example here's the logical
overview but the idea that I came up

229
00:12:15,520 --> 00:12:16,370
with

230
00:12:16,370 --> 00:12:19,380
say we create a huge file on the network

231
00:12:19,380 --> 00:12:23,500
a gigantic file a monstrous file a
titanic file

232
00:12:23,500 --> 00:12:26,899
K they were gonna tie user
authentication

233
00:12:26,899 --> 00:12:31,209
to that file right so to check the
password is valid

234
00:12:31,209 --> 00:12:34,510
or invalid you'll need the password hash

235
00:12:34,510 --> 00:12:39,690
so hash anymore but the password
representation for matter

236
00:12:39,690 --> 00:12:43,070
and you also need this huge file

237
00:12:43,070 --> 00:12:46,880
right so even if the attacker goes on
your machine and he he dumped the

238
00:12:46,880 --> 00:12:49,100
database or something and he gets the
store

239
00:12:49,100 --> 00:12:54,399
caches ashes he's still gonna need this
huge file

240
00:12:54,399 --> 00:12:57,160
in order to be able to you know to crack
the hassle to revert to make a single

241
00:12:57,160 --> 00:12:57,839
guess

242
00:12:57,839 --> 00:13:03,260
against ash its have you ever tried
downloading a multi terrible Iran

243
00:13:03,260 --> 00:13:06,839
I've tried to download some RT terrified
rainbow tables

244
00:13:06,839 --> 00:13:10,779
once or twice it's not terribly fun and
it doesn't work out

245
00:13:10,779 --> 00:13:14,839
it takes an eternity and you end up
dislike kinda buying them

246
00:13:14,839 --> 00:13:18,440
from the manufacture creating yourself
right

247
00:13:18,440 --> 00:13:22,529
the attackers not gonna download it not
if we make it sufficiently large

248
00:13:22,529 --> 00:13:26,140
in fact he's never gonna download even a
significant portion of it

249
00:13:26,140 --> 00:13:29,660
you know the sky's the limit here we can
make this thing as big as we weren't

250
00:13:29,660 --> 00:13:34,580
so if that's true the attacker can not
perform an offline attack right based on

251
00:13:34,580 --> 00:13:36,529
the logic on the previous slide

252
00:13:36,529 --> 00:13:39,660
separate a simple it a graphical example
here

253
00:13:39,660 --> 00:13:43,010
hmmm it's pretty bad by up

254
00:13:43,010 --> 00:13:45,610
there's your network rate you to see
your network and you see my little

255
00:13:45,610 --> 00:13:46,950
houses over there

256
00:13:46,950 --> 00:13:50,899
it's that big ol fat file and we had a
tiny little data pipeline

257
00:13:50,899 --> 00:13:53,680
is like that that game when you're a kid
would like to smash the shape that the

258
00:13:53,680 --> 00:13:54,250
hammer

259
00:13:54,250 --> 00:13:59,399
right the hasher's can fit through the
attackers network who

260
00:13:59,399 --> 00:14:03,709
that big ol fat file is not going
anywhere that fat file is not going to

261
00:14:03,709 --> 00:14:05,110
fit through that whole

262
00:14:05,110 --> 00:14:08,899
got it cool for example

263
00:14:08,899 --> 00:14:12,440
my home upload speed a 6.14 megabits per
second K

264
00:14:12,440 --> 00:14:15,730
according to Wolfram Alpha attacker
attempted to download a two terabyte

265
00:14:15,730 --> 00:14:16,310
away

266
00:14:16,310 --> 00:14:21,420
array from my network it would take em
around 30 days

267
00:14:21,420 --> 00:14:24,950
just download that a wreck keep in mind
I can make your a bigger

268
00:14:24,950 --> 00:14:28,190
keep in mind this is him using the
entire type

269
00:14:28,190 --> 00:14:33,140
I would notice this pretty fast rate to
be super easy to detect it just like

270
00:14:33,140 --> 00:14:36,190
get off my network no right

271
00:14:36,190 --> 00:14:39,600
he somehow managed to get it off my
network by the in super Sneaky taken

272
00:14:39,600 --> 00:14:43,220
like a couple years or something I don't
know

273
00:14:43,220 --> 00:14:46,830
he has to do all of that before he can
even start attempting to crack the

274
00:14:46,830 --> 00:14:48,430
passwords

275
00:14:48,430 --> 00:14:52,709
this is basically infeasible so the
beauty of it secure

276
00:14:52,709 --> 00:14:56,589
with minimal human interaction right we
don't need strong user passwords because

277
00:14:56,589 --> 00:14:59,089
the attacker can't even make guesses
against them

278
00:14:59,089 --> 00:15:02,380
and yes they need to be decently strong
but they don't need to be

279
00:15:02,380 --> 00:15:05,950
anything like what we've been pushing
towards lately right

280
00:15:05,950 --> 00:15:09,800
also it basically protects itself he
tried to sit there and monitor and

281
00:15:09,800 --> 00:15:10,550
trying to terminate

282
00:15:10,550 --> 00:15:15,339
all the time I mean if it's if it's a
your 30-day download and there's

283
00:15:15,339 --> 00:15:19,019
and assuming there was no other ways to
get a check every 15 days or something

284
00:15:19,019 --> 00:15:19,540
right

285
00:15:19,540 --> 00:15:22,760
this thing is so big it basically
protects itself

286
00:15:22,760 --> 00:15:26,160
on so if this logic is true and if it
works

287
00:15:26,160 --> 00:15:29,740
right you could assume therefore that
perhaps of land transfer tax could go

288
00:15:29,740 --> 00:15:31,649
extinct

289
00:15:31,649 --> 00:15:34,589
that's pretty cool especially
considering it's cheap to implement a

290
00:15:34,589 --> 00:15:37,100
quick slide and how it scales at your
business

291
00:15:37,100 --> 00:15:41,240
small startup 6 megabits per second 2
terabytes

292
00:15:41,240 --> 00:15:45,300
may be on the order a hundred dollars
maybe a slightly larger business a

293
00:15:45,300 --> 00:15:48,220
medium size business you get a 50
megabit per second

294
00:15:48,220 --> 00:15:51,220
upload right so maybe about

295
00:15:51,220 --> 00:15:54,450
5 terabytes same it's about the same
time right

296
00:15:54,450 --> 00:15:58,769
on the order two hundred and fifty
dollars pretty cool

297
00:15:58,769 --> 00:16:02,470
so here's what we call a ball and chain
just thinking about this huge file right

298
00:16:02,470 --> 00:16:03,310
now

299
00:16:03,310 --> 00:16:06,870
it's like a huge that way tying down the
attackers

300
00:16:06,870 --> 00:16:10,940
not a beautiful picture for you blue
team guises and right

301
00:16:10,940 --> 00:16:14,610
because he has to extracted from the
network

302
00:16:14,610 --> 00:16:18,950
just we already talked about is a huge
proposition rain

303
00:16:18,950 --> 00:16:22,940
distributing it that's going to be a
pain if he wants to hand out always

304
00:16:22,940 --> 00:16:25,589
buddies right he can just post this
thing on pace to be like

305
00:16:25,589 --> 00:16:29,829
against her cracked these caches for me
away also here's a six ter about a

306
00:16:29,829 --> 00:16:31,829
register download this real quick

307
00:16:31,829 --> 00:16:36,100
and get back to me in a couple months
rape

308
00:16:36,100 --> 00:16:40,070
loading up to a crowd clapped criminal a
cloud cracking service

309
00:16:40,070 --> 00:16:44,589
that's pretty much out to you know gonna
buy like Ubuntu terabytes on a WS

310
00:16:44,589 --> 00:16:47,980
anybody anybody and spend time uploading
its

311
00:16:47,980 --> 00:16:51,860
great hosting a brother said he's all
clarissa current

312
00:16:51,860 --> 00:16:55,180
as i cant I can upload it anywhere

313
00:16:55,180 --> 00:16:58,750
but I can hosted on my network and let
you guys have access to whatever part so

314
00:16:58,750 --> 00:17:00,050
that you what

315
00:17:00,050 --> 00:17:03,180
well that's gonna net band with issues
is probably the the best way to attack

316
00:17:03,180 --> 00:17:04,189
this right now right

317
00:17:04,189 --> 00:17:08,899
if he somehow managed to get that's the
best way to distribute it but on

318
00:17:08,899 --> 00:17:12,589
in x-band with issues right so he's
gonna have to sit there

319
00:17:12,589 --> 00:17:16,480
and and and upload his papers to be very
very white people on a train crack it

320
00:17:16,480 --> 00:17:17,289
quickly

321
00:17:17,289 --> 00:17:21,169
is what I'm saying right it's loud its
clunky its easy to track

322
00:17:21,169 --> 00:17:24,679
it slows them down good so let's talk

323
00:17:24,679 --> 00:17:27,510
a little bit other technical
implementation or how this might

324
00:17:27,510 --> 00:17:28,809
actually be possible

325
00:17:28,809 --> 00:17:31,880
alright a shopping list

326
00:17:31,880 --> 00:17:34,909
you're going to need a cryptographically
secure surrender number generator

327
00:17:34,909 --> 00:17:38,870
if you want you can also get a a source
for true random for creating your rate

328
00:17:38,870 --> 00:17:40,049
that's up to you

329
00:17:40,049 --> 00:17:45,049
right we're going to block safer and i
know i know i used counter moto God

330
00:17:45,049 --> 00:17:48,309
I use counter matzah technically we're
kind of using a stream cipher

331
00:17:48,309 --> 00:17:51,580
but don't worry about that because the
padding Oracle's so on

332
00:17:51,580 --> 00:17:54,399
I shows a S 120 n kinda much for the
prof concept oh they'll be releasing

333
00:17:54,399 --> 00:17:56,700
after this talk

334
00:17:56,700 --> 00:18:00,899
whatever works I guess on hashing out
that we are going to hash out on the

335
00:18:00,899 --> 00:18:03,549
committee something like shot three it's
gotta be secure but it doesn't have to

336
00:18:03,549 --> 00:18:05,340
be slow or anything like that we're not

337
00:18:05,340 --> 00:18:08,789
riddy we're not reducing this problem to
a previously solved problem on the organ

338
00:18:08,789 --> 00:18:10,950
your data storage mechanism like a multi
terabyte

339
00:18:10,950 --> 00:18:14,519
now works as a storage device that's the
only thing to cost you money

340
00:18:14,519 --> 00:18:17,870
unless for some odd reason you feel
inclined to pay for any of these open

341
00:18:17,870 --> 00:18:20,260
source algorithms list above

342
00:18:20,260 --> 00:18:26,029
that's on you so here's a trick

343
00:18:26,029 --> 00:18:29,889
if as: 128 encounter motor crips an
invalid key it should give you some sort

344
00:18:29,889 --> 00:18:30,919
of a random gibberish

345
00:18:30,919 --> 00:18:34,340
BS output right dislike at what is that

346
00:18:34,340 --> 00:18:38,139
get away from me that's not my message
and usually you look at a message in New

347
00:18:38,139 --> 00:18:39,360
York whip something

348
00:18:39,360 --> 00:18:42,690
encrypt something it's like plain text
you to cricket again there's an order to

349
00:18:42,690 --> 00:18:43,340
%uh there's a human

350
00:18:43,340 --> 00:18:48,090
order to it you can tell what we create
a plain text look exactly

351
00:18:48,090 --> 00:18:51,260
like failed decryption Lake

352
00:18:51,260 --> 00:18:55,150
exactly like what are plain text was
total random gibberish it was impossible

353
00:18:55,150 --> 00:18:56,419
to tell the difference between

354
00:18:56,419 --> 00:19:00,330
invalid Anna a valid key

355
00:19:00,330 --> 00:19:03,500
okay let's build a gigantic array

356
00:19:03,500 --> 00:19:07,360
a gigantic file entirely random data
either suit or real

357
00:19:07,360 --> 00:19:12,020
right will pull some data from at a rate
some specific location

358
00:19:12,020 --> 00:19:15,200
will store that data as our message

359
00:19:15,200 --> 00:19:18,640
okay so anything that goes into our
block ciphers gonna need to be 100

360
00:19:18,640 --> 00:19:19,540
percent random

361
00:19:19,540 --> 00:19:22,970
we're going to limit everything by
laying began to put like

362
00:19:22,970 --> 00:19:25,740
com is there anything I was gonna be 100
percent random we will be having

363
00:19:25,740 --> 00:19:27,320
multiple fields

364
00:19:27,320 --> 00:19:30,200
there has to be deterministically
confirmable as ours we have to be able

365
00:19:30,200 --> 00:19:31,290
to go back and say

366
00:19:31,290 --> 00:19:34,480
okay here's us completely random looking
message

367
00:19:34,480 --> 00:19:38,710
now let's go back and determine whether
or not that's what we actually meant to

368
00:19:38,710 --> 00:19:39,270
send

369
00:19:39,270 --> 00:19:43,700
right so we'll talk about how to create
the array

370
00:19:43,700 --> 00:19:47,429
real quick real quick it's a breeze
attack had a store password

371
00:19:47,429 --> 00:19:50,760
perform at indication and I quote a
couple specifics and shortfalls

372
00:19:50,760 --> 00:19:54,240
as long as we have time I wanted to
throw a couple up the more advanced

373
00:19:54,240 --> 00:19:57,000
things in there to try and give you guys
a good step to think about

374
00:19:57,000 --> 00:20:00,280
if you're interested in this idea and Om
I will be

375
00:20:00,280 --> 00:20:03,179
releasing a white paper shortly as soon
as I get that all polished up that

376
00:20:03,179 --> 00:20:03,840
should cover

377
00:20:03,840 --> 00:20:07,270
every single specific and shortfall that
I have been able to find

378
00:20:07,270 --> 00:20:10,440
and help me find more please so creating
the right

379
00:20:10,440 --> 00:20:14,429
on take a decent size talk about little
bit more about the end

380
00:20:14,429 --> 00:20:17,470
on you can use either true random right
as I said before you can use a

381
00:20:17,470 --> 00:20:19,790
cryptographically secure serial number
generator

382
00:20:19,790 --> 00:20:23,490
what you got to do yes please with if
you develop something like this from

383
00:20:23,490 --> 00:20:24,230
this template

384
00:20:24,230 --> 00:20:27,350
if you develop some like this please do
not use a sitter and

385
00:20:27,350 --> 00:20:30,690
random number generator and then Lake
put the

386
00:20:30,690 --> 00:20:34,230
the seed like a red top via rail cures
the sea used to create this

387
00:20:34,230 --> 00:20:37,679
the attacker be able to just take the
seat and walk away and go build the

388
00:20:37,679 --> 00:20:39,179
thing at home right

389
00:20:39,179 --> 00:20:43,600
so yep back store password got a huge
array

390
00:20:43,600 --> 00:20:48,010
up magic random data cool let's say

391
00:20:48,010 --> 00:20:51,470
this is up portion of our records a
small portion other exit should be

392
00:20:51,470 --> 00:20:55,240
wore a larger than this

393
00:20:55,240 --> 00:20:59,710
let's elect a few pointer data pairs
circus-like some sort of player to the

394
00:20:59,710 --> 00:21:00,870
array

395
00:21:00,870 --> 00:21:04,370
such as row five column for occur

396
00:21:04,370 --> 00:21:08,610
that'll be our player they will also
pull out the data at that location

397
00:21:08,610 --> 00:21:12,559
K cool we did a couple a times

398
00:21:12,559 --> 00:21:16,970
for the slides I do it four times in
practice I've been doing it ten times

399
00:21:16,970 --> 00:21:19,860
we'll figure out what works that's right
that's what we do

400
00:21:19,860 --> 00:21:23,710
so say we do four times be four pairs a
pointers

401
00:21:23,710 --> 00:21:27,280
and data supporters are data 0 for one
day 21 acceptor a

402
00:21:27,280 --> 00:21:31,240
K wear a splint by type and concatenate
the pointers

403
00:21:31,240 --> 00:21:34,549
and the data together separately tickets
have all the players

404
00:21:34,549 --> 00:21:37,770
in Canada all that it can get it right

405
00:21:37,770 --> 00:21:42,190
okay hash the concatenated this is where
you gonna go ahead you can use something

406
00:21:42,190 --> 00:21:43,390
like shot three

407
00:21:43,390 --> 00:21:46,309
for the free concert Co am currently
using md5 because in the end if the

408
00:21:46,309 --> 00:21:48,510
attacker tries to brute force or hash
over here

409
00:21:48,510 --> 00:21:52,760
collisions end up working out in our
favor um with doing ten times like that

410
00:21:52,760 --> 00:21:54,070
that the entropy is likely

411
00:21:54,070 --> 00:21:57,160
to the 1200 idiot there something
ridiculous where the way they're doing

412
00:21:57,160 --> 00:21:57,900
it so

413
00:21:57,900 --> 00:22:01,530
he's gonna get collisions while before
he finds are legitimate one which means

414
00:22:01,530 --> 00:22:04,940
pack com it can be a fast hashing
function

415
00:22:04,940 --> 00:22:08,760
that's totally cool just got to be
secure right on so can can eat the

416
00:22:08,760 --> 00:22:09,320
pointers

417
00:22:09,320 --> 00:22:13,570
and Hashem all the data now we have all
our players smash together

418
00:22:13,570 --> 00:22:17,870
plan sardines chart data right on the
site right

419
00:22:17,870 --> 00:22:21,450
this is the quick no it's gotta be in
binary format okay

420
00:22:21,450 --> 00:22:25,039
you gonna take ripped across the whole
character space so you can have

421
00:22:25,039 --> 00:22:28,740
the decryption will be random across
across by retouched like the ASCII

422
00:22:28,740 --> 00:22:32,200
numbers or anything like that to go to
make sure you properly

423
00:22:32,200 --> 00:22:36,320
transmit your data over to binary don't
just take like your hex thats

424
00:22:36,320 --> 00:22:39,510
don't take that the hex digestive your
shot three

425
00:22:39,510 --> 00:22:44,039
and like converted from like ASCII to
binary that's not going to work

426
00:22:44,039 --> 00:22:48,669
like you guys gonna make shirts
correctly in code is binary okay

427
00:22:48,669 --> 00:22:51,610
here's how we would encrypt with the
user's password except brought the

428
00:22:51,610 --> 00:22:53,070
user's password and yet

429
00:22:53,070 --> 00:22:56,480
we'll take the user's password we're
gonna have should upper in some way pat

430
00:22:56,480 --> 00:22:59,190
it so that it fits inside a block cipher
in this case I use

431
00:22:59,190 --> 00:23:02,460
shot three which was like the trunk it a
little bit of the end right that

432
00:23:02,460 --> 00:23:06,640
that works at fun for example critic a
random nonce because I'm working

433
00:23:06,640 --> 00:23:08,940
encounter motors you guys don't know
counter node

434
00:23:08,940 --> 00:23:12,490
can remote needs and not means that
initialization vector 888

435
00:23:12,490 --> 00:23:16,760
to kick off encryption set school the
nonce basically functions like assault

436
00:23:16,760 --> 00:23:20,360
so just think of it like a salt will
store like a sultry like us all

437
00:23:20,360 --> 00:23:24,110
its it's all good right take all that
data we created previously it's

438
00:23:24,110 --> 00:23:27,090
currently in binary form

439
00:23:27,090 --> 00:23:30,460
perform this operation K user's password
is the key

440
00:23:30,460 --> 00:23:33,830
you got your nonce you encrypting the
data cool

441
00:23:33,830 --> 00:23:39,190
fan gonna get some something that looks
like that probably longer

442
00:23:39,190 --> 00:23:44,289
a password representation K looks kinda
like a hatch to me and say listen so

443
00:23:44,289 --> 00:23:45,210
different than

444
00:23:45,210 --> 00:23:49,260
I'm cool you can store in shadow format
no big deal

445
00:23:49,260 --> 00:23:52,620
the user name is still the same the
nonce goes with us all coats

446
00:23:52,620 --> 00:23:55,919
the cipher text goes for the hash use to
go

447
00:23:55,919 --> 00:24:00,610
let's look at authentication hit
attempted decried the store data so

448
00:24:00,610 --> 00:24:04,470
so this is worth indicating now users
come in has come in

449
00:24:04,470 --> 00:24:07,990
it if take their password in square
gonna kinda perform this operation

450
00:24:07,990 --> 00:24:09,630
reverse right

451
00:24:09,630 --> 00:24:12,860
gonna go in we're gonna shop the user's
password

452
00:24:12,860 --> 00:24:16,539
gonna take the nonce right under the
shadow file whatever using right

453
00:24:16,539 --> 00:24:20,210
but that's nothin take the pass a
representation we're gonna decrypted

454
00:24:20,210 --> 00:24:23,880
will get a bunch of random looking data
right that's the whole point of this we

455
00:24:23,880 --> 00:24:26,210
gotta make sure that's random working
day that we can't just

456
00:24:26,210 --> 00:24:29,470
we can just look at this data and say

457
00:24:29,470 --> 00:24:32,740
yes that makes sense right

458
00:24:32,740 --> 00:24:36,750
so then we're gonna go out we're gonna
confirm or deny whether that is the data

459
00:24:36,750 --> 00:24:40,770
that we encrypt it previously or not

460
00:24:40,770 --> 00:24:44,100
so split the data backup member I said
we'd be delimited by length

461
00:24:44,100 --> 00:24:47,179
split the data backup based on length
okay

462
00:24:47,179 --> 00:24:50,320
you should have global variables that
allow you to do this by referencing them

463
00:24:50,320 --> 00:24:52,390
you'd prolly store them somewhere in the
array

464
00:24:52,390 --> 00:24:56,280
should point out and build this template
so I don't actually have like you know a

465
00:24:56,280 --> 00:24:57,309
spec for anything

466
00:24:57,309 --> 00:25:00,100
to give you guys that's when being kinda
open-ended about you should probably

467
00:25:00,100 --> 00:25:02,070
happy cereals right

468
00:25:02,070 --> 00:25:05,169
some other than you can derive but
anyway on

469
00:25:05,169 --> 00:25:09,480
pull it back out you can get all those
pointers again point or 0.1 for 2.30 and

470
00:25:09,480 --> 00:25:10,660
get that shot again

471
00:25:10,660 --> 00:25:16,140
right cool so never gonna rebuild all
those planner date appears that we had

472
00:25:16,140 --> 00:25:19,169
previously way back on that slide back
there

473
00:25:19,169 --> 00:25:22,650
take each pointer go to where that point
or points

474
00:25:22,650 --> 00:25:26,880
inside the array and pole the data out
from that location okay

475
00:25:26,880 --> 00:25:30,880
rebuild all those pairs K so this is
this is the step where you need the

476
00:25:30,880 --> 00:25:32,030
array

477
00:25:32,030 --> 00:25:35,530
this is the step that the attacker fails
to do

478
00:25:35,530 --> 00:25:40,860
this is for the attackers gonna be like
I don't have here

479
00:25:40,860 --> 00:25:44,330
and start crying right once you have all
the data

480
00:25:44,330 --> 00:25:47,440
you can throw out the pointers you don't
need those anymore

481
00:25:47,440 --> 00:25:50,520
then concatenate the data back together
just as we did before

482
00:25:50,520 --> 00:25:54,730
right guess what we're gonna do next
we're gonna hatched the data you guys

483
00:25:54,730 --> 00:25:55,980
are so smart that Ferguson

484
00:25:55,980 --> 00:25:59,130
arena has the data I'm using shot three
again

485
00:25:59,130 --> 00:26:02,679
K cash it get the hash a baller new data
points

486
00:26:02,679 --> 00:26:05,730
K and all we're gonna say is

487
00:26:05,730 --> 00:26:09,909
does this hash rehear match up with the
hash that I had

488
00:26:09,909 --> 00:26:14,700
previous leaders this hash that I just
created using these pointer data pairs

489
00:26:14,700 --> 00:26:17,880
right everything I just created does
this match

490
00:26:17,880 --> 00:26:21,059
what I D cryptid when I typed in the
user's key

491
00:26:21,059 --> 00:26:27,270
make sense it so if they match then it
is incredibly highly probably

492
00:26:27,270 --> 00:26:32,429
most definitely the correct key was used
to decrypt

493
00:26:32,429 --> 00:26:35,610
that site a text K

494
00:26:35,610 --> 00:26:39,690
if they'd do not match then it is
astronomically likely that the wrong

495
00:26:39,690 --> 00:26:40,690
keywords use

496
00:26:40,690 --> 00:26:45,270
straight so just go over that one more
time

497
00:26:45,270 --> 00:26:49,630
if a valid key gives you a hundred
percent random output

498
00:26:49,630 --> 00:26:53,059
just like an invalid he does

499
00:26:53,059 --> 00:26:56,730
then the attackers gonna need the array
to confirm or deny it whether that was

500
00:26:56,730 --> 00:26:57,960
the proper

501
00:26:57,960 --> 00:27:04,960
output right without the array he is
simply add a lock

502
00:27:05,549 --> 00:27:09,760
so let's talk some specifics real quick
I just give you guys a hint at some of

503
00:27:09,760 --> 00:27:10,360
the other

504
00:27:10,360 --> 00:27:14,350
little better stuff that goes in here on
selecting a datalink

505
00:27:14,350 --> 00:27:18,159
okay so I talked about a shoot out a
global variable set for the link the

506
00:27:18,159 --> 00:27:21,179
data relating to talk about a quizzical
chapel these things

507
00:27:21,179 --> 00:27:25,159
on it's like the datalink I've been
using 128 bits right that Fair Lawn NJ

508
00:27:25,159 --> 00:27:25,640
AP

509
00:27:25,640 --> 00:27:29,030
so the daily is the amount of data it's
gonna be polled

510
00:27:29,030 --> 00:27:32,260
from each and every location where you
have an array her

511
00:27:32,260 --> 00:27:35,330
I'm sorry we have a player so you have a
player points there you go there

512
00:27:35,330 --> 00:27:38,539
this is my magical invisible array it
points there

513
00:27:38,539 --> 00:27:41,830
you go there you pull out 128 bits of
data

514
00:27:41,830 --> 00:27:45,330
pay yet for every single player on

515
00:27:45,330 --> 00:27:49,059
you just want to be long enough that you
don't create a chance for collisions or

516
00:27:49,059 --> 00:27:50,470
somebody can type in a different key

517
00:27:50,470 --> 00:27:55,360
and get something that works right so
coup

518
00:27:55,360 --> 00:27:58,370
and as so if we're using multiple
pointers that's gonna stack

519
00:27:58,370 --> 00:28:02,710
incredibly incredibly fast so really
probably don't even need 128 bits on the

520
00:28:02,710 --> 00:28:03,850
use enough players but

521
00:28:03,850 --> 00:28:06,850
it also doesn't hurt to have it because
I'll just get ash togetherness is

522
00:28:06,850 --> 00:28:08,740
wonderful and beautiful it's amazing

523
00:28:08,740 --> 00:28:12,539
so when building your record business
side on a size fear a

524
00:28:12,539 --> 00:28:15,960
make sure that you raised easily larger
I we talked about making sure that the

525
00:28:15,960 --> 00:28:16,659
attacker

526
00:28:16,659 --> 00:28:20,450
cannot steal even a significant portion
of it

527
00:28:20,450 --> 00:28:24,909
right wanna make sure that he can even
get like a tent today but

528
00:28:24,909 --> 00:28:28,720
well it's okay yes idiots attempted it
right because we've we've used

529
00:28:28,720 --> 00:28:32,669
all those extra all those extra pointers
all kinds explain a little bit more

530
00:28:32,669 --> 00:28:33,890
about that I believe but

531
00:28:33,890 --> 00:28:37,530
it make it big enough make it a bigger a

532
00:28:37,530 --> 00:28:40,610
some point or considerations have to be
made so I'm

533
00:28:40,610 --> 00:28:43,760
depending on the format you choose
3-pointer you can come up to a situation

534
00:28:43,760 --> 00:28:44,860
where the attacker

535
00:28:44,860 --> 00:28:48,830
can look at the Poynter and say the the
point that he gets when he decrypts the

536
00:28:48,830 --> 00:28:50,600
cipher text using some random

537
00:28:50,600 --> 00:28:53,760
key is guess for your password right

538
00:28:53,760 --> 00:28:57,230
you can create a situation where he can
look at that and say I know that this is

539
00:28:57,230 --> 00:28:58,500
not the password

540
00:28:58,500 --> 00:29:02,409
so here's how that works real quick

541
00:29:02,409 --> 00:29:06,529
um obviously it would be in by a
repairman use a a decimal example

542
00:29:06,529 --> 00:29:10,900
for the pointer so if you had four
indexes Turei the formats are one two

543
00:29:10,900 --> 00:29:11,929
and three

544
00:29:11,929 --> 00:29:15,720
since the the decryption ce from the ASU
no the block cipher

545
00:29:15,720 --> 00:29:19,669
would take the whole character space at
that you get the crib shins

546
00:29:19,669 --> 00:29:22,750
they for a 45 a6 a7 a8 at nine

547
00:29:22,750 --> 00:29:25,710
right you would also get their 12
entries you get all these other

548
00:29:25,710 --> 00:29:26,650
descriptions to

549
00:29:26,650 --> 00:29:31,510
so it still infeasible will assume this
this array is tiny italy has four

550
00:29:31,510 --> 00:29:35,010
indexes to the array right but we'll
assume that the attackers and feasible

551
00:29:35,010 --> 00:29:37,140
for the steel the entire array

552
00:29:37,140 --> 00:29:39,970
but it would be really easy to go and
maybe get some visibility to the network

553
00:29:39,970 --> 00:29:41,010
and figure out with the

554
00:29:41,010 --> 00:29:44,020
with the with the size of the array
what's eighty

555
00:29:44,020 --> 00:29:47,940
you probably that way easier to steal
than the entire right

556
00:29:47,940 --> 00:29:52,020
so with that he can figure out so the
password isn't right he does this by

557
00:29:52,020 --> 00:29:53,210
making guesses

558
00:29:53,210 --> 00:29:56,960
and heat City get a random descriptions
for every gas in since the pointers are

559
00:29:56,960 --> 00:29:57,940
inside

560
00:29:57,940 --> 00:30:01,140
the cipher text sometimes they will
decrypts to something

561
00:30:01,140 --> 00:30:04,409
but the crypt like a5 or the old
equipped to know something else

562
00:30:04,409 --> 00:30:07,919
and I'll be all like well I know that
that's not in the array

563
00:30:07,919 --> 00:30:12,000
so therefore this isn't the password
which is gaining some information about

564
00:30:12,000 --> 00:30:13,090
your network

565
00:30:13,090 --> 00:30:17,350
so hear some solutions that pretty quick
just ignore it if you want

566
00:30:17,350 --> 00:30:20,220
especially the difference is minimal no
big deal he's never to figure out the

567
00:30:20,220 --> 00:30:21,490
password right

568
00:30:21,490 --> 00:30:25,279
you can match your pointer space and
you're a size which limits the possible

569
00:30:25,279 --> 00:30:25,919
sizes

570
00:30:25,919 --> 00:30:30,750
operate you can have right you can use
non sequential indexes do something like

571
00:30:30,750 --> 00:30:31,529
a mapping

572
00:30:31,529 --> 00:30:34,860
you can have so that way you can have
like all the sequential indexes will be

573
00:30:34,860 --> 00:30:36,220
over here to pay off I'll

574
00:30:36,220 --> 00:30:39,409
and your provincial random ones in for
each and every one that used to that

575
00:30:39,409 --> 00:30:42,970
would draw lines game like this one
messes with this one right

576
00:30:42,970 --> 00:30:46,919
you do that could get outta control if
you really wanna try and store that and

577
00:30:46,919 --> 00:30:50,029
I do I produce that were previously sold
problem I said just make it too large

578
00:30:50,029 --> 00:30:53,140
for him to steal yet again

579
00:30:53,140 --> 00:30:57,570
for just make the indexes wrap-around
thats probably the best solution right

580
00:30:57,570 --> 00:31:00,909
to perform a much less operation on
whatever the pointer apparatus

581
00:31:00,909 --> 00:31:03,970
so I do use multiple pointer data pairs

582
00:31:03,970 --> 00:31:08,340
allow me to explain reduces the chances
an attacker can get away with stealing

583
00:31:08,340 --> 00:31:10,500
just part of our right

584
00:31:10,500 --> 00:31:14,559
right so every time he performs a new
decryption he gets a new

585
00:31:14,559 --> 00:31:17,870
pointer that points to somewhere else
inside at the Red

586
00:31:17,870 --> 00:31:21,740
over here in the next time he tries a
new path right over here is gonna chase

587
00:31:21,740 --> 00:31:25,720
right well maybe he gets lucky

588
00:31:25,720 --> 00:31:29,370
maybe get super lucky or maybe you have
tons and tons and tons the passwords

589
00:31:29,370 --> 00:31:32,820
say you have like in a hundred thousand
passengers something well then certainly

590
00:31:32,820 --> 00:31:36,010
if you did if he decides lex steele like
attentive your real

591
00:31:36,010 --> 00:31:39,470
and maybe he can do that depending on
how big you make it may be a tent isn't

592
00:31:39,470 --> 00:31:40,650
too large right

593
00:31:40,650 --> 00:31:44,340
he takes a tent back with him maybe he
gets all appear hashes

594
00:31:44,340 --> 00:31:48,240
the assumption would be that if using go
out a randomly distributed

595
00:31:48,240 --> 00:31:52,799
arm quarter system that for the proper
descriptions

596
00:31:52,799 --> 00:31:58,110
a 10th all love your passwords for your
service are gonna be inside that 10th at

597
00:31:58,110 --> 00:31:59,230
the Red

598
00:31:59,230 --> 00:32:04,210
right so he has a chance to crack some
other the more pointed it appears that

599
00:32:04,210 --> 00:32:05,169
we use

600
00:32:05,169 --> 00:32:09,240
if you if you get it quickly compounds
becomes exceedingly unlikely

601
00:32:09,240 --> 00:32:12,350
that you'll be able to steal just one
little portion of the array and get away

602
00:32:12,350 --> 00:32:13,330
with it

603
00:32:13,330 --> 00:32:16,850
right so that's why we use more rights
than he does I just wonder all over the

604
00:32:16,850 --> 00:32:17,419
place

605
00:32:17,419 --> 00:32:21,380
and as soon as you have another them
that it becomes statistically impossible

606
00:32:21,380 --> 00:32:22,240
right

607
00:32:22,240 --> 00:32:25,669
so also gets

608
00:32:25,669 --> 00:32:29,400
yes this is why we have today to don't
just be like hey we can to store the

609
00:32:29,400 --> 00:32:32,669
data inside the separate X-rayed that
saves one hashing hash the data

610
00:32:32,669 --> 00:32:36,620
because he don't he's only gonna need
one player data pair to be able to say

611
00:32:36,620 --> 00:32:39,880
whether this is a true or false pain

612
00:32:39,880 --> 00:32:43,539
for example if he has a bunch of them

613
00:32:43,539 --> 00:32:47,570
Kiki steals a very small portion you're
a mate

614
00:32:47,570 --> 00:32:50,750
here's a bunch a planner data pairs
inside the cipher text

615
00:32:50,750 --> 00:32:55,549
he just goes to the pointers Italy fines
one that's inside his area and a more

616
00:32:55,549 --> 00:32:58,240
pointed it appears that we have at this
point

617
00:32:58,240 --> 00:33:01,370
the more likely it is that all have one
inside at the small portion is stolen

618
00:33:01,370 --> 00:33:02,340
right

619
00:33:02,340 --> 00:33:06,120
and he too says at all he is that true
or false and because we chose

620
00:33:06,120 --> 00:33:09,179
I up i'd data links

621
00:33:09,179 --> 00:33:12,169
that reduces the likelihood of
collisions that it would be highly

622
00:33:12,169 --> 00:33:15,860
probable that if they're is a true or
false there that it's

623
00:33:15,860 --> 00:33:22,020
that is the answer to the question
accessory shit

624
00:33:22,020 --> 00:33:28,020
get back up here

625
00:33:28,020 --> 00:33:31,260
so he can't that yet catcher

626
00:33:31,260 --> 00:33:34,740
so why would the attacker not to steal
the pointer data pairs from the file

627
00:33:34,740 --> 00:33:35,679
right

628
00:33:35,679 --> 00:33:39,179
so he's going to appointed data pairs
are stored

629
00:33:39,179 --> 00:33:42,480
as a cipher text he's gonna steal and
that's the assumption

630
00:33:42,480 --> 00:33:45,710
because that's a protects replacing our
hashes and we're still assuming

631
00:33:45,710 --> 00:33:49,490
it's very very possible for him to steal
the hatchets right

632
00:33:49,490 --> 00:33:52,590
the store is a sabretech such means are
stored in a format that he has had a key

633
00:33:52,590 --> 00:33:54,399
to unlock them back out

634
00:33:54,399 --> 00:33:59,000
he types in the right key he'll get the
right pointer data pairs

635
00:33:59,000 --> 00:34:03,610
make sense but he texted a wrong key
he'll get the kill get something counts

636
00:34:03,610 --> 00:34:07,360
right for making it so that are pointer
data pairs are indistinguishable from

637
00:34:07,360 --> 00:34:08,710
the true random output

638
00:34:08,710 --> 00:34:12,279
a failed decryption so therefore

639
00:34:12,279 --> 00:34:15,319
every single decryption is going to give
the attacker

640
00:34:15,319 --> 00:34:18,879
a different set have player data pairs
not the same set

641
00:34:18,879 --> 00:34:22,960
so he won't be able to still sick Senate
sense that a good answer

642
00:34:22,960 --> 00:34:25,970
anybody okay yet you guys can ask
questions you want but

643
00:34:25,970 --> 00:34:30,839
Tim your age

644
00:34:30,839 --> 00:34:37,490
thanks Dave for this is delightfully
disgusting

645
00:34:37,490 --> 00:34:40,710
so so let's let's talk about this as a
as a reality

646
00:34:40,710 --> 00:34:43,909
okay you have a password the password is

647
00:34:43,909 --> 00:34:47,109
is 1234 let's see how that stacks up

648
00:34:47,109 --> 00:34:50,369
against a couple different types of
attacks given me the

649
00:34:50,369 --> 00:34:54,399
introduction of ball n chain so online
attacks

650
00:34:54,399 --> 00:34:57,859
if you're conducting the proper anti
automation mitigations try and you're

651
00:34:57,859 --> 00:35:01,839
doing the proper monitoring and defense
on your network

652
00:35:01,839 --> 00:35:05,750
online attacks almost should not be able
to happen

653
00:35:05,750 --> 00:35:09,049
against the pass for like 1234 right
because one

654
00:35:09,049 --> 00:35:13,390
and true brute force attack how many
tries it take to get to 1234

655
00:35:13,390 --> 00:35:16,740
quite a bit right quite a bit the second
thing is

656
00:35:16,740 --> 00:35:20,079
is who has a four character password on
their word list raise your hand if you

657
00:35:20,079 --> 00:35:21,930
have a four character property wordless

658
00:35:21,930 --> 00:35:27,400
not a whole lot of you because who has a
four character password anymore right

659
00:35:27,400 --> 00:35:31,839
except for timid and he's got a four
character password cracker and so

660
00:35:31,839 --> 00:35:35,799
so online attacks I mean even even given
like the current implementations

661
00:35:35,799 --> 00:35:39,130
online attack should be no one boy right
that there's think we should not allow

662
00:35:39,130 --> 00:35:42,500
online attacks against her password it's
too easy to do with the technology that

663
00:35:42,500 --> 00:35:43,520
we currently have

664
00:35:43,520 --> 00:35:46,599
and then if we're able to prevent
offline attacks against her passwords as

665
00:35:46,599 --> 00:35:47,349
well

666
00:35:47,349 --> 00:35:51,140
in a password like one-two-three-four
becomes a secure password

667
00:35:51,140 --> 00:35:54,319
now a strong password but a secure
password

668
00:35:54,319 --> 00:35:58,329
and that's pretty ridiculous isn't Mets
pretty awesome

669
00:35:58,329 --> 00:36:02,309
so we understand what phone chains
complex and he would stop you just talk

670
00:36:02,309 --> 00:36:05,009
about the reason why he's talking about
and I'm not if you're doing anything so

671
00:36:05,009 --> 00:36:05,700
I don't get it

672
00:36:05,700 --> 00:36:09,619
right things up a top of my head I'm not
as I'm not embarrassed to say that I am

673
00:36:09,619 --> 00:36:11,789
NOT a quick to guide on understand
crypto

674
00:36:11,789 --> 00:36:15,140
as well as people like and some %uh view
they do that stuff and I don't

675
00:36:15,140 --> 00:36:18,410
alright so it's complex me understand
that but our objective

676
00:36:18,410 --> 00:36:22,440
isn't necessarily for everyone in the
world to implement ball and chain today

677
00:36:22,440 --> 00:36:26,559
that's not our objective it's about
pushing the industry for work

678
00:36:26,559 --> 00:36:30,640
there's a market research shows that if
you give a consumer and

679
00:36:30,640 --> 00:36:33,729
a choice between something that
expensive but very capable

680
00:36:33,729 --> 00:36:37,099
sheep and not so capable and then
something in between

681
00:36:37,099 --> 00:36:39,920
they typically choose to something in
between because it to get that they get

682
00:36:39,920 --> 00:36:42,700
this perception that it's the best of
both worlds

683
00:36:42,700 --> 00:36:46,809
an economics they call this the Goldie
locks principal case let's look at our

684
00:36:46,809 --> 00:36:48,900
current implementation trent

685
00:36:48,900 --> 00:36:52,950
I adapted hashing it seen as too complex
too costly

686
00:36:52,950 --> 00:36:56,099
plain text encoding is finally at least
from my experience

687
00:36:56,099 --> 00:36:59,799
begin to be seen as too insecure I don't
see too many

688
00:36:59,799 --> 00:37:02,940
passers being stored in clear text
anymore okay

689
00:37:02,940 --> 00:37:07,660
and fast hashing seems to be just right
took a look at the graphic right here

690
00:37:07,660 --> 00:37:11,499
I when I took a bunch is statistical
data although they are the poon list of

691
00:37:11,499 --> 00:37:13,219
leak stopped leaks database

692
00:37:13,219 --> 00:37:17,479
and a core and for the leaks that report
what type of hashing algorithm was jus

693
00:37:17,479 --> 00:37:21,640
how many of those they're using adaptive
hashing functions

694
00:37:21,640 --> 00:37:25,329
two instances the rest of them what 1300

695
00:37:25,329 --> 00:37:29,910
are using fast hashing algorithms so the
evidence right here from homeless

696
00:37:29,910 --> 00:37:33,660
supports the current rent went to be
awesome if we could do something like

697
00:37:33,660 --> 00:37:37,269
this with the projected trend was now
that something like ball n chain or

698
00:37:37,269 --> 00:37:37,950
simple murder

699
00:37:37,950 --> 00:37:42,660
simple similar implementation becomes
too complex but too costly

700
00:37:42,660 --> 00:37:45,900
and in fact cashing out becomes to and
secure

701
00:37:45,900 --> 00:37:49,749
but in adaptive caching becomes the just
right implementation

702
00:37:49,749 --> 00:37:53,079
well we've pushed the industry forward
this is still a win

703
00:37:53,079 --> 00:37:56,759
okay this is still a win but we do need
to change the trajectory

704
00:37:56,759 --> 00:38:01,160
because if we keep going down this this
lined up creating more complex in slower

705
00:38:01,160 --> 00:38:02,219
hashing algorithms

706
00:38:02,219 --> 00:38:05,739
all we're doing is kicking this can of
computational warfare against the

707
00:38:05,739 --> 00:38:06,910
attacker down the road

708
00:38:06,910 --> 00:38:10,880
at a war that we're not gonna win K 2pac
in things like it

709
00:38:10,880 --> 00:38:14,249
or IRA real solution a step in the right
direction

710
00:38:14,249 --> 00:38:18,440
we need to focus on trying to identify
trying to identify

711
00:38:18,440 --> 00:38:22,859
the the advantages up the defensive
perspective handball in Chen's case

712
00:38:22,859 --> 00:38:25,920
it's the fact that we can create the
huge massive things

713
00:38:25,920 --> 00:38:29,979
Ryan can prevent going through our small
pipe to our network that something

714
00:38:29,979 --> 00:38:34,969
that we control okay so in closing for
the talks and not really matter

715
00:38:34,969 --> 00:38:38,319
if it's a matter of when you're going to
be abridged so anytime you're designing

716
00:38:38,319 --> 00:38:38,670
it

717
00:38:38,670 --> 00:38:42,410
designing a password or potential
scripts thoughts storage

718
00:38:42,410 --> 00:38:45,999
credential store security system right
or you're implementing a new one

719
00:38:45,999 --> 00:38:47,869
designing a new one

720
00:38:47,869 --> 00:38:51,319
just keep in mind that you need to
assume eventual compromise up the system

721
00:38:51,319 --> 00:38:54,329
and do your best to protect those
credentials

722
00:38:54,329 --> 00:38:57,049
now as far as the goods go for this
particular talking to things that we

723
00:38:57,049 --> 00:38:58,259
talked about here

724
00:38:58,259 --> 00:39:02,459
on here shortly probably the next 24
hours this out this bitbucket repository

725
00:39:02,459 --> 00:39:03,739
will become available

726
00:39:03,739 --> 00:39:06,729
that's got some %uh very early
proof-of-concept code that we put our

727
00:39:06,729 --> 00:39:08,579
that bench put together for this

728
00:39:08,579 --> 00:39:12,569
on this isn't just like ape then only
project yet he wants your help

729
00:39:12,569 --> 00:39:16,869
I want your help but get a community a
bright minds and we have the brightest

730
00:39:16,869 --> 00:39:19,299
minds here Derby Conn do we not

731
00:39:19,299 --> 00:39:23,019
fashion collars you got a prime I know
your buddy L

732
00:39:23,019 --> 00:39:26,190
I we want we want you guys to to help
guys and gals

733
00:39:26,190 --> 00:39:30,109
included who want you to help us perfect
this help it does help us design is

734
00:39:30,109 --> 00:39:33,759
help us come up with new solutions to
change this direct to church rectory of

735
00:39:33,759 --> 00:39:35,339
the other way we're going

736
00:39:35,339 --> 00:39:39,859
right read it that's pretty active on
reddit for a discussion about open be AC

737
00:39:39,859 --> 00:39:40,469
here

738
00:39:40,469 --> 00:39:43,680
follow him on Twitter for the latest
update for the latest information about

739
00:39:43,680 --> 00:39:44,170
it

740
00:39:44,170 --> 00:39:47,160
and also for an announcement when he
finally releases the full technical

741
00:39:47,160 --> 00:39:50,609
white paper if you're interested in all
the excruciating details

742
00:39:50,609 --> 00:39:53,670
and of course feel free to follow either
of us on Twitter

743
00:39:53,670 --> 00:39:57,140
if you want to security related stuff so
with that I'd like to open up the floor

744
00:39:57,140 --> 00:39:57,729
for

745
00:39:57,729 --> 00:40:01,680
for some more questions and myself and
then we'll do our best to answer them

746
00:40:01,680 --> 00:40:08,680
go ahead temp

747
00:40:10,029 --> 00:40:12,979
to talk to the players a point outside
the thing like was talking about is our

748
00:40:12,979 --> 00:40:14,079
one to three right

749
00:40:14,079 --> 00:40:17,359
how do we make sure so I can go back to
cited what we have a couple solutions

750
00:40:17,359 --> 00:40:18,799
that are treated

751
00:40:18,799 --> 00:40:22,069
out there okay yes how do we make sure
that the players

752
00:40:22,069 --> 00:40:25,549
um do not point outside at the dataset
cat

753
00:40:25,549 --> 00:40:32,549
so the solutions I had for that where

754
00:40:32,650 --> 00:40:36,200
I miss them ever get this one act

755
00:40:36,200 --> 00:40:39,779
cool do you explain the your

756
00:40:39,779 --> 00:40:43,229
Kepco computers the so

757
00:40:43,229 --> 00:40:45,920
you can just ignore it because the
players play outside the dataset all the

758
00:40:45,920 --> 00:40:48,289
attacker knows that that that is not the
password

759
00:40:48,289 --> 00:40:51,619
he just knows okay so that point outside
the dataset therefore they could never

760
00:40:51,619 --> 00:40:54,609
confirm or deny if that was right

761
00:40:54,609 --> 00:40:58,309
therefore it's not the password right

762
00:40:58,309 --> 00:41:01,289
cool to you can ignore it because it's
never gonna be the password it's always

763
00:41:01,289 --> 00:41:02,829
gonna be something it's not the password

764
00:41:02,829 --> 00:41:06,440
now if the attacker knows the attacker
will be at the assumptions that the

765
00:41:06,440 --> 00:41:09,019
attacker knows if you're not gonna do
security through obscurity organism that

766
00:41:09,019 --> 00:41:11,489
he knows everything about our operating
the way they were operating

767
00:41:11,489 --> 00:41:14,769
just he just can't do what we're doing
we're gonna beat him in math not in

768
00:41:14,769 --> 00:41:15,450
obscurity

769
00:41:15,450 --> 00:41:19,359
right so arm of

770
00:41:19,359 --> 00:41:22,549
were play ap

771
00:41:22,549 --> 00:41:25,369
here's the thing is that you have you
have you can do other solutions to rate

772
00:41:25,369 --> 00:41:26,359
if you wanna do that

773
00:41:26,359 --> 00:41:29,739
if you don't do that it'll never given
the passerby you can also just match the

774
00:41:29,739 --> 00:41:31,390
pointer space you can match

775
00:41:31,390 --> 00:41:34,690
you can match it you can match perfectly
you can say here this box

776
00:41:34,690 --> 00:41:37,729
is all my pointers let's just make sure
the array fills that box

777
00:41:37,729 --> 00:41:41,170
right you make sure the same size let's
go to limit that the amount to raise

778
00:41:41,170 --> 00:41:42,400
that you can have

779
00:41:42,400 --> 00:41:44,910
you know especially as we start getting
into higher-order numbers that's gonna

780
00:41:44,910 --> 00:41:46,349
become a little bit ugly

781
00:41:46,349 --> 00:41:49,549
but it works out on you can use non
sequential indexes which is what I was

782
00:41:49,549 --> 00:41:50,969
talking about where we would make it

783
00:41:50,969 --> 00:41:54,239
so that they're not they're not his
descriptions the players that he gets

784
00:41:54,239 --> 00:41:55,809
are not sequential

785
00:41:55,809 --> 00:42:00,069
right and you could snap so say forget
about how you map it forget about how

786
00:42:00,069 --> 00:42:01,369
you map it just lets say

787
00:42:01,369 --> 00:42:04,380
the pointers are random and the random
pointers

788
00:42:04,380 --> 00:42:08,269
somehow point to some ordered location
inside the red

789
00:42:08,269 --> 00:42:13,079
right and we make sure therefore that
there is no maximum size he doesn't know

790
00:42:13,079 --> 00:42:16,920
he doesn't know what the maximum sizes
he loses the issue with that is simply

791
00:42:16,920 --> 00:42:19,329
the you have to actually find a way to
map those out

792
00:42:19,329 --> 00:42:23,029
right Williams make the wrap-around
making the wrap-around probably the best

793
00:42:23,029 --> 00:42:26,549
solution I'm not sure yet over to map on
and make sure to the solution

794
00:42:26,549 --> 00:42:29,619
be to say okay here's here's my pointer
space

795
00:42:29,619 --> 00:42:32,910
and meyer et fills up half it right

796
00:42:32,910 --> 00:42:36,130
well thats that means fifty percent of
the time a point to point to most

797
00:42:36,130 --> 00:42:39,539
ok Ill just module apps flip it over
rate

798
00:42:39,539 --> 00:42:42,799
he has no modular and K

799
00:42:42,799 --> 00:42:49,799
some yes sir

800
00:43:00,289 --> 00:43:07,289
how do I handle data rotation

801
00:43:11,339 --> 00:43:18,219
here your head

802
00:43:18,219 --> 00:43:21,949
definitely so denial of service is
possible with the system as you would

803
00:43:21,949 --> 00:43:24,739
assume that was with any sort of you I
mention network accessible

804
00:43:24,739 --> 00:43:28,150
store so how would I handle if the
attacker

805
00:43:28,150 --> 00:43:31,959
stole my seed or something like that and
then was able to or was somehow able to

806
00:43:31,959 --> 00:43:33,219
determine it I just

807
00:43:33,219 --> 00:43:36,630
how I mean really how I handle it if the
attacker found anyway

808
00:43:36,630 --> 00:43:40,599
to get my rec right obviously you're
going to immediately change all your

809
00:43:40,599 --> 00:43:42,369
passwords you just create a new array

810
00:43:42,369 --> 00:43:45,900
he say everybody change your passwords
right that's kind of a pain in the butt

811
00:43:45,900 --> 00:43:48,979
but you can do it we can just created
again from scratch on

812
00:43:48,979 --> 00:43:52,680
I do wanna point out with that that this
the protections a ball and chain does

813
00:43:52,680 --> 00:43:56,009
not just stop simply when the attacker
get it remember guys there's a slight a

814
00:43:56,009 --> 00:43:59,199
little while back we talked about how
it's such a pain in the butt

815
00:43:59,199 --> 00:44:02,690
for the attacker to work with it as well
right so even if he does somehow manage

816
00:44:02,690 --> 00:44:03,449
to steal it

817
00:44:03,449 --> 00:44:07,029
decreased it's still a huge problem for
me the ball and chain is truly drag it

818
00:44:07,029 --> 00:44:09,119
around its play a great

819
00:44:09,119 --> 00:44:16,119
but yep just cycle it

820
00:44:20,249 --> 00:44:24,099
yes would be the assumption that we
would assume that the players are chosen

821
00:44:24,099 --> 00:44:26,690
at random for every different person for
every single person

822
00:44:26,690 --> 00:44:30,599
for every single guy ever use the same
pointers that would be a problem right

823
00:44:30,599 --> 00:44:33,479
because eventually he's gonna figure
something is gonna crack one or two

824
00:44:33,479 --> 00:44:34,959
passwords maybe I mean

825
00:44:34,959 --> 00:44:38,130
the assumption is he never does maybe
does research the figures like a

826
00:44:38,130 --> 00:44:43,049
that's weird baby makes an account right
cell

827
00:44:43,049 --> 00:44:50,049
yes sec

828
00:44:58,319 --> 00:44:59,250
yet so

829
00:44:59,250 --> 00:45:02,970
they have a start seeing how skillful is
in terms of performance how quickly it

830
00:45:02,970 --> 00:45:05,250
with how quickly you can run this
algorithm of course

831
00:45:05,250 --> 00:45:10,010
that's gonna depend entirely on the
specific implementation that you are we

832
00:45:10,010 --> 00:45:11,590
as a community decide on rate

833
00:45:11,590 --> 00:45:14,770
by Tom I was looking into it a little
bit it looks like it's probably about

834
00:45:14,770 --> 00:45:17,610
three or four times slower it depends

835
00:45:17,610 --> 00:45:21,030
but I would say in comparison to what
we're doing for talkin even if its Tier

836
00:45:21,030 --> 00:45:21,800
four times or

837
00:45:21,800 --> 00:45:25,700
that's not that big a deal like we're
already talking like adaptive caching

838
00:45:25,700 --> 00:45:28,150
arms only got like 500 rounds or
something

839
00:45:28,150 --> 00:45:32,440
Lake it's going to be faster than that
um

840
00:45:32,440 --> 00:45:36,280
yes sorry

841
00:45:36,280 --> 00:45:43,280
yes

842
00:45:48,690 --> 00:45:54,380
he

843
00:45:54,380 --> 00:45:59,450
church yes so how the so

844
00:45:59,450 --> 00:46:03,760
so the assumption is that the attacker
could maybe piggyback on are legitimate

845
00:46:03,760 --> 00:46:07,170
authentication channels were going to
have some sort of channel or API or

846
00:46:07,170 --> 00:46:07,730
something

847
00:46:07,730 --> 00:46:10,870
through which we make requests to this
gigantic array and the assumption is

848
00:46:10,870 --> 00:46:11,600
that the attacker

849
00:46:11,600 --> 00:46:14,830
owns our client system he might or or
owns some

850
00:46:14,830 --> 00:46:19,390
endpoint to that API he may be able to
piggyback on that and make request to it

851
00:46:19,390 --> 00:46:19,780
right

852
00:46:19,780 --> 00:46:23,320
in that situation if the attacker
already owns one at the endpoints

853
00:46:23,320 --> 00:46:26,720
owns one of the systems on which you
know on which were making it work for

854
00:46:26,720 --> 00:46:29,460
actually performing the authentication
which would be the only ones I would

855
00:46:29,460 --> 00:46:31,250
hope you guys were exposed to the API

856
00:46:31,250 --> 00:46:34,620
the attackers already can be able to run
some sort of attack like me kneecaps

857
00:46:34,620 --> 00:46:38,880
so you're right in that he couldn't do
that and we can stop that

858
00:46:38,880 --> 00:46:42,320
for in terms like man in the middle
attacks in Sep we can blocking off from

859
00:46:42,320 --> 00:46:43,130
doing that right

860
00:46:43,130 --> 00:46:47,290
but he already owns an endpoint he'll
run many cats who put a keylogger on it

861
00:46:47,290 --> 00:46:50,620
but as do something there i talked up
the passage from memories you perform

862
00:46:50,620 --> 00:46:52,270
them help replace the binary so

863
00:46:52,270 --> 00:46:55,350
that problem isn't as big a deal

864
00:46:55,350 --> 00:47:01,900
right the neck sense all

865
00:47:01,900 --> 00:47:06,620
correct rip

866
00:47:06,620 --> 00:47:09,770
and the hope is that that would be easy
to stop however right

867
00:47:09,770 --> 00:47:14,970
these are planet actor very very easy to
to identify and subsequent so

868
00:47:14,970 --> 00:47:18,400
couple to do there's two very different
types of online attacks right there's

869
00:47:18,400 --> 00:47:21,760
the online attack against the web
interface itself from any third party

870
00:47:21,760 --> 00:47:24,810
location right from you sitting in this
room right now in your laptop

871
00:47:24,810 --> 00:47:28,940
arm that we know how to we can prevent
that now with the current technologies

872
00:47:28,940 --> 00:47:32,380
and we should be doing so I'm not gonna
say that everyone is because every day I

873
00:47:32,380 --> 00:47:35,090
find somebody that's not right but they
should be doing at

874
00:47:35,090 --> 00:47:38,750
and we can do that very easily the other
type online attack is your they

875
00:47:38,750 --> 00:47:41,910
compromise the actual server that
conducts authentication

876
00:47:41,910 --> 00:47:45,610
the only and point that's allowed to
query the API that checks this

877
00:47:45,610 --> 00:47:49,300
actual blob data right well if he owns
that server

878
00:47:49,300 --> 00:47:52,510
that he's already got keys to the
kingdom baby owns that particular server

879
00:47:52,510 --> 00:47:53,940
there's other things he can do

880
00:47:53,940 --> 00:47:58,440
to get that information much easier than
actually querying the blob data

881
00:47:58,440 --> 00:48:02,250
so back I mean securities what it takes
we're all the time it's a layered

882
00:48:02,250 --> 00:48:06,090
approach this is one layer according
with that goes along with

883
00:48:06,090 --> 00:48:10,480
preventing offline credential cracking
but we still have to protect our system

884
00:48:10,480 --> 00:48:12,530
try we still have to protect their
networks and you

885
00:48:12,530 --> 00:48:15,870
our due diligence to protect everything
around us after a parameter so

886
00:48:15,870 --> 00:48:22,870
any other questions got just a few more
minutes land

887
00:48:26,460 --> 00:48:30,300
i'm looking into that and I'm super
super super cited about it

888
00:48:30,300 --> 00:48:36,620
I'm not sure yet but the question was
cuz I'm terrible at that sorry guys

889
00:48:36,620 --> 00:48:41,160
was could this be used for perfect their
potentially

890
00:48:41,160 --> 00:48:44,190
store other types of data like credit
card data

891
00:48:44,190 --> 00:48:47,250
right and keep that from being extracted
from the network

892
00:48:47,250 --> 00:48:50,690
maybe maybe

893
00:48:50,690 --> 00:48:54,740
but the answer everyone listed yessir

894
00:48:54,740 --> 00:49:01,270
right there I'm looking at you yet so
like I said I'm somebody could purposely

895
00:49:01,270 --> 00:49:02,320
corrupt the file

896
00:49:02,320 --> 00:49:05,760
right that is possible denial-of-service
against this system is very very

897
00:49:05,760 --> 00:49:09,200
possible he run over wireless networks
are ready to perform at the of attack in

898
00:49:09,200 --> 00:49:11,510
turn the wireless network operator 2.8

899
00:49:11,510 --> 00:49:14,770
I'm the other Asian denial-of-service
against the system because it is

900
00:49:14,770 --> 00:49:18,160
you know there are there are calls are
things going on there things we need to

901
00:49:18,160 --> 00:49:18,450
keep

902
00:49:18,450 --> 00:49:22,500
that creates a problem on it would be
very very hard for somebody to

903
00:49:22,500 --> 00:49:25,810
to to potentially do that would be the
hope and that never

904
00:49:25,810 --> 00:49:29,590
ever reveals the passwords as far as I'm
aware cell

905
00:49:29,590 --> 00:49:34,350
we're almost at a time I do have
business cards if you guys want CS

906
00:49:34,350 --> 00:49:37,510
contact me i'm open for any and all
questions you have a really really hope

907
00:49:37,510 --> 00:49:38,190
that you guys with

908
00:49:38,190 --> 00:49:41,670
like this idea get engaged with me and
let's make this a reality

909
00:49:41,670 --> 00:49:45,220
arm thank you so much for coming all up
to you

