1
00:00:00,000 --> 00:00:04,140
alright cool i think it's about noon

2
00:00:04,950 --> 00:00:12,509
this is anti forensics AF if you're here
for a different talk or something cooler

3
00:00:12,509 --> 00:00:17,070
than anti-french 6af you can go to one
of the other cooler talks or stay here

4
00:00:17,070 --> 00:00:19,680
choose-your-own-adventure that's cool

5
00:00:19,680 --> 00:00:24,930
my name isn't a TI the rapper in dual
core I've done a number of anti

6
00:00:24,930 --> 00:00:28,019
forensics talks here at Derby condom
very happy to be back

7
00:00:28,019 --> 00:00:32,040
this is just like a bunch of truly stuff
like I get on the computer and I'm like

8
00:00:32,040 --> 00:00:39,210
what happens if I do this so so first
we're going to talk about some memory

9
00:00:39,210 --> 00:00:44,219
forensic stuff and basically from the
point of being a malware author or like

10
00:00:44,219 --> 00:00:48,239
an attacker honest system and you've got
your malware running you want to

11
00:00:48,239 --> 00:00:53,370
maintain on the system without being
acquired or analyzed it so to do that

12
00:00:53,370 --> 00:00:57,030
we're gonna use some self-modifying code
and we'll look at an example with the

13
00:00:57,030 --> 00:01:00,899
windows and linux and then i will talk
about some android stuff of which

14
00:01:00,899 --> 00:01:09,840
reminds me I need my android phone I
should have kept that and then I got

15
00:01:09,840 --> 00:01:15,030
some really cool stuff we're gonna play
CTF CTF with the SD cards and it's super

16
00:01:15,030 --> 00:01:18,119
fun it's like a really cool trick I
found that I don't think many people

17
00:01:18,119 --> 00:01:22,680
have seen oh thank you shall take you to
make noise for you know please

18
00:01:24,880 --> 00:01:38,199
alright cool so I'm just lots of fun
random stuff so this is my like Who am I

19
00:01:38,200 --> 00:01:42,579
page or whatever I don't do forensics
for a living i'm on a red team i come

20
00:01:42,579 --> 00:01:46,419
from a reverse engineering and malware
background i love to just mess around

21
00:01:46,420 --> 00:01:51,250
and see what happens so it's the troll
part I've had some really interesting

22
00:01:51,250 --> 00:01:55,090
trolol experiences with some
three-letter agencies like the FBI and

23
00:01:55,090 --> 00:01:58,929
most recently the NSA if you want to
talk to me about that some other time

24
00:01:58,929 --> 00:02:03,009
I'd be happy to talk about it i'm not an
expert at all I'd like I said just mess

25
00:02:03,009 --> 00:02:06,189
around so your mileage may vary and
pretty much like all the cool things

26
00:02:06,189 --> 00:02:08,258
I've learned to do with computers are
illegal

27
00:02:08,258 --> 00:02:11,259
so do illegal things

28
00:02:13,360 --> 00:02:21,760
ok so are our focus on the memory
friends excited things is that we are an

29
00:02:21,760 --> 00:02:26,590
operator or an attacker on a victim
system we've got our own malware that

30
00:02:26,590 --> 00:02:30,730
we've built so we've invested a lot of
time in our own toolchain customizing

31
00:02:30,730 --> 00:02:34,810
making stuff that's never been seen
before we were potentially apt and we

32
00:02:34,810 --> 00:02:38,470
want to persist in Fort detection so we
don't want him out where to get picked

33
00:02:38,470 --> 00:02:39,069
up

34
00:02:39,069 --> 00:02:44,230
we don't want to get acquired we don't
want it to get analized so we're going

35
00:02:44,230 --> 00:02:50,380
to work against that and so we all know
like last 10 years or so like the

36
00:02:50,380 --> 00:02:54,130
hottest has been memory forensics write
like this base forensics is dead so

37
00:02:54,130 --> 00:02:57,519
we're gonna leverage that to our
advantage right we're going to take

38
00:02:57,519 --> 00:03:01,870
advantage of the fact that we can do
some cool things in memory on that help

39
00:03:01,870 --> 00:03:09,880
us as as an attacker so in the example
of malware on disk you have a bunch of

40
00:03:09,880 --> 00:03:14,319
sections in your executable file and to
get from disk into memory you need all

41
00:03:14,319 --> 00:03:18,670
those sections all the analysis tools
also need those sections but once we're

42
00:03:18,670 --> 00:03:21,730
in memory we may not necessarily need
them so we're gonna we're gonna take

43
00:03:21,730 --> 00:03:27,670
advantage of that so it's pretty cool
like by manipulating our executables in

44
00:03:27,670 --> 00:03:31,988
memory we can totally troll the analysis
tools and have a good time

45
00:03:34,920 --> 00:03:45,149
so I this is a program that i made
called the keys are like right next to

46
00:03:45,150 --> 00:03:49,770
each other now it's taken from vascular
quote and actually this is pretty much i

47
00:03:49,770 --> 00:03:53,520
think the last demo that i left off
within my last Derby con talk but I ran

48
00:03:53,520 --> 00:03:56,880
it under XP was a few years ago so i was
just curious to see like does this work

49
00:03:56,880 --> 00:04:01,109
in windows 10 so in this case we're
going to use recall which is a free

50
00:04:01,110 --> 00:04:04,080
framework from google for doing memory
forensics pretty dope if you haven't

51
00:04:04,080 --> 00:04:13,319
checked it out a plus plus plus would
recommend would clone get repository so

52
00:04:13,319 --> 00:04:21,418
let's see we've got on there's our
malware is just running just doing evil

53
00:04:21,418 --> 00:04:25,380
stuff as it does now

54
00:04:25,380 --> 00:04:30,780
ok

55
00:04:30,780 --> 00:04:36,090
in a separate tab let's let's run recall
or less

56
00:04:36,090 --> 00:04:43,590
sorry please wimpy men first and this is
gonna do our acquisition of ram and now

57
00:04:43,590 --> 00:04:46,859
this just takes a while so I thought I'd
play video for you guys

58
00:04:46,860 --> 00:04:52,440
while we wait I found this series
recently called you suck at cooking and

59
00:04:52,440 --> 00:04:54,810
it's kinda cool

60
00:04:54,810 --> 00:05:01,650
it's almost like the like howtobasic
videos but like put some dry humor so

61
00:05:01,650 --> 00:05:09,599
without further ado this is how to cook
corn on the cob chucking it's a fancy

62
00:05:09,600 --> 00:05:13,650
word for peeling and how you suck as a
personal choice the traditional method

63
00:05:13,650 --> 00:05:18,510
is to grab the husk and shutdown word
repeat this motion until the copies husk

64
00:05:18,510 --> 00:05:20,640
free you can also up check it

65
00:05:20,640 --> 00:05:24,000
these methods are hard work and you end
up checking yourself silly so consider

66
00:05:24,000 --> 00:05:29,820
trying the Gulf check cord or you can
try playing Chuck Benton or you can use

67
00:05:29,820 --> 00:05:33,930
a comprehensive spinning wheel dual
momentum shucks system where you can

68
00:05:33,930 --> 00:05:35,169
back a check it

69
00:05:35,169 --> 00:05:39,520
you can throw it against a rock lips
don't throw it against a rock or if

70
00:05:39,520 --> 00:05:45,520
you're quick enough you could do the
Falcon Chuck the Chevron 6 is new

71
00:05:45,520 --> 00:05:49,240
technology that's based on particle
theory and magic you just slide it

72
00:05:49,240 --> 00:05:54,729
through there and just make sure to wash
the particles off of your core and after

73
00:05:54,729 --> 00:05:57,938
because particles aren't good for you
and if you don't like corn on the cob

74
00:05:57,939 --> 00:06:01,930
you can take a hammer and get corn off
the cob or you can buy this corn had

75
00:06:01,930 --> 00:06:05,949
been developing with Monsanto it's a
cobbler's corn and the way we make it is

76
00:06:05,949 --> 00:06:09,550
through genetic engineering and it's
perfectly healthy and safe we're pretty

77
00:06:09,550 --> 00:06:13,509
sure where you can target for sausage
reason making it looks and tastes like

78
00:06:13,509 --> 00:06:18,490
real turkey sausage and the way we make
that is by having a turkey the cob of

79
00:06:18,490 --> 00:06:22,629
corn to cook for a lot of people think
you just fill the polit water boil the

80
00:06:22,629 --> 00:06:26,110
water throw in the corner add some salt
let it cook for a few minutes and then

81
00:06:26,110 --> 00:06:28,629
it's done in those people are correct

82
00:06:28,629 --> 00:06:32,710
that's fine buttered corn is also a
personal rookies will use a knife which

83
00:06:32,710 --> 00:06:36,219
is a sloppy way to go about it and it
leaves your corn tastes like butter and

84
00:06:36,219 --> 00:06:40,539
metal this is the classic way just
gently roll your copy the butter until

85
00:06:40,539 --> 00:06:45,188
it's coded more advanced way is to take
a slab of butter and caramel corn hole

86
00:06:45,189 --> 00:06:49,350
in the side slide your comment to the
cornhole and twist it while moving in

87
00:06:49,350 --> 00:06:53,220
no to your car is completely coated with
butter if your corn hole isn't big

88
00:06:53,220 --> 00:06:53,730
enough

89
00:06:53,730 --> 00:06:57,660
gently twist it with perseverance until
it slides through easily you can also

90
00:06:57,660 --> 00:07:02,010
stick butter on some tongs take those to
a broom handle and butter your corn from

91
00:07:02,010 --> 00:07:02,909
a distance

92
00:07:02,910 --> 00:07:07,050
this is a great technique if you suffer
from a strong fear of corn was born can

93
00:07:07,050 --> 00:07:10,950
be slippery so be sure to attach a
handle like this 2.71 a Phillips

94
00:07:10,950 --> 00:07:15,599
screwdriver i just made up the 2.7 18
first but yeah that's corn on the cob

95
00:07:15,600 --> 00:07:20,400
and it's more delicious and corn on the
log or corn in the bog or corn on the

96
00:07:20,400 --> 00:07:25,710
saw for corn on the dog or corn in the
fog or corn on the job or corn in the

97
00:07:25,710 --> 00:07:30,239
clog or corn on Bob for corn on the slob
which is the same thing you should

98
00:07:30,240 --> 00:07:34,380
together Bob seriously and it's
obviously best eaten as corn on the cob

99
00:07:34,380 --> 00:07:39,750
and if you're sick of corn consider all
right so that's you suck a cookie

100
00:07:41,790 --> 00:07:56,670
oh good in our acquisitions . in rh
alright so let's run recall and let's

101
00:07:56,670 --> 00:08:03,210
will pass it is our acquisition file .
AFF for it's like its own format but

102
00:08:03,210 --> 00:08:05,250
recall understands it so it's good

103
00:08:05,250 --> 00:08:08,910
basically what you get is this ipython
notebook workspace right it's pretty

104
00:08:08,910 --> 00:08:13,620
dope like I don't have to anybody's
ipython but it totally changed my life

105
00:08:13,620 --> 00:08:20,820
before it was just me python so what
we're going to do is um use a product .

106
00:08:20,820 --> 00:08:26,430
module inside of recall and like if
you've ever used volatility for memory

107
00:08:26,430 --> 00:08:30,150
forensics to extract a process you need
to find them the pit first right

108
00:08:30,150 --> 00:08:33,718
in this case we can just say oh yeah the
process looks something like this

109
00:08:34,229 --> 00:08:39,690
the keys and then we can just specify
the dump directory and all of this is

110
00:08:39,690 --> 00:08:42,900
like tab completed just like ipython
stuff is which is super nice

111
00:08:48,930 --> 00:08:53,550
alright so looks like our directory
dumped or hope or no it did not it

112
00:08:53,550 --> 00:08:58,410
didn't like that maybe I should try
using tab completion

113
00:08:59,410 --> 00:09:09,910
I'll come on now that's totally right
did

114
00:09:13,660 --> 00:09:16,750
oh I forgot a comma

115
00:09:17,889 --> 00:09:30,399
Shh your shit together and katie alright
cool so while it's doing that let's

116
00:09:30,399 --> 00:09:35,230
let's look at what the original program
looks like alright so hey I'm i found

117
00:09:35,230 --> 00:09:39,790
something weird on this on the system
like what you know what's echo 22 and

118
00:09:39,790 --> 00:09:40,959
see what's up

119
00:09:40,959 --> 00:09:47,199
so you know what

120
00:09:54,879 --> 00:10:00,129
so this is you know normal normal idea
pro load loaded program in looks legit

121
00:10:00,129 --> 00:10:04,449
right you get a cool call function graph
function names are all all good

122
00:10:04,449 --> 00:10:05,439
everything good

123
00:10:05,439 --> 00:10:14,469
alright cool so now let's take a look at
our dumped executable so here's our

124
00:10:14,470 --> 00:10:20,889
dumped executable doesn't doesn't really
like recognize it this let's just go

125
00:10:20,889 --> 00:10:24,970
with the default see what happens at
that doesn't look right

126
00:10:25,569 --> 00:10:31,149
notice we've got like a lot fewer sub
functions on the side these instructions

127
00:10:31,149 --> 00:10:38,079
don't look right there like 16 bit
strange right if you're in our analyst

128
00:10:38,079 --> 00:10:41,019
and this is what you get to to work with
is your starting point you're gonna be

129
00:10:41,019 --> 00:10:42,220
like WTF mate

130
00:10:42,220 --> 00:10:46,839
like what is this and I i don't know
about you guys I don't know any pride

131
00:10:46,839 --> 00:10:49,839
personally don't know any forensics
examiner's that no idea well enough to

132
00:10:49,839 --> 00:10:56,110
go through and start marking things as
code and put the time in but if we go

133
00:10:56,110 --> 00:11:04,870
back to our original tab on our is still
running right so we're still doing evil

134
00:11:04,870 --> 00:11:10,779
stuff so we thought analysis and that's
you know that's pretty cool so yeah

135
00:11:10,779 --> 00:11:12,610
attackers win

136
00:11:12,610 --> 00:11:25,570
and then let's let's take a look at the
source because pretty easy so this is

137
00:11:25,570 --> 00:11:32,200
very like basic proof-of-concept we get
a handle to the process make sure that

138
00:11:32,200 --> 00:11:37,720
we're dealing with a Windows executable
here so here's our checks for 45 a the

139
00:11:37,720 --> 00:11:46,870
ms-dos tub and then 50 normal the PE
header part process the the sections we

140
00:11:46,870 --> 00:11:51,100
use virtual protect to add write
permissions on to the the header of the

141
00:11:51,100 --> 00:11:54,880
executable file in memory and we're
gonna call Artie l0 memory and this is

142
00:11:54,880 --> 00:11:58,209
like the thing that does the special
sauce and what it does is it just writes

143
00:11:58,209 --> 00:12:03,489
zeros into the header in memory so that
makes it so that when you grab the

144
00:12:03,490 --> 00:12:08,200
executable out you just get like no
information about what your rights are

145
00:12:08,200 --> 00:12:13,660
we restored the page permissions with
virtual protect and then here we just

146
00:12:13,660 --> 00:12:21,339
loop for proof-of-concept demo purposes
any questions at all about the keys are

147
00:12:21,339 --> 00:12:22,630
like right next to each other

148
00:12:22,630 --> 00:12:25,630
yes in the back

149
00:12:31,540 --> 00:12:38,349
yes so about the question is about
volatility plugins and there is a proc .

150
00:12:38,350 --> 00:12:45,339
plugin in volatility when I did it in XP
it also failed and so I'd recall with

151
00:12:45,339 --> 00:12:48,459
the new hotness and so I just built the
demo for recall in this particular case

152
00:12:48,459 --> 00:12:53,888
I haven't tested it for the if like
against New volatility in windows so it

153
00:12:53,889 --> 00:12:57,100
it might have better success i just
tested against recalls like a google

154
00:12:57,100 --> 00:13:01,060
smart bros like should probably work and
then it didn't sound like a good job me

155
00:13:12,279 --> 00:13:32,050
mhm yeah when I did in in windows in my
last demo like an XP it i won against

156
00:13:32,050 --> 00:13:36,099
volatility and will actually do a demo
against volatility and linux and spoiler

157
00:13:36,100 --> 00:13:47,290
alert when again so yeah so again this
is a we don't need to pee header after

158
00:13:47,290 --> 00:13:50,349
we've loaded we can do whatever we want

159
00:13:50,350 --> 00:13:54,699
if you really want to have some fun try
writing weird values into the PE header

160
00:13:54,699 --> 00:13:59,349
and then loading your dumped executable
into analysis tools you might get some

161
00:13:59,350 --> 00:14:03,819
crashes with some interesting values in
some registers just if you're into that

162
00:14:03,819 --> 00:14:09,279
kind of stuff so pretty neat we win this
is worked all the way from Windows XP up

163
00:14:09,279 --> 00:14:16,569
into windows 10 for completeness this is
these are the commands that I that Iran

164
00:14:16,569 --> 00:14:19,149
if anybody wants to like take a picture
of the screen but it's pretty

165
00:14:19,149 --> 00:14:23,079
straightforward it's just when p.m. to
acquire the ram and then recall against

166
00:14:23,079 --> 00:14:26,800
the acquisition and then run the
practice module inside of recall

167
00:14:29,370 --> 00:14:40,680
alright so let's write in linux and will
go against volatility and we'll use line

168
00:14:40,680 --> 00:14:43,920
for the acquisition which is an
open-source Colonel Colonel driver

169
00:14:43,920 --> 00:14:51,990
password is my log luggage combination

170
00:14:51,990 --> 00:14:57,839
alright so here's our inexperience so we
found RL fetter this is just debugging

171
00:14:57,839 --> 00:15:02,339
output you could do whatever you want
here so now we're doing evil stuff as we

172
00:15:02,339 --> 00:15:05,339
do

173
00:15:07,230 --> 00:15:17,760
alright so cool

174
00:15:18,300 --> 00:15:21,329
let's go yeah let's get line first

175
00:15:30,040 --> 00:15:34,060
cool we have a build if you want to
build line for your kernel version you

176
00:15:34,060 --> 00:15:37,930
just run make it should help
straightaway so I we need to load my

177
00:15:37,930 --> 00:15:53,290
lime into memory so we can do an
acquisition do and there's a couple

178
00:15:53,290 --> 00:15:57,250
argument specifies so first you tell it
where your path is distorting the

179
00:15:57,250 --> 00:16:03,490
acquisition so let's just tell it like
LOL . line and under temp and then you

180
00:16:03,490 --> 00:16:07,240
can specify format i think the options
are like climbin raw volatility

181
00:16:07,240 --> 00:16:10,240
understands the line format so we'll
just do that

182
00:16:13,149 --> 00:16:16,149
5500 from a password just kidding

183
00:16:17,050 --> 00:16:25,389
ok cool so we should have our our Ram
acquisition cool and again now we're

184
00:16:25,389 --> 00:16:28,389
still running so malware should be in
there somewhere we can grab it

185
00:16:28,930 --> 00:16:43,569
so let's see i'm not going to go in
depth will show in the slides another

186
00:16:43,569 --> 00:16:47,079
there's a caveat with volatility on
linux it doesn't come with a profile for

187
00:16:47,079 --> 00:16:51,130
your build of linux so you have to build
your own profile for any system that

188
00:16:51,130 --> 00:16:54,579
you're going to be doing memory analysis
on a pretty straightforward process and

189
00:16:54,579 --> 00:16:58,300
we'll cover in the slides rather than
walk you through it here in the demo we

190
00:16:58,300 --> 00:17:05,559
just get to the cool stuff so you can
test it if you got it by doing something

191
00:17:05,559 --> 00:17:06,189
like this

192
00:17:06,189 --> 00:17:11,589
use the cash inflow inflow flags and
then just grab for linux and then

193
00:17:11,589 --> 00:17:14,980
that'll tell you gotta show your profile
once you've installed it

194
00:17:14,980 --> 00:17:19,599
alright so let's let's get our malware
program because we know that attackers

195
00:17:19,599 --> 00:17:22,599
are on the system

196
00:17:25,859 --> 00:17:39,750
right we have to specify our profile to
volatility so it knows how to do the

197
00:17:39,750 --> 00:17:45,510
thing and first let's like i said
earlier we have to get the process

198
00:17:45,510 --> 00:17:50,010
listening or the the pit for your target
process that you want to dump so here's

199
00:17:50,010 --> 00:18:02,160
our paid of 22 21 and we use the product
module and specify pit 21

200
00:18:04,260 --> 00:18:09,030
BAM ignore the storm stuff it's just I
don't have those modules installed

201
00:18:09,660 --> 00:18:13,770
ok cool looks like we gotta dump all
right blue team is winning

202
00:18:13,770 --> 00:18:18,600
here we go let's hex dump it

203
00:18:19,140 --> 00:18:22,620
oh we didn't get anything

204
00:18:23,669 --> 00:18:29,429
well how big is that the process that we
don't all its 0 bytes

205
00:18:30,090 --> 00:18:38,909
wha empty a and are now we're still
doing evil stuff

206
00:18:39,450 --> 00:18:56,910
good job red team loop so basically the
same same setup going on here we

207
00:18:56,910 --> 00:19:01,770
basically find our header in memory the
way i do this is really bad and I should

208
00:19:01,770 --> 00:19:07,470
feel bad but it's easy and it works so
i'm just using proc self maps and you

209
00:19:07,470 --> 00:19:10,980
might be on a system that you don't have
access to proc potentially so don't rely

210
00:19:10,980 --> 00:19:19,020
on this but i'm lazy so using a scan up
to find the entry for my header and

211
00:19:19,020 --> 00:19:25,500
here we use and protected whereas in
windows we used virtual protect we set

212
00:19:25,500 --> 00:19:29,850
our page right permissions so we can
modify the header here we use memset

213
00:19:29,850 --> 00:19:34,439
instead of RTL zero memory and then
reset the page permissions using and

214
00:19:34,440 --> 00:19:39,510
protect again and then here's this are
debugging stuff whereas in real life

215
00:19:39,510 --> 00:19:56,550
would be catching shells and exhaling
data and getting bitcoins cool alright

216
00:19:56,550 --> 00:19:59,850
so it was the next one

217
00:19:59,850 --> 00:20:02,850
oh no sorry

218
00:20:07,590 --> 00:20:11,280
ok now we're good

219
00:20:11,280 --> 00:20:17,280
forgot about the goats for a minute okay
so I'm say pretty much same thing that

220
00:20:17,280 --> 00:20:21,210
we walked through here we don't need the
elf header just like we didn't need to

221
00:20:21,210 --> 00:20:25,650
pee header so we can zero it out or if
you want to you could tamper it and add

222
00:20:25,650 --> 00:20:28,170
in weird values and get really
interesting

223
00:20:28,170 --> 00:20:34,320
register value sometimes and then this
is like the full process i can send you

224
00:20:34,320 --> 00:20:37,740
guys slides if you want tho will come as
a PDF no malware I promise

225
00:20:38,910 --> 00:20:43,290
get-get clone a line from github build
it

226
00:20:43,290 --> 00:20:47,310
insert and smart it so you get it
running in the colonel get volatility

227
00:20:47,310 --> 00:20:53,490
install it and then this is the the
profile build stuff so you'll see d into

228
00:20:53,490 --> 00:20:57,540
this like to linux subdirectory and just
run make and that'll produce this module

229
00:20:57,540 --> 00:21:02,280
. door file if your own head on that you
should see . debug info the top let you

230
00:21:02,280 --> 00:21:04,980
know that you've got to build correctly
lat

231
00:21:04,980 --> 00:21:11,490
then once you've got your module . or
file you'll need to package it with your

232
00:21:11,490 --> 00:21:19,200
current system . map and place that zip
in the in the directory under plugins

233
00:21:19,200 --> 00:21:23,820
overlays for for volatility and then at
that point you can check that is

234
00:21:23,820 --> 00:21:30,000
installed correctly with that Python . .
I info great linux that showed earlier

235
00:21:30,000 --> 00:21:32,400
and then we just did

236
00:21:32,400 --> 00:21:37,680
this list and practicum and it didn't
save us in this case but that's that's

237
00:21:37,680 --> 00:21:49,800
the completeness alright uh so Android
South any questions about either the

238
00:21:49,800 --> 00:21:52,980
windows or the experience for the user
like right next to each other

239
00:21:52,980 --> 00:21:59,580
cool alright and stuff so my girlfriend
were interested about android stuff of a

240
00:21:59,580 --> 00:22:02,580
little while back and we didn't know
anything about forensics for android so

241
00:22:02,580 --> 00:22:05,520
we're like let's figure it out as well
these are some things that we figured

242
00:22:05,520 --> 00:22:09,720
out so all of this is based on the
premise of using encryption encrypting

243
00:22:09,720 --> 00:22:13,740
your device also to quote the group use
tor you signal

244
00:22:22,480 --> 00:22:36,340
I don't know this one shows up as well I
want to eat a pint of jerry garcia ice

245
00:22:36,340 --> 00:22:42,580
cream should i use a bowl or not used to
ru signal and then selling social

246
00:22:42,580 --> 00:22:45,580
security numbers for bitcoins contact me
on my xmpp

247
00:22:52,169 --> 00:23:02,759
I i guess i don't know if i should admit
or not but pretty much the reason that i

248
00:23:02,759 --> 00:23:05,609
made this talk was because i had the
idea to use screaming goats for the

249
00:23:05,609 --> 00:23:08,609
slide transitions and I was like what
can I put around that

250
00:23:13,139 --> 00:23:16,738
alright so let's talk about forensics
real quick i'm gonna try to push through

251
00:23:16,739 --> 00:23:19,619
this part pretty quickly and I can talk
more in depth about it afterwards but

252
00:23:19,619 --> 00:23:22,470
really I want to play the ck up with
y'all for the SD card stuff is really

253
00:23:22,470 --> 00:23:23,220
fun

254
00:23:23,220 --> 00:23:31,049
so first android forensics ok so I
android forensics not the easiest was

255
00:23:31,049 --> 00:23:33,570
like a bunch of stuff you have to have
in place also it's like a weird setup

256
00:23:33,570 --> 00:23:38,309
you have to cross-compile netcat forearm
and then load it onto the device that

257
00:23:38,309 --> 00:23:42,119
you're doing an acquisition from so like
if anybody's done like hardware

258
00:23:42,119 --> 00:23:45,238
forensics like hard drive forensics
you're usually use a write blocker and

259
00:23:45,239 --> 00:23:48,269
you don't write anything onto the device
you're acquiring from in this case

260
00:23:48,269 --> 00:23:52,230
you're pushing a program that you've
built onto a target device that you're

261
00:23:52,230 --> 00:23:55,259
about to acquire from really weird but
it works

262
00:23:55,259 --> 00:23:59,369
you need the device to be powered on
decrypted unlocked rooted and have USB

263
00:23:59,369 --> 00:24:03,449
debugging enabled so quite a lofty kill
chain right stop any one of those things

264
00:24:03,450 --> 00:24:08,700
in forensics pills and then if you want
to do memory forensics you need loadable

265
00:24:08,700 --> 00:24:12,720
kernel modules loadable kernel modules
enabled which on all of the android

266
00:24:12,720 --> 00:24:16,409
devices that I've seen do not have that
enabled so it looked

267
00:24:18,419 --> 00:24:33,629
I guess I could live on a farm as long
as you have internet in goats

268
00:24:34,169 --> 00:24:39,239
ok so basically what you do in an
android forensic acquisition off of the

269
00:24:39,239 --> 00:24:44,009
nan storage is you push your compiled
netcat binary onto your target device

270
00:24:44,009 --> 00:24:50,580
and you set up a port forward and then
you invoke she'll get root and situate

271
00:24:50,580 --> 00:24:53,730
your neck at binary give it executable
permissions you could do you probably

272
00:24:53,730 --> 00:25:00,869
like 75 if you wanted but yellow then UD
d this is all familiar to us right

273
00:25:00,869 --> 00:25:07,859
DeeDee off of the man storage blocksize
64k no big deal and then type that to

274
00:25:07,859 --> 00:25:14,100
netcat and send it across the u.s. be
using netcat on the receiving end on

275
00:25:14,100 --> 00:25:19,678
your on your laptop you'll have a netcat
client that will connect into the

276
00:25:19,679 --> 00:25:23,309
listener on the phone and then you'll
just grab all that data and store it off

277
00:25:23,309 --> 00:25:27,119
into whatever you want to call your file
in this case i call it image . and then

278
00:25:27,119 --> 00:25:30,119
standard forensics stuff checksum it
make a copy checks on the copy

279
00:25:37,610 --> 00:25:45,409
another weird thing i found with the
android stuff is that you'll find the

280
00:25:45,410 --> 00:25:49,309
man storage exposed by a different
interfaces it just varies per device it

281
00:25:49,309 --> 00:25:53,149
seems so I got these are some that i've
seen it under just look at the product

282
00:25:53,150 --> 00:25:56,900
partitions on the system and that will
tell you like where the storages so it

283
00:25:56,900 --> 00:26:02,360
might be under dev block or have MTV
your def emmc and then I was just trying

284
00:26:02,360 --> 00:26:03,350
to be clever with that

285
00:26:03,350 --> 00:26:21,500
c++ line at the end sad so in the in the
situations where you can't like get

286
00:26:21,500 --> 00:26:25,700
routed you like a full DD acquisition of
the nand you can get some other logical

287
00:26:25,700 --> 00:26:30,470
acquisitions right atb pole is basically
like trying to do like a cpu / onto like

288
00:26:30,470 --> 00:26:34,700
your local storage so it will grab
whatever it can for you and in this case

289
00:26:34,700 --> 00:26:37,220
we just have like a local directory
called dump that we're going to jump

290
00:26:37,220 --> 00:26:39,290
onto on our target on our laptop

291
00:26:39,290 --> 00:26:43,580
there's also just like dumps this
program there's 80 backup which you have

292
00:26:43,580 --> 00:26:48,168
to add a pin for you have to have the
pin for the phone or the device in order

293
00:26:48,169 --> 00:26:53,150
to use adb backup which then puts it in
the past history so if you're targeting

294
00:26:53,150 --> 00:26:56,270
the forensic investigator can find the
pin at the phone

295
00:27:00,830 --> 00:27:07,250
there's also dumped state bug report
these things get you like logs of like

296
00:27:07,250 --> 00:27:09,649
various radios that are on the device

297
00:27:09,649 --> 00:27:12,918
there's an open source tool called a
logical osc there's a law enforcement

298
00:27:12,919 --> 00:27:17,419
edition of it as well I don't know the
differences between the two but uh there

299
00:27:17,419 --> 00:27:21,590
the open-source edition is out there if
you want to mess around with it so

300
00:27:21,590 --> 00:27:28,850
tldr it sucks like android forensic
sucks would not do again forever and

301
00:27:28,850 --> 00:27:31,699
it's weird that it violates the
traditional forensic methodologies to me

302
00:27:31,700 --> 00:27:35,659
right like your writing onto the device
you're about to acquire from mine equals

303
00:27:35,659 --> 00:27:39,230
blown and then that kill chain we had
things being like powered on decrypted

304
00:27:39,230 --> 00:27:46,700
all that stuff it's super easy to
disrupt not even a goat

305
00:27:47,210 --> 00:27:53,299
alright so here's our setup is we have
our android device and we're using full

306
00:27:53,299 --> 00:27:58,340
disk encryption and maybe we're out like
in the rated by law enforcement scenario

307
00:27:58,340 --> 00:28:01,639
maybe we're out freedom fighting is the
great cause that route operating

308
00:28:01,639 --> 00:28:03,439
somewhere you always of course

309
00:28:03,440 --> 00:28:07,700
leave your phone at home when you do
that as as my girlfriend is pointed out

310
00:28:07,700 --> 00:28:11,630
to me multiple times and so let's say
you're out operating and you come home

311
00:28:11,630 --> 00:28:14,539
and there's a bunch of police in my
house like what's going on

312
00:28:14,539 --> 00:28:19,879
you don't want the police to acquire
your device at home and then get

313
00:28:19,880 --> 00:28:25,250
evidence off a bit so or like is a
separate situation say maybe you're

314
00:28:25,250 --> 00:28:29,659
deploying a hardware implant on an
operation and if blue team or law

315
00:28:29,659 --> 00:28:32,990
enforcement or somebody else it's not
ever supposed to find the device finds

316
00:28:32,990 --> 00:28:38,240
the hardware implant you don't want them
to get any evidence off of it so and

317
00:28:38,240 --> 00:28:41,000
then this last one I was like shrug is
like you know there are other scenarios

318
00:28:41,000 --> 00:28:44,480
but I can't think of any and then I
looked at it and it looks like cause

319
00:28:44,480 --> 00:28:48,409
throwing a phone to me so you know you
want to encrypt your device if it causes

320
00:28:48,409 --> 00:28:50,990
ever touching it don't ever let him
touch your phone

321
00:28:50,990 --> 00:28:56,210
ok so i'm thinking like we're using
solutions are using encryption right the

322
00:28:56,210 --> 00:28:59,840
easiest solution is just power down the
device it but if you think you're in

323
00:28:59,840 --> 00:29:00,590
danger

324
00:29:00,590 --> 00:29:04,730
I mean it's not destructive you're using
your data is still intact in the event

325
00:29:04,730 --> 00:29:09,030
that you're not actually being rated by
law enforcement or something and then

326
00:29:09,030 --> 00:29:12,990
you've got everything your evidence is
all encrypted and then of course lawyer

327
00:29:12,990 --> 00:29:15,990
up you know don't don't ever talk to the
police

328
00:29:18,480 --> 00:29:22,440
so what can we do to leverage their to
see like whether we're being tampered

329
00:29:22,440 --> 00:29:23,550
with

330
00:29:23,550 --> 00:29:26,790
we have all these sensors at at our
disposal right

331
00:29:26,790 --> 00:29:30,570
bluetooth pairing my device with another
device in my house if it becomes

332
00:29:30,570 --> 00:29:32,460
unpaired turn it off

333
00:29:32,460 --> 00:29:36,780
it's encrypted it's on the cell network
if law enforcement comes in and acquires

334
00:29:36,780 --> 00:29:39,330
a device they're probably going to put
it in a Faraday bag and that's going to

335
00:29:39,330 --> 00:29:43,710
stop any transmission and receiving
right so if it goes off the cell network

336
00:29:43,710 --> 00:29:48,000
power it off its encrypted gps goes
outside the geofence of my property

337
00:29:48,000 --> 00:29:52,410
power it off all this stuff so we can
use all of these two like leverage or

338
00:29:52,410 --> 00:29:55,650
figure out whether we're being tampered
with and consequently turn the device

339
00:29:55,650 --> 00:30:08,010
off to protect ourselves so i wrote this
app called duck the police and I'd like

340
00:30:08,010 --> 00:30:18,390
to do what I hope will be the worst
hacker con demo ever for you guys so i

341
00:30:18,390 --> 00:30:21,390
have this android device here

342
00:30:24,120 --> 00:30:30,360
running duck the police and we're going
to set it for movement and we're gonna

343
00:30:30,360 --> 00:30:36,510
say . the police and I'm just gonna sit
down and went to pick it up and the

344
00:30:36,510 --> 00:30:43,020
phone is off its encrypted so that the
police and i will accept Tony

345
00:30:43,020 --> 00:30:46,020
nominations for worse hacker conference
demo ever

346
00:30:54,310 --> 00:30:57,669
I'll up with the pony award right next
to my other two it will be in good

347
00:30:57,670 --> 00:31:00,670
company

348
00:31:01,720 --> 00:31:05,950
I was surprised at the lack of duck the
police means that were on the internet

349
00:31:05,950 --> 00:31:16,780
that when I especially like because i
used to work with a guy who's really

350
00:31:16,780 --> 00:31:20,050
good lock-picking and he was like oh
yeah i can pick the boots on cars like

351
00:31:20,050 --> 00:31:23,020
no problem and he's like the police
charged like a hundred twenty-five

352
00:31:23,020 --> 00:31:26,020
dollars to take those things off a
charge 75

353
00:31:31,750 --> 00:31:35,950
the bubble tape . just killed me

354
00:31:44,570 --> 00:31:51,168
hello Ellen

355
00:31:51,169 --> 00:31:58,070
alright so so yeah we were using
encryption and you know if we leverage

356
00:31:58,070 --> 00:32:02,629
like motion sensors in the air like
accelerometers in the device it it moves

357
00:32:02,630 --> 00:32:05,809
if it's like require recovered by
somebody we don't want to be recovered

358
00:32:05,809 --> 00:32:08,990
by powers down we went good to go

359
00:32:08,990 --> 00:32:17,210
alright SD cards right so if you've seen
this talk previously you're not allowed

360
00:32:17,210 --> 00:32:19,370
to play CTF sorry

361
00:32:19,370 --> 00:32:22,370
let's do SD cards

362
00:32:32,920 --> 00:32:44,050
honestly I'm just gonna go back and
forth i love that song

363
00:32:47,830 --> 00:32:59,139
okay so have an SD card here and I'm
gonna plug it in and we'll take a look

364
00:32:59,140 --> 00:33:21,850
at it goes alright the rules of the CTF
something something something can't read

365
00:33:21,850 --> 00:33:26,560
from this angle because privacy filter
on my screen I enter your name below so

366
00:33:26,560 --> 00:33:30,159
basically the TLDR is we need to add
your name to this txt file we need to

367
00:33:30,160 --> 00:33:33,610
save it we need to unmount the
filesystem remove the SD card

368
00:33:34,510 --> 00:33:38,950
add the SD card back in and make sure
that our name is still in the file seems

369
00:33:38,950 --> 00:33:41,950
pretty easy

370
00:33:53,800 --> 00:34:02,800
ok there's my name right everything cool
and dating yeah alright let's mount it

371
00:34:02,800 --> 00:34:18,489
SD cards out SE car going back in also
there

372
00:34:19,090 --> 00:34:35,350
oh no my name is not there but the file
is ok what we try to what the filesystem

373
00:34:35,350 --> 00:34:50,918
this place look extended to I'm sorry
immutable bit ok so like at our name and

374
00:34:50,918 --> 00:34:52,960
then do not change either plus I on it

375
00:34:52,960 --> 00:34:55,960
okay I like that

376
00:35:10,099 --> 00:35:13,960
ok

377
00:35:13,960 --> 00:35:27,220
ok and eighties there are good immutable
bit is set also right there it is

378
00:35:27,220 --> 00:35:40,839
I mount it SD cards out SD cards back in
the count that text

379
00:35:45,700 --> 00:35:59,290
oh no my name is not there alright what
else can we try i like like with a

380
00:35:59,290 --> 00:36:04,060
hardware switch or um ok so that the
premises that the hardware switch is off

381
00:36:04,060 --> 00:36:07,420
i guess i should've specified that is
it's not hardware locked

382
00:36:07,420 --> 00:36:17,800
ok sorry I and I heard something over
here yes you r which you mount ok it's a

383
00:36:17,800 --> 00:36:25,900
venue mounted I'm not charging you mount
so its standard amount on linux yes I'm

384
00:36:25,900 --> 00:36:28,750
sorry reading the file

385
00:36:28,750 --> 00:36:42,339
yeah let's do that adding an 80 cool guy

386
00:36:47,079 --> 00:36:50,200
you can just move it out of that

387
00:37:01,239 --> 00:37:05,319
let's call it pancakes

388
00:37:12,789 --> 00:37:16,059
k pancakes is there and eighty still
there

389
00:37:16,809 --> 00:37:30,459
lets you mount it SD card coming out SD
card going back in shit is challenged

390
00:37:30,459 --> 00:37:33,459
our texts

391
00:37:36,249 --> 00:37:40,868
that's right and my name is not there
still

392
00:37:41,380 --> 00:37:44,380
what else in the back

393
00:37:44,950 --> 00:37:54,308
oh yeah we did which mounts a mount and
it's a standard mount that's included in

394
00:37:54,309 --> 00:37:57,309
the distro

395
00:38:02,400 --> 00:38:07,410
yeah now I didn't didn't tamper that in
the back

396
00:38:09,270 --> 00:38:22,200
I yes and now we can we can double check
them out flags so here's rrw so we write

397
00:38:22,200 --> 00:38:32,819
yes we can

398
00:38:32,819 --> 00:38:36,420
I'll go ahead and spoiler alert for you
because it will take longer than is left

399
00:38:36,420 --> 00:38:41,250
in the talk if that doesn't work either
but good good good is another thing that

400
00:38:41,250 --> 00:38:43,109
I tried

401
00:38:43,109 --> 00:38:57,240
yes no I'm not using any you have
gnarliness or anything like that

402
00:39:01,109 --> 00:39:13,740
sure we because i'm cool like that

403
00:39:14,369 --> 00:39:22,470
lost-and-found is a standard directory
on extended Senate file systems

404
00:39:23,069 --> 00:39:26,069
yes

405
00:39:28,319 --> 00:39:31,319
yeah let me just check partitions

406
00:39:34,740 --> 00:39:37,740
so this is our device MMC block 0

407
00:39:38,670 --> 00:39:44,850
nope just the 1v1 yes in the back

408
00:39:45,390 --> 00:39:53,670
i'm not using an overlay on the file
system but good that's a good one

409
00:39:53,670 --> 00:40:09,630
yes in the back ah yes there is
something on the SD card itself

410
00:40:10,440 --> 00:40:25,830
way to go we worked our way down the
stack so there's a program called SD

411
00:40:25,830 --> 00:40:30,630
tool which will allow us to interface
with the firmware on the SD card and we

412
00:40:30,630 --> 00:40:35,430
can change the right state as to whether
or not we can write to the card so

413
00:40:35,430 --> 00:40:39,299
what's awesome is the way that this gets
displayed to the operating system above

414
00:40:39,300 --> 00:40:44,040
is that everything's fine and no errors
no permission issues you know everything

415
00:40:44,040 --> 00:40:49,740
looks good we mountain mount no worries
at all and on but under the hood

416
00:40:49,740 --> 00:40:56,910
we're preventing the rights and I this
this tools open-source I don't know if I

417
00:40:56,910 --> 00:41:00,180
mentioned the slides or not we'll see
but basically all I did was change to

418
00:41:00,180 --> 00:41:12,450
make file to use playing instead of GCC
but yes but it's but the locks which is

419
00:41:12,450 --> 00:41:14,399
set up to like allow rights

420
00:41:14,400 --> 00:41:17,400
yeah

421
00:41:18,599 --> 00:41:30,029
I don't know whoever figured this out
just figured out the interface to make

422
00:41:30,029 --> 00:41:31,559
it make it do the thing

423
00:41:31,559 --> 00:41:35,609
so there's a there's a few commands
gotta like i said i'm not an expert I

424
00:41:35,609 --> 00:41:36,839
just mess around on computer

425
00:41:36,839 --> 00:41:43,049
mr. so I so here with the status we can
see that the right state is on

426
00:41:43,049 --> 00:41:53,190
temporarily so we can update the right
protection see so now now the right

427
00:41:53,190 --> 00:41:56,190
protections off

428
00:42:05,809 --> 00:42:13,219
so we'll mount it cards out cards going
back in

429
00:42:23,450 --> 00:42:34,700
is that boy oh shit what up so I shot
the craig smith from open garages he's

430
00:42:34,700 --> 00:42:38,810
kind of the one that got me on this
track and figuring this stuff out so is

431
00:42:38,810 --> 00:42:42,590
really cool trick and I think it's
pretty thing I hadn't seen anywhere else

432
00:42:46,040 --> 00:43:08,720
sagat alright that was just in case I
wasn't paying attention

433
00:43:11,060 --> 00:43:14,529
whoa

434
00:43:14,530 --> 00:43:19,570
oh that was in case you weren't paying
attention

435
00:43:21,040 --> 00:43:25,390
alright so using this open-source tool
SD tool were able to lock and unlock the

436
00:43:25,390 --> 00:43:29,890
device and also check its status as well
again the physical lock is disengaged so

437
00:43:29,890 --> 00:43:35,109
to anybody recovering the SD card you
know they're gonna be like yeah you know

438
00:43:35,110 --> 00:43:37,240
it looks fine

439
00:43:37,240 --> 00:43:40,089
all the stuff happens in memory so we're
going to go nothing is written to the

440
00:43:40,090 --> 00:43:47,950
device AKA no logs no crime which is
awesome caveat so USB hub does not

441
00:43:47,950 --> 00:43:51,939
present itself in the same way all the
time is an MMC device so you might need

442
00:43:51,940 --> 00:43:58,090
an actual like SD card reader that's not
connected by USB bridge i think some of

443
00:43:58,090 --> 00:43:58,960
them might work

444
00:43:58,960 --> 00:44:02,410
also I'd like run into just like hit or
miss with certain cards like this micro

445
00:44:02,410 --> 00:44:06,520
SD card inside of the SD adapter works
fine other micro SD cards i tested did

446
00:44:06,520 --> 00:44:13,030
not work so just ask your friends for
some totally safe microsd cards and then

447
00:44:13,030 --> 00:44:16,030
give them back

448
00:44:20,400 --> 00:44:27,660
so my ideas for like the example
scenarios are like you've got like a

449
00:44:27,660 --> 00:44:33,060
hardware implant right you're using on
an active operation actually gone

450
00:44:33,060 --> 00:44:36,990
against the Red Team engagement where
they use an android device implanted in

451
00:44:36,990 --> 00:44:40,919
the facility and we recovered the
android device and rip them our off of

452
00:44:40,920 --> 00:44:44,190
it and I already the malware and then we
were able to pick it off of that and go

453
00:44:44,190 --> 00:44:48,660
find more infected nodes on the network
but how they used a mechanism like the

454
00:44:48,660 --> 00:44:54,600
android stuff or whatever they could
have potentially killed that or like use

455
00:44:54,600 --> 00:44:59,069
that with the sdcard excuse me I would
have been able to get any anything good

456
00:44:59,070 --> 00:45:02,910
off the SD card also if you guys like
raspberry PI's right like those runoff

457
00:45:02,910 --> 00:45:08,339
of SD cards so totally do this year SD
card put in your Raspberry Pi I build a

458
00:45:08,340 --> 00:45:12,330
portal of pie or whatever you want and
if it ever gets acquired your good

459
00:45:12,330 --> 00:45:15,450
nothing that we got written to the
device and then I if you have if you

460
00:45:15,450 --> 00:45:18,509
want to try like running your attack
p.m. for your attack platform off of an

461
00:45:18,510 --> 00:45:19,320
SD card

462
00:45:19,320 --> 00:45:23,130
get off of it like nothing gets written
right run a laptop no hard drive no

463
00:45:23,130 --> 00:45:27,210
other persistent storage just an SD card
that also does not do persistent storage

464
00:45:27,210 --> 00:45:28,770
and kind of meat

465
00:45:28,770 --> 00:45:31,800
let's do not know what this is nice that

466
00:45:31,800 --> 00:45:33,990
what gentleman

