1
00:00:00,000 --> 00:00:03,000
we're gonna go ahead and get started

2
00:00:05,190 --> 00:00:10,500
this is the state of the Metasploit
framework this is the fifth time I've

3
00:00:10,500 --> 00:00:15,990
given this basic idea of a talk at Derby
con it's become kind of a tradition that

4
00:00:15,990 --> 00:00:21,810
i enjoy doing where I share with you the
things that I think are the coolest new

5
00:00:21,810 --> 00:00:28,500
additions to the framework of the last
year and i am james lee but my real name

6
00:00:28,500 --> 00:00:37,769
is Egypt I am meant ministry developer
and have been a developer for quite

7
00:00:37,770 --> 00:00:44,010
awhile i first got commit access in 2008
where I promptly broke master and with

8
00:00:44,010 --> 00:00:49,199
my first commit mind you and I've been
following in that tradition for quite

9
00:00:49,200 --> 00:00:55,590
awhile i'm also now the community
manager which means if you have

10
00:00:55,590 --> 00:00:58,949
questions i'm usually the guy you want
to come talk to you

11
00:00:58,949 --> 00:01:04,830
I spent a lot of time on Twitter these
days I control at least in part the

12
00:01:04,830 --> 00:01:14,130
medically twitter handle so if the if
the response from a display is snarky

13
00:01:14,130 --> 00:01:15,539
and useful that was me

14
00:01:15,540 --> 00:01:27,240
so first I want to start off with some
statistics and graphs and stuff all the

15
00:01:27,240 --> 00:01:31,289
stuff i'm going to show you is is
available either through fancy get log

16
00:01:31,290 --> 00:01:35,729
commands or the github search page the
search page actually gives you an awful

17
00:01:35,729 --> 00:01:39,210
lot of really powerful capabilities for
filtering and stuff so if you're

18
00:01:39,210 --> 00:01:43,530
interested in like the the statistics
behind most blatant and how many people

19
00:01:43,530 --> 00:01:49,020
work on and stuff to get help page is
really great for that and get log is

20
00:01:49,020 --> 00:01:54,600
also really powerful most of the time
it's too obscure to really want to

21
00:01:54,600 --> 00:02:01,020
bother with it though so yeah if you if
you fancy the command line and and love

22
00:02:01,020 --> 00:02:09,989
walk then get logins for you there are
229 new modules this year

23
00:02:10,508 --> 00:02:15,609
and i think it's interesting that we
ended up with this breakdown

24
00:02:16,209 --> 00:02:22,180
you'll notice encoder there at the
corner very small little stack in

25
00:02:22,180 --> 00:02:28,150
quarters are actually quite rare new
encoders in the framework because most

26
00:02:28,150 --> 00:02:31,930
of the encoders we have are sufficient
for the job you know we we already have

27
00:02:31,930 --> 00:02:36,579
to copy and I which is fantastic for x86
you know we've already got command

28
00:02:36,579 --> 00:02:41,680
encoders for being able to get rid of
all the bad characters in your command

29
00:02:41,680 --> 00:02:46,090
injection exploits so for the most part
encoders don't move that much I'm gonna

30
00:02:46,090 --> 00:02:54,010
talk about those little bit later
emerged over a hundred pull requests

31
00:02:54,010 --> 00:03:01,870
this year almost all those came from you
lots of modules came in that way lots of

32
00:03:01,870 --> 00:03:07,659
new features and those 800 pull requests
are all publicly available you can go

33
00:03:07,659 --> 00:03:12,879
see the the discourse on them and and
see the back-and-forth with code review

34
00:03:12,879 --> 00:03:19,989
and how we how we help people Shepherd
their modules through and and make their

35
00:03:19,989 --> 00:03:26,079
make their code better make it easier
for us to maintain down the road so

36
00:03:26,079 --> 00:03:31,690
those 800 pull requests we had a hundred
and seventy-six unique authors that

37
00:03:31,690 --> 00:03:34,750
command line at the bottom is actually a
little more complicated because we

38
00:03:34,750 --> 00:03:39,250
started breaking up the the Metasploit
framework repository into multiple

39
00:03:39,250 --> 00:03:45,069
smaller repositories so the the actual
command grab this number comes with a

40
00:03:45,069 --> 00:03:51,250
big for loop and some ugliness that I
don't worry with but i think that

41
00:03:51,250 --> 00:03:58,060
numbers is pretty amazing 276 people
gave their time and their efforts and

42
00:03:58,060 --> 00:04:01,359
their love of security to the medicine a
project in the last year

43
00:04:03,220 --> 00:04:09,099
that's amazing that's fantastic and I i
really appreciate every single one of

44
00:04:09,099 --> 00:04:19,418
those contributions those authors
created 4765 commits if you're new to

45
00:04:19,418 --> 00:04:22,690
the project this might seem intimidating
as we move pretty fast there's a lot of

46
00:04:22,690 --> 00:04:26,409
stuff in the framework there's a lot of
code there's a lot of new things coming

47
00:04:26,409 --> 00:04:31,570
in but the github interface makes it
pretty easy to visualize this and it

48
00:04:31,570 --> 00:04:38,200
makes it pretty easy to contribute to
code so don't be intimidated by the size

49
00:04:38,200 --> 00:04:43,389
of the framework or the number of people
are a contributing you can contribute to

50
00:04:43,389 --> 00:04:52,330
your contributions are worthwhile and I
want to see every one of them of those

51
00:04:52,330 --> 00:04:58,659
commits can see the number 40 something
percent of them came for people that

52
00:04:58,659 --> 00:05:06,520
have never been paid by rapid seven so a
few of those people that I count as

53
00:05:06,520 --> 00:05:11,830
having been paid by rapid7 are no longer
in rapid7 employee or in the case of oj

54
00:05:11,830 --> 00:05:18,639
only do contracting work with us so they
occasionally still give us stuff that we

55
00:05:18,639 --> 00:05:22,750
don't pay them for and I think this
number is also pretty fucking fantastic

56
00:05:22,750 --> 00:05:28,360
when we put a lot of effort into the
framework we also put a lot of effort

57
00:05:28,360 --> 00:05:33,849
into our commercial products but this is
really about the community the medical

58
00:05:33,849 --> 00:05:41,830
community is enormous and includes all
of you and the fact that almost half of

59
00:05:41,830 --> 00:05:47,109
all of our commits come from people who
are interested in the project and

60
00:05:47,110 --> 00:05:50,650
passionate about security and want to
improve the world through ruby code

61
00:05:50,650 --> 00:05:55,539
that's amazing

62
00:05:56,860 --> 00:06:04,449
they're also been 1588 dead

63
00:06:04,449 --> 00:06:09,789
references to SBB and that's my little
passive-aggressive jab them for shutting

64
00:06:09,789 --> 00:06:15,099
down a service that i think was really
super useful we have all of the data

65
00:06:15,099 --> 00:06:20,378
that came from OCD that stuff still
exists but we need someone to delete it

66
00:06:20,379 --> 00:06:26,439
if you're interested and willing to
bring this service backup become the

67
00:06:26,439 --> 00:06:33,009
newest BB please come talk to me i would
love to see this thing continue CBE has

68
00:06:33,009 --> 00:06:35,319
its failings for sure

69
00:06:35,319 --> 00:06:40,840
osb be had some troubles but the
resources that are provided were amazing

70
00:06:40,840 --> 00:06:43,029
and i'm really sad to see it go

71
00:06:43,029 --> 00:06:46,060
so if you want to work on it please come
talk to me or any of the other most

72
00:06:46,060 --> 00:06:53,770
people and we really need a leader for
this so now i'm going to jump into some

73
00:06:53,770 --> 00:06:57,789
new features new stuff that I think
you'll enjoy mostly this is a grab bag

74
00:06:57,789 --> 00:07:03,339
so it's gonna be kinda jumping back and
forth and it's not super all not super

75
00:07:03,339 --> 00:07:10,719
related so bear with me is some of it's
a little choppy first is as i mentioned

76
00:07:10,719 --> 00:07:11,589
we're breaking up

77
00:07:11,589 --> 00:07:18,129
minnesota into smaller pieces we have
this library called Rex that contains a

78
00:07:18,129 --> 00:07:23,889
whole bunch of stuff and most of it is
in some way related to exploitation but

79
00:07:23,889 --> 00:07:29,620
not directly related to each other so
there's a whole bunch of things like xor

80
00:07:29,620 --> 00:07:35,409
encoding stuff lives in there all over
polymorphic engines living there most of

81
00:07:35,409 --> 00:07:41,680
our protocol libraries living in racks
all kinds of just random one-off thing

82
00:07:41,680 --> 00:07:45,939
is this someone needed for an exploit
live in rex we're trying to break those

83
00:07:45,939 --> 00:07:50,379
out into smaller pieces that are easier
to manage easier to test easy to

84
00:07:50,379 --> 00:07:54,909
visualize and that's an ongoing project
that's that's been in the works for

85
00:07:54,909 --> 00:08:02,349
several years now a little bit at a time
and part of the advantage of that is

86
00:08:02,349 --> 00:08:06,759
smaller chunks of code or just easier to
understand you know if you have one

87
00:08:06,759 --> 00:08:09,200
repository with a thousand lines of code

88
00:08:09,200 --> 00:08:13,969
as opposed to Metasploit framework which
previously had almost a million lines of

89
00:08:13,970 --> 00:08:19,820
code one of those is going to be a lot
easier to wrap your head around so we

90
00:08:19,820 --> 00:08:24,170
continue to break this thing apart into
smaller more manageable chunks and it

91
00:08:24,170 --> 00:08:31,160
also saves on testing time as well so we
see all the tests run for Rex text only

92
00:08:31,160 --> 00:08:36,229
run when Rex text is updated and we
don't have to go through that same step

93
00:08:36,229 --> 00:08:44,300
for any new change the framework we had
a couple of new msf console commands and

94
00:08:44,300 --> 00:08:48,709
typically things like this come about
when someone finally gets pissed off

95
00:08:48,710 --> 00:08:51,380
enough about it and fixes it

96
00:08:51,380 --> 00:08:59,900
I've been typing show options for like
ten years and god damn that's five extra

97
00:08:59,900 --> 00:09:06,439
characters that I never should have had
to type this whole time I wonder how

98
00:09:06,440 --> 00:09:09,680
many hours of my life have been wasted
typing as stage

99
00:09:09,680 --> 00:09:18,260
oh when I could just type options a
whole fucking time so I've got this

100
00:09:18,260 --> 00:09:22,700
other directory called tools and I was
originally going to call this the slide

101
00:09:22,700 --> 00:09:30,050
tools reorganization but there was never
any organization in it to begin with it

102
00:09:30,050 --> 00:09:33,770
was just a big pile of co2 a whole bunch
of different purposes so now we've

103
00:09:33,770 --> 00:09:39,380
broken it down into all of these
categories the one you'll probably end

104
00:09:39,380 --> 00:09:44,930
up spending most of the time on is a dev
and exploit where those are the the

105
00:09:44,930 --> 00:09:50,180
things that you can use for either
interacting with the framework to do

106
00:09:50,180 --> 00:09:53,930
some sort of introspection find out like
module authors and that's where thing

107
00:09:53,930 --> 00:10:00,859
the exploit directory contains some some
fun things to simplify the creation of

108
00:10:00,860 --> 00:10:06,890
exploits and dev helps you out with the
actual process of developing stuff

109
00:10:06,890 --> 00:10:14,390
metasploit the others are also useful
but I feel like that's probably we're

110
00:10:14,390 --> 00:10:16,089
going to spend most of your time

111
00:10:16,089 --> 00:10:22,120
one of those new tools is msu finder and
I think this is really neat it's

112
00:10:22,120 --> 00:10:29,949
something that's a sinner wrote the
equation it grabs all of the patch links

113
00:10:29,949 --> 00:10:37,389
for any new Microsoft kb so you run msu
finder and you give it a kb number or

114
00:10:37,389 --> 00:10:44,079
excellent a peanut M&MS advisory number
and it pulls down a list of all of the

115
00:10:44,079 --> 00:10:50,769
msu patch files for you to download and
extract information from so if you want

116
00:10:50,769 --> 00:11:00,579
to analyze a patch this makes it way
easier just download all the things the

117
00:11:00,579 --> 00:11:02,349
next big thing is metal

118
00:11:02,350 --> 00:11:08,949
it's a new payload written mostly from
scratch in portable posix see so that

119
00:11:08,949 --> 00:11:11,859
means it runs on all kinds of shit

120
00:11:11,860 --> 00:11:15,999
it runs on Miss routers that runs on
android devices jadek demo that a little

121
00:11:15,999 --> 00:11:20,949
bit yesterday with his stage fright
exploit which is now in the queue and

122
00:11:20,949 --> 00:11:27,279
should be landed in the next few days so
you've got a payload that works very

123
00:11:27,279 --> 00:11:32,110
much the same way as meterpreter but
written with the plan of being portable

124
00:11:32,110 --> 00:11:33,429
the whole time

125
00:11:33,429 --> 00:11:40,899
it uses muscle as it slip scene which is
a huge improvement over the previous

126
00:11:40,899 --> 00:11:49,059
attack plan of using androids Bionic
lipsy which was huge and did a whole

127
00:11:49,059 --> 00:11:54,100
bunch of stuff that we didn't really
need and because of the way the android

128
00:11:54,100 --> 00:11:58,240
build system changed it wasn't really
easy to pull it out of the android bill

129
00:11:58,240 --> 00:12:02,499
system anymore they went from everything
being small little pieces that are easy

130
00:12:02,499 --> 00:12:09,129
to interact with on their own to now
Android is one giant monolithic bill so

131
00:12:09,129 --> 00:12:13,990
pulling the lipsy out of it was a pain
in the ass and this is just much better

132
00:12:13,990 --> 00:12:17,920
all-around print and Adam are going to
be talking about this

133
00:12:18,740 --> 00:12:23,330
at one o'clock tomorrow afternoon so if
you're interested in highly portable

134
00:12:23,330 --> 00:12:27,410
posix see and the awesome evil things
you can do with it

135
00:12:27,950 --> 00:12:34,370
i highly recommend you go check out
there talk to we also added some support

136
00:12:34,370 --> 00:12:42,890
for mainframes due to some great work by
soldier fortran in beginning smalls 22

137
00:12:42,890 --> 00:12:47,240
contributors who actually met here at
Derby County couple years ago and I love

138
00:12:47,240 --> 00:12:47,720
their work

139
00:12:47,720 --> 00:12:56,930
it's a lot of fun to build payloads and
I been authenticated rce exploit for the

140
00:12:56,930 --> 00:13:02,989
job control system which is brilliant
the way the job control system works is

141
00:13:02,990 --> 00:13:09,320
you have an ftp server and you upload a
file to ftp server the mainframe goes oh

142
00:13:09,320 --> 00:13:14,060
you have a new job for me i'll pick up
that file and run whatever the fuck you

143
00:13:14,060 --> 00:13:27,140
one sweet the next big thing is module
documentation and we've always had the

144
00:13:27,140 --> 00:13:32,569
info command msf console that gives you
a basic rundown of of anything with the

145
00:13:32,570 --> 00:13:36,470
module author wanted you to know and
that's that chunk if you're looking at

146
00:13:36,470 --> 00:13:40,459
the source code that's that chunk of
freeform text at the top of the info

147
00:13:40,459 --> 00:13:45,229
hash and that just gets dumped out when
you type the info command msf console

148
00:13:45,230 --> 00:13:52,880
we've added info dash D for
documentation which allows a module

149
00:13:52,880 --> 00:13:57,890
author to create documentation in
markdown so it's a lot easier for Matt

150
00:13:57,890 --> 00:14:04,579
it's prettier you can do it in a browser
and it's a it's just overall a lot

151
00:14:04,579 --> 00:14:11,779
cleaner and I'm so this is also a great
place to start contributing if you are

152
00:14:11,779 --> 00:14:17,510
not super comfortable with writing code
but you want to give back somehow

153
00:14:17,510 --> 00:14:26,839
writing module documentation is a quick
way to give give other people your

154
00:14:26,839 --> 00:14:29,839
experience in using that module so if
you

155
00:14:30,660 --> 00:14:33,990
I if you run a module all the time and
you know it is announced and you know

156
00:14:33,990 --> 00:14:40,110
the the best way to run this module in a
certain environment having that in the

157
00:14:40,110 --> 00:14:45,720
module documentation is huge for new
users so share your experience bill

158
00:14:45,720 --> 00:14:52,740
documentation and help everyone in the
process and I want to cover some new

159
00:14:52,740 --> 00:15:00,689
modules this is probably the thing that
most people are most interested in and

160
00:15:00,689 --> 00:15:06,329
again these are not super interrelated
but I think they're all very fun

161
00:15:06,839 --> 00:15:10,589
first we have 14 laws where you can set
the wallpaper

162
00:15:11,250 --> 00:15:21,509
this one's extra fun because it works on
on windows on OSX and on android so you

163
00:15:21,509 --> 00:15:32,370
can go to everybody now we've got the
encoders that i mentioned earlier one of

164
00:15:32,370 --> 00:15:40,709
which is for x64 x86 64 bit we've had
Chicago knife or 32-bit x86 for a long

165
00:15:40,709 --> 00:15:47,638
time and it's super awesome at creating
very random difficult to signature on

166
00:15:47,639 --> 00:15:54,630
the wire shellcode and part of the main
point of encoders is to be random so

167
00:15:54,630 --> 00:16:02,069
that they're hard to sake and that's not
for a vision is for IDs evasion a lot of

168
00:16:02,069 --> 00:16:06,540
a lot of folks look at encoders as a
vision and that is absolutely not the

169
00:16:06,540 --> 00:16:11,250
purpose of their main purpose is to
remove bad characters so that you can

170
00:16:11,250 --> 00:16:17,850
use any arbitrary shellcode with an
arbitrary exploit regardless of the the

171
00:16:17,850 --> 00:16:24,660
bad character restrictions in that
exploit so the randomness gives you a

172
00:16:24,660 --> 00:16:34,559
much better capability of evading ids
yeah i'm not a Japanese speaker but from

173
00:16:34,559 --> 00:16:40,199
what I've heard Chicago and I roughly
means nothing can be done about it or it

174
00:16:40,199 --> 00:16:41,240
can be better

175
00:16:41,240 --> 00:16:48,050
Zuko dekhi route was meant as an answer
that and it roughly means it always

176
00:16:48,050 --> 00:16:52,250
works or it can be better so same idea

177
00:16:52,820 --> 00:16:59,209
it's a polymorphic on X or additive
feedback encoder so it starts with a key

178
00:16:59,209 --> 00:17:07,159
and encrypts each bite with that X or
key as a rolling key as it goes

179
00:17:07,160 --> 00:17:16,280
so it's very very random and difficulty
signature the next up one is the x86 BMP

180
00:17:16,280 --> 00:17:20,000
polyglot encoder and this one is not a
traditional encounter i mentioned that

181
00:17:20,000 --> 00:17:24,050
the purpose of encoders is primarily to
remove bad characters this one doesn't

182
00:17:24,050 --> 00:17:25,159
do that at all

183
00:17:25,160 --> 00:17:35,929
instead it embeds x86 shellcode into a
existing BMP image a bitmap image that

184
00:17:35,929 --> 00:17:41,809
you would normally serve on a web server
whatever you you can explore and stego

185
00:17:41,809 --> 00:17:48,170
Phi all of your x86 shellcode into a
bitmap and then because it modifies the

186
00:17:48,170 --> 00:17:52,970
header to actually be executable x86
shellcode as well you can just put it in

187
00:17:52,970 --> 00:17:54,530
memory and fucking jump to it

188
00:17:54,530 --> 00:18:03,170
that's awesome yeah and let's do the the
great work of zero Steiner sitting over

189
00:18:03,170 --> 00:18:03,860
there

190
00:18:03,860 --> 00:18:06,860
I'm push-up had

191
00:18:10,640 --> 00:18:21,080
next up is SME delivery and works like
web delivery if you've never if you've

192
00:18:21,080 --> 00:18:23,060
never seen that modular or worked before

193
00:18:23,060 --> 00:18:27,860
web delivery is basically a web server
that hosts whatever kind of script you

194
00:18:27,860 --> 00:18:32,030
want it can be a powershell and I
believe pearl and something else

195
00:18:33,800 --> 00:18:40,850
mostly we use PowerShell with it to
execute arbitrary at shell code in

196
00:18:40,850 --> 00:18:45,889
memory without having to drop a file to
disk so SMB delivery works basically the

197
00:18:45,890 --> 00:18:51,500
same way except instead of serving over
HTTP pesos serves over SME now a lot of

198
00:18:51,500 --> 00:18:57,470
times that won't be available through a
firewall but this is amazing on an

199
00:18:57,470 --> 00:19:00,170
internal or if you've already
compromised something on the inside

200
00:19:00,170 --> 00:19:05,690
having your shellcode come from an SMB
file share is like no one no one's

201
00:19:05,690 --> 00:19:10,970
looking at that no one pays any
attention to any file shares so you're

202
00:19:10,970 --> 00:19:14,480
gonna fly right past all the ideas and
stuff

203
00:19:14,990 --> 00:19:22,760
we also have a exploit for image tragic
this was one of the named bones the the

204
00:19:22,760 --> 00:19:30,560
vulnerability with a logo epidemic
continued from the previous years you've

205
00:19:30,560 --> 00:19:33,830
probably already forgotten about this
one because it was just not that great

206
00:19:33,830 --> 00:19:41,480
bug you know there's been a bunch of
bugs with logos trying to drum up a hype

207
00:19:41,480 --> 00:19:46,190
for them and this is an example of one
that's just it's just not a good bug

208
00:19:46,190 --> 00:19:51,380
it's occasionally useful and it's kinda
cool and it was worth module and it was

209
00:19:51,380 --> 00:19:54,800
worth some effort but I didn't need a
stupid logo

210
00:19:56,110 --> 00:20:01,928
no one that does need a logo is one of
my favorite things ever are

211
00:20:01,929 --> 00:20:08,980
shell-shocked is a bug in bash that
allows you to execute code if you

212
00:20:08,980 --> 00:20:11,500
control that yeah

213
00:20:11,500 --> 00:20:17,500
yes it's a feature if you control
environment variable then you can just

214
00:20:17,500 --> 00:20:24,880
execute whatever so that comes up in a
ton of places and the two main ones that

215
00:20:24,880 --> 00:20:32,049
came about in the last year r.i.p fire
which is a firewall management thing the

216
00:20:32,049 --> 00:20:37,000
jig and that those are really neat right
because if you pop a firewall management

217
00:20:37,000 --> 00:20:37,660
thing

218
00:20:37,660 --> 00:20:42,880
guess what you've got fucking fire halls
so then you can control all the packets

219
00:20:42,880 --> 00:20:49,120
on the network you can change all the
firewall rules on that sort of thing and

220
00:20:49,120 --> 00:20:55,870
all this because of a two-year-old bug
that just got overlooked with these uh

221
00:20:55,870 --> 00:21:04,809
these devices i'm in advantix which is
advantech is a skate under thingy that

222
00:21:04,809 --> 00:21:14,080
ships with the stupid old bash like
super stupid old and has all the same

223
00:21:14,080 --> 00:21:19,389
problems and then the two at the bottom
here my legend IRC bot annex eh piracy

224
00:21:19,390 --> 00:21:24,700
want i think are hilarious because
they're malware so we have we have

225
00:21:24,700 --> 00:21:32,200
exploits for these two male robots
that's hilarious and speaking our with a

226
00:21:32,200 --> 00:21:33,309
few other things

227
00:21:33,309 --> 00:21:42,040
phoenix exploit kit which is a exploit
kit is run-of-the-mill PHP see to sort

228
00:21:42,040 --> 00:21:43,030
of thing

229
00:21:43,030 --> 00:21:48,460
much of the same vein is like crime pack
or or impact from back in the day fire

230
00:21:48,460 --> 00:21:51,250
pack same sort of thing

231
00:21:51,250 --> 00:21:59,500
the it has has a thing on one of those
pages with a variable called i believe

232
00:21:59,500 --> 00:22:01,970
it's bkd are you can

233
00:22:01,970 --> 00:22:06,500
probably guess what that means we can
just upload arbitrary shit and put it in

234
00:22:06,500 --> 00:22:15,470
the webroot because that's how malware
authors roll dark comedy is fun in part

235
00:22:15,470 --> 00:22:22,370
because the creator of it stop
development on it after a bunch of

236
00:22:22,370 --> 00:22:28,850
Syrian jackasses use it in a campaign
following the Charlie Hebdo attacks so

237
00:22:28,850 --> 00:22:35,300
the creator's French and the Syrian
jerks didn't our campaign with the just

238
00:22:35,300 --> 00:22:41,960
we surely hashtag and as a result of
that the the creator of dark comments

239
00:22:41,960 --> 00:22:46,880
said you know I'm never going to work on
a rat again and took it down and said

240
00:22:46,880 --> 00:22:52,010
basically you guys are assholes leave
Milan so if you find are coming out

241
00:22:52,010 --> 00:22:59,629
there it's probably really an asshole
fun thing I mentioned that the legendary

242
00:22:59,630 --> 00:23:06,350
sea by an xhr see what were
shell-shocked exploits the reason why

243
00:23:06,350 --> 00:23:11,899
that's extra phone is because they were
spread with shell-shocked exploits so

244
00:23:11,900 --> 00:23:19,970
you're pretty much guaranteed that
they're vulnerable and then on the same

245
00:23:19,970 --> 00:23:26,900
thing we talked about malware there's
also a legit security software on and I

246
00:23:26,900 --> 00:23:33,050
i love the idea of hitting back and this
image doesn't super-fit but I just

247
00:23:33,050 --> 00:23:35,570
always wanted to fucking use it's so
good

248
00:23:35,570 --> 00:23:44,899
so the fortinet SSH backdoor was super
fun again

249
00:23:44,900 --> 00:23:50,840
fortinet builds these fortigate things
that controller firewalls they have

250
00:23:50,840 --> 00:23:57,320
access to span ports they are packet
capture devices on steroids so popping

251
00:23:57,320 --> 00:24:04,010
one of these things is is golden on the
network right the back door itself was

252
00:24:04,010 --> 00:24:08,180
basically a change to the way ssh
authentication work where if you had a

253
00:24:08,180 --> 00:24:09,770
particular

254
00:24:09,770 --> 00:24:14,600
using it was a new authentication
techniques and so like password

255
00:24:14,600 --> 00:24:21,560
interactive it was like 40 minutes
something other and I basically if you

256
00:24:21,560 --> 00:24:29,960
had a certain random key thing it would
just automatically use root was fucking

257
00:24:29,960 --> 00:24:38,630
back door check ruka is fine as a a
local privilege escalation where it

258
00:24:38,630 --> 00:24:43,160
checked for the existence of a root K by
looking for a thing in temp called

259
00:24:43,160 --> 00:24:51,680
update just a file called update by
checker kate is written in back and a

260
00:24:51,680 --> 00:24:53,360
couple of small

261
00:24:53,360 --> 00:24:58,370
missing quotes means that instead of
checking for the existence of update it

262
00:24:58,370 --> 00:25:01,370
executed it is rude

263
00:25:08,090 --> 00:25:16,370
yeah that was fun and then the next door
near and dear to my heart as you might

264
00:25:16,370 --> 00:25:21,709
imagine the first one that medically
pros authenticated remote code execution

265
00:25:22,670 --> 00:25:27,860
this is not surprising if you can login
to medically there's a thing called msf

266
00:25:27,860 --> 00:25:34,639
console and ms of console is basically
she'll write as all the same you know

267
00:25:34,640 --> 00:25:37,790
you can just run shell commands through
it that's what it's for

268
00:25:37,790 --> 00:25:41,840
so if you can log in a minute late then
you win

269
00:25:41,840 --> 00:25:48,649
now you should set a strong password on
all of your admin accounts and not give

270
00:25:48,650 --> 00:25:51,920
mostly pro two users that you don't
trust

271
00:25:52,670 --> 00:25:58,460
but if you allow people to log into my
display pro very much like if you allow

272
00:25:58,460 --> 00:26:04,550
people to log into ssh guess what they
can run commands now I'm not trying to

273
00:26:04,550 --> 00:26:08,210
downplay the significance of this
because authenticated code execution by

274
00:26:08,210 --> 00:26:11,750
design is by far my favorite class of
excellence

275
00:26:11,750 --> 00:26:15,680
I love them because they're not actually
exploits they're not taking advantage of

276
00:26:15,680 --> 00:26:20,600
vulnerability they're just using the
stuff the way it was supposed to be used

277
00:26:20,600 --> 00:26:22,639
so what you log into ssh you can run
command

278
00:26:22,640 --> 00:26:25,370
that's what is for you log into
medically you can run exploits that's

279
00:26:25,370 --> 00:26:34,969
what it's for the next 10 the pre
authentication deserialization that's a

280
00:26:34,970 --> 00:26:41,120
real actual bug so please update your
exploit because this this guy's bad

281
00:26:41,120 --> 00:26:55,489
basically the the known secret key of a
rooby-roo ruby-on-rails cookie is code

282
00:26:55,490 --> 00:27:01,460
execution so if you know the secret key
the cookie is encrypted with then you

283
00:27:01,460 --> 00:27:02,360
can decrypt it

284
00:27:02,360 --> 00:27:06,530
you can change it and you can be
encrypted and sent it back up and that's

285
00:27:06,530 --> 00:27:13,550
serialize ruby code so arbitrary
execution whatever you want this was all

286
00:27:13,550 --> 00:27:21,139
the rage back in probably 2014 when it
got really blown up by the fact that

287
00:27:21,140 --> 00:27:27,830
shit loads of known keys exist on github
you can just search for stuff to pop so

288
00:27:27,830 --> 00:27:34,520
now the problem in medically crops back
up as a result of us failing a little

289
00:27:34,520 --> 00:27:40,700
bit on our update scripts that stepped
on that key was something that was known

290
00:27:40,700 --> 00:27:45,770
to everyone who already had mostly so
sorry but it's funny

291
00:27:45,770 --> 00:27:52,190
and another thing that landed right
after derby come last year is this thing

292
00:27:52,190 --> 00:27:59,180
called pageant tracker it's super cool
the TLDR is you can use of victims

293
00:27:59,180 --> 00:28:05,240
unlocked ssh-keys so basically the way
pageant works is like ssh agent for unix

294
00:28:05,240 --> 00:28:10,790
but it's the putty equivalent so it
spawns a demon and holds your unlocked

295
00:28:10,790 --> 00:28:14,360
ssh key so you can have the password
protected but then still store them in

296
00:28:14,360 --> 00:28:17,360
memory and use them without having to
type your password every time

297
00:28:17,930 --> 00:28:22,850
so what this module does is it creates a
local units socket just like SH agent

298
00:28:22,850 --> 00:28:30,080
would so then you can use a normal ssh
client to connect up through that that

299
00:28:30,080 --> 00:28:31,419
eunuch socket

300
00:28:31,420 --> 00:28:37,240
and instead of using your keys that you
have locked your using the victims keys

301
00:28:37,240 --> 00:28:42,100
that they unlocked so it's hilarious
some fun

302
00:28:44,620 --> 00:28:48,070
yeah I i love SSH keys so much fun

303
00:28:50,680 --> 00:28:55,840
so then we got a pile of local privilege
escalation for windows on the first two

304
00:28:55,840 --> 00:29:01,480
of their our current owner abilities and
knowledge escalation is becoming more

305
00:29:01,480 --> 00:29:06,070
and more important in the windows world
we used to be back in the day everybody

306
00:29:06,070 --> 00:29:10,570
run as administrator and if they didn't
run as administrator there is power user

307
00:29:10,570 --> 00:29:18,790
which is administrator and today that's
a lot less true you still find the

308
00:29:18,790 --> 00:29:23,440
networks like that where a lot of people
are running his local administrator but

309
00:29:23,440 --> 00:29:29,980
it's it's going away that has changed
significantly in the last few years so

310
00:29:29,980 --> 00:29:33,310
local privilege escalations are becoming
more and more important

311
00:29:33,310 --> 00:29:40,419
they're also more important because of
sand boxes so if you pop IE for example

312
00:29:40,420 --> 00:29:45,850
you end up in a really shitty shell
where you can interact with anything but

313
00:29:45,850 --> 00:29:50,740
your own process all you have access to
is the temp directory like it's just

314
00:29:50,740 --> 00:29:54,610
it's really restrictive and it kind of
sucks and if you have a colonel explain

315
00:29:54,610 --> 00:29:58,300
well then the sandbox doesn't matter

316
00:29:58,300 --> 00:30:04,600
so you skip all that stuff you go from
super restricted crappy sandbox user

317
00:30:04,600 --> 00:30:09,850
little privileges to running as the
colonel and all of your problems go away

318
00:30:09,850 --> 00:30:16,659
on linux i mentioned checker kit there
are a couple others that were super

319
00:30:16,660 --> 00:30:26,410
funds here XM is a mail thingy that due
to some historical reasons about how

320
00:30:26,410 --> 00:30:33,940
mail works in the unix world it has to
be sent you any route so the executable

321
00:30:33,940 --> 00:30:37,840
is set you a route and it has this

322
00:30:39,900 --> 00:30:44,610
it has environment variables that it
doesn't clean you know it just lets you

323
00:30:44,610 --> 00:30:48,240
give it whatever environment variables
that you want this is a pretty

324
00:30:48,240 --> 00:30:53,160
old-school style of vulnerability in the
unix privilege escalation world but this

325
00:30:53,160 --> 00:30:59,070
stuff is you know it's what the the
really OG hackers were doing back in the

326
00:30:59,070 --> 00:31:04,080
nineties was this kind of privilege
escalation and the way that this one

327
00:31:04,080 --> 00:31:09,929
works is you use a Perl 5 opt as an
environment variable to give options to

328
00:31:09,930 --> 00:31:14,310
the Pearl commands that eventually
shells down to which lets you run

329
00:31:14,310 --> 00:31:23,070
arbitrary pearl stuff so yay routing is
pearl and dr. Damon is similar sort of

330
00:31:23,070 --> 00:31:27,689
to the idea of authenticated code
execution because the dr. Damon doesn't

331
00:31:27,690 --> 00:31:33,030
really restrict a user so if you can
talk to the dr gaming then you can get

332
00:31:33,030 --> 00:31:36,030
out of the darker like that's what kind
of what it's for

333
00:31:36,780 --> 00:31:43,680
so the if you can talk to the dr Damon
you can get out of the container and

334
00:31:43,680 --> 00:31:52,770
Bob's your uncle on OSX we have this fun
one called with Malik and it's similar

335
00:31:52,770 --> 00:31:58,590
in exploitation to the XM thing where it
has some environment variables are

336
00:31:58,590 --> 00:32:06,720
getting cleaned the Mallik log I don't
remember the exact name of the the

337
00:32:06,720 --> 00:32:11,880
environment variable but it's something
to do with the way Malik logs

338
00:32:12,450 --> 00:32:17,940
it's debugging information so it allows
you to put arbitrary contents with some

339
00:32:17,940 --> 00:32:26,010
crappy header stuff into an arbitrary
file on his route so you write a macron

340
00:32:26,010 --> 00:32:35,910
line into a secret tab and wait an hour
and go to town on linux we had a few

341
00:32:35,910 --> 00:32:39,210
more persistence mechanisms that I think
are fun

342
00:32:39,210 --> 00:32:46,560
SSH keys of course I'm i mentioned how
much I love SSH keys but they're they're

343
00:32:46,560 --> 00:32:50,669
super useful for all kinds of things not
least of which is dropping your own ssh

344
00:32:50,670 --> 00:32:52,440
key onto a victim system

345
00:32:52,440 --> 00:32:57,660
and just giving yourself access to get
back in being able to log into a system

346
00:32:57,660 --> 00:33:02,970
is way the hell better than exploiting
something you know there's there's no

347
00:33:02,970 --> 00:33:07,860
IDs that's going to freak out because
you walked into something that most

348
00:33:07,860 --> 00:33:12,209
people don't audit successful logins
they on it failed logins sometimes so

349
00:33:12,210 --> 00:33:18,870
that they can catch brute-forcing but
very few networks actually log or on it

350
00:33:18,870 --> 00:33:27,209
the logs on their successful logins so
using ssh is just easy peeing at & cron

351
00:33:27,210 --> 00:33:32,940
sort of do what they say they do you put
a payload into an a job or a cron job

352
00:33:32,940 --> 00:33:40,620
and then if you lose your shell it comes
back to you in an hour you want to talk

353
00:33:40,620 --> 00:33:44,820
about some specifically meterpreter
features that was all new modules and

354
00:33:44,820 --> 00:33:51,270
this is mostly things directly related
to the trigger shell first off packets

355
00:33:51,270 --> 00:33:55,410
are now obviously with explore explore
so it used to be that we have these

356
00:33:55,410 --> 00:33:59,910
pretty static key or products pretty
static strings that showed up on the

357
00:33:59,910 --> 00:34:05,100
wire and it was fairly easy to signature
mostly meterpreter traffic talking two

358
00:34:05,100 --> 00:34:07,709
minutes late now

359
00:34:07,710 --> 00:34:13,230
all of that is included with a random
xor key for every packet so it's a

360
00:34:13,230 --> 00:34:21,360
pretty simple obfuscation but it defeats
all of the static signatures we also

361
00:34:21,360 --> 00:34:21,710
added

362
00:34:21,710 --> 00:34:26,720
several new extensions the first one is
Python which allows you to run python

363
00:34:26,719 --> 00:34:28,339
code on the victim

364
00:34:28,339 --> 00:34:34,040
so if if you're more familiar with
Python Ruby this is going to be your

365
00:34:34,040 --> 00:34:36,109
favorite thing in the world

366
00:34:36,109 --> 00:34:40,190
we also have a powershell expect
extension that works similarly we can

367
00:34:40,190 --> 00:34:45,050
upload arbitrary power shell and have it
run in the context of the victim that

368
00:34:45,050 --> 00:34:49,790
was fun because it uses the system's
powershell stuff without actually

369
00:34:49,790 --> 00:34:54,500
executing the powershell executable so
there's something like AppLocker or or

370
00:34:54,500 --> 00:35:00,410
any other like whitelisting thing that
tells you you can't run powershell this

371
00:35:00,410 --> 00:35:01,490
doesn't care at all

372
00:35:01,490 --> 00:35:08,450
it runs it anyway and the last one there
is BF that was submitted as a pull

373
00:35:08,450 --> 00:35:17,779
request by our very own bread cook on
april first BF is a brainfuck interpret

374
00:35:17,780 --> 00:35:26,960
her brain fuck is a very simple language
it has seven operators and it works

375
00:35:26,960 --> 00:35:31,250
basically like a Turing machine on acid

376
00:35:32,510 --> 00:35:38,630
there there was a logo i got logos for
python and powershell there was a logo

377
00:35:38,630 --> 00:35:42,320
for brainfuck but no

378
00:35:45,050 --> 00:35:55,460
the next thing is the reverse listener
calm and in the in the medical a socket

379
00:35:55,460 --> 00:36:03,650
world com is a thing that can create new
sockets mostly the two that you you care

380
00:36:03,650 --> 00:36:08,330
about our local which means that your
your local attacker machine is creating

381
00:36:08,330 --> 00:36:13,430
the sockets via the normal Ruby
mechanisms for doing so and I'm

382
00:36:13,430 --> 00:36:18,470
interpreter session interpreter sessions
can create new sockets connected out and

383
00:36:18,470 --> 00:36:24,290
that's how pivots work so when you
create a route in SF console tunneling

384
00:36:24,290 --> 00:36:30,320
things to recession a calm is how that
happens we added a new way to create

385
00:36:30,320 --> 00:36:36,950
sockets for a server connection so
instead of connecting outbound from the

386
00:36:36,950 --> 00:36:40,189
victim machine you listen on the victim
machine and connect to something local

387
00:36:40,190 --> 00:36:45,500
to the attackers network and it looks
kinda like this you've got a compromise

388
00:36:45,500 --> 00:36:49,070
machine behind the firewall and it can
talk to some of the machine behind the

389
00:36:49,070 --> 00:36:54,800
firewall like so and you compromise that
guy instead of having him call all the

390
00:36:54,800 --> 00:36:58,940
way back to the firewall you have him
reverse his connection to the

391
00:36:58,940 --> 00:37:02,330
compromised in the middle

392
00:37:02,330 --> 00:37:08,420
in a similar vein we've also got reverse
port forwarding and a lot of people have

393
00:37:08,420 --> 00:37:13,280
been asking for this for a long time
because it's super useful for doing all

394
00:37:13,280 --> 00:37:18,800
kinds of things basically you add a
listener on the victim machine that

395
00:37:18,800 --> 00:37:23,450
forwards packets to anything on the
attackers local network much like that

396
00:37:23,450 --> 00:37:26,419
the handler setup that I just showed you

397
00:37:26,420 --> 00:37:30,590
so this command here we'll set up a
listener on the remote machine and

398
00:37:30,590 --> 00:37:36,500
funnel all connections support 22 on
that machine to port 22 of your local

399
00:37:36,500 --> 00:37:42,140
attacker box super useful for stealing
passwords and it looks kinda like this

400
00:37:42,140 --> 00:37:47,870
where you connect up to the guy in the
middle you create a listener you and you

401
00:37:47,870 --> 00:37:49,430
say to the network

402
00:37:49,430 --> 00:37:54,230
hey my name is w pad and if you want
some proxy settings and they say yeah

403
00:37:54,230 --> 00:37:56,700
yeah give me a proxy

404
00:37:56,700 --> 00:38:10,169
and and then Zoidberg is the popular one
is another new command called show mount

405
00:38:10,170 --> 00:38:21,839
which does what it sounds like it was
pretty good

406
00:38:21,839 --> 00:38:28,980
um it shows all the amount of file
systems including network shares which

407
00:38:28,980 --> 00:38:35,849
why it which is why it's super important
file shares can be your bread and butter

408
00:38:35,849 --> 00:38:42,150
on an internal network where if you can
if you can find something that everybody

409
00:38:42,150 --> 00:38:43,349
connect up to

410
00:38:43,349 --> 00:38:46,619
if you've got some sort of like scratch
share that everybody uses for all kinds

411
00:38:46,619 --> 00:38:53,849
of stuff you dropping LMK file in there
with a with a little uh an icon that

412
00:38:53,849 --> 00:39:02,040
points to a UNC path for your attacker
machine and you have a SMB relay or

413
00:39:02,040 --> 00:39:06,029
responder running on that machine and
now suddenly everybody who connects to

414
00:39:06,030 --> 00:39:12,359
that file share will attempt to
authenticate to you so grabbing

415
00:39:12,359 --> 00:39:19,850
fileshares like this is amazingly useful
also made some

416
00:39:19,850 --> 00:39:24,740
permanence in the Android world there's
this new command called school library

417
00:39:24,740 --> 00:39:30,890
which does what it sounds like and it
saves you the effort of downloading any

418
00:39:30,890 --> 00:39:36,020
sequel light databases that exists on
the device which can be slow and

419
00:39:36,020 --> 00:39:43,190
time-consuming because these devices
tend to be on shitty slow networks so

420
00:39:43,190 --> 00:39:48,740
you're you're still restricted by your
your user ID just like in any other

421
00:39:48,740 --> 00:39:55,850
permission scenario but often the the
databases that you can talk to are

422
00:39:55,850 --> 00:40:00,680
important and things that you want to
see so like if you pop up a browser with

423
00:40:00,680 --> 00:40:10,009
like stage fright or the older at jas
interface exploit you pop a browser now

424
00:40:10,010 --> 00:40:15,320
you can read all the cookies and cookies
give you sessions that get you into more

425
00:40:15,320 --> 00:40:19,310
things and let you expand your influence
so this thing is super cool

426
00:40:19,880 --> 00:40:29,120
I'm android also now registers itself as
a service which means it runs in the

427
00:40:29,120 --> 00:40:33,319
background and if you if you run
something in the foreground in android

428
00:40:34,130 --> 00:40:40,790
eventually the user goes and uses
something else and it it falls to the

429
00:40:40,790 --> 00:40:44,840
background of the the apple store
whatever those processes get killed

430
00:40:45,440 --> 00:40:51,950
so you lose your shell and that sucks
the the service though a service runs in

431
00:40:51,950 --> 00:40:56,359
the background and it's very unlikely to
killed in that sort of scenario unless

432
00:40:56,360 --> 00:40:59,600
you're hitting like out of memory
conditions or something like that so

433
00:40:59,600 --> 00:41:03,830
this just makes it a lot more reliable
android in general is a lot more

434
00:41:03,830 --> 00:41:07,970
reliable and persistent so the fact that
it registers as service also means that

435
00:41:07,970 --> 00:41:12,529
it gets to start at startup so if you
shut down the device or it goes to sleep

436
00:41:12,530 --> 00:41:15,590
when the device comes back online

437
00:41:16,310 --> 00:41:19,310
you get your cell back awesome

438
00:41:20,839 --> 00:41:27,710
so that's most of the features i wanted
to cover now we want to talk about how

439
00:41:27,710 --> 00:41:30,739
you can get involved

440
00:41:30,739 --> 00:41:33,859
these are the places where you can
contact me or any of the rest of the

441
00:41:33,859 --> 00:41:38,239
ministry team pound metasploit in
freenode is where we spend most of our

442
00:41:38,239 --> 00:41:45,499
time people in there are generally
helpful and the the jerks tend to get

443
00:41:45,499 --> 00:41:52,819
kik band so I try to keep it as simple
as possible and I try to keep it as as

444
00:41:52,819 --> 00:42:00,650
useful and informative as possible so
please come hit us up on on IRC and join

445
00:42:00,650 --> 00:42:08,029
the community the community community .
rapid7 com is our forum and that's a

446
00:42:08,029 --> 00:42:13,910
great place to ask questions and talk
about your experiences with mostly the

447
00:42:13,910 --> 00:42:21,739
and administered on Twitter of course
i'm also Egypt at Twitter and get up

448
00:42:21,739 --> 00:42:28,789
added a new thing called projects which
lets you break up tasks in our combined

449
00:42:28,789 --> 00:42:36,289
tasks into unique chunk are or separate
chunks so you can group issues together

450
00:42:36,289 --> 00:42:43,940
group pull requests together add notes
to them and keep them in a single

451
00:42:43,940 --> 00:42:45,890
location so that you can track them
better

452
00:42:45,890 --> 00:42:49,400
we're going to start trying to use these
they're relatively new we're not certain

453
00:42:49,400 --> 00:42:54,680
how it's going to work out but keeping
on the projects and that is is going to

454
00:42:54,680 --> 00:43:00,440
contain at least for awhile on anything
that we think would be an easy thing for

455
00:43:00,440 --> 00:43:06,049
a new person to pick up and we're trying
to maintain a list of those sorts of

456
00:43:06,049 --> 00:43:10,910
issues so if you want to get started you
want to start writing some code or you

457
00:43:10,910 --> 00:43:13,910
want to start writing documentation this
is where you can go check it out

458
00:43:15,380 --> 00:43:22,430
we're also thinking about doing a
hackathon this isn't in like real works

459
00:43:22,430 --> 00:43:26,839
yet it's just something that we're
thinking about can I see a show of hands

460
00:43:26,839 --> 00:43:30,410
anybody who would be interested in
coming to something like this

461
00:43:30,410 --> 00:43:33,558
yeah awesome that's a lot of hands

462
00:43:33,559 --> 00:43:34,460
fantastic

463
00:43:34,460 --> 00:43:37,640
so we're thinking about having something
in austin so you can come hang out with

464
00:43:37,640 --> 00:43:42,109
the team maybe for like a week maybe
just for a weekend

465
00:43:42,109 --> 00:43:48,380
depends on what people are interested in
and pack all the things right modules

466
00:43:48,380 --> 00:43:56,510
work on bugs create new bugs because
that's usually where i am so yeah I

467
00:43:56,510 --> 00:43:59,900
would love to do this and I don't have
any of the logistics yet because it's

468
00:43:59,900 --> 00:44:06,470
all still very like gleam in my eye sort
of thing but having that number of hands

469
00:44:06,470 --> 00:44:10,790
come up makes me feel really hopeful
about it and i think i think we can make

470
00:44:10,790 --> 00:44:14,240
it happen and I think it would be an
awful lot of fun

471
00:44:14,240 --> 00:44:36,169
so are there any questions obvious troll
is obvious makeup so the question was

472
00:44:37,099 --> 00:44:42,020
HD Moore doesn't have a job we consider
hiring him i think that ship is fun

473
00:44:44,390 --> 00:44:50,900
he now has his own new thing and he
seems to be very happy there we will

474
00:44:50,900 --> 00:45:01,640
continue on without him with his his
distant guidance i think we are very

475
00:45:01,640 --> 00:45:05,868
much following in his footsteps and
upholding the tradition of an awesome

476
00:45:05,869 --> 00:45:10,849
community for creating the tool that
everyone wants to use anybody else

477
00:45:27,109 --> 00:45:27,950
yes

478
00:45:27,950 --> 00:45:33,890
question was about the XOR obfuscation
of of packets immature / and yes that is

479
00:45:33,890 --> 00:45:41,270
the default all interpreter connections
now our X or yeah I hesitate to use the

480
00:45:41,270 --> 00:45:48,800
word encryption because it's it's more
obvious station but yes every and in

481
00:45:48,800 --> 00:45:52,010
fact it's every packet has its own key
its own XR key

482
00:45:52,010 --> 00:45:59,119
any other questions also have some
greats

483
00:45:59,119 --> 00:46:05,030
these are the the top contributors
according to get hub in no particular

484
00:46:05,030 --> 00:46:08,990
order over the last year so please think
all these people

485
00:46:17,290 --> 00:46:18,420
yeah

486
00:46:18,420 --> 00:46:21,420
any questions

487
00:46:26,130 --> 00:46:32,339
most requested features are seeing out
for a long time it was probably power

488
00:46:32,339 --> 00:46:38,220
show integration that are working with
powershell we got a lot of that by

489
00:46:38,220 --> 00:46:44,790
adding the powerful expense extension to
meterpreter we're also looking possibly

490
00:46:44,790 --> 00:46:50,160
integrating with something like Empire
because that was really cool and super

491
00:46:50,160 --> 00:46:52,740
useful and it does powershell better
than we do

492
00:46:52,740 --> 00:46:56,490
so we're looking just taking advantage
of other people's awesome open-source

493
00:46:56,490 --> 00:46:59,970
work anyone else

494
00:46:59,970 --> 00:47:09,419
all right feel free to hit me up on
Twitter or email or whatever please if

495
00:47:09,420 --> 00:47:11,220
you want to work on this plate company

