1
00:00:00,000 --> 00:00:09,210
okay so um technical difficulties with
the slides in the resolution so everyone

2
00:00:09,210 --> 00:00:15,450
just bear with me here but thankfully i
know the slides by heart so it shouldn't

3
00:00:15,450 --> 00:00:22,740
be that much of a problem so hope you're
all having a good day become so far I'm

4
00:00:22,740 --> 00:00:30,960
just do this so there was gonna be a
dope logo there as you can see there's

5
00:00:30,960 --> 00:00:34,079
nothing now but we're gonna be talking
about active directory

6
00:00:34,710 --> 00:00:38,670
we're going to be talking about a tool
that I wrote called crack map exact and

7
00:00:38,670 --> 00:00:45,539
I've been maintaining for the past year
or so now and just two things before i

8
00:00:45,539 --> 00:00:51,329
start out one this is my second time
talking to a fairly large audience so if

9
00:00:51,329 --> 00:00:54,329
i do anything weird or just act
awkwardly just go with it

10
00:00:55,230 --> 00:01:01,078
second the main theme we're going to
talk about active directory from a

11
00:01:01,079 --> 00:01:06,900
fairly offensive side there is going to
be a fairly demo heavy talk hopefully

12
00:01:06,900 --> 00:01:15,810
the demos won't fail them gods be with
me and um we are also with the theme

13
00:01:15,810 --> 00:01:20,850
that I wonder that I want to convey here
is that is what you would be seeing

14
00:01:20,850 --> 00:01:25,500
underneath the the title of the slide
here which is owning active directory

15
00:01:25,500 --> 00:01:29,009
using Active Directory so if you've been
in the fantastic space for a little

16
00:01:29,009 --> 00:01:32,040
while now you probably have heard the
term living off the land right so

17
00:01:32,040 --> 00:01:37,500
basically using built-in Microsoft tools
feature sets protocols and using them

18
00:01:37,500 --> 00:01:43,200
against them and using a minute against
themselves for testing purposes and post

19
00:01:43,200 --> 00:01:47,549
exploitation purposes and this is really
the main theme that see amy was built

20
00:01:47,549 --> 00:01:50,759
upon it

21
00:01:50,759 --> 00:01:54,750
it's been built one completely about
around this main theme so everything

22
00:01:54,750 --> 00:02:01,170
what I'm about to show you again if the
demos don't fail is doing exactly that

23
00:02:01,170 --> 00:02:05,430
there is nothing that's going to be done
that's out of the ordinary in Active

24
00:02:05,430 --> 00:02:08,259
Directory environment

25
00:02:08,258 --> 00:02:13,480
and this is where i would show you who
the obligatory when my slide but I'm so

26
00:02:13,480 --> 00:02:21,280
I work for coal fire labs and my hands
by pleader I'm if you seen some of the

27
00:02:21,280 --> 00:02:26,230
projects that i've been working on i'm a
pretty open source guy i've been working

28
00:02:26,230 --> 00:02:32,290
on a number of projects that hopefully
you can see that that is my github

29
00:02:32,290 --> 00:02:36,519
profile that is my pgp on key base just
in case you want to send me something

30
00:02:36,519 --> 00:02:44,980
and with all things so what is this
thing and up with this with the name

31
00:02:46,569 --> 00:02:52,268
ok so this is a ad pen testing tool this
should be helping you during your

32
00:02:52,269 --> 00:02:57,700
internal assessments it should be
helping you saving a lot of time it went

33
00:02:57,700 --> 00:02:59,619
missing after directory environments

34
00:02:59,620 --> 00:03:03,760
you're probably wondering okay why do we
need yet another one of these tools i'll

35
00:03:03,760 --> 00:03:05,349
explain that in a second

36
00:03:05,349 --> 00:03:08,349
the name is really awkward

37
00:03:08,950 --> 00:03:14,918
this is awesome ok I'm so yeah so
basically see me was based off of these

38
00:03:14,919 --> 00:03:22,930
three tools which again really hard to
see but anyway credit crack SMB map &

39
00:03:22,930 --> 00:03:28,750
SMB exact so these three tools are is
what see me was based off of crack if

40
00:03:28,750 --> 00:03:30,220
you're familiar with it at all

41
00:03:30,220 --> 00:03:37,090
I basically automated executing Mimi
cats on huge environments there was some

42
00:03:37,090 --> 00:03:40,900
implementation issues with that in some
configurations issues with that and

43
00:03:40,900 --> 00:03:47,560
that's what inspired the mainly the
cme's main many cats functionality SMB

44
00:03:47,560 --> 00:03:51,549
map is another tool that came out fairly
recently actually had the pleasure

45
00:03:51,549 --> 00:03:57,669
meeting sean at black hat for the first
time and fun fact was that see any

46
00:03:57,669 --> 00:04:02,440
actually started out as a pull request
to the SNP map project and I just

47
00:04:02,440 --> 00:04:07,840
started hacking on the code and at the
end of a rage code session i just had

48
00:04:07,840 --> 00:04:11,650
something that was completely different
than us in that project so i decided to

49
00:04:11,650 --> 00:04:17,409
start my own little project and then SMB
exactly exactly is pretty much the up

50
00:04:17,409 --> 00:04:18,880
that's much better actually

51
00:04:18,880 --> 00:04:20,529
hope everyone was hearing me

52
00:04:20,529 --> 00:04:26,559
SMB exact I was the is and still is
probably the go-to tool when it comes to

53
00:04:26,560 --> 00:04:31,870
80 pentesting although it does stuff
that i like to call it the pre

54
00:04:31,870 --> 00:04:36,490
powershell arrow way of doing things
such as uploading binary the biscuit

55
00:04:36,490 --> 00:04:40,000
uses windows credentials letter which
i'm not even sure anyone uses that

56
00:04:40,000 --> 00:04:44,020
anymore and it does a lot of stuff that
we don't need to do anymore because

57
00:04:44,020 --> 00:04:50,740
powershell and it's black magic that
enables us to inject arbitrary p add

58
00:04:50,740 --> 00:04:57,520
binary into memory and a whole other
sleuth of things that we don't we can do

59
00:04:57,520 --> 00:05:01,599
a lot more stealthily and as pen testers
we should be striving to do that emulate

60
00:05:01,600 --> 00:05:11,020
real attacks and to give more valuable
to custom value to customers so title

61
00:05:11,020 --> 00:05:16,120
here says I have 99 problems not 99 or
eight problems just FYI

62
00:05:16,630 --> 00:05:24,700
so these eight problems features that i
wanted in a ad tool was a large network

63
00:05:24,700 --> 00:05:29,740
so how many times have you just been
dumped on a large network as a pen

64
00:05:29,740 --> 00:05:33,460
tester and the client goes ok you can
you have to now test this hundred

65
00:05:33,460 --> 00:05:38,440
thousand host network but you only have
a week to do it and good luck with that

66
00:05:38,440 --> 00:05:41,770
like that's that's something that you
know it's going to be fun but it's gonna

67
00:05:41,770 --> 00:05:45,880
take a lot more time than a week at
least at least for me right

68
00:05:45,880 --> 00:05:51,130
and so I wanted something fast i need
something preferably with concurrency

69
00:05:51,130 --> 00:05:57,580
which is not something that previous
tools have done well especially python

70
00:05:57,580 --> 00:06:02,380
tools the built-in threading module and
Python isn't actually concurrency and

71
00:06:02,380 --> 00:06:05,979
this is a point of confusion for a lot
of people that's more concurrent

72
00:06:05,979 --> 00:06:10,870
multitasking which is it completely
different thing

73
00:06:10,870 --> 00:06:14,590
concurrency is actually doing multiple
things at the same time while concurrent

74
00:06:14,590 --> 00:06:18,520
well concurrent multitasking is doing
the same thing across multiple threats

75
00:06:18,520 --> 00:06:24,219
so it's a very different aspect that
it's a point of confusion and see me

76
00:06:24,220 --> 00:06:27,190
kind of solves that by using a
third-party library called G event in

77
00:06:27,190 --> 00:06:30,669
Python which is probably the closest
thing that you'll ever get to

78
00:06:30,669 --> 00:06:32,549
concurrency when it comes to python only

79
00:06:32,550 --> 00:06:39,720
from what I understand and python 2.7
that is the second point of this kind of

80
00:06:39,720 --> 00:06:44,820
useless showing slides at this point but
credential overload so if you've ever

81
00:06:44,820 --> 00:06:48,750
been on a large network the amount of
credentials that you get once you

82
00:06:48,750 --> 00:06:52,260
establish your initial foothold just
increases exponentially from one house

83
00:06:52,260 --> 00:06:52,920
to another

84
00:06:52,920 --> 00:06:55,890
I'm not a statistician or mathematician
and in fact i suck at both of those

85
00:06:55,890 --> 00:07:01,229
things but if you actually did the graph
i bet it would be a quasi exponential

86
00:07:01,230 --> 00:07:06,090
curve and I needed something that would
help me with that right so I need

87
00:07:06,090 --> 00:07:11,190
something to easily correlate specific
credentials to specific resources and

88
00:07:11,190 --> 00:07:19,140
vice versa so that i can easily and
quickly access now just figure out which

89
00:07:19,140 --> 00:07:23,909
credentials I needed to access specific
resource third one is situational

90
00:07:23,910 --> 00:07:28,530
awareness so powerview how many of you
have heard of Power View I bet every

91
00:07:28,530 --> 00:07:33,599
they have pretty much everyone I guess I
so i need i wanted to integrate a lot of

92
00:07:33,600 --> 00:07:37,740
the power of your functionality and I
actually done that by writing a module

93
00:07:37,740 --> 00:07:42,150
system with the modular system which
will get into later and later i'm

94
00:07:42,150 --> 00:07:50,280
actually break up with the fourth one is
but judging by the tion okay well we'll

95
00:07:50,280 --> 00:07:57,750
skip that nature so and the fifth one is
stealth living off the land which is

96
00:07:57,750 --> 00:08:03,900
basically the main theme that see me was
built upon and the 61 is external tools

97
00:08:03,900 --> 00:08:10,560
if you're familiar with SMB exact in any
way you should be aware that it seems

98
00:08:10,560 --> 00:08:13,200
actually uses the passing the hash
toolkit in the back end to perform all

99
00:08:13,200 --> 00:08:18,180
of its tough and if you're using a
custom pentest OS which I know a lot of

100
00:08:18,180 --> 00:08:25,140
you do i do in particular I don't use
cali it's such a pain in the ass to

101
00:08:25,140 --> 00:08:27,150
compile those tools it's not even funny

102
00:08:27,150 --> 00:08:31,890
and actually i have not gotten them to
compile from source even once

103
00:08:32,740 --> 00:08:37,450
so I didn't want anything with external
tools i wanted something that was just

104
00:08:37,450 --> 00:08:43,450
pure python and I wanted it to be the
glue between metasploit and empire so

105
00:08:43,450 --> 00:08:48,339
with that what i mean by that is easily
lobbying shallows between both

106
00:08:48,339 --> 00:08:53,290
frameworks and sharing credentials
between both frameworks bi in on

107
00:08:53,290 --> 00:08:56,020
internal assessments i usually use a
combination of both frameworks just

108
00:08:56,020 --> 00:09:00,910
because the pros of one the day both
have pros and cons and using both kind

109
00:09:00,910 --> 00:09:07,480
of outweighs that those feature sets so
I wanted somebody to easily lob shells

110
00:09:07,480 --> 00:09:18,430
between frameworks and share crackles
between frameworks and the 61 I forget

111
00:09:18,430 --> 00:09:28,449
so we will just get that pic so
thankfully because a lot of people and a

112
00:09:28,450 --> 00:09:32,410
lot of time was invested in other
libraries and projects i didn't have to

113
00:09:32,410 --> 00:09:36,730
start from scratch so I'm just a guy
that just came along and sort of put the

114
00:09:36,730 --> 00:09:38,020
pieces together

115
00:09:38,020 --> 00:09:45,579
thankfully i did not have to start from
scratch at all and these these are the

116
00:09:45,579 --> 00:09:52,060
projects that in theory help me anyway
ok so impact it impacted if you you

117
00:09:52,060 --> 00:09:54,969
should be using impact on every internal
assessment if you're not you're doing it

118
00:09:54,970 --> 00:09:56,500
wrong in my opinion

119
00:09:56,500 --> 00:10:00,520
alberto sordi know which is the guy that
develops it is pretty much a God in my

120
00:10:00,520 --> 00:10:05,050
eyes like I have no clue how keep does
it impact if you're not familiar with

121
00:10:05,050 --> 00:10:10,180
its a library and it comes with a lot of
example scripts that just helps so much

122
00:10:10,180 --> 00:10:13,930
during internal pet contest and kind of
abstracts a lot of the low level

123
00:10:13,930 --> 00:10:20,349
protocols that acting director uses the
second one is a power supply which

124
00:10:20,350 --> 00:10:24,520
proved sure that everyone's familiar
with powers . so i wanted a way of

125
00:10:24,520 --> 00:10:27,550
integrating powersport framework inside
of this tool

126
00:10:28,230 --> 00:10:32,790
and the third one is many cats which
again I don't need to explain we cats

127
00:10:32,790 --> 00:10:40,770
it's pretty much should be used on every
internal assessment so this is a heavy

128
00:10:40,770 --> 00:10:46,560
demo talk demo gods in the past have
been really bad to me so hopefully these

129
00:10:46,560 --> 00:10:54,270
will work this time but we're going to
be simulating a mock contest and usually

130
00:10:54,270 --> 00:10:58,860
getting an initial foothold on a Windows
Active Directory network is that isn't

131
00:10:58,860 --> 00:11:06,360
that hard at all the way my preference
is using SMB relaying which is another

132
00:11:06,360 --> 00:11:11,100
point of confusion ID credentials that
you get with responder those you don't

133
00:11:11,100 --> 00:11:15,090
you don't need to actually crack those
hashes you can just rely them and this

134
00:11:15,090 --> 00:11:20,220
is something i don't think a lot of
people know that ntlm v2 you are able to

135
00:11:20,220 --> 00:11:23,880
realize those hatches without cracking
them and you can do this by really

136
00:11:23,880 --> 00:11:28,590
quickly because this is could be a whole
nother talk on its own you can do this

137
00:11:28,590 --> 00:11:33,660
by turning off the SNB HTTP and https
server that responder has in its

138
00:11:33,660 --> 00:11:39,329
configuration file and then using a real
laying tool I my preferences ntlm relay

139
00:11:39,330 --> 00:11:43,560
that X that the pie which is a example
script that comes with the impact

140
00:11:43,560 --> 00:11:48,180
library and you can use that in
combination with responders just pop

141
00:11:48,180 --> 00:11:55,140
shells from every credential that you
really like and it's awesome but um for

142
00:11:55,140 --> 00:12:07,020
the live demo which we will get to now
for a live demo we're going to be we're

143
00:12:07,020 --> 00:12:12,120
gonna just the company that we're going
to attack we're just gonna pretend that

144
00:12:12,120 --> 00:12:17,550
it's got everything locked out like that
it hasn't be signing enabled so you

145
00:12:17,550 --> 00:12:23,339
can't rely hashes it has every it
doesn't have any multi-gas burkhard

146
00:12:23,340 --> 00:12:28,860
broadcast protocols enabled so you can't
use responder you've tried like

147
00:12:28,860 --> 00:12:33,660
passwords spraying or whatnot doesn't
work and it has everything pache so they

148
00:12:33,660 --> 00:12:39,150
got shit lockdown and you can get
initial foothold but let's pretend that

149
00:12:39,150 --> 00:12:41,810
you did some emotions just like
certainly and you found

150
00:12:41,810 --> 00:12:48,920
and a couple of Active Directory user
names on the web right so my first

151
00:12:48,920 --> 00:12:53,120
approach in that case would be password
spraying so we're just gonna do that

152
00:12:53,900 --> 00:12:58,970
so once you install see me which if you
go to project page there's the

153
00:12:58,970 --> 00:13:02,029
installation guide right there you're
able to invoke it using the CMP command

154
00:13:02,029 --> 00:13:05,870
visit everyone see that by the way is
that don't need to increase the font

155
00:13:06,589 --> 00:13:28,190
yes it's good a bigger fun ok cool to do
that real quick go all the way to 25 ok

156
00:13:28,190 --> 00:13:31,130
this that help is that better

157
00:13:31,130 --> 00:13:40,100
ok everyone see cool ok so i invoke the
actual program either by using cme or

158
00:13:40,100 --> 00:13:46,400
the full name crap exact which is
awkward as hell i know a kind of like

159
00:13:46,400 --> 00:13:52,189
the awkwardness to be frank and the
first thing that I do is just scan the

160
00:13:52,190 --> 00:13:57,320
the subject but I'm attacking right so
I'm book see Amy and I give it the

161
00:13:57,320 --> 00:14:00,650
subnet of the network

162
00:14:00,650 --> 00:14:08,660
ok so thought is big and the resolution
sucks so just go with it

163
00:14:10,400 --> 00:14:19,640
so the output gives you the IP of the
host and the hostname and since you can

164
00:14:19,640 --> 00:14:25,939
actually get OS domain and host name
information without any credentials

165
00:14:25,940 --> 00:14:26,839
whatsoever

166
00:14:26,839 --> 00:14:31,310
it shows you that on the rest of the
line so you can see here that we have

167
00:14:31,310 --> 00:14:38,660
three machines in this domain domain is
called lab we have a windows 613 box

168
00:14:38,660 --> 00:14:45,140
which is a witness to 2012 we have a
windows 6.1 box which windows 7 and

169
00:14:45,140 --> 00:14:50,750
windows 10 box which is windows which is
Windows 10 and the host names are named

170
00:14:50,750 --> 00:14:51,910
appropriately

171
00:14:51,910 --> 00:15:01,030
so let's say that in this mock pentest
you found Bob right Bob is username and

172
00:15:01,030 --> 00:15:07,060
we want to get initial fold so we will
try password spring so see me out of the

173
00:15:07,060 --> 00:15:11,260
box supports that by just passing
multiple username and passwords as

174
00:15:11,260 --> 00:15:15,400
command line arguments with the dash you
and HP flag you specify the username and

175
00:15:15,400 --> 00:15:16,689
password respectively

176
00:15:16,690 --> 00:15:20,230
you can also specify a file containing
those usernames and passwords but for

177
00:15:20,230 --> 00:15:25,150
just for convenience sake specified on
the command line so Bob and we get it

178
00:15:25,150 --> 00:15:32,800
password one and I don't know change me
and password 123

179
00:15:34,600 --> 00:15:46,750
so again resolution Sox apologize for
that but you can see here that the cma

180
00:15:46,750 --> 00:15:53,560
automatically brute forced the
credentials and we prefer to crimes with

181
00:15:53,560 --> 00:15:59,589
which you provided so i tried logging in
with password one change my password 123

182
00:15:59,590 --> 00:16:03,520
and we see we have a successful
authentication with password 123

183
00:16:03,520 --> 00:16:08,890
so Bob really sucks at creating
passwords and were able to authenticate

184
00:16:08,890 --> 00:16:12,340
to all the machines in this is a valid
domain accounts were able to

185
00:16:12,340 --> 00:16:15,340
authenticate to domain

186
00:16:15,850 --> 00:16:20,980
the problem is bob is in a is just a
regular old user doesn't have admin

187
00:16:20,980 --> 00:16:22,270
access so

188
00:16:22,270 --> 00:16:26,050
oh we can't really do much at this point
and one thing that I want to underline

189
00:16:26,050 --> 00:16:29,949
is that seems very much a post
exploitation tool so you can't really do

190
00:16:29,950 --> 00:16:34,750
much with it without a set of
credentials in the first place so we

191
00:16:34,750 --> 00:16:39,790
know that Bob is password is password
123 and we're just going to target one

192
00:16:40,300 --> 00:16:44,020
well actually just going to target the
whole subnet at this point and we're

193
00:16:44,020 --> 00:16:48,040
going to pass it the dash dash shares
argument which is going to enumerate all

194
00:16:48,040 --> 00:16:54,719
the available shares on all the hosts
that we can authenticate to and

195
00:16:54,720 --> 00:17:04,679
and so so on the windows 10 box we have
available shares you have the sea admin

196
00:17:04,679 --> 00:17:09,959
IPC usual and they all seem usual and
the thing that you'll notice here is

197
00:17:09,959 --> 00:17:12,900
that he actually tells you the
permissions that you have on those

198
00:17:12,900 --> 00:17:17,669
shares so it's a really quick and easy
way of identifying what you can access

199
00:17:17,669 --> 00:17:22,919
this way so see that we have no access
to the admin share here we have read

200
00:17:22,919 --> 00:17:28,079
access to ibc which will give us nothing
and everything is kind of standard

201
00:17:28,079 --> 00:17:34,620
except for the windows seven box which
has a share called all the stuff and we

202
00:17:34,620 --> 00:17:41,520
have read access to it so bob has read
access to the share on this machine so

203
00:17:41,520 --> 00:17:48,210
let's take advantage of that right so
see me has built-in spidering support so

204
00:17:48,210 --> 00:17:54,030
we can spider both the files on that
chair but we can also spider the content

205
00:17:54,030 --> 00:18:00,120
of those files on that share and this is
really handy when you have like multiple

206
00:18:00,120 --> 00:18:05,610
word docs on a share and you want to be
able to spider word docs are essentially

207
00:18:05,610 --> 00:18:12,149
zip files with xml Adam and you see me
is able to actually parse those in and

208
00:18:12,150 --> 00:18:17,730
like search for specific pattern or reg
reg ex so I'm just going to specify the

209
00:18:17,730 --> 00:18:24,390
password and with the dash spider option
we tell it to start spotting sorry

210
00:18:24,390 --> 00:18:37,470
Oh perfect and I was going to tell the
share and I think that was one lying to

211
00:18:37,470 --> 00:18:45,990
think it was 12 so we're not gonna
spider every host on the subnet we just

212
00:18:45,990 --> 00:18:49,440
want a spider one you can actually do
that by the way if you wanted the spider

213
00:18:49,440 --> 00:18:53,700
every host a subnet you can do that the
cma because it's just truly it's almost

214
00:18:53,700 --> 00:18:55,620
truly concurrent

215
00:18:55,620 --> 00:19:08,100
I'm just about to share so and a pattern
so I'm just gonna look for pass here and

216
00:19:08,100 --> 00:19:14,879
hopefully it doesn't look that bad from
what you're seeing but you can see that

217
00:19:14,880 --> 00:19:20,190
we successfully authenticated to share
over here using those specified

218
00:19:20,190 --> 00:19:27,330
credentials we started spidering and we
found one file on the share called

219
00:19:27,330 --> 00:19:35,970
password that txt now we can pull down
that file but i can just for interest of

220
00:19:35,970 --> 00:19:40,920
time because we have a lot of conduct to
go through that Pat that the text file

221
00:19:40,920 --> 00:19:45,270
doesn't actually contain credentials
it's just a just a random text file

222
00:19:45,270 --> 00:19:50,040
without credentials so this time I'm
going to actually spider the contents of

223
00:19:50,040 --> 00:19:56,428
the files on that chair and see if we
have any hits you can see we have a

224
00:19:56,429 --> 00:20:03,480
second hit this time and password that
txt always shows up because it does in

225
00:20:03,480 --> 00:20:07,140
this case at the spider the filename it
is search for the pattern the filename

226
00:20:07,140 --> 00:20:12,270
and in the contents so in the first hit
we have passed that THC which was before

227
00:20:12,270 --> 00:20:15,809
and the second hit we have cooking the
txt which as you can see the file name

228
00:20:15,809 --> 00:20:19,470
has makes no sense whatsoever if you
actually want to open that up

229
00:20:19,470 --> 00:20:23,520
it does have credentials in it and
specifically you can see here that the

230
00:20:23,520 --> 00:20:29,070
output shows you so I at offset 75 we
have the match for the pattern password

231
00:20:29,070 --> 00:20:33,059
and in this case that file again in the
interest of time I would usually pull it

232
00:20:33,059 --> 00:20:38,220
down but that file has credentials for
the user Tom so we have another set of

233
00:20:38,220 --> 00:20:41,400
credentials at this point that we can
use and test against the Active

234
00:20:41,400 --> 00:20:48,870
Directory network that we are investing
so Tom and just going forward I just

235
00:20:48,870 --> 00:20:52,649
want to put this in here because it's
just I find that I have a very weird

236
00:20:52,650 --> 00:20:58,170
sense of humor so these are actually
password that i found on gigs just

237
00:20:58,170 --> 00:21:01,559
during internal assessments so Tom here

238
00:21:02,230 --> 00:21:08,830
as the password that 69 pickles and
we're gonna try that we're going to

239
00:21:08,830 --> 00:21:18,428
authenticate to the whole subnet using
those credentials so it's a valid

240
00:21:18,429 --> 00:21:23,080
credentials set you can see here that we
authenticated successfully to all three

241
00:21:23,080 --> 00:21:29,500
machines but if you notice here on the
windows 10 machine we have this little

242
00:21:29,500 --> 00:21:35,380
pwned flag that gets appended to the
authentication and what that means is

243
00:21:35,380 --> 00:21:40,059
that this credential set has admin
access over that host so this is a

244
00:21:40,059 --> 00:21:45,190
really quick way of determining which
credential set which could be granted

245
00:21:45,190 --> 00:21:49,990
that you just pillage from anyone from
whichever method you want a hat which

246
00:21:49,990 --> 00:21:53,440
has admin access over that hosts and
this is where the real fun begins with c

247
00:21:53,440 --> 00:21:57,160
me because once you have admin access
over that hosts you can use the modular

248
00:21:57,160 --> 00:22:02,770
system you can execute commands so we
have admin access over the windows 10

249
00:22:02,770 --> 00:22:10,570
box which is at eleven of oracle
correctly yes said 11 so before we do

250
00:22:10,570 --> 00:22:18,100
anything really noisy let's just do some
really quick recon and see what we can

251
00:22:18,100 --> 00:22:26,020
we get from the box at eleven so what I
like doing is first we had already

252
00:22:26,020 --> 00:22:32,620
eliminated the shares so we can try in
rating logon users and you can see that

253
00:22:32,620 --> 00:22:41,590
there aren't any log on users which is
normal because my pm's correct

254
00:22:42,190 --> 00:22:45,190
let's just open that up real quick

255
00:22:53,560 --> 00:23:00,190
you're performing an interactive logon
here so you actually see that it's

256
00:23:00,190 --> 00:23:06,520
integrating logon users and again all of
this is using built-in all this is being

257
00:23:06,520 --> 00:23:10,510
performed using win32 api calls so if
you actually want to analyze all this

258
00:23:10,510 --> 00:23:18,820
traffic you wouldn't see anything out of
the ordinary but the main traffic so tom

259
00:23:18,820 --> 00:23:25,149
is now logged on and we knew Mary logon
users and you can see that this time tom

260
00:23:25,150 --> 00:23:35,830
was over there hopefully that's not that
bad but tom is log on to that machine we

261
00:23:35,830 --> 00:23:43,750
can also see if there any sessions there
aren't any sections so no active

262
00:23:43,750 --> 00:23:50,980
sessions on that machine but what we can
do is we can use a payload module so see

263
00:23:50,980 --> 00:23:55,810
me influence a concept called peeler
models which are basically just

264
00:23:55,810 --> 00:24:03,370
powershell payloads that are custom made
to do certain things on host that you

265
00:24:03,370 --> 00:24:09,159
have admin access to so in this case I'm
going to use the power view hill module

266
00:24:09,160 --> 00:24:13,780
and I apologize again but power
repealing module which is basically just

267
00:24:13,780 --> 00:24:21,399
a wrapper for all of the Power View
functions and what this does is but so

268
00:24:21,400 --> 00:24:28,600
first of all let's execute the module so
i'm specifying with the dash and the

269
00:24:28,600 --> 00:24:35,080
capital FM flag the module I want to run
and what this does really quickly

270
00:24:35,080 --> 00:24:42,669
is it hosts the power view that ps1
powershell script locally over https I

271
00:24:42,670 --> 00:24:47,740
then execute a powershell i x-rayed on
locust brush and cradle to download that

272
00:24:47,740 --> 00:24:52,240
powershell script in memory and then
execute without whichever command that

273
00:24:52,240 --> 00:24:59,160
we specify so in this case I we're going
to specify get net

274
00:24:59,160 --> 00:25:05,730
group member i recall correctly that's
the correct part of your function

275
00:25:09,600 --> 00:25:12,810
oh yes that's correct thank you

276
00:25:13,560 --> 00:25:22,770
so I can specify that so what is going
to do it's going to go out its gonna

277
00:25:22,770 --> 00:25:31,500
execute a powershell one-liner over wmi
and then it's going to pull down the

278
00:25:31,500 --> 00:25:37,920
powershell script over HTTPS and it's
going to execute that command that we

279
00:25:37,920 --> 00:25:46,410
specified so you can see here that we
got a call back so the host successfully

280
00:25:46,410 --> 00:25:52,020
pull down the powershell script and it
posted back again over https so this is

281
00:25:52,020 --> 00:26:01,470
a completely encrypted channel it posted
back the result of that our view man and

282
00:26:01,470 --> 00:26:06,720
you can see here that the group name is
domain admins so we enumerate

283
00:26:06,720 --> 00:26:13,620
successfully all of the domain admins in
the environment using power view and we

284
00:26:13,620 --> 00:26:17,159
have two members of the domain admins
group we have palace

285
00:26:17,160 --> 00:26:26,040
it's a year and the edges standard
administrative domain admin account so

286
00:26:26,040 --> 00:26:31,320
we have some situational awareness
already we can also just directly

287
00:26:31,320 --> 00:26:36,810
execute without using the payload module
system we can just directly execute

288
00:26:36,810 --> 00:26:43,620
commands since we are we have admin
access to this host so say we wanted to

289
00:26:43,620 --> 00:26:49,860
execute ipconfig using the dash X flag
we can just execute standard commands

290
00:26:49,860 --> 00:27:00,270
and all of this is being performed
completely filus so the standard the

291
00:27:00,270 --> 00:27:05,070
default method of execution for cme it
supports is w my it does support other

292
00:27:05,070 --> 00:27:09,389
mixes methods of execution which are
similar to PS exact

293
00:27:09,990 --> 00:27:14,400
and eighty exact which BTW exact is
basically way of executing commands

294
00:27:14,400 --> 00:27:19,260
through windows task scheduler but the
standard method of execution of simi is

295
00:27:19,260 --> 00:27:26,520
a wmi so you can see here that we
successfully executed the ipconfig bang

296
00:27:26,520 --> 00:27:35,040
and this is the output for that host so
let's say we wanted to do something now

297
00:27:35,040 --> 00:27:41,370
a little bit more noisy I see me comes
with a meanie cats module and it does

298
00:27:41,370 --> 00:27:43,379
exactly what it sounds like

299
00:27:43,380 --> 00:27:50,100
so it's just basically downloads me cats
in memory and execute it and post back

300
00:27:50,100 --> 00:27:59,100
the output via a PhDs you can see here
that it's kind of the way the https

301
00:27:59,100 --> 00:28:05,159
servers implemented its kind of smart it
won't exit out until all of the host

302
00:28:05,160 --> 00:28:10,230
that executed a command on will post
back their output so we've successfully

303
00:28:10,230 --> 00:28:18,510
executed me cats on this host and we
have three hits and i have no clear no

304
00:28:18,510 --> 00:28:22,830
really confused why it gave us
credentials here because it's a Windows

305
00:28:22,830 --> 00:28:27,059
10 box and shouldn't have either clear
check with Exponential's but ok I'll

306
00:28:27,059 --> 00:28:33,300
just go with it and so we have a hash
for user Tom and we have the password

307
00:28:33,300 --> 00:28:39,870
for user Tom as expected you can i'm
just gonna skip ahead here but just to

308
00:28:39,870 --> 00:28:42,000
show you how fast this is

309
00:28:42,000 --> 00:28:45,809
I've it's not recommended but I have
once or twice

310
00:28:46,500 --> 00:28:54,900
meerkats the / 24 and it's it's not it's
noisy but it's actually pretty fast so

311
00:28:54,900 --> 00:28:59,910
if i wanted to execute me Kat I'm just
gonna use the domain admin password here

312
00:28:59,910 --> 00:29:07,350
and again this is another real password
that i found so pound of kicks ass

313
00:29:08,620 --> 00:29:24,580
and licks but yep and may use different
this creatively password is create a

314
00:29:24,580 --> 00:29:28,629
password on the / 24 I'm going to excuse
me cats on all three boxes at the same

315
00:29:28,630 --> 00:29:35,710
time and I mess something up on the room
so let's try it again and kicks

316
00:29:35,710 --> 00:29:38,710
oh yes there you go thank you sir

317
00:29:39,340 --> 00:29:44,500
yes that worked thanks um ok well it
worked on

318
00:29:44,500 --> 00:29:51,970
yeah it worked so we've executed a
Democrats on all three hosts so we got

319
00:29:51,970 --> 00:30:02,980
two and two call back so far and this is
the credentials for the Windows Windows

320
00:30:02,980 --> 00:30:07,600
10 box and this is the crunches for the
windows seven blocks and we should also

321
00:30:07,600 --> 00:30:11,320
be getting transferred from the domain
controller yes there they are so we've

322
00:30:11,320 --> 00:30:16,360
executed many cats on three hosts at the
same time and under what that was like

323
00:30:16,360 --> 00:30:28,330
10 5 10 seconds so we have had not going
back to the pen test mark pentas we have

324
00:30:28,330 --> 00:30:32,470
admin access to in the sandbox we want
to try to move laterally now at this

325
00:30:32,470 --> 00:30:40,570
point so the most common configuration
that I find on domain networks are local

326
00:30:40,570 --> 00:30:45,040
administrator passwords that are the
same between multiple computers and

327
00:30:45,040 --> 00:30:49,750
either those were pushed out be a new
policy or whatever that is the most

328
00:30:49,750 --> 00:30:59,230
common configuration that I find and i'm
going to use Tom again and I'm going to

329
00:30:59,230 --> 00:31:04,840
specify the dash Sam flag and this guy's
what you think it does it just dumps the

330
00:31:04,840 --> 00:31:07,840
local Sam database from the machine

331
00:31:10,040 --> 00:31:22,790
the note is that one okay so you can see
here that we've successfully dumpy Sam

332
00:31:22,790 --> 00:31:28,430
hashes from the windows 10 machine and
this is the administrator the local

333
00:31:28,430 --> 00:31:33,290
administrators password hash right let's
see if I again

334
00:31:33,290 --> 00:31:39,350
yeah okay that should work so now since
I've dumped the Sam hashes from the

335
00:31:39,350 --> 00:31:42,530
windows 10 machine i'm going to try and
authenticate locally with that

336
00:31:42,530 --> 00:31:46,820
administrator password hash the rest of
the machines to see if thats that

337
00:31:46,820 --> 00:31:52,189
mosquito ms configuration in that
environment is actually the case so user

338
00:31:52,190 --> 00:31:57,680
name administrator and we're gonna with
the dash a capital H flag we specify the

339
00:31:57,680 --> 00:32:06,500
local administrator hash theory yes
there it is that's d just a ntlm hash of

340
00:32:06,500 --> 00:32:10,790
that account and i'm going to pass the
bash Dash local flag which will tell it

341
00:32:10,790 --> 00:32:15,290
to authenticate locally to every machine
instead of domain wide and see what

342
00:32:15,290 --> 00:32:33,770
happens and we have oh yes that's
correct that's oh yeah and this we don't

343
00:32:33,770 --> 00:32:36,290
need which is why aired out

344
00:32:36,290 --> 00:32:46,129
ok so that again so you can see with
this account we have now admin access to

345
00:32:46,130 --> 00:32:51,140
another host before we had an axis only
windows 10 windows 10 machine now we

346
00:32:51,140 --> 00:32:56,000
have admin access to windows 7 machine
because they configured the local

347
00:32:56,000 --> 00:33:04,790
minister accounts with the same password
between multiple machines so now we can

348
00:33:04,790 --> 00:33:10,760
execute payload modules on that machine
too so if i wanted the execute me cats

349
00:33:10,760 --> 00:33:17,450
on the windows 7 machine let me just log
into that real quick because this

350
00:33:18,029 --> 00:33:43,679
stop working ok cool so I'm logged in
now and I can now use the admit this

351
00:33:43,679 --> 00:33:49,710
local administrator password hash to
execute against again and work because

352
00:33:49,710 --> 00:34:02,609
specify cash local ok so let's see we
successfully pass the hash authenticated

353
00:34:02,609 --> 00:34:08,219
locally to both of those machines and we
have credentials now I'm both of those

354
00:34:08,219 --> 00:34:16,589
machines so here the password for Alice
now again I'm just showing up i'm

355
00:34:16,589 --> 00:34:22,168
showing you this on three vm because i
have a laptop and for demo purposes this

356
00:34:22,168 --> 00:34:28,500
is fine but you got to do something / 24
12 / 16 although not recommended and it

357
00:34:28,500 --> 00:34:30,629
would probably be pretty fast

358
00:34:30,629 --> 00:34:34,949
by default see any spins up a hundred
concurrent threads you can specify more

359
00:34:34,949 --> 00:34:44,788
threads if you're if you want to do a /
16 with the dash T option so you can

360
00:34:44,789 --> 00:34:49,950
specify maybe like him in like 2 or 500
concurrent threads if you want to but

361
00:34:49,949 --> 00:34:57,089
yeah it is pretty fast and this is now i
want to tell you a little bit about the

362
00:34:57,089 --> 00:35:02,308
database so everything that we've done
so far now has been passively log to the

363
00:35:02,309 --> 00:35:09,329
database and see any ships with a
command line program called see me TV

364
00:35:09,329 --> 00:35:15,329
and i'm running extremely late so cmed
is just a client interface to the

365
00:35:15,329 --> 00:35:20,609
backend database of cma and if you're
all familiar with Empire or metasploit

366
00:35:20,609 --> 00:35:25,799
you should feel at home here with
credentials with the credits command it

367
00:35:25,799 --> 00:35:30,180
just shows you all the credentials that
you used so far and going back to the

368
00:35:30,180 --> 00:35:31,629
three

369
00:35:31,630 --> 00:35:34,660
like the eighth features that that I've
always wanted to see in one of these

370
00:35:34,660 --> 00:35:42,038
tools I this pretty much does it so you
can see here that it automatically logs

371
00:35:42,039 --> 00:35:47,109
all the credentials that used so Alice
the domain administrator password at the

372
00:35:47,109 --> 00:35:52,328
main administrator account that we used
before I has admin access on three hosts

373
00:35:52,329 --> 00:35:58,119
so it automatically tells you it
automatically logs the admin access of

374
00:35:58,119 --> 00:36:03,670
each account so Tom here's at Max's over
one host and so on and so forth and if

375
00:36:03,670 --> 00:36:12,220
you specify the actual account with the
credits command it shows you which host

376
00:36:12,220 --> 00:36:18,519
is that it has admin access on so Alice
here no wrong one

377
00:36:19,059 --> 00:36:27,039
so Alice here has admin access to these
three machines so this is if you're if

378
00:36:27,039 --> 00:36:32,170
you've done a deep investing in the past
this should be a hell of a time saver

379
00:36:32,170 --> 00:36:37,869
just because it allows you to quickly
correlate the credential set to specific

380
00:36:37,869 --> 00:36:42,430
resource that as admin access to and
vice versa and every host that CMV

381
00:36:42,430 --> 00:36:46,450
touches is also logged as well perform
this correlation so if we specify if we

382
00:36:46,450 --> 00:36:52,779
ran the host command these are all the
machines that we've touched so far so

383
00:36:52,779 --> 00:36:58,059
the domain controller windows 10 box in
the sandbox and it shows you that ok

384
00:36:58,059 --> 00:37:01,900
the domain controller has one
credentials with admin access to it and

385
00:37:01,900 --> 00:37:09,640
so on and so forth and with this is a
new feature actually which I've just

386
00:37:09,640 --> 00:37:16,089
implemented so if you rent run the
meerkats a pillow module on machines it

387
00:37:16,089 --> 00:37:22,420
actually shows you from what machine you
pillage that credential from so here

388
00:37:22,420 --> 00:37:30,220
politics with a resolution again you can
see that the host ID from which the this

389
00:37:30,220 --> 00:37:34,269
credential was taken from his number
three so if i want to find out which

390
00:37:34,269 --> 00:37:36,970
host is number three edges to host three

391
00:37:36,970 --> 00:37:42,310
and you can see that that was taken from
the windows seven box so again for

392
00:37:42,310 --> 00:37:47,049
reporting purposes and just for
long-term engagements this should be a

393
00:37:47,050 --> 00:38:00,040
time-saver so I'm see me comes with a
bunch of modules which because what I'm

394
00:38:00,040 --> 00:38:05,349
running so late on time i will show you
just really quickly and this font is

395
00:38:05,349 --> 00:38:11,109
really small but we're going to go with
it really quickly that you can actually

396
00:38:11,109 --> 00:38:18,609
get shells on a / 24 either using Empire
or metasploit using see me

397
00:38:19,150 --> 00:38:29,349
so if we use the domain add admin
password again want to do that

398
00:38:29,349 --> 00:38:36,580
oh nice try . and because if i can just
see if I have this in my yes

399
00:38:36,580 --> 00:38:45,460
cool ok so the Met inject module and
this does what it sounds like

400
00:38:45,460 --> 00:38:51,910
so it directly inject meterpreter into
memory using powershell and specify the

401
00:38:51,910 --> 00:38:58,149
module using the dash and flag and we
specify the host using a dash of black

402
00:38:58,150 --> 00:39:03,040
so it accepts our intimate a child
module can accept arguments and you can

403
00:39:03,040 --> 00:39:06,400
specify them using the key value style
like msf venomous you're familiar with

404
00:39:06,400 --> 00:39:13,839
it so ls VL host would be 192 168 that
wants you to that one and the old port

405
00:39:13,839 --> 00:39:21,369
would be 8443 ok that should all work I
over here

406
00:39:21,940 --> 00:39:28,540
I don't want to restart the metasploit
instance but we have a reverse https

407
00:39:28,540 --> 00:39:32,290
handler setup and we have no sessions
currently active

408
00:39:36,640 --> 00:39:42,069
and I don't want it around three

409
00:39:42,700 --> 00:39:52,689
ok so we successfully executed the
initial payload launcher on all three

410
00:39:52,690 --> 00:39:57,130
machines and this is going to call back
and download invoke shellcode at ps1

411
00:39:57,130 --> 00:40:01,809
script which is part of the power supply
framework and if we go back here we have

412
00:40:01,809 --> 00:40:07,000
received we already are getting shells
Amy's the second shelf from the domain

413
00:40:07,000 --> 00:40:12,130
controller in the first shell from the
windows 7 machine just to show you that

414
00:40:12,130 --> 00:40:24,220
I'm not lying i think yes and that's the
third shell coming in right now so she

415
00:40:24,220 --> 00:40:28,000
wanted to you could just pop shelves on
$MONTH / 24 how cool is that

416
00:40:28,599 --> 00:40:40,059
and you can do the same thing with
Empire so this is I have three or four

417
00:40:40,059 --> 00:40:42,009
minutes so really quickly

418
00:40:42,009 --> 00:40:45,099
this is if you're familiar if you've
ever used to in the past this is just a

419
00:40:45,099 --> 00:40:50,200
bog-standard functionality that comes
with the new feature that I will be

420
00:40:50,200 --> 00:40:54,669
releasing after this talk is module
training so really quickly

421
00:40:55,269 --> 00:41:01,629
this allows you to chain as the name
implies multiple modules together and we

422
00:41:01,630 --> 00:41:07,569
can do crazy stuff using this technique
like using a blocker bypasses so if

423
00:41:07,569 --> 00:41:11,829
you're familiar with sub t know if he's
in the audience or not but if you are i

424
00:41:11,829 --> 00:41:17,470
owe you a drink but he's come out with a
gazillion a pocket bypasses and you

425
00:41:17,470 --> 00:41:21,700
should definitely follow on twitter and
I've implemented a lot of his bypasses

426
00:41:21,700 --> 00:41:29,529
ncme so with the new flag dash MC we can
actually change modules together using a

427
00:41:29,529 --> 00:41:34,240
specific syntax that i will be
documenting after this

428
00:41:36,800 --> 00:41:44,300
yes yes it it will be after this so I'm
there's another modern see me called com

429
00:41:44,300 --> 00:41:49,400
exact and what this does is it uses a
calm scriptlet to bypass AppLocker and

430
00:41:49,400 --> 00:41:54,080
you can run commands using this method
on a fully on a windows machine using a

431
00:41:54,080 --> 00:42:05,900
blocker so i'm going to use this bypass
to execute many cats so the syntax i

432
00:42:05,900 --> 00:42:09,620
would show you the slides but as you
previously saw it's probably not a good

433
00:42:09,620 --> 00:42:16,160
idea so it's this this is probably this
is the best way I could figure out how

434
00:42:16,160 --> 00:42:19,819
to implement this I'm totally open the
suggestion so if anyone else has a

435
00:42:19,820 --> 00:42:23,540
better way of doing this please let me
know but currently we do you specify the

436
00:42:23,540 --> 00:42:28,430
module name and if you two to indicate
that you want to change the module you

437
00:42:28,430 --> 00:42:32,000
just do a little ass quiero
representations of the equals greater

438
00:42:32,000 --> 00:42:36,320
than sign and then specify the second
module that you want chain into so we're

439
00:42:36,320 --> 00:42:39,770
going to be executing an app Locker
bypass which will then execute many cats

440
00:42:39,770 --> 00:42:48,470
on the host and yes you're absolutely
correct glad you are all paying

441
00:42:48,470 --> 00:42:58,250
attention so we have now for callbacks
because again this chain the modules

442
00:42:58,250 --> 00:43:02,600
together so I'm you can see we have
already occurred just kidding and so the

443
00:43:02,600 --> 00:43:06,200
first callback that we have is that SCT
file which is the conscript that

444
00:43:06,200 --> 00:43:10,819
actually execute many cats then we
actually get a callback for the invoke

445
00:43:10,820 --> 00:43:15,560
me cat script so we successfully
bypassed AppLocker and we've executed

446
00:43:15,560 --> 00:43:23,540
many cats on the host and currently this
system only support so in theory this

447
00:43:23,540 --> 00:43:31,370
should work just indefinitely with a
complete undefined amount of modules so

448
00:43:31,370 --> 00:43:36,500
if i wanted to for example from this app
Locker bypass change into another module

449
00:43:36,500 --> 00:43:43,580
that supports chaining so rundll32 exact
and Mimi cats i could do that as well

450
00:43:44,400 --> 00:43:50,309
me for a reason unknown to me yet
there's a bug which only allows you to

451
00:43:50,309 --> 00:43:55,109
have to chain two modules together but
i'll be working on that and the idea is

452
00:43:55,109 --> 00:43:58,828
that you'll be able to change a infinite
number and chain and infant infinite

453
00:43:58,829 --> 00:44:03,539
number of modules together so that you
can really quickly and easily automate

454
00:44:03,539 --> 00:44:09,119
these bypasses and back post
exploitation techniques

455
00:44:09,119 --> 00:44:15,869
there's also for example a UAC filus you
AC bypass which was released i think a

456
00:44:15,869 --> 00:44:20,970
month ago at this point using the event
viewer matin event your work program

457
00:44:20,970 --> 00:44:27,689
which is standard in CA me and I don't
think I'm people to show you that just

458
00:44:27,690 --> 00:44:33,180
because of because I'm already over but
that is the new feature that I will be

459
00:44:33,180 --> 00:44:37,200
releasing of this talk and hopefully
you'll see the value of this that you'll

460
00:44:37,200 --> 00:44:41,189
be able to quickly in automatically
utilize all these bypasses and all of

461
00:44:41,190 --> 00:44:48,839
these techniques UAC bypasses to execute
payloads on the host and saving a lot of

462
00:44:48,839 --> 00:44:51,839
time

463
00:44:53,910 --> 00:44:59,339
yeah

464
00:45:00,700 --> 00:45:05,020
appreciate that you have any questions
please let me know but we are out of

465
00:45:05,020 --> 00:45:06,970
time so thank you for coming

