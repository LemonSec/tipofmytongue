1
00:00:00,000 --> 00:00:05,279
now because I was there it was awesome
wasn't it was really nice it was like

2
00:00:05,279 --> 00:00:07,080
one of the highlights of my trip so far

3
00:00:07,080 --> 00:00:10,410
his method man here

4
00:00:10,410 --> 00:00:14,490
oh because I tweeted him last night

5
00:00:15,960 --> 00:00:24,930
pickup so good morning there be con yeah
that's that's a good response for having

6
00:00:24,930 --> 00:00:26,250
been up so late

7
00:00:26,250 --> 00:00:31,800
this is attacking evil Corp anatomy of a
corporate hat i'm sean and I'm we'll

8
00:00:31,800 --> 00:00:35,280
just a little bit about us

9
00:00:35,280 --> 00:00:39,660
I am I'm little straighter my handle on
Twitter's arm joy I'm a security

10
00:00:39,660 --> 00:00:44,489
researcher and contesta red team her for
various groups adapted threat division

11
00:00:44,489 --> 00:00:48,029
I've written a lot of code I've
developed a lot of our tool set some

12
00:00:48,030 --> 00:00:51,570
kind of a co-founder was one of the big
developers on the veil framework

13
00:00:51,570 --> 00:00:58,559
powershell Empire python Empire
hydropower up our view help with

14
00:00:58,559 --> 00:01:01,649
bloodhound which are going to cover a
bit during this presentation along with

15
00:01:01,649 --> 00:01:04,170
a few other for the work needs to work
on that with me

16
00:01:04,170 --> 00:01:08,909
Microsoft power shown DP I'm spoken a
few conferences about yesterday

17
00:01:08,909 --> 00:01:12,900
that's a derby khan had a great time I
spoke a couple years ago so one of my

18
00:01:12,900 --> 00:01:17,549
favorite conferences for sure but show
of hands who uses either Empire veil

19
00:01:17,549 --> 00:01:21,869
framework power of your power up on a
regular basis all that's what makes me

20
00:01:21,869 --> 00:01:28,530
happy so awesome lots of pwnage so I'm
Sean metcalf founder Trimark a security

21
00:01:28,530 --> 00:01:32,610
company Microsoft Certified Master in
Active Directory what about a hundred in

22
00:01:32,610 --> 00:01:33,509
the world

23
00:01:33,509 --> 00:01:40,290
microsoft MVP like my good friend will
hear spoken black hat defcon besides and

24
00:01:40,290 --> 00:01:43,979
Derby condom really happy to be here and
there we can love Der Beek on the

25
00:01:43,979 --> 00:01:48,060
security consultant and researcher and I
own and operate 80 security at org who's

26
00:01:48,060 --> 00:01:50,250
heard of are used 80 security at work

27
00:01:50,250 --> 00:01:55,439
awesome so are the setup for this is
gonna be a little different than your

28
00:01:55,439 --> 00:01:57,089
standard conference talk

29
00:01:57,090 --> 00:02:02,880
ah we're gonna put on a skit for the
next 30 minutes so we're actually going

30
00:02:02,880 --> 00:02:06,720
to shift from being Sean and will the
nice guys

31
00:02:06,720 --> 00:02:10,949
that you like to hang out with and I'm
going to turn into convert myself into

32
00:02:10,949 --> 00:02:16,440
the CIO of décor evil court right and
i'm going to talk about how perfect our

33
00:02:16,440 --> 00:02:19,680
security is how we have great security

34
00:02:19,680 --> 00:02:23,790
it's huge right and then we'll is going
to come up and he's gonna go

35
00:02:23,790 --> 00:02:26,790
no no not actually kind of sucks and I'm
going to show you why

36
00:02:27,390 --> 00:02:30,600
so then after the skit we're going to
switch back to a standard slide

37
00:02:30,600 --> 00:02:35,489
presentation and we're going to show you
the mitigations that should have been in

38
00:02:35,490 --> 00:02:39,030
place for could have been in place to
resolve those issues that were about

39
00:02:39,030 --> 00:02:42,030
show so this is where we switch

40
00:02:56,760 --> 00:03:04,320
hello and began how are you today i am
the CEO of igor the most secure Network

41
00:03:04,320 --> 00:03:10,170
ever we have a very large global Active
Directory environment with lots of

42
00:03:10,170 --> 00:03:14,130
domains we do lots of security with
active directory to make sure everything

43
00:03:14,130 --> 00:03:18,870
is in good shape got hundreds of domain
controllers we've got hundreds of

44
00:03:18,870 --> 00:03:23,940
thousands of endpoints thousands of
servers all over the world we have data

45
00:03:23,940 --> 00:03:27,870
centers to make sure things are
physically secure and we have offices

46
00:03:27,870 --> 00:03:32,550
all over and these are well connected
but we also have executives and other

47
00:03:32,550 --> 00:03:35,459
people that work from home and have
mobile devices so we have challenges

48
00:03:35,459 --> 00:03:39,510
with that so we make sure we have really
great security and of course we have a

49
00:03:39,510 --> 00:03:42,660
perimeter network for our customers and
our suppliers much like any other

50
00:03:42,660 --> 00:03:46,769
network and we have our internal
corporate network protected by firewalls

51
00:03:46,769 --> 00:03:51,480
not just any firewalls these are
next-gen firewalls

52
00:03:53,780 --> 00:04:00,319
we have web content filters that filter
out all of the bad code in fact it looks

53
00:04:00,319 --> 00:04:05,630
of the evil bit goes know we've got
email security appliances that say

54
00:04:05,630 --> 00:04:11,750
viruses not today we have VPN security
using two-factor authentication so

55
00:04:11,750 --> 00:04:16,190
there's no way that anyone who's not
authorized that I haven't signed a form

56
00:04:16,190 --> 00:04:23,510
for can get on our network we have
endpoint security antivirus kids hip

57
00:04:23,510 --> 00:04:29,750
sees we've got all those things
ultimately a court security is the best

58
00:04:29,750 --> 00:04:32,840
and we're unhackable

59
00:04:36,950 --> 00:04:40,490
I'm sorry this gentleman up yet you are
you saying that you don't think were

60
00:04:40,490 --> 00:04:45,020
awesome and okay why don't you come up
here let's see what you can do with your

61
00:04:45,020 --> 00:04:46,159
name sir

62
00:04:46,160 --> 00:04:51,530
hey well come on out yeah I go cioè
part so here's my here's my computer

63
00:04:51,530 --> 00:04:54,559
let's let's see what we're talking about
here

64
00:04:54,560 --> 00:04:57,680
alright so we're going to have kind of
five different sections with this so the

65
00:04:57,680 --> 00:05:00,979
first one of the first things you
mentioned was kind of like

66
00:05:00,979 --> 00:05:05,180
categorization web filtering kind of
next-gen expo yeah absolutely we have

67
00:05:05,180 --> 00:05:09,770
web categorization with our web content
filtering and so that way users can't go

68
00:05:09,770 --> 00:05:13,820
to any bad sites sure so this is
essentially a solved problem by the

69
00:05:13,820 --> 00:05:17,930
search engine optimization community so
we have a kind of a proof-of-concept

70
00:05:17,930 --> 00:05:22,520
tool that will be releasing later in the
year after its cleaned up old eminent

71
00:05:22,520 --> 00:05:26,960
domain it will search a number of
different sites like one of the our

72
00:05:26,960 --> 00:05:32,840
favorites are domkop calm so it will
look for domains that have just expired

73
00:05:32,840 --> 00:05:36,919
within the last couple of days that are
already aged out and categorized so

74
00:05:36,919 --> 00:05:41,150
beyond just the categorization issue we
see domain age is normally like a pretty

75
00:05:41,150 --> 00:05:45,320
big pretty big problem sometimes for for
getting exhale out but in general for

76
00:05:45,320 --> 00:05:49,310
the last year-and-a-half first Oh giving
characterization exhale hasn't been an

77
00:05:49,310 --> 00:05:50,330
issue for us

78
00:05:50,330 --> 00:05:54,950
I'm you see down here the eminent domain
will actually search for wild card type

79
00:05:54,950 --> 00:05:59,479
terms that are similar to whatever your
targeted so you're evil corporation com

80
00:05:59,479 --> 00:06:01,700
we actually purchase that

81
00:06:01,700 --> 00:06:05,539
oh wait a second you purchase one of my
domain names can you do that

82
00:06:05,540 --> 00:06:09,140
sorry you purchase one of my domain
names oh no it's just a similar kind of

83
00:06:09,140 --> 00:06:13,610
Snarf's domain but it was a child but it
wasn't categorized so this is a

84
00:06:13,610 --> 00:06:17,870
theoretical categorization page that we
absolutely did not actually submit to

85
00:06:17,870 --> 00:06:24,920
arm and this is actually a response
email that totally doesn't have the site

86
00:06:24,920 --> 00:06:28,130
categorize for your evil corporation com

87
00:06:28,130 --> 00:06:32,450
so you know this came in about two days
ago so normally turnaround time is only

88
00:06:32,450 --> 00:06:35,510
about a day or so for these types of
things if you set up legitimate looking

89
00:06:35,510 --> 00:06:39,710
content or if you want to be really
sneaky after you buy a domain that had

90
00:06:39,710 --> 00:06:44,120
just expired go to archive.org slow down
the old content and set it up on what

91
00:06:44,120 --> 00:06:48,230
whatever the existing thing is so
doesn't skip a beat you know you have

92
00:06:48,230 --> 00:06:50,990
the site went down for one day at
transfer donors and then you just

93
00:06:50,990 --> 00:06:54,680
resubmit to whatever categorization you
want saying like oh my gosh what i don't

94
00:06:54,680 --> 00:07:02,930
understand I've been around for 10 years
back on goal so that's pretty much the

95
00:07:02,930 --> 00:07:07,430
categorization so hold on a second
you're saying that you can get around my

96
00:07:07,430 --> 00:07:10,490
web content filtering and get the
categorization that we do all the time

97
00:07:10,490 --> 00:07:14,840
by either buying a domain that's already
categorized or setting one up and then

98
00:07:14,840 --> 00:07:17,869
just yet getting guys are awesome

99
00:07:17,870 --> 00:07:20,420
the next one of the next things you
mentioned as far as a next-gen kind of

100
00:07:20,420 --> 00:07:23,930
next-gen email filtering you have oh
alright

101
00:07:23,930 --> 00:07:29,900
absolutely yeah that's great you have to
have a on or externally are not yet but

102
00:07:29,900 --> 00:07:34,489
it's in the woods so it's it's one of
our favorite things that hit to wear if

103
00:07:34,490 --> 00:07:38,330
we see any kind of external interface if
you guys aren't doing this you

104
00:07:38,330 --> 00:07:42,650
absolutely should is just do a cyclone
or just do a credit stealer social

105
00:07:42,650 --> 00:07:47,179
engineering tool can do this we tend to
do it manually so just having like

106
00:07:47,180 --> 00:07:51,380
really simple PHP snippet that will
clone you know save off whatever the

107
00:07:51,380 --> 00:07:55,850
creds are when people go through to the
kind of spoofed login page and then we

108
00:07:55,850 --> 00:08:00,260
actually redirected with legitimate
login information so really really easy

109
00:08:00,260 --> 00:08:04,700
and efficient email out on if you if you
get through with the with a couple

110
00:08:04,700 --> 00:08:07,490
people with the domain you don't
actually have to get your payloads by

111
00:08:07,490 --> 00:08:11,599
you have to get your creds login 20 and
then restore fish internally can

112
00:08:11,599 --> 00:08:16,490
actually craft a lot of your messages
much more kind of targeted because you

113
00:08:16,490 --> 00:08:19,550
can read through these in email
correspondence so you don't kind of hit

114
00:08:19,550 --> 00:08:23,900
that security uncanny valley to or maybe
the signature is just a bit off or you

115
00:08:23,900 --> 00:08:26,179
know if you address somebody a little
bit differently and people kind of

116
00:08:26,180 --> 00:08:29,690
freaked out so effectively you purchased
this domain

117
00:08:30,470 --> 00:08:37,039
you gotta categorize one of my domains i
started him and then you send an email

118
00:08:37,039 --> 00:08:40,610
to my one of my users are a bunch of my
users and say go to this hola page and

119
00:08:40,610 --> 00:08:44,870
they go there they log in and then they
don't get in they get refresh to our

120
00:08:44,870 --> 00:08:50,630
actual lepage it and then you steal the
credentials at the same time as far as

121
00:08:50,630 --> 00:08:55,310
as far as payloads go are kind of
standard right now that we like to use

122
00:08:55,310 --> 00:09:00,349
are malicious shortcut own case files
embedded within plays in kind of office

123
00:09:00,350 --> 00:09:05,570
documents so shortcuts you can create
these maliciously pretty easily with a

124
00:09:05,570 --> 00:09:11,240
few patents Paris my friends that's a
really cool project that applies graph

125
00:09:11,240 --> 00:09:14,390
theory to active directory attack pass
if you guys haven't checked it out like

126
00:09:14,390 --> 00:09:16,880
it's always his name's wall though

127
00:09:16,880 --> 00:09:22,160
yeah his novel always right there i
found out yeah arm so basically we can

128
00:09:22,160 --> 00:09:26,120
take three pieces of information of
whose login where who has admin rights

129
00:09:26,120 --> 00:09:30,770
where what users and groups along to
what groups and that's it we can collect

130
00:09:30,770 --> 00:09:34,970
all this information as a non-privileged
user we just need domain authentication

131
00:09:34,970 --> 00:09:38,899
or we need a domain authenticated user
but we need no elevated privileges in

132
00:09:38,899 --> 00:09:42,890
the domain with this we can run a
powershell and gesture which is

133
00:09:42,890 --> 00:09:46,640
essentially a customized version of
power of you that will numerate all this

134
00:09:46,640 --> 00:09:50,329
information as fast as they can and then
spit it out either to a RESTful API

135
00:09:50,329 --> 00:09:55,640
interface or a bunch of CSVs that then
we can adjust down then it's I've got a

136
00:09:55,640 --> 00:09:59,569
really really nice dashboard for
pathfinder and all this so i have a

137
00:09:59,570 --> 00:10:04,220
question about this so you go through
this email convoluted thing and somehow

138
00:10:04,220 --> 00:10:07,080
to code running on one of my work
station which I

139
00:10:07,080 --> 00:10:11,640
you know quite yet but ok fine and then
as a regular user you can get all this

140
00:10:11,640 --> 00:10:16,350
information from the environment without
any admin rights whatsoever you can pull

141
00:10:16,350 --> 00:10:21,930
this into some snipping tool and after a
dog so the from the pivot we're going to

142
00:10:21,930 --> 00:10:25,530
show this user does not have local
administrative access in the Machine and

143
00:10:25,530 --> 00:10:29,280
there Justin domain users they have no
elevated domain access so for the two

144
00:10:29,280 --> 00:10:32,640
different attack past we're going to
show kind of starting with recon and

145
00:10:32,640 --> 00:10:36,270
we'll move into the to pass keep in mind
that this is a completely on privileged

146
00:10:36,270 --> 00:10:43,260
user so i don't know how ordinary this
gonna split re it can actually see all

147
00:10:43,260 --> 00:10:54,720
right plus for me one state Kennedy had
seen it all right okay i'm gonna try to

148
00:10:54,720 --> 00:11:00,300
click this video and then move right
here and she was alright so we're going

149
00:11:00,300 --> 00:11:06,030
to start up in part we have our fish
user on this is the really . evil . for

150
00:11:06,030 --> 00:11:11,760
domain and all the Machine names and
users are named after evil characters so

151
00:11:11,760 --> 00:11:17,730
we have we fished Ramsay Bolton on the
series a machine absolutely is a good

152
00:11:17,730 --> 00:11:23,970
guy or bad . okay and we're going to run
the Bloodhound adjuster so we're going

153
00:11:23,970 --> 00:11:26,460
to kick this off and that there's a
couple different collection methods by

154
00:11:26,460 --> 00:11:30,600
default it's going to rain all the
groups are all the group group

155
00:11:30,600 --> 00:11:33,600
memberships and like user memberships
and everything is also going to New

156
00:11:33,600 --> 00:11:37,500
right all the systems that can find on
the domain and then running numeration

157
00:11:37,500 --> 00:11:40,080
threads to figure out the local
administrators and session information

158
00:11:40,080 --> 00:11:45,240
for each if that now that touches every
single machine is kind of normal a

159
00:11:45,240 --> 00:11:48,810
t-type traffic but it's you know one
workstation conspiring out touching a

160
00:11:48,810 --> 00:11:52,739
lot of stuff if you want to be a bit
more stealthy you can use the stealth

161
00:11:52,740 --> 00:11:56,700
collection which will do just held up in
numeration to domain controller and then

162
00:11:56,700 --> 00:12:01,770
try to numerate commonly traffic servers
by checking your home directory pads and

163
00:12:01,770 --> 00:12:05,280
stuff through user objects and then i'll
do the remote session and local admin

164
00:12:05,280 --> 00:12:10,199
enumeration against just that had those
handfuls of commonly traffic servers and

165
00:12:10,200 --> 00:12:14,550
then it doesn't gpo correlation tricks
for local admin so stealth collection

166
00:12:14,550 --> 00:12:16,939
not as accurate but a lot faster in the
law

167
00:12:16,940 --> 00:12:22,160
choir so okay we're gonna kick off the
new bloodhound module that's an empire

168
00:12:22,160 --> 00:12:28,250
to do beta was released yesterday this
is going to send in jester down and it's

169
00:12:28,250 --> 00:12:31,370
going to be a going to start kicking all
the enumeration threads and everything

170
00:12:31,370 --> 00:12:34,580
off in the back end and the videos

171
00:12:34,580 --> 00:12:39,170
ok actual so you can see there it did
all the enumeration is saved all the

172
00:12:39,170 --> 00:12:45,349
CSVs off so now we are going to actually
just download the CSV names and we're

173
00:12:45,350 --> 00:12:48,350
going to switch over to our bloodhound
analyst machine

174
00:12:50,090 --> 00:12:53,600
cool so all these pulled down

175
00:12:54,830 --> 00:12:58,940
alright so we're gonna start a
bloodhound it is cross-platform it's

176
00:12:58,940 --> 00:13:11,300
written the front end I folks out here
and I'll show he has a video capture

177
00:13:11,300 --> 00:13:18,800
problems but audio should resume a round
the 14-minute 52 second log so I've

178
00:13:18,800 --> 00:13:21,800
inconvenience

179
00:14:55,620 --> 00:14:57,440
now some kind of password change

180
00:14:57,440 --> 00:15:02,060
so we want to dig a little bit deeper so
using some w my numeration through

181
00:15:02,060 --> 00:15:05,900
powershell an empire again we're going
to numerate all the services that are

182
00:15:05,900 --> 00:15:10,220
currently installed in the system that
have the name past somewhere within the

183
00:15:10,220 --> 00:15:13,250
name where they match that we're going
to pull out the name of the service and

184
00:15:13,250 --> 00:15:16,730
then the full binary path where the
binary is so you see this password

185
00:15:16,730 --> 00:15:21,470
changing our this password changer with
a this kind of a you know whatever the

186
00:15:21,470 --> 00:15:28,130
exe path is right we're going to go
ahead and download this and we're again

187
00:15:28,130 --> 00:15:34,010
going to take this off to like kind of
an offline analyst machine so pull it

188
00:15:34,010 --> 00:15:37,760
down and we're going to fade out and go
into a journalist machine so we're going

189
00:15:37,760 --> 00:15:41,930
to skip you would do kind of basic exe
triage and figure out what it's written

190
00:15:41,930 --> 00:15:44,660
in those types of things will say we
determined that it was written in $YEAR

191
00:15:44,660 --> 00:15:49,640
. net in this case our C sharp which is
also for us because we don't actually

192
00:15:49,640 --> 00:15:56,660
have the reversing with.net and clr type
applications and assemblies you can

193
00:15:56,660 --> 00:16:01,579
throw them into a like a decompiler and
take you can go from the common

194
00:16:01,580 --> 00:16:05,690
intermediate language like kind of run
time are the the opcodes and go straight

195
00:16:05,690 --> 00:16:11,150
back to what the actual source code is
so our favorite tool for this is DN spy

196
00:16:11,150 --> 00:16:15,260
is free and open source we can just
throw our binder in here and start

197
00:16:15,260 --> 00:16:19,010
racing through you know we see also men
here in a second we see kind of the

198
00:16:19,010 --> 00:16:21,380
entry points you know this

199
00:16:21,380 --> 00:16:26,780
ok the services starting on you know see
this like create user function that

200
00:16:26,780 --> 00:16:31,310
looks like it's green and helpdesk admin
all right that's kinda weird there's a

201
00:16:31,310 --> 00:16:35,150
generate our you know this password
function okay this looks like it's some

202
00:16:35,150 --> 00:16:39,740
type of algorithm that's being used to
set whatever the local admin password is

203
00:16:39,740 --> 00:16:44,690
we see there's a date there's the
hostname there's some kind of seed that

204
00:16:44,690 --> 00:16:49,670
looks like they're combining everything
md5 in it doing some kind of string

205
00:16:49,670 --> 00:16:53,900
transformation and then you know
depending some kind of character at the

206
00:16:53,900 --> 00:16:59,959
end so this is an algorithm similar to
things we've seen in the field that the

207
00:16:59,960 --> 00:17:05,180
only secret information is the hostname
essentially and then whatever the date

208
00:17:05,180 --> 00:17:09,050
is so this is nice for us because if we
can enumerate the hostname remotely from

209
00:17:09,050 --> 00:17:10,190
a machine we

210
00:17:10,190 --> 00:17:14,150
and generate the local admin password
and remotely compromise it so because

211
00:17:14,150 --> 00:17:18,590
sharpen powershell are so similar is
really really easy to take that

212
00:17:18,589 --> 00:17:25,550
algorithm and port in the powershell
what you see here now from here we're

213
00:17:25,550 --> 00:17:31,070
going to go one step further and we are
actually going to build a custom Empire

214
00:17:31,070 --> 00:17:37,070
module to execute this so right here you
see is the similar type of algorithm

215
00:17:37,070 --> 00:17:41,540
right there in that this kind of custom
Empire module so I took just the basic

216
00:17:41,540 --> 00:17:45,290
template but the powershell snippets and
in that basic function and we're gonna

217
00:17:45,290 --> 00:17:51,350
pair that with w my some folk w my
method so this will let us do remote

218
00:17:51,350 --> 00:17:55,550
lateral spread through w my with the
password being pre-generated executed

219
00:17:55,550 --> 00:17:58,850
based on whatever the host name is so we
can just give it a hostname it will go

220
00:17:58,850 --> 00:18:02,990
and essentially install an agent just
think pretty cool again very similar to

221
00:18:02,990 --> 00:18:07,700
something we've actually done in the
field so now we need some targets and I

222
00:18:07,700 --> 00:18:11,960
was going to scroll off here in a second
but we're going to use a module a Power

223
00:18:11,960 --> 00:18:16,100
View module with an empire and we're
going to do right all the computers that

224
00:18:16,100 --> 00:18:20,689
have the Windows 7 operating system so
we're assuming this password changing

225
00:18:20,690 --> 00:18:24,440
binary is done for clients and we just
kind of in the local network segment

226
00:18:24,440 --> 00:18:28,040
where we're going to see what other
machines they are so we landed on sirius

227
00:18:28,040 --> 00:18:32,000
say and we see a secret girl for Freddy
Kruger and jigsaw or some of the other

228
00:18:32,000 --> 00:18:37,610
some of the other host so now I talked
about pathfinding with bloodhound you

229
00:18:37,610 --> 00:18:42,350
can find a path from any node in the
graph to any other node in the graph so

230
00:18:42,350 --> 00:18:46,399
instead of just spraying agents to every
single machine that we might have access

231
00:18:46,400 --> 00:18:52,910
to we wanted to do like kind of targeted
attack path execution so we'll gather a

232
00:18:52,910 --> 00:18:56,630
lot of information trace out exactly
what we want to do and then do targeted

233
00:18:56,630 --> 00:19:03,350
compromise on on those sections so we're
going to see is there a path from uh I

234
00:19:03,350 --> 00:19:07,340
think like jigsaw to the domain
controller Vader no there's not

235
00:19:07,340 --> 00:19:14,000
but there is for this of the screw
machine so we see it has a has a session

236
00:19:15,210 --> 00:19:23,789
whatever no I'm just got a particular
user logged in as a member of your plans

237
00:19:23,789 --> 00:19:27,240
to attend but you see like this kind of
nested group memberships that might have

238
00:19:27,240 --> 00:19:31,230
admin access specific machines that have
different users logged in so with the

239
00:19:31,230 --> 00:19:34,200
information that we gather in the first
numeration phase we can actually start

240
00:19:34,200 --> 00:19:38,399
tracing out a multi-step attack path now
we're going to flip back

241
00:19:40,799 --> 00:19:46,559
cool are going to verify that the next
step in this mission the next step in

242
00:19:46,559 --> 00:19:48,600
this attack path is actually true

243
00:19:48,600 --> 00:19:51,658
so we're going to use one my favorite
its functionality power of you getting

244
00:19:51,659 --> 00:19:57,270
at local group it's rolled into the get
local group module and Empire this will

245
00:19:57,270 --> 00:20:01,168
use the windy service provider or some
API calls in the back end to enumerate

246
00:20:01,169 --> 00:20:07,529
the members of a local group on a remote
machine so i can figure out who is a

247
00:20:07,529 --> 00:20:11,610
member of administrators and remote
machine without having elevated access

248
00:20:11,610 --> 00:20:15,840
to that machine so this really is kind
of crazy to me that you're allowed to do

249
00:20:15,840 --> 00:20:16,620
this

250
00:20:16,620 --> 00:20:21,479
Windows 10 inner Bruce tradition yeah
Winston anniversary edition summer 2016

251
00:20:21,480 --> 00:20:25,440
finally lock this down by default so
they're paying attention and realize

252
00:20:25,440 --> 00:20:29,820
maybe it's not the best idea to let any
user your domain know all the local

253
00:20:29,820 --> 00:20:33,539
admin memberships of every other machine
the domain as you'll see how this kind

254
00:20:33,539 --> 00:20:37,590
of comes into play and how we can build
these attack graphs so we verify ok this

255
00:20:37,590 --> 00:20:43,020
helpdesk admin is a local admin on on
this machine so now we're going to start

256
00:20:43,020 --> 00:20:47,879
executing our attack path we know we can
use this algorithmic like kind of Wi-Fi

257
00:20:47,880 --> 00:20:53,610
module to jump to the next quarter
machine so we can set it executed in the

258
00:20:53,610 --> 00:20:57,840
back end is going to task down to
powershell to the pivot host and then

259
00:20:57,840 --> 00:21:02,039
you see it generated whatever the seed
and the password and then it executed w

260
00:21:02,039 --> 00:21:08,010
my with an empire stage on the road
system and got it back so this when we

261
00:21:08,010 --> 00:21:11,429
did something kind of like this in the
field it only took a less than a day or

262
00:21:11,429 --> 00:21:13,649
a few hours to go up

263
00:21:13,649 --> 00:21:17,520
well yeah about like less than one
assessment day to go from holding down a

264
00:21:17,520 --> 00:21:19,500
binary pulling out the algorithm

265
00:21:19,500 --> 00:21:23,670
building an empire module and then
having essentially like you know an

266
00:21:23,670 --> 00:21:28,230
internal kind of oday whatever not okay
but whatever is an exploit on any

267
00:21:28,230 --> 00:21:31,860
workstation the entire environment that
made it really really awesome so the

268
00:21:31,860 --> 00:21:35,399
advantage of something like empire in
this situation is the ability to

269
00:21:35,400 --> 00:21:38,580
customize these things in the field and
kind of roll roll with this new

270
00:21:38,580 --> 00:21:45,629
functionality so okay we compromise the
helpdesk admin on this crew machine we

271
00:21:45,630 --> 00:21:52,020
know that I think you lose the person is
logged in here all the way

272
00:21:52,020 --> 00:21:56,220
ok yeah so we knew that the wave had a
session here based on the Bloodhound

273
00:21:56,220 --> 00:21:59,820
data so we could steal tokens weekend me
cats or we could just essentially

274
00:21:59,820 --> 00:22:04,950
migrate into the process so we're going
to PS inject into their process space

275
00:22:04,950 --> 00:22:09,510
and assume all their token privileges so
it was nice of empire it does a whole

276
00:22:09,510 --> 00:22:13,350
bunch of kind of black magic in the back
end that one my workmates worked up of

277
00:22:13,350 --> 00:22:19,260
taking ways to load up the dotnet common
language runtime into an unmanaged see

278
00:22:19,260 --> 00:22:23,280
your C++ process space that then loads
up an assembly that then does a powerful

279
00:22:23,280 --> 00:22:27,120
runner does much other stuff so in
result what you guys should care about

280
00:22:27,120 --> 00:22:31,679
is you can run your powershell Empire
agents and processes that are not

281
00:22:31,680 --> 00:22:36,360
powerful vxc so we're going to migrate
into her process basic consumer

282
00:22:36,360 --> 00:22:43,139
privileges and then then we're just
going to use a regular w my module for

283
00:22:43,140 --> 00:22:46,320
lateral spread to move to the next . so
we're going to move to the Voldemort

284
00:22:46,320 --> 00:22:51,389
server arm because that we saw that
bloodhound attack graph that the wave

285
00:22:51,390 --> 00:22:55,140
did have access to this based on her
unrolled like multi nested group

286
00:22:55,140 --> 00:22:58,530
membership so if you adjust the
numerator that server directly you would

287
00:22:58,530 --> 00:23:02,850
have known you know does this person
have access there because these things

288
00:23:02,850 --> 00:23:07,169
to start to spider and this even though
this is a relatively simple example if

289
00:23:07,170 --> 00:23:10,830
you can think about these things that
scale if you're thinking about thousands

290
00:23:10,830 --> 00:23:14,820
of groups or thousands of users and
systems there is no way that you're

291
00:23:14,820 --> 00:23:19,439
going to be able like by hand to find
every single attack path you might get

292
00:23:19,440 --> 00:23:26,730
lucky and find one but you're not going
to find all so okay so now from here we

293
00:23:26,730 --> 00:23:29,530
know that the wave has access

294
00:23:29,530 --> 00:23:32,800
I wait with it yes

295
00:23:32,800 --> 00:23:38,919
ok yeah so Eric Cartman is a domain
admin respect to the thought that this

296
00:23:38,920 --> 00:23:42,700
is the research and development group
they have their own domain because of

297
00:23:42,700 --> 00:23:45,130
this reason they kind of do their own
thing so we have a production

298
00:23:45,130 --> 00:23:49,540
environment another domain the same for
so we're fine go ahead yeah yeah we'll

299
00:23:49,540 --> 00:23:51,010
see

300
00:23:51,010 --> 00:23:55,870
so okay now the last kind of lateral
spread them to go over is something

301
00:23:55,870 --> 00:24:00,370
called subversive profiles as anyone
heard of powerful profiles or a little

302
00:24:00,370 --> 00:24:04,600
bit a few people's ok whenever
powershell DXE starts up whether it's

303
00:24:04,600 --> 00:24:08,770
the ISE or regular powershell DXE it
looks through a series of locations

304
00:24:08,770 --> 00:24:13,030
which i'll highlight here in a second
for your profile your profile . ps1 to

305
00:24:13,030 --> 00:24:16,480
set up our shellcode that's normally
used for like she'll customizations and

306
00:24:16,480 --> 00:24:17,500
things like that

307
00:24:17,500 --> 00:24:22,870
now whenever so whenever powershell that
exe starts it's going to execute

308
00:24:22,870 --> 00:24:26,530
whatever code is in that profile so
there's a blog post which I'll show in a

309
00:24:26,530 --> 00:24:31,149
second where Mack reiber my boss from
the next room talked about attackers

310
00:24:31,150 --> 00:24:34,990
potentially using the subversively for
persistence we're going to use it for

311
00:24:34,990 --> 00:24:39,490
lateral spread to get around script
block logging so essentially what's

312
00:24:39,490 --> 00:24:43,660
going to happen is we're going to
generate the zoom in a second we're

313
00:24:43,660 --> 00:24:49,480
going to generate your empire launcher
your empire launcher code and then using

314
00:24:49,480 --> 00:24:52,930
Wi-Fi remote registry we're going to
push it over to a value on the remote

315
00:24:52,930 --> 00:24:57,910
system execute command that pulls it
down and saves that malicious logic to a

316
00:24:57,910 --> 00:25:02,920
profile that ps1 and like the the
powershell program files are the see you

317
00:25:02,920 --> 00:25:07,180
know system32 windows powershell profile
be one thing then we're going to execute

318
00:25:07,180 --> 00:25:12,490
powershell txt on the host its going to
start load the profile executor actual

319
00:25:12,490 --> 00:25:16,000
logic is going to kill itself and then
we're going to restore what the original

320
00:25:16,000 --> 00:25:19,990
profile ps1 is so all the client will
see your if you're doing command-line

321
00:25:19,990 --> 00:25:23,200
login or carbon black or anything like
that is really awesome solutions you're

322
00:25:23,200 --> 00:25:26,119
just going to see powershell dot exe
starting no command line

323
00:25:26,119 --> 00:25:30,799
no command line flags no command line
whatever else is not doing Dash for file

324
00:25:30,799 --> 00:25:32,149
or anything like that

325
00:25:32,149 --> 00:25:34,879
then if they did have an original
profile like this system will be

326
00:25:34,879 --> 00:25:38,988
completely cleaned up so this module
isn't public yet we just need to clean

327
00:25:38,989 --> 00:25:41,989
up a couple of things and we're going to
release it in the next month or so

328
00:25:42,709 --> 00:25:47,119
so this is the blog post that Matt put
out so investigating subversive power

329
00:25:47,119 --> 00:25:52,759
show profiles highly recommend everybody
gradient so pretty cool so again he kind

330
00:25:52,759 --> 00:25:56,809
of talked about this with efi our
perspective of you want to ensure that

331
00:25:56,809 --> 00:26:03,799
you know you hold all profile . ps1 when
you're doing ironing machine for us it

332
00:26:03,799 --> 00:26:06,079
doesn't really matter because we're
using it for lateral spreading out

333
00:26:06,079 --> 00:26:10,549
persistence and we repair and clean
everything up so there's you know we're

334
00:26:10,549 --> 00:26:15,109
not really leaving any traces so again
nothing super super crazy but we thought

335
00:26:15,109 --> 00:26:21,228
a kind of a cool new little little
spread method . no command line logging

336
00:26:21,229 --> 00:26:24,439
has become a more and more of a pain
over the last year

337
00:26:24,439 --> 00:26:31,369
ok so because of the local admin
password changing executable you took

338
00:26:31,369 --> 00:26:36,859
advantage of the fact that the algorithm
wasn't secure as possible etc figured

339
00:26:36,859 --> 00:26:40,069
out what that password was on a
different machine and then leverage that

340
00:26:40,069 --> 00:26:44,389
information to jump 21 with the domain
admin and then using powershell family

341
00:26:44,389 --> 00:26:47,119
to then run the code on our domain
controller

342
00:26:47,119 --> 00:26:50,688
yeah so you know you see up there were
creating the profile pushing it over

343
00:26:50,689 --> 00:26:54,109
executing powershell desi we get an
agent back and we're repairing the

344
00:26:54,109 --> 00:26:58,519
profile so okay let's say we take care
of that then we're good right oh yeah

345
00:26:58,519 --> 00:27:00,830
sure

346
00:27:00,830 --> 00:27:20,449
alright so that was attacked and client
to client how many you guys / roast on a

347
00:27:20,450 --> 00:27:26,000
regular basis anybody all right if
you're not you absolutely should be so

348
00:27:26,000 --> 00:27:34,220
kerberos team kerberos teen involves the
abuse of user accounts that have SPN set

349
00:27:34,220 --> 00:27:39,169
so ESPN's or service principal names are
configured for service accounts to kind

350
00:27:39,169 --> 00:27:44,059
of enable the authentication flow for
kerberos and in the normal Active

351
00:27:44,059 --> 00:27:51,260
Directory domains so when a user request
a service ticket at TGS on it it sends I

352
00:27:51,260 --> 00:27:54,080
keep I keep forgetting exactly how it
like this

353
00:27:54,080 --> 00:27:58,610
kerberos is extremely complicated but
when a user request the TGS it will send

354
00:27:58,610 --> 00:28:03,320
the request for the exact spin with that
user account to the domain controller

355
00:28:03,320 --> 00:28:06,408
which will actually go through the
kerberos negotiation process and the end

356
00:28:06,409 --> 00:28:11,120
result is you get a TGS that sit back
down to the user with kerberos ting you

357
00:28:11,120 --> 00:28:15,918
can request these tickets as a regular
user non non admin on and those tickets

358
00:28:15,919 --> 00:28:19,669
are going to be saved in your current
process space you can extract these

359
00:28:19,669 --> 00:28:23,360
because you own your current process
space extract them and transform them

360
00:28:23,360 --> 00:28:26,870
into such a way that you can then export
them and crack them with hash cat or

361
00:28:26,870 --> 00:28:32,418
John so it's a way to depending on the
service accounts are configured be able

362
00:28:32,419 --> 00:28:37,909
to brute-force offline service account
passwords and service account passwords

363
00:28:37,909 --> 00:28:41,570
usually don't change very often write
like they're they're usually around for

364
00:28:41,570 --> 00:28:42,649
a long long time

365
00:28:42,649 --> 00:28:46,580
so previously when you wanted to
kerberos you would do a bunch of

366
00:28:46,580 --> 00:28:51,110
one-liners no mom into tim adine a year
year-and-a-half ago I think he talked to

367
00:28:51,110 --> 00:28:54,799
derby last year had you know kinda came
up with a lot of this research and then

368
00:28:54,799 --> 00:28:58,610
had all these one-liners request request
the tickets and you could use mimic cats

369
00:28:58,610 --> 00:29:02,240
to extract the tickets out of memory
either two-disc early kind of base 64

370
00:29:02,240 --> 00:29:05,870
encoded in blobs now thanks to a poor
request by

371
00:29:06,770 --> 00:29:12,889
i think is macho sec from on the power
view the power of you prod the power of

372
00:29:12,890 --> 00:29:17,090
you code in power splits there's a much
much easier way to do this without

373
00:29:17,090 --> 00:29:23,570
needing mccants so first we're going to
check whether our targets we're going to

374
00:29:23,570 --> 00:29:29,600
use the the get user module in Empire
which wraps get net user and a Power

375
00:29:29,600 --> 00:29:35,120
View and there's a spin flag which will
return all users on Noel's ESPN set in

376
00:29:35,120 --> 00:29:39,860
the entire domain so again these are the
targeted accounts that we may be able to

377
00:29:39,860 --> 00:29:44,570
kerberos so it's going to task
everything in the back end and executed

378
00:29:44,570 --> 00:29:49,429
we should get the results back for i
think in this kind of sample there's

379
00:29:49,430 --> 00:29:53,810
there's three let's see we have we have
the ring we have Death Star and we have

380
00:29:53,810 --> 00:29:59,300
a white Walker somewhere up there i
think yeah okay so we have three

381
00:29:59,300 --> 00:30:03,260
different service accounts that we may
be able to prost now we're going to go

382
00:30:03,260 --> 00:30:06,890
back to our blood analysis platform
again instead of purchased grossing

383
00:30:06,890 --> 00:30:09,290
everything and trying to exploit
everything we're going to do targeted

384
00:30:09,290 --> 00:30:10,430
compromise

385
00:30:10,430 --> 00:30:13,700
we're going to see is that our paths
from any of these three service accounts

386
00:30:13,700 --> 00:30:19,340
to the domain admins group a bloodhound
like the first one know what students

387
00:30:19,340 --> 00:30:25,520
are no it doesn't look like there's a
path but for white Walker there is a

388
00:30:25,520 --> 00:30:29,930
path so white Walker which is a member
of house Bolton and then member of the

389
00:30:29,930 --> 00:30:33,950
guild clams 10 which has access to that
same Baltimore server that we used in

390
00:30:33,950 --> 00:30:37,790
the previous attack chain so we know
that if we cover the plaintext

391
00:30:37,790 --> 00:30:41,000
credentials for the White Walkers
service account through nessa group

392
00:30:41,000 --> 00:30:44,840
membership we should be able to
compromise that same server migrated to

393
00:30:44,840 --> 00:30:49,070
Eric Cartman's process again and then
kind of go about the similar parts of

394
00:30:49,070 --> 00:30:58,129
the attaching so now let's / oast the
get yeah it's been tickets model this is

395
00:30:58,130 --> 00:31:03,890
it's so nice this is a nam Empire too .
oh that was released yesterday so you

396
00:31:03,890 --> 00:31:08,060
can either if you don't set any user
account or request all tickets if you

397
00:31:08,060 --> 00:31:12,230
like in this particular case we know we
just want one with white Walker and

398
00:31:12,230 --> 00:31:15,110
instead of doing all that stuff and
running Emma cats and doing multiple

399
00:31:15,110 --> 00:31:17,209
stages is just one file

400
00:31:17,210 --> 00:31:21,470
it's going to execute it down it's only
like a dozen or so lines powershell and

401
00:31:21,470 --> 00:31:25,279
you can pull the encrypted component of
the ticket out of memory so go and help

402
00:31:25,279 --> 00:31:31,220
reformat it ready for cracking for John
so like way way easier it's just like

403
00:31:31,220 --> 00:31:34,700
one single step you could run this
essentially and through whatever age you

404
00:31:34,700 --> 00:31:37,159
want you can run this through
interpreter you can run this through

405
00:31:37,159 --> 00:31:43,130
couple strikes or whatever with the the
ps1 or we're going to switch over to the

406
00:31:43,130 --> 00:31:46,880
tickets saved off for John we're going
to go ahead and see if we can crack it

407
00:31:48,230 --> 00:31:53,690
so again just literally copied that text
straight over already pretty kind of

408
00:31:53,690 --> 00:31:58,429
formatted for the cracking format for
you guys and we see White Walkers

409
00:31:58,429 --> 00:32:04,340
password is jon snow sucks okay like I
said these are the rd folks they like

410
00:32:04,340 --> 00:32:09,080
David Collins I'm gonna have some
conversations with them so now we know

411
00:32:09,080 --> 00:32:13,520
the plaintext credentials for the
service account that lets start to

412
00:32:13,520 --> 00:32:17,840
execute that attack path so with the
invoke w my module and Empire you can

413
00:32:17,840 --> 00:32:22,699
you don't have to use the current users
credential set you can specify plaintext

414
00:32:22,700 --> 00:32:26,690
credentials if you like we're going to
set the credentials for this white

415
00:32:26,690 --> 00:32:32,299
Walker service account we are going to
set the target to be that that kind of

416
00:32:32,299 --> 00:32:35,570
Baltimore server that we were able to
spread to with an additional hop from

417
00:32:35,570 --> 00:32:41,178
you know the client side with the
password change your binary executed get

418
00:32:41,179 --> 00:32:45,919
our agent back we're going to do the
similar you know the same couple of

419
00:32:45,919 --> 00:32:49,700
steps that we did in the previous demo
to where we do our numeration of what

420
00:32:49,700 --> 00:32:53,480
what processes are running because we
know from the graph that a user has to

421
00:32:53,480 --> 00:32:57,380
be logged on requirements to be logged
on we're going to PS injected into this

422
00:32:57,380 --> 00:33:07,010
process is injected into this process
again it's going to do all that kind of

423
00:33:07,010 --> 00:33:11,360
crazy you know . net stuff loading up on
the backend which i think is like one of

424
00:33:11,360 --> 00:33:17,629
the coolest coolest features of the the
project we should get our new agent back

425
00:33:17,630 --> 00:33:22,789
here in a second and now instead of
spreading an agent to a domain

426
00:33:22,789 --> 00:33:27,440
controller general we want to probably
try to stay FDCs as much as we can we're

427
00:33:27,440 --> 00:33:28,940
going to be a bit stealthy our new

428
00:33:28,940 --> 00:33:34,790
HTC Sync has anyone used e sink
hopefully a good chunk of people yet so

429
00:33:34,790 --> 00:33:40,940
DC sink was a module for many cats
written by Benjamin don't be gentle kiwi

430
00:33:40,940 --> 00:33:47,930
and Vincent towed it allows you to
simulate DC replication traffic so the

431
00:33:47,930 --> 00:33:51,620
normal kind of traffic protocol that's
used to replicate like password and like

432
00:33:51,620 --> 00:33:55,010
user information data between domain
controllers with mechanics you can now

433
00:33:55,010 --> 00:33:59,900
say on a client and Jamie cancel say hey
domain controller i'm also domain

434
00:33:59,900 --> 00:34:04,040
controller please give me this password
assuming you have domain admin rights so

435
00:34:04,040 --> 00:34:08,389
we do have da rates now all but this is
a way to replicate the hash and

436
00:34:08,389 --> 00:34:12,409
historical password information for
whatever account we want without running

437
00:34:12,409 --> 00:34:20,659
an agent or any type of actual code on
the DC so we're going to set the user

438
00:34:20,659 --> 00:34:26,389
account for where the really . evil Corp
domain we have the care BTW it's gonna

439
00:34:26,389 --> 00:34:31,549
execute this and I'll inject me cats
down do that d sync functionality and

440
00:34:31,550 --> 00:34:35,180
Empire also has a really nice credential
store in the back end I can almost act

441
00:34:35,179 --> 00:34:39,290
as a golden ticket catalog so it will
automatically scraping Democrats output

442
00:34:39,290 --> 00:34:44,449
and save all the information for you in
the back end so we see let's see a fader

443
00:34:44,449 --> 00:34:49,909
fader . really David corporate domain
controller so save everything out if you

444
00:34:49,909 --> 00:34:54,199
type Reds you see that everything is
saved as going to say about the domain

445
00:34:54,199 --> 00:34:57,620
sit and everything else will show in the
next part of the demo how easy it is

446
00:34:57,620 --> 00:35:02,390
after EDC sink or ash dump to use the
credential stores a golden ticket

447
00:35:02,390 --> 00:35:03,319
counter

448
00:35:03,320 --> 00:35:10,490
ok so all right last stuff going on here
arm so you were able to get a service

449
00:35:10,490 --> 00:35:15,620
ticket for this kerberos service account
and basically take that ticket and crack

450
00:35:15,620 --> 00:35:20,960
it offline because of foul purpose works
and then use that password because it

451
00:35:20,960 --> 00:35:22,620
was a horrible password

452
00:35:22,620 --> 00:35:28,830
pretty easily honestly in order to gain
access to get domain admin access on

453
00:35:28,830 --> 00:35:33,270
this argument so when you do this blood
and stuff and pull the information from

454
00:35:33,270 --> 00:35:38,160
the environment is not attack traffic
note so I mean we do the numeration once

455
00:35:38,160 --> 00:35:42,810
and the collection component can either
be as noisy as quiet kind of is we want

456
00:35:42,810 --> 00:35:46,890
you know / situation and after that all
the queries happy offline so we're not

457
00:35:46,890 --> 00:35:53,190
doing additional l decorators every time
in the the traffic itself is just ldap

458
00:35:53,190 --> 00:35:57,030
enumeration for the most part for any
any type of the user group on rolling

459
00:35:57,030 --> 00:36:01,650
and then it's a handful of like kind of
typical API calls remote nets session

460
00:36:01,650 --> 00:36:05,580
and nam type things like in the back end
that are going up against a couple of

461
00:36:05,580 --> 00:36:09,779
these servers at this point the only
thing that i know of there's probably

462
00:36:09,780 --> 00:36:13,020
some commercial products that can detect
some of these components the main one

463
00:36:13,020 --> 00:36:17,580
that i know of is Microsoft ATA for i
think is an adaptive or advanced threat

464
00:36:17,580 --> 00:36:22,680
analytics it can detect the remote
session enumeration against a domain

465
00:36:22,680 --> 00:36:25,770
controller if its installed but it won't
detect against all these other servers

466
00:36:25,770 --> 00:36:29,910
at this point they don't detect kind of
anomalous ldap enumeration traffic they

467
00:36:29,910 --> 00:36:34,500
say that that's coming which kind of
terrifies me but we'll see because

468
00:36:34,500 --> 00:36:38,850
there's so many devices are so many
things that you know all networked

469
00:36:38,850 --> 00:36:42,420
printers and address books and all this
kind of crap that needs ldap and plugs

470
00:36:42,420 --> 00:36:46,380
in the ldap so there's a reason that
people haven't you know blocks down

471
00:36:46,380 --> 00:36:51,090
people running internet the next group
domain admins on domains because lots of

472
00:36:51,090 --> 00:36:54,450
things plug into this functionality and
active directory is meant to be a

473
00:36:54,450 --> 00:37:00,029
directory for things look up information
i was Server 2016 there is the ability

474
00:37:00,030 --> 00:37:04,950
to they've introduced ackles that will
let you lock down who can enumerate what

475
00:37:04,950 --> 00:37:08,819
information the domain is also kind of
scary but that's not enabled by default

476
00:37:08,820 --> 00:37:11,880
and we all know I mean we all know that
all clients will enable and configure

477
00:37:11,880 --> 00:37:17,910
perfectly as soon as it comes out so I'm
sure that will happen so now we saw you

478
00:37:17,910 --> 00:37:23,399
know there is we're in a really . evil
Corp domain we are in a child domain and

479
00:37:23,400 --> 00:37:27,810
a forest so you guys have some kind of
like chorus trust relationship so

480
00:37:28,780 --> 00:37:33,910
here we go ok so we're going to go back
to our initial pivots or unprivileged

481
00:37:33,910 --> 00:37:39,190
user on of Ramsay Bolton cirse with
without any kind of privileges because

482
00:37:39,190 --> 00:37:45,730
we'd be synced what we're going to do is
kind of the sit sit trust hopping attack

483
00:37:45,730 --> 00:37:50,860
to elevate from the child domain all the
way up to the parenting normally trust

484
00:37:50,860 --> 00:37:54,130
will flow down from the force route down
to everything else if your enterprise

485
00:37:54,130 --> 00:37:58,810
admin trait so about a year ago on this
researcher named John Metcalf and

486
00:37:58,810 --> 00:38:04,509
Benjamin delpy worked out a way to
really weaponize ati an attack that's

487
00:38:04,510 --> 00:38:08,710
been theoretical for about ten years
which if you have domains within a

488
00:38:08,710 --> 00:38:14,920
forest and you compromise any domain
admin rights are any if you compromise a

489
00:38:14,920 --> 00:38:19,990
domain controller the kvt or whatever
within anywhere within the forest if you

490
00:38:19,990 --> 00:38:24,220
can modify the city history for
particular user and set the city history

491
00:38:24,220 --> 00:38:28,029
to be enterprise admin is you can
instantly compromise the root of the

492
00:38:28,030 --> 00:38:33,310
entire forest so you can hop up i know
this is like this blew my mind when I

493
00:38:33,310 --> 00:38:36,160
first kind of learned about it and I
didn't really believe it but we've done

494
00:38:36,160 --> 00:38:40,839
in the field and it works so city
history is a migration function arts of

495
00:38:40,840 --> 00:38:44,290
function to facilitate migration between
domains so if you have like going from

496
00:38:44,290 --> 00:38:48,520
domain be a domain a the idea would be
when you take those users and migrate

497
00:38:48,520 --> 00:38:53,200
the menu set the CID history to be that
Sid security identifier of their old

498
00:38:53,200 --> 00:38:58,419
groups so this would preserve their
access to the old groups on again the

499
00:38:58,420 --> 00:39:02,830
idea was meant for migration but people
realize 10 years ago that a theoretical

500
00:39:02,830 --> 00:39:06,819
attack was possible to wear if you could
modify the city history for user to be

501
00:39:06,820 --> 00:39:11,800
enterprise admins then he became an
enterprise admin within the forest but

502
00:39:11,800 --> 00:39:16,450
in order to do this previously you had
to like hard modify stuff in the NTS dat

503
00:39:16,450 --> 00:39:19,629
it's a super super super protective
attribute as john Payne he asked

504
00:39:19,630 --> 00:39:25,630
modified but with the golden ticket
component that figured out you can set

505
00:39:25,630 --> 00:39:29,620
this history the golden ticket inject it
and then just instantly hop-up so is

506
00:39:29,620 --> 00:39:35,210
finally fully weaponized so the one bit
of information we need last event from

507
00:39:35,210 --> 00:39:41,930
we need is the city of the root domain
so we know the city of our child domain

508
00:39:41,930 --> 00:39:47,089
but we want the city of evil Corp an
easy way to do this is with the this

509
00:39:47,089 --> 00:39:51,140
user to sit functionality from power of
your empire just take that username and

510
00:39:51,140 --> 00:39:55,580
i'll translate it to the full security
identifier so we know care BTW always

511
00:39:55,580 --> 00:39:59,450
has to be there so that's the one i tend
to use going to copy out the domain said

512
00:39:59,450 --> 00:40:05,089
we need that to create thats it dash 519
is the city for enterprise admin for the

513
00:40:05,089 --> 00:40:11,000
forest now we're gonna create a golden
ticket i mentioned that bad credit the

514
00:40:11,000 --> 00:40:17,330
credit or so you what's really nice is
if any Empire modules have credit ID it

515
00:40:17,330 --> 00:40:19,790
all except just a number of the credits
toward that will automatically

516
00:40:19,790 --> 00:40:25,369
auto-populate and fill in the care BTW
is the domain of the domains original

517
00:40:25,369 --> 00:40:28,369
sin and all those company components so
you can again use it kind of like a

518
00:40:28,369 --> 00:40:33,410
golden ticket catalog and i'll scroll up
the screen i'll do an info to kind of

519
00:40:33,410 --> 00:40:39,920
show you all the stuff over setting the
SIDS so the extra SIDS to be the fourth

520
00:40:39,920 --> 00:40:44,330
roots it dash 5 194 enterprise admins
and also does anyone know about the 20

521
00:40:44,330 --> 00:40:48,348
minute rule with golden tickets a little
bit as a little bit on the more familiar

522
00:40:48,349 --> 00:40:51,349
for people if you create a golden ticket

523
00:40:52,369 --> 00:40:56,000
you have 20 minutes to run around with
it before the domain controller verifies

524
00:40:56,000 --> 00:40:59,300
that account exists or not that's the
only validation that they do they don't

525
00:40:59,300 --> 00:41:02,930
verify like is this user in the right
groups or whatever they verify the

526
00:41:02,930 --> 00:41:08,000
account exists so if you create a golden
ticket for user that does not exist in

527
00:41:08,000 --> 00:41:11,240
the domain you have 20 minutes to run
around and then really have fun with

528
00:41:11,240 --> 00:41:16,069
event logs for defenders so I've known
people that may or may not have a

529
00:41:16,070 --> 00:41:20,150
cross-site scripting defender sim
solutions by stuffing JavaScript into

530
00:41:20,150 --> 00:41:22,609
the user account names but on that's
another story

531
00:41:22,609 --> 00:41:31,730
so I root said Dash 5 19 right as soon
as we inject this we could essentially

532
00:41:31,730 --> 00:41:35,540
become an enterprise admin instantly
again showing that just kind of that

533
00:41:35,540 --> 00:41:37,520
trust graph this is a simple one

534
00:41:37,520 --> 00:41:40,640
if you have a really complex environment
you know it becomes a little easier to

535
00:41:40,640 --> 00:41:46,250
to navigate in town so we're going to
execute it and it will also do pass the

536
00:41:46,250 --> 00:41:48,750
ticket so it won't say anything out to
disk and object

537
00:41:48,750 --> 00:41:54,900
ticket straight into memory which we can
purge later if we need to come on

538
00:41:54,900 --> 00:42:00,030
alright and this in the back end this is
all using invoke mimic cats which was

539
00:42:00,030 --> 00:42:05,850
based off of work by Joby ellicott at
Microsoft so he was one of the guys are

540
00:42:05,850 --> 00:42:08,880
really introduced a lot of awesome
functionality into the power supply

541
00:42:08,880 --> 00:42:13,620
project so we see here we have that high
that user doesn't exist that found the

542
00:42:13,620 --> 00:42:18,540
blue team and then we have exercises to
be that dumb the forest roots it dash

543
00:42:18,540 --> 00:42:23,790
509 for enterprise adamant so now the
last part we're going to do is we're

544
00:42:23,790 --> 00:42:30,900
just going to go ahead d sink the forest
group I know arm 105 you've had the

545
00:42:30,900 --> 00:42:34,320
advice to change your care BTW account

546
00:42:34,320 --> 00:42:39,090
yes actually we rotate that
automatically every couple of hours okay

547
00:42:39,090 --> 00:42:42,570
you just told me that would fix .
tickets you just do that in the forest

548
00:42:42,570 --> 00:42:43,380
route

549
00:42:43,380 --> 00:42:49,230
yes that's for production of our yet so
the really fun thing with the CID

550
00:42:49,230 --> 00:42:55,410
hopping kind of attack is in order to
ensure that you're not compromise

551
00:42:55,410 --> 00:42:56,129
forever

552
00:42:56,130 --> 00:43:02,910
you would have to rotate the care BTW
account on every domain and every domain

553
00:43:02,910 --> 00:43:08,670
in your entire forest all at the same
time because essentially any care BTW

554
00:43:08,670 --> 00:43:12,870
account in any child domain controller
in the forest can be used to compromise

555
00:43:12,870 --> 00:43:17,130
the forest route and anything else so
and this is hopping attack it doesn't

556
00:43:17,130 --> 00:43:20,820
matter of the Caribbean ET rotates we
just got it within a minute we could you

557
00:43:20,820 --> 00:43:27,330
hop up in DC sink but yeah you have to
rotate it for every single domain in

558
00:43:27,330 --> 00:43:31,500
your entire force at the same time
repeatedly on a regular basis if you

559
00:43:31,500 --> 00:43:34,230
want to ensure that you're not gonna
completely compromise because the

560
00:43:34,230 --> 00:43:38,250
compromise a child domain and then you
rotate up few of the things they forgot

561
00:43:38,250 --> 00:43:42,600
one of the children domains then you can
just hop back in now get your exs again

562
00:43:42,600 --> 00:43:48,630
and go down ok so from my R&D domain in
my active directory forest you

563
00:43:48,630 --> 00:43:52,180
compromise that then jump to my
production bar

564
00:43:52,180 --> 00:43:58,328
and now have whole domain admin rights
of my to name my forest you okay that's

565
00:43:58,329 --> 00:43:59,980
pretty awful

566
00:43:59,980 --> 00:44:07,690
I so the thing I don't get is why I
spend millions of dollars every year on

567
00:44:07,690 --> 00:44:12,940
security tools i mean i have vendors
coming in all the time and they say that

568
00:44:12,940 --> 00:44:18,579
they have the best security and i've got
i showed you you know I've got trucks

569
00:44:18,579 --> 00:44:21,700
are wolves and I mean it

570
00:44:22,210 --> 00:44:26,710
web content filtering didn't matter an
email didn't matter none of these things

571
00:44:26,710 --> 00:44:31,690
seem to matter in and like we we detect
many cats like we have antivirus but you

572
00:44:31,690 --> 00:44:37,059
said use powershell for that so it's it
seems like you're a very smart guy and

573
00:44:37,059 --> 00:44:39,339
I've got great security people

574
00:44:39,339 --> 00:44:43,960
what am I supposed to do I mean you know
obviously come like these fine people

575
00:44:43,960 --> 00:44:47,770
come to conferences come to things like
the Recon you know go have conversations

576
00:44:47,770 --> 00:44:50,980
with people in hallway con you go to
trainings there's a lot of you know

577
00:44:50,980 --> 00:44:54,400
really good kind of 80 type stuff out
there so people are starting to pay more

578
00:44:54,400 --> 00:44:58,780
attention to active directory
exploitation in the last couple years so

579
00:44:58,780 --> 00:45:01,720
we're we're happy about this and there's
a lot of information out there for

580
00:45:01,720 --> 00:45:05,290
people 14 ok so it sounds like maybe I
need to invest more in my people instead

581
00:45:05,290 --> 00:45:09,490
of the products and focus one give me
all the money

582
00:45:13,670 --> 00:45:22,250
so I learned a lot today and and I
appreciate your help with as well and

583
00:45:22,250 --> 00:45:27,109
and if I I i guess i need to send my
people the more conferences they keep

584
00:45:27,109 --> 00:45:30,140
asking me and I'm like yeah you're just
going to party and drink and and it

585
00:45:30,140 --> 00:45:34,460
seems like that's part of the experience
but apparently there's a lot of good

586
00:45:34,460 --> 00:45:38,030
things to be learned conferences and in
going to training and this is the real

587
00:45:38,030 --> 00:45:41,540
thing that's going to help security
because I thought we had some pretty

588
00:45:41,540 --> 00:45:52,339
good security place it and seen

589
00:46:03,620 --> 00:46:09,140
so let's talk some mitigations arm
initial foothold was pretty intense

590
00:46:09,140 --> 00:46:13,580
right there's a lot of different things
you can do to mitigate the sort of

591
00:46:13,580 --> 00:46:19,700
attacks not specifically this kind of
oily functionality within an email that

592
00:46:19,700 --> 00:46:24,259
comes to the user but deploy Emmett
because that will help prevent and

593
00:46:24,260 --> 00:46:27,290
mitigate those memory attacks that can
be used

594
00:46:27,290 --> 00:46:31,520
applocker can block executable content
from running and user locations like

595
00:46:31,520 --> 00:46:36,290
home directory profile path and often
ransomware takes advantage of this user

596
00:46:36,290 --> 00:46:40,880
runs download something and they
executed and runs so you can use

597
00:46:40,880 --> 00:46:44,390
whitelisting this is more like
blacklisting you block certain locations

598
00:46:44,390 --> 00:46:48,230
so they can't actually execute the
content you can manage car show

599
00:46:48,230 --> 00:46:51,440
execution using a blocker or constrain
language mode

600
00:46:51,440 --> 00:46:55,700
Matt next door's probably has some ways
around that but again these are all

601
00:46:55,700 --> 00:46:59,990
layers in your security just because one
layer can be defeated doesn't mean you

602
00:46:59,990 --> 00:47:04,220
shouldn't put in place as engineers we
often want a hundred percent solution

603
00:47:04,820 --> 00:47:09,200
you do not need a hundred percent
solution forty fifty sixty percent is

604
00:47:09,200 --> 00:47:13,819
better than nothing and it forces the
attacker to change their methodology and

605
00:47:13,820 --> 00:47:17,630
makes it more expensive so you want to
enable logging like how shown command

606
00:47:17,630 --> 00:47:21,320
process obviously block office macros
were possible

607
00:47:21,320 --> 00:47:27,110
microsoft is back for it functionality
from 2016 2013 so any macros that come

608
00:47:27,110 --> 00:47:30,830
from the internet or automatically
blocking user can actually execute and

609
00:47:30,830 --> 00:47:33,200
then you want to deploy some sort of
security tooling that looks for

610
00:47:33,200 --> 00:47:38,299
suspicion this behavior if a user has
word that's calling powershell or some

611
00:47:38,300 --> 00:47:39,950
other executable or doing something else

612
00:47:39,950 --> 00:47:44,480
wacky it's probably bad we can also
limit this capability as far as

613
00:47:44,480 --> 00:47:49,370
executables that get onto the system
executable tight content blocking email

614
00:47:49,370 --> 00:47:53,990
and download our capability for certain
types of files you can also change the

615
00:47:53,990 --> 00:47:58,549
default program for scripting languages
javascript can actually be double

616
00:47:58,550 --> 00:48:02,270
clicked on and executed by a user we
don't want that change that to notepad

617
00:48:02,270 --> 00:48:08,660
please test first recon is a tough
solution tough problem to solve 80 recon

618
00:48:08,660 --> 00:48:12,529
active directory is an LDAP directory so
that means you can pull pretty much

619
00:48:12,530 --> 00:48:16,930
everything from at any given time but
there are ways to kind of limit this

620
00:48:16,930 --> 00:48:21,308
if you increase the security on
sensitive gpo's like security group to

621
00:48:21,309 --> 00:48:25,180
group policies then the attacker doesn't
have an advantage of just pulling

622
00:48:25,180 --> 00:48:28,390
everything that's in those new policies
opening them up and knowing how your

623
00:48:28,390 --> 00:48:32,589
security tools like AppLocker amat and
others are configured as well as what

624
00:48:32,589 --> 00:48:36,069
you have out there and certainly
evaluate some sort of behavior analytics

625
00:48:36,069 --> 00:48:41,529
tool like a TA we're talking about
lateral movement attackers moving from

626
00:48:41,530 --> 00:48:45,460
place to place within your environment
we want to make sure that the attacker

627
00:48:45,460 --> 00:48:49,359
isn't able to just run free if they drop
on a workstation if you block

628
00:48:49,359 --> 00:48:54,430
workstation workstation communication or
just allow specific ports then they are

629
00:48:54,430 --> 00:48:58,629
constrained into a specific computer or
environment and it's very difficult to

630
00:48:58,630 --> 00:49:03,849
jump out of that look at laps look at
trusted second ships ways to change your

631
00:49:03,849 --> 00:49:08,710
local admin passwords that are out there
do not try to roll your own there are

632
00:49:08,710 --> 00:49:14,050
some good solutions out there that work
very well privilege escalation i still

633
00:49:14,050 --> 00:49:17,020
find some passwords and since fall
please make sure that you don't have

634
00:49:17,020 --> 00:49:20,800
passwords insist all and we're talking
about kerberos ting the simple solution

635
00:49:20,800 --> 00:49:24,099
of this is make sure your service
account passwords or at least 25

636
00:49:24,099 --> 00:49:29,740
characters preferably 30 or use managed
service accounts or get a password tool

637
00:49:29,740 --> 00:49:33,220
that will automatically change those
passwords for you make them super long

638
00:49:33,220 --> 00:49:38,828
and complex the longer they are the more
difficult it is to be cracked and if we

639
00:49:38,829 --> 00:49:43,809
make sure our computers running ntlm v2
or kerberos it's a lot more difficult

640
00:49:43,809 --> 00:49:49,240
for passive credential theft like
responder to actually work which brings

641
00:49:49,240 --> 00:49:53,979
me to admin creds if we make sure that
all of our admins only log onto specific

642
00:49:53,980 --> 00:49:58,990
authorized admin systems we can raise
the bar and make it more difficult for

643
00:49:58,990 --> 00:50:03,220
those credentials be stolen if you add
your admin accounts protected users

644
00:50:03,220 --> 00:50:05,439
which comes available in 2012

645
00:50:05,440 --> 00:50:10,299
then they are not able to be delegated
and they don't support insecure ntlm

646
00:50:10,299 --> 00:50:15,880
authentication you also want to reduce
the surface the attack surface of your

647
00:50:15,880 --> 00:50:19,420
workstations and servers that are used
for admin accounts so control access

648
00:50:19,420 --> 00:50:22,240
remove netbios probably doesn't need it

649
00:50:22,240 --> 00:50:28,569
get rid of LM and r get rid of double
pad on this rolls over into legacy audit

650
00:50:28,569 --> 00:50:30,400
and restrict your ntlm authentication

651
00:50:30,400 --> 00:50:33,640
environment if you don't know what's
being used there's no way that you can

652
00:50:33,640 --> 00:50:41,020
control it enforce ldap signing use ldap
ask for any non microsoft windows type

653
00:50:41,020 --> 00:50:45,369
applications of its unique see it's
going to bind if its binding over ldap

654
00:50:45,369 --> 00:50:50,109
that's clear text that is bad enable
ldap signing and encryption where

655
00:50:50,109 --> 00:50:53,380
possible we want to disable these older
protocols

656
00:50:53,380 --> 00:50:57,760
I mean who has seen w pad use
legitimately environment right a couple

657
00:50:57,760 --> 00:51:02,140
of times but it's enabled everywhere in
responder takes advantage of it and pen

658
00:51:02,140 --> 00:51:07,058
testers and attackers can just drop on a
system and ask for credit effectively in

659
00:51:07,059 --> 00:51:12,700
windows 10 pls uncheck smb1 and
powershell version too if you don't do

660
00:51:12,700 --> 00:51:17,558
this on certain tools like PS attack and
leverage the power shell version 2 and

661
00:51:17,559 --> 00:51:20,619
bypass all your fancy powershell version
5 logging

662
00:51:20,619 --> 00:51:25,750
so in summary once an attacker gets a
foothold in your network admin access is

663
00:51:25,750 --> 00:51:28,569
often quickly obtain we showed a couple
of examples

664
00:51:28,569 --> 00:51:32,200
this is all fictional but these are
things that are being done in real life

665
00:51:32,200 --> 00:51:37,029
and you want to make sure that you
identify and Molly's defenses based on

666
00:51:37,029 --> 00:51:40,480
typical attacker activity if you read
about what's being done

667
00:51:40,480 --> 00:51:44,380
look to see what the mitigations and
defenses are focusing on detection first

668
00:51:44,380 --> 00:51:47,980
and then moving into mitigation
prevention and then you can model those

669
00:51:47,980 --> 00:51:52,299
defenses and then questioned how good
your current defenses are do we have

670
00:51:52,299 --> 00:51:56,288
visibility into the right places are we
seeing logs from our workstations can we

671
00:51:56,289 --> 00:51:59,559
see when some of these things that will
showed are actually happening in our

672
00:51:59,559 --> 00:52:03,069
environment but if we measure our
environment like Carlos was talking

673
00:52:03,069 --> 00:52:06,759
about measure the environment document
the environment understand what you have

674
00:52:06,760 --> 00:52:10,809
so that way you can figure out how its
tighten it up and lock it down because

675
00:52:10,809 --> 00:52:14,859
ultimately effective defense limits the
attacker capability and their options

676
00:52:14,859 --> 00:52:16,509
increases their costs

677
00:52:16,510 --> 00:52:19,990
thank you very much

678
00:52:19,990 --> 00:52:25,660
yeah

679
00:52:27,710 --> 00:52:28,099
so

