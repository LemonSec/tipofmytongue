1
00:00:00,000 --> 00:00:06,690
probably yeah you can go

2
00:00:06,690 --> 00:00:09,929
are you all ready Michael

3
00:00:09,929 --> 00:00:13,230
we have will start so loud

4
00:00:13,230 --> 00:00:20,789
we'll start thanks for coming to this
talk instead of the Empire talk so I'm

5
00:00:20,789 --> 00:00:28,050
Chris this is ken not Kevin Johnson I am
NOT kevin johnson for those of you that

6
00:00:28,050 --> 00:00:36,180
are disappointed with like a moment to
leave we might be a little tipsy so it

7
00:00:36,180 --> 00:00:37,320
should be interesting

8
00:00:37,320 --> 00:00:40,710
I am former Navy if you know me at all

9
00:00:40,710 --> 00:00:45,629
it's because the trails go gonna talk
with Chris before on DevOps an offensive

10
00:00:45,629 --> 00:00:54,780
talk is defensive talk and then
exploitation of web applications i run

11
00:00:54,780 --> 00:00:59,640
engineer Iraq told you we've been
drinking i run engineering for a

12
00:00:59,640 --> 00:01:02,910
security companies you can imagine i've
got some concerns and we're going to

13
00:01:02,910 --> 00:01:07,470
talk through those concerns in the
defensive measures through this top XS

14
00:01:07,470 --> 00:01:12,090
me i'm currently over who were doing
blue team stuff so I put away my red hat

15
00:01:12,090 --> 00:01:16,170
for a bit now i'm doing blue team on
I've talked about all kinds of red

16
00:01:16,170 --> 00:01:20,490
teaming stuff to include DevOps stuff
and now we're going to do blue because

17
00:01:20,490 --> 00:01:25,020
I've been living in blue for the last
two years so i'm actually starting to

18
00:01:25,020 --> 00:01:27,810
like Python and rest api is because you

19
00:01:27,810 --> 00:01:28,700
yeah

20
00:01:28,700 --> 00:01:33,140
yes I didn't think so either and then
I'm really astonished at the people who

21
00:01:33,140 --> 00:01:34,789
never be like an Internet

22
00:01:34,789 --> 00:01:37,789
I really didn't think it was that large
number but it's pretty big

23
00:01:39,289 --> 00:01:44,060
so like I said our original talk was
about breaking things this is a

24
00:01:44,060 --> 00:01:49,189
defensive talk one quick story i would
like to share with you is that some of

25
00:01:49,189 --> 00:01:55,038
the things that go along with this talk
was a real experience for me

26
00:01:55,759 --> 00:01:59,030
basically you know where security
company we do these security things that

27
00:01:59,030 --> 00:02:05,689
you would expect right but we did have
what we thought might have been an

28
00:02:05,689 --> 00:02:10,340
attack and turned out to be nothing but
I i was driving through west virginia in

29
00:02:10,340 --> 00:02:14,870
the heels of West Virginia going about
25 miles an hour through like wine d

30
00:02:14,870 --> 00:02:19,760
curves and also trying to play like
incident response turned out it wasn't

31
00:02:19,760 --> 00:02:24,828
even really an incident but a lot of
what came out of that spurred you know

32
00:02:24,829 --> 00:02:29,840
how do we how do we truly know when
things are happening and if you deal

33
00:02:29,840 --> 00:02:35,540
with AWS if you deal with some of the
the practices that have op shops have

34
00:02:35,540 --> 00:02:41,540
which is like allowing engineers to push
code and infrastructure you know this

35
00:02:41,540 --> 00:02:42,138
might help

36
00:02:42,139 --> 00:02:47,600
so yeah yeah I've been doing this last
two years and working basically the last

37
00:02:47,600 --> 00:02:53,420
two jobs fairly loose egress standards
so we've had to push detection response

38
00:02:53,420 --> 00:02:57,200
down to the host which is an interesting
problem so everywhere else that work you

39
00:02:57,200 --> 00:03:01,310
can massive proxies and firewalls and
VPNs and may be really difficult to get

40
00:03:01,310 --> 00:03:05,090
out and last few places they're very
free let the developers do what they

41
00:03:05,090 --> 00:03:08,660
want so you need to actually catch the
developer like as they're doing

42
00:03:08,660 --> 00:03:13,430
something bad or right after they did it
before bad guys does so it just really

43
00:03:13,430 --> 00:03:17,720
changes the paradigm of what you need to
do and try to catch and when you try to

44
00:03:17,720 --> 00:03:24,380
catch it all this one so I was a whole
bunch of info here we go to Q&A after

45
00:03:24,380 --> 00:03:28,609
unless we stock start talking even
faster than we already are and

46
00:03:29,150 --> 00:03:32,390
we're gonna talk about human host and
infrastructure topics

47
00:03:32,390 --> 00:03:37,189
that's how we're gonna break to talk up
so human is we want to make it difficult

48
00:03:37,189 --> 00:03:43,010
for our employees to allow attackers to
walk into our environment so ways that

49
00:03:43,010 --> 00:03:47,629
employees can do that dump interesting
things from the company on placement has

50
00:03:47,629 --> 00:03:52,250
anybody seen that happen for error or so
yeah same thing for get up who's had

51
00:03:52,250 --> 00:03:56,989
someone check in like an access key tons
of people right so you get into the

52
00:03:56,989 --> 00:03:59,810
thing is the more we use cloud-based
things you've got to figure out how to

53
00:03:59,810 --> 00:04:04,190
alert to that because sometimes if
you're not using proper roles or not

54
00:04:04,190 --> 00:04:08,870
aspiring keys one access key and get
home like get your whole place own right

55
00:04:08,870 --> 00:04:13,370
so below there's some examples of things
that can i've seen so slack tokens and

56
00:04:13,370 --> 00:04:17,630
get up tons and tons and tons of AWS
keys and all kinds of like my sequel

57
00:04:17,630 --> 00:04:22,340
tokens and passwords and everything else
to hopefully all agree that this is like

58
00:04:22,340 --> 00:04:28,070
a problem that we need to find a way to
monitor address so pleased you could

59
00:04:28,070 --> 00:04:32,539
tackle is like stand up please get up
type resources internally so get lab you

60
00:04:32,539 --> 00:04:36,020
know like you have enterprise and
fabricator wish you could do that from

61
00:04:36,020 --> 00:04:41,780
an internal perspective but if you're
already using github for your

62
00:04:41,780 --> 00:04:45,888
organization is gonna be super difficult
which are probably going to do is just

63
00:04:45,889 --> 00:04:49,789
set up a private github and then enroll
people in your organization as they come

64
00:04:49,789 --> 00:04:54,199
on board this allows them to have access
to all the projects they're not they're

65
00:04:54,199 --> 00:04:57,979
not public but then you have to worry
when someone accidentally takes a

66
00:04:57,979 --> 00:05:02,000
private internal repo and post it on
their personal stuff anybody had that

67
00:05:02,000 --> 00:05:05,659
happen one so it so too

68
00:05:05,659 --> 00:05:09,889
I've seen it happen a lot at the last
two jobs so it does happen quite a bit

69
00:05:09,889 --> 00:05:15,229
for anybody that's using that well so
how could how you can tackle that if you

70
00:05:15,229 --> 00:05:21,139
got to people like to write code and as
people join your organization you crawl

71
00:05:21,139 --> 00:05:24,530
that with daily hourly however you want
to do it you check out your repo and

72
00:05:24,530 --> 00:05:28,909
also their repose and then you reject
and look for known badness so if you've

73
00:05:28,909 --> 00:05:33,500
got internal code and it's got headers
or AWS teaser you can basically regex

74
00:05:33,500 --> 00:05:35,000
whatever you want to find know

75
00:05:35,000 --> 00:05:39,230
madness most people can't do that
because they don't have time to build

76
00:05:39,230 --> 00:05:42,230
that someone did that for you it's
called get robbed

77
00:05:42,230 --> 00:05:45,590
has anybody heard of it cool it's
awesome

78
00:05:45,590 --> 00:05:48,739
so what it does is you give it an
organization and it does exactly what i

79
00:05:48,740 --> 00:05:52,790
said it will say okay here's a
forgetting this is what to do it does

80
00:05:52,790 --> 00:05:56,270
that organizations it takes all the
members of that organization and starts

81
00:05:56,270 --> 00:06:00,560
crawling through their repose as well
looking for things and then it spits out

82
00:06:00,560 --> 00:06:04,850
a page of findings so that's like an
example one of the pages when I ran it

83
00:06:04,850 --> 00:06:05,870
against somebody

84
00:06:05,870 --> 00:06:09,380
oh is it was magnetic because they were
doing book mounting so that wasn't scope

85
00:06:09,380 --> 00:06:14,390
and then so I found this guy had to get
get config that's interesting so inside

86
00:06:14,390 --> 00:06:18,919
that git config once the guys get up
talking so that's not good right

87
00:06:19,550 --> 00:06:24,440
no it's not okay cool alright stay with
me

88
00:06:24,440 --> 00:06:28,940
so what someone else that jerk could do
like myself is you could take an

89
00:06:28,940 --> 00:06:32,840
afternoon and investigate the Python
photo library that interacts with AWS

90
00:06:32,840 --> 00:06:36,830
and so when you find an AWS key you
could probably say cool i want to go

91
00:06:36,830 --> 00:06:41,990
ahead and check every AWS services if
this key works for it so at the top of

92
00:06:41,990 --> 00:06:46,250
saying like that's an invalid key the
one at the bottom says that's a root

93
00:06:46,250 --> 00:06:51,229
account so everybody knows the route
account for AWS says everything so in

94
00:06:51,229 --> 00:06:56,539
that case someone to check that into get
up and then so when you don't have an

95
00:06:56,540 --> 00:06:59,780
immediate route you want to keep going
so this other example shows down there

96
00:06:59,780 --> 00:07:03,890
at the bottom in the red is there were a
few functions that were allowed so you

97
00:07:03,890 --> 00:07:07,430
can help it off of those sorta see what
you can do and then like the same thing

98
00:07:07,430 --> 00:07:11,810
for s3 buckets with that key you can
take an ILS buckets what's in these

99
00:07:11,810 --> 00:07:15,500
buckets and do other things basically
pivot from there and go deeper so

100
00:07:15,500 --> 00:07:19,820
wrapping that up I want to be able to
find out when employees make that 0 as

101
00:07:19,820 --> 00:07:23,810
quickly as quickly as possible . of this
sir

102
00:07:24,350 --> 00:07:28,940
ok spaceman same problem has been going
to roll through these so anybody seen .

103
00:07:28,940 --> 00:07:32,990
monitor the twitter account for this
with don't mind you can basically say i

104
00:07:32,990 --> 00:07:36,350
want to look for hashes emails or
whatever for my company and so you can

105
00:07:36,350 --> 00:07:38,230
run this for your own company and

106
00:07:38,230 --> 00:07:41,560
and not post them on twitter but posted
internally

107
00:07:41,560 --> 00:07:49,390
alright so you can do stuff with it
thanks never waiting all day for this

108
00:07:49,960 --> 00:07:56,739
you're not here it's like yeah oh okay
sure not thank you anyway so if you got

109
00:07:56,740 --> 00:08:01,360
cash and you don't want to actually roll
your own code there's four pay services

110
00:08:01,360 --> 00:08:04,660
like recorded future anybody heard of
them

111
00:08:04,660 --> 00:08:08,590
no all right well they owe me a couple
so you can basically do the same thing

112
00:08:08,590 --> 00:08:11,409
we're talking about it will monitor
pastebin it will monitor Twitter will

113
00:08:11,410 --> 00:08:15,400
monitor all these things for you for
your VIPs / all the other things in your

114
00:08:15,400 --> 00:08:17,140
organization if you don't want to do it
yourself

115
00:08:17,140 --> 00:08:21,580
so if you've got the cash you can do
something like that if you're worried

116
00:08:21,580 --> 00:08:25,180
about credentials getting dumped hold
security is a company that will like

117
00:08:25,180 --> 00:08:29,500
troll all the black market forums and
then if it finds credentials for your

118
00:08:29,500 --> 00:08:32,409
company will if you if you're paying
them will let you know about it so

119
00:08:32,409 --> 00:08:39,819
that's good to know one for you finally
yay so this is get monitor its tool that

120
00:08:39,820 --> 00:08:45,370
allows you to basically keep track Thank
You of things for instance if somebody

121
00:08:45,370 --> 00:08:49,870
pushes directly to master . going
through the peer review process i don't

122
00:08:49,870 --> 00:08:52,720
know how many of you doing the
application security but if you got to

123
00:08:52,720 --> 00:08:55,960
make sure that people go through peer
review process of their code before

124
00:08:55,960 --> 00:08:58,180
merging into what goes into production

125
00:08:58,180 --> 00:09:03,640
this is a nice little way to alert and
then in terms of like there's a lot of

126
00:09:03,640 --> 00:09:09,430
things that get monitor essentially
gives you so nice little service right

127
00:09:09,430 --> 00:09:12,069
out it's free actually if you want to
try it out and I have no affiliation

128
00:09:12,070 --> 00:09:17,020
lost wax it like it yeah

129
00:09:17,020 --> 00:09:22,840
soho space stuff already heard of us
query cool couple

130
00:09:22,840 --> 00:09:27,730
we're gonna talk about all these the
idea is we're pushing the detection down

131
00:09:27,730 --> 00:09:30,700
to the host and these are some tools
that will facilitate you doing that in

132
00:09:30,700 --> 00:09:35,470
your organization so as query it's
basically a rootkit for these various

133
00:09:35,470 --> 00:09:36,280
things

134
00:09:36,280 --> 00:09:39,939
it allows you to hook all the different
functions on the operating system and

135
00:09:39,940 --> 00:09:46,870
then use a sequel like language to query
all that information super awesome right

136
00:09:46,870 --> 00:09:49,779
now it's just for mac linux and bsd but

137
00:09:49,779 --> 00:09:53,769
the guy that wrote in facebook quit
facebook and now has its own company and

138
00:09:53,769 --> 00:09:57,910
the rival windows when soon so it's
worth checking out once they really said

139
00:09:57,910 --> 00:10:02,230
so these are kind of the queries you can
do you run like a top like I want to

140
00:10:02,230 --> 00:10:07,600
know any given day does who has full
disk encryption enabled you can schedule

141
00:10:07,600 --> 00:10:12,970
things you can do file integrity modern
electric wire type stuff and you really

142
00:10:12,970 --> 00:10:17,589
the what most people probably interested
in the query packs for these probably

143
00:10:17,589 --> 00:10:19,629
can't see see it

144
00:10:19,629 --> 00:10:24,519
so Facebook publishes a ton of query
packs for these and they go from hey as

145
00:10:24,519 --> 00:10:29,259
disk encryption able to are you running
this malware variant right so you can

146
00:10:29,259 --> 00:10:33,879
push these configs out to your fleet it
will run and then you basically need a

147
00:10:33,879 --> 00:10:38,319
way to have that data check back in
somewhere and all that is built into iOS

148
00:10:38,319 --> 00:10:41,439
query the ability to for those logs out
somewhere

149
00:10:41,439 --> 00:10:46,509
most people use splunk to get that done
so here's an example for checking-in

150
00:10:46,509 --> 00:10:53,290
splunk so for the OSX attacks KO malware
you can say okay these this is the this

151
00:10:53,290 --> 00:10:56,410
is the query and then if there's anybody
in your fleet that had that on there

152
00:10:56,410 --> 00:11:05,110
would pop up there super useful we're
going to go right so doorman doorman

153
00:11:05,110 --> 00:11:09,939
allows you to actually interact with
those OS query configs a more timely

154
00:11:09,939 --> 00:11:13,599
manner normally if you wanted to change
the config however you're managing your

155
00:11:13,600 --> 00:11:18,370
OS query config and most people will use
like chef puppet to do that you have to

156
00:11:18,370 --> 00:11:22,509
push that change out wait for the chef
chef job Toronto after out how are often

157
00:11:22,509 --> 00:11:26,620
that runs and then let it run and then
wait for your data to come back door man

158
00:11:26,620 --> 00:11:29,620
is like another agent that would run on
that will allow you to do that in a bit

159
00:11:29,620 --> 00:11:33,790
more interactive way kinda looks like
that it will show you your active nodes

160
00:11:33,790 --> 00:11:37,599
and then you can say hey I want to run
this particular query because i'm

161
00:11:37,600 --> 00:11:42,610
looking for this md5 across the fleet
then you can use to like doorman to

162
00:11:42,610 --> 00:11:44,050
facilitate doing that

163
00:11:44,050 --> 00:11:48,609
faster than like your chef turnaround
time access cool

164
00:11:48,610 --> 00:11:51,610
copyright anybody here to block

165
00:11:52,910 --> 00:11:58,490
just robbed and you're cheating because
you've seen the deck already so

166
00:11:58,490 --> 00:12:03,050
basically it's a colonel hook and it
wants to alert you when anytime software

167
00:12:03,050 --> 00:12:07,250
wants to persist so it kind of looks
like that's okay i did something your

168
00:12:07,250 --> 00:12:10,400
developers installing a bunch of stuff
because they always install the weirdest

169
00:12:10,400 --> 00:12:14,510
stuff to do whatever and then this would
pop up in their face and say hey this

170
00:12:14,510 --> 00:12:17,510
this tool wants to go ahead and be
persistent and launched every time you

171
00:12:17,510 --> 00:12:21,650
start up do you want to allow this or
not so pushing responsibility and

172
00:12:21,650 --> 00:12:25,490
alerting and some other things down to
the developer level or the host level

173
00:12:25,490 --> 00:12:33,410
about Little Snitch cool host-based
firewall should probably use it it does

174
00:12:33,410 --> 00:12:38,480
have a wet as a 10 day still there's no
tienen apparently talk to rob

175
00:12:39,590 --> 00:12:44,060
I think it's an immunity stuff the same
thing just alert she allows you to

176
00:12:44,060 --> 00:12:47,719
manage connections so if something shady
is going on

177
00:12:47,720 --> 00:12:52,160
it should allow you on the host to to
get alerted that something weirds going

178
00:12:52,160 --> 00:12:58,459
on about carbon black anybody use carbon
black alright cool

179
00:12:58,460 --> 00:13:04,520
yay I love carbon black and basically
allows you to monitor net connections

180
00:13:04,520 --> 00:13:09,860
file rights registry queries basically
everything that happens on a host does

181
00:13:09,860 --> 00:13:14,300
support windows supports mac supports
some flavors of linux but not have fun

182
00:13:14,300 --> 00:13:18,170
too and so whats there below is like
some queries you to run so like if you

183
00:13:18,170 --> 00:13:23,719
wanted to find any executable in the
system that was co-signed with a code of

184
00:13:23,720 --> 00:13:28,340
gentle wiki so you're looking for many
cats carbon black could be on your fleet

185
00:13:28,340 --> 00:13:30,950
you can have that as a watch list or
however you want you choose to do that

186
00:13:30,950 --> 00:13:35,330
it will alert you when many cats was on
someone's box same thing for someone

187
00:13:35,330 --> 00:13:41,450
turning off file encryption unsigned
jars doing weird stuff or like someone's

188
00:13:41,450 --> 00:13:46,220
trying to dump OS x axis so kind of
looks like that so this is an example of

189
00:13:46,220 --> 00:13:51,800
somebody kicking off command XE XE
that's kicks off powershell who then

190
00:13:51,800 --> 00:13:52,880
starts doing

191
00:13:52,880 --> 00:13:57,290
Who am I tasks so basically common post
exploitation stuff so you can visually

192
00:13:57,290 --> 00:14:01,550
see what's going on there what's
highlighted is like we're triggering on

193
00:14:01,550 --> 00:14:05,030
the dash encoded commands you can
trigger on command line arguments you

194
00:14:05,030 --> 00:14:05,560
command

195
00:14:05,560 --> 00:14:10,719
on alert on net connections outbound or
just anything you want it's pretty

196
00:14:10,720 --> 00:14:17,020
powerful tool same thing what does
similar things for mac and so system on

197
00:14:17,020 --> 00:14:20,980
is like the poor man's version of that a
couple of really smart guy Carlos Perez

198
00:14:20,980 --> 00:14:24,820
done blog post on adjacent Craig has
been some blog posts on it on you can

199
00:14:24,820 --> 00:14:28,600
use system on as a carbon black
replacement so if you can't afford the

200
00:14:28,600 --> 00:14:32,650
outrageous fees they charge for that you
can look at that as an option and then

201
00:14:32,650 --> 00:14:36,760
OS query for windows will come out in
the next couple months would be another

202
00:14:36,760 --> 00:14:44,860
thing to investigate if you've got a
monitor windows stuff and so all here so

203
00:14:44,860 --> 00:14:50,500
many slots all that data has to go
somewhere right so who relies on like

204
00:14:50,500 --> 00:14:53,500
their end user to like let them know
when something bad is going on

205
00:14:54,160 --> 00:14:59,020
nobody awesome good yeah that was the
right answer so you want all that was

206
00:14:59,020 --> 00:15:02,949
queried at carbon black get all that
other data to go somewhere so you can

207
00:15:02,950 --> 00:15:08,920
now run queries against it or do mr.
other instrumentation right so splunk is

208
00:15:08,920 --> 00:15:10,240
a way to do that

209
00:15:10,240 --> 00:15:14,530
this is the enterprise dap which is an
add-on that just shows you really neat

210
00:15:14,530 --> 00:15:18,730
things about fleet same thing if you
want to do help you can do an elk saxo

211
00:15:18,730 --> 00:15:23,830
elasticsearch logstash & Gabbana same
thing all those logs forward into an

212
00:15:23,830 --> 00:15:29,740
elastic search database and then you can
now run queries against those to look

213
00:15:29,740 --> 00:15:34,150
for indicating a compromise who's who's
running what version software whatever

214
00:15:34,150 --> 00:15:38,530
it is that you're logging so the idea is
I need to get all that data from that

215
00:15:38,530 --> 00:15:42,430
laptop to somewhere where someone that
cares about it is actually doing queries

216
00:15:42,430 --> 00:15:46,750
or is at least that tool is creating
email alerts for someone to take some

217
00:15:46,750 --> 00:15:49,959
action later really depends on the size
of your shop and how many people you're

218
00:15:49,959 --> 00:15:54,939
trying to protect Maine's you're welcome
sick

219
00:15:54,940 --> 00:15:57,940
awesome they're very

220
00:15:58,520 --> 00:16:04,340
very courteous in terms of Simeon so
Chris just talk about some low-cost

221
00:16:04,340 --> 00:16:05,690
options

222
00:16:05,690 --> 00:16:09,440
this is an alternative for shops that
really can't afford they have OSX and

223
00:16:09,440 --> 00:16:12,350
developing code but they can't
necessarily afford a patch management

224
00:16:12,350 --> 00:16:20,630
tool so Simmons free built by google
runs on google cloud here is the

225
00:16:20,630 --> 00:16:23,900
information i think is most important it
is

226
00:16:25,610 --> 00:16:30,020
besides the fact that it's free and it
runs an enterprise-level and we all know

227
00:16:30,020 --> 00:16:31,790
patch management 101

228
00:16:31,790 --> 00:16:35,329
there's a repo out there and get her but
you can download this from and there are

229
00:16:35,330 --> 00:16:39,260
two pieces to it there's the web
application that runs on google cloud

230
00:16:39,260 --> 00:16:44,810
and basically the client portion of that
feeds you create clients for each

231
00:16:44,810 --> 00:16:50,839
individual laptop and that client feeds
into the server hosted on Google Cloud

232
00:16:50,840 --> 00:16:55,820
and you can push patches from that
server the patches are themselves monkey

233
00:16:55,820 --> 00:17:01,940
and it's essentially xml and you can
keep developer laptops up-to-date and

234
00:17:01,940 --> 00:17:05,930
it's I'd say it's moderately difficult
to get up to speed once you understand

235
00:17:05,930 --> 00:17:10,700
it it's really nice and another thing is
you can actually when you provide the

236
00:17:10,700 --> 00:17:14,720
client to folks you can put all of the
things that they need like the their own

237
00:17:14,720 --> 00:17:20,510
personal key set of keys and their
configuration inside of the dmg and then

238
00:17:20,510 --> 00:17:25,160
you know gpg encrypted or whatever the
case is provided to them and once they

239
00:17:25,160 --> 00:17:28,640
run the dmg they're going to go there
hooked in push patches is very simple

240
00:17:28,640 --> 00:17:29,810
and it's free

241
00:17:29,810 --> 00:17:32,810
I think the only and this is a
screenshot of what it looks like

242
00:17:33,320 --> 00:17:39,290
I think the only thing that is a sort of
pertinent to mention in terms of cost is

243
00:17:39,290 --> 00:17:45,020
that while it's free storage can cost
say or twenty ten thirty person

244
00:17:45,020 --> 00:17:48,139
organization might have spent twenty
bucks

245
00:17:48,140 --> 00:17:53,480
30 bucks a month just on storage but
it's really a low-cost option so just

246
00:17:53,480 --> 00:17:56,810
something for those folks that can't
afford the big stuff

247
00:17:56,810 --> 00:18:01,610
ok so now we're going to talk a lot
about AWS time

248
00:18:02,900 --> 00:18:11,930
good on ya we had like a hundred much a
lot of slides so with AWS our goal with

249
00:18:11,930 --> 00:18:19,610
us to harden because actually before I
start who's using AWS alright so almost

250
00:18:19,610 --> 00:18:21,560
everybody's using native yes

251
00:18:21,560 --> 00:18:25,280
so what we wanted to do was this kind of
ties back that story I was telling you

252
00:18:25,280 --> 00:18:31,280
my big concern was yes i can go in after
the fact yes i can harden but I really

253
00:18:31,280 --> 00:18:35,389
don't know what's happening when things
are changing if people are doing

254
00:18:35,390 --> 00:18:39,230
malicious things so that is what we're
going to cover during the monitoring

255
00:18:39,230 --> 00:18:43,340
section but our goal is to heart monitor
and then be able to recover at the

256
00:18:43,340 --> 00:18:49,850
worst-case happens so I took the AWS
security fundamentals course working

257
00:18:49,850 --> 00:18:54,139
through certification alongside the
people I'm working with and what I

258
00:18:54,140 --> 00:18:57,800
realized is their recommendations
actually followed very closely along

259
00:18:57,800 --> 00:19:04,940
with the real world sort prioritization
and controls that I wanted to enact and

260
00:19:04,940 --> 00:19:12,200
Chris as well inside of AWS use a lot of
us so we want to make it difficult

261
00:19:12,200 --> 00:19:17,570
obviously for attackers to reach us as a
few basic things you need to know these

262
00:19:17,570 --> 00:19:21,350
five things should absolutely be on your
checklist and talk about things were not

263
00:19:21,350 --> 00:19:25,310
talking about this in this discussion
but don't use the root account for every

264
00:19:25,310 --> 00:19:33,350
day operational attack operational stuff
will say in terms of the access keys you

265
00:19:33,350 --> 00:19:36,050
don't need them for the root account
because it's not doing operational

266
00:19:36,050 --> 00:19:39,620
things that shouldn't be interacting
with the API multi-factor authentication

267
00:19:39,620 --> 00:19:45,139
enabling multi-factor authentication for
the API and then of course strong

268
00:19:45,140 --> 00:19:52,580
password policy so every AWS account has
a has a room every AWS environment has a

269
00:19:52,580 --> 00:19:58,220
root account and recounts got
essentially of that environment and what

270
00:19:58,220 --> 00:20:01,910
we're going to talk about when we talk
about learning and when we talk about

271
00:20:01,910 --> 00:20:05,900
why not to use this account will all tie
and we talked about cloud watching

272
00:20:05,900 --> 00:20:06,820
service offered by

273
00:20:06,820 --> 00:20:12,700
AWS so let's start with the access keys
okay obviously don't use their the root

274
00:20:12,700 --> 00:20:16,330
account for operational purposes to beat
the access keys make sure that you have

275
00:20:16,330 --> 00:20:21,580
a both written and verbal policy that
states you won't use this for everyday

276
00:20:21,580 --> 00:20:27,399
things if credentials so with
multi-factor authentication if your

277
00:20:27,399 --> 00:20:29,469
credentials are guests or stolen

278
00:20:29,470 --> 00:20:34,029
this will help you there are a couple
ways you can do it you can enable the

279
00:20:34,029 --> 00:20:38,889
mfa for every user using virtual devices
or hardware devices that i know of

280
00:20:38,889 --> 00:20:44,408
there's only gemalto for eight of us
hardware that's really easy to do and

281
00:20:44,409 --> 00:20:48,879
because of that and because we had so
many slides it'll be in the published

282
00:20:48,879 --> 00:20:52,299
Dec of how to enable this but it's
really not that complicated so we're

283
00:20:52,299 --> 00:20:54,759
skipping it for brevity

284
00:20:54,759 --> 00:20:57,700
however there are some things we don't
want to skip about it when you enable

285
00:20:57,700 --> 00:21:03,879
mfa it's worth noting that the well
first of all that people without I am

286
00:21:03,879 --> 00:21:07,149
privileges don't have the ability to
enable that on their own account by

287
00:21:07,149 --> 00:21:08,379
default

288
00:21:08,379 --> 00:21:12,699
obviously obviously that's an issue we
don't want administrators like doing a

289
00:21:12,700 --> 00:21:15,429
screen share or something like that

290
00:21:15,429 --> 00:21:24,250
asking around QR codes and whole thing
can be messy so just email it out 10 its

291
00:21:24,250 --> 00:21:29,950
hope this is the policy probably didn't
get that

292
00:21:30,519 --> 00:21:33,549
here's a link that will be in the
published docks that give you a link to

293
00:21:33,549 --> 00:21:37,480
a policy that you can attach the
people's accounts that will allow them

294
00:21:37,480 --> 00:21:40,779
at very restricted set of permissions
and that'll be to manage their own

295
00:21:40,779 --> 00:21:46,840
multi-factor authentication advisor
two-factor authentication so if you need

296
00:21:46,840 --> 00:21:51,279
him fa and you absolutely should need
mfa for a shared account so assuming

297
00:21:51,279 --> 00:21:55,990
more than one person these access to
that account we get assumption you can

298
00:21:55,990 --> 00:22:01,750
use that password storage service
because what AWS does they use totp for

299
00:22:01,750 --> 00:22:05,379
the two-factor sorry multi-factor
authentication code and so like

300
00:22:05,379 --> 00:22:11,529
1password of LastPass and whoever else
services should use it so this is the

301
00:22:11,529 --> 00:22:14,919
interesting part and we're going to talk
about a little bit later when we go into

302
00:22:14,919 --> 00:22:19,680
a specific you or thread but one thing
that you'll sort of a really

303
00:22:19,680 --> 00:22:23,160
whirring theme and I know Chris kind of
touched on it is that when people get

304
00:22:23,160 --> 00:22:28,080
exploited it's typically through the API
it's typically through leaked AWS access

305
00:22:28,080 --> 00:22:33,810
key ID and secret so we're going to talk
about will help prevent the stolen

306
00:22:33,810 --> 00:22:37,050
credentials from actually becoming a
real huge problem for you

307
00:22:37,050 --> 00:22:42,240
so in order in order to require
multi-factor authentication not just for

308
00:22:42,240 --> 00:22:46,770
the web console but for the API is all
you have to do on your pulse just add

309
00:22:46,770 --> 00:22:51,330
this one line that's a conditional and
this for both web and API will require

310
00:22:51,330 --> 00:22:56,340
multi-factor authentication I first it's
painful i can tell you from experience

311
00:22:56,340 --> 00:23:01,800
it's really painful because then things
don't work and when you're doing this

312
00:23:01,800 --> 00:23:05,280
going back a slide it should be for
admin power users so the people that

313
00:23:05,280 --> 00:23:10,020
need to do a lot of things are now I
kind of not super happy with you there

314
00:23:10,020 --> 00:23:15,360
is a solution though and that is sts
security token service and that's

315
00:23:15,360 --> 00:23:19,110
essentially I don't know if you want to
chime in there on how you seen that done

316
00:23:19,110 --> 00:23:25,320
ok I can have i've seen that done in a
way that you can run a client create a

317
00:23:25,320 --> 00:23:30,540
client locally i will request a
temporary token for you so I like you

318
00:23:30,540 --> 00:23:36,120
say you want to do a 24-hour token you
can takes a bit of takes a bit of

319
00:23:36,120 --> 00:23:39,810
slicing and dicing and some code writing
but you could say hey I want to go ahead

320
00:23:39,810 --> 00:23:46,290
and tighten my to fax solution to fact
will generate me a 24-hour use 8a AWS

321
00:23:46,290 --> 00:23:50,129
access key secret key and then allow
someone to do work do their work for the

322
00:23:50,130 --> 00:23:54,330
day and just have to do that everyday so
in the event they do publish that key

323
00:23:54,330 --> 00:23:56,730
now the clock is ticking on how useful
that is

324
00:23:56,730 --> 00:24:01,140
yeah I'm actually so this is the I've
got a link in here against the published

325
00:24:01,140 --> 00:24:06,000
slides it's a code I wrote that does
this exactly what Chris talking about

326
00:24:06,000 --> 00:24:10,590
for a day you might be eight hours
whatever for for whatever amount of time

327
00:24:10,590 --> 00:24:13,590
. you want specifying you can change
that in the script

328
00:24:13,590 --> 00:24:18,810
you will have access to the API using
some temporary credentials and they

329
00:24:18,810 --> 00:24:23,700
expire after that duration is really
awesome this is an example of running

330
00:24:23,700 --> 00:24:28,050
that script what you get back so what
you put in is your access key ID and

331
00:24:28,050 --> 00:24:32,908
your access secret it sends those
credentials to me I log into your view

332
00:24:32,909 --> 00:24:40,080
environment one last kind of just sleep
a little bit nothing maybe it wasn't fun

333
00:24:40,080 --> 00:24:46,678
so anyways so your access key ID and
wait to you in a second yeah so let me

334
00:24:46,679 --> 00:24:49,679
help you up to you access keys all day
long

335
00:24:50,580 --> 00:24:56,039
this is true that is true so for access
key so you provide your access key ID

336
00:24:56,039 --> 00:25:01,739
and secret and then it hits the API and
you get back a new idea a new secret and

337
00:25:01,739 --> 00:25:10,320
no one no one and a temporary token so
you get three sets of new credentials

338
00:25:10,320 --> 00:25:12,539
back and again they expire after a
period of time

339
00:25:12,539 --> 00:25:17,429
why this is important is obviously there
are tools or so there's people that need

340
00:25:17,429 --> 00:25:20,759
to push code they need to push
infrastructure they need to do this is

341
00:25:20,759 --> 00:25:26,460
just an example of using one of I start
eight of us is a tools there CLI tools

342
00:25:26,460 --> 00:25:31,139
and so you know this kind of idea that
it does work you passes the new

343
00:25:31,139 --> 00:25:35,248
credentials and you can still use the
API you just have to have the seconds

344
00:25:35,249 --> 00:25:38,669
form of authentication is required

345
00:25:38,669 --> 00:25:42,210
it's really really helpful and
frustrated with a frustrated attack

346
00:25:42,210 --> 00:25:55,200
right so for those who don't like Ruby
Python is available at this link you got

347
00:25:55,200 --> 00:25:56,849
a Python set of code

348
00:25:56,849 --> 00:26:02,009
I'm so elastic Beanstalk by default does
not support stss the one area that I

349
00:26:02,009 --> 00:26:07,080
found them you run into trouble with so
what you do is you actually hook code

350
00:26:07,080 --> 00:26:12,899
pipeline another eight of us service
into github into s3 or into whether what

351
00:26:12,899 --> 00:26:20,609
is the code commit so it's like they're
AWS get hub and then you're good so I'm

352
00:26:20,609 --> 00:26:23,249
not going to cover this too in depth but
obviously you should have a password

353
00:26:23,249 --> 00:26:28,470
policy because you know that's been
found that you can bypass AWS security

354
00:26:28,470 --> 00:26:33,929
controls to brute-force Pascal's so
should have a policy enable then again

355
00:26:33,929 --> 00:26:38,700
you can read all this later in the
published slides example policy so to

356
00:26:38,700 --> 00:26:44,489
recap make it hard to get to make people
jump through moves and figure out how

357
00:26:44,489 --> 00:26:45,720
sts works on

358
00:26:45,720 --> 00:26:50,040
you figure that out you're gonna you're
gonna be able to harden things without

359
00:26:50,040 --> 00:26:53,250
hurting people so this is the things we
won't talk about race the think these

360
00:26:53,250 --> 00:26:57,030
are the things that everybody else talks
about you like s3 bucket policies

361
00:26:57,030 --> 00:27:00,300
security groups things like that right
and that's important and you should

362
00:27:00,300 --> 00:27:04,020
definitely read up on that and that's
part of your there's a couple checklist

363
00:27:04,020 --> 00:27:07,320
that abs provides our operational
checklist and auditing checklist in

364
00:27:07,320 --> 00:27:09,870
those cases you have you absolutely
should go through these things read up

365
00:27:09,870 --> 00:27:13,229
on us whatever he talks about I want to
provide I think we want to provide

366
00:27:13,230 --> 00:27:17,520
something a little bit more practical
and then also use trusted trusted

367
00:27:17,520 --> 00:27:26,490
advisor which is a na again later that
cup o ok cool that catches these things

368
00:27:26,490 --> 00:27:29,730
so the low-hanging fruit kind of stuff
this will catch it

369
00:27:30,240 --> 00:27:36,300
so going back to it again like you
google you know AWS security of these

370
00:27:36,300 --> 00:27:39,300
are the first few links that pop up
there pretty good

371
00:27:40,050 --> 00:27:44,610
so a lot of those check this out there
this is I think where I found this to be

372
00:27:44,610 --> 00:27:47,729
a little bit more interesting this is
more about monitoring detection in real

373
00:27:47,730 --> 00:27:55,440
time so assuming you're hardening and
Prevention this failed we will discuss

374
00:27:55,440 --> 00:28:00,000
some examples of some putting in some
alerts that will allow you to detect

375
00:28:00,000 --> 00:28:03,960
something is going on and what I will
say about this especially when you talk

376
00:28:03,960 --> 00:28:08,340
about config is that there's a ton of
noise that comes out these tools so it's

377
00:28:08,340 --> 00:28:12,810
going to take you some time to kind of
pared down into what's important but i

378
00:28:12,810 --> 00:28:18,720
guess i'd rather have the fire hose that
you know limited or no information so

379
00:28:18,720 --> 00:28:23,700
there's four services cloud trailers SMS
cloud watch and config these for

380
00:28:23,700 --> 00:28:28,110
services combined can provide you a ton
of real-time monitoring and detection

381
00:28:28,110 --> 00:28:33,479
what I'll say is the SMS is used for
notifications cloud trail is simply a

382
00:28:33,480 --> 00:28:37,590
lot it's a set of logs on everything
that goes on your AWS environment and

383
00:28:37,590 --> 00:28:42,270
crystal about config config essentially
can what I'll say about configures

384
00:28:42,270 --> 00:28:49,139
configure sort of like a block for stool
and one objects that event and then and

385
00:28:49,140 --> 00:28:50,700
then a cloud watches

386
00:28:50,700 --> 00:28:54,690
my watch is more of a like fine-tune
these are the specific things that I'm

387
00:28:54,690 --> 00:28:56,490
looking for

388
00:28:56,490 --> 00:28:59,730
here's a good example of some of that
you can see there's a lot of services

389
00:28:59,730 --> 00:29:04,980
here and it may be hard to see but they
all feed into cloud trail the logging

390
00:29:04,980 --> 00:29:09,510
service right and at that point what you
and get started to an s3 bucket at that

391
00:29:09,510 --> 00:29:13,320
point what you have the option of doing
is analyzing and pulling and do whatever

392
00:29:13,320 --> 00:29:17,310
you want that data and so we're going to
talk about some of that this is our

393
00:29:17,310 --> 00:29:18,899
basic setup for the talk

394
00:29:18,900 --> 00:29:23,280
you've got cloud trail keeping logs
cloud watch config pulling from those

395
00:29:23,280 --> 00:29:27,899
logs and then whatever they analyzed and
find to be something they should tell

396
00:29:27,900 --> 00:29:34,080
you about they pushed asking that SMS
SMS you up so i'm going to clock out

397
00:29:34,080 --> 00:29:39,570
real quick I'm cloud trill is like I
said where you store your where once you

398
00:29:39,570 --> 00:29:43,320
turn on everything gets logged it's
really easy to turn it on once you start

399
00:29:43,320 --> 00:29:48,030
turning it on like you do here just give
it some information like s3 bucket name

400
00:29:48,030 --> 00:29:52,830
that you want to want to have you have
to approve it to have you know i am and

401
00:29:52,830 --> 00:29:58,620
i am role so that it can do what it
needs to do and then but it's enabled

402
00:29:58,620 --> 00:30:02,520
like it's really super simple to do and
you'd be surprised how many AWS

403
00:30:02,520 --> 00:30:05,490
environments I've seen that don't even
have cloud trail on let alone something

404
00:30:05,490 --> 00:30:09,270
things were going to talk about or maybe
you wouldn't be surprised I am I don't

405
00:30:09,270 --> 00:30:10,170
know

406
00:30:10,170 --> 00:30:17,640
so SMS again this is a notification
service so it offers a few things that i

407
00:30:17,640 --> 00:30:20,640
really like for some of these things are
going to talk about

408
00:30:21,150 --> 00:30:25,920
I want immediate notification so you can
SMS you can get it sent to your you know

409
00:30:25,920 --> 00:30:30,990
whoever this case me and a couple other
folks email and then also if you've got

410
00:30:30,990 --> 00:30:36,330
an app and this is really nice is that
will send that JSON request off to a nap

411
00:30:36,330 --> 00:30:41,490
and you'll be able to store whatever
data that it set right so if you were

412
00:30:41,490 --> 00:30:45,300
trying to build your own thing and
filter out the data this is a good way

413
00:30:45,300 --> 00:30:50,909
to do so you can also get this hook in
the slack and mention that or whatever

414
00:30:50,910 --> 00:30:55,710
you're using campfire or whatever the
case may be a suggestion you can get

415
00:30:55,710 --> 00:30:57,270
immediate notifications

416
00:30:57,270 --> 00:31:01,020
this is an example you go in SMS you
create a topic this one's called root

417
00:31:01,020 --> 00:31:03,340
account usage and there's a reason for
that i am going

418
00:31:03,340 --> 00:31:08,830
discuss it and then you create
subscribers this one's like an SMS this

419
00:31:08,830 --> 00:31:14,860
is all click . click it's very easy
create SMS I think this one's email and

420
00:31:14,860 --> 00:31:18,280
essentially get mobile subscriptions
that fall under a topic so something

421
00:31:18,280 --> 00:31:21,550
gets triggered whatever ways you've
setup and whoever you've told that this

422
00:31:21,550 --> 00:31:24,730
needs to go to it will be there

423
00:31:24,730 --> 00:31:33,730
yeah I'm excited config so I cameras and
it's the front blunt force tool everyone

424
00:31:33,730 --> 00:31:40,270
it's a basically all the login right so
allows you to say you can use config for

425
00:31:40,270 --> 00:31:45,340
doing discovery of your assets
compliance type things tracking your

426
00:31:45,340 --> 00:31:49,120
change management or using after
incident response so like hey we had an

427
00:31:49,120 --> 00:31:53,649
incident let's go through and see what
changed with that incident or because of

428
00:31:53,650 --> 00:31:58,600
that incident was before and was after
state so it comes with a whole bunch of

429
00:31:58,600 --> 00:32:01,629
like prepackaged rules you can use and
you can certainly start rolling your own

430
00:32:01,630 --> 00:32:06,100
but you know things like a is cloud
trail enable like I want to know that I

431
00:32:06,100 --> 00:32:09,820
need that for all the other things you
know did you encrypt volumes on your ec2

432
00:32:09,820 --> 00:32:16,210
instances things like that can add that
no that's does yeah I mean coming ssh

433
00:32:16,210 --> 00:32:21,340
disable those things that you want to be
alerted to so examples of things that

434
00:32:21,340 --> 00:32:26,409
you can set up alerts for changing the
firewall so someone is compromised stuff

435
00:32:26,410 --> 00:32:30,370
and now go ahead and open and allow into
the port in for you or they're just

436
00:32:30,370 --> 00:32:33,070
doing that because that's what

437
00:32:33,070 --> 00:32:38,020
yeah there's a good you my guys named
Robert did all the AWS exploitation or

438
00:32:38,020 --> 00:32:42,280
post expectations of a cantaloupe up
we'll talk about what we got to give a

439
00:32:42,280 --> 00:32:46,180
whole bunch of like post exploitation
things you want to change in here in the

440
00:32:46,180 --> 00:32:49,240
various AWS services once you have
access

441
00:32:49,240 --> 00:32:52,690
so this will allow you to actually
backtrack and go through its really

442
00:32:52,690 --> 00:32:56,230
sneaky stuff too so you know ideally you
would like look at the log and then go

443
00:32:56,230 --> 00:32:59,200
through and make these config changes
can pick edition so you can actually

444
00:32:59,200 --> 00:33:04,510
alert on that up to like any change it
also you cannot learn on all changes if

445
00:33:04,510 --> 00:33:06,000
you're feeling

446
00:33:06,000 --> 00:33:13,230
sadomasochistic so to get going like you
some examples of some of the things you

447
00:33:13,230 --> 00:33:17,790
select a minimum you want to do like
learning on that security groups network

448
00:33:17,790 --> 00:33:23,070
ackles and the BBC's so choose what
resources you want to track or you can

449
00:33:23,070 --> 00:33:29,790
choose everything which is a ton of
stuff again create your bucket crazy as

450
00:33:29,790 --> 00:33:35,760
soon as topic that will send alerts out
and create the role and then you're all

451
00:33:35,760 --> 00:33:37,500
ready to go

452
00:33:37,500 --> 00:33:43,290
alright so we talked about was a fun for
stool for school

453
00:33:44,130 --> 00:33:47,850
yeah so now this cloud watch her find
and there's going to be four alert

454
00:33:47,850 --> 00:33:51,419
specifically that we're going to talk
about so we can be very as I said

455
00:33:51,420 --> 00:33:57,330
particular the forever to talk about our
what's not on there but building alerts

456
00:33:57,330 --> 00:34:02,970
tracking root account usage failed
logins and then unauthorized IM activity

457
00:34:02,970 --> 00:34:08,190
which goes back to and we'll talk about
it or what Christmas talking about this

458
00:34:08,190 --> 00:34:12,330
date of us interrogate tool so the
building alarm is a very simple one

459
00:34:12,870 --> 00:34:18,060
essentially if you're if you start
spending a lot more money then you

460
00:34:18,060 --> 00:34:22,049
normally spend you want to be alerted to
write that seems to be the theme is when

461
00:34:22,050 --> 00:34:26,820
people still access he starts spitting
up alot of people seeing that like lost

462
00:34:26,820 --> 00:34:29,730
XD and also sending a
hundred-thousand-dollar EDS bill because

463
00:34:29,730 --> 00:34:35,310
people are cracking bitcoins i will talk
about a little bit about you know whose

464
00:34:35,310 --> 00:34:39,000
responsibility that ends up being if you
think AWS going to take care you on that

465
00:34:39,000 --> 00:34:40,320
you might not be right

466
00:34:40,320 --> 00:34:46,379
so in terms of getting that setup you
first have to go in and allow your

467
00:34:46,379 --> 00:34:50,489
account to receive building alerts then
you have to go in and create a topic on

468
00:34:50,489 --> 00:35:01,470
SMS create subscribers sorry for the
medical chill

469
00:35:01,470 --> 00:35:02,419
yeah

470
00:35:02,420 --> 00:35:12,650
where is anyway so first i watch you go
into the metrics portion of cloud watch

471
00:35:12,650 --> 00:35:17,690
we're going to talk about metrics and
loves so metrics on left hand side you

472
00:35:17,690 --> 00:35:23,119
go in and you just choose building
metrics and you church for us US dollars

473
00:35:23,660 --> 00:35:29,359
choose your currency set up a building
spend . this show sixteen hundred

474
00:35:29,359 --> 00:35:32,930
dollars so if you go over that sixteen
hundred dollars within your a lot of

475
00:35:32,930 --> 00:35:37,759
time frame in order and the exact steps
are found here this one's a little bit

476
00:35:37,760 --> 00:35:45,380
different the root account log log in so
this is sort of I like this part talking

477
00:35:45,380 --> 00:35:48,619
about this part because i have a real
experience about this and I team can

478
00:35:48,619 --> 00:35:53,390
attest to it essentially what happens is
so I said don't use the root account

479
00:35:53,390 --> 00:35:58,759
operationally for us the root account
gets used there are times when you have

480
00:35:58,760 --> 00:36:04,220
to use it when it gets used if somebody
at this point doesn't tell us a time

481
00:36:04,220 --> 00:36:07,098
that they're going to use the root
account everybody flips out everybody

482
00:36:07,099 --> 00:36:08,000
freaks out right

483
00:36:08,000 --> 00:36:12,740
yeah even if it's it's always mundane
stuff we always flip out the reason is

484
00:36:12,740 --> 00:36:16,848
anytime something logs and go through
credentials everybody gets alerted on

485
00:36:16,849 --> 00:36:20,180
and we all know and we're on it like a
minute

486
00:36:20,180 --> 00:36:26,868
so it's kind of and that wasn't
something we did we didn't put a policy

487
00:36:26,869 --> 00:36:29,990
out we were like oh this is how it's
going to work just reset the alert and

488
00:36:29,990 --> 00:36:32,750
then it just sort of work like everybody
kind of just jumps on things when they

489
00:36:32,750 --> 00:36:37,130
see these notifications so for your
organization that may work i don't know

490
00:36:37,130 --> 00:36:46,130
for ours did so again you have to go
into cloud watch instead of metrics you

491
00:36:46,130 --> 00:36:50,839
choose logs so logs on the left-hand
side you're going to pull from your

492
00:36:50,839 --> 00:36:55,849
gonna choose the story that trail that
you want to pull from from cloud trail

493
00:36:55,849 --> 00:37:00,230
whatever log stream you've got then you
want to use this regex which may or may

494
00:37:00,230 --> 00:37:01,400
not be visible

495
00:37:01,400 --> 00:37:05,690
don't worry again we've got links to
everything and obviously slides you set

496
00:37:05,690 --> 00:37:09,799
the regex putting some information like
name space kind of just naming

497
00:37:09,799 --> 00:37:15,130
conventions around it and that regex
essentially pilfers the cloud trail down

498
00:37:15,130 --> 00:37:19,540
that i like you would with salon or some
other modern tool and a large you right

499
00:37:19,540 --> 00:37:23,980
now we want to create an alarm at this
point we've already got this metric or

500
00:37:23,980 --> 00:37:29,530
this sort of filtering that we're doing
but we don't have an alarm for someone

501
00:37:29,530 --> 00:37:33,010
to create alarm want to go in and say
hey look if you know within a

502
00:37:33,010 --> 00:37:37,840
five-minute period the root account
login more than once or login at least

503
00:37:37,840 --> 00:37:44,020
once or more alert us and we have like a
little nice little uh you know SMS topic

504
00:37:44,020 --> 00:37:48,100
that it goes to and then all the
subscribe to that topic it up again

505
00:37:48,100 --> 00:37:53,259
exact steps linger here so failed login
attempts and it's pretty

506
00:37:53,260 --> 00:37:54,700
self-explanatory

507
00:37:54,700 --> 00:37:58,120
essentially this just as hey somebody's
trying to break in guess the credentials

508
00:37:58,120 --> 00:38:03,580
again so yeah in the interest of time I
don't really want to discuss because

509
00:38:03,580 --> 00:38:06,549
like most of the steps of the same as
last one the only step that's different

510
00:38:06,550 --> 00:38:13,360
is that the regex is a little bit
different and you get that rejects from

511
00:38:13,360 --> 00:38:18,430
this link so but you should have at
least those three by this point account

512
00:38:18,430 --> 00:38:24,819
billing and failed logins another one
kind of ties back into AWS interrogate

513
00:38:24,820 --> 00:38:29,920
so this is the antidote that so if
somebody's trying to see what they do or

514
00:38:29,920 --> 00:38:34,000
if you have malicious internal actors
that are trying to access AWS services

515
00:38:34,000 --> 00:38:38,410
they really shouldn't be authorized for
this will actually help you detect that

516
00:38:38,410 --> 00:38:45,160
so steps of the same as the other two
you go into logs and you set up these

517
00:38:45,160 --> 00:38:51,129
regex and here's the red export finance
it and was later but this is us running

518
00:38:51,130 --> 00:38:58,180
AWS interrogate not much as telling us a
we either have access or don't and then

519
00:38:58,180 --> 00:39:02,919
when it did that an email gets sent to
or however you've set up an SMS in this

520
00:39:02,920 --> 00:39:08,050
case an email got sent out to our party
right that somebody is trying to access

521
00:39:08,050 --> 00:39:12,220
something not supposed so it's real time
I think it takes maybe like few minutes

522
00:39:12,220 --> 00:39:16,779
to catch up but it's pretty useful
curious cycle

523
00:39:17,290 --> 00:39:20,090
ok I know it's a lot of stuff thanks

524
00:39:20,090 --> 00:39:26,570
actually drops code best match it and
you can actually learn on it so that's

525
00:39:26,570 --> 00:39:31,790
awesome yeah so I'm the problem and the
solution there you go so easily because

526
00:39:31,790 --> 00:39:38,420
it is the custom filters the link with
basically if you want to create your own

527
00:39:38,420 --> 00:39:43,310
regex for whatever use case you can
think of there is a read-only can go to

528
00:39:43,310 --> 00:39:48,710
provide you with that information and
I'll bow so like we mentioned before the

529
00:39:48,710 --> 00:39:55,400
great time you want to do something with
all that data right so if you're using

530
00:39:55,400 --> 00:40:00,260
you choose to use flunk there's a ton of
like AWS plugins that come with that

531
00:40:00,260 --> 00:40:05,510
that's probably the two that you
definitely want to use that you can plug

532
00:40:05,510 --> 00:40:10,100
in all of your AWS building activity in
other logs everything else that can come

533
00:40:10,100 --> 00:40:13,850
into that allow you to do alerts so
examples of things you can do billing

534
00:40:13,850 --> 00:40:20,089
usage someone added keys network acl's
someone changing the settings on the

535
00:40:20,090 --> 00:40:24,980
BBC's all interesting things that you
want to know about perhaps you didn't

536
00:40:24,980 --> 00:40:29,210
get around to setting up all the alerts
to send you an email but now you can use

537
00:40:29,210 --> 00:40:34,760
spoke to do some of that as well choose
to do that uncle also do plenty of

538
00:40:34,760 --> 00:40:37,850
alerting and watch list and send you
emails and things happen as well so this

539
00:40:37,850 --> 00:40:39,620
is another way you could do that

540
00:40:39,620 --> 00:40:42,620
so here

541
00:40:45,860 --> 00:40:54,050
yeah yeah yeah i think we talked about
it yet to basically give it give it

542
00:40:54,050 --> 00:41:00,380
permission for splunk to get all that
data into it and be using splunk

543
00:41:00,380 --> 00:41:01,160
enterprise

544
00:41:01,160 --> 00:41:05,779
alright so this is like Sean
geographically some information about

545
00:41:05,780 --> 00:41:10,820
your AWS infrastructure if you're using
this it will also generate a topology

546
00:41:10,820 --> 00:41:14,900
note for you based on out what's the
different services that are coming in

547
00:41:16,660 --> 00:41:20,379
milling alert so everyone cares about
that one no one wants to get that

548
00:41:20,380 --> 00:41:28,599
$100,000 AWS bill when you expected the
1600 dollar invisible feels good to see

549
00:41:28,599 --> 00:41:32,890
so did you make that work needs a native
got spunk will be the AWS account in

550
00:41:32,890 --> 00:41:36,819
order to retrieve the data which makes
sense of anybody uses splunk for that it

551
00:41:36,819 --> 00:41:40,690
needs to be able to to talk to those
things so create the account and then

552
00:41:40,690 --> 00:41:45,160
grab the necessary permissions and
policies all the docs right there if you

553
00:41:45,160 --> 00:41:50,859
want to choose to go down that route so
that's basically it

554
00:41:52,000 --> 00:41:55,720
add the app and the accounts configure
it and you're good to go

555
00:41:56,890 --> 00:42:02,650
yes this one is a little weird one thing
that guy with us worked who works me

556
00:42:02,650 --> 00:42:06,730
realize was that by default even if you
configure the account the other thing

557
00:42:06,730 --> 00:42:10,359
you need to do is actually set up and
they give you instructions on so it's

558
00:42:10,359 --> 00:42:13,180
not like it's something you have to
cover in this talk but essentially you

559
00:42:13,180 --> 00:42:19,089
have to use SMS and SQS SQS a cutie
service and SQS will pull in data from

560
00:42:19,089 --> 00:42:25,599
cloud trail and then at push to SNS and
SMS wishes block so if you want to have

561
00:42:25,599 --> 00:42:29,799
pretty little graphs like that that's
what you have to do it again

562
00:42:29,799 --> 00:42:35,500
instructions are in the plugins yeah
sure just recap down

563
00:42:35,500 --> 00:42:40,150
ok so again alert yourself when things
change even if it's not malicious you

564
00:42:40,150 --> 00:42:45,670
want to know as a security team if it's
a high-risk event use SMS to blast

565
00:42:45,670 --> 00:42:52,450
everybody in real-time and you know at
least the for that I talked about should

566
00:42:52,450 --> 00:42:56,410
be there so cure and so I went on there
and it was really interesting because

567
00:42:56,410 --> 00:42:59,170
what I found out was talking about real
quick

568
00:42:59,170 --> 00:43:03,940
your your costs like what 80s will cover
if you get hacked and when they will

569
00:43:03,940 --> 00:43:09,279
cover so apparently there's like a board
at AWS when you get hacked and you got

570
00:43:09,279 --> 00:43:12,430
the hundred-thousand-dollar build it
says all right what did you do what did

571
00:43:12,430 --> 00:43:16,480
you do to follow our checklist to see to
to do some of the things that we've

572
00:43:16,480 --> 00:43:21,039
talked about here to secure environment
if you didn't meet those things and it's

573
00:43:21,039 --> 00:43:24,520
clear you've just been irresponsible and
not follow any of the practices that

574
00:43:24,520 --> 00:43:28,180
they put out and put out a lot of
information you're comfortable that's

575
00:43:28,180 --> 00:43:29,999
your costs so it's just something

576
00:43:29,999 --> 00:43:37,288
to be aware of i think we all know this
here but for those and don't there's bot

577
00:43:37,289 --> 00:43:43,679
scouring the bucket and get hub looking
for these access keys and then there's a

578
00:43:43,679 --> 00:43:47,129
lot of them that's everyday there's a
lot of and actually that's the last

579
00:43:47,129 --> 00:43:52,709
point right there is so yeah there are a
lot of so this happened when it's crazy

580
00:43:52,709 --> 00:43:56,219
if you go to this link it just happens
over and over again and you just see

581
00:43:56,219 --> 00:44:00,809
time after time i get that happened to
me yet that happened to me 30,000 50,000

582
00:44:00,809 --> 00:44:05,999
like it because might be making money
off people scurrying in finding broken

583
00:44:05,999 --> 00:44:10,198
our people who committed keys so it's
pretty insane but it happens very

584
00:44:10,199 --> 00:44:14,519
frequently i thought it was very
interesting it's something that so on

585
00:44:14,519 --> 00:44:21,149
rested restoration and recovery good
news and bad news so start of the bad

586
00:44:21,149 --> 00:44:23,669
news is there's no silver bullet there's
no great thing that I can give you a

587
00:44:23,669 --> 00:44:27,868
little you know backup everything
seamlessly you've got a plan you're good

588
00:44:27,869 --> 00:44:30,839
to go and you give him some money and
you're done there's nothing that

589
00:44:30,839 --> 00:44:32,369
provides anything like that

590
00:44:32,369 --> 00:44:36,359
the good news is we have some we have a
few basic steps that you can follow for

591
00:44:36,359 --> 00:44:44,639
one don't use AWS to backup your AWS
stuff why credentials get stolen and

592
00:44:44,639 --> 00:44:48,569
backed everything up and they burned
everything down and have a really really

593
00:44:48,569 --> 00:44:51,989
bad time actually code spaces went out
of business because this I don't lose

594
00:44:51,989 --> 00:44:55,739
her to put spaces 1234

595
00:44:55,739 --> 00:45:01,349
it's about right so really bad they went
out of business because of this and so

596
00:45:01,349 --> 00:45:05,939
don't do that the common things that
people back up there are like eat these

597
00:45:05,939 --> 00:45:10,799
are pretty easy to solve things like ec2
images volumes those are really easy to

598
00:45:10,799 --> 00:45:11,549
back out

599
00:45:11,549 --> 00:45:16,829
ap is available and there's these
resources that are in these slides that

600
00:45:16,829 --> 00:45:22,199
show you give you service providers some
ways to do it yourself and then I think

601
00:45:22,199 --> 00:45:29,069
a tool yes scale scalars like that
that's actually have time for questions

602
00:45:29,069 --> 00:45:32,639
if there are you think we would but we
started like five minutes early so and

603
00:45:32,639 --> 00:45:33,689
what are the best

604
00:45:33,689 --> 00:45:37,049
so sure the black hat

605
00:45:37,050 --> 00:45:42,450
sure

606
00:45:42,450 --> 00:45:50,430
so the question was can we talk about
managing ssh-keys yeah so with regard

607
00:45:50,430 --> 00:45:54,690
with regards to managing ssh-keys I'd
start with you have splunk enterprise

608
00:45:54,690 --> 00:46:02,160
now so in that case what you could do is
it's very easy as I'm not sure familiar

609
00:46:02,160 --> 00:46:05,970
with python and moto3 but if you are you
can write your own script that

610
00:46:05,970 --> 00:46:10,740
essentially daily pulls the list of keys
the more interesting thing is what those

611
00:46:10,740 --> 00:46:15,990
keys are associated with and so you have
the ability to go in and list all your

612
00:46:15,990 --> 00:46:21,240
volumes and are easy to images i should
say just go for these two images

613
00:46:21,240 --> 00:46:25,319
whatever at that point you can list all
the key players that are associated with

614
00:46:25,320 --> 00:46:33,270
recent images and you can then also sort
of say like actually I'm going to defer

615
00:46:33,270 --> 00:46:36,750
on that last point out but yeah that's
what you can do you can go you you can

616
00:46:36,750 --> 00:46:42,360
essentially going and list with python
code very simple script who what's using

617
00:46:42,360 --> 00:46:47,070
those ssh keys and then lists all the
ssh keys in terms of management one

618
00:46:47,070 --> 00:46:50,790
thing I'll say those you should 41 the
naming conventions should be they should

619
00:46:50,790 --> 00:46:53,430
they should make sense right like they
shouldn't be

620
00:46:53,430 --> 00:46:56,730
I've seen some weird ones where it's
like I don't make something like Mickey

621
00:46:56,730 --> 00:47:01,170
Mouse or you know whatever it doesn't
make any sense but if you have keys that

622
00:47:01,170 --> 00:47:04,170
are sort of like okay

623
00:47:04,170 --> 00:47:09,720
hi prod medium prod low prod same goes
for staging whatever a little bit easier

624
00:47:09,720 --> 00:47:15,270
to manage those of course then it goes
like hey do I want to rotate those keys

625
00:47:15,270 --> 00:47:18,509
when people leave and you can absolutely
do that but depending on your

626
00:47:18,510 --> 00:47:23,880
environment might be more difficult than
others think that's everything and

627
00:47:23,880 --> 00:47:26,880
follow up on that

628
00:47:34,070 --> 00:47:48,620
so one key to rule them all as a problem
when sh t to the mall or something you

629
00:47:48,620 --> 00:47:49,339
want to say something

630
00:47:49,340 --> 00:47:52,730
yeah let's say you when you're when
you're legitimately doing this and

631
00:47:52,730 --> 00:47:56,960
approaching this from me like i can log
into IM and do those things because a

632
00:47:56,960 --> 00:48:04,370
scalp right scalpel the tool is like a
tool that a whatsit that netflix is

633
00:48:04,370 --> 00:48:07,009
really some tools and then one of the
other consultants shops have released a

634
00:48:07,010 --> 00:48:10,940
tool like you can log into IM and get
all this data for you

635
00:48:10,940 --> 00:48:14,300
yeah there's a few of them out there and
I'll when we do some notes i'll add it

636
00:48:14,300 --> 00:48:17,870
to the slides of when you're not
approaching it from my pen test point of

637
00:48:17,870 --> 00:48:21,529
view like I found these keys what can I
do but you want to say show me what all

638
00:48:21,530 --> 00:48:25,220
these keys can do and i can actually log
into this stuff there's quite a couple

639
00:48:25,220 --> 00:48:28,100
tools that will run and give you those
reports and give you some information

640
00:48:28,100 --> 00:48:31,970
for that and like a mass and the photo
library is pretty simple

641
00:48:32,510 --> 00:48:37,280
it shouldn't be much python to like do
that request and make a list daily or

642
00:48:37,280 --> 00:48:43,160
weekly or however often you choose to do
that there's one over there

643
00:48:45,380 --> 00:48:56,870
the question was what's the advantage of
using OS query or third-party tools /

644
00:48:56,870 --> 00:49:03,049
dtrace it's a great question i know for
ago I don't know have the ability of

645
00:49:03,050 --> 00:49:06,290
dtrace to actually send that information
somewhere for you

646
00:49:06,830 --> 00:49:11,029
OS query has the ability to like post at
somewhere and send all that data

647
00:49:11,030 --> 00:49:16,550
somewhere for you see like to syslog
server for a log stash or whatever is in

648
00:49:16,550 --> 00:49:21,230
but uh but that's all I can do to want
it a little and get back to you but

649
00:49:21,230 --> 00:49:23,030
that's probably that initial answer

650
00:49:23,030 --> 00:49:26,030
yep

651
00:49:31,930 --> 00:49:39,549
says the question is when someone leaves
how do you properly off-board them from

652
00:49:39,550 --> 00:49:44,080
AWS so faintly you have to remove them

653
00:49:45,190 --> 00:49:48,190
that's the question

654
00:49:51,040 --> 00:49:55,600
oh I'm like you I really much got about
you ask that

655
00:49:56,830 --> 00:50:01,150
so I actually we've got some open source
stuff I want to release i just talked

656
00:50:01,150 --> 00:50:03,580
about it because like I hate when people
talk about stuff that they're not

657
00:50:03,580 --> 00:50:09,940
releasing that having said that there's
some essentially again with photo i did

658
00:50:09,940 --> 00:50:13,090
this with with photo and Python you

659
00:50:13,090 --> 00:50:19,210
let's explain real quick what user
policies how many there are are out

660
00:50:19,210 --> 00:50:24,100
there so for one user in AWS you've got
an attached or so you've got in line

661
00:50:24,100 --> 00:50:28,690
policies managed policies those can be
totally different manage policies are

662
00:50:28,690 --> 00:50:33,250
like 18 of us comes pre built with an
attack in line policies are like what

663
00:50:33,250 --> 00:50:36,850
you did what you a custom policy you
built and then you can be attached two

664
00:50:36,850 --> 00:50:42,190
groups who have their own policies and
so in a recent review we found that

665
00:50:42,190 --> 00:50:47,200
essentially one user might have like
three groups with totally different

666
00:50:47,200 --> 00:50:54,220
permissions and in line and managed
policies and essentially like well I

667
00:50:54,220 --> 00:50:57,399
thought they only had access to this but
you've got access everything so that's

668
00:50:57,400 --> 00:51:01,660
the best way to audit just look at all
their policies that if you can automate

669
00:51:01,660 --> 00:51:04,779
it which again is sort of like the code
stuff i'm not talking about

670
00:51:06,220 --> 00:51:10,330
yeah really good question yes really
good question because there's probably

671
00:51:10,330 --> 00:51:12,880
have like crazy accident was probably
business right there

672
00:51:12,880 --> 00:51:18,430
related to that free business idea there
was one more decided yeah

673
00:51:19,330 --> 00:51:35,470
lockdown access for everyone like
deactivate every account you can do that

674
00:51:35,470 --> 00:51:39,189
and that's why you keep the root sacred
and that's why you keep it protected so

675
00:51:39,190 --> 00:51:42,400
you have the ability to go in there and
do that for everybody and might be a

676
00:51:42,400 --> 00:51:45,520
nuisance but something obviously
something breaking into that stuff will

677
00:51:45,520 --> 00:51:46,570
be workers

678
00:51:46,570 --> 00:51:50,350
yeah I mean we had a couple slides
around and took it outside have time to

679
00:51:50,350 --> 00:51:55,630
do it justice but you know you doing I
are in AWS is a different animal than

680
00:51:55,630 --> 00:52:00,490
like having an image and a laptop so if
you have an ir team or blue team soccer

681
00:52:00,490 --> 00:52:04,660
whatever you need to practice that and
figure out the policy and probably need

682
00:52:04,660 --> 00:52:08,049
to have your forensic infrastructure in
your AWS infrastructure so you can pull

683
00:52:08,050 --> 00:52:12,160
those images over and do all that other
stuff and practice at me Radio ahead of

684
00:52:12,160 --> 00:52:16,240
time because you gotta spin it you're
spinning up giant boxes with two

685
00:52:16,240 --> 00:52:21,700
terabytes to pull in giant images at
after the fact it's going to suck so one

686
00:52:21,700 --> 00:52:24,640
thing is though with the monitoring and
logging in real time is that you'll be

687
00:52:24,640 --> 00:52:27,580
able to get a feel based off just these
things that we've talked about

688
00:52:27,580 --> 00:52:28,450
implementing it

689
00:52:28,450 --> 00:52:31,960
what's going on and so if you need to
rotate credentials don't know exactly

690
00:52:31,960 --> 00:52:36,400
which account because those alerts will
tell you like hey this user's is trying

691
00:52:36,400 --> 00:52:41,560
to you know use chris's tools or you
know access whatever and they weren't

692
00:52:41,560 --> 00:52:44,020
allowed or two were allowed whatever
yourself

693
00:52:44,020 --> 00:52:50,259
yeah in that case if you rotate
credentials you figure that out again

694
00:52:50,260 --> 00:52:53,230
like I think that's the whole point is
being able to have all that data and

695
00:52:53,230 --> 00:52:58,090
then be able to real-time the
responsible so you can differ

696
00:52:58,660 --> 00:53:02,410
alright thanks for coming and missing
the entire talk

697
00:53:07,460 --> 00:53:08,990
yeah

