1
00:00:00,000 --> 00:00:13,320
awesome thank you very much for coming
folks

2
00:00:13,860 --> 00:00:18,689
I know we're competing with the
housework it's paid for talk so I

3
00:00:18,690 --> 00:00:22,260
appreciate you you you are skipping that
one to see this one

4
00:00:22,800 --> 00:00:28,800
my name is Philip going to talk a bit
about dns in IR and how you collect that

5
00:00:28,800 --> 00:00:32,700
you analyze it and lastly how you can
use it to actually respond to events

6
00:00:33,809 --> 00:00:38,459
first the the obligatory my slide I
believe this is required for speaker

7
00:00:38,460 --> 00:00:44,309
contracts so I i leave the skirt human
coinbase every customers in the crowd

8
00:00:44,309 --> 00:00:47,669
when customers about that

9
00:00:47,670 --> 00:00:51,690
so those of you that are familiar . this
is a digital currency company we store

10
00:00:51,690 --> 00:00:56,430
about half a billion dollars worth of
bitcoin ether and litecoin which is a

11
00:00:56,430 --> 00:01:01,109
really fun challenge I've got a bunch of
the city stuff i recently became

12
00:01:01,109 --> 00:01:04,320
determined that i probably had to be on
Twitter security person I think it's

13
00:01:04,319 --> 00:01:10,229
required to hold back 10 15 minutes at
the end of the talk to your questions

14
00:01:10,229 --> 00:01:13,080
comments anything I got so if you can
hold it till then that'd be awesome

15
00:01:13,080 --> 00:01:17,310
and with that we'll jump into this so
why are you here

16
00:01:17,909 --> 00:01:22,830
I guess is the first question we should
we should ask i think then maybe a

17
00:01:22,830 --> 00:01:26,490
little bit more metal I'm out up here
with being our my laptop talking of

18
00:01:26,490 --> 00:01:31,890
popular books the Corbett and a piece of
advice I got when I was building this

19
00:01:31,890 --> 00:01:35,640
talk a lot is if you want to talk have
something to say then say it

20
00:01:35,640 --> 00:01:38,939
so the thing i want to say is des
logging is super important that data is

21
00:01:38,939 --> 00:01:42,479
absolutely critical to a great instant
response it's easier and cheaper than

22
00:01:42,479 --> 00:01:49,259
you think it is and it can be pretty
actually entertaining the couple of

23
00:01:49,259 --> 00:01:52,200
important notes like first of all I'm
talking about recursive DNS you're not

24
00:01:52,200 --> 00:01:55,290
authoritative yes right this is
resolvers you have in your environment

25
00:01:55,290 --> 00:01:59,159
authority dns monitoring is a totally
different topic that you should also do

26
00:01:59,159 --> 00:02:03,930
I for kicks sometime just check out in X
domain responses from authoritative name

27
00:02:03,930 --> 00:02:06,930
servers it's it's pretty cool to see the
room forces

28
00:02:08,050 --> 00:02:15,190
oops so any time you thinking about
adding new data source to your

29
00:02:15,190 --> 00:02:18,670
investigated for the platform I think
you should ask one question right

30
00:02:18,670 --> 00:02:21,910
what is this let me do that I couldn't
do before and I think that boils down to

31
00:02:21,910 --> 00:02:26,650
us like maybe three sub-questions right
what is this adam investigation

32
00:02:26,650 --> 00:02:31,270
what how can I pivot houses in rich and
what can i detect with this data that i

33
00:02:31,270 --> 00:02:34,330
couldn't detect before I added this
otherwise you end up with data sprawl

34
00:02:34,330 --> 00:02:38,560
and no one is happy in that environment
and I think the US has to actually

35
00:02:38,560 --> 00:02:42,790
pretty compelling advance their answers
from across the board for those who

36
00:02:42,790 --> 00:02:47,170
don't have great proxy logs actually
really interesting window into your web

37
00:02:47,170 --> 00:02:52,630
traffic without having to intercept the
actual web traffic for those of you with

38
00:02:52,630 --> 00:02:55,960
proxy logs with a large percentage of
non HD traffic that's transiting your

39
00:02:55,960 --> 00:03:01,090
border dns and and netflow really end up
obviously . logs but I really your only

40
00:03:01,090 --> 00:03:06,430
two network-based windows in it and what
that traffic actually is it is the

41
00:03:06,430 --> 00:03:10,240
essentially only method for discovering
dns tunneling on the network

42
00:03:10,240 --> 00:03:14,020
nothing else is really actually going to
work there and with some supporting data

43
00:03:14,020 --> 00:03:18,430
mostly some who is data but potentially
some blacklist integrations it actually

44
00:03:18,430 --> 00:03:22,540
puts you into a really interesting place
for alerting on this data in a very

45
00:03:22,540 --> 00:03:26,500
productive way one where noted at the
end I'm going to go through a bunch of

46
00:03:26,500 --> 00:03:30,400
investigative like how you can analyze
this data some lead you should you

47
00:03:30,400 --> 00:03:34,780
should pursue but one really interesting
one that I pursued with with great

48
00:03:34,780 --> 00:03:37,900
effect is take a look at all the domains
younger than 30 days that you're

49
00:03:37,900 --> 00:03:42,700
resulting by large legitimate sites have
probably existed for more than 30 days

50
00:03:42,700 --> 00:03:47,170
in terms of like the registration date
anything younger than 30 days i tend to

51
00:03:47,170 --> 00:03:53,079
attend a great list right take a look
with skeptical I the NSS has some down

52
00:03:53,080 --> 00:03:55,720
sides to every data source does right
there they're always negative the

53
00:03:55,720 --> 00:04:00,760
negative about dns is that it is it is
very chatty so why was I was doing

54
00:04:00,760 --> 00:04:05,350
research for this decided hey let me let
me just pick a random new site related

55
00:04:05,350 --> 00:04:10,720
page see what happens i generated almost
a hundred dns queries for reloading a

56
00:04:10,720 --> 00:04:16,060
single website the club that the
trackers the affiliated sites that it

57
00:04:16,060 --> 00:04:20,089
was insane and the expected maybe 30 20
tops

58
00:04:20,089 --> 00:04:25,340
so combine that with across all your
users you generate a lot of data very

59
00:04:25,340 --> 00:04:28,340
very quickly to it

60
00:04:28,340 --> 00:04:31,190
Dina sort of two different in my
experience investigating paths or was

61
00:04:31,190 --> 00:04:35,510
the quick question answer what is this
resolved to what-what hosts have

62
00:04:35,510 --> 00:04:38,780
resolved inside p who is queried this
one of the clients like the quick

63
00:04:38,780 --> 00:04:42,289
question answer stuff but we're like
elasticsearch is great at and the other

64
00:04:42,290 --> 00:04:48,470
is a much more sort of batch bulk
processing like what are the average

65
00:04:48,470 --> 00:04:53,389
entropy measurements over my domain
names things like that that really ask

66
00:04:53,389 --> 00:04:57,200
for two different backends right it can
be a process that complicated processing

67
00:04:57,200 --> 00:05:02,060
infrastructure i'm going to talk a lot
of a little bit about that before we get

68
00:05:02,060 --> 00:05:04,910
to that I want to do a quick buck
science experiment social science

69
00:05:04,910 --> 00:05:09,590
experiment that is so I saw the stack
Francisco it sits on their only sixty

70
00:05:09,590 --> 00:05:12,679
percent companies don't monitor dns that
sort of blows my mind

71
00:05:12,680 --> 00:05:19,880
so all of you guys who do blue team
stuff strains awesome now of those keep

72
00:05:19,880 --> 00:05:20,690
up keep up

73
00:05:20,690 --> 00:05:28,460
come on up so those of you who don't
monitor dns put your hands down this

74
00:05:28,460 --> 00:05:32,000
disproves and no actually reporting
probably pretty close to cisco's numbers

75
00:05:32,000 --> 00:05:35,479
i think about happy put your hands down
the rules about 300 people there

76
00:05:35,479 --> 00:05:42,169
probably don't know hundred and sixty
people in here so yeah about half of you

77
00:05:42,169 --> 00:05:45,080
don't want to enhance which is which is
pretty close surprisingly close actually

78
00:05:45,080 --> 00:05:49,669
cool down

79
00:05:49,669 --> 00:05:54,320
yes so I'm gonna assume you're all
convinced and want nothing more than

80
00:05:54,320 --> 00:05:56,960
date than to learn how to monitor dns
environment

81
00:05:56,960 --> 00:06:04,700
otherwise we can all go get beers i got
so that's an option their first a quick

82
00:06:04,700 --> 00:06:09,740
note about names weekend to complete
these two terms if you talk to a dns guy

83
00:06:09,740 --> 00:06:13,490
he will quickly correct you as I was
corrected when I started getting into

84
00:06:13,490 --> 00:06:17,900
this passive DNS is not what you think
it is almost certainly pasadena us

85
00:06:17,900 --> 00:06:24,229
refers to monitoring between resolvers
and authoritative servers that it is

86
00:06:24,229 --> 00:06:28,729
specifically admissions cache data and
mrs. clients at client ip's its point is

87
00:06:28,729 --> 00:06:30,529
to is to rebuild the structure

88
00:06:30,529 --> 00:06:35,089
global destination offer query this is
what like farsightedness database cast

89
00:06:35,089 --> 00:06:41,419
that that's what that's trying to do
what we're talking about is called Venus

90
00:06:41,419 --> 00:06:45,349
and watering right it is it is the
practice of logging every single dns

91
00:06:45,349 --> 00:06:48,498
thing that happens in a given
environment this is what i need what I'm

92
00:06:48,499 --> 00:06:52,789
doing instant response is this is I want
everything whether it's cached failed

93
00:06:52,789 --> 00:06:53,869
succeeded

94
00:06:53,869 --> 00:06:57,439
no matter who where it went and how it
turned out I want to know about it and I

95
00:06:57,439 --> 00:06:58,489
want to know about it

96
00:06:58,489 --> 00:07:06,589
timestamp and and with the client IP in
question pointed out so I collection you

97
00:07:06,589 --> 00:07:10,609
have three critical couple choices to
make a should actually preface here i'm

98
00:07:10,609 --> 00:07:14,119
assuming we all know what dns is i'm
assuming we all have a basic

99
00:07:14,119 --> 00:07:17,719
understanding of how to dance great
flows right resolvers forward or

100
00:07:17,719 --> 00:07:21,469
authoritative vs recursive resolvers
that kind of things going to assume all

101
00:07:21,469 --> 00:07:28,579
of that and sorry if you don't have
three critical choices to make one how

102
00:07:28,579 --> 00:07:33,079
do you have you collect the data like
like what method by what tools where you

103
00:07:33,079 --> 00:07:36,860
collect it and lastly how do you store
and how to query it going to walk

104
00:07:36,860 --> 00:07:41,959
through a little bit about that so
collection you have four basic options

105
00:07:41,959 --> 00:07:46,369
right you can collect at the border the
pros you see everything that happens in

106
00:07:46,369 --> 00:07:50,089
your network right whether it goes to
your recursive resolver not you see it

107
00:07:50,089 --> 00:07:53,569
all the downside is you're not going to
see true blind eye peas if if you have

108
00:07:53,569 --> 00:07:57,110
internal servers which can really hamper
investigation if you can actually walk

109
00:07:57,110 --> 00:08:00,889
your way back to that client quickly
you're looking to collect internal

110
00:08:00,889 --> 00:08:03,769
requests so anything if you have
internally hosted domains you can see

111
00:08:03,769 --> 00:08:08,179
those and lastly you can see cash to
requests or cat requests internal server

112
00:08:08,179 --> 00:08:11,659
stores on a cash how much can actually
be a huge problem especially if you have

113
00:08:11,659 --> 00:08:20,629
multiple clients clearing the same
multi-domain to the resolver so this is

114
00:08:20,629 --> 00:08:23,479
actually pretty cool you see you should
apply to see actual client reviews you

115
00:08:23,479 --> 00:08:26,929
can put the walk that back anything
response using internal requests

116
00:08:26,929 --> 00:08:30,919
internally assuming those are going but
going through your drawers average you

117
00:08:30,919 --> 00:08:34,279
see all that stuff the problem you're
going to miss anything that skips your

118
00:08:34,279 --> 00:08:38,929
car's offers write this this happens
both benignly a lot of IOT devices for

119
00:08:38,929 --> 00:08:42,870
instance hardcode dns servers and
outside was maliciously a lot of malware

120
00:08:42,870 --> 00:08:48,990
Marco dns servers either too . the user
to a bad dns resolver or because they're

121
00:08:48,990 --> 00:08:55,350
trying to skip your monitoring third you
can you can try to collect rain points

122
00:08:55,860 --> 00:08:58,710
this turned out to be really really
tough for all the same reasons that

123
00:08:58,710 --> 00:09:02,279
giving anything else on it . stuff their
coverage problems their deployment

124
00:09:02,279 --> 00:09:08,430
problems they're perfect back problems
their data transport problems it the

125
00:09:08,430 --> 00:09:11,189
positive course is it if it's something
you can get the coverage you see

126
00:09:11,190 --> 00:09:14,850
everything and you get all the time not
just when you use one of these systems

127
00:09:14,850 --> 00:09:16,110
are on your network

128
00:09:16,110 --> 00:09:20,700
so what you should what direction do
everything is is is the right answer

129
00:09:20,700 --> 00:09:24,270
here as it makes sense for your
environment you're gonna get you're

130
00:09:24,270 --> 00:09:26,939
going to say that a lot is one of those
things where we all implemented

131
00:09:26,940 --> 00:09:30,750
differently depending on this part the
size distributed nature the number of

132
00:09:30,750 --> 00:09:36,120
users things like that so you should and
this is what i recommend then what i do

133
00:09:36,120 --> 00:09:43,650
i recommend you either block dns not
your border or you monitor dns out onto

134
00:09:43,650 --> 00:09:46,890
border for things that are skipping
Homes offers and get that fixed you

135
00:09:46,890 --> 00:09:51,569
monitor primarily turns over this skips
the headache of trying to deploy an

136
00:09:51,570 --> 00:09:56,070
agent all your endpoints there's there's
a of course the corner case years if you

137
00:09:56,070 --> 00:09:59,310
already have an inn . like carbon black
or something like that collects DNS

138
00:09:59,310 --> 00:10:04,709
requests all means be lazy use it like
I'm a huge advocate of laziness in

139
00:10:04,709 --> 00:10:11,699
deployment and then where it makes sense
you can . . so in that environment i

140
00:10:11,700 --> 00:10:17,640
have a very very good production server
deployments like i deploy it's also in

141
00:10:17,640 --> 00:10:21,029
eight of us right where I don't have a
traditional network border i don't have

142
00:10:21,029 --> 00:10:24,930
resolvers are under my control so I
deployed to all my endpoints and rod

143
00:10:24,930 --> 00:10:29,790
deployed to my internal result in terms
over my border on corporate and I base

144
00:10:29,790 --> 00:10:32,910
and I get essentially hundred percent
coverage with the reasonable ever

145
00:10:37,510 --> 00:10:44,890
now that's that's where we deploy how do
we collect there are three four options

146
00:10:44,890 --> 00:10:48,850
you can go to attempt to use query
result of logging or result . logging

147
00:10:48,850 --> 00:10:55,150
which is going to input it for you
almost guaranteed query resolver are the

148
00:10:55,150 --> 00:11:02,410
result . logging is actually pretty poor
state that the only resolve that does

149
00:11:02,410 --> 00:11:07,360
question-answer logging that i'm aware
of is is Microsoft DNS anything before

150
00:11:07,360 --> 00:11:10,300
2012 have turned that on your gonna have
a really bad time

151
00:11:10,300 --> 00:11:14,079
performance-wise it's just going to eat
your each year in points alive or eat

152
00:11:14,080 --> 00:11:18,130
your servers alive and even now after
post-2012 you should you should some

153
00:11:18,130 --> 00:11:22,660
point just for shits and giggles turn
this on microsoft server and look at the

154
00:11:22,660 --> 00:11:25,300
blog format it's it's amazing

155
00:11:25,300 --> 00:11:31,810
amazingly bad to be clear but it is like
you would have to design a poor log

156
00:11:31,810 --> 00:11:36,880
format the only thing I know is worse as
linux oddity that is the only thing i've

157
00:11:36,880 --> 00:11:38,770
seen that i recall worse than this

158
00:11:38,770 --> 00:11:44,829
a couple other things to mention there
is a IDs logging protocol that's based

159
00:11:44,830 --> 00:11:49,090
on parole office called Venus tap its
only exists right now and in not dns and

160
00:11:49,090 --> 00:11:55,390
unbound but they say they want to spread
it further further round it offers

161
00:11:55,390 --> 00:11:59,080
obviously protobuf starts with a very
fish on the liar very very quick

162
00:11:59,080 --> 00:12:05,860
transmission so hopefully this this
moves into resolvers globally I really

163
00:12:05,860 --> 00:12:09,610
really hope it does but so notably right
nothing else launch the answer which is

164
00:12:09,610 --> 00:12:12,910
sort of an important part of what we're
trying to get here which is why I

165
00:12:12,910 --> 00:12:16,420
basically say for resolvers gotta lock
exceptions

166
00:12:16,420 --> 00:12:20,709
there's commercial products that do this
Infoblox does a good job of logging dns

167
00:12:20,710 --> 00:12:27,520
stuff I've heard power dns can do this
but i have not used those so I can't

168
00:12:27,520 --> 00:12:30,520
specifically say they're good about your
second option ideas

169
00:12:31,270 --> 00:12:38,470
suricata and bro both do protocol or DNS
protocol interpretation and do log .

170
00:12:38,470 --> 00:12:43,210
responses which is great if you don't
have that the point right so so i would

171
00:12:43,210 --> 00:12:47,410
use this if you have something like that
deployed or or can simply use this on

172
00:12:47,410 --> 00:12:47,829
your board

173
00:12:47,830 --> 00:12:52,120
I only know of one organization i've
talked to that has enough enough IDs

174
00:12:52,120 --> 00:12:55,990
placement flexibility in like software
caps to actually tap in front of all of

175
00:12:55,990 --> 00:13:00,430
the recursive resolvers internally
they're just crazy for the rest of us

176
00:13:00,430 --> 00:13:03,640
this is a great border option you
probably already collecting this data

177
00:13:03,640 --> 00:13:07,900
you can probably hook it into existing
transport mechanisms it's all reasonably

178
00:13:07,900 --> 00:13:13,420
easily possible to like again laziness
bookworm if if you're going to add this

179
00:13:13,420 --> 00:13:17,140
and and you you don't already have i but
i would actually encourage you in my

180
00:13:17,140 --> 00:13:18,640
personal preference to use bro

181
00:13:18,640 --> 00:13:22,810
like grow because it does not just
cancer does a lot of protocols very very

182
00:13:22,810 --> 00:13:30,250
very well it's a very effective
intrusion detection mechanism so the the

183
00:13:30,250 --> 00:13:34,360
last option we should talk about is
standalone dns logging this is graphic

184
00:13:34,360 --> 00:13:40,840
thing that I've built but they're really
two options here so there's this thing

185
00:13:40,840 --> 00:13:46,150
called passive DNS was written by a dude
named i would put your if I try to

186
00:13:46,150 --> 00:13:54,910
pronounce it he's Eastern European of
some sort i'm not gonna try it said okay

187
00:13:54,910 --> 00:14:03,250
i can try it so it's really good this is
actually what got me into intravenous

188
00:14:03,250 --> 00:14:06,640
monitoring to begin with this is this is
sort of my my gateway drug into

189
00:14:06,640 --> 00:14:11,290
monitoring dns environment his past
Venus the downsides and the reason i

190
00:14:11,290 --> 00:14:16,060
built go passive DNS is it was written
see it does all of its own packet

191
00:14:16,060 --> 00:14:21,160
processing made up to see it had at the
time i was using this is this is

192
00:14:21,160 --> 00:14:25,240
developed somewhat since then it had
very limited output options so it's like

193
00:14:25,240 --> 00:14:29,260
walking to database or flat file it was
logging and pipe delimited text which is

194
00:14:29,260 --> 00:14:35,710
not the end of the world but neither is
it like a song for instance and it was

195
00:14:35,710 --> 00:14:38,740
in C so you have the standard dependency
management issues when you're deploying

196
00:14:38,740 --> 00:14:46,000
it i wrote go passive DNS sort of effort
for a couple reasons number one I really

197
00:14:46,000 --> 00:14:53,140
dislike parsing network traffic in non
environments so what they go for

198
00:14:53,140 --> 00:14:56,590
instance right memory managed which
means a whole class of memory corruption

199
00:14:56,590 --> 00:14:58,190
vulnerability is just goes away

200
00:14:58,190 --> 00:15:01,700
don't worry about overflows I don't
worry about like parking string safety

201
00:15:01,700 --> 00:15:05,600
for the most part I can I can
concentrate on my code

202
00:15:05,600 --> 00:15:09,440
the second is that has a pythonesque I
promise you this will turn into a good

203
00:15:09,440 --> 00:15:13,970
presentation it's just small engine has
a pythonesque library ecosystem that's

204
00:15:13,970 --> 00:15:16,640
that's that's really really awesome
again let me focus on the core

205
00:15:16,640 --> 00:15:22,760
competency of the code it also has also
built in like native transport

206
00:15:22,760 --> 00:15:30,920
mechanisms like first of all in JSON
because life's too short to parse non

207
00:15:30,920 --> 00:15:36,860
json built in native key base transport
right so if i'm running a bunch of these

208
00:15:36,860 --> 00:15:40,040
things all over the place I don't wanna
have to deal with this log concentrators

209
00:15:40,040 --> 00:15:43,040
and whatnot honest authentic you and let
it work itself out

210
00:15:43,940 --> 00:15:47,540
so for my money if you're going to
deploy this from scratch if you don't

211
00:15:47,540 --> 00:15:51,980
have an existing environment you're not
re-logging dns i personally prefer the

212
00:15:51,980 --> 00:15:56,060
standalone Venus logging right I think
gives you flexibility i think it's it's

213
00:15:56,060 --> 00:15:59,719
sort of purpose-built you can you can
deploy this on a recursive resolver both

214
00:15:59,720 --> 00:16:03,770
of these options are are very very low
and reach overhead in general you can

215
00:16:03,770 --> 00:16:06,980
deploy this on existing tap if you have
an ids box that you're already running

216
00:16:06,980 --> 00:16:12,350
play there you can place on points go
passive DNS another sort of into the

217
00:16:12,350 --> 00:16:17,750
reason I use go is cross-platform right
so i can pilot run this on OS 10 Lenny

218
00:16:17,750 --> 00:16:20,240
flavor of linux you want even windows

219
00:16:20,240 --> 00:16:24,740
although it's missing some surface
initiation initialization stuff to run

220
00:16:24,740 --> 00:16:32,210
all of that yet so lastly assuming
you've decided like where you want to

221
00:16:32,210 --> 00:16:35,660
walk right you know you want to log in
these places with these and up

222
00:16:35,660 --> 00:16:38,750
well make these slides available after
the talk for those of you take pictures

223
00:16:38,750 --> 00:16:45,800
every side let's all say be some effort
so so we felt we were long this place

224
00:16:45,800 --> 00:16:47,150
this data these places

225
00:16:47,150 --> 00:16:52,069
awesome we're gonna send it back using
using like we haven't talked about that

226
00:16:52,070 --> 00:16:56,510
yet right so so how do we do we actually
support this collection some of you

227
00:16:56,510 --> 00:17:00,260
already going to have environments set
up this right it's as easy as plugging

228
00:17:00,260 --> 00:17:03,710
into your existing law transfer
mechanism where they flew more Kafka or

229
00:17:03,710 --> 00:17:04,540
what have you

230
00:17:04,540 --> 00:17:10,149
and again awesome you should do that
laziness again is a virtue in these

231
00:17:10,150 --> 00:17:14,800
cases the the generic infrastructure I
like to talk about here because they're

232
00:17:14,800 --> 00:17:18,129
a couple of specific requirements for
DNS data it's like to really log it very

233
00:17:18,130 --> 00:17:24,040
very well specifically DNS data is one
of the data sources that benefits just

234
00:17:24,040 --> 00:17:29,320
significantly from Richmond a couple of
basic enrichments like who is data and

235
00:17:29,320 --> 00:17:33,970
maybe DSRV al-zor other blacklist data
onto these log records make it immensely

236
00:17:33,970 --> 00:17:40,450
more useful we need to analysis face so
I like this this basic architecture

237
00:17:40,450 --> 00:17:46,090
write a two keys with enrichment days in
between riding out to both elasticsearch

238
00:17:46,090 --> 00:17:50,830
and a spark mr cluster on the other end
this is basically what i do in prod for

239
00:17:50,830 --> 00:17:53,470
from my DNS data this let's do two
things

240
00:17:53,470 --> 00:17:56,410
remember talking to the very beginning
the unesco sort of by African to

241
00:17:56,410 --> 00:18:00,670
analytical flows the question/answer
style like easy search based stuff and

242
00:18:00,670 --> 00:18:04,060
much more complicated bulk processing
stuff this let's meet you both

243
00:18:04,060 --> 00:18:08,919
I can dispatch dropped my mop them or my
analysts can get a real time instant

244
00:18:08,920 --> 00:18:15,640
results from elastic search queries cool
you have all the data

245
00:18:16,210 --> 00:18:19,570
congratulations now what you do with it

246
00:18:19,570 --> 00:18:26,649
we talked about arrangements the like i
said if you do nothing else

247
00:18:27,250 --> 00:18:32,830
add who is data to this stuff it is
enormously useful both for domain age

248
00:18:32,830 --> 00:18:34,780
type questions how old this domain

249
00:18:34,780 --> 00:18:39,670
how recently has it changed what
registrar's is it registered with visit

250
00:18:39,670 --> 00:18:44,620
a rainstorm in you know Ukraine or
single someone that has more of a

251
00:18:44,620 --> 00:18:49,149
positive reputation amazing if you have
more stuff

252
00:18:49,150 --> 00:18:54,970
blacklist data very very useful at gip
on the return in on the return by piece

253
00:18:54,970 --> 00:19:00,100
that can also be extremely extremely
useful and lastly if so go back in in

254
00:19:00,100 --> 00:19:05,620
this slide here right either spark mr
hdfs cluster is really really cool if

255
00:19:05,620 --> 00:19:08,560
you're not going to do that or if you
don't have matter you can't do that

256
00:19:08,560 --> 00:19:11,679
what I encourage you to do is pretty
calculated values in your processing

257
00:19:11,680 --> 00:19:14,770
pipeline right some some standard
aggregations that journalists are going

258
00:19:14,770 --> 00:19:17,830
to use or some standard terms they can
use to to aggregate

259
00:19:17,830 --> 00:19:20,799
all right so I'm probably the most
important for not getting anything else

260
00:19:20,799 --> 00:19:24,220
is parked out the domain from the
hostname and have that as a separate

261
00:19:24,220 --> 00:19:29,289
record almost log messages that will
enable a broad range of analysis later

262
00:19:29,289 --> 00:19:33,039
including things like detecting the
estonian mechanisms that are really hard

263
00:19:33,039 --> 00:19:37,929
to do without without that pricing
calculating things like english word

264
00:19:37,929 --> 00:19:42,130
presidents query entropy compressibility
there's some really interesting research

265
00:19:42,130 --> 00:19:46,360
around that can help help the analysts
if they only have an elastic search

266
00:19:46,360 --> 00:19:53,110
interface still produce pretty
complicated analyses let's talk about

267
00:19:53,110 --> 00:19:58,840
that but it's like a little bit of this
data you were interested in some number

268
00:19:58,840 --> 00:20:03,519
of ways you have this cool analysis
environments and by the way i was i was

269
00:20:03,519 --> 00:20:06,580
when i when i first started doing this
talk will have this like grand plan i'm

270
00:20:06,580 --> 00:20:09,789
going to build up this game is on
environment i miss timmy elstak it can

271
00:20:09,789 --> 00:20:14,260
be really cool beautiful and I realized
after i did all that that that the stuff

272
00:20:14,260 --> 00:20:16,870
that you guys would actually see is like
a cup on your dashboard with histogram

273
00:20:16,870 --> 00:20:22,389
not really sexy funny for the for the
input so instead of like showing showers

274
00:20:22,389 --> 00:20:29,168
sort of war and talk through this stuff
sorry don't histograms so fast bucks

275
00:20:29,169 --> 00:20:32,590
right what is was last last folks are
domains that rapidly switch between IDs

276
00:20:32,590 --> 00:20:35,590
this is to make a base blocking hard

277
00:20:38,830 --> 00:20:44,320
among other reasons a so-so how to
detect this in dns locks is actually

278
00:20:44,320 --> 00:20:49,629
blindingly obvious if you if you have
those hostnames already in there a quick

279
00:20:49,630 --> 00:20:55,120
histogram literally a histogram of
unique IPS per domain name boom you're

280
00:20:55,120 --> 00:20:58,539
going to see high values in places like
Google Places look like that they return

281
00:20:58,539 --> 00:21:03,100
678 results in getting some that are
several hundred results they're gonna be

282
00:21:03,100 --> 00:21:07,330
extraordinarily suspicious and and you
should investigate that stuff but as

283
00:21:07,330 --> 00:21:09,730
with all these and talk about this at
the end always false positives they're

284
00:21:09,730 --> 00:21:12,730
always like outliers that you need to
take out of this analysis

285
00:21:14,759 --> 00:21:19,679
but this is why the the is what humans
are good at this stuff

286
00:21:20,519 --> 00:21:27,509
Venus expression tunnel in the the pcap
down there is actually from iodine you

287
00:21:27,509 --> 00:21:33,869
can see it uses a a consistent domain
name with differing hostnames to to move

288
00:21:33,869 --> 00:21:37,619
traffic back and forth this is this is
one of two common telling situation

289
00:21:37,619 --> 00:21:43,109
patterns the other is you can get very
clever with this with unused fields and

290
00:21:43,109 --> 00:21:48,389
dns packets to encode individual or
maybe 23 bits per packet that stuff if

291
00:21:48,389 --> 00:21:52,198
you're looking at the NS at all is tends
to be very very obvious because the

292
00:21:52,199 --> 00:21:56,879
query volume just goes insane from these
hosts moving one bit at a time one bit

293
00:21:56,879 --> 00:22:03,119
pretty nice query the the hostname stuff
up may or may not increase volume

294
00:22:03,119 --> 00:22:09,658
significantly what it does do is it
increases unique hostnames per domain

295
00:22:09,659 --> 00:22:13,589
significantly right so this is where if
we calculate that the main field you

296
00:22:13,589 --> 00:22:17,549
have that spark cluster running analysis
and asking how many unique hostnames

297
00:22:17,549 --> 00:22:22,139
peugeot my seeing is actually very very
interesting are going to positives from

298
00:22:22,139 --> 00:22:25,678
Syrians doing this cloud front akamai
that kind of thing

299
00:22:25,679 --> 00:22:29,459
those are generally pretty easy to parse
out of your results the whitelist as you

300
00:22:29,459 --> 00:22:33,419
go through that what you're left with is
a set of unusual domains that you should

301
00:22:33,419 --> 00:22:37,469
really look into very closely now this
is gonna false-positive a bit i'm going

302
00:22:37,469 --> 00:22:38,489
to talk about this

303
00:22:38,489 --> 00:22:42,299
actually I'm about this is a fastball
another thing like antivirus vendors do

304
00:22:42,299 --> 00:22:47,009
some crazy dns stuff that looks a lot
like tunneling in fact is tunneling

305
00:22:47,009 --> 00:22:53,669
we'll talk about that a little bit a
little bit later so dgs demand

306
00:22:53,669 --> 00:22:59,249
generation algorithms is pretty easy
because the general result in a huge

307
00:22:59,249 --> 00:23:03,089
spike in inexperienced forgiven client
as he's working through his journey

308
00:23:03,089 --> 00:23:07,469
domains trying to find the active one
large numbers of the next remains are

309
00:23:07,469 --> 00:23:10,769
actually a really interesting lead to
begin with right once you once you get

310
00:23:10,769 --> 00:23:14,519
this data there are a number of basic a
little questions you can start asking

311
00:23:14,519 --> 00:23:18,569
like what's the next remaining what's
surveilling the most in my environment

312
00:23:18,569 --> 00:23:18,879
why

313
00:23:18,880 --> 00:23:23,920
write this using the threads we can
start to pull on to kick off a much more

314
00:23:23,920 --> 00:23:29,290
in depth of analytical exploration djs
again very simple if you're if you're

315
00:23:29,290 --> 00:23:34,000
collecting the data spec next domains
you should look at that once you look at

316
00:23:34,000 --> 00:23:37,120
the traffic you're going to see what
look very much like randomly generated

317
00:23:37,120 --> 00:23:43,449
remains there i forget what this was a
sample of some banking children once a

318
00:23:43,450 --> 00:23:49,840
low prevalence domains this is a really
interesting one

319
00:23:51,220 --> 00:23:58,330
so this this sort of is is related to
the concept that now where should be

320
00:23:58,330 --> 00:24:03,879
rare in your organization right you can
see this discontent exists in like in

321
00:24:03,880 --> 00:24:08,980
file hash based analysis as well what
are the least common hashes or pieces of

322
00:24:08,980 --> 00:24:11,920
software in my environment with the
least common running processes least

323
00:24:11,920 --> 00:24:14,410
common registry keys that kind of thing

324
00:24:14,410 --> 00:24:18,910
it works in dns to some extent like like
everything ever every other area where

325
00:24:18,910 --> 00:24:25,450
you apply this kind of analysis users do
weird shit right

326
00:24:26,110 --> 00:24:31,899
the the drift on user in points for the
kind of stuff is just it's insane the

327
00:24:31,900 --> 00:24:36,340
tail is super long the first time I did
this I did this analysis on on data was

328
00:24:36,340 --> 00:24:41,050
super excited like yeah I'm going to
find the apts and i found all the users

329
00:24:41,050 --> 00:24:47,409
just all of them doing crazy stuff and
and a lot of it happens because Venus

330
00:24:47,410 --> 00:24:52,000
prefetch because the random tracking
domains because of just the internet

331
00:24:52,000 --> 00:24:58,780
right where you can apply this i found
much more effectively on servers servers

332
00:24:58,780 --> 00:25:03,490
should not have in gym experience do not
have the same drift as a client points

333
00:25:03,490 --> 00:25:08,320
do it at least if they're well managed
server environments

334
00:25:08,320 --> 00:25:15,730
I found the like a very interesting
approach is to do this exact sort of

335
00:25:15,730 --> 00:25:19,420
prevalence analysis and ask what are the
what are the least query domains in my

336
00:25:19,420 --> 00:25:24,970
environment and go ahead and go ask why
right go figure out what who owns these

337
00:25:24,970 --> 00:25:28,660
things how long it being around you can
combine these and layer this with an

338
00:25:28,660 --> 00:25:30,650
age-based analysis with the least common
you

339
00:25:30,650 --> 00:25:34,400
remains of mine right in my environment
again if you either have the spark

340
00:25:34,400 --> 00:25:37,940
environment pre-calculated this stuff
it's incredibly interesting analysis to

341
00:25:37,940 --> 00:25:40,460
do on server environments

342
00:25:40,460 --> 00:25:43,280
I don't recommend recliner environments
you're gonna be chasing that tail for

343
00:25:43,280 --> 00:25:49,129
the rest of your life so few leads that
that you should you should you should

344
00:25:49,130 --> 00:25:54,440
our thread you should pull on what you
get this data using the most text

345
00:25:54,440 --> 00:25:58,220
lookouts right so we see that we saw
back this

346
00:25:58,220 --> 00:26:07,130
nope yeah this guy's using a records to
to conduct his aar yeah to do he's

347
00:26:07,130 --> 00:26:12,110
telling txt records are also very very
popular to do the same sort of tunneling

348
00:26:12,110 --> 00:26:14,959
one more

349
00:26:14,960 --> 00:26:19,910
there we go so who's the most excellent
cups now what you're gonna see is is

350
00:26:19,910 --> 00:26:20,690
this

351
00:26:20,690 --> 00:26:28,880
unfortunately this is this is so post
this is so close doing dns lookups

352
00:26:28,880 --> 00:26:31,970
forreal blacklists I have no idea what
the stuff in the middle there is that

353
00:26:31,970 --> 00:26:39,200
looks like a dns tunnel it probably is
the National for some information and I

354
00:26:39,200 --> 00:26:44,900
i did i was very amused when I looked up
so it's at sophos XL dotnet is the

355
00:26:44,900 --> 00:26:50,540
actual suppose domain suppose X 1 dot
net for sale can also buy it shipped

356
00:26:50,540 --> 00:26:54,080
offer pretty good you guys are red
teamers that shit that'll be great dns

357
00:26:54,080 --> 00:27:01,520
tall beautiful i can hear the name
ChiCom apps opening right now

358
00:27:02,410 --> 00:27:08,530
so the tax records really interesting
both in terms of like which hosted doing

359
00:27:08,530 --> 00:27:13,060
most of which means you the most but we
are like next to mine responses who's

360
00:27:13,060 --> 00:27:17,139
failing the most he's looking at the
most broken domains this is either this

361
00:27:17,140 --> 00:27:21,010
either that that server is either broken
or infected possibly both

362
00:27:21,010 --> 00:27:26,800
you never know purevolume baseline huge
in the most dns lookups in my entire in

363
00:27:26,800 --> 00:27:32,470
my entire environment and why the
reverse using the least what they need

364
00:27:32,470 --> 00:27:36,340
to look at the least across-the-board
this is actually not again I would do

365
00:27:36,340 --> 00:27:41,379
this for servers my clients clients are
here and the last ones can actually be

366
00:27:41,380 --> 00:27:46,990
pretty interesting and and help surface
malabar that's that's not using dns to

367
00:27:46,990 --> 00:27:50,170
board the sort of analysis but what's
showing up in netflow it's not showing

368
00:27:50,170 --> 00:27:53,710
up at the dance and the u.s. answer this
assumes you have an environment where

369
00:27:53,710 --> 00:27:57,010
you can do that kind of calculation of
spark or something of that nature but it

370
00:27:57,010 --> 00:28:02,950
turns out to be actually pretty
interesting set of hosts here come the

371
00:28:02,950 --> 00:28:07,900
false positives we talked about this ad
engines are notorious for the stuff I've

372
00:28:07,900 --> 00:28:12,370
seen with sofas with mathy with a few
others that use DNS tone mechanism

373
00:28:12,370 --> 00:28:18,399
primarily my in my opinion because this
is basically free for them in terms of

374
00:28:18,400 --> 00:28:21,790
load as opposed to like HT based
mechanism and have to run the server to

375
00:28:21,790 --> 00:28:22,659
support it

376
00:28:22,660 --> 00:28:28,810
here we basically support them pretty
clever actually some other things there

377
00:28:28,810 --> 00:28:33,159
that commonly trip people up and they're
starting to do this for chrome and

378
00:28:33,160 --> 00:28:38,140
actually a few others when you start
them up will look up several domain

379
00:28:38,140 --> 00:28:42,820
names they expect not to exist just to
test for DNS hijacking the environment

380
00:28:42,820 --> 00:28:44,379
in which they exist

381
00:28:44,380 --> 00:28:50,140
this also looks at about 9am like you
know something bad is going on your

382
00:28:50,140 --> 00:28:53,860
network because you have thousands
hundreds of being on the tiger

383
00:28:53,860 --> 00:28:56,979
organization of an extra man responses
like what

384
00:28:56,980 --> 00:29:00,070
why is this happening every day between
8-9 morning

385
00:29:00,070 --> 00:29:07,780
that's because people come to work and
open your laptop's prefetch is is the

386
00:29:07,780 --> 00:29:11,800
devil in terms of dns monitoring it's
great for performance and like all the

387
00:29:11,800 --> 00:29:15,879
other reasons so prefetch is when it
went browser goto website no website

388
00:29:15,879 --> 00:29:19,509
as a bunch of links on it the the
browser decides I'm gonna be super

389
00:29:19,509 --> 00:29:22,419
helpful i'm going to prefetch the dns
the result of these dns queries before

390
00:29:22,419 --> 00:29:24,489
the users actually put on anything

391
00:29:24,489 --> 00:29:27,369
this also happens when the user is
typing in the URL bar in some browsers

392
00:29:27,369 --> 00:29:31,418
depending on the settings if the user
types of valid deplaning is part of

393
00:29:31,419 --> 00:29:37,719
another domain name www.fcn on their way
to cnn.com that look up depending on the

394
00:29:37,719 --> 00:29:40,629
ground that browser settings will happen
right

395
00:29:40,629 --> 00:29:44,948
the question is then going back looking
at us records well it did why why did it

396
00:29:44,949 --> 00:29:47,199
happen it happened because the user is
trying to type something else that

397
00:29:47,199 --> 00:29:51,219
happened because the user went there
like that happens prefetch that happened

398
00:29:51,219 --> 00:29:54,969
to visit there was a this happened a
couple times and actually literally woke

399
00:29:54,969 --> 00:30:04,209
me up it at morning a user was visiting
the week PDS site i think it was for apt

400
00:30:04,209 --> 00:30:09,669
one and they linked to several of the
domains off of that wikipedia site

401
00:30:09,669 --> 00:30:13,089
well the browser went ahead and prefetch
that domain for them

402
00:30:13,089 --> 00:30:17,139
thank God for that and literally
learning stuff up like a Christmas tree

403
00:30:17,139 --> 00:30:23,918
because they were going to forget the
apts the literal apts it was not the apt

404
00:30:23,919 --> 00:30:26,469
that was missing you

405
00:30:26,469 --> 00:30:31,359
yeah that was not that was not awesome
at last

406
00:30:31,359 --> 00:30:36,218
Syrians play havoc with this entire
field of analysis cds do weird shit see

407
00:30:36,219 --> 00:30:40,269
if you look at that cloud front they use
random domains and subdomains stock .

408
00:30:40,269 --> 00:30:44,979
call for dotnet look at akamai they use
a number of of actually naming patterns

409
00:30:44,979 --> 00:30:51,129
. my . . akes things like that you learn
to filter these out as you as you do

410
00:30:51,129 --> 00:30:53,589
this analysis more and more and it's
going to vary depending on your

411
00:30:53,589 --> 00:30:58,749
environment right you reach are doing
different things are our traffic and

412
00:30:58,749 --> 00:31:01,749
look you know one way or the other
depending on how that turns out

413
00:31:02,259 --> 00:31:11,379
but yeah it's it's actually vulnerable
so cool we talk about right on time we

414
00:31:11,379 --> 00:31:13,639
talked about

415
00:31:13,639 --> 00:31:16,998
how to collect it and talk about what to
do with what you've collected it some

416
00:31:16,999 --> 00:31:23,929
analysis palace that you can that you
can travel down my one named mean the

417
00:31:23,929 --> 00:31:26,779
mean of my youth

418
00:31:26,779 --> 00:31:31,639
it's like that response right so so how
do you can use the US response

419
00:31:31,639 --> 00:31:36,889
venus is actually amazingly awesome for
response so I'm assuming you all you're

420
00:31:36,889 --> 00:31:40,639
all going to rush back to your your jobs
and immediately implement past dns it's

421
00:31:40,639 --> 00:31:41,599
not already there

422
00:31:41,599 --> 00:31:46,549
RTS monitoring is not over there you can
find the apts immediately

423
00:31:47,059 --> 00:31:51,229
obviously that's how that's going to
happen so like someone and what do you

424
00:31:51,229 --> 00:31:56,989
know about that so so the u.s. is as we
talked about very beginning essential

425
00:31:56,989 --> 00:32:00,049
networking right it's every almost
everything using dns lookup we're

426
00:32:00,049 --> 00:32:03,469
supposed to go for a given name which
means it's a great place to block those

427
00:32:03,469 --> 00:32:06,440
things or redirect them much more
interesting lead to somewhere you can

428
00:32:06,440 --> 00:32:10,700
control and analyze that data so the
primary way to do this is something that

429
00:32:10,700 --> 00:32:14,749
that bind introduced in $YEAR by
$OPERAND and ninety-eight called rpz

430
00:32:14,749 --> 00:32:19,849
response policy zones sometimes referred
to as the dns firewall which is I think

431
00:32:19,849 --> 00:32:26,718
a terrible name wrong direction so those
are busy this this is this is basically

432
00:32:26,719 --> 00:32:32,059
obviously right so this is a RP z is a
is a zone

433
00:32:32,059 --> 00:32:35,690
let's maintain them on RPC server that
served by that server may also be

434
00:32:35,690 --> 00:32:38,929
maintained on your resolve itself is
just a separate zone depending how you

435
00:32:38,929 --> 00:32:43,700
want implement it binds configured look
at this zone as a as a policy

436
00:32:44,269 --> 00:32:49,009
look up right so as it's saying okay I'm
winners all bad side calm when you first

437
00:32:49,009 --> 00:32:51,079
look at my RP zones configured over here

438
00:32:51,079 --> 00:32:54,469
oh look there's a record for bad zone
com over there let's just go ahead and

439
00:32:54,469 --> 00:32:57,229
serve that fake record back this user
instead of the real record that I

440
00:32:57,229 --> 00:33:01,609
would've had to get from from the the
internet somewhere it's actually much

441
00:33:01,609 --> 00:33:05,989
much more than that it can give it an
extra main can live on responses they

442
00:33:05,989 --> 00:33:10,009
can do all sorts of fun stuff if you
read the RP RPG manual i think the move

443
00:33:10,009 --> 00:33:14,059
the two most interesting for us are
straight up blocking and redirection to

444
00:33:14,059 --> 00:33:21,019
a walled garden or analysis node so so
there are a few options tell you without

445
00:33:21,019 --> 00:33:25,400
you deploy rpz the most common if you
have more than one was / is the your ear

446
00:33:25,400 --> 00:33:29,600
internal recursive resolvers slaves
owned off of some dns servitude that you

447
00:33:29,600 --> 00:33:33,830
control this is really great when you
don't own the DNS infrastructure and the

448
00:33:33,830 --> 00:33:38,240
guys doing the biggest penis
infrastructure love it like a child I've

449
00:33:38,240 --> 00:33:42,710
seen is the case occasionally in this
case like you're never you're not

450
00:33:42,710 --> 00:33:46,340
touching their servers all you're doing
is saying slaves owned for me and at

451
00:33:46,340 --> 00:33:51,110
this one line of config here to your
name . and we're done even if my server

452
00:33:51,110 --> 00:33:55,370
literally catches fire emerged the
ground it does not the worst thing that

453
00:33:55,370 --> 00:34:00,290
happens is traffic doesn't block it
doesn't pack the operational stability

454
00:34:00,290 --> 00:34:10,159
of of dns which is super cool and then
you unfortunately let's see nope that's

455
00:34:10,159 --> 00:34:10,730
an order

456
00:34:10,730 --> 00:34:15,949
so unfortunately that means you are then
saddled with maintaining a-a-a-a zone

457
00:34:15,949 --> 00:34:19,879
file for all your all your blocks stuff
if there's more than one of you on a

458
00:34:19,880 --> 00:34:24,110
team your face with the classical dns
admins dilemma of how do you edit its

459
00:34:24,110 --> 00:34:29,360
own pilots take the among multiple
people is poorly frequently we'll talk

460
00:34:29,360 --> 00:34:34,399
about that in a second so should you do

461
00:34:34,399 --> 00:34:38,810
obviously for a couple reasons one is
obviously blocking domains to is and

462
00:34:38,810 --> 00:34:42,380
this is actually i think more
interesting the redirection capabilities

463
00:34:42,380 --> 00:34:48,110
in RPC can push that interesting topics
to a transparent proxy it can put it

464
00:34:48,110 --> 00:34:52,280
like for instance this is a great idea
if if you if you're having problems with

465
00:34:52,280 --> 00:34:57,440
cnet downloaders and responding to
stupid ad where you can use this to drop

466
00:34:57,440 --> 00:35:01,340
an interstitial in front of cnet
download.com right you just redirect

467
00:35:01,340 --> 00:35:07,250
download seen a column rpz to a local
local IP that's a reverse proxy it just

468
00:35:07,250 --> 00:35:10,340
drops a page from the user really are
you sure you want to do this are you

469
00:35:10,340 --> 00:35:14,270
sure you want to download this out of
our leading executable let them clear or

470
00:35:14,270 --> 00:35:19,160
not whichever way you want easy that
will that if if that's if that's a

471
00:35:19,160 --> 00:35:21,379
problem and this is the solution

472
00:35:21,380 --> 00:35:27,290
I hopefully just save you a bunch of
time responding just add works last the

473
00:35:27,290 --> 00:35:31,700
RPC is crazy fast is fast DNA
replication and if you're using

474
00:35:31,700 --> 00:35:35,240
Matilda's own notifies so this is a dns
mechanism

475
00:35:35,240 --> 00:35:40,910
24 a master Catellus slaves when his own
has been updated you can get you know

476
00:35:40,910 --> 00:35:46,399
single-digit seconds company-wide
blocking for a given a given domain name

477
00:35:46,400 --> 00:35:53,720
a client or four main server or even
wild cards off of those things which is

478
00:35:53,720 --> 00:36:00,439
incredibly fast so busy Kanye's like i
mentioned this is your now stuck

479
00:36:00,440 --> 00:36:04,520
maintaining is a bind zone file that
that has its ups and downs

480
00:36:05,420 --> 00:36:10,160
you're gonna have a bad time if you do
this with like a standard like an hour

481
00:36:10,160 --> 00:36:13,580
domain list or something like that i
learned this too hard bitter experience

482
00:36:13,580 --> 00:36:16,549
the second time I cartoons I stop doing
that

483
00:36:16,550 --> 00:36:19,580
yeah that was not good

484
00:36:20,390 --> 00:36:24,859
this that's I had to include ball number
three there always have to serial number

485
00:36:24,860 --> 00:36:28,550
on his own if you're if you're like not
a dns add menu you don't know how much

486
00:36:28,550 --> 00:36:31,700
pain this college is likewise my change
not propagating region update your cell

487
00:36:31,700 --> 00:36:38,359
number and lastly DNS SEC so DNS SEC is
an interesting interaction with rpz it

488
00:36:38,360 --> 00:36:42,380
by largest actually doesn't matter today
because clients are generally validating

489
00:36:42,380 --> 00:36:47,660
very often so to the extent clients are
validating you can just have our pc lie

490
00:36:47,660 --> 00:36:52,730
anyway in the clients not care if your
clients are validating you can still

491
00:36:52,730 --> 00:36:56,450
have rpz mess with the record to go back
but all that's gonna happen is you're

492
00:36:56,450 --> 00:37:00,259
gonna break validation and that client
will be able to visit the website that

493
00:37:00,260 --> 00:37:05,240
the the domain exactly what you want
anyway so it seems fine to me either way

494
00:37:05,240 --> 00:37:08,390
which is pretty sweet

495
00:37:08,390 --> 00:37:16,279
perfect okay little bit early so lastly
this is this is where i was supposed to

496
00:37:16,280 --> 00:37:21,859
unveil the thing I wrote called go rpz
that fixes much of that unfortunately

497
00:37:21,859 --> 00:37:26,990
lawyers exist in this world so i can
open source yet they're there they're

498
00:37:26,990 --> 00:37:32,240
still reviewing whether i cannot but
it's really cool i'll tell you about all

499
00:37:32,240 --> 00:37:38,000
about it even though you can't have it
so its like in all seriousness it should

500
00:37:38,000 --> 00:37:43,250
be out in another week or two once i get
back and can sit on them so this is a

501
00:37:43,250 --> 00:37:46,570
restful service that also

502
00:37:46,570 --> 00:37:51,130
what does that's also dns server back in
users goes multi-threading to do that

503
00:37:51,130 --> 00:37:55,840
all in the same process it takes a
straight-up RESTful API using barricades

504
00:37:55,840 --> 00:38:02,350
for off and on the back end it master
zone file using again go has a great

505
00:38:02,350 --> 00:38:09,430
package the package library using goes
built-in dns packages to to handle all

506
00:38:09,430 --> 00:38:15,520
of the replication to the your actual
internal servers this takes away all the

507
00:38:15,520 --> 00:38:17,170
zone file craziness

508
00:38:17,170 --> 00:38:20,530
this makes updating a breeze this means
you can track your additions and

509
00:38:20,530 --> 00:38:24,490
deletions much more effectively over
time this means my favorite feature of

510
00:38:24,490 --> 00:38:28,299
all you could have comments you can say
why thing was blocked

511
00:38:28,300 --> 00:38:31,300
not just that it was blocking redirected
already reported to choose to do with it

512
00:38:32,380 --> 00:38:38,800
let's go so it's cross-platform it's one
binary it's you know Jewish sorry can't

513
00:38:38,800 --> 00:38:40,690
release it super sad about that

514
00:38:40,690 --> 00:38:49,330
lastly I think we're going to end early
sorry for your questions in the back

515
00:38:49,330 --> 00:39:16,480
least together so I'm oh so no not
effectively so the the piece of

516
00:39:16,480 --> 00:39:21,850
information it's common when you look at
like that so sorry the question was if

517
00:39:21,850 --> 00:39:27,130
you're using like a non transparent
proxy and you see a request come in that

518
00:39:27,130 --> 00:39:32,440
you're redirecting to a proxy and that
proxy redirector regenerates other DNS

519
00:39:32,440 --> 00:39:37,030
query to to wherever that clients going
how do you tie that that line together

520
00:39:37,030 --> 00:39:43,930
the answers hackery around time windows
is the best answer they're traditionally

521
00:39:43,930 --> 00:39:48,430
there's a dns transaction ID that stable
through the

522
00:39:50,210 --> 00:39:57,470
yeah that's that's stable through the
transaction transaction T but that's

523
00:39:57,470 --> 00:40:01,430
broken when youyou reissue a new query
from a proxy server was the answer is

524
00:40:01,430 --> 00:40:08,720
there's not a good way but practically
speaking I would probably not pay much

525
00:40:08,720 --> 00:40:12,919
attention or or at least lower the
severity of stuff that's issuing from

526
00:40:12,920 --> 00:40:17,540
the proxies or that I'm intentionally
directing infected users to because it's

527
00:40:17,540 --> 00:40:19,609
check out false possible on me

528
00:40:19,609 --> 00:40:22,609
what else

529
00:40:23,300 --> 00:40:28,010
front and back yep

530
00:40:31,190 --> 00:40:36,710
the question is for the prefetch does it
is just to queries that actually start

531
00:40:36,710 --> 00:40:42,109
downloading experience is just a query
it's free resolving the there's little

532
00:40:42,109 --> 00:40:46,730
that will make the browsers do queries
as well it'll start pulling pieces of

533
00:40:46,730 --> 00:40:50,210
links to think it's gonna go to but I
haven't not aware of any browsers that

534
00:40:50,210 --> 00:40:53,210
do that natively and in the red and
black

535
00:41:08,270 --> 00:41:21,080
yep

536
00:41:21,760 --> 00:41:48,130
so what you so the question if i restate
it was an example of a complicated dns

537
00:41:48,130 --> 00:41:54,490
analysis problem is my are microsoft
updates where Microsoft redirects akamai

538
00:41:54,490 --> 00:42:00,430
to do it sits up to download which makes
sense that's what I cbs4 what are some

539
00:42:00,430 --> 00:42:05,620
sort of tips and tricks to do better
work through that that process so if

540
00:42:05,620 --> 00:42:10,029
you're this goes back to like how do you
store the data so analysts can interact

541
00:42:10,030 --> 00:42:15,640
with it effectively if you if you're
seeing this this this guy going to IP

542
00:42:15,640 --> 00:42:16,180
address

543
00:42:16,180 --> 00:42:20,200
that's a knock ah my IP address if
you're you know putting your data and

544
00:42:20,200 --> 00:42:23,740
like elastics or something like that you
should be able to very quickly search ok

545
00:42:23,740 --> 00:42:28,120
IP address that was resolved by that was
actually my ok what resolve that

546
00:42:28,120 --> 00:42:31,810
well that was actually a cname from
updates on microsoft.com and she's able

547
00:42:31,810 --> 00:42:35,980
to make that that chain very very
quickly that falls on a little bit like

548
00:42:35,980 --> 00:42:41,680
a three or two star redirect like a
three or two like if it's updated my

549
00:42:41,680 --> 00:42:47,109
column is actually a small server system
with rear to talk my but the very least

550
00:42:47,110 --> 00:42:51,490
you'd be able to quickly backtracked
that I p2 and no it's akamai which is in

551
00:42:51,490 --> 00:42:57,669
my experience a much lower severity
style look up and because like we all go

552
00:42:57,670 --> 00:43:02,320
through this you now know that that
akamai is distributing market updates if

553
00:43:02,320 --> 00:43:05,500
you see this happening around the time
microsoft updates are coming out like

554
00:43:05,500 --> 00:43:08,980
this that should be the first at the top
of your mind allow this is like SOPs for

555
00:43:08,980 --> 00:43:12,310
your network right like like like much
else in instant analysis

556
00:43:14,090 --> 00:43:22,490
well I saw yeah i'm looking at it

557
00:43:22,490 --> 00:43:39,799
everything else all or are we saw some
stuff in in red team's that was that

558
00:43:39,800 --> 00:43:47,120
absolutely that we caught where the dns
analysis was extremely important they

559
00:43:47,120 --> 00:43:51,500
have caught so I died I draw a slightly
different stem cells are at the question

560
00:43:51,500 --> 00:43:57,830
um if you have you been doing this quite
a while you work the initial individual

561
00:43:57,830 --> 00:44:01,580
false positives and you get down to like
the stuff that's that's suspicious and

562
00:44:01,580 --> 00:44:06,980
work through that that there are a lot
of false positives so I for cancer is

563
00:44:06,980 --> 00:44:09,980
walking bottle to the blue team

564
00:44:14,030 --> 00:44:22,910
yes absolutely so so the d/s blocking
was was by far the most effective

565
00:44:22,910 --> 00:44:24,290
coordinated blocking mechanism

566
00:44:24,290 --> 00:44:34,370
I've ever used I was in what regiment we
were detected through through other

567
00:44:34,370 --> 00:44:35,660
means

568
00:44:35,660 --> 00:44:40,879
so we discovered the red team they were
using a specific hosting provider to do

569
00:44:40,880 --> 00:44:47,810
their the red teaming we backtrack that
two were able to call in a favor to get

570
00:44:47,810 --> 00:44:50,870
the list of domain names that was
involved in this and variable stage

571
00:44:50,870 --> 00:44:56,359
according to block across our entire
infrastructure all that once with maybe

572
00:44:56,360 --> 00:45:01,280
five seconds of latency from the first
dns server last dns server and effective

573
00:45:01,280 --> 00:45:05,960
decapitate the entire that entire
intrusion recommendation in other

574
00:45:05,960 --> 00:45:09,770
environments a lot of the false
positives are actually badly

575
00:45:09,770 --> 00:45:15,770
misconfigured systems that like actually
fixing those is i would call a win and

576
00:45:15,770 --> 00:45:21,740
of itself that's all security win but
it's it's it's a real win now what else

577
00:45:22,410 --> 00:45:40,828
yeah yeah yeah no um yeah so thanks for
asking i forgot to mention this it will

578
00:45:40,829 --> 00:45:44,640
all be in those are my notes so there's
a couple of API services that do this

579
00:45:44,640 --> 00:45:48,509
i've used like who is XML API for
instance there are few others

580
00:45:48,510 --> 00:45:52,530
domaintools has a partial API things
like that they can easily handle

581
00:45:52,530 --> 00:45:55,380
hundreds of thousands the second thing
that i would encourage you to do is set

582
00:45:55,380 --> 00:46:00,869
up a caching proxy for that locally but
they're note there's there's really only

583
00:46:00,869 --> 00:46:04,920
two week we're your domain name it a ton
of times in a given day and I think

584
00:46:04,920 --> 00:46:10,140
you'll find as you as you do the the
analysis that you have a large number of

585
00:46:10,140 --> 00:46:12,690
domains are getting very frequent the
query that you probably don't need to

586
00:46:12,690 --> 00:46:15,900
update a thousand times a day and you
have a much smaller number of inquiries

587
00:46:15,900 --> 00:46:19,619
once or twice after the first month or
so

588
00:46:19,619 --> 00:46:23,400
running to visit with a caption proxy
for that . the number of queries that

589
00:46:23,400 --> 00:46:26,730
actually reaches your your API provider
goes way down

590
00:46:26,730 --> 00:46:35,520
well another outstanding time for beer
left for the next talk excess

