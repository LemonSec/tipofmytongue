1
00:00:00,000 --> 00:00:14,730
you all look way too serious for a derby
con audience

2
00:00:15,780 --> 00:00:20,279
okay I'm just saying I like everybody's
like what we do

3
00:00:20,789 --> 00:00:26,220
yeah oh I we don't know what the shake
weights are for

4
00:00:27,390 --> 00:00:36,270
I'm not juggling this lovely as an
anti-theft device on it visits for

5
00:00:36,270 --> 00:00:50,340
hecklers we get to throw them like let's
wait bring the clone trooper helmet and

6
00:00:50,340 --> 00:00:57,449
I'll wear it i really want to know what
the shake weights are for

7
00:00:57,449 --> 00:01:05,339
he never seen the commercial no no I
think give it all I've seen the

8
00:01:05,339 --> 00:01:18,780
commercial no okay well we have a couple
more minutes till but yours shut

9
00:01:18,780 --> 00:01:28,110
does that mean we start so a couple
people coming in shutting it that will

10
00:01:28,110 --> 00:01:33,509
give you people yeah what the heck how
many people here have been able to come

11
00:01:33,509 --> 00:01:36,509
over and race the cars

12
00:01:37,950 --> 00:01:46,860
nobody ok well what happened okay Matt
course you did you work the boom huh man

13
00:01:46,860 --> 00:01:50,700
okay we're done everybody just goes out
right there to the right we have race

14
00:01:50,700 --> 00:01:51,390
cards

15
00:01:51,390 --> 00:01:56,130
hence the race shirts was a plan right

16
00:02:01,340 --> 00:02:06,289
good morning everybody or afternoon

17
00:02:07,939 --> 00:02:10,939
I don't keep track it's really bad

18
00:02:11,660 --> 00:02:14,180
so you're a couple minutes before we're
going to start but we might as well the

19
00:02:14,180 --> 00:02:17,450
doors shot people are sitting there just
staring at me a little uncomfortable

20
00:02:18,379 --> 00:02:21,590
let's um we've got all these shake
weights up we have all these shake

21
00:02:21,590 --> 00:02:23,390
weights up here

22
00:02:23,390 --> 00:02:28,670
I just don't understand the shake
weights they're weird i don't understand

23
00:02:28,670 --> 00:02:31,849
them in general and then to make it
worse there onstage

24
00:02:31,849 --> 00:02:36,048
ok late night television at its best

25
00:02:36,980 --> 00:02:43,280
so what do the hump about the next-gen
web Pendennis thing we're gonna cover

26
00:02:43,280 --> 00:02:50,690
some topics that we find interesting
hopefully you will also if not can

27
00:02:50,690 --> 00:02:58,579
Johnson's talk next door and funky just
saying right so we've got a bunch of

28
00:02:58,579 --> 00:03:05,359
stuff to talk about of I don't get into
it right

29
00:03:05,359 --> 00:03:09,829
yeah what did you get alright so somehow
my slide end up first

30
00:03:09,829 --> 00:03:16,609
I actually work little I'd huh give me
the dec 1st somehow it ended up first he

31
00:03:16,609 --> 00:03:29,959
put it first so I work for him now that
the library for me so I come from a

32
00:03:29,959 --> 00:03:33,829
developer background we've got any
developers out here it's got to be a

33
00:03:33,829 --> 00:03:35,120
bunch yeah there we go

34
00:03:35,120 --> 00:03:40,430
the developers are awesome it's a good
way to get started into securities

35
00:03:40,430 --> 00:03:43,099
having a good knowledge of how things
are actually built because then you can

36
00:03:43,099 --> 00:03:48,138
kind of start figuring out how to tear
them down so that's that's what i like

37
00:03:48,139 --> 00:03:48,680
to do

38
00:03:48,680 --> 00:03:52,340
yeah and it's more fun tearing them down
then it is building them but now i get

39
00:03:52,340 --> 00:03:54,889
to actually build things to break things
which is pretty cool

40
00:03:54,889 --> 00:04:01,400
yeah also I guess done some open source
stuff lately too so that's you know the

41
00:04:01,400 --> 00:04:06,380
perp co2 thingy and grote walked around
with that which is broken right now i

42
00:04:06,380 --> 00:04:08,299
know it works on my machine

43
00:04:08,299 --> 00:04:09,600
of course

44
00:04:09,600 --> 00:04:19,920
so and yeah in my spare time when I'm
not overly busy working on like this guy

45
00:04:19,920 --> 00:04:21,180
over here

46
00:04:21,180 --> 00:04:26,040
I like to I like to brew and I run I
wouldn't say I like to run but I run

47
00:04:26,040 --> 00:04:30,840
because I brew and that's you know that
it was making as being in shape I'm in

48
00:04:30,840 --> 00:04:33,630
shape I'm that its shape it's a shake

49
00:04:33,630 --> 00:04:40,950
you are correct thanks so I'm Kevin I'm
not very excited about that because I've

50
00:04:40,950 --> 00:04:47,460
been Kevin for 43 years I've been Kevin
Johnson 418 less than that arm i'm the

51
00:04:47,460 --> 00:04:51,750
founder of her idea or a consulting firm
at jacksonville florida i mention that

52
00:04:51,750 --> 00:04:56,640
because well i'm a greedy capitalists
and we are hiring we have a to open

53
00:04:56,640 --> 00:05:00,719
positions i don't know any consulting
firm that isn't hiring right now it's

54
00:05:00,720 --> 00:05:05,430
nuts out there but of course you can't
work for anywhere better my opinion I

55
00:05:05,430 --> 00:05:09,630
might be biased i'm also a knife faculty
member as his Gilliam didn't mention

56
00:05:09,630 --> 00:05:11,190
that though right

57
00:05:11,190 --> 00:05:16,770
this is and uh I'm an author and
instructor I written a web content and

58
00:05:16,770 --> 00:05:20,849
curriculum for a certain large without
security training company

59
00:05:20,850 --> 00:05:26,310
I don't know and arm do a lot of other
things teacher black a dolat what have

60
00:05:26,310 --> 00:05:32,610
you um I like to tell people I'm an
international speaker because I've been

61
00:05:32,610 --> 00:05:36,900
to Australia once kinda like the
Jacksonville International Airport it

62
00:05:36,900 --> 00:05:40,289
flies in the Bahamas once a week right

63
00:05:40,290 --> 00:05:43,980
uh was actually saying that sometime in
jacksonville and some guy got really

64
00:05:43,980 --> 00:05:45,030
offended

65
00:05:45,030 --> 00:05:48,239
he's like word International Airport
week really wears customs

66
00:05:50,090 --> 00:05:56,030
and let's be clear Atlanta isn't the
right answer but hey ho

67
00:05:56,660 --> 00:06:00,740
uh teach around speak around all over
the place i'm also like I said I

68
00:06:00,740 --> 00:06:06,260
pentester of my background is varied
I've been involved in IP for about 25

69
00:06:06,260 --> 00:06:11,360
years doing both development and system
administration I'm old and fat and lazy

70
00:06:11,360 --> 00:06:17,210
right I do a lot of interesting things I
think they're all work-related the one

71
00:06:17,210 --> 00:06:20,388
thing that isn't work related that I'm
actually pretty proud of my wife says

72
00:06:20,389 --> 00:06:24,680
it's the nerdiest thing I've ever done
and I told me she met me when I was 26

73
00:06:24,680 --> 00:06:29,690
she doesn't know i am a member of the
504 first Legion the favorite person is

74
00:06:29,690 --> 00:06:33,800
a charity group what we do is we build
and we're screen accurate star wars

75
00:06:33,800 --> 00:06:36,440
costumes and raise money for charity

76
00:06:36,440 --> 00:06:40,040
there are 10,000 members around the
world I had nothing to do with that I

77
00:06:40,040 --> 00:06:45,200
just happen to be one member but I have
a lot of fun with it so you get to see

78
00:06:45,200 --> 00:06:49,669
me do a 5k innovator costume in a couple
weeks to raise money for breast cancer

79
00:06:49,669 --> 00:06:54,710
are you have a couple of each wait
before you abroad I want to make sure

80
00:06:54,710 --> 00:07:02,690
you understand i said do a 5k not run a
fine hair haha you perfectly right arm

81
00:07:02,690 --> 00:07:04,820
and it will be hot

82
00:07:04,820 --> 00:07:07,969
haha i have a wife and kids had they
admit it

83
00:07:07,970 --> 00:07:12,950
ok Fred there are my daughters they are
awesome when brenda was born I realized

84
00:07:12,950 --> 00:07:17,270
that every parent in the world realizes
that their child is the most incredible

85
00:07:17,270 --> 00:07:20,690
smartest beautiful that's kid in the
world

86
00:07:21,229 --> 00:07:25,159
the second thing I realized is every
other parent is wrong but if you

87
00:07:25,160 --> 00:07:33,770
hello that's me.right gonna talk about i
forgot a remote but web applications are

88
00:07:33,770 --> 00:07:37,729
getting complex write a number of years
ago I was asked to write the web

89
00:07:37,729 --> 00:07:43,280
pentesting curriculum for a large
trading company and so I did and at that

90
00:07:43,280 --> 00:07:48,950
time websites were pretty simple right
and and if you think back to the

91
00:07:48,950 --> 00:07:52,849
beginning right i laughed and joked
about this the other day is the very

92
00:07:52,849 --> 00:07:56,150
first website i ever built they had a
customer come to me and say can you

93
00:07:56,150 --> 00:08:02,599
build me a website and I said what is it
like 95 right and I got huh

94
00:08:03,300 --> 00:08:08,550
excite you know yeah website so i did
some research on a gopher site and found

95
00:08:08,550 --> 00:08:12,419
out how to build a web page told
everybody I knew that you know the great

96
00:08:12,419 --> 00:08:16,919
background black bag blue links unless
you click them and they were purple was

97
00:08:16,919 --> 00:08:18,270
going nowhere

98
00:08:18,270 --> 00:08:22,859
the web was stupid come on we have
bulletin board systems we had telnet

99
00:08:22,860 --> 00:08:27,330
servers right yeah always kind of cool
stuff I don't drink

100
00:08:27,330 --> 00:08:33,029
yeah but they give you can cook yeah but
so hope it was just gonna go nowhere

101
00:08:33,570 --> 00:08:37,560
as you can tell I was right so if you
want any investing advice talk to me

102
00:08:37,559 --> 00:08:45,119
later but we we have applications right
there become very very complex we have

103
00:08:45,120 --> 00:08:49,620
also changed the way applications work
where instead of a lot of different

104
00:08:49,620 --> 00:08:52,829
pages that you make the request to and
everything else you have these single

105
00:08:52,829 --> 00:08:56,250
page apps that a lot of the traffic
happens a lot of the business logic

106
00:08:56,250 --> 00:09:02,670
happens client site right we've it and
for people who remember right here

107
00:09:02,670 --> 00:09:06,630
remember when PayPal world out there
shopping cart and the price with client

108
00:09:06,630 --> 00:09:15,420
side get ya right that's where we're
going back to so how much we have pen

109
00:09:15,420 --> 00:09:19,229
testers and how many do web and test
quite a lot lot of you

110
00:09:19,230 --> 00:09:22,350
so when you saw your first single page
app how many of you went oh my god what

111
00:09:22,350 --> 00:09:27,420
I do it is now it's like it doesn't work
the way it's supposed to

112
00:09:27,420 --> 00:09:31,800
I can't just leave things it doesn't yet
so that's basically we're going to talk

113
00:09:31,800 --> 00:09:37,260
about you did put the red LED an excuse
me

114
00:09:37,260 --> 00:09:42,420
development has also changed right we're
not agile good i'll i'm sorry i've seen

115
00:09:42,420 --> 00:09:47,459
most development teams agile is not the
word I would describe those people put

116
00:09:47,459 --> 00:09:55,050
says the fat guy on stage right we're
moving things faster within in this is

117
00:09:55,050 --> 00:10:00,510
actually a good thing is is when we talk
about think dr. and containers and cloud

118
00:10:00,510 --> 00:10:01,050
right

119
00:10:01,050 --> 00:10:06,599
I you know I remember years ago that
mold and criminally right but we would

120
00:10:06,600 --> 00:10:10,260
order a server when I was that one cross
and it would take six months to receive

121
00:10:10,260 --> 00:10:14,819
the server and that was after
procurement had approved it right they

122
00:10:14,820 --> 00:10:16,140
would build it and in

123
00:10:16,140 --> 00:10:20,610
it would ship out and you have all this
process everything else a last yesterday

124
00:10:20,610 --> 00:10:28,560
yesterday afternoon i built the server
on AWS in three seconds and I'd like to

125
00:10:28,560 --> 00:10:32,130
say that because i'm amazing but the
reality is it's a button

126
00:10:32,790 --> 00:10:38,189
I need a server thank you i need another
right that's nothing i built for in 3d

127
00:10:38,190 --> 00:10:38,730
right

128
00:10:38,730 --> 00:10:45,210
ah always proven me better you better
hope that's agile fact that we use every

129
00:10:45,210 --> 00:10:51,330
bit the agile name better than I do so
but all of this stuff is changing to

130
00:10:51,330 --> 00:10:56,400
$FULLPHONENUM now the point where
security IT whoever has to get involved

131
00:10:56,400 --> 00:11:01,530
with deployments that are happening
daily hourly right there was a company

132
00:11:01,530 --> 00:11:04,530
in a camera in the name of them they're
pretty big company and they were

133
00:11:04,530 --> 00:11:11,520
bragging about the fact that they were
deploying 300 times a week to production

134
00:11:11,520 --> 00:11:16,199
and I i will admit I laughed because my
immediate thought when they said we

135
00:11:16,200 --> 00:11:19,740
deploy three other times a week
production was how you could suck that

136
00:11:19,740 --> 00:11:22,440
bad that you have to avoid three times a
week

137
00:11:22,440 --> 00:11:27,090
that wasn't what they meant but how do
you embed security in that how do you

138
00:11:27,090 --> 00:11:31,980
ensure that you're able to test
especially as with modern application

139
00:11:31,980 --> 00:11:40,230
most automated tools are failing to find
the flaws that exists right what do we

140
00:11:40,230 --> 00:11:41,040
do

141
00:11:41,040 --> 00:11:46,949
oh it's time to change we need to adapt
its order to talk and what we're gonna

142
00:11:46,950 --> 00:11:51,420
do is we're going to talk about a couple
technologies that change testing and how

143
00:11:51,420 --> 00:11:55,079
you can address it for example we're
going to start with HP to write and then

144
00:11:55,080 --> 00:11:59,010
we'll talk about samurai WTF which is a
small environment guys may have heard up

145
00:11:59,010 --> 00:12:07,439
arm so how many people here use HTTP to
every single one of you should raise

146
00:12:07,440 --> 00:12:12,540
your hand because you're on the internet
today and many of the most common sites

147
00:12:12,540 --> 00:12:18,569
use Twitter Facebook stuff like that are
using HTTP to now you may not be

148
00:12:18,570 --> 00:12:23,970
developing for it but that's okay
because the development doesn't change

149
00:12:23,970 --> 00:12:28,579
you're deploying to the server that can
handle it your application shouldn't k

150
00:12:28,579 --> 00:12:33,709
r which protocol whether it's 101 120
doesn't matter to your application

151
00:12:33,709 --> 00:12:37,160
browse already supported exactly the
browser support it

152
00:12:37,160 --> 00:12:43,670
it is a huge change from 11 which is the
most commonly deployed version right now

153
00:12:43,670 --> 00:12:48,769
220 it changes a number of things
including and in the reason we have to

154
00:12:48,769 --> 00:12:53,689
ship out like that right is it one of
the biggest things that HP 20 is

155
00:12:53,689 --> 00:12:59,269
designed for is speed to reuse of the
connection and and I'm aware that 11

156
00:12:59,269 --> 00:13:06,709
reuses connections but it really is
asynchronous reuse whereas HTTP to that

157
00:13:06,709 --> 00:13:10,910
connection is able to just do what it
needs the browser the server can

158
00:13:10,910 --> 00:13:15,738
actually push data down that it knows
you're going to need right so for

159
00:13:15,739 --> 00:13:21,019
example with 11 you request a webpage
your browser receives the webpage and it

160
00:13:21,019 --> 00:13:24,619
parses it and it is all I need this
JavaScript I need this JavaScript need

161
00:13:24,619 --> 00:13:27,739
this cascading style sheets we want to
look pretty and we need this graphic

162
00:13:27,739 --> 00:13:30,439
this graphic graphic of the track and it
makes requests requests requests

163
00:13:30,439 --> 00:13:36,379
requests or as with hcv to when the
brown the server pushes the page down

164
00:13:36,379 --> 00:13:41,029
the server can then immediately start
pushing the other resources necessary

165
00:13:41,029 --> 00:13:46,970
for that page without waiting for the
browser to request them right because it

166
00:13:46,970 --> 00:13:52,549
knows what makes up that page and this
is one of the speed increases right to

167
00:13:52,549 --> 00:13:59,720
push content to users faster and as we
see with single page apps and with a no

168
00:13:59,720 --> 00:14:06,350
streaming and all of the client heavy
technologies that we use today that push

169
00:14:06,350 --> 00:14:10,879
that moved to to get stuff down to the
browser as quickly as possible is

170
00:14:10,879 --> 00:14:15,439
critical to the functioning of
applications especially since we have

171
00:14:15,439 --> 00:14:23,959
become less patient how many people here
had a 2400 baud modem right

172
00:14:23,959 --> 00:14:29,959
do you remember downloading porn on
2,400 miles haha i go i'm dr bad example

173
00:14:29,959 --> 00:14:35,059
bad example right you would download a
graphic or up executable right whatever

174
00:14:35,059 --> 00:14:39,799
it was and you'd go out right we
actually had lives away from our

175
00:14:39,799 --> 00:14:40,800
computer because we

176
00:14:40,800 --> 00:14:45,599
we had wait time right you can see the
interlacing take place

177
00:14:45,600 --> 00:14:51,750
yeah if you could watch it draw the
graph get right and it was awesome right

178
00:14:51,750 --> 00:14:57,480
now I thought statistic online and we
know that everything on the internet is

179
00:14:57,480 --> 00:14:58,589
true right

180
00:14:58,589 --> 00:15:04,290
I thought statistic online from a
marketing company that if your web page

181
00:15:04,290 --> 00:15:10,349
is not usable within a second and a half
people will leave your site's not want

182
00:15:10,350 --> 00:15:16,529
to be very clear i don't believe that
marketing blur right but I don't think

183
00:15:16,529 --> 00:15:20,700
it's far off people want to see
something they want to be able to react

184
00:15:20,700 --> 00:15:26,790
to it and to always accepting that right
now from pen testers perspective a

185
00:15:26,790 --> 00:15:31,380
couple thing we want to talk about first
high-level syntax hasn't changed

186
00:15:31,950 --> 00:15:35,670
we still have get post put all that kind
of stuff right the method haven't

187
00:15:35,670 --> 00:15:42,029
changed the status code haven't changed
from the application layer this is the

188
00:15:42,029 --> 00:15:46,860
same to us the headers are the same to
buy everything the same right things

189
00:15:46,860 --> 00:15:48,089
change

190
00:15:48,089 --> 00:15:54,630
it's the transportation so the network
layer so we actually dumped this down

191
00:15:54,630 --> 00:16:00,089
into packets and that's what
transporting the data and that's where

192
00:16:00,089 --> 00:16:04,829
the changes when you look at if you were
to intercept this traffic right if you

193
00:16:04,829 --> 00:16:09,060
were to capture this traffic you would
see the request go from the server the

194
00:16:09,060 --> 00:16:14,819
certain start from the browser to the
server and the server responds with a

195
00:16:14,820 --> 00:16:21,480
101 status code right to change
protocols and they actually changes

196
00:16:21,480 --> 00:16:26,820
protocol to the HP 2000 or h2 is what
you'll see right coming down at that

197
00:16:26,820 --> 00:16:32,699
point the browser if the browser support
in all modern browsers support hd2 it

198
00:16:32,699 --> 00:16:34,649
will convert to the other protocol

199
00:16:34,649 --> 00:16:41,610
now one thing to keep in mind is that
hd2 works over HTTP and https it can

200
00:16:41,610 --> 00:16:45,269
handle both and there's actually a
common misconception that a lot of

201
00:16:45,269 --> 00:16:51,060
people including myself in previous
presentations have said hd2 only works

202
00:16:51,060 --> 00:16:54,599
over an encrypted Channel right that is
not

203
00:16:54,600 --> 00:17:03,180
true by standard that is true by
implementation because the majority of

204
00:17:03,180 --> 00:17:07,530
browsers today have made the
determination that they will only

205
00:17:07,530 --> 00:17:15,329
support HTTP two connections over https
right so even though the cert the

206
00:17:15,329 --> 00:17:21,089
standard says it can happen unencrypted
the browser will not support this and

207
00:17:21,089 --> 00:17:24,990
the reason I bring this up not for the
testers here now for the condensers for

208
00:17:24,990 --> 00:17:28,860
the developers and the reason I say that
is because the standard says one thing

209
00:17:28,860 --> 00:17:33,629
and many developers work off of somehow
the standard whether they're trained

210
00:17:33,630 --> 00:17:38,640
that way or whatever they make the
assumption that they can use the system

211
00:17:38,640 --> 00:17:41,730
over HTTP but the reality is you can't

212
00:17:41,730 --> 00:17:47,970
ok so that's something to keep in mind
as you're dealing with this I'm so I'm

213
00:17:47,970 --> 00:17:51,000
very I'm getting over cold and I've got
a cop I apologize

214
00:17:51,000 --> 00:17:54,900
so we've already talked about the fact
that the server is actually able to push

215
00:17:54,900 --> 00:17:59,610
data before the browser requests before
the client i should stop saying browser

216
00:17:59,610 --> 00:18:02,939
right because reality is with mobile app
and everything else

217
00:18:02,940 --> 00:18:07,710
the client is what is requesting the
data but the server can push that before

218
00:18:07,710 --> 00:18:11,940
the client requests it if it knows what
it's supposed to be pushing down right

219
00:18:11,940 --> 00:18:19,169
which is kind of interesting but now
here's the prob what about testing it

220
00:18:19,169 --> 00:18:26,580
how many people here use app or burp
they're awesome right there beautiful i

221
00:18:26,580 --> 00:18:29,340
would like to have burps children right

222
00:18:29,340 --> 00:18:35,668
I just incredible full of those
interception prophecies break

223
00:18:36,179 --> 00:18:41,610
HTTP to now you say wait a minute Kevin
I'm tested I've intercepted traffic yes

224
00:18:41,610 --> 00:18:46,799
you have but if you looked at it was HD
one . one what happened is the

225
00:18:46,799 --> 00:18:52,440
interception proxy blocks the changing
protocol message remember status could

226
00:18:52,440 --> 00:18:57,360
101 so when that comes down from the
server to say hey I want to switch makes

227
00:18:57,360 --> 00:19:03,809
you one . 122 the proxy says uh-uh and
doesn't pass that down to the browser so

228
00:19:03,809 --> 00:19:07,090
the conversion over the hd2 doesn't
happen

229
00:19:07,090 --> 00:19:11,530
so and this is really frustrating says
the guy on stage you tried to build hb2

230
00:19:11,530 --> 00:19:15,879
server and liked it works but it doesn't
because i'm thinking what the heck every

231
00:19:15,880 --> 00:19:24,610
time I talk to it set up the proxies
will not talk to yet i don't expect that

232
00:19:24,610 --> 00:19:30,280
to change anytime soon because of the
difference in how that trip that

233
00:19:30,280 --> 00:19:35,050
transport works so the question becomes
how do we test it right if we can't

234
00:19:35,050 --> 00:19:40,389
intercept that what we do what we can
remember what I said at the very

235
00:19:40,390 --> 00:19:43,660
beginning what Gilliam said very
beginning your application doesn't care

236
00:19:43,660 --> 00:19:49,240
about the underlying protocol in most
cases right now because it doesn't care

237
00:19:49,240 --> 00:19:54,520
whether it's talking to or one . one if
you intercept its good downgrade to one

238
00:19:54,520 --> 00:20:00,639
. one and as long as the server support
HD one . one you'll be able to use the

239
00:20:00,640 --> 00:20:04,480
interception proxies without a problem
and capture that traffic intercept that

240
00:20:04,480 --> 00:20:10,510
traffic use the same testing techniques
that we use today i hope you understood

241
00:20:10,510 --> 00:20:17,740
the one qualifier I just said as long as
the server supports one . one now in

242
00:20:17,740 --> 00:20:23,380
production in the staging I don't expect
you to see very often

243
00:20:23,380 --> 00:20:30,430
anytime soon servers not supporting one
. one heck we still support ssl 0.93

244
00:20:30,430 --> 00:20:35,950
right I made that one up just to cover
later like that one doesn't exist what

245
00:20:35,950 --> 00:20:36,970
he's talking about

246
00:20:36,970 --> 00:20:40,210
I don't expect us to see is not
supporting one . one anytime soon so i

247
00:20:40,210 --> 00:20:46,570
think that's ok today but we need to
start planning toward fixing this right

248
00:20:46,570 --> 00:20:55,840
the other way to do it is to build a
custom client right if you want to talk

249
00:20:55,840 --> 00:21:01,629
hd2 because the server doesn't support
it or the application somehow decide to

250
00:21:01,630 --> 00:21:05,800
behave differently which is possible
right at the application layer you may

251
00:21:05,800 --> 00:21:09,669
want to detect like I personally can't
think of a reason but I also thought the

252
00:21:09,670 --> 00:21:10,960
web was stupid so

253
00:21:10,960 --> 00:21:16,030
oh I'm not sure I should even talking
right but if you run into a situation

254
00:21:16,030 --> 00:21:19,870
where the app behaves differently
writing a custom client is the way to

255
00:21:19,870 --> 00:21:20,620
handle that

256
00:21:20,620 --> 00:21:24,429
right and we had to do this for other
reasons we talk soap web services

257
00:21:24,430 --> 00:21:28,180
without restful api right using a custom
client is is there we'll talk about that

258
00:21:28,180 --> 00:21:29,080
in a second

259
00:21:29,080 --> 00:21:35,800
right so all of the major platforms that
are worthwhile today you know and even

260
00:21:35,800 --> 00:21:46,570
java support a government support hd2 is
what you do is you build the client and

261
00:21:46,570 --> 00:21:50,919
you can attack the application now if
what you want to do is attack the

262
00:21:50,920 --> 00:21:52,210
protocol

263
00:21:52,210 --> 00:21:56,710
let's say you were implementing a server
that you created in your server spokane

264
00:21:56,710 --> 00:21:57,790
should be too

265
00:21:57,790 --> 00:22:02,350
thence KP is what you would use right
and that would allow you to attack the

266
00:22:02,350 --> 00:22:06,040
protocol now in most cases a web
pentester isn't doing that they're doing

267
00:22:06,040 --> 00:22:09,340
the application layer right but if
you're dealing with the protocol itself

268
00:22:09,340 --> 00:22:16,030
scrapie is the method that i would
recommend nope

269
00:22:16,720 --> 00:22:21,160
the equation was the API for Pilate to
do this and it does not it as of right

270
00:22:21,160 --> 00:22:25,090
now Burt blocks the changing protocol
status code

271
00:22:25,090 --> 00:22:30,790
ok so sorry

272
00:22:30,790 --> 00:22:33,909
WebSockets ok

273
00:22:33,910 --> 00:22:39,940
hmm i would have a light bulb light
socket and a fork when I think website i

274
00:22:39,940 --> 00:22:41,800
don't want to have the Internet in here

275
00:22:41,800 --> 00:22:45,550
yeah kinda like that again

276
00:22:45,550 --> 00:22:52,928
yeah WebSockets is not new been around
for awhile part of html5 right which is

277
00:22:52,929 --> 00:22:58,300
the best thing ever to happen for pen
testers arm i know i know it's also for

278
00:22:58,300 --> 00:23:06,760
developers write H WebSocket from sorry
WebSocket is also another protocol when

279
00:23:06,760 --> 00:23:12,070
you hit a webpage the web application
could actually send out a message states

280
00:23:12,070 --> 00:23:17,530
which protocols and switch to WebSockets
it's been around longer as a standard

281
00:23:17,530 --> 00:23:23,800
than HP too so it's actually more in use
right now and the big differences

282
00:23:23,800 --> 00:23:27,460
remember i said with HP to at the
application layer doesn't change things

283
00:23:27,460 --> 00:23:28,840
right

284
00:23:28,840 --> 00:23:34,240
WebSockets does so they pentester if
you're dealing with the application you

285
00:23:34,240 --> 00:23:40,179
have to be able to communicate over the
websocket protocol right so that changes

286
00:23:40,179 --> 00:23:41,890
things for you

287
00:23:41,890 --> 00:23:46,150
he excuse me you're going to see and I
can I want to be very clear and i just

288
00:23:46,150 --> 00:23:48,790
noticed on the slide i keep saying
changing protocols and standards

289
00:23:48,790 --> 00:23:50,649
actually switching protocols

290
00:23:50,650 --> 00:23:54,040
sorry guys i'm an idiot

291
00:23:54,040 --> 00:23:57,850
so you're gonna see that switching
protocols message and I and what kind of

292
00:23:57,850 --> 00:24:04,870
weird purpose app don't block that it's
the h2 that they block not so those

293
00:24:04,870 --> 00:24:09,610
you'll see the switching protocols
message come back and then in both burp

294
00:24:09,610 --> 00:24:14,800
and that you'll be able to see the
WebSockets traffic will be able to

295
00:24:14,800 --> 00:24:20,980
intercept the WebSockets traffic so you
can actually test them the same way that

296
00:24:20,980 --> 00:24:24,490
you test HTTP there's a couple
qualifiers

297
00:24:26,230 --> 00:24:33,040
excuse me websocket support is limited
in both of the interception proxies and

298
00:24:33,040 --> 00:24:36,250
by that i mean not that they don't
understand how to deal with it is that

299
00:24:36,250 --> 00:24:41,650
not all of the functionality of the
proxy works with WebSockets so i'll pick

300
00:24:41,650 --> 00:24:44,260
convert for a second because it's the
one I prefer the one I'm most

301
00:24:44,260 --> 00:24:45,340
comfortable with

302
00:24:45,340 --> 00:24:49,570
when you're working inside a verb you
can intercept the web sockets and mango

303
00:24:49,570 --> 00:24:54,010
them so if it's making the request you
can stop it changed up around and then

304
00:24:54,010 --> 00:25:00,100
forward that request on or you can see
the requests right you can't send that

305
00:25:00,100 --> 00:25:07,928
request to repeat her or intruder or the
other tools within burp because those

306
00:25:07,929 --> 00:25:13,450
tools are built around and understand
the HTTP protocol when you're dealing

307
00:25:13,450 --> 00:25:20,290
with WebSockets it's really a real-time
interception and modification you unlike

308
00:25:20,290 --> 00:25:24,100
with HTTP right how many times do you
capture the traffic and send it to

309
00:25:24,100 --> 00:25:28,780
repeater and mangle it there and so 2
into the right exactly is how we use it

310
00:25:28,780 --> 00:25:29,770
a lot

311
00:25:29,770 --> 00:25:33,520
WebSockets you can't do that so if
you've ever heard me speak about how to

312
00:25:33,520 --> 00:25:36,490
do interception and how to use Burke
you'll hear me say don't turn on

313
00:25:36,490 --> 00:25:41,110
interception I now have to qualify that
with don't turn on interception unless

314
00:25:41,110 --> 00:25:42,760
you're dealing with websites

315
00:25:42,760 --> 00:25:46,030
ok that's the big change with websites

316
00:25:48,039 --> 00:25:51,039
I can't hurt

317
00:25:51,759 --> 00:25:55,840
so the question was can you pass that to
the API layers in my answer that point

318
00:25:55,840 --> 00:26:00,189
is i don't know but i've never tried to
have you i have not tried it out yet

319
00:26:00,190 --> 00:26:03,220
would you like me to make up an answer

320
00:26:03,220 --> 00:26:08,350
I'm so check shirt can be done yeah it
might be yeah maybe I don't know though

321
00:26:08,350 --> 00:26:16,689
sorry so the next thing we're going to
talk about it course he hit which is

322
00:26:16,690 --> 00:26:21,609
something i've been looking at for
awhile cross-origin resource sharing so

323
00:26:21,609 --> 00:26:25,869
this is this is the answer to getting
around same origin policy this is what

324
00:26:25,869 --> 00:26:31,119
developers do with all the Ajax all
right so used to be that we put

325
00:26:31,119 --> 00:26:35,529
everything in a five frames if we wanted
to bring up content from another site

326
00:26:35,529 --> 00:26:41,799
now the common way to do it is through
Ajax calls or it's not always ajax i

327
00:26:41,799 --> 00:26:48,009
guess but it's the web call it and and
you bring the content and use the course

328
00:26:48,009 --> 00:26:52,690
policy around that so the same origin
policy that's that browser and force

329
00:26:52,690 --> 00:26:58,929
policy sorry for laughing I'm really
bothered by it or lies on here somewhere

330
00:26:58,929 --> 00:27:01,570
and I know they're not they're not the
big guns

331
00:27:01,570 --> 00:27:05,379
I'm really bothers like someone troopers
and kill maybe come up with her clothes

332
00:27:05,379 --> 00:27:07,748
like no stormtroopers are clones can't
tell the difference

333
00:27:07,749 --> 00:27:12,340
clone troopers are clones so by the way
we don't have our booth we do have two

334
00:27:12,340 --> 00:27:15,820
helmets there one is the clone helmet
the other ones a stormtrooper element

335
00:27:15,820 --> 00:27:19,149
see if you can tell the difference
course you can

336
00:27:19,149 --> 00:27:27,279
so so basically the the same origin
policy it prevents code running one

337
00:27:27,279 --> 00:27:35,919
place course from interacting with
content somewhere else but we have ways

338
00:27:35,919 --> 00:27:36,729
around that

339
00:27:36,729 --> 00:27:41,409
so same origin policy to find as you
have your protocol you have your host

340
00:27:41,409 --> 00:27:45,220
you have your port those three things
together that makes your origin any of

341
00:27:45,220 --> 00:27:47,769
those are different than you're actually
talking about a different origin and

342
00:27:47,769 --> 00:27:49,869
keep in mind that we talked about same
origin

343
00:27:49,869 --> 00:27:56,139
it's the origin of the script tag that
is loading the content so if dub dub .

344
00:27:56,139 --> 00:28:00,830
securities . com load the script tag but
the source of the script tag is

345
00:28:00,830 --> 00:28:06,500
ww professionally volcom the origin is
secure ideas calm because that's where

346
00:28:06,500 --> 00:28:10,880
the script tag was from not where the
Jets was from that's what enables you to

347
00:28:10,880 --> 00:28:16,340
load like Google Analytics scripts from
Google server but have that script

348
00:28:16,340 --> 00:28:21,590
interact with your website right because
the origin is from your site that

349
00:28:21,590 --> 00:28:24,289
confuses a lot of people when they first
start looking at this

350
00:28:24,289 --> 00:28:28,429
yeah it is it is this the origin of it
where the script is actually running

351
00:28:28,429 --> 00:28:33,620
what is allowed to talk to so that's
that's one actually just explain one of

352
00:28:33,620 --> 00:28:38,299
a couple of sort of exceptions the same
origin policy one is giving you can pull

353
00:28:38,299 --> 00:28:45,649
JavaScript or CSS or images from other
places so that's not really an exception

354
00:28:45,649 --> 00:28:50,120
to the same origin policy but kind of
the other one no that is definitely an

355
00:28:50,120 --> 00:28:54,260
exception to it is if there is a course
policy in place right so that's what's

356
00:28:54,260 --> 00:29:00,769
going to allow let's say we have
security is calm and it wants to load

357
00:29:00,769 --> 00:29:08,179
content from google.com so it's going to
be a professional com will have a policy

358
00:29:08,179 --> 00:29:15,019
that allows content to be loaded from
securities com and and I want to make

359
00:29:15,019 --> 00:29:20,870
sure you caught that it's the source of
the Brooklyn like what it's asking for

360
00:29:20,870 --> 00:29:25,908
that controls the course policy so
security of calm can't set a course

361
00:29:25,909 --> 00:29:28,880
policy for amazon.com right

362
00:29:28,880 --> 00:29:32,630
amazon would set that corresponds even
those securities would be requesting the

363
00:29:32,630 --> 00:29:37,669
content so how did you find out if
something has a corresponding see in

364
00:29:37,669 --> 00:29:40,730
place all you like that

365
00:29:40,730 --> 00:29:49,669
ok well the answers on screen yeah but
you are right so if there's an origin

366
00:29:49,669 --> 00:29:51,919
header in there then that's all it takes

367
00:29:51,919 --> 00:29:55,340
so you can either fabricate one you can
take an existing request and an origin

368
00:29:55,340 --> 00:29:59,840
header or you can look at existing
traffic in your proxy history and you're

369
00:29:59,840 --> 00:30:04,220
going to see of course in origin header
there and in response to that origin

370
00:30:04,220 --> 00:30:11,059
header if you see the e policy in place
then you will know that it actually has

371
00:30:11,059 --> 00:30:14,389
one and also have an idea how should
work so

372
00:30:14,390 --> 00:30:22,340
those are your options there so I this
is kind of small but it's an example so

373
00:30:22,340 --> 00:30:28,370
there's an origin header and then you
get your access control allow allow

374
00:30:28,370 --> 00:30:32,780
whatever it is whatever part of the
policy so there's this one here we have

375
00:30:32,780 --> 00:30:36,680
credentials we have origin we have
methods so the policy can include

376
00:30:36,680 --> 00:30:39,290
various different things there's more
than just those three as well but those

377
00:30:39,290 --> 00:30:44,600
are the most common ones now the
important thing from a testing

378
00:30:44,600 --> 00:30:49,250
standpoint I think to realize that the
having in global policy so this is

379
00:30:49,250 --> 00:30:53,600
something that shows up a lot you have
some content on a website and they put a

380
00:30:53,600 --> 00:30:59,990
course policy access control allow
origins star so it's a global policy and

381
00:30:59,990 --> 00:31:04,430
when that happens we start thinking well
isn't that kind of like a flash cross

382
00:31:04,430 --> 00:31:09,020
domain policy did that bad and the
reality is is not really because we

383
00:31:09,020 --> 00:31:13,160
haven't allowed any credentials which
means credentials with the cookies right

384
00:31:13,160 --> 00:31:19,880
things and that's that's what the policy
refers to as cookies credential and and

385
00:31:19,880 --> 00:31:25,340
those are not there so a global policy
by itself is not really the same thing

386
00:31:25,340 --> 00:31:31,040
that if this Republic content basically
right basically the idea is that if in

387
00:31:31,040 --> 00:31:35,899
flash if you guys remember back to the
weaponize flash talk right if you have a

388
00:31:35,900 --> 00:31:39,770
flat there that meant that anybody could
load the content they could grab

389
00:31:39,770 --> 00:31:45,139
credentials cookies things like that
with Korres the browser won't if the

390
00:31:45,140 --> 00:31:50,630
policy is set to global that set to its
flat the browser won't send the cookies

391
00:31:50,630 --> 00:31:56,660
right to the browser control that which
is kinda nice but yeah that's me that's

392
00:31:56,660 --> 00:32:04,160
a key differentiator there and you'll
see actually some tools maybe we'll

393
00:32:04,160 --> 00:32:07,550
actually report every time it sees a
global policy that hey this is a really

394
00:32:07,550 --> 00:32:08,780
serious problem

395
00:32:08,780 --> 00:32:15,800
so at that point you have to really look
at it and determine if it is there are

396
00:32:15,800 --> 00:32:19,580
so there's a few considerations you want
to keep in mind first of all if there is

397
00:32:19,580 --> 00:32:25,340
a global policy is it something that is
that content actually doesn't really

398
00:32:25,340 --> 00:32:27,510
need to be protected in any way it mean

399
00:32:27,510 --> 00:32:30,690
is it is it something we don't want to
be public

400
00:32:30,690 --> 00:32:33,930
I mean if it's something that you don't
want to be publicly put on to other

401
00:32:33,930 --> 00:32:37,920
pages for some reason then maybe it
causes an issue but generally it does

402
00:32:37,920 --> 00:32:44,130
most of the time of global policy with
Korres is not an issue but what is an

403
00:32:44,130 --> 00:32:49,260
issue is if there are is if there's a
very specific set of origins that are

404
00:32:49,260 --> 00:32:54,210
accepted then any cross-site scripting
law on those origins

405
00:32:54,210 --> 00:33:00,360
so let's say back for example let's say
professional evil com has some content

406
00:33:00,360 --> 00:33:05,129
that it's making available to securities
com and security is good on let's just

407
00:33:05,130 --> 00:33:08,310
say it had a cross-site scripting
vulnerability which is never happened

408
00:33:08,310 --> 00:33:12,810
and good but let's say it did that would
mean that we could use that prostate

409
00:33:12,810 --> 00:33:17,669
scripting vulnerability on securities
com to attack professional com it would

410
00:33:17,670 --> 00:33:23,610
actually be able to interact with the
content on that page so so it expands

411
00:33:23,610 --> 00:33:26,610
the scope of our same-origin policy

412
00:33:28,380 --> 00:33:34,170
the other thing that we might want to
look at two with course policy is are

413
00:33:34,170 --> 00:33:39,960
there ways of taking something that was
supposed to be it maybe initially

414
00:33:39,960 --> 00:33:46,860
intended to be and encrypted call and
making it over an unencrypted call as

415
00:33:46,860 --> 00:33:50,820
well but that that still requires no man
in the middle type of capabilities is

416
00:33:50,820 --> 00:33:56,490
the same sort of thing as the starbucks
intercepting the Wi-Fi and you know

417
00:33:56,490 --> 00:34:04,410
getting in the middle of that restful
api eyes which i always want to think

418
00:34:04,410 --> 00:34:09,810
means naps but it doesn't have to be
nice right

419
00:34:09,810 --> 00:34:14,969
ok yeah so the RESTful API is though
restful is representational State

420
00:34:14,969 --> 00:34:17,489
transfer rest right

421
00:34:17,489 --> 00:34:22,560
hmm i feel i just realized something in
my bio I have pictures of my kid

422
00:34:23,070 --> 00:34:26,070
yeah in the slides you put pictures of
your cat

423
00:34:28,149 --> 00:34:33,250
that's my cat both the cat treats quick
story on that with a cat really we got

424
00:34:33,250 --> 00:34:37,659
it for when she was a kitten and she's
the curl up when i was working and for

425
00:34:37,659 --> 00:34:40,899
some reason she thinks she can still fit
in there so that was actually taken

426
00:34:40,899 --> 00:34:41,348
reason

427
00:34:41,349 --> 00:34:47,589
look at that so restful api eyes is
really an architectural style not a

428
00:34:47,589 --> 00:34:51,879
protocol right so when we talk about
rest a lot of people think oh ok you're

429
00:34:51,879 --> 00:34:54,969
going to change the way requests are
made somebody that no they're not

430
00:34:54,969 --> 00:35:00,970
they're still HTTP or HTTPS calls the
protocol still looks the same right

431
00:35:01,599 --> 00:35:04,599
it's just how the architecture works

432
00:35:05,710 --> 00:35:12,730
correct well what that we want no no no
you're not you're shaking your hand that

433
00:35:12,730 --> 00:35:16,720
I know sorry we rehearse this many times
a million

434
00:35:16,720 --> 00:35:23,709
ok so when you look at restful you have
the API calls and in you got get post

435
00:35:23,710 --> 00:35:28,000
put delete right and by the way up a lot
of pen testers have never dealt with

436
00:35:28,000 --> 00:35:33,130
rest they see the put request or they
see the delete request and they merely

437
00:35:33,130 --> 00:35:38,740
yeah right because put and delete our
are methods that for years we have said

438
00:35:38,740 --> 00:35:46,390
oh that bad because yeah by standard on
HTTP a put request put the content at

439
00:35:46,390 --> 00:35:50,470
that resource if you have permission a
delete request believe the resource

440
00:35:50,470 --> 00:35:57,250
that's not what happens with a restful
api put is putting data into the API yes

441
00:35:57,250 --> 00:35:58,059
right

442
00:35:58,059 --> 00:36:02,319
delete is sending the delete request
your data rate is you're doing sup just

443
00:36:02,319 --> 00:36:11,470
like a pose is posting a transaction or
a get is getting data back and just for

444
00:36:11,470 --> 00:36:15,250
clarification that strictly speaking if
you're doing rest but what actually

445
00:36:15,250 --> 00:36:19,240
happens a lot of the time is they're all
the line of being get calls or postal

446
00:36:19,240 --> 00:36:23,020
you put so it really depends on how
they've implemented it and and

447
00:36:23,020 --> 00:36:28,059
developers will do whatever they feel
like doing it seems now with restful api

448
00:36:28,059 --> 00:36:33,579
s where the focus has to be is on the
client right because we don't know of

449
00:36:33,579 --> 00:36:36,849
course it's a white box test we have a
list of all the API calls

450
00:36:36,849 --> 00:36:41,260
that's great we need to just make them
but most of us are in that position most

451
00:36:41,260 --> 00:36:41,800
part

452
00:36:41,800 --> 00:36:46,900
aren't be given a RESTful API to look at
and handed all of the API calls so we

453
00:36:46,900 --> 00:36:51,580
have to do is we have to focus on the
client right during our methodology

454
00:36:51,580 --> 00:36:56,200
right we do mapping we map how the
application works we have to understand

455
00:36:56,200 --> 00:37:00,970
where all the transactions look like and
that focus on that mapping stage should

456
00:37:00,970 --> 00:37:06,310
have us discover the API is we have
access to now of course we can also go

457
00:37:06,310 --> 00:37:09,940
after other ones to see if they exist
and they just weren't exercise during

458
00:37:09,940 --> 00:37:14,440
the time we were testing them right but
we should be able to see them based on

459
00:37:14,440 --> 00:37:17,950
what the client is doing so the
javascript is going to be making

460
00:37:17,950 --> 00:37:22,899
requests the flash object the mobile app
for whatever that client application is

461
00:37:22,900 --> 00:37:29,080
going to show us what those those get
restful api calls look like and then we

462
00:37:29,080 --> 00:37:35,860
can use the same tools we use to test
regular HTTP to test those for the way

463
00:37:35,860 --> 00:37:37,720
we're supposed to anyway right

464
00:37:37,720 --> 00:37:40,990
because one of the things that you're
going to realize if you if you bring up

465
00:37:40,990 --> 00:37:43,899
burp and start running an automated scan
again something that has a RESTful API

466
00:37:43,900 --> 00:37:46,330
probably not going to get very far

467
00:37:46,330 --> 00:37:50,710
it does it's not going to understand
where the parameters are so you actually

468
00:37:50,710 --> 00:37:55,300
have to think about the API and work
your way through it and manually figure

469
00:37:55,300 --> 00:38:03,280
out where the the table positions are
going to sew another set of clients

470
00:38:03,280 --> 00:38:07,990
though are available to you you can use
the advanced rest client you can use

471
00:38:07,990 --> 00:38:13,450
postman you can even use soap you I so
if you've been doing soap of soap

472
00:38:13,450 --> 00:38:19,509
testing and you used to put you I to do
that it has restful capabilities in my

473
00:38:19,510 --> 00:38:23,560
opinion and I don't mean to bash
anything on the restful capabilities and

474
00:38:23,560 --> 00:38:27,820
soap you I seem to be more of an
afterthought right since they were

475
00:38:27,820 --> 00:38:31,630
building an application to test
soap-based FBI's and they think a

476
00:38:31,630 --> 00:38:34,870
customer said hey could you do restful
also know it

477
00:38:34,870 --> 00:38:39,670
yeah but it's a checkbox right but the
advanced rest client is kind of cool

478
00:38:40,270 --> 00:38:43,990
oh yeah that the best one to use really
depends on the engagement

479
00:38:44,740 --> 00:38:49,509
I'm best thing to do is figure out what
the developers are using and if you can

480
00:38:49,510 --> 00:38:55,360
get a good just testing an app you can
get I wonder they're basically an output

481
00:38:55,360 --> 00:39:00,880
from there so they they do an export of
whatever there-there test project is if

482
00:39:00,880 --> 00:39:04,720
you're using soap you I then you can
import into soap UI for using advanced

483
00:39:04,720 --> 00:39:08,980
rest . important in there and that way
you'll have an idea of what all the API

484
00:39:08,980 --> 00:39:13,330
calls are so definitely ask for that if
you're getting on an engagement and it's

485
00:39:13,330 --> 00:39:16,870
all rest days see if they have a project
file they can share with you and

486
00:39:16,870 --> 00:39:22,120
something make use of that will save you
a ton of time so now we already talked

487
00:39:22,120 --> 00:39:25,779
about focusing on the client but what
should we look for right if we test

488
00:39:25,780 --> 00:39:30,040
these apps what considerations what
risks show you looking for

489
00:39:30,040 --> 00:39:35,170
and there really is like four different
places that you should look one is

490
00:39:35,170 --> 00:39:40,120
authentication III don't know what it is
but people seem to focus like oh man

491
00:39:40,120 --> 00:39:44,140
that web she got authenticate do that
you definitely have to authenticate but

492
00:39:44,140 --> 00:39:48,430
maybe talk about API is like oh yeah
that's fine that's open right it's good

493
00:39:48,430 --> 00:39:52,240
for you have people who like the
customer i just talked to a couple of

494
00:39:52,240 --> 00:39:57,399
like last week who said to me when you
tested authentication right that's what

495
00:39:57,400 --> 00:40:03,160
do you mean they said you logged in and
what wasn't a test of authentication

496
00:40:03,160 --> 00:40:08,799
know that was a test to see if i could
type my password right right like that

497
00:40:08,800 --> 00:40:10,930
hot huh

498
00:40:10,930 --> 00:40:13,930
but you don't want to look at
authentication a lot of times api's

499
00:40:13,930 --> 00:40:15,730
authentication is broken

500
00:40:15,730 --> 00:40:19,720
you also want to look at the data how
and where is it used right one of the

501
00:40:19,720 --> 00:40:22,839
things that I find quite often given
finds quite often is that because

502
00:40:22,840 --> 00:40:28,240
there's so much quiet side consideration
right so much data is coming down client

503
00:40:28,240 --> 00:40:32,740
that a lot of times the application
developer will build the app to return

504
00:40:32,740 --> 00:40:38,290
more data than is necessary and allows
the client to parse it and only display

505
00:40:38,290 --> 00:40:42,910
what it leads to a bad example of that
but when i see quite often is you'll see

506
00:40:42,910 --> 00:40:48,078
buzzed or a censored uh social security
numbers or

507
00:40:48,079 --> 00:40:52,579
credit card numbers in the app but if
you look at the data transfer

508
00:40:52,579 --> 00:40:58,489
it's the full number with no information
xed out censored in any way right it's

509
00:40:58,489 --> 00:41:02,390
the client well what does that mean it
means i got the full number right that's

510
00:41:02,390 --> 00:41:03,200
good

511
00:41:03,200 --> 00:41:08,450
we had a customer who is very very proud
of their authorization system when you

512
00:41:08,450 --> 00:41:13,069
first went to their site they ask you
these sensitive questions like hey did

513
00:41:13,069 --> 00:41:16,459
you live here is this your income is
this this is yet to be able to answer

514
00:41:16,459 --> 00:41:19,669
them correctly you have to give me your
social security number correctly and all

515
00:41:19,670 --> 00:41:23,119
this kind of stuff and we intercepted
the traffic and they were using a

516
00:41:23,119 --> 00:41:27,200
RESTful API and basically what would
happen is you would come to the site

517
00:41:27,200 --> 00:41:31,999
give a number that was your ID right and
it would go back to the API and say hey

518
00:41:31,999 --> 00:41:38,328
I need all the information about ID
number 42 which would return all of that

519
00:41:38,329 --> 00:41:42,559
data down in a json object that the
clients i was a ok here's the question I

520
00:41:42,559 --> 00:41:46,789
have to ask you I know the answer it's
right there right

521
00:41:46,789 --> 00:41:50,029
it's also any of that one that was
embarrassing that was because we're

522
00:41:50,029 --> 00:41:53,959
sitting and we weren't even tested it
yet we were in the like the

523
00:41:53,959 --> 00:41:56,690
conversations the scoping and I just
said that

524
00:41:56,690 --> 00:42:00,289
hey the way you're describing it doesn't
make sense would you mind if you just

525
00:42:00,289 --> 00:42:04,309
show us right could you just show us how
the app works because all you have to

526
00:42:04,309 --> 00:42:09,229
show is very proud of his app that's not
an appropriate but he was very very

527
00:42:09,229 --> 00:42:13,519
probably so he we intercept it with burp
and I looked at it and win it you know

528
00:42:13,519 --> 00:42:14,689
how that works right you're looking go

529
00:42:14,690 --> 00:42:16,580
No

530
00:42:16,580 --> 00:42:20,930
uh-huh it and going with cynical i'm
sitting here that the dude is sitting

531
00:42:20,930 --> 00:42:26,690
next to me and gillum's I'm like hey
Gilliam look and I show it to him and in

532
00:42:26,690 --> 00:42:32,390
the Gilliam credit right he thought
better of the customer and no no way did

533
00:42:32,390 --> 00:42:39,049
that have allowed but the government or
the covers like what

534
00:42:40,070 --> 00:42:46,760
well basically do you saw ok but so you
want to look at data you want to look at

535
00:42:46,760 --> 00:42:51,620
session management right see how we had
like this session let's go isn't always

536
00:42:51,620 --> 00:42:58,730
strolling session listen I'm sorry um
and then finally don't forget

537
00:42:59,780 --> 00:43:04,580
was this the same way you would find any
other web application sprite i would

538
00:43:04,580 --> 00:43:08,240
love talking to people they're like uh I
found across the tripping plot in

539
00:43:08,240 --> 00:43:13,279
restful api oh no that can't be possible
arm because you know the browsers don't

540
00:43:13,280 --> 00:43:14,330
interact with it

541
00:43:14,330 --> 00:43:17,540
of course the browser's interact with it
right they just interact with it through

542
00:43:17,540 --> 00:43:19,880
JavaScript or something right

543
00:43:19,880 --> 00:43:26,150
buzz them the same way don't leave that
out out sorry

544
00:43:26,150 --> 00:43:34,460
alright next we're going to talk about
is content security policy so this will

545
00:43:34,460 --> 00:43:35,300
be quick

546
00:43:35,300 --> 00:43:38,390
basically if you ever been in that
situation where you're trying to get

547
00:43:38,390 --> 00:43:41,779
that alert pop-up box or whatever it is
you're trying to get to run on there to

548
00:43:41,780 --> 00:43:47,000
work and for some reason just doesn't
want to work I mean one thing you need

549
00:43:47,000 --> 00:43:51,350
to look for is whether or not that page
has a Content security policy in place

550
00:43:51,860 --> 00:44:02,270
basically it's a whole bunch of pitched
text that so basically content security

551
00:44:02,270 --> 00:44:07,580
policy is something that will be in a
meta tag or a header and it will in

552
00:44:07,580 --> 00:44:11,569
essence you can control a lot of things
but in essence the main thing that that

553
00:44:11,570 --> 00:44:16,190
it can do is it can prevent inline
scripting from actually working so that

554
00:44:16,190 --> 00:44:21,560
means all scripts all JavaScript has to
be loaded from from a file in order to

555
00:44:21,560 --> 00:44:26,240
work on that page so if you're trying to
inject cross-site across a inline

556
00:44:26,240 --> 00:44:29,910
cross-site scripting payload onto the
page it just it will get

557
00:44:29,910 --> 00:44:34,379
on the page it just won't run the
browser's mehsana know i have a Content

558
00:44:34,380 --> 00:44:39,270
security policy that says I can't do
that and just kind of moves on and I i

559
00:44:39,270 --> 00:44:44,339
really want to point out that CSP is
something that is not often implemented

560
00:44:44,339 --> 00:44:48,869
still and part of the problem with it is
it's just it's a it's a real pain to

561
00:44:48,869 --> 00:44:51,839
implement because it breaks a whole
bunch of things so so if a developer

562
00:44:51,839 --> 00:44:55,140
decide hey I don't have this yet it
looks really cool is going to protect my

563
00:44:55,140 --> 00:44:55,589
page

564
00:44:55,589 --> 00:44:58,500
they're right but if they try to
implement it they're going to end up

565
00:44:58,500 --> 00:45:03,089
breaking a lot of their existing stuff
because one of them actually have a lot

566
00:45:03,089 --> 00:45:06,869
of things like my javascript is just not
gonna work so that a lot of things they

567
00:45:06,869 --> 00:45:13,530
have to sell out there but is it is a
developing standard too . o is already

568
00:45:13,530 --> 00:45:17,039
out there and three is fairly active it
looks like they're making a lot of

569
00:45:17,039 --> 00:45:21,450
changes so something I'm keeping an eye
on the two places to look like i said

570
00:45:21,450 --> 00:45:25,740
there's a response header that will come
back with content that security dash

571
00:45:25,740 --> 00:45:37,049
policy or meta tag but now the last part
of the top samurai WTF shouldn't be

572
00:45:37,049 --> 00:45:44,819
clear that stands for web testing
framework on a check the samurai w has

573
00:45:44,819 --> 00:45:47,609
been out for awhile it actually
surprised me

574
00:45:47,609 --> 00:45:53,819
um I don't I'm not real good with
calendars and just recently I was

575
00:45:53,819 --> 00:45:56,670
talking to somebody and they were like
man you know that projects been around

576
00:45:56,670 --> 00:46:01,559
for at least like ever and I'm like no
man we released it like four years ago

577
00:46:01,559 --> 00:46:07,079
or something and it's like no longer
than that and and I let's meet somebody

578
00:46:07,079 --> 00:46:07,619
asked you that

579
00:46:07,619 --> 00:46:14,789
yeah it was eight years ago that we
really samurai WTF 0.9 or whatever and I

580
00:46:14,789 --> 00:46:20,910
i'm looking at some of the people in the
room that that helped put it right and

581
00:46:20,910 --> 00:46:25,529
I'm embarrassed by some of the stuff i
put out back then right

582
00:46:25,529 --> 00:46:29,579
working on it there's a team of us
working Gilman I work on it just

583
00:46:29,579 --> 00:46:33,539
inserted works on it we've got a number
of people helping us randomly and we're

584
00:46:33,539 --> 00:46:39,690
trying to make it better so for . o is a
switch slightly in what we're doing

585
00:46:40,440 --> 00:46:43,050
uh what we're doing is we're releasing a
vm

586
00:46:43,050 --> 00:46:46,050
and I want to be very clear because we
had somebody get really really angry

587
00:46:47,190 --> 00:46:53,130
um we use kills laughing could the first
time I thought the Canadian get rude but

588
00:46:53,130 --> 00:47:00,180
subtle we usually samurai as an iso and
you can boot it right from the iso and

589
00:47:00,180 --> 00:47:07,770
the way we were doing that broke some
time in 1785 or something and so we've

590
00:47:07,770 --> 00:47:13,020
been releasing it as a vm for a while
and this guy like where's the iso we

591
00:47:13,020 --> 00:47:14,040
don't have it anymore

592
00:47:14,040 --> 00:47:18,060
why not well because we don't right
we're lazy

593
00:47:18,060 --> 00:47:22,920
no it's not we just don't it's bigger
than I so can be and I haven't taken the

594
00:47:22,920 --> 00:47:25,560
time to figure out the new method of
building it

595
00:47:25,560 --> 00:47:31,560
ok and so we have a vm if anybody wants
to build a nice oh please

596
00:47:31,560 --> 00:47:35,549
we'll work with you would like that but
we just weren't doing it but the virtual

597
00:47:35,550 --> 00:47:39,240
machine and a couple of the big
differences that we're working on here

598
00:47:39,240 --> 00:47:49,649
to build this out new right excusing is
um we want to focus the application more

599
00:47:49,650 --> 00:47:54,180
now I already talked a little bit about
the the setup it is a virtual machine by

600
00:47:54,180 --> 00:47:58,950
the way it's built on vmware if you use
virtualbox first I'm sorry

601
00:47:58,950 --> 00:48:02,850
second it will work alright you just
have to set that up yourself

602
00:48:03,450 --> 00:48:06,750
the big thing that most people have
problem with his the memory size a lot

603
00:48:06,750 --> 00:48:10,290
of people will boot samurai in the vm
and for some reason they'll set the

604
00:48:10,290 --> 00:48:14,040
memory really really low and then not
understand why it doesn't run it needs

605
00:48:14,040 --> 00:48:18,450
at least two gigs of ram it is a
graphical desktop that you're using

606
00:48:18,450 --> 00:48:22,529
ok now big difference is the important
things we want to talk about one of the

607
00:48:22,530 --> 00:48:28,200
main differences in for auto mobile sec
is no longer a separate project so the

608
00:48:28,200 --> 00:48:32,189
people who know osmosis that was a DARPA
funded project where we built mobile

609
00:48:32,190 --> 00:48:35,460
security testing and training and stuff
like that and what we've been doing is

610
00:48:35,460 --> 00:48:39,360
we've been trying to maintain two
environments that have a lot of overlap

611
00:48:39,360 --> 00:48:44,190
so what we're doing with 40 is we are
combining the two of them and in that

612
00:48:44,190 --> 00:48:48,330
environment you'll be dealing with
mobile and web at the same time so

613
00:48:48,330 --> 00:48:51,330
that's a big difference right which is
kind of nice

614
00:48:51,330 --> 00:48:56,549
another difference is our main focus is
now training

615
00:48:56,549 --> 00:49:02,640
we what we have found in talking to
people is that most people are looking

616
00:49:02,640 --> 00:49:06,839
to learn how to test this stuff right
and so what we're doing is we're

617
00:49:06,839 --> 00:49:12,719
building in more of the vulnerable
targets more of the understanding and

618
00:49:12,719 --> 00:49:17,039
explanation of how to do testing because
while I'm a greedy capitalists and would

619
00:49:17,039 --> 00:49:20,519
like everybody to think hey if I want a
weapon desk all secure ideas

620
00:49:20,519 --> 00:49:27,118
the reality is we don't scale that well
we want you to be able to test your own

621
00:49:27,119 --> 00:49:30,809
stop as much as I like testing it for
you

622
00:49:30,809 --> 00:49:35,519
I am really tired of finding search
boxes that i can put it script alert

623
00:49:35,519 --> 00:49:42,359
excess in and get a pop-up yeah that's
lame i really want to do more exciting

624
00:49:42,359 --> 00:49:48,929
things of I teach you had a test better
i can do the logic and the the difficult

625
00:49:48,929 --> 00:49:51,420
testing right it more fun

626
00:49:51,420 --> 00:49:54,839
so we want to train people we want you
to be able to build skills and we want

627
00:49:54,839 --> 00:49:59,459
to be able to build skills in a safe way
because the other thing I'm tired of is

628
00:49:59,459 --> 00:50:07,558
idiots thinking it's fun to test my site
right and i love the reports you're

629
00:50:07,559 --> 00:50:12,359
vulnerable to sequel injection really my
static website is vulnerable to sequel

630
00:50:12,359 --> 00:50:13,469
injection

631
00:50:13,469 --> 00:50:17,130
yes I put a single quote in the URL and
i got an error message

632
00:50:17,939 --> 00:50:21,420
yes you did it because that file wasn't
found

633
00:50:22,079 --> 00:50:26,880
so we want to train them in an
environment they can write so it's all

634
00:50:26,880 --> 00:50:31,199
self-contained finally and this is
something Justin circle has been working

635
00:50:31,199 --> 00:50:34,920
on for years and we're finally getting
to a point where we may be able to

636
00:50:34,920 --> 00:50:41,339
release it soon and that is packages
instead of you downloading a full vm

637
00:50:41,339 --> 00:50:48,089
that's 87 bajillion petabytes right it's
an exaggeration you'll be able to take

638
00:50:48,089 --> 00:50:54,839
any 12 or debian system and basically
say apt-get install samurai WTF and it

639
00:50:54,839 --> 00:50:57,869
will pull the packages down right that
is the goal

640
00:50:58,789 --> 00:51:03,709
and we're working on it now here's the
bad news and I hate when people do this

641
00:51:03,709 --> 00:51:10,368
I was hoping to be able to say go
download it now available work wins

642
00:51:11,179 --> 00:51:17,059
sorry guys alright yet we are working on
getting it out we are hoping that it

643
00:51:17,059 --> 00:51:20,809
will be out any day now but that isn't
going to happen like tomorrow

644
00:51:21,319 --> 00:51:26,419
ok so i apologize i'm sorry we'll have a
Sunday

645
00:51:26,419 --> 00:51:29,569
no we won't have a chunk day we're
working on it will get it out there for

646
00:51:29,569 --> 00:51:35,630
you okay but samurai 40 is coming and
anything you guys want to see on it let

647
00:51:35,630 --> 00:51:38,630
us know okay so I'm sorry

648
00:51:39,979 --> 00:51:44,149
so at that point to say thank you very
much it is time for us to let you guys

649
00:51:44,150 --> 00:51:45,499
get back to the rest of your day

