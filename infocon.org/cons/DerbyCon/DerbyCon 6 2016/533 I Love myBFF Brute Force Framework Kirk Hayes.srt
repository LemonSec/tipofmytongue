1
00:00:00,000 --> 00:00:22,590
hey everybody i hope everybody's
enjoying the time Eric their beak on

2
00:00:22,590 --> 00:00:28,170
we're going to talk about my BFF today
Adam come on up and we talked about you

3
00:00:28,170 --> 00:00:36,780
not just getting my BFF is to lie wrote
probably last eight months I've spent

4
00:00:36,780 --> 00:00:41,820
more time with my BFF the tool that I
have with my actual BFF it's pretty sad

5
00:00:41,820 --> 00:00:48,719
but you know how things are right it's a
little bit about me i'm kirk on a

6
00:00:48,719 --> 00:00:52,770
security consultant for rapid seven i do
in penetration testing

7
00:00:53,399 --> 00:00:57,420
I like to write open source tools
contribute to open source projects one

8
00:00:57,420 --> 00:01:05,129
of those is back hack find it on our
loose dojo github say can script to

9
00:01:05,129 --> 00:01:10,740
perform application analysis for file
system analysis on android applications

10
00:01:10,740 --> 00:01:16,560
for non rooted devices that's keeping
their I got tired of my wife asking me

11
00:01:16,560 --> 00:01:21,540
to ruin her phone so I can give her own
lives and candy crush so i created this

12
00:01:21,540 --> 00:01:29,820
app to do that also blog on community
site and also check that out so we're

13
00:01:29,820 --> 00:01:35,070
going to talk about some various things
authentication methods tax against

14
00:01:35,070 --> 00:01:39,089
authentication we're going to look at
web application authentication because

15
00:01:39,090 --> 00:01:43,710
my BFF is a web application roof or
stool

16
00:01:43,710 --> 00:01:49,589
currently there are plans to add to it
other protocols and everything as well

17
00:01:49,590 --> 00:01:53,939
so that hopefully will be changing soon
we'll look at some of the different

18
00:01:53,939 --> 00:01:57,658
attack tools that are out there for web
applications and we'll talk about my BFF

19
00:01:57,659 --> 00:02:02,369
on and how it addresses some of the
issues with those other tools will do a

20
00:02:02,369 --> 00:02:05,399
demo and then we'll talk about
mitigation for these kinds of attacks

21
00:02:05,399 --> 00:02:09,538
didn't want to leave the blue team out
of this to that

22
00:02:10,710 --> 00:02:17,220
so biometrics is the first
authentication method you fingerprint

23
00:02:17,220 --> 00:02:20,550
your retinal scans voice recognition

24
00:02:21,150 --> 00:02:28,980
it's been around a long time but its
recently started getting a lot more use

25
00:02:28,980 --> 00:02:37,380
. regular people and that's basically as
shown in this picture here is the iphone

26
00:02:37,380 --> 00:02:43,769
coming out with touch ID on every phone
now has a fingerprint reader makes it

27
00:02:43,770 --> 00:02:48,330
nice and easy and it's going beyond just
log into your phone now there's apps

28
00:02:48,330 --> 00:02:51,330
that ever are using the biometrics as
well which is great

29
00:02:52,620 --> 00:02:58,290
there are flaws with it one of those is
somebody wants to get in your phone and

30
00:02:58,290 --> 00:03:02,549
they cut off your fingers you know
getting back

31
00:03:02,550 --> 00:03:06,510
there's other ways to himself a second
thing is a pin

32
00:03:06,510 --> 00:03:13,380
usually these pins are four digits or
more ATM is one common way also the

33
00:03:13,380 --> 00:03:16,019
phones and if you think about it

34
00:03:16,020 --> 00:03:21,120
multi-factor authentication uses an
right I you have your google

35
00:03:21,120 --> 00:03:26,610
authenticator your arse a token these
are refreshing every 60 seconds with a

36
00:03:26,610 --> 00:03:31,950
new pin for you to use and that's in my
opinion the best place for a pin to be

37
00:03:31,950 --> 00:03:38,280
used and lastly the most common user and
password we all use those to log in our

38
00:03:38,280 --> 00:03:44,130
computers we use them to log into
websites and all that so we're going to

39
00:03:44,130 --> 00:03:49,079
talk about usernames and passwords
because that's the most column so first

40
00:03:49,080 --> 00:03:53,310
thing we need is the usernames right so
how do we get usernames it's easy

41
00:03:54,120 --> 00:04:01,980
linkedin scrape for four targets their
use google searches using an even number

42
00:04:01,980 --> 00:04:08,850
of tools and more more and more I'm
seeing on company websites listing of

43
00:04:08,850 --> 00:04:11,130
all their users i don't know why that is

44
00:04:11,130 --> 00:04:15,720
companies seem to think it's not a big
risk it just makes my job easy

45
00:04:16,260 --> 00:04:22,230
so i'll go there scrape it and have a
full directory listing and if nothing

46
00:04:22,230 --> 00:04:23,690
else going

47
00:04:23,690 --> 00:04:29,690
timing attacks against owa or other
services using census data makes it nice

48
00:04:29,690 --> 00:04:30,110
and easy

49
00:04:30,110 --> 00:04:35,090
yeah those usernames so we we want the
passwords right so how do we get

50
00:04:35,090 --> 00:04:35,989
passwords

51
00:04:35,990 --> 00:04:41,120
well there's different techniques right
we have proof force uh from forces just

52
00:04:41,120 --> 00:04:46,040
as many users are as many passwords
against the username is possible that

53
00:04:46,040 --> 00:04:49,250
could be using a dictionary to use and
prayer perforce trying every possible

54
00:04:49,250 --> 00:04:56,390
combination we also the inverse of that
which is password spring that's using a

55
00:04:56,390 --> 00:05:05,599
lot of usernames but one password which
is how my BFF goes about it and do

56
00:05:05,600 --> 00:05:09,710
determining which one to use kind of
determines if it's not offline or an

57
00:05:09,710 --> 00:05:15,500
online attack online if you have a
service that you're that's looking up

58
00:05:15,500 --> 00:05:22,550
against the database then in real time
then that's an online service and a web

59
00:05:22,550 --> 00:05:28,070
application is one of those things those
active directory anything else that I'm

60
00:05:28,070 --> 00:05:33,320
most of these have a account lockout
policy so we want to be careful how

61
00:05:33,320 --> 00:05:36,710
quickly we attack so we don't want to
use brute force we want to use password

62
00:05:36,710 --> 00:05:40,820
spring we want to limit that to whatever
the lockout policy is to prevent

63
00:05:40,820 --> 00:05:46,490
lockouts because we want access notnot
service for offline

64
00:05:47,150 --> 00:05:52,940
we need something to to guess again
stand and that's a hash right so the

65
00:05:52,940 --> 00:05:58,580
mathematical representation of that
password and once we have that then we

66
00:05:58,580 --> 00:06:02,450
can use brute force against that all day
long and there's no account lockout

67
00:06:02,450 --> 00:06:09,409
there so moving on to web application
log informs their very basic very simple

68
00:06:10,250 --> 00:06:15,320
there's three primary places here is the
username field the password field and

69
00:06:15,320 --> 00:06:21,230
submit button now those username and
password fields could be named anything

70
00:06:21,230 --> 00:06:27,350
but it doesn't have to be using the
password that can all change the submit

71
00:06:27,350 --> 00:06:31,220
button to change what's called but they
all basically the same thing

72
00:06:31,729 --> 00:06:36,380
somewhat application forms have hidden
fields so sometimes we have to find

73
00:06:36,380 --> 00:06:37,440
those as well

74
00:06:37,440 --> 00:06:43,530
and we have different tools for guessing
against these web applications burp

75
00:06:43,530 --> 00:06:50,849
suite one of my favorite tools to use
you get to see that traffic proxy

76
00:06:50,850 --> 00:06:55,230
through and you can decide okay this is
the username field is the password field

77
00:06:55,230 --> 00:07:00,120
I want to run into attack and then look
at that the results afterwards there are

78
00:07:00,120 --> 00:07:04,890
one-off scripts for specific
applications so some that are used are

79
00:07:04,890 --> 00:07:11,250
for citrix or others just to attempt
against that but it's very specific to

80
00:07:11,250 --> 00:07:16,050
that application only and I was
especially with citrix it seems like

81
00:07:16,050 --> 00:07:19,800
every couple years they change how
everything is written and you have to

82
00:07:19,800 --> 00:07:27,330
have a new script so on one script you
have for the citrix built in 2010 isn't

83
00:07:27,330 --> 00:07:32,969
going to work in 2016 can be a pain and
lastly there's my BFF which I wrote so

84
00:07:32,970 --> 00:07:38,640
what is my BFF it's brute-force
framework its modular it's intelligent

85
00:07:38,640 --> 00:07:45,960
and it's goes beyond just regular
brute-forcing so we have a couple of

86
00:07:45,960 --> 00:07:50,400
different modules right now and it's
easily extensible you just add new

87
00:07:50,400 --> 00:07:56,520
modules and I and it just works on the
intelligence you just pointed i do URL

88
00:07:56,520 --> 00:08:01,560
given a username and a password or using
file and password file and it goes to

89
00:08:01,560 --> 00:08:07,080
town figures out what application it is
it does its guessing response if it's

90
00:08:07,080 --> 00:08:12,990
valid or not and I got kind of tired of
just using scripts or anything that just

91
00:08:12,990 --> 00:08:17,850
tells me if it's valid or not and i
wanted to go a little further and so

92
00:08:17,850 --> 00:08:25,200
does that and I'll get into what that
means in a little bit so each module is

93
00:08:25,200 --> 00:08:28,530
going to have a few different parts
first thing is a fingerprint I need to

94
00:08:28,530 --> 00:08:37,049
know how to know what that which module
to run so i'll look at the the the

95
00:08:37,049 --> 00:08:42,390
results from the initial request look
for certain string look for cookie value

96
00:08:42,390 --> 00:08:45,750
something that's going to differentiate
that application from another

97
00:08:47,300 --> 00:08:50,209
next I'm going to build my payload how
do we authenticate that's the username

98
00:08:50,209 --> 00:08:51,920
password

99
00:08:51,920 --> 00:08:56,510
we're gonna sometimes you'll see Jay
underscore username sometimes see

100
00:08:56,510 --> 00:09:01,519
username sometimes see user whatever
those the web developer decided to

101
00:09:01,519 --> 00:09:05,029
change things are going to build that
payload so it we can authenticate

102
00:09:05,029 --> 00:09:11,149
properly next thing we're going to do is
is actually tried to connect and this is

103
00:09:11,149 --> 00:09:16,040
where every script out there this is
what they do it you get tells you if

104
00:09:16,040 --> 00:09:19,519
it's valid or invalid right

105
00:09:19,519 --> 00:09:26,750
and lastly with my BFF we want to do
something cool and so what does that

106
00:09:26,750 --> 00:09:27,709
mean

107
00:09:27,709 --> 00:09:31,040
well each module is going to do
something different

108
00:09:31,040 --> 00:09:37,310
based on what application that is so
some of these are post authentication

109
00:09:37,310 --> 00:09:42,979
some are pre authentication and to kind
of describe this the reason I created my

110
00:09:42,980 --> 00:09:49,610
BFF I was on the test back in February
an external test gathered usernames was

111
00:09:49,610 --> 00:09:54,770
all set to password guests use my
favorite password guessing a password

112
00:09:54,770 --> 00:09:59,600
which was the season year right had 15
accounts out of the way the ones that i

113
00:09:59,600 --> 00:10:04,610
had that you were using that awesome
found a citrix login portal i love

114
00:10:04,610 --> 00:10:10,040
citrix because I can usually escape it
pretty easily so log in with the first

115
00:10:10,040 --> 00:10:14,000
user and password combination and it
tells me that there's no applications

116
00:10:14,000 --> 00:10:20,690
available to the user that sucks so try
the second one same message the third

117
00:10:20,690 --> 00:10:26,240
one fourth 1 in the fifth one this 61 by
this time saying this is ridiculous

118
00:10:26,240 --> 00:10:31,820
there's got to be an easier way so I
scripted out and ran through all 15 and

119
00:10:31,820 --> 00:10:38,270
all 15 had no applications so i decided
to rerun it with my second-favorite

120
00:10:38,270 --> 00:10:46,730
password to use its the company name
1234 or some sort of variation of that

121
00:10:46,730 --> 00:10:52,010
and getting one and it it told me that
there were some applications of LT the

122
00:10:52,010 --> 00:10:56,689
user great log into citrix escape the
environment get internal access

123
00:10:56,690 --> 00:10:59,290
compromise the entire domain

124
00:10:59,290 --> 00:11:05,079
game over so I thought why can't we do
this with other applications why can't

125
00:11:05,079 --> 00:11:10,810
we go beyond just a valid going to get
more information so i started creating

126
00:11:10,810 --> 00:11:16,599
modules for outlook web access in office
365 we're going to parse the emails are

127
00:11:16,600 --> 00:11:19,779
going to look for sensitive information
in those we're also going to dump out

128
00:11:19,779 --> 00:11:25,810
all the contacts so we can use those and
other text for citrix like I said we

129
00:11:25,810 --> 00:11:29,199
listed we now lists the available apps
instead of just telling you that there

130
00:11:29,199 --> 00:11:33,430
are some which is nice so i can
determine if i want to go after the user

131
00:11:33,430 --> 00:11:38,079
that has internet explorer or if I want
to go after the one with the Windows 7

132
00:11:38,079 --> 00:11:44,170
desktop for juniper portals we actually
do something pretty authentication

133
00:11:44,170 --> 00:11:48,160
that's the multi-factor bypass so by
changing the URL

134
00:11:48,160 --> 00:11:53,079
sometimes you can find one that doesn't
require multi-factor and that's great so

135
00:11:53,079 --> 00:11:56,949
i will do that will try to find that one
will do password guessing against there

136
00:11:56,949 --> 00:12:04,930
and so each one's different outlet so go
into a quick demo of look at two of the

137
00:12:04,930 --> 00:12:12,670
modules and how they work you can see
the output and how that is so the first

138
00:12:12,670 --> 00:12:20,319
one here it's very simple you just my
BFF you're gonna pass on the hosts of

139
00:12:20,319 --> 00:12:25,930
dash host the host is going to include
the protocol which is in this case https

140
00:12:25,930 --> 00:12:31,599
you're going to either pass the hostname
or IP address about if it requires a

141
00:12:31,600 --> 00:12:34,240
separate or if it's running on a
different port you could pass that in as

142
00:12:34,240 --> 00:12:34,899
well

143
00:12:34,899 --> 00:12:40,480
the capital use for username file if you
wanted single user name is the lowercase

144
00:12:40,480 --> 00:12:46,060
u lowercase P is for password the
capital p will be for a password file

145
00:12:46,060 --> 00:12:50,920
now in this case the fingerprinting
fails because it's a small business

146
00:12:50,920 --> 00:12:55,810
server on the small business server
default web page actually goes to a

147
00:12:55,810 --> 00:13:00,670
stepper page than what i want which is
the owa so if we run it again

148
00:13:01,470 --> 00:13:07,800
but this time we're going to pass in the
the dash g host so for virtual hosting

149
00:13:07,800 --> 00:13:16,589
and owa and we run it now we see it
finds that it's in office 365 or waters

150
00:13:16,590 --> 00:13:21,270
with X bar political a server when we
start trying some of the password

151
00:13:21,270 --> 00:13:26,699
guessing find that user three is is
successful with my favorite password

152
00:13:26,700 --> 00:13:32,790
spring 2016 in this case we look for the
sensitive emails and we find that there

153
00:13:32,790 --> 00:13:40,050
are some about password helps and we
also notice that da3 here was also using

154
00:13:40,050 --> 00:13:49,469
spring 2016 which is nice for us now we
have been added and will clear the

155
00:13:49,470 --> 00:13:55,140
screen here and i'll show you it also
does not save off those contacts into

156
00:13:55,140 --> 00:14:00,689
the temp directory contacts and then the
username and so now you can use those in

157
00:14:00,690 --> 00:14:09,960
other attacks if you want the the second
run i'm going to do is this is for an

158
00:14:09,960 --> 00:14:15,120
application called HP sitescope say
application that manages other network

159
00:14:15,120 --> 00:14:21,030
devices and systems through WebEx of
whether that now last year i found a

160
00:14:21,030 --> 00:14:27,900
zero-day and that that gave me command
command injection and one of the tools

161
00:14:27,900 --> 00:14:34,439
and created a Metasploit module and
everything that as well so what we'll do

162
00:14:34,440 --> 00:14:40,860
is here is it was running on port 8080
so we'll type in the same thing the host

163
00:14:40,860 --> 00:14:47,040
will give it the port 8080 here we'll
just give it a single user name and a

164
00:14:47,040 --> 00:14:49,949
single password 22 guests here

165
00:14:49,950 --> 00:14:57,060
by default the application came with no
authentication which was nice when i was

166
00:14:57,060 --> 00:15:04,829
on the test and found it and once we run
this and it finds that it will actually

167
00:15:04,830 --> 00:15:09,990
build a RC file format exploit no no run
that module

168
00:15:10,800 --> 00:15:22,589
load that up and runs the exploit and
now we have a mature procession we run

169
00:15:22,589 --> 00:15:31,320
get uid will see that smiling a system
so so that's the basic interface we have

170
00:15:31,320 --> 00:15:37,050
multiple modules you can check all those
out the development is open-source done

171
00:15:37,050 --> 00:15:43,380
rapid7 get hub page so if you'd like to
contribute a be great plan to add more

172
00:15:43,380 --> 00:15:47,610
modules to it I'm going beyond just the
web applications I'd like to get into

173
00:15:47,610 --> 00:15:51,570
other protocols i actually have some of
those right now and those will be at its

174
00:15:51,570 --> 00:15:56,760
later i'm working on simplifying some of
the module creation making it a little

175
00:15:56,760 --> 00:16:01,829
more intelligent things like that on and
whatever other ideas people may have

176
00:16:01,829 --> 00:16:05,160
that you love to hear those rules to
check that out

177
00:16:05,910 --> 00:16:11,610
so when there's password attacks how do
we mitigate that first thing we need to

178
00:16:11,610 --> 00:16:16,440
detect it we need to know if somebody's
trying and that could be against a

179
00:16:16,440 --> 00:16:20,550
single account it could be but against a
slew of accounts so you want to be able

180
00:16:20,550 --> 00:16:26,279
to monitor for that so you can take
action next thing you want multi-factor

181
00:16:26,279 --> 00:16:32,040
authentication is going to make it much
harder just don't i use the gym for a

182
00:16:32,040 --> 00:16:36,959
bypass and and have a kind of a backdoor
neck because otherwise it will find it

183
00:16:36,959 --> 00:16:45,810
and lastly strong pass phrases don't use
spring 2016 now it's also don't use all

184
00:16:45,810 --> 00:16:52,589
2016 how you something longer more
complex more difficult some of the

185
00:16:52,589 --> 00:16:58,380
things that are being added to my BFF
that I don't have a slide slide for but

186
00:16:58,380 --> 00:17:03,029
we're doing proxy support so you can
actually write your attacks through

187
00:17:03,029 --> 00:17:06,750
multiple proxies or single process so
you can hide where you're coming from

188
00:17:08,130 --> 00:17:13,620
we have a demo mode or i call it dummy
mode which will just do password

189
00:17:13,619 --> 00:17:16,619
guessing it won't do that extra
something cool

190
00:17:17,520 --> 00:17:25,829
if you don't need that we have a timing
changes so when you do a password file

191
00:17:25,829 --> 00:17:31,980
we go through all the users with the
first password that we go to the second

192
00:17:31,980 --> 00:17:36,210
password and then the third so it's more
of a spray the timing is actually going

193
00:17:36,210 --> 00:17:40,800
to after the first ones done wait a
certain amount of time and help you

194
00:17:40,800 --> 00:17:45,210
avoid that account lockout so if you
know that account lockout you'll be able

195
00:17:45,210 --> 00:17:51,120
to kind of tell her that and there's
some other stuff coming out too so well

196
00:17:51,120 --> 00:17:53,850
you guys will check that out

197
00:17:53,850 --> 00:17:59,280
this is my contact information get home
where you can get it if anybody has any

198
00:17:59,280 --> 00:18:06,000
questions you have to take those no
thank you

