1
00:00:01,120 --> 00:00:13,299
awesome thank you very much for coming
folks

2
00:00:13,839 --> 00:00:19,210
I know we're competing with me how our
tickets paid for talk so I appreciate

3
00:00:19,210 --> 00:00:22,270
you you you are skipping that one to see
this one

4
00:00:23,320 --> 00:00:28,810
my name is Philip going to talk a bit
about dns in IR and how you collect that

5
00:00:28,810 --> 00:00:32,710
you analyze it and lastly how you can
use it to actually respond to events

6
00:00:33,429 --> 00:00:38,469
first the the obligatory my slide I
believe this is required for speaker

7
00:00:38,469 --> 00:00:44,019
contracts so I i leave the skirt human
coinbase your happy customers in the

8
00:00:44,019 --> 00:00:47,260
crowd my best customers about that

9
00:00:47,800 --> 00:00:51,699
so those of you that are familiar . this
is a digital currency company we store

10
00:00:51,699 --> 00:00:56,440
about half a billion dollars worth of
bitcoin ether and litecoin which is a

11
00:00:56,440 --> 00:01:01,479
really fun challenge i'd much rather
scary stuff i recently became determined

12
00:01:01,479 --> 00:01:04,720
that i probably had to be on Twitter and
security person I think it's required

13
00:01:05,800 --> 00:01:10,240
I'm gonna hold back 10 15 minutes at the
end of the talk to your questions

14
00:01:10,240 --> 00:01:12,280
comments anything like that so if you
could hold it till then that'd be

15
00:01:12,280 --> 00:01:13,060
awesome

16
00:01:13,060 --> 00:01:17,320
and with that we'll jump into this so
why are you here

17
00:01:17,860 --> 00:01:22,840
I guess is the first question we should
we should ask i think then maybe a

18
00:01:22,840 --> 00:01:26,320
little bit more metal I'm out up here
with something out of my laptop talking

19
00:01:26,320 --> 00:01:31,600
about talking to folks the coordinate a
piece of advice I got when I was

20
00:01:31,600 --> 00:01:35,020
building this talk a lot is if you want
to talk have something to say then say

21
00:01:35,020 --> 00:01:35,649
it

22
00:01:35,650 --> 00:01:38,800
so the thing i want to say is the $YEAR
s logging is super important that data

23
00:01:38,800 --> 00:01:42,190
is absolutely critical to a great
instant response it's easier and cheaper

24
00:01:42,190 --> 00:01:49,210
than you think it is and it can be
pretty actually entertaining the couple

25
00:01:49,210 --> 00:01:52,210
of important notes like first of all I'm
talking about recursive DNS you're not

26
00:01:52,210 --> 00:01:56,410
authoritative yes this is resolvers you
have in your environment authority of

27
00:01:56,410 --> 00:02:00,460
dns monitoring is a totally different
topic that you should also do I for

28
00:02:00,460 --> 00:02:03,940
kicks sometime just check out index
domain responses from authoritative name

29
00:02:03,940 --> 00:02:06,970
servers it's it's pretty cool to see the
room forces

30
00:02:06,970 --> 00:02:10,330
oops

31
00:02:10,330 --> 00:02:15,820
so any time you thinking about adding
new data source to your investigated for

32
00:02:15,820 --> 00:02:18,549
the platform I think you should ask one
question right

33
00:02:18,550 --> 00:02:21,910
what is this let me do that I couldn't
do before and I think that boils down to

34
00:02:21,910 --> 00:02:26,170
us like maybe three sub-questions right
what is this adam investigation

35
00:02:26,980 --> 00:02:31,269
what how can I pivot house in rich and
what can i detect with this data that i

36
00:02:31,270 --> 00:02:34,330
couldn't detect before I added this
otherwise you end up with data sprawl

37
00:02:34,330 --> 00:02:38,800
and no one is happy in that environment
and I think the US has actually pretty

38
00:02:38,800 --> 00:02:42,880
compelling advance their answers sort of
across the board for those who don't

39
00:02:42,880 --> 00:02:47,200
have great proxy logs actually really
interesting window into your web traffic

40
00:02:47,200 --> 00:02:52,959
without having to intercept Josh
electronic for those of you with proxy

41
00:02:52,959 --> 00:02:55,450
lodge with a large percentage of
knowledge to be traffic that's

42
00:02:55,450 --> 00:03:00,519
transiting your border the s and a net
flow really enough for obviously . logs

43
00:03:00,520 --> 00:03:03,340
but I really your only two network-based
windows in it and what that traffic

44
00:03:03,340 --> 00:03:09,190
actually is it is the essentially only
method for discovering the nice tumbling

45
00:03:09,190 --> 00:03:10,270
on the network

46
00:03:10,270 --> 00:03:14,019
nothing else is really actually going to
work there and with some supporting data

47
00:03:14,019 --> 00:03:18,100
mostly some who is data but potentially
something blacklist integrations it

48
00:03:18,100 --> 00:03:21,250
actually puts you into a really
interesting place for alerting on this

49
00:03:21,250 --> 00:03:26,200
data in a very productive way one where
I'm at the end I'm going to go through a

50
00:03:26,200 --> 00:03:30,160
bunch of investigative like how you can
analyze this data some lead you should

51
00:03:30,160 --> 00:03:34,630
you should pursue but one really
interesting one that I pursued with with

52
00:03:34,630 --> 00:03:37,900
great effect is take a look at all the
domains younger than 30 days that you're

53
00:03:37,900 --> 00:03:42,700
resulting by large legitimate sites have
probably existed for more than 30 days

54
00:03:42,700 --> 00:03:47,200
in terms of like the registration date
anything younger than 30 days i attended

55
00:03:47,200 --> 00:03:53,079
attend a great list right take a look
with skeptical eye ESS have some down

56
00:03:53,080 --> 00:03:55,720
sides to every data source does right
there they're always negative or the

57
00:03:55,720 --> 00:04:00,760
negatives about dns is that it is it is
very chatty so why was I was doing

58
00:04:00,760 --> 00:04:05,350
research for this decided hey let me let
me just pick a random new site related

59
00:04:05,350 --> 00:04:10,720
page see what happens i generated almost
a hundred dns queries for reloading a

60
00:04:10,720 --> 00:04:16,060
single website the club that the
trackers the affiliated sites that it

61
00:04:16,060 --> 00:04:18,579
was insane and had expected maybe 30

62
00:04:18,579 --> 00:04:24,669
20 tops so you combine that would across
all your users you generate a lot of

63
00:04:24,669 --> 00:04:28,330
data very very quickly to it

64
00:04:28,330 --> 00:04:31,300
Dina sort of two different in my
experience investigated paths or was the

65
00:04:31,300 --> 00:04:35,530
quick question answer what is this
resolved to what-what hosts have

66
00:04:35,530 --> 00:04:39,099
resolved this IP whois query this one of
the clients like the quick question

67
00:04:39,099 --> 00:04:42,430
answer stuff but we're like
elasticsearch great at and the other is

68
00:04:42,430 --> 00:04:48,460
a much more sort of batch bulk
processing like what are the average

69
00:04:48,460 --> 00:04:53,409
interview measurements over my domain
names things like that that really ask

70
00:04:53,409 --> 00:04:57,219
for two different backends right it can
be a process that complicated processing

71
00:04:57,219 --> 00:05:02,050
infrastructure i'm going to talk a lot
of a little bit about that before we get

72
00:05:02,050 --> 00:05:04,900
into that I want to do a quick quick
science experiment social science

73
00:05:04,900 --> 00:05:09,609
department that is so I saw the stat
Francisco it sits on their only sixty

74
00:05:09,610 --> 00:05:12,610
percent companies don't monitor dns that
sort of blows my mind

75
00:05:12,610 --> 00:05:19,569
so all of you guys who do blue team
stuff strains awesome now of those that

76
00:05:19,569 --> 00:05:20,710
keep up keep up

77
00:05:20,710 --> 00:05:28,479
come on up so those of you who don't
monitor dns put your hands down this

78
00:05:28,479 --> 00:05:31,659
disproves that no actually reported
probably pretty close to disclose

79
00:05:31,659 --> 00:05:34,750
numbers i think about half of you put
your hands down the rumors about 300

80
00:05:34,750 --> 00:05:41,529
people there probably don't know hundred
and sixty people in here so yeah but

81
00:05:41,529 --> 00:05:44,050
about half of you don't want to announce
which is which is pretty close

82
00:05:44,050 --> 00:05:45,580
surprisingly close actually

83
00:05:45,580 --> 00:05:49,029
cool

84
00:05:49,029 --> 00:05:54,460
hell yes so I'm gonna assume you're all
convinced and want nothing more than to

85
00:05:54,460 --> 00:05:56,979
date than to learn how to monitor dns
environment

86
00:05:56,979 --> 00:06:04,270
otherwise we can all go get beers i got
so that's an option there so first a

87
00:06:04,270 --> 00:06:09,099
quick note about names we tend to
complete these two terms and if you talk

88
00:06:09,099 --> 00:06:13,150
to a dns guy he will quickly correct you
as I was corrected when I started

89
00:06:13,150 --> 00:06:17,258
getting into this passive DNS is not
what you think it is almost certainly

90
00:06:17,259 --> 00:06:23,889
pasadena us refers to monitoring between
resolvers and authoritative service that

91
00:06:23,889 --> 00:06:28,300
it is specifically it mrs. cache data
and mrs. clients that client ip's its

92
00:06:28,300 --> 00:06:29,330
point is to is

93
00:06:29,330 --> 00:06:32,840
rebuild the structure of the global
destination offer query this is what

94
00:06:32,840 --> 00:06:37,128
like four sites DNA database cast that
that's what that's trying to do what

95
00:06:37,129 --> 00:06:42,830
we're gonna talk about is called Venus
and watering right it is it is the

96
00:06:42,830 --> 00:06:46,490
practice of logging every single dms
thing that happens in a given

97
00:06:46,490 --> 00:06:50,719
environment this is what i need what I'm
doing instant response is this is I want

98
00:06:50,719 --> 00:06:54,110
everything whether it's cached failed
succeeded

99
00:06:54,110 --> 00:06:57,439
no matter who where it went and how it
turned out I want to know about it and I

100
00:06:57,439 --> 00:06:58,490
want to know about it

101
00:06:58,490 --> 00:07:06,680
timestamp and and with the client IP in
question . out so I collection i have

102
00:07:06,680 --> 00:07:10,610
three critical couple choices to make a
should actually preface here i'm

103
00:07:10,610 --> 00:07:14,120
assuming we all know what dns is i'm
assuming we all have a basic

104
00:07:14,120 --> 00:07:17,719
understanding of how to de-escalate
flows right resolvers forward or

105
00:07:17,719 --> 00:07:21,500
authoritative vs recursive resolvers
that kind of things going to assume all

106
00:07:21,500 --> 00:07:26,960
of that and sorry if you don't have
three critical choices to make

107
00:07:27,560 --> 00:07:32,689
what how do you have you collect the
data what like what method by what tools

108
00:07:32,689 --> 00:07:36,440
where you collect it and lastly how do
you store how you query it we're going

109
00:07:36,440 --> 00:07:41,300
to walk through a little bit about that
so collection you have sort of four

110
00:07:41,300 --> 00:07:45,949
basic options right you can collect at
the border the pros you see everything

111
00:07:45,949 --> 00:07:47,960
that happens in your network right
whether it goes to your recursive

112
00:07:47,960 --> 00:07:52,400
resolver not you see it all the downside
is you're not going to see true blind

113
00:07:52,400 --> 00:07:55,698
eye peas if if you have internal servers
which can really hamper investigation if

114
00:07:55,699 --> 00:08:00,529
you can actually walk away back to that
client quickly you're looking to collect

115
00:08:00,529 --> 00:08:03,680
internal requests so anything if you
have internally hosted domains you can

116
00:08:03,680 --> 00:08:08,180
see those and lastly you can see cached
requests or cat requests internal server

117
00:08:08,180 --> 00:08:11,659
serves on a cache which can actually be
a huge problem especially if you have

118
00:08:11,659 --> 00:08:20,539
multiple clients clearing the same
motions domain to the resolver so this

119
00:08:20,539 --> 00:08:23,150
is actually pretty cool you see you
should apply to see actual client at

120
00:08:23,150 --> 00:08:26,479
least you can put the walk that back
anything response use the internal

121
00:08:26,479 --> 00:08:29,508
requests internally assuming those are
going but going through your drawers

122
00:08:29,509 --> 00:08:33,680
average you see all that stuff the
problem you're going to miss anything

123
00:08:33,679 --> 00:08:38,478
that skips your car resolvers write this
this happens both benignly a lot of IOT

124
00:08:38,479 --> 00:08:40,790
devices for instance hardcode dns
servers

125
00:08:40,789 --> 00:08:45,770
Nelson's maliciously a lot of malware
hardcode dns servers either too . the

126
00:08:45,770 --> 00:08:50,569
user to a bad dns resolver or because
they're trying to skip your monitoring

127
00:08:50,570 --> 00:08:55,370
third you can you can try to collect
rent points

128
00:08:56,120 --> 00:08:58,700
this turned out to be really really
tough for all the same reasons that

129
00:08:58,700 --> 00:09:02,300
doing anything else on it . stuff their
coverage problems their deployment

130
00:09:02,300 --> 00:09:08,839
problems are perfect back problems their
data transport problems it the positive

131
00:09:08,840 --> 00:09:12,620
course is it hurting you can get the
coverage you see everything and you get

132
00:09:12,620 --> 00:09:16,100
all the time not just when you use one
of these systems are on your network

133
00:09:16,100 --> 00:09:20,690
so what you should interaction do
everything is is is the right answer

134
00:09:20,690 --> 00:09:24,260
here as it makes sense for your
environment you're gonna get you're

135
00:09:24,260 --> 00:09:25,100
gonna say that a lot

136
00:09:25,100 --> 00:09:28,640
dns is one of those things where we all
implemented differently depending on

137
00:09:28,640 --> 00:09:32,780
this part the size distributed nature
the number of users things like that so

138
00:09:32,780 --> 00:09:39,380
you should and this is what i recommend
then what i do i recommend you either

139
00:09:39,380 --> 00:09:44,780
block dsi much a border or you monitor
dns manager border for things that are

140
00:09:44,780 --> 00:09:48,260
skipping your home's offers and get that
fixed you monitor primarily it turns

141
00:09:48,260 --> 00:09:52,580
over this skips the headache of trying
to deploy an agent all your endpoints

142
00:09:52,580 --> 00:09:57,530
there's there's a of course the corner
case years if you already have an . like

143
00:09:57,530 --> 00:09:58,730
carbon black or something like that

144
00:09:58,730 --> 00:10:03,080
the collection as requests that means be
lazy use it like I'm a huge advocate of

145
00:10:03,080 --> 00:10:10,910
laziness in deployment and then where it
makes sense you can . . so enigmatic

146
00:10:10,910 --> 00:10:16,310
environment i have a very very good
production server deployment like i

147
00:10:16,310 --> 00:10:20,300
deploy it's also in eight of us right
where I don't have a traditional network

148
00:10:20,300 --> 00:10:23,810
border i don't have resolvers are under
my control so I deployed to all my

149
00:10:23,810 --> 00:10:27,469
endpoints in broad i deployed to my
internal result internal resolver my

150
00:10:27,470 --> 00:10:32,060
border on corporate and I base and I get
essentially hundred coverage with the

151
00:10:32,060 --> 00:10:35,060
reasonable effort

152
00:10:37,440 --> 00:10:45,390
now that's that's where we deploy how do
we collect their three four options you

153
00:10:45,390 --> 00:10:49,290
can go to attempt to use query resolve
logging or result . logging which is

154
00:10:49,290 --> 00:10:55,589
going to import for you almost
guaranteed query resolver are the result

155
00:10:55,590 --> 00:11:02,400
. logging is actually a pretty poor
state that the only resolve that does

156
00:11:02,400 --> 00:11:07,350
question-answer logging that i'm aware
of is is Microsoft DNS anything before

157
00:11:07,350 --> 00:11:10,260
2012 have turned that on your gonna have
a really bad time

158
00:11:10,260 --> 00:11:14,069
performance-wise it's just going to eat
your each year in $YEAR . alive or eat

159
00:11:14,070 --> 00:11:18,120
your servers alive and and even now
after 12 you should you should some

160
00:11:18,120 --> 00:11:22,590
point just for shits and giggles turn
this all microsoft server and look at

161
00:11:22,590 --> 00:11:25,320
the log format it's it's amazing

162
00:11:25,320 --> 00:11:32,310
amazingly bad to be clear but it is like
you have to design a poor log format the

163
00:11:32,310 --> 00:11:37,050
only thing I know is worse is linux
oddity that is the only thing i've seen

164
00:11:37,050 --> 00:11:40,079
that i would call worse than this

165
00:11:40,080 --> 00:11:44,850
a couple other things to mention there
is a diaz logging protocol that's based

166
00:11:44,850 --> 00:11:48,990
on parole officers called the next appt
it's only exists right now and not dns

167
00:11:48,990 --> 00:11:54,900
and unbound but they say they want to
spread it further further around it

168
00:11:54,900 --> 00:11:59,100
offers obviously protobuf starts with a
very fish on the wire very very quick

169
00:11:59,100 --> 00:12:05,880
transmission so hopefully this this
moves into resolvers globally I really

170
00:12:05,880 --> 00:12:09,600
really hope it does but so notably right
nothing else launch the answer which is

171
00:12:09,600 --> 00:12:13,500
sort of an important part of our trying
to get here which is why I basically say

172
00:12:13,500 --> 00:12:16,440
for resolvers gotta lock exceptions

173
00:12:16,440 --> 00:12:20,700
there's commercial products that do this
Infoblox does a good job of logging dns

174
00:12:20,700 --> 00:12:27,510
stuff I've heard power dns can do this
but i have not used those so I can't

175
00:12:27,510 --> 00:12:34,810
specifically say they're good about your
second option is ricotta and bro both do

176
00:12:34,810 --> 00:12:39,010
protocol or desperate call
interpretation and do log . responses

177
00:12:39,010 --> 00:12:44,319
which is great if you're at the point
right so so i would use this if you have

178
00:12:44,320 --> 00:12:48,670
something like that deployed or or can
simply use this on your board i only

179
00:12:48,670 --> 00:12:52,660
know of one organization i've talked to
that has enough enough IDs placement

180
00:12:52,660 --> 00:12:56,110
flexibility in like software caps to
actually tap in front of all of the

181
00:12:56,110 --> 00:13:00,460
recursive resolvers internally they're
just crazy for the rest of us

182
00:13:00,460 --> 00:13:03,640
this is a great border option you
probably already collecting this data

183
00:13:03,640 --> 00:13:07,900
you can probably hook it into existing
transport mechanisms it's all reasonably

184
00:13:07,900 --> 00:13:13,779
easily possible to like again laziness
box one if if you're gonna add this and

185
00:13:13,779 --> 00:13:17,439
you you don't already have i but i would
actually encourage you in my personal

186
00:13:17,440 --> 00:13:18,640
preference to use bro

187
00:13:18,640 --> 00:13:22,810
like grow because it does not just us
there's a lot of protocols very very

188
00:13:22,810 --> 00:13:30,250
very well it's a very effective
intrusion detection mechanism so the the

189
00:13:30,250 --> 00:13:34,360
last option we should talk about is
standalone dns logging this is graphic

190
00:13:34,360 --> 00:13:40,870
thing that I've built but they're really
two options here so there's a thing

191
00:13:40,870 --> 00:13:46,690
called passive DNS was written by a dude
named i would put your fight renounce it

192
00:13:46,690 --> 00:13:55,660
he's Eastern European of some sort i'm
not gonna try it said ok back to try it

193
00:13:55,660 --> 00:14:03,100
so it's really good this is actually
what got me into the intravenous

194
00:14:03,100 --> 00:14:06,640
monitoring to begin with this is this is
sort of my my gateway drug into

195
00:14:06,640 --> 00:14:11,949
monitoring dns environment is passive
DNS downsides and the reason i built go

196
00:14:11,950 --> 00:14:16,540
passive DNS is it was written see it
does all of its own packet processing

197
00:14:16,540 --> 00:14:21,760
made up to see it had at the time i was
using this is this is developed somewhat

198
00:14:21,760 --> 00:14:25,600
since then it had very limited output
options so it was like walking into a

199
00:14:25,600 --> 00:14:29,860
database or flat file it was logging and
pipe delimited text which is not the end

200
00:14:29,860 --> 00:14:36,550
of the world but neither is it like a
song for instance and it was in C so you

201
00:14:36,550 --> 00:14:41,050
have the standard dependency management
issues when you're deploying it i wrote

202
00:14:41,050 --> 00:14:46,000
go passive DNS sort of effort for a
couple reasons number one I really

203
00:14:46,000 --> 00:14:47,379
dislike parsing

204
00:14:47,379 --> 00:14:54,009
network traffic in non environments so
when they go for instance right memory

205
00:14:54,009 --> 00:14:57,429
managed which means a whole class of
memory corruption vulnerability is just

206
00:14:57,429 --> 00:14:58,209
goes away

207
00:14:58,209 --> 00:15:01,719
I don't need to worry about overflows I
don't worry about parking string safety

208
00:15:01,720 --> 00:15:05,589
for the most part I can I can
concentrate on my code

209
00:15:05,589 --> 00:15:09,429
the second is that has a pythonesque I
promise you this will turn into a good

210
00:15:09,429 --> 00:15:13,959
presentation it's just small engine as a
Python ask library ecosystem that's

211
00:15:13,959 --> 00:15:17,319
that's really really awesome again lets
me focus on the core competency of the

212
00:15:17,319 --> 00:15:26,319
code it also has also built in like
native transport mechanisms like first

213
00:15:26,319 --> 00:15:33,429
of all in JSON because life's too short
and wash non json built in native key

214
00:15:33,429 --> 00:15:37,358
based transport right so if i'm running
a bunch of these things all over the

215
00:15:37,359 --> 00:15:40,809
place I don't want to have to deal with
this log concentrators and whatnot on

216
00:15:40,809 --> 00:15:43,209
testosterone eq and let it work itself
out

217
00:15:43,209 --> 00:15:47,529
so for my money if you're going to
deploy this from scratch if you don't

218
00:15:47,529 --> 00:15:51,970
have an existing environment you're not
re-logging dns i personally prefer the

219
00:15:51,970 --> 00:15:56,319
standalone Venus log right I think gives
you flexibility i think it's it's sort

220
00:15:56,319 --> 00:15:59,858
of purpose-built you can you can deploy
this on a recursive resolver both of

221
00:15:59,859 --> 00:16:03,939
these options are are very very low and
reach overhead in general you can deploy

222
00:16:03,939 --> 00:16:07,509
this on an existing tap if you have an
ids box you're already running play

223
00:16:07,509 --> 00:16:12,339
there you can place on $STREET points go
passive DNS another sort of into the

224
00:16:12,339 --> 00:16:17,289
reason I you go is cross-platform right
so i can compile and run this on OS 10

225
00:16:17,289 --> 00:16:20,139
Lenny flavor of linux you want even
windows

226
00:16:20,139 --> 00:16:24,699
although it's missing some service
initiation initialization stuff to run

227
00:16:24,699 --> 00:16:32,199
well on that yet so lastly assuming
you've decided like where you want to

228
00:16:32,199 --> 00:16:35,679
walk right you know you want to log in
these places with these and up

229
00:16:35,679 --> 00:16:38,529
well make these slides available after
the talk for those of you who take

230
00:16:38,529 --> 00:16:39,939
pictures every slide

231
00:16:39,939 --> 00:16:42,300
let's all say be some effort

232
00:16:42,300 --> 00:16:46,439
so so we felt we were longest place to
stay at these places

233
00:16:47,160 --> 00:16:51,900
awesome we're going to send it back
using using what we haven't talked about

234
00:16:51,900 --> 00:16:56,400
that yet right so so how do we do we
actually support this collection some of

235
00:16:56,400 --> 00:17:00,060
you already going to have environments
setup for this right it's as easy as

236
00:17:00,060 --> 00:17:03,750
plugging into your existing law cancer
mechanism where the flu more Kafka or

237
00:17:03,750 --> 00:17:06,119
what have you and again

238
00:17:06,119 --> 00:17:11,399
awesome you should do that laziness
again is a virtue in these cases the the

239
00:17:11,400 --> 00:17:15,300
generic infrastructure I like to talk
about here is there a couple of specific

240
00:17:15,300 --> 00:17:18,480
requirements for Dina state it's like to
really log it very very well

241
00:17:18,480 --> 00:17:25,110
specifically DNS data is one of the data
sources that benefits just significantly

242
00:17:25,109 --> 00:17:29,550
from enrichment a couple of basic
enrichments like who is data and maybe

243
00:17:29,550 --> 00:17:34,169
DSRV al-zor other blacklist data onto
these log records make it immensely more

244
00:17:34,170 --> 00:17:42,090
useful need analysis face so I like this
this basic architecture write a 2 q's

245
00:17:42,090 --> 00:17:46,649
with enrichment days in between writing
out to both an elastic search in a spark

246
00:17:46,650 --> 00:17:51,150
mr cluster on the other end this is
basically what i do in prod for from my

247
00:17:51,150 --> 00:17:53,430
DNS data this let's do two things

248
00:17:53,430 --> 00:17:56,790
remember talking to the very beginning
dns can sort of African to analytical

249
00:17:56,790 --> 00:18:00,930
flows the question/answer style like
easy search based stuff and much more

250
00:18:00,930 --> 00:18:04,050
complicated bulk processing stuff this
let's meet you both

251
00:18:04,050 --> 00:18:08,550
I can respect stock drops when I want
them or my analysts can get a real time

252
00:18:08,550 --> 00:18:16,110
instant results from elastic search
queries cool you have all the data

253
00:18:16,110 --> 00:18:19,409
congratulations now what do you do with
it

254
00:18:19,410 --> 00:18:26,640
we talked about arrangements the like i
said if you do nothing else

255
00:18:27,240 --> 00:18:32,820
add who is data to this stuff it is
enormously useful both for domain age

256
00:18:32,820 --> 00:18:34,770
type questions how old this domain

257
00:18:34,770 --> 00:18:39,660
how recently has it changed what
registrar's is it registered with is it

258
00:18:39,660 --> 00:18:45,090
a rest are in you know Ukraine or seen
someone that has more of a positive

259
00:18:45,090 --> 00:18:46,110
reputation

260
00:18:46,110 --> 00:18:50,490
it's amazing if you can add more stuff
blacklisted up

261
00:18:50,490 --> 00:18:55,620
very very useful at geoip on the return
in on the return by piece that can also

262
00:18:55,620 --> 00:19:01,050
be extremely extremely useful and lastly
if so go back in in this slide here

263
00:19:01,050 --> 00:19:06,389
either spark mr hdfs cluster that's
really cool if you're not going to do

264
00:19:06,390 --> 00:19:09,540
that or if you don't have matter you
can't do that but i encourage you to do

265
00:19:09,540 --> 00:19:13,139
is pre calculate some values in your
processing pipeline right some some

266
00:19:13,140 --> 00:19:16,650
standard aggregations analysts are going
to use for some standard terms they can

267
00:19:16,650 --> 00:19:21,420
use to to aggregate on right so probably
the most important anything else is

268
00:19:21,420 --> 00:19:24,510
parked out the domain from the hostname
and have that as a separate record

269
00:19:24,510 --> 00:19:29,280
almost logged use that that will enable
a broad range of analysis later

270
00:19:29,280 --> 00:19:33,030
including things like attacking the
Destiny mechanisms that are really hard

271
00:19:33,030 --> 00:19:37,950
to do without without that parsing
calculating things like english word

272
00:19:37,950 --> 00:19:42,120
presidents query entropy compressibility
there's some really interesting research

273
00:19:42,120 --> 00:19:46,350
around that can help help the analysts
if they only have elastic search

274
00:19:46,350 --> 00:19:53,969
interface still produce pretty
complicated analysis it's like that but

275
00:19:53,970 --> 00:19:59,280
it's like a little bit of those data you
were interested in some number of ways

276
00:19:59,280 --> 00:20:04,110
you have this cool analysis environment
another way i was i was when i when i

277
00:20:04,110 --> 00:20:07,379
first started doing this talk i had this
like grand plan i'm gonna build us the

278
00:20:07,380 --> 00:20:11,700
same environment is stacked can be
really cool beautiful and I realized

279
00:20:11,700 --> 00:20:15,510
after i did all that that that the stuff
that you guys would actually see is like

280
00:20:15,510 --> 00:20:19,679
a come-on natural with histogram not not
really sexy funny for the for the input

281
00:20:19,679 --> 00:20:23,640
so instead of like showing china which
sort of where i'm going to talk through

282
00:20:23,640 --> 00:20:30,330
this stuff sorry don't histograms the
best blocks right what is was last last

283
00:20:30,330 --> 00:20:34,470
folks are domains that rapidly switch
between IDs this is to make a key base

284
00:20:34,470 --> 00:20:37,470
blocking hard

285
00:20:38,790 --> 00:20:44,309
among other reasons a so-so how to
detect this in dns logs is actually

286
00:20:44,309 --> 00:20:49,620
blindingly obvious if you if you have
those hostnames already in there a quick

287
00:20:49,620 --> 00:20:55,110
histogram literally a histogram of
unique IPS per domain name boom you're

288
00:20:55,110 --> 00:20:58,199
going to see high values in places like
Google Places look like that when they

289
00:20:58,200 --> 00:21:01,549
return 678 results in grassy some that
are several times

290
00:21:01,549 --> 00:21:05,179
results they're gonna be extraordinarily
suspicious and and you should

291
00:21:05,179 --> 00:21:08,720
investigate that stuff that as with all
these and talk about this in the end

292
00:21:08,720 --> 00:21:12,139
always false positives they're always
like outliers that you need to take out

293
00:21:12,139 --> 00:21:19,699
this analysis but this is why the the is
like humans are good at this stuff

294
00:21:20,720 --> 00:21:27,529
Sabinus isolation telling the the pickup
down there is actually from iodine you

295
00:21:27,529 --> 00:21:33,889
can see it uses a consistent domain name
with differing hostnames to to move

296
00:21:33,889 --> 00:21:37,668
traffic back and forth this is this is
one of two common telling an electrical

297
00:21:37,669 --> 00:21:43,100
patterns the other is you can get very
clever with this with unused fields in

298
00:21:43,100 --> 00:21:47,959
dns packets to encode individual or
maybe two or three bits per packet that

299
00:21:47,960 --> 00:21:52,009
stuff if you're looking at us at all is
tends to be very very obvious because

300
00:21:52,009 --> 00:21:56,690
the query volume just goes insane from
these hosts moving one bit at a time one

301
00:21:56,690 --> 00:22:03,139
bit pretty nice query the the hostname
stuff up may or may not increase volume

302
00:22:03,139 --> 00:22:09,678
significantly what it does do is it
increases unique hostnames per domain

303
00:22:09,679 --> 00:22:13,519
significantly right so this is where if
you pre calculated that the main field

304
00:22:13,519 --> 00:22:16,609
you have that spark cluster running
analysis and asking how many unique

305
00:22:16,609 --> 00:22:20,509
hostnames forgive me my seeing is
actually very interesting are going to

306
00:22:20,509 --> 00:22:24,859
get that was possible positives from
Syrians doing this cloud front akamai

307
00:22:24,859 --> 00:22:25,668
that kind of thing

308
00:22:25,669 --> 00:22:29,330
those are generally pretty easy to parse
out of your results and the whitelist as

309
00:22:29,330 --> 00:22:33,139
you go through that what you're left
with is a set of unusual domains that

310
00:22:33,139 --> 00:22:37,309
you should really look into very closely
now this is gonna false-positive a bit

311
00:22:37,309 --> 00:22:38,509
i'm going to talk about this

312
00:22:38,509 --> 00:22:41,929
actually I'm hypothesis using a false
bottom of the thing like antivirus

313
00:22:41,929 --> 00:22:46,580
vendors do some crazy dns stuff that
looks a lot like tunneling in fact these

314
00:22:46,580 --> 00:22:53,658
tunneling we'll talk about that a little
bit a little bit later so dgaf domain

315
00:22:53,659 --> 00:22:59,239
generation algorithms is pretty easy
because they generally result in a huge

316
00:22:59,239 --> 00:23:03,529
spike in inexperienced forgiven client
as he's working his journey domains

317
00:23:03,529 --> 00:23:07,789
trying to find the active one large
numbers of the next remains are actually

318
00:23:07,789 --> 00:23:11,149
a really interesting lead to begin with
right once you once you get this data

319
00:23:11,870 --> 00:23:14,719
there are a number of basic a little
questions you can start asking like

320
00:23:14,720 --> 00:23:18,170
what's the next remaining what's
surveilling the most in my environment

321
00:23:18,170 --> 00:23:23,930
my right this is the threads we can
start to pull on to kick off a much more

322
00:23:23,930 --> 00:23:29,210
in depth and a little exploration the
djs again very simple if you're if

323
00:23:29,210 --> 00:23:33,830
you're collecting the data spike in X
domains you should look at that once you

324
00:23:33,830 --> 00:23:36,710
look at the traffic you're going to see
what looked very much like randomly

325
00:23:36,710 --> 00:23:42,770
generated remains there i forget what
this was a sample of some banking

326
00:23:42,770 --> 00:23:49,850
children i want to say low prevalence
domains this is a really interesting one

327
00:23:51,170 --> 00:23:58,340
so this this sort of is is related to
the concept that now where should be

328
00:23:58,340 --> 00:24:03,889
rare in your organization right you can
see this descanses exists in like in

329
00:24:03,890 --> 00:24:08,990
file hash based analysis as well what
are the least common hashes or pieces of

330
00:24:08,990 --> 00:24:12,200
software in my environment the least
common running processes least common

331
00:24:12,200 --> 00:24:14,390
registry keys that kind of thing

332
00:24:14,390 --> 00:24:18,890
it works in dns to some extent like
everything ever every other area where

333
00:24:18,890 --> 00:24:25,429
you apply this kind of analysis users do
weird shit right

334
00:24:25,940 --> 00:24:31,910
the the drift on user in points for that
kind of stuff is just it's insane the

335
00:24:31,910 --> 00:24:36,230
tail is super long the first time I did
this I did this analysis on on date I

336
00:24:36,230 --> 00:24:41,059
was super excited like yeah I'm gonna
find the apts and i found all the users

337
00:24:41,059 --> 00:24:47,480
just all of them doing crazy stuff and
and a lot of it happens because of dns

338
00:24:47,480 --> 00:24:51,980
prefetch because the random tracking
domains because of just the internet

339
00:24:51,980 --> 00:24:58,760
right where you can apply this i found
much more effectively on servers servers

340
00:24:58,760 --> 00:25:03,530
should not have and Jill experience do
not have the same drift as a client . to

341
00:25:03,530 --> 00:25:08,330
do it at least that if they're well
managed server environments

342
00:25:08,330 --> 00:25:15,710
I found the like a very interesting
approach is to do this exact sort of

343
00:25:15,710 --> 00:25:19,429
prevalence analysis and ask what are the
what are the least query domains in my

344
00:25:19,429 --> 00:25:21,620
environment and go to and go ask why

345
00:25:21,620 --> 00:25:22,699
right

346
00:25:22,700 --> 00:25:27,050
go figure out what who owns these things
how long have they been around you can

347
00:25:27,050 --> 00:25:30,350
combine these and layer this with an
age-based analysis for the least common

348
00:25:30,350 --> 00:25:34,159
new domains of mine right in my
environment again if you either have the

349
00:25:34,160 --> 00:25:37,340
spark environment pre-calculated this
stuff it's incredibly interesting

350
00:25:37,340 --> 00:25:40,159
analysis to do on server environments

351
00:25:40,160 --> 00:25:43,280
I don't recommend recliner environments
you're gonna be chasing that tail for

352
00:25:43,280 --> 00:25:50,120
the rest of your life so few leads that
you should you should you should our

353
00:25:50,120 --> 00:25:54,739
thread you should pull on what you get
this data using the most text lookups

354
00:25:54,740 --> 00:25:58,160
right so we see that we saw back this

355
00:25:58,160 --> 00:26:07,130
nope yeah this guy's using a records to
to conduct his aar yeah to do he's

356
00:26:07,130 --> 00:26:12,110
telling txt records are also very very
popular to do the same sort of tunneling

357
00:26:12,110 --> 00:26:14,959
one more

358
00:26:14,960 --> 00:26:19,910
there we go so who's the most excellent
cups now what you're gonna see is is

359
00:26:19,910 --> 00:26:20,690
this

360
00:26:20,690 --> 00:26:29,150
unfortunately this is this is so post
this is so folks doing dns lookups for

361
00:26:29,150 --> 00:26:32,180
women blacklists I have no idea what the
stuff in the middle there is that looks

362
00:26:32,180 --> 00:26:36,200
like a dns tunnel it probably is the
National for some amount of information

363
00:26:36,200 --> 00:26:44,660
and I i did i was very amused when I
looked up so it's at sophos XL dotnet is

364
00:26:44,660 --> 00:26:50,510
the actual suppose domain suppose X 1
dot net for sale can also buy it should

365
00:26:50,510 --> 00:26:53,870
offer pretty good you guys are red
teamers that shit that'll be great d

366
00:26:53,870 --> 00:27:01,520
nest all the beautiful i can hear the
name ChiCom apps opening right now

367
00:27:02,179 --> 00:27:08,539
so the so txt records really interesting
both in terms of like which hosted doing

368
00:27:08,539 --> 00:27:13,070
most of which means you the most but we
are like my ex domain responses who's

369
00:27:13,070 --> 00:27:17,119
failing the most he's looking at the
most broken domains this is either this

370
00:27:17,119 --> 00:27:21,019
either that that server is either broken
or affected possibly both

371
00:27:21,019 --> 00:27:26,809
you never know purevolume baseline huge
in the most dns lookups in my entire in

372
00:27:26,809 --> 00:27:32,450
my entire environment and why the
reverse using the least what they need

373
00:27:32,450 --> 00:27:36,350
to look at the least across-the-board
this is actually not again I would do

374
00:27:36,350 --> 00:27:41,389
this for servers my clients clients are
here and the last ones can actually be

375
00:27:41,389 --> 00:27:46,969
pretty interesting and and help surface
malabar that's that's not using dns to

376
00:27:46,970 --> 00:27:50,179
avoid this sort of analysis but what's
showing up in network it's not showing

377
00:27:50,179 --> 00:27:53,720
up at the dance and the u.s. answer this
assumes you have an environment where

378
00:27:53,720 --> 00:27:56,990
you can do that kind of calculation of
spark or something of that nature but it

379
00:27:56,990 --> 00:28:02,929
turns out to be actually pretty
interesting set of hosts here come the

380
00:28:02,929 --> 00:28:07,909
false positives we talked about this AV
engines are notorious for the stuff I've

381
00:28:07,909 --> 00:28:12,350
seen it with sophos with mcafee with a
few others use DNS tone mechanism

382
00:28:12,350 --> 00:28:18,379
primarily my in my opinion because this
is basically free for them in terms of

383
00:28:18,379 --> 00:28:21,320
load as opposed to like HT based
mechanism and they have to run the

384
00:28:21,320 --> 00:28:22,668
server to support it

385
00:28:22,669 --> 00:28:28,519
I'm here we basically support them
pretty clever actually some other things

386
00:28:28,519 --> 00:28:32,809
there that are the commonly trip people
up and starting to do this for chrome

387
00:28:32,809 --> 00:28:38,149
and actually a few others when you start
them up will look up several domain

388
00:28:38,149 --> 00:28:42,830
names they expect not to exist just to
test for DNS hijacking the environment

389
00:28:42,830 --> 00:28:44,509
in which they exist

390
00:28:44,509 --> 00:28:50,149
this also looks at about 9am like you
know something bad is going on your

391
00:28:50,149 --> 00:28:53,869
network because you have thousands
hundreds of being on the side of your

392
00:28:53,869 --> 00:28:56,959
organization of index domain responses
like what

393
00:28:56,960 --> 00:28:59,960
why is this happening every day between
8-9 morning

394
00:29:00,919 --> 00:29:07,789
that's because people come to work and
open your laptop's prefetch is is the

395
00:29:07,789 --> 00:29:11,809
devil in terms of dns monitoring it's
great for performance and like all the

396
00:29:11,809 --> 00:29:12,678
other reasons

397
00:29:12,679 --> 00:29:16,639
so prefetch is when browser goto website
that website has a bunch of links on it

398
00:29:16,639 --> 00:29:20,539
the the browser decides I'm gonna be
super helpful i'm going to prefetch the

399
00:29:20,539 --> 00:29:23,360
dns the result of the students queries
before the users actually put on

400
00:29:23,360 --> 00:29:24,168
anything

401
00:29:24,169 --> 00:29:27,379
this also happens when the user is
typing in the URL bar in some browsers

402
00:29:27,379 --> 00:29:31,399
depending on the settings if the user
types of valid display name is part of

403
00:29:31,399 --> 00:29:37,699
another domain name www.fcn on their way
to cnn.com that look up depending on the

404
00:29:37,700 --> 00:29:40,490
browser settings will happen right

405
00:29:40,490 --> 00:29:44,330
the question is then going back looking
at your house records well it did why

406
00:29:44,330 --> 00:29:46,730
why did it happen it happened because
the user is trying to type something

407
00:29:46,730 --> 00:29:50,869
else that happened because the user went
there like that happens prefetch they

408
00:29:50,869 --> 00:29:54,259
just happen to visit there was a has
happened a couple times and actually

409
00:29:54,259 --> 00:30:01,970
literally woke me up it at morning a
user was visiting the week PDS site i

410
00:30:01,970 --> 00:30:08,480
think it was for apt one and they linked
to several of the domains off of that

411
00:30:08,480 --> 00:30:09,679
wikipedia site

412
00:30:09,679 --> 00:30:13,129
well the browser went ahead and prefetch
that domain for them

413
00:30:13,129 --> 00:30:18,949
thank God for that and lit the olympic
stuff up like a Christmas tree because

414
00:30:18,950 --> 00:30:24,139
they were going to Fritz the apt is the
literal apts it was not the apt it was

415
00:30:24,139 --> 00:30:24,799
with you

416
00:30:24,799 --> 00:30:32,720
yeah that was not that was not awesome
and last Syrians play havoc with this

417
00:30:32,720 --> 00:30:37,249
entire field of analysis CBS do weird
shit see if you look at that cloud front

418
00:30:37,249 --> 00:30:41,509
they use random domains random friends
of domain stuck . conferred on net look

419
00:30:41,509 --> 00:30:47,389
at akamai they use a number of of action
naming pattern stock my . . akes things

420
00:30:47,389 --> 00:30:52,699
like that you learn to fill these out as
you as you do this analysis more it's

421
00:30:52,700 --> 00:30:56,450
going to vary depending on your
environment right you're we each are

422
00:30:56,450 --> 00:31:00,470
doing different things are our traffic
and look you know one way or the other

423
00:31:00,470 --> 00:31:02,240
depending on how that turns out

424
00:31:02,240 --> 00:31:06,919
but yeah it's it's actually filterable

425
00:31:08,200 --> 00:31:14,320
so cool we talk about right on time we
talked about how to collect it and

426
00:31:14,320 --> 00:31:20,168
talked about what to do once you've
collected it some analysis palace that

427
00:31:20,169 --> 00:31:24,610
you can that you can travel down my one
named mean the meaning of my youth

428
00:31:27,519 --> 00:31:31,210
let's talk about response right so so
how do you can use the US response

429
00:31:31,210 --> 00:31:36,880
penises actually amazingly awesome for
response so I'm assuming you all you're

430
00:31:36,880 --> 00:31:40,299
all going to rush back to your your jobs
and immediately implement passive DNS

431
00:31:40,299 --> 00:31:41,620
it's not already there

432
00:31:41,620 --> 00:31:47,049
RTS monitoring is not over there
anything to find the apts immediately

433
00:31:47,049 --> 00:31:50,980
obviously that's how that's gonna happen
so like so that one

434
00:31:50,980 --> 00:31:56,169
what do you do about that so what the US
is it as we talk about the very

435
00:31:56,169 --> 00:31:59,500
beginning essential networking right is
everything almost everything using dns

436
00:31:59,500 --> 00:32:02,889
lookup we're supposed to go for given
name which means it's a great place to

437
00:32:02,889 --> 00:32:06,340
block those things or redirect them much
more interesting lead to somewhere you

438
00:32:06,340 --> 00:32:10,720
can control and analyze that data so the
primary way to do this is something that

439
00:32:10,720 --> 00:32:16,210
that bind introduced in $YEAR by and 98
called rpz response policy zones

440
00:32:16,210 --> 00:32:20,320
sometimes it's referred to as the dns
firewall which is I think a terrible

441
00:32:20,320 --> 00:32:27,760
name wrong direction so busy this this
is this is basically rpz right so this

442
00:32:27,760 --> 00:32:34,570
is a RP z is a is a zone that's
maintained on RPC server that served by

443
00:32:34,570 --> 00:32:37,750
that server and also be maintained on
your resolve itself is just a separate

444
00:32:37,750 --> 00:32:42,610
zone depends on how you want implement
it binds configured look at this zone as

445
00:32:42,610 --> 00:32:44,199
a as a policy

446
00:32:44,200 --> 00:32:48,789
look up right so as it's saying okay I'm
inventors all bad side calm when you

447
00:32:48,789 --> 00:32:51,100
first look at my RP zones configured
over here

448
00:32:51,100 --> 00:32:54,789
look there's a record for bad zone com
over there let's just go ahead and serve

449
00:32:54,789 --> 00:32:57,580
that fake record back this user instead
the real record that I would have had to

450
00:32:57,580 --> 00:33:02,740
get from from the the internet somewhere
its contraction much much more than that

451
00:33:02,740 --> 00:33:06,309
it can give it an extra main they can
live on responses they can do all sorts

452
00:33:06,309 --> 00:33:10,360
of fun stuff if you read the RP RPG
manual i think the mode the two most

453
00:33:10,360 --> 00:33:15,729
interesting for us are straight up
blocking and redirection to a walled

454
00:33:15,730 --> 00:33:21,129
garden or analysis node so so there are
a few options tell you without you

455
00:33:21,129 --> 00:33:21,840
deploy your pc

456
00:33:21,840 --> 00:33:26,340
the most common if you have more than
one was / is the your internal results

457
00:33:26,340 --> 00:33:31,139
first slaves owned off of some dns are
but you to control this is really great

458
00:33:31,140 --> 00:33:34,470
when you don't own the DNS
infrastructure and the guys doing the

459
00:33:34,470 --> 00:33:39,179
penis penis infrastructure love it like
a child I've seen the case occasionally

460
00:33:39,179 --> 00:33:43,950
in this case like you're never you're
not touching their servers all you're

461
00:33:43,950 --> 00:33:48,090
doing is saying slaves owned for me a
nap this one line and configure your to

462
00:33:48,090 --> 00:33:52,559
your name . and we're done even if my
server literally catches fire and merge

463
00:33:52,559 --> 00:33:58,408
the ground it does not the worst thing
that happens is traffic doesn't block it

464
00:33:58,409 --> 00:34:04,799
doesn't impact the operational stability
of of dns which is super cool and then

465
00:34:04,799 --> 00:34:05,399
you

466
00:34:05,399 --> 00:34:12,989
unfortunately that's you know that's not
order so unfortunately that means you

467
00:34:12,989 --> 00:34:17,609
are then saddled with maintaining
a-a-a-a zone file for all your all your

468
00:34:17,609 --> 00:34:21,389
blocks stuff if there's more than one of
you on a team your face with the

469
00:34:21,389 --> 00:34:25,169
classical dns admins dilemma of how do
you edit zone file safety among multiple

470
00:34:25,168 --> 00:34:34,379
people is poorly frequently talk about
that in a second so should you do

471
00:34:34,379 --> 00:34:39,359
obviously for a couple reasons one is
obviously blocking domains to is this is

472
00:34:39,359 --> 00:34:44,098
actually i think more interesting the
redirection capabilities in rpz can push

473
00:34:44,099 --> 00:34:48,599
that interesting traffic to a
transparent proxy it can put it like for

474
00:34:48,599 --> 00:34:52,589
instance this is a great idea if if you
if you're having problems with cnet

475
00:34:52,589 --> 00:34:57,509
downloaders and responding to stupid ad
where you can use this to drop an

476
00:34:57,510 --> 00:35:01,349
interstitial in front of cnet
download.com right you just redirect

477
00:35:01,349 --> 00:35:07,589
download cnet com rpz to a local local
IP that's a reverse proxy it just drops

478
00:35:07,589 --> 00:35:10,589
a page from the user really are you sure
you want to do this are you sure you

479
00:35:10,589 --> 00:35:14,339
want to download this out of our leading
executable let them clear or not

480
00:35:14,339 --> 00:35:20,520
whichever way you want easy LOL that if
if that's if that's a problem and this

481
00:35:20,520 --> 00:35:21,390
is the solution

482
00:35:21,390 --> 00:35:25,629
I hopefully just save you a bunch of
time responding just add works

483
00:35:25,630 --> 00:35:31,720
last the RPC is crazy fast is fast DNA
replication and if you're using

484
00:35:31,720 --> 00:35:37,058
Matilda's own notifies so this is a dns
mechanism to for a master Catellus

485
00:35:37,059 --> 00:35:41,980
slaves when his own has been updated you
can get you know single-digit seconds

486
00:35:41,980 --> 00:35:49,329
company-wide blocking for a given a
given domain name a client or your name

487
00:35:49,329 --> 00:35:57,460
server or even wild cards off of those
things which is incredibly fast for pc

488
00:35:57,460 --> 00:36:02,230
gotchas like I mention this is your now
stuck maintaining is a bind zone file

489
00:36:02,230 --> 00:36:05,230
that that has its ups and downs

490
00:36:07,180 --> 00:36:10,180
you're gonna have a bad time if you do
this with like a standard like an hour

491
00:36:10,180 --> 00:36:13,598
domain list or something like that i
learned this too hard bitter experience

492
00:36:13,599 --> 00:36:16,599
the second time I cartoons I stop doing
that

493
00:36:17,170 --> 00:36:20,170
yeah that was not good

494
00:36:20,680 --> 00:36:24,640
this that's I had to include bullet
number three there always have 200

495
00:36:24,640 --> 00:36:28,450
number on his own if you're if you're
like not a dns admin you you don't know

496
00:36:28,450 --> 00:36:31,359
how much pain this college is likewise
my changes not propagating region update

497
00:36:31,359 --> 00:36:35,920
your cell number and lastly DNS SEC so
domestic has been interesting

498
00:36:35,920 --> 00:36:40,839
interaction with rpz it by large this
actually doesn't matter today because

499
00:36:40,839 --> 00:36:45,609
clients are generally validating very
often so to the extent clients are

500
00:36:45,609 --> 00:36:49,869
validating you can just have our pc lie
anyway in the clients not care if your

501
00:36:49,869 --> 00:36:55,210
clients are validating you can still
have rpz mess with the record to go back

502
00:36:55,210 --> 00:36:58,809
but all that's gonna happen is you're
gonna break validation and that client

503
00:36:58,809 --> 00:37:02,289
will be able to visit the website that
the the domain exactly what you want

504
00:37:02,289 --> 00:37:07,779
anyway so it seems fine to me either way
which is pretty sweet

505
00:37:08,410 --> 00:37:15,788
perfect okay one little bit early so
lastly this is this is where i was

506
00:37:15,789 --> 00:37:20,259
supposed to unveil the thing I wrote
called go rpz that fixes much of that

507
00:37:20,259 --> 00:37:26,410
unfortunately lawyers exist in this
world so i can open source yet they're

508
00:37:26,410 --> 00:37:31,779
there they're still reviewing whether i
can or not but it's really cool i'll

509
00:37:31,779 --> 00:37:34,040
tell you about all about it even though
you can't have it

510
00:37:34,040 --> 00:37:39,350
so which like in all seriousness it
should be out in another week or two

511
00:37:39,350 --> 00:37:47,000
once i get back and sit on them so this
is a restful service that also does

512
00:37:47,000 --> 00:37:51,470
that's also dns server back in it uses
goes multi-threading to do that all in

513
00:37:51,470 --> 00:37:57,649
the same process it takes strength
RESTful API using barricades for off and

514
00:37:57,650 --> 00:38:02,840
on the back end it master zone file
using again go has a great package to

515
00:38:02,840 --> 00:38:09,740
pack library using goes built-in dns
packages to to handle all of the

516
00:38:09,740 --> 00:38:15,950
replication to the pier actual internal
solvers this takes away all the zone

517
00:38:15,950 --> 00:38:17,149
file craziness

518
00:38:17,150 --> 00:38:20,510
this makes updating a breeze this means
you can track your additions and

519
00:38:20,510 --> 00:38:24,500
deletions much more effectively over
time this means my favorite feature of

520
00:38:24,500 --> 00:38:28,310
all you could have comments you can say
why a thing was blocked

521
00:38:28,310 --> 00:38:31,310
not just that it was blocking redirected
or whatever you choose to do with it

522
00:38:32,450 --> 00:38:38,810
let's go so it's cross-platform is one
binary it's you know Jewish sorry can't

523
00:38:38,810 --> 00:38:41,810
release it super sad about that

524
00:38:42,680 --> 00:38:49,339
lastly I think we're going to end early
sorry for your questions from the back

525
00:38:58,180 --> 00:39:16,509
laced together so I'm oh so no not
effectively so the the piece of

526
00:39:16,510 --> 00:39:19,060
information it's common when you look at
like that

527
00:39:19,060 --> 00:39:25,060
I'm so sorry the question was if you're
using like a non transparent proxy and

528
00:39:25,060 --> 00:39:30,520
you see a request come in that you're
redirecting to a neutral proxy and that

529
00:39:30,520 --> 00:39:34,780
proxy redirector regenerates other DNS
query to to wherever that clients going

530
00:39:34,780 --> 00:39:42,250
how do you tie that that line together
the answers hackery around time windows

531
00:39:42,250 --> 00:39:47,350
is the best answer they're traditionally
there's a dns transaction ID that stable

532
00:39:47,350 --> 00:39:56,380
through the yeah that's that's stable
through the transaction transaction T

533
00:39:56,380 --> 00:40:01,210
but that's broken when youyou reissue a
new query from a proxy server was the

534
00:40:01,210 --> 00:40:06,190
answers there's not a good way but
practically speaking I would probably

535
00:40:06,190 --> 00:40:12,670
not pay much attention or or at least
lower the severity of stuff is issuing

536
00:40:12,670 --> 00:40:15,580
from the proxies or that I'm
intentionally directing infected users

537
00:40:15,580 --> 00:40:20,950
to because it's checkout false-positive
a lot of me what else

538
00:40:20,950 --> 00:40:24,310
front and back

539
00:40:24,310 --> 00:40:36,190
yep as the question is for the prefetch
does it is just the queries that

540
00:40:36,190 --> 00:40:40,780
actually start downloading experience is
just a query its pre resolving the

541
00:40:40,780 --> 00:40:45,160
there's little that will make the
browsers do queries as well it'll start

542
00:40:45,160 --> 00:40:49,600
pulling pieces of links to think it's
gonna go to but I haven't not aware of

543
00:40:49,600 --> 00:40:52,870
any browsers that do that natively and
in the red and black

544
00:40:53,990 --> 00:41:49,520
so what you so the question was an
example of complicated analysis problem

545
00:41:49,520 --> 00:41:56,480
is my microsoft updates where Microsoft
redirects akamai to do it's it's a big

546
00:41:56,480 --> 00:42:00,230
download which makes a ton of sense
that's what I see against for what are

547
00:42:00,230 --> 00:42:05,270
some sort of tips and tricks to do
better work through that that process so

548
00:42:05,270 --> 00:42:09,710
if you're this goes back to like how do
you store the data so analysts can

549
00:42:09,710 --> 00:42:15,290
interact with it effectively if you if
you're seeing this this this guy going

550
00:42:15,290 --> 00:42:16,190
to an IP address

551
00:42:16,190 --> 00:42:20,390
that's a knock come IP address if you're
you know putting your data and like

552
00:42:20,390 --> 00:42:23,779
elasticsearch something like that you
should be able to very quickly search ok

553
00:42:23,780 --> 00:42:28,100
IP address that was resolved by that was
actually akamai of what resolve that

554
00:42:28,100 --> 00:42:31,790
well that was actually a cname from
updates on microsoft.com and should be

555
00:42:31,790 --> 00:42:35,720
able to make that chain very very
quickly that falls down a little bit

556
00:42:35,720 --> 00:42:41,299
like a three or two star redirect what
like three or two like if it's a pistol

557
00:42:41,300 --> 00:42:46,940
my column is actually a small server
system eager to talk my but the very

558
00:42:46,940 --> 00:42:50,119
least you'd be able to quickly
backtracked that I p2 and no it's akamai

559
00:42:50,119 --> 00:42:56,690
which is in my experience a much lower
severity style look up and because like

560
00:42:56,690 --> 00:43:00,950
we all go through this you now know that
that akamai is distributing market

561
00:43:00,950 --> 00:43:03,759
updates if you see this happening around

562
00:43:03,759 --> 00:43:06,969
I'm microsoft updates are coming out
like this that should be the first at

563
00:43:06,969 --> 00:43:09,819
the top of your mind allowing this is
like SOPs for your network right like

564
00:43:09,819 --> 00:43:12,819
like like much else in instant analysis

565
00:43:13,359 --> 00:43:40,119
well I saw ya how we saw some stuff in
in red team's that was that absolutely

566
00:43:40,119 --> 00:43:47,229
that we caught where the dns analysis
was extremely important thing I've

567
00:43:47,229 --> 00:43:51,489
caught so I died I draw a slightly
different stem cells are at the question

568
00:43:51,489 --> 00:43:57,249
um if you after you've been doing this
for quite a while you work the initial

569
00:43:57,249 --> 00:44:00,968
they told false positives and you get
down to like the stuff that's that's

570
00:44:00,969 --> 00:44:06,099
suspicious and work through that that
there are a lot of false positives so I

571
00:44:06,099 --> 00:44:09,579
first answer is walking bottle to the
blue team

572
00:44:14,679 --> 00:44:22,929
yes absolutely so so the d/s blocking
was was by far the most effective

573
00:44:22,929 --> 00:44:24,279
coordinated blocking mechanism

574
00:44:24,279 --> 00:44:34,389
I've ever used I was in what regiment we
were detected through through other

575
00:44:34,389 --> 00:44:35,319
means

576
00:44:35,319 --> 00:44:40,869
so we discovered the red team they were
using a specific hosting provider to do

577
00:44:40,869 --> 00:44:47,799
their the red teaming we backtrack that
two were able to call in a favor to get

578
00:44:47,799 --> 00:44:50,889
the list of domain names that was
involved in this and variable stage

579
00:44:50,889 --> 00:44:56,349
according to block across our entire
infrastructure all at once with maybe

580
00:44:56,349 --> 00:45:00,939
five seconds of latency from the first
dns server last dns server and

581
00:45:00,939 --> 00:45:05,949
effectively decapitate the entire that
entire intrusion recommendation in other

582
00:45:05,949 --> 00:45:09,759
environments a lot of the false
positives are actually badly

583
00:45:09,759 --> 00:45:15,579
misconfigured systems that like actually
fixing those is i would call a win

584
00:45:15,579 --> 00:45:16,180
internets

585
00:45:16,180 --> 00:45:19,540
off its off security win but it's it's
it's a real win

586
00:45:19,540 --> 00:45:40,720
yeah what else ya know yeah so thanks
for asking i forgot to mention this it

587
00:45:40,720 --> 00:45:44,470
will all be even those in my notes so
they're a couple of API services that do

588
00:45:44,470 --> 00:45:48,520
this i've used like who is XML API for
instance there are few others

589
00:45:48,520 --> 00:45:52,900
domaintools has a party API things like
that that can easily handle hundreds of

590
00:45:52,900 --> 00:45:56,559
thousands the second thing that i would
encourage you to do is set up a caching

591
00:45:56,559 --> 00:46:01,390
proxy for that locally but they're note
there's there's really only two week

592
00:46:01,390 --> 00:46:05,109
we're your domain name it a ton of times
in a given day and I think you'll find

593
00:46:05,109 --> 00:46:10,630
as you as you do the the analysis that
you have a large number of domains are

594
00:46:10,630 --> 00:46:13,480
getting very pretty when the query that
you probably don't need to update a

595
00:46:13,480 --> 00:46:16,180
thousand times today and you have a much
smaller number of inquiries once or

596
00:46:16,180 --> 00:46:19,598
twice after the first month or so

597
00:46:19,599 --> 00:46:23,260
running through this with a caption
proxy for that . the number of queries

598
00:46:23,260 --> 00:46:30,849
that actually reaches your your API
provider goes wait out well another

599
00:46:30,849 --> 00:46:35,500
outstanding time for a beer left the
next talk success

600
00:46:41,070 --> 00:46:41,670
yeah

