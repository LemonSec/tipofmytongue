1
00:00:00,000 --> 00:00:03,000
both of them we'll see how that goes

2
00:00:04,380 --> 00:00:09,389
Oh on so i think we'll go ahead and get
started here in a second when they're

3
00:00:09,389 --> 00:00:12,389
closing the door can you guys hear me
now

4
00:00:12,900 --> 00:00:16,619
alright very good to go

5
00:00:17,190 --> 00:00:23,369
cool so this is a year in the Empire i
always like to ask this how many people

6
00:00:23,369 --> 00:00:27,448
use Empire all that's a lot more than I
thought that's awesome

7
00:00:28,140 --> 00:00:33,030
so first things first this project would
not be possible to I wasn't for the help

8
00:00:33,030 --> 00:00:37,140
and phenomenal work of a large number of
people you know we we kind of built the

9
00:00:37,140 --> 00:00:42,510
weaponize component of this but huge
amounts of the backend was were created

10
00:00:42,510 --> 00:00:46,589
by a lot of other people and we drew a
lot of existing work so power supplied

11
00:00:46,590 --> 00:00:51,300
by Matt graver i'm chris campbell and
just bialik washtech mod by Carlos Perez

12
00:00:51,300 --> 00:00:55,349
the Boston here in the front row on
manage powershell by the christensen

13
00:00:55,350 --> 00:00:59,969
tickin who's also somewhere over here in
the second row me cats by Benjamin

14
00:00:59,969 --> 00:01:04,650
Delphian Vincent boy and everyone who
has contributed modules bug fixes and

15
00:01:04,650 --> 00:01:08,250
their time to help this project we
really been overwhelmed by the community

16
00:01:08,250 --> 00:01:16,710
participation it's been awesome cool so
my name is Will Schrader my handle is

17
00:01:16,710 --> 00:01:21,270
harmed joy I'm a security researcher and
red team were at the adaptive threat

18
00:01:21,270 --> 00:01:25,259
division of bears group i'm the
co-founder of the powershell empire in

19
00:01:25,259 --> 00:01:29,850
Python Empire project both of which will
talk about am i created a power up power

20
00:01:29,850 --> 00:01:32,850
view a couple like offensive powerful
tool sets their kind of separate

21
00:01:32,850 --> 00:01:37,259
packages i was one of the primary
creators of the Vale framework I'm now

22
00:01:37,259 --> 00:01:42,420
currently a power split developer with
matt also helped out with the Bloodhound

23
00:01:42,420 --> 00:01:46,380
Active Directory control flow path
project that was presented at DEFCON

24
00:01:46,380 --> 00:01:50,610
about a month ago and i was recently
this year got microsoft powershell MVP

25
00:01:50,610 --> 00:01:55,200
so I'm quite happy that Microsoft is
willing to recognize offensive

26
00:01:55,200 --> 00:02:02,189
powershell professionals in the MVP
status is pretty great right here me

27
00:02:02,189 --> 00:02:03,600
alright awesome

28
00:02:03,600 --> 00:02:11,850
hi I'm Matt Nelson on my twitter handle
there is a minus x3 my and a criterion

29
00:02:11,850 --> 00:02:15,900
and security researcher I after working
with lynn that greater I can't even call

30
00:02:15,900 --> 00:02:20,280
my home security researcher so i'm
primarily right here for a very good to

31
00:02:20,280 --> 00:02:25,320
data for division and I was a former
sysadmin and I won't even out of college

32
00:02:25,320 --> 00:02:28,709
for about a year so I work full-time
system administrator calls in college

33
00:02:28,710 --> 00:02:33,630
and then on to the Virginia to work for
various women loved every single minute

34
00:02:33,630 --> 00:02:34,560
of it

35
00:02:34,560 --> 00:02:40,770
so this is Matt's first time speaking
here so drink up

36
00:02:42,270 --> 00:02:45,270
haha preferably both of them

37
00:03:03,290 --> 00:03:13,399
that's disgusting goodness i don't i
like to be able to see clearly hydrant

38
00:03:13,400 --> 00:03:18,500
down so no intention on you

39
00:03:19,730 --> 00:03:23,060
alright so short version of what this
presentation is going to be about it's

40
00:03:23,060 --> 00:03:29,540
kind of a that face

41
00:03:45,590 --> 00:03:57,470
alright that's good alright I think
we'll be okay so Empire empires been out

42
00:03:57,470 --> 00:04:03,349
for not too long and it's made a lot of
improvements over the last year so we're

43
00:04:03,349 --> 00:04:09,409
going to be releasing 20 today it's very
beta and so be gentle with the code and

44
00:04:09,409 --> 00:04:19,459
more or less and we're gonna get kind of
God really great advice don't make sure

45
00:04:19,459 --> 00:04:22,459
i'm sorry i sorry

46
00:04:23,690 --> 00:04:26,800
yeah

47
00:04:26,800 --> 00:04:32,050
don't have an opener on their young

48
00:04:36,460 --> 00:04:57,128
this was much more than the other one
your chance i'm really i'm going to

49
00:04:57,129 --> 00:05:00,610
vomit

50
00:05:00,610 --> 00:05:05,169
actually I I really remember about the
moment so I cannot

51
00:05:05,169 --> 00:05:13,060
I'm sorry all right you haven't done
that since college so six months ago

52
00:05:13,629 --> 00:05:19,270
perfect all right keep going so we gotta
get kind of cover some of the

53
00:05:19,270 --> 00:05:24,250
motivations for the 20 release some of
the integrations that some of you might

54
00:05:24,250 --> 00:05:29,080
know there's the Python empire which is
also released at a later on we'll talk

55
00:05:29,080 --> 00:05:30,430
about this later

56
00:05:30,430 --> 00:05:33,819
so can't go over you know some of the
motivations behind that and kind of the

57
00:05:33,819 --> 00:05:38,830
merge the two that we're going to some
demos I break it

58
00:05:39,430 --> 00:05:44,259
okay perfect alright so Empire i'm sure
a lot of us all the hands everybody's

59
00:05:44,259 --> 00:05:47,979
pretty familiar with Empire I'm a
full-featured powershell exploitation

60
00:05:47,979 --> 00:05:51,520
framework and then with the Python
Empire it's the same deal with python

61
00:05:51,520 --> 00:05:58,389
the core agent was initially built in
powershell and so I'm another agent self

62
00:05:58,389 --> 00:06:01,930
on targets running as powershell in the
controller itself was built in Python

63
00:06:01,930 --> 00:06:06,969
and you know it uses a backhand sequel
database i get stuff a lot of you are

64
00:06:06,969 --> 00:06:12,520
familiar with it and so kind of slow and
like one of the big points with the

65
00:06:12,520 --> 00:06:15,940
project was to have a really big you I
focus so we really like to care about

66
00:06:15,940 --> 00:06:21,009
tag completion i'm having a persistent
credential store we basically wanted to

67
00:06:21,009 --> 00:06:25,060
build the agent kind of how we operated
and we wanted to build in all the little

68
00:06:25,060 --> 00:06:28,629
features and things that we always
really kind of wanted in our operational

69
00:06:28,629 --> 00:06:32,889
platform for example you'll see the
demos like OPSEC safety checks and

70
00:06:32,889 --> 00:06:36,070
things like that so we tried to put a
lot of little bit of love and like a

71
00:06:36,070 --> 00:06:39,070
little bit of details and a lot of the
components DUI

72
00:06:40,380 --> 00:06:49,830
so why did we build a powershell agent
or botnet and initially started as a

73
00:06:49,830 --> 00:06:53,310
thought exercise and we noticed that
there were a lot of offensive powerful

74
00:06:53,310 --> 00:06:59,190
frameworks that existed so powersport at
the time power tool whirs emerged so all

75
00:06:59,190 --> 00:07:02,219
these different really smart people are
creating all these really awesome power

76
00:07:02,220 --> 00:07:05,910
soul post exploitation exploitation
tools they're kind of all scattered all

77
00:07:05,910 --> 00:07:10,590
over the place and so it's really hard
to if you're on an engagement you had to

78
00:07:10,590 --> 00:07:14,310
bring those tools down make sure that
you have the ones that you need to make

79
00:07:14,310 --> 00:07:18,210
sure they're all updated its kind of
pain in the butt and so the initial idea

80
00:07:18,210 --> 00:07:23,940
was to compile every offensive toolset
or framework into one centralized

81
00:07:23,940 --> 00:07:30,300
location that you can operate with from
its own custom agent and the other

82
00:07:30,300 --> 00:07:34,500
primary motivating factor for the
creation of it was in our minds

83
00:07:34,500 --> 00:07:39,960
defenders weren't ready for powerful
paths powershell people were you know

84
00:07:39,960 --> 00:07:43,140
doing awesome stuff with powershell and
all that good stuff the defenders were

85
00:07:43,140 --> 00:07:46,890
aware of it they were aware of how
capable an attacker can be when they're

86
00:07:46,890 --> 00:07:47,969
armed with it

87
00:07:47,970 --> 00:07:51,900
I'm it exists by the fall and so every
attacker basically had his trusted

88
00:07:51,900 --> 00:07:55,140
Microsoft's I'm binaries that was there
at their disposal to do whatever they

89
00:07:55,140 --> 00:07:58,979
want and so the goal this framework was
the kind of push that forward in and say

90
00:07:58,980 --> 00:08:03,840
hey here is a fully functional
open-source rat that implements always

91
00:08:03,840 --> 00:08:08,130
awesome powerful pat now people are
gonna start using on their pen testing

92
00:08:08,130 --> 00:08:11,100
recommendations and so defenders and
start to be aware and determine how

93
00:08:11,100 --> 00:08:17,460
they're going to actually detect and
respond these attacks so yeah if you can

94
00:08:17,460 --> 00:08:20,700
think about it or if you can imagine
it's likely already been done is kind of

95
00:08:20,700 --> 00:08:26,130
philosophy like to think of and this
isn't groundbreaking power show rats i'm

96
00:08:26,130 --> 00:08:30,659
sure existed long before Empire and this
is just bringing out into the light

97
00:08:30,660 --> 00:08:34,680
making sure that everybody is aware of
his capabilities and make sure that they

98
00:08:34,679 --> 00:08:38,789
understand the process for detective Yin
yeah and so one of the differences we

99
00:08:38,789 --> 00:08:41,789
saw was you know we've been doing
offensive powershell components

100
00:08:41,789 --> 00:08:45,510
powerview power power supply for years
and a lot of clients I kind of knew

101
00:08:45,510 --> 00:08:49,290
about different components but we really
saw what we think was kind of like a

102
00:08:49,290 --> 00:08:52,140
change in thinking our awareness and
clients after Empire

103
00:08:52,140 --> 00:08:55,860
released we're all of a sudden they're
like oh like crap you can do you can all

104
00:08:55,860 --> 00:08:59,670
my entire enterprise using literally
nothing but power show like maybe we

105
00:08:59,670 --> 00:09:03,240
should actually start walking this down
so people started taking it a little bit

106
00:09:03,240 --> 00:09:06,390
more seriously after this is released
I'm i don't know if that's going to

107
00:09:06,390 --> 00:09:09,930
dental or hopefully the project had
something to do with it that had enough

108
00:09:09,930 --> 00:09:14,280
publicity but it really rethink as we'd
like to think it's not a reasonable job

109
00:09:14,280 --> 00:09:20,670
about raising awareness of the steps of
the tax and so the people that likely

110
00:09:20,670 --> 00:09:24,390
use these agents in the past form the
people that are going to talk and

111
00:09:24,390 --> 00:09:27,600
security conferences and so the goal was
to like i said earlier we bring

112
00:09:27,600 --> 00:09:30,120
everything the light get out in the
public make sure people are actually

113
00:09:30,120 --> 00:09:36,960
capable of attacking responding to texts
of the pats so this this is a picture

114
00:09:36,960 --> 00:09:40,320
within itself Jefferson over who give
the key number weird over there

115
00:09:40,320 --> 00:09:52,020
everybody's actually also known as the
father of PowerShell this i still like a

116
00:09:52,020 --> 00:09:52,829
boy

117
00:09:52,830 --> 00:09:58,860
sorry no Julie cause you to be like this
it's an offensive power show wasn't

118
00:09:58,860 --> 00:10:03,210
initially adopted pretty you know a lot
of people didn't really accept it

119
00:10:03,210 --> 00:10:07,140
first lot of people kind of call that .
language and that it wasn't something i

120
00:10:07,140 --> 00:10:12,060
could be you could write for agent in or
using all of your militias instances and

121
00:10:12,060 --> 00:10:16,260
so this is a good kind of validation of
people are starting to acknowledge and

122
00:10:16,260 --> 00:10:20,160
accept that you can give some pretty
nasty stuff with powershell itself and i

123
00:10:20,160 --> 00:10:23,310
think that the industry's gotten much
better at acknowledging that this is a

124
00:10:23,310 --> 00:10:26,939
thing and I think from Italy see
assessments I've been on recently people

125
00:10:26,940 --> 00:10:30,990
are actually starting to monitor and
attack and I'm respond to powerful

126
00:10:30,990 --> 00:10:36,600
attacks pretty quickly is awesome so
your development i am so sorry for

127
00:10:36,600 --> 00:10:41,910
everybody has issued issued requests or
put in for requests for two dudes in a

128
00:10:41,910 --> 00:10:45,689
basement on our free time on like
saturday nights maintaining this code

129
00:10:45,690 --> 00:10:48,900
and so if you have a pull request open
from like january of last year i

130
00:10:48,900 --> 00:10:54,990
apologize i blame me it's my fault so
nearly 400 commits which tested a lot a

131
00:10:54,990 --> 00:10:58,680
lot of contributors the open source
community has been really welcoming one

132
00:10:58,680 --> 00:11:02,670
of our initial fears was people weren't
going to actually contribute to it or

133
00:11:02,670 --> 00:11:03,510
they would just use it

134
00:11:03,510 --> 00:11:07,260
and then focus when things don't work
and we would have to be can like

135
00:11:07,260 --> 00:11:11,880
full-time software developers are
becoming and so everybody's been really

136
00:11:11,880 --> 00:11:16,140
great job acute contributing to it and
we have a lot of issues most of them are

137
00:11:16,140 --> 00:11:19,949
closed so we had over a hundred fifty
you have issues and that's going to

138
00:11:19,950 --> 00:11:24,870
reset with 20 and i hope you break
records for more issues because it's a

139
00:11:24,870 --> 00:11:30,120
beta lots of PR which is amazing and
what kind of go over the modulator as

140
00:11:30,120 --> 00:11:34,950
far as what's been added and and how it
communities given that and like it's

141
00:11:34,950 --> 00:11:35,520
tough

142
00:11:35,520 --> 00:11:42,060
so this is cool watchdogs to there
actually people tweeted that is non-stop

143
00:11:42,060 --> 00:11:47,550
about this they use empire in the game
which is interesting i'm just kind of an

144
00:11:47,550 --> 00:11:51,420
equal screenshot that it's actually make
it made its way out of the little like

145
00:11:51,420 --> 00:11:55,469
inner circle powershell community and
nobody really uses it outside of the

146
00:11:55,470 --> 00:12:00,000
small group to its being like introduced
into a game so people are starting to

147
00:12:00,000 --> 00:12:03,810
actually acknowledge that you know it's
a serious thing and it's an awesome

148
00:12:03,810 --> 00:12:13,709
thank yous all right so Spencer at zero
Steiner last year I came on stage for a

149
00:12:13,710 --> 00:12:17,850
couple minutes already been tense talk
now let everybody know that there was an

150
00:12:17,850 --> 00:12:23,460
rce in the powerful Empire control
server up literally three weeks ago I

151
00:12:23,460 --> 00:12:28,050
got another gpg encrypted disclosure
notice from Spencer with Skywalker

152
00:12:28,050 --> 00:12:31,079
version 2 and I was like oh god like not
again

153
00:12:31,080 --> 00:12:35,250
I've made a huge mistake but the the one
. 6 release that we pushed about a week

154
00:12:35,250 --> 00:12:41,250
ago includes a fix for an additional
file overwrite disclosure bug that can

155
00:12:41,250 --> 00:12:46,830
be turned into into an rce to us when
this happened like people were you like

156
00:12:46,830 --> 00:12:50,280
afraid like are you gonna be embarrassed
or whatever like no securities hard

157
00:12:50,280 --> 00:12:55,350
obviously we're pretty crappy developers
a lot of ways we were really happy that

158
00:12:55,350 --> 00:12:59,310
somebody spending enough time to dive
into the code to actually find some

159
00:12:59,310 --> 00:13:01,920
these fundamental issues so we're
actually gonna be writing up a blog post

160
00:13:01,920 --> 00:13:06,180
the next few weeks the kind of details
how we failed how we tried to fix it and

161
00:13:06,180 --> 00:13:08,459
our goal is to be as transparent as
possible

162
00:13:08,460 --> 00:13:13,260
we gotta fix out within 24 hours and
patched it so anyone . six branch this

163
00:13:13,260 --> 00:13:17,370
is fixed thanks Spencer and in the
two-out over

164
00:13:17,370 --> 00:13:20,640
engines pics as well so we just want to
kind of open up to all of our mistakes

165
00:13:20,640 --> 00:13:24,420
and we apologize very much for not being
more careful and we're happy that people

166
00:13:24,420 --> 00:13:30,839
were responsibly disclosing everything
else so we had a lot of questions about

167
00:13:30,839 --> 00:13:34,740
this or comments about this or people
will say you know empires like

168
00:13:34,740 --> 00:13:39,330
powershell interpreters and return
replacement we absolutely do not think

169
00:13:39,330 --> 00:13:43,830
that so again our goal was almost
started kinda like a proof-of-concept to

170
00:13:43,830 --> 00:13:48,810
weaponize laws existing powershell tech
but we are really big believers and

171
00:13:48,810 --> 00:13:52,949
often and depth or use a variety of tool
sets we even though we're heavy

172
00:13:52,950 --> 00:13:57,330
powershell focus we don't put all of our
eggs in one basket to where we don't

173
00:13:57,330 --> 00:14:03,000
want all toolsets to fail in case
somebody has like really rigid amsi like

174
00:14:03,000 --> 00:14:08,339
Windows 10 or whatever else so Empire
has a couple thousand hours at that time

175
00:14:08,339 --> 00:14:12,180
behind it probably between different
combine parties meterpreter metasploit

176
00:14:12,180 --> 00:14:15,719
has hundreds of thousands of hours
behind it like empires never going to be

177
00:14:15,720 --> 00:14:20,010
interpreters never going to be
metasploit it's now we do believe that

178
00:14:20,010 --> 00:14:24,150
it has an advantage in the field and
because it's a scripting language is

179
00:14:24,150 --> 00:14:29,520
much easier for most people to develop
modules in like modified different

180
00:14:29,520 --> 00:14:34,410
components in the field on the fly when
you're on ops like there's I know some

181
00:14:34,410 --> 00:14:37,770
people that can they can modify
meterpreter recompile everything and do

182
00:14:37,770 --> 00:14:41,189
whatever you know kind of whatever they
want those are a lot fewer than people

183
00:14:41,190 --> 00:14:44,430
that can just modify a scripting
language so to us it's a tool in the

184
00:14:44,430 --> 00:14:48,599
arsenal we do use it we also use a
variety of other tool sets but we do

185
00:14:48,600 --> 00:14:52,800
like its adaptability in in the field
and will tomorrow when I'm talking to

186
00:14:52,800 --> 00:14:57,990
sean mac app also kind of a semi kind of
case study example of no adapting stuff

187
00:14:57,990 --> 00:15:01,560
in the field and building a module kind
of on the fly so all the demos tomorrow

188
00:15:01,560 --> 00:15:05,969
at 10am for the anatomy of corporate
hack will use Empire kind of

189
00:15:05,970 --> 00:15:09,150
operationally why this talk focuses more
on kind of the inner workings and

190
00:15:09,150 --> 00:15:15,630
developments so we care a lot about
crypto a lot of open source tools will

191
00:15:15,630 --> 00:15:20,939
just use cell science Ertz we'll just
use our c4 and becky i know enough about

192
00:15:20,940 --> 00:15:24,990
crypto to be dangerous but I've had and
probably mess everything terribly up but

193
00:15:24,990 --> 00:15:28,589
it had a lot of people review the specs
my kind of comment on the scheme and

194
00:15:28,589 --> 00:15:31,020
everything so we use something called a
cryptic

195
00:15:31,020 --> 00:15:36,480
key exchange were essentially it marries
symmetric and asymmetric crypto with RSA

196
00:15:36,480 --> 00:15:39,480
and aes or in the Python agent

197
00:15:42,960 --> 00:15:47,730
oh yes still terrible it's like coming
back up

198
00:15:47,730 --> 00:15:52,740
uh then on the Python side it uses
diffie-hellman key exchange along with a

199
00:15:52,740 --> 00:15:58,860
yes so essentially there's a a
pre-shared staging key that is used to

200
00:15:58,860 --> 00:16:04,230
exchange a key negotiation stage or so a
snippet of code that will generate like

201
00:16:04,230 --> 00:16:09,540
a random some asymmetric key that then
is used to negotiate an additional like

202
00:16:09,540 --> 00:16:14,400
session key so the end result is you get
assuming our implementation is correct

203
00:16:14,400 --> 00:16:18,240
which I believe it is you get perfect
forward secrecy or even if people do

204
00:16:18,240 --> 00:16:23,430
full p caps the entire traffic
negotiation they can't recover the

205
00:16:23,430 --> 00:16:27,660
individual session key that's actually
used to encrypt traffic and also each

206
00:16:27,660 --> 00:16:33,000
agent in the entire mesh has a different
ASI shiki even if people you dump the

207
00:16:33,000 --> 00:16:37,080
memory of one of the agents that pulls
the key out the only get the correct oh

208
00:16:37,080 --> 00:16:41,490
and only get the the traffic
negotiations that one agent instead of

209
00:16:41,490 --> 00:16:45,270
saying using an RC four key for
everything you know you pull one agent

210
00:16:45,270 --> 00:16:49,110
you get it and you can decrypt all them
our communications entire mesh so that

211
00:16:49,110 --> 00:16:53,400
was essentially kind of the reason
behind it for us we also have process

212
00:16:53,400 --> 00:16:57,360
injection that we released a year and a
half ago this is heavily based on the

213
00:16:57,360 --> 00:17:04,110
leaves work so we have a script that
invoke PS inject that uses right now

214
00:17:04,109 --> 00:17:08,399
reflect invoke reflected the injection
from powersports we're going to adapt it

215
00:17:08,400 --> 00:17:12,810
to use the bookshelf codes will be a lot
simpler an injector reflective DLL into

216
00:17:12,810 --> 00:17:14,220
your process of choice

217
00:17:14,220 --> 00:17:17,490
this does a lot of magic and back-end
that I kind of understand completely

218
00:17:17,490 --> 00:17:21,450
understand you have questions asked Lee
and it loads up the common language

219
00:17:21,450 --> 00:17:26,850
runtime for.net into the process into
the unmanaged or like C C++ process so

220
00:17:26,849 --> 00:17:31,919
non . process it loads up . net and that
non-dominant process then loads and

221
00:17:31,920 --> 00:17:36,540
assembly that lets you run PowerShell
commands so the end result is with the

222
00:17:36,540 --> 00:17:40,409
powershell script we can inject a whole
bunch of stuff into another process and

223
00:17:40,410 --> 00:17:44,160
have it launched up our new empire
stager for processing

224
00:17:44,160 --> 00:17:48,480
operation now again we don't have our
process injection we don't have like

225
00:17:48,480 --> 00:17:51,480
proper process migration can help
interpret doesn't they do some kind of

226
00:17:51,480 --> 00:17:54,690
black magic under the hood to transfer
the sessions so we went with a little

227
00:17:54,690 --> 00:17:57,810
bit of the easy route to at least allow
injection which will shown some of the

228
00:17:57,810 --> 00:18:02,310
demos hopefully so I we have the
screenshot last year we just like it

229
00:18:02,820 --> 00:18:06,270
this to us this was kind of the missing
piece that kept it from just being a toy

230
00:18:06,270 --> 00:18:11,670
language to where you can run your power
shown our without having parish all that

231
00:18:11,670 --> 00:18:17,220
dxc running use PowerShell that exe our
power shell is not powershell dxc it is

232
00:18:17,220 --> 00:18:21,240
the system management that automation
dll is that you can load up in these .

233
00:18:21,240 --> 00:18:26,430
assemblies that we use when we inject so
right here in the screenshot you see a

234
00:18:26,430 --> 00:18:29,580
powershell our Empire running in else
asks which we wouldn't really recommend

235
00:18:29,580 --> 00:18:33,149
but it was really really funny to us
when we first got this working just

236
00:18:33,150 --> 00:18:36,750
never liked alright we have to inject in
the LCS and then it it worked in an

237
00:18:36,750 --> 00:18:39,960
agent came back we like ran around the
office high-fiving everyone call this a

238
00:18:39,960 --> 00:18:43,260
bunch of nerves and like we have no idea
what's going on but we're really excited

239
00:18:43,260 --> 00:18:47,670
just to show that you can inject into
even up like there's no reason else i

240
00:18:47,670 --> 00:18:51,780
should be hosting up like you know .
that stuff or whatever also again kind

241
00:18:51,780 --> 00:18:59,040
of the missing piece for us but so some
of the new features in Cena's release

242
00:18:59,040 --> 00:19:04,409
the modules of double which is
outrageous in my mind and we've added a

243
00:19:04,410 --> 00:19:09,000
lot of stuff we try to keep up with some
of the recent research going out and so

244
00:19:09,000 --> 00:19:12,690
we've added units and the tater stuff
and they all I guess everybody's been

245
00:19:12,690 --> 00:19:16,290
really well not just releasing coding
saying hey you should those and Empire

246
00:19:16,290 --> 00:19:18,300
they've done a great job

247
00:19:18,300 --> 00:19:24,480
hey I wrote this awesome tool is a poor
request with the modules just test it i

248
00:19:24,480 --> 00:19:27,330
passed it works will merge it in
everybody's happy

249
00:19:27,330 --> 00:19:31,919
so community addition to me like I'm i
believe it's Kevin Robertson from the

250
00:19:31,920 --> 00:19:35,010
invader author he's done a really good
out over there

251
00:19:35,010 --> 00:19:38,010
thank you for he's really good sorry we
didn't land your

252
00:19:39,389 --> 00:19:44,820
again we know you have an open for
request but he's done a great job about

253
00:19:44,820 --> 00:19:47,639
syncing all the new versions and
everything and he looked at us when

254
00:19:47,639 --> 00:19:50,279
we're trying to hack stuff together to
get it working for empire in the first

255
00:19:50,279 --> 00:19:53,669
place and took that approach and ran
with it and he's like people like him

256
00:19:53,669 --> 00:19:57,029
could have done an awesome job about
like updating and contributing their

257
00:19:57,029 --> 00:20:00,479
kind of PowerShell based attack tools
and sinking them with the framework so

258
00:20:00,479 --> 00:20:03,479
thanks again it's the community

259
00:20:04,019 --> 00:20:08,940
I guess you know how they interact with
us is amazing and since that we get we

260
00:20:08,940 --> 00:20:12,690
get code submitted to us we don't have
to spend our time sitting down and

261
00:20:12,690 --> 00:20:16,259
writing these models all these cool new
technique second I'll people are

262
00:20:16,259 --> 00:20:19,529
interested in getting their code into
the framework which is awesome

263
00:20:19,529 --> 00:20:23,549
another red served 32 payload and shot
the casey smith i don't know i'm sure

264
00:20:23,549 --> 00:20:28,049
he's in here somewhere sitting front row
I'm amazing amazing amazing technique

265
00:20:28,049 --> 00:20:31,379
that you discovered that got added
pretty quickly and you know all the

266
00:20:31,379 --> 00:20:35,998
other good stuff most important that
there were neutrals . models added so

267
00:20:35,999 --> 00:20:40,950
good for that I'm keithy which will and
the Christians did some awesome work on

268
00:20:40,950 --> 00:20:43,979
recovering some housework data memory if
you're using keepass if you haven't

269
00:20:43,979 --> 00:20:46,440
checked it out i would definitely
recommend it

270
00:20:46,440 --> 00:20:51,869
UEC bypasses this will go over that
later and a lot more so what kind of

271
00:20:51,869 --> 00:20:55,949
covers from the top ones here in a bit
and one of the bigger additions in my

272
00:20:55,950 --> 00:21:00,179
mind that really push things forward was
the addition at 2am there's a RESTful

273
00:21:00,179 --> 00:21:05,429
API interface and so you can write you
can write things to integrate and into

274
00:21:05,429 --> 00:21:09,059
Empire vapi and you don't have to work
that

275
00:21:09,059 --> 00:21:12,690
yeah i just want to thank Carlos for
kind of helping me design it has been a

276
00:21:12,690 --> 00:21:15,899
full week kind of going back and forth
with me like with the design decisions

277
00:21:15,899 --> 00:21:19,349
and all a lot of these things are really
kind of built with the rest api were

278
00:21:19,349 --> 00:21:23,249
building kind of coordination Carlos so
again awesome help awesome participation

279
00:21:23,249 --> 00:21:27,389
we're really excited for kind of the the
integrations at the RESTful API will

280
00:21:27,389 --> 00:21:30,269
hopefully introduced into the future we
already had some like you know web

281
00:21:30,269 --> 00:21:33,539
interfaces and things like that so we're
excited about it because it abstracts

282
00:21:33,539 --> 00:21:37,169
away the complexity of interacting with
the framework it's nice and easy for

283
00:21:37,169 --> 00:21:40,169
people in a great the framework itself
into other tool sets

284
00:21:40,669 --> 00:21:49,100
so Python Empire initially released at
is sigh I'm sorry jack Miami and they

285
00:21:49,100 --> 00:21:53,059
present on it this year besides lv
mountain vegas and it's an awesome

286
00:21:53,059 --> 00:21:57,080
framework is actually will rage coded
like a good portion of it over christmas

287
00:21:57,080 --> 00:22:01,460
break due to the fact that we didn't
have tradecraft pro-sex and we got into

288
00:22:01,460 --> 00:22:05,269
an environment where like will who
anything you or so it's awesome that

289
00:22:05,269 --> 00:22:10,700
works on linux OS X and it was
integrated or is created as a separate

290
00:22:10,700 --> 00:22:14,779
project and so you know what the issues
there was a mean there is maintained as

291
00:22:14,779 --> 00:22:18,830
a separate code base which will cover
some of the group seized over that later

292
00:22:20,299 --> 00:22:24,799
so somebody drawback to the Empire we've
never built around before were to guess

293
00:22:24,799 --> 00:22:29,989
the dudes you know mistakes were made
and lessons were wearing and not wearing

294
00:22:29,989 --> 00:22:34,039
process is awesome so there's no better
way to learn the process and actually

295
00:22:34,039 --> 00:22:34,940
going through it

296
00:22:34,940 --> 00:22:38,960
the only common methods that existed
when it was initially released reach the

297
00:22:38,960 --> 00:22:42,409
finish the s and we'll kind of go over
to the expansion of that here a little

298
00:22:42,409 --> 00:22:46,759
bit i'm like i mentioned the separate
code bases need maintaining them really

299
00:22:46,759 --> 00:22:51,799
digging the button so there's a bowl for
example rce and and powerful Empire we

300
00:22:51,799 --> 00:22:55,279
had to actually go on patch the other
payment as well and so we are doubling

301
00:22:55,279 --> 00:22:59,929
the work that we had to do and also the
we know the naming schemes we thought we

302
00:22:59,929 --> 00:23:03,980
were being clever but when people would
say Empire like in conversations we

303
00:23:03,980 --> 00:23:06,799
didn't know what they were talking about
what a lot of people just give a shit /

304
00:23:06,799 --> 00:23:10,549
or whatever the meetings humans but
anyways that will be fixed with the new

305
00:23:10,549 --> 00:23:19,668
release which are excited about and then
20 which is awesome so the motivations

306
00:23:19,669 --> 00:23:23,480
for combining the two frameworks 20 is a
combination of both powerful Empire and

307
00:23:23,480 --> 00:23:26,840
Python empire that way you know
everything's maintaining one size

308
00:23:26,840 --> 00:23:32,449
location and it's really easy usability
two agents and you know you're not

309
00:23:32,450 --> 00:23:35,869
always an assessment you're not old
you're not only going to run into only

310
00:23:35,869 --> 00:23:39,859
windows boxes or only LSX boxes so
having them integrated into one

311
00:23:39,859 --> 00:23:43,158
framework makes it easy so you have to
set up another server with python Empire

312
00:23:43,159 --> 00:23:46,190
running on if you want to go and pop
over to sections that contain us

313
00:23:46,190 --> 00:23:50,779
excellent losses when the other
motivations was to modularize the c2 and

314
00:23:50,779 --> 00:23:53,340
so c2 with pretty static and is

315
00:23:53,340 --> 00:23:58,679
that we only had you know asian penis is
initially this is going to allow us to I

316
00:23:58,680 --> 00:24:03,480
was gonna allow us to expand the and the
actual see two components pretty

317
00:24:03,480 --> 00:24:07,170
dramatically which i think a lot of
people once they see how to write

318
00:24:07,170 --> 00:24:11,430
modules and self the c2 is going to make
it really awesome to see one of stuff

319
00:24:11,430 --> 00:24:15,480
people right evil stuff and we got to
remove from the code rot and so we had

320
00:24:15,480 --> 00:24:19,140
some old code you know we've never been
about before and so you know we cleaned

321
00:24:19,140 --> 00:24:22,740
it up and went from kind of the mistakes
that we made in the suggestions we got

322
00:24:22,740 --> 00:24:26,520
from the community and kind of turned it
down and make it nice and pretty

323
00:24:27,300 --> 00:24:35,190
so there was a lot of design decisions
made with matt said I like to rage got a

324
00:24:35,190 --> 00:24:40,380
lot like my team like to say I'm otay
pretty much fueled by caffeine alcohol

325
00:24:40,380 --> 00:24:43,800
and rage whenever I code so there
there's a lot of you know late night

326
00:24:43,800 --> 00:24:48,720
caffeine fueled coding sessions so a lot
of the disease architectural decisions

327
00:24:48,720 --> 00:24:52,380
that were made you know a year and a
half almost two years ago in the project

328
00:24:52,380 --> 00:24:56,550
originally started we realized we aren't
conducive to expanding a lot of the new

329
00:24:56,550 --> 00:25:00,000
features you want to implement one of
the biggest things that was a giant pain

330
00:25:00,000 --> 00:25:02,820
is like redesigning things like the
packet structure which we'll go over

331
00:25:02,820 --> 00:25:06,480
here in a second you know how the agents
interact with the listeners we went back

332
00:25:06,480 --> 00:25:10,080
and forth the same ok he wants the
project's combined how do we

333
00:25:10,650 --> 00:25:15,450
for example if I launcher comes in and
request a first-stage a request like

334
00:25:15,450 --> 00:25:19,260
kind of became negotiation stager you
want to have Python power show how do

335
00:25:19,260 --> 00:25:22,560
you differentiate and say I should
return Python code or should return

336
00:25:22,560 --> 00:25:25,980
powershell co2 I differentiated by the
court to embed some kind of metadata

337
00:25:25,980 --> 00:25:29,700
like there's a lot of weird kind of
design decisions that don't necessarily

338
00:25:29,700 --> 00:25:33,330
have a right or wrong answer so if you
guys think the approach we took his

339
00:25:33,330 --> 00:25:36,990
terrible like please tell us and ideally
tell us a better way to do it

340
00:25:36,990 --> 00:25:44,250
so the the big design decision that was
revamped was all of the kind of agent

341
00:25:44,250 --> 00:25:47,490
data packets are wrapped in what we're
calling kind of like a routing or a

342
00:25:47,490 --> 00:25:52,500
metadata packet and the motivation
behind this is we eventually want to do

343
00:25:52,500 --> 00:25:56,760
peer to peer c2 so if we have something
like SMB work we have something like the

344
00:25:56,760 --> 00:26:01,470
Active Directory situ or different
components to where it might be hard for

345
00:26:01,470 --> 00:26:05,430
the server to differentiate what the
actual agent session ideas with the

346
00:26:05,430 --> 00:26:08,880
which is you can't just pull stuff out
of a cookie every single time like you

347
00:26:08,880 --> 00:26:14,730
could with HTTP so there's kind of a
rapt packet that has a couple bits of

348
00:26:14,730 --> 00:26:18,990
metadata the the language and different
things will go over and every single

349
00:26:18,990 --> 00:26:23,610
agent in the mesh re no kind of link to
that controller can decrypt just that

350
00:26:23,610 --> 00:26:27,840
routing metadata for every other agent
now that doesn't give away any kind of

351
00:26:27,840 --> 00:26:31,139
secret information or staging are you
know like kind of client communication

352
00:26:31,140 --> 00:26:35,070
components are key stuff but it allows
you to to decrypt just enough to figure

353
00:26:35,070 --> 00:26:38,790
out should I route this packet to
somebody else or tried to correct myself

354
00:26:38,790 --> 00:26:44,940
and return the results so the routing
packets is encrypted with the initial

355
00:26:44,940 --> 00:26:49,260
staging key that was static and share
with the server and then each agent

356
00:26:49,260 --> 00:26:54,180
still has its own negotiated session key
so each agent in your tire see to mesh

357
00:26:54,180 --> 00:26:58,770
cannot decrypt the actual data and
communications results from anybody else

358
00:26:58,770 --> 00:27:04,440
but they can't figure out do i need to
send this to to another agent so now

359
00:27:04,440 --> 00:27:08,340
it's probably kind of hard to see but
the general packet up top we have the

360
00:27:08,340 --> 00:27:14,669
routing data that is he has an IV on so
it's going to change every single time

361
00:27:14,670 --> 00:27:20,640
it's encrypted with our c4 with kind of
that pre-established static staging that

362
00:27:20,640 --> 00:27:24,990
packet is only going to be 16 bytes so
it has the session ID 48 bytes the

363
00:27:24,990 --> 00:27:28,890
language so we have one bite me so we
can see the handle up to 32 different

364
00:27:28,890 --> 00:27:33,060
languages a meta field which will say if
it's like staging component stage one

365
00:27:33,060 --> 00:27:37,620
stage to the such things two bytes for
extra expansion so you try not to

366
00:27:37,620 --> 00:27:42,120
constrain ourselves like we did before
and then kind of the link component then

367
00:27:42,120 --> 00:27:45,989
the rest of the aes encrypted client
packet this nice with these is these are

368
00:27:45,990 --> 00:27:49,350
kind of stackable so you can just put
them like you know one on top of another

369
00:27:49,350 --> 00:27:54,899
and each routing kind of metadata packet
can contain an arbitrary number of

370
00:27:54,900 --> 00:27:59,700
client packets and then within it the
client packets which are also stackable

371
00:27:59,700 --> 00:28:03,690
promote multiple tasking for a
particular agent these have been trimmed

372
00:28:03,690 --> 00:28:07,260
down a kind of optimized I had a lot of
help from a lot of people especially

373
00:28:07,260 --> 00:28:13,080
John k from mwr of the UK he looked over
the spec i was i was in london for

374
00:28:13,080 --> 00:28:16,320
44.com last weekend had some beers
apparently very

375
00:28:16,320 --> 00:28:19,649
like awesomely just like give me some
really really good feedback is

376
00:28:19,649 --> 00:28:23,639
super-smart crypto so he's able to give
me some good information I had to make

377
00:28:23,639 --> 00:28:28,080
sure this is designed correctly so we
trimmed down the hvac a little bit we

378
00:28:28,080 --> 00:28:31,408
kept it kind of those specific RSC
compliant as far as keeping everything

379
00:28:31,409 --> 00:28:35,850
authenticated and we so we trimmed down
kind of I'm not going to go every single

380
00:28:35,850 --> 00:28:39,209
field because you could guys probably
don't care but we also with the

381
00:28:39,210 --> 00:28:43,500
expansion of this we want to enable
people to have tasks that span multiple

382
00:28:43,500 --> 00:28:47,460
packets so if you're doing something
like dns or channel that's a lot smaller

383
00:28:47,460 --> 00:28:51,840
it's not quite as bad as HTTP or
arbitrary size we want to be able to

384
00:28:51,840 --> 00:28:55,620
kind of have a basic like packet number
packet length and be able to read

385
00:28:55,620 --> 00:28:59,399
combine a lot of these packets in the
street so again and results probably

386
00:28:59,399 --> 00:29:02,729
born to a lot of people but we put a
huge amount of work trying to lay the

387
00:29:02,730 --> 00:29:07,230
groundwork to expand like really cool
future capabilities we have a few cool

388
00:29:07,230 --> 00:29:11,789
things to show today when we drop stuff
a really kind of hoping to inspire

389
00:29:11,789 --> 00:29:17,519
people to see what's actually possible
and have more people contribute so new

390
00:29:17,519 --> 00:29:21,899
stuff the morning features PHP listeners
be redone with last a lot of people had

391
00:29:21,899 --> 00:29:25,139
issues with too many agents with the
simply she listener and kind of crap out

392
00:29:25,139 --> 00:29:25,918
die

393
00:29:25,919 --> 00:29:29,340
we haven't done scale testing it against
a beta but hopefully they'll be result

394
00:29:29,340 --> 00:29:33,149
we remove the epoch sinking the
intention was for auntie replay

395
00:29:33,149 --> 00:29:37,199
components but we had it so many issues
with people that were just having like

396
00:29:37,200 --> 00:29:41,490
timezone sinking whatever kind of stuff
so we remove that at the expense of

397
00:29:41,490 --> 00:29:45,870
having some auntie replay protection
removed but we felt her you know it's

398
00:29:45,870 --> 00:29:50,428
just again kind of a decision inside to
make all this staging now in powershell

399
00:29:50,429 --> 00:29:55,049
uses h makela indicating can't be
tapered with we use our c4 instead of X

400
00:29:55,049 --> 00:29:59,158
or so that staging will change every
single time with an IV and we put in a

401
00:29:59,159 --> 00:30:03,600
Matz amsi bypass into the powershell
stager right when everything launches to

402
00:30:03,600 --> 00:30:07,230
try to turn off the bit for msi
detection for kind of new window systems

403
00:30:07,230 --> 00:30:13,379
we also have orphaned agent
renegotiation so if your server dies or

404
00:30:13,379 --> 00:30:16,889
databases corrupted whatever else have
you start a server up at the same place

405
00:30:16,889 --> 00:30:21,479
with the same password like the same
kind of server initial server password

406
00:30:21,480 --> 00:30:25,740
the agent will detect if it's if it's
not checked in the server will return

407
00:30:25,740 --> 00:30:29,059
specific response in the agent we'll
restage so

408
00:30:29,059 --> 00:30:32,539
up you know it does involve some more
communication but you won't just have

409
00:30:32,539 --> 00:30:36,200
the pure orphaned agents without a way
to recover them we also have had no it's

410
00:30:36,200 --> 00:30:39,679
not the best names like external modules
modules that don't rely on a session ID

411
00:30:39,679 --> 00:30:45,110
so we have a way to generate a
pre-staged agent you get the code and

412
00:30:45,110 --> 00:30:48,110
then a pretty registers in the database
and you can just run the code and the

413
00:30:48,110 --> 00:30:51,529
next week whatever you want our idea
what this going forward with me for

414
00:30:51,529 --> 00:30:55,129
something like dns like kind of a
channel that's really really thin you

415
00:30:55,129 --> 00:30:58,998
know if you want to deliver the entire
agent in your initial fishing pelo you

416
00:30:58,999 --> 00:31:01,879
don't have let go through the entire
staging so again trying to think ahead

417
00:31:01,879 --> 00:31:10,158
we have an awesome new improved corporis
module on this was a Marco sector macho

418
00:31:10,159 --> 00:31:15,230
sec I think submit a pull request
powerview a few weeks ago so previously

419
00:31:15,230 --> 00:31:19,970
if you wanted to do / roasting which
I'll go over in an operational demo

420
00:31:19,970 --> 00:31:24,799
actually tomorrow which on you would
have to request all the tickets with

421
00:31:24,799 --> 00:31:28,039
some one liners & rummy caps and extract
everything out all the tickets out to

422
00:31:28,039 --> 00:31:31,820
disk or whatever else you like we all
know many cats is awesome it's also

423
00:31:31,820 --> 00:31:35,689
public enemy number one for her
defenders so once defensive start

424
00:31:35,690 --> 00:31:40,220
kicking in this is what Mike number one
of the the top things they're trying to

425
00:31:40,220 --> 00:31:44,119
catch right so there's any way to
execute actions without having to inject

426
00:31:44,119 --> 00:31:47,269
all this code and running me cats and
play with stuff else ask you we prefer

427
00:31:47,269 --> 00:31:47,960
that

428
00:31:47,960 --> 00:31:53,600
so really simple like just you know like
a dozen or so lines a powershell you can

429
00:31:53,600 --> 00:31:57,678
request the ticket pull out the just
encrypt apart and then transform it into

430
00:31:57,679 --> 00:32:03,409
a format that is readily crackable for
John so you run kerberos you run this I

431
00:32:03,409 --> 00:32:08,029
get spin tickets you can specify
username or just all you know all spent

432
00:32:08,029 --> 00:32:12,169
tickets you can find and it dumps out
this hash then then you can run with the

433
00:32:12,169 --> 00:32:16,999
new updated John just crack the TGS or
hash cat so pretty awesome

434
00:32:16,999 --> 00:32:20,869
we just put this in about a week ago and
we got to use it i think I'm one up and

435
00:32:20,869 --> 00:32:25,340
where it's it's way nicer way simpler
needs to be we also have a bloodhound

436
00:32:25,340 --> 00:32:30,678
module so it will execute the bloodhound
in jester execute all the does the

437
00:32:30,679 --> 00:32:34,580
ingestion gets all the csbs which then
you can download and then download pull

438
00:32:34,580 --> 00:32:38,720
back and throw into Europe bloodhound
analysis platform so we've done a huge

439
00:32:38,720 --> 00:32:41,410
amount of work within gesture with
bloodhound when

440
00:32:41,410 --> 00:32:44,320
there's a long ways to go as far as the
gesture goes they're scaling issues

441
00:32:44,320 --> 00:32:47,620
memory issues and all that they were
trying to address but it's at least

442
00:32:47,620 --> 00:32:52,270
weaponize in some form and Empire it
will work in smaller environments and

443
00:32:52,270 --> 00:32:55,720
larger environment he still might have a
few issues but again we don't it doesn't

444
00:32:55,720 --> 00:32:59,830
have the the rest api ingestion kind of
components but at least executed and get

445
00:32:59,830 --> 00:33:07,990
the CSVs you can download yep so on top
of all that awesome stuff we added in a

446
00:33:07,990 --> 00:33:12,910
few new UAC bypasses and so from an
operational perspective we run into this

447
00:33:12,910 --> 00:33:16,840
quite a lot organizations haven't quite
nailed down the whole don't run as local

448
00:33:16,840 --> 00:33:20,949
admin concept for some reason and so
it's still a pretty important thing to

449
00:33:20,950 --> 00:33:26,200
have around this new one that and i
actually discovered a few weeks ago is a

450
00:33:26,200 --> 00:33:31,060
relatively its violence and so you just
take advantage of registry hijacking 22

451
00:33:31,060 --> 00:33:35,290
* process AK powershell high-integrity
process one of the first ones that

452
00:33:35,290 --> 00:33:40,149
doesn't drop a deal with this so it's
going to be a lot harder to catch your

453
00:33:40,150 --> 00:33:43,660
not having to worry about dropping a
malicious binary deal with this every

454
00:33:43,660 --> 00:33:48,070
time maybe might have so typically a lot
of the public USC bypasses that are out

455
00:33:48,070 --> 00:33:52,120
right now take advantage of the AI file
operation common objects to perform a

456
00:33:52,120 --> 00:33:57,639
privilege file copy into a protected
location and then exploit a deal hijack

457
00:33:57,640 --> 00:34:01,750
to load that yellow up and execute
whatever arbitrary code maybe in a dll

458
00:34:01,750 --> 00:34:05,500
so this takes advantage of doing the
same process without having to do a

459
00:34:05,500 --> 00:34:12,610
privilege file copy or drop a dll down
also Empire integration the Python side

460
00:34:12,610 --> 00:34:17,590
so this is what the new menu looks like
and as you can see there are 249 modules

461
00:34:17,590 --> 00:34:22,570
now and this is do TV and you know
expansion in addition of the two

462
00:34:23,739 --> 00:34:28,239
ok so in pi integration and that is
where the new repose at and you have a

463
00:34:28,239 --> 00:34:33,909
comment about the threat Empire and the
merge code base was vse branch and so

464
00:34:33,909 --> 00:34:37,659
it's not ready to be merging the master
yet we're going to do a lot of testing

465
00:34:37,659 --> 00:34:41,649
and after finally ready to merge the
Master will overwrite the project the

466
00:34:41,650 --> 00:34:47,320
Python Empire code will be left up for a
few months will change 3d deprecated and

467
00:34:47,320 --> 00:34:50,770
eventually a year so for now we'll
remove the code off again and we're

468
00:34:50,770 --> 00:34:54,259
taking in the developers that worked on
the Python Empire

469
00:34:54,260 --> 00:34:58,370
portion and we're all merging into one
projects now we will have a natural

470
00:34:58,370 --> 00:35:02,990
five-person quote-on-quote full-time AK
and are very limited free time dev team

471
00:35:02,990 --> 00:35:06,649
which will help instead of having two of
us so hopefully you guys see a little

472
00:35:06,650 --> 00:35:11,870
more of a response for issues and pull
request so this is what the menu looks

473
00:35:11,870 --> 00:35:16,220
like as far as you know typical usage
and starting up a listener and as you

474
00:35:16,220 --> 00:35:20,899
can see here and you can start a
launcher for python and then right after

475
00:35:20,900 --> 00:35:24,320
that star a launching for powershell
they both use the same listener so as

476
00:35:24,320 --> 00:35:27,770
well mention there's some stuff in the
packet that's able to identify you know

477
00:35:27,770 --> 00:35:33,950
what language the the target host is
coming in and hip and yes i will list as

478
00:35:33,950 --> 00:35:38,089
under the language column which actual
language the agent running under and the

479
00:35:38,090 --> 00:35:42,950
modular broken out / language and so
only Python or you know Winx 200sx

480
00:35:42,950 --> 00:35:47,480
post-sex modules be available in the
Python agent in the powershell post-sex

481
00:35:47,480 --> 00:35:52,940
martone interact with each agent and
drop them to the language aware menu of

482
00:35:52,940 --> 00:35:56,690
the language specific menu we have
complete all the models use it only have

483
00:35:56,690 --> 00:36:02,420
complete the one on one hip so we try to
keep the U is possible for people coming

484
00:36:02,420 --> 00:36:08,450
from previous project it so interface
immigration and actually the same time

485
00:36:08,450 --> 00:36:11,540
you interact with the agent name and
you'll just drop into the agent menu the

486
00:36:11,540 --> 00:36:16,250
the commands in the agent itself is
language independent and so there are no

487
00:36:16,250 --> 00:36:21,050
PS isn't exactly going to match exactly
what it does in the Python version but

488
00:36:21,050 --> 00:36:24,080
help is awesome just like he'll tell you
everything you can do

489
00:36:24,650 --> 00:36:28,370
I'm used module same thing for every for
both agents everything's have completed

490
00:36:28,370 --> 00:36:32,839
also it'll get you where you need to go
and then we added a lot more stagers so

491
00:36:32,840 --> 00:36:36,770
there are stages for both languages and
those are also tap computable so if you

492
00:36:36,770 --> 00:36:39,980
hit tab twice to dump everything for you
a lot of really awesome stuff there

493
00:36:39,980 --> 00:36:42,320
that's if you're gonna if they're going
to want things are going to look at

494
00:36:42,320 --> 00:36:48,200
initially i would recommend checking the
Savior's out alright the really cool

495
00:36:48,200 --> 00:36:48,919
stuff

496
00:36:48,920 --> 00:36:53,570
the modular c2 are modular ic2 so
previously the listeners are hard to

497
00:36:53,570 --> 00:36:57,620
integrate into the codebase so if you
want to do something like I want dns it

498
00:36:57,620 --> 00:37:00,650
would have been extremely extremely
difficult to try to implement all those

499
00:37:00,650 --> 00:37:04,520
transports and implement all the
communications now the listeners are

500
00:37:04,520 --> 00:37:07,910
encapsulated and self-contained modules
these are you can also do

501
00:37:07,910 --> 00:37:12,020
drag-and-drop these so if you have a
private c2 module one of which will

502
00:37:12,020 --> 00:37:15,980
demonstrate you can just take that code
and just drag and drop it right into

503
00:37:15,980 --> 00:37:20,030
your empire folder when it starts up you
load up and you have like a brand-new

504
00:37:20,030 --> 00:37:25,010
listener transport that you can use will
go over kind of the structure of how

505
00:37:25,010 --> 00:37:29,420
this will work for listener modules at
least two functions are required you

506
00:37:29,420 --> 00:37:33,079
need to generate comms function which
will generate just the communications

507
00:37:33,079 --> 00:37:37,250
functions that are passionate the agents
like you know send packets are get tasks

508
00:37:37,250 --> 00:37:41,030
like send response that type of thing so
we'll go over like why this is pretty

509
00:37:41,030 --> 00:37:45,079
cool thinking a little bit on a start so
if you actually have to have a server

510
00:37:45,079 --> 00:37:48,079
component you need to start function
which will start the the server side

511
00:37:49,760 --> 00:37:53,599
oh and the listeners are responsible for
language support so you know python our

512
00:37:53,599 --> 00:37:58,579
powers or whatever so if you want
staging supported so safer dns the first

513
00:37:58,579 --> 00:38:03,230
dns modulator right we'll probably only
support communications and not staging

514
00:38:03,230 --> 00:38:06,589
that will go over how you can kind of
integrate those so you need like

515
00:38:06,589 --> 00:38:09,410
something that generates the launcher
the little one liner launcher something

516
00:38:09,410 --> 00:38:13,009
generates the key negotiation stage and
something generates the agent so nothing

517
00:38:13,010 --> 00:38:19,789
too crazy for listeners HTTP the red
like we mentioned originally cpus read

518
00:38:19,789 --> 00:38:24,410
my flask that routing packets base64 and
stuff into a cookie value which is kind

519
00:38:24,410 --> 00:38:26,299
of house deconflict on the server side

520
00:38:26,299 --> 00:38:30,410
this module will generate the Python a
powershell launcher staging code like

521
00:38:30,410 --> 00:38:34,339
you know hold the whole complete package
and if you would like to modify kind of

522
00:38:34,339 --> 00:38:38,869
the communications as far as I kind of
changing up the communication profile

523
00:38:38,869 --> 00:38:40,160
how it looks on the wire

524
00:38:40,160 --> 00:38:43,190
it's pretty easy to go in there and say
like I want a different cookie value i

525
00:38:43,190 --> 00:38:46,760
want to not be 64 this I want to stuff
into a you know a different field a

526
00:38:46,760 --> 00:38:49,849
different header you know I want to pin
binary data or something like that to

527
00:38:49,849 --> 00:38:54,829
the post like you know there's a lot of
things you can modify and then this is

528
00:38:54,829 --> 00:38:59,960
one of my favorite listeners so there's
a knot in internet explorer yeah the

529
00:38:59,960 --> 00:39:05,089
internet for him calm object and so the
listener itself will communicate over I

530
00:39:05,089 --> 00:39:09,500
explorer.exe is a hidden common object
which is initiated through powershell so

531
00:39:09,500 --> 00:39:14,150
it's fully proxy we're all that good
stuff and one of my favorites and I use

532
00:39:14,150 --> 00:39:16,820
every time I test is the fault of that
because it's amazing and

533
00:39:16,820 --> 00:39:21,530
it's kind of a good example of being
able to drag and drop her integrate your

534
00:39:21,530 --> 00:39:27,350
own techniques that you may think of as
far as you know initiating columns and

535
00:39:27,350 --> 00:39:31,580
then there's also the hcd-14 listener
which and super awesome

536
00:39:32,120 --> 00:39:35,299
basically it's just a lot for passing so
if you've got to inspire service we

537
00:39:35,300 --> 00:39:38,810
don't have where people can connect to
the team server and you know just

538
00:39:38,810 --> 00:39:44,090
interact with agents simultaneously and
if you have two servers and you share

539
00:39:44,090 --> 00:39:47,450
the negotiation key you can actually
just passed agents between two which

540
00:39:47,450 --> 00:39:51,410
makes it nice for you know servers that
are classified for doing different

541
00:39:51,410 --> 00:39:55,850
things like fishing vs post-sex wishes
you know long halt stuff like that

542
00:39:57,500 --> 00:40:03,710
oh we also completely redid kind of the
hop listener so the hot PHP pivot you

543
00:40:03,710 --> 00:40:07,520
can drop this little of PHP file and
whatever server you want comments a lot

544
00:40:07,520 --> 00:40:10,820
more stable it should be a lot more
stable sorry should say we had a lot of

545
00:40:10,820 --> 00:40:14,000
people report issues within the past but
hopefully this will allow you to build

546
00:40:14,000 --> 00:40:17,420
more complex infrastructure dropping
these PHP files having your agents

547
00:40:17,420 --> 00:40:20,300
connect to them and kind of connect back
to the control server we're definitely

548
00:40:20,300 --> 00:40:24,410
looking for more language-based
redirector so if anyone's right ASB JSP

549
00:40:24,410 --> 00:40:27,649
you know whatever else type of you know
the more that we have kind of the better

550
00:40:27,650 --> 00:40:31,430
again right now always PHP i'm not a web
dev it took me a lot longer than it

551
00:40:31,430 --> 00:40:35,089
should have to write you know 40 lines
of PHP and then I remembered why I like

552
00:40:35,090 --> 00:40:40,880
Python powershell so much but anyways uh
but there's also a new interpreter with

553
00:40:40,880 --> 00:40:45,770
some errands so it allows you to easily
pass agents and you know to you know

554
00:40:45,770 --> 00:40:49,880
interpreter called strike or whatever
the transfer methods are the same and so

555
00:40:49,880 --> 00:40:53,570
it just take on the back and it takes
advantage of power soit's the old invoke

556
00:40:53,570 --> 00:40:59,990
shellcode I'm you know that has it
doesn't anymore for reasons but the one

557
00:40:59,990 --> 00:41:03,200
that we use actually integrates that it
actually can run meterpreter shell could

558
00:41:03,200 --> 00:41:07,100
pretty easily makes it for spawning come
over to the other frameworks pretty

559
00:41:07,100 --> 00:41:12,500
pretty seamless hope so this is the most
exciting to me

560
00:41:12,500 --> 00:41:17,180
so the new packet structure one of the
motivations behind it was allow you to

561
00:41:17,180 --> 00:41:21,200
do was to allow you to be able to build
modules that would operate over third

562
00:41:21,200 --> 00:41:27,620
party sites third-party trusted sites so
think dropbox think private just think

563
00:41:27,620 --> 00:41:29,009
arm

564
00:41:29,010 --> 00:41:32,310
you know one drive like kind of think
anything is like third-party trusted

565
00:41:32,310 --> 00:41:36,390
sites that are very likely going to be
allowed out as far as egress goes with

566
00:41:36,390 --> 00:41:41,250
with organizations but up until this
point there wasn't an easy way to get

567
00:41:41,250 --> 00:41:45,270
like a full agent with full
communications and the full post xscape

568
00:41:45,270 --> 00:41:49,800
ability than part this is kind of where
we realize the power of a framework and

569
00:41:49,800 --> 00:41:52,920
that we just had to figure out this one
transport part and then we got all the

570
00:41:52,920 --> 00:41:56,670
post exploitation components for free we
didn't have to build a POC are you know

571
00:41:56,670 --> 00:42:00,090
it's kind of a separate tool that would
operate over these new transports so let

572
00:42:00,090 --> 00:42:03,780
your mud imagination run with it also
totally don't break any terms of service

573
00:42:03,780 --> 00:42:07,110
we're not lawyers please don't sue me
and drop box please don't hate me but we

574
00:42:07,110 --> 00:42:12,000
totally have a dropbox boc which are
going to show you guys the the deal with

575
00:42:12,000 --> 00:42:16,170
here's the deal with the the third-party
transports at this point we are not

576
00:42:16,170 --> 00:42:21,660
going to publicly release the dropbox or
similar type of third-party see two

577
00:42:21,660 --> 00:42:25,890
transports we are going to build a
template that would show you how to

578
00:42:25,890 --> 00:42:30,540
theoretically interact with their party
sites we are going to maybe write a blog

579
00:42:30,540 --> 00:42:34,500
post that would theoretically talk about
how you'd theoretically design a module

580
00:42:34,500 --> 00:42:38,940
of this type but you know we we care a
lot about the ethics of often suis care

581
00:42:38,940 --> 00:42:43,650
a lot about red vs blue and Carlos talk
was awesome a purple teaming and to us

582
00:42:43,650 --> 00:42:47,910
the line was kind of drawn and that we
have a a pretty reasonably robust kind

583
00:42:47,910 --> 00:42:51,779
of functional post exploitation toolkit
something that would let anyone

584
00:42:51,780 --> 00:42:54,840
downloaded and then run it through
third-party dropbox sites in a way that

585
00:42:54,840 --> 00:42:58,620
probably won't be detected from most
blue team's was just slightly over the

586
00:42:58,620 --> 00:43:02,040
line for us at this point we're not
saying we won't release it at some point

587
00:43:02,040 --> 00:43:06,090
in the future but for now it's staying
with us and if anyone submit your

588
00:43:06,090 --> 00:43:10,470
request for third-party modules we may
or may not accept them may be leaning

589
00:43:10,470 --> 00:43:14,669
more towards not so write them yourself
will try to show you proof of concept

590
00:43:14,670 --> 00:43:19,050
how but you're going to have to kind of
put a little bit of work in the coolest

591
00:43:19,050 --> 00:43:23,040
part with this is you cannot switch your
listeners so if you have different

592
00:43:23,040 --> 00:43:26,790
transports with that little generate
comms methods

593
00:43:26,790 --> 00:43:30,420
well generally common method it will
generate just the snippet of code that

594
00:43:30,420 --> 00:43:36,060
can be dynamically like dexter II you
know eval to order for python and you

595
00:43:36,060 --> 00:43:39,420
can update the transports on the fly and
you can do this in mass so if you had

596
00:43:39,420 --> 00:43:41,200
all your agents running over

597
00:43:41,200 --> 00:43:45,129
HTTP you could switch all of them to
start running over dropbox and Aldous

598
00:43:45,130 --> 00:43:49,030
which simultaneously are you could have
your certain ones switch from dropbox to

599
00:43:49,030 --> 00:43:53,170
onedrive to IE common objects to dns or
you know whatever transports you have so

600
00:43:53,170 --> 00:43:56,140
there's a management switch listener
module which makes this really easy and

601
00:43:56,140 --> 00:44:00,549
what kind of demo and just real quick on
this uh in the next few months we would

602
00:44:00,550 --> 00:44:06,130
really like SMB we don't know if they're
those couple PLC's from a few people out

603
00:44:06,130 --> 00:44:10,150
there that we're going to try to draw
from matt starting to work on dns laying

604
00:44:10,150 --> 00:44:13,720
the groundwork we know that's a big
missing protocol for us that's a that's

605
00:44:13,720 --> 00:44:17,500
a biggie and I don't know if it sure
people don't have to shout it out but if

606
00:44:17,500 --> 00:44:20,740
you guys have any other ideas for
interesting transports that fit within

607
00:44:20,740 --> 00:44:24,910
kind of the architecture that we
describe we would love to hear it

608
00:44:24,910 --> 00:44:28,089
you know write some new transport you
know I cmpe or you know whatever else

609
00:44:28,089 --> 00:44:31,089
maybe we have some point you might try
to do the Active Directory see two

610
00:44:31,089 --> 00:44:33,730
components the property sets things like
that

611
00:44:33,730 --> 00:44:47,980
alright now we're going to try to show
demos you that over there

612
00:44:49,750 --> 00:44:57,970
what I need to their ok and now actually

613
00:44:58,569 --> 00:45:41,170
ok over now over

614
00:45:43,060 --> 00:46:24,520
one over now you do this with all of
your agents it doesn't just have to be

615
00:46:24,520 --> 00:46:28,150
one of them people

616
00:46:35,670 --> 00:48:22,230
one more just large alright okay that
was really awkward like a pseudo spawn

617
00:48:22,230 --> 00:48:25,230
kind of thing

618
00:48:25,910 --> 00:48:33,558
alright yeah to me smirnoff ices okay so
we're going to see if this actually

619
00:48:33,559 --> 00:48:37,640
works it's either gonna be kinda cool
are really awesome idea that are really

620
00:48:37,640 --> 00:48:38,690
terrible idea

621
00:48:38,690 --> 00:48:53,119
so crappy it also can get help trap

622
00:48:53,119 --> 00:48:57,619
I don't have my phone on Team it anyways
all right yeah I turned it off if anyone

623
00:48:57,619 --> 00:49:01,250
has any questions why I'm doing this
before i try to push all the code on any

624
00:49:01,250 --> 00:49:10,609
questions or we can try to answer why
this is starting up no question

625
00:49:11,900 --> 00:49:15,950
alright that's really terrible to work
we're going to go put the code in like 5

626
00:49:15,950 --> 00:49:20,359
minutes right we get off the stage so
it'll be in a branch called tsuboi no

627
00:49:20,359 --> 00:49:26,058
underscore beta on the new and adaptive
threat / Empire all locations so thank

628
00:49:26,059 --> 00:49:29,059
you guys so much as you can

629
00:49:35,020 --> 00:49:41,860
I forgot about it

