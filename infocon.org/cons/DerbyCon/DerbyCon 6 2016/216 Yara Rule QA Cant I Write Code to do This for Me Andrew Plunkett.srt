1
00:00:00,000 --> 00:00:05,069
early here I think we got everybody they
closed the doors on me so we go

2
00:00:05,069 --> 00:00:10,110
um thanks everybody for coming to my
talk man-to-man your pocket and we'll be

3
00:00:10,110 --> 00:00:14,428
talking about automating your rule
quality assurance is there anybody in

4
00:00:14,429 --> 00:00:17,850
the room and doesn't know what you are
is where all security people up we got

5
00:00:17,850 --> 00:00:18,840
one guy doesn't know

6
00:00:18,840 --> 00:00:23,279
no you said he doesn't know let me they
were all security people so we probably

7
00:00:23,279 --> 00:00:28,948
all heard of Yarra in a lot of our jobs
we have to use your rules in this one a

8
00:00:28,949 --> 00:00:32,700
project that i took up the kind of
manage our current rule set at where I

9
00:00:32,700 --> 00:00:33,630
work

10
00:00:33,630 --> 00:00:39,300
so hopefully you got get them it's a mom
you said is talk are you might tip over

11
00:00:39,300 --> 00:00:44,940
my arm I'm a technical Lackey security
guy at industrial Megacorp don't you

12
00:00:44,940 --> 00:00:49,440
guys watch mr. robot but I think I work
for evil Corp I'm not I I whenever i

13
00:00:49,440 --> 00:00:51,960
watch the show I think they're talking
about my company when i'm really not

14
00:00:51,960 --> 00:00:57,510
sure our former contestants reading
guide to that for a few years are now

15
00:00:57,510 --> 00:01:00,899
I'm one of the good guys on the blue
team i tried to stop the red team and

16
00:01:00,899 --> 00:01:06,900
usually don't don't do very well at it
folks on the IPO g side of things lately

17
00:01:06,900 --> 00:01:11,670
I've been getting interested in that my
company does industrial things so that

18
00:01:11,670 --> 00:01:15,930
gives me the opportunity also do
industrial things just kinda cool and

19
00:01:15,930 --> 00:01:21,180
I'm from Cincinnati which is way cooler
than normal so yeah yeah all right on

20
00:01:21,180 --> 00:01:27,210
the Cincinnati people are what is Yara
that's a picture of Victor Alvarez the

21
00:01:27,210 --> 00:01:32,100
guy who started the our project that's
been around since about $MONTH 2008 it's

22
00:01:32,100 --> 00:01:36,000
my great for all data you can use it
practically to find anything I was going

23
00:01:36,000 --> 00:01:38,759
to put like what you could find that I
realize you can actually use it to find

24
00:01:38,759 --> 00:01:43,649
anything because it scans all data for
anything that you want to look for so

25
00:01:43,649 --> 00:01:47,909
it's byte strings by strings specific
range and offsets allow regular

26
00:01:47,909 --> 00:01:52,470
expressions all the all the fun regex
stuff and then it's got modules those

27
00:01:52,470 --> 00:01:56,490
are kind of new they're really useful
they kind of understand certain certain

28
00:01:56,490 --> 00:02:01,469
things about executable files so that
you don't have the to write everything

29
00:02:01,469 --> 00:02:04,020
out and kind of already understand
certain things about what you're looking

30
00:02:04,020 --> 00:02:07,829
for and then the route the true power
comes from the complex conditional

31
00:02:07,829 --> 00:02:10,649
statement at the end so you're not only
searching for things but you can tell it

32
00:02:10,649 --> 00:02:13,500
to search for things in certain places
and other things

33
00:02:13,500 --> 00:02:16,920
not in certain places before you could
create an alert is optimized for

34
00:02:16,920 --> 00:02:20,790
incredibly fast pattern-matching that's
really based on how it creates the

35
00:02:20,790 --> 00:02:23,010
ruleset it was a bunch of nice things

36
00:02:23,010 --> 00:02:27,810
so your rules set is optimized so what
is searching for is really well done and

37
00:02:27,810 --> 00:02:31,620
it's useful for looking for things and
its security people we tend to look for

38
00:02:31,620 --> 00:02:35,970
things like one of our main job
essentially defined bad so we look for

39
00:02:35,970 --> 00:02:38,760
things all the time so a lot of reasons
to use yarn

40
00:02:38,760 --> 00:02:43,049
ah there's an example your rule i think
everybody kind of knows what we're

41
00:02:43,050 --> 00:02:48,600
looking for but this is the general idea
you have rules name some curly brackets

42
00:02:48,600 --> 00:02:52,829
metadata about the rule the that's an
actually optional you know you don't

43
00:02:52,830 --> 00:02:56,400
have to put anything in there but a good
rules generally have at least two wrote

44
00:02:56,400 --> 00:02:56,940
it

45
00:02:56,940 --> 00:03:02,010
contact for you want to update the rule
and then I usually a reference to write

46
00:03:02,010 --> 00:03:05,429
up from where the rule came from our
sample their deal with sometimes got

47
00:03:05,430 --> 00:03:09,300
hands in there and things like that and
then you got strings which is really

48
00:03:09,300 --> 00:03:12,930
what you're looking for Strings it's
weird that it's kind of like it's always

49
00:03:12,930 --> 00:03:13,650
there

50
00:03:13,650 --> 00:03:15,870
it's called strings even if you're
looking for hex they still call it

51
00:03:15,870 --> 00:03:16,830
strings

52
00:03:16,830 --> 00:03:21,180
it's on the string section I don't know
why it's like that but I guess that's

53
00:03:21,180 --> 00:03:24,510
just how it's been always and then you
got your condition at the end of a very

54
00:03:24,510 --> 00:03:29,100
simple conditional basically saying find
one of any of those strings so certain

55
00:03:29,100 --> 00:03:33,390
dollar sign on in that you can see the
string variable names are certain 123 so

56
00:03:33,390 --> 00:03:39,750
it's basically saying any of these
certified at least 10 a lot of useful

57
00:03:39,750 --> 00:03:42,720
reason for your we use it for a lot of
different things when I where I

58
00:03:42,720 --> 00:03:48,600
currently work we have a tool that
stands endpoints and this is really why

59
00:03:48,600 --> 00:03:52,200
I came upon this project because
thatthat's in production it scans our

60
00:03:52,200 --> 00:03:55,649
workstations we really can't screw with
our workstations our users will get

61
00:03:55,650 --> 00:04:00,329
really mad if we blue screen or take up
too much cpu we get black toolbar don't

62
00:04:00,329 --> 00:04:03,540
like security guys we don't we don't
need to get you know worse about it

63
00:04:04,079 --> 00:04:07,950
oh we have it in our sandbox so you know
everybody's got a sandbox now you run

64
00:04:07,950 --> 00:04:11,339
samples through you can you can
implement your in your sandbox to tell

65
00:04:11,340 --> 00:04:18,180
you what what sample what alert hit on
the sample you just ran through it so if

66
00:04:18,180 --> 00:04:21,660
you've got sample you got rules to
identify starting samples you run

67
00:04:21,660 --> 00:04:25,470
example for your sandbox it'll basically
spit out a this is this and we have

68
00:04:25,470 --> 00:04:26,670
rules for it and this is

69
00:04:26,670 --> 00:04:30,480
the right up for it so if you need more
information huh

70
00:04:30,480 --> 00:04:36,240
virustotal retro hunt virustotal
intelligence but you probably should let

71
00:04:36,240 --> 00:04:41,640
you essentially search for these your
signatures to search for past samples

72
00:04:41,640 --> 00:04:46,289
previous samples and current future
samples as well Victor Alvarez actually

73
00:04:46,290 --> 00:04:51,090
works for virustotal now they use yard
in the back end to do that why you can

74
00:04:51,090 --> 00:04:54,900
use your search virus toes because the
guy who wrote dark parts of our total

75
00:04:54,900 --> 00:04:57,929
now going on him for doing that

76
00:04:57,930 --> 00:05:02,700
virustotal actually a google company now
so I'm sure you make bank you can use

77
00:05:02,700 --> 00:05:07,440
your to-do email scanning we actually
have a cool so if they get past are you

78
00:05:07,440 --> 00:05:13,560
know commercial product we also run your
rules on all emails and attachments that

79
00:05:13,560 --> 00:05:19,620
come in for for Intel that we have
developed in-house our analysis if you

80
00:05:19,620 --> 00:05:22,260
don't manual analysis you can always use
our world i really don't find it very

81
00:05:22,260 --> 00:05:26,370
useful and usually if i'm doing manual
analysis because i don't have a rule

82
00:05:26,370 --> 00:05:29,730
that are unfolding what it was but you
can create your rules from doing manual

83
00:05:29,730 --> 00:05:33,000
analysis which is nice and there are
some companies out there that literally

84
00:05:33,000 --> 00:05:37,710
run yarra r is an ids there's actually a
company in Cincinnati they're going to

85
00:05:37,710 --> 00:05:41,609
really great job with it but essentially
is an IDs that runs your rules over

86
00:05:41,610 --> 00:05:45,480
network captures and they're doing a
really good job with i'll mention your

87
00:05:45,480 --> 00:05:50,430
name but you look them up for some
issues with collecting your rules a rule

88
00:05:50,430 --> 00:05:54,600
take time to create the i personally
don't really like reverse engineering

89
00:05:54,600 --> 00:05:59,190
and that's me right there in front of
the giant chalkboard going whenever I

90
00:05:59,190 --> 00:06:02,520
have to reverse engineer something i
don't really like to do it and I

91
00:06:02,520 --> 00:06:08,370
generally start thinking about other
things like samurai jack shit so public

92
00:06:08,370 --> 00:06:10,950
roles are available that's the beauty of
it there's a lot of people out there who

93
00:06:10,950 --> 00:06:14,580
like the right your rules and I can just
basically take their they write a nice

94
00:06:14,580 --> 00:06:17,640
write-up on our sample i don't have to
do my reverse engineering i can take

95
00:06:17,640 --> 00:06:21,539
their rules great don't have to do it my
life sweet talk about samurai jack

96
00:06:21,540 --> 00:06:25,650
well there's a problem with that you
really should not put user-supplied

97
00:06:25,650 --> 00:06:27,090
input straight into production

98
00:06:27,090 --> 00:06:31,229
uh if you if you're accepting someone
public rule it's not you didn't write it

99
00:06:31,230 --> 00:06:34,380
you don't know the quality that role you
want to work with your tools you really

100
00:06:34,380 --> 00:06:37,340
can't put into production especially in
a production environment where

101
00:06:37,340 --> 00:06:40,549
you know people are creating things and
the shop floor is going down it's like

102
00:06:40,550 --> 00:06:43,880
millions of dollars and you get fired
for it so you really can't take you to

103
00:06:43,880 --> 00:06:46,729
find putting just throw it straight into
production which is really the whole

104
00:06:46,729 --> 00:06:50,630
point of this part we had to create some
way to do quality assurance on you

105
00:06:50,630 --> 00:06:53,630
supplied rules didn't have to reverse
engineer think all day

106
00:06:54,560 --> 00:06:58,280
oh so their submission Republicans
either is the general issues that we

107
00:06:58,280 --> 00:07:01,460
have when dealing with public schools
and trying to put them into our tour

108
00:07:02,570 --> 00:07:08,659
oh so you have multiple different
collections of rules do they overlap are

109
00:07:08,660 --> 00:07:11,330
the different collections of rules
looking for the exact same thing so one

110
00:07:11,330 --> 00:07:14,270
of the things you have to do is
duplicate the collections of rules if

111
00:07:14,270 --> 00:07:16,849
you're pulling from four different
collections of rules have to be

112
00:07:16,850 --> 00:07:21,020
duplicate them also that you're only
looking for one thing at a time do they

113
00:07:21,020 --> 00:07:24,859
work with are told the person of yarn we
actually use it with a cool that we

114
00:07:24,860 --> 00:07:28,520
simply wrote my company so we have to
basically make sure that the rule works

115
00:07:28,520 --> 00:07:31,280
with our version of Yara is actually
really simple problem to overcome

116
00:07:31,280 --> 00:07:33,650
because our QA users are cool

117
00:07:33,650 --> 00:07:38,719
so anybody can do that i mean really the
versioning issue with with your if

118
00:07:38,720 --> 00:07:42,650
you're using an old version of your you
have to make sure that you're queuing

119
00:07:42,650 --> 00:07:46,849
with your version of yard because as
newer features are implemented into Yura

120
00:07:46,850 --> 00:07:49,610
new rules will work with your old
version yet to make sure that everything

121
00:07:49,610 --> 00:07:56,539
works right so it was kind of funny do
they even compile because yes some

122
00:07:56,539 --> 00:07:59,930
people upload things the public
repositories that don't even compile the

123
00:07:59,930 --> 00:08:04,580
rule the rule literally doesn't even
work with Yara so you got to make sure

124
00:08:04,580 --> 00:08:06,469
that it actually will compile and run

125
00:08:06,470 --> 00:08:09,530
oh and then this one is kind of
important for us

126
00:08:09,530 --> 00:08:13,580
I used to be an analyst so so I don't
like false-positive anybody's waited

127
00:08:13,580 --> 00:08:17,930
through false positive day in and day
out don't like false positive so we had

128
00:08:17,930 --> 00:08:20,720
to develop a way to cut at least at
least get an idea of what kind of false

129
00:08:20,720 --> 00:08:26,030
positive rate we're going to deal with
when dealing with these rules and then

130
00:08:26,030 --> 00:08:29,270
is the role with relative efficiently
this was another huge thing for our pool

131
00:08:29,270 --> 00:08:37,549
of we stand our endpoints with with a
whole lot of rules and we can't we can't

132
00:08:37,549 --> 00:08:41,359
open it up the whole cpu our users will
complain about it so we have to throttle

133
00:08:41,360 --> 00:08:45,350
it so if a rule is not written
efficiently it will slow down the length

134
00:08:45,350 --> 00:08:48,470
of the whole scan in our scans will
never complete oral take a month and a

135
00:08:48,470 --> 00:08:50,209
half to complete and we really can't
have

136
00:08:50,209 --> 00:08:53,989
I was another reason why we had to do
this is some rules will compile and

137
00:08:53,990 --> 00:08:57,290
don't have great false positive rate but
they have super complicated regular

138
00:08:57,290 --> 00:09:00,529
expressions and they'll just take
forever to run with our tool we have to

139
00:09:00,529 --> 00:09:05,329
make sure that you know they will least
run in a reasonable amount of time so

140
00:09:05,329 --> 00:09:08,239
now we're going to go over the steps
automating York away

141
00:09:08,240 --> 00:09:12,019
I'm just kind of simple stuff really
nothing groundbreaking but it was it was

142
00:09:12,019 --> 00:09:14,959
after trying to do this myself either
that the step that I had to take the

143
00:09:14,959 --> 00:09:21,079
automated qi so the first thing is you
need a service that does this and only

144
00:09:21,079 --> 00:09:25,459
this and it can't really do anything
else because you're doing performance

145
00:09:25,459 --> 00:09:30,050
depends on the length of time it takes
for a rule to run so it has to be

146
00:09:30,050 --> 00:09:34,429
uniform across scans with a rule so you
can't really have anything else running

147
00:09:34,429 --> 00:09:39,889
or else your times gonna be all so it
doesn't even have to be a big server it

148
00:09:39,889 --> 00:09:45,709
can be really small the as long as the
scan sequentially or uniform on the same

149
00:09:45,709 --> 00:09:49,189
piece of hardware so that the time we'll
all end up being the same so it doesn't

150
00:09:49,189 --> 00:09:54,379
need to be big can be you know a really
small vm if you really want but ya don't

151
00:09:54,379 --> 00:09:56,779
do anything else on it

152
00:09:56,779 --> 00:10:01,220
you need a way of automating the
updating of all of your collections of

153
00:10:01,220 --> 00:10:04,279
rules you don't really want to pull
Reapers all the time it's really simple

154
00:10:04,279 --> 00:10:10,279
just get a good account you know use ssh
key so that you can automate the pulling

155
00:10:10,279 --> 00:10:14,149
of these repos on a daily basis or
however you want to do it doesn't matter

156
00:10:14,149 --> 00:10:18,199
we pulled once a day and then use
fashion crime to see the best script put

157
00:10:18,199 --> 00:10:22,519
in your crontab and pulleys represented
a super-simple is the easy part it took

158
00:10:22,519 --> 00:10:23,389
me like 10 minutes

159
00:10:23,389 --> 00:10:29,240
no problem no and i love that picture
crying and so I gotta admit on a lot of

160
00:10:29,240 --> 00:10:32,929
my slides i could really come up with a
picture for so i just googled like

161
00:10:32,929 --> 00:10:36,439
something on that slide and there's some
really weird pictures that came up the

162
00:10:36,439 --> 00:10:40,910
other side has really where pictures and
I'm just gonna go ahead and say that so

163
00:10:40,910 --> 00:10:43,850
copy all the files into a new directory
since a lot of these collections of

164
00:10:43,850 --> 00:10:47,149
rules actually share rules um you know
they'll both don't be an Intel report

165
00:10:47,149 --> 00:10:53,299
out there that's really big thumb and
one repo will one repo rules will pick

166
00:10:53,299 --> 00:10:56,720
up that rule and put it in another repo
rule will see the same info report and

167
00:10:56,720 --> 00:11:00,199
pull that ruling as well so the first
thing you have to do is take all the

168
00:11:00,199 --> 00:11:02,599
rules from all the all the requisite you
updated

169
00:11:02,600 --> 00:11:05,990
copy into a new directory the problem is
you're going to have named collision so

170
00:11:05,990 --> 00:11:09,560
I the right rules basically say hey this
file already exists but name in this

171
00:11:09,560 --> 00:11:14,089
directory if it does have one the end
attitude in blah blah

172
00:11:14,089 --> 00:11:19,130
super simple um and when I start for
name collisions I got this nice graph

173
00:11:19,130 --> 00:11:23,600
talking about how I guess we have really
strength baby names now because in a

174
00:11:23,600 --> 00:11:28,670
long time ago you would get name
collisions when making babies so the

175
00:11:28,670 --> 00:11:31,279
other stuff is really simple there's a
bunch of file maintenance stuff that we

176
00:11:31,279 --> 00:11:35,240
had to do you know it user-supplied
input you've never really know what

177
00:11:35,240 --> 00:11:38,420
you're going to get in some things break
when you're trying to scrape the weird

178
00:11:38,420 --> 00:11:42,259
filenames so first things you have to do
is take pics based out of file names i

179
00:11:42,259 --> 00:11:46,880
think everybody in this room hates faces
and filename just being tech guys it

180
00:11:46,880 --> 00:11:50,389
screws up things you know app for as
long as I can remember I always put

181
00:11:50,389 --> 00:11:54,680
underscores instead of spaces in my file
name but that's the first thing I had to

182
00:11:54,680 --> 00:11:57,529
do with basically removes basis for
filenames kind of screwed up the rest of

183
00:11:57,529 --> 00:12:01,279
my script that's coming on the weekend
empty files also screws up my scripts

184
00:12:01,279 --> 00:12:03,949
and yes there were any files and these
repos I don't know how I got there I

185
00:12:03,949 --> 00:12:08,209
wonder why they're not they're playing
more but they're in there and then you

186
00:12:08,209 --> 00:12:12,138
have to remove duplicates using hashes
this was one of the things we're even if

187
00:12:12,139 --> 00:12:13,579
they had the same name

188
00:12:13,579 --> 00:12:17,569
I basically just renamed him to make
sure that I wasn't actually you know

189
00:12:17,569 --> 00:12:21,139
even if it rule has the same name that
it doesn't that it actually has

190
00:12:21,139 --> 00:12:25,339
different content so I didn't want to
just remove them based on file name I

191
00:12:25,339 --> 00:12:28,579
want to actually take a half of each
rule and then remove the pits that way

192
00:12:29,120 --> 00:12:32,600
the beauty is that after i didn't want i
read this go to a couple times because

193
00:12:32,600 --> 00:12:35,360
you'll find out that we have to remove
duplicate a couple different times

194
00:12:35,360 --> 00:12:40,550
throughout the steps so this was

195
00:12:40,550 --> 00:12:45,829
see one of the hardest part of it all is
the rule file can have multiple rules in

196
00:12:45,830 --> 00:12:50,060
it uh and for performance testing you
really need to break out each one of

197
00:12:50,060 --> 00:12:54,260
those will separately you need to take
that rule father has multiple rules in

198
00:12:54,260 --> 00:12:58,220
it rip out each one separately and put
it in its own file that you can prove

199
00:12:58,220 --> 00:13:01,490
through performance testing based on
each individual rule because you have a

200
00:13:01,490 --> 00:13:05,540
rules file in one rule in it bad it will
ruin the whole skin if you try to scan

201
00:13:05,540 --> 00:13:09,019
the whole file with the argument ruin
the whole concept look nobody's gonna

202
00:13:09,019 --> 00:13:14,839
know what um yes I had to break them out
separately of the rejects but it's kind

203
00:13:14,839 --> 00:13:17,180
of complicated put me on the
day-and-a-half just come up with this

204
00:13:17,180 --> 00:13:22,640
regex uh because I don't know it had to
be greedy and not be greedy

205
00:13:23,209 --> 00:13:27,500
did you do is you supplied input again
kinda screwed me on this one because

206
00:13:27,500 --> 00:13:30,829
most people write rules a certain way
but some people write a really weird and

207
00:13:30,829 --> 00:13:34,640
it broke my shoulder edx I had to start
over from scratch and this is their

208
00:13:34,640 --> 00:13:37,850
Lander I don't know where and how this
picture came from but i had to put in

209
00:13:37,850 --> 00:13:41,240
there when I found this picture was like
whatever redneck school friends I get it

210
00:13:41,750 --> 00:13:45,649
um so you have to create a separate rule
firework regional so i have to use your

211
00:13:45,649 --> 00:13:49,910
reg ex to rip out each one individually
you gotta put them in its own file and

212
00:13:49,910 --> 00:13:55,910
then you know put all those into a new
directory arm that name of the file is

213
00:13:55,910 --> 00:13:59,240
the name of the rules for each row has
no name and face and said hey we'll make

214
00:13:59,240 --> 00:14:02,300
the name of the file the actual name of
the rule in that file and then avoid

215
00:14:02,300 --> 00:14:07,250
name collisions and then your does a
weird thing now with module so they had

216
00:14:07,250 --> 00:14:12,230
the PE module which is really useful a
lot of people use modules now there's

217
00:14:12,230 --> 00:14:17,180
also the hash module the mat our math
module health module on there's Cooper

218
00:14:17,180 --> 00:14:22,699
module we don't use the cuter one but um
I didn't want to go in and try and parse

219
00:14:22,700 --> 00:14:26,959
what modules each will use so I didn't
really think i just added i imported

220
00:14:26,959 --> 00:14:30,619
every module into every room if it
doesn't use it who cares but it was

221
00:14:30,620 --> 00:14:34,190
really just an easy way all i did is
prepended the file in every important

222
00:14:34,190 --> 00:14:37,220
right so it's four of them I just
imported all for imports and every

223
00:14:37,220 --> 00:14:41,959
single rule easy people and that was an
image that came up when I search the

224
00:14:41,959 --> 00:14:49,130
word for a single google which I . so so
now that we've cleaned everything up we

225
00:14:49,130 --> 00:14:52,850
can actually run the freaking test so we
got we got a whole environment laid out

226
00:14:52,850 --> 00:14:54,060
everything is set up to

227
00:14:54,060 --> 00:14:58,589
we can run that run the test um what you
want for this test is a couple gigs of

228
00:14:58,590 --> 00:15:05,220
no-good files there's also a guy on the
yard change actually came up with like

229
00:15:05,220 --> 00:15:08,430
nine gigs of good strings you could
probably also use that which is

230
00:15:08,430 --> 00:15:12,900
literally just strings strings that are
found in a commonly on Windows systems

231
00:15:12,900 --> 00:15:18,090
but we also have a whole giant repo of
known good exe you can make them

232
00:15:18,090 --> 00:15:21,450
yourself that hard you know download
from cnet or whatever just things that

233
00:15:21,450 --> 00:15:25,350
you know are good that you can run your
tools against this is your your false

234
00:15:25,350 --> 00:15:29,730
positive repo yeah don't use for chance
on you again screw up

235
00:15:31,230 --> 00:15:35,220
yeah we're seeing that all right on

236
00:15:35,760 --> 00:15:39,120
but basically you just want to hold a
good set of known stuff so that of your

237
00:15:39,120 --> 00:15:42,660
rules and create an alert on the known
good stuff . a good rule is going to go

238
00:15:42,660 --> 00:15:46,439
wild in your environment create massive
pot so you don't want no good things the

239
00:15:46,440 --> 00:15:51,780
skin against so the first thing we do is
have to roll this so you don't duplicate

240
00:15:51,780 --> 00:15:57,569
effort home it's already gone through
all of our our initial QA so you know

241
00:15:57,570 --> 00:16:00,600
that this rule was pretty much that's
gonna you're gonna want to run it so the

242
00:16:00,600 --> 00:16:04,140
first thing you do is hash it that way
when you run the q18 next time if you've

243
00:16:04,140 --> 00:16:08,880
already ran if you just check the hash
say if I already ran QA on this has if I

244
00:16:08,880 --> 00:16:12,810
have been skipping and what is
essentially what essentially does is

245
00:16:12,810 --> 00:16:16,770
that the first time you run this you
will have like thousands of thousands of

246
00:16:16,770 --> 00:16:19,829
rules every time after that you only
have like four or five you don't need to

247
00:16:19,830 --> 00:16:24,270
run all thousand rules again everyday
you really just need to run this 45 and

248
00:16:24,270 --> 00:16:28,319
so we just do it based on fashion first
thing you do is take the head temper

249
00:16:28,320 --> 00:16:31,980
compilation errors this is really easy
it failed out almost immediately the

250
00:16:31,980 --> 00:16:35,580
scan it literally takes like . 15
seconds or something like that you

251
00:16:35,580 --> 00:16:38,970
basically say this rule the garbage i
can't use it super simple that room

252
00:16:38,970 --> 00:16:42,420
while so check for false positives
essentially running against your known

253
00:16:42,420 --> 00:16:43,170
good set

254
00:16:43,170 --> 00:16:46,949
if you get alerts back count the number
of alerts put it in the file say you

255
00:16:46,950 --> 00:16:50,670
probably don't want to use this rule
because it alerts on good data works

256
00:16:50,670 --> 00:16:54,870
rule and then the time to scan this is
kind of tricky i can't say i did this

257
00:16:54,870 --> 00:17:00,000
actually the best way possible but it
works a essentially I just in Python

258
00:17:00,000 --> 00:17:06,540
pickup started timer call the subprocess
the courtyard with my rule and then stop

259
00:17:06,540 --> 00:17:07,149
the timer

260
00:17:07,150 --> 00:17:10,750
just completed and then take the Delta
that much time elapsed

261
00:17:10,750 --> 00:17:14,800
um you can do it like system time and a
bunch of different ways to calculate the

262
00:17:14,800 --> 00:17:19,510
time it took to run but i just did it
kind of easiest what which works

263
00:17:19,510 --> 00:17:22,240
perfectly for what we're doing i didn't
really need to get too technical on it

264
00:17:22,240 --> 00:17:27,220
and it works fine so after running all
these tests you end up with a CSV that

265
00:17:27,220 --> 00:17:30,490
looks kind of like what I put there you
have your hash you have your exit code

266
00:17:30,490 --> 00:17:35,350
that the number of alerts you have the
total time elapsed and then these last

267
00:17:35,350 --> 00:17:39,760
three things are really important and
they they actually go on the my last

268
00:17:39,760 --> 00:17:43,270
bullet point there is you need a way for
your scanning cool that you're using

269
00:17:43,270 --> 00:17:48,850
these rules for to also affect your rule
QA so you use these roles in production

270
00:17:48,850 --> 00:17:54,219
you need a way to track how often these
rules are false positive or not this way

271
00:17:54,220 --> 00:17:57,250
you can turn your rules and you have a
rule is false positive all the time you

272
00:17:57,250 --> 00:18:01,750
want to basically take put it back into
your your rules your production rules

273
00:18:01,750 --> 00:18:06,700
file basically say skip this from now on
I'm it past our automated QA but in

274
00:18:06,700 --> 00:18:13,570
reality in production digital garbage so
it past our automated way but the manual

275
00:18:13,570 --> 00:18:16,899
analysis this rule has been turned off
so that's really important or else you

276
00:18:16,900 --> 00:18:23,410
get rule that hit all the time but it
will always pass our QA arm and then it

277
00:18:23,410 --> 00:18:25,990
says that you come up with unconditional
at the end and basically said that the

278
00:18:25,990 --> 00:18:30,010
past all these tests move it to a folder
this folder is now production I'm kind

279
00:18:30,010 --> 00:18:34,750
of simple and easy and then like I just
said you gotta have a way to track true

280
00:18:34,750 --> 00:18:38,470
positives and false positives rule this
is this is kind of one of the things

281
00:18:38,470 --> 00:18:39,580
that was really important

282
00:18:39,580 --> 00:18:42,909
this wasn't built into our cool
originally but we found out that it's

283
00:18:42,910 --> 00:18:48,970
really important to do that as time goes
on arm i was going to do a demo but i

284
00:18:48,970 --> 00:18:50,980
gotta admit the demo would have been
pretty lame

285
00:18:50,980 --> 00:18:54,250
it would have been me hitting enter on
the command line and then waiting for

286
00:18:54,250 --> 00:18:59,140
CSP output you have one realized in the
TL but would look just like this but

287
00:18:59,140 --> 00:19:03,340
also forgot my token to log into the VPN
of my work so I can't actually do it

288
00:19:04,300 --> 00:19:09,700
I found that out last night i was about
to go home and get it so yeah I guess I

289
00:19:09,700 --> 00:19:13,570
guess we could have done that I could
ask my Cincinnati guys but everything in

290
00:19:13,570 --> 00:19:16,330
but uh yeah

291
00:19:16,330 --> 00:19:18,918
where can you find the code this was not

292
00:19:18,919 --> 00:19:23,869
technically um done through my work
essentially because we didn't want to

293
00:19:23,869 --> 00:19:27,830
get lawyers involved with trying to open
source it my boss basis said go ahead

294
00:19:27,830 --> 00:19:31,158
and open source of boat will just won't
tell anybody I was like all right fine i

295
00:19:31,159 --> 00:19:36,139
didn't mind I didn't my personal cut if
if everybody has and they don't have

296
00:19:36,139 --> 00:19:40,248
this I did it all on my personal time
and I'm letting my work use the code

297
00:19:41,629 --> 00:19:45,619
yeah and there's a little disclaimer to
go along with this

298
00:19:45,619 --> 00:19:48,830
I'm not a full-time developer I don't
write C++ or something this is all done

299
00:19:48,830 --> 00:19:54,408
in Python and when going through this
this was almost straight like I i had to

300
00:19:54,409 --> 00:19:58,429
stack overflow question like every
single step in this process and then rip

301
00:19:58,429 --> 00:20:02,899
the code out you know mangled together
into one I currently have and work so it

302
00:20:02,899 --> 00:20:08,059
is really not good good looking but it
works and it works perfectly fine so I'm

303
00:20:08,059 --> 00:20:13,309
hopefully people who maintain large sets
of yarbles can use this code to do it

304
00:20:13,309 --> 00:20:16,039
themselves and I really hope you get
some benefit out of it

305
00:20:16,039 --> 00:20:18,950
it saves us a lot of time I don't have
to do this is part of my daily job

306
00:20:18,950 --> 00:20:25,340
anymore place is run by itself so lovely
i think i crush time i'm like super

307
00:20:25,340 --> 00:20:30,289
super super early so i guess that
anybody have any questions about any of

308
00:20:30,289 --> 00:20:31,279
this

309
00:20:31,279 --> 00:20:35,480
I can't really talk about it much more
kids pretty straightforward and really I

310
00:20:35,480 --> 00:20:40,279
just have codeshare so does anybody have
anything that's me watching samurai jack

311
00:20:40,279 --> 00:20:45,259
now that I don't have to reverse
engineer stuff all day then what's up

312
00:20:45,259 --> 00:20:53,509
quality assurance then we must not be in
development world man i tried to call

313
00:20:53,509 --> 00:20:58,309
the the project your Aaka like your QA
all is one word but the guys I work with

314
00:20:58,309 --> 00:21:02,119
basically said that was stupid and they
said that you should just call it yard

315
00:21:02,809 --> 00:21:13,350
yeah with the looks of it actually

316
00:21:13,350 --> 00:21:18,449
I i gotta admit the yard the our
documentation awesome that there's a

317
00:21:18,450 --> 00:21:23,010
read the manual for yarra that it's
really well done and it's updated with

318
00:21:23,010 --> 00:21:26,039
each release so it's not one of the
things was like outdated or anything

319
00:21:26,039 --> 00:21:31,140
it's really good and then there's a
there's a guy who runs a tool much like

320
00:21:31,140 --> 00:21:35,070
ours but he sells it and he's in Germany
and he wrote a really good manual for

321
00:21:35,070 --> 00:21:40,530
how to write of good performance for
rules like projections to avoid common

322
00:21:40,530 --> 00:21:43,678
mistakes of making rules and that's kind
of a supplement to the read the memo

323
00:21:43,679 --> 00:21:50,309
forgetting not shoot was his name-o i'll
tell you what i'll put a link to it in

324
00:21:50,309 --> 00:21:54,149
my github so anybody can read it but
it's a really good memo that kind of go

325
00:21:54,150 --> 00:21:57,690
along with the manual about common
pitfalls to avoid when writing yarbles

326
00:21:57,690 --> 00:22:08,100
that meant but like oh you know it's
funny that I was going to put that in

327
00:22:08,100 --> 00:22:13,139
there i don't have a cool handle man I'm
just and Republican you know I did I

328
00:22:13,140 --> 00:22:17,760
just don't understand every day god man
don't leave hacker here at least not a

329
00:22:17,760 --> 00:22:31,559
hand i'm going to give you don't want
the NSA you know what I'm in sure they

330
00:22:31,559 --> 00:22:34,620
actually say I think my Twitter and I
don't have one man

331
00:22:34,620 --> 00:22:40,439
ok Mike I do have 1i don't use itself
has got a point

332
00:22:41,010 --> 00:22:47,490
yeah I should be well spent

333
00:22:47,490 --> 00:22:50,790
question

334
00:22:50,790 --> 00:22:53,670
okay well thanks for coming to my talk
i'll give you guys some time back to go

335
00:22:53,670 --> 00:22:54,390
to someone for something

