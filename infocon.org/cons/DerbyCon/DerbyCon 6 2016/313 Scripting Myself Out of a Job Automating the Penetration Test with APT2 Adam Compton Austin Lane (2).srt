1
00:00:00,000 --> 00:01:02,670
which is how it has a timer there yet
said and we're gonna have venison as I

2
00:01:02,670 --> 00:01:23,490
get closer not right

3
00:01:23,490 --> 00:01:26,490
yep

4
00:01:28,350 --> 00:01:32,158
can you hear me

5
00:01:32,159 --> 00:01:38,490
oh yeah that works alright today first
of all I'm Adam Compton Austen Lane will

6
00:01:38,490 --> 00:01:44,399
work for rapid seven on a day jobs but i
still hear from that but still today

7
00:01:44,399 --> 00:01:48,960
we're going to be talking about
automated testing tool kit and in

8
00:01:48,960 --> 00:01:54,329
testing automation along the way along
with that before we get started with

9
00:01:54,329 --> 00:01:54,960
much

10
00:01:54,960 --> 00:02:00,329
Who am I everybody has the obligatory go
in my slides so who am i father my

11
00:02:00,329 --> 00:02:06,508
husband hillbilly birth and raising
pentester for most of my professional

12
00:02:06,509 --> 00:02:08,280
life to it

13
00:02:08,280 --> 00:02:10,979
trained as a programmer been doing that
off and on over my life

14
00:02:10,979 --> 00:02:16,680
as well hello love it all wouldn't give
any of it up i love my children and my

15
00:02:16,680 --> 00:02:21,239
wife as well of course after now I love
my mom i love them all

16
00:02:21,239 --> 00:02:27,360
they're up here somewhere so everyone my
name is austin Lane this is my first

17
00:02:27,360 --> 00:02:30,299
talk so bear with me

18
00:02:30,299 --> 00:02:35,310
alright um i spent about seven years as
a developer making horrible insecure

19
00:02:35,310 --> 00:02:38,819
stuff and then I switched over to
security and spent the last four years

20
00:02:38,819 --> 00:02:41,819
Breaking all that stuff so it's been
pretty exciting

21
00:02:43,950 --> 00:02:47,790
not quite as long as Adam but you know
it's been a lot of fun so I'm really

22
00:02:47,790 --> 00:02:49,108
excited to be here

23
00:02:49,109 --> 00:02:54,750
yeah i'm working on a beard up so like I
said here today we're talking about

24
00:02:54,750 --> 00:03:00,540
automation a pen testing our tool the
automated in automated testing tool kit

25
00:03:00,540 --> 00:03:06,810
basically in our experiences pen testers
we found that most tests sort of go

26
00:03:06,810 --> 00:03:13,560
through a routine there's you know the
the Recon discovery finding out what's

27
00:03:13,560 --> 00:03:18,389
on the network that you're looking at
testing simple services you know there's

28
00:03:18,389 --> 00:03:22,319
things you do for ftp there's things you
do for SMB there's things you do for

29
00:03:22,319 --> 00:03:27,480
netbios stuff like that uh default
credits you're running lists you know

30
00:03:27,480 --> 00:03:32,488
you're going through app appliances that
have admin admin or something like that

31
00:03:32,489 --> 00:03:37,169
you moved to common exploits msoe 267
things like that that will get you

32
00:03:37,169 --> 00:03:43,290
access to a machine once you get access
to start dumping credit info you know

33
00:03:43,290 --> 00:03:46,950
using many cats something like that to
pull info off of the machine and then

34
00:03:46,950 --> 00:03:51,660
turn around and use that as a pivot to
get it further access into the network

35
00:03:52,380 --> 00:03:56,910
um what we found is this routine can be
slow on large networks you know the

36
00:03:56,910 --> 00:04:00,569
bigger the network the more instances
beach service you're going to have the

37
00:04:00,569 --> 00:04:03,988
more of each of these that you're going
to have to go through and say okay and

38
00:04:03,989 --> 00:04:08,010
honest anonymous at admin admin stuff
like that on every single one of them

39
00:04:08,010 --> 00:04:12,899
um what we found is most of this can be
automated linux in general and a lot of

40
00:04:12,900 --> 00:04:14,940
other tools have some great stuff

41
00:04:14,940 --> 00:04:16,940
bosch Python Perl Ruby

42
00:04:16,940 --> 00:04:21,738
no anything you wanted to do to run some
of these automatically but in each

43
00:04:21,738 --> 00:04:25,429
instance you know you're running your
own things you're having to to come up

44
00:04:25,430 --> 00:04:30,500
with quickbooks crap bash script to you
know do the same task over and over

45
00:04:30,500 --> 00:04:34,580
again and then dumped all of that into a
file that you can review so we wrote a

46
00:04:34,580 --> 00:04:42,830
tool to help with the automation this is
apt to UM so let's go through sort of

47
00:04:42,830 --> 00:04:47,450
attempt typical pentest routine
generally start off with nmap you're

48
00:04:47,450 --> 00:04:51,380
scanning all the ports your clients
giving you 1000 / 8 so you're gonna be

49
00:04:51,380 --> 00:04:55,159
there all day looking at everything
that's running on this giant network

50
00:04:55,160 --> 00:04:59,570
when you get the results back you go
through and you say ok I see port 21 so

51
00:04:59,570 --> 00:05:03,170
i'm going to run ftp against this I'm
gonna look for things like anonymous FTP

52
00:05:03,170 --> 00:05:08,420
or you know what's on being hosted on
these ftp servers i see port 8443

53
00:05:08,420 --> 00:05:13,700
through and I'm gonna take screenshots
of all the websites that are there on

54
00:05:13,700 --> 00:05:17,210
here to see you know are these custom
sites are these appliances that are

55
00:05:17,210 --> 00:05:22,310
hosting these services i'm going to run
something like Nick maybe that looks for

56
00:05:22,310 --> 00:05:27,410
like oh this is a vulnerable CMS you
know so you can use this against this 1s

57
00:05:27,410 --> 00:05:31,220
else can if it's 443 you're gonna see
like what versions of SLA running

58
00:05:31,220 --> 00:05:32,330
because you know you

59
00:05:32,330 --> 00:05:35,090
yeah it's good for the reports and you
might actually be able to do something

60
00:05:35,090 --> 00:05:38,299
with like heart heart bleed or something
like that

61
00:05:38,300 --> 00:05:42,350
445 SMB there's a whole bunch of stuff
you can do on that Knoll enumeration

62
00:05:42,350 --> 00:05:48,919
open shares msoe 267 if the client is
really lazy and the list goes on

63
00:05:48,919 --> 00:05:54,260
um then you run responder you do you
capture some hashes you do some real a

64
00:05:54,260 --> 00:05:58,580
attacks and you know basically at that
point you've got access because it

65
00:05:58,580 --> 00:06:03,320
always gets you access and at the end of
the day you take over you you've

66
00:06:03,320 --> 00:06:08,240
obtained your goal you you've gotten
access to what is that your client you

67
00:06:08,240 --> 00:06:13,700
know is deemed important enough that you
know you you're successful you you're on

68
00:06:13,700 --> 00:06:16,789
the domain controller your duck going
through their database getting credit

69
00:06:16,790 --> 00:06:23,480
card information you know you you've got
their domain admin credentials etc all

70
00:06:23,480 --> 00:06:26,930
Thank You Oscar so

71
00:06:27,590 --> 00:06:32,750
like Alison was a necessary endured and
test methodology not mythology but a

72
00:06:32,750 --> 00:06:37,190
standard routine you go through started
beginning with the way through main very

73
00:06:37,190 --> 00:06:43,580
manual process for the most part that it
works it works everybody does it to some

74
00:06:43,580 --> 00:06:47,960
degree some fashion everybody goes along
the same thing is it broken

75
00:06:48,500 --> 00:06:52,520
well if it's not broken should we be
fixing it well the thing is is it is

76
00:06:52,520 --> 00:06:59,359
slightly flawed if you want to say that
way in that it relies on the human for

77
00:06:59,360 --> 00:07:04,250
much of it and it's humans doing
monotonous repetitive actions over and

78
00:07:04,250 --> 00:07:07,970
over humans tend to get a little sloppy
over time especially if you're doing the

79
00:07:07,970 --> 00:07:15,410
same task a lot so getting into that
manual pot processes parsing through all

80
00:07:15,410 --> 00:07:17,930
that data can be a little slow

81
00:07:17,930 --> 00:07:20,990
you might get a little slap happy if
you're doing this for like 12 hours a

82
00:07:20,990 --> 00:07:24,530
day or if it's like two in the morning
for heaven's sake of the customers

83
00:07:24,530 --> 00:07:27,619
making you do a nighttime test or
something like that you might glance

84
00:07:27,620 --> 00:07:31,820
over ass over something that you should
be looking at and not flag on it

85
00:07:32,720 --> 00:07:38,150
consistency are you checking every
single service instance on the network

86
00:07:38,150 --> 00:07:41,479
for the same test I'll that or you just
sampling things of that nature

87
00:07:42,260 --> 00:07:49,789
repeat abilities and concept it's also
like if i do engage with targeting

88
00:07:49,790 --> 00:07:53,780
customer that's every has a student
engagement i do a test for them every

89
00:07:53,780 --> 00:07:56,059
six months i do the first one

90
00:07:56,060 --> 00:08:01,430
awesome does the 16 months from now so
forth is my method of my base

91
00:08:01,430 --> 00:08:03,380
methodology the same as his

92
00:08:03,380 --> 00:08:06,620
yes but is he going to go through
testing at the same way you're not

93
00:08:06,620 --> 00:08:10,640
probably not maybe for majority of it

94
00:08:10,640 --> 00:08:15,620
ok so there's some discrepancy between
our methodologies there's some of the

95
00:08:15,620 --> 00:08:20,060
repeatability from the customer's point
of view things of that nature there

96
00:08:20,060 --> 00:08:25,190
again it all relies on human your
experience things of that nature so it

97
00:08:25,190 --> 00:08:29,000
is slightly flawed not necessarily
broken

98
00:08:29,000 --> 00:08:35,030
well we can fix a lot of the underlying
aspects of this some of it we can tweak

99
00:08:35,030 --> 00:08:38,900
things of that nature and in particular
automation can help with a lot of this

100
00:08:38,900 --> 00:08:41,000
thus

101
00:08:41,000 --> 00:08:46,340
government automation and intestine but
still so you might ask why don't you

102
00:08:46,340 --> 00:08:51,560
just use insert favorite monolithic
vulnerability scanning engine

103
00:08:52,760 --> 00:08:59,180
well you can you can but there's certain
issues with that certain good things for

104
00:08:59,180 --> 00:09:02,870
example some good things are there's a
good number of them to choose from open

105
00:09:02,870 --> 00:09:07,850
source commercial some of them are
fairly cheap some of them are free

106
00:09:09,470 --> 00:09:14,120
they're fairly useful and very useful in
some scenarios but maybe not in all for

107
00:09:14,120 --> 00:09:19,460
example you have you find the world's
best web application scanner that's

108
00:09:19,460 --> 00:09:25,070
great but that doesn't really happy on
other types of testing or you find

109
00:09:25,070 --> 00:09:29,750
something that's really good on one type
of testing it has lapses and other kinds

110
00:09:29,750 --> 00:09:34,610
of so you're not gonna find anything
that covers everything perfectly and i'm

111
00:09:34,610 --> 00:09:40,970
not going to say that apt does either
but it gives a good base to plug things

112
00:09:40,970 --> 00:09:44,240
in AZ or topic we'll talk about it later

113
00:09:44,240 --> 00:09:47,750
well why not just use one of these large
scanners to begin with

114
00:09:47,750 --> 00:09:54,890
well while some of them are cheap some
of them can be fairly expensive and yeah

115
00:09:54,890 --> 00:09:59,780
I believe that some of them can be
fairly yet Spencer some of them can be

116
00:09:59,780 --> 00:10:07,069
fairly resource-intensive i % y power up
one of these nice to have on scanners on

117
00:10:07,070 --> 00:10:08,030
my laptop here

118
00:10:08,030 --> 00:10:12,380
this happens to be fairly be if you want
you can handle it in a vm go processing

119
00:10:12,380 --> 00:10:16,490
i might not be able to fire up too many
other VMS on here it's eating up most of

120
00:10:16,490 --> 00:10:19,850
my ram processor things of that nature
so okay

121
00:10:20,510 --> 00:10:25,220
it kind of ties my hands a little bit on
that but more importantly you get down

122
00:10:25,220 --> 00:10:29,900
to let's say you want to add a new check
or a new test or a new tool or something

123
00:10:29,900 --> 00:10:35,990
to that big monolithic thing how easy is
it in almost every case it's going to be

124
00:10:35,990 --> 00:10:37,580
fairly difficult

125
00:10:37,580 --> 00:10:40,760
yeah they might have a bug reporting
bored or something like that but that

126
00:10:40,760 --> 00:10:46,790
might take weeks months so forth down
the road for get fixed or get added in

127
00:10:46,790 --> 00:10:53,719
or things of that nature as we're
talking with apt later on we'll show how

128
00:10:53,720 --> 00:10:54,320
easy it

129
00:10:54,320 --> 00:10:57,860
Israel will discuss how easy it is just
add your own tool in their your own

130
00:10:57,860 --> 00:11:03,080
commands your own update things of that
nature so there again i'm not saying

131
00:11:03,080 --> 00:11:06,260
that in these big vulnerability scanning
engines are bad

132
00:11:06,260 --> 00:11:10,160
I no means am I saying that I'm just
saying that they're good for what

133
00:11:10,160 --> 00:11:14,689
they're targeting we're looking for
something a little more Universal in

134
00:11:14,690 --> 00:11:17,510
there a lot of this

135
00:11:17,510 --> 00:11:22,069
ok so you want to get something a little
more broad spectrum look at some other

136
00:11:22,070 --> 00:11:26,780
things those out there who have used
cali which should be probably every

137
00:11:26,780 --> 00:11:30,079
single one of you out there for the most
part i would be willing to guess you are

138
00:11:30,080 --> 00:11:33,890
aware that most of the tools that you're
going to be using on an engagement

139
00:11:33,890 --> 00:11:37,520
things of that nature of your problem
find in cali might not be the absolute

140
00:11:37,520 --> 00:11:42,319
latest version or you might have to add
a one or two tools and therefore most

141
00:11:42,320 --> 00:11:48,080
part there's quite a few in there and as
a basis we tend to use Kelly as well so

142
00:11:48,080 --> 00:11:53,180
we build tools on top of things of that
nature isn't required but still we do so

143
00:11:53,180 --> 00:11:57,680
so you want to automate some stuff as a
awesome mentioned before there's lots of

144
00:11:57,680 --> 00:12:00,920
different ways you have bash you have
any of your scripting languages things

145
00:12:00,920 --> 00:12:05,569
of that but also you mind a lot of these
and other tools have their own API

146
00:12:05,570 --> 00:12:09,920
interfaces things of that nature lot of
vulnerability scanners have restful api

147
00:12:09,920 --> 00:12:14,569
is that you interface with metasploit
has the msgr pc interface you can use

148
00:12:14,570 --> 00:12:18,260
any number of other things and if you
told isn't it

149
00:12:18,260 --> 00:12:24,350
insert court why doesn't have a kind of
interface you can give you actual output

150
00:12:24,350 --> 00:12:28,700
of some kind of you can parse you can
script around that takes a little bit of

151
00:12:28,700 --> 00:12:33,560
regs some parsing well manipulation but
you can do it just a matter of how much

152
00:12:33,560 --> 00:12:41,300
you're willing to make the data fit the
model that you want so we went through a

153
00:12:41,300 --> 00:12:43,670
lot of that process got it going

154
00:12:43,670 --> 00:12:46,670
took care of a lot of the base where get
it up

155
00:12:46,670 --> 00:12:51,260
we have several modules in there at the
moment and we're pretty happy with what

156
00:12:51,260 --> 00:12:57,319
we have so far and it's hope grow a lot
more but we ended up writing apt to the

157
00:12:57,320 --> 00:13:03,770
little aside yes I know apt to is a
weird acronyms that by that is just it's

158
00:13:03,770 --> 00:13:07,360
my habit of naming tools after home

159
00:13:07,360 --> 00:13:13,180
and acronyms that i like to make fun of
so sorry about that but yeah I have

160
00:13:13,180 --> 00:13:17,890
other ones out there you can find them
but so what is apt to it is a Python

161
00:13:17,890 --> 00:13:25,120
program that is basic has built around
three basic bubbles of parts first last

162
00:13:25,120 --> 00:13:28,570
one of them is the knowledge base where
every piece of data that is gathered

163
00:13:28,570 --> 00:13:34,300
process towards a historian it's a just
a knowledge base at the moment

164
00:13:35,019 --> 00:13:39,490
generic knowledgebase no real relevance
there that's the red safe and so forth

165
00:13:39,490 --> 00:13:45,430
any other you think you which says when
certain actions should be run when set

166
00:13:45,430 --> 00:13:49,180
other one shouldn't be water
preconditions and postconditions it's

167
00:13:49,180 --> 00:13:54,310
the real brain of the operation there
near the modules modules are the same as

168
00:13:54,310 --> 00:14:01,119
they are in any other large program it's
like your medical modules your plugins

169
00:14:01,120 --> 00:14:06,850
for in maps whatever it's the modules
for apt what they can be there very

170
00:14:06,850 --> 00:14:12,910
atomic they have they perform small
actions they have preconditions

171
00:14:12,910 --> 00:14:15,189
postconditions things of that nature

172
00:14:15,190 --> 00:14:19,720
awesome we'll be talking about that more
in a moment taken out step down pic

173
00:14:19,720 --> 00:14:26,230
right now it's based you can pull in
multiple inputs right now the primary

174
00:14:26,230 --> 00:14:30,399
input that we have written up for
pulling from is just in map almost

175
00:14:30,399 --> 00:14:33,339
everybody uses in map at some point
during their engagement typically near

176
00:14:33,339 --> 00:14:37,570
the beginning so close in map it can
parse out the output build-up invent

177
00:14:37,570 --> 00:14:45,490
tree things of that nature of the event
. it was in all the data from in map

178
00:14:45,490 --> 00:14:50,320
pulls it out by hose port service in the
other data that might be an in map and

179
00:14:50,320 --> 00:14:53,560
any other tool there is put in the
knowledge base in the process that

180
00:14:53,560 --> 00:15:00,849
builds out the event tree or vent list
for the bank you to process the next one

181
00:15:00,850 --> 00:15:05,470
where are you at once it's built out
then it goes through pops off the top of

182
00:15:05,470 --> 00:15:06,399
the event queue

183
00:15:06,399 --> 00:15:11,680
that's ok what's the first action first
event ok which modules are listening for

184
00:15:11,680 --> 00:15:17,260
this as a precondition ok you three are
fine go process with it and then it goes

185
00:15:17,260 --> 00:15:20,260
to second one third one fourth one so
forth

186
00:15:21,070 --> 00:15:27,970
however that's fine that works but what
if a module has some output that can

187
00:15:27,970 --> 00:15:32,470
cause another event that's fine module
is not only can consume events but they

188
00:15:32,470 --> 00:15:36,640
can produce new events for other modules
that might be listening for them

189
00:15:36,640 --> 00:15:42,010
this is great for scenarios where you
might have something like one event is

190
00:15:42,010 --> 00:15:48,100
found you port 445 ok there's a module
listening for that it takes it checks to

191
00:15:48,100 --> 00:15:49,420
see if there's more sessions

192
00:15:49,420 --> 00:15:53,110
ok it finds that there's no sessions on
that particular instance it fires and

193
00:15:53,110 --> 00:15:57,670
advancing more sessions found on this
host another model not catch and got

194
00:15:57,670 --> 00:16:01,990
great you have no sessions and let me
try to do user enumeration it as user

195
00:16:01,990 --> 00:16:06,550
numeration if it's successful because he
found new users on this network a code

196
00:16:06,550 --> 00:16:10,150
is on there might be other modules that
are listening for that kind of been to

197
00:16:10,150 --> 00:16:11,290
do other things

198
00:16:11,290 --> 00:16:16,180
it's not always a linear path it might
grandchild branchy and in weight and

199
00:16:16,180 --> 00:16:21,040
branching things of that nature and it's
very dynamic at any point when you sit

200
00:16:21,040 --> 00:16:26,380
down at a network there's not a real way
to know which modules are going to be

201
00:16:26,380 --> 00:16:30,130
run in what order at what time on the
network based on the way the event he

202
00:16:30,130 --> 00:16:37,330
works and then processes keeps looping
and looping until then thank you

203
00:16:37,330 --> 00:16:42,610
reaches zero that if you can grow and
shrink as time goes on as other modules

204
00:16:42,610 --> 00:16:49,420
create new events and events and so
forth that is much detail into that as

205
00:16:49,420 --> 00:16:53,680
you probably need to know at this point
about means if you're interested later

206
00:16:53,680 --> 00:16:58,270
check out the code look at it help to us
but we'll get into other small aspects

207
00:16:58,270 --> 00:16:59,350
of that in a moment

208
00:16:59,350 --> 00:17:05,589
so yeah this apt tall out there that can
do things for you how does it help

209
00:17:06,699 --> 00:17:11,350
well helps with the right now the simple
aspects of your engagement is that first

210
00:17:11,349 --> 00:17:14,230
footstep on the network what are you
looking to do

211
00:17:14,230 --> 00:17:18,459
are you it'll go out or do
fingerprinting it'll go out check your

212
00:17:18,459 --> 00:17:23,560
anonymous login or check more sessions
they don't do something simple attacks

213
00:17:23,560 --> 00:17:26,589
things of this nature does all kind of
little things right now all the way

214
00:17:26,589 --> 00:17:32,290
through responder secret stoppers out
things like that the more common things

215
00:17:32,290 --> 00:17:33,490
are scripted up already

216
00:17:33,490 --> 00:17:33,920
more

217
00:17:33,920 --> 00:17:39,290
but it does it in a very efficient quick
manner and it does it much quicker than

218
00:17:39,290 --> 00:17:44,870
what I as a human could get in there and
doing that type in executed things like

219
00:17:44,870 --> 00:17:48,560
that no matter how many session windows
i have opened i might have eternal as I

220
00:17:48,560 --> 00:17:55,220
have I just can't type that fast it can
do it a lot faster also to add a new

221
00:17:55,220 --> 00:17:59,750
module two is fairly straightforward
they're getting talk about the actual

222
00:17:59,750 --> 00:18:03,710
anatomy of a module here a little bit
but it boils down to you have some

223
00:18:03,710 --> 00:18:08,510
metadata at the top that describes what
the module is and then little bit of

224
00:18:08,510 --> 00:18:12,890
other maintenance stuff and then finally
just the body that says run a command

225
00:18:12,890 --> 00:18:17,750
and process the output of that command
so ultimately you're just trying to

226
00:18:17,750 --> 00:18:24,200
write a parser for any given command and
some Python fairly straightforward lots

227
00:18:24,200 --> 00:18:28,820
of their already to take a look at
fairly simple to write if you're running

228
00:18:28,820 --> 00:18:34,280
this on Callie it's fairly ready to go
right off the bat one or two Python

229
00:18:34,280 --> 00:18:38,180
libraries that need to be installed so
well documented no issues there you

230
00:18:38,180 --> 00:18:41,450
clone it run it and it you're up and
going

231
00:18:41,960 --> 00:18:49,130
you can feed it a input right now of an
in map file xml file or a target range

232
00:18:49,130 --> 00:18:55,700
and it will go run in that Florian
yachts way so just quick little run down

233
00:18:55,700 --> 00:19:00,290
before I hand off to Austin here what
can it do can right now it can go and

234
00:19:00,290 --> 00:19:06,590
identify services system screenshot
whatever any user interface items seized

235
00:19:06,590 --> 00:19:12,350
GUI interface whether it's x11 VNC
webapps things of that nature finds file

236
00:19:12,350 --> 00:19:15,230
shares on the network can gain access

237
00:19:15,230 --> 00:19:19,400
yes ok fine search through there look
for interesting files and report on them

238
00:19:20,180 --> 00:19:23,840
oh you found a accounts on this is that
we have username look let's try to

239
00:19:23,840 --> 00:19:27,830
brute-force those touch on that later
with the safety levels remember remember

240
00:19:27,830 --> 00:19:32,419
that if we encounter scenario that
there's a Metasploit module that can

241
00:19:32,420 --> 00:19:36,770
help run our tests for something great
run the Metasploit module definitely

242
00:19:36,770 --> 00:19:41,240
make you said these other tools that are
out there that's what we're going for it

243
00:19:41,240 --> 00:19:45,110
captures hashes fine take it and dump it
off to jon or has cat or

244
00:19:45,110 --> 00:19:45,919
whatever-related

245
00:19:45,920 --> 00:19:53,180
like them go forth bows down to if there
is a file or coming out at command a

246
00:19:53,180 --> 00:19:56,660
binary that you want to run on
engagement from right now and linux

247
00:19:56,660 --> 00:20:01,190
environment you can probably write a
module forward fairly simply you're not

248
00:20:01,190 --> 00:20:05,210
having the right to do the action you're
just writing to execute the command and

249
00:20:05,210 --> 00:20:10,430
parts the output and teach it and to
have it so that other programs consuming

250
00:20:10,430 --> 00:20:13,700
at which point I hand off to Austin

251
00:20:13,700 --> 00:20:20,780
ok so like we mentioned earlier apt to
is a framework it's got a couple

252
00:20:20,780 --> 00:20:24,649
different sections the guts of which are
the modules and we mentioned that a few

253
00:20:24,650 --> 00:20:28,220
times there are three basic types of
modules

254
00:20:28,220 --> 00:20:32,270
the first is the input 1 this is
something that will take the input file

255
00:20:32,270 --> 00:20:37,879
say right now an nmap xml file parse it
out and and determine what hosting

256
00:20:37,880 --> 00:20:42,710
services available that it can run on
the second type of module is a reporting

257
00:20:42,710 --> 00:20:46,670
module this is at the end of end of
everything else has run it's going to go

258
00:20:46,670 --> 00:20:50,030
back through the knowledge base and
basically iterate through it and for

259
00:20:50,030 --> 00:20:56,510
example generate a semi nice-looking
HTML file that lists out all the hosts

260
00:20:56,510 --> 00:21:00,470
all the services on each of those hosts
many domains they're attached to an evil

261
00:21:00,470 --> 00:21:05,180
really found for each of these and the
links to the output that so you can

262
00:21:05,180 --> 00:21:08,690
basically just go through this and see
everything that was run everything that

263
00:21:08,690 --> 00:21:14,930
was found anything relevant to each of
these hosts the third and most important

264
00:21:14,930 --> 00:21:21,110
module i think is the action module this
is what each each program that would

265
00:21:21,110 --> 00:21:27,409
like to run any binary any command goes
inside an action module and it gets

266
00:21:27,410 --> 00:21:29,840
called upon from the event queue

267
00:21:29,840 --> 00:21:34,850
it's got a few standard properties name
description or pretty self-evident that

268
00:21:34,850 --> 00:21:39,439
what what is the name of the commands
can be run in this module description

269
00:21:39,440 --> 00:21:45,500
helps you know is this going to run us a
tool in discovery mode just to identify

270
00:21:45,500 --> 00:21:48,920
something or is this going to run some
sort of exploit mode to actually like

271
00:21:48,920 --> 00:21:51,980
try to create a you know a shell on the
machine or take advantage of it

272
00:21:52,520 --> 00:21:57,270
requirements this is typically the name
of the application that

273
00:21:57,270 --> 00:22:01,139
this module is going to run so if you're
trying to run it make a doorbuster

274
00:22:01,140 --> 00:22:06,090
module you would say the requirements
derby and then when apt to is run it

275
00:22:06,090 --> 00:22:09,240
will load up this module and try to
execute that and see if that's actually

276
00:22:09,240 --> 00:22:12,510
existing on the system it's not you get
a warning the beginning saying hey

277
00:22:12,510 --> 00:22:14,129
you're missing this

278
00:22:14,130 --> 00:22:19,110
you might want to go install it if you
are planning on running this module

279
00:22:19,110 --> 00:22:24,780
during the test for things like Python
libraries you can also make them a

280
00:22:24,780 --> 00:22:30,420
little more descriptive so whereas with
you know a binary you can typically run

281
00:22:30,420 --> 00:22:34,110
apt-get to install it on here maybe a
python library someone has a preferred

282
00:22:34,110 --> 00:22:38,550
method of doing it you can you can put
that in there you can say hey try

283
00:22:38,550 --> 00:22:43,139
running pip install and the library that
you need you know and that comes up as a

284
00:22:43,140 --> 00:22:46,470
nice helpful message for someone who
hasn't installed that library on their

285
00:22:46,470 --> 00:22:48,390
machine

286
00:22:48,390 --> 00:22:53,760
next up is the triggers this is what's
going to actually this module is going

287
00:22:53,760 --> 00:23:00,600
to be looking for this condition for it
to run so anytime a new services found

288
00:23:00,600 --> 00:23:05,520
the trigger new port 21 new port 445
that gets thrown up in the air and then

289
00:23:05,520 --> 00:23:08,070
any module that response to that says
that's me

290
00:23:08,070 --> 00:23:15,300
add me to the q anytime module runs and
it says well I found you know this thing

291
00:23:15,300 --> 00:23:20,760
is vulnerable to anonymous login or this
as Nolan numeration or I found

292
00:23:20,760 --> 00:23:21,780
credentials

293
00:23:21,780 --> 00:23:25,350
it's going to throw up a new event there
and any module that is triggered off of

294
00:23:25,350 --> 00:23:29,850
that says help let me add me to the q
those requirements are basically what

295
00:23:29,850 --> 00:23:34,020
allows us to not only make this dynamic
but chain multi multiple modules

296
00:23:34,020 --> 00:23:40,080
together and five him off in in sequence
so that you are you get a pretty good

297
00:23:40,080 --> 00:23:45,780
depth on what's going to run as this
thing progressives one of the most

298
00:23:45,780 --> 00:23:49,110
important things in here is the safety
level we've added to sin because there's

299
00:23:49,110 --> 00:23:53,909
definitely there are certain things that
you want to run but not all the time and

300
00:23:53,910 --> 00:23:57,300
depending on what networking running on
there are some things you never want to

301
00:23:57,300 --> 00:24:03,240
run so we've basically giving a scale of
one to five 5 is the safest this is

302
00:24:03,240 --> 00:24:05,040
discovery modules this is

303
00:24:05,040 --> 00:24:09,930
things like you know something like
known for Linux you can just see does

304
00:24:09,930 --> 00:24:13,410
this happen all sessions this is
something like uh-uh

305
00:24:14,370 --> 00:24:18,659
HTTP screenshot is you know just go on
take a picture of whatever is on the web

306
00:24:18,660 --> 00:24:24,600
server moving down in the middle so for
you might start doing more things that

307
00:24:24,600 --> 00:24:27,659
interact with servers three is where you
start getting into things like that's

308
00:24:27,660 --> 00:24:31,410
where we put responder so this is
something that might start doing things

309
00:24:31,410 --> 00:24:34,890
that interferes with network requests
and so you'll want to run this for a

310
00:24:34,890 --> 00:24:39,120
limited amount of time you maybe don't
want to run this at all so you're not

311
00:24:39,120 --> 00:24:44,669
gonna go down that far for is when you
get down into brute forcing the I'm we

312
00:24:44,670 --> 00:24:49,440
put it put it there so that you know if
there's sorry going back down to going

313
00:24:49,440 --> 00:24:52,200
the other way to is when you get into
things like brute-forcing where there's

314
00:24:52,200 --> 00:24:55,290
risk of locking out accounts and things
like that that could be disruptive to

315
00:24:55,290 --> 00:25:00,659
the client on a bigger level here and
finally one is things where there's a

316
00:25:00,660 --> 00:25:04,560
very real risk of just and kicking over
the server something like ms 0806 seven

317
00:25:04,560 --> 00:25:07,830
where like if you're trying to use it
there's a real chance that you know it

318
00:25:07,830 --> 00:25:12,659
could just kill that service altogether
and nobody can use it anymore so you

319
00:25:12,660 --> 00:25:16,800
know the safety levels are there to make
sure that you know it's only as

320
00:25:16,800 --> 00:25:21,240
destructive as you wanted to be and for
the most part if you run at for you know

321
00:25:21,240 --> 00:25:25,140
you can get a good amount of the modules
in and get things you need done without

322
00:25:25,140 --> 00:25:30,780
worrying about anybody getting mad at
you inside the module basically

323
00:25:30,780 --> 00:25:36,600
processes where everything happens the
event you will call process process in

324
00:25:36,600 --> 00:25:41,879
turn does things like you know you can
have it you know grab any targets

325
00:25:41,880 --> 00:25:46,470
related to a specific Porter service or
domain or whatever from the knowledge

326
00:25:46,470 --> 00:25:50,100
base and bring that back as a list and
then you can you know act on them

327
00:25:50,100 --> 00:25:54,929
however you want either run a command
against an individual list and run a

328
00:25:54,930 --> 00:25:58,590
single command against all of them it
depends on what would command you're

329
00:25:58,590 --> 00:26:06,570
going for limitations of the modules and
and the framework itself the first one

330
00:26:06,570 --> 00:26:10,080
and kind of one of the biggest ones the
tool needs to be non-interactive the way

331
00:26:10,080 --> 00:26:14,199
we've made this is is more or less to
fire-and-forget until the result

332
00:26:14,200 --> 00:26:21,370
come back uh if a tool is prompting you
for a yes or no input or to add

333
00:26:21,370 --> 00:26:25,600
something onto and middle of it you know
the way this runs its going to fire it

334
00:26:25,600 --> 00:26:29,139
off and then that prompt is gonna get
stuck there and then when the results

335
00:26:29,140 --> 00:26:34,420
come back that's all you're going to see
are we most of the models written so far

336
00:26:34,420 --> 00:26:38,800
have been ones where you can simply say
you know here's the tool named in the IP

337
00:26:38,800 --> 00:26:39,700
address

338
00:26:39,700 --> 00:26:47,020
go wait whatever timeout we give it
generally you can give it you know on

339
00:26:47,020 --> 00:26:50,950
the high end 15 minutes the most of them
will be done well before that something

340
00:26:50,950 --> 00:26:54,970
like responder we give it 15 minutes and
then we just kill it at that point and

341
00:26:54,970 --> 00:27:00,610
then see what is found in that amount of
time but those are things that you you

342
00:27:00,610 --> 00:27:06,370
aren't required to do anything to in the
meantime to get meaningful results back

343
00:27:07,330 --> 00:27:15,220
multithreading is tricky we basically
had it's real easy real fast to clog up

344
00:27:15,220 --> 00:27:18,970
the network with a whole bunch of stuff
running it once so we've set limits

345
00:27:18,970 --> 00:27:22,630
throughout we've got limits to the
number of threads that can be run at

346
00:27:22,630 --> 00:27:27,040
once and we've got limits to the number
of threads i think can be created for

347
00:27:27,040 --> 00:27:31,030
anyone tool so something like responder
you only want one of them running at

348
00:27:31,030 --> 00:27:34,270
once you don't want five instances of
responder trying to poison all the

349
00:27:34,270 --> 00:27:37,420
requests on the network at the same time
because then that's just gonna get messy

350
00:27:37,420 --> 00:27:41,680
but there's plenty of others where you
know the computer is perfectly happy

351
00:27:41,680 --> 00:27:44,530
running ten instances of the same
application at once just on different

352
00:27:44,530 --> 00:27:53,410
hosts so it's sort of a module by module
basis and in you know at that point is

353
00:27:53,410 --> 00:27:56,800
sort of down to whoever's writing that
module to use their best judgment on

354
00:27:56,800 --> 00:28:03,460
what they think given Network and handle
and what we try to do is just make it

355
00:28:03,460 --> 00:28:05,440
easy to implement these limits

356
00:28:05,440 --> 00:28:11,320
uh for whatever the case may be and
finally brute force with caution

357
00:28:11,320 --> 00:28:14,950
there's plenty of tools out there that
do all kinds of reinforcing for you know

358
00:28:14,950 --> 00:28:21,040
a number of logins you the best we can
do is add a safety level to that but

359
00:28:21,040 --> 00:28:24,220
because this is sort of running blind
until the end

360
00:28:24,220 --> 00:28:27,400
unless you're running an extreme for
Best verbose mode and you can just see

361
00:28:27,400 --> 00:28:31,570
everything happening at once you know
you can fire this off and then 15

362
00:28:31,570 --> 00:28:35,408
minutes later come back and find out is
lockout accounts on half a dozen systems

363
00:28:35,409 --> 00:28:39,909
because you weren't real careful with
how you were choosing it to fire these

364
00:28:39,909 --> 00:28:43,929
off with accounts are using or you
haven't checked the password policy

365
00:28:43,929 --> 00:28:49,990
policies see how many lockouts you could
do on one before you ran this so again

366
00:28:49,990 --> 00:28:54,610
safety levels are your friend and
finally another big one is non-standard

367
00:28:54,610 --> 00:29:00,520
pores really apt is dependent on the
inputs given to it from whatever

368
00:29:00,520 --> 00:29:05,770
scanning tool either running and map
through apt or running and map outside

369
00:29:05,770 --> 00:29:11,679
of it or in the future running insert
scanner here when that scanner uh looks

370
00:29:11,679 --> 00:29:16,780
at a service on a host and says this is
for 21 is probably ftp if that's the

371
00:29:16,780 --> 00:29:22,600
best it does that's the best we have to
go off of apt won't know that this file

372
00:29:22,600 --> 00:29:29,469
saying 21 is on here or let's say for
2,000 on a host apt doesn't know that

373
00:29:29,470 --> 00:29:34,659
poor 2000 if and map didn't mark that as
ftp it won't know what to do anything

374
00:29:34,659 --> 00:29:39,190
with that because it's not a standard
port and the service name return for it

375
00:29:39,190 --> 00:29:44,679
was an ftp so this will throw off some
modules with weird things and this is

376
00:29:44,679 --> 00:29:49,960
where sort of manual testing afterwards
comes in or using a scanner that can

377
00:29:49,960 --> 00:29:55,120
identify non-standard ports more
accurately using something like dash a

378
00:29:55,120 --> 00:29:58,840
on any map which will do a lot more
thorough check than just your typical

379
00:29:58,840 --> 00:30:05,709
masterpiece can uh so just sort of a
standard shit sanity check ask myself

380
00:30:05,710 --> 00:30:10,210
like is this actually useful is this
helping me I just came up with a little

381
00:30:10,210 --> 00:30:15,280
scenario where I sort of testing myself
against ATP I just said ok what if i'm

382
00:30:15,280 --> 00:30:21,100
sitting on a network and there's 30 ftp
services on these hosts how do i

383
00:30:21,100 --> 00:30:26,230
compared to what ATP can do so I went
down the list i said i'm going to check

384
00:30:26,230 --> 00:30:32,080
each of these for anonymous log just
something simple so you type ftp the IP

385
00:30:32,080 --> 00:30:33,970
address you wait for the the

386
00:30:33,970 --> 00:30:37,420
prompt type in anonymous and type in
whatever for the password and then you

387
00:30:37,420 --> 00:30:39,340
wait for the response to come back to
say

388
00:30:39,340 --> 00:30:45,310
yep you got an anonymous login or no
password rejected um in total of about

389
00:30:45,310 --> 00:30:49,270
five minutes to go through 30 servers
I'm not the fastest typer someone maybe

390
00:30:49,270 --> 00:30:53,950
it would say someone maybe doing a
manual check copying and pasting so

391
00:30:53,950 --> 00:30:56,500
they're going back and forth between
list of ips and what they're actually

392
00:30:56,500 --> 00:31:01,600
doing this is obviously not doing bad
scripting or something like that to go

393
00:31:01,600 --> 00:31:06,159
through these little faster apt was done
in 40 seconds for this whole list so

394
00:31:06,160 --> 00:31:10,900
that's right about one second per server
assuming ideal conditions you know on

395
00:31:10,900 --> 00:31:18,640
local network fast response time stuff
like that so let's extrapolate like any

396
00:31:18,640 --> 00:31:22,390
service you can think of typically what
you're going to do is you're going to

397
00:31:22,390 --> 00:31:25,390
take this can file and you're going to
see a list of here's all the stuff

398
00:31:25,390 --> 00:31:31,240
that's on this network you know we like
to go to ftp at SMB heb stuff like that

399
00:31:31,240 --> 00:31:35,320
you're going to go down say the the nmap
output you're going to say alright

400
00:31:35,320 --> 00:31:39,790
there's all these service all these
hosts have this service so lets you know

401
00:31:39,790 --> 00:31:45,250
grab this port out of the file let's cut
the column out with just the IPS and

402
00:31:45,250 --> 00:31:49,450
dump this new file this is now my IP
list going from looking for that map

403
00:31:49,450 --> 00:31:55,180
file to cutting it into a list
generously about 30 seconds next you

404
00:31:55,180 --> 00:31:58,720
pick a tool for the service you're gonna
say alright for this one I'm going to

405
00:31:58,720 --> 00:32:03,370
this is a port 80 so I'm gonna run nikto
against all of these ones coming back as

406
00:32:03,370 --> 00:32:09,129
port 80 if it's a tool that only accepts
one IP like something like SMB client

407
00:32:09,130 --> 00:32:11,680
where it's just like your points
directly at this host and seeing what

408
00:32:11,680 --> 00:32:12,610
comes back

409
00:32:12,610 --> 00:32:16,929
you're doing this repeatedly for each
one of those whether it's manually

410
00:32:16,930 --> 00:32:21,340
typing in going back forth cutting and
pasting if you're like me you have to

411
00:32:21,340 --> 00:32:24,550
read the help menu for every tool that
you use so you're going to add an extra

412
00:32:24,550 --> 00:32:28,210
minute on top of that just figuring out
what arguments am I supposed to add to

413
00:32:28,210 --> 00:32:35,530
this um that's another 30 seconds plus
of just taking the IP typing out the

414
00:32:35,530 --> 00:32:40,420
name of the tool and firing it off now
you repeat for every service that you

415
00:32:40,420 --> 00:32:44,890
want to do this too and every host that
you want to do it too and this baseline

416
00:32:44,890 --> 00:32:47,470
time of just selecting a poor

417
00:32:47,470 --> 00:32:52,659
are generating on list selecting a tool
getting the arguments running against

418
00:32:52,659 --> 00:32:55,570
everything this time adds up

419
00:32:55,570 --> 00:32:59,950
this is you know picking and choosing a
two-finger how to do it doing it against

420
00:32:59,950 --> 00:33:06,070
everything apt to remove this baseline
time it's all pretty much instant it's

421
00:33:06,070 --> 00:33:08,080
going to see a list of services

422
00:33:08,080 --> 00:33:10,990
it's got a bunch of things that
correspond to each of these and it's

423
00:33:10,990 --> 00:33:14,140
just going to know these arguments are
not run against that these are all the

424
00:33:14,140 --> 00:33:15,640
things i'm going to run against it

425
00:33:15,640 --> 00:33:19,450
let's go and so basically those minutes
of each tool that you're going to use

426
00:33:19,450 --> 00:33:23,650
are now wiped away in a matter of one or
two seconds for it you know just to

427
00:33:23,650 --> 00:33:29,830
throw this out here and wait for the
response from the server instead so i'll

428
00:33:29,830 --> 00:33:33,309
just give you sort of a we've talked a
lot about how this stuff run so now

429
00:33:33,309 --> 00:33:37,210
we're gonna do a sort of a video demo of
what actually running and we can show

430
00:33:37,210 --> 00:33:40,210
how the process works and what comes out
of it

431
00:33:40,840 --> 00:33:50,470
give me a second here to make sure and
I'm going and all right thing its work

432
00:33:50,470 --> 00:33:57,490
yeah there we go so first thing you're
not showing all right that's possible

433
00:33:57,490 --> 00:34:04,059
that's not displaying take that out for
spring and it's still not showing our

434
00:34:04,059 --> 00:34:15,759
yeah and a moment I will be alright in
the top here

435
00:34:16,270 --> 00:34:19,810
hey you see that yeah alright let's go
with that

436
00:34:20,859 --> 00:34:30,339
grab the mind going to take a little hit
31 long wait for me you don't want so

437
00:34:30,339 --> 00:34:35,320
one of the things you're going to know
it this is there's a bunch of files in

438
00:34:35,320 --> 00:34:41,050
here apt to modules the Falcon fig
things like that are the things that

439
00:34:42,000 --> 00:34:48,210
yeah well that's fine i just the kind of
things that are there is standard . h

440
00:34:48,210 --> 00:34:53,699
and help me new bunch of things in your
verbosity for output bypass menu safety

441
00:34:53,699 --> 00:34:58,620
level as an awesome talked about earlier
very important also for you want to set

442
00:34:58,620 --> 00:35:02,670
that to whatever your threshold is if
you're looking for you can input a

443
00:35:02,670 --> 00:35:08,550
config file you can import an xml file
things of this nature you can read a

444
00:35:08,550 --> 00:35:12,930
professor then i can claim something and
see it the config file bunch of things

445
00:35:12,930 --> 00:35:13,799
in here

446
00:35:13,800 --> 00:35:16,140
one of the things that were talking
about right now is the metasploit

447
00:35:16,140 --> 00:35:21,299
interface so the facilitate the
interaction back-and-forth medicine we

448
00:35:21,300 --> 00:35:26,640
were using msgr pc interface so go ahead
and fire up myself console have this

449
00:35:26,640 --> 00:35:31,290
going reason I'm going this route with
you do the metasploit interface ever how

450
00:35:31,290 --> 00:35:36,120
you wish I go this way just so that I
have the sessions available to me after

451
00:35:36,120 --> 00:35:43,020
the fact so i can still interact with
them even after ABT finishes okay where

452
00:35:43,020 --> 00:35:45,120
we going here going to run it

453
00:35:45,120 --> 00:35:52,319
hell you doing the very verbose
bypassing the menu there is an

454
00:35:52,320 --> 00:35:56,310
interactive menu system with it as well
I tend to run it with the dash be just a

455
00:35:56,310 --> 00:36:00,779
bypass there so it's the set it and
forget it let it run and you just watch

456
00:36:00,780 --> 00:36:04,350
output or come back to it after the fact
so here we go

457
00:36:04,890 --> 00:36:10,740
season the output how many modules were
loaded this is slightly older version of

458
00:36:10,740 --> 00:36:16,200
you know about a month owed your version
has a bunch more modules in it anytime I

459
00:36:16,200 --> 00:36:22,620
module requirements are met and outputs
it at top appear it doesn't stop apt

460
00:36:22,620 --> 00:36:25,980
from running it just doesn't run those
modules if they're encountered now

461
00:36:25,980 --> 00:36:31,710
that's one way it's fault-tolerant if
some much some toward isn't present on

462
00:36:31,710 --> 00:36:37,140
the system goes head and scans it finds
that couple of vulnerabilities or in

463
00:36:37,140 --> 00:36:40,710
system these are fairly minor one at
this point they're still flags water

464
00:36:40,710 --> 00:36:44,460
abilities lots of output i have
debugging and they were at the moment

465
00:36:44,460 --> 00:36:49,950
for this it's executing various commands
you can just see what's going on I think

466
00:36:49,950 --> 00:36:55,589
threads are set like a five on this one
right now so lots of stuff go around

467
00:36:55,590 --> 00:37:00,210
checking bunch of host of more output
and I'm SFTP he so forth going down

468
00:37:00,210 --> 00:37:01,440
through here

469
00:37:01,440 --> 00:37:10,950
no sessions see where we at found
something was part of Ashley is not part

470
00:37:10,950 --> 00:37:14,430
of a domain as part of work great but
there's others down here in a moment of

471
00:37:14,430 --> 00:37:18,330
flag but yeah this is just a bunch of
the commands that are running at the

472
00:37:18,330 --> 00:37:24,870
moment where we adhered okay right there
is part of a domain poles and so now

473
00:37:24,870 --> 00:37:27,900
builds that into the knowledge base
knowing that there's a domain out there

474
00:37:27,900 --> 00:37:32,400
called hack met and in the future of
start using that data when it's

475
00:37:32,400 --> 00:37:35,040
attacking systems and so forth

476
00:37:35,040 --> 00:37:41,520
what was a house that was all the active
it every 15 to 30 seconds and get what

477
00:37:41,520 --> 00:37:45,330
it works out to it outputs a list of all
the active modules that are currently

478
00:37:45,330 --> 00:37:52,200
running if you got debugging enabled one
of the issues that were got it to do I

479
00:37:52,200 --> 00:37:56,129
to the to do's is whenever you get in a
little output that as well just so you

480
00:37:56,130 --> 00:38:03,270
can see what's currently running at any
given time found a bunch of ip's much of

481
00:38:03,270 --> 00:38:09,090
users on a particular system so forth
those resulting their own events being

482
00:38:09,090 --> 00:38:14,640
fire another down here users on a window
system called them out and all sessions

483
00:38:14,640 --> 00:38:17,640
user numeration was able to pull it

484
00:38:18,510 --> 00:38:28,680
oh we're here it's gonna be kicking off
of hydrate a moment to try to get some

485
00:38:28,680 --> 00:38:36,359
passwords going to be doing that you're
sooo 90 is doing our pc client stuff

486
00:38:36,360 --> 00:38:41,580
like that still it does it a little bit
of a identified user name administrator

487
00:38:41,580 --> 00:38:43,529
password password

488
00:38:43,530 --> 00:38:46,770
there's a couple more of these down here
what it does is anytime at fine

489
00:38:46,770 --> 00:38:52,259
there's a module in there for password
guessing at the moment on SMB if it

490
00:38:52,260 --> 00:38:58,119
finds SMB users out there on the system
it has a very short

491
00:38:58,119 --> 00:39:02,980
nada password list that it tries that is
going to be expanded with a couple more

492
00:39:02,980 --> 00:39:07,839
modules as soon as i get a chance to
coat it up that will dynamically

493
00:39:07,839 --> 00:39:13,240
generate that list based on the network
named the season the year things of that

494
00:39:13,240 --> 00:39:18,399
nature as well as their lockout policy
if we can determine that so that it will

495
00:39:18,400 --> 00:39:23,859
only go up to like walking policy- one
attempts on any given account name

496
00:39:23,859 --> 00:39:26,319
things of that nature

497
00:39:26,319 --> 00:39:30,759
it finished you saw that there was a
session captured in the background you

498
00:39:30,759 --> 00:39:33,579
can still interact with it at this point
if you wish

499
00:39:33,579 --> 00:39:41,230
here home that was from SL 807 at this
point you have new directories log

500
00:39:41,230 --> 00:39:47,410
report and proofs let's go ahead and
look at logs every single thing that is

501
00:39:47,410 --> 00:39:51,160
output are done by the tool is login
here with date-time stamp down to the

502
00:39:51,160 --> 00:39:55,538
second so you can start piecing through
there and if the customer comes back

503
00:39:55,539 --> 00:39:58,930
says something happened to this system
at this time you can go through there

504
00:39:58,930 --> 00:40:01,538
trying to narrow down what was going on

505
00:40:01,539 --> 00:40:06,819
were you actually targeting at that
point something of that nature so let's

506
00:40:06,819 --> 00:40:10,210
jump into the reports there's the report
austin it was referring to earlier

507
00:40:10,210 --> 00:40:15,099
that's just one sample of a report
module that can be written very

508
00:40:15,099 --> 00:40:19,690
systematic report we're not going to
displayed in the demo here but still you

509
00:40:19,690 --> 00:40:23,170
can have any kind of report generated
out you can have it out put a comma

510
00:40:23,170 --> 00:40:27,430
separated values whatever you want just
a matter of writing a little module that

511
00:40:27,430 --> 00:40:30,819
will pull from the knowledge base to
output in whatever format you wish even

512
00:40:30,819 --> 00:40:32,140
that up to you all

513
00:40:32,140 --> 00:40:37,720
or to us if we get the chance the proofs
directory is a listing of every output

514
00:40:37,720 --> 00:40:42,578
of every command that was run by ABT so
that if you want to go back and scrape

515
00:40:42,579 --> 00:40:44,019
through its search through it

516
00:40:44,019 --> 00:40:48,519
for example the output of Secrets dumped
here you can see the NTDs output it was

517
00:40:48,519 --> 00:40:54,249
successful and dump it out you can see
that just run John that quickly simple

518
00:40:54,249 --> 00:40:57,669
passwords nothing special there but it's
kind of things that would have done

519
00:40:57,670 --> 00:41:02,019
internally as well it's going to go
through jump through a few of these real

520
00:41:02,019 --> 00:41:07,899
quick i'm just gonna talk as it's going
reason I'm reason we haven't capturing

521
00:41:07,900 --> 00:41:11,119
every output in putting it out there in
this way instead of just

522
00:41:11,119 --> 00:41:15,470
discarding it when it's done is that you
have fine we have all the data in the

523
00:41:15,470 --> 00:41:19,430
knowledge base that we feel is useful
but here's all the output of these if

524
00:41:19,430 --> 00:41:23,029
you want to go through and grip through
for some nugget of information that we

525
00:41:23,029 --> 00:41:28,130
might not be parsing out yet or some of
that nature it's all still there also in

526
00:41:28,130 --> 00:41:33,140
our reports at least when we put in a
finding that vulnerability XYZ was found

527
00:41:33,140 --> 00:41:37,220
on host here's an example of how we
tested for it you can open up one of

528
00:41:37,220 --> 00:41:41,209
these files screenshot that and that
shows the command that was run the

529
00:41:41,210 --> 00:41:44,779
output of it then you can highlight it
that's all they're ready for you to use

530
00:41:44,779 --> 00:41:47,299
that in a report if you wish

531
00:41:47,299 --> 00:41:53,509
what's it doing here for the Metasploit
module is there's multiple types of

532
00:41:53,509 --> 00:41:58,730
metasploit modules for apt you can write
your right ones that are exploit based

533
00:41:58,730 --> 00:42:03,499
ones and ones that only react when
sessions are opened if it the new

534
00:42:03,499 --> 00:42:08,180
session is open to any exploit one of
these other modules can run such as

535
00:42:08,180 --> 00:42:12,019
going in and dumping system information
going in and dumping windows hashes

536
00:42:12,019 --> 00:42:17,508
things of that nature or any post
operation one is going through doing a

537
00:42:17,509 --> 00:42:22,579
few the knowledge base will show in a
minute just more of the hash dogs stuff

538
00:42:22,579 --> 00:42:31,519
like that but still this is almost done
i think yeah so that's just a quick

539
00:42:31,519 --> 00:42:34,879
run-through of it there's been a lot
more added to it right now the

540
00:42:34,880 --> 00:42:39,109
knowledgebase dump that is dumped out to
the file file system after its done is

541
00:42:39,109 --> 00:42:44,900
XML that seem to be replaced with a
sequel light database that you can open

542
00:42:44,900 --> 00:42:48,499
up and search through in the current
version though it is just the xml

543
00:42:48,499 --> 00:42:54,649
database so you can go ahead and close
that out is it thanks there or that

544
00:42:54,650 --> 00:42:58,910
Network know what why things are

545
00:42:58,910 --> 00:43:04,879
oh you know there's no max doesn't work
just go to view 10

546
00:43:05,840 --> 00:43:21,680
and of course we're all the way back i
always forget the option there

547
00:43:24,260 --> 00:43:30,170
alright so demo time there was a quick
run-through of some of the current

548
00:43:30,170 --> 00:43:34,160
capabilities of it we actually have a
few more modules and apt than are

549
00:43:34,160 --> 00:43:38,540
demonstrated their loss of other tech
vectors are stuff for jboss and a bunch

550
00:43:38,540 --> 00:43:43,790
of your web app stuff responders in
there things of this nature things that

551
00:43:43,790 --> 00:43:49,610
you typically need is it's a tags tools
techniques that you typically use on

552
00:43:49,610 --> 00:43:53,330
that first day day and a half of an
engagement when you set down there a lot

553
00:43:53,330 --> 00:43:58,009
of commonality you tend to do releases a
lot of commonality that we end up doing

554
00:43:58,010 --> 00:44:01,550
ourselves that's not necessarily say
those things that you do but odds are

555
00:44:01,550 --> 00:44:07,490
you do some portion of that as well but
when we're dealing with this we have a

556
00:44:07,490 --> 00:44:11,720
bunch of questions out there to the
audience to the industry as a whole if

557
00:44:11,720 --> 00:44:14,060
you're interested in using something
like this

558
00:44:14,060 --> 00:44:19,190
what kind of tools or techniques do you
use that can be repeated can be

559
00:44:19,190 --> 00:44:23,600
reprocessed it can be automated things
of this nature if there is something out

560
00:44:23,600 --> 00:44:24,920
there by all means

561
00:44:24,920 --> 00:44:31,070
hit us up on gethub in a issue a request
a new feature request of that nature or

562
00:44:31,070 --> 00:44:35,600
if you are so inclined to start writing
your own modules port go out there right

563
00:44:35,600 --> 00:44:38,569
on modules put in a pull request things
of that nature

564
00:44:38,570 --> 00:44:42,470
where available at any given time out
there contact will be on the next one so

565
00:44:42,470 --> 00:44:47,629
the future plans that we have interest
in going with ourselves are more than

566
00:44:47,630 --> 00:44:51,860
just the in map import that was in there
is a placeholder for now we just haven't

567
00:44:51,860 --> 00:44:55,070
gone back to write other ones for NASA's
next pose

568
00:44:55,580 --> 00:45:01,640
burps we whatever your choice of other
input sources finishing out the four

569
00:45:01,640 --> 00:45:07,400
attack chains for not just responder
here but for or some of the up their

570
00:45:07,400 --> 00:45:12,260
attack change that we typically use we
have many of them finished but some of

571
00:45:12,260 --> 00:45:15,260
them were just peace mailed in there
we're missing a few modules make sure we

572
00:45:15,260 --> 00:45:18,020
feel all that out have for tech training
going on

573
00:45:18,020 --> 00:45:22,670
on in the process write it as many more
modules as we can that are going to be

574
00:45:22,670 --> 00:45:29,030
useful to people make prettier reports
maybe write a few other report modules

575
00:45:29,030 --> 00:45:35,900
and I haven't started on this year but
my great this all over the Python 3 is

576
00:45:35,900 --> 00:45:42,650
currently on t7 the main instigator of
that is there are certain issues that

577
00:45:42,650 --> 00:45:47,540
have encountered with 27 that would be
much easier much more easily

578
00:45:47,540 --> 00:45:53,450
circumvented or taking care of in three
then and 27 so not go down that path in

579
00:45:53,450 --> 00:45:57,350
the next couple months but yeah it's one
of those things if you're interested in

580
00:45:57,350 --> 00:46:00,830
it please talk to us put in request work
on it yourself

581
00:46:01,370 --> 00:46:07,130
we're open for any kind of criticism or
compliments or shaking of heads stuff

582
00:46:07,130 --> 00:46:11,870
like that or buying of whiskey is so
every what you want i don't hear and

583
00:46:11,870 --> 00:46:19,790
finally even reaches Twitter Email get
hub pictured poison at which point i

584
00:46:19,790 --> 00:46:23,000
don't know what I'm me that I Mon Ami
but still

585
00:46:23,000 --> 00:46:31,670
ok so just a few minutes left here any
questions comments criticisms yes

586
00:46:37,340 --> 00:46:51,740
oh they're over there they were
bothering my feet so sorry good i'm not

587
00:46:51,740 --> 00:46:56,689
used to my still shoes are over there
somewhere but how do we handle

588
00:46:56,690 --> 00:47:02,090
dependencies as of right now we're going
off of the base version that is in cali

589
00:47:02,090 --> 00:47:07,070
on each instance where possible when
those get updated wyndham the common

590
00:47:07,070 --> 00:47:11,000
version of each tool is updated were
planning on going back and checking each

591
00:47:11,000 --> 00:47:15,380
module and things of that nature there
are no actual version checks within the

592
00:47:15,380 --> 00:47:17,180
modules themselves

593
00:47:17,180 --> 00:47:21,890
other than the fact that the module just
air out if it doesn't work the way it's

594
00:47:21,890 --> 00:47:26,540
expecting the command line options are
different to output an error log you can

595
00:47:26,540 --> 00:47:28,700
look at that figure out what's going on
in

596
00:47:28,700 --> 00:47:31,160
but in a issue ticket and we can address

597
00:47:31,160 --> 00:47:35,210
that . like so we got our first issue
ticket last night shout-out chappie for

598
00:47:35,210 --> 00:47:39,650
finding the bug for us yeah yeah yeah
luckily that's an easy one that can fix

599
00:47:39,650 --> 00:47:46,340
it quickly so yes any if you are using
interview just want to bug us whatever

600
00:47:46,340 --> 00:47:50,510
put in tickets things of that nature
we're happy to comment with you talk to

601
00:47:50,510 --> 00:47:51,530
you whatever

602
00:47:51,530 --> 00:47:54,530
yes sir

603
00:48:00,860 --> 00:48:09,140
well ok the question is how does this
correlate overlap what have you with

604
00:48:09,140 --> 00:48:16,970
Sparta that I don't have a great answer
to that other than to say that at the

605
00:48:16,970 --> 00:48:22,669
time we were starting to work on this we
didn't including sparta we didn't find

606
00:48:22,670 --> 00:48:26,660
any tool out there that met our needs
the way that we wanted the met

607
00:48:27,260 --> 00:48:34,040
so that's what I'm saying even with this
apt to works in our meant it works with

608
00:48:34,040 --> 00:48:37,820
us the way that we like it we tried to
open source of some other people work on

609
00:48:37,820 --> 00:48:42,680
it and we're not expecting it to be a
one-size-fits-all out there obviously

610
00:48:42,680 --> 00:48:48,440
there's lots of tools in the infosec
industry that helps illustrate that not

611
00:48:48,440 --> 00:48:52,670
everybody likes the same thing does it
the same way this is this way works for

612
00:48:52,670 --> 00:48:57,800
you great work with us on it haven't
make it better if sparta is the way that

613
00:48:57,800 --> 00:49:04,670
she choose to go with it all that great
go with that and maybe we will a little

614
00:49:04,670 --> 00:49:09,710
bit later do a more in-depth comparison
of the two and see if there's something

615
00:49:09,710 --> 00:49:15,410
we can work with them on or pull from or
something of that nature but just off

616
00:49:15,410 --> 00:49:16,339
the top of my head

617
00:49:16,340 --> 00:49:20,930
the best answer I can give you is that
it didn't fit our needs as what we were

618
00:49:20,930 --> 00:49:25,700
needing so I know that's something best
answer for you but that's the honest

619
00:49:25,700 --> 00:49:28,250
tree anybody else out there

620
00:49:28,250 --> 00:49:31,700
yes no maybe

621
00:49:31,700 --> 00:49:34,460
well thank you all very much and have a
great rest of the day

