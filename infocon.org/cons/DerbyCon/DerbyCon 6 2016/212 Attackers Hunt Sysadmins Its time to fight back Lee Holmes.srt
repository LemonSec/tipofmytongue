1
00:00:00,000 --> 00:00:05,850
joinder bacan today we're going to talk
about gia attackers hunting system

2
00:00:05,850 --> 00:00:11,160
admins and what we can do about it so
I'm Lee homes i'm a principal security

3
00:00:11,160 --> 00:00:16,320
architect at Microsoft I was a developer
on the powershell team since the $YEAR

4
00:00:16,320 --> 00:00:21,420
10 to the power shell cookbook and have
been doing all the security stuff so we

5
00:00:21,420 --> 00:00:22,199
haven't met

6
00:00:22,199 --> 00:00:27,090
feel free to come up and chat after I've
also got some powershell stickers gonna

7
00:00:27,090 --> 00:00:33,540
be giving away after said come on
biology amount so in case you were up on

8
00:00:33,540 --> 00:00:36,899
current events we've all seen the news
of all the breaches and all that kind of

9
00:00:36,899 --> 00:00:43,050
stuff but the things the thing is things
are getting much much worse than not

10
00:00:43,050 --> 00:00:47,699
getting better when you have people
coming into penn tests and stuff a lot

11
00:00:47,700 --> 00:00:51,989
of time there's all these crazy rules
that say hey no physical lobster fishing

12
00:00:51,989 --> 00:00:56,160
on the best of its kind of off the table
because it's too easy but those rules

13
00:00:56,160 --> 00:00:59,279
they don't apply to attackers we got to
figure out a way to prevent ourselves

14
00:00:59,280 --> 00:01:07,049
protect ourselves from these kind of
things so let's talk the tale of two

15
00:01:07,049 --> 00:01:13,830
resumes on one side we got the fortune
500 they've got if anybody can defend

16
00:01:13,830 --> 00:01:19,259
their systems as these guys they've got
huge huge budgets well trained security

17
00:01:19,259 --> 00:01:26,130
staff and the motivation to get things
right when you talk about this as an

18
00:01:26,130 --> 00:01:34,710
entity really as an entity 12.5 trillion
in revenue 945 billion in profit 17

19
00:01:34,710 --> 00:01:39,030
trillion and market value that's a lot
of stuff to lose if you don't pay

20
00:01:39,030 --> 00:01:47,100
attention to your stuff and on the other
side we have management LP

21
00:01:51,430 --> 00:01:57,820
he wanted to learn CSS c++ decided to
share his first project that's a pretty

22
00:01:57,820 --> 00:02:02,050
good hello world that he asked me so we
know how this guy ended right

23
00:02:04,360 --> 00:02:09,160
how have these the most financially
motivated companies the entire world

24
00:02:09,880 --> 00:02:14,410
however they compromised so thoroughly
and obviously not by Benjamin himself

25
00:02:14,410 --> 00:02:16,630
but by his minions right

26
00:02:16,630 --> 00:02:23,200
hmm because they do something that
people do every single day they said hey

27
00:02:23,200 --> 00:02:26,619
you're in men and you said hope

28
00:02:27,160 --> 00:02:30,160
thanks you're done

29
00:02:30,910 --> 00:02:36,040
so you've heard of elevation of
privilege vulnerabilities is pretty

30
00:02:36,040 --> 00:02:37,000
common

31
00:02:37,000 --> 00:02:43,270
this is a execution of privilege
vulnerability you gave somebody some

32
00:02:43,270 --> 00:02:47,320
privileged with the hope that they would
never use it in a bad situation but here

33
00:02:47,320 --> 00:02:48,880
we go

34
00:02:48,880 --> 00:02:58,420
and of course you get the keys to the
kingdom when you're in a min and here's

35
00:02:58,420 --> 00:03:04,869
the thing this isn't all like mystical
stuff like as the the Snowden stuff

36
00:03:04,870 --> 00:03:09,340
demonstrated we've got government's
about apts got a bunch of people who are

37
00:03:09,340 --> 00:03:13,989
like why am I gonna go in the hard way
in like brno days and stuff when instead

38
00:03:13,989 --> 00:03:18,519
I can just go after the admins they're
the ones who got the keys to the kingdom

39
00:03:18,519 --> 00:03:21,549
already and i'm just going to go in
through them

40
00:03:21,549 --> 00:03:28,299
the big thing to realize here when
you're talking your threat model your

41
00:03:28,299 --> 00:03:33,400
admins are your attack surface if you're
spending your time and money only on

42
00:03:33,400 --> 00:03:38,140
sort of infrastructure Network defense
is a huge blind spot that we can work on

43
00:03:38,140 --> 00:03:44,679
resolving you might be saying likely are
you nuts are you saying we get rid of

44
00:03:44,680 --> 00:03:49,780
that means we can't get admins and of
course not saying that bunch of us here

45
00:03:49,780 --> 00:03:53,470
at means joy of jobs i don't want to see
badness go on this place

46
00:03:54,300 --> 00:04:01,560
so of course we need them but here's the
thing people make mistakes sometimes bad

47
00:04:01,560 --> 00:04:06,240
actors but they're always part of your
attack surface and when you're doing

48
00:04:06,240 --> 00:04:11,430
security figure out ways to reduce your
tax service so let's talk about a

49
00:04:11,430 --> 00:04:18,780
situation and in fact we had a partner
team he was very very very familiar with

50
00:04:18,779 --> 00:04:21,839
PowerShell remoting and kind of the Geo
principles that i'm going to talk about

51
00:04:21,839 --> 00:04:26,190
today that we asked them as part of
Windows Server like what would be a

52
00:04:26,190 --> 00:04:30,300
thing that you love if we could do in
windows server and they were like you

53
00:04:30,300 --> 00:04:33,870
know I would love it if you could get
rid of admins this like this brutal huge

54
00:04:33,870 --> 00:04:38,100
role that can do anything that's a bad
thing and I said like you know what you

55
00:04:38,100 --> 00:04:41,100
do full-time job with reducing attacks
service online

56
00:04:41,760 --> 00:04:46,530
why don't you just reflecting that
inside so wouldn't it be great if people

57
00:04:46,530 --> 00:04:53,219
didn't need these these global broad
admin privileges to do their jobs and

58
00:04:53,220 --> 00:04:57,390
when they did if one of these machines
got popped you didn't have this rdp

59
00:04:57,390 --> 00:05:02,250
situation where you're leaking all these
huge value creds that then become pivots

60
00:05:02,250 --> 00:05:05,970
to other systems in this keychain that
you just walk around with breaking into

61
00:05:05,970 --> 00:05:11,820
everything and even still what if people
could do the things that they were

62
00:05:11,820 --> 00:05:16,680
supposed to do nothing else just the
stuff you want them to do and just the

63
00:05:16,680 --> 00:05:21,750
stuff is supposed to do now when things
don't go right

64
00:05:22,500 --> 00:05:28,490
they also great if all this stuff was
large so let's take a look

65
00:05:28,490 --> 00:05:33,740
look at this fantasy scenario you got
Benjamin the pot of gold tries to rdp

66
00:05:33,740 --> 00:05:37,699
into a server of course decides to spew
some credit everywhere

67
00:05:38,300 --> 00:05:41,660
access denied you lock down already
because you're smart and you don't want

68
00:05:41,660 --> 00:05:47,630
these things going everywhere and he
says jeffrey i need to be a bad man on

69
00:05:47,630 --> 00:05:53,449
this Jeffrey you need to be an admin on
this server so i can restart dms but

70
00:05:53,449 --> 00:05:58,849
it's a simple thing we started us let me
do it and he says no just use PowerShell

71
00:05:58,849 --> 00:06:02,090
connect to the server you're going to be
fine i don't want your creds spewed all

72
00:06:02,090 --> 00:06:08,119
over this organization uses powershell
connects all is good

73
00:06:10,250 --> 00:06:14,539
Jeffrey looks away for one minute he
tries to run another command steal

74
00:06:14,539 --> 00:06:16,340
secrets all that bad stuff

75
00:06:16,340 --> 00:06:23,719
access denied it doesn't work this would
be an amazing situation if they could

76
00:06:23,720 --> 00:06:26,569
ever possibly work right that's a that's
what you would love to be able to tell

77
00:06:26,569 --> 00:06:31,789
everybody and the way to think about
your your security exposure when it

78
00:06:31,789 --> 00:06:36,229
comes to admins it's kind of an
intersection of two things on one access

79
00:06:36,229 --> 00:06:37,609
here you've got the time

80
00:06:37,610 --> 00:06:41,719
so somebody is an admin for a certain
amount of time anything they can do in

81
00:06:41,719 --> 00:06:47,389
that time potentially bad stuff then
you've got the capability that's kind of

82
00:06:47,389 --> 00:06:50,930
another way to think about it while they
have administrative access to the system

83
00:06:51,590 --> 00:06:58,880
what kind of bad stuff can you do now
like a bunch of us in the industry we're

84
00:06:58,880 --> 00:07:02,659
starting to get our heads around that
time access so privileged identity

85
00:07:02,659 --> 00:07:07,099
management you say hey I'm gonna file a
ticket make me an admin for the next

86
00:07:07,099 --> 00:07:12,530
half an hour the next hour ticket gets
filed your admin life's good you're

87
00:07:12,530 --> 00:07:20,210
happy so that's one slice here just
enough administration what we're talking

88
00:07:20,210 --> 00:07:26,120
about today is that other slice around
capability now you've got a user account

89
00:07:26,120 --> 00:07:30,680
rather than let them do everything that
they could possibly do run macat start

90
00:07:30,680 --> 00:07:35,030
and stop processes services you just
decide i want you to be able to restart

91
00:07:35,030 --> 00:07:42,710
dns and that's the only thing I'm gonna
let you do now an extreme example of if

92
00:07:42,710 --> 00:07:46,638
it's hard to think about how can i
reduce capability for something one way

93
00:07:46,639 --> 00:07:49,729
to think about it is like you can no one
has done wrong

94
00:07:49,729 --> 00:07:54,830
a great example was how did an HVAC
contractor those creds but how do they

95
00:07:54,830 --> 00:07:58,880
ever get access to so much sensitive
stuff and sensitive networks in the

96
00:07:58,880 --> 00:08:03,349
target infrastructure should never have
had the access or the capability to do

97
00:08:03,349 --> 00:08:09,050
that kind of stuff and in the computer
world for somehow know the invention of

98
00:08:09,050 --> 00:08:13,339
the admin account and the root account
is one of the worst things we ever did

99
00:08:13,339 --> 00:08:17,509
for computer security we talk about
physical security back thousands of

100
00:08:17,509 --> 00:08:18,529
years

101
00:08:18,529 --> 00:08:22,520
it's not one big master key for
everything you've got a key for your

102
00:08:22,520 --> 00:08:23,240
mail

103
00:08:23,240 --> 00:08:26,960
you've got to keep your house for your
bike your nukes whatever right when you

104
00:08:26,960 --> 00:08:29,870
want to have a neighbor check your mail
while you're on vacation you don't go

105
00:08:29,870 --> 00:08:34,520
here is all my stuff you say here's my
mail key would you mind going into a

106
00:08:34,520 --> 00:08:40,520
couple days so we can do this we've got
an approach right we can start to

107
00:08:40,520 --> 00:08:43,159
incremental irreducible an exposure

108
00:08:43,159 --> 00:08:47,449
now obviously the thing we preached all
the time is reduce your number at of

109
00:08:47,449 --> 00:08:50,839
admins like Bloodhound is a great
example of doing that you know what

110
00:08:50,839 --> 00:08:55,490
through this attack graph actually have
6,000 domain admins is your group

111
00:08:55,490 --> 00:09:02,060
nesting is all screwed up so we got that
we're working on that now you can also

112
00:09:02,060 --> 00:09:05,138
reduce the duration of the admin proves
right

113
00:09:05,139 --> 00:09:09,369
then you can also reduce what you can do
with those proves so then you're

114
00:09:09,369 --> 00:09:12,819
starting to get into that nice little
square spot where that intersection

115
00:09:12,819 --> 00:09:21,069
happens we're going to do this is gio or
just enough administration so this is

116
00:09:21,069 --> 00:09:25,299
based on this stuff that we did
originally in powershell version 2 which

117
00:09:25,299 --> 00:09:31,299
was 2008 in support of exchange online
we added power shell remoting at in 2008

118
00:09:31,299 --> 00:09:35,649
and then exchange online took a huge bed
on this and this is their management

119
00:09:35,649 --> 00:09:39,699
technique when you connect up to
exchange online using your account

120
00:09:39,699 --> 00:09:44,769
you're not like login as admin 123
password explanation know you got your

121
00:09:44,769 --> 00:09:48,609
own account you get access to your
mailboxes and just the commands that

122
00:09:48,609 --> 00:09:57,069
your role is allowed to do so this is
battle-hardened it's tried-and-true now

123
00:09:57,069 --> 00:10:01,689
GA $FULLPHONENUM we base it on three
simple things the first is the idea of

124
00:10:01,689 --> 00:10:06,248
roll capabilities so G is kind of like
thinking about it as our back right so

125
00:10:06,249 --> 00:10:10,629
roll capabilities you got the idea of a
dns admin or something else

126
00:10:11,139 --> 00:10:18,579
so the role is just a risk refined set
of commands that you want you apply to

127
00:10:18,579 --> 00:10:24,669
somebody who's got a certain a certain
task to do then you've got the end .

128
00:10:24,669 --> 00:10:28,569
when they're connecting with PowerShell
remoting they connect up to an end . on

129
00:10:28,569 --> 00:10:33,459
the server it's a it's a powerful
remoting end . and this is actually the

130
00:10:33,459 --> 00:10:38,049
connection point where we're powershell
and when RM makes an identity

131
00:10:38,049 --> 00:10:43,089
translation there are no longer invoking
things on the machine explicitly as you

132
00:10:43,089 --> 00:10:48,249
but he can be under an alternate account
and the key here is that alternate

133
00:10:48,249 --> 00:10:52,600
account is way way more privileged that
you don't have to give a person

134
00:10:52,600 --> 00:10:58,629
connecting these full privileges and
this ultimately that identity

135
00:10:58,629 --> 00:11:02,949
translation result in you get to choose
which identity all these things are

136
00:11:02,949 --> 00:11:06,319
going to run under now

137
00:11:06,320 --> 00:11:10,190
funny thing when it comes to time on the
topic of breeches and all that kind of

138
00:11:10,190 --> 00:11:15,740
stuff I kind of a reminder sometimes
that internet advices often worth what

139
00:11:15,740 --> 00:11:18,830
you pay for it

140
00:11:18,830 --> 00:11:23,720
so here's our good friend Edward Snowden
decided to give advice on how to prevent

141
00:11:23,720 --> 00:11:30,140
breaches now what he points out is
correct locking down the admin work

142
00:11:30,140 --> 00:11:34,670
stations is a great way to do it but
it's as you know is his little

143
00:11:34,670 --> 00:11:40,910
demonstration proved is obviously not
enough and sometimes you just don't

144
00:11:40,910 --> 00:11:45,709
wrestle with somebody because they just
love it you know tried to point out that

145
00:11:45,710 --> 00:11:50,090
g is another great option opportunity
this is a good way to start locking down

146
00:11:50,090 --> 00:11:53,450
things like no it's like it's totally
not going to do anything

147
00:11:53,450 --> 00:11:56,060
try to be a little bit more explicit
here like now you can let somebody

148
00:11:56,060 --> 00:12:00,920
manage sure . without stealing
everything he didn't respond to that one

149
00:12:00,920 --> 00:12:08,390
so I don't know haha so let's give a
little quick demo of Gia

150
00:12:13,760 --> 00:12:17,850
so like I meant

151
00:12:17,850 --> 00:13:23,459
GI is based on the same ideas or no you
can see I can you all right oh by the

152
00:13:23,459 --> 00:13:31,229
way here's look we can get shells we did
that pop in shows like a box with that

153
00:13:31,230 --> 00:13:45,240
haha i was i love you that

154
00:13:46,649 --> 00:13:55,680
alright so this is powershell this is
interactive powershell

155
00:13:59,699 --> 00:14:11,669
you can do cool stuff now the core .
about gia is using PowerShell remoting

156
00:14:11,669 --> 00:14:16,379
so I'm going to connect up actually to
show you first

157
00:14:21,899 --> 00:14:40,739
so here's a simple command to connect up
to my domain controller authentication

158
00:14:40,739 --> 00:14:43,739
works good thing

159
00:14:49,109 --> 00:15:02,639
ok so now i can enter this PS session
this is now powerful promoting you see

160
00:15:02,639 --> 00:15:06,389
my prompt changing now just doing
regular powerful motivating and I can do

161
00:15:06,389 --> 00:15:13,169
the same stuff I used to do here are all
the processes running on my DC I can

162
00:15:13,169 --> 00:15:19,410
take a look at all my dns commands bunch
of cool stuff now the situation is when

163
00:15:19,410 --> 00:15:22,649
you want to give somebody access to do
dns maintenance on your machine

164
00:15:23,459 --> 00:15:28,049
he's usually co-located with with your
domain controller so what you do is you

165
00:15:28,049 --> 00:15:33,029
say hey here's an admin credit for my
domain controller you just said you're

166
00:15:33,029 --> 00:15:36,989
now a domain that men when all you want
to let them do is like check out dns

167
00:15:36,989 --> 00:15:41,279
caches and all that kind of stuff that's
ridiculous what I'm gonna do now

168
00:15:42,059 --> 00:15:47,569
now you know

169
00:15:47,570 --> 00:15:51,170
here so that if you saw the first script
was connecting to the DC I was

170
00:15:51,170 --> 00:15:54,650
connecting use it using alternate
credentials those my actual domain admin

171
00:15:54,650 --> 00:15:59,930
creds i'm just going to connect I'm a
dns admin right now on this machine I'm

172
00:15:59,930 --> 00:16:04,430
just a regular domain user I'm not even
an admin on my localhost let alone the

173
00:16:04,430 --> 00:16:20,150
DC now check this out i can still do the
same set thing here look at this on the

174
00:16:20,150 --> 00:16:24,470
right hand side you see the command bar
in the ISC already came down to the

175
00:16:24,470 --> 00:16:34,280
commands that I'm allowed to run this is
all the stuff that I'm allowed to run

176
00:16:34,280 --> 00:16:38,870
when I connected to the DC what happened
is that power shell remoting so that i'm

177
00:16:38,870 --> 00:16:45,020
connecting applied the dns admin role
capability to me and now i can do things

178
00:16:45,020 --> 00:16:48,020
like show my dns cache

179
00:17:00,590 --> 00:17:15,350
oh yeah so i can do cool stuff I could
not do many cats right so object i'm

180
00:17:15,349 --> 00:17:24,829
gonna do some crazy . scripting here
doesn't work this GS session has zero

181
00:17:24,829 --> 00:17:29,000
access to the power shell scripting
language itself all these are commands

182
00:17:29,000 --> 00:17:33,650
had been sent over his data structures
and are just being evaluated at the DC

183
00:17:33,650 --> 00:17:39,920
and when i when i exit and back to my
regular dns admin but here's the thing

184
00:17:53,060 --> 00:18:51,290
so my my GF configuration i set up an
end points directory now I've got

185
00:18:51,290 --> 00:19:01,310
transcript of everything that I just did
as a dns and Men I don't you seen this

186
00:19:01,310 --> 00:19:06,080
thing in the ISC PS edit on a remote
file will automatically drag it back and

187
00:19:06,080 --> 00:19:10,070
let you open it up in the is pretty
sweet so now we can go through and take

188
00:19:10,070 --> 00:19:15,679
a look at all the stuff that happened in
this session you can send this thing

189
00:19:15,680 --> 00:19:19,670
into assume you can start to do queries
against it you can detect if somebody's

190
00:19:19,670 --> 00:19:38,300
you can detect here if somebody's trying
to do bad stuff around you can detect

191
00:19:38,300 --> 00:19:41,120
people are trying to do bad things
around power shell scripting and other

192
00:19:41,120 --> 00:19:44,149
things you can take a look at them even
attempting to break out of their

193
00:19:44,150 --> 00:19:52,310
boundaries so it's super super useful so
let's start talking about

194
00:20:17,960 --> 00:20:27,320
let's start talking about what makes
geotech here we go

195
00:20:27,860 --> 00:20:31,490
so the first thing here is the role
capabilities and talked about how you

196
00:20:31,490 --> 00:20:35,539
actually set these things up so that you
can restrict somebody to something as

197
00:20:35,539 --> 00:20:40,370
simple as like dns maintenance so this
is literally whatever all config roll

198
00:20:40,370 --> 00:20:44,330
capability looks like when you configure
it with gia you've got it you've got a

199
00:20:44,330 --> 00:20:49,490
description about some modules you can
import a lot of times it looks just like

200
00:20:49,490 --> 00:20:52,580
the stuff you're already used to with
powershell i'm going to give some

201
00:20:52,580 --> 00:20:58,039
visible command lets sometimes when a
command that doesn't do exactly the job

202
00:20:58,039 --> 00:21:02,510
you need can also expose some functions
and those functions have full access to

203
00:21:02,510 --> 00:21:06,200
the powershell language they don't have
the the application of all those

204
00:21:06,200 --> 00:21:09,770
constraints then I can go in and say
well i'm gonna make a home I function

205
00:21:09,770 --> 00:21:14,240
that can then do some stuff with a
powerful scripting language so that's

206
00:21:14,240 --> 00:21:18,049
this lets you stitched together things
that you might not otherwise want to

207
00:21:18,049 --> 00:21:27,500
make available then there was that whole
endpoint concept so the endpoint that

208
00:21:27,500 --> 00:21:31,070
the major point here is the setting the
session type too restrictive remote

209
00:21:31,070 --> 00:21:35,418
server this is what tells powershell
that you want to apply the Geo

210
00:21:35,419 --> 00:21:41,059
principles to these connections here you
see that I set up a transcript directory

211
00:21:41,059 --> 00:21:44,178
where every connection to one of these
things is going to start running

212
00:21:44,179 --> 00:21:50,059
transcripts this run is virtual account
this is a great thing so there's an idea

213
00:21:50,059 --> 00:21:54,980
of virtual accounts in Windows where
these temporary femoral administrator

214
00:21:54,980 --> 00:21:59,990
accounts they don't have any preds to
pop they're not good off the machine

215
00:21:59,990 --> 00:22:06,679
when you connect with gia the person
that that GS session then becomes

216
00:22:06,679 --> 00:22:09,799
launched as one of these virtual
administrator accounts so you don't have

217
00:22:09,799 --> 00:22:12,799
to worry about that machine getting
popped in anything else leaking

218
00:22:13,510 --> 00:22:16,629
and then there's the role definitions
when you connect up to one of these

219
00:22:16,630 --> 00:22:17,530
things

220
00:22:17,530 --> 00:22:22,030
this is what powershell looks to say
well when dns admin connects i'm going

221
00:22:22,030 --> 00:22:27,340
to give them the dns maintenance rule
capability if you have a a person is

222
00:22:27,340 --> 00:22:31,209
actually part of several different roles
willpower show will automatically merge

223
00:22:31,210 --> 00:22:38,890
these things up for you now the idea of
identity this is kind of an important

224
00:22:38,890 --> 00:22:44,290
thing there's a bunch of different
identity types supported the default

225
00:22:44,290 --> 00:22:48,700
that powershell does is the connected
user I i use PowerShell remoting connect

226
00:22:48,700 --> 00:22:55,510
up to a machine that processes launches
me you can set up a named identity so

227
00:22:55,510 --> 00:23:00,940
this is like you give explicit username
and password as credit they're stored in

228
00:23:00,940 --> 00:23:06,160
the data protection API there's some
danger to this but sometimes you might

229
00:23:06,160 --> 00:23:09,580
feel that you need it you can do this
for local accounts or domain accounts

230
00:23:09,580 --> 00:23:15,100
there is the virtual account the virtual
administrative account that you can use

231
00:23:15,100 --> 00:23:20,320
this is by far the best when all you
need are things like dns admin which is

232
00:23:20,320 --> 00:23:25,419
just local administration on the box and
then you have group managed service

233
00:23:25,420 --> 00:23:30,130
accounts either the same things that you
have since you know the earlier days of

234
00:23:30,130 --> 00:23:34,900
windows server where you've got a
basically a domain account where the the

235
00:23:34,900 --> 00:23:39,130
password is automatically managed for
you by active directory so it's rotated

236
00:23:39,130 --> 00:23:42,130
all the time you don't need to worry
about password maintenance you don't

237
00:23:42,130 --> 00:23:48,040
need to worry about them leaking when it
comes to when it comes to these

238
00:23:48,040 --> 00:23:52,600
identities the point we talked about
before is wouldn't it be great if

239
00:23:52,600 --> 00:23:59,080
popping one of these servers didn't leak
high-value creds sometimes you run into

240
00:23:59,080 --> 00:24:03,699
a GS situation where you just need to
represent be an identity going off the

241
00:24:03,700 --> 00:24:07,750
box to doing something else like you're
just going to need that sometimes but if

242
00:24:07,750 --> 00:24:12,730
you don't need it always prefer the ones
specifically the virtual account that

243
00:24:12,730 --> 00:24:17,410
stay local to the box because the minute
any of these identities are trusted off

244
00:24:17,410 --> 00:24:21,700
the box you run a big risk of a
compromise that machine letting somebody

245
00:24:21,700 --> 00:24:24,800
squirrel into other machines and that's
kind of the same thing as

246
00:24:24,800 --> 00:24:27,800
using rdp to connect up to them

247
00:24:29,840 --> 00:24:37,399
so what actually makes this stuff work
now the first question is like white

248
00:24:37,400 --> 00:24:40,850
powershell why are we doing powershell
for this there could be so many other

249
00:24:40,850 --> 00:24:44,389
ways and you're likely you're up there
it's obviously going to put the

250
00:24:44,390 --> 00:24:50,060
powershell so GI you know think about it
like the pseudo it's all about

251
00:24:50,060 --> 00:24:56,720
controlling what admins can do so like
all shells powershell dispatches

252
00:24:56,720 --> 00:25:01,340
commands you can run XC and all this
kind of stuff like all shells you can

253
00:25:01,340 --> 00:25:04,939
control which exes are available through
ackles and pass and all that kind of

254
00:25:04,940 --> 00:25:11,750
stuff but where it comes really unique
is that powershell offers the idea of

255
00:25:11,750 --> 00:25:16,940
command visibility so every command that
you run in powershell that's contained

256
00:25:16,940 --> 00:25:24,560
in something called a run space when you
market command as as public

257
00:25:25,100 --> 00:25:28,429
well this command is visible from
somebody typing it at the run space

258
00:25:28,430 --> 00:25:31,550
level when you mark something is private

259
00:25:31,550 --> 00:25:36,649
it's no longer available from just
typing at the run space it's now only

260
00:25:36,650 --> 00:25:41,420
available from things that have already
been invoked so i gave an example of a

261
00:25:41,420 --> 00:25:47,870
function before right that function had
access to private commands the user only

262
00:25:47,870 --> 00:25:51,020
had access to the public commands and
that function you would have made that

263
00:25:51,020 --> 00:26:00,980
as a public demand now in addition to
the whole command visibility thing one

264
00:26:00,980 --> 00:26:05,270
of the magic pieces of PowerShell is
that it has access and it does all the

265
00:26:05,270 --> 00:26:08,900
parsing for you when you add a
PowerShell command let you don't go okay

266
00:26:08,900 --> 00:26:12,890
if dollar arms bracket 0 is a dash and
all this kind of stuff

267
00:26:13,670 --> 00:26:16,790
what you do when you write a PowerShell
command let is say these are my

268
00:26:16,790 --> 00:26:21,320
parameters in there there there . net
properties in a c-sharp class

269
00:26:22,310 --> 00:26:29,450
powershell does everything else this
parsing is driven off of these data

270
00:26:29,450 --> 00:26:34,340
structures off of these properties and
everything else but the thing is when we

271
00:26:34,340 --> 00:26:38,179
made powershell we made sure that this
stuff was open and this stuff is

272
00:26:38,180 --> 00:26:47,360
programmable now because you now know
explicitly what are the parameters which

273
00:26:47,360 --> 00:26:52,250
ones are available to the users you can
now make proxy commands that take these

274
00:26:52,250 --> 00:26:56,270
data structures and start adding and
removing parameters or adding and

275
00:26:56,270 --> 00:27:02,960
removing validation of these parameters
when you combine this command visibility

276
00:27:02,960 --> 00:27:06,950
plus the ability to manage parameters
that's when you start to really get some

277
00:27:06,950 --> 00:27:12,080
crazy stuff now this is what it started
to look look like we actually have had

278
00:27:12,080 --> 00:27:16,820
this since powerful version 1 and this
is what it used to look like creating a

279
00:27:16,820 --> 00:27:21,919
proxy command and powerful version 1 so
you see here the first line i'm going to

280
00:27:21,920 --> 00:27:26,510
get the command forget process the
command metadata you see here the

281
00:27:26,510 --> 00:27:30,770
highlighted one that's actually the data
structure that we use to represent the

282
00:27:30,770 --> 00:27:37,550
metadata for command i can take that
metadata i can remove some parameters we

283
00:27:37,550 --> 00:27:43,340
might want to let somebody stop a
process by name not by ID but then i can

284
00:27:43,340 --> 00:27:47,600
take an ID parameter and then I can also
start to add more validation that says

285
00:27:47,600 --> 00:27:54,679
well I'm only gonna let somebody stop
notepad or Kelly but nothing else when

286
00:27:54,680 --> 00:27:58,550
somebody types in these things powershot
gonna do that validation before it ever

287
00:27:58,550 --> 00:28:05,600
gets to the command itself and finally
the last step here is we read a proxy

288
00:28:05,600 --> 00:28:10,669
command API that says make a proxy
command out of this data structure which

289
00:28:10,670 --> 00:28:16,820
generates a function and this function
is what you expose to the users so

290
00:28:16,820 --> 00:28:20,929
that's that's not crazy in fact that's
pretty amazing beats anything I've ever

291
00:28:20,930 --> 00:28:23,730
seen in any other shell

292
00:28:23,730 --> 00:28:30,120
but we made it easier in GM this is what
it looks like in the advancements that

293
00:28:30,120 --> 00:28:35,040
we made in Gaea so i showed you the
visible Commandments part about the role

294
00:28:35,040 --> 00:28:40,440
capability that was first part those are
the commandments that you expose but

295
00:28:40,440 --> 00:28:45,900
here's an example this were exposing the
restart service command limit and we're

296
00:28:45,900 --> 00:28:51,990
saying we're going to only expose the
name parameter and we're going to add a

297
00:28:51,990 --> 00:28:57,000
validate set to this that says somebody
can only restore the dns or DNS cache

298
00:28:57,000 --> 00:29:01,440
service they can't go and restart when
around it can't go and restart anything

299
00:29:01,440 --> 00:29:02,580
else

300
00:29:02,580 --> 00:29:06,810
this is a huge benefit now if you even I
was pointing up before powershell

301
00:29:06,810 --> 00:29:10,500
merchants these things if you have
multiple of these crazy things powers

302
00:29:10,500 --> 00:29:15,720
will merge those two so if you're a dns
admin an iis admin and you want to let

303
00:29:15,720 --> 00:29:21,180
somebody restart dns and is you can have
those two different role capabilities

304
00:29:21,180 --> 00:29:24,570
and power shall merge them up when you
connect you can restart any of those

305
00:29:24,570 --> 00:29:25,800
three services

306
00:29:25,800 --> 00:29:32,790
here's the thing when when you're
starting to create things you got to

307
00:29:32,790 --> 00:29:36,990
think about what your attack surface is
when you're doing jia you can't just run

308
00:29:36,990 --> 00:29:42,540
a GS script to be like hey good days i'm
done so gia is restricted to the

309
00:29:42,540 --> 00:29:48,270
powershell stuff if you say you heard in
the heck ogia but then let somebody

310
00:29:48,270 --> 00:29:52,650
login with rdp well you really didn't
get anything they just kind of went

311
00:29:52,650 --> 00:29:55,770
around so what you want to make sure
you're doing is controlling all the

312
00:29:55,770 --> 00:30:02,280
methods of access to the service so that
is all going through gr the commands

313
00:30:02,280 --> 00:30:05,520
when you're when you're creating one of
these endpoints that commands themselves

314
00:30:05,520 --> 00:30:09,780
or make potentially can be dangerous so
there's a good example of the ad type

315
00:30:09,780 --> 00:30:14,910
command if you expose that as part of a
GN . well the ad type command takes

316
00:30:14,910 --> 00:30:20,340
arbitrary c-sharp compiles and runs it
so if you expose that to the user well

317
00:30:20,340 --> 00:30:23,580
they're just going to put in some random
macat stuff and be done with it

318
00:30:25,020 --> 00:30:29,070
when you're the one writing your custom
functions you gotta remember that these

319
00:30:29,070 --> 00:30:33,210
things themselves must be audited
because the commands you expose might

320
00:30:33,210 --> 00:30:35,940
have injection attacks or something

321
00:30:35,940 --> 00:30:40,440
so let's talk about what one of those
looks like what we most often see is the

322
00:30:40,440 --> 00:30:44,490
invoke expression people use invoke
expression because they're so used to

323
00:30:44,490 --> 00:30:50,160
things like pearl and stuff for you pack
a bunch of stuff into a string send it

324
00:30:50,160 --> 00:30:56,280
off to to bash or whatever your command
shell is of choice and command injection

325
00:30:56,280 --> 00:31:02,070
is a huge huge issue in any language
that calls commands it ends up being the

326
00:31:02,070 --> 00:31:07,889
downfall of like almost every router
that comes out so that the first example

327
00:31:07,890 --> 00:31:11,940
in online one that somebody getting the
actual for a specific path like that

328
00:31:11,940 --> 00:31:16,590
looks that makes sense but if you don't
know the path beforehand you know

329
00:31:16,590 --> 00:31:20,340
somebody passes it to you as a parameter
in a file this is where you might say

330
00:31:20,340 --> 00:31:26,699
invoke expression get actual and he put
in that dollar sign path so if that's

331
00:31:26,700 --> 00:31:32,670
all that path was like okay you're not
so bad but if the attacker decided to

332
00:31:32,670 --> 00:31:35,280
put in a semicolon and do other things
there

333
00:31:35,280 --> 00:31:38,940
well invoke expression is just doing
what you asked to do is run an arbitrary

334
00:31:38,940 --> 00:31:42,900
chunk of PowerShell what it's going to
do is give you back the akal and then

335
00:31:42,900 --> 00:31:47,760
add somebody to the administrators group
or something else of their choosing and

336
00:31:47,760 --> 00:31:50,850
the thing is we knew that this was going
to be a danger from the minute we

337
00:31:50,850 --> 00:31:57,780
started designing powershell when that's
kind of the auditing of custom functions

338
00:31:57,780 --> 00:32:00,930
and when you start to get into well how
do I code defensively to prevent these

339
00:32:00,930 --> 00:32:02,220
kinds of things

340
00:32:02,220 --> 00:32:07,290
well line one that's the same as before
get a clover of a specific file when you

341
00:32:07,290 --> 00:32:09,060
don't know if I'll beforehand

342
00:32:09,060 --> 00:32:13,740
well you can just use that same variable
that you used to use and supply it as

343
00:32:13,740 --> 00:32:18,780
the value for a parameter no matter what
you put in there semicolons back takes

344
00:32:18,780 --> 00:32:24,629
whatever power shall knows since it owns
the parser it owns the the the binder

345
00:32:24,630 --> 00:32:28,470
it's only ever going to provide that as
a value to that parameter

346
00:32:29,520 --> 00:32:34,110
now sometimes what will happen is you
don't actually know the parameters you

347
00:32:34,110 --> 00:32:35,639
want to call beforehand

348
00:32:35,640 --> 00:32:38,910
maybe sometimes it's the path parameter
and sometimes it's the little path

349
00:32:38,910 --> 00:32:43,050
parameter so that's where you get a
function called splatting here is this

350
00:32:43,050 --> 00:32:45,419
hash table syntax line number six

351
00:32:45,420 --> 00:32:49,620
what you do here is you pack up a hash
table with the different parameters and

352
00:32:49,620 --> 00:32:55,409
they're different values and then send
that to the command powershell knows

353
00:32:55,410 --> 00:32:59,460
that it's going to apply all the keys
and all the values as parameters and

354
00:32:59,460 --> 00:33:05,850
parameter values without any danger of
injection the last one here is the line

355
00:33:05,850 --> 00:33:11,010
11 and 12 sometimes very rare but
sometimes you don't even know the

356
00:33:11,010 --> 00:33:13,860
command that you want to invoke
beforehand

357
00:33:13,860 --> 00:33:17,340
that's where the invocation operator is
your friend you can still store the

358
00:33:17,340 --> 00:33:21,000
command name in a string use this
ampersand which is the invocation

359
00:33:21,000 --> 00:33:27,450
operator and you can combine the
invocation operator splatting and

360
00:33:27,450 --> 00:33:31,260
everything else and get the ability to
run a command that you don't know

361
00:33:31,260 --> 00:33:35,820
parameters you don't know an argument
you don't know without any danger of

362
00:33:35,820 --> 00:33:37,409
script injection at all

363
00:33:37,410 --> 00:33:40,170
so this is a really important thing to
note when you're writing your own

364
00:33:40,170 --> 00:33:50,310
functions that are going to be exposed
as part of a gia attack surface so the

365
00:33:50,310 --> 00:33:51,169
next big part

366
00:33:51,170 --> 00:33:56,900
talking about creating all these
endpoints and the big thing here is the

367
00:33:56,900 --> 00:34:01,760
configurations as the reply to the
server themselves so when you connect to

368
00:34:01,760 --> 00:34:05,210
a remote again . it's got a couple
things you can do there's a name

369
00:34:05,210 --> 00:34:09,560
there's the actual so who's allowed to
actually connect to that end . what's

370
00:34:09,560 --> 00:34:13,429
the identity that's going to be used
when somebody connects up to that end .

371
00:34:13,429 --> 00:34:19,370
and then there's the run space
configuration so powershell packs all

372
00:34:19,370 --> 00:34:23,418
this into something called an initial
session state and in that you can also

373
00:34:23,418 --> 00:34:27,139
define a startup script so whenever
anybody connects up it'll run whatever

374
00:34:27,139 --> 00:34:31,580
script you want and then you can finally
lock down all the commands you want to

375
00:34:31,580 --> 00:34:35,540
run so it's a great way to do more
custom things when somebody connects up

376
00:34:35,540 --> 00:34:40,580
so the PS session configuration
commandments are the ones you want to

377
00:34:40,580 --> 00:34:47,179
use for setting these things that when
we put it all together this is what it

378
00:34:47,179 --> 00:34:52,429
ends up looking like when you create a
constrained powershell configuration you

379
00:34:52,429 --> 00:34:57,710
knew PS roll capability file that's the
way to create a role capability and then

380
00:34:57,710 --> 00:35:01,520
has tab completion and all this kind of
stuff for all the parameters and all the

381
00:35:01,520 --> 00:35:07,250
commandments and aliases all that kind
of stuff you can create a new PS session

382
00:35:07,250 --> 00:35:11,240
configuration file so that lets you
configure the that the mapping of rolled

383
00:35:11,240 --> 00:35:16,790
capabilities and all that kind of stuff
at the end . itself and finally you call

384
00:35:16,790 --> 00:35:20,330
the register PS session configuration
command limit to actually make that

385
00:35:20,330 --> 00:35:25,460
session configuration active now the one
point i would point out as i talked

386
00:35:25,460 --> 00:35:28,640
about the name parameter so the name
parameter is awesome

387
00:35:28,640 --> 00:35:32,120
what you actually want to do is replace
the default one which is Microsoft

388
00:35:32,120 --> 00:35:37,370
powershell so that anybody connecting by
default to that end . without specifying

389
00:35:37,370 --> 00:35:41,330
like a special name or anything they
just connect up with powershell and they

390
00:35:41,330 --> 00:35:45,500
get the commands that they're supposed
to use what you might want to do is

391
00:35:45,500 --> 00:35:48,770
create another one kind of like a break
the glass and point where they can go

392
00:35:48,770 --> 00:35:53,570
off and I you can give some very
specific people the privilege to go on

393
00:35:53,570 --> 00:35:56,650
and fix a broken configuration

394
00:35:56,650 --> 00:36:05,140
there's a ton of things you can do
enroll capabilities the ones highlighted

395
00:36:05,140 --> 00:36:10,270
in yellow or kind of the most important
ones the you're probably not going to

396
00:36:10,270 --> 00:36:13,180
run into much about environment
variables or types of process or

397
00:36:13,180 --> 00:36:14,710
anything

398
00:36:14,710 --> 00:36:19,089
the the important thing to recognize is
with the command capabilities in the

399
00:36:19,089 --> 00:36:23,740
commands that you expose these can be
anything PowerShell commands work made

400
00:36:23,740 --> 00:36:27,069
of X's work anything that you can
automate and that's kind of the

401
00:36:27,069 --> 00:36:31,630
prerequisite for gia is that you've
already found a way to automate some of

402
00:36:31,630 --> 00:36:36,579
your stuff you're never going to be able
to expose perugia like restricting where

403
00:36:36,579 --> 00:36:41,770
the mouse can go in some sort of menu so
here's all the stuff that goes into a

404
00:36:41,770 --> 00:36:48,609
ps1 capability file session
configurations have a bunch of cool

405
00:36:48,609 --> 00:36:53,650
things too and the one thing so it's
obviously the session type that I talked

406
00:36:53,650 --> 00:36:55,630
about the runners virtual account

407
00:36:55,630 --> 00:37:00,490
one of the neat things sometimes you'll
need a group so that when somebody is

408
00:37:00,490 --> 00:37:04,450
running on a machine they're not
actually just looking

409
00:37:05,109 --> 00:37:08,259
are you a member of the administrators
group sometimes you need to be a member

410
00:37:08,260 --> 00:37:12,339
of an alternate group and so as part of
this you can set up the run as virtual

411
00:37:12,339 --> 00:37:16,900
accounts group when you also specify the
runners virtual account when the person

412
00:37:16,900 --> 00:37:21,250
connects up to that machine will be a
virtual administrator as part of the the

413
00:37:21,250 --> 00:37:28,150
local group that you've decided to put
them in on that machine the one

414
00:37:28,150 --> 00:37:32,020
important point to is I pointed out when
you start trying to run commands and one

415
00:37:32,020 --> 00:37:37,000
of these things you always want to do
the language mode of no language you

416
00:37:37,000 --> 00:37:40,480
don't want to ever expose the powerful
language directly because there's just

417
00:37:40,480 --> 00:37:43,480
far too much capability in it

418
00:37:44,300 --> 00:37:50,420
one of the cool things that we do two
years we've got this security descriptor

419
00:37:50,420 --> 00:37:54,980
little if you wanted to you can
handcraft this create this little by

420
00:37:54,980 --> 00:37:56,180
hand

421
00:37:56,180 --> 00:37:59,149
you can also show the security
descriptor you lie while you're creating

422
00:37:59,150 --> 00:38:02,870
this thing and you'll get that
traditional Windows picture that lets

423
00:38:02,870 --> 00:38:08,120
you stay here the groups and users we
want to provide access to now the cool

424
00:38:08,120 --> 00:38:13,220
thing is power shall automatically
create this correct settle for you when

425
00:38:13,220 --> 00:38:17,390
the role configuration when you specify
which users and groups are allowed

426
00:38:17,390 --> 00:38:22,069
access it will automatically go and
create a single out of those users and

427
00:38:22,070 --> 00:38:25,730
groups and that becomes it won't even
allow domain admins to connect up to

428
00:38:25,730 --> 00:38:29,630
that is very very whitelisted to what
you've exposed in your in your role

429
00:38:29,630 --> 00:38:39,860
configuration now when you start locking
things down it can get complicated so

430
00:38:39,860 --> 00:38:44,810
we've invested a bunch and diagnostics
so the first one you see here get PSN

431
00:38:44,810 --> 00:38:49,670
configuration that shows me like just
checking out what a configuration is is

432
00:38:49,670 --> 00:38:55,130
like who's allowed to use things these
have a sail attached like i had

433
00:38:55,130 --> 00:38:59,630
mentioned we have a commandment now that
you can go off and take a single string

434
00:38:59,630 --> 00:39:03,200
and convert it to something more human
readable so this convert from civil

435
00:39:03,200 --> 00:39:10,490
string so you see here on this 1i
allowed the dns admin access but nothing

436
00:39:10,490 --> 00:39:11,270
else

437
00:39:11,270 --> 00:39:17,810
now one of the things you don't want to
do when you're creating one of these

438
00:39:17,810 --> 00:39:22,610
restricted things is to say hey dns
admin can have your password because i

439
00:39:22,610 --> 00:39:25,700
want to like log in and see which
commands you have available there like

440
00:39:25,700 --> 00:39:30,319
just not that friendly i don't know why
but what you can do here is you can run

441
00:39:30,320 --> 00:39:36,770
the get PSN capability you can give it
access to the the end . name give it the

442
00:39:36,770 --> 00:39:40,610
username or group that join a test and
it will automatically go and tell you

443
00:39:40,610 --> 00:39:43,550
what Commandments would have been
applied to that user sort of like a

444
00:39:43,550 --> 00:39:50,430
what-if mode for applying gia the

445
00:39:50,430 --> 00:39:56,339
use these startup scripts they can do
anything you can set up logging

446
00:39:56,339 --> 00:40:00,990
pipe-like pipeline logging is a great
thing in powershell shows you all

447
00:40:00,990 --> 00:40:05,098
commands that are run if you've been a
machine where it's just too noisy to get

448
00:40:05,099 --> 00:40:06,150
that setup

449
00:40:06,150 --> 00:40:10,109
well this is an approach you can do in
your startup script to only apply the

450
00:40:10,109 --> 00:40:15,930
pipeline logging during this session and
this is the kind of data that you see

451
00:40:15,930 --> 00:40:19,109
when somebody's connecting you can see
the command their arguments

452
00:40:22,740 --> 00:40:27,419
here's a great example to maybe you say
whenever somebody connects i'm going to

453
00:40:27,420 --> 00:40:28,260
send a mail

454
00:40:28,260 --> 00:40:31,650
maybe it's a very sensitive server
whenever somebody connects I'm gonna

455
00:40:31,650 --> 00:40:33,720
send a mail to some box

456
00:40:33,720 --> 00:40:37,500
what about automatic logging and an
email box or a ticket or something like

457
00:40:37,500 --> 00:40:43,650
that for every time somebody connects
maybe you want to even start to apply

458
00:40:43,650 --> 00:40:48,660
some date restrictions if anybody's
connecting in the weekend you just throw

459
00:40:48,660 --> 00:40:50,129
an exception go home

460
00:40:50,130 --> 00:40:54,180
no connections allowed to this end . on
the weekend or during a change window

461
00:40:54,180 --> 00:40:59,339
right and if you're interested in
starting down the path of doing the way

462
00:40:59,339 --> 00:41:03,029
I want to start restricting time down
when people can connect when they can do

463
00:41:03,030 --> 00:41:06,299
that their privileged identity
management stuff you want to restrict

464
00:41:06,299 --> 00:41:08,910
that this is a great way to get messing
with it right

465
00:41:08,910 --> 00:41:13,618
put a CSV somewhere do a hacky rest look
up to a ticket system and make sure that

466
00:41:13,619 --> 00:41:18,150
there's a ticket applied to this machine
at that time that's like an afternoon of

467
00:41:18,150 --> 00:41:22,680
work to mess around with that as opposed
to going off and spending a huge like

468
00:41:22,680 --> 00:41:26,220
sales and whatever engagement to get
somebody to tell you that it's going to

469
00:41:26,220 --> 00:41:30,058
do the job no matter what you can mess
around say this is really doing good

470
00:41:30,059 --> 00:41:37,260
things for us let's go further down this
path so back to

471
00:41:37,260 --> 00:41:41,370
security exposure question right we had
time is that one access capability as

472
00:41:41,370 --> 00:41:46,290
the other when you bring in the
privilege identity management that gets

473
00:41:46,290 --> 00:41:49,770
you sometime stuff or even your GF
startup scripts get you the time stuff

474
00:41:52,380 --> 00:41:56,400
jiya gives you the capability on that
cross axis when you start combining them

475
00:41:56,400 --> 00:42:01,290
bubble your attack service now goes to
this really really small square of just

476
00:42:01,290 --> 00:42:04,620
people doing just what they're allowed
to do just when they're allowed to do

477
00:42:04,620 --> 00:42:07,620
them as pretty pretty epic

478
00:42:10,320 --> 00:42:14,640
we got a ton of resources on gia I we've
been working on it for a long time you

479
00:42:14,640 --> 00:42:20,640
got that introduction to G on the AKMs
is a tennis stuff about powershell

480
00:42:20,640 --> 00:42:24,600
security and logging in the powershell
hearts the blue team blog and of course

481
00:42:24,600 --> 00:42:30,000
the powershell blog you've got tons of
stuff always drop a new stuff in a new

482
00:42:30,000 --> 00:42:33,000
info so thanks for time

483
00:42:41,550 --> 00:42:46,710
any-any questions like I stickers by the
way if anybody wants some questions or

484
00:42:46,710 --> 00:42:50,100
no questions i'm finally getting sticker
anyways

485
00:42:50,100 --> 00:42:57,420
oh come on by their their paper the late
haha that's a good you would expect me

486
00:42:57,420 --> 00:42:59,820
to do i shall

