1
00:00:00,000 --> 00:00:18,449
you alright so hash view basically it's
a web frontend for cracking passwords so

2
00:00:18,449 --> 00:00:20,430
this all started about a year ago

3
00:00:20,430 --> 00:00:24,720
we're penetration testers and so had
this problem where we kept doing the

4
00:00:24,720 --> 00:00:30,119
same thing over and over we kept
cracking passwords but we upload it

5
00:00:30,119 --> 00:00:33,960
would have the shell script that runs
hash cat underneath the hood and runs

6
00:00:33,960 --> 00:00:38,700
all these and we kept going back looking
at it and you know someone else on the

7
00:00:38,700 --> 00:00:42,420
team will be like hey is the password
cracker free because we built this

8
00:00:42,420 --> 00:00:49,950
modestly ok 6 GPU and video 9 seventies
to our team to crack passwords on Raw

9
00:00:49,950 --> 00:00:55,020
penetration testers but there's also
some auditors that dude password audits

10
00:00:55,020 --> 00:00:59,070
so we're always fighting over the
restore so we always have jobs running

11
00:00:59,070 --> 00:01:04,530
and then someone stops one job and
someone else starts up their job and

12
00:01:04,530 --> 00:01:08,850
then the other job doesn't start so we
need this conflict job management

13
00:01:08,850 --> 00:01:14,610
essentially and a top of job management
like what we have wordless hash list we

14
00:01:14,610 --> 00:01:19,049
have passed customers so we had all
these features i can't start organically

15
00:01:19,049 --> 00:01:25,650
growing into this in his web app / past
year so there's a couple things that we

16
00:01:25,650 --> 00:01:32,970
want to tackle we want to there were
some alternatives and those alternatives

17
00:01:32,970 --> 00:01:42,240
were basically either closed-source we
had by a big expensive GPU rig we want

18
00:01:42,240 --> 00:01:47,429
something open source that we can kind
of give back to the community we want to

19
00:01:47,430 --> 00:01:53,610
take advantage of PVC crack passwords so
we work we go from client to client we

20
00:01:53,610 --> 00:01:58,920
get a lot of hashes and by the time the
engagements done maybe we're still

21
00:01:58,920 --> 00:02:04,979
cracking oh and we can still get still
get some passwords but we move on to

22
00:02:04,979 --> 00:02:08,100
another clients and it would be really
nice if

23
00:02:08,100 --> 00:02:13,140
we ran hash cat task that ended up
cracking this new hash can we go back

24
00:02:13,140 --> 00:02:15,929
and take a look at some of the previous
clients that we did maybe the last six

25
00:02:15,930 --> 00:02:22,200
months and in to be cracking those so we
want to take advantage of that we also

26
00:02:22,200 --> 00:02:26,820
want to queue up jobs i mentioned the
job management you know that was kind of

27
00:02:26,820 --> 00:02:30,540
a problem I quick question here though

28
00:02:30,540 --> 00:02:36,090
how many of your pen testers oh well
she's that's a lot and enterprise

29
00:02:36,090 --> 00:02:43,320
security internal so how often do you
crack everyone crack passwords maybe

30
00:02:43,320 --> 00:02:44,730
once a week at least

31
00:02:44,730 --> 00:02:49,890
okay okay three times a day we go

32
00:02:51,120 --> 00:02:55,710
so it's important that the objectives
that we want to achieve our focus as a

33
00:02:55,710 --> 00:03:00,090
penetration tester consultant but what
we found out is you know if you have an

34
00:03:00,090 --> 00:03:07,740
internal team enterprise security
features overlap pretty well alright so

35
00:03:07,740 --> 00:03:10,950
additional as you see on the slide here
one things we wanted to get was

36
00:03:10,950 --> 00:03:13,079
notifications with jobs finished

37
00:03:13,080 --> 00:03:18,720
you know we also want to be like that Q
of jobs so like want jobs finished

38
00:03:18,720 --> 00:03:21,210
we want to wait to the next morning
started up so get those notifications

39
00:03:21,210 --> 00:03:23,040
that's great

40
00:03:23,040 --> 00:03:26,970
an additional to that we like Anna
analytics and reporting it's one thing

41
00:03:26,970 --> 00:03:30,270
to just say hey we practically passers
in the domain but actually show you like

42
00:03:30,270 --> 00:03:34,560
hey by the way the most common passwords
password or you know you have these 10

43
00:03:34,560 --> 00:03:37,800
users that have the same password home
that might be an indication that you

44
00:03:37,800 --> 00:03:41,250
guys have a bad process in place of
resetting passwords may be a help desk

45
00:03:41,250 --> 00:03:44,640
that setting anything with the 1password
things like that we want to have some

46
00:03:44,640 --> 00:03:46,619
sort of good analytics and reporting for
it

47
00:03:46,620 --> 00:03:51,090
yes especially with reporting if you you
know you crack all these passwords and

48
00:03:51,090 --> 00:03:54,390
you got to get to reporting tool that
format the way that this reporting tool

49
00:03:54,390 --> 00:03:58,019
you know wants and then you do that over
and over we wanted to take care of that

50
00:03:58,020 --> 00:04:01,920
as well and just literally copy and
paste some pretty graphic straight into

51
00:04:01,920 --> 00:04:03,119
a report

52
00:04:03,120 --> 00:04:07,860
yep again we want to leverage hash cat
will of hash cat all the features and

53
00:04:07,860 --> 00:04:13,320
and and hashes that they do we want to
maintain that because we want to keep

54
00:04:13,320 --> 00:04:17,099
that awesomeness and then lastly I'm
store and search for results again like

55
00:04:17,100 --> 00:04:18,680
let's say your engagement you get one

56
00:04:18,680 --> 00:04:21,620
ash there's no sense in trying to throw
it up in the cracker want to grab we

57
00:04:21,620 --> 00:04:25,520
just want to have a quick search we
search for it so we want to have a force

58
00:04:25,520 --> 00:04:32,599
so we submit the talk along two weeks I
don't know soon as we got accepted

59
00:04:32,600 --> 00:04:37,669
that's essentially what r get hub look
like so like any really good open source

60
00:04:37,669 --> 00:04:41,299
tool it gets coated you know about four
hours of sleep a lot caffeine

61
00:04:42,530 --> 00:04:45,948
alright so before we actually go into
the presentation itself i want to talk

62
00:04:45,949 --> 00:04:50,000
about some key components to some naming
conventions you guys understand what

63
00:04:50,000 --> 00:04:53,539
we're talking about here so last slide
before we get to demo the rest is all

64
00:04:53,539 --> 00:04:57,620
demo so alright so the first part is
users this is a multi-user application

65
00:04:57,620 --> 00:05:00,410
so again you can login with different
users have audit abilities who's doing

66
00:05:00,410 --> 00:05:01,699
what

67
00:05:01,699 --> 00:05:06,199
that's the end user uses consultant
customers again where designers

68
00:05:06,199 --> 00:05:10,729
pentester so this could be your client
we like to tie in every job every hash

69
00:05:10,729 --> 00:05:14,479
file they are uploading to a specific
customer again works better for

70
00:05:14,479 --> 00:05:19,940
recording that way tasks now a task if
you get familiar with hash cat is a

71
00:05:19,940 --> 00:05:24,169
single hash cat command so they could be
like a dictionary command or a mass

72
00:05:24,169 --> 00:05:28,639
command or something like that that's
considered a single task a job is a

73
00:05:28,639 --> 00:05:31,490
series of tasks you take a bunch of
these different tasks that you want to

74
00:05:31,490 --> 00:05:34,070
run like maybe this wordlist in this
wordlist maybe this wordlist with the

75
00:05:34,070 --> 00:05:39,080
rule and support you combine that all
together into one job word lists are

76
00:05:39,080 --> 00:05:43,159
worthless or dictionaries and then hash
files are the actual files of hashes

77
00:05:43,159 --> 00:05:55,130
that you upload all right three so demo
time so this is the only receive yeah so

78
00:05:55,130 --> 00:06:07,669
this is the layout of props but it just
working two seconds ago with you

79
00:06:07,669 --> 00:06:12,948
exhibitors and remote area

80
00:06:12,949 --> 00:06:21,830
yeah different desk tabs via powerpoint
man like more

81
00:06:24,889 --> 00:06:33,319
we might have some funky looking layouts
I guess it never tested it was such a

82
00:06:33,319 --> 00:06:36,710
horrible resolution that good can you
guys see here

83
00:06:38,389 --> 00:06:46,129
ok bye going to figure it's gonna look
pretty shitty probably so epic so ash

84
00:06:46,129 --> 00:06:51,949
view our props to buffalo will and
baggage on those guys wrote of college

85
00:06:51,949 --> 00:06:57,379
Serpico and it really turned me on to
Ruby sriracha it just how quickly can

86
00:06:57,379 --> 00:07:02,090
develop because I pulled a club full
disclosure neither of us are web app

87
00:07:02,090 --> 00:07:09,409
developers but we get what we get we get
by so I hashmi here's the main thing

88
00:07:09,409 --> 00:07:13,580
after login you can see there's no jobs
actually looks pretty boring and bland

89
00:07:13,580 --> 00:07:19,520
if you don't have any jobs running it
detects the GPUs that you have and just

90
00:07:19,520 --> 00:07:23,990
kind of lay them out but of course you
know support anything that hash cap

91
00:07:23,990 --> 00:07:31,819
supports we did all our testing hash cat
three times and above so just use hash

92
00:07:31,819 --> 00:07:38,870
cat3 latest over the right give you just
kind of recently crack passwords this is

93
00:07:38,870 --> 00:07:42,259
just cancel you know that things are
working really over here on the left is

94
00:07:42,259 --> 00:07:47,210
actually a job he wants to queue up a
job so hot shows how search up

95
00:07:47,210 --> 00:07:51,378
alright so typically when you log in a
few have it setup you want to run a job

96
00:07:51,379 --> 00:07:56,689
in the way you do that is you know great
job and every job that you have a name

97
00:07:56,689 --> 00:07:59,689
for it so in this case we're going to
college and derby

98
00:08:00,199 --> 00:08:11,599
I can't type and again we have pre-built
some tasks and and information so in

99
00:08:11,599 --> 00:08:15,860
this case the Acme corporate and you can
create a new customer if you want like

100
00:08:16,500 --> 00:08:21,840
yeah now for customers again if you're
like an internal security this could be

101
00:08:21,840 --> 00:08:29,010
projects or whatnot you're working out
of certain web app or certain apartment

102
00:08:29,010 --> 00:08:38,189
or you can just put your company name to
dope right and one thing i just

103
00:08:38,190 --> 00:08:42,060
mentioned that we can do notifications
alright so that way we can check that

104
00:08:42,059 --> 00:08:45,060
and then when this job finishes will get
notified for it

105
00:08:45,990 --> 00:08:50,850
alright so again when you upload hashes
you have to give it a name so we just

106
00:08:50,850 --> 00:09:02,610
call us or medium crack now in this case
we're gonna be demoing . pw dump file

107
00:09:02,610 --> 00:09:07,770
what's really cool about this is that we
can support multiple file types we

108
00:09:07,770 --> 00:09:12,630
support video we don't have shadow files
as well as a-rod dump

109
00:09:12,630 --> 00:09:18,420
ok so Roger was just basically hashes in
a file it tries to detect it in this

110
00:09:18,420 --> 00:09:23,130
case it's successfully detected pw dump
file and the next thing it does it tries

111
00:09:23,130 --> 00:09:29,250
to identify what hashes in there so in
this case we know it's and tell em but

112
00:09:29,250 --> 00:09:33,540
you could change it to you know LM or
other and you can actually type in the

113
00:09:33,540 --> 00:09:41,699
hash cat mode that you want to do not
attend so what's doing now is going to

114
00:09:41,700 --> 00:09:44,820
go through and it's going to take all
the information like I said we do

115
00:09:44,820 --> 00:09:48,270
auto-detect is based off of some fancy
red x's i'm going to call information

116
00:09:48,270 --> 00:09:51,990
and throw it into the database now we
are running this over VPN so this might

117
00:09:51,990 --> 00:09:54,060
take a quick second here to do

118
00:09:54,060 --> 00:10:03,959
sorry to our data plan owner it's kind
of nerve-wracking when I your demo is on

119
00:10:03,960 --> 00:10:07,380
your cell through VPN pathway

120
00:10:09,860 --> 00:10:16,190
while this is going on any quick
questions so that's an excellent

121
00:10:16,190 --> 00:10:18,260
question so when you do you

122
00:10:18,260 --> 00:10:22,910
yeah well we'll show that we're going to
stop a couple jobs here to show that job

123
00:10:22,910 --> 00:10:28,160
management that's that feature where
this is job number one or databases a

124
00:10:28,160 --> 00:10:34,339
clean right now but when we when we
upload and we start cracking jobs if you

125
00:10:34,339 --> 00:10:40,760
have another job and you click that and
on the upload it will automatically go

126
00:10:40,760 --> 00:10:46,250
ahead and determine ofic and cracked
this password hash before if so will

127
00:10:46,250 --> 00:10:50,269
automatically marked as crack so that
way you know if you're familiar with a

128
00:10:50,269 --> 00:10:53,480
pot file it's very similar to that the
only difference is that you don't

129
00:10:53,480 --> 00:10:56,600
actually have to check the pop file
meaning that you can not interrupt

130
00:10:56,600 --> 00:10:59,600
someone else's crash cat process will do
this

131
00:11:01,190 --> 00:11:16,910
yes yeah yes we have put a lot of work
into making sure that it does but if you

132
00:11:16,910 --> 00:11:19,189
find an instance where doesn't please
let us know

133
00:11:19,190 --> 00:11:23,240
alright so after we've uploaded the hash
file now we need to assign what kind of

134
00:11:23,240 --> 00:11:28,279
tasks or operations want to do this now
we ship this with a few tasks that you

135
00:11:28,279 --> 00:11:31,579
can create your own so for example here
we have a basic dictionary

136
00:11:31,579 --> 00:11:35,750
we also uploaded a word lesser
dictionary lists with it as well and

137
00:11:35,750 --> 00:11:39,380
we're going to do basically list with
the best 64 rules again we support all

138
00:11:39,380 --> 00:11:44,660
the the rules that hash cat supports
yeah

139
00:11:45,260 --> 00:11:50,660
dell XPS is ship your keyboard and mouse
and then lower alpha if you're familiar

140
00:11:50,660 --> 00:11:54,589
with mask mode that's an example that
where again we just this is it just a

141
00:11:54,589 --> 00:11:58,220
title in there and then we also have the
opportunity to a Robert this is

142
00:11:58,220 --> 00:12:02,029
concerned similar to your a3 we're just
kind of increments through we do set a

143
00:12:02,029 --> 00:12:06,380
hard limit on how long you want the jobs
run that's a configuration you can

144
00:12:06,380 --> 00:12:11,209
choose in this demo I think we do at 24
hours but you can go as long as you want

145
00:12:11,209 --> 00:12:16,969
I'm again so you just not hogging up the
hot the job once that's done go ahead

146
00:12:16,970 --> 00:12:20,540
and create going again the back and
build out all the commands you need to

147
00:12:20,540 --> 00:12:22,400
do and then now we have a list of

148
00:12:22,400 --> 00:12:28,490
jobs what we can do is go ahead and kick
that off and in the background is gonna

149
00:12:28,490 --> 00:12:33,020
go ahead and like I said cue up the hash
cat and the GPUs and everything like

150
00:12:33,020 --> 00:12:36,770
that this page auto-refresh is here to
let you know if we can catch it quickly

151
00:12:36,770 --> 00:12:40,970
enough we might be able to see some
results so that main color council there

152
00:12:40,970 --> 00:12:44,360
is now showing you basically the output
of the hash cat command so you know

153
00:12:44,360 --> 00:12:48,350
that's running gives you all the specs
and whatnot the heat attempts and so

154
00:12:48,350 --> 00:12:52,130
forth but now on the job queue you can
actually see each of the tasks that are

155
00:12:52,130 --> 00:12:56,270
running their current status you see
that we already finished the basic word

156
00:12:56,270 --> 00:13:00,500
list and on the right we have the
results already listed up there we can

157
00:13:00,500 --> 00:13:04,100
also see about the top here that we have
a progress bar letting you know this is

158
00:13:04,100 --> 00:13:09,470
the overall progress bar of patches
crack versus what's remaining as opposed

159
00:13:09,470 --> 00:13:12,470
to just that specific task

160
00:13:13,010 --> 00:13:17,990
ok so we already finish top three will
let this rod one run because i want to

161
00:13:17,990 --> 00:13:21,170
show you some other stuff that happens
while this is all going on so again this

162
00:13:21,170 --> 00:13:25,069
is a multi user interface so the idea is
that lets say we have a second user who

163
00:13:25,070 --> 00:13:28,580
wants to use this solution they can use
it without interrupting the other

164
00:13:28,580 --> 00:13:44,210
process so let's go ahead and create a
new user and emails optional emails

165
00:13:44,210 --> 00:13:47,210
again use for notifications one job
positions

166
00:13:48,530 --> 00:13:53,660
ok so then one of the other things like
that you mentioned command word lists we

167
00:13:53,660 --> 00:13:57,350
ship it with the default word list for
the demo we were going to upload the

168
00:13:57,350 --> 00:14:02,060
rock you database but again we're VPN
over phone and we don't want to data so

169
00:14:02,060 --> 00:14:05,209
we also like to show you at least the
size of words in there so you know which

170
00:14:05,210 --> 00:14:06,170
ones are which

171
00:14:06,170 --> 00:14:12,319
but you just basically upload your list
that way as well on tasks like I said

172
00:14:12,320 --> 00:14:16,190
our operations you want to do for it for
each the word lists or the hashtag

173
00:14:16,190 --> 00:14:19,880
commands we have again the default that
we have but let's go ahead and create

174
00:14:19,880 --> 00:14:29,450
two new ones so we're going to call this
around you and we support you the

175
00:14:29,450 --> 00:14:31,980
picture mode mass mode and brute force

176
00:14:31,980 --> 00:14:34,980
with dictionary you can select which
ones you've uploaded in this case we

177
00:14:34,980 --> 00:14:38,370
have the rocky one and we're not going
to do any dictionary rules for this one

178
00:14:38,370 --> 00:14:56,730
who here has the problem where there
they run through like a script or

179
00:14:56,730 --> 00:15:01,530
something that they have like 50
different hash cat commands for one same

180
00:15:01,530 --> 00:15:12,420
pw . while you guys do that where you
set Robert left for us we have like a

181
00:15:12,420 --> 00:15:24,750
lot of different jobs a lot of different
word list rules mass sure we include the

182
00:15:24,750 --> 00:15:30,030
default rule set that hash cat comes
with and that's about it so you could

183
00:15:30,030 --> 00:15:37,260
upload those actually the hood
appropriate rack or so again like for

184
00:15:37,260 --> 00:15:39,990
mass mode we support all the the
switches if you want to do a character

185
00:15:39,990 --> 00:15:43,980
class with a dash 1 and so forth that's
also an option available for you

186
00:15:43,980 --> 00:15:49,860
so these are just a three tasks we just
created here for this as i mentioned

187
00:15:49,860 --> 00:15:55,110
also every job that we run every hash
value upload is tied to a customer so we

188
00:15:55,110 --> 00:15:58,740
can create new customers if we want we
have like I said acne and yahoo dump

189
00:15:58,740 --> 00:16:08,550
which we already have yahoo job running
it you can on

190
00:16:08,550 --> 00:16:12,150
however if it's currently running we
haven't tested what happens if you

191
00:16:12,150 --> 00:16:16,079
modify the task mid operation typically
want to let it finish stop it and

192
00:16:16,080 --> 00:16:24,840
restarted Combinator tax yet

193
00:16:24,840 --> 00:16:27,930
yeah so that's a rule is that you could
hurt yeah that's real is that you can

194
00:16:27,930 --> 00:16:29,760
add in there

195
00:16:29,760 --> 00:16:32,769
what you want to name this demo

196
00:16:32,769 --> 00:16:40,839
so then like I said you just create the
customers at all right so is that we

197
00:16:40,839 --> 00:16:44,499
wanted demo what it's like with having
multi-user so i'll go is it from this

198
00:16:44,499 --> 00:16:47,769
user and login as the red team user to
show you what it's like to keep the

199
00:16:47,769 --> 00:16:48,759
second job

200
00:16:48,759 --> 00:16:51,759
yes

201
00:16:53,230 --> 00:17:01,899
not right now and I know it's not
designed for that excellent question

202
00:17:06,250 --> 00:17:11,589
yeah we thought about going that route
you know making it extremely concerned

203
00:17:11,589 --> 00:17:18,339
about me on that security because right
now it's yeah yeah yeahs generally where

204
00:17:18,339 --> 00:17:23,438
you keep all your clients password and
password hashes you really don't want to

205
00:17:23,439 --> 00:17:28,899
run that risk that so I'm the other
pentester I come in here and I've got

206
00:17:28,899 --> 00:17:37,360
myself a pwm / whatever hashes that I
have an idea log in and I see someone's

207
00:17:37,360 --> 00:17:44,949
got a job running and I'm like that's
great i want to run my job so let's go

208
00:17:44,950 --> 00:18:09,549
ahead and create a job too close will
cost to be dumped too so you talk about

209
00:18:09,549 --> 00:18:17,470
the notify here we can go to find when
that's finished we'll demo that here in

210
00:18:17,470 --> 00:18:20,230
a second

211
00:18:20,230 --> 00:18:23,230
let's call this small dump

212
00:18:28,630 --> 00:18:37,750
again we're just dealing with Wi-Fi
files we do support moment qualify for

213
00:18:37,750 --> 00:18:42,160
my multiple passion but one of things we
want to demonstrate here is what your

214
00:18:42,160 --> 00:18:46,210
question was what is it detect on
important which is going to show you

215
00:18:46,210 --> 00:18:47,770
here

216
00:18:47,770 --> 00:18:53,710
yes so if you just click the detect
previously cracked while this is

217
00:18:53,710 --> 00:18:58,630
uploading it's gonna go ahead and say
hey I cracked anything that matches so

218
00:18:58,630 --> 00:19:02,530
for the sake of the demo what we do is
we actually took a subset of the same

219
00:19:02,530 --> 00:19:06,010
passion so we can show this
functionality now when it does come

220
00:19:06,010 --> 00:19:09,879
these returns keep in mind lots of the
screen on the upper top needle problem

221
00:19:09,880 --> 00:19:13,900
saying you've detected previously so
many hatches and also combine our other

222
00:19:13,900 --> 00:19:14,530
jobs

223
00:19:14,530 --> 00:19:19,720
it's still running what's going on so
we're able to take advantage of the

224
00:19:19,720 --> 00:19:22,060
progress of the other jobs here we go

225
00:19:22,060 --> 00:19:27,520
so 514 of these hashes very previously
been cracked so it's good now we'll show

226
00:19:27,520 --> 00:19:34,750
you where you can actually be with those
so i can go through and just add

227
00:19:34,750 --> 00:19:38,710
whatever here i'll add some of the new
tasks that we showed you that we created

228
00:19:38,710 --> 00:19:54,400
you might be repeat the same task twice
you don't get the advantages of it so we

229
00:19:54,400 --> 00:19:59,920
can see that this user red team user1
alright has his job

230
00:19:59,920 --> 00:20:06,280
it's running still I could talk to
office I'd hey you can't stop your job

231
00:20:06,280 --> 00:20:13,000
and run mine pick up his job later or
hey can I can I just you know Q of mine

232
00:20:13,000 --> 00:20:16,150
so I hit play to keep it up

233
00:20:16,150 --> 00:20:22,420
the statistics are still from the
current job and tasks running as you can

234
00:20:22,420 --> 00:20:27,490
see down below here will have all will
have my job essentially with all the

235
00:20:27,490 --> 00:20:28,780
task queued up

236
00:20:28,780 --> 00:20:31,930
so what we'll do is we'll show you

237
00:20:34,659 --> 00:20:41,049
what it's like say I you can cancel /
task here so if you want to skip

238
00:20:41,049 --> 00:20:46,299
something or just stop it right away you
can stop it from the jobs list menu or

239
00:20:46,299 --> 00:20:51,099
you cannot just cancel specific tasks
and move on to the next one but since

240
00:20:51,099 --> 00:20:58,029
the last 1i I'll get hit cancel here .
yeah i think we set this up text you

241
00:20:58,029 --> 00:21:05,739
send an alert to my phone but chances
are it won't be at least that way

242
00:21:05,739 --> 00:21:14,979
windows is finishing yeah alright so you
can see that one jump it finished second

243
00:21:14,979 --> 00:21:18,159
jobs already kicked off again it takes
advantage of all the previously cracked

244
00:21:18,159 --> 00:21:22,960
ashes so we already have some great
results going through perfect and I get

245
00:21:22,960 --> 00:21:29,979
an email that says total hash is cracked
1400 issue something like that so so

246
00:21:29,979 --> 00:21:38,440
that's cool are we get a job handling
going makes a lot of pain points at

247
00:21:38,440 --> 00:21:42,369
least we experienced much better but
we'll get into some of the analytics

248
00:21:42,369 --> 00:21:47,199
here so a lot of our customers like to
see you know kind of pretty pictures of

249
00:21:47,200 --> 00:21:49,239
what it looks like

250
00:21:49,239 --> 00:21:58,840
let me show you analytics so soon as you
drop it into the analytics view what you

251
00:21:58,840 --> 00:22:05,049
have here is basically the total of all
the customers are all projects or

252
00:22:05,049 --> 00:22:09,369
whatever that you perform here so you
can get a nice pretty picture and see

253
00:22:09,369 --> 00:22:15,849
we've cracked 2900 out of you know 6900
some hashes so you can see how well you

254
00:22:15,849 --> 00:22:22,178
are cracking how well your rule sets and
stuff are working our analysis details

255
00:22:22,179 --> 00:22:27,340
the total amount of hashes to you you've
seen or upload a hash view totally

256
00:22:27,340 --> 00:22:33,488
unique users so if it does have users
will tell you the unique count unique

257
00:22:33,489 --> 00:22:42,039
passwords very interesting to know in
total runtime download crack file does

258
00:22:42,039 --> 00:22:46,720
allow you to download all the passwords
I've been cracked thus far

259
00:22:47,320 --> 00:22:56,230
and I'll put it in a significant you
probably can't see that but essentially

260
00:22:56,230 --> 00:23:08,260
it's username hash plane tax so password
count by length overall you know you

261
00:23:08,260 --> 00:23:11,950
guys are probably familiar with these
metrics we make sure we cover all the

262
00:23:11,950 --> 00:23:17,680
basics top-10 passwords you know
obviously really great for finding out

263
00:23:17,680 --> 00:23:22,270
that there's a pattern such as like
monday and then the dates you know

264
00:23:22,270 --> 00:23:33,250
season you guys all know about that and
so yeah essentially base words as well

265
00:23:33,250 --> 00:23:42,070
so that's all time essentially but I
recently just did this demo client to

266
00:23:42,070 --> 00:23:48,970
customer if I had multiple jobs here
with multiple hash files i can i can see

267
00:23:48,970 --> 00:23:54,670
all basically all the hashes for this
customer and in these are just analytics

268
00:23:54,670 --> 00:24:00,220
/ this customer so we can see total
hashes 3000 unique users 2900 the

269
00:24:00,220 --> 00:24:07,480
statistics are different we've cracked
many more here for just this customer so

270
00:24:07,480 --> 00:24:13,570
the analytics all change essentially
those are all the same same view is all

271
00:24:13,570 --> 00:24:18,399
time but one thing that's different with
analytics here is there's one more

272
00:24:18,400 --> 00:24:26,020
feature that when you specify the exact
hash dump that you perform you get one

273
00:24:26,020 --> 00:24:34,150
more piece of information essentially
all the way down at the bottom and its

274
00:24:34,150 --> 00:24:39,040
top 20 password hashes shared by users
so this is really common question that

275
00:24:39,040 --> 00:24:43,450
we get all the time from our clients and
customers like alright so you saw a

276
00:24:43,450 --> 00:24:47,950
bunch of this change me but like who
who's all the users that have you don't

277
00:24:47,950 --> 00:24:52,660
change me you can just quickly see that
a hundred and eighty-seven users share

278
00:24:52,660 --> 00:24:56,800
that same password now if the password
has not cracked yet

279
00:24:56,800 --> 00:25:03,430
it will also give us the hash as well so
we don't know what that is yet but we

280
00:25:03,430 --> 00:25:12,010
know that they're all sharing sharing
that same password so another thing that

281
00:25:12,010 --> 00:25:15,250
we ran into all the time is we just want
to quickly look up what we've already

282
00:25:15,250 --> 00:25:19,690
done in the past whether it be just
because when the current project or few

283
00:25:19,690 --> 00:25:25,840
projects ago we implemented a feature to
search this will search all the

284
00:25:25,840 --> 00:25:30,699
passwords hashes and information that
you've cracked thus far so we could

285
00:25:30,700 --> 00:25:38,560
search based on a username a hash or
password playing tax essentially let's

286
00:25:38,560 --> 00:25:48,550
take that hash that is viewed and let's
search and in here will just result give

287
00:25:48,550 --> 00:25:53,200
me the you know the username the plain
text displayed if we've cracked it

288
00:25:53,200 --> 00:25:59,440
the hash type the hash as well as the
customer that's associated with it so we

289
00:25:59,440 --> 00:26:09,310
can essentially do the same if we search
/ user name is it this is really this is

290
00:26:09,310 --> 00:26:12,909
really handy feature looks like we
actually use that username of both

291
00:26:12,910 --> 00:26:18,370
different clients interesting so it if
it tells you from it interesting

292
00:26:18,370 --> 00:26:23,500
information such as that but this
feature is really handy when you're on a

293
00:26:23,500 --> 00:26:27,550
pant s alright maybe you got a dumper
you have some sort of hashes and you're

294
00:26:27,550 --> 00:26:31,750
looking for that user or you like oh I
know Joey from development can log into

295
00:26:31,750 --> 00:26:37,480
you know the enterprise get hub i need
his password you know and so you go

296
00:26:37,480 --> 00:26:42,070
search see if you've cracked it already
or if you need to look up users hash

297
00:26:42,070 --> 00:26:47,080
essentials you need to pass it for
whatever keep my missing updates as your

298
00:26:47,080 --> 00:26:50,020
jobs are running so every time you
finish the task and get more passwords

299
00:26:50,020 --> 00:26:53,020
the database and circle

300
00:26:56,029 --> 00:27:11,869
yes yes yeah exactly it'll go back and
retroactively before anyone else search

301
00:27:11,869 --> 00:27:20,570
the database hey I have that same hash
didn't have before crackle go exactly up

302
00:27:22,249 --> 00:27:26,690
ok so that's it I mean we were just kind
of want to give you a quick run-through

303
00:27:26,690 --> 00:27:31,940
pure demo keep it short simple you sir

304
00:27:37,969 --> 00:27:50,119
ok so the question is can you pause a
job and then resumed essentially later

305
00:27:50,119 --> 00:27:50,899
correct

306
00:27:50,899 --> 00:27:56,689
yeah so yes you can now what is doing
underneath the hood with the hat with

307
00:27:56,690 --> 00:28:04,190
the actual hash cat tasks is there meet
my phone think people get wise

308
00:28:04,190 --> 00:28:10,309
so what it what it does is it will still
run that task but if you stop the job

309
00:28:10,309 --> 00:28:14,869
will stop that task it will take what
it's already cracked at that time and

310
00:28:14,869 --> 00:28:19,459
input into the database now what it will
do is when you hit when you hit resume

311
00:28:19,460 --> 00:28:24,799
with the task it will pick up from where
it left off so it seems that these tasks

312
00:28:24,799 --> 00:28:26,029
are completed it picks up

313
00:28:26,029 --> 00:28:30,589
yes that is a major pain point that we
ran into so it

314
00:28:30,589 --> 00:28:35,899
yes you could use like the sessions in
the resume of hash cap but this was just

315
00:28:35,899 --> 00:28:43,580
a quick way of a quick and dirty way of
getting it done that work for us for

316
00:28:43,580 --> 00:28:46,580
sure

317
00:28:51,000 --> 00:29:08,700
excellent question so we do have this
mark on getting a page but yeah we're

318
00:29:08,700 --> 00:29:13,260
using my sequel back-end database doing
this already on Rails not trust

319
00:29:13,260 --> 00:29:19,800
yep so yeah yep we first tried sequel
light but we we realized we need to do

320
00:29:19,800 --> 00:29:32,550
something besides single line as shown
in the gray so the question was this a

321
00:29:32,550 --> 00:29:38,940
front for one single machine on it kinda
thick that's the way we kind of built it

322
00:29:38,940 --> 00:29:44,280
so a lot of penetration testers they
build their own rigs or have their own

323
00:29:44,280 --> 00:29:50,879
rigs that are pretty built-up and we yes
you could run this in the cloud per se

324
00:29:50,880 --> 00:29:55,260
essentially if you wanted to but yes
we're kind of focus on that

325
00:29:55,260 --> 00:29:58,260
purpose-built password cracking machine

326
00:30:00,030 --> 00:30:05,460
yeah you want to talk about distribution
right yeah you can definitely still with

327
00:30:05,460 --> 00:30:11,730
them or not and I got it doesn't do any
distributed craft it is that we want to

328
00:30:11,730 --> 00:30:20,220
do that we really efficient way so as
consultants we we we were working out

329
00:30:20,220 --> 00:30:23,370
one we're not saying your password so
bunch of things we don't have a whole

330
00:30:23,370 --> 00:30:28,679
slew of machines we just have one beefy
want built for our pan tests are but we

331
00:30:28,680 --> 00:30:34,080
have definitely we have some ideas of
how you can easily kind of make this

332
00:30:34,080 --> 00:30:37,080
tribute

333
00:30:41,850 --> 00:30:54,990
like I open and things like that so so
the question was i do we doing research

334
00:30:54,990 --> 00:31:00,390
for taking account anymore better
solutions essentially for job-killing

335
00:31:00,390 --> 00:31:04,710
sure

336
00:31:05,610 --> 00:31:10,289
so what we're using our need the hood
for actually job control is Redis so

337
00:31:10,289 --> 00:31:14,129
yeah all of our hash cat commands get
sent to redness readiness does the

338
00:31:14,130 --> 00:31:17,700
queuing and kind of handles ok this is
completed now we're going to run these

339
00:31:17,700 --> 00:31:21,929
post post jobs and in post tasks and
then pick up the next one

340
00:31:33,360 --> 00:31:38,370
there's no support to do it but I mean
it's an open open source and there's a

341
00:31:38,370 --> 00:31:42,570
sequel database so few villages sequel
pilot get that way so see ya the

342
00:31:42,570 --> 00:31:46,559
question was can I can't upload my own
pot file not necessary through the

343
00:31:46,559 --> 00:31:51,090
interface but if you take a look at the
code you'll be able to figure out pretty

344
00:31:51,090 --> 00:31:53,580
easily if you can make that work

345
00:31:53,580 --> 00:32:20,460
electric so so we we thought that we
were probably the next steps would maybe

346
00:32:20,460 --> 00:32:26,730
be more advanced hash cat commands that
you'd run we want to start with job

347
00:32:26,730 --> 00:32:30,240
controlling the basics and all the pain
points around the whole process itself

348
00:32:30,240 --> 00:32:36,929
so in and distribute distributed
cracking is also something i want to

349
00:32:36,929 --> 00:32:42,510
take a look at but not really

350
00:32:44,840 --> 00:32:52,370
yeah yeah it definitely so yeah we
basically scratched your own niche and

351
00:32:52,370 --> 00:33:11,989
we figured maybe other people have this
same problem so funny you mention that

352
00:33:11,990 --> 00:33:16,700
our initial instance of this had a lot
of that kind of thought process in mind

353
00:33:16,700 --> 00:33:23,630
but when they moved to open steeldrivers
4 30 and 31 a lot of that code that went

354
00:33:23,630 --> 00:33:24,110
into it

355
00:33:24,110 --> 00:34:06,049
test it didn't transfer neatly over so
we ended up taking it out you should

356
00:34:06,049 --> 00:34:10,310
submit issue and then I'll sign it too

357
00:34:11,989 --> 00:34:15,319
that's great though

358
00:34:15,320 --> 00:34:36,950
that's great either yes back so yeah
with one of the things we're thinking is

359
00:34:36,949 --> 00:34:40,939
our mindset is we're moving on to the
next customer you know we have a whole

360
00:34:40,940 --> 00:34:45,290
team of guys just uploading all these
different customers you know where we're

361
00:34:45,290 --> 00:34:51,590
always getting hashtags to know from the
DC so we put them in there and then what

362
00:34:51,590 --> 00:34:55,850
we also kind of want to retro actively
crack them as well but you know when is

363
00:34:55,850 --> 00:35:01,490
that point in time where you want to
remove them are purchased a wig

364
00:35:01,490 --> 00:35:03,290
advantage of a previous crack

365
00:35:03,290 --> 00:35:08,660
yeah so when you actually delete a
customer in the job through hash view it

366
00:35:08,660 --> 00:35:13,220
will it will actually delete all the job
handling information but by default

367
00:35:13,220 --> 00:35:17,868
because of those retroactive cracking
will leave all of them in there but you

368
00:35:17,869 --> 00:35:21,830
do have an option to actually purchase
them so there's a command you around

369
00:35:21,830 --> 00:35:36,200
actually purchase all those right so the
question was already thinking about

370
00:35:36,200 --> 00:35:39,890
supporting John and maybe some other
tools are needed the hood oh it's

371
00:35:39,890 --> 00:35:43,730
definitely something we thought of ya
just

372
00:35:43,730 --> 00:35:51,050
we have to change the name to like that
John Nash view and crack John view at

373
00:35:51,050 --> 00:35:54,619
this yeah this . want to hit just has to
first but yet someone was looking into

374
00:35:54,619 --> 00:35:57,530
cool guys

375
00:35:57,530 --> 00:36:03,859
well thanks for coming oh yes like that
we are currently only supporting linux

376
00:36:03,859 --> 00:36:07,460
at this time it's a great question yeah
so the question is linux or windows just

377
00:36:07,460 --> 00:36:13,520
linux at this time so it might work into
a sex but we did test yet

378
00:36:14,750 --> 00:36:19,430
yeah you have anymore questions will be
in the back thanks

