1
00:00:00,030 --> 00:00:05,279
all right well let the last couple of

2
00:00:01,860 --> 00:00:07,830
people trickle in here can everybody

3
00:00:05,279 --> 00:00:12,679
hear me okay in the back yeah these hand

4
00:00:07,830 --> 00:00:12,679
mics can be kind of hard sometimes hi

5
00:00:14,509 --> 00:00:20,100
got a few friends here alright so we'll

6
00:00:18,330 --> 00:00:23,430
get started here with adventures in

7
00:00:20,100 --> 00:00:24,990
Azure privilege escalation kind of

8
00:00:23,430 --> 00:00:26,340
spreads see a full room here is somebody

9
00:00:24,990 --> 00:00:28,529
who's been pen testing Azure for a

10
00:00:26,340 --> 00:00:30,689
couple years kind of feel like nobody

11
00:00:28,529 --> 00:00:31,980
else is interested in it really nice to

12
00:00:30,689 --> 00:00:34,440
see a lot of other people interested in

13
00:00:31,980 --> 00:00:37,350
it so a little bit about myself

14
00:00:34,440 --> 00:00:39,750
Carl fussing I am a practice director at

15
00:00:37,350 --> 00:00:41,809
net spy lead up our Pacific Northwest

16
00:00:39,750 --> 00:00:43,800
team out of the Portland Oregon area

17
00:00:41,809 --> 00:00:46,140
done a lot of stuff over the years

18
00:00:43,800 --> 00:00:48,239
password cracking social engineering you

19
00:00:46,140 --> 00:00:51,120
can find me on the net spy blog at blog

20
00:00:48,239 --> 00:00:54,419
Nets Viacom and also find me on twitter

21
00:00:51,120 --> 00:00:56,940
at @ k Fossen and pretty much all my

22
00:00:54,420 --> 00:00:58,980
code goes under the net spy github repo

23
00:00:56,940 --> 00:01:00,660
and these specific tools that we'll talk

24
00:00:58,980 --> 00:01:03,390
about today during the talk will be

25
00:01:00,660 --> 00:01:05,009
under the microburst repo if anyone's a

26
00:01:03,390 --> 00:01:09,450
stickers reminder we've got a handful of

27
00:01:05,010 --> 00:01:11,340
those up here as well and as of Thursday

28
00:01:09,450 --> 00:01:18,570
this week I'm now officially a private

29
00:01:11,340 --> 00:01:22,619
pilot pass my checkride thank you took

30
00:01:18,570 --> 00:01:24,570
only about a year so alright so to get

31
00:01:22,619 --> 00:01:26,729
into it I kind of first things first

32
00:01:24,570 --> 00:01:29,369
everybody's moving into the cloud via

33
00:01:26,729 --> 00:01:31,079
developers this admins infrastructure

34
00:01:29,369 --> 00:01:33,720
even pen testers are starting to put

35
00:01:31,079 --> 00:01:36,479
their infrastructure and their resources

36
00:01:33,720 --> 00:01:39,060
and efforts up into the cloud that could

37
00:01:36,479 --> 00:01:40,799
be Azure AWS Google any of the million

38
00:01:39,060 --> 00:01:42,869
other cloud providers that are out there

39
00:01:40,799 --> 00:01:45,180
but everybody's starting to move stuff

40
00:01:42,869 --> 00:01:47,549
up to the cloud along with that we're

41
00:01:45,180 --> 00:01:49,560
reintroducing a lot of problems that we

42
00:01:47,549 --> 00:01:51,000
used to have in the past what are the

43
00:01:49,560 --> 00:01:52,799
things you were going to see today and a

44
00:01:51,000 --> 00:01:55,200
lot of the themes are I thought we

45
00:01:52,799 --> 00:01:56,790
solved that like 10 years ago no they're

46
00:01:55,200 --> 00:01:59,969
still problems that are coming back up

47
00:01:56,790 --> 00:02:01,770
from the past so some of the reasons why

48
00:01:59,969 --> 00:02:04,770
people are specifically moving to Azure

49
00:02:01,770 --> 00:02:06,780
though Azure ad it integrates with

50
00:02:04,770 --> 00:02:09,030
Active Directory super convenient

51
00:02:06,780 --> 00:02:11,430
integrated for Active Directory users

52
00:02:09,030 --> 00:02:13,360
and groups it's one-stop license eeen

53
00:02:11,430 --> 00:02:15,040
easy to integrate easy to

54
00:02:13,360 --> 00:02:17,200
groups and all of that so it's pretty

55
00:02:15,040 --> 00:02:20,890
easy to kind of forklift everything up

56
00:02:17,200 --> 00:02:23,019
into the cloud so for the folks on the

57
00:02:20,890 --> 00:02:25,059
internet or watching later who want to

58
00:02:23,020 --> 00:02:27,010
pause right now to go check out these

59
00:02:25,060 --> 00:02:29,170
talks these are some great primer talks

60
00:02:27,010 --> 00:02:30,579
that cover just some of the basics we

61
00:02:29,170 --> 00:02:34,000
will be getting into a little bit more

62
00:02:30,580 --> 00:02:36,460
advanced topics today but this is a good

63
00:02:34,000 --> 00:02:37,930
coverage of kind of basic stuff advanced

64
00:02:36,460 --> 00:02:40,090
stuff and I'm actually gonna have the

65
00:02:37,930 --> 00:02:42,010
slides tweeted out here after the talk

66
00:02:40,090 --> 00:02:44,770
it's got to connect to the internet and

67
00:02:42,010 --> 00:02:46,810
put them out on Twitter so I will give

68
00:02:44,770 --> 00:02:49,750
everybody at home a second to pause go

69
00:02:46,810 --> 00:02:53,560
watch those then come back and welcome

70
00:02:49,750 --> 00:02:56,260
back so moving forward now that

71
00:02:53,560 --> 00:02:58,209
everybody's an azure expert we want to

72
00:02:56,260 --> 00:02:59,709
talk about initial entry points before

73
00:02:58,209 --> 00:03:01,780
we actually talk about escalating

74
00:02:59,709 --> 00:03:03,610
privileges because primary focus of the

75
00:03:01,780 --> 00:03:05,110
talk is escalating privileges once

76
00:03:03,610 --> 00:03:07,360
you're already in that Azure

77
00:03:05,110 --> 00:03:10,989
subscription but we need to get access

78
00:03:07,360 --> 00:03:13,480
first now for those that may or may not

79
00:03:10,989 --> 00:03:15,310
know if they have as your access already

80
00:03:13,480 --> 00:03:16,690
with their domain credentials one thing

81
00:03:15,310 --> 00:03:19,720
that you can do is just go out to portal

82
00:03:16,690 --> 00:03:21,640
user calm login with your company email

83
00:03:19,720 --> 00:03:23,200
Active Directory anything like that and

84
00:03:21,640 --> 00:03:25,779
you might actually find out that you

85
00:03:23,200 --> 00:03:29,048
have portal access it's surprisingly

86
00:03:25,780 --> 00:03:31,000
common users get set up a lot of things

87
00:03:29,049 --> 00:03:32,500
just don't get locked down initially and

88
00:03:31,000 --> 00:03:34,390
what we're finding is we can either

89
00:03:32,500 --> 00:03:35,890
gather credentials online guest

90
00:03:34,390 --> 00:03:38,738
credentials we're saying goodbye to

91
00:03:35,890 --> 00:03:40,660
summer 2019 relatively soon here but

92
00:03:38,739 --> 00:03:43,090
that's been really successful so far

93
00:03:40,660 --> 00:03:45,340
this year and once we get those

94
00:03:43,090 --> 00:03:46,840
credentials access either the portal or

95
00:03:45,340 --> 00:03:49,540
the CLI or any of the powershell

96
00:03:46,840 --> 00:03:51,730
commandlets we then have access into

97
00:03:49,540 --> 00:03:53,859
that as your subscription now you could

98
00:03:51,730 --> 00:03:56,709
potentially go from the internal network

99
00:03:53,860 --> 00:03:59,440
to bypass MFA restrictions we have seen

100
00:03:56,709 --> 00:04:01,480
it where external networks require MFA

101
00:03:59,440 --> 00:04:03,880
but it's not actually required for the

102
00:04:01,480 --> 00:04:06,040
internal side of things so depending on

103
00:04:03,880 --> 00:04:08,109
where you're at or what your kind of

104
00:04:06,040 --> 00:04:10,269
attack surface area is you may be able

105
00:04:08,110 --> 00:04:13,470
to authenticate without MFA from the

106
00:04:10,269 --> 00:04:15,880
internal network so keep that in mind

107
00:04:13,470 --> 00:04:18,490
all right

108
00:04:15,880 --> 00:04:20,260
so quick note about kind of the

109
00:04:18,490 --> 00:04:22,630
permissions model if anybody's ever

110
00:04:20,260 --> 00:04:25,510
tried to unpack the permission and

111
00:04:22,630 --> 00:04:26,830
privilege model within a sure it's a

112
00:04:25,510 --> 00:04:29,260
little complicated

113
00:04:26,830 --> 00:04:32,260
you've got your kind of high level of

114
00:04:29,260 --> 00:04:34,270
tenets so your tenant nazzer will think

115
00:04:32,260 --> 00:04:36,310
of that as kind of the enterprise level

116
00:04:34,270 --> 00:04:37,810
and underneath that you've got

117
00:04:36,310 --> 00:04:38,980
individual subscriptions so those

118
00:04:37,810 --> 00:04:41,080
subscriptions are kind of like your

119
00:04:38,980 --> 00:04:43,180
domains or subdomains and underneath

120
00:04:41,080 --> 00:04:45,820
those subscriptions you've got specific

121
00:04:43,180 --> 00:04:47,260
resources resource groups anything that

122
00:04:45,820 --> 00:04:49,750
you would want to you know spin up as a

123
00:04:47,260 --> 00:04:50,770
service so at the tenant level we've got

124
00:04:49,750 --> 00:04:52,030
a number of different rules that can

125
00:04:50,770 --> 00:04:53,950
apply the primary one that we're going

126
00:04:52,030 --> 00:04:56,080
to be concerned about today is global

127
00:04:53,950 --> 00:04:58,210
admin I'll talk about user admin a

128
00:04:56,080 --> 00:05:00,520
little bit and there's probably 15-20

129
00:04:58,210 --> 00:05:02,169
other roles that are now available up in

130
00:05:00,520 --> 00:05:04,840
Azure that you can apply to specific

131
00:05:02,170 --> 00:05:06,580
azure ad accounts but for today we're

132
00:05:04,840 --> 00:05:08,020
gonna focus and care about global admin

133
00:05:06,580 --> 00:05:10,210
because that's the account that really

134
00:05:08,020 --> 00:05:12,190
controls the full tenant at the

135
00:05:10,210 --> 00:05:14,260
subscription level so just under the

136
00:05:12,190 --> 00:05:16,750
tenant level you can have owners who own

137
00:05:14,260 --> 00:05:19,270
that subscription they can actually

138
00:05:16,750 --> 00:05:21,640
control access to resources give access

139
00:05:19,270 --> 00:05:23,229
to people have full rights to everything

140
00:05:21,640 --> 00:05:25,650
that's in that specific subscription

141
00:05:23,230 --> 00:05:28,420
what we do frequently find is that

142
00:05:25,650 --> 00:05:30,250
owners of one subscription might be a

143
00:05:28,420 --> 00:05:32,650
privileged account already it might have

144
00:05:30,250 --> 00:05:33,670
access to other subscriptions we're

145
00:05:32,650 --> 00:05:36,460
going to talk about that when we get

146
00:05:33,670 --> 00:05:39,310
into the owner level of the privilege

147
00:05:36,460 --> 00:05:41,200
escalation contributors have rights to

148
00:05:39,310 --> 00:05:42,850
do a lot of things make changes they

149
00:05:41,200 --> 00:05:45,250
just can't delegate access out to other

150
00:05:42,850 --> 00:05:47,050
users readers are basically just that

151
00:05:45,250 --> 00:05:48,700
they can read information from the

152
00:05:47,050 --> 00:05:51,370
subscription that really make any

153
00:05:48,700 --> 00:05:53,650
changes not anything super impactful so

154
00:05:51,370 --> 00:05:55,630
keep those three owner contributor

155
00:05:53,650 --> 00:05:58,060
reader in your mind when we're talking

156
00:05:55,630 --> 00:05:59,590
about individual subscriptions there's a

157
00:05:58,060 --> 00:06:00,900
number of special kind of custom roles

158
00:05:59,590 --> 00:06:03,669
already touched on them a little bit

159
00:06:00,900 --> 00:06:06,489
they're typically service or application

160
00:06:03,670 --> 00:06:09,070
specific so it may apply to a specific

161
00:06:06,490 --> 00:06:10,960
app services or key bolts or anything

162
00:06:09,070 --> 00:06:14,550
like that with in Azure and those are

163
00:06:10,960 --> 00:06:16,719
applied and I'm a per user basis and

164
00:06:14,550 --> 00:06:17,890
we're not going to cover a lot of those

165
00:06:16,720 --> 00:06:19,360
there's some interesting permissions

166
00:06:17,890 --> 00:06:21,340
that could potentially be abused in each

167
00:06:19,360 --> 00:06:23,740
of those roles but we just don't have

168
00:06:21,340 --> 00:06:25,900
time to cover that se so in terms of

169
00:06:23,740 --> 00:06:27,669
applying each of these roles we talked

170
00:06:25,900 --> 00:06:29,469
about owner contributor reader that's

171
00:06:27,669 --> 00:06:31,030
really kind of the subscription

172
00:06:29,470 --> 00:06:33,280
well it can also be applied down to

173
00:06:31,030 --> 00:06:35,500
resource group and the individual asset

174
00:06:33,280 --> 00:06:37,809
layer so if you have contributor rights

175
00:06:35,500 --> 00:06:39,100
to a single virtual machine there's some

176
00:06:37,810 --> 00:06:41,040
stuff that you can do there that we'll

177
00:06:39,100 --> 00:06:44,170
cover later

178
00:06:41,040 --> 00:06:45,670
so I quick note about just kind of

179
00:06:44,170 --> 00:06:46,840
listing your permissions we're not going

180
00:06:45,670 --> 00:06:49,090
to go through each of these but here's

181
00:06:46,840 --> 00:06:51,719
some of the AZ commands you can use to

182
00:06:49,090 --> 00:06:53,919
list out owners readers contributors etc

183
00:06:51,720 --> 00:06:55,690
what I'd recommend if you're just diving

184
00:06:53,920 --> 00:06:57,730
into this initially is go out to the

185
00:06:55,690 --> 00:06:59,469
azure portal either create a new

186
00:06:57,730 --> 00:07:01,120
subscription under your own domain play

187
00:06:59,470 --> 00:07:03,100
around with it they've got a $200

188
00:07:01,120 --> 00:07:05,470
month-long trial that is actually really

189
00:07:03,100 --> 00:07:06,490
handy to learn a lot of this stuff but

190
00:07:05,470 --> 00:07:08,590
go to the portal go to your

191
00:07:06,490 --> 00:07:10,480
subscriptions and then go to the iam

192
00:07:08,590 --> 00:07:12,219
section you can see who's you know

193
00:07:10,480 --> 00:07:15,340
contributor owner all of that stuff

194
00:07:12,220 --> 00:07:16,930
there likewise if you're you know

195
00:07:15,340 --> 00:07:18,219
getting somebody's credentials you want

196
00:07:16,930 --> 00:07:20,020
to log in through the portal that's an

197
00:07:18,220 --> 00:07:21,570
easy way to enumerate where you're at

198
00:07:20,020 --> 00:07:24,310
with that subscription

199
00:07:21,570 --> 00:07:26,409
likewise with Azure Active Directory if

200
00:07:24,310 --> 00:07:28,780
you go into the azure active directory

201
00:07:26,410 --> 00:07:30,520
tab within the azure portal you can just

202
00:07:28,780 --> 00:07:32,349
go roles and administrators and list out

203
00:07:30,520 --> 00:07:34,979
global admins right there which might

204
00:07:32,350 --> 00:07:38,020
give you some good targets to go after

205
00:07:34,980 --> 00:07:39,370
so kind of overall privileged overview

206
00:07:38,020 --> 00:07:41,260
that we're gonna follow through this

207
00:07:39,370 --> 00:07:43,030
presentation starting with basically no

208
00:07:41,260 --> 00:07:45,280
Azure access we'll cover that in a

209
00:07:43,030 --> 00:07:46,989
couple of slides but basically you can

210
00:07:45,280 --> 00:07:48,760
log in but you can't really see a whole

211
00:07:46,990 --> 00:07:51,040
lot there are some other things you can

212
00:07:48,760 --> 00:07:52,780
do but you're a little bit limited

213
00:07:51,040 --> 00:07:55,780
working our way up all the way through

214
00:07:52,780 --> 00:07:59,919
tenant slash global admin and learning

215
00:07:55,780 --> 00:08:02,229
stuff along the way so initially let's

216
00:07:59,919 --> 00:08:04,060
say that you have basically no Azure

217
00:08:02,229 --> 00:08:05,680
access you take your domain credits that

218
00:08:04,060 --> 00:08:07,570
you've guessed or gathered from

219
00:08:05,680 --> 00:08:09,790
somewhere you login to the portal but

220
00:08:07,570 --> 00:08:12,940
there's nothing really there you can log

221
00:08:09,790 --> 00:08:14,740
in and it's valid creds and you can't

222
00:08:12,940 --> 00:08:16,210
see any resources you might be able to

223
00:08:14,740 --> 00:08:18,100
go and as your Active Directory and list

224
00:08:16,210 --> 00:08:20,469
out the users but you don't have a

225
00:08:18,100 --> 00:08:22,419
subscription applied to you so the

226
00:08:20,470 --> 00:08:24,100
positives you do have valid creds and

227
00:08:22,419 --> 00:08:26,260
you can potentially pivot out to other

228
00:08:24,100 --> 00:08:29,770
services my recommendation here would be

229
00:08:26,260 --> 00:08:31,510
go out to my Apps Microsoft comm it's a

230
00:08:29,770 --> 00:08:33,669
nice place to go to list out all of the

231
00:08:31,510 --> 00:08:36,250
Federated SSO endpoints that you can log

232
00:08:33,669 --> 00:08:39,159
into from that point you may not have

233
00:08:36,250 --> 00:08:40,539
full access to as your things but you

234
00:08:39,159 --> 00:08:42,549
may be able to pivot out to office 365

235
00:08:40,539 --> 00:08:43,370
and start going through mailboxes or

236
00:08:42,549 --> 00:08:45,069
sure

237
00:08:43,370 --> 00:08:46,730
or other services that are available

238
00:08:45,070 --> 00:08:50,209
additionally you might be able to access

239
00:08:46,730 --> 00:08:52,959
a counting app salesforce

240
00:08:50,209 --> 00:08:54,170
github all sorts of other federated

241
00:08:52,959 --> 00:08:55,819
authentications

242
00:08:54,170 --> 00:09:00,469
that may be available through my apps

243
00:08:55,820 --> 00:09:02,540
Microsoft comm negatives there's not a

244
00:09:00,470 --> 00:09:03,649
lot of valuable information that we can

245
00:09:02,540 --> 00:09:06,439
pull out if you don't have a

246
00:09:03,649 --> 00:09:08,089
subscription to signed so we're just

247
00:09:06,440 --> 00:09:10,910
gonna kind of go past this no Azure

248
00:09:08,089 --> 00:09:12,470
access and assume that you've got an

249
00:09:10,910 --> 00:09:18,529
account that at least has reader rights

250
00:09:12,470 --> 00:09:20,329
on the subscription all right so with

251
00:09:18,529 --> 00:09:22,220
reader rights this may sound kind of

252
00:09:20,329 --> 00:09:24,138
dumb but this actually really works

253
00:09:22,220 --> 00:09:25,970
once you have reader rights and can read

254
00:09:24,139 --> 00:09:27,620
out all of the users from Azure Active

255
00:09:25,970 --> 00:09:29,839
Directory let's say that you started

256
00:09:27,620 --> 00:09:31,399
with OS int you gathered a list of email

257
00:09:29,839 --> 00:09:34,639
addresses that you brute force that

258
00:09:31,399 --> 00:09:36,860
initial summer 2019 cred with you want a

259
00:09:34,639 --> 00:09:39,410
full list of actual real emails that you

260
00:09:36,860 --> 00:09:41,839
can use against the portal we'll just go

261
00:09:39,410 --> 00:09:44,029
ahead and log in dump out Azure ad and

262
00:09:41,839 --> 00:09:46,730
get a full list of email addresses that

263
00:09:44,029 --> 00:09:48,639
are legitimate that you know work I've

264
00:09:46,730 --> 00:09:50,990
had this work with great success

265
00:09:48,639 --> 00:09:52,699
literally the easiest escalation I've

266
00:09:50,990 --> 00:09:54,800
ever had on the cloud pen test was

267
00:09:52,699 --> 00:09:56,810
logged in with reader rights list out

268
00:09:54,800 --> 00:10:00,500
all the users specifically focused on

269
00:09:56,810 --> 00:10:02,930
the global admins users company used a

270
00:10:00,500 --> 00:10:04,519
very common password for a lot of their

271
00:10:02,930 --> 00:10:07,069
accounts it just happened that three of

272
00:10:04,519 --> 00:10:10,699
their ten global admins all shared the

273
00:10:07,069 --> 00:10:12,469
same password and there was no MFA so we

274
00:10:10,699 --> 00:10:14,300
got global admin with three different

275
00:10:12,470 --> 00:10:15,860
accounts in the span of maybe five

276
00:10:14,300 --> 00:10:20,380
minutes of having access to the account

277
00:10:15,860 --> 00:10:23,540
so super handy easiest escalation ever

278
00:10:20,380 --> 00:10:26,569
definitely enable MFA for everybody it's

279
00:10:23,540 --> 00:10:28,699
really not that hard with Azure and once

280
00:10:26,569 --> 00:10:31,310
you have it enabled it really helps slow

281
00:10:28,699 --> 00:10:34,099
an attacker down if anybody wants to see

282
00:10:31,310 --> 00:10:36,709
a cool bypass for MFA with Azure tech

283
00:10:34,100 --> 00:10:38,959
out check out Dirk yawns talk at Def Con

284
00:10:36,709 --> 00:10:41,089
this year that kind of a funny cool

285
00:10:38,959 --> 00:10:44,829
thing with the the phone based

286
00:10:41,089 --> 00:10:47,029
authentication worth a look at that

287
00:10:44,829 --> 00:10:49,849
let's see here so one of the other

288
00:10:47,029 --> 00:10:51,529
things to kind of note here is that with

289
00:10:49,850 --> 00:10:53,329
those global admin accounts and tenant

290
00:10:51,529 --> 00:10:55,040
accounts the accounts that we guess

291
00:10:53,329 --> 00:10:56,599
those credentials for had access to

292
00:10:55,040 --> 00:10:57,889
probably twenty

293
00:10:56,600 --> 00:11:00,589
thirty different subscriptions that

294
00:10:57,889 --> 00:11:03,589
accounted for thousands upon thousands

295
00:11:00,589 --> 00:11:05,810
of dollars of azure bills per month and

296
00:11:03,589 --> 00:11:07,279
the potential impact of having access to

297
00:11:05,810 --> 00:11:09,469
one of those global admin accounts could

298
00:11:07,279 --> 00:11:10,880
be massive you could just go insert the

299
00:11:09,470 --> 00:11:13,339
leading resources shut everything down

300
00:11:10,880 --> 00:11:15,230
cancel subscriptions and if there's no

301
00:11:13,339 --> 00:11:18,730
MFA and any attacker can guess those

302
00:11:15,230 --> 00:11:18,730
credentials that could be really serious

303
00:11:19,209 --> 00:11:24,349
all right so if there's one really

304
00:11:22,790 --> 00:11:26,509
important thing that I want everybody to

305
00:11:24,350 --> 00:11:28,759
take out of this and potentially try

306
00:11:26,509 --> 00:11:30,529
with their own subscriptions is that the

307
00:11:28,759 --> 00:11:34,040
deployment parameters that are used to

308
00:11:30,529 --> 00:11:36,319
deploy resources in Azure can frequently

309
00:11:34,040 --> 00:11:37,819
be Mis configured to store clear text

310
00:11:36,319 --> 00:11:39,560
credentials so when we have reader

311
00:11:37,819 --> 00:11:41,569
rights into a subscription what we do is

312
00:11:39,560 --> 00:11:43,459
list out all of the resource groups

313
00:11:41,569 --> 00:11:46,040
which is really how you kind of group

314
00:11:43,459 --> 00:11:48,888
different resources to manage billing

315
00:11:46,040 --> 00:11:50,509
manage access all of that lists out all

316
00:11:48,889 --> 00:11:50,870
of the resource groups are available to

317
00:11:50,509 --> 00:11:53,509
you

318
00:11:50,870 --> 00:11:55,610
type those into the git resource group

319
00:11:53,509 --> 00:11:58,040
deployment and just out that to a text

320
00:11:55,610 --> 00:11:59,810
file in there you're probably going to

321
00:11:58,040 --> 00:12:01,790
find at least one or two clear text

322
00:11:59,810 --> 00:12:05,180
financials we're finding this on

323
00:12:01,790 --> 00:12:06,620
I'd say upwards of 80% of the cloud pen

324
00:12:05,180 --> 00:12:10,310
tests that we do where we get access to

325
00:12:06,620 --> 00:12:11,660
a sure as a reader I pretty much a

326
00:12:10,310 --> 00:12:13,279
guarantee that at some point in time

327
00:12:11,660 --> 00:12:15,439
somebody was trying to figure out how

328
00:12:13,279 --> 00:12:17,389
the deployment templates worked forgot

329
00:12:15,439 --> 00:12:19,519
to set that admin password that we have

330
00:12:17,389 --> 00:12:22,610
highlighted up there as a secure string

331
00:12:19,519 --> 00:12:25,130
and that ended up in clear text in those

332
00:12:22,610 --> 00:12:27,290
deployment logs and anybody can read

333
00:12:25,130 --> 00:12:29,149
that out so in this case we had a

334
00:12:27,290 --> 00:12:31,880
virtual machine scale set that we spun

335
00:12:29,149 --> 00:12:34,550
up admin username was a Z admin I

336
00:12:31,880 --> 00:12:36,769
purposefully set the password to a clear

337
00:12:34,550 --> 00:12:39,079
text string as is this clear text with a

338
00:12:36,769 --> 00:12:42,500
question mark and that got stored into

339
00:12:39,079 --> 00:12:44,599
that deployments file super handy like I

340
00:12:42,500 --> 00:12:46,819
said we've gotten local admin creds for

341
00:12:44,600 --> 00:12:48,740
just all the virtual machines before for

342
00:12:46,819 --> 00:12:50,329
this because like I said problems from

343
00:12:48,740 --> 00:12:52,730
10 years ago keep coming back

344
00:12:50,329 --> 00:12:54,439
shared local admin on a gold image and

345
00:12:52,730 --> 00:12:57,410
they're not using laps or any other

346
00:12:54,439 --> 00:12:58,759
solutions to set different passwords as

347
00:12:57,410 --> 00:13:01,160
soon as you get that credential you've

348
00:12:58,759 --> 00:13:03,550
got local admin across all of the VMS up

349
00:13:01,160 --> 00:13:03,550
and Azure

350
00:13:04,930 --> 00:13:08,410
so this one's a little less common but

351
00:13:06,460 --> 00:13:11,560
we occasionally see it with developers

352
00:13:08,410 --> 00:13:13,899
with reader access if a reader account

353
00:13:11,560 --> 00:13:16,390
has access to app services which is

354
00:13:13,899 --> 00:13:18,940
basically Asher's way of spinning up web

355
00:13:16,390 --> 00:13:20,290
services up in the azure cloud you could

356
00:13:18,940 --> 00:13:22,600
potentially read out connection strings

357
00:13:20,290 --> 00:13:23,860
for as your sequel and/or Microsoft

358
00:13:22,600 --> 00:13:25,390
sequel depending on what they're

359
00:13:23,860 --> 00:13:28,330
connecting to so maybe they've got a

360
00:13:25,390 --> 00:13:31,000
virtual machine that has a sequel going

361
00:13:28,330 --> 00:13:34,390
on a virtual machine or some server back

362
00:13:31,000 --> 00:13:37,029
over a direct connect or VPN Scott's

363
00:13:34,390 --> 00:13:39,310
here he writes power-ups equal checkout

364
00:13:37,029 --> 00:13:41,800
power-ups equal to attack sequel

365
00:13:39,310 --> 00:13:43,989
databases it's a awesome tool and super

366
00:13:41,800 --> 00:13:48,149
handy for pivoting and escalating

367
00:13:43,990 --> 00:13:50,760
privileges that way so along with those

368
00:13:48,149 --> 00:13:53,050
connection strings we also see

369
00:13:50,760 --> 00:13:54,339
application deployment passwords so if

370
00:13:53,050 --> 00:13:56,890
you want to go ahead and get access to

371
00:13:54,339 --> 00:13:59,550
that application source code the app

372
00:13:56,890 --> 00:14:01,930
services are hosted publicly through

373
00:13:59,550 --> 00:14:03,819
secure FTP site that you could just log

374
00:14:01,930 --> 00:14:06,399
in and dump the code from so if you're

375
00:14:03,820 --> 00:14:07,720
able to gather those credentials for

376
00:14:06,399 --> 00:14:09,459
that you might be able to get access to

377
00:14:07,720 --> 00:14:12,339
the source code maybe back toward the

378
00:14:09,459 --> 00:14:16,020
application run your own stuff out of

379
00:14:12,339 --> 00:14:16,020
web show all sorts of fun stuff there

380
00:14:16,140 --> 00:14:23,500
all right so kind of wraps up some of

381
00:14:19,420 --> 00:14:25,959
the basics of a reader but we'll just

382
00:14:23,500 --> 00:14:27,610
give you a quick escalation example that

383
00:14:25,959 --> 00:14:30,250
we'll walk through as we continue the

384
00:14:27,610 --> 00:14:31,959
escalation path here but starting with a

385
00:14:30,250 --> 00:14:34,240
reader level account we guest external

386
00:14:31,959 --> 00:14:36,119
credentials we'll say summer 2019 got

387
00:14:34,240 --> 00:14:38,380
access to the portal that user has

388
00:14:36,120 --> 00:14:40,060
subscription level reader rights not

389
00:14:38,380 --> 00:14:42,459
just individual resources or resource

390
00:14:40,060 --> 00:14:44,380
groups at the subscription level we're

391
00:14:42,459 --> 00:14:45,849
able to read out all of the deployment

392
00:14:44,380 --> 00:14:48,400
parameters for all the resource groups

393
00:14:45,850 --> 00:14:50,680
grabbed a local admin credential for a

394
00:14:48,400 --> 00:14:52,480
domain join virtual machine and what we

395
00:14:50,680 --> 00:14:54,699
do find is a lot of these environments

396
00:14:52,480 --> 00:14:56,440
kind of snowball over time so somebody

397
00:14:54,700 --> 00:14:58,570
decides oh we're gonna put this

398
00:14:56,440 --> 00:15:00,070
application up in Azure and they start

399
00:14:58,570 --> 00:15:01,390
trying to figure things out and things

400
00:15:00,070 --> 00:15:03,520
are misconfigured initially and

401
00:15:01,390 --> 00:15:05,170
eventually they get things working right

402
00:15:03,520 --> 00:15:06,819
and they never fix that miss

403
00:15:05,170 --> 00:15:08,260
configuration so all of a sudden you get

404
00:15:06,820 --> 00:15:09,940
a virtual machine that's exposed out to

405
00:15:08,260 --> 00:15:12,130
the internet has already be available

406
00:15:09,940 --> 00:15:16,480
and we can log right in with those creds

407
00:15:12,130 --> 00:15:18,610
so that's what we'll do and surprising

408
00:15:16,480 --> 00:15:21,040
more often than not that dev environment

409
00:15:18,610 --> 00:15:25,300
gets marked as prod and becomes the prod

410
00:15:21,040 --> 00:15:27,730
as your environment so we've got local

411
00:15:25,300 --> 00:15:30,099
admin let's say that we Mimi cats out a

412
00:15:27,730 --> 00:15:31,870
contributor level account because this

413
00:15:30,100 --> 00:15:33,130
is tied to the Active Directory you've

414
00:15:31,870 --> 00:15:34,959
got multiple people logging in to this

415
00:15:33,130 --> 00:15:37,450
web server or whatever that virtual

416
00:15:34,959 --> 00:15:39,010
machine is and we now have a contributor

417
00:15:37,450 --> 00:15:41,050
account sounds kind of like a pretty

418
00:15:39,010 --> 00:15:43,630
standard escalation from a network

419
00:15:41,050 --> 00:15:45,819
pentest perspective but now we have

420
00:15:43,630 --> 00:15:49,269
contributor and there's a lot more fun

421
00:15:45,820 --> 00:15:51,190
stuff we can do with contributor so one

422
00:15:49,269 --> 00:15:53,980
thing to note here just kind of as we

423
00:15:51,190 --> 00:15:57,700
talked about exposing stuff out to the

424
00:15:53,980 --> 00:16:01,570
internet say RDP or SSH I have run into

425
00:15:57,700 --> 00:16:04,329
it where databases are exposed from you

426
00:16:01,570 --> 00:16:07,240
know the entire ipv4 space so they'll

427
00:16:04,329 --> 00:16:10,420
put in an IP exception for all zeros -

428
00:16:07,240 --> 00:16:12,010
all 255 s so anybody anywhere can

429
00:16:10,420 --> 00:16:14,949
potentially try to log in to an azure

430
00:16:12,010 --> 00:16:16,689
sequel database kinda similar for

431
00:16:14,950 --> 00:16:19,690
virtual machines I've seen MSG rules

432
00:16:16,690 --> 00:16:21,190
applied for specific Azure regions so

433
00:16:19,690 --> 00:16:22,870
the people that were setting up the

434
00:16:21,190 --> 00:16:23,920
environment thought okay well we're

435
00:16:22,870 --> 00:16:25,120
gonna have stuff in different regions

436
00:16:23,920 --> 00:16:27,160
and we want it to be able to talk to

437
00:16:25,120 --> 00:16:30,160
each other we need to open up firewall

438
00:16:27,160 --> 00:16:32,230
ports between the different regions I in

439
00:16:30,160 --> 00:16:34,329
this case that was kind of a bad idea

440
00:16:32,230 --> 00:16:36,370
because what they ended up doing is just

441
00:16:34,329 --> 00:16:38,649
opening up all ports to all of the

442
00:16:36,370 --> 00:16:41,470
regions so they imported each of the IP

443
00:16:38,649 --> 00:16:43,390
regions so from the net spy IP address

444
00:16:41,470 --> 00:16:45,370
we couldn't see a whole lot we just did

445
00:16:43,390 --> 00:16:47,140
you know quick end map didn't really see

446
00:16:45,370 --> 00:16:50,290
a whole lot fired up a virtual machine

447
00:16:47,140 --> 00:16:52,779
and Azure scan those same IP IP address

448
00:16:50,290 --> 00:16:54,339
ranges and literally saw everything so

449
00:16:52,779 --> 00:16:58,449
something to watch out for when you're

450
00:16:54,339 --> 00:17:03,100
taking a look at NSG rules so a

451
00:16:58,449 --> 00:17:04,809
contributor access so there's kind of

452
00:17:03,100 --> 00:17:06,549
different flavors of this if we've got

453
00:17:04,809 --> 00:17:08,168
subscription level contributor access

454
00:17:06,549 --> 00:17:09,339
this is great we've got contributor to

455
00:17:08,169 --> 00:17:11,890
pretty much everything in the

456
00:17:09,339 --> 00:17:13,899
subscription there's a lot we can work

457
00:17:11,890 --> 00:17:15,610
with there if it's individual resource

458
00:17:13,900 --> 00:17:19,329
group so it's not bad there may be some

459
00:17:15,609 --> 00:17:21,639
resources that we can make use of to

460
00:17:19,329 --> 00:17:24,069
help escalate if it's just a single

461
00:17:21,640 --> 00:17:26,290
resource like virtual machine we'll see

462
00:17:24,069 --> 00:17:28,240
you might be able to escalate out of

463
00:17:26,290 --> 00:17:30,129
that but it's pretty rare that we see

464
00:17:28,240 --> 00:17:31,420
that honestly from a permissions

465
00:17:30,130 --> 00:17:33,970
perspective it's pretty rare for

466
00:17:31,420 --> 00:17:36,730
to see something outside of subscription

467
00:17:33,970 --> 00:17:38,050
level I am policies it's pretty rare

468
00:17:36,730 --> 00:17:39,610
that we see somebody actually get

469
00:17:38,050 --> 00:17:44,379
granular and get down to individual

470
00:17:39,610 --> 00:17:46,510
resources much less resource groups so

471
00:17:44,380 --> 00:17:47,890
another really important will call the

472
00:17:46,510 --> 00:17:49,660
second most important thing to remember

473
00:17:47,890 --> 00:17:51,610
from this is that if you have

474
00:17:49,660 --> 00:17:55,450
contributor level access on a virtual

475
00:17:51,610 --> 00:17:57,669
machine you are local system so this is

476
00:17:55,450 --> 00:17:59,230
hugely impactful if you get contributor

477
00:17:57,670 --> 00:18:01,990
level access because at that point

478
00:17:59,230 --> 00:18:03,940
you've got system on all of the VMS I

479
00:18:01,990 --> 00:18:06,340
wrote a blog post that's down at the

480
00:18:03,940 --> 00:18:08,200
bottom here that covers some techniques

481
00:18:06,340 --> 00:18:11,320
that we can do I wrapped some PowerShell

482
00:18:08,200 --> 00:18:14,380
code around some of the newer RM command

483
00:18:11,320 --> 00:18:16,720
let's to execute come out excute code on

484
00:18:14,380 --> 00:18:18,610
virtual machines so let's say you want

485
00:18:16,720 --> 00:18:20,020
to run invoke mimikatz on every single

486
00:18:18,610 --> 00:18:21,820
one of the virtual machines you can

487
00:18:20,020 --> 00:18:23,830
queue that up through PowerShell I

488
00:18:21,820 --> 00:18:25,240
wouldn't really recommend it I pretty

489
00:18:23,830 --> 00:18:27,550
good chance you'll get caught by some

490
00:18:25,240 --> 00:18:30,100
kind of a V or EDR at some point doing

491
00:18:27,550 --> 00:18:32,500
that but if you want to add a local

492
00:18:30,100 --> 00:18:33,580
admin or do something else on all of the

493
00:18:32,500 --> 00:18:34,930
virtual machines if you've got

494
00:18:33,580 --> 00:18:37,620
contributor level access to that

495
00:18:34,930 --> 00:18:39,370
subscription you can easily do that

496
00:18:37,620 --> 00:18:41,679
number of different things that you can

497
00:18:39,370 --> 00:18:43,750
kind of run through that command

498
00:18:41,680 --> 00:18:45,730
execution but I'd highly recommend that

499
00:18:43,750 --> 00:18:47,080
as a next step if you want to pivot into

500
00:18:45,730 --> 00:18:50,430
the virtual machines and potentially

501
00:18:47,080 --> 00:18:53,020
pivot back into say an internal network

502
00:18:50,430 --> 00:18:55,060
one of the things that we have seen a

503
00:18:53,020 --> 00:18:58,420
few times is an environment that's kind

504
00:18:55,060 --> 00:19:00,970
of blended with sis admins and devs

505
00:18:58,420 --> 00:19:03,550
so sis admins set up the azure cloud

506
00:19:00,970 --> 00:19:05,920
started adding developers into that

507
00:19:03,550 --> 00:19:08,050
subscription and then you get a little

508
00:19:05,920 --> 00:19:11,050
bit of a mix-up of whose resources are

509
00:19:08,050 --> 00:19:12,879
where and where do they belong so say

510
00:19:11,050 --> 00:19:15,730
the sysadmin x' want a backup domain

511
00:19:12,880 --> 00:19:18,160
controller out in the cloud ok good for

512
00:19:15,730 --> 00:19:20,260
redundancy all that but the developers

513
00:19:18,160 --> 00:19:21,580
need contributor rights to manage say a

514
00:19:20,260 --> 00:19:23,440
web app that they're putting together on

515
00:19:21,580 --> 00:19:26,320
a virtual machine out in the cloud well

516
00:19:23,440 --> 00:19:28,240
those contributors who are devs

517
00:19:26,320 --> 00:19:29,860
shouldn't have rights to take over a

518
00:19:28,240 --> 00:19:32,020
domain controller but since they have

519
00:19:29,860 --> 00:19:33,850
contributor rights on all of the virtual

520
00:19:32,020 --> 00:19:35,889
machines in the subscription that domain

521
00:19:33,850 --> 00:19:38,050
controller is now a backup in the cloud

522
00:19:35,890 --> 00:19:41,200
those devs now have contributor level

523
00:19:38,050 --> 00:19:42,960
access local system on the DC and kind

524
00:19:41,200 --> 00:19:45,690
of see where that's going from there

525
00:19:42,960 --> 00:19:47,430
so definitely a problem that we

526
00:19:45,690 --> 00:19:48,870
occasionally see just recommendation

527
00:19:47,430 --> 00:19:50,190
they're just separate your environments

528
00:19:48,870 --> 00:19:51,750
it's easy to spin up another

529
00:19:50,190 --> 00:19:53,340
subscription under the overall tenant

530
00:19:51,750 --> 00:19:57,960
and just kind of keep things clean and

531
00:19:53,340 --> 00:20:00,179
separate so we'll talk about storage

532
00:19:57,960 --> 00:20:01,920
accounts next thing buddy's familiar

533
00:20:00,180 --> 00:20:04,650
with storage accounts its Microsoft's

534
00:20:01,920 --> 00:20:05,460
way of storing files data tables all

535
00:20:04,650 --> 00:20:07,230
that kind of stuff

536
00:20:05,460 --> 00:20:09,030
primary thing that we run into with

537
00:20:07,230 --> 00:20:11,220
cloud pentest for getting into Azure

538
00:20:09,030 --> 00:20:14,730
environments is really just publicly

539
00:20:11,220 --> 00:20:17,490
available containers and files config

540
00:20:14,730 --> 00:20:19,380
files that end up in the storage

541
00:20:17,490 --> 00:20:21,030
accounts are in the blob storage one

542
00:20:19,380 --> 00:20:22,920
thing that we frequently find our config

543
00:20:21,030 --> 00:20:24,899
files that are stored in storage

544
00:20:22,920 --> 00:20:26,340
accounts which as a contributor you have

545
00:20:24,900 --> 00:20:29,520
rights to go ahead and download those

546
00:20:26,340 --> 00:20:32,399
individual files those config files get

547
00:20:29,520 --> 00:20:34,320
pulled in to build pipelines active

548
00:20:32,400 --> 00:20:36,960
systems that need a config file exposed

549
00:20:34,320 --> 00:20:39,210
out to Azure lots of great passwords

550
00:20:36,960 --> 00:20:41,580
Keys all sorts of good things that we

551
00:20:39,210 --> 00:20:43,080
can start attacking from there so it's a

552
00:20:41,580 --> 00:20:46,409
kind of next step take a look at

553
00:20:43,080 --> 00:20:47,970
available storage accounts and start

554
00:20:46,410 --> 00:20:49,980
piling through the containers and files

555
00:20:47,970 --> 00:20:51,810
with reader level access you can read

556
00:20:49,980 --> 00:20:53,640
the actual names of the storage accounts

557
00:20:51,810 --> 00:20:55,770
and the containers but not necessarily

558
00:20:53,640 --> 00:20:57,360
the files underneath that so if anything

559
00:20:55,770 --> 00:20:59,010
is publicly available there are ways

560
00:20:57,360 --> 00:21:02,280
that you can basically list out

561
00:20:59,010 --> 00:21:04,470
container permission containers and list

562
00:21:02,280 --> 00:21:06,360
out all the files there as a reader but

563
00:21:04,470 --> 00:21:08,820
it's not as practical we occasionally

564
00:21:06,360 --> 00:21:12,780
see publicly exposed really sensitive

565
00:21:08,820 --> 00:21:15,570
data say config files passwords etc but

566
00:21:12,780 --> 00:21:16,980
not quite as frequently one other option

567
00:21:15,570 --> 00:21:20,429
if you know they're hosting office

568
00:21:16,980 --> 00:21:22,110
documents up on blob storage or anything

569
00:21:20,430 --> 00:21:23,580
like that you might want to try backdoor

570
00:21:22,110 --> 00:21:25,169
in those office documents anything like

571
00:21:23,580 --> 00:21:27,110
that but at that point you could bounce

572
00:21:25,170 --> 00:21:29,400
out SharePoint do the same kind of thing

573
00:21:27,110 --> 00:21:32,219
one thing that we've also found working

574
00:21:29,400 --> 00:21:34,290
with storage accounts for phishing red

575
00:21:32,220 --> 00:21:35,790
team's all that kind of stuff is using

576
00:21:34,290 --> 00:21:37,830
storage accounts and blob storage

577
00:21:35,790 --> 00:21:40,590
actually hosts payloads and malicious

578
00:21:37,830 --> 00:21:41,909
content because storage in it accounts

579
00:21:40,590 --> 00:21:45,120
don't really care whatever you put in

580
00:21:41,910 --> 00:21:46,680
there and the blob storage URL is

581
00:21:45,120 --> 00:21:49,199
typically a trusted URL because it goes

582
00:21:46,680 --> 00:21:51,000
through a Windows domain so if you want

583
00:21:49,200 --> 00:21:54,710
a nice safe place to host some of your

584
00:21:51,000 --> 00:21:54,710
payloads take a look at blob storage

585
00:21:55,380 --> 00:22:01,060
all right so contributor level access on

586
00:21:58,480 --> 00:22:03,370
virtual disks virtual hard drives we

587
00:22:01,060 --> 00:22:06,760
frequently see backups of hard drive

588
00:22:03,370 --> 00:22:08,320
images or VHD files out in blob storage

589
00:22:06,760 --> 00:22:10,000
and publicly available so you can

590
00:22:08,320 --> 00:22:11,350
download them the problem is that

591
00:22:10,000 --> 00:22:12,460
they're usually like a hundred and

592
00:22:11,350 --> 00:22:14,909
twenty gigs and they take a while to

593
00:22:12,460 --> 00:22:17,680
download I potentially mount them into

594
00:22:14,910 --> 00:22:19,060
another Azure resource and it makes it a

595
00:22:17,680 --> 00:22:21,580
little bit quicker to load those things

596
00:22:19,060 --> 00:22:24,340
up versus downloading them over your

597
00:22:21,580 --> 00:22:26,199
standard internet connection but if

598
00:22:24,340 --> 00:22:27,699
you've got access to the actual virtual

599
00:22:26,200 --> 00:22:30,070
disks you could potentially make a copy

600
00:22:27,700 --> 00:22:31,900
of that disk and then parch things off

601
00:22:30,070 --> 00:22:33,580
of it in the talk I did last year I

602
00:22:31,900 --> 00:22:34,990
talked about downloading a VHD file that

603
00:22:33,580 --> 00:22:37,929
was publicly available scraping out the

604
00:22:34,990 --> 00:22:40,330
hashes and getting access to that

605
00:22:37,930 --> 00:22:43,450
virtual machine from there but static

606
00:22:40,330 --> 00:22:45,939
flow put out very similar attack for AWS

607
00:22:43,450 --> 00:22:48,310
check out that blog post and The

608
00:22:45,940 --> 00:22:50,170
Associated code for basically the AWS

609
00:22:48,310 --> 00:22:55,450
equivalent it's pretty similar to do

610
00:22:50,170 --> 00:22:57,610
same process for edger so if you have

611
00:22:55,450 --> 00:22:59,770
contributor level access to key vaults

612
00:22:57,610 --> 00:23:01,929
or app services and automation accounts

613
00:22:59,770 --> 00:23:04,600
there are a lot of passwords that hang

614
00:23:01,930 --> 00:23:06,580
out in those three areas key vaults it

615
00:23:04,600 --> 00:23:08,889
would make sense it's a key vault that's

616
00:23:06,580 --> 00:23:10,810
worth password should go but if you have

617
00:23:08,890 --> 00:23:13,060
contributor level access and specific

618
00:23:10,810 --> 00:23:15,760
permissions to the key vaults I wrote

619
00:23:13,060 --> 00:23:17,830
get as your passwords it's out of the--

620
00:23:15,760 --> 00:23:19,240
microburst repo basically goes through

621
00:23:17,830 --> 00:23:21,310
all of the key vault entries and tries

622
00:23:19,240 --> 00:23:24,460
to dump all of them it's not the most

623
00:23:21,310 --> 00:23:25,870
OPSEC safe thing we have seen alerts pop

624
00:23:24,460 --> 00:23:27,790
up saying hey this users not act

625
00:23:25,870 --> 00:23:29,800
authorized to access these key bolts

626
00:23:27,790 --> 00:23:31,930
they tried to access these key vaults we

627
00:23:29,800 --> 00:23:34,240
got alerts so I definitely be careful

628
00:23:31,930 --> 00:23:36,460
with that but if you have a contributor

629
00:23:34,240 --> 00:23:38,290
account that has read access on those

630
00:23:36,460 --> 00:23:39,880
key vault entries definitely go ahead

631
00:23:38,290 --> 00:23:42,399
and dump those out see what's available

632
00:23:39,880 --> 00:23:44,230
there app services we kind of talked

633
00:23:42,400 --> 00:23:46,630
through those available credentials but

634
00:23:44,230 --> 00:23:48,430
what get as your passwords does pulls

635
00:23:46,630 --> 00:23:50,200
out all of the connection strings as

636
00:23:48,430 --> 00:23:52,600
well as the deployment passwords that

637
00:23:50,200 --> 00:23:55,780
are available and list those out in the

638
00:23:52,600 --> 00:23:57,939
output there finally for automation

639
00:23:55,780 --> 00:23:59,110
accounts and we're gonna spend decent

640
00:23:57,940 --> 00:24:02,170
chunk of time talking about automation

641
00:23:59,110 --> 00:24:04,750
accounts today but automation accounts

642
00:24:02,170 --> 00:24:07,090
frequently are set up as contributor

643
00:24:04,750 --> 00:24:08,580
accounts on the subscription by default

644
00:24:07,090 --> 00:24:10,379
when you create a new automate

645
00:24:08,580 --> 00:24:13,139
account it creates an application

646
00:24:10,380 --> 00:24:16,350
account in Azure ad and you can go ahead

647
00:24:13,140 --> 00:24:18,000
and use that to run contributor level

648
00:24:16,350 --> 00:24:20,010
rights code in these automation run

649
00:24:18,000 --> 00:24:23,340
books so automation is kind of the

650
00:24:20,010 --> 00:24:25,559
serverless code automation with in Azure

651
00:24:23,340 --> 00:24:27,840
you can go ahead and do PowerShell

652
00:24:25,559 --> 00:24:30,269
Python they have a graphical run book

653
00:24:27,840 --> 00:24:31,709
that you can run to it's really a great

654
00:24:30,269 --> 00:24:33,390
way to just automate a lot of the

655
00:24:31,710 --> 00:24:35,370
workflow that you have an azure it's

656
00:24:33,390 --> 00:24:38,399
also a great way to potentially escalate

657
00:24:35,370 --> 00:24:41,789
privileges persist we'll talk about that

658
00:24:38,399 --> 00:24:43,289
a couple of slides here but from an

659
00:24:41,789 --> 00:24:46,860
automation account perspective people

660
00:24:43,289 --> 00:24:48,269
may want to contribute second or put in

661
00:24:46,860 --> 00:24:50,070
secondary credentials

662
00:24:48,269 --> 00:24:51,330
instead of that contributor service

663
00:24:50,070 --> 00:24:53,010
account that's running as the automation

664
00:24:51,330 --> 00:24:54,990
account to do let's say user

665
00:24:53,010 --> 00:24:56,760
administration so we've seen automation

666
00:24:54,990 --> 00:24:59,580
accounts they're set up with global

667
00:24:56,760 --> 00:25:01,408
admin credentials and we're able to pull

668
00:24:59,580 --> 00:25:02,879
those out in clear-text because of the

669
00:25:01,409 --> 00:25:04,710
way that they're stored so in order to

670
00:25:02,880 --> 00:25:06,809
make use of those credentials the

671
00:25:04,710 --> 00:25:09,179
automation account actually stores the

672
00:25:06,809 --> 00:25:10,529
credential in a reversible format that

673
00:25:09,179 --> 00:25:13,740
you can pull out with an automation run

674
00:25:10,529 --> 00:25:16,409
book so what get as your passwords does

675
00:25:13,740 --> 00:25:19,320
is actually goes creates a new run book

676
00:25:16,409 --> 00:25:20,580
with that automation account dumps out

677
00:25:19,320 --> 00:25:22,408
the available credentials that are

678
00:25:20,580 --> 00:25:24,960
stored in the credentials and it can

679
00:25:22,409 --> 00:25:27,149
also dump out any configured run as

680
00:25:24,960 --> 00:25:29,100
certificates and those can actually be

681
00:25:27,149 --> 00:25:30,989
used after the fact to authenticate back

682
00:25:29,100 --> 00:25:34,908
to that automation account so those can

683
00:25:30,990 --> 00:25:40,559
actually be really handy for persistence

684
00:25:34,909 --> 00:25:41,669
all right so with the run books we found

685
00:25:40,559 --> 00:25:44,158
that they're actually frequently

686
00:25:41,669 --> 00:25:45,779
configured to have key vault access so

687
00:25:44,159 --> 00:25:48,690
the run books will do some type of

688
00:25:45,779 --> 00:25:50,580
automation that requires them to say

689
00:25:48,690 --> 00:25:52,559
pull a local admin password out of the

690
00:25:50,580 --> 00:25:54,269
key vault instead of storing it in a

691
00:25:52,559 --> 00:25:56,580
deployment template or you know

692
00:25:54,269 --> 00:25:58,169
somewhere else clear text so what we can

693
00:25:56,580 --> 00:25:59,668
do with those automation accounts I put

694
00:25:58,169 --> 00:26:02,700
another blog post out probably couple

695
00:25:59,669 --> 00:26:04,590
months ago that talks about using these

696
00:26:02,700 --> 00:26:07,740
automation accounts to go ahead and dump

697
00:26:04,590 --> 00:26:09,539
out all of the key vault entries so that

698
00:26:07,740 --> 00:26:11,190
you can see what's in there since your

699
00:26:09,539 --> 00:26:13,049
regular contributor account may not have

700
00:26:11,190 --> 00:26:14,820
rights to read that key vault but that

701
00:26:13,049 --> 00:26:17,309
automation account does you could just

702
00:26:14,820 --> 00:26:19,620
run code in that as your run book or

703
00:26:17,309 --> 00:26:21,178
that automation account to go ahead and

704
00:26:19,620 --> 00:26:22,080
just dump everything out of the key

705
00:26:21,179 --> 00:26:25,800
vaults

706
00:26:22,080 --> 00:26:28,020
super handy just a nice way to kind of

707
00:26:25,800 --> 00:26:30,629
bypass or make use of those contributor

708
00:26:28,020 --> 00:26:33,540
accounts to then get access to the

709
00:26:30,630 --> 00:26:35,160
actual key bolts and without owner

710
00:26:33,540 --> 00:26:37,649
permissions you can't actually assign

711
00:26:35,160 --> 00:26:40,290
yourself to it so it's good bypass for

712
00:26:37,650 --> 00:26:43,380
that in terms of escalating privileges

713
00:26:40,290 --> 00:26:45,180
like I said we have seen it where owner

714
00:26:43,380 --> 00:26:46,920
level accounts or tenant admin global

715
00:26:45,180 --> 00:26:48,770
admin accounts are being configured as

716
00:26:46,920 --> 00:26:50,490
the clear text credentials so

717
00:26:48,770 --> 00:26:52,920
potentially you can either just use

718
00:26:50,490 --> 00:26:54,510
those within the run books and create

719
00:26:52,920 --> 00:26:56,550
your own new user or escalate privileges

720
00:26:54,510 --> 00:26:59,129
of another user up to ten and admin and

721
00:26:56,550 --> 00:27:01,530
then log in those tenant admin accounts

722
00:26:59,130 --> 00:27:05,010
may be protected with MFA so they may

723
00:27:01,530 --> 00:27:06,960
have kind of runbook permissions set up

724
00:27:05,010 --> 00:27:09,350
so that you could actually execute code

725
00:27:06,960 --> 00:27:13,290
as a tenant admin or global admin and

726
00:27:09,350 --> 00:27:14,790
start doing admin things from there so

727
00:27:13,290 --> 00:27:17,510
sky's the limit there at that point you

728
00:27:14,790 --> 00:27:20,070
have access to that account basically

729
00:27:17,510 --> 00:27:23,629
and we'll kind of cover that in the

730
00:27:20,070 --> 00:27:26,639
persistence section as well so

731
00:27:23,630 --> 00:27:28,140
continuing our reader level example we

732
00:27:26,640 --> 00:27:31,560
Mimi cats that contributor account

733
00:27:28,140 --> 00:27:33,360
logged in to Azure portal or CLI or

734
00:27:31,560 --> 00:27:36,330
whatever with this new contributor

735
00:27:33,360 --> 00:27:38,729
account have contributor level access to

736
00:27:36,330 --> 00:27:40,470
automation accounts and from there we

737
00:27:38,730 --> 00:27:42,090
ran to get passwords to dump out their

738
00:27:40,470 --> 00:27:44,520
credentials turns out there's an owner

739
00:27:42,090 --> 00:27:46,889
account configured for the credentials

740
00:27:44,520 --> 00:27:48,389
for automation accounts like I said we

741
00:27:46,890 --> 00:27:49,730
do frequently see this because

742
00:27:48,390 --> 00:27:52,500
automation accounts will get set up

743
00:27:49,730 --> 00:27:54,930
somebody realizes I can't do the things

744
00:27:52,500 --> 00:27:56,820
I want to do I better just give it my

745
00:27:54,930 --> 00:27:58,470
own credentials so it runs as me cuz I

746
00:27:56,820 --> 00:27:59,669
know my credentials will work and then

747
00:27:58,470 --> 00:28:02,460
those credentials get stored in there

748
00:27:59,670 --> 00:28:06,480
and then we get access to them so at

749
00:28:02,460 --> 00:28:08,040
this point we've got owner so this is

750
00:28:06,480 --> 00:28:11,010
where things get a little complicated

751
00:28:08,040 --> 00:28:13,080
because quite frequently we find tenant

752
00:28:11,010 --> 00:28:15,210
admin credentials in some way shape or

753
00:28:13,080 --> 00:28:17,280
form during that contributor phase we

754
00:28:15,210 --> 00:28:20,280
don't typically spend a lot of time in

755
00:28:17,280 --> 00:28:21,870
that owner phase because we frequently

756
00:28:20,280 --> 00:28:24,000
just jump right up to ten an admin from

757
00:28:21,870 --> 00:28:26,179
contributor but if you do have owner

758
00:28:24,000 --> 00:28:28,290
level access as I mentioned before

759
00:28:26,180 --> 00:28:29,610
typically these are kind of privileged

760
00:28:28,290 --> 00:28:31,740
accounts in the first place they have

761
00:28:29,610 --> 00:28:33,120
ownership rights on the subscription and

762
00:28:31,740 --> 00:28:34,830
they're frequently configured with

763
00:28:33,120 --> 00:28:38,070
multiple subscriptions so

764
00:28:34,830 --> 00:28:40,020
do yourself a favor and you say the AZ

765
00:28:38,070 --> 00:28:42,270
commandlets to list out all of the

766
00:28:40,020 --> 00:28:44,730
available subscriptions for that account

767
00:28:42,270 --> 00:28:46,950
and then you can just jump into the

768
00:28:44,730 --> 00:28:48,330
other subscriptions from there or if you

769
00:28:46,950 --> 00:28:49,710
go to the top right hand corner and

770
00:28:48,330 --> 00:28:51,330
click on your account and then switch

771
00:28:49,710 --> 00:28:53,520
your subscription under directory and

772
00:28:51,330 --> 00:28:54,810
subscriptions you just list out the

773
00:28:53,520 --> 00:28:57,170
other subscriptions that are available

774
00:28:54,810 --> 00:29:01,350
that we have in the bottom right there

775
00:28:57,170 --> 00:29:02,880
so once you have owner level access my

776
00:29:01,350 --> 00:29:04,290
best recommendation here is really just

777
00:29:02,880 --> 00:29:06,120
bouncing from subscription to

778
00:29:04,290 --> 00:29:08,129
subscription let's say that you ended up

779
00:29:06,120 --> 00:29:09,810
in the prod environment up front they

780
00:29:08,130 --> 00:29:11,820
have that relatively lock down you're

781
00:29:09,810 --> 00:29:13,649
able to escalate up to owner that owner

782
00:29:11,820 --> 00:29:15,540
probably owns the dev environment as

783
00:29:13,650 --> 00:29:17,100
well and I don't want to make any

784
00:29:15,540 --> 00:29:19,680
promises but that dev environment is

785
00:29:17,100 --> 00:29:21,209
probably not as locked down and there's

786
00:29:19,680 --> 00:29:22,500
probably a lot more credentials and

787
00:29:21,210 --> 00:29:23,940
other things that you can use to pivot

788
00:29:22,500 --> 00:29:26,100
going through that dev environment

789
00:29:23,940 --> 00:29:28,670
instead so definitely look at other

790
00:29:26,100 --> 00:29:31,110
subscriptions as potential to escalate

791
00:29:28,670 --> 00:29:33,390
really just lather rinse repeat until

792
00:29:31,110 --> 00:29:35,010
you've access or owned all of the other

793
00:29:33,390 --> 00:29:37,170
subscriptions let's say you pivot into

794
00:29:35,010 --> 00:29:39,570
that dev environment get another owner

795
00:29:37,170 --> 00:29:41,010
credential who then has access to a

796
00:29:39,570 --> 00:29:42,510
couple more subscriptions at a certain

797
00:29:41,010 --> 00:29:45,000
point you've got enough owner

798
00:29:42,510 --> 00:29:47,610
credentials to have owner rights on all

799
00:29:45,000 --> 00:29:49,290
of the subscriptions now it's not full

800
00:29:47,610 --> 00:29:51,090
tenant admin at that point but you

801
00:29:49,290 --> 00:29:56,610
basically control the whole tenant at

802
00:29:51,090 --> 00:29:58,980
that point so we'll get up to tenant

803
00:29:56,610 --> 00:30:00,990
admin and persistence here so you've got

804
00:29:58,980 --> 00:30:03,930
global admin now what do you want to do

805
00:30:00,990 --> 00:30:07,320
well you could burn it all down that

806
00:30:03,930 --> 00:30:09,390
would be bad but with some of the

807
00:30:07,320 --> 00:30:11,100
organizations that we deal with you know

808
00:30:09,390 --> 00:30:13,290
they're using thousands upon thousands

809
00:30:11,100 --> 00:30:15,240
of dollars of as your resources per

810
00:30:13,290 --> 00:30:19,200
month and this could be hugely impactful

811
00:30:15,240 --> 00:30:20,760
so talking about potential impact you

812
00:30:19,200 --> 00:30:23,100
know if you took down the entirety of

813
00:30:20,760 --> 00:30:24,660
your Azure infrastructure how would that

814
00:30:23,100 --> 00:30:27,330
impact your organization that could be

815
00:30:24,660 --> 00:30:27,780
hugely impactful so a we don't want to

816
00:30:27,330 --> 00:30:30,330
bring it all down

817
00:30:27,780 --> 00:30:32,310
that's not something to do but we may

818
00:30:30,330 --> 00:30:34,379
want to pivot internally so if we've got

819
00:30:32,310 --> 00:30:37,320
access to all of these subscriptions we

820
00:30:34,380 --> 00:30:39,270
own as your ad we can create our own

821
00:30:37,320 --> 00:30:41,189
accounts get access to everything else

822
00:30:39,270 --> 00:30:42,990
there's pretty good chance that there's

823
00:30:41,190 --> 00:30:44,910
a direct connect tunnel back to the

824
00:30:42,990 --> 00:30:46,140
corporate network we can get access to

825
00:30:44,910 --> 00:30:47,930
say a virtual machine then start

826
00:30:46,140 --> 00:30:50,060
pivoting back over that Vee

827
00:30:47,930 --> 00:30:51,110
or Direct Connect connection back into

828
00:30:50,060 --> 00:30:52,820
the corporate environment and start

829
00:30:51,110 --> 00:30:55,760
going after the resources we want there

830
00:30:52,820 --> 00:30:57,429
and from an external pentest perspective

831
00:30:55,760 --> 00:31:00,290
you know if we're guessing credentials

832
00:30:57,430 --> 00:31:02,410
externally getting access to VMs through

833
00:31:00,290 --> 00:31:04,610
the portal or through these escalations

834
00:31:02,410 --> 00:31:06,440
there's a pretty good chance that we

835
00:31:04,610 --> 00:31:10,760
could then pivot into the internal

836
00:31:06,440 --> 00:31:13,190
network from there so we also want to

837
00:31:10,760 --> 00:31:14,750
persist our access so depending on what

838
00:31:13,190 --> 00:31:17,480
the scope of the engagement is you may

839
00:31:14,750 --> 00:31:19,790
want to hang out and have tenant admin

840
00:31:17,480 --> 00:31:21,440
access for a while if your operations

841
00:31:19,790 --> 00:31:23,510
going for a while you may want to

842
00:31:21,440 --> 00:31:26,810
persist your access so we'll talk about

843
00:31:23,510 --> 00:31:29,180
a couple of techniques for that so first

844
00:31:26,810 --> 00:31:31,820
thing kind of loud to add accounts

845
00:31:29,180 --> 00:31:34,370
wouldn't highly recommend it but it is

846
00:31:31,820 --> 00:31:36,560
an option I you could add as your ad

847
00:31:34,370 --> 00:31:38,689
accounts that could be added to the

848
00:31:36,560 --> 00:31:41,360
global admins group or add a user admins

849
00:31:38,690 --> 00:31:43,730
group be a little quieter it might not

850
00:31:41,360 --> 00:31:45,860
be as monitored but if monitoring is set

851
00:31:43,730 --> 00:31:47,540
up for additions to these protected

852
00:31:45,860 --> 00:31:50,209
groups and there's a pretty good chance

853
00:31:47,540 --> 00:31:52,040
you might get caught there but that

854
00:31:50,210 --> 00:31:53,420
would be kind of a secondary way so that

855
00:31:52,040 --> 00:31:55,460
if your primary account gets you locked

856
00:31:53,420 --> 00:31:57,740
out or if you somehow lose access you

857
00:31:55,460 --> 00:31:59,930
have some backup there recommendations

858
00:31:57,740 --> 00:32:01,550
there follow you know company naming

859
00:31:59,930 --> 00:32:04,100
structure you know if it's first initial

860
00:32:01,550 --> 00:32:06,440
last name or say Carl dot Foss in that

861
00:32:04,100 --> 00:32:08,870
kind of structure use a similar username

862
00:32:06,440 --> 00:32:11,870
and if you want to be a little more

863
00:32:08,870 --> 00:32:13,310
quiet add that as a contributor or maybe

864
00:32:11,870 --> 00:32:14,600
even an owner for the important

865
00:32:13,310 --> 00:32:17,629
subscriptions that you want to get back

866
00:32:14,600 --> 00:32:20,000
into to potentially pivot and escalate

867
00:32:17,630 --> 00:32:21,620
your access again try and mimic the

868
00:32:20,000 --> 00:32:23,960
account attributes of the other admins

869
00:32:21,620 --> 00:32:26,330
it's really easy to go into Azure ad and

870
00:32:23,960 --> 00:32:28,490
just pick out all of the attributes for

871
00:32:26,330 --> 00:32:30,439
specific users if they're not using a

872
00:32:28,490 --> 00:32:31,310
specific field or comment maybe you

873
00:32:30,440 --> 00:32:34,520
don't want to use that when you're

874
00:32:31,310 --> 00:32:37,940
creating that user so kind of a fun

875
00:32:34,520 --> 00:32:39,770
little easy CLI command that I have up

876
00:32:37,940 --> 00:32:42,050
here first one here lists out all of

877
00:32:39,770 --> 00:32:43,910
your subscriptions so let's say that

878
00:32:42,050 --> 00:32:46,909
you've created a new user we'll call it

879
00:32:43,910 --> 00:32:49,490
net spy and you want to add net spy as

880
00:32:46,910 --> 00:32:51,500
an owner of all of these subscriptions

881
00:32:49,490 --> 00:32:54,080
in the tenant but you can just list out

882
00:32:51,500 --> 00:32:56,330
with AZ account list pipe it out through

883
00:32:54,080 --> 00:32:59,600
some convert from JSON grab out the IDS

884
00:32:56,330 --> 00:33:00,470
pipe those IDs into the create role for

885
00:32:59,600 --> 00:33:02,689
owner

886
00:33:00,470 --> 00:33:05,780
for the net spy user and then just pipe

887
00:33:02,690 --> 00:33:07,390
in those IDs for that basically a you

888
00:33:05,780 --> 00:33:10,280
could make that into a one-liner and

889
00:33:07,390 --> 00:33:14,450
give yourself owner level access for a

890
00:33:10,280 --> 00:33:15,080
specific account really quickly all

891
00:33:14,450 --> 00:33:17,990
right

892
00:33:15,080 --> 00:33:19,340
additional kind of add user type option

893
00:33:17,990 --> 00:33:21,260
that we have and it's been talked about

894
00:33:19,340 --> 00:33:23,179
by a few other people before but wanted

895
00:33:21,260 --> 00:33:25,610
to touch on it is guest access to a

896
00:33:23,180 --> 00:33:27,770
tenant so if you have external

897
00:33:25,610 --> 00:33:30,260
collaboration settings set up to allow

898
00:33:27,770 --> 00:33:32,840
guest users you can invite some of these

899
00:33:30,260 --> 00:33:34,580
gmail address or maybe create a

900
00:33:32,840 --> 00:33:37,730
look-alike email domain so if we

901
00:33:34,580 --> 00:33:39,470
compromised the net spy cloud net spy

902
00:33:37,730 --> 00:33:41,030
dot cloud seems like it might be

903
00:33:39,470 --> 00:33:43,490
legitimate like it might have been set

904
00:33:41,030 --> 00:33:45,260
up for the Azure environment so if you

905
00:33:43,490 --> 00:33:46,850
create a look-alike email domain create

906
00:33:45,260 --> 00:33:49,700
a user within that you get an invite

907
00:33:46,850 --> 00:33:50,570
email then start adding that user to

908
00:33:49,700 --> 00:33:52,850
different groups that you want to

909
00:33:50,570 --> 00:33:54,500
maintain access to I will say the guest

910
00:33:52,850 --> 00:33:56,449
accounts don't seem to get audited a

911
00:33:54,500 --> 00:33:58,730
whole lot we take a look at those when

912
00:33:56,450 --> 00:34:00,170
we do cloud pen tests kind of see how

913
00:33:58,730 --> 00:34:03,230
many guests accounts are existing in

914
00:34:00,170 --> 00:34:05,180
that Azure tenant and we frequently see

915
00:34:03,230 --> 00:34:07,430
a lot they can be set up for external

916
00:34:05,180 --> 00:34:09,530
collaboration I'd say for the most part

917
00:34:07,430 --> 00:34:11,360
they're not set up with excessive user

918
00:34:09,530 --> 00:34:13,730
permissions but let's say use outsourced

919
00:34:11,360 --> 00:34:16,400
IT for some of your work or some of your

920
00:34:13,730 --> 00:34:18,469
vendors they may actually have somewhat

921
00:34:16,400 --> 00:34:20,630
excessive permissions and that could be

922
00:34:18,469 --> 00:34:24,169
a large risk to you having those guests

923
00:34:20,630 --> 00:34:25,580
accounts on your as your tenant so if

924
00:34:24,170 --> 00:34:28,040
you want to add a guest account to the

925
00:34:25,580 --> 00:34:30,949
tenant might be a useful thing to do

926
00:34:28,040 --> 00:34:33,520
I just add appropriate I am at cess or

927
00:34:30,949 --> 00:34:37,389
assignments where you need them just

928
00:34:33,520 --> 00:34:39,739
persist your rack access that way I

929
00:34:37,389 --> 00:34:41,779
don't really recommend this one but I

930
00:34:39,739 --> 00:34:43,790
came up with this bender picture and

931
00:34:41,780 --> 00:34:46,250
really wanted to use it I you could

932
00:34:43,790 --> 00:34:48,020
create your own subscription I you your

933
00:34:46,250 --> 00:34:49,670
tenant admin you could create your own

934
00:34:48,020 --> 00:34:51,800
and you know fill it with blackjack and

935
00:34:49,670 --> 00:34:53,510
crypto minors this is more of a

936
00:34:51,800 --> 00:34:56,090
malicious attacker kind of perspective

937
00:34:53,510 --> 00:34:58,220
if somebody gets your tenant admin or

938
00:34:56,090 --> 00:35:00,050
global admin credentials and wants to

939
00:34:58,220 --> 00:35:01,399
start doing crypto mining you know they

940
00:35:00,050 --> 00:35:02,750
can go ahead and do that they can spin

941
00:35:01,400 --> 00:35:05,750
up a whole bunch of virtual virtual

942
00:35:02,750 --> 00:35:07,780
machines and incur a whole bunch of

943
00:35:05,750 --> 00:35:10,130
costs on your Azure subscription as

944
00:35:07,780 --> 00:35:11,960
practical pen testers or red teamers I

945
00:35:10,130 --> 00:35:14,270
wouldn't recommend this it's not going

946
00:35:11,960 --> 00:35:15,650
to look good but as

947
00:35:14,270 --> 00:35:17,720
an actual attack that people should be

948
00:35:15,650 --> 00:35:20,000
concerned about definitely look out for

949
00:35:17,720 --> 00:35:22,399
people spinning up those subscriptions

950
00:35:20,000 --> 00:35:25,490
so a little more quieter option and this

951
00:35:22,400 --> 00:35:28,340
will lead us more into the automation

952
00:35:25,490 --> 00:35:30,939
accounts and keeping persistence through

953
00:35:28,340 --> 00:35:33,500
that is creating service principles

954
00:35:30,940 --> 00:35:36,080
applications or automation accounts and

955
00:35:33,500 --> 00:35:37,670
giving them excessive privileges so as

956
00:35:36,080 --> 00:35:39,500
your ad is a number of different ways

957
00:35:37,670 --> 00:35:41,090
that you can create accounts you can

958
00:35:39,500 --> 00:35:43,670
create regular user accounts so they're

959
00:35:41,090 --> 00:35:46,160
like any other ad user account and you

960
00:35:43,670 --> 00:35:47,660
can also create applications and what

961
00:35:46,160 --> 00:35:49,700
you'll see with automation accounts is

962
00:35:47,660 --> 00:35:51,890
let's call it backup what you'll see

963
00:35:49,700 --> 00:35:54,859
with the backup automation account is

964
00:35:51,890 --> 00:35:56,600
there is an application user that's

965
00:35:54,860 --> 00:35:59,090
great in nazzer ad you can go to it

966
00:35:56,600 --> 00:36:01,640
through the azure ad portal and list out

967
00:35:59,090 --> 00:36:03,590
all of the enrolled applications and

968
00:36:01,640 --> 00:36:06,440
you'll see backup and then a bunch of

969
00:36:03,590 --> 00:36:08,150
base 64 after it those all kind of blend

970
00:36:06,440 --> 00:36:10,910
in they look like service accounts if

971
00:36:08,150 --> 00:36:12,440
you want to create your own within there

972
00:36:10,910 --> 00:36:14,660
and kind of persist and hide in those

973
00:36:12,440 --> 00:36:16,400
those are pretty handy because they're

974
00:36:14,660 --> 00:36:19,640
less likely to be taken away if it says

975
00:36:16,400 --> 00:36:21,350
backup process less likely to delete

976
00:36:19,640 --> 00:36:22,970
that outright probably want to

977
00:36:21,350 --> 00:36:25,580
investigate that a little bit deeper may

978
00:36:22,970 --> 00:36:28,930
buy you a little bit more time within

979
00:36:25,580 --> 00:36:32,120
your actual pentest

980
00:36:28,930 --> 00:36:33,589
so with automation accounts like I said

981
00:36:32,120 --> 00:36:36,259
automation accounts create these

982
00:36:33,590 --> 00:36:39,020
application accounts in Azure ad and

983
00:36:36,260 --> 00:36:41,330
then you can go ahead and apply specific

984
00:36:39,020 --> 00:36:43,640
rights to them so I've got a blog post

985
00:36:41,330 --> 00:36:44,870
coming out next week that'll kind of

986
00:36:43,640 --> 00:36:46,240
discuss some of this and provide some

987
00:36:44,870 --> 00:36:48,650
example code that you can make use of

988
00:36:46,240 --> 00:36:50,149
but let's say that you create an

989
00:36:48,650 --> 00:36:53,120
automation account give it a bunch of

990
00:36:50,150 --> 00:36:55,340
excessive permissions and use that as

991
00:36:53,120 --> 00:36:57,230
your long term persistence you can go

992
00:36:55,340 --> 00:36:58,610
ahead and add a run book use that run

993
00:36:57,230 --> 00:37:01,040
book to run the code that you want and

994
00:36:58,610 --> 00:37:02,870
it runs with the rights of that specific

995
00:37:01,040 --> 00:37:05,360
animation account so let's say you want

996
00:37:02,870 --> 00:37:07,130
to create a new Azure ad user you can

997
00:37:05,360 --> 00:37:08,930
use that new user is kind of short term

998
00:37:07,130 --> 00:37:10,510
access and then use this automation

999
00:37:08,930 --> 00:37:13,339
account as kind of your long haul

1000
00:37:10,510 --> 00:37:15,380
long-term access and then just burn off

1001
00:37:13,340 --> 00:37:17,300
new ad users that you create because

1002
00:37:15,380 --> 00:37:20,180
this automation accounts probably going

1003
00:37:17,300 --> 00:37:22,550
to persist a little bit longer you could

1004
00:37:20,180 --> 00:37:25,700
potentially set up run books that just

1005
00:37:22,550 --> 00:37:27,980
add a user back to the admins group or

1006
00:37:25,700 --> 00:37:29,569
pick a specific existing user the

1007
00:37:27,980 --> 00:37:30,859
you have credentials for and then make a

1008
00:37:29,570 --> 00:37:33,710
run book that just keeps giving them

1009
00:37:30,859 --> 00:37:35,299
more permissions one kind of funny thing

1010
00:37:33,710 --> 00:37:36,800
that will kind of see throughout the

1011
00:37:35,300 --> 00:37:39,109
rest these slides here is sometimes the

1012
00:37:36,800 --> 00:37:40,730
azure portal is a little weird those

1013
00:37:39,109 --> 00:37:42,200
always delete things immediately you may

1014
00:37:40,730 --> 00:37:44,090
say hey let's delete this virtual

1015
00:37:42,200 --> 00:37:46,879
machine and then 20 minutes later it's

1016
00:37:44,090 --> 00:37:48,350
not gone yet occasionally it hiccups a

1017
00:37:46,880 --> 00:37:50,960
little bit stuff like that happens I

1018
00:37:48,350 --> 00:37:52,580
think your average Azure admin is gonna

1019
00:37:50,960 --> 00:37:55,340
look at it go oh I thought I tried to

1020
00:37:52,580 --> 00:37:56,660
delete that user I don't know why it's

1021
00:37:55,340 --> 00:37:57,800
not gone yet but I guess I'll try it

1022
00:37:56,660 --> 00:37:59,240
again and delete it again

1023
00:37:57,800 --> 00:38:01,190
if you have a run book set up to just

1024
00:37:59,240 --> 00:38:03,589
riad that user every time that it gets

1025
00:38:01,190 --> 00:38:05,090
deleted it's just gonna kind of look

1026
00:38:03,590 --> 00:38:06,680
like oh well it just hasn't deleted yet

1027
00:38:05,090 --> 00:38:09,560
or I thought I deleted it for some

1028
00:38:06,680 --> 00:38:11,210
reason it's not gone additionally with

1029
00:38:09,560 --> 00:38:12,920
automation accounts I mean if your

1030
00:38:11,210 --> 00:38:14,450
contributor level access you've got

1031
00:38:12,920 --> 00:38:17,330
local system on all the virtual machines

1032
00:38:14,450 --> 00:38:20,270
so you can go ahead and create a run

1033
00:38:17,330 --> 00:38:21,890
book that runs your payload on all of

1034
00:38:20,270 --> 00:38:24,230
the virtual machines so if you want to

1035
00:38:21,890 --> 00:38:26,000
keep see two channels open through

1036
00:38:24,230 --> 00:38:28,520
virtual machines anything like that you

1037
00:38:26,000 --> 00:38:30,500
can set up runbook to do all of that one

1038
00:38:28,520 --> 00:38:32,480
other option I haven't really made use

1039
00:38:30,500 --> 00:38:34,820
of but thought might be kind of handy is

1040
00:38:32,480 --> 00:38:37,280
dumping any current Azure information

1041
00:38:34,820 --> 00:38:39,200
out to a storage blob that you control

1042
00:38:37,280 --> 00:38:41,060
or something that might be public for

1043
00:38:39,200 --> 00:38:42,980
purpose of a pen test probably give it a

1044
00:38:41,060 --> 00:38:45,320
key for a storage account that you own

1045
00:38:42,980 --> 00:38:47,030
for the blob storage and let's say you

1046
00:38:45,320 --> 00:38:48,530
just want to keep a running list of all

1047
00:38:47,030 --> 00:38:50,420
of the current users and as your active

1048
00:38:48,530 --> 00:38:52,100
directory you can set up a run book to

1049
00:38:50,420 --> 00:38:54,200
just dump all of those out and write

1050
00:38:52,100 --> 00:38:56,720
them out to a storage account that you

1051
00:38:54,200 --> 00:39:00,439
own and just exfiltrate exfiltrate data

1052
00:38:56,720 --> 00:39:02,089
that way so I can be kind of handy so

1053
00:39:00,440 --> 00:39:04,400
one way that you can make use of these

1054
00:39:02,090 --> 00:39:06,680
particularly if you lose your access is

1055
00:39:04,400 --> 00:39:08,600
using web hooks I really like these so

1056
00:39:06,680 --> 00:39:10,430
what the automation accounts and the run

1057
00:39:08,600 --> 00:39:12,740
books you can set up a web hook that you

1058
00:39:10,430 --> 00:39:14,509
can make a post request out to and it

1059
00:39:12,740 --> 00:39:16,910
runs the run book so in this case that

1060
00:39:14,510 --> 00:39:19,010
we have here we have a run book that's

1061
00:39:16,910 --> 00:39:21,259
running in an automation account that's

1062
00:39:19,010 --> 00:39:23,450
been set up with user admin rights along

1063
00:39:21,260 --> 00:39:26,750
with subscription ownership rights on

1064
00:39:23,450 --> 00:39:29,240
the subscription it's in and then that

1065
00:39:26,750 --> 00:39:30,650
run book goes in creates a new user that

1066
00:39:29,240 --> 00:39:32,450
you supply through this post request

1067
00:39:30,650 --> 00:39:34,970
with the password that you supply and

1068
00:39:32,450 --> 00:39:37,250
then adds it adds an owner on the

1069
00:39:34,970 --> 00:39:39,470
account so what we see here is we've got

1070
00:39:37,250 --> 00:39:41,630
nice URL that we can make the post

1071
00:39:39,470 --> 00:39:42,680
request to we see the code here

1072
00:39:41,630 --> 00:39:44,900
said the blog will be coming out next

1073
00:39:42,680 --> 00:39:47,359
week with the sample run book for this

1074
00:39:44,900 --> 00:39:48,770
and I've actually pushed out some of

1075
00:39:47,360 --> 00:39:50,780
that code to the microburst repo if any

1076
00:39:48,770 --> 00:39:53,500
wants to check it out but the blog that

1077
00:39:50,780 --> 00:39:56,420
helps explain that will be out next week

1078
00:39:53,500 --> 00:39:58,490
so we had a little demo here blog demo

1079
00:39:56,420 --> 00:40:00,980
user is our username passwords password

1080
00:39:58,490 --> 00:40:03,470
one two three really secure but all I

1081
00:40:00,980 --> 00:40:05,780
did was hit f5 it invoked the web

1082
00:40:03,470 --> 00:40:08,600
request and we're gonna log in as your

1083
00:40:05,780 --> 00:40:11,350
RM account it's gonna pop login right

1084
00:40:08,600 --> 00:40:13,700
here we'll put in that blog demo user

1085
00:40:11,350 --> 00:40:15,880
prompts for the password password one

1086
00:40:13,700 --> 00:40:19,430
two three

1087
00:40:15,880 --> 00:40:20,540
hey we authenticated awesome so it

1088
00:40:19,430 --> 00:40:22,370
actually makes you change your password

1089
00:40:20,540 --> 00:40:25,490
on first login so we know that this was

1090
00:40:22,370 --> 00:40:27,069
a newly created user give it a stronger

1091
00:40:25,490 --> 00:40:29,359
password than password one two three

1092
00:40:27,070 --> 00:40:31,700
because it does filter on words like

1093
00:40:29,360 --> 00:40:35,570
password or admin and now we're logged

1094
00:40:31,700 --> 00:40:37,759
in so we've now created from this single

1095
00:40:35,570 --> 00:40:39,590
post request an owner account that now

1096
00:40:37,760 --> 00:40:42,080
is a backdoor back into the environment

1097
00:40:39,590 --> 00:40:44,330
and like I said this automation account

1098
00:40:42,080 --> 00:40:47,060
just kind of stays our long haul we can

1099
00:40:44,330 --> 00:40:48,650
create new users as need be you know if

1100
00:40:47,060 --> 00:40:50,060
these users get caught and get removed

1101
00:40:48,650 --> 00:40:50,990
we still have this automation account

1102
00:40:50,060 --> 00:40:52,580
that just kind of hides in the

1103
00:40:50,990 --> 00:40:56,750
background in those application accounts

1104
00:40:52,580 --> 00:40:58,610
so super handy alright

1105
00:40:56,750 --> 00:41:01,280
other thing I wanted to cover here with

1106
00:40:58,610 --> 00:41:03,200
the run books is Watchers now this is

1107
00:41:01,280 --> 00:41:04,850
something I want to dive deeper into I

1108
00:41:03,200 --> 00:41:07,339
haven't written the automation around

1109
00:41:04,850 --> 00:41:10,850
this yet but kind of a couple ideas that

1110
00:41:07,340 --> 00:41:12,680
could be used here so the Watchers for

1111
00:41:10,850 --> 00:41:14,600
automation accounts for run books are

1112
00:41:12,680 --> 00:41:16,190
basically run books that run every X

1113
00:41:14,600 --> 00:41:18,890
number of minutes so you could set up

1114
00:41:16,190 --> 00:41:21,260
one that checks if an azure ad user is

1115
00:41:18,890 --> 00:41:23,509
removed okay so I created my net spy

1116
00:41:21,260 --> 00:41:25,130
Global admin and I've created an

1117
00:41:23,510 --> 00:41:27,650
excessive permissioned automation

1118
00:41:25,130 --> 00:41:31,250
account that checks to see if net spy

1119
00:41:27,650 --> 00:41:32,900
has been deleted so if net spy has been

1120
00:41:31,250 --> 00:41:34,670
deleted we go ahead and just run another

1121
00:41:32,900 --> 00:41:36,860
run book that's in that same automation

1122
00:41:34,670 --> 00:41:38,530
account head net spy back and just keep

1123
00:41:36,860 --> 00:41:41,030
doing that every time it gets deleted

1124
00:41:38,530 --> 00:41:42,710
there's a chance that it may just look

1125
00:41:41,030 --> 00:41:44,000
like Oh as your portals not working

1126
00:41:42,710 --> 00:41:46,070
right now it's not able to delete

1127
00:41:44,000 --> 00:41:47,210
something from Azure ad kind of annoying

1128
00:41:46,070 --> 00:41:49,610
I'll deal with it later

1129
00:41:47,210 --> 00:41:51,080
I hopefully buys you a little bit more

1130
00:41:49,610 --> 00:41:53,330
time

1131
00:41:51,080 --> 00:41:55,369
another idea with that is kind of a I

1132
00:41:53,330 --> 00:41:57,049
guess I'm calling it a double dead man

1133
00:41:55,369 --> 00:41:58,819
switch so if one of the automation

1134
00:41:57,049 --> 00:42:00,829
accounts gets deleted you have a

1135
00:41:58,819 --> 00:42:03,230
secondary automation account set up with

1136
00:42:00,829 --> 00:42:05,089
run books to create another copy of that

1137
00:42:03,230 --> 00:42:07,190
automation account they just go back and

1138
00:42:05,089 --> 00:42:08,480
forth watching each other because let's

1139
00:42:07,190 --> 00:42:10,069
say somebody's investigating it looks

1140
00:42:08,480 --> 00:42:11,630
like it looks like this automation

1141
00:42:10,069 --> 00:42:14,058
account for some reasons excessively

1142
00:42:11,630 --> 00:42:15,289
permissioned and it's you know giving

1143
00:42:14,059 --> 00:42:17,450
access to all these people it's creating

1144
00:42:15,289 --> 00:42:18,619
users we need to delete this and shut

1145
00:42:17,450 --> 00:42:20,689
this thing down okay well it's gone

1146
00:42:18,619 --> 00:42:22,309
you've got a second automation account

1147
00:42:20,690 --> 00:42:25,579
that just goes back and recreates that

1148
00:42:22,309 --> 00:42:27,109
and as the ir teams going and

1149
00:42:25,579 --> 00:42:28,940
investigating the second automation

1150
00:42:27,109 --> 00:42:31,009
account your first ones sitting there

1151
00:42:28,940 --> 00:42:33,680
watching the second one waiting for it

1152
00:42:31,009 --> 00:42:35,420
to get deleted and if it gets deleted it

1153
00:42:33,680 --> 00:42:37,578
just goes back and adds it again so you

1154
00:42:35,420 --> 00:42:39,980
get this continuous circle of kind of a

1155
00:42:37,579 --> 00:42:43,099
double Deadman switch ever written that

1156
00:42:39,980 --> 00:42:44,690
methodology up yet but just kind of came

1157
00:42:43,099 --> 00:42:45,920
up with that like last week and wanted

1158
00:42:44,690 --> 00:42:48,410
to make sure that made it into the

1159
00:42:45,920 --> 00:42:51,259
slides so the Watchers are pretty cool

1160
00:42:48,410 --> 00:42:53,328
it's a nice way to just automate some of

1161
00:42:51,259 --> 00:42:56,839
the persistence instead of relying on

1162
00:42:53,329 --> 00:42:58,880
those web hooks so kind of a slightly

1163
00:42:56,839 --> 00:43:01,339
loud option here but adding back doors

1164
00:42:58,880 --> 00:43:03,950
to VMs I talked about that with the code

1165
00:43:01,339 --> 00:43:05,690
execution a little bit like even adding

1166
00:43:03,950 --> 00:43:07,759
a local admin open up firewall rules

1167
00:43:05,690 --> 00:43:09,440
once you have 10 in admin there's a lot

1168
00:43:07,759 --> 00:43:12,019
that you can do if you want to open up

1169
00:43:09,440 --> 00:43:14,269
RDP to your IP addresses you can do that

1170
00:43:12,019 --> 00:43:16,819
just give yourself you know remote

1171
00:43:14,269 --> 00:43:19,459
access at that point modifying build

1172
00:43:16,819 --> 00:43:21,470
templates docker images all that kind of

1173
00:43:19,460 --> 00:43:24,529
stuff that could be some major changes

1174
00:43:21,470 --> 00:43:27,410
to the environment so try to avoid major

1175
00:43:24,529 --> 00:43:29,839
state changes in general but these are

1176
00:43:27,410 --> 00:43:31,690
slightly louder persistence options that

1177
00:43:29,839 --> 00:43:35,420
may be an option for you

1178
00:43:31,690 --> 00:43:50,690
so we're running up on time here any

1179
00:43:35,420 --> 00:43:53,480
questions so the question was can you

1180
00:43:50,690 --> 00:43:54,799
clone hard drives into a different as

1181
00:43:53,480 --> 00:43:56,839
your subscription or different container

1182
00:43:54,799 --> 00:43:59,029
my recommendation would be make the

1183
00:43:56,839 --> 00:44:00,828
backup of the image and copy that backup

1184
00:43:59,029 --> 00:44:03,069
over to another storage account that you

1185
00:44:00,829 --> 00:44:07,329
own and then you could do that

1186
00:44:03,069 --> 00:44:07,329
any other questions up front

1187
00:44:23,960 --> 00:44:28,769
so the question was around Azure ad and

1188
00:44:27,240 --> 00:44:30,629
kind of sinking that back to on-prem

1189
00:44:28,769 --> 00:44:32,279
networks and exploring that a little bit

1190
00:44:30,630 --> 00:44:34,440
I would highly recommend checking out

1191
00:44:32,279 --> 00:44:37,319
Dirk Yuans talk from DEFCON he covers a

1192
00:44:34,440 --> 00:44:39,180
lot of that stuff there I've gotten a

1193
00:44:37,319 --> 00:44:42,329
little bit into that but if he covers it

1194
00:44:39,180 --> 00:44:45,710
a lot better than I could right now any

1195
00:44:42,329 --> 00:44:45,710
other questions yep

1196
00:44:50,509 --> 00:44:55,559
was the question have I come across PIM

1197
00:44:53,210 --> 00:44:58,380
uh not really

1198
00:44:55,559 --> 00:44:59,910
I I will say with a lot of our clients

1199
00:44:58,380 --> 00:45:01,200
that are making use of Azure it's

1200
00:44:59,910 --> 00:45:04,078
they're just starting to move

1201
00:45:01,200 --> 00:45:06,058
applications in so it's setting up

1202
00:45:04,079 --> 00:45:08,700
virtual machines setting up sequel

1203
00:45:06,059 --> 00:45:10,920
servers just real basics of using Azure

1204
00:45:08,700 --> 00:45:17,058
and really starting to harden things

1205
00:45:10,920 --> 00:45:17,059
it's not been a super large priority yep

1206
00:45:24,319 --> 00:45:29,579
so the question was around attacking

1207
00:45:26,460 --> 00:45:32,190
user access administrator role yep so

1208
00:45:29,579 --> 00:45:34,079
that is one of the specific accounts I

1209
00:45:32,190 --> 00:45:35,819
usually go after doing password guessing

1210
00:45:34,079 --> 00:45:38,640
or looking for specific sessions or

1211
00:45:35,819 --> 00:45:40,740
users to specifically target I user

1212
00:45:38,640 --> 00:45:42,990
access administrators or global admins

1213
00:45:40,740 --> 00:45:48,450
really kind of a key for escalation and

1214
00:45:42,990 --> 00:45:51,288
trying to pivot through as your ad any

1215
00:45:48,450 --> 00:45:51,288
other questions okay

1216
00:45:51,660 --> 00:45:56,670
don't see any hands here I do have a

1217
00:45:53,910 --> 00:45:58,618
bunch of microburst stickers over here

1218
00:45:56,670 --> 00:46:00,420
if anybody wants any I'll be around here

1219
00:45:58,619 --> 00:46:01,920
answering questions so feel free to say

1220
00:46:00,420 --> 00:46:04,389
I thank you

1221
00:46:01,920 --> 00:46:04,389
[Applause]

