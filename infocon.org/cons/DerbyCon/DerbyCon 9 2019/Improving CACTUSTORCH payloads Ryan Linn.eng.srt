1
00:00:00,710 --> 00:00:04,390
[Music]

2
00:00:05,060 --> 00:00:11,820
thanks everybody for coming out to last

3
00:00:08,760 --> 00:00:16,609
talk in track 3 appreciate you guys

4
00:00:11,820 --> 00:00:19,140
sticking around and excited to be the

5
00:00:16,609 --> 00:00:20,910
get the opportunity to speak at this

6
00:00:19,140 --> 00:00:24,869
Derby con I got to speak at the first

7
00:00:20,910 --> 00:00:26,970
one and it's been a whole lot of fun

8
00:00:24,869 --> 00:00:30,179
conferences in between so definitely

9
00:00:26,970 --> 00:00:31,979
gonna miss it but this was a something

10
00:00:30,179 --> 00:00:33,870
that I really wanted to do and I'm glad

11
00:00:31,980 --> 00:00:36,540
I've had the opportunity to do it so I'm

12
00:00:33,870 --> 00:00:40,559
Ryan Linn I am a security strategist for

13
00:00:36,540 --> 00:00:42,210
a financial institution and I helped set

14
00:00:40,559 --> 00:00:45,930
some strategy things for their right

15
00:00:42,210 --> 00:00:47,789
team and also do a lot of um operation

16
00:00:45,930 --> 00:00:50,879
on on red team and so one of the things

17
00:00:47,789 --> 00:00:53,399
that we've been looking at is how to do

18
00:00:50,879 --> 00:00:56,280
more effective payloads for different

19
00:00:53,399 --> 00:00:57,660
kinds of things so really what I'm going

20
00:00:56,280 --> 00:00:59,730
to talk about is an introduction for

21
00:00:57,660 --> 00:01:03,179
people who may not be familiar with

22
00:00:59,730 --> 00:01:05,399
cactus torch what sort of problems that

23
00:01:03,180 --> 00:01:08,040
solving and basically how it works to

24
00:01:05,400 --> 00:01:09,240
see where we started and then gonna look

25
00:01:08,040 --> 00:01:12,619
at some of the new stuff that I've been

26
00:01:09,240 --> 00:01:15,589
building to really help with evasion and

27
00:01:12,619 --> 00:01:18,119
also to add some additional features and

28
00:01:15,590 --> 00:01:22,950
lots of different types of getting ways

29
00:01:18,119 --> 00:01:25,080
to get new shells so the problem that we

30
00:01:22,950 --> 00:01:27,390
had was office is still a pretty juicy

31
00:01:25,080 --> 00:01:29,548
attack vector at a lot of places I was

32
00:01:27,390 --> 00:01:32,430
talking with some peers at other places

33
00:01:29,549 --> 00:01:34,049
and office macros are tough to get rid

34
00:01:32,430 --> 00:01:37,740
of for a lot of people and so it's still

35
00:01:34,049 --> 00:01:39,450
a really good fishing vector but blue

36
00:01:37,740 --> 00:01:42,360
team's now well the time can very

37
00:01:39,450 --> 00:01:44,729
quickly spot them and so as a result

38
00:01:42,360 --> 00:01:47,159
wanting to figure out some ways to

39
00:01:44,729 --> 00:01:49,200
increase evasion things like fireEye and

40
00:01:47,159 --> 00:01:50,549
especially Windows Defender have gotten

41
00:01:49,200 --> 00:01:52,229
pretty good at detecting these sort of

42
00:01:50,549 --> 00:01:54,570
things and so wanting to up my game

43
00:01:52,229 --> 00:01:56,520
there so can we make it more difficult

44
00:01:54,570 --> 00:01:58,320
for the automated tools there are some

45
00:01:56,520 --> 00:02:01,408
things out there that we're already out

46
00:01:58,320 --> 00:02:03,240
there to help things like evil Clippy

47
00:02:01,409 --> 00:02:06,360
and some of the tools that if you guys

48
00:02:03,240 --> 00:02:08,429
saw a Walmart Labs presentation last

49
00:02:06,360 --> 00:02:10,199
year they covered a lot of cool stuff if

50
00:02:08,429 --> 00:02:11,610
you're interested in sort of office of

51
00:02:10,199 --> 00:02:13,140
Asian things especially if you're on the

52
00:02:11,610 --> 00:02:13,840
blue team I highly recommend you check

53
00:02:13,140 --> 00:02:16,329
out there

54
00:02:13,840 --> 00:02:17,110
talk but those things didn't work so

55
00:02:16,330 --> 00:02:20,019
well for me

56
00:02:17,110 --> 00:02:22,510
they still got caught so I went into to

57
00:02:20,019 --> 00:02:23,769
kind of see how I can improve those so

58
00:02:22,510 --> 00:02:26,649
things aren't already out there cobalt

59
00:02:23,769 --> 00:02:29,050
strike which I use a lot for doing

60
00:02:26,650 --> 00:02:30,940
threat emulation it's got one of the

61
00:02:29,050 --> 00:02:33,160
things that I need in it and it has

62
00:02:30,940 --> 00:02:34,540
worden Excel macros but it doesn't

63
00:02:33,160 --> 00:02:38,109
really do much for obfuscation it's

64
00:02:34,540 --> 00:02:39,640
really easily caught it so I started

65
00:02:38,110 --> 00:02:42,370
looking some other stuff Metasploit has

66
00:02:39,640 --> 00:02:45,220
office macros also pretty easily caught

67
00:02:42,370 --> 00:02:47,980
Empire so props to those guys they have

68
00:02:45,220 --> 00:02:51,280
a payload that works on Mac office so

69
00:02:47,980 --> 00:02:53,890
that didn't really seem to get a lot of

70
00:02:51,280 --> 00:02:55,690
detection from the Mac stuff that I was

71
00:02:53,890 --> 00:02:59,048
playing with so if you guys are looking

72
00:02:55,690 --> 00:03:00,700
at delivering malicious code to max

73
00:02:59,049 --> 00:03:02,590
that's worth checking out

74
00:03:00,700 --> 00:03:04,379
practice torch was one of the ones that

75
00:03:02,590 --> 00:03:06,940
I've had some success with in the past

76
00:03:04,379 --> 00:03:09,310
the way that cactus torch works is it

77
00:03:06,940 --> 00:03:12,040
instantiate SATCOM object inside office

78
00:03:09,310 --> 00:03:13,900
and then can run methods with that and

79
00:03:12,040 --> 00:03:16,090
there's a whole bunch more tactics at I

80
00:03:13,900 --> 00:03:17,859
Red Team if you guys want to see some of

81
00:03:16,090 --> 00:03:19,840
the other things from from history

82
00:03:17,859 --> 00:03:23,190
that's a good place to sort of start

83
00:03:19,840 --> 00:03:25,900
checking out so most of these techniques

84
00:03:23,190 --> 00:03:29,019
get caught or are just straight off

85
00:03:25,900 --> 00:03:30,400
blocked Microsoft also did some things

86
00:03:29,019 --> 00:03:32,349
earlier this year to make this a little

87
00:03:30,400 --> 00:03:33,910
bit harder you guys may have heard about

88
00:03:32,349 --> 00:03:36,280
things like including external

89
00:03:33,910 --> 00:03:39,099
stylesheets from remote places stuff

90
00:03:36,280 --> 00:03:41,160
like that those office patches um went

91
00:03:39,099 --> 00:03:43,090
ahead and and took some of those away

92
00:03:41,160 --> 00:03:45,130
defender like I said is getting much

93
00:03:43,090 --> 00:03:47,530
better at these Symantec and McAfee

94
00:03:45,130 --> 00:03:50,319
haven't as much in my experience from

95
00:03:47,530 --> 00:03:51,700
the plane that I've been doing but I are

96
00:03:50,319 --> 00:03:53,319
when they're start looking through the

97
00:03:51,700 --> 00:03:55,720
actual macro code can spot these as

98
00:03:53,319 --> 00:03:58,179
malicious pretty quickly we're going to

99
00:03:55,720 --> 00:03:59,769
be looking a lot at VBA to kind of do

100
00:03:58,180 --> 00:04:01,299
some of the triage for this as we look

101
00:03:59,769 --> 00:04:05,049
to see how well some things are working

102
00:04:01,299 --> 00:04:07,569
and Oh a VBA is a tool that will allow

103
00:04:05,049 --> 00:04:09,370
you to take the macro code out and

104
00:04:07,569 --> 00:04:12,399
display it and also does some basic

105
00:04:09,370 --> 00:04:14,590
analytics on it to show you things that

106
00:04:12,400 --> 00:04:15,510
might trip is suspicious or that sort of

107
00:04:14,590 --> 00:04:19,660
thing

108
00:04:15,510 --> 00:04:22,000
there's also macro stomping so macro

109
00:04:19,660 --> 00:04:24,729
exists in office documents in two forms

110
00:04:22,000 --> 00:04:27,550
one is a sort of pseudo compiled P code

111
00:04:24,729 --> 00:04:30,250
and the other is the actual text macro

112
00:04:27,550 --> 00:04:32,199
if you create a macro and a version of

113
00:04:30,250 --> 00:04:34,810
office and the exact same version of

114
00:04:32,199 --> 00:04:36,699
office opens it then it can just use

115
00:04:34,810 --> 00:04:38,620
that pre compiled code in order to

116
00:04:36,699 --> 00:04:41,009
execute it which means you can just yank

117
00:04:38,620 --> 00:04:43,180
all that like text from the macro out

118
00:04:41,009 --> 00:04:44,500
but if it's not the same version that

119
00:04:43,180 --> 00:04:46,300
doesn't work so I'm big enough

120
00:04:44,500 --> 00:04:48,250
organizations you're gonna have version

121
00:04:46,300 --> 00:04:49,930
differences and so how do you tell like

122
00:04:48,250 --> 00:04:52,870
the specific person that you're going

123
00:04:49,930 --> 00:04:54,970
after what they're dealing with and also

124
00:04:52,870 --> 00:04:56,470
people with even in basic EDR are

125
00:04:54,970 --> 00:04:58,629
looking for things like PowerShell

126
00:04:56,470 --> 00:05:00,099
spawning from strange places and stuff

127
00:04:58,629 --> 00:05:01,270
like that so wanting to look at how we

128
00:05:00,099 --> 00:05:05,740
could maybe get around some of those

129
00:05:01,270 --> 00:05:07,960
things so we have some tools so we're

130
00:05:05,740 --> 00:05:09,550
gonna to do stuff with that before I get

131
00:05:07,960 --> 00:05:10,840
started just to figure out how deep I

132
00:05:09,550 --> 00:05:14,800
want to go and how many people here have

133
00:05:10,840 --> 00:05:15,340
created I'm always just macro before ok

134
00:05:14,800 --> 00:05:16,900
good

135
00:05:15,340 --> 00:05:18,489
so there's there's a number of people to

136
00:05:16,900 --> 00:05:21,190
have I'll try to go quickly through this

137
00:05:18,490 --> 00:05:23,169
and then if people have questions

138
00:05:21,190 --> 00:05:25,360
specifically about it we'll cover some

139
00:05:23,169 --> 00:05:27,039
more that at the end so even with some

140
00:05:25,360 --> 00:05:30,039
basic obfuscation most of the macros

141
00:05:27,039 --> 00:05:32,740
that I've seen have been huge so just a

142
00:05:30,039 --> 00:05:34,779
basic cursory IR look it's like okay

143
00:05:32,740 --> 00:05:37,779
that's a whole lot of data that's really

144
00:05:34,779 --> 00:05:39,610
strange so the things that I found

145
00:05:37,779 --> 00:05:41,440
worked the best were or cactus storage

146
00:05:39,610 --> 00:05:45,789
but the default macro is detected by

147
00:05:41,440 --> 00:05:47,050
pretty much everything and so that was

148
00:05:45,789 --> 00:05:50,259
kind of my starting point I wanted to

149
00:05:47,050 --> 00:05:52,360
see what I could do to to improve that

150
00:05:50,259 --> 00:05:54,610
so first don't and to go ahead and say

151
00:05:52,360 --> 00:05:58,569
thanks to some people who kind of have

152
00:05:54,610 --> 00:06:00,009
paved the way for a lot of this so Drew

153
00:05:58,569 --> 00:06:01,990
Bostrom sort of showed me how to combine

154
00:06:00,009 --> 00:06:02,919
some of the beginning pieces of this and

155
00:06:01,990 --> 00:06:06,310
that was pretty cool

156
00:06:02,919 --> 00:06:08,969
so the cactus torch developers MD sec

157
00:06:06,310 --> 00:06:11,349
and a lot of the people on the screen

158
00:06:08,969 --> 00:06:13,300
contributed like lots of things to this

159
00:06:11,349 --> 00:06:15,520
that are really great projects to look

160
00:06:13,300 --> 00:06:17,199
at and they can be incorporated in a lot

161
00:06:15,520 --> 00:06:20,650
of other things so if you guys have a

162
00:06:17,199 --> 00:06:22,419
chance definitely check out this these

163
00:06:20,650 --> 00:06:24,099
resources because these are resources

164
00:06:22,419 --> 00:06:26,590
that I was reading to figure out what I

165
00:06:24,099 --> 00:06:28,330
wanted to do and hopefully if you guys

166
00:06:26,590 --> 00:06:30,789
decide that this is neat and you want to

167
00:06:28,330 --> 00:06:32,620
pick up and do more things with it then

168
00:06:30,789 --> 00:06:35,500
these are things that will become really

169
00:06:32,620 --> 00:06:38,380
handy later so first I'm going to just

170
00:06:35,500 --> 00:06:41,139
kind of show what cactus torch does on

171
00:06:38,380 --> 00:06:43,629
its own so basically

172
00:06:41,139 --> 00:06:45,999
you use the empty second active breech

173
00:06:43,629 --> 00:06:52,360
cactus torch repo you clone it out and

174
00:06:45,999 --> 00:06:54,159
then in cobalt strike um it has a module

175
00:06:52,360 --> 00:06:56,319
that you can load that will allow you to

176
00:06:54,159 --> 00:07:01,120
just automatically create the macros so

177
00:06:56,319 --> 00:07:04,060
we'll go ahead and load that up and when

178
00:07:01,120 --> 00:07:07,270
you do when you come under the attacks

179
00:07:04,060 --> 00:07:10,810
one of the things in there is host

180
00:07:07,270 --> 00:07:12,039
cactus stores payload so with the host

181
00:07:10,810 --> 00:07:13,659
cactus stores payload you've got a

182
00:07:12,039 --> 00:07:16,090
couple of options you can use a staged

183
00:07:13,659 --> 00:07:17,650
or staged list payload binary that

184
00:07:16,090 --> 00:07:19,359
you'll spawn and you can pick a language

185
00:07:17,650 --> 00:07:21,789
so you can actually do more than just

186
00:07:19,360 --> 00:07:23,860
visual basic with these you can actually

187
00:07:21,789 --> 00:07:25,419
do jscript and a lot of other stuff and

188
00:07:23,860 --> 00:07:27,129
when you launch it copies it to the

189
00:07:25,419 --> 00:07:29,740
clipboard and you can paste it so this

190
00:07:27,129 --> 00:07:30,849
can also be used in HTA files and all

191
00:07:29,740 --> 00:07:33,219
sorts of other things with these

192
00:07:30,849 --> 00:07:35,378
languages since I'm focusing primarily

193
00:07:33,219 --> 00:07:37,479
on Office documents mine's gonna be a

194
00:07:35,379 --> 00:07:39,939
little bit different so from here we

195
00:07:37,479 --> 00:07:43,330
basically create our macro so we go into

196
00:07:39,939 --> 00:07:45,339
review macros and we create a new macro

197
00:07:43,330 --> 00:07:47,560
name one thing to be careful of is this

198
00:07:45,339 --> 00:07:49,539
pulldown box has a couple of different

199
00:07:47,560 --> 00:07:51,969
options the one down at the bottom is

200
00:07:49,539 --> 00:07:53,919
just your document you'll have a bad

201
00:07:51,969 --> 00:07:57,639
time if you accidentally put your macro

202
00:07:53,919 --> 00:07:59,318
in all templates not from experience or

203
00:07:57,639 --> 00:08:01,089
anything but when every document you

204
00:07:59,319 --> 00:08:06,759
create gets flagged as malware that's

205
00:08:01,089 --> 00:08:08,500
like uh-huh so anyway basically from

206
00:08:06,759 --> 00:08:10,899
from here you can see that there's all

207
00:08:08,500 --> 00:08:13,599
of this code that is in here and then

208
00:08:10,899 --> 00:08:15,699
down at the bottom there's the actual

209
00:08:13,599 --> 00:08:17,438
pieces that execute this but anybody

210
00:08:15,699 --> 00:08:19,779
that's looking at this see see realized

211
00:08:17,439 --> 00:08:22,240
object all of this hex code a whole

212
00:08:19,779 --> 00:08:24,759
bunch of base64 code and wait they're

213
00:08:22,240 --> 00:08:25,779
gonna go well that's kind of weird so

214
00:08:24,759 --> 00:08:28,990
here what we've got is we've got a

215
00:08:25,779 --> 00:08:30,939
sterilized object or deserializing it

216
00:08:28,990 --> 00:08:33,099
and then invoking the comm object and

217
00:08:30,939 --> 00:08:34,599
down here we see this ODOT flame that is

218
00:08:33,099 --> 00:08:37,000
the thing that actually spawns the code

219
00:08:34,599 --> 00:08:39,820
we've also got three different open

220
00:08:37,000 --> 00:08:43,179
functions excel can use two different

221
00:08:39,820 --> 00:08:44,769
ones and word can use one so it just

222
00:08:43,179 --> 00:08:46,899
puts them all in to cover all of your

223
00:08:44,769 --> 00:08:50,350
bases so what we're gonna do is we're

224
00:08:46,899 --> 00:08:53,380
going to save this as a doc 97 document

225
00:08:50,350 --> 00:08:54,670
the reason is docx and docx M's are XML

226
00:08:53,380 --> 00:08:56,590
files and things can look into

227
00:08:54,670 --> 00:08:59,170
them a little bit more easily straight

228
00:08:56,590 --> 00:09:01,090
up doc files um they they can't so you

229
00:08:59,170 --> 00:09:03,729
can still pull the macros out but they

230
00:09:01,090 --> 00:09:05,350
have a little bit better evasion so what

231
00:09:03,730 --> 00:09:07,720
we're gonna do now is let's take a look

232
00:09:05,350 --> 00:09:10,150
at what le VBA produces for this

233
00:09:07,720 --> 00:09:14,050
so we've saved this document as a docx

234
00:09:10,150 --> 00:09:16,000
97 format and my superior typing skills

235
00:09:14,050 --> 00:09:19,270
that I even sped up and is still

236
00:09:16,000 --> 00:09:21,100
horrible so when we look at this demo

237
00:09:19,270 --> 00:09:22,480
document what we're gonna see is it

238
00:09:21,100 --> 00:09:24,670
thinks for a minute and then we're just

239
00:09:22,480 --> 00:09:27,220
gonna see pages and pages and pages of

240
00:09:24,670 --> 00:09:29,709
stuff that's funny so we see here all of

241
00:09:27,220 --> 00:09:33,670
these base64 strings flagged it as dry

242
00:09:29,710 --> 00:09:36,370
decks malware we see all of the stuff

243
00:09:33,670 --> 00:09:39,099
that is obviously like information from

244
00:09:36,370 --> 00:09:41,320
Windows executables all the deals it's

245
00:09:39,100 --> 00:09:43,120
importing and so it'd be hard as a

246
00:09:41,320 --> 00:09:47,320
malware analyst to look at this and not

247
00:09:43,120 --> 00:09:49,330
go dots malware and so this is sort of

248
00:09:47,320 --> 00:09:54,160
where we we started with the initial

249
00:09:49,330 --> 00:09:56,320
version and so you know what does happen

250
00:09:54,160 --> 00:09:59,380
though is in this case antivirus is off

251
00:09:56,320 --> 00:10:00,700
we see all of these and one of the other

252
00:09:59,380 --> 00:10:02,920
things like I said with the three auto

253
00:10:00,700 --> 00:10:05,200
runs all three get flagged when we run

254
00:10:02,920 --> 00:10:07,870
the auto run as if we opened it um we do

255
00:10:05,200 --> 00:10:10,450
get a shell so we didn't have a shell

256
00:10:07,870 --> 00:10:15,370
before we ran it and now we have a shell

257
00:10:10,450 --> 00:10:16,690
shells but defender would catch this the

258
00:10:15,370 --> 00:10:18,460
bad part is the defender catches it

259
00:10:16,690 --> 00:10:20,770
afterwards so you still get an alert but

260
00:10:18,460 --> 00:10:25,750
it actually does still fire which is

261
00:10:20,770 --> 00:10:27,310
kind of interesting but so that was that

262
00:10:25,750 --> 00:10:28,960
was a surprising because I saw the

263
00:10:27,310 --> 00:10:32,199
antivirus pop-ups but it did actually

264
00:10:28,960 --> 00:10:33,820
work so from here I wanted to figure out

265
00:10:32,200 --> 00:10:35,860
what can I do to make this more

266
00:10:33,820 --> 00:10:37,240
interesting and so there are a couple

267
00:10:35,860 --> 00:10:39,790
different interesting places to hide

268
00:10:37,240 --> 00:10:42,490
your code metadata but metadata can be

269
00:10:39,790 --> 00:10:45,699
seen through the GUI and it also has

270
00:10:42,490 --> 00:10:46,900
some limited space there the image alt

271
00:10:45,700 --> 00:10:48,820
tags I thought that was kind of

272
00:10:46,900 --> 00:10:51,970
interesting but each image alt tag can

273
00:10:48,820 --> 00:10:53,470
only have 255 characters it's hard like

274
00:10:51,970 --> 00:10:54,940
unless you're mousing over the images

275
00:10:53,470 --> 00:10:56,770
and if you hide all the images that

276
00:10:54,940 --> 00:10:58,510
nobody's probably going to see it so

277
00:10:56,770 --> 00:10:59,920
that's a possibility the images stay

278
00:10:58,510 --> 00:11:02,710
numbered so you can just iterate through

279
00:10:59,920 --> 00:11:06,329
a list and put it back together but I'm

280
00:11:02,710 --> 00:11:08,110
lazy so there's a better way and so

281
00:11:06,330 --> 00:11:09,459
document text was

282
00:11:08,110 --> 00:11:11,230
another option is you can hide the

283
00:11:09,459 --> 00:11:14,170
document text but if you convert it to

284
00:11:11,230 --> 00:11:16,480
text it's all still there and I would I

285
00:11:14,170 --> 00:11:17,860
love my blue team partners but I would

286
00:11:16,480 --> 00:11:21,100
like to make it a little bit more

287
00:11:17,860 --> 00:11:22,870
difficult for them so document variables

288
00:11:21,100 --> 00:11:24,640
are interesting when most people think

289
00:11:22,870 --> 00:11:27,970
document variables they think document

290
00:11:24,640 --> 00:11:30,040
metadata and document variables are a

291
00:11:27,970 --> 00:11:33,070
little bit different document variables

292
00:11:30,040 --> 00:11:35,050
are designed specifically for macros to

293
00:11:33,070 --> 00:11:37,510
use for temporary storage and where

294
00:11:35,050 --> 00:11:39,399
documents they only exist in Word as far

295
00:11:37,510 --> 00:11:41,050
as far as the product family goes but

296
00:11:39,399 --> 00:11:44,709
they can only really be accessed either

297
00:11:41,050 --> 00:11:49,719
through the XML or through through

298
00:11:44,709 --> 00:11:51,699
programmatically and so saving to non

299
00:11:49,720 --> 00:11:53,350
word formats completely strips these

300
00:11:51,700 --> 00:11:55,839
document variables and there's not

301
00:11:53,350 --> 00:11:57,760
another easy way to get them out so just

302
00:11:55,839 --> 00:11:59,260
the XML and I'll look at some of the XML

303
00:11:57,760 --> 00:12:00,939
with you guys at the end to kind of look

304
00:11:59,260 --> 00:12:03,610
at what that looks like it's really the

305
00:12:00,940 --> 00:12:07,450
only way to kind of figure this out so

306
00:12:03,610 --> 00:12:11,170
um my super creative self decided I try

307
00:12:07,450 --> 00:12:12,760
to create something new and my genius

308
00:12:11,170 --> 00:12:15,969
naming scheme was better Torchic as it

309
00:12:12,760 --> 00:12:18,939
was better obviously that's not where I

310
00:12:15,970 --> 00:12:21,310
spent most of my energy on this but I

311
00:12:18,940 --> 00:12:23,380
wanted to make the cobalt strike payload

312
00:12:21,310 --> 00:12:25,599
work a little bit easier there were some

313
00:12:23,380 --> 00:12:27,730
other things that I wanted to do as well

314
00:12:25,600 --> 00:12:29,410
so I wanted to have some additional

315
00:12:27,730 --> 00:12:32,560
injection methods for the common object

316
00:12:29,410 --> 00:12:35,620
um by switching it up a little bit it

317
00:12:32,560 --> 00:12:37,750
makes it harder for for things to detect

318
00:12:35,620 --> 00:12:39,940
it as new injection methods come out we

319
00:12:37,750 --> 00:12:42,880
can add them in and easily support it

320
00:12:39,940 --> 00:12:44,890
with this it also includes check please

321
00:12:42,880 --> 00:12:46,870
which is another kind of interesting

322
00:12:44,890 --> 00:12:50,350
project that you can just pop into your

323
00:12:46,870 --> 00:12:52,029
your a c-sharp projects and it can check

324
00:12:50,350 --> 00:12:53,649
to see if the domain it's running on

325
00:12:52,029 --> 00:12:55,959
matches the one you expect if it's the

326
00:12:53,649 --> 00:12:57,399
main joint at all and just saying is two

327
00:12:55,959 --> 00:12:59,130
main joined at all is enough to stop

328
00:12:57,399 --> 00:13:01,930
execution and a lot of the sandboxes

329
00:12:59,130 --> 00:13:05,649
because most of them aren't to me and

330
00:13:01,930 --> 00:13:08,589
joined and so one of the other things

331
00:13:05,649 --> 00:13:11,199
was cactus torch only supported dotnet

332
00:13:08,589 --> 00:13:13,269
3.5 I started running into a lot more

333
00:13:11,199 --> 00:13:16,810
places where people had Windows 10 with

334
00:13:13,269 --> 00:13:20,079
just dotnet version 4 and so this

335
00:13:16,810 --> 00:13:21,459
supports dotnet for and dotnet version

336
00:13:20,079 --> 00:13:25,270
3.5

337
00:13:21,460 --> 00:13:30,279
so let's take a little look at what that

338
00:13:25,270 --> 00:13:33,750
looks like at this point so for this guy

339
00:13:30,279 --> 00:13:37,450
um basically it's similar we have a

340
00:13:33,750 --> 00:13:39,250
cobalt strike payload or module for this

341
00:13:37,450 --> 00:13:40,660
we'll go ahead and host a better torch

342
00:13:39,250 --> 00:13:43,060
payload one of the things you'll notice

343
00:13:40,660 --> 00:13:46,300
is there's a lot more options so we

344
00:13:43,060 --> 00:13:49,000
actually have multiple ways to inject

345
00:13:46,300 --> 00:13:50,680
our code and so for this one we're gonna

346
00:13:49,000 --> 00:13:53,589
use launch and inject we're gonna inject

347
00:13:50,680 --> 00:13:55,630
the code into run DLL 32 you can inject

348
00:13:53,589 --> 00:13:57,190
it into pretty much any process it'll

349
00:13:55,630 --> 00:14:00,850
take both a short name which it'll look

350
00:13:57,190 --> 00:14:03,339
in sis while 64 as well as system 32 and

351
00:14:00,850 --> 00:14:04,570
it also has Word and Excel support and

352
00:14:03,339 --> 00:14:06,399
we'll go over the excel support in a

353
00:14:04,570 --> 00:14:07,990
minute but you can easily just click the

354
00:14:06,399 --> 00:14:12,160
check boxes to do the things you want

355
00:14:07,990 --> 00:14:14,649
for evasion so at this point this has a

356
00:14:12,160 --> 00:14:16,510
couple extra steps from the basic cactus

357
00:14:14,649 --> 00:14:21,580
torch payload so I'm going to load up

358
00:14:16,510 --> 00:14:24,010
word and from here create my document

359
00:14:21,580 --> 00:14:26,110
and go into my macros so same thing

360
00:14:24,010 --> 00:14:28,990
remember to put your macros in the right

361
00:14:26,110 --> 00:14:30,220
place or you'll have a bad time or

362
00:14:28,990 --> 00:14:32,890
you'll spawn a lot of shells that you

363
00:14:30,220 --> 00:14:34,720
didn't intend to and so from here we

364
00:14:32,890 --> 00:14:38,050
just pasted over the junk that's there

365
00:14:34,720 --> 00:14:40,330
so you'll notice as we look through here

366
00:14:38,050 --> 00:14:43,120
there's a couple things one is I am

367
00:14:40,330 --> 00:14:44,410
adding an additional reference here that

368
00:14:43,120 --> 00:14:47,170
additional reference is the Microsoft

369
00:14:44,410 --> 00:14:52,569
scripting library and that's because I

370
00:14:47,170 --> 00:14:54,640
wanted to use hashes in this and it

371
00:14:52,570 --> 00:14:57,130
doesn't natively support hashes and I'm

372
00:14:54,640 --> 00:14:59,080
lazy so by adding that there is hash

373
00:14:57,130 --> 00:15:02,350
support now so basically there's two

374
00:14:59,080 --> 00:15:06,160
functions here we still see all of this

375
00:15:02,350 --> 00:15:08,800
huge code but the two functions that

376
00:15:06,160 --> 00:15:11,290
exist now are a renaming and a delete me

377
00:15:08,800 --> 00:15:14,290
setup so when we come here and we run

378
00:15:11,290 --> 00:15:18,550
this delete me setup then that sets up

379
00:15:14,290 --> 00:15:20,290
the document and here we basically

380
00:15:18,550 --> 00:15:23,380
delete everything but the autorun that

381
00:15:20,290 --> 00:15:25,449
we want and delete the old function name

382
00:15:23,380 --> 00:15:30,010
and so we're going to just go ahead and

383
00:15:25,450 --> 00:15:31,329
call this one auto run and from here we

384
00:15:30,010 --> 00:15:33,279
can go back in and just delete that

385
00:15:31,329 --> 00:15:35,800
delete me setup so it now just has one

386
00:15:33,279 --> 00:15:39,129
thing that surfaced which is that auto

387
00:15:35,800 --> 00:15:42,910
and let's take a look at what that looks

388
00:15:39,129 --> 00:15:44,619
like in the OEB ba in just a second

389
00:15:42,910 --> 00:15:50,350
first we're still going to save it as a

390
00:15:44,619 --> 00:15:51,550
word 97 format and so there's word 97

391
00:15:50,350 --> 00:15:53,079
format like I said it makes it a little

392
00:15:51,550 --> 00:15:57,670
bit harder to detect and we're gonna

393
00:15:53,079 --> 00:16:03,519
call this one better word and so for

394
00:15:57,670 --> 00:16:05,679
this guy let's verify that our antivirus

395
00:16:03,519 --> 00:16:07,720
is active so I'm not submitting this to

396
00:16:05,679 --> 00:16:09,519
the cloud because like I don't like

397
00:16:07,720 --> 00:16:13,720
punching myself in the face but

398
00:16:09,519 --> 00:16:15,459
antivirus is on I also highly suggest

399
00:16:13,720 --> 00:16:18,069
double check the submit to the cloud

400
00:16:15,459 --> 00:16:21,040
thing is off before you start developing

401
00:16:18,069 --> 00:16:23,290
payloads because definitely don't want

402
00:16:21,040 --> 00:16:26,738
somebody to beat you to your talk so

403
00:16:23,290 --> 00:16:28,719
when we run a EVB a on this what we're

404
00:16:26,739 --> 00:16:30,910
gonna see is this is a lot shorter we're

405
00:16:28,720 --> 00:16:33,549
down to basically two methods and

406
00:16:30,910 --> 00:16:35,949
instead of pages and pages and pages of

407
00:16:33,549 --> 00:16:40,660
code that's all the code that exists so

408
00:16:35,949 --> 00:16:44,319
we went from over 30,000 lines of code

409
00:16:40,660 --> 00:16:50,829
down to a couple hundred and now when we

410
00:16:44,319 --> 00:16:53,139
open this right now in the shell and we

411
00:16:50,829 --> 00:16:55,599
can open the document and then hopefully

412
00:16:53,139 --> 00:16:58,420
we'll get a shell I recorded this to

413
00:16:55,600 --> 00:16:59,920
make it faster so we'll see so here's

414
00:16:58,420 --> 00:17:01,959
where all of the social engineering

415
00:16:59,920 --> 00:17:03,939
pieces come in so the other piece is at

416
00:17:01,959 --> 00:17:05,948
this point we've got the shell I don't

417
00:17:03,939 --> 00:17:07,359
recommend doing the autorun one of the

418
00:17:05,949 --> 00:17:10,360
things that I have found pretty

419
00:17:07,359 --> 00:17:12,428
effective is form submissions you can

420
00:17:10,359 --> 00:17:15,729
create fake forms and office documents

421
00:17:12,429 --> 00:17:18,880
for like when a free goat or whatever

422
00:17:15,730 --> 00:17:20,589
and then when people have submit to

423
00:17:18,880 --> 00:17:23,889
submit their information because he

424
00:17:20,589 --> 00:17:26,730
doesn't want a free goat then you'll pop

425
00:17:23,888 --> 00:17:29,350
your shell and also because typically

426
00:17:26,730 --> 00:17:32,500
the automatic analysis frameworks don't

427
00:17:29,350 --> 00:17:33,939
request those sort of things then you

428
00:17:32,500 --> 00:17:39,149
also have a little bit better chance of

429
00:17:33,940 --> 00:17:42,639
doing a bayesian through that as well so

430
00:17:39,149 --> 00:17:45,340
next thing Excel documents Excel

431
00:17:42,639 --> 00:17:46,899
documents created a challenge because

432
00:17:45,340 --> 00:17:49,879
they don't have those document variables

433
00:17:46,899 --> 00:17:51,739
but I wanted to to do some of the

434
00:17:49,880 --> 00:17:54,920
same things so it came back to kind of

435
00:17:51,740 --> 00:17:57,290
that same basic set of things and sheet

436
00:17:54,920 --> 00:17:59,270
text had some additional pieces we're

437
00:17:57,290 --> 00:18:01,600
gonna go into that in a second but I

438
00:17:59,270 --> 00:18:04,010
could put most of the stuff in

439
00:18:01,600 --> 00:18:06,350
spreadsheets and then combine it later

440
00:18:04,010 --> 00:18:08,990
and while people can still export this

441
00:18:06,350 --> 00:18:12,949
to CSV and get all that data we can make

442
00:18:08,990 --> 00:18:19,130
it a little bit more of a pain but Excel

443
00:18:12,950 --> 00:18:21,860
has um some interesting things one is it

444
00:18:19,130 --> 00:18:24,800
decided that two states weren't enough

445
00:18:21,860 --> 00:18:27,139
for our spreadsheet it can be visible or

446
00:18:24,800 --> 00:18:29,450
hidden but it can also be very hidden

447
00:18:27,140 --> 00:18:32,180
and the very hidden

448
00:18:29,450 --> 00:18:34,400
you can't unhide through the GUI you can

449
00:18:32,180 --> 00:18:36,620
only hide through modifying the document

450
00:18:34,400 --> 00:18:38,870
properties where the hidden you can

451
00:18:36,620 --> 00:18:41,830
unhide on your own so we're gonna use

452
00:18:38,870 --> 00:18:44,770
the bury hidden and make it very hidden

453
00:18:41,830 --> 00:18:48,350
the only downside is is it only supports

454
00:18:44,770 --> 00:18:52,100
32k porcell and it also has some quirks

455
00:18:48,350 --> 00:18:54,919
the quirks are it will try to auto

456
00:18:52,100 --> 00:18:56,810
figure out even if you tell it what

457
00:18:54,920 --> 00:18:59,600
format something should be if it starts

458
00:18:56,810 --> 00:19:02,600
with a math character um what it should

459
00:18:59,600 --> 00:19:04,760
do and so we're using base64 which has

460
00:19:02,600 --> 00:19:07,370
math characters in it so if it starts

461
00:19:04,760 --> 00:19:10,910
with a slash or a plus sign or an equal

462
00:19:07,370 --> 00:19:12,370
sign it's gonna get weird so you kind of

463
00:19:10,910 --> 00:19:15,860
basically just have to move those around

464
00:19:12,370 --> 00:19:17,449
your your boundaries too to get it but

465
00:19:15,860 --> 00:19:20,600
other than that it's completely

466
00:19:17,450 --> 00:19:22,460
automatic so let's look at what we have

467
00:19:20,600 --> 00:19:23,959
to do for that and also kind of how that

468
00:19:22,460 --> 00:19:25,760
ends up playing out in the document so

469
00:19:23,960 --> 00:19:27,320
for here we have the same basic thing

470
00:19:25,760 --> 00:19:29,390
we're gonna host the cactus source

471
00:19:27,320 --> 00:19:30,860
payload again we're gonna choose the

472
00:19:29,390 --> 00:19:33,380
same basic things but the only thing

473
00:19:30,860 --> 00:19:34,399
that we're gonna choose different one is

474
00:19:33,380 --> 00:19:35,960
we're going to check to see if the

475
00:19:34,400 --> 00:19:38,690
systems being debugged and the others

476
00:19:35,960 --> 00:19:42,200
we're going to choose excel and so with

477
00:19:38,690 --> 00:19:46,400
that being done we can go into excel and

478
00:19:42,200 --> 00:19:50,390
we can do kind of the same thing so for

479
00:19:46,400 --> 00:19:53,810
excel you just go to macros same basic

480
00:19:50,390 --> 00:19:54,800
thing instead of going to the document

481
00:19:53,810 --> 00:19:57,790
in this case you just go to the

482
00:19:54,800 --> 00:20:00,590
worksheet and you paste all of that in

483
00:19:57,790 --> 00:20:03,409
so if you look it lands and the renaming

484
00:20:00,590 --> 00:20:05,209
from above or I won't run and

485
00:20:03,410 --> 00:20:08,240
delete me setup so if we just try to run

486
00:20:05,210 --> 00:20:09,710
it what we see is this error message and

487
00:20:08,240 --> 00:20:12,710
that's because the scripting dictionary

488
00:20:09,710 --> 00:20:14,840
didn't exist and so this is a reminder

489
00:20:12,710 --> 00:20:18,560
that if you see that just go back in and

490
00:20:14,840 --> 00:20:22,879
add back in the scripting runtime into

491
00:20:18,560 --> 00:20:24,800
the references and at that point

492
00:20:22,880 --> 00:20:29,180
everything will run so we go back to our

493
00:20:24,800 --> 00:20:31,250
deleteme setup and we run that and we

494
00:20:29,180 --> 00:20:33,230
saw on the left hand side that it

495
00:20:31,250 --> 00:20:35,540
created a new spreadsheet that new

496
00:20:33,230 --> 00:20:40,070
spreadsheet has a randomly named thing

497
00:20:35,540 --> 00:20:43,460
and if we go down to the bottom then it

498
00:20:40,070 --> 00:20:46,189
has the very hidden attribute so if we

499
00:20:43,460 --> 00:20:48,140
were to close this and take a look like

500
00:20:46,190 --> 00:20:49,700
there's no thing there for us to unhide

501
00:20:48,140 --> 00:20:52,340
we can right click there's no unhide

502
00:20:49,700 --> 00:20:54,410
options so basically it is something

503
00:20:52,340 --> 00:20:57,379
that we can't get to from the GUI if we

504
00:20:54,410 --> 00:20:59,090
go back into macros we see the two

505
00:20:57,380 --> 00:21:01,160
macros that we had we can delete me that

506
00:20:59,090 --> 00:21:03,010
we can delete the setup and we can go

507
00:21:01,160 --> 00:21:05,180
back into the macros and when we edit it

508
00:21:03,010 --> 00:21:06,440
we can go ahead and clean this up we're

509
00:21:05,180 --> 00:21:10,550
going to go ahead and make this an auto

510
00:21:06,440 --> 00:21:12,910
run for Excel and get rid of the rest of

511
00:21:10,550 --> 00:21:12,909
that trash

512
00:21:13,620 --> 00:21:17,489
and the other thing that we're gonna do

513
00:21:16,409 --> 00:21:19,140
is let's take a look at what's actually

514
00:21:17,490 --> 00:21:21,419
in that spreadsheet so when we change it

515
00:21:19,140 --> 00:21:25,230
from and this is for debugging it's good

516
00:21:21,419 --> 00:21:27,270
to know how to do from very hidden to

517
00:21:25,230 --> 00:21:29,760
invisible we saw it pop up immediately

518
00:21:27,270 --> 00:21:30,990
and so all of your text is here so if

519
00:21:29,760 --> 00:21:32,610
you want to make sure that all the

520
00:21:30,990 --> 00:21:34,980
things populate when you run the setup

521
00:21:32,610 --> 00:21:37,199
this is where you would go to do that

522
00:21:34,980 --> 00:21:39,059
and all you have to do to rehydrate it

523
00:21:37,200 --> 00:21:41,299
stick in and change it back to very

524
00:21:39,059 --> 00:21:41,299
hidden

525
00:21:45,440 --> 00:21:50,420
so as you can see a lot of the basic

526
00:21:48,530 --> 00:21:52,430
pieces are still there one of the things

527
00:21:50,420 --> 00:21:54,560
that is added here is there's an

528
00:21:52,430 --> 00:21:58,820
additional function and that additional

529
00:21:54,560 --> 00:22:00,649
function is that check please for this I

530
00:21:58,820 --> 00:22:04,010
want to into kind of to a little story

531
00:22:00,650 --> 00:22:05,090
so the class that I rename is - and you

532
00:22:04,010 --> 00:22:07,250
should rename your classes when you're

533
00:22:05,090 --> 00:22:08,959
doing this so that it can help with some

534
00:22:07,250 --> 00:22:11,090
of the evasion as the Mystery Machine

535
00:22:08,960 --> 00:22:13,460
and Velma's the smart one that stops

536
00:22:11,090 --> 00:22:15,320
things from running that shouldn't and

537
00:22:13,460 --> 00:22:16,940
if you take a look at the different code

538
00:22:15,320 --> 00:22:18,879
methods they also have some other names

539
00:22:16,940 --> 00:22:21,440
that are fairly appropriate for how they

540
00:22:18,880 --> 00:22:24,730
they react for instance scrappy will try

541
00:22:21,440 --> 00:22:28,940
to spawn a set of code in every thread

542
00:22:24,730 --> 00:22:30,830
so oae vba here we see that there's an

543
00:22:28,940 --> 00:22:33,530
additional thing we also see this hex

544
00:22:30,830 --> 00:22:35,929
strings so olee vba has an interesting

545
00:22:33,530 --> 00:22:38,389
thing where if it sees like four or more

546
00:22:35,930 --> 00:22:41,900
characters together in groups of two

547
00:22:38,390 --> 00:22:45,230
that are in a hex care set character set

548
00:22:41,900 --> 00:22:46,880
it will try to do that so you know

549
00:22:45,230 --> 00:22:48,140
randomized character strings you'll

550
00:22:46,880 --> 00:22:50,210
occasionally hit that you can just

551
00:22:48,140 --> 00:22:52,070
rename those variables if you want to so

552
00:22:50,210 --> 00:22:53,690
here when we run it this is with

553
00:22:52,070 --> 00:22:57,500
antivirus enabled again these were

554
00:22:53,690 --> 00:23:00,170
definitions from two days ago with

555
00:22:57,500 --> 00:23:04,640
Windows Defender and we have that shell

556
00:23:00,170 --> 00:23:06,830
and so we're gonna look at what the what

557
00:23:04,640 --> 00:23:08,840
Velma in this case does the check police

558
00:23:06,830 --> 00:23:10,220
code does for this in a minute that

559
00:23:08,840 --> 00:23:11,899
check police code like I said can be

560
00:23:10,220 --> 00:23:13,520
added to any other c-sharp application

561
00:23:11,900 --> 00:23:15,800
and it's just an easy plugin that you

562
00:23:13,520 --> 00:23:17,620
can add to be able to do some basic

563
00:23:15,800 --> 00:23:20,090
evasion to any of your c-sharp modules

564
00:23:17,620 --> 00:23:22,399
so if somebody starts trying to debug

565
00:23:20,090 --> 00:23:25,879
your code in a sandbox it just and won't

566
00:23:22,400 --> 00:23:28,790
go so some of the other things that I

567
00:23:25,880 --> 00:23:30,440
wanted to do was add some encryption and

568
00:23:28,790 --> 00:23:33,560
so some of the basic encryption things

569
00:23:30,440 --> 00:23:35,330
one of the problems that had was I added

570
00:23:33,560 --> 00:23:37,879
a lot to the footprint things like using

571
00:23:35,330 --> 00:23:41,210
CHR and XOR and all of those really

572
00:23:37,880 --> 00:23:46,270
added to OE VBA why am I still focused

573
00:23:41,210 --> 00:23:48,950
on oh le VBA it's just a tool for froze

574
00:23:46,270 --> 00:23:51,590
experiment of stuff that shows up in VBA

575
00:23:48,950 --> 00:23:53,690
I'll put had a direct correlation to my

576
00:23:51,590 --> 00:23:56,360
likelihood of getting caught now I don't

577
00:23:53,690 --> 00:23:58,400
know like why that is if it's just

578
00:23:56,360 --> 00:23:59,719
coincidence but

579
00:23:58,400 --> 00:24:02,360
what I found is that I started going

580
00:23:59,720 --> 00:24:03,830
through and doing more of this that the

581
00:24:02,360 --> 00:24:06,500
fewer things that I had in there the

582
00:24:03,830 --> 00:24:08,480
more likely I was to succeed so I can

583
00:24:06,500 --> 00:24:12,260
get it down to pretty much one thing and

584
00:24:08,480 --> 00:24:16,010
leave you vba output which is the create

585
00:24:12,260 --> 00:24:18,740
object create object on itself is not

586
00:24:16,010 --> 00:24:20,390
actually that bad a lot of things are

587
00:24:18,740 --> 00:24:22,100
done with create object and office

588
00:24:20,390 --> 00:24:24,980
including things like if you want to

589
00:24:22,100 --> 00:24:27,139
parse XML or do a web request or

590
00:24:24,980 --> 00:24:29,240
anything like that that office documents

591
00:24:27,140 --> 00:24:30,680
sometimes do especially in Excel where

592
00:24:29,240 --> 00:24:32,450
they may pull in from external sources

593
00:24:30,680 --> 00:24:34,760
and things like that those are pretty

594
00:24:32,450 --> 00:24:38,780
common so the create object itself isn't

595
00:24:34,760 --> 00:24:40,910
enough usually to trip anything so some

596
00:24:38,780 --> 00:24:43,180
of the other things just changing the

597
00:24:40,910 --> 00:24:46,520
SID in building in another platform is

598
00:24:43,180 --> 00:24:48,140
frequently enough to get you by a lot of

599
00:24:46,520 --> 00:24:50,990
the anti-viruses I started building a

600
00:24:48,140 --> 00:24:53,390
lot of my stuff in mono this project

601
00:24:50,990 --> 00:24:56,660
builds in mono for everything but dotnet

602
00:24:53,390 --> 00:24:59,870
3.5 under Kali I've had some weird

603
00:24:56,660 --> 00:25:02,240
things with dotnet 35 in Kali but done

604
00:24:59,870 --> 00:25:02,649
at four builds fine and so that was

605
00:25:02,240 --> 00:25:04,850
great

606
00:25:02,650 --> 00:25:07,460
modifying the com object changing the

607
00:25:04,850 --> 00:25:09,290
com objects name the method names the

608
00:25:07,460 --> 00:25:11,960
method need names can't be randomized

609
00:25:09,290 --> 00:25:15,170
for comm objects once you compile it

610
00:25:11,960 --> 00:25:16,880
they have to stay the same so you can

611
00:25:15,170 --> 00:25:18,440
make them random things but you have to

612
00:25:16,880 --> 00:25:20,090
modify all of your code to match those

613
00:25:18,440 --> 00:25:23,050
random things and you can't do it

614
00:25:20,090 --> 00:25:26,240
randomly for each instantiation

615
00:25:23,050 --> 00:25:28,129
obfuscate some more of the object so

616
00:25:26,240 --> 00:25:29,120
right now like I said it's in document

617
00:25:28,130 --> 00:25:30,530
variables I haven't seen anything

618
00:25:29,120 --> 00:25:31,639
pulling it out of document variables so

619
00:25:30,530 --> 00:25:33,530
I'm happy with it there for right now

620
00:25:31,640 --> 00:25:35,740
but some of the other things that I

621
00:25:33,530 --> 00:25:39,200
thought would be interesting are

622
00:25:35,740 --> 00:25:41,240
actually using images and things like

623
00:25:39,200 --> 00:25:43,160
that with code attached to the end of it

624
00:25:41,240 --> 00:25:45,140
in documents and then put some of those

625
00:25:43,160 --> 00:25:46,910
things back together or there was some

626
00:25:45,140 --> 00:25:49,280
interesting talks yesterday one of them

627
00:25:46,910 --> 00:25:50,690
was using manifests to load code and

628
00:25:49,280 --> 00:25:52,850
things like that so maybe even dropping

629
00:25:50,690 --> 00:25:55,070
a DLL out and then reloading another

630
00:25:52,850 --> 00:25:57,500
object with the deal well written out to

631
00:25:55,070 --> 00:26:01,129
the disk so it has a multi-part kind of

632
00:25:57,500 --> 00:26:04,340
staged thing also on the backend some of

633
00:26:01,130 --> 00:26:09,920
this is based off of sharpshooter which

634
00:26:04,340 --> 00:26:11,419
is another MD MD psych product that is

635
00:26:09,920 --> 00:26:13,039
really cool and if you haven't taken a

636
00:26:11,420 --> 00:26:15,049
look at sharps you

637
00:26:13,039 --> 00:26:16,760
I recommend doing that and so

638
00:26:15,049 --> 00:26:19,700
sharpshooter actually has the ability to

639
00:26:16,760 --> 00:26:21,470
do stage stuff through a lot of

640
00:26:19,700 --> 00:26:22,789
different other ways and so if you

641
00:26:21,470 --> 00:26:25,370
wanted to include some of those other

642
00:26:22,789 --> 00:26:27,140
things from sharpshooter in this most of

643
00:26:25,370 --> 00:26:28,969
the stuff that I do is staged 'less and

644
00:26:27,140 --> 00:26:30,890
so I didn't pay a lot of attention to

645
00:26:28,970 --> 00:26:32,149
the staged things but if you this was

646
00:26:30,890 --> 00:26:34,269
something that you wanted to add it

647
00:26:32,149 --> 00:26:36,799
should be easy to copy that code in and

648
00:26:34,269 --> 00:26:38,779
do some additional pieces one of the

649
00:26:36,799 --> 00:26:40,570
interesting things that I've seen from

650
00:26:38,779 --> 00:26:44,080
my forensics days is actually using

651
00:26:40,570 --> 00:26:46,428
cloud pieces to load some of those

652
00:26:44,080 --> 00:26:50,870
objects from the cloud and pull them

653
00:26:46,429 --> 00:26:53,480
directly in from from the cloud so let's

654
00:26:50,870 --> 00:27:02,418
take a look at what that evasion really

655
00:26:53,480 --> 00:27:04,460
looks like so for this basically what we

656
00:27:02,419 --> 00:27:07,010
do is we just select the thing that we

657
00:27:04,460 --> 00:27:10,340
want and we can select all of the things

658
00:27:07,010 --> 00:27:11,929
that we want to do so we're going to do

659
00:27:10,340 --> 00:27:13,820
check to see if the machine is domain

660
00:27:11,929 --> 00:27:15,260
joined and so we're gonna do word again

661
00:27:13,820 --> 00:27:18,980
and we're going to go through the base

662
00:27:15,260 --> 00:27:19,940
same basic thing but when we we get into

663
00:27:18,980 --> 00:27:22,820
the word document we're gonna take a

664
00:27:19,940 --> 00:27:23,990
look at the Velma function again and I'm

665
00:27:22,820 --> 00:27:27,200
gonna go through a little bit more about

666
00:27:23,990 --> 00:27:30,649
what some of this code actually does as

667
00:27:27,200 --> 00:27:35,990
far as like how it's actually running so

668
00:27:30,649 --> 00:27:37,489
we still need our scripting runtime and

669
00:27:35,990 --> 00:27:38,840
this is something that I'm probably

670
00:27:37,490 --> 00:27:40,190
going to get rid of at some point

671
00:27:38,840 --> 00:27:42,470
because it's a pain in about to click it

672
00:27:40,190 --> 00:27:46,190
every time but for right now it's the

673
00:27:42,470 --> 00:27:49,240
thing so when we do the delete be set up

674
00:27:46,190 --> 00:27:56,170
and we go back into our main function

675
00:27:49,240 --> 00:28:00,040
basically we'll get this renamed and

676
00:27:56,170 --> 00:28:04,150
so when we start looking at exactly what

677
00:28:00,040 --> 00:28:06,280
this guy does we see this additional

678
00:28:04,150 --> 00:28:08,290
function called Velma this down at the

679
00:28:06,280 --> 00:28:11,770
bottom and that bulma function basically

680
00:28:08,290 --> 00:28:13,360
when it runs if it fails it exits one of

681
00:28:11,770 --> 00:28:14,889
the other things that I want to do is to

682
00:28:13,360 --> 00:28:18,219
actually give it the ability to return a

683
00:28:14,890 --> 00:28:20,050
variable this is hopefully coming up in

684
00:28:18,220 --> 00:28:21,250
the next couple weeks so that you can

685
00:28:20,050 --> 00:28:22,540
actually get a return code from it and

686
00:28:21,250 --> 00:28:25,990
run two different types of macros

687
00:28:22,540 --> 00:28:28,659
depending on that state and also plan on

688
00:28:25,990 --> 00:28:30,280
adding some version detection for the

689
00:28:28,660 --> 00:28:31,720
version of Windows you're running so if

690
00:28:30,280 --> 00:28:33,610
it's something that's other than you

691
00:28:31,720 --> 00:28:38,020
expected so in this case when we ran it

692
00:28:33,610 --> 00:28:41,290
it just straight up exited um and when

693
00:28:38,020 --> 00:28:42,790
it's straight up exits obviously it

694
00:28:41,290 --> 00:28:44,230
crashed or something and most people

695
00:28:42,790 --> 00:28:46,899
won't think anything strange about it

696
00:28:44,230 --> 00:28:49,390
if word crashes then people usually

697
00:28:46,900 --> 00:28:50,620
don't worry their heads about it they're

698
00:28:49,390 --> 00:28:53,290
like well that thing's broken

699
00:28:50,620 --> 00:28:56,050
so I haven't had a lot of people

700
00:28:53,290 --> 00:28:58,960
complain about that so far but it also

701
00:28:56,050 --> 00:29:01,020
stops the debugging and it's tracks for

702
00:28:58,960 --> 00:29:06,910
what anything would happen in a sandbox

703
00:29:01,020 --> 00:29:08,889
and so from from there like I said you

704
00:29:06,910 --> 00:29:10,180
can actually stack these so if you want

705
00:29:08,890 --> 00:29:13,540
to have multiple of them you can include

706
00:29:10,180 --> 00:29:15,040
multiple of them and one of the other

707
00:29:13,540 --> 00:29:17,110
things that I've been thinking about

708
00:29:15,040 --> 00:29:18,879
adding that has been talked about by

709
00:29:17,110 --> 00:29:21,490
some other people as actually if you

710
00:29:18,880 --> 00:29:23,530
know the domain Sid that's even better

711
00:29:21,490 --> 00:29:24,850
than actually knowing the domain because

712
00:29:23,530 --> 00:29:26,379
if you can programmatically get the

713
00:29:24,850 --> 00:29:28,840
domain Sid and use that for your key

714
00:29:26,380 --> 00:29:30,600
that is much less likely to be emulated

715
00:29:28,840 --> 00:29:32,620
by any of the sandbox technologies

716
00:29:30,600 --> 00:29:34,120
because most of those will have their

717
00:29:32,620 --> 00:29:37,120
own separate domain and even if as the

718
00:29:34,120 --> 00:29:40,120
same name and won't have the same Sid so

719
00:29:37,120 --> 00:29:42,760
let's take a little bit look at how to

720
00:29:40,120 --> 00:29:44,290
build this yourself one of the things I

721
00:29:42,760 --> 00:29:46,060
wanted to do was make it as easy to do

722
00:29:44,290 --> 00:29:48,340
to modify and build in your own

723
00:29:46,060 --> 00:29:50,770
environment so that you can you can

724
00:29:48,340 --> 00:29:54,550
change some of these things and help

725
00:29:50,770 --> 00:29:57,480
with the evasion yourself so inside Kali

726
00:29:54,550 --> 00:30:00,970
I basically just clone the project and

727
00:29:57,480 --> 00:30:04,860
from here we have a couple things um the

728
00:30:00,970 --> 00:30:09,920
first one is this assembly to base 64 so

729
00:30:04,860 --> 00:30:11,959
for this guy assembly 2 base 64 has take

730
00:30:09,920 --> 00:30:13,970
part of the.net to jscript code and

731
00:30:11,960 --> 00:30:15,350
reworked it a little bit one of the

732
00:30:13,970 --> 00:30:16,850
things I wanted to be able to do is

733
00:30:15,350 --> 00:30:20,600
dotnet into J scripts does a lot of

734
00:30:16,850 --> 00:30:23,240
stuff I just wanted to take a assembly

735
00:30:20,600 --> 00:30:25,760
DLL and just pop it out in either hex or

736
00:30:23,240 --> 00:30:28,820
base64 so this guy what it does is you

737
00:30:25,760 --> 00:30:31,400
pass it a a DLL assembly or an

738
00:30:28,820 --> 00:30:33,919
executable it will serialize it into hex

739
00:30:31,400 --> 00:30:36,440
or base64 from Corporation whatever else

740
00:30:33,920 --> 00:30:38,270
you want so if you do the same kinds of

741
00:30:36,440 --> 00:30:40,250
things that that original cactus torch

742
00:30:38,270 --> 00:30:42,230
did and other stuff this makes it very

743
00:30:40,250 --> 00:30:44,540
quick and easy for you to be able to

744
00:30:42,230 --> 00:30:46,100
take whatever new DLL you want to do

745
00:30:44,540 --> 00:30:50,830
with whatever additional functionality

746
00:30:46,100 --> 00:30:50,830
incorporated in there and so from here

747
00:30:51,160 --> 00:30:54,670
wrong button

748
00:30:57,510 --> 00:31:03,550
so from here all that you have to do is

749
00:31:00,010 --> 00:31:06,100
use mono CSC and run it against the

750
00:31:03,550 --> 00:31:08,409
assembly to base64 and you end up with

751
00:31:06,100 --> 00:31:12,280
the Xing and so we can call that using

752
00:31:08,410 --> 00:31:13,810
mono against our actual payload so in

753
00:31:12,280 --> 00:31:16,660
the payload right now like I said this

754
00:31:13,810 --> 00:31:19,120
guy's mystery machine and if we look in

755
00:31:16,660 --> 00:31:22,030
the properties assembly about info or

756
00:31:19,120 --> 00:31:23,590
assembly info one of the things is like

757
00:31:22,030 --> 00:31:27,580
I said some of this was taken from a

758
00:31:23,590 --> 00:31:28,600
script and other stuff this has a gooood

759
00:31:27,580 --> 00:31:32,340
associated with it

760
00:31:28,600 --> 00:31:35,350
the gooood here is kind of interesting

761
00:31:32,340 --> 00:31:37,840
you have a couple of options one of them

762
00:31:35,350 --> 00:31:39,429
is to create your own gooood and each

763
00:31:37,840 --> 00:31:41,860
time you recompile it change that good

764
00:31:39,430 --> 00:31:43,720
so that if people are doing any kind of

765
00:31:41,860 --> 00:31:45,639
analytics just on the the gooood in

766
00:31:43,720 --> 00:31:47,500
order to block it then it won't be

767
00:31:45,640 --> 00:31:48,790
obvious but the other thing you can do

768
00:31:47,500 --> 00:31:51,580
is you can actually steal the gooood of

769
00:31:48,790 --> 00:31:53,129
things that have been abandoned there

770
00:31:51,580 --> 00:31:56,740
have been some interesting calm talks

771
00:31:53,130 --> 00:31:58,960
this year that I really appreciated and

772
00:31:56,740 --> 00:32:01,330
a couple of them have talks about calm

773
00:31:58,960 --> 00:32:02,830
hijacks so if you have a chance to look

774
00:32:01,330 --> 00:32:05,350
at some of the common hijack things a

775
00:32:02,830 --> 00:32:06,970
lot of the same GUI techniques will work

776
00:32:05,350 --> 00:32:08,649
with this what's interesting about this

777
00:32:06,970 --> 00:32:11,650
is this doesn't actually interact with

778
00:32:08,650 --> 00:32:13,420
the comm server particularly because

779
00:32:11,650 --> 00:32:15,340
it's instantiating out of memory it

780
00:32:13,420 --> 00:32:17,470
doesn't really care where that DLL is so

781
00:32:15,340 --> 00:32:20,560
you can do some other other things here

782
00:32:17,470 --> 00:32:22,300
that are are interesting so when we

783
00:32:20,560 --> 00:32:24,210
modify it and modify the gooood we can

784
00:32:22,300 --> 00:32:26,710
also modify all of the build information

785
00:32:24,210 --> 00:32:29,320
right now all the build information is

786
00:32:26,710 --> 00:32:31,990
stripped out so that having the same

787
00:32:29,320 --> 00:32:34,780
build information like author and all of

788
00:32:31,990 --> 00:32:36,610
that won't won't trip anything but you

789
00:32:34,780 --> 00:32:38,080
can add that back in and that will make

790
00:32:36,610 --> 00:32:45,070
it a little bit more realistic as well

791
00:32:38,080 --> 00:32:49,480
and so once we do that there is a build

792
00:32:45,070 --> 00:32:51,700
it SH and the build it SH will go ahead

793
00:32:49,480 --> 00:32:53,650
and build the assembly and it goes ahead

794
00:32:51,700 --> 00:32:58,090
and after it builds it copies it into

795
00:32:53,650 --> 00:32:59,590
the directory that you're in and so from

796
00:32:58,090 --> 00:33:02,830
here we see this Mystery Machine

797
00:32:59,590 --> 00:33:04,980
assembly for DLL and so we're gonna just

798
00:33:02,830 --> 00:33:08,169
copy it up a level because I'm lazy and

799
00:33:04,980 --> 00:33:09,870
we're going to use mono with that

800
00:33:08,170 --> 00:33:13,650
assembly to base 64

801
00:33:09,870 --> 00:33:17,610
um then and we're going to specify B for

802
00:33:13,650 --> 00:33:19,230
base64 output and the dll that we want

803
00:33:17,610 --> 00:33:21,689
to do and we'll just remove that

804
00:33:19,230 --> 00:33:24,450
redirect that into a file and so we look

805
00:33:21,690 --> 00:33:28,830
at that file all it is is like just

806
00:33:24,450 --> 00:33:30,570
straight-up base64 and so the reason I

807
00:33:28,830 --> 00:33:30,809
did it just straight base64 and nothing

808
00:33:30,570 --> 00:33:32,309
else

809
00:33:30,809 --> 00:33:35,670
is I want to just be able to include

810
00:33:32,309 --> 00:33:38,240
this file somewhere else so I do a lot

811
00:33:35,670 --> 00:33:40,170
of my development in them I'm sorry

812
00:33:38,240 --> 00:33:41,640
that also means that formatting

813
00:33:40,170 --> 00:33:42,870
sometimes a little bit weird so if

814
00:33:41,640 --> 00:33:47,670
you're reading my code I double

815
00:33:42,870 --> 00:33:52,350
apologize so for here we go to the

816
00:33:47,670 --> 00:33:55,440
dotnet type for payload and this was all

817
00:33:52,350 --> 00:33:57,540
in hex in cactus torques but I switched

818
00:33:55,440 --> 00:34:01,280
it all over to base64 so we delete the

819
00:33:57,540 --> 00:34:06,990
hex data and we can just read in that

820
00:34:01,280 --> 00:34:12,110
base64 file clean it up a little bit get

821
00:34:06,990 --> 00:34:14,219
rid of our spaces and save that out and

822
00:34:12,110 --> 00:34:16,110
then all that we have to do is go back

823
00:34:14,219 --> 00:34:19,589
into cactus torque or into a cobalt

824
00:34:16,110 --> 00:34:21,629
strike and reload that script so click

825
00:34:19,590 --> 00:34:26,399
on it reload if you don't get errors

826
00:34:21,629 --> 00:34:28,379
it's gonna be a good day so if you do

827
00:34:26,399 --> 00:34:30,899
get errors then go back and fix your

828
00:34:28,379 --> 00:34:32,790
spaces in your semicolons so at this

829
00:34:30,899 --> 00:34:34,918
point we just go back through the same

830
00:34:32,790 --> 00:34:37,320
basic thing and so you can I would

831
00:34:34,918 --> 00:34:40,049
update this for each campaign recompile

832
00:34:37,320 --> 00:34:42,179
change your your class type change or

833
00:34:40,050 --> 00:34:44,220
variable name or your method names and

834
00:34:42,179 --> 00:34:47,960
all of that for each campaign and you'll

835
00:34:44,219 --> 00:34:47,959
have a lot better success rate

836
00:34:48,239 --> 00:34:54,370
so looking ahead um I'm gonna go ahead

837
00:34:52,330 --> 00:34:56,350
and say I would love some additional

838
00:34:54,370 --> 00:34:57,549
collaboration with this I've been

839
00:34:56,350 --> 00:34:58,660
figuring out some of the stuff on my own

840
00:34:57,550 --> 00:35:01,390
some of the things that I would like to

841
00:34:58,660 --> 00:35:03,190
make work calm is kind of weird and I've

842
00:35:01,390 --> 00:35:05,170
not gotten as much success as I'd like

843
00:35:03,190 --> 00:35:09,070
so if you love building calm objects for

844
00:35:05,170 --> 00:35:11,980
fun I would love to talk to you I don't

845
00:35:09,070 --> 00:35:13,600
expect anybody come talk to me but if

846
00:35:11,980 --> 00:35:15,640
you do then that's that's awesome

847
00:35:13,600 --> 00:35:17,350
so I'm also looking at adding some

848
00:35:15,640 --> 00:35:18,970
additional methods and also doing some

849
00:35:17,350 --> 00:35:20,350
additional encryption helpers and

850
00:35:18,970 --> 00:35:22,839
finding some additional places to hide

851
00:35:20,350 --> 00:35:27,100
so I promised I would talk a little bit

852
00:35:22,840 --> 00:35:31,060
about the forensics here so for the

853
00:35:27,100 --> 00:35:33,370
forensics obviously the docx is nice for

854
00:35:31,060 --> 00:35:35,470
forensic Gators because you can just

855
00:35:33,370 --> 00:35:38,440
rename it from a docx to a zip and

856
00:35:35,470 --> 00:35:43,299
extract it if you convert the word 97

857
00:35:38,440 --> 00:35:45,190
doc to a modern word doc docx file then

858
00:35:43,300 --> 00:35:50,080
it does convert all the document

859
00:35:45,190 --> 00:35:51,340
variables into the XML format so you

860
00:35:50,080 --> 00:35:53,200
don't lose anything through that

861
00:35:51,340 --> 00:35:55,890
conversion so once you extract it

862
00:35:53,200 --> 00:36:00,040
there's the settings that XML file and

863
00:35:55,890 --> 00:36:02,680
inside the settings dot XML file you've

864
00:36:00,040 --> 00:36:05,230
got most of the stuff that is good if

865
00:36:02,680 --> 00:36:08,770
you look you'll actually see the doc var

866
00:36:05,230 --> 00:36:10,930
and all of those pieces so if you use an

867
00:36:08,770 --> 00:36:14,440
XML parser you can just pull out all the

868
00:36:10,930 --> 00:36:16,450
doc bars and do name value and then just

869
00:36:14,440 --> 00:36:21,820
substitute that back in for the macro

870
00:36:16,450 --> 00:36:24,220
and so for the the macro itself I'll

871
00:36:21,820 --> 00:36:26,230
pull that up in in just a second for the

872
00:36:24,220 --> 00:36:28,390
macro itself it's easy to see what those

873
00:36:26,230 --> 00:36:31,000
doctors are being set and so you can

874
00:36:28,390 --> 00:36:35,109
just go back and put those together back

875
00:36:31,000 --> 00:36:37,740
in that order off of the XML so me do

876
00:36:35,110 --> 00:36:37,740
that really quick

877
00:36:44,130 --> 00:36:47,229
[Music]

878
00:36:56,079 --> 00:36:59,939
so me generate a new one

879
00:37:23,380 --> 00:37:30,520
so when this guy actually puts

880
00:37:25,450 --> 00:37:33,450
everything back together oh I guess not

881
00:37:30,520 --> 00:37:33,450
thank you

882
00:37:38,680 --> 00:37:47,440
that's more better cool thank you so

883
00:37:45,850 --> 00:37:50,560
when this actually goes to put things

884
00:37:47,440 --> 00:37:52,180
back together this is the function that

885
00:37:50,560 --> 00:37:53,920
puts all of that code back together and

886
00:37:52,180 --> 00:37:55,890
so if you just take each one of these

887
00:37:53,920 --> 00:37:58,420
and substitute it in for the doc bars

888
00:37:55,890 --> 00:38:01,480
you'll end up back with the actual piece

889
00:37:58,420 --> 00:38:03,310
so all of the rest of these are pulling

890
00:38:01,480 --> 00:38:05,350
information back out from Doc VARs and

891
00:38:03,310 --> 00:38:08,049
from dictionaries and assigning them to

892
00:38:05,350 --> 00:38:11,560
things one of the other things that is

893
00:38:08,050 --> 00:38:15,100
in here that subsidy was talking about

894
00:38:11,560 --> 00:38:18,549
yesterday is manifests as you add new

895
00:38:15,100 --> 00:38:20,950
things other deals that get included you

896
00:38:18,550 --> 00:38:23,170
may have to create a manifest file for

897
00:38:20,950 --> 00:38:27,100
it so one of the things to support net

898
00:38:23,170 --> 00:38:32,350
for in office is it needed a helper and

899
00:38:27,100 --> 00:38:34,509
so with that helper the AC tac-x I

900
00:38:32,350 --> 00:38:36,700
believe it was you specify a mana I

901
00:38:34,510 --> 00:38:38,590
manifest text file which is just a text

902
00:38:36,700 --> 00:38:40,240
file that has where all the deals are

903
00:38:38,590 --> 00:38:41,740
and what they should load by doing that

904
00:38:40,240 --> 00:38:44,020
it tells of where to find the dotnet for

905
00:38:41,740 --> 00:38:46,180
components if you add anything else in

906
00:38:44,020 --> 00:38:48,130
there requires additional deals you

907
00:38:46,180 --> 00:38:51,790
would just modify that all of that is in

908
00:38:48,130 --> 00:38:56,350
cobalt strike config file but also is in

909
00:38:51,790 --> 00:38:59,259
that setup piece so and then from there

910
00:38:56,350 --> 00:39:02,170
this basically creates D serializers and

911
00:38:59,260 --> 00:39:05,200
puts that all back together so all of

912
00:39:02,170 --> 00:39:08,290
this is just basically renamed cactus

913
00:39:05,200 --> 00:39:10,149
torch and all of your different

914
00:39:08,290 --> 00:39:13,090
functions are here all of the pieces for

915
00:39:10,150 --> 00:39:15,670
Velma to do would need to be here after

916
00:39:13,090 --> 00:39:17,470
this dynamic invoke one of the other

917
00:39:15,670 --> 00:39:19,000
things you can do if you start getting

918
00:39:17,470 --> 00:39:20,680
detected is you can actually pull this

919
00:39:19,000 --> 00:39:23,140
chunk out and put it into a different

920
00:39:20,680 --> 00:39:26,140
function and then it's not in the same

921
00:39:23,140 --> 00:39:28,180
order and you can you can get away with

922
00:39:26,140 --> 00:39:32,529
some more with that so to look back at

923
00:39:28,180 --> 00:39:34,740
the manifest stuff inside the set up

924
00:39:32,530 --> 00:39:34,740
function

925
00:39:37,030 --> 00:39:41,380
basically each time it sets a variable

926
00:39:38,890 --> 00:39:44,819
you see this active document variables

927
00:39:41,380 --> 00:39:48,430
equals all this text up here you can put

928
00:39:44,820 --> 00:39:50,230
32k in each document variable and so you

929
00:39:48,430 --> 00:39:55,000
just have to switch a split your payload

930
00:39:50,230 --> 00:39:57,970
into 32k chunks and so doing that will

931
00:39:55,000 --> 00:39:59,680
get you to to where you want to be so

932
00:39:57,970 --> 00:40:03,759
other pieces as we come down through

933
00:39:59,680 --> 00:40:07,299
here oh the other thing is is right now

934
00:40:03,760 --> 00:40:10,800
these are five characters and the reason

935
00:40:07,300 --> 00:40:15,340
these are five characters is if they are

936
00:40:10,800 --> 00:40:19,930
three or six then it will get flagged as

937
00:40:15,340 --> 00:40:22,780
bei 64 if they don't have characters

938
00:40:19,930 --> 00:40:25,598
that aren't on non hex characters then

939
00:40:22,780 --> 00:40:28,150
they will get flagged as hex and so this

940
00:40:25,599 --> 00:40:31,990
seemed to be the sweet spot where they

941
00:40:28,150 --> 00:40:35,109
wouldn't get flagged as either so for

942
00:40:31,990 --> 00:40:37,149
the manifest this piece right here is

943
00:40:35,109 --> 00:40:39,340
building the manifest and so basically

944
00:40:37,150 --> 00:40:41,260
you have to specify the libraries you

945
00:40:39,340 --> 00:40:43,119
want to use and the versions and the

946
00:40:41,260 --> 00:40:46,390
public token how do you figure these out

947
00:40:43,119 --> 00:40:48,150
if you put it into Visual Studio you can

948
00:40:46,390 --> 00:40:52,180
actually look at all of these things and

949
00:40:48,150 --> 00:40:54,250
when you go ahead and configure them and

950
00:40:52,180 --> 00:40:56,649
save out the project it'll put all of

951
00:40:54,250 --> 00:40:58,900
this stuff in a file for you and you can

952
00:40:56,650 --> 00:41:01,480
just copy all of this from that and put

953
00:40:58,900 --> 00:41:03,400
it in and so as you add more stuff you

954
00:41:01,480 --> 00:41:05,770
have to do a little bit of editing here

955
00:41:03,400 --> 00:41:09,310
but all of this is a single text string

956
00:41:05,770 --> 00:41:11,380
in the siene file also the dictionary

957
00:41:09,310 --> 00:41:11,650
i've talked about if you add anything

958
00:41:11,380 --> 00:41:14,440
else

959
00:41:11,650 --> 00:41:18,070
all of these are just key values so

960
00:41:14,440 --> 00:41:20,830
adding another comma and then a key pipe

961
00:41:18,070 --> 00:41:22,119
variable um remember I mentioned four

962
00:41:20,830 --> 00:41:24,250
things that would allow you to load

963
00:41:22,119 --> 00:41:27,790
other dll's it's this Microsoft Windows

964
00:41:24,250 --> 00:41:30,099
a CT CT X module and that's what allows

965
00:41:27,790 --> 00:41:31,450
you to specify manifest file so also if

966
00:41:30,099 --> 00:41:33,220
you want to do anything weird in dotnet

967
00:41:31,450 --> 00:41:37,000
three-five that's another place where

968
00:41:33,220 --> 00:41:39,310
you may have to do it so and here for

969
00:41:37,000 --> 00:41:41,320
your workbooks we looked at that earlier

970
00:41:39,310 --> 00:41:43,420
those are those guys and again I don't

971
00:41:41,320 --> 00:41:44,859
recommend using an auto open I recommend

972
00:41:43,420 --> 00:41:46,869
using a trigger inside of a document

973
00:41:44,859 --> 00:41:51,359
somebody clicking on something or or

974
00:41:46,869 --> 00:41:51,359
something along those lines so

975
00:41:54,980 --> 00:41:58,440
that was mostly stuff that I wanted to

976
00:41:57,030 --> 00:41:59,940
show you guys I wanted to leave some

977
00:41:58,440 --> 00:42:02,310
time for some questions

978
00:41:59,940 --> 00:42:04,080
an additional discussion I always enjoy

979
00:42:02,310 --> 00:42:06,060
the discussions because a lot of people

980
00:42:04,080 --> 00:42:08,069
have run into different things and stuff

981
00:42:06,060 --> 00:42:11,040
I might not have considered so feel free

982
00:42:08,070 --> 00:42:14,160
to reach out to me also my code is on

983
00:42:11,040 --> 00:42:16,080
github under Cicero for better torch so

984
00:42:14,160 --> 00:42:17,730
feel free to check out the repo they're

985
00:42:16,080 --> 00:42:20,130
everything right now is under the Derby

986
00:42:17,730 --> 00:42:22,020
con branch as I finish a couple more bug

987
00:42:20,130 --> 00:42:23,280
fixes on merge it to the main so if you

988
00:42:22,020 --> 00:42:25,080
don't see what you're looking for switch

989
00:42:23,280 --> 00:42:28,590
to the the Derby con branch and

990
00:42:25,080 --> 00:42:30,270
everything is already there today so um

991
00:42:28,590 --> 00:42:32,340
thank you guys for coming out you guys

992
00:42:30,270 --> 00:42:38,400
have any questions or stuff you want to

993
00:42:32,340 --> 00:42:39,860
talk about all right cool thank you guys

994
00:42:38,400 --> 00:42:46,809
very much for coming I appreciate it

995
00:42:39,860 --> 00:42:46,809
[Applause]

996
00:42:48,450 --> 00:42:54,178
[Music]

