1
00:00:00,770 --> 00:00:06,689
alright let's go ahead and get started

2
00:00:04,549 --> 00:00:08,309
breaks my heart to say this for what

3
00:00:06,690 --> 00:00:13,019
might be the last time but good morning

4
00:00:08,309 --> 00:00:15,660
Derby con whoo appreciate you guys

5
00:00:13,019 --> 00:00:18,900
coming out so early come listen to his

6
00:00:15,660 --> 00:00:20,580
chat a little bit I know the 9 a.m.

7
00:00:18,900 --> 00:00:24,028
slots a little early you guys have fun

8
00:00:20,580 --> 00:00:28,380
at infected last night that was awesome

9
00:00:24,029 --> 00:00:34,610
that was awesome yeah yeah they did hear

10
00:00:28,380 --> 00:00:36,780
that guy so cool so if you're here uh

11
00:00:34,610 --> 00:00:38,850
welcome we appreciate you guys showing

12
00:00:36,780 --> 00:00:42,540
up we're here to talk a little bit about

13
00:00:38,850 --> 00:00:43,920
some some UNIX privilege escalation not

14
00:00:42,540 --> 00:00:47,960
underwater basket-weaving I believe

15
00:00:43,920 --> 00:00:47,960
that's down the hall to the right so all

16
00:00:48,469 --> 00:00:53,399
right he said welcome thank you for

17
00:00:51,239 --> 00:00:56,209
coming out let's go ahead and do the

18
00:00:53,399 --> 00:00:58,680
little intros who we are all that why

19
00:00:56,210 --> 00:01:00,629
care there we're standing up here I

20
00:00:58,680 --> 00:01:04,250
guess I don't know my name is Adam

21
00:01:00,629 --> 00:01:08,460
Compton I've been an impost egg for

22
00:01:04,250 --> 00:01:09,960
pretty much my entire a career no good

23
00:01:08,460 --> 00:01:11,460
number of years there but over that time

24
00:01:09,960 --> 00:01:16,048
I've done a little bit of everything

25
00:01:11,460 --> 00:01:18,179
I've done pen testing coding research a

26
00:01:16,049 --> 00:01:20,759
little bit of that currently I work with

27
00:01:18,180 --> 00:01:26,250
David here over at trusted sec so

28
00:01:20,759 --> 00:01:29,490
trusted sec but beyond that father/son

29
00:01:26,250 --> 00:01:33,090
husband hillbilly all that yay he'll be

30
00:01:29,490 --> 00:01:34,649
leashed no but no not honestly born and

31
00:01:33,090 --> 00:01:36,960
bred back in the Eastern Kentucky in the

32
00:01:34,650 --> 00:01:39,180
mountains all that hair oh my heritage

33
00:01:36,960 --> 00:01:40,220
there so very good about that let's go

34
00:01:39,180 --> 00:01:43,409
over to David

35
00:01:40,220 --> 00:01:46,020
so like Adam said my name is David Boyd

36
00:01:43,409 --> 00:01:48,240
I'm also a consultant for trusted SEC

37
00:01:46,020 --> 00:01:49,890
I'm a Christian which just means that

38
00:01:48,240 --> 00:01:52,259
I'm a sinner saved by grace

39
00:01:49,890 --> 00:01:55,530
a husband a father I did some time the

40
00:01:52,259 --> 00:01:56,729
army big geek and gamer and I've been

41
00:01:55,530 --> 00:01:58,619
hacking on stuff since I was much

42
00:01:56,729 --> 00:02:04,130
younger I'm doing it officially for

43
00:01:58,619 --> 00:02:05,820
about the last 10 years I'm sure sorry

44
00:02:04,130 --> 00:02:09,149
hey that's better

45
00:02:05,820 --> 00:02:10,590
all right so as David said we're gonna

46
00:02:09,149 --> 00:02:13,950
be talking about UNIX privilege

47
00:02:10,590 --> 00:02:17,129
escalation with a little bit of other

48
00:02:13,950 --> 00:02:18,810
a unique some thrown in there over as we

49
00:02:17,129 --> 00:02:19,890
go along so what are we gonna be tell me

50
00:02:18,810 --> 00:02:21,890
we're going to be talking about eunuchs

51
00:02:19,890 --> 00:02:24,929
in general a little bit of its history

52
00:02:21,890 --> 00:02:26,429
more of this more common exposure gonna

53
00:02:24,930 --> 00:02:29,819
see out there if you're going against

54
00:02:26,430 --> 00:02:32,099
them this is not going to be a deep dive

55
00:02:29,819 --> 00:02:34,799
into eunuchs it is not going to be like

56
00:02:32,099 --> 00:02:37,170
under the covers deep in there driver

57
00:02:34,800 --> 00:02:40,290
development stuff like that this is more

58
00:02:37,170 --> 00:02:42,480
of an intro to eunuchs mostly this

59
00:02:40,290 --> 00:02:45,090
originated from the concept that I go to

60
00:02:42,480 --> 00:02:47,670
conferences I read the online articles I

61
00:02:45,090 --> 00:02:49,830
see the other talk that so many people

62
00:02:47,670 --> 00:02:51,089
are focused on windows I understand

63
00:02:49,830 --> 00:02:52,890
that's the majority of what we see

64
00:02:51,090 --> 00:02:55,290
others pentesters is Windows that's

65
00:02:52,890 --> 00:02:57,000
mostly what's on there but in Italy we

66
00:02:55,290 --> 00:02:59,099
always come across a UNIX system here

67
00:02:57,000 --> 00:03:01,650
and there maybe it's the backend servers

68
00:02:59,099 --> 00:03:02,970
maybe it's controlling some delicate

69
00:03:01,650 --> 00:03:04,650
application something like that but

70
00:03:02,970 --> 00:03:06,510
there are eunuchs out there on it a lot

71
00:03:04,650 --> 00:03:08,010
of networks on top of that if you're

72
00:03:06,510 --> 00:03:10,828
doing CTF so a lot of those happen to be

73
00:03:08,010 --> 00:03:12,480
UNIX based so that's what we're covering

74
00:03:10,829 --> 00:03:14,099
here is like you're going to see it out

75
00:03:12,480 --> 00:03:16,260
there don't be afraid of it here's some

76
00:03:14,099 --> 00:03:18,480
common things to teaching the mindset

77
00:03:16,260 --> 00:03:20,910
for it to get you started going down the

78
00:03:18,480 --> 00:03:24,750
road to doing more research more attacks

79
00:03:20,910 --> 00:03:27,120
against you in existence so the the

80
00:03:24,750 --> 00:03:28,590
thing to remember too especially when

81
00:03:27,120 --> 00:03:30,150
you're on them you know a pen test or

82
00:03:28,590 --> 00:03:32,760
you're doing the red team or something

83
00:03:30,150 --> 00:03:35,670
is oftentimes you know we find a lot of

84
00:03:32,760 --> 00:03:37,078
our goodies on Windows systems and and

85
00:03:35,670 --> 00:03:38,518
for whatever reason Linux systems are

86
00:03:37,079 --> 00:03:40,380
just kind of overlooked or there's kind

87
00:03:38,519 --> 00:03:42,480
of skated over but there have been so

88
00:03:40,380 --> 00:03:45,510
many times when we found things like pH

89
00:03:42,480 --> 00:03:48,358
I or or PCI data a credit card data

90
00:03:45,510 --> 00:03:50,340
things like that just sitting on you

91
00:03:48,359 --> 00:03:52,829
know essentially an open Linux system

92
00:03:50,340 --> 00:03:54,510
database is just a little chock-full of

93
00:03:52,829 --> 00:03:57,209
passwords all sorts of stuff so

94
00:03:54,510 --> 00:03:59,910
hopefully this will help you know take

95
00:03:57,209 --> 00:04:03,299
away some of the fear related to looking

96
00:03:59,910 --> 00:04:06,690
at Linux systems in UNIX systems and

97
00:04:03,299 --> 00:04:08,579
also in terms of that debate about Emacs

98
00:04:06,690 --> 00:04:10,790
versus nano we all know that name is

99
00:04:08,579 --> 00:04:10,790
better

100
00:04:13,310 --> 00:04:17,728
all right so we're going to just do a

101
00:04:15,989 --> 00:04:19,349
quick little run-through for the history

102
00:04:17,728 --> 00:04:21,659
just to give everybody a perspective of

103
00:04:19,349 --> 00:04:24,090
what UNIX is you're here like Windows

104
00:04:21,660 --> 00:04:25,730
Windows came out and went through when

105
00:04:24,090 --> 00:04:28,729
those one to workgroup

106
00:04:25,730 --> 00:04:31,100
95 Emmy yay now I'm kidding

107
00:04:28,730 --> 00:04:32,960
to guys all the way up to now so but

108
00:04:31,100 --> 00:04:35,570
what is the history of Unix it dates

109
00:04:32,960 --> 00:04:37,969
back a little farther we're gonna start

110
00:04:35,570 --> 00:04:41,750
in the beginning of time here in 1945

111
00:04:37,970 --> 00:04:44,980
with any a get started out basically a

112
00:04:41,750 --> 00:04:47,510
systems were created that led into unix

113
00:04:44,980 --> 00:04:51,590
multix came around there are some guys

114
00:04:47,510 --> 00:04:54,469
out there Dennis Ritchie and a Ken that

115
00:04:51,590 --> 00:04:55,880
worked on a-- mortix decided that they

116
00:04:54,470 --> 00:04:57,260
liked it wanted to start their own

117
00:04:55,880 --> 00:04:59,719
little thing that came a little bit

118
00:04:57,260 --> 00:05:01,190
later but first they created well

119
00:04:59,720 --> 00:05:04,940
actually first they did create unique

120
00:05:01,190 --> 00:05:08,150
sauna pdp-11 then came a see at which

121
00:05:04,940 --> 00:05:09,890
point it was completely rewritten and

122
00:05:08,150 --> 00:05:11,690
then we started getting the other

123
00:05:09,890 --> 00:05:16,250
bearings coming out and there was a slew

124
00:05:11,690 --> 00:05:18,020
of those you have bsd system 3 came out

125
00:05:16,250 --> 00:05:20,420
first public release outside of Bell

126
00:05:18,020 --> 00:05:23,000
Labs and the floodgates was open at

127
00:05:20,420 --> 00:05:26,660
which point we had son oz h bucks

128
00:05:23,000 --> 00:05:28,520
politics AIX ir x solaris and just went

129
00:05:26,660 --> 00:05:30,050
on let me step back here that's a big

130
00:05:28,520 --> 00:05:34,190
one for a lot of us in here that was

131
00:05:30,050 --> 00:05:37,040
1981 that's when the linux version of

132
00:05:34,190 --> 00:05:39,200
what is that point zero one came out yay

133
00:05:37,040 --> 00:05:41,240
and that's what most of what we

134
00:05:39,200 --> 00:05:42,800
encounter now as far as unix goes with

135
00:05:41,240 --> 00:05:44,690
the occasional is four hundred and those

136
00:05:42,800 --> 00:05:47,030
thrown in there but most of what we

137
00:05:44,690 --> 00:05:49,250
encounter most of what we use our Linux

138
00:05:47,030 --> 00:05:53,630
based systems but it kept rolling out

139
00:05:49,250 --> 00:05:57,230
there's digital true OSX and yes OSX is

140
00:05:53,630 --> 00:05:59,090
a little derivative as you go through it

141
00:05:57,230 --> 00:06:02,360
next we'll slide here

142
00:05:59,090 --> 00:06:04,760
no go ahead yeah so uh with all of this

143
00:06:02,360 --> 00:06:06,640
right and with this you know essentially

144
00:06:04,760 --> 00:06:08,539
core operating system being open source

145
00:06:06,640 --> 00:06:10,099
everybody gets to put their finger in

146
00:06:08,540 --> 00:06:12,410
the pie right well when you get a lot of

147
00:06:10,100 --> 00:06:16,300
fingers and a lot of different pies you

148
00:06:12,410 --> 00:06:16,300
start to get a lot of different versions

149
00:06:17,170 --> 00:06:21,200
no arrows arrows not shift there it goes

150
00:06:20,570 --> 00:06:24,370
yeah

151
00:06:21,200 --> 00:06:28,250
so it's sorts to go and then it goes and

152
00:06:24,370 --> 00:06:30,430
then it goes and then it grows and it

153
00:06:28,250 --> 00:06:33,830
continues to grow over the years and

154
00:06:30,430 --> 00:06:36,230
forks and mutates and continues to go

155
00:06:33,830 --> 00:06:38,419
and go and so you get up into the what

156
00:06:36,230 --> 00:06:42,320
thousands of different districts

157
00:06:38,420 --> 00:06:45,200
easily thousands yeah hey if forex

158
00:06:42,320 --> 00:06:46,790
migrates mergers make in some OS has

159
00:06:45,200 --> 00:06:48,469
disappeared new ones form and then you

160
00:06:46,790 --> 00:06:51,110
get all the way the modern day and just

161
00:06:48,470 --> 00:06:53,870
for full scope let's zoom out of there

162
00:06:51,110 --> 00:06:56,870
this is the full well relatively full

163
00:06:53,870 --> 00:06:59,210
history of Unix so a little more

164
00:06:56,870 --> 00:07:01,190
complicated a little more background a

165
00:06:59,210 --> 00:07:04,580
little more diversity in there from the

166
00:07:01,190 --> 00:07:06,050
Winnick so from Windows I mean so going

167
00:07:04,580 --> 00:07:08,870
back to the previous slide back there

168
00:07:06,050 --> 00:07:11,090
way back is no it's okay don't worry

169
00:07:08,870 --> 00:07:12,800
it's from Jurassic Park when it says I

170
00:07:11,090 --> 00:07:16,219
know UNIX that's why so many people

171
00:07:12,800 --> 00:07:18,920
laugh at that is that if you know all of

172
00:07:16,220 --> 00:07:20,780
Linux that would be rather godlike I

173
00:07:18,920 --> 00:07:23,690
would say but that's still but now

174
00:07:20,780 --> 00:07:26,179
that's I have worked on a lot of UNIX

175
00:07:23,690 --> 00:07:28,640
systems myself but there's no way you

176
00:07:26,180 --> 00:07:30,830
can do this what you do is you focus on

177
00:07:28,640 --> 00:07:32,630
those that you're most gonna most come

178
00:07:30,830 --> 00:07:35,020
we're going to interact with which might

179
00:07:32,630 --> 00:07:38,420
be your Solaris your Red Hat Linux

180
00:07:35,020 --> 00:07:40,490
occasional bsds thrown in there and OSX

181
00:07:38,420 --> 00:07:42,050
outside of that depending on your

182
00:07:40,490 --> 00:07:43,820
environment you might have special

183
00:07:42,050 --> 00:07:46,130
requirements but those are the ones that

184
00:07:43,820 --> 00:07:48,710
most of the exploits out there currently

185
00:07:46,130 --> 00:07:50,330
are going to be running on and but yeah

186
00:07:48,710 --> 00:07:52,219
so we're going to just be referring to

187
00:07:50,330 --> 00:07:53,840
UNIX in general from this point on

188
00:07:52,220 --> 00:07:55,430
there's gonna be certain caveats of

189
00:07:53,840 --> 00:07:57,619
course if you dive into them whether

190
00:07:55,430 --> 00:08:01,010
it's running on Solaris or it's running

191
00:07:57,620 --> 00:08:02,630
on BSD or OSX or whatever but in general

192
00:08:01,010 --> 00:08:05,800
all of this is going to hold true across

193
00:08:02,630 --> 00:08:08,930
the board so what does it mean alright

194
00:08:05,800 --> 00:08:12,110
so over the history of a UNIX there's

195
00:08:08,930 --> 00:08:14,780
been a few categories general categories

196
00:08:12,110 --> 00:08:16,730
of where issues fall and historically

197
00:08:14,780 --> 00:08:19,010
passwords were a big one default

198
00:08:16,730 --> 00:08:21,170
passwords or weak password encryption or

199
00:08:19,010 --> 00:08:23,750
password stored in clear-text things of

200
00:08:21,170 --> 00:08:27,410
that nature file permissions always you

201
00:08:23,750 --> 00:08:28,730
have your most operations that we're all

202
00:08:27,410 --> 00:08:31,070
operating systems at this one I believe

203
00:08:28,730 --> 00:08:33,050
have some sort of power access list like

204
00:08:31,070 --> 00:08:33,710
you have permissions to read it write it

205
00:08:33,049 --> 00:08:36,079
modify it

206
00:08:33,710 --> 00:08:37,640
way back when everybody was out trusting

207
00:08:36,080 --> 00:08:39,470
so everybody can read and write

208
00:08:37,640 --> 00:08:40,970
everything so over time that's locked

209
00:08:39,470 --> 00:08:43,070
down more but there's still issues out

210
00:08:40,970 --> 00:08:46,490
there with things I set you IDs at GID

211
00:08:43,070 --> 00:08:49,850
things of that trust relationships still

212
00:08:46,490 --> 00:08:52,190
exist but we're going to go into a bunch

213
00:08:49,850 --> 00:08:55,460
of this without our the our login RSA

214
00:08:52,190 --> 00:08:58,190
each EX host all that concept will touch

215
00:08:55,460 --> 00:09:00,610
on a little bit then of course every OS

216
00:08:58,190 --> 00:09:02,870
has their own application flaws talking

217
00:09:00,610 --> 00:09:05,360
unlike Solaris yet like said Mandi

218
00:09:02,870 --> 00:09:08,000
issues years back you always have your

219
00:09:05,360 --> 00:09:10,670
Tomcat or Jenkins all that which do run

220
00:09:08,000 --> 00:09:13,100
on UNIX I see about a 50/50 that's

221
00:09:10,670 --> 00:09:14,780
running on UNIX or Windows over time so

222
00:09:13,100 --> 00:09:17,120
yeah the thing the thing to keep in mind

223
00:09:14,780 --> 00:09:18,800
with all this is you know back in the

224
00:09:17,120 --> 00:09:22,850
day folks were not really thinking about

225
00:09:18,800 --> 00:09:24,800
security when they were you know setting

226
00:09:22,850 --> 00:09:26,690
up these systems and stuff right it was

227
00:09:24,800 --> 00:09:27,650
set it up get it running and then carry

228
00:09:26,690 --> 00:09:29,990
on

229
00:09:27,650 --> 00:09:32,240
and especially with with UNIX systems

230
00:09:29,990 --> 00:09:33,530
again and you saw in that last slide so

231
00:09:32,240 --> 00:09:34,850
trusting whether it be an open source

232
00:09:33,530 --> 00:09:36,740
and all these people who have stuck

233
00:09:34,850 --> 00:09:38,270
repeaters in the PI then obviously it's

234
00:09:36,740 --> 00:09:40,130
got to be fine right like only the

235
00:09:38,270 --> 00:09:41,600
sysadmin notice had access to system so

236
00:09:40,130 --> 00:09:42,830
it's good you know he's got to get in

237
00:09:41,600 --> 00:09:45,230
there three or four you know hundred

238
00:09:42,830 --> 00:09:46,640
times a day let's not set a password or

239
00:09:45,230 --> 00:09:48,980
let's set a shared password a lot of

240
00:09:46,640 --> 00:09:50,360
people know which then led into several

241
00:09:48,980 --> 00:09:51,590
other different security vulnerabilities

242
00:09:50,360 --> 00:09:53,860
which then went into several there like

243
00:09:51,590 --> 00:09:57,140
really bad decisions in terms of setup

244
00:09:53,860 --> 00:10:01,160
that you know from ten twenty plus years

245
00:09:57,140 --> 00:10:03,410
ago we still see even to this day it's

246
00:10:01,160 --> 00:10:04,819
all good and of course there's no talk

247
00:10:03,410 --> 00:10:06,079
on the history of UNIX and

248
00:10:04,820 --> 00:10:07,850
vulnerabilities without talking about

249
00:10:06,080 --> 00:10:09,950
the Morris worm we're gonna talk maybe a

250
00:10:07,850 --> 00:10:12,140
minute on this there's lots of research

251
00:10:09,950 --> 00:10:15,590
out there entire books written about him

252
00:10:12,140 --> 00:10:16,819
and the worm go look it up fascinating

253
00:10:15,590 --> 00:10:20,090
read the kind of things that he found

254
00:10:16,820 --> 00:10:22,430
all that but mostly the just summarizes

255
00:10:20,090 --> 00:10:25,400
though he targeted flaws in the way that

256
00:10:22,430 --> 00:10:28,219
syn mail was handled finger you could

257
00:10:25,400 --> 00:10:30,560
enumerate with that are SH are Zack

258
00:10:28,220 --> 00:10:32,150
trust relationships again they're weak

259
00:10:30,560 --> 00:10:35,300
passwords people would like to use

260
00:10:32,150 --> 00:10:37,640
things like God or one two three or rank

261
00:10:35,300 --> 00:10:40,430
or whatever at the time so it worked

262
00:10:37,640 --> 00:10:43,280
well it spread got out of control based

263
00:10:40,430 --> 00:10:45,770
due to a slight a logic error that was

264
00:10:43,280 --> 00:10:49,790
in there go read about it it's

265
00:10:45,770 --> 00:10:52,220
fascinating reading and the fact that he

266
00:10:49,790 --> 00:10:54,199
released it at Cornell even though he

267
00:10:52,220 --> 00:10:56,180
was working he was a student at or

268
00:10:54,200 --> 00:10:58,100
working at an MIT at the time just so it

269
00:10:56,180 --> 00:11:00,229
wouldn't be traced back to him he went

270
00:10:58,100 --> 00:11:02,360
to a another college to release it when

271
00:11:00,230 --> 00:11:03,800
he did so it's kind of funny a little

272
00:11:02,360 --> 00:11:05,920
read there but yeah happened back in

273
00:11:03,800 --> 00:11:08,108
1988

274
00:11:05,920 --> 00:11:09,939
I really recommend it I just go read it

275
00:11:08,109 --> 00:11:12,160
if you want some quick reading on it and

276
00:11:09,939 --> 00:11:15,759
the nice little look into the history of

277
00:11:12,160 --> 00:11:18,969
it so jumping into passwords a little

278
00:11:15,759 --> 00:11:22,689
bit here as we said before in the

279
00:11:18,970 --> 00:11:26,079
beginning UNIX coming out of DARPA in

280
00:11:22,689 --> 00:11:28,929
all that was a rather trusting it was

281
00:11:26,079 --> 00:11:31,540
friendly everyone share everything was

282
00:11:28,929 --> 00:11:33,549
set up that way so they didn't put too

283
00:11:31,540 --> 00:11:36,009
much concern on password security and

284
00:11:33,549 --> 00:11:37,929
all that and over time they had to start

285
00:11:36,009 --> 00:11:39,579
adding it in as it got larger more

286
00:11:37,929 --> 00:11:41,858
people using it and when they did is

287
00:11:39,579 --> 00:11:43,479
they created a file called Etsy password

288
00:11:41,859 --> 00:11:45,100
I'm sure y'all have seen this it's

289
00:11:43,480 --> 00:11:49,239
broken down into username encrypted

290
00:11:45,100 --> 00:11:51,509
password UID GID so forth in the very

291
00:11:49,239 --> 00:11:54,879
big night for the longest time I'd say

292
00:11:51,509 --> 00:11:56,499
early 2000s even up through then you

293
00:11:54,879 --> 00:11:58,359
would still see an Etsy password follow

294
00:11:56,499 --> 00:12:00,160
there with the encrypted password still

295
00:11:58,359 --> 00:12:01,929
in there you'll still see it on it's a

296
00:12:00,160 --> 00:12:04,329
motor system some embedded systems I

297
00:12:01,929 --> 00:12:05,889
still see them all you do is you if you

298
00:12:04,329 --> 00:12:07,508
have read access to that which everybody

299
00:12:05,889 --> 00:12:09,579
on the system will have read access to

300
00:12:07,509 --> 00:12:12,730
Etsy password you can download that

301
00:12:09,579 --> 00:12:14,709
crack it and move on your way so they

302
00:12:12,730 --> 00:12:16,089
started correcting that fixing it they

303
00:12:14,709 --> 00:12:19,868
made the encryption on the hashing

304
00:12:16,089 --> 00:12:22,389
better move it up to sha-1 sha-256 and

305
00:12:19,869 --> 00:12:24,790
so forth as time goes on and they pulled

306
00:12:22,389 --> 00:12:27,939
that out most unix sees pulled it out

307
00:12:24,790 --> 00:12:29,860
into a file called ansi shadow so if you

308
00:12:27,939 --> 00:12:31,089
do manage to get a copy of it see shadow

309
00:12:29,860 --> 00:12:33,699
that's where your passwords are gonna

310
00:12:31,089 --> 00:12:35,529
live for the most part now yes h bugs

311
00:12:33,699 --> 00:12:37,959
HBO x and those actually have their own

312
00:12:35,529 --> 00:12:40,299
little security directories and separate

313
00:12:37,959 --> 00:12:41,919
files for various users and all that

314
00:12:40,299 --> 00:12:43,509
where they store their passwords but in

315
00:12:41,919 --> 00:12:45,069
general you're gonna have a cheap

316
00:12:43,509 --> 00:12:48,579
password Etsy shadow that's gonna cover

317
00:12:45,069 --> 00:12:51,488
most of it it's still relatively easy to

318
00:12:48,579 --> 00:12:53,819
crack a bunch of these because we're

319
00:12:51,489 --> 00:12:56,079
humans we pick easy passwords there's I

320
00:12:53,819 --> 00:12:58,299
rarely come across scenario where there

321
00:12:56,079 --> 00:13:00,488
is a enforced password policy on UNIX

322
00:12:58,299 --> 00:13:01,899
systems whereas on Windows you can say

323
00:13:00,489 --> 00:13:03,609
oh it has to be 16 characters long all

324
00:13:01,899 --> 00:13:05,319
that you know you can set that up on

325
00:13:03,609 --> 00:13:07,509
UNIX but the people who are setting it

326
00:13:05,319 --> 00:13:10,628
up on UNIX tend to overlook that they

327
00:13:07,509 --> 00:13:12,369
don't mind that well because there

328
00:13:10,629 --> 00:13:14,259
usually is just the admin themselves

329
00:13:12,369 --> 00:13:16,360
using it or a very slight group now god

330
00:13:14,259 --> 00:13:18,850
will make good passwords yeah it's gonna

331
00:13:16,360 --> 00:13:19,690
be password one so you can guess it get

332
00:13:18,850 --> 00:13:23,800
it and stuff like that

333
00:13:19,690 --> 00:13:27,520
so um next thing then hold on a second

334
00:13:23,800 --> 00:13:30,010
Oh men go if you want to talk very good

335
00:13:27,520 --> 00:13:31,780
yeah so uh you know so you know again

336
00:13:30,010 --> 00:13:34,480
password issues that's definitely one of

337
00:13:31,780 --> 00:13:36,939
the things we see another one is a file

338
00:13:34,480 --> 00:13:41,170
issues right so the way files are set up

339
00:13:36,940 --> 00:13:45,070
when you look at you know file types and

340
00:13:41,170 --> 00:13:46,750
file attributes you see you know - are

341
00:13:45,070 --> 00:13:49,480
and everything else each one of those

342
00:13:46,750 --> 00:13:51,940
has an actual you know like what it

343
00:13:49,480 --> 00:13:53,560
means so your - might mean the type your

344
00:13:51,940 --> 00:13:56,080
are is the owner then it goes to group

345
00:13:53,560 --> 00:13:58,719
then it goes to other right if you look

346
00:13:56,080 --> 00:14:01,810
at that oftentimes you'll find things

347
00:13:58,720 --> 00:14:04,480
like said UID set GID or something like

348
00:14:01,810 --> 00:14:07,630
a sticky bit set in place and if any of

349
00:14:04,480 --> 00:14:09,790
this you know in terms of how its set up

350
00:14:07,630 --> 00:14:12,160
if a this is set up wrong then you could

351
00:14:09,790 --> 00:14:14,260
essentially get full read/write access

352
00:14:12,160 --> 00:14:17,530
to this file just because they had a bit

353
00:14:14,260 --> 00:14:20,200
flippin online sometimes the directories

354
00:14:17,530 --> 00:14:21,939
owner or even folks that don't have

355
00:14:20,200 --> 00:14:24,010
redirects s can go in and rename the

356
00:14:21,940 --> 00:14:27,670
file and alter it because it wasn't set

357
00:14:24,010 --> 00:14:28,710
up correctly just one of the random

358
00:14:27,670 --> 00:14:30,579
things that you'll see out there

359
00:14:28,710 --> 00:14:33,040
occasionally that I've made use of in

360
00:14:30,580 --> 00:14:34,840
the past is you may go into a directory

361
00:14:33,040 --> 00:14:36,640
that you have read and write access to

362
00:14:34,840 --> 00:14:38,890
the directory but you don't have read

363
00:14:36,640 --> 00:14:39,970
and write access to the files in it just

364
00:14:38,890 --> 00:14:42,819
do the way they set up their file

365
00:14:39,970 --> 00:14:44,530
permissions but if you can read and

366
00:14:42,820 --> 00:14:46,690
write the way if you can read the

367
00:14:44,530 --> 00:14:48,130
directory but you can't if you can read

368
00:14:46,690 --> 00:14:50,580
the directory but not read the files in

369
00:14:48,130 --> 00:14:53,290
it you can usually make a copy of it

370
00:14:50,580 --> 00:14:55,450
because of the way that file structures

371
00:14:53,290 --> 00:14:57,189
inodes and all that the internal file

372
00:14:55,450 --> 00:15:00,580
system works on unix so you can still

373
00:14:57,190 --> 00:15:03,220
get access to those files it's you have

374
00:15:00,580 --> 00:15:05,170
to think about layers like if somebody

375
00:15:03,220 --> 00:15:07,360
has access to a parent directory they

376
00:15:05,170 --> 00:15:10,290
still can't get access to the files

377
00:15:07,360 --> 00:15:10,290
within their yes

378
00:15:27,370 --> 00:15:33,440
as Drake does that no but there aren't

379
00:15:30,620 --> 00:15:35,360
you know there are steps that you can do

380
00:15:33,440 --> 00:15:37,730
that can gain you access to it if you do

381
00:15:35,360 --> 00:15:39,800
have permissions to read the apparent

382
00:15:37,730 --> 00:15:42,020
directory the way that it's handled

383
00:15:39,800 --> 00:15:43,790
inside it's not as a matter of fact it's

384
00:15:42,020 --> 00:15:45,620
just copy - are this directory to this

385
00:15:43,790 --> 00:15:49,219
directory now I have it at one point in

386
00:15:45,620 --> 00:15:50,899
time it was that way back late 90s you

387
00:15:49,220 --> 00:15:52,880
could do that it's tightened down a

388
00:15:50,899 --> 00:15:54,350
little bit beyond that now but there are

389
00:15:52,880 --> 00:15:56,149
still techniques you can do to gain

390
00:15:54,350 --> 00:15:58,130
access to those files maybe not directly

391
00:15:56,149 --> 00:16:00,050
copy them but you can gain access to

392
00:15:58,130 --> 00:16:01,399
those files through there and we can

393
00:16:00,050 --> 00:16:03,199
talk after the fact if you want to on

394
00:16:01,399 --> 00:16:05,750
that but it's just one of those things

395
00:16:03,200 --> 00:16:07,370
that just be same with group policy all

396
00:16:05,750 --> 00:16:09,290
that if there is a parent policy that

397
00:16:07,370 --> 00:16:10,910
gives you access to something it may

398
00:16:09,290 --> 00:16:13,219
bleed down if you don't specifically

399
00:16:10,910 --> 00:16:14,510
restricted stuff like that there's we

400
00:16:13,220 --> 00:16:16,850
can talk about it after the fact if you

401
00:16:14,510 --> 00:16:18,860
want to on that but just be careful with

402
00:16:16,850 --> 00:16:19,940
your file directories and permissions

403
00:16:18,860 --> 00:16:24,020
and all that they do

404
00:16:19,940 --> 00:16:26,779
stack in odd ways at times so yeah so

405
00:16:24,020 --> 00:16:28,850
and we'll be talking about you know

406
00:16:26,779 --> 00:16:31,250
we'll have a couple videos I've shown

407
00:16:28,850 --> 00:16:34,399
you know some of these techniques but

408
00:16:31,250 --> 00:16:36,200
say you're on a UNIX system and you're

409
00:16:34,399 --> 00:16:37,970
just kind of browsing around glanced

410
00:16:36,200 --> 00:16:39,020
around see what you could find some

411
00:16:37,970 --> 00:16:41,060
interesting files that you should take a

412
00:16:39,020 --> 00:16:43,760
look at or definitely Etsy password your

413
00:16:41,060 --> 00:16:47,449
VAR log var mail files your dot history

414
00:16:43,760 --> 00:16:49,130
dart our hosts the dot forward any file

415
00:16:47,450 --> 00:16:52,339
with a you know a little tilde symbol

416
00:16:49,130 --> 00:16:53,740
those are typically hidden files but you

417
00:16:52,339 --> 00:16:55,610
can often kind of take a look at those

418
00:16:53,740 --> 00:16:58,880
and then you want to start looking for

419
00:16:55,610 --> 00:17:02,029
things like a set UID and set G ID which

420
00:16:58,880 --> 00:17:03,939
will show that here in just a second no

421
00:17:02,029 --> 00:17:06,410
you're good thank you anything else

422
00:17:03,939 --> 00:17:07,699
no I mean basically you look in the

423
00:17:06,410 --> 00:17:09,110
directory for anything that int that

424
00:17:07,699 --> 00:17:11,510
your home directories that start with a

425
00:17:09,109 --> 00:17:13,129
dot those are generally your more

426
00:17:11,510 --> 00:17:14,599
important they tend to have some

427
00:17:13,130 --> 00:17:16,490
sensitive files in there or sensitive

428
00:17:14,599 --> 00:17:20,719
information at times whether its history

429
00:17:16,490 --> 00:17:24,020
logs or what-have-you so so a little bit

430
00:17:20,720 --> 00:17:26,240
of a what is that um trust relationship

431
00:17:24,020 --> 00:17:27,949
here you're not gonna see this I'll come

432
00:17:26,240 --> 00:17:31,010
maybe you'll see it in cts nowadays or

433
00:17:27,949 --> 00:17:33,230
systems that are rather old but there's

434
00:17:31,010 --> 00:17:35,970
a file called our host and in there

435
00:17:33,230 --> 00:17:37,650
there was a you could restrict it

436
00:17:35,970 --> 00:17:40,230
you could say okay somebody could log in

437
00:17:37,650 --> 00:17:43,429
here using run commands on your using

438
00:17:40,230 --> 00:17:46,350
our login or SAH our detect commands and

439
00:17:43,429 --> 00:17:48,659
by default they can come in and execute

440
00:17:46,350 --> 00:17:50,969
commands unless based on this file where

441
00:17:48,659 --> 00:17:52,919
you can say this user at this system has

442
00:17:50,970 --> 00:17:55,740
access to come in and run these commands

443
00:17:52,919 --> 00:17:58,289
or you could say only this user at any

444
00:17:55,740 --> 00:17:59,640
system or any user at this system but

445
00:17:58,289 --> 00:18:01,408
because of the way it's set up with the

446
00:17:59,640 --> 00:18:04,650
plus size you could say any user at any

447
00:18:01,409 --> 00:18:05,880
system can come in and run commands what

448
00:18:04,650 --> 00:18:08,789
that also means is they can do it

449
00:18:05,880 --> 00:18:11,820
without passwords if they're allowed in

450
00:18:08,789 --> 00:18:14,490
the Etsy in the dot or host file they

451
00:18:11,820 --> 00:18:18,840
can do it without a password and a lot

452
00:18:14,490 --> 00:18:20,520
of developers and CTS are they tended to

453
00:18:18,840 --> 00:18:21,928
use this file that would be like oh yeah

454
00:18:20,520 --> 00:18:23,429
I don't know if I'm going to be this

455
00:18:21,929 --> 00:18:25,350
user on this system I'm rude on that

456
00:18:23,429 --> 00:18:27,900
system so I'll just go and throw it plus

457
00:18:25,350 --> 00:18:30,059
plus in the our host file and they can

458
00:18:27,900 --> 00:18:32,760
come in from anywhere I have actually

459
00:18:30,059 --> 00:18:34,860
not in the recent history but I have

460
00:18:32,760 --> 00:18:37,020
gate access to UNIX systems due to this

461
00:18:34,860 --> 00:18:38,789
and it's generally not route that you

462
00:18:37,020 --> 00:18:41,429
gain access to which is the super user

463
00:18:38,789 --> 00:18:43,379
you can use access to standard user

464
00:18:41,429 --> 00:18:45,419
accounts things of that nature there's

465
00:18:43,380 --> 00:18:48,059
also an equivalent one called host ID

466
00:18:45,419 --> 00:18:51,299
quill which is more global as opposed to

467
00:18:48,059 --> 00:18:52,918
a particular user in a fence we're

468
00:18:51,299 --> 00:18:55,168
actually gonna do a video on NFS here in

469
00:18:52,919 --> 00:19:00,570
a minute we're get to be careful on how

470
00:18:55,169 --> 00:19:02,730
you export NFS shares people there's

471
00:19:00,570 --> 00:19:04,950
precautions and a lot of unis ease now

472
00:19:02,730 --> 00:19:06,510
that help regulate this but if you are

473
00:19:04,950 --> 00:19:08,730
not careful on how it's being exported

474
00:19:06,510 --> 00:19:10,408
people can mount it and overwrite

475
00:19:08,730 --> 00:19:12,870
whatever access controls you have on

476
00:19:10,409 --> 00:19:15,270
there due to mounting permissions and

477
00:19:12,870 --> 00:19:18,360
then of course you have sudo su things

478
00:19:15,270 --> 00:19:21,270
of that nature we're trying to let you

479
00:19:18,360 --> 00:19:23,399
do sudo - shell on your system see what

480
00:19:21,270 --> 00:19:26,490
files what commands you have access to

481
00:19:23,400 --> 00:19:28,970
run and it's the same as run as on a

482
00:19:26,490 --> 00:19:31,230
Windows if you're not familiar with it

483
00:19:28,970 --> 00:19:34,080
and there's a quick caveat to that

484
00:19:31,230 --> 00:19:36,990
couple side note is you know during your

485
00:19:34,080 --> 00:19:40,770
initial enumeration scams couple porches

486
00:19:36,990 --> 00:19:43,740
to look for 512 513 and 514 that's our

487
00:19:40,770 --> 00:19:44,760
exec our login and our SH if you see any

488
00:19:43,740 --> 00:19:48,700
of those open those are usually

489
00:19:44,760 --> 00:19:50,629
something you get to start poking at so

490
00:19:48,700 --> 00:19:51,679
so let's go ahead and get started in

491
00:19:50,629 --> 00:19:55,070
here we're going to do there first of

492
00:19:51,679 --> 00:19:57,470
all video first thing we'll go up in map

493
00:19:55,070 --> 00:19:59,989
this site we ran some of the RPC stuff

494
00:19:57,470 --> 00:20:01,879
here we see that RPC bind is up and

495
00:19:59,989 --> 00:20:04,129
running we also see that our it's our

496
00:20:01,879 --> 00:20:07,998
exact login and shell in offense they're

497
00:20:04,129 --> 00:20:10,519
all RPC protocols so we're going to do

498
00:20:07,999 --> 00:20:12,769
our PC info dash p against the target

499
00:20:10,519 --> 00:20:14,480
that will give us some information about

500
00:20:12,769 --> 00:20:16,340
what versions of the programs are

501
00:20:14,480 --> 00:20:20,090
running for RPC and all that we see our

502
00:20:16,340 --> 00:20:24,889
stat D our user D going through a little

503
00:20:20,090 --> 00:20:26,928
history no this was a very what we yeah

504
00:20:24,889 --> 00:20:30,158
you can go back and watch it later if

505
00:20:26,929 --> 00:20:30,159
you need to we'll post it up there

506
00:20:37,869 --> 00:20:43,820
alright alright so what we did is we did

507
00:20:41,570 --> 00:20:45,499
a in map against the system we saw that

508
00:20:43,820 --> 00:20:48,559
our PC info is out there they're running

509
00:20:45,499 --> 00:20:51,889
on our users D our stat D things of that

510
00:20:48,559 --> 00:20:53,629
nature so we went we ran a our PC info

511
00:20:51,889 --> 00:20:55,369
against it we saw versions that were

512
00:20:53,629 --> 00:20:59,480
running out there so then we went had

513
00:20:55,369 --> 00:21:02,330
ran our users against that target it is

514
00:20:59,480 --> 00:21:04,580
hit or miss on how many of the users it

515
00:21:02,330 --> 00:21:06,019
will return to you but it's usually the

516
00:21:04,580 --> 00:21:07,220
users that are currently active on the

517
00:21:06,019 --> 00:21:09,559
system it'll return back to you

518
00:21:07,220 --> 00:21:11,299
depending on the flavor and version of

519
00:21:09,559 --> 00:21:13,908
UNIX that you're looking at in this case

520
00:21:11,299 --> 00:21:15,859
it came back with MSF admin root and

521
00:21:13,909 --> 00:21:17,330
user you must admin yes this is a

522
00:21:15,859 --> 00:21:20,119
Metasploit aboard that I was targeting

523
00:21:17,330 --> 00:21:21,379
here for the video for this so I saw

524
00:21:20,119 --> 00:21:23,749
that and then I saw okay

525
00:21:21,379 --> 00:21:25,549
they have root user and myself admin

526
00:21:23,749 --> 00:21:29,419
then I went ahead and said okay let's

527
00:21:25,549 --> 00:21:31,129
try our SH or remote shell - shell is

528
00:21:29,419 --> 00:21:32,989
the login name I want to try so I said

529
00:21:31,129 --> 00:21:34,969
go ahead and give me root against that

530
00:21:32,989 --> 00:21:36,919
target checking to see if they might

531
00:21:34,970 --> 00:21:38,210
have some weird permissions and our host

532
00:21:36,919 --> 00:21:40,850
files and all that that might allow you

533
00:21:38,210 --> 00:21:42,379
in in this case it did at the bottom of

534
00:21:40,850 --> 00:21:44,719
the screen there you'll see that I ran

535
00:21:42,379 --> 00:21:46,449
ID once I got on the system I'm showing

536
00:21:44,720 --> 00:21:48,739
that I'm setting at root right now

537
00:21:46,450 --> 00:21:51,679
you're probably not gonna see it as

538
00:21:48,739 --> 00:21:53,480
direct is this in real world environment

539
00:21:51,679 --> 00:21:55,039
but on CTF so you probably will see

540
00:21:53,480 --> 00:21:57,649
something like this to get more

541
00:21:55,039 --> 00:22:01,590
experience on that I have done this

542
00:21:57,649 --> 00:22:03,689
exact thing on engagements it's been

543
00:22:01,590 --> 00:22:06,570
a number of years ago but I have done

544
00:22:03,690 --> 00:22:08,790
this on large organizations that have a

545
00:22:06,570 --> 00:22:10,710
lot of unique systems and there will be

546
00:22:08,790 --> 00:22:12,570
those one set on the side that are their

547
00:22:10,710 --> 00:22:14,400
development boxes and those tend to be

548
00:22:12,570 --> 00:22:15,330
the ones that they said it like our host

549
00:22:14,400 --> 00:22:17,610
files or something like that

550
00:22:15,330 --> 00:22:20,550
also with our host files when people

551
00:22:17,610 --> 00:22:25,250
started using SSH over our hug or over

552
00:22:20,550 --> 00:22:28,409
our deck and our SH our SSH can actually

553
00:22:25,250 --> 00:22:30,750
honor our hosts files and that's some

554
00:22:28,410 --> 00:22:32,580
weird ways in there so typically that

555
00:22:30,750 --> 00:22:34,860
and they that functionality has been

556
00:22:32,580 --> 00:22:37,020
disabled through a config files now but

557
00:22:34,860 --> 00:22:38,729
if it's an older system you might still

558
00:22:37,020 --> 00:22:41,490
find a scenario with that where you can

559
00:22:38,730 --> 00:22:43,770
its SH with the same privileges as our

560
00:22:41,490 --> 00:22:47,010
exec and our SH was going to provide you

561
00:22:43,770 --> 00:22:49,110
so so in in you know just kind of in

562
00:22:47,010 --> 00:22:50,940
conclusion with that one essentially

563
00:22:49,110 --> 00:22:54,030
because something was sent wrong with

564
00:22:50,940 --> 00:22:56,070
our SH he was able to elevate from just

565
00:22:54,030 --> 00:22:57,690
a regular local user on the Box to root

566
00:22:56,070 --> 00:23:02,129
privilege which gives him full access

567
00:22:57,690 --> 00:23:05,070
over that box another one here we're

568
00:23:02,130 --> 00:23:07,020
going to kick off this one we're going

569
00:23:05,070 --> 00:23:08,820
to be looking at in FS I believe it is

570
00:23:07,020 --> 00:23:10,440
so we're doing an in map screen here

571
00:23:08,820 --> 00:23:14,460
I'll just pause it up here and keep it

572
00:23:10,440 --> 00:23:16,740
going dude so we're first thing we're

573
00:23:14,460 --> 00:23:19,580
gonna do we're gonna kick off NFS in map

574
00:23:16,740 --> 00:23:22,140
script looking for a NFS show mount

575
00:23:19,580 --> 00:23:24,179
commit well it's the script NFS show

576
00:23:22,140 --> 00:23:27,240
mount against the target on ports 2011

577
00:23:24,180 --> 00:23:29,700
which is RPC and 2049 which is that your

578
00:23:27,240 --> 00:23:32,160
NFS port and I don't know where the

579
00:23:29,700 --> 00:23:35,370
mouse is over here so Toback give me

580
00:23:32,160 --> 00:23:37,800
this all right let's do this again let's

581
00:23:35,370 --> 00:23:40,889
go a little bit sorry alright let's just

582
00:23:37,800 --> 00:23:44,669
let it go here I'll just talk quickly

583
00:23:40,890 --> 00:23:46,080
through so let it go again I really

584
00:23:44,670 --> 00:23:49,290
don't know where the mouse with yeah but

585
00:23:46,080 --> 00:23:54,000
it's invisible right now so yeah let it

586
00:23:49,290 --> 00:23:57,930
go it's skinny its way through so you

587
00:23:54,000 --> 00:24:00,660
see that it's exporting slash which is

588
00:23:57,930 --> 00:24:03,480
the root filesystem the store means it's

589
00:24:00,660 --> 00:24:04,980
exporting it to everybody there is no

590
00:24:03,480 --> 00:24:07,490
restriction so like sometimes you'll see

591
00:24:04,980 --> 00:24:09,750
other I peas in there other systems

592
00:24:07,490 --> 00:24:11,370
which means that only people in that

593
00:24:09,750 --> 00:24:13,410
system can mount the filesystem this one

594
00:24:11,370 --> 00:24:14,020
has a star which says that anybody can

595
00:24:13,410 --> 00:24:26,860
mount it

596
00:24:14,020 --> 00:24:29,139
so can I be cool you know there goes um

597
00:24:26,860 --> 00:24:30,939
sorry about that technical difficulty

598
00:24:29,140 --> 00:24:35,800
here so we saw that a show mount was

599
00:24:30,940 --> 00:24:38,290
running or that NFS was running okay so

600
00:24:35,800 --> 00:24:39,010
now we're going to show mount oh my

601
00:24:38,290 --> 00:24:42,670
goodness

602
00:24:39,010 --> 00:24:43,929
yeah here here here here here I'm gonna

603
00:24:42,670 --> 00:24:47,640
go back you just later play and talk

604
00:24:43,929 --> 00:24:50,970
through it now sorry everybody

605
00:24:47,640 --> 00:24:55,300
stop touching it

606
00:24:50,970 --> 00:24:56,050
sorry I love presentations no actually I

607
00:24:55,300 --> 00:24:57,730
do it's just

608
00:24:56,050 --> 00:25:00,070
technical difficulties come up here and

609
00:24:57,730 --> 00:25:02,320
there so apologize for let us go back

610
00:25:00,070 --> 00:25:05,830
through it real quick here so we're

611
00:25:02,320 --> 00:25:09,428
doing the in maps can again we see that

612
00:25:05,830 --> 00:25:11,290
the show mount is there we see NFS is

613
00:25:09,429 --> 00:25:13,809
open on there so now we're going to do a

614
00:25:11,290 --> 00:25:16,899
command called show mount - e that will

615
00:25:13,809 --> 00:25:18,879
tell you there you go list of exports

616
00:25:16,900 --> 00:25:20,920
it's a different way to do it if you

617
00:25:18,880 --> 00:25:23,140
didn't want to do in map you can also do

618
00:25:20,920 --> 00:25:25,179
show mount - a which will tell you who

619
00:25:23,140 --> 00:25:27,670
has a mounted right here so we're making

620
00:25:25,179 --> 00:25:30,040
a directory locally on our system called

621
00:25:27,670 --> 00:25:32,850
MNT and then we're going to mount the

622
00:25:30,040 --> 00:25:35,170
remote filesystem to our mount point

623
00:25:32,850 --> 00:25:37,270
same as Windows shares things of that

624
00:25:35,170 --> 00:25:39,340
nature as well so now we've got it we CD

625
00:25:37,270 --> 00:25:41,860
into it we're doing a directory listing

626
00:25:39,340 --> 00:25:43,540
in there we even went into the root

627
00:25:41,860 --> 00:25:46,120
directory of there which you

628
00:25:43,540 --> 00:25:48,700
realistically shouldn't be able to do we

629
00:25:46,120 --> 00:25:50,379
created a file it exists we're showing

630
00:25:48,700 --> 00:25:55,090
that it has file permissions down there

631
00:25:50,380 --> 00:25:57,160
we created it as root root and how is

632
00:25:55,090 --> 00:25:58,870
that possible so we're going oh we're

633
00:25:57,160 --> 00:26:00,610
also gonna go look at Etsy shadow we

634
00:25:58,870 --> 00:26:02,428
shouldn't have access to Etsy shadow but

635
00:26:00,610 --> 00:26:04,659
do the way that this is exported we do

636
00:26:02,429 --> 00:26:09,280
we're gonna look at that right here in

637
00:26:04,660 --> 00:26:11,380
Katzie exports that no root squash that

638
00:26:09,280 --> 00:26:14,129
was a neighborhood by default on a lot

639
00:26:11,380 --> 00:26:16,890
of UNIX systems back in the day and

640
00:26:14,130 --> 00:26:20,350
before that that wasn't even an option

641
00:26:16,890 --> 00:26:21,880
so when you export a file system in the

642
00:26:20,350 --> 00:26:23,320
remote system they're expecting a

643
00:26:21,880 --> 00:26:24,970
standard user to Marinette things of

644
00:26:23,320 --> 00:26:27,580
that nature but if you're a root on your

645
00:26:24,970 --> 00:26:29,380
remote system like your Penta

646
00:26:27,580 --> 00:26:32,500
you have your system and you mount it as

647
00:26:29,380 --> 00:26:34,240
route well you can gain root access to

648
00:26:32,500 --> 00:26:36,190
the remote filesystem just to the way

649
00:26:34,240 --> 00:26:39,550
that the handling back and forth of NFS

650
00:26:36,190 --> 00:26:41,890
works that's why a prequel year was but

651
00:26:39,550 --> 00:26:44,800
it was early 2000s I started seeing that

652
00:26:41,890 --> 00:26:46,750
a root squash was enabled by default on

653
00:26:44,800 --> 00:26:48,820
systems which says that you can mount

654
00:26:46,750 --> 00:26:51,060
this filesystem as any user but if you

655
00:26:48,820 --> 00:26:53,679
try to do it as a privileged user UID 0

656
00:26:51,060 --> 00:26:55,510
it drops you down to a guest user

657
00:26:53,680 --> 00:26:59,110
instead that has like very limited

658
00:26:55,510 --> 00:27:01,330
resources so but here again CTF and

659
00:26:59,110 --> 00:27:03,729
older systems or even embedded systems

660
00:27:01,330 --> 00:27:05,220
that might not be updated or they

661
00:27:03,730 --> 00:27:08,140
haven't went through the proper

662
00:27:05,220 --> 00:27:10,360
hardening guides you may still encounter

663
00:27:08,140 --> 00:27:12,010
this so just keep an eye out there

664
00:27:10,360 --> 00:27:13,479
that's one thing I do when I see you in

665
00:27:12,010 --> 00:27:15,490
existence I see if there's any NFS

666
00:27:13,480 --> 00:27:17,020
exports so I try to mount them all as

667
00:27:15,490 --> 00:27:19,150
route see what happens while privilege I

668
00:27:17,020 --> 00:27:21,129
have and if I gain something great if

669
00:27:19,150 --> 00:27:24,300
not I just move on and see what access I

670
00:27:21,130 --> 00:27:26,800
do have so all right

671
00:27:24,300 --> 00:27:28,120
all right so some of the services that

672
00:27:26,800 --> 00:27:33,070
you're going to want to look at out

673
00:27:28,120 --> 00:27:35,560
there for that can come into play if

674
00:27:33,070 --> 00:27:38,590
you're doing a pen test or targeting

675
00:27:35,560 --> 00:27:41,290
UNIX systems is going to be telnet 7d

676
00:27:38,590 --> 00:27:42,459
send mail supply historically we're

677
00:27:41,290 --> 00:27:43,629
going to talk about some more modern

678
00:27:42,460 --> 00:27:45,580
ones here after a while but

679
00:27:43,630 --> 00:27:48,250
tools you can use to identify these or

680
00:27:45,580 --> 00:27:50,590
in map whatever but in map itself

681
00:27:48,250 --> 00:27:52,090
historically has had issues oh yeah

682
00:27:50,590 --> 00:27:53,919
we're gonna do a quick little one with

683
00:27:52,090 --> 00:27:56,439
that due to the set UID bit that they

684
00:27:53,920 --> 00:28:00,460
had in there but it was the finally that

685
00:27:56,440 --> 00:28:02,230
got removed a few years later on after

686
00:28:00,460 --> 00:28:03,520
he came out and said why are y'all using

687
00:28:02,230 --> 00:28:05,100
this you shouldn't have done this anyway

688
00:28:03,520 --> 00:28:07,510
you should have installed it but yeah

689
00:28:05,100 --> 00:28:12,850
lots of other apps out there Tomcat

690
00:28:07,510 --> 00:28:14,980
Jenkins JBoss phpMyAdmin my website any

691
00:28:12,850 --> 00:28:18,189
number of these web applications out

692
00:28:14,980 --> 00:28:20,410
there they the same issue that people

693
00:28:18,190 --> 00:28:22,330
have on a lot of other OS as they tend

694
00:28:20,410 --> 00:28:23,740
to install them as route and let them

695
00:28:22,330 --> 00:28:25,780
run is route which gives them certain

696
00:28:23,740 --> 00:28:27,340
special privileges if you compromise

697
00:28:25,780 --> 00:28:29,920
them if you code execution you're

698
00:28:27,340 --> 00:28:32,230
already a foothold on the system but

699
00:28:29,920 --> 00:28:34,750
that's just that's more application

700
00:28:32,230 --> 00:28:36,400
exploits to get to the OS but they do

701
00:28:34,750 --> 00:28:37,630
still exist out there there's lots of

702
00:28:36,400 --> 00:28:39,490
other things out there

703
00:28:37,630 --> 00:28:41,210
there's kernel based exploits we're

704
00:28:39,490 --> 00:28:43,860
going to be talking about a little while

705
00:28:41,210 --> 00:28:45,299
probably my favorite exploit of our time

706
00:28:43,860 --> 00:28:48,449
is the next one we're going to show real

707
00:28:45,299 --> 00:28:51,090
quick here it's when I saw back around

708
00:28:48,450 --> 00:28:54,720
the turn of the century early 2000s but

709
00:28:51,090 --> 00:28:57,000
it still pops up periodically and it's

710
00:28:54,720 --> 00:29:01,500
what it eye area I officially called the

711
00:28:57,000 --> 00:29:02,940
telnet - elf user or no yeah so we're

712
00:29:01,500 --> 00:29:04,620
gonna go into a quick run-through here

713
00:29:02,940 --> 00:29:07,470
this affected certain versions of

714
00:29:04,620 --> 00:29:10,918
Solaris up through what a freaking what

715
00:29:07,470 --> 00:29:12,510
it was like seven or eight but so so

716
00:29:10,919 --> 00:29:14,850
what you do do an inner map of it you

717
00:29:12,510 --> 00:29:18,179
see telnet is open it's running Solaris

718
00:29:14,850 --> 00:29:20,250
9 there you try to turn it into it

719
00:29:18,179 --> 00:29:22,559
there's a special flight you use like

720
00:29:20,250 --> 00:29:26,159
the - I'll tell you what user and then

721
00:29:22,559 --> 00:29:28,230
in quotes do - elf and then a user name

722
00:29:26,159 --> 00:29:30,389
in this case I did root and it came back

723
00:29:28,230 --> 00:29:33,929
- sorry not allowed for console access

724
00:29:30,389 --> 00:29:36,418
so this time I'm doing - been in tapping

725
00:29:33,929 --> 00:29:38,399
the IP and it let me on the system there

726
00:29:36,419 --> 00:29:40,919
was a flaw in telnet that affected a

727
00:29:38,399 --> 00:29:42,510
number of different uh system v based

728
00:29:40,919 --> 00:29:44,340
systems at the time predominately

729
00:29:42,510 --> 00:29:46,950
solaris is what people are seeing it as

730
00:29:44,340 --> 00:29:50,850
and why you can see it here right there

731
00:29:46,950 --> 00:29:53,429
that line now that console /dev alright

732
00:29:50,850 --> 00:29:55,350
console equals slash dev console that's

733
00:29:53,429 --> 00:29:56,909
why I can do that as root but has been

734
00:29:55,350 --> 00:29:59,879
you can do that as any user on the

735
00:29:56,909 --> 00:30:02,519
system I compromised so many systems

736
00:29:59,880 --> 00:30:04,919
back in the day but I believe in the

737
00:30:02,519 --> 00:30:06,269
last don't know six months to here you

738
00:30:04,919 --> 00:30:08,519
actually seen this again on an

739
00:30:06,269 --> 00:30:10,590
engagement yeah which I'm amazed about

740
00:30:08,519 --> 00:30:12,240
but yeah so these ode vulnerability

741
00:30:10,590 --> 00:30:14,399
still keep popping up periodically over

742
00:30:12,240 --> 00:30:16,889
time so just keep them in mind yeah they

743
00:30:14,399 --> 00:30:18,178
really do and he wasn't kidding uh you

744
00:30:16,889 --> 00:30:20,370
know it's between six months ago or so

745
00:30:18,179 --> 00:30:22,889
this went ten-year-old plus

746
00:30:20,370 --> 00:30:24,268
vulnerability happened to paw and just

747
00:30:22,889 --> 00:30:27,059
happen to stumble upon hit me root

748
00:30:24,269 --> 00:30:29,789
access on a box because again a sysadmin

749
00:30:27,059 --> 00:30:31,529
fired up a UNIX system set it and forget

750
00:30:29,789 --> 00:30:33,360
it and left it didn't go through to

751
00:30:31,529 --> 00:30:35,399
check security configurations had that

752
00:30:33,360 --> 00:30:37,620
misconfigured and I had root access on a

753
00:30:35,399 --> 00:30:41,158
box that had quite a bit of a super

754
00:30:37,620 --> 00:30:42,059
sensitive data so let's talk about so

755
00:30:41,159 --> 00:30:43,440
we've gone through some of the history

756
00:30:42,059 --> 00:30:44,908
we've got through some of the historical

757
00:30:43,440 --> 00:30:47,159
problems with it so let's talk about how

758
00:30:44,909 --> 00:30:48,659
can we incorporate some of these

759
00:30:47,159 --> 00:30:50,429
historical problems some of these

760
00:30:48,659 --> 00:30:52,980
security misconfigurations and things

761
00:30:50,429 --> 00:30:54,690
like that to try to you know get a

762
00:30:52,980 --> 00:30:56,130
better foothold within

763
00:30:54,690 --> 00:30:59,960
systems move about the network a little

764
00:30:56,130 --> 00:31:02,250
bit better as we go through these

765
00:30:59,960 --> 00:31:03,480
essentially with the demo videos what

766
00:31:02,250 --> 00:31:06,180
we're going to be doing is saying okay

767
00:31:03,480 --> 00:31:08,760
so now we've got a shell and what that

768
00:31:06,180 --> 00:31:12,090
means is we've got a low privileged user

769
00:31:08,760 --> 00:31:13,410
access on a box and you know it's early

770
00:31:12,090 --> 00:31:15,360
in the morning however if you guys

771
00:31:13,410 --> 00:31:17,160
wouldn't mind anytime you hear me say so

772
00:31:15,360 --> 00:31:19,709
we've got a shell if you guys give me a

773
00:31:17,160 --> 00:31:21,860
big hearty turtle power that would be

774
00:31:19,710 --> 00:31:21,860
awesome

775
00:31:22,160 --> 00:31:28,110
so what do we need to do we're on a

776
00:31:26,370 --> 00:31:29,729
Linux system we've got a low privileged

777
00:31:28,110 --> 00:31:32,040
user access so it's the first thing we

778
00:31:29,730 --> 00:31:33,360
need to do right and what I often you

779
00:31:32,040 --> 00:31:34,889
know tell people is kind of get a lay of

780
00:31:33,360 --> 00:31:36,810
the land start doing some basic

781
00:31:34,890 --> 00:31:38,430
enumeration you want to figure out what

782
00:31:36,810 --> 00:31:40,440
kind of user you are so Who am I you

783
00:31:38,430 --> 00:31:41,900
know who else is logged into the box who

784
00:31:40,440 --> 00:31:44,070
are the different super users on the box

785
00:31:41,900 --> 00:31:46,590
you want to see what kind of info you I

786
00:31:44,070 --> 00:31:48,300
have access to what can you do within

787
00:31:46,590 --> 00:31:50,580
the box how can you move about what can

788
00:31:48,300 --> 00:31:52,080
you see and where can you go can you go

789
00:31:50,580 --> 00:31:53,820
you know can you go throughout the whole

790
00:31:52,080 --> 00:31:55,760
box are you in a restricted shell

791
00:31:53,820 --> 00:31:58,740
different things like that

792
00:31:55,760 --> 00:32:00,270
a couple of good commands to run once

793
00:31:58,740 --> 00:32:03,120
you've landed on a box is a little

794
00:32:00,270 --> 00:32:04,920
privileged user you name that at a that

795
00:32:03,120 --> 00:32:07,949
gives you the current kernel version and

796
00:32:04,920 --> 00:32:09,390
there are a just plethora of different

797
00:32:07,950 --> 00:32:10,830
kernel exploits out there I mean you're

798
00:32:09,390 --> 00:32:13,560
going to see there's there's hundreds of

799
00:32:10,830 --> 00:32:15,750
them that are often one-click exploits

800
00:32:13,560 --> 00:32:19,560
to get you from a low privileged access

801
00:32:15,750 --> 00:32:21,570
to root access env is your environment

802
00:32:19,560 --> 00:32:23,250
variable PWD gives you your current

803
00:32:21,570 --> 00:32:24,840
directory often times you'll be in a

804
00:32:23,250 --> 00:32:25,830
directory that you weren't expecting so

805
00:32:24,840 --> 00:32:26,270
you want to kind of get an idea about

806
00:32:25,830 --> 00:32:30,780
that

807
00:32:26,270 --> 00:32:33,270
Who am I history cat history different

808
00:32:30,780 --> 00:32:35,940
things like this occasionally you will

809
00:32:33,270 --> 00:32:38,310
see clear text passwords in history you

810
00:32:35,940 --> 00:32:40,740
have a you absolutely will

811
00:32:38,310 --> 00:32:42,360
suta - shell our commands you can run a

812
00:32:40,740 --> 00:32:44,070
sudo again something might be

813
00:32:42,360 --> 00:32:47,580
misconfigured so you can run some a sudo

814
00:32:44,070 --> 00:32:49,320
as a low purpose user and then you want

815
00:32:47,580 --> 00:32:52,590
to check who's in the sudoers file as

816
00:32:49,320 --> 00:32:55,050
well as if nothing else you can pull

817
00:32:52,590 --> 00:32:57,300
additional user names from Etsy pass to

818
00:32:55,050 --> 00:32:59,610
BD and that will at least get you a

819
00:32:57,300 --> 00:33:01,110
better idea of username nomenclature and

820
00:32:59,610 --> 00:33:04,350
how their how their user names are set

821
00:33:01,110 --> 00:33:06,060
up now you can do all that manually or

822
00:33:04,350 --> 00:33:06,740
there are several scripts out there that

823
00:33:06,060 --> 00:33:09,408
are written by

824
00:33:06,740 --> 00:33:11,809
different folks there's lynnium done sh

825
00:33:09,409 --> 00:33:14,110
linux proof checker and then unix previs

826
00:33:11,809 --> 00:33:17,809
check all these are available on github

827
00:33:14,110 --> 00:33:19,580
and they're very loud okay but if you've

828
00:33:17,809 --> 00:33:20,899
already got a shell on a box you know

829
00:33:19,580 --> 00:33:25,428
you may not be worried about tripping to

830
00:33:20,899 --> 00:33:26,570
anything so these will often run several

831
00:33:25,429 --> 00:33:28,100
different commands and they give you a

832
00:33:26,570 --> 00:33:31,010
nice pretty output to go through and

833
00:33:28,100 --> 00:33:32,299
parse the room and we'll go through them

834
00:33:31,010 --> 00:33:35,539
of what one of those looks like so this

835
00:33:32,299 --> 00:33:41,299
is going to be I believe this is a Linux

836
00:33:35,539 --> 00:33:43,220
proof checker so we got a shell yes and

837
00:33:41,299 --> 00:33:44,480
we're doing just some basic enumeration

838
00:33:43,220 --> 00:33:46,490
here we're checking who am i were

839
00:33:44,480 --> 00:33:48,169
checking what directory we're in can we

840
00:33:46,490 --> 00:33:49,159
go to root it says nope you can't go to

841
00:33:48,169 --> 00:33:52,159
root because you're not a read user

842
00:33:49,159 --> 00:33:54,500
permission denied so it's pen testers we

843
00:33:52,159 --> 00:33:56,929
like to let me pause that real quick

844
00:33:54,500 --> 00:34:08,260
whoops it's really hard to pause videos

845
00:33:56,929 --> 00:34:10,429
by the way on a Mac here so okay so as

846
00:34:08,260 --> 00:34:12,619
pen testers it's always a good idea to

847
00:34:10,429 --> 00:34:14,480
work cleanly right we don't want to

848
00:34:12,619 --> 00:34:16,099
leave artifacts behind on systems so

849
00:34:14,480 --> 00:34:19,429
you'll see in this video I moved to dev

850
00:34:16,099 --> 00:34:21,020
sh m and that's essentially a UNIX temp

851
00:34:19,429 --> 00:34:23,300
directory that clears itself out you

852
00:34:21,020 --> 00:34:25,310
know when you reboot the machine so

853
00:34:23,300 --> 00:34:26,720
we're checking to see if we have w

854
00:34:25,310 --> 00:34:31,310
guides so that way we can pull down a

855
00:34:26,719 --> 00:34:34,699
file so we do have W get so we're going

856
00:34:31,310 --> 00:34:36,949
to W get we've set up a web directory or

857
00:34:34,699 --> 00:34:39,020
web server on our local system and we're

858
00:34:36,949 --> 00:34:41,928
going to W get our enumeration script

859
00:34:39,020 --> 00:34:44,300
and put it all the box we double check

860
00:34:41,929 --> 00:34:48,080
but it's on there we make it executable

861
00:34:44,300 --> 00:34:50,359
with the chmod and then we run it and it

862
00:34:48,080 --> 00:34:51,739
goes through and it starts just pouring

863
00:34:50,359 --> 00:34:54,230
out just tons of tons of information

864
00:34:51,739 --> 00:34:56,868
there gives us everything I said it

865
00:34:54,230 --> 00:34:59,540
gives us solicita users it gives us a

866
00:34:56,869 --> 00:35:02,619
cat Etsy passwd gives us the kernel

867
00:34:59,540 --> 00:35:05,599
version you know the name of the system

868
00:35:02,619 --> 00:35:07,940
it different you know file types dates

869
00:35:05,599 --> 00:35:12,080
things like that and that gives you just

870
00:35:07,940 --> 00:35:14,119
just a plethora of information that you

871
00:35:12,080 --> 00:35:15,950
can often take and start doing some you

872
00:35:14,119 --> 00:35:17,330
know general google searching and things

873
00:35:15,950 --> 00:35:19,040
like that to see if any of this is

874
00:35:17,330 --> 00:35:20,210
exploitable you know you can look for

875
00:35:19,040 --> 00:35:22,820
things like we talked about our

876
00:35:20,210 --> 00:35:24,020
aah and and you know different security

877
00:35:22,820 --> 00:35:28,250
misconfigurations that you could take

878
00:35:24,020 --> 00:35:31,400
advantage of you can see you know what

879
00:35:28,250 --> 00:35:33,790
Scott it says users who can pseudo

880
00:35:31,400 --> 00:35:35,690
without you know providing a password

881
00:35:33,790 --> 00:35:37,310
different things like that you know

882
00:35:35,690 --> 00:35:42,200
where different files are being stored

883
00:35:37,310 --> 00:35:44,210
who has access to what and yeah all

884
00:35:42,200 --> 00:35:45,919
sorts of interesting files

885
00:35:44,210 --> 00:35:47,990
you know it'll tell you if things have

886
00:35:45,920 --> 00:35:50,690
sticky bid or set UID installed

887
00:35:47,990 --> 00:35:51,740
different things like that so stuff that

888
00:35:50,690 --> 00:35:54,080
would take several minutes trying to

889
00:35:51,740 --> 00:35:56,540
parse through a script can do for you in

890
00:35:54,080 --> 00:35:58,310
a few seconds and if you're in a hurry

891
00:35:56,540 --> 00:35:59,930
or you're trying to be stealthy you can

892
00:35:58,310 --> 00:36:05,000
parse this to a text file pull it off

893
00:35:59,930 --> 00:36:06,200
and then analyze it later so you know

894
00:36:05,000 --> 00:36:07,490
you've got all this information what do

895
00:36:06,200 --> 00:36:08,868
you do with it right say you've got

896
00:36:07,490 --> 00:36:11,330
something like a kernel version now you

897
00:36:08,869 --> 00:36:14,210
know what you're looking at a great tool

898
00:36:11,330 --> 00:36:17,060
that's made by the guys at off sec is

899
00:36:14,210 --> 00:36:19,010
the exploit database and kali linux has

900
00:36:17,060 --> 00:36:21,950
this installed by default or you can

901
00:36:19,010 --> 00:36:23,720
pull a database down onto your you know

902
00:36:21,950 --> 00:36:26,569
personal linux box whatever you want I

903
00:36:23,720 --> 00:36:28,879
mean it's called search plate and it is

904
00:36:26,570 --> 00:36:31,210
a it's a command-line tool lets you

905
00:36:28,880 --> 00:36:33,560
search and parse your exploit DB and

906
00:36:31,210 --> 00:36:36,410
allows you to look for different

907
00:36:33,560 --> 00:36:40,070
exploits for whatever you may have right

908
00:36:36,410 --> 00:36:42,799
so it gives you the ability to look for

909
00:36:40,070 --> 00:36:44,300
say if you find a Linux kernel version

910
00:36:42,800 --> 00:36:46,280
right if you type that kernel version in

911
00:36:44,300 --> 00:36:48,560
it will give you a list of ready to go

912
00:36:46,280 --> 00:36:50,420
exploits that you can just copy paste

913
00:36:48,560 --> 00:36:52,670
and run and try to see if you can

914
00:36:50,420 --> 00:36:54,910
escalate some privileges so here the

915
00:36:52,670 --> 00:36:57,349
command we've got is search boy dirty

916
00:36:54,910 --> 00:36:59,990
which dirty cow is a you know really

917
00:36:57,349 --> 00:37:03,530
popular back in the day it was a really

918
00:36:59,990 --> 00:37:04,520
popular privilege escalation exploit and

919
00:37:03,530 --> 00:37:07,990
that gives you all the different

920
00:37:04,520 --> 00:37:10,099
versions that you can pull down there

921
00:37:07,990 --> 00:37:13,220
another good thing to look for while

922
00:37:10,099 --> 00:37:17,780
you're on a box is a set center owner

923
00:37:13,220 --> 00:37:21,140
user ID permission so suet files it's

924
00:37:17,780 --> 00:37:24,080
the type of file permission that's a

925
00:37:21,140 --> 00:37:25,339
given to a file when a program runs it's

926
00:37:24,080 --> 00:37:27,200
supposed to inherit the access

927
00:37:25,339 --> 00:37:29,570
permissions from the logged in user

928
00:37:27,200 --> 00:37:31,609
however suid will give them temporary

929
00:37:29,570 --> 00:37:33,980
root access or temporary elevated access

930
00:37:31,609 --> 00:37:37,310
to a file uh

931
00:37:33,980 --> 00:37:40,070
than to the file owner itself so in

932
00:37:37,310 --> 00:37:42,380
simpler terms users will get file owners

933
00:37:40,070 --> 00:37:44,359
permissions as well as the owner UID and

934
00:37:42,380 --> 00:37:48,320
GID when I'm trying to execute a program

935
00:37:44,359 --> 00:37:50,119
right let's say for then right

936
00:37:48,320 --> 00:37:52,820
you don't actually become that user but

937
00:37:50,119 --> 00:37:54,320
you become effectively that user it's

938
00:37:52,820 --> 00:37:56,660
sort of like that run as command again

939
00:37:54,320 --> 00:37:59,599
on Windows but when you actually have

940
00:37:56,660 --> 00:38:01,160
escalate if you use a set UID to gain a

941
00:37:59,599 --> 00:38:05,780
shell or something like that you'll see

942
00:38:01,160 --> 00:38:07,310
that your UID is not zero your II UID is

943
00:38:05,780 --> 00:38:09,109
zero so your effective you idea is

944
00:38:07,310 --> 00:38:11,240
you're still your standard user but now

945
00:38:09,109 --> 00:38:13,250
you're running has somebody else you're

946
00:38:11,240 --> 00:38:15,319
impersonating somebody else a great way

947
00:38:13,250 --> 00:38:18,050
to put it yeah your ear your acting ask

948
00:38:15,320 --> 00:38:20,329
somebody else impersonating them so this

949
00:38:18,050 --> 00:38:25,930
is what uh you know kind of set UID

950
00:38:20,329 --> 00:38:27,800
looks like so we've got a shell whoo and

951
00:38:25,930 --> 00:38:29,569
again we've got a shell

952
00:38:27,800 --> 00:38:32,420
we're gonna start taking a look you know

953
00:38:29,570 --> 00:38:34,640
who am i we're just MSF admin we're

954
00:38:32,420 --> 00:38:36,380
going to you name - are take a look at

955
00:38:34,640 --> 00:38:38,900
that and then we're going to start

956
00:38:36,380 --> 00:38:41,450
looking for files with city ID

957
00:38:38,900 --> 00:38:44,690
permission set so that's the command for

958
00:38:41,450 --> 00:38:45,919
that fine slash perm 4000 and then we

959
00:38:44,690 --> 00:38:47,359
look through that list there and we go

960
00:38:45,920 --> 00:38:50,180
okay alright well we've got a couple

961
00:38:47,359 --> 00:38:52,759
different options here that it uh and we

962
00:38:50,180 --> 00:38:53,660
see one that's and that's n map right

963
00:38:52,760 --> 00:38:56,930
and this is what we're talking about

964
00:38:53,660 --> 00:38:58,629
before is n map was installed on several

965
00:38:56,930 --> 00:39:00,348
versions of unix by default

966
00:38:58,630 --> 00:39:01,730
unfortunately it wasn't installed

967
00:39:00,349 --> 00:39:05,920
correctly and it was installed with that

968
00:39:01,730 --> 00:39:08,990
set UID bit set right so again

969
00:39:05,920 --> 00:39:11,930
pentesters we work cleanly we're going

970
00:39:08,990 --> 00:39:17,000
to go to dev sh m and write a simple

971
00:39:11,930 --> 00:39:18,460
shell script to execute bin sh as you

972
00:39:17,000 --> 00:39:23,660
know essentially you give us root access

973
00:39:18,460 --> 00:39:26,119
so we see that we've written the NSC

974
00:39:23,660 --> 00:39:29,118
script which is the nmap scripting

975
00:39:26,119 --> 00:39:32,079
engine for end map we're going to run

976
00:39:29,119 --> 00:39:36,020
our you know shell script that we made

977
00:39:32,079 --> 00:39:38,560
we're going to move from being a low

978
00:39:36,020 --> 00:39:41,540
privilege user all the way up is room

979
00:39:38,560 --> 00:39:45,020
with two lines of a simple shell script

980
00:39:41,540 --> 00:39:46,940
because nmap wasn't set correctly and

981
00:39:45,020 --> 00:39:47,509
now yeah and and so that's if you wanted

982
00:39:46,940 --> 00:39:49,640
to do so

983
00:39:47,510 --> 00:39:53,119
simple shell scripting or you could just

984
00:39:49,640 --> 00:39:55,279
run nmap as an interactive mode and you

985
00:39:53,119 --> 00:39:55,970
move from you know just a regular low

986
00:39:55,280 --> 00:39:59,180
privilege user

987
00:39:55,970 --> 00:40:02,720
up to a room user they move up whatever

988
00:39:59,180 --> 00:40:04,640
user in map is owned by and typically

989
00:40:02,720 --> 00:40:07,279
within typically and that was always on

990
00:40:04,640 --> 00:40:09,190
my route so you know they kind of fix

991
00:40:07,280 --> 00:40:11,330
that later but you can still do that

992
00:40:09,190 --> 00:40:13,430
interactive with the shell commands from

993
00:40:11,330 --> 00:40:15,500
in map you just to sent you ideas

994
00:40:13,430 --> 00:40:17,240
missing so you're just running it as

995
00:40:15,500 --> 00:40:19,280
yourself so there's not really much

996
00:40:17,240 --> 00:40:20,810
point to it but I'm sure there was a

997
00:40:19,280 --> 00:40:22,640
reason at some point he put that in

998
00:40:20,810 --> 00:40:23,960
there I don't know but yeah it was

999
00:40:22,640 --> 00:40:24,859
always a fun one when you come across

1000
00:40:23,960 --> 00:40:27,350
that yeah

1001
00:40:24,859 --> 00:40:29,029
so again if you see an map installed on

1002
00:40:27,350 --> 00:40:30,618
a UNIX system just shredder in an

1003
00:40:29,030 --> 00:40:32,930
interactive mode or write a simple bash

1004
00:40:30,619 --> 00:40:38,450
script you'd be surprised at what you

1005
00:40:32,930 --> 00:40:40,430
can do another one here so a really

1006
00:40:38,450 --> 00:40:43,279
popular way to escalate privileges

1007
00:40:40,430 --> 00:40:45,109
within Linux systems is through what's

1008
00:40:43,280 --> 00:40:47,660
called kernel exploits right and those

1009
00:40:45,109 --> 00:40:48,799
take advantage of out-of-date kernels

1010
00:40:47,660 --> 00:40:51,589
which is you know the core of what makes

1011
00:40:48,800 --> 00:40:53,390
up a you know a system is some of the

1012
00:40:51,590 --> 00:40:54,950
more popular ones were Mempa dipper

1013
00:40:53,390 --> 00:40:56,868
dirty cow

1014
00:40:54,950 --> 00:41:00,770
send page and then a recent one that

1015
00:40:56,869 --> 00:41:03,020
came at just this year this spring was

1016
00:41:00,770 --> 00:41:04,609
called dirty sock and they essentially

1017
00:41:03,020 --> 00:41:06,740
you know a lot of these are essentially

1018
00:41:04,609 --> 00:41:08,900
set it and forget it right one command

1019
00:41:06,740 --> 00:41:10,729
or a couple you know couple commands and

1020
00:41:08,900 --> 00:41:12,260
then you move from a low privileged user

1021
00:41:10,730 --> 00:41:13,880
who has no access and shouldn't be able

1022
00:41:12,260 --> 00:41:17,780
to do anything on the Box to full route

1023
00:41:13,880 --> 00:41:19,790
user access really popular one back in

1024
00:41:17,780 --> 00:41:22,880
the day was called dirty cow came out in

1025
00:41:19,790 --> 00:41:24,350
2016 I believe so it's not really that

1026
00:41:22,880 --> 00:41:26,660
old this is you know we're only we're

1027
00:41:24,350 --> 00:41:29,750
only talking about a few years here and

1028
00:41:26,660 --> 00:41:32,390
it's a it takes advantage of the the

1029
00:41:29,750 --> 00:41:33,980
kernels memory subsystem on the

1030
00:41:32,390 --> 00:41:36,859
copy-on-write that's where the cow comes

1031
00:41:33,980 --> 00:41:40,280
from breakage of read only memory

1032
00:41:36,859 --> 00:41:43,400
mappings we keep saying that some of

1033
00:41:40,280 --> 00:41:45,560
these are a little older but like 2.16

1034
00:41:43,400 --> 00:41:46,790
isn't that old for UNIX windows it is a

1035
00:41:45,560 --> 00:41:49,190
little bit but the thing is is you have

1036
00:41:46,790 --> 00:41:51,170
to understand there's a mentality among

1037
00:41:49,190 --> 00:41:54,230
a lot of system administrators for UNIX

1038
00:41:51,170 --> 00:41:56,420
in that they obsessed with uptime I was

1039
00:41:54,230 --> 00:41:58,640
when I was a UNIX administrator to you

1040
00:41:56,420 --> 00:41:59,330
like to have multiple year of times if

1041
00:41:58,640 --> 00:42:02,870
you can

1042
00:41:59,330 --> 00:42:04,910
a painting the colonel requires a reboot

1043
00:42:02,870 --> 00:42:06,799
so that's one of those things that

1044
00:42:04,910 --> 00:42:08,660
you'll probably see older versions of

1045
00:42:06,800 --> 00:42:10,970
Colonels out there unless they're in a

1046
00:42:08,660 --> 00:42:12,859
shop that requires them to do that by

1047
00:42:10,970 --> 00:42:15,830
law or saw that the administrators are

1048
00:42:12,860 --> 00:42:16,400
going to just usually install it leave

1049
00:42:15,830 --> 00:42:18,049
it alone

1050
00:42:16,400 --> 00:42:19,730
just because any change to it is going

1051
00:42:18,050 --> 00:42:22,460
to affect the stability of the system

1052
00:42:19,730 --> 00:42:25,190
possibly or require them to reboot and I

1053
00:42:22,460 --> 00:42:27,260
guess in it I don't understand why that

1054
00:42:25,190 --> 00:42:30,620
mentalities in there I had it myself but

1055
00:42:27,260 --> 00:42:33,020
people love having those triple digit

1056
00:42:30,620 --> 00:42:35,060
quad digit up times in there if you can

1057
00:42:33,020 --> 00:42:39,080
and it's just amazing so yeah it really

1058
00:42:35,060 --> 00:42:40,400
is essentially what in layman's terms

1059
00:42:39,080 --> 00:42:43,610
what this took care what this took

1060
00:42:40,400 --> 00:42:46,550
advantage of is a regular user could

1061
00:42:43,610 --> 00:42:48,530
take advantage of this flaw and gain

1062
00:42:46,550 --> 00:42:51,980
write access to boxes that should only

1063
00:42:48,530 --> 00:42:55,460
have read access okay

1064
00:42:51,980 --> 00:42:58,760
here's a list of the kernel versions

1065
00:42:55,460 --> 00:43:00,020
that were vulnerable to this and and

1066
00:42:58,760 --> 00:43:01,850
these are all you know still wrote

1067
00:43:00,020 --> 00:43:03,470
something recent and several of these we

1068
00:43:01,850 --> 00:43:06,160
still see out in the wild even today

1069
00:43:03,470 --> 00:43:08,870
like even just last week I think I saw

1070
00:43:06,160 --> 00:43:12,950
1604 with that kernel version on it and

1071
00:43:08,870 --> 00:43:15,799
I was like holy cow so this is kind of

1072
00:43:12,950 --> 00:43:22,210
what dirty count looks like so on this

1073
00:43:15,800 --> 00:43:27,020
box we got a shell whoo is it gonna play

1074
00:43:22,210 --> 00:43:29,080
last aha there goes okay so check an ID

1075
00:43:27,020 --> 00:43:32,900
we are not rude at this time we're just

1076
00:43:29,080 --> 00:43:35,150
hype I think the hype user so we're

1077
00:43:32,900 --> 00:43:37,070
gonna do you name - our and we see that

1078
00:43:35,150 --> 00:43:39,190
that kernel version is vulnerable to

1079
00:43:37,070 --> 00:43:41,810
dirty cow looking on my past list right

1080
00:43:39,190 --> 00:43:45,070
and we're going to check the the LSP

1081
00:43:41,810 --> 00:43:47,509
release there we see it is Ubuntu 12.04

1082
00:43:45,070 --> 00:43:50,390
so we're gonna do is search Boyd for

1083
00:43:47,510 --> 00:43:52,820
dirty we find and exploit their written

1084
00:43:50,390 --> 00:43:58,060
see that seems you know relatively easy

1085
00:43:52,820 --> 00:44:02,270
to use and relatively puts the word

1086
00:43:58,060 --> 00:44:06,560
relevant so we're going to copy that

1087
00:44:02,270 --> 00:44:11,210
exploit down set up our webserver we're

1088
00:44:06,560 --> 00:44:13,400
going to go back on the box and curl

1089
00:44:11,210 --> 00:44:16,730
that exploit from our

1090
00:44:13,400 --> 00:44:23,600
webserver onto the box itself so the one

1091
00:44:16,730 --> 00:44:25,640
we're hosting we've got it we've now got

1092
00:44:23,600 --> 00:44:27,890
it in on the you know use your system

1093
00:44:25,640 --> 00:44:29,299
essentially oftentimes with these

1094
00:44:27,890 --> 00:44:31,339
exploits they will have compiling

1095
00:44:29,300 --> 00:44:32,240
instructions built into the readme so

1096
00:44:31,340 --> 00:44:33,770
you just look at the compiling

1097
00:44:32,240 --> 00:44:35,419
instructions oftentimes you just copy

1098
00:44:33,770 --> 00:44:38,570
and paste it so we're going to compile

1099
00:44:35,420 --> 00:44:40,220
it we're going to run it it runs through

1100
00:44:38,570 --> 00:44:41,480
it's it's deal there it tells you hey

1101
00:44:40,220 --> 00:44:43,790
you know what kind of password do you

1102
00:44:41,480 --> 00:44:45,860
want here's the user that it's going to

1103
00:44:43,790 --> 00:44:47,300
create so the user

1104
00:44:45,860 --> 00:44:50,620
unfortunately the guys name was fire

1105
00:44:47,300 --> 00:44:55,010
part he's the developer of one of them

1106
00:44:50,620 --> 00:44:57,200
so he essentially created the user of

1107
00:44:55,010 --> 00:45:01,040
fire part backed up their old Etsy

1108
00:44:57,200 --> 00:45:03,410
passwd and now you're that user fire

1109
00:45:01,040 --> 00:45:07,220
part which is a root user with the

1110
00:45:03,410 --> 00:45:09,109
password that you set so USU which

1111
00:45:07,220 --> 00:45:11,000
changes you review over to the user fire

1112
00:45:09,110 --> 00:45:16,400
part with the password you've got and

1113
00:45:11,000 --> 00:45:20,450
now your root so yes yeah your UID 0

1114
00:45:16,400 --> 00:45:22,910
which is root and again you went from a

1115
00:45:20,450 --> 00:45:25,700
nobody from just a nobody user all the

1116
00:45:22,910 --> 00:45:27,230
way up to root with two commands one

1117
00:45:25,700 --> 00:45:29,240
thing I would say here is because it

1118
00:45:27,230 --> 00:45:32,240
this process does actually make a backup

1119
00:45:29,240 --> 00:45:34,689
of the ODA NC shadow file and it's a

1120
00:45:32,240 --> 00:45:37,490
password when you've got to this point

1121
00:45:34,690 --> 00:45:39,830
copy goes back over because otherwise

1122
00:45:37,490 --> 00:45:41,299
it's a definite telltale when they try

1123
00:45:39,830 --> 00:45:42,560
to log in there and they're logging on

1124
00:45:41,300 --> 00:45:44,090
his route for whatever reason but they

1125
00:45:42,560 --> 00:45:47,779
do and their password doesn't work

1126
00:45:44,090 --> 00:45:48,650
anymore it's because you having to clean

1127
00:45:47,780 --> 00:45:50,780
up after yourselves

1128
00:45:48,650 --> 00:45:53,000
yeah um you can always redo this later

1129
00:45:50,780 --> 00:45:54,440
if you wanted to so it doesn't cripple

1130
00:45:53,000 --> 00:45:56,240
the Box doesn't do anything you could

1131
00:45:54,440 --> 00:45:57,590
always regain access and once your route

1132
00:45:56,240 --> 00:45:59,750
you could always make another backdoor

1133
00:45:57,590 --> 00:46:03,080
resistance of some other way so you get

1134
00:45:59,750 --> 00:46:05,420
in you copy it back over and yeah don't

1135
00:46:03,080 --> 00:46:07,250
leave no logs yes don't leave things

1136
00:46:05,420 --> 00:46:09,440
laying around for sis admins to try to

1137
00:46:07,250 --> 00:46:10,760
go back and clean up after you and don't

1138
00:46:09,440 --> 00:46:12,050
like your system is out because if

1139
00:46:10,760 --> 00:46:13,370
you're on a pen test we want to you know

1140
00:46:12,050 --> 00:46:15,310
always try to remain professional and we

1141
00:46:13,370 --> 00:46:18,170
don't want to upset anybody

1142
00:46:15,310 --> 00:46:19,400
another one was dirty sock this one came

1143
00:46:18,170 --> 00:46:21,740
out the spring so when we were talking

1144
00:46:19,400 --> 00:46:25,220
about it takes advantage of a bug and

1145
00:46:21,740 --> 00:46:26,598
the snap ad API which is a default

1146
00:46:25,220 --> 00:46:29,328
service installed on many version

1147
00:46:26,599 --> 00:46:33,589
Linux it affects all versions of snap be

1148
00:46:29,329 --> 00:46:35,089
less than 237 1 and as of spring 2019 of

1149
00:46:33,589 --> 00:46:40,578
this year that was what was mostly

1150
00:46:35,089 --> 00:46:42,470
installed so again with dirty sock we do

1151
00:46:40,579 --> 00:46:44,119
our ID and you name - a kind of figure

1152
00:46:42,470 --> 00:46:45,499
out what's on the system here we want to

1153
00:46:44,119 --> 00:46:47,119
check the snap version that's another

1154
00:46:45,499 --> 00:46:48,410
command you can run so you check the

1155
00:46:47,119 --> 00:46:51,380
snap version we see that it is a

1156
00:46:48,410 --> 00:46:53,629
vulnerable version and again we're just

1157
00:46:51,380 --> 00:46:55,220
user Flores so we're gonna do a little

1158
00:46:53,630 --> 00:46:57,259
bit googling and see if we can find you

1159
00:46:55,220 --> 00:46:59,689
know dirty sock exploit with the exploit

1160
00:46:57,259 --> 00:47:02,720
database you could have done that with

1161
00:46:59,690 --> 00:47:06,319
search boy you know six one-half dozen

1162
00:47:02,720 --> 00:47:08,859
the other so we're going to pull down

1163
00:47:06,319 --> 00:47:12,619
this nice little Python script that runs

1164
00:47:08,859 --> 00:47:14,509
this dirty sock exploit set up our

1165
00:47:12,619 --> 00:47:15,920
webserver so that we could host it and

1166
00:47:14,509 --> 00:47:20,809
pull it down onto the onto the local

1167
00:47:15,920 --> 00:47:22,279
boxer CD to have sh m so that we would

1168
00:47:20,809 --> 00:47:24,769
work you know and clean up after

1169
00:47:22,279 --> 00:47:26,509
ourselves use the W get file to pull

1170
00:47:24,769 --> 00:47:29,450
that file down that we're hosting on our

1171
00:47:26,509 --> 00:47:32,059
wet on our local webserver a simple

1172
00:47:29,450 --> 00:47:35,210
little Python script and then we're

1173
00:47:32,059 --> 00:47:37,430
literally just going to run it gives you

1174
00:47:35,210 --> 00:47:39,849
a nice little graphic goes through and

1175
00:47:37,430 --> 00:47:43,489
tells you everything that it's doing

1176
00:47:39,849 --> 00:47:45,229
takes a few seconds dirty socks are kind

1177
00:47:43,489 --> 00:47:46,640
of neat because it'll sleep for a few

1178
00:47:45,229 --> 00:47:49,489
seconds after each command so you don't

1179
00:47:46,640 --> 00:47:51,319
overload the system places success you

1180
00:47:49,489 --> 00:47:55,130
can now su to the following account and

1181
00:47:51,319 --> 00:47:57,950
use sudo which is for permissions so us

1182
00:47:55,130 --> 00:48:02,809
you as dirty sock type in the password

1183
00:47:57,950 --> 00:48:04,339
which is dirty sock and now it's see in

1184
00:48:02,809 --> 00:48:07,579
that you see you've gone from Flores to

1185
00:48:04,339 --> 00:48:10,420
dirty sock and if you type ID you are

1186
00:48:07,579 --> 00:48:12,829
now essentially you're not root yet

1187
00:48:10,420 --> 00:48:14,089
that's right you got a suti to bash and

1188
00:48:12,829 --> 00:48:16,640
then when you type ID

1189
00:48:14,089 --> 00:48:18,890
you are now root so you've essentially

1190
00:48:16,640 --> 00:48:23,719
gone with two commands from the Flores

1191
00:48:18,890 --> 00:48:26,180
user all the way up to root effectively

1192
00:48:23,719 --> 00:48:28,640
for anybody's concerned it uses the

1193
00:48:26,180 --> 00:48:31,700
snappy API to make a few changes and

1194
00:48:28,640 --> 00:48:34,670
creates a new user called dirty sock and

1195
00:48:31,700 --> 00:48:38,288
then it also adds it to the Etsy sudoers

1196
00:48:34,670 --> 00:48:40,610
file to give him ability to run bash as

1197
00:48:38,289 --> 00:48:42,470
they will elevate itself

1198
00:48:40,610 --> 00:48:44,360
you do once to have to gain access to

1199
00:48:42,470 --> 00:48:48,160
the new account and another one gain

1200
00:48:44,360 --> 00:48:50,960
root so yes a couple of final plots so

1201
00:48:48,160 --> 00:48:52,460
if you want to go to the house and

1202
00:48:50,960 --> 00:48:54,080
practice any of this stuff there's

1203
00:48:52,460 --> 00:48:56,210
plenty of resources out there

1204
00:48:54,080 --> 00:48:57,920
got milk kind of started the whole

1205
00:48:56,210 --> 00:49:00,110
thought process on purpose escalation

1206
00:48:57,920 --> 00:49:02,570
back in the day so go read his blog in

1207
00:49:00,110 --> 00:49:04,010
2011 we also like thrown out other talks

1208
00:49:02,570 --> 00:49:05,900
in there folks that have done some stuff

1209
00:49:04,010 --> 00:49:07,430
so besides the gustas chick williamson

1210
00:49:05,900 --> 00:49:10,010
to talk as well as the trade craft

1211
00:49:07,430 --> 00:49:11,180
security weekly podcast and then if you

1212
00:49:10,010 --> 00:49:13,340
want to try it at home in your own home

1213
00:49:11,180 --> 00:49:15,310
lab there's hack the box which is a

1214
00:49:13,340 --> 00:49:18,380
great environment for you to learn him

1215
00:49:15,310 --> 00:49:19,730
bolt hub has plenty of vulnerable VMs

1216
00:49:18,380 --> 00:49:21,140
for you to practice on you just download

1217
00:49:19,730 --> 00:49:23,030
them locally practice on them beat on

1218
00:49:21,140 --> 00:49:25,520
them as well as bet exploitable it's

1219
00:49:23,030 --> 00:49:27,050
kind of a great starting point to learn

1220
00:49:25,520 --> 00:49:28,340
and practice and it's a really easy one

1221
00:49:27,050 --> 00:49:30,320
there's plenty of guys and walkthroughs

1222
00:49:28,340 --> 00:49:31,670
and do not feel bad about using a

1223
00:49:30,320 --> 00:49:33,110
walkthrough if you're just if you're

1224
00:49:31,670 --> 00:49:34,370
just starting this and new to this do

1225
00:49:33,110 --> 00:49:36,590
not feel bad about using a walkthrough

1226
00:49:34,370 --> 00:49:38,170
to go through and kind of learn and kind

1227
00:49:36,590 --> 00:49:41,090
of get a feel for how some of this works

1228
00:49:38,170 --> 00:49:43,190
because often times they'll be different

1229
00:49:41,090 --> 00:49:44,570
paths that even we've missed that we've

1230
00:49:43,190 --> 00:49:47,720
looked at and go oh okay that's a

1231
00:49:44,570 --> 00:49:50,360
different way to look at it so with all

1232
00:49:47,720 --> 00:49:51,980
of that being said we sincerely

1233
00:49:50,360 --> 00:49:54,980
sincerely appreciate you all coming out

1234
00:49:51,980 --> 00:49:56,450
there's our contact information we love

1235
00:49:54,980 --> 00:49:58,040
you guys thank you so much for coming

1236
00:49:56,450 --> 00:49:59,330
out and hanging out with us the same way

1237
00:49:58,040 --> 00:50:02,509
having questions

1238
00:49:59,330 --> 00:50:02,509
[Applause]

1239
00:50:07,350 --> 00:50:12,930
within the next couple hours slide deck

1240
00:50:10,380 --> 00:50:15,930
will be up on a slide chair or something

1241
00:50:12,930 --> 00:50:18,029
like that I'll send out a tweet I guess

1242
00:50:15,930 --> 00:50:19,950
you'll send out a tweet as well if you

1243
00:50:18,030 --> 00:50:21,840
want to get a copy of it then all of our

1244
00:50:19,950 --> 00:50:23,790
contact is here reach out to us if you

1245
00:50:21,840 --> 00:50:25,470
have any questions comments whatever so

1246
00:50:23,790 --> 00:50:26,970
thank you confirm thank you appreciate

1247
00:50:25,470 --> 00:50:29,359
you guys thank you so much thank you

1248
00:50:26,970 --> 00:50:29,359
Derby con

