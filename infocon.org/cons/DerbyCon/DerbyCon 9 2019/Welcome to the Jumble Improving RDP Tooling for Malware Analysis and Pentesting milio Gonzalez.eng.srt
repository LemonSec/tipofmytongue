1
00:00:03,799 --> 00:00:10,349
hi everyone welcome to our dog

2
00:00:07,830 --> 00:00:12,240
welcome to the Jumbo improving RDP

3
00:00:10,349 --> 00:00:14,429
dueling for malware analysis and pen

4
00:00:12,240 --> 00:00:16,770
testing we're gonna talk about a tool we

5
00:00:14,429 --> 00:00:18,630
build to leverage the power of being in

6
00:00:16,770 --> 00:00:20,390
the middle of a Remote Desktop Protocol

7
00:00:18,630 --> 00:00:23,820
connection

8
00:00:20,390 --> 00:00:26,039
my name is Emilio I'm a student at

9
00:00:23,820 --> 00:00:29,090
university chapbook in Quebec

10
00:00:26,039 --> 00:00:31,980
I've had several internships in

11
00:00:29,090 --> 00:00:35,820
cybersecurity related areas such as the

12
00:00:31,980 --> 00:00:38,879
c-cert which is the Canadian cert GU

13
00:00:35,820 --> 00:00:42,180
secure where I were with classes on

14
00:00:38,879 --> 00:00:44,760
priority B and lately in digital means

15
00:00:42,180 --> 00:00:47,700
trading team financial institution in

16
00:00:44,760 --> 00:00:50,010
Quebec I'm president of July which is

17
00:00:47,700 --> 00:00:52,469
invested shop books computer science

18
00:00:50,010 --> 00:00:55,218
club I really like to organize all sorts

19
00:00:52,469 --> 00:00:58,469
of events like workshops conferences

20
00:00:55,219 --> 00:01:03,290
competitions and I will I also like to

21
00:00:58,469 --> 00:01:06,300
participate in CD f's in my spare time

22
00:01:03,290 --> 00:01:07,979
everyone my name is Francis I've been an

23
00:01:06,300 --> 00:01:10,679
intern and it goes secure for about

24
00:01:07,979 --> 00:01:12,570
eight months so I did four months in the

25
00:01:10,680 --> 00:01:15,600
research team and another four months

26
00:01:12,570 --> 00:01:18,600
doing pen test mostly and I'm currently

27
00:01:15,600 --> 00:01:21,658
i'm i study at ETS which is a Technical

28
00:01:18,600 --> 00:01:24,330
University in Montreal and I'm VP

29
00:01:21,659 --> 00:01:27,360
competitions for DC IDs which is our

30
00:01:24,330 --> 00:01:31,350
local like computer science and security

31
00:01:27,360 --> 00:01:34,289
Club and also city of contestant with DC

32
00:01:31,350 --> 00:01:40,050
IDs and northern coalition are Quebec

33
00:01:34,290 --> 00:01:42,240
ERT and special mention to Mexicano for

34
00:01:40,050 --> 00:01:43,860
implementing several offensive features

35
00:01:42,240 --> 00:01:45,960
for a priority B that we're going to

36
00:01:43,860 --> 00:01:49,440
talk about here and an internship at go

37
00:01:45,960 --> 00:01:50,788
sit here this summer so the content of

38
00:01:49,440 --> 00:01:52,590
the talk we're first going to talk about

39
00:01:50,789 --> 00:01:54,330
the context and history behind higher

40
00:01:52,590 --> 00:01:55,740
dpi and why I came to life

41
00:01:54,330 --> 00:01:58,679
we're then going to talk about the two

42
00:01:55,740 --> 00:02:01,610
main use cases of pi r DP so first using

43
00:01:58,679 --> 00:02:04,320
it as an internet facing honeypot and

44
00:02:01,610 --> 00:02:06,240
using it offensively in pen test

45
00:02:04,320 --> 00:02:07,529
engagements we're then going to talk

46
00:02:06,240 --> 00:02:08,940
about how to prevent RDP

47
00:02:07,530 --> 00:02:11,780
man-in-the-middle attacks on your

48
00:02:08,940 --> 00:02:14,760
network or at least mitigate them and

49
00:02:11,780 --> 00:02:20,670
what could be the next steps for pi RDP

50
00:02:14,760 --> 00:02:23,010
in the future so when we started I go

51
00:02:20,670 --> 00:02:25,950
secure we were given a list of ideas of

52
00:02:23,010 --> 00:02:26,549
project ideas to work on and for me and

53
00:02:25,950 --> 00:02:30,480
Francis

54
00:02:26,550 --> 00:02:32,040
two of them were interesting to us the

55
00:02:30,480 --> 00:02:34,738
first one was to create kind of a

56
00:02:32,040 --> 00:02:36,870
cloaking tool for pen testers so when

57
00:02:34,739 --> 00:02:41,010
you're in the company's network and you

58
00:02:36,870 --> 00:02:43,140
want to behave we wanted to make make it

59
00:02:41,010 --> 00:02:45,090
look like to ID admins like we were a

60
00:02:43,140 --> 00:02:48,958
legitimate machine and the other one was

61
00:02:45,090 --> 00:02:51,720
at work on an RDP honeypot to see what

62
00:02:48,959 --> 00:02:54,239
kind of what we could get finally

63
00:02:51,720 --> 00:02:55,859
so yeah the defense offense duality was

64
00:02:54,239 --> 00:03:00,209
there from the start and we thought it

65
00:02:55,860 --> 00:03:01,890
was pretty cool so some people you know

66
00:03:00,209 --> 00:03:04,170
are you be a bit more might wonder why

67
00:03:01,890 --> 00:03:05,910
not this project or that project we've

68
00:03:04,170 --> 00:03:08,488
identified two projects that were

69
00:03:05,910 --> 00:03:10,470
somewhat similar to what we build but

70
00:03:08,489 --> 00:03:13,920
still difference the first one is set

71
00:03:10,470 --> 00:03:14,780
what set does it it carves the network

72
00:03:13,920 --> 00:03:17,089
and

73
00:03:14,780 --> 00:03:20,120
intercepts RDP connections to basically

74
00:03:17,090 --> 00:03:21,710
get our credentials and passively inject

75
00:03:20,120 --> 00:03:24,370
commands as well

76
00:03:21,710 --> 00:03:27,250
it's a CLI tool so it's way more limited

77
00:03:24,370 --> 00:03:30,050
it's not what we wanted for a honeypot

78
00:03:27,250 --> 00:03:31,880
and it does the ARP spoofing and we

79
00:03:30,050 --> 00:03:34,820
really didn't want to maintain that for

80
00:03:31,880 --> 00:03:36,440
that specific project the other one is

81
00:03:34,820 --> 00:03:38,510
our deep eye which is a pretty cool

82
00:03:36,440 --> 00:03:41,540
project around our DB it implement

83
00:03:38,510 --> 00:03:44,000
implement the protocol in Python and it

84
00:03:41,540 --> 00:03:47,510
records RDP session it's really cool but

85
00:03:44,000 --> 00:03:50,510
we didn't want the RDP client part the

86
00:03:47,510 --> 00:03:52,220
VNC we were mostly interested in the man

87
00:03:50,510 --> 00:03:54,290
in the middle part of it

88
00:03:52,220 --> 00:03:56,750
but who actually started the project

89
00:03:54,290 --> 00:03:59,480
from Artie PI and we forward when we

90
00:03:56,750 --> 00:04:01,790
realized that it wasn't flexible enough

91
00:03:59,480 --> 00:04:05,649
to implement cleanly the virtual

92
00:04:01,790 --> 00:04:09,500
channels so what our virtual channels

93
00:04:05,650 --> 00:04:11,240
RDP connections work with logical

94
00:04:09,500 --> 00:04:13,670
channels which are called virtual

95
00:04:11,240 --> 00:04:17,120
channels for the mouse and the keyboard

96
00:04:13,670 --> 00:04:19,339
it's the input and the graphics output

97
00:04:17,120 --> 00:04:22,040
it's the default channel but there are

98
00:04:19,339 --> 00:04:24,919
several more channels for other RDP

99
00:04:22,040 --> 00:04:27,530
modules such as sound sharing clipboard

100
00:04:24,919 --> 00:04:30,469
sharing and device redaction so you can

101
00:04:27,530 --> 00:04:33,049
share printers drives smart cars stuff

102
00:04:30,470 --> 00:04:35,900
like that existing tools they mostly

103
00:04:33,050 --> 00:04:38,570
focus on the first channel so the input

104
00:04:35,900 --> 00:04:39,890
and output Channel but we were mostly

105
00:04:38,570 --> 00:04:45,560
interested and what we could do with

106
00:04:39,890 --> 00:04:47,360
those channel so about the device

107
00:04:45,560 --> 00:04:51,080
relation channel so how are files

108
00:04:47,360 --> 00:04:54,770
transferred on an RDP connection it's

109
00:04:51,080 --> 00:04:58,550
actually pretty simple it's almost the

110
00:04:54,770 --> 00:05:00,770
same as doing it on a physical machine

111
00:04:58,550 --> 00:05:03,620
but over the network so you have create

112
00:05:00,770 --> 00:05:05,810
file calls you have read files change of

113
00:05:03,620 --> 00:05:08,750
said write files close files what's

114
00:05:05,810 --> 00:05:10,820
important is that all the file operation

115
00:05:08,750 --> 00:05:13,010
they are initiated by the server and

116
00:05:10,820 --> 00:05:15,800
it's going to be a bit important later

117
00:05:13,010 --> 00:05:19,310
on and of course multiple requests can

118
00:05:15,800 --> 00:05:21,950
be sent at once and the channel it uses

119
00:05:19,310 --> 00:05:25,069
completion ID to associate requests and

120
00:05:21,950 --> 00:05:27,690
responses to have multiple at once

121
00:05:25,069 --> 00:05:30,030
for the clipboard well to keep to

122
00:05:27,690 --> 00:05:33,389
clipboard in sinks it's actually pretty

123
00:05:30,030 --> 00:05:36,900
simple as well we just need three kind

124
00:05:33,389 --> 00:05:38,610
of messages so if I'm excited and I

125
00:05:36,900 --> 00:05:41,008
connect to an RDP server and I could be

126
00:05:38,610 --> 00:05:44,159
something on my machine my client is

127
00:05:41,009 --> 00:05:46,169
gonna tell the server my clipboard has

128
00:05:44,159 --> 00:05:48,659
been updated and if you want you can

129
00:05:46,169 --> 00:05:50,940
paste it as for example plain text or

130
00:05:48,659 --> 00:05:53,610
HTML and the server is gonna acknowledge

131
00:05:50,940 --> 00:05:55,500
that and when the server wants to paste

132
00:05:53,610 --> 00:05:57,419
the data it's gonna say okay I want the

133
00:05:55,500 --> 00:05:59,699
data as plain text please give it to me

134
00:05:57,419 --> 00:06:02,400
and the clients gonna give it and it

135
00:05:59,699 --> 00:06:06,020
works both ways so from the server to

136
00:06:02,400 --> 00:06:06,020
the client it's the same process

137
00:06:12,660 --> 00:06:16,950
so when we started a project we were

138
00:06:14,730 --> 00:06:19,360
wondering well already be facing the

139
00:06:16,950 --> 00:06:22,438
Internet is that really a thing

140
00:06:19,360 --> 00:06:24,669
and yeah it turns out yes it is

141
00:06:22,439 --> 00:06:26,590
according to show them there were more

142
00:06:24,669 --> 00:06:30,219
than 5 million IPs with the IDB port

143
00:06:26,590 --> 00:06:31,869
open and fun fact when I looked I gave

144
00:06:30,219 --> 00:06:35,439
this presentation at the North second

145
00:06:31,870 --> 00:06:38,620
May two weeks before I looked and it was

146
00:06:35,439 --> 00:06:40,840
three point nine million IPs and in the

147
00:06:38,620 --> 00:06:42,580
meantime blue key went out so for some

148
00:06:40,840 --> 00:06:45,388
reason since blue key there are a

149
00:06:42,580 --> 00:06:45,389
million more IPs

150
00:06:45,419 --> 00:06:53,258
yeah maybe most of them are honey buds

151
00:06:48,900 --> 00:06:55,120
so it's still much as an ssh with but

152
00:06:53,259 --> 00:06:56,710
still a big number to consider

153
00:06:55,120 --> 00:06:59,139
the big challenge with our DP of course

154
00:06:56,710 --> 00:07:01,419
it's it's Kiwi based so it's much harder

155
00:06:59,139 --> 00:07:04,659
to automate tasks with it versus SSH

156
00:07:01,419 --> 00:07:06,039
where you can just chain commands and we

157
00:07:04,659 --> 00:07:08,889
were wondering what kind of connections

158
00:07:06,039 --> 00:07:11,259
would we get with their be credentials

159
00:07:08,889 --> 00:07:13,240
brute force would there be manual

160
00:07:11,259 --> 00:07:14,830
connection at all with they all be

161
00:07:13,240 --> 00:07:16,569
automatic with their the unleased

162
00:07:14,830 --> 00:07:18,758
service scans and what kind of well you

163
00:07:16,569 --> 00:07:22,719
can race back with the be two

164
00:07:18,759 --> 00:07:23,979
connections birthday 200 2000 with those

165
00:07:22,719 --> 00:07:26,919
questions in mind we implemented

166
00:07:23,979 --> 00:07:28,960
features for that specific use case one

167
00:07:26,919 --> 00:07:31,659
of the feature we implemented was to

168
00:07:28,960 --> 00:07:33,039
allow for any credentials to work so

169
00:07:31,659 --> 00:07:36,159
since we're in the middle of the

170
00:07:33,039 --> 00:07:38,259
connections we can change that and so

171
00:07:36,159 --> 00:07:40,479
whenever a client connects we can simply

172
00:07:38,259 --> 00:07:43,569
change the values and names to valid

173
00:07:40,479 --> 00:07:45,580
ones so the client is connected and

174
00:07:43,569 --> 00:07:47,169
doesn't need to brute force and we

175
00:07:45,580 --> 00:07:48,669
thought that could be useful for fully

176
00:07:47,169 --> 00:07:51,698
automated attacks where credentials

177
00:07:48,669 --> 00:07:53,650
would get brute force and then upon

178
00:07:51,699 --> 00:07:58,089
successful connection something nasty

179
00:07:53,650 --> 00:08:00,969
and automatic would happen for the

180
00:07:58,089 --> 00:08:02,469
device detection ciao well since we see

181
00:08:00,969 --> 00:08:04,539
everything in the middle of the

182
00:08:02,469 --> 00:08:06,430
connection whenever a file gets

183
00:08:04,539 --> 00:08:10,389
transferred by OTP can save a copy of it

184
00:08:06,430 --> 00:08:13,389
to disk so say I'm a client an evil

185
00:08:10,389 --> 00:08:16,000
client and I transfer to a server evil

186
00:08:13,389 --> 00:08:18,430
script out bad well parity be saves a

187
00:08:16,000 --> 00:08:20,169
copy of it to this so even if you run it

188
00:08:18,430 --> 00:08:24,629
on the server and delete it afterward I

189
00:08:20,169 --> 00:08:26,560
can still be retrieved with my IDP and

190
00:08:24,629 --> 00:08:29,479
obviously we thought that could be

191
00:08:26,560 --> 00:08:31,830
useful for malware analysis

192
00:08:29,479 --> 00:08:33,689
porta clipboard well we do something

193
00:08:31,830 --> 00:08:37,439
similar so whenever something gets

194
00:08:33,690 --> 00:08:42,560
pasted by ODB save copy of it and in the

195
00:08:37,440 --> 00:08:42,560
replay we can see it afterward

196
00:08:50,210 --> 00:08:56,089
and recently of course with blue tip we

197
00:08:52,910 --> 00:08:59,990
added a large statements to build stats

198
00:08:56,089 --> 00:09:02,320
around blue keep exploited them it's a

199
00:08:59,990 --> 00:09:07,520
really simple thing so whenever the the

200
00:09:02,320 --> 00:09:08,959
blue keep channel gets open we log will

201
00:09:07,520 --> 00:09:12,350
again and we can build stats around it

202
00:09:08,959 --> 00:09:14,569
so of course lately we've seen mostly

203
00:09:12,350 --> 00:09:17,839
blue deep exploits attempts or at least

204
00:09:14,570 --> 00:09:19,610
scans on the internet and we also like

205
00:09:17,839 --> 00:09:21,920
metrics about connections connection

206
00:09:19,610 --> 00:09:25,430
duration the ratio of input output

207
00:09:21,920 --> 00:09:28,160
packets so for thematic connections or

208
00:09:25,430 --> 00:09:31,640
simply service scans the input packets

209
00:09:28,160 --> 00:09:34,310
are pretty rare so if you have a lot of

210
00:09:31,640 --> 00:09:35,540
input packets it can mean a manual

211
00:09:34,310 --> 00:09:44,959
connection with someone actually

212
00:09:35,540 --> 00:09:47,800
interacting with the RDP honeypot so I

213
00:09:44,959 --> 00:10:00,279
need to check that

214
00:09:47,800 --> 00:10:08,370
I actually had a pretty rough night with

215
00:10:00,279 --> 00:10:08,370
the party yesterday I'm not it is

216
00:10:21,220 --> 00:10:26,890
[Applause]

217
00:10:23,440 --> 00:10:26,890
one another one

218
00:10:38,920 --> 00:10:42,709
all right

219
00:10:40,400 --> 00:10:45,430
but yeah bosses during his fair share

220
00:10:42,710 --> 00:10:45,430
last night

221
00:10:47,480 --> 00:10:55,820
um where was I

222
00:10:52,870 --> 00:10:57,890
so yeah those help identify potential

223
00:10:55,820 --> 00:11:02,360
interesting connections and build

224
00:10:57,890 --> 00:11:04,490
statistics so even before we had all

225
00:11:02,360 --> 00:11:06,530
those features implemented we wanted to

226
00:11:04,490 --> 00:11:08,660
test fire TV as soon as possible so when

227
00:11:06,530 --> 00:11:10,189
we had a working version of it we expose

228
00:11:08,660 --> 00:11:13,370
it on the Internet to see how it would

229
00:11:10,190 --> 00:11:15,140
behave against wild inputs our setup was

230
00:11:13,370 --> 00:11:17,210
pretty simple so we had an Ubuntu VM

231
00:11:15,140 --> 00:11:20,270
running PI RDP that would redirect the

232
00:11:17,210 --> 00:11:22,820
traffic to Windows Server 2008 personal

233
00:11:20,270 --> 00:11:25,699
machine with RDP enable but only

234
00:11:22,820 --> 00:11:27,650
accessible by PI R DB so all the RDP

235
00:11:25,700 --> 00:11:31,450
connections that went to the Windows

236
00:11:27,650 --> 00:11:34,970
machine would be a monitored by PI or DB

237
00:11:31,450 --> 00:11:36,070
so I have a little bit of data to share

238
00:11:34,970 --> 00:11:39,590
[Music]

239
00:11:36,070 --> 00:11:41,630
this this is for about a week of data on

240
00:11:39,590 --> 00:11:42,530
the Left this is the number of TCP

241
00:11:41,630 --> 00:11:44,840
connections birthday

242
00:11:42,530 --> 00:11:46,400
so at its peak it's about a bit more

243
00:11:44,840 --> 00:11:49,340
than a thousand which can seem like a

244
00:11:46,400 --> 00:11:51,770
lot but I need to add that we had an

245
00:11:49,340 --> 00:11:58,100
entire slash 24 subnet redirecting to

246
00:11:51,770 --> 00:11:59,449
our open to VM so this is actually a

247
00:11:58,100 --> 00:12:02,030
thousand connections for dozens of

248
00:11:59,450 --> 00:12:04,070
machines so it's not that much

249
00:12:02,030 --> 00:12:06,530
we had some credential group first you

250
00:12:04,070 --> 00:12:08,930
can see there some of the usernames that

251
00:12:06,530 --> 00:12:12,860
have been tried obviously administrator

252
00:12:08,930 --> 00:12:15,770
admin and into stuff like that you can

253
00:12:12,860 --> 00:12:18,260
see the most popular one is hello hello

254
00:12:15,770 --> 00:12:21,530
is simply a lovely name for a service

255
00:12:18,260 --> 00:12:24,340
scanner so just to see if we're actually

256
00:12:21,530 --> 00:12:24,339
an RDP server

257
00:12:24,690 --> 00:12:30,600
when you connect in using RDP you you

258
00:12:28,290 --> 00:12:32,610
send your exciting computer name to the

259
00:12:30,600 --> 00:12:34,800
server so we can also build stats around

260
00:12:32,610 --> 00:12:39,710
that we can see people using our desktop

261
00:12:34,800 --> 00:12:42,660
and some lead hackers using caddy and I

262
00:12:39,710 --> 00:12:46,680
you might wonder what this a user is

263
00:12:42,660 --> 00:12:50,699
about it's more tome morto is an old RDP

264
00:12:46,680 --> 00:12:55,020
worm with also a weird screen size you

265
00:12:50,700 --> 00:12:58,650
can see there a 10 by 107 actually more

266
00:12:55,020 --> 00:13:00,150
tool doesn't respect the RDP protocol so

267
00:12:58,650 --> 00:13:03,420
we weren't able to complete the

268
00:13:00,150 --> 00:13:06,870
connection sequence with it and the RDP

269
00:13:03,420 --> 00:13:11,280
client the RDP server on Windows is way

270
00:13:06,870 --> 00:13:13,200
more loose in allowing non-standard RDP

271
00:13:11,280 --> 00:13:15,240
to work so that could change in the

272
00:13:13,200 --> 00:13:17,990
future and we could analyze it but we

273
00:13:15,240 --> 00:13:20,580
need to tackle this problem separately

274
00:13:17,990 --> 00:13:22,710
perhaps the most interesting type of

275
00:13:20,580 --> 00:13:25,500
connections we got was a condition where

276
00:13:22,710 --> 00:13:28,350
someone will connect wait for about 5

277
00:13:25,500 --> 00:13:30,210
seconds press shift 5 times triggering

278
00:13:28,350 --> 00:13:32,460
the sticky key is executable and then

279
00:13:30,210 --> 00:13:34,290
disconnect and we found out that this is

280
00:13:32,460 --> 00:13:37,740
actually an open source tool on github

281
00:13:34,290 --> 00:13:41,939
called sticky keys layer that scans the

282
00:13:37,740 --> 00:13:44,670
internet for a specific type of backdoor

283
00:13:41,940 --> 00:13:48,920
where someone would replace the sticky

284
00:13:44,670 --> 00:13:53,250
keys a suitable with CMD giving an

285
00:13:48,920 --> 00:13:55,290
unauthenticated show basically so we

286
00:13:53,250 --> 00:13:58,320
thought well if someone scans for those

287
00:13:55,290 --> 00:14:00,810
things if we compromised ourselves maybe

288
00:13:58,320 --> 00:14:02,790
someone will come back so this is

289
00:14:00,810 --> 00:14:06,510
exactly what we did we implemented the

290
00:14:02,790 --> 00:14:08,939
backdoor and we waited and several days

291
00:14:06,510 --> 00:14:11,730
later our VM creds had been changed so

292
00:14:08,940 --> 00:14:13,230
we've been compromised and we were all

293
00:14:11,730 --> 00:14:16,200
excited about that so we come looking

294
00:14:13,230 --> 00:14:18,690
for a replay and we didn't find it and

295
00:14:16,200 --> 00:14:22,590
this was caused by a bug in the PI or DP

296
00:14:18,690 --> 00:14:27,110
that obviously we fixed by now but

297
00:14:22,590 --> 00:14:29,610
fortunately for us we add P caps and

298
00:14:27,110 --> 00:14:31,650
priority B still lock the TLS master

299
00:14:29,610 --> 00:14:33,510
secrets so we had everything we needed

300
00:14:31,650 --> 00:14:35,760
to decrypt the connection so using

301
00:14:33,510 --> 00:14:38,760
priority peace functions we rebuild a

302
00:14:35,760 --> 00:14:40,439
replay from the pcap and i'm going to

303
00:14:38,760 --> 00:14:45,720
show you what the interesting

304
00:14:40,440 --> 00:14:49,670
connections were so we need name the

305
00:14:45,720 --> 00:14:49,670
directory after

306
00:14:51,939 --> 00:14:53,998
you

307
00:15:30,400 --> 00:15:35,709
so we name in the ballot or day be

308
00:15:32,560 --> 00:15:37,689
because parody P logs different

309
00:15:35,710 --> 00:15:39,270
connections with a friendly name and for

310
00:15:37,690 --> 00:15:42,220
this way with Debbie

311
00:15:39,270 --> 00:15:45,189
so I Debbie connects and press it all

312
00:15:42,220 --> 00:15:48,850
shift 5 times opens the CMD and lists

313
00:15:45,190 --> 00:15:51,220
the users Debbie finds out that the the

314
00:15:48,850 --> 00:15:54,460
administrator on the machine is Baron

315
00:15:51,220 --> 00:15:59,279
and then proceed to change parents

316
00:15:54,460 --> 00:15:59,279
password to admin that one

317
00:15:59,670 --> 00:16:08,040
then using the new controls Debbie

318
00:16:04,089 --> 00:16:08,040
connects to our machine

319
00:16:12,040 --> 00:16:18,130
and looks for some basic information on

320
00:16:16,180 --> 00:16:21,400
the computer this is what's interesting

321
00:16:18,130 --> 00:16:23,950
for at the first connection the second

322
00:16:21,400 --> 00:16:26,699
connection which came right after about

323
00:16:23,950 --> 00:16:26,700
a minute after

324
00:16:37,199 --> 00:16:45,248
so they open Cindy once again but this

325
00:16:41,559 --> 00:16:48,669
time opens task manager and connects to

326
00:16:45,249 --> 00:16:58,419
Baron still connected using right-click

327
00:16:48,669 --> 00:17:01,359
and connect and then with a CMD pastes a

328
00:16:58,419 --> 00:17:04,539
path which is backslash backslash yes

329
00:17:01,359 --> 00:17:06,699
lion backslash Oh pad and backslash

330
00:17:04,539 --> 00:17:09,490
backslash T Alliant is the path when you

331
00:17:06,699 --> 00:17:11,769
share a drive locally for the RDP

332
00:17:09,490 --> 00:17:14,949
connection so they be sure it's drive

333
00:17:11,769 --> 00:17:18,878
and transferred all that bad to the

334
00:17:14,949 --> 00:17:20,860
Machine and executed so priority B

335
00:17:18,878 --> 00:17:23,289
obviously saved a copy of the file to

336
00:17:20,859 --> 00:17:25,359
disk so we could review it and see what

337
00:17:23,289 --> 00:17:29,230
it was that file transferred to other

338
00:17:25,359 --> 00:17:33,189
files and it was a crypto minor and lime

339
00:17:29,230 --> 00:17:37,120
rat which is an open source rat on

340
00:17:33,190 --> 00:17:40,840
github and so this obviously was the

341
00:17:37,120 --> 00:17:42,789
last RDP connection from Devi after that

342
00:17:40,840 --> 00:17:44,559
they used a wrap

343
00:17:42,789 --> 00:17:46,779
what's interesting is that they deleted

344
00:17:44,559 --> 00:17:50,428
oh that bad so without a by OTP we

345
00:17:46,779 --> 00:17:50,429
wouldn't have a copy of the file

346
00:17:57,370 --> 00:18:02,290
so yeah Manuel reckon Manuel conditions

347
00:18:00,190 --> 00:18:04,810
after automatic recognitions

348
00:18:02,290 --> 00:18:06,909
seems the preferred first step to

349
00:18:04,810 --> 00:18:10,510
compromise already be hosts I'm putting

350
00:18:06,910 --> 00:18:13,360
aside obviously the new exploits a blue

351
00:18:10,510 --> 00:18:15,610
team and search and we've seen it used

352
00:18:13,360 --> 00:18:17,500
in a while I've linked to articles the

353
00:18:15,610 --> 00:18:19,659
first one describes a wave of ransomware

354
00:18:17,500 --> 00:18:20,260
attacks where credentials would get

355
00:18:19,660 --> 00:18:22,390
brute force

356
00:18:20,260 --> 00:18:24,780
automatically and then someone would

357
00:18:22,390 --> 00:18:27,250
manually connect later and quote-unquote

358
00:18:24,780 --> 00:18:29,590
cleanly infect a machine with a

359
00:18:27,250 --> 00:18:33,640
ransomware by deleting backups and stuff

360
00:18:29,590 --> 00:18:36,610
and the second article is David Kennedy

361
00:18:33,640 --> 00:18:38,890
from trusted tech who built an RDP

362
00:18:36,610 --> 00:18:41,679
honeypot and it's a three part

363
00:18:38,890 --> 00:18:44,770
blog post I recommend you read them it's

364
00:18:41,680 --> 00:18:46,990
really interesting but what's most

365
00:18:44,770 --> 00:18:49,180
interesting is that he faced a lot of

366
00:18:46,990 --> 00:18:52,810
challenges with that and most of the

367
00:18:49,180 --> 00:18:54,850
challenges he faced are problems that

368
00:18:52,810 --> 00:18:56,980
priority B addresses so seeing the

369
00:18:54,850 --> 00:18:59,709
replays of the connections we do that

370
00:18:56,980 --> 00:19:02,230
saving file that is transferred we do

371
00:18:59,710 --> 00:19:05,050
that and seeing what credentials were

372
00:19:02,230 --> 00:19:06,880
tried and stuff we also do that so yeah

373
00:19:05,050 --> 00:19:09,040
we think Peyer DP is a great tool to

374
00:19:06,880 --> 00:19:11,560
document tactics techniques procedures

375
00:19:09,040 --> 00:19:13,570
of the like you're using RDP and that in

376
00:19:11,560 --> 00:19:15,129
the future we can do a lot of a lot of

377
00:19:13,570 --> 00:19:17,379
cool stuff with it

378
00:19:15,130 --> 00:19:20,080
so now Constance is going to talk about

379
00:19:17,380 --> 00:19:22,710
using IR dB offensively in pen test

380
00:19:20,080 --> 00:19:22,710
engagements

381
00:19:23,270 --> 00:19:29,129
all right thanks Emilio so first we're

382
00:19:27,780 --> 00:19:32,270
going to talk about why it's relevant

383
00:19:29,130 --> 00:19:34,500
adventists well RTP is often used like

384
00:19:32,270 --> 00:19:37,650
everywhere in companies to administrate

385
00:19:34,500 --> 00:19:39,750
workstations and servers and so and a

386
00:19:37,650 --> 00:19:43,290
lot of the clients that we added here

387
00:19:39,750 --> 00:19:45,540
actually hadn't enabled like we're not

388
00:19:43,290 --> 00:19:49,649
using a proper PKI or using like a

389
00:19:45,540 --> 00:19:52,710
network level authentication and so that

390
00:19:49,650 --> 00:19:55,020
meant that the RDP environment was not

391
00:19:52,710 --> 00:19:56,550
as secure as they could be we're going

392
00:19:55,020 --> 00:19:58,950
to talk more about inally in the

393
00:19:56,550 --> 00:20:00,990
mitigation section but basically it's

394
00:19:58,950 --> 00:20:04,920
it's a feature designed to prevent many

395
00:20:00,990 --> 00:20:08,250
terminals also our spoofing is still a

396
00:20:04,920 --> 00:20:09,960
big problem and so you can if you have

397
00:20:08,250 --> 00:20:11,670
our spoofing you can use it to redirect

398
00:20:09,960 --> 00:20:16,200
to your own VM we're going to talk about

399
00:20:11,670 --> 00:20:21,090
that also and also as the other like

400
00:20:16,200 --> 00:20:23,160
more common like exploit techniques will

401
00:20:21,090 --> 00:20:25,470
be more much more and more patched out

402
00:20:23,160 --> 00:20:29,429
we think is gonna be a bit more of a

403
00:20:25,470 --> 00:20:33,420
problem so here is the the RDP RDP

404
00:20:29,429 --> 00:20:36,510
player this is basically like the sort

405
00:20:33,420 --> 00:20:38,309
of the command center or the the main

406
00:20:36,510 --> 00:20:42,020
window for the attacker did that you

407
00:20:38,309 --> 00:20:46,139
would use for like the manual features

408
00:20:42,020 --> 00:20:48,000
so one of the features is being able to

409
00:20:46,140 --> 00:20:50,340
steal the keystrokes and credentials

410
00:20:48,000 --> 00:20:52,740
this all happens in the text box at the

411
00:20:50,340 --> 00:20:56,820
bottom so you can see the key presses

412
00:20:52,740 --> 00:21:00,150
and this is also used to show keyboard

413
00:20:56,820 --> 00:21:03,178
contents so another thing where we have

414
00:21:00,150 --> 00:21:05,910
this is thanks to our deep I its screen

415
00:21:03,179 --> 00:21:09,110
recording so basically not on not only

416
00:21:05,910 --> 00:21:12,240
do we record sessions as they happen but

417
00:21:09,110 --> 00:21:14,219
we also you with the player you can see

418
00:21:12,240 --> 00:21:17,340
them happening live so you actually have

419
00:21:14,220 --> 00:21:18,750
the same output as the legitimate user

420
00:21:17,340 --> 00:21:22,350
you can say everything that they're

421
00:21:18,750 --> 00:21:24,030
doing and you can use this to keep

422
00:21:22,350 --> 00:21:25,860
traces all right what you've done to

423
00:21:24,030 --> 00:21:27,120
management yes

424
00:21:25,860 --> 00:21:28,919
you know they accuse you of something

425
00:21:27,120 --> 00:21:31,389
wrong you you can just say like here's

426
00:21:28,920 --> 00:21:35,420
the proof and then do this

427
00:21:31,390 --> 00:21:37,970
so we have also a feature to steal

428
00:21:35,420 --> 00:21:40,460
clipboard contents so the way this works

429
00:21:37,970 --> 00:21:43,330
is since we're in the middle or like

430
00:21:40,460 --> 00:21:46,250
Emilio said the server is gonna receive

431
00:21:43,330 --> 00:21:48,679
messages that say that the clipboard

432
00:21:46,250 --> 00:21:50,960
contents have changed and then what we

433
00:21:48,680 --> 00:21:52,180
can do as a fakes like as a man in the

434
00:21:50,960 --> 00:21:54,980
middle

435
00:21:52,180 --> 00:21:57,980
once we receive a message that says the

436
00:21:54,980 --> 00:22:00,950
contents have changed we can just inject

437
00:21:57,980 --> 00:22:03,470
a fake paste request and so this paste

438
00:22:00,950 --> 00:22:05,890
request is sent to the user and then

439
00:22:03,470 --> 00:22:08,270
this comes back to us

440
00:22:05,890 --> 00:22:10,130
we see the contents but we never

441
00:22:08,270 --> 00:22:16,760
actually send the response back to the

442
00:22:10,130 --> 00:22:19,100
server we also have a sort of little

443
00:22:16,760 --> 00:22:23,270
file browser in the bottom on the bottom

444
00:22:19,100 --> 00:22:25,429
left of the screen and basically like

445
00:22:23,270 --> 00:22:27,530
mediaset all the the file operations are

446
00:22:25,430 --> 00:22:29,270
initiated by the server this means that

447
00:22:27,530 --> 00:22:32,210
as a man-in-the-middle we can just

448
00:22:29,270 --> 00:22:36,650
inject fake requests to read and write

449
00:22:32,210 --> 00:22:38,270
files to the to the clients and what we

450
00:22:36,650 --> 00:22:39,860
do with this is we can just like browse

451
00:22:38,270 --> 00:22:42,889
all their files that they shared through

452
00:22:39,860 --> 00:22:46,030
the shared Drive feature and just

453
00:22:42,890 --> 00:22:46,030
download anything that looks interesting

454
00:22:47,050 --> 00:22:51,020
so this is a bit how it works

455
00:22:49,370 --> 00:22:52,639
normally if you want to look at a

456
00:22:51,020 --> 00:22:56,540
picture of a cat is the server that

457
00:22:52,640 --> 00:22:59,150
sends the actual requests for the the

458
00:22:56,540 --> 00:23:01,520
path and for a file and this request is

459
00:22:59,150 --> 00:23:04,670
forwarded to the client what we do as a

460
00:23:01,520 --> 00:23:06,650
man is we just send the arbitrary file

461
00:23:04,670 --> 00:23:09,010
requests at any time that the attacker

462
00:23:06,650 --> 00:23:09,010
wants

463
00:23:11,440 --> 00:23:16,269
if we can also hijack sessions

464
00:23:14,549 --> 00:23:18,850
administration for that but basically

465
00:23:16,269 --> 00:23:21,429
you replace your the clients input with

466
00:23:18,850 --> 00:23:23,918
your own input and you just block their

467
00:23:21,429 --> 00:23:25,419
output so to them it just kind of looks

468
00:23:23,919 --> 00:23:29,200
like a bit of lag or something like that

469
00:23:25,419 --> 00:23:30,940
and the can possibly use this to hide

470
00:23:29,200 --> 00:23:35,440
reactions beyond illegitimate legitimate

471
00:23:30,940 --> 00:23:37,330
users actions like in like if you're

472
00:23:35,440 --> 00:23:39,250
monitoring the network you don't see

473
00:23:37,330 --> 00:23:41,350
that another connection has been made

474
00:23:39,250 --> 00:23:45,070
because you're using the same session

475
00:23:41,350 --> 00:23:48,129
that was actually legitimate and with

476
00:23:45,070 --> 00:23:50,260
this hijacking feature you can this this

477
00:23:48,130 --> 00:23:52,870
other feature which is since the Qun

478
00:23:50,260 --> 00:23:56,320
sits you can inject like arbitrary input

479
00:23:52,870 --> 00:23:59,110
read input packets you can just send

480
00:23:56,320 --> 00:24:00,908
predefined key sequences so what you do

481
00:23:59,110 --> 00:24:03,100
with this is you can send like windows

482
00:24:00,909 --> 00:24:06,519
are so open up the run menu and open up

483
00:24:03,100 --> 00:24:07,750
like CMD and just are seen their

484
00:24:06,519 --> 00:24:09,820
powershell and just type whatever

485
00:24:07,750 --> 00:24:12,100
payload that you want and then just send

486
00:24:09,820 --> 00:24:16,899
a fake Enter key and then your payload

487
00:24:12,100 --> 00:24:18,158
is going to be run and the the way the

488
00:24:16,899 --> 00:24:22,539
way that we thought you would use with

489
00:24:18,159 --> 00:24:25,000
PI or DB is since its agnostic to the

490
00:24:22,539 --> 00:24:26,110
network management link technique we

491
00:24:25,000 --> 00:24:28,480
talked about how we didn't want to

492
00:24:26,110 --> 00:24:30,309
maintain like our spoofing you need to

493
00:24:28,480 --> 00:24:37,720
use it like in combination with another

494
00:24:30,309 --> 00:24:39,549
man in the middle so what we did is well

495
00:24:37,720 --> 00:24:43,210
what our colleagues it is it degraded it

496
00:24:39,549 --> 00:24:46,570
with like a better cap so every time

497
00:24:43,210 --> 00:24:48,580
that better cap like intercepts a

498
00:24:46,570 --> 00:24:50,168
connection it's gonna launch a new party

499
00:24:48,580 --> 00:24:52,299
be instance and it's gonna it's going to

500
00:24:50,169 --> 00:24:55,649
redirect the user to the proper

501
00:24:52,299 --> 00:24:55,649
destination that a expect

502
00:24:55,840 --> 00:25:04,439
and finally another use case that you

503
00:25:00,400 --> 00:25:06,460
can use is you can redirect the

504
00:25:04,440 --> 00:25:09,220
connection to your own virtual machine

505
00:25:06,460 --> 00:25:11,500
so obviously in this situation you don't

506
00:25:09,220 --> 00:25:14,110
care about the server but you can still

507
00:25:11,500 --> 00:25:15,960
use it to compromise the client so for

508
00:25:14,110 --> 00:25:18,669
example you can still steal credentials

509
00:25:15,960 --> 00:25:21,640
you can still read the drives that they

510
00:25:18,670 --> 00:25:26,940
shared because if they're sharing any

511
00:25:21,640 --> 00:25:29,020
you can still steal clipboard contents

512
00:25:26,940 --> 00:25:31,630
basically yeah it's it's used to

513
00:25:29,020 --> 00:25:34,590
compromise clients so not like RDP has

514
00:25:31,630 --> 00:25:37,210
this set of features that allows it to

515
00:25:34,590 --> 00:25:40,600
to add this this powerful impact on it

516
00:25:37,210 --> 00:25:42,700
on a client so and one of the use case

517
00:25:40,600 --> 00:25:45,370
that we we'd sort of conceived at the

518
00:25:42,700 --> 00:25:47,890
beginning of this project was say you're

519
00:25:45,370 --> 00:25:50,500
in a dire situation you don't know like

520
00:25:47,890 --> 00:25:52,360
what to do and you you have a like a

521
00:25:50,500 --> 00:25:54,340
last Hail Mary which is like I'm just

522
00:25:52,360 --> 00:25:56,770
gonna make a lot of noise on my DM and

523
00:25:54,340 --> 00:26:00,250
hope that a bunch of internet response

524
00:25:56,770 --> 00:26:02,170
admins like try to connect to it to see

525
00:26:00,250 --> 00:26:03,760
like what's wrong with it and in reality

526
00:26:02,170 --> 00:26:08,250
you're just running like by RDP and

527
00:26:03,760 --> 00:26:12,190
you're stealing their attentions and

528
00:26:08,250 --> 00:26:13,510
another couple of features was now you

529
00:26:12,190 --> 00:26:15,160
can ask you can actually see the

530
00:26:13,510 --> 00:26:19,180
credentials that were used on the

531
00:26:15,160 --> 00:26:22,630
command line if if like RDP dr is

532
00:26:19,180 --> 00:26:24,880
enabled because of details you can also

533
00:26:22,630 --> 00:26:26,500
down all the entire folders you don't

534
00:26:24,880 --> 00:26:30,340
have to go through every folder in

535
00:26:26,500 --> 00:26:32,890
donald every single file and uh we have

536
00:26:30,340 --> 00:26:35,139
now also an automatic shared drive

537
00:26:32,890 --> 00:26:37,150
crawlers so basically when you show your

538
00:26:35,140 --> 00:26:39,370
drive this crawler is going to look at

539
00:26:37,150 --> 00:26:41,260
every every folder that's used in this

540
00:26:39,370 --> 00:26:42,850
drive and it's going to match a pattern

541
00:26:41,260 --> 00:26:45,100
to try to find that interesting files

542
00:26:42,850 --> 00:26:47,409
and it will tunnel them to the the

543
00:26:45,100 --> 00:26:50,290
attackers machine

544
00:26:47,410 --> 00:26:53,830
so now we're going to do a demo

545
00:26:50,290 --> 00:26:53,830
everything I talked about

546
00:26:58,620 --> 00:27:10,199
we just power this up so what I have all

547
00:27:07,260 --> 00:27:13,140
right so on my machine I have this huge

548
00:27:10,200 --> 00:27:15,419
client this is gonna be my sake already

549
00:27:13,140 --> 00:27:22,279
be client and attacker is my attacker

550
00:27:15,419 --> 00:27:24,360
machine so on my client actually have a

551
00:27:22,279 --> 00:27:25,860
couple files you're gonna see the

552
00:27:24,360 --> 00:27:30,779
crawler is gonna download them so here's

553
00:27:25,860 --> 00:27:33,719
a file called password policy xkcd

554
00:27:30,779 --> 00:27:36,330
password generator and in secret you

555
00:27:33,720 --> 00:27:39,480
have password dot txt and password they

556
00:27:36,330 --> 00:27:41,760
keep as well so the crawl is going to

557
00:27:39,480 --> 00:27:47,700
download all these files we need when a

558
00:27:41,760 --> 00:27:49,260
connection is made so and you can see

559
00:27:47,700 --> 00:27:52,049
right now the only thing I have in my

560
00:27:49,260 --> 00:27:54,179
tech your machine is PI OTP and file -

561
00:27:52,049 --> 00:27:56,399
that basically describes what you want

562
00:27:54,179 --> 00:28:00,360
to grow so this file just looks like

563
00:27:56,399 --> 00:28:01,620
this you just use like a pattern alright

564
00:28:00,360 --> 00:28:03,860
pretty simple it's going to download all

565
00:28:01,620 --> 00:28:09,620
the files that I've passed really doing

566
00:28:03,860 --> 00:28:09,620
so I'm going to launch a launcher player

567
00:28:11,150 --> 00:28:17,450
launched the actual man-in-the-middle

568
00:28:12,980 --> 00:28:19,910
it's not gonna do I don't know

569
00:28:17,450 --> 00:28:23,210
basically so we have we set our target

570
00:28:19,910 --> 00:28:25,540
here we set the player IP and to use the

571
00:28:23,210 --> 00:28:27,980
crawler you have to use this scroll and

572
00:28:25,540 --> 00:28:28,780
pass it the text file that I just showed

573
00:28:27,980 --> 00:28:33,680
you

574
00:28:28,780 --> 00:28:36,830
so launch that then I'm going to connect

575
00:28:33,680 --> 00:28:44,300
using right now I'm using three RDV to

576
00:28:36,830 --> 00:28:46,610
pin it and I just want to mention at the

577
00:28:44,300 --> 00:28:50,649
top here I'm sharing the drive that is

578
00:28:46,610 --> 00:28:50,649
called home user demo client

579
00:28:56,840 --> 00:29:03,289
so here I have at the right the rdp

580
00:28:59,870 --> 00:29:05,090
window and on the left you can see this

581
00:29:03,289 --> 00:29:06,710
is what the attacker sees in the in the

582
00:29:05,090 --> 00:29:12,769
player so you can see everything that's

583
00:29:06,710 --> 00:29:15,080
happening like in real time so you might

584
00:29:12,769 --> 00:29:19,039
have noticed at the bottom as I'm typing

585
00:29:15,080 --> 00:29:21,830
stuff like open notepad it's just text

586
00:29:19,039 --> 00:29:23,179
at the bottom this is all the like I

587
00:29:21,830 --> 00:29:25,820
said the text box at the bottom just

588
00:29:23,179 --> 00:29:29,470
shows every single key press and at the

589
00:29:25,820 --> 00:29:31,850
top here you're gonna see a log of their

590
00:29:29,470 --> 00:29:35,440
credentials that I use to connect so you

591
00:29:31,850 --> 00:29:38,209
it's ie user and password is password

592
00:29:35,440 --> 00:29:41,690
the text box as I mentioned is also used

593
00:29:38,210 --> 00:29:43,309
to steal clipboard contents and what's

594
00:29:41,690 --> 00:29:45,889
interesting with that is you don't have

595
00:29:43,309 --> 00:29:47,928
to actually base the data and as long as

596
00:29:45,889 --> 00:29:50,330
you you copy it a message is going to be

597
00:29:47,929 --> 00:29:52,490
sent to the server that the contents

598
00:29:50,330 --> 00:29:55,939
have changed and we can still steal the

599
00:29:52,490 --> 00:29:58,539
contents so if I open the example the

600
00:29:55,940 --> 00:29:58,539
key pass here

601
00:29:58,570 --> 00:30:04,870
and now I'm just gonna do a ctrl C to

602
00:30:03,250 --> 00:30:09,240
copy the password and we will see the

603
00:30:04,870 --> 00:30:12,340
password in the textbox so I just ctrl C

604
00:30:09,240 --> 00:30:14,710
go get this and you can see now I can

605
00:30:12,340 --> 00:30:16,780
see the clipboard data which is my

606
00:30:14,710 --> 00:30:19,590
password that I copied from kiba's and I

607
00:30:16,780 --> 00:30:19,590
didn't place it anywhere

608
00:30:20,350 --> 00:30:26,590
also I mentioned farm browser here so

609
00:30:23,320 --> 00:30:28,270
it's a bit that's a bit small but we

610
00:30:26,590 --> 00:30:31,480
have like the whole job that was shares

611
00:30:28,270 --> 00:30:32,580
the same the same folders that you saw

612
00:30:31,480 --> 00:30:41,230
earlier

613
00:30:32,580 --> 00:30:42,909
company policy or images whatever so I

614
00:30:41,230 --> 00:30:46,090
can use that to for example like

615
00:30:42,910 --> 00:30:52,260
download the file download like password

616
00:30:46,090 --> 00:30:52,260
dot txt you can save it there

617
00:30:53,410 --> 00:30:56,400
it's probably worried

618
00:31:01,280 --> 00:31:12,830
all right it's not saving okay know what

619
00:31:07,520 --> 00:31:16,180
I did one but oh so it is session the

620
00:31:12,830 --> 00:31:16,179
session quit for some reason

621
00:31:26,039 --> 00:31:34,179
all right I guess we're just gonna pet

622
00:31:28,349 --> 00:31:35,799
through another feature but you're not

623
00:31:34,179 --> 00:31:38,109
so we're going to look at how the files

624
00:31:35,799 --> 00:31:40,450
are saved when you transfer a file in

625
00:31:38,109 --> 00:31:44,499
the server so for example now if I look

626
00:31:40,450 --> 00:31:47,320
at file on my client here I just want to

627
00:31:44,499 --> 00:31:49,089
get this image all right

628
00:31:47,320 --> 00:31:50,889
well of course the server has to pull

629
00:31:49,089 --> 00:31:54,549
that image from the declined drive and

630
00:31:50,889 --> 00:31:57,008
so party PCs these requests and it's

631
00:31:54,549 --> 00:31:59,830
gonna save the file in the output folder

632
00:31:57,009 --> 00:32:02,679
if I go here in files

633
00:31:59,830 --> 00:32:05,080
Angharad this man face here which was

634
00:32:02,679 --> 00:32:06,729
just down a little bit and this is the

635
00:32:05,080 --> 00:32:08,428
same file that was used on a client I

636
00:32:06,729 --> 00:32:10,719
just open it up

637
00:32:08,429 --> 00:32:12,700
the reason why it's called we're like

638
00:32:10,719 --> 00:32:14,440
Britney Mitchell that was not the

639
00:32:12,700 --> 00:32:16,570
original file name but what we do is we

640
00:32:14,440 --> 00:32:19,239
basically give the file a unique name

641
00:32:16,570 --> 00:32:21,489
every time it's useful for honey pots

642
00:32:19,239 --> 00:32:23,529
because like say you have a bunch of

643
00:32:21,489 --> 00:32:25,779
like malware that I'll use like services

644
00:32:23,529 --> 00:32:27,219
that exe we don't want all these

645
00:32:25,779 --> 00:32:29,080
services that Exe to overwrite each

646
00:32:27,219 --> 00:32:32,769
other so we just give them unique names

647
00:32:29,080 --> 00:32:36,908
and we have a mapping here that says I

648
00:32:32,769 --> 00:32:39,339
ok this file is it means it has this

649
00:32:36,909 --> 00:32:42,330
hash and it's came from like images

650
00:32:39,339 --> 00:32:42,330
smiley dot you

651
00:32:44,700 --> 00:32:50,110
so now I mentioned you can take control

652
00:32:47,770 --> 00:32:53,290
of a session so if I click this on the

653
00:32:50,110 --> 00:32:55,179
attacker I can just do anything now like

654
00:32:53,290 --> 00:32:58,450
my own house inputs are sent and my

655
00:32:55,180 --> 00:33:03,790
keyboard inputs are sent and so we can

656
00:32:58,450 --> 00:33:05,620
open this up as you can see on the right

657
00:33:03,790 --> 00:33:07,780
you're not seeing anything on the RDP

658
00:33:05,620 --> 00:33:10,840
window because we're just blocking the

659
00:33:07,780 --> 00:33:12,430
output that is going to the client so

660
00:33:10,840 --> 00:33:15,280
while you're doing this the client sees

661
00:33:12,430 --> 00:33:18,250
nothing essentially and you can for

662
00:33:15,280 --> 00:33:20,500
example send the windows are open up CMD

663
00:33:18,250 --> 00:33:25,180
or something you'll get some interesting

664
00:33:20,500 --> 00:33:31,540
stuff and I can just release control and

665
00:33:25,180 --> 00:33:35,770
now the sessions working again and all

666
00:33:31,540 --> 00:33:39,750
this all this that we just did as an

667
00:33:35,770 --> 00:33:39,750
attacker you can just go look at that

668
00:33:51,260 --> 00:33:54,980
yes it was yeah

669
00:33:57,440 --> 00:34:02,309
everything I didn't since the beginning

670
00:33:59,899 --> 00:34:04,949
session got cut a couple times so I

671
00:34:02,309 --> 00:34:06,450
don't have like all the things in this

672
00:34:04,950 --> 00:34:09,210
one we play but I have all the replays

673
00:34:06,450 --> 00:34:12,809
of every session so I'm spinning it up

674
00:34:09,210 --> 00:34:15,299
here but like you can see this is what I

675
00:34:12,809 --> 00:34:19,679
did as an attacker I just scroll back

676
00:34:15,299 --> 00:34:21,509
here open up a command line everything

677
00:34:19,679 --> 00:34:25,440
so this does keep trace what you do when

678
00:34:21,510 --> 00:34:28,589
you take control of the session and so

679
00:34:25,440 --> 00:34:33,629
now we can go look at the crawler output

680
00:34:28,589 --> 00:34:35,190
so if I go in files should be well it

681
00:34:33,629 --> 00:34:37,109
should be all of the connections so if I

682
00:34:35,190 --> 00:34:39,089
go for example in this one it you can

683
00:34:37,109 --> 00:34:41,879
see it created the same folder that are

684
00:34:39,089 --> 00:34:47,668
in the client so here you have a company

685
00:34:41,879 --> 00:34:50,040
policy password policy funny and finally

686
00:34:47,668 --> 00:34:52,799
it's saved the password that the Xen

687
00:34:50,040 --> 00:34:54,449
password KTVX file you can just use that

688
00:34:52,799 --> 00:34:56,668
so you automatically you know you get a

689
00:34:54,449 --> 00:35:01,169
bunch of file that could be useful for

690
00:34:56,668 --> 00:35:05,240
your pen test also mention the

691
00:35:01,170 --> 00:35:08,780
PowerShell payloads so we can see that

692
00:35:05,240 --> 00:35:14,399
it's it's a pre-recorded demo for this

693
00:35:08,780 --> 00:35:15,540
so here I have I mentioned I may have

694
00:35:14,400 --> 00:35:18,630
mentioned that there are three

695
00:35:15,540 --> 00:35:20,549
parameters to this this feature so

696
00:35:18,630 --> 00:35:23,010
basically you send the payload that you

697
00:35:20,549 --> 00:35:25,440
want to run you send a delay so this

698
00:35:23,010 --> 00:35:28,380
delay says like I expect for example

699
00:35:25,440 --> 00:35:31,440
here we have 10,000 which means like 10

700
00:35:28,380 --> 00:35:33,240
seconds so we expect the user to be

701
00:35:31,440 --> 00:35:37,410
locked in within 10 seconds like

702
00:35:33,240 --> 00:35:39,180
actually connecting then we say we

703
00:35:37,410 --> 00:35:41,069
expect the payload to take 5 seconds to

704
00:35:39,180 --> 00:35:43,410
wrap so what is going to do is block the

705
00:35:41,069 --> 00:35:45,329
input output from the clients starting

706
00:35:43,410 --> 00:35:47,009
for 10 seconds and it's gonna do that

707
00:35:45,329 --> 00:35:51,920
for 5 seconds while the payload runs in

708
00:35:47,010 --> 00:35:51,920
the background so here is an example

709
00:35:52,820 --> 00:35:58,500
I'm gonna connect as the client of

710
00:35:57,360 --> 00:36:06,720
course I will click through the

711
00:35:58,500 --> 00:36:10,800
certificate warning and login pretend to

712
00:36:06,720 --> 00:36:16,850
do some work and then at some point the

713
00:36:10,800 --> 00:36:19,230
input/output is gonna be blocked and

714
00:36:16,850 --> 00:36:21,589
then in the background is running the

715
00:36:19,230 --> 00:36:21,590
payload

716
00:36:30,020 --> 00:36:36,330
so that was for a demo now we're going

717
00:36:34,110 --> 00:36:37,740
to talk a bit more about how you can

718
00:36:36,330 --> 00:36:38,790
mitigate these kinds of RDP

719
00:36:37,740 --> 00:36:41,160
man-in-the-middle attacks on your

720
00:36:38,790 --> 00:36:45,300
network so I mentioned an earlier

721
00:36:41,160 --> 00:36:47,129
earlier how this works is well it's like

722
00:36:45,300 --> 00:36:50,040
I said it used to prevent mineral

723
00:36:47,130 --> 00:36:52,320
attacks it uses credits SP over TLS to

724
00:36:50,040 --> 00:36:55,860
choose between like either cure browser

725
00:36:52,320 --> 00:36:59,130
ntlm and so first you do TLS and check

726
00:36:55,860 --> 00:37:01,170
then you establish an encryption key

727
00:36:59,130 --> 00:37:03,870
depending what kind of authentication

728
00:37:01,170 --> 00:37:07,200
you're using and then this encryption

729
00:37:03,870 --> 00:37:09,900
key is used to encrypt the rest of the

730
00:37:07,200 --> 00:37:11,939
the packets that are sent so the third

731
00:37:09,900 --> 00:37:15,690
step is to actually verify that the

732
00:37:11,940 --> 00:37:17,580
x.509 certificate used in the TLS

733
00:37:15,690 --> 00:37:19,230
handshake is actually like it actually

734
00:37:17,580 --> 00:37:21,960
belongs to the real server that is

735
00:37:19,230 --> 00:37:25,710
expected not going to go into details

736
00:37:21,960 --> 00:37:27,780
exactly but and essentially only after

737
00:37:25,710 --> 00:37:29,790
the server is actually authenticated

738
00:37:27,780 --> 00:37:32,940
that's it send the credentials of the

739
00:37:29,790 --> 00:37:34,140
user so you can see how this can prevent

740
00:37:32,940 --> 00:37:36,060
and in the middle attacks because

741
00:37:34,140 --> 00:37:37,890
obviously you don't have the real

742
00:37:36,060 --> 00:37:40,380
private key of the real servers who can

743
00:37:37,890 --> 00:37:44,819
decrypt that so we can fake any of these

744
00:37:40,380 --> 00:37:48,960
steps and how do you actually activate

745
00:37:44,820 --> 00:37:51,300
that well well there's in the system

746
00:37:48,960 --> 00:37:54,540
properties where you the place where you

747
00:37:51,300 --> 00:37:56,490
enabled RDP there's just a checkbox on

748
00:37:54,540 --> 00:37:58,920
the bottom that says allow connections

749
00:37:56,490 --> 00:38:00,330
only from from computers running remote

750
00:37:58,920 --> 00:38:04,130
desktop with network level

751
00:38:00,330 --> 00:38:08,430
authentication and so if you use this it

752
00:38:04,130 --> 00:38:11,220
enforces RDP but it enforces in LA but

753
00:38:08,430 --> 00:38:14,850
only on the server side and this is by

754
00:38:11,220 --> 00:38:16,680
default this is checked in the more

755
00:38:14,850 --> 00:38:21,540
recent Windows versions of Windows 8 and

756
00:38:16,680 --> 00:38:23,910
following however we found like many

757
00:38:21,540 --> 00:38:25,460
companies that still have like that then

758
00:38:23,910 --> 00:38:28,589
unfortunately because for some reason

759
00:38:25,460 --> 00:38:31,380
like either date they uncheck the box or

760
00:38:28,590 --> 00:38:36,450
the maybe the original configuration

761
00:38:31,380 --> 00:38:38,580
stayed over two years and so you can but

762
00:38:36,450 --> 00:38:41,850
to enable date on every client or an

763
00:38:38,580 --> 00:38:44,670
every server you can just use the GPO to

764
00:38:41,850 --> 00:38:46,170
to check this on every client and we on

765
00:38:44,670 --> 00:38:50,310
every server and make sure that every

766
00:38:46,170 --> 00:38:53,340
server uses NLE this is also a trick you

767
00:38:50,310 --> 00:38:57,320
think you can use enforce NLA on the

768
00:38:53,340 --> 00:38:59,970
actual clients and so there was a

769
00:38:57,320 --> 00:39:02,340
feature called restricted admin mode

770
00:38:59,970 --> 00:39:04,680
that was introduced so what this does is

771
00:39:02,340 --> 00:39:06,480
it allows you to authenticate without

772
00:39:04,680 --> 00:39:10,049
actually sending your password in

773
00:39:06,480 --> 00:39:14,010
clear-text and for this to work with RDP

774
00:39:10,050 --> 00:39:17,010
it has to use NLA so if you just enforce

775
00:39:14,010 --> 00:39:19,200
this all the clients technically it

776
00:39:17,010 --> 00:39:22,260
should be it should enforce Annalee it

777
00:39:19,200 --> 00:39:26,430
everywhere so if you combine this with

778
00:39:22,260 --> 00:39:28,580
the the GPO for enforcing our DBA

779
00:39:26,430 --> 00:39:32,509
enforce again early on servers should

780
00:39:28,580 --> 00:39:32,509
technically be protected

781
00:39:34,140 --> 00:39:39,750
another possible thought it would be to

782
00:39:37,110 --> 00:39:42,690
mitigate our spoofing obviously it's not

783
00:39:39,750 --> 00:39:50,580
that simple because it's a complex

784
00:39:42,690 --> 00:39:52,620
protocol you can still use like some non

785
00:39:50,580 --> 00:39:54,660
perfect solutions to just at least like

786
00:39:52,620 --> 00:39:57,180
mitigate a part of the damage like if

787
00:39:54,660 --> 00:40:00,540
only you caching 20% that's at least

788
00:39:57,180 --> 00:40:02,009
better than catching like 0% but

789
00:40:00,540 --> 00:40:04,800
obviously it's our problem there's no

790
00:40:02,010 --> 00:40:07,020
perfect solution the ideal situation

791
00:40:04,800 --> 00:40:09,420
would be that you just have proper

792
00:40:07,020 --> 00:40:11,730
public key infrastructure everywhere so

793
00:40:09,420 --> 00:40:14,010
because no RDP connection should raise

794
00:40:11,730 --> 00:40:15,750
the certificate warning and if you

795
00:40:14,010 --> 00:40:18,690
actually see this it should be a major

796
00:40:15,750 --> 00:40:20,760
red flag but like it's not it's not

797
00:40:18,690 --> 00:40:22,890
usually done and it's been done for for

798
00:40:20,760 --> 00:40:23,820
years and years so users are just like

799
00:40:22,890 --> 00:40:25,440
trains

800
00:40:23,820 --> 00:40:28,950
I've trained themselves to just leak

801
00:40:25,440 --> 00:40:31,740
through these warnings hopefully with a

802
00:40:28,950 --> 00:40:34,200
proper pikia you can sort of remove this

803
00:40:31,740 --> 00:40:35,879
desensitization away of course some

804
00:40:34,200 --> 00:40:38,970
users are always going to click through

805
00:40:35,880 --> 00:40:41,430
warnings no matter what so I think you

806
00:40:38,970 --> 00:40:43,290
should probably do some sensitization to

807
00:40:41,430 --> 00:40:46,600
try to minimize the portion of users

808
00:40:43,290 --> 00:40:49,370
that actually click through these errors

809
00:40:46,600 --> 00:40:52,850
so now I'll let you finish with the next

810
00:40:49,370 --> 00:40:56,029
steps for peyote be so peyote be is a

811
00:40:52,850 --> 00:40:57,770
pretty recent project so we implement we

812
00:40:56,030 --> 00:41:00,140
didn't implement everything we wanted to

813
00:40:57,770 --> 00:41:03,130
implement so those are some ideas as to

814
00:41:00,140 --> 00:41:05,960
what might be coming next for peyote be

815
00:41:03,130 --> 00:41:09,490
first better clipboard supports so right

816
00:41:05,960 --> 00:41:12,410
now our keyboard support is a basic ish

817
00:41:09,490 --> 00:41:17,149
in the sense that we don't support a

818
00:41:12,410 --> 00:41:19,250
file pasting if someone pastes a file on

819
00:41:17,150 --> 00:41:23,720
the server we don't save a copy of it to

820
00:41:19,250 --> 00:41:27,170
disk and but we should and we can so

821
00:41:23,720 --> 00:41:29,149
that could be a nice addition to pi RDP

822
00:41:27,170 --> 00:41:31,580
obviously for malware research if

823
00:41:29,150 --> 00:41:36,070
someone pasted a file instead of using

824
00:41:31,580 --> 00:41:37,940
you with the device redirection channel

825
00:41:36,070 --> 00:41:38,450
retrieving your replays and files from

826
00:41:37,940 --> 00:41:41,660
pcaps

827
00:41:38,450 --> 00:41:44,509
so as I said earlier we have we built a

828
00:41:41,660 --> 00:41:46,549
script to rebuild replay from a peak app

829
00:41:44,510 --> 00:41:50,300
but we could do something that's more

830
00:41:46,550 --> 00:41:54,440
scalable that takes pcap as an input and

831
00:41:50,300 --> 00:41:58,250
necessary decryption material to list

832
00:41:54,440 --> 00:42:00,770
our DP sessions recover file that were

833
00:41:58,250 --> 00:42:02,720
transferred and I create replays of

834
00:42:00,770 --> 00:42:04,759
sessions and we thought that could be

835
00:42:02,720 --> 00:42:06,589
useful for incident response if you're

836
00:42:04,760 --> 00:42:09,620
recording the traffic and have access to

837
00:42:06,590 --> 00:42:12,550
the TLS secrets obviously that won't

838
00:42:09,620 --> 00:42:16,009
work if you use proper encryption so

839
00:42:12,550 --> 00:42:21,080
encryption with the perfect forward

840
00:42:16,010 --> 00:42:23,510
secrecy probability use that and that

841
00:42:21,080 --> 00:42:26,650
makes it so the private key is not

842
00:42:23,510 --> 00:42:26,650
enough to decrypt the connection

843
00:42:26,690 --> 00:42:30,319
uploading files on the client file

844
00:42:28,190 --> 00:42:32,480
system we thought about that we thought

845
00:42:30,319 --> 00:42:34,670
it was pretty cool since as I said

846
00:42:32,480 --> 00:42:38,359
earlier the server always initiated

847
00:42:34,670 --> 00:42:42,049
connections while we the server PI RDP

848
00:42:38,359 --> 00:42:45,259
can say well upload this backdoor Exe to

849
00:42:42,049 --> 00:42:47,599
your startup folder and since the

850
00:42:45,259 --> 00:42:51,529
windows 10 forces the user to share a

851
00:42:47,599 --> 00:42:53,329
full drive when they connect to priority

852
00:42:51,529 --> 00:42:54,799
P and they want to share it arrived you

853
00:42:53,329 --> 00:42:57,109
can just say I want to share this folder

854
00:42:54,799 --> 00:42:59,749
you need to share your whole C Drive so

855
00:42:57,109 --> 00:43:02,089
that's the startup folder should be

856
00:42:59,749 --> 00:43:05,660
accessible most of the time a user

857
00:43:02,089 --> 00:43:09,849
shares the drive so it makes your liking

858
00:43:05,660 --> 00:43:12,970
already beat your own VM more valuable

859
00:43:09,849 --> 00:43:15,079
pi r DP is an open source tool on github

860
00:43:12,970 --> 00:43:18,200
we will come any help from the community

861
00:43:15,079 --> 00:43:20,359
so if you try a PI RDP and you have

862
00:43:18,200 --> 00:43:22,490
success with it please tell us we want

863
00:43:20,359 --> 00:43:26,630
to hear your stories about how you got

864
00:43:22,490 --> 00:43:26,990
da with PI already be if you have issues

865
00:43:26,630 --> 00:43:29,390
with it

866
00:43:26,990 --> 00:43:32,538
please open an issue on github we

867
00:43:29,390 --> 00:43:35,420
usually respond pretty fast to them and

868
00:43:32,539 --> 00:43:37,279
if you find some nice use cases for PI

869
00:43:35,420 --> 00:43:39,650
ap please tell us we're gonna be glad to

870
00:43:37,279 --> 00:43:43,450
hear so thanks everyone

871
00:43:39,650 --> 00:43:46,079
do you guys have any questions

872
00:43:43,450 --> 00:43:46,078
yes

873
00:43:52,190 --> 00:44:00,170
it does like oh sorry so the question

874
00:43:56,780 --> 00:44:02,780
was when you take control of a session

875
00:44:00,170 --> 00:44:06,160
does the user does the user session

876
00:44:02,780 --> 00:44:08,540
basically freeze it does like freeze the

877
00:44:06,160 --> 00:44:11,960
session so they can send it in put in

878
00:44:08,540 --> 00:44:13,310
like cancel what you're doing I think

879
00:44:11,960 --> 00:44:16,640
this is obviously not something that you

880
00:44:13,310 --> 00:44:18,259
will use I like on every session because

881
00:44:16,640 --> 00:44:19,700
obviously as is very obvious if you're

882
00:44:18,260 --> 00:44:22,340
doing that and you're doing work for

883
00:44:19,700 --> 00:44:24,230
like five minutes I think it's it's

884
00:44:22,340 --> 00:44:26,480
mostly you like you can use it if

885
00:44:24,230 --> 00:44:28,190
someone appears to be idle and run a

886
00:44:26,480 --> 00:44:30,890
quick payload so what you can do is type

887
00:44:28,190 --> 00:44:34,880
there's also a in the menu you can

888
00:44:30,890 --> 00:44:36,259
select some text to paste and you know

889
00:44:34,880 --> 00:44:38,600
just like pace it like really really

890
00:44:36,260 --> 00:44:41,180
fast in today's session so you could

891
00:44:38,600 --> 00:44:43,759
like run a command line and just paste

892
00:44:41,180 --> 00:44:45,700
the commands you want it so that will be

893
00:44:43,760 --> 00:44:49,570
a good way to use it

894
00:44:45,700 --> 00:44:49,569
but it does reading sessions

895
00:44:50,210 --> 00:44:53,210
yes

896
00:44:58,119 --> 00:45:04,369
so the question is if you free the

897
00:45:02,450 --> 00:45:07,399
session for long enough will the excitin

898
00:45:04,369 --> 00:45:11,289
time out the answer is no so we still

899
00:45:07,400 --> 00:45:14,960
respond to the package we just plug the

900
00:45:11,289 --> 00:45:18,009
graphical output and we plug the input

901
00:45:14,960 --> 00:45:21,799
to the server so no way it doesn't

902
00:45:18,009 --> 00:45:24,200
timeout we want to add something so like

903
00:45:21,799 --> 00:45:25,759
basically there is no confirmation that

904
00:45:24,200 --> 00:45:27,799
the inputs that you're sending from the

905
00:45:25,759 --> 00:45:30,589
clients are actually received that is

906
00:45:27,799 --> 00:45:32,359
server so party P is just as think over

907
00:45:30,589 --> 00:45:33,558
like all the input the client doesn't

908
00:45:32,359 --> 00:45:35,808
know that it's not actually going

909
00:45:33,559 --> 00:45:38,210
through so it just plays along right

910
00:45:35,809 --> 00:45:40,329
dummy yeah and doesn't never fake use it

911
00:45:38,210 --> 00:45:40,329
up

