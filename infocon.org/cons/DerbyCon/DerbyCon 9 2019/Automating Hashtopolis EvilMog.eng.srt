1
00:00:00,000 --> 00:00:07,500
there's talks at Derby con so show of

2
00:00:04,230 --> 00:00:10,530
hands who you're still sober who you're

3
00:00:07,500 --> 00:00:16,890
still drunk from last night I know you

4
00:00:10,530 --> 00:00:18,660
are ender yeah come on in we got more

5
00:00:16,890 --> 00:00:24,810
plenty of rhythm nobody here bites

6
00:00:18,660 --> 00:00:26,369
unless you ask and give consent yeah

7
00:00:24,810 --> 00:00:30,019
even then do be showered first before he

8
00:00:26,369 --> 00:00:33,540
bite you so now make this easier because

9
00:00:30,019 --> 00:00:34,469
what the hell so debating hush topless

10
00:00:33,540 --> 00:00:36,030
let's go through the standard

11
00:00:34,469 --> 00:00:37,520
disclaimers and all the usual crap

12
00:00:36,030 --> 00:00:43,770
before we get this going

13
00:00:37,520 --> 00:00:49,140
video is all good to go I assume am I

14
00:00:43,770 --> 00:00:51,989
good go Thanks so disclaimer this talk

15
00:00:49,140 --> 00:00:54,090
is not been invented by IBM IBM security

16
00:00:51,989 --> 00:00:55,949
the x-force read the opinions expressed

17
00:00:54,090 --> 00:00:57,870
in this talk are mine and mine alone

18
00:00:55,949 --> 00:00:59,550
I'm also not speaking on behalf of hash

19
00:00:57,870 --> 00:01:00,989
cat hash topple esteem hash cat

20
00:00:59,550 --> 00:01:03,660
Churchill wife is a mature primed

21
00:01:00,989 --> 00:01:05,489
Illuminati or Bigfoot no warranties

22
00:01:03,660 --> 00:01:07,470
express or implied I'm not responsible

23
00:01:05,489 --> 00:01:09,510
for any house fires breaking our shop

24
00:01:07,470 --> 00:01:10,590
assistants killing your database or

25
00:01:09,510 --> 00:01:12,479
otherwise doing something stupid with

26
00:01:10,590 --> 00:01:13,590
the API because you can do that and I'm

27
00:01:12,479 --> 00:01:16,080
also not response for getting your ass

28
00:01:13,590 --> 00:01:18,000
fired please this is a very professional

29
00:01:16,080 --> 00:01:22,590
before doing this in production towards

30
00:01:18,000 --> 00:01:24,450
yellow and yellow so Who am I I'm evil

31
00:01:22,590 --> 00:01:26,610
mug Bishop with the Church of Wi-Fi

32
00:01:24,450 --> 00:01:29,759
hacker for x-force read member a team

33
00:01:26,610 --> 00:01:32,100
hash cat and I'm also Rear Admiral evil

34
00:01:29,759 --> 00:01:33,060
apparently when I'm down to the SCC CDC

35
00:01:32,100 --> 00:01:35,070
because why not

36
00:01:33,060 --> 00:01:38,700
I was also Muhammad bin evil and a few

37
00:01:35,070 --> 00:01:40,979
other funny ones why are you here well a

38
00:01:38,700 --> 00:01:43,740
you're all obviously somewhat sober hash

39
00:01:40,979 --> 00:01:46,079
topless is awesome hash table manages

40
00:01:43,740 --> 00:01:47,579
hash cat hash tapas could be automate

41
00:01:46,079 --> 00:01:49,500
with JSON and that's right you can be a

42
00:01:47,579 --> 00:01:52,020
lazy so first of all who here knows with

43
00:01:49,500 --> 00:01:54,829
hash cat is good you're in the right

44
00:01:52,020 --> 00:01:56,579
talk who your nose with hash topless is

45
00:01:54,829 --> 00:01:58,589
alright for those that you don't know

46
00:01:56,579 --> 00:02:00,689
what hash top Alyssa is it is an

47
00:01:58,590 --> 00:02:02,579
automation framework for managing hash

48
00:02:00,689 --> 00:02:04,199
cat this is not a intro to hash table

49
00:02:02,579 --> 00:02:06,059
stock so some of this stuff might go

50
00:02:04,200 --> 00:02:08,250
over your head I'm sorry but the

51
00:02:06,060 --> 00:02:09,810
documentation is fantastic and one of

52
00:02:08,250 --> 00:02:11,459
the guys who's on the project is sitting

53
00:02:09,810 --> 00:02:14,209
right there so he can answer other

54
00:02:11,459 --> 00:02:20,250
questions and he all him for

55
00:02:14,209 --> 00:02:22,530
sorry so some basic terminology in the

56
00:02:20,250 --> 00:02:25,110
hash or in hash topless an agent is a

57
00:02:22,530 --> 00:02:26,640
hash count worker node trust is an agent

58
00:02:25,110 --> 00:02:28,260
that can run secret hash lists when you

59
00:02:26,640 --> 00:02:31,018
check the box it says the hash cat is

60
00:02:28,260 --> 00:02:32,760
throw his hash lets the secret secret is

61
00:02:31,019 --> 00:02:36,360
a hash list that can't be sent untrusted

62
00:02:32,760 --> 00:02:38,940
agents a task is a hash cat job a hash

63
00:02:36,360 --> 00:02:41,129
list is a list of hashes hash gets an

64
00:02:38,940 --> 00:02:43,560
awesome pastor cracker thanks Adam that

65
00:02:41,129 --> 00:02:44,940
guy's awesome and has topple us manages

66
00:02:43,560 --> 00:02:46,709
hash cat to distribute work with the

67
00:02:44,940 --> 00:02:49,230
special thanks to s3 hops

68
00:02:46,709 --> 00:02:53,310
win XP and the rest of the Backstreet

69
00:02:49,230 --> 00:02:55,140
Boys so to use hash table list first of

70
00:02:53,310 --> 00:02:57,599
all or at least do some automation you

71
00:02:55,140 --> 00:02:59,670
first have to install hash table Willis

72
00:02:57,599 --> 00:03:01,560
there's the github repo reasonably easy

73
00:02:59,670 --> 00:03:03,089
I might even post the slide when I'm

74
00:03:01,560 --> 00:03:04,290
done this you guys can all take copies

75
00:03:03,090 --> 00:03:06,870
but feel free to take pictures of the

76
00:03:04,290 --> 00:03:09,450
slide deck no problem you have to

77
00:03:06,870 --> 00:03:10,950
generate an API key first of all in

78
00:03:09,450 --> 00:03:13,440
order to use hash topless for its

79
00:03:10,950 --> 00:03:16,649
automation pieces create an API key you

80
00:03:13,440 --> 00:03:18,180
should probably read the user API PDF

81
00:03:16,650 --> 00:03:20,700
before you try to automate it with the

82
00:03:18,180 --> 00:03:22,290
frameworks we wrote for a Python you

83
00:03:20,700 --> 00:03:25,828
make a new director for your project on

84
00:03:22,290 --> 00:03:27,769
this repo question marks and profit yeah

85
00:03:25,829 --> 00:03:29,849
relatively simple for getting started

86
00:03:27,769 --> 00:03:32,579
first thing you do is you create a JSON

87
00:03:29,849 --> 00:03:33,810
file you tell at your endpoint tell it

88
00:03:32,579 --> 00:03:35,970
don't verify the certificate because

89
00:03:33,810 --> 00:03:39,629
Yolo worry about a path haven't certify

90
00:03:35,970 --> 00:03:43,769
and you specify an API key so that's

91
00:03:39,629 --> 00:03:45,209
step one step two do you need to go test

92
00:03:43,769 --> 00:03:47,730
your connection so here's a simple

93
00:03:45,209 --> 00:03:49,590
Python script the import the hash table

94
00:03:47,730 --> 00:03:51,810
plus API functions tell attest the

95
00:03:49,590 --> 00:03:53,340
connection and the results if you get a

96
00:03:51,810 --> 00:03:55,040
success you are good to go

97
00:03:53,340 --> 00:03:57,750
anything else troubleshoot your stuff

98
00:03:55,040 --> 00:04:00,090
this doesn't test your API key this just

99
00:03:57,750 --> 00:04:02,910
tests to make sure that your service is

100
00:04:00,090 --> 00:04:05,510
online running so the nice part about

101
00:04:02,910 --> 00:04:07,980
hash table saw Tomatoes

102
00:04:05,510 --> 00:04:10,078
spent months listen to be complained

103
00:04:07,980 --> 00:04:11,578
till they wrote an API for me and they

104
00:04:10,079 --> 00:04:13,230
did everything in JSON so they wouldn't

105
00:04:11,579 --> 00:04:14,819
have to go listen to me complain so all

106
00:04:13,230 --> 00:04:17,519
that you know bad problems are on my

107
00:04:14,819 --> 00:04:19,829
side rather than theirs so simple

108
00:04:17,519 --> 00:04:23,340
connection test API is tell you when I

109
00:04:19,829 --> 00:04:25,590
go to section test request a connection

110
00:04:23,340 --> 00:04:28,159
it gives you a response to success you

111
00:04:25,590 --> 00:04:30,570
can do this in Ruby Python what-have-you

112
00:04:28,160 --> 00:04:33,300
so the next thing you have to do is make

113
00:04:30,570 --> 00:04:35,159
sure your API key works Python code here

114
00:04:33,300 --> 00:04:36,990
gets a little more complicated you tell

115
00:04:35,160 --> 00:04:39,270
a test connection test access print the

116
00:04:36,990 --> 00:04:42,540
results if you get in ok at this point

117
00:04:39,270 --> 00:04:44,729
from the test access API you might be

118
00:04:42,540 --> 00:04:46,650
able to do something useful the error

119
00:04:44,730 --> 00:04:50,310
log sort of work and everything's kind

120
00:04:46,650 --> 00:04:51,780
of documented under the hood the access

121
00:04:50,310 --> 00:04:54,300
check looks like this we tell it tests

122
00:04:51,780 --> 00:04:56,549
tell it a request to access give it to

123
00:04:54,300 --> 00:04:58,020
your access key if it gives you an OK

124
00:04:56,550 --> 00:05:01,740
you're good and if it gives you an error

125
00:04:58,020 --> 00:05:05,780
tells the API key not found now in the

126
00:05:01,740 --> 00:05:08,070
hash table spy Thun bindings the only to

127
00:05:05,780 --> 00:05:09,330
access checks that are only two

128
00:05:08,070 --> 00:05:11,520
endpoints that don't give you the full

129
00:05:09,330 --> 00:05:13,380
JSON output are access check and access

130
00:05:11,520 --> 00:05:14,729
test everything else gives you the raw

131
00:05:13,380 --> 00:05:16,050
JSON for an output seeking parse

132
00:05:14,729 --> 00:05:19,260
yourself I'm not your mother I'm not

133
00:05:16,050 --> 00:05:21,120
doing a person for you so if we want to

134
00:05:19,260 --> 00:05:22,919
go create a hash list for example so say

135
00:05:21,120 --> 00:05:24,540
you've got pulled something out of crack

136
00:05:22,919 --> 00:05:26,909
map exec can you want to double it in

137
00:05:24,540 --> 00:05:29,760
hash top lists the import your functions

138
00:05:26,910 --> 00:05:32,130
yet convert it to the import base64 you

139
00:05:29,760 --> 00:05:34,530
open up your hash list key base64 encode

140
00:05:32,130 --> 00:05:36,510
your hash list tell it create hash last

141
00:05:34,530 --> 00:05:38,359
example hash settle your various options

142
00:05:36,510 --> 00:05:41,640
you know as a salt that as a secret

143
00:05:38,360 --> 00:05:45,990
print the results and you get something

144
00:05:41,640 --> 00:05:48,240
like this gives you a nice simple okay

145
00:05:45,990 --> 00:05:50,340
not very much error logs and let's do

146
00:05:48,240 --> 00:05:51,539
something really stupid so that a cool

147
00:05:50,340 --> 00:05:54,000
part about this is you could automate

148
00:05:51,539 --> 00:05:56,190
hash topless with Sabre if you were so

149
00:05:54,000 --> 00:05:57,810
bored I mean gotten cowboys out there we

150
00:05:56,190 --> 00:05:59,940
got patrol Cowboys we've got our Ruby

151
00:05:57,810 --> 00:06:02,340
folks out there I wrote everything in

152
00:05:59,940 --> 00:06:03,539
Python too because I'm lazy integral was

153
00:06:02,340 --> 00:06:06,119
awesome and he's been porting everything

154
00:06:03,539 --> 00:06:07,889
to Python 3 but all the examples and my

155
00:06:06,120 --> 00:06:09,630
source code repo are Python 2 at the

156
00:06:07,889 --> 00:06:13,800
moment so I'm sorry but not really I

157
00:06:09,630 --> 00:06:15,150
like my son too so creating the hash

158
00:06:13,800 --> 00:06:16,229
list in this case it's a bit more

159
00:06:15,150 --> 00:06:18,299
complicated because you have to make

160
00:06:16,229 --> 00:06:20,460
sure your options here are set with the

161
00:06:18,300 --> 00:06:22,139
API there are absolutely no guardrails

162
00:06:20,460 --> 00:06:23,159
so if this is get a bomb and hash

163
00:06:22,139 --> 00:06:25,919
topless from the GUI

164
00:06:23,160 --> 00:06:27,300
it'll bomb in the API so the important

165
00:06:25,919 --> 00:06:30,240
things to watch out for your hash type

166
00:06:27,300 --> 00:06:32,610
IDs whether using brain and make sure

167
00:06:30,240 --> 00:06:34,229
you've got the correct options so you're

168
00:06:32,610 --> 00:06:36,960
good options we can do is go test it

169
00:06:34,229 --> 00:06:40,650
creation in the GUI and then try and

170
00:06:36,960 --> 00:06:43,409
created within the API cool trick we can

171
00:06:40,650 --> 00:06:44,940
do is quite often you use things like

172
00:06:43,410 --> 00:06:48,900
because I don't hear to what pack is

173
00:06:44,940 --> 00:06:50,940
past Alice's cracking kit sort of no

174
00:06:48,900 --> 00:06:52,679
case so what you can do with pack is you

175
00:06:50,940 --> 00:06:54,509
can go say analyze a hash list and go

176
00:06:52,680 --> 00:06:55,919
generate a bunch of hash cap masks so

177
00:06:54,509 --> 00:06:58,169
let's say generative thousand them like

178
00:06:55,919 --> 00:07:05,099
the path wall masks you might have to go

179
00:06:58,169 --> 00:07:07,409
create 100 200 300 masks and yeah you

180
00:07:05,099 --> 00:07:09,300
don't necessarily have to do this the GT

181
00:07:07,410 --> 00:07:11,340
or through the API through the GUI but

182
00:07:09,300 --> 00:07:14,849
that was a new feature as of earlier

183
00:07:11,340 --> 00:07:17,039
this year yeah so you just have to build

184
00:07:14,849 --> 00:07:19,020
this view the API so this little script

185
00:07:17,039 --> 00:07:21,120
here goes through does it loop through

186
00:07:19,020 --> 00:07:23,430
the path of all masks for example and

187
00:07:21,120 --> 00:07:25,380
creates a mask for every line in that

188
00:07:23,430 --> 00:07:26,639
entry it's kind of Handy in that regard

189
00:07:25,380 --> 00:07:29,190
because you can eventually create like

190
00:07:26,639 --> 00:07:32,159
same old super tasks and the process and

191
00:07:29,190 --> 00:07:33,840
automate your setup the problem is the

192
00:07:32,159 --> 00:07:35,789
hash topless database gets a little

193
00:07:33,840 --> 00:07:37,198
cranky after three or four upgrades you

194
00:07:35,789 --> 00:07:39,060
tend have to recreate it every once in a

195
00:07:37,199 --> 00:07:41,000
while so if you can learn to reset up

196
00:07:39,060 --> 00:07:43,169
all your tasks this is a handy technique

197
00:07:41,000 --> 00:07:44,699
so I got three or four major attack

198
00:07:43,169 --> 00:07:48,479
types this is one of them path false

199
00:07:44,699 --> 00:07:51,060
grade this is the most handy thing you

200
00:07:48,479 --> 00:07:52,500
will ever use in hash topless the

201
00:07:51,060 --> 00:07:54,870
problem is right now in hash topless

202
00:07:52,500 --> 00:07:56,490
there's no bulk delete all right there

203
00:07:54,870 --> 00:07:59,009
is a bulk delete but it's glitchy as

204
00:07:56,490 --> 00:08:01,560
hell sorry when XP actually it's that's

205
00:07:59,009 --> 00:08:03,060
threes problem I'm not gonna lie so what

206
00:08:01,560 --> 00:08:04,380
you got to do is you have to go import

207
00:08:03,060 --> 00:08:07,169
your they used to be client functions

208
00:08:04,380 --> 00:08:09,300
list your tasks loop over your tasks and

209
00:08:07,169 --> 00:08:12,180
delete them all this saves me so much

210
00:08:09,300 --> 00:08:13,889
time during the crack Ken competition

211
00:08:12,180 --> 00:08:15,090
when our entire team in Europe screws up

212
00:08:13,889 --> 00:08:17,400
our instance and we have to clear them

213
00:08:15,090 --> 00:08:19,650
all out this one will save you say has

214
00:08:17,400 --> 00:08:22,020
some good time so you can use things

215
00:08:19,650 --> 00:08:23,520
like deleting all the tasks you can

216
00:08:22,020 --> 00:08:24,750
create a hash lookup the functions you

217
00:08:23,520 --> 00:08:26,520
can make your own little private hash

218
00:08:24,750 --> 00:08:29,099
lookup server with a quick little get

219
00:08:26,520 --> 00:08:31,799
hash API they'll return back the hatch

220
00:08:29,099 --> 00:08:35,130
list it's in the correct position which

221
00:08:31,800 --> 00:08:37,529
is one of my feature requests the actual

222
00:08:35,130 --> 00:08:39,029
plain text for it they give you a quick

223
00:08:37,529 --> 00:08:41,299
okay so you can actually automate in the

224
00:08:39,029 --> 00:08:43,828
bash script our to go do quick lookups

225
00:08:41,299 --> 00:08:45,329
and what's cooler is when the next

226
00:08:43,828 --> 00:08:48,089
couple of slides we can do things like

227
00:08:45,329 --> 00:08:49,300
get in hash less details individually to

228
00:08:48,089 --> 00:08:50,800
tell you hey

229
00:08:49,300 --> 00:08:53,560
what's the status on this or even more

230
00:08:50,800 --> 00:08:55,540
importantly we can get all of the hashes

231
00:08:53,560 --> 00:08:57,010
for a particular hash list now by

232
00:08:55,540 --> 00:08:59,469
default this is ugly as I say I don't

233
00:08:57,010 --> 00:09:01,780
parse the JSON but you can make this

234
00:08:59,470 --> 00:09:04,450
really pretty great numbers to get hash

235
00:09:01,780 --> 00:09:07,780
let's craft the hashes but with a little

236
00:09:04,450 --> 00:09:09,820
bit of cleanup you can use this to go

237
00:09:07,780 --> 00:09:12,040
pull your hash topless options rather

238
00:09:09,820 --> 00:09:14,230
than copy and paste so when you're doing

239
00:09:12,040 --> 00:09:15,610
crack map exec for example and you do

240
00:09:14,230 --> 00:09:17,230
upload everything I shop let's want to

241
00:09:15,610 --> 00:09:19,900
redound them back to your local laptop

242
00:09:17,230 --> 00:09:22,180
from local parsing give a quick little

243
00:09:19,900 --> 00:09:23,620
import the for hash and hashes prints

244
00:09:22,180 --> 00:09:25,329
the hash and the hash the player in the

245
00:09:23,620 --> 00:09:27,550
plaintext and you get a nice little

246
00:09:25,330 --> 00:09:31,060
pretty hash cat pot file ready to go for

247
00:09:27,550 --> 00:09:34,959
importing the hash get this four lines

248
00:09:31,060 --> 00:09:38,319
of Python saves me hours so that's kind

249
00:09:34,960 --> 00:09:41,530
of cool G your task details which is

250
00:09:38,320 --> 00:09:43,270
handy so you can you know tell hey I

251
00:09:41,530 --> 00:09:44,800
need to find out what task idea what

252
00:09:43,270 --> 00:09:46,470
dispatch but everything comes back in

253
00:09:44,800 --> 00:09:49,030
straight JSON scan access it immediately

254
00:09:46,470 --> 00:09:50,890
I'd need to find a ruby developer so I

255
00:09:49,030 --> 00:09:52,480
can afford all the bindings to Ruby cuz

256
00:09:50,890 --> 00:09:53,920
I'm gonna put this into Metasploit see

257
00:09:52,480 --> 00:09:55,870
nod man who look up and submit your

258
00:09:53,920 --> 00:09:58,030
Metasploit hashes to hash table plus and

259
00:09:55,870 --> 00:09:59,710
redownload them again so if your ruby

260
00:09:58,030 --> 00:10:04,000
developer hit me up and we'll go do some

261
00:09:59,710 --> 00:10:06,430
magic it's not a hash manager it's just

262
00:10:04,000 --> 00:10:08,170
being lazy taking your Metasploit Sam

263
00:10:06,430 --> 00:10:10,510
dump downloading them crack him

264
00:10:08,170 --> 00:10:13,060
reuploading hash topless is not a hash

265
00:10:10,510 --> 00:10:17,040
manager if you try and use this one they

266
00:10:13,060 --> 00:10:17,040
will mock you mercilessly in the discord

267
00:10:18,300 --> 00:10:23,140
if you guys think I'm evil win XP is

268
00:10:21,100 --> 00:10:27,360
freaking brutal I'm not gonna lie they

269
00:10:23,140 --> 00:10:31,540
mock even me yes mock me don't you know

270
00:10:27,360 --> 00:10:34,240
it again you also list your files this

271
00:10:31,540 --> 00:10:35,439
is handy if you want to go find out what

272
00:10:34,240 --> 00:10:38,200
dictionaries you're into gonna

273
00:10:35,440 --> 00:10:40,390
automatically creates say a set of tasks

274
00:10:38,200 --> 00:10:42,160
for this set of dictionaries and then

275
00:10:40,390 --> 00:10:44,050
this set of rules you can get their

276
00:10:42,160 --> 00:10:46,270
filenames out for you and actually use

277
00:10:44,050 --> 00:10:49,930
that later on funky scripts so you can

278
00:10:46,270 --> 00:10:51,880
listing files is awesome you can get a

279
00:10:49,930 --> 00:10:53,790
user list that's some really ugly code

280
00:10:51,880 --> 00:10:56,170
for seeing who else on your instance

281
00:10:53,790 --> 00:10:58,480
when you get to a company our size you

282
00:10:56,170 --> 00:10:59,770
have 80 plus people on your hash topless

283
00:10:58,480 --> 00:11:01,330
instance is trying to find them all is

284
00:10:59,770 --> 00:11:01,740
kind of a pain so we actually wrote an

285
00:11:01,330 --> 00:11:03,120
idea

286
00:11:01,740 --> 00:11:05,670
for hash-table plus now to reprovision

287
00:11:03,120 --> 00:11:08,700
people so you'd handle that that's

288
00:11:05,670 --> 00:11:11,490
actually pretty cool here's the output

289
00:11:08,700 --> 00:11:12,840
example it's not bad the cool part is

290
00:11:11,490 --> 00:11:14,790
that you need to understand things like

291
00:11:12,840 --> 00:11:16,680
what right groups are last logon is

292
00:11:14,790 --> 00:11:18,540
valid like if you understand how much

293
00:11:16,680 --> 00:11:20,400
topless works automating it becomes a

294
00:11:18,540 --> 00:11:22,829
lot easier so I apologize for this not

295
00:11:20,400 --> 00:11:24,150
being a hash-table let's talk but not

296
00:11:22,830 --> 00:11:25,920
many people even know the user API

297
00:11:24,150 --> 00:11:28,230
exists I'm like the only person who

298
00:11:25,920 --> 00:11:32,250
submits support tickets for it and they

299
00:11:28,230 --> 00:11:34,140
get rather annoyed you also create new

300
00:11:32,250 --> 00:11:36,720
users this is handy because we can do is

301
00:11:34,140 --> 00:11:38,340
say take something like Key Club put it

302
00:11:36,720 --> 00:11:39,510
in front of Apache write a Python script

303
00:11:38,340 --> 00:11:41,160
so when you authenticate to your

304
00:11:39,510 --> 00:11:43,080
corporate active directory creates you

305
00:11:41,160 --> 00:11:45,510
users automatically in hash topless I

306
00:11:43,080 --> 00:11:48,060
wrote a hatch topless use a reset tool

307
00:11:45,510 --> 00:11:49,980
for our company and not wait if an

308
00:11:48,060 --> 00:11:51,000
analyst didn't say Australia it needs to

309
00:11:49,980 --> 00:11:54,330
reset their past for 3:00 in the morning

310
00:11:51,000 --> 00:11:55,800
I don't have to wake up so that was a

311
00:11:54,330 --> 00:11:57,510
cool line you can go create users that

312
00:11:55,800 --> 00:11:59,849
way the important thing is know what

313
00:11:57,510 --> 00:12:01,650
right group you've assigned so estoppel

314
00:11:59,850 --> 00:12:03,300
US has an API series and write groups

315
00:12:01,650 --> 00:12:05,459
and if you assign it use of the wrong

316
00:12:03,300 --> 00:12:09,630
group it makes your access harder later

317
00:12:05,460 --> 00:12:11,310
on the other weird little cabbie from

318
00:12:09,630 --> 00:12:12,660
this is when you create the user it

319
00:12:11,310 --> 00:12:14,040
doesn't set a password you have to set

320
00:12:12,660 --> 00:12:15,719
the password with an independent API

321
00:12:14,040 --> 00:12:18,390
call so that's what that set user

322
00:12:15,720 --> 00:12:20,730
password is so that script down below

323
00:12:18,390 --> 00:12:22,770
actually goes through for every single

324
00:12:20,730 --> 00:12:24,420
user in that list that matches the

325
00:12:22,770 --> 00:12:26,430
username and then resets the password

326
00:12:24,420 --> 00:12:28,199
because I can't call set password uses

327
00:12:26,430 --> 00:12:31,829
individually but I can but I'm lazy I'm

328
00:12:28,200 --> 00:12:33,960
a Python match in creative vouchers this

329
00:12:31,830 --> 00:12:36,660
is handy so there's a lot of cool talks

330
00:12:33,960 --> 00:12:39,120
about people releasing frameworks to say

331
00:12:36,660 --> 00:12:41,939
automatically roll up and roll down

332
00:12:39,120 --> 00:12:43,950
there any WS services in real time and

333
00:12:41,940 --> 00:12:46,650
the problem is with hash table lets you

334
00:12:43,950 --> 00:12:48,210
view the original voucher per agent so

335
00:12:46,650 --> 00:12:50,370
if you create them all in advance tied

336
00:12:48,210 --> 00:12:52,320
to an ansible script you could spin up

337
00:12:50,370 --> 00:12:54,930
and spin down your whole AWS or as your

338
00:12:52,320 --> 00:12:55,860
infrastructure or SoftLayer if you're

339
00:12:54,930 --> 00:12:59,640
crazy enough

340
00:12:55,860 --> 00:13:01,560
sorry IBM you can print all your

341
00:12:59,640 --> 00:13:02,970
vouchers often go in on this and make

342
00:13:01,560 --> 00:13:05,969
things quickly I actually did this form

343
00:13:02,970 --> 00:13:11,540
you're putting up 300 plus cheap used

344
00:13:05,970 --> 00:13:11,540
last year we lost to CSP jerks

345
00:13:11,660 --> 00:13:20,620
we beat you this year so yeah barely

346
00:13:17,930 --> 00:13:21,750
thank you Mingo we all hate you

347
00:13:20,620 --> 00:13:24,330
[Music]

348
00:13:21,750 --> 00:13:25,920
the other cool thing is by the way

349
00:13:24,330 --> 00:13:26,850
abusing this is a bad example you really

350
00:13:25,920 --> 00:13:29,339
shouldn't turn off the donate button

351
00:13:26,850 --> 00:13:31,260
until you've donated but yeah the first

352
00:13:29,340 --> 00:13:32,820
thing I disabled the donation banner at

353
00:13:31,260 --> 00:13:36,319
the bottom of the hash table so I

354
00:13:32,820 --> 00:13:36,320
actually automated that into a script

355
00:13:37,340 --> 00:13:41,250
yeah thank you by the way so we didn't

356
00:13:39,960 --> 00:13:45,420
have an option to kill the duration

357
00:13:41,250 --> 00:13:46,920
banner and people meta bitched and my

358
00:13:45,420 --> 00:13:49,589
lovely friends here up at the front

359
00:13:46,920 --> 00:13:51,449
might have convinced the folks over in

360
00:13:49,590 --> 00:13:53,970
Switzerland to change this as an option

361
00:13:51,450 --> 00:13:55,950
so please donate to the hash topless

362
00:13:53,970 --> 00:13:57,750
project because it's tricking another

363
00:13:55,950 --> 00:13:59,250
group that does a number of things get

364
00:13:57,750 --> 00:14:01,950
master donations these guys get like

365
00:13:59,250 --> 00:14:04,430
nothing they do it for beer money so buy

366
00:14:01,950 --> 00:14:04,430
them beer

367
00:14:04,680 --> 00:14:08,280
the other cool thing is you guys should

368
00:14:05,940 --> 00:14:10,800
reconfigure hash top lists through the

369
00:14:08,280 --> 00:14:12,569
API so you can go first start off list

370
00:14:10,800 --> 00:14:14,930
like - dude what options are like

371
00:14:12,570 --> 00:14:17,070
cracking Yubikey fine-tuning UI server

372
00:14:14,930 --> 00:14:19,920
etc so when you reset your hash table

373
00:14:17,070 --> 00:14:21,720
list as often as I do we can actually do

374
00:14:19,920 --> 00:14:22,829
a here's what all the settings are and

375
00:14:21,720 --> 00:14:25,620
make sure they don't get touched and

376
00:14:22,830 --> 00:14:28,050
played with which is handy in this dev

377
00:14:25,620 --> 00:14:29,910
ops world you can figure what

378
00:14:28,050 --> 00:14:31,829
configuration configuration items there

379
00:14:29,910 --> 00:14:33,300
are that you need and so that's another

380
00:14:31,830 --> 00:14:34,800
cool little feature of this talk and

381
00:14:33,300 --> 00:14:37,079
yeah we'll post all this to the github

382
00:14:34,800 --> 00:14:39,030
in fact I'll probably send the deck as

383
00:14:37,080 --> 00:14:41,940
is to the hash Tom Plus project and say

384
00:14:39,030 --> 00:14:44,010
here go hard I'll put on my github repo

385
00:14:41,940 --> 00:14:46,740
either or we'll figure it out

386
00:14:44,010 --> 00:14:49,290
this script this script is gold you'll

387
00:14:46,740 --> 00:14:53,340
all want to take a copy of this so when

388
00:14:49,290 --> 00:14:54,900
you submit a job - topless and you have

389
00:14:53,340 --> 00:14:56,670
a analysts that don't know what they're

390
00:14:54,900 --> 00:14:58,500
doing they tend to submit jobs that will

391
00:14:56,670 --> 00:14:59,910
cause all of your agents to die or

392
00:14:58,500 --> 00:15:01,440
during a competition and you have to go

393
00:14:59,910 --> 00:15:03,240
through manage select or pop in the

394
00:15:01,440 --> 00:15:06,180
database and flip all the fields and

395
00:15:03,240 --> 00:15:08,610
it's such a pain in the ass this script

396
00:15:06,180 --> 00:15:11,849
goes through lists all your agents on a

397
00:15:08,610 --> 00:15:13,380
science all their tasks disabled CPU

398
00:15:11,850 --> 00:15:14,910
only if they screwed things up resets

399
00:15:13,380 --> 00:15:17,100
them to trust it sets their parameters

400
00:15:14,910 --> 00:15:19,380
like optimize and we're club profile 3

401
00:15:17,100 --> 00:15:22,019
you shouldn't really do this but I like

402
00:15:19,380 --> 00:15:24,149
to because I optimize every one of my

403
00:15:22,019 --> 00:15:25,920
because most of my jobs are short and

404
00:15:24,149 --> 00:15:27,389
then it resets the agent to active again

405
00:15:25,920 --> 00:15:29,878
so all of a sudden you're jammed up

406
00:15:27,389 --> 00:15:31,769
cracking job assuming your task isn't

407
00:15:29,879 --> 00:15:33,209
broken you fix there's no problem all

408
00:15:31,769 --> 00:15:35,309
our agents spin right back up again

409
00:15:33,209 --> 00:15:38,399
you're good to go doing this through the

410
00:15:35,309 --> 00:15:41,279
GUI if you have say 80 plus agents takes

411
00:15:38,399 --> 00:15:44,459
forever do it this it's done a minute or

412
00:15:41,279 --> 00:15:46,230
two and you're back to operations you

413
00:15:44,459 --> 00:15:49,439
guys really need to make a freaking

414
00:15:46,230 --> 00:15:53,160
unassign all reset button in the agent

415
00:15:49,439 --> 00:15:55,379
GUI yeah yeah I'll go yell at s3 and go

416
00:15:53,160 --> 00:15:57,959
pay my fees that uh whatever conference

417
00:15:55,379 --> 00:16:01,379
is that my license fees fresh Tom Plus

418
00:15:57,959 --> 00:16:03,029
is bourbon every year so and that's

419
00:16:01,379 --> 00:16:05,819
actually a really quick frickin mend I

420
00:16:03,029 --> 00:16:07,739
didn't realize it'd be this fast I can

421
00:16:05,819 --> 00:16:11,309
go through the user API for specifics

422
00:16:07,739 --> 00:16:15,179
but I do want to thank s3 and all the

423
00:16:11,309 --> 00:16:16,439
crew Adam for making hash CAD donate the

424
00:16:15,179 --> 00:16:18,350
hash table us project these folks need

425
00:16:16,439 --> 00:16:20,939
beer and does anyone have any questions

426
00:16:18,350 --> 00:16:24,809
before we get into the rest of the more

427
00:16:20,939 --> 00:16:26,610
from shenanigans no easy they're all

428
00:16:24,809 --> 00:16:28,259
really drunk and really hungover I went

429
00:16:26,610 --> 00:16:31,290
really fast and you're all confused and

430
00:16:28,259 --> 00:16:33,629
that's okay you and your stupid chickens

431
00:16:31,290 --> 00:16:37,259
render man so in that note thank you all

432
00:16:33,629 --> 00:16:45,749
for coming to my talk and have yourself

433
00:16:37,259 --> 00:16:49,610
a good day by the way I am available for

434
00:16:45,749 --> 00:16:49,610
children's parties let's go

435
00:17:04,339 --> 00:17:09,000
it's not really no questions none

436
00:17:06,690 --> 00:17:18,420
whatsoever perfect and joy have fun and

437
00:17:09,000 --> 00:17:24,390
make sure you tip the clown I'm not

438
00:17:18,420 --> 00:17:29,160
reading that Bitcoin address I mean give

439
00:17:24,390 --> 00:17:30,540
me money that Bitcoin addresses on the

440
00:17:29,160 --> 00:17:32,280
bottom of the hash topless project

441
00:17:30,540 --> 00:17:38,480
download it donate money to them because

442
00:17:32,280 --> 00:17:38,480
CSP does work for me for free thank you

