1
00:17:14,880 --> 00:17:17,840
qatar

2
00:17:28,640 --> 00:17:31,800
to mourinho

3
00:17:35,430 --> 00:17:38,619
[Music]

4
00:17:40,870 --> 00:17:44,129
[Music]

5
00:17:56,480 --> 00:17:59,480
tattoo

6
00:18:22,180 --> 00:18:25,329
[Music]

7
00:18:36,400 --> 00:18:39,400
hey

8
00:18:44,420 --> 00:18:46,000
[Music]

9
00:18:46,000 --> 00:18:49,149
[Applause]

10
00:18:50,100 --> 00:18:58,679
[Music]

11
00:19:16,720 --> 00:19:19,180
[Music]

12
00:19:19,180 --> 00:19:25,489
[Applause]

13
00:19:29,600 --> 00:19:31,520
that's one

14
00:19:31,520 --> 00:19:33,280
small hoof step

15
00:19:33,280 --> 00:19:36,480
for sheep

16
00:19:36,480 --> 00:19:41,520
one giant leap for even-toed ungulates

17
00:19:42,320 --> 00:19:43,280
although

18
00:19:43,280 --> 00:19:45,280
i was sitting at the back is a llama an

19
00:19:45,280 --> 00:19:47,600
ungulate yeah yes i wouldn't read the

20
00:19:47,600 --> 00:19:48,719
wikipedia page

21
00:19:48,719 --> 00:19:50,239
they're both even toad ungulates but

22
00:19:50,239 --> 00:19:51,520
they're camelids

23
00:19:51,520 --> 00:19:53,120
i didn't yeah all right i'm getting them

24
00:19:53,120 --> 00:19:54,560
getting confirmation from from the

25
00:19:54,560 --> 00:19:56,400
audience

26
00:19:56,400 --> 00:19:58,560
anyway hello

27
00:19:58,560 --> 00:20:00,320
i spent 10 minutes i spent 10 minutes

28
00:20:00,320 --> 00:20:02,880
reading wikipedia pages about camellids

29
00:20:02,880 --> 00:20:04,080
instead of figuring out what i was going

30
00:20:04,080 --> 00:20:07,199
to say but nevertheless my name is adam

31
00:20:07,199 --> 00:20:08,320
boilo

32
00:20:08,320 --> 00:20:11,520
some of you may know me as metalstorm

33
00:20:11,520 --> 00:20:13,840
which is what happens when 14 year old

34
00:20:13,840 --> 00:20:15,440
self picks the name that you end up

35
00:20:15,440 --> 00:20:17,360
being known professionally as

36
00:20:17,360 --> 00:20:19,920
quite a lot of years later um and yes

37
00:20:19,920 --> 00:20:21,360
you may recall me from such events as

38
00:20:21,360 --> 00:20:23,760
kiwi con this is not kiwi con

39
00:20:23,760 --> 00:20:27,040
this is kawaii con 2 and i am

40
00:20:27,040 --> 00:20:29,360
so very glad to see you all in this room

41
00:20:29,360 --> 00:20:31,199
i honestly did not think

42
00:20:31,199 --> 00:20:33,840
we would be back here you know the

43
00:20:33,840 --> 00:20:35,600
pandemic times

44
00:20:35,600 --> 00:20:37,840
um

45
00:20:38,480 --> 00:20:40,080
the idea of having a room with a

46
00:20:40,080 --> 00:20:41,679
thousand people for many of you is

47
00:20:41,679 --> 00:20:43,040
probably quite terrifying this is

48
00:20:43,040 --> 00:20:44,800
probably the biggest group of people

49
00:20:44,800 --> 00:20:46,400
you've been in a room within the last

50
00:20:46,400 --> 00:20:49,280
three years so thank you for coming

51
00:20:49,280 --> 00:20:51,280
thank you for accommodating the very

52
00:20:51,280 --> 00:20:53,199
strange requirements you know having to

53
00:20:53,199 --> 00:20:56,800
show idea to hackacon like small times

54
00:20:56,800 --> 00:20:58,560
but that's what it takes and obviously

55
00:20:58,560 --> 00:21:00,480
we want to keep you safe we want this

56
00:21:00,480 --> 00:21:04,400
event uh to be as much fun and

57
00:21:04,400 --> 00:21:06,080
as important for the community as any of

58
00:21:06,080 --> 00:21:07,920
the previous you know cons that we run

59
00:21:07,920 --> 00:21:10,719
by this it's different times so

60
00:21:10,719 --> 00:21:11,760
please

61
00:21:11,760 --> 00:21:14,480
respect your friends and neighbors sit

62
00:21:14,480 --> 00:21:17,040
around you know enjoy the show it's a

63
00:21:17,040 --> 00:21:18,400
slightly different format than in

64
00:21:18,400 --> 00:21:20,320
previous years because of some of these

65
00:21:20,320 --> 00:21:21,840
restrictions

66
00:21:21,840 --> 00:21:23,360
but we're very very glad to have you

67
00:21:23,360 --> 00:21:26,159
here and we're very very glad that all

68
00:21:26,159 --> 00:21:27,840
of you seem to be vast

69
00:21:27,840 --> 00:21:30,239
it's nice um and wearing masks and

70
00:21:30,239 --> 00:21:32,719
following the rules that you know when

71
00:21:32,719 --> 00:21:34,639
we tried to structure you know how we

72
00:21:34,639 --> 00:21:36,400
would possibly do this event in these

73
00:21:36,400 --> 00:21:37,840
times

74
00:21:37,840 --> 00:21:38,800
you know there are a lot of difficult

75
00:21:38,800 --> 00:21:40,000
choices to make you know we hate

76
00:21:40,000 --> 00:21:42,960
excluding people um

77
00:21:42,960 --> 00:21:45,120
but it is an unusual and exceptional

78
00:21:45,120 --> 00:21:47,920
time now i will be your mc today uh and

79
00:21:47,920 --> 00:21:49,040
tomorrow

80
00:21:49,040 --> 00:21:50,719
uh one of the things that people often

81
00:21:50,719 --> 00:21:52,400
asked about the evolution of kiwicon

82
00:21:52,400 --> 00:21:54,320
into kawaiicon is kind of what's what's

83
00:21:54,320 --> 00:21:55,600
changed and

84
00:21:55,600 --> 00:21:57,600
the main thing that's changed is i

85
00:21:57,600 --> 00:21:59,520
stepped back and everything that i used

86
00:21:59,520 --> 00:22:00,320
to do

87
00:22:00,320 --> 00:22:02,000
is done by spot

88
00:22:02,000 --> 00:22:03,199
who is

89
00:22:03,199 --> 00:22:04,320
lurking

90
00:22:04,320 --> 00:22:07,879
lurking in the wings

91
00:22:11,360 --> 00:22:12,480
so

92
00:22:12,480 --> 00:22:13,600
all you people who are going to come up

93
00:22:13,600 --> 00:22:15,120
and say hey metal thanks for no i didn't

94
00:22:15,120 --> 00:22:16,239
do anything i'm just standing on the

95
00:22:16,239 --> 00:22:17,920
stage i got shown up and given the

96
00:22:17,920 --> 00:22:19,679
script this morning and that's all i'm

97
00:22:19,679 --> 00:22:22,400
just the talent

98
00:22:22,400 --> 00:22:25,040
for very small small valleys of talent

99
00:22:25,040 --> 00:22:26,239
anyway so

100
00:22:26,239 --> 00:22:28,800
there is a few items of housekeeping for

101
00:22:28,800 --> 00:22:30,719
us to run through before we get on with

102
00:22:30,719 --> 00:22:32,880
the show so

103
00:22:32,880 --> 00:22:34,320
briefing item number one the

104
00:22:34,320 --> 00:22:35,679
requirements for your mission are to

105
00:22:35,679 --> 00:22:37,520
wear a mask unless you are speaking in

106
00:22:37,520 --> 00:22:39,920
which case i respect hopefully requests

107
00:22:39,920 --> 00:22:41,440
that none of you breathe on me while i'm

108
00:22:41,440 --> 00:22:44,320
speaking or any of the other speakers um

109
00:22:44,320 --> 00:22:46,960
so yes master on at times in the venue

110
00:22:46,960 --> 00:22:49,120
the respondent indicates

111
00:22:49,120 --> 00:22:50,800
that you have been checked for your

112
00:22:50,800 --> 00:22:52,480
vaccine status there's also a

113
00:22:52,480 --> 00:22:53,600
requirement

114
00:22:53,600 --> 00:22:56,480
um if you feel unwell

115
00:22:56,480 --> 00:22:58,000
please do leave the calm we are live

116
00:22:58,000 --> 00:22:59,679
streaming which is kind of new for us so

117
00:22:59,679 --> 00:23:01,360
if you you know if you feel unwell you

118
00:23:01,360 --> 00:23:04,000
feel like um you know even just being

119
00:23:04,000 --> 00:23:05,520
here is challenging right if you if you

120
00:23:05,520 --> 00:23:07,520
find you know that the pressure of all

121
00:23:07,520 --> 00:23:10,480
the people around you uh is difficult

122
00:23:10,480 --> 00:23:11,840
feel free to leave the corner watch the

123
00:23:11,840 --> 00:23:14,000
live stream we have 800 rat tests

124
00:23:14,000 --> 00:23:15,760
available at the reception desk if you

125
00:23:15,760 --> 00:23:17,760
do need some

126
00:23:17,760 --> 00:23:20,320
feel free to go past a reception and

127
00:23:20,320 --> 00:23:23,360
grab one of those

128
00:23:23,840 --> 00:23:26,719
there are very few events um this year

129
00:23:26,719 --> 00:23:28,000
obviously you know having a big enough

130
00:23:28,000 --> 00:23:30,080
space to safely have you all in you know

131
00:23:30,080 --> 00:23:32,000
does kind of limit what we can do

132
00:23:32,000 --> 00:23:34,480
outside of this main the main foyer

133
00:23:34,480 --> 00:23:36,560
the main auditorium and the foyers

134
00:23:36,560 --> 00:23:38,560
so there's the house ctf up in the

135
00:23:38,560 --> 00:23:41,120
renouf there's also some lock sports up

136
00:23:41,120 --> 00:23:42,880
there we will have a movie here tonight

137
00:23:42,880 --> 00:23:45,600
the andromeda strain 1971 version we'll

138
00:23:45,600 --> 00:23:48,560
be screening in here

139
00:23:48,560 --> 00:23:51,280
if it does get all a bit much for you

140
00:23:51,280 --> 00:23:53,360
the lion harbour

141
00:23:53,360 --> 00:23:55,280
lounge which is upstairs

142
00:23:55,280 --> 00:23:56,800
around the back on the top floor is

143
00:23:56,800 --> 00:23:58,400
available as a kind of quiet space place

144
00:23:58,400 --> 00:24:00,960
to go chill out get away from the crowds

145
00:24:00,960 --> 00:24:02,159
get away from some of the social

146
00:24:02,159 --> 00:24:03,520
interaction because we are all a bunch

147
00:24:03,520 --> 00:24:05,440
of poorly adjusted nerds

148
00:24:05,440 --> 00:24:07,040
if you need that that is available to

149
00:24:07,040 --> 00:24:09,840
you uh there are t-shirts available um

150
00:24:09,840 --> 00:24:12,159
for sale from midday i think there are

151
00:24:12,159 --> 00:24:14,159
also some cookbooks left

152
00:24:14,159 --> 00:24:15,520
if you'd like to see what we did in our

153
00:24:15,520 --> 00:24:16,639
off time

154
00:24:16,639 --> 00:24:18,320
whilst not organizing a con for the last

155
00:24:18,320 --> 00:24:20,719
two years

156
00:24:20,719 --> 00:24:23,199
and of course there are the sponsors uh

157
00:24:23,199 --> 00:24:25,040
that pay for the venue pay for the

158
00:24:25,040 --> 00:24:27,040
equipment pay for the rope to pull the

159
00:24:27,040 --> 00:24:28,960
llama out on you know it's very

160
00:24:28,960 --> 00:24:31,920
sophisticated stage props uh so yes our

161
00:24:31,920 --> 00:24:34,639
emperor tamarin tier sponsors or

162
00:24:34,639 --> 00:24:37,600
information security cyber cx spark and

163
00:24:37,600 --> 00:24:42,040
google thank you very much

164
00:24:45,840 --> 00:24:48,719
the norwegian forest cat tier sponsors

165
00:24:48,719 --> 00:24:50,080
this is this bogan's doing he's the one

166
00:24:50,080 --> 00:24:52,000
who chooses the sponsorship tiers so

167
00:24:52,000 --> 00:24:54,080
well this is what we get uh exonic

168
00:24:54,080 --> 00:24:56,800
infosec pulse security instillery and

169
00:24:56,800 --> 00:24:59,840
cyber research also contributed

170
00:24:59,840 --> 00:25:02,560
mad stacks

171
00:25:04,639 --> 00:25:08,080
and the mary river turtle tier sponsors

172
00:25:08,080 --> 00:25:09,120
canva

173
00:25:09,120 --> 00:25:11,679
elastico red shield black lock cyber

174
00:25:11,679 --> 00:25:14,880
gala and privseck

175
00:25:18,320 --> 00:25:20,800
and finally the pigbee raccoon tier

176
00:25:20,800 --> 00:25:21,920
sponsors

177
00:25:21,920 --> 00:25:24,719
very very cute mindshift trenchant and

178
00:25:24,719 --> 00:25:28,880
iraq need digital so thank you very much

179
00:25:32,080 --> 00:25:33,760
these helmets don't just come for free

180
00:25:33,760 --> 00:25:35,840
you know we have to pay for them

181
00:25:35,840 --> 00:25:37,600
so they only had child-sized ones i had

182
00:25:37,600 --> 00:25:39,280
to slip them

183
00:25:39,280 --> 00:25:40,960
back to get it over my head but you know

184
00:25:40,960 --> 00:25:42,639
it fits it fits the llama that's the

185
00:25:42,639 --> 00:25:45,198
important thing

186
00:25:45,360 --> 00:25:46,159
right

187
00:25:46,159 --> 00:25:47,600
so i think that's about it for

188
00:25:47,600 --> 00:25:50,400
housekeeping things we will move on with

189
00:25:50,400 --> 00:25:52,639
the show and i yeah i just thank you so

190
00:25:52,639 --> 00:25:53,440
much

191
00:25:53,440 --> 00:25:55,280
for making the effort you know flying

192
00:25:55,280 --> 00:25:57,520
when it feels uncomfortable traveling

193
00:25:57,520 --> 00:25:59,040
you know staying away from home away

194
00:25:59,040 --> 00:26:00,239
from family

195
00:26:00,239 --> 00:26:03,199
to come and join us and i hope you have

196
00:26:03,199 --> 00:26:04,719
a wonderful time

197
00:26:04,719 --> 00:26:06,960
and if you need anything you have any

198
00:26:06,960 --> 00:26:08,480
questions if there's concerns there's

199
00:26:08,480 --> 00:26:10,320
problems feel free to talk to one of the

200
00:26:10,320 --> 00:26:12,320
volunteers who'll radio the crew and we

201
00:26:12,320 --> 00:26:13,120
will

202
00:26:13,120 --> 00:26:14,880
do our absolute best to take care of it

203
00:26:14,880 --> 00:26:16,639
for you so

204
00:26:16,639 --> 00:26:18,320
it's now my pleasure

205
00:26:18,320 --> 00:26:20,159
to introduce the first speaker of the

206
00:26:20,159 --> 00:26:20,960
day

207
00:26:20,960 --> 00:26:23,679
mr darren bilby now darren has been

208
00:26:23,679 --> 00:26:25,040
kicking around the infrastructure for a

209
00:26:25,040 --> 00:26:26,560
very long time actually worked with him

210
00:26:26,560 --> 00:26:27,880
uh back at

211
00:26:27,880 --> 00:26:31,600
securityassessment.com in the mid 2000s

212
00:26:31,600 --> 00:26:32,480
he

213
00:26:32,480 --> 00:26:34,480
left went overseas

214
00:26:34,480 --> 00:26:37,280
went off to google uh where darren has

215
00:26:37,280 --> 00:26:38,719
been involved in

216
00:26:38,719 --> 00:26:39,840
some little things you might have heard

217
00:26:39,840 --> 00:26:41,840
of like the uh the aurora breach where

218
00:26:41,840 --> 00:26:43,440
china hacked google and a few other bits

219
00:26:43,440 --> 00:26:45,679
and pieces over the years so here's a

220
00:26:45,679 --> 00:26:46,960
lot of

221
00:26:46,960 --> 00:26:49,520
very interesting insights and

222
00:26:49,520 --> 00:26:51,120
google's style google scale

223
00:26:51,120 --> 00:26:53,199
understanding of the problems that we

224
00:26:53,199 --> 00:26:54,400
face

225
00:26:54,400 --> 00:26:55,920
and of course you know google has some

226
00:26:55,920 --> 00:26:57,280
interesting solutions to some of these

227
00:26:57,280 --> 00:26:58,560
so

228
00:26:58,560 --> 00:27:00,639
without further ado

229
00:27:00,639 --> 00:27:04,080
ladies and gentlemen non-binary pals

230
00:27:04,080 --> 00:27:05,670
miss darren bilby

231
00:27:05,670 --> 00:27:15,600
[Applause]

232
00:27:15,600 --> 00:27:17,600
okay i think we're set up

233
00:27:17,600 --> 00:27:20,880
hey co-icon it is fantastic to be here

234
00:27:20,880 --> 00:27:22,560
um it's just incredible to kind of

235
00:27:22,560 --> 00:27:23,679
actually be able to stand in this place

236
00:27:23,679 --> 00:27:25,280
with this many people actually in person

237
00:27:25,280 --> 00:27:27,360
after so much time

238
00:27:27,360 --> 00:27:29,360
i'm a kiwi but have been living kind of

239
00:27:29,360 --> 00:27:31,520
overseas for about the last 15 years but

240
00:27:31,520 --> 00:27:33,120
i've always kind of managed to come back

241
00:27:33,120 --> 00:27:35,280
kind of semi-regularly to kiwicon

242
00:27:35,280 --> 00:27:37,040
originally and now coming back for

243
00:27:37,040 --> 00:27:39,440
koicon and over that time just seeing

244
00:27:39,440 --> 00:27:41,199
the incredible kind of growth in the

245
00:27:41,199 --> 00:27:43,520
community here and and just seeing you

246
00:27:43,520 --> 00:27:45,760
know both the passion and community

247
00:27:45,760 --> 00:27:47,760
that's been built here over the years is

248
00:27:47,760 --> 00:27:49,760
just incredible to see and i know that

249
00:27:49,760 --> 00:27:51,199
that's been done kind of under the

250
00:27:51,199 --> 00:27:53,679
stewardship of some incredible infosec

251
00:27:53,679 --> 00:27:56,080
leaders like metal but spot and a whole

252
00:27:56,080 --> 00:27:58,159
bunch of the crew here and i just want

253
00:27:58,159 --> 00:27:59,840
to say firstly a massive thank you to

254
00:27:59,840 --> 00:28:01,360
them for bringing this community

255
00:28:01,360 --> 00:28:05,280
together over the years so thank you

256
00:28:09,840 --> 00:28:11,280
so this morning i want to talk about

257
00:28:11,280 --> 00:28:13,440
kind of three significant incidents and

258
00:28:13,440 --> 00:28:15,440
talk about the impact that they've had

259
00:28:15,440 --> 00:28:17,520
on the infosec industry and i want to do

260
00:28:17,520 --> 00:28:18,880
this you know over the last 18 months

261
00:28:18,880 --> 00:28:20,159
we've had a bunch of stuff that's going

262
00:28:20,159 --> 00:28:22,239
on it's been somewhat unprecedented in

263
00:28:22,239 --> 00:28:23,840
the number of people in the size of the

264
00:28:23,840 --> 00:28:24,960
companies and everyone that's been

265
00:28:24,960 --> 00:28:26,320
hacked and i want to spend some time

266
00:28:26,320 --> 00:28:28,000
talking about that but i wanted to spend

267
00:28:28,000 --> 00:28:29,600
some time talking about what we learned

268
00:28:29,600 --> 00:28:31,520
from that and i want to spend some time

269
00:28:31,520 --> 00:28:32,719
thinking about

270
00:28:32,719 --> 00:28:34,960
what our role is in ensuring that the

271
00:28:34,960 --> 00:28:37,199
infosec industry evolves

272
00:28:37,199 --> 00:28:39,360
and so let's kind of talk about that

273
00:28:39,360 --> 00:28:41,760
quick thing on me yes i work at google

274
00:28:41,760 --> 00:28:43,360
i've been there for about kind of near

275
00:28:43,360 --> 00:28:45,520
on 15 years or so i've worked across a

276
00:28:45,520 --> 00:28:47,600
bunch of roles i i was tech lead for the

277
00:28:47,600 --> 00:28:49,679
in for the incident response team for a

278
00:28:49,679 --> 00:28:51,520
while i did pen testing for them i've

279
00:28:51,520 --> 00:28:53,280
done software engineering for them and i

280
00:28:53,280 --> 00:28:54,800
now run a team called enterprise

281
00:28:54,800 --> 00:28:56,400
infrastructure protection

282
00:28:56,400 --> 00:28:58,480
and our job is to stop google from

283
00:28:58,480 --> 00:29:00,159
getting hacked on the protection side of

284
00:29:00,159 --> 00:29:02,639
the house so that means that we can kind

285
00:29:02,639 --> 00:29:04,400
of invest our time whether that being

286
00:29:04,400 --> 00:29:06,320
our developer infrastructure at google

287
00:29:06,320 --> 00:29:08,719
whether that be kind of the production

288
00:29:08,719 --> 00:29:10,320
hardware that underpins a bunch of the

289
00:29:10,320 --> 00:29:12,320
google infrastructure whether that be

290
00:29:12,320 --> 00:29:13,840
you know how access control works at

291
00:29:13,840 --> 00:29:15,760
google i take care of a lot of that with

292
00:29:15,760 --> 00:29:18,239
a team of over kind of 200 people spread

293
00:29:18,239 --> 00:29:20,000
across the world

294
00:29:20,000 --> 00:29:22,159
that's a non-trivial job but luckily i

295
00:29:22,159 --> 00:29:24,159
work for a company that's well resourced

296
00:29:24,159 --> 00:29:25,920
and has kind of security built into the

297
00:29:25,920 --> 00:29:27,840
dna it's a very much a core

298
00:29:27,840 --> 00:29:29,920
understanding at google that security is

299
00:29:29,920 --> 00:29:31,760
a part of the infrastructure and what

300
00:29:31,760 --> 00:29:35,360
makes the company work as a whole

301
00:29:35,360 --> 00:29:36,560
so

302
00:29:36,560 --> 00:29:38,880
one of the key things that i talk about

303
00:29:38,880 --> 00:29:40,400
with my team and one of the things i try

304
00:29:40,400 --> 00:29:43,440
and instill in my team is this idea of

305
00:29:43,440 --> 00:29:45,760
solving classes of problems we have a

306
00:29:45,760 --> 00:29:47,360
huge amount of work to get done to kind

307
00:29:47,360 --> 00:29:49,360
of secure a company like google and all

308
00:29:49,360 --> 00:29:51,440
of its subsidiaries

309
00:29:51,440 --> 00:29:53,760
you know as a as a set of companies but

310
00:29:53,760 --> 00:29:55,600
one of the things that we talk about is

311
00:29:55,600 --> 00:29:57,360
to do this we have to kind of focus on

312
00:29:57,360 --> 00:29:59,120
solving classes of problems not

313
00:29:59,120 --> 00:30:01,199
individual problems and what i mean by

314
00:30:01,199 --> 00:30:01,920
that

315
00:30:01,920 --> 00:30:05,040
is you know when we have xss bugs in our

316
00:30:05,040 --> 00:30:07,199
infrastructure right that fo that folks

317
00:30:07,199 --> 00:30:09,440
can exploit we don't go and hire a team

318
00:30:09,440 --> 00:30:11,679
to go and find all of those bugs instead

319
00:30:11,679 --> 00:30:13,440
we invest in a team that builds web

320
00:30:13,440 --> 00:30:15,600
frameworks that ensure that we basically

321
00:30:15,600 --> 00:30:17,440
eliminate those kind of bugs from

322
00:30:17,440 --> 00:30:19,440
happening they just can't happen in our

323
00:30:19,440 --> 00:30:21,199
core standard infrastructure and that's

324
00:30:21,199 --> 00:30:22,560
what i mean by solving classes of

325
00:30:22,560 --> 00:30:25,280
problems and i want to talk about that

326
00:30:25,280 --> 00:30:27,199
one of the ways that we do that and one

327
00:30:27,199 --> 00:30:28,719
of the key techniques that we use for

328
00:30:28,719 --> 00:30:30,480
this is what we call the blameless

329
00:30:30,480 --> 00:30:32,480
postmortem hopefully if you work in tech

330
00:30:32,480 --> 00:30:34,719
you've come across this phrasing before

331
00:30:34,719 --> 00:30:36,400
it's pretty simple the idea is when you

332
00:30:36,400 --> 00:30:38,400
have an incident go and understand

333
00:30:38,400 --> 00:30:40,159
exactly what happened build the timeline

334
00:30:40,159 --> 00:30:42,239
of what happened go back and understand

335
00:30:42,239 --> 00:30:44,080
what went well what went poorly but

336
00:30:44,080 --> 00:30:46,159
really understand the root causes and

337
00:30:46,159 --> 00:30:48,400
then go and do something about them and

338
00:30:48,400 --> 00:30:50,239
that's pretty critical and you can only

339
00:30:50,239 --> 00:30:51,520
really do that if you do it in a

340
00:30:51,520 --> 00:30:53,040
blameless way which is to say people

341
00:30:53,040 --> 00:30:54,320
that are thinking about that aren't

342
00:30:54,320 --> 00:30:55,199
worried about whether they're going to

343
00:30:55,199 --> 00:30:56,560
keep their jobs where they're going to

344
00:30:56,560 --> 00:30:58,159
be fired because they made a mistake but

345
00:30:58,159 --> 00:30:59,600
because everyone understands how that

346
00:30:59,600 --> 00:31:00,800
works

347
00:31:00,800 --> 00:31:03,520
so i want to kind of take that

348
00:31:03,520 --> 00:31:06,480
and apply the same principle here

349
00:31:06,480 --> 00:31:08,400
not to an individual company not to kind

350
00:31:08,400 --> 00:31:10,000
of how these companies handle their

351
00:31:10,000 --> 00:31:11,840
incidents but how we did as an

352
00:31:11,840 --> 00:31:14,159
information security industry

353
00:31:14,159 --> 00:31:16,719
and handling these incidents now i'm not

354
00:31:16,719 --> 00:31:18,080
going to bring you a bunch of new facts

355
00:31:18,080 --> 00:31:19,520
if you are familiar with these incidents

356
00:31:19,520 --> 00:31:20,880
if you were involved in them in some way

357
00:31:20,880 --> 00:31:22,080
i'm not going to tell you anything

358
00:31:22,080 --> 00:31:23,280
interesting but i want to bring everyone

359
00:31:23,280 --> 00:31:24,960
along and the understanding of what

360
00:31:24,960 --> 00:31:26,960
happened in these things because i think

361
00:31:26,960 --> 00:31:29,840
each of them generated a shift in the

362
00:31:29,840 --> 00:31:30,880
industry

363
00:31:30,880 --> 00:31:33,760
and our response kind of was interesting

364
00:31:33,760 --> 00:31:35,520
and as we talk about these things yes

365
00:31:35,520 --> 00:31:37,040
we'll talk about what went well and a

366
00:31:37,040 --> 00:31:38,080
bunch of things that weren't really

367
00:31:38,080 --> 00:31:40,800
poorly but i also want you to hear as we

368
00:31:40,800 --> 00:31:42,159
talk about this

369
00:31:42,159 --> 00:31:44,080
your role whether you're an i.t person

370
00:31:44,080 --> 00:31:46,000
whether you're a new grad considering a

371
00:31:46,000 --> 00:31:48,000
role in infosec whether you work on

372
00:31:48,000 --> 00:31:49,760
infosec and have been doing so for 20

373
00:31:49,760 --> 00:31:52,480
years consider what your role is

374
00:31:52,480 --> 00:31:54,560
in handling this and dealing with it and

375
00:31:54,560 --> 00:31:57,360
improving the industry as a whole

376
00:31:57,360 --> 00:31:58,560
so firstly let's talk about the

377
00:31:58,560 --> 00:32:00,880
solomon's hack

378
00:32:00,880 --> 00:32:02,719
so what happened so the solarwinds hack

379
00:32:02,719 --> 00:32:04,560
was a supply software supply chain

380
00:32:04,560 --> 00:32:06,719
compromise of solarwinds orion so

381
00:32:06,719 --> 00:32:08,480
solarwinds is a large company they

382
00:32:08,480 --> 00:32:09,840
produce some really nice enterprise

383
00:32:09,840 --> 00:32:11,600
software that does monitoring and a

384
00:32:11,600 --> 00:32:12,960
bunch of things in enterprise

385
00:32:12,960 --> 00:32:15,280
environments okay they're a pretty kind

386
00:32:15,280 --> 00:32:16,560
of popular vendor there's a lot of

387
00:32:16,560 --> 00:32:18,080
companies that have got them

388
00:32:18,080 --> 00:32:19,679
chances are there's one and most of the

389
00:32:19,679 --> 00:32:21,120
companies that you work for there might

390
00:32:21,120 --> 00:32:22,320
be a copy of this sitting around

391
00:32:22,320 --> 00:32:24,880
somewhere now the problem was that they

392
00:32:24,880 --> 00:32:26,960
got compromised via supply chain attack

393
00:32:26,960 --> 00:32:28,800
which is now widely attributed to kind

394
00:32:28,800 --> 00:32:31,040
of state-sponsored kind of activity by

395
00:32:31,040 --> 00:32:32,639
the russian government

396
00:32:32,639 --> 00:32:35,520
um we know that they compromise the the

397
00:32:35,520 --> 00:32:37,199
solarwinds build servers so the place

398
00:32:37,199 --> 00:32:40,000
where the solomon software gets built

399
00:32:40,000 --> 00:32:41,679
right so where it gets compiled they

400
00:32:41,679 --> 00:32:43,600
compromised those servers and then they

401
00:32:43,600 --> 00:32:45,440
injected a malicious payload into

402
00:32:45,440 --> 00:32:48,080
legitimate signed binaries so they

403
00:32:48,080 --> 00:32:49,840
modify the build server made sure every

404
00:32:49,840 --> 00:32:51,280
binary that gets produced by that

405
00:32:51,280 --> 00:32:53,360
environment has their malicious payload

406
00:32:53,360 --> 00:32:54,800
in it and then they waited for that to

407
00:32:54,800 --> 00:32:57,040
get distributed out to everyone

408
00:32:57,040 --> 00:32:58,800
now that worked pretty well it managed

409
00:32:58,800 --> 00:33:00,159
to get distributed to a very large

410
00:33:00,159 --> 00:33:02,080
number of companies and then at some

411
00:33:02,080 --> 00:33:04,080
point they've kind of decided to turn on

412
00:33:04,080 --> 00:33:06,159
so as that malicious kind of payload

413
00:33:06,159 --> 00:33:08,320
started to kick back out to them they

414
00:33:08,320 --> 00:33:09,440
would look at them decide which

415
00:33:09,440 --> 00:33:11,360
companies they wanted to to hack and

416
00:33:11,360 --> 00:33:13,360
which companies they wanted active kind

417
00:33:13,360 --> 00:33:15,760
of connections on they would use those

418
00:33:15,760 --> 00:33:17,120
to then go and do interesting things on

419
00:33:17,120 --> 00:33:19,520
the network a lot of espionage activity

420
00:33:19,520 --> 00:33:20,880
kind of happened through this

421
00:33:20,880 --> 00:33:22,560
you'll notice in the timeline on the

422
00:33:22,560 --> 00:33:24,320
right hand side for this there was a

423
00:33:24,320 --> 00:33:26,639
pretty big gap of nine months between

424
00:33:26,639 --> 00:33:28,080
kind of when this landed and when it

425
00:33:28,080 --> 00:33:29,760
started appearing on these networks and

426
00:33:29,760 --> 00:33:32,880
when it got first detected by by fireeye

427
00:33:32,880 --> 00:33:34,080
and there was a huge number of

428
00:33:34,080 --> 00:33:35,199
government agencies and large

429
00:33:35,199 --> 00:33:36,560
corporations that have got affected by

430
00:33:36,560 --> 00:33:38,800
this now this is problematic because it

431
00:33:38,800 --> 00:33:40,320
turns out this is really hard to defend

432
00:33:40,320 --> 00:33:42,320
from so let's talk about what went

433
00:33:42,320 --> 00:33:44,320
poorly in this in this case

434
00:33:44,320 --> 00:33:46,800
so firstly in our initial response one

435
00:33:46,800 --> 00:33:48,400
detection of this kind of attack is

436
00:33:48,400 --> 00:33:49,440
really hard

437
00:33:49,440 --> 00:33:51,600
it's software that you trusted

438
00:33:51,600 --> 00:33:53,120
that you've been running for a bunch of

439
00:33:53,120 --> 00:33:55,199
years that suddenly turned hostile on

440
00:33:55,199 --> 00:33:56,000
you

441
00:33:56,000 --> 00:33:58,960
that's a really tough thing to detect

442
00:33:58,960 --> 00:34:00,639
you know if once you knew it was a

443
00:34:00,639 --> 00:34:02,960
problem the idea was let's go find where

444
00:34:02,960 --> 00:34:04,880
solarwinds is that requires an inventory

445
00:34:04,880 --> 00:34:06,320
of software in your network that's not

446
00:34:06,320 --> 00:34:08,159
always easy to do either

447
00:34:08,159 --> 00:34:10,400
but let's talk about the bigger things

448
00:34:10,400 --> 00:34:11,840
the long-term response and the root

449
00:34:11,840 --> 00:34:13,679
causes

450
00:34:13,679 --> 00:34:14,960
and this is some of the things that you

451
00:34:14,960 --> 00:34:17,600
hear from the industry and chances are

452
00:34:17,600 --> 00:34:19,520
you've said some of these things

453
00:34:19,520 --> 00:34:21,840
right this will be fine if you only run

454
00:34:21,840 --> 00:34:24,320
software from trusted vendors

455
00:34:24,320 --> 00:34:26,320
not true solarwinds is absolutely a

456
00:34:26,320 --> 00:34:28,639
trusted vendor right it was already in

457
00:34:28,639 --> 00:34:30,719
your network that's how it worked we've

458
00:34:30,719 --> 00:34:31,920
said things like just don't use

459
00:34:31,920 --> 00:34:34,000
solarwinds it was just them you know

460
00:34:34,000 --> 00:34:35,679
they're the only ones that are possibly

461
00:34:35,679 --> 00:34:39,280
vulnerable to this right not true at all

462
00:34:39,280 --> 00:34:40,800
what's come out you look at the network

463
00:34:40,800 --> 00:34:42,239
you look at how they're run they run

464
00:34:42,239 --> 00:34:43,760
like every other enterprise software

465
00:34:43,760 --> 00:34:46,320
company ever right there's nothing

466
00:34:46,320 --> 00:34:48,320
specifically unique about them in this

467
00:34:48,320 --> 00:34:49,679
in this instance

468
00:34:49,679 --> 00:34:51,119
now don't run the malicious software

469
00:34:51,119 --> 00:34:53,040
sure run solo in software but just don't

470
00:34:53,040 --> 00:34:55,360
run the malicious ones right if we solve

471
00:34:55,360 --> 00:34:57,119
that problem we would be in a very

472
00:34:57,119 --> 00:34:58,960
different place we've got an av industry

473
00:34:58,960 --> 00:35:00,320
that's been working for 30 years to

474
00:35:00,320 --> 00:35:02,480
solve this problem we haven't right we

475
00:35:02,480 --> 00:35:03,920
don't know how to do that this is not

476
00:35:03,920 --> 00:35:06,080
useful advice

477
00:35:06,080 --> 00:35:08,960
and then turn off automatic updates

478
00:35:08,960 --> 00:35:10,239
right

479
00:35:10,239 --> 00:35:12,080
right if you don't get the new software

480
00:35:12,080 --> 00:35:13,280
that has the malicious code then you'll

481
00:35:13,280 --> 00:35:15,600
be fine that has other problems as as

482
00:35:15,600 --> 00:35:17,679
hopefully you all understand now you're

483
00:35:17,679 --> 00:35:19,440
running vulnerable software

484
00:35:19,440 --> 00:35:21,679
so so let's talk about some of the thing

485
00:35:21,679 --> 00:35:23,760
things here one software supply chain

486
00:35:23,760 --> 00:35:25,679
this is a really hard problem to solve

487
00:35:25,679 --> 00:35:27,520
now this is a very badly draw diagram of

488
00:35:27,520 --> 00:35:29,520
like the basics you have a computer you

489
00:35:29,520 --> 00:35:31,440
have some sort a whole bunch of software

490
00:35:31,440 --> 00:35:33,199
installed on it you have a bunch of auto

491
00:35:33,199 --> 00:35:34,800
updaters which are connecting over the

492
00:35:34,800 --> 00:35:36,960
internet pulling down software and then

493
00:35:36,960 --> 00:35:38,239
you have a vendor on the other end and

494
00:35:38,239 --> 00:35:40,880
they have a bunch of infrastructure

495
00:35:40,880 --> 00:35:42,239
and so if we think about this from the

496
00:35:42,239 --> 00:35:44,400
numbers say you have 400 pieces of

497
00:35:44,400 --> 00:35:45,840
software installed on your average

498
00:35:45,840 --> 00:35:48,000
machine probably a whole lot more say

499
00:35:48,000 --> 00:35:50,239
that comes from 100 different vendors

500
00:35:50,239 --> 00:35:52,080
right and then we talk about how many

501
00:35:52,080 --> 00:35:53,600
people are involved in that well maybe

502
00:35:53,600 --> 00:35:55,119
there's 20 developers that work on that

503
00:35:55,119 --> 00:35:57,520
piece of software maybe there's 200

504
00:35:57,520 --> 00:35:59,119
people that have access to the software

505
00:35:59,119 --> 00:36:01,040
repository that that software's built in

506
00:36:01,040 --> 00:36:03,040
maybe there's a build server some some

507
00:36:03,040 --> 00:36:05,360
infrastructure some distribution servers

508
00:36:05,360 --> 00:36:06,800
we add up all the people that have

509
00:36:06,800 --> 00:36:09,199
access kind of to do that you've got say

510
00:36:09,199 --> 00:36:11,840
300 people okay 100 vendors we've got 30

511
00:36:11,840 --> 00:36:13,760
000 people that if any one of them gets

512
00:36:13,760 --> 00:36:15,199
hacked it leads to compromise of your

513
00:36:15,199 --> 00:36:17,679
computer okay that's not great but maybe

514
00:36:17,679 --> 00:36:19,520
30 000 we can do

515
00:36:19,520 --> 00:36:20,960
the problem is

516
00:36:20,960 --> 00:36:22,000
that

517
00:36:22,000 --> 00:36:23,600
every one of those developers and every

518
00:36:23,600 --> 00:36:25,360
one of those servers is also a computer

519
00:36:25,360 --> 00:36:27,440
which is full of software

520
00:36:27,440 --> 00:36:29,600
and so every one of those

521
00:36:29,600 --> 00:36:31,440
also has this problem all of them have

522
00:36:31,440 --> 00:36:33,440
those same 30 000 people who know and it

523
00:36:33,440 --> 00:36:35,360
very quickly expands until the entire

524
00:36:35,360 --> 00:36:37,520
software industry through one or two

525
00:36:37,520 --> 00:36:39,440
degrees of separation has the ability to

526
00:36:39,440 --> 00:36:41,360
execute code on your computer

527
00:36:41,360 --> 00:36:43,360
that's a real problem and it's not a

528
00:36:43,360 --> 00:36:44,560
problem that you're going to solve by

529
00:36:44,560 --> 00:36:47,119
not running malicious software

530
00:36:47,119 --> 00:36:48,239
so let's talk about some of the things

531
00:36:48,239 --> 00:36:50,159
that actually went well here though so

532
00:36:50,159 --> 00:36:51,760
one the initial response there was no

533
00:36:51,760 --> 00:36:53,199
victim blaming everyone knew this was

534
00:36:53,199 --> 00:36:54,639
hard that was nice

535
00:36:54,639 --> 00:36:56,560
threat intel sharing kind of worked

536
00:36:56,560 --> 00:36:58,080
right this is actually a new thing we

537
00:36:58,080 --> 00:37:00,000
didn't have that five years ago people

538
00:37:00,000 --> 00:37:01,600
that wanted to know about what

539
00:37:01,600 --> 00:37:04,000
solarwinds was what happened build a

540
00:37:04,000 --> 00:37:05,679
response we could actually do that

541
00:37:05,679 --> 00:37:07,040
that's actually a big change in our

542
00:37:07,040 --> 00:37:08,400
industry

543
00:37:08,400 --> 00:37:09,840
but long term

544
00:37:09,840 --> 00:37:11,679
the root causes what are we doing about

545
00:37:11,679 --> 00:37:13,920
those

546
00:37:14,080 --> 00:37:15,119
so

547
00:37:15,119 --> 00:37:17,280
one software builder materials supply

548
00:37:17,280 --> 00:37:18,639
chain industry and app stores i want to

549
00:37:18,639 --> 00:37:20,239
talk a little bit about each of these

550
00:37:20,239 --> 00:37:21,920
because i think these are things that

551
00:37:21,920 --> 00:37:23,440
are actual responses that started to

552
00:37:23,440 --> 00:37:25,600
happen in our industry that are actually

553
00:37:25,600 --> 00:37:28,080
changing some things

554
00:37:28,080 --> 00:37:30,560
so one the software bill of materials so

555
00:37:30,560 --> 00:37:31,760
some of you might have heard of this

556
00:37:31,760 --> 00:37:34,400
it's suddenly become a much bigger deal

557
00:37:34,400 --> 00:37:36,000
it's really the idea is you should have

558
00:37:36,000 --> 00:37:37,440
a manifest so when you get a piece of

559
00:37:37,440 --> 00:37:39,360
software you should should come with a

560
00:37:39,360 --> 00:37:41,119
manifest that tells you how it was built

561
00:37:41,119 --> 00:37:42,560
where it was built and everything that

562
00:37:42,560 --> 00:37:44,800
went into it every piece of source code

563
00:37:44,800 --> 00:37:46,560
every library that was part of it all of

564
00:37:46,560 --> 00:37:47,920
the things that went into it should come

565
00:37:47,920 --> 00:37:49,679
with that software this is actually

566
00:37:49,679 --> 00:37:51,920
being done as part of an executive order

567
00:37:51,920 --> 00:37:54,000
on improving the nation's cyber security

568
00:37:54,000 --> 00:37:55,440
which in part was a response to

569
00:37:55,440 --> 00:37:57,840
solarwinds and included in this was this

570
00:37:57,840 --> 00:37:59,280
idea that you have to start doing

571
00:37:59,280 --> 00:38:01,119
s-bonds if you want to sell software to

572
00:38:01,119 --> 00:38:02,719
the us government you have to start

573
00:38:02,719 --> 00:38:04,320
including this and it's really

574
00:38:04,320 --> 00:38:06,000
interesting because it's actually kind

575
00:38:06,000 --> 00:38:07,199
of starting to solve some of these

576
00:38:07,199 --> 00:38:08,960
things of is this piece of software

577
00:38:08,960 --> 00:38:11,440
vulnerable do i know what went into it

578
00:38:11,440 --> 00:38:13,199
can i do that and having a lot of

579
00:38:13,199 --> 00:38:15,119
experience working with software vendors

580
00:38:15,119 --> 00:38:17,280
i know how hard this is to do

581
00:38:17,280 --> 00:38:19,280
it's not a we'll just go turn on s-bomb

582
00:38:19,280 --> 00:38:21,199
it's a we need to think about everything

583
00:38:21,199 --> 00:38:23,040
about how our software is built

584
00:38:23,040 --> 00:38:25,040
the reality today is even for large

585
00:38:25,040 --> 00:38:27,119
enterprise pieces of software

586
00:38:27,119 --> 00:38:29,040
a lot of it is built on one person's

587
00:38:29,040 --> 00:38:31,920
machine pat hand patched on that machine

588
00:38:31,920 --> 00:38:33,440
and then sent to the distribution server

589
00:38:33,440 --> 00:38:35,520
and ends up on millions of computers

590
00:38:35,520 --> 00:38:37,280
that's the reality today and that

591
00:38:37,280 --> 00:38:38,800
requires a significant shift if we're

592
00:38:38,800 --> 00:38:40,400
going to change it and i believe this is

593
00:38:40,400 --> 00:38:41,520
actually something that is starting to

594
00:38:41,520 --> 00:38:44,400
do that and change those incentives

595
00:38:44,400 --> 00:38:46,719
two salsa so this is something that's

596
00:38:46,719 --> 00:38:48,639
relatively recent out of google but

597
00:38:48,639 --> 00:38:50,800
we're seeing massive adoption the idea

598
00:38:50,800 --> 00:38:52,880
is what does it actually look like

599
00:38:52,880 --> 00:38:55,520
to have a sane supply chain for your

600
00:38:55,520 --> 00:38:57,040
software what does it look like to build

601
00:38:57,040 --> 00:38:59,360
that well and how do you get to a level

602
00:38:59,360 --> 00:39:01,440
of maturity one of the options here is

603
00:39:01,440 --> 00:39:03,600
salsa it's a framework and we're seeing

604
00:39:03,600 --> 00:39:05,679
a lot of teams now being hired and their

605
00:39:05,679 --> 00:39:07,520
explicit goals in these large enterprise

606
00:39:07,520 --> 00:39:09,600
software companies is get to salsa level

607
00:39:09,600 --> 00:39:10,560
three

608
00:39:10,560 --> 00:39:12,639
that's the goal right and this is

609
00:39:12,639 --> 00:39:14,239
starting to give you a good idea of kind

610
00:39:14,239 --> 00:39:16,000
of what good looks like in this

611
00:39:16,000 --> 00:39:17,280
environment and that's starting to shift

612
00:39:17,280 --> 00:39:19,360
things

613
00:39:19,360 --> 00:39:20,880
and lastly we're seeing a lot of

614
00:39:20,880 --> 00:39:23,679
progress in app stores now app stores

615
00:39:23,679 --> 00:39:25,280
are problematic i'm not going to tell

616
00:39:25,280 --> 00:39:26,480
you the app stores don't have any

617
00:39:26,480 --> 00:39:28,000
problems but some of the things that

618
00:39:28,000 --> 00:39:30,000
they do solve is they give you one place

619
00:39:30,000 --> 00:39:32,400
to look for malicious software they also

620
00:39:32,400 --> 00:39:34,560
give you this idea of sandboxing right

621
00:39:34,560 --> 00:39:36,159
so when i accept a piece of software

622
00:39:36,159 --> 00:39:37,840
from a vendor the idea that it can do

623
00:39:37,840 --> 00:39:39,520
anything on my computer which is still

624
00:39:39,520 --> 00:39:42,719
the standard on most you know macs linux

625
00:39:42,719 --> 00:39:44,880
windows machines a piece of software can

626
00:39:44,880 --> 00:39:46,639
do anything but we actually have models

627
00:39:46,639 --> 00:39:48,560
for this that don't do that you know in

628
00:39:48,560 --> 00:39:51,199
ios and android and chrome os and a

629
00:39:51,199 --> 00:39:52,400
bunch of these other environments we

630
00:39:52,400 --> 00:39:53,679
actually have a model that says

631
00:39:53,679 --> 00:39:55,199
explicitly what should this piece of

632
00:39:55,199 --> 00:39:57,280
software should be able to do should it

633
00:39:57,280 --> 00:39:58,480
be able to contact anyone on the

634
00:39:58,480 --> 00:40:00,320
internet should it have full access to

635
00:40:00,320 --> 00:40:02,639
my file system no probably not so we

636
00:40:02,639 --> 00:40:03,920
actually have a model for how that's

637
00:40:03,920 --> 00:40:05,679
doing and we're seeing that in the mac

638
00:40:05,679 --> 00:40:06,719
app stores we're seeing that in the

639
00:40:06,719 --> 00:40:07,920
windows stores and a bunch of these

640
00:40:07,920 --> 00:40:09,600
other places that are starting to build

641
00:40:09,600 --> 00:40:11,440
the sandboxing in and that's actually a

642
00:40:11,440 --> 00:40:14,080
really positive thing

643
00:40:14,080 --> 00:40:16,239
so looking back at solarwinds do we have

644
00:40:16,239 --> 00:40:17,920
a plan to solve the root causes of

645
00:40:17,920 --> 00:40:19,440
solarwinds

646
00:40:19,440 --> 00:40:21,840
no not really but we're getting there

647
00:40:21,840 --> 00:40:24,159
right the current standards for good

648
00:40:24,159 --> 00:40:26,159
enough good aren't good enough to really

649
00:40:26,159 --> 00:40:28,560
solve supply chain the incentives are

650
00:40:28,560 --> 00:40:31,280
still weak to drive that change you know

651
00:40:31,280 --> 00:40:33,280
the companies that build software for

652
00:40:33,280 --> 00:40:34,800
you and deploy it to your machine

653
00:40:34,800 --> 00:40:36,880
currently that's invisible to most folks

654
00:40:36,880 --> 00:40:38,320
whether or not they're doing a good job

655
00:40:38,320 --> 00:40:39,840
whether they're likely to get hacked by

656
00:40:39,840 --> 00:40:41,199
solarwinds there's no way of you knowing

657
00:40:41,199 --> 00:40:43,520
that right the incentives aren't there

658
00:40:43,520 --> 00:40:45,199
for those companies and local

659
00:40:45,199 --> 00:40:46,560
investments you make to try and solve

660
00:40:46,560 --> 00:40:48,800
software supply chain don't really pay

661
00:40:48,800 --> 00:40:51,040
off easily but you know there's

662
00:40:51,040 --> 00:40:52,400
legislation coming that's starting to

663
00:40:52,400 --> 00:40:53,840
set incentives here and that's a big

664
00:40:53,840 --> 00:40:56,000
deal and the technology to actually make

665
00:40:56,000 --> 00:40:58,000
it work for those that care about it is

666
00:40:58,000 --> 00:40:59,119
actually happening and i think that's

667
00:40:59,119 --> 00:41:02,320
actually a significant shift

668
00:41:03,600 --> 00:41:04,960
okay

669
00:41:04,960 --> 00:41:06,159
let's talk about a different instance

670
00:41:06,159 --> 00:41:07,920
log4j

671
00:41:07,920 --> 00:41:10,719
so log4j um was a critical remote code

672
00:41:10,719 --> 00:41:12,960
execution vulnerability and in a java

673
00:41:12,960 --> 00:41:14,960
software library i know there's probably

674
00:41:14,960 --> 00:41:16,960
a number of folks in this room that lost

675
00:41:16,960 --> 00:41:18,719
a good chunk of time to their holidays

676
00:41:18,719 --> 00:41:20,719
kind of end of last year dealing with

677
00:41:20,719 --> 00:41:21,760
this thing

678
00:41:21,760 --> 00:41:24,719
right and so what happened is java is

679
00:41:24,719 --> 00:41:27,520
obviously extremely extremely popular if

680
00:41:27,520 --> 00:41:29,199
you're doing logging in java with any

681
00:41:29,199 --> 00:41:30,880
kind of complexity chances are you

682
00:41:30,880 --> 00:41:33,040
imported this open source library

683
00:41:33,040 --> 00:41:34,719
right it's used by pretty much

684
00:41:34,719 --> 00:41:37,280
everything so and the problem with it

685
00:41:37,280 --> 00:41:39,440
was you know if you log any user input

686
00:41:39,440 --> 00:41:41,040
whether that comes from a web front end

687
00:41:41,040 --> 00:41:43,600
or anywhere if you attempt to log user

688
00:41:43,600 --> 00:41:45,920
input it leads to code execution now

689
00:41:45,920 --> 00:41:47,520
that's a really bad look

690
00:41:47,520 --> 00:41:48,719
it's uh

691
00:41:48,719 --> 00:41:50,320
obviously led to a huge number of

692
00:41:50,320 --> 00:41:52,159
systems being exploitable it was a

693
00:41:52,159 --> 00:41:54,719
reliable remote exploitation and

694
00:41:54,719 --> 00:41:56,880
extremely extremely ubiquitous this

695
00:41:56,880 --> 00:41:58,320
ended up in the appliances that you

696
00:41:58,320 --> 00:41:59,920
bought it ended up in your cloud systems

697
00:41:59,920 --> 00:42:01,920
it ended up absolutely everywhere and

698
00:42:01,920 --> 00:42:03,440
one of the really tricky things about it

699
00:42:03,440 --> 00:42:05,280
is it was really hard to predict

700
00:42:05,280 --> 00:42:06,639
how you were going to get exploited by

701
00:42:06,639 --> 00:42:07,440
this

702
00:42:07,440 --> 00:42:09,199
because you know you might have a web

703
00:42:09,199 --> 00:42:11,040
front-end that takes some user input and

704
00:42:11,040 --> 00:42:12,560
stores it in a database and that's

705
00:42:12,560 --> 00:42:14,159
written in some other language and not

706
00:42:14,159 --> 00:42:15,760
exploitable and then you've got some

707
00:42:15,760 --> 00:42:17,440
internal processing systems and a back

708
00:42:17,440 --> 00:42:19,199
end and they're all you've patched all

709
00:42:19,199 --> 00:42:21,360
those but there's somewhere someone on

710
00:42:21,360 --> 00:42:23,679
someone's desktop has a customer support

711
00:42:23,679 --> 00:42:25,920
tool that they kind of which is written

712
00:42:25,920 --> 00:42:27,520
in java that reads from the database

713
00:42:27,520 --> 00:42:30,000
logs it and suddenly you're owned right

714
00:42:30,000 --> 00:42:32,159
and that that kind of trying to track

715
00:42:32,159 --> 00:42:33,679
all those down and making sure is

716
00:42:33,679 --> 00:42:35,280
actually a big problem so let's talk

717
00:42:35,280 --> 00:42:37,119
about what went poorly

718
00:42:37,119 --> 00:42:38,080
so one

719
00:42:38,080 --> 00:42:40,000
in the initial response we found a bunch

720
00:42:40,000 --> 00:42:41,520
of vulnerabilities in quick succession

721
00:42:41,520 --> 00:42:43,199
that was problematic a bunch of people

722
00:42:43,199 --> 00:42:44,239
kind of

723
00:42:44,239 --> 00:42:45,760
found the bug figured out where it was

724
00:42:45,760 --> 00:42:46,960
in their environment patched it

725
00:42:46,960 --> 00:42:48,560
redeployed and the next day we got a new

726
00:42:48,560 --> 00:42:50,480
one and everyone got to start again and

727
00:42:50,480 --> 00:42:53,199
that was not fun for anyone involved

728
00:42:53,199 --> 00:42:54,719
but that's part of the deal right once

729
00:42:54,719 --> 00:42:56,159
you find a bug everyone's going to start

730
00:42:56,159 --> 00:42:57,119
looking and you're going to find new

731
00:42:57,119 --> 00:42:58,239
ones

732
00:42:58,239 --> 00:43:00,320
there's no inventory attempting to find

733
00:43:00,320 --> 00:43:02,880
all of the places that log4j might be in

734
00:43:02,880 --> 00:43:05,280
your network finding every piece of java

735
00:43:05,280 --> 00:43:06,560
you know in your corp systems and your

736
00:43:06,560 --> 00:43:08,400
production systems and your cloud how

737
00:43:08,400 --> 00:43:10,560
many containers are hiding out somewhere

738
00:43:10,560 --> 00:43:11,920
in your environment that someone's going

739
00:43:11,920 --> 00:43:13,360
to spin up one day and turns out you're

740
00:43:13,360 --> 00:43:14,639
vulnerable again

741
00:43:14,639 --> 00:43:16,800
you know all your software as a service

742
00:43:16,800 --> 00:43:18,159
kind of providers how many of them are

743
00:43:18,159 --> 00:43:20,159
vulnerable how many appliances are there

744
00:43:20,159 --> 00:43:22,400
hiding in your network running java that

745
00:43:22,400 --> 00:43:23,520
you know are just waiting to get

746
00:43:23,520 --> 00:43:25,600
exploited by this thing that's actually

747
00:43:25,600 --> 00:43:28,880
those are tricky problems to solve

748
00:43:29,119 --> 00:43:31,199
but long term thinking about the root

749
00:43:31,199 --> 00:43:32,639
cause here of solarwinds do we have a

750
00:43:32,639 --> 00:43:35,280
plan for that

751
00:43:36,400 --> 00:43:39,840
and again some of the things that we say

752
00:43:39,840 --> 00:43:41,760
right

753
00:43:41,760 --> 00:43:44,239
just review all the source

754
00:43:44,239 --> 00:43:46,320
i don't know about you but but

755
00:43:46,320 --> 00:43:48,960
this isn't realistic in any way right

756
00:43:48,960 --> 00:43:51,119
because the dependency tree

757
00:43:51,119 --> 00:43:52,960
that spans out from the one piece of

758
00:43:52,960 --> 00:43:55,040
software you look at log4j and i'll show

759
00:43:55,040 --> 00:43:56,880
an example of this but you look at log4j

760
00:43:56,880 --> 00:43:58,080
and you look at all of the pieces of

761
00:43:58,080 --> 00:43:59,840
software that it includes even as a very

762
00:43:59,840 --> 00:44:01,119
base library

763
00:44:01,119 --> 00:44:02,639
and the number of lines of code that are

764
00:44:02,639 --> 00:44:04,400
being submitted in any week

765
00:44:04,400 --> 00:44:05,600
now you apply it to something like a

766
00:44:05,600 --> 00:44:08,159
kubernetes right there's 10 000 lines of

767
00:44:08,159 --> 00:44:10,480
code landing every week in this thing

768
00:44:10,480 --> 00:44:12,159
that you're executing

769
00:44:12,159 --> 00:44:14,400
and the idea that you can review that is

770
00:44:14,400 --> 00:44:17,920
just is laughable right

771
00:44:17,920 --> 00:44:19,600
you know we talk about one of the the

772
00:44:19,600 --> 00:44:21,199
open source mantras of you know given

773
00:44:21,199 --> 00:44:22,800
enough eyeballs all bugs are shallow the

774
00:44:22,800 --> 00:44:24,960
reality is there's no eyeballs no no

775
00:44:24,960 --> 00:44:28,159
one's doing this for free right no one's

776
00:44:28,159 --> 00:44:28,960
like

777
00:44:28,960 --> 00:44:30,800
folks that do security code review know

778
00:44:30,800 --> 00:44:33,199
that this is not always fun looking

779
00:44:33,199 --> 00:44:34,719
through you know

780
00:44:34,719 --> 00:44:36,639
five million lines of code for our

781
00:44:36,639 --> 00:44:37,920
kubernetes that's not actually a

782
00:44:37,920 --> 00:44:40,719
scalable solution here

783
00:44:40,719 --> 00:44:42,800
and you know even just down to this like

784
00:44:42,800 --> 00:44:44,239
hey we know that there are these

785
00:44:44,239 --> 00:44:45,840
vulnerabilities someone published some

786
00:44:45,840 --> 00:44:47,840
cves i'll just check to make sure all

787
00:44:47,840 --> 00:44:49,040
the software that i'm running doesn't

788
00:44:49,040 --> 00:44:50,560
have those vulnerabilities

789
00:44:50,560 --> 00:44:52,239
there's actually no tooling to do that

790
00:44:52,239 --> 00:44:54,719
in any same way today

791
00:44:54,719 --> 00:44:56,000
so we have some pretty fundamental

792
00:44:56,000 --> 00:44:58,480
problems here

793
00:44:58,480 --> 00:44:59,679
but let's talk about some of the things

794
00:44:59,679 --> 00:45:00,719
that actually went well because i'm

795
00:45:00,719 --> 00:45:03,040
actually somewhat optimistic here

796
00:45:03,040 --> 00:45:05,600
so initial response one we recognized

797
00:45:05,600 --> 00:45:07,600
how severe the issue was that was nice a

798
00:45:07,600 --> 00:45:09,040
bunch of folks had network egress

799
00:45:09,040 --> 00:45:10,719
filtering which saved a lot of people

800
00:45:10,719 --> 00:45:13,040
from getting owned not everyone a lot of

801
00:45:13,040 --> 00:45:15,119
people did get really compromised during

802
00:45:15,119 --> 00:45:17,760
this it was bad for a lot of folks

803
00:45:17,760 --> 00:45:19,199
we had quick deployment of scanners

804
00:45:19,199 --> 00:45:20,880
people wrote things people open source

805
00:45:20,880 --> 00:45:22,480
products we kind of managed to do it it

806
00:45:22,480 --> 00:45:24,320
was pretty impressive pretty impressive

807
00:45:24,320 --> 00:45:26,560
response from the industry as a whole

808
00:45:26,560 --> 00:45:28,239
and we actually got interesting direct

809
00:45:28,239 --> 00:45:30,880
engagement here where you know the ftc

810
00:45:30,880 --> 00:45:32,400
in the us actually came out with

811
00:45:32,400 --> 00:45:34,400
statements basically saying you may be

812
00:45:34,400 --> 00:45:36,159
in significant legal trouble if you're

813
00:45:36,159 --> 00:45:38,320
not dealing with log4j

814
00:45:38,320 --> 00:45:40,480
right how often is that kind of thing

815
00:45:40,480 --> 00:45:42,639
happening right where the direct

816
00:45:42,639 --> 00:45:44,480
cybersecurity news that we all care

817
00:45:44,480 --> 00:45:46,800
about is being mandated by government

818
00:45:46,800 --> 00:45:48,560
and being told to everyone that you have

819
00:45:48,560 --> 00:45:50,400
to deal with this it shows the severity

820
00:45:50,400 --> 00:45:52,080
in how much it affects folks

821
00:45:52,080 --> 00:45:55,119
but long term what went well

822
00:45:55,119 --> 00:45:57,920
so one it reinvigorated you know we

823
00:45:57,920 --> 00:45:59,520
talked about it in solarwinds but this

824
00:45:59,520 --> 00:46:00,960
really kind of put the focus back on

825
00:46:00,960 --> 00:46:03,040
software supply chain and we actually

826
00:46:03,040 --> 00:46:05,199
got some massive large cross industry

827
00:46:05,199 --> 00:46:06,560
investment and i want to talk a little

828
00:46:06,560 --> 00:46:08,960
bit about that

829
00:46:08,960 --> 00:46:12,080
so openssf is an organization it's a

830
00:46:12,080 --> 00:46:14,480
public organization driving a lot a

831
00:46:14,480 --> 00:46:15,760
massive number of initiatives at the

832
00:46:15,760 --> 00:46:17,600
moment it was started by google

833
00:46:17,600 --> 00:46:19,360
microsoft github under the linux

834
00:46:19,360 --> 00:46:21,600
foundation if you haven't kind of come

835
00:46:21,600 --> 00:46:23,840
across this it's really only kicked into

836
00:46:23,840 --> 00:46:25,440
life in the last six months and become

837
00:46:25,440 --> 00:46:26,719
really large

838
00:46:26,719 --> 00:46:28,000
but

839
00:46:28,000 --> 00:46:29,840
providing targeted funding for critical

840
00:46:29,840 --> 00:46:31,920
projects there's a mobilization plan

841
00:46:31,920 --> 00:46:33,600
which tells you just how holistically

842
00:46:33,600 --> 00:46:35,119
they're thinking about the problem go

843
00:46:35,119 --> 00:46:36,800
and take a look at that and read it if

844
00:46:36,800 --> 00:46:39,040
you get a chance but the idea is how do

845
00:46:39,040 --> 00:46:40,960
we build kind of security into these

846
00:46:40,960 --> 00:46:43,199
open source ecosystems and there's a lot

847
00:46:43,199 --> 00:46:44,560
of work happening here which is very

848
00:46:44,560 --> 00:46:46,000
interesting and i want to highlight a

849
00:46:46,000 --> 00:46:47,040
couple of the projects that are

850
00:46:47,040 --> 00:46:48,320
happening here

851
00:46:48,320 --> 00:46:50,320
so one security scorecards is

852
00:46:50,320 --> 00:46:52,639
interesting it is now possible to go and

853
00:46:52,639 --> 00:46:55,040
understand how secure any open source

854
00:46:55,040 --> 00:46:57,199
product is there is a standard for doing

855
00:46:57,199 --> 00:46:59,440
this with security scorecards you can go

856
00:46:59,440 --> 00:47:01,360
see how are they configuring things how

857
00:47:01,360 --> 00:47:02,719
are they setting up kind of branch

858
00:47:02,719 --> 00:47:04,239
protection how are they setting up the

859
00:47:04,239 --> 00:47:06,000
security of the developers that are

860
00:47:06,000 --> 00:47:07,199
connecting into these things we actually

861
00:47:07,199 --> 00:47:09,199
have this idea of what good looks like

862
00:47:09,199 --> 00:47:11,199
we never had that before and we actually

863
00:47:11,199 --> 00:47:12,800
have a scalar will way of doing that and

864
00:47:12,800 --> 00:47:14,400
a bunch of tooling to help do that

865
00:47:14,400 --> 00:47:15,840
that's kind of cool

866
00:47:15,840 --> 00:47:17,360
we have a bunch of kind of projects in

867
00:47:17,360 --> 00:47:19,280
here like all-star automated enforcement

868
00:47:19,280 --> 00:47:21,679
of security best practices for github

869
00:47:21,679 --> 00:47:23,840
we saw github come out on the back of

870
00:47:23,840 --> 00:47:25,199
this and say they're going to require

871
00:47:25,199 --> 00:47:27,280
multi-factor authentication for anyone's

872
00:47:27,280 --> 00:47:29,119
for submitting code

873
00:47:29,119 --> 00:47:31,520
you think about like how many attacks

874
00:47:31,520 --> 00:47:33,840
that prevents right how many folks are

875
00:47:33,840 --> 00:47:35,040
sitting on pieces of software that

876
00:47:35,040 --> 00:47:36,800
you're running on your computer that are

877
00:47:36,800 --> 00:47:38,400
currently have username and password on

878
00:47:38,400 --> 00:47:39,119
them

879
00:47:39,119 --> 00:47:40,719
right this is a massive change in the

880
00:47:40,719 --> 00:47:41,920
industry and we're starting to see the

881
00:47:41,920 --> 00:47:43,840
appetite for that that's really exciting

882
00:47:43,840 --> 00:47:45,600
things are starting to change

883
00:47:45,600 --> 00:47:47,760
you know even down to like the formats

884
00:47:47,760 --> 00:47:49,119
for how do you track vulnerabilities

885
00:47:49,119 --> 00:47:50,800
across all these software we've built

886
00:47:50,800 --> 00:47:52,960
kind of standard kind of machine

887
00:47:52,960 --> 00:47:54,719
understandable formats for doing that

888
00:47:54,719 --> 00:47:56,639
osv is a great example of this that you

889
00:47:56,639 --> 00:47:58,159
know github and a bunch of other folks

890
00:47:58,159 --> 00:48:00,239
have adopted now so that you can take a

891
00:48:00,239 --> 00:48:01,679
vulnerability the moment it's released

892
00:48:01,679 --> 00:48:03,199
you can start looking for that across

893
00:48:03,199 --> 00:48:04,960
all of your environments that's a big

894
00:48:04,960 --> 00:48:07,280
change

895
00:48:07,920 --> 00:48:10,560
so thinking about this stepping back

896
00:48:10,560 --> 00:48:12,880
log4j do we have a plan and i want to

897
00:48:12,880 --> 00:48:14,000
say yeah

898
00:48:14,000 --> 00:48:15,600
it's we're a long way

899
00:48:15,600 --> 00:48:17,840
away from it being done but we have this

900
00:48:17,840 --> 00:48:20,159
massive industry investment and open

901
00:48:20,159 --> 00:48:22,719
source maintenance so not just making

902
00:48:22,719 --> 00:48:24,000
open source software but actually

903
00:48:24,000 --> 00:48:26,159
maintaining it actually securing it and

904
00:48:26,159 --> 00:48:29,199
understanding what that requires

905
00:48:29,199 --> 00:48:30,639
there's structured plans for measuring

906
00:48:30,639 --> 00:48:32,480
supply chain quality that's a big thing

907
00:48:32,480 --> 00:48:34,320
we have tools to visualize and fix

908
00:48:34,320 --> 00:48:36,480
issues in many ecosystems we're actually

909
00:48:36,480 --> 00:48:38,080
building the base infrastructure to kind

910
00:48:38,080 --> 00:48:39,440
of make this happen

911
00:48:39,440 --> 00:48:41,600
but yes we still have a very long way to

912
00:48:41,600 --> 00:48:43,119
go as well on this

913
00:48:43,119 --> 00:48:45,280
but you know i'm i'm

914
00:48:45,280 --> 00:48:47,280
you know i'm optimistic here that we

915
00:48:47,280 --> 00:48:48,880
actually have a good idea of how we can

916
00:48:48,880 --> 00:48:50,800
solve this over the long term and i

917
00:48:50,800 --> 00:48:52,960
think that's a change from where we were

918
00:48:52,960 --> 00:48:54,000
even

919
00:48:54,000 --> 00:48:55,760
a year ago i wouldn't have been able to

920
00:48:55,760 --> 00:48:57,280
say that i thought that we were doing

921
00:48:57,280 --> 00:48:58,560
something here

922
00:48:58,560 --> 00:49:01,040
and that's a change

923
00:49:01,040 --> 00:49:03,040
okay so third example let's talk about

924
00:49:03,040 --> 00:49:05,920
colonial pipeline

925
00:49:07,040 --> 00:49:09,760
so the colonial pipeline they colonial

926
00:49:09,760 --> 00:49:11,920
pipeline is a company that runs a u.s

927
00:49:11,920 --> 00:49:14,000
oil pipeline for about 40 percent of the

928
00:49:14,000 --> 00:49:16,080
fuel on the east coast of the us it's

929
00:49:16,080 --> 00:49:18,159
critical infrastructure and they got

930
00:49:18,159 --> 00:49:19,520
ransomware

931
00:49:19,520 --> 00:49:20,960
a lot of you will remember this from the

932
00:49:20,960 --> 00:49:22,880
news because we had a bunch of like

933
00:49:22,880 --> 00:49:24,719
fantastic clips of folks attempting to

934
00:49:24,719 --> 00:49:27,199
fill like plastic bags full of fuel at

935
00:49:27,199 --> 00:49:29,520
the fuel station and doing other kind of

936
00:49:29,520 --> 00:49:31,520
horrible things like this which was all

937
00:49:31,520 --> 00:49:33,920
a bad idea but you remember that right

938
00:49:33,920 --> 00:49:36,000
and it turned you know it led to this

939
00:49:36,000 --> 00:49:38,000
temporary fuel shortages led to a

940
00:49:38,000 --> 00:49:41,040
declaration of a state of emergency

941
00:49:41,040 --> 00:49:43,599
in the u.s because of this and it was a

942
00:49:43,599 --> 00:49:46,080
ransomware attack right which we all see

943
00:49:46,080 --> 00:49:48,239
across a bunch of different environments

944
00:49:48,239 --> 00:49:50,159
we know now that it was you know as a

945
00:49:50,159 --> 00:49:52,800
password was leaked um you know just

946
00:49:52,800 --> 00:49:54,239
username and password by one of the

947
00:49:54,239 --> 00:49:56,639
employees which the ransomware group

948
00:49:56,639 --> 00:49:59,760
used to access their vpn and kind of go

949
00:49:59,760 --> 00:50:02,000
on where into their network we know it's

950
00:50:02,000 --> 00:50:03,760
attributed now to the dark side

951
00:50:03,760 --> 00:50:05,599
ransomware group

952
00:50:05,599 --> 00:50:07,360
they run ransomware as a service model

953
00:50:07,360 --> 00:50:08,800
because of course this is a large

954
00:50:08,800 --> 00:50:11,360
business now and we also know luckily

955
00:50:11,360 --> 00:50:13,440
that you know the just the it systems

956
00:50:13,440 --> 00:50:15,040
and and colonial pipeline were

957
00:50:15,040 --> 00:50:16,880
compromised it didn't actually spread

958
00:50:16,880 --> 00:50:18,480
across into the systems that control the

959
00:50:18,480 --> 00:50:20,400
oil nothing went boom which was nice

960
00:50:20,400 --> 00:50:22,080
right

961
00:50:22,080 --> 00:50:23,679
but interestingly

962
00:50:23,679 --> 00:50:26,719
colonial pipeline paid 4.4 million us

963
00:50:26,719 --> 00:50:29,199
dollars to the to the ransomware group

964
00:50:29,199 --> 00:50:31,520
here to try and help themselves get back

965
00:50:31,520 --> 00:50:32,800
online

966
00:50:32,800 --> 00:50:34,639
so this was actually a pretty big

967
00:50:34,639 --> 00:50:36,960
wake-up call for a lot of folks and the

968
00:50:36,960 --> 00:50:39,040
reason is ransomware now affects

969
00:50:39,040 --> 00:50:41,199
critical infrastructure and we saw in a

970
00:50:41,199 --> 00:50:43,040
lot of small enterprises but we saw it

971
00:50:43,040 --> 00:50:45,679
now in our health and our health systems

972
00:50:45,679 --> 00:50:47,440
we see hospitals kind of being taken

973
00:50:47,440 --> 00:50:49,040
offline we see a bunch of things

974
00:50:49,040 --> 00:50:51,119
happening and luckily we actually saw

975
00:50:51,119 --> 00:50:52,560
some response out of that but let's

976
00:50:52,560 --> 00:50:55,920
first talk about what went poorly

977
00:50:56,400 --> 00:50:59,440
so one credential stuffing works

978
00:50:59,440 --> 00:51:00,239
right

979
00:51:00,239 --> 00:51:01,840
you can go and go to the dark web

980
00:51:01,840 --> 00:51:03,599
download

981
00:51:03,599 --> 00:51:05,360
a pile of credentials usernames and

982
00:51:05,360 --> 00:51:06,800
passwords from all sorts of different

983
00:51:06,800 --> 00:51:07,920
breaches that are happening around the

984
00:51:07,920 --> 00:51:10,159
world you take that chances are you can

985
00:51:10,159 --> 00:51:12,400
use that and leverage it into access

986
00:51:12,400 --> 00:51:15,440
across most of the fortune 500 companies

987
00:51:15,440 --> 00:51:17,199
you can use that to leverage access into

988
00:51:17,199 --> 00:51:18,719
most enterprise environments and a whole

989
00:51:18,719 --> 00:51:20,639
bunch of government departments today

990
00:51:20,639 --> 00:51:22,159
that's the reality of where we're at

991
00:51:22,159 --> 00:51:23,599
where we're at

992
00:51:23,599 --> 00:51:25,440
despite this massive infosec industry

993
00:51:25,440 --> 00:51:26,800
and the billions of dollars that we

994
00:51:26,800 --> 00:51:29,040
spend on it that's still the reality of

995
00:51:29,040 --> 00:51:31,440
things that's problematic

996
00:51:31,440 --> 00:51:33,440
the attackers got paid they're now even

997
00:51:33,440 --> 00:51:34,719
better funded

998
00:51:34,719 --> 00:51:36,400
right there's a pretty good business

999
00:51:36,400 --> 00:51:38,960
model here it was about three days work

1000
00:51:38,960 --> 00:51:40,560
4.4 million us dollars i don't know

1001
00:51:40,560 --> 00:51:41,840
about you but that's a pretty good deal

1002
00:51:41,840 --> 00:51:43,040
to me

1003
00:51:43,040 --> 00:51:45,199
that's not going to go away anytime soon

1004
00:51:45,199 --> 00:51:47,040
no multi-factor authentication involved

1005
00:51:47,040 --> 00:51:49,199
here there's a massive disruption to

1006
00:51:49,199 --> 00:51:50,639
service and the restoration of that

1007
00:51:50,639 --> 00:51:52,159
takes time even in this case where they

1008
00:51:52,159 --> 00:51:54,159
were willing to pay the ransom you know

1009
00:51:54,159 --> 00:51:55,599
a bunch of people didn't get fuel for a

1010
00:51:55,599 --> 00:51:57,840
bunch of days that's problematic

1011
00:51:57,840 --> 00:51:59,679
but let's talk about the root cause

1012
00:51:59,679 --> 00:52:00,960
again here

1013
00:52:00,960 --> 00:52:02,800
what actually happened in this

1014
00:52:02,800 --> 00:52:05,119
thing and what are we doing one

1015
00:52:05,119 --> 00:52:06,639
the business model of ransomware is

1016
00:52:06,639 --> 00:52:08,159
really too compelling to disappear on

1017
00:52:08,159 --> 00:52:09,280
its own

1018
00:52:09,280 --> 00:52:11,599
right this isn't going to disappear like

1019
00:52:11,599 --> 00:52:13,360
that we've seen the ramp up from hitting

1020
00:52:13,360 --> 00:52:15,360
kind of small enterprises and you know

1021
00:52:15,360 --> 00:52:17,520
heading family members and other things

1022
00:52:17,520 --> 00:52:19,599
into compromising all of the critical

1023
00:52:19,599 --> 00:52:21,119
infrastructure in our environments

1024
00:52:21,119 --> 00:52:23,679
that's not going to go away on its own

1025
00:52:23,679 --> 00:52:25,760
just stop using passwords

1026
00:52:25,760 --> 00:52:26,880
sure

1027
00:52:26,880 --> 00:52:29,360
has anyone tried not using passwords

1028
00:52:29,360 --> 00:52:31,599
right i think the reality of like don't

1029
00:52:31,599 --> 00:52:33,280
use the same password across multiple

1030
00:52:33,280 --> 00:52:35,119
environments it's great advice a lot of

1031
00:52:35,119 --> 00:52:37,119
us in this room probably take it but if

1032
00:52:37,119 --> 00:52:38,719
you've tried to kind of make help your

1033
00:52:38,719 --> 00:52:40,960
family kind of do that in any kind of

1034
00:52:40,960 --> 00:52:42,960
real way you realize very quickly that

1035
00:52:42,960 --> 00:52:44,880
it doesn't really work the technology

1036
00:52:44,880 --> 00:52:46,560
infrastructure and the usability of them

1037
00:52:46,560 --> 00:52:49,840
that that isn't there yet

1038
00:52:50,320 --> 00:52:51,920
we kind of were hoping that cyber

1039
00:52:51,920 --> 00:52:53,840
security insurance models could save us

1040
00:52:53,840 --> 00:52:55,360
you know once the insurance and a bunch

1041
00:52:55,360 --> 00:52:57,679
of smart people that do kind of analysis

1042
00:52:57,679 --> 00:52:59,199
of these things once they get involved

1043
00:52:59,199 --> 00:53:00,480
they'll figure out where the risk is and

1044
00:53:00,480 --> 00:53:02,800
they can drive down costs it turns out

1045
00:53:02,800 --> 00:53:04,080
that most of the folks getting hit by

1046
00:53:04,080 --> 00:53:06,159
ransomware aren't getting paid out

1047
00:53:06,159 --> 00:53:07,679
right

1048
00:53:07,679 --> 00:53:09,280
the the idea that this was going to save

1049
00:53:09,280 --> 00:53:10,719
things it turns out that modeling the

1050
00:53:10,719 --> 00:53:12,400
risk for cyber security attacks is

1051
00:53:12,400 --> 00:53:13,760
really difficult

1052
00:53:13,760 --> 00:53:16,159
right because the the events are really

1053
00:53:16,159 --> 00:53:18,320
down to did someone decide to hack you

1054
00:53:18,320 --> 00:53:19,280
or not

1055
00:53:19,280 --> 00:53:20,880
it's not about what you did it's about

1056
00:53:20,880 --> 00:53:22,719
whether someone decided to target you or

1057
00:53:22,719 --> 00:53:24,400
not and if they did you're in trouble

1058
00:53:24,400 --> 00:53:26,000
how do you model that how do you turn

1059
00:53:26,000 --> 00:53:27,760
that into something useful

1060
00:53:27,760 --> 00:53:30,080
so okay we've got some problems ahead

1061
00:53:30,080 --> 00:53:32,800
how are we going to solve this one

1062
00:53:32,800 --> 00:53:33,920
let's talk about some of the things that

1063
00:53:33,920 --> 00:53:35,679
actually went well here and talk about

1064
00:53:35,679 --> 00:53:39,639
some of the response that happened

1065
00:53:40,719 --> 00:53:42,560
so

1066
00:53:42,560 --> 00:53:45,360
one they proactively shut down kind of a

1067
00:53:45,360 --> 00:53:46,639
bunch of their pieces to protect the

1068
00:53:46,639 --> 00:53:48,080
critical infrastructure that was nice

1069
00:53:48,080 --> 00:53:50,000
good short-term response they had

1070
00:53:50,000 --> 00:53:52,560
isolation of the ics and ot environments

1071
00:53:52,560 --> 00:53:54,080
that meant that you know hey the

1072
00:53:54,080 --> 00:53:56,400
pipeline didn't go boom that's great

1073
00:53:56,400 --> 00:53:58,239
good outcome for us i think that's an

1074
00:53:58,239 --> 00:53:59,599
improvement from where we were maybe

1075
00:53:59,599 --> 00:54:01,840
even five years ago

1076
00:54:01,840 --> 00:54:03,599
but root cause

1077
00:54:03,599 --> 00:54:04,960
long term

1078
00:54:04,960 --> 00:54:07,760
what are we doing about that

1079
00:54:07,760 --> 00:54:10,400
so one interesting thing here and and

1080
00:54:10,400 --> 00:54:11,679
for those that listen to the risky biz

1081
00:54:11,679 --> 00:54:13,760
podcast you will maybe recognize this

1082
00:54:13,760 --> 00:54:15,679
phrasing of release the hounds

1083
00:54:15,679 --> 00:54:16,800
but

1084
00:54:16,800 --> 00:54:18,719
you'll the uh one of the interesting

1085
00:54:18,719 --> 00:54:20,480
things is you know there are a bunch of

1086
00:54:20,480 --> 00:54:21,520
folks that are currently hacking all

1087
00:54:21,520 --> 00:54:23,440
these environments via ransomware but

1088
00:54:23,440 --> 00:54:24,560
the government

1089
00:54:24,560 --> 00:54:26,639
governments have started to recognize

1090
00:54:26,639 --> 00:54:29,520
that they actually have really competent

1091
00:54:29,520 --> 00:54:31,440
offensive security teams and they

1092
00:54:31,440 --> 00:54:32,960
actually have a folk folks that can

1093
00:54:32,960 --> 00:54:34,719
actually go and start taking on the

1094
00:54:34,719 --> 00:54:36,560
ransomware groups and going and figuring

1095
00:54:36,560 --> 00:54:38,400
out who they are and as opposed to

1096
00:54:38,400 --> 00:54:40,800
treating this as as a a general problem

1097
00:54:40,800 --> 00:54:42,560
the industry needs to solve for itself

1098
00:54:42,560 --> 00:54:44,400
just secure your environments they're

1099
00:54:44,400 --> 00:54:46,639
starting to spend invest more in going

1100
00:54:46,639 --> 00:54:47,760
after the people that are actually

1101
00:54:47,760 --> 00:54:49,840
perpetrating this and i do believe that

1102
00:54:49,840 --> 00:54:51,760
this has a reasonable chance of shifting

1103
00:54:51,760 --> 00:54:54,159
some of the incentives in this thing

1104
00:54:54,159 --> 00:54:55,920
it's a it's a different deal if you can

1105
00:54:55,920 --> 00:54:58,239
get your 4.4 million dollars versus

1106
00:54:58,239 --> 00:54:59,920
whether you get 4.4 million dollars and

1107
00:54:59,920 --> 00:55:01,920
you can no longer travel or is it a good

1108
00:55:01,920 --> 00:55:03,679
chance that you're going to be outed or

1109
00:55:03,679 --> 00:55:05,040
be extradited or something like that a

1110
00:55:05,040 --> 00:55:08,560
long thing that's actually a big change

1111
00:55:10,320 --> 00:55:12,480
we've invested in password replacements

1112
00:55:12,480 --> 00:55:14,639
and and i said and i say this

1113
00:55:14,639 --> 00:55:16,400
with some trepidation because there's

1114
00:55:16,400 --> 00:55:17,760
still a long way to go here but i want

1115
00:55:17,760 --> 00:55:20,800
to talk a little bit about that

1116
00:55:21,119 --> 00:55:22,639
and i want to tell a story here because

1117
00:55:22,639 --> 00:55:25,040
i believe in and security keys and i

1118
00:55:25,040 --> 00:55:28,480
believe in kind of and doing that

1119
00:55:28,480 --> 00:55:31,119
we we deployed security keys at google

1120
00:55:31,119 --> 00:55:32,880
like a very long time ago it's probably

1121
00:55:32,880 --> 00:55:34,400
the best investment we've ever made in

1122
00:55:34,400 --> 00:55:36,960
security in terms of payoff every single

1123
00:55:36,960 --> 00:55:38,400
kind of piece of authentication

1124
00:55:38,400 --> 00:55:40,000
everything you do at google requires one

1125
00:55:40,000 --> 00:55:42,320
of these security keys it's actually you

1126
00:55:42,320 --> 00:55:44,480
know stops fishing we just don't deal

1127
00:55:44,480 --> 00:55:46,480
with phishing phishing attacks in our

1128
00:55:46,480 --> 00:55:48,480
environment this is a pretty critical

1129
00:55:48,480 --> 00:55:49,760
control for us

1130
00:55:49,760 --> 00:55:51,760
and obviously part of that is hey yes i

1131
00:55:51,760 --> 00:55:53,440
want to adopt that so i

1132
00:55:53,440 --> 00:55:55,440
do the same i use u2f kind of security

1133
00:55:55,440 --> 00:55:56,880
tokens across pretty much everything

1134
00:55:56,880 --> 00:55:59,280
that i touch

1135
00:55:59,280 --> 00:56:01,119
but i am also locked out of my github

1136
00:56:01,119 --> 00:56:02,800
account for the last three years because

1137
00:56:02,800 --> 00:56:05,119
of this

1138
00:56:06,080 --> 00:56:07,599
so i used to do a lot of development

1139
00:56:07,599 --> 00:56:10,159
work um i have a github account and and

1140
00:56:10,159 --> 00:56:12,080
used to do a lot of things on there i

1141
00:56:12,080 --> 00:56:14,480
added security my security key to it i

1142
00:56:14,480 --> 00:56:16,239
printed out the recovery codes i did all

1143
00:56:16,239 --> 00:56:17,679
the things that you're supposed to do

1144
00:56:17,679 --> 00:56:20,320
when you set this up and then through

1145
00:56:20,320 --> 00:56:22,639
some way you can see i have a number of

1146
00:56:22,639 --> 00:56:24,960
security keys it's none of these i don't

1147
00:56:24,960 --> 00:56:26,639
know which one it is

1148
00:56:26,639 --> 00:56:29,280
i cannot find it in none of these work

1149
00:56:29,280 --> 00:56:30,800
and i've been locked out for three years

1150
00:56:30,800 --> 00:56:32,320
for my github account it's pretty clear

1151
00:56:32,320 --> 00:56:34,159
i'm still paying the bill and no one has

1152
00:56:34,159 --> 00:56:35,679
logged into it for three years but i

1153
00:56:35,679 --> 00:56:38,080
cannot convince the account recovery

1154
00:56:38,080 --> 00:56:40,080
team at github to give me back access to

1155
00:56:40,080 --> 00:56:41,599
my account

1156
00:56:41,599 --> 00:56:44,080
now that's good for security

1157
00:56:44,080 --> 00:56:46,000
no one's hacking my github account that

1158
00:56:46,000 --> 00:56:47,199
is great

1159
00:56:47,199 --> 00:56:49,679
but it also kind of highlights this idea

1160
00:56:49,679 --> 00:56:51,360
that we're not ready for this kind of

1161
00:56:51,360 --> 00:56:52,320
world

1162
00:56:52,320 --> 00:56:53,920
yes it gives us security but the

1163
00:56:53,920 --> 00:56:56,239
usability and how you do recoverability

1164
00:56:56,239 --> 00:56:58,239
of these environments still has a long

1165
00:56:58,239 --> 00:57:00,800
way to go

1166
00:57:00,960 --> 00:57:02,800
and this is bad because the idea that

1167
00:57:02,800 --> 00:57:04,080
you can recommend this for all your

1168
00:57:04,080 --> 00:57:05,840
users i've talked to people about this

1169
00:57:05,840 --> 00:57:07,520
and they go like how do you do it well

1170
00:57:07,520 --> 00:57:09,280
i've got these 12 security keys and

1171
00:57:09,280 --> 00:57:10,400
they're all labeled

1172
00:57:10,400 --> 00:57:12,000
and they're in my draw and this is how i

1173
00:57:12,000 --> 00:57:13,679
do them and this is how every six months

1174
00:57:13,679 --> 00:57:15,440
i go back and check these things that's

1175
00:57:15,440 --> 00:57:16,880
not a reasonable thing that you can ask

1176
00:57:16,880 --> 00:57:19,040
people to do but this is kind of this

1177
00:57:19,040 --> 00:57:22,639
technology is pretty fundamental

1178
00:57:22,639 --> 00:57:24,239
so one of the things that we have that

1179
00:57:24,239 --> 00:57:26,239
is actually really promising here is

1180
00:57:26,239 --> 00:57:27,360
passkey

1181
00:57:27,360 --> 00:57:28,159
and

1182
00:57:28,159 --> 00:57:29,440
there was announcements about this

1183
00:57:29,440 --> 00:57:31,040
probably about a month ago some of you

1184
00:57:31,040 --> 00:57:32,400
might have seen it

1185
00:57:32,400 --> 00:57:33,920
but i actually really believe in this

1186
00:57:33,920 --> 00:57:34,880
work

1187
00:57:34,880 --> 00:57:36,239
so

1188
00:57:36,239 --> 00:57:38,080
there's over a decade of work going into

1189
00:57:38,080 --> 00:57:39,520
the fido alliance and a bunch of these

1190
00:57:39,520 --> 00:57:41,840
other things on how we do password lists

1191
00:57:41,840 --> 00:57:43,520
but we're actually starting to see this

1192
00:57:43,520 --> 00:57:44,639
alliance

1193
00:57:44,639 --> 00:57:46,159
that is actually starting to deliver

1194
00:57:46,159 --> 00:57:48,159
passwordless and and something for the

1195
00:57:48,159 --> 00:57:49,280
first time that i believe that we

1196
00:57:49,280 --> 00:57:51,040
actually have a shot at doing this and

1197
00:57:51,040 --> 00:57:52,719
one because it has active commitment

1198
00:57:52,719 --> 00:57:54,719
across kind of apple microsoft google

1199
00:57:54,719 --> 00:57:56,719
and everyone else to build it in to

1200
00:57:56,719 --> 00:57:58,719
every piece of hardware that you buy

1201
00:57:58,719 --> 00:58:00,960
kind of in the future and the idea is we

1202
00:58:00,960 --> 00:58:02,960
can bring that same unfishable

1203
00:58:02,960 --> 00:58:05,440
multi-factor authentication or single

1204
00:58:05,440 --> 00:58:07,440
factor just the security key to

1205
00:58:07,440 --> 00:58:09,280
absolutely everyone and actually start

1206
00:58:09,280 --> 00:58:11,119
to get rid of the password as the way

1207
00:58:11,119 --> 00:58:13,520
that we we work these things

1208
00:58:13,520 --> 00:58:15,599
the idea is it's consistent secure easy

1209
00:58:15,599 --> 00:58:17,840
to use it's built into the new hardware

1210
00:58:17,840 --> 00:58:19,119
so your phone

1211
00:58:19,119 --> 00:58:21,520
any phone that you buy any ios phone you

1212
00:58:21,520 --> 00:58:23,679
buy any android phone you buy built into

1213
00:58:23,679 --> 00:58:25,199
chrome os built into the hardware that

1214
00:58:25,199 --> 00:58:26,880
actually does this and it's

1215
00:58:26,880 --> 00:58:29,040
cross-platform so the experience that

1216
00:58:29,040 --> 00:58:31,040
you get on one platform should be the

1217
00:58:31,040 --> 00:58:32,639
same on the other platform and there's

1218
00:58:32,639 --> 00:58:34,000
commitment to do that and actually make

1219
00:58:34,000 --> 00:58:35,119
that work

1220
00:58:35,119 --> 00:58:36,639
and it handles this idea of

1221
00:58:36,639 --> 00:58:38,880
recoverability so if i lose my phone

1222
00:58:38,880 --> 00:58:40,960
that's handled as part of the standard

1223
00:58:40,960 --> 00:58:43,440
if i kind of move to a new device i now

1224
00:58:43,440 --> 00:58:45,119
have two devices that i want to just

1225
00:58:45,119 --> 00:58:46,960
work that's actually handled as part of

1226
00:58:46,960 --> 00:58:48,880
the standard i'm really positive about

1227
00:58:48,880 --> 00:58:50,800
this because i think it's an example of

1228
00:58:50,800 --> 00:58:52,480
us kind of pulling together

1229
00:58:52,480 --> 00:58:54,080
as an industry and understanding the

1230
00:58:54,080 --> 00:58:56,400
real problems and starting to work on it

1231
00:58:56,400 --> 00:58:57,840
so i think this is actually driving some

1232
00:58:57,840 --> 00:59:00,239
real change

1233
00:59:00,239 --> 00:59:03,040
so colonial pipeline root cause

1234
00:59:03,040 --> 00:59:05,440
do we have a plan to solve it

1235
00:59:05,440 --> 00:59:06,639
no

1236
00:59:06,639 --> 00:59:07,920
but

1237
00:59:07,920 --> 00:59:09,360
but there's some positive signs in here

1238
00:59:09,360 --> 00:59:11,280
we're doing some good things ransomware

1239
00:59:11,280 --> 00:59:13,360
is still too profitable

1240
00:59:13,360 --> 00:59:15,119
the incentives are weak to drive change

1241
00:59:15,119 --> 00:59:16,639
in enterprises the amount of work that

1242
00:59:16,639 --> 00:59:18,320
you need to do in an enterprise to get

1243
00:59:18,320 --> 00:59:19,920
to the point where you cannot be hit by

1244
00:59:19,920 --> 00:59:22,639
ransomware is still massive the amount

1245
00:59:22,639 --> 00:59:24,159
of security folks that you need to kind

1246
00:59:24,159 --> 00:59:25,520
of do that and kind of drive changing

1247
00:59:25,520 --> 00:59:26,880
your environment it's still really

1248
00:59:26,880 --> 00:59:28,800
expensive

1249
00:59:28,800 --> 00:59:30,320
the secure by default enterprise

1250
00:59:30,320 --> 00:59:32,159
architectures aren't really there in a

1251
00:59:32,159 --> 00:59:34,000
lot of ways we're getting there

1252
00:59:34,000 --> 00:59:35,119
but i do think there's hope on the

1253
00:59:35,119 --> 00:59:37,360
horizon for getting rid of passwords i

1254
00:59:37,360 --> 00:59:39,119
do think you know xero trust and cloud

1255
00:59:39,119 --> 00:59:41,679
enterprise technology is improving i can

1256
00:59:41,679 --> 00:59:43,040
say this because i have a team that you

1257
00:59:43,040 --> 00:59:44,560
know i have a team that works on xero

1258
00:59:44,560 --> 00:59:46,560
trust or beyond corp as we call it for

1259
00:59:46,560 --> 00:59:48,320
google that's my team that does that for

1260
00:59:48,320 --> 00:59:50,000
google we've been doing it for about 10

1261
00:59:50,000 --> 00:59:52,880
years and we're still going uh which

1262
00:59:52,880 --> 00:59:55,520
gives you an idea of how easy that is

1263
00:59:55,520 --> 00:59:57,199
and you know we we publish a bunch of

1264
00:59:57,199 --> 00:59:59,119
papers on it that explain exactly where

1265
00:59:59,119 --> 01:00:00,800
our problems are there's still a lot of

1266
01:00:00,800 --> 01:00:02,639
work to go there i do believe it's the

1267
01:00:02,639 --> 01:00:04,239
solution but it has to get really cheap

1268
01:00:04,239 --> 01:00:05,920
and easy before it actually solves

1269
01:00:05,920 --> 01:00:08,239
anything

1270
01:00:09,840 --> 01:00:11,280
so

1271
01:00:11,280 --> 01:00:12,400
we talked about

1272
01:00:12,400 --> 01:00:14,719
kind of three incidents and i think if

1273
01:00:14,719 --> 01:00:16,239
you work in information security or

1274
01:00:16,239 --> 01:00:17,679
you're considering a job in information

1275
01:00:17,679 --> 01:00:19,280
security i think it should be clear to

1276
01:00:19,280 --> 01:00:21,520
you that you have job security for the

1277
01:00:21,520 --> 01:00:24,320
next 20 years or so right

1278
01:00:24,320 --> 01:00:25,599
these things aren't going to go away

1279
01:00:25,599 --> 01:00:26,960
there's always going to be incidents

1280
01:00:26,960 --> 01:00:28,000
there's always going to be plenty of

1281
01:00:28,000 --> 01:00:29,599
vulnerabilities for you to exploit

1282
01:00:29,599 --> 01:00:31,520
there's always going to be things

1283
01:00:31,520 --> 01:00:34,000
to do but

1284
01:00:34,000 --> 01:00:36,239
what i think has changed is that i think

1285
01:00:36,239 --> 01:00:38,000
there is a shift and i think these big

1286
01:00:38,000 --> 01:00:40,000
incidents have been a wake-up call to

1287
01:00:40,000 --> 01:00:41,599
folks and i think we're in a position to

1288
01:00:41,599 --> 01:00:43,679
start doing something about them

1289
01:00:43,679 --> 01:00:45,679
i think we're collectively addressing

1290
01:00:45,679 --> 01:00:47,679
major problems in a way that we really

1291
01:00:47,679 --> 01:00:49,280
weren't three years ago

1292
01:00:49,280 --> 01:00:50,480
we're going after some of these

1293
01:00:50,480 --> 01:00:53,840
fundamental problems in infosec and

1294
01:00:53,840 --> 01:00:55,520
there's a whole bunch of others if i

1295
01:00:55,520 --> 01:00:56,880
gave you another tenant sentence you'd

1296
01:00:56,880 --> 01:00:58,320
find another bunch of other core

1297
01:00:58,320 --> 01:00:59,679
problems in them and we could talk about

1298
01:00:59,679 --> 01:01:01,360
those but i really believe that we're

1299
01:01:01,360 --> 01:01:02,480
starting to shift and there's a few

1300
01:01:02,480 --> 01:01:05,119
reasons for that

1301
01:01:06,880 --> 01:01:08,400
and this is you know

1302
01:01:08,400 --> 01:01:10,400
cyber security played out on a global

1303
01:01:10,400 --> 01:01:11,440
stage

1304
01:01:11,440 --> 01:01:13,840
by super power governments and tech

1305
01:01:13,840 --> 01:01:15,599
giants

1306
01:01:15,599 --> 01:01:17,280
and therefore what's your role in this

1307
01:01:17,280 --> 01:01:19,360
how could you possibly have any effect

1308
01:01:19,360 --> 01:01:21,920
on these kind of industry changes all

1309
01:01:21,920 --> 01:01:23,599
these other kind of things

1310
01:01:23,599 --> 01:01:26,159
and i and it's easy to look at that as a

1311
01:01:26,159 --> 01:01:28,719
practitioner sitting here in new zealand

1312
01:01:28,719 --> 01:01:30,639
and say i don't have a part of that but

1313
01:01:30,639 --> 01:01:31,760
i want to tell you that you're all

1314
01:01:31,760 --> 01:01:33,520
directly involved and i want to talk

1315
01:01:33,520 --> 01:01:35,360
about why

1316
01:01:35,360 --> 01:01:38,239
so i'm fortunate enough to have a seat

1317
01:01:38,239 --> 01:01:39,760
kind of and seen and been in the

1318
01:01:39,760 --> 01:01:41,440
discussions and seen a lot of these

1319
01:01:41,440 --> 01:01:43,040
things play out

1320
01:01:43,040 --> 01:01:43,840
and

1321
01:01:43,840 --> 01:01:45,040
sit in the rooms where people have

1322
01:01:45,040 --> 01:01:46,639
discussed these things and talked with

1323
01:01:46,639 --> 01:01:48,639
the developers that are working on them

1324
01:01:48,639 --> 01:01:50,560
and i want to talk about some of them

1325
01:01:50,560 --> 01:01:52,480
you know why did passkey happen we just

1326
01:01:52,480 --> 01:01:53,760
talked about past key hey it's an

1327
01:01:53,760 --> 01:01:55,119
industry standard happening in fido

1328
01:01:55,119 --> 01:01:57,199
alliance that seems far and distant but

1329
01:01:57,199 --> 01:01:58,800
how did it actually happen it was a

1330
01:01:58,800 --> 01:02:00,320
couple of product managers sitting down

1331
01:02:00,320 --> 01:02:01,360
for lunch

1332
01:02:01,360 --> 01:02:03,280
who worked in two different companies

1333
01:02:03,280 --> 01:02:04,560
that were frustrated about how they were

1334
01:02:04,560 --> 01:02:05,920
dealing with their family

1335
01:02:05,920 --> 01:02:07,280
dealing with that and their families

1336
01:02:07,280 --> 01:02:08,480
that decided they were going to figure

1337
01:02:08,480 --> 01:02:10,320
out how to work together and solve it

1338
01:02:10,320 --> 01:02:11,679
and they came together and put together

1339
01:02:11,679 --> 01:02:13,679
a pitch and kind of made some progress

1340
01:02:13,679 --> 01:02:15,520
it was a couple of people deciding to do

1341
01:02:15,520 --> 01:02:16,880
that

1342
01:02:16,880 --> 01:02:18,639
how did you know osv happen how did we

1343
01:02:18,639 --> 01:02:19,760
end up with the new standard for

1344
01:02:19,760 --> 01:02:21,599
publishing vulnerabilities it's an

1345
01:02:21,599 --> 01:02:23,119
engineer sitting in sydney who woke up

1346
01:02:23,119 --> 01:02:24,719
one morning and decided he was going to

1347
01:02:24,719 --> 01:02:26,400
write up the ideas that he had and just

1348
01:02:26,400 --> 01:02:28,239
sent it to everyone he knew

1349
01:02:28,239 --> 01:02:30,159
and two months later we had a standard

1350
01:02:30,159 --> 01:02:32,320
it was adopted by github and we have a

1351
01:02:32,320 --> 01:02:33,920
bunch of tools around it to kind of make

1352
01:02:33,920 --> 01:02:36,719
that work it was a single person making

1353
01:02:36,719 --> 01:02:38,880
that decision and deciding to go after

1354
01:02:38,880 --> 01:02:39,679
it

1355
01:02:39,679 --> 01:02:41,520
you know how to open ssf happen this

1356
01:02:41,520 --> 01:02:43,679
massive industry body that is changing

1357
01:02:43,679 --> 01:02:45,840
how we're doing open source security had

1358
01:02:45,840 --> 01:02:48,320
it happen in the end it was one person

1359
01:02:48,320 --> 01:02:49,599
who just decided they were going to stop

1360
01:02:49,599 --> 01:02:51,280
doing what they were working on wrote a

1361
01:02:51,280 --> 01:02:53,920
pitch deck and went to every vp at every

1362
01:02:53,920 --> 01:02:56,000
company they could talk to and just kept

1363
01:02:56,000 --> 01:02:57,440
on pitching until someone gave them

1364
01:02:57,440 --> 01:02:59,040
enough money to start

1365
01:02:59,040 --> 01:03:01,280
and now a year later

1366
01:03:01,280 --> 01:03:03,040
a year and a half later it's this

1367
01:03:03,040 --> 01:03:04,639
massive thing that is changing how open

1368
01:03:04,639 --> 01:03:06,719
source is actually happening

1369
01:03:06,719 --> 01:03:09,599
you know why is it that today you can

1370
01:03:09,599 --> 01:03:12,239
now log into github and access your git

1371
01:03:12,239 --> 01:03:14,159
repositories using multi-factor

1372
01:03:14,159 --> 01:03:15,679
authentication

1373
01:03:15,679 --> 01:03:17,760
it was a because a couple of people

1374
01:03:17,760 --> 01:03:20,239
again sitting in a team in sydney in

1375
01:03:20,239 --> 01:03:22,159
this case um

1376
01:03:22,159 --> 01:03:23,599
you know

1377
01:03:23,599 --> 01:03:25,520
decided to send some pull requests

1378
01:03:25,520 --> 01:03:26,800
figured out how they thought it should

1379
01:03:26,800 --> 01:03:28,960
work sent sent pull requests the open to

1380
01:03:28,960 --> 01:03:31,599
open ssh to the to get to a bunch of

1381
01:03:31,599 --> 01:03:32,880
other things and just decided they were

1382
01:03:32,880 --> 01:03:34,800
going to make it happen it wasn't some

1383
01:03:34,800 --> 01:03:36,800
big top-down industry initiative that

1384
01:03:36,800 --> 01:03:38,000
made that happen

1385
01:03:38,000 --> 01:03:39,520
it was just people deciding they were

1386
01:03:39,520 --> 01:03:40,880
going to do it

1387
01:03:40,880 --> 01:03:42,320
and i believe you all have that same

1388
01:03:42,320 --> 01:03:43,440
role to play

1389
01:03:43,440 --> 01:03:46,080
that you know why is why is sbomb a

1390
01:03:46,080 --> 01:03:47,760
thing why did that turn up and a bunch

1391
01:03:47,760 --> 01:03:49,679
of the these government kind of mandates

1392
01:03:49,679 --> 01:03:51,679
on things it turned up because a couple

1393
01:03:51,679 --> 01:03:54,079
of people instead of taking consulting

1394
01:03:54,079 --> 01:03:54,960
roles

1395
01:03:54,960 --> 01:03:56,239
they were experienced and they went and

1396
01:03:56,239 --> 01:03:58,239
joined the government and kind of worked

1397
01:03:58,239 --> 01:03:58,960
on

1398
01:03:58,960 --> 01:04:00,880
same policy and worked on saying things

1399
01:04:00,880 --> 01:04:02,719
that they could land that's individuals

1400
01:04:02,719 --> 01:04:04,480
kind of doing that work

1401
01:04:04,480 --> 01:04:05,840
and it's individuals

1402
01:04:05,840 --> 01:04:07,599
kind of investing their time in a way

1403
01:04:07,599 --> 01:04:11,000
that really scales

1404
01:04:12,079 --> 01:04:13,360
so yes

1405
01:04:13,360 --> 01:04:15,840
you know we're we're massively short

1406
01:04:15,840 --> 01:04:17,199
staffed and infosec we want to solve

1407
01:04:17,199 --> 01:04:18,560
these problems it's going to take a

1408
01:04:18,560 --> 01:04:20,400
whole lot more people than we have

1409
01:04:20,400 --> 01:04:22,560
working in the industry today it's going

1410
01:04:22,560 --> 01:04:25,280
to take a lot more but what matters is

1411
01:04:25,280 --> 01:04:27,199
not necessarily how many folks that we

1412
01:04:27,199 --> 01:04:29,040
bring in but how many of the folks that

1413
01:04:29,040 --> 01:04:30,719
are working in it today are working on

1414
01:04:30,719 --> 01:04:33,440
something that actually scales

1415
01:04:33,440 --> 01:04:35,599
so the way we win is actually by

1416
01:04:35,599 --> 01:04:37,440
everyone considering

1417
01:04:37,440 --> 01:04:39,040
how are you doing something in a way

1418
01:04:39,040 --> 01:04:41,199
that no one ever has to do it again if

1419
01:04:41,199 --> 01:04:43,199
you're writing a pen test report

1420
01:04:43,199 --> 01:04:44,800
and you're and you're kind of handing

1421
01:04:44,800 --> 01:04:46,880
the customer how is it that no one is

1422
01:04:46,880 --> 01:04:48,239
ever going to have to write that same

1423
01:04:48,239 --> 01:04:50,960
pen test report again

1424
01:04:50,960 --> 01:04:52,960
if you're finding vulnerabilities how is

1425
01:04:52,960 --> 01:04:54,320
it that someone's never going to have to

1426
01:04:54,320 --> 01:04:56,480
find that vulnerability again because

1427
01:04:56,480 --> 01:04:58,320
it's been solved because we've solved

1428
01:04:58,320 --> 01:05:00,159
that class of problems

1429
01:05:00,159 --> 01:05:01,520
when you think about how you're

1430
01:05:01,520 --> 01:05:03,199
investigating an incident or responding

1431
01:05:03,199 --> 01:05:04,880
to an incident how is it that that

1432
01:05:04,880 --> 01:05:06,400
incident is never going to happen again

1433
01:05:06,400 --> 01:05:07,920
in the same way that no one's going to

1434
01:05:07,920 --> 01:05:09,040
deal with that

1435
01:05:09,040 --> 01:05:11,119
and solving that figuring out how you

1436
01:05:11,119 --> 01:05:13,520
can work on things even dedicating some

1437
01:05:13,520 --> 01:05:15,520
of your time to that part of the problem

1438
01:05:15,520 --> 01:05:18,000
is important

1439
01:05:18,239 --> 01:05:20,079
and you know i don't believe in the

1440
01:05:20,079 --> 01:05:22,079
infosec passion mantra that you will

1441
01:05:22,079 --> 01:05:24,159
hear from here from a bunch of folks and

1442
01:05:24,159 --> 01:05:25,679
what i mean by this is you will hear

1443
01:05:25,679 --> 01:05:27,119
from recruiters and a bunch of things

1444
01:05:27,119 --> 01:05:28,960
that the problems in our industry are

1445
01:05:28,960 --> 01:05:31,119
going to be solved by unencumbered

1446
01:05:31,119 --> 01:05:33,360
20-somethings working 70 hours a week

1447
01:05:33,360 --> 01:05:35,280
attempting to kind of land things and

1448
01:05:35,280 --> 01:05:36,880
kind of change how the infosec industry

1449
01:05:36,880 --> 01:05:37,920
works

1450
01:05:37,920 --> 01:05:39,599
and i think those folks have a role you

1451
01:05:39,599 --> 01:05:40,880
know the folks

1452
01:05:40,880 --> 01:05:42,239
hunting blogs and doing all these things

1453
01:05:42,239 --> 01:05:43,199
there's a bunch of stuff that's

1454
01:05:43,199 --> 01:05:44,639
happening and that that has a big role

1455
01:05:44,639 --> 01:05:47,440
to play but in my experience

1456
01:05:47,440 --> 01:05:48,960
you know the real changes coming from

1457
01:05:48,960 --> 01:05:50,800
folks working nine to five

1458
01:05:50,800 --> 01:05:52,560
it's coming from folks from a bunch of

1459
01:05:52,560 --> 01:05:54,639
diverse backgrounds it's coming from a

1460
01:05:54,639 --> 01:05:56,560
bunch of folks that have had experience

1461
01:05:56,560 --> 01:05:57,760
that are kind of returning to the

1462
01:05:57,760 --> 01:05:59,199
workforce that are coming from other

1463
01:05:59,199 --> 01:06:01,760
industries that are turning up

1464
01:06:01,760 --> 01:06:03,840
and you know spend their day tackling

1465
01:06:03,840 --> 01:06:05,679
hard problems thinking about how they

1466
01:06:05,679 --> 01:06:07,199
scale the solutions to the things that

1467
01:06:07,199 --> 01:06:08,239
they're doing

1468
01:06:08,239 --> 01:06:09,440
but then you know going and picking

1469
01:06:09,440 --> 01:06:10,800
their kids up from school at the end of

1470
01:06:10,800 --> 01:06:11,760
the day

1471
01:06:11,760 --> 01:06:12,880
because those are the folks that are

1472
01:06:12,880 --> 01:06:14,719
actually doing this in a sustainable way

1473
01:06:14,719 --> 01:06:16,159
and are thinking about how we solve it

1474
01:06:16,159 --> 01:06:18,000
for the future because in that nine to

1475
01:06:18,000 --> 01:06:19,840
five time they understand the problem

1476
01:06:19,840 --> 01:06:21,040
they have the experience and they're

1477
01:06:21,040 --> 01:06:24,239
doing things that really scale

1478
01:06:24,239 --> 01:06:27,280
so how does that work for you

1479
01:06:27,280 --> 01:06:28,639
so i want to talk about some of the ways

1480
01:06:28,639 --> 01:06:30,239
that you can think about it for how

1481
01:06:30,239 --> 01:06:31,679
things scale

1482
01:06:31,679 --> 01:06:34,079
one you can pressure vendors to adopt

1483
01:06:34,079 --> 01:06:35,760
new security technology we talked about

1484
01:06:35,760 --> 01:06:37,440
s-bomb we talk about past key we talk

1485
01:06:37,440 --> 01:06:39,119
about other things a lot of folks don't

1486
01:06:39,119 --> 01:06:41,679
realize how much kind of effect they can

1487
01:06:41,679 --> 01:06:43,679
have on their vendors and i know this

1488
01:06:43,679 --> 01:06:45,599
you know i work with the gcp securities

1489
01:06:45,599 --> 01:06:47,440
team which is you know cloud for google

1490
01:06:47,440 --> 01:06:49,040
and i know there's a bunch of people in

1491
01:06:49,040 --> 01:06:51,280
this room that hassle the sales people

1492
01:06:51,280 --> 01:06:53,520
for gcp security and tell them about the

1493
01:06:53,520 --> 01:06:55,040
security features that are missing

1494
01:06:55,040 --> 01:06:56,560
notable folks that trade me and others

1495
01:06:56,560 --> 01:06:58,960
that do this and and uh and you know

1496
01:06:58,960 --> 01:07:01,760
they know those folks right and they go

1497
01:07:01,760 --> 01:07:03,360
and land

1498
01:07:03,360 --> 01:07:06,079
features in gcp for security because of

1499
01:07:06,079 --> 01:07:07,520
the pressure that comes from local

1500
01:07:07,520 --> 01:07:09,760
companies here and that's true across

1501
01:07:09,760 --> 01:07:10,880
people people that pull together

1502
01:07:10,880 --> 01:07:12,800
industry bodies and make this happen

1503
01:07:12,800 --> 01:07:15,760
like that's a reality

1504
01:07:16,079 --> 01:07:17,520
pressure the vendors

1505
01:07:17,520 --> 01:07:19,119
buy secure products not security

1506
01:07:19,119 --> 01:07:21,199
products it's still unreasonable that

1507
01:07:21,199 --> 01:07:22,639
you have to buy a bunch of security

1508
01:07:22,639 --> 01:07:25,119
products to bolt on to your office suite

1509
01:07:25,119 --> 01:07:26,960
to actually make it secure

1510
01:07:26,960 --> 01:07:28,400
pressure the vendors to kind of make

1511
01:07:28,400 --> 01:07:29,679
that standard

1512
01:07:29,679 --> 01:07:30,719
right that's where you should be

1513
01:07:30,719 --> 01:07:32,719
investing your money

1514
01:07:32,719 --> 01:07:35,440
file bugs against insecure defaults

1515
01:07:35,440 --> 01:07:37,440
solve classes of problems not individual

1516
01:07:37,440 --> 01:07:39,840
bugs wherever you can

1517
01:07:39,840 --> 01:07:41,199
fix it in the framework you're writing a

1518
01:07:41,199 --> 01:07:42,960
pen test report you found a bug and a

1519
01:07:42,960 --> 01:07:44,639
thing don't tell them to go and fix the

1520
01:07:44,639 --> 01:07:46,639
bug and change the line of code

1521
01:07:46,639 --> 01:07:48,159
tell them about the framework that they

1522
01:07:48,159 --> 01:07:49,440
should have implemented that actually

1523
01:07:49,440 --> 01:07:50,960
ensures that that bug never happens

1524
01:07:50,960 --> 01:07:52,159
again

1525
01:07:52,159 --> 01:07:54,000
go after that that's where the real

1526
01:07:54,000 --> 01:07:56,960
that's where the real change happens

1527
01:07:56,960 --> 01:07:58,639
publish what worked and what didn't

1528
01:07:58,639 --> 01:08:00,000
maybe you're in a place where it's not

1529
01:08:00,000 --> 01:08:01,520
easy to kind of kind of

1530
01:08:01,520 --> 01:08:03,520
commit or change code or do the other

1531
01:08:03,520 --> 01:08:05,440
kind of things for this but you can kind

1532
01:08:05,440 --> 01:08:06,400
of

1533
01:08:06,400 --> 01:08:07,920
write bug reports for the things that

1534
01:08:07,920 --> 01:08:10,400
don't work you can publish the paper on

1535
01:08:10,400 --> 01:08:11,679
the thing that you tried and it

1536
01:08:11,679 --> 01:08:12,880
completely failed and was a waste of

1537
01:08:12,880 --> 01:08:14,000
your time

1538
01:08:14,000 --> 01:08:15,920
that's how you can scale your time to

1539
01:08:15,920 --> 01:08:17,279
ensure there's you know a thousand other

1540
01:08:17,279 --> 01:08:18,639
people that won't make the same same

1541
01:08:18,639 --> 01:08:20,800
mistakes that you were made

1542
01:08:20,800 --> 01:08:22,399
you know instead of building your own

1543
01:08:22,399 --> 01:08:24,158
policy framework or you know you work in

1544
01:08:24,158 --> 01:08:26,560
a company you think contribute to one

1545
01:08:26,560 --> 01:08:27,760
figure out the group of people that are

1546
01:08:27,760 --> 01:08:29,599
working on the same set of problems as

1547
01:08:29,599 --> 01:08:31,198
you and ensure that none of you are

1548
01:08:31,198 --> 01:08:33,279
repeating work because we can't afford

1549
01:08:33,279 --> 01:08:35,359
to there's not enough of us at this

1550
01:08:35,359 --> 01:08:38,238
stage to do that

1551
01:08:40,719 --> 01:08:42,000
and you know work with government on

1552
01:08:42,000 --> 01:08:44,078
smart legislation you have a bunch of

1553
01:08:44,078 --> 01:08:45,359
folks that really want to change things

1554
01:08:45,359 --> 01:08:47,040
that really want these things to get

1555
01:08:47,040 --> 01:08:48,800
better you can actually work with those

1556
01:08:48,800 --> 01:08:50,800
folks you can actually help them in

1557
01:08:50,800 --> 01:08:52,238
these environments and figure out good

1558
01:08:52,238 --> 01:08:54,319
changes start companies that are

1559
01:08:54,319 --> 01:08:55,920
actually building scalable solutions to

1560
01:08:55,920 --> 01:08:59,920
these things figure out how that works

1561
01:09:00,399 --> 01:09:04,198
so further to that

1562
01:09:04,479 --> 01:09:05,359
one

1563
01:09:05,359 --> 01:09:08,078
we need to grow the talent pool and this

1564
01:09:08,078 --> 01:09:09,118
environment

1565
01:09:09,118 --> 01:09:10,800
if you work in infosec today if you're

1566
01:09:10,800 --> 01:09:12,639
part of this industry

1567
01:09:12,639 --> 01:09:14,158
we have to ensure that the folks that

1568
01:09:14,158 --> 01:09:16,238
are entertaining the industry now have

1569
01:09:16,238 --> 01:09:18,560
it better than we did you know and i

1570
01:09:18,560 --> 01:09:20,639
want us all to be part of that i want

1571
01:09:20,639 --> 01:09:22,479
better access to mentors i want people

1572
01:09:22,479 --> 01:09:24,880
to kind of join the industry and be a

1573
01:09:24,880 --> 01:09:26,479
welcoming place and i know that's such a

1574
01:09:26,479 --> 01:09:28,560
core part of the community here at

1575
01:09:28,560 --> 01:09:31,118
kuicon is how do you include new folks

1576
01:09:31,118 --> 01:09:32,479
and how do you make sure that we can

1577
01:09:32,479 --> 01:09:34,399
grow this industry and bring new people

1578
01:09:34,399 --> 01:09:35,920
on

1579
01:09:35,920 --> 01:09:37,679
but additionally

1580
01:09:37,679 --> 01:09:39,040
work for someone that values broader

1581
01:09:39,040 --> 01:09:40,960
contribution there are a huge number of

1582
01:09:40,960 --> 01:09:42,639
roles in information security right now

1583
01:09:42,639 --> 01:09:44,399
it's a massive growing industry but if

1584
01:09:44,399 --> 01:09:46,078
you're working for for someone that just

1585
01:09:46,078 --> 01:09:48,078
cares about the next quarter's profits

1586
01:09:48,078 --> 01:09:49,760
and isn't kind of giving you time to

1587
01:09:49,760 --> 01:09:51,920
actually tackle things and find ways

1588
01:09:51,920 --> 01:09:53,198
that can scale

1589
01:09:53,198 --> 01:09:54,960
consider that consider working for

1590
01:09:54,960 --> 01:09:56,320
someone that does do that because there

1591
01:09:56,320 --> 01:09:57,840
are a huge number of companies that are

1592
01:09:57,840 --> 01:09:59,440
doing it that are really contributing

1593
01:09:59,440 --> 01:10:01,040
and really working on problems that

1594
01:10:01,040 --> 01:10:04,480
scale so consider that

1595
01:10:07,440 --> 01:10:09,040
so

1596
01:10:09,040 --> 01:10:11,360
solving these problems matter of

1597
01:10:11,360 --> 01:10:12,880
information security

1598
01:10:12,880 --> 01:10:14,639
you know whether you are

1599
01:10:14,639 --> 01:10:17,040
protecting the healthcare industry from

1600
01:10:17,040 --> 01:10:18,400
ransomware

1601
01:10:18,400 --> 01:10:20,880
if you're protecting you know users from

1602
01:10:20,880 --> 01:10:24,159
spyware and domestic abuse situations

1603
01:10:24,159 --> 01:10:25,840
whether you're protecting journalists

1604
01:10:25,840 --> 01:10:28,719
from hostile governments or protecting

1605
01:10:28,719 --> 01:10:31,119
elections from being stolen

1606
01:10:31,119 --> 01:10:33,199
these are all key things that we do in

1607
01:10:33,199 --> 01:10:35,119
this industry

1608
01:10:35,119 --> 01:10:37,440
they are fundamental to the democracy in

1609
01:10:37,440 --> 01:10:39,679
the world that we that we live in

1610
01:10:39,679 --> 01:10:42,560
what we do has a major effect and i'd

1611
01:10:42,560 --> 01:10:43,760
really like

1612
01:10:43,760 --> 01:10:45,840
that when we stand at the end of kind of

1613
01:10:45,840 --> 01:10:48,320
2023 and we look back on the new

1614
01:10:48,320 --> 01:10:50,239
incidents that we've all got to respond

1615
01:10:50,239 --> 01:10:51,599
to and the new incidents that we've

1616
01:10:51,599 --> 01:10:52,719
dealt with

1617
01:10:52,719 --> 01:10:54,800
when we look back on the root causes i'd

1618
01:10:54,800 --> 01:10:56,000
like to be able to kind of give these

1619
01:10:56,000 --> 01:10:57,440
things better scores

1620
01:10:57,440 --> 01:10:59,360
i'd like to say that we change something

1621
01:10:59,360 --> 01:11:02,159
significantly for the better

1622
01:11:02,159 --> 01:11:04,079
and we do that by ensuring that we're

1623
01:11:04,079 --> 01:11:06,400
all working on something that scales

1624
01:11:06,400 --> 01:11:09,599
and that's what i hope for all of us

1625
01:11:09,599 --> 01:11:10,500
thank you

1626
01:11:10,500 --> 01:11:15,989
[Applause]

1627
01:11:17,990 --> 01:11:24,800
[Applause]

1628
01:11:24,800 --> 01:11:27,280
thanks very much darren

1629
01:11:27,280 --> 01:11:28,880
i think you'll all agree that insight

1630
01:11:28,880 --> 01:11:30,560
from someone who's been working in a

1631
01:11:30,560 --> 01:11:33,040
place that big with problems that real

1632
01:11:33,040 --> 01:11:35,440
uh is super useful right

1633
01:11:35,440 --> 01:11:37,440
uh right we'll move on uh the next

1634
01:11:37,440 --> 01:11:39,040
speaker is one of my colleagues actually

1635
01:11:39,040 --> 01:11:41,199
a colleague or a number of you from from

1636
01:11:41,199 --> 01:11:43,360
catalyst at aura and now uh you know

1637
01:11:43,360 --> 01:11:45,760
insomnia in cyber cx

1638
01:11:45,760 --> 01:11:49,790
my colleague mr tim goddard

1639
01:11:49,790 --> 01:11:55,890
[Applause]

1640
01:12:04,079 --> 01:12:07,840
do i need to click this

1641
01:12:10,639 --> 01:12:14,000
i don't seem to have my slides

1642
01:12:16,719 --> 01:12:17,679
hey

1643
01:12:17,679 --> 01:12:20,000
great

1644
01:12:47,119 --> 01:12:49,840
hi everyone i'm tim goddard and i work

1645
01:12:49,840 --> 01:12:51,840
as a principal security consultant at

1646
01:12:51,840 --> 01:12:53,760
cyber cx

1647
01:12:53,760 --> 01:12:55,920
my background is in software development

1648
01:12:55,920 --> 01:12:58,079
before i got into pen testing and

1649
01:12:58,079 --> 01:13:01,119
security consulting i was a

1650
01:13:01,119 --> 01:13:02,560
software developer

1651
01:13:02,560 --> 01:13:04,560
working in a wide variety of languages

1652
01:13:04,560 --> 01:13:06,560
most recently rails

1653
01:13:06,560 --> 01:13:08,560
and this means that

1654
01:13:08,560 --> 01:13:10,719
i've continued that focus through into

1655
01:13:10,719 --> 01:13:13,040
security on how we build web

1656
01:13:13,040 --> 01:13:15,119
applications well

1657
01:13:15,119 --> 01:13:17,599
and secure code review and so on and so

1658
01:13:17,599 --> 01:13:20,159
forth is my specialty

1659
01:13:20,159 --> 01:13:21,840
and i want to talk a little bit today

1660
01:13:21,840 --> 01:13:22,880
about

1661
01:13:22,880 --> 01:13:24,880
the approach and the

1662
01:13:24,880 --> 01:13:27,360
attitude that we as a security industry

1663
01:13:27,360 --> 01:13:28,159
have

1664
01:13:28,159 --> 01:13:31,520
to the process of building things

1665
01:13:31,520 --> 01:13:35,199
we our job our focus is often to look

1666
01:13:35,199 --> 01:13:37,440
for the things that went wrong

1667
01:13:37,440 --> 01:13:39,280
there will be a big project

1668
01:13:39,280 --> 01:13:41,840
90 of it will go right but there'll be

1669
01:13:41,840 --> 01:13:43,840
that little bit that little 10 that

1670
01:13:43,840 --> 01:13:46,560
little three percent that goes

1671
01:13:46,560 --> 01:13:49,119
wrong and our job is to look for those

1672
01:13:49,119 --> 01:13:50,719
gaps

1673
01:13:50,719 --> 01:13:52,239
and when it's your job to look for

1674
01:13:52,239 --> 01:13:55,040
problems it's very easy to see problems

1675
01:13:55,040 --> 01:13:58,560
everywhere you look

1676
01:13:58,560 --> 01:14:00,400
what this leads us to do is it leads us

1677
01:14:00,400 --> 01:14:02,400
to a very nihilistic approach to think

1678
01:14:02,400 --> 01:14:04,560
that everything is hopeless

1679
01:14:04,560 --> 01:14:05,760
now

1680
01:14:05,760 --> 01:14:08,480
what i want to go through today is a few

1681
01:14:08,480 --> 01:14:11,119
reasons why at least in my area at least

1682
01:14:11,119 --> 01:14:13,360
in that web application development

1683
01:14:13,360 --> 01:14:15,679
we might want to take a slightly more

1684
01:14:15,679 --> 01:14:18,480
optimistic attitude to the future and

1685
01:14:18,480 --> 01:14:20,000
where things are going

1686
01:14:20,000 --> 01:14:21,840
i'm going to go through a series of

1687
01:14:21,840 --> 01:14:24,159
different trends different things that

1688
01:14:24,159 --> 01:14:26,719
we've seen in the industry

1689
01:14:26,719 --> 01:14:28,960
and

1690
01:14:29,520 --> 01:14:31,599
i just want to cover you know why we

1691
01:14:31,599 --> 01:14:33,840
should look at these in a positive way

1692
01:14:33,840 --> 01:14:34,639
so

1693
01:14:34,639 --> 01:14:36,880
seven years ago i moved from software

1694
01:14:36,880 --> 01:14:39,520
development into uh into security

1695
01:14:39,520 --> 01:14:40,719
testing

1696
01:14:40,719 --> 01:14:41,599
and

1697
01:14:41,599 --> 01:14:44,719
when i first started you know i'd run

1698
01:14:44,719 --> 01:14:46,079
these tools and they're amazing you know

1699
01:14:46,079 --> 01:14:47,840
you'd get set up you'd log into a web

1700
01:14:47,840 --> 01:14:49,679
application you'd run bip suite over the

1701
01:14:49,679 --> 01:14:52,079
whole thing and it would just produce a

1702
01:14:52,079 --> 01:14:54,159
list of vulnerabilities you would get

1703
01:14:54,159 --> 01:14:55,920
sql injection vulnerabilities you'd get

1704
01:14:55,920 --> 01:14:57,840
cross-site scripting vulnerabilities you

1705
01:14:57,840 --> 01:14:59,840
would get a whole series of things which

1706
01:14:59,840 --> 01:15:00,880
you could just

1707
01:15:00,880 --> 01:15:02,639
take from that scan

1708
01:15:02,639 --> 01:15:05,119
explain a little bit in your report and

1709
01:15:05,119 --> 01:15:08,239
hey your job was done

1710
01:15:08,239 --> 01:15:09,920
these days

1711
01:15:09,920 --> 01:15:12,560
you don't tend to get that same

1712
01:15:12,560 --> 01:15:15,040
level of automation working as well for

1713
01:15:15,040 --> 01:15:17,760
you you'll run those tools

1714
01:15:17,760 --> 01:15:20,320
and they'll come back with nothing

1715
01:15:20,320 --> 01:15:22,480
or you'll run those tools and they'll

1716
01:15:22,480 --> 01:15:24,159
come back with false positives and

1717
01:15:24,159 --> 01:15:26,320
things that you have to eliminate

1718
01:15:26,320 --> 01:15:27,440
so

1719
01:15:27,440 --> 01:15:29,920
you know what's happened in that time

1720
01:15:29,920 --> 01:15:32,000
frame to drive those changes now there

1721
01:15:32,000 --> 01:15:34,800
could well be biases in terms of

1722
01:15:34,800 --> 01:15:36,960
what i've seen right this is all based

1723
01:15:36,960 --> 01:15:38,719
on my personal experience i don't have

1724
01:15:38,719 --> 01:15:40,239
numbers for you

1725
01:15:40,239 --> 01:15:42,560
i don't have statistics to tell you that

1726
01:15:42,560 --> 01:15:44,400
yes things are definitively better

1727
01:15:44,400 --> 01:15:46,480
statistically proven

1728
01:15:46,480 --> 01:15:48,719
what i'm going on is what i've seen over

1729
01:15:48,719 --> 01:15:50,719
these seven years

1730
01:15:50,719 --> 01:15:51,599
and

1731
01:15:51,599 --> 01:15:53,520
what i'm seeing is that when i run these

1732
01:15:53,520 --> 01:15:56,560
tools the number of technical flaws the

1733
01:15:56,560 --> 01:15:59,199
cross-site scripting flaws the sql

1734
01:15:59,199 --> 01:16:01,520
injection flaws so on and so forth

1735
01:16:01,520 --> 01:16:03,360
they're well down

1736
01:16:03,360 --> 01:16:05,760
they're not where they used to be

1737
01:16:05,760 --> 01:16:08,159
and when i talk to developers they

1738
01:16:08,159 --> 01:16:10,239
understand these issues

1739
01:16:10,239 --> 01:16:12,239
i think today there is a much greater

1740
01:16:12,239 --> 01:16:14,239
understanding amongst software

1741
01:16:14,239 --> 01:16:16,560
developers of these common security

1742
01:16:16,560 --> 01:16:18,400
issues and the process is needed to

1743
01:16:18,400 --> 01:16:20,239
avoid them

1744
01:16:20,239 --> 01:16:21,840
so

1745
01:16:21,840 --> 01:16:23,199
while

1746
01:16:23,199 --> 01:16:24,560
while i go through all of these

1747
01:16:24,560 --> 01:16:26,960
different trends and different issues

1748
01:16:26,960 --> 01:16:30,000
i'm expecting quite a few of you

1749
01:16:30,000 --> 01:16:32,399
to disagree with me on quite a few of

1750
01:16:32,399 --> 01:16:34,160
these issues

1751
01:16:34,160 --> 01:16:36,000
i'm expecting that a lot of these things

1752
01:16:36,000 --> 01:16:37,679
are things that you've

1753
01:16:37,679 --> 01:16:40,160
been told a bad or a problem or so on

1754
01:16:40,160 --> 01:16:42,719
and so forth but i'd like people today

1755
01:16:42,719 --> 01:16:44,960
to try to see all of these trends as

1756
01:16:44,960 --> 01:16:47,280
part of a bigger picture and in a new

1757
01:16:47,280 --> 01:16:48,240
light

1758
01:16:48,240 --> 01:16:51,679
and so for this half hour please

1759
01:16:51,679 --> 01:16:55,280
try not to focus on the problems

1760
01:16:57,280 --> 01:17:00,559
the first and i feel most significant

1761
01:17:00,559 --> 01:17:03,280
uh driver of this improvement has been

1762
01:17:03,280 --> 01:17:05,920
the rise of large opinionated web

1763
01:17:05,920 --> 01:17:08,000
development frameworks and what i mean

1764
01:17:08,000 --> 01:17:10,080
by an opinionated web development

1765
01:17:10,080 --> 01:17:13,359
framework is that they have a defined

1766
01:17:13,359 --> 01:17:16,000
documented way of accomplishing common

1767
01:17:16,000 --> 01:17:18,399
tasks it's not that you can twiddle

1768
01:17:18,399 --> 01:17:20,960
every different knob and every different

1769
01:17:20,960 --> 01:17:23,760
application has everything different

1770
01:17:23,760 --> 01:17:24,960
it's that

1771
01:17:24,960 --> 01:17:27,519
a framework has a documented way of

1772
01:17:27,519 --> 01:17:29,920
doing things and if you follow that

1773
01:17:29,920 --> 01:17:33,120
approach you are likely to be safe

1774
01:17:33,120 --> 01:17:35,200
most web development frameworks that you

1775
01:17:35,200 --> 01:17:38,160
will work with whether it's laravel

1776
01:17:38,160 --> 01:17:41,599
whether it's rails whether it's django

1777
01:17:41,599 --> 01:17:43,040
are going to have

1778
01:17:43,040 --> 01:17:46,719
a defined way of creating an html page

1779
01:17:46,719 --> 01:17:49,439
some form of template

1780
01:17:49,439 --> 01:17:50,240
and

1781
01:17:50,240 --> 01:17:52,160
if you follow the documented way of

1782
01:17:52,160 --> 01:17:55,439
doing that chances are your framework is

1783
01:17:55,439 --> 01:17:57,679
encoding everything by default so that

1784
01:17:57,679 --> 01:18:00,719
you don't accidentally include html from

1785
01:18:00,719 --> 01:18:03,120
user input in your page and end up with

1786
01:18:03,120 --> 01:18:05,359
a cross-site scripting flow

1787
01:18:05,359 --> 01:18:07,120
the framework developers have done the

1788
01:18:07,120 --> 01:18:08,960
majority of the thinking about these

1789
01:18:08,960 --> 01:18:10,719
problems for us

1790
01:18:10,719 --> 01:18:12,719
and as long as we follow that path of

1791
01:18:12,719 --> 01:18:15,519
least resistance we end up

1792
01:18:15,519 --> 01:18:17,920
not introducing too many vulnerabilities

1793
01:18:17,920 --> 01:18:20,960
there are always going to be edge cases

1794
01:18:20,960 --> 01:18:23,040
similarly if we're interacting with the

1795
01:18:23,040 --> 01:18:24,479
database

1796
01:18:24,479 --> 01:18:26,080
there is a defined way that the

1797
01:18:26,080 --> 01:18:29,120
framework tells us to do so it may be a

1798
01:18:29,120 --> 01:18:31,840
large orm type object relational mapper

1799
01:18:31,840 --> 01:18:34,880
type layer it may be a simpler way using

1800
01:18:34,880 --> 01:18:37,519
prepared statements placeholders for all

1801
01:18:37,519 --> 01:18:39,040
our parameters

1802
01:18:39,040 --> 01:18:39,840
but

1803
01:18:39,840 --> 01:18:42,240
whatever it is

1804
01:18:42,240 --> 01:18:44,399
the framework developers have generally

1805
01:18:44,399 --> 01:18:46,399
thought through the process of whether

1806
01:18:46,399 --> 01:18:47,599
this is going to introduce

1807
01:18:47,599 --> 01:18:49,840
vulnerabilities and if you follow that

1808
01:18:49,840 --> 01:18:51,679
well-defined process if you follow the

1809
01:18:51,679 --> 01:18:54,000
path of least resistance you don't end

1810
01:18:54,000 --> 01:18:57,599
up introducing too many of them

1811
01:18:57,679 --> 01:18:59,439
these frameworks also provide us with

1812
01:18:59,439 --> 01:19:01,760
other forms of support there may well be

1813
01:19:01,760 --> 01:19:04,960
a way in the framework of filtering

1814
01:19:04,960 --> 01:19:07,599
the input that we accept from uh from

1815
01:19:07,599 --> 01:19:10,000
requests from the outside users

1816
01:19:10,000 --> 01:19:13,040
there may well be a way of applying

1817
01:19:13,040 --> 01:19:15,439
access controls in a standard way

1818
01:19:15,439 --> 01:19:18,399
through that framework that means that

1819
01:19:18,399 --> 01:19:20,240
as long as you follow that path of least

1820
01:19:20,240 --> 01:19:21,760
resistance

1821
01:19:21,760 --> 01:19:23,679
you won't introduce too many access

1822
01:19:23,679 --> 01:19:26,559
control problems

1823
01:19:27,840 --> 01:19:30,240
the next area i want to touch on is

1824
01:19:30,240 --> 01:19:31,920
allow listing

1825
01:19:31,920 --> 01:19:32,800
now

1826
01:19:32,800 --> 01:19:35,200
we normally talk about this by contrast

1827
01:19:35,200 --> 01:19:37,519
to block listing or blocking things

1828
01:19:37,519 --> 01:19:39,439
which we used to see a lot of

1829
01:19:39,439 --> 01:19:42,160
when i started seven years ago we saw a

1830
01:19:42,160 --> 01:19:44,559
lot of applications trying to filter the

1831
01:19:44,559 --> 01:19:47,040
bad things out of the input they would

1832
01:19:47,040 --> 01:19:48,720
come along they would say oh there are

1833
01:19:48,720 --> 01:19:51,680
script tags in your http post that's bad

1834
01:19:51,680 --> 01:19:53,439
i'm going to block you

1835
01:19:53,439 --> 01:19:54,319
and

1836
01:19:54,319 --> 01:19:56,240
what we found over time is that doesn't

1837
01:19:56,240 --> 01:19:58,319
work very well because it just creates

1838
01:19:58,319 --> 01:20:01,359
this endless arms race you'd block one

1839
01:20:01,359 --> 01:20:04,319
thing an attacker makes a small change

1840
01:20:04,319 --> 01:20:06,319
to get around it you end up seeing a

1841
01:20:06,319 --> 01:20:07,920
different thing you have to block that

1842
01:20:07,920 --> 01:20:11,280
blah blah blah just keeps on going so

1843
01:20:11,280 --> 01:20:13,120
we've really seen people shifting to

1844
01:20:13,120 --> 01:20:15,359
realizing you can't just identify what

1845
01:20:15,359 --> 01:20:19,520
is bad you have to identify what is good

1846
01:20:19,520 --> 01:20:21,840
now that could be in the form of having

1847
01:20:21,840 --> 01:20:25,120
a schema for our input saying we expect

1848
01:20:25,120 --> 01:20:27,760
to see these fields present we expect

1849
01:20:27,760 --> 01:20:30,160
things to be in this format that could

1850
01:20:30,160 --> 01:20:31,920
go down to the level of the individual

1851
01:20:31,920 --> 01:20:34,399
field say i'm building a library

1852
01:20:34,399 --> 01:20:37,200
management application and i put an isbn

1853
01:20:37,200 --> 01:20:39,359
number into a field well it makes sense

1854
01:20:39,359 --> 01:20:41,520
to validate that there's an isbn number

1855
01:20:41,520 --> 01:20:44,160
in that field yeah

1856
01:20:44,160 --> 01:20:46,319
and that there's nothing else that will

1857
01:20:46,319 --> 01:20:49,120
result in an issue now just by saying

1858
01:20:49,120 --> 01:20:50,560
what we expect

1859
01:20:50,560 --> 01:20:52,800
rather than what we don't want we end up

1860
01:20:52,800 --> 01:20:55,040
in a much more resilient state where an

1861
01:20:55,040 --> 01:20:58,399
attacker can't just go and change things

1862
01:20:58,399 --> 01:20:59,600
and

1863
01:20:59,600 --> 01:21:01,600
these are supported by the frameworks

1864
01:21:01,600 --> 01:21:02,960
that i was talking about before

1865
01:21:02,960 --> 01:21:04,399
frameworks will often have a standard

1866
01:21:04,399 --> 01:21:06,399
way of doing things follow your

1867
01:21:06,399 --> 01:21:10,399
framework community norm where you can

1868
01:21:10,720 --> 01:21:13,439
the next thing i want to talk about is

1869
01:21:13,439 --> 01:21:14,960
single sign-on and federated

1870
01:21:14,960 --> 01:21:17,040
authentication yeah

1871
01:21:17,040 --> 01:21:19,040
we're seeing more and more web

1872
01:21:19,040 --> 01:21:22,000
applications being built that don't have

1873
01:21:22,000 --> 01:21:24,479
their own authentication built in

1874
01:21:24,479 --> 01:21:26,720
and there's a reason for that building

1875
01:21:26,720 --> 01:21:28,960
authentication into a web application is

1876
01:21:28,960 --> 01:21:31,200
an absolute pain

1877
01:21:31,200 --> 01:21:33,760
and anyone who has built a small tool

1878
01:21:33,760 --> 01:21:35,680
will know that it can take you just as

1879
01:21:35,680 --> 01:21:38,640
long to be able to identify who your

1880
01:21:38,640 --> 01:21:40,800
users are and what they're allowed to

1881
01:21:40,800 --> 01:21:41,920
access

1882
01:21:41,920 --> 01:21:44,479
as it can take to accomplish the basic

1883
01:21:44,479 --> 01:21:46,960
functionality of that tool you can end

1884
01:21:46,960 --> 01:21:49,439
up spending an awful lot of time on this

1885
01:21:49,439 --> 01:21:51,200
so we're seeing a rise of frameworks

1886
01:21:51,200 --> 01:21:54,399
like oauth like oidc like samo not my

1887
01:21:54,399 --> 01:21:57,040
favorite but

1888
01:21:57,439 --> 01:22:00,000
and what these accomplish

1889
01:22:00,000 --> 01:22:02,319
is they allow us to have

1890
01:22:02,319 --> 01:22:05,040
one central application one central web

1891
01:22:05,040 --> 01:22:08,240
page where we sign in

1892
01:22:08,240 --> 01:22:09,920
and then we can get into all our little

1893
01:22:09,920 --> 01:22:11,439
applications

1894
01:22:11,439 --> 01:22:14,800
yes there can be integration problems

1895
01:22:14,800 --> 01:22:16,640
yes you can find

1896
01:22:16,640 --> 01:22:19,280
you know xml digital signature failures

1897
01:22:19,280 --> 01:22:21,280
and saml integration that let you bypass

1898
01:22:21,280 --> 01:22:23,680
stuff sure cool there are problems in

1899
01:22:23,680 --> 01:22:24,960
everything

1900
01:22:24,960 --> 01:22:26,080
but

1901
01:22:26,080 --> 01:22:29,200
the one major win this buys us from my

1902
01:22:29,200 --> 01:22:31,600
point of view is that all those little

1903
01:22:31,600 --> 01:22:34,399
individual applications do not have user

1904
01:22:34,399 --> 01:22:36,880
credentials in them

1905
01:22:36,880 --> 01:22:39,600
if someone compromises one of those

1906
01:22:39,600 --> 01:22:41,920
applications its data stores so on and

1907
01:22:41,920 --> 01:22:44,640
so forth they don't get the password

1908
01:22:44,640 --> 01:22:47,600
that we know our users have reused in a

1909
01:22:47,600 --> 01:22:50,399
dozen other systems

1910
01:22:50,399 --> 01:22:52,640
by storing our credentials in one

1911
01:22:52,640 --> 01:22:54,800
central place by authentication

1912
01:22:54,800 --> 01:22:57,680
authenticating in one central place and

1913
01:22:57,680 --> 01:23:00,399
then using these federated methods to

1914
01:23:00,399 --> 01:23:03,040
sign into all our little applications

1915
01:23:03,040 --> 01:23:05,359
we move the responsibility for keeping

1916
01:23:05,359 --> 01:23:08,000
that safe away from them

1917
01:23:08,000 --> 01:23:09,600
the other benefit of this is that it

1918
01:23:09,600 --> 01:23:11,600
makes techniques such as multi-factor

1919
01:23:11,600 --> 01:23:13,840
earth cheaper easier to implement we do

1920
01:23:13,840 --> 01:23:16,160
it in one central place

1921
01:23:16,160 --> 01:23:18,319
and then we don't have to do it again in

1922
01:23:18,319 --> 01:23:20,720
every single application that we build

1923
01:23:20,720 --> 01:23:23,680
something to think about

1924
01:23:24,240 --> 01:23:26,080
when we have this functionality that we

1925
01:23:26,080 --> 01:23:28,640
can sign in in one place and that just

1926
01:23:28,640 --> 01:23:31,040
kind of automatically behind the scenes

1927
01:23:31,040 --> 01:23:33,040
signs us into all our little apps and

1928
01:23:33,040 --> 01:23:34,479
little tools

1929
01:23:34,479 --> 01:23:37,439
that encourages us to split things up

1930
01:23:37,439 --> 01:23:39,760
we're encouraged to think i can build

1931
01:23:39,760 --> 01:23:41,680
this one little tool that does one job

1932
01:23:41,680 --> 01:23:44,240
in one job only and that's not adding a

1933
01:23:44,240 --> 01:23:46,399
huge amount of overhead either in

1934
01:23:46,399 --> 01:23:47,520
development

1935
01:23:47,520 --> 01:23:49,760
or in terms of my user's experience

1936
01:23:49,760 --> 01:23:54,000
having to sign into yet another thing

1937
01:23:54,240 --> 01:23:56,000
and this has a lot of benefits actually

1938
01:23:56,000 --> 01:23:57,840
in terms of security

1939
01:23:57,840 --> 01:24:00,240
when we break applications up and put

1940
01:24:00,240 --> 01:24:02,560
them on a separate domain

1941
01:24:02,560 --> 01:24:04,160
a cross-site scripting floor on that

1942
01:24:04,160 --> 01:24:06,319
domain can't interact with all our other

1943
01:24:06,319 --> 01:24:08,960
applications

1944
01:24:08,960 --> 01:24:11,520
when we break up the backing data stores

1945
01:24:11,520 --> 01:24:12,800
and we say

1946
01:24:12,800 --> 01:24:15,280
okay this application has its own data

1947
01:24:15,280 --> 01:24:17,920
store or even this application has

1948
01:24:17,920 --> 01:24:20,399
access to a shared data store but it's

1949
01:24:20,399 --> 01:24:23,280
limited access

1950
01:24:23,280 --> 01:24:24,960
we can end up with a situation where

1951
01:24:24,960 --> 01:24:28,319
bugs like sql injection have a limited

1952
01:24:28,319 --> 01:24:29,760
level of impact

1953
01:24:29,760 --> 01:24:32,560
and only affect the data of the specific

1954
01:24:32,560 --> 01:24:34,800
application that they occur in

1955
01:24:34,800 --> 01:24:36,160
rather than having one occur in the

1956
01:24:36,160 --> 01:24:38,560
middle of a big monolith

1957
01:24:38,560 --> 01:24:40,640
which probably has access to

1958
01:24:40,640 --> 01:24:43,840
all your data

1959
01:24:43,840 --> 01:24:45,840
when we put in internal limits when we

1960
01:24:45,840 --> 01:24:47,840
say that particular applications can

1961
01:24:47,840 --> 01:24:50,479
only access particular data and follow

1962
01:24:50,479 --> 01:24:52,720
the principle of least privilege we can

1963
01:24:52,720 --> 01:24:54,720
even limit the impact of bugs such as

1964
01:24:54,720 --> 01:24:56,479
remote code execution

1965
01:24:56,479 --> 01:24:58,240
a remote code execution bug is going to

1966
01:24:58,240 --> 01:25:01,040
give the attacker access to everything

1967
01:25:01,040 --> 01:25:03,760
which that application has

1968
01:25:03,760 --> 01:25:05,520
but if that application doesn't have

1969
01:25:05,520 --> 01:25:08,560
access to all your organization's data

1970
01:25:08,560 --> 01:25:10,640
you have an opportunity to ring fence

1971
01:25:10,640 --> 01:25:13,439
that impact and to limit how much is

1972
01:25:13,439 --> 01:25:16,160
compromised

1973
01:25:18,080 --> 01:25:20,160
the next trend i want to talk about

1974
01:25:20,160 --> 01:25:22,080
which is one that i hear a lot of people

1975
01:25:22,080 --> 01:25:24,479
in the industry grumbling about

1976
01:25:24,479 --> 01:25:27,200
is the separation between a front-end

1977
01:25:27,200 --> 01:25:30,080
user interface and a back-end api and in

1978
01:25:30,080 --> 01:25:31,760
particular here

1979
01:25:31,760 --> 01:25:34,080
i'm focusing on the

1980
01:25:34,080 --> 01:25:36,560
big javascript ui frameworks that we're

1981
01:25:36,560 --> 01:25:38,640
seeing a lot of the react framework the

1982
01:25:38,640 --> 01:25:41,600
view framework so and so forth now this

1983
01:25:41,600 --> 01:25:43,840
is the right rise of a pattern

1984
01:25:43,840 --> 01:25:45,840
people call single page applications

1985
01:25:45,840 --> 01:25:46,880
yeah

1986
01:25:46,880 --> 01:25:50,080
instead of having a backend web server

1987
01:25:50,080 --> 01:25:52,160
that generates html pages and we

1988
01:25:52,160 --> 01:25:53,520
interact with them a little bit and then

1989
01:25:53,520 --> 01:25:55,120
ask the server to generate us another

1990
01:25:55,120 --> 01:25:56,240
page

1991
01:25:56,240 --> 01:25:58,640
we have a user interface on the front

1992
01:25:58,640 --> 01:26:01,520
which makes requests to the back end for

1993
01:26:01,520 --> 01:26:03,760
the data that it needs

1994
01:26:03,760 --> 01:26:05,680
and this from my point of view provides

1995
01:26:05,680 --> 01:26:08,640
two very clear benefits

1996
01:26:08,640 --> 01:26:11,520
on the front end

1997
01:26:11,520 --> 01:26:14,399
the types of bugs that we see

1998
01:26:14,399 --> 01:26:16,399
in the rendering process

1999
01:26:16,399 --> 01:26:18,800
are different than if we had that same

2000
01:26:18,800 --> 01:26:19,680
bug

2001
01:26:19,680 --> 01:26:22,640
on a back-end rendering process

2002
01:26:22,640 --> 01:26:24,960
if i have something in the middle of my

2003
01:26:24,960 --> 01:26:27,359
rendering code that accidentally

2004
01:26:27,359 --> 01:26:31,359
executes some javascript

2005
01:26:31,359 --> 01:26:34,479
if i do that inside a back end node.js

2006
01:26:34,479 --> 01:26:35,920
application whatever

2007
01:26:35,920 --> 01:26:39,040
then that's remote code execution

2008
01:26:39,040 --> 01:26:41,760
if i do that inside a front-end in the

2009
01:26:41,760 --> 01:26:44,080
user's web browser

2010
01:26:44,080 --> 01:26:46,720
that's called cross-site scripting

2011
01:26:46,720 --> 01:26:48,960
and the difference between those two

2012
01:26:48,960 --> 01:26:50,720
things is that if i execute arbitrary

2013
01:26:50,720 --> 01:26:52,720
code on the server it can access

2014
01:26:52,720 --> 01:26:55,600
everything belonging to all users

2015
01:26:55,600 --> 01:26:57,439
if i run arbitrary code in the user's

2016
01:26:57,439 --> 01:27:00,720
web browser it impacts that user or

2017
01:27:00,720 --> 01:27:02,960
those users targeted by that particular

2018
01:27:02,960 --> 01:27:04,800
bug

2019
01:27:04,800 --> 01:27:07,439
so again we've limited the impact

2020
01:27:07,439 --> 01:27:09,359
then there are bugs that don't have a

2021
01:27:09,359 --> 01:27:11,280
clear corresponding

2022
01:27:11,280 --> 01:27:13,120
version on the front end the sql

2023
01:27:13,120 --> 01:27:15,040
injection so and so forth

2024
01:27:15,040 --> 01:27:19,280
so what that gives us is those types of

2025
01:27:19,280 --> 01:27:22,560
bugs now exist within a defined place

2026
01:27:22,560 --> 01:27:24,479
we know that they're not going to exist

2027
01:27:24,479 --> 01:27:26,560
in that front end and we don't have to

2028
01:27:26,560 --> 01:27:29,840
worry about that awful sql query sitting

2029
01:27:29,840 --> 01:27:33,439
in the middle of our rendering code

2030
01:27:33,920 --> 01:27:36,080
on the back end this also buys us some

2031
01:27:36,080 --> 01:27:38,240
significant gains

2032
01:27:38,240 --> 01:27:40,640
we tend with these applications to see a

2033
01:27:40,640 --> 01:27:42,560
really simple pattern

2034
01:27:42,560 --> 01:27:45,200
of ask the back end a question get a

2035
01:27:45,200 --> 01:27:46,560
response

2036
01:27:46,560 --> 01:27:48,720
please give me the list of library books

2037
01:27:48,720 --> 01:27:50,319
i have out

2038
01:27:50,319 --> 01:27:52,319
back it comes with a response saying

2039
01:27:52,319 --> 01:27:54,160
here's the list in a computer readable

2040
01:27:54,160 --> 01:27:56,319
format

2041
01:27:56,319 --> 01:27:57,200
so

2042
01:27:57,200 --> 01:28:00,640
that simple request response pattern

2043
01:28:00,640 --> 01:28:01,760
buys us

2044
01:28:01,760 --> 01:28:04,479
a very easy process of reasoning about

2045
01:28:04,479 --> 01:28:06,560
access controls

2046
01:28:06,560 --> 01:28:08,880
you don't have to go well

2047
01:28:08,880 --> 01:28:10,960
on this particular view

2048
01:28:10,960 --> 01:28:13,840
in the middle of the page it fetches

2049
01:28:13,840 --> 01:28:17,200
this associated record and you know we

2050
01:28:17,200 --> 01:28:19,040
might need to check when the user first

2051
01:28:19,040 --> 01:28:21,120
makes a request whether they have access

2052
01:28:21,120 --> 01:28:22,399
to that

2053
01:28:22,399 --> 01:28:24,160
we have a tend to have a very direct

2054
01:28:24,160 --> 01:28:27,040
pattern of request something and the

2055
01:28:27,040 --> 01:28:28,720
backing can decide whether or not we're

2056
01:28:28,720 --> 01:28:31,680
allowed to have that

2057
01:28:32,000 --> 01:28:33,760
this ties in very well with single

2058
01:28:33,760 --> 01:28:34,320
sign-on

2059
01:28:34,320 --> 01:28:35,840
[Music]

2060
01:28:35,840 --> 01:28:38,080
particularly with oidc and protocols

2061
01:28:38,080 --> 01:28:40,560
like that because a single user

2062
01:28:40,560 --> 01:28:42,960
interface can have multiple backends

2063
01:28:42,960 --> 01:28:46,240
a single user interface can connect to

2064
01:28:46,240 --> 01:28:49,200
two three four different apis

2065
01:28:49,200 --> 01:28:51,680
each of which sits in one of these ring

2066
01:28:51,680 --> 01:28:54,080
fenced if there's a bug the impact is

2067
01:28:54,080 --> 01:28:55,200
limited

2068
01:28:55,200 --> 01:28:57,200
context

2069
01:28:57,200 --> 01:28:58,640
and we can just have our front end

2070
01:28:58,640 --> 01:29:00,880
application have a different access

2071
01:29:00,880 --> 01:29:02,560
token for each of those

2072
01:29:02,560 --> 01:29:05,200
obtained through sso

2073
01:29:05,200 --> 01:29:06,399
now

2074
01:29:06,399 --> 01:29:09,120
in this particular area i really do feel

2075
01:29:09,120 --> 01:29:11,359
that we in the security industry have

2076
01:29:11,359 --> 01:29:12,790
tended to um

2077
01:29:12,790 --> 01:29:14,000
[Music]

2078
01:29:14,000 --> 01:29:16,319
fall behind a little bit

2079
01:29:16,319 --> 01:29:18,560
and a lot of the standard advice we give

2080
01:29:18,560 --> 01:29:20,560
may be out of date in the context of

2081
01:29:20,560 --> 01:29:23,600
these applications the next time

2082
01:29:23,600 --> 01:29:25,359
if you're a tester like me that you

2083
01:29:25,359 --> 01:29:27,520
write a report that says

2084
01:29:27,520 --> 01:29:31,040
your cookies should be http only

2085
01:29:31,040 --> 01:29:33,280
or the next time you write a report that

2086
01:29:33,280 --> 01:29:34,399
says

2087
01:29:34,399 --> 01:29:36,960
storing access tokens in

2088
01:29:36,960 --> 01:29:38,880
the browser's local storage session

2089
01:29:38,880 --> 01:29:40,960
storage whatever is evil and you must

2090
01:29:40,960 --> 01:29:42,800
not do it

2091
01:29:42,800 --> 01:29:44,640
think about whether the developer has

2092
01:29:44,640 --> 01:29:46,800
actually made a decision to build their

2093
01:29:46,800 --> 01:29:48,880
application in this way because if

2094
01:29:48,880 --> 01:29:50,399
they've made a decision

2095
01:29:50,399 --> 01:29:52,560
to build their application in this way

2096
01:29:52,560 --> 01:29:56,160
with all the trade-offs that it entails

2097
01:29:56,160 --> 01:29:57,520
they could well have decided that

2098
01:29:57,520 --> 01:29:59,439
actually that's worthwhile and actually

2099
01:29:59,439 --> 01:30:01,120
in the context of their application

2100
01:30:01,120 --> 01:30:02,720
they're gaining a lot more than they're

2101
01:30:02,720 --> 01:30:05,720
losing

2102
01:30:06,880 --> 01:30:09,680
complementing this trend when we have a

2103
01:30:09,680 --> 01:30:11,600
whole lot of these little services

2104
01:30:11,600 --> 01:30:14,640
little apis so and so forth to deploy

2105
01:30:14,640 --> 01:30:16,960
we need a way of deploying them

2106
01:30:16,960 --> 01:30:18,880
which doesn't cost the earth which

2107
01:30:18,880 --> 01:30:21,280
doesn't create huge problems for us in

2108
01:30:21,280 --> 01:30:23,200
terms of management

2109
01:30:23,200 --> 01:30:25,120
so we're seeing this rise in

2110
01:30:25,120 --> 01:30:27,040
containerization

2111
01:30:27,040 --> 01:30:28,479
there are a bunch of frameworks that you

2112
01:30:28,479 --> 01:30:30,560
might use for containerization maybe you

2113
01:30:30,560 --> 01:30:32,399
build things on docker maybe you deploy

2114
01:30:32,399 --> 01:30:34,560
things through kubernetes so on and so

2115
01:30:34,560 --> 01:30:35,439
forth

2116
01:30:35,439 --> 01:30:36,240
but

2117
01:30:36,240 --> 01:30:38,640
from my point of view the main thing

2118
01:30:38,640 --> 01:30:41,920
that these buy us is a separation of

2119
01:30:41,920 --> 01:30:43,840
responsibilities the ability to take

2120
01:30:43,840 --> 01:30:46,240
each service bundle it up and give it

2121
01:30:46,240 --> 01:30:48,319
limited access to the things that it

2122
01:30:48,319 --> 01:30:50,319
needs

2123
01:30:50,319 --> 01:30:52,080
now

2124
01:30:52,080 --> 01:30:53,760
you'll hear a lot of things thrown about

2125
01:30:53,760 --> 01:30:56,800
the industry along the lines of the

2126
01:30:56,800 --> 01:30:59,280
container is not a security boundary i

2127
01:30:59,280 --> 01:31:00,720
don't know how many times i've heard

2128
01:31:00,720 --> 01:31:01,760
that

2129
01:31:01,760 --> 01:31:03,680
but the reality is

2130
01:31:03,680 --> 01:31:07,040
that it's not real it's not true

2131
01:31:07,040 --> 01:31:09,520
attackers who breach an application

2132
01:31:09,520 --> 01:31:12,000
running in a container are not breaking

2133
01:31:12,000 --> 01:31:14,240
out of your containers using zero-day

2134
01:31:14,240 --> 01:31:16,479
kernel vulnerabilities

2135
01:31:16,479 --> 01:31:18,640
if someone breaches an application that

2136
01:31:18,640 --> 01:31:20,560
you have running in a container they're

2137
01:31:20,560 --> 01:31:22,800
hoovering up all of the credentials that

2138
01:31:22,800 --> 01:31:24,479
you fed to the container they're

2139
01:31:24,479 --> 01:31:27,359
potentially using any privileged network

2140
01:31:27,359 --> 01:31:29,920
access that your container has just by

2141
01:31:29,920 --> 01:31:33,120
virtue of being in that position

2142
01:31:33,120 --> 01:31:35,200
they're not breaking out of these

2143
01:31:35,200 --> 01:31:36,479
containers

2144
01:31:36,479 --> 01:31:38,800
most of the time in ways that you need

2145
01:31:38,800 --> 01:31:41,600
to worry about so yes the container is a

2146
01:31:41,600 --> 01:31:44,160
security boundary the container is a

2147
01:31:44,160 --> 01:31:46,319
defined unit that you feed only the

2148
01:31:46,319 --> 01:31:48,800
credentials that it needs to that only

2149
01:31:48,800 --> 01:31:50,800
has access to the files and resources

2150
01:31:50,800 --> 01:31:52,640
that it needs and that provides you

2151
01:31:52,640 --> 01:31:54,640
again with a way of limiting the impact

2152
01:31:54,640 --> 01:31:57,840
of a flaw should one occur

2153
01:32:01,120 --> 01:32:04,240
the next area that i want to get into

2154
01:32:04,240 --> 01:32:06,720
and again this is something which people

2155
01:32:06,720 --> 01:32:08,720
are likely to find fairly you know

2156
01:32:08,720 --> 01:32:10,880
fairly controversial fairly disturbing

2157
01:32:10,880 --> 01:32:12,560
in some cases

2158
01:32:12,560 --> 01:32:15,760
i'm a big promoter of using relying on

2159
01:32:15,760 --> 01:32:17,760
cloud services

2160
01:32:17,760 --> 01:32:19,760
and i'm not just talking about deploying

2161
01:32:19,760 --> 01:32:22,160
a vm on ec2

2162
01:32:22,160 --> 01:32:24,960
i'm talking about using a managed

2163
01:32:24,960 --> 01:32:27,359
service which your cloud provider has

2164
01:32:27,359 --> 01:32:28,640
built for you

2165
01:32:28,640 --> 01:32:31,120
whether that's a managed database

2166
01:32:31,120 --> 01:32:33,280
service whether that's a managed logging

2167
01:32:33,280 --> 01:32:35,840
or managed queue service

2168
01:32:35,840 --> 01:32:36,640
and

2169
01:32:36,640 --> 01:32:38,960
the reason that i'm that i promote this

2170
01:32:38,960 --> 01:32:40,319
is not

2171
01:32:40,319 --> 01:32:42,080
that

2172
01:32:42,080 --> 01:32:44,240
these are perfect obviously they have

2173
01:32:44,240 --> 01:32:46,880
flaws there's a big trade-off to be made

2174
01:32:46,880 --> 01:32:49,040
every time you deploy something on a

2175
01:32:49,040 --> 01:32:51,040
managed service you lose a degree of

2176
01:32:51,040 --> 01:32:52,560
control over it

2177
01:32:52,560 --> 01:32:54,319
and that's indisputable you lose a

2178
01:32:54,319 --> 01:32:56,319
degree of control over that service

2179
01:32:56,319 --> 01:32:57,280
because

2180
01:32:57,280 --> 01:32:59,359
something there now belongs to your

2181
01:32:59,359 --> 01:33:01,359
cloud provider

2182
01:33:01,359 --> 01:33:03,359
but

2183
01:33:03,359 --> 01:33:05,520
at the end of the day

2184
01:33:05,520 --> 01:33:07,600
it's my view that

2185
01:33:07,600 --> 01:33:09,680
development shops and companies that are

2186
01:33:09,680 --> 01:33:11,920
building and deploying tools

2187
01:33:11,920 --> 01:33:14,960
have always been really bad

2188
01:33:14,960 --> 01:33:17,280
on on average typically

2189
01:33:17,280 --> 01:33:19,680
at maintaining servers and maintaining

2190
01:33:19,680 --> 01:33:22,000
environments and doing the operations

2191
01:33:22,000 --> 01:33:24,880
side of things

2192
01:33:24,960 --> 01:33:26,319
back when i

2193
01:33:26,319 --> 01:33:28,720
you know built rails applications i was

2194
01:33:28,720 --> 01:33:32,080
a huge advocate of we are not experts in

2195
01:33:32,080 --> 01:33:35,439
deploying things in keeping servers up

2196
01:33:35,439 --> 01:33:37,439
to date we don't have sys admins

2197
01:33:37,439 --> 01:33:38,960
in-house

2198
01:33:38,960 --> 01:33:40,720
so we should be outsourcing this to

2199
01:33:40,720 --> 01:33:42,720
someone who has that experience who has

2200
01:33:42,720 --> 01:33:45,359
that expertise and to me what this comes

2201
01:33:45,359 --> 01:33:46,720
down to

2202
01:33:46,720 --> 01:33:48,240
is

2203
01:33:48,240 --> 01:33:50,319
would you rather that your security

2204
01:33:50,319 --> 01:33:52,479
standards were set by

2205
01:33:52,479 --> 01:33:55,280
a small development group

2206
01:33:55,280 --> 01:33:56,080
or

2207
01:33:56,080 --> 01:33:57,760
would you rather that your security

2208
01:33:57,760 --> 01:34:00,080
standards were set by darren bilby who

2209
01:34:00,080 --> 01:34:03,359
just talked before me

2210
01:34:03,359 --> 01:34:04,479
yeah

2211
01:34:04,479 --> 01:34:07,840
so when you farm out these activities to

2212
01:34:07,840 --> 01:34:10,560
a cloud provider using managed services

2213
01:34:10,560 --> 01:34:13,280
it's easier to meet a baseline standard

2214
01:34:13,280 --> 01:34:15,280
your servers are up to date or you don't

2215
01:34:15,280 --> 01:34:17,760
have to worry about updating servers

2216
01:34:17,760 --> 01:34:19,840
yeah your software

2217
01:34:19,840 --> 01:34:21,920
except for your own dependencies that

2218
01:34:21,920 --> 01:34:23,760
you include in your app

2219
01:34:23,760 --> 01:34:25,439
are being kept up to date there's not

2220
01:34:25,439 --> 01:34:27,680
going to be an out of date load balancer

2221
01:34:27,680 --> 01:34:29,920
sitting on the front that someone can

2222
01:34:29,920 --> 01:34:32,000
you know read memory from through an

2223
01:34:32,000 --> 01:34:34,560
overflow

2224
01:34:35,920 --> 01:34:38,800
and yes there are costs to this

2225
01:34:38,800 --> 01:34:40,800
this is a one of many things that

2226
01:34:40,800 --> 01:34:42,960
increases supply chain complexity and

2227
01:34:42,960 --> 01:34:44,880
control

2228
01:34:44,880 --> 01:34:46,640
but it's being handled by someone who's

2229
01:34:46,640 --> 01:34:50,080
probably doing a better job of it

2230
01:34:51,920 --> 01:34:54,479
it's also the case i feel

2231
01:34:54,479 --> 01:34:56,399
that the tools that developers have

2232
01:34:56,399 --> 01:34:58,800
available to them have gotten a lot

2233
01:34:58,800 --> 01:35:00,800
better over these years

2234
01:35:00,800 --> 01:35:03,280
as i said seven years ago i transitioned

2235
01:35:03,280 --> 01:35:06,000
from being a ruby on rails developer

2236
01:35:06,000 --> 01:35:09,040
into security testing

2237
01:35:09,040 --> 01:35:10,240
now

2238
01:35:10,240 --> 01:35:12,240
back when i was building rails apps

2239
01:35:12,240 --> 01:35:14,720
there was this amazing tool

2240
01:35:14,720 --> 01:35:16,800
that came out called breakman

2241
01:35:16,800 --> 01:35:19,439
and anyone who's used it

2242
01:35:19,439 --> 01:35:21,600
will be familiar the idea is you take

2243
01:35:21,600 --> 01:35:24,479
this tool you run it over your rails app

2244
01:35:24,479 --> 01:35:26,640
it knows all the common things that

2245
01:35:26,640 --> 01:35:29,520
people get wrong that people stuff up

2246
01:35:29,520 --> 01:35:31,200
how to how you introduce cross-site

2247
01:35:31,200 --> 01:35:32,720
scripting how you introduce sql

2248
01:35:32,720 --> 01:35:34,800
injection so on and so forth

2249
01:35:34,800 --> 01:35:36,479
and it picks all of those up and puts

2250
01:35:36,479 --> 01:35:38,960
them in a report which you then at least

2251
01:35:38,960 --> 01:35:40,479
have an opportunity

2252
01:35:40,479 --> 01:35:41,760
to act on

2253
01:35:41,760 --> 01:35:44,800
not the people always do

2254
01:35:44,800 --> 01:35:45,600
now

2255
01:35:45,600 --> 01:35:47,840
that same sort of tool

2256
01:35:47,840 --> 01:35:51,280
is now available in every major language

2257
01:35:51,280 --> 01:35:53,680
and framework that you will use for web

2258
01:35:53,680 --> 01:35:55,600
development

2259
01:35:55,600 --> 01:35:57,840
there are tools for anything you might

2260
01:35:57,840 --> 01:35:59,920
be working in unless you're working in

2261
01:35:59,920 --> 01:36:02,640
something extremely strange

2262
01:36:02,640 --> 01:36:04,720
that will be able to scan your code and

2263
01:36:04,720 --> 01:36:06,479
give you a good idea about whether

2264
01:36:06,479 --> 01:36:08,960
you're falling into common pitfalls no

2265
01:36:08,960 --> 01:36:10,720
this is not perfect no this will not

2266
01:36:10,720 --> 01:36:12,720
pick up the exotic cases but it will

2267
01:36:12,720 --> 01:36:14,960
pick up the most basic cases and

2268
01:36:14,960 --> 01:36:16,319
importantly

2269
01:36:16,319 --> 01:36:19,040
it will pick up the most basic cases

2270
01:36:19,040 --> 01:36:21,359
immediately as you are building the

2271
01:36:21,359 --> 01:36:22,399
software

2272
01:36:22,399 --> 01:36:25,439
as part of your ci cd pipeline which

2273
01:36:25,439 --> 01:36:27,280
provides an opportunity to close the

2274
01:36:27,280 --> 01:36:29,439
loop and teach your developers about the

2275
01:36:29,439 --> 01:36:31,200
things which they should be doing to

2276
01:36:31,200 --> 01:36:33,520
prevent these bugs

2277
01:36:33,520 --> 01:36:35,040
instead of

2278
01:36:35,040 --> 01:36:37,040
building some software

2279
01:36:37,040 --> 01:36:40,080
doing a you know twice a year security

2280
01:36:40,080 --> 01:36:42,240
review and getting back a big report

2281
01:36:42,240 --> 01:36:44,399
full of findings and then going through

2282
01:36:44,399 --> 01:36:46,240
and fixing them

2283
01:36:46,240 --> 01:36:48,080
often those bugs in a development

2284
01:36:48,080 --> 01:36:50,240
workflow with one of these tools will

2285
01:36:50,240 --> 01:36:51,920
come straight back to the person who

2286
01:36:51,920 --> 01:36:53,680
built it so they learn from the

2287
01:36:53,680 --> 01:36:57,200
experience and don't do it again

2288
01:36:58,319 --> 01:36:59,920
another tool that's really helpful for

2289
01:36:59,920 --> 01:37:02,640
us is software component analysis

2290
01:37:02,640 --> 01:37:05,520
you run a tool over your project and it

2291
01:37:05,520 --> 01:37:07,840
tells you all of the dependencies you're

2292
01:37:07,840 --> 01:37:10,080
importing and all of your dependencies

2293
01:37:10,080 --> 01:37:11,280
dependencies and all of your

2294
01:37:11,280 --> 01:37:15,040
dependencies dependencies dependencies

2295
01:37:15,120 --> 01:37:18,640
and what this buys us is the ability to

2296
01:37:18,640 --> 01:37:20,160
monitor that

2297
01:37:20,160 --> 01:37:22,640
and the ability to be told when a

2298
01:37:22,640 --> 01:37:25,280
vulnerability is published in any of

2299
01:37:25,280 --> 01:37:27,359
those dependencies recursively through

2300
01:37:27,359 --> 01:37:29,520
the whole thing

2301
01:37:29,520 --> 01:37:31,359
many of those may not result in a

2302
01:37:31,359 --> 01:37:33,840
vulnerability in our application but it

2303
01:37:33,840 --> 01:37:36,720
gives us an opportunity to understand

2304
01:37:36,720 --> 01:37:38,880
how many bugs we are importing in our

2305
01:37:38,880 --> 01:37:41,439
code and an opportunity to investigate

2306
01:37:41,439 --> 01:37:44,880
whether those are causing a problem

2307
01:37:45,120 --> 01:37:47,920
now i do have a slight confession to

2308
01:37:47,920 --> 01:37:50,640
make here which is that compared to

2309
01:37:50,640 --> 01:37:53,359
seven years ago applications now do have

2310
01:37:53,359 --> 01:37:56,160
a lot more dependencies

2311
01:37:56,160 --> 01:37:58,160
so in part this is just helping us

2312
01:37:58,160 --> 01:38:01,280
manage and control that growth it may

2313
01:38:01,280 --> 01:38:03,600
not be it may not represent a net

2314
01:38:03,600 --> 01:38:05,680
improvement

2315
01:38:05,680 --> 01:38:07,040
but

2316
01:38:07,040 --> 01:38:09,040
it's still a useful tool in the arsenal

2317
01:38:09,040 --> 01:38:11,600
that helps us to avoid sitting around

2318
01:38:11,600 --> 01:38:13,200
with something which has been vulnerable

2319
01:38:13,200 --> 01:38:16,399
for the last 15 years

2320
01:38:16,399 --> 01:38:18,080
and

2321
01:38:18,080 --> 01:38:20,240
once we start getting into this process

2322
01:38:20,240 --> 01:38:23,520
of automating the search for flaws

2323
01:38:23,520 --> 01:38:25,520
we can even create our own custom rules

2324
01:38:25,520 --> 01:38:28,640
we can set our own standards

2325
01:38:28,640 --> 01:38:30,399
and say

2326
01:38:30,399 --> 01:38:32,640
have the build process tell me when

2327
01:38:32,640 --> 01:38:34,640
someone writes a database query that

2328
01:38:34,640 --> 01:38:37,359
doesn't look like this

2329
01:38:37,359 --> 01:38:38,720
and for those of you who'll be out there

2330
01:38:38,720 --> 01:38:39,760
i'm going to talk a little bit more

2331
01:38:39,760 --> 01:38:41,920
about this custom rule thing up at oauth

2332
01:38:41,920 --> 01:38:44,399
new zealand day next week

2333
01:38:44,399 --> 01:38:46,479
so this gives us an opportunity to find

2334
01:38:46,479 --> 01:38:48,640
bugs before they go out learn from those

2335
01:38:48,640 --> 01:38:51,120
mistakes and in general drive an

2336
01:38:51,120 --> 01:38:53,280
improvement in our software development

2337
01:38:53,280 --> 01:38:56,280
process

2338
01:38:56,560 --> 01:38:57,760
overall

2339
01:38:57,760 --> 01:38:59,920
i feel that the combination of these

2340
01:38:59,920 --> 01:39:01,120
trends

2341
01:39:01,120 --> 01:39:03,040
however you feel about any individual

2342
01:39:03,040 --> 01:39:05,120
one

2343
01:39:05,120 --> 01:39:07,120
have improved the security of the

2344
01:39:07,120 --> 01:39:09,280
typical web application

2345
01:39:09,280 --> 01:39:11,359
there will always be that terrible

2346
01:39:11,359 --> 01:39:13,600
application that you can play bug bingo

2347
01:39:13,600 --> 01:39:15,359
with

2348
01:39:15,359 --> 01:39:17,120
there will always be

2349
01:39:17,120 --> 01:39:20,160
an application built in any language or

2350
01:39:20,160 --> 01:39:22,479
framework that was done so meticulously

2351
01:39:22,479 --> 01:39:24,960
that it contains very little flaw

2352
01:39:24,960 --> 01:39:26,319
yeah

2353
01:39:26,319 --> 01:39:29,040
but the typical web application

2354
01:39:29,040 --> 01:39:30,800
the typical

2355
01:39:30,800 --> 01:39:33,280
web development team is able to produce

2356
01:39:33,280 --> 01:39:36,000
things to a higher standard because of

2357
01:39:36,000 --> 01:39:39,840
these trends they have adopted

2358
01:39:40,880 --> 01:39:42,160
and

2359
01:39:42,160 --> 01:39:46,319
as security professionals as testers

2360
01:39:46,319 --> 01:39:48,479
i really want people to take a step back

2361
01:39:48,479 --> 01:39:50,880
sometimes and think about the role that

2362
01:39:50,880 --> 01:39:52,880
we play in these things

2363
01:39:52,880 --> 01:39:56,000
it is not always our choice

2364
01:39:56,000 --> 01:39:58,240
what technologies our customers decide

2365
01:39:58,240 --> 01:39:59,680
to use

2366
01:39:59,680 --> 01:40:02,399
it is not always our choice

2367
01:40:02,399 --> 01:40:04,640
how our customers decide to structure

2368
01:40:04,640 --> 01:40:07,120
their applications

2369
01:40:07,120 --> 01:40:09,040
we don't get to make the developers

2370
01:40:09,040 --> 01:40:11,520
decisions for them

2371
01:40:11,520 --> 01:40:13,760
and whenever you encounter a set of

2372
01:40:13,760 --> 01:40:15,680
decisions that a development team have

2373
01:40:15,680 --> 01:40:17,600
made

2374
01:40:17,600 --> 01:40:20,399
please assume in the first instance that

2375
01:40:20,399 --> 01:40:23,840
those decisions were made for a reason

2376
01:40:23,840 --> 01:40:25,680
the typical developer

2377
01:40:25,680 --> 01:40:28,000
working today is not a fool when it

2378
01:40:28,000 --> 01:40:30,479
comes to security

2379
01:40:30,479 --> 01:40:32,640
they're making they are making trade-off

2380
01:40:32,640 --> 01:40:35,359
decisions they know what the things they

2381
01:40:35,359 --> 01:40:37,600
are doing accomplish

2382
01:40:37,600 --> 01:40:39,680
and some of the things that we tend to

2383
01:40:39,680 --> 01:40:41,200
call out

2384
01:40:41,200 --> 01:40:42,800
may not make sense anymore in the

2385
01:40:42,800 --> 01:40:44,960
current context

2386
01:40:44,960 --> 01:40:47,120
so yeah please be aware put things in

2387
01:40:47,120 --> 01:40:49,930
context thank you for coming to my talk

2388
01:40:49,930 --> 01:40:59,439
[Applause]

2389
01:40:59,439 --> 01:41:01,439
thanks very much tim right we are going

2390
01:41:01,439 --> 01:41:03,439
to go out to morning break a couple of

2391
01:41:03,439 --> 01:41:05,279
brief items of a minute trivia before

2392
01:41:05,279 --> 01:41:07,520
that uh if this is your first time

2393
01:41:07,520 --> 01:41:09,920
socializing in the last three years take

2394
01:41:09,920 --> 01:41:11,680
it take it slow take it easy like not

2395
01:41:11,680 --> 01:41:13,520
everyone is ready for the full bear hug

2396
01:41:13,520 --> 01:41:15,040
of i haven't seen you for three years

2397
01:41:15,040 --> 01:41:16,399
some people are shaking hands some

2398
01:41:16,399 --> 01:41:17,600
people are doing this some people are

2399
01:41:17,600 --> 01:41:19,600
you know solid

2400
01:41:19,600 --> 01:41:20,960
ask first

2401
01:41:20,960 --> 01:41:22,479
get consent from people before you touch

2402
01:41:22,479 --> 01:41:23,920
something we shouldn't have to say this

2403
01:41:23,920 --> 01:41:26,000
right but you know we stopped that um

2404
01:41:26,000 --> 01:41:27,920
but yeah go forth if you need a cup of

2405
01:41:27,920 --> 01:41:29,520
coffee if you want to snack some fruit

2406
01:41:29,520 --> 01:41:31,279
trucks have rolled up ajika ander sukha

2407
01:41:31,279 --> 01:41:34,319
makanandari indonesia to syria de luar

2408
01:41:34,319 --> 01:41:35,439
there's indonesian food available

2409
01:41:35,439 --> 01:41:37,840
outside if you need it um so

2410
01:41:37,840 --> 01:41:38,880
we're going to follow the schedule we're

2411
01:41:38,880 --> 01:41:40,960
going to shorten this break by 15 so we

2412
01:41:40,960 --> 01:41:43,920
come back per the schedule at 11 15. 15

2413
01:41:43,920 --> 01:41:45,520
whereupon you will have dylan and

2414
01:41:45,520 --> 01:41:47,520
frenchie

2415
01:41:47,520 --> 01:41:48,880
who knows what those cats have been up

2416
01:41:48,880 --> 01:41:50,240
to there's that's just crazy times

2417
01:41:50,240 --> 01:41:52,240
anyway go forth uh get coffee and we'll

2418
01:41:52,240 --> 01:41:55,639
see you in a bit

2419
02:23:04,590 --> 02:23:09,200
[Applause]

2420
02:23:09,200 --> 02:23:11,120
all right welcome back

2421
02:23:11,120 --> 02:23:13,760
uh it's actually really heartening how

2422
02:23:13,760 --> 02:23:16,000
little drama it has been running an

2423
02:23:16,000 --> 02:23:17,520
event in this in the circumstance i

2424
02:23:17,520 --> 02:23:19,040
think organizers have drama but in terms

2425
02:23:19,040 --> 02:23:21,200
of you know you're sorting out your

2426
02:23:21,200 --> 02:23:23,200
vaccine passes wearing your masks uh

2427
02:23:23,200 --> 02:23:25,439
making us have some degree of faith that

2428
02:23:25,439 --> 02:23:27,600
perhaps humanity has a hope of surviving

2429
02:23:27,600 --> 02:23:28,479
like

2430
02:23:28,479 --> 02:23:30,080
so i'm very appreciative of that thank

2431
02:23:30,080 --> 02:23:31,840
you very much uh please do continue to

2432
02:23:31,840 --> 02:23:33,439
wear your masks in the venue unless

2433
02:23:33,439 --> 02:23:36,239
you're speaking uh and uh thank you for

2434
02:23:36,239 --> 02:23:38,000
your cooperation now

2435
02:23:38,000 --> 02:23:41,920
our next speakers uh mr dylan mr franchi

2436
02:23:41,920 --> 02:23:43,040
those of you who've seen frenchie

2437
02:23:43,040 --> 02:23:45,120
content before will know that this is

2438
02:23:45,120 --> 02:23:46,399
it's pretty it's pretty low quality

2439
02:23:46,399 --> 02:23:48,640
content uh like bottom of the gravity

2440
02:23:48,640 --> 02:23:51,760
well kind of low quality content but

2441
02:23:51,760 --> 02:23:53,760
you know our community we have to

2442
02:23:53,760 --> 02:23:55,520
embrace all sorts of people we have to

2443
02:23:55,520 --> 02:23:56,560
embrace

2444
02:23:56,560 --> 02:23:58,880
cost players

2445
02:23:58,880 --> 02:24:01,040
and we have to embrace

2446
02:24:01,040 --> 02:24:03,050
dylan and frenchie

2447
02:24:03,050 --> 02:24:08,289
[Applause]

2448
02:24:17,760 --> 02:24:19,120
in australia

2449
02:24:19,120 --> 02:24:20,319
um

2450
02:24:20,319 --> 02:24:21,760
so some of you might be wondering right

2451
02:24:21,760 --> 02:24:24,080
now why i'm dressed up as harry potter i

2452
02:24:24,080 --> 02:24:26,319
certainly am um as you notice there's

2453
02:24:26,319 --> 02:24:28,479
dylan and frenchy the chamber of secrets

2454
02:24:28,479 --> 02:24:29,680
this was a talk that we submitted a

2455
02:24:29,680 --> 02:24:31,279
while back uh under the guise of like

2456
02:24:31,279 --> 02:24:32,399
hey let's do a chat on secrets

2457
02:24:32,399 --> 02:24:34,399
management and i replied to dylan saying

2458
02:24:34,399 --> 02:24:35,760
like yeah sure as long as we call it

2459
02:24:35,760 --> 02:24:37,520
dylan frenchy and the chamber of secrets

2460
02:24:37,520 --> 02:24:39,680
and we do it in harry potter cosplay

2461
02:24:39,680 --> 02:24:42,800
at the time dylan was off in the u.s

2462
02:24:42,800 --> 02:24:44,960
and so the agreement was

2463
02:24:44,960 --> 02:24:46,560
that i would sticky tape an ipad to the

2464
02:24:46,560 --> 02:24:48,319
back of my head and he would be

2465
02:24:48,319 --> 02:24:50,880
voldemort

2466
02:24:52,239 --> 02:24:53,040
so

2467
02:24:53,040 --> 02:24:55,120
much to my dismay at some point i will

2468
02:24:55,120 --> 02:24:56,800
need audience participation for someone

2469
02:24:56,800 --> 02:24:58,399
to come up on stage and

2470
02:24:58,399 --> 02:24:59,920
sticky tape an ipad to the back of my

2471
02:24:59,920 --> 02:25:01,200
head

2472
02:25:01,200 --> 02:25:03,359
um before we jump in a first disclaimer

2473
02:25:03,359 --> 02:25:05,040
uh the views in this talk are not those

2474
02:25:05,040 --> 02:25:08,080
of jk rowling um jk rowling has some

2475
02:25:08,080 --> 02:25:09,680
perspectives that can only be described

2476
02:25:09,680 --> 02:25:12,800
as a dumpster fire um so yeah uh none of

2477
02:25:12,800 --> 02:25:14,960
that rubbish will be in this hook um so

2478
02:25:14,960 --> 02:25:17,120
who am i uh i'm frenchie i was once

2479
02:25:17,120 --> 02:25:19,040
described by my mum as a previous kiwi

2480
02:25:19,040 --> 02:25:21,600
slash kaw icon uh presenter besides

2481
02:25:21,600 --> 02:25:23,279
presenter google container security uh

2482
02:25:23,279 --> 02:25:25,439
summit presenter uh featuring as paper

2483
02:25:25,439 --> 02:25:27,600
mache self-driving car number one um but

2484
02:25:27,600 --> 02:25:29,120
i've also rambled about kubernetes

2485
02:25:29,120 --> 02:25:30,880
security uh i've been a pentester in the

2486
02:25:30,880 --> 02:25:33,120
past uh i talk on cloud cluster

2487
02:25:33,120 --> 02:25:34,960
container anything starting with the

2488
02:25:34,960 --> 02:25:37,279
city uh security um uh both as an

2489
02:25:37,279 --> 02:25:39,520
engineer and despite appearances in in

2490
02:25:39,520 --> 02:25:41,279
various leadership roles uh to the

2491
02:25:41,279 --> 02:25:42,800
surprise of everyone involved uh the

2492
02:25:42,800 --> 02:25:44,160
crew have let me back on the premises

2493
02:25:44,160 --> 02:25:46,160
this year and i'm delighted to be here

2494
02:25:46,160 --> 02:25:48,720
my co-presenter is dylan uh so dylan is

2495
02:25:48,720 --> 02:25:50,479
a former security engineer at netflix so

2496
02:25:50,479 --> 02:25:51,920
he's a def con and black hat speaker and

2497
02:25:51,920 --> 02:25:53,680
bug hunter he's author of a tool called

2498
02:25:53,680 --> 02:25:54,880
truffle hog which we'll talk a little

2499
02:25:54,880 --> 02:25:56,960
bit about today um he's also a founder

2500
02:25:56,960 --> 02:25:58,560
of a company called truffle security uh

2501
02:25:58,560 --> 02:25:59,600
tragically he could not make it

2502
02:25:59,600 --> 02:26:01,920
obviously because of covid uh but um

2503
02:26:01,920 --> 02:26:02,640
yeah

2504
02:26:02,640 --> 02:26:06,080
we've got some backup plans

2505
02:26:06,720 --> 02:26:09,040
friendship

2506
02:26:09,040 --> 02:26:11,359
what friendship

2507
02:26:11,359 --> 02:26:13,920
who's that what

2508
02:26:13,920 --> 02:26:16,960
oh it's peter dutton

2509
02:26:17,520 --> 02:26:19,600
the frenchy who lived

2510
02:26:19,600 --> 02:26:21,600
come to die

2511
02:26:21,600 --> 02:26:24,840
of academia

2512
02:26:25,890 --> 02:26:32,399
[Applause]

2513
02:26:32,399 --> 02:26:34,000
i don't think that's what they meant by

2514
02:26:34,000 --> 02:26:36,399
masks that required buddy

2515
02:26:36,399 --> 02:26:38,239
oh we're here now

2516
02:26:38,239 --> 02:26:40,160
um it's good to see you mate thank you

2517
02:26:40,160 --> 02:26:42,319
buddy um so what are we here to talk

2518
02:26:42,319 --> 02:26:43,680
about today well we're here to talk

2519
02:26:43,680 --> 02:26:46,239
about secrets management well wait a

2520
02:26:46,239 --> 02:26:47,520
minute we're not here to talk about

2521
02:26:47,520 --> 02:26:49,520
secrets management why not no we're here

2522
02:26:49,520 --> 02:26:52,000
to talk about secrets mismanagement oh

2523
02:26:52,000 --> 02:26:53,359
right okay interesting so we're doing

2524
02:26:53,359 --> 02:26:54,880
this like you know ye oldie like you

2525
02:26:54,880 --> 02:26:57,359
know attack and defend kind of thing

2526
02:26:57,359 --> 02:26:59,439
look i want to make the case that all of

2527
02:26:59,439 --> 02:27:01,600
this push the entire industry has made

2528
02:27:01,600 --> 02:27:03,680
towards zero trust and all this progress

2529
02:27:03,680 --> 02:27:05,439
that we've made towards moving towards

2530
02:27:05,439 --> 02:27:07,200
identity brokers and sas and cloud

2531
02:27:07,200 --> 02:27:09,600
native environments has in itself

2532
02:27:09,600 --> 02:27:11,520
brought its own set of liabilities that

2533
02:27:11,520 --> 02:27:14,319
in a lot of ways are actually easier to

2534
02:27:14,319 --> 02:27:16,239
take advantage of than the old

2535
02:27:16,239 --> 02:27:18,479
traditional way of network attacking and

2536
02:27:18,479 --> 02:27:20,000
i want to make that case and lay it out

2537
02:27:20,000 --> 02:27:22,479
for you all here interesting okay well i

2538
02:27:22,479 --> 02:27:23,760
disagree i'm going to make the case that

2539
02:27:23,760 --> 02:27:25,040
i think you know our defense against the

2540
02:27:25,040 --> 02:27:26,399
dark arts actually better than ever we

2541
02:27:26,399 --> 02:27:28,080
have great capabilities that you know

2542
02:27:28,080 --> 02:27:30,239
now we previously never had before

2543
02:27:30,239 --> 02:27:32,080
frenchie that's a load of hogwash and i

2544
02:27:32,080 --> 02:27:33,760
don't think you even believe that you're

2545
02:27:33,760 --> 02:27:34,960
absolutely right and safer fist is

2546
02:27:34,960 --> 02:27:36,720
pretty dismal but hey that's uh showbiz

2547
02:27:36,720 --> 02:27:39,040
so let's do it anyway

2548
02:27:39,040 --> 02:27:41,920
so look before we jump into it

2549
02:27:41,920 --> 02:27:44,080
i need to first define what we mean when

2550
02:27:44,080 --> 02:27:47,120
we say zero trust i mentioned it before

2551
02:27:47,120 --> 02:27:49,200
basically traditionally we had these

2552
02:27:49,200 --> 02:27:52,720
trusted networks where you would have a

2553
02:27:52,720 --> 02:27:55,439
bunch of services running inside your

2554
02:27:55,439 --> 02:27:57,439
secure trusted network that maybe is

2555
02:27:57,439 --> 02:27:58,800
your jenkins server that doesn't have

2556
02:27:58,800 --> 02:28:00,239
authentication on it or your print

2557
02:28:00,239 --> 02:28:01,600
server that doesn't have authentication

2558
02:28:01,600 --> 02:28:03,439
on it or your web applications that have

2559
02:28:03,439 --> 02:28:05,840
a relatively low bar to authentication

2560
02:28:05,840 --> 02:28:08,000
on them and this idea is that anyone

2561
02:28:08,000 --> 02:28:09,920
sitting on that trusted network can talk

2562
02:28:09,920 --> 02:28:12,319
to those services and just by virtue of

2563
02:28:12,319 --> 02:28:14,000
being on that trusted network they have

2564
02:28:14,000 --> 02:28:16,160
this elevated level of privilege so

2565
02:28:16,160 --> 02:28:18,000
along comes google

2566
02:28:18,000 --> 02:28:19,680
and they author this white paper

2567
02:28:19,680 --> 02:28:22,880
basically saying that this model

2568
02:28:22,880 --> 02:28:24,960
is broken for a lot of reasons this

2569
02:28:24,960 --> 02:28:26,800
assumption that we can prevent attackers

2570
02:28:26,800 --> 02:28:28,160
from being able to get onto these

2571
02:28:28,160 --> 02:28:30,479
trusted networks is is a

2572
02:28:30,479 --> 02:28:32,720
fallacy like attackers are relatively

2573
02:28:32,720 --> 02:28:33,840
easily going to be able to get on these

2574
02:28:33,840 --> 02:28:35,600
networks so instead what we need to do

2575
02:28:35,600 --> 02:28:38,000
is we need to start securely vetting

2576
02:28:38,000 --> 02:28:40,000
every single user and every single

2577
02:28:40,000 --> 02:28:41,760
device before they can talk to any

2578
02:28:41,760 --> 02:28:44,160
service whether it's jenkins or print

2579
02:28:44,160 --> 02:28:46,399
job or web application we need to make

2580
02:28:46,399 --> 02:28:48,399
sure that we are testing the devices to

2581
02:28:48,399 --> 02:28:50,000
make sure their browser is up to date we

2582
02:28:50,000 --> 02:28:51,920
are making sure that the user has not

2583
02:28:51,920 --> 02:28:53,439
only a correct password but also the

2584
02:28:53,439 --> 02:28:55,359
correct two-factor authentication and we

2585
02:28:55,359 --> 02:28:57,520
do this check every single time for

2586
02:28:57,520 --> 02:28:59,680
every single service such that we no

2587
02:28:59,680 --> 02:29:01,840
longer have a trusted network but

2588
02:29:01,840 --> 02:29:03,359
instead we have this identity broker

2589
02:29:03,359 --> 02:29:05,200
that's doing this checking 100 of the

2590
02:29:05,200 --> 02:29:08,880
time and this idea is so trendy that not

2591
02:29:08,880 --> 02:29:10,160
only did a bunch of growth tech

2592
02:29:10,160 --> 02:29:12,880
companies adopt these ideas but the u.s

2593
02:29:12,880 --> 02:29:15,680
government um fairly recently has rolled

2594
02:29:15,680 --> 02:29:16,880
out

2595
02:29:16,880 --> 02:29:18,000
hey careful where you're pointing that

2596
02:29:18,000 --> 02:29:20,720
thing what this thing yes

2597
02:29:20,720 --> 02:29:22,160
you know in the united states you don't

2598
02:29:22,160 --> 02:29:23,760
even need a permit to carry these things

2599
02:29:23,760 --> 02:29:24,720
anymore

2600
02:29:24,720 --> 02:29:26,560
that

2601
02:29:26,560 --> 02:29:28,479
i mean i've had one since i was a kid

2602
02:29:28,479 --> 02:29:30,399
and that's wrong with me profoundly

2603
02:29:30,399 --> 02:29:32,239
flawed system all right whatever let's

2604
02:29:32,239 --> 02:29:34,080
keep going so the u.s government has

2605
02:29:34,080 --> 02:29:36,640
basically rolled out um this plan to

2606
02:29:36,640 --> 02:29:38,239
move the entire federal government over

2607
02:29:38,239 --> 02:29:40,479
to zero trust the same methodology that

2608
02:29:40,479 --> 02:29:42,000
google authored the white paper for so

2609
02:29:42,000 --> 02:29:43,120
in addition a whole bunch of companies

2610
02:29:43,120 --> 02:29:44,720
doing it you also have governments doing

2611
02:29:44,720 --> 02:29:46,560
it you have basically the entire world

2612
02:29:46,560 --> 02:29:49,120
moving over to the zero trust model what

2613
02:29:49,120 --> 02:29:50,800
did the conventional way of attacking

2614
02:29:50,800 --> 02:29:52,239
look like well like i mentioned before

2615
02:29:52,239 --> 02:29:54,080
all you need to do is get a single asset

2616
02:29:54,080 --> 02:29:55,840
on that trusted network and it's pretty

2617
02:29:55,840 --> 02:29:57,840
much game over the easiest way to do

2618
02:29:57,840 --> 02:30:00,239
that was usually spear phishing so and

2619
02:30:00,239 --> 02:30:01,359
this still works in a ton of

2620
02:30:01,359 --> 02:30:03,279
organizations by the way but it's

2621
02:30:03,279 --> 02:30:05,200
becoming a lot more difficult to do in

2622
02:30:05,200 --> 02:30:06,479
organizations that have rolled out zero

2623
02:30:06,479 --> 02:30:08,000
trust models basically you just need to

2624
02:30:08,000 --> 02:30:10,160
get code exec on a single employee's

2625
02:30:10,160 --> 02:30:12,880
laptop through a word macro or some such

2626
02:30:12,880 --> 02:30:14,239
equivalent through a spear phishing

2627
02:30:14,239 --> 02:30:15,760
campaign

2628
02:30:15,760 --> 02:30:17,680
and then that gives you access to this

2629
02:30:17,680 --> 02:30:19,680
network which then gives you access to

2630
02:30:19,680 --> 02:30:21,200
the jenkins server gives you access to

2631
02:30:21,200 --> 02:30:22,640
web application gives you access to the

2632
02:30:22,640 --> 02:30:24,399
print server it gives you access to all

2633
02:30:24,399 --> 02:30:25,680
these vulnerable services that would

2634
02:30:25,680 --> 02:30:27,200
otherwise be sitting behind the trusted

2635
02:30:27,200 --> 02:30:29,279
network and sure you might have multiple

2636
02:30:29,279 --> 02:30:31,680
trusted networks but in those cases you

2637
02:30:31,680 --> 02:30:33,200
would just have to get access to maybe

2638
02:30:33,200 --> 02:30:34,960
the jenkins server that straddles both

2639
02:30:34,960 --> 02:30:36,160
networks and then you would use the

2640
02:30:36,160 --> 02:30:37,680
jenkins server to pivot into the other

2641
02:30:37,680 --> 02:30:38,880
trusted network and you'd rinse and

2642
02:30:38,880 --> 02:30:40,800
repeat the whole process just dropping

2643
02:30:40,800 --> 02:30:43,120
now malware from service to service

2644
02:30:43,120 --> 02:30:45,200
moving around the inside of these

2645
02:30:45,200 --> 02:30:47,760
trusted networks

2646
02:30:47,760 --> 02:30:49,840
so when we switched over to xero trust

2647
02:30:49,840 --> 02:30:51,680
and identity broker and making sure that

2648
02:30:51,680 --> 02:30:53,040
all things are up to date and making

2649
02:30:53,040 --> 02:30:54,479
sure that everything's running antivirus

2650
02:30:54,479 --> 02:30:56,960
and all this is good and well again

2651
02:30:56,960 --> 02:31:00,399
we've fixed cyber security for everyone

2652
02:31:00,399 --> 02:31:02,640
problem solved and so

2653
02:31:02,640 --> 02:31:05,760
i win basically the cons cancelled i

2654
02:31:05,760 --> 02:31:07,760
booked my flight right after this we've

2655
02:31:07,760 --> 02:31:09,359
solved security thanks for coming to the

2656
02:31:09,359 --> 02:31:12,160
ted talk and i'm gonna let's head out

2657
02:31:12,160 --> 02:31:13,600
wait a minute

2658
02:31:13,600 --> 02:31:15,760
but i mean so something about this

2659
02:31:15,760 --> 02:31:17,840
assumption never quite sat well with me

2660
02:31:17,840 --> 02:31:20,080
because while this is the story we like

2661
02:31:20,080 --> 02:31:21,600
to tell ourselves that we have this

2662
02:31:21,600 --> 02:31:24,640
trusted broker that is vetting every

2663
02:31:24,640 --> 02:31:26,560
single user and every single asset from

2664
02:31:26,560 --> 02:31:28,239
being able to talk to these apps the

2665
02:31:28,239 --> 02:31:30,000
reality is a lot more complicated so

2666
02:31:30,000 --> 02:31:31,760
before we jump into that let's start to

2667
02:31:31,760 --> 02:31:34,880
put some faces to the names here

2668
02:31:34,880 --> 02:31:36,720
in reality you have a bunch of sas and

2669
02:31:36,720 --> 02:31:38,800
cloud vendors handling all these

2670
02:31:38,800 --> 02:31:40,479
capabilities for you and so all your

2671
02:31:40,479 --> 02:31:41,760
applications are probably running in

2672
02:31:41,760 --> 02:31:43,840
public cloud the most common of which

2673
02:31:43,840 --> 02:31:46,479
amazon web services

2674
02:31:46,479 --> 02:31:47,920
and then you probably have some vendor

2675
02:31:47,920 --> 02:31:50,399
either duo or octa handling your single

2676
02:31:50,399 --> 02:31:52,560
sign-on so that is handling your device

2677
02:31:52,560 --> 02:31:53,760
at this station it's handling your two

2678
02:31:53,760 --> 02:31:56,399
factors handling all that stuff

2679
02:31:56,399 --> 02:31:58,479
but this is still far from the whole

2680
02:31:58,479 --> 02:32:00,960
story because in a normal

2681
02:32:00,960 --> 02:32:02,960
web application development ecosystem

2682
02:32:02,960 --> 02:32:05,200
today you actually have dozens and

2683
02:32:05,200 --> 02:32:07,680
dozens of sas platforms that are

2684
02:32:07,680 --> 02:32:09,600
handling your web application that might

2685
02:32:09,600 --> 02:32:11,680
handle your artifact stores that might

2686
02:32:11,680 --> 02:32:13,359
handle your build pipelines that might

2687
02:32:13,359 --> 02:32:15,439
handle where you store artifacts it

2688
02:32:15,439 --> 02:32:17,439
might handle your error aggregation and

2689
02:32:17,439 --> 02:32:19,600
all of these sit outside of your main

2690
02:32:19,600 --> 02:32:21,120
cloud provider and they sit on the

2691
02:32:21,120 --> 02:32:24,239
public internet and this expectation is

2692
02:32:24,239 --> 02:32:26,399
basically that all of these different

2693
02:32:26,399 --> 02:32:28,640
providers have to adopt our model of

2694
02:32:28,640 --> 02:32:30,640
what xero trust is and then i'll even

2695
02:32:30,640 --> 02:32:32,160
throw a couple more on top our

2696
02:32:32,160 --> 02:32:34,160
collaboration tools our chat platforms

2697
02:32:34,160 --> 02:32:36,720
our sketchup tools our wikis all those

2698
02:32:36,720 --> 02:32:38,960
types of things that we use to develop

2699
02:32:38,960 --> 02:32:41,680
code sit on the public internet and we

2700
02:32:41,680 --> 02:32:43,760
have this idea that they're all going to

2701
02:32:43,760 --> 02:32:45,920
magically adopt our idea of what zero

2702
02:32:45,920 --> 02:32:48,640
trust should be and behave in the same

2703
02:32:48,640 --> 02:32:50,800
way where they sit behind this trusted

2704
02:32:50,800 --> 02:32:53,120
identity broker and they don't allow

2705
02:32:53,120 --> 02:32:55,680
access to these services unless you go

2706
02:32:55,680 --> 02:32:57,520
through your octa duo whatever what have

2707
02:32:57,520 --> 02:32:58,720
you

2708
02:32:58,720 --> 02:33:00,239
so that's that's the theory and it's

2709
02:33:00,239 --> 02:33:02,080
kind of a tall ask that we ask all these

2710
02:33:02,080 --> 02:33:04,960
different vendors to adopt um zero trust

2711
02:33:04,960 --> 02:33:06,479
in the way that we want them to adopt

2712
02:33:06,479 --> 02:33:08,000
zero trust

2713
02:33:08,000 --> 02:33:09,600
so the reality is like that's that's

2714
02:33:09,600 --> 02:33:10,960
really only half the story that's the

2715
02:33:10,960 --> 02:33:13,120
idea that's the theory we tell ourselves

2716
02:33:13,120 --> 02:33:14,800
but there's actually a number of other

2717
02:33:14,800 --> 02:33:16,160
ways that you can get access to these

2718
02:33:16,160 --> 02:33:17,760
services that aren't through that front

2719
02:33:17,760 --> 02:33:19,359
door that aren't through that identity

2720
02:33:19,359 --> 02:33:20,399
broker

2721
02:33:20,399 --> 02:33:22,880
the most common of which are machine

2722
02:33:22,880 --> 02:33:25,040
access i believe the technical term is

2723
02:33:25,040 --> 02:33:27,040
uh spooky machine action thank you

2724
02:33:27,040 --> 02:33:29,520
nearly headless nick spooky machine

2725
02:33:29,520 --> 02:33:32,640
access basically

2726
02:33:32,640 --> 02:33:35,680
i'll give you one main example

2727
02:33:35,680 --> 02:33:38,319
so earlier today we heard an example of

2728
02:33:38,319 --> 02:33:40,239
a presenter who can't log into their

2729
02:33:40,239 --> 02:33:42,160
github account because they've lost

2730
02:33:42,160 --> 02:33:44,000
their two-factor key well i have some

2731
02:33:44,000 --> 02:33:45,840
good news because github actually

2732
02:33:45,840 --> 02:33:48,399
provides several ways to read write

2733
02:33:48,399 --> 02:33:50,720
delete create data in the github

2734
02:33:50,720 --> 02:33:52,560
platform that don't involve going

2735
02:33:52,560 --> 02:33:54,160
through that front door so let's say

2736
02:33:54,160 --> 02:33:55,760
you're an organization and you set up

2737
02:33:55,760 --> 02:33:58,640
octa such that all users logging into

2738
02:33:58,640 --> 02:34:00,399
github have to provide their two-factor

2739
02:34:00,399 --> 02:34:01,680
authentication they have to be running

2740
02:34:01,680 --> 02:34:04,239
their up-to-date browser all that stuff

2741
02:34:04,239 --> 02:34:06,239
even with all that stuff the github

2742
02:34:06,239 --> 02:34:09,040
ecosystem allows you to both read and

2743
02:34:09,040 --> 02:34:11,200
write data to github repositories

2744
02:34:11,200 --> 02:34:13,920
through ssh so now we have this way

2745
02:34:13,920 --> 02:34:15,600
without two-factor authentication where

2746
02:34:15,600 --> 02:34:17,600
if we have these ssh keys we can still

2747
02:34:17,600 --> 02:34:19,760
get access to that github account that

2748
02:34:19,760 --> 02:34:22,640
maybe we're locked out of um or maybe uh

2749
02:34:22,640 --> 02:34:23,840
you know we're not locked out of but

2750
02:34:23,840 --> 02:34:25,600
it's kind of funny that we can log in

2751
02:34:25,600 --> 02:34:26,720
through the front door and it's gonna

2752
02:34:26,720 --> 02:34:28,960
make us go through this bar but all of

2753
02:34:28,960 --> 02:34:30,319
our developers still have a way to

2754
02:34:30,319 --> 02:34:32,399
create access to the account that that

2755
02:34:32,399 --> 02:34:34,720
completely circumvents that

2756
02:34:34,720 --> 02:34:36,640
in addition to that a developer can

2757
02:34:36,640 --> 02:34:38,720
create a personal access token and scope

2758
02:34:38,720 --> 02:34:40,479
it to whatever such scopes they want

2759
02:34:40,479 --> 02:34:42,880
create read write update delete make new

2760
02:34:42,880 --> 02:34:45,200
repositories delete old repositories

2761
02:34:45,200 --> 02:34:47,359
these tokens have all those capabilities

2762
02:34:47,359 --> 02:34:48,479
and don't require two-factor

2763
02:34:48,479 --> 02:34:50,399
authentication to use them

2764
02:34:50,399 --> 02:34:52,399
and then on top of that they have

2765
02:34:52,399 --> 02:34:55,279
application stores like they have this

2766
02:34:55,279 --> 02:34:57,680
idea of a github app it's an oauth-like

2767
02:34:57,680 --> 02:34:59,520
protocol where you can install apps on

2768
02:34:59,520 --> 02:35:01,359
top of organizations that give you the

2769
02:35:01,359 --> 02:35:04,080
way to create read write delete manage

2770
02:35:04,080 --> 02:35:05,200
data

2771
02:35:05,200 --> 02:35:07,200
on on behalf of an organization you also

2772
02:35:07,200 --> 02:35:10,160
have oauth grants that enables uh

2773
02:35:10,160 --> 02:35:12,479
basically a user to delegate their their

2774
02:35:12,479 --> 02:35:14,080
trust to a third party and that third

2775
02:35:14,080 --> 02:35:15,920
party can talk directly to github

2776
02:35:15,920 --> 02:35:17,520
without going through the single sign-on

2777
02:35:17,520 --> 02:35:19,520
provider and be able to create read

2778
02:35:19,520 --> 02:35:22,239
modify update and delete so now we have

2779
02:35:22,239 --> 02:35:24,720
this idea of zero trust where just for

2780
02:35:24,720 --> 02:35:27,600
this one individual sas service we need

2781
02:35:27,600 --> 02:35:29,200
to go through octa to be able to access

2782
02:35:29,200 --> 02:35:31,359
our data but just for this one service

2783
02:35:31,359 --> 02:35:33,279
we've just outlined four different ways

2784
02:35:33,279 --> 02:35:34,960
we can access that data without going

2785
02:35:34,960 --> 02:35:37,279
through that uh single sign-on secure

2786
02:35:37,279 --> 02:35:38,800
trust gateway

2787
02:35:38,800 --> 02:35:40,560
and when we look at the bigger picture

2788
02:35:40,560 --> 02:35:42,880
of all the different sas and cloud

2789
02:35:42,880 --> 02:35:44,160
providers that we're using to build

2790
02:35:44,160 --> 02:35:45,680
their applications we can really see how

2791
02:35:45,680 --> 02:35:47,600
this story gets a lot more complicated

2792
02:35:47,600 --> 02:35:50,000
we have basically a tremendous number of

2793
02:35:50,000 --> 02:35:52,000
back doors to get access to these

2794
02:35:52,000 --> 02:35:53,920
providers that don't involve going

2795
02:35:53,920 --> 02:35:55,840
through that single sign-on secure

2796
02:35:55,840 --> 02:35:59,279
trusted gateway so in summary the usual

2797
02:35:59,279 --> 02:36:01,840
way that a modern tech company will roll

2798
02:36:01,840 --> 02:36:04,720
out zero trust will have this high bar

2799
02:36:04,720 --> 02:36:06,560
for authenticating users where they have

2800
02:36:06,560 --> 02:36:08,560
to make sure that their device is up to

2801
02:36:08,560 --> 02:36:10,399
date we have to make sure that the user

2802
02:36:10,399 --> 02:36:11,920
has their two fact and all these things

2803
02:36:11,920 --> 02:36:13,920
enabled but when it comes to the

2804
02:36:13,920 --> 02:36:15,760
secondary ways to access the accounts

2805
02:36:15,760 --> 02:36:17,279
usually the way machines access the

2806
02:36:17,279 --> 02:36:19,680
account it's the wild west basically all

2807
02:36:19,680 --> 02:36:21,200
you need is this key you don't need two

2808
02:36:21,200 --> 02:36:22,800
fact you don't need anything up to date

2809
02:36:22,800 --> 02:36:24,239
and you can get access to the same data

2810
02:36:24,239 --> 02:36:25,600
without even having to touch the

2811
02:36:25,600 --> 02:36:27,520
identity broker

2812
02:36:27,520 --> 02:36:30,880
so then the game just becomes if we need

2813
02:36:30,880 --> 02:36:33,920
these keys to bypass our two-factor

2814
02:36:33,920 --> 02:36:35,520
authentication and our single sign-on

2815
02:36:35,520 --> 02:36:37,439
and all that stuff how do we get access

2816
02:36:37,439 --> 02:36:38,800
to one of these keys

2817
02:36:38,800 --> 02:36:41,520
i think honestly the easiest way to get

2818
02:36:41,520 --> 02:36:44,800
access is just to politely ask

2819
02:36:44,800 --> 02:36:47,439
so basically oauth is a protocol set up

2820
02:36:47,439 --> 02:36:50,800
to do exactly that it's basically

2821
02:36:50,800 --> 02:36:53,439
a protocol that most large sas providers

2822
02:36:53,439 --> 02:36:56,560
um have have this feature where i can

2823
02:36:56,560 --> 02:36:58,239
literally just go to frenchie and say

2824
02:36:58,239 --> 02:37:00,560
hey i am an evil app

2825
02:37:00,560 --> 02:37:03,359
can i please have your your your your

2826
02:37:03,359 --> 02:37:07,040
data or access to your data um and in in

2827
02:37:07,040 --> 02:37:08,319
going through this flow if french you

2828
02:37:08,319 --> 02:37:09,600
were to click that allow button he'd

2829
02:37:09,600 --> 02:37:11,680
hand over his keys to me and i'd be able

2830
02:37:11,680 --> 02:37:13,279
to get access to the data so this type

2831
02:37:13,279 --> 02:37:15,279
of attack is generally called oauth

2832
02:37:15,279 --> 02:37:17,600
phishing basically it's a it's an it's a

2833
02:37:17,600 --> 02:37:19,120
method of phishing that doesn't involve

2834
02:37:19,120 --> 02:37:21,760
dropping malware on any asset and it's

2835
02:37:21,760 --> 02:37:23,600
it's done with just one click of a

2836
02:37:23,600 --> 02:37:25,279
button if frenchie just clicks that

2837
02:37:25,279 --> 02:37:27,760
allow button it's game over i've been

2838
02:37:27,760 --> 02:37:29,840
granted access to the data that i'm

2839
02:37:29,840 --> 02:37:32,000
after and i don't actually have to

2840
02:37:32,000 --> 02:37:34,640
infect any machines to do so can i um

2841
02:37:34,640 --> 02:37:35,920
can i have those back i need access to

2842
02:37:35,920 --> 02:37:37,200
my github

2843
02:37:37,200 --> 02:37:38,800
no you've handed these over wait a

2844
02:37:38,800 --> 02:37:40,319
minute hey

2845
02:37:40,319 --> 02:37:41,680
i do have

2846
02:37:41,680 --> 02:37:43,359
way too many ub keys good point i don't

2847
02:37:43,359 --> 02:37:45,279
think he knows how olaf supposed to have

2848
02:37:45,279 --> 02:37:47,359
access to the keys but

2849
02:37:47,359 --> 02:37:49,680
basically um

2850
02:37:49,680 --> 02:37:51,920
that's that's a a relatively easy way to

2851
02:37:51,920 --> 02:37:53,840
get access um

2852
02:37:53,840 --> 02:37:55,600
but it's maybe not as operationally

2853
02:37:55,600 --> 02:37:57,520
secure as we as attackers might want to

2854
02:37:57,520 --> 02:37:59,840
be we have to send a phishing email and

2855
02:37:59,840 --> 02:38:01,279
that phishing email has to land in an

2856
02:38:01,279 --> 02:38:02,479
inbox that could be forwarded to

2857
02:38:02,479 --> 02:38:04,720
security at it could be introspected it

2858
02:38:04,720 --> 02:38:06,239
could be screen shotted we can do

2859
02:38:06,239 --> 02:38:08,399
investigation and forensics maybe pull

2860
02:38:08,399 --> 02:38:10,399
audit trails and things like that on

2861
02:38:10,399 --> 02:38:12,960
that phishing email so

2862
02:38:12,960 --> 02:38:14,399
maybe there are some ways to get that

2863
02:38:14,399 --> 02:38:17,680
initial foothold um without doing that

2864
02:38:17,680 --> 02:38:19,760
um so you know a couple years ago i

2865
02:38:19,760 --> 02:38:21,600
authored this open source tool called

2866
02:38:21,600 --> 02:38:23,600
trufflhog and basically when i

2867
02:38:23,600 --> 02:38:26,160
originally wrote this tool my intent was

2868
02:38:26,160 --> 02:38:28,239
to find these keys that big companies

2869
02:38:28,239 --> 02:38:29,600
were leaking out

2870
02:38:29,600 --> 02:38:31,760
so i wrote it to scan for keys

2871
02:38:31,760 --> 02:38:33,680
specifically on github but it was kind

2872
02:38:33,680 --> 02:38:35,199
of arbitrary that that's where i was

2873
02:38:35,199 --> 02:38:37,279
looking for them to start with

2874
02:38:37,279 --> 02:38:39,199
and i was doing it for the purposes of

2875
02:38:39,199 --> 02:38:41,279
bug bounties i was basically just

2876
02:38:41,279 --> 02:38:43,120
looking for keys that big organizations

2877
02:38:43,120 --> 02:38:45,040
were leaking out so that i could make a

2878
02:38:45,040 --> 02:38:46,160
bunch of money submitting to buck

2879
02:38:46,160 --> 02:38:48,239
bounties and it worked pretty well for

2880
02:38:48,239 --> 02:38:49,840
that i found a whole bunch of keys that

2881
02:38:49,840 --> 02:38:51,840
big companies were leaking out submitted

2882
02:38:51,840 --> 02:38:53,760
them uh and made a bunch of money off of

2883
02:38:53,760 --> 02:38:56,319
it um but like i mentioned the focus

2884
02:38:56,319 --> 02:38:57,840
when i originally authored truffle hog

2885
02:38:57,840 --> 02:38:59,359
was specifically looking for these keys

2886
02:38:59,359 --> 02:39:01,439
and git and since then i've sort of

2887
02:39:01,439 --> 02:39:03,199
brought in that mindset a little bit and

2888
02:39:03,199 --> 02:39:05,120
started to look for these keys elsewhere

2889
02:39:05,120 --> 02:39:07,520
if we look in our chat platforms there's

2890
02:39:07,520 --> 02:39:09,359
a ton of keys in there if we look in our

2891
02:39:09,359 --> 02:39:11,439
package stores there's a ton of keys in

2892
02:39:11,439 --> 02:39:13,520
there if we look in our just arbitrary

2893
02:39:13,520 --> 02:39:15,439
data blob stores

2894
02:39:15,439 --> 02:39:17,040
i think a little while ago i scanned

2895
02:39:17,040 --> 02:39:20,080
about 4 000 open s3 buckets on the

2896
02:39:20,080 --> 02:39:22,560
public internet looking for keys inside

2897
02:39:22,560 --> 02:39:24,960
those open s3 buckets so i'm not talking

2898
02:39:24,960 --> 02:39:26,640
about an open s3 bucket that might have

2899
02:39:26,640 --> 02:39:28,160
data that we're interested in i'm

2900
02:39:28,160 --> 02:39:30,000
talking about inside the open s3 bucket

2901
02:39:30,000 --> 02:39:32,319
there's a key that then could lead us to

2902
02:39:32,319 --> 02:39:34,640
data and i found hundreds and hundreds

2903
02:39:34,640 --> 02:39:38,319
of live active keys inside these buckets

2904
02:39:38,319 --> 02:39:39,760
and in addition to that we might have

2905
02:39:39,760 --> 02:39:42,479
our error aggregation services basically

2906
02:39:42,479 --> 02:39:44,880
what i found is that any sufficiently

2907
02:39:44,880 --> 02:39:47,520
large store of data if you go looking

2908
02:39:47,520 --> 02:39:49,680
for these keys you will find them

2909
02:39:49,680 --> 02:39:51,840
they're literally leaking out all over

2910
02:39:51,840 --> 02:39:53,760
the place and that

2911
02:39:53,760 --> 02:39:56,239
gives us the access that we need

2912
02:39:56,239 --> 02:39:58,080
to get data

2913
02:39:58,080 --> 02:40:01,279
so keys gives us access to data that's

2914
02:40:01,279 --> 02:40:03,439
kind of interesting but wait a minute

2915
02:40:03,439 --> 02:40:06,239
data gives us access to keys

2916
02:40:06,239 --> 02:40:07,120
so

2917
02:40:07,120 --> 02:40:08,560
if you if you put these two things

2918
02:40:08,560 --> 02:40:11,199
together if keys get us data and data

2919
02:40:11,199 --> 02:40:14,000
gets us keys and keys gets us data and

2920
02:40:14,000 --> 02:40:17,279
data gets us keys

2921
02:40:17,439 --> 02:40:19,120
let me think here

2922
02:40:19,120 --> 02:40:23,880
do with the worm myth

2923
02:40:30,750 --> 02:40:34,600
[Applause]

2924
02:40:35,520 --> 02:40:37,199
yeah that's about as much as i got so

2925
02:40:37,199 --> 02:40:40,399
it's pretty good it's pretty good worm

2926
02:40:40,399 --> 02:40:42,399
he didn't practice that at all no first

2927
02:40:42,399 --> 02:40:44,720
time completely unscripted

2928
02:40:44,720 --> 02:40:46,960
um so you know when we combine all these

2929
02:40:46,960 --> 02:40:49,439
ideas now if we're an attacker we need

2930
02:40:49,439 --> 02:40:51,760
that initial foothold to get access to

2931
02:40:51,760 --> 02:40:53,520
our data so maybe the initial foothold

2932
02:40:53,520 --> 02:40:55,760
is our s3 bucket that we start with

2933
02:40:55,760 --> 02:40:57,279
inside that bucket we find a bunch of

2934
02:40:57,279 --> 02:41:00,080
keys we use those keys to get access

2935
02:41:00,080 --> 02:41:02,319
maybe one of the keys is a github token

2936
02:41:02,319 --> 02:41:03,760
we use those keys to get access to

2937
02:41:03,760 --> 02:41:06,000
private repositories then inside those

2938
02:41:06,000 --> 02:41:07,600
repositories we look for more keys and

2939
02:41:07,600 --> 02:41:09,439
maybe we get access to build kite and

2940
02:41:09,439 --> 02:41:11,120
then we use the key to get access to

2941
02:41:11,120 --> 02:41:12,880
build kite all this stuff is sitting on

2942
02:41:12,880 --> 02:41:14,399
the public internet

2943
02:41:14,399 --> 02:41:17,040
there is nothing stopping anyone i don't

2944
02:41:17,040 --> 02:41:18,560
think from automating this entire

2945
02:41:18,560 --> 02:41:21,760
process from building basically a sas

2946
02:41:21,760 --> 02:41:24,000
bloodhound where you can start with one

2947
02:41:24,000 --> 02:41:26,800
provider search all the data for keys

2948
02:41:26,800 --> 02:41:28,720
use those keys to get access to other

2949
02:41:28,720 --> 02:41:30,960
providers use those providers to get

2950
02:41:30,960 --> 02:41:32,800
access to more keys and just rinse and

2951
02:41:32,800 --> 02:41:34,319
repeat and the interesting thing about

2952
02:41:34,319 --> 02:41:35,760
this attack style is you don't have to

2953
02:41:35,760 --> 02:41:38,640
drop malware on a single system to be

2954
02:41:38,640 --> 02:41:40,160
able to get access to the data that

2955
02:41:40,160 --> 02:41:42,080
you're after so maybe after we land on

2956
02:41:42,080 --> 02:41:44,080
build kite we get an amazon web token

2957
02:41:44,080 --> 02:41:45,760
that just directly takes us to a

2958
02:41:45,760 --> 02:41:48,479
database rds instance that has the data

2959
02:41:48,479 --> 02:41:50,479
that we'd otherwise have to go through a

2960
02:41:50,479 --> 02:41:52,479
malware chain to get access to now we

2961
02:41:52,479 --> 02:41:55,040
can do it all for a single asset that's

2962
02:41:55,040 --> 02:41:57,520
not compromising any malware

2963
02:41:57,520 --> 02:41:59,680
and we can do so

2964
02:41:59,680 --> 02:42:01,680
from the public internet just by talking

2965
02:42:01,680 --> 02:42:04,239
to these different api providers and

2966
02:42:04,239 --> 02:42:05,680
it's super easy to do so i've done this

2967
02:42:05,680 --> 02:42:06,800
in a manual way but i don't think

2968
02:42:06,800 --> 02:42:08,479
anything is stopping someone from

2969
02:42:08,479 --> 02:42:09,920
automating this whole process and just

2970
02:42:09,920 --> 02:42:11,840
jumping from provider to provider until

2971
02:42:11,840 --> 02:42:13,199
they get access to the data that they're

2972
02:42:13,199 --> 02:42:14,319
after

2973
02:42:14,319 --> 02:42:15,600
so we still have this question of

2974
02:42:15,600 --> 02:42:17,760
initial access we talked theoretically

2975
02:42:17,760 --> 02:42:19,680
about this idea of phishing but i want

2976
02:42:19,680 --> 02:42:21,920
to show that that's actually a very real

2977
02:42:21,920 --> 02:42:24,000
world scenario this is i think i pulled

2978
02:42:24,000 --> 02:42:25,520
this from the washington post this was a

2979
02:42:25,520 --> 02:42:27,840
real phishing email that was sent by a

2980
02:42:27,840 --> 02:42:29,920
nation-state actor to try to get access

2981
02:42:29,920 --> 02:42:32,239
to somebody's data um on the left you

2982
02:42:32,239 --> 02:42:34,160
have the email it looks like it's from

2983
02:42:34,160 --> 02:42:36,239
google it's saying hey check out this

2984
02:42:36,239 --> 02:42:37,840
google defender it'll help secure your

2985
02:42:37,840 --> 02:42:39,680
account and what's interesting here is

2986
02:42:39,680 --> 02:42:41,760
if you mouse over that install google

2987
02:42:41,760 --> 02:42:44,239
defender the link that it takes you to

2988
02:42:44,239 --> 02:42:45,840
is a google domain

2989
02:42:45,840 --> 02:42:48,239
because on the other end of it is this

2990
02:42:48,239 --> 02:42:50,000
oauth prompt that says would you like to

2991
02:42:50,000 --> 02:42:51,600
give google defender access to your

2992
02:42:51,600 --> 02:42:54,000
drive and access to your email

2993
02:42:54,000 --> 02:42:56,080
so all this phishing training that we

2994
02:42:56,080 --> 02:42:58,640
undergo saying that the link is like the

2995
02:42:58,640 --> 02:43:00,399
be-all and end-all if you just make sure

2996
02:43:00,399 --> 02:43:03,120
that the domain is trusted um that goes

2997
02:43:03,120 --> 02:43:04,880
out the window because this takes you to

2998
02:43:04,880 --> 02:43:07,199
a trusted domain we start on a google

2999
02:43:07,199 --> 02:43:09,120
product in gmail we get an email that

3000
02:43:09,120 --> 02:43:10,560
looks like it's from google we mouse

3001
02:43:10,560 --> 02:43:12,239
over to the link and it's a google.com

3002
02:43:12,239 --> 02:43:14,239
link and then we take us to a page where

3003
02:43:14,239 --> 02:43:16,000
the namespace of the app has the word

3004
02:43:16,000 --> 02:43:18,560
google in it and all the victim needs to

3005
02:43:18,560 --> 02:43:20,000
do is click that allow button and

3006
02:43:20,000 --> 02:43:21,600
they've handed over access to all their

3007
02:43:21,600 --> 02:43:24,239
drive and all their email so after this

3008
02:43:24,239 --> 02:43:26,000
attack this was a couple years ago and a

3009
02:43:26,000 --> 02:43:27,760
few more events similar

3010
02:43:27,760 --> 02:43:29,040
google rolled out a couple more

3011
02:43:29,040 --> 02:43:30,960
protections to make it harder to make

3012
02:43:30,960 --> 02:43:32,800
these types of oauth apps to access

3013
02:43:32,800 --> 02:43:35,199
email and drive but anecdotally i've

3014
02:43:35,199 --> 02:43:36,960
found that these types of oauth grants

3015
02:43:36,960 --> 02:43:39,279
to access google cloud data

3016
02:43:39,279 --> 02:43:41,520
is actually relatively easy to pull off

3017
02:43:41,520 --> 02:43:42,560
today

3018
02:43:42,560 --> 02:43:43,760
and

3019
02:43:43,760 --> 02:43:45,279
this is not the only provider that

3020
02:43:45,279 --> 02:43:47,120
provides this level of access slack

3021
02:43:47,120 --> 02:43:49,279
oauth github oauth all these platforms

3022
02:43:49,279 --> 02:43:52,239
have similar mechanisms so that's a very

3023
02:43:52,239 --> 02:43:54,239
viable way to get your initial token

3024
02:43:54,239 --> 02:43:56,720
basically just to ask nicely for it but

3025
02:43:56,720 --> 02:43:58,080
on the other side we talked about the

3026
02:43:58,080 --> 02:43:59,840
theory of potentially

3027
02:43:59,840 --> 02:44:01,520
finding a key laying around somewhere

3028
02:44:01,520 --> 02:44:03,359
let's look at the reality of that how

3029
02:44:03,359 --> 02:44:05,279
many people have heard of virus total

3030
02:44:05,279 --> 02:44:07,120
the service

3031
02:44:07,120 --> 02:44:08,800
looks like maybe about half the audience

3032
02:44:08,800 --> 02:44:10,560
have heard of it basically it just

3033
02:44:10,560 --> 02:44:14,080
advertises itself as free antivirus

3034
02:44:14,080 --> 02:44:17,600
sas as a service so if you have a file

3035
02:44:17,600 --> 02:44:20,640
let's say uh frenchy has a company

3036
02:44:20,640 --> 02:44:24,080
frenchieco yep where his employees

3037
02:44:24,080 --> 02:44:26,000
basically want to check their files to

3038
02:44:26,000 --> 02:44:27,439
see whether or not they have viruses on

3039
02:44:27,439 --> 02:44:29,120
them send them all to vta every single

3040
02:44:29,120 --> 02:44:31,359
one they can go to virustotal and upload

3041
02:44:31,359 --> 02:44:33,359
those files and virustotal will say

3042
02:44:33,359 --> 02:44:34,880
which files have viruses in them and

3043
02:44:34,880 --> 02:44:37,040
which ones don't this service by the way

3044
02:44:37,040 --> 02:44:38,640
is owned by google they acquired

3045
02:44:38,640 --> 02:44:40,800
virustotal a couple years ago so

3046
02:44:40,800 --> 02:44:43,840
basically that's at its face it's free

3047
02:44:43,840 --> 02:44:45,600
antivirus so you might ask the question

3048
02:44:45,600 --> 02:44:47,120
well how do they make money like why

3049
02:44:47,120 --> 02:44:48,640
would google pay for this in the first

3050
02:44:48,640 --> 02:44:49,920
place why would they acquire this

3051
02:44:49,920 --> 02:44:52,399
company they make money by selling

3052
02:44:52,399 --> 02:44:55,040
access to the files that were uploaded

3053
02:44:55,040 --> 02:44:56,399
to the service

3054
02:44:56,399 --> 02:44:58,720
basically all the files that frenchie's

3055
02:44:58,720 --> 02:45:00,880
employees have uploaded to virustotal

3056
02:45:00,880 --> 02:45:03,840
virustotal saves them and then a threat

3057
02:45:03,840 --> 02:45:06,239
intelligence company can pay virustotal

3058
02:45:06,239 --> 02:45:09,120
a bunch of money and they'll give those

3059
02:45:09,120 --> 02:45:11,920
researchers researcher access to those

3060
02:45:11,920 --> 02:45:14,239
files and so what you can do they even

3061
02:45:14,239 --> 02:45:16,399
provide an api to be able to run yara

3062
02:45:16,399 --> 02:45:18,399
rules against all those files and tell

3063
02:45:18,399 --> 02:45:20,000
you which files are interesting before

3064
02:45:20,000 --> 02:45:21,359
you download them

3065
02:45:21,359 --> 02:45:23,040
you could pay virus total a bunch of

3066
02:45:23,040 --> 02:45:25,359
money and you could search for

3067
02:45:25,359 --> 02:45:29,040
frenchieco plus amazon key give me any

3068
02:45:29,040 --> 02:45:30,880
file that meets those two conditions and

3069
02:45:30,880 --> 02:45:33,040
if any file matches that you can

3070
02:45:33,040 --> 02:45:34,880
download it and you can get access to

3071
02:45:34,880 --> 02:45:36,880
frenchie's employee's amazon key that

3072
02:45:36,880 --> 02:45:38,560
they accidentally uploaded to virustotal

3073
02:45:38,560 --> 02:45:40,160
for the purposes of virus scanning

3074
02:45:40,160 --> 02:45:42,080
please don't actually do that frenchieco

3075
02:45:42,080 --> 02:45:43,600
is a real company by the way it's got

3076
02:45:43,600 --> 02:45:45,600
real employees to look out for

3077
02:45:45,600 --> 02:45:48,080
so basically um

3078
02:45:48,080 --> 02:45:50,000
that's that's one way

3079
02:45:50,000 --> 02:45:51,680
but as i'm sure you all are familiar

3080
02:45:51,680 --> 02:45:54,160
source code tends to be relatively leaky

3081
02:45:54,160 --> 02:45:55,680
and like we mentioned before there tends

3082
02:45:55,680 --> 02:45:57,359
to be a lot of keys that are in source

3083
02:45:57,359 --> 02:45:59,760
code so i'm sure everyone's at some

3084
02:45:59,760 --> 02:46:01,520
point seen an article or a headline

3085
02:46:01,520 --> 02:46:04,000
saying firmware image leaks out or next

3086
02:46:04,000 --> 02:46:05,920
generation iphone source code published

3087
02:46:05,920 --> 02:46:07,520
on the internet what have you there are

3088
02:46:07,520 --> 02:46:09,600
a lot of ways that code can leak out but

3089
02:46:09,600 --> 02:46:11,520
one of the most common ways is

3090
02:46:11,520 --> 02:46:13,680
accidentally thinking it's going to

3091
02:46:13,680 --> 02:46:16,640
follow up yeah all good

3092
02:46:16,880 --> 02:46:19,680
basically accidentally exposing your dot

3093
02:46:19,680 --> 02:46:22,319
git directory the dot git directory is a

3094
02:46:22,319 --> 02:46:24,080
folder that lives inside your web

3095
02:46:24,080 --> 02:46:26,239
application that stores all the data for

3096
02:46:26,239 --> 02:46:28,000
your revision history all the old

3097
02:46:28,000 --> 02:46:30,640
commits all your objects inside of git

3098
02:46:30,640 --> 02:46:33,359
they're stored in this dot get folder so

3099
02:46:33,359 --> 02:46:35,600
if you were to take all your files and

3100
02:46:35,600 --> 02:46:37,040
throw them up on

3101
02:46:37,040 --> 02:46:38,479
a web server

3102
02:46:38,479 --> 02:46:40,479
and you accidentally copy over your git

3103
02:46:40,479 --> 02:46:42,640
folder you will accidentally end up

3104
02:46:42,640 --> 02:46:44,640
serving not just your current version of

3105
02:46:44,640 --> 02:46:47,359
source code but all the historical old

3106
02:46:47,359 --> 02:46:48,880
files

3107
02:46:48,880 --> 02:46:51,040
from older commits that all of which can

3108
02:46:51,040 --> 02:46:53,279
have secrets in them and this blog post

3109
02:46:53,279 --> 02:46:55,520
that i screenshotted is a couple years

3110
02:46:55,520 --> 02:46:57,359
old at this point so you might be

3111
02:46:57,359 --> 02:46:59,040
thinking oh well we must have learned to

3112
02:46:59,040 --> 02:47:00,560
protect ourselves against accidentally

3113
02:47:00,560 --> 02:47:03,680
exposing our git directories the alexa 1

3114
02:47:03,680 --> 02:47:04,560
million

3115
02:47:04,560 --> 02:47:06,319
are the 1 million most trafficked

3116
02:47:06,319 --> 02:47:08,880
websites on the internet and what i did

3117
02:47:08,880 --> 02:47:11,279
was i just literally fairly recently

3118
02:47:11,279 --> 02:47:13,600
scanned the alexa 1 million seeing how

3119
02:47:13,600 --> 02:47:14,960
many of them accidentally leaked out

3120
02:47:14,960 --> 02:47:17,520
their git directory and you would be

3121
02:47:17,520 --> 02:47:18,479
surprised

3122
02:47:18,479 --> 02:47:22,000
how many of the top 1 million websites

3123
02:47:22,000 --> 02:47:24,720
right now is serving their complete

3124
02:47:24,720 --> 02:47:26,399
source code history not just current

3125
02:47:26,399 --> 02:47:28,239
version but all historical versions by

3126
02:47:28,239 --> 02:47:29,600
accidentally leaking out their document

3127
02:47:29,600 --> 02:47:31,279
directory it's a real screenshot from

3128
02:47:31,279 --> 02:47:32,399
one of the alexa one million i've

3129
02:47:32,399 --> 02:47:34,960
blurred out the url there but it's

3130
02:47:34,960 --> 02:47:36,479
relatively easy to do you could set this

3131
02:47:36,479 --> 02:47:38,560
up today and get access to a bunch of

3132
02:47:38,560 --> 02:47:40,319
source code and in that code you would

3133
02:47:40,319 --> 02:47:41,760
get their keys and then you would you'll

3134
02:47:41,760 --> 02:47:43,359
use those keys to get data and so on and

3135
02:47:43,359 --> 02:47:44,560
so forth

3136
02:47:44,560 --> 02:47:46,319
so let's lower the bar a little bit even

3137
02:47:46,319 --> 02:47:48,720
further beyond that um

3138
02:47:48,720 --> 02:47:50,160
i'm sure everybody in this room has

3139
02:47:50,160 --> 02:47:51,520
probably heard of pastebin if you

3140
02:47:51,520 --> 02:47:53,840
haven't pastebin is basically a service

3141
02:47:53,840 --> 02:47:56,000
where you can share arbitrary text with

3142
02:47:56,000 --> 02:47:59,279
anybody in the world pastebin by default

3143
02:47:59,279 --> 02:48:02,239
has the text that you upload public and

3144
02:48:02,239 --> 02:48:04,880
they also have an api that allows you to

3145
02:48:04,880 --> 02:48:06,640
see all the public pastes that get

3146
02:48:06,640 --> 02:48:08,720
posted to pastebin so maybe one of

3147
02:48:08,720 --> 02:48:10,080
frenchie's employees wants to very

3148
02:48:10,080 --> 02:48:12,000
quickly share a code snippet with

3149
02:48:12,000 --> 02:48:14,319
another employee so they say okay well

3150
02:48:14,319 --> 02:48:16,000
paste bin like nobody's gonna know that

3151
02:48:16,000 --> 02:48:17,359
i've uploaded this thing this is a quick

3152
02:48:17,359 --> 02:48:19,439
and easy way to do this they paste it in

3153
02:48:19,439 --> 02:48:21,120
a paste bin they share the link with

3154
02:48:21,120 --> 02:48:22,399
their employee

3155
02:48:22,399 --> 02:48:24,399
i can be sitting watching the entire

3156
02:48:24,399 --> 02:48:26,399
feed of all pastes ever going to paste

3157
02:48:26,399 --> 02:48:29,199
in looking for the word frenchie co

3158
02:48:29,199 --> 02:48:31,439
or frenchy acme or whatever i called it

3159
02:48:31,439 --> 02:48:34,160
frenchie differentially incorporated

3160
02:48:34,160 --> 02:48:36,319
plus google cloud key

3161
02:48:36,319 --> 02:48:38,080
and if i ever see any paste ever meet

3162
02:48:38,080 --> 02:48:40,640
that criteria then i can get access to

3163
02:48:40,640 --> 02:48:42,239
frenchie's keys and use that as my

3164
02:48:42,239 --> 02:48:44,080
initial foothold and this is a real key

3165
02:48:44,080 --> 02:48:46,080
by the way that i pulled off pastebin

3166
02:48:46,080 --> 02:48:47,920
just yesterday so this is very much

3167
02:48:47,920 --> 02:48:50,080
still an unsolved problem

3168
02:48:50,080 --> 02:48:52,080
but let's lower the bar even further we

3169
02:48:52,080 --> 02:48:54,080
talked about google cloud keys this is

3170
02:48:54,080 --> 02:48:55,520
what a typical google cloud key looks

3171
02:48:55,520 --> 02:48:56,479
like it's got a lot of different

3172
02:48:56,479 --> 02:48:58,399
components but some of these strings are

3173
02:48:58,399 --> 02:49:00,239
really unique to google cloud key like

3174
02:49:00,239 --> 02:49:01,600
you're never going to see

3175
02:49:01,600 --> 02:49:03,760
client x 509 cert url with the

3176
02:49:03,760 --> 02:49:06,399
underscores just like that in any string

3177
02:49:06,399 --> 02:49:08,239
other than a google cloud key pretty

3178
02:49:08,239 --> 02:49:10,720
much so if we take those strings and we

3179
02:49:10,720 --> 02:49:12,160
look for them that's going to give us a

3180
02:49:12,160 --> 02:49:13,680
pretty good indicator that we found

3181
02:49:13,680 --> 02:49:15,359
cloud key so where are we going to look

3182
02:49:15,359 --> 02:49:16,399
for them

3183
02:49:16,399 --> 02:49:17,600
we're literally just going to google

3184
02:49:17,600 --> 02:49:19,680
them

3185
02:49:19,680 --> 02:49:22,560
like i literally just typed x client 509

3186
02:49:22,560 --> 02:49:24,319
cert url into google and found a bunch

3187
02:49:24,319 --> 02:49:25,840
of google cloud keys there's nothing

3188
02:49:25,840 --> 02:49:27,840
stopping me from adding to that search

3189
02:49:27,840 --> 02:49:30,239
parameter frenchieco and then if anybody

3190
02:49:30,239 --> 02:49:33,040
goes to stackoverflow or paste the code

3191
02:49:33,040 --> 02:49:34,960
snippet on anywhere that's indexed by

3192
02:49:34,960 --> 02:49:37,840
google i'll be able to see that i could

3193
02:49:37,840 --> 02:49:39,600
set up a google alert and get the

3194
02:49:39,600 --> 02:49:41,760
notification in real time

3195
02:49:41,760 --> 02:49:43,920
and be able to pull all the keys that

3196
02:49:43,920 --> 02:49:46,640
frenchie's employees have uploaded

3197
02:49:46,640 --> 02:49:48,880
to the public internet once again please

3198
02:49:48,880 --> 02:49:51,199
don't actually do this so the bar for

3199
02:49:51,199 --> 02:49:53,680
finding these keys is on the floor right

3200
02:49:53,680 --> 02:49:57,600
now um basically we've set up this uh

3201
02:49:57,600 --> 02:49:59,359
idea that everything should just be on

3202
02:49:59,359 --> 02:50:01,120
the public internet we should use these

3203
02:50:01,120 --> 02:50:03,359
secure identity trust brokers and then

3204
02:50:03,359 --> 02:50:05,680
we've completely ignored all these side

3205
02:50:05,680 --> 02:50:08,319
accesses through these keys that are so

3206
02:50:08,319 --> 02:50:10,080
necessary for all of our services to

3207
02:50:10,080 --> 02:50:12,479
function and as a result of that these

3208
02:50:12,479 --> 02:50:14,160
keys have basically been hemorrhaging

3209
02:50:14,160 --> 02:50:15,680
out of our organizations through a

3210
02:50:15,680 --> 02:50:17,359
myriad of ways over the last couple of

3211
02:50:17,359 --> 02:50:19,120
years and we don't really have a good

3212
02:50:19,120 --> 02:50:21,279
way to stop that from happening

3213
02:50:21,279 --> 02:50:23,920
or that's what i said anyway

3214
02:50:23,920 --> 02:50:26,319
wonderful so uh yeah we we painted a

3215
02:50:26,319 --> 02:50:28,080
pretty bleak picture there um uh but

3216
02:50:28,080 --> 02:50:29,040
let's switch into some of the things

3217
02:50:29,040 --> 02:50:31,040
that defenders can do and the focus here

3218
02:50:31,040 --> 02:50:32,080
is really practical things that the

3219
02:50:32,080 --> 02:50:34,319
audience can take away to their clients

3220
02:50:34,319 --> 02:50:36,800
or their own organizations themselves um

3221
02:50:36,800 --> 02:50:38,319
so broadly kind of three different areas

3222
02:50:38,319 --> 02:50:39,760
right we're so finding secrets we can

3223
02:50:39,760 --> 02:50:41,520
use the same techniques the attackers do

3224
02:50:41,520 --> 02:50:42,720
what do you do once you've found them

3225
02:50:42,720 --> 02:50:44,319
and then also some methods of prevention

3226
02:50:44,319 --> 02:50:45,040
for

3227
02:50:45,040 --> 02:50:47,199
removing this whole class of issue

3228
02:50:47,199 --> 02:50:48,880
so as defenders yeah we absolutely can

3229
02:50:48,880 --> 02:50:50,479
use those same uh techniques you should

3230
02:50:50,479 --> 02:50:52,560
set up pay spin alerts um go and look at

3231
02:50:52,560 --> 02:50:54,160
you know cyber monday deals on paceman i

3232
02:50:54,160 --> 02:50:56,479
think it's 48 bucks but truffle hog uh

3233
02:50:56,479 --> 02:50:58,000
free and open source um it's a great

3234
02:50:58,000 --> 02:50:59,680
tool uh dylan's covered some of the use

3235
02:50:59,680 --> 02:51:01,920
cases it started really as like a a you

3236
02:51:01,920 --> 02:51:03,359
know a repo focused thing to look

3237
02:51:03,359 --> 02:51:05,439
through git branches and commits but now

3238
02:51:05,439 --> 02:51:07,439
it looks for arbitrary data my favorite

3239
02:51:07,439 --> 02:51:09,120
feature is if you've ever run a tool

3240
02:51:09,120 --> 02:51:10,560
like this you know that false positives

3241
02:51:10,560 --> 02:51:12,160
are a really big issue you just get high

3242
02:51:12,160 --> 02:51:14,080
interface strings spewed out everywhere

3243
02:51:14,080 --> 02:51:15,600
well trufflehug will take those and then

3244
02:51:15,600 --> 02:51:17,840
go and validate them against the aws api

3245
02:51:17,840 --> 02:51:19,120
for example and then we'll return like

3246
02:51:19,120 --> 02:51:21,439
hey this is a valid uh this is an actual

3247
02:51:21,439 --> 02:51:24,000
live cred super useful um trufflehog

3248
02:51:24,000 --> 02:51:25,760
though is it was originally authored by

3249
02:51:25,760 --> 02:51:27,680
a lunatic i hear that is true and i'm

3250
02:51:27,680 --> 02:51:28,960
not just saying this because the

3251
02:51:28,960 --> 02:51:30,319
original author is holding me under

3252
02:51:30,319 --> 02:51:32,239
duress on stage at one point

3253
02:51:32,239 --> 02:51:33,439
it's a great tool you should all check

3254
02:51:33,439 --> 02:51:36,640
it out um so yeah in terms of detection

3255
02:51:36,640 --> 02:51:38,720
um there's a kind of two broad areas

3256
02:51:38,720 --> 02:51:40,479
that you can look at detecting attackers

3257
02:51:40,479 --> 02:51:42,160
and then also develop detecting you know

3258
02:51:42,160 --> 02:51:44,399
just honest misuse of credentials um so

3259
02:51:44,399 --> 02:51:46,319
canary tokens are another free tool you

3260
02:51:46,319 --> 02:51:47,840
can use you can generate you know things

3261
02:51:47,840 --> 02:51:49,680
that are actual live aws credentials

3262
02:51:49,680 --> 02:51:51,600
private keys et cetera and then register

3263
02:51:51,600 --> 02:51:53,199
a web hook and it will call back to that

3264
02:51:53,199 --> 02:51:55,359
web hook when that thing gets hit

3265
02:51:55,359 --> 02:51:56,800
create as many as you like my favorite

3266
02:51:56,800 --> 02:51:58,239
is like generate them and then put them

3267
02:51:58,239 --> 02:52:00,800
in the aws credentials file of a user on

3268
02:52:00,800 --> 02:52:02,640
disk that should never be accessed so

3269
02:52:02,640 --> 02:52:04,000
someone who's snooping around an

3270
02:52:04,000 --> 02:52:05,680
attacker or a malicious insider will

3271
02:52:05,680 --> 02:52:07,760
often trigger those and that in my

3272
02:52:07,760 --> 02:52:08,880
personal experience has absolutely

3273
02:52:08,880 --> 02:52:10,399
caught red teams that i've been

3274
02:52:10,399 --> 02:52:12,880
defending against um there's a couple

3275
02:52:12,880 --> 02:52:13,840
other ones there yeah detecting

3276
02:52:13,840 --> 02:52:15,359
credential compromise in aws by will

3277
02:52:15,359 --> 02:52:18,399
bankston 2019 great talk um a lot of the

3278
02:52:18,399 --> 02:52:19,760
takeaways from that talk have now

3279
02:52:19,760 --> 02:52:22,080
actually been integrated into guard duty

3280
02:52:22,080 --> 02:52:24,160
and the cloud native ids

3281
02:52:24,160 --> 02:52:25,760
but they talk about things like hey yeah

3282
02:52:25,760 --> 02:52:27,199
we have zero trust networks but there's

3283
02:52:27,199 --> 02:52:29,120
still kind of a trusted ip range which

3284
02:52:29,120 --> 02:52:31,439
aws machine should be calling from aws

3285
02:52:31,439 --> 02:52:32,960
if it calls from outside of that it's

3286
02:52:32,960 --> 02:52:35,120
fishy um impossible travel uh things

3287
02:52:35,120 --> 02:52:37,040
like that um a really quick and dirty

3288
02:52:37,040 --> 02:52:38,399
one which uh yeah if you're on a

3289
02:52:38,399 --> 02:52:39,439
consulting engagement for a couple of

3290
02:52:39,439 --> 02:52:41,840
weeks uh put put your slack alias as

3291
02:52:41,840 --> 02:52:44,319
akia or begin rsa private key and you'll

3292
02:52:44,319 --> 02:52:46,479
get pinged as if you're at notified

3293
02:52:46,479 --> 02:52:48,000
whenever someone dumps these things in

3294
02:52:48,000 --> 02:52:49,359
and they show up all the time in

3295
02:52:49,359 --> 02:52:51,600
snippets and pages you will be disgusted

3296
02:52:51,600 --> 02:52:53,040
but it really does happen wait a minute

3297
02:52:53,040 --> 02:52:54,880
french are you saying you set your slack

3298
02:52:54,880 --> 02:52:57,840
username to rsa begin private key so if

3299
02:52:57,840 --> 02:53:00,560
a developer ever posts rsa begin private

3300
02:53:00,560 --> 02:53:02,720
key you get at mention that's exactly it

3301
02:53:02,720 --> 02:53:05,359
you are the most devious blue team that

3302
02:53:05,359 --> 02:53:06,880
i've ever met

3303
02:53:06,880 --> 02:53:08,319
it's it's quick and dirty but it

3304
02:53:08,319 --> 02:53:11,120
genuinely works um uh so what do you do

3305
02:53:11,120 --> 02:53:12,239
with one sort of found so you get these

3306
02:53:12,239 --> 02:53:13,439
alerts use the same techniques as the

3307
02:53:13,439 --> 02:53:16,239
attackers um so usability is security or

3308
02:53:16,239 --> 02:53:19,439
security um uh if you will um which you

3309
02:53:19,439 --> 02:53:20,640
shouldn't

3310
02:53:20,640 --> 02:53:22,880
but yeah so uh typically one thing that

3311
02:53:22,880 --> 02:53:24,160
in each of the organizations i've drawn

3312
02:53:24,160 --> 02:53:26,479
i've gone and built pretty quickly a a

3313
02:53:26,479 --> 02:53:28,560
yeah a femoral sharing thing so like a

3314
02:53:28,560 --> 02:53:31,279
burn paper it's a one link use password

3315
02:53:31,279 --> 02:53:32,720
um there are some open source tools that

3316
02:53:32,720 --> 02:53:34,399
did it uh they haven't been maintained

3317
02:53:34,399 --> 02:53:36,000
in years but thankfully one password has

3318
02:53:36,000 --> 02:53:37,199
come out with a feature where it's a

3319
02:53:37,199 --> 02:53:39,040
click once use this link first time you

3320
02:53:39,040 --> 02:53:40,000
use it

3321
02:53:40,000 --> 02:53:41,279
you get the secret second time you use

3322
02:53:41,279 --> 02:53:43,040
it 404s

3323
02:53:43,040 --> 02:53:44,880
make it really easy for your devs to

3324
02:53:44,880 --> 02:53:46,000
have an option they'll go and use

3325
02:53:46,000 --> 02:53:47,920
securely and that actually cuts down on

3326
02:53:47,920 --> 02:53:49,840
most of the general secret storage use

3327
02:53:49,840 --> 02:53:51,840
cases for individual auth and also

3328
02:53:51,840 --> 02:53:53,279
machine work like they shouldn't be

3329
02:53:53,279 --> 02:53:55,439
leaving those systems but hey at least

3330
02:53:55,439 --> 02:53:56,880
there's a slightly better option it's uh

3331
02:53:56,880 --> 02:53:58,720
it's pragmatic um

3332
02:53:58,720 --> 02:54:00,560
so let's talk about some more holistic

3333
02:54:00,560 --> 02:54:02,080
ways that we can solve this we created

3334
02:54:02,080 --> 02:54:03,439
this general spectrum initially it was

3335
02:54:03,439 --> 02:54:04,720
like good better best but that's

3336
02:54:04,720 --> 02:54:06,160
obviously you know

3337
02:54:06,160 --> 02:54:07,920
much an oversimplification you know

3338
02:54:07,920 --> 02:54:09,920
maturity is a big oversimplification as

3339
02:54:09,920 --> 02:54:11,359
well so we had complexity versus

3340
02:54:11,359 --> 02:54:12,960
features and to run through these

3341
02:54:12,960 --> 02:54:14,720
quickly at one end of the spectrum is

3342
02:54:14,720 --> 02:54:17,439
just tweeting out your password publicly

3343
02:54:17,439 --> 02:54:19,199
haven't tried this one give it a shot

3344
02:54:19,199 --> 02:54:20,399
let me know how it goes wait wait so

3345
02:54:20,399 --> 02:54:21,920
just do i understand you're saying the

3346
02:54:21,920 --> 02:54:24,560
most simple way is to tweet my password

3347
02:54:24,560 --> 02:54:25,760
i'm just taking notes here that's it

3348
02:54:25,760 --> 02:54:26,720
yeah yeah

3349
02:54:26,720 --> 02:54:28,800
yeah all right cool uh next up is is one

3350
02:54:28,800 --> 02:54:30,479
small step in repo encryption um so

3351
02:54:30,479 --> 02:54:32,319
there's tools black box get transcript

3352
02:54:32,319 --> 02:54:34,239
get crypts heaps of options we're also

3353
02:54:34,239 --> 02:54:35,600
throwing in the bucket there you know

3354
02:54:35,600 --> 02:54:37,520
native approaches ansible vault uh

3355
02:54:37,520 --> 02:54:39,359
travis how they encrypt secrets in line

3356
02:54:39,359 --> 02:54:41,279
kubernetes sealed secrets you basically

3357
02:54:41,279 --> 02:54:43,279
encrypt a file in a repo and then commit

3358
02:54:43,279 --> 02:54:45,120
it um it's pretty easy there's not a lot

3359
02:54:45,120 --> 02:54:46,800
of integrations the downside is you're

3360
02:54:46,800 --> 02:54:48,239
now sharing that secret state out to

3361
02:54:48,239 --> 02:54:50,000
each of your developers machines you

3362
02:54:50,000 --> 02:54:51,279
know rotation revocation becomes a

3363
02:54:51,279 --> 02:54:53,439
little bit more complex but i absolutely

3364
02:54:53,439 --> 02:54:55,439
have seen large you know

3365
02:54:55,439 --> 02:54:58,080
fang style companies uh go and implement

3366
02:54:58,080 --> 02:54:59,600
this successfully at scale so it is a

3367
02:54:59,600 --> 02:55:01,439
possibility it just requires some some

3368
02:55:01,439 --> 02:55:03,520
engineering kind of middle of the stack

3369
02:55:03,520 --> 02:55:05,120
um using your cloud native secrets

3370
02:55:05,120 --> 02:55:07,439
manager um yeah in these cases yeah was

3371
02:55:07,439 --> 02:55:08,560
there a trust but hey we're still in the

3372
02:55:08,560 --> 02:55:10,239
aws ecosystem or we're still in gcp

3373
02:55:10,239 --> 02:55:13,120
ecosystem honestly like the yeah uh

3374
02:55:13,120 --> 02:55:14,640
spoiler alert this this is you know

3375
02:55:14,640 --> 02:55:17,680
usually the right case um uh but uh yeah

3376
02:55:17,680 --> 02:55:18,960
yeah if you're relying and you already

3377
02:55:18,960 --> 02:55:20,800
have to trust this cloud provider trust

3378
02:55:20,800 --> 02:55:22,319
them for the secrets as well and then

3379
02:55:22,319 --> 02:55:23,840
the top end of the stack is having a

3380
02:55:23,840 --> 02:55:25,600
dedicated application server that uh

3381
02:55:25,600 --> 02:55:27,359
handles secrets the benefit there is you

3382
02:55:27,359 --> 02:55:28,720
get a lot more native integrations you

3383
02:55:28,720 --> 02:55:30,080
can do some complex logic around

3384
02:55:30,080 --> 02:55:32,239
revocation short ttls have deep

3385
02:55:32,239 --> 02:55:33,680
integrations with you know he cloud

3386
02:55:33,680 --> 02:55:36,000
providers you can generate temporary

3387
02:55:36,000 --> 02:55:37,359
credit creds in in a whole bunch of

3388
02:55:37,359 --> 02:55:39,199
different use cases um but they come

3389
02:55:39,199 --> 02:55:41,199
with a higher cost right so you know you

3390
02:55:41,199 --> 02:55:42,800
need a team to run it i previously

3391
02:55:42,800 --> 02:55:45,199
managed a team of eight engineers um

3392
02:55:45,199 --> 02:55:46,560
and yeah part of our job was managing

3393
02:55:46,560 --> 02:55:48,720
this and it took a lot of time um so

3394
02:55:48,720 --> 02:55:51,279
it's not not cheap um so i've broken

3395
02:55:51,279 --> 02:55:52,960
this down in a very rigorous 18-page

3396
02:55:52,960 --> 02:55:54,479
presentation around the efficacy of

3397
02:55:54,479 --> 02:55:56,239
different tools got a peer reviewed in a

3398
02:55:56,239 --> 02:55:58,640
meta study we broke it down in emoji

3399
02:55:58,640 --> 02:55:59,840
form because that's the most effective

3400
02:55:59,840 --> 02:56:01,520
way that you can possibly ever frenchy

3401
02:56:01,520 --> 02:56:02,720
i'm going to i'm going to stop you right

3402
02:56:02,720 --> 02:56:05,279
there yeah i am very confused yep i've

3403
02:56:05,279 --> 02:56:07,680
just heard 17 different places and ways

3404
02:56:07,680 --> 02:56:09,439
that i should store my secrets could we

3405
02:56:09,439 --> 02:56:11,120
just is there any chance you could just

3406
02:56:11,120 --> 02:56:13,279
tell me where i should store my secrets

3407
02:56:13,279 --> 02:56:14,880
honestly probably like the takeaway if

3408
02:56:14,880 --> 02:56:15,920
you really want a simple thing if you

3409
02:56:15,920 --> 02:56:17,359
want to know nothing else about sequence

3410
02:56:17,359 --> 02:56:18,399
management use your cloud secrets

3411
02:56:18,399 --> 02:56:19,920
manager and hey it's on the internet it

3412
02:56:19,920 --> 02:56:21,040
doesn't exist unless there's a big red

3413
02:56:21,040 --> 02:56:22,960
circle around it this is probably the

3414
02:56:22,960 --> 02:56:24,800
takeaway for a lot of defenders my cloud

3415
02:56:24,800 --> 02:56:26,560
provider i like it let's do it yeah to

3416
02:56:26,560 --> 02:56:28,160
be overly prescriptive and have wavy you

3417
02:56:28,160 --> 02:56:29,439
know this is probably the right call for

3418
02:56:29,439 --> 02:56:31,760
you um so prevention we'll we'll blast

3419
02:56:31,760 --> 02:56:33,359
through this uh because we're at time um

3420
02:56:33,359 --> 02:56:36,000
uh so uh broadly you wanna yeah reduce

3421
02:56:36,000 --> 02:56:37,760
uh who has access to what both in terms

3422
02:56:37,760 --> 02:56:39,600
of what access those credentials have

3423
02:56:39,600 --> 02:56:41,680
there's gcp role recommender aws access

3424
02:56:41,680 --> 02:56:43,920
advisor scope you want to minimize the

3425
02:56:43,920 --> 02:56:45,600
scope of what credentials have access to

3426
02:56:45,600 --> 02:56:47,120
i've popped an organization a pen test

3427
02:56:47,120 --> 02:56:49,680
it was over in about 30 minutes because

3428
02:56:49,680 --> 02:56:50,960
for an application that only needed to

3429
02:56:50,960 --> 02:56:53,920
send email they gave me admin aws keys

3430
02:56:53,920 --> 02:56:57,040
great um uh so reduce the sprawl of what

3431
02:56:57,040 --> 02:56:58,960
your applications actually need and then

3432
02:56:58,960 --> 02:57:01,120
who has access to those uh those creds

3433
02:57:01,120 --> 02:57:02,319
as well

3434
02:57:02,319 --> 02:57:04,080
and then broadly like the spooky problem

3435
02:57:04,080 --> 02:57:05,600
is fundamentally an identity problem

3436
02:57:05,600 --> 02:57:07,680
there are some frameworks out there um

3437
02:57:07,680 --> 02:57:10,000
uh yeah spiffy is one yeah they're mtls

3438
02:57:10,000 --> 02:57:11,199
based approaches where you take an

3439
02:57:11,199 --> 02:57:13,600
approach but that that's complex um and

3440
02:57:13,600 --> 02:57:15,600
uh yeah it's usually beyond the scope of

3441
02:57:15,600 --> 02:57:17,520
a lot of organizations these days if you

3442
02:57:17,520 --> 02:57:19,439
had that solid identity framework yes

3443
02:57:19,439 --> 02:57:20,800
you absolutely can move to the ultimate

3444
02:57:20,800 --> 02:57:22,800
solution here which is really short ttls

3445
02:57:22,800 --> 02:57:23,920
doesn't matter if you credential get

3446
02:57:23,920 --> 02:57:26,800
leaks if it only lives for five minutes

3447
02:57:26,800 --> 02:57:29,040
um but yeah we're a fair way off that

3448
02:57:29,040 --> 02:57:30,080
and that's certainly the future that

3449
02:57:30,080 --> 02:57:32,000
we'd like to get to um so what are the

3450
02:57:32,000 --> 02:57:33,359
takeaways from this

3451
02:57:33,359 --> 02:57:36,479
well look so i think if you are an

3452
02:57:36,479 --> 02:57:38,880
offensive security engineer and you are

3453
02:57:38,880 --> 02:57:40,479
concerned that your blue team just

3454
02:57:40,479 --> 02:57:42,239
rolled out this new initiative to switch

3455
02:57:42,239 --> 02:57:44,560
over to a zero trust model i'm here to

3456
02:57:44,560 --> 02:57:46,640
provide comfort and to let you know that

3457
02:57:46,640 --> 02:57:49,439
you have no concerns for job security

3458
02:57:49,439 --> 02:57:51,359
you are

3459
02:57:51,359 --> 02:57:52,960
you're in a pretty good spot we've got

3460
02:57:52,960 --> 02:57:55,359
this green fields new way of attacking

3461
02:57:55,359 --> 02:57:57,920
that in a lot of ways is easier doesn't

3462
02:57:57,920 --> 02:57:59,840
have all the same malware dropping is

3463
02:57:59,840 --> 02:58:02,640
just talking to the public apis and and

3464
02:58:02,640 --> 02:58:05,120
is ripe for the taking at the moment yep

3465
02:58:05,120 --> 02:58:06,239
and as a defender even though we're

3466
02:58:06,239 --> 02:58:07,439
paying a bit of a bleak picture there

3467
02:58:07,439 --> 02:58:09,199
are some solutions there uh and so the

3468
02:58:09,199 --> 02:58:10,560
takeaway is hey there's also some good

3469
02:58:10,560 --> 02:58:12,479
job security there as well um but

3470
02:58:12,479 --> 02:58:13,920
awesome thank you so much here's the

3471
02:58:13,920 --> 02:58:15,359
credit for the slides

3472
02:58:15,359 --> 02:58:16,399
and then

3473
02:58:16,399 --> 02:58:17,840
that's us thanks so much for listening

3474
02:58:17,840 --> 02:58:27,840
[Applause]

3475
02:58:27,840 --> 02:58:29,359
thank you very much

3476
02:58:29,359 --> 02:58:32,319
now get off my stage

3477
02:58:33,680 --> 02:58:36,000
you can do the worm if you want that's

3478
02:58:36,000 --> 02:58:37,439
i think we probably should have had some

3479
02:58:37,439 --> 02:58:38,960
like health and safety form that he had

3480
02:58:38,960 --> 02:58:40,239
to fill him before he did the worm

3481
02:58:40,239 --> 02:58:41,840
because like we're liable if he does his

3482
02:58:41,840 --> 02:58:42,880
back out

3483
02:58:42,880 --> 02:58:44,560
so

3484
02:58:44,560 --> 02:58:47,199
the great hacker halva flake uh did a

3485
02:58:47,199 --> 02:58:48,640
talk not so long ago where he talked

3486
02:58:48,640 --> 02:58:50,880
about the paradox of cheap complexity

3487
02:58:50,880 --> 02:58:53,120
and his thesis is

3488
02:58:53,120 --> 02:58:54,880
that security and complexity are

3489
02:58:54,880 --> 02:58:56,479
fundamentally related the more complex

3490
02:58:56,479 --> 02:58:57,680
something is the more things that go

3491
02:58:57,680 --> 02:58:59,120
wrong

3492
02:58:59,120 --> 02:59:00,239
and

3493
02:59:00,239 --> 02:59:02,640
complexity is now

3494
02:59:02,640 --> 02:59:04,960
weirdly cheap and this paradox of cheap

3495
02:59:04,960 --> 02:59:07,279
complexity means that because an arm

3496
02:59:07,279 --> 02:59:10,720
cortex m0 costs sense it is cheaper to

3497
02:59:10,720 --> 02:59:12,080
put a general purpose computer in a

3498
02:59:12,080 --> 02:59:14,160
device and have it pretend to be an

3499
02:59:14,160 --> 02:59:16,319
analog circuit or a light switch or

3500
02:59:16,319 --> 02:59:18,479
whatever else than it is to build a

3501
02:59:18,479 --> 02:59:21,199
special purpose machine that only does

3502
02:59:21,199 --> 02:59:22,800
the one thing you want so we put general

3503
02:59:22,800 --> 02:59:25,279
purpose computers in everything

3504
02:59:25,279 --> 02:59:27,199
and then we wonder why

3505
02:59:27,199 --> 02:59:30,160
it goes horribly wrong

3506
02:59:31,040 --> 02:59:33,600
and now we have the internet of things

3507
02:59:33,600 --> 02:59:36,479
our next talk mr peter lambrigsen

3508
02:59:36,479 --> 02:59:39,600
would like to talk to you about

3509
02:59:39,600 --> 02:59:41,120
well

3510
02:59:41,120 --> 02:59:43,439
if you hook your pets up to the cloud

3511
02:59:43,439 --> 02:59:46,160
this this is this is what you get ladies

3512
02:59:46,160 --> 02:59:47,930
gentlemen mr peter lambrikson

3513
02:59:47,930 --> 02:59:51,430
[Applause]

3514
02:59:56,880 --> 02:59:59,680
right sorry about this

3515
02:59:59,680 --> 03:00:02,640
iot your pit

3516
03:00:02,640 --> 03:00:05,680
what could possibly go wrong

3517
03:00:05,680 --> 03:00:07,600
so a little bit about me my name is

3518
03:00:07,600 --> 03:00:09,199
peter lambreckson i've been a

3519
03:00:09,199 --> 03:00:10,640
wellington-based developer for quite a

3520
03:00:10,640 --> 03:00:13,439
while focused on identity and apis i've

3521
03:00:13,439 --> 03:00:15,199
worked for a number of different

3522
03:00:15,199 --> 03:00:16,720
security organizations and i've always

3523
03:00:16,720 --> 03:00:18,640
been really interested in privacy

3524
03:00:18,640 --> 03:00:20,239
personally i love home automation

3525
03:00:20,239 --> 03:00:21,279
because

3526
03:00:21,279 --> 03:00:22,720
if you can automate your home and

3527
03:00:22,720 --> 03:00:25,199
improve things you know you can actually

3528
03:00:25,199 --> 03:00:26,640
have things happening automatically and

3529
03:00:26,640 --> 03:00:28,319
have control over it but at the same

3530
03:00:28,319 --> 03:00:30,399
time i like to make sure that my data

3531
03:00:30,399 --> 03:00:31,920
isn't actually leaving my home and going

3532
03:00:31,920 --> 03:00:33,520
everywhere into the world so that's why

3533
03:00:33,520 --> 03:00:35,920
i like to which is why i like home uh uh

3534
03:00:35,920 --> 03:00:37,680
home assistant

3535
03:00:37,680 --> 03:00:39,520
well another another times i've worked

3536
03:00:39,520 --> 03:00:41,199
and worked for the telco government and

3537
03:00:41,199 --> 03:00:43,120
a number of other agencies so just

3538
03:00:43,120 --> 03:00:44,399
generally i've been doing this for a

3539
03:00:44,399 --> 03:00:46,399
little bit of why a little while and i

3540
03:00:46,399 --> 03:00:48,399
also have quite an amazing wife who's

3541
03:00:48,399 --> 03:00:49,760
somewhere in the audience and my

3542
03:00:49,760 --> 03:00:51,600
children are here today to thoroughly

3543
03:00:51,600 --> 03:00:53,920
mock me after the end of this talk

3544
03:00:53,920 --> 03:00:55,840
so a bit of a history about how i got to

3545
03:00:55,840 --> 03:00:57,920
this bizarre stage of having to do this

3546
03:00:57,920 --> 03:01:00,000
presentation at gbcon or highwaycon

3547
03:01:00,000 --> 03:01:01,199
sorry

3548
03:01:01,199 --> 03:01:03,840
i have a very old grumpy cat and my

3549
03:01:03,840 --> 03:01:05,600
children have been complaining to me for

3550
03:01:05,600 --> 03:01:06,720
a number of years saying that we should

3551
03:01:06,720 --> 03:01:08,560
get a dog to add to the family

3552
03:01:08,560 --> 03:01:10,720
we get a dog awesome the cat however

3553
03:01:10,720 --> 03:01:12,319
does not like the dog

3554
03:01:12,319 --> 03:01:14,239
and the dog well he's a little bit of a

3555
03:01:14,239 --> 03:01:16,399
gut so he quite likes to eat any of the

3556
03:01:16,399 --> 03:01:18,960
food including the cat's food

3557
03:01:18,960 --> 03:01:20,479
wherever it's sitting so we need to get

3558
03:01:20,479 --> 03:01:22,479
a new feeder to stop the dog from eating

3559
03:01:22,479 --> 03:01:24,080
all the cat food and the cat doesn't die

3560
03:01:24,080 --> 03:01:25,359
of starvation

3561
03:01:25,359 --> 03:01:26,880
and another problem that comes from

3562
03:01:26,880 --> 03:01:28,720
having a new animal in the house is

3563
03:01:28,720 --> 03:01:30,080
previously the cat would fit through the

3564
03:01:30,080 --> 03:01:32,080
cat door but the dog's not going to fit

3565
03:01:32,080 --> 03:01:33,760
through the cat door so i needed to do

3566
03:01:33,760 --> 03:01:35,760
it to upgrade going from a cat tour to a

3567
03:01:35,760 --> 03:01:37,840
dog door so then both of them can fit

3568
03:01:37,840 --> 03:01:38,960
through

3569
03:01:38,960 --> 03:01:40,960
and at the same time like oh brilliant

3570
03:01:40,960 --> 03:01:42,880
let's get some iot version of this

3571
03:01:42,880 --> 03:01:44,399
because then hey

3572
03:01:44,399 --> 03:01:46,319
that's going to be great isn't it and

3573
03:01:46,319 --> 03:01:48,080
then i also want to run it exclusively

3574
03:01:48,080 --> 03:01:50,080
inside my home again for the privacy

3575
03:01:50,080 --> 03:01:51,600
reasons

3576
03:01:51,600 --> 03:01:54,080
so this is how it kind of started

3577
03:01:54,080 --> 03:01:55,359
i had my cat

3578
03:01:55,359 --> 03:01:57,359
he wasn't very happy and the dog well he

3579
03:01:57,359 --> 03:01:59,199
was happy as everything and this is how

3580
03:01:59,199 --> 03:02:01,120
it's going

3581
03:02:01,120 --> 03:02:02,319
and these are the bits that i've decided

3582
03:02:02,319 --> 03:02:04,319
hey let's get myself an internet enabled

3583
03:02:04,319 --> 03:02:06,800
uh things from the shore pet

3584
03:02:06,800 --> 03:02:08,239
pet care so these are this is quite a

3585
03:02:08,239 --> 03:02:10,239
common crowd based on the uk they make

3586
03:02:10,239 --> 03:02:12,960
very well really robustly and well-built

3587
03:02:12,960 --> 03:02:14,960
hardware and and then they said right

3588
03:02:14,960 --> 03:02:16,479
well let's internet enable it so you

3589
03:02:16,479 --> 03:02:18,560
have yourself a hub and then a feeder a

3590
03:02:18,560 --> 03:02:21,120
pet door which is how i started

3591
03:02:21,120 --> 03:02:22,000
and then they released some more

3592
03:02:22,000 --> 03:02:24,239
hardware which is called the filaqua

3593
03:02:24,239 --> 03:02:25,840
which is just the terrible name whereas

3594
03:02:25,840 --> 03:02:26,960
the the internal product name is

3595
03:02:26,960 --> 03:02:28,720
poseidon and i've emailed them a couple

3596
03:02:28,720 --> 03:02:29,920
of times saying why on earth did you

3597
03:02:29,920 --> 03:02:31,279
call it the fee liquor that is the

3598
03:02:31,279 --> 03:02:33,680
lamest name in the history of all

3599
03:02:33,680 --> 03:02:36,160
product names and you went for poseidon

3600
03:02:36,160 --> 03:02:37,840
what is wrong with you people

3601
03:02:37,840 --> 03:02:38,640
and

3602
03:02:38,640 --> 03:02:40,800
i also happen to buy a cat flap because

3603
03:02:40,800 --> 03:02:43,760
i got problems um so here we have my red

3604
03:02:43,760 --> 03:02:47,520
team doing a zero day pin test

3605
03:02:48,479 --> 03:02:50,239
and he can't any and he succeeded he

3606
03:02:50,239 --> 03:02:52,160
managed to get into the home and it and

3607
03:02:52,160 --> 03:02:54,720
it was all downhill from then on in

3608
03:02:54,720 --> 03:02:56,479
and this is how it has been deployed

3609
03:02:56,479 --> 03:02:57,920
inside my home

3610
03:02:57,920 --> 03:02:59,199
i have a dog

3611
03:02:59,199 --> 03:03:00,960
he goes through the pet door

3612
03:03:00,960 --> 03:03:03,760
it talks a pseudo zigbee type wi-fi

3613
03:03:03,760 --> 03:03:06,000
protocol which is 802.15.4

3614
03:03:06,000 --> 03:03:07,199
to my hub

3615
03:03:07,199 --> 03:03:09,359
hub talks over the internet i'm not sure

3616
03:03:09,359 --> 03:03:10,960
about that off to a couple of different

3617
03:03:10,960 --> 03:03:12,800
sites one being sure hub which is the

3618
03:03:12,800 --> 03:03:14,880
product that makes it and also off to

3619
03:03:14,880 --> 03:03:16,560
mqtt

3620
03:03:16,560 --> 03:03:18,239
what i really want to have is i want to

3621
03:03:18,239 --> 03:03:19,279
have the hub

3622
03:03:19,279 --> 03:03:21,199
talking to only infrastructure inside my

3623
03:03:21,199 --> 03:03:23,600
home i want it talking to a little mini

3624
03:03:23,600 --> 03:03:25,279
web server and also talking to my

3625
03:03:25,279 --> 03:03:27,520
internal mqtt broker so again everything

3626
03:03:27,520 --> 03:03:29,359
sits inside my home so i can control

3627
03:03:29,359 --> 03:03:31,040
where this data goes because i don't

3628
03:03:31,040 --> 03:03:33,120
want all of my personal cats feeding

3629
03:03:33,120 --> 03:03:35,040
habits and the fact that my dog likes to

3630
03:03:35,040 --> 03:03:36,880
leave at 3am in the morning to go off to

3631
03:03:36,880 --> 03:03:38,720
the do his business i don't need that

3632
03:03:38,720 --> 03:03:40,000
going off to the cloud i'd like it

3633
03:03:40,000 --> 03:03:41,920
internally inside my home

3634
03:03:41,920 --> 03:03:43,680
so then i'm like right so how does this

3635
03:03:43,680 --> 03:03:44,800
thing work

3636
03:03:44,800 --> 03:03:46,720
it boots up and it starts to talk to

3637
03:03:46,720 --> 03:03:49,920
this endpoint called hub.api.shawhub.io

3638
03:03:49,920 --> 03:03:51,600
as we see here we have the hub

3639
03:03:51,600 --> 03:03:53,120
talking after the internet

3640
03:03:53,120 --> 03:03:54,560
surely they checked the certificate

3641
03:03:54,560 --> 03:03:56,479
right

3642
03:03:56,479 --> 03:03:57,600
no

3643
03:03:57,600 --> 03:03:58,720
well

3644
03:03:58,720 --> 03:04:00,560
well they didn't to begin with and then

3645
03:04:00,560 --> 03:04:02,080
a little bit later on after a couple of

3646
03:04:02,080 --> 03:04:04,160
firmware updates for some reason they

3647
03:04:04,160 --> 03:04:06,080
started checking the certificate was

3648
03:04:06,080 --> 03:04:09,279
legitimate and at the same time as well

3649
03:04:09,279 --> 03:04:10,800
they pushed out firmware to all these

3650
03:04:10,800 --> 03:04:12,000
other hubs across the world because

3651
03:04:12,000 --> 03:04:13,120
there's a couple hundred thousand of

3652
03:04:13,120 --> 03:04:15,520
them but it was never pushed to mine

3653
03:04:15,520 --> 03:04:17,359
i'm not sure why they did that

3654
03:04:17,359 --> 03:04:19,120
but i may have posted on home assistant

3655
03:04:19,120 --> 03:04:20,640
saying that i've been doing all of this

3656
03:04:20,640 --> 03:04:21,920
and around that time was when the

3657
03:04:21,920 --> 03:04:24,880
firmware update came out

3658
03:04:27,520 --> 03:04:29,040
and then oops then i've gone too far and

3659
03:04:29,040 --> 03:04:31,120
then around new year's eve 2020 because

3660
03:04:31,120 --> 03:04:32,640
this has been a bit of a journey for me

3661
03:04:32,640 --> 03:04:34,800
and uh the rest of my family will attest

3662
03:04:34,800 --> 03:04:36,160
that i've been doing this probably a

3663
03:04:36,160 --> 03:04:37,359
little bit too long

3664
03:04:37,359 --> 03:04:38,239
um

3665
03:04:38,239 --> 03:04:40,080
the surepet system so the cloud system

3666
03:04:40,080 --> 03:04:41,199
decides to

3667
03:04:41,199 --> 03:04:43,199
crap itself quite frankly and i was like

3668
03:04:43,199 --> 03:04:45,199
hmm this is actually a great opportunity

3669
03:04:45,199 --> 03:04:46,560
i might find other like-minded

3670
03:04:46,560 --> 03:04:48,560
individuals on twitter who wants to find

3671
03:04:48,560 --> 03:04:50,160
a home-based solution and reverse

3672
03:04:50,160 --> 03:04:52,720
engineer this whole thing

3673
03:04:52,720 --> 03:04:54,560
and then i'm like oh brilliant i keep on

3674
03:04:54,560 --> 03:04:57,119
going too far

3675
03:04:59,279 --> 03:05:00,880
i'm like right i'm going to do some me

3676
03:05:00,880 --> 03:05:03,279
in the middle i have my hub and i have

3677
03:05:03,279 --> 03:05:04,479
me

3678
03:05:04,479 --> 03:05:06,239
and then i have the internet so i'm like

3679
03:05:06,239 --> 03:05:07,760
okay i can start to trace out all of the

3680
03:05:07,760 --> 03:05:09,520
traffic as it goes between the hub to

3681
03:05:09,520 --> 03:05:11,439
the internet to see what happens

3682
03:05:11,439 --> 03:05:13,680
and what happens there it does a post to

3683
03:05:13,680 --> 03:05:15,520
this endpoint which it doesn't validate

3684
03:05:15,520 --> 03:05:16,640
certificate

3685
03:05:16,640 --> 03:05:17,840
awesome

3686
03:05:17,840 --> 03:05:19,600
and then it responds back

3687
03:05:19,600 --> 03:05:21,199
with what kind of looks like a

3688
03:05:21,199 --> 03:05:23,680
certificate i'm like why would you send

3689
03:05:23,680 --> 03:05:25,199
a request off to the internet and then

3690
03:05:25,199 --> 03:05:27,279
you get a certificate back

3691
03:05:27,279 --> 03:05:29,120
and i wonder if they check that

3692
03:05:29,120 --> 03:05:31,439
certificate as well

3693
03:05:31,439 --> 03:05:33,600
yeah

3694
03:05:33,680 --> 03:05:34,960
so this is how it currently kind of

3695
03:05:34,960 --> 03:05:37,600
works what happens is it makes a request

3696
03:05:37,600 --> 03:05:39,199
off to the internet gets a response back

3697
03:05:39,199 --> 03:05:41,040
which includes a certificate and then

3698
03:05:41,040 --> 03:05:42,800
the hub itself makes a client

3699
03:05:42,800 --> 03:05:45,680
certificate request off to aws to say

3700
03:05:45,680 --> 03:05:47,520
hey i'd like to go and talk and we can

3701
03:05:47,520 --> 03:05:49,439
start doing a negotiation and if anyone

3702
03:05:49,439 --> 03:05:50,640
knows anything about how client

3703
03:05:50,640 --> 03:05:52,800
certificates work effectively there's a

3704
03:05:52,800 --> 03:05:54,960
key to unlock your certificate and if

3705
03:05:54,960 --> 03:05:56,640
you don't have that key

3706
03:05:56,640 --> 03:05:57,840
you're going be

3707
03:05:57,840 --> 03:05:59,439
 out of luck

3708
03:05:59,439 --> 03:06:01,120
but anyway i can have us connecting to

3709
03:06:01,120 --> 03:06:03,279
my home mqtt broker and i start seeing

3710
03:06:03,279 --> 03:06:04,560
some broker and start seeing some

3711
03:06:04,560 --> 03:06:07,279
messages coming in i'm like brilliant

3712
03:06:07,279 --> 03:06:09,680
all of this data coming in it just makes

3713
03:06:09,680 --> 03:06:11,680
so much sense but that's right we'll

3714
03:06:11,680 --> 03:06:14,160
figure this one out as we go along

3715
03:06:14,160 --> 03:06:16,000
and i'm like this is how the the flow is

3716
03:06:16,000 --> 03:06:16,960
going to work

3717
03:06:16,960 --> 03:06:18,560
it comes in

3718
03:06:18,560 --> 03:06:20,000
comes by this brilliant app called polar

3719
03:06:20,000 --> 03:06:22,000
proxy and polar proxy is fantastic

3720
03:06:22,000 --> 03:06:23,840
because it will set up a listening port

3721
03:06:23,840 --> 03:06:25,520
for you

3722
03:06:25,520 --> 03:06:26,960
take a copy of all of the data as it

3723
03:06:26,960 --> 03:06:28,560
goes through and then writes it out to a

3724
03:06:28,560 --> 03:06:30,000
pcap file which is a file that i can

3725
03:06:30,000 --> 03:06:32,560
easily load up in wireshark easily have

3726
03:06:32,560 --> 03:06:34,080
a look at all of the data as it comes it

3727
03:06:34,080 --> 03:06:36,160
comes in and out but the problem is the

3728
03:06:36,160 --> 03:06:38,960
second request that goes off to aws that

3729
03:06:38,960 --> 03:06:40,880
uses a certificate and unless i have the

3730
03:06:40,880 --> 03:06:43,040
passwords to for the certificate i won't

3731
03:06:43,040 --> 03:06:44,479
be able to get all the way through so

3732
03:06:44,479 --> 03:06:45,920
therefore polar proxy is good for the

3733
03:06:45,920 --> 03:06:49,520
first request but not the second request

3734
03:06:49,520 --> 03:06:51,040
and it's just like i need to be able to

3735
03:06:51,040 --> 03:06:52,720
find the key

3736
03:06:52,720 --> 03:06:53,600
so

3737
03:06:53,600 --> 03:06:55,040
we might have a bit of a quick feeder

3738
03:06:55,040 --> 03:06:58,239
demo and for my feeder demo

3739
03:06:58,239 --> 03:07:00,720
oh dear

3740
03:07:00,720 --> 03:07:02,399
yeah yeah

3741
03:07:02,399 --> 03:07:03,770
yeah

3742
03:07:03,770 --> 03:07:09,429
[Applause]

3743
03:07:10,080 --> 03:07:11,199
um

3744
03:07:11,199 --> 03:07:13,600
i'm really sorry i'm really really sorry

3745
03:07:13,600 --> 03:07:15,840
you know

3746
03:07:15,840 --> 03:07:18,479
yep yep what was i thinking what was i

3747
03:07:18,479 --> 03:07:22,640
thinking so then we in here and we can

3748
03:07:22,640 --> 03:07:24,160
actually see that up on screen this is

3749
03:07:24,160 --> 03:07:25,520
home assistant as it's all been

3750
03:07:25,520 --> 03:07:27,359
configured now

3751
03:07:27,359 --> 03:07:28,880
we have the feeder

3752
03:07:28,880 --> 03:07:30,880
are we going to have someone here

3753
03:07:30,880 --> 03:07:34,319
we might have a moodle storm

3754
03:07:34,319 --> 03:07:37,920
here to do some tests and oh my goodness

3755
03:07:37,920 --> 03:07:40,880
he has opened up the uh the thing and

3756
03:07:40,880 --> 03:07:44,000
look if we see up on feed me seymour

3757
03:07:44,000 --> 03:07:46,239
he's gone and opened it up

3758
03:07:46,239 --> 03:07:48,319
and then when he's finished doing his

3759
03:07:48,319 --> 03:07:49,600
feeding

3760
03:07:49,600 --> 03:07:52,319
it decides to close again

3761
03:07:52,319 --> 03:07:54,000
and we'll see up the top there with the

3762
03:07:54,000 --> 03:07:55,760
current left weight after a little bit

3763
03:07:55,760 --> 03:07:56,800
of time

3764
03:07:56,800 --> 03:07:58,960
it might just happen to update

3765
03:07:58,960 --> 03:08:00,479
and close it off

3766
03:08:00,479 --> 03:08:01,760
and of course the demo gods will not

3767
03:08:01,760 --> 03:08:03,199
smile upon me

3768
03:08:03,199 --> 03:08:05,279
because people are doing things

3769
03:08:05,279 --> 03:08:07,439
ah of course oh look at that and look at

3770
03:08:07,439 --> 03:08:09,040
that we've got some sparkles as well

3771
03:08:09,040 --> 03:08:10,560
because all we need in this world is

3772
03:08:10,560 --> 03:08:13,199
some more sparkles maybe moodle storm

3773
03:08:13,199 --> 03:08:15,600
will come up and show me some other

3774
03:08:15,600 --> 03:08:17,359
areas that he could do some tests to see

3775
03:08:17,359 --> 03:08:20,800
whether he can do some more feeding

3776
03:08:21,760 --> 03:08:24,000
and all of a sudden he's closed it and i

3777
03:08:24,000 --> 03:08:25,359
wonder if it's going to oh look there he

3778
03:08:25,359 --> 03:08:27,279
goes he's gone and opened it again i'm

3779
03:08:27,279 --> 03:08:28,800
going to go and take some more stuff out

3780
03:08:28,800 --> 03:08:29,920
of there

3781
03:08:29,920 --> 03:08:31,439
these batteries i always keep on working

3782
03:08:31,439 --> 03:08:32,640
out and if you see up the top there

3783
03:08:32,640 --> 03:08:33,680
we've got some lift weights and the

3784
03:08:33,680 --> 03:08:35,920
right weight so when it closes out we

3785
03:08:35,920 --> 03:08:37,600
get some more messages coming through he

3786
03:08:37,600 --> 03:08:39,120
feeds for a little bit and you know he's

3787
03:08:39,120 --> 03:08:40,880
not a very quick feeder and then all of

3788
03:08:40,880 --> 03:08:42,880
a sudden he goes off

3789
03:08:42,880 --> 03:08:44,800
and then it'll decide to say hey the

3790
03:08:44,800 --> 03:08:47,120
animal's finished eating

3791
03:08:47,120 --> 03:08:49,120
maybe we might get some sparkles again

3792
03:08:49,120 --> 03:08:51,279
who knows and again because this is live

3793
03:08:51,279 --> 03:08:53,359
demos we have the thing transmitting off

3794
03:08:53,359 --> 03:08:55,439
over wireless in this fantastic

3795
03:08:55,439 --> 03:08:57,199
wireless area hey you have some more

3796
03:08:57,199 --> 03:08:59,120
sparkles as well and it's closed off

3797
03:08:59,120 --> 03:09:00,720
again

3798
03:09:00,720 --> 03:09:02,960
thank you moodle storm

3799
03:09:02,960 --> 03:09:05,278
no

3800
03:09:07,840 --> 03:09:08,850
so

3801
03:09:08,850 --> 03:09:12,800
[Applause]

3802
03:09:12,800 --> 03:09:15,680
so that just shows what happens when uh

3803
03:09:15,680 --> 03:09:17,120
you have some messages coming out over

3804
03:09:17,120 --> 03:09:19,520
the uh over the year and if i actually

3805
03:09:19,520 --> 03:09:21,040
enlarge the screen here and i probably

3806
03:09:21,040 --> 03:09:22,319
should have had this up on screen as

3807
03:09:22,319 --> 03:09:24,880
well this shows all of the data coming

3808
03:09:24,880 --> 03:09:25,760
in

3809
03:09:25,760 --> 03:09:27,600
over the radio

3810
03:09:27,600 --> 03:09:29,760
so i've got some packets coming in

3811
03:09:29,760 --> 03:09:30,880
i've got packets coming in over the

3812
03:09:30,880 --> 03:09:32,640
radio i decrypt them and this is what it

3813
03:09:32,640 --> 03:09:35,040
is uh inside mqtt and then i have a

3814
03:09:35,040 --> 03:09:36,159
little process running here which

3815
03:09:36,159 --> 03:09:37,279
actually

3816
03:09:37,279 --> 03:09:38,800
interprets all the messages coming in

3817
03:09:38,800 --> 03:09:41,120
over mqtt turns it into something human

3818
03:09:41,120 --> 03:09:42,800
readable and then all of a sudden we can

3819
03:09:42,800 --> 03:09:44,159
actually pump it straight back into home

3820
03:09:44,159 --> 03:09:46,000
assistant

3821
03:09:46,000 --> 03:09:47,199
and this is actually what a feeder

3822
03:09:47,199 --> 03:09:49,199
message looks like so that was exactly

3823
03:09:49,199 --> 03:09:50,640
or fairly close to the sort of message

3824
03:09:50,640 --> 03:09:52,479
that it comes out you know it makes so

3825
03:09:52,479 --> 03:09:53,600
much sense you know you think to

3826
03:09:53,600 --> 03:09:54,800
yourself

3827
03:09:54,800 --> 03:09:56,640
if i'm going to develop something

3828
03:09:56,640 --> 03:09:58,080
and it's really only caring about

3829
03:09:58,080 --> 03:10:00,239
opening a cat feeder closing a cat

3830
03:10:00,239 --> 03:10:01,279
feeder

3831
03:10:01,279 --> 03:10:02,560
do you really want to have big long

3832
03:10:02,560 --> 03:10:04,640
crazy strings of data and this is

3833
03:10:04,640 --> 03:10:06,319
actually kind of how i've managed to

3834
03:10:06,319 --> 03:10:08,000
reverse engineer and figure out what all

3835
03:10:08,000 --> 03:10:10,399
of the data means just completely clear

3836
03:10:10,399 --> 03:10:12,159
and you know they've got time stamps not

3837
03:10:12,159 --> 03:10:13,359
just one time stamp but they actually

3838
03:10:13,359 --> 03:10:15,439
have two time stamps and they have the

3839
03:10:15,439 --> 03:10:18,000
tag and the time that it's open so they

3840
03:10:18,000 --> 03:10:19,760
actually get a report for how long your

3841
03:10:19,760 --> 03:10:22,080
animal spent eating and that goes right

3842
03:10:22,080 --> 03:10:24,319
back off to the cloud and they also have

3843
03:10:24,319 --> 03:10:25,920
the the weight when it started and the

3844
03:10:25,920 --> 03:10:27,120
weight when it finished on the left-hand

3845
03:10:27,120 --> 03:10:28,800
side and the right-hand side and it's

3846
03:10:28,800 --> 03:10:31,920
also accurate down to 0.01 grams

3847
03:10:31,920 --> 03:10:34,479
which is quite accurate for a cat feeder

3848
03:10:34,479 --> 03:10:35,920
and i could never understand why they do

3849
03:10:35,920 --> 03:10:39,800
it but they do

3850
03:10:39,840 --> 03:10:40,720
and

3851
03:10:40,720 --> 03:10:42,800
i'm thinking right so i now have some

3852
03:10:42,800 --> 03:10:45,120
data going off to my home assistant i

3853
03:10:45,120 --> 03:10:46,399
can see what's happening in here and it

3854
03:10:46,399 --> 03:10:47,840
all makes a little bit of sense but i

3855
03:10:47,840 --> 03:10:49,359
really want to find out what that key is

3856
03:10:49,359 --> 03:10:51,279
because yes i can see the messages

3857
03:10:51,279 --> 03:10:53,199
coming in but there's also things that

3858
03:10:53,199 --> 03:10:55,359
you can send from the cloud to my feeder

3859
03:10:55,359 --> 03:10:57,439
or to my other devices and if i don't

3860
03:10:57,439 --> 03:10:58,640
have the key i don't know what these

3861
03:10:58,640 --> 03:11:00,479
messages are but you know i'm really

3862
03:11:00,479 --> 03:11:02,159
sure that they've properly secured that

3863
03:11:02,159 --> 03:11:04,319
key in a really really good place that

3864
03:11:04,319 --> 03:11:07,439
no one could ever find

3865
03:11:07,439 --> 03:11:09,120
and it's like maybe maybe they've

3866
03:11:09,120 --> 03:11:10,479
actually gone and had the key somewhere

3867
03:11:10,479 --> 03:11:12,159
in the firmware so i'm like okay cool

3868
03:11:12,159 --> 03:11:13,840
let's have a look at the firmware

3869
03:11:13,840 --> 03:11:14,880
but you know

3870
03:11:14,880 --> 03:11:17,279
unfortunately the firmware

3871
03:11:17,279 --> 03:11:18,560
bless the cotton socks has been

3872
03:11:18,560 --> 03:11:20,880
encrypted

3873
03:11:20,880 --> 03:11:23,519
with xor

3874
03:11:26,399 --> 03:11:28,000
and i've just gone and flipped over to

3875
03:11:28,000 --> 03:11:30,000
slide again too far

3876
03:11:30,000 --> 03:11:32,800
and you think right well

3877
03:11:32,800 --> 03:11:34,239
after finding some other like-minded

3878
03:11:34,239 --> 03:11:36,080
individuals on the internet

3879
03:11:36,080 --> 03:11:38,479
toby my good man over in germany

3880
03:11:38,479 --> 03:11:40,960
figured out that if you grab all of the

3881
03:11:40,960 --> 03:11:42,880
whole firmware in one big blob split it

3882
03:11:42,880 --> 03:11:45,600
up into 16 bytes and then sort it

3883
03:11:45,600 --> 03:11:47,120
and then the most frequent entry in

3884
03:11:47,120 --> 03:11:49,199
there is actually your excel key the

3885
03:11:49,199 --> 03:11:51,040
reason why that is is the most common

3886
03:11:51,040 --> 03:11:52,880
entry inside your firmware will be all

3887
03:11:52,880 --> 03:11:55,279
zeros so if it's all zeros and you know

3888
03:11:55,279 --> 03:11:57,680
that it's all been xored hey presto the

3889
03:11:57,680 --> 03:11:59,040
one that's most frequently in your

3890
03:11:59,040 --> 03:12:02,080
firmware that's your xor key

3891
03:12:02,080 --> 03:12:03,359
and i was really happy that day when i

3892
03:12:03,359 --> 03:12:04,720
figured it out because then we could say

3893
03:12:04,720 --> 03:12:06,319
right we have the firmware we can

3894
03:12:06,319 --> 03:12:08,479
de-exor it i can try boosting it up

3895
03:12:08,479 --> 03:12:09,920
inside some virtual environments called

3896
03:12:09,920 --> 03:12:11,840
queen u and start looking at and see how

3897
03:12:11,840 --> 03:12:12,960
it boots because maybe they give out the

3898
03:12:12,960 --> 03:12:14,880
key that way and when i booted it up the

3899
03:12:14,880 --> 03:12:16,479
first time around i was like hang on a

3900
03:12:16,479 --> 03:12:18,640
second that's not my serial number of my

3901
03:12:18,640 --> 03:12:19,680
hardware

3902
03:12:19,680 --> 03:12:21,439
hmm that's interesting maybe i should

3903
03:12:21,439 --> 03:12:23,439
try downloading that firmware and that

3904
03:12:23,439 --> 03:12:24,960
firmly happened to be the debug version

3905
03:12:24,960 --> 03:12:26,560
because one of the cool things about

3906
03:12:26,560 --> 03:12:29,120
shorepet is to download firmware all you

3907
03:12:29,120 --> 03:12:30,720
need to do is to give

3908
03:12:30,720 --> 03:12:32,319
the serial number of your hub it doesn't

3909
03:12:32,319 --> 03:12:34,319
check anything else it's just a single

3910
03:12:34,319 --> 03:12:36,319
over http request

3911
03:12:36,319 --> 03:12:37,359
right

3912
03:12:37,359 --> 03:12:38,880
please give me your firmware now i'm

3913
03:12:38,880 --> 03:12:41,120
thinking to myself or maybe other people

3914
03:12:41,120 --> 03:12:42,640
in this audience will think

3915
03:12:42,640 --> 03:12:43,920
maybe that's not such a good thing that

3916
03:12:43,920 --> 03:12:45,680
you don't validate anything other than

3917
03:12:45,680 --> 03:12:48,000
the serial number because then anybody

3918
03:12:48,000 --> 03:12:50,319
could go and do a request for anyone's

3919
03:12:50,319 --> 03:12:51,600
serial number

3920
03:12:51,600 --> 03:12:53,600
of any of the devices

3921
03:12:53,600 --> 03:12:56,159
that might be a bad thing

3922
03:12:56,159 --> 03:12:57,680
and again i'm searching i'm searching

3923
03:12:57,680 --> 03:12:59,279
i'm like i really need to find this key

3924
03:12:59,279 --> 03:13:00,960
because then i can figure out once i

3925
03:13:00,960 --> 03:13:03,040
have the key to the certificate i can

3926
03:13:03,040 --> 03:13:04,560
then find out and say right all of the

3927
03:13:04,560 --> 03:13:06,239
messages going to the devices i can

3928
03:13:06,239 --> 03:13:08,080
start sending commands to it but you

3929
03:13:08,080 --> 03:13:11,120
know the key's not under the mat right

3930
03:13:11,120 --> 03:13:12,960
and i was like okay this is all just

3931
03:13:12,960 --> 03:13:14,239
getting too hard that certificate's too

3932
03:13:14,239 --> 03:13:16,000
hard to find i don't know what i'm gonna

3933
03:13:16,000 --> 03:13:17,439
do maybe what i shall actually do is

3934
03:13:17,439 --> 03:13:19,040
start to build some brand new hardware

3935
03:13:19,040 --> 03:13:21,120
because you know it just talks over over

3936
03:13:21,120 --> 03:13:22,720
the air and i'm sure there'll be some

3937
03:13:22,720 --> 03:13:24,239
common protocols and that couldn't be

3938
03:13:24,239 --> 03:13:25,359
too hard

3939
03:13:25,359 --> 03:13:26,880
and it's like well what does it talk it

3940
03:13:26,880 --> 03:13:28,560
talks zigbee baby

3941
03:13:28,560 --> 03:13:30,080
and zigbee well you know that's a nice

3942
03:13:30,080 --> 03:13:31,359
standard protocol and it's well

3943
03:13:31,359 --> 03:13:33,760
encrypted and when you when you when the

3944
03:13:33,760 --> 03:13:35,840
two devices pair with each other

3945
03:13:35,840 --> 03:13:37,680
you know it's secure

3946
03:13:37,680 --> 03:13:39,600
but when i started looking into the into

3947
03:13:39,600 --> 03:13:42,399
the actual air traffic

3948
03:13:43,680 --> 03:13:44,960
when i started looking into the traffic

3949
03:13:44,960 --> 03:13:46,880
i was like hang on a second that's not

3950
03:13:46,880 --> 03:13:49,760
standard uh centered zigbee traffic

3951
03:13:49,760 --> 03:13:50,640
it's

3952
03:13:50,640 --> 03:13:51,920
it looks like it's encrypted but it's

3953
03:13:51,920 --> 03:13:54,960
not encrypted the zigbee way

3954
03:13:54,960 --> 03:13:56,479
and i was like okay here's my little

3955
03:13:56,479 --> 03:13:58,880
sniffing station i've got my cloud

3956
03:13:58,880 --> 03:14:00,960
and i've got my hub and my aerial this

3957
03:14:00,960 --> 03:14:02,960
is all i need and actually they seem to

3958
03:14:02,960 --> 03:14:04,479
transmit on the same pan so basically

3959
03:14:04,479 --> 03:14:06,800
they transmit on the same frequency for

3960
03:14:06,800 --> 03:14:08,720
every single device

3961
03:14:08,720 --> 03:14:11,920
all 300 and 400 000 of them across the

3962
03:14:11,920 --> 03:14:13,840
entire world all transmit on the same

3963
03:14:13,840 --> 03:14:16,159
frequency

3964
03:14:16,159 --> 03:14:18,080
and i was like hey hang on a second

3965
03:14:18,080 --> 03:14:20,960
these frames are encrypted

3966
03:14:20,960 --> 03:14:23,839
with xor

3967
03:14:24,479 --> 03:14:26,479
yeah

3968
03:14:26,479 --> 03:14:28,479
and it seems that every single one of

3969
03:14:28,479 --> 03:14:30,239
the devices over the air

3970
03:14:30,239 --> 03:14:34,319
uses the same encryption key or xor key

3971
03:14:34,319 --> 03:14:37,040
and it's like really so of course you

3972
03:14:37,040 --> 03:14:38,720
know me being the studious person as i

3973
03:14:38,720 --> 03:14:40,479
am developing a way

3974
03:14:40,479 --> 03:14:42,800
i think it's worth that i back it up

3975
03:14:42,800 --> 03:14:44,000
because you know that information is

3976
03:14:44,000 --> 03:14:46,000
really good and you know no bad actors

3977
03:14:46,000 --> 03:14:48,000
could ever possibly think with the same

3978
03:14:48,000 --> 03:14:50,399
encryption key being sent out to every

3979
03:14:50,399 --> 03:14:52,800
single device with the same particular

3980
03:14:52,800 --> 03:14:55,520
pan id that would ever be a bad thing

3981
03:14:55,520 --> 03:14:57,120
that's right i put it up in github so

3982
03:14:57,120 --> 03:14:59,199
it's nice and safe

3983
03:14:59,199 --> 03:15:00,880
so i continue to go around i'm like okay

3984
03:15:00,880 --> 03:15:02,800
cool cool let's build this hardware

3985
03:15:02,800 --> 03:15:04,880
let's do something and i'll think right

3986
03:15:04,880 --> 03:15:05,920
i'm going to build something build

3987
03:15:05,920 --> 03:15:07,279
something new

3988
03:15:07,279 --> 03:15:09,120
and i go onto the internet and i'm like

3989
03:15:09,120 --> 03:15:10,880
hey there's some other people that have

3990
03:15:10,880 --> 03:15:12,640
built some hardware with an esp32 so a

3991
03:15:12,640 --> 03:15:14,960
nice little mini computer and also the

3992
03:15:14,960 --> 03:15:17,040
zigbee radio and these guys have gone

3993
03:15:17,040 --> 03:15:18,319
out and they've actually done a custom

3994
03:15:18,319 --> 03:15:19,680
shield so i can go off and just order

3995
03:15:19,680 --> 03:15:21,040
one of these and then they'll ship it to

3996
03:15:21,040 --> 03:15:22,640
me over the internet and this is kind of

3997
03:15:22,640 --> 03:15:24,800
the breadboard version down here

3998
03:15:24,800 --> 03:15:27,120
and this is the hub version two to

3999
03:15:27,120 --> 03:15:28,800
replace the hub version one and this one

4000
03:15:28,800 --> 03:15:30,399
this one's got wi-fi

4001
03:15:30,399 --> 03:15:31,279
yeah

4002
03:15:31,279 --> 03:15:33,199
wi-fi and internet of things what could

4003
03:15:33,199 --> 03:15:35,439
possibly go wrong

4004
03:15:35,439 --> 03:15:37,680
well you know me personally i'm i'm not

4005
03:15:37,680 --> 03:15:40,000
the best assembler developer and some of

4006
03:15:40,000 --> 03:15:41,439
the radio staff just all teams seem to

4007
03:15:41,439 --> 03:15:43,279
be too hard i'm like you know what i'm

4008
03:15:43,279 --> 03:15:44,479
just going to park this for a little bit

4009
03:15:44,479 --> 03:15:46,880
and try something different

4010
03:15:46,880 --> 03:15:48,159
and i'm like right

4011
03:15:48,159 --> 03:15:49,520
after i've been started working for a

4012
03:15:49,520 --> 03:15:50,479
while

4013
03:15:50,479 --> 03:15:52,000
now it's time to share this with the

4014
03:15:52,000 --> 03:15:53,199
world with the home assistant community

4015
03:15:53,199 --> 03:15:55,760
and say hey guys this is what i've done

4016
03:15:55,760 --> 03:15:58,399
fly be free

4017
03:15:58,399 --> 03:15:59,439
and

4018
03:15:59,439 --> 03:16:01,120
what after i did that

4019
03:16:01,120 --> 03:16:03,359
the uh the developer who happens to be

4020
03:16:03,359 --> 03:16:05,120
the chief software architect from

4021
03:16:05,120 --> 03:16:08,319
surepet followed me on my github repo

4022
03:16:08,319 --> 03:16:10,319
less than 24 hours later

4023
03:16:10,319 --> 03:16:12,000
that also happened to be around the same

4024
03:16:12,000 --> 03:16:12,880
time

4025
03:16:12,880 --> 03:16:16,399
that a firmware update came out

4026
03:16:16,399 --> 03:16:18,960
that started to check the certificate

4027
03:16:18,960 --> 03:16:22,319
causation correlation who knows

4028
03:16:22,319 --> 03:16:23,840
but you know i'm thinking myself right

4029
03:16:23,840 --> 03:16:26,080
but i didn't actually know me directly

4030
03:16:26,080 --> 03:16:27,680
at that time that the firmware came out

4031
03:16:27,680 --> 03:16:28,640
because

4032
03:16:28,640 --> 03:16:30,159
at the same time

4033
03:16:30,159 --> 03:16:33,040
my firmware never got updated

4034
03:16:33,040 --> 03:16:36,319
not sure why anyway

4035
03:16:36,319 --> 03:16:38,800
oh we might need another moodle storm

4036
03:16:38,800 --> 03:16:39,920
here

4037
03:16:39,920 --> 03:16:40,880
because

4038
03:16:40,880 --> 03:16:42,319
part of the other parts of the hardware

4039
03:16:42,319 --> 03:16:44,319
is this thing called the dual stand the

4040
03:16:44,319 --> 03:16:46,319
dual scan kit flat

4041
03:16:46,319 --> 03:16:48,080
hi thank you moodle storm for coming out

4042
03:16:48,080 --> 03:16:51,040
you're much appreciated

4043
03:16:51,040 --> 03:16:53,439
right on

4044
03:16:53,439 --> 03:16:55,279
so

4045
03:16:55,279 --> 03:16:56,960
if we come over here

4046
03:16:56,960 --> 03:16:58,880
we've shown off the feeder the feeder

4047
03:16:58,880 --> 03:17:01,040
sends off to these little things here

4048
03:17:01,040 --> 03:17:03,279
this is the cat flap

4049
03:17:03,279 --> 03:17:04,399
now

4050
03:17:04,399 --> 03:17:07,040
i practice this at home with my cat

4051
03:17:07,040 --> 03:17:08,840
this is going to work

4052
03:17:08,840 --> 03:17:12,239
right no

4053
03:17:13,359 --> 03:17:15,279
dude you're like you're killing me here

4054
03:17:15,279 --> 03:17:16,800
you're killing me you said that you're

4055
03:17:16,800 --> 03:17:20,159
up for this you said this was gonna work

4056
03:17:22,840 --> 03:17:25,680
out oh oh

4057
03:17:25,680 --> 03:17:28,880
maybe he'll manage to open it

4058
03:17:29,840 --> 03:17:31,520
you're there yeah man you're so close

4059
03:17:31,520 --> 03:17:33,359
you are so close actually now what we'll

4060
03:17:33,359 --> 03:17:34,800
do let's try the other way around let's

4061
03:17:34,800 --> 03:17:37,439
try let's let's see okay turn around and

4062
03:17:37,439 --> 03:17:40,000
okay we're gonna do this all right

4063
03:17:40,000 --> 03:17:42,159
uh yeah okay okay we got this

4064
03:17:42,159 --> 03:17:43,920
yeah okay right

4065
03:17:43,920 --> 03:17:45,920
okay almost there man almost there

4066
03:17:45,920 --> 03:17:47,920
almost just a little bit more a little

4067
03:17:47,920 --> 03:17:49,520
bit more you've got this man you've got

4068
03:17:49,520 --> 03:17:52,520
no

4069
03:17:53,680 --> 03:17:56,720
two words never work with children

4070
03:17:56,720 --> 03:17:59,040
or animals

4071
03:17:59,040 --> 03:18:00,640
so then anyway

4072
03:18:00,640 --> 03:18:02,239
maybe there was a bit of sparkles there

4073
03:18:02,239 --> 03:18:04,159
as well as he goes through it who knows

4074
03:18:04,159 --> 03:18:06,399
because the world needs more ah there we

4075
03:18:06,399 --> 03:18:08,560
go

4076
03:18:08,960 --> 03:18:10,960
and again we have these messages coming

4077
03:18:10,960 --> 03:18:13,920
through you see the 802.11 uh 802 15.4

4078
03:18:13,920 --> 03:18:16,800
radio packets they turn up as red

4079
03:18:16,800 --> 03:18:19,120
and then we have the mqtt messages

4080
03:18:19,120 --> 03:18:21,120
coming in and flying past and then in

4081
03:18:21,120 --> 03:18:23,279
here we have my little web server which

4082
03:18:23,279 --> 03:18:25,520
actually receives all the mqt mqtt

4083
03:18:25,520 --> 03:18:27,359
messages and then sends some dodgy

4084
03:18:27,359 --> 03:18:28,720
messages off to the lights to make them

4085
03:18:28,720 --> 03:18:32,479
flash because hey we need some sparkles

4086
03:18:32,479 --> 03:18:34,479
so then after i've been kind of hacking

4087
03:18:34,479 --> 03:18:35,680
away and trying to figure out all these

4088
03:18:35,680 --> 03:18:37,359
different things i go along to the local

4089
03:18:37,359 --> 03:18:39,120
isig meeting and i meet this awesome

4090
03:18:39,120 --> 03:18:40,880
fellow roman and he was like you know

4091
03:18:40,880 --> 03:18:42,960
what this is just microchip hardware and

4092
03:18:42,960 --> 03:18:44,720
he's lent me the programmer it's like

4093
03:18:44,720 --> 03:18:46,239
wow brilliant i can actually now use the

4094
03:18:46,239 --> 03:18:48,479
programmer to dump the firmware

4095
03:18:48,479 --> 03:18:49,680
even though i kind of have dumped the

4096
03:18:49,680 --> 03:18:51,279
firmware anyway but if i could dump the

4097
03:18:51,279 --> 03:18:53,040
firmware and also dump the protected

4098
03:18:53,040 --> 03:18:54,000
memory

4099
03:18:54,000 --> 03:18:54,720
because

4100
03:18:54,720 --> 03:18:55,840
they've definitely protected that

4101
03:18:55,840 --> 03:18:58,080
protected memory

4102
03:18:58,080 --> 03:18:59,120
yeah

4103
03:18:59,120 --> 03:19:00,640
and actually they did which is really

4104
03:19:00,640 --> 03:19:02,399
frustrating so i spent some time with

4105
03:19:02,399 --> 03:19:04,239
the programmer did some documentation of

4106
03:19:04,239 --> 03:19:05,760
how the hub works

4107
03:19:05,760 --> 03:19:07,680
and i've posted all of this up on github

4108
03:19:07,680 --> 03:19:09,040
and we have the radio we have some other

4109
03:19:09,040 --> 03:19:10,640
pins that have soldered up

4110
03:19:10,640 --> 03:19:11,680
and uh

4111
03:19:11,680 --> 03:19:13,439
i've got my legit soldering workbench

4112
03:19:13,439 --> 03:19:15,600
here and i was like brilliant i managed

4113
03:19:15,600 --> 03:19:16,880
to get i'm going to dump the swimmer

4114
03:19:16,880 --> 03:19:18,720
using the the programmer it'll all work

4115
03:19:18,720 --> 03:19:20,560
fine won't it

4116
03:19:20,560 --> 03:19:23,120
and it doesn't and i'm like okay well

4117
03:19:23,120 --> 03:19:24,640
roman he's also done a little bit of

4118
03:19:24,640 --> 03:19:26,479
work in the glitching space definitely

4119
03:19:26,479 --> 03:19:28,080
if i manage to glitch the cpu that's

4120
03:19:28,080 --> 03:19:29,040
going to give me the key that i'm

4121
03:19:29,040 --> 03:19:31,600
looking for unfortunately not that

4122
03:19:31,600 --> 03:19:33,600
didn't work out the way that i had

4123
03:19:33,600 --> 03:19:35,680
but he did however help me

4124
03:19:35,680 --> 03:19:37,439
take the firmware which we'd decrypted

4125
03:19:37,439 --> 03:19:40,080
and loaded it up into our friendly nsa

4126
03:19:40,080 --> 03:19:42,239
tool called gedra and that actually

4127
03:19:42,239 --> 03:19:43,920
decompiles it and actually allows you to

4128
03:19:43,920 --> 03:19:45,439
inspect the firmware to see exactly what

4129
03:19:45,439 --> 03:19:47,120
it's doing and there's a couple of

4130
03:19:47,120 --> 03:19:48,720
interesting functions in there and he

4131
03:19:48,720 --> 03:19:50,319
pointed me along the direction for

4132
03:19:50,319 --> 03:19:52,479
finding the key

4133
03:19:52,479 --> 03:19:54,399
but unfortunately at the time it didn't

4134
03:19:54,399 --> 03:19:56,640
allow me to find the key

4135
03:19:56,640 --> 03:19:59,840
and what did i do then i managed to

4136
03:19:59,840 --> 03:20:02,000
brick my hub

4137
03:20:02,000 --> 03:20:02,880
yeah

4138
03:20:02,880 --> 03:20:04,319
i was not very happy about this day

4139
03:20:04,319 --> 03:20:06,399
because i thought

4140
03:20:06,399 --> 03:20:09,040
bother or some other expletives

4141
03:20:09,040 --> 03:20:09,920
i

4142
03:20:09,920 --> 03:20:11,359
managed to short out one of the pins the

4143
03:20:11,359 --> 03:20:13,439
hub blew up saying

4144
03:20:13,439 --> 03:20:15,520
i didn't have a working hub my arduino

4145
03:20:15,520 --> 03:20:17,279
code just wasn't working properly either

4146
03:20:17,279 --> 03:20:19,279
it's like you know what i'm just going

4147
03:20:19,279 --> 03:20:22,239
to go buy myself a new hub

4148
03:20:22,239 --> 03:20:23,279
and then

4149
03:20:23,279 --> 03:20:24,960
i saw on trademe

4150
03:20:24,960 --> 03:20:26,479
this person was selling this old hub and

4151
03:20:26,479 --> 03:20:28,159
i said oh brilliant and i asked them i

4152
03:20:28,159 --> 03:20:29,520
was like so have you actually ever

4153
03:20:29,520 --> 03:20:30,399
plugged the hub in before and they're

4154
03:20:30,399 --> 03:20:31,840
like no no it's just set under the draw

4155
03:20:31,840 --> 03:20:33,279
you know you're welcome to it so i went

4156
03:20:33,279 --> 03:20:35,439
and bought it and it turns up about uh

4157
03:20:35,439 --> 03:20:36,720
two or three weeks later after i managed

4158
03:20:36,720 --> 03:20:38,880
to win it i was like oh brilliant and

4159
03:20:38,880 --> 03:20:40,640
this time this time i think i've learned

4160
03:20:40,640 --> 03:20:43,040
from my mistakes my previous mistakes to

4161
03:20:43,040 --> 03:20:44,399
not properly sniff through the traffic

4162
03:20:44,399 --> 03:20:45,279
first

4163
03:20:45,279 --> 03:20:47,840
and now i'll actually sniff it on boot

4164
03:20:47,840 --> 03:20:49,840
and it turns up hooray i have my new hub

4165
03:20:49,840 --> 03:20:50,720
and i'm going to sniff it through the

4166
03:20:50,720 --> 03:20:51,600
cloud

4167
03:20:51,600 --> 03:20:53,520
and hang on a second

4168
03:20:53,520 --> 03:20:55,040
when the hub boots up

4169
03:20:55,040 --> 03:20:57,600
it sends a response back well it sends a

4170
03:20:57,600 --> 03:20:59,279
request out but it includes something

4171
03:20:59,279 --> 03:21:01,040
new it includes this thing called a long

4172
03:21:01,040 --> 03:21:03,199
serial haven't seen one of those before

4173
03:21:03,199 --> 03:21:04,560
all of the other firmwares haven't it

4174
03:21:04,560 --> 03:21:06,640
i'm like hmm i wonder if that long

4175
03:21:06,640 --> 03:21:08,319
cereal is the key to

4176
03:21:08,319 --> 03:21:09,840
the certificate

4177
03:21:09,840 --> 03:21:11,680
and i'm like right okay

4178
03:21:11,680 --> 03:21:14,399
so i take my super secure credentials i

4179
03:21:14,399 --> 03:21:16,720
pass in and open ssl that password that

4180
03:21:16,720 --> 03:21:17,600
it has

4181
03:21:17,600 --> 03:21:20,000
and i wonder if it decrypts it

4182
03:21:20,000 --> 03:21:21,279
it is

4183
03:21:21,279 --> 03:21:22,800
oh yeah

4184
03:21:22,800 --> 03:21:24,880
so i'm like brilliant i now have the key

4185
03:21:24,880 --> 03:21:26,239
to the password

4186
03:21:26,239 --> 03:21:28,800
it's time for me in the middle or mitm

4187
03:21:28,800 --> 03:21:31,120
to be able to sniff all the traffic

4188
03:21:31,120 --> 03:21:33,680
good times it's like yes

4189
03:21:33,680 --> 03:21:36,640
i have found the key for my hub i can

4190
03:21:36,640 --> 03:21:38,720
now traffic i can now inspect all of my

4191
03:21:38,720 --> 03:21:41,199
traffic but the problem is it's a

4192
03:21:41,199 --> 03:21:43,279
hub-specific key because at this time

4193
03:21:43,279 --> 03:21:45,680
now i have two hubs i have my bricks

4194
03:21:45,680 --> 03:21:46,880
well actually i managed to fix it up

4195
03:21:46,880 --> 03:21:48,960
afterwards now i'm brick tub and i have

4196
03:21:48,960 --> 03:21:51,199
my new hub which i have the password for

4197
03:21:51,199 --> 03:21:52,399
and there are different passwords so

4198
03:21:52,399 --> 03:21:53,920
it's like cool i have the password to my

4199
03:21:53,920 --> 03:21:57,040
hub but not all the others so the key is

4200
03:21:57,040 --> 03:22:00,319
under the mat but not 100

4201
03:22:00,319 --> 03:22:02,239
so now i'm thinking to myself brilliant

4202
03:22:02,239 --> 03:22:03,520
i can now me in the middle all the

4203
03:22:03,520 --> 03:22:04,399
traffic

4204
03:22:04,399 --> 03:22:06,239
and one of the things is using polar

4205
03:22:06,239 --> 03:22:08,239
proxy it didn't support me sending a

4206
03:22:08,239 --> 03:22:10,000
client certificate off to the cloud so i

4207
03:22:10,000 --> 03:22:11,520
emailed the guys and i'm like look guys

4208
03:22:11,520 --> 03:22:13,439
i love your tool it's fantastic it's

4209
03:22:13,439 --> 03:22:14,720
been really helpful for me to do some of

4210
03:22:14,720 --> 03:22:16,399
the analysis but if i could include a

4211
03:22:16,399 --> 03:22:18,319
client certificate that'd be brilliant

4212
03:22:18,319 --> 03:22:19,760
and three days later they emailed me

4213
03:22:19,760 --> 03:22:21,520
back an updated version with client

4214
03:22:21,520 --> 03:22:23,439
certificate support and then all of a

4215
03:22:23,439 --> 03:22:25,760
sudden i have some sweet sweet decrypted

4216
03:22:25,760 --> 03:22:27,920
packets rolling in

4217
03:22:27,920 --> 03:22:29,760
so now this is my

4218
03:22:29,760 --> 03:22:32,319
ninja cat setup where i can do a polar

4219
03:22:32,319 --> 03:22:34,159
proxy request for the first request and

4220
03:22:34,159 --> 03:22:36,399
the second request off to aws because i

4221
03:22:36,399 --> 03:22:38,239
have the certificate and the key i can

4222
03:22:38,239 --> 03:22:40,399
ninja cut all of that traffic in and out

4223
03:22:40,399 --> 03:22:42,080
oh yeah

4224
03:22:42,080 --> 03:22:44,080
so i'm thinking to myself

4225
03:22:44,080 --> 03:22:46,159
if i'd done this in the first place you

4226
03:22:46,159 --> 03:22:48,640
know like months and months and months

4227
03:22:48,640 --> 03:22:50,560
and months and months ago when i first

4228
03:22:50,560 --> 03:22:51,600
started this

4229
03:22:51,600 --> 03:22:53,439
i'd be able to do this right

4230
03:22:53,439 --> 03:22:54,640
maybe we need to talk to the manager

4231
03:22:54,640 --> 03:22:55,600
about this

4232
03:22:55,600 --> 03:22:58,399
yeah yeah i know it turns out that yes

4233
03:22:58,399 --> 03:23:00,800
the newer firmware firmware hubs don't

4234
03:23:00,800 --> 03:23:03,520
actually send that long serial it's only

4235
03:23:03,520 --> 03:23:05,120
that i happen to get an old model

4236
03:23:05,120 --> 03:23:06,800
hardware that had never been firm or

4237
03:23:06,800 --> 03:23:08,479
updated that they sent out this

4238
03:23:08,479 --> 03:23:10,080
particular password

4239
03:23:10,080 --> 03:23:11,520
but i wonder if there's another way to

4240
03:23:11,520 --> 03:23:14,640
find the long serial and then some time

4241
03:23:14,640 --> 03:23:15,760
passes

4242
03:23:15,760 --> 03:23:16,560
you know

4243
03:23:16,560 --> 03:23:17,920
it's been a crazy year for a lot of us

4244
03:23:17,920 --> 03:23:19,600
people here wasn't really able to work

4245
03:23:19,600 --> 03:23:21,199
on the project i've been doing some

4246
03:23:21,199 --> 03:23:23,279
refactoring work because the way that i

4247
03:23:23,279 --> 03:23:24,720
first built it it was really horribly

4248
03:23:24,720 --> 03:23:26,159
complicated and had all these bits that

4249
03:23:26,159 --> 03:23:28,000
had to glue together and what i wanted

4250
03:23:28,000 --> 03:23:29,520
to have is a single command line in

4251
03:23:29,520 --> 03:23:31,359
python that i could start and run

4252
03:23:31,359 --> 03:23:32,880
so in the end i actually settled with

4253
03:23:32,880 --> 03:23:34,479
async io which allowed me to run all of

4254
03:23:34,479 --> 03:23:36,479
these bits all in one blob and run from

4255
03:23:36,479 --> 03:23:38,319
a single command line and then i figured

4256
03:23:38,319 --> 03:23:39,840
out something that had been steering in

4257
03:23:39,840 --> 03:23:42,800
front of me the entire time

4258
03:23:42,800 --> 03:23:44,159
oh yeah that's right

4259
03:23:44,159 --> 03:23:45,600
another another thing was that i'm going

4260
03:23:45,600 --> 03:23:47,439
to be presenting a car icon i better

4261
03:23:47,439 --> 03:23:49,120
make sure the stuff works

4262
03:23:49,120 --> 03:23:51,120
so i think to myself right

4263
03:23:51,120 --> 03:23:53,439
this firmware update thing because you

4264
03:23:53,439 --> 03:23:54,399
can actually hold down the button

4265
03:23:54,399 --> 03:23:55,920
underneath when it boots up and it does

4266
03:23:55,920 --> 03:23:57,600
a firmware update and it makes that

4267
03:23:57,600 --> 03:24:00,159
request over http

4268
03:24:00,159 --> 03:24:02,159
that's kind of useful

4269
03:24:02,159 --> 03:24:03,840
and i'm like ah let's have a look

4270
03:24:03,840 --> 03:24:05,760
through the log

4271
03:24:05,760 --> 03:24:06,880
looking through the log i see some

4272
03:24:06,880 --> 03:24:09,439
numbers it's like 550aa that looks kind

4273
03:24:09,439 --> 03:24:11,840
of familiar

4274
03:24:12,560 --> 03:24:15,120
and i say oh that one that looks like

4275
03:24:15,120 --> 03:24:16,800
the long serial

4276
03:24:16,800 --> 03:24:18,800
all right all i need to now do is

4277
03:24:18,800 --> 03:24:20,880
firmware update my hub and i get my long

4278
03:24:20,880 --> 03:24:21,920
serial because it comes through in the

4279
03:24:21,920 --> 03:24:24,159
console that's very useful and then do a

4280
03:24:24,159 --> 03:24:26,399
little bit of reordering job done and

4281
03:24:26,399 --> 03:24:27,600
then i go and tell the world i'm like

4282
03:24:27,600 --> 03:24:29,199
hey guys if you need to find your long

4283
03:24:29,199 --> 03:24:30,560
zero this is the only thing you need to

4284
03:24:30,560 --> 03:24:31,680
do

4285
03:24:31,680 --> 03:24:34,159
that's not very hard

4286
03:24:34,159 --> 03:24:35,439
and then i actually started thinking and

4287
03:24:35,439 --> 03:24:37,040
i'm like hang on a second

4288
03:24:37,040 --> 03:24:38,399
the firmware update

4289
03:24:38,399 --> 03:24:40,560
uses that same long serial

4290
03:24:40,560 --> 03:24:41,840
and i was like well i've got my hub

4291
03:24:41,840 --> 03:24:44,479
firmware and i know my d x or key which

4292
03:24:44,479 --> 03:24:46,479
gives me that key and then i take that

4293
03:24:46,479 --> 03:24:48,960
key and then they have this static key

4294
03:24:48,960 --> 03:24:51,520
because again they love their xor and

4295
03:24:51,520 --> 03:24:53,600
then i can just translate all of this

4296
03:24:53,600 --> 03:24:54,960
and all i actually need to do is

4297
03:24:54,960 --> 03:24:56,479
download the firmware

4298
03:24:56,479 --> 03:24:58,960
only 52 bytes of that for me

4299
03:24:58,960 --> 03:25:01,199
and all of a sudden i have the pkcs

4300
03:25:01,199 --> 03:25:03,359
certificate for the password

4301
03:25:03,359 --> 03:25:04,159
and

4302
03:25:04,159 --> 03:25:05,359
i'm not sure if anyone was following at

4303
03:25:05,359 --> 03:25:07,279
the beginning but all you need to do is

4304
03:25:07,279 --> 03:25:09,760
a single request over http to a single

4305
03:25:09,760 --> 03:25:11,600
host with a serial number you don't need

4306
03:25:11,600 --> 03:25:13,359
anything else and they give you the

4307
03:25:13,359 --> 03:25:14,880
firmware file

4308
03:25:14,880 --> 03:25:17,359
that could be bad right

4309
03:25:17,359 --> 03:25:19,840
so hey all of a sudden now i have the

4310
03:25:19,840 --> 03:25:22,000
password for my hub for every other

4311
03:25:22,000 --> 03:25:23,680
single hub all i need to do is just

4312
03:25:23,680 --> 03:25:25,680
download the first file of the firmware

4313
03:25:25,680 --> 03:25:28,720
and it's free for everyone

4314
03:25:29,359 --> 03:25:31,040
and then coming up to the end of it

4315
03:25:31,040 --> 03:25:33,439
about two weeks ago up on

4316
03:25:33,439 --> 03:25:36,000
a cat and dog dog came on board

4317
03:25:36,000 --> 03:25:36,960
and

4318
03:25:36,960 --> 03:25:39,520
i thought hey hang on a second

4319
03:25:39,520 --> 03:25:40,880
that could be really useful in my talk

4320
03:25:40,880 --> 03:25:43,120
because i have a dog door at home but i

4321
03:25:43,120 --> 03:25:44,640
don't really want to have to take it out

4322
03:25:44,640 --> 03:25:45,600
but

4323
03:25:45,600 --> 03:25:47,680
on the upside i can get myself an

4324
03:25:47,680 --> 03:25:48,640
additional hardware because if you're

4325
03:25:48,640 --> 03:25:49,920
going to demonstrate something you need

4326
03:25:49,920 --> 03:25:52,319
to have all the hardware here

4327
03:25:52,319 --> 03:25:54,159
and this is this kind of shows what the

4328
03:25:54,159 --> 03:25:56,399
cloud app is like it's not the prettiest

4329
03:25:56,399 --> 03:25:58,399
it's not the most functional

4330
03:25:58,399 --> 03:26:00,960
it's kind of slow but hey this way if we

4331
03:26:00,960 --> 03:26:03,920
talk at home assistant it talks locally

4332
03:26:03,920 --> 03:26:05,680
so this is where i've ended up now i now

4333
03:26:05,680 --> 03:26:07,520
have an app called pet hub local i

4334
03:26:07,520 --> 03:26:08,880
started off with some docker and all

4335
03:26:08,880 --> 03:26:10,159
sorts of other bits and pieces which is

4336
03:26:10,159 --> 03:26:12,239
horrifically complicated to run and now

4337
03:26:12,239 --> 03:26:14,640
i have a async i o based

4338
03:26:14,640 --> 03:26:16,960
single command line with python i've

4339
03:26:16,960 --> 03:26:18,800
moved from having sqlite as a database

4340
03:26:18,800 --> 03:26:20,720
to a json file it's just a whole lot

4341
03:26:20,720 --> 03:26:22,880
simpler now and if i had actually

4342
03:26:22,880 --> 03:26:24,319
checked my slides beforehand i would

4343
03:26:24,319 --> 03:26:25,439
have said that i've actually built a

4344
03:26:25,439 --> 03:26:27,279
home assistant add-on so anybody that

4345
03:26:27,279 --> 03:26:29,040
uses home assistant all i need to do is

4346
03:26:29,040 --> 03:26:31,120
go into a store hit a github repo add my

4347
03:26:31,120 --> 03:26:32,880
thing on and hey presto they can

4348
03:26:32,880 --> 03:26:35,199
actually start using this from home

4349
03:26:35,199 --> 03:26:36,720
and this is what it looks like i showed

4350
03:26:36,720 --> 03:26:38,640
you a little bit before the other hand

4351
03:26:38,640 --> 03:26:41,040
all of a sudden you have home assistant

4352
03:26:41,040 --> 03:26:42,479
giving you all of the control over all

4353
03:26:42,479 --> 03:26:44,640
of your different devices messages come

4354
03:26:44,640 --> 03:26:46,800
in they hit mqtt which home assistant

4355
03:26:46,800 --> 03:26:49,120
supports anyway and i'm able to send

4356
03:26:49,120 --> 03:26:50,880
messages to a home assistant about all

4357
03:26:50,880 --> 03:26:52,560
the different states of the animals as

4358
03:26:52,560 --> 03:26:54,399
well as all of the devices and you get

4359
03:26:54,399 --> 03:26:56,560
data coming in and it all sits locally

4360
03:26:56,560 --> 03:26:59,840
inside your home network

4361
03:27:00,840 --> 03:27:08,239
[Applause]

4362
03:27:08,239 --> 03:27:09,040
so

4363
03:27:09,040 --> 03:27:10,239
another thing as well that's happening

4364
03:27:10,239 --> 03:27:12,880
in a couple of weeks and i'm not sure if

4365
03:27:12,880 --> 03:27:14,479
i should do this or not but

4366
03:27:14,479 --> 03:27:17,040
yeah it i probably will um

4367
03:27:17,040 --> 03:27:19,199
sure pit the lovely people who are

4368
03:27:19,199 --> 03:27:21,199
actually really nice people and i'm so

4369
03:27:21,199 --> 03:27:22,319
surprised they have not kicked me off

4370
03:27:22,319 --> 03:27:23,920
their cloud servers because i believe

4371
03:27:23,920 --> 03:27:25,520
that i've been quite a and i have

4372
03:27:25,520 --> 03:27:27,760
been trolling hard the the chief

4373
03:27:27,760 --> 03:27:29,359
developer the entire way through and

4374
03:27:29,359 --> 03:27:31,279
he's never once responded to me which is

4375
03:27:31,279 --> 03:27:33,359
kind of sad and expected but anyway

4376
03:27:33,359 --> 03:27:34,479
i'm going to be turning up to the

4377
03:27:34,479 --> 03:27:37,120
shorepet uh or the petahub animal expo

4378
03:27:37,120 --> 03:27:39,359
and having a chat with shorepet people

4379
03:27:39,359 --> 03:27:41,199
and we'll see how it goes maybe they

4380
03:27:41,199 --> 03:27:45,199
might like an in-person demo who knows

4381
03:27:45,199 --> 03:27:47,920
and now now is a bit of a cry for help

4382
03:27:47,920 --> 03:27:48,720
um

4383
03:27:48,720 --> 03:27:51,120
i'm not the best uh similar developer

4384
03:27:51,120 --> 03:27:53,439
and i have the firmware decrypted but

4385
03:27:53,439 --> 03:27:55,040
there's a couple of crc

4386
03:27:55,040 --> 03:27:56,080
checks in there that i haven't managed

4387
03:27:56,080 --> 03:27:59,439
to figure out yet and

4388
03:27:59,520 --> 03:28:01,920
and and hopefully you know someone could

4389
03:28:01,920 --> 03:28:04,720
help me out with this

4390
03:28:04,800 --> 03:28:06,880
and now it's a bit of demo time

4391
03:28:06,880 --> 03:28:08,640
now where's moodle have we lost moodle

4392
03:28:08,640 --> 03:28:10,960
again

4393
03:28:12,560 --> 03:28:14,640
right

4394
03:28:14,640 --> 03:28:17,599
so the poseidon

4395
03:28:18,000 --> 03:28:20,640
moodle storm

4396
03:28:20,640 --> 03:28:22,399
so are you going to be able to drink

4397
03:28:22,399 --> 03:28:23,760
from the

4398
03:28:23,760 --> 03:28:25,680
from the poseidon is that going to work

4399
03:28:25,680 --> 03:28:26,880
and hey

4400
03:28:26,880 --> 03:28:28,720
is this all going to happen here oh

4401
03:28:28,720 --> 03:28:30,560
let's just see

4402
03:28:30,560 --> 03:28:32,720
we'll come up to here

4403
03:28:32,720 --> 03:28:34,840
he's going to stick his head in

4404
03:28:34,840 --> 03:28:37,359
and the little lights gonna hopefully go

4405
03:28:37,359 --> 03:28:39,680
on oh maybe it's not

4406
03:28:39,680 --> 03:28:40,800
anyway

4407
03:28:40,800 --> 03:28:44,479
you're just gonna be terrible aren't you

4408
03:28:44,560 --> 03:28:47,600
yes moodle storm moodle storm come on

4409
03:28:47,600 --> 03:28:48,840
sort us out

4410
03:28:48,840 --> 03:28:50,640
here and

4411
03:28:50,640 --> 03:28:53,439
you know what middle storm

4412
03:28:53,439 --> 03:28:54,399
i don't think this is going to work

4413
03:28:54,399 --> 03:28:56,960
buddy i think i'm just going to have to

4414
03:28:56,960 --> 03:29:00,720
release the hounds because quite frankly

4415
03:29:02,000 --> 03:29:04,479
it's just not going to work out there we

4416
03:29:04,479 --> 03:29:08,640
go how's it going buddy you to come out

4417
03:29:08,640 --> 03:29:11,520
come on come on come over here

4418
03:29:11,520 --> 03:29:12,880
oh come on

4419
03:29:12,880 --> 03:29:16,319
ah of course ah come on yes there you go

4420
03:29:16,319 --> 03:29:18,110
good boy

4421
03:29:18,110 --> 03:29:22,629
[Applause]

4422
03:29:23,600 --> 03:29:26,560
attack attack hey oh no

4423
03:29:26,560 --> 03:29:27,920
no

4424
03:29:27,920 --> 03:29:30,960
hey come on over here oh good boy good

4425
03:29:30,960 --> 03:29:33,279
who's good boy who's going sit

4426
03:29:33,279 --> 03:29:36,319
sit come down come on oh no you just

4427
03:29:36,319 --> 03:29:38,159
like food too much come on attack come

4428
03:29:38,159 --> 03:29:41,680
on this moodle storm go get motor storm

4429
03:29:42,000 --> 03:29:46,399
attack attack attack attack oh good boy

4430
03:29:46,399 --> 03:29:49,040
oh good boy

4431
03:29:49,040 --> 03:29:51,920
and that's my story

4432
03:29:53,840 --> 03:29:55,439
wiki okay

4433
03:29:55,439 --> 03:29:57,920
oh no

4434
03:29:58,159 --> 03:30:02,239
okay hey come on over here good boy

4435
03:30:02,239 --> 03:30:04,080
never work with children and animals

4436
03:30:04,080 --> 03:30:06,840
thank you very much everyone

4437
03:30:06,840 --> 03:30:11,139
[Applause]

4438
03:30:23,120 --> 03:30:25,680
things the things we do to entertain you

4439
03:30:25,680 --> 03:30:29,840
it's not just turning my mic on um

4440
03:30:31,600 --> 03:30:33,199
i think we've never actually had live

4441
03:30:33,199 --> 03:30:34,479
animals on stage before have we does

4442
03:30:34,479 --> 03:30:35,840
anyone remember

4443
03:30:35,840 --> 03:30:38,239
like no so anyway cheerful unlocked live

4444
03:30:38,239 --> 03:30:40,800
animals on

4445
03:30:40,840 --> 03:30:46,080
stage um so i will introduce to you now

4446
03:30:46,080 --> 03:30:47,760
that we've finished with

4447
03:30:47,760 --> 03:30:49,920
the internet trash things our next

4448
03:30:49,920 --> 03:30:51,520
speaker

4449
03:30:51,520 --> 03:30:53,680
now some of you may know him from badge

4450
03:30:53,680 --> 03:30:56,080
challenge of kiwicon's past and it's

4451
03:30:56,080 --> 03:30:57,279
always a pleasure to have him on our

4452
03:30:57,279 --> 03:30:58,640
stage

4453
03:30:58,640 --> 03:31:01,170
drock

4454
03:31:01,170 --> 03:31:08,760
[Applause]

4455
03:31:17,439 --> 03:31:18,800
what do we think

4456
03:31:18,800 --> 03:31:21,039
yeah

4457
03:31:21,279 --> 03:31:22,880
the technology works when you plug it in

4458
03:31:22,880 --> 03:31:24,479
how about that

4459
03:31:24,479 --> 03:31:25,840
nice

4460
03:31:25,840 --> 03:31:28,000
um so i'm here to talk about history of

4461
03:31:28,000 --> 03:31:31,120
computing a lot of people uh these days

4462
03:31:31,120 --> 03:31:32,479
think that everything started with

4463
03:31:32,479 --> 03:31:34,640
windows 95 so we're going to go back a

4464
03:31:34,640 --> 03:31:36,000
few years

4465
03:31:36,000 --> 03:31:38,800
and talk about the apollo space program

4466
03:31:38,800 --> 03:31:41,120
who am i i'm drock also known as derek

4467
03:31:41,120 --> 03:31:43,040
robson

4468
03:31:43,040 --> 03:31:46,640
i do sciso things in a government place

4469
03:31:46,640 --> 03:31:47,920
come talk to me later if you want to

4470
03:31:47,920 --> 03:31:49,199
know more and i

4471
03:31:49,199 --> 03:31:52,399
might not tell you

4472
03:31:52,399 --> 03:31:53,920
there's a twitter account that i help

4473
03:31:53,920 --> 03:31:57,439
run that is at apollo 50th on twitter

4474
03:31:57,439 --> 03:31:59,680
it's a live history of the space program

4475
03:31:59,680 --> 03:32:01,680
in spectacular detail

4476
03:32:01,680 --> 03:32:04,960
so during an actual mission like apollo

4477
03:32:04,960 --> 03:32:07,760
13 for example

4478
03:32:07,760 --> 03:32:10,399
5 000 tweets over seven days

4479
03:32:10,399 --> 03:32:13,120
um if that's your thing

4480
03:32:13,120 --> 03:32:15,439
and you may remember me from kiwi con

4481
03:32:15,439 --> 03:32:17,600
page challenge lock picking assaulted

4482
03:32:17,600 --> 03:32:19,680
shenanigans

4483
03:32:19,680 --> 03:32:21,600
right it's often said a pocket

4484
03:32:21,600 --> 03:32:23,120
calculator is more powerful than the

4485
03:32:23,120 --> 03:32:25,279
computer that got man to the moon

4486
03:32:25,279 --> 03:32:27,279
do we think that's true

4487
03:32:27,279 --> 03:32:28,800
let's find out

4488
03:32:28,800 --> 03:32:30,399
first of all how do you get to the moon

4489
03:32:30,399 --> 03:32:32,319
i'm assuming most people in the room

4490
03:32:32,319 --> 03:32:34,000
haven't flown to the moon recently so

4491
03:32:34,000 --> 03:32:36,080
we're gonna do a quick refresher first

4492
03:32:36,080 --> 03:32:39,120
of all let's talk about the spacecraft

4493
03:32:39,120 --> 03:32:41,040
this is what people think of as the

4494
03:32:41,040 --> 03:32:42,880
spacecraft that gets you to the moon

4495
03:32:42,880 --> 03:32:45,199
it's actually three major components

4496
03:32:45,199 --> 03:32:46,319
first of all you've got the command

4497
03:32:46,319 --> 03:32:48,399
module where the crew hangout

4498
03:32:48,399 --> 03:32:51,359
service module big engine fuel lunar

4499
03:32:51,359 --> 03:32:54,560
module does landing on the moon

4500
03:32:54,560 --> 03:32:56,720
we get off the ground using a saturn 5

4501
03:32:56,720 --> 03:32:58,640
the biggest rocket ever built at this

4502
03:32:58,640 --> 03:33:00,000
point in time

4503
03:33:00,000 --> 03:33:02,000
anyone who's followed spacex has seen

4504
03:33:02,000 --> 03:33:04,719
their two-stage rockets satin five

4505
03:33:04,719 --> 03:33:06,320
three-stage rocker

4506
03:33:06,320 --> 03:33:08,080
and right at the top

4507
03:33:08,080 --> 03:33:10,240
we stash our lunar module in there for

4508
03:33:10,240 --> 03:33:12,799
later on

4509
03:33:12,879 --> 03:33:15,039
so launch of a

4510
03:33:15,039 --> 03:33:15,760
seven and saturn v

4511
03:33:15,760 --> 03:33:17,520
million pounds of thrust

4512
03:33:17,520 --> 03:33:20,000
and off we go takes about 12 minutes to

4513
03:33:20,000 --> 03:33:21,920
get into orbit

4514
03:33:21,920 --> 03:33:23,439
you'll notice here the spacecraft's kind

4515
03:33:23,439 --> 03:33:25,039
of going a bit sideways

4516
03:33:25,039 --> 03:33:26,719
getting into orbit is as much about

4517
03:33:26,719 --> 03:33:29,920
going sideways as it is about going up

4518
03:33:29,920 --> 03:33:32,400
as we run out of fuel in a given stage

4519
03:33:32,400 --> 03:33:35,279
we throw it away

4520
03:33:36,561 --> 03:33:38,320
and that gets us

4521
03:33:38,320 --> 03:33:39,600
all the way

4522
03:33:39,600 --> 03:33:41,279
into orbit and

4523
03:33:41,279 --> 03:33:43,520
11 or 12 minutes

4524
03:33:43,520 --> 03:33:45,279
once we get into orbit

4525
03:33:45,279 --> 03:33:47,039
shut down the engine

4526
03:33:47,039 --> 03:33:48,959
coast through a wee while so that we can

4527
03:33:48,959 --> 03:33:50,879
figure out where we're at how fast we're

4528
03:33:50,879 --> 03:33:53,039
going all of that because the orbital

4529
03:33:53,039 --> 03:33:55,199
mechanics of getting to the moon is

4530
03:33:55,199 --> 03:33:56,561
important

4531
03:33:56,561 --> 03:33:58,561
everything in space flies in an

4532
03:33:58,561 --> 03:34:00,959
elliptical orbit

4533
03:34:00,959 --> 03:34:02,879
so you need to figure out

4534
03:34:02,879 --> 03:34:04,561
the three days it takes to get to the

4535
03:34:04,561 --> 03:34:05,680
moon

4536
03:34:05,680 --> 03:34:07,840
so that the moon comes around to match

4537
03:34:07,840 --> 03:34:09,359
where you're going to be once you get

4538
03:34:09,359 --> 03:34:11,520
where you're going

4539
03:34:11,520 --> 03:34:13,359
it's simple

4540
03:34:13,359 --> 03:34:15,920
well it's rocket science but anyhow

4541
03:34:15,920 --> 03:34:17,840
if you get all that timing just right

4542
03:34:17,840 --> 03:34:19,359
you can loop around the moon and come on

4543
03:34:19,359 --> 03:34:21,600
home without spending much fuel or

4544
03:34:21,600 --> 03:34:23,439
effort or energy that's called a free

4545
03:34:23,439 --> 03:34:25,439
return trajectory

4546
03:34:25,439 --> 03:34:27,680
quite useful

4547
03:34:27,680 --> 03:34:29,119
and then of course there's the landing

4548
03:34:29,119 --> 03:34:30,561
on the moon so

4549
03:34:30,561 --> 03:34:32,639
two of the crew jump on the lunar module

4550
03:34:32,639 --> 03:34:34,320
one stays in the command module keeping

4551
03:34:34,320 --> 03:34:35,760
things going

4552
03:34:35,760 --> 03:34:38,799
and again this is blasting sideways

4553
03:34:38,799 --> 03:34:40,480
because you're actually slowing down in

4554
03:34:40,480 --> 03:34:42,959
an orbital sense gravity then starts

4555
03:34:42,959 --> 03:34:45,279
pulling you down

4556
03:34:45,279 --> 03:34:48,000
down to the moon

4557
03:34:48,719 --> 03:34:50,240
touchdown

4558
03:34:50,240 --> 03:34:52,719
turn off the engine

4559
03:34:52,719 --> 03:34:53,680
get out

4560
03:34:53,680 --> 03:34:55,039
plant a flag

4561
03:34:55,039 --> 03:34:57,439
drive a car do some science

4562
03:34:57,439 --> 03:35:00,400
world is never the same again

4563
03:35:00,400 --> 03:35:02,240
so what we're here to talk about really

4564
03:35:02,240 --> 03:35:04,799
is the computers that get us to the moon

4565
03:35:04,799 --> 03:35:08,920
does anyone know who this is

4566
03:35:10,000 --> 03:35:12,160
i'm going to go with yes

4567
03:35:12,160 --> 03:35:14,000
catherine johnson

4568
03:35:14,000 --> 03:35:16,000
who was a computer

4569
03:35:16,000 --> 03:35:20,719
in 1953 or more specifically before 1958

4570
03:35:20,719 --> 03:35:23,039
a computer was a job description it

4571
03:35:23,039 --> 03:35:26,480
wasn't a gadget or a toy or a tool

4572
03:35:26,480 --> 03:35:28,879
it was a person

4573
03:35:28,879 --> 03:35:31,840
nasa or naca at the time had a lot of

4574
03:35:31,840 --> 03:35:33,840
people that were using mechanical

4575
03:35:33,840 --> 03:35:36,959
calculators tabulating machines and they

4576
03:35:36,959 --> 03:35:39,039
would grind the numbers by hand and that

4577
03:35:39,039 --> 03:35:42,879
job was a computer

4578
03:35:43,439 --> 03:35:46,400
naca became nasa

4579
03:35:46,400 --> 03:35:47,359
nasa

4580
03:35:47,359 --> 03:35:50,240
got on board with electronic computers

4581
03:35:50,240 --> 03:35:52,080
catherine johnson stayed at nasa all the

4582
03:35:52,080 --> 03:35:54,959
way through in 1986 so she was there

4583
03:35:54,959 --> 03:35:58,480
through mercury gemini apollo and into

4584
03:35:58,480 --> 03:36:00,959
the shuttle era

4585
03:36:00,959 --> 03:36:02,160
so when we're talking about getting to

4586
03:36:02,160 --> 03:36:03,439
the moon with computers we're really

4587
03:36:03,439 --> 03:36:05,279
talking about electronic computers

4588
03:36:05,279 --> 03:36:06,959
that's a bit more

4589
03:36:06,959 --> 03:36:09,359
familiar to this crowd

4590
03:36:09,359 --> 03:36:11,119
so the first set of computers you need

4591
03:36:11,119 --> 03:36:13,680
is the real-time computer complex

4592
03:36:13,680 --> 03:36:16,080
this is at mission control

4593
03:36:16,080 --> 03:36:18,799
it's a bunch of big ibm stuff

4594
03:36:18,799 --> 03:36:20,160
because government of course they buy

4595
03:36:20,160 --> 03:36:21,199
ibm

4596
03:36:21,199 --> 03:36:23,520
it does the orbital mechanics

4597
03:36:23,520 --> 03:36:25,760
when do you take off which direction do

4598
03:36:25,760 --> 03:36:28,080
you fly how fast do you go

4599
03:36:28,080 --> 03:36:30,160
to get the launch window you keep

4600
03:36:30,160 --> 03:36:32,400
hearing about the launch window lifting

4601
03:36:32,400 --> 03:36:34,561
off at the right time to get to the moon

4602
03:36:34,561 --> 03:36:36,719
when the moons come around for the

4603
03:36:36,719 --> 03:36:39,279
orbital mechanics stuff

4604
03:36:39,279 --> 03:36:41,279
so the real-time computer complex is at

4605
03:36:41,279 --> 03:36:43,199
mission control in houston

4606
03:36:43,199 --> 03:36:45,680
uh by the end of the apollo era they had

4607
03:36:45,680 --> 03:36:48,160
five ibm 360s

4608
03:36:48,160 --> 03:36:51,840
a whole one megabyte of memory

4609
03:36:52,879 --> 03:36:54,561
and it did all the orbital mechanics it

4610
03:36:54,561 --> 03:36:56,639
also pressed processed radio tracking

4611
03:36:56,639 --> 03:36:58,639
data to create the state vector and

4612
03:36:58,639 --> 03:37:00,480
we're going to discuss that a bit more

4613
03:37:00,480 --> 03:37:02,959
in a few minutes

4614
03:37:02,959 --> 03:37:04,639
next up we have the launch vehicle

4615
03:37:04,639 --> 03:37:07,039
digital computer now this is actually

4616
03:37:07,039 --> 03:37:09,279
part of the saturn 5 rocket it sits in a

4617
03:37:09,279 --> 03:37:10,879
little black ring kind of near the top

4618
03:37:10,879 --> 03:37:12,400
of the rocket

4619
03:37:12,400 --> 03:37:15,199
up the top there it handles getting off

4620
03:37:15,199 --> 03:37:17,199
the launch pad running all the engines

4621
03:37:17,199 --> 03:37:19,119
shutting down the engines tipping the

4622
03:37:19,119 --> 03:37:21,119
rocket over to go sideways for that

4623
03:37:21,119 --> 03:37:23,359
orbital speed thing

4624
03:37:23,359 --> 03:37:25,279
um it does all the staging of throwing

4625
03:37:25,279 --> 03:37:27,600
away stages all of that

4626
03:37:27,600 --> 03:37:29,279
is done by the launch vehicle digital

4627
03:37:29,279 --> 03:37:31,680
computer

4628
03:37:32,480 --> 03:37:34,480
also ibm

4629
03:37:34,480 --> 03:37:36,400
based on core memory for anyone who

4630
03:37:36,400 --> 03:37:38,080
knows about that and if you don't we'll

4631
03:37:38,080 --> 03:37:40,879
talk about core memory in a moment

4632
03:37:40,879 --> 03:37:42,400
and it's the major component of the

4633
03:37:42,400 --> 03:37:44,400
instrumentation ring that black ring

4634
03:37:44,400 --> 03:37:47,520
towards the top of the satin five

4635
03:37:47,520 --> 03:37:49,680
next up we have an abort guidance system

4636
03:37:49,680 --> 03:37:51,279
now this one doesn't get a lot of

4637
03:37:51,279 --> 03:37:52,639
coverage when people talk about

4638
03:37:52,639 --> 03:37:55,119
computers that get you to the moon

4639
03:37:55,119 --> 03:37:56,799
because we don't really need it unless

4640
03:37:56,799 --> 03:37:58,879
things go wrong

4641
03:37:58,879 --> 03:38:00,959
it exists only in the lunar module and

4642
03:38:00,959 --> 03:38:03,039
it exists purely in case of an emergency

4643
03:38:03,039 --> 03:38:04,959
or an abort if they're coming down to

4644
03:38:04,959 --> 03:38:06,799
that to the moon's surface and something

4645
03:38:06,799 --> 03:38:09,439
goes wrong they hit the abort button

4646
03:38:09,439 --> 03:38:11,279
your bulk guidance system kicks in and

4647
03:38:11,279 --> 03:38:12,719
it will take them back to orbit where

4648
03:38:12,719 --> 03:38:15,920
they can rendezvous and come home safely

4649
03:38:15,920 --> 03:38:18,879
however it was used on apollo 13

4650
03:38:18,879 --> 03:38:20,959
and we'll discuss that in a little bit

4651
03:38:20,959 --> 03:38:23,119
too

4652
03:38:23,279 --> 03:38:25,039
the apollo guidance computer this is

4653
03:38:25,039 --> 03:38:27,279
what this is the meat of the of the

4654
03:38:27,279 --> 03:38:29,359
thing this is when people talk about the

4655
03:38:29,359 --> 03:38:32,000
computer that got man to the moon

4656
03:38:32,000 --> 03:38:34,719
this is what they're talking about

4657
03:38:34,719 --> 03:38:36,240
it's the main computer of the command

4658
03:38:36,240 --> 03:38:37,920
module and it's the main computer of the

4659
03:38:37,920 --> 03:38:40,160
lunar module so you actually have two on

4660
03:38:40,160 --> 03:38:42,160
every mission

4661
03:38:42,160 --> 03:38:44,561
let's talk about hardware the hardware

4662
03:38:44,561 --> 03:38:45,760
is

4663
03:38:45,760 --> 03:38:47,840
a bit weird

4664
03:38:47,840 --> 03:38:49,600
you've got the big box that is the

4665
03:38:49,600 --> 03:38:51,359
computer and that little box with the

4666
03:38:51,359 --> 03:38:52,879
buttons and lights that's called the

4667
03:38:52,879 --> 03:38:55,359
diskey

4668
03:38:55,359 --> 03:38:57,199
designed by mit

4669
03:38:57,199 --> 03:39:00,160
smart people manufactured by raytheon

4670
03:39:00,160 --> 03:39:01,760
because government

4671
03:39:01,760 --> 03:39:04,561
weighing in at 32 kilograms

4672
03:39:04,561 --> 03:39:06,959
drawing 55 watts of power now

4673
03:39:06,959 --> 03:39:08,799
considering that real-time compute

4674
03:39:08,799 --> 03:39:10,879
complex at mission control

4675
03:39:10,879 --> 03:39:13,439
was several cabinets taking up most of a

4676
03:39:13,439 --> 03:39:14,561
room

4677
03:39:14,561 --> 03:39:19,199
this is small this is space age cool

4678
03:39:19,520 --> 03:39:22,561
all built out of three input nor gates

4679
03:39:22,561 --> 03:39:24,400
they decided to go with

4680
03:39:24,400 --> 03:39:27,600
microchips not microprocessors just

4681
03:39:27,600 --> 03:39:29,680
microchips

4682
03:39:29,680 --> 03:39:32,320
in about 1965

4683
03:39:32,320 --> 03:39:35,680
nasa were absorbing nearly 75

4684
03:39:35,680 --> 03:39:36,879
of all

4685
03:39:36,879 --> 03:39:39,920
microchips being made in america

4686
03:39:39,920 --> 03:39:42,160
for the space program

4687
03:39:42,160 --> 03:39:44,400
they would get these in large quantities

4688
03:39:44,400 --> 03:39:46,080
they would test them they would test

4689
03:39:46,080 --> 03:39:47,840
them above standard voltage below

4690
03:39:47,840 --> 03:39:49,680
standard voltage they would put them in

4691
03:39:49,680 --> 03:39:51,920
extreme hot extreme cold they would

4692
03:39:51,920 --> 03:39:53,280
vibrate them they'd drop them on the

4693
03:39:53,280 --> 03:39:55,360
floor i don't know all sorts of things

4694
03:39:55,360 --> 03:39:57,840
to make sure they were good enough

4695
03:39:57,840 --> 03:39:59,280
and if you know enough about digital

4696
03:39:59,280 --> 03:40:01,680
logic yes take lots of these chips

4697
03:40:01,680 --> 03:40:02,958
together

4698
03:40:02,958 --> 03:40:04,400
lots and lots

4699
03:40:04,400 --> 03:40:06,718
60 chips on a logic stick

4700
03:40:06,718 --> 03:40:09,280
24 sticks in a tray do the math it works

4701
03:40:09,280 --> 03:40:10,798
out at like two and a half thousand

4702
03:40:10,798 --> 03:40:12,240
gates or something

4703
03:40:12,240 --> 03:40:14,240
you then wire them up and you can build

4704
03:40:14,240 --> 03:40:16,560
yourself a cpu out of individual logic

4705
03:40:16,560 --> 03:40:18,718
gates

4706
03:40:18,718 --> 03:40:20,798
the memory is the stuff called core

4707
03:40:20,798 --> 03:40:22,718
memory for those who haven't experienced

4708
03:40:22,718 --> 03:40:25,680
it each of those little silver blobs is

4709
03:40:25,680 --> 03:40:28,638
a tiny little ferrite donut

4710
03:40:28,638 --> 03:40:30,480
and it represents one bit you either

4711
03:40:30,480 --> 03:40:32,240
magnetize or demagnetize the little

4712
03:40:32,240 --> 03:40:33,360
doughnut

4713
03:40:33,360 --> 03:40:35,600
the wires going across gives you

4714
03:40:35,600 --> 03:40:37,680
row and the count ones coming down give

4715
03:40:37,680 --> 03:40:40,000
you column so that's how you address an

4716
03:40:40,000 --> 03:40:42,480
individual bit and the diagonal wire is

4717
03:40:42,480 --> 03:40:44,320
how you sense whether it's magnetized or

4718
03:40:44,320 --> 03:40:48,320
demagnetized kind of crazy right

4719
03:40:48,320 --> 03:40:50,080
they also had core

4720
03:40:50,080 --> 03:40:51,280
rom

4721
03:40:51,280 --> 03:40:53,520
you would weave the program directly

4722
03:40:53,520 --> 03:40:55,600
into the memory so each of those tiny

4723
03:40:55,600 --> 03:40:56,798
little beads

4724
03:40:56,798 --> 03:40:58,160
if you run the wire through the middle

4725
03:40:58,160 --> 03:40:59,360
you've got a one and if you run it

4726
03:40:59,360 --> 03:41:02,958
around the outside you've got a zero

4727
03:41:02,958 --> 03:41:05,280
and they hired little old ladies

4728
03:41:05,280 --> 03:41:07,520
particularly from the textile industry

4729
03:41:07,520 --> 03:41:08,958
to weave

4730
03:41:08,958 --> 03:41:10,320
the software

4731
03:41:10,320 --> 03:41:11,600
into the rom

4732
03:41:11,600 --> 03:41:14,240
by hand

4733
03:41:17,520 --> 03:41:18,878
so

4734
03:41:18,878 --> 03:41:20,958
let's talk about the actual architecture

4735
03:41:20,958 --> 03:41:22,958
the architecture is weird

4736
03:41:22,958 --> 03:41:25,600
15-bit words

4737
03:41:25,600 --> 03:41:27,600
bit in memory but one bit for parity

4738
03:41:27,600 --> 03:41:30,000
that's a little bit weird

4739
03:41:30,000 --> 03:41:32,240
ones complement math which means you get

4740
03:41:32,240 --> 03:41:35,200
a positive zero and a negative zero

4741
03:41:35,200 --> 03:41:37,920
yeah i don't want to deal with that

4742
03:41:37,920 --> 03:41:40,638
cpu registers are actually just memory

4743
03:41:40,638 --> 03:41:42,798
because in a modern cpu you talk about

4744
03:41:42,798 --> 03:41:44,560
all the registers that sit directly in

4745
03:41:44,560 --> 03:41:45,840
the cpu

4746
03:41:45,840 --> 03:41:47,760
this cpu is just built out of a bunch of

4747
03:41:47,760 --> 03:41:50,560
gates so the storage for cpu registers

4748
03:41:50,560 --> 03:41:53,120
was just main memory the first dozen or

4749
03:41:53,120 --> 03:41:55,440
so bytes of main memory were the cpu

4750
03:41:55,440 --> 03:41:58,320
registers there was no difference

4751
03:41:58,320 --> 03:42:00,240
they're kind of unusual

4752
03:42:00,240 --> 03:42:02,320
hardware watchdog timer cool cool we've

4753
03:42:02,320 --> 03:42:04,718
got that on modern stuff so if you don't

4754
03:42:04,718 --> 03:42:06,718
poke a little watchdog timer every 200

4755
03:42:06,718 --> 03:42:08,638
milliseconds machine goes into a soft

4756
03:42:08,638 --> 03:42:09,680
reset

4757
03:42:09,680 --> 03:42:10,958
it's fair

4758
03:42:10,958 --> 03:42:12,718
banked memory that's a kind of modern

4759
03:42:12,718 --> 03:42:14,798
idea so they could bank both the ram and

4760
03:42:14,798 --> 03:42:15,920
the rom

4761
03:42:15,920 --> 03:42:17,600
as they went along through the design

4762
03:42:17,600 --> 03:42:19,840
they needed more and more storage so

4763
03:42:19,840 --> 03:42:22,400
they banked both ram and rom in and out

4764
03:42:22,400 --> 03:42:25,920
depending on what software is running

4765
03:42:25,920 --> 03:42:28,240
no hardware stack

4766
03:42:28,240 --> 03:42:29,920
that's quite weird

4767
03:42:29,920 --> 03:42:32,240
so any anybody who knows about you know

4768
03:42:32,240 --> 03:42:33,760
stack operations

4769
03:42:33,760 --> 03:42:34,840
push

4770
03:42:34,840 --> 03:42:37,440
pop no hardware stack

4771
03:42:37,440 --> 03:42:38,560
weird

4772
03:42:38,560 --> 03:42:40,320
and then we have magic memory addresses

4773
03:42:40,320 --> 03:42:44,160
this is where stuff gets really weird

4774
03:42:44,160 --> 03:42:45,440
some of the features weren't built

4775
03:42:45,440 --> 03:42:47,200
directly into the cpu they were sort of

4776
03:42:47,200 --> 03:42:49,360
stuffed on the side of memory so they

4777
03:42:49,360 --> 03:42:51,040
have these things called edit registers

4778
03:42:51,040 --> 03:42:53,600
that gives you rotate right shift right

4779
03:42:53,600 --> 03:42:56,718
rotate left and shift right by seven

4780
03:42:56,718 --> 03:42:58,718
you write the data into the magic memory

4781
03:42:58,718 --> 03:43:00,240
location and then you read it back out

4782
03:43:00,240 --> 03:43:01,760
and it's shifted or rotated

4783
03:43:01,760 --> 03:43:03,680
appropriately so instead of actually

4784
03:43:03,680 --> 03:43:05,920
having a shift instruction

4785
03:43:05,920 --> 03:43:07,360
you just have a memory address that

4786
03:43:07,360 --> 03:43:09,040
doesn't give you back what you stored

4787
03:43:09,040 --> 03:43:09,920
which

4788
03:43:09,920 --> 03:43:11,120
yeah

4789
03:43:11,120 --> 03:43:12,798
sure

4790
03:43:12,798 --> 03:43:15,120
this little box is the diskey display

4791
03:43:15,120 --> 03:43:17,600
and keyboard this is the main user

4792
03:43:17,600 --> 03:43:20,000
interface to talk to the computer

4793
03:43:20,000 --> 03:43:23,200
very simplistic very small but also the

4794
03:43:23,200 --> 03:43:24,718
buttons need to be big enough so you can

4795
03:43:24,718 --> 03:43:26,878
poke them when you're wearing spacer

4796
03:43:26,878 --> 03:43:29,120
gloves

4797
03:43:29,120 --> 03:43:32,320
based on our nap based on a noun and

4798
03:43:32,320 --> 03:43:34,240
verb design

4799
03:43:34,240 --> 03:43:37,120
the verb defines what do you want to do

4800
03:43:37,120 --> 03:43:39,200
and the noun defines what do you want to

4801
03:43:39,200 --> 03:43:40,480
do it on

4802
03:43:40,480 --> 03:43:43,600
the mit guys in about 63

4803
03:43:43,600 --> 03:43:45,760
designed this user interface of noun and

4804
03:43:45,760 --> 03:43:46,638
verb

4805
03:43:46,638 --> 03:43:48,560
and they assumed that further along

4806
03:43:48,560 --> 03:43:50,080
someone would come up with a better user

4807
03:43:50,080 --> 03:43:52,240
interface

4808
03:43:52,240 --> 03:43:53,600
i'm not sure if they ran out of time

4809
03:43:53,600 --> 03:43:55,040
round out the money or just decided it

4810
03:43:55,040 --> 03:43:58,878
was good enough but this is what stayed

4811
03:43:58,958 --> 03:44:02,958
right io every computer has fancy i o

4812
03:44:02,958 --> 03:44:05,680
buttons and lights right that's easy

4813
03:44:05,680 --> 03:44:07,760
but the apollo guidance computer had

4814
03:44:07,760 --> 03:44:09,840
something a bit different

4815
03:44:09,840 --> 03:44:11,440
gyroscopes

4816
03:44:11,440 --> 03:44:14,000
sextants radar

4817
03:44:14,000 --> 03:44:19,120
and then thrusters and pyrotechnics

4818
03:44:19,120 --> 03:44:21,520
so hardware safety becomes a big deal

4819
03:44:21,520 --> 03:44:23,840
now this is height of the cold war

4820
03:44:23,840 --> 03:44:25,120
so one of the things that mission

4821
03:44:25,120 --> 03:44:27,280
control had was a remote diskey they

4822
03:44:27,280 --> 03:44:28,958
could actually interact with the apollo

4823
03:44:28,958 --> 03:44:30,480
guidance computer

4824
03:44:30,480 --> 03:44:32,400
from mission control across the radio

4825
03:44:32,400 --> 03:44:33,680
link

4826
03:44:33,680 --> 03:44:35,680
but you don't want your russians

4827
03:44:35,680 --> 03:44:37,920
getting up in your radionus because

4828
03:44:37,920 --> 03:44:39,760
there's no crypto right

4829
03:44:39,760 --> 03:44:41,440
so they simply had a block and accept

4830
03:44:41,440 --> 03:44:42,638
switch

4831
03:44:42,638 --> 03:44:44,480
you leave it and block most of the time

4832
03:44:44,480 --> 03:44:46,080
when grand control say hey we want to

4833
03:44:46,080 --> 03:44:48,080
meddle with your computer you put an

4834
03:44:48,080 --> 03:44:49,760
accept you let ground control do their

4835
03:44:49,760 --> 03:44:51,760
thing you put a blackened block that's

4836
03:44:51,760 --> 03:44:53,040
all good

4837
03:44:53,040 --> 03:44:54,480
and then we've got thrusters because you

4838
03:44:54,480 --> 03:44:57,040
don't want your engines just randomly

4839
03:44:57,040 --> 03:44:58,718
doing stuff so there's isolation

4840
03:44:58,718 --> 03:45:01,680
switches so the computer can control the

4841
03:45:01,680 --> 03:45:02,798
thrusters

4842
03:45:02,798 --> 03:45:05,760
but only when you enable that

4843
03:45:05,760 --> 03:45:07,760
and then pyrotechnics because you need

4844
03:45:07,760 --> 03:45:09,440
to be able to isolate your power

4845
03:45:09,440 --> 03:45:12,000
techniques

4846
03:45:15,200 --> 03:45:16,878
yeah that's

4847
03:45:16,878 --> 03:45:18,480
you don't want your computer doing that

4848
03:45:18,480 --> 03:45:19,600
you want

4849
03:45:19,600 --> 03:45:20,718
someone

4850
03:45:20,718 --> 03:45:21,760
someone

4851
03:45:21,760 --> 03:45:23,280
making sure that that only happens when

4852
03:45:23,280 --> 03:45:26,000
it should happen because on this apollo

4853
03:45:26,000 --> 03:45:29,360
spacecraft pyrotechnics we use to throw

4854
03:45:29,360 --> 03:45:30,798
away the bits of the spacecraft you

4855
03:45:30,798 --> 03:45:32,320
didn't need anymore

4856
03:45:32,320 --> 03:45:33,760
pretty important not to have that going

4857
03:45:33,760 --> 03:45:36,320
at the wrong moment

4858
03:45:36,320 --> 03:45:39,200
let's talk software does anyone know who

4859
03:45:39,200 --> 03:45:41,680
this is

4860
03:45:42,638 --> 03:45:44,638
hey

4861
03:45:44,638 --> 03:45:46,718
margaret hamilton

4862
03:45:46,718 --> 03:45:49,200
so she was in charge of a lot of the

4863
03:45:49,200 --> 03:45:50,798
software that was written for the apollo

4864
03:45:50,798 --> 03:45:52,878
guidance computer

4865
03:45:52,878 --> 03:45:55,040
and she decided that the software needed

4866
03:45:55,040 --> 03:45:57,520
to be just as good as the hardware the

4867
03:45:57,520 --> 03:45:59,280
problem is that all the people doing the

4868
03:45:59,280 --> 03:46:01,840
hardware were called engineers

4869
03:46:01,840 --> 03:46:03,680
and all the people doing the software

4870
03:46:03,680 --> 03:46:04,718
were called

4871
03:46:04,718 --> 03:46:06,400
programmers

4872
03:46:06,400 --> 03:46:08,080
so she coined the term software

4873
03:46:08,080 --> 03:46:09,440
engineering

4874
03:46:09,440 --> 03:46:11,360
and that refers to

4875
03:46:11,360 --> 03:46:14,080
a step above just programming it's about

4876
03:46:14,080 --> 03:46:16,878
having highly reliable software that

4877
03:46:16,878 --> 03:46:18,878
meets the needs of the customer for

4878
03:46:18,878 --> 03:46:22,798
either performance reliability etc

4879
03:46:22,798 --> 03:46:25,120
so think about that uh are we talking

4880
03:46:25,120 --> 03:46:27,440
programmers who just sort of write code

4881
03:46:27,440 --> 03:46:29,600
or software engineering

4882
03:46:29,600 --> 03:46:31,680
and that's a your pay rise in the job

4883
03:46:31,680 --> 03:46:34,680
description

4884
03:46:34,798 --> 03:46:36,560
virtual bytecode there's a cool modern

4885
03:46:36,560 --> 03:46:38,480
idea so you know

4886
03:46:38,480 --> 03:46:40,160
does the does the apollo guidance

4887
03:46:40,160 --> 03:46:42,400
computer run java

4888
03:46:42,400 --> 03:46:44,798
not quite but

4889
03:46:44,798 --> 03:46:46,638
as the software team got going they

4890
03:46:46,638 --> 03:46:48,480
realized they had hardware limitations

4891
03:46:48,480 --> 03:46:50,000
the hardware had already been pretty

4892
03:46:50,000 --> 03:46:52,080
much finished and locked in

4893
03:46:52,080 --> 03:46:54,560
so they invented a bytecode virtual

4894
03:46:54,560 --> 03:46:56,798
system so they had virtual instructions

4895
03:46:56,798 --> 03:46:59,360
and bytecode that kind of ran macros

4896
03:46:59,360 --> 03:47:00,878
that allowed them to have much more

4897
03:47:00,878 --> 03:47:02,638
complicated software in a small amount

4898
03:47:02,638 --> 03:47:03,680
of space

4899
03:47:03,680 --> 03:47:05,040
they added

4900
03:47:05,040 --> 03:47:07,920
trigonometry functions they added vector

4901
03:47:07,920 --> 03:47:09,760
arithmetic

4902
03:47:09,760 --> 03:47:11,840
all in virtual instructions and you

4903
03:47:11,840 --> 03:47:13,680
could then mix your virtual byte code

4904
03:47:13,680 --> 03:47:15,040
with your

4905
03:47:15,040 --> 03:47:16,400
regular

4906
03:47:16,400 --> 03:47:19,440
machine code all in the same place

4907
03:47:19,440 --> 03:47:22,000
quite a modern concept

4908
03:47:22,000 --> 03:47:23,840
talking of modern concepts

4909
03:47:23,840 --> 03:47:26,080
cooperative multitasking a lot of people

4910
03:47:26,080 --> 03:47:28,160
think that multitasking starts within a

4911
03:47:28,160 --> 03:47:29,760
windows

4912
03:47:29,760 --> 03:47:30,798
whatever

4913
03:47:30,798 --> 03:47:33,440
these guys were doing it way before

4914
03:47:33,440 --> 03:47:35,760
the scheduler has seven slots to run

4915
03:47:35,760 --> 03:47:38,480
tasks seven because

4916
03:47:38,480 --> 03:47:40,160
well octal

4917
03:47:40,160 --> 03:47:42,718
and one of them's the scheduler itself

4918
03:47:42,718 --> 03:47:46,638
and it's it's it's complicated

4919
03:47:46,638 --> 03:47:49,360
each task calls the yield instruction

4920
03:47:49,360 --> 03:47:51,840
every 20 milliseconds that takes care of

4921
03:47:51,840 --> 03:47:54,080
the watchdog timer but it also lets the

4922
03:47:54,080 --> 03:47:55,200
scheduler figure out if there's

4923
03:47:55,200 --> 03:47:56,480
something more important that should be

4924
03:47:56,480 --> 03:47:57,440
running

4925
03:47:57,440 --> 03:47:59,840
and it can swap the task in and out so

4926
03:47:59,840 --> 03:48:03,360
cooperative multitasking nice

4927
03:48:03,360 --> 03:48:05,360
the crew interacted with the software

4928
03:48:05,360 --> 03:48:07,920
via program numbers so when they wanted

4929
03:48:07,920 --> 03:48:09,760
to do a particular thing they would call

4930
03:48:09,760 --> 03:48:12,160
up a program

4931
03:48:12,160 --> 03:48:16,958
any program in the 200 series or p2x

4932
03:48:16,958 --> 03:48:19,040
was related to navigation

4933
03:48:19,040 --> 03:48:22,560
um p4 whatever was firing the engines

4934
03:48:22,560 --> 03:48:25,200
p6 you'll often hear during landing on

4935
03:48:25,200 --> 03:48:27,920
the moon p63 p64

4936
03:48:27,920 --> 03:48:29,920
that relates to landing on the moon

4937
03:48:29,920 --> 03:48:33,040
the other cool one here is p00

4938
03:48:33,040 --> 03:48:34,080
idle

4939
03:48:34,080 --> 03:48:35,840
and you'll hear this a lot in the radio

4940
03:48:35,840 --> 03:48:38,400
transcript when mission control want to

4941
03:48:38,400 --> 03:48:40,638
take control of the computer they need

4942
03:48:40,638 --> 03:48:43,920
the computer to be idle p00 and they

4943
03:48:43,920 --> 03:48:46,400
need the block and accept switch right

4944
03:48:46,400 --> 03:48:48,878
but nasa and their shortened acronyms

4945
03:48:48,878 --> 03:48:53,718
and lazy they say give us poo and accept

4946
03:48:53,718 --> 03:48:57,360
p00 was just commonly poo

4947
03:48:57,360 --> 03:48:58,400
um

4948
03:48:58,400 --> 03:49:00,717
sure

4949
03:49:00,878 --> 03:49:02,320
crash recovery

4950
03:49:02,320 --> 03:49:04,958
uh the software was designed around

4951
03:49:04,958 --> 03:49:06,560
doing a restart we talked about that

4952
03:49:06,560 --> 03:49:09,360
watchdog timer if the system goes into a

4953
03:49:09,360 --> 03:49:11,600
soft restart it could actually figure

4954
03:49:11,600 --> 03:49:12,798
out what it was doing what it was

4955
03:49:12,798 --> 03:49:15,760
running where it was at and pick up from

4956
03:49:15,760 --> 03:49:18,320
wherever it was because if you've just

4957
03:49:18,320 --> 03:49:20,718
lit an engine and a computer restarts

4958
03:49:20,718 --> 03:49:22,638
it's really important the computer knows

4959
03:49:22,638 --> 03:49:24,240
the engine is running and when it was

4960
03:49:24,240 --> 03:49:26,000
started and when it should get shut down

4961
03:49:26,000 --> 03:49:29,040
all of that so all of the software had a

4962
03:49:29,040 --> 03:49:31,120
known good state recovery point that was

4963
03:49:31,120 --> 03:49:33,440
put into memory on a very regular basis

4964
03:49:33,440 --> 03:49:35,280
so that a software set it could come

4965
03:49:35,280 --> 03:49:38,160
back to where it should be

4966
03:49:39,040 --> 03:49:42,080
real time debugging really well

4967
03:49:42,080 --> 03:49:44,240
you be the judge what they could do is

4968
03:49:44,240 --> 03:49:46,400
dump the entire of ram

4969
03:49:46,400 --> 03:49:48,320
down to mission control

4970
03:49:48,320 --> 03:49:51,200
because the entire ram is only like 2k

4971
03:49:51,200 --> 03:49:53,200
words not very much

4972
03:49:53,200 --> 03:49:55,920
and then mission control could actually

4973
03:49:55,920 --> 03:49:58,320
change it and upload a new ram image to

4974
03:49:58,320 --> 03:49:59,920
the computer because as long as the

4975
03:49:59,920 --> 03:50:01,600
computer is an idle you can mess around

4976
03:50:01,600 --> 03:50:03,360
with the ram and

4977
03:50:03,360 --> 03:50:06,000
it just keeps going which is

4978
03:50:06,000 --> 03:50:07,520
pretty crazy

4979
03:50:07,520 --> 03:50:08,958
i'm not quite sure it's real time

4980
03:50:08,958 --> 03:50:11,760
debugging but it's pretty close

4981
03:50:11,760 --> 03:50:14,240
right navigating to the moon

4982
03:50:14,240 --> 03:50:15,760
how do we actually get there you sort of

4983
03:50:15,760 --> 03:50:16,480
go

4984
03:50:16,480 --> 03:50:18,400
that way and hope for the best

4985
03:50:18,400 --> 03:50:20,320
well if you're in bitcoin it's that way

4986
03:50:20,320 --> 03:50:23,360
and hope for the best anyhow

4987
03:50:23,360 --> 03:50:25,280
uh to get to the moon

4988
03:50:25,280 --> 03:50:26,958
we have a state factor now the state

4989
03:50:26,958 --> 03:50:29,200
factor is

4990
03:50:29,200 --> 03:50:31,360
where are we where are we going which

4991
03:50:31,360 --> 03:50:33,680
direction that kind of stuff not a big

4992
03:50:33,680 --> 03:50:34,878
deal

4993
03:50:34,878 --> 03:50:36,638
the state vector is essentially six

4994
03:50:36,638 --> 03:50:40,320
numbers it's the x y and z position and

4995
03:50:40,320 --> 03:50:41,920
the x y and z

4996
03:50:41,920 --> 03:50:44,320
velocity right

4997
03:50:44,320 --> 03:50:46,480
against the current reference and that's

4998
03:50:46,480 --> 03:50:48,320
an interesting phrase the current

4999
03:50:48,320 --> 03:50:50,878
reference

5000
03:50:51,520 --> 03:50:54,240
this acronym refsmat

5001
03:50:54,240 --> 03:50:57,360
is essentially the current reference

5002
03:50:57,360 --> 03:50:58,958
frame of reference which we measure

5003
03:50:58,958 --> 03:51:00,798
everything from if you're sitting on the

5004
03:51:00,798 --> 03:51:02,878
launch pad about to go up

5005
03:51:02,878 --> 03:51:05,280
having the launch pad as zero zero kind

5006
03:51:05,280 --> 03:51:07,040
of makes a lot of sense

5007
03:51:07,040 --> 03:51:09,200
if you're about to land on the moon

5008
03:51:09,200 --> 03:51:11,200
still having the launch pad is zero zero

5009
03:51:11,200 --> 03:51:12,480
and the

5010
03:51:12,480 --> 03:51:13,760
moon's going this way and the earth's

5011
03:51:13,760 --> 03:51:15,360
going that way and the launch pad's

5012
03:51:15,360 --> 03:51:17,040
going that way because the earth is

5013
03:51:17,040 --> 03:51:18,160
rotating

5014
03:51:18,160 --> 03:51:20,638
no so what they did is they actually

5015
03:51:20,638 --> 03:51:22,240
changed the frame of reference several

5016
03:51:22,240 --> 03:51:24,560
times throughout the mission

5017
03:51:24,560 --> 03:51:27,200
they would upload a new refs mat and

5018
03:51:27,200 --> 03:51:28,878
then they would have to calculate a new

5019
03:51:28,878 --> 03:51:30,638
state vector because

5020
03:51:30,638 --> 03:51:33,440
all of your x's and y's and z's have all

5021
03:51:33,440 --> 03:51:35,520
changed

5022
03:51:35,520 --> 03:51:36,798
the other way they could figure out

5023
03:51:36,798 --> 03:51:38,000
where they are and where they are going

5024
03:51:38,000 --> 03:51:40,000
was optical alignment

5025
03:51:40,000 --> 03:51:41,760
since the early days of sailing ships

5026
03:51:41,760 --> 03:51:43,840
you use a sexton to figure out where you

5027
03:51:43,840 --> 03:51:46,400
are and going to the moon is just the

5028
03:51:46,400 --> 03:51:47,920
same

5029
03:51:47,920 --> 03:51:49,600
one object is either the earth or the

5030
03:51:49,600 --> 03:51:52,480
moon and the other object is a star and

5031
03:51:52,480 --> 03:51:54,958
by picking angles and doing this several

5032
03:51:54,958 --> 03:51:56,320
times you could figure out pretty

5033
03:51:56,320 --> 03:51:59,120
accurately which way you were pointing

5034
03:51:59,120 --> 03:52:01,040
and roughly where you were and you do

5035
03:52:01,040 --> 03:52:02,638
that over a period of time and you can

5036
03:52:02,638 --> 03:52:04,878
figure out how fast you're going as well

5037
03:52:04,878 --> 03:52:06,560
the angular measurements could be

5038
03:52:06,560 --> 03:52:09,280
stunningly accurate down to 1 100 of a

5039
03:52:09,280 --> 03:52:11,520
degree

5040
03:52:11,520 --> 03:52:13,120
and then we have some radio magic are

5041
03:52:13,120 --> 03:52:15,760
there any radio nerds in the audience

5042
03:52:15,760 --> 03:52:16,718
yeah

5043
03:52:16,718 --> 03:52:19,040
all right

5044
03:52:19,040 --> 03:52:21,920
this'll this does my head in but anyhow

5045
03:52:21,920 --> 03:52:24,320
i'm not a huge radio nerd so the main

5046
03:52:24,320 --> 03:52:26,480
radio communications was a two gigahertz

5047
03:52:26,480 --> 03:52:28,480
microwave signal

5048
03:52:28,480 --> 03:52:30,400
and they manipulated that on the

5049
03:52:30,400 --> 03:52:32,320
spacecraft and sent it back down again

5050
03:52:32,320 --> 03:52:34,718
so the uplink goes up at two gigahertz

5051
03:52:34,718 --> 03:52:36,718
the download comes up at two and a

5052
03:52:36,718 --> 03:52:38,400
little bit

5053
03:52:38,400 --> 03:52:40,718
and that allows them to use doppler to

5054
03:52:40,718 --> 03:52:42,560
figure out how fast the spacecraft is

5055
03:52:42,560 --> 03:52:44,240
going

5056
03:52:44,240 --> 03:52:47,520
down to around one meter per second

5057
03:52:47,520 --> 03:52:49,680
it's kind of nuts

5058
03:52:49,680 --> 03:52:51,360
the other thing they did in the uplink

5059
03:52:51,360 --> 03:52:54,160
is they put on a pseudo-random bitstream

5060
03:52:54,160 --> 03:52:55,600
and that way they could figure out how

5061
03:52:55,600 --> 03:52:57,200
long it took that bitstream to come back

5062
03:52:57,200 --> 03:52:59,200
down on the downlink and they could then

5063
03:52:59,200 --> 03:53:00,798
figure out speed of light to get

5064
03:53:00,798 --> 03:53:03,440
distance so now they've got

5065
03:53:03,440 --> 03:53:06,320
distance and speed of a spacecraft

5066
03:53:06,320 --> 03:53:09,120
that's 250 000 kilometers away and

5067
03:53:09,120 --> 03:53:11,120
they're measuring down to as much as one

5068
03:53:11,120 --> 03:53:12,638
or two meters

5069
03:53:12,638 --> 03:53:14,958
that's pretty damn impressive for 1960s

5070
03:53:14,958 --> 03:53:16,718
tank

5071
03:53:16,718 --> 03:53:17,520
right

5072
03:53:17,520 --> 03:53:19,200
let's bring all this together and talk

5073
03:53:19,200 --> 03:53:21,120
about a full mission

5074
03:53:21,120 --> 03:53:22,638
sitting on launch pad one of the last

5075
03:53:22,638 --> 03:53:24,560
things you'll hear in the countdown is

5076
03:53:24,560 --> 03:53:26,878
guidance is internal that means the

5077
03:53:26,878 --> 03:53:29,280
launch vehicle digital computer and the

5078
03:53:29,280 --> 03:53:30,878
apollo guidance computer have got the

5079
03:53:30,878 --> 03:53:32,878
state vector and the rest mat and they

5080
03:53:32,878 --> 03:53:35,040
know where they're going we do staging

5081
03:53:35,040 --> 03:53:36,798
this is all done by the launch vehicle

5082
03:53:36,798 --> 03:53:38,240
digital computer

5083
03:53:38,240 --> 03:53:41,120
can be monitored by the apollo guidance

5084
03:53:41,120 --> 03:53:43,040
computer app in the command module but

5085
03:53:43,040 --> 03:53:43,840
the

5086
03:53:43,840 --> 03:53:46,160
main commands are still the launch

5087
03:53:46,160 --> 03:53:48,480
vehicle digital computer

5088
03:53:48,480 --> 03:53:50,560
we get ourselves up into orbit

5089
03:53:50,560 --> 03:53:53,280
once we're in orbit we generally do one

5090
03:53:53,280 --> 03:53:56,320
or two laps of the earth to measure from

5091
03:53:56,320 --> 03:53:59,040
the ground exactly where are we

5092
03:53:59,040 --> 03:54:01,280
then we can burn for the moon

5093
03:54:01,280 --> 03:54:03,200
because when you light that engine and

5094
03:54:03,200 --> 03:54:05,360
how long you burn it is critical to

5095
03:54:05,360 --> 03:54:07,120
getting this orbital mechanics business

5096
03:54:07,120 --> 03:54:08,560
to work properly

5097
03:54:08,560 --> 03:54:09,840
once we're on the way to the moon we

5098
03:54:09,840 --> 03:54:11,440
don't need that other stage of the

5099
03:54:11,440 --> 03:54:12,718
rocket anymore so we're going to throw

5100
03:54:12,718 --> 03:54:15,200
it away but first we pick up our lunar

5101
03:54:15,200 --> 03:54:16,320
module because we're going to need that

5102
03:54:16,320 --> 03:54:17,760
lunar module for

5103
03:54:17,760 --> 03:54:20,080
the landing

5104
03:54:20,080 --> 03:54:22,160
three days later when we get to the moon

5105
03:54:22,160 --> 03:54:24,000
we slow down so we're burning in the

5106
03:54:24,000 --> 03:54:25,600
opposite direction to the direction of

5107
03:54:25,600 --> 03:54:29,520
travel we slow down to get into orbit

5108
03:54:29,520 --> 03:54:31,600
once we're in a happy stable orbit again

5109
03:54:31,600 --> 03:54:33,120
we can track that from the ground and

5110
03:54:33,120 --> 03:54:35,120
make sure that everything's right

5111
03:54:35,120 --> 03:54:37,360
time to go to the surface two people get

5112
03:54:37,360 --> 03:54:39,440
into the lunar module one stays in the

5113
03:54:39,440 --> 03:54:42,160
command module and down we go this is

5114
03:54:42,160 --> 03:54:46,638
where you'll hear in the commentary p-63

5115
03:54:46,638 --> 03:54:50,320
and then once they tip over p-64

5116
03:54:50,320 --> 03:54:53,279
down to the surface

5117
03:54:53,920 --> 03:54:55,760
shut down and at this point you'll hear

5118
03:54:55,760 --> 03:54:58,958
a radio call of 413 is in

5119
03:54:58,958 --> 03:55:00,798
that is a command to the abort guidance

5120
03:55:00,798 --> 03:55:02,240
system to let you know you're on the

5121
03:55:02,240 --> 03:55:03,680
surface

5122
03:55:03,680 --> 03:55:05,120
once we're done

5123
03:55:05,120 --> 03:55:06,718
take off again

5124
03:55:06,718 --> 03:55:08,878
rendezvous all of this timing for the

5125
03:55:08,878 --> 03:55:11,360
rendezvous is calculated by the

5126
03:55:11,360 --> 03:55:13,840
uh real-time compute complex at mission

5127
03:55:13,840 --> 03:55:15,200
control

5128
03:55:15,200 --> 03:55:16,560
docking

5129
03:55:16,560 --> 03:55:18,638
bring our crew back across bring our

5130
03:55:18,638 --> 03:55:21,040
rock samples whatever we then throw away

5131
03:55:21,040 --> 03:55:23,120
our lunar module don't need it anymore

5132
03:55:23,120 --> 03:55:25,360
by the way the computer in that smashes

5133
03:55:25,360 --> 03:55:26,718
into the moon

5134
03:55:26,718 --> 03:55:29,040
off we go back to the earth that burn to

5135
03:55:29,040 --> 03:55:30,718
head back to the earth timing is

5136
03:55:30,718 --> 03:55:32,240
critical

5137
03:55:32,240 --> 03:55:34,080
once we get to the earth down through

5138
03:55:34,080 --> 03:55:38,000
the atmosphere computer again p63 p64

5139
03:55:38,000 --> 03:55:42,320
because we're landing on down

5140
03:55:42,320 --> 03:55:43,920
onto the parachutes

5141
03:55:43,920 --> 03:55:45,600
splash into the ocean

5142
03:55:45,600 --> 03:55:47,840
picked up by an aircraft carrier

5143
03:55:47,840 --> 03:55:49,120
depending on which mission you're on

5144
03:55:49,120 --> 03:55:50,718
you've ended like eight or ten days in

5145
03:55:50,718 --> 03:55:54,480
isolation because moon germs um and then

5146
03:55:54,480 --> 03:55:56,080
you do the world tour and the handshakes

5147
03:55:56,080 --> 03:55:57,440
and rich and famous forever more and

5148
03:55:57,440 --> 03:55:59,440
write a book

5149
03:55:59,440 --> 03:56:01,040
let's talk about things that went wrong

5150
03:56:01,040 --> 03:56:02,560
a lot of people assumed that landing on

5151
03:56:02,560 --> 03:56:04,798
the moon was just it worked isn't that

5152
03:56:04,798 --> 03:56:06,560
cool

5153
03:56:06,560 --> 03:56:09,440
mostly um apollo 8 this was the first

5154
03:56:09,440 --> 03:56:11,200
trip out to the moon

5155
03:56:11,200 --> 03:56:12,958
uh jim level pushed the wrong button on

5156
03:56:12,958 --> 03:56:14,560
the diskey and

5157
03:56:14,560 --> 03:56:16,638
reset the guidance system to launch

5158
03:56:16,638 --> 03:56:19,200
configuration on the pad which

5159
03:56:19,200 --> 03:56:20,878
wiped out the state vector and screwed

5160
03:56:20,878 --> 03:56:22,560
up the refs mountain

5161
03:56:22,560 --> 03:56:25,760
ugly now grand control could all use

5162
03:56:25,760 --> 03:56:28,240
that radio tracking data and simply

5163
03:56:28,240 --> 03:56:30,320
uplinked a new state factor

5164
03:56:30,320 --> 03:56:31,760
but they made him do it the hard way for

5165
03:56:31,760 --> 03:56:34,400
practice so he realigned it realigned

5166
03:56:34,400 --> 03:56:37,120
everything with sextant um and start

5167
03:56:37,120 --> 03:56:39,600
sightings which was a useful trick to

5168
03:56:39,600 --> 03:56:41,680
know because jim level

5169
03:56:41,680 --> 03:56:44,560
had to do that again a wee while later

5170
03:56:44,560 --> 03:56:46,560
apollo 11 this one is a bit more well

5171
03:56:46,560 --> 03:56:48,958
known amongst the space nerds

5172
03:56:48,958 --> 03:56:51,280
during the final descent to the moon

5173
03:56:51,280 --> 03:56:55,040
uh buzz aldrin pushed verb 16 which is

5174
03:56:55,040 --> 03:56:56,400
please display

5175
03:56:56,400 --> 03:56:59,280
noun 68 which is our height

5176
03:56:59,280 --> 03:57:02,000
and that displays the delta h or change

5177
03:57:02,000 --> 03:57:03,120
in height

5178
03:57:03,120 --> 03:57:05,360
cool problem is the computer was a bit

5179
03:57:05,360 --> 03:57:06,638
busy

5180
03:57:06,638 --> 03:57:07,760
the

5181
03:57:07,760 --> 03:57:09,600
rendezvous radar had been left in a

5182
03:57:09,600 --> 03:57:12,160
weird state the computer was a bit busy

5183
03:57:12,160 --> 03:57:14,160
and it didn't really cope so

5184
03:57:14,160 --> 03:57:16,798
the multitasking got overloaded it

5185
03:57:16,798 --> 03:57:19,680
chucked the 1202 alum

5186
03:57:19,680 --> 03:57:21,200
interestingly i've been thinking about

5187
03:57:21,200 --> 03:57:24,160
this the computer got overloaded because

5188
03:57:24,160 --> 03:57:26,000
the radar was left on

5189
03:57:26,000 --> 03:57:27,680
okay

5190
03:57:27,680 --> 03:57:28,560
but

5191
03:57:28,560 --> 03:57:30,320
all of the math and the computer for

5192
03:57:30,320 --> 03:57:35,040
delta h is all calculated in si units

5193
03:57:35,040 --> 03:57:38,160
and you know meters and sensible things

5194
03:57:38,160 --> 03:57:40,240
it is then converted

5195
03:57:40,240 --> 03:57:43,520
to feet to put on the display

5196
03:57:43,520 --> 03:57:45,120
because they're pilots they're used to

5197
03:57:45,120 --> 03:57:46,718
seeing you know 30 000 feet because

5198
03:57:46,718 --> 03:57:47,920
they're pilots

5199
03:57:47,920 --> 03:57:50,080
i suspect that if they just displayed

5200
03:57:50,080 --> 03:57:51,840
everything in metric the computer

5201
03:57:51,840 --> 03:57:55,840
wouldn't have been as busy who knows

5202
03:57:55,920 --> 03:57:58,240
maybe i'm biased against you know si

5203
03:57:58,240 --> 03:58:01,840
units versus the us craziness

5204
03:58:01,840 --> 03:58:05,120
apollo 12 it got struck by lightning

5205
03:58:05,120 --> 03:58:06,400
twice

5206
03:58:06,400 --> 03:58:08,798
uh turns out that when you go into space

5207
03:58:08,798 --> 03:58:10,958
you leave this condensation trail that's

5208
03:58:10,958 --> 03:58:12,878
a really good lightning conductor took

5209
03:58:12,878 --> 03:58:15,440
out the main computer

5210
03:58:15,440 --> 03:58:17,120
the launch vehicle digital computer

5211
03:58:17,120 --> 03:58:18,958
wasn't affected it was flying the saturn

5212
03:58:18,958 --> 03:58:22,160
5 and all was good but up front well new

5213
03:58:22,160 --> 03:58:23,840
mission control had lost data there were

5214
03:58:23,840 --> 03:58:25,840
lights all over the place warning lights

5215
03:58:25,840 --> 03:58:28,480
alarms all sorts of crazy

5216
03:58:28,480 --> 03:58:30,400
and it took a half a minute for anyone

5217
03:58:30,400 --> 03:58:32,080
to figure out what to do and what did

5218
03:58:32,080 --> 03:58:33,680
they do

5219
03:58:33,680 --> 03:58:37,120
capcom called apollo 12 houston

5220
03:58:37,120 --> 03:58:39,600
try sce to auxiliary

5221
03:58:39,600 --> 03:58:41,360
and the crew didn't quite know what

5222
03:58:41,360 --> 03:58:42,638
their switch was so it took them a

5223
03:58:42,638 --> 03:58:44,080
minute but they got it

5224
03:58:44,080 --> 03:58:47,280
computer came right all is good sce is

5225
03:58:47,280 --> 03:58:49,120
the signal conditioning equipment it's

5226
03:58:49,120 --> 03:58:51,120
part of a power management for the

5227
03:58:51,120 --> 03:58:52,878
computer so once they got that squared

5228
03:58:52,878 --> 03:58:53,760
away

5229
03:58:53,760 --> 03:58:56,480
mission's back on track

5230
03:58:56,480 --> 03:58:58,400
thirteen hopefully people know this one

5231
03:58:58,400 --> 03:58:59,200
like

5232
03:58:59,200 --> 03:59:01,520
tom hanks went and made a movie and all

5233
03:59:01,520 --> 03:59:02,480
um

5234
03:59:02,480 --> 03:59:04,160
halfway to the moon the oxygen tank

5235
03:59:04,160 --> 03:59:06,000
exploded

5236
03:59:06,000 --> 03:59:08,560
houston we've had a problem

5237
03:59:08,560 --> 03:59:10,320
uh but a lack of power they jumped into

5238
03:59:10,320 --> 03:59:12,160
the lunar module and used that as a

5239
03:59:12,160 --> 03:59:14,718
lifeboat but to get home they had to do

5240
03:59:14,718 --> 03:59:17,120
the navigation they had powered down the

5241
03:59:17,120 --> 03:59:18,718
apollo guidance computer because it was

5242
03:59:18,718 --> 03:59:20,718
using too much electricity

5243
03:59:20,718 --> 03:59:22,480
and they used the abort guidance system

5244
03:59:22,480 --> 03:59:24,320
to actually do that navigation to get

5245
03:59:24,320 --> 03:59:26,320
home in the movie you'll see there's a

5246
03:59:26,320 --> 03:59:27,760
crazy scene where they're like looking

5247
03:59:27,760 --> 03:59:29,840
at the wind looking out the window and

5248
03:59:29,840 --> 03:59:31,440
kind of winging it with the joystick and

5249
03:59:31,440 --> 03:59:33,280
it's all that didn't happen they just

5250
03:59:33,280 --> 03:59:34,878
lined it up with a bought guidance

5251
03:59:34,878 --> 03:59:39,200
system and pushed the button it's fine

5252
03:59:39,200 --> 03:59:41,280
i mean you know comparatively fine

5253
03:59:41,280 --> 03:59:44,240
uh apollo 14 just before landing on the

5254
03:59:44,240 --> 03:59:45,280
surface

5255
03:59:45,280 --> 03:59:47,280
they got an abort light

5256
03:59:47,280 --> 03:59:49,200
which shouldn't happen so they tapped on

5257
03:59:49,200 --> 03:59:53,400
the panel and the light went out

5258
03:59:53,920 --> 03:59:56,160
so

5259
03:59:56,638 --> 03:59:58,240
they figured that's probably not a

5260
03:59:58,240 --> 04:00:00,320
complete solution you know root cause

5261
04:00:00,320 --> 04:00:01,840
analysis says

5262
04:00:01,840 --> 04:00:03,920
that's not going to yeah

5263
04:00:03,920 --> 04:00:05,360
so mission control said let's do a

5264
04:00:05,360 --> 04:00:07,280
software fix you remember all the

5265
04:00:07,280 --> 04:00:09,280
software woven and by all the little old

5266
04:00:09,280 --> 04:00:10,798
ladies you can't just change the

5267
04:00:10,798 --> 04:00:12,240
software

5268
04:00:12,240 --> 04:00:13,600
they cheated they

5269
04:00:13,600 --> 04:00:15,040
tricked the computer to thinking it was

5270
04:00:15,040 --> 04:00:17,120
an abort mode already so it wouldn't

5271
04:00:17,120 --> 04:00:18,840
check the abort

5272
04:00:18,840 --> 04:00:20,638
switch so

5273
04:00:20,638 --> 04:00:23,120
what can we learn from apollo

5274
04:00:23,120 --> 04:00:26,160
have crash recovery stuff goes wrong

5275
04:00:26,160 --> 04:00:28,480
microsoft word these days has our auto

5276
04:00:28,480 --> 04:00:31,200
save all the time brilliant

5277
04:00:31,200 --> 04:00:34,560
catch every era the 1202 alarm should

5278
04:00:34,560 --> 04:00:36,080
never have happened

5279
04:00:36,080 --> 04:00:38,798
but it was caught process documented

5280
04:00:38,798 --> 04:00:40,080
brilliant

5281
04:00:40,080 --> 04:00:42,240
isolate your industrial control system

5282
04:00:42,240 --> 04:00:44,560
because

5283
04:00:45,360 --> 04:00:47,920
have a good ui that disky very very

5284
04:00:47,920 --> 04:00:50,000
simple now jim lovell's mistake should

5285
04:00:50,000 --> 04:00:53,360
it have popped up uh are you sure

5286
04:00:53,360 --> 04:00:55,600
or should there have been an undo button

5287
04:00:55,600 --> 04:00:57,520
uh it was before the days of clippy so

5288
04:00:57,520 --> 04:00:59,440
who knows

5289
04:00:59,440 --> 04:01:02,878
and last of all keep calming set sce to

5290
04:01:02,878 --> 04:01:04,400
ox

5291
04:01:04,400 --> 04:01:06,560
so is a pocket calculator more powerful

5292
04:01:06,560 --> 04:01:08,638
than the computer gold man to the moon

5293
04:01:08,638 --> 04:01:11,040
no pocket calculators can't drive big

5294
04:01:11,040 --> 04:01:14,480
rocket engines and do orbital mechanics

5295
04:01:14,480 --> 04:01:16,240
if you want to know more a man on the

5296
04:01:16,240 --> 04:01:17,120
moon

5297
04:01:17,120 --> 04:01:19,520
uh by andrew chalkin is essentially the

5298
04:01:19,520 --> 04:01:23,200
definitive reference on apollo stuff

5299
04:01:23,200 --> 04:01:25,440
how apollo flew to the moon is a very

5300
04:01:25,440 --> 04:01:27,040
good book that has a lot of technical

5301
04:01:27,040 --> 04:01:28,080
detail

5302
04:01:28,080 --> 04:01:30,320
and if you want smaller and bite-sized

5303
04:01:30,320 --> 04:01:32,638
13 minutes to the moon bbc podcast

5304
04:01:32,638 --> 04:01:35,360
series from about two years ago covers

5305
04:01:35,360 --> 04:01:38,000
just the landing on the moon sequence

5306
04:01:38,000 --> 04:01:39,760
and if you want to know anything else

5307
04:01:39,760 --> 04:01:41,120
come and see me through the rest of the

5308
04:01:41,120 --> 04:01:45,400
two days thank you

5309
04:01:53,520 --> 04:01:55,280
thank you very much drock

5310
04:01:55,280 --> 04:01:56,400
all right we're going to break for lunch

5311
04:01:56,400 --> 04:01:58,160
we're running about 15 behind but uh

5312
04:01:58,160 --> 04:02:01,120
we'll start back on schedule so about 45

5313
04:02:01,120 --> 04:02:04,080
minutes uh to go and get some lunch

5314
04:02:04,080 --> 04:02:05,760
please leave the venue and go and you

5315
04:02:05,760 --> 04:02:07,440
know enjoy the fact that it's actually

5316
04:02:07,440 --> 04:02:09,360
sunny outside in wellington for once get

5317
04:02:09,360 --> 04:02:11,280
some fresh air and the reminder please

5318
04:02:11,280 --> 04:02:12,958
wear your masks

5319
04:02:12,958 --> 04:02:15,200
we've had our first uh positive rat for

5320
04:02:15,200 --> 04:02:16,638
someone who has been here today so

5321
04:02:16,638 --> 04:02:17,760
there's a reason why you're wearing

5322
04:02:17,760 --> 04:02:19,840
masks right it's inevitable that it is

5323
04:02:19,840 --> 04:02:21,120
around

5324
04:02:21,120 --> 04:02:22,560
please continue the mask and we'll see

5325
04:02:22,560 --> 04:02:23,920
you back

5326
04:02:23,920 --> 04:02:27,560
uh per the schedule

5327
05:06:10,000 --> 05:06:11,520
all right welcome back my friends

5328
05:06:11,520 --> 05:06:12,878
welcome back

5329
05:06:12,878 --> 05:06:14,638
we're going to power on through our

5330
05:06:14,638 --> 05:06:16,958
afternoon's entertainment and i'm sure

5331
05:06:16,958 --> 05:06:19,120
you will all be entertained

5332
05:06:19,120 --> 05:06:19,920
now

5333
05:06:19,920 --> 05:06:21,520
it's my great pleasure to welcome to the

5334
05:06:21,520 --> 05:06:23,520
stage representing cult security local

5335
05:06:23,520 --> 05:06:26,000
infosec shop of some renown

5336
05:06:26,000 --> 05:06:27,920
mr adrian hayes

5337
05:06:27,920 --> 05:06:32,940
[Applause]

5338
05:06:33,120 --> 05:06:34,160
all right

5339
05:06:34,160 --> 05:06:36,000
my name's adrian i work over at pulse

5340
05:06:36,000 --> 05:06:37,520
security we're a cyber security company

5341
05:06:37,520 --> 05:06:39,520
specializing in pen testing attacker

5342
05:06:39,520 --> 05:06:41,360
simulation digital forensics sensor

5343
05:06:41,360 --> 05:06:44,240
response and sponsoring conferences um

5344
05:06:44,240 --> 05:06:45,840
so i'm going to walk you through my

5345
05:06:45,840 --> 05:06:47,440
approach to some quick ones you know

5346
05:06:47,440 --> 05:06:49,360
when you're given a suspicious file

5347
05:06:49,360 --> 05:06:50,638
potentially as part of an incident

5348
05:06:50,638 --> 05:06:52,160
response or you know triage or something

5349
05:06:52,160 --> 05:06:53,920
like that but we're going to focus more

5350
05:06:53,920 --> 05:06:56,558
on what's going on under the hoods and

5351
05:06:56,558 --> 05:06:57,680
actually you know thinking about

5352
05:06:57,680 --> 05:06:59,280
applying our brains instead of just kind

5353
05:06:59,280 --> 05:07:02,958
of believing the automated tools

5354
05:07:02,958 --> 05:07:05,600
so first let's set the scene so chapter

5355
05:07:05,600 --> 05:07:08,480
one the scene um so incident response

5356
05:07:08,480 --> 05:07:09,920
you know there's a lot going on often it

5357
05:07:09,920 --> 05:07:11,200
looks a little like this a little bit of

5358
05:07:11,200 --> 05:07:13,760
fear uncertainty

5359
05:07:13,760 --> 05:07:15,360
doubts um

5360
05:07:15,360 --> 05:07:16,878
and there'll be you know million things

5361
05:07:16,878 --> 05:07:18,558
going on at some point during all of

5362
05:07:18,558 --> 05:07:19,840
this someone might say hey i've got a

5363
05:07:19,840 --> 05:07:22,718
suspicious file is this malware and my

5364
05:07:22,718 --> 05:07:25,040
response to that would typically be oh

5365
05:07:25,040 --> 05:07:26,320
wait a minute i'm going to need a lot

5366
05:07:26,320 --> 05:07:27,840
more info here you know what the hell is

5367
05:07:27,840 --> 05:07:30,080
going on chapter two what the hell is

5368
05:07:30,080 --> 05:07:31,040
going on

5369
05:07:31,040 --> 05:07:33,680
so tell me the story you know give me

5370
05:07:33,680 --> 05:07:36,160
the context why this file where did it

5371
05:07:36,160 --> 05:07:37,360
come from what makes you think it's

5372
05:07:37,360 --> 05:07:39,840
suspicious and from that discussion is

5373
05:07:39,840 --> 05:07:41,280
generally where we can make decisions as

5374
05:07:41,280 --> 05:07:43,120
to how we want to approach this whole

5375
05:07:43,120 --> 05:07:44,878
problem

5376
05:07:44,878 --> 05:07:46,240
and we'd always kind of like look at it

5377
05:07:46,240 --> 05:07:47,520
and go you know

5378
05:07:47,520 --> 05:07:50,000
is in-depth malware analysis a good idea

5379
05:07:50,000 --> 05:07:51,760
and the answer is well

5380
05:07:51,760 --> 05:07:54,160
most cases probably not you know there's

5381
05:07:54,160 --> 05:07:55,360
there's

5382
05:07:55,360 --> 05:07:56,080
a

5383
05:07:56,080 --> 05:07:57,440
certain amount of technical people that

5384
05:07:57,440 --> 05:07:58,558
can do a certain amount of stuff in a

5385
05:07:58,558 --> 05:07:59,680
certain amount of time and we need to

5386
05:07:59,680 --> 05:08:01,920
make good decisions move fast learn what

5387
05:08:01,920 --> 05:08:03,520
we can and kind of iterate that process

5388
05:08:03,520 --> 05:08:06,000
so are we better off spending time you

5389
05:08:06,000 --> 05:08:08,000
know isolating machines from the network

5390
05:08:08,000 --> 05:08:09,280
you know tighten up your firewalls

5391
05:08:09,280 --> 05:08:11,840
fixing up your edr or antivirus so that

5392
05:08:11,840 --> 05:08:12,878
it you know

5393
05:08:12,878 --> 05:08:14,240
actually works which is a story for

5394
05:08:14,240 --> 05:08:15,760
another time

5395
05:08:15,760 --> 05:08:17,200
so we kind of constantly think about

5396
05:08:17,200 --> 05:08:18,400
this how we're going to fit in with the

5397
05:08:18,400 --> 05:08:20,160
rest of the instant response that's

5398
05:08:20,160 --> 05:08:22,400
happening and is spending hours and

5399
05:08:22,400 --> 05:08:24,480
giger or ida you know a good idea right

5400
05:08:24,480 --> 05:08:26,480
now so anyway let's say we've got

5401
05:08:26,480 --> 05:08:27,920
something that's suspected malware and

5402
05:08:27,920 --> 05:08:29,040
we've decided we're going to take this

5403
05:08:29,040 --> 05:08:31,360
quiz so chapter three let's take a

5404
05:08:31,360 --> 05:08:34,320
squish so in 30 minutes or less given

5405
05:08:34,320 --> 05:08:36,160
this file and given all the details in

5406
05:08:36,160 --> 05:08:37,840
the background as to why we're looking

5407
05:08:37,840 --> 05:08:41,120
at it you know what can we do to to

5408
05:08:41,120 --> 05:08:42,638
you know make some guesses about what it

5409
05:08:42,638 --> 05:08:44,320
is what it might do and what can we

5410
05:08:44,320 --> 05:08:46,160
conclude after that time

5411
05:08:46,160 --> 05:08:48,000
so in order to do this you're gonna need

5412
05:08:48,000 --> 05:08:50,480
some sort of analysis environment um so

5413
05:08:50,480 --> 05:08:52,638
if you kind of already have like a real

5414
05:08:52,638 --> 05:08:54,558
and fancy analysis environment then

5415
05:08:54,558 --> 05:08:56,558
maybe this talk isn't for you but

5416
05:08:56,558 --> 05:08:58,320
if you don't uh then i'd probably

5417
05:08:58,320 --> 05:09:00,320
recommend you know a virtual machine

5418
05:09:00,320 --> 05:09:02,160
probably a linux virtual machine

5419
05:09:02,160 --> 05:09:03,840
and it's somewhere like

5420
05:09:03,840 --> 05:09:06,320
far away from the rest of your important

5421
05:09:06,320 --> 05:09:08,638
stuff so you might spin up you know

5422
05:09:08,638 --> 05:09:11,360
ubuntu box on ec2 on 80

5423
05:09:11,360 --> 05:09:13,760
aws accounts um

5424
05:09:13,760 --> 05:09:15,120
that's far away because we kind of have

5425
05:09:15,120 --> 05:09:16,958
to assume that if we're working with

5426
05:09:16,958 --> 05:09:18,798
malware and malicious stuff inside this

5427
05:09:18,798 --> 05:09:21,040
virtual machine it could all go horribly

5428
05:09:21,040 --> 05:09:23,680
horribly wrong at any moment

5429
05:09:23,680 --> 05:09:24,558
so

5430
05:09:24,558 --> 05:09:25,520
um

5431
05:09:25,520 --> 05:09:27,280
the easy hit list of stuff that i would

5432
05:09:27,280 --> 05:09:28,718
first look at is first of all file type

5433
05:09:28,718 --> 05:09:30,160
identification what is this thing and

5434
05:09:30,160 --> 05:09:32,080
second of all what's inside this thing

5435
05:09:32,080 --> 05:09:35,360
so we are going to go and do that

5436
05:09:35,360 --> 05:09:36,638
and

5437
05:09:36,638 --> 05:09:38,958
let me flick over

5438
05:09:38,958 --> 05:09:43,440
to my virtual machine over here so

5439
05:09:43,440 --> 05:09:45,280
i have four samples so these are just

5440
05:09:45,280 --> 05:09:47,360
four files um they don't have file

5441
05:09:47,360 --> 05:09:49,120
extensions we don't know what they are

5442
05:09:49,120 --> 05:09:51,360
um so first of all you know

5443
05:09:51,360 --> 05:09:53,280
what are we looking at here um so let me

5444
05:09:53,280 --> 05:09:54,558
introduce you to the file command so the

5445
05:09:54,558 --> 05:09:56,400
file command is this this magic command

5446
05:09:56,400 --> 05:09:58,080
has this magic database full of all

5447
05:09:58,080 --> 05:09:59,280
sorts of information that looks through

5448
05:09:59,280 --> 05:10:01,120
that it looks the contents of your file

5449
05:10:01,120 --> 05:10:02,798
tries to match them up and tells you you

5450
05:10:02,798 --> 05:10:04,638
know what the thing is real

5451
05:10:04,638 --> 05:10:06,000
straightforward this comes with pretty

5452
05:10:06,000 --> 05:10:06,798
much

5453
05:10:06,798 --> 05:10:09,840
any linux uh these days which is part of

5454
05:10:09,840 --> 05:10:11,680
why i like to do this kind of stuff and

5455
05:10:11,680 --> 05:10:14,558
like so let's run file on all of these

5456
05:10:14,558 --> 05:10:16,000
samples

5457
05:10:16,000 --> 05:10:17,120
um

5458
05:10:17,120 --> 05:10:18,558
and i've just done that with the start

5459
05:10:18,558 --> 05:10:20,000
so let's look at the first one so sample

5460
05:10:20,000 --> 05:10:22,240
one it's an elf an elf binary so this is

5461
05:10:22,240 --> 05:10:24,638
like a linux unix c executable so if

5462
05:10:24,638 --> 05:10:26,400
you're like running a like a program

5463
05:10:26,400 --> 05:10:28,080
it's probably going to come in an elf

5464
05:10:28,080 --> 05:10:29,920
64-bit it's set up for the arm

5465
05:10:29,920 --> 05:10:31,440
architecture

5466
05:10:31,440 --> 05:10:33,200
what else we got here it's stripped so

5467
05:10:33,200 --> 05:10:34,718
stripped is something i always look at

5468
05:10:34,718 --> 05:10:35,440
so

5469
05:10:35,440 --> 05:10:37,760
when a compiler compiles source code

5470
05:10:37,760 --> 05:10:40,400
into a binary it likes to shove all of

5471
05:10:40,400 --> 05:10:41,280
these

5472
05:10:41,280 --> 05:10:43,520
symbols and bits and pieces in there

5473
05:10:43,520 --> 05:10:45,680
which are things like function names and

5474
05:10:45,680 --> 05:10:47,040
other bits of information about the

5475
05:10:47,040 --> 05:10:48,160
source code which from a reverse

5476
05:10:48,160 --> 05:10:50,638
engineering and analysis perspective

5477
05:10:50,638 --> 05:10:52,480
is really really really handy so

5478
05:10:52,480 --> 05:10:54,000
stripped means that all of that has been

5479
05:10:54,000 --> 05:10:55,520
taken out

5480
05:10:55,520 --> 05:10:57,360
cool that's what we would expect to see

5481
05:10:57,360 --> 05:10:58,638
it's pretty unusual to see a

5482
05:10:58,638 --> 05:11:01,440
non-stripped binary so sample two

5483
05:11:01,440 --> 05:11:03,040
that's a word document

5484
05:11:03,040 --> 05:11:04,958
that's pretty straightforward uh sample

5485
05:11:04,958 --> 05:11:07,280
three um so this is another alpha

5486
05:11:07,280 --> 05:11:10,320
executable this time for x86 so that

5487
05:11:10,320 --> 05:11:12,718
would run you know on my machine here 64

5488
05:11:12,718 --> 05:11:14,080
bit

5489
05:11:14,080 --> 05:11:15,200
another thing that stands out to me

5490
05:11:15,200 --> 05:11:16,480
about this one immediately is we've got

5491
05:11:16,480 --> 05:11:19,280
to go build id so this this kind of tips

5492
05:11:19,280 --> 05:11:20,400
off that

5493
05:11:20,400 --> 05:11:22,400
whoever like whoever wrote this wrote

5494
05:11:22,400 --> 05:11:24,638
this in golang right which programming

5495
05:11:24,638 --> 05:11:26,000
language which is becoming really

5496
05:11:26,000 --> 05:11:29,280
popular is popular with uh with malware

5497
05:11:29,280 --> 05:11:31,280
again it's stripped and the final one is

5498
05:11:31,280 --> 05:11:32,718
just a zip archive and we can see that

5499
05:11:32,718 --> 05:11:34,320
it's encrypted right file type

5500
05:11:34,320 --> 05:11:36,798
identification run file on it

5501
05:11:36,798 --> 05:11:38,638
easy

5502
05:11:38,638 --> 05:11:40,480
so let's have a bit of a look inside

5503
05:11:40,480 --> 05:11:42,400
these files so we we know that sample

5504
05:11:42,400 --> 05:11:44,718
three is uh

5505
05:11:44,718 --> 05:11:47,280
as an executable so spoiler alert sample

5506
05:11:47,280 --> 05:11:48,240
three is

5507
05:11:48,240 --> 05:11:50,080
actual malware so this is actual malware

5508
05:11:50,080 --> 05:11:51,680
that was actually used

5509
05:11:51,680 --> 05:11:53,840
late last year um i pulled it off the

5510
05:11:53,840 --> 05:11:55,440
internet so that i can kind of show you

5511
05:11:55,440 --> 05:11:57,280
guys about it it is a little bit cherry

5512
05:11:57,280 --> 05:11:59,200
picked it is quite easy to

5513
05:11:59,200 --> 05:12:00,958
reverse engineer and analyze and i'll

5514
05:12:00,958 --> 05:12:02,878
we'll kind of run through that it's not

5515
05:12:02,878 --> 05:12:05,040
always this easy so let me introduce you

5516
05:12:05,040 --> 05:12:06,320
to the strings command the strings

5517
05:12:06,320 --> 05:12:08,000
command is another really

5518
05:12:08,000 --> 05:12:09,280
straightforward thing comes with pretty

5519
05:12:09,280 --> 05:12:11,280
much every linux so and what it does is

5520
05:12:11,280 --> 05:12:13,440
it looks through a file so binary file

5521
05:12:13,440 --> 05:12:15,520
any file and it looks for human readable

5522
05:12:15,520 --> 05:12:17,440
strings of characters so text kind of

5523
05:12:17,440 --> 05:12:18,638
stuff

5524
05:12:18,638 --> 05:12:19,920
we're going to pipe that over to less

5525
05:12:19,920 --> 05:12:22,240
and that gives us a um

5526
05:12:22,240 --> 05:12:24,160
that gives us kind of pagination and

5527
05:12:24,160 --> 05:12:26,558
stuff so we can kind of see these

5528
05:12:26,558 --> 05:12:28,000
strings that it's finding there's a lot

5529
05:12:28,000 --> 05:12:29,600
of like really short kind of garbage

5530
05:12:29,600 --> 05:12:31,760
which you would expect just from binary

5531
05:12:31,760 --> 05:12:33,120
files so let's filter those out so let's

5532
05:12:33,120 --> 05:12:35,360
say on every string that is 20

5533
05:12:35,360 --> 05:12:37,840
characters or more

5534
05:12:37,840 --> 05:12:41,120
so suddenly we're seeing little snippets

5535
05:12:41,120 --> 05:12:42,798
of go types and other little bits of

5536
05:12:42,798 --> 05:12:44,240
information so the great thing about

5537
05:12:44,240 --> 05:12:46,000
golang and

5538
05:12:46,000 --> 05:12:47,680
partially why i chose it for this talk

5539
05:12:47,680 --> 05:12:49,280
is that the compiler likes to take all

5540
05:12:49,280 --> 05:12:50,558
those symbols that i was talking about

5541
05:12:50,558 --> 05:12:51,920
and jam them into the binary and they're

5542
05:12:51,920 --> 05:12:53,200
really hard to get rid of you can kind

5543
05:12:53,200 --> 05:12:54,798
of do some obfuscation and do some other

5544
05:12:54,798 --> 05:12:57,280
bits and pieces um but you can't really

5545
05:12:57,280 --> 05:12:59,120
just like strip them out like you can

5546
05:12:59,120 --> 05:13:02,000
with other stuff so as far as analysis

5547
05:13:02,000 --> 05:13:05,120
goes if i see a golang malware then i

5548
05:13:05,120 --> 05:13:06,638
know this is probably going to be a lot

5549
05:13:06,638 --> 05:13:08,320
easier than it would be for something

5550
05:13:08,320 --> 05:13:09,920
else so

5551
05:13:09,920 --> 05:13:11,360
looking at the strings here we're seeing

5552
05:13:11,360 --> 05:13:13,200
stuff about http we're seeing stuff

5553
05:13:13,200 --> 05:13:16,160
about um you know protocols and crypto

5554
05:13:16,160 --> 05:13:17,760
and so on and so forth this is all kind

5555
05:13:17,760 --> 05:13:18,958
of normal stuff you would see and i

5556
05:13:18,958 --> 05:13:21,280
would go through all of this in detail

5557
05:13:21,280 --> 05:13:23,280
and see what i can see like those error

5558
05:13:23,280 --> 05:13:25,440
messages all sorts of useful interesting

5559
05:13:25,440 --> 05:13:27,840
bits of information now if we scroll far

5560
05:13:27,840 --> 05:13:30,080
enough we end up with this rsa public

5561
05:13:30,080 --> 05:13:32,400
key so that's kind of interesting this

5562
05:13:32,400 --> 05:13:33,920
is something i would absolutely note

5563
05:13:33,920 --> 05:13:35,200
down

5564
05:13:35,200 --> 05:13:36,878
so it's not unusual for binaries you

5565
05:13:36,878 --> 05:13:38,558
know non-malicious binaries to have

5566
05:13:38,558 --> 05:13:40,320
certificates and keys and things in them

5567
05:13:40,320 --> 05:13:43,280
but if we go up a little bit further

5568
05:13:43,280 --> 05:13:45,600
we get to see this ring here so files on

5569
05:13:45,600 --> 05:13:46,798
the system have been encrypted by

5570
05:13:46,798 --> 05:13:49,120
polaris to across decryption key

5571
05:13:49,120 --> 05:13:51,120
and so on and so forth okay so what do

5572
05:13:51,120 --> 05:13:52,718
we know so far so we know that the file

5573
05:13:52,718 --> 05:13:55,440
that we were given was a executable for

5574
05:13:55,440 --> 05:13:56,958
kind of linux or something like that for

5575
05:13:56,958 --> 05:13:59,440
64-bit uh it's written in golang and

5576
05:13:59,440 --> 05:14:01,600
it's probably ransomware because this is

5577
05:14:01,600 --> 05:14:03,440
a pretty clear kind of ransomware

5578
05:14:03,440 --> 05:14:05,840
message right

5579
05:14:05,840 --> 05:14:07,200
so

5580
05:14:07,200 --> 05:14:09,600
that is kind of our initial

5581
05:14:09,600 --> 05:14:10,798
two little things that we were going to

5582
05:14:10,798 --> 05:14:12,320
do

5583
05:14:12,320 --> 05:14:14,080
now the final thing

5584
05:14:14,080 --> 05:14:17,360
that we were going to look at is

5585
05:14:17,360 --> 05:14:19,040
part of the reason we're doing this is

5586
05:14:19,040 --> 05:14:20,240
you've got to always keep in mind that

5587
05:14:20,240 --> 05:14:22,000
we're trying to work with a larger

5588
05:14:22,000 --> 05:14:23,680
incident response we're looking for

5589
05:14:23,680 --> 05:14:25,840
essentially iocs and capabilities so

5590
05:14:25,840 --> 05:14:28,400
ioc's indicators of compromise so things

5591
05:14:28,400 --> 05:14:29,840
like the file name the file path and the

5592
05:14:29,840 --> 05:14:31,280
hash and all these

5593
05:14:31,280 --> 05:14:32,638
interesting strings we're saying these

5594
05:14:32,638 --> 05:14:35,280
are all ios we're note down um

5595
05:14:35,280 --> 05:14:37,680
final thing i want to show you how to do

5596
05:14:37,680 --> 05:14:41,280
is a 2 2 5 6 sum

5597
05:14:41,280 --> 05:14:43,920
is just generate a hash of the thing so

5598
05:14:43,920 --> 05:14:46,160
so this hash is really useful for

5599
05:14:46,160 --> 05:14:49,520
searching which we will see later so

5600
05:14:49,520 --> 05:14:52,558
let's flick back to our

5601
05:14:52,558 --> 05:14:55,200
slides

5602
05:14:56,798 --> 05:14:59,120
like

5603
05:14:59,360 --> 05:15:00,798
so

5604
05:15:00,798 --> 05:15:01,840
cool

5605
05:15:01,840 --> 05:15:03,600
now is anyone else talking about this

5606
05:15:03,600 --> 05:15:05,600
thing so this is the third thing that i

5607
05:15:05,600 --> 05:15:07,280
would do in that 30 minute chunk that

5608
05:15:07,280 --> 05:15:08,480
we've got

5609
05:15:08,480 --> 05:15:09,600
um

5610
05:15:09,600 --> 05:15:10,798
and this is basically what we're looking

5611
05:15:10,798 --> 05:15:12,400
at so we want to grab the hash we want

5612
05:15:12,400 --> 05:15:14,000
the file name the path that we would

5613
05:15:14,000 --> 05:15:15,680
have got the original story we want any

5614
05:15:15,680 --> 05:15:19,200
interesting string so that that

5615
05:15:19,520 --> 05:15:22,320
ransomware string the rsa key all of the

5616
05:15:22,320 --> 05:15:23,600
stuff that we saw inside of the binary

5617
05:15:23,600 --> 05:15:24,718
and we want to go out to the internet we

5618
05:15:24,718 --> 05:15:25,840
want to ask google we're going to ask

5619
05:15:25,840 --> 05:15:27,360
twitter we're going to look at

5620
05:15:27,360 --> 05:15:29,280
some of the more automated tools like

5621
05:15:29,280 --> 05:15:31,440
virustotal joe sandbox and see what we

5622
05:15:31,440 --> 05:15:33,280
can see see what are other people saying

5623
05:15:33,280 --> 05:15:34,558
about this thing because that can be a

5624
05:15:34,558 --> 05:15:36,558
trove of

5625
05:15:36,558 --> 05:15:37,600
information that is somewhat

5626
05:15:37,600 --> 05:15:39,360
questionable people get a bit excitable

5627
05:15:39,360 --> 05:15:41,120
and they make assumptions however you

5628
05:15:41,120 --> 05:15:43,360
can often kind of if if there's seven

5629
05:15:43,360 --> 05:15:45,200
people from different places all saying

5630
05:15:45,200 --> 05:15:47,840
yeah uh i'm running this version of

5631
05:15:47,840 --> 05:15:49,360
tomcat and i'm seeing this malicious

5632
05:15:49,360 --> 05:15:51,120
binary then you can probably make some

5633
05:15:51,120 --> 05:15:53,120
good guesses based on that so if you

5634
05:15:53,120 --> 05:15:54,400
were to do that

5635
05:15:54,400 --> 05:15:56,480
you would see something like this

5636
05:15:56,480 --> 05:15:58,638
so the first thing is just throwing that

5637
05:15:58,638 --> 05:16:01,520
hash which is a fingerprint of the file

5638
05:16:01,520 --> 05:16:03,200
um into google and you can immediately

5639
05:16:03,200 --> 05:16:04,320
see a bunch of hits so you can see the

5640
05:16:04,320 --> 05:16:05,600
malware bazaar which is where i pulled

5641
05:16:05,600 --> 05:16:06,878
the sample from and where you can pull

5642
05:16:06,878 --> 05:16:09,360
the sample from too if you like

5643
05:16:09,360 --> 05:16:10,798
in the middle of someone on twitter late

5644
05:16:10,798 --> 05:16:13,360
last year in december november sorry

5645
05:16:13,360 --> 05:16:15,360
was saying hey i've found some

5646
05:16:15,360 --> 05:16:17,840
ransomware for linux servers uh here's a

5647
05:16:17,840 --> 05:16:20,240
warning message that it shows um which

5648
05:16:20,240 --> 05:16:22,240
we saw in the binary looking at it and

5649
05:16:22,240 --> 05:16:23,760
also someone else had uploaded it to

5650
05:16:23,760 --> 05:16:25,840
joe's sandbox which is kind of like an

5651
05:16:25,840 --> 05:16:27,680
automated analysis tool that tries to

5652
05:16:27,680 --> 05:16:30,400
kind of tell you what's going on um so i

5653
05:16:30,400 --> 05:16:32,160
had a bit of a look

5654
05:16:32,160 --> 05:16:34,878
at the joe's chosen uh joe sandbox thing

5655
05:16:34,878 --> 05:16:36,718
and it missed a bunch of stuff but one

5656
05:16:36,718 --> 05:16:38,558
of the things that i did point out that

5657
05:16:38,558 --> 05:16:40,638
i hadn't seen in my kind of initial

5658
05:16:40,638 --> 05:16:43,360
quick look in that 30 minutes is that um

5659
05:16:43,360 --> 05:16:44,638
there were some strings related to

5660
05:16:44,638 --> 05:16:46,400
crypto mining and i hadn't seen any

5661
05:16:46,400 --> 05:16:48,080
crypto money so what crypto mining is is

5662
05:16:48,080 --> 05:16:51,040
where an attacker takes over your

5663
05:16:51,040 --> 05:16:53,760
resources and run up a crypto miner that

5664
05:16:53,760 --> 05:16:55,440
you know is mining crypto coin and then

5665
05:16:55,440 --> 05:16:56,718
they get to take that cryptocurrency so

5666
05:16:56,718 --> 05:16:58,878
they're essentially stealing your um

5667
05:16:58,878 --> 05:17:01,120
your processing power and and racking up

5668
05:17:01,120 --> 05:17:02,878
a massive aws or as your bill or

5669
05:17:02,878 --> 05:17:04,840
something like that

5670
05:17:04,840 --> 05:17:08,240
so just uploading stuff to the cloud uh

5671
05:17:08,240 --> 05:17:10,000
if you upload something like to joe's

5672
05:17:10,000 --> 05:17:11,600
sandbox it's probably going to become

5673
05:17:11,600 --> 05:17:12,638
public

5674
05:17:12,638 --> 05:17:14,240
so it's not something that we really do

5675
05:17:14,240 --> 05:17:15,920
unless we really know what we're what

5676
05:17:15,920 --> 05:17:17,600
we're working with so you know if you

5677
05:17:17,600 --> 05:17:18,798
don't know what your file is and you

5678
05:17:18,798 --> 05:17:20,718
don't know that it doesn't contain i

5679
05:17:20,718 --> 05:17:22,320
don't know executive salary information

5680
05:17:22,320 --> 05:17:23,680
or something like that you probably

5681
05:17:23,680 --> 05:17:25,120
don't want to just throw it up into the

5682
05:17:25,120 --> 05:17:27,840
cloud and the other thing is that

5683
05:17:27,840 --> 05:17:29,680
particular groups can be monitoring

5684
05:17:29,680 --> 05:17:31,760
things like virustotal for via malware

5685
05:17:31,760 --> 05:17:34,480
and it could potentially tip them off

5686
05:17:34,480 --> 05:17:36,638
that you know someone's onto them uh

5687
05:17:36,638 --> 05:17:38,160
which you may or may not care about it

5688
05:17:38,160 --> 05:17:40,000
may or may not happen a man may or may

5689
05:17:40,000 --> 05:17:41,520
not be a problem

5690
05:17:41,520 --> 05:17:43,200
so

5691
05:17:43,200 --> 05:17:44,480
this is kind of

5692
05:17:44,480 --> 05:17:46,718
where i would typically get to and would

5693
05:17:46,718 --> 05:17:49,120
go cool we've got enough information

5694
05:17:49,120 --> 05:17:50,320
let's go do some other stuff because

5695
05:17:50,320 --> 05:17:52,240
we're we're better off doing other stuff

5696
05:17:52,240 --> 05:17:54,480
in order to you know make this incident

5697
05:17:54,480 --> 05:17:56,878
better uh for the client

5698
05:17:56,878 --> 05:17:58,798
however

5699
05:17:58,798 --> 05:18:00,160
maybe we do want a little bit further

5700
05:18:00,160 --> 05:18:01,440
you know maybe there's some specific

5701
05:18:01,440 --> 05:18:04,240
questions um how do we do that so fine

5702
05:18:04,240 --> 05:18:05,680
let's actually really look at these

5703
05:18:05,680 --> 05:18:07,920
things chapter four fine let's look at

5704
05:18:07,920 --> 05:18:09,360
this thing

5705
05:18:09,360 --> 05:18:10,480
so

5706
05:18:10,480 --> 05:18:13,760
we have a couple

5707
05:18:13,760 --> 05:18:16,320
options as far as further looking at

5708
05:18:16,320 --> 05:18:18,160
stuff so the first one is static

5709
05:18:18,160 --> 05:18:19,920
analysis and the second one is dynamic

5710
05:18:19,920 --> 05:18:21,920
analysis static analysis is you don't

5711
05:18:21,920 --> 05:18:23,360
run the thing but you look at it real

5712
05:18:23,360 --> 05:18:24,878
closely pull it apart see what you can

5713
05:18:24,878 --> 05:18:26,638
see dynamic analysis is where you

5714
05:18:26,638 --> 05:18:28,240
actually run the thing but you watch it

5715
05:18:28,240 --> 05:18:29,600
and you watch it run and you see what it

5716
05:18:29,600 --> 05:18:30,480
does

5717
05:18:30,480 --> 05:18:31,920
and they're both they both have their

5718
05:18:31,920 --> 05:18:33,600
strengths and went through strength

5719
05:18:33,600 --> 05:18:36,320
strengths and weaknesses um

5720
05:18:36,320 --> 05:18:37,680
you know you'll find different malware

5721
05:18:37,680 --> 05:18:39,680
that has like really hard to analyze

5722
05:18:39,680 --> 05:18:41,040
statically but it has no like

5723
05:18:41,040 --> 05:18:42,958
anti-debugging um

5724
05:18:42,958 --> 05:18:44,400
kind of stuff going on so you can

5725
05:18:44,400 --> 05:18:46,400
analyze it dynamically and things like

5726
05:18:46,400 --> 05:18:50,478
that so let's take a look at that

5727
05:18:51,440 --> 05:18:52,558
all right

5728
05:18:52,558 --> 05:18:54,320
now the first thing i want to show you

5729
05:18:54,320 --> 05:18:56,400
is because this is a

5730
05:18:56,400 --> 05:18:58,478
golang

5731
05:18:58,478 --> 05:19:02,558
thing uh so you need a source uh sample

5732
05:19:02,558 --> 05:19:03,440
three

5733
05:19:03,440 --> 05:19:06,080
uh we can run redress now regis just

5734
05:19:06,080 --> 05:19:07,200
gives you

5735
05:19:07,200 --> 05:19:09,200
it goes through all the golang stuff

5736
05:19:09,200 --> 05:19:10,478
that's injected into the binary and

5737
05:19:10,478 --> 05:19:12,320
makes into kind of this nice readable

5738
05:19:12,320 --> 05:19:14,080
summary of what's going on so we can see

5739
05:19:14,080 --> 05:19:15,440
that this was all written in a single

5740
05:19:15,440 --> 05:19:18,638
file polaris.go has a bunch of functions

5741
05:19:18,638 --> 05:19:22,400
and the files you know only 853

5742
05:19:22,400 --> 05:19:25,040
lines of code so this entire malware is

5743
05:19:25,040 --> 05:19:27,040
a single file and you know that much

5744
05:19:27,040 --> 05:19:29,360
code which is really not a lot and

5745
05:19:29,360 --> 05:19:30,958
that's part of the reason that go is

5746
05:19:30,958 --> 05:19:33,040
becoming is quite popular and also

5747
05:19:33,040 --> 05:19:34,718
because you can compile it for like all

5748
05:19:34,718 --> 05:19:36,558
these crazy platforms and and things

5749
05:19:36,558 --> 05:19:37,600
like that

5750
05:19:37,600 --> 05:19:38,958
so i'd normally take a bit of a look at

5751
05:19:38,958 --> 05:19:40,638
this so

5752
05:19:40,638 --> 05:19:42,718
let's look at the main function so we

5753
05:19:42,718 --> 05:19:44,000
want to we want to dig further right we

5754
05:19:44,000 --> 05:19:46,160
want to see where this thing starts um

5755
05:19:46,160 --> 05:19:48,478
so to do that let's round up gedro so

5756
05:19:48,478 --> 05:19:49,760
gedra is a

5757
05:19:49,760 --> 05:19:52,558
reverse engineering analysis environment

5758
05:19:52,558 --> 05:19:54,320
released by the estate

5759
05:19:54,320 --> 05:19:55,920
a while ago

5760
05:19:55,920 --> 05:19:58,000
um it's pretty cool it doesn't have

5761
05:19:58,000 --> 05:19:59,840
particularly good out of the box support

5762
05:19:59,840 --> 05:20:02,638
for golang binaries but people have

5763
05:20:02,638 --> 05:20:05,280
written extensions and

5764
05:20:05,280 --> 05:20:06,478
scripts and other bits and pieces so

5765
05:20:06,478 --> 05:20:08,000
i've already run all that and it takes a

5766
05:20:08,000 --> 05:20:09,520
little bit of time so i wouldn't do it

5767
05:20:09,520 --> 05:20:10,798
on stage so let's

5768
05:20:10,798 --> 05:20:15,200
go to our main function over here

5769
05:20:15,200 --> 05:20:17,280
so what we're seeing in here is a

5770
05:20:17,280 --> 05:20:19,280
disassembly of the main function with a

5771
05:20:19,280 --> 05:20:20,958
bit of interpretation that gedra's done

5772
05:20:20,958 --> 05:20:22,240
for us this is going to be pretty

5773
05:20:22,240 --> 05:20:23,360
accurate to like what this thing

5774
05:20:23,360 --> 05:20:25,040
actually does but this is

5775
05:20:25,040 --> 05:20:26,878
you know these are cpu instructions and

5776
05:20:26,878 --> 05:20:28,478
and that is

5777
05:20:28,478 --> 05:20:30,478
a pain it's really low level and it

5778
05:20:30,478 --> 05:20:32,000
takes a bit to learn what what's going

5779
05:20:32,000 --> 05:20:34,400
on so typically i would jump over to the

5780
05:20:34,400 --> 05:20:35,600
pseudocode view which is what we're

5781
05:20:35,600 --> 05:20:36,878
seeing over here

5782
05:20:36,878 --> 05:20:38,718
and this is guidry like doing a lot of

5783
05:20:38,718 --> 05:20:40,160
interpretation and trying to give you

5784
05:20:40,160 --> 05:20:42,160
back something that looks kind of like

5785
05:20:42,160 --> 05:20:43,680
c

5786
05:20:43,680 --> 05:20:44,878
and there will be a whole bunch of

5787
05:20:44,878 --> 05:20:47,360
garbage and weirdness and stuff like

5788
05:20:47,360 --> 05:20:48,958
that so we're just gonna

5789
05:20:48,958 --> 05:20:50,638
gloss over that because we're not here

5790
05:20:50,638 --> 05:20:52,718
to like spend hours digging into the

5791
05:20:52,718 --> 05:20:54,320
details and unpicking bits and pieces

5792
05:20:54,320 --> 05:20:56,080
we're here to see what we can see really

5793
05:20:56,080 --> 05:20:57,440
quickly and what we can feedback to the

5794
05:20:57,440 --> 05:20:59,520
rest of the team so

5795
05:20:59,520 --> 05:21:00,878
first thing this thing does is it goes

5796
05:21:00,878 --> 05:21:02,558
off and reads cf-stab so we've got this

5797
05:21:02,558 --> 05:21:05,760
read if stab function over here so

5798
05:21:05,760 --> 05:21:07,920
basically anything that's main dot

5799
05:21:07,920 --> 05:21:09,360
to us is really interesting because we

5800
05:21:09,360 --> 05:21:11,120
know that the author the malware author

5801
05:21:11,120 --> 05:21:12,878
that's probably their code something

5802
05:21:12,878 --> 05:21:14,400
that's like runtime then that's probably

5803
05:21:14,400 --> 05:21:16,080
back-end goaling stuff we can probably

5804
05:21:16,080 --> 05:21:18,798
ignore that for now it's probably fine

5805
05:21:18,798 --> 05:21:20,878
um so to get a high level overview read

5806
05:21:20,878 --> 05:21:22,718
cf-stab ifstab has

5807
05:21:22,718 --> 05:21:24,160
all the mount points for the system so

5808
05:21:24,160 --> 05:21:26,638
unlike a linux unix machine it kind of

5809
05:21:26,638 --> 05:21:28,558
says you know what disks have what files

5810
05:21:28,558 --> 05:21:29,840
we have to

5811
05:21:29,840 --> 05:21:31,200
hand wave it away

5812
05:21:31,200 --> 05:21:33,360
which makes sense for ransomware wants

5813
05:21:33,360 --> 05:21:35,040
to know where the files are and then on

5814
05:21:35,040 --> 05:21:36,478
a condition

5815
05:21:36,478 --> 05:21:38,000
it'll either do this block of code or

5816
05:21:38,000 --> 05:21:40,160
it'll do this main open all so

5817
05:21:40,160 --> 05:21:41,360
immediately we're gonna be like okay so

5818
05:21:41,360 --> 05:21:42,718
we think this is ransomware and it's

5819
05:21:42,718 --> 05:21:44,798
going and opening all we can kind of

5820
05:21:44,798 --> 05:21:47,200
take a guess as to what's going on right

5821
05:21:47,200 --> 05:21:49,440
um over here it's running this bail

5822
05:21:49,440 --> 05:21:51,520
condition and whether how that returns

5823
05:21:51,520 --> 05:21:53,200
how depending on what that comes back

5824
05:21:53,200 --> 05:21:55,840
with it might just exit or bail

5825
05:21:55,840 --> 05:21:57,360
then it's waiting for something killing

5826
05:21:57,360 --> 05:22:00,240
ssh kill oracle protecting something

5827
05:22:00,240 --> 05:22:02,558
writing the message of the day

5828
05:22:02,558 --> 05:22:03,360
so

5829
05:22:03,360 --> 05:22:06,160
motd message of the day so on uh

5830
05:22:06,160 --> 05:22:08,240
kind of linux unix systems typically

5831
05:22:08,240 --> 05:22:10,000
that's the message you get if you log in

5832
05:22:10,000 --> 05:22:12,080
via console or ssh it'll pop up and talk

5833
05:22:12,080 --> 05:22:13,760
to you so we can kind of see it's

5834
05:22:13,760 --> 05:22:16,160
passing something over to that so let's

5835
05:22:16,160 --> 05:22:17,520
have a look at what that something is so

5836
05:22:17,520 --> 05:22:19,520
this is more or less a memory address

5837
05:22:19,520 --> 05:22:21,680
and we can see it's passing the slash

5838
05:22:21,680 --> 05:22:23,040
warning dot text

5839
05:22:23,040 --> 05:22:24,718
right so that lines up with what we saw

5840
05:22:24,718 --> 05:22:26,000
in that tweet earlier right where the

5841
05:22:26,000 --> 05:22:27,840
guy's like hey warning dot tx has got

5842
05:22:27,840 --> 05:22:29,440
all of this stuff which is what we also

5843
05:22:29,440 --> 05:22:32,239
saw in the binary

5844
05:22:32,320 --> 05:22:34,160
so that's kind of cool

5845
05:22:34,160 --> 05:22:36,878
so what i wanted to kind of jump into

5846
05:22:36,878 --> 05:22:39,040
is the 6mr thing

5847
05:22:39,040 --> 05:22:40,558
so

5848
05:22:40,558 --> 05:22:43,360
xmr is the kind of symbol for monero

5849
05:22:43,360 --> 05:22:45,360
monero is a cryptocurrency and it's a

5850
05:22:45,360 --> 05:22:46,958
cryptocurrency that's really really

5851
05:22:46,958 --> 05:22:49,280
popular uh because it has a bunch of

5852
05:22:49,280 --> 05:22:51,440
privacy protections or as my colleague

5853
05:22:51,440 --> 05:22:55,440
dennis wanted me to call it crime coin

5854
05:22:55,520 --> 05:22:56,718
so let's let's have a look at that

5855
05:22:56,718 --> 05:22:58,000
because that's prob this is probably

5856
05:22:58,000 --> 05:23:00,718
what uh joe sandbox was talking about so

5857
05:23:00,718 --> 05:23:02,400
we jump into that

5858
05:23:02,400 --> 05:23:04,400
again let's let's like not get too

5859
05:23:04,400 --> 05:23:06,160
worried about the real details but we

5860
05:23:06,160 --> 05:23:07,360
can see here that it's kind of building

5861
05:23:07,360 --> 05:23:08,080
up

5862
05:23:08,080 --> 05:23:09,760
building up these strengths and here is

5863
05:23:09,760 --> 05:23:12,320
a really interesting url

5864
05:23:12,320 --> 05:23:14,000
so this is

5865
05:23:14,000 --> 05:23:15,280
kind of immediately something i would

5866
05:23:15,280 --> 05:23:17,760
note down and go url what is this and

5867
05:23:17,760 --> 05:23:19,360
why is it talking to it

5868
05:23:19,360 --> 05:23:20,478
so we can see it's kind of building up

5869
05:23:20,478 --> 05:23:22,080
the string and then passing it over to

5870
05:23:22,080 --> 05:23:23,680
this exec command thing so this is going

5871
05:23:23,680 --> 05:23:25,680
to run you know another program on the

5872
05:23:25,680 --> 05:23:27,600
system so let's see what it's passing to

5873
05:23:27,600 --> 05:23:30,160
that so here's a memory address

5874
05:23:30,160 --> 05:23:33,760
w get to wget is a

5875
05:23:33,760 --> 05:23:35,920
kind of limits unix utility does a bunch

5876
05:23:35,920 --> 05:23:37,520
of stuff but mostly what is useful is to

5877
05:23:37,520 --> 05:23:38,798
go out to the internet and download

5878
05:23:38,798 --> 05:23:40,718
stuff so that kind of makes sense right

5879
05:23:40,718 --> 05:23:42,958
so it's going out to this url and it's

5880
05:23:42,958 --> 05:23:46,240
saving stuff to this temp polaris

5881
05:23:46,240 --> 05:23:47,840
cool we've got ourselves some more iocs

5882
05:23:47,840 --> 05:23:49,280
we've got a url that it talks to we've

5883
05:23:49,280 --> 05:23:51,440
got a temporary file that it's creating

5884
05:23:51,440 --> 05:23:53,600
um then what is it doing editors

5885
05:23:53,600 --> 05:23:55,040
changing permissions

5886
05:23:55,040 --> 05:23:57,280
and building up another thing and it's

5887
05:23:57,280 --> 05:23:59,280
executing what it's just downloaded so

5888
05:23:59,280 --> 05:24:01,360
here's a mining pool so this is what the

5889
05:24:01,360 --> 05:24:02,558
attackers will be using in order to kind

5890
05:24:02,558 --> 05:24:04,240
of collect their coins i guess

5891
05:24:04,240 --> 05:24:05,840
this is probably an access token or

5892
05:24:05,840 --> 05:24:07,520
address or something like that i don't

5893
05:24:07,520 --> 05:24:10,718
know um so we can kind of get a feel for

5894
05:24:10,718 --> 05:24:12,798
the static analysis for what that

5895
05:24:12,798 --> 05:24:14,718
cryptominer functionality does and how

5896
05:24:14,718 --> 05:24:16,878
it works um

5897
05:24:16,878 --> 05:24:18,878
all right now

5898
05:24:18,878 --> 05:24:21,120
let's have a look or have it let's have

5899
05:24:21,120 --> 05:24:24,160
a go at some dynamic analysis so dynamic

5900
05:24:24,160 --> 05:24:27,120
analysis uh dynamic analysis means

5901
05:24:27,120 --> 05:24:29,520
actually run it um which

5902
05:24:29,520 --> 05:24:30,638
now

5903
05:24:30,638 --> 05:24:32,558
this is real malware and this is a real

5904
05:24:32,558 --> 05:24:34,160
talk on a virtual machine i need to give

5905
05:24:34,160 --> 05:24:36,638
this talk and as ransomware so running

5906
05:24:36,638 --> 05:24:38,240
it in front of all of you people is

5907
05:24:38,240 --> 05:24:40,638
probably a terrible idea uh

5908
05:24:40,638 --> 05:24:42,320
but we're gonna do it um and we're gonna

5909
05:24:42,320 --> 05:24:44,320
do it we're gonna do it in this fire

5910
05:24:44,320 --> 05:24:46,718
jail jail which is like

5911
05:24:46,718 --> 05:24:49,520
okay i guess as far as um

5912
05:24:49,520 --> 05:24:52,160
as far as jails go so first of all

5913
05:24:52,160 --> 05:24:54,400
let's create let's create a file um a

5914
05:24:54,400 --> 05:24:56,958
file uh this is a file so the contents

5915
05:24:56,958 --> 05:24:59,280
this is a file cool

5916
05:24:59,280 --> 05:25:00,558
and then we're gonna run the sample but

5917
05:25:00,558 --> 05:25:01,440
we're gonna run it and we're going to

5918
05:25:01,440 --> 05:25:03,200
look at it real carefully and watch it

5919
05:25:03,200 --> 05:25:04,320
so how do we do that so we're going to

5920
05:25:04,320 --> 05:25:05,840
use this trace

5921
05:25:05,840 --> 05:25:07,680
there's other tools you know there's

5922
05:25:07,680 --> 05:25:09,360
equivalence for windows like small and

5923
05:25:09,360 --> 05:25:10,878
stuff like that

5924
05:25:10,878 --> 05:25:13,040
if you had like a real fancy analysis

5925
05:25:13,040 --> 05:25:14,878
environment then that would do this all

5926
05:25:14,878 --> 05:25:17,200
for you but this trace is pretty good um

5927
05:25:17,200 --> 05:25:19,360
so what it does is it will run that

5928
05:25:19,360 --> 05:25:21,040
binary and it can't see what's happening

5929
05:25:21,040 --> 05:25:22,080
on the inside like it doesn't really

5930
05:25:22,080 --> 05:25:23,280
know what the code on the inside is

5931
05:25:23,280 --> 05:25:25,920
doing but anytime that that binary needs

5932
05:25:25,920 --> 05:25:28,080
to reach out to the system and do

5933
05:25:28,080 --> 05:25:29,280
something so if it needs to talk to the

5934
05:25:29,280 --> 05:25:30,478
file system if it needs to talk to the

5935
05:25:30,478 --> 05:25:31,920
network if it wants to do you know

5936
05:25:31,920 --> 05:25:33,920
something outside of its process it has

5937
05:25:33,920 --> 05:25:37,120
to make cisco so therefore x-trace

5938
05:25:37,120 --> 05:25:39,360
will see it and it'll log it and we can

5939
05:25:39,360 --> 05:25:40,718
look at it

5940
05:25:40,718 --> 05:25:42,638
now funny thing about ransomware is that

5941
05:25:42,638 --> 05:25:44,718
um it likes to encrypt stuff right so

5942
05:25:44,718 --> 05:25:46,400
when i first did this i was like right

5943
05:25:46,400 --> 05:25:48,400
trace all the things and pipe it to a

5944
05:25:48,400 --> 05:25:50,320
log file and i'll read the log file and

5945
05:25:50,320 --> 05:25:52,160
be great ran it opened up the log file

5946
05:25:52,160 --> 05:25:54,718
it's all encrypted oh

5947
05:25:54,718 --> 05:25:56,478
okay cool

5948
05:25:56,478 --> 05:25:57,920
so what i ended up doing instead is just

5949
05:25:57,920 --> 05:26:00,080
kind of buffering it to the um to the

5950
05:26:00,080 --> 05:26:02,240
console the terminal and then just

5951
05:26:02,240 --> 05:26:04,080
writing that to a file later so anyway

5952
05:26:04,080 --> 05:26:05,680
let's trace this thing we're only going

5953
05:26:05,680 --> 05:26:07,520
to trace this exact ve function we're

5954
05:26:07,520 --> 05:26:08,478
going to ignore all the rest of it

5955
05:26:08,478 --> 05:26:09,920
because exec ve is the thing that

5956
05:26:09,920 --> 05:26:11,680
probably gets called when a program

5957
05:26:11,680 --> 05:26:14,080
wants to run another program so we saw

5958
05:26:14,080 --> 05:26:16,000
trying to run wget so let's see if it

5959
05:26:16,000 --> 05:26:18,240
does that and we'll also see

5960
05:26:18,240 --> 05:26:20,478
a bunch of other stuff cool right it's

5961
05:26:20,478 --> 05:26:21,440
running

5962
05:26:21,440 --> 05:26:24,160
and it's encrypting all my stuff awesome

5963
05:26:24,160 --> 05:26:25,680
so the first thing we can see here is

5964
05:26:25,680 --> 05:26:27,840
it's running pkill so pico is like kind

5965
05:26:27,840 --> 05:26:28,798
of

5966
05:26:28,798 --> 05:26:30,638
look for processors and just just murder

5967
05:26:30,638 --> 05:26:32,478
them with the dash nine so it's killing

5968
05:26:32,478 --> 05:26:35,840
ssh killing vnc um it's killing openvpn

5969
05:26:35,840 --> 05:26:37,520
it's killing anything owned by an

5970
05:26:37,520 --> 05:26:39,600
openvpn user so this kind of lines up

5971
05:26:39,600 --> 05:26:40,958
with what we're seeing in that main

5972
05:26:40,958 --> 05:26:43,040
function where it had you know kelly ssh

5973
05:26:43,040 --> 05:26:45,360
kill oracle um

5974
05:26:45,360 --> 05:26:47,440
so that's cool and then we can see

5975
05:26:47,440 --> 05:26:49,200
finally it's running w get here so we

5976
05:26:49,200 --> 05:26:51,760
can see these arguments that we were

5977
05:26:51,760 --> 05:26:54,160
looking at in ghidra here's our url

5978
05:26:54,160 --> 05:26:56,160
here's the output then we can see that

5979
05:26:56,160 --> 05:26:58,638
it's running that output file with the

5980
05:26:58,638 --> 05:27:00,240
arguments that we're expecting it to run

5981
05:27:00,240 --> 05:27:02,320
on so now we've got

5982
05:27:02,320 --> 05:27:03,920
information from both static analysis

5983
05:27:03,920 --> 05:27:06,320
and dynamic analysis all lining up and

5984
05:27:06,320 --> 05:27:08,400
when that's the case you can feel you

5985
05:27:08,400 --> 05:27:09,680
can feel pretty good you feel pretty

5986
05:27:09,680 --> 05:27:11,520
good about it because one of the things

5987
05:27:11,520 --> 05:27:14,000
with static analysis particularly

5988
05:27:14,000 --> 05:27:14,958
is that

5989
05:27:14,958 --> 05:27:15,920
if i

5990
05:27:15,920 --> 05:27:17,280
i'm looking at this code or looking at

5991
05:27:17,280 --> 05:27:18,718
this machine code i'm like okay i think

5992
05:27:18,718 --> 05:27:20,478
it does this

5993
05:27:20,478 --> 05:27:21,920
or i can say i know it does this but i

5994
05:27:21,920 --> 05:27:23,680
don't know when or if or into what

5995
05:27:23,680 --> 05:27:25,920
conditions it does this so dynamic

5996
05:27:25,920 --> 05:27:27,920
analysis if they line up it's it's

5997
05:27:27,920 --> 05:27:29,680
really good um the other thing about

5998
05:27:29,680 --> 05:27:31,760
dynamic analysis is that you know you

5999
05:27:31,760 --> 05:27:33,760
run it once and it might run this code

6000
05:27:33,760 --> 05:27:35,280
path and do these things then you run it

6001
05:27:35,280 --> 05:27:36,798
a week later it runs a different code

6002
05:27:36,798 --> 05:27:38,878
path or it might not run at all so

6003
05:27:38,878 --> 05:27:41,680
dynamic analysis has its own

6004
05:27:41,680 --> 05:27:43,120
limitations

6005
05:27:43,120 --> 05:27:44,958
all right awesome let's look at these

6006
05:27:44,958 --> 05:27:46,240
files

6007
05:27:46,240 --> 05:27:47,280
so

6008
05:27:47,280 --> 05:27:50,400
we've got some new stuff um so we got a

6009
05:27:50,400 --> 05:27:53,520
warning um let's uh let's see what's in

6010
05:27:53,520 --> 05:27:55,120
the warning so that's what we expect

6011
05:27:55,120 --> 05:27:56,320
that was what was in the tweet that's

6012
05:27:56,320 --> 05:27:58,320
what we saw um

6013
05:27:58,320 --> 05:27:59,760
let's have a look at our file that we

6014
05:27:59,760 --> 05:28:02,958
created just before and it's garbage so

6015
05:28:02,958 --> 05:28:06,557
we've been ran some weird oh dear

6016
05:28:07,040 --> 05:28:08,160
okay

6017
05:28:08,160 --> 05:28:09,200
now

6018
05:28:09,200 --> 05:28:12,718
we have a little bit of time left so

6019
05:28:12,718 --> 05:28:15,120
let's go back to our main function

6020
05:28:15,120 --> 05:28:16,080
now

6021
05:28:16,080 --> 05:28:18,160
one thing question that comes up a lot

6022
05:28:18,160 --> 05:28:20,080
is

6023
05:28:20,080 --> 05:28:21,920
have they installed backdoors is their

6024
05:28:21,920 --> 05:28:23,600
network pivoting you know what else do

6025
05:28:23,600 --> 05:28:26,558
we need to be worried about and one of

6026
05:28:26,558 --> 05:28:27,760
the things that's really jumping out at

6027
05:28:27,760 --> 05:28:31,040
me about this one is this right ssh

6028
05:28:31,040 --> 05:28:33,280
function so you know ssh is your kind of

6029
05:28:33,280 --> 05:28:35,520
remote shell into your machine so that

6030
05:28:35,520 --> 05:28:36,798
you can manage them

6031
05:28:36,798 --> 05:28:38,638
or whatever so let's take a look at this

6032
05:28:38,638 --> 05:28:39,600
one

6033
05:28:39,600 --> 05:28:41,920
so this is a little bit like you can

6034
05:28:41,920 --> 05:28:43,680
answer that and you're not like okay

6035
05:28:43,680 --> 05:28:45,680
this is clearly it's not clear what it's

6036
05:28:45,680 --> 05:28:47,360
doing so much but what we can see is

6037
05:28:47,360 --> 05:28:48,718
that it's kind of building up some

6038
05:28:48,718 --> 05:28:51,120
strings so concatenating strings uh

6039
05:28:51,120 --> 05:28:52,240
changing permissions of a file

6040
05:28:52,240 --> 05:28:54,080
concatenating strings making a directory

6041
05:28:54,080 --> 05:28:55,680
can candidates more strings changing

6042
05:28:55,680 --> 05:28:57,520
pictures of file so let's kind of dig

6043
05:28:57,520 --> 05:28:59,680
around a little bit here so let's pick

6044
05:28:59,680 --> 05:29:01,280
this memory address which is being

6045
05:29:01,280 --> 05:29:02,878
passed into this concatenate string

6046
05:29:02,878 --> 05:29:03,680
thing

6047
05:29:03,680 --> 05:29:07,520
take a look what do we see dot ssh slash

6048
05:29:07,520 --> 05:29:08,798
okay

6049
05:29:08,798 --> 05:29:10,558
what about the next one

6050
05:29:10,558 --> 05:29:12,718
here we see

6051
05:29:12,718 --> 05:29:15,360
authorized underscore keys

6052
05:29:15,360 --> 05:29:17,120
all right so anyone that is familiar

6053
05:29:17,120 --> 05:29:19,440
with ssa just probably going ah

6054
05:29:19,440 --> 05:29:21,760
it's not good um so

6055
05:29:21,760 --> 05:29:24,320
so what authorize keys is uh is you can

6056
05:29:24,320 --> 05:29:26,400
put public keys so your so i have a

6057
05:29:26,400 --> 05:29:28,400
private key i put my public key into

6058
05:29:28,400 --> 05:29:31,440
that server's authorized keys um

6059
05:29:31,440 --> 05:29:33,680
and i can just log in as that user so i

6060
05:29:33,680 --> 05:29:34,958
don't need a password or anything like

6061
05:29:34,958 --> 05:29:37,760
that it's it's awesome so if malware is

6062
05:29:37,760 --> 05:29:40,000
writing to the authorized keys it's kind

6063
05:29:40,000 --> 05:29:42,878
of a bad sign right so what it's doing

6064
05:29:42,878 --> 05:29:44,478
here before it writes file is it's

6065
05:29:44,478 --> 05:29:46,320
copying some information out of memory

6066
05:29:46,320 --> 05:29:47,600
and then looks like it's running it to

6067
05:29:47,600 --> 05:29:48,878
the file so let's have a look at what

6068
05:29:48,878 --> 05:29:51,360
that is what is it writing to this file

6069
05:29:51,360 --> 05:29:52,718
and we see

6070
05:29:52,718 --> 05:29:55,760
ssh rsa and then a whole bunch of base64

6071
05:29:55,760 --> 05:29:57,920
so that's a that's a key right that's is

6072
05:29:57,920 --> 05:29:59,760
this hkey format

6073
05:29:59,760 --> 05:30:01,600
so let's have a bit of a look for that

6074
05:30:01,600 --> 05:30:06,240
uh so if we go back to our strings and

6075
05:30:06,240 --> 05:30:10,200
of sample three

6076
05:30:10,320 --> 05:30:13,680
let's search for ssh-rsa

6077
05:30:13,680 --> 05:30:16,718
right there it is

6078
05:30:16,798 --> 05:30:18,958
so what we can oops that's not what i

6079
05:30:18,958 --> 05:30:21,199
wanted

6080
05:30:21,440 --> 05:30:24,240
so here is another like super useful uh

6081
05:30:24,240 --> 05:30:25,680
i say for the rest of the time so we

6082
05:30:25,680 --> 05:30:27,280
could say any server or any linux

6083
05:30:27,280 --> 05:30:29,440
machine that has this key somewhere an

6084
05:30:29,440 --> 05:30:31,120
authorized key file you've been

6085
05:30:31,120 --> 05:30:33,040
compromised so that's that's super

6086
05:30:33,040 --> 05:30:34,638
useful the other thing that we can do is

6087
05:30:34,638 --> 05:30:36,840
back that up with

6088
05:30:36,840 --> 05:30:41,200
uh our dynamic analysis

6089
05:30:41,680 --> 05:30:44,718
so let's take a look at dot is our ssh

6090
05:30:44,718 --> 05:30:47,520
authorized keys

6091
05:30:50,000 --> 05:30:52,878
and there it is as well so so we can you

6092
05:30:52,878 --> 05:30:54,558
know everything's kind of lining up here

6093
05:30:54,558 --> 05:30:57,520
it's all making sense um

6094
05:30:57,520 --> 05:30:58,320
right

6095
05:30:58,320 --> 05:30:59,360
so

6096
05:30:59,360 --> 05:31:01,280
as you can see when you've got some

6097
05:31:01,280 --> 05:31:03,040
malware that is not particularly

6098
05:31:03,040 --> 05:31:04,718
sophisticated but

6099
05:31:04,718 --> 05:31:06,638
highly effective

6100
05:31:06,638 --> 05:31:08,558
sometimes you don't need to spend a huge

6101
05:31:08,558 --> 05:31:10,478
amount of time digging into it to be

6102
05:31:10,478 --> 05:31:11,600
able to get some really really good

6103
05:31:11,600 --> 05:31:14,000
answers

6104
05:31:14,000 --> 05:31:16,878
let's just go back to the

6105
05:31:19,360 --> 05:31:22,160
over slides

6106
05:31:22,160 --> 05:31:23,520
all right

6107
05:31:23,520 --> 05:31:25,920
so

6108
05:31:28,240 --> 05:31:30,320
so there we go so that that's basically

6109
05:31:30,320 --> 05:31:31,200
my

6110
05:31:31,200 --> 05:31:33,760
take on hey we've got the suspicious

6111
05:31:33,760 --> 05:31:34,638
file

6112
05:31:34,638 --> 05:31:36,798
what do we do first of all you know

6113
05:31:36,798 --> 05:31:38,558
should we really be spending hours

6114
05:31:38,558 --> 05:31:40,160
digging into into the machine code of

6115
05:31:40,160 --> 05:31:41,520
this thing and digging through and the

6116
05:31:41,520 --> 05:31:43,440
answer is probably not but if you do

6117
05:31:43,440 --> 05:31:45,280
have time if you do have 30 minutes and

6118
05:31:45,280 --> 05:31:47,360
and you know it makes sense for you to

6119
05:31:47,360 --> 05:31:48,878
do so there's some really quick stuff

6120
05:31:48,878 --> 05:31:51,360
like you know run file run strings

6121
05:31:51,360 --> 05:31:53,200
really basic talk to google see what's

6122
05:31:53,200 --> 05:31:55,120
on twitter that kind of thing it's

6123
05:31:55,120 --> 05:31:57,360
really straightforward um

6124
05:31:57,360 --> 05:31:59,280
and then only after that would i

6125
05:31:59,280 --> 05:32:03,040
actually kind of i even really consider

6126
05:32:03,040 --> 05:32:04,080
digging

6127
05:32:04,080 --> 05:32:07,120
further so

6128
05:32:07,280 --> 05:32:08,478
one of the really important things with

6129
05:32:08,478 --> 05:32:10,320
this is not to get tunnel vision so it's

6130
05:32:10,320 --> 05:32:13,200
really really easy particularly for me

6131
05:32:13,200 --> 05:32:14,478
because i find this stuff really really

6132
05:32:14,478 --> 05:32:17,120
fun and it is fun uh is just like you

6133
05:32:17,120 --> 05:32:18,958
know you go down this crazy rabbit hole

6134
05:32:18,958 --> 05:32:20,558
of reverse engineering this thing and

6135
05:32:20,558 --> 05:32:22,798
how does it work and it's really fun um

6136
05:32:22,798 --> 05:32:25,120
and you can spend you know a day and the

6137
05:32:25,120 --> 05:32:26,400
team will ask the rest of the team ask

6138
05:32:26,400 --> 05:32:28,478
it's like cool did you did you answer

6139
05:32:28,478 --> 05:32:29,840
any of the questions we had about this

6140
05:32:29,840 --> 05:32:32,160
thing you're like ah

6141
05:32:32,160 --> 05:32:34,320
no

6142
05:32:34,478 --> 05:32:36,080
don't get tunnel vision so uh

6143
05:32:36,080 --> 05:32:37,600
communicate with the rest of the team

6144
05:32:37,600 --> 05:32:39,200
and uh and make sure you've got your eye

6145
05:32:39,200 --> 05:32:40,638
on the prize and the prizes whatever you

6146
05:32:40,638 --> 05:32:42,638
need to achieve right now in order to

6147
05:32:42,638 --> 05:32:45,120
help out the rest of the incident

6148
05:32:45,120 --> 05:32:48,160
so i absolutely recommend um spinning up

6149
05:32:48,160 --> 05:32:50,718
a very far away preferably

6150
05:32:50,718 --> 05:32:52,320
you know segregated account and network

6151
05:32:52,320 --> 05:32:53,760
and all of that

6152
05:32:53,760 --> 05:32:56,718
linux vm downloads some golang malware

6153
05:32:56,718 --> 05:32:58,000
for linux because it's probably not

6154
05:32:58,000 --> 05:32:59,920
going to have a lot of the protections

6155
05:32:59,920 --> 05:33:01,840
like av evasion and packing and things

6156
05:33:01,840 --> 05:33:03,360
like that that you would see

6157
05:33:03,360 --> 05:33:06,320
more common on windows and start pulling

6158
05:33:06,320 --> 05:33:08,000
it apart run strings on it you know spin

6159
05:33:08,000 --> 05:33:10,320
it up on geiger have a look at the ida

6160
05:33:10,320 --> 05:33:13,200
free edition and see what you can see

6161
05:33:13,200 --> 05:33:15,080
that's me thank you

6162
05:33:15,080 --> 05:33:21,749
[Applause]

6163
05:33:23,600 --> 05:33:25,120
thank you very much

6164
05:33:25,120 --> 05:33:26,638
hello everyone

6165
05:33:26,638 --> 05:33:28,400
we're going to silently come on stage

6166
05:33:28,400 --> 05:33:29,920
now

6167
05:33:29,920 --> 05:33:31,600
with my little co-presenter who i'm sure

6168
05:33:31,600 --> 05:33:34,558
is waking up at this exact moment right

6169
05:33:34,558 --> 05:33:35,520
maybe

6170
05:33:35,520 --> 05:33:38,000
um hey everyone i'm sputch i'm going to

6171
05:33:38,000 --> 05:33:39,040
be taking over for a little bit of

6172
05:33:39,040 --> 05:33:41,520
co-emceeing i'm excited to present to

6173
05:33:41,520 --> 05:33:43,360
the next speaker

6174
05:33:43,360 --> 05:33:44,958
we actually worked together when i was

6175
05:33:44,958 --> 05:33:47,680
over at search um and it feels kind of i

6176
05:33:47,680 --> 05:33:49,360
don't know appropriate

6177
05:33:49,360 --> 05:33:51,440
i took over for her when she went on

6178
05:33:51,440 --> 05:33:53,280
parental leave

6179
05:33:53,280 --> 05:33:54,400
and now i'm here

6180
05:33:54,400 --> 05:33:57,520
with my baby um welcoming her to sage

6181
05:33:57,520 --> 05:33:59,520
but when it comes to um you know

6182
05:33:59,520 --> 05:34:01,200
security incident response or even just

6183
05:34:01,200 --> 05:34:02,958
general incident response

6184
05:34:02,958 --> 05:34:04,798
one of the first people i think about is

6185
05:34:04,798 --> 05:34:08,478
this next speaker um she's unknowingly

6186
05:34:08,478 --> 05:34:10,638
to a lot of you has been involved in a

6187
05:34:10,638 --> 05:34:12,478
heck of a lot of incidents that have

6188
05:34:12,478 --> 05:34:14,638
kind of affected new zealand

6189
05:34:14,638 --> 05:34:16,558
including having a really key

6190
05:34:16,558 --> 05:34:17,680
involvement

6191
05:34:17,680 --> 05:34:19,680
in some of the online components of the

6192
05:34:19,680 --> 05:34:21,360
christchurch attacks

6193
05:34:21,360 --> 05:34:22,638
which i'm sure she knows she's going to

6194
05:34:22,638 --> 05:34:23,520
go through

6195
05:34:23,520 --> 05:34:25,280
all of the information all the good

6196
05:34:25,280 --> 05:34:26,958
stuff as part of all the incident

6197
05:34:26,958 --> 05:34:29,280
response work that she's done so very

6198
05:34:29,280 --> 05:34:33,050
excited to introduce nadia youssef

6199
05:34:33,050 --> 05:34:42,649
[Applause]

6200
05:34:50,160 --> 05:34:52,558
thank you

6201
05:34:54,958 --> 05:34:55,920
hi

6202
05:34:55,920 --> 05:34:58,080
i'm nadia youssef and i've been working

6203
05:34:58,080 --> 05:34:59,920
in incident response for near on a

6204
05:34:59,920 --> 05:35:00,958
decade

6205
05:35:00,958 --> 05:35:03,040
in some different iterations most

6206
05:35:03,040 --> 05:35:04,478
recently i was the incident response

6207
05:35:04,478 --> 05:35:05,920
manager for certain new zealand where i

6208
05:35:05,920 --> 05:35:07,840
spent five years um but i've since

6209
05:35:07,840 --> 05:35:09,120
headed up to the sunnier shores of

6210
05:35:09,120 --> 05:35:10,878
auckland and moved into the private

6211
05:35:10,878 --> 05:35:12,478
sector where i'm doing incident

6212
05:35:12,478 --> 05:35:14,320
collaboration and incident coordination

6213
05:35:14,320 --> 05:35:15,440
now

6214
05:35:15,440 --> 05:35:17,920
the lessons that i've learned in my time

6215
05:35:17,920 --> 05:35:20,000
in government have been invaluable and i

6216
05:35:20,000 --> 05:35:21,920
was extremely privileged to see a whole

6217
05:35:21,920 --> 05:35:24,080
range of incident response and i got to

6218
05:35:24,080 --> 05:35:26,080
recognize what worked well what didn't

6219
05:35:26,080 --> 05:35:27,760
work so well and just a few simple

6220
05:35:27,760 --> 05:35:29,920
things we can do to make things run just

6221
05:35:29,920 --> 05:35:31,600
a bit better

6222
05:35:31,600 --> 05:35:35,280
um the foundational one of those

6223
05:35:35,280 --> 05:35:37,040
more critical than anything else in this

6224
05:35:37,040 --> 05:35:39,120
space when something goes wrong when

6225
05:35:39,120 --> 05:35:40,718
there's an incident or a vulnerability

6226
05:35:40,718 --> 05:35:41,920
that needs to be treated like an

6227
05:35:41,920 --> 05:35:44,080
incident when you've read that gozi the

6228
05:35:44,080 --> 05:35:45,920
dog tweet and you have that icky sense

6229
05:35:45,920 --> 05:35:47,280
that you're just about to lose your

6230
05:35:47,280 --> 05:35:49,760
weekend especially when it's hard and

6231
05:35:49,760 --> 05:35:51,920
it's scary and confusing it's time to

6232
05:35:51,920 --> 05:35:53,600
take a few deep breaths and lean the

6233
05:35:53,600 --> 05:35:54,878
falcon

6234
05:35:54,878 --> 05:35:55,920
just to let you know in this

6235
05:35:55,920 --> 05:35:57,280
presentation i'm going to be running

6236
05:35:57,280 --> 05:35:58,718
through a few different examples of

6237
05:35:58,718 --> 05:36:00,400
incident response and i will lightly

6238
05:36:00,400 --> 05:36:02,320
touch on what happened in christchurch

6239
05:36:02,320 --> 05:36:03,760
to detail some of the work that happened

6240
05:36:03,760 --> 05:36:05,440
in the online space

6241
05:36:05,440 --> 05:36:06,958
it's light in detail and it's only a

6242
05:36:06,958 --> 05:36:08,878
short chat but i do understand if you

6243
05:36:08,878 --> 05:36:12,240
might want to grab a coffee instead

6244
05:36:13,360 --> 05:36:15,520
it's been an exciting time in security

6245
05:36:15,520 --> 05:36:18,080
these past few years

6246
05:36:18,080 --> 05:36:19,680
and i feel that the last two especially

6247
05:36:19,680 --> 05:36:21,680
have really delivered there's been no

6248
05:36:21,680 --> 05:36:23,360
shortage of major incidents and if i'm

6249
05:36:23,360 --> 05:36:25,200
putting a positive spin on this we are

6250
05:36:25,200 --> 05:36:27,520
all crisis fit

6251
05:36:27,520 --> 05:36:29,280
last year in the one prior we were hit

6252
05:36:29,280 --> 05:36:32,000
with major ddos events around spring we

6253
05:36:32,000 --> 05:36:33,360
were all welcomed back from christmas

6254
05:36:33,360 --> 05:36:36,080
2020 with the news of the acelian breach

6255
05:36:36,080 --> 05:36:37,600
just after we'd worked through the

6256
05:36:37,600 --> 05:36:39,680
exchange in the solar winds incidents

6257
05:36:39,680 --> 05:36:41,760
last year we got a gift and log for jay

6258
05:36:41,760 --> 05:36:43,680
three days before christmas you would be

6259
05:36:43,680 --> 05:36:45,120
forgiven for thinking about throwing

6260
05:36:45,120 --> 05:36:46,558
your laptop out of the window and taking

6261
05:36:46,558 --> 05:36:48,478
up floristry the internet does not

6262
05:36:48,478 --> 05:36:49,920
always spark joy

6263
05:36:49,920 --> 05:36:51,200
but that's okay

6264
05:36:51,200 --> 05:36:52,798
we're not here to lament on the bad

6265
05:36:52,798 --> 05:36:54,798
times we've worked through these things

6266
05:36:54,798 --> 05:36:56,638
we've hopefully come out not too scared

6267
05:36:56,638 --> 05:36:58,320
for it and we've learned some critical

6268
05:36:58,320 --> 05:37:00,080
lessons along the way

6269
05:37:00,080 --> 05:37:02,400
if the incidents i mentioned just before

6270
05:37:02,400 --> 05:37:04,080
and a few other ones i've seen some

6271
05:37:04,080 --> 05:37:05,440
incredible collaboration and

6272
05:37:05,440 --> 05:37:07,440
communication come out of these people

6273
05:37:07,440 --> 05:37:09,520
took deep breaths they're leading in and

6274
05:37:09,520 --> 05:37:12,240
they made it work

6275
05:37:14,400 --> 05:37:16,080
my goal here today is to share some of

6276
05:37:16,080 --> 05:37:17,600
the things that have pulled me through

6277
05:37:17,600 --> 05:37:19,440
coordinating major incidents and some

6278
05:37:19,440 --> 05:37:21,120
guiding principles i've held on to along

6279
05:37:21,120 --> 05:37:24,160
the way to help me stay on track

6280
05:37:24,160 --> 05:37:25,520
i hope that when the flag goes up in

6281
05:37:25,520 --> 05:37:27,360
your organization next time some of you

6282
05:37:27,360 --> 05:37:28,878
here today might recall one or two of

6283
05:37:28,878 --> 05:37:30,400
these points and they might just make it

6284
05:37:30,400 --> 05:37:31,600
a little bit easier for you to get

6285
05:37:31,600 --> 05:37:32,958
through

6286
05:37:32,958 --> 05:37:34,000
point one

6287
05:37:34,000 --> 05:37:35,440
i've said it a bunch of times already

6288
05:37:35,440 --> 05:37:37,120
and i will a few more when there's an

6289
05:37:37,120 --> 05:37:39,200
incident or a potential one or something

6290
05:37:39,200 --> 05:37:41,680
feels off or you just know that there's

6291
05:37:41,680 --> 05:37:43,680
been an event that should be shared lean

6292
05:37:43,680 --> 05:37:45,520
in tell your people alert your

6293
05:37:45,520 --> 05:37:46,798
organization

6294
05:37:46,798 --> 05:37:48,878
don't wait for someone else to pick it

6295
05:37:48,878 --> 05:37:50,958
up and be concerned instead time to

6296
05:37:50,958 --> 05:37:53,360
respond matters and losing hours waiting

6297
05:37:53,360 --> 05:37:54,958
for someone else to determine that it's

6298
05:37:54,958 --> 05:37:56,558
actually a big deal

6299
05:37:56,558 --> 05:37:58,558
um can hold you back

6300
05:37:58,558 --> 05:38:00,160
i know a lot of people have said things

6301
05:38:00,160 --> 05:38:01,840
like i want to escalate this but it's

6302
05:38:01,840 --> 05:38:04,638
got a cvs of 7.8 and our processors say

6303
05:38:04,638 --> 05:38:06,558
we don't sweat anything under an eight

6304
05:38:06,558 --> 05:38:07,840
but you know those scores aren't

6305
05:38:07,840 --> 05:38:09,520
everything and i think sometimes people

6306
05:38:09,520 --> 05:38:12,878
might even try to keep them under eight

6307
05:38:12,878 --> 05:38:15,120
raising the alarm can be uncomfortable

6308
05:38:15,120 --> 05:38:16,320
but you know the networks that you're

6309
05:38:16,320 --> 05:38:18,240
working to protect

6310
05:38:18,240 --> 05:38:20,160
it's important to sound the alarm i've

6311
05:38:20,160 --> 05:38:21,600
seen a lot of cases where people were

6312
05:38:21,600 --> 05:38:22,958
nervous to be the analysts that cried

6313
05:38:22,958 --> 05:38:24,638
wolf certainly

6314
05:38:24,638 --> 05:38:26,798
um for instance logged for jay it was a

6315
05:38:26,798 --> 05:38:28,638
friday afternoon seniors wanted to go

6316
05:38:28,638 --> 05:38:30,638
home or take off to drinks it was

6317
05:38:30,638 --> 05:38:32,478
uncomfortable to hold people back but it

6318
05:38:32,478 --> 05:38:34,958
was really important to do it

6319
05:38:34,958 --> 05:38:36,400
poncho

6320
05:38:36,400 --> 05:38:37,680
you've leaned all the way in you've

6321
05:38:37,680 --> 05:38:39,200
announced that there is an incident or a

6322
05:38:39,200 --> 05:38:40,558
vulnerability that should be treated as

6323
05:38:40,558 --> 05:38:41,760
an incident or a threat that should be

6324
05:38:41,760 --> 05:38:43,680
considered like a vulnerability wherever

6325
05:38:43,680 --> 05:38:45,360
you land on the spectrum there is a

6326
05:38:45,360 --> 05:38:46,798
reasonable chance you're leading an

6327
05:38:46,798 --> 05:38:49,120
incident now congratulations

6328
05:38:49,120 --> 05:38:51,520
having a command and control structure

6329
05:38:51,520 --> 05:38:53,520
for the management of this incident is

6330
05:38:53,520 --> 05:38:55,760
key this is something that we relied on

6331
05:38:55,760 --> 05:38:57,440
heavily at certain zed and within

6332
05:38:57,440 --> 05:38:59,840
government the old saying if too many

6333
05:38:59,840 --> 05:39:01,760
cooks can spoil the broth too many

6334
05:39:01,760 --> 05:39:03,200
people leading the response will spoil

6335
05:39:03,200 --> 05:39:05,600
the response you need one person in

6336
05:39:05,600 --> 05:39:07,120
charge of leading and owning the

6337
05:39:07,120 --> 05:39:09,520
incident they need to be senior enough

6338
05:39:09,520 --> 05:39:10,958
that they can get things done that they

6339
05:39:10,958 --> 05:39:12,638
can pull resources from whatever areas

6340
05:39:12,638 --> 05:39:14,558
they need but not so senior that they

6341
05:39:14,558 --> 05:39:16,320
can't focus all of their time and energy

6342
05:39:16,320 --> 05:39:18,478
on the incident alone

6343
05:39:18,478 --> 05:39:20,240
this is not to say that your incident

6344
05:39:20,240 --> 05:39:22,000
controller will be doing everything that

6345
05:39:22,000 --> 05:39:23,600
would be bad and they would get burned

6346
05:39:23,600 --> 05:39:25,680
out super fast not speaking from

6347
05:39:25,680 --> 05:39:26,878
experience

6348
05:39:26,878 --> 05:39:29,120
everything just needs to be reported to

6349
05:39:29,120 --> 05:39:31,040
and through them directly underneath

6350
05:39:31,040 --> 05:39:32,638
them what worked well for us was to have

6351
05:39:32,638 --> 05:39:35,280
three key roles at least an operations

6352
05:39:35,280 --> 05:39:37,200
manager leading the technical details of

6353
05:39:37,200 --> 05:39:39,840
the response a communications lead and

6354
05:39:39,840 --> 05:39:41,760
an engagement manager and this often

6355
05:39:41,760 --> 05:39:42,878
worked well

6356
05:39:42,878 --> 05:39:44,478
with members of the operations team

6357
05:39:44,478 --> 05:39:46,000
feeding into it because it involved

6358
05:39:46,000 --> 05:39:47,520
reaching out to networks and talking to

6359
05:39:47,520 --> 05:39:48,958
people about similar incidents that they

6360
05:39:48,958 --> 05:39:51,440
were experiencing

6361
05:39:51,440 --> 05:39:53,200
it's also critical to have a person

6362
05:39:53,200 --> 05:39:55,040
keeping a running log of events and

6363
05:39:55,040 --> 05:39:57,120
major decisions being made along the way

6364
05:39:57,120 --> 05:39:59,040
as well as managing administrative tasks

6365
05:39:59,040 --> 05:40:00,478
like setting up calls and things like

6366
05:40:00,478 --> 05:40:01,280
that

6367
05:40:01,280 --> 05:40:02,718
we could cover the structure in more

6368
05:40:02,718 --> 05:40:04,558
detail certainly but in essence it's

6369
05:40:04,558 --> 05:40:06,638
pretty simple you have one person owning

6370
05:40:06,638 --> 05:40:08,638
the incident with a full bird's eye view

6371
05:40:08,638 --> 05:40:10,718
over what's taking place and all teams

6372
05:40:10,718 --> 05:40:12,558
involved by having three key roles

6373
05:40:12,558 --> 05:40:14,400
reporting into them about the incident

6374
05:40:14,400 --> 05:40:16,878
communications media engagement anything

6375
05:40:16,878 --> 05:40:19,440
else that you're juggling at the time

6376
05:40:19,440 --> 05:40:22,240
point three communicate you've leaned in

6377
05:40:22,240 --> 05:40:23,360
you've got the incident and you're

6378
05:40:23,360 --> 05:40:24,798
running it smoothly because you've set

6379
05:40:24,798 --> 05:40:26,478
up an amazing command and control

6380
05:40:26,478 --> 05:40:28,160
structure just like rob pope taught you

6381
05:40:28,160 --> 05:40:29,120
about

6382
05:40:29,120 --> 05:40:30,958
a few key incident specific roles have

6383
05:40:30,958 --> 05:40:33,600
been designated and the team has rallied

6384
05:40:33,600 --> 05:40:35,520
around you to support them everyone

6385
05:40:35,520 --> 05:40:36,878
knows what they're meant to be doing and

6386
05:40:36,878 --> 05:40:38,878
there's only a normal amount of chaos

6387
05:40:38,878 --> 05:40:39,680
now

6388
05:40:39,680 --> 05:40:41,280
without the added disorganization that

6389
05:40:41,280 --> 05:40:43,200
can come with these events

6390
05:40:43,200 --> 05:40:45,520
to make it even smoother

6391
05:40:45,520 --> 05:40:47,120
it's time to communicate

6392
05:40:47,120 --> 05:40:49,920
internally externally sideways whatever

6393
05:40:49,920 --> 05:40:51,840
the comms function is so important here

6394
05:40:51,840 --> 05:40:52,958
and it's often something that is

6395
05:40:52,958 --> 05:40:55,040
forgotten about in a technical response

6396
05:40:55,040 --> 05:40:56,638
there's a few types of communication

6397
05:40:56,638 --> 05:40:58,478
that i'm going to talk about here

6398
05:40:58,478 --> 05:41:00,478
internally getting through an incident

6399
05:41:00,478 --> 05:41:01,840
is already hectic

6400
05:41:01,840 --> 05:41:02,958
and there's going to be a lot of people

6401
05:41:02,958 --> 05:41:04,558
in your organization that want to know

6402
05:41:04,558 --> 05:41:07,040
what's going on and be regularly updated

6403
05:41:07,040 --> 05:41:09,120
you can save yourself a lot of time by

6404
05:41:09,120 --> 05:41:11,200
preempting this need whether that's a

6405
05:41:11,200 --> 05:41:13,280
twice daily sit rep of a few paragraphs

6406
05:41:13,280 --> 05:41:14,958
just detailing what's happened what's

6407
05:41:14,958 --> 05:41:17,200
new at a high level or even just sending

6408
05:41:17,200 --> 05:41:19,120
text messages out a few every few hours

6409
05:41:19,120 --> 05:41:20,878
depending on your organization and

6410
05:41:20,878 --> 05:41:22,958
establish communication practices

6411
05:41:22,958 --> 05:41:24,718
getting information to people that need

6412
05:41:24,718 --> 05:41:26,478
it before they're asking you for it can

6413
05:41:26,478 --> 05:41:28,798
help you take control of your time in an

6414
05:41:28,798 --> 05:41:31,040
incident in my last role at cert we

6415
05:41:31,040 --> 05:41:32,878
would quite regularly commit to daily

6416
05:41:32,878 --> 05:41:35,680
email sit reps at say 1 pm and for my

6417
05:41:35,680 --> 05:41:36,878
stakeholders they knew that they

6418
05:41:36,878 --> 05:41:38,320
couldn't expect an update and they

6419
05:41:38,320 --> 05:41:41,040
didn't need to chase us for it for me it

6420
05:41:41,040 --> 05:41:42,638
meant i knew that i had x amount of

6421
05:41:42,638 --> 05:41:44,160
hours to make sure that the update was

6422
05:41:44,160 --> 05:41:45,760
done without getting any external

6423
05:41:45,760 --> 05:41:47,680
pressure for information it just kept

6424
05:41:47,680 --> 05:41:50,400
things cleaner for me it's also

6425
05:41:50,400 --> 05:41:51,840
important to remember the people that we

6426
05:41:51,840 --> 05:41:52,878
work with

6427
05:41:52,878 --> 05:41:54,798
even when they're not directly involved

6428
05:41:54,798 --> 05:41:56,798
they want to know what's going on

6429
05:41:56,798 --> 05:41:58,320
they want to know why does everyone look

6430
05:41:58,320 --> 05:42:00,240
so grumpy why did no one from the tech

6431
05:42:00,240 --> 05:42:02,160
team come to unit morning tea

6432
05:42:02,160 --> 05:42:03,680
if it's possible to share and you have

6433
05:42:03,680 --> 05:42:05,120
the kind of organization that would

6434
05:42:05,120 --> 05:42:07,760
appreciate having this information

6435
05:42:07,760 --> 05:42:11,040
then try and get it out to staff

6436
05:42:11,040 --> 05:42:13,360
the other type of information

6437
05:42:13,360 --> 05:42:15,040
that is very very critical and i'm going

6438
05:42:15,040 --> 05:42:17,920
to advocate for relentlessly is external

6439
05:42:17,920 --> 05:42:20,000
communications we owe it to the people

6440
05:42:20,000 --> 05:42:21,680
that we serve our customers our

6441
05:42:21,680 --> 05:42:23,600
stakeholders whoever it is that relies

6442
05:42:23,600 --> 05:42:25,520
on our services to let them know if

6443
05:42:25,520 --> 05:42:27,600
we're experiencing something especially

6444
05:42:27,600 --> 05:42:28,958
like a breach that's going to impact

6445
05:42:28,958 --> 05:42:30,240
that pii

6446
05:42:30,240 --> 05:42:31,440
and if it's public knowledge that

6447
05:42:31,440 --> 05:42:33,360
something's happened there is no use

6448
05:42:33,360 --> 05:42:35,040
telling the media that we're

6449
05:42:35,040 --> 05:42:36,878
experiencing intermittent outages it's

6450
05:42:36,878 --> 05:42:38,638
2022. it's okay to be a bit more

6451
05:42:38,638 --> 05:42:40,958
transparent about what's happening

6452
05:42:40,958 --> 05:42:42,958
point four share

6453
05:42:42,958 --> 05:42:45,120
share reach out collaborate find your

6454
05:42:45,120 --> 05:42:46,718
network call your friends talk to people

6455
05:42:46,718 --> 05:42:48,320
without giving away all of the company

6456
05:42:48,320 --> 05:42:49,520
secrets

6457
05:42:49,520 --> 05:42:51,040
so many people will be going through

6458
05:42:51,040 --> 05:42:52,958
what you're experiencing and it doesn't

6459
05:42:52,958 --> 05:42:54,718
make sense for us to manage all of these

6460
05:42:54,718 --> 05:42:56,718
incidents in complete isolation every

6461
05:42:56,718 --> 05:42:57,920
time

6462
05:42:57,920 --> 05:43:00,478
log4j represented the best industry

6463
05:43:00,478 --> 05:43:02,240
experience and collaboration i've ever

6464
05:43:02,240 --> 05:43:04,958
seen take place around a major incident

6465
05:43:04,958 --> 05:43:06,718
a lot of us in the room were involved in

6466
05:43:06,718 --> 05:43:08,638
the collaboration efforts around it and

6467
05:43:08,638 --> 05:43:11,120
it worked because someone mine our boss

6468
05:43:11,120 --> 05:43:11,920
took

6469
05:43:11,920 --> 05:43:14,080
probably like a bunch of deep breaths

6470
05:43:14,080 --> 05:43:16,160
and leaned in and provided a space for

6471
05:43:16,160 --> 05:43:18,240
people to share and collaborate

6472
05:43:18,240 --> 05:43:19,680
i'm going to quote my good friend declan

6473
05:43:19,680 --> 05:43:21,520
here and say if you're exchanging

6474
05:43:21,520 --> 05:43:23,200
business cards during an incident

6475
05:43:23,200 --> 05:43:25,120
response process you are already on the

6476
05:43:25,120 --> 05:43:26,638
back foot

6477
05:43:26,638 --> 05:43:28,320
join the slack channels join the

6478
05:43:28,320 --> 05:43:29,920
communities we're not all natural

6479
05:43:29,920 --> 05:43:32,160
networkers in this hall certainly but

6480
05:43:32,160 --> 05:43:33,840
making sure you know how to connect with

6481
05:43:33,840 --> 05:43:35,360
people when you need to and then

6482
05:43:35,360 --> 05:43:36,878
actually doing it when it's time will

6483
05:43:36,878 --> 05:43:40,080
help you win every time

6484
05:43:40,080 --> 05:43:41,360
no one gets good at this without

6485
05:43:41,360 --> 05:43:43,600
practice have a plan and build some of

6486
05:43:43,600 --> 05:43:45,520
this into your plan it doesn't need to

6487
05:43:45,520 --> 05:43:47,440
be super detailed because every single

6488
05:43:47,440 --> 05:43:50,958
incident is a new and unique snowflake

6489
05:43:50,958 --> 05:43:53,600
but try a basic tabletop if you can make

6490
05:43:53,600 --> 05:43:55,120
sure people have buy-in and they know

6491
05:43:55,120 --> 05:43:57,280
their roles and they can feel super

6492
05:43:57,280 --> 05:43:58,878
clunky certainly but it will help you

6493
05:43:58,878 --> 05:44:00,160
see if you've got any glaring holes in

6494
05:44:00,160 --> 05:44:02,000
your incident response process that need

6495
05:44:02,000 --> 05:44:06,000
to be ironed out when the time comes

6496
05:44:08,000 --> 05:44:10,080
obviously no one wants things to go

6497
05:44:10,080 --> 05:44:12,000
wrong but they do all the time so

6498
05:44:12,000 --> 05:44:13,760
accepting that things will happen and

6499
05:44:13,760 --> 05:44:15,760
managing the fallout is an integral part

6500
05:44:15,760 --> 05:44:18,000
of incident response done well

6501
05:44:18,000 --> 05:44:19,520
i've seen it done so many times

6502
05:44:19,520 --> 05:44:21,840
brilliantly but there are a few examples

6503
05:44:21,840 --> 05:44:23,840
that have stuck in my head is like gold

6504
05:44:23,840 --> 05:44:25,680
standard response in new zealand over

6505
05:44:25,680 --> 05:44:27,200
the last few years

6506
05:44:27,200 --> 05:44:29,120
for community collaboration of course

6507
05:44:29,120 --> 05:44:30,878
log4j was the most beautiful example

6508
05:44:30,878 --> 05:44:32,240
i've seen

6509
05:44:32,240 --> 05:44:34,000
i've seen the community i believe the

6510
05:44:34,000 --> 05:44:35,360
community response and the shared

6511
05:44:35,360 --> 05:44:37,520
collaboration prevented significant

6512
05:44:37,520 --> 05:44:39,280
compromise and it's probably the first

6513
05:44:39,280 --> 05:44:40,958
time i've seen defenders move at about

6514
05:44:40,958 --> 05:44:42,958
the same speed as attackers

6515
05:44:42,958 --> 05:44:44,558
for the next two the information that

6516
05:44:44,558 --> 05:44:46,240
i'm going to share is purely from their

6517
05:44:46,240 --> 05:44:48,718
publicly available comms it is tlp white

6518
05:44:48,718 --> 05:44:50,160
information and it's freely available

6519
05:44:50,160 --> 05:44:53,160
online

6520
05:44:54,400 --> 05:44:56,080
here we've got an example of com sent

6521
05:44:56,080 --> 05:44:57,760
out by new zealand in the wake of the

6522
05:44:57,760 --> 05:44:59,440
star reliance data breach that took

6523
05:44:59,440 --> 05:45:01,840
place in 2021 the breach was pretty big

6524
05:45:01,840 --> 05:45:04,080
news it had global impact and flight

6525
05:45:04,080 --> 05:45:05,760
data and air points are near and dear to

6526
05:45:05,760 --> 05:45:07,120
all of us

6527
05:45:07,120 --> 05:45:08,958
for air new zealand customers it didn't

6528
05:45:08,958 --> 05:45:11,040
have a significant impact but they got

6529
05:45:11,040 --> 05:45:12,798
out there and they told us and that was

6530
05:45:12,798 --> 05:45:14,878
so important they explained in this

6531
05:45:14,878 --> 05:45:16,558
email we don't share all of your

6532
05:45:16,558 --> 05:45:18,080
information but your name your

6533
05:45:18,080 --> 05:45:19,760
membership number and your tier status

6534
05:45:19,760 --> 05:45:21,680
may have been called up in this breach

6535
05:45:21,680 --> 05:45:23,680
they specify what information was not

6536
05:45:23,680 --> 05:45:26,400
shared passwords credit cards

6537
05:45:26,400 --> 05:45:28,958
itineraries passport numbers

6538
05:45:28,958 --> 05:45:30,718
in this they tell you exactly what's

6539
05:45:30,718 --> 05:45:32,478
happened so you can make informed

6540
05:45:32,478 --> 05:45:34,240
decisions about what steps you're going

6541
05:45:34,240 --> 05:45:37,040
to take and how concerned you are

6542
05:45:37,040 --> 05:45:39,360
they also specify a call to action or in

6543
05:45:39,360 --> 05:45:41,600
this case a lack of action which is just

6544
05:45:41,600 --> 05:45:42,878
as valuable

6545
05:45:42,878 --> 05:45:44,558
you do not need to do anything there is

6546
05:45:44,558 --> 05:45:46,400
no need to change your password or take

6547
05:45:46,400 --> 05:45:49,040
any other action they front footed this

6548
05:45:49,040 --> 05:45:50,400
they let their customers know what

6549
05:45:50,400 --> 05:45:52,080
information had been accessed and they

6550
05:45:52,080 --> 05:45:54,638
did it in plain clear english they were

6551
05:45:54,638 --> 05:45:56,638
clear on what steps people should take

6552
05:45:56,638 --> 05:45:57,840
none

6553
05:45:57,840 --> 05:45:59,600
i think this is an amazing example of

6554
05:45:59,600 --> 05:46:01,120
incident response communications

6555
05:46:01,120 --> 05:46:04,239
externally done very well

6556
05:46:05,360 --> 05:46:07,120
the reserve bank's incident response

6557
05:46:07,120 --> 05:46:08,558
process around the breach through the

6558
05:46:08,558 --> 05:46:10,320
acelian vulnerability and my mind was

6559
05:46:10,320 --> 05:46:11,760
also world class

6560
05:46:11,760 --> 05:46:14,080
when the news broke every day we saw the

6561
05:46:14,080 --> 05:46:16,000
governor of the reserve bank on the 6 pm

6562
05:46:16,000 --> 05:46:18,558
news he was accessible he was clearly

6563
05:46:18,558 --> 05:46:20,558
explaining the issue with transparency

6564
05:46:20,558 --> 05:46:22,878
and openly to their constituents all new

6565
05:46:22,878 --> 05:46:24,080
zealanders

6566
05:46:24,080 --> 05:46:25,840
on their website still they have pages

6567
05:46:25,840 --> 05:46:27,840
dedicated to sharing information around

6568
05:46:27,840 --> 05:46:28,958
the incident

6569
05:46:28,958 --> 05:46:30,400
if you keep scrolling here you'll see

6570
05:46:30,400 --> 05:46:32,718
information like support for individuals

6571
05:46:32,718 --> 05:46:34,558
impacted by the data breach how to

6572
05:46:34,558 --> 05:46:36,638
contact the office of the office of the

6573
05:46:36,638 --> 05:46:38,400
privacy commissioner

6574
05:46:38,400 --> 05:46:40,718
what data was accessed they have details

6575
05:46:40,718 --> 05:46:43,200
of their incident response process and

6576
05:46:43,200 --> 05:46:45,600
the lessons learned and copies into the

6577
05:46:45,600 --> 05:46:47,200
independent reports into their systems

6578
05:46:47,200 --> 05:46:49,600
and processes

6579
05:46:49,600 --> 05:46:51,280
interestingly they also have a

6580
05:46:51,280 --> 05:46:52,958
transparent breakdown of the estimated

6581
05:46:52,958 --> 05:46:54,638
cost of the incident and the response

6582
05:46:54,638 --> 05:46:56,160
process which

6583
05:46:56,160 --> 05:46:58,400
only an organization of economists maybe

6584
05:46:58,400 --> 05:47:00,160
would have but it was 3.5 million

6585
05:47:00,160 --> 05:47:02,478
dollars

6586
05:47:04,240 --> 05:47:05,680
and sometimes

6587
05:47:05,680 --> 05:47:07,200
things are just awful

6588
05:47:07,200 --> 05:47:08,320
the events that took place in

6589
05:47:08,320 --> 05:47:10,320
christchurch and the online component

6590
05:47:10,320 --> 05:47:12,160
was an example of an incident that

6591
05:47:12,160 --> 05:47:14,240
absolutely none of us have experience

6592
05:47:14,240 --> 05:47:15,360
managing

6593
05:47:15,360 --> 05:47:17,040
it was new it was traumatic it was awful

6594
05:47:17,040 --> 05:47:18,478
and it was scary

6595
05:47:18,478 --> 05:47:19,920
but it was also critical that the

6596
05:47:19,920 --> 05:47:21,760
community got together to work through a

6597
05:47:21,760 --> 05:47:23,680
response i was involved in the incident

6598
05:47:23,680 --> 05:47:25,040
response team

6599
05:47:25,040 --> 05:47:26,478
and we pulled together a group of

6600
05:47:26,478 --> 05:47:27,840
agencies that were able to share

6601
05:47:27,840 --> 05:47:30,240
information collaborate

6602
05:47:30,240 --> 05:47:31,440
and make sure that the offensive

6603
05:47:31,440 --> 05:47:34,400
material was as inaccessible as possible

6604
05:47:34,400 --> 05:47:36,160
sure certainly people that were

6605
05:47:36,160 --> 05:47:37,520
committed to finding it and knew their

6606
05:47:37,520 --> 05:47:39,760
way around a vpn could access it but our

6607
05:47:39,760 --> 05:47:42,000
goal was to make sure that no one click

6608
05:47:42,000 --> 05:47:44,160
would get any unsuspecting or mildly

6609
05:47:44,160 --> 05:47:46,718
curious person to witness the atrocities

6610
05:47:46,718 --> 05:47:48,718
the magic behind this collaboration and

6611
05:47:48,718 --> 05:47:50,478
the reason that it worked was because we

6612
05:47:50,478 --> 05:47:52,160
pulled together as a community with a

6613
05:47:52,160 --> 05:47:53,840
shared problem and a shared commitment

6614
05:47:53,840 --> 05:47:55,680
to solving it

6615
05:47:55,680 --> 05:47:58,000
communication was queen we collaborated

6616
05:47:58,000 --> 05:48:00,240
openly about what we were seeing about

6617
05:48:00,240 --> 05:48:02,080
our capabilities how we could do things

6618
05:48:02,080 --> 05:48:04,080
and how we were going to do it

6619
05:48:04,080 --> 05:48:05,200
people were honest about their

6620
05:48:05,200 --> 05:48:07,440
limitations and their blind spots and

6621
05:48:07,440 --> 05:48:08,558
others helped them come up with

6622
05:48:08,558 --> 05:48:10,240
workarounds for it

6623
05:48:10,240 --> 05:48:12,160
the thing that made this much easier for

6624
05:48:12,160 --> 05:48:13,840
us is that we already also knew each

6625
05:48:13,840 --> 05:48:16,080
other we had each other's numbers we had

6626
05:48:16,080 --> 05:48:17,840
established trust and we all knew that

6627
05:48:17,840 --> 05:48:19,200
none of us were calling each other on a

6628
05:48:19,200 --> 05:48:21,280
friday night for the fun of it we were

6629
05:48:21,280 --> 05:48:22,798
able to skip the introductory phase and

6630
05:48:22,798 --> 05:48:24,320
get straight to the incident response

6631
05:48:24,320 --> 05:48:25,680
process

6632
05:48:25,680 --> 05:48:27,200
we worked through the small hours over a

6633
05:48:27,200 --> 05:48:29,040
weekend to essentially play whack-a-mole

6634
05:48:29,040 --> 05:48:31,040
with new links we kept talking to each

6635
05:48:31,040 --> 05:48:33,120
other throughout it

6636
05:48:33,120 --> 05:48:34,718
it was of course an absolutely awful

6637
05:48:34,718 --> 05:48:36,718
experience but we did learn the absolute

6638
05:48:36,718 --> 05:48:38,478
value of collaboration and working

6639
05:48:38,478 --> 05:48:41,200
together communicating and sometimes you

6640
05:48:41,200 --> 05:48:44,958
just have to lean in to get it done

6641
05:48:47,040 --> 05:48:49,120
what makes ir trickier

6642
05:48:49,120 --> 05:48:50,878
i won't get stuck into a public naming

6643
05:48:50,878 --> 05:48:52,478
and shaming campaign but the truth is

6644
05:48:52,478 --> 05:48:54,798
we've all seen it done poorly before and

6645
05:48:54,798 --> 05:48:56,558
often bigger organizations can be a bit

6646
05:48:56,558 --> 05:48:58,080
naughtier with this

6647
05:48:58,080 --> 05:48:59,760
cases where organizations refuse to

6648
05:48:59,760 --> 05:49:01,200
comment or deny that something's

6649
05:49:01,200 --> 05:49:02,878
occurred on their network but it's

6650
05:49:02,878 --> 05:49:04,718
pretty obvious from the data for sale on

6651
05:49:04,718 --> 05:49:07,440
the dark web it's come from that company

6652
05:49:07,440 --> 05:49:09,680
uh social media teams posting on

6653
05:49:09,680 --> 05:49:11,200
platforms that everything's okay and

6654
05:49:11,200 --> 05:49:13,120
services are restored long before they

6655
05:49:13,120 --> 05:49:14,320
actually are

6656
05:49:14,320 --> 05:49:16,638
without a command and control structure

6657
05:49:16,638 --> 05:49:17,920
clearly defined roles and

6658
05:49:17,920 --> 05:49:20,080
responsibilities and one person with

6659
05:49:20,080 --> 05:49:22,080
oversight these sorts of messy things

6660
05:49:22,080 --> 05:49:24,000
can happen and to your customers it can

6661
05:49:24,000 --> 05:49:25,280
make it look like you don't have the

6662
05:49:25,280 --> 05:49:27,200
incident in hand and it can undermine

6663
05:49:27,200 --> 05:49:30,478
constant confidence in your organization

6664
05:49:30,478 --> 05:49:32,718
incidents are chaotic and scary and some

6665
05:49:32,718 --> 05:49:34,558
businesses have knee-jerk reactions to

6666
05:49:34,558 --> 05:49:36,718
not sharing information but i truly

6667
05:49:36,718 --> 05:49:38,638
believe that where possible it's best to

6668
05:49:38,638 --> 05:49:40,400
be transparent about what's going on

6669
05:49:40,400 --> 05:49:42,000
especially if it impacts your customers

6670
05:49:42,000 --> 05:49:43,440
and api

6671
05:49:43,440 --> 05:49:44,718
and it's possible to get through these

6672
05:49:44,718 --> 05:49:47,718
things

6673
05:49:47,920 --> 05:49:50,160
with these four handy tips

6674
05:49:50,160 --> 05:49:52,240
to reinforce the final time start by

6675
05:49:52,240 --> 05:49:54,240
taking some deep breaths lean into the

6676
05:49:54,240 --> 05:49:56,718
incident ring the bell tell people get

6677
05:49:56,718 --> 05:49:58,478
the ball rolling

6678
05:49:58,478 --> 05:50:00,000
once you're there make sure that you

6679
05:50:00,000 --> 05:50:01,760
have established a tidy command and

6680
05:50:01,760 --> 05:50:03,760
control structure and keep discipline in

6681
05:50:03,760 --> 05:50:05,680
the process of doing the technical

6682
05:50:05,680 --> 05:50:07,440
response and making sure that external

6683
05:50:07,440 --> 05:50:09,520
communications are done well

6684
05:50:09,520 --> 05:50:12,160
communicate internally externally tell

6685
05:50:12,160 --> 05:50:13,680
people what's going on don't try and

6686
05:50:13,680 --> 05:50:15,360
sweep it under the rug

6687
05:50:15,360 --> 05:50:16,878
and share

6688
05:50:16,878 --> 05:50:18,878
reach out to people collaborate join

6689
05:50:18,878 --> 05:50:20,160
networks even if you're just going to be

6690
05:50:20,160 --> 05:50:22,240
a lurker for a year it will help you

6691
05:50:22,240 --> 05:50:24,320
when you need it and share with your

6692
05:50:24,320 --> 05:50:26,558
local friendly cert as well use them to

6693
05:50:26,558 --> 05:50:28,400
help and amplify messages when you need

6694
05:50:28,400 --> 05:50:29,600
them to

6695
05:50:29,600 --> 05:50:31,200
they can help collaborate incidents and

6696
05:50:31,200 --> 05:50:32,638
bring people together they're very good

6697
05:50:32,638 --> 05:50:34,080
at it and if anyone wants jordan's

6698
05:50:34,080 --> 05:50:37,840
mobile number after this come see me

6699
05:50:38,400 --> 05:50:40,400
that's it so good luck and may your

6700
05:50:40,400 --> 05:50:42,798
incidents be a little bit less chaotic

6701
05:50:42,798 --> 05:50:43,800
thank you

6702
05:50:43,800 --> 05:50:53,149
[Applause]

6703
05:50:54,240 --> 05:50:57,798
thanks very much nadia

6704
05:51:02,240 --> 05:51:04,638
sweet

6705
05:51:04,718 --> 05:51:07,680
pesky connectors

6706
05:51:08,840 --> 05:51:11,120
right now

6707
05:51:11,120 --> 05:51:14,718
what do you think is the scariest word

6708
05:51:14,718 --> 05:51:16,558
in infosec what's the thing that makes

6709
05:51:16,558 --> 05:51:17,600
you go

6710
05:51:17,600 --> 05:51:18,558
oh

6711
05:51:18,558 --> 05:51:21,280
when someone says it

6712
05:51:21,280 --> 05:51:23,120
this is it yeah i do i have a winner

6713
05:51:23,120 --> 05:51:24,718
down here somebody has figured it out i

6714
05:51:24,718 --> 05:51:28,638
wonder what it could be kubernetes

6715
05:51:29,200 --> 05:51:32,878
even this makes my skin crawl

6716
05:51:33,280 --> 05:51:34,400
i mean there's a little bit of that too

6717
05:51:34,400 --> 05:51:36,638
yes

6718
05:51:36,840 --> 05:51:39,840
so if you are sensitive to you know

6719
05:51:39,840 --> 05:51:41,520
allergic to perhaps

6720
05:51:41,520 --> 05:51:43,840
the k word

6721
05:51:43,840 --> 05:51:44,958
you may need to block your ears for the

6722
05:51:44,958 --> 05:51:46,958
next talk now it is my pleasure to

6723
05:51:46,958 --> 05:51:48,798
welcome the stage

6724
05:51:48,798 --> 05:51:51,360
welcome stage

6725
05:51:51,360 --> 05:51:53,120
yes here we are

6726
05:51:53,120 --> 05:51:54,240
please welcome

6727
05:51:54,240 --> 05:51:57,558
mr ronamosa

6728
05:51:58,600 --> 05:52:01,899
[Applause]

6729
05:52:16,638 --> 05:52:19,638
foreign

6730
05:52:28,478 --> 05:52:30,558
welcome everybody to kubernetes on hard

6731
05:52:30,558 --> 05:52:32,878
mode security and hostile multi-tenancy

6732
05:52:32,878 --> 05:52:35,040
clusters

6733
05:52:35,040 --> 05:52:37,600
uh and i'll bet that's the first time

6734
05:52:37,600 --> 05:52:39,040
flats are more in communities is going

6735
05:52:39,040 --> 05:52:40,558
to be used in the same talk

6736
05:52:40,558 --> 05:52:42,240
so

6737
05:52:42,240 --> 05:52:44,958
good to be here

6738
05:52:47,440 --> 05:52:48,878
uh

6739
05:52:48,878 --> 05:52:51,040
yes i'm samoan and yes this is a

6740
05:52:51,040 --> 05:52:55,280
kubernetes multi-tenancy security talk

6741
05:52:55,520 --> 05:52:56,718
so

6742
05:52:56,718 --> 05:52:58,798
right off the bat

6743
05:52:58,798 --> 05:53:01,680
our goal today team um

6744
05:53:01,680 --> 05:53:03,520
firstly is to learn what

6745
05:53:03,520 --> 05:53:06,958
multi-tenancy kubernetes is

6746
05:53:07,920 --> 05:53:09,680
that's how that works

6747
05:53:09,680 --> 05:53:11,040
next we want to look at hard

6748
05:53:11,040 --> 05:53:13,600
multi-tenancy and kubernetes and the

6749
05:53:13,600 --> 05:53:15,120
hostilities you know and the challenges

6750
05:53:15,120 --> 05:53:17,840
involved

6751
05:53:18,000 --> 05:53:21,280
at the end of it i want to show you all

6752
05:53:21,280 --> 05:53:23,040
the security and hardening options so

6753
05:53:23,040 --> 05:53:25,360
that you can level up on hard mode

6754
05:53:25,360 --> 05:53:27,600
look as complicated as the ship can get

6755
05:53:27,600 --> 05:53:29,760
understanding multi-tenancy

6756
05:53:29,760 --> 05:53:32,558
and the security methods available

6757
05:53:32,558 --> 05:53:36,240
you too can level up when it gets hard

6758
05:53:43,040 --> 05:53:44,798
let's go to the next

6759
05:53:44,798 --> 05:53:47,760
right a little bit about me

6760
05:53:49,280 --> 05:53:51,520
following more ron amossa

6761
05:53:51,520 --> 05:53:53,520
starting at the bottom uh i was a devops

6762
05:53:53,520 --> 05:53:55,120
engineer for a number of years before

6763
05:53:55,120 --> 05:53:58,160
becoming an sre mercenary for hire

6764
05:53:58,160 --> 05:53:59,600
contracting

6765
05:53:59,600 --> 05:54:01,200
building kubernetes environments for

6766
05:54:01,200 --> 05:54:03,280
banks and insurance companies

6767
05:54:03,280 --> 05:54:05,120
and after that i moved into platform

6768
05:54:05,120 --> 05:54:06,240
security

6769
05:54:06,240 --> 05:54:07,040
over

6770
05:54:07,040 --> 05:54:10,320
securing salesforce and heroku

6771
05:54:10,320 --> 05:54:12,240
and as of literally a couple of weeks

6772
05:54:12,240 --> 05:54:14,320
ago i'm now a solution architect for the

6773
05:54:14,320 --> 05:54:17,040
pacific islands in the aws public sector

6774
05:54:17,040 --> 05:54:18,160
team

6775
05:54:18,160 --> 05:54:20,638
so you can find me on those socials

6776
05:54:20,638 --> 05:54:24,200
if you're that way inclined

6777
05:54:27,280 --> 05:54:28,878
so first up i think we need to get clear

6778
05:54:28,878 --> 05:54:29,840
on

6779
05:54:29,840 --> 05:54:31,440
what community is what exactly is the

6780
05:54:31,440 --> 05:54:32,798
kubernetes

6781
05:54:32,798 --> 05:54:34,798
show hands who works with kubernetes on

6782
05:54:34,798 --> 05:54:37,600
a daily basis

6783
05:54:37,760 --> 05:54:39,280
okay

6784
05:54:39,280 --> 05:54:42,000
who spun up a local cluster on the

6785
05:54:42,000 --> 05:54:43,680
machine

6786
05:54:43,680 --> 05:54:45,280
all right that's cool that's better like

6787
05:54:45,280 --> 05:54:48,000
kind microgates and who's spun up and

6788
05:54:48,000 --> 05:54:51,200
managed cluster in the cloud

6789
05:54:51,200 --> 05:54:53,040
awesome

6790
05:54:53,040 --> 05:54:55,120
so i couldn't find a simple uh analogy

6791
05:54:55,120 --> 05:54:56,878
for kubernetes but um

6792
05:54:56,878 --> 05:54:59,600
here's a weird one

6793
05:55:00,798 --> 05:55:02,958
so

6794
05:55:03,120 --> 05:55:04,478
you all know the docker whale right and

6795
05:55:04,478 --> 05:55:05,760
it's got the little containers on top of

6796
05:55:05,760 --> 05:55:09,200
it so think about the docker whale

6797
05:55:09,200 --> 05:55:10,478
now think about

6798
05:55:10,478 --> 05:55:13,520
20 docker whales

6799
05:55:14,478 --> 05:55:17,840
now think about 20 dock whales

6800
05:55:17,840 --> 05:55:20,638
all at sea world and sea world gets to

6801
05:55:20,638 --> 05:55:23,600
feed and house and make them do tricks

6802
05:55:23,600 --> 05:55:26,478
and who can watch them

6803
05:55:26,478 --> 05:55:28,638
in this simple ass analogy kubernetes is

6804
05:55:28,638 --> 05:55:30,240
kind of like seaworld

6805
05:55:30,240 --> 05:55:35,160
it works or it doesn't we'll move on

6806
05:55:37,520 --> 05:55:39,440
so a quick quick recap of kubernetes

6807
05:55:39,440 --> 05:55:40,798
architecture

6808
05:55:40,798 --> 05:55:42,400
uh here's a classic kubernetes

6809
05:55:42,400 --> 05:55:44,080
architecture diagram

6810
05:55:44,080 --> 05:55:45,920
so we have two main areas of focus right

6811
05:55:45,920 --> 05:55:47,520
so we have our control plane and our

6812
05:55:47,520 --> 05:55:49,760
data plane control plane is where all of

6813
05:55:49,760 --> 05:55:50,798
our

6814
05:55:50,798 --> 05:55:52,638
kubernetes software is running we have

6815
05:55:52,638 --> 05:55:56,320
the api scheduler control manager

6816
05:55:56,320 --> 05:55:58,478
and then to the right we've got the data

6817
05:55:58,478 --> 05:55:59,760
plane so this is where all the magic

6818
05:55:59,760 --> 05:56:02,240
happens we have our nodes with our pods

6819
05:56:02,240 --> 05:56:04,320
and containers running there now just a

6820
05:56:04,320 --> 05:56:06,160
quick distinction between

6821
05:56:06,160 --> 05:56:07,920
a container escape which i'm sure a lot

6822
05:56:07,920 --> 05:56:09,520
of people are familiar with

6823
05:56:09,520 --> 05:56:11,920
and a full kubernetes takeover because

6824
05:56:11,920 --> 05:56:13,280
when people hear kubernetes they think

6825
05:56:13,280 --> 05:56:15,040
oh yeah cool containers but it's a

6826
05:56:15,040 --> 05:56:19,080
little bit more complicated than that

6827
05:56:19,760 --> 05:56:21,520
for example if we have a little

6828
05:56:21,520 --> 05:56:23,760
container escape over here

6829
05:56:23,760 --> 05:56:25,920
the node's probably toast but in terms

6830
05:56:25,920 --> 05:56:28,798
of the cluster you might be okay

6831
05:56:28,798 --> 05:56:30,558
whereas if we have a container escape

6832
05:56:30,558 --> 05:56:31,680
over here and the control plane

6833
05:56:31,680 --> 05:56:34,080
component then

6834
05:56:34,080 --> 05:56:35,520
it's pretty much going over that point

6835
05:56:35,520 --> 05:56:37,120
so there's container escapes and then

6836
05:56:37,120 --> 05:56:39,200
there's cluster takeovers right so just

6837
05:56:39,200 --> 05:56:42,160
an important distinction

6838
05:56:42,320 --> 05:56:44,000
but i think it's really important right

6839
05:56:44,000 --> 05:56:45,520
at the beginning

6840
05:56:45,520 --> 05:56:47,040
to ask ourselves why multi-tenancy why

6841
05:56:47,040 --> 05:56:48,798
are we even doing this

6842
05:56:48,798 --> 05:56:50,320
multi-tenancy

6843
05:56:50,320 --> 05:56:51,920
in a nutshell is just about sharing

6844
05:56:51,920 --> 05:56:54,080
cluster resources that's what it's about

6845
05:56:54,080 --> 05:56:56,240
so to put it simply in organizations

6846
05:56:56,240 --> 05:56:58,558
they want to save costs and they also

6847
05:56:58,558 --> 05:57:00,160
want to simplify the administration of

6848
05:57:00,160 --> 05:57:01,760
these things right and that's all well

6849
05:57:01,760 --> 05:57:02,718
and good

6850
05:57:02,718 --> 05:57:06,080
but what does this mean for security

6851
05:57:06,798 --> 05:57:08,558
when it comes to considering security

6852
05:57:08,558 --> 05:57:11,200
options available for hard multi-tenancy

6853
05:57:11,200 --> 05:57:13,200
i like to call this maslow's pyramid of

6854
05:57:13,200 --> 05:57:16,958
whose ideal was it to use kubernetes

6855
05:57:21,280 --> 05:57:23,040
but clusters

6856
05:57:23,040 --> 05:57:24,478
your classes can be these three things

6857
05:57:24,478 --> 05:57:26,400
it can be cheap simple or secure the

6858
05:57:26,400 --> 05:57:27,760
catchers

6859
05:57:27,760 --> 05:57:31,760
you only get two so pick wisely

6860
05:57:32,320 --> 05:57:33,920
so now that we agree what a kubernetes

6861
05:57:33,920 --> 05:57:35,760
cluster is or what kubernetes is what

6862
05:57:35,760 --> 05:57:37,600
most tendency that all is something that

6863
05:57:37,600 --> 05:57:40,320
it wants we need to define

6864
05:57:40,320 --> 05:57:43,600
what is the tenant

6865
05:57:43,600 --> 05:57:45,520
you'll be happy to know that kubernetes

6866
05:57:45,520 --> 05:57:47,440
doesn't officially have a single

6867
05:57:47,440 --> 05:57:49,120
definition of what a tenant is and like

6868
05:57:49,120 --> 05:57:50,798
most complex things

6869
05:57:50,798 --> 05:57:52,878
definition depends on your use case and

6870
05:57:52,878 --> 05:57:54,958
the use cases generally fall into two

6871
05:57:54,958 --> 05:57:58,958
broad categories and these are

6872
05:58:01,840 --> 05:58:03,680
sorry

6873
05:58:03,680 --> 05:58:04,958
multi-team so this is where you have

6874
05:58:04,958 --> 05:58:06,638
tenants identified as teams and they

6875
05:58:06,638 --> 05:58:07,920
deploy their workloads onto a shared

6876
05:58:07,920 --> 05:58:09,200
cluster

6877
05:58:09,200 --> 05:58:11,920
the term team is a bit of a fuzzy um

6878
05:58:11,920 --> 05:58:14,320
a term to use for defining a tenant and

6879
05:58:14,320 --> 05:58:17,520
you'll see why on the next slide

6880
05:58:18,478 --> 05:58:20,558
so multi-customer also known as sas

6881
05:58:20,558 --> 05:58:22,638
tendency here we've got a team that

6882
05:58:22,638 --> 05:58:24,160
deploys a dedicated workload per

6883
05:58:24,160 --> 05:58:26,080
customer tenant is simply a group of

6884
05:58:26,080 --> 05:58:28,478
users who share a single workload

6885
05:58:28,478 --> 05:58:31,200
on the cluster

6886
05:58:31,200 --> 05:58:32,558
and just to make things trickier you can

6887
05:58:32,558 --> 05:58:34,958
have a hybrid hybrid use case where you

6888
05:58:34,958 --> 05:58:36,240
have both

6889
05:58:36,240 --> 05:58:39,040
multi-team and multi-tenancy

6890
05:58:39,040 --> 05:58:43,200
multi-customer workloads in the cluster

6891
05:58:44,798 --> 05:58:47,600
so what's hard multi-tenancy then

6892
05:58:47,600 --> 05:58:49,280
if multi-tenancy means simpler and more

6893
05:58:49,280 --> 05:58:51,680
cost-effective clusters for the business

6894
05:58:51,680 --> 05:58:53,280
then in terms of security hard multiple

6895
05:58:53,280 --> 05:58:56,958
tnc is really about isolation

6896
05:58:59,360 --> 05:59:01,280
hard multi-tenancy is what we mean when

6897
05:59:01,280 --> 05:59:02,718
we want strong levels of isolation

6898
05:59:02,718 --> 05:59:04,160
versus soft motor tendency which is

6899
05:59:04,160 --> 05:59:06,638
weaker forms of isolation right

6900
05:59:06,638 --> 05:59:08,400
so the use cases tenants don't trust

6901
05:59:08,400 --> 05:59:09,840
each other so

6902
05:59:09,840 --> 05:59:11,280
from a security and resource sharing

6903
05:59:11,280 --> 05:59:13,280
perspective and so we need these hard

6904
05:59:13,280 --> 05:59:15,280
lines in between them

6905
05:59:15,280 --> 05:59:16,718
the thing here is like hard multisensory

6906
05:59:16,718 --> 05:59:19,120
is actually the preferred method

6907
05:59:19,120 --> 05:59:22,320
but that implies also a more complex and

6908
05:59:22,320 --> 05:59:24,400
more costly um setup for the

6909
05:59:24,400 --> 05:59:25,680
organization

6910
05:59:25,680 --> 05:59:27,440
so ron i hear you say

6911
05:59:27,440 --> 05:59:28,718
how do we do this isolation thing in

6912
05:59:28,718 --> 05:59:33,718
kubernetes well i'm glad you asked

6913
05:59:34,240 --> 05:59:36,080
so last year kubernetes multi-cnc

6914
05:59:36,080 --> 05:59:37,680
working group our task was coming up

6915
05:59:37,680 --> 05:59:39,040
with models

6916
05:59:39,040 --> 05:59:40,080
basically models of how to do

6917
05:59:40,080 --> 05:59:42,400
multi-tenancy and kubernetes basically

6918
05:59:42,400 --> 05:59:44,478
these models are multi-tenancy isolation

6919
05:59:44,478 --> 05:59:45,440
models

6920
05:59:45,440 --> 05:59:46,718
so last year there was a blog that they

6921
05:59:46,718 --> 05:59:47,920
put out and they came up with the three

6922
05:59:47,920 --> 05:59:49,360
most common tendency models for

6923
05:59:49,360 --> 05:59:51,920
multi-tenancy and kubernetes

6924
05:59:51,920 --> 05:59:53,280
and they were

6925
05:59:53,280 --> 05:59:55,760
namespace is a service every tenant

6926
05:59:55,760 --> 05:59:57,760
gets their dedicated name space and they

6927
05:59:57,760 --> 06:00:00,000
get

6928
06:00:00,400 --> 06:00:01,920
yeah just in the name space so the

6929
06:00:01,920 --> 06:00:03,680
tenants share the cluster the control

6930
06:00:03,680 --> 06:00:05,680
plan is shared but they all get isolated

6931
06:00:05,680 --> 06:00:07,520
into their own name spaces

6932
06:00:07,520 --> 06:00:09,040
tenants can do everything at the name

6933
06:00:09,040 --> 06:00:11,280
space scope but cluster wide as you see

6934
06:00:11,280 --> 06:00:12,798
in the top of the control plane that's

6935
06:00:12,798 --> 06:00:14,558
all shared so they can't actually access

6936
06:00:14,558 --> 06:00:16,878
those resources so your cids and your

6937
06:00:16,878 --> 06:00:19,440
cluster roles

6938
06:00:19,440 --> 06:00:21,600
the next model

6939
06:00:21,600 --> 06:00:24,718
is clusters as a service basically every

6940
06:00:24,718 --> 06:00:26,478
every tenant gets their own cluster this

6941
06:00:26,478 --> 06:00:28,240
is great for control plane isolation but

6942
06:00:28,240 --> 06:00:29,920
again as soon as you have all these

6943
06:00:29,920 --> 06:00:31,280
different clusters you're going to have

6944
06:00:31,280 --> 06:00:32,160
cost and you've got to have

6945
06:00:32,160 --> 06:00:33,680
administration costs like every one of

6946
06:00:33,680 --> 06:00:35,680
these will probably have a tenant admin

6947
06:00:35,680 --> 06:00:37,040
and also

6948
06:00:37,040 --> 06:00:38,478
there'll be a the concept of like a

6949
06:00:38,478 --> 06:00:40,400
central central platform team that has

6950
06:00:40,400 --> 06:00:42,798
to like provision and manage all of

6951
06:00:42,798 --> 06:00:45,840
these clusters

6952
06:00:45,920 --> 06:00:47,280
and the last model in my opinion

6953
06:00:47,280 --> 06:00:48,718
probably the most battered one is the

6954
06:00:48,718 --> 06:00:50,798
control planes as a service

6955
06:00:50,798 --> 06:00:52,400
so this is where in a nutshell every

6956
06:00:52,400 --> 06:00:54,798
tenant gets their own cluster but the

6957
06:00:54,798 --> 06:00:56,320
control plan is a virtual one in a

6958
06:00:56,320 --> 06:00:58,320
namespace this is kind of how it works

6959
06:00:58,320 --> 06:00:59,520
so this is the implementation of the

6960
06:00:59,520 --> 06:01:01,760
vcluster project

6961
06:01:01,760 --> 06:01:03,520
there's this concept of a supercluster

6962
06:01:03,520 --> 06:01:05,520
that manages the work node right and

6963
06:01:05,520 --> 06:01:07,120
you'll see that there's a control plane

6964
06:01:07,120 --> 06:01:08,878
which is the virtual v node and that

6965
06:01:08,878 --> 06:01:10,558
syncs stuff to the sim controller super

6966
06:01:10,558 --> 06:01:12,718
cluster grabs it the work nodes are all

6967
06:01:12,718 --> 06:01:14,240
shared and then they deploy these

6968
06:01:14,240 --> 06:01:16,478
workloads into the shared nodes when

6969
06:01:16,478 --> 06:01:18,240
that happens the vm agent then creates

6970
06:01:18,240 --> 06:01:20,798
this resource in the control plane

6971
06:01:20,798 --> 06:01:22,400
and then the kubelet api gets

6972
06:01:22,400 --> 06:01:24,478
intercepted and then sent down to the

6973
06:01:24,478 --> 06:01:26,558
work nodes where it matches the pods

6974
06:01:26,558 --> 06:01:28,160
that it want deployed is anyone else

6975
06:01:28,160 --> 06:01:30,240
confused

6976
06:01:30,240 --> 06:01:31,680
because this stuff gets confusing pretty

6977
06:01:31,680 --> 06:01:34,080
quickly

6978
06:01:34,878 --> 06:01:36,240
so a good next place to go after that

6979
06:01:36,240 --> 06:01:37,760
confusion

6980
06:01:37,760 --> 06:01:39,440
is to look at the throat model

6981
06:01:39,440 --> 06:01:40,558
i think we're all familiar with threat

6982
06:01:40,558 --> 06:01:41,520
modelling

6983
06:01:41,520 --> 06:01:43,680
i wanted to just look at the the general

6984
06:01:43,680 --> 06:01:46,400
kubernetes street model

6985
06:01:46,400 --> 06:01:48,878
so last year nsa and csa came out with

6986
06:01:48,878 --> 06:01:51,200
the kubernetes hardening guide

6987
06:01:51,200 --> 06:01:52,958
and then that they looked to identify

6988
06:01:52,958 --> 06:01:54,638
two main targets for why people go after

6989
06:01:54,638 --> 06:01:56,080
kubernetes clusters right and the two

6990
06:01:56,080 --> 06:01:58,080
main ones are data theft

6991
06:01:58,080 --> 06:01:59,760
and data compute theft right so i think

6992
06:01:59,760 --> 06:02:01,920
crypto miners they also mentioned dos

6993
06:02:01,920 --> 06:02:03,520
but there wasn't a lot of details around

6994
06:02:03,520 --> 06:02:04,718
that

6995
06:02:04,718 --> 06:02:06,320
in the model the interstate identified

6996
06:02:06,320 --> 06:02:07,920
three most likely sources of compromise

6997
06:02:07,920 --> 06:02:10,000
for kubernetes clusters and the first

6998
06:02:10,000 --> 06:02:11,360
one

6999
06:02:11,360 --> 06:02:13,200
that we heard a really good keynote from

7000
06:02:13,200 --> 06:02:14,718
darren this morning talked about supply

7001
06:02:14,718 --> 06:02:16,240
chains so we're thinking computer

7002
06:02:16,240 --> 06:02:19,040
container images container runtime and

7003
06:02:19,040 --> 06:02:21,040
infrastructure

7004
06:02:21,040 --> 06:02:22,478
the second threat

7005
06:02:22,478 --> 06:02:23,920
is everyone's favorite the malicious

7006
06:02:23,920 --> 06:02:26,080
threat actor out there just running amok

7007
06:02:26,080 --> 06:02:28,400
um remote exploits stolen credentials

7008
06:02:28,400 --> 06:02:30,000
are the bread and butter for

7009
06:02:30,000 --> 06:02:32,240
bad actors trying to attack kubernetes

7010
06:02:32,240 --> 06:02:34,240
clusters and this is because of

7011
06:02:34,240 --> 06:02:36,400
exposed api resources uh in the

7012
06:02:36,400 --> 06:02:38,000
kubernetes architecture things like the

7013
06:02:38,000 --> 06:02:40,000
control plane resources your worker

7014
06:02:40,000 --> 06:02:41,040
nodes

7015
06:02:41,040 --> 06:02:42,718
and also containerized apps right

7016
06:02:42,718 --> 06:02:46,000
they're all running in the data plane

7017
06:02:46,160 --> 06:02:47,680
and the third

7018
06:02:47,680 --> 06:02:49,520
and final one this one's often often

7019
06:02:49,520 --> 06:02:50,718
overlooked

7020
06:02:50,718 --> 06:02:53,280
and this is the insider thread right so

7021
06:02:53,280 --> 06:02:54,558
you've got people in there that have got

7022
06:02:54,558 --> 06:02:56,240
full cluster admin already and they've

7023
06:02:56,240 --> 06:02:57,440
got specialized knowledge of the

7024
06:02:57,440 --> 06:02:59,120
infrastructure they're already dangerous

7025
06:02:59,120 --> 06:03:01,200
people we shouldn't trust them sort of

7026
06:03:01,200 --> 06:03:03,520
you have admins you have users uh

7027
06:03:03,520 --> 06:03:05,040
whoever you know they're just one

7028
06:03:05,040 --> 06:03:07,120
professor away from root on a node and

7029
06:03:07,120 --> 06:03:08,958
then you have your csps your cloud

7030
06:03:08,958 --> 06:03:10,878
service providers these are trusted

7031
06:03:10,878 --> 06:03:12,718
vendors but you know they have access to

7032
06:03:12,718 --> 06:03:15,878
your cluster

7033
06:03:18,320 --> 06:03:19,440
sorry i just got to catch up with the

7034
06:03:19,440 --> 06:03:21,680
slides on here

7035
06:03:21,680 --> 06:03:24,000
so in prep preparing for this talk i i

7036
06:03:24,000 --> 06:03:25,840
read some advice about um

7037
06:03:25,840 --> 06:03:28,000
it's a good idea not to cognitively

7038
06:03:28,000 --> 06:03:30,080
overload your audience so i apologize in

7039
06:03:30,080 --> 06:03:33,798
advance for this next slide

7040
06:03:34,878 --> 06:03:36,638
that's beautiful that is really that's

7041
06:03:36,638 --> 06:03:39,120
really something so this this is a dfd

7042
06:03:39,120 --> 06:03:41,600
of literally one kubernetes deployment

7043
06:03:41,600 --> 06:03:43,760
so what you can see if you can see green

7044
06:03:43,760 --> 06:03:45,680
lines are machine segregation the dotted

7045
06:03:45,680 --> 06:03:47,840
red lines are our truss boundaries all

7046
06:03:47,840 --> 06:03:50,080
of those processes this is one cluster

7047
06:03:50,080 --> 06:03:52,878
one cluster with one control plane

7048
06:03:52,878 --> 06:03:54,958
and three worker nodes and this is one

7049
06:03:54,958 --> 06:03:56,400
deployment

7050
06:03:56,400 --> 06:03:58,000
and you see all of the the data is

7051
06:03:58,000 --> 06:03:59,200
flowing across all of these different

7052
06:03:59,200 --> 06:04:00,798
trust boundaries now imagine this at

7053
06:04:00,798 --> 06:04:03,680
scale imagine this with multi tenants

7054
06:04:03,680 --> 06:04:07,600
happening here it's a little bit scary

7055
06:04:08,080 --> 06:04:09,520
and our second

7056
06:04:09,520 --> 06:04:11,600
threat model

7057
06:04:11,600 --> 06:04:13,760
this one was actually a threat model

7058
06:04:13,760 --> 06:04:15,600
that was done on kubernetes by traders

7059
06:04:15,600 --> 06:04:17,520
partners in the us last year this was

7060
06:04:17,520 --> 06:04:20,080
actually commissioned by salesforce

7061
06:04:20,080 --> 06:04:22,558
and by my platform security team

7062
06:04:22,558 --> 06:04:23,600
actually

7063
06:04:23,600 --> 06:04:26,320
so shout out wade noodles tony

7064
06:04:26,320 --> 06:04:27,760
the engagement was to assist the control

7065
06:04:27,760 --> 06:04:29,440
plan for vulnerabilities specifically

7066
06:04:29,440 --> 06:04:31,680
for multi-tenancy use cases and as you

7067
06:04:31,680 --> 06:04:33,840
can see here we've got the attacker

7068
06:04:33,840 --> 06:04:35,600
container escape to a node and the

7069
06:04:35,600 --> 06:04:37,280
arrows show the different attack paths

7070
06:04:37,280 --> 06:04:39,360
that are possible from here so we can go

7071
06:04:39,360 --> 06:04:41,600
from data planes control plane via that

7072
06:04:41,600 --> 06:04:44,558
kubernetes api and also look laterally

7073
06:04:44,558 --> 06:04:46,320
through the different nodes in the data

7074
06:04:46,320 --> 06:04:48,638
plane

7075
06:04:48,958 --> 06:04:51,520
so if it wasn't already obvious

7076
06:04:51,520 --> 06:04:53,280
let's ask ourselves why what's so hard

7077
06:04:53,280 --> 06:04:54,320
about this

7078
06:04:54,320 --> 06:04:57,840
and not to take the piss too much but

7079
06:04:59,520 --> 06:05:01,840
i'm joking sort of not really i think

7080
06:05:01,840 --> 06:05:05,200
the thing that people need to realize

7081
06:05:05,200 --> 06:05:06,798
is that communities decide right this

7082
06:05:06,798 --> 06:05:09,680
 is complicated it is super fun

7083
06:05:09,680 --> 06:05:11,520
but it's complicated

7084
06:05:11,520 --> 06:05:13,200
a little a little known fact about

7085
06:05:13,200 --> 06:05:16,160
communities is

7086
06:05:16,160 --> 06:05:17,760
there's a 90 day release cycle so every

7087
06:05:17,760 --> 06:05:19,200
90 days they're releasing something so

7088
06:05:19,200 --> 06:05:20,240
if you're running this in production

7089
06:05:20,240 --> 06:05:21,040
that's something that you're gonna have

7090
06:05:21,040 --> 06:05:22,478
to keep up with

7091
06:05:22,478 --> 06:05:23,680
and the reason you need to keep up with

7092
06:05:23,680 --> 06:05:26,160
it is because bugs and security fixes

7093
06:05:26,160 --> 06:05:27,440
are only supported for the last three

7094
06:05:27,440 --> 06:05:30,000
minor versions

7095
06:05:30,000 --> 06:05:32,000
and of course everyone's seen this cncf

7096
06:05:32,000 --> 06:05:34,718
landscape right look at that it is

7097
06:05:34,718 --> 06:05:36,718
super

7098
06:05:36,718 --> 06:05:38,718
confusing there's these are cloud native

7099
06:05:38,718 --> 06:05:40,400
applications that could potentially

7100
06:05:40,400 --> 06:05:42,000
feature in your cluster

7101
06:05:42,000 --> 06:05:44,160
um so anything from like runtime

7102
06:05:44,160 --> 06:05:46,400
containers there's ci cd in there these

7103
06:05:46,400 --> 06:05:47,520
are all the things that are just one

7104
06:05:47,520 --> 06:05:49,040
supply chain link away from being in

7105
06:05:49,040 --> 06:05:50,958
your cluster so if you have to deal with

7106
06:05:50,958 --> 06:05:52,558
this mess good luck to you and your

7107
06:05:52,558 --> 06:05:54,878
family

7108
06:05:56,558 --> 06:05:58,718
so

7109
06:05:59,920 --> 06:06:01,280
i wanted to run through a few hostile

7110
06:06:01,280 --> 06:06:02,958
scenarios from some cvs that were

7111
06:06:02,958 --> 06:06:04,400
literally literally

7112
06:06:04,400 --> 06:06:06,718
released this year that affect the

7113
06:06:06,718 --> 06:06:08,958
communities directly now the main thing

7114
06:06:08,958 --> 06:06:10,080
i want to think about when we're looking

7115
06:06:10,080 --> 06:06:12,558
at these cves is what combination of

7116
06:06:12,558 --> 06:06:16,320
kubernetes components are falling over

7117
06:06:16,320 --> 06:06:18,718
in these c in these cves and also how

7118
06:06:18,718 --> 06:06:20,160
that might affect our multi-tenancy

7119
06:06:20,160 --> 06:06:22,558
models

7120
06:06:22,718 --> 06:06:24,798
so first up is crates escape

7121
06:06:24,798 --> 06:06:27,200
so this had a nvd score of 8.8 the

7122
06:06:27,200 --> 06:06:28,958
vulnerability was in the container

7123
06:06:28,958 --> 06:06:31,840
runtime and cryo vision 1.9 basically it

7124
06:06:31,840 --> 06:06:34,400
introduced

7125
06:06:34,400 --> 06:06:36,958
it introduced the ctl support in the

7126
06:06:36,958 --> 06:06:38,320
kernel so you could modify kernel

7127
06:06:38,320 --> 06:06:42,079
parameters in runtime good idea

7128
06:06:42,558 --> 06:06:44,080
and then use it to basically contain

7129
06:06:44,080 --> 06:06:46,400
escape

7130
06:06:46,400 --> 06:06:49,638
on the node

7131
06:06:49,760 --> 06:06:52,798
uh small cavity with this is that you

7132
06:06:52,798 --> 06:06:54,400
i'm sorry so if you can deploy on the

7133
06:06:54,400 --> 06:06:56,878
node you abuse this parameter and then

7134
06:06:56,878 --> 06:06:58,798
you get a container escape

7135
06:06:58,798 --> 06:07:02,400
users are advised to update to 1.23

7136
06:07:02,400 --> 06:07:04,878
immediately

7137
06:07:05,040 --> 06:07:07,120
the next one is fs context so this is a

7138
06:07:07,120 --> 06:07:10,080
buffer overflow in the kernel um

7139
06:07:10,080 --> 06:07:13,360
kernel 1.5 oh sorry 5.1 sorry so this is

7140
06:07:13,360 --> 06:07:14,798
heat based buffer overflow there's a

7141
06:07:14,798 --> 06:07:18,240
floor in the legacy pump ram function

7142
06:07:18,240 --> 06:07:20,958
so if you had a local unprivileged user

7143
06:07:20,958 --> 06:07:23,120
could deploy a privileged

7144
06:07:23,120 --> 06:07:26,080
container and then use this to basically

7145
06:07:26,080 --> 06:07:28,878
container escape using that floor in the

7146
06:07:28,878 --> 06:07:31,280
in the kernel and get root on the

7147
06:07:31,280 --> 06:07:34,079
underlying node

7148
06:07:36,240 --> 06:07:37,520
and the last one is something that i

7149
06:07:37,520 --> 06:07:39,840
think we're all familiar with

7150
06:07:39,840 --> 06:07:41,760
uh the dirty pipe vulnerability nvd

7151
06:07:41,760 --> 06:07:45,760
score 7.8 limit schedule 5.8 was

7152
06:07:45,760 --> 06:07:46,878
vulnerable

7153
06:07:46,878 --> 06:07:49,360
basically

7154
06:07:49,920 --> 06:07:52,320
an unprivileged local user could write

7155
06:07:52,320 --> 06:07:54,240
pages

7156
06:07:54,240 --> 06:07:56,080
to a buffer that was backed by read-only

7157
06:07:56,080 --> 06:07:57,600
files in a nutshell it meant that you

7158
06:07:57,600 --> 06:07:59,280
could overwrite read-only files so

7159
06:07:59,280 --> 06:08:01,440
system and root files so datadog

7160
06:08:01,440 --> 06:08:03,200
actually had a really interesting

7161
06:08:03,200 --> 06:08:04,478
write-up about this where they used an

7162
06:08:04,478 --> 06:08:06,000
unprivileged

7163
06:08:06,000 --> 06:08:07,120
container

7164
06:08:07,120 --> 06:08:09,680
and the dirty pipe

7165
06:08:09,680 --> 06:08:11,440
exploit and they overwrote the run c

7166
06:08:11,440 --> 06:08:13,360
binary an underlying node and then when

7167
06:08:13,360 --> 06:08:16,080
someone a legit user executed cube

7168
06:08:16,080 --> 06:08:18,478
cuddle exec into a container it ran the

7169
06:08:18,478 --> 06:08:20,958
underlying run c binary

7170
06:08:20,958 --> 06:08:22,958
deployed the militia's payload and they

7171
06:08:22,958 --> 06:08:24,638
added south by just like you know

7172
06:08:24,638 --> 06:08:26,798
running a legit run c command afterwards

7173
06:08:26,798 --> 06:08:28,160
so you know

7174
06:08:28,160 --> 06:08:30,080
hide what they were doing

7175
06:08:30,080 --> 06:08:31,600
final thing that i wanted to have a look

7176
06:08:31,600 --> 06:08:33,760
at

7177
06:08:34,638 --> 06:08:36,718
was hildegard so this is a write-up by

7178
06:08:36,718 --> 06:08:39,280
the unit 42 people at palo alto

7179
06:08:39,280 --> 06:08:41,040
and what they had was

7180
06:08:41,040 --> 06:08:42,320
they noticed this malware campaign

7181
06:08:42,320 --> 06:08:43,600
happening

7182
06:08:43,600 --> 06:08:45,760
and basically

7183
06:08:45,760 --> 06:08:48,400
uh they just documented uh what they

7184
06:08:48,400 --> 06:08:52,080
could see the uh this tmt team in tmt

7185
06:08:52,080 --> 06:08:54,320
doing uh to the community's cluster so

7186
06:08:54,320 --> 06:08:55,360
basically

7187
06:08:55,360 --> 06:08:57,920
the attackers exploited a cubelet

7188
06:08:57,920 --> 06:09:00,240
a misconfigured cubelet that was giving

7189
06:09:00,240 --> 06:09:02,240
anonymous access from there they were

7190
06:09:02,240 --> 06:09:03,600
able to use the cubelet to see what

7191
06:09:03,600 --> 06:09:05,360
containers that it was

7192
06:09:05,360 --> 06:09:06,798
that it was running

7193
06:09:06,798 --> 06:09:08,400
and then cubelet comes with a run

7194
06:09:08,400 --> 06:09:11,440
command api good idea and so it could

7195
06:09:11,440 --> 06:09:13,680
not only find the containers but then

7196
06:09:13,680 --> 06:09:15,760
rce remote code execute on the

7197
06:09:15,760 --> 06:09:18,000
containers so this is how it used itself

7198
06:09:18,000 --> 06:09:19,360
to propagate all the way throughout the

7199
06:09:19,360 --> 06:09:22,360
nodes

7200
06:09:24,160 --> 06:09:26,400
so

7201
06:09:26,718 --> 06:09:28,400
when we look at all this and everything

7202
06:09:28,400 --> 06:09:29,920
that's happening with cves we say to

7203
06:09:29,920 --> 06:09:31,120
ourselves well what can we do about

7204
06:09:31,120 --> 06:09:32,798
multi-tenancy

7205
06:09:32,798 --> 06:09:34,240
isolations right

7206
06:09:34,240 --> 06:09:35,840
and we're pleased to announce that

7207
06:09:35,840 --> 06:09:38,478
literally as of 23rd of june there are

7208
06:09:38,478 --> 06:09:40,558
blog posts with the three models

7209
06:09:40,558 --> 06:09:42,478
is now official kubernetes documentation

7210
06:09:42,478 --> 06:09:44,000
where they've actually expanded on their

7211
06:09:44,000 --> 06:09:46,080
idea and now we do actually have

7212
06:09:46,080 --> 06:09:47,840
recommendations for what to do with

7213
06:09:47,840 --> 06:09:50,160
security and multi-tenancy clusters and

7214
06:09:50,160 --> 06:09:51,680
the first plane of isolation is our

7215
06:09:51,680 --> 06:09:53,520
isolation plane

7216
06:09:53,520 --> 06:09:54,958
sorry our control plane and the

7217
06:09:54,958 --> 06:09:57,120
mechanisms we use to isolate these

7218
06:09:57,120 --> 06:09:58,638
are namespaces

7219
06:09:58,638 --> 06:10:00,160
access controls

7220
06:10:00,160 --> 06:10:03,320
and quotas

7221
06:10:06,240 --> 06:10:07,600
namespaces

7222
06:10:07,600 --> 06:10:08,558
basically

7223
06:10:08,558 --> 06:10:10,718
we've seen this model before uh in

7224
06:10:10,718 --> 06:10:12,478
the earlier three models we isolate

7225
06:10:12,478 --> 06:10:14,958
groups of api resources inside namespace

7226
06:10:14,958 --> 06:10:16,080
so a tenant gets the fluid to a

7227
06:10:16,080 --> 06:10:18,160
namespace this makes it easier to

7228
06:10:18,160 --> 06:10:21,040
identify them and also to apply security

7229
06:10:21,040 --> 06:10:23,360
security policies

7230
06:10:23,360 --> 06:10:25,360
the next is access controls so the most

7231
06:10:25,360 --> 06:10:27,520
important type of isolation for the

7232
06:10:27,520 --> 06:10:29,920
control plane is authorization our back

7233
06:10:29,920 --> 06:10:32,080
we all know is the most commonly used

7234
06:10:32,080 --> 06:10:34,000
this needs to be enabled on the api

7235
06:10:34,000 --> 06:10:35,040
server

7236
06:10:35,040 --> 06:10:36,478
but what we can see here is namespaces

7237
06:10:36,478 --> 06:10:38,798
using roles and role bindings in order

7238
06:10:38,798 --> 06:10:40,320
to limit who can actually operate in

7239
06:10:40,320 --> 06:10:42,400
their namespace

7240
06:10:42,400 --> 06:10:44,718
third one is quotas so quotas is

7241
06:10:44,718 --> 06:10:46,080
basically just limiting the amount of

7242
06:10:46,080 --> 06:10:48,160
api resources that each tenant can have

7243
06:10:48,160 --> 06:10:49,520
therefore they're not monopolizing the

7244
06:10:49,520 --> 06:10:51,600
control plane and they keep everything

7245
06:10:51,600 --> 06:10:53,920
like i guess namespace to their own

7246
06:10:53,920 --> 06:10:56,877
users and tenants

7247
06:10:58,478 --> 06:11:00,478
and the second plane of isolation that

7248
06:11:00,478 --> 06:11:01,440
we look at

7249
06:11:01,440 --> 06:11:03,120
from the original architecture is the

7250
06:11:03,120 --> 06:11:05,200
data plane isolation right so the

7251
06:11:05,200 --> 06:11:06,878
mechanisms that we have

7252
06:11:06,878 --> 06:11:08,558
to ensure the isolation

7253
06:11:08,558 --> 06:11:10,958
network

7254
06:11:12,840 --> 06:11:14,718
storage

7255
06:11:14,718 --> 06:11:16,320
sandbox

7256
06:11:16,320 --> 06:11:18,878
and nodes

7257
06:11:21,920 --> 06:11:24,080
first up is network

7258
06:11:24,080 --> 06:11:26,160
so by default all pods in kubernetes

7259
06:11:26,160 --> 06:11:28,400
cluster can talk to each other and

7260
06:11:28,400 --> 06:11:30,080
all network traffic is unencrypted by

7261
06:11:30,080 --> 06:11:32,000
default i see a lot of people thinking

7262
06:11:32,000 --> 06:11:34,320
cool cool cool attackers in the middle

7263
06:11:34,320 --> 06:11:36,558
yeah that's cool we can do that

7264
06:11:36,558 --> 06:11:38,400
and as you can see from the diagram pods

7265
06:11:38,400 --> 06:11:39,520
are just talking to each other willie

7266
06:11:39,520 --> 06:11:42,638
nilly and how we uh apply isolation on

7267
06:11:42,638 --> 06:11:45,040
this is with network policies so we

7268
06:11:45,040 --> 06:11:46,400
deploy a network policy inside the

7269
06:11:46,400 --> 06:11:48,000
namespace

7270
06:11:48,000 --> 06:11:50,638
and then we use labels of the pods

7271
06:11:50,638 --> 06:11:53,280
that has a pod selector label and that

7272
06:11:53,280 --> 06:11:55,920
matters to the namespace so if your pods

7273
06:11:55,920 --> 06:11:57,600
and name service labels don't match then

7274
06:11:57,600 --> 06:12:00,080
you don't get to talk between pods

7275
06:12:00,080 --> 06:12:02,558
that's a really oversimplification

7276
06:12:02,558 --> 06:12:03,920
okay

7277
06:12:03,920 --> 06:12:06,320
the next one is storage

7278
06:12:06,320 --> 06:12:08,080
so

7279
06:12:08,080 --> 06:12:10,080
storage is a bit of a tricky one uh just

7280
06:12:10,080 --> 06:12:11,840
based on the way the the components

7281
06:12:11,840 --> 06:12:13,120
behave

7282
06:12:13,120 --> 06:12:14,478
i apologize this is going to be a crash

7283
06:12:14,478 --> 06:12:16,798
course in kubernetes storage um so for

7284
06:12:16,798 --> 06:12:18,798
security and data isolation dynamic

7285
06:12:18,798 --> 06:12:20,000
volume provisioning is what's

7286
06:12:20,000 --> 06:12:21,040
recommended

7287
06:12:21,040 --> 06:12:22,638
how it works is

7288
06:12:22,638 --> 06:12:24,000
cluster admin will create these storage

7289
06:12:24,000 --> 06:12:26,400
classes that you see at the bottom

7290
06:12:26,400 --> 06:12:28,160
and that's how they like divvy up

7291
06:12:28,160 --> 06:12:30,478
between like your ssd and your different

7292
06:12:30,478 --> 06:12:32,320
classes of disks right and inside they

7293
06:12:32,320 --> 06:12:33,920
have these pvs which are persistent

7294
06:12:33,920 --> 06:12:35,520
volumes

7295
06:12:35,520 --> 06:12:38,160
pod comes along it has a pvc which is

7296
06:12:38,160 --> 06:12:40,400
persistent volume claim and it uses that

7297
06:12:40,400 --> 06:12:43,120
to ask the storage class to grab its um

7298
06:12:43,120 --> 06:12:44,798
persistent volume and then mounts this

7299
06:12:44,798 --> 06:12:46,400
to the pod this is a great way of

7300
06:12:46,400 --> 06:12:48,718
isolating per tenant workloads or per

7301
06:12:48,718 --> 06:12:51,040
tenant volumes which is what's

7302
06:12:51,040 --> 06:12:53,680
recommended the problem with this is is

7303
06:12:53,680 --> 06:12:55,440
if you do not have a per tenant storage

7304
06:12:55,440 --> 06:12:57,200
class remembering that the storage

7305
06:12:57,200 --> 06:12:59,200
classes are cluster-wide

7306
06:12:59,200 --> 06:13:01,120
then those volumes stay around long

7307
06:13:01,120 --> 06:13:02,000
after

7308
06:13:02,000 --> 06:13:03,840
those workloads have moved on so if

7309
06:13:03,840 --> 06:13:04,958
you're going to do that make sure that

7310
06:13:04,958 --> 06:13:06,478
you have policies

7311
06:13:06,478 --> 06:13:08,958
that delete the pvs after this after the

7312
06:13:08,958 --> 06:13:11,920
workloads have moved on

7313
06:13:12,798 --> 06:13:15,520
the next one

7314
06:13:15,760 --> 06:13:18,478
is sandbox so i think the component

7315
06:13:18,478 --> 06:13:19,680
we're almost familiar with is a

7316
06:13:19,680 --> 06:13:20,798
container

7317
06:13:20,798 --> 06:13:22,240
sandboxing is just a way of running

7318
06:13:22,240 --> 06:13:23,520
containers in an isolated way to

7319
06:13:23,520 --> 06:13:25,440
mitigate because basically containers

7320
06:13:25,440 --> 06:13:27,280
are

7321
06:13:27,280 --> 06:13:29,360
run on a sheet kernel and then mount the

7322
06:13:29,360 --> 06:13:30,958
underlying file systems

7323
06:13:30,958 --> 06:13:32,240
of the host

7324
06:13:32,240 --> 06:13:34,160
so as we saw with cves you know an

7325
06:13:34,160 --> 06:13:36,080
unpatched vulnerability that hits the

7326
06:13:36,080 --> 06:13:36,958
kernel

7327
06:13:36,958 --> 06:13:39,200
all of our containers are gone

7328
06:13:39,200 --> 06:13:40,958
and they have access to the host yes we

7329
06:13:40,958 --> 06:13:43,520
have controls like setcomp app armor and

7330
06:13:43,520 --> 06:13:45,440
se linux and it's all recommended to use

7331
06:13:45,440 --> 06:13:47,600
these and to strengthen the container

7332
06:13:47,600 --> 06:13:48,400
security

7333
06:13:48,400 --> 06:13:50,400
but it's hard to apply a universal set

7334
06:13:50,400 --> 06:13:51,600
of rules when we're talking about

7335
06:13:51,600 --> 06:13:53,280
multi-tenancy and communities right

7336
06:13:53,280 --> 06:13:54,718
you're trying to apply different rules

7337
06:13:54,718 --> 06:13:56,160
to all these different containers it's

7338
06:13:56,160 --> 06:13:57,200
hard to do

7339
06:13:57,200 --> 06:13:59,440
but the two main approaches that we have

7340
06:13:59,440 --> 06:14:00,798
is running containers through a user

7341
06:14:00,798 --> 06:14:05,120
space kernel a la g visor project

7342
06:14:05,120 --> 06:14:07,920
as well as running them in their own vms

7343
06:14:07,920 --> 06:14:10,958
like the carter containers

7344
06:14:12,080 --> 06:14:14,638
and last but definitely not least

7345
06:14:14,638 --> 06:14:16,400
of the mechanisms for data plane

7346
06:14:16,400 --> 06:14:18,718
isolation is the node so far we've

7347
06:14:18,718 --> 06:14:21,120
isolated the network we've isolated

7348
06:14:21,120 --> 06:14:23,520
storage we've isolated the containers

7349
06:14:23,520 --> 06:14:25,680
and now we isolate a whole node

7350
06:14:25,680 --> 06:14:27,760
the aim of the game with

7351
06:14:27,760 --> 06:14:29,360
node isolation

7352
06:14:29,360 --> 06:14:31,040
is basically we're just deploying

7353
06:14:31,040 --> 06:14:32,718
tenants workloads to their own dedicated

7354
06:14:32,718 --> 06:14:35,600
node so you label your nodes

7355
06:14:35,600 --> 06:14:37,520
and then you use a node selector field

7356
06:14:37,520 --> 06:14:39,520
in your pod spec so when they come along

7357
06:14:39,520 --> 06:14:41,040
they'll go okay i can only go on this

7358
06:14:41,040 --> 06:14:43,280
node and then they get applied to there

7359
06:14:43,280 --> 06:14:44,718
and as you can see you know we don't run

7360
06:14:44,718 --> 06:14:46,878
into the noise neighbor thing because

7361
06:14:46,878 --> 06:14:48,160
they're two completely different

7362
06:14:48,160 --> 06:14:49,600
neighborhoods

7363
06:14:49,600 --> 06:14:51,440
other things at your disposal

7364
06:14:51,440 --> 06:14:54,320
for node isolation is affinity and

7365
06:14:54,320 --> 06:14:56,798
anti-affinity basically this is just a

7366
06:14:56,798 --> 06:14:58,080
more expressive way of doing node

7367
06:14:58,080 --> 06:14:59,920
selector so more characteristics about

7368
06:14:59,920 --> 06:15:01,200
your node what you like about them what

7369
06:15:01,200 --> 06:15:02,478
you don't like about them so the pods

7370
06:15:02,478 --> 06:15:04,320
either go there they don't

7371
06:15:04,320 --> 06:15:06,320
and taints and tolerations

7372
06:15:06,320 --> 06:15:08,558
so this way again you just kind of like

7373
06:15:08,558 --> 06:15:10,958
what attracts pods to a node that you

7374
06:15:10,958 --> 06:15:13,360
declare or what repels them so you know

7375
06:15:13,360 --> 06:15:14,638
if the node is in any way it's got

7376
06:15:14,638 --> 06:15:16,558
something else running on it then

7377
06:15:16,558 --> 06:15:19,200
my tenant nodes uh workloads don't ever

7378
06:15:19,200 --> 06:15:21,440
go to there

7379
06:15:21,440 --> 06:15:23,840
um oh and the other added benefit other

7380
06:15:23,840 --> 06:15:26,798
than noisy neighbor is

7381
06:15:26,798 --> 06:15:29,200
information disclosure

7382
06:15:29,200 --> 06:15:30,878
from a breakout so if you get a

7383
06:15:30,878 --> 06:15:33,760
container breakout on node a well then

7384
06:15:33,760 --> 06:15:35,520
you've just got access to the other

7385
06:15:35,520 --> 06:15:36,638
tenants

7386
06:15:36,638 --> 06:15:40,600
just to the same tenant's workloads

7387
06:15:41,760 --> 06:15:43,200
in summary

7388
06:15:43,200 --> 06:15:46,400
if i could summarize all of that

7389
06:15:46,478 --> 06:15:48,878
it is

7390
06:15:49,120 --> 06:15:51,120
multi-sentence is thing it's here it's

7391
06:15:51,120 --> 06:15:52,160
now

7392
06:15:52,160 --> 06:15:54,160
it's a reality for most organizations

7393
06:15:54,160 --> 06:15:56,718
that do want to have cost-effective and

7394
06:15:56,718 --> 06:16:00,240
simple clusters to administer

7395
06:16:00,240 --> 06:16:01,920
and you folks are going to have to

7396
06:16:01,920 --> 06:16:04,000
secure it so you're going to need to

7397
06:16:04,000 --> 06:16:07,040
understand what this is

7398
06:16:07,520 --> 06:16:08,878
second thing we covered is hard

7399
06:16:08,878 --> 06:16:10,400
multi-tenancy is hard

7400
06:16:10,400 --> 06:16:12,400
kubernetes is complicated the ecosystem

7401
06:16:12,400 --> 06:16:14,798
that it lives in is complicated

7402
06:16:14,798 --> 06:16:16,878
and the security for it as well is also

7403
06:16:16,878 --> 06:16:19,440
complicated

7404
06:16:19,440 --> 06:16:21,040
but the main takeaway i want for

7405
06:16:21,040 --> 06:16:23,440
everybody from this talk is that layers

7406
06:16:23,440 --> 06:16:25,760
and layers and isolation and security

7407
06:16:25,760 --> 06:16:28,320
and if we understand the problem space

7408
06:16:28,320 --> 06:16:30,478
and the solution options then everybody

7409
06:16:30,478 --> 06:16:33,040
can level up when it gets particularly

7410
06:16:33,040 --> 06:16:35,280
hard

7411
06:16:35,680 --> 06:16:38,320
before i finish

7412
06:16:38,558 --> 06:16:40,878
i just wanted to

7413
06:16:40,878 --> 06:16:42,000
really say

7414
06:16:42,000 --> 06:16:44,000
a massive thank you to quaicon for

7415
06:16:44,000 --> 06:16:46,638
having me on stage and a few folks for

7416
06:16:46,638 --> 06:16:48,718
coming to my talk

7417
06:16:48,718 --> 06:16:50,000
i really want to give credit and

7418
06:16:50,000 --> 06:16:51,680
acknowledge these people whose work that

7419
06:16:51,680 --> 06:16:54,000
i did race through and study to

7420
06:16:54,000 --> 06:16:55,200
understand what i'm talking about up

7421
06:16:55,200 --> 06:16:56,240
here

7422
06:16:56,240 --> 06:16:59,120
and also my rubber duckies for

7423
06:16:59,120 --> 06:17:00,638
listening and keeping me sane while i

7424
06:17:00,638 --> 06:17:02,398
was trying to organize this mess into

7425
06:17:02,398 --> 06:17:05,760
one 30 minute talk and that's my time

7426
06:17:05,760 --> 06:17:08,397
thank you very much

7427
06:17:17,440 --> 06:17:18,798
thanks very much ron all right we're

7428
06:17:18,798 --> 06:17:21,360
gonna go out uh for afternoon break uh

7429
06:17:21,360 --> 06:17:22,638
if you haven't yet picked up your

7430
06:17:22,638 --> 06:17:24,958
merchandise uh please do so during the

7431
06:17:24,958 --> 06:17:26,160
break if you wanna get it today they'll

7432
06:17:26,160 --> 06:17:27,360
you can pick it up tomorrow as well but

7433
06:17:27,360 --> 06:17:29,520
they're gonna pack up the merch pickup

7434
06:17:29,520 --> 06:17:31,520
after the afternoon break today

7435
06:17:31,520 --> 06:17:33,360
so if you want it tonight

7436
06:17:33,360 --> 06:17:34,718
go and pick it up now otherwise we'll

7437
06:17:34,718 --> 06:17:36,958
see you back on schedule at four o'clock

7438
06:17:36,958 --> 06:17:40,520
for mr wade winright

7439
07:05:15,440 --> 07:05:17,840
welcome back everyone

7440
07:05:17,840 --> 07:05:20,080
now i have a question for you

7441
07:05:20,080 --> 07:05:23,040
how many of you went to

7442
07:05:23,040 --> 07:05:24,718
kiwi con x

7443
07:05:24,718 --> 07:05:26,638
was your hands yeah yeah yeah

7444
07:05:26,638 --> 07:05:28,080
how many of you went to kindergarten

7445
07:05:28,080 --> 07:05:29,520
three

7446
07:05:29,520 --> 07:05:30,320
yeah

7447
07:05:30,320 --> 07:05:32,558
how many went to quick on one

7448
07:05:32,558 --> 07:05:34,798
oh yeah there's a few ogs few ogs in the

7449
07:05:34,798 --> 07:05:36,878
house nice how many of you have been to

7450
07:05:36,878 --> 07:05:40,398
every single kiwi or call icon

7451
07:05:41,280 --> 07:05:42,558
respect

7452
07:05:42,558 --> 07:05:45,360
uh our next speaker

7453
07:05:45,360 --> 07:05:47,200
showed up to kiwicon one

7454
07:05:47,200 --> 07:05:49,200
flew in from the united states he was

7455
07:05:49,200 --> 07:05:51,840
our furthest traveling visitor uh to the

7456
07:05:51,840 --> 07:05:53,760
con back when you know those of you who

7457
07:05:53,760 --> 07:05:55,200
came to keep on one will remember it was

7458
07:05:55,200 --> 07:05:57,920
not a very big or sophisticated event

7459
07:05:57,920 --> 07:05:59,680
uh and if anything like the trajectory

7460
07:05:59,680 --> 07:06:01,840
of kiwi cons and now kawaiicon over time

7461
07:06:01,840 --> 07:06:04,320
really is an insight into how some of us

7462
07:06:04,320 --> 07:06:05,040
me

7463
07:06:05,040 --> 07:06:06,240
have grown up a little bit over the

7464
07:06:06,240 --> 07:06:08,320
years and made things a little bit less

7465
07:06:08,320 --> 07:06:10,080
dumb than they were in the early kiwi

7466
07:06:10,080 --> 07:06:12,398
class anyway so our next our speaker

7467
07:06:12,398 --> 07:06:13,840
showed up

7468
07:06:13,840 --> 07:06:15,120
was thinking about moving to new zealand

7469
07:06:15,120 --> 07:06:16,718
wanted to come and meet the community

7470
07:06:16,718 --> 07:06:18,718
came across to quebec on one i'm not

7471
07:06:18,718 --> 07:06:21,760
sure what uh opinion he took from that

7472
07:06:21,760 --> 07:06:22,478
uh

7473
07:06:22,478 --> 07:06:25,440
and then he never came back

7474
07:06:25,440 --> 07:06:27,600
until kirikon 10

7475
07:06:27,600 --> 07:06:29,440
can you imagine

7476
07:06:29,440 --> 07:06:31,280
walking into this theater

7477
07:06:31,280 --> 07:06:33,520
and chemical 10 i think you know for for

7478
07:06:33,520 --> 07:06:35,040
me and the rest of the crew was probably

7479
07:06:35,040 --> 07:06:36,878
like the pinnacle of the shark jumping

7480
07:06:36,878 --> 07:06:39,200
process like we were right at the apex

7481
07:06:39,200 --> 07:06:40,798
of the shark jump there with the throat

7482
07:06:40,798 --> 07:06:43,600
singing and the magic choir and the

7483
07:06:43,600 --> 07:06:45,600
you know and like we had the we bought

7484
07:06:45,600 --> 07:06:49,040
the the like pyrotechnic flame units

7485
07:06:49,040 --> 07:06:50,798
that you could put like juice in to make

7486
07:06:50,798 --> 07:06:52,160
them different colors so we had like

7487
07:06:52,160 --> 07:06:54,000
blue x flames coming i don't remember

7488
07:06:54,000 --> 07:06:55,520
like out of the front of the stage there

7489
07:06:55,520 --> 07:06:57,200
now we have slightly more sensible pyro

7490
07:06:57,200 --> 07:06:59,760
can i get a little little sparkle action

7491
07:06:59,760 --> 07:07:01,440
little sparkles some sparkles i haven't

7492
07:07:01,440 --> 07:07:02,878
had any sparkles yet nope

7493
07:07:02,878 --> 07:07:05,440
there we go

7494
07:07:05,460 --> 07:07:08,958
[Applause]

7495
07:07:08,958 --> 07:07:11,840
and these are much safer

7496
07:07:11,840 --> 07:07:13,920
uh you may remember from we actually set

7497
07:07:13,920 --> 07:07:16,240
fire to the stage during the like break

7498
07:07:16,240 --> 07:07:18,240
because we were reducing the

7499
07:07:18,240 --> 07:07:19,760
multi-colored flame boxes that we bought

7500
07:07:19,760 --> 07:07:21,680
anyway point of the story is our next

7501
07:07:21,680 --> 07:07:23,920
speaker showed up qriket one went away

7502
07:07:23,920 --> 07:07:26,798
came back for keyword content and now

7503
07:07:26,798 --> 07:07:29,840
is returning once again for kawaiicon

7504
07:07:29,840 --> 07:07:31,600
and it's my very great pleasure to

7505
07:07:31,600 --> 07:07:32,878
welcome the stage

7506
07:07:32,878 --> 07:07:34,840
mr wade winright

7507
07:07:34,840 --> 07:07:44,819
[Applause]

7508
07:08:07,200 --> 07:08:09,280
last time i was on the stage i was

7509
07:08:09,280 --> 07:08:10,478
actually

7510
07:08:10,478 --> 07:08:13,360
very appreciative to the con the crew

7511
07:08:13,360 --> 07:08:16,398
the country for allowing me to move here

7512
07:08:16,398 --> 07:08:19,840
and as of about 72 hours ago i can say

7513
07:08:19,840 --> 07:08:22,160
residents the level achieved so i'm

7514
07:08:22,160 --> 07:08:24,620
super happy about that

7515
07:08:24,620 --> 07:08:27,809
[Music]

7516
07:08:29,200 --> 07:08:31,600
so i want to talk today about bugs and

7517
07:08:31,600 --> 07:08:34,000
features and what's what and which one

7518
07:08:34,000 --> 07:08:36,958
is which and how it all works together

7519
07:08:36,958 --> 07:08:38,240
but first i want to start with talking

7520
07:08:38,240 --> 07:08:40,240
about ecosystems so

7521
07:08:40,240 --> 07:08:41,680
we like to throw that word around a lot

7522
07:08:41,680 --> 07:08:46,000
with software ecosystems bug ecosystems

7523
07:08:46,000 --> 07:08:47,440
several times today supply chain

7524
07:08:47,440 --> 07:08:48,638
ecosystems

7525
07:08:48,638 --> 07:08:50,080
what we're going to drill into today

7526
07:08:50,080 --> 07:08:53,520
though is uh the bug or feature and and

7527
07:08:53,520 --> 07:08:55,680
how the inner relationships act between

7528
07:08:55,680 --> 07:08:56,958
those two so

7529
07:08:56,958 --> 07:08:59,280
from a biological perspective a

7530
07:08:59,280 --> 07:09:00,798
ecosystem is a complex of living

7531
07:09:00,798 --> 07:09:02,878
organisms the environment which they

7532
07:09:02,878 --> 07:09:04,878
exist and those interrelationships and

7533
07:09:04,878 --> 07:09:07,040
so we'll talk about bugs slash features

7534
07:09:07,040 --> 07:09:10,398
and those interrelationships

7535
07:09:10,878 --> 07:09:13,200
um let's start with a few definitions so

7536
07:09:13,200 --> 07:09:14,958
a bug according to the cambridge

7537
07:09:14,958 --> 07:09:16,798
dictionary because everybody uses oxford

7538
07:09:16,798 --> 07:09:18,958
and i want to be different

7539
07:09:18,958 --> 07:09:20,638
a bug is a mistake or a problem in a

7540
07:09:20,638 --> 07:09:24,558
computer program pretty straightforward

7541
07:09:24,558 --> 07:09:26,798
according to a much more reputable uh

7542
07:09:26,798 --> 07:09:29,680
book the urban dictionary a bug is

7543
07:09:29,680 --> 07:09:32,558
actually a

7544
07:09:33,200 --> 07:09:35,040
a piece of a software that there

7545
07:09:35,040 --> 07:09:36,398
actually is no such thing in computing

7546
07:09:36,398 --> 07:09:38,000
or software as a bug it's actually a

7547
07:09:38,000 --> 07:09:40,240
feature an undocumented feature that's

7548
07:09:40,240 --> 07:09:43,680
the the way they they phrase that so um

7549
07:09:43,680 --> 07:09:45,360
the lines are blurred right

7550
07:09:45,360 --> 07:09:47,680
so feature according to cambridge as

7551
07:09:47,680 --> 07:09:48,398
well

7552
07:09:48,398 --> 07:09:49,600
is a noticeable or important

7553
07:09:49,600 --> 07:09:52,240
characteristic or part

7554
07:09:52,240 --> 07:09:54,878
of something uh i would also say that

7555
07:09:54,878 --> 07:09:56,958
bugs fall into that mode too right uh

7556
07:09:56,958 --> 07:09:59,280
something breaks it's pretty noticeable

7557
07:09:59,280 --> 07:10:00,840
it's pretty important

7558
07:10:00,840 --> 07:10:03,440
usually and just for fun from urban

7559
07:10:03,440 --> 07:10:04,878
dictionary there's a definition of

7560
07:10:04,878 --> 07:10:07,200
something called feature effect

7561
07:10:07,200 --> 07:10:08,638
when a computer application or hardware

7562
07:10:08,638 --> 07:10:10,240
design feature has unintended or

7563
07:10:10,240 --> 07:10:12,638
sometimes embarrassing consequences like

7564
07:10:12,638 --> 07:10:14,878
when autocorrect changes incidentally

7565
07:10:14,878 --> 07:10:16,798
into indecently and then the entire

7566
07:10:16,798 --> 07:10:19,760
context is lost

7567
07:10:20,958 --> 07:10:24,240
uh so bug versus feature um it's it's

7568
07:10:24,240 --> 07:10:26,878
really a matter of perspective right

7569
07:10:26,878 --> 07:10:28,160
so we're going to explore this a bit

7570
07:10:28,160 --> 07:10:30,000
more deeply so what i would like and

7571
07:10:30,000 --> 07:10:31,840
this is the crowd participation talk

7572
07:10:31,840 --> 07:10:33,200
sorry

7573
07:10:33,200 --> 07:10:36,160
is that i'm going to introduce a concept

7574
07:10:36,160 --> 07:10:38,638
and i will then ask the crowd which you

7575
07:10:38,638 --> 07:10:41,680
think it is a bug or a feature there is

7576
07:10:41,680 --> 07:10:44,160
no right answer this is not an empirical

7577
07:10:44,160 --> 07:10:45,200
study

7578
07:10:45,200 --> 07:10:47,840
but we will see what you what you think

7579
07:10:47,840 --> 07:10:50,478
best way to do that probably to reduce

7580
07:10:50,478 --> 07:10:51,680
any

7581
07:10:51,680 --> 07:10:54,080
blow of transmission here

7582
07:10:54,080 --> 07:10:55,840
either raise hands

7583
07:10:55,840 --> 07:10:58,638
and or stomp on the floor whatever works

7584
07:10:58,638 --> 07:11:01,440
for you there um and that that will be

7585
07:11:01,440 --> 07:11:03,200
how we will gauge these things so the

7586
07:11:03,200 --> 07:11:04,080
first thing we're going to start with

7587
07:11:04,080 --> 07:11:06,160
though is a couple of very non-computer

7588
07:11:06,160 --> 07:11:07,680
or technology

7589
07:11:07,680 --> 07:11:12,280
semi-technology related topics

7590
07:11:12,320 --> 07:11:14,920
so we'll start with aluminum aluminium

7591
07:11:14,920 --> 07:11:18,240
aluminium foil um

7592
07:11:18,240 --> 07:11:19,680
so

7593
07:11:19,680 --> 07:11:21,600
aluminum foil has a shiny side it has a

7594
07:11:21,600 --> 07:11:23,760
dull side

7595
07:11:23,760 --> 07:11:25,680
do you all think that that was by design

7596
07:11:25,680 --> 07:11:27,840
as a feature or was a bug so everybody

7597
07:11:27,840 --> 07:11:30,718
who thinks it's a bug

7598
07:11:32,478 --> 07:11:35,280
okay and a feature

7599
07:11:35,280 --> 07:11:37,520
oh nice nice

7600
07:11:37,520 --> 07:11:39,840
so years of lore and mysticism surround

7601
07:11:39,840 --> 07:11:41,920
the aluminum shiny versus dull side

7602
07:11:41,920 --> 07:11:43,600
aluminium minimum sorry

7603
07:11:43,600 --> 07:11:45,760
which side is best for cooking a turkey

7604
07:11:45,760 --> 07:11:48,398
which side's best for wrapping a burrito

7605
07:11:48,398 --> 07:11:49,920
which side keeps the spooky government

7606
07:11:49,920 --> 07:11:51,360
out of my skull when fashioned into a

7607
07:11:51,360 --> 07:11:52,320
hat

7608
07:11:52,320 --> 07:11:53,920
if i wrap my phone in it will it

7609
07:11:53,920 --> 07:11:55,520
actually work like a faraday cage if my

7610
07:11:55,520 --> 07:11:57,120
emp that i'm building accidentally goes

7611
07:11:57,120 --> 07:11:58,000
off

7612
07:11:58,000 --> 07:11:59,600
did et really

7613
07:11:59,600 --> 07:12:01,680
phone home using that umbrella aligned

7614
07:12:01,680 --> 07:12:03,440
with this stuff

7615
07:12:03,440 --> 07:12:05,760
sometimes the truth is actually stranger

7616
07:12:05,760 --> 07:12:07,360
than fiction

7617
07:12:07,360 --> 07:12:10,000
this is not one of those times

7618
07:12:10,000 --> 07:12:12,240
in actuality it's simply a result of

7619
07:12:12,240 --> 07:12:14,558
manufacturing so the way that aluminum

7620
07:12:14,558 --> 07:12:18,000
foils aluminum foil is manufactured

7621
07:12:18,000 --> 07:12:20,320
is that they heat it and in order to

7622
07:12:20,320 --> 07:12:22,000
heat it and stretch it they have to

7623
07:12:22,000 --> 07:12:24,320
double up the layers so when they double

7624
07:12:24,320 --> 07:12:25,520
up the layers

7625
07:12:25,520 --> 07:12:27,440
two layers are obviously touching at one

7626
07:12:27,440 --> 07:12:29,200
point and that's on one side which

7627
07:12:29,200 --> 07:12:32,240
scrapes each side against each other

7628
07:12:32,240 --> 07:12:34,080
and so basically it just barely scrapes

7629
07:12:34,080 --> 07:12:35,440
by kind of like me in high school

7630
07:12:35,440 --> 07:12:37,040
athletics

7631
07:12:37,040 --> 07:12:39,440
and the other side is shiny and

7632
07:12:39,440 --> 07:12:40,798
untouched kind of like my high school

7633
07:12:40,798 --> 07:12:43,680
dating life so

7634
07:12:44,160 --> 07:12:45,280
um

7635
07:12:45,280 --> 07:12:46,878
side note does anybody familiar this is

7636
07:12:46,878 --> 07:12:49,840
they found this on creative commons um a

7637
07:12:49,840 --> 07:12:51,440
booster bag how many people are familiar

7638
07:12:51,440 --> 07:12:54,638
with what a booster bag actually is

7639
07:12:54,638 --> 07:12:57,760
no loss prevention people in the room

7640
07:12:57,760 --> 07:13:00,798
okay this is news to me too honestly so

7641
07:13:00,798 --> 07:13:02,478
a booster bag is apparently a bag that

7642
07:13:02,478 --> 07:13:04,240
you make out of aluminum foil that you

7643
07:13:04,240 --> 07:13:05,680
throw a

7644
07:13:05,680 --> 07:13:07,440
electronically protected thing in if

7645
07:13:07,440 --> 07:13:09,440
you're shoplifting and then you fold it

7646
07:13:09,440 --> 07:13:11,840
over and can slide it out past the

7647
07:13:11,840 --> 07:13:14,240
detectors totally had no idea about that

7648
07:13:14,240 --> 07:13:14,958
but

7649
07:13:14,958 --> 07:13:16,398
now you're all criminals

7650
07:13:16,398 --> 07:13:18,558
oh by the way uh i'm resident but no

7651
07:13:18,558 --> 07:13:21,760
take backs so

7652
07:13:22,958 --> 07:13:24,878
so yes the bottom line the performance

7653
07:13:24,878 --> 07:13:26,878
of the foil is the same whichever side

7654
07:13:26,878 --> 07:13:30,398
you use including in a hat

7655
07:13:30,398 --> 07:13:34,558
the next one masks

7656
07:13:34,958 --> 07:13:36,798
having to wear a mask

7657
07:13:36,798 --> 07:13:39,120
bug

7658
07:13:39,920 --> 07:13:42,160
feature

7659
07:13:42,160 --> 07:13:43,600
feature yes everybody agrees it's a

7660
07:13:43,600 --> 07:13:44,558
feature

7661
07:13:44,558 --> 07:13:46,160
no one's no one's even voting this is

7662
07:13:46,160 --> 07:13:48,000
great

7663
07:13:48,000 --> 07:13:49,600
well this is really a touchy one for a

7664
07:13:49,600 --> 07:13:50,798
lot of people but it really comes down

7665
07:13:50,798 --> 07:13:52,000
to um

7666
07:13:52,000 --> 07:13:54,798
understanding the science uh and uh the

7667
07:13:54,798 --> 07:13:57,040
opposite side of the fence which is uh

7668
07:13:57,040 --> 07:13:58,878
infringing upon inalienable rights that

7669
07:13:58,878 --> 07:13:59,840
are more important than the health and

7670
07:13:59,840 --> 07:14:01,760
safety of others or maybe we're all

7671
07:14:01,760 --> 07:14:03,440
living in the most terrible three season

7672
07:14:03,440 --> 07:14:05,600
and counting reboot in history x-files

7673
07:14:05,600 --> 07:14:08,000
2020. so

7674
07:14:08,000 --> 07:14:09,360
so i actually want to talk about this

7675
07:14:09,360 --> 07:14:11,200
though

7676
07:14:11,200 --> 07:14:12,398
masks

7677
07:14:12,398 --> 07:14:14,718
some would say that there's a bug so we

7678
07:14:14,718 --> 07:14:16,718
have basically evolved to use facial

7679
07:14:16,718 --> 07:14:19,120
expressions for communication over

7680
07:14:19,120 --> 07:14:21,440
obviously a very long period of time

7681
07:14:21,440 --> 07:14:23,360
but we also know that they're not 100

7682
07:14:23,360 --> 07:14:25,520
necessary to survival just ask anyone in

7683
07:14:25,520 --> 07:14:27,920
japan where this is the norm

7684
07:14:27,920 --> 07:14:30,160
and or anybody who might be sight

7685
07:14:30,160 --> 07:14:32,240
impaired this is not not exactly

7686
07:14:32,240 --> 07:14:35,760
something that you have to have to live

7687
07:14:35,760 --> 07:14:38,080
feature it protects yourself and others

7688
07:14:38,080 --> 07:14:40,798
from dust particles or other particles

7689
07:14:40,798 --> 07:14:42,878
that submicron

7690
07:14:42,878 --> 07:14:45,200
infection vectors attach to to actually

7691
07:14:45,200 --> 07:14:47,200
get into your system

7692
07:14:47,200 --> 07:14:49,360
nice feature

7693
07:14:49,360 --> 07:14:51,440
bug there are folks with underlying

7694
07:14:51,440 --> 07:14:53,440
respiratory issues and there are even

7695
07:14:53,440 --> 07:14:56,558
some i believe here in the crowd today

7696
07:14:56,558 --> 07:14:59,280
this is absolutely 100 a bug for those

7697
07:14:59,280 --> 07:15:00,240
people

7698
07:15:00,240 --> 07:15:02,000
but

7699
07:15:02,000 --> 07:15:03,440
they are a small portion of the

7700
07:15:03,440 --> 07:15:05,520
population so everybody who keeps trying

7701
07:15:05,520 --> 07:15:08,840
to use this is an excuse please

7702
07:15:08,840 --> 07:15:11,520
stop feature it's cheaper than a

7703
07:15:11,520 --> 07:15:14,000
lockdown again taking japan into account

7704
07:15:14,000 --> 07:15:15,120
here obviously there are a lot of

7705
07:15:15,120 --> 07:15:17,600
factors involved but having the most of

7706
07:15:17,600 --> 07:15:19,360
the population masked all the time

7707
07:15:19,360 --> 07:15:21,120
prevented them from ever having a full

7708
07:15:21,120 --> 07:15:23,360
lockdown

7709
07:15:23,360 --> 07:15:25,760
um and then finally

7710
07:15:25,760 --> 07:15:28,318
uh it defeats facial recognition so i

7711
07:15:28,318 --> 07:15:30,558
call that a feature right so uh any

7712
07:15:30,558 --> 07:15:32,958
privacy security hacker nerd out there

7713
07:15:32,958 --> 07:15:34,638
should be out in the streets demanding

7714
07:15:34,638 --> 07:15:37,840
free n95 p2

7715
07:15:37,840 --> 07:15:38,718
fs

7716
07:15:38,718 --> 07:15:40,280
sorry astm

7717
07:15:40,280 --> 07:15:42,318
f3502-21 level 2

7718
07:15:42,318 --> 07:15:45,200
masks for the entirety of the populace

7719
07:15:45,200 --> 07:15:47,040
just so we can get past the

7720
07:15:47,040 --> 07:15:50,558
feature facial recognition

7721
07:15:51,760 --> 07:15:54,318
okay now how many minecraft fans are

7722
07:15:54,318 --> 07:15:56,160
there here

7723
07:15:56,160 --> 07:15:58,398
there's a few that would admit it that's

7724
07:15:58,398 --> 07:16:00,240
cool me too

7725
07:16:00,240 --> 07:16:02,718
um the creepers in minecraft if you're

7726
07:16:02,718 --> 07:16:04,240
familiar with minecraft then you know

7727
07:16:04,240 --> 07:16:05,520
what a creeper is if you're not familiar

7728
07:16:05,520 --> 07:16:07,200
with minecraft there is a this is a

7729
07:16:07,200 --> 07:16:08,558
creeper face

7730
07:16:08,558 --> 07:16:11,360
there is a npc in the game that is a

7731
07:16:11,360 --> 07:16:13,520
creeper and it's really weird looking

7732
07:16:13,520 --> 07:16:15,280
it's green it has four stubby little

7733
07:16:15,280 --> 07:16:17,200
legs and it chases you around and if it

7734
07:16:17,200 --> 07:16:19,840
gets close enough it explodes so

7735
07:16:19,840 --> 07:16:21,520
so that's what a creeper is for those

7736
07:16:21,520 --> 07:16:22,798
who don't know

7737
07:16:22,798 --> 07:16:27,600
so the creepers were they a bug

7738
07:16:28,160 --> 07:16:30,878
okay or a feature of the game

7739
07:16:30,878 --> 07:16:32,878
awesome awesome

7740
07:16:32,878 --> 07:16:36,080
still a lot of undecided folks cool cool

7741
07:16:36,080 --> 07:16:37,680
i think they're catching on that's good

7742
07:16:37,680 --> 07:16:39,920
that's good so uh notch who's the

7743
07:16:39,920 --> 07:16:41,120
creator of minecraft has actually

7744
07:16:41,120 --> 07:16:42,638
explained the fact that this was a bug

7745
07:16:42,638 --> 07:16:44,240
he was trying to create a pig

7746
07:16:44,240 --> 07:16:47,200
uh and actually for lack of better terms

7747
07:16:47,200 --> 07:16:49,680
he got the axes wrong and made it tall

7748
07:16:49,680 --> 07:16:51,840
with four little stubby legs and they

7749
07:16:51,840 --> 07:16:53,040
were like wow that's weird enough we

7750
07:16:53,040 --> 07:16:55,120
should keep it in the game so

7751
07:16:55,120 --> 07:16:56,478
that's basically what happened it's been

7752
07:16:56,478 --> 07:16:58,160
in the it went into the alpha version

7753
07:16:58,160 --> 07:16:58,958
and

7754
07:16:58,958 --> 07:17:01,360
is still there tormenting players almost

7755
07:17:01,360 --> 07:17:04,240
13 years later

7756
07:17:06,318 --> 07:17:07,280
okay

7757
07:17:07,280 --> 07:17:10,160
who here remembers solaris

7758
07:17:10,160 --> 07:17:11,440
who here remembers solaris actually

7759
07:17:11,440 --> 07:17:13,280
running on sun hardware

7760
07:17:13,280 --> 07:17:16,160
awesome awesome very cool okay so in

7761
07:17:16,160 --> 07:17:18,318
solaris there was an admin suite the

7762
07:17:18,318 --> 07:17:20,080
solstice admin suite was a set of tools

7763
07:17:20,080 --> 07:17:22,318
it was packaged by sun microsystems um

7764
07:17:22,318 --> 07:17:24,398
it came by default and solaris operating

7765
07:17:24,398 --> 07:17:26,000
system basically it was there to help

7766
07:17:26,000 --> 07:17:28,160
administrators manage systems remotely

7767
07:17:28,160 --> 07:17:30,160
centralize a configuration monitor the

7768
07:17:30,160 --> 07:17:31,600
software usage

7769
07:17:31,600 --> 07:17:33,200
the daemon is actually used in the

7770
07:17:33,200 --> 07:17:35,520
solstice app application or sos admin

7771
07:17:35,520 --> 07:17:37,040
suite application to perform those

7772
07:17:37,040 --> 07:17:39,120
distributed systems and administration

7773
07:17:39,120 --> 07:17:40,160
operations

7774
07:17:40,160 --> 07:17:41,760
the daemon is typically installed and

7775
07:17:41,760 --> 07:17:44,638
enabled in a default slurs installation

7776
07:17:44,638 --> 07:17:46,398
so that's a lot of heavy lifting that it

7777
07:17:46,398 --> 07:17:50,240
does bug or feature bug

7778
07:17:50,240 --> 07:17:52,718
okay phew okay feature

7779
07:17:52,718 --> 07:17:54,798
yep yep absolutely it's definitely a

7780
07:17:54,798 --> 07:17:56,798
feature

7781
07:17:56,798 --> 07:17:59,440
that feature had a bug

7782
07:17:59,440 --> 07:18:00,318
so

7783
07:18:00,318 --> 07:18:02,798
uh s admin d defaults to weak

7784
07:18:02,798 --> 07:18:04,080
authentication

7785
07:18:04,080 --> 07:18:05,600
uh all you need is a sequence of

7786
07:18:05,600 --> 07:18:07,440
specially crafted rpc requests sent to

7787
07:18:07,440 --> 07:18:09,680
it uh you can then at that point forge

7788
07:18:09,680 --> 07:18:12,318
the client identity root if you want and

7789
07:18:12,318 --> 07:18:14,718
then you can execute uh arbitrary

7790
07:18:14,718 --> 07:18:16,798
commands so

7791
07:18:16,798 --> 07:18:18,718
so definitely a bug in the future as it

7792
07:18:18,718 --> 07:18:20,080
were okay

7793
07:18:20,080 --> 07:18:22,558
let me introduce this situation a long

7794
07:18:22,558 --> 07:18:24,958
time ago several lives ago i worked for

7795
07:18:24,958 --> 07:18:26,878
a company that deployed cable set-top

7796
07:18:26,878 --> 07:18:30,398
boxes out to multiple regions in the us

7797
07:18:30,398 --> 07:18:31,840
there was a major service outage that

7798
07:18:31,840 --> 07:18:33,680
actually happened in the midwest and it

7799
07:18:33,680 --> 07:18:35,600
took down most of the cable television

7800
07:18:35,600 --> 07:18:37,760
for the entirety of that section of the

7801
07:18:37,760 --> 07:18:39,120
united states

7802
07:18:39,120 --> 07:18:42,240
the on-call and on-prem engineer who we

7803
07:18:42,240 --> 07:18:43,760
needed to actually show up with the

7804
07:18:43,760 --> 07:18:45,360
partner company show up and actually

7805
07:18:45,360 --> 07:18:47,360
restart the service on the system was

7806
07:18:47,360 --> 07:18:50,000
unreachable for quite a while

7807
07:18:50,000 --> 07:18:51,760
and we just needed him to simply restart

7808
07:18:51,760 --> 07:18:53,520
that service so we didn't have the root

7809
07:18:53,520 --> 07:18:55,280
account on the server but we did have

7810
07:18:55,280 --> 07:18:58,478
access to the server so

7811
07:19:02,878 --> 07:19:05,440
so of course like i said week off rpc

7812
07:19:05,440 --> 07:19:08,958
packets or sorry rfcc calls um

7813
07:19:08,958 --> 07:19:09,920
root

7814
07:19:09,920 --> 07:19:12,000
arbitrary rc restart the service

7815
07:19:12,000 --> 07:19:15,440
everyone wins back out slowly

7816
07:19:15,440 --> 07:19:17,760
worked like a charm

7817
07:19:17,760 --> 07:19:19,840
okay here's another one a game admin

7818
07:19:19,840 --> 07:19:21,840
panel so this is actually a gaming panel

7819
07:19:21,840 --> 07:19:23,520
a panel from another one of my previous

7820
07:19:23,520 --> 07:19:25,280
lives when i worked for one of the

7821
07:19:25,280 --> 07:19:27,200
gaming companies that i've worked for

7822
07:19:27,200 --> 07:19:29,360
so here's the the deets on it so this

7823
07:19:29,360 --> 07:19:31,200
one allows the ability to adjust user

7824
07:19:31,200 --> 07:19:32,878
game in-game currency

7825
07:19:32,878 --> 07:19:34,798
block users that are griefing others and

7826
07:19:34,798 --> 07:19:37,280
there are lots transfer in-game currency

7827
07:19:37,280 --> 07:19:38,958
to another user when that's actually

7828
07:19:38,958 --> 07:19:41,760
needed add an in-game asset to any user

7829
07:19:41,760 --> 07:19:43,920
that that that needs it or has lost it

7830
07:19:43,920 --> 07:19:46,240
or any kind of a problem like that

7831
07:19:46,240 --> 07:19:50,398
or delete and restore accounts bug

7832
07:19:50,398 --> 07:19:52,718
okay feature

7833
07:19:52,718 --> 07:19:55,840
okay cool cool

7834
07:19:55,840 --> 07:19:58,318
okay here's this real story all of those

7835
07:19:58,318 --> 07:20:00,080
features were sql injection

7836
07:20:00,080 --> 07:20:01,520
vulnerabilities

7837
07:20:01,520 --> 07:20:03,680
all of them

7838
07:20:03,680 --> 07:20:04,958
so

7839
07:20:04,958 --> 07:20:05,760
uh

7840
07:20:05,760 --> 07:20:08,240
what these elite set of users actually

7841
07:20:08,240 --> 07:20:09,840
wound up doing in order to manipulate

7842
07:20:09,840 --> 07:20:11,040
the game is they actually built their

7843
07:20:11,040 --> 07:20:14,000
own swift object that was an admin panel

7844
07:20:14,000 --> 07:20:16,160
and seven or eight of them had this

7845
07:20:16,160 --> 07:20:17,760
swift object and could use it to

7846
07:20:17,760 --> 07:20:19,360
basically do whatever the hell they

7847
07:20:19,360 --> 07:20:22,000
wanted on on on the actual game

7848
07:20:22,000 --> 07:20:23,600
when we actually did the full review the

7849
07:20:23,600 --> 07:20:25,120
application now that we knew that there

7850
07:20:25,120 --> 07:20:27,040
was a larger problem it was a legacy

7851
07:20:27,040 --> 07:20:28,160
title

7852
07:20:28,160 --> 07:20:30,478
in total we actually found 21 sql

7853
07:20:30,478 --> 07:20:31,600
injection

7854
07:20:31,600 --> 07:20:33,280
sprawled across the thing they hadn't

7855
07:20:33,280 --> 07:20:35,120
even found them all they didn't need to

7856
07:20:35,120 --> 07:20:36,958
so

7857
07:20:36,958 --> 07:20:38,798
um let's go ahead and talk about

7858
07:20:38,798 --> 07:20:40,240
something that probably has just been

7859
07:20:40,240 --> 07:20:42,798
discussed ad nauseam here

7860
07:20:42,798 --> 07:20:43,920
log for j

7861
07:20:43,920 --> 07:20:46,920
bug

7862
07:20:47,360 --> 07:20:49,840
feature

7863
07:20:50,638 --> 07:20:52,000
okay so

7864
07:20:52,000 --> 07:20:53,680
is everybody here actually familiar with

7865
07:20:53,680 --> 07:20:56,080
what log4j actually was and what the

7866
07:20:56,080 --> 07:20:59,200
actual issue was with that with that

7867
07:20:59,200 --> 07:21:02,160
thing if if you are raise your hand

7868
07:21:02,160 --> 07:21:03,600
okay that's a lot of hands that's i'm

7869
07:21:03,600 --> 07:21:04,718
really sorry

7870
07:21:04,718 --> 07:21:06,878
i apologize um

7871
07:21:06,878 --> 07:21:08,798
um so for those of you who are not i'm

7872
07:21:08,798 --> 07:21:09,760
just going to run through it really

7873
07:21:09,760 --> 07:21:11,040
quickly uh

7874
07:21:11,040 --> 07:21:14,798
so of note 60 plus percent of all java

7875
07:21:14,798 --> 07:21:16,160
applications

7876
07:21:16,160 --> 07:21:17,600
in use

7877
07:21:17,600 --> 07:21:19,680
were using log4j even if it was

7878
07:21:19,680 --> 07:21:21,600
indirectly

7879
07:21:21,600 --> 07:21:23,360
so long4j was great it logged

7880
07:21:23,360 --> 07:21:25,440
expressions basically on the backend so

7881
07:21:25,440 --> 07:21:27,520
that you would have these logs

7882
07:21:27,520 --> 07:21:30,318
in perpetuity along comes jindy or the

7883
07:21:30,318 --> 07:21:32,718
java naming and directory interface

7884
07:21:32,718 --> 07:21:34,558
which basically allowed remote storage

7885
07:21:34,558 --> 07:21:36,478
and serializing or streaming of the log

7886
07:21:36,478 --> 07:21:38,160
events this is back before rest was

7887
07:21:38,160 --> 07:21:40,160
actually a thing

7888
07:21:40,160 --> 07:21:42,240
seems super helpful and totally legit

7889
07:21:42,240 --> 07:21:45,360
right and around about 2013

7890
07:21:45,360 --> 07:21:47,520
someone introduced a feature that

7891
07:21:47,520 --> 07:21:49,280
allowed gendy lookups from the logging

7892
07:21:49,280 --> 07:21:51,760
messages and this allowed for instance

7893
07:21:51,760 --> 07:21:53,840
prefixing log messages

7894
07:21:53,840 --> 07:21:55,520
including doing remote lookups of

7895
07:21:55,520 --> 07:21:58,398
certain types of strings like ldap or

7896
07:21:58,398 --> 07:22:00,398
environment variables

7897
07:22:00,398 --> 07:22:02,080
that also seems super helpful and

7898
07:22:02,080 --> 07:22:04,000
totally legit

7899
07:22:04,000 --> 07:22:05,680
so i think we already know where we're

7900
07:22:05,680 --> 07:22:08,080
going with this one

7901
07:22:08,080 --> 07:22:10,878
um so yeah and this is a this is a great

7902
07:22:10,878 --> 07:22:12,638
illustration of how someone might

7903
07:22:12,638 --> 07:22:15,120
retrieve aws access keys

7904
07:22:15,120 --> 07:22:16,958
um so of course now you can look up

7905
07:22:16,958 --> 07:22:19,040
helpful stuff and add those to your logs

7906
07:22:19,040 --> 07:22:21,600
and your jvm like an attacker control

7907
07:22:21,600 --> 07:22:22,638
system

7908
07:22:22,638 --> 07:22:24,718
with an attacker controlled java object

7909
07:22:24,718 --> 07:22:27,760
that then runs in the target jvm uh like

7910
07:22:27,760 --> 07:22:30,000
a reverse shell uh

7911
07:22:30,000 --> 07:22:30,798
so

7912
07:22:30,798 --> 07:22:33,280
so that's cool uh so how was this uh one

7913
07:22:33,280 --> 07:22:34,718
of the first places this was actually

7914
07:22:34,718 --> 07:22:36,000
discovered

7915
07:22:36,000 --> 07:22:37,360
i'm not sure if everybody knows this or

7916
07:22:37,360 --> 07:22:38,478
not but

7917
07:22:38,478 --> 07:22:41,120
here we are again minecraft um so once

7918
07:22:41,120 --> 07:22:42,638
upon a time there were some hacky little

7919
07:22:42,638 --> 07:22:44,798
hackers that were hardcore minecarf fans

7920
07:22:44,798 --> 07:22:46,878
uh one of them actually found out about

7921
07:22:46,878 --> 07:22:49,200
this and uh figured out that by sending

7922
07:22:49,200 --> 07:22:51,760
a specific message to the in-game chat

7923
07:22:51,760 --> 07:22:53,360
they could run arbitrary code on other

7924
07:22:53,360 --> 07:22:55,920
players systems neato

7925
07:22:55,920 --> 07:22:57,440
little did they know that this would

7926
07:22:57,440 --> 07:22:59,040
actually cause more grief than an

7927
07:22:59,040 --> 07:23:03,360
academy award smackdown on primetime tv

7928
07:23:03,760 --> 07:23:05,600
and the rest is actually hella's history

7929
07:23:05,600 --> 07:23:07,040
that many of us will hopefully never

7930
07:23:07,040 --> 07:23:08,638
tell future generations about because

7931
07:23:08,638 --> 07:23:10,000
come on they've got enough to worry

7932
07:23:10,000 --> 07:23:12,160
about

7933
07:23:13,520 --> 07:23:15,200
examples abound

7934
07:23:15,200 --> 07:23:16,798
how many people are super familiar with

7935
07:23:16,798 --> 07:23:19,798
mso8067

7936
07:23:20,478 --> 07:23:22,318
i i know who's been doing this for a

7937
07:23:22,318 --> 07:23:23,840
while uh

7938
07:23:23,840 --> 07:23:26,318
how many of you would consider it a bug

7939
07:23:26,318 --> 07:23:29,120
microsoft did bug

7940
07:23:29,120 --> 07:23:31,120
yeah feature

7941
07:23:31,120 --> 07:23:32,638
yes okay cool

7942
07:23:32,638 --> 07:23:34,638
i absolutely use this as a feature and a

7943
07:23:34,638 --> 07:23:36,558
few past lives there so basically the

7944
07:23:36,558 --> 07:23:38,478
server service within the windows

7945
07:23:38,478 --> 07:23:39,840
systems

7946
07:23:39,840 --> 07:23:42,558
again rpc calls to an unauthenticated

7947
07:23:42,558 --> 07:23:44,478
arbitrary code execution is what you got

7948
07:23:44,478 --> 07:23:45,520
with this

7949
07:23:45,520 --> 07:23:46,638
this one

7950
07:23:46,638 --> 07:23:48,160
basically if you could get a foothold

7951
07:23:48,160 --> 07:23:50,160
within a windows network

7952
07:23:50,160 --> 07:23:53,280
drop this sucker and your your king so

7953
07:23:53,280 --> 07:23:55,680
it was used heavily

7954
07:23:55,680 --> 07:23:58,718
and was pushed into metasploit and uh

7955
07:23:58,718 --> 07:24:01,680
and the rest is history

7956
07:24:01,680 --> 07:24:04,398
here's another great one so amazon has a

7957
07:24:04,398 --> 07:24:06,958
great feature for reading books you know

7958
07:24:06,958 --> 07:24:09,600
a preview of books online great awesome

7959
07:24:09,600 --> 07:24:11,280
uh well they actually also had a little

7960
07:24:11,280 --> 07:24:12,958
bit of a problem in that they would

7961
07:24:12,958 --> 07:24:16,000
actually uh render javascript so when

7962
07:24:16,000 --> 07:24:18,000
you looked up the first for example the

7963
07:24:18,000 --> 07:24:19,760
web application hackers handbook and you

7964
07:24:19,760 --> 07:24:21,840
went to the page on across on crosstalk

7965
07:24:21,840 --> 07:24:24,318
scripting it would actually pop that

7966
07:24:24,318 --> 07:24:26,958
right there in your browser so

7967
07:24:26,958 --> 07:24:28,958
again

7968
07:24:28,958 --> 07:24:32,638
bug or feature so

7969
07:24:33,520 --> 07:24:35,120
um this is another one that's really

7970
07:24:35,120 --> 07:24:36,958
really good and i like a lot so exchange

7971
07:24:36,958 --> 07:24:39,040
mail rules that actually allow for

7972
07:24:39,040 --> 07:24:41,440
arbitrary command execution on connected

7973
07:24:41,440 --> 07:24:43,680
outlook clients this one's this one's

7974
07:24:43,680 --> 07:24:46,558
kind of awesome so uh that's the basis

7975
07:24:46,558 --> 07:24:48,478
of the vulnerability so exchange mail

7976
07:24:48,478 --> 07:24:50,878
rules bug or feature well it's a feature

7977
07:24:50,878 --> 07:24:52,398
right but it's also a bug but then it

7978
07:24:52,398 --> 07:24:54,398
turns into a feature because if you run

7979
07:24:54,398 --> 07:24:56,638
ruler you can actually enumerate valid

7980
07:24:56,638 --> 07:24:59,680
users you can create new malicious mail

7981
07:24:59,680 --> 07:25:02,398
rules you can dump the gal

7982
07:25:02,398 --> 07:25:05,200
you can run vbscript through forms you

7983
07:25:05,200 --> 07:25:06,958
can execute vbscript through the outlook

7984
07:25:06,958 --> 07:25:09,760
home page and when i was talking to my

7985
07:25:09,760 --> 07:25:11,920
friend the author of the tool uh just

7986
07:25:11,920 --> 07:25:13,760
last week he informed me that there was

7987
07:25:13,760 --> 07:25:15,360
one that i left off of this list which

7988
07:25:15,360 --> 07:25:18,318
was persistence and he's discussed how

7989
07:25:18,318 --> 07:25:19,760
during engagements when they were using

7990
07:25:19,760 --> 07:25:21,040
this tool

7991
07:25:21,040 --> 07:25:22,798
the cser team would actually grab a

7992
07:25:22,798 --> 07:25:24,718
machine that they thought was infected

7993
07:25:24,718 --> 07:25:26,718
or was in fact compromised via this

7994
07:25:26,718 --> 07:25:29,360
route wipe the machine clean malware

7995
07:25:29,360 --> 07:25:31,440
gone right drop it back on the network

7996
07:25:31,440 --> 07:25:33,120
it would connect to exchange the rules

7997
07:25:33,120 --> 07:25:34,318
would run

7998
07:25:34,318 --> 07:25:36,398
persistence so

7999
07:25:36,398 --> 07:25:40,520
so that's another really good one there

8000
07:25:40,638 --> 07:25:43,360
um and again these these go on and on so

8001
07:25:43,360 --> 07:25:45,120
we talk about dos attacks as a bad thing

8002
07:25:45,120 --> 07:25:46,478
but we also tell people everything

8003
07:25:46,478 --> 07:25:48,638
should fail closed

8004
07:25:48,638 --> 07:25:49,520
well

8005
07:25:49,520 --> 07:25:51,920
i guess it's working um speculative

8006
07:25:51,920 --> 07:25:53,440
execution that's another one too where

8007
07:25:53,440 --> 07:25:55,840
we can talk about having speed gains or

8008
07:25:55,840 --> 07:25:57,760
security loss or do you have security

8009
07:25:57,760 --> 07:26:00,318
gains and speed loss

8010
07:26:00,318 --> 07:26:02,000
revolving around how the speculative

8011
07:26:02,000 --> 07:26:03,680
execution works and and

8012
07:26:03,680 --> 07:26:06,798
those cpus

8013
07:26:07,120 --> 07:26:08,958
so where the heck am i going with all

8014
07:26:08,958 --> 07:26:10,718
this well i introduced you to ecosystems

8015
07:26:10,718 --> 07:26:12,318
early on so what i wanted to talk about

8016
07:26:12,318 --> 07:26:14,958
is another biological uh bit which is

8017
07:26:14,958 --> 07:26:17,040
symbiosis so i'd like to talk about

8018
07:26:17,040 --> 07:26:18,798
security and engineering and what kind

8019
07:26:18,798 --> 07:26:20,878
of symbiotic relationship

8020
07:26:20,878 --> 07:26:22,478
you might have if you're an engineer

8021
07:26:22,478 --> 07:26:24,080
with your security team or you might

8022
07:26:24,080 --> 07:26:26,318
have if you're a security team and with

8023
07:26:26,318 --> 07:26:27,680
your engineering team

8024
07:26:27,680 --> 07:26:29,600
and obviously there's places you want to

8025
07:26:29,600 --> 07:26:31,040
be on this

8026
07:26:31,040 --> 07:26:32,798
and there are places you don't want to

8027
07:26:32,798 --> 07:26:34,878
be on this so

8028
07:26:34,878 --> 07:26:36,558
if you're a security team

8029
07:26:36,558 --> 07:26:38,000
who's basically

8030
07:26:38,000 --> 07:26:39,840
winning hearts and minds of executives

8031
07:26:39,840 --> 07:26:41,600
because you're doing certain things and

8032
07:26:41,600 --> 07:26:43,200
making it look like the security team's

8033
07:26:43,200 --> 07:26:44,558
doing a whole bunch of work but you're

8034
07:26:44,558 --> 07:26:45,920
causing a whole bunch of harm to the

8035
07:26:45,920 --> 07:26:47,120
people who are

8036
07:26:47,120 --> 07:26:48,718
more or less writing the products that

8037
07:26:48,718 --> 07:26:50,398
actually get sold

8038
07:26:50,398 --> 07:26:52,718
that's a very parasitic relationship

8039
07:26:52,718 --> 07:26:54,080
here

8040
07:26:54,080 --> 07:26:56,080
if you're in a competition with the

8041
07:26:56,080 --> 07:26:58,240
engineering team and you're both at each

8042
07:26:58,240 --> 07:27:00,478
other's throats that seems like more of

8043
07:27:00,478 --> 07:27:02,398
a competition symbiote symbolic

8044
07:27:02,398 --> 07:27:03,440
relationship

8045
07:27:03,440 --> 07:27:04,798
and of course what we want to strive

8046
07:27:04,798 --> 07:27:07,360
towards is that mutualism the benefit

8047
07:27:07,360 --> 07:27:09,840
for both

8048
07:27:10,398 --> 07:27:12,240
and in seeing that

8049
07:27:12,240 --> 07:27:14,398
here's my advice for security people if

8050
07:27:14,398 --> 07:27:16,638
you're in the security realm and you're

8051
07:27:16,638 --> 07:27:18,080
working with engineering teams take the

8052
07:27:18,080 --> 07:27:19,520
time to actually understand what those

8053
07:27:19,520 --> 07:27:21,200
engineers are trying to do

8054
07:27:21,200 --> 07:27:22,558
you don't have to just be the person

8055
07:27:22,558 --> 07:27:24,558
reporting the issues you're all very

8056
07:27:24,558 --> 07:27:25,520
smart

8057
07:27:25,520 --> 07:27:27,760
you can use your brains i'm confident of

8058
07:27:27,760 --> 07:27:28,718
this

8059
07:27:28,718 --> 07:27:30,160
make you can make valid and helpful

8060
07:27:30,160 --> 07:27:32,240
suggestions and you might even be able

8061
07:27:32,240 --> 07:27:34,080
to write code in a more secure fashion

8062
07:27:34,080 --> 07:27:35,680
that would help the engineers do things

8063
07:27:35,680 --> 07:27:38,718
far more safely similar to uh to our

8064
07:27:38,718 --> 07:27:40,080
keynote today

8065
07:27:40,080 --> 07:27:41,520
one of the things you can do is

8066
07:27:41,520 --> 07:27:43,920
eliminate classes of vulnerabilities

8067
07:27:43,920 --> 07:27:45,760
another thing that that

8068
07:27:45,760 --> 07:27:48,240
we've explored recently is

8069
07:27:48,240 --> 07:27:49,680
let's say you don't want your engineers

8070
07:27:49,680 --> 07:27:52,160
to be using unsafe crypto well maybe you

8071
07:27:52,160 --> 07:27:54,718
create a crypto api that you can swap

8072
07:27:54,718 --> 07:27:56,318
out primitives underneath and the

8073
07:27:56,318 --> 07:27:57,920
engineering team always gets what they

8074
07:27:57,920 --> 07:28:00,160
need without having any kind of grief

8075
07:28:00,160 --> 07:28:02,160
about going and changing things across

8076
07:28:02,160 --> 07:28:05,200
mass amounts of systems

8077
07:28:05,280 --> 07:28:07,680
so for engineers or developers if you're

8078
07:28:07,680 --> 07:28:09,120
a software engineer go ahead and take

8079
07:28:09,120 --> 07:28:10,558
the time to understand those issues the

8080
07:28:10,558 --> 07:28:12,160
security team keeps hammering you on

8081
07:28:12,160 --> 07:28:13,360
about

8082
07:28:13,360 --> 07:28:15,520
and and maybe think about how those can

8083
07:28:15,520 --> 07:28:17,520
be eliminated on your side as well maybe

8084
07:28:17,520 --> 07:28:20,000
think about more of a holistic solution

8085
07:28:20,000 --> 07:28:22,080
rather than a one-time fix consider

8086
07:28:22,080 --> 07:28:23,520
things like integration and regression

8087
07:28:23,520 --> 07:28:26,398
testing as a norm or a habit

8088
07:28:26,398 --> 07:28:28,398
or creating those common libraries apis

8089
07:28:28,398 --> 07:28:30,000
that would remove the need for trying to

8090
07:28:30,000 --> 07:28:32,000
reconceive potentially harmful scenarios

8091
07:28:32,000 --> 07:28:35,680
so that everyone can benefit

8092
07:28:35,840 --> 07:28:37,440
and i just want to give a few shout outs

8093
07:28:37,440 --> 07:28:40,638
here uh tanakwe chris for the te reo

8094
07:28:40,638 --> 07:28:42,478
help on the intro

8095
07:28:42,478 --> 07:28:44,318
thanks to my wife

8096
07:28:44,318 --> 07:28:46,160
the biologists in the family who made

8097
07:28:46,160 --> 07:28:48,080
sure i knew what the hell i was talking

8098
07:28:48,080 --> 07:28:49,200
about

8099
07:28:49,200 --> 07:28:50,398
throughout this slide deck when it came

8100
07:28:50,398 --> 07:28:52,398
to the biological pieces and thanks

8101
07:28:52,398 --> 07:28:53,920
again to the crew

8102
07:28:53,920 --> 07:28:55,200
for all the hard work and making all

8103
07:28:55,200 --> 07:28:56,798
this happen

8104
07:28:56,798 --> 07:28:59,190
thanks

8105
07:28:59,190 --> 07:29:00,150
[Music]

8106
07:29:00,150 --> 07:29:01,260
[Applause]

8107
07:29:01,260 --> 07:29:04,559
[Music]

8108
07:29:20,080 --> 07:29:22,318
wait did i no i turned it on what do you

8109
07:29:22,318 --> 07:29:24,240
laugh at that i can't i totally turned

8110
07:29:24,240 --> 07:29:26,478
it on

8111
07:29:26,958 --> 07:29:29,200
you having a good time oh wow

8112
07:29:29,200 --> 07:29:30,878
it's classic it's classic thank you

8113
07:29:30,878 --> 07:29:33,920
madman thank you very much

8114
07:29:33,920 --> 07:29:36,240
it's crickets.wave it's

8115
07:29:36,240 --> 07:29:37,280
so good

8116
07:29:37,280 --> 07:29:38,478
having a good time

8117
07:29:38,478 --> 07:29:40,798
enjoying yeah yeah yeah

8118
07:29:40,798 --> 07:29:44,000
excellent all right so i i

8119
07:29:44,000 --> 07:29:46,478
i did lie to you a little bit earlier

8120
07:29:46,478 --> 07:29:48,318
like do you remember when i said the

8121
07:29:48,318 --> 07:29:50,478
scariest word

8122
07:29:50,478 --> 07:29:51,760
universe

8123
07:29:51,760 --> 07:29:53,200
what was it

8124
07:29:53,200 --> 07:29:55,680
kubernetes

8125
07:29:55,680 --> 07:29:57,600
it's that's not true

8126
07:29:57,600 --> 07:29:59,920
the scariest word neversec starts with a

8127
07:29:59,920 --> 07:30:03,120
k and it is kerberos

8128
07:30:03,120 --> 07:30:06,120
um

8129
07:30:06,240 --> 07:30:08,958
and talk to us about the terrible dark

8130
07:30:08,958 --> 07:30:10,558
secrets that we did before some of you

8131
07:30:10,558 --> 07:30:12,958
were even born

8132
07:30:12,958 --> 07:30:15,780
i walked the stage mr andrew butler

8133
07:30:15,780 --> 07:30:21,759
[Applause]

8134
07:30:22,798 --> 07:30:26,318
ah kiara i'm andrew bartlett i hail from

8135
07:30:26,318 --> 07:30:27,360
canberra

8136
07:30:27,360 --> 07:30:29,840
australia under under mount bimbri and

8137
07:30:29,840 --> 07:30:32,000
on the mighty murrumbidgee river

8138
07:30:32,000 --> 07:30:34,798
i now call wellington home my family

8139
07:30:34,798 --> 07:30:36,398
they often find me in my family riding

8140
07:30:36,398 --> 07:30:37,680
around on our bikes around this fair

8141
07:30:37,680 --> 07:30:38,878
city

8142
07:30:38,878 --> 07:30:41,360
even on a wellington day

8143
07:30:41,360 --> 07:30:42,878
when i'm at work i'm a catalyst to work

8144
07:30:42,878 --> 07:30:44,638
on samba building

8145
07:30:44,638 --> 07:30:45,600
building our free software

8146
07:30:45,600 --> 07:30:48,478
implementation of active directory

8147
07:30:48,478 --> 07:30:50,478
and this is a tale of what i i call the

8148
07:30:50,478 --> 07:30:52,558
dollar tick attack on active directories

8149
07:30:52,558 --> 07:30:55,120
kerberos authentication protocol

8150
07:30:55,120 --> 07:30:55,920
um

8151
07:30:55,920 --> 07:30:58,878
yeah i i do i do agree uh kerberos is a

8152
07:30:58,878 --> 07:31:01,520
scary word i um

8153
07:31:01,520 --> 07:31:03,840
i did neglect in my selection of slides

8154
07:31:03,840 --> 07:31:07,360
to um to get the the three-headed dog um

8155
07:31:07,360 --> 07:31:09,520
i i think we we could probably you know

8156
07:31:09,520 --> 07:31:11,680
arrange one out of those sheep probably

8157
07:31:11,680 --> 07:31:14,638
um but yes kerberos is indeed uh scary

8158
07:31:14,638 --> 07:31:16,478
um it is sort of what i've made a bit of

8159
07:31:16,478 --> 07:31:18,000
my career out of

8160
07:31:18,000 --> 07:31:19,680
um

8161
07:31:19,680 --> 07:31:21,600
it's also really powerful what it does

8162
07:31:21,600 --> 07:31:23,600
when it does it well i think it can do a

8163
07:31:23,600 --> 07:31:26,160
good job at but um

8164
07:31:26,160 --> 07:31:29,200
i certainly appreciate why people

8165
07:31:29,200 --> 07:31:31,360
feel

8166
07:31:31,360 --> 07:31:33,760
okay so i have here a genuine kerberos

8167
07:31:33,760 --> 07:31:36,240
ticket um i i captured this in the wild

8168
07:31:36,240 --> 07:31:39,280
earlier today um so you know um

8169
07:31:39,280 --> 07:31:41,600
freshly dried and and and preserved on

8170
07:31:41,600 --> 07:31:42,840
the slide here

8171
07:31:42,840 --> 07:31:46,080
um and and you'll see it has a few key

8172
07:31:46,080 --> 07:31:48,398
components that i i need to explain to

8173
07:31:48,398 --> 07:31:50,398
you so you'll get the rest of the talk

8174
07:31:50,398 --> 07:31:51,120
so

8175
07:31:51,120 --> 07:31:53,760
up at the very top um it has the name of

8176
07:31:53,760 --> 07:31:55,040
the ticket so that's the

8177
07:31:55,040 --> 07:31:57,360
that's who the ticket represents so

8178
07:31:57,360 --> 07:31:59,520
andrew in this case and at the bottom is

8179
07:31:59,520 --> 07:32:02,000
a very unforgeable uh signature of the

8180
07:32:02,000 --> 07:32:04,318
kdc

8181
07:32:04,318 --> 07:32:06,318
now um you know unless you actually get

8182
07:32:06,318 --> 07:32:08,318
the core secret of kerberos domain you

8183
07:32:08,318 --> 07:32:11,440
really can't forge that signature um now

8184
07:32:11,440 --> 07:32:13,040
you know a lot of you are really good at

8185
07:32:13,040 --> 07:32:14,478
you know printing golden tickets and

8186
07:32:14,478 --> 07:32:15,680
things like that but for the purpose of

8187
07:32:15,680 --> 07:32:17,440
this talk we're not needing to do any of

8188
07:32:17,440 --> 07:32:19,600
that stuff the the the signatures are

8189
07:32:19,600 --> 07:32:22,080
perfectly and entirely legitimate

8190
07:32:22,080 --> 07:32:25,520
and in the middle up here is the

8191
07:32:25,520 --> 07:32:27,360
extra information that active directory

8192
07:32:27,360 --> 07:32:29,120
added when microsoft took the kerberos

8193
07:32:29,120 --> 07:32:32,000
protocol and

8194
07:32:32,000 --> 07:32:33,360
brought it

8195
07:32:33,360 --> 07:32:35,520
into the windows world

8196
07:32:35,520 --> 07:32:37,040
they did a

8197
07:32:37,040 --> 07:32:38,478
they added in

8198
07:32:38,478 --> 07:32:41,440
windows user identities into the ticket

8199
07:32:41,440 --> 07:32:44,000
now those um so these are globally

8200
07:32:44,000 --> 07:32:45,600
unique numbers they're typically printed

8201
07:32:45,600 --> 07:32:47,360
out with an s on the front so you know

8202
07:32:47,360 --> 07:32:50,398
their windows tips this is what um when

8203
07:32:50,398 --> 07:32:52,080
you're doing access control lists

8204
07:32:52,080 --> 07:32:54,478
windows will use now i'm laboring this

8205
07:32:54,478 --> 07:32:56,080
point a little bit because

8206
07:32:56,080 --> 07:32:57,360
you've got now got two things that

8207
07:32:57,360 --> 07:32:59,360
represent the user and this is where our

8208
07:32:59,360 --> 07:33:02,318
trouble begins so the last thing that i

8209
07:33:02,318 --> 07:33:05,280
have here is

8210
07:33:05,280 --> 07:33:07,520
the user's name as represented in active

8211
07:33:07,520 --> 07:33:08,878
directory the one that's actually on

8212
07:33:08,878 --> 07:33:10,318
their record and you'll see that it's

8213
07:33:10,318 --> 07:33:11,680
very subtly different to the name of the

8214
07:33:11,680 --> 07:33:15,920
top of the ticket and this also matters

8215
07:33:17,440 --> 07:33:19,360
so secondly to try and introduce you to

8216
07:33:19,360 --> 07:33:22,000
kerberos in you know 30 seconds flat i

8217
07:33:22,000 --> 07:33:24,160
wanted to show you this this slide about

8218
07:33:24,160 --> 07:33:25,360
um

8219
07:33:25,360 --> 07:33:27,920
how the kerberos protocol works

8220
07:33:27,920 --> 07:33:30,318
now um up in the box i've got what

8221
07:33:30,318 --> 07:33:32,240
happens when you run k-net the k-net is

8222
07:33:32,240 --> 07:33:35,360
the unix command that you use to get a

8223
07:33:35,360 --> 07:33:37,920
kerberos ticket and so you exchange your

8224
07:33:37,920 --> 07:33:39,920
username and your password

8225
07:33:39,920 --> 07:33:41,600
for a kerberos ticket granting ticket

8226
07:33:41,600 --> 07:33:44,878
it's a bearer token of sorts

8227
07:33:44,878 --> 07:33:46,638
and i put that in a box because i'll be

8228
07:33:46,638 --> 07:33:48,080
showing it shortly and it was mentioned

8229
07:33:48,080 --> 07:33:49,920
to me that i didn't i need to explain

8230
07:33:49,920 --> 07:33:51,200
what this is so that when you see the

8231
07:33:51,200 --> 07:33:53,040
command run you've got an idea you get

8232
07:33:53,040 --> 07:33:55,920
back a ticket that you can use to then

8233
07:33:55,920 --> 07:33:57,360
access a service

8234
07:33:57,360 --> 07:33:58,798
now

8235
07:33:58,798 --> 07:34:00,160
the second step that happens with

8236
07:34:00,160 --> 07:34:01,760
kerberos is that for every service you

8237
07:34:01,760 --> 07:34:04,478
access you don't hand it your gold your

8238
07:34:04,478 --> 07:34:06,160
your ticket that represents you in all

8239
07:34:06,160 --> 07:34:07,680
forms

8240
07:34:07,680 --> 07:34:09,440
you hand it one specifically to a

8241
07:34:09,440 --> 07:34:11,440
particular service

8242
07:34:11,440 --> 07:34:13,200
but it's got the same details in it it's

8243
07:34:13,200 --> 07:34:16,958
got you know this a short for andrew um

8244
07:34:16,958 --> 07:34:19,440
in the ticket

8245
07:34:19,440 --> 07:34:21,760
now if all this may well still be more

8246
07:34:21,760 --> 07:34:23,520
too complex for you so all i want you to

8247
07:34:23,520 --> 07:34:25,760
really remember is that big red line

8248
07:34:25,760 --> 07:34:27,200
which i left as big as libreoffice

8249
07:34:27,200 --> 07:34:28,878
seemed to want to draw it by default

8250
07:34:28,878 --> 07:34:30,160
because

8251
07:34:30,160 --> 07:34:32,878
the file server absolutely trusts that

8252
07:34:32,878 --> 07:34:34,958
signature on the ticket

8253
07:34:34,958 --> 07:34:36,878
it does not have any back channel back

8254
07:34:36,878 --> 07:34:39,280
to active directory or the kdc

8255
07:34:39,280 --> 07:34:42,638
in pure kerberos there are some um

8256
07:34:42,638 --> 07:34:43,760
and so

8257
07:34:43,760 --> 07:34:45,440
it never does a double check that this

8258
07:34:45,440 --> 07:34:49,680
ticket is valid in the kerberos protocol

8259
07:34:49,680 --> 07:34:51,600
and understanding that it helps explain

8260
07:34:51,600 --> 07:34:53,680
why some of these things

8261
07:34:53,680 --> 07:34:56,000
happen

8262
07:34:56,958 --> 07:34:59,120
now kiwicon and quickcom love a good

8263
07:34:59,120 --> 07:35:00,878
exploit so i wanted to continue in that

8264
07:35:00,878 --> 07:35:02,398
fine tradition

8265
07:35:02,398 --> 07:35:04,240
so the dollar ticket attack looks like

8266
07:35:04,240 --> 07:35:06,478
being with us some time and here is a

8267
07:35:06,478 --> 07:35:09,280
still open security issue

8268
07:35:09,280 --> 07:35:11,680
not quite a zero day because i told

8269
07:35:11,680 --> 07:35:14,318
everyone back in november and then again

8270
07:35:14,318 --> 07:35:17,360
in blog posts and then uh in sanbor xp a

8271
07:35:17,360 --> 07:35:19,520
few weeks ago

8272
07:35:19,520 --> 07:35:21,280
but people still haven't got around to

8273
07:35:21,280 --> 07:35:23,520
fixing this in all the parts so i went

8274
07:35:23,520 --> 07:35:25,600
and then did a video and i sent it to my

8275
07:35:25,600 --> 07:35:28,478
friends at red hat who um uh involved in

8276
07:35:28,478 --> 07:35:30,160
some of the software here and they say

8277
07:35:30,160 --> 07:35:31,840
they're gonna try and you know make some

8278
07:35:31,840 --> 07:35:34,558
more progress on it now it's all public

8279
07:35:34,558 --> 07:35:36,638
but hey it reproduced as of last week

8280
07:35:36,638 --> 07:35:40,000
and i'm not aware of any fixes so far

8281
07:35:40,000 --> 07:35:43,840
so hey you know go home exploit

8282
07:35:45,280 --> 07:35:47,760
so the setup um i started with a fully

8283
07:35:47,760 --> 07:35:50,958
patched windows 22 active directory dc

8284
07:35:50,958 --> 07:35:52,638
i went to the great pains of installing

8285
07:35:52,638 --> 07:35:54,638
certificate services which was more

8286
07:35:54,638 --> 07:35:56,240
painful than i expected but not as

8287
07:35:56,240 --> 07:35:57,760
painful as it could have been because i

8288
07:35:57,760 --> 07:36:00,478
needed ldaps support um

8289
07:36:00,478 --> 07:36:02,718
i took a fedora 36 client i fully

8290
07:36:02,718 --> 07:36:05,760
patched it latest ssd and i used the

8291
07:36:05,760 --> 07:36:07,920
realm join command that comes with it to

8292
07:36:07,920 --> 07:36:10,478
connect um to the domain

8293
07:36:10,478 --> 07:36:11,840
and so that's the command i use that's

8294
07:36:11,840 --> 07:36:13,440
all i did

8295
07:36:13,440 --> 07:36:15,040
i had installed it i had enabled the

8296
07:36:15,040 --> 07:36:16,958
root account and install

8297
07:36:16,958 --> 07:36:18,638
that's the only other change that any

8298
07:36:18,638 --> 07:36:19,840
other sort of

8299
07:36:19,840 --> 07:36:20,798
you know

8300
07:36:20,798 --> 07:36:23,120
choice

8301
07:36:23,760 --> 07:36:25,600
so

8302
07:36:25,600 --> 07:36:27,360
here i have the machine i'm starting

8303
07:36:27,360 --> 07:36:30,638
with and i start i knit as andrew

8304
07:36:30,638 --> 07:36:33,920
i put in andrew's password

8305
07:36:34,878 --> 07:36:36,878
okay

8306
07:36:36,878 --> 07:36:38,478
now here you can see i've got a ticket

8307
07:36:38,478 --> 07:36:40,478
and it's there as andrew

8308
07:36:40,478 --> 07:36:42,080
local ticket it's not an administrative

8309
07:36:42,080 --> 07:36:43,680
account

8310
07:36:43,680 --> 07:36:45,360
and

8311
07:36:45,360 --> 07:36:46,798
you can log on to the windows system

8312
07:36:46,798 --> 07:36:48,080
it's android this is perfectly normal

8313
07:36:48,080 --> 07:36:49,440
it's a normal

8314
07:36:49,440 --> 07:36:51,600
i've come in with kerberos so that gss

8315
07:36:51,600 --> 07:36:52,878
api is

8316
07:36:52,878 --> 07:36:54,878
in this um talk another word for

8317
07:36:54,878 --> 07:36:56,318
kerberos

8318
07:36:56,318 --> 07:36:58,558
and i see i'm a normal user perfectly

8319
07:36:58,558 --> 07:37:02,318
normal we've got single sign-on yay

8320
07:37:02,558 --> 07:37:03,680
okay

8321
07:37:03,680 --> 07:37:06,318
let's do something else

8322
07:37:06,318 --> 07:37:08,240
let's check a little bit about what this

8323
07:37:08,240 --> 07:37:10,080
android account is

8324
07:37:10,080 --> 07:37:11,360
so i've looked at the account now if you

8325
07:37:11,360 --> 07:37:14,000
know windows you'll see that the groups

8326
07:37:14,000 --> 07:37:17,360
that i'm in is 513's domain users the

8327
07:37:17,360 --> 07:37:18,840
numbers at the far end are sort of what

8328
07:37:18,840 --> 07:37:21,200
matters and i've also gone and looking

8329
07:37:21,200 --> 07:37:23,280
here i'm trying to check uh if i'm a

8330
07:37:23,280 --> 07:37:24,878
member of any other special groups

8331
07:37:24,878 --> 07:37:26,638
primary group of d is just domain users

8332
07:37:26,638 --> 07:37:28,000
nothing up the sleeve is what i'm trying

8333
07:37:28,000 --> 07:37:29,120
to show here

8334
07:37:29,120 --> 07:37:30,718
because this is not an administrative

8335
07:37:30,718 --> 07:37:31,920
account

8336
07:37:31,920 --> 07:37:33,200
yes this is actually directly there's so

8337
07:37:33,200 --> 07:37:34,558
many other ways i could hide being an

8338
07:37:34,558 --> 07:37:36,318
admin but you know

8339
07:37:36,318 --> 07:37:39,360
you just have to trust me

8340
07:37:39,440 --> 07:37:42,558
trust me kiwicon anyway um so i go to

8341
07:37:42,558 --> 07:37:45,040
and use computer.pi from in packet to

8342
07:37:45,040 --> 07:37:47,040
create a computer now you may notice

8343
07:37:47,040 --> 07:37:49,360
i've chosen a curious computer name

8344
07:37:49,360 --> 07:37:51,200
there

8345
07:37:51,200 --> 07:37:54,478
so it gives me a password

8346
07:37:54,478 --> 07:37:56,240
and the the steps that this thing takes

8347
07:37:56,240 --> 07:37:58,080
are not particularly complex but it was

8348
07:37:58,080 --> 07:37:59,440
easier to run their script than to get

8349
07:37:59,440 --> 07:38:01,120
the exact them right i was actually

8350
07:38:01,120 --> 07:38:02,718
going to paste it on the screen but you

8351
07:38:02,718 --> 07:38:04,638
know anyway so typed in i've done cane

8352
07:38:04,638 --> 07:38:05,920
it is root

8353
07:38:05,920 --> 07:38:09,519
using the password that i've got there

8354
07:38:09,760 --> 07:38:11,520
oh

8355
07:38:11,520 --> 07:38:13,840
bother

8356
07:38:13,840 --> 07:38:15,760
again no no keys nothing up my sleeve

8357
07:38:15,760 --> 07:38:18,160
this is kerberos authentication who am i

8358
07:38:18,160 --> 07:38:21,200
if i can spell it correctly

8359
07:38:22,240 --> 07:38:23,760
yes

8360
07:38:23,760 --> 07:38:26,318
oh bother

8361
07:38:26,318 --> 07:38:28,558
so yes we have indeed logged into the

8362
07:38:28,558 --> 07:38:31,840
fedora machine as root

8363
07:38:37,440 --> 07:38:39,280
now you might be smart enough to have

8364
07:38:39,280 --> 07:38:41,440
configured your system to allow no now a

8365
07:38:41,440 --> 07:38:43,440
fedora machine has no password

8366
07:38:43,440 --> 07:38:44,958
authentication as root but allows key

8367
07:38:44,958 --> 07:38:46,718
authentication as root with the default

8368
07:38:46,718 --> 07:38:49,040
install i had but you might have not

8369
07:38:49,040 --> 07:38:50,478
done that and you've got a user account

8370
07:38:50,478 --> 07:38:51,440
that is

8371
07:38:51,440 --> 07:38:53,120
privileged instead

8372
07:38:53,120 --> 07:38:54,398
so

8373
07:38:54,398 --> 07:38:56,798
maybe that user count was a bartlett

8374
07:38:56,798 --> 07:38:58,558
so i can create a machine called a

8375
07:38:58,558 --> 07:38:59,840
bartlett

8376
07:38:59,840 --> 07:39:03,280
again you put in the password

8377
07:39:04,638 --> 07:39:08,000
and again you can log in

8378
07:39:11,520 --> 07:39:13,360
okay so here i've got my butler

8379
07:39:13,360 --> 07:39:14,638
credentials

8380
07:39:14,638 --> 07:39:16,798
um

8381
07:39:16,798 --> 07:39:19,120
okay and

8382
07:39:19,120 --> 07:39:19,920
the

8383
07:39:19,920 --> 07:39:21,360
and you'll be able to log in to the

8384
07:39:21,360 --> 07:39:23,840
system as as that user

8385
07:39:23,840 --> 07:39:26,240
um so we see here we ssh we have to say

8386
07:39:26,240 --> 07:39:28,160
across as a bartlett and so there and

8387
07:39:28,160 --> 07:39:29,520
that could be account that has sudo

8388
07:39:29,520 --> 07:39:31,360
rights a bit like like the ubuntu user

8389
07:39:31,360 --> 07:39:33,440
that you get again i've logged in using

8390
07:39:33,440 --> 07:39:35,120
only kerberos there are no keys involved

8391
07:39:35,120 --> 07:39:37,360
here

8392
07:39:39,040 --> 07:39:42,478
this is not as you saw uh earlier a hot

8393
07:39:42,478 --> 07:39:43,760
those numbers if they were active

8394
07:39:43,760 --> 07:39:45,200
directory accounts that were coming in

8395
07:39:45,200 --> 07:39:46,878
with ssd they would have had much higher

8396
07:39:46,878 --> 07:39:49,520
user numbers

8397
07:39:50,878 --> 07:39:54,280
so um

8398
07:39:55,200 --> 07:39:57,760
so how did this happen

8399
07:39:57,760 --> 07:40:00,000
just add a dollar

8400
07:40:00,000 --> 07:40:03,280
so as i say it fully documented kerberos

8401
07:40:03,280 --> 07:40:06,080
features that cause such mayhem so this

8402
07:40:06,080 --> 07:40:09,760
is in the public specification msadts it

8403
07:40:09,760 --> 07:40:10,878
says when you're doing a client

8404
07:40:10,878 --> 07:40:12,718
principle lookup if you don't find the

8405
07:40:12,718 --> 07:40:15,840
account add a dollar and try again

8406
07:40:15,840 --> 07:40:19,440
this was added for app compatibility as

8407
07:40:19,440 --> 07:40:21,200
far as i can tell we actually found an

8408
07:40:21,200 --> 07:40:23,200
oracle application that was using it and

8409
07:40:23,200 --> 07:40:26,300
so we added this to samba to match

8410
07:40:26,300 --> 07:40:29,390
[Music]

8411
07:40:30,160 --> 07:40:32,398
so

8412
07:40:34,558 --> 07:40:36,160
you can now see i can look at how these

8413
07:40:36,160 --> 07:40:37,280
accounts so these are these are the

8414
07:40:37,280 --> 07:40:39,120
accounts that were added to active

8415
07:40:39,120 --> 07:40:40,638
directory and as you can see they're the

8416
07:40:40,638 --> 07:40:43,840
awfully suspicious uh usernames with a

8417
07:40:43,840 --> 07:40:45,920
dollar at the end

8418
07:40:45,920 --> 07:40:48,718
and so they don't duplicate against um

8419
07:40:48,718 --> 07:40:53,120
you know they don't appear on the system

8420
07:40:53,120 --> 07:40:55,520
as active directory accounts without the

8421
07:40:55,520 --> 07:40:56,878
dollar they're there with the dollar and

8422
07:40:56,878 --> 07:40:58,798
so you can exploit this mapping this

8423
07:40:58,798 --> 07:41:00,318
this

8424
07:41:00,318 --> 07:41:02,240
the fact that the name doesn't match

8425
07:41:02,240 --> 07:41:03,680
exactly what's in active directory you

8426
07:41:03,680 --> 07:41:06,000
can have some interesting games with

8427
07:41:06,000 --> 07:41:07,520
and you can therefore make the system

8428
07:41:07,520 --> 07:41:09,200
fall back to looking for local system

8429
07:41:09,200 --> 07:41:11,600
accounts

8430
07:41:11,760 --> 07:41:14,478
so what happened here so

8431
07:41:14,478 --> 07:41:16,318
the corpus protocol specifies this

8432
07:41:16,318 --> 07:41:17,960
behavior must happen so

8433
07:41:17,960 --> 07:41:19,440
[Music]

8434
07:41:19,440 --> 07:41:22,398
if you look up and and ask for an active

8435
07:41:22,398 --> 07:41:24,878
kerberos ticket the kdc must return that

8436
07:41:24,878 --> 07:41:26,718
ticket with exactly the same username

8437
07:41:26,718 --> 07:41:30,160
that you typed in when you asked for it

8438
07:41:30,160 --> 07:41:33,120
so if you've got an alias

8439
07:41:33,120 --> 07:41:35,120
that doesn't matter you still return the

8440
07:41:35,120 --> 07:41:36,798
ticket with exactly the name the user

8441
07:41:36,798 --> 07:41:41,199
typed because that's what the rfc says

8442
07:41:41,840 --> 07:41:44,318
except

8443
07:41:44,558 --> 07:41:46,160
microsoft added some extra features an

8444
07:41:46,160 --> 07:41:48,878
extra feature called canonicalization

8445
07:41:48,878 --> 07:41:50,558
where they said that oh we'll allow you

8446
07:41:50,558 --> 07:41:51,840
to have a ticket come back with a

8447
07:41:51,840 --> 07:41:54,000
different name

8448
07:41:54,000 --> 07:41:56,000
so it's optional but it's turned on by

8449
07:41:56,000 --> 07:41:58,318
all windows clients

8450
07:41:58,318 --> 07:41:59,920
and this actually creates a real problem

8451
07:41:59,920 --> 07:42:02,080
because

8452
07:42:02,080 --> 07:42:03,920
most developers

8453
07:42:03,920 --> 07:42:06,318
don't understand kerberos most users are

8454
07:42:06,318 --> 07:42:09,440
as scared of it as they should be

8455
07:42:09,440 --> 07:42:11,440
and so everybody just goes oh okay that

8456
07:42:11,440 --> 07:42:13,200
seemed to work okay let's get on with

8457
07:42:13,200 --> 07:42:15,840
life and run away

8458
07:42:16,478 --> 07:42:18,000
so the

8459
07:42:18,000 --> 07:42:19,760
target service you're developing it and

8460
07:42:19,760 --> 07:42:20,878
you're getting your testing with your

8461
07:42:20,878 --> 07:42:22,638
windows clients and you get the user's

8462
07:42:22,638 --> 07:42:24,240
sam account name exactly as printed in

8463
07:42:24,240 --> 07:42:25,760
active directory and you go okay yes

8464
07:42:25,760 --> 07:42:27,280
that's what i need i'll go i can match

8465
07:42:27,280 --> 07:42:29,120
that it's all good

8466
07:42:29,120 --> 07:42:30,798
so it hides the possibility that it

8467
07:42:30,798 --> 07:42:32,798
could be any other name any of the other

8468
07:42:32,798 --> 07:42:34,160
aliases

8469
07:42:34,160 --> 07:42:36,080
from the developer because all you have

8470
07:42:36,080 --> 07:42:37,920
to do is not specify a bit when you ask

8471
07:42:37,920 --> 07:42:39,840
for it

8472
07:42:39,840 --> 07:42:42,958
so this impacts all sorts of services

8473
07:42:42,958 --> 07:42:45,360
impacts nfs id map

8474
07:42:45,360 --> 07:42:47,360
so um

8475
07:42:47,360 --> 07:42:49,280
only nfs ganesha has a mode to use

8476
07:42:49,280 --> 07:42:50,798
samba's lookup via the pack but

8477
07:42:50,798 --> 07:42:52,718
everything else is very common to say

8478
07:42:52,718 --> 07:42:54,318
okay i want to map my active directory

8479
07:42:54,318 --> 07:42:56,798
users to local users

8480
07:42:56,798 --> 07:42:58,798
i hear a lot of university systems where

8481
07:42:58,798 --> 07:43:00,478
there's the university active directory

8482
07:43:00,478 --> 07:43:01,600
and i'm required to use that for

8483
07:43:01,600 --> 07:43:02,958
authentication because it's got the

8484
07:43:02,958 --> 07:43:04,958
single passwords but i don't really

8485
07:43:04,958 --> 07:43:08,160
trust the university its so i run my own

8486
07:43:08,160 --> 07:43:09,520
local unix

8487
07:43:09,520 --> 07:43:11,760
unit user store

8488
07:43:11,760 --> 07:43:13,120
that's just this this kind of stuff

8489
07:43:13,120 --> 07:43:14,878
falls over you know horribly in that

8490
07:43:14,878 --> 07:43:15,920
mode

8491
07:43:15,920 --> 07:43:18,398
because the names can't be trusted

8492
07:43:18,398 --> 07:43:21,200
ssh as seen can fall over

8493
07:43:21,200 --> 07:43:23,680
apache model kerb likewise you can get

8494
07:43:23,680 --> 07:43:25,280
various names in there that you weren't

8495
07:43:25,280 --> 07:43:27,520
weren't matching weren't expecting

8496
07:43:27,520 --> 07:43:29,120
maybe you've got a drupal or something

8497
07:43:29,120 --> 07:43:31,520
that that has an admin account

8498
07:43:31,520 --> 07:43:33,920
that account won't exist in ad

8499
07:43:33,920 --> 07:43:35,280
i don't see why you couldn't create an

8500
07:43:35,280 --> 07:43:37,360
admin dollar account in id and have it

8501
07:43:37,360 --> 07:43:39,200
matched to it it all depends on what

8502
07:43:39,200 --> 07:43:40,558
mapping rules you've set but these

8503
07:43:40,558 --> 07:43:41,600
things

8504
07:43:41,600 --> 07:43:43,280
unless i talk and other people talk

8505
07:43:43,280 --> 07:43:45,120
about it at places like this we don't

8506
07:43:45,120 --> 07:43:46,718
know that these are issues you have to

8507
07:43:46,718 --> 07:43:49,600
think about hardening for

8508
07:43:49,600 --> 07:43:51,360
the biggest issue is that most active

8509
07:43:51,360 --> 07:43:52,878
directory integration on linux and

8510
07:43:52,878 --> 07:43:54,798
beyond is repurposed integrations for

8511
07:43:54,798 --> 07:43:57,200
mit kerberos in the 1980s

8512
07:43:57,200 --> 07:43:59,600
when the assumptions were that the much

8513
07:43:59,600 --> 07:44:02,079
simpler

8514
07:44:04,000 --> 07:44:05,920
it's all perfectly safe if only

8515
07:44:05,920 --> 07:44:08,638
administrators can add and modify users

8516
07:44:08,638 --> 07:44:10,558
uh kerberos and um and the kerberos

8517
07:44:10,558 --> 07:44:12,718
protocols were all set up originally

8518
07:44:12,718 --> 07:44:14,798
with the um

8519
07:44:14,798 --> 07:44:16,638
the blessed administrators the blessed

8520
07:44:16,638 --> 07:44:19,760
sis admins doing the administration and

8521
07:44:19,760 --> 07:44:20,958
they're not going to be silly enough to

8522
07:44:20,958 --> 07:44:22,958
start adding accounts with names that

8523
07:44:22,958 --> 07:44:26,079
match other names

8524
07:44:27,760 --> 07:44:31,520
but active directory well

8525
07:44:31,520 --> 07:44:32,840
we

8526
07:44:32,840 --> 07:44:37,200
hope but active directory um

8527
07:44:37,200 --> 07:44:39,120
adding names and selecting names is not

8528
07:44:39,120 --> 07:44:41,200
privileged

8529
07:44:41,200 --> 07:44:43,760
all users because of a lovely feature

8530
07:44:43,760 --> 07:44:46,240
called machine account quota can create

8531
07:44:46,240 --> 07:44:48,318
a user with any username as long as it

8532
07:44:48,318 --> 07:44:50,718
ends in a dollar

8533
07:44:50,718 --> 07:44:53,360
they can rename that account to match a

8534
07:44:53,360 --> 07:44:54,958
cert the user principal name of another

8535
07:44:54,958 --> 07:44:56,638
user as long as they put a dollar at the

8536
07:44:56,638 --> 07:44:59,760
end but then you can alias against that

8537
07:44:59,760 --> 07:45:01,760
or your helpdesk staff

8538
07:45:01,760 --> 07:45:03,920
they can create a sam account name

8539
07:45:03,920 --> 07:45:07,040
that matches a user principal name

8540
07:45:07,040 --> 07:45:09,600
and so block the other account or

8541
07:45:09,600 --> 07:45:12,798
take over access that might have been

8542
07:45:12,798 --> 07:45:14,398
a bit hard to do that but you can make

8543
07:45:14,398 --> 07:45:16,000
life miserable for the user with the

8544
07:45:16,000 --> 07:45:18,000
with the user principal name so except

8545
07:45:18,000 --> 07:45:19,760
for the 20 character limit if i had an

8546
07:45:19,760 --> 07:45:21,680
android bartlett account for my friendly

8547
07:45:21,680 --> 07:45:23,280
log into id

8548
07:45:23,280 --> 07:45:24,958
someone with low privilege could create

8549
07:45:24,958 --> 07:45:27,360
a andrew bartlett account

8550
07:45:27,360 --> 07:45:28,958
with that same account name and stop me

8551
07:45:28,958 --> 07:45:31,600
logging in

8552
07:45:31,600 --> 07:45:33,040
or potentially get into some other

8553
07:45:33,040 --> 07:45:36,080
service that was um just um like uh

8554
07:45:36,080 --> 07:45:38,240
pamkerb5 kind of

8555
07:45:38,240 --> 07:45:40,318
a very simple authentication so there's

8556
07:45:40,318 --> 07:45:42,160
all sorts of flexibility in ads that is

8557
07:45:42,160 --> 07:45:43,200
just not

8558
07:45:43,200 --> 07:45:45,840
not good

8559
07:45:47,440 --> 07:45:49,920
but the worst bit is the mit kerbero mit

8560
07:45:49,920 --> 07:45:52,160
style kerbros client so this whole unix

8561
07:45:52,160 --> 07:45:55,360
ecosystem is just totally blind

8562
07:45:55,360 --> 07:45:57,200
without sambas libraries for passing the

8563
07:45:57,200 --> 07:45:59,680
pack which um only um

8564
07:45:59,680 --> 07:46:01,440
very few other bits of app applications

8565
07:46:01,440 --> 07:46:03,440
can use

8566
07:46:03,440 --> 07:46:05,360
the real username the inactive directory

8567
07:46:05,360 --> 07:46:08,160
the sam account name that is the id user

8568
07:46:08,160 --> 07:46:10,718
is just not provided by kerberos it's

8569
07:46:10,718 --> 07:46:12,318
not in that ticket i showed you at the

8570
07:46:12,318 --> 07:46:14,080
top before

8571
07:46:14,080 --> 07:46:15,600
most applications can't see inside that

8572
07:46:15,600 --> 07:46:18,478
blue box i had

8573
07:46:20,080 --> 07:46:21,920
but you didn't come here to see me bust

8574
07:46:21,920 --> 07:46:23,920
into our unix machines you wanted to

8575
07:46:23,920 --> 07:46:25,520
hear about busting interactive directory

8576
07:46:25,520 --> 07:46:27,840
itself

8577
07:46:28,240 --> 07:46:30,318
so um

8578
07:46:30,318 --> 07:46:32,478
i got my name in lights thank you to the

8579
07:46:32,478 --> 07:46:34,638
friendly folks at sirt who publi

8580
07:46:34,638 --> 07:46:36,558
published this out this was november

8581
07:46:36,558 --> 07:46:38,080
last year of course i was eclipsed you

8582
07:46:38,080 --> 07:46:40,318
know i'm not too much later by log4j but

8583
07:46:40,318 --> 07:46:42,478
you know my small moment in the sun

8584
07:46:42,478 --> 07:46:44,798
and it's a small town it's nice to nice

8585
07:46:44,798 --> 07:46:46,318
to feel noticed

8586
07:46:46,318 --> 07:46:48,638
um

8587
07:46:48,958 --> 07:46:51,199
so

8588
07:46:51,280 --> 07:46:52,840
yeah full domain

8589
07:46:52,840 --> 07:46:55,600
takeover from any user

8590
07:46:55,600 --> 07:46:57,440
any service account

8591
07:46:57,440 --> 07:47:01,040
any computer laptop kiosk

8592
07:47:01,040 --> 07:47:02,878
you can become domain admin download the

8593
07:47:02,878 --> 07:47:04,638
full password database

8594
07:47:04,638 --> 07:47:08,718
and because i screwed up even on samba

8595
07:47:08,718 --> 07:47:10,240
i didn't add that deliberately on sam

8596
07:47:10,240 --> 07:47:13,680
but that was just a muck-up

8597
07:47:15,120 --> 07:47:16,638
so people have been asking can you

8598
07:47:16,638 --> 07:47:18,478
please explain this thing i want to hear

8599
07:47:18,478 --> 07:47:20,000
it in detail i spent a lot of time in

8600
07:47:20,000 --> 07:47:22,478
this talk but you know they've given me

8601
07:47:22,478 --> 07:47:24,478
45 minutes for my 25 minute talk so i

8602
07:47:24,478 --> 07:47:26,798
can talk a bit slower maybe they can fix

8603
07:47:26,798 --> 07:47:28,798
the clock

8604
07:47:28,798 --> 07:47:30,878
so basically what you do

8605
07:47:30,878 --> 07:47:32,718
is that using machine account quota this

8606
07:47:32,718 --> 07:47:35,920
bizarre feature in active directory to

8607
07:47:35,920 --> 07:47:37,920
that allows you to create for some

8608
07:47:37,920 --> 07:47:39,440
reason i don't know why for some reason

8609
07:47:39,440 --> 07:47:40,478
there is an active directory feature

8610
07:47:40,478 --> 07:47:42,718
that allows every user or computer to

8611
07:47:42,718 --> 07:47:44,718
create 10 machine accounts

8612
07:47:44,718 --> 07:47:47,200
now years ago i noticed that every user

8613
07:47:47,200 --> 07:47:48,638
or computer meant that every computer

8614
07:47:48,638 --> 07:47:51,040
could also create 10 and 10 and 10.

8615
07:47:51,040 --> 07:47:53,200
so i reported that that to microsoft 10

8616
07:47:53,200 --> 07:47:54,638
years ago that infinite machine accounts

8617
07:47:54,638 --> 07:47:55,760
was the thing

8618
07:47:55,760 --> 07:47:57,920
um anyway so i've known about this

8619
07:47:57,920 --> 07:47:59,520
feature for a while and ran away from it

8620
07:47:59,520 --> 07:48:01,920
as far as i could but then

8621
07:48:01,920 --> 07:48:03,680
i'm looking to cause trouble so came

8622
07:48:03,680 --> 07:48:05,920
back to me so you can you can create

8623
07:48:05,920 --> 07:48:07,200
these accounts

8624
07:48:07,200 --> 07:48:08,798
god knows why they thought this was a

8625
07:48:08,798 --> 07:48:10,000
good idea

8626
07:48:10,000 --> 07:48:12,318
but you do that and before november you

8627
07:48:12,318 --> 07:48:13,680
could also rename the account and you

8628
07:48:13,680 --> 07:48:16,080
could lose the dollar at that point

8629
07:48:16,080 --> 07:48:18,240
so i created this account and i renamed

8630
07:48:18,240 --> 07:48:20,160
it to dc now my domain controller is

8631
07:48:20,160 --> 07:48:22,080
called dc and has an account dc dollar

8632
07:48:22,080 --> 07:48:23,760
in the database

8633
07:48:23,760 --> 07:48:25,520
i then go and get a kerberos ticket as

8634
07:48:25,520 --> 07:48:27,600
dc and i get back a ticket as you can

8635
07:48:27,600 --> 07:48:30,000
see here i put the cd into the ticket to

8636
07:48:30,000 --> 07:48:31,360
try and keep track of what accounts are

8637
07:48:31,360 --> 07:48:34,318
what so i've gone and logged in as dc

8638
07:48:34,318 --> 07:48:36,000
and i've got a ticket genuinely printed

8639
07:48:36,000 --> 07:48:37,920
for dc my machine account totally low

8640
07:48:37,920 --> 07:48:39,520
privilege

8641
07:48:39,520 --> 07:48:42,000
i then renamed the machine account out

8642
07:48:42,000 --> 07:48:45,280
of the way so it doesn't exist anymore

8643
07:48:45,280 --> 07:48:47,520
so it's called not dc

8644
07:48:47,520 --> 07:48:49,120
and then i've gone back to the domain

8645
07:48:49,120 --> 07:48:51,680
controller and i've said pretty pleased

8646
07:48:51,680 --> 07:48:55,200
i would like a ticket to myself

8647
07:48:55,200 --> 07:48:56,878
for any other user using a feature

8648
07:48:56,878 --> 07:48:58,558
called svu to self this is something you

8649
07:48:58,558 --> 07:49:00,638
have an active directory um so you can

8650
07:49:00,638 --> 07:49:02,318
run like an ad job or a cron job but

8651
07:49:02,318 --> 07:49:04,318
with the right users or the right groups

8652
07:49:04,318 --> 07:49:05,440
for your users so they've got the right

8653
07:49:05,440 --> 07:49:06,958
privileges

8654
07:49:06,958 --> 07:49:08,318
so even though user hasn't typed in

8655
07:49:08,318 --> 07:49:09,680
their password you need to do something

8656
07:49:09,680 --> 07:49:11,280
as that user you want to know their

8657
07:49:11,280 --> 07:49:13,440
groups so svus yourself was was done and

8658
07:49:13,440 --> 07:49:15,360
because it's only to yourself

8659
07:49:15,360 --> 07:49:17,440
it's safe

8660
07:49:17,440 --> 07:49:18,878
well

8661
07:49:18,878 --> 07:49:21,040
the matching of my ticket which i

8662
07:49:21,040 --> 07:49:23,360
provided my proof which still said dc at

8663
07:49:23,360 --> 07:49:25,360
the top and it said well i can't find an

8664
07:49:25,360 --> 07:49:26,958
account by dc well let's check oh

8665
07:49:26,958 --> 07:49:30,318
there's a dc dollar i'll match to that

8666
07:49:30,318 --> 07:49:32,798
oh bother

8667
07:49:32,798 --> 07:49:34,558
and so julie matched to that and it came

8668
07:49:34,558 --> 07:49:36,080
back with a ticket printed with

8669
07:49:36,080 --> 07:49:38,080
whichever name i chose so of course i

8670
07:49:38,080 --> 07:49:40,478
chose the administrator and i had my hot

8671
07:49:40,478 --> 07:49:42,478
little hand a ticket encrypted to the

8672
07:49:42,478 --> 07:49:44,798
domain controller as administrator and

8673
07:49:44,798 --> 07:49:48,478
then i downloaded the password database

8674
07:49:50,558 --> 07:49:51,440
so

8675
07:49:51,440 --> 07:49:53,680
how did it happen

8676
07:49:53,680 --> 07:49:56,638
so we've got a mismatch between two

8677
07:49:56,638 --> 07:49:59,520
different eras of um

8678
07:49:59,520 --> 07:50:01,520
computer security protocols

8679
07:50:01,520 --> 07:50:03,120
we've got the historical kerberos from

8680
07:50:03,120 --> 07:50:06,000
the 1980s that's built around string

8681
07:50:06,000 --> 07:50:08,160
names as authenticators

8682
07:50:08,160 --> 07:50:09,760
so it was just you know it's this little

8683
07:50:09,760 --> 07:50:13,200
bag of of um of of characters

8684
07:50:13,200 --> 07:50:15,920
that is your name

8685
07:50:15,920 --> 07:50:17,840
and you know as i said administered by

8686
07:50:17,840 --> 07:50:19,440
highly privileged sysadmins an active

8687
07:50:19,440 --> 07:50:21,600
directory added complexity

8688
07:50:21,600 --> 07:50:23,840
it added delegate administration machine

8689
07:50:23,840 --> 07:50:26,240
account quota it added aliases to that

8690
07:50:26,240 --> 07:50:27,760
name so something more than one name

8691
07:50:27,760 --> 07:50:30,080
could be you it had a canonicalization

8692
07:50:30,080 --> 07:50:31,600
so that more than one name could be then

8693
07:50:31,600 --> 07:50:33,920
one name but only sometimes but most

8694
07:50:33,920 --> 07:50:36,000
particularly it added sids

8695
07:50:36,000 --> 07:50:38,638
and those and so you then had the

8696
07:50:38,638 --> 07:50:40,080
thought that only the said mattered so

8697
07:50:40,080 --> 07:50:41,360
these names were unimportant was it

8698
07:50:41,360 --> 07:50:43,440
important to protect them

8699
07:50:43,440 --> 07:50:45,440
because all active directory in windows

8700
07:50:45,440 --> 07:50:49,920
apples are evaluated based only on sids

8701
07:50:49,920 --> 07:50:51,440
but then we find things where we didn't

8702
07:50:51,440 --> 07:50:53,840
do that

8703
07:50:54,240 --> 07:50:56,958
so always take in combination

8704
07:50:56,958 --> 07:50:59,600
if you in any security system if you

8705
07:50:59,600 --> 07:51:01,360
allow people log on aliases and they are

8706
07:51:01,360 --> 07:51:03,120
awfully convenient

8707
07:51:03,120 --> 07:51:04,878
you must canonicalize and stick to that

8708
07:51:04,878 --> 07:51:06,558
clinicalization you must mark that i've

8709
07:51:06,558 --> 07:51:08,478
canonicalized this name and you must

8710
07:51:08,478 --> 07:51:09,920
neither further canonicalize it

8711
07:51:09,920 --> 07:51:11,600
otherwise we essentially get what log4j

8712
07:51:11,600 --> 07:51:13,600
did with keeping on iterating through

8713
07:51:13,600 --> 07:51:17,039
your um expansions

8714
07:51:17,360 --> 07:51:18,318
and

8715
07:51:18,318 --> 07:51:19,360
now

8716
07:51:19,360 --> 07:51:22,718
and and lock at your final user identity

8717
07:51:22,718 --> 07:51:25,360
never allow the end user to choose what

8718
07:51:25,360 --> 07:51:29,120
their internal identity looks like

8719
07:51:33,600 --> 07:51:35,440
so um

8720
07:51:35,440 --> 07:51:38,318
this is how we fixed it so um i say we i

8721
07:51:38,318 --> 07:51:39,520
i think i've got a better time i'll

8722
07:51:39,520 --> 07:51:40,798
actually um i actually had the great

8723
07:51:40,798 --> 07:51:42,318
pleasure of working with microsoft to

8724
07:51:42,318 --> 07:51:45,200
fix this i didn't um it took a while we

8725
07:51:45,200 --> 07:51:47,760
got some backs and forths but i ended up

8726
07:51:47,760 --> 07:51:50,558
in um started with monthly then it was

8727
07:51:50,558 --> 07:51:52,240
fortnightly and ended up being weekly

8728
07:51:52,240 --> 07:51:55,200
phone calls with microsoft's um security

8729
07:51:55,200 --> 07:51:57,920
msrc security team with the product team

8730
07:51:57,920 --> 07:52:00,160
as we banged out fixing this fixing all

8731
07:52:00,160 --> 07:52:02,398
the other things that i found begging

8732
07:52:02,398 --> 07:52:04,080
for more time

8733
07:52:04,080 --> 07:52:07,680
or haggling over more time

8734
07:52:07,680 --> 07:52:10,000
so it was actually an incredible process

8735
07:52:10,000 --> 07:52:12,958
working with them as i um as we went

8736
07:52:12,958 --> 07:52:14,240
through all the various things that went

8737
07:52:14,240 --> 07:52:15,920
wrong this is just one of the

8738
07:52:15,920 --> 07:52:17,600
the many things that i sort of found in

8739
07:52:17,600 --> 07:52:18,958
this sort of

8740
07:52:18,958 --> 07:52:21,280
uh set of sea of of issues

8741
07:52:21,280 --> 07:52:22,398
um

8742
07:52:22,398 --> 07:52:24,160
emoji was quite fun and i got to know

8743
07:52:24,160 --> 07:52:26,398
the the developers and uh engineers

8744
07:52:26,398 --> 07:52:29,120
there quite well over the time um it was

8745
07:52:29,120 --> 07:52:31,440
it was quite quite the process and we

8746
07:52:31,440 --> 07:52:33,040
essentially co-designed the solution and

8747
07:52:33,040 --> 07:52:36,000
we decided that uh the fix was to

8748
07:52:36,000 --> 07:52:40,718
basically have the user's sid be um

8749
07:52:40,718 --> 07:52:42,638
always checked against the name now

8750
07:52:42,638 --> 07:52:44,718
they're a there are good reasons when a

8751
07:52:44,718 --> 07:52:47,680
name can um can change very good reasons

8752
07:52:47,680 --> 07:52:49,840
why names change but in that case just

8753
07:52:49,840 --> 07:52:51,360
the ticket becomes invalid you just need

8754
07:52:51,360 --> 07:52:54,080
to get one again with the password

8755
07:52:54,080 --> 07:52:55,680
but otherwise we just make sure that

8756
07:52:55,680 --> 07:52:57,200
whenever the ticket is presented back to

8757
07:52:57,200 --> 07:52:59,360
the kdc that the name the seed must

8758
07:52:59,360 --> 07:53:00,878
always match together

8759
07:53:00,878 --> 07:53:02,638
and when and then the operations are

8760
07:53:02,638 --> 07:53:05,440
allowed to continue

8761
07:53:08,398 --> 07:53:10,398
we also put in some mitigations for the

8762
07:53:10,398 --> 07:53:12,878
mit style clients

8763
07:53:12,878 --> 07:53:13,760
so

8764
07:53:13,760 --> 07:53:16,558
i was able to get microsoft to add in an

8765
07:53:16,558 --> 07:53:18,240
extra buffer into the windows pack

8766
07:53:18,240 --> 07:53:20,478
that's really easy to parse

8767
07:53:20,478 --> 07:53:22,638
compared to the rest of it that contains

8768
07:53:22,638 --> 07:53:26,798
the sam account name in just utf-8 um so

8769
07:53:26,798 --> 07:53:28,000
the same character said that the one at

8770
07:53:28,000 --> 07:53:29,680
the top of the header is

8771
07:53:29,680 --> 07:53:31,440
um

8772
07:53:31,440 --> 07:53:33,040
i think it's easy anyway it's easy to

8773
07:53:33,040 --> 07:53:34,798
parse and it's got the sid

8774
07:53:34,798 --> 07:53:37,200
as well

8775
07:53:37,200 --> 07:53:38,958
so that's there it's fairly easy to work

8776
07:53:38,958 --> 07:53:41,440
with and less effort than trying to pull

8777
07:53:41,440 --> 07:53:43,440
apart ndr

8778
07:53:43,440 --> 07:53:45,280
um but only

8779
07:53:45,280 --> 07:53:47,600
samba can um

8780
07:53:47,600 --> 07:53:50,160
on the heimdall and with i think sssd

8781
07:53:50,160 --> 07:53:52,638
can pass this so far the the the problem

8782
07:53:52,638 --> 07:53:53,680
is that

8783
07:53:53,680 --> 07:53:56,240
the mit kerberos community um they've

8784
07:53:56,240 --> 07:53:57,520
they've been doing kerberos since the

8785
07:53:57,520 --> 07:54:00,318
1980s and honestly despite the fact that

8786
07:54:00,318 --> 07:54:01,360
we are

8787
07:54:01,360 --> 07:54:02,958
20 years into active directory there's

8788
07:54:02,958 --> 07:54:04,718
still a really strong feeling that

8789
07:54:04,718 --> 07:54:07,840
windows is on their turf

8790
07:54:07,840 --> 07:54:09,680
and so there's a really strong push back

8791
07:54:09,680 --> 07:54:11,440
against doing things for the vast

8792
07:54:11,440 --> 07:54:12,878
majority of clients out there that are

8793
07:54:12,878 --> 07:54:14,638
trying to interact with active active

8794
07:54:14,638 --> 07:54:18,000
directory kerberos domains because

8795
07:54:18,000 --> 07:54:18,958
active directory really is the

8796
07:54:18,958 --> 07:54:20,240
interloper

8797
07:54:20,240 --> 07:54:22,878
so it's become quite difficult to try

8798
07:54:22,878 --> 07:54:24,318
and come up with mitigations that you

8799
07:54:24,318 --> 07:54:25,840
could drop into software and say i

8800
07:54:25,840 --> 07:54:28,798
patched the software we're done

8801
07:54:28,798 --> 07:54:32,160
um and even uh working with um chatting

8802
07:54:32,160 --> 07:54:33,840
with some of the red hat folks they they

8803
07:54:33,840 --> 07:54:34,798
tried to turn on some of these

8804
07:54:34,798 --> 07:54:37,360
mitigations that broke networks and

8805
07:54:37,360 --> 07:54:40,878
we are in an ugly spot and so um

8806
07:54:40,878 --> 07:54:42,718
we've done i've done what i could to try

8807
07:54:42,718 --> 07:54:44,240
and lay the groundwork the active

8808
07:54:44,240 --> 07:54:45,840
directory dc's now provide enough

8809
07:54:45,840 --> 07:54:47,840
information that some of these attacks

8810
07:54:47,840 --> 07:54:49,440
could be avoided but it but

8811
07:54:49,440 --> 07:54:51,280
unfortunately the client side has been

8812
07:54:51,280 --> 07:54:52,878
rather slower than i'd hoped to pick it

8813
07:54:52,878 --> 07:54:54,878
up so that's why i'm giving

8814
07:54:54,878 --> 07:54:56,638
giving talks about kerberos at places

8815
07:54:56,638 --> 07:54:58,558
like this because some of you will be

8816
07:54:58,558 --> 07:55:00,638
able to get people much more motivated

8817
07:55:00,638 --> 07:55:05,239
to fix these things after shells pop

8818
07:55:06,558 --> 07:55:08,638
so here's the

8819
07:55:08,638 --> 07:55:10,318
the good the bad and the ugly the good

8820
07:55:10,318 --> 07:55:11,280
is this

8821
07:55:11,280 --> 07:55:12,878
so um

8822
07:55:12,878 --> 07:55:14,798
you'll notice the date on here of the

8823
07:55:14,798 --> 07:55:16,718
9th of december despite publishing a

8824
07:55:16,718 --> 07:55:19,760
very detailed set of security advisories

8825
07:55:19,760 --> 07:55:22,318
on our side and microsoft similarly on

8826
07:55:22,318 --> 07:55:24,558
the same day and even crediting andrew

8827
07:55:24,558 --> 07:55:26,160
butler catalyst and some even mentioned

8828
07:55:26,160 --> 07:55:28,398
catalyst and samba team it took a full

8829
07:55:28,398 --> 07:55:30,160
month before security twitter realized

8830
07:55:30,160 --> 07:55:32,240
that we had released the same bugs on

8831
07:55:32,240 --> 07:55:35,600
the same day at the same hour

8832
07:55:36,080 --> 07:55:36,958
um

8833
07:55:36,958 --> 07:55:38,798
and of course that our the security

8834
07:55:38,798 --> 07:55:40,718
researchers having noticed this then

8835
07:55:40,718 --> 07:55:42,318
very quickly realized that our ones came

8836
07:55:42,318 --> 07:55:44,718
with um source code and tests and all

8837
07:55:44,718 --> 07:55:46,398
those other good things

8838
07:55:46,398 --> 07:55:47,360
um

8839
07:55:47,360 --> 07:55:49,840
but yeah we did a lot of work to drop to

8840
07:55:49,840 --> 07:55:51,600
drop our releases on exactly the same

8841
07:55:51,600 --> 07:55:53,840
day

8842
07:55:55,920 --> 07:55:57,840
uh the bad was not being out of safe

8843
07:55:57,840 --> 07:55:58,878
world

8844
07:55:58,878 --> 07:56:02,160
um so i agree with microsoft a release

8845
07:56:02,160 --> 07:56:06,478
date of the ninth of november um 2021 um

8846
07:56:06,478 --> 07:56:07,760
a day that

8847
07:56:07,760 --> 07:56:08,638
i

8848
07:56:08,638 --> 07:56:10,558
i was exhausted by the time we got to

8849
07:56:10,558 --> 07:56:11,600
that point

8850
07:56:11,600 --> 07:56:13,760
um some about a month later some other

8851
07:56:13,760 --> 07:56:17,040
developers um good talented um security

8852
07:56:17,040 --> 07:56:19,520
engineers um

8853
07:56:19,520 --> 07:56:21,120
raised with microsoft what they now call

8854
07:56:21,120 --> 07:56:24,160
certified um which they've microsoft

8855
07:56:24,160 --> 07:56:26,318
eventually released in in may and also

8856
07:56:26,318 --> 07:56:27,680
raised essentially those same issues

8857
07:56:27,680 --> 07:56:30,000
with microsoft but i couldn't wait

8858
07:56:30,000 --> 07:56:32,240
my year was already a

8859
07:56:32,240 --> 07:56:34,958
ball of stress and it was a sort of

8860
07:56:34,958 --> 07:56:36,718
i've just gotta we have to fix this much

8861
07:56:36,718 --> 07:56:40,638
this much was was bad enough

8862
07:56:40,958 --> 07:56:42,798
and not having that plan for the mit

8863
07:56:42,798 --> 07:56:44,398
clients really gutted me because i

8864
07:56:44,398 --> 07:56:46,798
really do prefer to solve for everything

8865
07:56:46,798 --> 07:56:49,360
and having to say actually i can't

8866
07:56:49,360 --> 07:56:51,360
you know i can't um get the mit

8867
07:56:51,360 --> 07:56:53,680
community on board with doing something

8868
07:56:53,680 --> 07:56:54,958
was um

8869
07:56:54,958 --> 07:56:56,398
were saddening

8870
07:56:56,398 --> 07:56:58,558
but my own sanity had to come somewhere

8871
07:56:58,558 --> 07:57:01,040
in here um and

8872
07:57:01,040 --> 07:57:03,040
you know i can't i couldn't keep also my

8873
07:57:03,040 --> 07:57:04,718
my employer was incredibly generous with

8874
07:57:04,718 --> 07:57:08,318
my um with my time uh but you know there

8875
07:57:08,318 --> 07:57:11,440
are there are limits

8876
07:57:11,440 --> 07:57:14,160
um and the ugly uh

8877
07:57:14,160 --> 07:57:16,558
so i need everything we need advocacy to

8878
07:57:16,558 --> 07:57:18,240
get change

8879
07:57:18,240 --> 07:57:21,360
so we need people to actually um you

8880
07:57:21,360 --> 07:57:24,638
know push that for example we maybe

8881
07:57:24,638 --> 07:57:26,000
don't get a

8882
07:57:26,000 --> 07:57:27,360
ticket granting ticket unless you type

8883
07:57:27,360 --> 07:57:29,840
the name exactly right or you ask for

8884
07:57:29,840 --> 07:57:31,360
canonicalize because that means that the

8885
07:57:31,360 --> 07:57:32,878
right name will always get to the target

8886
07:57:32,878 --> 07:57:34,160
server

8887
07:57:34,160 --> 07:57:36,240
or always send the pack to the target

8888
07:57:36,240 --> 07:57:38,160
server so that at least it knows that it

8889
07:57:38,160 --> 07:57:39,440
can go and pull it apart and find the

8890
07:57:39,440 --> 07:57:43,200
correct name or some other combination

8891
07:57:43,200 --> 07:57:44,798
but i basically need people in this room

8892
07:57:44,798 --> 07:57:46,398
to actually go and

8893
07:57:46,398 --> 07:57:48,718
take a look at some of this stuff and

8894
07:57:48,718 --> 07:57:51,200
you know break some networks sadly

8895
07:57:51,200 --> 07:57:53,680
hopefully with permission and pen tests

8896
07:57:53,680 --> 07:57:54,958
but

8897
07:57:54,958 --> 07:57:56,798
i can't control that from here i've you

8898
07:57:56,798 --> 07:57:58,160
know this stuff's been public since

8899
07:57:58,160 --> 07:58:00,398
since november so now i'm just wanting

8900
07:58:00,398 --> 07:58:02,798
to actually raise a stink uh so that we

8901
07:58:02,798 --> 07:58:04,958
can actually go and get some defaults

8902
07:58:04,958 --> 07:58:07,280
changed and for people to realize that

8903
07:58:07,280 --> 07:58:09,440
you know things need to be done here

8904
07:58:09,440 --> 07:58:10,638
because a lot of the problem is going to

8905
07:58:10,638 --> 07:58:11,440
be

8906
07:58:11,440 --> 07:58:15,360
we can fix um real ssd on fedora on new

8907
07:58:15,360 --> 07:58:17,680
installs but so much more of kerberos

8908
07:58:17,680 --> 07:58:20,558
integration is hand-rolled stuff and

8909
07:58:20,558 --> 07:58:22,798
getting to that means making talks that

8910
07:58:22,798 --> 07:58:24,478
people go and go oh let's avoid the

8911
07:58:24,478 --> 07:58:25,760
dollar ticket attack let's actually

8912
07:58:25,760 --> 07:58:27,760
think we have to change these settings

8913
07:58:27,760 --> 07:58:30,717
or we have to be careful

8914
07:58:32,160 --> 07:58:34,878
so finally i want to say a a big thank

8915
07:58:34,878 --> 07:58:36,958
you thank you to the samba team who

8916
07:58:36,958 --> 07:58:38,798
supported me through the release process

8917
07:58:38,798 --> 07:58:39,840
i had

8918
07:58:39,840 --> 07:58:41,760
more developers working together on this

8919
07:58:41,760 --> 07:58:44,398
and the related issues than i've ever

8920
07:58:44,398 --> 07:58:46,398
seen working on a samba issue before i

8921
07:58:46,398 --> 07:58:48,398
had people from about five different

8922
07:58:48,398 --> 07:58:50,478
companies i even had a sample developer

8923
07:58:50,478 --> 07:58:52,638
who works for cymas the open ldap

8924
07:58:52,638 --> 07:58:54,638
company came back to doing samba

8925
07:58:54,638 --> 07:58:56,638
development to try and work on an access

8926
07:58:56,638 --> 07:58:58,080
control list feature we didn't end up

8927
07:58:58,080 --> 07:59:00,240
releasing that as part of it but um

8928
07:59:00,240 --> 07:59:02,878
nadia ivanova was provided even when she

8929
07:59:02,878 --> 07:59:04,558
didn't work on samba back into this

8930
07:59:04,558 --> 07:59:06,558
effort and greatly reduced my stress

8931
07:59:06,558 --> 07:59:10,160
other developers at red hat soucy um

8932
07:59:10,160 --> 07:59:12,000
and elsewhere um

8933
07:59:12,000 --> 07:59:13,760
you know als and cernette in particular

8934
07:59:13,760 --> 07:59:15,280
all stepped in to make you know the big

8935
07:59:15,280 --> 07:59:17,120
release possible

8936
07:59:17,120 --> 07:59:19,920
um univention who are great friends in

8937
07:59:19,920 --> 07:59:22,718
in in germany uh they chipped in with

8938
07:59:22,718 --> 07:59:24,638
some coin which is always very very much

8939
07:59:24,638 --> 07:59:26,240
needed when catalyst was covering the

8940
07:59:26,240 --> 07:59:28,398
can for three engineers who were working

8941
07:59:28,398 --> 07:59:30,638
on all this

8942
07:59:30,638 --> 07:59:33,440
so um yeah if um here's where you can

8943
07:59:33,440 --> 07:59:35,200
contact me uh there's my catalyst

8944
07:59:35,200 --> 07:59:36,878
address samba address if you want to

8945
07:59:36,878 --> 07:59:38,638
talk generic stuff catalyst if you'd

8946
07:59:38,638 --> 07:59:40,478
like to talk work

8947
07:59:40,478 --> 07:59:42,478
linkedin because apparently people talk

8948
07:59:42,478 --> 07:59:43,920
security on linkedin which i found very

8949
07:59:43,920 --> 07:59:45,120
useful

8950
07:59:45,120 --> 07:59:46,558
i'd love you to hire my time through

8951
07:59:46,558 --> 07:59:47,920
catalyst

8952
07:59:47,920 --> 07:59:49,840
because that's how i get to do more cool

8953
07:59:49,840 --> 07:59:51,840
stuff like that i understand we also

8954
07:59:51,840 --> 07:59:54,558
have security engineer jobs um

8955
07:59:54,558 --> 07:59:57,520
available so have a look at the

8956
07:59:57,520 --> 08:00:00,638
catalyst job site but uh yeah

8957
08:00:00,638 --> 08:00:02,718
and thank you so much to you you as an

8958
08:00:02,718 --> 08:00:04,958
audience and to carwaycon for for having

8959
08:00:04,958 --> 08:00:07,550
me here thank you

8960
08:00:07,550 --> 08:00:10,840
[Music]

8961
08:00:14,558 --> 08:00:17,280
awesome thank you so much andrew

8962
08:00:17,280 --> 08:00:20,000
um our last speaker for today is a

8963
08:00:20,000 --> 08:00:21,840
little bit of a treat

8964
08:00:21,840 --> 08:00:24,478
um to close out the conference for today

8965
08:00:24,478 --> 08:00:27,360
um a lot of you probably know them

8966
08:00:27,360 --> 08:00:29,600
because they're quite famous

8967
08:00:29,600 --> 08:00:33,680
um especially last year when they were

8968
08:00:33,680 --> 08:00:36,398
found to be hacking the prime minister

8969
08:00:36,398 --> 08:00:38,398
of australia

8970
08:00:38,398 --> 08:00:40,718
so it's an absolute pleasure

8971
08:00:40,718 --> 08:00:43,040
to introduce to you our next speaker

8972
08:00:43,040 --> 08:00:45,520
alex

8973
08:00:46,798 --> 08:00:49,039
thanks

8974
08:00:52,398 --> 08:00:54,478
hey everybody we've had a lot of fun

8975
08:00:54,478 --> 08:00:56,080
today i thought we could just quiet down

8976
08:00:56,080 --> 08:00:57,200
and talk about computers for a little

8977
08:00:57,200 --> 08:00:58,240
while

8978
08:00:58,240 --> 08:01:00,160
so my name is alex but you can call me

8979
08:01:00,160 --> 08:01:01,920
alex in the double quotes you may be

8980
08:01:01,920 --> 08:01:03,520
wondering why the double quotes is very

8981
08:01:03,520 --> 08:01:05,520
simple a few years ago some journalists

8982
08:01:05,520 --> 08:01:07,040
wrote about me and they referred to me

8983
08:01:07,040 --> 08:01:09,840
as a hacker who goes by the name alex in

8984
08:01:09,840 --> 08:01:11,920
double quotes

8985
08:01:11,920 --> 08:01:14,080
alice is also my real name and so this

8986
08:01:14,080 --> 08:01:15,840
is this is my hacker name now more

8987
08:01:15,840 --> 08:01:17,360
recently

8988
08:01:17,360 --> 08:01:19,040
thank you yeah no it's my whole life

8989
08:01:19,040 --> 08:01:20,638
more recently some journalists wrote

8990
08:01:20,638 --> 08:01:22,398
about me like this

8991
08:01:22,398 --> 08:01:24,798
and they referred to me as a

8992
08:01:24,798 --> 08:01:26,558
air quotes hacker

8993
08:01:26,558 --> 08:01:27,520
so

8994
08:01:27,520 --> 08:01:30,558
i'm a fraud now i'm a poison out i guess

8995
08:01:30,558 --> 08:01:32,160
also i'd just like to address this a

8996
08:01:32,160 --> 08:01:33,680
couple people more than a couple people

8997
08:01:33,680 --> 08:01:35,920
have asked me today like oh hey alex so

8998
08:01:35,920 --> 08:01:37,120
have you like you know have you hacked

8999
08:01:37,120 --> 08:01:38,718
any more like celebrities are you have

9000
08:01:38,718 --> 08:01:39,840
you targeted any more like prime

9001
08:01:39,840 --> 08:01:41,680
ministers brought it back it was one

9002
08:01:41,680 --> 08:01:42,558
time

9003
08:01:42,558 --> 08:01:43,680
and like

9004
08:01:43,680 --> 08:01:45,520
this is not my regular thing this is not

9005
08:01:45,520 --> 08:01:46,638
like

9006
08:01:46,638 --> 08:01:48,878
yeah okay that's all i also used to help

9007
08:01:48,878 --> 08:01:49,920
out with this other conference called

9008
08:01:49,920 --> 08:01:51,520
purplecon which is a conference that

9009
08:01:51,520 --> 08:01:53,760
instead of looking like this looked like

9010
08:01:53,760 --> 08:01:54,558
this

9011
08:01:54,558 --> 08:01:56,240
and we really liked it we had lots of

9012
08:01:56,240 --> 08:01:57,520
fun we did alongside kawaikon and

9013
08:01:57,520 --> 08:01:59,520
everything and um i can kind of feel in

9014
08:01:59,520 --> 08:02:01,520
the air people asking the question like

9015
08:02:01,520 --> 08:02:02,878
will there be another purple con one day

9016
08:02:02,878 --> 08:02:04,000
will there be another purple con

9017
08:02:04,000 --> 08:02:05,760
adjacent thing one day and i think

9018
08:02:05,760 --> 08:02:06,958
that's such an interesting question you

9019
08:02:06,958 --> 08:02:08,000
know and i think you should stay curious

9020
08:02:08,000 --> 08:02:09,760
and keep asking questions like that

9021
08:02:09,760 --> 08:02:11,200
so

9022
08:02:11,200 --> 08:02:13,120
professionally i work at atlassian on

9023
08:02:13,120 --> 08:02:14,718
the red team there and people use the

9024
08:02:14,718 --> 08:02:15,920
word red team to me a lot of different

9025
08:02:15,920 --> 08:02:17,680
things so please let me be very very

9026
08:02:17,680 --> 08:02:19,040
precise about what i do mean also this

9027
08:02:19,040 --> 08:02:20,558
says purplecon still

9028
08:02:20,558 --> 08:02:22,160
one sec that must've been confusing me

9029
08:02:22,160 --> 08:02:23,200
saying purple coin and there was red

9030
08:02:23,200 --> 08:02:24,798
team up on the slides jeez how did you

9031
08:02:24,798 --> 08:02:26,080
keep up with that

9032
08:02:26,080 --> 08:02:28,878
so never mind about this so yeah

9033
08:02:28,878 --> 08:02:30,958
and it's very simple what we do there we

9034
08:02:30,958 --> 08:02:32,878
there's three steps we step one is to

9035
08:02:32,878 --> 08:02:34,080
hack it lastly and exactly like a real

9036
08:02:34,080 --> 08:02:36,478
hacker would step two is to then share

9037
08:02:36,478 --> 08:02:37,440
everything we find with the licensing

9038
08:02:37,440 --> 08:02:38,478
because real hackers don't tell you what

9039
08:02:38,478 --> 08:02:40,398
you missed and finally we then sell the

9040
08:02:40,398 --> 08:02:42,240
stolen data on the dark web for big

9041
08:02:42,240 --> 08:02:44,798
money and we no no not really not really

9042
08:02:44,798 --> 08:02:45,760
we don't actually do that we don't

9043
08:02:45,760 --> 08:02:47,520
really normally sell on the dark web one

9044
08:02:47,520 --> 08:02:49,520
time i was doing this exact slide and

9045
08:02:49,520 --> 08:02:50,718
there was a glitch or something and the

9046
08:02:50,718 --> 08:02:53,520
big red x didn't appear

9047
08:02:53,520 --> 08:02:54,958
and it was at work and i was like no

9048
08:02:54,958 --> 08:02:56,798
you've got to believe me uh that was

9049
08:02:56,798 --> 08:02:58,398
rough

9050
08:02:58,398 --> 08:02:59,600
so but today i want to talk about uh

9051
08:02:59,600 --> 08:03:01,040
something else that we're doing called

9052
08:03:01,040 --> 08:03:03,760
icarus labs they let me name that uh the

9053
08:03:03,760 --> 08:03:04,718
the content we're talking about today

9054
08:03:04,718 --> 08:03:06,000
was brought to you back labs so what

9055
08:03:06,000 --> 08:03:08,240
that is is we get people who work in

9056
08:03:08,240 --> 08:03:10,478
security or anywhere really to spend

9057
08:03:10,478 --> 08:03:12,398
three months doing security research of

9058
08:03:12,398 --> 08:03:13,840
any kind

9059
08:03:13,840 --> 08:03:15,520
and the goal is to advance the state of

9060
08:03:15,520 --> 08:03:16,718
the art so try and do something new that

9061
08:03:16,718 --> 08:03:19,120
wasn't there before and

9062
08:03:19,120 --> 08:03:20,798
one of the other goals is to not fail

9063
08:03:20,798 --> 08:03:22,558
from a lack of ambition so we want

9064
08:03:22,558 --> 08:03:24,478
everyone to like you know go hard on it

9065
08:03:24,478 --> 08:03:26,718
and so this is about what i did in my

9066
08:03:26,718 --> 08:03:28,718
three months of doing equals labs

9067
08:03:28,718 --> 08:03:30,318
it all started when i was talking to my

9068
08:03:30,318 --> 08:03:32,080
teammate and they asked me what i

9069
08:03:32,080 --> 08:03:33,920
thought it would take to not get caught

9070
08:03:33,920 --> 08:03:35,680
for a year and what i mean by not get

9071
08:03:35,680 --> 08:03:37,920
caught for a year i mean that like you

9072
08:03:37,920 --> 08:03:39,280
hack someone's computer probably their

9073
08:03:39,280 --> 08:03:40,798
like actual personal computer or their

9074
08:03:40,798 --> 08:03:42,878
work computer their laptop and you put

9075
08:03:42,878 --> 08:03:44,240
malware on it so you can remote control

9076
08:03:44,240 --> 08:03:45,920
it and then that malware keeps going and

9077
08:03:45,920 --> 08:03:47,040
it's still running on that computer one

9078
08:03:47,040 --> 08:03:48,000
year later

9079
08:03:48,000 --> 08:03:48,878
and

9080
08:03:48,878 --> 08:03:50,638
one necessary thing for that to happen

9081
08:03:50,638 --> 08:03:52,478
is for you to not get caught and so for

9082
08:03:52,478 --> 08:03:53,760
nobody to notice that there is nowhere

9083
08:03:53,760 --> 08:03:55,440
on that computer one year later and i

9084
08:03:55,440 --> 08:03:57,280
was like okay that sounds interesting uh

9085
08:03:57,280 --> 08:03:58,878
also for the purpose also you should all

9086
08:03:58,878 --> 08:03:59,920
know this talking about mac os

9087
08:03:59,920 --> 08:04:01,040
specifically because those are the kinds

9088
08:04:01,040 --> 08:04:02,160
of computers we were targeting so this

9089
08:04:02,160 --> 08:04:03,040
is about

9090
08:04:03,040 --> 08:04:05,840
doing all this on a mac computer

9091
08:04:05,840 --> 08:04:07,920
and so i was like hmm how do i actually

9092
08:04:07,920 --> 08:04:09,520
do that what do i guess i need to find

9093
08:04:09,520 --> 08:04:11,280
somewhere to like put the malware on the

9094
08:04:11,280 --> 08:04:12,718
computer that's like sneaky that no one

9095
08:04:12,718 --> 08:04:14,798
knows it's there but also it like if i

9096
08:04:14,798 --> 08:04:16,398
restart the computer or it goes to sleep

9097
08:04:16,398 --> 08:04:17,680
or whatever it'll keep running it'll

9098
08:04:17,680 --> 08:04:18,798
keep running the same level over and

9099
08:04:18,798 --> 08:04:20,080
over and i don't i don't want to do like

9100
08:04:20,080 --> 08:04:21,280
a cronjob or something everyone does

9101
08:04:21,280 --> 08:04:22,878
that i need something like new then i

9102
08:04:22,878 --> 08:04:24,558
was like hmm actually what should i do

9103
08:04:24,558 --> 08:04:26,000
because like there's a lot of places on

9104
08:04:26,000 --> 08:04:27,040
a mac i don't really know that much

9105
08:04:27,040 --> 08:04:29,200
about mac security and then i realized

9106
08:04:29,200 --> 08:04:31,280
that people don't actually run like a

9107
08:04:31,280 --> 08:04:32,718
mac exactly like it's fresh out of the

9108
08:04:32,718 --> 08:04:33,840
apple store

9109
08:04:33,840 --> 08:04:35,760
like on the actual day-to-day computer

9110
08:04:35,760 --> 08:04:37,760
they like go to they get this like

9111
08:04:37,760 --> 08:04:39,280
beautiful pristine actually fairly well

9112
08:04:39,280 --> 08:04:41,280
secured security engineered thing and

9113
08:04:41,280 --> 08:04:43,040
they're like oh wait i need to develop

9114
08:04:43,040 --> 08:04:45,040
software so i better install like

9115
08:04:45,040 --> 08:04:46,638
homebrew and i better install a cool

9116
08:04:46,638 --> 08:04:48,558
terminal and i better also install

9117
08:04:48,558 --> 08:04:50,478
another cool terminal and gonna be

9118
08:04:50,478 --> 08:04:52,638
docker i think for some reason and also

9119
08:04:52,638 --> 08:04:53,840
i don't know if you've ever set up a mac

9120
08:04:53,840 --> 08:04:55,280
to develop software you have to click

9121
08:04:55,280 --> 08:04:57,360
install on this and type in your studio

9122
08:04:57,360 --> 08:04:59,040
password on this like a lot of times

9123
08:04:59,040 --> 08:05:00,718
before you're ready to develop software

9124
08:05:00,718 --> 08:05:02,558
and i was like surely instead of trying

9125
08:05:02,558 --> 08:05:04,318
to like hack mac os so instead of trying

9126
08:05:04,318 --> 08:05:05,680
to find somewhere to persist malware and

9127
08:05:05,680 --> 08:05:07,600
mac os i do one of these things because

9128
08:05:07,600 --> 08:05:08,718
everyone who's developing software has

9129
08:05:08,718 --> 08:05:10,080
all these things as well

9130
08:05:10,080 --> 08:05:11,360
and i was like actually which one should

9131
08:05:11,360 --> 08:05:13,520
i do where do i even start and i asked

9132
08:05:13,520 --> 08:05:15,360
myself well which ones of these execute

9133
08:05:15,360 --> 08:05:17,360
code actually all execute code so it was

9134
08:05:17,360 --> 08:05:19,440
really easy but i ended up going with

9135
08:05:19,440 --> 08:05:21,120
docker because as like docker has like

9136
08:05:21,120 --> 08:05:22,318
the most features and people try and do

9137
08:05:22,318 --> 08:05:24,638
the most stuff with it and if you don't

9138
08:05:24,638 --> 08:05:26,000
know docker desktop on mac os you get

9139
08:05:26,000 --> 08:05:27,200
this cute little whale icon in the

9140
08:05:27,200 --> 08:05:28,398
corner and that's how you know you're

9141
08:05:28,398 --> 08:05:30,240
doing docker

9142
08:05:30,240 --> 08:05:32,718
and so i hear many of you asking what is

9143
08:05:32,718 --> 08:05:34,478
docker i

9144
08:05:34,478 --> 08:05:35,920
i don't know actually really how it

9145
08:05:35,920 --> 08:05:37,520
works it

9146
08:05:37,520 --> 08:05:39,280
seems really complicated

9147
08:05:39,280 --> 08:05:40,398
it seems like there's a lot going on

9148
08:05:40,398 --> 08:05:41,840
there how do you use docker i know a

9149
08:05:41,840 --> 08:05:43,440
little bit about this i know back in the

9150
08:05:43,440 --> 08:05:44,478
day when you wanted to get someone

9151
08:05:44,478 --> 08:05:46,000
else's code you'd like use git and you'd

9152
08:05:46,000 --> 08:05:47,520
be like please give me a copy of this

9153
08:05:47,520 --> 08:05:49,360
other code and then you'd be like now

9154
08:05:49,360 --> 08:05:50,798
like that's what git does it gives you a

9155
08:05:50,798 --> 08:05:52,080
copy of the code and then you're like

9156
08:05:52,080 --> 08:05:53,920
now i'd like to run the code and you'd

9157
08:05:53,920 --> 08:05:54,958
be like okay well hang on i better

9158
08:05:54,958 --> 08:05:56,080
install the requirements i better like

9159
08:05:56,080 --> 08:05:57,760
read the file that tells me what things

9160
08:05:57,760 --> 08:05:58,958
to install and then you try and run the

9161
08:05:58,958 --> 08:06:00,000
code and it's like okay no actually

9162
08:06:00,000 --> 08:06:01,920
that's the wrong python version i better

9163
08:06:01,920 --> 08:06:03,520
actually find out where that is and then

9164
08:06:03,520 --> 08:06:04,878
like eventually eventually you actually

9165
08:06:04,878 --> 08:06:06,160
get to run the code and i think one of

9166
08:06:06,160 --> 08:06:07,920
the problems stock is not to solve is

9167
08:06:07,920 --> 08:06:08,878
you don't have to do that anymore

9168
08:06:08,878 --> 08:06:10,000
because now instead of just downloading

9169
08:06:10,000 --> 08:06:11,278
the code you also download the whole

9170
08:06:11,278 --> 08:06:12,960
like computer needed to run the code and

9171
08:06:12,960 --> 08:06:14,078
so it has all the dependencies it has

9172
08:06:14,078 --> 08:06:15,200
the right operating system and you just

9173
08:06:15,200 --> 08:06:16,558
you just say run and it will always run

9174
08:06:16,558 --> 08:06:17,840
because it's the same thing as they run

9175
08:06:17,840 --> 08:06:19,122
when they made it for you so that's

9176
08:06:19,122 --> 08:06:20,800
inconvenient that seems useful

9177
08:06:20,800 --> 08:06:22,718
uh how does it work underneath

9178
08:06:22,718 --> 08:06:24,878
i don't know actually uh it seems really

9179
08:06:24,878 --> 08:06:26,398
complicated i know it doesn't use

9180
08:06:26,398 --> 08:06:29,040
virtual machines that who would do that

9181
08:06:29,040 --> 08:06:30,160
actually using these other things which

9182
08:06:30,160 --> 08:06:31,520
are called containers which is a lot

9183
08:06:31,520 --> 08:06:33,438
like virtual machines except that i

9184
08:06:33,438 --> 08:06:34,640
think that if one of the differences is

9185
08:06:34,640 --> 08:06:35,680
like instead of having like a whole

9186
08:06:35,680 --> 08:06:37,278
virtual cpu and a whole virtual ram and

9187
08:06:37,278 --> 08:06:38,878
everything it uses your real cpu and

9188
08:06:38,878 --> 08:06:40,078
your real ram but it's still separate

9189
08:06:40,078 --> 08:06:41,758
from the rest of your computer but i

9190
08:06:41,758 --> 08:06:43,360
actually really don't know what the diff

9191
08:06:43,360 --> 08:06:44,878
i don't know there's a there's a lot

9192
08:06:44,878 --> 08:06:46,480
going on in there

9193
08:06:46,480 --> 08:06:47,918
and so then i was like okay uh time to

9194
08:06:47,918 --> 08:06:49,520
try and hack this thing or trying to try

9195
08:06:49,520 --> 08:06:51,122
and make this thing run mellow for me

9196
08:06:51,122 --> 08:06:53,680
how does this work ah let me just google

9197
08:06:53,680 --> 08:06:55,438
how do i read i didn't want to read any

9198
08:06:55,438 --> 08:06:57,438
dots about docker any documentation and

9199
08:06:57,438 --> 08:06:59,680
then i was like oh okay oh that's that's

9200
08:06:59,680 --> 08:07:01,200
a lot of words actually i really don't

9201
08:07:01,200 --> 08:07:03,520
want to read all those words so i just

9202
08:07:03,520 --> 08:07:04,960
like let me just search for like execute

9203
08:07:04,960 --> 08:07:06,398
or like execute code because like

9204
08:07:06,398 --> 08:07:07,598
something somewhere has got to execute

9205
08:07:07,598 --> 08:07:10,878
something and then i saw this nonsense i

9206
08:07:10,878 --> 08:07:12,558
don't really know what this is this is a

9207
08:07:12,558 --> 08:07:14,480
bunch of like something about running

9208
08:07:14,480 --> 08:07:16,238
stuff but the important thing is that it

9209
08:07:16,238 --> 08:07:18,160
has like a path in there and it says

9210
08:07:18,160 --> 08:07:19,598
like

9211
08:07:19,598 --> 08:07:21,840
docker will execute whatever file is at

9212
08:07:21,840 --> 08:07:23,278
that path and you can change the path to

9213
08:07:23,278 --> 08:07:25,278
be whatever path you want it to be and i

9214
08:07:25,278 --> 08:07:26,480
was like that's no that's good that's

9215
08:07:26,480 --> 08:07:28,238
that sounds that's i could put i could

9216
08:07:28,238 --> 08:07:29,598
make it execute something that i chose

9217
08:07:29,598 --> 08:07:30,878
that sounds great

9218
08:07:30,878 --> 08:07:32,480
so i was like wait what do i put there

9219
08:07:32,480 --> 08:07:34,078
uh maybe i should put malware there yeah

9220
08:07:34,078 --> 08:07:35,680
no i should do that for my weather and

9221
08:07:35,680 --> 08:07:38,000
so then i did that and so i replaced

9222
08:07:38,000 --> 08:07:39,918
this path with like the malware that i

9223
08:07:39,918 --> 08:07:41,520
just already had lying around and then i

9224
08:07:41,520 --> 08:07:42,878
was like cool i guess i better check if

9225
08:07:42,878 --> 08:07:44,558
it runs so like time to run i'll just

9226
08:07:44,558 --> 08:07:46,000
run docker and it'll run my malware too

9227
08:07:46,000 --> 08:07:47,680
and it did but it also just did not like

9228
08:07:47,680 --> 08:07:49,598
it it also docker just fully crashed

9229
08:07:49,598 --> 08:07:51,360
because like apparently whatever that

9230
08:07:51,360 --> 08:07:53,122
thing that i was replacing actually did

9231
08:07:53,122 --> 08:07:54,718
something and so if you just replace it

9232
08:07:54,718 --> 08:07:56,480
with just malware it doesn't do the

9233
08:07:56,480 --> 08:07:57,840
thing that docker needs it to do so i

9234
08:07:57,840 --> 08:07:59,520
was like that's so fair that's actually

9235
08:07:59,520 --> 08:08:01,360
so reasonable

9236
08:08:01,360 --> 08:08:02,718
um

9237
08:08:02,718 --> 08:08:04,238
so i was like okay okay what is this

9238
08:08:04,238 --> 08:08:05,122
thing i

9239
08:08:05,122 --> 08:08:06,558
read a bit more closely it said oh it's

9240
08:08:06,558 --> 08:08:08,320
my run the c replacement and i was like

9241
08:08:08,320 --> 08:08:09,758
what is what what is that i don't know

9242
08:08:09,758 --> 08:08:11,122
what run c is and i looked it up and

9243
08:08:11,122 --> 08:08:12,480
it's on github and it's some nerd thing

9244
08:08:12,480 --> 08:08:14,558
which is for containers or something

9245
08:08:14,558 --> 08:08:16,160
and you i don't still don't really know

9246
08:08:16,160 --> 08:08:18,078
what it does but i do know there's open

9247
08:08:18,078 --> 08:08:20,160
source and that's great for me so i was

9248
08:08:20,160 --> 08:08:22,398
just like oh i'll just like download the

9249
08:08:22,398 --> 08:08:24,398
source and modify it to also include my

9250
08:08:24,398 --> 08:08:25,758
malware so it does everything it's

9251
08:08:25,758 --> 08:08:26,878
supposed to do and then it also

9252
08:08:26,878 --> 08:08:28,238
downloads and executes the malware from

9253
08:08:28,238 --> 08:08:30,160
earlier so now we have to run docker and

9254
08:08:30,160 --> 08:08:31,918
do my fun bonus malware features we

9255
08:08:31,918 --> 08:08:33,278
already talked about it

9256
08:08:33,278 --> 08:08:35,360
and so i did that and i made my new

9257
08:08:35,360 --> 08:08:36,878
version of it

9258
08:08:36,878 --> 08:08:38,480
and so here's what it looks like i want

9259
08:08:38,480 --> 08:08:39,438
to test it out so here's what it looks

9260
08:08:39,438 --> 08:08:40,480
like when you run hello world without

9261
08:08:40,480 --> 08:08:41,598
the malware and here's what it looks

9262
08:08:41,598 --> 08:08:42,878
like when you want it with the malware

9263
08:08:42,878 --> 08:08:45,200
and it's it's good uh but meanwhile on

9264
08:08:45,200 --> 08:08:46,640
the other end where on the other end

9265
08:08:46,640 --> 08:08:48,000
where i'm looking at my malware control

9266
08:08:48,000 --> 08:08:49,840
panel thing and i'm like oh cool it's

9267
08:08:49,840 --> 08:08:51,200
like a shell it's cool it's working my

9268
08:08:51,200 --> 08:08:52,320
mail is actually running on my computer

9269
08:08:52,320 --> 08:08:53,278
this is great

9270
08:08:53,278 --> 08:08:55,438
and then i was like actually hold on why

9271
08:08:55,438 --> 08:08:57,040
am i running as root i didn't run this

9272
08:08:57,040 --> 08:08:58,480
as root and my computer is not called

9273
08:08:58,480 --> 08:09:00,718
docker desktop and also why is there mac

9274
08:09:00,718 --> 08:09:02,640
like folders that are only on macs and

9275
08:09:02,640 --> 08:09:05,122
also linux only folders also what is

9276
08:09:05,122 --> 08:09:07,122
this what is host mouse where what is

9277
08:09:07,122 --> 08:09:09,040
this where am i i don't i want to go

9278
08:09:09,040 --> 08:09:11,360
home i don't want to be here

9279
08:09:11,360 --> 08:09:12,878
and i was like oh this is docker maybe

9280
08:09:12,878 --> 08:09:14,160
i'm like trapped inside a container and

9281
08:09:14,160 --> 08:09:15,360
i was like no wait but there's mac

9282
08:09:15,360 --> 08:09:16,718
things in there and maybe i have to

9283
08:09:16,718 --> 08:09:18,480
inside a virtual machine actually it was

9284
08:09:18,480 --> 08:09:19,918
much worse

9285
08:09:19,918 --> 08:09:21,122
there's this special thing called the

9286
08:09:21,122 --> 08:09:22,800
docker service container apparently and

9287
08:09:22,800 --> 08:09:24,320
this is where the malware was running

9288
08:09:24,320 --> 08:09:26,238
and this docker service container is for

9289
08:09:26,238 --> 08:09:28,160
some reason inside a linux virtual

9290
08:09:28,160 --> 08:09:30,000
machine and that links virtual machine

9291
08:09:30,000 --> 08:09:31,278
is on your computer when you're running

9292
08:09:31,278 --> 08:09:32,878
mac this took me quite some time to like

9293
08:09:32,878 --> 08:09:34,398
figure out and also process emotionally

9294
08:09:34,398 --> 08:09:35,680
but it's true

9295
08:09:35,680 --> 08:09:36,960
and

9296
08:09:36,960 --> 08:09:38,878
so i was like i didn't ask for this i

9297
08:09:38,878 --> 08:09:39,840
just wanted i thought i was gonna be

9298
08:09:39,840 --> 08:09:41,122
running on my normal computer but this

9299
08:09:41,122 --> 08:09:42,320
is happening now

9300
08:09:42,320 --> 08:09:44,878
so i was like really i don't remember

9301
08:09:44,878 --> 08:09:46,320
there being a virtual machine like i had

9302
08:09:46,320 --> 08:09:47,520
installed docker like i don't remember

9303
08:09:47,520 --> 08:09:48,558
they happen i don't remember the part

9304
08:09:48,558 --> 08:09:49,520
where there's a virtual machine i think

9305
08:09:49,520 --> 08:09:50,480
i would know if there's a virtual

9306
08:09:50,480 --> 08:09:52,078
machine on my computer

9307
08:09:52,078 --> 08:09:54,078
uh and so to to give you a little fine

9308
08:09:54,078 --> 08:09:55,840
exercise for how that worked uh let's

9309
08:09:55,840 --> 08:09:56,960
install docker desktop and you see if

9310
08:09:56,960 --> 08:09:58,000
you can spot the part where we install

9311
08:09:58,000 --> 08:10:00,238
the virtual machine so firstly we it's

9312
08:10:00,238 --> 08:10:01,438
really simple you just do brew install

9313
08:10:01,438 --> 08:10:03,200
docker except just kidding no you don't

9314
08:10:03,200 --> 08:10:04,878
you can't do that you have to go to some

9315
08:10:04,878 --> 08:10:06,160
website and you have to google it and

9316
08:10:06,160 --> 08:10:07,520
you have to be like which version do i

9317
08:10:07,520 --> 08:10:08,800
click on because which kind of mac do i

9318
08:10:08,800 --> 08:10:10,320
have and you have to be like is there

9319
08:10:10,320 --> 08:10:12,078
any virtual machines here no okay seems

9320
08:10:12,078 --> 08:10:12,960
fine

9321
08:10:12,960 --> 08:10:14,480
and then you keep going and you're like

9322
08:10:14,480 --> 08:10:16,238
okay time to on mac os to install

9323
08:10:16,238 --> 08:10:17,758
something you have to drag and drop it

9324
08:10:17,758 --> 08:10:19,040
into the applications folder that's the

9325
08:10:19,040 --> 08:10:20,000
way to do it so they give you a nice

9326
08:10:20,000 --> 08:10:21,200
picture to do it

9327
08:10:21,200 --> 08:10:22,398
and then you're cool i'll just wait for

9328
08:10:22,398 --> 08:10:23,520
that to happen it takes quite a long

9329
08:10:23,520 --> 08:10:25,840
time and then it's like oh you need to

9330
08:10:25,840 --> 08:10:27,122
give me i need to give my password this

9331
08:10:27,122 --> 08:10:29,040
is a bit what's this about uh okay i'll

9332
08:10:29,040 --> 08:10:30,000
probably that's i'll just type my

9333
08:10:30,000 --> 08:10:32,320
password into this seems good

9334
08:10:32,320 --> 08:10:33,200
uh

9335
08:10:33,200 --> 08:10:34,640
every time you do anything on mac os you

9336
08:10:34,640 --> 08:10:35,840
have to type your password and it says

9337
08:10:35,840 --> 08:10:37,598
oh it's trying to install a helper tool

9338
08:10:37,598 --> 08:10:39,840
you like helper tools come on like

9339
08:10:39,840 --> 08:10:41,200
as far as i know this is real this is

9340
08:10:41,200 --> 08:10:42,558
legit this is not a security fight this

9341
08:10:42,558 --> 08:10:43,598
seems to this seems to be fine this

9342
08:10:43,598 --> 08:10:44,878
seems to be some other docker related

9343
08:10:44,878 --> 08:10:46,558
thing it needs to do uh and then there

9344
08:10:46,558 --> 08:10:47,680
we go now we're running docker desktop

9345
08:10:47,680 --> 08:10:49,200
that's it it's in a little while corner

9346
08:10:49,200 --> 08:10:51,040
did anyone see that's at the end did you

9347
08:10:51,040 --> 08:10:52,398
like it did anyone see the part where

9348
08:10:52,398 --> 08:10:53,918
installed linux virtual machine i didn't

9349
08:10:53,918 --> 08:10:55,200
do that

9350
08:10:55,200 --> 08:10:56,800
i didn't do that

9351
08:10:56,800 --> 08:10:59,438
uh but it's there because if you look on

9352
08:10:59,438 --> 08:11:00,320
your computer if you look at the running

9353
08:11:00,320 --> 08:11:02,480
processes there's this com.hyperkit

9354
08:11:02,480 --> 08:11:04,160
thing like google hyperkit it's some

9355
08:11:04,160 --> 08:11:05,918
very very special very small linux

9356
08:11:05,918 --> 08:11:07,918
virtual machine meant for this reason

9357
08:11:07,918 --> 08:11:10,000
and i was like why is this happening to

9358
08:11:10,000 --> 08:11:10,878
me

9359
08:11:10,878 --> 08:11:12,000
at all

9360
08:11:12,000 --> 08:11:13,680
because i didn't you know ask for this

9361
08:11:13,680 --> 08:11:15,200
and so i was like it turns out the

9362
08:11:15,200 --> 08:11:16,640
answer to this question uh to answer

9363
08:11:16,640 --> 08:11:17,598
this question all we need to do is

9364
08:11:17,598 --> 08:11:19,680
answer one question very simply which is

9365
08:11:19,680 --> 08:11:21,598
what operating system does docker run on

9366
08:11:21,598 --> 08:11:23,200
what operating system can it run on and

9367
08:11:23,200 --> 08:11:26,238
the answer is docker runs on linux

9368
08:11:26,238 --> 08:11:28,800
that's that's it that's the end

9369
08:11:28,800 --> 08:11:30,398
however

9370
08:11:30,398 --> 08:11:32,238
there's a lot of people who have mac and

9371
08:11:32,238 --> 08:11:34,558
windows and maybe they would like docker

9372
08:11:34,558 --> 08:11:35,918
to run on their computer because like

9373
08:11:35,918 --> 08:11:37,360
you know maybe i don't use a linux

9374
08:11:37,360 --> 08:11:38,800
desktop maybe it's not the year for that

9375
08:11:38,800 --> 08:11:41,040
and so but i'd like docker to be there

9376
08:11:41,040 --> 08:11:42,238
and so

9377
08:11:42,238 --> 08:11:43,680
like the problem is that docker and

9378
08:11:43,680 --> 08:11:45,278
linux is working but it doesn't work on

9379
08:11:45,278 --> 08:11:46,718
mac and windows and maybe i wanted to

9380
08:11:46,718 --> 08:11:48,878
run on mac and windows but that can't

9381
08:11:48,878 --> 08:11:50,238
happen because like docker relies on

9382
08:11:50,238 --> 08:11:51,278
these special features that are only in

9383
08:11:51,278 --> 08:11:52,558
the linux kernel like at an operating

9384
08:11:52,558 --> 08:11:54,960
system level they can only run on linux

9385
08:11:54,960 --> 08:11:56,398
and like i guess the people at docker

9386
08:11:56,398 --> 08:11:58,558
were like well there's one way we could

9387
08:11:58,558 --> 08:12:00,960
make it run on mac and on windows we

9388
08:12:00,960 --> 08:12:03,200
could just you know make mac and windows

9389
08:12:03,200 --> 08:12:05,758
also run linux inside them and have an

9390
08:12:05,758 --> 08:12:07,680
entire operating system an entire linux

9391
08:12:07,680 --> 08:12:09,200
inside your mac computer inside your

9392
08:12:09,200 --> 08:12:11,758
windows computer just to run a container

9393
08:12:11,758 --> 08:12:13,438
just to run docker which you use to run

9394
08:12:13,438 --> 08:12:14,558
containers which are not virtual

9395
08:12:14,558 --> 08:12:15,840
machines but which now do require a

9396
08:12:15,840 --> 08:12:17,680
virtual machine just to run them this is

9397
08:12:17,680 --> 08:12:19,360
good i guess

9398
08:12:19,360 --> 08:12:21,758
this is how we do it

9399
08:12:21,758 --> 08:12:22,878
possibly i don't understand how this

9400
08:12:22,878 --> 08:12:23,918
works and this is actually a very smart

9401
08:12:23,918 --> 08:12:25,040
way of solving the problem but i don't

9402
08:12:25,040 --> 08:12:25,840
know

9403
08:12:25,840 --> 08:12:27,438
uh so here we are we're living like this

9404
08:12:27,438 --> 08:12:28,640
but the problem you might be wondering

9405
08:12:28,640 --> 08:12:30,320
like hey if we're trapped in this

9406
08:12:30,320 --> 08:12:32,960
virtual machine jl babushka situation

9407
08:12:32,960 --> 08:12:34,480
i want to get all the like if you know

9408
08:12:34,480 --> 08:12:35,520
i'm running male 1 someone's computer

9409
08:12:35,520 --> 08:12:36,640
maybe i want to look at the files they

9410
08:12:36,640 --> 08:12:37,758
have on the computer i want to see

9411
08:12:37,758 --> 08:12:38,800
what's you know what's in their home

9412
08:12:38,800 --> 08:12:40,398
directory but i can't because i'm in

9413
08:12:40,398 --> 08:12:42,320
this like so i'm in this container which

9414
08:12:42,320 --> 08:12:44,078
is a virtual machine so how do i get

9415
08:12:44,078 --> 08:12:45,758
them can you get them am i just trapped

9416
08:12:45,758 --> 08:12:47,360
in here don't worry there's a feature in

9417
08:12:47,360 --> 08:12:48,878
docker for that docker has this thing

9418
08:12:48,878 --> 08:12:50,718
called like file sharing or like file

9419
08:12:50,718 --> 08:12:52,480
system sharing where you can like

9420
08:12:52,480 --> 08:12:54,160
give it a bunch of like directories on

9421
08:12:54,160 --> 08:12:55,598
your local computer and give doc it

9422
08:12:55,598 --> 08:12:58,160
gives you access to those files and that

9423
08:12:58,160 --> 08:12:59,918
makes total sense right because

9424
08:12:59,918 --> 08:13:00,800
if you don't even know you have a

9425
08:13:00,800 --> 08:13:01,918
virtual machine on your computer if

9426
08:13:01,918 --> 08:13:03,040
you're running a docker on your computer

9427
08:13:03,040 --> 08:13:04,398
you would be expect to be able to see

9428
08:13:04,398 --> 08:13:05,918
your own files and be able to mount your

9429
08:13:05,918 --> 08:13:07,918
own computer inside and so it very

9430
08:13:07,918 --> 08:13:09,680
transparently does this so you and you

9431
08:13:09,680 --> 08:13:10,718
don't even realize you have a virtual

9432
08:13:10,718 --> 08:13:12,320
machine running because of this and this

9433
08:13:12,320 --> 08:13:13,360
list that you see right here is just a

9434
08:13:13,360 --> 08:13:15,278
default list of um the directories that

9435
08:13:15,278 --> 08:13:16,558
you can mount in there you can just add

9436
08:13:16,558 --> 08:13:17,918
more you can just add whatever you want

9437
08:13:17,918 --> 08:13:19,360
you can just edit this file anytime you

9438
08:13:19,360 --> 08:13:20,320
don't need to be rooted or anything it's

9439
08:13:20,320 --> 08:13:21,840
just it's just there for you to use so

9440
08:13:21,840 --> 08:13:24,078
thank you it's very easy so uh that

9441
08:13:24,078 --> 08:13:25,200
explains why we had all these random

9442
08:13:25,200 --> 08:13:26,558
macros directories in the container

9443
08:13:26,558 --> 08:13:27,680
because like these are the ones that

9444
08:13:27,680 --> 08:13:28,960
it's sharing by default so you can mount

9445
08:13:28,960 --> 08:13:31,040
these into your docker containers so oh

9446
08:13:31,040 --> 08:13:32,718
now malware can like read and write

9447
08:13:32,718 --> 08:13:34,480
files on the tester they both work so

9448
08:13:34,480 --> 08:13:36,078
that's good we can that's something

9449
08:13:36,078 --> 08:13:37,758
maybe this little maybe we can do some

9450
08:13:37,758 --> 08:13:38,878
actual crime from within this little

9451
08:13:38,878 --> 08:13:40,558
malware jail

9452
08:13:40,558 --> 08:13:42,800
so then i was thinking well what if like

9453
08:13:42,800 --> 08:13:44,320
what about getting caught like can they

9454
08:13:44,320 --> 08:13:45,918
just run ps and see what malware i have

9455
08:13:45,918 --> 08:13:47,520
what if they have is that antivirus for

9456
08:13:47,520 --> 08:13:48,960
max i don't know what if they have like

9457
08:13:48,960 --> 08:13:50,078
some sort of software that's monitoring

9458
08:13:50,078 --> 08:13:51,680
can they see what i'm doing and the

9459
08:13:51,680 --> 08:13:53,680
thing is that what the host can see the

9460
08:13:53,680 --> 08:13:55,200
host you know the host computer the mac

9461
08:13:55,200 --> 08:13:56,320
computer can always see the running

9462
08:13:56,320 --> 08:13:58,960
processes it has but there's just one

9463
08:13:58,960 --> 08:14:00,558
big virtual machine process that

9464
08:14:00,558 --> 08:14:02,320
hyperkit one there is only one process

9465
08:14:02,320 --> 08:14:03,438
that is this virtual machine and then

9466
08:14:03,438 --> 08:14:04,718
there's all these virtual processors

9467
08:14:04,718 --> 08:14:06,320
inside but it doesn't know about virtual

9468
08:14:06,320 --> 08:14:08,000
processors that's that's silly then it's

9469
08:14:08,000 --> 08:14:10,480
a virtual machine process so

9470
08:14:10,480 --> 08:14:11,680
to show you an example here's what

9471
08:14:11,680 --> 08:14:12,718
happens if you if you were to run the

9472
08:14:12,718 --> 08:14:14,000
malware without doing any of this if you

9473
08:14:14,000 --> 08:14:15,680
just run the malware the normal way you

9474
08:14:15,680 --> 08:14:16,800
your malware has a bash script i guess

9475
08:14:16,800 --> 08:14:18,000
and you can see oh the bash group is

9476
08:14:18,000 --> 08:14:19,040
doing stuff and then it's got stuff

9477
08:14:19,040 --> 08:14:20,640
underneath it and those processes have

9478
08:14:20,640 --> 08:14:21,918
sub processors and you can you know you

9479
08:14:21,918 --> 08:14:22,878
can vaguely see what this malware's

9480
08:14:22,878 --> 08:14:23,758
doing probably you don't want that

9481
08:14:23,758 --> 08:14:25,360
running on your computer if you see that

9482
08:14:25,360 --> 08:14:27,438
but if you run exactly the same code uh

9483
08:14:27,438 --> 08:14:29,598
using this crazy docker container type

9484
08:14:29,598 --> 08:14:31,758
of bush code technique you all you see

9485
08:14:31,758 --> 08:14:33,918
is the same like all of that code all

9486
08:14:33,918 --> 08:14:35,278
those processes are contained within

9487
08:14:35,278 --> 08:14:37,918
this one which is just running uh the

9488
08:14:37,918 --> 08:14:39,438
docker service container the malware

9489
08:14:39,438 --> 08:14:40,800
that i'm running also every other

9490
08:14:40,800 --> 08:14:41,840
process that every other docker

9491
08:14:41,840 --> 08:14:43,758
container is that every other container

9492
08:14:43,758 --> 08:14:44,800
is running on your computer they're all

9493
08:14:44,800 --> 08:14:46,398
shared by this one big happy virtual

9494
08:14:46,398 --> 08:14:48,238
process so you can't really tell what's

9495
08:14:48,238 --> 08:14:49,840
happening in there and so then i was

9496
08:14:49,840 --> 08:14:51,278
like oh so if you're running ps it can't

9497
08:14:51,278 --> 08:14:52,878
see you if you if you run docker ps

9498
08:14:52,878 --> 08:14:54,000
there's no extra container or anything

9499
08:14:54,000 --> 08:14:55,040
that contains always running it's not

9500
08:14:55,040 --> 08:14:56,480
like a bonus one so they can't see you

9501
08:14:56,480 --> 08:14:57,520
and so then that means whatever

9502
08:14:57,520 --> 08:14:58,878
antivirus thing you have currency you

9503
08:14:58,878 --> 08:14:59,840
you can do whatever you want this is

9504
08:14:59,840 --> 08:15:00,800
great

9505
08:15:00,800 --> 08:15:01,680
so

9506
08:15:01,680 --> 08:15:02,640
that was the beginning of this

9507
08:15:02,640 --> 08:15:04,320
three-month thing skip let's skip ahead

9508
08:15:04,320 --> 08:15:05,598
several months which i spent trying to

9509
08:15:05,598 --> 08:15:06,800
refine this and make it better and

9510
08:15:06,800 --> 08:15:08,320
figure out what it could even do and

9511
08:15:08,320 --> 08:15:10,320
here's here's what i came up with uh

9512
08:15:10,320 --> 08:15:11,438
what what can you actually do with your

9513
08:15:11,438 --> 08:15:14,000
malware you can still render my files

9514
08:15:14,000 --> 08:15:15,840
you can access the local network so if

9515
08:15:15,840 --> 08:15:16,960
they have like an internal vpn or

9516
08:15:16,960 --> 08:15:18,320
whatever you're on that network too and

9517
08:15:18,320 --> 08:15:20,878
you share the same network like

9518
08:15:20,878 --> 08:15:22,238
it looks exactly as if any other docker

9519
08:15:22,238 --> 08:15:23,680
container is accessing the local network

9520
08:15:23,680 --> 08:15:25,200
or the internet because that's what they

9521
08:15:25,200 --> 08:15:26,800
all do you can't tell that it's not a

9522
08:15:26,800 --> 08:15:28,878
docker container it could be anything uh

9523
08:15:28,878 --> 08:15:30,800
also it keeps going when you reboot or

9524
08:15:30,800 --> 08:15:32,078
spend because it's like part of docker

9525
08:15:32,078 --> 08:15:33,200
now and docker keeps going when you

9526
08:15:33,200 --> 08:15:34,558
reboot or suspend

9527
08:15:34,558 --> 08:15:36,078
uh also you can prevent docker desktop

9528
08:15:36,078 --> 08:15:37,598
from updating because if docker desktop

9529
08:15:37,598 --> 08:15:38,878
updates that will remove whatever

9530
08:15:38,878 --> 08:15:40,238
malware that will remove your malware

9531
08:15:40,238 --> 08:15:41,520
setup because like your malware is still

9532
08:15:41,520 --> 08:15:42,878
at in docker desktop now so you can be

9533
08:15:42,878 --> 08:15:44,558
like please do not update

9534
08:15:44,558 --> 08:15:46,000
uh also

9535
08:15:46,000 --> 08:15:47,360
i realized that

9536
08:15:47,360 --> 08:15:48,718
so far we have not actually had the

9537
08:15:48,718 --> 08:15:50,238
ability to execute a shell command on

9538
08:15:50,238 --> 08:15:51,598
the host computer only inside this

9539
08:15:51,598 --> 08:15:53,200
container and like probably you don't

9540
08:15:53,200 --> 08:15:54,160
need to because you can access the

9541
08:15:54,160 --> 08:15:55,438
internet and the files and everything

9542
08:15:55,438 --> 08:15:56,718
but what if you really want to like what

9543
08:15:56,718 --> 08:15:57,680
if you need to like kill a running

9544
08:15:57,680 --> 08:15:59,278
process on the host or something so i

9545
08:15:59,278 --> 08:16:00,718
made this crazy way of like you can

9546
08:16:00,718 --> 08:16:02,878
backdoor this docker executable on the

9547
08:16:02,878 --> 08:16:04,878
host to make like a bind shell and you

9548
08:16:04,878 --> 08:16:06,320
can like talk to it on localhost if you

9549
08:16:06,320 --> 08:16:07,680
really really need to execute a command

9550
08:16:07,680 --> 08:16:10,480
on the local machine but i figured that

9551
08:16:10,480 --> 08:16:12,000
might be too risky so it's like optional

9552
08:16:12,000 --> 08:16:14,160
you can turn it on if you want to use it

9553
08:16:14,160 --> 08:16:15,680
uh i said doc i said you can prevent

9554
08:16:15,680 --> 08:16:16,960
docuduster from updating how does that

9555
08:16:16,960 --> 08:16:18,558
actually work it's very simple

9556
08:16:18,558 --> 08:16:20,238
uh first let's talk about let's talk

9557
08:16:20,238 --> 08:16:21,680
about docker desktop updating this is

9558
08:16:21,680 --> 08:16:23,122
real this is a real screenshot of docker

9559
08:16:23,122 --> 08:16:24,000
desktop

9560
08:16:24,000 --> 08:16:25,918
you you can install the update or you

9561
08:16:25,918 --> 08:16:27,918
can skip the update but that's pro

9562
08:16:27,918 --> 08:16:29,438
edition and that costs money or

9563
08:16:29,438 --> 08:16:31,278
something that's not how it works

9564
08:16:31,278 --> 08:16:33,758
like the like you can't make me you

9565
08:16:33,758 --> 08:16:35,200
can't make me update it's only on my

9566
08:16:35,200 --> 08:16:36,398
computer you can't like force it to be

9567
08:16:36,398 --> 08:16:37,918
downloaded and i can skip i can turn off

9568
08:16:37,918 --> 08:16:39,598
the internet i can click this x button

9569
08:16:39,598 --> 08:16:41,520
like that's i don't understand how this

9570
08:16:41,520 --> 08:16:43,040
works so i guess i'm sorry for showing

9571
08:16:43,040 --> 08:16:44,078
you how to pirate docker is what's

9572
08:16:44,078 --> 08:16:45,040
happening now

9573
08:16:45,040 --> 08:16:47,040
uh i found out there's this

9574
08:16:47,040 --> 08:16:49,200
random xml file inside the docker app

9575
08:16:49,200 --> 08:16:50,800
which is this info.plist and has a lot

9576
08:16:50,800 --> 08:16:52,480
of content in there but i realize that

9577
08:16:52,480 --> 08:16:54,000
the way the way docker decides whether

9578
08:16:54,000 --> 08:16:55,758
you're ready to update is with this

9579
08:16:55,758 --> 08:16:57,122
bundle version number which is like the

9580
08:16:57,122 --> 08:16:58,960
build number and so what happens is the

9581
08:16:58,960 --> 08:17:00,558
docker server in the internet somewhere

9582
08:17:00,558 --> 08:17:03,040
says hey it's time for docker update uh

9583
08:17:03,040 --> 08:17:04,878
oh there's this new version available is

9584
08:17:04,878 --> 08:17:06,558
the new version higher number the higher

9585
08:17:06,558 --> 08:17:07,758
or lower than your version number if the

9586
08:17:07,758 --> 08:17:08,800
new version's higher then you should

9587
08:17:08,800 --> 08:17:10,160
download the new version but if you

9588
08:17:10,160 --> 08:17:11,598
already have the new version or a newer

9589
08:17:11,598 --> 08:17:13,200
version somehow then don't worry about

9590
08:17:13,200 --> 08:17:14,960
it so i'm sure you can see where this is

9591
08:17:14,960 --> 08:17:16,718
going i was like oh okay well what if i

9592
08:17:16,718 --> 08:17:17,879
had just

9593
08:17:17,879 --> 08:17:21,598
[Applause]

9594
08:17:21,598 --> 08:17:23,758
so yeah then if you do that you just ask

9595
08:17:23,758 --> 08:17:25,840
them to be like oh hey is this version

9596
08:17:25,840 --> 08:17:27,122
okay and like oh i think i'm gonna be

9597
08:17:27,122 --> 08:17:28,398
good for like several years i don't need

9598
08:17:28,398 --> 08:17:29,598
new version

9599
08:17:29,598 --> 08:17:30,398
so

9600
08:17:30,398 --> 08:17:31,598
sorry i guess for teaching how to play

9601
08:17:31,598 --> 08:17:33,840
with doco

9602
08:17:33,840 --> 08:17:36,160
whoa

9603
08:17:39,840 --> 08:17:40,840
that was

9604
08:17:40,840 --> 08:17:42,398
cool uh

9605
08:17:42,398 --> 08:17:44,238
let's maybe but so that's that's this is

9606
08:17:44,238 --> 08:17:45,598
what i came up with maybe let's figure

9607
08:17:45,598 --> 08:17:47,122
out how can you detect this happening to

9608
08:17:47,122 --> 08:17:48,160
you can you know whether this has

9609
08:17:48,160 --> 08:17:49,360
happened to you or not is there some way

9610
08:17:49,360 --> 08:17:50,640
to find out

9611
08:17:50,640 --> 08:17:52,480
uh and i was like wait i actually don't

9612
08:17:52,480 --> 08:17:54,160
know how that work

9613
08:17:54,160 --> 08:17:55,360
well i guess you could check what

9614
08:17:55,360 --> 08:17:57,360
running processes there are but oh i

9615
08:17:57,360 --> 08:17:58,640
actually know hold on we can't see that

9616
08:17:58,640 --> 08:17:59,918
we can only see the one big virtual

9617
08:17:59,918 --> 08:18:01,840
process okay that's not gonna work uh

9618
08:18:01,840 --> 08:18:03,598
well maybe we could monitor the syscalls

9619
08:18:03,598 --> 08:18:05,040
of that process maybe we could monitor

9620
08:18:05,040 --> 08:18:06,398
the syscalls that the docker virtual

9621
08:18:06,398 --> 08:18:08,078
machine process is doing that we can see

9622
08:18:08,078 --> 08:18:09,918
what files it's accessing but actually

9623
08:18:09,918 --> 08:18:11,520
no a feature of mac os is that you can't

9624
08:18:11,520 --> 08:18:13,598
do that uh the feature is the system

9625
08:18:13,598 --> 08:18:14,800
integrity protection meaning you can't

9626
08:18:14,800 --> 08:18:15,840
really monitor the ciscos of other

9627
08:18:15,840 --> 08:18:17,438
processes sorry

9628
08:18:17,438 --> 08:18:18,718
but there's not like there's no way to

9629
08:18:18,718 --> 08:18:20,160
do this the

9630
08:18:20,160 --> 08:18:21,360
the problem is that you can't see the

9631
08:18:21,360 --> 08:18:23,122
running processes or the syscalls but

9632
08:18:23,122 --> 08:18:24,320
there is a way to success calls there's

9633
08:18:24,320 --> 08:18:25,918
this new mac os framework thing called

9634
08:18:25,918 --> 08:18:27,840
mac os endpoint security which is like

9635
08:18:27,840 --> 08:18:30,000
an api they give you which is like

9636
08:18:30,000 --> 08:18:32,078
you can see the syscalls now you you're

9637
08:18:32,078 --> 08:18:34,320
allowed to do that now so you can if you

9638
08:18:34,320 --> 08:18:36,000
can do this yourself or i assume if

9639
08:18:36,000 --> 08:18:37,598
there's some sort of like endpoint

9640
08:18:37,598 --> 08:18:39,200
response software or like antivirus

9641
08:18:39,200 --> 08:18:41,040
software on mac os it needs to use this

9642
08:18:41,040 --> 08:18:42,558
so it can see the syscalls that the

9643
08:18:42,558 --> 08:18:44,320
docker virtual machine is doing so that

9644
08:18:44,320 --> 08:18:46,558
way you can know i don't know maybe your

9645
08:18:46,558 --> 08:18:47,918
docker maybe your docker process

9646
08:18:47,918 --> 08:18:49,360
shouldn't try and read your ssh keys or

9647
08:18:49,360 --> 08:18:51,438
your aws credentials or maybe it should

9648
08:18:51,438 --> 08:18:52,960
because maybe your docker containers do

9649
08:18:52,960 --> 08:18:54,640
that i don't know but this seems to be

9650
08:18:54,640 --> 08:18:56,558
the best way i could think of

9651
08:18:56,558 --> 08:18:58,078
so can you prevent this from happening

9652
08:18:58,078 --> 08:18:59,040
to you can you prevent someone from

9653
08:18:59,040 --> 08:19:00,878
modifying your like docker setup like

9654
08:19:00,878 --> 08:19:03,520
this and i was realizing like not really

9655
08:19:03,520 --> 08:19:04,398
no

9656
08:19:04,398 --> 08:19:05,438
the only way to prevent it would be to

9657
08:19:05,438 --> 08:19:07,122
like not have docker in the first place

9658
08:19:07,122 --> 08:19:08,480
because like the problem is that there's

9659
08:19:08,480 --> 08:19:09,758
a virtual machine

9660
08:19:09,758 --> 08:19:11,680
and that hides everything and you can't

9661
08:19:11,680 --> 08:19:13,122
not have the you cannot there's one way

9662
08:19:13,122 --> 08:19:14,238
to not have the virtual machine but it

9663
08:19:14,238 --> 08:19:15,276
involves not having docker in the first

9664
08:19:15,276 --> 08:19:16,320
place and maybe you would like to have

9665
08:19:16,320 --> 08:19:17,756
docker so i don't know how to prevent

9666
08:19:17,756 --> 08:19:18,640
this

9667
08:19:18,640 --> 08:19:20,480
i tried to contact docker about this and

9668
08:19:20,480 --> 08:19:22,640
like tell them about it uh

9669
08:19:22,640 --> 08:19:24,640
last year a long time ago and they did

9670
08:19:24,640 --> 08:19:25,916
they did respond a couple of times and i

9671
08:19:25,916 --> 08:19:27,040
was like hey i'm going to publish this

9672
08:19:27,040 --> 08:19:28,240
blog post uh do you want to read about

9673
08:19:28,240 --> 08:19:29,680
it uh can you do you want to review it

9674
08:19:29,680 --> 08:19:34,360
is it okay and they were like uh

9675
08:19:36,160 --> 08:19:37,436
but they seem to be they seem to be a

9676
08:19:37,436 --> 08:19:38,480
character in publishing a blog post they

9677
08:19:38,480 --> 08:19:39,840
didn't like see me or anything about it

9678
08:19:39,840 --> 08:19:40,960
so that's good

9679
08:19:40,960 --> 08:19:42,960
uh and so i did publish a blog post and

9680
08:19:42,960 --> 08:19:44,240
so if you want to read about it here it

9681
08:19:44,240 --> 08:19:45,360
is it's all on the internet you can just

9682
08:19:45,360 --> 08:19:46,640
google the name of this talk and this

9683
08:19:46,640 --> 08:19:47,916
has like much more detail that i talked

9684
08:19:47,916 --> 08:19:49,436
about today because i did not have time

9685
08:19:49,436 --> 08:19:51,276
to talk about all the nonsense that's

9686
08:19:51,276 --> 08:19:53,916
why i'm doing this

9687
08:19:53,916 --> 08:19:56,160
so in conclusion docker desktop is a

9688
08:19:56,160 --> 08:19:58,080
virtual machine the hubris of build

9689
08:19:58,080 --> 08:19:59,520
engineering knows no bounds thank you

9690
08:19:59,520 --> 08:20:02,680
very much

9691
08:20:09,840 --> 08:20:11,276
thank you

9692
08:20:11,276 --> 08:20:13,040
thank you so much alex

9693
08:20:13,040 --> 08:20:15,520
um and that's it for today

9694
08:20:15,520 --> 08:20:17,596
i'm just going to go over just a wee bit

9695
08:20:17,596 --> 08:20:20,320
of housekeeping before you all head off

9696
08:20:20,320 --> 08:20:22,560
for those of you who want to stay back

9697
08:20:22,560 --> 08:20:24,240
perhaps aren't really wanting to go out

9698
08:20:24,240 --> 08:20:26,080
tonight we will be streaming the

9699
08:20:26,080 --> 08:20:27,916
andromeda strain tonight

9700
08:20:27,916 --> 08:20:30,480
so the original 1970s version so come

9701
08:20:30,480 --> 08:20:32,160
hang out with us we'll be playing on the

9702
08:20:32,160 --> 08:20:33,360
big screen

9703
08:20:33,360 --> 08:20:34,880
it will be awesome and it kicks off at

9704
08:20:34,880 --> 08:20:36,000
7.

9705
08:20:36,000 --> 08:20:38,000
um we don't have any other official

9706
08:20:38,000 --> 08:20:39,120
convents

9707
08:20:39,120 --> 08:20:41,040
as you can imagine it was hard enough

9708
08:20:41,040 --> 08:20:42,160
for me to

9709
08:20:42,160 --> 08:20:45,596
fight our way into this venue this year

9710
08:20:45,596 --> 08:20:47,596
and it's just not possible for us to fit

9711
08:20:47,596 --> 08:20:49,840
all of you safely in any other venue in

9712
08:20:49,840 --> 08:20:52,240
wellington i think this is as big as it

9713
08:20:52,240 --> 08:20:54,720
gets unless we go to tsb um but there's

9714
08:20:54,720 --> 08:20:56,560
plenty of other stuff going on lots of

9715
08:20:56,560 --> 08:20:57,916
people in the community are organizing

9716
08:20:57,916 --> 08:20:59,916
small little things so check out our

9717
08:20:59,916 --> 08:21:02,160
twitter page if you want to find other

9718
08:21:02,160 --> 08:21:04,560
ways of finding other people to hang out

9719
08:21:04,560 --> 08:21:06,080
with

9720
08:21:06,080 --> 08:21:07,596
and aside from that

9721
08:21:07,596 --> 08:21:09,040
stay safe out there

9722
08:21:09,040 --> 08:21:10,240
if you're feeling a bit crook in the

9723
08:21:10,240 --> 08:21:11,360
morning

9724
08:21:11,360 --> 08:21:13,596
you know just maybe do yourself in your

9725
08:21:13,596 --> 08:21:15,756
brain a favor and sleep in a

9726
08:21:15,756 --> 08:21:18,320
and you can watch on the live stream

9727
08:21:18,320 --> 08:21:21,436
we will have and we do have ratch tests

9728
08:21:21,436 --> 08:21:24,240
on hand if you wanted to grab one

9729
08:21:24,240 --> 08:21:26,240
completely free for you all to pick up

9730
08:21:26,240 --> 08:21:28,960
um and doors open tomorrow at h and we

9731
08:21:28,960 --> 08:21:30,720
will kick off at nine

9732
08:21:30,720 --> 08:21:32,800
so i will hand over to vex who will

9733
08:21:32,800 --> 08:21:35,030
close us off

9734
08:21:35,030 --> 08:21:42,829
[Applause]

9735
08:21:53,780 --> 08:21:57,899
[Music]

9736
08:22:03,360 --> 08:22:06,360
here

9737
08:22:06,720 --> 08:22:16,120
[Applause]

9738
08:23:59,596 --> 08:24:01,680
you

