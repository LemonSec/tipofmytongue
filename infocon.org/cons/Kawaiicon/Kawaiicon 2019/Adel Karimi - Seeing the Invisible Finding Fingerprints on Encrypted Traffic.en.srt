1
00:00:00,030 --> 00:00:09,209
oh and thanks for coming to my talk so

2
00:00:06,290 --> 00:00:13,559
we're going to talk about fingerprinting

3
00:00:09,210 --> 00:00:14,910
encrypted traffic so I'm Otto a member

4
00:00:13,559 --> 00:00:17,850
of the honeynet project for about 10

5
00:00:14,910 --> 00:00:20,609
years now security engineer detecting

6
00:00:17,850 --> 00:00:22,800
badness at Google and in my free time

7
00:00:20,609 --> 00:00:24,600
I'm working on some open source project

8
00:00:22,800 --> 00:00:26,970
you can find in my github page and doing

9
00:00:24,600 --> 00:00:29,970
some astrophotography like the photo you

10
00:00:26,970 --> 00:00:35,579
see in the last slide so let's start by

11
00:00:29,970 --> 00:00:37,620
defining the problem actually the large

12
00:00:35,579 --> 00:00:43,680
part of your network traffic is already

13
00:00:37,620 --> 00:00:47,849
encrypted and it's hard to tell if the

14
00:00:43,680 --> 00:00:50,670
traffic we see is actually good like an

15
00:00:47,850 --> 00:00:54,289
engineer searching for tat memes as it's

16
00:00:50,670 --> 00:00:57,629
like a big part of our day-to-day job or

17
00:00:54,289 --> 00:01:00,359
it's like a malicious traffic or someone

18
00:00:57,629 --> 00:01:03,619
extra trading data from your network or

19
00:01:00,359 --> 00:01:09,119
communicating with command and control

20
00:01:03,619 --> 00:01:12,380
so let's see if there's any clues we can

21
00:01:09,119 --> 00:01:15,030
actually use Network method data and

22
00:01:12,380 --> 00:01:17,339
potentially fingerprints to makes more

23
00:01:15,030 --> 00:01:20,189
sense of to make more sense of encrypted

24
00:01:17,340 --> 00:01:21,869
traffic and in this talk we're going to

25
00:01:20,189 --> 00:01:23,789
see if we can use network model a time

26
00:01:21,869 --> 00:01:26,759
fingerprints to profile the attackers

27
00:01:23,790 --> 00:01:30,750
and tools discover hidden connections

28
00:01:26,759 --> 00:01:33,450
between the attackers or tools again or

29
00:01:30,750 --> 00:01:37,920
maybe even we can find some cool evasion

30
00:01:33,450 --> 00:01:40,590
techniques so let's see just a quick

31
00:01:37,920 --> 00:01:42,540
background this is the basic concept you

32
00:01:40,590 --> 00:01:44,340
need to know to understand stock so

33
00:01:42,540 --> 00:01:48,299
cryptographic protocols need to

34
00:01:44,340 --> 00:01:51,659
negotiate some parameters attributes in

35
00:01:48,299 --> 00:01:55,229
clear-text let me try to explain it in

36
00:01:51,659 --> 00:01:58,469
another way hopefully easier assume this

37
00:01:55,229 --> 00:02:00,299
is a encrypted traffic we can't really

38
00:01:58,469 --> 00:02:02,280
see anything like we don't really know

39
00:02:00,299 --> 00:02:05,130
what's happening but we can see the

40
00:02:02,280 --> 00:02:09,288
handshake here and by looking at the

41
00:02:05,130 --> 00:02:13,329
handshake we can probably guess it's

42
00:02:09,288 --> 00:02:18,190
right frog and thought eating cookies

43
00:02:13,330 --> 00:02:22,690
so this is thought by an example with

44
00:02:18,190 --> 00:02:24,609
TLS so in TLS in the initial handshake

45
00:02:22,690 --> 00:02:26,500
we actually have a client hello message

46
00:02:24,610 --> 00:02:29,860
which includes some interesting

47
00:02:26,500 --> 00:02:33,750
information which is clear text so

48
00:02:29,860 --> 00:02:36,550
here's the structure of client hello and

49
00:02:33,750 --> 00:02:38,440
here are some interesting fields we can

50
00:02:36,550 --> 00:02:43,030
probably use for fingerprinting like

51
00:02:38,440 --> 00:02:44,470
version like TLS 1.2 or the cipher

52
00:02:43,030 --> 00:02:47,350
suites which is the most interesting one

53
00:02:44,470 --> 00:02:49,300
because these ciphers are in order of

54
00:02:47,350 --> 00:02:51,459
clients preference so probably we can

55
00:02:49,300 --> 00:02:57,160
use this for some kind of fingerprinting

56
00:02:51,459 --> 00:03:00,340
and then the list of extensions so there

57
00:02:57,160 --> 00:03:02,140
are some finger painting methods for TLS

58
00:03:00,340 --> 00:03:03,730
but the most common one is jaw 3 which

59
00:03:02,140 --> 00:03:07,119
is developed by John outhouse and a

60
00:03:03,730 --> 00:03:10,149
couple more guys at Salesforce and it

61
00:03:07,120 --> 00:03:12,910
works by extracting and concatenating

62
00:03:10,150 --> 00:03:16,540
the decimal value of SSL version cipher

63
00:03:12,910 --> 00:03:19,060
Suites extensions elliptic curve which

64
00:03:16,540 --> 00:03:21,970
is a extension and then easy point

65
00:03:19,060 --> 00:03:26,470
format so after we generated this string

66
00:03:21,970 --> 00:03:30,579
we apply md5 and the result is a hash

67
00:03:26,470 --> 00:03:35,230
which is a unique fingerprint for SSL

68
00:03:30,580 --> 00:03:42,190
clients in this case it's for Google

69
00:03:35,230 --> 00:03:44,738
Chrome so let's have a look at RDP and I

70
00:03:42,190 --> 00:03:47,190
was thinking if we can apply the same

71
00:03:44,739 --> 00:03:50,080
thing to our DP because our if he's

72
00:03:47,190 --> 00:03:51,880
interesting protocol it's a common

73
00:03:50,080 --> 00:03:54,850
protocol which is used for lateral

74
00:03:51,880 --> 00:03:56,859
movement and also the recent

75
00:03:54,850 --> 00:03:59,890
vulnerabilities like blue keep makes it

76
00:03:56,860 --> 00:04:04,810
more interesting so there are actually

77
00:03:59,890 --> 00:04:10,798
two RDP security modes standard RDP

78
00:04:04,810 --> 00:04:13,239
security and enhanced or DB security in

79
00:04:10,799 --> 00:04:15,760
enhanced mode we have the following

80
00:04:13,239 --> 00:04:18,760
protocols and the good thing is all

81
00:04:15,760 --> 00:04:20,858
these protocols are based in TLS so

82
00:04:18,760 --> 00:04:24,130
again we can use something like geo tree

83
00:04:20,858 --> 00:04:27,159
to fingerprint so what I did was I

84
00:04:24,130 --> 00:04:27,669
generated traffic's for different are

85
00:04:27,160 --> 00:04:30,310
depicted

86
00:04:27,669 --> 00:04:35,289
on different Windows versions and the

87
00:04:30,310 --> 00:04:38,110
result was cool so as we expect there

88
00:04:35,289 --> 00:04:39,909
are unique fingerprints for each client

89
00:04:38,110 --> 00:04:43,180
as you can see here this is a

90
00:04:39,909 --> 00:04:46,599
fingerprint for our DC six month one on

91
00:04:43,180 --> 00:04:48,960
Windows XP or this one is for Windows 10

92
00:04:46,599 --> 00:04:52,240
or 2019 which you can see is the same

93
00:04:48,960 --> 00:04:55,779
because both use the same article Orient

94
00:04:52,240 --> 00:04:57,400
and this one is poppies RDP module as

95
00:04:55,779 --> 00:05:00,490
you know our puppy is the open source

96
00:04:57,400 --> 00:05:02,799
implant so it also has a RDP module and

97
00:05:00,490 --> 00:05:05,349
the JA tree is unique so it's cool you

98
00:05:02,800 --> 00:05:07,960
can just use this fingerprint and create

99
00:05:05,349 --> 00:05:13,330
a circuit or snort rule and detect it in

100
00:05:07,960 --> 00:05:15,219
your network what if we use a standard

101
00:05:13,330 --> 00:05:18,550
RDP security in standard or to be

102
00:05:15,219 --> 00:05:21,639
security we don't have TLS standard RDP

103
00:05:18,550 --> 00:05:26,370
uses its own custom encryption mechanism

104
00:05:21,639 --> 00:05:29,529
based on RSA and our c4 or Triple DES

105
00:05:26,370 --> 00:05:31,930
but here we have another interesting

106
00:05:29,529 --> 00:05:34,180
message which is basic settings exchange

107
00:05:31,930 --> 00:05:36,430
this message is encrypted in enhanced

108
00:05:34,180 --> 00:05:38,229
mode so we can see that but we can see

109
00:05:36,430 --> 00:05:41,110
that here and there's a message called

110
00:05:38,229 --> 00:05:43,750
connect initial PDU which includes an

111
00:05:41,110 --> 00:05:48,569
other message which is GCC conference

112
00:05:43,750 --> 00:05:52,810
create request and this message Inc has

113
00:05:48,569 --> 00:05:54,759
four structures as you can see here core

114
00:05:52,810 --> 00:05:58,659
data cluster data security data and

115
00:05:54,759 --> 00:06:01,240
network data so let's have a look at

116
00:05:58,659 --> 00:06:03,430
these fields by the way you can use

117
00:06:01,240 --> 00:06:05,199
these data in core data for hunting

118
00:06:03,430 --> 00:06:07,149
there are interesting things like

119
00:06:05,199 --> 00:06:08,680
keyboard layout and some other things

120
00:06:07,149 --> 00:06:11,589
which is used for a long time for

121
00:06:08,680 --> 00:06:14,469
hunting but for the purpose of

122
00:06:11,589 --> 00:06:18,129
fingerprinting I used the miner and very

123
00:06:14,469 --> 00:06:21,699
major version and from the cluster data

124
00:06:18,129 --> 00:06:23,949
extracted the cluster Flags encryption

125
00:06:21,699 --> 00:06:28,509
methods and Geeks the encryption methods

126
00:06:23,949 --> 00:06:33,250
from security data and channel def from

127
00:06:28,509 --> 00:06:35,769
network data so here's a experimental

128
00:06:33,250 --> 00:06:38,469
fingerprinting method for standard

129
00:06:35,769 --> 00:06:40,449
oddity security I created and the same

130
00:06:38,469 --> 00:06:40,920
way as George we extract some fields and

131
00:06:40,449 --> 00:06:43,230
count

132
00:06:40,920 --> 00:06:46,230
donate them to generate the fingerprint

133
00:06:43,230 --> 00:06:48,930
so major minor version cluster flags

134
00:06:46,230 --> 00:06:50,780
encryption metals extinction metals and

135
00:06:48,930 --> 00:06:57,060
then the channel deaf

136
00:06:50,780 --> 00:06:59,820
so roughly md5 and this is a fingerprint

137
00:06:57,060 --> 00:07:04,800
for that article client so in this case

138
00:06:59,820 --> 00:07:06,870
it's Windows 10 this is another

139
00:07:04,800 --> 00:07:09,210
interesting example I captured I'm on

140
00:07:06,870 --> 00:07:11,550
honey pots the other day which is

141
00:07:09,210 --> 00:07:16,830
probably our DPS scan which is in a

142
00:07:11,550 --> 00:07:20,070
scanner for blue keep vulnerability so

143
00:07:16,830 --> 00:07:23,130
if you're interested because I removed

144
00:07:20,070 --> 00:07:25,440
lots of details here if you're

145
00:07:23,130 --> 00:07:27,390
interested to know more about this RDP

146
00:07:25,440 --> 00:07:29,850
fingerprinting think here's a blog post

147
00:07:27,390 --> 00:07:32,130
I published a few months ago just scan

148
00:07:29,850 --> 00:07:38,460
this QR code is totally safe not a trap

149
00:07:32,130 --> 00:07:39,540
and let's now have a look at some

150
00:07:38,460 --> 00:07:41,940
observations

151
00:07:39,540 --> 00:07:43,650
these are actually some blogs I captured

152
00:07:41,940 --> 00:07:47,010
I'm a high pass for about two years now

153
00:07:43,650 --> 00:07:50,340
so I started collecting fingerprints for

154
00:07:47,010 --> 00:07:52,890
TLS SSH RDP and many other protocols in

155
00:07:50,340 --> 00:07:57,030
my honey pots and I started visualizing

156
00:07:52,890 --> 00:07:59,969
them by creating a graph and connecting

157
00:07:57,030 --> 00:08:02,190
the source IP to the fingerprints so in

158
00:07:59,970 --> 00:08:09,420
this case which is for TLS source IP to

159
00:08:02,190 --> 00:08:12,210
go3 so this was the result and as we can

160
00:08:09,420 --> 00:08:13,830
see here there are some clusters some

161
00:08:12,210 --> 00:08:18,030
are normal and the things which are

162
00:08:13,830 --> 00:08:20,909
expected like this so we have one red

163
00:08:18,030 --> 00:08:23,309
node in in the center which is the

164
00:08:20,910 --> 00:08:27,270
finger paint and many IP is around which

165
00:08:23,310 --> 00:08:29,490
is actually which means many IP sources

166
00:08:27,270 --> 00:08:31,859
or clients using the same tool so we

167
00:08:29,490 --> 00:08:33,900
have the same Jodrey for that and this

168
00:08:31,860 --> 00:08:37,979
is normal we expect to see that but

169
00:08:33,900 --> 00:08:41,309
let's go back and zoom into a couple

170
00:08:37,979 --> 00:08:46,340
more interesting stuff so if you have a

171
00:08:41,309 --> 00:08:49,770
look we have three outliers here which

172
00:08:46,340 --> 00:08:52,650
which is like one or few IPS and then

173
00:08:49,770 --> 00:08:54,449
many jatri is like three or four hundred

174
00:08:52,650 --> 00:08:57,939
different fingerprints

175
00:08:54,450 --> 00:09:01,420
we have an order one here and another

176
00:08:57,940 --> 00:09:05,800
one here so this one is my favorite one

177
00:09:01,420 --> 00:09:06,520
so let's zoom in and learn more about

178
00:09:05,800 --> 00:09:12,180
this one

179
00:09:06,520 --> 00:09:14,860
so let's domine so before go further

180
00:09:12,180 --> 00:09:18,280
something interesting here is that these

181
00:09:14,860 --> 00:09:19,600
four IPS are different IPS the S can

182
00:09:18,280 --> 00:09:22,000
times are different everything is

183
00:09:19,600 --> 00:09:24,720
different and random but you can see

184
00:09:22,000 --> 00:09:27,400
here that we can connect these four

185
00:09:24,720 --> 00:09:30,610
clusters together because of those

186
00:09:27,400 --> 00:09:33,970
common fingerprints in in the center you

187
00:09:30,610 --> 00:09:36,310
can see that so because of those we can

188
00:09:33,970 --> 00:09:39,760
connect these four finger four clusters

189
00:09:36,310 --> 00:09:42,640
together and that's probably the same

190
00:09:39,760 --> 00:09:45,460
actor or different actors using the same

191
00:09:42,640 --> 00:09:48,610
tool we don't know so let's go deeper

192
00:09:45,460 --> 00:09:58,570
and see if we can learn more about this

193
00:09:48,610 --> 00:10:01,980
so let's zoom in a bit more yeah so we

194
00:09:58,570 --> 00:10:04,210
found the huge needle in haystack and

195
00:10:01,980 --> 00:10:07,150
these are actually some attempts to

196
00:10:04,210 --> 00:10:09,310
avoid TLS fingerprinting by randomizing

197
00:10:07,150 --> 00:10:12,370
the clientele of fields and the funny

198
00:10:09,310 --> 00:10:15,130
thing is by doing this they make

199
00:10:12,370 --> 00:10:20,800
themselves easier to detect and as you

200
00:10:15,130 --> 00:10:23,590
saw it was like so obvious so let's go

201
00:10:20,800 --> 00:10:27,579
deeper and see what's the reason behind

202
00:10:23,590 --> 00:10:32,310
these random like fingerprints so this

203
00:10:27,580 --> 00:10:36,910
is the GRE ciphers in the message and

204
00:10:32,310 --> 00:10:39,969
this is like one a specific day and just

205
00:10:36,910 --> 00:10:42,730
a few seconds I've received like 400

206
00:10:39,970 --> 00:10:44,800
different connections and by looking at

207
00:10:42,730 --> 00:10:48,010
the ciphers you see an interesting

208
00:10:44,800 --> 00:10:52,589
pattern here so the first connection is

209
00:10:48,010 --> 00:10:56,260
with some like we didn't specific a

210
00:10:52,590 --> 00:10:58,780
cipher string and then in order and then

211
00:10:56,260 --> 00:11:01,390
six more connections with the first

212
00:10:58,780 --> 00:11:03,370
cipher so as you can see it's the same

213
00:11:01,390 --> 00:11:06,939
as the first one and then another one

214
00:11:03,370 --> 00:11:07,880
which is an invalid cipher so we have

215
00:11:06,940 --> 00:11:10,580
that here and then

216
00:11:07,880 --> 00:11:16,300
evolve text which is actually a huge

217
00:11:10,580 --> 00:11:19,670
list of randomly generated ciphers so

218
00:11:16,300 --> 00:11:21,890
the more interesting thing is in the

219
00:11:19,670 --> 00:11:24,110
next slide you can see the same scan

220
00:11:21,890 --> 00:11:28,280
happened like twenty six days later

221
00:11:24,110 --> 00:11:29,870
again and the cool thing is the ciphers

222
00:11:28,280 --> 00:11:31,959
are different the randomly generated

223
00:11:29,870 --> 00:11:37,670
ciphers are different but the pattern is

224
00:11:31,960 --> 00:11:40,910
the same so we can always identify this

225
00:11:37,670 --> 00:11:45,829
a specific act or or tool because of

226
00:11:40,910 --> 00:11:48,230
this pattern let's have a look at

227
00:11:45,830 --> 00:11:50,240
another example this is a the

228
00:11:48,230 --> 00:11:56,000
visualization of data set I had for RDP

229
00:11:50,240 --> 00:11:58,510
for standard RDP security and as you can

230
00:11:56,000 --> 00:12:00,770
see we again have some clusters here

231
00:11:58,510 --> 00:12:05,240
I'll have a look at two more interesting

232
00:12:00,770 --> 00:12:10,720
one so one is this one so we have many

233
00:12:05,240 --> 00:12:13,520
IPS but all of them generate four unique

234
00:12:10,720 --> 00:12:16,210
fingerprints and when we have a look at

235
00:12:13,520 --> 00:12:18,710
the logs we see that this guy actually

236
00:12:16,210 --> 00:12:21,800
randomized the RDP cookie for some

237
00:12:18,710 --> 00:12:27,080
reasons which I don't know and it's also

238
00:12:21,800 --> 00:12:29,359
probably nmap or customized nmap and the

239
00:12:27,080 --> 00:12:32,770
cool thing is we always have these four

240
00:12:29,360 --> 00:12:35,330
unique fingerprints for this actor

241
00:12:32,770 --> 00:12:38,020
here's another cluster in that

242
00:12:35,330 --> 00:12:40,820
visualization which I just showed and

243
00:12:38,020 --> 00:12:42,530
this is probably more two malware so I

244
00:12:40,820 --> 00:12:44,570
had a look at the logs and some features

245
00:12:42,530 --> 00:12:47,390
and I've noticed that it's a mortal

246
00:12:44,570 --> 00:12:49,460
malware and it always generates this

247
00:12:47,390 --> 00:12:51,860
unique fingerprints so it's cool you can

248
00:12:49,460 --> 00:12:56,080
detect mortal malware in your network or

249
00:12:51,860 --> 00:13:02,510
somewhere else by just looking at this

250
00:12:56,080 --> 00:13:04,580
special fingerprint so key takeaways NSM

251
00:13:02,510 --> 00:13:06,980
is not that luck we can still use

252
00:13:04,580 --> 00:13:09,800
network security monitoring for

253
00:13:06,980 --> 00:13:11,630
encrypted traffic and the initial

254
00:13:09,800 --> 00:13:15,099
handshaking cryptographic protocol is

255
00:13:11,630 --> 00:13:18,410
gold we can use it for creating

256
00:13:15,100 --> 00:13:21,620
fingerprints to identify the clients or

257
00:13:18,410 --> 00:13:23,449
servers and the hunt badness by

258
00:13:21,620 --> 00:13:26,180
for example looking for rare

259
00:13:23,450 --> 00:13:32,089
fingerprints in your network or maybe

260
00:13:26,180 --> 00:13:33,920
looking at like Python PowerShell or go

261
00:13:32,089 --> 00:13:37,100
binaries connecting to some weird

262
00:13:33,920 --> 00:13:40,099
domains and you can do that with

263
00:13:37,100 --> 00:13:42,410
fingerprints so you also saw that we can

264
00:13:40,100 --> 00:13:45,440
find hidden connections between the

265
00:13:42,410 --> 00:13:48,199
actors and tools just by using these

266
00:13:45,440 --> 00:13:49,670
finger paints so I had a chat with one

267
00:13:48,200 --> 00:13:53,420
of these actors actually I know one of

268
00:13:49,670 --> 00:13:55,790
them and he said they're doing this for

269
00:13:53,420 --> 00:13:57,469
about four or five years now but no one

270
00:13:55,790 --> 00:14:00,860
noticed that because no one was

271
00:13:57,470 --> 00:14:03,770
monitoring like their honey pots and

272
00:14:00,860 --> 00:14:09,850
generating the fingerprints for

273
00:14:03,770 --> 00:14:11,660
visualizing that so thanks that's it

274
00:14:09,850 --> 00:14:15,549
thank you

275
00:14:11,660 --> 00:14:15,549
[Applause]

