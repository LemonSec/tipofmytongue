1
00:00:00,370 --> 00:00:06,140
so to my talk is all about the LP CRPC
LPC other be seen your PC which sounds

2
00:00:06,140 --> 00:00:07,339
very confusing but

3
00:00:07,339 --> 00:00:12,509
I sent 5 idle suggestions to Thomas for
which made a lot of sense and he picked

4
00:00:12,509 --> 00:00:13,309
this one so

5
00:00:13,309 --> 00:00:17,260
it's a small so brief little by about
myself

6
00:00:17,260 --> 00:00:21,420
I've been researching window since about
1999 um

7
00:00:21,420 --> 00:00:24,949
working on react to us I which is an
open-source

8
00:00:24,949 --> 00:00:28,789
implementation Windows um after a few
years

9
00:00:28,789 --> 00:00:32,510
reversing Windows I then went to the
most logical place to work

10
00:00:32,510 --> 00:00:36,450
which is Apple to work on I O S on the
core platform team

11
00:00:36,450 --> 00:00:40,870
I'm so I worked on the bootloader
drivers and X in your kernel for

12
00:00:40,870 --> 00:00:44,380
I am all the iDevices as an intern there
for a few years

13
00:00:44,380 --> 00:00:48,380
and there was a graduated went on to
work across track

14
00:00:48,380 --> 00:00:52,060
which is a security company in the Bay
Area are so pretty much been doing

15
00:00:52,060 --> 00:00:53,300
windows internals

16
00:00:53,300 --> 00:00:57,460
up for about more than a decade now at
the same time working on

17
00:00:57,460 --> 00:01:00,860
on Apple stuff as well but that's not
that's not where we'll be talking about

18
00:01:00,860 --> 00:01:01,520
right now

19
00:01:01,520 --> 00:01:06,080
so what I'm talking about is something
that

20
00:01:06,080 --> 00:01:09,890
star about previous to something called
LPC

21
00:01:09,890 --> 00:01:14,890
or local procedure call on LPC is a
mechanism that was added to Windows NT

22
00:01:14,890 --> 00:01:15,970
from the very beginning

23
00:01:15,970 --> 00:01:20,140
which allowed to process east to talk to
each other's or the Colonels talk to use

24
00:01:20,140 --> 00:01:20,660
a mod

25
00:01:20,660 --> 00:01:23,880
I'm so most lessons have things like
named types

26
00:01:23,880 --> 00:01:28,190
mail slots sockets and witness has all
those mechanisms

27
00:01:28,190 --> 00:01:32,300
the kernel team want to have something
more efficient more specific data carl s

28
00:01:32,300 --> 00:01:33,080
portable

29
00:01:33,080 --> 00:01:37,150
but being able to take advantage have
some arm on specific functionality

30
00:01:37,150 --> 00:01:41,330
so the cleanest thing called LPC help
issues on documented

31
00:01:41,330 --> 00:01:44,990
by three years may be secured
researchers have found bugs in LBC

32
00:01:44,990 --> 00:01:46,430
issues in LBC &

33
00:01:46,430 --> 00:01:49,800
today to fairly understood I mechanism

34
00:01:49,800 --> 00:01:54,690
now since L PCs undocumented developers
don't use LPC

35
00:01:54,690 --> 00:01:58,450
so developers us that the you you would
use om either like mentioning

36
00:01:58,450 --> 00:02:02,670
types for example chrome uses steam
pipes to talk between surrender and

37
00:02:02,670 --> 00:02:03,299
broker

38
00:02:03,299 --> 00:02:07,909
or they would use RPC which is the
remote procedure call interface that

39
00:02:07,909 --> 00:02:09,590
makes of uses in Windows

40
00:02:09,590 --> 00:02:13,310
are based on that the C standard from
almost two decades ago

41
00:02:13,310 --> 00:02:16,390
now arm an RPC

42
00:02:16,390 --> 00:02:19,850
because of some issues in LBC I

43
00:02:19,850 --> 00:02:23,940
namely it's like a a sinking support
actually using pipes

44
00:02:23,940 --> 00:02:26,940
so previous stuff you're using RPC

45
00:02:26,940 --> 00:02:30,630
you're pretty much talking over name
pipes on like something has something

46
00:02:30,630 --> 00:02:31,420
called com

47
00:02:31,420 --> 00:02:35,810
com the common object model which is a
way to share data ensure objects

48
00:02:35,810 --> 00:02:39,319
ensure functions within a process and
outsider process

49
00:02:39,319 --> 00:02:42,840
and e-commerce distributed com is how
you can have

50
00:02:42,840 --> 00:02:46,040
com objects that are process you can do

51
00:02:46,040 --> 00:02:50,760
come method calls to those objects on
Andy come uses RPC internally

52
00:02:50,760 --> 00:02:54,140
and so there is a mission this XRC
that'll

53
00:02:54,140 --> 00:02:57,250
I am what happens LBC became deprecated

54
00:02:57,250 --> 00:03:00,390
and so on this that they got bread LPC

55
00:03:00,390 --> 00:03:04,660
in replacing what they call advanced LPC
or a synchronous LPC

56
00:03:04,660 --> 00:03:08,140
and what LP CD it is a broad a
synchronicity

57
00:03:08,140 --> 00:03:12,720
a broadcast live bility and abroad at
the missing guarantees to LPC

58
00:03:12,720 --> 00:03:17,450
and because if there's any changes the
RPC t max out the switch to using

59
00:03:17,450 --> 00:03:21,099
by default the ale PC pro only knows

60
00:03:21,099 --> 00:03:24,510
instead opening pipes and what this
means is that

61
00:03:24,510 --> 00:03:27,950
all components that are using RP CD-four

62
00:03:27,950 --> 00:03:32,180
which are relying on named pipes a
pretty old and well-understood system

63
00:03:32,180 --> 00:03:35,480
are now using LPC Jan undocumented and

64
00:03:35,480 --> 00:03:39,849
very little understood system so even
though you've never coated with LTC in

65
00:03:39,849 --> 00:03:41,879
most applications done using LBC

66
00:03:41,879 --> 00:03:46,060
as long as using RPC application or some
application using RPC

67
00:03:46,060 --> 00:03:51,160
which is a remote procedure call using
LPC and because decom

68
00:03:51,160 --> 00:03:54,780
the distributed common object model uses
RPC

69
00:03:54,780 --> 00:03:58,269
now anytime in track with any common
object you using

70
00:03:58,269 --> 00:04:01,519
LPC and so arm

71
00:04:01,519 --> 00:04:05,530
decom is very very central to winners
for example every time you change the

72
00:04:05,530 --> 00:04:06,129
time

73
00:04:06,129 --> 00:04:11,060
your creating a GUI come object Windows
using my drivers

74
00:04:11,060 --> 00:04:16,009
are become objects Windows 8
applications on the Windows Store

75
00:04:16,009 --> 00:04:19,469
are common object so much everything is
this decom

76
00:04:19,469 --> 00:04:23,279
and if they don't use our PC and soapy
much every process today

77
00:04:23,279 --> 00:04:26,879
even the simplest lyn is application has
at least one active

78
00:04:26,879 --> 00:04:32,050
LBC connection to probably at least one
process running system writes

79
00:04:32,050 --> 00:04:35,460
so everyone assistance talking to you
other things

80
00:04:35,460 --> 00:04:38,999
and some those things are running with
extremely hyper religious and I becomes

81
00:04:38,999 --> 00:04:40,199
obviously very interesting

82
00:04:40,199 --> 00:04:43,349
playground so if most

83
00:04:43,349 --> 00:04:48,120
it many winners ebiz using RPC decom if
using my drivers in b.com

84
00:04:48,120 --> 00:04:52,089
it when a store applications already com
music him a bug in a PC

85
00:04:52,089 --> 00:04:56,669
you can own LBC servers including the
kernel she does have a few ABC's there

86
00:04:56,669 --> 00:04:57,770
is its own

87
00:04:57,770 --> 00:05:03,189
you can own any RVs RPC server and you
can own any come object

88
00:05:03,189 --> 00:05:06,869
now stepping back a bit if you find a
bug in the RPC runtime:

89
00:05:06,869 --> 00:05:10,119
over LPC which is called LRP see the
local

90
00:05:10,119 --> 00:05:13,539
where the LPC protocol behind our PC

91
00:05:13,539 --> 00:05:17,099
then you get on arbitrary RPC service an
arbitrary become objects

92
00:05:17,099 --> 00:05:21,539
says the defining bugs specific server
you can try to find bugs in the actual

93
00:05:21,539 --> 00:05:22,819
runtime:

94
00:05:22,819 --> 00:05:27,800
in the RPC layer or even better in the
actual ale PC runtime: the kernel

95
00:05:27,800 --> 00:05:31,629
if you have an LPC buck pretty much
means a from any sandbox for many

96
00:05:31,629 --> 00:05:32,719
context

97
00:05:32,719 --> 00:05:35,909
you can exploit the system and get
private rights even the

98
00:05:35,909 --> 00:05:40,129
most know if you take that chrome render
for example it's an example the pizza

99
00:05:40,129 --> 00:05:40,930
box

100
00:05:40,930 --> 00:05:44,669
even it surrender has a new PC handle to
someone so says you have

101
00:05:44,669 --> 00:05:48,029
an ABC handle if you have any see bike
om

102
00:05:48,029 --> 00:05:51,369
that on this becomes very very
interesting plus all the individual

103
00:05:51,369 --> 00:05:52,419
books that can exist

104
00:05:52,419 --> 00:05:57,069
in ABC servers themselves because the
jail PC server implement its own pack

105
00:05:57,069 --> 00:05:59,789
interface it's on messages its own logic

106
00:05:59,789 --> 00:06:04,930
and so because it is undocumented nobody
really expects you to talk to

107
00:06:04,930 --> 00:06:08,159
toots there's a look at our security
through obscurity that says well hey I'm

108
00:06:08,159 --> 00:06:10,039
II Microsoft team

109
00:06:10,039 --> 00:06:13,830
I'm implementing LPC server no one knows
how your PC works

110
00:06:13,830 --> 00:06:17,589
so or maybe I'm not gonna do all the
primary checking or maybe a lil

111
00:06:17,589 --> 00:06:21,749
we'll see so I talk a little about how
your PC works

112
00:06:21,749 --> 00:06:26,389
are very brief details on hike how LBC
service to clients communicate

113
00:06:26,389 --> 00:06:31,339
and some the behaviors arm behind LBC

114
00:06:31,339 --> 00:06:35,839
so if you're familiar busy sockets LPC
should be a little bit similar

115
00:06:35,839 --> 00:06:39,860
because begin with you have a server
that calls a Windows API

116
00:06:39,860 --> 00:06:43,490
NT LBC report give support name

117
00:06:43,490 --> 00:06:47,180
Sep attributes like how picking the
messages across a sport be

118
00:06:47,180 --> 00:06:51,270
and secured a scripture that says
hooking connected a sport

119
00:06:51,270 --> 00:06:54,439
the server thing it's a and I'll to
what's called an LPC

120
00:06:54,439 --> 00:06:59,069
server connection port into the
sportster Windows NT objects

121
00:06:59,069 --> 00:07:03,189
similar to meet XE similar to advance
semaphores

122
00:07:03,189 --> 00:07:07,309
so their name is going to be globally
accessible jobs badge in a space

123
00:07:07,309 --> 00:07:11,439
people will be ok able to open handles
the sports I'm and the use a standard

124
00:07:11,439 --> 00:07:14,249
Windows object model

125
00:07:14,249 --> 00:07:18,879
now have this name portents system like
Bob Sport

126
00:07:18,879 --> 00:07:22,279
the server will then call NTL PC send

127
00:07:22,279 --> 00:07:26,309
wat receive port to send a message on
the sport or to receive a message on a

128
00:07:26,309 --> 00:07:27,110
port

129
00:07:27,110 --> 00:07:30,610
of course very first time we starting up
the server you have nothing to send

130
00:07:30,610 --> 00:07:34,899
so you send nothing images block on
receiving messages

131
00:07:34,899 --> 00:07:38,659
if you're doing blocking calls and you
don't have to because ABC does support

132
00:07:38,659 --> 00:07:39,979
the sickness calls

133
00:07:39,979 --> 00:07:43,740
misreading blocking calls use a server
will now block on this API

134
00:07:43,740 --> 00:07:48,729
waiting for the first message that you
see and if this is a brand new server

135
00:07:48,729 --> 00:07:52,119
the first message should ever receive
should be the client trying to connect

136
00:07:52,119 --> 00:07:53,029
you

137
00:07:53,029 --> 00:07:57,709
so how does a client connect client
calls NTL PC connect port

138
00:07:57,709 --> 00:08:02,339
passes in the name at the port passes in
any attributes at the port on its side

139
00:08:02,339 --> 00:08:06,479
so I don't want to receive replies from
a server that a bigger than exploits for

140
00:08:06,479 --> 00:08:07,399
example

141
00:08:07,399 --> 00:08:10,979
and you can specify an initial
connection message s initial collection

142
00:08:10,979 --> 00:08:13,349
message allows a server for example

143
00:08:13,349 --> 00:08:16,639
to decide whether or not I should allow
you to connect

144
00:08:16,639 --> 00:08:19,839
but as long as the security scripture
says that

145
00:08:19,839 --> 00:08:23,270
Bob can connect a sport then blocking

146
00:08:23,270 --> 00:08:28,699
try to connect to port with this API
this point E LBC server will wake up

147
00:08:28,699 --> 00:08:32,560
now on the other hand whoever created at
Port Said at the sport is

148
00:08:32,560 --> 00:08:36,090
have been all in your system only then
you won't even be able to try connecting

149
00:08:36,090 --> 00:08:36,729
to it

150
00:08:36,729 --> 00:08:41,520
a lesser admin on your system so let's
say you're able to connect to it

151
00:08:41,520 --> 00:08:46,110
well now the several receive a
connection request so several wake up

152
00:08:46,110 --> 00:08:50,210
you'll get a packet that says this
connection request and if the client

153
00:08:50,210 --> 00:08:54,010
past in a connection payload the several
see the payload

154
00:08:54,010 --> 00:08:57,210
and some clients passing a little pale
that says things like

155
00:08:57,210 --> 00:09:01,020
are you know I'm version 1.0 here's my

156
00:09:01,020 --> 00:09:04,090
data here's some is a magic word

157
00:09:04,090 --> 00:09:07,860
and several validate are you passing in
the initial connection packet that I

158
00:09:07,860 --> 00:09:11,450
expect this is something that servicing
clients can implement other out

159
00:09:11,450 --> 00:09:14,740
the server also gets from the OS the PID

160
00:09:14,740 --> 00:09:19,670
that'd the said the token and a few
other pieces of information about

161
00:09:19,670 --> 00:09:23,350
was trying to connect to it sorta sirkin
take action say

162
00:09:23,350 --> 00:09:27,920
well I am allowing arbitrary serviced
clients to connect

163
00:09:27,920 --> 00:09:31,660
but if they're sit doesn't match or
their citizens something I like they'll

164
00:09:31,660 --> 00:09:34,790
disconnect the service can take
decisions on whether or not

165
00:09:34,790 --> 00:09:38,720
they want to accept the connection or
not once they make the decision they

166
00:09:38,720 --> 00:09:40,110
will always call

167
00:09:40,110 --> 00:09:43,990
NTL PC except can export now even the
name says

168
00:09:43,990 --> 00:09:47,180
except is a boolean variable that says

169
00:09:47,180 --> 00:09:50,760
do you actually want to accept it or not
so few rejected

170
00:09:50,760 --> 00:09:54,000
than a client wakes up and gets a status
ever

171
00:09:54,000 --> 00:09:57,130
is not get a handle if you accepted

172
00:09:57,130 --> 00:10:00,880
you can then respond to the connection
acting it's a

173
00:10:00,880 --> 00:10:04,500
you passed me saying version 3 I'm
accepting your connection but I'm

174
00:10:04,500 --> 00:10:07,600
responding by letting you know them
actually implementing vision for

175
00:10:07,600 --> 00:10:12,110
justify up seeking response your pack as
well and as a server

176
00:10:12,110 --> 00:10:15,270
you can allocate your own structure to
identify

177
00:10:15,270 --> 00:10:19,630
this client because if you're gonna have
456 a hundred clients

178
00:10:19,630 --> 00:10:22,660
as you start receiving actual messages
from the clients who want to know who

179
00:10:22,660 --> 00:10:23,840
you talking to

180
00:10:23,840 --> 00:10:27,420
so you would usually malloc some Journal
structure

181
00:10:27,420 --> 00:10:30,500
own an associate that structure with the
sport

182
00:10:30,500 --> 00:10:33,920
when you call the Kinect API so when you
call that connect that sorry that except

183
00:10:33,920 --> 00:10:34,740
AP a

184
00:10:34,740 --> 00:10:38,630
Sony call that except function you pass
in a port contact such as whatever

185
00:10:38,630 --> 00:10:41,510
pointer you would like to associate with
the sport

186
00:10:41,510 --> 00:10:46,050
from now on whenever the client talks to
you that specific line are you accepted

187
00:10:46,050 --> 00:10:49,310
you're gonna get the port context so
sure the class you know

188
00:10:49,310 --> 00:10:52,400
was talking to you now the server gets

189
00:10:52,400 --> 00:10:56,480
a new handle so you had the initial
handle for your connection port

190
00:10:56,480 --> 00:11:00,410
this is the handle through which clients
can attempt to connect

191
00:11:00,410 --> 00:11:04,420
once a client connects to you once you
accept the client you get a new handle

192
00:11:04,420 --> 00:11:07,960
which is similar to BSD sockets right
yes the sockets you call

193
00:11:07,960 --> 00:11:10,980
socket happy service socket nikol except

194
00:11:10,980 --> 00:11:14,810
to be a single time you want to accept
the client and you getting socket handle

195
00:11:14,810 --> 00:11:18,310
the same thing in LBC you on the client
side

196
00:11:18,310 --> 00:11:22,050
the climb ever was blocked on a connect
when you connect returns

197
00:11:22,050 --> 00:11:26,240
the client gets a handle to see have
three handles in this case

198
00:11:26,240 --> 00:11:30,210
the master server connection port handle
which connections are being made

199
00:11:30,210 --> 00:11:33,370
you have the client site handle and a
server-side

200
00:11:33,370 --> 00:11:37,470
and ask new clients try to connect you
can have additional clients I handles

201
00:11:37,470 --> 00:11:40,880
an additional service I handled as well
plus the master

202
00:11:40,880 --> 00:11:44,700
handle that he began so should be fairly
easy

203
00:11:44,700 --> 00:11:50,100
simple comparable semantics than most
other particles implement as well

204
00:11:50,100 --> 00:11:53,570
now when you actually send an LPC
message the payload can be anything you

205
00:11:53,570 --> 00:11:54,260
want

206
00:11:54,260 --> 00:11:57,600
the only thing is that has to have the
sport header on top of it

207
00:11:57,600 --> 00:12:00,840
and is a document structure in a
Microsoft better

208
00:12:00,840 --> 00:12:04,060
outs this port header basically has are

209
00:12:04,060 --> 00:12:07,120
little he said data that tells thus the
server

210
00:12:07,120 --> 00:12:10,990
how big is your message and what
happened message are we sending

211
00:12:10,990 --> 00:12:14,680
it also has a space for the pit and it
it now you don't feel that out

212
00:12:14,680 --> 00:12:18,960
the kernel fill that out for you and so
on every pass a message

213
00:12:18,960 --> 00:12:22,500
the receiver the message will always get
you're paid and looted

214
00:12:22,500 --> 00:12:26,530
plus the actual message length that you
passed it

215
00:12:26,530 --> 00:12:31,510
now how big this message can be depends
on LPC or LBC so back in the LBC days

216
00:12:31,510 --> 00:12:33,830
ago is because to 86 bytes

217
00:12:33,830 --> 00:12:37,880
in the LBC world today can be as big a
64 kilobytes

218
00:12:37,880 --> 00:12:42,510
what if you need to send a bigger
message then it won't fit

219
00:12:42,510 --> 00:12:46,760
at this point you create LTC lets you do
which is an LP seaport

220
00:12:46,760 --> 00:12:51,500
section sections are the windows name
for shared-memory objects

221
00:12:51,500 --> 00:12:55,450
and so section represents some pieces
RAM that the server

222
00:12:55,450 --> 00:12:59,650
wants to share with other clients and
the server will receive a few

223
00:12:59,650 --> 00:13:03,430
this region around solo covert address
space mapping

224
00:13:03,430 --> 00:13:07,430
that points that is Diddy's to these
bites on the message gets sent to a

225
00:13:07,430 --> 00:13:08,790
client

226
00:13:08,790 --> 00:13:12,070
the client will receive a view that maps
is RAM as well

227
00:13:12,070 --> 00:13:15,570
and now both the server and the client
to share the address space that

228
00:13:15,570 --> 00:13:17,310
corresponds to this page is RAM

229
00:13:17,310 --> 00:13:21,530
and so today to visit to be copied in in
apt out there were six and forty

230
00:13:21,530 --> 00:13:25,740
with more than 64 kilobytes you wasting
a lot of time copping the enemy think

231
00:13:25,740 --> 00:13:26,810
line sir

232
00:13:26,810 --> 00:13:29,980
which shared memory you don't have to
copying me there

233
00:13:29,980 --> 00:13:33,740
there is always there now that Don't Ask
%ah some interesting side effects that

234
00:13:33,740 --> 00:13:34,890
they'll talk about

235
00:13:34,890 --> 00:13:40,090
but it's a lot faster than up the normal
marshalling the martian at the a

236
00:13:40,090 --> 00:13:44,200
so how do you pass a view we passed out
with our weather or called LPC

237
00:13:44,200 --> 00:13:45,529
attributes

238
00:13:45,529 --> 00:13:49,500
I'll share in a sec before get
attributes

239
00:13:49,500 --> 00:13:53,510
when you actually send a message LPC you
can send it

240
00:13:53,510 --> 00:13:58,020
has a datagram or so request in this
again very similar to

241
00:13:58,020 --> 00:14:01,790
network for adults so request past have
a reply

242
00:14:01,790 --> 00:14:06,120
that's the standard TCP model a datagram
does not have to reapply

243
00:14:06,120 --> 00:14:09,140
back you cannot you will not get a reply
in a server

244
00:14:09,140 --> 00:14:12,910
cannot send a reply so if using
synchronous LPC

245
00:14:12,910 --> 00:14:17,630
we sent a request you gonna block in
reply have to get a reply back

246
00:14:17,630 --> 00:14:21,350
on if using a synchronous LPC and you
sent

247
00:14:21,350 --> 00:14:25,460
I request then you can either set up
what's called I'll completion port

248
00:14:25,460 --> 00:14:30,120
in this is standard MSDN documented
mechanism that when is about his use for

249
00:14:30,120 --> 00:14:34,700
he synchronous file i/o he can use for a
synchronous LPC I as well

250
00:14:34,700 --> 00:14:38,070
you have a car I'll call back function
so if you actually implementing the RPC

251
00:14:38,070 --> 00:14:39,529
server in the kernel

252
00:14:39,529 --> 00:14:42,680
on you can have a call back function
that gets a secrecy call

253
00:14:42,680 --> 00:14:46,470
every single time this message week is
called about memory completion

254
00:14:46,470 --> 00:14:50,310
stitches feature so these these two
techniques a lighter see

255
00:14:50,310 --> 00:14:54,340
a single his messages otherwise if you
can be doing sinkers LBC

256
00:14:54,340 --> 00:14:57,740
your thread will block every single time
he said reply

257
00:14:57,740 --> 00:15:01,360
youth middle block every single time you
ate on a request and it's your choice

258
00:15:01,360 --> 00:15:03,800
which of these mechanisms you 1 use

259
00:15:03,800 --> 00:15:07,830
now with into grams you'll never block
because there's nothing for you block

260
00:15:07,830 --> 00:15:11,900
there Graham is likely P send a message
hope it comes back

261
00:15:11,900 --> 00:15:17,270
hope because received you have no idea
and nothing will ever come back to you

262
00:15:17,270 --> 00:15:20,360
so what are these attributes that
omission on the earliest light so I so

263
00:15:20,360 --> 00:15:21,650
we have a DataView

264
00:15:21,650 --> 00:15:25,120
when you have a minute we'll never share
section yet these views

265
00:15:25,120 --> 00:15:28,620
you have to up for the menagerie it so
attributes are

266
00:15:28,620 --> 00:15:32,440
ABC's way of handling what I would call
medea

267
00:15:32,440 --> 00:15:37,490
see a payload is a data it some opaque
information between you

268
00:15:37,490 --> 00:15:41,310
and a ser between the server and the
client on the meta-data

269
00:15:41,310 --> 00:15:45,110
is information that it needs to be
trusted to some sort of way

270
00:15:45,110 --> 00:15:49,550
or needs to be tracked in a special way
that we don't want to treat a peak Lee

271
00:15:49,550 --> 00:15:53,390
and LPC in their legacy system there
were no attributes

272
00:15:53,390 --> 00:15:56,420
so in the LBC system if you want it to
you

273
00:15:56,420 --> 00:16:00,470
share data that had some sort of trust
level social with that that had some

274
00:16:00,470 --> 00:16:01,800
sort of requirement

275
00:16:01,800 --> 00:16:05,860
around its reference counting LPC did
not know that for you

276
00:16:05,860 --> 00:16:10,310
so if you pass the pointer with LPC yet
to hope the point to still be valid

277
00:16:10,310 --> 00:16:13,680
she passed the handle the LBC with LPC
you have to hope

278
00:16:13,680 --> 00:16:18,910
handles the ballot with LPC his waist
actually track

279
00:16:18,910 --> 00:16:22,150
he's these pointers aren't handles for
these other

280
00:16:22,150 --> 00:16:26,250
trusted resources and so for example if
you have a shared view

281
00:16:26,250 --> 00:16:29,460
you passing the address at that you
between the client and server

282
00:16:29,460 --> 00:16:33,770
is wanted to share that arm that address
will be packed

283
00:16:33,770 --> 00:16:37,890
in attribute called the data you
attribute in the kernel manage

284
00:16:37,890 --> 00:16:40,950
the value that attribute the kernel
manage sending

285
00:16:40,950 --> 00:16:45,190
back and forth attributes soon I can you
to lie to the client or the server about

286
00:16:45,190 --> 00:16:46,170
that address

287
00:16:46,170 --> 00:16:50,120
LC that also gives you some additional
features I'm or let anyone have a

288
00:16:50,120 --> 00:16:51,279
sequence number

289
00:16:51,279 --> 00:16:55,370
you want to know between this client and
the server what is the

290
00:16:55,370 --> 00:16:59,279
is is the nth message or the and plus
one message what's the actual

291
00:16:59,279 --> 00:17:03,510
sequence number this message said if you
have and a synchronous server

292
00:17:03,510 --> 00:17:06,899
and receiving messages out of order
which will happen when you have any

293
00:17:06,899 --> 00:17:08,039
sinking server

294
00:17:08,039 --> 00:17:11,899
you can reorder them based on a secret
stamp or trying to check the messages

295
00:17:11,899 --> 00:17:13,069
global unique

296
00:17:13,069 --> 00:17:16,419
you like to have something like a
message id: with the kernel can fill in

297
00:17:16,419 --> 00:17:20,539
those heels for you the LBC random the
kernel contract sequence numbers for you

298
00:17:20,539 --> 00:17:24,039
the contract message it is for you if
you'd like that then you have what's

299
00:17:24,039 --> 00:17:25,429
called a context that

300
00:17:25,429 --> 00:17:29,509
the context attributes keeps track in
all this per message specific mandate as

301
00:17:29,509 --> 00:17:31,129
well

302
00:17:31,129 --> 00:17:34,190
the other kind about you can have is a
nationally that says

303
00:17:34,190 --> 00:17:38,179
what was security context of that wrist
Center

304
00:17:38,179 --> 00:17:41,970
when you sweat send this message because
you may want to know

305
00:17:41,970 --> 00:17:45,919
okay so I got this message from an admin
where I got this message from an

306
00:17:45,919 --> 00:17:47,389
unprivileged user

307
00:17:47,389 --> 00:17:51,059
HathiTrust that data well ask for
security attributes

308
00:17:51,059 --> 00:17:55,269
and the kernel fill in for you and
finally if you want to pass handles

309
00:17:55,269 --> 00:17:56,580
meeting a client and server

310
00:17:56,580 --> 00:18:00,119
use a handle attributes mushing example
how that works

311
00:18:00,119 --> 00:18:03,379
so every time you send out a message
detail LPC

312
00:18:03,379 --> 00:18:07,570
which of these four attributes your also
packaging with that message

313
00:18:07,570 --> 00:18:11,330
now some others attributes you control
like handle attributes you specify what

314
00:18:11,330 --> 00:18:12,480
happened at the saint

315
00:18:12,480 --> 00:18:16,240
the DataView actually you specify with
the descent the context that's good

316
00:18:16,240 --> 00:18:18,499
security attribute the kernel fill in
for you

317
00:18:18,499 --> 00:18:21,720
you need to pick in sequence number
obviously has the trust

318
00:18:21,720 --> 00:18:24,809
so everytime messages sent LPC builds

319
00:18:24,809 --> 00:18:27,909
this had to be stretchered and packages
with the message

320
00:18:27,909 --> 00:18:32,269
and that in another layer save your data
layer and you have a minute the only

321
00:18:32,269 --> 00:18:36,499
every time a message is received the
receiving side I can say

322
00:18:36,499 --> 00:18:39,809
here's the LPC input attributes and I
like to receive

323
00:18:39,809 --> 00:18:43,480
as a server I can say I want receive
handle attributes

324
00:18:43,480 --> 00:18:47,100
I want receive context attributes I
don't want to receive the interview

325
00:18:47,100 --> 00:18:47,799
attributes

326
00:18:47,799 --> 00:18:51,470
see get to specify what actually too
willing to accept

327
00:18:51,470 --> 00:18:54,720
which attributes you don't want to
accept

328
00:18:54,720 --> 00:18:58,539
and so a sender can only send you valid
attributes

329
00:18:58,539 --> 00:19:02,470
but the receiver doesn't want to receive
them then use the sender I there won't

330
00:19:02,470 --> 00:19:04,279
be able to send a message at all

331
00:19:04,279 --> 00:19:07,379
or the message will just be dropped or

332
00:19:07,379 --> 00:19:11,200
the data and the attributes will not be
exposed will not be sent

333
00:19:11,200 --> 00:19:14,519
the server in other words if I have
let's say

334
00:19:14,519 --> 00:19:19,289
a DataView at review and saying here's a
shame in the section I want to share

335
00:19:19,289 --> 00:19:22,990
and I'm sending a message with that
attributes and receiving said you're

336
00:19:22,990 --> 00:19:23,440
saying

337
00:19:23,440 --> 00:19:26,820
I don't want to receive any ship many
sections from you

338
00:19:26,820 --> 00:19:30,490
then that section simply will not be
mapped and the other hand

339
00:19:30,490 --> 00:19:35,149
if you accept an attribute then the
kernel of villains and data

340
00:19:35,149 --> 00:19:40,080
will take action based on that review to
be saying you want a context attributes

341
00:19:40,080 --> 00:19:43,710
the kernel will generate a sequence
number the kernel will generate a

342
00:19:43,710 --> 00:19:44,749
message id:

343
00:19:44,749 --> 00:19:48,519
and you're going to get that date if you
saying that she wants security attribute

344
00:19:48,519 --> 00:19:52,179
the kernel will jet will capture the
token will capture the said

345
00:19:52,179 --> 00:19:55,690
and we'll send that to you so that's not
so bad

346
00:19:55,690 --> 00:19:58,789
but if on the other hand you say that
you are willing to accept their the

347
00:19:58,789 --> 00:19:59,629
attributes

348
00:19:59,629 --> 00:20:03,259
you going to get what every viewer sent
by the client

349
00:20:03,259 --> 00:20:06,470
mapping your address space so the
clients and a

350
00:20:06,470 --> 00:20:10,259
500 megabytes view you're going to map a
five hundred megabytes

351
00:20:10,259 --> 00:20:13,820
you that address this as well the
clients and 220 handles

352
00:20:13,820 --> 00:20:17,239
you're going to get twenty handles
duplicating address space

353
00:20:17,239 --> 00:20:20,470
and that are you up to cable on that
point it's your job to manage these

354
00:20:20,470 --> 00:20:22,519
resources that were given to you

355
00:20:22,519 --> 00:20:25,989
by your client or by receiver

356
00:20:25,989 --> 00:20:29,289
so for example the handle attribute is
used when I want this

357
00:20:29,289 --> 00:20:32,659
share handle with another server or
client

358
00:20:32,659 --> 00:20:37,600
in the LBC days in my payload output
handle number eight

359
00:20:37,600 --> 00:20:42,129
and the curl would hope handle number
eight is valid to begin with

360
00:20:42,129 --> 00:20:45,980
and would just send that number 8 the
receiving side

361
00:20:45,980 --> 00:20:49,919
the receiving side with an have to hope
that 8 is still valid

362
00:20:49,919 --> 00:20:53,460
might have been happen our leader
must've must hope that

363
00:20:53,460 --> 00:20:57,960
8 is the type of object it expects to be
so maybe I want the process handle

364
00:20:57,960 --> 00:21:02,139
eight is a threat handle all too bad
maybe it was valid

365
00:21:02,139 --> 00:21:05,450
but then you close 18 you reopen date so
now

366
00:21:05,450 --> 00:21:09,249
a to some other object with LTC 80 know
any of us

367
00:21:09,249 --> 00:21:12,919
to a PC comes in and says you want to
send a handle use an attribute

368
00:21:12,919 --> 00:21:16,980
package that handle a special way that
tells a colonel this number eight

369
00:21:16,980 --> 00:21:20,860
mean something any means that this is a
threat object

370
00:21:20,860 --> 00:21:24,679
and then a colonel valid when you send
this message is ate a valid

371
00:21:24,679 --> 00:21:28,639
is a threat and if so it's gonna make a
copy of 8

372
00:21:28,639 --> 00:21:32,029
into kernel object table now there's
going to be an actual

373
00:21:32,029 --> 00:21:35,559
colonel handle 28 let's call it 88

374
00:21:35,559 --> 00:21:40,259
and its gonna send 88 receiver at the
LBC write them on the receiver will

375
00:21:40,259 --> 00:21:40,889
check

376
00:21:40,889 --> 00:21:45,399
is 88 palette yes is 88 with the server
thinks it is

377
00:21:45,399 --> 00:21:48,970
to the service says I want process
handles that you sent about threat

378
00:21:48,970 --> 00:21:49,789
handle

379
00:21:49,789 --> 00:21:53,340
I'm gonna get rid of that the service
said it wanted a threat handle you

380
00:21:53,340 --> 00:21:55,009
passed in a threat at Allgood

381
00:21:55,009 --> 00:21:58,139
never gonna make another copy this
handle its Kyle

382
00:21:58,139 --> 00:22:01,629
48 which is on the ballot for the
receiving side

383
00:22:01,629 --> 00:22:04,730
and so this way we make sure that the
original handle

384
00:22:04,730 --> 00:22:08,769
if you mess around with it nothing back
it happen if the original have handle

385
00:22:08,769 --> 00:22:10,360
wasn't about to begin with

386
00:22:10,360 --> 00:22:13,720
or was pointing to another object you
never can receive it

387
00:22:13,720 --> 00:22:17,889
and this is a really nice mechanism that
guarantees to receiving Silex over

388
00:22:17,889 --> 00:22:21,679
I'm getting about handles similarly

389
00:22:21,679 --> 00:22:24,950
if you attribute has similar guarantees

390
00:22:24,950 --> 00:22:28,639
for clients and servers so I want to
send you some data

391
00:22:28,639 --> 00:22:32,249
a map it over 64 kilobytes uses view

392
00:22:32,249 --> 00:22:35,480
what are the things that ABC gives you
with views

393
00:22:35,480 --> 00:22:39,629
as you can see that have you is
re-release and this why send you one

394
00:22:39,629 --> 00:22:41,179
make my message

395
00:22:41,179 --> 00:22:45,210
in my view gets unmapped you receive the
one thing about you

396
00:22:45,210 --> 00:22:49,070
and think its mapping your address space
you sent back to me

397
00:22:49,070 --> 00:22:52,610
he gets and mapping your address space
and every map in mind

398
00:22:52,610 --> 00:22:56,059
in this way from talking to fifty
different clients and I'm sending one

399
00:22:56,059 --> 00:22:57,049
make my messages

400
00:22:57,049 --> 00:23:01,039
I don't have to keep map in my address
space 51 make by deeds

401
00:23:01,039 --> 00:23:06,139
so that's one less thing it gives the
other really messing it gives you

402
00:23:06,139 --> 00:23:10,139
is a believer secured view with secure
view says is

403
00:23:10,139 --> 00:23:13,309
well I have a client and the server

404
00:23:13,309 --> 00:23:17,840
and they're sharing data what can happen
is

405
00:23:17,840 --> 00:23:22,090
I can have a client sending a message to
the server

406
00:23:22,090 --> 00:23:25,610
in member they have two separate views

407
00:23:25,610 --> 00:23:29,539
but the studios are sharing the exact
same

408
00:23:29,539 --> 00:23:33,659
he said Brown and so I can send you a
message that has that's a length

409
00:23:33,659 --> 00:23:35,950
associate with this and say the length
that the message

410
00:23:35,950 --> 00:23:40,549
is no eight bytes and they've got a
pointer to some payload

411
00:23:40,549 --> 00:23:43,570
so this is merely rights 8 in RAM

412
00:23:43,570 --> 00:23:47,850
it writes the paler in RAM which
immediately rights Aiden server address

413
00:23:47,850 --> 00:23:48,789
space

414
00:23:48,789 --> 00:23:52,139
and what's the point in a survey
Christmas foreseeing the server does is

415
00:23:52,139 --> 00:23:53,159
valid length

416
00:23:53,159 --> 00:23:56,629
8 is smaller than my maximum

417
00:23:56,629 --> 00:24:00,690
good to go now I'm going to amend copy
at this length

418
00:24:00,690 --> 00:24:04,499
into some point there from that point
her and summer batted the men copy

419
00:24:04,499 --> 00:24:08,369
still referencing your input number here

420
00:24:08,369 --> 00:24:11,460
well on the client side I can race with
you

421
00:24:11,460 --> 00:24:15,710
in change this 8 after you about it to
let say

422
00:24:15,710 --> 00:24:19,480
800 now used only see it 100

423
00:24:19,480 --> 00:24:22,639
and medium m copy you mean cupping 800
bytes

424
00:24:22,639 --> 00:24:26,580
so it is a simple mammoth use versus
time of checkout

425
00:24:26,580 --> 00:24:29,779
what you have a system cost for example
but over shared memory

426
00:24:29,779 --> 00:24:33,779
becomes a lot easier to do this kind of
attack

427
00:24:33,779 --> 00:24:37,029
so this becomes a huge problem IndyCar

428
00:24:37,029 --> 00:24:41,940
because the lady come works is what I'm
actually packaging here

429
00:24:41,940 --> 00:24:46,679
is an actual call so all my scaler
arguments on my pointer arguments

430
00:24:46,679 --> 00:24:49,720
the actual the very call I'm making
fitness com object

431
00:24:49,720 --> 00:24:53,710
is going to be in a shared memory
section and so all the parameters am

432
00:24:53,710 --> 00:24:55,029
sending to function

433
00:24:55,029 --> 00:24:58,369
are all going to be in the Sherman the
section and if I can change the

434
00:24:58,369 --> 00:25:01,859
parameters of the function while the
function is actually running

435
00:25:01,859 --> 00:25:05,700
that's obviously very bad and so with
LPC

436
00:25:05,700 --> 00:25:08,399
there is nothing you can do about this
and that's another reason why we aren't

437
00:25:08,399 --> 00:25:09,619
using pipes

438
00:25:09,619 --> 00:25:13,999
with LPC that use can be marks secured

439
00:25:13,999 --> 00:25:18,109
not secured says is you write your data
here

440
00:25:18,109 --> 00:25:21,499
in his view just like before and

441
00:25:21,499 --> 00:25:25,779
when you are actually sending the
message from client to server

442
00:25:25,779 --> 00:25:29,639
as it crosses the boundary this view
gets remapped

443
00:25:29,639 --> 00:25:36,049
read only and now they're receiving view
gets mapped read/write

444
00:25:36,049 --> 00:25:40,749
and now the cervical sender the client
can no longer change

445
00:25:40,749 --> 00:25:45,029
the data in the view while the server
receivers processing

446
00:25:45,029 --> 00:25:49,230
on top about a bunch of undocumented
witness functions are used

447
00:25:49,230 --> 00:25:52,549
to make this whole region I'm modifiable
on

448
00:25:52,549 --> 00:25:55,859
non on capitol so locked in memory

449
00:25:55,859 --> 00:25:59,100
virtual protect won't work remapping it
won't work

450
00:25:59,100 --> 00:26:03,769
so all these EP as a slider use to make
sure that there's no way

451
00:26:03,769 --> 00:26:06,840
that your ever going to be able to touch
that memory again

452
00:26:06,840 --> 00:26:10,100
wilder receiving sites process so this
is

453
00:26:10,100 --> 00:26:13,190
key component howdy comes able to work

454
00:26:13,190 --> 00:26:17,029
and again the attribute mechanism lets
the kernel manage all this

455
00:26:17,029 --> 00:26:20,419
in a safe and secure way so these are
look like

456
00:26:20,419 --> 00:26:24,149
really good features to have and makes
LBC looks really good and

457
00:26:24,149 --> 00:26:28,059
it's too from an injury standpoint LPC
is a really advanced and useful

458
00:26:28,059 --> 00:26:34,230
indications but things came obviously
gonna rock

459
00:26:34,230 --> 00:26:38,059
so here's a look sample are some code on
how you would

460
00:26:38,059 --> 00:26:42,289
initialize support say trying to connect
to a server

461
00:26:42,289 --> 00:26:45,419
the first thing you do is initialized
your own client port

462
00:26:45,419 --> 00:26:48,669
you can tell your PC when you when I
connect to the server these are my

463
00:26:48,669 --> 00:26:49,519
attributes

464
00:26:49,519 --> 00:26:54,549
for example I'm going to be receiving up
to 60 kilobytes with a reply

465
00:26:54,549 --> 00:26:57,919
because you know what you can have a
malicious client mail server militia

466
00:26:57,919 --> 00:26:58,909
server

467
00:26:58,909 --> 00:27:03,470
and so me to say the sir as try to send
you with a 6-2 kilobytes

468
00:27:03,470 --> 00:27:07,489
I'm not going to accept that message and
his best pal in a security want dynamic

469
00:27:07,489 --> 00:27:11,480
tracking stock tracking this is usual
Windows purple stuff

470
00:27:11,480 --> 00:27:16,799
so very easy now I have this port
attributes structure

471
00:27:16,799 --> 00:27:20,059
the next thing I want to do his initial
I some sort of connection message

472
00:27:20,059 --> 00:27:23,700
so lets it happen LP Cesar that needs me
to

473
00:27:23,700 --> 00:27:28,700
actually send a message when i connect
well as I mentioned even the simplest

474
00:27:28,700 --> 00:27:32,019
ABC message has to have this port header

475
00:27:32,019 --> 00:27:35,799
in that port header basic has the length
that the message is being sent

476
00:27:35,799 --> 00:27:39,340
it has the message that the letter the
message including the message header

477
00:27:39,340 --> 00:27:42,859
and left a message excluding the message
header

478
00:27:42,859 --> 00:27:47,629
so all I'm saying here is I have a
message connects structure

479
00:27:47,629 --> 00:27:51,539
its length is sizeof message connect in
the day that the payload is whatever

480
00:27:51,539 --> 00:27:52,559
message Connect is

481
00:27:52,559 --> 00:27:56,809
minus the size and Heather so you do
this every single time he sent any

482
00:27:56,809 --> 00:27:58,619
certain LBC message

483
00:27:58,619 --> 00:28:03,440
simple enough right next I want actually
connect the report

484
00:28:03,440 --> 00:28:06,529
so there's a CPIM mention in Kiel PC
connect port

485
00:28:06,529 --> 00:28:09,729
and i passin handle at all

486
00:28:09,729 --> 00:28:13,739
get this is why I'm gonna get my server
port at the name to serve on track

487
00:28:13,739 --> 00:28:14,450
connect to

488
00:28:14,450 --> 00:28:18,710
the attributes to the poor and try to
connect to ass enough like you too says

489
00:28:18,710 --> 00:28:21,960
that says I want this request to be a
synchronous

490
00:28:21,960 --> 00:28:25,450
you can have a synchronous connections
which kinda weird we basically I'm gonna

491
00:28:25,450 --> 00:28:26,879
connect to you but let me know

492
00:28:26,879 --> 00:28:31,919
later you can do that you want to and
passing in the connection message

493
00:28:31,919 --> 00:28:35,519
that I created on the Earth's light
which is empty this is a server for

494
00:28:35,519 --> 00:28:36,879
example that needs you

495
00:28:36,879 --> 00:28:41,539
send a connection message but it doesn't
actually the payload it just once you

496
00:28:41,539 --> 00:28:45,059
send a message maybe it's gonna reply to
your message so you have to allocate

497
00:28:45,059 --> 00:28:45,649
about

498
00:28:45,649 --> 00:28:49,379
and then a passing in that my connection
message sizes

499
00:28:49,379 --> 00:28:53,019
size i connect such so assuming that
this

500
00:28:53,019 --> 00:28:57,119
servant name actually exists assuming
had access the server name

501
00:28:57,119 --> 00:29:01,249
assuming that my connection message is
valid and is a

502
00:29:01,249 --> 00:29:05,499
up the right size the server will accept
my connection not

503
00:29:05,499 --> 00:29:10,269
and all these no parameters at the end
our way I could receive reply back

504
00:29:10,269 --> 00:29:14,299
so if I don't receive reply back santa
person Spanish knots

505
00:29:14,299 --> 00:29:18,669
right in here I'm gonna get a connection
if it all worked out I get a handle back

506
00:29:18,669 --> 00:29:22,899
to Sir now I'm mister communicating the
server

507
00:29:22,899 --> 00:29:25,989
something to tell APC with have
attributes

508
00:29:25,989 --> 00:29:30,350
I'm gonna sent in my messages and said
on here am saying

509
00:29:30,350 --> 00:29:34,100
and passing instant message attributes
and I'm gonna be passing in

510
00:29:34,100 --> 00:29:37,330
DataView at you night allocate a buffer

511
00:29:37,330 --> 00:29:41,700
Ford is they have you actually so this
is gonna allocate a second structure

512
00:29:41,700 --> 00:29:44,950
for my actions so everytime i send a
message I'm gonna send

513
00:29:44,950 --> 00:29:50,129
this minute there a pillared and the
data payload a little bit later on

514
00:29:50,129 --> 00:29:55,269
is enough next up is let's air I'll
actually want to send a view

515
00:29:55,269 --> 00:29:58,499
so I won't bore you with all the code
here basically ike call

516
00:29:58,499 --> 00:30:02,129
LPC to create a section view a pass in a
size

517
00:30:02,129 --> 00:30:05,559
and then I built my you attribute I set
it up

518
00:30:05,559 --> 00:30:08,950
here's my son my view size and I tell

519
00:30:08,950 --> 00:30:12,809
LPC go ahead and maps Q so for sexually
82 section

520
00:30:12,809 --> 00:30:16,809
then I'm map to view into my address
space

521
00:30:16,809 --> 00:30:20,119
and then when i send a message is going
to be mapped into the receiving size

522
00:30:20,119 --> 00:30:21,639
dress base as well

523
00:30:21,639 --> 00:30:25,460
so for all worked out I'm here mouse on
mapping the

524
00:30:25,460 --> 00:30:29,139
you ass arteries so gotta orderlies view

525
00:30:29,139 --> 00:30:33,190
on my knee sending site somebody
attribute

526
00:30:33,190 --> 00:30:36,979
I allocated it mapped it and fill that
out

527
00:30:36,979 --> 00:30:40,340
I've got my connection message an
upcoming connection how do I send a

528
00:30:40,340 --> 00:30:42,009
message

529
00:30:42,009 --> 00:30:45,220
well when i send a message

530
00:30:45,220 --> 00:30:48,929
I'm gonna have to specify are the
attributes that I setup

531
00:30:48,929 --> 00:30:53,070
which ones are valid in this message
this lets you set up an ax be tougher

532
00:30:53,070 --> 00:30:53,789
once

533
00:30:53,789 --> 00:30:57,899
and every time you send a message you
can decide which actually serve ballot

534
00:30:57,899 --> 00:31:01,509
she can actually have some leftover
argument attributes that you don't want

535
00:31:01,509 --> 00:31:02,749
to use right now

536
00:31:02,749 --> 00:31:06,029
and see simply don't or that man is
being about in this way you don't have

537
00:31:06,029 --> 00:31:07,559
to reallocate an app to be

538
00:31:07,559 --> 00:31:10,909
structure every single time we calculate
all the attributes in the world

539
00:31:10,909 --> 00:31:14,450
and every time you send a message decide
which one US cent

540
00:31:14,450 --> 00:31:18,470
and some settings the interview and I'm
gonna fill in the DataView

541
00:31:18,470 --> 00:31:22,009
with 4141 4142 have a one-page worth

542
00:31:22,009 --> 00:31:25,179
%uh shared memory and spilling out for
for one

543
00:31:25,179 --> 00:31:28,419
and they're much going to send a message
the server

544
00:31:28,419 --> 00:31:32,639
so every time you send a message again
have had this header

545
00:31:32,639 --> 00:31:36,559
so this is the same code as earlier and
then I'm going to send a message to my

546
00:31:36,559 --> 00:31:38,840
server

547
00:31:38,840 --> 00:31:42,859
minitel my side to release the message
once is done

548
00:31:42,859 --> 00:31:46,149
here's the message and hear the
attributes that the message and the size

549
00:31:46,149 --> 00:31:47,440
and message

550
00:31:47,440 --> 00:31:50,739
and again I passed the No here because I
don't want any reply

551
00:31:50,739 --> 00:31:55,960
don't care by reply so not only the
server would receive my message

552
00:31:55,960 --> 00:32:00,059
and his view and the server is accepting
beta views

553
00:32:00,059 --> 00:32:03,599
so the server on its and also passed in
this flag

554
00:32:03,599 --> 00:32:06,899
then the server will automatically get
my fork you bite you

555
00:32:06,899 --> 00:32:10,609
map in its press space and that the
servers job to

556
00:32:10,609 --> 00:32:13,970
release that you

557
00:32:13,970 --> 00:32:18,749
and so here's were things interesting
it's the service job to release that the

558
00:32:18,749 --> 00:32:22,960
into the service not expecting to view
it a server doesn't know how to release

559
00:32:22,960 --> 00:32:23,659
a few

560
00:32:23,659 --> 00:32:27,029
over serve her release that you
incorrectly the server

561
00:32:27,029 --> 00:32:30,609
remains with love you and then I can
keep sending

562
00:32:30,609 --> 00:32:35,229
another view at another view another you

563
00:32:35,229 --> 00:32:38,239
so with data views once you receive it

564
00:32:38,239 --> 00:32:41,720
once as the server you said am willing
to receive use

565
00:32:41,720 --> 00:32:45,710
to actually get rid of the view you for
support have to mark

566
00:32:45,710 --> 00:32:48,830
that you ass available for release

567
00:32:48,830 --> 00:32:52,249
so you're either going to set this flag
that says

568
00:32:52,249 --> 00:32:56,509
on map the view or you going to Manali
call the EPI

569
00:32:56,509 --> 00:32:59,869
to free the view but this live with that
API

570
00:32:59,869 --> 00:33:03,139
only marks the view for release

571
00:33:03,139 --> 00:33:06,289
because right now you're the receiving
side your server

572
00:33:06,289 --> 00:33:10,229
you have a message that you're holding
onto they're still love you so sure that

573
00:33:10,229 --> 00:33:11,549
message

574
00:33:11,549 --> 00:33:15,049
we're not gonna feed yet so how does the
LBC runtime:

575
00:33:15,049 --> 00:33:18,269
no when to release the message

576
00:33:18,269 --> 00:33:21,679
you have to first of all set this flag
that says please release

577
00:33:21,679 --> 00:33:26,759
any resources associates message and you
have to send a reply to client

578
00:33:26,759 --> 00:33:30,070
once you send the reply with their flak

579
00:33:30,070 --> 00:33:34,889
with a view attribute with this flag
then the runtimes going to say

580
00:33:34,889 --> 00:33:38,249
passing your view you've use est
unmapped existing view

581
00:33:38,249 --> 00:33:43,460
your flax est I'm to release messages
okay I'm gonna go in releases view

582
00:33:43,460 --> 00:33:46,950
so if you don't expect to receive a view
and you can orient

583
00:33:46,950 --> 00:33:51,299
it's going to be leaked if you don't
actually replying to a message

584
00:33:51,299 --> 00:33:54,840
the view with it as well so even though
you free to view

585
00:33:54,840 --> 00:33:59,909
LSU it make a reply it's not going to
matter

586
00:33:59,909 --> 00:34:04,210
and so an LPC Server developer max of
can make a lotta

587
00:34:04,210 --> 00:34:07,789
assumptions which are incorrect some
which which we can understand

588
00:34:07,789 --> 00:34:11,510
like for example hey I know that this
message should never have you

589
00:34:11,510 --> 00:34:15,400
so let me not bother check his abuse oh
shit now this should be pretty stupid

590
00:34:15,400 --> 00:34:18,320
assumption because someone can
understand how your PC works

591
00:34:18,320 --> 00:34:22,250
summer can try to send you this message
with a view and then schooling sup

592
00:34:22,250 --> 00:34:26,740
okay so if I do get a view I'm going to
harden myself I'm gonna do secure

593
00:34:26,740 --> 00:34:29,050
development and I'm going to drop a
message

594
00:34:29,050 --> 00:34:33,400
or cancel it as an API Cuban or
messaging to Castle message

595
00:34:33,400 --> 00:34:37,400
which makes sense but the LBC run time
does not feel views on the council

596
00:34:37,400 --> 00:34:38,270
message

597
00:34:38,270 --> 00:34:41,760
if you just caserta message you're
protecting yourself from any data that

598
00:34:41,760 --> 00:34:44,730
you don't care about but they've you
still there

599
00:34:44,730 --> 00:34:47,970
ok a little bit smarting saying I'm
going to you

600
00:34:47,970 --> 00:34:52,280
free to view or market a market for
mapping well remember

601
00:34:52,280 --> 00:34:56,190
we also have to reply to the message so
he didn't reply to message

602
00:34:56,190 --> 00:35:00,430
it didn't matter market from mapping it
will never be an apt

603
00:35:00,430 --> 00:35:04,600
okay I'm going to get a view I'm going
to free it

604
00:35:04,600 --> 00:35:08,870
or market for on mapping am going to
reply to server

605
00:35:08,870 --> 00:35:11,930
II Morgan reply to services request

606
00:35:11,930 --> 00:35:15,790
right because the Rams Donnie replies
and the Rams like ATP

607
00:35:15,790 --> 00:35:19,490
there is no reply well because you not
replying

608
00:35:19,490 --> 00:35:22,710
that he is going to meet so that's
interesting

609
00:35:22,710 --> 00:35:26,190
his you gonna get a Grammy not supposed
to play the Rams issued a reply to

610
00:35:26,190 --> 00:35:26,850
message

611
00:35:26,850 --> 00:35:31,560
than that using it feat and then OK I'm
gonna get the view

612
00:35:31,560 --> 00:35:35,850
market from mapping said I N plus he
also did send the release like so this

613
00:35:35,850 --> 00:35:37,290
was the hardest one to

614
00:35:37,290 --> 00:35:42,050
blame the developer because he free to
view he marked the front mapping

615
00:35:42,050 --> 00:35:45,770
he set the flak but the only place a
request

616
00:35:45,770 --> 00:35:50,360
there's a reply datagrams because the
Rams Donnie plots

617
00:35:50,360 --> 00:35:53,870
well that's an incorrect assumption

618
00:35:53,870 --> 00:35:58,050
and and that's an interesting one see
because in a strict protocol sense

619
00:35:58,050 --> 00:36:02,490
yes a diagram does not you reply back if
you try to send a reply

620
00:36:02,490 --> 00:36:06,280
to a datagram the receiving that the
sender sigh we'll never get an answer

621
00:36:06,280 --> 00:36:10,970
your Gramps don't have replies but the
whole release logic behind

622
00:36:10,970 --> 00:36:14,140
attributes says for me through release
attributes

623
00:36:14,140 --> 00:36:17,160
you have to reply to a message this is
my indication

624
00:36:17,160 --> 00:36:20,610
that its okay to get it is up these
resources

625
00:36:20,610 --> 00:36:24,330
so you have to reply to datagrams if
there's abuse ocean with them

626
00:36:24,330 --> 00:36:28,650
it's a internal semantic behavior you
have to do that if you don't do it

627
00:36:28,650 --> 00:36:32,460
you'll be leaked nephew and so many LPC
servers

628
00:36:32,460 --> 00:36:35,950
inside Windows don't reply in grams ever
because you're saying

629
00:36:35,950 --> 00:36:40,830
it's a datagram does need to reply wall
that if I package militias view that the

630
00:36:40,830 --> 00:36:41,590
diagram

631
00:36:41,590 --> 00:36:44,790
you're going to be leaking it even if
you tried your best to free it it

632
00:36:44,790 --> 00:36:47,950
all the right steps if you're about to
reply in fact

633
00:36:47,950 --> 00:36:51,820
LPC warns you about this is a little
flag in the header when you receive that

634
00:36:51,820 --> 00:36:53,070
message

635
00:36:53,070 --> 00:36:56,420
that says LPC continuation required

636
00:36:56,420 --> 00:36:59,720
you must reply to this message but

637
00:36:59,720 --> 00:37:03,890
this is a new behavior to ale PC LBC we
don't have to use

638
00:37:03,890 --> 00:37:07,350
and allow the LPC service and microsoft
and Windows

639
00:37:07,350 --> 00:37:12,460
our legacy LPC servers where someone
ported the code to use a PC

640
00:37:12,460 --> 00:37:15,550
nor the poor that code they don't check
for this flak

641
00:37:15,550 --> 00:37:19,830
in the LBC world you never reply to be a
grams never made sense

642
00:37:19,830 --> 00:37:24,410
in ale issue we have attributes this
past this additional behavior

643
00:37:24,410 --> 00:37:27,830
and so I don't know this isn't
documented internally max of that they

644
00:37:27,830 --> 00:37:29,310
don't learn about this

645
00:37:29,310 --> 00:37:33,690
that they don't do that last step the
end up leaking at the you as well

646
00:37:33,690 --> 00:37:38,590
and so bile in this is with the use of
handel's you have the same issue

647
00:37:38,590 --> 00:37:42,350
member you can pass handles within a
client-server and so if you receiving

648
00:37:42,350 --> 00:37:43,190
handles

649
00:37:43,190 --> 00:37:47,080
but you're not closing them and or

650
00:37:47,080 --> 00:37:50,240
releasing them i replying to the message
you're going to be leaking

651
00:37:50,240 --> 00:37:54,190
handles as well in the he handles will
exhaust you object table

652
00:37:54,190 --> 00:37:57,300
and so identified several windows 7

653
00:37:57,300 --> 00:38:01,150
LPC servers that either leak

654
00:38:01,150 --> 00:38:04,290
they did use you can keep stuffing more
more views

655
00:38:04,290 --> 00:38:07,700
or that the handle seeking keep stuffing
more more handles

656
00:38:07,700 --> 00:38:12,450
so this gives you a in out service
attack to the specific LPC service that

657
00:38:12,450 --> 00:38:14,080
happens when ability

658
00:38:14,080 --> 00:38:17,720
bags asking the address space it also
gives you the ability heap spray

659
00:38:17,720 --> 00:38:21,330
and yet the servers so there is about or
something then

660
00:38:21,330 --> 00:38:24,550
that goes wrong answer them he had the
ability to bisbee fill their address

661
00:38:24,550 --> 00:38:25,210
space

662
00:38:25,210 --> 00:38:30,170
with whatever data you want to control I
they're still looking when is a .1

663
00:38:30,170 --> 00:38:34,220
putting X because I found to so far so
when 27 I found

664
00:38:34,220 --> 00:38:39,360
6 I'm in which is a python to so far but
I'm still looking at so they're still

665
00:38:39,360 --> 00:38:43,420
new servers that their adding to winners
even as a plain one and those new server

666
00:38:43,420 --> 00:38:44,250
still have

667
00:38:44,250 --> 00:38:47,940
those issues I'm so I'm currently
preparing

668
00:38:47,940 --> 00:38:51,780
upon the bill a report from for him src
so I'm not gonna reveal the names which

669
00:38:51,780 --> 00:38:53,710
service had his own abilities

670
00:38:53,710 --> 00:38:57,040
arm until back as reported but this is a

671
00:38:57,040 --> 00:39:01,410
standard your design Klein anyone the
truss running a PC server if they're not

672
00:39:01,410 --> 00:39:03,180
doing all those steps

673
00:39:03,180 --> 00:39:07,270
if you can send them they don't use I
you can exhaust address space I'll do

674
00:39:07,270 --> 00:39:08,850
them a little bit later on

675
00:39:08,850 --> 00:39:14,250
and show you one example above and
affected server

676
00:39:14,250 --> 00:39:17,580
now that's the kind of class a bug that
effects

677
00:39:17,580 --> 00:39:23,000
individual LPC servers and so if you
have a really well written LPC server

678
00:39:23,000 --> 00:39:27,040
it's not be subject to those bucks and
witness has about 20 of them so yes I

679
00:39:27,040 --> 00:39:28,340
found bugs and seven

680
00:39:28,340 --> 00:39:32,120
just seven at once with bad but it's the
14th and that actually work

681
00:39:32,120 --> 00:39:35,720
normally because they either don't use
that abuse or because the

682
00:39:35,720 --> 00:39:40,250
keep track of the TV is correct and so
my next target which is more interesting

683
00:39:40,250 --> 00:39:40,990
was

684
00:39:40,990 --> 00:39:44,840
well what about local RPC itself what
about the LBC

685
00:39:44,840 --> 00:39:47,910
handling inside the RPC runtime:

686
00:39:47,910 --> 00:39:52,620
because let's see that RPC runtime:
never replies the datagrams

687
00:39:52,620 --> 00:39:56,180
the any single time you have any RPC
server

688
00:39:56,180 --> 00:40:00,230
or any common objects a pretty much any
process in the world almost has one of

689
00:40:00,230 --> 00:40:00,920
these

690
00:40:00,920 --> 00:40:04,120
you won't be able to exhaust inject
momentum stress tests

691
00:40:04,120 --> 00:40:08,500
now unfortunately the RPC run time does
he really really good job

692
00:40:08,500 --> 00:40:13,140
%uh handling ABC views so they don't
have that issue

693
00:40:13,140 --> 00:40:16,600
so the obvious you at times RPC RT for
don t allow

694
00:40:16,600 --> 00:40:20,390
any use is a PC is a backing protocol so
whenever you have

695
00:40:20,390 --> 00:40:23,390
any sort of RPC server or de comer
object

696
00:40:23,390 --> 00:40:26,510
it's going to end up in this are key see
control

697
00:40:26,510 --> 00:40:30,270
object namespace and with win obj

698
00:40:30,270 --> 00:40:33,520
you can actually go on the RPC
controlling space and

699
00:40:33,520 --> 00:40:37,500
all these different ports here

700
00:40:37,500 --> 00:40:42,090
they're all our PC servers running side
windows

701
00:40:42,090 --> 00:40:47,580
and that all these oily ports object
linking exchanges the old name for calm

702
00:40:47,580 --> 00:40:51,010
arm and so these are all different com
objects

703
00:40:51,010 --> 00:40:54,540
there's no immediate way from the name
just a figure that is but these or any

704
00:40:54,540 --> 00:40:55,050
sort

705
00:40:55,050 --> 00:40:59,270
anytime loaded any com DLL or create any
circle object

706
00:40:59,270 --> 00:41:02,810
it's going to end up with the ports of
your process is hosting a common object

707
00:41:02,810 --> 00:41:05,970
you're hosting one of those ports an
issue connecting to

708
00:41:05,970 --> 00:41:09,970
not process come object you're
connecting to any sports and show you

709
00:41:09,970 --> 00:41:14,330
in win back how you can tell thats I've
got a few more ports here

710
00:41:14,330 --> 00:41:18,180
and I've got some unnamed RPC ports as
well so a lot of different in points you

711
00:41:18,180 --> 00:41:19,570
can try connecting to

712
00:41:19,570 --> 00:41:22,810
and its ok there is a bug in the air C
runtime any

713
00:41:22,810 --> 00:41:25,890
ok these sports where there's a DHCP
server

714
00:41:25,890 --> 00:41:29,240
where there's the RPC endpoint mapper he
bade log

715
00:41:29,240 --> 00:41:32,760
Elsas the auditing server the Bluetooth
server

716
00:41:32,760 --> 00:41:37,220
they were all be vulnerable to a bike
like this the Service Control Manager

717
00:41:37,220 --> 00:41:40,270
arm Elsas again and you in the kernel
China's

718
00:41:40,270 --> 00:41:45,260
the sports on Sun so that's obviously
very interesting attack surface

719
00:41:45,260 --> 00:41:48,500
as extensions I went back to show you
who's connected to port

720
00:41:48,500 --> 00:41:52,010
and so on and so on fourth and the
halftime show study some

721
00:41:52,010 --> 00:41:55,670
that but the ABC layers just one

722
00:41:55,670 --> 00:41:58,810
layer because with a piece you connected
to your PC run time:

723
00:41:58,810 --> 00:42:02,520
but then the we send our peace messages
is to actually use the

724
00:42:02,520 --> 00:42:06,250
actual leprosy article so

725
00:42:06,250 --> 00:42:10,420
be interesting but RPC is that when you
connect an RPC server

726
00:42:10,420 --> 00:42:14,790
you have to bind to server and so in
every have an RPC client survey have

727
00:42:14,790 --> 00:42:15,990
interface I D

728
00:42:15,990 --> 00:42:19,270
which is good aversion in the
marshalling syntax

729
00:42:19,270 --> 00:42:23,040
so this is all stuff that's handled by
your ideal by interface definition

730
00:42:23,040 --> 00:42:24,040
language file

731
00:42:24,040 --> 00:42:27,320
it's all part of the doc many behavior
RPC

732
00:42:27,320 --> 00:42:31,170
so whenever there's a connection being
made there's a bind request

733
00:42:31,170 --> 00:42:34,630
but RTC does not act because our PC was
based on

734
00:42:34,630 --> 00:42:38,420
NQ on the name pipe process them with
named pipes you always

735
00:42:38,420 --> 00:42:42,660
opened a pipe then you send a packet and
so they kept his behavior

736
00:42:42,660 --> 00:42:46,980
so even though ill be /c while you
connecting you can send a message

737
00:42:46,980 --> 00:42:50,170
because the or behavior with RPC you
first connect

738
00:42:50,170 --> 00:42:54,580
and then you send your message so this
means that I connection time

739
00:42:54,580 --> 00:42:57,650
the RPC runtime: knows nothing about you

740
00:42:57,650 --> 00:43:01,970
in it's all done and binding time and
binding is an actual message

741
00:43:01,970 --> 00:43:05,550
so of all our PC connection is first
then LPC connection

742
00:43:05,550 --> 00:43:09,540
and then LPC message that's a bind
request

743
00:43:09,540 --> 00:43:13,210
essential meez RPC runtime: has to
create those sports

744
00:43:13,210 --> 00:43:17,780
allowing absolutely everyone to connect
to them

745
00:43:17,780 --> 00:43:22,310
because it doesn't know ahead of time
who's able to connect to looking at any

746
00:43:22,310 --> 00:43:26,210
a PC port as a social RPC server behind
it

747
00:43:26,210 --> 00:43:29,540
you're going to see everyone is allowed
to connect

748
00:43:29,540 --> 00:43:32,810
which is great because it means that
they're is any bug in the handling

749
00:43:32,810 --> 00:43:37,320
appeal PC messages in the runtime anyone
will be able to exploit such a bug

750
00:43:37,320 --> 00:43:41,340
because a runtime will start parsing
messages waiting for you to send it by

751
00:43:41,340 --> 00:43:42,420
message

752
00:43:42,420 --> 00:43:46,310
he said a mouthful on by message or
maybe don't send it by message

753
00:43:46,310 --> 00:43:50,390
or whatever it is you try doing you're
now talking to run them in a server see

754
00:43:50,390 --> 00:43:53,880
this you have you have something going
on between you two

755
00:43:53,880 --> 00:43:58,000
and so that's obviously a can be useful

756
00:43:58,000 --> 00:44:02,160
so as soon as you actually register IPCC
server

757
00:44:02,160 --> 00:44:06,460
the runtime creates the port and then
the runtime creates a sterile loop

758
00:44:06,460 --> 00:44:10,510
bad waits for your PC messages now I
also mentioned

759
00:44:10,510 --> 00:44:14,570
that in order to be vulnerable the
server has to specify

760
00:44:14,570 --> 00:44:18,860
that it wants to receive data views
there once they receive handles

761
00:44:18,860 --> 00:44:22,190
and so the RPC server runtime can be /c

762
00:44:22,190 --> 00:44:25,810
connection requests can receive no more
requests can receive

763
00:44:25,810 --> 00:44:28,880
Buying requests cetera and the RBC world

764
00:44:28,880 --> 00:44:33,780
somebody's message do happy Daddy's so
soon as you have a server that accepts

765
00:44:33,780 --> 00:44:38,310
some messages that out the use and some
messages that don't have to use

766
00:44:38,310 --> 00:44:41,430
you have to tell it ahead of time I
accept views

767
00:44:41,430 --> 00:44:44,710
and then later on you decide which views
you'd like to

768
00:44:44,710 --> 00:44:49,260
dropper which use you you would not want
drop so potential exists

769
00:44:49,260 --> 00:44:52,810
for RPC to receive unexpected attributes

770
00:44:52,810 --> 00:44:56,110
and not receive them so simple example
is

771
00:44:56,110 --> 00:44:59,220
you know I have to possible message
types

772
00:44:59,220 --> 00:45:04,720
message one has it the interview and
message to does not happen in your view

773
00:45:04,720 --> 00:45:09,720
in my protocol one actually wait for
messages

774
00:45:09,720 --> 00:45:14,060
have to tell you see send me views

775
00:45:14,060 --> 00:45:18,350
because there's an off chance that I
might be /c message one ok

776
00:45:18,350 --> 00:45:22,920
and then I would do my handling that
says okay if I do receive message one

777
00:45:22,920 --> 00:45:27,640
then you know do something with the view

778
00:45:27,640 --> 00:45:31,100
and if I receive message to

779
00:45:31,100 --> 00:45:34,130
then I'm going to

780
00:45:34,130 --> 00:45:37,320
do something else

781
00:45:37,320 --> 00:45:41,030
and the fam smart and then after I do
all this

782
00:45:41,030 --> 00:45:44,290
free the view if I got

783
00:45:44,290 --> 00:45:47,870
you

784
00:45:47,870 --> 00:45:51,280
right well if I'm not smart I'm going to

785
00:45:51,280 --> 00:45:54,840
deep fried the view only in cases while

786
00:45:54,840 --> 00:45:58,340
writing an essay message message type 2

787
00:45:58,340 --> 00:46:01,750
never receives views and so I don't have
to feel

788
00:46:01,750 --> 00:46:05,330
so that would be an example the bus at
the RBC runtime: did this at the FSU on

789
00:46:05,330 --> 00:46:06,180
time said

790
00:46:06,180 --> 00:46:09,650
hey you know what connection messages
never have use so I'm not gonna bother

791
00:46:09,650 --> 00:46:11,370
freeing a view because

792
00:46:11,370 --> 00:46:14,460
no one knows how to speak RPC and so

793
00:46:14,460 --> 00:46:19,250
no one can send me this so it's actually
pretty complex function

794
00:46:19,250 --> 00:46:22,490
it's called process I O the last bow
their and it handles

795
00:46:22,490 --> 00:46:25,620
all the possible RPC messages in a
single function

796
00:46:25,620 --> 00:46:29,210
so it's extremely hard to reverse
engineer

797
00:46:29,210 --> 00:46:32,760
at this function handles different types
%uh messages

798
00:46:32,760 --> 00:46:35,870
in there are defined by this generation
call tag

799
00:46:35,870 --> 00:46:39,570
a leprosy message types and sing have
requests

800
00:46:39,570 --> 00:46:44,460
which are basic RPC calls waking up the
biamby quest just send the connection

801
00:46:44,460 --> 00:46:48,460
you gonna of messages trees for errors
you can have responses are cancellations

802
00:46:48,460 --> 00:46:49,850
which you use i doing

803
00:46:49,850 --> 00:46:53,610
the sickness calls on the something call
call back bays RPC and

804
00:46:53,610 --> 00:46:57,740
I these RTC and so you can have the
information as well so there's all sorts

805
00:46:57,740 --> 00:47:01,070
love com structures identified

806
00:47:01,070 --> 00:47:06,090
white RPC matches looks like I what not
seaquest looks like quite a bind message

807
00:47:06,090 --> 00:47:06,950
looks like

808
00:47:06,950 --> 00:47:11,200
and these are not documented but for a
very very long while Mike such as to

809
00:47:11,200 --> 00:47:14,760
ship the private symbols for Windows 8
app issue on time

810
00:47:14,760 --> 00:47:19,100
by accident on a single server arm they
still do ship some private symbols

811
00:47:19,100 --> 00:47:20,000
accident

812
00:47:20,000 --> 00:47:24,380
and so was easy just use when backhand
down and see exactly what all the

813
00:47:24,380 --> 00:47:25,710
structures look like

814
00:47:25,710 --> 00:47:30,110
so I knew now how to send and tribe try
sending a malformed

815
00:47:30,110 --> 00:47:33,380
local RPC message over LPC

816
00:47:33,380 --> 00:47:37,430
so I looked at runtime code it actually
has really good management

817
00:47:37,430 --> 00:47:41,390
up electrician messages is actually
really obviously by team that had done

818
00:47:41,390 --> 00:47:45,190
buzzing that had done hardening I'm and
debug build

819
00:47:45,190 --> 00:47:48,730
or check bills there's a bunch of
assertions they have a whole message

820
00:47:48,730 --> 00:47:50,860
class for checking particle airs

821
00:47:50,860 --> 00:47:54,100
and so they actually do really really
good job how to handle LBC much as

822
00:47:54,100 --> 00:47:54,950
correctly

823
00:47:54,950 --> 00:47:58,660
in fact the way I found out that to
release a view you have to do all those

824
00:47:58,660 --> 00:47:59,450
things

825
00:47:59,450 --> 00:48:02,680
was to look at the RBC runtime: code and
see that they were doing all these

826
00:48:02,680 --> 00:48:03,450
things

827
00:48:03,450 --> 00:48:07,000
and there with my own code which wasn't
doing all them I saw that ourselves the

828
00:48:07,000 --> 00:48:10,180
all the steps the RPC runtime is doing I
had a lead

829
00:48:10,180 --> 00:48:13,680
few so actually they do a pretty good
job managing that so I wasn't able to

830
00:48:13,680 --> 00:48:14,160
get

831
00:48:14,160 --> 00:48:17,440
any really interesting behavior out at
the air base rent time with my

832
00:48:17,440 --> 00:48:18,690
sympathizer

833
00:48:18,690 --> 00:48:22,210
but I'm not a guy on my right sponsors
so

834
00:48:22,210 --> 00:48:26,020
I'd I didn't I'm I'm not as mean there's
no box

835
00:48:26,020 --> 00:48:30,220
Butera sympathizing ap just to try
scenes in crashes

836
00:48:30,220 --> 00:48:33,800
so this they're looking at the interview
attributes saying OK instead of buzzing

837
00:48:33,800 --> 00:48:35,410
about the random messages

838
00:48:35,410 --> 00:48:38,920
maybe a consented random attributes

839
00:48:38,920 --> 00:48:41,920
and the LBC right there's actually
there's the RPC what has actually very

840
00:48:41,920 --> 00:48:43,160
smart

841
00:48:43,160 --> 00:48:47,780
as soon as a get a date if the attribute
it always sets an internal reply flag it

842
00:48:47,780 --> 00:48:51,570
says oh my god of that the review I am
have to reply to this message

843
00:48:51,570 --> 00:48:55,050
someone really knows why not in fact
they don't even check its continuation

844
00:48:55,050 --> 00:48:56,260
required to set

845
00:48:56,260 --> 00:49:00,000
they assert on it said this has to be
set so that they're very keenly aware

846
00:49:00,000 --> 00:49:01,240
that you have to reply

847
00:49:01,240 --> 00:49:05,430
to you datagrams and so the always build
an attribute

848
00:49:05,430 --> 00:49:10,330
that has and map existing and the always
reply to reply variable set

849
00:49:10,330 --> 00:49:14,240
in fact they're so good at freeing views
that sometimes and they have this code

850
00:49:14,240 --> 00:49:17,310
at like to three different places so
when they get any about message the

851
00:49:17,310 --> 00:49:18,260
three the view

852
00:49:18,260 --> 00:49:21,720
and then when they send replied review
again and then right before sending it

853
00:49:21,720 --> 00:49:22,850
by the 3d viewing

854
00:49:22,850 --> 00:49:26,900
really passionate about this and they
don't use handle attributes

855
00:49:26,900 --> 00:49:31,280
okay so i cant find any bites that stuff

856
00:49:31,280 --> 00:49:34,560
but I noticed something interesting in
this is all

857
00:49:34,560 --> 00:49:39,210
fortunately blacked out because although
reported this six months ago

858
00:49:39,210 --> 00:49:44,590
it still is your day so I don't like
droppings or any suspects as a sponsor

859
00:49:44,590 --> 00:49:48,220
but who

860
00:49:48,220 --> 00:49:51,420
will give a few more days or maybe
whiskey con

861
00:49:51,420 --> 00:49:54,490
I get enough shots to music on me

862
00:49:54,490 --> 00:49:57,610
so anyway this is a fairly easy back
though if you look at it you'll be able

863
00:49:57,610 --> 00:50:00,880
to figure out which is that every time
they were freeing

864
00:50:00,880 --> 00:50:04,620
messages every time their handling an
invalid

865
00:50:04,620 --> 00:50:07,760
I packet the sender

866
00:50:07,760 --> 00:50:11,540
era reports every time there's any about
packet such as a pack the has a date at

867
00:50:11,540 --> 00:50:13,340
the UN should have a DataView

868
00:50:13,340 --> 00:50:17,510
they send reply back saying you
shouldn't be sending you DataView

869
00:50:17,510 --> 00:50:20,740
now the problem is the function at Sens
replies back

870
00:50:20,740 --> 00:50:24,450
doesn't actually free the message buffer

871
00:50:24,450 --> 00:50:28,930
so you have to free the message buffer
on your own so there on time has to you

872
00:50:28,930 --> 00:50:32,100
handle invalid packet free the view

873
00:50:32,100 --> 00:50:36,250
send the reply back to this client and
their free the actual offer the message

874
00:50:36,250 --> 00:50:39,590
so that they diffuse map but the the
data views on map

875
00:50:39,590 --> 00:50:43,060
but they also have to free the actual
message buffer records I have to 64k

876
00:50:43,060 --> 00:50:44,640
have data that I can send

877
00:50:44,640 --> 00:50:48,460
plus the view and so the issue is that
in some cases

878
00:50:48,460 --> 00:50:52,660
action one specific a city centre right
kind of packet to the RPC runtime:

879
00:50:52,660 --> 00:50:56,960
and it has a DataView did you get
unmapped that part is all good

880
00:50:56,960 --> 00:51:01,480
but the actual data packet leaks its if
you keep sending that the packet again

881
00:51:01,480 --> 00:51:05,600
and again and again and again to any RPC
server in the world

882
00:51:05,600 --> 00:51:09,090
locally any machine you will be able to
eventually

883
00:51:09,090 --> 00:51:13,750
spray tan tear heap and possibly
probably eventually crash it

884
00:51:13,750 --> 00:51:17,250
on because you just filled up all the
stress pace

885
00:51:17,250 --> 00:51:20,580
and will no longer be able to respond to
any messages

886
00:51:20,580 --> 00:51:24,850
social app called RPC nuke and tried a
few very service

887
00:51:24,850 --> 00:51:30,170
and hire a senate I'm I was able to kill
in some cases even killing the thrashing

888
00:51:30,170 --> 00:51:34,420
so doing a demo you'll see that I'm
point to exhaust the memory of a server

889
00:51:34,420 --> 00:51:38,200
hopefully my screen will do the what did
that the other times just turned black

890
00:51:38,200 --> 00:51:40,540
and died mission should become unusable

891
00:51:40,540 --> 00:51:43,600
with that specific server because some
servers are so critical

892
00:51:43,600 --> 00:51:47,660
that CDOs them the entire machine
basically stops i working 2nd

893
00:51:47,660 --> 00:51:51,400
reliably he spray any almost pretty much
any process

894
00:51:51,400 --> 00:51:55,790
in machine from an arbitrary user perch
Ser from guest

895
00:51:55,790 --> 00:51:59,990
I can inject memory anyway I wanted
which is already pretty good technique

896
00:51:59,990 --> 00:52:03,860
if you have an ability now haven't yet
found any server that crashed

897
00:52:03,860 --> 00:52:07,280
enough in in a way other than running
out of memory

898
00:52:07,280 --> 00:52:10,340
arm which is you have to buy the server

899
00:52:10,340 --> 00:52:15,100
stopping to receive clients the server
process were actually worth a crash

900
00:52:15,100 --> 00:52:18,730
then I would actually get some sort of
pointer now my piano pointed reference

901
00:52:18,730 --> 00:52:19,800
or might be

902
00:52:19,800 --> 00:52:22,910
some internal behavior side only look at
about a dozen them

903
00:52:22,910 --> 00:52:26,680
still tryna still try to run the fuzz on
on the nuclear other apps

904
00:52:26,680 --> 00:52:30,690
but hopefully they'll be at least one
RPC server out there are 1 process out

905
00:52:30,690 --> 00:52:32,600
there that only runs at a memory

906
00:52:32,600 --> 00:52:36,150
those the wrong thing and then you can
control that too

907
00:52:36,150 --> 00:52:39,800
make a jump to this heat spray Donald
but it so this is

908
00:52:39,800 --> 00:52:43,610
about six months ago reported and I'm
I'm running out of patience

909
00:52:43,610 --> 00:52:47,310
but they said a few more days and we'll
see what happens with that

910
00:52:47,310 --> 00:52:50,500
because from their point of view it's
just a local the US it I like your

911
00:52:50,500 --> 00:52:53,560
Creek crashing machines remote but it
still

912
00:52:53,560 --> 00:52:57,110
nice technique for injecting memory so

913
00:52:57,110 --> 00:53:00,570
I'll skip the win back section since
whiskey finance

914
00:53:00,570 --> 00:53:04,020
going to be soon and I'll just do a demo
of two examples

915
00:53:04,020 --> 00:53:07,830
so either which is killing an actual PC
server and one other which is trying to

916
00:53:07,830 --> 00:53:08,300
kill

917
00:53:08,300 --> 00:53:13,560
an RPC sir and I'll have the em up and
running

918
00:53:13,560 --> 00:53:17,900
arm in the first case

919
00:53:17,900 --> 00:53:22,140
snow this is a nice little process

920
00:53:22,140 --> 00:53:29,140
and then I'm going to stand at McMahon
prompt

921
00:53:29,750 --> 00:53:34,330
scheme

922
00:53:34,330 --> 00:53:37,490
so everything works well this is gonna
be sending one message

923
00:53:37,490 --> 00:53:43,030
to this serving us has to tear says okay
I

924
00:53:43,030 --> 00:53:47,340
ice creative you and I sent a message to
the server and

925
00:53:47,340 --> 00:53:50,790
I refresh the a map what's on in one
message so

926
00:53:50,790 --> 00:53:53,790
nationally on there was a change but it
did

927
00:53:53,790 --> 00:54:00,790
little bit bigger here ascended a few
more K

928
00:54:02,280 --> 00:54:06,420
three fresh again at 81 X

929
00:54:06,420 --> 00:54:09,730
and if I just keep all the entire to let
it go few

930
00:54:09,730 --> 00:54:13,450
100 times into something interest things
can happen

931
00:54:13,450 --> 00:54:17,420
which is that it actually I'm only
sending for kilobytes

932
00:54:17,420 --> 00:54:20,520
so pressing Enter 100 times would have
been a most the mag

933
00:54:20,520 --> 00:54:24,660
but now this is gone up to 90 megabytes
what's actually gotten bigger every time

934
00:54:24,660 --> 00:54:26,040
is gray section

935
00:54:26,040 --> 00:54:29,380
in disgrace section in the AM ap
references

936
00:54:29,380 --> 00:54:34,310
unusable memory and its happenings and
getting all these chunks

937
00:54:34,310 --> 00:54:37,330
have sixty kilobytes unusable memory
their

938
00:54:37,330 --> 00:54:40,870
been consumed plus if I go I click on
Cheryl here

939
00:54:40,870 --> 00:54:44,750
you will see four killed by mapping as
well to show you and here's another

940
00:54:44,750 --> 00:54:45,630
interesting

941
00:54:45,630 --> 00:54:49,060
behavior the Windows memory manager

942
00:54:49,060 --> 00:54:52,950
forces you to Allah keep things on 64
Kula bag black/grey larry's

943
00:54:52,950 --> 00:54:57,440
with the LPC views economic views more
than 60 per kilobyte such as for

944
00:54:57,440 --> 00:54:58,170
kilobytes

945
00:54:58,170 --> 00:55:01,640
so it's actually happenings I'm
consuming a four kilobyte view

946
00:55:01,640 --> 00:55:06,300
and the next time the process makes any
memory allocation it's going to be on

947
00:55:06,300 --> 00:55:07,240
the next 60 for

948
00:55:07,240 --> 00:55:10,410
my binary so my next is going to be an
expert kilobytes

949
00:55:10,410 --> 00:55:14,080
and my next is going to be on the next
60 recovery in fact

950
00:55:14,080 --> 00:55:17,760
any other occasion the process will make
will always be on the next

951
00:55:17,760 --> 00:55:21,970
see six for a battery so VM ap causes
region

952
00:55:21,970 --> 00:55:25,320
unusable because nothing can ever

953
00:55:25,320 --> 00:55:28,370
uses memory in this process again arm no

954
00:55:28,370 --> 00:55:32,950
allocation EPI will allow you to get a
memory address that's not aligned assets

955
00:55:32,950 --> 00:55:33,980
for kilobytes

956
00:55:33,980 --> 00:55:37,500
so not only my leaking diesel for
kilobytes control memory

957
00:55:37,500 --> 00:55:42,020
I'm also creating these large regions
unused memory and this is useful for

958
00:55:42,020 --> 00:55:43,420
exhausting the address space

959
00:55:43,420 --> 00:55:48,230
because if I was actually creating 64k
views the system-wide commit charger

960
00:55:48,230 --> 00:55:50,230
also be increasing message for kilobytes

961
00:55:50,230 --> 00:55:54,840
but because my views are tiny winners
things and consuming very little memory

962
00:55:54,840 --> 00:55:58,270
even though the process being harmed the
lot more so

963
00:55:58,270 --> 00:56:02,240
the small these are actually pretty bad
because this sixty kilobytes unusable

964
00:56:02,240 --> 00:56:03,190
memory that keeps

965
00:56:03,190 --> 00:56:07,140
accumulating now process Hacker I take a
look at the process

966
00:56:07,140 --> 00:56:11,640
om you should see a lot of small

967
00:56:11,640 --> 00:56:15,710
map committee views any of these look at
and that's the

968
00:56:15,710 --> 00:56:19,690
for 141 upset so I can just keep filling
it up crash it

969
00:56:19,690 --> 00:56:22,870
gorgeous control that's address space
for them up with for wants wants wants

970
00:56:22,870 --> 00:56:23,450
wants

971
00:56:23,450 --> 00:56:27,670
and I'm not necessarily filling it out
by creating China views

972
00:56:27,670 --> 00:56:31,540
but that and usable memory keep going
going going going eventually process

973
00:56:31,540 --> 00:56:32,160
I'll

974
00:56:32,160 --> 00:56:36,760
stopped working when a better case
actually crash so that's an example the

975
00:56:36,760 --> 00:56:37,820
specific bug

976
00:56:37,820 --> 00:56:41,470
in some in PC server hosted by that
process

977
00:56:41,470 --> 00:56:44,990
now the more fun one is the RPC buck

978
00:56:44,990 --> 00:56:48,460
so with RPC Inc

979
00:56:48,460 --> 00:56:51,500
I can just give the name

980
00:56:51,500 --> 00:56:56,070
the server am interested in and when I'm
gonna try doing is killing the actual

981
00:56:56,070 --> 00:56:57,380
Service Control Manager

982
00:56:57,380 --> 00:57:01,470
sisters control manager has runs

983
00:57:01,470 --> 00:57:04,830
inside this services that exceed process

984
00:57:04,830 --> 00:57:08,020
and it has

985
00:57:08,020 --> 00:57:15,020
slits elevates he can see handles Spears
annexing

986
00:57:15,450 --> 00:57:20,150
so it's a truly privileged obviously
transit system writes the cat token

987
00:57:20,150 --> 00:57:25,120
system my command prompt is running a
standard user

988
00:57:25,120 --> 00:57:28,170
and for the cats handles

989
00:57:28,170 --> 00:57:32,000
wanna the handles and a has is NTS yes

990
00:57:32,000 --> 00:57:35,760
port this is the poor that's used to
talk this is control manager I can

991
00:57:35,760 --> 00:57:37,060
actually use any sports

992
00:57:37,060 --> 00:57:40,850
it doesn't matter because this bike in
your PC run time itself but I'll just

993
00:57:40,850 --> 00:57:45,670
I'll just use the first one and see what
what happens with american suction

994
00:57:45,670 --> 00:57:51,820
which right now is at 39 megabytes

995
00:57:51,820 --> 00:57:56,130
not as rents for a little bit now the
conclusion that although to keep running

996
00:57:56,130 --> 00:57:59,170
anti control and T

997
00:57:59,170 --> 00:58:06,170
yes he's yes

998
00:58:06,440 --> 00:58:07,920
rights I controlled seeded

999
00:58:07,920 --> 00:58:11,329
answers that XE now has a gigabyte

1000
00:58:11,329 --> 00:58:14,799
of commit memory and if I look in its

1001
00:58:14,799 --> 00:58:18,219
army some rain here are all these

1002
00:58:18,219 --> 00:58:21,219
right heap sections of old with

1003
00:58:21,219 --> 00:58:25,150
for 1444 so I can do this to any process
out there

1004
00:58:25,150 --> 00:58:28,950
arm all them almost have at least whale
PC port

1005
00:58:28,950 --> 00:58:34,200
to something that's open P much everyone
is hosting something so

1006
00:58:34,200 --> 00:58:37,859
11 run in a minute but I one official
missing you issues with the complex

1007
00:58:37,859 --> 00:58:41,869
and the resource management system gives
LBC developers

1008
00:58:41,869 --> 00:58:45,769
a lot of functionality but they have to
know how to use it so I would recommend

1009
00:58:45,769 --> 00:58:49,829
make such I have a brown bag like you
see slides to teach people how to use

1010
00:58:49,829 --> 00:58:50,599
LBC

1011
00:58:50,599 --> 00:58:53,859
obviously they a lot of teams don't know
how to use it

1012
00:58:53,859 --> 00:58:58,650
not freeing these resources now the RPC
back is a simple mistake

1013
00:58:58,650 --> 00:59:02,430
so the fact that your PC run time has a
has a has a bike that are not free

1014
00:59:02,430 --> 00:59:02,999
memory

1015
00:59:02,999 --> 00:59:06,029
that's for someone not adding a free
call and we have a

1016
00:59:06,029 --> 00:59:10,210
for callback function with like 50 me at
five thousand lines echoed handling

1017
00:59:10,210 --> 00:59:11,609
everything apostle packet

1018
00:59:11,609 --> 00:59:15,989
I would suggest you should be factor
that I'll but the ill PC but Stephanie

1019
00:59:15,989 --> 00:59:16,880
mean that people are

1020
00:59:16,880 --> 00:59:20,749
and Max up don't know how to write your
PC service correctly and so

1021
00:59:20,749 --> 00:59:23,920
that makes me think this probably more
bugs than just

1022
00:59:23,920 --> 00:59:27,859
spring mami bucks I like I said I'm not
a expiration buzzers and

1023
00:59:27,859 --> 00:59:31,359
arm there's a lot more research to be
done also decom

1024
00:59:31,359 --> 00:59:35,009
is very interesting because it in today
all function calls

1025
00:59:35,009 --> 00:59:38,309
rt.com calls and econ runtime: has
additional

1026
00:59:38,309 --> 00:59:42,489
overhead on top of the abyss runtime: so
next step is to look at D comment seems

1027
00:59:42,489 --> 00:59:43,339
ways to you

1028
00:59:43,339 --> 00:59:47,119
bypass and the contradiction that's
actually that's actually there

1029
00:59:47,119 --> 00:59:50,299
so let's see if I can just

1030
00:59:50,299 --> 00:59:57,299
leave this running see what happens
extinct

1031
01:00:00,719 --> 01:00:06,539
hopefully my mission stop working
sometimes deadlock something's freezes

1032
01:00:06,539 --> 01:00:07,839
sometimes nothing happens

1033
01:00:07,839 --> 01:00:13,739
well obviously this is happening its and

1034
01:00:13,739 --> 01:00:17,180
I get a warning my computers low on
memory

1035
01:00:17,180 --> 01:00:20,849
it's expected and

1036
01:00:20,849 --> 01:00:24,569
things are still work go things are
disappearing

1037
01:00:24,569 --> 01:00:29,890
it's a good sign strictly can start I
can't click on Start

1038
01:00:29,890 --> 01:00:36,209
can click on it a master's speared my
CPU

1039
01:00:36,209 --> 01:00:40,630
minister and high

1040
01:00:40,630 --> 01:00:43,680
no black screen but a ok flexing

1041
01:00:43,680 --> 01:00:48,319
yeah it's dead alright thank you

1042
01:00:48,319 --> 01:00:52,099
much value at first they would like to

1043
01:00:52,099 --> 01:00:55,720
thank you for this great its exceptional
PC

1044
01:00:55,720 --> 01:00:59,869
have gotten for to questions first
before when you were the scoping

1045
01:00:59,869 --> 01:01:03,099
aprons a LPC and is this

1046
01:01:03,099 --> 01:01:06,349
associates government keep spraying
picnics

1047
01:01:06,349 --> 01:01:10,369
right button to describe it's exactly
the same as a piece you too

1048
01:01:10,369 --> 01:01:13,890
described later yes I the

1049
01:01:13,890 --> 01:01:17,079
LPC gives you share section views

1050
01:01:17,079 --> 01:01:20,730
the LRP see you as you keep you spend in
a day it stills

1051
01:01:20,730 --> 01:01:23,750
the Saints prayer thank you yes and the
second seeing

1052
01:01:23,750 --> 01:01:26,900
on your desk I'm able to keep spraying
when you are sending fertilizer data

1053
01:01:26,900 --> 01:01:30,050
because unlike the always sexy popular
but it's not well

1054
01:01:30,050 --> 01:01:34,720
so in fact we keep spray effectively you
still need to send 64 kilobytes because

1055
01:01:34,720 --> 01:01:35,079
them

1056
01:01:35,079 --> 01:01:39,119
if I actually want to use PS outs and
the 46 forgive my delayed I sent four on

1057
01:01:39,119 --> 01:01:40,069
purpose to

1058
01:01:40,069 --> 01:01:42,810
should show yes

1059
01:01:42,810 --> 01:01:45,780
so believe this to thinks she thank you

1060
01:01:45,780 --> 01:01:46,190
jobs

