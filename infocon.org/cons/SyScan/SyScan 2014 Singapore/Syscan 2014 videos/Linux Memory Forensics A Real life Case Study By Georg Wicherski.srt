1
00:00:00,070 --> 00:00:04,430
okay and so what this act to do that was
a lots European IT company

2
00:00:04,430 --> 00:00:07,859
that I had the breeds in mid-2013

3
00:00:07,859 --> 00:00:11,300
I was hit by these act or um and

4
00:00:11,300 --> 00:00:16,529
doubt dayy arm compromise a lot of Linux
servers and that organizations

5
00:00:16,529 --> 00:00:19,900
and I'm gonna be talking a little bit
about the motivation motivating

6
00:00:19,900 --> 00:00:22,910
the Jews in here but not too much
obviously in

7
00:00:22,910 --> 00:00:26,510
um then I'm gonna be talking about it bf
for months

8
00:00:26,510 --> 00:00:29,800
arm because the actor used purity
hawking in

9
00:00:29,800 --> 00:00:34,010
in this intrusion arm soul you know
talking about dynamic linking and what

10
00:00:34,010 --> 00:00:35,110
beauty books are

11
00:00:35,110 --> 00:00:38,879
and then detecting such beauty hooks I
was gonna tell it see

12
00:00:38,879 --> 00:00:42,829
arm so because it will you but I don't
dealt with his interest in there was no

13
00:00:42,829 --> 00:00:44,469
existing tooling for this so

14
00:00:44,469 --> 00:00:48,550
arm you know I had to write everything
myself I now I'm publishing this cause

15
00:00:48,550 --> 00:00:50,460
the people don't have to do all this
work again

16
00:00:50,460 --> 00:00:53,980
I'm if they deliver security token um
okay

17
00:00:53,980 --> 00:00:57,070
to lose evanescent at om

18
00:00:57,070 --> 00:01:00,219
I call them putting the a back into a PT

19
00:01:00,219 --> 00:01:03,789
so I pity for those who don't know its
stance you know I am fight wants

20
00:01:03,789 --> 00:01:04,879
persistent threat

21
00:01:04,879 --> 00:01:07,930
which is mostly a marketing term because
the most

22
00:01:07,930 --> 00:01:12,390
most of the talking to the techs at we
look out aren't that advance because

23
00:01:12,390 --> 00:01:15,990
you know the status is don't have to be
very advanced a pop logic innovations

24
00:01:15,990 --> 00:01:19,600
right I'm but this actor is actually
very advanced

25
00:01:19,600 --> 00:01:23,220
you know since like trains nation-state
act RT am

26
00:01:23,220 --> 00:01:26,270
so very very interesting act or

27
00:01:26,270 --> 00:01:30,439
um and you can tell some of this by by
you know looking at the methods

28
00:01:30,439 --> 00:01:34,220
I'm so they do have source level access
to the implants or so I like you baby

29
00:01:34,220 --> 00:01:38,040
by binary builder somewhere but they
actually have

30
00:01:38,040 --> 00:01:42,060
are close access to the Deaf team which
is you know sometimes

31
00:01:42,060 --> 00:01:45,189
unusual depending on the country you're
executing the sioux like if you're

32
00:01:45,189 --> 00:01:46,090
looking at the US

33
00:01:46,090 --> 00:01:49,009
you invest they're not so closely
integrated with the defense contractors

34
00:01:49,009 --> 00:01:52,100
that bill stuff and then you have to hit
the button pushers that the operators

35
00:01:52,100 --> 00:01:55,710
but actually deployed in this not so
tight integration sometimes

36
00:01:55,710 --> 00:02:00,670
um but this actor the half a lot of
additional capabilities

37
00:02:00,670 --> 00:02:04,140
ready of the self you know you can see
it like this that the finger and the you

38
00:02:04,140 --> 00:02:06,850
see another trance being depending on
the operational environment

39
00:02:06,850 --> 00:02:12,480
so on behalf like a huge you'd stock of
interesting capabilities to use

40
00:02:12,480 --> 00:02:16,120
for example in in the specific intrusion
operation

41
00:02:16,120 --> 00:02:20,220
day you know initially disused im our
basic come to late

42
00:02:20,220 --> 00:02:24,239
compiled was nothing planned and when
they saw some people are

43
00:02:24,239 --> 00:02:27,950
starting to see the staff and using
strings to analyze as they responded by

44
00:02:27,950 --> 00:02:28,440
just

45
00:02:28,440 --> 00:02:32,489
adding to the compilation process a GCC
plugin that offers gets all the strings

46
00:02:32,489 --> 00:02:33,739
and thats haven't

47
00:02:33,739 --> 00:02:37,060
I almost instantly when somebody started
using the strings command so

48
00:02:37,060 --> 00:02:41,400
they can adapt very quickly and you know
just on by the GCC plugin that works

49
00:02:41,400 --> 00:02:43,160
reliably within one hour or so

50
00:02:43,160 --> 00:02:46,459
you know those are all capabilities that
they have but they don't always

51
00:02:46,459 --> 00:02:50,090
you know bring the a game unless the
defense forced them to bring their A

52
00:02:50,090 --> 00:02:50,640
game right

53
00:02:50,640 --> 00:02:54,709
and the specific actor has separate
developer

54
00:02:54,709 --> 00:03:00,010
a plus plus skills and am operate it
seems is like a level team which is

55
00:03:00,010 --> 00:03:03,159
still really really good but they're not
as good as a developer switches

56
00:03:03,159 --> 00:03:06,750
always the case because if you're is
good your your developer you're not an

57
00:03:06,750 --> 00:03:07,550
operator Road

58
00:03:07,550 --> 00:03:12,150
arm so what is this toolkit that I'm
talking about it's basically

59
00:03:12,150 --> 00:03:16,250
I am an implant serious on that is
designed to

60
00:03:16,250 --> 00:03:20,420
almost never touched the disc and those
who tell it to touch this um

61
00:03:20,420 --> 00:03:24,459
soul because you we're looking at some a
compromise you don't actually need to do

62
00:03:24,459 --> 00:03:28,709
persistence across reboots because you
know servers may be reported once a

63
00:03:28,709 --> 00:03:29,629
quarter or so

64
00:03:29,629 --> 00:03:32,840
and if that happens you can just you
know we compromise that

65
00:03:32,840 --> 00:03:37,310
arm was was the same all day and then
put employing back in there so

66
00:03:37,310 --> 00:03:41,500
its very best self be you want you know
normal too but this 4&6 don't get

67
00:03:41,500 --> 00:03:44,500
anything you have to memory forensics
and see if at all

68
00:03:44,500 --> 00:03:48,799
and even if you do memory forensics
thats are very stuffy for that so

69
00:03:48,799 --> 00:03:52,299
try so what forensic traces as much as
possible um

70
00:03:52,299 --> 00:03:56,840
I can talk too much about finding this
in specific interest in case but even

71
00:03:56,840 --> 00:03:57,670
this was like

72
00:03:57,670 --> 00:04:02,290
sure she locked that was detected at
almost like slight operate a fuck up

73
00:04:02,290 --> 00:04:07,269
um and looking at the you know who we
think is behind this is probably a lot

74
00:04:07,269 --> 00:04:10,659
of organizations and governments that
have to sit running and just not see it

75
00:04:10,659 --> 00:04:11,220
so

76
00:04:11,220 --> 00:04:14,299
thats also when releasing the stuff um

77
00:04:14,299 --> 00:04:17,489
so yet looking a little bit more into
skills

78
00:04:17,489 --> 00:04:20,970
the implant developers are highly
skilled it's really great stuff

79
00:04:20,970 --> 00:04:24,290
when I reversed this I thought of you
couldn't have done this

80
00:04:24,290 --> 00:04:27,790
any better this is really cool said and
if you look a lot of talk to the Texas

81
00:04:27,790 --> 00:04:28,770
don't often think that

82
00:04:28,770 --> 00:04:31,790
so most of the stuff rivers it was like
city stuff

83
00:04:31,790 --> 00:04:35,000
um but this one has really well done

84
00:04:35,000 --> 00:04:38,310
are a rock handling and Connor case
handling arm

85
00:04:38,310 --> 00:04:41,370
soul you know the half binary
compatibility

86
00:04:41,370 --> 00:04:45,520
compatibility to reopen talks worsens
you can basically take the same binary

87
00:04:45,520 --> 00:04:46,220
and

88
00:04:46,220 --> 00:04:50,050
go to all kinds of distribution and to
work and simply

89
00:04:50,050 --> 00:04:53,570
and you can see that they out very very
familiar with like

90
00:04:53,570 --> 00:04:56,780
that the UNIX pay six minutes eco-system
soul

91
00:04:56,780 --> 00:05:00,169
they really no this stuff really well
it's not like some other

92
00:05:00,169 --> 00:05:03,030
stopper to see where people often I was
when those in that have to read

93
00:05:03,030 --> 00:05:04,259
something phones but those

94
00:05:04,259 --> 00:05:07,350
people really understand everything
there um and

95
00:05:07,350 --> 00:05:10,820
they there've been no the whole to turn
as well I so they have a to see plugin

96
00:05:10,820 --> 00:05:13,660
that scrubs local variables running on a
scope survey

97
00:05:13,660 --> 00:05:17,289
you know understand compiler design and
from

98
00:05:17,289 --> 00:05:20,500
you know how to write a sissy plugins
I'm interestingly

99
00:05:20,500 --> 00:05:23,940
the think overrunning stuff in memory
was the rose

100
00:05:23,940 --> 00:05:27,970
is not sufficient I but instead they
apply some more advanced

101
00:05:27,970 --> 00:05:31,789
Pattinson and stuff for scrubby memory
which is interesting

102
00:05:31,789 --> 00:05:35,289
if you know to think about it for a for
a while they try to make sure it's not

103
00:05:35,289 --> 00:05:36,210
even

104
00:05:36,210 --> 00:05:39,539
overwritten with zeros but even more
translates crop um

105
00:05:39,539 --> 00:05:43,100
yen also have a DC plug in to encrypt
all global heap

106
00:05:43,100 --> 00:05:46,830
and global variables sold you know you
conscious two strings as

107
00:05:46,830 --> 00:05:50,180
you will have a system up about form

108
00:05:50,180 --> 00:05:53,320
um the operate a team is

109
00:05:53,320 --> 00:05:56,350
well the devil plus a highly skilled
operators are skilled

110
00:05:56,350 --> 00:05:59,860
otherwise it would be probably promoted
to developers um

111
00:05:59,860 --> 00:06:03,620
they did some minor mistake like you can
see it's not the same people writing the

112
00:06:03,620 --> 00:06:04,949
code and using it because

113
00:06:04,949 --> 00:06:08,660
arm they did not probably just all frame
for configuration

114
00:06:08,660 --> 00:06:12,340
to the specific operation maybe they
were just lazy maybe the documentation

115
00:06:12,340 --> 00:06:13,620
wasn't as in-depth

116
00:06:13,620 --> 00:06:16,940
so when you're representing your to find
like up since that day could a few

117
00:06:16,940 --> 00:06:19,160
social issues that they didn't you so
they

118
00:06:19,160 --> 00:06:23,400
you know didn't use all the features the
maximum extent Anya to say one operator

119
00:06:23,400 --> 00:06:23,900
one

120
00:06:23,900 --> 00:06:28,100
one day made a slight mistake and ended
up in the log file was one line

121
00:06:28,100 --> 00:06:31,199
and as a soul to soul thing was then
detected

122
00:06:31,199 --> 00:06:34,360
but if the operator that make them
mistake then

123
00:06:34,360 --> 00:06:39,380
the stuff is so selfish and probably put
people would have seen it

124
00:06:39,380 --> 00:06:43,009
in terms of attribution I'm not gonna
say too much year if you really care

125
00:06:43,009 --> 00:06:44,990
about this then

126
00:06:44,990 --> 00:06:48,259
you can King you know get some someone
to from crossroads to

127
00:06:48,259 --> 00:06:52,360
directly um what I don't but I say we
have several low confidence indicators

128
00:06:52,360 --> 00:06:54,199
where this is coming from

129
00:06:54,199 --> 00:06:58,259
um a coding style and she was a specific
encryption algorithm soul

130
00:06:58,259 --> 00:07:01,610
actually interestingly from you look at
nation state actors they

131
00:07:01,610 --> 00:07:05,000
are sometimes issue 2 would be the
newest India s

132
00:07:05,000 --> 00:07:08,030
or in Boston in Russia for example that
its you to these agrees and

133
00:07:08,030 --> 00:07:10,380
recommendations for encryption and so on

134
00:07:10,380 --> 00:07:14,900
um you can you know we can look at like
was benefiting from this intrusion but

135
00:07:14,900 --> 00:07:18,210
a target selection that they have arm
and

136
00:07:18,210 --> 00:07:23,009
also sup targeting the targets said it
was like a tea organization-wide

137
00:07:23,009 --> 00:07:27,080
and I'm looking at sea to demands
registration specifics on not saying

138
00:07:27,080 --> 00:07:27,740
like it's

139
00:07:27,740 --> 00:07:31,130
its top are you it must be russia but
you know when has it been registered

140
00:07:31,130 --> 00:07:34,030
from where and which language that's
alright

141
00:07:34,030 --> 00:07:37,940
um for the specific interest in this no
conclusive operatic two times

142
00:07:37,940 --> 00:07:41,280
so you know sometimes you see like
people were up to 925

143
00:07:41,280 --> 00:07:44,530
in the British time zones is probably
GCHQ right

144
00:07:44,530 --> 00:07:47,800
um but in this in this specific case

145
00:07:47,800 --> 00:07:50,849
um they were active 24 /7 and pay

146
00:07:50,849 --> 00:07:53,860
respond immediately to operational
friction rights as

147
00:07:53,860 --> 00:07:57,400
somebody starts looking at the
substrings best like takes over in like

148
00:07:57,400 --> 00:07:58,520
two hours to deploy

149
00:07:58,520 --> 00:08:02,300
more of a skate it was you arm which is
also interesting because they don't know

150
00:08:02,300 --> 00:08:04,580
what it was too hot as well and a half
day

151
00:08:04,580 --> 00:08:08,199
readily raise the level was with what
you're doing

152
00:08:08,199 --> 00:08:11,430
and I once they saw like shit this
operation is really going dont know

153
00:08:11,430 --> 00:08:12,930
we're fucked then they started as

154
00:08:12,930 --> 00:08:16,919
prepping for credit card must apply
criminals want to stick with a katana

155
00:08:16,919 --> 00:08:20,740
but which is obviously like now some
soccer at flexing

156
00:08:20,740 --> 00:08:24,870
um and as a set operator Fed is an able
to text and interspecific

157
00:08:24,870 --> 00:08:27,900
specific case arm so yeah

158
00:08:27,900 --> 00:08:31,259
has always operated for opinion right um

159
00:08:31,259 --> 00:08:36,050
okay enough a high-level blah blah less
I get to some technical details

160
00:08:36,050 --> 00:08:40,750
sold the you left for mint what's your a
form one with our sections was segments

161
00:08:40,750 --> 00:08:41,870
on

162
00:08:41,870 --> 00:08:45,200
so arm yeah it starts with name already
like

163
00:08:45,200 --> 00:08:49,260
you know it's execute a bull and
linkable former so if you think about it

164
00:08:49,260 --> 00:08:52,970
they mix 15 former both for the twist
into media's

165
00:08:52,970 --> 00:08:56,149
which is like objects filed for the
linkers and for the finish

166
00:08:56,149 --> 00:08:59,160
execute a Bulls as the same platform
into your like

167
00:08:59,160 --> 00:09:02,310
okay this a different things wise 15
former and no

168
00:09:02,310 --> 00:09:05,510
gets messy was a name already basically
so

169
00:09:05,510 --> 00:09:09,070
and a former has basically two types of
data contenders and

170
00:09:09,070 --> 00:09:13,260
wanna sections which is basically you
know the viewpoint of the 20 sandwiches

171
00:09:13,260 --> 00:09:15,010
link below into media is

172
00:09:15,010 --> 00:09:18,380
so you know one one out fuckin have
Alberta in

173
00:09:18,380 --> 00:09:21,550
month number of our team name sections
in the binary files a battery

174
00:09:21,550 --> 00:09:22,740
condensates be like you

175
00:09:22,740 --> 00:09:27,269
whatever contain a former arm but the
compiler and linker of course

176
00:09:27,269 --> 00:09:31,310
from then assigned some some meaning to
the section so this text section

177
00:09:31,310 --> 00:09:32,480
everybody else tech section

178
00:09:32,480 --> 00:09:36,000
those contained coat this about a
section which obviously contains data

179
00:09:36,000 --> 00:09:39,630
um but this is really on the meaning
assigned to it by by the compiler and

180
00:09:39,630 --> 00:09:40,610
linker

181
00:09:40,610 --> 00:09:44,660
um so when actually people talk about
the tech section execrable stats kind of

182
00:09:44,660 --> 00:09:45,440
like mixing stuff

183
00:09:45,440 --> 00:09:49,190
up because arm it's the code in the
execrable but

184
00:09:49,190 --> 00:09:52,399
you know the sections is really
something from the compiler toolchain

185
00:09:52,399 --> 00:09:53,290
select

186
00:09:53,290 --> 00:09:57,000
now is mixing stuff up and the whole
section

187
00:09:57,000 --> 00:10:01,649
things of course file offset centric so
because the compiler works was

188
00:10:01,649 --> 00:10:05,220
files biscuit you know its use if we had
to do was

189
00:10:05,220 --> 00:10:09,829
offsets inside the files to the sections
are you know relative to the far side

190
00:10:09,829 --> 00:10:13,040
um and contrary to that you have
segments which are you know

191
00:10:13,040 --> 00:10:16,620
less understood less known which is that
this thing at the actual

192
00:10:16,620 --> 00:10:20,110
runtime: low to use and that the
operating system use tool go toward your

193
00:10:20,110 --> 00:10:21,339
execute a book

194
00:10:21,339 --> 00:10:24,769
um doubt that much because grains on So
You typically have

195
00:10:24,769 --> 00:10:28,970
you know only a couple of Siemens
opposed to tens

196
00:10:28,970 --> 00:10:33,690
of sections and um they are mostly just
grew by the pitch from missus

197
00:10:33,690 --> 00:10:37,880
besides the sickness right so in a
typical modern executable you have a

198
00:10:37,880 --> 00:10:41,029
read executes segment which will be a
code and you have a

199
00:10:41,029 --> 00:10:44,459
refried segment which will be de darme

200
00:10:44,459 --> 00:10:48,160
and so on will be extended to be you
keep as well

201
00:10:48,160 --> 00:10:51,800
basically so you have only a couple of
segments and because this is used by the

202
00:10:51,800 --> 00:10:52,959
run to motor

203
00:10:52,959 --> 00:10:57,390
these things are address centric right
so basically all the segment information

204
00:10:57,390 --> 00:11:00,810
is just an offset memory bases load base

205
00:11:00,810 --> 00:11:04,660
I'm a so bizarre really really two
different points

206
00:11:04,660 --> 00:11:08,350
doing it but they mix and thus far for
want unfortunate people makes me some

207
00:11:08,350 --> 00:11:09,680
help in dealing with this fight for

208
00:11:09,680 --> 00:11:12,829
right so if you if you look at it as a
set you know

209
00:11:12,829 --> 00:11:17,120
you have way less segments and sections
and the segments then also

210
00:11:17,120 --> 00:11:20,930
um overlap multiple sections right so
you have like the real execution the

211
00:11:20,930 --> 00:11:22,680
rich bytes segment and has a lot of sex

212
00:11:22,680 --> 00:11:27,649
sandoz right and on that might be you
know some difference dynamic strings

213
00:11:27,649 --> 00:11:30,860
sections there's a special section you
know for

214
00:11:30,860 --> 00:11:35,360
for dynamically dynamic loader entrance
on and the segments as covered it all

215
00:11:35,360 --> 00:11:38,470
so it's very confusing was also
interesting is that

216
00:11:38,470 --> 00:11:42,740
you know and in terms of sections I'm
some sections are at the end of file

217
00:11:42,740 --> 00:11:45,810
and that typically not I'm spawned by
segments

218
00:11:45,810 --> 00:11:49,730
and because they're not overlapping was
segments that means that the dynamic

219
00:11:49,730 --> 00:11:53,870
lawyer will not load them into memory so
the Telus you basically when an

220
00:11:53,870 --> 00:11:55,990
execrable gets loaded into memory

221
00:11:55,990 --> 00:11:59,420
just doing some of the section data
right on which is interesting which

222
00:11:59,420 --> 00:12:00,329
makes it basically

223
00:12:00,329 --> 00:12:03,700
impossible um to reconstruct the
original

224
00:12:03,700 --> 00:12:06,930
a fire after it has been noted so if
you're dealing with memory dumps and

225
00:12:06,930 --> 00:12:08,750
trying to extract executables

226
00:12:08,750 --> 00:12:12,269
I'm always been into some data which is
different from when those

227
00:12:12,269 --> 00:12:15,470
when those a p/e fathers typically
including all the headers everything's

228
00:12:15,470 --> 00:12:16,370
in memory

229
00:12:16,370 --> 00:12:19,670
so you know in when you doing was
unpacking you can dump it hold original

230
00:12:19,670 --> 00:12:23,860
unpacked file and even try to runnable
excludable in

231
00:12:23,860 --> 00:12:27,230
the simple picture cases from again

232
00:12:27,230 --> 00:12:31,970
so yeah um as a set this these pizzello
segments which describe stuffed loaded

233
00:12:31,970 --> 00:12:35,139
into memory and then that some other
special segments and tell

234
00:12:35,139 --> 00:12:38,889
the loader how to do was as a binary
recordings which is mostly descriptive

235
00:12:38,889 --> 00:12:40,220
stuff

236
00:12:40,220 --> 00:12:45,760
and the segment headers and elf headers
so the real you file headers and bad the

237
00:12:45,760 --> 00:12:47,570
headers loaded use but the motor

238
00:12:47,570 --> 00:12:51,079
are typically part of the first pitch a
lot segment so that means

239
00:12:51,079 --> 00:12:54,480
the main file header and information
about segments

240
00:12:54,480 --> 00:12:57,940
is loaded into memory but the section
headers so the whole

241
00:12:57,940 --> 00:13:02,300
in next sections is not part of the
stuff that gets loaded into memory so

242
00:13:02,300 --> 00:13:05,010
basically if you doing was loaded of
binaries

243
00:13:05,010 --> 00:13:08,620
you can still work segments but you
cannot work with sections anymore

244
00:13:08,620 --> 00:13:11,920
and this is our weather problems begin
reading right am

245
00:13:11,920 --> 00:13:15,389
if you strip all section headers from in
xx executable

246
00:13:15,389 --> 00:13:18,529
you cannot link against it any more but
you have still an executable

247
00:13:18,529 --> 00:13:22,139
that can be loaded by the operating
system and that can execute

248
00:13:22,139 --> 00:13:26,220
and since the section headers are at the
end of the file it's very very easy to

249
00:13:26,220 --> 00:13:26,860
strip them

250
00:13:26,860 --> 00:13:30,269
just need to know the offset by the
section header starting to truncate the

251
00:13:30,269 --> 00:13:31,570
file to the size

252
00:13:31,570 --> 00:13:34,639
stripping of the section headers and you
have been arm

253
00:13:34,639 --> 00:13:38,320
acceptable that can still be run Celeste
like

254
00:13:38,320 --> 00:13:41,769
out you know one line of bash stuff best
magic

255
00:13:41,769 --> 00:13:44,970
that you can use a trumpet them and it
was a run arm

256
00:13:44,970 --> 00:13:48,190
but most of the analysis tools will
actually felt parse

257
00:13:48,190 --> 00:13:52,060
any data from it now like object on read
often song will tell you as a bro

258
00:13:52,060 --> 00:13:55,730
file but the operating system below it
to resist simple one of best you can

259
00:13:55,730 --> 00:13:56,410
already

260
00:13:56,410 --> 00:14:00,240
getting rid of all existing annals
towards and the sort

261
00:14:00,240 --> 00:14:03,470
thing is basically you should be relying
on section information

262
00:14:03,470 --> 00:14:06,550
for positing executables

263
00:14:06,550 --> 00:14:10,500
tools but you know people are lazy
sections are nice a pass because

264
00:14:10,500 --> 00:14:13,389
sections are follow since rights if
you've read too will

265
00:14:13,389 --> 00:14:17,769
dead is suppose to analyze fails then
you just use the sections because

266
00:14:17,769 --> 00:14:21,410
don't need to convert the memory address
is back to file offsets

267
00:14:21,410 --> 00:14:25,570
so people obviously sections and easy
you too flock

268
00:14:25,570 --> 00:14:29,010
um so you're basically what what towards
break

269
00:14:29,010 --> 00:14:32,209
object them read up all the battles
stuff

270
00:14:32,209 --> 00:14:36,260
breaks by of two was was the kind of
Ames lab refer doing

271
00:14:36,260 --> 00:14:40,380
was F binaries in part also almost
purely realize

272
00:14:40,380 --> 00:14:44,139
on on section headers and breaks at a
pro

273
00:14:44,139 --> 00:14:48,029
breaks a certain extent its can still
you know a lotta segments

274
00:14:48,029 --> 00:14:51,790
arm butts the whole dynamic somewhat
stuff breaks it don't know actually

275
00:14:51,790 --> 00:14:54,839
which slips the functions are being call
and so on

276
00:14:54,839 --> 00:14:58,920
and arm well I'm gonna stop policy but
basically all the tools of their break

277
00:14:58,920 --> 00:15:02,120
so I was there was the first problem I
had um

278
00:15:02,120 --> 00:15:05,490
because I don't accept exodus from
memory um

279
00:15:05,490 --> 00:15:08,699
and I didn't have any files because it
doesn't touch the disc yeah I didn't

280
00:15:08,699 --> 00:15:10,690
happen to us analyze stuff anymore which
is

281
00:15:10,690 --> 00:15:13,899
you cannot kinda hot um

282
00:15:13,899 --> 00:15:17,790
so I talks about this problem on Twitter
to some people and honesty

283
00:15:17,790 --> 00:15:20,610
and everybody was like hey I we know
these problems and it seems like

284
00:15:20,610 --> 00:15:22,730
everybody seems to have something
private

285
00:15:22,730 --> 00:15:26,370
are on everybody but you know most the
people I talk to I get off some tool but

286
00:15:26,370 --> 00:15:27,709
the court so ugly and I'm

287
00:15:27,709 --> 00:15:32,180
I wanna publicist I'm recently actually
Ryan when you are also known as

288
00:15:32,180 --> 00:15:35,370
of Master um met the site like bit like
Hayes

289
00:15:35,370 --> 00:15:39,060
way said like oh and the last couple ten
years or so I've been so much go to

290
00:15:39,060 --> 00:15:41,490
publish I will not publish on a coat

291
00:15:41,490 --> 00:15:44,610
I'm the only coated did not publish was
the one that would be interesting for me

292
00:15:44,610 --> 00:15:45,170
im

293
00:15:45,170 --> 00:15:48,259
which is I'm summed up her safety thing

294
00:15:48,259 --> 00:15:51,730
I was called in a blue which kind of
like a elf

295
00:15:51,730 --> 00:15:55,240
anti-virus thing that can actually
detect beauty books and memories that's

296
00:15:55,240 --> 00:15:56,850
exactly what I would like to

297
00:15:56,850 --> 00:15:59,320
but he didn't really thats I talked to
him and he says it's definitely not

298
00:15:59,320 --> 00:16:02,759
gonna be published before May this year
and probably not after was because i

299
00:16:02,759 --> 00:16:04,410
dont duties interested in it

300
00:16:04,410 --> 00:16:08,209
arts yeah um and of course you favorite
a vball

301
00:16:08,209 --> 00:16:12,370
help surely have a minute scanner and
I'm pretty sure that

302
00:16:12,370 --> 00:16:17,310
if he's reading Punjab and with support
scanning for this infusion right

303
00:16:17,310 --> 00:16:21,720
no so in white why do we care about this

304
00:16:21,720 --> 00:16:25,079
um the beauty box office it from
intrusion um

305
00:16:25,079 --> 00:16:29,160
but let's talk about furs to understand
is how the runtime dynamic linker

306
00:16:29,160 --> 00:16:32,980
things your images memory because if all
these different of libraries at

307
00:16:32,980 --> 00:16:37,430
you to call into each other how does it
work and another was hold us the

308
00:16:37,430 --> 00:16:41,180
dynamic link are scrambling break your
binary string

309
00:16:41,180 --> 00:16:44,399
right okay so um first of all very

310
00:16:44,399 --> 00:16:47,470
very old school work and acetic leaving
binaries

311
00:16:47,470 --> 00:16:50,509
so you half all the coat the binary

312
00:16:50,509 --> 00:16:54,139
is using its is getting all linked at
compile-time

313
00:16:54,139 --> 00:16:57,670
into one giant execute a bill that
contains all the dependencies

314
00:16:57,670 --> 00:17:02,399
um and ban all the Lincoln is to be
you're all the operating system

315
00:17:02,399 --> 00:17:06,660
yes just map the code into memory which
is basically housing the segment headers

316
00:17:06,660 --> 00:17:09,890
dreading the memory mapping saluting the
contents and then you can just you know

317
00:17:09,890 --> 00:17:13,209
firing go and you don't need to two
months um

318
00:17:13,209 --> 00:17:17,880
so because it sucks if every of executed
those post all the dependencies into one

319
00:17:17,880 --> 00:17:18,689
file

320
00:17:18,689 --> 00:17:21,829
you have a lot of duplicated memory and
disk presence on serving

321
00:17:21,829 --> 00:17:25,799
into dynamic linking which makes sense
right um

322
00:17:25,799 --> 00:17:28,940
so you have these these all this library
stars

323
00:17:28,940 --> 00:17:32,600
just separate things on the disc and
once the process depends on the library

324
00:17:32,600 --> 00:17:35,330
just got selectively loaded into the
process and then

325
00:17:35,330 --> 00:17:39,679
but together am say interestingly
dynamic link executables

326
00:17:39,679 --> 00:17:43,590
are um not believe the XX it will send
execute its sole

327
00:17:43,590 --> 00:17:46,880
and the next terminology as you notice 0
is see

328
00:17:46,880 --> 00:17:50,340
actual executable that is some an
execrable in

329
00:17:50,340 --> 00:17:54,240
any dynamically process since when you
think to run

330
00:17:54,240 --> 00:17:57,049
real you know you know you know best
scripts right which have a she banks

331
00:17:57,049 --> 00:17:57,789
when you

332
00:17:57,789 --> 00:18:01,789
execute a best script actually execute
bass and which then interprets the best

333
00:18:01,789 --> 00:18:03,590
for you because as interpreter

334
00:18:03,590 --> 00:18:06,700
this is the same kind of thing for all
the S hope

335
00:18:06,700 --> 00:18:10,890
for dynamically linked things um at the
ASCO is an interpreter sits

336
00:18:10,890 --> 00:18:14,340
actually static leading execute a bill
but then below its your

337
00:18:14,340 --> 00:18:17,410
acceptable and interpret the the
dependences for you

338
00:18:17,410 --> 00:18:21,090
so the kernel posits a problem headers
and

339
00:18:21,090 --> 00:18:24,429
maps a memory for you but the whole
process of linking done

340
00:18:24,429 --> 00:18:28,200
happens in the space soul all the
dynamic linker dust suppose

341
00:18:28,200 --> 00:18:32,990
only resolving some as a memory but as
beat us on its own

342
00:18:32,990 --> 00:18:37,419
um so how does it work if the section
headers are not mapped into memory right

343
00:18:37,419 --> 00:18:38,100
how do you

344
00:18:38,100 --> 00:18:41,740
because the symbols arm their
dependencies a dynamic duo finances our

345
00:18:41,740 --> 00:18:44,600
section and if you don't have to
information about the section 102 don't

346
00:18:44,600 --> 00:18:46,230
know whether section s

347
00:18:46,230 --> 00:18:49,539
well arm this is where a special

348
00:18:49,539 --> 00:18:52,720
arm segments comes in this call to

349
00:18:52,720 --> 00:18:55,960
pretty dynamic siegman types you can
have multiple but you never have

350
00:18:55,960 --> 00:18:56,850
multiple because

351
00:18:56,850 --> 00:19:00,820
on the one make sense and it's a sick
man that is just there for the dynamic

352
00:19:00,820 --> 00:19:02,630
linker and it's basically like

353
00:19:02,630 --> 00:19:07,059
tech well you kind of structure so it's
arm you always Ameritech to tell you

354
00:19:07,059 --> 00:19:08,679
what kind of information is that

355
00:19:08,679 --> 00:19:12,100
and then the well-used typically a
pointer into the memory and

356
00:19:12,100 --> 00:19:15,250
this is already wet gets very messy I'm
because the

357
00:19:15,250 --> 00:19:18,440
siegman headers r Memory addresses and
this is segment

358
00:19:18,440 --> 00:19:21,690
again full of pointers or relative
understood image not base

359
00:19:21,690 --> 00:19:25,600
arm and this is what nasa deposit this
way for doing this disk files because

360
00:19:25,600 --> 00:19:26,600
you know all these

361
00:19:26,600 --> 00:19:30,169
memory pointer stenotic government file
offset saloon and translates for us

362
00:19:30,169 --> 00:19:31,559
right

363
00:19:31,559 --> 00:19:34,559
um so you have these taken by the press
of native punish size so it's always

364
00:19:34,559 --> 00:19:39,070
liked what to ponder spur preparing to
table and is just kinda I'll terminated

365
00:19:39,070 --> 00:19:42,500
um and it has all these points
interesting stuff like

366
00:19:42,500 --> 00:19:45,510
string table which is then used for

367
00:19:45,510 --> 00:19:49,130
the names of the Somerset the one
employed some a table that contains a

368
00:19:49,130 --> 00:19:50,710
list of Somerset imported

369
00:19:50,710 --> 00:19:54,950
I'm all the relocation information this
and their dependencies like which lab is

370
00:19:54,950 --> 00:19:57,330
actually do need to be loaded and so on

371
00:19:57,330 --> 00:20:01,010
and all the information is aware before
the special segment so all you need is

372
00:20:01,010 --> 00:20:02,320
you can get over this way

373
00:20:02,320 --> 00:20:06,490
arm but as I said it's like kinda
message to deal with this for files

374
00:20:06,490 --> 00:20:10,210
um and you know that's what we'll see is
that right arm so

375
00:20:10,210 --> 00:20:13,380
the other thing was this header is
during loading

376
00:20:13,380 --> 00:20:17,230
um the dynamic linker use a special
segment as kind of a scratchpad

377
00:20:17,230 --> 00:20:22,260
so arm after a binary has been noted to
Sigmund doesn't look any more like a

378
00:20:22,260 --> 00:20:23,789
dove on disk because a

379
00:20:23,789 --> 00:20:27,039
basically the dynamic linker will at

380
00:20:27,039 --> 00:20:30,940
the image not address the base address
to offer pointers to

381
00:20:30,940 --> 00:20:34,510
basically just have a pointer in there
and so on I'm so this

382
00:20:34,510 --> 00:20:38,730
you need to first retooling cocco to
understand how rude to reverse

383
00:20:38,730 --> 00:20:42,870
the modifications the bus to the segment
to get to the original statement

384
00:20:42,870 --> 00:20:46,020
um so you can translate it back to
follow sets it

385
00:20:46,020 --> 00:20:50,210
and then there's potd: on which is the
beauty hoping I was talking about right

386
00:20:50,210 --> 00:20:51,570
the procedure linkage table

387
00:20:51,570 --> 00:20:55,730
so from actually when people talk about
the beauty or

388
00:20:55,730 --> 00:20:59,419
double off the table these are actually
logical concepts

389
00:20:59,419 --> 00:21:03,080
on that exist sections and are concepts
from

390
00:21:03,080 --> 00:21:07,070
the whole compiler toolchain but it's
not like really part of the l5 on

391
00:21:07,070 --> 00:21:08,809
specific ation and it's not

392
00:21:08,809 --> 00:21:12,039
part of of the link a logic um so

393
00:21:12,039 --> 00:21:15,350
if you look at the win this fight for my
portable executable say having import

394
00:21:15,350 --> 00:21:16,440
address table which is

395
00:21:16,440 --> 00:21:20,299
part of the actual file specification
and as well defined

396
00:21:20,299 --> 00:21:23,330
am deputy actually is are

397
00:21:23,330 --> 00:21:26,730
implemented depending on what was seen
in different ways so

398
00:21:26,730 --> 00:21:31,909
object to see and p.m. all have some
kind of beauty but how you implemented

399
00:21:31,909 --> 00:21:35,919
I'm in terms in within the boundaries of
the hell specification

400
00:21:35,919 --> 00:21:39,169
arm is up to the twitching soul arm

401
00:21:39,169 --> 00:21:43,429
for GCC which the snow a the case I'm
gonna talk about you

402
00:21:43,429 --> 00:21:46,659
um important functions are always just
the small stop

403
00:21:46,659 --> 00:21:50,720
I'm was just like some and then that the
reference a beauty memory rights there's

404
00:21:50,720 --> 00:21:52,460
a certain offsetting the beauty

405
00:21:52,460 --> 00:21:56,080
wish represents a function pointer to
the actually important function and then

406
00:21:56,080 --> 00:21:58,049
this a small stuff right

407
00:21:58,049 --> 00:22:02,159
um and on x86 this is called some pro
because Thomas

408
00:22:02,159 --> 00:22:05,720
you know relocatable chums so um instead

409
00:22:05,720 --> 00:22:09,220
of using some specific thing which
tussling to put a function pointer

410
00:22:09,220 --> 00:22:13,770
year they use relocations I'm deadly
sins is to see this jump rope

411
00:22:13,770 --> 00:22:16,809
relocations to implement the purity
concept

412
00:22:16,809 --> 00:22:20,890
um so it's basically initially the
beauteous

413
00:22:20,890 --> 00:22:24,669
0 initialized and then they tell its I'm
okay for every slot

414
00:22:24,669 --> 00:22:28,039
in the PRT they have one relocation
information which is

415
00:22:28,039 --> 00:22:32,960
relative to assemble um and then because
you want to call the actual symbol

416
00:22:32,960 --> 00:22:36,789
this like a zero offset so this is like
really really convoluted way of

417
00:22:36,789 --> 00:22:38,730
implementing these imports for

418
00:22:38,730 --> 00:22:41,940
so they have to purity which has a
stable of imports but they don't have

419
00:22:41,940 --> 00:22:43,750
like a direct mapping to imports

420
00:22:43,750 --> 00:22:47,679
but this is long list a few locations
that tells you like okay

421
00:22:47,679 --> 00:22:51,370
this is a pure t-slot no I wanted to
fill the security slot was

422
00:22:51,370 --> 00:22:54,440
the address of the symbol plus zero
offset

423
00:22:54,440 --> 00:22:58,970
and this is like that you know you teach
judge overhead for just implementing its

424
00:22:58,970 --> 00:23:02,140
um and then even more complicated Lee

425
00:23:02,140 --> 00:23:06,330
modern compilers I mostly use lazy
linking I'm so instead of the dynamic

426
00:23:06,330 --> 00:23:07,830
linker resolving all the symbols

427
00:23:07,830 --> 00:23:12,780
no time am that's not it a 0 function
pointer and there but actually this is

428
00:23:12,780 --> 00:23:15,630
Ian that's a function pointer to a smart
stop

429
00:23:15,630 --> 00:23:18,659
that been tussling for please propagate
this relocation

430
00:23:18,659 --> 00:23:22,870
so before a function has been called for
the first time it will actually be

431
00:23:22,870 --> 00:23:24,070
pointless more stop

432
00:23:24,070 --> 00:23:27,230
so did interesting thing about this is
that actually when you look at them

433
00:23:27,230 --> 00:23:28,700
affects a good will come from memory

434
00:23:28,700 --> 00:23:32,880
you can tell which funds and have been
called and was having bacana ready

435
00:23:32,880 --> 00:23:36,919
but yeah um as you can a second
understand maybe it's really really

436
00:23:36,919 --> 00:23:37,710
complicated

437
00:23:37,710 --> 00:23:40,900
been looking at something goes into
memory to figure out without the section

438
00:23:40,900 --> 00:23:41,350
headers

439
00:23:41,350 --> 00:23:45,750
what from what duties lot corresponds to
what symbol and thereby what

440
00:23:45,750 --> 00:23:49,779
call indulge in a binary actually cause
which guy right

441
00:23:49,779 --> 00:23:53,200
and to get naked more messy looking at
the memory dump of course

442
00:23:53,200 --> 00:23:57,090
they can be code that actually hook
security so hooking in general leaves

443
00:23:57,090 --> 00:23:59,429
means like you want to redirect function
call

444
00:23:59,429 --> 00:24:04,110
to a specific function from 103 you know
interception point for use to change

445
00:24:04,110 --> 00:24:08,740
arguments edition behavior I don't know
maybe stop the function call and so on

446
00:24:08,740 --> 00:24:12,580
and a you know if you typically do
hooking comments may be the

447
00:24:12,580 --> 00:24:16,480
into December engine to you know
December original code injected some to

448
00:24:16,480 --> 00:24:17,990
your coat in there and so on

449
00:24:17,990 --> 00:24:21,980
but if you actually just wanna ok
exported API calls

450
00:24:21,980 --> 00:24:26,029
I'm from the called siddig and would
like is your the cost is trampled slots

451
00:24:26,029 --> 00:24:27,020
and purity

452
00:24:27,020 --> 00:24:30,740
their dysfunction points right and arm
replacing a function pointer was the

453
00:24:30,740 --> 00:24:31,650
address of your own

454
00:24:31,650 --> 00:24:35,100
hope you functioning and then calling
dollars a function is a lot easier to do

455
00:24:35,100 --> 00:24:36,630
this right

456
00:24:36,630 --> 00:24:40,059
um so the challenge of course if you
implement this is locating the proper

457
00:24:40,059 --> 00:24:41,730
jumble sluts to fuck

458
00:24:41,730 --> 00:24:44,960
um unless of course you do at the
preload best-looking

459
00:24:44,960 --> 00:24:48,380
when you come to see no export the
symbol C one up book and Lincoln dust

460
00:24:48,380 --> 00:24:51,490
the whole looking for you but at the
preload of course has the disadvantage

461
00:24:51,490 --> 00:24:53,230
is that you need to

462
00:24:53,230 --> 00:24:56,919
am provides disinformation before the
actual

463
00:24:56,919 --> 00:25:00,500
starting off the of the process right
you cannot use at the preload on a

464
00:25:00,500 --> 00:25:01,429
running process

465
00:25:01,429 --> 00:25:04,900
and and then choose not talking about
your they actually used

466
00:25:04,900 --> 00:25:09,510
be injected into running processes from
the post exportation chocolate

467
00:25:09,510 --> 00:25:12,919
so you know you have the the exploit and
then they inject into running processes

468
00:25:12,919 --> 00:25:14,370
to never touched this price

469
00:25:14,370 --> 00:25:18,860
so arm yeah have to rip implement the
whole dynamic making logic

470
00:25:18,860 --> 00:25:22,190
I'm inside the framework and a set this
one

471
00:25:22,190 --> 00:25:25,529
really has all the corner cases for the
different which aims which Israel nice

472
00:25:25,529 --> 00:25:26,179
right

473
00:25:26,179 --> 00:25:29,840
I just talked about on the jump
role-based beauties but different which

474
00:25:29,840 --> 00:25:31,440
answers to other way sexually

475
00:25:31,440 --> 00:25:36,010
implement deputies with an their file
formats constraints which is done by all

476
00:25:36,010 --> 00:25:37,500
the GCC versions and so on

477
00:25:37,500 --> 00:25:41,450
and has professed unending because the
stool same I reversed their

478
00:25:41,450 --> 00:25:45,370
I'm really supported are GCC 2.2x kind
of

479
00:25:45,370 --> 00:25:49,330
P a tease and song which is debt have
binary compatibility to a lot of

480
00:25:49,330 --> 00:25:52,350
options as well um

481
00:25:52,350 --> 00:25:55,640
and yup because it's on forced by a play
Dabi

482
00:25:55,640 --> 00:25:58,940
to have this kind of relocation support
and so on its a very generic techniques

483
00:25:58,940 --> 00:25:59,919
are you not

484
00:25:59,919 --> 00:26:03,559
arm you not really dependent on and it
will shine if it wouldn't be too and all

485
00:26:03,559 --> 00:26:04,730
the cables

486
00:26:04,730 --> 00:26:08,500
and you know in those very convoluted
jobs all this dynamic linking it's

487
00:26:08,500 --> 00:26:10,289
probably still use an inline hooking

488
00:26:10,289 --> 00:26:15,679
we have to do some disassembly and so on
right okay so as purity opinionated

489
00:26:15,679 --> 00:26:19,669
um so yeah I'm you know I'm looking at
this and getting his memory dumps

490
00:26:19,669 --> 00:26:24,230
um and I have no existing tools that can
handle these a5 Hamas I have nothing I

491
00:26:24,230 --> 00:26:25,679
can do miss beauty hooks

492
00:26:25,679 --> 00:26:29,120
on because I mean this will add to the T
which is really great

493
00:26:29,120 --> 00:26:33,419
but performance they basically or mostly
had only cuddle support because

494
00:26:33,419 --> 00:26:36,419
all the cool kids whose Connor would
kiss right unless you really advance

495
00:26:36,419 --> 00:26:38,270
actor wants to stay under the radar

496
00:26:38,270 --> 00:26:41,870
and adjusting and use the space arm and
the other of course adventures abusing

497
00:26:41,870 --> 00:26:43,730
kids you looking opposed to a condo

498
00:26:43,730 --> 00:26:47,650
rude kid is thats you have

499
00:26:47,650 --> 00:26:51,159
way more binary compatibility right if
you wanna do you deal was currently have

500
00:26:51,159 --> 00:26:52,990
to port support to point as

501
00:26:52,990 --> 00:26:56,549
a 2.6 X maybe even 2.4 serve
establishment

502
00:26:56,549 --> 00:27:00,900
when for condoms and so on am and if it
does have this this year's best of you

503
00:27:00,900 --> 00:27:02,080
when a portable so

504
00:27:02,080 --> 00:27:06,850
arm mace on not as sexy as a long
convoluted but then again

505
00:27:06,850 --> 00:27:09,860
if you're like really want to get to
your goals you don't have to be sexy but

506
00:27:09,860 --> 00:27:11,159
you have to be effective from

507
00:27:11,159 --> 00:27:14,789
I I think the use best offers a more
effective steps and what's more

508
00:27:14,789 --> 00:27:19,169
more advanced more real-world um so ya
bro to volatility

509
00:27:19,169 --> 00:27:22,169
again to detect beauty books and in
volatility Dom's

510
00:27:22,169 --> 00:27:25,820
comments this is a story how to
false-positive which I will explain in a

511
00:27:25,820 --> 00:27:27,240
demanding it more because

512
00:27:27,240 --> 00:27:30,919
I'm trends are even on a dip in 607

513
00:27:30,919 --> 00:27:34,539
are default install to have a bunch of
kitty Foxx

514
00:27:34,539 --> 00:27:40,000
so it's kind of like a problem um has a
what's for the volatility for those who

515
00:27:40,000 --> 00:27:41,380
don't know it yet

516
00:27:41,380 --> 00:27:44,870
um volatility is basically as patton

517
00:27:44,870 --> 00:27:48,179
program that lets you analyze for memory
dumps rights or not

518
00:27:48,179 --> 00:27:51,250
from seeing a process but from the
entire physical memory

519
00:27:51,250 --> 00:27:54,630
um they had originally for Windows
because no witnesses have think people

520
00:27:54,630 --> 00:27:55,480
care about right

521
00:27:55,480 --> 00:27:58,720
and then later the edit or stand in
support

522
00:27:58,720 --> 00:28:02,399
um and as a set you know falynn say only
look at the cold because on the new apps

523
00:28:02,399 --> 00:28:04,710
to your space stuff right

524
00:28:04,710 --> 00:28:09,279
um so yeah it's very nicely done though
I'm sparkle play concentric

525
00:28:09,279 --> 00:28:12,700
so everybody can rights additional
plugins on what your stats

526
00:28:12,700 --> 00:28:17,169
you implement new commands I'm which was
useful for me

527
00:28:17,169 --> 00:28:20,649
so actually implemented two modules one
is called the notes else was

528
00:28:20,649 --> 00:28:24,100
two scans the whole you space mapping
stuff binaries arm

529
00:28:24,100 --> 00:28:28,700
using them of magic signature and then
using despite of tools binary I was

530
00:28:28,700 --> 00:28:32,669
talking about billions which is broken
so I also passed by of tools

531
00:28:32,669 --> 00:28:37,450
tool supports noted images and to
support siegman base information apostle

532
00:28:37,450 --> 00:28:38,570
sections

533
00:28:38,570 --> 00:28:42,250
and that sorry really useful because
obliterated by default only lets you

534
00:28:42,250 --> 00:28:42,610
know

535
00:28:42,610 --> 00:28:46,760
dump the memory mappings but I to be
clean a funny spans multiple mapping

536
00:28:46,760 --> 00:28:48,179
sincere useful to see like

537
00:28:48,179 --> 00:28:52,510
what mappings for sponsor one finance on
and then another one of causing its

538
00:28:52,510 --> 00:28:54,330
purity book which you know scans all
these

539
00:28:54,330 --> 00:28:59,830
at binaries that you have in a process
for the presence shitty hoax

540
00:28:59,830 --> 00:29:03,549
okay %ah so how do we define purity
hookin

541
00:29:03,549 --> 00:29:08,799
you know for our sake um some DPAT
always contains function pointers

542
00:29:08,799 --> 00:29:12,809
to other much is because no import
function from other modules

543
00:29:12,809 --> 00:29:16,919
um and it's not sorted by much you with
soul I'm you know even if you grew by

544
00:29:16,919 --> 00:29:17,630
moderates

545
00:29:17,630 --> 00:29:20,740
and see if it like it is in the Serai
dollar-something a dozen health

546
00:29:20,740 --> 00:29:25,230
from the jump rail relocation just
specify system by name

547
00:29:25,230 --> 00:29:29,230
but not from which module the symbol
name it's a be imported

548
00:29:29,230 --> 00:29:33,940
which no is has kinda messy so if you
have multiple modules

549
00:29:33,940 --> 00:29:37,799
that exploit the same symbol the snow
formally define logic which symbol to

550
00:29:37,799 --> 00:29:38,309
take

551
00:29:38,309 --> 00:29:41,620
and also means that if you have

552
00:29:41,620 --> 00:29:45,149
if you import December and 2 don't I'm
tell dunning cart

553
00:29:45,149 --> 00:29:48,500
to impart that module but something as a
plus that module

554
00:29:48,500 --> 00:29:53,340
I'm it still work so it's easy to break
and people often experience that that

555
00:29:53,340 --> 00:29:54,590
Iran programs

556
00:29:54,590 --> 00:29:57,809
which doing fine and then it went and if
you got this is something missing

557
00:29:57,809 --> 00:30:03,320
i'd um so how can we distinguishable
from alleged depends in part because you

558
00:30:03,320 --> 00:30:04,110
know

559
00:30:04,110 --> 00:30:07,480
we have no from a specific you know
specifics where the should be imported

560
00:30:07,480 --> 00:30:08,320
from

561
00:30:08,320 --> 00:30:12,010
am at least this thus the special
dynamic texted or called needed so it's

562
00:30:12,010 --> 00:30:14,120
a list of required to be loaded

563
00:30:14,120 --> 00:30:18,590
a dynamic the temp agencies and libros
shortlist all I shoots

564
00:30:18,590 --> 00:30:22,370
was all libraries it's important symbols
from so you know you can actually run

565
00:30:22,370 --> 00:30:27,000
right because it is a must so the high
Eucharistic that I'm using us both the

566
00:30:27,000 --> 00:30:29,720
transitive full of these DT mute
dependencies

567
00:30:29,720 --> 00:30:33,480
and check if the jump rope on whose
actually pointing to any such small

568
00:30:33,480 --> 00:30:37,840
right because if I say and part
something from MySQL and this in turn

569
00:30:37,840 --> 00:30:41,340
depends on the BSE its legitimate from
my module to still be depending on the

570
00:30:41,340 --> 00:30:42,320
BSE

571
00:30:42,320 --> 00:30:45,340
um so it's broader than you would in the
city

572
00:30:45,340 --> 00:30:48,520
think but it still sufficient for
detecting kitty it's mostly because

573
00:30:48,520 --> 00:30:52,880
am if you have anything rock injected or
like Eddie preloaded then it's unlikely

574
00:30:52,880 --> 00:30:53,470
that the

575
00:30:53,470 --> 00:30:58,419
men excitable legitimately depends on
these things

576
00:30:58,419 --> 00:31:02,909
um yet so did he needed is actually how
does that the twitching know which lives

577
00:31:02,909 --> 00:31:04,169
on it will you have these

578
00:31:04,169 --> 00:31:08,220
dash out compiler switches and on this
basically

579
00:31:08,220 --> 00:31:12,000
then ends up in exit polls um so you're
Simmons can be

580
00:31:12,000 --> 00:31:15,649
imported from an ex could boast but also
from any other module

581
00:31:15,649 --> 00:31:19,679
um and if it's not presents linker error
but you know some applications

582
00:31:19,679 --> 00:31:23,210
have a horrible both process and I'll
named in a weird way

583
00:31:23,210 --> 00:31:26,710
I'm and so one example not to bash on
them

584
00:31:26,710 --> 00:31:29,740
just one example Apache two modules I'm

585
00:31:29,740 --> 00:31:32,750
day always implicitly link against this

586
00:31:32,750 --> 00:31:36,659
Apache plugin library so a patchy
moderate snow this library will be

587
00:31:36,659 --> 00:31:37,919
loaded into a Pepsi

588
00:31:37,919 --> 00:31:41,830
but all the Model S horse do not
specifically say like hey I depend on

589
00:31:41,830 --> 00:31:43,039
the specific Lavery

590
00:31:43,039 --> 00:31:46,140
they just assume summers would be there
and they are medically there

591
00:31:46,140 --> 00:31:49,880
but that means that this library is not
in there

592
00:31:49,880 --> 00:31:54,740
dependency this which means arm it will
generate a false positive in distress

593
00:31:54,740 --> 00:31:58,860
X because the process is broke and yes
nothing you can do about it because

594
00:31:58,860 --> 00:32:03,559
arm yeah you don't know generically how
this should be

595
00:32:03,559 --> 00:32:06,590
um and the nervous system has some
legitimate purity books

596
00:32:06,590 --> 00:32:10,200
which are mostly usually 22 at the
preload libraries

597
00:32:10,200 --> 00:32:14,169
so um there sis live MPM underscore
compacts

598
00:32:14,169 --> 00:32:18,159
was as a side in Debian for example the
in at RDU dust some

599
00:32:18,159 --> 00:32:22,470
I you ID shadow emulation and so on for
the Nats Rd and they have the slip n

600
00:32:22,470 --> 00:32:24,700
p.m. compd library which does that

601
00:32:24,700 --> 00:32:28,480
and as noted by Eddie preload for
everything's spawned from the NRD soul

602
00:32:28,480 --> 00:32:32,120
and of course some processes will
survive the process and your

603
00:32:32,120 --> 00:32:35,880
bash actually redirects Malla my lock
and the other he punches

604
00:32:35,880 --> 00:32:39,510
the main executable to use their own
keep a locator so

605
00:32:39,510 --> 00:32:42,940
desk bunch of things that that you
always seen anything

606
00:32:42,940 --> 00:32:46,190
so um yeah I added the wiper switch
streaking or so

607
00:32:46,190 --> 00:32:49,730
mappings and the output but that's
basically like expert at input rights

608
00:32:49,730 --> 00:32:50,789
you have to use

609
00:32:50,789 --> 00:32:55,690
whitelist were hasher's of binary said
to want it more because over if I could

610
00:32:55,690 --> 00:32:56,480
do something

611
00:32:56,480 --> 00:33:00,679
otherwise the Sox will still be up for
it because the our PLT hooks for real

612
00:33:00,679 --> 00:33:03,840
but you know behalf legitimate reason to
do that

613
00:33:03,840 --> 00:33:07,059
night that's all the problems are blah
blah

614
00:33:07,059 --> 00:33:10,320
this is actually a dumb from from the
main thing right

615
00:33:10,320 --> 00:33:13,860
um so you know as you can see in the
original choosing

616
00:33:13,860 --> 00:33:17,750
you know Jeff if the piece I for dinner
being booked here

617
00:33:17,750 --> 00:33:22,019
if the peace aside for itself hamas so
so you know some nasty stuff but they

618
00:33:22,019 --> 00:33:23,669
were doing on those servers

619
00:33:23,669 --> 00:33:28,320
um yeah so because I can hardly demo the
original memory

620
00:33:28,320 --> 00:33:35,320
by an issue for you guys arm prepared
another demo

621
00:33:35,409 --> 00:33:42,409
it's ok this works no and a bit still
hard to type a guess

622
00:33:51,670 --> 00:33:55,770
this is probably why you're prepared
Emma videos

623
00:33:55,770 --> 00:33:59,950
which I didn't do I am okay so you can
see it you we can see you know it's like

624
00:33:59,950 --> 00:34:02,130
you know just members began six being

625
00:34:02,130 --> 00:34:05,780
and volatility is awesome enough to
support the amber memories Netflix

626
00:34:05,780 --> 00:34:06,370
directly

627
00:34:06,370 --> 00:34:11,150
so lemme to spawn process your cat is a
nice example because it

628
00:34:11,150 --> 00:34:15,880
loss elsa spend together ex-members
snapshot instill

629
00:34:15,880 --> 00:34:20,750
Stanley for talk a little bit in the
selection I am

630
00:34:20,750 --> 00:34:23,770
okay said Lisa prepared mandoline slicer

631
00:34:23,770 --> 00:34:30,770
alright I am

632
00:34:31,480 --> 00:34:34,779
rates when that doesn't temples green so

633
00:34:34,779 --> 00:34:38,510
I'll first bugging them running on this
on this memory snapshot nose like

634
00:34:38,510 --> 00:34:39,159
students have

635
00:34:39,159 --> 00:34:42,359
thing so for some reason were to a tee
on

636
00:34:42,359 --> 00:34:46,029
when this is really really slow for me I
am its

637
00:34:46,029 --> 00:34:50,270
a lot faster on the notes actually but
yeah so you can see

638
00:34:50,270 --> 00:34:54,289
all the different kiddies appear maybe I
should check the temp

639
00:34:54,289 --> 00:34:59,010
better I C after different us half the
actual extent of the elf

640
00:34:59,010 --> 00:35:02,529
image which is different from from many
things because it starts at 'em

641
00:35:02,529 --> 00:35:07,279
met in basement image doesn't always
extend to the end of the

642
00:35:07,279 --> 00:35:10,670
actual of the actual mapping sick and
see

643
00:35:10,670 --> 00:35:13,789
ap file name: so libraries

644
00:35:13,789 --> 00:35:17,660
they have in the dynamic tax they have
like fine details like this library is

645
00:35:17,660 --> 00:35:19,690
actually this fun independence its aim

646
00:35:19,690 --> 00:35:24,809
um man executed was typically don't have
this fixed names in that case it's just

647
00:35:24,809 --> 00:35:26,039
offering the full path

648
00:35:26,039 --> 00:35:30,069
disc sick and distinguishes bed if it
starts with a slash its a pass on the

649
00:35:30,069 --> 00:35:31,220
west's but the binary

650
00:35:31,220 --> 00:35:34,349
claims to be and then of course after
dependency list

651
00:35:34,349 --> 00:35:37,930
so if you wanna play you know it's
really nice to use dots down to do like

652
00:35:37,930 --> 00:35:39,640
dependency graphs what I read

653
00:35:39,640 --> 00:35:43,609
or processes and somewhat and so on as a
sea of scanning

654
00:35:43,609 --> 00:35:48,640
I'm alright so this is an existing

655
00:35:48,640 --> 00:35:52,950
commands PS lose just gives you a list
of running processes from the memory

656
00:35:52,950 --> 00:35:53,369
dump

657
00:35:53,369 --> 00:35:57,000
okay so we have

658
00:35:57,000 --> 00:36:00,359
our catch down here and this is the
purity of cats

659
00:36:00,359 --> 00:36:05,099
so I will just

660
00:36:05,099 --> 00:36:08,369
no selected for the iran cutie hope

661
00:36:08,369 --> 00:36:11,470
Mon for thats he

662
00:36:11,470 --> 00:36:15,970
I d and should be there with fastener

663
00:36:15,970 --> 00:36:19,770
adjustment process right okay

664
00:36:19,770 --> 00:36:24,190
and you can see what I was saying
earlier right best always some stuff

665
00:36:24,190 --> 00:36:25,760
that looks like beauty Wilson

666
00:36:25,760 --> 00:36:29,819
legitimate by receiving cat has books as
mainly because

667
00:36:29,819 --> 00:36:32,900
the linker dynamic linkers use the heap
as well

668
00:36:32,900 --> 00:36:36,140
but the linker itself doesn't say so

669
00:36:36,140 --> 00:36:39,410
because implicitly the dynamic lymphoma
the subpoenas

670
00:36:39,410 --> 00:36:42,609
assumes that see will be there so it
just has the same months without

671
00:36:42,609 --> 00:36:43,520
specifying

672
00:36:43,520 --> 00:36:47,430
to see something to stop importing from
Etsy sellers set in as an expert input

673
00:36:47,430 --> 00:36:48,720
it always makes sense

674
00:36:48,720 --> 00:36:51,839
what was let's see for example um
alright

675
00:36:51,839 --> 00:36:56,329
so I'm a resume a snapshot here

676
00:36:56,329 --> 00:37:00,720
I am download gonna use a super advance
stuff from its reason

677
00:37:00,720 --> 00:37:04,279
instead I'm just going you somehow the
preload thing I find it up

678
00:37:04,279 --> 00:37:07,829
such as when to shut up search for LG
preloading

679
00:37:07,829 --> 00:37:11,789
yea that was like something arm so

680
00:37:11,789 --> 00:37:15,180
I'm just gonna use the soaking live reno
and one cat again

681
00:37:15,180 --> 00:37:18,210
so you can actually see this is nice
looking lively which

682
00:37:18,210 --> 00:37:21,660
upwards support calls circles Malaga
credence

683
00:37:21,660 --> 00:37:28,660
on om so I'll suspend the machine again
to create a memory snapshot I am

684
00:37:29,210 --> 00:37:32,589
of course we have a different

685
00:37:32,589 --> 00:37:38,630
kbps uselessness the process Spurs again

686
00:37:38,630 --> 00:37:44,870
rights

687
00:37:44,870 --> 00:37:51,870
then let's look its nuclear the beauty
whose

688
00:37:55,960 --> 00:38:00,320
okay and I we can see it I am so the
actual

689
00:38:00,320 --> 00:38:03,750
been cat binary the summary and Malek

690
00:38:03,750 --> 00:38:07,090
have been hopes and the hook as the

691
00:38:07,090 --> 00:38:11,050
the address of the hook and this is
actually the binary that provides a

692
00:38:11,050 --> 00:38:11,820
specific

693
00:38:11,820 --> 00:38:18,820
so works day thank you

694
00:38:19,370 --> 00:38:22,580
doubt have stuff works directly in the
doesn't a bit hard doesn't

695
00:38:22,580 --> 00:38:26,330
was painful um yes anyway

696
00:38:26,330 --> 00:38:30,030
I it's all open source a but we all know
open source doesn't really work that

697
00:38:30,030 --> 00:38:30,550
well

698
00:38:30,550 --> 00:38:34,450
I'm how can you get the code well arm so

699
00:38:34,450 --> 00:38:38,840
initially I he wanted to have both
patches of as a senator to patch the

700
00:38:38,840 --> 00:38:42,170
library deposits out and I needed to
petula to the T so I just wanted to get

701
00:38:42,170 --> 00:38:43,150
them upstream

702
00:38:43,150 --> 00:38:46,410
um for playoff tools um

703
00:38:46,410 --> 00:38:51,480
it's scheduled to be merged upstream at
some point guys just too busy to merge

704
00:38:51,480 --> 00:38:52,380
it in right now

705
00:38:52,380 --> 00:38:56,990
so of thanks to you live and risky for
us for rape after is in the first place

706
00:38:56,990 --> 00:39:00,960
and now said everybody sending emails to
merge the PAP's um

707
00:39:00,960 --> 00:39:06,290
volatility um it initially was scheduled
to be merged into upstream into summer

708
00:39:06,290 --> 00:39:09,770
submerging some parents very hot then
you know this can you read this

709
00:39:09,770 --> 00:39:13,760
arm so I asked like Andrew case did you
get my purchase another

710
00:39:13,760 --> 00:39:19,270
yes we rewrote its because we don't like
that apostle using so they're rewriting

711
00:39:19,270 --> 00:39:19,960
everything

712
00:39:19,960 --> 00:39:23,740
um and they're holding it back though
until the publishing about

713
00:39:23,740 --> 00:39:28,950
book to promote the book so arm yeah two
cases to open source projects to Austin

714
00:39:28,950 --> 00:39:30,100
Pettis propose

715
00:39:30,100 --> 00:39:33,810
to not merge upstream um so I'll just

716
00:39:33,810 --> 00:39:39,490
be putting them on my just hop um at
some point iconic zetor to type from

717
00:39:39,490 --> 00:39:43,580
isn't really business laptop because i
dont have the crest soul

718
00:39:43,580 --> 00:39:46,930
are you can watch much better on so I do
that and from now

719
00:39:46,930 --> 00:39:51,540
you can actually use this you're out
there to download like a top all

720
00:39:51,540 --> 00:39:55,570
arm because I hate presentations like my
presentation last year that come with a

721
00:39:55,570 --> 00:39:57,380
coat so this yet comes was coat

722
00:39:57,380 --> 00:40:02,100
out with that link in a bid to arms a
connection download it today and start

723
00:40:02,100 --> 00:40:06,560
breaking it today the do familiar with
that I see work

724
00:40:06,560 --> 00:40:10,810
at issue project a Risinger ER

725
00:40:10,810 --> 00:40:15,530
the as I'd now I okay sold its like

726
00:40:15,530 --> 00:40:18,920
beaker project which has been growing
scenes

727
00:40:18,920 --> 00:40:22,320
2004 I believe yes answer that is this
kind of

728
00:40:22,320 --> 00:40:25,860
research seem like to yours blass more
okay

729
00:40:25,860 --> 00:40:29,200
and this is asking so okay issue what

730
00:40:29,200 --> 00:40:32,930
yeah and we have good to know before I
start writing my heart cut a

731
00:40:32,930 --> 00:40:36,690
solve these problems but does it support
volatility or like memory dumps or its

732
00:40:36,690 --> 00:40:37,800
just for condoms

733
00:40:37,800 --> 00:40:41,340
or so this season it easy itself be cray
more

734
00:40:41,340 --> 00:40:45,090
nice own language which cross address
itself

735
00:40:45,090 --> 00:40:48,510
much was designed for diverse and unique
and bank in the out by NIS

736
00:40:48,510 --> 00:40:52,240
itself that is a lot of books about that
in the 2007 there was a button

737
00:40:52,240 --> 00:40:56,380
lockhart during when you are the owner
of this project the party

738
00:40:56,380 --> 00:40:58,390
and

739
00:40:58,390 --> 00:41:02,270
yeah mostly its operating but alf

740
00:41:02,270 --> 00:41:05,300
itself and not on the dumps

741
00:41:05,300 --> 00:41:10,410
my else anti does does the back not
owning the building homes but just money

742
00:41:10,410 --> 00:41:11,750
by the therapy Inc and its

743
00:41:11,750 --> 00:41:15,010
scriptable so we can all rights occurred
in the high-level language

744
00:41:15,010 --> 00:41:18,359
something this kind with Action Council
good fits all

745
00:41:18,359 --> 00:41:22,090
if you can give me that I'll add another
inferences thank you

746
00:41:22,090 --> 00:41:26,320
so it looks at you basically

747
00:41:26,320 --> 00:41:29,859
extracted 32 structures that were left
over by the loader

748
00:41:29,859 --> 00:41:34,109
so the guilty in cop killed himself like
that but the load as a lot of

749
00:41:34,109 --> 00:41:37,820
under internal data structures Rd could
use for some

750
00:41:37,820 --> 00:41:41,020
more details how to library actually
ended up in there

751
00:41:41,020 --> 00:41:44,560
to look at those as well or is it just
the libris themselves

752
00:41:44,560 --> 00:41:47,660
so from I i mean

753
00:41:47,660 --> 00:41:51,580
for the specific intrusion I would have
been useless because they inject was

754
00:41:51,580 --> 00:41:52,420
Petrosyan

755
00:41:52,420 --> 00:41:56,100
even objective poto says Petros so
there's no trace in

756
00:41:56,100 --> 00:41:59,420
dynamic loader struck which would be a
nice indicate a ride if it's not

757
00:41:59,420 --> 00:42:03,260
in the no deductions but an appeal to
your Prof pretty sure that it was

758
00:42:03,260 --> 00:42:03,859
malicious

759
00:42:03,859 --> 00:42:07,869
that's that's another touristic problem
was that is I'm better than depending on

760
00:42:07,869 --> 00:42:09,590
specific chemical or worsens

761
00:42:09,590 --> 00:42:13,000
um and de framework is very generic

762
00:42:13,000 --> 00:42:17,420
and will it it is very generic so I try
to be as generic as possible

763
00:42:17,420 --> 00:42:21,800
was detecting it as well so you could
certainly test for certain order

764
00:42:21,800 --> 00:42:24,980
dynamic linker wasn't add additional
your wrist x I yeah

765
00:42:24,980 --> 00:42:28,080
add into that or just extract the header
files from to

766
00:42:28,080 --> 00:42:32,780
mission yup of course if you have swords
axes you can automate it to see a

767
00:42:32,780 --> 00:42:36,640
and no and I was there a balanced a

768
00:42:36,640 --> 00:42:42,600
looking at you when you talking about
and hijacking on Sat going to be

769
00:42:42,600 --> 00:42:47,000
the section are you can see another
section for example construct or on this

770
00:42:47,000 --> 00:42:47,260
to

771
00:42:47,260 --> 00:42:51,730
source up yes 5 per month am know so I
only look at the beauty

772
00:42:51,730 --> 00:42:54,869
um because the thing is um

773
00:42:54,869 --> 00:42:58,730
Dez the specific implants they use
beauty hooking

774
00:42:58,730 --> 00:43:02,080
took certain certain special APIs right
for example

775
00:43:02,080 --> 00:43:05,869
they hook some Pam APIs um

776
00:43:05,869 --> 00:43:10,250
to you know add addition of Education
success is basically

777
00:43:10,250 --> 00:43:13,550
um so good looking into the constructor

778
00:43:13,550 --> 00:43:16,960
gives you like initial code execution
but as a setback the stuff

779
00:43:16,960 --> 00:43:21,210
and this not only this the specific case
but I mean the family ate of

780
00:43:21,210 --> 00:43:24,720
things techniques I was targeting is
about like injecting stuff

781
00:43:24,720 --> 00:43:27,900
and injecting books after long time
right and constructors and destructors

782
00:43:27,900 --> 00:43:28,890
adjustable

783
00:43:28,890 --> 00:43:32,660
forgetting code execution so to say like
forever infection so

784
00:43:32,660 --> 00:43:36,750
arm I could certainly at that because
it's not hard to do when may be

785
00:43:36,750 --> 00:43:40,390
interesting but I did for the specific
format um

786
00:43:40,390 --> 00:43:44,160
also to be honest I don't

787
00:43:44,160 --> 00:43:47,390
I think again if you have section
headers fining constructors and

788
00:43:47,390 --> 00:43:48,650
destructors is really easy

789
00:43:48,650 --> 00:43:51,740
because they have their own section um
was a segment

790
00:43:51,740 --> 00:43:55,250
I am for the segment based information
actually have to look into our dynamic

791
00:43:55,250 --> 00:43:56,440
load of ice this beings

792
00:43:56,440 --> 00:44:00,150
spread with Harvard its something to
consider cook backs

793
00:44:00,150 --> 00:44:00,550
thank you

