1
00:00:06,820 --> 00:00:09,869
[Music]

2
00:00:13,360 --> 00:00:16,000
hello everyone hope you have a great

3
00:00:16,000 --> 00:00:17,279
lunch

4
00:00:17,279 --> 00:00:19,920
i will quickly introduce myself

5
00:00:19,920 --> 00:00:22,800
i'm karim sutki security expert at

6
00:00:22,800 --> 00:00:25,760
kudevsky iot labs

7
00:00:25,760 --> 00:00:27,039
our main

8
00:00:27,039 --> 00:00:29,920
let's say area of expertise is hardware

9
00:00:29,920 --> 00:00:33,120
attacks we are doing glitch em

10
00:00:33,120 --> 00:00:35,840
laser photo injections as well as some

11
00:00:35,840 --> 00:00:37,440
side channels

12
00:00:37,440 --> 00:00:40,239
and we are also doing

13
00:00:40,239 --> 00:00:42,399
most of the time security evaluation on

14
00:00:42,399 --> 00:00:45,800
iot products

15
00:00:45,920 --> 00:00:47,719
and back in

16
00:00:47,719 --> 00:00:50,879
2021 the company decided to develop

17
00:00:50,879 --> 00:00:52,239
its own

18
00:00:52,239 --> 00:00:55,199
vehicle tracking solution

19
00:00:55,199 --> 00:00:58,480
and they wanted to gain insights on

20
00:00:58,480 --> 00:01:01,280
what's the security maturity of

21
00:01:01,280 --> 00:01:04,799
some actors on the mac the market

22
00:01:04,799 --> 00:01:07,760
for me it was just another day another

23
00:01:07,760 --> 00:01:10,640
project so

24
00:01:11,200 --> 00:01:13,200
we

25
00:01:13,200 --> 00:01:17,040
the need for having car tracking is uh

26
00:01:17,040 --> 00:01:19,840
because if you look at the statistics in

27
00:01:19,840 --> 00:01:21,280
the usa

28
00:01:21,280 --> 00:01:24,320
the motor vehicle thefts per 100k

29
00:01:24,320 --> 00:01:25,600
habitants

30
00:01:25,600 --> 00:01:27,040
is

31
00:01:27,040 --> 00:01:29,439
drawn in orange

32
00:01:29,439 --> 00:01:31,920
as we can see it's quite high and as

33
00:01:31,920 --> 00:01:35,600
technology evolved it slowly

34
00:01:35,600 --> 00:01:38,960
goes down until at some point it

35
00:01:38,960 --> 00:01:40,880
stays at the same level

36
00:01:40,880 --> 00:01:41,759
and

37
00:01:41,759 --> 00:01:43,040
if we

38
00:01:43,040 --> 00:01:44,960
have a look on

39
00:01:44,960 --> 00:01:46,560
how much car is

40
00:01:46,560 --> 00:01:48,159
theft

41
00:01:48,159 --> 00:01:52,320
per year per time it means in 2015 that

42
00:01:52,320 --> 00:01:56,399
one vehicle is theft it is stolen every

43
00:01:56,399 --> 00:01:59,360
45 seconds

44
00:01:59,360 --> 00:02:02,240
so when your car is stolen um

45
00:02:02,240 --> 00:02:04,479
there is some pains basically uh you

46
00:02:04,479 --> 00:02:06,719
need to find your car very very quickly

47
00:02:06,719 --> 00:02:09,199
because you don't know where it is so

48
00:02:09,199 --> 00:02:11,440
you need to contact law enforcement

49
00:02:11,440 --> 00:02:12,720
insurance

50
00:02:12,720 --> 00:02:15,120
probably a car is already dismantled

51
00:02:15,120 --> 00:02:18,640
and all of this costs money

52
00:02:18,879 --> 00:02:21,200
so one solution but i don't know if

53
00:02:21,200 --> 00:02:23,680
everybody will do it is to apply some

54
00:02:23,680 --> 00:02:26,239
good paintings on your car

55
00:02:26,239 --> 00:02:28,160
i would say the real solution is to put

56
00:02:28,160 --> 00:02:30,879
the chip in your car and know its uh

57
00:02:30,879 --> 00:02:32,800
location at any time

58
00:02:32,800 --> 00:02:34,560
share its location for

59
00:02:34,560 --> 00:02:35,760
with lower

60
00:02:35,760 --> 00:02:39,518
enforcement for fast recovery

61
00:02:39,599 --> 00:02:42,400
and all of this

62
00:02:42,400 --> 00:02:44,400
evolves in a market that

63
00:02:44,400 --> 00:02:46,560
it even allows you to track

64
00:02:46,560 --> 00:02:48,560
your teens when you take the car in the

65
00:02:48,560 --> 00:02:50,879
u.s you can drive at the age of 16. so

66
00:02:50,879 --> 00:02:52,800
you can jail fence

67
00:02:52,800 --> 00:02:55,599
your car to know where if it crosses a

68
00:02:55,599 --> 00:02:58,400
certain area you can know if it's across

69
00:02:58,400 --> 00:03:00,720
a certain speed limits

70
00:03:00,720 --> 00:03:02,879
and you can have a nice insurance

71
00:03:02,879 --> 00:03:06,319
discount like 15 percent is

72
00:03:06,319 --> 00:03:08,400
pretty much i would say

73
00:03:08,400 --> 00:03:11,040
um and there is also the dealers that

74
00:03:11,040 --> 00:03:13,519
sell you the car they can provide you

75
00:03:13,519 --> 00:03:14,720
some

76
00:03:14,720 --> 00:03:16,879
recalls notice if there is a problem

77
00:03:16,879 --> 00:03:19,200
with the car they can also

78
00:03:19,200 --> 00:03:21,440
ask you for an appointment

79
00:03:21,440 --> 00:03:23,920
um there are several other

80
00:03:23,920 --> 00:03:26,400
uh things like you can know where the

81
00:03:26,400 --> 00:03:27,920
car is on the parking lot because they

82
00:03:27,920 --> 00:03:29,599
have a lot of space and don't know where

83
00:03:29,599 --> 00:03:32,879
the park the car is so you have a whole

84
00:03:32,879 --> 00:03:34,799
monitoring solution for your cars and

85
00:03:34,799 --> 00:03:35,840
you know

86
00:03:35,840 --> 00:03:38,560
every time where it is

87
00:03:38,560 --> 00:03:39,280
so

88
00:03:39,280 --> 00:03:40,959
car trackers there are many of them on

89
00:03:40,959 --> 00:03:42,480
the market

90
00:03:42,480 --> 00:03:45,599
you can see most of them have screws to

91
00:03:45,599 --> 00:03:47,360
stay fixed on the car

92
00:03:47,360 --> 00:03:49,040
some of them have

93
00:03:49,040 --> 00:03:52,239
even odb2 connector so you can guess

94
00:03:52,239 --> 00:03:56,319
what can go wrong at this point

95
00:03:57,200 --> 00:03:59,680
so for those who are not familiar with

96
00:03:59,680 --> 00:04:01,360
such solution

97
00:04:01,360 --> 00:04:04,319
basically you put a device in your car

98
00:04:04,319 --> 00:04:06,640
you fix it and this device acquired the

99
00:04:06,640 --> 00:04:07,760
position

100
00:04:07,760 --> 00:04:10,400
with the gps

101
00:04:10,400 --> 00:04:13,360
and some of them have even bluetooth or

102
00:04:13,360 --> 00:04:15,760
canvas

103
00:04:15,760 --> 00:04:16,720
and all

104
00:04:16,720 --> 00:04:18,639
the events that they are collecting are

105
00:04:18,639 --> 00:04:21,759
sent to a cloud infrastructure uh via 4g

106
00:04:21,759 --> 00:04:23,440
network

107
00:04:23,440 --> 00:04:24,960
and

108
00:04:24,960 --> 00:04:27,120
on the consumer side what you have is

109
00:04:27,120 --> 00:04:28,720
basically an application that allows you

110
00:04:28,720 --> 00:04:31,440
to see where the car is and have all the

111
00:04:31,440 --> 00:04:33,120
notification with that

112
00:04:33,120 --> 00:04:36,400
some of them have even sms fallback

113
00:04:36,400 --> 00:04:39,360
which is quite interesting because

114
00:04:39,360 --> 00:04:41,360
when you lose internet connection you

115
00:04:41,360 --> 00:04:44,240
can still have sms coming in so it's

116
00:04:44,240 --> 00:04:46,080
quite convenient if you lose the tracker

117
00:04:46,080 --> 00:04:49,520
the connectivity with the tracker

118
00:04:50,320 --> 00:04:52,880
in our case we looked at a

119
00:04:52,880 --> 00:04:55,040
specific company which is named

120
00:04:55,040 --> 00:04:56,720
spy spyron

121
00:04:56,720 --> 00:04:58,400
this company

122
00:04:58,400 --> 00:04:59,520
has

123
00:04:59,520 --> 00:05:01,120
four different products

124
00:05:01,120 --> 00:05:04,080
they have a product for uh dealers

125
00:05:04,080 --> 00:05:06,639
basically for you and me at the end

126
00:05:06,639 --> 00:05:08,000
because it's

127
00:05:08,000 --> 00:05:10,479
in your car so it will be beneficial for

128
00:05:10,479 --> 00:05:11,520
you

129
00:05:11,520 --> 00:05:13,600
and they have things like a trailer

130
00:05:13,600 --> 00:05:15,360
asset management inventory management

131
00:05:15,360 --> 00:05:16,720
this is more for

132
00:05:16,720 --> 00:05:19,759
an enterprise like dhl or such a such

133
00:05:19,759 --> 00:05:21,680
company and they have a

134
00:05:21,680 --> 00:05:23,520
last uh

135
00:05:23,520 --> 00:05:25,680
last product which

136
00:05:25,680 --> 00:05:27,840
fits inside the category where you can

137
00:05:27,840 --> 00:05:30,160
go in the garage and have

138
00:05:30,160 --> 00:05:31,440
financing

139
00:05:31,440 --> 00:05:34,160
by the garage itself so

140
00:05:34,160 --> 00:05:36,320
you need as well some solution to track

141
00:05:36,320 --> 00:05:38,320
the car and to get your money back in

142
00:05:38,320 --> 00:05:42,000
case of non-payment for instance

143
00:05:42,400 --> 00:05:45,520
so here we had a look on the cow

144
00:05:45,520 --> 00:05:46,560
low jack

145
00:05:46,560 --> 00:05:49,039
device it was rebranded between

146
00:05:49,039 --> 00:05:51,280
when i did the research and

147
00:05:51,280 --> 00:05:53,759
the talk right now

148
00:05:53,759 --> 00:05:56,720
they have also promoting their own cloud

149
00:05:56,720 --> 00:05:59,759
platform uh which is called inspire

150
00:05:59,759 --> 00:06:01,680
which uh uh

151
00:06:01,680 --> 00:06:03,199
apparently have

152
00:06:03,199 --> 00:06:04,560
more than three

153
00:06:04,560 --> 00:06:07,199
the five millionths active subscriber so

154
00:06:07,199 --> 00:06:10,240
it's quite huge

155
00:06:10,400 --> 00:06:12,319
so the tracker itself you can find it in

156
00:06:12,319 --> 00:06:14,720
a fuse box usually uh it comes with a

157
00:06:14,720 --> 00:06:16,880
bunch of cable that we see on the right

158
00:06:16,880 --> 00:06:20,560
side you can see on this specific wires

159
00:06:20,560 --> 00:06:21,280
that

160
00:06:21,280 --> 00:06:24,880
it steals power from the odb2 as well

161
00:06:24,880 --> 00:06:27,280
however there is no or little

162
00:06:27,280 --> 00:06:30,479
interaction with the db2 itself

163
00:06:30,479 --> 00:06:33,120
so when you have this device the first

164
00:06:33,120 --> 00:06:35,199
thing to look is to gain information

165
00:06:35,199 --> 00:06:37,600
about the device how it works what it

166
00:06:37,600 --> 00:06:38,800
does

167
00:06:38,800 --> 00:06:41,360
and for this you can use the fcc id the

168
00:06:41,360 --> 00:06:43,919
fcc id is basically a grant that you

169
00:06:43,919 --> 00:06:47,280
need to acquire to sell or import radio

170
00:06:47,280 --> 00:06:51,599
frequency devices to on the us market

171
00:06:51,599 --> 00:06:54,000
the label is usually located on the

172
00:06:54,000 --> 00:06:56,160
device itself

173
00:06:56,160 --> 00:06:58,160
like this and it's very convenient

174
00:06:58,160 --> 00:06:59,840
because you can find

175
00:06:59,840 --> 00:07:02,479
pho internal photos so even without

176
00:07:02,479 --> 00:07:04,400
having the device

177
00:07:04,400 --> 00:07:06,160
physically you can know what is what is

178
00:07:06,160 --> 00:07:08,479
inside and start to prepare basically if

179
00:07:08,479 --> 00:07:11,120
you want to attack such such device you

180
00:07:11,120 --> 00:07:13,520
have also user manuals which can give

181
00:07:13,520 --> 00:07:15,199
you some insights on how it works

182
00:07:15,199 --> 00:07:18,800
basically what the device accepts

183
00:07:18,800 --> 00:07:20,880
one good thing is that there are some

184
00:07:20,880 --> 00:07:22,479
sites that allows you also to query the

185
00:07:22,479 --> 00:07:24,639
manufacturer which is quite convenient

186
00:07:24,639 --> 00:07:29,720
and we will see later in the talk why

187
00:07:30,000 --> 00:07:32,000
so for this specific device here we have

188
00:07:32,000 --> 00:07:32,639
a

189
00:07:32,639 --> 00:07:36,560
fancy user manual with some let's say

190
00:07:36,560 --> 00:07:37,680
features

191
00:07:37,680 --> 00:07:39,599
what we can see is that the device

192
00:07:39,599 --> 00:07:41,520
accept remote updates

193
00:07:41,520 --> 00:07:43,120
over the air

194
00:07:43,120 --> 00:07:44,400
it's using ftp

195
00:07:44,400 --> 00:07:46,240
so

196
00:07:46,240 --> 00:07:47,280
okay

197
00:07:47,280 --> 00:07:48,319
why not

198
00:07:48,319 --> 00:07:49,840
um

199
00:07:49,840 --> 00:07:52,240
it supports as well at 80 commands so

200
00:07:52,240 --> 00:07:55,120
for those who are not

201
00:07:56,240 --> 00:07:58,319
those who doesn't know how what is an at

202
00:07:58,319 --> 00:08:00,879
command is basically a protocol that is

203
00:08:00,879 --> 00:08:03,280
used over a serial line to configure

204
00:08:03,280 --> 00:08:04,560
modem so

205
00:08:04,560 --> 00:08:07,680
um they extended this uh command as we

206
00:08:07,680 --> 00:08:10,319
can see uh the device support extended

207
00:08:10,319 --> 00:08:11,840
that commands

208
00:08:11,840 --> 00:08:15,840
which are specific to this device itself

209
00:08:15,840 --> 00:08:17,680
and we can even know a little bit about

210
00:08:17,680 --> 00:08:19,840
the report format

211
00:08:19,840 --> 00:08:22,400
such as the report is simply a hex

212
00:08:22,400 --> 00:08:23,919
encoded

213
00:08:23,919 --> 00:08:25,919
binary stuff on

214
00:08:25,919 --> 00:08:29,919
which is sent over the network

215
00:08:30,479 --> 00:08:32,240
now we saw before that we have a bunch

216
00:08:32,240 --> 00:08:33,519
of wires so

217
00:08:33,519 --> 00:08:34,880
the red and

218
00:08:34,880 --> 00:08:37,360
black is quite easy to to guess what it

219
00:08:37,360 --> 00:08:40,559
is so power supply we have a white one

220
00:08:40,559 --> 00:08:42,958
which is uh for initial sense so to know

221
00:08:42,958 --> 00:08:45,680
where is where whether the car is

222
00:08:45,680 --> 00:08:47,920
um started or not

223
00:08:47,920 --> 00:08:50,160
and we have a last uh wire green wire

224
00:08:50,160 --> 00:08:54,320
which uh seems to be a starter disabled

225
00:08:54,320 --> 00:08:58,080
relay wire so it goes into something it

226
00:08:58,080 --> 00:08:59,350
can be present or not

227
00:08:59,350 --> 00:09:01,279
[Music]

228
00:09:01,279 --> 00:09:03,440
by googling a little bit more about the

229
00:09:03,440 --> 00:09:05,839
company and about the tracker i was able

230
00:09:05,839 --> 00:09:06,560
to

231
00:09:06,560 --> 00:09:09,120
find this documentation so i'm sorry

232
00:09:09,120 --> 00:09:11,440
because i could not find any better

233
00:09:11,440 --> 00:09:14,640
quality than this one

234
00:09:14,640 --> 00:09:16,640
also

235
00:09:16,640 --> 00:09:19,279
i need to specify that on the left side

236
00:09:19,279 --> 00:09:21,279
this

237
00:09:21,279 --> 00:09:24,160
circles and uh rectangles are in fact

238
00:09:24,160 --> 00:09:25,920
the car

239
00:09:25,920 --> 00:09:27,200
so

240
00:09:27,200 --> 00:09:28,560
um

241
00:09:28,560 --> 00:09:30,560
what we can see what we can discover on

242
00:09:30,560 --> 00:09:32,800
this um on this

243
00:09:32,800 --> 00:09:35,760
schematic is that in red you have

244
00:09:35,760 --> 00:09:38,880
upstream uh that what the device sends

245
00:09:38,880 --> 00:09:40,080
is

246
00:09:40,080 --> 00:09:42,480
sending to the cloud is in red

247
00:09:42,480 --> 00:09:45,279
and what is

248
00:09:45,279 --> 00:09:48,000
going to the device is in yellow and

249
00:09:48,000 --> 00:09:49,200
green

250
00:09:49,200 --> 00:09:52,720
it seems to be related to mqtt

251
00:09:52,720 --> 00:09:54,480
but we can see there there is a lot of

252
00:09:54,480 --> 00:09:56,800
lambda functions since it's based on

253
00:09:56,800 --> 00:09:59,120
adobe siot

254
00:09:59,120 --> 00:10:01,920
and so we have two parts

255
00:10:01,920 --> 00:10:03,440
if i have to summarize so we have the

256
00:10:03,440 --> 00:10:05,440
blue parts which is internet-based

257
00:10:05,440 --> 00:10:07,920
connection so normal ip connections and

258
00:10:07,920 --> 00:10:10,480
we have a fallback in sms as well

259
00:10:10,480 --> 00:10:12,000
so from this

260
00:10:12,000 --> 00:10:14,959
we already know where we want to go

261
00:10:14,959 --> 00:10:18,240
so no bluetooth no canvas we have a

262
00:10:18,240 --> 00:10:19,600
hardware

263
00:10:19,600 --> 00:10:20,959
and we need uh

264
00:10:20,959 --> 00:10:23,120
to see the network aspects

265
00:10:23,120 --> 00:10:24,880
i won't talk about the application nor

266
00:10:24,880 --> 00:10:27,440
the cloud because it we are a hardware

267
00:10:27,440 --> 00:10:30,480
lab so i didn't went that far

268
00:10:30,480 --> 00:10:31,680
but uh

269
00:10:31,680 --> 00:10:33,200
maybe it's interesting to have a look as

270
00:10:33,200 --> 00:10:35,360
well

271
00:10:35,360 --> 00:10:38,000
so for the hardware if we are looking to

272
00:10:38,000 --> 00:10:40,480
watch the devices so the device is

273
00:10:40,480 --> 00:10:42,560
the size of the hand basically it

274
00:10:42,560 --> 00:10:45,600
exposes 16 pin connectors and if we look

275
00:10:45,600 --> 00:10:48,480
at the wires that is used they are like

276
00:10:48,480 --> 00:10:49,839
four wires

277
00:10:49,839 --> 00:10:51,920
only exposed and used

278
00:10:51,920 --> 00:10:53,440
in the outside so

279
00:10:53,440 --> 00:10:56,240
what does the other pins do

280
00:10:56,240 --> 00:10:57,600
for this we need to go deeper

281
00:10:57,600 --> 00:10:59,360
fortunately the

282
00:10:59,360 --> 00:11:01,519
box is quite easy to

283
00:11:01,519 --> 00:11:03,760
to to pop so

284
00:11:03,760 --> 00:11:06,000
here we can see um on the left side you

285
00:11:06,000 --> 00:11:08,320
have the connector so the image are

286
00:11:08,320 --> 00:11:09,920
synced

287
00:11:09,920 --> 00:11:12,240
we have some unpopulated connectors or

288
00:11:12,240 --> 00:11:14,959
test pads with markings we have the gps

289
00:11:14,959 --> 00:11:17,600
and antenna in blue we have the sim card

290
00:11:17,600 --> 00:11:20,000
which i found i had two devices in hand

291
00:11:20,000 --> 00:11:22,160
so one was verizon the other one was

292
00:11:22,160 --> 00:11:23,200
print

293
00:11:23,200 --> 00:11:25,440
we have a space for backup battery which

294
00:11:25,440 --> 00:11:28,640
is optional it depends the model

295
00:11:28,640 --> 00:11:31,360
we have as well a microcontroller which

296
00:11:31,360 --> 00:11:32,399
is in

297
00:11:32,399 --> 00:11:34,880
green on the right picture

298
00:11:34,880 --> 00:11:39,279
a usb port and we have a cactel bg96

299
00:11:39,279 --> 00:11:41,279
module as well and

300
00:11:41,279 --> 00:11:45,760
st free access xlm accelerometer

301
00:11:45,760 --> 00:11:49,200
so when we have such things we start by

302
00:11:49,200 --> 00:11:52,240
looking what is on the pcb basically so

303
00:11:52,240 --> 00:11:54,000
by looking on the pcb we can see some

304
00:11:54,000 --> 00:11:57,360
markings already so i highlighted the

305
00:11:57,360 --> 00:11:59,360
ports of interest that i found on the

306
00:11:59,360 --> 00:12:02,079
device uh we have seen

307
00:12:02,079 --> 00:12:04,240
there is many of them some of them are

308
00:12:04,240 --> 00:12:07,040
not used some of them are used so

309
00:12:07,040 --> 00:12:10,240
for this we need to check the voltages

310
00:12:10,240 --> 00:12:13,279
so you see with the voltmeters what um

311
00:12:13,279 --> 00:12:15,040
what what is the voltage basically

312
00:12:15,040 --> 00:12:18,079
measure takes lines transmitting lines

313
00:12:18,079 --> 00:12:19,600
to know if the

314
00:12:19,600 --> 00:12:22,399
something is active on the on the on

315
00:12:22,399 --> 00:12:24,560
this interface you can do the same for

316
00:12:24,560 --> 00:12:25,760
eric's

317
00:12:25,760 --> 00:12:27,600
reception because

318
00:12:27,600 --> 00:12:29,440
when you do that you know you can know

319
00:12:29,440 --> 00:12:31,120
if somebody is

320
00:12:31,120 --> 00:12:32,320
another chip for instance is

321
00:12:32,320 --> 00:12:34,399
communicating over the same

322
00:12:34,399 --> 00:12:37,920
interface so both lines will be uh up at

323
00:12:37,920 --> 00:12:39,600
a high level let's say

324
00:12:39,600 --> 00:12:41,600
so we wired the logic anizer to the

325
00:12:41,600 --> 00:12:44,079
device and monitor signal as startup and

326
00:12:44,079 --> 00:12:46,560
this is what we can observe

327
00:12:46,560 --> 00:12:48,800
so basically on the green we can see

328
00:12:48,800 --> 00:12:51,040
that there is a bunch of printings with

329
00:12:51,040 --> 00:12:52,480
the product version

330
00:12:52,480 --> 00:12:54,480
emi

331
00:12:54,480 --> 00:12:56,959
binaries version application version

332
00:12:56,959 --> 00:12:58,720
ip ports

333
00:12:58,720 --> 00:13:00,240
fine

334
00:13:00,240 --> 00:13:02,800
on the red one we have some kind of

335
00:13:02,800 --> 00:13:04,079
weird

336
00:13:04,079 --> 00:13:05,760
serial communication

337
00:13:05,760 --> 00:13:07,600
which uh

338
00:13:07,600 --> 00:13:09,040
doesn't look common

339
00:13:09,040 --> 00:13:12,079
and we have as well on the blue uh

340
00:13:12,079 --> 00:13:13,839
just some as a message that the

341
00:13:13,839 --> 00:13:15,920
application is ready

342
00:13:15,920 --> 00:13:18,320
good so what can we do with those

343
00:13:18,320 --> 00:13:20,959
interfaces which is chipset drives the

344
00:13:20,959 --> 00:13:23,200
whole logic of the system because it can

345
00:13:23,200 --> 00:13:25,600
be the mcu but it can be us as well the

346
00:13:25,600 --> 00:13:28,240
cocktail bg96

347
00:13:28,240 --> 00:13:29,360
so

348
00:13:29,360 --> 00:13:31,680
what we should do first is grab the

349
00:13:31,680 --> 00:13:33,360
firmware since we don't have access to

350
00:13:33,360 --> 00:13:35,279
the firmware because they are not public

351
00:13:35,279 --> 00:13:36,880
we need to retrieve them back from the

352
00:13:36,880 --> 00:13:39,120
device itself

353
00:13:39,120 --> 00:13:40,880
so i decided to have a look on the first

354
00:13:40,880 --> 00:13:42,079
one which i know

355
00:13:42,079 --> 00:13:43,600
pretty well

356
00:13:43,600 --> 00:13:45,199
the first one is a entry level

357
00:13:45,199 --> 00:13:47,040
microcontroller from

358
00:13:47,040 --> 00:13:49,279
stm macro

359
00:13:49,279 --> 00:13:50,959
it has some

360
00:13:50,959 --> 00:13:52,560
peripherals

361
00:13:52,560 --> 00:13:54,079
it's quite

362
00:13:54,079 --> 00:13:56,880
quite common to see those

363
00:13:56,880 --> 00:13:58,480
using the information that we have on

364
00:13:58,480 --> 00:14:01,279
the pcb so on the other side on what i

365
00:14:01,279 --> 00:14:03,120
show on the right side we can see that

366
00:14:03,120 --> 00:14:05,600
there is already some markings

367
00:14:05,600 --> 00:14:06,639
so

368
00:14:06,639 --> 00:14:09,279
looking at those markings you can use a

369
00:14:09,279 --> 00:14:10,639
voltmeter

370
00:14:10,639 --> 00:14:13,040
to do a continuity test between the pins

371
00:14:13,040 --> 00:14:16,000
to know where they are rooted basically

372
00:14:16,000 --> 00:14:18,079
using that we found that it's going to

373
00:14:18,079 --> 00:14:20,560
the microcontroller the microcontroller

374
00:14:20,560 --> 00:14:22,320
we look at the datasheet and we can know

375
00:14:22,320 --> 00:14:24,399
that it's a single wire debug

376
00:14:24,399 --> 00:14:25,440
interface

377
00:14:25,440 --> 00:14:29,199
which is used by the stm

378
00:14:29,199 --> 00:14:33,760
stm42 to program them debug them

379
00:14:33,760 --> 00:14:35,360
etc

380
00:14:35,360 --> 00:14:38,240
so what we do the next is that we take a

381
00:14:38,240 --> 00:14:41,040
debug probe we wire it to the to the

382
00:14:41,040 --> 00:14:42,320
device

383
00:14:42,320 --> 00:14:44,399
so you have multiple choice you can use

384
00:14:44,399 --> 00:14:47,120
the official st-link from stm micro but

385
00:14:47,120 --> 00:14:49,760
you can use as well the hygrobus

386
00:14:49,760 --> 00:14:52,880
which has a two-way arc mode and you can

387
00:14:52,880 --> 00:14:55,760
use the idcom id code command to see if

388
00:14:55,760 --> 00:14:58,480
the device you are on the device and you

389
00:14:58,480 --> 00:15:01,279
can query it basically

390
00:15:01,279 --> 00:15:02,240
you can

391
00:15:02,240 --> 00:15:05,279
use also open cd so open lcd with the

392
00:15:05,279 --> 00:15:07,199
correct configuration you will see that

393
00:15:07,199 --> 00:15:09,440
you will get in green

394
00:15:09,440 --> 00:15:11,120
the

395
00:15:11,120 --> 00:15:13,600
identification number of the

396
00:15:13,600 --> 00:15:14,800
the cpu

397
00:15:14,800 --> 00:15:18,720
and opensd will listen on port 444 for

398
00:15:18,720 --> 00:15:20,959
telnet connection and through this

399
00:15:20,959 --> 00:15:22,399
interface you can

400
00:15:22,399 --> 00:15:25,279
basically interact with the the debugger

401
00:15:25,279 --> 00:15:27,680
and uh you can um

402
00:15:27,680 --> 00:15:29,120
reset the chip

403
00:15:29,120 --> 00:15:31,440
query for the memory attempt its content

404
00:15:31,440 --> 00:15:33,360
so here what we need to do is to connect

405
00:15:33,360 --> 00:15:34,880
to this port

406
00:15:34,880 --> 00:15:36,240
we reset

407
00:15:36,240 --> 00:15:38,639
we maintain the result of the device so

408
00:15:38,639 --> 00:15:41,440
that it doesn't run the microcontroller

409
00:15:41,440 --> 00:15:43,920
and then we dump the the image

410
00:15:43,920 --> 00:15:46,320
and here what we can see is that

411
00:15:46,320 --> 00:15:48,560
there is no protection

412
00:15:48,560 --> 00:15:50,639
on this microcontroller so

413
00:15:50,639 --> 00:15:52,880
it's already good

414
00:15:52,880 --> 00:15:56,480
next uh next step we fire guidra we use

415
00:15:56,480 --> 00:15:59,279
cortex little engine we

416
00:15:59,279 --> 00:16:01,040
fill out the base address

417
00:16:01,040 --> 00:16:03,279
we can use the system view description

418
00:16:03,279 --> 00:16:05,440
files to map the peripherals

419
00:16:05,440 --> 00:16:07,839
we start to reverse engineer and

420
00:16:07,839 --> 00:16:09,519
unfortunately there is nothing in this

421
00:16:09,519 --> 00:16:11,120
firmware so

422
00:16:11,120 --> 00:16:14,639
we will investigate the other one

423
00:16:15,279 --> 00:16:17,519
so when we look at the other one in fact

424
00:16:17,519 --> 00:16:20,399
it's a cactel bg96 which

425
00:16:20,399 --> 00:16:23,440
is a system on module a system on module

426
00:16:23,440 --> 00:16:26,000
means that there is various parts on top

427
00:16:26,000 --> 00:16:27,440
of the

428
00:16:27,440 --> 00:16:29,839
small pcb and here we can see if we

429
00:16:29,839 --> 00:16:32,639
remove the shield that there is like

430
00:16:32,639 --> 00:16:36,160
five or six components um there is the

431
00:16:36,160 --> 00:16:39,199
main cpu which is a qualcomm arm

432
00:16:39,199 --> 00:16:42,639
cortex a7 lte modem we have a power

433
00:16:42,639 --> 00:16:46,240
module a rfm purifier and some flash

434
00:16:46,240 --> 00:16:49,120
memory so

435
00:16:49,279 --> 00:16:51,040
normally the program the program should

436
00:16:51,040 --> 00:16:53,600
be in the flash memory so we'll uh just

437
00:16:53,600 --> 00:16:54,880
dump it

438
00:16:54,880 --> 00:16:57,199
so to dump the flash

439
00:16:57,199 --> 00:16:58,880
we unsolder the

440
00:16:58,880 --> 00:17:01,600
the flash from the board

441
00:17:01,600 --> 00:17:03,680
however we cannot use a heat plate like

442
00:17:03,680 --> 00:17:07,439
we can use we do usually so you can use

443
00:17:07,439 --> 00:17:09,760
also a heat gun to do that however you

444
00:17:09,760 --> 00:17:11,280
need to be careful especially if you

445
00:17:11,280 --> 00:17:13,839
want to resolder back the flash after

446
00:17:13,839 --> 00:17:15,439
manipulating it

447
00:17:15,439 --> 00:17:17,919
since you will have small resistance and

448
00:17:17,919 --> 00:17:20,880
small components that can move with the

449
00:17:20,880 --> 00:17:23,039
with the heat gun

450
00:17:23,039 --> 00:17:24,740
then you use a

451
00:17:24,740 --> 00:17:26,319
[Music]

452
00:17:26,319 --> 00:17:29,200
programmer to dump the content so there

453
00:17:29,200 --> 00:17:31,520
are fewer alternatives that you that you

454
00:17:31,520 --> 00:17:32,400
can use

455
00:17:32,400 --> 00:17:34,480
you need to use the correct adapter with

456
00:17:34,480 --> 00:17:36,240
the correct programmer and you can dump

457
00:17:36,240 --> 00:17:38,240
the content

458
00:17:38,240 --> 00:17:41,360
so next we have a huge blob of binary

459
00:17:41,360 --> 00:17:43,039
we're on build work on the binary and

460
00:17:43,039 --> 00:17:45,760
what we can observe is that this

461
00:17:45,760 --> 00:17:48,480
specific device is based on qualcomm

462
00:17:48,480 --> 00:17:51,200
embedded file system 2.

463
00:17:51,200 --> 00:17:53,919
turns out that binoa cannot parse nor

464
00:17:53,919 --> 00:17:56,240
extract fs2 files

465
00:17:56,240 --> 00:17:59,120
so this sucks

466
00:17:59,120 --> 00:18:01,360
no tools available so

467
00:18:01,360 --> 00:18:03,200
let's do our own

468
00:18:03,200 --> 00:18:05,520
so when you want to start uh

469
00:18:05,520 --> 00:18:08,160
on this um on this this thing you need

470
00:18:08,160 --> 00:18:10,960
to understand the flash layout

471
00:18:10,960 --> 00:18:12,160
so how it's

472
00:18:12,160 --> 00:18:13,760
basically how the blocks are organized

473
00:18:13,760 --> 00:18:15,760
et cetera so you identify by blocks you

474
00:18:15,760 --> 00:18:18,000
remove them you apply error correction

475
00:18:18,000 --> 00:18:20,720
if it's needed and then you get

476
00:18:20,720 --> 00:18:24,080
the useful part of the flash

477
00:18:24,080 --> 00:18:26,960
next you can seek for a valid partition

478
00:18:26,960 --> 00:18:28,720
table inside the dump so there is a

479
00:18:28,720 --> 00:18:30,080
magic for that

480
00:18:30,080 --> 00:18:32,240
you extract each partition to individual

481
00:18:32,240 --> 00:18:35,440
file and your result is the following so

482
00:18:35,440 --> 00:18:37,120
you can see on the right side there are

483
00:18:37,120 --> 00:18:39,760
many partitions and there are two that

484
00:18:39,760 --> 00:18:42,400
are based on office 2 which is quite

485
00:18:42,400 --> 00:18:44,240
interesting because this is what we want

486
00:18:44,240 --> 00:18:45,679
so we extract this partition to

487
00:18:45,679 --> 00:18:48,720
individual file

488
00:18:48,720 --> 00:18:50,480
and we need to pass the file system that

489
00:18:50,480 --> 00:18:51,520
is on top of

490
00:18:51,520 --> 00:18:53,840
of it unfortunately the there is no

491
00:18:53,840 --> 00:18:55,520
public information you need to have a

492
00:18:55,520 --> 00:18:56,400
qualcomm

493
00:18:56,400 --> 00:18:59,440
account you need to have whatever nda

494
00:18:59,440 --> 00:19:00,460
signed with them

495
00:19:00,460 --> 00:19:01,760
[Music]

496
00:19:01,760 --> 00:19:03,520
but we found some leaked

497
00:19:03,520 --> 00:19:05,840
qualcomm source code on the internet

498
00:19:05,840 --> 00:19:08,160
somebody did some backup which is quite

499
00:19:08,160 --> 00:19:10,160
convenient

500
00:19:10,160 --> 00:19:11,760
and then

501
00:19:11,760 --> 00:19:13,520
you need to understand the structure so

502
00:19:13,520 --> 00:19:16,160
basically you look for super blocks

503
00:19:16,160 --> 00:19:18,400
then you use the most recent super block

504
00:19:18,400 --> 00:19:20,400
you iterate over the page table that is

505
00:19:20,400 --> 00:19:22,480
referenced in this super block and you

506
00:19:22,480 --> 00:19:24,880
pass the all the inodes and you

507
00:19:24,880 --> 00:19:26,960
reconstruct the db3 and at the end you

508
00:19:26,960 --> 00:19:29,840
can get your files back from it

509
00:19:29,840 --> 00:19:32,240
so here is a little demo

510
00:19:32,240 --> 00:19:35,120
uh here i provide the binary so the

511
00:19:35,120 --> 00:19:36,559
flash binary

512
00:19:36,559 --> 00:19:38,640
inside i put the correct layout and we

513
00:19:38,640 --> 00:19:41,039
can see that all the partitions were

514
00:19:41,039 --> 00:19:43,360
extracted to a single file and then we

515
00:19:43,360 --> 00:19:45,919
use the efs2

516
00:19:45,919 --> 00:19:47,120
files

517
00:19:47,120 --> 00:19:50,080
partition and extract it so reconstruct

518
00:19:50,080 --> 00:19:52,160
the directories and extract it to a zip

519
00:19:52,160 --> 00:19:53,760
file

520
00:19:53,760 --> 00:19:55,280
this is available on the github

521
00:19:55,280 --> 00:19:57,840
repository at the bottom of the slide

522
00:19:57,840 --> 00:20:00,160
so if you want to have a look or improve

523
00:20:00,160 --> 00:20:01,919
the tool it's working for files and

524
00:20:01,919 --> 00:20:03,919
directories but there are many corner

525
00:20:03,919 --> 00:20:06,480
case maybe the needs still need to be to

526
00:20:06,480 --> 00:20:08,720
be investigated

527
00:20:08,720 --> 00:20:10,480
there are other ways to

528
00:20:10,480 --> 00:20:13,840
dump the content of the module you

529
00:20:13,840 --> 00:20:15,840
remember the usb port on the side of the

530
00:20:15,840 --> 00:20:18,799
pcb so if you connect it to

531
00:20:18,799 --> 00:20:20,880
to a computer basically what you will

532
00:20:20,880 --> 00:20:21,600
see

533
00:20:21,600 --> 00:20:23,039
is a

534
00:20:23,039 --> 00:20:26,080
unknown interface if if you search for

535
00:20:26,080 --> 00:20:27,840
the correct drivers then you will end up

536
00:20:27,840 --> 00:20:28,720
with

537
00:20:28,720 --> 00:20:31,280
those three interfaces so there is the

538
00:20:31,280 --> 00:20:34,080
modem which can accept 80 command

539
00:20:34,080 --> 00:20:35,600
standard one

540
00:20:35,600 --> 00:20:38,320
you have an emea for getting the gps

541
00:20:38,320 --> 00:20:40,080
data out of the

542
00:20:40,080 --> 00:20:41,760
out of the module and you have a

543
00:20:41,760 --> 00:20:44,720
diagnostic port

544
00:20:44,720 --> 00:20:46,880
if you use tools such as

545
00:20:46,880 --> 00:20:48,799
qpst or

546
00:20:48,799 --> 00:20:51,120
fs explorer you can get the files

547
00:20:51,120 --> 00:20:53,600
however you can see on the right side

548
00:20:53,600 --> 00:20:56,320
there is some introduction sign

549
00:20:56,320 --> 00:20:59,440
on the afs private on the top so you

550
00:20:59,440 --> 00:21:02,080
won't get the files that are in there or

551
00:21:02,080 --> 00:21:04,000
are are hidden

552
00:21:04,000 --> 00:21:05,679
inside the file system this is why the

553
00:21:05,679 --> 00:21:08,080
first version is maybe more convenient

554
00:21:08,080 --> 00:21:09,520
because if you want to

555
00:21:09,520 --> 00:21:11,440
start digging or modifying some part of

556
00:21:11,440 --> 00:21:13,600
the file system that is not public then

557
00:21:13,600 --> 00:21:16,480
you can do it

558
00:21:16,480 --> 00:21:18,960
in the end we end up with

559
00:21:18,960 --> 00:21:21,600
those main files i didn't listed all of

560
00:21:21,600 --> 00:21:24,000
them but those main files so we have a

561
00:21:24,000 --> 00:21:27,280
custom.bin it's a basically probably

562
00:21:27,280 --> 00:21:29,919
custom application binary

563
00:21:29,919 --> 00:21:33,200
we have omp path dot ini which is

564
00:21:33,200 --> 00:21:34,799
basically a text file which points to

565
00:21:34,799 --> 00:21:36,640
the custom.bin

566
00:21:36,640 --> 00:21:39,360
and then we have a q dot bin which i

567
00:21:39,360 --> 00:21:41,039
think it's a temporary storage for

568
00:21:41,039 --> 00:21:43,760
pending messages for instance

569
00:21:43,760 --> 00:21:47,200
and you have some configuration

570
00:21:47,200 --> 00:21:49,919
for the default and user configuration

571
00:21:49,919 --> 00:21:51,280
what i guess

572
00:21:51,280 --> 00:21:52,960
at this stage

573
00:21:52,960 --> 00:21:54,799
so if we look the

574
00:21:54,799 --> 00:21:56,799
the binary format is not something that

575
00:21:56,799 --> 00:21:57,840
is uh

576
00:21:57,840 --> 00:21:59,600
it is really known

577
00:21:59,600 --> 00:22:02,559
um we know it's uh by looking later on

578
00:22:02,559 --> 00:22:04,400
the file that there are some arming

579
00:22:04,400 --> 00:22:05,600
instruction

580
00:22:05,600 --> 00:22:06,799
so okay

581
00:22:06,799 --> 00:22:09,440
but we don't know how to load it or how

582
00:22:09,440 --> 00:22:11,520
to start properly to analyze it so we

583
00:22:11,520 --> 00:22:12,640
need to

584
00:22:12,640 --> 00:22:15,120
understand what type of uh

585
00:22:15,120 --> 00:22:17,200
binary it is so

586
00:22:17,200 --> 00:22:17,919
we

587
00:22:17,919 --> 00:22:19,760
turned back binworld can have the

588
00:22:19,760 --> 00:22:22,159
starter banner which can help

589
00:22:22,159 --> 00:22:24,159
and this is what we see so

590
00:22:24,159 --> 00:22:27,120
we see that the device might be based on

591
00:22:27,120 --> 00:22:28,480
something

592
00:22:28,480 --> 00:22:31,360
called fredex express logic

593
00:22:31,360 --> 00:22:32,880
so

594
00:22:32,880 --> 00:22:35,200
let's google that and see what's what it

595
00:22:35,200 --> 00:22:37,039
is so

596
00:22:37,039 --> 00:22:38,720
we find out that

597
00:22:38,720 --> 00:22:41,120
in fact fredex is a real-time operating

598
00:22:41,120 --> 00:22:43,520
system designed for embedded systems it

599
00:22:43,520 --> 00:22:45,679
was known previously as express logic

600
00:22:45,679 --> 00:22:48,880
was bought by microsoft in 2019

601
00:22:48,880 --> 00:22:53,200
and was rebranded to azure rtos freddix

602
00:22:53,200 --> 00:22:56,880
nice this rtos supports two mode there

603
00:22:56,880 --> 00:23:00,000
is the command mode so standard rtos

604
00:23:00,000 --> 00:23:01,919
with thread management synchronization

605
00:23:01,919 --> 00:23:04,880
etc etc and there is another

606
00:23:04,880 --> 00:23:07,440
mode which is more interesting

607
00:23:07,440 --> 00:23:10,799
which allows you to load and unload

608
00:23:10,799 --> 00:23:12,640
modules

609
00:23:12,640 --> 00:23:15,200
on the fly

610
00:23:15,440 --> 00:23:18,400
so what it is those modules is basically

611
00:23:18,400 --> 00:23:21,440
you have a kernel extension

612
00:23:21,440 --> 00:23:24,880
which allows you to load and start

613
00:23:24,880 --> 00:23:26,320
each

614
00:23:26,320 --> 00:23:28,799
modules that you will put so each module

615
00:23:28,799 --> 00:23:31,840
then has its own memory area

616
00:23:31,840 --> 00:23:34,159
and every interaction with the kernel

617
00:23:34,159 --> 00:23:36,400
such as opening the socket or doing

618
00:23:36,400 --> 00:23:39,440
other things is done through um

619
00:23:39,440 --> 00:23:41,279
predefined

620
00:23:41,279 --> 00:23:42,720
requests

621
00:23:42,720 --> 00:23:45,520
via dispatch function and it's quite not

622
00:23:45,520 --> 00:23:47,919
easy to to understand at first

623
00:23:47,919 --> 00:23:48,880
so

624
00:23:48,880 --> 00:23:51,840
if we look at the module spramble

625
00:23:51,840 --> 00:23:54,320
it says or the documentation says that

626
00:23:54,320 --> 00:23:56,480
the module needs to

627
00:23:56,480 --> 00:23:59,200
define its own entry function its own

628
00:23:59,200 --> 00:24:02,559
memory area its stack size and the

629
00:24:02,559 --> 00:24:04,640
priority of the thread that will be

630
00:24:04,640 --> 00:24:07,360
launched so if we analyze the complete

631
00:24:07,360 --> 00:24:10,400
header this is what we end up with

632
00:24:10,400 --> 00:24:11,200
so

633
00:24:11,200 --> 00:24:13,360
we have a magic we have some

634
00:24:13,360 --> 00:24:14,880
entry functions

635
00:24:14,880 --> 00:24:17,520
and the one which is the main

636
00:24:17,520 --> 00:24:21,120
one of our monitor is the one in green

637
00:24:21,120 --> 00:24:22,720
which i named wildcat because the

638
00:24:22,720 --> 00:24:25,200
product is named wildcat

639
00:24:25,200 --> 00:24:26,480
and on the

640
00:24:26,480 --> 00:24:30,320
bottom you can see in orange the various

641
00:24:30,320 --> 00:24:31,360
various

642
00:24:31,360 --> 00:24:34,240
address and length which allows you

643
00:24:34,240 --> 00:24:36,880
which will allow you to reconstruct the

644
00:24:36,880 --> 00:24:38,880
memory mapping for the specific type of

645
00:24:38,880 --> 00:24:41,360
binary

646
00:24:41,679 --> 00:24:44,159
so i did a small python loader script

647
00:24:44,159 --> 00:24:45,600
where you need to

648
00:24:45,600 --> 00:24:47,279
just to

649
00:24:47,279 --> 00:24:49,360
point to the file that you want to load

650
00:24:49,360 --> 00:24:50,799
and then you can start reverse

651
00:24:50,799 --> 00:24:52,720
engineering

652
00:24:52,720 --> 00:24:55,279
the whole binary and here you can see on

653
00:24:55,279 --> 00:24:58,080
the screenshot there is

654
00:24:58,080 --> 00:25:00,240
the starter banner that we saw before so

655
00:25:00,240 --> 00:25:02,320
we can see wildcat we can see takes

656
00:25:02,320 --> 00:25:04,640
thread create etc so you can start

657
00:25:04,640 --> 00:25:07,440
reversing the the whole binary from this

658
00:25:07,440 --> 00:25:08,960
point

659
00:25:08,960 --> 00:25:11,919
you can also use a function id database

660
00:25:11,919 --> 00:25:13,760
which is quite convenient to identify

661
00:25:13,760 --> 00:25:16,720
some functions predefined functions

662
00:25:16,720 --> 00:25:20,240
i did it by compiling all the example um

663
00:25:20,240 --> 00:25:23,120
in the cactel sdk or keck open which is

664
00:25:23,120 --> 00:25:25,919
an alternative available on

665
00:25:25,919 --> 00:25:28,400
on the github repository

666
00:25:28,400 --> 00:25:31,600
so now that we have the module analyzed

667
00:25:31,600 --> 00:25:32,720
we can

668
00:25:32,720 --> 00:25:34,799
know pretty much what's going on on the

669
00:25:34,799 --> 00:25:37,279
startup so we look each of the message

670
00:25:37,279 --> 00:25:40,480
and we start looking what's going on in

671
00:25:40,480 --> 00:25:43,679
the in the in the startup

672
00:25:43,679 --> 00:25:44,880
routine

673
00:25:44,880 --> 00:25:46,880
so you can see the

674
00:25:46,880 --> 00:25:49,440
i listed just the interesting one you

675
00:25:49,440 --> 00:25:51,440
have a product and the product is only

676
00:25:51,440 --> 00:25:53,919
incising some memory

677
00:25:53,919 --> 00:25:57,919
it's also configuring some leds gpios

678
00:25:57,919 --> 00:26:00,320
and starts something interesting is the

679
00:26:00,320 --> 00:26:02,640
uh known as a attic command handler

680
00:26:02,640 --> 00:26:03,760
which is

681
00:26:03,760 --> 00:26:05,600
acronym is atc

682
00:26:05,600 --> 00:26:07,840
on a uart interface and this uart

683
00:26:07,840 --> 00:26:08,960
interface

684
00:26:08,960 --> 00:26:11,120
is the same as the one that we see on

685
00:26:11,120 --> 00:26:12,559
the right side

686
00:26:12,559 --> 00:26:14,320
quite interesting

687
00:26:14,320 --> 00:26:16,240
and then if we go deeper

688
00:26:16,240 --> 00:26:19,600
we see that there is a mnt init

689
00:26:19,600 --> 00:26:21,600
function which loads the configuration

690
00:26:21,600 --> 00:26:23,520
files which we didn't look have a look

691
00:26:23,520 --> 00:26:24,960
on yet

692
00:26:24,960 --> 00:26:27,279
and send their content over this uart

693
00:26:27,279 --> 00:26:29,200
interface

694
00:26:29,200 --> 00:26:30,159
and then

695
00:26:30,159 --> 00:26:32,159
when the program is loaded we can see

696
00:26:32,159 --> 00:26:34,320
that it waits for the network to be

697
00:26:34,320 --> 00:26:37,520
registered and start some udp socket in

698
00:26:37,520 --> 00:26:38,880
listening mode

699
00:26:38,880 --> 00:26:41,440
as well are reading the sms contents and

700
00:26:41,440 --> 00:26:43,279
injecting it to the attic command

701
00:26:43,279 --> 00:26:45,760
handler

702
00:26:45,760 --> 00:26:46,640
so

703
00:26:46,640 --> 00:26:48,960
if we look at the configuration file we

704
00:26:48,960 --> 00:26:51,760
can see that it's the one the file the

705
00:26:51,760 --> 00:26:53,440
the commands

706
00:26:53,440 --> 00:26:54,960
that were

707
00:26:54,960 --> 00:26:57,679
listed in the user manual which are the

708
00:26:57,679 --> 00:27:00,240
extend command for the device

709
00:27:00,240 --> 00:27:02,799
so on the right side we can see the ip

710
00:27:02,799 --> 00:27:05,279
address which the device will send his

711
00:27:05,279 --> 00:27:07,200
event to

712
00:27:07,200 --> 00:27:09,120
and some other

713
00:27:09,120 --> 00:27:10,320
other things

714
00:27:10,320 --> 00:27:12,640
this is all stored in a huge structure

715
00:27:12,640 --> 00:27:13,279
in

716
00:27:13,279 --> 00:27:14,720
in the binary

717
00:27:14,720 --> 00:27:15,919
but

718
00:27:15,919 --> 00:27:17,919
it's useful to get the list of supported

719
00:27:17,919 --> 00:27:19,600
commands since all the commands are

720
00:27:19,600 --> 00:27:21,840
defined in the program

721
00:27:21,840 --> 00:27:24,240
so here just an example

722
00:27:24,240 --> 00:27:26,320
on the left side you have the command

723
00:27:26,320 --> 00:27:28,640
which is in that

724
00:27:28,640 --> 00:27:30,480
we will see later what it is

725
00:27:30,480 --> 00:27:34,240
but the corresponding function will list

726
00:27:34,240 --> 00:27:35,919
some information about the device such

727
00:27:35,919 --> 00:27:36,880
as

728
00:27:36,880 --> 00:27:42,000
sms out in spam et cetera et cetera

729
00:27:42,320 --> 00:27:44,720
after googling a while i found other

730
00:27:44,720 --> 00:27:46,640
documents and this is why it's important

731
00:27:46,640 --> 00:27:49,200
to not only have a look on the model the

732
00:27:49,200 --> 00:27:51,440
specific model that you are looking at

733
00:27:51,440 --> 00:27:53,679
but also to look at the manufacturer

734
00:27:53,679 --> 00:27:55,039
because you can find some useful

735
00:27:55,039 --> 00:27:56,799
information and for instance for this

736
00:27:56,799 --> 00:27:59,520
specific device i found

737
00:27:59,520 --> 00:28:02,960
another document which had many commands

738
00:28:02,960 --> 00:28:05,279
documented so it was the same look and

739
00:28:05,279 --> 00:28:08,159
feel the same user manual but with more

740
00:28:08,159 --> 00:28:10,240
information in it so it's quite

741
00:28:10,240 --> 00:28:12,720
convenient because right now instead of

742
00:28:12,720 --> 00:28:15,200
reversing the whole thing i can just

743
00:28:15,200 --> 00:28:16,960
have a look and have a quick description

744
00:28:16,960 --> 00:28:18,720
of the function

745
00:28:18,720 --> 00:28:21,440
so i listed several of them uh we can

746
00:28:21,440 --> 00:28:23,440
see there there is a function that

747
00:28:23,440 --> 00:28:25,279
allows for instance to retrieve

748
00:28:25,279 --> 00:28:27,840
information but there are also in other

749
00:28:27,840 --> 00:28:28,799
func

750
00:28:28,799 --> 00:28:31,840
other commands that allows you to debug

751
00:28:31,840 --> 00:28:33,600
change the debug level

752
00:28:33,600 --> 00:28:36,159
change the or trigger a report so the

753
00:28:36,159 --> 00:28:38,159
device will send the report back to the

754
00:28:38,159 --> 00:28:39,310
to the server

755
00:28:39,310 --> 00:28:41,600
[Music]

756
00:28:41,600 --> 00:28:44,640
so when we tried this on

757
00:28:44,640 --> 00:28:46,720
the interface that we think that

758
00:28:46,720 --> 00:28:48,960
might be uh good we can see that

759
00:28:48,960 --> 00:28:51,120
if we send normal at command for

760
00:28:51,120 --> 00:28:52,880
instance for the modem interface it will

761
00:28:52,880 --> 00:28:55,279
work right away no worries

762
00:28:55,279 --> 00:28:57,679
but if we attempt to send a

763
00:28:57,679 --> 00:29:00,080
command extend command we end up in a

764
00:29:00,080 --> 00:29:01,760
with an error

765
00:29:01,760 --> 00:29:04,080
however if you do it on the application

766
00:29:04,080 --> 00:29:06,240
interface so the other uart that i

767
00:29:06,240 --> 00:29:08,480
mentioned before we can see that the

768
00:29:08,480 --> 00:29:11,600
device answers so we if we send 80 it

769
00:29:11,600 --> 00:29:14,480
will send out okay with its serial

770
00:29:14,480 --> 00:29:15,440
number

771
00:29:15,440 --> 00:29:17,600
if we put 80 plus

772
00:29:17,600 --> 00:29:20,080
plus xip which

773
00:29:20,080 --> 00:29:22,240
is the ip of the server we get back the

774
00:29:22,240 --> 00:29:25,200
server ip address and the port number

775
00:29:25,200 --> 00:29:26,799
and the serial number and the command

776
00:29:26,799 --> 00:29:29,360
that was passed

777
00:29:29,360 --> 00:29:30,880
so it's good

778
00:29:30,880 --> 00:29:32,480
from a hardware point of view there is

779
00:29:32,480 --> 00:29:34,799
no security controls no mitigation

780
00:29:34,799 --> 00:29:36,960
nothing so

781
00:29:36,960 --> 00:29:39,200
it's good but it's still limited to one

782
00:29:39,200 --> 00:29:42,240
device i have only one single device and

783
00:29:42,240 --> 00:29:44,960
i cannot do much without uh

784
00:29:44,960 --> 00:29:47,760
opening a car uh at some one location

785
00:29:47,760 --> 00:29:50,320
and maybe i'm lucky and there is this

786
00:29:50,320 --> 00:29:52,159
same tracker and i can do something cool

787
00:29:52,159 --> 00:29:54,880
with it like replacing the firmware or

788
00:29:54,880 --> 00:29:58,399
or changing some configuration settings

789
00:29:58,399 --> 00:30:00,799
so now the question is would it be

790
00:30:00,799 --> 00:30:04,240
possible to do something remotely

791
00:30:04,240 --> 00:30:05,440
so for this

792
00:30:05,440 --> 00:30:07,120
at work we have a base station that is

793
00:30:07,120 --> 00:30:09,440
able to handle 4g network

794
00:30:09,440 --> 00:30:11,760
we connect the tracker to this control

795
00:30:11,760 --> 00:30:14,480
base station and we will attempt to see

796
00:30:14,480 --> 00:30:17,520
if we can identify the udp sockets that

797
00:30:17,520 --> 00:30:18,640
are open

798
00:30:18,640 --> 00:30:20,559
at startup

799
00:30:20,559 --> 00:30:22,799
for this we need to change the debug

800
00:30:22,799 --> 00:30:25,679
level to the correct one so by reverse

801
00:30:25,679 --> 00:30:28,720
engineer you can see that it's a 80 plus

802
00:30:28,720 --> 00:30:31,039
xdbg16

803
00:30:31,039 --> 00:30:32,399
and

804
00:30:32,399 --> 00:30:33,679
we will start

805
00:30:33,679 --> 00:30:36,399
scanning the target device with a simple

806
00:30:36,399 --> 00:30:41,039
bash one liner which will just send the

807
00:30:41,039 --> 00:30:42,399
the ports

808
00:30:42,399 --> 00:30:44,240
to the device so that i can know which

809
00:30:44,240 --> 00:30:46,320
port is actually open because since it's

810
00:30:46,320 --> 00:30:48,480
udp there is no session so i cannot know

811
00:30:48,480 --> 00:30:52,159
if the device received the packet or not

812
00:30:52,159 --> 00:30:54,240
and this is what it looks like so it

813
00:30:54,240 --> 00:30:55,760
seems like there is

814
00:30:55,760 --> 00:30:58,559
at least three different ports

815
00:30:58,559 --> 00:31:00,720
listening for

816
00:31:00,720 --> 00:31:02,880
some reasons

817
00:31:02,880 --> 00:31:04,480
we can see as well that

818
00:31:04,480 --> 00:31:06,320
the network ip address is not the one

819
00:31:06,320 --> 00:31:07,600
that i had

820
00:31:07,600 --> 00:31:10,399
this is the ip address that the that is

821
00:31:10,399 --> 00:31:12,640
are coded in the configuration file and

822
00:31:12,640 --> 00:31:15,039
that the device thinks that the remote

823
00:31:15,039 --> 00:31:17,120
server sends

824
00:31:17,120 --> 00:31:20,719
uh command to him so

825
00:31:22,080 --> 00:31:24,240
if we send if we attempt to send an itty

826
00:31:24,240 --> 00:31:27,039
command instead of the port number

827
00:31:27,039 --> 00:31:30,000
we can see the device will answer to us

828
00:31:30,000 --> 00:31:31,600
so this means that

829
00:31:31,600 --> 00:31:32,880
i can

830
00:31:32,880 --> 00:31:36,080
send arbitrary 80 extended command as

831
00:31:36,080 --> 00:31:37,760
well on this port

832
00:31:37,760 --> 00:31:39,840
locally if i'm on the same network as

833
00:31:39,840 --> 00:31:41,360
the device

834
00:31:41,360 --> 00:31:42,960
it's pretty good

835
00:31:42,960 --> 00:31:44,640
we can reconfigure the device we can

836
00:31:44,640 --> 00:31:47,120
change settings etc

837
00:31:47,120 --> 00:31:48,159
however

838
00:31:48,159 --> 00:31:50,799
it's quite annoying because

839
00:31:50,799 --> 00:31:53,200
since the device is

840
00:31:53,200 --> 00:31:55,919
behind the nut basically you cannot

841
00:31:55,919 --> 00:31:58,320
access it easily it's like your router

842
00:31:58,320 --> 00:32:00,320
at home or pc at home you cannot access

843
00:32:00,320 --> 00:32:02,559
it from remote unless you open a port or

844
00:32:02,559 --> 00:32:03,760
something

845
00:32:03,760 --> 00:32:05,919
here it's the same case plus there are

846
00:32:05,919 --> 00:32:07,740
some other things that can

847
00:32:07,740 --> 00:32:09,360
[Music]

848
00:32:09,360 --> 00:32:11,840
should be taken in considerations like

849
00:32:11,840 --> 00:32:14,320
the device can be in a specific apn so

850
00:32:14,320 --> 00:32:16,320
it's like a i would say the valence of

851
00:32:16,320 --> 00:32:19,360
the network i would say on a mobile

852
00:32:19,360 --> 00:32:21,519
uh there can be network isolation

853
00:32:21,519 --> 00:32:23,840
between device um

854
00:32:23,840 --> 00:32:26,559
there can be other mechanisms

855
00:32:26,559 --> 00:32:28,720
in place and especially you cannot spoof

856
00:32:28,720 --> 00:32:30,240
udp it's not

857
00:32:30,240 --> 00:32:32,640
something that you can do

858
00:32:32,640 --> 00:32:35,760
easily on on the internet

859
00:32:35,760 --> 00:32:36,559
so

860
00:32:36,559 --> 00:32:38,159
the question is how to scale the attack

861
00:32:38,159 --> 00:32:40,799
to more device

862
00:32:40,799 --> 00:32:41,679
so

863
00:32:41,679 --> 00:32:45,840
we can use sms as we could see before so

864
00:32:45,840 --> 00:32:49,440
let's try to send an sms and identify

865
00:32:49,440 --> 00:32:51,519
potential targets

866
00:32:51,519 --> 00:32:53,120
so first we need to identify the phone

867
00:32:53,120 --> 00:32:55,919
number this is quite easy to do we have

868
00:32:55,919 --> 00:32:59,039
a modem interface so we just send

869
00:32:59,039 --> 00:33:01,679
this command and we get the phone number

870
00:33:01,679 --> 00:33:04,559
for those who are not uh very confident

871
00:33:04,559 --> 00:33:06,480
with this you can also insert the sim

872
00:33:06,480 --> 00:33:08,080
card in your phone and you will get the

873
00:33:08,080 --> 00:33:11,559
number as well

874
00:33:13,440 --> 00:33:15,679
so

875
00:33:16,399 --> 00:33:17,760
i made an

876
00:33:17,760 --> 00:33:20,000
assumption that providers tends to

877
00:33:20,000 --> 00:33:22,399
allocate the

878
00:33:22,399 --> 00:33:24,399
phone numbers in continuous range

879
00:33:24,399 --> 00:33:27,200
because there is a lot of device so

880
00:33:27,200 --> 00:33:30,320
my assumption was to to think that each

881
00:33:30,320 --> 00:33:33,120
number was assigned sequentially or in

882
00:33:33,120 --> 00:33:34,559
the same range

883
00:33:34,559 --> 00:33:37,039
so i decided to query surrounding phone

884
00:33:37,039 --> 00:33:38,559
numbers

885
00:33:38,559 --> 00:33:40,880
and when i did that

886
00:33:40,880 --> 00:33:43,519
i got some answers like we can see on

887
00:33:43,519 --> 00:33:46,159
the right which was not from my device

888
00:33:46,159 --> 00:33:49,039
and for this i used trilo then to

889
00:33:49,039 --> 00:33:51,279
automate a bit more the things which

890
00:33:51,279 --> 00:33:53,039
twilo is a platform that allows you to

891
00:33:53,039 --> 00:33:56,399
send sms it's useful for marketing mfa

892
00:33:56,399 --> 00:33:58,159
and other things

893
00:33:58,159 --> 00:33:59,200
and

894
00:33:59,200 --> 00:34:01,440
what is pretty convenient is that i can

895
00:34:01,440 --> 00:34:03,919
get a us number as well so

896
00:34:03,919 --> 00:34:05,519
this is what i did

897
00:34:05,519 --> 00:34:06,799
i got a

898
00:34:06,799 --> 00:34:10,239
good success rate of 65 percent

899
00:34:10,239 --> 00:34:11,359
um

900
00:34:11,359 --> 00:34:13,760
and i have to warn you because you need

901
00:34:13,760 --> 00:34:16,000
to aggressively rate limit if you do

902
00:34:16,000 --> 00:34:17,679
such things because you will get in

903
00:34:17,679 --> 00:34:19,679
trouble

904
00:34:19,679 --> 00:34:22,960
so i got a notification from twilo that

905
00:34:22,960 --> 00:34:23,918
uh

906
00:34:23,918 --> 00:34:27,359
i i got a little bit too far uh and this

907
00:34:27,359 --> 00:34:29,918
responded my account so

908
00:34:29,918 --> 00:34:32,159
i was not doing something very

909
00:34:32,159 --> 00:34:33,199
let's say

910
00:34:33,199 --> 00:34:36,320
um not good so i was just trying to

911
00:34:36,320 --> 00:34:38,159
automate the things a little bit more

912
00:34:38,159 --> 00:34:40,159
easily and

913
00:34:40,159 --> 00:34:42,480
i i lost the game

914
00:34:42,480 --> 00:34:44,719
so now we see that we receive the same

915
00:34:44,719 --> 00:34:46,320
command back

916
00:34:46,320 --> 00:34:48,879
as before but via sms so now the

917
00:34:48,879 --> 00:34:50,639
question is that it it

918
00:34:50,639 --> 00:34:52,800
will it work with extended command as

919
00:34:52,800 --> 00:34:53,839
well

920
00:34:53,839 --> 00:34:56,000
and it turns that

921
00:34:56,000 --> 00:34:59,200
it turns out that yes so you can query

922
00:34:59,200 --> 00:35:00,960
you can see the commands that i listed

923
00:35:00,960 --> 00:35:03,200
before like the x in date

924
00:35:03,200 --> 00:35:05,119
which you can get some data out of the

925
00:35:05,119 --> 00:35:07,839
device and uh you can also query for its

926
00:35:07,839 --> 00:35:10,320
local ip which could be used

927
00:35:10,320 --> 00:35:12,640
for if you gain access to this network

928
00:35:12,640 --> 00:35:13,839
at least you can

929
00:35:13,839 --> 00:35:15,680
you can know if it's the same device you

930
00:35:15,680 --> 00:35:18,320
are targeting or things like that

931
00:35:18,320 --> 00:35:20,400
what's fun is that there is a specific

932
00:35:20,400 --> 00:35:23,359
command as well to track people remotely

933
00:35:23,359 --> 00:35:24,640
via sms

934
00:35:24,640 --> 00:35:27,119
so you can query the device location so

935
00:35:27,119 --> 00:35:29,200
i did the exercise by sending one

936
00:35:29,200 --> 00:35:31,200
message and five minutes after i sent

937
00:35:31,200 --> 00:35:32,640
another message

938
00:35:32,640 --> 00:35:34,720
and i mapped it on google maps so that

939
00:35:34,720 --> 00:35:37,760
you can see easily where where it goes

940
00:35:37,760 --> 00:35:40,640
it's fun but it's noisy and i got

941
00:35:40,640 --> 00:35:42,880
already some problem with trilo so i

942
00:35:42,880 --> 00:35:44,720
don't want to

943
00:35:44,720 --> 00:35:47,040
to do more on this aspect so i had a

944
00:35:47,040 --> 00:35:51,280
look on the ip network traffic

945
00:35:51,280 --> 00:35:53,200
since we can change the configuration by

946
00:35:53,200 --> 00:35:55,680
sms it's still a valid use case because

947
00:35:55,680 --> 00:35:58,720
you can send an sms or configure the

948
00:35:58,720 --> 00:35:59,839
device

949
00:35:59,839 --> 00:36:02,160
and you can basically change the ip

950
00:36:02,160 --> 00:36:03,280
server

951
00:36:03,280 --> 00:36:06,000
to which device will send the data

952
00:36:06,000 --> 00:36:06,800
so

953
00:36:06,800 --> 00:36:08,960
i did it on my own device

954
00:36:08,960 --> 00:36:11,200
to be clear

955
00:36:11,200 --> 00:36:14,160
not want to get in trouble um and i just

956
00:36:14,160 --> 00:36:16,480
implemented the simple python script

957
00:36:16,480 --> 00:36:19,359
which will relay the communication back

958
00:36:19,359 --> 00:36:21,680
to the real server and if the server

959
00:36:21,680 --> 00:36:23,200
sends back something

960
00:36:23,200 --> 00:36:25,599
but it will be routed again to the

961
00:36:25,599 --> 00:36:28,320
device as well

962
00:36:29,680 --> 00:36:32,160
and no surprise again

963
00:36:32,160 --> 00:36:35,359
no encryption no authentication no

964
00:36:35,359 --> 00:36:38,320
nothing so basically the

965
00:36:38,320 --> 00:36:40,720
the the payload is simply a

966
00:36:40,720 --> 00:36:44,160
udp communication with raw hex bytes

967
00:36:44,160 --> 00:36:45,200
let's say

968
00:36:45,200 --> 00:36:46,240
um

969
00:36:46,240 --> 00:36:48,800
and by querying or monitoring for a few

970
00:36:48,800 --> 00:36:50,640
packets you can easily understand what

971
00:36:50,640 --> 00:36:51,359
is

972
00:36:51,359 --> 00:36:52,960
what field is which

973
00:36:52,960 --> 00:36:56,079
basically so i end up by parsing my own

974
00:36:56,079 --> 00:36:57,839
so

975
00:36:57,839 --> 00:36:59,920
i can retrieve those information such as

976
00:36:59,920 --> 00:37:02,560
the latitude longitude speed heading

977
00:37:02,560 --> 00:37:05,680
lock satellite whatever you want

978
00:37:05,680 --> 00:37:06,960
you need to understand the format and

979
00:37:06,960 --> 00:37:09,040
since we have the binary we can also

980
00:37:09,040 --> 00:37:10,720
go back to the to the reverse

981
00:37:10,720 --> 00:37:13,280
engineering and start understanding but

982
00:37:13,280 --> 00:37:15,599
this was done purely on looking the

983
00:37:15,599 --> 00:37:17,599
packets that were transitioning on the

984
00:37:17,599 --> 00:37:20,000
network

985
00:37:21,680 --> 00:37:22,400
it

986
00:37:22,400 --> 00:37:24,400
uh there is also some things is that the

987
00:37:24,400 --> 00:37:26,240
server sends back the

988
00:37:26,240 --> 00:37:28,640
name acknowledgement of the to the

989
00:37:28,640 --> 00:37:30,480
device when you receive a report or a

990
00:37:30,480 --> 00:37:31,520
command

991
00:37:31,520 --> 00:37:34,480
and this is a simple format

992
00:37:34,480 --> 00:37:36,720
it depends on the request that you sent

993
00:37:36,720 --> 00:37:39,839
depending uh if the frame is odd or even

994
00:37:39,839 --> 00:37:42,320
and you will have one or the other

995
00:37:42,320 --> 00:37:43,520
basically

996
00:37:43,520 --> 00:37:45,200
so i did um

997
00:37:45,200 --> 00:37:47,680
some investigation on

998
00:37:47,680 --> 00:37:50,560
what could be the data that i can get

999
00:37:50,560 --> 00:37:53,760
if i monitor myself for a week or or two

1000
00:37:53,760 --> 00:37:57,200
and it turns out that it's quite simple

1001
00:37:57,200 --> 00:38:00,400
you can see that i'm living in kuji in

1002
00:38:00,400 --> 00:38:02,000
the luzon era

1003
00:38:02,000 --> 00:38:05,200
and that i'm doing some hockey if you

1004
00:38:05,200 --> 00:38:07,680
want to to see the hobbies uh where i'm

1005
00:38:07,680 --> 00:38:10,320
going so on the sides here

1006
00:38:10,320 --> 00:38:12,480
you will see that it's mainly high ice

1007
00:38:12,480 --> 00:38:14,000
hole

1008
00:38:14,000 --> 00:38:16,800
so imagine doing that for thousands

1009
00:38:16,800 --> 00:38:18,960
people you just need to send one sms to

1010
00:38:18,960 --> 00:38:21,680
one device and you will get the data of

1011
00:38:21,680 --> 00:38:24,320
plenty of people basically

1012
00:38:24,320 --> 00:38:26,160
what is also interesting is that you can

1013
00:38:26,160 --> 00:38:28,240
fake the tracker position since

1014
00:38:28,240 --> 00:38:30,480
all the traffic is udp and it's the

1015
00:38:30,480 --> 00:38:32,560
format can be understand then i can send

1016
00:38:32,560 --> 00:38:34,240
back to the real server all the time the

1017
00:38:34,240 --> 00:38:36,000
same position and the car

1018
00:38:36,000 --> 00:38:37,520
basically won't move

1019
00:38:37,520 --> 00:38:38,400
um

1020
00:38:38,400 --> 00:38:41,839
since the packet is only authenticated i

1021
00:38:41,839 --> 00:38:46,000
would say um by this by the emea that

1022
00:38:46,000 --> 00:38:47,680
the device is sending

1023
00:38:47,680 --> 00:38:50,079
then you can fake as well a tracker that

1024
00:38:50,079 --> 00:38:52,480
doesn't go through your infrastructure

1025
00:38:52,480 --> 00:38:55,599
what prevents uh however to do that is

1026
00:38:55,599 --> 00:38:56,560
the

1027
00:38:56,560 --> 00:39:00,160
the sequence which is a two byte

1028
00:39:00,160 --> 00:39:02,720
value so you need to be at a higher

1029
00:39:02,720 --> 00:39:04,960
value than the device and then sends it

1030
00:39:04,960 --> 00:39:07,040
sends the

1031
00:39:07,040 --> 00:39:08,640
the events

1032
00:39:08,640 --> 00:39:11,280
always before the device sends its own

1033
00:39:11,280 --> 00:39:12,640
so

1034
00:39:12,640 --> 00:39:14,640
it's quite useful because you can then

1035
00:39:14,640 --> 00:39:16,400
trigger false alerts prevent the car

1036
00:39:16,400 --> 00:39:18,000
recovery

1037
00:39:18,000 --> 00:39:19,920
and what's i found out

1038
00:39:19,920 --> 00:39:21,839
lately is that after the transmission

1039
00:39:21,839 --> 00:39:23,680
the device will wait for the ack for a

1040
00:39:23,680 --> 00:39:25,520
certain amount of time

1041
00:39:25,520 --> 00:39:28,720
and it turns out that it accepts as well

1042
00:39:28,720 --> 00:39:30,240
80 commands so

1043
00:39:30,240 --> 00:39:32,079
this means that you can reconfigure if

1044
00:39:32,079 --> 00:39:33,760
you are in the money man in the middle

1045
00:39:33,760 --> 00:39:35,920
position you can as well reconfigure the

1046
00:39:35,920 --> 00:39:38,000
device for this channel so all it takes

1047
00:39:38,000 --> 00:39:40,480
is one sms to do that

1048
00:39:40,480 --> 00:39:43,839
which is quite convenient

1049
00:39:44,400 --> 00:39:46,400
the last use case that i have

1050
00:39:46,400 --> 00:39:49,920
which i talked about earlier is

1051
00:39:49,920 --> 00:39:52,320
the financing if the garage is also

1052
00:39:52,320 --> 00:39:55,599
financing your car

1053
00:39:55,760 --> 00:39:56,800
spiran

1054
00:39:56,800 --> 00:39:58,960
proposed such solution

1055
00:39:58,960 --> 00:40:01,520
um and you can see it's clearly written

1056
00:40:01,520 --> 00:40:04,079
that they want to maintain prop

1057
00:40:04,079 --> 00:40:06,079
payments and quickly recover a vehicle

1058
00:40:06,079 --> 00:40:07,359
when needed

1059
00:40:07,359 --> 00:40:08,160
so

1060
00:40:08,160 --> 00:40:10,960
how they do that because

1061
00:40:10,960 --> 00:40:12,640
they have probably the data to know

1062
00:40:12,640 --> 00:40:15,280
where the car is but how they can

1063
00:40:15,280 --> 00:40:16,800
basically

1064
00:40:16,800 --> 00:40:18,720
recover the car

1065
00:40:18,720 --> 00:40:20,240
they will chase you what what will

1066
00:40:20,240 --> 00:40:22,960
happen so it turns out that

1067
00:40:22,960 --> 00:40:25,599
they whenever they install such device

1068
00:40:25,599 --> 00:40:27,920
for this specific product they will add

1069
00:40:27,920 --> 00:40:30,800
some relay so you can see that um on the

1070
00:40:30,800 --> 00:40:32,480
right between the key and the starter

1071
00:40:32,480 --> 00:40:34,000
you will need to cut

1072
00:40:34,000 --> 00:40:35,200
the wire

1073
00:40:35,200 --> 00:40:37,200
put it on the relay and then you drive

1074
00:40:37,200 --> 00:40:40,960
the relay with a simple gpio

1075
00:40:42,079 --> 00:40:44,560
and this turns out to be configured

1076
00:40:44,560 --> 00:40:47,839
configurable remotely as well

1077
00:40:47,839 --> 00:40:48,640
so

1078
00:40:48,640 --> 00:40:51,119
via any means that i shot before

1079
00:40:51,119 --> 00:40:53,440
but sms is also fine so i will

1080
00:40:53,440 --> 00:40:55,760
demonstrate quickly how it works

1081
00:40:55,760 --> 00:40:58,400
it's a small video so here the relay is

1082
00:40:58,400 --> 00:41:01,359
not present i replaced it by a led which

1083
00:41:01,359 --> 00:41:03,280
is on the left

1084
00:41:03,280 --> 00:41:05,040
and you can see on the right side the

1085
00:41:05,040 --> 00:41:07,440
android screen where i sent a message so

1086
00:41:07,440 --> 00:41:09,200
the first i query the status of the

1087
00:41:09,200 --> 00:41:10,720
relay

1088
00:41:10,720 --> 00:41:13,359
the device censor me so the relay is not

1089
00:41:13,359 --> 00:41:14,560
not active

1090
00:41:14,560 --> 00:41:16,480
and then i will

1091
00:41:16,480 --> 00:41:18,720
enable the relay

1092
00:41:18,720 --> 00:41:22,160
and the led will lighten up

1093
00:41:22,160 --> 00:41:23,920
so this means basically that i can

1094
00:41:23,920 --> 00:41:27,520
prevent a car from starting remotely by

1095
00:41:27,520 --> 00:41:30,000
using a single sms

1096
00:41:30,000 --> 00:41:32,000
the only things that me that is missing

1097
00:41:32,000 --> 00:41:34,319
in this whole research is that i cannot

1098
00:41:34,319 --> 00:41:36,480
know basically which car i'm i'm

1099
00:41:36,480 --> 00:41:38,240
attacking

1100
00:41:38,240 --> 00:41:40,560
so this is why maybe we should do more

1101
00:41:40,560 --> 00:41:43,599
research on the the back end side but i

1102
00:41:43,599 --> 00:41:44,800
i did some

1103
00:41:44,800 --> 00:41:46,480
some some

1104
00:41:46,480 --> 00:41:48,319
some investigation and it looks like it

1105
00:41:48,319 --> 00:41:49,280
was

1106
00:41:49,280 --> 00:41:52,480
properly done so far

1107
00:41:53,760 --> 00:41:56,240
so conclusion because um we are good

1108
00:41:56,240 --> 00:41:57,119
guys

1109
00:41:57,119 --> 00:41:59,520
we did the responsible disclosure uh to

1110
00:41:59,520 --> 00:42:01,920
the company uh and since they didn't

1111
00:42:01,920 --> 00:42:04,400
have any security contact we sent a

1112
00:42:04,400 --> 00:42:07,119
bunch of emails to the sea levels

1113
00:42:07,119 --> 00:42:08,560
um

1114
00:42:08,560 --> 00:42:10,160
turns out it was really difficult

1115
00:42:10,160 --> 00:42:13,200
because first i sent a word document or

1116
00:42:13,200 --> 00:42:15,359
link and they complain about the format

1117
00:42:15,359 --> 00:42:17,920
so i needed to resend the document

1118
00:42:17,920 --> 00:42:20,000
differently a few times

1119
00:42:20,000 --> 00:42:23,040
and at some points they um

1120
00:42:23,040 --> 00:42:25,359
later on they uh

1121
00:42:25,359 --> 00:42:28,319
introduced uh a security contact for us

1122
00:42:28,319 --> 00:42:29,040
and

1123
00:42:29,040 --> 00:42:30,560
if you look at the

1124
00:42:30,560 --> 00:42:34,240
the linkadin um profile you can see that

1125
00:42:34,240 --> 00:42:37,520
it's he was hired uh

1126
00:42:37,520 --> 00:42:39,359
the same month so i don't know if there

1127
00:42:39,359 --> 00:42:43,359
is uh some coincidence there but

1128
00:42:43,359 --> 00:42:47,040
but well okay so in august after um

1129
00:42:47,040 --> 00:42:48,960
asking many time to have a meeting with

1130
00:42:48,960 --> 00:42:51,440
them uh and they they were in trouble

1131
00:42:51,440 --> 00:42:53,920
getting emails back to us it was really

1132
00:42:53,920 --> 00:42:55,760
really difficult for them to get emails

1133
00:42:55,760 --> 00:42:57,760
back that's what they said it's not my

1134
00:42:57,760 --> 00:43:00,800
word um we got contact with this cyber

1135
00:43:00,800 --> 00:43:03,040
security manager and from this date we

1136
00:43:03,040 --> 00:43:04,560
didn't have any contact anymore with

1137
00:43:04,560 --> 00:43:05,520
them

1138
00:43:05,520 --> 00:43:07,119
so i don't know what they did

1139
00:43:07,119 --> 00:43:09,440
we did a public disclosure after the

1140
00:43:09,440 --> 00:43:12,800
embargo uh three months of ago and we

1141
00:43:12,800 --> 00:43:15,760
even extended one month more if i

1142
00:43:15,760 --> 00:43:18,400
remember well

1143
00:43:18,560 --> 00:43:20,640
and now we are speaking about it in

1144
00:43:20,640 --> 00:43:23,279
nassem neck

1145
00:43:24,720 --> 00:43:27,040
so

1146
00:43:27,040 --> 00:43:28,640
i wanted just to highlight some of the

1147
00:43:28,640 --> 00:43:30,000
amp packs because

1148
00:43:30,000 --> 00:43:32,560
this is quite interesting uh while doing

1149
00:43:32,560 --> 00:43:35,599
this research i have only one device

1150
00:43:35,599 --> 00:43:38,400
from this mac manufacturer but

1151
00:43:38,400 --> 00:43:40,240
when you look at the the reverse

1152
00:43:40,240 --> 00:43:42,800
engineering the binary you have plenty

1153
00:43:42,800 --> 00:43:44,800
of versions that are available and if

1154
00:43:44,800 --> 00:43:46,800
you like look at to the user manual or

1155
00:43:46,800 --> 00:43:48,960
you go back to fccid you can see that

1156
00:43:48,960 --> 00:43:51,760
those guys have various models so they

1157
00:43:51,760 --> 00:43:52,560
have

1158
00:43:52,560 --> 00:43:56,400
lioness jaguar jaguar ash jagar l bobcat

1159
00:43:56,400 --> 00:43:58,720
all the simba

1160
00:43:58,720 --> 00:44:01,599
yeah so puma they have all the cat of

1161
00:44:01,599 --> 00:44:03,920
the world so you can choose your own

1162
00:44:03,920 --> 00:44:06,640
choose what you want but it looks like

1163
00:44:06,640 --> 00:44:09,280
the device is pretty much the same from

1164
00:44:09,280 --> 00:44:11,200
a hardware perspective

1165
00:44:11,200 --> 00:44:12,160
so

1166
00:44:12,160 --> 00:44:14,560
the firmware should be the same as well

1167
00:44:14,560 --> 00:44:16,560
and this i from this point i make an

1168
00:44:16,560 --> 00:44:18,640
assumption what i can tell is that it's

1169
00:44:18,640 --> 00:44:20,960
not limited to spyron so to this

1170
00:44:20,960 --> 00:44:23,440
specific company since the firmware is

1171
00:44:23,440 --> 00:44:25,359
reused um

1172
00:44:25,359 --> 00:44:28,240
among many other devices

1173
00:44:28,240 --> 00:44:29,119
so

1174
00:44:29,119 --> 00:44:31,520
if you want to take a look you can take

1175
00:44:31,520 --> 00:44:33,839
a look

1176
00:44:35,280 --> 00:44:36,800
in the end the choice is yours if you

1177
00:44:36,800 --> 00:44:39,359
want to track your car but just uh make

1178
00:44:39,359 --> 00:44:41,920
sure that the device is secured and the

1179
00:44:41,920 --> 00:44:43,040
device

1180
00:44:43,040 --> 00:44:45,040
corresponds to your need

1181
00:44:45,040 --> 00:44:46,560
and

1182
00:44:46,560 --> 00:44:48,319
i saw many times while doing this

1183
00:44:48,319 --> 00:44:50,640
research that people were complaining

1184
00:44:50,640 --> 00:44:53,520
because they uh they buy a second-hand

1185
00:44:53,520 --> 00:44:55,200
car and find out that there is some

1186
00:44:55,200 --> 00:44:57,760
device left in uh in the car and they

1187
00:44:57,760 --> 00:45:01,440
were really pissed off so

1188
00:45:01,440 --> 00:45:02,960
be careful and

1189
00:45:02,960 --> 00:45:05,839
just to know that it can be can be the

1190
00:45:05,839 --> 00:45:08,799
in your car as well

1191
00:45:09,119 --> 00:45:10,960
there was some work that was done

1192
00:45:10,960 --> 00:45:13,119
previously on this topic on

1193
00:45:13,119 --> 00:45:15,520
such devices

1194
00:45:15,520 --> 00:45:18,400
there was in black act us

1195
00:45:18,400 --> 00:45:20,319
baidu security lab that did some

1196
00:45:20,319 --> 00:45:23,440
research on the modern part

1197
00:45:23,440 --> 00:45:26,240
later at defcon one guy presented the

1198
00:45:26,240 --> 00:45:27,359
system

1199
00:45:27,359 --> 00:45:29,599
the evo 1

1200
00:45:29,599 --> 00:45:32,720
which on which he spent very much time

1201
00:45:32,720 --> 00:45:34,400
customizing the

1202
00:45:34,400 --> 00:45:35,839
the hardware because he wanted to do

1203
00:45:35,839 --> 00:45:37,280
specific things

1204
00:45:37,280 --> 00:45:38,319
um

1205
00:45:38,319 --> 00:45:40,480
he ended up analyzing the whole firmware

1206
00:45:40,480 --> 00:45:42,000
because there was two device so there

1207
00:45:42,000 --> 00:45:44,000
was kind of the tracker and kind of

1208
00:45:44,000 --> 00:45:47,040
another box let's say and he reversed

1209
00:45:47,040 --> 00:45:49,200
engineer all the traffic that was going

1210
00:45:49,200 --> 00:45:51,119
through both boxes

1211
00:45:51,119 --> 00:45:53,280
and ended up injecting all the back end

1212
00:45:53,280 --> 00:45:56,560
with the sql injections as well so

1213
00:45:56,560 --> 00:45:58,800
i hope this talk will

1214
00:45:58,800 --> 00:46:00,960
bring some light on some things that

1215
00:46:00,960 --> 00:46:04,240
were not covered in those specific

1216
00:46:04,240 --> 00:46:05,440
talk

1217
00:46:05,440 --> 00:46:06,560
and

1218
00:46:06,560 --> 00:46:10,680
that's all for me for today

1219
00:46:15,160 --> 00:46:19,760
[Applause]

1220
00:46:19,760 --> 00:46:21,520
thank you very much if you have some

1221
00:46:21,520 --> 00:46:23,040
questions please raise your hand so i

1222
00:46:23,040 --> 00:46:26,920
can give you the microphone

1223
00:46:34,560 --> 00:46:37,119
thanks for some nice talk uh i really

1224
00:46:37,119 --> 00:46:39,359
the question do you know if there is

1225
00:46:39,359 --> 00:46:41,680
some updates even if you have only one

1226
00:46:41,680 --> 00:46:44,240
device and you you never have the news

1227
00:46:44,240 --> 00:46:46,400
from the from them now do you know if

1228
00:46:46,400 --> 00:46:48,240
there is some update and will you

1229
00:46:48,240 --> 00:46:50,560
continue to watch

1230
00:46:50,560 --> 00:46:51,520
this

1231
00:46:51,520 --> 00:46:52,480
system

1232
00:46:52,480 --> 00:46:54,800
this is a good question i thought that

1233
00:46:54,800 --> 00:46:56,960
i would see an update it turns out i

1234
00:46:56,960 --> 00:46:59,359
didn't see any updates

1235
00:46:59,359 --> 00:47:00,319
so

1236
00:47:00,319 --> 00:47:01,839
i don't know if it's because i'm in

1237
00:47:01,839 --> 00:47:04,640
switzerland or something like this

1238
00:47:04,640 --> 00:47:06,640
i'm not in the good network i don't know

1239
00:47:06,640 --> 00:47:08,319
what what is the reason because those

1240
00:47:08,319 --> 00:47:11,520
trackers are us-based so

1241
00:47:11,520 --> 00:47:13,119
i cannot tell

1242
00:47:13,119 --> 00:47:16,720
hopefully there is some updates

1243
00:47:16,720 --> 00:47:18,319
if not

1244
00:47:18,319 --> 00:47:21,119
i'm sorry for them

1245
00:47:21,200 --> 00:47:22,960
and i will probably continue a little

1246
00:47:22,960 --> 00:47:25,040
bit because there are some good things

1247
00:47:25,040 --> 00:47:26,240
to dig

1248
00:47:26,240 --> 00:47:28,079
and i think those things can also be

1249
00:47:28,079 --> 00:47:29,680
applied to different devices such as

1250
00:47:29,680 --> 00:47:31,520
routers or

1251
00:47:31,520 --> 00:47:32,720
4g

1252
00:47:32,720 --> 00:47:35,680
modem usb keys that are embed quite the

1253
00:47:35,680 --> 00:47:36,960
same system

1254
00:47:36,960 --> 00:47:38,079
from a

1255
00:47:38,079 --> 00:47:41,119
chipset perspective so yeah

1256
00:47:41,119 --> 00:47:43,280
will you continue to search for some

1257
00:47:43,280 --> 00:47:46,160
reservations too

1258
00:47:46,160 --> 00:47:48,319
so

1259
00:47:48,319 --> 00:47:51,040
i don't know because i did this research

1260
00:47:51,040 --> 00:47:53,599
most of the time at work

1261
00:47:53,599 --> 00:47:57,119
in the context of work i would say

1262
00:47:57,520 --> 00:47:58,720
i have the

1263
00:47:58,720 --> 00:48:01,119
i had some device in hand this is why i

1264
00:48:01,119 --> 00:48:03,280
can tell it's not only for them

1265
00:48:03,280 --> 00:48:06,400
basically but yes if i can have many

1266
00:48:06,400 --> 00:48:08,720
trackers i will continue because it's

1267
00:48:08,720 --> 00:48:10,800
quite interesting

1268
00:48:10,800 --> 00:48:13,119
thanks

1269
00:48:19,040 --> 00:48:21,040
thanks for your presentation it was very

1270
00:48:21,040 --> 00:48:22,160
interesting

1271
00:48:22,160 --> 00:48:24,240
um are you are you aware about the

1272
00:48:24,240 --> 00:48:26,079
tracker they went to uh in europe you

1273
00:48:26,079 --> 00:48:28,480
know there is a new regulation

1274
00:48:28,480 --> 00:48:30,880
for such tracker and actually

1275
00:48:30,880 --> 00:48:32,839
no i don't know

1276
00:48:32,839 --> 00:48:34,800
because this is the u.s but

1277
00:48:34,800 --> 00:48:36,800
the new car producing europe we have the

1278
00:48:36,800 --> 00:48:39,839
same same box inside the car okay so did

1279
00:48:39,839 --> 00:48:42,319
you compare other let's say

1280
00:48:42,319 --> 00:48:43,920
in europe

1281
00:48:43,920 --> 00:48:46,319
no no in fact i didn't decide even the

1282
00:48:46,319 --> 00:48:48,319
tracker that i have in hand somebody

1283
00:48:48,319 --> 00:48:50,319
come at work and just

1284
00:48:50,319 --> 00:48:52,960
throw the device on my desk and

1285
00:48:52,960 --> 00:48:56,079
then magic happens so i cannot know

1286
00:48:56,079 --> 00:48:59,680
but if i have let's say time

1287
00:48:59,680 --> 00:49:01,520
i will have a look yeah

1288
00:49:01,520 --> 00:49:03,839
indeed

1289
00:49:08,880 --> 00:49:11,680
all right any other question

1290
00:49:11,680 --> 00:49:13,359
okay so we have a little bit of time

1291
00:49:13,359 --> 00:49:15,359
before the next talk so if you wanna

1292
00:49:15,359 --> 00:49:17,359
guys have a quick break

1293
00:49:17,359 --> 00:49:18,319
yeah

1294
00:49:18,319 --> 00:49:21,480
thank you

