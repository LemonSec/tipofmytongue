1
00:00:06,840 --> 00:00:09,900
[Music]

2
00:00:13,120 --> 00:00:15,920
welcome thank you for being here my name

3
00:00:15,920 --> 00:00:18,560
is dino boris dugu i'm going by boris

4
00:00:18,560 --> 00:00:20,560
preferably and

5
00:00:20,560 --> 00:00:22,160
i'm actually employed as a consulting

6
00:00:22,160 --> 00:00:25,119
systems engineer for fortinet and i'm

7
00:00:25,119 --> 00:00:27,680
tackling everything which has to do with

8
00:00:27,680 --> 00:00:31,439
enabling and securing ot and ics

9
00:00:31,439 --> 00:00:33,840
installation bases for

10
00:00:33,840 --> 00:00:36,800
our customers which are mainly going

11
00:00:36,800 --> 00:00:39,440
through and spanning emea so that's it

12
00:00:39,440 --> 00:00:42,399
for my side i just wanted you

13
00:00:42,399 --> 00:00:46,399
possibly if you want to applause uh scrt

14
00:00:46,399 --> 00:00:48,719
for the organization of

15
00:00:48,719 --> 00:00:50,640
insomniac because

16
00:00:50,640 --> 00:00:53,360
i am very happy to be here i hope that

17
00:00:53,360 --> 00:00:55,840
you are also very happy to be here it's

18
00:00:55,840 --> 00:00:58,000
been a long time since i've actually

19
00:00:58,000 --> 00:01:00,000
talked in front of people so i might

20
00:01:00,000 --> 00:01:02,800
have some kernel panic at some point but

21
00:01:02,800 --> 00:01:04,479
just try to say sunshine or something

22
00:01:04,479 --> 00:01:06,799
like that and i might come back

23
00:01:06,799 --> 00:01:07,840
okay

24
00:01:07,840 --> 00:01:10,159
that was that now that i spoke a little

25
00:01:10,159 --> 00:01:13,040
bit about scrt i just wanted to take a

26
00:01:13,040 --> 00:01:14,560
few

27
00:01:14,560 --> 00:01:17,439
outcome that you'll find on the scrt

28
00:01:17,439 --> 00:01:20,560
blog which is a very nice read and into

29
00:01:20,560 --> 00:01:23,119
the output i've taken today

30
00:01:23,119 --> 00:01:24,960
there's a few of them specifically

31
00:01:24,960 --> 00:01:27,920
talking about um what their audit

32
00:01:27,920 --> 00:01:30,400
department are usually seeing in the

33
00:01:30,400 --> 00:01:33,119
wild and actually the lack of things

34
00:01:33,119 --> 00:01:35,840
they are seeing in the wild and here um

35
00:01:35,840 --> 00:01:37,520
it was actually a survey which has been

36
00:01:37,520 --> 00:01:41,040
conducted internally at scrt

37
00:01:41,040 --> 00:01:43,520
amongst all the business units within

38
00:01:43,520 --> 00:01:47,360
scrt and the outcome of that survey came

39
00:01:47,360 --> 00:01:48,399
out with

40
00:01:48,399 --> 00:01:51,600
what will be the the best method to do

41
00:01:51,600 --> 00:01:54,159
in order to protect any given customer

42
00:01:54,159 --> 00:01:56,320
at any given point of time and the first

43
00:01:56,320 --> 00:01:58,320
outcome that came out

44
00:01:58,320 --> 00:01:59,680
was actually

45
00:01:59,680 --> 00:02:02,159
network isolation so basically we see

46
00:02:02,159 --> 00:02:04,240
that network isolation is something that

47
00:02:04,240 --> 00:02:06,640
is really tremendously in need and not

48
00:02:06,640 --> 00:02:08,720
only network isolation by the means of

49
00:02:08,720 --> 00:02:10,959
enabling vlans enabling segmentation

50
00:02:10,959 --> 00:02:13,440
points etc but network segmentation

51
00:02:13,440 --> 00:02:15,680
enabling firewalling filtering in

52
00:02:15,680 --> 00:02:18,879
between these segmentation points

53
00:02:18,879 --> 00:02:19,760
and

54
00:02:19,760 --> 00:02:22,319
that slide is to enforce that messaging

55
00:02:22,319 --> 00:02:24,480
again because the narrative isn't very

56
00:02:24,480 --> 00:02:27,920
new and you will find others uh input

57
00:02:27,920 --> 00:02:30,080
into the same blogs concerning the same

58
00:02:30,080 --> 00:02:33,120
type of information and the fact that um

59
00:02:33,120 --> 00:02:36,720
there is rarely any um communication

60
00:02:36,720 --> 00:02:39,120
firewalling in between or within the

61
00:02:39,120 --> 00:02:42,560
given same subnet

62
00:02:45,040 --> 00:02:48,560
now let's dive into what fortinet can do

63
00:02:48,560 --> 00:02:50,560
for ot customers so basically the first

64
00:02:50,560 --> 00:02:52,959
thing we we have at fortinet is ot

65
00:02:52,959 --> 00:02:56,160
specialty so we try to to really enable

66
00:02:56,160 --> 00:02:58,239
all the workforce we can and all the

67
00:02:58,239 --> 00:03:00,640
research and development we can onto

68
00:03:00,640 --> 00:03:03,680
securing ics and ot

69
00:03:03,680 --> 00:03:06,159
we try to comply as much as possible

70
00:03:06,159 --> 00:03:09,200
with our devices with the industry

71
00:03:09,200 --> 00:03:11,120
standard regulation and compliance

72
00:03:11,120 --> 00:03:14,959
requirement that's a big job so to speak

73
00:03:14,959 --> 00:03:16,400
we also

74
00:03:16,400 --> 00:03:19,440
try to identify as much as possible as

75
00:03:19,440 --> 00:03:21,599
ot-based network communication on the

76
00:03:21,599 --> 00:03:24,480
wire meaning that our devices might have

77
00:03:24,480 --> 00:03:26,959
the possibility to identify underwire

78
00:03:26,959 --> 00:03:29,360
exactly which type of ics communication

79
00:03:29,360 --> 00:03:31,280
is going on and you will have the

80
00:03:31,280 --> 00:03:33,599
possibility to actually police this type

81
00:03:33,599 --> 00:03:37,679
of ics ot communication

82
00:03:38,799 --> 00:03:41,599
another very important uh topic here is

83
00:03:41,599 --> 00:03:43,760
the intrusion and detection

84
00:03:43,760 --> 00:03:46,400
and prevention possibility of it by 40

85
00:03:46,400 --> 00:03:48,959
west we have more than 250 threat

86
00:03:48,959 --> 00:03:51,200
researchers which are working around the

87
00:03:51,200 --> 00:03:52,959
clock in three different data centers in

88
00:03:52,959 --> 00:03:55,760
order to provide and update our devices

89
00:03:55,760 --> 00:03:58,080
with threat intelligence

90
00:03:58,080 --> 00:04:01,439
concerning not only but of course ics

91
00:04:01,439 --> 00:04:04,400
and ot and we also provide one of the

92
00:04:04,400 --> 00:04:05,599
leading application control

93
00:04:05,599 --> 00:04:07,599
possibilities offering

94
00:04:07,599 --> 00:04:08,879
ics

95
00:04:08,879 --> 00:04:11,280
communication control on the wire

96
00:04:11,280 --> 00:04:13,120
network segmentation i will talk about

97
00:04:13,120 --> 00:04:15,599
that during the speech so i won't extend

98
00:04:15,599 --> 00:04:16,798
too much here but we have the

99
00:04:16,798 --> 00:04:18,238
possibility to of course provide you

100
00:04:18,238 --> 00:04:20,798
with uh the enablement of segmentation

101
00:04:20,798 --> 00:04:23,120
points and going further than that uh

102
00:04:23,120 --> 00:04:25,520
provide micro segmentation uh through

103
00:04:25,520 --> 00:04:28,800
the enablement of 40 switches

104
00:04:28,800 --> 00:04:31,360
the fabric ready partner is

105
00:04:31,360 --> 00:04:34,000
our ecosystem which i'll have a couple

106
00:04:34,000 --> 00:04:37,919
of slides talking about that

107
00:04:40,400 --> 00:04:42,479
ot solution architecture so basically

108
00:04:42,479 --> 00:04:44,639
mainly what happened is that within any

109
00:04:44,639 --> 00:04:46,400
given uh ot

110
00:04:46,400 --> 00:04:49,199
premises we usually find the it

111
00:04:49,199 --> 00:04:52,080
department on top at which at some point

112
00:04:52,080 --> 00:04:54,320
within the network you will see the

113
00:04:54,320 --> 00:04:57,199
operational technology boundary and

114
00:04:57,199 --> 00:04:58,320
in here

115
00:04:58,320 --> 00:05:01,039
here is how we will actually enable and

116
00:05:01,039 --> 00:05:04,880
protecting communication within the ot

117
00:05:04,880 --> 00:05:07,919
authentication boundary first

118
00:05:07,919 --> 00:05:09,600
we will start with

119
00:05:09,600 --> 00:05:11,360
actually enabling zones and conduits we

120
00:05:11,360 --> 00:05:14,080
will do that with 40 os for example and

121
00:05:14,080 --> 00:05:16,800
uh try to secure remote connectivity in

122
00:05:16,800 --> 00:05:20,080
the it department so two devices here

123
00:05:20,080 --> 00:05:22,800
enabled 40 os of course and switching

124
00:05:22,800 --> 00:05:25,520
layer 2 devices with our 40 switch

125
00:05:25,520 --> 00:05:26,720
possibilities

126
00:05:26,720 --> 00:05:28,880
[Music]

127
00:05:28,880 --> 00:05:31,840
deep ot visibility we will enable that

128
00:05:31,840 --> 00:05:32,560
with

129
00:05:32,560 --> 00:05:35,440
our industrial services

130
00:05:35,440 --> 00:05:38,800
which are enabled on 40 os so that deep

131
00:05:38,800 --> 00:05:40,880
ot visibility will provide you with the

132
00:05:40,880 --> 00:05:43,440
possibility to control ics and ot

133
00:05:43,440 --> 00:05:45,759
communication on the wire and that will

134
00:05:45,759 --> 00:05:47,840
be enabled into the control network

135
00:05:47,840 --> 00:05:50,720
toward the field network down within the

136
00:05:50,720 --> 00:05:54,240
ot installment

137
00:05:54,880 --> 00:05:57,600
rule b roll based access control sorry

138
00:05:57,600 --> 00:05:59,280
we will enable that with two different

139
00:05:59,280 --> 00:06:01,440
type of solutions so as you can see here

140
00:06:01,440 --> 00:06:04,160
we have 14 ac in order to enable a

141
00:06:04,160 --> 00:06:05,840
network access control if that is

142
00:06:05,840 --> 00:06:07,600
something that is of interest for any

143
00:06:07,600 --> 00:06:09,759
given customers we also have one very

144
00:06:09,759 --> 00:06:11,280
interesting platform i'll talk a little

145
00:06:11,280 --> 00:06:13,600
bit about it for the authenticator in

146
00:06:13,600 --> 00:06:15,280
order to enforce two-form factor

147
00:06:15,280 --> 00:06:17,759
authentication throughout the ot

148
00:06:17,759 --> 00:06:20,000
installment

149
00:06:20,000 --> 00:06:22,479
of course we try to secure critical

150
00:06:22,479 --> 00:06:24,800
endpoint with one solution which is

151
00:06:24,800 --> 00:06:26,800
called 40 edr so you have the

152
00:06:26,800 --> 00:06:29,680
possibility to enable kernel based edr

153
00:06:29,680 --> 00:06:32,720
solution onto the endpoint which are

154
00:06:32,720 --> 00:06:37,199
comprised within the ot installment

155
00:06:37,199 --> 00:06:39,680
and finally uh not not yet finally sorry

156
00:06:39,680 --> 00:06:42,400
we have the um centralized uh security

157
00:06:42,400 --> 00:06:45,280
management sock knock operation controls

158
00:06:45,280 --> 00:06:47,680
here so here we can enable solutions

159
00:06:47,680 --> 00:06:50,560
like 40 cm for example um

160
00:06:50,560 --> 00:06:52,479
of course 40 manager in order to manage

161
00:06:52,479 --> 00:06:55,759
the fleet of device in the field and for

162
00:06:55,759 --> 00:06:58,080
the analyzer in order to gather logs

163
00:06:58,080 --> 00:06:59,840
from your fortinet

164
00:06:59,840 --> 00:07:03,638
security fabric ecosystem

165
00:07:04,240 --> 00:07:06,720
finally yes the possibility to install

166
00:07:06,720 --> 00:07:09,840
and deploy advanced threat protection

167
00:07:09,840 --> 00:07:12,720
systems with here two devices two

168
00:07:12,720 --> 00:07:15,120
appliances possibility 40 deceptor which

169
00:07:15,120 --> 00:07:16,720
i'll talk about in detail a little bit

170
00:07:16,720 --> 00:07:19,039
throughout the presentation and

171
00:07:19,039 --> 00:07:21,840
our 40 sandbox solution which will

172
00:07:21,840 --> 00:07:27,479
enable on-prem sandboxing if so wanted

173
00:07:30,000 --> 00:07:32,199
this slide is actually representing an

174
00:07:32,199 --> 00:07:34,880
ic62443 compliance solution architecture

175
00:07:34,880 --> 00:07:36,960
of course you will see a lot of fortinet

176
00:07:36,960 --> 00:07:39,680
enabled possibilities here i think that

177
00:07:39,680 --> 00:07:42,560
um what that slide really summarized and

178
00:07:42,560 --> 00:07:45,520
the idea about this slide is that what

179
00:07:45,520 --> 00:07:49,039
unfortunate we try to enable and uh push

180
00:07:49,039 --> 00:07:50,960
toward our customer in order to protect

181
00:07:50,960 --> 00:07:54,160
the architecture is this vertical part

182
00:07:54,160 --> 00:07:57,199
here in which we will put our 40 us

183
00:07:57,199 --> 00:08:00,479
devices at the core of the network and

184
00:08:00,479 --> 00:08:02,960
control the layer 2 devices namely 40

185
00:08:02,960 --> 00:08:04,879
switches and hence

186
00:08:04,879 --> 00:08:07,120
provide segmentation possibilities

187
00:08:07,120 --> 00:08:10,960
directly within the 40os installment now

188
00:08:10,960 --> 00:08:14,560
of course at the level 3 level 3.5 you

189
00:08:14,560 --> 00:08:16,879
see a lot of possible

190
00:08:16,879 --> 00:08:21,039
fortinet ecosystem appliances

191
00:08:21,120 --> 00:08:23,360
at which of course it's at customer

192
00:08:23,360 --> 00:08:25,919
discretion in order to see if they want

193
00:08:25,919 --> 00:08:27,680
such type of solutions it's not of

194
00:08:27,680 --> 00:08:29,520
course an obligation but it's something

195
00:08:29,520 --> 00:08:32,719
that fortinet can provide and can put an

196
00:08:32,719 --> 00:08:35,679
enable into a given ics installation

197
00:08:35,679 --> 00:08:38,799
here for example cm solutions boxing

198
00:08:38,799 --> 00:08:42,080
management analyzer authenticator and

199
00:08:42,080 --> 00:08:44,800
the 40 proxy for example which will

200
00:08:44,800 --> 00:08:47,920
enable a single ad burn pass through our

201
00:08:47,920 --> 00:08:52,040
40 proxy possibility

202
00:08:55,519 --> 00:08:57,680
fortinet solution offering for ics and

203
00:08:57,680 --> 00:09:00,800
ot we have a few rugged device so these

204
00:09:00,800 --> 00:09:02,959
are these devices which are especially

205
00:09:02,959 --> 00:09:04,800
made for harsh

206
00:09:04,800 --> 00:09:06,800
environment where we will have the

207
00:09:06,800 --> 00:09:08,720
possibility to deploy for example all

208
00:09:08,720 --> 00:09:11,360
the 40 os based devices you are seeing

209
00:09:11,360 --> 00:09:12,160
here

210
00:09:12,160 --> 00:09:14,720
on that slide plus we have two different

211
00:09:14,720 --> 00:09:17,920
rugged switch and two different

212
00:09:17,920 --> 00:09:20,720
access points in order to enable uh such

213
00:09:20,720 --> 00:09:22,880
type of installment into harsh

214
00:09:22,880 --> 00:09:26,399
environment keep in mind that these uh

215
00:09:26,399 --> 00:09:29,600
rugged platform are one thing but mainly

216
00:09:29,600 --> 00:09:32,480
a lot of our ot customers are also

217
00:09:32,480 --> 00:09:34,959
able to host completely standard type of

218
00:09:34,959 --> 00:09:37,120
appliances within their data centers

219
00:09:37,120 --> 00:09:38,560
meaning by that that if you have a

220
00:09:38,560 --> 00:09:41,360
complete normalized type of data center

221
00:09:41,360 --> 00:09:42,560
plus

222
00:09:42,560 --> 00:09:44,800
air conditioning etc you can run and

223
00:09:44,800 --> 00:09:50,439
host any type of 40 net appliances

224
00:09:52,959 --> 00:09:55,600
i'll now try to present to you a global

225
00:09:55,600 --> 00:09:59,519
customer use case um that is a worldwide

226
00:09:59,519 --> 00:10:01,279
industry actor

227
00:10:01,279 --> 00:10:05,360
they actually deployed 600 plus 48

228
00:10:05,360 --> 00:10:09,440
throughout the year 2020 and 2021

229
00:10:09,440 --> 00:10:11,600
they had three different appliances of

230
00:10:11,600 --> 00:10:14,079
choice so a small medium and large

231
00:10:14,079 --> 00:10:15,839
appliance

232
00:10:15,839 --> 00:10:18,640
they had thousands of worldwide location

233
00:10:18,640 --> 00:10:20,800
in which they wanted to enable cyber

234
00:10:20,800 --> 00:10:22,399
security through

235
00:10:22,399 --> 00:10:26,640
the leverage of fortinet installment

236
00:10:26,640 --> 00:10:30,000
they went for a fully converged it and

237
00:10:30,000 --> 00:10:32,720
ot-48 deployment i will detail exactly

238
00:10:32,720 --> 00:10:35,279
that dependent scheme in the upcoming

239
00:10:35,279 --> 00:10:36,640
slide

240
00:10:36,640 --> 00:10:38,320
of course obviously they wanted to have

241
00:10:38,320 --> 00:10:41,279
centrally managed zero touch

242
00:10:41,279 --> 00:10:43,040
provisioning deployments possibility

243
00:10:43,040 --> 00:10:45,519
meaning by that that the deployment

244
00:10:45,519 --> 00:10:48,959
wanted to be controlled by the hq

245
00:10:48,959 --> 00:10:52,959
and they were roughly adding 2 plus 48

246
00:10:52,959 --> 00:10:56,560
daily and still are adding 2 plus 48

247
00:10:56,560 --> 00:10:59,279
daily on a daily basis today

248
00:10:59,279 --> 00:11:01,360
the project drivers

249
00:11:01,360 --> 00:11:02,720
ot

250
00:11:02,720 --> 00:11:05,279
and it convergence so this was the top

251
00:11:05,279 --> 00:11:07,519
priority in order to converge these two

252
00:11:07,519 --> 00:11:10,560
world and have a security view onto

253
00:11:10,560 --> 00:11:14,320
these two world in the parts

254
00:11:14,320 --> 00:11:16,640
security framework unification they

255
00:11:16,640 --> 00:11:19,440
wanted to unify all their security

256
00:11:19,440 --> 00:11:21,680
tools and artillery available in order

257
00:11:21,680 --> 00:11:23,680
to secure their environment they did

258
00:11:23,680 --> 00:11:26,399
that with fortinet installment plus they

259
00:11:26,399 --> 00:11:28,560
wanted of course a single point of

260
00:11:28,560 --> 00:11:31,680
central management

261
00:11:34,399 --> 00:11:36,480
so that is the view

262
00:11:36,480 --> 00:11:38,959
of the actual architecture they chosen

263
00:11:38,959 --> 00:11:41,279
in order to deploy their fortigate

264
00:11:41,279 --> 00:11:44,000
appliances what you can see here is

265
00:11:44,000 --> 00:11:47,120
comprised of a single or clustered 40os

266
00:11:47,120 --> 00:11:48,399
appliance

267
00:11:48,399 --> 00:11:53,120
the idea here is to divide the 40os

268
00:11:53,120 --> 00:11:56,240
appliance so to speak into different

269
00:11:56,240 --> 00:11:58,240
functional domains

270
00:11:58,240 --> 00:12:00,959
by functional domain we see here three

271
00:12:00,959 --> 00:12:03,839
different backends should i speak

272
00:12:03,839 --> 00:12:05,920
functional domains we have the ot domain

273
00:12:05,920 --> 00:12:08,480
of course the it domain and the

274
00:12:08,480 --> 00:12:11,600
management domain we have a front thing

275
00:12:11,600 --> 00:12:14,160
uh to the van domain which is here

276
00:12:14,160 --> 00:12:17,279
called van domain and that domain is the

277
00:12:17,279 --> 00:12:19,120
only one which will have van

278
00:12:19,120 --> 00:12:22,000
connectivity so with one connectivity we

279
00:12:22,000 --> 00:12:24,880
can extend that through mpls network for

280
00:12:24,880 --> 00:12:27,760
example uh mount ipsec tunneling toward

281
00:12:27,760 --> 00:12:30,800
the hq or anything of that then even go

282
00:12:30,800 --> 00:12:33,839
to vertice processing if so wanted by

283
00:12:33,839 --> 00:12:35,839
the customer now that

284
00:12:35,839 --> 00:12:37,600
that van functionality has been

285
00:12:37,600 --> 00:12:39,760
explained the interesting idea here is

286
00:12:39,760 --> 00:12:42,160
to see that within dot domain for

287
00:12:42,160 --> 00:12:44,959
example we have the possibility to

288
00:12:44,959 --> 00:12:47,200
further deploy layer 2 device and

289
00:12:47,200 --> 00:12:49,200
control this layer device

290
00:12:49,200 --> 00:12:52,399
layer 2 device at the ot domain meaning

291
00:12:52,399 --> 00:12:54,320
by that that anything that will be

292
00:12:54,320 --> 00:12:57,279
behind that ot domain has all the zone

293
00:12:57,279 --> 00:13:00,720
and conduits and policy enforcement plus

294
00:13:00,720 --> 00:13:03,519
all the 40 us available artillery

295
00:13:03,519 --> 00:13:06,320
available directly from the ot virtual

296
00:13:06,320 --> 00:13:08,480
domain meaning by that that

297
00:13:08,480 --> 00:13:10,320
all the communication that happens

298
00:13:10,320 --> 00:13:13,360
within the uot domain is protected by

299
00:13:13,360 --> 00:13:15,680
that particular domain anything that

300
00:13:15,680 --> 00:13:19,440
might need to reach the outbound world

301
00:13:19,440 --> 00:13:20,639
would have

302
00:13:20,639 --> 00:13:22,720
been subject to the policies which are

303
00:13:22,720 --> 00:13:25,440
fought in the van wyden for example or

304
00:13:25,440 --> 00:13:27,760
any other video part of the

305
00:13:27,760 --> 00:13:30,560
configuration

306
00:13:32,880 --> 00:13:36,160
sorry that uh cannell panic moment

307
00:13:36,160 --> 00:13:37,600
um okay

308
00:13:37,600 --> 00:13:40,000
further on to the it domain for example

309
00:13:40,000 --> 00:13:41,760
as we can see here we we also have the

310
00:13:41,760 --> 00:13:44,320
possibility to host on-prem

311
00:13:44,320 --> 00:13:46,720
appliances here in in that illustration

312
00:13:46,720 --> 00:13:48,959
we see a 40 sandbox for example

313
00:13:48,959 --> 00:13:51,839
appliance which is hosted behind the it

314
00:13:51,839 --> 00:13:54,160
domain keep in mind that that 40 sandbox

315
00:13:54,160 --> 00:13:55,519
appliance can be

316
00:13:55,519 --> 00:13:58,079
actually targeted by any

317
00:13:58,079 --> 00:14:00,480
given device part of that

318
00:14:00,480 --> 00:14:02,880
system and we can of course make

319
00:14:02,880 --> 00:14:05,279
submission to this sandboxing subsystem

320
00:14:05,279 --> 00:14:07,600
wherever the submission might come from

321
00:14:07,600 --> 00:14:08,399
the

322
00:14:08,399 --> 00:14:11,040
that configuration another

323
00:14:11,040 --> 00:14:12,959
last thing i wanted to mention here i

324
00:14:12,959 --> 00:14:14,320
will talk about that a little bit

325
00:14:14,320 --> 00:14:16,560
further on within the presentation the

326
00:14:16,560 --> 00:14:19,600
access vlan possibility you see on that

327
00:14:19,600 --> 00:14:21,519
slide here and within the three

328
00:14:21,519 --> 00:14:24,240
different zones enabled into the ot

329
00:14:24,240 --> 00:14:26,720
domain so that access vlan possibility

330
00:14:26,720 --> 00:14:29,680
is the fortinet uh feature set which

331
00:14:29,680 --> 00:14:32,800
will enable you to actually analyze a

332
00:14:32,800 --> 00:14:35,519
lateral movement that might occur within

333
00:14:35,519 --> 00:14:38,399
one given subnet so i'll talk a little

334
00:14:38,399 --> 00:14:41,519
bit about it later

335
00:14:42,839 --> 00:14:46,079
on so of course they wanted to have

336
00:14:46,079 --> 00:14:49,120
central management for all these um

337
00:14:49,120 --> 00:14:52,320
40 os devices in the field um the view

338
00:14:52,320 --> 00:14:54,720
you are seeing here is their view from

339
00:14:54,720 --> 00:14:57,199
40 manager which is actually hosted

340
00:14:57,199 --> 00:14:59,760
on a cloud public cloud vendor

341
00:14:59,760 --> 00:15:02,639
behind ip sectors of course and uh just

342
00:15:02,639 --> 00:15:04,560
the illustration here is to to show you

343
00:15:04,560 --> 00:15:07,279
that uh it's a real possibility to have

344
00:15:07,279 --> 00:15:09,839
plenty of device in the field um

345
00:15:09,839 --> 00:15:12,399
reporting to the same 40 manager and

346
00:15:12,399 --> 00:15:15,440
orchestrate all these policies at the of

347
00:15:15,440 --> 00:15:19,199
course 40 manager layer

348
00:15:19,360 --> 00:15:22,480
now in terms of policy orchestration and

349
00:15:22,480 --> 00:15:25,519
what these devices are actually eating

350
00:15:25,519 --> 00:15:26,399
up

351
00:15:26,399 --> 00:15:28,800
whenever they show up on the network

352
00:15:28,800 --> 00:15:31,920
this is uh one view of what has been

353
00:15:31,920 --> 00:15:34,560
decided by that customer in order to

354
00:15:34,560 --> 00:15:37,199
push all these policies to any given

355
00:15:37,199 --> 00:15:38,800
fortigate that

356
00:15:38,800 --> 00:15:42,079
arise on the network so they they talk

357
00:15:42,079 --> 00:15:43,920
with their teams they talk with their

358
00:15:43,920 --> 00:15:47,440
plant managers and um they came up with

359
00:15:47,440 --> 00:15:48,959
a quorum of

360
00:15:48,959 --> 00:15:50,399
policy which

361
00:15:50,399 --> 00:15:51,440
is here

362
00:15:51,440 --> 00:15:53,279
detailed by the global

363
00:15:53,279 --> 00:15:55,680
otv and policy for example

364
00:15:55,680 --> 00:15:58,240
and that quorum of policy cover pretty

365
00:15:58,240 --> 00:16:01,680
much roughly 90 of their policy needs in

366
00:16:01,680 --> 00:16:04,800
order to secure any given parts of their

367
00:16:04,800 --> 00:16:08,800
environment of course there will be some

368
00:16:08,800 --> 00:16:10,480
cases where

369
00:16:10,480 --> 00:16:13,759
one very special machinery into a given

370
00:16:13,759 --> 00:16:17,040
plant might talk a different

371
00:16:17,040 --> 00:16:18,639
ics and ot

372
00:16:18,639 --> 00:16:21,360
language messaging protocols that will

373
00:16:21,360 --> 00:16:23,839
need pinpointing at that particular

374
00:16:23,839 --> 00:16:26,720
plant but nevertheless the idea here was

375
00:16:26,720 --> 00:16:29,759
to unify as much as possible all the

376
00:16:29,759 --> 00:16:32,399
communication and have the same subsets

377
00:16:32,399 --> 00:16:33,920
of policies

378
00:16:33,920 --> 00:16:37,360
pushed toward any given device that

379
00:16:37,360 --> 00:16:41,279
is currently under management

380
00:16:41,519 --> 00:16:43,839
concerning the e0 touch

381
00:16:43,839 --> 00:16:46,880
deployment the idea was to actually fill

382
00:16:46,880 --> 00:16:49,120
in some site configuration from the

383
00:16:49,120 --> 00:16:51,279
plant manager we have to take into

384
00:16:51,279 --> 00:16:53,759
account here that obviously within ics

385
00:16:53,759 --> 00:16:56,480
when we say plant manager that

386
00:16:56,480 --> 00:16:57,920
individual

387
00:16:57,920 --> 00:17:01,360
his mission is to run his plant

388
00:17:01,360 --> 00:17:04,319
24 by seven meaning by that that any

389
00:17:04,319 --> 00:17:06,400
disruption of the plant is actually

390
00:17:06,400 --> 00:17:09,199
money that is not coming in uh for that

391
00:17:09,199 --> 00:17:10,799
particular plant manager and you know

392
00:17:10,799 --> 00:17:13,520
how this goes they they really are

393
00:17:13,520 --> 00:17:15,520
pretty much so to speak sometimes a

394
00:17:15,520 --> 00:17:17,679
little bit reluctant to see changes

395
00:17:17,679 --> 00:17:20,880
coming in and to see new things being

396
00:17:20,880 --> 00:17:22,799
changed within their networks

397
00:17:22,799 --> 00:17:24,559
nevertheless the idea was to fill in the

398
00:17:24,559 --> 00:17:27,520
site-specific configuration gather these

399
00:17:27,520 --> 00:17:29,200
information and

400
00:17:29,200 --> 00:17:30,559
once we have

401
00:17:30,559 --> 00:17:33,360
that filled in connect the 40

402
00:17:33,360 --> 00:17:36,000
to the 40 manager staging vlan once we

403
00:17:36,000 --> 00:17:38,880
are there the local it staff will

404
00:17:38,880 --> 00:17:41,520
actually stage the 48 by booting the

405
00:17:41,520 --> 00:17:42,559
device

406
00:17:42,559 --> 00:17:45,200
with a generic usb key

407
00:17:45,200 --> 00:17:46,400
which will connect

408
00:17:46,400 --> 00:17:50,000
to the 40 manager ip address and under

409
00:17:50,000 --> 00:17:54,240
complete hq control once we have that

410
00:17:54,240 --> 00:17:57,360
the ztp tool will actually provision the

411
00:17:57,360 --> 00:17:59,520
forty gate toward the voting manager and

412
00:17:59,520 --> 00:18:02,400
we will retrieve all the given uh

413
00:18:02,400 --> 00:18:04,559
configuration for that specific

414
00:18:04,559 --> 00:18:07,280
fortigate device so pretty much not much

415
00:18:07,280 --> 00:18:10,240
to do for the local it staff they could

416
00:18:10,240 --> 00:18:12,880
stage these fortigates themselves quite

417
00:18:12,880 --> 00:18:15,280
easily once that has been done actually

418
00:18:15,280 --> 00:18:18,400
it was just the operation of pretty much

419
00:18:18,400 --> 00:18:20,000
switching the cables toward the

420
00:18:20,000 --> 00:18:22,799
production environment and booting up

421
00:18:22,799 --> 00:18:24,880
the fortigate into its final

422
00:18:24,880 --> 00:18:29,840
configuration and final cabling mode

423
00:18:31,200 --> 00:18:34,720
i'll now present and detail a few of the

424
00:18:34,720 --> 00:18:35,840
ot

425
00:18:35,840 --> 00:18:37,760
customer praised features so to speak

426
00:18:37,760 --> 00:18:39,120
about what

427
00:18:39,120 --> 00:18:42,240
is actually of interest for ics and oot

428
00:18:42,240 --> 00:18:44,480
individuals within the field what they

429
00:18:44,480 --> 00:18:47,360
actually like about what we can propose

430
00:18:47,360 --> 00:18:48,400
to them

431
00:18:48,400 --> 00:18:50,960
i talked about it obviously of course

432
00:18:50,960 --> 00:18:53,600
the enablement of layer 2 device from

433
00:18:53,600 --> 00:18:54,799
the core

434
00:18:54,799 --> 00:18:57,600
of your cyber security solution here 40

435
00:18:57,600 --> 00:18:58,720
switches

436
00:18:58,720 --> 00:19:01,520
enabled and controlled managed by

437
00:19:01,520 --> 00:19:03,760
default us installment so that is

438
00:19:03,760 --> 00:19:05,520
something that is quite praised within

439
00:19:05,520 --> 00:19:07,919
ics and ot because it means that they

440
00:19:07,919 --> 00:19:10,880
will have the possibility to enable

441
00:19:10,880 --> 00:19:14,000
any single segmentation points directly

442
00:19:14,000 --> 00:19:17,440
from within the 40 os

443
00:19:17,440 --> 00:19:20,000
installment itself so

444
00:19:20,000 --> 00:19:21,679
of course you have all the port level

445
00:19:21,679 --> 00:19:23,840
and visibility within

446
00:19:23,840 --> 00:19:25,120
40 os

447
00:19:25,120 --> 00:19:27,760
you have multi-tenancy available so if

448
00:19:27,760 --> 00:19:29,600
you want to ship a vlan toward a

449
00:19:29,600 --> 00:19:30,559
different

450
00:19:30,559 --> 00:19:32,960
functional domain we call them

451
00:19:32,960 --> 00:19:34,960
internally virtual domain so if you want

452
00:19:34,960 --> 00:19:37,039
to ship a vlan over a different virtual

453
00:19:37,039 --> 00:19:39,039
domain and control the segmentation

454
00:19:39,039 --> 00:19:41,039
point from different functional domains

455
00:19:41,039 --> 00:19:44,000
you have these type of possibilities we

456
00:19:44,000 --> 00:19:47,120
support plenty of tiered architecture

457
00:19:47,120 --> 00:19:49,360
available with 40 switches so here i

458
00:19:49,360 --> 00:19:50,720
just listed one which is called

459
00:19:50,720 --> 00:19:53,919
multi-tier switching topologies through

460
00:19:53,919 --> 00:19:57,039
fortigate higher availability

461
00:19:57,039 --> 00:19:58,400
plenty of these

462
00:19:58,400 --> 00:20:00,240
possible deployment schemes are

463
00:20:00,240 --> 00:20:02,640
available to you and you will have the

464
00:20:02,640 --> 00:20:04,559
possibility to control all your layer 2

465
00:20:04,559 --> 00:20:08,080
devices in names of 40 switch of course

466
00:20:08,080 --> 00:20:10,480
it helps to implement best practices

467
00:20:10,480 --> 00:20:12,720
namely ic6243

468
00:20:12,720 --> 00:20:15,280
nist defense in-depth etc because we

469
00:20:15,280 --> 00:20:18,720
enable segmentation from the core of the

470
00:20:18,720 --> 00:20:22,000
chosen cyber security solution

471
00:20:22,000 --> 00:20:23,600
again segmentation and micro

472
00:20:23,600 --> 00:20:24,880
segmentation

473
00:20:24,880 --> 00:20:26,880
that micro segmentation feature is

474
00:20:26,880 --> 00:20:30,400
actually this one we call it access vlan

475
00:20:30,400 --> 00:20:33,600
what is implied here is that onto a

476
00:20:33,600 --> 00:20:36,640
given and configured vlan you will have

477
00:20:36,640 --> 00:20:38,559
the possibility to toggle

478
00:20:38,559 --> 00:20:41,679
a toggle option within 40 us in order to

479
00:20:41,679 --> 00:20:44,320
enable intra-vlan traffic which will

480
00:20:44,320 --> 00:20:49,080
climb up back to the fortigate

481
00:20:49,200 --> 00:20:51,360
so pretty much that that means that

482
00:20:51,360 --> 00:20:53,600
every single lateral movement that might

483
00:20:53,600 --> 00:20:56,559
arise within that given subnet will be

484
00:20:56,559 --> 00:20:57,440
uh

485
00:20:57,440 --> 00:21:00,720
supposedly under scrutiny of default us

486
00:21:00,720 --> 00:21:03,120
installment what we do here generally

487
00:21:03,120 --> 00:21:05,760
speaking into ics and ot is that we

488
00:21:05,760 --> 00:21:08,559
enable a passive probing onto these

489
00:21:08,559 --> 00:21:11,120
given subnets so we will analyze all the

490
00:21:11,120 --> 00:21:14,240
traffic uh traffic will pass through av

491
00:21:14,240 --> 00:21:17,120
ips application control and we will

492
00:21:17,120 --> 00:21:19,440
actually gather all the information

493
00:21:19,440 --> 00:21:22,480
without disrupting traffic so at least

494
00:21:22,480 --> 00:21:24,960
we have a complete knowledge and

495
00:21:24,960 --> 00:21:27,919
complete visibility of what is going on

496
00:21:27,919 --> 00:21:30,720
and what is laterally moving within one

497
00:21:30,720 --> 00:21:32,960
given subnet so our customer will like

498
00:21:32,960 --> 00:21:35,360
that feature and pretty much implement

499
00:21:35,360 --> 00:21:38,639
it in the wild

500
00:21:39,600 --> 00:21:41,520
another interesting feature which is

501
00:21:41,520 --> 00:21:43,440
embedded within 40 os so you don't have

502
00:21:43,440 --> 00:21:44,799
to pay for that it's something that

503
00:21:44,799 --> 00:21:47,760
comes embedded within um it's a small

504
00:21:47,760 --> 00:21:50,000
knack solution it has nothing to compare

505
00:21:50,000 --> 00:21:52,960
with fully dedicated uh huge knack

506
00:21:52,960 --> 00:21:55,760
solution the one we we know of we also

507
00:21:55,760 --> 00:21:58,320
have one our 14x solution nevertheless

508
00:21:58,320 --> 00:22:00,640
the idea here is to propose a small

509
00:22:00,640 --> 00:22:02,559
knack possibility

510
00:22:02,559 --> 00:22:05,760
of any given 40 os that has this 40

511
00:22:05,760 --> 00:22:08,640
switch layer 2 device under management

512
00:22:08,640 --> 00:22:11,200
by that the use case i've seen a lot

513
00:22:11,200 --> 00:22:12,480
within

514
00:22:12,480 --> 00:22:14,080
ics and ot

515
00:22:14,080 --> 00:22:16,640
was for the ics

516
00:22:16,640 --> 00:22:20,640
operators to actually knack their unused

517
00:22:20,640 --> 00:22:22,480
switch ports meaning by that that they

518
00:22:22,480 --> 00:22:24,720
will have deployment with for example a

519
00:22:24,720 --> 00:22:26,000
48

520
00:22:26,000 --> 00:22:29,200
port switch device in which they use up

521
00:22:29,200 --> 00:22:32,159
to 80 percent the 20 which remains they

522
00:22:32,159 --> 00:22:33,760
will actually knack

523
00:22:33,760 --> 00:22:37,280
these ports in order to either uh move

524
00:22:37,280 --> 00:22:40,240
and seat anybody that might connect this

525
00:22:40,240 --> 00:22:43,520
port into a dedicated vlan or request a

526
00:22:43,520 --> 00:22:45,360
user authentication

527
00:22:45,360 --> 00:22:48,320
if that's wanted

528
00:22:51,280 --> 00:22:53,600
sorting out industrial security services

529
00:22:53,600 --> 00:22:55,760
this is now a license that you'll have

530
00:22:55,760 --> 00:22:58,960
to enable onto your 40 os device if you

531
00:22:58,960 --> 00:23:00,080
want to

532
00:23:00,080 --> 00:23:01,360
control

533
00:23:01,360 --> 00:23:05,600
any ics and ot communication on the wire

534
00:23:05,600 --> 00:23:06,960
so

535
00:23:06,960 --> 00:23:08,799
here what we will do is that we will

536
00:23:08,799 --> 00:23:11,280
enable you with all the intelligence we

537
00:23:11,280 --> 00:23:14,559
know about uh ics and ot onto your 40 os

538
00:23:14,559 --> 00:23:16,400
system and you have the possibility to

539
00:23:16,400 --> 00:23:19,520
leverage two different uh utms modules

540
00:23:19,520 --> 00:23:22,240
so to speak so application control in

541
00:23:22,240 --> 00:23:23,760
which you will have the possibility to

542
00:23:23,760 --> 00:23:25,520
control exactly on the wire what's going

543
00:23:25,520 --> 00:23:27,840
on at the signature level i'll come to

544
00:23:27,840 --> 00:23:30,559
that uh in a few slides and virtual

545
00:23:30,559 --> 00:23:32,159
shielding which will provide you with

546
00:23:32,159 --> 00:23:34,240
the ability to virtually patch

547
00:23:34,240 --> 00:23:35,840
known vulnerable

548
00:23:35,840 --> 00:23:37,760
within the

549
00:23:37,760 --> 00:23:41,440
ics deployment um one very interesting

550
00:23:41,440 --> 00:23:42,240
uh

551
00:23:42,240 --> 00:23:45,200
thing on to 40 os is that you have the

552
00:23:45,200 --> 00:23:47,440
discretion to configure these security

553
00:23:47,440 --> 00:23:49,919
profiles up to your will meaning that

554
00:23:49,919 --> 00:23:50,960
that

555
00:23:50,960 --> 00:23:52,480
you can have plenty of these security

556
00:23:52,480 --> 00:23:54,799
profiles and you can mix and match at

557
00:23:54,799 --> 00:23:56,960
the policy level what security profile

558
00:23:56,960 --> 00:23:59,760
you want on that particular policy so if

559
00:23:59,760 --> 00:24:02,080
you want to craft for example read

560
00:24:02,080 --> 00:24:02,960
write

561
00:24:02,960 --> 00:24:05,120
operation from one end of the network

562
00:24:05,120 --> 00:24:06,480
toward a different end of the network

563
00:24:06,480 --> 00:24:08,320
you have the possibility to do so if you

564
00:24:08,320 --> 00:24:11,600
want to only allow read

565
00:24:11,600 --> 00:24:12,559
access

566
00:24:12,559 --> 00:24:15,200
onto any given ics protocol

567
00:24:15,200 --> 00:24:16,960
you might also have the possibility to

568
00:24:16,960 --> 00:24:20,559
do so quite handy and a very versatile

569
00:24:20,559 --> 00:24:23,600
possibility from 4s

570
00:24:23,600 --> 00:24:25,919
so now on to these

571
00:24:25,919 --> 00:24:27,279
industrial

572
00:24:27,279 --> 00:24:29,760
security services provided by fortiguard

573
00:24:29,760 --> 00:24:32,480
onto our 40 40os

574
00:24:32,480 --> 00:24:36,039
subsystems we provide currently uh

575
00:24:36,039 --> 00:24:39,200
1830 application control selectors so

576
00:24:39,200 --> 00:24:41,120
these are the type of selectors here

577
00:24:41,120 --> 00:24:42,080
into

578
00:24:42,080 --> 00:24:45,120
my example i've chosen to show you the

579
00:24:45,120 --> 00:24:47,919
three connects tristation

580
00:24:47,919 --> 00:24:51,120
protocol that we can control at the

581
00:24:51,120 --> 00:24:53,919
firewall level and the idea here is that

582
00:24:53,919 --> 00:24:56,400
every single line you can see here is

583
00:24:56,400 --> 00:24:58,640
something that you can put in your

584
00:24:58,640 --> 00:25:01,600
application control security profile and

585
00:25:01,600 --> 00:25:03,520
and that is quite impressive because you

586
00:25:03,520 --> 00:25:05,200
will have the possibility to really mix

587
00:25:05,200 --> 00:25:07,600
and match with any messaging from the

588
00:25:07,600 --> 00:25:10,480
ics protocol that you will want crossing

589
00:25:10,480 --> 00:25:13,360
your segmentation points

590
00:25:13,360 --> 00:25:16,440
so quite handy and as i said uh a lot of

591
00:25:16,440 --> 00:25:19,679
granularity offered by uh our fortiguard

592
00:25:19,679 --> 00:25:23,279
uh labs individuals um same applies to

593
00:25:23,279 --> 00:25:25,120
uh and comes with that particular

594
00:25:25,120 --> 00:25:27,760
license bundle um the same applied to

595
00:25:27,760 --> 00:25:31,200
the ips side of the uh

596
00:25:31,200 --> 00:25:32,960
ics and ot offering

597
00:25:32,960 --> 00:25:35,360
so we have of course uh virtual patching

598
00:25:35,360 --> 00:25:36,880
signatures that will patch

599
00:25:36,880 --> 00:25:39,279
non-vulnerable device up to today we

600
00:25:39,279 --> 00:25:40,840
have

601
00:25:40,840 --> 00:25:42,720
540 ot

602
00:25:42,720 --> 00:25:45,760
and ics dedicated ips selector virtually

603
00:25:45,760 --> 00:25:46,880
shielding

604
00:25:46,880 --> 00:25:49,200
non-vulnerable assets and this is

605
00:25:49,200 --> 00:25:52,559
counting we work on on providing new

606
00:25:52,559 --> 00:25:55,919
ips signatures on a daily base so if we

607
00:25:55,919 --> 00:25:59,039
are being aware of anything that uh

608
00:25:59,039 --> 00:26:00,320
uh

609
00:26:00,320 --> 00:26:03,279
might be a known uh vulnerability or

610
00:26:03,279 --> 00:26:05,440
even sometimes we we are pinned from uh

611
00:26:05,440 --> 00:26:07,760
manufacturers in order to protect their

612
00:26:07,760 --> 00:26:10,559
known vulnerability that they dissolve

613
00:26:10,559 --> 00:26:13,200
within closed ground so to speak

614
00:26:13,200 --> 00:26:15,919
within 40 guard and different

615
00:26:15,919 --> 00:26:18,240
threat intelligent services we will of

616
00:26:18,240 --> 00:26:22,400
course provide that to our customer base

617
00:26:23,200 --> 00:26:27,200
now another interesting topic within ics

618
00:26:27,200 --> 00:26:29,440
it's called remote access so there's

619
00:26:29,440 --> 00:26:31,760
plenty of different possibility to scan

620
00:26:31,760 --> 00:26:34,240
a gap within remote access

621
00:26:34,240 --> 00:26:36,000
at fortinet we we provide different

622
00:26:36,000 --> 00:26:38,240
possibilities to host remote access so

623
00:26:38,240 --> 00:26:41,279
whether you'll want to go with ssl vpn

624
00:26:41,279 --> 00:26:44,000
ipsec tunneling fat client with 40

625
00:26:44,000 --> 00:26:46,000
client etc there's plenty of different

626
00:26:46,000 --> 00:26:48,480
ways to to handle that one interesting

627
00:26:48,480 --> 00:26:51,039
way as well is our

628
00:26:51,039 --> 00:26:53,760
web portal in which um this is a

629
00:26:53,760 --> 00:26:56,159
complete clientless solution that will

630
00:26:56,159 --> 00:26:58,559
provide remote access to any given

631
00:26:58,559 --> 00:27:00,960
customers the idea here is that within

632
00:27:00,960 --> 00:27:03,240
the security fabric you see here the

633
00:27:03,240 --> 00:27:06,559
4840 was on the edge a naughty

634
00:27:06,559 --> 00:27:09,200
protecting ot boundary based 40os as

635
00:27:09,200 --> 00:27:10,559
well

636
00:27:10,559 --> 00:27:12,720
we have the possibility to host these

637
00:27:12,720 --> 00:27:16,080
remote access possibilities without

638
00:27:16,080 --> 00:27:19,200
enforcing any client-based

639
00:27:19,200 --> 00:27:22,159
requirements on to the given third-party

640
00:27:22,159 --> 00:27:24,159
user so um

641
00:27:24,159 --> 00:27:26,320
basically what we will need here is just

642
00:27:26,320 --> 00:27:28,720
a web browser a set of credentials and a

643
00:27:28,720 --> 00:27:31,360
two-form factor uh token which is

644
00:27:31,360 --> 00:27:33,919
provided here by our 40 token platform

645
00:27:33,919 --> 00:27:36,240
and we will be able to interface what

646
00:27:36,240 --> 00:27:37,039
the

647
00:27:37,039 --> 00:27:39,039
security administrator has configured

648
00:27:39,039 --> 00:27:41,360
for us in order to access

649
00:27:41,360 --> 00:27:43,600
remote subsystems

650
00:27:43,600 --> 00:27:45,679
again as well something very versatile

651
00:27:45,679 --> 00:27:47,600
you have very different possibility to

652
00:27:47,600 --> 00:27:49,600
interface here the example illustrate

653
00:27:49,600 --> 00:27:51,440
for example a user repository which is

654
00:27:51,440 --> 00:27:54,240
commonly based on two windows domain

655
00:27:54,240 --> 00:27:56,960
controllers so addressing these windows

656
00:27:56,960 --> 00:28:00,000
domain controllers to ldap ldap s

657
00:28:00,000 --> 00:28:00,960
anyways

658
00:28:00,960 --> 00:28:03,520
whatever your user repository might be

659
00:28:03,520 --> 00:28:06,159
our photo authenticator will have uh

660
00:28:06,159 --> 00:28:08,799
most certainly the ability to address

661
00:28:08,799 --> 00:28:11,919
your user repository and add that second

662
00:28:11,919 --> 00:28:14,960
factor layer that is sought after within

663
00:28:14,960 --> 00:28:18,559
the ics and ot another important factor

664
00:28:18,559 --> 00:28:20,880
is that obviously of course all these

665
00:28:20,880 --> 00:28:22,320
embodying

666
00:28:22,320 --> 00:28:25,120
communication toward the edge 40 os is

667
00:28:25,120 --> 00:28:26,399
completely

668
00:28:26,399 --> 00:28:27,760
under continuity so we have the

669
00:28:27,760 --> 00:28:30,320
possibility to enable ips application

670
00:28:30,320 --> 00:28:32,159
control threat lists for example if you

671
00:28:32,159 --> 00:28:33,520
want to deny

672
00:28:33,520 --> 00:28:35,919
any inbounding communication from known

673
00:28:35,919 --> 00:28:36,960
threats

674
00:28:36,960 --> 00:28:38,399
and furthermore we still have the

675
00:28:38,399 --> 00:28:41,120
possibility as well onto fort us to for

676
00:28:41,120 --> 00:28:42,480
example ship

677
00:28:42,480 --> 00:28:44,880
ssl deciphered traffic so that is a

678
00:28:44,880 --> 00:28:46,559
quite handy feature as well because you

679
00:28:46,559 --> 00:28:49,120
have the possibility on to your policy

680
00:28:49,120 --> 00:28:52,000
to enable for example uh deciphered

681
00:28:52,000 --> 00:28:54,559
traffic being shipped toward a cm

682
00:28:54,559 --> 00:28:57,760
platform of your choice or a third-party

683
00:28:57,760 --> 00:29:01,279
idps solution of your choice as well so

684
00:29:01,279 --> 00:29:05,360
quite a handy feature here as well

685
00:29:05,679 --> 00:29:08,399
on to the advanced threat protection and

686
00:29:08,399 --> 00:29:10,320
cyber deception let me dissect a little

687
00:29:10,320 --> 00:29:12,399
bit what 40 deceptor is

688
00:29:12,399 --> 00:29:14,559
40 sector is a platform that we came

689
00:29:14,559 --> 00:29:17,919
with a few years ago it's uh our on

690
00:29:17,919 --> 00:29:19,760
import solution so to speak

691
00:29:19,760 --> 00:29:22,880
we have plenty of decoys available

692
00:29:22,880 --> 00:29:26,080
within uh 40 deceptor i'll list them

693
00:29:26,080 --> 00:29:29,200
here so obviously mainly here

694
00:29:29,200 --> 00:29:31,840
the scada and ics decoys we have

695
00:29:31,840 --> 00:29:36,000
rockwell ethernet ips cmn s7 bacnet epm

696
00:29:36,000 --> 00:29:39,840
epmi modules modbus simulations etc all

697
00:29:39,840 --> 00:29:43,120
these decoys are deployable uh to your

698
00:29:43,120 --> 00:29:45,200
convenience so it's like deploying a

699
00:29:45,200 --> 00:29:47,760
virtual machine which will be a decoy

700
00:29:47,760 --> 00:29:49,840
deployed within your network so you can

701
00:29:49,840 --> 00:29:52,000
address whatever part of the network

702
00:29:52,000 --> 00:29:54,320
your 40 deceptor appliance might be

703
00:29:54,320 --> 00:29:55,520
installed in

704
00:29:55,520 --> 00:29:58,159
we also provide a few iot decoys for the

705
00:29:58,159 --> 00:30:00,480
typing we have uh simulated ip cameras

706
00:30:00,480 --> 00:30:03,919
cisco routers printers etc the complete

707
00:30:03,919 --> 00:30:06,720
artillery of windows operating systems

708
00:30:06,720 --> 00:30:11,919
so from 7 to 2019 uh lately a linux

709
00:30:11,919 --> 00:30:13,679
subsystem that you can deploy as well as

710
00:30:13,679 --> 00:30:15,600
decoys and

711
00:30:15,600 --> 00:30:17,919
obviously of course all the services smb

712
00:30:17,919 --> 00:30:21,200
sql rdp and all the applications

713
00:30:21,200 --> 00:30:23,679
that are commonly deployed onto decoys

714
00:30:23,679 --> 00:30:27,039
we also help our customer with the uh

715
00:30:27,039 --> 00:30:28,720
honey token in

716
00:30:28,720 --> 00:30:30,960
the fact that you will have the

717
00:30:30,960 --> 00:30:33,440
possibility to inter exchange with live

718
00:30:33,440 --> 00:30:36,399
subsystems within your network uh within

719
00:30:36,399 --> 00:30:38,799
the decoys and live system meaning that

720
00:30:38,799 --> 00:30:41,120
communication will happen in between

721
00:30:41,120 --> 00:30:43,840
real systems and the decoy making the

722
00:30:43,840 --> 00:30:46,320
decoy more interesting for anybody that

723
00:30:46,320 --> 00:30:48,559
might will want to engage communication

724
00:30:48,559 --> 00:30:52,240
with the decoys and another funny

725
00:30:52,240 --> 00:30:55,520
one that i like here is the 40os ssl vpn

726
00:30:55,520 --> 00:30:57,840
decoy so this one is quite interesting

727
00:30:57,840 --> 00:30:59,679
because you will have the possibility to

728
00:30:59,679 --> 00:31:04,559
enable a false ssl vpn onto your

729
00:31:04,559 --> 00:31:07,200
headband or edge

730
00:31:07,200 --> 00:31:10,399
standpoint and track and see who is

731
00:31:10,399 --> 00:31:12,559
wanting to engage communication with

732
00:31:12,559 --> 00:31:13,919
your

733
00:31:13,919 --> 00:31:16,480
false or lured slvpn

734
00:31:16,480 --> 00:31:19,440
decoy so an interesting one um

735
00:31:19,440 --> 00:31:21,039
of course obviously we didn't 40

736
00:31:21,039 --> 00:31:23,279
deceptor we will stack the 40 card

737
00:31:23,279 --> 00:31:25,279
intelligence within the decoys meaning

738
00:31:25,279 --> 00:31:27,840
by that that antivirus and ips engine

739
00:31:27,840 --> 00:31:29,760
will be embedded within the decoy so

740
00:31:29,760 --> 00:31:32,320
anyone which might drop a payload onto

741
00:31:32,320 --> 00:31:35,600
one of these decoy um we will launch the

742
00:31:35,600 --> 00:31:38,080
artillery of our fortiguard intelligence

743
00:31:38,080 --> 00:31:40,799
in order to possibly match uh already

744
00:31:40,799 --> 00:31:44,000
something onto that uh disposal on any

745
00:31:44,000 --> 00:31:46,799
decoy and you will be of course informed

746
00:31:46,799 --> 00:31:49,519
in real time uh onto

747
00:31:49,519 --> 00:31:52,640
the attacking and attacker activity

748
00:31:52,640 --> 00:31:57,679
and we provide correlated campaigns

749
00:31:58,480 --> 00:32:01,200
here just a view of what the appliance

750
00:32:01,200 --> 00:32:03,519
will give you so i think it's quite an

751
00:32:03,519 --> 00:32:06,080
interesting small view of that we see

752
00:32:06,080 --> 00:32:07,840
here that uh the communication engage

753
00:32:07,840 --> 00:32:09,039
with the decoy will give you the

754
00:32:09,039 --> 00:32:11,600
possibility to download a pcap so you'll

755
00:32:11,600 --> 00:32:14,159
have all the the p-capped traffic

756
00:32:14,159 --> 00:32:17,200
analysis onto that exchange toward any

757
00:32:17,200 --> 00:32:20,399
given possible opponent and the decoy

758
00:32:20,399 --> 00:32:22,559
so that is one possibility and obviously

759
00:32:22,559 --> 00:32:24,799
as you can see here the ips attack that

760
00:32:24,799 --> 00:32:28,000
matched one of our ips filter will also

761
00:32:28,000 --> 00:32:30,320
be reported within

762
00:32:30,320 --> 00:32:34,480
the given incident reports

763
00:32:35,039 --> 00:32:37,440
our sandboxing subsystem i talked about

764
00:32:37,440 --> 00:32:40,320
it within a few slides and how you can

765
00:32:40,320 --> 00:32:41,760
enable that

766
00:32:41,760 --> 00:32:44,559
so the idea of sandboxing is to take

767
00:32:44,559 --> 00:32:46,880
submissions and detonate these

768
00:32:46,880 --> 00:32:49,360
submissions

769
00:32:49,360 --> 00:32:51,200
through a few

770
00:32:51,200 --> 00:32:53,760
embedding filters and

771
00:32:53,760 --> 00:32:54,960
the

772
00:32:54,960 --> 00:32:56,720
sandbox ecosystem is actually

773
00:32:56,720 --> 00:32:59,279
interoperable within the security fabric

774
00:32:59,279 --> 00:33:01,760
from a standpoint of for example any

775
00:33:01,760 --> 00:33:03,039
fortigate can

776
00:33:03,039 --> 00:33:05,760
ship submission submission sorry to the

777
00:33:05,760 --> 00:33:09,760
47box subsystem 40mail 40web 40 client

778
00:33:09,760 --> 00:33:11,919
we have integration with 4cm in order to

779
00:33:11,919 --> 00:33:14,559
ship syslogs to our cm device and of

780
00:33:14,559 --> 00:33:16,640
course obviously we can log

781
00:33:16,640 --> 00:33:19,200
all the activity of the 47box ecosystem

782
00:33:19,200 --> 00:33:23,440
toward our 40 analyzer subsystem

783
00:33:23,440 --> 00:33:25,760
here is a view of

784
00:33:25,760 --> 00:33:27,120
how that subsystem is actually

785
00:33:27,120 --> 00:33:29,840
functioning and and uh what is actually

786
00:33:29,840 --> 00:33:31,840
going on within uh the complete

787
00:33:31,840 --> 00:33:34,159
subsystem i'll speed up a little bit but

788
00:33:34,159 --> 00:33:36,080
uh interestingly you have the

789
00:33:36,080 --> 00:33:38,320
possibility to tap traffic so wherever

790
00:33:38,320 --> 00:33:40,000
your sandbox might be within your

791
00:33:40,000 --> 00:33:41,919
installment you have the possibility to

792
00:33:41,919 --> 00:33:45,039
engage with a span port and send all the

793
00:33:45,039 --> 00:33:46,640
traffic to the sandboxing subsystem if

794
00:33:46,640 --> 00:33:48,000
so you want

795
00:33:48,000 --> 00:33:50,080
the fabric devices as you can see with

796
00:33:50,080 --> 00:33:52,240
the fleece of fortigate devices will

797
00:33:52,240 --> 00:33:54,480
integrate at the device

798
00:33:54,480 --> 00:33:56,640
input standpoint another another

799
00:33:56,640 --> 00:33:58,159
interesting one is the network share

800
00:33:58,159 --> 00:34:00,159
i'll detail that a little bit further on

801
00:34:00,159 --> 00:34:02,799
the adapters here are for icap

802
00:34:02,799 --> 00:34:04,880
submissions for example

803
00:34:04,880 --> 00:34:07,600
we also will find here bcc uh

804
00:34:07,600 --> 00:34:09,440
connectivity possibility from any mail

805
00:34:09,440 --> 00:34:11,520
system if you want to send every single

806
00:34:11,520 --> 00:34:14,639
email through bcc and the mta

807
00:34:14,639 --> 00:34:17,199
agent possible onto the 40 sandbox

808
00:34:17,199 --> 00:34:19,918
subsystem as well the on demand and url

809
00:34:19,918 --> 00:34:21,679
detection this is something that an

810
00:34:21,679 --> 00:34:23,839
administrator will do manually on the

811
00:34:23,839 --> 00:34:26,399
system so it's also available here um

812
00:34:26,399 --> 00:34:27,839
the idea is

813
00:34:27,839 --> 00:34:31,440
here on the the 47burst component is to

814
00:34:31,440 --> 00:34:33,679
as quickly as possible get rid of the

815
00:34:33,679 --> 00:34:35,599
submission so to speak so as quickly as

816
00:34:35,599 --> 00:34:37,679
we can match that the submission is

817
00:34:37,679 --> 00:34:38,560
either

818
00:34:38,560 --> 00:34:40,719
something which is uh

819
00:34:40,719 --> 00:34:43,679
malicious or something which is clean uh

820
00:34:43,679 --> 00:34:45,918
we will do that with the

821
00:34:45,918 --> 00:34:49,280
the most accurate way and i said going

822
00:34:49,280 --> 00:34:51,040
through the filter in order to release

823
00:34:51,040 --> 00:34:53,760
the queue of potential jobs coming into

824
00:34:53,760 --> 00:34:55,760
the 40 cent box of system one of the

825
00:34:55,760 --> 00:34:58,640
last stage you can see here the vm ai

826
00:34:58,640 --> 00:35:01,359
scan this is where we will detonate the

827
00:35:01,359 --> 00:35:03,440
submission within a given virtual

828
00:35:03,440 --> 00:35:05,760
machine and let that submission do

829
00:35:05,760 --> 00:35:09,119
exactly for example a win pe file uh let

830
00:35:09,119 --> 00:35:11,119
that win pe file do exactly what he

831
00:35:11,119 --> 00:35:13,920
wants to do on to that circumvented

832
00:35:13,920 --> 00:35:16,640
environment with internet access and

833
00:35:16,640 --> 00:35:18,560
record every single thing that that

834
00:35:18,560 --> 00:35:20,960
particular submission will do and then

835
00:35:20,960 --> 00:35:23,680
once we have all this information uh

836
00:35:23,680 --> 00:35:26,800
match a verdict onto that submission the

837
00:35:26,800 --> 00:35:28,480
other interesting information and last

838
00:35:28,480 --> 00:35:31,040
one i will talk to you about here is the

839
00:35:31,040 --> 00:35:33,440
update of the malware db that you can

840
00:35:33,440 --> 00:35:35,920
see here so whenever our 40 sandbox

841
00:35:35,920 --> 00:35:38,400
might find something malicious

842
00:35:38,400 --> 00:35:40,960
at one end of the network we will update

843
00:35:40,960 --> 00:35:44,240
the malware db of your fleets of 48 so

844
00:35:44,240 --> 00:35:46,000
if something is actually detected at one

845
00:35:46,000 --> 00:35:48,400
end of the network uh that information

846
00:35:48,400 --> 00:35:51,599
is spread apart onto all and every

847
00:35:51,599 --> 00:35:53,119
single 40 us

848
00:35:53,119 --> 00:35:56,320
platform another important factor for

849
00:35:56,320 --> 00:35:58,560
ics and ot

850
00:35:58,560 --> 00:36:00,560
interested customers we have what is

851
00:36:00,560 --> 00:36:02,880
called this ot companion vm which will

852
00:36:02,880 --> 00:36:05,680
be something that will detonate along

853
00:36:05,680 --> 00:36:08,480
the virtual machines into the vm scans

854
00:36:08,480 --> 00:36:11,119
meaning by that that if there is any uh

855
00:36:11,119 --> 00:36:14,079
interaction at dot level uh using for

856
00:36:14,079 --> 00:36:16,480
example layer two type of communications

857
00:36:16,480 --> 00:36:19,599
or any given modbus ico 104 type of

858
00:36:19,599 --> 00:36:21,280
communication we will record that

859
00:36:21,280 --> 00:36:23,839
through the companion vm and we'll give

860
00:36:23,839 --> 00:36:26,000
you all these informations within the

861
00:36:26,000 --> 00:36:28,160
verdict

862
00:36:28,160 --> 00:36:30,880
one use case which will uh

863
00:36:30,880 --> 00:36:33,520
summarize all the possibilities we have

864
00:36:33,520 --> 00:36:35,920
with using remote access plus for this

865
00:36:35,920 --> 00:36:38,240
unboxing for example here the idea is

866
00:36:38,240 --> 00:36:39,040
that

867
00:36:39,040 --> 00:36:40,960
our third-party

868
00:36:40,960 --> 00:36:43,760
remote user remote engineer will have

869
00:36:43,760 --> 00:36:45,680
the possibility to engage an rdp session

870
00:36:45,680 --> 00:36:47,280
to the engineering workstation which you

871
00:36:47,280 --> 00:36:49,599
see here will have the possibility to

872
00:36:49,599 --> 00:36:52,400
engage an ssh session toward an id

873
00:36:52,400 --> 00:36:54,480
within the ot

874
00:36:54,480 --> 00:36:56,960
authentication boundary now that this

875
00:36:56,960 --> 00:36:59,280
has been said uh that individual won't

876
00:36:59,280 --> 00:37:01,280
have the possibility to upload anything

877
00:37:01,280 --> 00:37:03,760
onto that particular rdp session neither

878
00:37:03,760 --> 00:37:06,400
will he have the possibility to do so

879
00:37:06,400 --> 00:37:09,200
onto the ssh session so how will he for

880
00:37:09,200 --> 00:37:11,520
example if we take for example a third

881
00:37:11,520 --> 00:37:13,520
party engineer a remote engineer that

882
00:37:13,520 --> 00:37:16,560
needs to do something within the ot

883
00:37:16,560 --> 00:37:17,920
installment

884
00:37:17,920 --> 00:37:20,480
he needs to update the firmware to to to

885
00:37:20,480 --> 00:37:22,960
dispose some codes within that

886
00:37:22,960 --> 00:37:24,720
installment in order to conduct its

887
00:37:24,720 --> 00:37:27,599
operation but we want to make sure that

888
00:37:27,599 --> 00:37:31,280
this code passes every single potential

889
00:37:31,280 --> 00:37:34,079
checkpoints we have available so the

890
00:37:34,079 --> 00:37:36,240
idea here is that the remote user will

891
00:37:36,240 --> 00:37:38,880
face a third party upload repository

892
00:37:38,880 --> 00:37:41,520
this is exactly what i refer to with the

893
00:37:41,520 --> 00:37:43,119
network share onto the sandboxing

894
00:37:43,119 --> 00:37:45,359
subsystem so this is a network share the

895
00:37:45,359 --> 00:37:48,000
sandbox will actually continuously scan

896
00:37:48,000 --> 00:37:50,400
that third-party upload repository and

897
00:37:50,400 --> 00:37:53,280
upon verdicting will dispatch

898
00:37:53,280 --> 00:37:56,240
the files which are known good

899
00:37:56,240 --> 00:37:59,280
into its final destination so here our

900
00:37:59,280 --> 00:38:01,920
engineering workstation and if any of

901
00:38:01,920 --> 00:38:03,920
these files match

902
00:38:03,920 --> 00:38:06,720
as being malicious of course we will

903
00:38:06,720 --> 00:38:08,960
quantify these contents and we will

904
00:38:08,960 --> 00:38:11,920
inform the user through a simple text

905
00:38:11,920 --> 00:38:14,000
file within the final repository there

906
00:38:14,000 --> 00:38:16,720
that its uploaded file hasn't made it

907
00:38:16,720 --> 00:38:18,800
through uh the final repository because

908
00:38:18,800 --> 00:38:21,520
it contained some malicious contents etc

909
00:38:21,520 --> 00:38:24,640
and so on so a use case is it's often

910
00:38:24,640 --> 00:38:26,560
used in in the wild in in order to

911
00:38:26,560 --> 00:38:29,920
control uh inbound file for uh ics and

912
00:38:29,920 --> 00:38:32,079
ot customers

913
00:38:32,079 --> 00:38:34,079
uh i think i

914
00:38:34,079 --> 00:38:36,160
i have a lack of time but i have plenty

915
00:38:36,160 --> 00:38:36,960
of

916
00:38:36,960 --> 00:38:38,000
of

917
00:38:38,000 --> 00:38:40,480
not plenty but a few other slides uh

918
00:38:40,480 --> 00:38:42,640
i'll actually skip that one 40 manager

919
00:38:42,640 --> 00:38:43,920
we've seen

920
00:38:43,920 --> 00:38:46,320
maybe this one is interesting uh some of

921
00:38:46,320 --> 00:38:49,839
our customers they like to to still keep

922
00:38:49,839 --> 00:38:53,680
what they called the air gap so

923
00:38:53,680 --> 00:38:55,440
their gap is a complete lack of

924
00:38:55,440 --> 00:38:58,560
connectivity from their ics installment

925
00:38:58,560 --> 00:39:00,720
so they won't have external facing

926
00:39:00,720 --> 00:39:03,520
connectivity from the ot

927
00:39:03,520 --> 00:39:06,640
layers and we have a solution for that

928
00:39:06,640 --> 00:39:09,520
at 40 net which is through our

929
00:39:09,520 --> 00:39:12,240
management platform in order to provide

930
00:39:12,240 --> 00:39:15,280
local uh 40 guard distribution server

931
00:39:15,280 --> 00:39:16,880
meaning by that that you will have all

932
00:39:16,880 --> 00:39:19,280
the updates so you can either

933
00:39:19,280 --> 00:39:21,200
let that 40 manager retrieve these

934
00:39:21,200 --> 00:39:24,160
updates uh in a very circumstanted

935
00:39:24,160 --> 00:39:27,040
manner or you can alternatively

936
00:39:27,040 --> 00:39:29,280
conduct manual updates on your 40

937
00:39:29,280 --> 00:39:31,760
manager platform which will push all

938
00:39:31,760 --> 00:39:34,800
these updates uh toward a

939
00:39:34,800 --> 00:39:37,280
deployment where you don't have outbound

940
00:39:37,280 --> 00:39:39,599
reachability another interesting factor

941
00:39:39,599 --> 00:39:41,760
is that not only will we push that for

942
00:39:41,760 --> 00:39:45,440
40 os but we support uh of course the 40

943
00:39:45,440 --> 00:39:48,000
os 40 proxy for example all the updates

944
00:39:48,000 --> 00:39:50,560
going to our 40 cent box of system uh

945
00:39:50,560 --> 00:39:52,800
all the updates going to 40 clients of

946
00:39:52,800 --> 00:39:55,119
system are also supported by 40 managers

947
00:39:55,119 --> 00:39:57,839
so if your customer will really want not

948
00:39:57,839 --> 00:39:59,920
to have outbound connectivity it's

949
00:39:59,920 --> 00:40:02,480
something which is possible with that

950
00:40:02,480 --> 00:40:04,640
particular deployment

951
00:40:04,640 --> 00:40:06,720
for generalizer i think i'll skip that

952
00:40:06,720 --> 00:40:09,599
and yeah let's go to the forties here

953
00:40:09,599 --> 00:40:11,920
there's a few use cases that we we've

954
00:40:11,920 --> 00:40:14,400
seen um into into

955
00:40:14,400 --> 00:40:17,599
some of the deployments with 40 cm um

956
00:40:17,599 --> 00:40:20,160
the the interesting idea here is that

957
00:40:20,160 --> 00:40:23,280
for four customers that might already be

958
00:40:23,280 --> 00:40:25,680
fortinet customers for most of them they

959
00:40:25,680 --> 00:40:28,640
already have the 40 analyzer platform

960
00:40:28,640 --> 00:40:31,839
what we do in such cases is that we have

961
00:40:31,839 --> 00:40:34,000
the possibility to literally integrate

962
00:40:34,000 --> 00:40:35,359
40cm

963
00:40:35,359 --> 00:40:37,280
in their installment within minutes

964
00:40:37,280 --> 00:40:40,079
because we will use a lock forward from

965
00:40:40,079 --> 00:40:42,160
the first platform directly within the

966
00:40:42,160 --> 00:40:45,040
cm so this is one tunnel from fort

967
00:40:45,040 --> 00:40:48,480
analyzer 240 cm and where we will ship

968
00:40:48,480 --> 00:40:50,880
already all the logs from the 14

969
00:40:50,880 --> 00:40:53,599
fortinet security fabric and have that

970
00:40:53,599 --> 00:40:57,520
uh into our cm platform um of course we

971
00:40:57,520 --> 00:41:01,119
offer the 14th cyber security uh

972
00:41:01,119 --> 00:41:03,920
fabric view that you can see here

973
00:41:03,920 --> 00:41:06,319
that's embedded within 40 cm and you

974
00:41:06,319 --> 00:41:07,599
have plenty of different cm

975
00:41:07,599 --> 00:41:09,920
possibilities namely a use case i had

976
00:41:09,920 --> 00:41:12,240
was for one customer that really wanted

977
00:41:12,240 --> 00:41:15,680
to send a very dedicated type of snmp

978
00:41:15,680 --> 00:41:19,040
traps toward an snmp enabled subsystem

979
00:41:19,040 --> 00:41:21,920
that he couldn't actually do so from the

980
00:41:21,920 --> 00:41:23,599
device originally we have the

981
00:41:23,599 --> 00:41:25,920
possibility for example within 4cm to to

982
00:41:25,920 --> 00:41:28,480
leverage such use cases conduct some

983
00:41:28,480 --> 00:41:31,280
incident and from this incident

984
00:41:31,280 --> 00:41:34,319
in the occurrence of such incidents send

985
00:41:34,319 --> 00:41:37,760
snmp traps uh in in for example

986
00:41:37,760 --> 00:41:38,560
uh

987
00:41:38,560 --> 00:41:41,200
last slide on that um

988
00:41:41,200 --> 00:41:43,200
interesting use cases you you see here i

989
00:41:43,200 --> 00:41:45,760
don't know if you can read that but

990
00:41:45,760 --> 00:41:48,319
we see a permitted traffic in belting

991
00:41:48,319 --> 00:41:51,200
which has matched the e40

992
00:41:51,200 --> 00:41:53,839
card malicious threat list so this is

993
00:41:53,839 --> 00:41:56,400
embedded within 40 cm and directly after

994
00:41:56,400 --> 00:41:58,960
we see the host which is quarantined by

995
00:41:58,960 --> 00:42:01,599
our knack feature so this is a host

996
00:42:01,599 --> 00:42:05,040
quarantine uh enabled at the 40 os uh

997
00:42:05,040 --> 00:42:07,200
layer the interesting part here is that

998
00:42:07,200 --> 00:42:09,440
all this is correlated and you have all

999
00:42:09,440 --> 00:42:11,839
this information into a blink of an eye

1000
00:42:11,839 --> 00:42:14,319
so the dcm platform is really something

1001
00:42:14,319 --> 00:42:16,079
that that will help you at getting a

1002
00:42:16,079 --> 00:42:18,720
grasp onto whatever is actually going on

1003
00:42:18,720 --> 00:42:22,079
within your networks um of course we can

1004
00:42:22,079 --> 00:42:24,400
integrate tread feed so as you can see

1005
00:42:24,400 --> 00:42:27,280
here i named a few uh alien volt otx

1006
00:42:27,280 --> 00:42:29,119
threat streams

1007
00:42:29,119 --> 00:42:30,560
threat connects

1008
00:42:30,560 --> 00:42:32,640
there's plenty of integration you can do

1009
00:42:32,640 --> 00:42:34,800
so if some of these threat streams are

1010
00:42:34,800 --> 00:42:36,880
interesting for you and you want to

1011
00:42:36,880 --> 00:42:39,520
inject this information within your cm

1012
00:42:39,520 --> 00:42:43,599
installment it's perfectly doable

1013
00:42:43,680 --> 00:42:45,920
and that's it i think i'll just detail a

1014
00:42:45,920 --> 00:42:48,720
little bit uh what type of uh ecosystem

1015
00:42:48,720 --> 00:42:50,800
we currently have and on what we are

1016
00:42:50,800 --> 00:42:52,640
working so basically when we will talk

1017
00:42:52,640 --> 00:42:54,880
about fabric connectors these connectors

1018
00:42:54,880 --> 00:42:57,760
are connected that are actually made by

1019
00:42:57,760 --> 00:42:59,520
fortinet in order to interface a

1020
00:42:59,520 --> 00:43:01,760
different uh type of technology you have

1021
00:43:01,760 --> 00:43:04,720
some technology vendors here aruba cisco

1022
00:43:04,720 --> 00:43:07,599
uh servicenow for example so these are

1023
00:43:07,599 --> 00:43:10,240
the technology connectors we at fortinet

1024
00:43:10,240 --> 00:43:11,680
are developing

1025
00:43:11,680 --> 00:43:13,040
we also

1026
00:43:13,040 --> 00:43:15,599
talk a lot about the fabric api

1027
00:43:15,599 --> 00:43:18,400
integrations this is where the third

1028
00:43:18,400 --> 00:43:20,640
party vendor for example

1029
00:43:20,640 --> 00:43:22,480
arista nozomi

1030
00:43:22,480 --> 00:43:24,000
siemens

1031
00:43:24,000 --> 00:43:25,119
dragoos

1032
00:43:25,119 --> 00:43:28,480
etc are developing their integration

1033
00:43:28,480 --> 00:43:31,760
with our product through the leverage of

1034
00:43:31,760 --> 00:43:35,440
our fabric apis so that is quite common

1035
00:43:35,440 --> 00:43:36,480
we have for some of them

1036
00:43:36,480 --> 00:43:39,440
state-of-the-art integrations

1037
00:43:39,440 --> 00:43:41,599
which which are really uh

1038
00:43:41,599 --> 00:43:43,760
interesting use cases for the given

1039
00:43:43,760 --> 00:43:45,760
customers that want to integrate such

1040
00:43:45,760 --> 00:43:48,240
type of third party uh

1041
00:43:48,240 --> 00:43:50,880
possibility with different subsystems

1042
00:43:50,880 --> 00:43:52,960
if eric devops this is a community

1043
00:43:52,960 --> 00:43:55,599
driven devops possibility of led bio

1044
00:43:55,599 --> 00:43:58,400
forty net we have the fortunate

1045
00:43:58,400 --> 00:44:00,960
developer network platform on which uh

1046
00:44:00,960 --> 00:44:03,440
developers can exchange uh their ideas

1047
00:44:03,440 --> 00:44:06,319
and different scripts etc

1048
00:44:06,319 --> 00:44:08,319
plus all the security provisioning and

1049
00:44:08,319 --> 00:44:10,800
configuration and orchestration possible

1050
00:44:10,800 --> 00:44:13,359
at that layer and finally the extended

1051
00:44:13,359 --> 00:44:15,440
ecosystem this is mainly where we will

1052
00:44:15,440 --> 00:44:17,520
exchange threats so as you can see the

1053
00:44:17,520 --> 00:44:19,440
cyber threat alliance

1054
00:44:19,440 --> 00:44:23,520
the ot or cyber security alliance and

1055
00:44:23,520 --> 00:44:25,040
all such kind of

1056
00:44:25,040 --> 00:44:28,880
threat exchange possibilities

1057
00:44:29,440 --> 00:44:31,760
the operational technology ecosystem i

1058
00:44:31,760 --> 00:44:34,560
won't go into much detail in here

1059
00:44:34,560 --> 00:44:36,880
there's plenty of integration so so

1060
00:44:36,880 --> 00:44:38,800
these type of integration are exactly

1061
00:44:38,800 --> 00:44:41,839
the one which falls into the ip api

1062
00:44:41,839 --> 00:44:44,960
integration uh that we saw earlier uh

1063
00:44:44,960 --> 00:44:46,720
there's plenty of different actors that

1064
00:44:46,720 --> 00:44:48,800
that you are seeing here uh i'll just

1065
00:44:48,800 --> 00:44:51,200
take one example the siemens regitcom

1066
00:44:51,200 --> 00:44:53,680
that you can see up there which was an

1067
00:44:53,680 --> 00:44:55,200
interesting use case because they they

1068
00:44:55,200 --> 00:44:57,040
came up on the market with a solution

1069
00:44:57,040 --> 00:44:59,920
which is called rx 1500 and that

1070
00:44:59,920 --> 00:45:01,200
solution

1071
00:45:01,200 --> 00:45:03,760
is an industrial switching solution in

1072
00:45:03,760 --> 00:45:06,800
which they wanted to embed some compute

1073
00:45:06,800 --> 00:45:10,000
power and by that host

1074
00:45:10,000 --> 00:45:12,480
some cyber security possibilities within

1075
00:45:12,480 --> 00:45:14,800
that compute power and they actually

1076
00:45:14,800 --> 00:45:15,680
chose

1077
00:45:15,680 --> 00:45:18,400
40 us in order to embed that

1078
00:45:18,400 --> 00:45:20,960
into their devices that they will

1079
00:45:20,960 --> 00:45:24,000
provide to to their customer and in the

1080
00:45:24,000 --> 00:45:25,760
core of that solution for example the

1081
00:45:25,760 --> 00:45:28,240
40os is actually running

1082
00:45:28,240 --> 00:45:31,040
onto the solution vendors integration of

1083
00:45:31,040 --> 00:45:33,680
course we have plenty of solutions we we

1084
00:45:33,680 --> 00:45:36,480
are working a lot with schneider abb

1085
00:45:36,480 --> 00:45:40,079
siemens the yokogawa ge of course

1086
00:45:40,079 --> 00:45:42,160
in order to provide and enable cyber

1087
00:45:42,160 --> 00:45:45,359
security for their deployments

1088
00:45:45,359 --> 00:45:48,319
and mainly uh that's what i wanted to

1089
00:45:48,319 --> 00:45:50,400
share with you on that particular slide

1090
00:45:50,400 --> 00:45:53,280
and with that um i'm just leaving uh the

1091
00:45:53,280 --> 00:45:55,599
last slide of my presentation with the

1092
00:45:55,599 --> 00:45:58,160
uh fortinet security fabric vision that

1093
00:45:58,160 --> 00:45:59,079
we had

1094
00:45:59,079 --> 00:46:02,319
a couple of years ago i think we started

1095
00:46:02,319 --> 00:46:05,359
that in 2015 and the idea of course is

1096
00:46:05,359 --> 00:46:07,599
that every single potential product

1097
00:46:07,599 --> 00:46:10,319
within the fortinet security uh

1098
00:46:10,319 --> 00:46:13,839
portfolio uh actually interact uh

1099
00:46:13,839 --> 00:46:16,079
amongst one another and the central

1100
00:46:16,079 --> 00:46:18,880
piece of that being our faulty god uh

1101
00:46:18,880 --> 00:46:20,720
threat intelligence

1102
00:46:20,720 --> 00:46:22,560
so thank you very much for your

1103
00:46:22,560 --> 00:46:25,200
attention today sorry for my few channel

1104
00:46:25,200 --> 00:46:26,640
panics

1105
00:46:26,640 --> 00:46:30,000
um if there is any question in the

1106
00:46:30,000 --> 00:46:32,319
audience please just raise the hand i'm

1107
00:46:32,319 --> 00:46:36,079
up for any question don't be afraid and

1108
00:46:36,079 --> 00:46:38,880
thank you very much

1109
00:46:38,880 --> 00:46:43,619
[Applause]

