1
00:00:04,339 --> 00:00:07,140
all right so hi everyone and thank you

2
00:00:07,140 --> 00:00:08,820
for joining my name is dimitrios I'm

3
00:00:08,820 --> 00:00:10,679
from Greece and here are a few things

4
00:00:10,679 --> 00:00:11,820
about me

5
00:00:11,820 --> 00:00:13,320
so I'm engaged in computer security

6
00:00:13,320 --> 00:00:16,560
since 2002 I was actually a member of

7
00:00:16,560 --> 00:00:17,760
one of the first diverse engineering

8
00:00:17,760 --> 00:00:20,880
groups back in Greece and I started my

9
00:00:20,880 --> 00:00:22,439
career as a network security engineer

10
00:00:22,439 --> 00:00:24,180
then I moved into developing for about

11
00:00:24,180 --> 00:00:26,039
five years and the last five years I

12
00:00:26,039 --> 00:00:28,740
focused mainly on red security before I

13
00:00:28,740 --> 00:00:30,720
joined Microsoft's threat intelligence

14
00:00:30,720 --> 00:00:32,579
team as a senior security researcher I

15
00:00:32,579 --> 00:00:34,739
was leading a team which was conducting

16
00:00:34,739 --> 00:00:36,120
malware reviews for the Google Play

17
00:00:36,120 --> 00:00:36,960
Store

18
00:00:36,960 --> 00:00:40,079
and besides that I'm a father of two a

19
00:00:40,079 --> 00:00:42,600
boy and a girl I my free time I play

20
00:00:42,600 --> 00:00:45,719
music guitar piano I also think although

21
00:00:45,719 --> 00:00:47,640
there is a debate with my wife regarding

22
00:00:47,640 --> 00:00:50,280
this one so I didn't put it here all

23
00:00:50,280 --> 00:00:53,760
right so uh so before we start I just

24
00:00:53,760 --> 00:00:55,320
want to address a question which I get

25
00:00:55,320 --> 00:00:58,320
quite often when I during my my talks

26
00:00:58,320 --> 00:01:01,320
and this is uh

27
00:01:01,320 --> 00:01:04,379
how come a Microsoft security engineer

28
00:01:04,379 --> 00:01:06,180
talks about Androids you know this kind

29
00:01:06,180 --> 00:01:08,520
of stuff how how these things are

30
00:01:08,520 --> 00:01:11,820
connected so as I said I'm uh let's say

31
00:01:11,820 --> 00:01:13,619
I'm following up with uh security

32
00:01:13,619 --> 00:01:16,320
computer security for quite a long time

33
00:01:16,320 --> 00:01:18,720
and I guess you you would also agree

34
00:01:18,720 --> 00:01:20,700
with the fact that uh today's threads

35
00:01:20,700 --> 00:01:23,460
need a more holistic approach right so a

36
00:01:23,460 --> 00:01:26,159
bridge in your mobile might affect uh

37
00:01:26,159 --> 00:01:28,140
even your corporate Network right now

38
00:01:28,140 --> 00:01:30,540
and I strongly believe that companies

39
00:01:30,540 --> 00:01:33,240
should let's say follow I mean improve

40
00:01:33,240 --> 00:01:35,040
their Security Solutions in order to

41
00:01:35,040 --> 00:01:37,380
protect their clients across all

42
00:01:37,380 --> 00:01:39,479
platforms so I'm very proud of being a

43
00:01:39,479 --> 00:01:42,180
part of let's say such an initiative

44
00:01:42,180 --> 00:01:45,000
and with that being said we can jump

45
00:01:45,000 --> 00:01:48,479
right to the outline of this briefing

46
00:01:48,479 --> 00:01:50,040
which consists of the following topics

47
00:01:50,040 --> 00:01:51,119
so first of all we're going to talk

48
00:01:51,119 --> 00:01:53,820
about the Android user interface just a

49
00:01:53,820 --> 00:01:55,320
brief overview of the main components

50
00:01:55,320 --> 00:01:57,360
things that we're going to use during

51
00:01:57,360 --> 00:01:59,579
our presentation

52
00:01:59,579 --> 00:02:02,520
and then uh we're going to go to let's

53
00:02:02,520 --> 00:02:05,640
say first main part which is going

54
00:02:05,640 --> 00:02:07,920
confusion attacks what is the story so

55
00:02:07,920 --> 00:02:09,840
far we're going to see quite a lot of

56
00:02:09,840 --> 00:02:11,459
let's say techniques which have been

57
00:02:11,459 --> 00:02:13,260
presented during the last years when it

58
00:02:13,260 --> 00:02:15,360
comes to Android operating system

59
00:02:15,360 --> 00:02:17,340
and then uh we're going to discuss about

60
00:02:17,340 --> 00:02:20,280
the behavior which out of which this

61
00:02:20,280 --> 00:02:22,920
attack was let's say inspired

62
00:02:22,920 --> 00:02:25,680
okay then uh Universal overlays

63
00:02:25,680 --> 00:02:29,040
addressed by the specific cve actually

64
00:02:29,040 --> 00:02:31,680
the title is permissionless universal

65
00:02:31,680 --> 00:02:33,780
overlay but it's quite far good enough

66
00:02:33,780 --> 00:02:36,180
here and uh yeah we're not going to use

67
00:02:36,180 --> 00:02:37,319
any kind of permission this is the

68
00:02:37,319 --> 00:02:38,819
difference actually with the attacks

69
00:02:38,819 --> 00:02:41,280
that have been presented so far

70
00:02:41,280 --> 00:02:42,599
and finally we're going to see some

71
00:02:42,599 --> 00:02:44,340
defensive takeaways

72
00:02:44,340 --> 00:02:47,040
uh uh how we can protect Android apps

73
00:02:47,040 --> 00:02:48,660
from these or even similar type of

74
00:02:48,660 --> 00:02:49,620
attacks

75
00:02:49,620 --> 00:02:51,660
Okay so

76
00:02:51,660 --> 00:02:53,760
let's start with uh let's say the

77
00:02:53,760 --> 00:02:55,500
address Graphics architecture focusing

78
00:02:55,500 --> 00:02:57,239
on the components that we said we're

79
00:02:57,239 --> 00:02:59,940
going to discuss and I'm not sure how

80
00:02:59,940 --> 00:03:01,800
many of you have created an Android app

81
00:03:01,800 --> 00:03:03,660
so far but we may all agree on the fact

82
00:03:03,660 --> 00:03:06,720
that one of its most important features

83
00:03:06,720 --> 00:03:08,700
is the ability to interact with the user

84
00:03:08,700 --> 00:03:10,500
right so

85
00:03:10,500 --> 00:03:12,959
that being said almost every modern

86
00:03:12,959 --> 00:03:14,700
development environment facilitates this

87
00:03:14,700 --> 00:03:17,040
process by providing tools to make this

88
00:03:17,040 --> 00:03:20,280
process easier right so this way Android

89
00:03:20,280 --> 00:03:22,140
developer with just few clicks can add

90
00:03:22,140 --> 00:03:25,800
or remove uh buttons use images and so

91
00:03:25,800 --> 00:03:28,500
on without need to dive deep into their

92
00:03:28,500 --> 00:03:30,540
implementation details Now assistant

93
00:03:30,540 --> 00:03:33,180
wise when an app is created a window is

94
00:03:33,180 --> 00:03:34,620
going to be attached to it which is

95
00:03:34,620 --> 00:03:36,180
actually a container for what we call

96
00:03:36,180 --> 00:03:38,580
view objects that are backed up by

97
00:03:38,580 --> 00:03:41,280
surface objects since we may have more

98
00:03:41,280 --> 00:03:43,019
than one app running at the same time in

99
00:03:43,019 --> 00:03:45,900
Android device what comes next is the

100
00:03:45,900 --> 00:03:47,879
surface flinger which will gather all

101
00:03:47,879 --> 00:03:49,680
these surfaces and try to composite them

102
00:03:49,680 --> 00:03:52,140
onto display after talking with the

103
00:03:52,140 --> 00:03:52,879
hardware

104
00:03:52,879 --> 00:03:55,200
composer which is a hardware abstraction

105
00:03:55,200 --> 00:03:57,000
layer which will gather all these

106
00:03:57,000 --> 00:03:58,680
surfaces and do the final composition

107
00:03:58,680 --> 00:04:00,659
display

108
00:04:00,659 --> 00:04:02,940
now what I intentionally didn't mention

109
00:04:02,940 --> 00:04:05,519
so far is the role of the window manager

110
00:04:05,519 --> 00:04:08,040
so for whom let's say is to decide the

111
00:04:08,040 --> 00:04:10,739
order the focus the position of the

112
00:04:10,739 --> 00:04:13,739
windows in Android display and this is

113
00:04:13,739 --> 00:04:14,819
the window manager where the window

114
00:04:14,819 --> 00:04:16,680
manager comes into play which will

115
00:04:16,680 --> 00:04:19,380
gather all this info will send them to

116
00:04:19,380 --> 00:04:21,060
the surface finger and we'll do the

117
00:04:21,060 --> 00:04:23,160
final composition as we said before

118
00:04:23,160 --> 00:04:25,740
now when it comes to window manager is

119
00:04:25,740 --> 00:04:29,520
it it's Android system service

120
00:04:29,520 --> 00:04:32,160
which is uh let's say responsible for

121
00:04:32,160 --> 00:04:33,240
the look

122
00:04:33,240 --> 00:04:35,639
the behavior but also the behavior of uh

123
00:04:35,639 --> 00:04:38,639
the windows and also the transition the

124
00:04:38,639 --> 00:04:40,020
animation of them when we open the

125
00:04:40,020 --> 00:04:42,120
window when we close one or we simply

126
00:04:42,120 --> 00:04:44,940
rotating something although despite the

127
00:04:44,940 --> 00:04:47,639
the rich functionality of this system

128
00:04:47,639 --> 00:04:50,400
service third-party apps don't have

129
00:04:50,400 --> 00:04:53,820
access to the raw ideal and they can

130
00:04:53,820 --> 00:04:56,639
actually let's say access specific

131
00:04:56,639 --> 00:04:58,919
properties using some classes like the

132
00:04:58,919 --> 00:05:00,840
window window manager or the fuel

133
00:05:00,840 --> 00:05:02,220
configuration class

134
00:05:02,220 --> 00:05:04,440
and here I have an example of let's say

135
00:05:04,440 --> 00:05:06,000
how you can acquire an instance for the

136
00:05:06,000 --> 00:05:08,040
window manager then access this property

137
00:05:08,040 --> 00:05:09,919
as I said before

138
00:05:09,919 --> 00:05:13,560
now another important aspect which is

139
00:05:13,560 --> 00:05:16,080
related to to our research is what we

140
00:05:16,080 --> 00:05:17,820
call Z order

141
00:05:17,820 --> 00:05:20,340
and refers to the order across imaginary

142
00:05:20,340 --> 00:05:22,860
axis which starts from the bottom of the

143
00:05:22,860 --> 00:05:24,780
screen up to what the user sees on top

144
00:05:24,780 --> 00:05:27,720
of the screen right and

145
00:05:27,720 --> 00:05:31,560
um the position of a window in this zero

146
00:05:31,560 --> 00:05:33,360
in this axis

147
00:05:33,360 --> 00:05:36,180
depends on which type and every Android

148
00:05:36,180 --> 00:05:38,460
app can request a window type any window

149
00:05:38,460 --> 00:05:41,580
type by just creating a window manager

150
00:05:41,580 --> 00:05:43,680
instance acquiring window manage manager

151
00:05:43,680 --> 00:05:45,900
instance using the layout parameters and

152
00:05:45,900 --> 00:05:48,180
then just setting the window type that

153
00:05:48,180 --> 00:05:50,940
it wants right finally you can use that

154
00:05:50,940 --> 00:05:53,759
view in order to add the view to the

155
00:05:53,759 --> 00:05:55,860
newly created window

156
00:05:55,860 --> 00:05:58,979
what is uh now strange here is that

157
00:05:58,979 --> 00:06:01,740
let's say privileged window types and by

158
00:06:01,740 --> 00:06:03,300
privilege I mean the ones which are on

159
00:06:03,300 --> 00:06:05,580
the top of this imaginary axis come with

160
00:06:05,580 --> 00:06:07,740
special let's say uh with high price

161
00:06:07,740 --> 00:06:11,180
let's put it this way so in order to get

162
00:06:11,180 --> 00:06:14,039
approved such a window for example the

163
00:06:14,039 --> 00:06:15,780
type alert window you need the system

164
00:06:15,780 --> 00:06:17,520
other window permission so the user has

165
00:06:17,520 --> 00:06:20,759
to go to a specific menu I enable this

166
00:06:20,759 --> 00:06:22,979
uh let's say permission for your app in

167
00:06:22,979 --> 00:06:25,020
order to get this with uh this uh

168
00:06:25,020 --> 00:06:28,259
permission approved now ah

169
00:06:28,259 --> 00:06:31,199
what happens here is that before 123

170
00:06:31,199 --> 00:06:33,000
this permission was approved by default

171
00:06:33,000 --> 00:06:35,639
so SDK 23 was approved by default and

172
00:06:35,639 --> 00:06:37,319
what is even more interesting is the

173
00:06:37,319 --> 00:06:39,780
fact that if an app targets an SDK which

174
00:06:39,780 --> 00:06:42,060
is lower than 23 gets permission

175
00:06:42,060 --> 00:06:44,460
approved by default even in newest

176
00:06:44,460 --> 00:06:45,840
Android versions

177
00:06:45,840 --> 00:06:48,479
and this brings me to the figure which I

178
00:06:48,479 --> 00:06:50,759
have here on the right side where you

179
00:06:50,759 --> 00:06:53,400
can see the various uh up the window

180
00:06:53,400 --> 00:06:56,100
types and their position across this uh

181
00:06:56,100 --> 00:06:58,259
axis that I talked to you about and

182
00:06:58,259 --> 00:06:59,639
despite the fact that most of these

183
00:06:59,639 --> 00:07:01,259
window types have been deprecated or

184
00:07:01,259 --> 00:07:04,199
aggregated under a single window type it

185
00:07:04,199 --> 00:07:05,639
can still be used by apps which are

186
00:07:05,639 --> 00:07:07,740
targeting let's say uh these are

187
00:07:07,740 --> 00:07:11,220
versions up to Android dates okay

188
00:07:11,220 --> 00:07:14,220
all right so we talked about the look of

189
00:07:14,220 --> 00:07:16,919
a window How uh

190
00:07:16,919 --> 00:07:19,500
the shape and all these things but there

191
00:07:19,500 --> 00:07:21,060
is also another interesting let's say

192
00:07:21,060 --> 00:07:22,919
aspect when it comes to the windows this

193
00:07:22,919 --> 00:07:24,900
is the behavior of a window what I mean

194
00:07:24,900 --> 00:07:25,919
by that

195
00:07:25,919 --> 00:07:28,380
is how it will uh let's say you react on

196
00:07:28,380 --> 00:07:30,720
various events that take place on

197
00:07:30,720 --> 00:07:34,440
Android screen so uh the common let's

198
00:07:34,440 --> 00:07:36,599
say behavior in that case is that the

199
00:07:36,599 --> 00:07:39,060
window will consume uh the specific

200
00:07:39,060 --> 00:07:41,940
event so what this event can be is let's

201
00:07:41,940 --> 00:07:45,720
say a user click or a user touch a swipe

202
00:07:45,720 --> 00:07:47,819
so what will happen usually is that the

203
00:07:47,819 --> 00:07:50,699
uh the window will consume this event

204
00:07:50,699 --> 00:07:52,500
will perform some kind of functionality

205
00:07:52,500 --> 00:07:54,060
and that's that's it

206
00:07:54,060 --> 00:07:56,340
but you can you can change that

207
00:07:56,340 --> 00:07:59,460
using uh Wireless plugs like the ones

208
00:07:59,460 --> 00:08:01,020
they want the first one that I have here

209
00:08:01,020 --> 00:08:02,819
which is the flag not touchable so what

210
00:08:02,819 --> 00:08:05,759
you can do with that you can simply let

211
00:08:05,759 --> 00:08:08,280
your window dispatch the touch to the

212
00:08:08,280 --> 00:08:10,919
window which is below right so we give

213
00:08:10,919 --> 00:08:12,660
this way click through capability to our

214
00:08:12,660 --> 00:08:16,440
window that's so simple and uh to use

215
00:08:16,440 --> 00:08:17,580
this plug you don't need any kind of

216
00:08:17,580 --> 00:08:19,740
permission right just to make clear

217
00:08:19,740 --> 00:08:21,479
all right so we said about the look we

218
00:08:21,479 --> 00:08:23,699
said about the behavior and there is

219
00:08:23,699 --> 00:08:25,800
also another interesting uh let's say

220
00:08:25,800 --> 00:08:27,840
feature when it comes to this Windows

221
00:08:27,840 --> 00:08:29,280
which we'll call them three floating

222
00:08:29,280 --> 00:08:32,700
windows windows so they depend solely on

223
00:08:32,700 --> 00:08:34,979
the process that they belong to so what

224
00:08:34,979 --> 00:08:37,440
that means means is that even if you

225
00:08:37,440 --> 00:08:40,320
have created your window within uh your

226
00:08:40,320 --> 00:08:42,958
activity and activity and you dismiss

227
00:08:42,958 --> 00:08:44,580
this activity this window will remain

228
00:08:44,580 --> 00:08:49,019
there as long as the process is still

229
00:08:49,019 --> 00:08:51,000
active and other way around and this is

230
00:08:51,000 --> 00:08:52,500
actually something which uh a lot of

231
00:08:52,500 --> 00:08:54,660
malware families are using

232
00:08:54,660 --> 00:08:57,480
uh in various ways for example around

233
00:08:57,480 --> 00:08:59,399
somewhere they're using this type of

234
00:08:59,399 --> 00:09:01,019
Windows to cover the screen so they

235
00:09:01,019 --> 00:09:03,240
usually loses access to the actual user

236
00:09:03,240 --> 00:09:05,700
interface and like I said this is just

237
00:09:05,700 --> 00:09:07,920
just one way to abuse this type of

238
00:09:07,920 --> 00:09:09,300
features when it comes to this type of

239
00:09:09,300 --> 00:09:10,680
windows

240
00:09:10,680 --> 00:09:14,339
right so okay let's make a pause here

241
00:09:14,339 --> 00:09:16,440
and try to identify what is the main

242
00:09:16,440 --> 00:09:18,060
issue right

243
00:09:18,060 --> 00:09:20,339
so we said that uh

244
00:09:20,339 --> 00:09:22,200
actually yeah the Android operating the

245
00:09:22,200 --> 00:09:24,060
Android is an operating system with more

246
00:09:24,060 --> 00:09:25,680
than one app come around at the same

247
00:09:25,680 --> 00:09:27,600
time right in the background

248
00:09:27,600 --> 00:09:30,360
and we said that each time only one

249
00:09:30,360 --> 00:09:31,980
up will be the one that will be

250
00:09:31,980 --> 00:09:33,959
interacting with the user

251
00:09:33,959 --> 00:09:36,360
uh we have a couple of protection when

252
00:09:36,360 --> 00:09:39,600
it comes to the origin of an APK we have

253
00:09:39,600 --> 00:09:41,760
the signature which can be used to

254
00:09:41,760 --> 00:09:45,000
authenticate uh an app and you know

255
00:09:45,000 --> 00:09:46,740
ensure that it comes from the same

256
00:09:46,740 --> 00:09:48,660
developer and we have also what we call

257
00:09:48,660 --> 00:09:50,640
the transit sources which can ensure

258
00:09:50,640 --> 00:09:53,040
that an app let's say meets some

259
00:09:53,040 --> 00:09:54,839
specific criteria

260
00:09:54,839 --> 00:09:56,100
although

261
00:09:56,100 --> 00:09:58,019
uh there is no explicit information

262
00:09:58,019 --> 00:10:00,720
showing to the user about the user

263
00:10:00,720 --> 00:10:03,600
interface that interacts with and the

264
00:10:03,600 --> 00:10:05,459
application that it belongs to so this

265
00:10:05,459 --> 00:10:06,720
is the main problem

266
00:10:06,720 --> 00:10:11,160
and this way any up can imitate the user

267
00:10:11,160 --> 00:10:13,800
interface of another app and claim its

268
00:10:13,800 --> 00:10:16,080
identity or claim legitimacy so in most

269
00:10:16,080 --> 00:10:17,040
cases

270
00:10:17,040 --> 00:10:20,160
uh the victims of this let's say uh type

271
00:10:20,160 --> 00:10:22,680
of behavior are banking apps uh or apps

272
00:10:22,680 --> 00:10:23,940
in more general which handle some kind

273
00:10:23,940 --> 00:10:26,880
of financial data of private info and so

274
00:10:26,880 --> 00:10:28,680
on all right

275
00:10:28,680 --> 00:10:31,620
okay so uh and this particularly to the

276
00:10:31,620 --> 00:10:33,540
main let's say for the first main topic

277
00:10:33,540 --> 00:10:36,060
when it comes to to this type of attack

278
00:10:36,060 --> 00:10:37,860
and we

279
00:10:37,860 --> 00:10:40,200
are going to start from the obvious uh

280
00:10:40,200 --> 00:10:42,360
going confusion attacks attack needs

281
00:10:42,360 --> 00:10:43,860
some user Direction which needs

282
00:10:43,860 --> 00:10:46,560
sometimes social engineering

283
00:10:46,560 --> 00:10:49,079
and in general attacks which depend on

284
00:10:49,079 --> 00:10:51,000
this type of let's say vulnerabilities

285
00:10:51,000 --> 00:10:53,399
they are considered slow-hanging fruits

286
00:10:53,399 --> 00:10:55,980
when they are compared with uh attacks

287
00:10:55,980 --> 00:10:58,260
which depend on memory corruption types

288
00:10:58,260 --> 00:11:01,140
and so on but this is kind of unfair if

289
00:11:01,140 --> 00:11:03,480
you consider the fact that um

290
00:11:03,480 --> 00:11:07,320
almost every modern uh malware campaign

291
00:11:07,320 --> 00:11:10,380
campaign like uh let's say flu boats

292
00:11:10,380 --> 00:11:12,000
sell batteries all these let's say

293
00:11:12,000 --> 00:11:15,480
modern modern in a way families are

294
00:11:15,480 --> 00:11:17,940
using uh this type of attacks in order

295
00:11:17,940 --> 00:11:19,740
to achieve their targets right

296
00:11:19,740 --> 00:11:21,600
for example the ones that I mentioned

297
00:11:21,600 --> 00:11:23,220
they're using overlays in order to

298
00:11:23,220 --> 00:11:24,959
perform fishing or something

299
00:11:24,959 --> 00:11:27,480
uh

300
00:11:27,480 --> 00:11:32,579
so despite the fact that many let's say

301
00:11:32,579 --> 00:11:34,500
at techniques have been presented quite

302
00:11:34,500 --> 00:11:35,700
the last few years when it comes to

303
00:11:35,700 --> 00:11:37,920
Great confusion attacks we may as they

304
00:11:37,920 --> 00:11:39,540
classify them in three main categories

305
00:11:39,540 --> 00:11:41,579
so we have the first one which

306
00:11:41,579 --> 00:11:43,260
uh we're talking about the likes that

307
00:11:43,260 --> 00:11:45,300
they are using overlays and then we have

308
00:11:45,300 --> 00:11:48,420
the ones uh they're using task hijacking

309
00:11:48,420 --> 00:11:50,339
and finally we have the ones which are

310
00:11:50,339 --> 00:11:52,860
using what we call activity switching

311
00:11:52,860 --> 00:11:54,540
so starting with the first one

312
00:11:54,540 --> 00:11:57,300
the main idea is to conceal a part or

313
00:11:57,300 --> 00:11:58,860
all of the message which is communicated

314
00:11:58,860 --> 00:12:01,140
to the user via a graphical user

315
00:12:01,140 --> 00:12:03,660
interface in order to alter the message

316
00:12:03,660 --> 00:12:06,899
towards the meaning of this message and

317
00:12:06,899 --> 00:12:08,640
trick the user to take an action that

318
00:12:08,640 --> 00:12:10,079
wouldn't normally take

319
00:12:10,079 --> 00:12:12,300
for example imagine that we have a

320
00:12:12,300 --> 00:12:14,160
fraudster which offers a service

321
00:12:14,160 --> 00:12:15,600
official product

322
00:12:15,600 --> 00:12:19,140
and sends a request to the user a Top-Up

323
00:12:19,140 --> 00:12:22,920
let's say pops up from a banking app the

324
00:12:22,920 --> 00:12:24,839
user sees the amount which might be very

325
00:12:24,839 --> 00:12:26,399
large extra large and the user will

326
00:12:26,399 --> 00:12:28,740
reject because a man amount was let's

327
00:12:28,740 --> 00:12:29,880
say insane

328
00:12:29,880 --> 00:12:31,800
if the same attack will be performed

329
00:12:31,800 --> 00:12:33,980
from a malware which can't create

330
00:12:33,980 --> 00:12:36,839
overlays then the

331
00:12:36,839 --> 00:12:37,980
um

332
00:12:37,980 --> 00:12:40,260
the amount can be simply concealed so

333
00:12:40,260 --> 00:12:41,940
the user can be tricked and let's say

334
00:12:41,940 --> 00:12:43,260
approve the request

335
00:12:43,260 --> 00:12:44,880
so as you understand

336
00:12:44,880 --> 00:12:48,240
from what I've said so far uh the Rogue

337
00:12:48,240 --> 00:12:50,880
APK the malware should must be able to

338
00:12:50,880 --> 00:12:53,820
control the position of a window in this

339
00:12:53,820 --> 00:12:55,620
imaginary axis I'll talk to you about in

340
00:12:55,620 --> 00:12:57,779
the beginning of this briefing and one

341
00:12:57,779 --> 00:13:00,120
way of doing that is using what we call

342
00:13:00,120 --> 00:13:03,360
a type toss window was this isn't an old

343
00:13:03,360 --> 00:13:06,540
attack old type attack anyway use this

344
00:13:06,540 --> 00:13:07,860
type of window

345
00:13:07,860 --> 00:13:10,680
which window by let's say construction

346
00:13:10,680 --> 00:13:13,380
was created in order to

347
00:13:13,380 --> 00:13:15,899
be on top of other apps why because it

348
00:13:15,899 --> 00:13:17,880
has to send a message to the user to

349
00:13:17,880 --> 00:13:20,339
take a quick action or some something is

350
00:13:20,339 --> 00:13:22,019
happening some kind of an event so the

351
00:13:22,019 --> 00:13:24,660
user has somehow to take an action so

352
00:13:24,660 --> 00:13:26,700
this type of window as I said before is

353
00:13:26,700 --> 00:13:29,399
should be on top of others and this is

354
00:13:29,399 --> 00:13:31,200
something that this attack let's say

355
00:13:31,200 --> 00:13:33,600
abuses

356
00:13:33,600 --> 00:13:34,560
um

357
00:13:34,560 --> 00:13:36,720
again create a window manager instance

358
00:13:36,720 --> 00:13:38,639
layout parameters and this type just use

359
00:13:38,639 --> 00:13:41,700
the typos window add the

360
00:13:41,700 --> 00:13:43,920
click-through capability change

361
00:13:43,920 --> 00:13:46,680
transparency position and finally

362
00:13:46,680 --> 00:13:49,260
perform the final overlay the same thing

363
00:13:49,260 --> 00:13:51,480
the same result different type of window

364
00:13:51,480 --> 00:13:53,339
this actually was used by the clock and

365
00:13:53,339 --> 00:13:57,000
anger uh let's say technique user type

366
00:13:57,000 --> 00:13:58,680
system alert window or the newest

367
00:13:58,680 --> 00:14:00,480
version of it which is the type

368
00:14:00,480 --> 00:14:03,120
application overlay although again the

369
00:14:03,120 --> 00:14:04,560
user has to navigate to this specific

370
00:14:04,560 --> 00:14:08,339
menu and enabled uh in order for when up

371
00:14:08,339 --> 00:14:10,200
to be able to do that

372
00:14:10,200 --> 00:14:12,660
yeah this is this another attack which

373
00:14:12,660 --> 00:14:15,480
is not that widely known it was actually

374
00:14:15,480 --> 00:14:17,639
my first zero then this one so this is

375
00:14:17,639 --> 00:14:19,560
why I mentioned that so it was first

376
00:14:19,560 --> 00:14:22,800
found in the flight 99 hardware and what

377
00:14:22,800 --> 00:14:24,720
this Hardware was doing was just loading

378
00:14:24,720 --> 00:14:26,700
a library and Native Library

379
00:14:26,700 --> 00:14:29,760
and I was giving a couple of constants

380
00:14:29,760 --> 00:14:32,700
which was uh enough to a function which

381
00:14:32,700 --> 00:14:34,860
was implemented in the native layer so

382
00:14:34,860 --> 00:14:38,399
these Concepts were found to be

383
00:14:38,399 --> 00:14:41,399
um to represent window types the one was

384
00:14:41,399 --> 00:14:43,019
the type presentation the other one was

385
00:14:43,019 --> 00:14:44,579
the type toast

386
00:14:44,579 --> 00:14:46,560
to type those I talked to you about but

387
00:14:46,560 --> 00:14:48,120
the type presentation was let's say

388
00:14:48,120 --> 00:14:50,639
something like a an overlooked type of a

389
00:14:50,639 --> 00:14:52,260
window

390
00:14:52,260 --> 00:14:54,120
someone didn't notice something so I

391
00:14:54,120 --> 00:14:56,839
don't know and uh it could create

392
00:14:56,839 --> 00:14:59,880
overlays without any kind of permission

393
00:14:59,880 --> 00:15:03,000
so I was giving these values uh in let's

394
00:15:03,000 --> 00:15:05,220
say some native implementation of it

395
00:15:05,220 --> 00:15:07,139
and then it was creating again a window

396
00:15:07,139 --> 00:15:09,600
manager instance checking if

397
00:15:09,600 --> 00:15:10,440
um

398
00:15:10,440 --> 00:15:13,019
uh the SDK version was lower equal to 24

399
00:15:13,019 --> 00:15:15,180
in order to create the typos window or a

400
00:15:15,180 --> 00:15:18,120
type presentation so that was it how he

401
00:15:18,120 --> 00:15:19,880
was using that

402
00:15:19,880 --> 00:15:22,980
so in Android 10

403
00:15:22,980 --> 00:15:25,620
there was a restriction which says that

404
00:15:25,620 --> 00:15:27,480
an app can't start an activity from the

405
00:15:27,480 --> 00:15:28,560
background

406
00:15:28,560 --> 00:15:30,779
if it doesn't have

407
00:15:30,779 --> 00:15:32,820
some specific let's say if some specific

408
00:15:32,820 --> 00:15:34,380
conditions apply one of these conditions

409
00:15:34,380 --> 00:15:37,079
was if the app has a visible window in

410
00:15:37,079 --> 00:15:38,339
the foreground then it can start the

411
00:15:38,339 --> 00:15:41,519
activity so this one was using exactly

412
00:15:41,519 --> 00:15:43,380
for this wave was using this let's say

413
00:15:43,380 --> 00:15:45,000
window type so it was creating a window

414
00:15:45,000 --> 00:15:46,800
which was invisible

415
00:15:46,800 --> 00:15:48,600
all right so it was not visible to the

416
00:15:48,600 --> 00:15:51,300
user but it was visible for the system

417
00:15:51,300 --> 00:15:53,699
and uh it was using this window in order

418
00:15:53,699 --> 00:15:56,760
to start spamming the user uh with uh

419
00:15:56,760 --> 00:15:59,639
with advertisement so that was the main

420
00:15:59,639 --> 00:16:01,920
let's say way of using that and you can

421
00:16:01,920 --> 00:16:04,920
understand by using just a zero day in

422
00:16:04,920 --> 00:16:07,199
order to spam the user for what kind of

423
00:16:07,199 --> 00:16:08,699
Revenue we're talking about when it

424
00:16:08,699 --> 00:16:10,620
comes to this type of malware

425
00:16:10,620 --> 00:16:13,800
all right next one uh is a task High

426
00:16:13,800 --> 00:16:16,740
jacking and um

427
00:16:16,740 --> 00:16:18,420
in Computing when we're talking about

428
00:16:18,420 --> 00:16:20,880
multitasking we refer to a state where

429
00:16:20,880 --> 00:16:24,060
more than one process come around at the

430
00:16:24,060 --> 00:16:25,860
same time right

431
00:16:25,860 --> 00:16:26,519
um

432
00:16:26,519 --> 00:16:27,600
although when it comes to Android

433
00:16:27,600 --> 00:16:29,579
operating system a task has a slightly

434
00:16:29,579 --> 00:16:31,620
different meaning so a task

435
00:16:31,620 --> 00:16:34,380
is not an app it's not a process it's a

436
00:16:34,380 --> 00:16:36,240
set of activities that the user

437
00:16:36,240 --> 00:16:38,759
interacts with in order to do some kind

438
00:16:38,759 --> 00:16:41,399
of a job right that's that's the meaning

439
00:16:41,399 --> 00:16:43,860
of it now these activities May belong to

440
00:16:43,860 --> 00:16:47,040
different apps and activities May belong

441
00:16:47,040 --> 00:16:48,779
to different tasks so that's the idea

442
00:16:48,779 --> 00:16:51,060
and this uh let's say attack abuses

443
00:16:51,060 --> 00:16:53,399
State transition conditions like the

444
00:16:53,399 --> 00:16:55,279
task affinity and the allow task

445
00:16:55,279 --> 00:16:57,959
reparenting in order to do that

446
00:16:57,959 --> 00:16:59,880
so how it does that

447
00:16:59,880 --> 00:17:01,980
imagine we have the victim app which is

448
00:17:01,980 --> 00:17:04,980
a condo secure up so the adword malware

449
00:17:04,980 --> 00:17:07,079
whatever will create an activity which

450
00:17:07,079 --> 00:17:10,380
uh will set the task Affinity to the

451
00:17:10,380 --> 00:17:13,260
package name of the app it will create

452
00:17:13,260 --> 00:17:16,079
he will set actually the flag of this

453
00:17:16,079 --> 00:17:17,000
activity

454
00:17:17,000 --> 00:17:19,980
allowed us reporting to true and then it

455
00:17:19,980 --> 00:17:22,380
will try to let's say inject itself to

456
00:17:22,380 --> 00:17:23,880
the task that the user interacts with

457
00:17:23,880 --> 00:17:25,740
when it comes to the specific app right

458
00:17:25,740 --> 00:17:28,620
that was the idea about this one and the

459
00:17:28,620 --> 00:17:30,419
last one which is very interesting

460
00:17:30,419 --> 00:17:33,059
although it's very very simple I've used

461
00:17:33,059 --> 00:17:35,760
this apis which are used in order to

462
00:17:35,760 --> 00:17:38,100
bring an activity of on top on the

463
00:17:38,100 --> 00:17:40,860
foreground right so the idea is again

464
00:17:40,860 --> 00:17:43,620
simply observe the foreground if the

465
00:17:43,620 --> 00:17:45,480
activity which is currently on top

466
00:17:45,480 --> 00:17:48,240
belongs to our Target list then start

467
00:17:48,240 --> 00:17:50,700
our own activity and hijack the user

468
00:17:50,700 --> 00:17:53,280
session but it

469
00:17:53,280 --> 00:17:56,039
we have a couple of exceptions so a

470
00:17:56,039 --> 00:17:57,720
couple of restrictions when it comes to

471
00:17:57,720 --> 00:17:59,400
this uh let's say attack so we don't

472
00:17:59,400 --> 00:18:00,780
have visibility of the activity which is

473
00:18:00,780 --> 00:18:03,059
on top right we have the sandbox we have

474
00:18:03,059 --> 00:18:04,080
a lot of things when it comes to Android

475
00:18:04,080 --> 00:18:06,240
so we don't have visibility regarding

476
00:18:06,240 --> 00:18:08,280
that and we can start an activity from

477
00:18:08,280 --> 00:18:10,320
the background as I said before

478
00:18:10,320 --> 00:18:12,480
exceptions stability service the

479
00:18:12,480 --> 00:18:14,039
powerful disability service which can be

480
00:18:14,039 --> 00:18:15,780
used actually to get your app opt out

481
00:18:15,780 --> 00:18:18,000
from almost any kind of UAE restriction

482
00:18:18,000 --> 00:18:20,460
we have the user stats when it comes the

483
00:18:20,460 --> 00:18:22,860
first one the system alert which for

484
00:18:22,860 --> 00:18:24,840
which I talked to you about and we have

485
00:18:24,840 --> 00:18:26,820
the full screen intent which never works

486
00:18:26,820 --> 00:18:28,080
I don't know why

487
00:18:28,080 --> 00:18:29,940
but I will add it here just for the sake

488
00:18:29,940 --> 00:18:32,520
of completeness now we are going to see

489
00:18:32,520 --> 00:18:34,440
the first demo

490
00:18:34,440 --> 00:18:35,820
I have quite a few because we're talking

491
00:18:35,820 --> 00:18:37,380
about going confusion and actually

492
00:18:37,380 --> 00:18:39,960
make sense

493
00:18:39,960 --> 00:18:43,440
so I created the Rogue APK which

494
00:18:43,440 --> 00:18:46,559
performs this task uh activity switching

495
00:18:46,559 --> 00:18:49,080
attack so what it does it will observe

496
00:18:49,080 --> 00:18:50,340
the foreground

497
00:18:50,340 --> 00:18:52,980
if they are up in the foreground belongs

498
00:18:52,980 --> 00:18:54,660
to a very very well-known let's say

499
00:18:54,660 --> 00:18:56,460
banking app it will start its own

500
00:18:56,460 --> 00:18:58,860
activity so

501
00:18:58,860 --> 00:19:02,600
I hope it it will play yeah

502
00:19:07,860 --> 00:19:08,960
yeah

503
00:19:08,960 --> 00:19:11,820
anyway so uh

504
00:19:11,820 --> 00:19:14,460
not much just just few

505
00:19:14,460 --> 00:19:16,799
things about the context here so uh

506
00:19:16,799 --> 00:19:19,080
first of all

507
00:19:19,080 --> 00:19:21,480
as you may notice there is a small

508
00:19:21,480 --> 00:19:23,340
window here

509
00:19:23,340 --> 00:19:27,660
uh yeah on the left side which is a free

510
00:19:27,660 --> 00:19:29,520
floating window which is used exactly

511
00:19:29,520 --> 00:19:30,660
for the reason that I talked to you

512
00:19:30,660 --> 00:19:32,340
about is a foothold

513
00:19:32,340 --> 00:19:35,220
so it uses this foothold observes the

514
00:19:35,220 --> 00:19:38,039
activity which is on top and if the

515
00:19:38,039 --> 00:19:39,480
activity belongs to the banking app it

516
00:19:39,480 --> 00:19:41,760
will start its own activity so the user

517
00:19:41,760 --> 00:19:43,679
will start let's say interacting with

518
00:19:43,679 --> 00:19:45,840
the malware instead of the banking app

519
00:19:45,840 --> 00:19:49,020
that that's the idea behind this one all

520
00:19:49,020 --> 00:19:50,760
right

521
00:19:50,760 --> 00:19:52,919
so

522
00:19:52,919 --> 00:19:54,660
uh we said that we can use a start

523
00:19:54,660 --> 00:19:56,160
activity method in order to start an

524
00:19:56,160 --> 00:19:59,100
activity obviously and this can start

525
00:19:59,100 --> 00:20:00,780
another activity the new activity

526
00:20:00,780 --> 00:20:03,480
consult another one and so on but the

527
00:20:03,480 --> 00:20:05,220
question here is how these activities

528
00:20:05,220 --> 00:20:07,860
are arranged on the screen

529
00:20:07,860 --> 00:20:10,620
so and the answer is that they are using

530
00:20:10,620 --> 00:20:12,419
what we call a back stock so imagine

531
00:20:12,419 --> 00:20:15,120
something like a lasting first out stuck

532
00:20:15,120 --> 00:20:17,100
where the user can simply add or remove

533
00:20:17,100 --> 00:20:19,260
activities from the top of this uh let's

534
00:20:19,260 --> 00:20:21,240
say stock by simply interacting with the

535
00:20:21,240 --> 00:20:23,039
user interface now what is interesting

536
00:20:23,039 --> 00:20:24,179
here

537
00:20:24,179 --> 00:20:26,100
is the fact that when an activity is

538
00:20:26,100 --> 00:20:28,980
pushed in this stock it will retain this

539
00:20:28,980 --> 00:20:30,960
graphical user interface

540
00:20:30,960 --> 00:20:32,700
and what is even more interesting is the

541
00:20:32,700 --> 00:20:34,020
fact that um

542
00:20:34,020 --> 00:20:36,120
if the user starts another task let's

543
00:20:36,120 --> 00:20:38,100
call it task B task a will go in the

544
00:20:38,100 --> 00:20:39,419
background

545
00:20:39,419 --> 00:20:43,020
and the backstack will remain intact so

546
00:20:43,020 --> 00:20:46,740
when the user removes task B asket will

547
00:20:46,740 --> 00:20:49,140
get again the foreground and the

548
00:20:49,140 --> 00:20:51,419
backside will be restored so what I just

549
00:20:51,419 --> 00:20:53,280
described can't be exceptionally

550
00:20:53,280 --> 00:20:54,840
visualized by using a transparent

551
00:20:54,840 --> 00:20:56,880
activity and how we can create one we

552
00:20:56,880 --> 00:21:00,559
just create a theme which has sorry

553
00:21:00,559 --> 00:21:03,600
uh a transparent window the background

554
00:21:03,600 --> 00:21:05,940
which is the cover actually it is also

555
00:21:05,940 --> 00:21:07,919
transparent we don't want the shadowing

556
00:21:07,919 --> 00:21:09,000
title

557
00:21:09,000 --> 00:21:11,820
uh a window is floating means that uh

558
00:21:11,820 --> 00:21:14,340
the window is not anchored so it can be

559
00:21:14,340 --> 00:21:17,039
moved freely and finally we have the

560
00:21:17,039 --> 00:21:20,220
background beam enabled set to false in

561
00:21:20,220 --> 00:21:21,660
order not to blur the activity which is

562
00:21:21,660 --> 00:21:23,460
below that that's the only thing that

563
00:21:23,460 --> 00:21:25,620
this flag is doing the next thing was

564
00:21:25,620 --> 00:21:28,440
just to choose a knob which has some

565
00:21:28,440 --> 00:21:30,900
kind of emotion right we wanted to to

566
00:21:30,900 --> 00:21:32,940
understand the level of intactness what

567
00:21:32,940 --> 00:21:35,880
they mean by intactness will the app

568
00:21:35,880 --> 00:21:37,620
still keep playing the video for example

569
00:21:37,620 --> 00:21:40,380
that was the question right and this was

570
00:21:40,380 --> 00:21:44,720
the result the second I guess okay

571
00:21:50,760 --> 00:21:54,020
anyone notice something

572
00:21:54,299 --> 00:21:56,820
yeah yeah actually the idea the result

573
00:21:56,820 --> 00:21:59,820
actually was so good that I myself had

574
00:21:59,820 --> 00:22:01,440
to add some kind of a mark in order to

575
00:22:01,440 --> 00:22:02,640
understand with which app I was

576
00:22:02,640 --> 00:22:04,320
interacting with was it the YouTube app

577
00:22:04,320 --> 00:22:06,900
or was it my app I mean so I added this

578
00:22:06,900 --> 00:22:09,360
one and then my next let's say thought

579
00:22:09,360 --> 00:22:11,340
was to do something a little bit more

580
00:22:11,340 --> 00:22:16,939
let's say malicious and I did this one

581
00:22:31,620 --> 00:22:34,740
yeah so

582
00:22:34,740 --> 00:22:36,960
if you desperately Wanted let's say a

583
00:22:36,960 --> 00:22:39,000
YouTube premium account would you click

584
00:22:39,000 --> 00:22:41,159
on this one this is a question here

585
00:22:41,159 --> 00:22:44,640
I'll any feedback

586
00:22:44,640 --> 00:22:46,980
yeah anyway uh yeah I don't think that

587
00:22:46,980 --> 00:22:49,200
you like you should do premium account

588
00:22:49,200 --> 00:22:51,659
but in any case I think that um The Main

589
00:22:51,659 --> 00:22:54,120
Idea here is that

590
00:22:54,120 --> 00:22:57,419
you can integrate the user interface of

591
00:22:57,419 --> 00:22:59,400
the activity which is on top with the

592
00:22:59,400 --> 00:23:01,559
activity which is below and by adding

593
00:23:01,559 --> 00:23:03,179
let's say some specific uh let's say

594
00:23:03,179 --> 00:23:06,360
views or uh effects or something you can

595
00:23:06,360 --> 00:23:10,140
even alter the you can alter the user in

596
00:23:10,140 --> 00:23:11,400
the face of the activity which is below

597
00:23:11,400 --> 00:23:13,380
so that's that's the main idea behind

598
00:23:13,380 --> 00:23:15,780
let's say this attack but there are okay

599
00:23:15,780 --> 00:23:17,280
there are a lot of restrictions again

600
00:23:17,280 --> 00:23:20,100
right we don't have visibility we talked

601
00:23:20,100 --> 00:23:21,120
about that

602
00:23:21,120 --> 00:23:23,460
we can start activities we talked about

603
00:23:23,460 --> 00:23:25,140
that and we don't have click-through

604
00:23:25,140 --> 00:23:26,340
capability

605
00:23:26,340 --> 00:23:28,620
we can of course we can bypass all these

606
00:23:28,620 --> 00:23:31,320
things so we got to to put it better we

607
00:23:31,320 --> 00:23:34,020
can get our app opt out from these

608
00:23:34,020 --> 00:23:35,520
restrictions by using permissions but

609
00:23:35,520 --> 00:23:37,380
our attack wouldn't be permissionless if

610
00:23:37,380 --> 00:23:38,700
we had permissions

611
00:23:38,700 --> 00:23:42,659
all right so uh before I explain how we

612
00:23:42,659 --> 00:23:44,520
managed to amplify what we have so far

613
00:23:44,520 --> 00:23:46,919
in order to get a practical let's say

614
00:23:46,919 --> 00:23:49,679
create a practical attack and get some

615
00:23:49,679 --> 00:23:51,179
security impact

616
00:23:51,179 --> 00:23:53,520
uh regarding this attack let me first

617
00:23:53,520 --> 00:23:55,080
describe

618
00:23:55,080 --> 00:23:57,419
our targets so we're we're targeting

619
00:23:57,419 --> 00:24:00,600
critical importance screens which can be

620
00:24:00,600 --> 00:24:02,340
used in order to request from the user

621
00:24:02,340 --> 00:24:03,600
to take some kind of critical decision

622
00:24:03,600 --> 00:24:05,580
and so when it comes to third-party apps

623
00:24:05,580 --> 00:24:06,840
we're talking about apps which can be

624
00:24:06,840 --> 00:24:08,700
used in order to approve a payment

625
00:24:08,700 --> 00:24:12,600
request a remote uh login or some kind

626
00:24:12,600 --> 00:24:14,700
of an authorization or something when it

627
00:24:14,700 --> 00:24:15,960
comes to system screens which is the

628
00:24:15,960 --> 00:24:18,360
most interesting in this case we're

629
00:24:18,360 --> 00:24:19,860
talking about the screens which can be

630
00:24:19,860 --> 00:24:22,799
used in order to approve permissions

631
00:24:22,799 --> 00:24:26,159
dangerous or no system uh Services

632
00:24:26,159 --> 00:24:28,340
privileged access system

633
00:24:28,340 --> 00:24:30,240
privileged services

634
00:24:30,240 --> 00:24:32,700
or change some kind of a setting

635
00:24:32,700 --> 00:24:35,940
and we may classify those screens in two

636
00:24:35,940 --> 00:24:37,559
main categories so the first category is

637
00:24:37,559 --> 00:24:39,900
the single step decision screens simply

638
00:24:39,900 --> 00:24:41,820
said a window will pop up

639
00:24:41,820 --> 00:24:43,799
the user will click on the window

640
00:24:43,799 --> 00:24:46,740
and the decision will be made and we

641
00:24:46,740 --> 00:24:48,200
have the multi-step decision screens

642
00:24:48,200 --> 00:24:50,760
where the user has to follow let's say

643
00:24:50,760 --> 00:24:53,760
some steps and some wizard in the

644
00:24:53,760 --> 00:24:57,659
windows OS in order to get to the final

645
00:24:57,659 --> 00:25:00,120
let's say screen and click something in

646
00:25:00,120 --> 00:25:02,640
order to get the final decision made

647
00:25:02,640 --> 00:25:03,600
right

648
00:25:03,600 --> 00:25:05,820
so let's start with the first one which

649
00:25:05,820 --> 00:25:07,559
is the first line of defense of the

650
00:25:07,559 --> 00:25:09,000
Android operating system when it comes

651
00:25:09,000 --> 00:25:13,799
to uh private user info and this is the

652
00:25:13,799 --> 00:25:16,860
uh permission screens when I say about

653
00:25:16,860 --> 00:25:18,000
permission screens we are talking about

654
00:25:18,000 --> 00:25:20,760
the ones which control access to user

655
00:25:20,760 --> 00:25:23,520
private info like uh SMS calls call call

656
00:25:23,520 --> 00:25:27,179
logs you name it the contacts anything

657
00:25:27,179 --> 00:25:29,400
or even devices like the microphone

658
00:25:29,400 --> 00:25:33,059
camera location right a lot a lot of

659
00:25:33,059 --> 00:25:35,640
things so this is the main idea that was

660
00:25:35,640 --> 00:25:37,380
the main idea behind the first let's say

661
00:25:37,380 --> 00:25:40,679
the single step decision dialogues these

662
00:25:40,679 --> 00:25:43,080
dialogues before Android 11 Android 10

663
00:25:43,080 --> 00:25:45,480
belong to this package here

664
00:25:45,480 --> 00:25:48,539
and they moved to an Opex as many more

665
00:25:48,539 --> 00:25:50,520
they move to an Apex Android 11.

666
00:25:50,520 --> 00:25:54,059
although OMS can customize this user

667
00:25:54,059 --> 00:25:56,220
interface this dialogues using the

668
00:25:56,220 --> 00:25:58,380
runtime resource overlays but what we

669
00:25:58,380 --> 00:26:00,600
are most interesting interested in that

670
00:26:00,600 --> 00:26:03,840
case is what type of window

671
00:26:03,840 --> 00:26:07,740
this potential dialog is using and uh

672
00:26:07,740 --> 00:26:10,740
let's say it was surprised to see that

673
00:26:10,740 --> 00:26:12,480
it was using a simple base application

674
00:26:12,480 --> 00:26:13,380
window

675
00:26:13,380 --> 00:26:17,279
but it had some very interesting Flags

676
00:26:17,279 --> 00:26:19,380
one flag is the dim behind which can be

677
00:26:19,380 --> 00:26:21,720
used in order to blur the window which

678
00:26:21,720 --> 00:26:24,000
is below this one and the other one was

679
00:26:24,000 --> 00:26:26,520
the hide note system overlay windows and

680
00:26:26,520 --> 00:26:27,419
this one

681
00:26:27,419 --> 00:26:29,220
it's a little bit let's say interesting

682
00:26:29,220 --> 00:26:31,260
I'm going to elaborate a little bit more

683
00:26:31,260 --> 00:26:34,380
so it can be used in order to protect an

684
00:26:34,380 --> 00:26:37,620
app from type alert or system alert

685
00:26:37,620 --> 00:26:41,340
window type okay and that's the good

686
00:26:41,340 --> 00:26:43,980
news the bad news up to Android 12 at

687
00:26:43,980 --> 00:26:46,260
least it was that in order to use the

688
00:26:46,260 --> 00:26:48,840
flag the specific flag you need the high

689
00:26:48,840 --> 00:26:50,340
known system overlay Windows permission

690
00:26:50,340 --> 00:26:52,140
which is a signature privilege so it can

691
00:26:52,140 --> 00:26:55,559
be used only by System Ops and then this

692
00:26:55,559 --> 00:26:57,659
was moved to the hide overlay windows

693
00:26:57,659 --> 00:27:00,059
and now you can use also from

694
00:27:00,059 --> 00:27:01,919
third-party apps

695
00:27:01,919 --> 00:27:05,940
okay but uh if you think about it if you

696
00:27:05,940 --> 00:27:07,200
think about the activity that I'll show

697
00:27:07,200 --> 00:27:08,820
you the transparent actually that I'll

698
00:27:08,820 --> 00:27:10,679
show you it doesn't use any kind of

699
00:27:10,679 --> 00:27:13,140
special window right special type or

700
00:27:13,140 --> 00:27:15,240
something we use a humble base

701
00:27:15,240 --> 00:27:18,000
application window so the next step was

702
00:27:18,000 --> 00:27:19,679
embarrassing list

703
00:27:19,679 --> 00:27:23,700
simple it was just to add a click

704
00:27:23,700 --> 00:27:25,559
through capability no rocket science

705
00:27:25,559 --> 00:27:27,720
here you get a handle of the window

706
00:27:27,720 --> 00:27:31,140
set the flags to the not touchable

707
00:27:31,140 --> 00:27:34,140
arrange the view in some way that you

708
00:27:34,140 --> 00:27:35,460
can cover the parts that you are

709
00:27:35,460 --> 00:27:36,779
interested about and you have the

710
00:27:36,779 --> 00:27:39,000
following result so here you have the

711
00:27:39,000 --> 00:27:41,100
permission dialog on the left side and

712
00:27:41,100 --> 00:27:42,059
on the right side you have the

713
00:27:42,059 --> 00:27:43,620
permissionless overlay

714
00:27:43,620 --> 00:27:46,860
so that was the idea and that was how it

715
00:27:46,860 --> 00:27:49,219
worked

716
00:27:51,000 --> 00:27:53,220
to give you some context our app starts

717
00:27:53,220 --> 00:27:57,020
with zero permissions approved

718
00:28:21,000 --> 00:28:22,799
yeah and in terms of with all the

719
00:28:22,799 --> 00:28:26,159
permission approved all right so

720
00:28:26,159 --> 00:28:28,620
so that was the let's say the main

721
00:28:28,620 --> 00:28:31,440
points out of it I I guess a good viewer

722
00:28:31,440 --> 00:28:33,600
May notice the short delay when it comes

723
00:28:33,600 --> 00:28:35,820
to the overlay and the permission

724
00:28:35,820 --> 00:28:37,980
dialogue but this can be adjusted

725
00:28:37,980 --> 00:28:39,900
this actually belongs to a loop we just

726
00:28:39,900 --> 00:28:41,279
use the loop in order to ask the

727
00:28:41,279 --> 00:28:43,919
permissions but you can adjust the time

728
00:28:43,919 --> 00:28:45,720
that you request the permission so you

729
00:28:45,720 --> 00:28:47,960
can put your overlay on the right time

730
00:28:47,960 --> 00:28:51,900
all right so I guess um

731
00:28:51,900 --> 00:28:54,539
permissions dialogues are cool they can

732
00:28:54,539 --> 00:28:56,580
be used in order to get any kind of info

733
00:28:56,580 --> 00:28:58,380
when just private user information but

734
00:28:58,380 --> 00:29:00,600
can we do something better and the next

735
00:29:00,600 --> 00:29:02,159
let's say challenge was uh the

736
00:29:02,159 --> 00:29:03,720
multi-step decision dialogues which can

737
00:29:03,720 --> 00:29:05,520
be used in order to approve access to

738
00:29:05,520 --> 00:29:07,260
very interesting services like the

739
00:29:07,260 --> 00:29:09,299
accessibility service or give you access

740
00:29:09,299 --> 00:29:11,340
to the files of the device to the

741
00:29:11,340 --> 00:29:12,900
external directory

742
00:29:12,900 --> 00:29:15,720
after the introduction of the scoped uh

743
00:29:15,720 --> 00:29:18,539
let's say storage then you can get

744
00:29:18,539 --> 00:29:20,760
access to you can get your app as a

745
00:29:20,760 --> 00:29:23,760
device administrator you can get uh

746
00:29:23,760 --> 00:29:25,559
this is smaller window

747
00:29:25,559 --> 00:29:28,200
uh notification access

748
00:29:28,200 --> 00:29:30,240
premium SMS and of course to install an

749
00:29:30,240 --> 00:29:32,520
own apps so all these things are as you

750
00:29:32,520 --> 00:29:34,500
understand quite privileged when it

751
00:29:34,500 --> 00:29:36,779
comes to Android all right so the first

752
00:29:36,779 --> 00:29:38,220
challenge when it comes to this type of

753
00:29:38,220 --> 00:29:41,520
uh let's say dialogues was to minimize

754
00:29:41,520 --> 00:29:43,860
the steps that the user has to take in

755
00:29:43,860 --> 00:29:47,159
order to approve uh access to give

756
00:29:47,159 --> 00:29:49,380
access right so we have to minimize the

757
00:29:49,380 --> 00:29:51,600
steps to get to this button there and

758
00:29:51,600 --> 00:29:53,159
make the user to click on this button

759
00:29:53,159 --> 00:29:54,600
but there is a convenient way of doing

760
00:29:54,600 --> 00:29:56,940
that you can just create an intent set

761
00:29:56,940 --> 00:29:59,840
the actual action to the

762
00:29:59,840 --> 00:30:01,559
corresponding menu that we are

763
00:30:01,559 --> 00:30:02,940
interested about and you can start the

764
00:30:02,940 --> 00:30:05,700
activity in order to navigate the user

765
00:30:05,700 --> 00:30:07,320
to the menu that you want for example

766
00:30:07,320 --> 00:30:09,539
you want to get the user to the manage

767
00:30:09,539 --> 00:30:12,000
overlay display on top you can just

768
00:30:12,000 --> 00:30:13,440
create the first one

769
00:30:13,440 --> 00:30:15,240
accessibility service the second one and

770
00:30:15,240 --> 00:30:18,059
so on right so that was easy

771
00:30:18,059 --> 00:30:20,640
but we still have two steps the first

772
00:30:20,640 --> 00:30:21,720
step

773
00:30:21,720 --> 00:30:24,480
the user has to choose our app within

774
00:30:24,480 --> 00:30:27,919
the between in a list actually which uh

775
00:30:27,919 --> 00:30:30,779
with apps which request the same type of

776
00:30:30,779 --> 00:30:34,140
access and the second step is of course

777
00:30:34,140 --> 00:30:36,059
to make to trick the user to click on

778
00:30:36,059 --> 00:30:38,399
this button there but if you notice the

779
00:30:38,399 --> 00:30:40,980
first list uh the activities actually

780
00:30:40,980 --> 00:30:43,140
the packages there are arranged in

781
00:30:43,140 --> 00:30:46,140
alphabetical way right they are ordered

782
00:30:46,140 --> 00:30:48,000
alphabetically so the only thing that

783
00:30:48,000 --> 00:30:50,039
you have to do is just to name your app

784
00:30:50,039 --> 00:30:52,880
I guess with some maze like we did here

785
00:30:52,880 --> 00:30:56,580
AA so that explains the name in order to

786
00:30:56,580 --> 00:30:59,279
predict the position of

787
00:30:59,279 --> 00:31:01,679
our app in this specific list because

788
00:31:01,679 --> 00:31:04,260
it's very important right so the next

789
00:31:04,260 --> 00:31:06,480
step was to create a log APK which will

790
00:31:06,480 --> 00:31:08,760
simply start the first menu this one

791
00:31:08,760 --> 00:31:10,799
that you see here and then start an

792
00:31:10,799 --> 00:31:13,140
activity which will cover the parts

793
00:31:13,140 --> 00:31:14,700
that we are interested about so we can

794
00:31:14,700 --> 00:31:16,860
just focus the user only on our own app

795
00:31:16,860 --> 00:31:19,020
so that was the first step and then use

796
00:31:19,020 --> 00:31:20,700
a trampoline activity I will explain why

797
00:31:20,700 --> 00:31:22,440
I'll name it like this

798
00:31:22,440 --> 00:31:24,419
in order to start another overlay which

799
00:31:24,419 --> 00:31:26,700
will cover again the parts of the

800
00:31:26,700 --> 00:31:28,919
dialogue of the second dialogue that can

801
00:31:28,919 --> 00:31:31,279
be used in order to let's say

802
00:31:31,279 --> 00:31:33,240
communicate to the user that you know

803
00:31:33,240 --> 00:31:35,399
you are approving something which might

804
00:31:35,399 --> 00:31:36,419
be bad

805
00:31:36,419 --> 00:31:38,700
all right so this was the results I told

806
00:31:38,700 --> 00:31:41,039
you you're gonna see quite a lot of

807
00:31:41,039 --> 00:31:42,600
short clips

808
00:31:42,600 --> 00:31:45,720
and this is to get the system alert

809
00:31:45,720 --> 00:31:48,440
window yeah

810
00:31:48,720 --> 00:31:51,059
our app starts again with zero I mean

811
00:31:51,059 --> 00:31:54,860
with no permission approved

812
00:31:59,159 --> 00:32:02,039
so the message is totally you can of

813
00:32:02,039 --> 00:32:03,419
course you can change the message but

814
00:32:03,419 --> 00:32:05,820
this is something which

815
00:32:05,820 --> 00:32:10,399
is far from the actual message

816
00:32:19,559 --> 00:32:20,940
yeah and we have this permission

817
00:32:20,940 --> 00:32:23,520
approved right so simple

818
00:32:23,520 --> 00:32:25,980
okay

819
00:32:25,980 --> 00:32:29,520
all right so how we did that let's uh

820
00:32:29,520 --> 00:32:31,919
let's go to the technical part all right

821
00:32:31,919 --> 00:32:33,720
which like I said it's pretty much

822
00:32:33,720 --> 00:32:35,580
simple so we're starting uh with our

823
00:32:35,580 --> 00:32:37,260
main activity we don't create method

824
00:32:37,260 --> 00:32:39,299
where we are creating an intent we are

825
00:32:39,299 --> 00:32:40,860
just adding this action here that they

826
00:32:40,860 --> 00:32:42,480
talked to you about in the previous

827
00:32:42,480 --> 00:32:44,520
slides and where the first thing is to

828
00:32:44,520 --> 00:32:47,039
start the display on top right which is

829
00:32:47,039 --> 00:32:48,179
um it's going to trigger the Android

830
00:32:48,179 --> 00:32:50,580
settings up and start the display on top

831
00:32:50,580 --> 00:32:52,679
axis menu that's the first step

832
00:32:52,679 --> 00:32:54,240
then we're starting immediately another

833
00:32:54,240 --> 00:32:56,039
activity which is called we would we

834
00:32:56,039 --> 00:32:58,080
call trampoline it will make sense after

835
00:32:58,080 --> 00:32:59,299
you see this

836
00:32:59,299 --> 00:33:03,000
uh which will again in the create method

837
00:33:03,000 --> 00:33:05,220
will start the second instance of this

838
00:33:05,220 --> 00:33:07,440
player on top access menu

839
00:33:07,440 --> 00:33:11,039
so what this will do is to bring our uh

840
00:33:11,039 --> 00:33:13,260
trampoline activity in the impulse state

841
00:33:13,260 --> 00:33:15,299
so it will just try to remove our

842
00:33:15,299 --> 00:33:17,399
activity from the top of the back stack

843
00:33:17,399 --> 00:33:19,440
and we'll try to set it on the on Post

844
00:33:19,440 --> 00:33:22,260
State but instead of staying there we

845
00:33:22,260 --> 00:33:23,460
are going to start another activity

846
00:33:23,460 --> 00:33:24,899
which we'll call

847
00:33:24,899 --> 00:33:27,240
overlay trampoline that will do the

848
00:33:27,240 --> 00:33:29,340
following so in the first step

849
00:33:29,340 --> 00:33:32,519
it will modify its user interface in

850
00:33:32,519 --> 00:33:35,880
order to cover the first menu dialog

851
00:33:35,880 --> 00:33:37,679
so the user will click

852
00:33:37,679 --> 00:33:41,279
so this will trigger the Second Step but

853
00:33:41,279 --> 00:33:44,279
bring our own activity in the post state

854
00:33:44,279 --> 00:33:48,600
so we can now modify our user interface

855
00:33:48,600 --> 00:33:50,940
then again uh cover the second part of

856
00:33:50,940 --> 00:33:53,100
the dialog and when the user clicks

857
00:33:53,100 --> 00:33:55,500
again we can navigate the user somewhere

858
00:33:55,500 --> 00:33:57,840
else so why we did that why we are using

859
00:33:57,840 --> 00:34:00,539
that instead of something else we are

860
00:34:00,539 --> 00:34:02,220
using that because as I said before we

861
00:34:02,220 --> 00:34:03,240
don't have

862
00:34:03,240 --> 00:34:05,460
um our app

863
00:34:05,460 --> 00:34:08,520
doesn't get uh notified about the touch

864
00:34:08,520 --> 00:34:11,760
the users touch so we can't know there's

865
00:34:11,760 --> 00:34:15,000
no way to know if the user clicked on

866
00:34:15,000 --> 00:34:18,239
this menu so we identified that by the

867
00:34:18,239 --> 00:34:20,099
life cycle of the activity we can see

868
00:34:20,099 --> 00:34:21,960
that when the activity goes on the on

869
00:34:21,960 --> 00:34:23,940
pause State this means that the user

870
00:34:23,940 --> 00:34:26,580
clicked on the menu so our activity went

871
00:34:26,580 --> 00:34:28,379
on the on Post State and we can just

872
00:34:28,379 --> 00:34:30,119
let's say change and do all these things

873
00:34:30,119 --> 00:34:33,359
that we did before so

874
00:34:33,359 --> 00:34:36,918
while they didn't cover so far is how we

875
00:34:36,918 --> 00:34:40,500
identify this the current step that we

876
00:34:40,500 --> 00:34:43,679
are currently with in sorry so we're

877
00:34:43,679 --> 00:34:47,040
just using an intent uh and extra we

878
00:34:47,040 --> 00:34:48,800
name it step

879
00:34:48,800 --> 00:34:52,859
and then it simply switch case just to

880
00:34:52,859 --> 00:34:55,379
check in which Step we are so then we

881
00:34:55,379 --> 00:34:57,599
just modifying the message that we're

882
00:34:57,599 --> 00:34:59,220
showing to the user we're modifying some

883
00:34:59,220 --> 00:35:02,280
parameters like the X Y parameter that I

884
00:35:02,280 --> 00:35:03,839
showed you in the beginning

885
00:35:03,839 --> 00:35:06,180
and we are creating the overlays so this

886
00:35:06,180 --> 00:35:07,380
is the idea

887
00:35:07,380 --> 00:35:10,560
get the intent get the window manager

888
00:35:10,560 --> 00:35:12,119
instance

889
00:35:12,119 --> 00:35:13,980
as you see we are not using any kind of

890
00:35:13,980 --> 00:35:16,079
special window type we're just using a

891
00:35:16,079 --> 00:35:18,540
type application window no permissions

892
00:35:18,540 --> 00:35:20,040
nothing here

893
00:35:20,040 --> 00:35:22,020
we're just modifying the settings like

894
00:35:22,020 --> 00:35:26,040
uh X Y with uh this kind of stuff

895
00:35:26,040 --> 00:35:28,079
and we are covering the parts of the

896
00:35:28,079 --> 00:35:29,280
dialogue that we are interested about

897
00:35:29,280 --> 00:35:31,619
that's it for this first step and then

898
00:35:31,619 --> 00:35:33,960
when we go to the impulse State we just

899
00:35:33,960 --> 00:35:38,400
increase our step one let's say like one

900
00:35:38,400 --> 00:35:40,079
step more and we're going to the second

901
00:35:40,079 --> 00:35:42,900
one which we're covering the other paths

902
00:35:42,900 --> 00:35:47,220
all right like like we saw in the demo

903
00:35:47,220 --> 00:35:49,619
all right so that was uh the main idea

904
00:35:49,619 --> 00:35:52,200
of the attack but what was the

905
00:35:52,200 --> 00:35:54,060
take out of it which screens were

906
00:35:54,060 --> 00:35:55,920
vulnerable so we managed to get all the

907
00:35:55,920 --> 00:35:57,480
dangerous permissions like I talked to

908
00:35:57,480 --> 00:36:01,500
you about like uh SMS is call logs

909
00:36:01,500 --> 00:36:04,500
everything uh then we must get all file

910
00:36:04,500 --> 00:36:05,940
access

911
00:36:05,940 --> 00:36:08,400
the we must set our app as a device

912
00:36:08,400 --> 00:36:11,339
admin if as you understand I could bring

913
00:36:11,339 --> 00:36:13,800
a demo for each one of them but yeah we

914
00:36:13,800 --> 00:36:16,800
managed to get advice I mean uh access

915
00:36:16,800 --> 00:36:19,560
display on top of other apps modify

916
00:36:19,560 --> 00:36:21,900
system settings installer known apps and

917
00:36:21,900 --> 00:36:23,760
get users access so as you understand

918
00:36:23,760 --> 00:36:24,780
when it comes to Android operating

919
00:36:24,780 --> 00:36:27,000
system this thing is quite powerful if

920
00:36:27,000 --> 00:36:28,320
you manage to get all these permissions

921
00:36:28,320 --> 00:36:30,000
for your app then you have something

922
00:36:30,000 --> 00:36:32,460
which is uh I would say something like a

923
00:36:32,460 --> 00:36:34,500
malware and steroids so it's it's quite

924
00:36:34,500 --> 00:36:37,200
quite big we what we didn't manage to

925
00:36:37,200 --> 00:36:40,079
get in this case was notification access

926
00:36:40,079 --> 00:36:42,960
and uh actually build the service was

927
00:36:42,960 --> 00:36:44,640
that would be wonderful but we didn't

928
00:36:44,640 --> 00:36:48,180
anyway so okay let's summarize what we

929
00:36:48,180 --> 00:36:50,880
have uh so we said that

930
00:36:50,880 --> 00:36:54,780
the main idea I mean the design issue

931
00:36:54,780 --> 00:36:56,460
here is that the user can identify with

932
00:36:56,460 --> 00:36:58,500
which app let's say interact with right

933
00:36:58,500 --> 00:37:00,599
that's that's the first issue and the

934
00:37:00,599 --> 00:37:02,280
other one was when the activity is

935
00:37:02,280 --> 00:37:05,880
pushed in this um uh backstock it will

936
00:37:05,880 --> 00:37:08,760
retain the graphical user interface

937
00:37:08,760 --> 00:37:11,220
uh the idea the main idea was to

938
00:37:11,220 --> 00:37:13,320
integrate the user interface of the

939
00:37:13,320 --> 00:37:15,000
activity which is on top with the user

940
00:37:15,000 --> 00:37:17,400
interface of the activity which is below

941
00:37:17,400 --> 00:37:19,920
add click-through capability in order to

942
00:37:19,920 --> 00:37:22,320
hijack a single step decision dialogue

943
00:37:22,320 --> 00:37:24,540
step decision dialogues and also

944
00:37:24,540 --> 00:37:26,880
third-party apps

945
00:37:26,880 --> 00:37:28,560
all right so

946
00:37:28,560 --> 00:37:30,540
uh let's

947
00:37:30,540 --> 00:37:33,480
how we have we can protect apps from

948
00:37:33,480 --> 00:37:36,180
this type of attacks and the only way

949
00:37:36,180 --> 00:37:38,640
to protect an app from this type of

950
00:37:38,640 --> 00:37:41,040
attack and this this actually which what

951
00:37:41,040 --> 00:37:43,680
was the mitigation regarding the system

952
00:37:43,680 --> 00:37:45,060
dialogues

953
00:37:45,060 --> 00:37:48,540
is to check if um the motion event which

954
00:37:48,540 --> 00:37:52,380
creates a click is partially or fully

955
00:37:52,380 --> 00:37:55,619
obscured that's the only way to do that

956
00:37:55,619 --> 00:37:58,380
right so you get this flag you save this

957
00:37:58,380 --> 00:38:00,900
flag is let's say set and if it is

958
00:38:00,900 --> 00:38:04,079
partially obscure or if it's um obscured

959
00:38:04,079 --> 00:38:06,540
then you can just reject the specific

960
00:38:06,540 --> 00:38:07,560
click

961
00:38:07,560 --> 00:38:11,579
or touch there is another way uh but uh

962
00:38:11,579 --> 00:38:13,920
I no it can't protect you from this type

963
00:38:13,920 --> 00:38:15,240
of attack but it can protect you from

964
00:38:15,240 --> 00:38:17,280
system alert window

965
00:38:17,280 --> 00:38:19,380
which is the height overlay windows that

966
00:38:19,380 --> 00:38:20,940
I talked to you about and it was

967
00:38:20,940 --> 00:38:23,339
imported in Android 12. so you can use

968
00:38:23,339 --> 00:38:24,359
this one

969
00:38:24,359 --> 00:38:26,460
and uh use the set height overlay

970
00:38:26,460 --> 00:38:29,579
Windows method to protect your let's say

971
00:38:29,579 --> 00:38:32,099
Activity from this kind of attacks but

972
00:38:32,099 --> 00:38:34,320
again with special type of Windows and

973
00:38:34,320 --> 00:38:36,119
with that being said that was the last

974
00:38:36,119 --> 00:38:39,060
one thank you very much for uh doing

975
00:38:39,060 --> 00:38:41,099
this if you have any questions I will be

976
00:38:41,099 --> 00:38:43,260
happy to answer

977
00:38:43,260 --> 00:38:45,859
thank you

978
00:38:51,300 --> 00:38:53,400
okay thank you

979
00:38:53,400 --> 00:38:56,240
any questions

980
00:39:03,859 --> 00:39:07,079
if you can go to the second to last

981
00:39:07,079 --> 00:39:10,200
slide yeah what does it mean if it's

982
00:39:10,200 --> 00:39:13,440
obscured or obscured means that it's

983
00:39:13,440 --> 00:39:15,839
discovered from another window okay so

984
00:39:15,839 --> 00:39:18,480
there is a flag for this yeah not used

985
00:39:18,480 --> 00:39:21,140
normally then

986
00:39:21,320 --> 00:39:24,720
it's it's a a property of the motion

987
00:39:24,720 --> 00:39:28,560
event which uh identifies if this motion

988
00:39:28,560 --> 00:39:31,560
event let's say comes from uh it it

989
00:39:31,560 --> 00:39:34,079
comes using a dispatch to put it this

990
00:39:34,079 --> 00:39:36,060
way so you are dispatching it was this

991
00:39:36,060 --> 00:39:38,280
patch okay so that that's what it means

992
00:39:38,280 --> 00:39:39,720
simply said

993
00:39:39,720 --> 00:39:42,560
thank you okay

994
00:39:44,099 --> 00:39:45,780
here

995
00:39:45,780 --> 00:39:50,420
uh your top right

996
00:39:52,280 --> 00:39:56,420
so thanks for the presentation very nice

997
00:39:56,420 --> 00:40:00,660
uh this mitigation would imply that

998
00:40:00,660 --> 00:40:03,599
every single developer needs to do on

999
00:40:03,599 --> 00:40:05,280
every single

1000
00:40:05,280 --> 00:40:08,359
touch event this kind of mitigation

1001
00:40:08,359 --> 00:40:11,579
uh when it comes yeah of course when it

1002
00:40:11,579 --> 00:40:12,900
comes to like I said to critical

1003
00:40:12,900 --> 00:40:14,520
decision screens not everywhere right

1004
00:40:14,520 --> 00:40:18,060
yeah but but still this would not really

1005
00:40:18,060 --> 00:40:20,900
protect you against the type of

1006
00:40:20,900 --> 00:40:22,920
vulnerabilities that you showed were

1007
00:40:22,920 --> 00:40:26,040
which were at the OS level for approving

1008
00:40:26,040 --> 00:40:27,540
permissions right

1009
00:40:27,540 --> 00:40:30,000
uh when it comes to approving

1010
00:40:30,000 --> 00:40:31,380
permissions this thing has already

1011
00:40:31,380 --> 00:40:34,200
mitigated right there is a fix uh it has

1012
00:40:34,200 --> 00:40:36,480
been applied so there's no I mean if you

1013
00:40:36,480 --> 00:40:38,520
try to to run the same thing on the

1014
00:40:38,520 --> 00:40:40,140
newest Android versions it won't won't

1015
00:40:40,140 --> 00:40:40,980
work

1016
00:40:40,980 --> 00:40:43,980
but uh when it comes to third-party apps

1017
00:40:43,980 --> 00:40:45,660
yeah there is still an issue with that

1018
00:40:45,660 --> 00:40:47,460
you can use that in order let's say to

1019
00:40:47,460 --> 00:40:49,800
create this kind of overlays

1020
00:40:49,800 --> 00:40:54,119
um although I mean you need the game you

1021
00:40:54,119 --> 00:40:56,400
need again uh to bypass some

1022
00:40:56,400 --> 00:40:57,720
restrictions right so you have to get

1023
00:40:57,720 --> 00:40:59,400
your app let's say some kind of

1024
00:40:59,400 --> 00:41:01,440
permissions you know to do that but it

1025
00:41:01,440 --> 00:41:03,540
yeah it still works I mean if uh if your

1026
00:41:03,540 --> 00:41:06,380
app doesn't have this this flag set yeah

1027
00:41:06,380 --> 00:41:10,680
it works so I was wondering uh given

1028
00:41:10,680 --> 00:41:14,520
that Google fixed this in the OS itself

1029
00:41:14,520 --> 00:41:17,339
are they planning to also fix it for

1030
00:41:17,339 --> 00:41:20,240
third-party applications

1031
00:41:20,240 --> 00:41:22,920
uh I don't think so from the point that

1032
00:41:22,920 --> 00:41:25,680
I mean they can't uh make you use this

1033
00:41:25,680 --> 00:41:28,140
flash right it's something which is not

1034
00:41:28,140 --> 00:41:30,599
um it doesn't stand from this point and

1035
00:41:30,599 --> 00:41:32,520
this is actually something which uh I

1036
00:41:32,520 --> 00:41:34,560
have been discussing with within my

1037
00:41:34,560 --> 00:41:36,540
company there are there are let's say

1038
00:41:36,540 --> 00:41:39,300
some cases where you can't apply these

1039
00:41:39,300 --> 00:41:41,099
flags because it breaks a lot a lot of

1040
00:41:41,099 --> 00:41:42,420
things right you know when you're

1041
00:41:42,420 --> 00:41:44,579
developing something and you're just

1042
00:41:44,579 --> 00:41:46,680
changing a small flag which was used for

1043
00:41:46,680 --> 00:41:48,960
uh something else then you can break a

1044
00:41:48,960 --> 00:41:50,820
chain of things and this can be a

1045
00:41:50,820 --> 00:41:52,980
disaster so like I said you can't use

1046
00:41:52,980 --> 00:41:55,980
these flags when you have really

1047
00:41:55,980 --> 00:41:58,500
important decision screens really you

1048
00:41:58,500 --> 00:42:01,200
can add them in your view let's say your

1049
00:42:01,200 --> 00:42:03,839
button your tangle or whatever in order

1050
00:42:03,839 --> 00:42:05,640
to protect to protect it from this type

1051
00:42:05,640 --> 00:42:07,380
of attack that's that's the only thing

1052
00:42:07,380 --> 00:42:11,099
you can do I guess yeah but uh maybe the

1053
00:42:11,099 --> 00:42:14,220
inverse should be applied maybe these

1054
00:42:14,220 --> 00:42:16,740
flags should be the default and then if

1055
00:42:16,740 --> 00:42:19,079
you haven't yeah I don't know

1056
00:42:19,079 --> 00:42:21,480
yeah I mean that's uh you have to you

1057
00:42:21,480 --> 00:42:22,740
know the triangle right you have

1058
00:42:22,740 --> 00:42:25,320
functional you have uh yeah but yeah

1059
00:42:25,320 --> 00:42:27,540
minions yeah so yeah I mean it's

1060
00:42:27,540 --> 00:42:29,520
something that uh I guess they leave it

1061
00:42:29,520 --> 00:42:31,740
up to the developer to decide how they I

1062
00:42:31,740 --> 00:42:33,300
mean how they can arrange that that

1063
00:42:33,300 --> 00:42:35,880
thing there

1064
00:42:35,880 --> 00:42:38,700
okay thanks all right

1065
00:42:38,700 --> 00:42:41,299
thank you

1066
00:42:41,339 --> 00:42:44,820
any other questions yeah there see

1067
00:42:44,820 --> 00:42:47,420
chicken

1068
00:42:51,720 --> 00:42:53,579
hi hello

1069
00:42:53,579 --> 00:42:55,680
um I wonder how could you make an

1070
00:42:55,680 --> 00:42:57,180
application and a phishing application

1071
00:42:57,180 --> 00:43:00,060
that choose the evident and presented

1072
00:43:00,060 --> 00:43:01,020
the

1073
00:43:01,020 --> 00:43:04,140
um in the first slides uh the evident

1074
00:43:04,140 --> 00:43:07,920
mechanism without the user noticing the

1075
00:43:07,920 --> 00:43:12,780
the app uh while navigating between apps

1076
00:43:12,780 --> 00:43:14,339
the first one I've made the task

1077
00:43:14,339 --> 00:43:16,920
switching right yeah yeah so this attack

1078
00:43:16,920 --> 00:43:19,560
Leverage is the fact that the human eye

1079
00:43:19,560 --> 00:43:21,420
can't let's say perceive the transition

1080
00:43:21,420 --> 00:43:23,220
state from one activity to another due

1081
00:43:23,220 --> 00:43:25,140
to the short transition time so there's

1082
00:43:25,140 --> 00:43:27,420
a very short transition time in order to

1083
00:43:27,420 --> 00:43:28,560
identify

1084
00:43:28,560 --> 00:43:31,140
to see this I mean so the human I can't

1085
00:43:31,140 --> 00:43:33,359
can't proceed that if we go in if we go

1086
00:43:33,359 --> 00:43:35,099
back and you go very very slowly you can

1087
00:43:35,099 --> 00:43:37,920
see the transition actually but uh no

1088
00:43:37,920 --> 00:43:40,980
when it normally it works no there's no

1089
00:43:40,980 --> 00:43:42,660
way so this is what this attack actually

1090
00:43:42,660 --> 00:43:44,339
leverages and actually this is something

1091
00:43:44,339 --> 00:43:46,319
which is used by a lot of a lot of

1092
00:43:46,319 --> 00:43:49,440
malware families in order to do such a

1093
00:43:49,440 --> 00:43:51,839
thing they're using this switch activity

1094
00:43:51,839 --> 00:43:54,119
switch in order to do that so it is it

1095
00:43:54,119 --> 00:43:55,440
is something which is valid that's what

1096
00:43:55,440 --> 00:43:56,819
I mean

1097
00:43:56,819 --> 00:44:02,579
okay okay because uh while we we well

1098
00:44:02,579 --> 00:44:05,339
you show the the video about the

1099
00:44:05,339 --> 00:44:09,300
evidence mechanism we could see the

1100
00:44:09,300 --> 00:44:11,280
malicious up in the background while

1101
00:44:11,280 --> 00:44:15,300
navigating between apps so I wonder yeah

1102
00:44:15,300 --> 00:44:16,619
if you if you push it in the background

1103
00:44:16,619 --> 00:44:19,200
yeah yeah that's that's a way to do that

1104
00:44:19,200 --> 00:44:21,359
but how many times you do that

1105
00:44:21,359 --> 00:44:23,040
when you're I mean you have your banking

1106
00:44:23,040 --> 00:44:24,359
app right you just click on you're

1107
00:44:24,359 --> 00:44:26,640
banking up I I don't know yeah maybe I

1108
00:44:26,640 --> 00:44:28,980
don't know if you're sometimes uh let's

1109
00:44:28,980 --> 00:44:32,339
say very security focused yeah I I agree

1110
00:44:32,339 --> 00:44:34,260
with you we will do that

1111
00:44:34,260 --> 00:44:37,380
but uh honestly I prefer not to install

1112
00:44:37,380 --> 00:44:39,720
something that's the that's my first

1113
00:44:39,720 --> 00:44:42,480
rule when it comes to security but um

1114
00:44:42,480 --> 00:44:46,020
yeah when you push the apps uh the app

1115
00:44:46,020 --> 00:44:47,760
back in the back side you can see which

1116
00:44:47,760 --> 00:44:50,700
actually the in which app it belongs to

1117
00:44:50,700 --> 00:44:55,098
but like I said you don't uh see that

1118
00:44:55,140 --> 00:44:58,020
um is there a mechanism to

1119
00:44:58,020 --> 00:45:00,380
to

1120
00:45:01,380 --> 00:45:05,819
to phantomize maybe to there are a lot

1121
00:45:05,819 --> 00:45:08,339
of uh things that have been let's say

1122
00:45:08,339 --> 00:45:10,680
introduced in order to show the user

1123
00:45:10,680 --> 00:45:11,819
that you know you're interacting with

1124
00:45:11,819 --> 00:45:13,980
this app even some uh there are some

1125
00:45:13,980 --> 00:45:16,260
papers about it but you know when it

1126
00:45:16,260 --> 00:45:19,680
comes to this stuff I think that I mean

1127
00:45:19,680 --> 00:45:22,020
I think so I'm not sure but I think that

1128
00:45:22,020 --> 00:45:24,300
Google has to let's say put a balance

1129
00:45:24,300 --> 00:45:27,180
between uh usability that they don't

1130
00:45:27,180 --> 00:45:28,560
want to interrupt the user will say

1131
00:45:28,560 --> 00:45:31,500
experience with uh because okay you can

1132
00:45:31,500 --> 00:45:33,540
there are some cases there are some

1133
00:45:33,540 --> 00:45:34,920
papers they're showing some things like

1134
00:45:34,920 --> 00:45:37,740
you know we can add the you know a bar

1135
00:45:37,740 --> 00:45:39,240
here which says that you are interacting

1136
00:45:39,240 --> 00:45:40,740
with this app like like we have in

1137
00:45:40,740 --> 00:45:42,359
Windows for example right you know which

1138
00:45:42,359 --> 00:45:44,339
with with which app you're interacting

1139
00:45:44,339 --> 00:45:46,380
with but no here I mean there's no

1140
00:45:46,380 --> 00:45:48,900
nothing at least for now nothing

1141
00:45:48,900 --> 00:45:50,400
as far as I know

1142
00:45:50,400 --> 00:45:54,359
yeah okay thank you thank you very much

1143
00:45:54,359 --> 00:45:58,400
I still have one question here

1144
00:45:58,859 --> 00:46:01,560
hi hello thanks for the presentation was

1145
00:46:01,560 --> 00:46:04,619
very interesting uh so the last side I

1146
00:46:04,619 --> 00:46:06,000
mean not the last but the the one

1147
00:46:06,000 --> 00:46:08,520
presenting speaks about mitigation yeah

1148
00:46:08,520 --> 00:46:12,180
uh what about common users mitigation or

1149
00:46:12,180 --> 00:46:15,180
protection apart from good hygiene and

1150
00:46:15,180 --> 00:46:17,520
not installing everything on Google app

1151
00:46:17,520 --> 00:46:20,280
on Google Play yeah uh unfortunately

1152
00:46:20,280 --> 00:46:21,900
that's something yeah that has to do

1153
00:46:21,900 --> 00:46:24,060
with uh when it comes to Android I mean

1154
00:46:24,060 --> 00:46:26,940
there are some specifically say

1155
00:46:26,940 --> 00:46:28,619
steps that you have to follow when it

1156
00:46:28,619 --> 00:46:31,200
comes to security never of course that's

1157
00:46:31,200 --> 00:46:32,880
the first one the first rule never trust

1158
00:46:32,880 --> 00:46:35,760
and up which is of Market we never

1159
00:46:35,760 --> 00:46:38,040
installed Enough From Any Source you

1160
00:46:38,040 --> 00:46:40,560
never know what hey you know why I mean

1161
00:46:40,560 --> 00:46:42,900
when it comes to a play store

1162
00:46:42,900 --> 00:46:45,119
at least they have some rules you can't

1163
00:46:45,119 --> 00:46:47,220
upload your app and request

1164
00:46:47,220 --> 00:46:49,140
accessibility service without have some

1165
00:46:49,140 --> 00:46:51,480
kind of you know let's say reasoning

1166
00:46:51,480 --> 00:46:53,460
about it right when it comes out to off

1167
00:46:53,460 --> 00:46:54,720
Market you can do whatever you want

1168
00:46:54,720 --> 00:46:56,880
there's no although there are mitigation

1169
00:46:56,880 --> 00:46:59,640
I mean uh in Android 13 you can't access

1170
00:46:59,640 --> 00:47:01,079
the you can't request accessibility

1171
00:47:01,079 --> 00:47:03,540
service when you are off Market anyway

1172
00:47:03,540 --> 00:47:05,640
but what I'm what I want to say is that

1173
00:47:05,640 --> 00:47:08,400
make sure that uh the sources from which

1174
00:47:08,400 --> 00:47:10,859
you are installing your apps are first

1175
00:47:10,859 --> 00:47:11,700
of all

1176
00:47:11,700 --> 00:47:14,160
trust it and then what kind of

1177
00:47:14,160 --> 00:47:16,020
permissions you are approving for

1178
00:47:16,020 --> 00:47:18,420
example this is my alert window is for

1179
00:47:18,420 --> 00:47:20,880
me it's powerful right it can bypass a

1180
00:47:20,880 --> 00:47:22,319
lot of restrictions and people you know

1181
00:47:22,319 --> 00:47:24,480
just yeah approve it there's nothing

1182
00:47:24,480 --> 00:47:26,280
yeah because they don't know about it so

1183
00:47:26,280 --> 00:47:28,740
just approve this uh permission it can

1184
00:47:28,740 --> 00:47:30,660
you know you can give a lot of uh

1185
00:47:30,660 --> 00:47:33,480
privilege to an app right and you can do

1186
00:47:33,480 --> 00:47:35,520
all this all this kind of stuff all this

1187
00:47:35,520 --> 00:47:38,000
magic with the user interface so yeah

1188
00:47:38,000 --> 00:47:41,160
you have to to engage you have to be

1189
00:47:41,160 --> 00:47:43,500
careful with that you have to check your

1190
00:47:43,500 --> 00:47:45,240
sources yeah that's that's the only

1191
00:47:45,240 --> 00:47:47,280
thing you can do I guess

1192
00:47:47,280 --> 00:47:49,319
right thank you

1193
00:47:49,319 --> 00:47:52,220
other questions

1194
00:47:55,560 --> 00:47:59,460
oh okay still another one

1195
00:47:59,460 --> 00:48:02,099
yeah I was wondering uh first of all

1196
00:48:02,099 --> 00:48:04,619
thanks for the great talk thank you I

1197
00:48:04,619 --> 00:48:07,079
was wondering if there are any actual

1198
00:48:07,079 --> 00:48:09,720
use cases for overlays that you know

1199
00:48:09,720 --> 00:48:13,020
about or it's about fishing like I said

1200
00:48:13,020 --> 00:48:15,540
I mean when it comes to overlays when it

1201
00:48:15,540 --> 00:48:18,060
comes to Great confusion attacks in

1202
00:48:18,060 --> 00:48:21,060
general like I said the most modern

1203
00:48:21,060 --> 00:48:22,980
Marvel families are using this kind of

1204
00:48:22,980 --> 00:48:25,859
stuff for example you have uh Cerberus

1205
00:48:25,859 --> 00:48:27,660
right which is very well known it's just

1206
00:48:27,660 --> 00:48:29,819
creating when it comes to this attack no

1207
00:48:29,819 --> 00:48:32,520
as you so far know the one that I I'm

1208
00:48:32,520 --> 00:48:34,319
talking I talked to you about no there's

1209
00:48:34,319 --> 00:48:36,420
no I mean evidence at least that uses

1210
00:48:36,420 --> 00:48:38,280
this type of attack right the ones that

1211
00:48:38,280 --> 00:48:40,200
I show you yeah

1212
00:48:40,200 --> 00:48:43,079
my question was not about okay

1213
00:48:43,079 --> 00:48:45,540
that's a bit more legitimate apps having

1214
00:48:45,540 --> 00:48:46,560
a

1215
00:48:46,560 --> 00:48:49,819
actual use cases

1216
00:48:50,119 --> 00:48:53,180
yeah I mean uh of course

1217
00:48:53,180 --> 00:48:56,400
I think that a lot I think actually the

1218
00:48:56,400 --> 00:48:59,099
you know the pop the bubbles that you

1219
00:48:59,099 --> 00:49:01,319
see in your window in your device like

1220
00:49:01,319 --> 00:49:03,599
The Messengers and stuff they are using

1221
00:49:03,599 --> 00:49:06,119
this uh type alert type system a little

1222
00:49:06,119 --> 00:49:07,920
window in order to do that there are

1223
00:49:07,920 --> 00:49:09,839
actually there are two ways in order to

1224
00:49:09,839 --> 00:49:11,940
do that it's a picture in picture which

1225
00:49:11,940 --> 00:49:15,780
creates a small window like the maps you

1226
00:49:15,780 --> 00:49:17,160
use the maps up

1227
00:49:17,160 --> 00:49:20,220
you just minimize it so it will go this

1228
00:49:20,220 --> 00:49:21,480
is a picture in picture and the other

1229
00:49:21,480 --> 00:49:23,099
one is they're using uh using the system

1230
00:49:23,099 --> 00:49:24,660
alert which is a legitimate way yeah

1231
00:49:24,660 --> 00:49:27,480
that's for the legitimate way to use it

1232
00:49:27,480 --> 00:49:29,760
to be on top of other apps

1233
00:49:29,760 --> 00:49:32,520
yeah so it's useless it's so useless

1234
00:49:32,520 --> 00:49:35,480
anyway yeah

1235
00:49:36,420 --> 00:49:39,200
other questions

1236
00:49:41,339 --> 00:49:43,859
okay perfect so thank you again for the

1237
00:49:43,859 --> 00:49:45,570
presentation

1238
00:49:45,570 --> 00:49:49,219
[Applause]

