1
00:00:03,380 --> 00:00:06,259
test test everyone can hear me all right

2
00:00:06,259 --> 00:00:09,840
hello everyone hello Roseanne it's been

3
00:00:09,840 --> 00:00:12,420
a while long it's been a year

4
00:00:12,420 --> 00:00:14,519
um it's great to see you all in these

5
00:00:14,519 --> 00:00:17,340
tough times and before starting with my

6
00:00:17,340 --> 00:00:19,500
talk I'd like to tell you a little story

7
00:00:19,500 --> 00:00:22,500
the backstory behind it a few months ago

8
00:00:22,500 --> 00:00:24,660
I was doing a penetration testing at a

9
00:00:24,660 --> 00:00:27,840
clients and I don't know for you all but

10
00:00:27,840 --> 00:00:32,098
I have like a to-do list of maybe 20 or

11
00:00:32,098 --> 00:00:37,020
200 links blog posts slides to read to

12
00:00:37,020 --> 00:00:38,940
research of course I never do this

13
00:00:38,940 --> 00:00:41,160
because the list is too long but it's

14
00:00:41,160 --> 00:00:44,760
there I keep it all there if someone

15
00:00:44,760 --> 00:00:47,100
like me is doing some bookmarks on

16
00:00:47,100 --> 00:00:48,660
Twitter you know it's useless but you

17
00:00:48,660 --> 00:00:52,020
still do it anyway that's me and I was

18
00:00:52,020 --> 00:00:54,059
doing a penetration test and in my

19
00:00:54,059 --> 00:00:56,640
bookmarks I had two links that I really

20
00:00:56,640 --> 00:00:58,980
wanted to research and understand

21
00:00:58,980 --> 00:01:01,860
and those were a diamond ticket in the

22
00:01:01,860 --> 00:01:04,319
rough which was a variation of the

23
00:01:04,319 --> 00:01:06,900
golden ticket for Kerberos and the other

24
00:01:06,900 --> 00:01:08,159
one was

25
00:01:08,159 --> 00:01:11,040
um how to do resource-based constrained

26
00:01:11,040 --> 00:01:14,340
delegation with a normal user something

27
00:01:14,340 --> 00:01:16,799
written by James Forshaw and if you

28
00:01:16,799 --> 00:01:18,659
don't know him already he's the kind of

29
00:01:18,659 --> 00:01:20,520
guy that writes something you will never

30
00:01:20,520 --> 00:01:23,759
understand even if you read it 20 times

31
00:01:23,759 --> 00:01:25,799
so it was there you know it was just

32
00:01:25,799 --> 00:01:28,799
standing there and during my penetration

33
00:01:28,799 --> 00:01:30,960
test you know standard thing you just

34
00:01:30,960 --> 00:01:33,360
plug yourself your domain admin in two

35
00:01:33,360 --> 00:01:36,840
minutes or so and I had some time and I

36
00:01:36,840 --> 00:01:38,640
wanted to research it and I had the good

37
00:01:38,640 --> 00:01:41,159
opportunity to do it because I could do

38
00:01:41,159 --> 00:01:43,619
rbcd but I didn't control a computer

39
00:01:43,619 --> 00:01:45,900
account and for those of you who

40
00:01:45,900 --> 00:01:47,939
manipulate Kerberos on the day-to-day

41
00:01:47,939 --> 00:01:50,759
they know that doing rbcd with a normal

42
00:01:50,759 --> 00:01:53,040
user account is something that sometimes

43
00:01:53,040 --> 00:01:54,960
could be really useful

44
00:01:54,960 --> 00:01:58,740
so I was just researching it and then I

45
00:01:58,740 --> 00:02:01,860
was reading it implementing it and while

46
00:02:01,860 --> 00:02:03,960
I was implementing it I was like

47
00:02:03,960 --> 00:02:07,500
man there's something to do with like we

48
00:02:07,500 --> 00:02:09,360
could combine those two ideas of the

49
00:02:09,360 --> 00:02:12,120
diamond ticket and the normal user

50
00:02:12,120 --> 00:02:14,400
obesity stuff and that's exactly what

51
00:02:14,400 --> 00:02:17,280
I'm going to talk to you right now

52
00:02:17,280 --> 00:02:19,379
so the title of this conference is a

53
00:02:19,379 --> 00:02:22,319
ticket worth waiting 65 years for my

54
00:02:22,319 --> 00:02:24,239
name is Charlie brownberg and I live

55
00:02:24,239 --> 00:02:27,060
this line for a few seconds if you want

56
00:02:27,060 --> 00:02:29,099
to access the the slide deck it's right

57
00:02:29,099 --> 00:02:30,379
here

58
00:02:30,379 --> 00:02:35,819
shutdown.page.link slash ends 23 ins 23.

59
00:02:35,819 --> 00:02:39,660
one two three let's go

60
00:02:39,660 --> 00:02:42,780
so here is the table of contents the

61
00:02:42,780 --> 00:02:45,300
first thing is we'll do some reminders

62
00:02:45,300 --> 00:02:47,400
some refresh your course about active

63
00:02:47,400 --> 00:02:50,160
directory in Kerberos by show of hands

64
00:02:50,160 --> 00:02:52,560
who is manipulating active directory on

65
00:02:52,560 --> 00:02:55,140
a day-to-day basis

66
00:02:55,140 --> 00:02:58,560
few people don't be shy someone that

67
00:02:58,560 --> 00:03:00,840
knows a little a little bit about active

68
00:03:00,840 --> 00:03:03,000
directory by show of hands

69
00:03:03,000 --> 00:03:06,080
Ah that's that's a bit more all right

70
00:03:06,080 --> 00:03:10,260
and who among you perfectly understands

71
00:03:10,260 --> 00:03:12,900
curb Ross please shout if you do all

72
00:03:12,900 --> 00:03:13,620
right

73
00:03:13,620 --> 00:03:16,080
so um that's what I thought

74
00:03:16,080 --> 00:03:16,800
um

75
00:03:16,800 --> 00:03:19,140
I didn't Shout

76
00:03:19,140 --> 00:03:21,180
the second part will be forging tickets

77
00:03:21,180 --> 00:03:23,340
we'll talk about Golden tickets silver

78
00:03:23,340 --> 00:03:24,860
tickets

79
00:03:24,860 --> 00:03:27,540
ms-14068 it's the kind of stuff that's

80
00:03:27,540 --> 00:03:29,400
so old you'll never find a useful

81
00:03:29,400 --> 00:03:31,800
resource on the internet so I'll talk

82
00:03:31,800 --> 00:03:33,540
about it and then we'll talk about

83
00:03:33,540 --> 00:03:35,640
Diamond tickets which is a nice

84
00:03:35,640 --> 00:03:37,680
variation of the golden ticket and

85
00:03:37,680 --> 00:03:40,200
Sapphire tickets but just before talking

86
00:03:40,200 --> 00:03:42,840
about Sapphire tickets we'll do some

87
00:03:42,840 --> 00:03:45,900
requirements theoretical Parts which are

88
00:03:45,900 --> 00:03:48,780
as for your self-extension user to user

89
00:03:48,780 --> 00:03:51,060
authentication and then the combination

90
00:03:51,060 --> 00:03:53,159
of those two

91
00:03:53,159 --> 00:03:55,440
um just for some time keeping by the

92
00:03:55,440 --> 00:03:58,080
time I'm and I'm finished with as for

93
00:03:58,080 --> 00:04:00,180
yourself plus utu you'll probably be

94
00:04:00,180 --> 00:04:04,080
asleep so I'll just do a reminder to you

95
00:04:04,080 --> 00:04:06,659
know get back on the on the conference

96
00:04:06,659 --> 00:04:09,120
and at the end I will wrap things up and

97
00:04:09,120 --> 00:04:11,879
we'll probably have some time for a q a

98
00:04:11,879 --> 00:04:14,340
uh don't be too excited the demos uh the

99
00:04:14,340 --> 00:04:16,620
demo gods are never with me so the demos

100
00:04:16,620 --> 00:04:20,160
are pre-recorded it's screenshots but I

101
00:04:20,160 --> 00:04:22,919
did it it's it's it's tested and um but

102
00:04:22,919 --> 00:04:25,440
sadly I didn't exchange with a Microsoft

103
00:04:25,440 --> 00:04:27,600
until 1am this morning like a dear cam

104
00:04:27,600 --> 00:04:28,740
did

105
00:04:28,740 --> 00:04:31,639
so this is me

106
00:04:31,740 --> 00:04:32,820
um

107
00:04:32,820 --> 00:04:35,280
colors but I mean that's all right my

108
00:04:35,280 --> 00:04:37,080
name is Charlie Bromberg you may also

109
00:04:37,080 --> 00:04:39,300
know me on the on the social networks or

110
00:04:39,300 --> 00:04:41,580
if you don't that's all right by the

111
00:04:41,580 --> 00:04:43,680
nickname shutdown if you reverse it

112
00:04:43,680 --> 00:04:46,560
that's my uh Twitter handle my day job

113
00:04:46,560 --> 00:04:50,280
is I work at cab Gemini as a head of pen

114
00:04:50,280 --> 00:04:52,380
test I mean that's that's a palm to the

115
00:04:52,380 --> 00:04:55,380
title but uh what I do day to day is

116
00:04:55,380 --> 00:04:58,199
technically uh lead the change for our

117
00:04:58,199 --> 00:05:01,259
penetration testing offerings so I mean

118
00:05:01,259 --> 00:05:02,639
that's there if you want to talk about

119
00:05:02,639 --> 00:05:04,259
penetration testing that's my stuff if

120
00:05:04,259 --> 00:05:05,460
you want to talk about detection and

121
00:05:05,460 --> 00:05:08,220
mitigation please don't talk to me my

122
00:05:08,220 --> 00:05:11,639
night jobs are listed there you may know

123
00:05:11,639 --> 00:05:14,100
some resources or tools that I have

124
00:05:14,100 --> 00:05:16,199
created or contributed to

125
00:05:16,199 --> 00:05:18,660
naming a few of the hacker recipes which

126
00:05:18,660 --> 00:05:20,820
is a set of theoretical and practical

127
00:05:20,820 --> 00:05:23,400
Guides unhacking of course but you'll

128
00:05:23,400 --> 00:05:25,520
find some some Easter eggs as well

129
00:05:25,520 --> 00:05:29,400
hexago which is um well by show of hands

130
00:05:29,400 --> 00:05:32,460
who uses Kali Linux

131
00:05:32,460 --> 00:05:34,620
all right you can okay you can stop

132
00:05:34,620 --> 00:05:36,180
using Keller Linux and start using

133
00:05:36,180 --> 00:05:38,039
hexagon now

134
00:05:38,039 --> 00:05:40,440
wanting to be mean but I mean we are all

135
00:05:40,440 --> 00:05:42,180
professionals here

136
00:05:42,180 --> 00:05:45,240
and my known locations is here um I live

137
00:05:45,240 --> 00:05:47,340
in the south of France meaning that to

138
00:05:47,340 --> 00:05:49,979
come here I either had I had two choices

139
00:05:49,979 --> 00:05:52,560
either come by train which would have

140
00:05:52,560 --> 00:05:54,479
been canceled with the strikes going on

141
00:05:54,479 --> 00:05:57,300
or come by cars so if you see me yawning

142
00:05:57,300 --> 00:05:59,520
that's because I I came by car and I'm

143
00:05:59,520 --> 00:06:01,860
really tired so let's get to it now

144
00:06:01,860 --> 00:06:04,440
active directory anchor Ross let's do

145
00:06:04,440 --> 00:06:06,000
some reminder active directory when

146
00:06:06,000 --> 00:06:08,100
we're talking about ad we usually refer

147
00:06:08,100 --> 00:06:10,620
to adds which is active directory domain

148
00:06:10,620 --> 00:06:13,020
services but it's not limited to this we

149
00:06:13,020 --> 00:06:16,800
have adds adcs adfs adss ad bubble s

150
00:06:16,800 --> 00:06:19,320
whatever and those services are usually

151
00:06:19,320 --> 00:06:22,259
very connected and the domain Services

152
00:06:22,259 --> 00:06:24,600
is usually the usually the core it

153
00:06:24,600 --> 00:06:27,479
allows users groups devices uh

154
00:06:27,479 --> 00:06:30,180
permissions whatever to work between

155
00:06:30,180 --> 00:06:32,520
themselves and then you have some things

156
00:06:32,520 --> 00:06:34,259
that revolve around it like certificate

157
00:06:34,259 --> 00:06:36,180
Services Federation Services signed

158
00:06:36,180 --> 00:06:37,919
services and whatever

159
00:06:37,919 --> 00:06:39,600
laughs

160
00:06:39,600 --> 00:06:41,780
active directory domain Services

161
00:06:41,780 --> 00:06:45,120
allows users and groups and resources to

162
00:06:45,120 --> 00:06:47,880
coexist and in order to do that in order

163
00:06:47,880 --> 00:06:50,819
to allow that it implements uh

164
00:06:50,819 --> 00:06:52,319
authentication protocols Network

165
00:06:52,319 --> 00:06:54,660
authentication protocols so to name a

166
00:06:54,660 --> 00:06:57,120
few ntlm and Kerberos are the two major

167
00:06:57,120 --> 00:06:59,699
ones by a show of hands who know the

168
00:06:59,699 --> 00:07:01,139
exact difference between ntlm and

169
00:07:01,139 --> 00:07:02,699
Kerberos

170
00:07:02,699 --> 00:07:04,880
okay I'll remind it

171
00:07:04,880 --> 00:07:07,860
ntlm works in a three-way handshake

172
00:07:07,860 --> 00:07:11,819
manner the client asks the domain the

173
00:07:11,819 --> 00:07:14,880
access to a service it negotiates the

174
00:07:14,880 --> 00:07:17,100
authentication the service sends a

175
00:07:17,100 --> 00:07:19,680
challenge this challenge is hashed in

176
00:07:19,680 --> 00:07:22,080
whatever and this proves that the user

177
00:07:22,080 --> 00:07:24,960
has knowledge of its password

178
00:07:24,960 --> 00:07:27,180
um and then the service verifies that

179
00:07:27,180 --> 00:07:29,639
data with the domain controller on

180
00:07:29,639 --> 00:07:31,620
Kerberos it works a bit differently

181
00:07:31,620 --> 00:07:35,099
which with tickets and the user that

182
00:07:35,099 --> 00:07:37,740
wants to access a resource communicates

183
00:07:37,740 --> 00:07:40,340
with the KDC the key distribution center

184
00:07:40,340 --> 00:07:43,380
beforehand it obtains something called a

185
00:07:43,380 --> 00:07:45,539
TGT which is a ticket granting ticket

186
00:07:45,539 --> 00:07:48,180
and this first ticket allows to obtain

187
00:07:48,180 --> 00:07:50,220
service tickets which are the tickets

188
00:07:50,220 --> 00:07:52,080
that must be presented to the services

189
00:07:52,080 --> 00:07:54,120
we want to have access to

190
00:07:54,120 --> 00:07:58,740
on ntlm the core of ntlm the the the

191
00:07:58,740 --> 00:08:02,819
secrets behind ntlm are anti and LM

192
00:08:02,819 --> 00:08:05,460
hashes this

193
00:08:05,460 --> 00:08:08,940
must not be confused with ntlm net and

194
00:08:08,940 --> 00:08:12,120
tlm those are very different things uh

195
00:08:12,120 --> 00:08:14,460
I'll talk about it more later on

196
00:08:14,460 --> 00:08:17,940
on Kerberos the secrets Kerberos relies

197
00:08:17,940 --> 00:08:23,300
on are of four types DS rc4

198
00:08:23,300 --> 00:08:27,900
aes128 and 260 and 256 and there's only

199
00:08:27,900 --> 00:08:30,479
one common key between ntlm and Kerberos

200
00:08:30,479 --> 00:08:32,700
it's the anti-hash which corresponds to

201
00:08:32,700 --> 00:08:35,219
the rc4 key

202
00:08:35,219 --> 00:08:37,799
all right so

203
00:08:37,799 --> 00:08:39,360
here I'd like to talk to you about

204
00:08:39,360 --> 00:08:41,700
something is the difference on the

205
00:08:41,700 --> 00:08:44,219
offensive point of view between ntlm and

206
00:08:44,219 --> 00:08:45,240
Kerberos

207
00:08:45,240 --> 00:08:48,180
what you might see here is that for ntlm

208
00:08:48,180 --> 00:08:51,660
we have a few attacks like NTM relay NTM

209
00:08:51,660 --> 00:08:54,959
capture pass the hash and for Kerberos

210
00:08:54,959 --> 00:08:57,540
you have like I don't know how many

211
00:08:57,540 --> 00:09:01,140
Shenanigans and offensive point of views

212
00:09:01,140 --> 00:09:01,980
there

213
00:09:01,980 --> 00:09:04,260
please don't

214
00:09:04,260 --> 00:09:06,779
um exit Insomniac thinking that Kerberos

215
00:09:06,779 --> 00:09:09,839
is more vulnerable than ntlm and tlm is

216
00:09:09,839 --> 00:09:11,940
dark please don't use it disable

217
00:09:11,940 --> 00:09:14,940
disable it please what I want to do here

218
00:09:14,940 --> 00:09:17,279
is just highlight the fact that Kerberos

219
00:09:17,279 --> 00:09:19,560
having only Kerberos is not keeping you

220
00:09:19,560 --> 00:09:22,500
safe it's not perfect out of the box you

221
00:09:22,500 --> 00:09:24,420
have to configure it you have to harden

222
00:09:24,420 --> 00:09:27,060
it and curb Ross is vulnerable to some

223
00:09:27,060 --> 00:09:28,980
abuses so to name a few

224
00:09:28,980 --> 00:09:30,959
pre-authentication Brute Force that's

225
00:09:30,959 --> 00:09:33,540
the ticket Pass the Cash whatever pass

226
00:09:33,540 --> 00:09:35,700
the certificate overpass the hash golden

227
00:09:35,700 --> 00:09:38,100
civil tickets I'll talk to you about it

228
00:09:38,100 --> 00:09:41,160
as reprose asterisk roast kerberost and

229
00:09:41,160 --> 00:09:43,740
whatnot with those vulnerabilities are

230
00:09:43,740 --> 00:09:46,140
listed in a mind map that I listed here

231
00:09:46,140 --> 00:09:47,519
and

232
00:09:47,519 --> 00:09:50,459
you probably can't see it so I invite

233
00:09:50,459 --> 00:09:52,140
you to go to the link and see the Mind

234
00:09:52,140 --> 00:09:54,440
map in a bigger form

235
00:09:54,440 --> 00:09:59,279
don't mix up terminology between ntlm

236
00:09:59,279 --> 00:10:02,700
and tlm net and tlm and whatever please

237
00:10:02,700 --> 00:10:05,160
if you think you are not sure about the

238
00:10:05,160 --> 00:10:07,500
terms you are using refer to this mind

239
00:10:07,500 --> 00:10:09,600
map and if you are sure you are using

240
00:10:09,600 --> 00:10:11,760
the right terminology refer to this mind

241
00:10:11,760 --> 00:10:13,200
map

242
00:10:13,200 --> 00:10:15,360
so now let's talk a bit about Kerberos

243
00:10:15,360 --> 00:10:18,180
authentication it works in um three

244
00:10:18,180 --> 00:10:21,000
major times major steps the first one is

245
00:10:21,000 --> 00:10:22,740
the pre-authentication

246
00:10:22,740 --> 00:10:24,839
the first step allows the user that

247
00:10:24,839 --> 00:10:26,880
wants to access a resource to obtain the

248
00:10:26,880 --> 00:10:31,040
first ticket the TGT this ticket is

249
00:10:31,040 --> 00:10:33,360
linked to this user it includes

250
00:10:33,360 --> 00:10:35,580
everything about the user and in order

251
00:10:35,580 --> 00:10:38,160
to obtain this TGT that later on allows

252
00:10:38,160 --> 00:10:40,920
to obtain other tickets the user must

253
00:10:40,920 --> 00:10:42,720
prove that he has knowledge of his

254
00:10:42,720 --> 00:10:43,740
password

255
00:10:43,740 --> 00:10:46,620
so this is the pre-authentication step

256
00:10:46,620 --> 00:10:49,019
on a side note this can be disabled for

257
00:10:49,019 --> 00:10:51,779
some users but I'll know I'm not going

258
00:10:51,779 --> 00:10:53,880
to go into the details of this this is

259
00:10:53,880 --> 00:10:55,560
called as for Prost

260
00:10:55,560 --> 00:10:59,279
then once the user has the TGT he will

261
00:10:59,279 --> 00:11:01,200
be able to use it if he has his own

262
00:11:01,200 --> 00:11:04,620
session key and the TGT includes

263
00:11:04,620 --> 00:11:06,779
something called a pack privilege

264
00:11:06,779 --> 00:11:08,880
attribute certificate and in this ticket

265
00:11:08,880 --> 00:11:11,100
in this pack you'll find all the

266
00:11:11,100 --> 00:11:13,560
information regarding the user so his

267
00:11:13,560 --> 00:11:16,620
identifier the groups he's member of

268
00:11:16,620 --> 00:11:19,320
etc etc these various flags and their

269
00:11:19,320 --> 00:11:22,380
settings about the user so when he has

270
00:11:22,380 --> 00:11:23,700
this TGT

271
00:11:23,700 --> 00:11:26,160
by presenting this TGT to the key

272
00:11:26,160 --> 00:11:28,440
distribution center usually the domain

273
00:11:28,440 --> 00:11:30,540
controller he'll be able to obtain

274
00:11:30,540 --> 00:11:32,220
service tickets and those service

275
00:11:32,220 --> 00:11:34,620
tickets not to be confused with TGs

276
00:11:34,620 --> 00:11:37,220
which the GS is a service not a ticket

277
00:11:37,220 --> 00:11:41,339
this St allows to access Services it

278
00:11:41,339 --> 00:11:44,339
allows to authenticate over services and

279
00:11:44,339 --> 00:11:46,980
then the service itself wants receiving

280
00:11:46,980 --> 00:11:50,220
uh the ticket and wants decrypting it is

281
00:11:50,220 --> 00:11:52,860
able to tell if the user has the right

282
00:11:52,860 --> 00:11:55,860
or not to access it so it's two

283
00:11:55,860 --> 00:11:57,180
different steps

284
00:11:57,180 --> 00:11:59,220
the first one user authenticates to the

285
00:11:59,220 --> 00:12:01,380
service and then the service gives

286
00:12:01,380 --> 00:12:02,820
access or not

287
00:12:02,820 --> 00:12:06,600
this is keros

288
00:12:06,600 --> 00:12:09,120
these are Kerberos tickets what's the

289
00:12:09,120 --> 00:12:10,860
difference between TGT and service

290
00:12:10,860 --> 00:12:14,160
tickets well the difference is

291
00:12:14,160 --> 00:12:16,560
is very it's a little difference the

292
00:12:16,560 --> 00:12:18,360
tickets are the same they have the same

293
00:12:18,360 --> 00:12:21,180
structure they include the same pack the

294
00:12:21,180 --> 00:12:22,920
only difference is the service service

295
00:12:22,920 --> 00:12:25,740
name the s name in the ticket the s name

296
00:12:25,740 --> 00:12:28,560
refers to the Target servers service the

297
00:12:28,560 --> 00:12:32,459
ticket is issued for for TGT the target

298
00:12:32,459 --> 00:12:36,180
service is the krbgt which is the

299
00:12:36,180 --> 00:12:39,420
central Authority for Kerberos and for

300
00:12:39,420 --> 00:12:41,339
service tickets the service name the

301
00:12:41,339 --> 00:12:43,320
target service well it refers to the

302
00:12:43,320 --> 00:12:46,019
Target service so for example here on

303
00:12:46,019 --> 00:12:48,240
the service tickets I gave the example

304
00:12:48,240 --> 00:12:49,100
of

305
00:12:49,100 --> 00:12:52,380
cifs server.domain.local which is the

306
00:12:52,380 --> 00:12:53,579
target service

307
00:12:53,579 --> 00:12:56,579
another difference here is the pack

308
00:12:56,579 --> 00:12:58,920
in the TGT the privileged attribute

309
00:12:58,920 --> 00:13:01,620
certificate is protected by the krbdt

310
00:13:01,620 --> 00:13:04,740
long-term key which is the the password

311
00:13:04,740 --> 00:13:07,200
variation the the password derivation

312
00:13:07,200 --> 00:13:09,779
and on service tickets the pack is

313
00:13:09,779 --> 00:13:11,240
protected with the target service

314
00:13:11,240 --> 00:13:13,019
long-term key

315
00:13:13,019 --> 00:13:14,579
which if you understood the difference

316
00:13:14,579 --> 00:13:17,100
between TGT and St it's exactly the same

317
00:13:17,100 --> 00:13:19,200
thing on TGT the target service is the

318
00:13:19,200 --> 00:13:22,079
power bgdt so the pack is protected with

319
00:13:22,079 --> 00:13:24,060
its long-term key

320
00:13:24,060 --> 00:13:26,160
so that's the difference between tgts

321
00:13:26,160 --> 00:13:30,600
and service tickets it's minimal

322
00:13:30,600 --> 00:13:31,800
all right

323
00:13:31,800 --> 00:13:34,500
now that you have perfectly understood

324
00:13:34,500 --> 00:13:36,180
the differences between ntlm and

325
00:13:36,180 --> 00:13:38,100
Kerberos and how Kerberos Works in

326
00:13:38,100 --> 00:13:39,320
active directory domain Services

327
00:13:39,320 --> 00:13:41,160
perfectly understood the differences

328
00:13:41,160 --> 00:13:44,220
between tgts and service tickets we can

329
00:13:44,220 --> 00:13:46,740
move on to forging those tickets

330
00:13:46,740 --> 00:13:48,959
shortly put if we are able to forge

331
00:13:48,959 --> 00:13:50,820
tickets value tickets

332
00:13:50,820 --> 00:13:54,360
we should be able to access services or

333
00:13:54,360 --> 00:13:56,519
act on behalf of someone else

334
00:13:56,519 --> 00:13:59,220
so the first step here is we'll talk

335
00:13:59,220 --> 00:14:01,019
about silver tickets

336
00:14:01,019 --> 00:14:03,360
by show of hands who knows what a silver

337
00:14:03,360 --> 00:14:05,399
ticket is already

338
00:14:05,399 --> 00:14:06,839
all right

339
00:14:06,839 --> 00:14:09,120
some people already so

340
00:14:09,120 --> 00:14:11,579
um I'll still explain it

341
00:14:11,579 --> 00:14:13,920
what we know when we need to build what

342
00:14:13,920 --> 00:14:15,300
we need to know when we build silver

343
00:14:15,300 --> 00:14:17,519
tickets is the target service long-term

344
00:14:17,519 --> 00:14:20,160
key when we build a silver ticket we

345
00:14:20,160 --> 00:14:23,540
actually build a service ticket an st

346
00:14:23,540 --> 00:14:26,519
to remind this it's very easy silver

347
00:14:26,519 --> 00:14:31,019
tickets acronym St service ticket St you

348
00:14:31,019 --> 00:14:32,760
know so what we need to know is the

349
00:14:32,760 --> 00:14:34,620
target service long-term key

350
00:14:34,620 --> 00:14:37,320
we also need to know the domain Sid the

351
00:14:37,320 --> 00:14:39,839
username the user error ID whatever we

352
00:14:39,839 --> 00:14:42,120
want to put in the privilege attribute

353
00:14:42,120 --> 00:14:44,459
certificate in the pack so for for

354
00:14:44,459 --> 00:14:46,560
instance if we want to act as the domain

355
00:14:46,560 --> 00:14:48,839
admin we have to find the domain admins

356
00:14:48,839 --> 00:14:52,320
username it's our ID all his attributes

357
00:14:52,320 --> 00:14:54,959
and put them all in the pack and will be

358
00:14:54,959 --> 00:14:58,139
able to forge the pack since we know the

359
00:14:58,139 --> 00:14:59,459
secret key that should be used to

360
00:14:59,459 --> 00:15:01,079
encrypt it which is the target service

361
00:15:01,079 --> 00:15:02,699
long-term key

362
00:15:02,699 --> 00:15:06,060
I included some notes here when we Forge

363
00:15:06,060 --> 00:15:09,420
a silver ticket some detection notes we

364
00:15:09,420 --> 00:15:11,519
have no communication at all with the

365
00:15:11,519 --> 00:15:14,940
KDC so there's that it's it's a nice

366
00:15:14,940 --> 00:15:18,180
touch so for detection software it's a

367
00:15:18,180 --> 00:15:20,639
bit harder to detect Maybe

368
00:15:20,639 --> 00:15:22,260
um but again I'm not a detection expert

369
00:15:22,260 --> 00:15:23,760
so please don't ask me questions about

370
00:15:23,760 --> 00:15:24,899
it

371
00:15:24,899 --> 00:15:28,019
and then another note is that serve a

372
00:15:28,019 --> 00:15:30,540
silver ticket in some cases can be used

373
00:15:30,540 --> 00:15:31,980
when

374
00:15:31,980 --> 00:15:33,959
um doing some lateral movement or

375
00:15:33,959 --> 00:15:35,459
privilege escalation whereas golden

376
00:15:35,459 --> 00:15:37,920
ticket is usually referred to a

377
00:15:37,920 --> 00:15:40,500
persistence technique why it's because

378
00:15:40,500 --> 00:15:42,360
the silver ticket allows to access a

379
00:15:42,360 --> 00:15:44,100
service and if we know this service is

380
00:15:44,100 --> 00:15:46,620
long-term key which is a long a key

381
00:15:46,620 --> 00:15:49,560
that's easier to obtain will be able to

382
00:15:49,560 --> 00:15:51,480
access that service as an admin for

383
00:15:51,480 --> 00:15:52,560
example

384
00:15:52,560 --> 00:15:54,540
so on the diagram you'll see exactly

385
00:15:54,540 --> 00:15:56,459
what I explained here the first step is

386
00:15:56,459 --> 00:15:58,980
the attacker Forge forges his silver

387
00:15:58,980 --> 00:16:02,459
ticket makes an access request by giving

388
00:16:02,459 --> 00:16:04,920
his silver ticket to the Target service

389
00:16:04,920 --> 00:16:07,019
and then the target service decrypts the

390
00:16:07,019 --> 00:16:09,480
pack with his own long-term key

391
00:16:09,480 --> 00:16:12,120
sees that the pack reflects the values

392
00:16:12,120 --> 00:16:14,760
of the domain admin and the domain admin

393
00:16:14,760 --> 00:16:17,399
usually usually have has administrator

394
00:16:17,399 --> 00:16:19,199
access to the service so

395
00:16:19,199 --> 00:16:21,600
we're good to go

396
00:16:21,600 --> 00:16:24,839
here is um the demo

397
00:16:24,839 --> 00:16:27,720
um so I I included some screenshots and

398
00:16:27,720 --> 00:16:30,120
everything I'm going to show you is with

399
00:16:30,120 --> 00:16:32,519
Linux or at least with a python with

400
00:16:32,519 --> 00:16:35,459
impacts if you want to if you want me to

401
00:16:35,459 --> 00:16:37,199
show you some examples of how we use

402
00:16:37,199 --> 00:16:39,899
Ruby use well I won't so please don't

403
00:16:39,899 --> 00:16:41,699
talk to me about using Windows I don't

404
00:16:41,699 --> 00:16:44,639
use Windows I break it

405
00:16:44,639 --> 00:16:46,620
so the first step is we have to obtain

406
00:16:46,620 --> 00:16:49,320
the Sid which is the the unique security

407
00:16:49,320 --> 00:16:51,839
identifier of the domain

408
00:16:51,839 --> 00:16:55,560
you'll see it here it's s1521 blah blah

409
00:16:55,560 --> 00:16:57,899
this Sid once we know it and once we

410
00:16:57,899 --> 00:17:01,740
know the target service SPN which is the

411
00:17:01,740 --> 00:17:03,899
value that refers to the Target service

412
00:17:03,899 --> 00:17:06,720
and we know the target service long-term

413
00:17:06,720 --> 00:17:10,140
key we can mix that up in the ticketer

414
00:17:10,140 --> 00:17:13,799
command line common line here and we'll

415
00:17:13,799 --> 00:17:15,720
generate a ticket so it's something

416
00:17:15,720 --> 00:17:20,459
called some random user.c cache

417
00:17:20,459 --> 00:17:23,220
do we want to analyze that ticket yes we

418
00:17:23,220 --> 00:17:24,660
want to understand how it's structured

419
00:17:24,660 --> 00:17:27,119
so here's the first step I'm using

420
00:17:27,119 --> 00:17:29,160
describe tickets which is another script

421
00:17:29,160 --> 00:17:31,260
of impact I'm not sure it's been merged

422
00:17:31,260 --> 00:17:33,600
already not sure but I mean it's there

423
00:17:33,600 --> 00:17:36,840
somewhere on the internet and by giving

424
00:17:36,840 --> 00:17:39,419
the target service long-term key will be

425
00:17:39,419 --> 00:17:42,299
able to decrypt ourself the pack the

426
00:17:42,299 --> 00:17:45,240
ticket and see the values that

427
00:17:45,240 --> 00:17:47,820
see that we indeed have forged a valid

428
00:17:47,820 --> 00:17:50,760
seller ticket we can see here that the

429
00:17:50,760 --> 00:17:54,320
service name refers to host slash

430
00:17:54,320 --> 00:17:56,340
sv1.domain.local which is our Target

431
00:17:56,340 --> 00:17:59,100
service and if we go into the pack we

432
00:17:59,100 --> 00:18:01,320
can see that the user error ID is 500

433
00:18:01,320 --> 00:18:04,559
which which usually usually sorry refers

434
00:18:04,559 --> 00:18:07,919
to the domain admin the built-in domain

435
00:18:07,919 --> 00:18:10,140
admin we can see the group ID group

436
00:18:10,140 --> 00:18:12,240
error IDs we can see for example that

437
00:18:12,240 --> 00:18:15,000
his member of the domain admins shama

438
00:18:15,000 --> 00:18:17,880
admins well this is a domain admin so

439
00:18:17,880 --> 00:18:19,559
with this pack

440
00:18:19,559 --> 00:18:21,480
with this forged pack and this forged

441
00:18:21,480 --> 00:18:23,700
ticket we should be able to access the

442
00:18:23,700 --> 00:18:24,600
service

443
00:18:24,600 --> 00:18:27,360
that's what I'm showing you here in the

444
00:18:27,360 --> 00:18:29,280
bottom part of the screenshot you can

445
00:18:29,280 --> 00:18:31,380
see that I'm using a secret stump to do

446
00:18:31,380 --> 00:18:33,179
a credential dumping remote credential

447
00:18:33,179 --> 00:18:36,480
dumping on sv1 it works everything in

448
00:18:36,480 --> 00:18:39,240
green are the credentials and on the

449
00:18:39,240 --> 00:18:41,340
upper part of the screenshot I try to do

450
00:18:41,340 --> 00:18:43,140
the same thing with another other Target

451
00:18:43,140 --> 00:18:45,539
service which was the domain controller

452
00:18:45,539 --> 00:18:48,120
it didn't work because if I want to

453
00:18:48,120 --> 00:18:50,220
Target another service I'll have to

454
00:18:50,220 --> 00:18:52,679
forge another service ticket

455
00:18:52,679 --> 00:18:55,260
so that's the silver ticket

456
00:18:55,260 --> 00:18:57,419
let's now talk about the golden tickets

457
00:18:57,419 --> 00:19:00,179
the golden ticket is very similar but

458
00:19:00,179 --> 00:19:03,179
instead of forging a ticket for a

459
00:19:03,179 --> 00:19:05,520
specific service we Forge a ticket for

460
00:19:05,520 --> 00:19:08,640
the KOB gdt we Forge a TGT and this

461
00:19:08,640 --> 00:19:13,320
allows us to ask for any service tickets

462
00:19:13,320 --> 00:19:15,240
so it's very similar what we need to

463
00:19:15,240 --> 00:19:17,400
know is not the uh it's still the target

464
00:19:17,400 --> 00:19:19,260
Services long-term key and here the

465
00:19:19,260 --> 00:19:21,840
target service is krbdt so we need to

466
00:19:21,840 --> 00:19:24,900
know his LT key what we build here is

467
00:19:24,900 --> 00:19:26,880
the same thing we built a forged pack in

468
00:19:26,880 --> 00:19:29,100
a forged ticket and in the diagram on

469
00:19:29,100 --> 00:19:30,240
the right you can see that the first

470
00:19:30,240 --> 00:19:33,360
step is the attacker builds forges he's

471
00:19:33,360 --> 00:19:37,020
dgt his golden ticket uses this TGT he's

472
00:19:37,020 --> 00:19:39,419
forged TGT to obtain a service ticket

473
00:19:39,419 --> 00:19:41,640
for a Target service and then use that

474
00:19:41,640 --> 00:19:45,240
service ticket to access said service

475
00:19:45,240 --> 00:19:47,780
some notes here as of November 2021

476
00:19:47,780 --> 00:19:51,360
Microsoft updated some things and now in

477
00:19:51,360 --> 00:19:53,760
the ticket we have to give a valid

478
00:19:53,760 --> 00:19:56,700
username right before and here in those

479
00:19:56,700 --> 00:19:59,340
screenshots I'm using some random user

480
00:19:59,340 --> 00:20:01,200
which doesn't exist in my active

481
00:20:01,200 --> 00:20:05,039
directory setup but as of November 2021

482
00:20:05,039 --> 00:20:07,140
for updated controller domain

483
00:20:07,140 --> 00:20:09,059
controllers you'll have to use a valid

484
00:20:09,059 --> 00:20:10,919
username

485
00:20:10,919 --> 00:20:12,960
um the problem with golden ticket it's

486
00:20:12,960 --> 00:20:14,940
been here for a while people know it

487
00:20:14,940 --> 00:20:17,100
know about it they know how to detect it

488
00:20:17,100 --> 00:20:19,620
I mean most of them

489
00:20:19,620 --> 00:20:23,100
um so high detection probabilities and

490
00:20:23,100 --> 00:20:25,620
you have a high probability also of

491
00:20:25,620 --> 00:20:27,539
messing up the pack since you forge

492
00:20:27,539 --> 00:20:29,100
everything you forget the ticket you

493
00:20:29,100 --> 00:20:30,240
forged the pack

494
00:20:30,240 --> 00:20:32,820
well if there's a mismatch somewhere

495
00:20:32,820 --> 00:20:35,340
take a duration expression whatever the

496
00:20:35,340 --> 00:20:37,860
flags well you'll be detected so that's

497
00:20:37,860 --> 00:20:39,900
the issue with golden ticket and that's

498
00:20:39,900 --> 00:20:42,419
the reason behind the diamond ticket ID

499
00:20:42,419 --> 00:20:45,120
which is an improvement over the golden

500
00:20:45,120 --> 00:20:46,320
ticket

501
00:20:46,320 --> 00:20:48,900
this issue is mitigated with something

502
00:20:48,900 --> 00:20:51,860
called Golden copy which is a utility

503
00:20:51,860 --> 00:20:53,539
that

504
00:20:53,539 --> 00:20:57,419
uses that relies on neo4g databases for

505
00:20:57,419 --> 00:21:00,299
Bloodhound and it retrieves all the

506
00:21:00,299 --> 00:21:02,460
information about the the target user to

507
00:21:02,460 --> 00:21:05,880
impersonate and prepares a ticketer

508
00:21:05,880 --> 00:21:08,280
command so that you don't mess up your

509
00:21:08,280 --> 00:21:10,500
pack but still you don't have default

510
00:21:10,500 --> 00:21:12,299
values put by some scripts and you'll

511
00:21:12,299 --> 00:21:14,520
have a high probability of messing up

512
00:21:14,520 --> 00:21:15,299
things

513
00:21:15,299 --> 00:21:16,520
foreign

514
00:21:16,520 --> 00:21:20,039
shots same thing first step we get the

515
00:21:20,039 --> 00:21:22,740
Sid of the domain second step we build

516
00:21:22,740 --> 00:21:25,380
we Forge the golden ticket now we don't

517
00:21:25,380 --> 00:21:28,020
need the target SPN anymore since we are

518
00:21:28,020 --> 00:21:29,580
not building a service ticket we are

519
00:21:29,580 --> 00:21:32,159
building building a TGT and if we

520
00:21:32,159 --> 00:21:34,200
analyze that that ticket we can see that

521
00:21:34,200 --> 00:21:37,740
the service name here is krb TGT slash

522
00:21:37,740 --> 00:21:40,500
domain.local which means we are working

523
00:21:40,500 --> 00:21:42,600
here with a TGT

524
00:21:42,600 --> 00:21:44,760
in the pack you'll see the exact same

525
00:21:44,760 --> 00:21:47,760
thing as before we are indeed acting as

526
00:21:47,760 --> 00:21:49,679
the domain admin

527
00:21:49,679 --> 00:21:52,080
if we use it now it's the little the

528
00:21:52,080 --> 00:21:54,960
little difference we can still uh do

529
00:21:54,960 --> 00:21:57,360
some remote credential dumping on svo1

530
00:21:57,360 --> 00:22:00,360
but we'll have also the ability to do

531
00:22:00,360 --> 00:22:02,700
this with the domain controller since we

532
00:22:02,700 --> 00:22:05,340
are acting as a domain admin with his

533
00:22:05,340 --> 00:22:07,860
dgt we are able to obtain any service

534
00:22:07,860 --> 00:22:09,960
ticket we want

535
00:22:09,960 --> 00:22:12,020
now let's talk a bit about

536
00:22:12,020 --> 00:22:14,940
ms-14068 by show of hands who has heard

537
00:22:14,940 --> 00:22:17,820
about this vulnerability

538
00:22:17,820 --> 00:22:19,520
who

539
00:22:19,520 --> 00:22:23,460
who wants to explain it here no one

540
00:22:23,460 --> 00:22:25,500
knows how it how it works it's very

541
00:22:25,500 --> 00:22:27,539
complicated and the main reason behind

542
00:22:27,539 --> 00:22:30,240
it is that there's the resources that

543
00:22:30,240 --> 00:22:32,880
exist on the internet are

544
00:22:32,880 --> 00:22:35,760
where there are a few of them

545
00:22:35,760 --> 00:22:38,039
um not now since uh

546
00:22:38,039 --> 00:22:40,740
a few years ago or months ago I'm not

547
00:22:40,740 --> 00:22:43,020
sure hack the box which is a learning

548
00:22:43,020 --> 00:22:44,940
platform introduced a machine that was

549
00:22:44,940 --> 00:22:46,980
vulnerable to this so now you are able

550
00:22:46,980 --> 00:22:49,080
to find some write-ups about about it

551
00:22:49,080 --> 00:22:52,380
but I mean it's still not as documented

552
00:22:52,380 --> 00:22:55,860
as other more recent attacks

553
00:22:55,860 --> 00:22:58,679
on a side note this is a vulnerability

554
00:22:58,679 --> 00:23:01,140
this is not an abuse

555
00:23:01,140 --> 00:23:04,140
which what this means is that on updated

556
00:23:04,140 --> 00:23:06,840
unpatched machines this will not work

557
00:23:06,840 --> 00:23:09,240
it's not it abuse a logical abuse it's a

558
00:23:09,240 --> 00:23:12,679
vulnerability meaning it was patched

559
00:23:12,679 --> 00:23:15,600
in Microsoft balance this was not a

560
00:23:15,600 --> 00:23:16,860
feature

561
00:23:16,860 --> 00:23:22,679
so it referred to cve 2014 6324 and I'll

562
00:23:22,679 --> 00:23:24,480
not go into the details about the crypto

563
00:23:24,480 --> 00:23:28,679
behind it because yeah no no please

564
00:23:28,679 --> 00:23:31,440
don't ask questions about crypto what we

565
00:23:31,440 --> 00:23:33,840
need to know here are domain SIDS or

566
00:23:33,840 --> 00:23:36,299
credentials Sid Etc the main difference

567
00:23:36,299 --> 00:23:38,340
with a Golden Ticket silver tickets Etc

568
00:23:38,340 --> 00:23:41,640
is that we need valid credentials in the

569
00:23:41,640 --> 00:23:43,200
domain

570
00:23:43,200 --> 00:23:45,720
that's it and we need to have a

571
00:23:45,720 --> 00:23:47,940
vulnerable KDC of course something that

572
00:23:47,940 --> 00:23:50,880
wasn't patched what we do here will rely

573
00:23:50,880 --> 00:23:52,500
on the diagram on the right I'm not sure

574
00:23:52,500 --> 00:23:54,419
if you'll be able to see it so I'll do

575
00:23:54,419 --> 00:23:57,419
I'll just do some audio description the

576
00:23:57,419 --> 00:23:59,760
first step is we want to obtain a TGT

577
00:23:59,760 --> 00:24:01,799
for a standard user that's the first

578
00:24:01,799 --> 00:24:03,960
step so let's say the standard user is

579
00:24:03,960 --> 00:24:07,440
called Bubba Bob obtains his own TGT

580
00:24:07,440 --> 00:24:08,580
then

581
00:24:08,580 --> 00:24:11,820
Bob sign out the TGT must be requested

582
00:24:11,820 --> 00:24:14,940
without a pack that's it then the

583
00:24:14,940 --> 00:24:17,640
attacker proceeds to forging Apec just

584
00:24:17,640 --> 00:24:19,200
like the golden ticket attack

585
00:24:19,200 --> 00:24:21,900
and then he'll be able to put that pack

586
00:24:21,900 --> 00:24:24,860
that forged back into the valid

587
00:24:24,860 --> 00:24:29,039
TGT for Bob which means that TGT will be

588
00:24:29,039 --> 00:24:31,380
valid it will be signed everything will

589
00:24:31,380 --> 00:24:34,919
be fine but it will include a pack that

590
00:24:34,919 --> 00:24:38,580
makes him act as a domain admin so we'll

591
00:24:38,580 --> 00:24:42,000
have a superpower PGT

592
00:24:42,000 --> 00:24:44,580
then just like the golden ticket uh no

593
00:24:44,580 --> 00:24:46,020
not just like the golden ticket sorry

594
00:24:46,020 --> 00:24:49,679
once the TGT the ms-14068 ticket is

595
00:24:49,679 --> 00:24:53,340
forged we will proceed to ask for TGT

596
00:24:53,340 --> 00:24:56,039
but not with a standard TGT request

597
00:24:56,039 --> 00:24:57,840
we'll do this with a service ticket

598
00:24:57,840 --> 00:25:00,240
request that's a bit different but I

599
00:25:00,240 --> 00:25:02,100
mean now you know it and once we have

600
00:25:02,100 --> 00:25:03,960
the TGT issued by the service ticket

601
00:25:03,960 --> 00:25:06,780
request we'll be able to ask for other

602
00:25:06,780 --> 00:25:09,240
services service tickets that's it I

603
00:25:09,240 --> 00:25:10,679
mean if you want to go into more details

604
00:25:10,679 --> 00:25:13,500
about it I wrote some things in the

605
00:25:13,500 --> 00:25:16,100
hacker.recipes

606
00:25:16,100 --> 00:25:19,559
let's see how it works first step I'm

607
00:25:19,559 --> 00:25:22,520
using RPC client to find the

608
00:25:22,520 --> 00:25:25,980
unprivileged user Sid my unprivileged

609
00:25:25,980 --> 00:25:27,360
user is James

610
00:25:27,360 --> 00:25:32,159
and his Sid is here it ends with a 1103

611
00:25:32,159 --> 00:25:35,600
once we have this Sid we use

612
00:25:35,600 --> 00:25:39,419
ms14068.pi script which is from the pi

613
00:25:39,419 --> 00:25:43,919
Keck repo if I remember correctly and by

614
00:25:43,919 --> 00:25:47,220
using James credentials his username and

615
00:25:47,220 --> 00:25:51,900
his password as well as as his Sid will

616
00:25:51,900 --> 00:25:54,000
talk with the domain controller do the

617
00:25:54,000 --> 00:25:56,940
steps detailed before in the diagram and

618
00:25:56,940 --> 00:25:59,460
obtain something here which is a ticket

619
00:25:59,460 --> 00:26:01,140
for James we can see here that the

620
00:26:01,140 --> 00:26:03,720
username is James but if we inspect the

621
00:26:03,720 --> 00:26:06,900
pack we can see that now James is member

622
00:26:06,900 --> 00:26:08,400
of many

623
00:26:08,400 --> 00:26:11,340
overpower groups so we'll be able to act

624
00:26:11,340 --> 00:26:14,520
as the domain admin but we're James but

625
00:26:14,520 --> 00:26:18,480
I mean I miss 14068 that's it if we if

626
00:26:18,480 --> 00:26:21,000
we use the ticket we are just like

627
00:26:21,000 --> 00:26:23,640
golden tickets able to dump things from

628
00:26:23,640 --> 00:26:26,220
the domain controller this is an example

629
00:26:26,220 --> 00:26:28,440
on the hack the Box machine which is

630
00:26:28,440 --> 00:26:30,600
called mantis so if you want to do this

631
00:26:30,600 --> 00:26:33,200
at home you have the ability to do so by

632
00:26:33,200 --> 00:26:36,419
firing up the Mantis machine on hack the

633
00:26:36,419 --> 00:26:37,919
Box

634
00:26:37,919 --> 00:26:40,679
now let's talk about Diamond tickets we

635
00:26:40,679 --> 00:26:43,279
talked about silver golden and the

636
00:26:43,279 --> 00:26:46,320
ms-14068 vulnerability

637
00:26:46,320 --> 00:26:48,360
what is the gold ticket by show of hands

638
00:26:48,360 --> 00:26:51,960
who has heard or seen the blog post of

639
00:26:51,960 --> 00:26:53,700
Andy Schwartz and Charlie Clark about

640
00:26:53,700 --> 00:26:56,100
the diamond ticket in the rough

641
00:26:56,100 --> 00:27:00,659
hey some people who has who have read it

642
00:27:00,659 --> 00:27:01,980
yep

643
00:27:01,980 --> 00:27:04,320
who understood it

644
00:27:04,320 --> 00:27:06,980
yeah of course of course

645
00:27:06,980 --> 00:27:10,500
not no you're not in the equation

646
00:27:10,500 --> 00:27:11,820
all right let's talk about Diamond

647
00:27:11,820 --> 00:27:15,240
tickets so what we need to know what the

648
00:27:15,240 --> 00:27:17,460
requirements behind the diamond ticket

649
00:27:17,460 --> 00:27:19,620
are very similar to the golden tickets

650
00:27:19,620 --> 00:27:22,140
the only addition here is we have to

651
00:27:22,140 --> 00:27:24,360
know active credentials and the main

652
00:27:24,360 --> 00:27:25,860
difference between Golden tickets and

653
00:27:25,860 --> 00:27:28,140
Diamond tickets is we are forging

654
00:27:28,140 --> 00:27:30,900
something on the Fly instead of forging

655
00:27:30,900 --> 00:27:33,179
the ticket forging the TGT forging the

656
00:27:33,179 --> 00:27:37,080
pack Etc we are using a valid ticket we

657
00:27:37,080 --> 00:27:39,179
are just replacing on the Fly the right

658
00:27:39,179 --> 00:27:42,419
values so that we are not messing up

659
00:27:42,419 --> 00:27:44,940
like I said before the pack values the

660
00:27:44,940 --> 00:27:46,500
ticket values Etc

661
00:27:46,500 --> 00:27:47,580
so

662
00:27:47,580 --> 00:27:49,919
here in the diagram on the right we are

663
00:27:49,919 --> 00:27:52,740
asking for an unprivileged user ticket

664
00:27:52,740 --> 00:27:56,159
still Bob we once we obtain the TGT for

665
00:27:56,159 --> 00:28:00,539
Bob we intercept it locally we just mess

666
00:28:00,539 --> 00:28:03,960
around forged a golden ticket-like pack

667
00:28:03,960 --> 00:28:06,299
and include it in the ticket and for

668
00:28:06,299 --> 00:28:08,700
some more advanced implementations of

669
00:28:08,700 --> 00:28:11,400
this technique we are not replacing

670
00:28:11,400 --> 00:28:13,559
fully the pack we are just replacing

671
00:28:13,559 --> 00:28:15,240
decrypting the pack and replacing the

672
00:28:15,240 --> 00:28:17,640
right values inside of it so that's it

673
00:28:17,640 --> 00:28:19,500
that's how Diamond ticket works and once

674
00:28:19,500 --> 00:28:21,419
this is done you have something very

675
00:28:21,419 --> 00:28:24,659
similar to a golden ticket but better

676
00:28:24,659 --> 00:28:26,419
some notes Here

677
00:28:26,419 --> 00:28:29,580
the theory behind the diamond ticket is

678
00:28:29,580 --> 00:28:32,159
that the pack is modified not fully

679
00:28:32,159 --> 00:28:35,039
replaced the thing is in real life in in

680
00:28:35,039 --> 00:28:37,860
packets implementation the pack is fully

681
00:28:37,860 --> 00:28:40,140
forged so this is an issue because you

682
00:28:40,140 --> 00:28:42,360
still have some probability of messing

683
00:28:42,360 --> 00:28:45,539
up things in the pack so if someone here

684
00:28:45,539 --> 00:28:49,440
does some python gpt4 whatever

685
00:28:49,440 --> 00:28:52,200
yeah please improve the script I don't

686
00:28:52,200 --> 00:28:54,720
have the time nor courage to do so

687
00:28:54,720 --> 00:28:57,000
so the conclusion between

688
00:28:57,000 --> 00:28:57,539
um

689
00:28:57,539 --> 00:28:59,580
of the diamond ticket technique is that

690
00:28:59,580 --> 00:29:01,500
ticket mucho Bueno which means like

691
00:29:01,500 --> 00:29:03,299
unlike the golden ticket the probability

692
00:29:03,299 --> 00:29:05,700
of messing up things in the pack is a

693
00:29:05,700 --> 00:29:07,080
bit lower

694
00:29:07,080 --> 00:29:09,600
however you're doing active things on

695
00:29:09,600 --> 00:29:12,000
the network so there's that if you are

696
00:29:12,000 --> 00:29:14,640
inspecting uh Windows events on the

697
00:29:14,640 --> 00:29:16,679
domain controller whatever and things go

698
00:29:16,679 --> 00:29:17,820
up very quickly

699
00:29:17,820 --> 00:29:20,399
I mean that's some detection uh

700
00:29:20,399 --> 00:29:23,100
possibility right here

701
00:29:23,100 --> 00:29:25,440
's how it works in order to forge the

702
00:29:25,440 --> 00:29:27,600
ticket you still do the same thing use

703
00:29:27,600 --> 00:29:30,000
ticketer ticketer does this as I said

704
00:29:30,000 --> 00:29:32,159
it's not perfect but it does this you

705
00:29:32,159 --> 00:29:35,640
just have to add the dash request flag

706
00:29:35,640 --> 00:29:38,039
which indicates that you are using

707
00:29:38,039 --> 00:29:41,340
active credentials in the domain and

708
00:29:41,340 --> 00:29:43,919
you'll be doing some Diamond ticket here

709
00:29:43,919 --> 00:29:46,500
and then in the second highlight you'll

710
00:29:46,500 --> 00:29:49,140
see the credentials I'm using and once

711
00:29:49,140 --> 00:29:52,559
this is done you are

712
00:29:52,559 --> 00:29:55,740
with your new diamond tickets we can see

713
00:29:55,740 --> 00:29:57,960
here the service name still indicates

714
00:29:57,960 --> 00:30:00,480
power bgt so we are working with AKA

715
00:30:00,480 --> 00:30:03,779
with a TTT and if we inspect the pack

716
00:30:03,779 --> 00:30:06,659
we'll see just like the golden ticket a

717
00:30:06,659 --> 00:30:08,820
fully forged back and that's the issue

718
00:30:08,820 --> 00:30:10,380
here rubius

719
00:30:10,380 --> 00:30:13,320
I think doesn't do this and replaces the

720
00:30:13,320 --> 00:30:15,720
right values inside the bag in packet

721
00:30:15,720 --> 00:30:16,679
just

722
00:30:16,679 --> 00:30:18,480
give the new back

723
00:30:18,480 --> 00:30:21,260
fully forged

724
00:30:21,419 --> 00:30:23,399
same thing as the golden ticket we are

725
00:30:23,399 --> 00:30:27,360
working with a op TGT we can do anything

726
00:30:27,360 --> 00:30:29,880
we want as long as the domain admin has

727
00:30:29,880 --> 00:30:31,320
the right

728
00:30:31,320 --> 00:30:34,440
uh here is the implementation limit so

729
00:30:34,440 --> 00:30:38,760
now there's no excuse for you to do this

730
00:30:38,760 --> 00:30:44,159
line 3 323 in ticketer you'll find that

731
00:30:44,159 --> 00:30:47,220
whether we are working with the request

732
00:30:47,220 --> 00:30:50,279
flag or not the pack is fully forged

733
00:30:50,279 --> 00:30:53,760
with the create basic pack function this

734
00:30:53,760 --> 00:30:55,620
is the issue we should have something

735
00:30:55,620 --> 00:30:57,840
like if we are not using Dash request we

736
00:30:57,840 --> 00:30:59,520
are forging something from the ground up

737
00:30:59,520 --> 00:31:02,399
and if we are working with the dash

738
00:31:02,399 --> 00:31:04,559
request we are just modifying the right

739
00:31:04,559 --> 00:31:08,220
values that's it however ticketer is not

740
00:31:08,220 --> 00:31:12,320
exactly coded for that at the moment

741
00:31:12,419 --> 00:31:14,880
all right now that we have understood

742
00:31:14,880 --> 00:31:16,740
the diamond ticket technique

743
00:31:16,740 --> 00:31:19,500
shortly put the diamond ticket just dies

744
00:31:19,500 --> 00:31:21,179
a golden ticket on the fly with a valid

745
00:31:21,179 --> 00:31:23,159
ticket replacing the right values at the

746
00:31:23,159 --> 00:31:24,960
right time at the right place

747
00:31:24,960 --> 00:31:27,419
let's talk a bit about more uh Kerberos

748
00:31:27,419 --> 00:31:29,399
Shenanigans that's where you have the

749
00:31:29,399 --> 00:31:32,039
ability to sleep and to rest because I

750
00:31:32,039 --> 00:31:33,299
don't expect

751
00:31:33,299 --> 00:31:35,340
um to have

752
00:31:35,340 --> 00:31:37,679
a understanding of what I'm going to

753
00:31:37,679 --> 00:31:39,539
explain this is very difficult

754
00:31:39,539 --> 00:31:41,340
and I'm not sure I understand it

755
00:31:41,340 --> 00:31:45,840
perfectly uh as of today so please look

756
00:31:45,840 --> 00:31:47,580
elsewhere going to track two and come

757
00:31:47,580 --> 00:31:49,620
back later on don't ask questions about

758
00:31:49,620 --> 00:31:52,320
it that's it first thing we are talking

759
00:31:52,320 --> 00:31:54,960
about service for user extensions

760
00:31:54,960 --> 00:31:58,399
these extensions are the inner

761
00:31:58,399 --> 00:32:01,940
mechanisms behind Kerberos delegations

762
00:32:01,940 --> 00:32:04,799
constrained cabral's delegations that's

763
00:32:04,799 --> 00:32:06,659
it when we are doing constrained

764
00:32:06,659 --> 00:32:09,659
Kerberos navigation kcd or rbcd what

765
00:32:09,659 --> 00:32:12,600
we're doing is ask for yourself and or

766
00:32:12,600 --> 00:32:14,580
as for you to proxy

767
00:32:14,580 --> 00:32:17,279
if you want to understand it more I did

768
00:32:17,279 --> 00:32:19,799
a talk last year about exactly that

769
00:32:19,799 --> 00:32:21,840
about Kerberos delegations so you'll

770
00:32:21,840 --> 00:32:24,779
find more information on the replay and

771
00:32:24,779 --> 00:32:27,360
you'll also find some information on

772
00:32:27,360 --> 00:32:30,899
Elon shamir's awesome article called

773
00:32:30,899 --> 00:32:33,659
wagging the dog which was published

774
00:32:33,659 --> 00:32:36,179
right back in 2019

775
00:32:36,179 --> 00:32:38,340
and he explains very well

776
00:32:38,340 --> 00:32:40,559
what we have to keep in mind here that

777
00:32:40,559 --> 00:32:43,380
is as for yourself as for your proxy are

778
00:32:43,380 --> 00:32:45,840
extensions allowing to obtain a ticket

779
00:32:45,840 --> 00:32:48,840
on behalf of someone else that's

780
00:32:48,840 --> 00:32:50,520
something a bit different what we saw

781
00:32:50,520 --> 00:32:52,799
earlier on the TGT the service ticket

782
00:32:52,799 --> 00:32:55,140
the golden ticket whatever is that we

783
00:32:55,140 --> 00:32:57,779
were obtaining something for ourself or

784
00:32:57,779 --> 00:33:00,360
I mean with forged values with

785
00:33:00,360 --> 00:33:03,480
delegation this is a feature we have the

786
00:33:03,480 --> 00:33:06,480
ability to afford to obtain tickets on

787
00:33:06,480 --> 00:33:09,059
behalf of someone else to act on behalf

788
00:33:09,059 --> 00:33:12,059
of someone else of course there are

789
00:33:12,059 --> 00:33:14,299
securities in place to make sure that

790
00:33:14,299 --> 00:33:17,640
there's not any rendo that can generate

791
00:33:17,640 --> 00:33:19,799
a ticket for domain admin and whatever

792
00:33:19,799 --> 00:33:23,279
but there's that there's the feature and

793
00:33:23,279 --> 00:33:25,080
now for the difference between Azure to

794
00:33:25,080 --> 00:33:27,299
self and proxy well as for yourself

795
00:33:27,299 --> 00:33:30,299
allows to obtain a delegation ticket for

796
00:33:30,299 --> 00:33:33,140
oneself so you have a service ticket

797
00:33:33,140 --> 00:33:36,419
impersonating let's say domain admin but

798
00:33:36,419 --> 00:33:38,940
this service ticket can be used on

799
00:33:38,940 --> 00:33:40,799
yourself that's it

800
00:33:40,799 --> 00:33:44,220
and proxy allows it for another service

801
00:33:44,220 --> 00:33:47,279
so you are requesting a service ticket

802
00:33:47,279 --> 00:33:50,340
on behalf of another user targeting

803
00:33:50,340 --> 00:33:54,120
another service and why those two exist

804
00:33:54,120 --> 00:33:57,539
well it's usually to allow some security

805
00:33:57,539 --> 00:34:00,299
to have to split the steps of the

806
00:34:00,299 --> 00:34:02,279
constrained delegations to make sure

807
00:34:02,279 --> 00:34:04,500
that you have the right you are

808
00:34:04,500 --> 00:34:06,419
configured for delegation you obtain a

809
00:34:06,419 --> 00:34:08,339
ticket for yourself on behalf of someone

810
00:34:08,339 --> 00:34:11,399
else use it for S field proxy etc etc

811
00:34:11,399 --> 00:34:14,879
but I won't go into a much uh more

812
00:34:14,879 --> 00:34:16,859
details about these what you have to

813
00:34:16,859 --> 00:34:19,379
keep in mind here is as for yourself

814
00:34:19,379 --> 00:34:21,780
as for yourself allows to obtain a

815
00:34:21,780 --> 00:34:25,260
service ticket for yourself on behalf of

816
00:34:25,260 --> 00:34:28,020
another principle of another user

817
00:34:28,020 --> 00:34:30,719
one condition is that if you want to do

818
00:34:30,719 --> 00:34:33,540
this you must have an SPN you must be

819
00:34:33,540 --> 00:34:37,500
configured as a service account

820
00:34:37,500 --> 00:34:38,580
now

821
00:34:38,580 --> 00:34:41,219
let's put this on the side and talk

822
00:34:41,219 --> 00:34:44,639
about user to user authentication this

823
00:34:44,639 --> 00:34:47,460
has nothing to do with delegation no

824
00:34:47,460 --> 00:34:49,918
Kerberos delegation at all in user to

825
00:34:49,918 --> 00:34:51,540
user extension

826
00:34:51,540 --> 00:34:53,460
in user to user authentication sorry

827
00:34:53,460 --> 00:34:56,099
what u2u does is that it'll allow us to

828
00:34:56,099 --> 00:34:58,339
obtain a service ticket for a service

829
00:34:58,339 --> 00:35:00,599
that is not a service

830
00:35:00,599 --> 00:35:03,480
that is a user so instead of like it's

831
00:35:03,480 --> 00:35:06,300
like you obtain a user ticket you obtain

832
00:35:06,300 --> 00:35:09,000
a service ticket for a user and this

833
00:35:09,000 --> 00:35:11,060
allows usually for smaller

834
00:35:11,060 --> 00:35:13,980
infrastructures that don't want to boot

835
00:35:13,980 --> 00:35:16,320
up a service account for a service they

836
00:35:16,320 --> 00:35:18,780
just want to rely on user accounts well

837
00:35:18,780 --> 00:35:22,500
it allows user 1 to access user 2 to

838
00:35:22,500 --> 00:35:24,900
access user user choose services

839
00:35:24,900 --> 00:35:28,619
and in order to do that you to you

840
00:35:28,619 --> 00:35:31,980
how it works Bob wants to access Alice

841
00:35:31,980 --> 00:35:35,760
in order to do that Bob asks Alice for

842
00:35:35,760 --> 00:35:39,960
her TGT Alice gives the TGT to Bob Bob

843
00:35:39,960 --> 00:35:42,240
cannot act as Alice because he needs the

844
00:35:42,240 --> 00:35:44,400
session key to use the TGT and Alice

845
00:35:44,400 --> 00:35:46,920
doesn't give Precision T along the TTT

846
00:35:46,920 --> 00:35:50,880
and once Bob has the TGT Bob can do a

847
00:35:50,880 --> 00:35:53,220
you to you request request a service

848
00:35:53,220 --> 00:35:54,960
ticket for Alice

849
00:35:54,960 --> 00:35:58,200
by supplying Alice's TGT in the request

850
00:35:58,200 --> 00:36:01,380
proving that he has indeed the rights to

851
00:36:01,380 --> 00:36:05,160
act on Alice and that's it now Bob has a

852
00:36:05,160 --> 00:36:07,079
service ticket to Alice and Bob and

853
00:36:07,079 --> 00:36:09,900
Alice are two users

854
00:36:09,900 --> 00:36:13,079
so now let's see the combination of s

855
00:36:13,079 --> 00:36:16,260
for yourself and u2u

856
00:36:16,260 --> 00:36:19,560
as for yourself plus u to U allows a

857
00:36:19,560 --> 00:36:22,800
user let's say Bob to obtain a service

858
00:36:22,800 --> 00:36:25,320
ticket on another user for another user

859
00:36:25,320 --> 00:36:28,800
let's say Alice on behalf of our third

860
00:36:28,800 --> 00:36:31,320
user let's say the domain admin

861
00:36:31,320 --> 00:36:33,720
and there's no SPN needed in this

862
00:36:33,720 --> 00:36:36,180
technique this allows for a few things

863
00:36:36,180 --> 00:36:39,240
and on the offensive perspective this

864
00:36:39,240 --> 00:36:41,460
allows for three attacks known as

865
00:36:41,460 --> 00:36:44,520
spm-less rbcd which was published by

866
00:36:44,520 --> 00:36:47,880
James Forshaw a few months ago last year

867
00:36:47,880 --> 00:36:51,060
it allows also for unpack the hash which

868
00:36:51,060 --> 00:36:53,880
is related to PK in its attacks to

869
00:36:53,880 --> 00:36:57,180
certificate attacks and also allows for

870
00:36:57,180 --> 00:36:59,520
the sapphire ticket technique which is

871
00:36:59,520 --> 00:37:03,359
the latest variation Improvement of the

872
00:37:03,359 --> 00:37:04,980
golden ticket technique

873
00:37:04,980 --> 00:37:07,619
and there's a diagram here what we do as

874
00:37:07,619 --> 00:37:10,859
the attacker is one TGT request we

875
00:37:10,859 --> 00:37:14,280
obtain a TGT for ourself

876
00:37:14,280 --> 00:37:14,820
um

877
00:37:14,820 --> 00:37:17,040
once we have this TGT we include it in

878
00:37:17,040 --> 00:37:19,079
the request later on and we build the

879
00:37:19,079 --> 00:37:21,359
service ticket request

880
00:37:21,359 --> 00:37:23,700
um erratum what I said before was a bit

881
00:37:23,700 --> 00:37:26,040
wrong we are not when we are combining s

882
00:37:26,040 --> 00:37:27,599
for yourself plus you to you we are not

883
00:37:27,599 --> 00:37:29,579
obtaining a service ticket for another

884
00:37:29,579 --> 00:37:31,740
user we are obtaining a service ticket

885
00:37:31,740 --> 00:37:35,820
for ourself on behalf of another user

886
00:37:35,820 --> 00:37:37,560
um so in the request here in the service

887
00:37:37,560 --> 00:37:38,940
ticket request combining us through

888
00:37:38,940 --> 00:37:41,099
yourself and new to you

889
00:37:41,099 --> 00:37:42,960
the client's name

890
00:37:42,960 --> 00:37:45,000
the name of the user that wants access

891
00:37:45,000 --> 00:37:47,160
is attacker

892
00:37:47,160 --> 00:37:50,220
the name of the user we want to have

893
00:37:50,220 --> 00:37:52,680
access to is attacker since we are doing

894
00:37:52,680 --> 00:37:54,359
S3 to self

895
00:37:54,359 --> 00:37:58,200
PA for user it refers to the user we

896
00:37:58,200 --> 00:38:00,180
want to impersonate act on behalf of

897
00:38:00,180 --> 00:38:02,880
which is here the domain admin

898
00:38:02,880 --> 00:38:06,420
and additional tickets here for the um

899
00:38:06,420 --> 00:38:08,700
you to you we need to include the

900
00:38:08,700 --> 00:38:10,920
attacker TGT since the attacker is the

901
00:38:10,920 --> 00:38:14,880
target of our service request

902
00:38:14,880 --> 00:38:17,099
this is done as for yourself plus utu we

903
00:38:17,099 --> 00:38:19,020
have to combine them multiple flags and

904
00:38:19,020 --> 00:38:22,140
so on and so once we have this

905
00:38:22,140 --> 00:38:23,880
well you can see here

906
00:38:23,880 --> 00:38:26,040
in the s3d cell plus YouTube use service

907
00:38:26,040 --> 00:38:28,619
to get answer we have something very

908
00:38:28,619 --> 00:38:31,980
special it's the domain admins pack with

909
00:38:31,980 --> 00:38:33,960
all the right values in it

910
00:38:33,960 --> 00:38:36,060
and this is what we'll use for the

911
00:38:36,060 --> 00:38:38,220
sapphire ticket

912
00:38:38,220 --> 00:38:40,800
software ticket coming right here

913
00:38:40,800 --> 00:38:42,420
we are doing the same thing as the

914
00:38:42,420 --> 00:38:44,760
diamond ticket we are modifying things

915
00:38:44,760 --> 00:38:47,700
on the fly with a valid TGT with a valid

916
00:38:47,700 --> 00:38:51,119
ticket but instead of forging values

917
00:38:51,119 --> 00:38:54,540
and creating a mismatch we are replacing

918
00:38:54,540 --> 00:38:57,000
the valid pack with another valid pack

919
00:38:57,000 --> 00:39:00,900
but of a powered user of a powerful user

920
00:39:00,900 --> 00:39:03,540
so what this does is like instead of

921
00:39:03,540 --> 00:39:06,180
having a pack indicating that Bob is

922
00:39:06,180 --> 00:39:08,460
member of the domain admins Group which

923
00:39:08,460 --> 00:39:09,660
is false

924
00:39:09,660 --> 00:39:11,760
we have a pack indicating that domain

925
00:39:11,760 --> 00:39:13,859
admin is a member of the domain admins

926
00:39:13,859 --> 00:39:17,700
Group which is right it's legit and what

927
00:39:17,700 --> 00:39:21,720
we have the there is a valid alleged TGT

928
00:39:21,720 --> 00:39:25,200
an alleged pack legit everything so

929
00:39:25,200 --> 00:39:27,359
ticket mucho Bueno mucho Bueno perfect

930
00:39:27,359 --> 00:39:30,000
unlike the golden ticket the ticket the

931
00:39:30,000 --> 00:39:31,740
ticket is perfect and unlike the diamond

932
00:39:31,740 --> 00:39:33,660
ticket the pack is perfect and we have

933
00:39:33,660 --> 00:39:36,240
no mismatch whatsoever between the I

934
00:39:36,240 --> 00:39:39,060
mean the UAC the flags the groups the

935
00:39:39,060 --> 00:39:41,880
air IDs the username and whatever

936
00:39:41,880 --> 00:39:45,900
so the sapphire ticket allows to produce

937
00:39:45,900 --> 00:39:48,359
something that's very similar to the

938
00:39:48,359 --> 00:39:51,300
legitimate domain admins TGT but in

939
00:39:51,300 --> 00:39:52,680
order to do that we have the same

940
00:39:52,680 --> 00:39:54,359
requirements as the diamond ticket

941
00:39:54,359 --> 00:39:56,099
Technique we need golden tickets

942
00:39:56,099 --> 00:39:59,220
requirement which is the krb GT if we

943
00:39:59,220 --> 00:40:02,040
want to 4G TGT and active credentials

944
00:40:02,040 --> 00:40:04,560
since we are doing things on the Fly

945
00:40:04,560 --> 00:40:09,180
and detection be like yeah

946
00:40:09,180 --> 00:40:11,820
let's do this in practice

947
00:40:11,820 --> 00:40:13,920
first step we have to use ticketer same

948
00:40:13,920 --> 00:40:16,800
thing we fire up lookup Sid to obtain

949
00:40:16,800 --> 00:40:19,020
the right SIDS Etc

950
00:40:19,020 --> 00:40:22,320
um and then we just include valid

951
00:40:22,320 --> 00:40:25,980
credentials here and we just add the the

952
00:40:25,980 --> 00:40:27,660
only difference here between diamond and

953
00:40:27,660 --> 00:40:30,420
Sapphire tickets is the flag impersonate

954
00:40:30,420 --> 00:40:34,200
and here I indicating to ticketer that I

955
00:40:34,200 --> 00:40:36,359
want to impersonate domain admin

956
00:40:36,359 --> 00:40:39,300
what this does is First Step request s

957
00:40:39,300 --> 00:40:41,640
for yourself plus v to U as I explained

958
00:40:41,640 --> 00:40:45,480
before to obtain domain admin spec

959
00:40:45,480 --> 00:40:47,820
the combination of those two Shenanigans

960
00:40:47,820 --> 00:40:50,940
just allow for one simple thing obtain

961
00:40:50,940 --> 00:40:53,579
domain admin spec and once we have this

962
00:40:53,579 --> 00:40:56,180
pack we just

963
00:40:56,180 --> 00:41:01,260
push it in the valid ticket of user 2.

964
00:41:01,260 --> 00:41:03,480
so here in the Second Step decrypting

965
00:41:03,480 --> 00:41:05,220
ticket extracting pack

966
00:41:05,220 --> 00:41:07,020
clearing signatures whatever we are

967
00:41:07,020 --> 00:41:09,300
putting the new pack in the legit ticket

968
00:41:09,300 --> 00:41:11,240
and we have legit ticket legit pack

969
00:41:11,240 --> 00:41:14,700
legit all we are all happy

970
00:41:14,700 --> 00:41:17,280
if we describe it we can see that the

971
00:41:17,280 --> 00:41:19,619
krb TGT here is the target service

972
00:41:19,619 --> 00:41:21,780
indicating that we are working with a

973
00:41:21,780 --> 00:41:25,740
TGT the target domain is domain.local so

974
00:41:25,740 --> 00:41:28,020
we are working with a TGT on domain

975
00:41:28,020 --> 00:41:30,480
local domain as domain admin so

976
00:41:30,480 --> 00:41:32,280
everything is nice

977
00:41:32,280 --> 00:41:36,240
and here we have everything is legit we

978
00:41:36,240 --> 00:41:37,859
have the user Flags here we have the

979
00:41:37,859 --> 00:41:39,960
right groups we have the right error ID

980
00:41:39,960 --> 00:41:41,700
we have the right user account control

981
00:41:41,700 --> 00:41:45,060
UAC we have the right extra Sid Resource

982
00:41:45,060 --> 00:41:46,619
Group domain City blah blah everything

983
00:41:46,619 --> 00:41:48,300
is perfect we have the perfect ticket

984
00:41:48,300 --> 00:41:52,880
perfect pack and detection is like blah

985
00:41:52,920 --> 00:41:54,960
and this is how it's used same thing as

986
00:41:54,960 --> 00:41:57,180
the golden ticket it can be used to dump

987
00:41:57,180 --> 00:42:00,480
whatever as long as the rights the

988
00:42:00,480 --> 00:42:02,520
domain you the domain user you're

989
00:42:02,520 --> 00:42:05,400
impersonating has rights well you'll

990
00:42:05,400 --> 00:42:07,820
have those

991
00:42:08,760 --> 00:42:10,740
here's a small limitation of the

992
00:42:10,740 --> 00:42:13,220
implementation

993
00:42:15,119 --> 00:42:16,680
first thing first

994
00:42:16,680 --> 00:42:19,500
I implemented this in ticketer and um

995
00:42:19,500 --> 00:42:20,640
well

996
00:42:20,640 --> 00:42:24,359
I'm not a developer I write and um

997
00:42:24,359 --> 00:42:26,280
this is the proof

998
00:42:26,280 --> 00:42:27,540
um

999
00:42:27,540 --> 00:42:30,240
there's one limitation with ticketer

1000
00:42:30,240 --> 00:42:33,060
today which is that ticketer

1001
00:42:33,060 --> 00:42:35,760
extracts all the pack structures and

1002
00:42:35,760 --> 00:42:38,940
rebuilds it from scratch what this means

1003
00:42:38,940 --> 00:42:41,640
is that if there are some structures in

1004
00:42:41,640 --> 00:42:45,060
the pack that impecca doesn't support

1005
00:42:45,060 --> 00:42:48,599
the ticket will be um not full it'll be

1006
00:42:48,599 --> 00:42:51,660
some structures will be skipped so

1007
00:42:51,660 --> 00:42:54,359
same thing here I don't have nor the

1008
00:42:54,359 --> 00:42:57,240
time nor the courage to tackle this if

1009
00:42:57,240 --> 00:42:58,740
you want to implement something perfect

1010
00:42:58,740 --> 00:43:00,000
well

1011
00:43:00,000 --> 00:43:02,579
you have my blessing

1012
00:43:02,579 --> 00:43:05,099
so now let's wrap things up 43 minutes

1013
00:43:05,099 --> 00:43:06,780
perfect

1014
00:43:06,780 --> 00:43:09,420
if you want to go further further some

1015
00:43:09,420 --> 00:43:11,400
sorry for Sapphire ticket limitations

1016
00:43:11,400 --> 00:43:13,020
well

1017
00:43:13,020 --> 00:43:14,760
there's the first thing it requires

1018
00:43:14,760 --> 00:43:16,619
active credentials so it's not the

1019
00:43:16,619 --> 00:43:18,780
perfect persistence technique because

1020
00:43:18,780 --> 00:43:20,819
you cannot extract things and get back

1021
00:43:20,819 --> 00:43:23,160
to the domain one year later and if

1022
00:43:23,160 --> 00:43:25,079
everything has changed well you will not

1023
00:43:25,079 --> 00:43:26,520
be able to do the cipher ticket

1024
00:43:26,520 --> 00:43:27,960
technique because you need active

1025
00:43:27,960 --> 00:43:31,380
credentials we know active directory to

1026
00:43:31,380 --> 00:43:33,420
be a bit vulnerable to many things if

1027
00:43:33,420 --> 00:43:35,400
it's not configured properly so

1028
00:43:35,400 --> 00:43:38,520
obtaining valid username and password on

1029
00:43:38,520 --> 00:43:40,740
the domain is not the hardest thing but

1030
00:43:40,740 --> 00:43:42,720
still need it

1031
00:43:42,720 --> 00:43:44,880
also it produces a bit more Network

1032
00:43:44,880 --> 00:43:47,240
traffic you have some as for yourself

1033
00:43:47,240 --> 00:43:50,640
u2u service ticket request blah digital

1034
00:43:50,640 --> 00:43:52,200
request blah blah

1035
00:43:52,200 --> 00:43:53,940
there's a lot of traffic

1036
00:43:53,940 --> 00:43:57,440
um so for detection software around here

1037
00:43:57,440 --> 00:44:00,240
here's a possibility you can look at the

1038
00:44:00,240 --> 00:44:02,819
various Network traffic some solutions

1039
00:44:02,819 --> 00:44:06,240
to the problems I raised is first rubius

1040
00:44:06,240 --> 00:44:09,240
has something I I saw it while preparing

1041
00:44:09,240 --> 00:44:11,780
this talk tonight

1042
00:44:11,780 --> 00:44:14,760
which was the Slash ldap and slash print

1043
00:44:14,760 --> 00:44:18,720
CMD Flags which allow to obtain the

1044
00:44:18,720 --> 00:44:21,300
right values without as for yourself and

1045
00:44:21,300 --> 00:44:24,720
new to you but instead on on

1046
00:44:24,720 --> 00:44:26,880
relying on ldap queries

1047
00:44:26,880 --> 00:44:29,339
this is a bit similar to the golden copy

1048
00:44:29,339 --> 00:44:31,920
alternative I showed you earlier which

1049
00:44:31,920 --> 00:44:35,700
then doesn't rely on neo4g databases but

1050
00:44:35,700 --> 00:44:39,480
then does dynamically queries ldap to

1051
00:44:39,480 --> 00:44:41,760
find the right information the groups

1052
00:44:41,760 --> 00:44:44,880
the the target users member of et cetera

1053
00:44:44,880 --> 00:44:48,720
Etc to build a nearly perfect ticket so

1054
00:44:48,720 --> 00:44:50,640
there's that

1055
00:44:50,640 --> 00:44:52,380
second thing I don't like surprise

1056
00:44:52,380 --> 00:44:55,079
questions so um this is probably the

1057
00:44:55,079 --> 00:44:56,280
only technical thing I'll be able to

1058
00:44:56,280 --> 00:44:57,180
answer

1059
00:44:57,180 --> 00:45:00,240
um why call it Sapphire why is the title

1060
00:45:00,240 --> 00:45:02,940
to this Con uh wait 65 years blah blah

1061
00:45:02,940 --> 00:45:04,619
blah well it's a gemstone story for

1062
00:45:04,619 --> 00:45:06,900
those of you who don't know jubilees

1063
00:45:06,900 --> 00:45:09,780
um well there's a list Wikipedia we

1064
00:45:09,780 --> 00:45:11,760
already have the silver golden diamond

1065
00:45:11,760 --> 00:45:14,760
ticken I found it logic to call the next

1066
00:45:14,760 --> 00:45:18,180
variation Sapphire if someone here finds

1067
00:45:18,180 --> 00:45:20,400
the ID the perfect idea for the Platinum

1068
00:45:20,400 --> 00:45:23,160
ticket again you have my blessing please

1069
00:45:23,160 --> 00:45:24,960
don't Implement things like I do with

1070
00:45:24,960 --> 00:45:26,940
many holes in it

1071
00:45:26,940 --> 00:45:29,819
forcing questions number two again

1072
00:45:29,819 --> 00:45:32,339
mitigation detection I'm not an expert

1073
00:45:32,339 --> 00:45:36,660
so um we I don't do that personally but

1074
00:45:36,660 --> 00:45:40,319
here are some paths you can explore the

1075
00:45:40,319 --> 00:45:42,960
first thing is um there's two categories

1076
00:45:42,960 --> 00:45:44,819
if you want to detect or mitigate the

1077
00:45:44,819 --> 00:45:46,980
first thing is analyze the forged ticket

1078
00:45:46,980 --> 00:45:50,099
itself if it has the wrong username as I

1079
00:45:50,099 --> 00:45:52,380
said earlier for patched domain

1080
00:45:52,380 --> 00:45:54,500
controllers as of November 2021 updates

1081
00:45:54,500 --> 00:45:57,359
uh a username in the ticket that doesn't

1082
00:45:57,359 --> 00:45:59,700
exist in active directory domain well it

1083
00:45:59,700 --> 00:46:02,880
will be rejected if the pack fields are

1084
00:46:02,880 --> 00:46:06,000
malformed blank missing whatever well

1085
00:46:06,000 --> 00:46:08,760
you can detect it so This concerns

1086
00:46:08,760 --> 00:46:11,099
silvery golden however for diamond and

1087
00:46:11,099 --> 00:46:12,720
Sapphire tickets

1088
00:46:12,720 --> 00:46:14,520
um using these techniques you are safe

1089
00:46:14,520 --> 00:46:16,680
because the values in the pack are

1090
00:46:16,680 --> 00:46:19,020
usually good values they're not

1091
00:46:19,020 --> 00:46:20,339
malphones

1092
00:46:20,339 --> 00:46:23,339
and if you have a Pack mismatch there's

1093
00:46:23,339 --> 00:46:25,440
another detection here so for example

1094
00:46:25,440 --> 00:46:28,380
let's say that the pack says that we are

1095
00:46:28,380 --> 00:46:31,200
working with Bob but on the same on the

1096
00:46:31,200 --> 00:46:33,000
other hand it says that Bob is member of

1097
00:46:33,000 --> 00:46:35,640
the domain admins group well there's

1098
00:46:35,640 --> 00:46:37,560
that Bob is not a domain admin but his

1099
00:46:37,560 --> 00:46:38,760
member of the domain admins group

1100
00:46:38,760 --> 00:46:40,920
there's an issue well Sapphire technique

1101
00:46:40,920 --> 00:46:43,260
goes through that there's no problem

1102
00:46:43,260 --> 00:46:46,680
another uh way of detecting those is

1103
00:46:46,680 --> 00:46:48,359
detection around the ticket not the

1104
00:46:48,359 --> 00:46:52,200
ticket itself so look for krbdt theft so

1105
00:46:52,200 --> 00:46:54,720
special tools and techniques suspicious

1106
00:46:54,720 --> 00:46:58,200
Behavior the usual stuff video calls can

1107
00:46:58,200 --> 00:47:00,680
also look at login hours so if there's

1108
00:47:00,680 --> 00:47:03,900
s37 plus u2u plus a ticket a TGT plus

1109
00:47:03,900 --> 00:47:05,520
service ticket request at 2 am in the

1110
00:47:05,520 --> 00:47:06,660
morning

1111
00:47:06,660 --> 00:47:08,760
there's probably something wrong

1112
00:47:08,760 --> 00:47:10,980
some acknowledgments I really want to

1113
00:47:10,980 --> 00:47:13,980
thank many people for issuing the

1114
00:47:13,980 --> 00:47:16,619
research behind this technique which is

1115
00:47:16,619 --> 00:47:18,839
not very difficult in fact I I just

1116
00:47:18,839 --> 00:47:21,540
assembled some PCS I found somewhere

1117
00:47:21,540 --> 00:47:23,579
else so first thing first I want to

1118
00:47:23,579 --> 00:47:25,500
thank Charlie Clark and Andrew Schwartz

1119
00:47:25,500 --> 00:47:27,720
for writing a diamond ticket in the

1120
00:47:27,720 --> 00:47:31,020
rough which explains the uh in details

1121
00:47:31,020 --> 00:47:32,880
the diamond ticket technique

1122
00:47:32,880 --> 00:47:36,060
I also want to notify that Alberto

1123
00:47:36,060 --> 00:47:37,020
celino

1124
00:47:37,020 --> 00:47:40,200
uh found the sapphire ticket technique

1125
00:47:40,200 --> 00:47:43,020
back in 2016 I didn't know of it but

1126
00:47:43,020 --> 00:47:45,240
while preparing these slides I noticed

1127
00:47:45,240 --> 00:47:48,540
in the ticketer dot Pi script there was

1128
00:47:48,540 --> 00:47:50,760
a comment in the to-do list

1129
00:47:50,760 --> 00:47:52,680
saying oh

1130
00:47:52,680 --> 00:47:54,960
when request is specified we could ask

1131
00:47:54,960 --> 00:47:56,940
for user to users ticket and also

1132
00:47:56,940 --> 00:47:59,819
populate the received pack he had the ID

1133
00:47:59,819 --> 00:48:02,940
for the software ticket back in 2016 it

1134
00:48:02,940 --> 00:48:05,400
was never implemented that's it so I

1135
00:48:05,400 --> 00:48:07,319
found something that someone found

1136
00:48:07,319 --> 00:48:10,319
before and that's okay it just hurts but

1137
00:48:10,319 --> 00:48:12,839
that's okay I also want to thank Elon

1138
00:48:12,839 --> 00:48:15,540
shamir's awesome article for wagging the

1139
00:48:15,540 --> 00:48:16,440
dog

1140
00:48:16,440 --> 00:48:18,720
does that use it for preparing a

1141
00:48:18,720 --> 00:48:20,760
Kerberos delegation talk I also want to

1142
00:48:20,760 --> 00:48:22,800
thank James Forshaw for writing an

1143
00:48:22,800 --> 00:48:25,680
excellent article about how to do rbcd

1144
00:48:25,680 --> 00:48:28,319
with a normal user account it it

1145
00:48:28,319 --> 00:48:30,960
explains some things about S3 itself and

1146
00:48:30,960 --> 00:48:33,359
utu I also want to thank a good friend

1147
00:48:33,359 --> 00:48:35,640
of mine which was and still is an

1148
00:48:35,640 --> 00:48:37,920
inspiration both on the technical side

1149
00:48:37,920 --> 00:48:40,500
and Human Side things which is a Roma

1150
00:48:40,500 --> 00:48:44,160
axis but you'll also find some technical

1151
00:48:44,160 --> 00:48:46,920
information that he wrote very relevant

1152
00:48:46,920 --> 00:48:49,260
stuff on his blog post uh on his blog

1153
00:48:49,260 --> 00:48:51,180
hackendo.com

1154
00:48:51,180 --> 00:48:52,800
that's it you have some sources and

1155
00:48:52,800 --> 00:48:55,500
links in the slides some glossary

1156
00:48:55,500 --> 00:48:57,780
some tooling on a side note again

1157
00:48:57,780 --> 00:49:01,740
hexagonal accuracy piece yep and that's

1158
00:49:01,740 --> 00:49:04,560
it q a Time anyone has questions you can

1159
00:49:04,560 --> 00:49:06,470
wake up now

1160
00:49:06,470 --> 00:49:14,220
[Applause]

1161
00:49:14,220 --> 00:49:16,380
all right so if you have any question

1162
00:49:16,380 --> 00:49:18,599
please raise your hands so either me or

1163
00:49:18,599 --> 00:49:19,740
my colleague can bring you the

1164
00:49:19,740 --> 00:49:20,819
microphone

1165
00:49:20,819 --> 00:49:22,740
you can still try to ask questions about

1166
00:49:22,740 --> 00:49:24,960
mitigation and detection I'm just not

1167
00:49:24,960 --> 00:49:27,599
giving any quenches that's it

1168
00:49:27,599 --> 00:49:31,440
no question well it was very clear

1169
00:49:31,440 --> 00:49:33,060
you understood everything for it

1170
00:49:33,060 --> 00:49:34,800
perfectly

1171
00:49:34,800 --> 00:49:37,500
hello for you which is better when we

1172
00:49:37,500 --> 00:49:39,380
attack um

1173
00:49:39,380 --> 00:49:43,740
uh cross domain uh parent and shield

1174
00:49:43,740 --> 00:49:44,960
domain

1175
00:49:44,960 --> 00:49:50,099
directional which is a better uh

1176
00:49:50,099 --> 00:49:52,099
um

1177
00:49:55,560 --> 00:49:58,500
well it depends um those two those four

1178
00:49:58,500 --> 00:50:00,119
tickets silver gold and blah blah blah

1179
00:50:00,119 --> 00:50:03,060
let's just put silver aside

1180
00:50:03,060 --> 00:50:06,540
um you said parent child domain trust so

1181
00:50:06,540 --> 00:50:09,359
you're in the same Forest

1182
00:50:09,359 --> 00:50:11,460
um just a reminder Microsoft states that

1183
00:50:11,460 --> 00:50:13,380
the security boundary is the first so

1184
00:50:13,380 --> 00:50:14,760
everything inside the first you could

1185
00:50:14,760 --> 00:50:17,760
usually escalate and stuff so but then

1186
00:50:17,760 --> 00:50:19,619
it depends because software ticket you

1187
00:50:19,619 --> 00:50:22,020
need active credentials you need to have

1188
00:50:22,020 --> 00:50:23,760
the right tooling you need to understand

1189
00:50:23,760 --> 00:50:27,300
the technique the S4 itself you to you

1190
00:50:27,300 --> 00:50:29,280
blah blah blah and if things go south

1191
00:50:29,280 --> 00:50:32,339
usually does and you have to debug

1192
00:50:32,339 --> 00:50:33,359
things

1193
00:50:33,359 --> 00:50:36,300
uh live and if you don't understand the

1194
00:50:36,300 --> 00:50:37,800
technique behind it you'll not be able

1195
00:50:37,800 --> 00:50:40,319
to make it work so my advice is

1196
00:50:40,319 --> 00:50:43,560
it depends if you find the K or bgtt and

1197
00:50:43,560 --> 00:50:45,780
you're doing a penetration test without

1198
00:50:45,780 --> 00:50:47,700
stealth admined you're not doing a red

1199
00:50:47,700 --> 00:50:49,079
team or whatever

1200
00:50:49,079 --> 00:50:50,700
doesn't matter don't

1201
00:50:50,700 --> 00:50:52,619
do a golden ticket that's it it's easier

1202
00:50:52,619 --> 00:50:55,559
it's very well implemented that's it if

1203
00:50:55,559 --> 00:50:57,300
you want to be stealthy a software

1204
00:50:57,300 --> 00:50:59,339
ticket all the way that's it

1205
00:50:59,339 --> 00:51:02,280
the thing is for Sapphire ticket you'll

1206
00:51:02,280 --> 00:51:05,640
probably need to have active credentials

1207
00:51:05,640 --> 00:51:07,800
uh well it depends it depends on the on

1208
00:51:07,800 --> 00:51:10,260
the implementation of the two domains

1209
00:51:10,260 --> 00:51:11,400
you're working with

1210
00:51:11,400 --> 00:51:14,160
so the answer I'm sorry is it depends

1211
00:51:14,160 --> 00:51:17,000
okay thanks for stealth purposes

1212
00:51:17,000 --> 00:51:20,940
no golden ticket that's it

1213
00:51:20,940 --> 00:51:24,260
all right and here's a question

1214
00:51:27,119 --> 00:51:29,460
okay so I think we can call it a wrap so

1215
00:51:29,460 --> 00:51:31,980
uh we have lunch downstairs if you want

1216
00:51:31,980 --> 00:51:34,380
and you can go right away because it's

1217
00:51:34,380 --> 00:51:36,660
already opened thank you everyone much

1218
00:51:36,660 --> 00:51:39,259
thank you Charlie

