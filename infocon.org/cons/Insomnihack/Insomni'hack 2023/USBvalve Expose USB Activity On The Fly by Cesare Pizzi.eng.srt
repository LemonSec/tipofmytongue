1
00:00:03,560 --> 00:00:06,859
hello everybody

2
00:00:07,919 --> 00:00:11,639
thank you for being here today and uh

3
00:00:11,639 --> 00:00:14,460
we are speaking about usb valve which is

4
00:00:14,460 --> 00:00:17,640
a kind of a strange thing that I created

5
00:00:17,640 --> 00:00:21,779
so let's uh start with uh a bit of

6
00:00:21,779 --> 00:00:23,939
presentation from myself my name is Jose

7
00:00:23,939 --> 00:00:26,279
R pizzi and okay I work for our Italian

8
00:00:26,279 --> 00:00:28,800
company science lab which is doing a lot

9
00:00:28,800 --> 00:00:31,080
of things in it and I'm following more

10
00:00:31,080 --> 00:00:34,440
or less the security part uh in that

11
00:00:34,440 --> 00:00:37,140
company so I'm here today with you

12
00:00:37,140 --> 00:00:39,840
because I love hacking obviously and

13
00:00:39,840 --> 00:00:41,640
also thank you to the organizer because

14
00:00:41,640 --> 00:00:43,500
I would like to thank them for such a

15
00:00:43,500 --> 00:00:45,600
great event because it's really really

16
00:00:45,600 --> 00:00:46,500
great

17
00:00:46,500 --> 00:00:49,680
and what I do usually in security field

18
00:00:49,680 --> 00:00:51,420
it's uh

19
00:00:51,420 --> 00:00:54,300
let's say I work a lot with open source

20
00:00:54,300 --> 00:00:56,160
software I'm really an open source

21
00:00:56,160 --> 00:00:58,680
Advocate and I like to participate to

22
00:00:58,680 --> 00:01:00,300
contribute to several

23
00:01:00,300 --> 00:01:02,640
open source projects like you know

24
00:01:02,640 --> 00:01:05,299
volatility persistent sniper

25
00:01:05,299 --> 00:01:08,220
c2s a lot of other have my contribution

26
00:01:08,220 --> 00:01:09,900
in some way Speak Easy they had a lot of

27
00:01:09,900 --> 00:01:11,400
them

28
00:01:11,400 --> 00:01:13,200
um and also I had a couple of major

29
00:01:13,200 --> 00:01:16,140
projects run by me directly like Chris

30
00:01:16,140 --> 00:01:18,900
Floyd and uh scene walls some others so

31
00:01:18,900 --> 00:01:20,520
if you want to have a look on what I'm

32
00:01:20,520 --> 00:01:23,520
doing just have a look to my GitHub and

33
00:01:23,520 --> 00:01:26,580
open issues uh get in touch with me also

34
00:01:26,580 --> 00:01:29,100
on Twitter with driveship so I'm more

35
00:01:29,100 --> 00:01:32,100
than happy to hear from you and discuss

36
00:01:32,100 --> 00:01:35,220
with you about any uh any things related

37
00:01:35,220 --> 00:01:38,100
to security and so on and okay sorry for

38
00:01:38,100 --> 00:01:39,720
the flashy presentation today I think

39
00:01:39,720 --> 00:01:41,280
I'm going to burn some eyes today

40
00:01:41,280 --> 00:01:44,460
because but okay I like very much this

41
00:01:44,460 --> 00:01:46,020
templates coming from slight Carnival

42
00:01:46,020 --> 00:01:49,619
and so I decided to use it even if it's

43
00:01:49,619 --> 00:01:53,299
a bit yes a bit flashy yeah okay

44
00:01:53,299 --> 00:01:56,100
let's now start and go into the

45
00:01:56,100 --> 00:01:57,840
presentation and starting from which is

46
00:01:57,840 --> 00:01:59,220
the problem I would like to solve which

47
00:01:59,220 --> 00:02:01,740
is first of all my my problem because if

48
00:02:01,740 --> 00:02:03,840
it's your problem you will find a

49
00:02:03,840 --> 00:02:06,719
solution then you maybe also try to find

50
00:02:06,719 --> 00:02:08,340
out if it's a problem with someone else

51
00:02:08,340 --> 00:02:10,258
which is even better because in this

52
00:02:10,258 --> 00:02:11,520
point in this case you are going to

53
00:02:11,520 --> 00:02:14,099
solve also a problem with someone else

54
00:02:14,099 --> 00:02:16,400
but let's start from my problem which is

55
00:02:16,400 --> 00:02:18,440
USB drives

56
00:02:18,440 --> 00:02:21,360
and why we may think that USB drives are

57
00:02:21,360 --> 00:02:25,440
still an issue in 2023 because at the

58
00:02:25,440 --> 00:02:28,020
beginning I was thinking that Mal was

59
00:02:28,020 --> 00:02:29,940
produced by USB

60
00:02:29,940 --> 00:02:32,459
was something from the past it's not

61
00:02:32,459 --> 00:02:35,220
actually the case because I started to

62
00:02:35,220 --> 00:02:37,739
look around and I see that we have a lot

63
00:02:37,739 --> 00:02:42,000
of examples of malware Stills using USB

64
00:02:42,000 --> 00:02:45,959
to spread and I did a little search for

65
00:02:45,959 --> 00:02:46,920
a

66
00:02:46,920 --> 00:02:49,620
for this and I'm mentioning here some of

67
00:02:49,620 --> 00:02:51,540
them when it's missed clock you can find

68
00:02:51,540 --> 00:02:54,060
some great analysis at these links okay

69
00:02:54,060 --> 00:02:56,099
they are written a bit but I will

70
00:02:56,099 --> 00:02:57,780
release the slides with the the the the

71
00:02:57,780 --> 00:03:00,000
repository so no problem you can get

72
00:03:00,000 --> 00:03:02,780
them raspberry Robin something like

73
00:03:02,780 --> 00:03:06,780
njrat try to cry plugics and some these

74
00:03:06,780 --> 00:03:09,239
names will recur into the presentations

75
00:03:09,239 --> 00:03:11,400
into the presentation because I would

76
00:03:11,400 --> 00:03:13,200
like to show you how this

77
00:03:13,200 --> 00:03:16,019
software is actually using USB to spread

78
00:03:16,019 --> 00:03:19,379
and why this is an issue for my side and

79
00:03:19,379 --> 00:03:21,780
why I try to build something to

80
00:03:21,780 --> 00:03:25,440
mix these things a little better

81
00:03:25,440 --> 00:03:27,540
and you may think that

82
00:03:27,540 --> 00:03:31,260
yes in 2023 USB

83
00:03:31,260 --> 00:03:34,340
spreading it's pretty outdated actually

84
00:03:34,340 --> 00:03:37,860
you may you may think why it's still

85
00:03:37,860 --> 00:03:40,680
something at these days

86
00:03:40,680 --> 00:03:42,360
first of all because the implementation

87
00:03:42,360 --> 00:03:45,180
is pretty easy it's a lot easier than

88
00:03:45,180 --> 00:03:47,819
implementing any other kind of warming

89
00:03:47,819 --> 00:03:49,860
or network spreading or whatever else

90
00:03:49,860 --> 00:03:52,140
it's just a matter of enumerating

91
00:03:52,140 --> 00:03:54,840
devices and write something there

92
00:03:54,840 --> 00:03:57,000
second things is that probably USB

93
00:03:57,000 --> 00:03:58,799
drives are easily exchanged without

94
00:03:58,799 --> 00:04:03,239
precautions even me that I'm let's say

95
00:04:03,239 --> 00:04:07,680
security guy and so on I I see a lot of

96
00:04:07,680 --> 00:04:10,500
times USB drives put in some unknown PC

97
00:04:10,500 --> 00:04:13,080
and so on without many precautions and

98
00:04:13,080 --> 00:04:15,420
for the most probably the most important

99
00:04:15,420 --> 00:04:19,500
reason is that USB allows spillover so

100
00:04:19,500 --> 00:04:22,019
when you deploy a malware you are in

101
00:04:22,019 --> 00:04:24,500
some ways

102
00:04:26,000 --> 00:04:28,979
spaces because you cannot get out of

103
00:04:28,979 --> 00:04:32,100
them and USB allows you to pass this

104
00:04:32,100 --> 00:04:33,320
kind of

105
00:04:33,320 --> 00:04:37,740
barriers and get maybe in something that

106
00:04:37,740 --> 00:04:40,320
is not expected so I think that that's

107
00:04:40,320 --> 00:04:42,479
the reason why this is still used the

108
00:04:42,479 --> 00:04:45,360
and this still problem actually

109
00:04:45,360 --> 00:04:47,280
it's not just something related to

110
00:04:47,280 --> 00:04:49,080
malware actually because every time you

111
00:04:49,080 --> 00:04:51,660
are inserting a USB key in a system you

112
00:04:51,660 --> 00:04:53,100
don't know what is really happening this

113
00:04:53,100 --> 00:04:55,800
is at least what which is my uh feeling

114
00:04:55,800 --> 00:04:59,940
when I put a key in someone else PC I

115
00:04:59,940 --> 00:05:01,199
still don't know what is going on

116
00:05:01,199 --> 00:05:03,380
because I don't have any kind of uh

117
00:05:03,380 --> 00:05:07,620
visible uh action visibility on that and

118
00:05:07,620 --> 00:05:10,199
maybe it's not just not a matter of

119
00:05:10,199 --> 00:05:13,320
first something writing on my disk but

120
00:05:13,320 --> 00:05:15,660
maybe something is maybe stealing my

121
00:05:15,660 --> 00:05:18,300
files do I remember

122
00:05:18,300 --> 00:05:21,180
which file I had on this key that I'm

123
00:05:21,180 --> 00:05:23,100
not using from two months or something

124
00:05:23,100 --> 00:05:25,500
like that probably not and so this is

125
00:05:25,500 --> 00:05:26,520
why

126
00:05:26,520 --> 00:05:30,240
I decided to build USB valve so uh what

127
00:05:30,240 --> 00:05:35,160
it is it's a very simple way to uh have

128
00:05:35,160 --> 00:05:38,639
uh visibility on what a system it's

129
00:05:38,639 --> 00:05:40,440
doing with when you insert a USB driving

130
00:05:40,440 --> 00:05:43,740
a system so it's actually a larger

131
00:05:43,740 --> 00:05:46,680
project and okay now we come to this

132
00:05:46,680 --> 00:05:51,060
part because it's a keychain I will see

133
00:05:51,060 --> 00:05:54,539
and okay yes it's built on something

134
00:05:54,539 --> 00:05:58,620
that it's really easy to find cheaper

135
00:05:58,620 --> 00:06:01,440
and well-known and so I decided to build

136
00:06:01,440 --> 00:06:04,139
this Hardware project on

137
00:06:04,139 --> 00:06:06,240
a couple of things which are probably

138
00:06:06,240 --> 00:06:07,919
well known probably you know them one is

139
00:06:07,919 --> 00:06:09,600
the Raspberry Pi Pico which is something

140
00:06:09,600 --> 00:06:11,699
like six dollar board probably you can

141
00:06:11,699 --> 00:06:14,160
find it also for less than this if you

142
00:06:14,160 --> 00:06:16,139
look around in in the internet

143
00:06:16,139 --> 00:06:18,600
and the other the second part which is

144
00:06:18,600 --> 00:06:20,639
the only other one the only other

145
00:06:20,639 --> 00:06:22,440
hardware part needed for building this

146
00:06:22,440 --> 00:06:24,479
it's a knowledge screen which is

147
00:06:24,479 --> 00:06:25,800
something like eight or maybe less

148
00:06:25,800 --> 00:06:28,259
dollars so with something like ten

149
00:06:28,259 --> 00:06:29,520
dollars so

150
00:06:29,520 --> 00:06:33,000
something model can build it and you can

151
00:06:33,000 --> 00:06:35,699
have your own tracker for this kind of

152
00:06:35,699 --> 00:06:37,800
things

153
00:06:37,800 --> 00:06:40,199
um why I decided to go with the pi Pico

154
00:06:40,199 --> 00:06:42,600
because it is well documented it has a

155
00:06:42,600 --> 00:06:44,880
very good SDK it's well known well

156
00:06:44,880 --> 00:06:47,100
supported and so on so it's really a

157
00:06:47,100 --> 00:06:49,740
great platform and I would suggest you

158
00:06:49,740 --> 00:06:51,479
to use it also for your Hardware

159
00:06:51,479 --> 00:06:54,360
projects if you have anything about this

160
00:06:54,360 --> 00:06:57,900
so I try to keep keep things simple in

161
00:06:57,900 --> 00:06:59,880
this case so uh

162
00:06:59,880 --> 00:07:03,419
at a certain point of the project I uh

163
00:07:03,419 --> 00:07:06,360
to use a real SD card in order to

164
00:07:06,360 --> 00:07:08,220
emulate the drive and have have some

165
00:07:08,220 --> 00:07:12,120
storage but then I decided to go with

166
00:07:12,120 --> 00:07:14,220
animulation so uh what I'm doing it's

167
00:07:14,220 --> 00:07:16,259
actually

168
00:07:16,259 --> 00:07:17,100
um

169
00:07:17,100 --> 00:07:19,259
I'm emulating everything into the realm

170
00:07:19,259 --> 00:07:21,720
of the pi Pico and nothing else is

171
00:07:21,720 --> 00:07:23,520
needed other than the two components

172
00:07:23,520 --> 00:07:24,500
before

173
00:07:24,500 --> 00:07:28,860
the very same code should run on any RP

174
00:07:28,860 --> 00:07:32,699
2040 platforms like for example uh the

175
00:07:32,699 --> 00:07:36,060
Arduino Nano has a specific version of

176
00:07:36,060 --> 00:07:39,840
the boards with this processor on it

177
00:07:39,840 --> 00:07:41,759
provides Overkill because that board

178
00:07:41,759 --> 00:07:43,800
also have a lot of other functions and

179
00:07:43,800 --> 00:07:46,220
it costs a bit more than a Raspberry Pi

180
00:07:46,220 --> 00:07:48,840
so I think that you can go with

181
00:07:48,840 --> 00:07:51,240
Raspberry Pi Pico and uh

182
00:07:51,240 --> 00:07:53,460
but it's actually actually compatible

183
00:07:53,460 --> 00:07:57,000
with any platform probably of supporting

184
00:07:57,000 --> 00:07:59,340
in tiny USB Library sorry which is the

185
00:07:59,340 --> 00:08:01,259
library on which the project has been

186
00:08:01,259 --> 00:08:02,160
built

187
00:08:02,160 --> 00:08:05,460
also I created a PCB

188
00:08:05,460 --> 00:08:08,039
um because I would Advocate thing

189
00:08:08,039 --> 00:08:11,340
Compact and tough and so I created a

190
00:08:11,340 --> 00:08:15,180
super simple custom PCB where you can

191
00:08:15,180 --> 00:08:18,720
put the components on and you can build

192
00:08:18,720 --> 00:08:20,120
your own key

193
00:08:20,120 --> 00:08:23,280
and this is what actually results at the

194
00:08:23,280 --> 00:08:25,560
end so this is the finals that you can

195
00:08:25,560 --> 00:08:27,660
also build by your own with the

196
00:08:27,660 --> 00:08:29,759
instruction the repository and now

197
00:08:29,759 --> 00:08:31,640
during the presentation we'll go through

198
00:08:31,640 --> 00:08:34,860
uh an example of how it works and how it

199
00:08:34,860 --> 00:08:36,020
actually

200
00:08:36,020 --> 00:08:39,479
helps you in securing your USB

201
00:08:39,479 --> 00:08:42,059
activities in the future let's say there

202
00:08:42,059 --> 00:08:44,219
is also a if you want there is also

203
00:08:44,219 --> 00:08:47,820
surprise I printed a bunch of okay this

204
00:08:47,820 --> 00:08:50,519
PCB is not mandatory so you can build

205
00:08:50,519 --> 00:08:52,080
your own with

206
00:08:52,080 --> 00:08:54,420
um breadboard or whatever you want just

207
00:08:54,420 --> 00:08:55,940
uh

208
00:08:55,940 --> 00:08:58,740
wiring and something but if you want a

209
00:08:58,740 --> 00:09:01,320
PCB I have some of them here with me I'm

210
00:09:01,320 --> 00:09:04,080
giving them away so if you want one for

211
00:09:04,080 --> 00:09:06,000
building your your own you can just ask

212
00:09:06,000 --> 00:09:08,519
me just after the talk I will give you

213
00:09:08,519 --> 00:09:10,920
one of these without any issue I have a

214
00:09:10,920 --> 00:09:13,620
bunch of them so not too much but I'm

215
00:09:13,620 --> 00:09:16,019
more than happy to give it to you if if

216
00:09:16,019 --> 00:09:17,420
you want to build one

217
00:09:17,420 --> 00:09:19,440
you will see at the end of the

218
00:09:19,440 --> 00:09:20,940
presentation if you if you want actually

219
00:09:20,940 --> 00:09:23,459
so we spoke about the hardware because

220
00:09:23,459 --> 00:09:25,440
that was the harder part but obviously

221
00:09:25,440 --> 00:09:28,200
this is not only done with Hardware

222
00:09:28,200 --> 00:09:30,120
because there is also the some software

223
00:09:30,120 --> 00:09:33,480
which is the firmware of this uh of this

224
00:09:33,480 --> 00:09:34,260
device

225
00:09:34,260 --> 00:09:35,880
and the software

226
00:09:35,880 --> 00:09:39,180
it's based on Tiny USB Library which is

227
00:09:39,180 --> 00:09:42,600
a library built to emulate in some way

228
00:09:42,600 --> 00:09:44,580
USB activities in a lot of way actually

229
00:09:44,580 --> 00:09:48,000
so it's a very wide Library doing a lot

230
00:09:48,000 --> 00:09:50,519
of things and uh

231
00:09:50,519 --> 00:09:53,220
what I did it's to create a fake file

232
00:09:53,220 --> 00:09:55,920
system directly on the ram of the Pico

233
00:09:55,920 --> 00:09:59,720
and monitoring what is going on when uh

234
00:09:59,720 --> 00:10:03,360
this key it's actually plug it plugged

235
00:10:03,360 --> 00:10:06,300
in into the into system

236
00:10:06,300 --> 00:10:08,519
the file system has been crafted in

237
00:10:08,519 --> 00:10:10,740
proper ways I use the word crafted here

238
00:10:10,740 --> 00:10:13,620
because actually it has been necessary

239
00:10:13,620 --> 00:10:17,100
to put things in the proper place in

240
00:10:17,100 --> 00:10:19,500
order to avoid false positive and um

241
00:10:19,500 --> 00:10:20,880
something that we'll see during the

242
00:10:20,880 --> 00:10:22,560
presentation

243
00:10:22,560 --> 00:10:25,260
obviously I'm exposing more space than

244
00:10:25,260 --> 00:10:27,420
what I actually I have available on the

245
00:10:27,420 --> 00:10:29,100
ram of the Pico because the Pico does

246
00:10:29,100 --> 00:10:30,899
not have a lot of ram I'm exposing more

247
00:10:30,899 --> 00:10:34,019
space so the system thinks that I'm you

248
00:10:34,019 --> 00:10:37,019
I'm inserting a USB drive with some

249
00:10:37,019 --> 00:10:39,779
space which does not exist actually but

250
00:10:39,779 --> 00:10:41,399
that's not our point because we don't

251
00:10:41,399 --> 00:10:43,500
need to store files we need to monitor

252
00:10:43,500 --> 00:10:46,260
activity on the USB part so not a

253
00:10:46,260 --> 00:10:49,019
problem this one and okay we will see

254
00:10:49,019 --> 00:10:51,660
that how it works

255
00:10:51,660 --> 00:10:54,660
as I said I had to craft the file system

256
00:10:54,660 --> 00:10:58,320
because in in order to have it working

257
00:10:58,320 --> 00:11:00,360
in a proper way on both Linux and

258
00:11:00,360 --> 00:11:03,920
windows I had to place

259
00:11:03,920 --> 00:11:06,899
files in specific cluster in specific

260
00:11:06,899 --> 00:11:09,180
places in order to avoid cashing issue

261
00:11:09,180 --> 00:11:11,880
and some some other things we will see

262
00:11:11,880 --> 00:11:13,740
during the presentation and I created

263
00:11:13,740 --> 00:11:17,880
this fake OS sorry fake fi system and

264
00:11:17,880 --> 00:11:20,640
this is already done and ready to be

265
00:11:20,640 --> 00:11:22,380
loaded you can also create your own we

266
00:11:22,380 --> 00:11:23,339
will see how at the end of the

267
00:11:23,339 --> 00:11:24,440
presentation

268
00:11:24,440 --> 00:11:26,579
if you want to personalize it or

269
00:11:26,579 --> 00:11:29,040
customize it for example it's

270
00:11:29,040 --> 00:11:31,320
um you can you can do it

271
00:11:31,320 --> 00:11:33,600
normal okay here the the fake file

272
00:11:33,600 --> 00:11:35,579
system is just a giant array like this

273
00:11:35,579 --> 00:11:38,040
one so nothing and it's not rocket

274
00:11:38,040 --> 00:11:41,760
science uh it's a giant array done with

275
00:11:41,760 --> 00:11:44,760
the things in the in the proper place

276
00:11:44,760 --> 00:11:46,920
and okay

277
00:11:46,920 --> 00:11:47,700
um

278
00:11:47,700 --> 00:11:50,279
what I would like to do now it's going

279
00:11:50,279 --> 00:11:52,320
with you through some field testing

280
00:11:52,320 --> 00:11:55,440
because actually I built this and I

281
00:11:55,440 --> 00:11:58,200
would like also to show you how and why

282
00:11:58,200 --> 00:12:00,899
these I think it's still useful to have

283
00:12:00,899 --> 00:12:02,820
something like that I didn't I didn't

284
00:12:02,820 --> 00:12:04,980
mention that the

285
00:12:04,980 --> 00:12:09,320
um the PCB has also a convenient

286
00:12:09,320 --> 00:12:12,899
hole for using to be a keychain like

287
00:12:12,899 --> 00:12:14,339
this one for example I'm using actually

288
00:12:14,339 --> 00:12:17,160
this is the key of my car and I'm

289
00:12:17,160 --> 00:12:18,660
actually using even if it everything

290
00:12:18,660 --> 00:12:21,899
exposed it it is pretty tough so you can

291
00:12:21,899 --> 00:12:23,760
use it actually without breaking

292
00:12:23,760 --> 00:12:24,839
anything

293
00:12:24,839 --> 00:12:29,100
and okay field testing means that

294
00:12:29,100 --> 00:12:32,579
we are going to test it with the full

295
00:12:32,579 --> 00:12:36,120
for real malwers and we will see four

296
00:12:36,120 --> 00:12:37,740
different techniques used by this

297
00:12:37,740 --> 00:12:39,899
malware to trigger execution into effect

298
00:12:39,899 --> 00:12:41,779
through USB

299
00:12:41,779 --> 00:12:44,579
we will see that some of them will be

300
00:12:44,579 --> 00:12:47,880
pretty nav and not really sophisticated

301
00:12:47,880 --> 00:12:50,940
but then we will see also something more

302
00:12:50,940 --> 00:12:53,339
interesting and more uh difficult to

303
00:12:53,339 --> 00:12:55,800
spot or to spot out and to uh to

304
00:12:55,800 --> 00:12:57,660
identify

305
00:12:57,660 --> 00:13:00,180
um obviously as I said these all these

306
00:13:00,180 --> 00:13:01,740
malware and all these view activities

307
00:13:01,740 --> 00:13:03,779
will be catched and disposed by USB

308
00:13:03,779 --> 00:13:06,920
valve and we will see some of the

309
00:13:06,920 --> 00:13:09,300
samples at the end

310
00:13:09,300 --> 00:13:12,899
it looks when I started this uh let's

311
00:13:12,899 --> 00:13:14,339
say this this search on the field

312
00:13:14,339 --> 00:13:18,480
testing I noticed that a lot of Auto

313
00:13:18,480 --> 00:13:20,639
malware rotors are using you that are

314
00:13:20,639 --> 00:13:23,060
using USB spreading techniques are

315
00:13:23,060 --> 00:13:26,639
using.net executables at the beginning I

316
00:13:26,639 --> 00:13:28,980
thought it was because maybe we were

317
00:13:28,980 --> 00:13:31,320
facing some

318
00:13:31,320 --> 00:13:34,079
need very simple malware so written by

319
00:13:34,079 --> 00:13:36,000
me but not sophisticated attacker or

320
00:13:36,000 --> 00:13:39,660
something like that and it is true for

321
00:13:39,660 --> 00:13:41,339
example for a couple of the malware we

322
00:13:41,339 --> 00:13:44,339
will see which are njrat and try to cry

323
00:13:44,339 --> 00:13:47,880
for example in jeratits are random um

324
00:13:47,880 --> 00:13:49,940
sorry um

325
00:13:49,940 --> 00:13:52,620
and try to cut it around somewhere these

326
00:13:52,620 --> 00:13:55,079
two are actually not so sophisticated

327
00:13:55,079 --> 00:13:57,899
manual we will see but we have a couple

328
00:13:57,899 --> 00:14:01,139
of other examples in the same in the

329
00:14:01,139 --> 00:14:03,240
same testing and one is raspberry

330
00:14:03,240 --> 00:14:06,180
rubbing the other one is plaguex and we

331
00:14:06,180 --> 00:14:07,680
are facing here a complete different

332
00:14:07,680 --> 00:14:10,380
story we are facing with some real

333
00:14:10,380 --> 00:14:13,700
complex malware here and we see that

334
00:14:13,700 --> 00:14:16,620
they are also using more sophisticating

335
00:14:16,620 --> 00:14:19,200
technique to trick the user in in doing

336
00:14:19,200 --> 00:14:21,720
something that it shouldn't

337
00:14:21,720 --> 00:14:24,660
let's start sorry let's start with the

338
00:14:24,660 --> 00:14:27,480
very first one which is njrat which is a

339
00:14:27,480 --> 00:14:30,959
pretty simple malware uh this is uh okay

340
00:14:30,959 --> 00:14:33,540
the it's as I said it's the routine dot

341
00:14:33,540 --> 00:14:36,600
dot net and you can see here one of the

342
00:14:36,600 --> 00:14:39,540
most basic way of infecting or spreading

343
00:14:39,540 --> 00:14:43,880
through USB which is the usage of the

344
00:14:43,880 --> 00:14:46,440
autoram.inf file which is a file that is

345
00:14:46,440 --> 00:14:49,560
saved on uh could this can be saved on a

346
00:14:49,560 --> 00:14:52,860
USB in order to be automatic in order to

347
00:14:52,860 --> 00:14:55,019
trigger automatic execution or species

348
00:14:55,019 --> 00:14:57,779
of specific skill table uh this is done

349
00:14:57,779 --> 00:15:00,500
through you see uh it's not even

350
00:15:00,500 --> 00:15:02,940
obfuscated or nothing into the into the

351
00:15:02,940 --> 00:15:06,120
malware and it's done in a very clear

352
00:15:06,120 --> 00:15:08,639
way what happens is that

353
00:15:08,639 --> 00:15:10,560
this is going to write this file

354
00:15:10,560 --> 00:15:12,779
pointing to an executable which is in

355
00:15:12,779 --> 00:15:16,680
this case uh in number two the SVC host

356
00:15:16,680 --> 00:15:20,100
this will be Trigon if the system where

357
00:15:20,100 --> 00:15:23,459
you are going to put the key has the

358
00:15:23,459 --> 00:15:26,820
autoplay function of Windows on the

359
00:15:26,820 --> 00:15:28,800
autoplay function actually execute this

360
00:15:28,800 --> 00:15:30,000
part

361
00:15:30,000 --> 00:15:32,880
mostly of the systems right now that

362
00:15:32,880 --> 00:15:35,880
does have this disabled so it's not real

363
00:15:35,880 --> 00:15:38,579
a sophisticated way of conducting an

364
00:15:38,579 --> 00:15:41,040
attacker using USB

365
00:15:41,040 --> 00:15:43,500
but okay it's uh it's one of the way

366
00:15:43,500 --> 00:15:45,660
they they can use it as being used by

367
00:15:45,660 --> 00:15:48,240
this uh this file here

368
00:15:48,240 --> 00:15:50,360
um

369
00:15:50,639 --> 00:15:53,160
let's go to the second example which is

370
00:15:53,160 --> 00:15:54,899
try to cry try to cry it's around

371
00:15:54,899 --> 00:15:57,540
somewhere even in this case we are

372
00:15:57,540 --> 00:16:00,920
facing with a

373
00:16:01,079 --> 00:16:04,079
very simple one very simple very simple

374
00:16:04,079 --> 00:16:06,839
ransomware here

375
00:16:06,839 --> 00:16:09,240
um and even in this case we are going to

376
00:16:09,240 --> 00:16:13,079
use a very basic way of enumerating the

377
00:16:13,079 --> 00:16:17,459
devices and writing on them and the

378
00:16:17,459 --> 00:16:19,620
different technique used by try to cry

379
00:16:19,620 --> 00:16:22,380
here is just to create some files as you

380
00:16:22,380 --> 00:16:25,740
can see in point three or four on USB

381
00:16:25,740 --> 00:16:27,180
and

382
00:16:27,180 --> 00:16:29,459
these files okay written in Arabic so

383
00:16:29,459 --> 00:16:31,820
probably the target of 32kai was uh

384
00:16:31,820 --> 00:16:34,920
Arabic countries are

385
00:16:34,920 --> 00:16:36,600
um

386
00:16:36,600 --> 00:16:39,480
some fancy fancy name let's say in order

387
00:16:39,480 --> 00:16:42,839
to trigger the execution from the user

388
00:16:42,839 --> 00:16:45,360
even in this case okay we see some files

389
00:16:45,360 --> 00:16:47,100
named important attack say password

390
00:16:47,100 --> 00:16:49,199
detection and so on so that the user

391
00:16:49,199 --> 00:16:52,500
maybe double click on them executing the

392
00:16:52,500 --> 00:16:53,699
um

393
00:16:53,699 --> 00:16:54,440
the

394
00:16:54,440 --> 00:16:56,880
ransomware itself so even in this case

395
00:16:56,880 --> 00:16:59,459
nothing it's really complex or really

396
00:16:59,459 --> 00:17:00,680
sophisticated

397
00:17:00,680 --> 00:17:03,540
we are speaking about a field testing

398
00:17:03,540 --> 00:17:05,579
here but mainly about Windows

399
00:17:05,579 --> 00:17:08,459
environments because actually in this

400
00:17:08,459 --> 00:17:11,579
case USB splitting files USB screening

401
00:17:11,579 --> 00:17:14,640
malware it's focused more on Windows I

402
00:17:14,640 --> 00:17:16,559
try to look for

403
00:17:16,559 --> 00:17:17,160
um

404
00:17:17,160 --> 00:17:20,400
Linux samples of these kind of things of

405
00:17:20,400 --> 00:17:22,500
this kind of

406
00:17:22,500 --> 00:17:25,439
spreading but I didn't found any

407
00:17:25,439 --> 00:17:28,500
probably also because I guess

408
00:17:28,500 --> 00:17:31,740
Linux has less the uh

409
00:17:31,740 --> 00:17:34,740
focus on removable device modern file

410
00:17:34,740 --> 00:17:37,260
system so probably it's not really

411
00:17:37,260 --> 00:17:39,960
something that we will see in Linux

412
00:17:39,960 --> 00:17:41,880
environments because it's they are more

413
00:17:41,880 --> 00:17:44,039
let's say Linux in general as

414
00:17:44,039 --> 00:17:45,600
environment it's more focused on file

415
00:17:45,600 --> 00:17:49,200
system review more than removable or not

416
00:17:49,200 --> 00:17:51,000
removable devices

417
00:17:51,000 --> 00:17:53,400
let's go to something more complex then

418
00:17:53,400 --> 00:17:56,100
because now we are speaking about a

419
00:17:56,100 --> 00:17:59,539
different uh a different

420
00:17:59,539 --> 00:18:03,500
malware here raspberry Robin it has been

421
00:18:03,500 --> 00:18:06,780
around starting from probably November

422
00:18:06,780 --> 00:18:09,840
December of the last year and we had

423
00:18:09,840 --> 00:18:12,600
some analysis done on that by Microsoft

424
00:18:12,600 --> 00:18:15,120
tender Canary this model is pretty

425
00:18:15,120 --> 00:18:18,720
complex is still around and it actually

426
00:18:18,720 --> 00:18:21,960
use USB to spread also USB not only USB

427
00:18:21,960 --> 00:18:24,360
because actually when it comes to this

428
00:18:24,360 --> 00:18:27,780
kind of malware we will see that uh

429
00:18:27,780 --> 00:18:30,720
the spreading is done through different

430
00:18:30,720 --> 00:18:34,160
ways so USB is one of them it's not just

431
00:18:34,160 --> 00:18:37,559
the the the only one like the previous

432
00:18:37,559 --> 00:18:39,179
two whistle

433
00:18:39,179 --> 00:18:41,039
we have a couple of analysis here done

434
00:18:41,039 --> 00:18:44,400
by rosberg as I said uh from Red Canary

435
00:18:44,400 --> 00:18:47,340
in Microsoft they are very well done so

436
00:18:47,340 --> 00:18:49,140
we'll have a look to them and this is

437
00:18:49,140 --> 00:18:52,980
the infection chain uh used by raspberry

438
00:18:52,980 --> 00:18:54,900
Lobby for example you see here that we

439
00:18:54,900 --> 00:18:57,000
are facing something a lot more complex

440
00:18:57,000 --> 00:18:59,400
than what we saw before so it's not just

441
00:18:59,400 --> 00:19:02,820
a matter of a simple mouse written.net

442
00:19:02,820 --> 00:19:06,179
and so on so it's really complex

443
00:19:06,179 --> 00:19:08,760
and if you want you really want to go

444
00:19:08,760 --> 00:19:12,240
through and to uh deep dive into the

445
00:19:12,240 --> 00:19:14,580
complexity of this you may have a look

446
00:19:14,580 --> 00:19:17,220
to the sample or to this analysis done

447
00:19:17,220 --> 00:19:19,380
by Avast where you see raspberry Robin

448
00:19:19,380 --> 00:19:23,539
and deploying also roshi stack

449
00:19:23,539 --> 00:19:26,059
sorry pronunciation

450
00:19:26,059 --> 00:19:29,640
where you can see that this malware have

451
00:19:29,640 --> 00:19:33,120
something like 14 levels of different

452
00:19:33,120 --> 00:19:36,179
encryption fuscations one into the other

453
00:19:36,179 --> 00:19:38,460
with the tons of tricks of unlike

454
00:19:38,460 --> 00:19:41,220
anti-vm anti-debug anti-sandbox and so

455
00:19:41,220 --> 00:19:42,900
on so in this case we are facing with

456
00:19:42,900 --> 00:19:45,480
another store it's this is coming from

457
00:19:45,480 --> 00:19:50,039
an advanced attacker and uses USB as one

458
00:19:50,039 --> 00:19:51,500
of the way

459
00:19:51,500 --> 00:19:53,700
for speeding

460
00:19:53,700 --> 00:19:55,679
it creates in this case it uses a

461
00:19:55,679 --> 00:19:57,539
different technique it creates a lnk

462
00:19:57,539 --> 00:19:59,220
file which is a link file in Windows

463
00:19:59,220 --> 00:20:03,419
disguised as a folder uh it can use a

464
00:20:03,419 --> 00:20:06,059
name like recovery or maybe USB drive

465
00:20:06,059 --> 00:20:09,120
Brands like Samsung or whatever or refer

466
00:20:09,120 --> 00:20:11,580
button or something like that because in

467
00:20:11,580 --> 00:20:14,340
this way it can maybe

468
00:20:14,340 --> 00:20:15,480
um

469
00:20:15,480 --> 00:20:17,760
tricks you in double click on it with

470
00:20:17,760 --> 00:20:19,440
thinking that it that's a folder but

471
00:20:19,440 --> 00:20:21,900
because it has actually a icon folder on

472
00:20:21,900 --> 00:20:23,160
that

473
00:20:23,160 --> 00:20:25,320
and now I would like to have to the last

474
00:20:25,320 --> 00:20:27,660
one which is probably the funniest one I

475
00:20:27,660 --> 00:20:32,340
think because uh in some way it

476
00:20:32,340 --> 00:20:37,320
Target as like a security analyst or

477
00:20:37,320 --> 00:20:40,860
malware malware analysis because plug it

478
00:20:40,860 --> 00:20:42,960
at least in one of some of the samples

479
00:20:42,960 --> 00:20:44,299
has been

480
00:20:44,299 --> 00:20:46,440
sent out

481
00:20:46,440 --> 00:20:51,179
as xdbg dll so the Formosa

482
00:20:51,179 --> 00:20:51,720
um

483
00:20:51,720 --> 00:20:54,419
debugger you can have a look to it in

484
00:20:54,419 --> 00:20:56,520
this analysis done by Palo Alto where

485
00:20:56,520 --> 00:20:59,100
you can see this kind of analysis and

486
00:20:59,100 --> 00:21:01,860
here I would like to stop one second uh

487
00:21:01,860 --> 00:21:03,240
because I would like to perceive

488
00:21:03,240 --> 00:21:05,880
personally thank you to Duncan who is

489
00:21:05,880 --> 00:21:07,160
the maintainer of

490
00:21:07,160 --> 00:21:10,559
xdbg project who is doing a lot of work

491
00:21:10,559 --> 00:21:13,080
on it we I think that as a malware

492
00:21:13,080 --> 00:21:15,179
analyst and all the malware analysts are

493
00:21:15,179 --> 00:21:18,059
using it so I would like to ask him uh

494
00:21:18,059 --> 00:21:20,039
I'd like to ask you to contribute to to

495
00:21:20,039 --> 00:21:23,000
the project Itself by donation or by

496
00:21:23,000 --> 00:21:25,799
also working on on the project he

497
00:21:25,799 --> 00:21:27,900
already fixed this issue because the

498
00:21:27,900 --> 00:21:29,600
issue

499
00:21:29,600 --> 00:21:33,419
that is using a plaguex to spread in

500
00:21:33,419 --> 00:21:35,640
this case it's because it it's try to

501
00:21:35,640 --> 00:21:39,240
side load dlls into the xdbg and he

502
00:21:39,240 --> 00:21:42,299
already fixed it actually has said as

503
00:21:42,299 --> 00:21:45,659
you can see here in in the comment of

504
00:21:45,659 --> 00:21:48,659
this of his repository so big thank you

505
00:21:48,659 --> 00:21:51,179
and kudos to Duncan for his hard work on

506
00:21:51,179 --> 00:21:53,640
this close parenthesis and let's go back

507
00:21:53,640 --> 00:21:55,799
on the plaguex which is as I said

508
00:21:55,799 --> 00:21:59,940
distributed as an X32 Bridge dll file

509
00:21:59,940 --> 00:22:02,460
which is side loaded when you start x64

510
00:22:02,460 --> 00:22:05,580
dbg application the payload itself it's

511
00:22:05,580 --> 00:22:08,880
it's into the X32 bridge that file so

512
00:22:08,880 --> 00:22:11,400
they did something that could be side

513
00:22:11,400 --> 00:22:14,400
loaded starting it was side loaded

514
00:22:14,400 --> 00:22:16,260
because now it has been fixed starting

515
00:22:16,260 --> 00:22:18,120
xdbg

516
00:22:18,120 --> 00:22:21,659
and what is going on is that uh we in

517
00:22:21,659 --> 00:22:23,340
various things he's doing it's also

518
00:22:23,340 --> 00:22:26,400
spreading in a similar way of raspberry

519
00:22:26,400 --> 00:22:27,299
Robin

520
00:22:27,299 --> 00:22:30,059
but there is something more which is uh

521
00:22:30,059 --> 00:22:31,740
very interesting in my in very clever

522
00:22:31,740 --> 00:22:34,080
from from this point of view

523
00:22:34,080 --> 00:22:37,080
it creates a lnk file again these guys

524
00:22:37,080 --> 00:22:39,120
as a device in this case

525
00:22:39,120 --> 00:22:42,179
and then all the files that are used to

526
00:22:42,179 --> 00:22:44,760
spread are saved in a folder named with

527
00:22:44,760 --> 00:22:48,900
a Unicode chart 0 0 a0 which is a no

528
00:22:48,900 --> 00:22:51,539
break space in Unicode that's pretty

529
00:22:51,539 --> 00:22:53,640
interesting because this is a has a nice

530
00:22:53,640 --> 00:22:56,220
effect like this one so you will see

531
00:22:56,220 --> 00:22:58,380
something like this which is actually a

532
00:22:58,380 --> 00:23:00,419
removable disk the name of the the disk

533
00:23:00,419 --> 00:23:03,059
itself with a an icon here no other

534
00:23:03,059 --> 00:23:05,580
files are there because

535
00:23:05,580 --> 00:23:08,159
even if you put your check here on

536
00:23:08,159 --> 00:23:10,020
display hidden files nothing else will

537
00:23:10,020 --> 00:23:13,320
be displayed because Explorer is not

538
00:23:13,320 --> 00:23:14,460
showing

539
00:23:14,460 --> 00:23:17,820
files with these non-breaking space in

540
00:23:17,820 --> 00:23:18,720
it

541
00:23:18,720 --> 00:23:21,120
and so this is actually what you see I

542
00:23:21,120 --> 00:23:22,919
don't know you but if I see something

543
00:23:22,919 --> 00:23:24,900
that I probably wouldn't realize that

544
00:23:24,900 --> 00:23:27,360
this is not a real USB drive and I'm

545
00:23:27,360 --> 00:23:31,919
going to double click on it it's

546
00:23:31,919 --> 00:23:33,840
very proud of that I'm do I'm going to

547
00:23:33,840 --> 00:23:35,340
do that because it's very very sneaky

548
00:23:35,340 --> 00:23:37,380
it's very very clever but what actually

549
00:23:37,380 --> 00:23:39,720
you see it and this is actually what you

550
00:23:39,720 --> 00:23:43,559
see even if you uh enable the the check

551
00:23:43,559 --> 00:23:46,020
on hidden files because actually they

552
00:23:46,020 --> 00:23:48,240
are not they are also hidden but they

553
00:23:48,240 --> 00:23:50,940
have these uh additional trick of using

554
00:23:50,940 --> 00:23:53,220
these not breakable space

555
00:23:53,220 --> 00:23:57,000
if you have a look uh on the

556
00:23:57,000 --> 00:23:59,100
um on the drive itself you will see the

557
00:23:59,100 --> 00:24:02,760
USB valve.lnk file for example here

558
00:24:02,760 --> 00:24:05,280
and if you try to type it you will see

559
00:24:05,280 --> 00:24:08,900
pointing to something which is

560
00:24:08,900 --> 00:24:10,980
x32dbg.xa but you don't see actually

561
00:24:10,980 --> 00:24:13,020
anything there

562
00:24:13,020 --> 00:24:14,700
switching to

563
00:24:14,700 --> 00:24:16,799
let's say a more

564
00:24:16,799 --> 00:24:20,100
uh robust file operating system like

565
00:24:20,100 --> 00:24:22,860
Linux you will start to see something

566
00:24:22,860 --> 00:24:24,960
this is the list of the same directory

567
00:24:24,960 --> 00:24:27,299
done from a Linux inverter and you see

568
00:24:27,299 --> 00:24:29,159
here at point one that is there's this

569
00:24:29,159 --> 00:24:30,620
entry here

570
00:24:30,620 --> 00:24:34,020
uh showing something strange because you

571
00:24:34,020 --> 00:24:37,320
see on an empty an empty entry of the

572
00:24:37,320 --> 00:24:40,260
file of the directory and if you try to

573
00:24:40,260 --> 00:24:41,340
drift down

574
00:24:41,340 --> 00:24:43,440
you will see that going from point one

575
00:24:43,440 --> 00:24:45,179
and point two where we change the the

576
00:24:45,179 --> 00:24:47,640
directory we see that in point three we

577
00:24:47,640 --> 00:24:50,039
see another folder which contains some

578
00:24:50,039 --> 00:24:52,740
other files and Another Empty folder

579
00:24:52,740 --> 00:24:53,700
here

580
00:24:53,700 --> 00:24:57,120
and if you drill down even more you will

581
00:24:57,120 --> 00:25:02,280
get finally to the

582
00:25:02,280 --> 00:25:05,220
folder where payloads resides and this

583
00:25:05,220 --> 00:25:07,559
is completely hidden into the Explorer

584
00:25:07,559 --> 00:25:10,200
view so I think that this is a very

585
00:25:10,200 --> 00:25:14,280
clever and a nice way to to spread

586
00:25:14,280 --> 00:25:15,299
now

587
00:25:15,299 --> 00:25:20,340
we saw four different ways from for used

588
00:25:20,340 --> 00:25:23,940
by malware for spreading and

589
00:25:23,940 --> 00:25:25,919
I'm sure that you probably said okay the

590
00:25:25,919 --> 00:25:28,700
first two are pretty much

591
00:25:28,700 --> 00:25:32,100
impossible to to

592
00:25:32,100 --> 00:25:35,159
not to notice because they are very very

593
00:25:35,159 --> 00:25:38,159
easy to spot out the other two it

594
00:25:38,159 --> 00:25:39,779
depends

595
00:25:39,779 --> 00:25:42,000
how

596
00:25:42,000 --> 00:25:44,400
USB valve interact so what you have to

597
00:25:44,400 --> 00:25:46,799
do is just to put your USB valve device

598
00:25:46,799 --> 00:25:51,960
into a PC uh into a USB port of a PC

599
00:25:51,960 --> 00:25:54,299
just to see what happens and what you

600
00:25:54,299 --> 00:25:55,679
will see at the beginning it's something

601
00:25:55,679 --> 00:25:57,659
like this so when they've Boom the the

602
00:25:57,659 --> 00:26:00,000
board boots up you will see something

603
00:26:00,000 --> 00:26:02,700
like this on the your OLED screen

604
00:26:02,700 --> 00:26:04,740
because you will have one of the point

605
00:26:04,740 --> 00:26:07,500
here is to have immediate output on what

606
00:26:07,500 --> 00:26:10,260
is going on and okay USB valve run a

607
00:26:10,260 --> 00:26:12,360
self-test before starting

608
00:26:12,360 --> 00:26:14,039
and seeing that everything it's okay

609
00:26:14,039 --> 00:26:16,679
this self-test is basically a self-check

610
00:26:16,679 --> 00:26:19,620
on the USB on the fake file system just

611
00:26:19,620 --> 00:26:22,440
to check for integrity I did it it's

612
00:26:22,440 --> 00:26:24,960
probably Overkill because I think it's

613
00:26:24,960 --> 00:26:27,960
pretty hard to uh

614
00:26:27,960 --> 00:26:31,740
being able to modify it directly from

615
00:26:31,740 --> 00:26:33,539
the USB it's something that's flashing

616
00:26:33,539 --> 00:26:35,640
on the ram so but okay I had some space

617
00:26:35,640 --> 00:26:37,440
so I did it

618
00:26:37,440 --> 00:26:40,020
and then you will see something okay we

619
00:26:40,020 --> 00:26:42,000
are obviously here saying that we are

620
00:26:42,000 --> 00:26:43,799
putting this into a Windows system

621
00:26:43,799 --> 00:26:46,380
obviously with something like an access

622
00:26:46,380 --> 00:26:48,480
to a auto run

623
00:26:48,480 --> 00:26:50,940
a couple of things when you see on USB

624
00:26:50,940 --> 00:26:53,640
valve something marked with a plus means

625
00:26:53,640 --> 00:26:55,320
okay it's expected nothing to worry

626
00:26:55,320 --> 00:26:58,500
about if you see something like an

627
00:26:58,500 --> 00:27:00,480
explanation mark it's something that you

628
00:27:00,480 --> 00:27:02,580
have to pay attention to in this case

629
00:27:02,580 --> 00:27:06,539
why auto run it's not an issue because

630
00:27:06,539 --> 00:27:07,080
um

631
00:27:07,080 --> 00:27:11,000
as I said before the autorf it's used to

632
00:27:11,000 --> 00:27:15,360
execute files if autoplay is on but I

633
00:27:15,360 --> 00:27:18,000
actually realized that the windows is

634
00:27:18,000 --> 00:27:21,299
accessing this file in any case even if

635
00:27:21,299 --> 00:27:24,059
autoplays off Windows is trying to

636
00:27:24,059 --> 00:27:26,400
access it in a reader for reading and

637
00:27:26,400 --> 00:27:28,380
okay so this is completely expected when

638
00:27:28,380 --> 00:27:31,980
you put a USB drive on

639
00:27:31,980 --> 00:27:35,159
uh on the device so that's fine okay

640
00:27:35,159 --> 00:27:37,740
something it's accessing the auto run

641
00:27:37,740 --> 00:27:40,620
pretty normal and okay you will see here

642
00:27:40,620 --> 00:27:44,580
they read the access beside the

643
00:27:44,580 --> 00:27:47,640
the the sentence the the

644
00:27:47,640 --> 00:27:51,299
the warning here which is not a warning

645
00:27:51,299 --> 00:27:52,679
in this case because it's more an

646
00:27:52,679 --> 00:27:54,240
informative message as I said with the

647
00:27:54,240 --> 00:27:55,559
Plus

648
00:27:55,559 --> 00:27:59,279
now let's go to case number two we

649
00:27:59,279 --> 00:28:02,460
actually inserted our USB valve again in

650
00:28:02,460 --> 00:28:04,620
a PC in this case we don't have an

651
00:28:04,620 --> 00:28:07,200
access to water run but we have

652
00:28:07,200 --> 00:28:10,080
something like we see here an

653
00:28:10,080 --> 00:28:12,659
explanation mark why because I placed

654
00:28:12,659 --> 00:28:15,059
also some Canary files on my my fake

655
00:28:15,059 --> 00:28:17,340
file system like a redmi for example

656
00:28:17,340 --> 00:28:20,940
which are telling us if something is

657
00:28:20,940 --> 00:28:22,799
accessing all the files this should not

658
00:28:22,799 --> 00:28:23,640
happen

659
00:28:23,640 --> 00:28:26,640
in a default Windows installation with

660
00:28:26,640 --> 00:28:29,120
Windows Defender on

661
00:28:29,120 --> 00:28:32,820
uh when you put a USB drive in a system

662
00:28:32,820 --> 00:28:34,980
it shouldn't access all the file on the

663
00:28:34,980 --> 00:28:37,860
file system it could happen if you may

664
00:28:37,860 --> 00:28:41,039
have maybe have some other antivirus

665
00:28:41,039 --> 00:28:43,700
software so I saw it during the tests

666
00:28:43,700 --> 00:28:46,200
and but this is the final you have to

667
00:28:46,200 --> 00:28:47,820
pay attention to because that means that

668
00:28:47,820 --> 00:28:51,000
if you are inserting your own drive in

669
00:28:51,000 --> 00:28:53,100
any case something is going to access

670
00:28:53,100 --> 00:28:54,919
everything that is saved on that system

671
00:28:54,919 --> 00:28:57,240
maybe it's benign because it's an

672
00:28:57,240 --> 00:28:59,279
antivirus maybe not because maybe it's

673
00:28:59,279 --> 00:29:01,020
something it's also stealing your data I

674
00:29:01,020 --> 00:29:03,360
don't know it depends but you at least

675
00:29:03,360 --> 00:29:06,679
have this information before doing uh

676
00:29:06,679 --> 00:29:09,840
what you what you want you you put put

677
00:29:09,840 --> 00:29:13,919
your real USB in in the system and

678
00:29:13,919 --> 00:29:17,820
that's kinda uh useful information and

679
00:29:17,820 --> 00:29:20,760
the last one the last case it's if

680
00:29:20,760 --> 00:29:23,159
something it's writing actually on on

681
00:29:23,159 --> 00:29:25,320
the on the device itself in this case we

682
00:29:25,320 --> 00:29:27,720
will see a specific sentence here

683
00:29:27,720 --> 00:29:29,940
specific warning with exclamation mark

684
00:29:29,940 --> 00:29:31,559
again because something is actually

685
00:29:31,559 --> 00:29:33,779
writing on the USB drive and this is

686
00:29:33,779 --> 00:29:35,580
definitely wrong this shouldn't happen

687
00:29:35,580 --> 00:29:37,919
in any case except for one thing that

688
00:29:37,919 --> 00:29:41,340
now I tell you uh something it's uh I

689
00:29:41,340 --> 00:29:42,659
don't know encrypting your file or

690
00:29:42,659 --> 00:29:44,580
writing something there but is it

691
00:29:44,580 --> 00:29:46,980
definitely wrong I saw some false

692
00:29:46,980 --> 00:29:50,220
positive in writing files here when you

693
00:29:50,220 --> 00:29:52,760
put a USB drive in a Windows system

694
00:29:52,760 --> 00:29:55,860
where the recycle bins does not exist on

695
00:29:55,860 --> 00:29:57,840
the files on the device itself because

696
00:29:57,840 --> 00:30:00,659
for some reasons Windows wants to write

697
00:30:00,659 --> 00:30:03,120
a recycle bin file

698
00:30:03,120 --> 00:30:06,860
um so the file system built on USB valve

699
00:30:06,860 --> 00:30:10,200
handle this and have the recycle being

700
00:30:10,200 --> 00:30:11,880
created so you will not see this Force

701
00:30:11,880 --> 00:30:14,640
positive but and if you see this

702
00:30:14,640 --> 00:30:16,260
sentence here that means that you are

703
00:30:16,260 --> 00:30:17,580
going to have some issues if you are

704
00:30:17,580 --> 00:30:21,299
going to put your own USB into that

705
00:30:21,299 --> 00:30:23,159
system

706
00:30:23,159 --> 00:30:25,500
now this is the basic functionalities of

707
00:30:25,500 --> 00:30:28,140
USB valve so you have just to put it

708
00:30:28,140 --> 00:30:32,039
into a system with a USB cable and you

709
00:30:32,039 --> 00:30:34,140
will have immediate feedback so that's

710
00:30:34,140 --> 00:30:36,480
the device you have immediate feedback

711
00:30:36,480 --> 00:30:39,840
on what is going on on that system but

712
00:30:39,840 --> 00:30:44,340
you can also use it as a more advanced

713
00:30:44,340 --> 00:30:47,480
tool in order to do some additional

714
00:30:47,480 --> 00:30:50,580
debugging forensics on USB protocol

715
00:30:50,580 --> 00:30:52,700
like for example

716
00:30:52,700 --> 00:30:56,240
monitoring what is going on in terms of

717
00:30:56,240 --> 00:30:59,880
reading and writing at the lowest level

718
00:30:59,880 --> 00:31:03,260
at scuzzy level of the USB protocol

719
00:31:03,260 --> 00:31:06,000
once you put this device and you could

720
00:31:06,000 --> 00:31:09,120
you connect it to a Windows system you

721
00:31:09,120 --> 00:31:11,880
will get a USB drive obviously mapped on

722
00:31:11,880 --> 00:31:15,440
the system and an additional comport

723
00:31:15,440 --> 00:31:18,000
that you can use to attach your

724
00:31:18,000 --> 00:31:20,460
preferred terminal so you can attach put

725
00:31:20,460 --> 00:31:22,440
it UI or whatever you want

726
00:31:22,440 --> 00:31:24,720
to this comport and you will see

727
00:31:24,720 --> 00:31:27,779
something like this so here I'm

728
00:31:27,779 --> 00:31:30,360
emulating a right on the disk

729
00:31:30,360 --> 00:31:33,120
here on the right side yeah for you it's

730
00:31:33,120 --> 00:31:35,220
right I'm copying the file one of the

731
00:31:35,220 --> 00:31:38,279
canary file which is the type the readme

732
00:31:38,279 --> 00:31:41,820
txt in another one and on the left side

733
00:31:41,820 --> 00:31:44,940
you see what exactly is written on the

734
00:31:44,940 --> 00:31:46,559
comporter which are some debug

735
00:31:46,559 --> 00:31:49,380
information here saying what is actually

736
00:31:49,380 --> 00:31:52,919
going on at the skazy read 10 and write

737
00:31:52,919 --> 00:31:56,000
10 commands on the USB protocol

738
00:31:56,000 --> 00:31:58,919
it tells you which is the sector written

739
00:31:58,919 --> 00:32:01,140
the size it also dumps part of the

740
00:32:01,140 --> 00:32:03,419
packets not the entire one at least not

741
00:32:03,419 --> 00:32:06,059
at this release because dumping the

742
00:32:06,059 --> 00:32:10,860
entire 512 bytes is causing some timing

743
00:32:10,860 --> 00:32:13,200
issues which are interacting with the

744
00:32:13,200 --> 00:32:15,419
protocol so they are going to break

745
00:32:15,419 --> 00:32:17,460
things but probably it's something that

746
00:32:17,460 --> 00:32:20,880
could be can be fixed and that's an

747
00:32:20,880 --> 00:32:22,679
additional way you can you how you can

748
00:32:22,679 --> 00:32:25,320
use it to debug at lowest level what is

749
00:32:25,320 --> 00:32:29,580
going on on the USB drive

750
00:32:29,580 --> 00:32:32,100
another more advanced thing is that you

751
00:32:32,100 --> 00:32:34,559
can use it as the bugger in this case

752
00:32:34,559 --> 00:32:36,000
because

753
00:32:36,000 --> 00:32:39,059
raspberry play pick on and also my PCB

754
00:32:39,059 --> 00:32:42,000
expose the three swd pins so you can

755
00:32:42,000 --> 00:32:46,020
attach for example a j-link debugger at

756
00:32:46,020 --> 00:32:49,320
the device itself and then run GDB on it

757
00:32:49,320 --> 00:32:51,480
and so you can have

758
00:32:51,480 --> 00:32:54,720
full access to one from outside to the

759
00:32:54,720 --> 00:32:57,419
firmware of the USB valve itself and on

760
00:32:57,419 --> 00:33:00,240
the activity done on the USB drive so in

761
00:33:00,240 --> 00:33:03,419
this case you can have a lot of insight

762
00:33:03,419 --> 00:33:05,039
on what is going on so this is another

763
00:33:05,039 --> 00:33:08,880
way how you can use the the device

764
00:33:08,880 --> 00:33:12,659
now I said before that you can also

765
00:33:12,659 --> 00:33:13,679
customize

766
00:33:13,679 --> 00:33:14,640
um

767
00:33:14,640 --> 00:33:17,460
I I told you I created a file system and

768
00:33:17,460 --> 00:33:21,659
it's a pre-built on the uh on the

769
00:33:21,659 --> 00:33:25,200
firmware itself but I'm also

770
00:33:25,200 --> 00:33:27,179
providing a script in order to build

771
00:33:27,179 --> 00:33:29,100
your own because if you want to know

772
00:33:29,100 --> 00:33:31,500
change something or

773
00:33:31,500 --> 00:33:33,299
try something yourself you can actually

774
00:33:33,299 --> 00:33:34,760
do it

775
00:33:34,760 --> 00:33:37,440
the procedure it's pretty easy from one

776
00:33:37,440 --> 00:33:39,120
side and a bit more accomplished from

777
00:33:39,120 --> 00:33:41,700
another in the sense that okay it's

778
00:33:41,700 --> 00:33:43,019
pretty easy to create a fake file system

779
00:33:43,019 --> 00:33:44,820
you can just create with these three

780
00:33:44,820 --> 00:33:47,880
Linux command okay you can create a file

781
00:33:47,880 --> 00:33:49,799
create a file system on it and then

782
00:33:49,799 --> 00:33:53,340
mount it as a file system uh you know

783
00:33:53,340 --> 00:33:56,100
not in a folder and then create whatever

784
00:33:56,100 --> 00:33:58,320
you want then you can run maybe the

785
00:33:58,320 --> 00:34:00,240
python script and create the proper

786
00:34:00,240 --> 00:34:02,700
giant array that was probably speaking

787
00:34:02,700 --> 00:34:07,500
before to be loaded into USB valve

788
00:34:07,500 --> 00:34:10,199
um but I would like to ask you one thing

789
00:34:10,199 --> 00:34:12,239
if you are going to do this I would like

790
00:34:12,239 --> 00:34:14,639
to work with you maybe because you can

791
00:34:14,639 --> 00:34:16,800
prove the project together so if you

792
00:34:16,800 --> 00:34:19,800
think that it makes sense to create a

793
00:34:19,800 --> 00:34:21,119
different file system with some other

794
00:34:21,119 --> 00:34:23,280
things and some other files and so on

795
00:34:23,280 --> 00:34:25,020
because you want to monitor specific

796
00:34:25,020 --> 00:34:26,879
things I would like to ask you to open

797
00:34:26,879 --> 00:34:28,859
an issue on GitHub where the project is

798
00:34:28,859 --> 00:34:31,980
published and so you can work on it

799
00:34:31,980 --> 00:34:33,719
together and maybe improve the project

800
00:34:33,719 --> 00:34:38,339
together so please do it if if you have

801
00:34:38,339 --> 00:34:40,139
any idea on that

802
00:34:40,139 --> 00:34:42,179
and thank you for that for in advance

803
00:34:42,179 --> 00:34:45,060
and then also let's go to something that

804
00:34:45,060 --> 00:34:48,060
is curious to to try for example what

805
00:34:48,060 --> 00:34:50,520
I'm doing in now that I built this one

806
00:34:50,520 --> 00:34:53,099
it's just to try to put this device in

807
00:34:53,099 --> 00:34:55,679
every USB port I found like in my house

808
00:34:55,679 --> 00:34:59,339
for example the television decoder the

809
00:34:59,339 --> 00:35:02,099
modem steam deck or whatever I found

810
00:35:02,099 --> 00:35:04,740
just to see if maybe this device are

811
00:35:04,740 --> 00:35:06,359
doing something strange with my data so

812
00:35:06,359 --> 00:35:09,060
I encourage also to do that because it's

813
00:35:09,060 --> 00:35:11,060
quite funny to see

814
00:35:11,060 --> 00:35:12,980
and uh

815
00:35:12,980 --> 00:35:15,359
last part it's about open sourcing

816
00:35:15,359 --> 00:35:17,640
everything obviously because as I said

817
00:35:17,640 --> 00:35:22,160
I'm uh an open source advocate so

818
00:35:22,160 --> 00:35:25,560
everything I do it's usually released in

819
00:35:25,560 --> 00:35:28,260
this way unless very few things that we

820
00:35:28,260 --> 00:35:31,380
are doing better written to to be shared

821
00:35:31,380 --> 00:35:32,700
that's the only reason why I'm not

822
00:35:32,700 --> 00:35:35,940
sharing because I'm I don't want to to

823
00:35:35,940 --> 00:35:39,660
to to show you how bad am I uh at

824
00:35:39,660 --> 00:35:43,260
writing code and uh so everything is

825
00:35:43,260 --> 00:35:46,200
published on my GitHub under the

826
00:35:46,200 --> 00:35:49,800
repository USB valve uh everything is

827
00:35:49,800 --> 00:35:51,240
there you can build your own you can

828
00:35:51,240 --> 00:35:54,599
also download if you want the PCB Gerber

829
00:35:54,599 --> 00:35:56,820
file so you can print your if you want

830
00:35:56,820 --> 00:35:58,619
uh

831
00:35:58,619 --> 00:36:00,960
but I remind you to ask me for one if

832
00:36:00,960 --> 00:36:02,460
you want to build one

833
00:36:02,460 --> 00:36:05,099
and

834
00:36:05,099 --> 00:36:07,020
okay that's the repository so you can

835
00:36:07,020 --> 00:36:09,780
find building instruction for both the

836
00:36:09,780 --> 00:36:12,240
PCB version or your own version so you

837
00:36:12,240 --> 00:36:16,800
can just download everything from there

838
00:36:16,800 --> 00:36:19,859
and now okay let's go to the credit

839
00:36:19,859 --> 00:36:22,079
Parts because I would like to obviously

840
00:36:22,079 --> 00:36:25,440
thank some a lot of people actually like

841
00:36:25,440 --> 00:36:27,720
for example the tiny USB project which

842
00:36:27,720 --> 00:36:30,480
is the the the group who built the the

843
00:36:30,480 --> 00:36:33,180
library other fruit because I actually

844
00:36:33,180 --> 00:36:37,920
used uh the Arduino IDE for a Raspberry

845
00:36:37,920 --> 00:36:41,280
Pi because even if I'm thinking that it

846
00:36:41,280 --> 00:36:43,859
makes sense to migrate directly to the

847
00:36:43,859 --> 00:36:46,859
Pico SDK to be honest because it's a

848
00:36:46,859 --> 00:36:50,040
more supported and so on so probably I

849
00:36:50,040 --> 00:36:52,140
will go to the direction but so far I

850
00:36:52,140 --> 00:36:55,320
use that part and uh okay so I should

851
00:36:55,320 --> 00:36:57,359
thanks all the people do who did the

852
00:36:57,359 --> 00:36:58,500
analysis that I mentioned in my

853
00:36:58,500 --> 00:37:02,040
presentation also the presentation

854
00:37:02,040 --> 00:37:03,960
templates provided by slight Carnival

855
00:37:03,960 --> 00:37:08,520
and so I think a day we are at the end

856
00:37:08,520 --> 00:37:10,859
so you can take your glass sunglasses

857
00:37:10,859 --> 00:37:12,839
off because the presentation is going to

858
00:37:12,839 --> 00:37:16,980
be finished and okay if you have any

859
00:37:16,980 --> 00:37:18,119
question

860
00:37:18,119 --> 00:37:20,640
I'm here

861
00:37:20,640 --> 00:37:28,079
[Applause]

862
00:37:28,079 --> 00:37:30,859
any questions

863
00:37:33,780 --> 00:37:36,800
see uni

864
00:37:37,619 --> 00:37:39,960
no come on

865
00:37:39,960 --> 00:37:42,119
anyway if you then have any question

866
00:37:42,119 --> 00:37:45,060
maybe it came to you later on just write

867
00:37:45,060 --> 00:37:48,060
me a message on guitar on Twitter

868
00:37:48,060 --> 00:37:50,220
yeah very interesting this tool you're

869
00:37:50,220 --> 00:37:52,800
doing what was the sorry I don't see you

870
00:37:52,800 --> 00:37:56,220
okay just here sorry so uh what was the

871
00:37:56,220 --> 00:37:59,099
most strange thing you saw that um that

872
00:37:59,099 --> 00:38:01,380
something did or with your device so you

873
00:38:01,380 --> 00:38:03,720
showed that it reads some devices it

874
00:38:03,720 --> 00:38:06,000
reads some files it can write new files

875
00:38:06,000 --> 00:38:07,680
did you see something where it tried to

876
00:38:07,680 --> 00:38:10,020
attack the firmware or so which would

877
00:38:10,020 --> 00:38:11,880
theoretically also be possible and would

878
00:38:11,880 --> 00:38:14,099
you see something like that like try to

879
00:38:14,099 --> 00:38:16,440
attack the firmware of the USB device

880
00:38:16,440 --> 00:38:19,440
so far so far I didn't see at least from

881
00:38:19,440 --> 00:38:22,380
from I tried to to use it as uh let's

882
00:38:22,380 --> 00:38:24,240
say Canary to see what is doing what

883
00:38:24,240 --> 00:38:26,820
what devices are doing so far I didn't

884
00:38:26,820 --> 00:38:29,220
see anything strange directly from let's

885
00:38:29,220 --> 00:38:32,220
say uh home devices or something like

886
00:38:32,220 --> 00:38:34,260
that the most thing the strangest things

887
00:38:34,260 --> 00:38:38,160
are done by uh let's say the marwars we

888
00:38:38,160 --> 00:38:41,640
saw in the analysis uh so so far it

889
00:38:41,640 --> 00:38:43,740
actually didn't show anything strange

890
00:38:43,740 --> 00:38:47,640
yet but uh I'm still researching on date

891
00:38:47,640 --> 00:38:50,400
so on it so I think that something could

892
00:38:50,400 --> 00:38:54,740
come came out from that thank you

893
00:38:57,900 --> 00:38:59,640
okay I have one more question sure

894
00:38:59,640 --> 00:39:04,380
because your device by default exposes a

895
00:39:04,380 --> 00:39:07,859
Serial port and it's named USB valve do

896
00:39:07,859 --> 00:39:09,000
you think that

897
00:39:09,000 --> 00:39:11,160
some malware in the future can just

898
00:39:11,160 --> 00:39:14,820
detect that it's not an actual USB stick

899
00:39:14,820 --> 00:39:18,780
it's just a USB valve and then just not

900
00:39:18,780 --> 00:39:21,359
do any suspicious stuff the final yes

901
00:39:21,359 --> 00:39:23,339
that's why actually it's provided as

902
00:39:23,339 --> 00:39:25,560
open source so we can rebuild the

903
00:39:25,560 --> 00:39:28,079
firmware very easily just renaming with

904
00:39:28,079 --> 00:39:30,480
your own name and that's actually that's

905
00:39:30,480 --> 00:39:33,540
actually a point yes for sure uh you

906
00:39:33,540 --> 00:39:35,820
mean okay you can also hide the high the

907
00:39:35,820 --> 00:39:38,280
com port for example uh it's something

908
00:39:38,280 --> 00:39:40,320
that can be done for example yeah but

909
00:39:40,320 --> 00:39:43,020
it's actual point and I think that it

910
00:39:43,020 --> 00:39:46,560
could be easily solved by for one of the

911
00:39:46,560 --> 00:39:48,540
things that probably have to do is

912
00:39:48,540 --> 00:39:51,300
provide a kind of let's say firmware

913
00:39:51,300 --> 00:39:55,880
that randomize names of the disk itself

914
00:39:55,880 --> 00:39:59,640
or the comfort and so on so that's

915
00:39:59,640 --> 00:40:01,619
except that's a good idea for example

916
00:40:01,619 --> 00:40:05,420
okay thank you

917
00:40:09,720 --> 00:40:13,578
yeah there is one question

918
00:40:13,619 --> 00:40:16,440
uh have you considered to also have it

919
00:40:16,440 --> 00:40:18,180
works the other way around for example

920
00:40:18,180 --> 00:40:21,180
to detect any kind of bad USB sticks

921
00:40:21,180 --> 00:40:22,980
that expose something else than just

922
00:40:22,980 --> 00:40:25,200
mass storage

923
00:40:25,200 --> 00:40:28,380
so um so basically being USB host where

924
00:40:28,380 --> 00:40:30,000
you can plug in the USB stick you don't

925
00:40:30,000 --> 00:40:32,280
trust

926
00:40:32,280 --> 00:40:34,140
ah okay on the opposite side you mean

927
00:40:34,140 --> 00:40:37,980
yeah uh good point uh I think that's

928
00:40:37,980 --> 00:40:40,220
something that could be in this case

929
00:40:40,220 --> 00:40:45,300
it's a bit uh uh let's say

930
00:40:45,300 --> 00:40:48,540
since in this case the only way you can

931
00:40:48,540 --> 00:40:50,400
get infected by something like that is

932
00:40:50,400 --> 00:40:53,400
that is a more under your control I mean

933
00:40:53,400 --> 00:40:55,560
if you're going to put

934
00:40:55,560 --> 00:40:57,359
um USB drive which is infected in your

935
00:40:57,359 --> 00:41:00,359
system uh it's your system you know that

936
00:41:00,359 --> 00:41:02,220
maybe I don't know you have autoplay run

937
00:41:02,220 --> 00:41:04,740
or autoplay activated or whatever

938
00:41:04,740 --> 00:41:07,260
because you have control on the system

939
00:41:07,260 --> 00:41:08,820
where you have

940
00:41:08,820 --> 00:41:12,839
to put the device itself uh here I told

941
00:41:12,839 --> 00:41:15,480
it the other way around because it's

942
00:41:15,480 --> 00:41:17,099
actually something I don't have control

943
00:41:17,099 --> 00:41:20,520
to because I have to put my key into an

944
00:41:20,520 --> 00:41:22,980
unknown system where it's become more

945
00:41:22,980 --> 00:41:25,800
useful in my opinion but yeah in any

946
00:41:25,800 --> 00:41:28,320
case that's something that could be we

947
00:41:28,320 --> 00:41:32,180
can think about use case about that yeah

948
00:41:32,220 --> 00:41:34,399
foreign

949
00:41:36,320 --> 00:41:38,820
I've looked at the project a long time

950
00:41:38,820 --> 00:41:42,240
ago called face dancer have you perhaps

951
00:41:42,240 --> 00:41:44,700
looked at it also and freeze dancer I

952
00:41:44,700 --> 00:41:46,680
mean he faced answer yes yeah it's

953
00:41:46,680 --> 00:41:50,579
something which could be similar uh in

954
00:41:50,579 --> 00:41:52,320
terms that

955
00:41:52,320 --> 00:41:55,920
for instance is more uh framework in

956
00:41:55,920 --> 00:41:57,720
this case because it offers a lot of

957
00:41:57,720 --> 00:42:00,180
other functionalities the point here is

958
00:42:00,180 --> 00:42:02,160
to build something that you can bring in

959
00:42:02,160 --> 00:42:05,579
your keys and have it ready for uh

960
00:42:05,579 --> 00:42:07,200
whenever you want to to test something

961
00:42:07,200 --> 00:42:11,160
face dancer it requires a bit more

962
00:42:11,160 --> 00:42:13,380
um computer power let's say because it

963
00:42:13,380 --> 00:42:15,240
requires specific boards which are

964
00:42:15,240 --> 00:42:17,940
bigger than this for sure and it also

965
00:42:17,940 --> 00:42:19,740
offers a more more functionalities than

966
00:42:19,740 --> 00:42:22,040
this that's for sure so but yeah

967
00:42:22,040 --> 00:42:25,740
actually it's something that it's has

968
00:42:25,740 --> 00:42:27,380
the similar functionalities but this is

969
00:42:27,380 --> 00:42:30,060
built for specific usage like this one

970
00:42:30,060 --> 00:42:32,339
and to be also be carried out together

971
00:42:32,339 --> 00:42:33,540
with us

972
00:42:33,540 --> 00:42:35,880
thank you

973
00:42:35,880 --> 00:42:38,720
other questions

974
00:42:41,760 --> 00:42:43,740
okay so thank you again for the

975
00:42:43,740 --> 00:42:47,299
presentation thank you very much

