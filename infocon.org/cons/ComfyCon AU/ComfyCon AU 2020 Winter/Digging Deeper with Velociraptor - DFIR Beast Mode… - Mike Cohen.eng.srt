1
00:00:04,570 --> 00:00:09,160
Mike oh and Mike isn't a renowned

2
00:00:06,819 --> 00:00:10,780
digital forensic researcher and senior

3
00:00:09,160 --> 00:00:12,760
software engineer he's developed and

4
00:00:10,780 --> 00:00:14,349
supported leading open sourced EFI our

5
00:00:12,760 --> 00:00:17,080
projects for over two decades

6
00:00:14,349 --> 00:00:18,490
mike is our digital paleontologist and

7
00:00:17,080 --> 00:00:21,130
brings his years of experience to the

8
00:00:18,490 --> 00:00:22,959
role of principal developer velociraptor

9
00:00:21,130 --> 00:00:24,640
I do note however you are not a

10
00:00:22,960 --> 00:00:26,529
velociraptor like one of our speakers

11
00:00:24,640 --> 00:00:29,950
yesterday but that's okay we'll just

12
00:00:26,529 --> 00:00:31,509
we'll go with it all right Mike if you

13
00:00:29,950 --> 00:00:34,960
come on mute it's all yours

14
00:00:31,509 --> 00:00:37,240
oh thanks very much can you hear me is

15
00:00:34,960 --> 00:00:39,280
it working properly or yes we can hear

16
00:00:37,240 --> 00:00:40,690
you fantastic Lee of the NBN so you

17
00:00:39,280 --> 00:00:45,040
never know if it's gonna work on

18
00:00:40,690 --> 00:00:47,140
ourselves thank thanks for the

19
00:00:45,040 --> 00:00:48,640
opportunity so yeah I didn't have a lot

20
00:00:47,140 --> 00:00:50,530
of time to prepare so I just thought

21
00:00:48,640 --> 00:00:52,450
I'll just we just have a bit of a play

22
00:00:50,530 --> 00:00:54,040
with philosoraptor and I'll just give

23
00:00:52,450 --> 00:00:56,140
you a bit of an overview of what it is

24
00:00:54,040 --> 00:00:58,450
and and kind of what we're trying to do

25
00:00:56,140 --> 00:01:00,340
with it and and we went through a case

26
00:00:58,450 --> 00:01:02,950
study that's I mean I can't actually

27
00:01:00,340 --> 00:01:05,860
give real data but similar to a case

28
00:01:02,950 --> 00:01:09,550
that we were doing you know a few weeks

29
00:01:05,860 --> 00:01:12,250
before the world ended kind of thing so

30
00:01:09,550 --> 00:01:15,009
yeah basically so I didn't really

31
00:01:12,250 --> 00:01:16,570
prepare any slides because I just

32
00:01:15,010 --> 00:01:20,830
thought I'd just show you the interface

33
00:01:16,570 --> 00:01:24,158
and we just work through the just work

34
00:01:20,830 --> 00:01:27,370
through everything and so look you know

35
00:01:24,159 --> 00:01:29,080
I just kind of just wanted to show off

36
00:01:27,370 --> 00:01:31,360
some of the new features which include

37
00:01:29,080 --> 00:01:32,770
the notebook so I just kind of drew up a

38
00:01:31,360 --> 00:01:36,640
quick notebook which would be the

39
00:01:32,770 --> 00:01:38,949
introduction and so when we first saw

40
00:01:36,640 --> 00:01:41,380
Velociraptor and the reason that I

41
00:01:38,950 --> 00:01:44,560
titled it DF I our beast mode is because

42
00:01:41,380 --> 00:01:47,289
I just realized that the other day when

43
00:01:44,560 --> 00:01:49,680
I was using it that it just makes makes

44
00:01:47,290 --> 00:01:52,600
us so much more effective because we can

45
00:01:49,680 --> 00:01:55,600
operate if such a large scale it's just

46
00:01:52,600 --> 00:01:57,939
felt like you're you know playing at the

47
00:01:55,600 --> 00:01:59,559
top level of a game and winning right so

48
00:01:57,939 --> 00:02:01,149
that was pretty cool so I like this

49
00:01:59,560 --> 00:02:03,250
picture because this is kind of like the

50
00:02:01,150 --> 00:02:05,020
Velociraptor on the shark with the with

51
00:02:03,250 --> 00:02:07,270
a gun you know where we are really kind

52
00:02:05,020 --> 00:02:10,239
of doing well and then there was this K

53
00:02:07,270 --> 00:02:11,590
X CD which you know which sort of tells

54
00:02:10,239 --> 00:02:13,359
you you know the little syrup things

55
00:02:11,590 --> 00:02:14,769
gonna run towards you it's you know so

56
00:02:13,359 --> 00:02:16,569
many meters per seconds quickly

57
00:02:14,769 --> 00:02:17,700
calculate and so you know figure out how

58
00:02:16,569 --> 00:02:19,349
long you'll survive

59
00:02:17,700 --> 00:02:20,940
to think that you know this is the

60
00:02:19,349 --> 00:02:23,429
Velociraptor right you know chasing the

61
00:02:20,940 --> 00:02:25,170
bad guys across literally moving across

62
00:02:23,430 --> 00:02:26,760
the network and figuring out how fast

63
00:02:25,170 --> 00:02:29,760
can they move before we catch them kind

64
00:02:26,760 --> 00:02:33,049
of thing but anyway yeah so so the

65
00:02:29,760 --> 00:02:38,429
Velociraptor so basically this is the

66
00:02:33,050 --> 00:02:41,220
overview of the high high level overview

67
00:02:38,430 --> 00:02:44,160
of what it looks like and so we can see

68
00:02:41,220 --> 00:02:48,599
that you know we have I'm not sure it's

69
00:02:44,160 --> 00:02:50,579
this actually no okay so we can see that

70
00:02:48,599 --> 00:02:53,339
we have usually we deploy velociraptors

71
00:02:50,580 --> 00:02:55,260
server in the cloud on it on a VM

72
00:02:53,340 --> 00:02:57,180
instance and then we have a whole bunch

73
00:02:55,260 --> 00:03:00,209
of assets which are like laptops or

74
00:02:57,180 --> 00:03:02,819
endpoints or various things that that

75
00:03:00,209 --> 00:03:04,950
have the Velociraptor client agent

76
00:03:02,819 --> 00:03:07,589
installed and then and then you know it

77
00:03:04,950 --> 00:03:10,319
has a persistent CNC to the server and

78
00:03:07,590 --> 00:03:13,560
so we can actually query the endpoints

79
00:03:10,319 --> 00:03:15,690
on demands so because it's persistent we

80
00:03:13,560 --> 00:03:17,880
actually have because it's specific

81
00:03:15,690 --> 00:03:20,250
connection then as soon as we launch a

82
00:03:17,880 --> 00:03:22,410
query it just replies immediately

83
00:03:20,250 --> 00:03:24,480
because it's overall ready to go you

84
00:03:22,410 --> 00:03:27,000
know we don't have to pull there's no no

85
00:03:24,480 --> 00:03:29,880
kind of lag there and then we have the

86
00:03:27,000 --> 00:03:31,980
admin UI here which is how we basically

87
00:03:29,880 --> 00:03:35,870
use the application this is the

88
00:03:31,980 --> 00:03:44,069
application I'm using right now and so

89
00:03:35,870 --> 00:03:46,769
we can see how how that looks here okay

90
00:03:44,069 --> 00:03:51,119
so so this is kind of what it looks like

91
00:03:46,769 --> 00:03:53,310
I'm just going to just just say this now

92
00:03:51,120 --> 00:03:55,019
but I will just go into it more details

93
00:03:53,310 --> 00:03:57,540
the thing that makes philosoraptor

94
00:03:55,019 --> 00:03:59,489
really special is that it's really just

95
00:03:57,540 --> 00:04:03,030
a querying engine so there's a query

96
00:03:59,489 --> 00:04:05,579
language which is implemented by the

97
00:04:03,030 --> 00:04:08,700
front-end the server's the clients now

98
00:04:05,579 --> 00:04:10,980
all it basically just a query engine so

99
00:04:08,700 --> 00:04:12,540
it's very similar to SQL if you're

100
00:04:10,980 --> 00:04:15,090
familiar with SQL but essentially

101
00:04:12,540 --> 00:04:17,339
imagine that you can just simply launch

102
00:04:15,090 --> 00:04:19,260
a particular query on all your endpoints

103
00:04:17,339 --> 00:04:20,700
and get all your data so you can you can

104
00:04:19,260 --> 00:04:22,260
treat your entire deployment it's a

105
00:04:20,700 --> 00:04:23,870
database and that's not a new idea you

106
00:04:22,260 --> 00:04:27,020
know we have a host query and

107
00:04:23,870 --> 00:04:28,550
and other systems like that but you know

108
00:04:27,020 --> 00:04:30,710
but basically because these query

109
00:04:28,550 --> 00:04:32,780
language is very flexible then we are

110
00:04:30,710 --> 00:04:34,159
able to actually achieve quite a lot

111
00:04:32,780 --> 00:04:34,909
more and I'll go back into that a little

112
00:04:34,160 --> 00:04:36,590
bit later on

113
00:04:34,910 --> 00:04:39,440
so I'll just I'll just start off by

114
00:04:36,590 --> 00:04:40,820
having a look at that the top level the

115
00:04:39,440 --> 00:04:44,120
dashboard and as you could see the

116
00:04:40,820 --> 00:04:45,710
dashboard here is the main so this is

117
00:04:44,120 --> 00:04:48,320
just one of our training machines of

118
00:04:45,710 --> 00:04:51,080
course so it only has two two endpoints

119
00:04:48,320 --> 00:04:52,849
connected to it you know but we will

120
00:04:51,080 --> 00:04:54,710
typically have about you know five to

121
00:04:52,850 --> 00:04:57,710
ten thousand machines you know maybe

122
00:04:54,710 --> 00:05:01,280
connected to to a single server and so

123
00:04:57,710 --> 00:05:02,870
we just have these monitoring telemetry

124
00:05:01,280 --> 00:05:05,719
of the server so we can see you know how

125
00:05:02,870 --> 00:05:07,789
much memory is using and CPU load and

126
00:05:05,720 --> 00:05:09,919
things of that and over here we have you

127
00:05:07,789 --> 00:05:12,440
know how many clients are connected and

128
00:05:09,919 --> 00:05:14,719
over here we can see how many the users

129
00:05:12,440 --> 00:05:17,090
that are enabled on the system and we

130
00:05:14,720 --> 00:05:20,479
have different roles so you can see that

131
00:05:17,090 --> 00:05:23,060
Mike which is me and as you can see here

132
00:05:20,479 --> 00:05:24,199
from my login up here I'm the

133
00:05:23,060 --> 00:05:25,460
administrator so there are no

134
00:05:24,199 --> 00:05:27,530
restrictions but you can have an

135
00:05:25,460 --> 00:05:29,359
investigator analyst and so there's

136
00:05:27,530 --> 00:05:32,330
different types of roles that we can

137
00:05:29,360 --> 00:05:35,060
have so this is basically you know just

138
00:05:32,330 --> 00:05:37,219
kind of like an overview of the server

139
00:05:35,060 --> 00:05:39,349
just to see what it's doing but the real

140
00:05:37,220 --> 00:05:44,900
power of it is when we can essentially

141
00:05:39,349 --> 00:05:49,070
look at the different at the different

142
00:05:44,900 --> 00:05:50,960
endpoints and maintenance working and

143
00:05:49,070 --> 00:05:53,090
you can see that we have a number of

144
00:05:50,960 --> 00:05:55,580
different endpoints here and this is

145
00:05:53,090 --> 00:05:57,830
just one of our training machines we can

146
00:05:55,580 --> 00:06:00,680
label the moments so we can label and

147
00:05:57,830 --> 00:06:02,659
target them depending on labels but we

148
00:06:00,680 --> 00:06:05,090
basically have a persistent connection

149
00:06:02,660 --> 00:06:06,590
to this machine we can select it we said

150
00:06:05,090 --> 00:06:10,940
it is connected which means that we can

151
00:06:06,590 --> 00:06:13,219
essentially task it immediately if I go

152
00:06:10,940 --> 00:06:14,840
to the vql drill down that just tells me

153
00:06:13,220 --> 00:06:18,139
a bit more information about these

154
00:06:14,840 --> 00:06:20,270
endpoints so we collect continuous

155
00:06:18,139 --> 00:06:23,120
telemetry about the endpoint just

156
00:06:20,270 --> 00:06:26,359
because we want to know how how heavy

157
00:06:23,120 --> 00:06:29,240
the machine is on the endpoints how much

158
00:06:26,360 --> 00:06:30,590
memory we use how much CPU we use that

159
00:06:29,240 --> 00:06:32,000
kind of thing depending on what we're

160
00:06:30,590 --> 00:06:32,840
doing as you can see before I was doing

161
00:06:32,000 --> 00:06:35,419
some collections

162
00:06:32,840 --> 00:06:36,599
you know CPU load jumped up it collected

163
00:06:35,419 --> 00:06:38,039
some stuff and

164
00:06:36,600 --> 00:06:41,760
and then it went down so we can actually

165
00:06:38,040 --> 00:06:44,130
account for usage and we can see what

166
00:06:41,760 --> 00:06:47,340
user accounts are or on the system and

167
00:06:44,130 --> 00:06:49,350
so on now I'm going to show you this is

168
00:06:47,340 --> 00:06:51,840
the what we call the VFS view which is

169
00:06:49,350 --> 00:06:53,100
the virtual file system and it's very

170
00:06:51,840 --> 00:06:55,650
familiar because it's you know

171
00:06:53,100 --> 00:06:57,270
everybody's used explorer and it's very

172
00:06:55,650 --> 00:07:00,289
familiar to be able to just kind of

173
00:06:57,270 --> 00:07:02,700
browse the file system of the remote end

174
00:07:00,290 --> 00:07:05,910
and you can see that but this is really

175
00:07:02,700 --> 00:07:09,120
just a cached version cached information

176
00:07:05,910 --> 00:07:11,700
about the file system of the of the of

177
00:07:09,120 --> 00:07:13,620
the endpoint or the server so it doesn't

178
00:07:11,700 --> 00:07:15,840
have all the information if we want to

179
00:07:13,620 --> 00:07:19,230
get more information we can click this

180
00:07:15,840 --> 00:07:21,119
button here which is the refresh the

181
00:07:19,230 --> 00:07:22,290
information from the endpoints and it

182
00:07:21,120 --> 00:07:24,480
will just go out to the endpoint and

183
00:07:22,290 --> 00:07:26,490
grab a new file list e for example and

184
00:07:24,480 --> 00:07:28,740
then you've seen it just appeared right

185
00:07:26,490 --> 00:07:30,570
so it basically just refreshed that view

186
00:07:28,740 --> 00:07:32,520
of the server and so I can now go in

187
00:07:30,570 --> 00:07:34,830
there but of course you know each one of

188
00:07:32,520 --> 00:07:36,599
those would you know will not be feel

189
00:07:34,830 --> 00:07:38,900
that either you can even click the

190
00:07:36,600 --> 00:07:41,580
because you want to just recursively

191
00:07:38,900 --> 00:07:43,260
fill it all out but what actually

192
00:07:41,580 --> 00:07:45,630
happens when I collect when I click this

193
00:07:43,260 --> 00:07:47,820
button you saw that it fetched the data

194
00:07:45,630 --> 00:07:51,960
from the server if I just have a look at

195
00:07:47,820 --> 00:07:53,940
this menu collected artifacts and this

196
00:07:51,960 --> 00:07:55,859
basically has a list of what we call

197
00:07:53,940 --> 00:07:58,920
artifacts so I just wanted to introduce

198
00:07:55,860 --> 00:08:02,400
this concept of artifacts and you see

199
00:07:58,920 --> 00:08:04,350
that as I navigated through the VFS then

200
00:08:02,400 --> 00:08:06,630
I'm collecting an artifact called system

201
00:08:04,350 --> 00:08:08,460
via facelifts directory so that's

202
00:08:06,630 --> 00:08:10,710
essentially the artifact that is listing

203
00:08:08,460 --> 00:08:13,109
that directories is showing me the

204
00:08:10,710 --> 00:08:16,440
directory listing gets populated in the

205
00:08:13,110 --> 00:08:20,220
UI whenever I click on this thing and so

206
00:08:16,440 --> 00:08:22,200
as I go through it issues one of those

207
00:08:20,220 --> 00:08:24,030
for instance like you remember just

208
00:08:22,200 --> 00:08:25,740
before I clicked refresh when I was in

209
00:08:24,030 --> 00:08:27,780
the windows directory and so it

210
00:08:25,740 --> 00:08:30,810
essentially filled in these parameters

211
00:08:27,780 --> 00:08:32,939
collected is the artifact and off it

212
00:08:30,810 --> 00:08:37,200
goes right so so this is actually quite

213
00:08:32,940 --> 00:08:40,229
an interesting idea because everything

214
00:08:37,200 --> 00:08:43,349
in philosoraptor is just an artifact so

215
00:08:40,229 --> 00:08:46,050
if you can see in here for instance this

216
00:08:43,349 --> 00:08:48,080
is you know the request that went out we

217
00:08:46,050 --> 00:08:51,530
can see some vql

218
00:08:48,080 --> 00:08:54,200
and we can see the results and because

219
00:08:51,530 --> 00:08:56,240
everything is a query it's just a vql

220
00:08:54,200 --> 00:08:58,280
query then it returns results it's just

221
00:08:56,240 --> 00:09:03,110
like a database you're gonna get back

222
00:08:58,280 --> 00:09:04,790
rows and columns and the vql as we can

223
00:09:03,110 --> 00:09:09,890
see from the request this is the query

224
00:09:04,790 --> 00:09:12,740
here is actually it's determined by the

225
00:09:09,890 --> 00:09:16,670
artifact and then it just returns back a

226
00:09:12,740 --> 00:09:18,170
table of results so and then over here

227
00:09:16,670 --> 00:09:20,030
we have the log which is the query

228
00:09:18,170 --> 00:09:26,209
logger so I'll just get this out of the

229
00:09:20,030 --> 00:09:28,640
way and so over here we have the query

230
00:09:26,210 --> 00:09:31,160
log which is the list of basically

231
00:09:28,640 --> 00:09:32,960
messages log messages that are immediate

232
00:09:31,160 --> 00:09:36,140
by the endpoint as it's executing the

233
00:09:32,960 --> 00:09:38,750
query so he's telling you you know it

234
00:09:36,140 --> 00:09:41,900
started at this time it ran through it

235
00:09:38,750 --> 00:09:43,430
sends the response and of course because

236
00:09:41,900 --> 00:09:46,100
it's a query the response just it's just

237
00:09:43,430 --> 00:09:49,939
a bunch of rows that it sends back so it

238
00:09:46,100 --> 00:09:51,530
sends 107 rows in in this case and it

239
00:09:49,940 --> 00:09:54,890
just all went back so it's really just a

240
00:09:51,530 --> 00:09:56,780
CSV kind of going back and forth so this

241
00:09:54,890 --> 00:09:59,960
is kind of interesting and I just wanted

242
00:09:56,780 --> 00:10:02,089
to delve more into showing you what it

243
00:09:59,960 --> 00:10:03,860
looks like if we look at the this menu

244
00:10:02,090 --> 00:10:07,160
here which is the view artifact so I

245
00:10:03,860 --> 00:10:09,080
mentioned the VFS artifact and if we

246
00:10:07,160 --> 00:10:11,990
search for the VFS artifact me recall

247
00:10:09,080 --> 00:10:14,210
the system VFS this directory

248
00:10:11,990 --> 00:10:17,690
is the one we looked at in this view

249
00:10:14,210 --> 00:10:19,670
it's you can see the it's just like an

250
00:10:17,690 --> 00:10:22,490
inspector of the artifacts we can see

251
00:10:19,670 --> 00:10:25,430
the vql the query that's actually issued

252
00:10:22,490 --> 00:10:26,870
and and you know the query is just a

253
00:10:25,430 --> 00:10:28,430
straightforward query language I'm not

254
00:10:26,870 --> 00:10:30,920
going to go into too much detail here

255
00:10:28,430 --> 00:10:33,829
other than just you know just to point

256
00:10:30,920 --> 00:10:36,400
out that it's basically a select from

257
00:10:33,830 --> 00:10:38,480
and in a bunch of columns and and

258
00:10:36,400 --> 00:10:40,550
potentially a way of clothes and so

259
00:10:38,480 --> 00:10:42,740
forth and that's really cool because it

260
00:10:40,550 --> 00:10:45,290
means that essentially the the endpoint

261
00:10:42,740 --> 00:10:47,960
is very flexible we can actually change

262
00:10:45,290 --> 00:10:49,730
this we can add new queries we can

263
00:10:47,960 --> 00:10:51,350
reissue new careers on the fly and it

264
00:10:49,730 --> 00:10:57,200
will basically just do them all the time

265
00:10:51,350 --> 00:10:58,850
so I just wanted to now just to give you

266
00:10:57,200 --> 00:11:01,640
a bit of an example of how we would use

267
00:10:58,850 --> 00:11:05,450
these let's say that

268
00:11:01,640 --> 00:11:08,090
was an alert was for example an alert

269
00:11:05,450 --> 00:11:10,280
would have been launched on one of our

270
00:11:08,090 --> 00:11:13,370
other systems to say you know there's a

271
00:11:10,280 --> 00:11:14,600
suspicious incidents happening so I'm

272
00:11:13,370 --> 00:11:16,490
just going to switch over to the

273
00:11:14,600 --> 00:11:18,650
notebook and this is kind of a new

274
00:11:16,490 --> 00:11:22,490
feature notebooks are designed to help

275
00:11:18,650 --> 00:11:24,920
you document the investigative process

276
00:11:22,490 --> 00:11:26,810
and just work through the evidence and

277
00:11:24,920 --> 00:11:29,060
and we'll work through that because it's

278
00:11:26,810 --> 00:11:31,280
a nice exercise of how that works so

279
00:11:29,060 --> 00:11:34,160
let's let's have a look at this example

280
00:11:31,280 --> 00:11:36,470
here and imagine I mean this is a little

281
00:11:34,160 --> 00:11:39,260
bit redacted but it's very similar to an

282
00:11:36,470 --> 00:11:41,930
actual case that we did a little while

283
00:11:39,260 --> 00:11:44,060
ago you know there's an alert a

284
00:11:41,930 --> 00:11:47,089
different tool decided that you know

285
00:11:44,060 --> 00:11:50,060
there was a suspicious execution some

286
00:11:47,090 --> 00:11:52,880
command line actually launched this was

287
00:11:50,060 --> 00:11:55,760
actually a scheduled task that ran and

288
00:11:52,880 --> 00:11:57,980
it actually had installed the service

289
00:11:55,760 --> 00:11:59,830
and started it it's telling us this

290
00:11:57,980 --> 00:12:02,540
command morning service named whatever

291
00:11:59,830 --> 00:12:04,670
to automatically start and starts it so

292
00:12:02,540 --> 00:12:05,750
this is suspicious right so so now when

293
00:12:04,670 --> 00:12:08,300
we get this alert

294
00:12:05,750 --> 00:12:10,720
I would actually create a new notebook

295
00:12:08,300 --> 00:12:12,949
just click on this plus thing here and

296
00:12:10,720 --> 00:12:15,050
you know fill in the details

297
00:12:12,950 --> 00:12:16,970
I've done this before and then I

298
00:12:15,050 --> 00:12:19,069
typically you know maybe take a

299
00:12:16,970 --> 00:12:23,120
screenshot of this is what I do here of

300
00:12:19,070 --> 00:12:25,550
the of the of the case and the first

301
00:12:23,120 --> 00:12:28,100
thing that I'd like to see is you know

302
00:12:25,550 --> 00:12:29,630
obviously the we're going to look for

303
00:12:28,100 --> 00:12:32,210
scheduled tasks but there's also a bunch

304
00:12:29,630 --> 00:12:33,950
of execution and you know we might have

305
00:12:32,210 --> 00:12:35,270
some evidence of execution so there's a

306
00:12:33,950 --> 00:12:36,680
bunch of different evidence of

307
00:12:35,270 --> 00:12:38,390
executions of course we will do a lot

308
00:12:36,680 --> 00:12:40,910
more than that but let's say that in

309
00:12:38,390 --> 00:12:44,590
this example let's say that we just want

310
00:12:40,910 --> 00:12:47,300
to look for prefetch which is just one

311
00:12:44,590 --> 00:12:48,920
sort of over evidence of execution so

312
00:12:47,300 --> 00:12:52,939
the prefetch files so instead of

313
00:12:48,920 --> 00:12:59,030
thinking about oh you know maybe maybe

314
00:12:52,940 --> 00:13:01,970
we are let me just go here let me just

315
00:12:59,030 --> 00:13:03,860
look at here so here's so collected the

316
00:13:01,970 --> 00:13:06,620
least directory before but now I can

317
00:13:03,860 --> 00:13:09,980
actually click the prefetch so I would

318
00:13:06,620 --> 00:13:12,890
click a different artifact just select

319
00:13:09,980 --> 00:13:14,990
the prefetch in fact

320
00:13:12,890 --> 00:13:19,430
you know I might decide to choose some

321
00:13:14,990 --> 00:13:21,230
kind of a timeline add it right and the

322
00:13:19,430 --> 00:13:24,229
whole point of these artifacts is that

323
00:13:21,230 --> 00:13:25,760
the query itself is in a llamó file and

324
00:13:24,230 --> 00:13:28,160
it's built in so I don't need to really

325
00:13:25,760 --> 00:13:29,480
know what the query is you know it's

326
00:13:28,160 --> 00:13:31,250
been contributed it's an open source

327
00:13:29,480 --> 00:13:33,470
project so everybody can contribute to

328
00:13:31,250 --> 00:13:35,060
it and we build the community with Mo

329
00:13:33,470 --> 00:13:39,080
I'll show you a little bit later on how

330
00:13:35,060 --> 00:13:40,640
we exchange vql artifacts as well and

331
00:13:39,080 --> 00:13:42,830
you know artifacts take some you know

332
00:13:40,640 --> 00:13:45,290
parameters in here and we can see that's

333
00:13:42,830 --> 00:13:47,570
the source which is the actual query

334
00:13:45,290 --> 00:13:50,660
that's gonna run and then when we have a

335
00:13:47,570 --> 00:13:52,550
look we can actually set they after that

336
00:13:50,660 --> 00:13:54,890
before you know like let's say that you

337
00:13:52,550 --> 00:13:56,270
know we want to have we really want to

338
00:13:54,890 --> 00:13:59,930
know anything after you know maybe

339
00:13:56,270 --> 00:14:05,270
January 1st and you know we might

340
00:13:59,930 --> 00:14:07,939
actually here restrict the binary to SC

341
00:14:05,270 --> 00:14:10,550
though XE you know because it might be

342
00:14:07,940 --> 00:14:13,760
because we want to look at just evidence

343
00:14:10,550 --> 00:14:16,040
of execution of SC and then you know we

344
00:14:13,760 --> 00:14:18,110
just go ahead and do that thing and it

345
00:14:16,040 --> 00:14:19,819
basically immediately issues this thing

346
00:14:18,110 --> 00:14:21,800
to the end point and the end point is

347
00:14:19,820 --> 00:14:24,170
always connected so you just pick it up

348
00:14:21,800 --> 00:14:25,819
off we go it starts to run so if we have

349
00:14:24,170 --> 00:14:28,310
a look at the log then it says okay

350
00:14:25,820 --> 00:14:30,050
starting query execution essentially

351
00:14:28,310 --> 00:14:32,660
back twelve rows done so it's basically

352
00:14:30,050 --> 00:14:35,479
going through its look through all the

353
00:14:32,660 --> 00:14:39,439
PF files to prefetch files pause them

354
00:14:35,480 --> 00:14:42,370
out and then send back all the events

355
00:14:39,440 --> 00:14:46,070
that were you know occurred after

356
00:14:42,370 --> 00:14:48,050
January first and so when we look at the

357
00:14:46,070 --> 00:14:49,760
results here then you know we have a

358
00:14:48,050 --> 00:14:51,199
bunch of stuff but you see that we all

359
00:14:49,760 --> 00:14:54,230
we accidentally got some some other

360
00:14:51,200 --> 00:14:56,180
things here and some other things are

361
00:14:54,230 --> 00:14:58,490
not really super related but that's

362
00:14:56,180 --> 00:15:00,920
that's pretty good right so usually you

363
00:14:58,490 --> 00:15:03,110
know the prefetch would be hundreds and

364
00:15:00,920 --> 00:15:06,290
hundreds and hundreds of lines right so

365
00:15:03,110 --> 00:15:09,410
and you know in in this case we're

366
00:15:06,290 --> 00:15:11,750
coming back with only twelve rows and so

367
00:15:09,410 --> 00:15:15,860
it's much more targeted so let's go back

368
00:15:11,750 --> 00:15:17,570
to the notebook and what am I do is I

369
00:15:15,860 --> 00:15:19,370
might just open it here in another tab

370
00:15:17,570 --> 00:15:23,210
so I don't have to keep switching but

371
00:15:19,370 --> 00:15:25,760
but that's okay and you can see that not

372
00:15:23,210 --> 00:15:26,600
books are consisting of cells so each so

373
00:15:25,760 --> 00:15:28,819
this is very similar

374
00:15:26,600 --> 00:15:31,670
- something like Jupiter you just have

375
00:15:28,820 --> 00:15:34,010
cells and a cell can simply be marked

376
00:15:31,670 --> 00:15:36,439
down which is this kind of cell or it

377
00:15:34,010 --> 00:15:39,770
can actually be vql and with vql we can

378
00:15:36,440 --> 00:15:43,070
just write a query directly so I'm just

379
00:15:39,770 --> 00:15:45,079
going to write a query a vql query here

380
00:15:43,070 --> 00:15:47,240
and it comes up with sort of an editor

381
00:15:45,080 --> 00:15:49,520
so I can type the vql in and she's just

382
00:15:47,240 --> 00:15:52,550
to save time I actually I actually have

383
00:15:49,520 --> 00:15:55,790
it copy pasted from here so I'm just I'm

384
00:15:52,550 --> 00:15:56,150
just going to cheat a little bit this

385
00:15:55,790 --> 00:15:59,630
one

386
00:15:56,150 --> 00:16:01,370
oh this one this one is actually not to

387
00:15:59,630 --> 00:16:06,700
be curious it's the marketing part but

388
00:16:01,370 --> 00:16:09,700
I'll change it here sorry do that again

389
00:16:06,700 --> 00:16:09,700
okay

390
00:16:10,300 --> 00:16:16,180
just change it to markdown and this is

391
00:16:14,600 --> 00:16:20,630
basically looking at the prefetch

392
00:16:16,180 --> 00:16:22,489
results so just to save on time I copy

393
00:16:20,630 --> 00:16:26,060
pasted it but I would normally just type

394
00:16:22,490 --> 00:16:28,250
that in you know you would copy paste it

395
00:16:26,060 --> 00:16:35,510
from you know another thing this is a

396
00:16:28,250 --> 00:16:41,020
different kind actually and this and

397
00:16:35,510 --> 00:16:45,650
then I can just change the query where

398
00:16:41,020 --> 00:16:49,370
file name and this one is the red X

399
00:16:45,650 --> 00:16:51,490
match command and C dot exe and we'll

400
00:16:49,370 --> 00:16:57,050
just do it hat so it will be exactly

401
00:16:51,490 --> 00:16:58,820
exactly that for example and so what

402
00:16:57,050 --> 00:17:01,310
that does is it basically will restrict

403
00:16:58,820 --> 00:17:02,990
us and we can see like a time line type

404
00:17:01,310 --> 00:17:05,089
thing so so the idea with this notebook

405
00:17:02,990 --> 00:17:08,870
is that it's it just builds up this

406
00:17:05,089 --> 00:17:10,609
timeline of in in this case where we are

407
00:17:08,869 --> 00:17:12,530
working through our analysis so we can

408
00:17:10,609 --> 00:17:14,679
actually go and head and type the you

409
00:17:12,530 --> 00:17:17,060
know the reasoning for it and so forth

410
00:17:14,680 --> 00:17:20,300
and the next thing that I'm gonna do is

411
00:17:17,060 --> 00:17:21,740
that I know that this that this was a

412
00:17:20,300 --> 00:17:24,409
problem with scheduled tasks it

413
00:17:21,740 --> 00:17:26,569
scheduled tasks actually ran so I'm

414
00:17:24,410 --> 00:17:29,360
gonna do a hunt so this is the hunt

415
00:17:26,569 --> 00:17:32,210
manager the hunt is basically a way of

416
00:17:29,360 --> 00:17:34,310
running this schedule task everywhere

417
00:17:32,210 --> 00:17:35,600
this this artifact collection so we're

418
00:17:34,310 --> 00:17:37,399
going to gonna collect these from

419
00:17:35,600 --> 00:17:38,959
everywhere before we only just collected

420
00:17:37,400 --> 00:17:39,870
the prefetch from that one particular

421
00:17:38,960 --> 00:17:41,340
host

422
00:17:39,870 --> 00:17:42,809
let's say that you had five thousand

423
00:17:41,340 --> 00:17:44,520
machines with ten thousand machines and

424
00:17:42,809 --> 00:17:46,260
so we want to collect the scheduled

425
00:17:44,520 --> 00:17:49,260
tasks from all of these machines at once

426
00:17:46,260 --> 00:17:52,320
right so so we can just do the same

427
00:17:49,260 --> 00:17:54,960
thing but this time we're going to cut

428
00:17:52,320 --> 00:17:57,840
like this scheduled tasks which is this

429
00:17:54,960 --> 00:18:00,150
one so as you guys know scheduled tasks

430
00:17:57,840 --> 00:18:02,220
is is a directory in windows where there

431
00:18:00,150 --> 00:18:05,370
are XML files which basically tells you

432
00:18:02,220 --> 00:18:07,440
you know task scheduler so we're gonna

433
00:18:05,370 --> 00:18:10,860
collect this thing and it basically just

434
00:18:07,440 --> 00:18:12,690
pulls out it pulls out these files then

435
00:18:10,860 --> 00:18:15,659
pauses the XML out and just you know

436
00:18:12,690 --> 00:18:18,450
tells you all about them in this

437
00:18:15,660 --> 00:18:20,520
directory here so we're gonna do that as

438
00:18:18,450 --> 00:18:23,640
a hunt which basically means that it

439
00:18:20,520 --> 00:18:24,929
would be from all the hosts so we're

440
00:18:23,640 --> 00:18:29,790
gonna we're gonna give you the name

441
00:18:24,929 --> 00:18:32,730
description collect scheduled tasks and

442
00:18:29,790 --> 00:18:34,678
then we're gonna just run it everywhere

443
00:18:32,730 --> 00:18:38,130
and when we create a new haunt it's in

444
00:18:34,679 --> 00:18:40,559
the post state so we start it and then

445
00:18:38,130 --> 00:18:42,840
off we go right so all of the machines

446
00:18:40,559 --> 00:18:45,090
that are actually running you see one

447
00:18:42,840 --> 00:18:46,800
machine got scheduled and then two

448
00:18:45,090 --> 00:18:48,570
machines get scheduled once finished and

449
00:18:46,800 --> 00:18:49,830
you know this will just go through so

450
00:18:48,570 --> 00:18:51,720
typically it's something like this is

451
00:18:49,830 --> 00:18:53,309
very light so collecting all the

452
00:18:51,720 --> 00:18:56,910
scheduled tasks will take maybe about

453
00:18:53,309 --> 00:18:59,040
two minutes also to do like 5,000

454
00:18:56,910 --> 00:19:01,290
machines you know what's the 10,000

455
00:18:59,040 --> 00:19:02,790
machine it's pretty easy and so we can

456
00:19:01,290 --> 00:19:04,020
actually but but the problem is that if

457
00:19:02,790 --> 00:19:06,090
we look at the results you know there's

458
00:19:04,020 --> 00:19:07,679
gonna be a lot of results right so we

459
00:19:06,090 --> 00:19:10,530
can see you know there's gonna be you

460
00:19:07,679 --> 00:19:11,580
know a bunch of bunch of results here so

461
00:19:10,530 --> 00:19:13,440
we're gonna go back to the notebook

462
00:19:11,580 --> 00:19:14,760
because we're gonna we're gonna work

463
00:19:13,440 --> 00:19:18,120
through them a little bit better right

464
00:19:14,760 --> 00:19:19,860
so we're gonna so we're gonna need to

465
00:19:18,120 --> 00:19:22,169
post process this data a little bit

466
00:19:19,860 --> 00:19:26,490
because it's just too much of it so what

467
00:19:22,170 --> 00:19:29,370
I'm gonna do here is I'm going to go to

468
00:19:26,490 --> 00:19:31,500
this tail and add a cell from a haunt

469
00:19:29,370 --> 00:19:35,070
and essentially what this will do is it

470
00:19:31,500 --> 00:19:37,470
will create a new vql cell but just kind

471
00:19:35,070 --> 00:19:39,899
of fill it in with a vic UL that makes

472
00:19:37,470 --> 00:19:42,600
it easy for me to use so it's gonna

473
00:19:39,900 --> 00:19:44,880
we're gonna click that haunt and let me

474
00:19:42,600 --> 00:19:47,459
click okay you know then it's gonna

475
00:19:44,880 --> 00:19:50,850
basically just populate this vql with

476
00:19:47,460 --> 00:19:52,890
the right the right thing right so and

477
00:19:50,850 --> 00:19:53,610
it's got a limit of 10 so we're just

478
00:19:52,890 --> 00:19:58,160
gonna

479
00:19:53,610 --> 00:20:01,860
click Save we're just going to see the

480
00:19:58,160 --> 00:20:04,890
come on we're just going to see the

481
00:20:01,860 --> 00:20:19,919
first 10 results Oh

482
00:20:04,890 --> 00:20:21,900
the demo coders not working all right I

483
00:20:19,920 --> 00:20:23,190
think we have Ian to blame for that

484
00:20:21,900 --> 00:20:26,360
because I'm pretty sure he didn't

485
00:20:23,190 --> 00:20:29,130
sacrifice his bottle of rum today uh-huh

486
00:20:26,360 --> 00:20:31,949
yeah yeah I thought we'd have enough

487
00:20:29,130 --> 00:20:37,320
time from yesterday to cover is over

488
00:20:31,950 --> 00:20:40,440
today I'm very sorry no worries maybe

489
00:20:37,320 --> 00:20:46,530
the server went down and I hope not

490
00:20:40,440 --> 00:20:49,220
Oh cooter did he go down no oh it's all

491
00:20:46,530 --> 00:20:56,100
right he'll try again

492
00:20:49,220 --> 00:21:00,030
yeah try it so oh yeah here it is so

493
00:20:56,100 --> 00:21:02,100
okay so so though this is what it's

494
00:21:00,030 --> 00:21:08,250
supposed to look like well this this

495
00:21:02,100 --> 00:21:10,320
actually did it yeah so so what is gonna

496
00:21:08,250 --> 00:21:11,669
show us is it shows us the first 10 rows

497
00:21:10,320 --> 00:21:13,379
from the hunt and you can see that

498
00:21:11,669 --> 00:21:15,059
there's different columns it'll be like

499
00:21:13,380 --> 00:21:17,460
the full path the command and the

500
00:21:15,059 --> 00:21:21,330
arguments and there's actually more over

501
00:21:17,460 --> 00:21:28,380
here that's kind of cut off so I'm just

502
00:21:21,330 --> 00:21:33,540
going to fully qualified domain name the

503
00:21:28,380 --> 00:21:35,669
commands and the arguments so this first

504
00:21:33,540 --> 00:21:37,020
step is just to say I want to just see

505
00:21:35,669 --> 00:21:39,780
these three columns I don't care about

506
00:21:37,020 --> 00:21:41,639
the rest of them so so it's so it cuts

507
00:21:39,780 --> 00:21:44,040
it that off and you can see it's looking

508
00:21:41,640 --> 00:21:46,350
much better then I can say okay I'm only

509
00:21:44,040 --> 00:21:52,740
actually really interested in the ones

510
00:21:46,350 --> 00:21:55,830
where command matches cmd.exe because I

511
00:21:52,740 --> 00:21:58,470
know that essentially the scheduled task

512
00:21:55,830 --> 00:22:01,439
is running the command trail in order to

513
00:21:58,470 --> 00:22:03,630
install you know the SC and all that

514
00:22:01,440 --> 00:22:04,800
sort of stuff so I actually kind of

515
00:22:03,630 --> 00:22:06,070
cheated a little bit here because I

516
00:22:04,800 --> 00:22:08,560
created a schedule

517
00:22:06,070 --> 00:22:10,120
it just does a dir which is not much it

518
00:22:08,560 --> 00:22:13,270
malicious but imagine this was the

519
00:22:10,120 --> 00:22:15,429
malicious command but I'm just going

520
00:22:13,270 --> 00:22:17,490
through an example of an analysis of how

521
00:22:15,430 --> 00:22:20,230
you would do this is you basically now

522
00:22:17,490 --> 00:22:24,310
narrowed it down so you got like a

523
00:22:20,230 --> 00:22:25,480
subset of commands at launch we seem to

524
00:22:24,310 --> 00:22:28,000
do the exit but you see there's a whole

525
00:22:25,480 --> 00:22:30,220
bunch of false positive T this is this

526
00:22:28,000 --> 00:22:33,900
one's fine these are all ok

527
00:22:30,220 --> 00:22:39,760
so then I can just basically go and not

528
00:22:33,900 --> 00:22:42,820
you know command matches and this is the

529
00:22:39,760 --> 00:22:47,470
TS reg1 right which is actually ok

530
00:22:42,820 --> 00:22:49,000
ts reg1 so when I so then I filter them

531
00:22:47,470 --> 00:22:51,340
out again and so you can see how when I

532
00:22:49,000 --> 00:22:53,500
go through that I actually filter it out

533
00:22:51,340 --> 00:22:56,230
in our like oh you know this is this is

534
00:22:53,500 --> 00:22:57,540
the bad one this is the and so typically

535
00:22:56,230 --> 00:23:01,450
like we had a case where you have

536
00:22:57,540 --> 00:23:02,950
massive infection across laterally they

537
00:23:01,450 --> 00:23:04,630
propagated across the network and just

538
00:23:02,950 --> 00:23:06,970
install these scheduled tasks on

539
00:23:04,630 --> 00:23:09,520
literally thousands of machines and so

540
00:23:06,970 --> 00:23:12,010
it was actually impossible to really

541
00:23:09,520 --> 00:23:14,139
clean that up in any manner even if you

542
00:23:12,010 --> 00:23:15,940
had RTP access to the machines and you

543
00:23:14,140 --> 00:23:17,500
can't just lock login to thousands of

544
00:23:15,940 --> 00:23:19,510
machines and clean them up we just take

545
00:23:17,500 --> 00:23:22,330
a very long time and by the time you do

546
00:23:19,510 --> 00:23:25,000
that the bad guys can switch around and

547
00:23:22,330 --> 00:23:27,100
they can essentially remain persistent

548
00:23:25,000 --> 00:23:29,020
so so then we we inside a hey you know

549
00:23:27,100 --> 00:23:31,480
what let's use this dfi our mode and

550
00:23:29,020 --> 00:23:35,110
let's do some remediation right so let's

551
00:23:31,480 --> 00:23:37,990
actually see if we can clean up these

552
00:23:35,110 --> 00:23:39,100
scheduled tasks and so this is this is

553
00:23:37,990 --> 00:23:42,100
actually kind of an interesting idea

554
00:23:39,100 --> 00:23:44,620
right we can do a radiation at scale so

555
00:23:42,100 --> 00:23:46,959
there is this artifact and I'm just

556
00:23:44,620 --> 00:23:52,719
going to show you an example here real

557
00:23:46,960 --> 00:23:53,860
quick remediation so then we just

558
00:23:52,720 --> 00:23:55,990
quickly wrought this artifact

559
00:23:53,860 --> 00:23:58,750
essentially it's pretty simple it's got

560
00:23:55,990 --> 00:24:00,460
a bit of a PowerShell snippet and so we

561
00:23:58,750 --> 00:24:02,260
actually run through there's a bit of a

562
00:24:00,460 --> 00:24:04,600
complicated pql here I'm not going to go

563
00:24:02,260 --> 00:24:10,330
into too much but essentially the texts

564
00:24:04,600 --> 00:24:12,879
those those PowerShell artifacts those

565
00:24:10,330 --> 00:24:15,820
those scheduled tasks that match the

566
00:24:12,880 --> 00:24:17,470
correct arguments and command reg X that

567
00:24:15,820 --> 00:24:19,330
that we've identified as being the

568
00:24:17,470 --> 00:24:19,909
malicious one so it's going to be simply

569
00:24:19,330 --> 00:24:22,849
node

570
00:24:19,909 --> 00:24:24,739
and and then it's gonna be anything that

571
00:24:22,849 --> 00:24:27,319
runs you know dir is gonna be out you

572
00:24:24,739 --> 00:24:28,669
know evil command in this case and then

573
00:24:27,319 --> 00:24:30,859
it's so basically that's the same thing

574
00:24:28,669 --> 00:24:32,779
but then if it finds them then it also

575
00:24:30,859 --> 00:24:34,609
runs the special snippet to you know

576
00:24:32,779 --> 00:24:36,199
uninstaller and then finally there is

577
00:24:34,609 --> 00:24:37,489
this little button sits like really do

578
00:24:36,199 --> 00:24:38,929
it you know because we could do a whole

579
00:24:37,489 --> 00:24:41,329
bunch of damage if you just start

580
00:24:38,929 --> 00:24:43,039
uninstalling accidentally if these you

581
00:24:41,329 --> 00:24:44,059
know reg accents were too loose so we're

582
00:24:43,039 --> 00:24:45,619
just going to leave that off for a

583
00:24:44,059 --> 00:24:48,349
moment it's gonna be like a drawer on

584
00:24:45,619 --> 00:24:52,879
top thing and so I'm gonna go like dry

585
00:24:48,349 --> 00:24:54,708
Ron or remediation for example so that's

586
00:24:52,879 --> 00:24:57,589
what I'm gonna call my haunts and I'm

587
00:24:54,709 --> 00:25:00,739
gonna go ahead and do that and I have to

588
00:24:57,589 --> 00:25:02,509
you know start it and so now what I'm

589
00:25:00,739 --> 00:25:08,149
gonna do is it's gonna go off and do the

590
00:25:02,509 --> 00:25:10,459
same thing right but yeah so you see

591
00:25:08,149 --> 00:25:13,908
schedule two is gonna do it's gonna

592
00:25:10,459 --> 00:25:15,319
finish in just a short time and and then

593
00:25:13,909 --> 00:25:18,919
we're gonna have some results but this

594
00:25:15,319 --> 00:25:20,629
time I expect to only get the exact

595
00:25:18,919 --> 00:25:22,279
matches of those scheduled talks so

596
00:25:20,629 --> 00:25:23,899
before we just got all the scheduled

597
00:25:22,279 --> 00:25:25,729
tasks we had to post process and there

598
00:25:23,899 --> 00:25:27,589
are them there but now we got pretty

599
00:25:25,729 --> 00:25:30,259
good with our signatures in so we we

600
00:25:27,589 --> 00:25:33,198
actually got very tight right so I would

601
00:25:30,259 --> 00:25:35,239
like to see here no false positives and

602
00:25:33,199 --> 00:25:37,369
then when I'm comfortable without these

603
00:25:35,239 --> 00:25:40,249
false positives then I'm gonna go okay

604
00:25:37,369 --> 00:25:41,299
cool so now let's do it for real all

605
00:25:40,249 --> 00:25:43,399
right so now we're gonna do a

606
00:25:41,299 --> 00:25:46,069
remediation and this time you know we're

607
00:25:43,399 --> 00:25:48,498
going to click the so it's still gonna

608
00:25:46,069 --> 00:25:51,019
be a symbol you see and hear anything

609
00:25:48,499 --> 00:25:52,879
contains the dir and then I'm gonna go

610
00:25:51,019 --> 00:25:53,899
oh yeah I just want you to really do

611
00:25:52,879 --> 00:25:57,168
that yeah go ahead

612
00:25:53,899 --> 00:26:02,049
uh and then you know really do it really

613
00:25:57,169 --> 00:26:04,940
remediates okay and click click click

614
00:26:02,049 --> 00:26:07,879
yeah it's a little bit quick Keeley

615
00:26:04,940 --> 00:26:10,039
interface but anyway alright and off it

616
00:26:07,879 --> 00:26:11,629
goes and does the thing if we look at

617
00:26:10,039 --> 00:26:16,819
the overview again you know we could see

618
00:26:11,629 --> 00:26:18,708
the should see them being done okay and

619
00:26:16,819 --> 00:26:22,369
again it's it's actually going to

620
00:26:18,709 --> 00:26:24,349
actually run the powershell snippet you

621
00:26:22,369 --> 00:26:29,928
know for us and it's gonna show us it's

622
00:26:24,349 --> 00:26:32,329
the same thing again sorry should be

623
00:26:29,929 --> 00:26:33,650
should be but this time they should be

624
00:26:32,329 --> 00:26:38,899
completely you

625
00:26:33,650 --> 00:26:41,560
removed right so so now if we collect

626
00:26:38,900 --> 00:26:46,970
the scheduled tasks

627
00:26:41,560 --> 00:26:48,649
yeah next and then we're going to do a

628
00:26:46,970 --> 00:26:50,320
cross-check right so we're gonna just

629
00:26:48,650 --> 00:26:56,720
check to see that you know that worked

630
00:26:50,320 --> 00:26:58,429
okay so if we go start it go all right

631
00:26:56,720 --> 00:27:00,880
and it's gonna go off and do the thing

632
00:26:58,430 --> 00:27:04,460
and we should be able to see that

633
00:27:00,880 --> 00:27:05,690
schedule kind of schedules it's just so

634
00:27:04,460 --> 00:27:08,600
it now we're just collecting flat-out

635
00:27:05,690 --> 00:27:13,970
all the scheduled tasks and we should

636
00:27:08,600 --> 00:27:17,510
not be able to see any more these you

637
00:27:13,970 --> 00:27:18,980
know dir thing okay they should be gone

638
00:27:17,510 --> 00:27:21,170
but we don't know that because we have

639
00:27:18,980 --> 00:27:24,220
to post process that so we can do that

640
00:27:21,170 --> 00:27:30,070
again so we'll go back to our document

641
00:27:24,220 --> 00:27:33,020
our working documents no this one so

642
00:27:30,070 --> 00:27:35,720
over here we've got you know this this

643
00:27:33,020 --> 00:27:37,400
will be the first the first example then

644
00:27:35,720 --> 00:27:45,230
what I'm going to do is just have some

645
00:27:37,400 --> 00:27:50,990
markdown and a markdown itself from

646
00:27:45,230 --> 00:27:59,840
heart over mediate okay and then this

647
00:27:50,990 --> 00:28:02,290
one is what's going on with this go it's

648
00:27:59,840 --> 00:28:02,290
not working

649
00:28:13,290 --> 00:28:22,490
okay Edsel from hunt and we're gonna do

650
00:28:16,770 --> 00:28:25,050
this remediation one and when we save it

651
00:28:22,490 --> 00:28:27,390
we should see so this is just a way of

652
00:28:25,050 --> 00:28:29,190
us documenting it again we only want the

653
00:28:27,390 --> 00:28:31,190
full path to command the argument so if

654
00:28:29,190 --> 00:28:40,350
not all of it so we'll do that again

655
00:28:31,190 --> 00:28:42,060
full path come on arguments so and then

656
00:28:40,350 --> 00:28:43,949
you know in here I would go and actually

657
00:28:42,060 --> 00:28:45,990
add some explanations you know in a bit

658
00:28:43,950 --> 00:28:48,150
of markdown and explain you know what's

659
00:28:45,990 --> 00:28:51,960
going on here so this is the and and

660
00:28:48,150 --> 00:28:56,010
then finally we'll do the the other hand

661
00:28:51,960 --> 00:28:59,720
which is the cross-check and in this one

662
00:28:56,010 --> 00:28:59,720
it's going to be the same thing full

663
00:29:00,020 --> 00:29:12,240
path come on

664
00:29:08,930 --> 00:29:16,350
arguments and then we can do you know

665
00:29:12,240 --> 00:29:23,970
where come on so it's the same thing as

666
00:29:16,350 --> 00:29:25,050
before and we're gonna look to see and

667
00:29:23,970 --> 00:29:26,880
you can see already they're not there

668
00:29:25,050 --> 00:29:29,280
right so those dir ones they've been

669
00:29:26,880 --> 00:29:30,780
removed right so so that's that cross

670
00:29:29,280 --> 00:29:32,610
checks they have to say like yeah you

671
00:29:30,780 --> 00:29:33,720
know this is pretty good this is this is

672
00:29:32,610 --> 00:29:36,030
how it's supposed to be so this is

673
00:29:33,720 --> 00:29:38,730
basically you know what I call the if I

674
00:29:36,030 --> 00:29:42,360
are you know beast mode you basically

675
00:29:38,730 --> 00:29:45,350
just kind of like run this and this is

676
00:29:42,360 --> 00:29:47,939
you know you really really effective

677
00:29:45,350 --> 00:29:49,770
doing these kind of remediation I mean

678
00:29:47,940 --> 00:29:51,360
it's it's kind of risky because that's

679
00:29:49,770 --> 00:29:53,610
what we have to test it make sure that

680
00:29:51,360 --> 00:29:55,290
it's you know gonna do what we expect

681
00:29:53,610 --> 00:29:58,379
that it does but sometimes it's very

682
00:29:55,290 --> 00:30:03,240
effective when you have a lot of a lot

683
00:29:58,380 --> 00:30:04,440
of machines to clean up so so it's it's

684
00:30:03,240 --> 00:30:06,450
kind of interesting I just wanted to

685
00:30:04,440 --> 00:30:09,360
show you guys how to do the analysis and

686
00:30:06,450 --> 00:30:11,730
the processing this notebook feature is

687
00:30:09,360 --> 00:30:15,020
fairly recent it's only come up in the

688
00:30:11,730 --> 00:30:18,120
last couple of I think two releases and

689
00:30:15,020 --> 00:30:20,280
and the nice thing about it is that we

690
00:30:18,120 --> 00:30:22,949
actually can download it offline and

691
00:30:20,280 --> 00:30:25,230
create an export and that essentially

692
00:30:22,950 --> 00:30:26,320
makes a point in time export of that

693
00:30:25,230 --> 00:30:29,049
spread of that

694
00:30:26,320 --> 00:30:31,418
work sheet their notebook and so because

695
00:30:29,049 --> 00:30:33,730
normally in a TFR case things change

696
00:30:31,419 --> 00:30:35,830
really quickly and what we know today is

697
00:30:33,730 --> 00:30:37,899
not the same as what we know tomorrow we

698
00:30:35,830 --> 00:30:41,590
find out new information we building new

699
00:30:37,899 --> 00:30:43,389
knowledge and so that that notebook is

700
00:30:41,590 --> 00:30:45,370
kind of a living document of how we're

701
00:30:43,389 --> 00:30:46,719
doing and what we actually know at each

702
00:30:45,370 --> 00:30:49,268
point in time so you can produce

703
00:30:46,720 --> 00:30:51,669
multiple versions of it and these are

704
00:30:49,269 --> 00:31:00,629
actually supposed to be standalone so

705
00:30:51,669 --> 00:31:03,299
you can actually just open those the

706
00:31:00,629 --> 00:31:07,168
zoom is getting in the way too much and

707
00:31:03,299 --> 00:31:09,639
and you can see that it's basically uh

708
00:31:07,169 --> 00:31:11,379
it's it just lays it out a little bit

709
00:31:09,639 --> 00:31:13,029
differently so it's not not interactive

710
00:31:11,379 --> 00:31:14,620
but it's kind of like an adopt me you

711
00:31:13,029 --> 00:31:17,500
can print it and these kind of things so

712
00:31:14,620 --> 00:31:20,949
the markdown shows you it's kind of like

713
00:31:17,500 --> 00:31:23,379
a document kind of thing so so we can

714
00:31:20,950 --> 00:31:26,860
you know we can use that to kind of keep

715
00:31:23,379 --> 00:31:29,379
track of reasoning as we go along and do

716
00:31:26,860 --> 00:31:31,719
that sort of thing yeah so I think

717
00:31:29,379 --> 00:31:34,090
that's Connell we have time for today

718
00:31:31,720 --> 00:31:41,440
right because I mean we are kind of up

719
00:31:34,090 --> 00:31:43,779
to the time right um so yeah there is a

720
00:31:41,440 --> 00:31:46,419
lot a lot of functionality in here that

721
00:31:43,779 --> 00:31:50,679
can cover in 30 minutes you know there's

722
00:31:46,419 --> 00:31:54,460
five far too much so check out the

723
00:31:50,679 --> 00:31:57,070
website over here I forgot to show this

724
00:31:54,460 --> 00:31:59,169
is a github you could just jump on a

725
00:31:57,070 --> 00:32:01,990
github download it we have releases and

726
00:31:59,169 --> 00:32:03,879
so on there is a wiki as well and in the

727
00:32:01,990 --> 00:32:06,159
wiki we actually have these custom

728
00:32:03,879 --> 00:32:08,590
artifacts library where people can just

729
00:32:06,159 --> 00:32:11,590
exchange artifacts for you know

730
00:32:08,590 --> 00:32:13,840
different things that you know just

731
00:32:11,590 --> 00:32:15,220
knowledge sharing in a sense and then of

732
00:32:13,840 --> 00:32:18,100
course it's open source so you can

733
00:32:15,220 --> 00:32:20,080
obviously submit the artifacts is PRS so

734
00:32:18,100 --> 00:32:22,149
they can go back into mainline but these

735
00:32:20,080 --> 00:32:24,309
are basically something that you know

736
00:32:22,149 --> 00:32:27,399
people find useful and certain jobs and

737
00:32:24,309 --> 00:32:29,950
may not be for everyone but you know

738
00:32:27,399 --> 00:32:31,479
it's very useful so for instance this

739
00:32:29,950 --> 00:32:34,480
particular one I just just wanted to

740
00:32:31,480 --> 00:32:36,320
quickly say this is one we use on a

741
00:32:34,480 --> 00:32:37,640
previous job but we had

742
00:32:36,320 --> 00:32:40,879
domain admin account that was

743
00:32:37,640 --> 00:32:43,130
compromised and we wanted to know what

744
00:32:40,880 --> 00:32:44,300
actually did they do is that domain

745
00:32:43,130 --> 00:32:46,250
admin so of course you know you have

746
00:32:44,300 --> 00:32:49,970
your normal remote logging

747
00:32:46,250 --> 00:32:51,530
Taplow event logs but you know we

748
00:32:49,970 --> 00:32:53,840
decided we actually there's a lot of

749
00:32:51,530 --> 00:32:55,610
event logs that are actually not known

750
00:32:53,840 --> 00:32:57,470
and we have no idea because they're

751
00:32:55,610 --> 00:32:59,270
depending on the application and so you

752
00:32:57,470 --> 00:33:01,790
know there might be an application that

753
00:32:59,270 --> 00:33:04,820
that this user is actually like logged

754
00:33:01,790 --> 00:33:06,889
into on a remote machine like maybe

755
00:33:04,820 --> 00:33:09,470
exchange or whatever right but we just

756
00:33:06,890 --> 00:33:10,550
don't know so this particular artifact

757
00:33:09,470 --> 00:33:12,260
is you can see you know it basically

758
00:33:10,550 --> 00:33:15,260
looks through all the event logs it

759
00:33:12,260 --> 00:33:17,060
pauses them all out and then at the

760
00:33:15,260 --> 00:33:19,850
evening actually passes them out and

761
00:33:17,060 --> 00:33:23,210
then it basically looks for either the

762
00:33:19,850 --> 00:33:26,120
seeds or the name of the user and so if

763
00:33:23,210 --> 00:33:31,430
any event like you know we found like

764
00:33:26,120 --> 00:33:34,610
scheduled beats transfer or or even a

765
00:33:31,430 --> 00:33:36,590
chrome updates top thing you know just

766
00:33:34,610 --> 00:33:38,780
had that user name in it and if it's a

767
00:33:36,590 --> 00:33:40,510
domain admin that's not often used then

768
00:33:38,780 --> 00:33:42,800
this is really good because you can

769
00:33:40,510 --> 00:33:46,760
narrow it by time and you can basically

770
00:33:42,800 --> 00:33:48,350
find any kind of related event logs that

771
00:33:46,760 --> 00:33:50,330
from other applications that could

772
00:33:48,350 --> 00:33:52,820
actually give you clues as to what was

773
00:33:50,330 --> 00:33:55,280
going on with that without account once

774
00:33:52,820 --> 00:33:57,050
it's been compromised so it's really

775
00:33:55,280 --> 00:33:58,520
useful so this is kind of an example I

776
00:33:57,050 --> 00:34:00,560
like this because it's kind of an

777
00:33:58,520 --> 00:34:03,230
example of using something like a blunt

778
00:34:00,560 --> 00:34:04,550
sledgehammer kind of thing like Yarra to

779
00:34:03,230 --> 00:34:07,010
say you know we're just gonna take era

780
00:34:04,550 --> 00:34:08,810
it's just a big grab and just look for

781
00:34:07,010 --> 00:34:10,760
and it gives you really surgical results

782
00:34:08,810 --> 00:34:12,980
because once you get an event local to

783
00:34:10,760 --> 00:34:15,470
an event on entry not just the whole log

784
00:34:12,980 --> 00:34:18,199
but just that particular entry that it

785
00:34:15,469 --> 00:34:19,969
actually matches that ii-era see then it

786
00:34:18,199 --> 00:34:22,460
actually automatically becomes relevant

787
00:34:19,969 --> 00:34:24,439
and so you get like really good value

788
00:34:22,460 --> 00:34:27,260
out of that so that's that was an

789
00:34:24,440 --> 00:34:30,889
example of the flexibility that you can

790
00:34:27,260 --> 00:34:33,560
get by you know having these these

791
00:34:30,889 --> 00:34:34,960
forensic analysis on the endpoint okay

792
00:34:33,560 --> 00:34:38,630
so I think that's all I'll have time for

793
00:34:34,960 --> 00:34:41,060
thanks for watching and take care

794
00:34:38,630 --> 00:34:43,790
everyone I'll answer the questions in

795
00:34:41,060 --> 00:34:46,190
the slack as well after this thank you

796
00:34:43,790 --> 00:34:47,290
so much Mike these this presentation

797
00:34:46,190 --> 00:34:48,899
makes me really happy

798
00:34:47,290 --> 00:34:51,179
let's Raptors

799
00:34:48,899 --> 00:34:53,129
an amazing tool and we'll give you a

800
00:34:51,179 --> 00:34:55,770
little plug on the fact that you do do

801
00:34:53,129 --> 00:34:58,799
training I know you had an in-class

802
00:34:55,770 --> 00:35:00,359
training did that go ahead yeah we were

803
00:34:58,799 --> 00:35:02,130
actually super lucky because our

804
00:35:00,359 --> 00:35:04,740
training was like the week before

805
00:35:02,130 --> 00:35:07,410
everything went you know South so we

806
00:35:04,740 --> 00:35:10,430
just got it in and then and then you

807
00:35:07,410 --> 00:35:13,558
know yeah then everything went south so

808
00:35:10,430 --> 00:35:16,200
hopefully we'll we've got one scheduled

809
00:35:13,559 --> 00:35:19,140
in November so hopefully it will be okay

810
00:35:16,200 --> 00:35:21,538
by November I'm really hoping so well

811
00:35:19,140 --> 00:35:24,210
virtual still a really good option as

812
00:35:21,539 --> 00:35:26,270
we're learning this weekend but yeah and

813
00:35:24,210 --> 00:35:29,309
check out the I posted the medium blog

814
00:35:26,270 --> 00:35:31,460
in the chat channel as well because I've

815
00:35:29,309 --> 00:35:34,619
noticed you being pretty active recently

816
00:35:31,460 --> 00:35:37,940
cool thank you very much thanks Tim

817
00:35:34,619 --> 00:35:37,940
thanks so much for joining us

818
00:35:44,589 --> 00:35:46,650
you

