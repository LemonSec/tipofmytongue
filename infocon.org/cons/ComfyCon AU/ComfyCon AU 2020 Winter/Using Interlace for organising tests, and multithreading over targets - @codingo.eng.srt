1
00:00:05,649 --> 00:00:10,309
all right well in that case this is a

2
00:00:08,389 --> 00:00:13,879
good segue to move on to our next

3
00:00:10,309 --> 00:00:19,029
speaker so let me just stop my sharing

4
00:00:13,880 --> 00:00:22,310
and I will pull up his bio

5
00:00:19,029 --> 00:00:23,480
all right so Michael is the current

6
00:00:22,310 --> 00:00:25,160
leader global head of security

7
00:00:23,480 --> 00:00:25,689
operations and researcher enablement at

8
00:00:25,160 --> 00:00:28,310
bugcrowd

9
00:00:25,689 --> 00:00:29,720
he's an X pen tester and a builder open

10
00:00:28,310 --> 00:00:31,729
source and he's gonna be talking to us

11
00:00:29,720 --> 00:00:34,699
today about using interlace which looks

12
00:00:31,730 --> 00:00:35,330
like an awesome framework for developing

13
00:00:34,699 --> 00:00:39,979
applications

14
00:00:35,330 --> 00:00:41,479
take it away Michael yeah so I wanted to

15
00:00:39,979 --> 00:00:43,760
do this talk because I built this tool

16
00:00:41,479 --> 00:00:45,409
as you build most tools out of something

17
00:00:43,760 --> 00:00:47,870
I needed myself when I was a pen tester

18
00:00:45,409 --> 00:00:49,670
but it's very difficult to explain on a

19
00:00:47,870 --> 00:00:51,049
readme file and it's very difficult for

20
00:00:49,670 --> 00:00:52,460
me to explain the benefits quickly so I

21
00:00:51,049 --> 00:00:54,549
thought the best way to do this is to do

22
00:00:52,460 --> 00:00:58,339
ten-minute quick live demo of what it is

23
00:00:54,549 --> 00:01:00,260
the short explanation which as I said

24
00:00:58,339 --> 00:01:01,940
hard to explain is that when I was a pen

25
00:01:00,260 --> 00:01:03,920
tester there's a lot of stuff that you

26
00:01:01,940 --> 00:01:06,830
have to run on every engagement so SSL

27
00:01:03,920 --> 00:01:08,960
scan nikto and map a lot of files that

28
00:01:06,830 --> 00:01:10,700
you want to store so that you can refer

29
00:01:08,960 --> 00:01:12,320
back to them later and coverage points

30
00:01:10,700 --> 00:01:14,600
and if you get to an external engagement

31
00:01:12,320 --> 00:01:16,940
you get the added problem of I've now

32
00:01:14,600 --> 00:01:18,649
got 60 host 70 hosts however you've many

33
00:01:16,940 --> 00:01:20,570
you've got and I need to get data for

34
00:01:18,650 --> 00:01:22,130
all of them and so you can solve that

35
00:01:20,570 --> 00:01:23,750
problem with bash you can solve that

36
00:01:22,130 --> 00:01:25,280
problem with parallels but the

37
00:01:23,750 --> 00:01:27,080
frustration came for me when I was on

38
00:01:25,280 --> 00:01:29,390
site and I wanted to adjust that quickly

39
00:01:27,080 --> 00:01:31,100
or you know even when I was remote and I

40
00:01:29,390 --> 00:01:32,750
wanted to quickly expand on that or when

41
00:01:31,100 --> 00:01:34,699
I was working on bug bounty programs I

42
00:01:32,750 --> 00:01:37,190
wanted to create something and run it at

43
00:01:34,700 --> 00:01:39,020
scale quickly I'd be messing around in

44
00:01:37,190 --> 00:01:40,759
bash and it was never quick exercise so

45
00:01:39,020 --> 00:01:44,179
the reason I made Angelus is to try and

46
00:01:40,760 --> 00:01:46,909
make that a quicker thing to kind of

47
00:01:44,180 --> 00:01:48,920
jump right into that interlace if you

48
00:01:46,909 --> 00:01:51,470
pass it a target or a part target list

49
00:01:48,920 --> 00:01:55,850
you it creates variables off what you

50
00:01:51,470 --> 00:01:58,310
pass it so I can say SSL scan the target

51
00:01:55,850 --> 00:02:02,869
that I've provided and then I can also

52
00:01:58,310 --> 00:02:07,700
say look let's T let's say test dot text

53
00:02:02,870 --> 00:02:12,130
doing things live it's horrible target

54
00:02:07,700 --> 00:02:16,580
dot text man it'll give me SSL scan so

55
00:02:12,130 --> 00:02:18,200
everything within the quotes here for

56
00:02:16,580 --> 00:02:20,239
the command will run and the

57
00:02:18,200 --> 00:02:23,420
able to get replaced so you can do that

58
00:02:20,239 --> 00:02:25,580
and it'll create a threat so where this

59
00:02:23,420 --> 00:02:27,849
gets really interesting is that it can

60
00:02:25,580 --> 00:02:30,650
create threads for multiple commands so

61
00:02:27,849 --> 00:02:33,109
I'll let that run and there we go cool

62
00:02:30,650 --> 00:02:34,489
so you can see it's run T so we could

63
00:02:33,110 --> 00:02:36,019
see the results as we went or we could

64
00:02:34,489 --> 00:02:39,140
have just swallowed it out to a file and

65
00:02:36,019 --> 00:02:42,890
we've got our target name here with the

66
00:02:39,140 --> 00:02:45,048
SSL scan results which is great so let's

67
00:02:42,890 --> 00:02:46,488
say you just wanted the results you

68
00:02:45,049 --> 00:02:48,349
didn't want all the garbage that come up

69
00:02:46,489 --> 00:02:49,879
came up the top you can give it silent

70
00:02:48,349 --> 00:02:52,190
mode and it'll get rid of all the

71
00:02:49,879 --> 00:02:54,560
commands and then the other thing the

72
00:02:52,190 --> 00:02:56,269
bar at the bottom you can pass over to

73
00:02:54,560 --> 00:02:58,099
it and it'll cut out the bar and it'll

74
00:02:56,269 --> 00:03:00,250
just give you the results back which

75
00:02:58,099 --> 00:03:03,170
didn't run that time but that's great

76
00:03:00,250 --> 00:03:06,170
where this gets interesting is let's say

77
00:03:03,170 --> 00:03:07,130
you wanted to run it mmm all right now

78
00:03:06,170 --> 00:03:11,750
it's running there we go

79
00:03:07,130 --> 00:03:14,480
live demos this target command supports

80
00:03:11,750 --> 00:03:16,819
your target it's support site arranges

81
00:03:14,480 --> 00:03:22,040
it supports glob so glob being that like

82
00:03:16,819 --> 00:03:24,319
192 168 200 dot 1 to 255 for example so

83
00:03:22,040 --> 00:03:25,730
it supports all ranges of notation if

84
00:03:24,319 --> 00:03:27,530
there's a notation file that we've

85
00:03:25,730 --> 00:03:29,810
missed you can raise an issue on the

86
00:03:27,530 --> 00:03:31,670
repository and we'll add it but you can

87
00:03:29,810 --> 00:03:34,340
also pass it a list of targets so let's

88
00:03:31,670 --> 00:03:36,048
say and where this came from I had a

89
00:03:34,340 --> 00:03:37,489
client pass me a combination of glob

90
00:03:36,049 --> 00:03:39,170
inside of ranges on an external

91
00:03:37,489 --> 00:03:42,079
engagement I wanted to quickly run it

92
00:03:39,170 --> 00:03:44,388
over everything so we can say target

93
00:03:42,079 --> 00:03:48,170
stuff text file will test bug credit

94
00:03:44,389 --> 00:03:50,600
card and getting at i/o and we can now

95
00:03:48,170 --> 00:03:53,899
replace our T command with a command

96
00:03:50,600 --> 00:03:58,280
list and say for every target text we're

97
00:03:53,900 --> 00:04:00,980
gonna run the command SSL scan over the

98
00:03:58,280 --> 00:04:06,040
target and we'll see it so we get the

99
00:04:00,980 --> 00:04:09,018
file format of target SSL scan text and

100
00:04:06,040 --> 00:04:10,608
so what it does is it runs for each of

101
00:04:09,019 --> 00:04:11,989
the assets in the targets list on the

102
00:04:10,609 --> 00:04:14,239
side of range and it spins a thread up

103
00:04:11,989 --> 00:04:16,340
for each of them so by default it'll run

104
00:04:14,239 --> 00:04:18,289
ten threads but you can run more so it

105
00:04:16,339 --> 00:04:20,268
means both of those SSL scans have now

106
00:04:18,289 --> 00:04:22,190
run at the same time and I get them back

107
00:04:20,269 --> 00:04:24,260
much quicker so if I was running over a

108
00:04:22,190 --> 00:04:26,180
large cider range then I can just throw

109
00:04:24,260 --> 00:04:29,060
that in and forget about it and it'll

110
00:04:26,180 --> 00:04:30,380
manage it for me but then it gets a

111
00:04:29,060 --> 00:04:31,880
little bit more interesting because we

112
00:04:30,380 --> 00:04:33,860
can say well I

113
00:04:31,880 --> 00:04:36,320
to create a directory before I put

114
00:04:33,860 --> 00:04:42,770
everything in that so we can say command

115
00:04:36,320 --> 00:04:45,020
stop text and go negative P I think this

116
00:04:42,770 --> 00:04:46,969
I hate that it's negative P so we can

117
00:04:45,020 --> 00:04:49,640
say for the target

118
00:04:46,970 --> 00:04:50,660
you know scans folder and will write

119
00:04:49,640 --> 00:04:53,750
target

120
00:04:50,660 --> 00:04:54,860
SSL scanned text and I'll just go new

121
00:04:53,750 --> 00:04:58,070
line so you can see that because of the

122
00:04:54,860 --> 00:05:04,760
way my vin set up and then will run SSL

123
00:04:58,070 --> 00:05:07,090
scan negative target see what should it

124
00:05:04,760 --> 00:05:10,550
actually use vim commands it anyway T

125
00:05:07,090 --> 00:05:12,260
dot slash and bury my there is obviously

126
00:05:10,550 --> 00:05:13,520
better ways to write this I'm doing this

127
00:05:12,260 --> 00:05:17,030
for the sake of example but you could

128
00:05:13,520 --> 00:05:20,450
use variables if you wanted to but and

129
00:05:17,030 --> 00:05:25,880
that shouldn't be back live demos man

130
00:05:20,450 --> 00:05:27,670
always look I sacrifice that run to make

131
00:05:25,880 --> 00:05:30,560
sure it would not go

132
00:05:27,670 --> 00:05:33,770
that's so basically what this is gonna

133
00:05:30,560 --> 00:05:35,810
do it's gonna make a directory then run

134
00:05:33,770 --> 00:05:38,150
SSL scan but the problem is because this

135
00:05:35,810 --> 00:05:39,560
is multi-threaded it'll start a thread

136
00:05:38,150 --> 00:05:41,599
for each command in the file for each

137
00:05:39,560 --> 00:05:43,640
target in the file so we've added this

138
00:05:41,600 --> 00:05:45,200
ability in to interlace a prodigy SML

139
00:05:43,640 --> 00:05:46,250
and I built this together I think you

140
00:05:45,200 --> 00:05:47,599
would have seen his name come up in the

141
00:05:46,250 --> 00:05:50,390
banner there we came up with this

142
00:05:47,600 --> 00:05:52,460
concept of blockers so what a blocker

143
00:05:50,390 --> 00:05:54,289
will do it'll it'll say run everything

144
00:05:52,460 --> 00:05:55,760
above this command before you run the

145
00:05:54,290 --> 00:05:57,530
command below it and that way it ensures

146
00:05:55,760 --> 00:06:00,080
that the directory is built before the

147
00:05:57,530 --> 00:06:04,580
SSL scan runs but still manages the

148
00:06:00,080 --> 00:06:08,590
threads appropriately so it'll still go

149
00:06:04,580 --> 00:06:11,599
over our target list but we can now say

150
00:06:08,590 --> 00:06:13,070
use the commands list so it'll multi

151
00:06:11,600 --> 00:06:14,510
thread the targets and it'll multi

152
00:06:13,070 --> 00:06:16,010
thread the commands but it'll make sure

153
00:06:14,510 --> 00:06:18,170
it runs them in the right order because

154
00:06:16,010 --> 00:06:19,490
of that blocker so it'll now spin up the

155
00:06:18,170 --> 00:06:21,740
four commands because they're you know

156
00:06:19,490 --> 00:06:23,240
two commands per command less two

157
00:06:21,740 --> 00:06:25,070
targets so we've got four commands it

158
00:06:23,240 --> 00:06:26,390
could be six seven hundred of this it

159
00:06:25,070 --> 00:06:28,219
could be six seven thousand to this so

160
00:06:26,390 --> 00:06:30,070
it's some people have used this for bug

161
00:06:28,220 --> 00:06:33,530
bounties and run it at ridiculous scales

162
00:06:30,070 --> 00:06:36,380
and then you can see now for each target

163
00:06:33,530 --> 00:06:38,809
we've got a directory with our results

164
00:06:36,380 --> 00:06:42,110
except I wrote targets not target so it

165
00:06:38,810 --> 00:06:44,900
didn't spit out properly but more a much

166
00:06:42,110 --> 00:06:46,760
less well so

167
00:06:44,900 --> 00:06:49,989
if we wanted to we could also say you

168
00:06:46,760 --> 00:06:52,280
know that commands let's also then run

169
00:06:49,990 --> 00:06:54,950
nikto for and map for it so we'll just

170
00:06:52,280 --> 00:06:55,460
say n map target and we'll fix this why

171
00:06:54,950 --> 00:06:59,420
we're here

172
00:06:55,460 --> 00:07:02,289
is say just one port for speed reasons

173
00:06:59,420 --> 00:07:06,320
and we're going to output all to target

174
00:07:02,290 --> 00:07:10,240
scans targets and it'll do the end map

175
00:07:06,320 --> 00:07:12,320
annotation around that and so now I

176
00:07:10,240 --> 00:07:14,450
should control there we go

177
00:07:12,320 --> 00:07:16,490
cool so don't have run and map as well

178
00:07:14,450 --> 00:07:17,780
so for every every target that we pass

179
00:07:16,490 --> 00:07:19,490
it's going to make a director it's gonna

180
00:07:17,780 --> 00:07:22,429
run SSL scan an end map so we've now got

181
00:07:19,490 --> 00:07:24,950
a file for all of the you know must run

182
00:07:22,430 --> 00:07:26,750
each time we do an engagement and it you

183
00:07:24,950 --> 00:07:31,370
can see with the multi-threading it runs

184
00:07:26,750 --> 00:07:35,570
it quite quick so we can now go oh that

185
00:07:31,370 --> 00:07:37,880
was you can see we've got all of our end

186
00:07:35,570 --> 00:07:39,409
map output as well as our SSLC on and

187
00:07:37,880 --> 00:07:42,020
our junk as the celscan output from

188
00:07:39,410 --> 00:07:43,880
before so you get this you know

189
00:07:42,020 --> 00:07:48,219
sequential path of being able to quickly

190
00:07:43,880 --> 00:07:50,870
map out your results for an engagement

191
00:07:48,220 --> 00:07:52,970
so we've got blockers which allows us to

192
00:07:50,870 --> 00:07:54,650
block things it's not the most effective

193
00:07:52,970 --> 00:07:57,230
thing for multi-threading because we're

194
00:07:54,650 --> 00:07:58,609
now before these two threads start the

195
00:07:57,230 --> 00:08:00,560
threads above it must execute which

196
00:07:58,610 --> 00:08:01,760
isn't a big problem for making of a

197
00:08:00,560 --> 00:08:04,520
directory but it can be a problem

198
00:08:01,760 --> 00:08:06,349
otherwise so to come around that if we

199
00:08:04,520 --> 00:08:09,280
rewrite this as a secondary concept

200
00:08:06,350 --> 00:08:12,020
called block and so what a block does is

201
00:08:09,280 --> 00:08:16,159
for everything in the block and so it's

202
00:08:12,020 --> 00:08:18,560
and it's descriptive by the block and

203
00:08:16,160 --> 00:08:19,940
then after the colon you can name it so

204
00:08:18,560 --> 00:08:21,440
you can keep them organized you can have

205
00:08:19,940 --> 00:08:23,719
separated blocks and you can't embed

206
00:08:21,440 --> 00:08:26,450
them as well but the way a block works

207
00:08:23,720 --> 00:08:28,660
is that they can start two separated

208
00:08:26,450 --> 00:08:31,789
threads so we'll create two blocks here

209
00:08:28,660 --> 00:08:39,380
we'll create another one for SSL scan

210
00:08:31,790 --> 00:08:41,090
right so need to get better at typing so

211
00:08:39,380 --> 00:08:44,330
now if we had two separate threads we

212
00:08:41,090 --> 00:08:49,240
wanted to run we can if we wanted to run

213
00:08:44,330 --> 00:08:52,020
multiple and map commands in here well

214
00:08:49,240 --> 00:09:04,940
yeah I'll just type it

215
00:08:52,020 --> 00:09:08,040
sir Oh wrong so that one's done we'll

216
00:09:04,940 --> 00:09:09,570
say make directory and now like we might

217
00:09:08,040 --> 00:09:12,000
want to organize this even further so we

218
00:09:09,570 --> 00:09:13,500
might say target scans and we'll just

219
00:09:12,000 --> 00:09:16,290
say look everything there put it in an

220
00:09:13,500 --> 00:09:17,940
enmity and for here we might say okay

221
00:09:16,290 --> 00:09:19,740
well we want to put everything here

222
00:09:17,940 --> 00:09:23,520
because we might want to run test SSL as

223
00:09:19,740 --> 00:09:26,250
well as you know SSL scan and start to

224
00:09:23,520 --> 00:09:29,850
get organized which I won't do just for

225
00:09:26,250 --> 00:09:32,940
time for execution but we could if we

226
00:09:29,850 --> 00:09:39,480
wanted to add as many commands here as

227
00:09:32,940 --> 00:09:48,960
we wanted so see I really have to fix

228
00:09:39,480 --> 00:09:52,650
that okay okay so target actually so we

229
00:09:48,960 --> 00:09:54,180
should call that mr. so scared optics we

230
00:09:52,650 --> 00:10:00,600
should leave we'll leave that because

231
00:09:54,180 --> 00:10:02,729
then Matt's easy to identify so cool so

232
00:10:00,600 --> 00:10:04,470
now what we've got is two blocks so

233
00:10:02,730 --> 00:10:06,510
it'll make a directory for in map it'll

234
00:10:04,470 --> 00:10:08,640
run in map and if we wanted to run you

235
00:10:06,510 --> 00:10:09,689
know an end map nd a UDP scan or

236
00:10:08,640 --> 00:10:12,090
something else we can run it underneath

237
00:10:09,690 --> 00:10:13,890
and because it's multi-threaded if we

238
00:10:12,090 --> 00:10:16,410
had a quick end map scan and then a long

239
00:10:13,890 --> 00:10:17,910
nmap scan it'll spin both threads up so

240
00:10:16,410 --> 00:10:20,040
you'll get your quick results back and

241
00:10:17,910 --> 00:10:21,810
you could then wait whilst do the

242
00:10:20,040 --> 00:10:24,270
largest gain is running start to analyze

243
00:10:21,810 --> 00:10:26,219
those by it so you could name if you

244
00:10:24,270 --> 00:10:27,870
want it to and this is a concept you

245
00:10:26,220 --> 00:10:29,910
would see in recognizer if you've ever

246
00:10:27,870 --> 00:10:32,430
used it we could say this is the quick

247
00:10:29,910 --> 00:10:36,270
and we won't add it for this being a

248
00:10:32,430 --> 00:10:38,640
demo but we could say target so to do

249
00:10:36,270 --> 00:10:40,650
all ports and then output that as you

250
00:10:38,640 --> 00:10:43,260
know know just for the second example

251
00:10:40,650 --> 00:10:44,790
cut it short we could out as all so this

252
00:10:43,260 --> 00:10:46,590
these two threads are running parallel

253
00:10:44,790 --> 00:10:48,900
because they're in a block but the way

254
00:10:46,590 --> 00:10:50,760
that interlace works it'll make sure

255
00:10:48,900 --> 00:10:52,560
that they run in order so to make sure

256
00:10:50,760 --> 00:10:55,410
the quick scan runs before the detailed

257
00:10:52,560 --> 00:10:56,760
scan so you can review those results

258
00:10:55,410 --> 00:10:59,850
first it'll start to run the next one

259
00:10:56,760 --> 00:11:01,980
and it'll run both locks at the same

260
00:10:59,850 --> 00:11:03,570
time so whilst you're in map quick skin

261
00:11:01,980 --> 00:11:04,950
is running as the self scan is running

262
00:11:03,570 --> 00:11:05,730
as well depending on how many threads

263
00:11:04,950 --> 00:11:07,800
you've passed

264
00:11:05,730 --> 00:11:09,750
so it allows you to get as much time

265
00:11:07,800 --> 00:11:11,760
effectiveness as possible out of the run

266
00:11:09,750 --> 00:11:14,400
as well as start consuming the results

267
00:11:11,760 --> 00:11:16,670
so being a demo I will quickly check I

268
00:11:14,400 --> 00:11:18,720
don't think I've got a typo but I may do

269
00:11:16,670 --> 00:11:21,540
yeah so it's gonna make the directory

270
00:11:18,720 --> 00:11:26,760
for nmap pass out and match passes it's

271
00:11:21,540 --> 00:11:29,610
quick cool so again we'll pass both

272
00:11:26,760 --> 00:11:31,350
targets so we get all we could even you

273
00:11:29,610 --> 00:11:33,600
know specify that comma delimiter if we

274
00:11:31,350 --> 00:11:35,580
wanted to and we'll pass the command

275
00:11:33,600 --> 00:11:37,590
file and so you can see now it's created

276
00:11:35,580 --> 00:11:39,330
multiple threads but it is doing it in

277
00:11:37,590 --> 00:11:53,160
order except I did make a typo because

278
00:11:39,330 --> 00:11:54,210
it yeah my bad sure it's gone well don't

279
00:11:53,160 --> 00:11:55,770
you see where the type of it is that

280
00:11:54,210 --> 00:12:03,360
might well there we go

281
00:11:55,770 --> 00:12:04,710
Oh nope still gonna typo okay we got

282
00:12:03,360 --> 00:12:07,020
this essentially what it's going to do a

283
00:12:04,710 --> 00:12:08,580
block should run in order blocker will

284
00:12:07,020 --> 00:12:11,040
mean that everything before it runs

285
00:12:08,580 --> 00:12:12,690
first which might be a bug that's

286
00:12:11,040 --> 00:12:15,150
happening there which is great to find

287
00:12:12,690 --> 00:12:16,680
out now but it allows you to quickly

288
00:12:15,150 --> 00:12:18,900
create these command files and store

289
00:12:16,680 --> 00:12:20,729
them so if you're a pen tester you might

290
00:12:18,900 --> 00:12:24,209
have one for okay every time I run a web

291
00:12:20,730 --> 00:12:25,560
asset I stab adjuncts eeeh adjunct or il

292
00:12:24,210 --> 00:12:27,600
file where I had all of the stuff that

293
00:12:25,560 --> 00:12:29,969
you had to run for coverage to get your

294
00:12:27,600 --> 00:12:32,730
like SSL garbage and stuff like that

295
00:12:29,970 --> 00:12:34,050
into your report and so I'd make sure I

296
00:12:32,730 --> 00:12:35,520
ran that at the beginning the engagement

297
00:12:34,050 --> 00:12:37,740
so I had it all stored so when I got to

298
00:12:35,520 --> 00:12:40,170
reporting I never didn't have it on hand

299
00:12:37,740 --> 00:12:41,910
and then I had my findings dot IO which

300
00:12:40,170 --> 00:12:43,530
had you know ran the scripts that I

301
00:12:41,910 --> 00:12:45,390
wanted to run and did the more impactful

302
00:12:43,530 --> 00:12:47,459
in map scans I wanted to run and that

303
00:12:45,390 --> 00:12:49,740
would allow me to run at the beginning

304
00:12:47,460 --> 00:12:51,120
of engagement store everything and as I

305
00:12:49,740 --> 00:12:53,160
dig into my threads I've got everything

306
00:12:51,120 --> 00:12:54,720
organized and stored and it's always

307
00:12:53,160 --> 00:12:57,000
organized and stored in the same means

308
00:12:54,720 --> 00:13:01,500
because it's in a commands text I can

309
00:12:57,000 --> 00:13:03,150
define the folder structure as I want to

310
00:13:01,500 --> 00:13:04,650
here and every engagement I run it's

311
00:13:03,150 --> 00:13:07,560
going to be the same so if I come back a

312
00:13:04,650 --> 00:13:10,890
year from now and I pull off file

313
00:13:07,560 --> 00:13:12,420
storage an old test I know how its

314
00:13:10,890 --> 00:13:13,770
structured I know that I've got the data

315
00:13:12,420 --> 00:13:16,530
and if it's not there it means I didn't

316
00:13:13,770 --> 00:13:18,600
run the file as opposed to you know if

317
00:13:16,530 --> 00:13:19,430
your pen tester you and you don't do

318
00:13:18,600 --> 00:13:22,100
something like this you might

319
00:13:19,430 --> 00:13:24,380
go hey I'm gonna run SSL scan and I'll

320
00:13:22,100 --> 00:13:26,960
start to jump this into my notes and all

321
00:13:24,380 --> 00:13:29,180
of that and it's very quick then to get

322
00:13:26,960 --> 00:13:31,100
to a point where you might run it

323
00:13:29,180 --> 00:13:32,390
engagement ends you're now run it again

324
00:13:31,100 --> 00:13:33,680
against an asset whilst router scope

325
00:13:32,390 --> 00:13:35,149
which isn't a big problem for something

326
00:13:33,680 --> 00:13:37,010
like SSL scan but it could be a big

327
00:13:35,149 --> 00:13:38,330
problem for something like nmap and

328
00:13:37,010 --> 00:13:40,100
especially if you were working on an

329
00:13:38,330 --> 00:13:43,149
internal and you no longer have access

330
00:13:40,100 --> 00:13:45,620
to everything so the intention behind

331
00:13:43,149 --> 00:13:48,860
interlace is to create and I'll show you

332
00:13:45,620 --> 00:13:50,270
there's quite a lot more to this is to

333
00:13:48,860 --> 00:13:52,040
create a number of variables so we've

334
00:13:50,270 --> 00:13:53,930
used target here there's also an output

335
00:13:52,040 --> 00:13:57,230
variable there's variable as a protocol

336
00:13:53,930 --> 00:13:59,390
variable a whole variety of self reports

337
00:13:57,230 --> 00:14:01,100
as well so if you are pivoting you can

338
00:13:59,390 --> 00:14:02,959
use support pass through your command

339
00:14:01,100 --> 00:14:04,940
but the intention is to allow you to

340
00:14:02,959 --> 00:14:06,589
have support as many targets as you want

341
00:14:04,940 --> 00:14:08,810
and command lists to support a

342
00:14:06,589 --> 00:14:11,510
structured way of testing to store for

343
00:14:08,810 --> 00:14:14,270
the long term and even other use cases

344
00:14:11,510 --> 00:14:15,740
outside of pen testing I've used this on

345
00:14:14,270 --> 00:14:17,779
bug bounties where I've got standard

346
00:14:15,740 --> 00:14:19,730
stuff you know C n asp.net target I know

347
00:14:17,779 --> 00:14:21,860
what scripts I want to write when a run

348
00:14:19,730 --> 00:14:23,410
so I go to those scripts and I run the

349
00:14:21,860 --> 00:14:25,250
command file that encapsulates them all

350
00:14:23,410 --> 00:14:26,959
instead of having to write a bash script

351
00:14:25,250 --> 00:14:28,459
for everything I can just quickly put

352
00:14:26,959 --> 00:14:30,380
together an interlaced command file and

353
00:14:28,459 --> 00:14:32,060
fully owning like there are better ways

354
00:14:30,380 --> 00:14:34,490
to do this if you want to put the time

355
00:14:32,060 --> 00:14:37,010
in I mean you can use parallels you can

356
00:14:34,490 --> 00:14:38,390
write bash files you can write your own

357
00:14:37,010 --> 00:14:40,430
Python for it but the intention of

358
00:14:38,390 --> 00:14:42,140
interlace is to use it on the fly so

359
00:14:40,430 --> 00:14:43,760
we've written a command file you know

360
00:14:42,140 --> 00:14:46,910
we're in a 10-minute slot we've done it

361
00:14:43,760 --> 00:14:49,220
really quickly and we've got long-term

362
00:14:46,910 --> 00:14:51,500
storage of that so there's a lot of

363
00:14:49,220 --> 00:14:53,570
flexibility that comes in with that kind

364
00:14:51,500 --> 00:15:03,890
of intention that I think makes it a

365
00:14:53,570 --> 00:15:04,240
valuable tool so on that didn't work

366
00:15:03,890 --> 00:15:12,199
either

367
00:15:04,240 --> 00:15:14,270
and thank you very much Michael and

368
00:15:12,200 --> 00:15:16,339
thank you for the ASCII version of the

369
00:15:14,270 --> 00:15:17,779
logo I think we're going to be looking

370
00:15:16,339 --> 00:15:20,540
at whether we can put that on a t-shirt

371
00:15:17,779 --> 00:15:24,110
I suspect not just because of the fine

372
00:15:20,540 --> 00:15:26,630
work with the characters but our graphic

373
00:15:24,110 --> 00:15:29,810
designer is hot at work looking at if

374
00:15:26,630 --> 00:15:31,310
she can do that we've got some questions

375
00:15:29,810 --> 00:15:32,329
in the questions room so if you've got

376
00:15:31,310 --> 00:15:33,290
some time we'd love for you to be able

377
00:15:32,329 --> 00:15:35,899
to answer those options

378
00:15:33,290 --> 00:15:38,139
well awesome fantastic thank you very

379
00:15:35,899 --> 00:15:38,139
much

380
00:15:43,670 --> 00:15:45,729
you

